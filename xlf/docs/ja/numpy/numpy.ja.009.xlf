<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="c2768f400f9fa775eec700ef22029382a4ddca4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_is_contiguous(a)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array_is_contiguous(a)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db6a310321c047f65d9882fc29feac338c87a50c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_is_fortran(a)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array_is_fortran(a)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="953ba7e21af975ea81b30d4c33fd4a7adce6894e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_is_native(a)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array_is_native(a)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="066d4b8cdcb8c7699691e21dd8ad228c0968c041" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_like&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array_like&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a90fe7b4f1802dd6b3b18b849a68f1ca04b4e551" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_numdims(a)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array_numdims(a)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c760a320a1507b12193d08adba16407e3d8ee73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_size(a,i)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array_size(a,i)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d40034b537d7dbe6968ec21bba65ccf3bdeaa116" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_stride(a,i)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array_stride(a,i)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9df1c3170567b24a4101588e516a27a0e6a297eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_strides(a)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array_strides(a)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="662f70564b573e5c7df28feb8192cb8b0b167513" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_type(a)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array_type(a)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f4946d0979b0cbf6a6688a02173eaaf15ac82c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;astype&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;astype&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4b8361bf3502846763013c287286016127567a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attribute&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;attribute&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c9bed64aca648213b2da044191fb4b7b59795ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;axes: (2,) array_like&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;軸：（2、）array_like&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4bc7d20935a0a0cde1f8115defeca654b65804e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;axis: int&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;軸：整数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b4876344ae3e0c94bf575f1e317ebfcb488099a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;basis_name&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;basis_name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8be386373d73634c09bb2d6fd4bf24086f0d0942" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;big-endian&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;big-endian&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cdb462d02ff207ffaba36bc819604d3358bf18ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;broadcast&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;broadcast&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="927aa02768c5aa0026180697b70e1b25f4eefa70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;buf_size&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;buf_size&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="098ec963a1738d3d6178aa7d31b3aa55c00c8e56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;byteswap&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;byteswap&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cdc55e3d19ffe37c1f2046e0515fc2d76c544be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;conj&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;conj&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc5df2ac2a30ad3c74f3d9657a210947b59a5bc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;copy: bool, optional&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;コピー：bool、オプション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33f1a4bf6c2e44061b8e2cf7fe525d70a965606c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;copy&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;copy&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f2166ad5989736dda339eb112772d2add974957c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ctype&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ctype&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d3a4d22e980e49e275bd0bce49222c2e943c77d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;data&lt;/strong&gt; &amp;ndash; Should be &lt;code&gt;NULL&lt;/code&gt; or a pointer to an array of size &lt;em&gt;ntypes&lt;/em&gt; . This array may contain arbitrary extra-data to be passed to the corresponding loop function in the func array.</source>
          <target state="translated">&lt;strong&gt;data&lt;/strong&gt; &amp;ndash; &lt;code&gt;NULL&lt;/code&gt; またはサイズ&lt;em&gt;ntypesの&lt;/em&gt;配列へのポインタでなければなりません。この配列には、func配列の対応するループ関数に渡される任意の追加データが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="a8f9f2e7974119ce734e482d0516e99a552574cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;data&lt;/strong&gt; (optional)</source>
          <target state="translated">&lt;strong&gt;データ&lt;/strong&gt;（オプション）</target>
        </trans-unit>
        <trans-unit id="a0ae34e5c9b94655acd546ee8bc70c4ee3c4bc69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;decorator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;decorator&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49a7e4e2df493f808d1672a2923e223270d2ba1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;define_macros :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;define_macros：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5955fbdf9222727d6ccedee43e8f9bb2720a5208" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;depends :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;依存する：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d54f0468bec3b0ca9fc797bff0fd4ae627cd93c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;descr&lt;/strong&gt; (optional)</source>
          <target state="translated">&lt;strong&gt;descr&lt;/strong&gt;（オプション）</target>
        </trans-unit>
        <trans-unit id="6cbc887d6309f2e7370e1b22f618ac82c061c3ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dictionary&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;dictionary&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c11df31b38ab3f279445940c63c3c371c470aa4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dims&lt;/strong&gt; &amp;ndash; An output array that contains the shape of the array object. This array gives boundaries on any looping that will take place.</source>
          <target state="translated">&lt;strong&gt;dims&lt;/strong&gt; &amp;ndash;配列オブジェクトの形状を含む出力配列。この配列は、発生するループの境界を提供します。</target>
        </trans-unit>
        <trans-unit id="0565bf77c66a7942b68bb26429a0ca5549beab2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;doc&lt;/strong&gt; &amp;ndash; Allows passing in a documentation string to be stored with the ufunc. The documentation string should not contain the name of the function or the calling signature as that will be dynamically determined from the object and available when accessing the &lt;strong&gt;__doc__&lt;/strong&gt; attribute of the ufunc.</source>
          <target state="translated">&lt;strong&gt;doc&lt;/strong&gt; &amp;ndash;ドキュメント文字列を渡してufuncで保存できます。ドキュメント文字列には関数の名前や呼び出しシグネチャを含めないでください。これらはオブジェクトから動的に決定され、ufuncの&lt;strong&gt;__doc__&lt;/strong&gt;属性にアクセスするときに使用できます。</target>
        </trans-unit>
        <trans-unit id="0fa01e216e54d0981244da805959bd357d33aa58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dtype: data-type, optional&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;dtype：データ型、オプション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb177182115de958522b6d780f789034ba71bf12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;entropy&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;entropy&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="92e714613df5467e1e424a882cba16acca158f36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;export_symbols :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;export_symbols：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddd8345fcbb3815d9ac12ca6e57708a9e226dfd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;extra_compile_args :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;extra_compile_args：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c1deac678ae910eba565bf64557a5f38e58fa8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;extra_f77_compile_args :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;extra_f77_compile_args：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dddb20c43b32e2cb180a29732e25f626bc8b5da1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;extra_f90_compile_args :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;extra_f90_compile_args：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="964e30ba8701080189deb1fe9f3ceecdb498561c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;extra_link_args :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;extra_link_args：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ef9190ac4f60288803e8541d8d80a6b379a9010" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;extra_objects :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;extra_objects：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="035d229359e78cbf3e00b7c6436856b5354c86bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;f2py_options :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;f2py_options：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b89cb92170431ce569bcc31704fb94274fcae69a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;field&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;field&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0585128afb8e84a1c424cefe414be2157d0663e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fill in the missing value&lt;/strong&gt; with the value specified in &lt;code&gt;filling_values&lt;/code&gt; (default is &lt;code&gt;np.nan&lt;/code&gt; for float, -1 for int).</source>
          <target state="translated">&lt;strong&gt;不足している値&lt;/strong&gt;を &lt;code&gt;filling_values&lt;/code&gt; で指定された値で埋めます（デフォルトはfloatの場合は &lt;code&gt;np.nan&lt;/code&gt; 、intの場合は-1です）。</target>
        </trans-unit>
        <trans-unit id="0a5f29346dd6ed934af41fe4f9cf6ee37bc21199" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;flags, op_flags, op_dtypes, order, casting, buffersize (optional)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;flags、op_flags、op_dtypes、order、casting、buffersize（オプション）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b6b80bd9334bc3b009da340c900a6d6aaf63145a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;flattened&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;flattened&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5928c06805e109111daa252a10c3802b7d287a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;formats, names, titles, aligned, byteorder :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;フォーマット、名前、タイトル、整列、バイトオーダー：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="888597e8066cc66f40410dfe90b6d35f8a27db66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;func&lt;/strong&gt; &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;func&lt;/strong&gt; &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="b5c13150ccd33a5ba616c31a10b2285a91ed6331" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;func&lt;/strong&gt; &amp;ndash; Must to an array of length &lt;em&gt;ntypes&lt;/em&gt; containing &lt;a href=&quot;#c.PyUFuncGenericFunction&quot;&gt;&lt;code&gt;PyUFuncGenericFunction&lt;/code&gt;&lt;/a&gt; items.</source>
          <target state="translated">&lt;strong&gt;FUNC&lt;/strong&gt; -長さの配列にしなければならない&lt;em&gt;ntypes&lt;/em&gt;含有&lt;a href=&quot;#c.PyUFuncGenericFunction&quot;&gt; &lt;code&gt;PyUFuncGenericFunction&lt;/code&gt; の&lt;/a&gt;アイテムを。</target>
        </trans-unit>
        <trans-unit id="cbf1592592e6c9ff476ce222410abd6398e5b814" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;generate_state&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;generate_state&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02c6698bb4dfda65e7eb1dc8d2c16b809b2bef77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;has_cxx_sources&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;has_cxx_sources&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2fc10315a0b763529333445aa8cde1c289955833" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;has_f2py_sources&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;has_f2py_sources&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d30cd496a52ec13d28af4bf1418ce34dab83e189" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;homogenous&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;homogenous&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18027649cbb02a9f2b42931202392a187d503190" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;identity&lt;/strong&gt; &amp;ndash; Either &lt;a href=&quot;#c.PyUFunc_One&quot;&gt;&lt;code&gt;PyUFunc_One&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.PyUFunc_Zero&quot;&gt;&lt;code&gt;PyUFunc_Zero&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.PyUFunc_MinusOne&quot;&gt;&lt;code&gt;PyUFunc_MinusOne&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#c.PyUFunc_None&quot;&gt;&lt;code&gt;PyUFunc_None&lt;/code&gt;&lt;/a&gt;. This specifies what should be returned when an empty array is passed to the reduce method of the ufunc. The special value &lt;a href=&quot;#c.PyUFunc_IdentityValue&quot;&gt;&lt;code&gt;PyUFunc_IdentityValue&lt;/code&gt;&lt;/a&gt; may only be used with the &lt;a href=&quot;#c.PyUFunc_FromFuncAndDataAndSignatureAndIdentity&quot;&gt;&lt;code&gt;PyUFunc_FromFuncAndDataAndSignatureAndIdentity&lt;/code&gt;&lt;/a&gt; method, to allow an arbitrary python object to be used as the identity.</source>
          <target state="translated">&lt;strong&gt;アイデンティティ&lt;/strong&gt;&amp;ndash; &lt;a href=&quot;#c.PyUFunc_One&quot;&gt; &lt;code&gt;PyUFunc_One&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.PyUFunc_Zero&quot;&gt; &lt;code&gt;PyUFunc_Zero&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.PyUFunc_MinusOne&quot;&gt; &lt;code&gt;PyUFunc_MinusOne&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#c.PyUFunc_None&quot;&gt; &lt;code&gt;PyUFunc_None&lt;/code&gt; の&lt;/a&gt;いずれか。これは、空の配列がufuncのreduceメソッドに渡されたときに返されるものを指定します。特別な値&lt;a href=&quot;#c.PyUFunc_IdentityValue&quot;&gt; &lt;code&gt;PyUFunc_IdentityValue&lt;/code&gt; &lt;/a&gt;は、任意のpythonオブジェクトをIDとして使用できるようにするために、&lt;a href=&quot;#c.PyUFunc_FromFuncAndDataAndSignatureAndIdentity&quot;&gt; &lt;code&gt;PyUFunc_FromFuncAndDataAndSignatureAndIdentity&lt;/code&gt; &lt;/a&gt;メソッドでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="dd3179834bd17c726ea52675440c456b010e1c23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;identity&lt;/strong&gt; &amp;ndash; Either &lt;code&gt;PyUFunc_One&lt;/code&gt;, &lt;code&gt;PyUFunc_Zero&lt;/code&gt;, &lt;code&gt;PyUFunc_MinusOne&lt;/code&gt;, or &lt;code&gt;PyUFunc_None&lt;/code&gt;. This specifies what should be returned when an empty array is passed to the reduce method of the ufunc. The special value &lt;code&gt;PyUFunc_IdentityValue&lt;/code&gt; may only be used with the &lt;code&gt;PyUFunc_FromFuncAndDataAndSignatureAndIdentity&lt;/code&gt; method, to allow an arbitrary python object to be used as the identity.</source>
          <target state="translated">&lt;strong&gt;identity&lt;/strong&gt; &amp;ndash; &lt;code&gt;PyUFunc_One&lt;/code&gt; 、 &lt;code&gt;PyUFunc_Zero&lt;/code&gt; 、 &lt;code&gt;PyUFunc_MinusOne&lt;/code&gt; 、または &lt;code&gt;PyUFunc_None&lt;/code&gt; のいずれか。これは、空の配列がufuncのreduceメソッドに渡されたときに何を返すかを指定します。特別な値 &lt;code&gt;PyUFunc_IdentityValue&lt;/code&gt; は、 &lt;code&gt;PyUFunc_FromFuncAndDataAndSignatureAndIdentity&lt;/code&gt; メソッドでのみ使用でき、任意のpythonオブジェクトをIDとして使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="8a1e6f9c6bedd7c0a821e3fd3f51c5552298e9be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;identity_value&lt;/strong&gt; &amp;ndash; The identity for the new gufunc. Must be passed as &lt;code&gt;NULL&lt;/code&gt; unless the &lt;code&gt;identity&lt;/code&gt; argument is &lt;code&gt;PyUFunc_IdentityValue&lt;/code&gt;. Setting it to NULL is equivalent to calling PyUFunc_FromFuncAndDataAndSignature.</source>
          <target state="translated">&lt;strong&gt;identity_value&lt;/strong&gt; &amp;ndash;新しいgufuncのID。 &lt;code&gt;identity&lt;/code&gt; 引数が &lt;code&gt;PyUFunc_IdentityValue&lt;/code&gt; でない限り、 &lt;code&gt;NULL&lt;/code&gt; として渡す必要があります。NULLに設定することは、PyUFunc_FromFuncAndDataAndSignatureを呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="f060fd85a67e8fa6f5385c230c69d426bcbefcb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;immutable&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;immutable&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36edf017e64ecae766dc4e57ede9fca86760db06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;include_dirs :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;include_dirs：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69079d90ef1851e2f0bbb8bc6ce5067ce4982a9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;index&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f40be9aef90d86194ef1b023c4e7a29cccc6904" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;indices: ndarray (Ni&amp;hellip;, J, Nk&amp;hellip;)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;インデックス：ndarray（Ni&amp;hellip;、J、Nk&amp;hellip;）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="672dc89f055b86127c6f6796e85ddf32c292e319" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;instance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;instance&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="634b80ca54d97d3cd01f1371e38aa4c38a1d83b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;is_array(a)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;is_array(a)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cebead53ad7936fde41c4df1b0b05ae13f69b20c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;itemsize&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;itemsize&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35e4443e72767971fbbb48fb4218cca1c1b166d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;itemsize&lt;/strong&gt; &amp;ndash; This argument is only needed when &lt;em&gt;typenum&lt;/em&gt; represents a flexible array. Otherwise it should be 0.</source>
          <target state="translated">&lt;strong&gt;itemsize&lt;/strong&gt; &amp;ndash;この引数は、&lt;em&gt;typenum&lt;/em&gt;がフレキシブル配列を表す場合にのみ必要です。それ以外の場合は0にする必要があります。</target>
        </trans-unit>
        <trans-unit id="c71a0743f3d06b78099dc60de2986e4f3fd7086c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;iterable&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;iterable&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f50ca43f39f9a1842ccc2d9cdc9242f3bd9da8c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;itviews&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;itviews&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="828ac31a43c5ba6ec65cf9ab15d50a34e9df023b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;language :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;言語：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ab02243e53211a35952575d8bd6d6ed8f024613" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;libraries :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ライブラリ：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a11e2af60b0dc229f509feb5ad42488e6d76f24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;library_dirs :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;library_dirs：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="141fafaccc619483b292ca17a5affe6854d5a601" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;list&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9680e95a28c12fa913dcff0a8fae4714ad19624" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;little-endian&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;little-endian&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d690ddba1121206ef135e575646860629e54002" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;lock: threading.Lock&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ロック：threading.Lock&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7fd21a4ac4ae5bf7df89f1f49f52d34168f258e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;make_contiguous()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;make_contiguous()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db18372e2588ac9844aca6b05d83ef0cf7ecd9ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;make_fortran()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;make_fortran()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d237aebb168d4720a56f296748eb0fbab5cc3ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mask&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;mask&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0ab325e98f928eb098b97ce112345d1558b1f91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mask&lt;/strong&gt; (optional)</source>
          <target state="translated">&lt;strong&gt;マスク&lt;/strong&gt;（オプション）</target>
        </trans-unit>
        <trans-unit id="999ba87a2442a12aa3f8d3fe0bf5b4418509aa6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;masked array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;マスクされた配列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c95189528a090f0546a43aa4c5fda6b70455c598" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mesh-grid `ndarrays` all of the same dimensions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;すべて同じ次元のメッシュグリッド「ndarrays」&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df071b6932b7854a11acba837d226aca010ac7fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mesh-grid&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;mesh-grid&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="beb97c0a0ed841f3938cd4c4cd5036054c8e73f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;metadata&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;metadata&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddbdaf70a9fbc7624cbca266070cf536f522b169" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;method&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4067678d5c85d38460927954641f02c2477105fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;module_dirs :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;module_dirs：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="337c5666bb65575a91a43a44c371e440fd86ffec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;multi_index&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;multi_index&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e23b88472a787bbf79a674ed05032361d77038b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;n_children_spawned&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;n_children_spawned&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8bdba194dded2729c390b530aba12dc941b4e9c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; &amp;ndash; The name for the ufunc as a &lt;code&gt;NULL&lt;/code&gt; terminated string. Specifying a name of &amp;lsquo;add&amp;rsquo; or &amp;lsquo;multiply&amp;rsquo; enables a special behavior for integer-typed reductions when no dtype is given. If the input type is an integer (or boolean) data type smaller than the size of the &lt;a href=&quot;../arrays.scalars#numpy.int_&quot;&gt;&lt;code&gt;numpy.int_&lt;/code&gt;&lt;/a&gt; data type, it will be internally upcast to the &lt;a href=&quot;../arrays.scalars#numpy.int_&quot;&gt;&lt;code&gt;numpy.int_&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;../arrays.scalars#numpy.uint&quot;&gt;&lt;code&gt;numpy.uint&lt;/code&gt;&lt;/a&gt;) data type.</source>
          <target state="translated">&lt;strong&gt;名前&lt;/strong&gt;-としてufuncの名前 &lt;code&gt;NULL&lt;/code&gt; 終端文字列。'add'または 'multiply'の名前を指定すると、dtypeが指定されていない場合に、整数型の縮小の特別な動作が有効になります。入力型が&lt;a href=&quot;../arrays.scalars#numpy.int_&quot;&gt; &lt;code&gt;numpy.int_&lt;/code&gt; &lt;/a&gt;データ型のサイズよりも小さい整数（またはブール）データ型である場合、内部的に&lt;a href=&quot;../arrays.scalars#numpy.int_&quot;&gt; &lt;code&gt;numpy.int_&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;../arrays.scalars#numpy.uint&quot;&gt; &lt;code&gt;numpy.uint&lt;/code&gt; &lt;/a&gt;）データ型にアップキャストされます。</target>
        </trans-unit>
        <trans-unit id="7d67c3bdc6dc6b0ea133b1cf113b45f0febfa50f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; &amp;ndash; The name for the ufunc as a &lt;code&gt;NULL&lt;/code&gt; terminated string. Specifying a name of &amp;lsquo;add&amp;rsquo; or &amp;lsquo;multiply&amp;rsquo; enables a special behavior for integer-typed reductions when no dtype is given. If the input type is an integer (or boolean) data type smaller than the size of the &lt;code&gt;numpy.int_&lt;/code&gt; data type, it will be internally upcast to the &lt;code&gt;numpy.int_&lt;/code&gt; (or &lt;code&gt;numpy.uint&lt;/code&gt;) data type.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; &amp;ndash; &lt;code&gt;NULL&lt;/code&gt; 文字で終了する文字列としてのufuncの名前。'add'または 'multiply'の名前を指定すると、dtypeが指定されていない場合の整数型縮小の特別な動作が有効になります。入力タイプが &lt;code&gt;numpy.int_&lt;/code&gt; データタイプのサイズより小さい整数（またはブール）データタイプである場合、それは &lt;code&gt;numpy.int_&lt;/code&gt; （または &lt;code&gt;numpy.uint&lt;/code&gt; ）データタイプに内部的にアップキャストされます。</target>
        </trans-unit>
        <trans-unit id="2ba83ab646731524d208bd821ddddf41638f6efe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nd&lt;/strong&gt; &amp;ndash; The dimensionality of the array (1, 2, or 3).</source>
          <target state="translated">&lt;strong&gt;nd&lt;/strong&gt; &amp;ndash;配列の次元（1、2、または3）。</target>
        </trans-unit>
        <trans-unit id="dbe66f521f662edf45a5ee4cfd7a4aad97616b02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ndarray or scalar&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ndarrayまたはスカラー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67e997557039ad725b78d398b794bae0ee8180a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nin&lt;/strong&gt; &amp;ndash; The number of inputs to this operation.</source>
          <target state="translated">&lt;strong&gt;nin&lt;/strong&gt; &amp;ndash;この操作への入力数。</target>
        </trans-unit>
        <trans-unit id="a45f86d696eef9707d4d1d19a233bcbe71a9320e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;none&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;none&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d90f907a9a32f41f2815afb166a1f5d3d2d63c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nout&lt;/strong&gt; &amp;ndash; The number of outputs</source>
          <target state="translated">&lt;strong&gt;nout&lt;/strong&gt; &amp;ndash;出力の数</target>
        </trans-unit>
        <trans-unit id="36c448537aa2212d141d9a84a80b6741aaec1b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;np.recarray&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;np.recarray&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa7fd98c24f5c62cc83edd9abf5c1945cc0955fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ntypes&lt;/strong&gt; &amp;ndash; How many different data-type-specific functions the ufunc has implemented.</source>
          <target state="translated">&lt;strong&gt;ntypes&lt;/strong&gt; &amp;ndash; ufuncが実装したデータ型固有の関数の数。</target>
        </trans-unit>
        <trans-unit id="70a9cbf2fc2323ad058b95f9a3523bffd29aa2b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;numpy.TooHardError&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;numpy.TooHardError&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a3a35de1aab05ddd052b048485e0037fb4bb3b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;numpy.linalg.LinAlgError: Singular matrix&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;numpy.linalg.LinAlgError：特異行列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="116ed4985f773a6b44564b6118ac8a1f73699361" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;numpy&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;numpy&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e27fbeac25fc9e5401e3761c3327afcc147824ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj: any&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;obj：任意&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c327d8b933a9541eb8e9c716c1c9c07608e24c3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;obj&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1ecfd8ea5b427089c9c605e5a9129a75dfe3984" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj_to_array_allow_conversion()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;obj_to_array_allow_conversion()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14bcd090fa0db2426eb07e7e1b5ebf8959963ada" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj_to_array_contiguous_allow_conversion()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;obj_to_array_contiguous_allow_conversion()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee7e5fa6d2892f44dcf0362318c2b46631bbe819" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj_to_array_fortran_allow_conversion()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;obj_to_array_fortran_allow_conversion()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b872120d96c4f103490bf1aa11621ea7531382f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj_to_array_no_conversion()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;obj_to_array_no_conversion()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d8adcf2843fa649115f8b8270f40b64c85c1914" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;offset: int, optional&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;オフセット：int、オプション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="498e7ab8abad5859b6d077bd46cc7fcf983b0531" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;offset&lt;/strong&gt; (optional)</source>
          <target state="translated">&lt;strong&gt;オフセット&lt;/strong&gt;（オプション）</target>
        </trans-unit>
        <trans-unit id="24195996fec88a1a907b46aae3863cc09a05ba75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;op&lt;/strong&gt; &amp;ndash; The address to any Python object. This Python object will be replaced with an equivalent well-behaved, C-style contiguous, ndarray of the given data type specified by the last two arguments. Be sure that stealing a reference in this way to the input object is justified.</source>
          <target state="translated">&lt;strong&gt;op&lt;/strong&gt; &amp;ndash;任意のPythonオブジェクトへのアドレス。このPythonオブジェクトは、最後の2つの引数で指定された、指定されたデータ型の同等の正常なCスタイルの連続したndarrayに置き換えられます。この方法で入力オブジェクトへの参照を盗むことが正当化されることを確認してください。</target>
        </trans-unit>
        <trans-unit id="6821ad2bda3127d58dab03e17f045be73122781f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;out: ndarray (Ni&amp;hellip;, J, Nk&amp;hellip;)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;出力：ndarray（Ni&amp;hellip;、J、Nk&amp;hellip;）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a57d1972f6fa4458660d3a89a38b8b43a7d2950a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pool&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;pool&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0cd55e0411411ff372c0fe1e6d22c0122ddf4aa9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pool_size&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;pool_size&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa22998f7d2a5b13cf0bf39b3312c454e629dba2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ptr&lt;/strong&gt; &amp;ndash; The address to a (ctype* for 1-d, ctype** for 2-d or ctype*** for 3-d) variable where ctype is the equivalent C-type for the data type. On return, &lt;em&gt;ptr&lt;/em&gt; will be addressable as a 1-d, 2-d, or 3-d array.</source>
          <target state="translated">&lt;strong&gt;PTR&lt;/strong&gt; - CTYPEデータ型の等価C型であり、アドレス（1-Dについてのctype *、3-Dのための2-DまたはCTYPEためのctype ** ***）の変数。戻ったとき、&lt;em&gt;ptr&lt;/em&gt;は1次元、2次元、または3次元の配列としてアドレス指定できる。</target>
        </trans-unit>
        <trans-unit id="ec9e45c2fd9cd27c556f5374f8af6ddb38b1eff4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pytype_string()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;pytype_string()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6533c5debbffd39bf023965b3fe5e5fcb251e1a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;record array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;レコード配列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aadf5f1c227412c85c717bf4a5c2b30fd5f533cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;reference&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;reference&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8f8818f7a0d7605748cb63c1762963355cb4d3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;require_contiguous()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;require_contiguous()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f25ef05e1f2871d7bb8234f7fa29fe62ababd7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;require_dimensions()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;require_dimensions()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="901b233d7d566ce3db6b99a8b0042ba32cd5bc68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;require_dimensions_n()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;require_dimensions_n()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4c952a822af95b181513e384112f1deeefdca5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;require_fortran()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;require_fortran()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84ba1660c7eab6e564e546a6bd43ff6effb0d3fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;require_native()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;require_native()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ffe8d6070e88e3a1c6ac7b86d3ee788f4ca524e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;require_size()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;require_size()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f078dfea24acc8831cd762a80071a754d02ebc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;residuals, rank, singular_values, rcond&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;残差、ランク、singular_values、rcond&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cc7fbaa438db64e246c99698159b61f48d7016d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;runtime_library_dirs :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;runtime_library_dirs：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d146eb075d05f8253560f7057ec9243e7042f96e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;self.typeCode&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;self.typeCode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de0f5c8a663ffe52a86c0c8fc7ede0a5f4652f0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;self.typeStr&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;self.typeStr&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="204bb9ce3ecb3e3181f0e288c94c68f87b6e358d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;self&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;self&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="120081d3a1334f2ef9c260ca8ed3295632e46e52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;shape: int or tuple of ints, optional&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;形状：intまたはintのタプル、オプション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29f211353902e55cec4c12f859ef60bbe9f8a1a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;shape&lt;/strong&gt; (required)</source>
          <target state="translated">&lt;strong&gt;形状&lt;/strong&gt;（必須）</target>
        </trans-unit>
        <trans-unit id="2f3bd93b9a95398290a40913a942ac7ee9a491ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;signature&lt;/strong&gt; &amp;ndash; The signature for the new gufunc. Setting it to NULL is equivalent to calling PyUFunc_FromFuncAndData. A copy of the string is made, so the passed in buffer can be freed.</source>
          <target state="translated">&lt;strong&gt;signature&lt;/strong&gt; &amp;ndash;新しいgufuncの署名。NULLに設定することは、PyUFunc_FromFuncAndDataを呼び出すことと同じです。文字列のコピーが作成されるため、渡されたバッファを解放できます。</target>
        </trans-unit>
        <trans-unit id="3579e15b18a782dffc14f8dedc606eeb4da4ed7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;slice&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;slice&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2036ea57c9f109a40b478597e125269a02ccf6f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;spawn&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;spawn&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a400dcdee94ec8590ae722cce7a93fa4208b72d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;spawn_key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;spawn_key&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="340d93d630e5f4d5a65d03a2dc1f6b8cd6757131" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;start&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;start&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97eafdd572ef6c531ac977b61dfe3a8d92567760" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;state&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;state&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b5d96c176de391eade95d3eab7f894273c12e2ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;step&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;step&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4eff7e8819a241b5a3d5b2e606853372352847a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stop&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;stop&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e7bf266123703a5ed1d3f9506baa75a5d9e9ed0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;strides: tuple of ints, optional&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ストライド：intのタプル、オプション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7855fe0cb49b9f1b64e4faa6b466f066e32630e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;strides&lt;/strong&gt; (optional)</source>
          <target state="translated">&lt;strong&gt;ストライド&lt;/strong&gt;（オプション）</target>
        </trans-unit>
        <trans-unit id="f36c435f7d2af875ebd5fb27caafa15391fe7527" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;structure&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;structure&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3a4d21f62d7603fb19305a4cc7ac9162d670f3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;structured data type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;構造化データ型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="521ee0f0c77eebb07ebc18c96c9c8e1cec3b85d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;subarray data type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;サブアレイデータ型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9edccbf709f95bf21ae9ace0085d47a49def90e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;suffix: str, optional&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;接尾辞：str、オプション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23397d09ef6d0619a35aa2abd202c97d30c0e07c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;swig_opts :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;swig_opts：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fcf86d6350fb0c06657d07317671a90de74d52f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb8b5ce45908009fc052139d40d24793bff5df20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tobytes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;tobytes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f18c86901ff725e4e4f366cd1c91336552cdc87c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tostring&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;tostring&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fc52ea7d270d274f4d7992492682c20d4c57816" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tuple&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;tuple&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ceb09d09fcfa72e32dd310b1889d27dc8d05fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;type&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36c8d14fb8db6ca16c0e77071ac07434991dad45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type_match()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;type_match()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1c7ae7d73f83cb484d05c0fc631a0796afce47b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type_without_description&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;type_without_description&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9a66a9d2cc27b77f36430b6cf5a654b7eae3d1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typecode_string()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;typecode_string()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec5ba0fd92c60e3383c9db3710c03672f5ce22d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typenum&lt;/strong&gt; &amp;ndash; The expected data type of the array.</source>
          <target state="translated">&lt;strong&gt;typenum&lt;/strong&gt; &amp;ndash;配列の予期されるデータ型。</target>
        </trans-unit>
        <trans-unit id="c3b36532c0cb69d6fd4b693eb6c4341bb1fecb27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;types&lt;/strong&gt; &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;タイプ&lt;/strong&gt; &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="9dfcb18418cf638770fc401b34c6467f19d489db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typestr&lt;/strong&gt; (required)</source>
          <target state="translated">&lt;strong&gt;typestr&lt;/strong&gt;（必須）</target>
        </trans-unit>
        <trans-unit id="f22e6096616c3b5e339d6fc2068fa5f10136f46b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;undef_macros :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;undef_macros：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="566c08ff5cbfc7563b6ec48f86b77d9828806bcb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unused&lt;/strong&gt; &amp;ndash; Unused and present for backwards compatibility of the C-API.</source>
          <target state="translated">&lt;strong&gt;unused&lt;/strong&gt; &amp;ndash;未使用で、C-APIの下位互換性のために存在します。</target>
        </trans-unit>
        <trans-unit id="2fe8c102c8793c67d6746562319d7cce28d3e604" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="212034ee3710f83d787575e7a3119ff8c1718007" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;values: array_like (Ni&amp;hellip;, J, Nk&amp;hellip;)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;値：array_like（Ni&amp;hellip;、J、Nk&amp;hellip;）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3dc38d803fcdf5b4457864347438f926098e055a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;var&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6d7fcb11482a1af063f80fe63d360a6e65e24e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vectorization&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;vectorization&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ece35df348f32a862697a3ca07ca318c2719b8c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;version&lt;/strong&gt; (required)</source>
          <target state="translated">&lt;strong&gt;バージョン&lt;/strong&gt;（必須）</target>
        </trans-unit>
        <trans-unit id="a50b66227821134be63cdc8c83fee8ce7c311e86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weekmask or holidays. The attributes return copies of internal data.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;週マスクまたは休日。属性は内部データのコピーを返します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be03b327ebed5cd158b36eac66e5294037949c8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wrapper&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;wrapper&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6afa5fd008afa469686c9e7fb95f9ddcee12a5f4" translate="yes" xml:space="preserve">
          <source>= location and</source>
          <target state="translated">=場所と</target>
        </trans-unit>
        <trans-unit id="0973e6133866853f9e6256eba9d72c9151694397" translate="yes" xml:space="preserve">
          <source>= scale.</source>
          <target state="translated">=スケール。</target>
        </trans-unit>
        <trans-unit id="dbae4b50ad6ac0a0e515dead61dcef253fcc6db1" translate="yes" xml:space="preserve">
          <source>= the result of iterating &lt;code&gt;j&lt;/code&gt; over</source>
          <target state="translated">=反復の結果 &lt;code&gt;j&lt;/code&gt; 超えます</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="f6e98724818994cd883edf139d3846ca96648b54" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;mutually agreed upon hiatus&amp;rdquo; where the committee asks the individual to temporarily refrain from community participation. If the individual chooses not to take a temporary break voluntarily, the committee may issue a &amp;ldquo;mandatory cooling off period&amp;rdquo;.</source>
          <target state="translated">委員会が個人にコミュニティへの参加を一時的に控えるように求める「相互に合意された休止」。個人が自発的に一時的な休憩を取らないことを選択した場合、委員会は「強制クーリングオフ期間」を発行することができます。</target>
        </trans-unit>
        <trans-unit id="cde6a5f915926c219c9ad1caeba15367682dad41" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;traditional&amp;rdquo; example:</source>
          <target state="translated">「伝統的な」例：</target>
        </trans-unit>
        <trans-unit id="654e39aa1416e4a99699a4c806db40cb3e673a19" translate="yes" xml:space="preserve">
          <source>A 1- or 2-d array_like</source>
          <target state="translated">1次元または2次元の配列のような</target>
        </trans-unit>
        <trans-unit id="024da60a5572fbcd0de36246055b7067f7d49cbc" translate="yes" xml:space="preserve">
          <source>A 1-D array, containing the elements of the input, is returned. A copy is made only if needed.</source>
          <target state="translated">入力の要素を含む1次元配列が返されます.コピーは必要な場合にのみ作成されます.</target>
        </trans-unit>
        <trans-unit id="05915b878480d5cbbd9d515ad9e6d4ff95cf41d7" translate="yes" xml:space="preserve">
          <source>A 1-D flat iterator for Arrayterator objects.</source>
          <target state="translated">Arrayteratorオブジェクトのための1次元平面イテレータ.</target>
        </trans-unit>
        <trans-unit id="e94e5e444e4a89c91179830906b14e4b95c7f975" translate="yes" xml:space="preserve">
          <source>A 1-D flat iterator over the array.</source>
          <target state="translated">配列上の1次元平面イテレータ.</target>
        </trans-unit>
        <trans-unit id="080d28fe39f0db76a9a09d5b0de0f2cfd772f02d" translate="yes" xml:space="preserve">
          <source>A 1-D flat iterator over the matrix.</source>
          <target state="translated">行列上の1次元平面イテレータ.</target>
        </trans-unit>
        <trans-unit id="03f8ab17663e982d06a46c4b01d02b934e42bf4b" translate="yes" xml:space="preserve">
          <source>A 1-D iterator over the array.</source>
          <target state="translated">配列上の1次元イテレータ.</target>
        </trans-unit>
        <trans-unit id="5f4c8f5af8234daf63ac87fac41bf34728e2a4a8" translate="yes" xml:space="preserve">
          <source>A 1-D or 2-D array containing multiple variables and observations. Each row of &lt;code&gt;m&lt;/code&gt; represents a variable, and each column a single observation of all those variables. Also see &lt;code&gt;rowvar&lt;/code&gt; below.</source>
          <target state="translated">複数の変数と観測を含む1次元または2次元の配列。 &lt;code&gt;m&lt;/code&gt; の各行は変数を表し、各列はそれらすべての変数の単一の観測値です。以下の &lt;code&gt;rowvar&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="cebacd166002a0aab793729a826968ad21540978" translate="yes" xml:space="preserve">
          <source>A 1-D or 2-D array containing multiple variables and observations. Each row of &lt;code&gt;x&lt;/code&gt; represents a variable, and each column a single observation of all those variables. Also see &lt;code&gt;rowvar&lt;/code&gt; below.</source>
          <target state="translated">複数の変数と観測を含む1次元または2次元の配列。 &lt;code&gt;x&lt;/code&gt; の各行は変数を表し、各列はそれらすべての変数の単一の観測値です。以下の &lt;code&gt;rowvar&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="f72cd249fd4ea863c9357d49585ace84834bd8f7" translate="yes" xml:space="preserve">
          <source>A 1-D view of the scalar.</source>
          <target state="translated">スカラの1D表示。</target>
        </trans-unit>
        <trans-unit id="3a0a346ddaabdf9157361bcef554a19793288c12" translate="yes" xml:space="preserve">
          <source>A 2-D example:</source>
          <target state="translated">2次元の例。</target>
        </trans-unit>
        <trans-unit id="1dcf8fe375a813c5bfbdff5bbb67bdacfa9f426d" translate="yes" xml:space="preserve">
          <source>A 2-dimensional array of size 2 x 3, composed of 4-byte integer elements:</source>
          <target state="translated">4バイトの整数要素で構成されるサイズ2×3の2次元配列。</target>
        </trans-unit>
        <trans-unit id="8985fdd2d0544649de815c0d71b2a1f7021bb122" translate="yes" xml:space="preserve">
          <source>A 2-dimensional ndarray that preserves its two-dimensional nature throughout operations. It has certain special operations, such as &lt;code&gt;*&lt;/code&gt; (matrix multiplication) and &lt;code&gt;**&lt;/code&gt; (matrix power), defined:</source>
          <target state="translated">操作全体で2次元の性質を保持する2次元のndarray。 &lt;code&gt;*&lt;/code&gt; （行列の乗算）や &lt;code&gt;**&lt;/code&gt; （行列の累乗）などの特定の特別な演算が定義されています。</target>
        </trans-unit>
        <trans-unit id="cc6cebe7eb915060fc6496dd11b4201c6171b95b" translate="yes" xml:space="preserve">
          <source>A 2-tuple of ints, iaxis_pad_width[0] represents the number of values padded at the beginning of vector where iaxis_pad_width[1] represents the number of values padded at the end of vector.</source>
          <target state="translated">iaxis_pad_width[0]はベクトルの先頭でパディングされた値の数を表し,iaxis_pad_width[1]はベクトルの末尾でパディングされた値の数を表します.</target>
        </trans-unit>
        <trans-unit id="2152806df29fad5ea3c51b85e6a2d449bd3debf7" translate="yes" xml:space="preserve">
          <source>A 2-tuple whose first argument is an integer (a long integer if necessary) that points to the data-area storing the array contents. This pointer must point to the first element of data (in other words any offset is always ignored in this case). The second entry in the tuple is a read-only flag (true means the data area is read-only).</source>
          <target state="translated">第1引数が,配列の内容を格納しているデータ領域を指す整数(必要であれば長い整数)である2タプル.このポインタは,データの最初の要素を指していなければなりません(言い換えれば,この場合,いかなるオフセットも常に無視されます).タプルの2番目のエントリは、読み取り専用フラグです(trueの場合は、データ領域が読み取り専用であることを意味します)。</target>
        </trans-unit>
        <trans-unit id="84c9a68ac1124dc92c3beb6d10fa6ef1a121ef47" translate="yes" xml:space="preserve">
          <source>A 2D array works much the same way.</source>
          <target state="translated">2次元配列も同じように動作します。</target>
        </trans-unit>
        <trans-unit id="b93bf653bc1902857eef1ccac3f5d09491253e5b" translate="yes" xml:space="preserve">
          <source>A 3-D example:</source>
          <target state="translated">3次元の例。</target>
        </trans-unit>
        <trans-unit id="56a85df542f6e0ae1b5dff43196ef149fd4fac69" translate="yes" xml:space="preserve">
          <source>A 3-dimensional array of size 3 x 3 x 3, summed over each of its three axes</source>
          <target state="translated">サイズ3×3×3×3の3次元配列で、3つの軸のそれぞれを合計したもの。</target>
        </trans-unit>
        <trans-unit id="549cb93636e34bdf02245b26cee07ee2514370b9" translate="yes" xml:space="preserve">
          <source>A :c:type: &lt;code&gt;PyCObject&lt;/code&gt; whose &lt;code&gt;voidptr&lt;/code&gt; member contains a pointer to a filled &lt;a href=&quot;c-api.types-and-structures#c.PyArrayInterface&quot;&gt;&lt;code&gt;PyArrayInterface&lt;/code&gt;&lt;/a&gt; structure. Memory for the structure is dynamically created and the &lt;code&gt;PyCObject&lt;/code&gt; is also created with an appropriate destructor so the retriever of this attribute simply has to apply &lt;a href=&quot;https://docs.python.org/dev/c-api/refcounting.html#c.Py_DECREF&quot;&gt;&lt;code&gt;Py_DECREF&lt;/code&gt;&lt;/a&gt; to the object returned by this attribute when it is finished. Also, either the data needs to be copied out, or a reference to the object exposing this attribute must be held to ensure the data is not freed. Objects exposing the &lt;code&gt;__array_struct__&lt;/code&gt; interface must also not reallocate their memory if other objects are referencing them.</source>
          <target state="translated">A：C：タイプ： &lt;code&gt;PyCObject&lt;/code&gt; &lt;code&gt;voidptr&lt;/code&gt; 部材充填へのポインタ含ま&lt;a href=&quot;c-api.types-and-structures#c.PyArrayInterface&quot;&gt; &lt;code&gt;PyArrayInterface&lt;/code&gt; の&lt;/a&gt;構造を。構造体のメモリは動的に作成され、 &lt;code&gt;PyCObject&lt;/code&gt; も適切なデストラクタを使用して作成されるため、この属性の&lt;a href=&quot;https://docs.python.org/dev/c-api/refcounting.html#c.Py_DECREF&quot;&gt; &lt;code&gt;Py_DECREF&lt;/code&gt; &lt;/a&gt;は、終了時にこの属性によって返されるオブジェクトにPy_DECREFを適用するだけで済みます。また、データをコピーするか、この属性を公開するオブジェクトへの参照を保持して、データが解放されないようにする必要があります。 &lt;code&gt;__array_struct__&lt;/code&gt; インターフェースを公開するオブジェクトは、他のオブジェクトがそれらを参照している場合、それらのメモリを再割り当てしてはなりません。</target>
        </trans-unit>
        <trans-unit id="123666c2b903886e6666f3af33f4531e21859a0f" translate="yes" xml:space="preserve">
          <source>A :c:type: &lt;code&gt;PyCObject&lt;/code&gt; whose &lt;code&gt;voidptr&lt;/code&gt; member contains a pointer to a filled &lt;a href=&quot;c-api/types-and-structures#c.PyArrayInterface&quot;&gt;&lt;code&gt;PyArrayInterface&lt;/code&gt;&lt;/a&gt; structure. Memory for the structure is dynamically created and the &lt;code&gt;PyCObject&lt;/code&gt; is also created with an appropriate destructor so the retriever of this attribute simply has to apply &lt;a href=&quot;https://docs.python.org/dev/c-api/refcounting.html#c.Py_DECREF&quot;&gt;&lt;code&gt;Py_DECREF&lt;/code&gt;&lt;/a&gt; to the object returned by this attribute when it is finished. Also, either the data needs to be copied out, or a reference to the object exposing this attribute must be held to ensure the data is not freed. Objects exposing the &lt;code&gt;__array_struct__&lt;/code&gt; interface must also not reallocate their memory if other objects are referencing them.</source>
          <target state="translated">：c：type： &lt;code&gt;PyCObject&lt;/code&gt; の &lt;code&gt;voidptr&lt;/code&gt; メンバーに、入力された&lt;a href=&quot;c-api/types-and-structures#c.PyArrayInterface&quot;&gt; &lt;code&gt;PyArrayInterface&lt;/code&gt; &lt;/a&gt;構造体へのポインターが含まれています。構造体のメモリは動的に作成され、 &lt;code&gt;PyCObject&lt;/code&gt; も適切なデストラクタで作成されるため、この属性の取得者は、終了時にこの属性によって返されるオブジェクトに&lt;a href=&quot;https://docs.python.org/dev/c-api/refcounting.html#c.Py_DECREF&quot;&gt; &lt;code&gt;Py_DECREF&lt;/code&gt; &lt;/a&gt;を適用するだけで済みます。また、データをコピーするか、この属性を公開しているオブジェクトへの参照を保持して、データが解放されないようにする必要があります。 &lt;code&gt;__array_struct__&lt;/code&gt; インターフェイスを公開しているオブジェクトも、他のオブジェクトがそれらを参照している場合、それらのメモリを再割り当てしてはなりません。</target>
        </trans-unit>
        <trans-unit id="f11f88290206147b1d2292d3cc2fdf906b6395b9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#numpy.flatiter&quot;&gt;&lt;code&gt;flatiter&lt;/code&gt;&lt;/a&gt; iterator can not be constructed directly from Python code by calling the &lt;a href=&quot;#numpy.flatiter&quot;&gt;&lt;code&gt;flatiter&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;#numpy.flatiter&quot;&gt; &lt;code&gt;flatiter&lt;/code&gt; &lt;/a&gt;イテレータを呼び出すことによって、Pythonのコードから直接構築することができません&lt;a href=&quot;#numpy.flatiter&quot;&gt; &lt;code&gt;flatiter&lt;/code&gt; の&lt;/a&gt;コンストラクタを。</target>
        </trans-unit>
        <trans-unit id="04e500f693744c615f08a5f51c892405f5d5b306" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#numpy.flatiter&quot;&gt;&lt;code&gt;flatiter&lt;/code&gt;&lt;/a&gt; iterator is returned by &lt;code&gt;x.flat&lt;/code&gt; for any array &lt;code&gt;x&lt;/code&gt;. It allows iterating over the array as if it were a 1-D array, either in a for-loop or by calling its &lt;code&gt;next&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#numpy.flatiter&quot;&gt; &lt;code&gt;flatiter&lt;/code&gt; の&lt;/a&gt;イテレータが返される &lt;code&gt;x.flat&lt;/code&gt; 任意の配列のために &lt;code&gt;x&lt;/code&gt; 。forループ内または &lt;code&gt;next&lt;/code&gt; メソッドを呼び出すことにより、配列を1次元配列であるかのように反復できます。</target>
        </trans-unit>
        <trans-unit id="95d941e878ab7108e7bbf0d91be33cc4179ce09f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#numpy.ma.MaskedArray.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt;, a value that may be used to replace the invalid entries in order to return a standard &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#numpy.ma.MaskedArray.fill_value&quot;&gt; &lt;code&gt;fill_value&lt;/code&gt; &lt;/a&gt;、標準戻すために、無効なエントリを置き換えるために使用することができる値&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c964244ee98d97a65f759995ef1198c398deab1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#term-structured-array&quot;&gt;structured array&lt;/a&gt; with allowing access in an attribute style (&lt;code&gt;a.field&lt;/code&gt;) in addition to &lt;code&gt;a['field']&lt;/code&gt;. For details, see &lt;a href=&quot;reference/generated/numpy.recarray&quot;&gt;numpy.recarray.&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;a['field']&lt;/code&gt; に加えて、属性スタイル（ &lt;code&gt;a.field&lt;/code&gt; ）でのアクセスを許可する&lt;a href=&quot;#term-structured-array&quot;&gt;構造化配列&lt;/a&gt;。詳細については、&lt;a href=&quot;reference/generated/numpy.recarray&quot;&gt;numpy.recarrayを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2362caead598cbe2b288c9414e081f7c67944064" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#term-structured-data-type&quot;&gt;structured data type&lt;/a&gt; may contain a &lt;a href=&quot;#term-ndarray&quot;&gt;ndarray&lt;/a&gt; with its own dtype and shape:</source>
          <target state="translated">&lt;a href=&quot;#term-structured-data-type&quot;&gt;構造化データ型が&lt;/a&gt;含まれていてもよい&lt;a href=&quot;#term-ndarray&quot;&gt;ndarray&lt;/a&gt;独自DTYPEと形状とを。</target>
        </trans-unit>
        <trans-unit id="e0c0e6b144ca0dcf2ee709917a46a6ccb8b09579" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; の&lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="08e0763b81b1391e700f6e9abab5495a807996f9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://cheat.errtheblog.com/s/git&quot;&gt;git cheat sheet&lt;/a&gt; is a page giving summaries of common commands.</source>
          <target state="translated">&lt;a href=&quot;http://cheat.errtheblog.com/s/git&quot;&gt;gitのチートシートは、&lt;/a&gt;一般的なコマンドの要約を与えるページです。</target>
        </trans-unit>
        <trans-unit id="4f8f184213c4917469095c26238630c2af459c05" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://mathesaurus.sf.net/&quot;&gt;matlab, R, IDL, NumPy/SciPy dictionary&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://mathesaurus.sf.net/&quot;&gt;MATLAB、R、IDL、numpyの/ scipyのダウンロード辞書&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28900dc17201a4b7d2d4e25e648ec5859c4a33a8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file that includes the &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; directives given above will produce wrapper code that looks something like:</source>
          <target state="translated">A &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIGの&lt;/a&gt;含まれるインタフェースファイル&lt;a href=&quot;http://www.swig.org&quot;&gt;のSWIG&lt;/a&gt;：上に与えられた指令は次のようになりますが何かというラッパーコードを生成します</target>
        </trans-unit>
        <trans-unit id="4f3b0be790d0fdf5f3b2fb4de6fcbf8a68d09af2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; macro (&lt;code&gt;%numpy_typemaps&lt;/code&gt;) with three arguments for implementing the 74 argument signatures for the user&amp;rsquo;s choice of (1) C data type, (2) NumPy data type (assuming they match), and (3) dimension type.</source>
          <target state="translated">A &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIGの&lt;/a&gt;マクロ（ &lt;code&gt;%numpy_typemaps&lt;/code&gt; （1）Cデータ・タイプ、（それらが一致すると仮定した場合）（2）numpyのデータ・タイプ、および（3）寸法タイプのユーザの選択のための74の引数シグネチャを実装するための3つの引数を持ちます）。</target>
        </trans-unit>
        <trans-unit id="9d1a71af0e22aac57287c432a875a1eb25e670c9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/dev/c-api/capsule.html#c.PyCapsule&quot;&gt;&lt;code&gt;PyCapsule&lt;/code&gt;&lt;/a&gt; whose &lt;code&gt;pointer&lt;/code&gt; member contains a pointer to a filled &lt;a href=&quot;c-api/types-and-structures#c.PyArrayInterface&quot;&gt;&lt;code&gt;PyArrayInterface&lt;/code&gt;&lt;/a&gt; structure. Memory for the structure is dynamically created and the &lt;a href=&quot;https://docs.python.org/dev/c-api/capsule.html#c.PyCapsule&quot;&gt;&lt;code&gt;PyCapsule&lt;/code&gt;&lt;/a&gt; is also created with an appropriate destructor so the retriever of this attribute simply has to apply &lt;a href=&quot;https://docs.python.org/dev/c-api/refcounting.html#c.Py_DECREF&quot;&gt;&lt;code&gt;Py_DECREF&lt;/code&gt;&lt;/a&gt; to the object returned by this attribute when it is finished. Also, either the data needs to be copied out, or a reference to the object exposing this attribute must be held to ensure the data is not freed. Objects exposing the &lt;a href=&quot;#object.__array_struct__&quot;&gt;&lt;code&gt;__array_struct__&lt;/code&gt;&lt;/a&gt; interface must also not reallocate their memory if other objects are referencing them.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/c-api/capsule.html#c.PyCapsule&quot;&gt; &lt;code&gt;PyCapsule&lt;/code&gt; &lt;/a&gt;その &lt;code&gt;pointer&lt;/code&gt; 部材が充填へのポインタ含ま&lt;a href=&quot;c-api/types-and-structures#c.PyArrayInterface&quot;&gt; &lt;code&gt;PyArrayInterface&lt;/code&gt; の&lt;/a&gt;構造を。構造体のメモリは動的に作成され、&lt;a href=&quot;https://docs.python.org/dev/c-api/capsule.html#c.PyCapsule&quot;&gt; &lt;code&gt;PyCapsule&lt;/code&gt; &lt;/a&gt;も適切なデストラクタを使用して作成されるため、この属性の取得者は、終了時にこの属性によって返されるオブジェクトに&lt;a href=&quot;https://docs.python.org/dev/c-api/refcounting.html#c.Py_DECREF&quot;&gt; &lt;code&gt;Py_DECREF&lt;/code&gt; &lt;/a&gt;を適用するだけで済みます。また、データをコピーするか、この属性を公開しているオブジェクトへの参照を保持して、データが解放されないようにする必要があります。&lt;a href=&quot;#object.__array_struct__&quot;&gt; &lt;code&gt;__array_struct__&lt;/code&gt; &lt;/a&gt;インターフェイスを公開しているオブジェクトも、他のオブジェクトがそれらを参照している場合、それらのメモリを再割り当てしてはなりません。</target>
        </trans-unit>
        <trans-unit id="f6a39b7ab438dd15f42b017b28e27195616350b8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/dev/library/typing.html#typing.Union&quot;&gt;&lt;code&gt;Union&lt;/code&gt;&lt;/a&gt; representing objects that can be coerced into a &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A&lt;a href=&quot;https://docs.python.org/dev/library/typing.html#typing.Union&quot;&gt; &lt;code&gt;Union&lt;/code&gt; &lt;/a&gt;に強制することができるオブジェクト表現&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3b3be3838dca58c613fb345a18e68f3400005c1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/dev/library/typing.html#typing.Union&quot;&gt;&lt;code&gt;Union&lt;/code&gt;&lt;/a&gt; representing objects that can be coerced into an &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A&lt;a href=&quot;https://docs.python.org/dev/library/typing.html#typing.Union&quot;&gt; &lt;code&gt;Union&lt;/code&gt; &lt;/a&gt;に強制することができるオブジェクト表現&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05e1d33a8a4d82642a6d603db2c91670f3c4706f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;numpy.busdaycalendar#numpy.busdaycalendar&quot;&gt;&lt;code&gt;busdaycalendar&lt;/code&gt;&lt;/a&gt; object which specifies the valid days. If this parameter is provided, neither weekmask nor holidays may be provided.</source>
          <target state="translated">有効な日数を指定する&lt;a href=&quot;numpy.busdaycalendar#numpy.busdaycalendar&quot;&gt; &lt;code&gt;busdaycalendar&lt;/code&gt; &lt;/a&gt;オブジェクト。このパラメーターが指定されている場合、週マスクも休日も指定できません。</target>
        </trans-unit>
        <trans-unit id="69e74f3240b3d2bc71fd1a27edc06864a12be76b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;(d0, d1, ..., dn)&lt;/code&gt;-shaped array of floating-point samples from the standard normal distribution, or a single such float if no parameters were supplied.</source>
          <target state="translated">標準正規分布からの浮動小数点サンプルの &lt;code&gt;(d0, d1, ..., dn)&lt;/code&gt; 形状の配列、またはパラメーターが指定されていない場合は単一のそのような浮動小数点。</target>
        </trans-unit>
        <trans-unit id="f85432176a284b58f1d5e997cde4fde1e664cb79" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;fill_value&lt;/code&gt;, a value that may be used to replace the invalid entries in order to return a standard &lt;a href=&quot;../reference/generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fill_value&lt;/code&gt; 、標準戻すために、無効なエントリを置き換えるために使用することができる値&lt;a href=&quot;../reference/generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6baa143c5214b0736e3c20c3d4d2133fd2d5b196" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;n&lt;/code&gt; x &lt;code&gt;M&lt;/code&gt; matrix where all elements are equal to zero, except for the &lt;code&gt;k&lt;/code&gt;-th diagonal, whose values are equal to one.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; は、 xは &lt;code&gt;M&lt;/code&gt; のすべての要素がゼロに等しい行列を、を除いて &lt;code&gt;k&lt;/code&gt; 番目の対角、その値は1に等しいです。</target>
        </trans-unit>
        <trans-unit id="602f7fa1aa35733737af74435da8b6f68a4e5c2f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;python module&lt;/code&gt; block has the following structure:</source>
          <target state="translated">&lt;code&gt;python module&lt;/code&gt; ブロックは、以下の構造を有します。</target>
        </trans-unit>
        <trans-unit id="1340f5e4772d7953f77838549f8ae4823c3c29fc" translate="yes" xml:space="preserve">
          <source>A BitGenerator provides a stream of random values. In order to generate reproducible streams, BitGenerators support setting their initial state via a seed. All of the provided BitGenerators will take an arbitrary-sized non-negative integer, or a list of such integers, as a seed. BitGenerators need to take those inputs and process them into a high-quality internal state for the BitGenerator. All of the BitGenerators in numpy delegate that task to &lt;a href=&quot;generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt;, which uses hashing techniques to ensure that even low-quality seeds generate high-quality initial states.</source>
          <target state="translated">BitGeneratorはランダムな値のストリームを提供します。再現可能なストリームを生成するために、BitGeneratorはシードによる初期状態の設定をサポートしています。提供されるすべてのBitGeneratorは、任意のサイズの非負の整数、またはそのような整数のリストをシードとして受け取ります。BitGeneratorはこれらの入力を取得して、BitGeneratorの高品質な内部状態に処理する必要があります。numpyのすべてのBitGeneratorはそのタスクを&lt;a href=&quot;generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; に&lt;/a&gt;委任します。これはハッシュ技術を使用して、低品質のシードでさえ高品質の初期状態を確実に生成します。</target>
        </trans-unit>
        <trans-unit id="13fa9801a3e658bde1343a6710ebd94019b0e987" translate="yes" xml:space="preserve">
          <source>A BitGenerator should call this method in its constructor with an appropriate &lt;code&gt;n_words&lt;/code&gt; parameter to properly seed itself.</source>
          <target state="translated">BitGeneratorは、適切な &lt;code&gt;n_words&lt;/code&gt; パラメータを使用してコンストラクタ内でこのメソッドを呼び出し、適切に自身をシードする必要があります。</target>
        </trans-unit>
        <trans-unit id="980dc3923948d97cf7707356fb397d2e9165c290" translate="yes" xml:space="preserve">
          <source>A C expression may contain:</source>
          <target state="translated">C式には含まれている場合があります。</target>
        </trans-unit>
        <trans-unit id="a2c89b0af7257bacc92f4242dd8f1ed7de4e6a82" translate="yes" xml:space="preserve">
          <source>A Chebyshev series class.</source>
          <target state="translated">チェビシェフシリーズのクラス。</target>
        </trans-unit>
        <trans-unit id="2e5a3fc40b8c00875c7adc6fafc877312612fb23" translate="yes" xml:space="preserve">
          <source>A Common Example</source>
          <target state="translated">一般的な例</target>
        </trans-unit>
        <trans-unit id="c78f058bb1e26a110b25c03cc8d4fb8973dcf766" translate="yes" xml:space="preserve">
          <source>A Final Note</source>
          <target state="translated">最後の注意事項</target>
        </trans-unit>
        <trans-unit id="5855bd622f932426a8509c7e52fdc0c07349e41d" translate="yes" xml:space="preserve">
          <source>A Guide to NumPy Documentation</source>
          <target state="translated">NumPyドキュメントのガイド</target>
        </trans-unit>
        <trans-unit id="ba43d685f2ac1fa308141b982976e7b9544ebafd" translate="yes" xml:space="preserve">
          <source>A Guide to NumPy/SciPy Documentation</source>
          <target state="translated">NumPy/SciPyドキュメンテーションガイド</target>
        </trans-unit>
        <trans-unit id="ecd3cc1095a7280cde1f0d6c177498d32c136fd7" translate="yes" xml:space="preserve">
          <source>A Laguerre series class.</source>
          <target state="translated">ラゲールシリーズのクラス。</target>
        </trans-unit>
        <trans-unit id="f400cf9c7b159d607ff23b034ffd4be1a606224f" translate="yes" xml:space="preserve">
          <source>A Legendre series class.</source>
          <target state="translated">レジェンドレシリーズのクラス。</target>
        </trans-unit>
        <trans-unit id="f99e7b91acb5be86a4e5f503122861650a2ccb0d" translate="yes" xml:space="preserve">
          <source>A MaskedArray is always returned, regardless of the input type.</source>
          <target state="translated">入力タイプに関係なく、常にMaskedArrayが返されます。</target>
        </trans-unit>
        <trans-unit id="ce78219c5c53ca9baedc5b599176c3087fb77459" translate="yes" xml:space="preserve">
          <source>A PR must be &lt;strong&gt;approved&lt;/strong&gt; by at least one core team member before merging. Approval means the core team member has carefully reviewed the changes, and the PR is ready for merging.</source>
          <target state="translated">PRは、マージする前に、少なくとも1人のコアチームメンバーによって&lt;strong&gt;承認さ&lt;/strong&gt;れる必要があります。承認とは、コアチームメンバーが変更を注意深く確認し、PRをマージする準備ができていることを意味します。</target>
        </trans-unit>
        <trans-unit id="4a0d4b16a28265c2c411709c0c2184400cd87fff" translate="yes" xml:space="preserve">
          <source>A Practical Example: Vector Quantization.</source>
          <target state="translated">実践例。ベクトル量子化。</target>
        </trans-unit>
        <trans-unit id="d8843fabe291906b2e58e594b00ecdcfc1fde0ec" translate="yes" xml:space="preserve">
          <source>A Python container that can hold any number of objects or items. The items do not have to be of the same type, and can even be lists themselves:</source>
          <target state="translated">任意の数のオブジェクトやアイテムを保持できる Python コンテナ。アイテムは同じ型である必要はなく、リストそのものであっても構いません。</target>
        </trans-unit>
        <trans-unit id="6ce1b2e22cf0a8c0a03973eca72fa46ac91489bd" translate="yes" xml:space="preserve">
          <source>A Python object describing the data-type in more detail (same as the &lt;em&gt;descr&lt;/em&gt; key in &lt;a href=&quot;../arrays.interface#__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt;). This can be &lt;code&gt;NULL&lt;/code&gt; if &lt;em&gt;typekind&lt;/em&gt; and &lt;em&gt;itemsize&lt;/em&gt; provide enough information. This field is also ignored unless &lt;code&gt;ARR_HAS_DESCR&lt;/code&gt; flag is on in &lt;em&gt;flags&lt;/em&gt;.</source>
          <target state="translated">データ型をより詳細に記述したPythonオブジェクト（&lt;a href=&quot;../arrays.interface#__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;descr&lt;/em&gt;キーと同じ）。&lt;em&gt;typekind&lt;/em&gt;と&lt;em&gt;itemsize&lt;/em&gt;が十分な情報を提供する場合、これは &lt;code&gt;NULL&lt;/code&gt; になる可能性があります。しない限り、このフィールドは無視され &lt;code&gt;ARR_HAS_DESCR&lt;/code&gt; のフラグが中にある&lt;em&gt;旗&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ed27eee8d8cf342e89bea5a96065d23f78cf6945" translate="yes" xml:space="preserve">
          <source>A Python object describing the data-type in more detail (same as the &lt;em&gt;descr&lt;/em&gt; key in &lt;a href=&quot;../arrays.interface#object.__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt;). This can be &lt;code&gt;NULL&lt;/code&gt; if &lt;em&gt;typekind&lt;/em&gt; and &lt;em&gt;itemsize&lt;/em&gt; provide enough information. This field is also ignored unless &lt;a href=&quot;../arrays.interface#c.NPY_ARR_HAS_DESCR&quot;&gt;&lt;code&gt;NPY_ARR_HAS_DESCR&lt;/code&gt;&lt;/a&gt; flag is on in &lt;em&gt;flags&lt;/em&gt;.</source>
          <target state="translated">データ型をより詳細に記述したPythonオブジェクト（&lt;a href=&quot;../arrays.interface#object.__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; の&lt;/a&gt;&lt;em&gt;descr&lt;/em&gt;キーと同じ）。&lt;em&gt;typekind&lt;/em&gt;と&lt;em&gt;itemsize&lt;/em&gt;が十分な情報を提供する場合、これは &lt;code&gt;NULL&lt;/code&gt; になる可能性があります。しない限り、このフィールドは無視され&lt;a href=&quot;../arrays.interface#c.NPY_ARR_HAS_DESCR&quot;&gt; &lt;code&gt;NPY_ARR_HAS_DESCR&lt;/code&gt; の&lt;/a&gt;フラグが中にある&lt;em&gt;旗&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d620fcc0619adea6d0d19bc96c8ee23d44af8093" translate="yes" xml:space="preserve">
          <source>A Python object describing the data-type in more detail (same as the &lt;em&gt;descr&lt;/em&gt; key in &lt;a href=&quot;arrays.interface#__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt;). This can be &lt;code&gt;NULL&lt;/code&gt; if &lt;em&gt;typekind&lt;/em&gt; and &lt;em&gt;itemsize&lt;/em&gt; provide enough information. This field is also ignored unless &lt;code&gt;ARR_HAS_DESCR&lt;/code&gt; flag is on in &lt;em&gt;flags&lt;/em&gt;.</source>
          <target state="translated">データ型をより詳細に説明するPythonオブジェクト（&lt;a href=&quot;arrays.interface#__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; の&lt;/a&gt;&lt;em&gt; descr&lt;/em&gt;キーと同じ）。&lt;em&gt;typekind&lt;/em&gt;と&lt;em&gt;itemsize&lt;/em&gt;が十分な情報を提供する場合、これは &lt;code&gt;NULL&lt;/code&gt; になる可能性があります。&lt;em&gt;flagsで&lt;/em&gt; &lt;code&gt;ARR_HAS_DESCR&lt;/code&gt; フラグがオンになっていない限り、このフィールドも無視されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="811b8ce90b99eebd82cee1bee20d5f2dc5026de4" translate="yes" xml:space="preserve">
          <source>A SciPy package contains, in addition to its sources, the following files and directories:</source>
          <target state="translated">SciPy パッケージには,ソースの他に以下のファイルとディレクトリが含まれています.</target>
        </trans-unit>
        <trans-unit id="2e40f23352d29ee547ed495acb06d3278d345225" translate="yes" xml:space="preserve">
          <source>A basic format in this context is an optional shape specifier followed by an array-protocol type string. Parenthesis are required on the shape if it has more than one dimension. NumPy allows a modification on the format in that any string that can uniquely identify the type can be used to specify the data-type in a field. The generated data-type fields are named &lt;code&gt;'f0'&lt;/code&gt;, &lt;code&gt;'f1'&lt;/code&gt;, &amp;hellip;, &lt;code&gt;'f&amp;lt;N-1&amp;gt;'&lt;/code&gt; where N (&amp;gt;1) is the number of comma-separated basic formats in the string. If the optional shape specifier is provided, then the data-type for the corresponding field describes a sub-array.</source>
          <target state="translated">このコンテキストでの基本的な形式は、オプションの形状指定子であり、その後に配列プロトコルタイプの文字列が続きます。形状に複数の次元がある場合は、括弧が必要です。 NumPyでは、タイプを一意に識別できる任意の文字列を使用してフィールドのデータタイプを指定できるため、フォーマットを変更できます。生成されたデータ型フィールドには、 &lt;code&gt;'f0'&lt;/code&gt; 、 &lt;code&gt;'f1'&lt;/code&gt; 、&amp;hellip;、 &lt;code&gt;'f&amp;lt;N-1&amp;gt;'&lt;/code&gt; という名前が付けられます。N（&amp;gt; 1）は、文字列内のカンマ区切りの基本形式の数です。オプションの形状指定子が提供されている場合、対応するフィールドのデータ型はサブ配列を記述します。</target>
        </trans-unit>
        <trans-unit id="33714726200551e610770d7ae55c0ed9c8005e6f" translate="yes" xml:space="preserve">
          <source>A beta value of 14 is probably a good starting point. Note that as beta gets large, the window narrows, and so the number of samples needs to be large enough to sample the increasingly narrow spike, otherwise NaNs will get returned.</source>
          <target state="translated">ベータ値14が良い出発点でしょう。ベータ値が大きくなるとウィンドウが狭くなるので、サンプル数は狭くなっていくスパイクをサンプリングするのに十分な大きさが必要で、そうしないとNaNが返ってくることに注意してください。</target>
        </trans-unit>
        <trans-unit id="730a2f7351bc145102343cc14dc57118d72de04f" translate="yes" xml:space="preserve">
          <source>A bit-width name for this data-type.</source>
          <target state="translated">このデータ型のビット幅名。</target>
        </trans-unit>
        <trans-unit id="af66384dd9d2d25f2f246ac418a92d8c8bea0503" translate="yes" xml:space="preserve">
          <source>A boolean &lt;a href=&quot;#numpy.ma.MaskedArray.mask&quot;&gt;&lt;code&gt;mask&lt;/code&gt;&lt;/a&gt; with the same shape as the data, where a &lt;code&gt;True&lt;/code&gt; value indicates that the corresponding element of the data is invalid. The special value &lt;a href=&quot;#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; is also acceptable for arrays without named fields, and indicates that no data is invalid.</source>
          <target state="translated">データと同じ形状のブール&lt;a href=&quot;#numpy.ma.MaskedArray.mask&quot;&gt; &lt;code&gt;mask&lt;/code&gt; &lt;/a&gt; &lt;code&gt;True&lt;/code&gt; 値は、データの対応する要素が無効であることを示します。特別な値&lt;a href=&quot;#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;は、名前付きフィールドのない配列にも使用でき、無効なデータがないことを示します。</target>
        </trans-unit>
        <trans-unit id="c12c87321ed3628b01c3ba7c62206eaedafb64fa" translate="yes" xml:space="preserve">
          <source>A boolean array used to select only certain elements for an operation:</source>
          <target state="translated">ある操作で特定の要素だけを選択するためのブーリアン配列。</target>
        </trans-unit>
        <trans-unit id="2c37cd3281f6d75c5ff48f61ab9efab50a592368" translate="yes" xml:space="preserve">
          <source>A boolean array which is broadcasted to match the dimensions of &lt;a href=&quot;numpy.array#numpy.array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt;, and selects elements to include in the reduction. Note that for ufuncs like &lt;code&gt;minimum&lt;/code&gt; that do not have an identity defined, one has to pass in also &lt;code&gt;initial&lt;/code&gt;.</source>
          <target state="translated">寸法と一致するように放送されるブール配列&lt;a href=&quot;numpy.array#numpy.array&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;減少に含める、及び選択要素。以下のようなufuncsのためにすることを注意 &lt;code&gt;minimum&lt;/code&gt; 定義されたアイデンティティを持っていない、1はまた、中に通過しなければならない &lt;code&gt;initial&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2805701b39ac42271d949ffde0dd4bf567d116a" translate="yes" xml:space="preserve">
          <source>A boolean array which is broadcasted to match the dimensions of &lt;code&gt;a&lt;/code&gt;, and selects elements to include in the reduction. Note that for ufuncs like &lt;code&gt;minimum&lt;/code&gt; that do not have an identity defined, one has to pass in also &lt;code&gt;initial&lt;/code&gt;.</source>
          <target state="translated">放送されるブール配列の大きさと一致する削減に含める、及び選択要素。以下のようなufuncsのためにすることを注意 &lt;code&gt;minimum&lt;/code&gt; 定義されたアイデンティティを持っていない、1はまた、中に通過しなければならない &lt;code&gt;initial&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86f98cff3c08f935f8811f83be9572c3de4637c7" translate="yes" xml:space="preserve">
          <source>A boolean array which is broadcasted to match the dimensions of &lt;code&gt;dst&lt;/code&gt;, and selects elements to copy from &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dst&lt;/code&gt; wherever it contains the value True.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; の次元と一致するようにブロードキャストされ、値Trueが含まれている場合は &lt;code&gt;dst&lt;/code&gt; 、 &lt;code&gt;src&lt;/code&gt; からdstにコピーする要素を選択するブール配列。</target>
        </trans-unit>
        <trans-unit id="d78a3585487d30435586ed9706d00090c300e7f0" translate="yes" xml:space="preserve">
          <source>A boolean array with the same dimensions as the input. If second argument is not supplied then a boolean array is returned with values True where the corresponding element of the input is positive infinity and values False where the element of the input is not positive infinity.</source>
          <target state="translated">入力と同じ次元のブール型配列。第2引数が与えられなかった場合、入力の対応する要素が正の無限大である場合はTrue、入力の要素が正の無限大ではない場合はFalseの値を持つ真偽値配列が返されます。</target>
        </trans-unit>
        <trans-unit id="edcba5627bf9872aa7674aa396e2821a8c076d34" translate="yes" xml:space="preserve">
          <source>A boolean array with the same dimensions as the input. If second argument is not supplied then a numpy boolean array is returned with values True where the corresponding element of the input is negative infinity and values False where the element of the input is not negative infinity.</source>
          <target state="translated">入力と同じ次元のブール型配列。第2引数が与えられなかった場合は、入力の対応する要素が負の無限大である場合はTrue、入力の要素が負の無限大ではない場合はFalseの値を持つnumpy論理値配列が返されます。</target>
        </trans-unit>
        <trans-unit id="0afb7663cac315ffc6aa200bd089e46c012435b5" translate="yes" xml:space="preserve">
          <source>A boolean array with the same shape and type as &lt;code&gt;x&lt;/code&gt; to store the result.</source>
          <target state="translated">結果を保存するための &lt;code&gt;x&lt;/code&gt; と同じ形状とタイプのブール配列。</target>
        </trans-unit>
        <trans-unit id="5662229389d9892b11458d25aa4c0db03cbc85bd" translate="yes" xml:space="preserve">
          <source>A boolean array with the same shape as &lt;code&gt;x&lt;/code&gt; to store the result.</source>
          <target state="translated">結果を格納する &lt;code&gt;x&lt;/code&gt; と同じ形状のブール配列。</target>
        </trans-unit>
        <trans-unit id="36cdff4ce733d6b36ea0af26a04d95d7b9ef28d2" translate="yes" xml:space="preserve">
          <source>A boolean array, used to select only certain elements for an operation:</source>
          <target state="translated">操作のために特定の要素のみを選択するために使用されるブール値の配列。</target>
        </trans-unit>
        <trans-unit id="9fbedd8a20450a12cb3ee54eea4b82356919f525" translate="yes" xml:space="preserve">
          <source>A boolean mask derived from &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; から派生したブールマスク。</target>
        </trans-unit>
        <trans-unit id="ecafbbffb66e8564fe0247641db487ae109db731" translate="yes" xml:space="preserve">
          <source>A boolean mask with the same shape as the data;</source>
          <target state="translated">データと同じ形状のブーリアンマスク。</target>
        </trans-unit>
        <trans-unit id="fdfe3b3a0c71a1fd9345316921bc184891d04811" translate="yes" xml:space="preserve">
          <source>A brief Python primer on &lt;code&gt;__new__&lt;/code&gt; and &lt;code&gt;__init__&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__new__&lt;/code&gt; と &lt;code&gt;__init__&lt;/code&gt; に関する簡単なPython入門書</target>
        </trans-unit>
        <trans-unit id="2ff4d8bf8489691629ea13c670df9523f6f8f2b9" translate="yes" xml:space="preserve">
          <source>A business day calendar object containing the specified weekmask and holidays values.</source>
          <target state="translated">指定したウィークマスクと休日の値を含む営業日カレンダーオブジェクト。</target>
        </trans-unit>
        <trans-unit id="40a22219906d7788625c49e0079969b8993164ff" translate="yes" xml:space="preserve">
          <source>A business day calendar object that efficiently stores information defining valid days for the busday family of functions.</source>
          <target state="translated">busday ファミリーの関数の有効な日を定義する情報を効率的に格納する営業日カレンダーオブジェクト。</target>
        </trans-unit>
        <trans-unit id="df752352d813c2e3d6dd0b56023f054cf25105f6" translate="yes" xml:space="preserve">
          <source>A byte string.</source>
          <target state="translated">バイト文字列です。</target>
        </trans-unit>
        <trans-unit id="8695c88255f385733f796bbaedd0461b7eef4b10" translate="yes" xml:space="preserve">
          <source>A character code (one of &amp;lsquo;biufcmMOSUV&amp;rsquo;) identifying the general kind of data.</source>
          <target state="translated">一般的な種類のデータを識別する文字コード（「biufcmMOSUV」の1つ）。</target>
        </trans-unit>
        <trans-unit id="9816b39af0a9d971aeef29e0be64e9e1da496e15" translate="yes" xml:space="preserve">
          <source>A character code indicating the kind of array (using the array interface typestring notation). A &amp;lsquo;b&amp;rsquo; represents Boolean, a &amp;lsquo;i&amp;rsquo; represents signed integer, a &amp;lsquo;u&amp;rsquo; represents unsigned integer, &amp;lsquo;f&amp;rsquo; represents floating point, &amp;lsquo;c&amp;rsquo; represents complex floating point, &amp;lsquo;S&amp;rsquo; represents 8-bit zero-terminated bytes, &amp;lsquo;U&amp;rsquo; represents 32-bit/character unicode string, and &amp;lsquo;V&amp;rsquo; represents arbitrary.</source>
          <target state="translated">配列の種類を示す文字コード（配列インターフェースのtypestring表記を使用）。「b」はブール値、「i」は符号付き整数、「u」は符号なし整数、「f」は浮動小数点、「c」は複素浮動小数点、「S」は8ビットのゼロ終端バイト、 「U」は32ビット/文字のUnicode文字列を表し、「V」は任意の文字列を表します。</target>
        </trans-unit>
        <trans-unit id="640835ce5b60ee0611de8f1a565fb1483f0f6116" translate="yes" xml:space="preserve">
          <source>A character indicating the byte-order of this data-type object.</source>
          <target state="translated">このデータ型オブジェクトのバイト順を示す文字。</target>
        </trans-unit>
        <trans-unit id="10949fd1b1a46dea97602b78abe6497f1b34bcec" translate="yes" xml:space="preserve">
          <source>A character indicating the byte-order: &amp;lsquo;&amp;gt;&amp;rsquo; (big-endian), &amp;lsquo;&amp;lt;&amp;rsquo; (little- endian), &amp;lsquo;=&amp;rsquo; (native), &amp;lsquo;|&amp;rsquo; (irrelevant, ignore). All builtin data- types have byteorder &amp;lsquo;=&amp;rsquo;.</source>
          <target state="translated">バイト順を示す文字： '&amp;gt;'（ビッグエンディアン）、 '&amp;lt;'（リトルエンディアン）、 '='（ネイティブ）、 '|' （無関係、無視）。すべての組み込みデータ型には、バイトオーダー「=」があります。</target>
        </trans-unit>
        <trans-unit id="4d4cdc18aee1de79b93ad2db60b3cb6c05440fae" translate="yes" xml:space="preserve">
          <source>A character indicating what kind of array is present according to the typestring convention with &amp;lsquo;t&amp;rsquo; -&amp;gt; bitfield, &amp;lsquo;b&amp;rsquo; -&amp;gt; Boolean, &amp;lsquo;i&amp;rsquo; -&amp;gt; signed integer, &amp;lsquo;u&amp;rsquo; -&amp;gt; unsigned integer, &amp;lsquo;f&amp;rsquo; -&amp;gt; floating point, &amp;lsquo;c&amp;rsquo; -&amp;gt; complex floating point, &amp;lsquo;O&amp;rsquo; -&amp;gt; object, &amp;lsquo;S&amp;rsquo; -&amp;gt; (byte-)string, &amp;lsquo;U&amp;rsquo; -&amp;gt; unicode, &amp;lsquo;V&amp;rsquo; -&amp;gt; void.</source>
          <target state="translated">'t'-&amp;gt;ビットフィールド、 'b'-&amp;gt;ブール、 'i'-&amp;gt;符号付き整数、 'u'-&amp;gt;符号なし整数、 'f'-&amp;gt;のtypestring規則に従って存在する配列の種類を示す文字浮動小数点、「c」-&amp;gt;複素浮動小数点、「O」-&amp;gt;オブジェクト、「S」-&amp;gt;（バイト）文字列、「U」-&amp;gt;ユニコード、「V」-&amp;gt; void。</target>
        </trans-unit>
        <trans-unit id="43faf3ef00ea09f95d03e5feb6027b1e5af2798e" translate="yes" xml:space="preserve">
          <source>A class definition gives the blueprint for constructing an object:</source>
          <target state="translated">クラス定義は、オブジェクトを構築するための青写真を提供します。</target>
        </trans-unit>
        <trans-unit id="1e3c3cf78f0d1936ea320553b4c652bd35ed2232" translate="yes" xml:space="preserve">
          <source>A combination [int, array] or [array, int], where int is the number of bins and array is the bin edges.</source>
          <target state="translated">intはビンの数、arrayはビンの辺を表し、intはビンの数、arrayはビンの辺を表します。</target>
        </trans-unit>
        <trans-unit id="c88bbadda5f3cf3c06f67944cd11bf63c009e12d" translate="yes" xml:space="preserve">
          <source>A common algorithm is to loop over all elements of an array and perform some function with each element by issuing a function call. As function calls can be time consuming, one way to speed up this kind of algorithm is to write the function so it takes a vector of data and then write the iteration so the function call is performed for an entire dimension of data at a time. This increases the amount of work done per function call, thereby reducing the function-call over-head to a small(er) fraction of the total time. Even if the interior of the loop is performed without a function call it can be advantageous to perform the inner loop over the dimension with the highest number of elements to take advantage of speed enhancements available on micro- processors that use pipelining to enhance fundamental operations.</source>
          <target state="translated">一般的なアルゴリズムは,配列の全要素をループして,関数呼び出しを発行して各要素で何らかの関数を実行することです.関数呼び出しには時間がかかりますので、この種のアルゴリズムを高速化する1つの方法は、データのベクトルを取るように関数を書き、その後、関数呼び出しが一度にデータの全次元に対して実行されるように繰り返しを書くことです。これにより、関数呼び出しごとに行われる作業量が増加し、それにより、関数呼び出しのオーバーヘッドを総時間のわずかな割合にまで減らすことができます。ループの内部が関数呼び出しなしで実行される場合でも、要素数が最も多い次元の上で内部ループを実行することで、パイプラインを使用して基本的な演算を強化するマイクロプロセッサで利用可能な高速化を利用することができます。</target>
        </trans-unit>
        <trans-unit id="2aaf6d26cd1a295c28af26bf09dc66593484ed4c" translate="yes" xml:space="preserve">
          <source>A common application of &lt;a href=&quot;#numpy.lib.stride_tricks.sliding_window_view&quot;&gt;&lt;code&gt;sliding_window_view&lt;/code&gt;&lt;/a&gt; is the calculation of running statistics. The simplest example is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Moving_average&quot;&gt;moving average&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#numpy.lib.stride_tricks.sliding_window_view&quot;&gt; &lt;code&gt;sliding_window_view&lt;/code&gt; &lt;/a&gt;一般的なアプリケーションは、実行中の統計の計算です。最も単純な例は&lt;a href=&quot;https://en.wikipedia.org/wiki/Moving_average&quot;&gt;移動平均&lt;/a&gt;です：</target>
        </trans-unit>
        <trans-unit id="bd60264664d8586a11ad4343a10732839c215699" translate="yes" xml:space="preserve">
          <source>A common case in NumPy functions is to have outputs allocated based on the broadcasting of the input, and additionally have an optional parameter called &amp;lsquo;out&amp;rsquo; where the result will be placed when it is provided. The &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; object provides a convenient idiom that makes it very easy to support this mechanism.</source>
          <target state="translated">NumPy関数の一般的なケースは、入力のブロードキャストに基づいて出力が割り当てられ、さらに、提供されるときに結果が配置される「out」と呼ばれるオプションのパラメーターを持つことです。&lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; の&lt;/a&gt;オブジェクトは、それが非常に簡単にこのメカニズムをサポートすることができ便利なイディオムを提供します。</target>
        </trans-unit>
        <trans-unit id="b7e1a45a8be43e8f336307abe5613c812f9c3ff0" translate="yes" xml:space="preserve">
          <source>A common use case for this is filtering for desired element values. For example one may wish to select all entries from an array which are not NaN:</source>
          <target state="translated">一般的な使用例は、希望する要素の値をフィルタリングすることです。例えば、配列の中からNaNではないすべてのエントリを選択したい場合などです。</target>
        </trans-unit>
        <trans-unit id="b1deb505aba0dee9bc57b64427ffaacea33af840" translate="yes" xml:space="preserve">
          <source>A common use for &lt;code&gt;nonzero&lt;/code&gt; is to find the indices of an array, where a condition is True. Given an array &lt;code&gt;a&lt;/code&gt;, the condition &lt;code&gt;a&lt;/code&gt; &amp;gt; 3 is a boolean array and since False is interpreted as 0, ma.nonzero(a &amp;gt; 3) yields the indices of the &lt;code&gt;a&lt;/code&gt; where the condition is true.</source>
          <target state="translated">&lt;code&gt;nonzero&lt;/code&gt; の一般的な用途は、条件がTrueである配列のインデックスを見つけることです。配列 &lt;code&gt;a&lt;/code&gt; が与えられた場合、条件 &lt;code&gt;a&lt;/code&gt; &amp;gt; 3はブール配列であり、Falseは0として解釈されるため、ma.nonzero（a&amp;gt; 3）は条件がtrue である &lt;code&gt;a&lt;/code&gt; のインデックスを生成します。</target>
        </trans-unit>
        <trans-unit id="d10789a39601bd0ec3a09e1bcad97963a039079f" translate="yes" xml:space="preserve">
          <source>A common use for &lt;code&gt;nonzero&lt;/code&gt; is to find the indices of an array, where a condition is True. Given an array &lt;code&gt;a&lt;/code&gt;, the condition &lt;code&gt;a&lt;/code&gt; &amp;gt; 3 is a boolean array and since False is interpreted as 0, np.nonzero(a &amp;gt; 3) yields the indices of the &lt;code&gt;a&lt;/code&gt; where the condition is true.</source>
          <target state="translated">&lt;code&gt;nonzero&lt;/code&gt; の一般的な用途は、条件がTrueである配列のインデックスを見つけることです。配列 &lt;code&gt;a&lt;/code&gt; が与えられた場合、条件 &lt;code&gt;a&lt;/code&gt; &amp;gt; 3はブール配列であり、Falseは0として解釈されるため、np.nonzero（a&amp;gt; 3）は条件がtrue である &lt;code&gt;a&lt;/code&gt; のインデックスを生成します。</target>
        </trans-unit>
        <trans-unit id="c13f9d6e7749a3a615a2fb9f4899414cf6127141" translate="yes" xml:space="preserve">
          <source>A commonly reported issue is related to the environment activation within VSCode. Please see the &lt;a href=&quot;https://code.visualstudio.com/docs/python/environments&quot;&gt;VSCode support&lt;/a&gt; for information on how to correctly set up VSCode with virtual environments or conda.</source>
          <target state="translated">一般的に報告されている問題は、VSCode内の環境のアクティブ化に関連しています。仮想環境またはcondaでVSCodeを正しくセットアップする方法については、&lt;a href=&quot;https://code.visualstudio.com/docs/python/environments&quot;&gt;VSCodeサポート&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9cddb06859127943fd164765e9e1dc0d31aaae5b" translate="yes" xml:space="preserve">
          <source>A compatibility alias for &lt;a href=&quot;numpy.char.chararray.tobytes#numpy.char.chararray.tobytes&quot;&gt;&lt;code&gt;tobytes&lt;/code&gt;&lt;/a&gt;, with exactly the same behavior.</source>
          <target state="translated">&lt;a href=&quot;numpy.char.chararray.tobytes#numpy.char.chararray.tobytes&quot;&gt; &lt;code&gt;tobytes&lt;/code&gt; の&lt;/a&gt;互換性エイリアスで、まったく同じ動作です。</target>
        </trans-unit>
        <trans-unit id="ddf6742fae7a2839c13c13987feb78ebea116865" translate="yes" xml:space="preserve">
          <source>A compatibility alias for &lt;a href=&quot;numpy.chararray.tobytes#numpy.chararray.tobytes&quot;&gt;&lt;code&gt;tobytes&lt;/code&gt;&lt;/a&gt;, with exactly the same behavior.</source>
          <target state="translated">&lt;a href=&quot;numpy.chararray.tobytes#numpy.chararray.tobytes&quot;&gt; &lt;code&gt;tobytes&lt;/code&gt; の&lt;/a&gt;互換性エイリアスで、まったく同じ動作です。</target>
        </trans-unit>
        <trans-unit id="c2ca9930c7aa3022b2023cb7b40424e3ebdd285a" translate="yes" xml:space="preserve">
          <source>A compatibility alias for &lt;a href=&quot;numpy.ma.masked_array.tobytes#numpy.ma.masked_array.tobytes&quot;&gt;&lt;code&gt;tobytes&lt;/code&gt;&lt;/a&gt;, with exactly the same behavior.</source>
          <target state="translated">&lt;a href=&quot;numpy.ma.masked_array.tobytes#numpy.ma.masked_array.tobytes&quot;&gt; &lt;code&gt;tobytes&lt;/code&gt; の&lt;/a&gt;互換性エイリアスで、まったく同じ動作です。</target>
        </trans-unit>
        <trans-unit id="5b8bb5fcd6312ad4b1b1abda5b2b40c4dcca081b" translate="yes" xml:space="preserve">
          <source>A compatibility alias for &lt;a href=&quot;numpy.ma.maskedarray.tobytes#numpy.ma.MaskedArray.tobytes&quot;&gt;&lt;code&gt;tobytes&lt;/code&gt;&lt;/a&gt;, with exactly the same behavior.</source>
          <target state="translated">&lt;a href=&quot;numpy.ma.maskedarray.tobytes#numpy.ma.MaskedArray.tobytes&quot;&gt; &lt;code&gt;tobytes&lt;/code&gt; の&lt;/a&gt;互換性エイリアスで、まったく同じ動作です。</target>
        </trans-unit>
        <trans-unit id="8c67fdee0c16af3c366d036baaa3dda4144ec11a" translate="yes" xml:space="preserve">
          <source>A compatibility alias for &lt;a href=&quot;numpy.matrix.tobytes#numpy.matrix.tobytes&quot;&gt;&lt;code&gt;tobytes&lt;/code&gt;&lt;/a&gt;, with exactly the same behavior.</source>
          <target state="translated">&lt;a href=&quot;numpy.matrix.tobytes#numpy.matrix.tobytes&quot;&gt; &lt;code&gt;tobytes&lt;/code&gt; の&lt;/a&gt;互換性エイリアスで、まったく同じ動作です。</target>
        </trans-unit>
        <trans-unit id="403f98dd11ac0ea8b4b4a4e6383b2de15c224854" translate="yes" xml:space="preserve">
          <source>A compatibility alias for &lt;a href=&quot;numpy.memmap.tobytes#numpy.memmap.tobytes&quot;&gt;&lt;code&gt;tobytes&lt;/code&gt;&lt;/a&gt;, with exactly the same behavior.</source>
          <target state="translated">&lt;a href=&quot;numpy.memmap.tobytes#numpy.memmap.tobytes&quot;&gt; &lt;code&gt;tobytes&lt;/code&gt; の&lt;/a&gt;互換性エイリアスで、まったく同じ動作です。</target>
        </trans-unit>
        <trans-unit id="98670bd91c49457adbc28a71feb0c60edea8c768" translate="yes" xml:space="preserve">
          <source>A compatibility alias for &lt;a href=&quot;numpy.ndarray.tobytes#numpy.ndarray.tobytes&quot;&gt;&lt;code&gt;tobytes&lt;/code&gt;&lt;/a&gt;, with exactly the same behavior.</source>
          <target state="translated">&lt;a href=&quot;numpy.ndarray.tobytes#numpy.ndarray.tobytes&quot;&gt; &lt;code&gt;tobytes&lt;/code&gt; の&lt;/a&gt;互換性エイリアスで、まったく同じ動作です。</target>
        </trans-unit>
        <trans-unit id="a8560aa0ca24f61565070f20c4181264f1847f07" translate="yes" xml:space="preserve">
          <source>A compatibility alias for &lt;a href=&quot;numpy.recarray.tobytes#numpy.recarray.tobytes&quot;&gt;&lt;code&gt;tobytes&lt;/code&gt;&lt;/a&gt;, with exactly the same behavior.</source>
          <target state="translated">&lt;a href=&quot;numpy.recarray.tobytes#numpy.recarray.tobytes&quot;&gt; &lt;code&gt;tobytes&lt;/code&gt; の&lt;/a&gt;互換性エイリアスで、まったく同じ動作です。</target>
        </trans-unit>
        <trans-unit id="487e433b028ef24e8b93237fc46f3635627e112e" translate="yes" xml:space="preserve">
          <source>A compatibility alias for &lt;code&gt;tobytes&lt;/code&gt;, with exactly the same behavior.</source>
          <target state="translated">&lt;code&gt;tobytes&lt;/code&gt; の互換性エイリアスで、まったく同じ動作です。</target>
        </trans-unit>
        <trans-unit id="1c327d5ba1c1107eecd64cf160d7a3c3b72c1398" translate="yes" xml:space="preserve">
          <source>A complex number or sequence of complex numbers.</source>
          <target state="translated">複素数または複素数列。</target>
        </trans-unit>
        <trans-unit id="0a0cfa11c1789a966650ad3c5878d84e46b3ac64" translate="yes" xml:space="preserve">
          <source>A complex- or real-valued matrix whose eigenvalues are to be computed.</source>
          <target state="translated">固有値が計算される複素または実数の行列.</target>
        </trans-unit>
        <trans-unit id="df6ecf1ca51aead983c8d0521be2a8d9c2c969cb" translate="yes" xml:space="preserve">
          <source>A complex- or real-valued matrix whose eigenvalues will be computed.</source>
          <target state="translated">固有値が計算される複素または実数の行列.</target>
        </trans-unit>
        <trans-unit id="b868700bc42d3832c640ddbc946303500209dfb5" translate="yes" xml:space="preserve">
          <source>A comprehensive overview of all objects that can be coerced into data types.</source>
          <target state="translated">データ型に強制的に組み込むことができるすべてのオブジェクトの包括的な概要です。</target>
        </trans-unit>
        <trans-unit id="846e9c828a6dacb3e9b0f03c4bf9ede31aa0b250" translate="yes" xml:space="preserve">
          <source>A compromise to get a good value. For small datasets the Sturges value will usually be chosen, while larger datasets will usually default to FD. Avoids the overly conservative behaviour of FD and Sturges for small and large datasets respectively. Switchover point is usually</source>
          <target state="translated">良い値を得るための妥協点。小さなデータセットでは通常Sturgesの値が選択されますが,大きなデータセットでは通常FDがデフォルトとなります.小さなデータセットではFD,大きなデータセットではSturgesの過度に保守的な振る舞いを避けることができます.切り替えポイントは通常</target>
        </trans-unit>
        <trans-unit id="a276bc6d03ad0669e3cc7c8501a64ab2b0aabf71" translate="yes" xml:space="preserve">
          <source>A concatenated ndarray or matrix.</source>
          <target state="translated">連結されたndarrayまたはmatrix。</target>
        </trans-unit>
        <trans-unit id="81e1ddd8fad2d5da09a556c355d68b360223b6d1" translate="yes" xml:space="preserve">
          <source>A consensus of datetime64 users agreed that this behavior is undesirable and at odds with how datetime64 is usually used (e.g., by &lt;a href=&quot;http://pandas.pydata.org&quot;&gt;pandas&lt;/a&gt;). For most use cases, a timezone naive datetime type is preferred, similar to the &lt;code&gt;datetime.datetime&lt;/code&gt; type in the Python standard library. Accordingly, datetime64 no longer assumes that input is in local time, nor does it print local times:</source>
          <target state="translated">datetime64ユーザーのコンセンサスは、この動作は望ましくなく、通常のdatetime64の使用方法（たとえば、&lt;a href=&quot;http://pandas.pydata.org&quot;&gt;pandas&lt;/a&gt;）と矛盾することに同意しました。ほとんどのユースケースでは、Python標準ライブラリの &lt;code&gt;datetime.datetime&lt;/code&gt; タイプと同様に、タイムゾーンの単純な日時タイプが推奨されます。したがって、datetime64は、入力が現地時間であるとは見なさず、現地時間を出力しません。</target>
        </trans-unit>
        <trans-unit id="e341e4c13ef8eaa977a5ceb53e0656085e29c24c" translate="yes" xml:space="preserve">
          <source>A convenience class, used to encapsulate &amp;ldquo;natural&amp;rdquo; operations on polynomials so that said operations may take on their customary form in code (see Examples).</source>
          <target state="translated">多項式の「自然な」演算をカプセル化するために使用される便利なクラスです。これにより、上記の演算は通常の形式でコードを実行できます（例を参照）。</target>
        </trans-unit>
        <trans-unit id="9c7f08865ee30c63db8fd38fba04facd0ce29551" translate="yes" xml:space="preserve">
          <source>A convenience function &lt;a href=&quot;#numpy.lib.recfunctions.repack_fields&quot;&gt;&lt;code&gt;numpy.lib.recfunctions.repack_fields&lt;/code&gt;&lt;/a&gt; converts an aligned dtype or array to a packed one and vice versa. It takes either a dtype or structured ndarray as an argument, and returns a copy with fields re-packed, with or without padding bytes.</source>
          <target state="translated">便利な関数&lt;a href=&quot;#numpy.lib.recfunctions.repack_fields&quot;&gt; &lt;code&gt;numpy.lib.recfunctions.repack_fields&lt;/code&gt; は&lt;/a&gt;、整列されたdtypeまたは配列をパックされたものに変換します。引数としてdtypeまたは構造化ndarrayのいずれかを取り、パディングバイトの有無にかかわらず、フィールドが再パックされたコピーを返します。</target>
        </trans-unit>
        <trans-unit id="151620da811c85a7079865f27be65ea6f5b0587f" translate="yes" xml:space="preserve">
          <source>A convenient alias for None, useful for indexing arrays.</source>
          <target state="translated">配列のインデックス作成に便利な None のエイリアス。</target>
        </trans-unit>
        <trans-unit id="a61da4fa1e4f696ca20240f1c2d4dbb1a7028a6a" translate="yes" xml:space="preserve">
          <source>A convenient pattern is to define a decorator &lt;code&gt;implements&lt;/code&gt; that can be used to add functions to &lt;code&gt;HANDLED_FUNCTIONS&lt;/code&gt;.</source>
          <target state="translated">便利なパターンは、 &lt;code&gt;HANDLED_FUNCTIONS&lt;/code&gt; に関数を追加するために使用できるデコレータ &lt;code&gt;implements&lt;/code&gt; を定義することです。</target>
        </trans-unit>
        <trans-unit id="29c806e36fe8b5590b73a2921578a354462385fd" translate="yes" xml:space="preserve">
          <source>A convenient way to count dimensions in a printed vector is to count &lt;code&gt;[&lt;/code&gt; symbols after the open-parenthesis. This is useful in distinguishing, say, a (1,2,3) shape from a (2,3) shape:</source>
          <target state="translated">印刷されたベクトルの次元を数える便利な方法は、開き括弧の後に &lt;code&gt;[&lt;/code&gt; 記号を数えることです。これは、たとえば、（1,2,3）形状と（2,3）形状を区別するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="e2be79f4ed756589d21e373791f3f50d6d864035" translate="yes" xml:space="preserve">
          <source>A convenient way to execute examples is the &lt;code&gt;%doctest_mode&lt;/code&gt; mode of IPython, which allows for pasting of multi-line examples and preserves indentation.</source>
          <target state="translated">例を実行する便利な方法は、IPythonの &lt;code&gt;%doctest_mode&lt;/code&gt; モードです。これにより、複数行の例の貼り付けが可能になり、インデントが保持されます。</target>
        </trans-unit>
        <trans-unit id="30abac0c126f9bd71a6c782f2b03c3c3aba2c57f" translate="yes" xml:space="preserve">
          <source>A copy is performed by default.</source>
          <target state="translated">デフォルトではコピーが行われます。</target>
        </trans-unit>
        <trans-unit id="9fa36776969d9a57dc8d794768fefaeedefecd72" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;a&lt;/code&gt; with &lt;code&gt;b&lt;/code&gt; appended to &lt;code&gt;axis&lt;/code&gt;. Note that &lt;a href=&quot;#numpy.ma.append&quot;&gt;&lt;code&gt;append&lt;/code&gt;&lt;/a&gt; does not occur in-place: a new array is allocated and filled. If &lt;code&gt;axis&lt;/code&gt; is None, the result is a flattened array.</source>
          <target state="translated">コピーと &lt;code&gt;b&lt;/code&gt; に付加 &lt;code&gt;axis&lt;/code&gt; 。&lt;a href=&quot;#numpy.ma.append&quot;&gt; &lt;code&gt;append&lt;/code&gt; &lt;/a&gt;はインプレースでは発生しないことに注意してください。新しい配列が割り当てられて埋められます。場合は &lt;code&gt;axis&lt;/code&gt; Noneで、結果は扁平な配列です。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d9a2722a855a841d1e53f1ef891ed477c6766f9" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;a&lt;/code&gt; with &lt;code&gt;b&lt;/code&gt; appended to &lt;code&gt;axis&lt;/code&gt;. Note that &lt;a href=&quot;numpy.append#numpy.append&quot;&gt;&lt;code&gt;append&lt;/code&gt;&lt;/a&gt; does not occur in-place: a new array is allocated and filled. If &lt;code&gt;axis&lt;/code&gt; is None, the result is a flattened array.</source>
          <target state="translated">コピーと &lt;code&gt;b&lt;/code&gt; に付加 &lt;code&gt;axis&lt;/code&gt; 。&lt;a href=&quot;numpy.append#numpy.append&quot;&gt; &lt;code&gt;append&lt;/code&gt; &lt;/a&gt;はインプレースでは発生しないことに注意してください。新しい配列が割り当てられ、埋められます。場合は &lt;code&gt;axis&lt;/code&gt; Noneで、結果は扁平な配列です。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ddd8698ec4c36f13446d06850216b55d57301cb" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;a&lt;/code&gt; without the slices along axis for which &lt;code&gt;condition&lt;/code&gt; is false.</source>
          <target state="translated">コピーそのための軸に沿ってスライスなしの &lt;code&gt;condition&lt;/code&gt; 偽です。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e51e10da4f3fc66565226f8d7532becd87cc778" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;arr&lt;/code&gt; with &lt;code&gt;values&lt;/code&gt; appended to &lt;code&gt;axis&lt;/code&gt;. Note that &lt;a href=&quot;#numpy.append&quot;&gt;&lt;code&gt;append&lt;/code&gt;&lt;/a&gt; does not occur in-place: a new array is allocated and filled. If &lt;code&gt;axis&lt;/code&gt; is None, &lt;code&gt;out&lt;/code&gt; is a flattened array.</source>
          <target state="translated">コピー &lt;code&gt;arr&lt;/code&gt; との &lt;code&gt;values&lt;/code&gt; に付加 &lt;code&gt;axis&lt;/code&gt; 。&lt;a href=&quot;#numpy.append&quot;&gt; &lt;code&gt;append&lt;/code&gt; &lt;/a&gt;はインプレースでは発生しないことに注意してください。新しい配列が割り当てられて埋められます。 &lt;code&gt;axis&lt;/code&gt; がNoneの場合、 &lt;code&gt;out&lt;/code&gt; はフラット化された配列です。</target>
        </trans-unit>
        <trans-unit id="92111473d390efd8adf5b878205e8bc603afc606" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;arr&lt;/code&gt; with &lt;code&gt;values&lt;/code&gt; inserted. Note that &lt;a href=&quot;#numpy.insert&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt; does not occur in-place: a new array is returned. If &lt;code&gt;axis&lt;/code&gt; is None, &lt;code&gt;out&lt;/code&gt; is a flattened array.</source>
          <target state="translated">コピーを &lt;code&gt;arr&lt;/code&gt; して &lt;code&gt;values&lt;/code&gt; 挿入します。&lt;a href=&quot;#numpy.insert&quot;&gt; &lt;code&gt;insert&lt;/code&gt; &lt;/a&gt;はインプレースでは発生しないことに注意してください。新しい配列が返されます。 &lt;code&gt;axis&lt;/code&gt; がNoneの場合、 &lt;code&gt;out&lt;/code&gt; はフラット化された配列です。</target>
        </trans-unit>
        <trans-unit id="1b87c9376fbcb3d0b125161eee5f9adf601f6324" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;arr&lt;/code&gt; with the elements specified by &lt;code&gt;obj&lt;/code&gt; removed. Note that &lt;a href=&quot;#numpy.delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; does not occur in-place. If &lt;code&gt;axis&lt;/code&gt; is None, &lt;code&gt;out&lt;/code&gt; is a flattened array.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; で指定された要素が削除された &lt;code&gt;arr&lt;/code&gt; のコピー。&lt;a href=&quot;#numpy.delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;はインプレースでは発生しないことに注意してください。 &lt;code&gt;axis&lt;/code&gt; がNoneの場合、 &lt;code&gt;out&lt;/code&gt; はフラット化された配列です。</target>
        </trans-unit>
        <trans-unit id="ef5ec484979c813657ea6e12962cceaa803f005f" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;self&lt;/code&gt; with invalid entries replaced by &lt;em&gt;fill_value&lt;/em&gt; (be it the function argument or the attribute of &lt;code&gt;self&lt;/code&gt;), or &lt;code&gt;self&lt;/code&gt; itself as an ndarray if there are no invalid entries to be replaced.</source>
          <target state="translated">無効なエントリが&lt;em&gt;fill_value&lt;/em&gt;（関数の引数または &lt;code&gt;self&lt;/code&gt; の属性）で置き換えられた &lt;code&gt;self&lt;/code&gt; のコピー。または、置き換えられる無効なエントリがない場合は、ndarrayとしての &lt;code&gt;self&lt;/code&gt; 自身。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="20929bf6f0f5783301a154635f1db6c0f7b0847c" translate="yes" xml:space="preserve">
          <source>A copy of the holiday array indicating additional invalid days.</source>
          <target state="translated">無効な日の追加を示す休日配列のコピー。</target>
        </trans-unit>
        <trans-unit id="83f8a7d3c63e1b73ba667b3bf1e267f936c633fe" translate="yes" xml:space="preserve">
          <source>A copy of the input array, flattened to one dimension.</source>
          <target state="translated">入力配列のコピーで,1次元に平坦化されています.</target>
        </trans-unit>
        <trans-unit id="0da11f2afa7a132e72b7e8d106c881e77fd49d7b" translate="yes" xml:space="preserve">
          <source>A copy of the input data as a list of 1-d arrays.</source>
          <target state="translated">入力データを1次元配列のリストとしてコピーしたもの。</target>
        </trans-unit>
        <trans-unit id="a2ec4d1c7d29fce0bbbb2b93588b5082ae76dce1" translate="yes" xml:space="preserve">
          <source>A copy of the matrix, flattened to a &lt;code&gt;(1, N)&lt;/code&gt; matrix where &lt;code&gt;N&lt;/code&gt; is the number of elements in the original matrix.</source>
          <target state="translated">マトリックスのコピーは、平らに &lt;code&gt;(1, N)&lt;/code&gt; 行列 &lt;code&gt;N&lt;/code&gt; は元の行列の要素の数です。</target>
        </trans-unit>
        <trans-unit id="ec8ccf8212225ee2362f20a54059f106604c4c8e" translate="yes" xml:space="preserve">
          <source>A copy of the seven-element boolean mask indicating valid days.</source>
          <target state="translated">有効な日を示す7つの要素のブールマスクのコピー。</target>
        </trans-unit>
        <trans-unit id="48da051f6fb411e5d7f076156cd5a288fde0f19f" translate="yes" xml:space="preserve">
          <source>A copy of the specified element of the array as a suitable Python scalar</source>
          <target state="translated">配列の指定された要素のコピーを適切な Python スカラーとして出力します。</target>
        </trans-unit>
        <trans-unit id="c6bc1a9690ca89addc6fd0c521d335f7301cabfb" translate="yes" xml:space="preserve">
          <source>A couple examples illustrating how choose broadcasts:</source>
          <target state="translated">放送を選択する方法を説明するいくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="79c55eeffdc406262a02700dff6759d4344a8e15" translate="yes" xml:space="preserve">
          <source>A ctype scalar, union, array, or struct</source>
          <target state="translated">ctype スカラ,ユニオン,配列,構造体のいずれかです.</target>
        </trans-unit>
        <trans-unit id="4d35563e75151cc0dbb5c5b566817578403fc0ff" translate="yes" xml:space="preserve">
          <source>A ctypes library object</source>
          <target state="translated">ctypes ライブラリオブジェクト</target>
        </trans-unit>
        <trans-unit id="d1e5cd9e7ac36feddf15161fea7659065ed8c0ab" translate="yes" xml:space="preserve">
          <source>A custom formatter can be used to display array elements as desired:</source>
          <target state="translated">カスタムフォーマッタを使用して、必要に応じて配列要素を表示することができます。</target>
        </trans-unit>
        <trans-unit id="ddb7299e60123e091aa3800ff8db6bda614f81ab" translate="yes" xml:space="preserve">
          <source>A data type composed of other datatypes</source>
          <target state="translated">他のデータ型で構成されるデータ型</target>
        </trans-unit>
        <trans-unit id="c7f7b6a83ce973c0c5ab9720eba75e9be43c8cc7" translate="yes" xml:space="preserve">
          <source>A data type object (an instance of &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;numpy.dtype&lt;/code&gt;&lt;/a&gt; class) describes how the bytes in the fixed-size block of memory corresponding to an array item should be interpreted. It describes the following aspects of the data:</source>
          <target state="translated">データ型オブジェクト（&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;numpy.dtype&lt;/code&gt; &lt;/a&gt;クラスのインスタンス）は、配列項目に対応する固定サイズのメモリブロック内のバイトをどのように解釈するかを記述します。データの次の側面について説明します。</target>
        </trans-unit>
        <trans-unit id="8e711db1425e16cacba4452fb8206715d7336cab" translate="yes" xml:space="preserve">
          <source>A data-type bit-flag that determines if the data-type exhibits object- array like behavior. Each bit in this member is a flag which are named as:</source>
          <target state="translated">データ型がオブジェクト配列のような振る舞いをするかどうかを決定するデータ型ビットフラグ。このメンバの各ビットは、以下のように名付けられたフラグです。</target>
        </trans-unit>
        <trans-unit id="4a302bf74f669a81b79d991c1f7d62a9555dbdfb" translate="yes" xml:space="preserve">
          <source>A data-type scalar that allows field access as attribute lookup.</source>
          <target state="translated">属性ルックアップとしてのフィールドアクセスを可能にするデータ型スカラー。</target>
        </trans-unit>
        <trans-unit id="cd9de6159d14408aafbc1129f2e3af5366f0a468" translate="yes" xml:space="preserve">
          <source>A datetime stored as a 64-bit integer, counting from &lt;code&gt;1970-01-01T00:00:00&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;1970-01-01T00:00:00&lt;/code&gt; から数えて64ビット整数として格納された日時。</target>
        </trans-unit>
        <trans-unit id="4587893c1e5eca1b7c042f70853952070073a28c" translate="yes" xml:space="preserve">
          <source>A deprecated version of &lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt; which depends upon &lt;code&gt;dealloc&lt;/code&gt; to trigger the writeback. For backwards compatibility, &lt;a href=&quot;#c.PyArray_ResolveWritebackIfCopy&quot;&gt;&lt;code&gt;PyArray_ResolveWritebackIfCopy&lt;/code&gt;&lt;/a&gt; is called at &lt;code&gt;dealloc&lt;/code&gt; but relying on that behavior is deprecated and not supported in PyPy.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt; の&lt;/a&gt;非推奨バージョン。ライトバックをトリガーするために &lt;code&gt;dealloc&lt;/code&gt; に依存しています。後方互換性のために、&lt;a href=&quot;#c.PyArray_ResolveWritebackIfCopy&quot;&gt; &lt;code&gt;PyArray_ResolveWritebackIfCopy&lt;/code&gt; &lt;/a&gt;はdeallocで呼び出され &lt;code&gt;dealloc&lt;/code&gt; が、その動作に依存することは非推奨であり、PyPyではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="9c1b833307cee9e3cf72cc77b59a40521d42391e" translate="yes" xml:space="preserve">
          <source>A descriptive example:</source>
          <target state="translated">記述的な例。</target>
        </trans-unit>
        <trans-unit id="354ccd659fa1c8dfa9972bddfe036ab83716c35b" translate="yes" xml:space="preserve">
          <source>A detailed explanation of ufuncs can be found in the docs for &lt;a href=&quot;../ufuncs#ufuncs&quot;&gt;Universal functions (ufunc)&lt;/a&gt;.</source>
          <target state="translated">ufuncsの詳細な説明は、&lt;a href=&quot;../ufuncs#ufuncs&quot;&gt;ユニバーサル関数（ufunc）の&lt;/a&gt;ドキュメントにあります。</target>
        </trans-unit>
        <trans-unit id="27b24a3f9af87d38cf8835043360961c446d5af3" translate="yes" xml:space="preserve">
          <source>A dictionary mapping column number to a function that will parse the column string into the desired value. E.g., if column 0 is a date string: &lt;code&gt;converters = {0: datestr2num}&lt;/code&gt;. Converters can also be used to provide a default value for missing data (but see also &lt;a href=&quot;numpy.genfromtxt#numpy.genfromtxt&quot;&gt;&lt;code&gt;genfromtxt&lt;/code&gt;&lt;/a&gt;): &lt;code&gt;converters = {3: lambda s: float(s.strip() or 0)}&lt;/code&gt;. Default: None.</source>
          <target state="translated">列番号を目的の値に解析する関数に列番号をマッピングする辞書。たとえば、列0が日付文字列の場合： &lt;code&gt;converters = {0: datestr2num}&lt;/code&gt; 。コンバーターを使用して、欠損データのデフォルト値を提供することもできます（ただし&lt;a href=&quot;numpy.genfromtxt#numpy.genfromtxt&quot;&gt; &lt;code&gt;genfromtxt&lt;/code&gt; &lt;/a&gt;も参照）： &lt;code&gt;converters = {3: lambda s: float(s.strip() or 0)}&lt;/code&gt; 。デフォルト：なし。</target>
        </trans-unit>
        <trans-unit id="1cbd819dc2f446364b9ff7d2c230f4036ccf0f7c" translate="yes" xml:space="preserve">
          <source>A dictionary of field names</source>
          <target state="translated">フィールド名の辞書</target>
        </trans-unit>
        <trans-unit id="52eb8fbc37289e50998be5d2ab19d74829272082" translate="yes" xml:space="preserve">
          <source>A dictionary of field parameter arrays</source>
          <target state="translated">フィールドパラメータ配列の辞書</target>
        </trans-unit>
        <trans-unit id="b6d48692d200a87a18970c15bc3c417bcace59d3" translate="yes" xml:space="preserve">
          <source>A dictionary of items (3 required and 5 optional). The optional keys in the dictionary have implied defaults if they are not provided.</source>
          <target state="translated">項目の辞書 (3 個の必須キーと 5 個の任意キー)。辞書内のオプションのキーは、提供されなかった場合のデフォルト値を暗示します。</target>
        </trans-unit>
        <trans-unit id="2dcb7b8d8713e202dcb8ec09b8dbd906a4793948" translate="yes" xml:space="preserve">
          <source>A dictionary of user-defined 1-d vector loops (stored as CObject ptrs) for user-defined types. A loop may be registered by the user for any user-defined type. It is retrieved by type number. User defined type numbers are always larger than &lt;a href=&quot;c-api.dtype#c.NPY_USERDEF&quot;&gt;&lt;code&gt;NPY_USERDEF&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ユーザー定義型のユーザー定義の1次元ベクトルループ（CObject ptrsとして格納）の辞書。ループは、ユーザー定義のタイプに対してユーザーが登録できます。タイプ番号で検索されます。ユーザー定義のタイプ番号は、常に&lt;a href=&quot;c-api.dtype#c.NPY_USERDEF&quot;&gt; &lt;code&gt;NPY_USERDEF&lt;/code&gt; &lt;/a&gt;より大きくなります。</target>
        </trans-unit>
        <trans-unit id="ebd09dda8da60557319d62b2fae5ccc4c0f56bc9" translate="yes" xml:space="preserve">
          <source>A dictionary of user-defined 1-d vector loops (stored as CObject ptrs) for user-defined types. A loop may be registered by the user for any user-defined type. It is retrieved by type number. User defined type numbers are always larger than &lt;a href=&quot;dtype#c.NPY_USERDEF&quot;&gt;&lt;code&gt;NPY_USERDEF&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ユーザー定義型のユーザー定義1-dベクトルループ（CObject ptrsとして保存）の辞書。ループは、ユーザーが定義した任意のタイプに対してユーザーが登録できます。タイプ番号で取得されます。ユーザー定義のタイプ番号は常に&lt;a href=&quot;dtype#c.NPY_USERDEF&quot;&gt; &lt;code&gt;NPY_USERDEF&lt;/code&gt; &lt;/a&gt;よりも大きくなります。</target>
        </trans-unit>
        <trans-unit id="382873e9e41e4be46c82c0e20d4fc4101cb301ad" translate="yes" xml:space="preserve">
          <source>A dictionary possibly containing ndarrays. Default is globals().</source>
          <target state="translated">ndarrays を含む可能性のある辞書。デフォルトは globals()です。</target>
        </trans-unit>
        <trans-unit id="e4ab9ce9d6d7e21b1f408721fe18d109738fb1b3" translate="yes" xml:space="preserve">
          <source>A dictionary that replaces global operands in current frame. Ignored if &lt;code&gt;obj&lt;/code&gt; is not a string.</source>
          <target state="translated">現在のフレームのグローバルオペランドを置き換えるディクショナリ。 &lt;code&gt;obj&lt;/code&gt; が文字列でない場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="0923166d8e51f518b3d2e18daa42e324c64d0629" translate="yes" xml:space="preserve">
          <source>A dictionary that replaces local operands in current frame. Ignored if &lt;code&gt;obj&lt;/code&gt; is not a string or &lt;code&gt;gdict&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">現在のフレームのローカルオペランドを置き換えるディクショナリ。 &lt;code&gt;obj&lt;/code&gt; が文字列でない場合、または &lt;code&gt;gdict&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; の場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="ddae21817b585619439839486178cd2998f464d2" translate="yes" xml:space="preserve">
          <source>A dictionary that replaces local operands in current frame. Ignored if &lt;code&gt;obj&lt;/code&gt; is not a string or &lt;code&gt;gdict&lt;/code&gt; is None.</source>
          <target state="translated">現在のフレームのローカルオペランドを置き換える辞書。 &lt;code&gt;obj&lt;/code&gt; が文字列でない場合、または &lt;code&gt;gdict&lt;/code&gt; がNoneの場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="06bcc7d3d4264a6d6419702c27d5d128fee3024e" translate="yes" xml:space="preserve">
          <source>A dictionary with keys &amp;ldquo;divide&amp;rdquo;, &amp;ldquo;over&amp;rdquo;, &amp;ldquo;under&amp;rdquo;, and &amp;ldquo;invalid&amp;rdquo;, whose values are from the strings &amp;ldquo;ignore&amp;rdquo;, &amp;ldquo;print&amp;rdquo;, &amp;ldquo;log&amp;rdquo;, &amp;ldquo;warn&amp;rdquo;, &amp;ldquo;raise&amp;rdquo;, and &amp;ldquo;call&amp;rdquo;. The keys represent possible floating-point exceptions, and the values define how these exceptions are handled.</source>
          <target state="translated">キー「divide」、「over」、「under」、および「invalid」を持つディクショナリ。値は、「ignore」、「print」、「log」、「warn」、「raise」、および「call」の文字列からのものです。 」。キーは起こり得る浮動小数点例外を表し、値はこれらの例外の処理方法を定義します。</target>
        </trans-unit>
        <trans-unit id="274bd217df99031a1f7ca14224d6a8c744cd94fc" translate="yes" xml:space="preserve">
          <source>A dimension index is an integer representing a dimension name. It enumerates the dimension names according to the order of the first occurrence of each name in the signature.</source>
          <target state="translated">ディメンジョン・インデックスは、ディメンジョン名を表す整数です。これは、シグネチャ内の各名前が最初に出現した順にディメンジョン名を列挙します。</target>
        </trans-unit>
        <trans-unit id="dc19580a731f382683601a5487121a4588f3baec" translate="yes" xml:space="preserve">
          <source>A dimension name represents a core dimension in the signature. Different dimensions may share a name, indicating that they are of the same size.</source>
          <target state="translated">ディメンジョン名は、署名のコア・ディメンジョンを表す。異なるディメンジョンは、同じサイズであることを示す名前を共有することができます。</target>
        </trans-unit>
        <trans-unit id="8226218a3ad7de84a161b9a0ceec134c8325c475" translate="yes" xml:space="preserve">
          <source>A directory &lt;code&gt;numpy&lt;/code&gt; is created on your machine. (If you already have a numpy directory, GitHub will choose a different name like &lt;code&gt;numpy-1&lt;/code&gt;.)</source>
          <target state="translated">ディレクトリ &lt;code&gt;numpy&lt;/code&gt; がマシン上に作成されます。（すでにnumpyディレクトリがある場合、GitHubは &lt;code&gt;numpy-1&lt;/code&gt; のような別の名前を選択します。）</target>
        </trans-unit>
        <trans-unit id="e91d306ab0d3f2790363b14c868a1e01c6605ffa" translate="yes" xml:space="preserve">
          <source>A docstring for each ufunc. The first part of the docstring is dynamically generated from the number of outputs, the name, and the number of inputs. The second part of the docstring is provided at creation time and stored with the ufunc.</source>
          <target state="translated">ufuncごとのdocstring。docstringの最初の部分は、出力数、名前、入力数から動的に生成される。docstringの2番目の部分は作成時に提供され、ufuncと一緒に格納されます。</target>
        </trans-unit>
        <trans-unit id="fe6d66d9e897d097e9e2bc9bacd072a2edefb351" translate="yes" xml:space="preserve">
          <source>A documentation string (docstring) is a string that describes a module, function, class, or method definition. The docstring is a special attribute of the object (&lt;code&gt;object.__doc__&lt;/code&gt;) and, for consistency, is surrounded by triple double quotes, i.e.:</source>
          <target state="translated">ドキュメント文字列（docstring）は、モジュール、関数、クラス、またはメソッドの定義を説明する文字列です。docstringは、オブジェクト（ &lt;code&gt;object.__doc__&lt;/code&gt; ）の特別な属性であり、一貫性を保つために、次のように3重引用符で囲みます。</target>
        </trans-unit>
        <trans-unit id="cb5a9b4e2f08d90c7582c32e33a8dd3a11c7dba2" translate="yes" xml:space="preserve">
          <source>A dtype that looks like &lt;code&gt;ndtype&lt;/code&gt;, the type of all fields is boolean.</source>
          <target state="translated">DTYPEは、のように見えること &lt;code&gt;ndtype&lt;/code&gt; 、すべてのフィールドのタイプはbooleanです。</target>
        </trans-unit>
        <trans-unit id="e0e4680768b858ee23cfd8b02898abfaa7246693" translate="yes" xml:space="preserve">
          <source>A few new C-structures were found to be useful in the development of NumPy. These C-structures are used in at least one C-API call and are therefore documented here. The main reason these structures were defined is to make it easy to use the Python ParseTuple C-API to convert from Python objects to a useful C-Object.</source>
          <target state="translated">いくつかの新しいC-構造体がNumPyの開発に有用であることがわかりました。これらのC-structureは少なくとも1つのC-APIコールで使用されているため、ここではドキュメント化されています。これらの構造体が定義された主な理由は、Pythonオブジェクトから有用なC-Objectに変換するためにPython ParseTuple C-APIを簡単に使用できるようにするためです。</target>
        </trans-unit>
        <trans-unit id="926e6c8b101edc8cb1b7d7e49a378c0e283af0e6" translate="yes" xml:space="preserve">
          <source>A few sentences giving an extended description. This section should be used to clarify &lt;em&gt;functionality&lt;/em&gt;, not to discuss implementation detail or background theory, which should rather be explored in the &lt;strong&gt;Notes&lt;/strong&gt; section below. You may refer to the parameters and the function name, but parameter descriptions still belong in the &lt;strong&gt;Parameters&lt;/strong&gt; section.</source>
          <target state="translated">詳細な説明を与えるいくつかの文。このセクションは、&lt;em&gt;機能&lt;/em&gt;を明確にするために使用する必要があります。実装の詳細や背景理論について説明するのではなく、以下の&lt;strong&gt;注&lt;/strong&gt;セクションで検討する必要があります。パラメータと関数名を参照することもできますが、パラメータの説明は引き続き[&lt;strong&gt;パラメータ]&lt;/strong&gt;セクションにあります。</target>
        </trans-unit>
        <trans-unit id="d56136f42370cc828f6f8282f41aa378eb0668e7" translate="yes" xml:space="preserve">
          <source>A field is a view of the array data with a given data-type. The values in the view are determined by the given type and the offset into the current array in bytes. The offset needs to be such that the view dtype fits in the array dtype; for example an array of dtype complex128 has 16-byte elements. If taking a view with a 32-bit integer (4 bytes), the offset needs to be between 0 and 12 bytes.</source>
          <target state="translated">フィールドは、与えられたデータ型を持つ配列データのビューです。ビュー内の値は、指定された型と現在の配列へのオフセット(バイト単位)によって決定されます。オフセットは、ビューのdtypeが配列のdtypeに収まるようにする必要があります;例えば、dtype complex128の配列は16バイトの要素を持ちます。32ビット整数(4バイト)のビューを取得する場合、オフセットは0から12バイトの間でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d7af18874bc600ff203076889532fb22ddebf1a6" translate="yes" xml:space="preserve">
          <source>A filtering example</source>
          <target state="translated">フィルタリングの例</target>
        </trans-unit>
        <trans-unit id="d1b21d39d7b2c4b29140daef6f51fe2f038fec79" translate="yes" xml:space="preserve">
          <source>A first possibility is to directly invoke the &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">最初の可能性は、&lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt;クラスを直接呼び出すことです。</target>
        </trans-unit>
        <trans-unit id="00c6690cb3260ce56f71af57e5753fbdedb562e6" translate="yes" xml:space="preserve">
          <source>A fixed bit generator using a fixed seed and a fixed series of calls to &amp;lsquo;RandomState&amp;rsquo; methods using the same parameters will always produce the same results up to roundoff error except when the values were incorrect. &lt;a href=&quot;#numpy.random.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; is effectively frozen and will only receive updates that are required by changes in the the internals of Numpy. More substantial changes, including algorithmic improvements, are reserved for &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">固定シードを使用する固定ビットジェネレーターと、同じパラメーターを使用する 'RandomState'メソッドへの固定一連の呼び出しは、値が正しくない場合を除いて、丸め誤差まで常に同じ結果を生成します。&lt;a href=&quot;#numpy.random.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;は事実上凍結されており、Numpyの内部の変更に必要な更新のみを受け取ります。アルゴリズムの改善を含む、より実質的な変更は、&lt;a href=&quot;generator#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;用に予約されています。</target>
        </trans-unit>
        <trans-unit id="6eca43eca8b478519a1bb5ce29f20eb48d50d699" translate="yes" xml:space="preserve">
          <source>A fixed bit generator using a fixed seed and a fixed series of calls to &amp;lsquo;RandomState&amp;rsquo; methods using the same parameters will always produce the same results up to roundoff error except when the values were incorrect. &lt;a href=&quot;#numpy.random.mtrand.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; is effectively frozen and will only receive updates that are required by changes in the the internals of Numpy. More substantial changes, including algorithmic improvements, are reserved for &lt;code&gt;Generator&lt;/code&gt;.</source>
          <target state="translated">固定シードを使用する固定ビットジェネレーターと、同じパラメーターを使用する 'RandomState'メソッドへの一連の固定呼び出しは、値が正しくない場合を除いて、丸め誤差まで同じ結果を常に生成します。&lt;a href=&quot;#numpy.random.mtrand.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;は効果的に凍結され、Numpyの内部の変更によって必要とされる更新のみを受け取ります。アルゴリズムの改善など、より大幅な変更は &lt;code&gt;Generator&lt;/code&gt; 用に予約されています。</target>
        </trans-unit>
        <trans-unit id="c18c1c2c124c331c105d3b8d72e10a08d0e99512" translate="yes" xml:space="preserve">
          <source>A float array with the same dimensions as the input. If second argument is not supplied then a float array is returned with the rounded values.</source>
          <target state="translated">入力と同じ次元の float 配列。2 番目の引数が与えられなかった場合は、丸められた値を持つ float 配列が返されます。</target>
        </trans-unit>
        <trans-unit id="e40f9bd793de063d4623b3a65127edbc7f4365a2" translate="yes" xml:space="preserve">
          <source>A floating point representation of negative infinity.</source>
          <target state="translated">負の無限大を浮動小数点で表現したもの。</target>
        </trans-unit>
        <trans-unit id="f70219492bb06ea1bfc1bd486c51c9d74cdc6eec" translate="yes" xml:space="preserve">
          <source>A floating point representation of negative zero.</source>
          <target state="translated">負のゼロの浮動小数点表現。</target>
        </trans-unit>
        <trans-unit id="f318ecbc4360f30574687fabbb18b17aece0caea" translate="yes" xml:space="preserve">
          <source>A floating point representation of positive infinity.</source>
          <target state="translated">正の無限大の浮動小数点表現。</target>
        </trans-unit>
        <trans-unit id="ac7d4260ed1570b946cfe14c53fa847bec8e3bc4" translate="yes" xml:space="preserve">
          <source>A floating point representation of positive zero.</source>
          <target state="translated">正のゼロの浮動小数点表現。</target>
        </trans-unit>
        <trans-unit id="61e0a8192c1f49ed33c6184804ba93dc807b4510" translate="yes" xml:space="preserve">
          <source>A floating-point array of shape &lt;code&gt;size&lt;/code&gt; of drawn samples, or a single sample if &lt;code&gt;size&lt;/code&gt; was not specified.</source>
          <target state="translated">描画されたサンプルの形状 &lt;code&gt;size&lt;/code&gt; の浮動小数点配列、または &lt;code&gt;size&lt;/code&gt; が指定されていない場合は単一のサンプル。</target>
        </trans-unit>
        <trans-unit id="ebf2ce103753b74056842789f48f919368a96b81" translate="yes" xml:space="preserve">
          <source>A format used to define default field names, such as &amp;ldquo;f%i&amp;rdquo; or &amp;ldquo;f_%02i&amp;rdquo;.</source>
          <target state="translated">「f％i」や「f_％02i」などのデフォルトのフィールド名を定義するために使用されるフォーマット。</target>
        </trans-unit>
        <trans-unit id="0e3f2afbcb3b2e4ea29373c19f19150e3ef3008c" translate="yes" xml:space="preserve">
          <source>A frequent error consists in calling &lt;code&gt;array&lt;/code&gt; with multiple arguments, rather than providing a single sequence as an argument.</source>
          <target state="translated">よくあるエラーは、引数として単一のシーケンスを提供するのではなく、複数の引数を使用して &lt;code&gt;array&lt;/code&gt; を呼び出すことです。</target>
        </trans-unit>
        <trans-unit id="2efd0a9bf192225b296de6fd561a0d4150668961" translate="yes" xml:space="preserve">
          <source>A frequently asked question is &amp;ldquo;How do I set up a development version of NumPy in parallel to a released version that I use to do my job/research?&amp;rdquo;.</source>
          <target state="translated">よくある質問は、「仕事や研究に使用するリリースバージョンと並行してNumPyの開発バージョンをセットアップするにはどうすればよいですか？」です。</target>
        </trans-unit>
        <trans-unit id="4fb879cfbf47de044c7b58ccf38d2c889796735a" translate="yes" xml:space="preserve">
          <source>A function associated with an object. For example, each ndarray has a method called &lt;code&gt;repeat&lt;/code&gt;:</source>
          <target state="translated">オブジェクトに関連付けられた関数。たとえば、各ndarrayには &lt;code&gt;repeat&lt;/code&gt; ：というメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="6953993ce940fc7ebd16cec3633d5689d9d12107" translate="yes" xml:space="preserve">
          <source>A function that reads &lt;code&gt;n_in&lt;/code&gt; items from &lt;code&gt;in&lt;/code&gt;, and writes to &lt;code&gt;out&lt;/code&gt; the read value if it is within the limits pointed to by &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt;, or the corresponding limit if outside. The memory segments must be contiguous and behaved, and either &lt;code&gt;min&lt;/code&gt; or &lt;code&gt;max&lt;/code&gt; may be &lt;code&gt;NULL&lt;/code&gt;, but not both.</source>
          <target state="translated">読み出し機能 &lt;code&gt;n_in&lt;/code&gt; から項目を &lt;code&gt;in&lt;/code&gt; 、かつへの書き込み &lt;code&gt;out&lt;/code&gt; 読取り値が範囲内にある場合は、によって指される &lt;code&gt;min&lt;/code&gt; 及び &lt;code&gt;max&lt;/code&gt; 外場合、または対応する限界。メモリセグメントは隣接して動作する必要があり、 &lt;code&gt;min&lt;/code&gt; または &lt;code&gt;max&lt;/code&gt; のどちらかが &lt;code&gt;NULL&lt;/code&gt; になることがありますが、両方はできません。</target>
        </trans-unit>
        <trans-unit id="7808e8deacae88a30b0157c6432f18e2b157f98e" translate="yes" xml:space="preserve">
          <source>A function that takes a pointer &lt;code&gt;in&lt;/code&gt; to an array of &lt;code&gt;n_in&lt;/code&gt; items, a pointer &lt;code&gt;mask&lt;/code&gt; to an array of &lt;code&gt;n_in&lt;/code&gt; boolean values, and a pointer &lt;code&gt;vals&lt;/code&gt; to an array of &lt;code&gt;nv&lt;/code&gt; items. Items from &lt;code&gt;vals&lt;/code&gt; are copied into &lt;code&gt;in&lt;/code&gt; wherever the value in &lt;code&gt;mask&lt;/code&gt; is non-zero, tiling &lt;code&gt;vals&lt;/code&gt; as needed if &lt;code&gt;nv &amp;lt; n_in&lt;/code&gt;. All arrays must be contiguous and behaved.</source>
          <target state="translated">&lt;code&gt;n_in&lt;/code&gt; 項目の配列へのポインター &lt;code&gt;in&lt;/code&gt; &lt;code&gt;n_in&lt;/code&gt; ブール値の配列へのポインター &lt;code&gt;mask&lt;/code&gt; 、および &lt;code&gt;nv&lt;/code&gt; 項目の配列へのポインター &lt;code&gt;vals&lt;/code&gt; を受け取る関数。 &lt;code&gt;vals&lt;/code&gt; からの項目は、 &lt;code&gt;mask&lt;/code&gt; の値がゼロ以外の場所にコピーされ &lt;code&gt;in&lt;/code&gt; &lt;code&gt;nv &amp;lt; n_in&lt;/code&gt; 場合、必要に応じて &lt;code&gt;vals&lt;/code&gt; タイリングされます。すべての配列は隣接し、動作する必要があります。</target>
        </trans-unit>
        <trans-unit id="08de4a29a83dcb61642d53e6def0193fbaef931c" translate="yes" xml:space="preserve">
          <source>A function that takes a pointer &lt;code&gt;src&lt;/code&gt; to a C contiguous, behaved segment, interpreted as a 3-dimensional array of shape &lt;code&gt;(n_outer, nindarray, nelem)&lt;/code&gt;, a pointer &lt;code&gt;indarray&lt;/code&gt; to a contiguous, behaved segment of &lt;code&gt;m_middle&lt;/code&gt; integer indices, and a pointer &lt;code&gt;dest&lt;/code&gt; to a C contiguous, behaved segment, interpreted as a 3-dimensional array of shape &lt;code&gt;(n_outer, m_middle, nelem)&lt;/code&gt;. The indices in &lt;code&gt;indarray&lt;/code&gt; are used to index &lt;code&gt;src&lt;/code&gt; along the second dimension, and copy the corresponding chunks of &lt;code&gt;nelem&lt;/code&gt; items into &lt;code&gt;dest&lt;/code&gt;. &lt;code&gt;clipmode&lt;/code&gt; (which can take on the values &lt;a href=&quot;array#c.NPY_RAISE&quot;&gt;&lt;code&gt;NPY_RAISE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array#c.NPY_WRAP&quot;&gt;&lt;code&gt;NPY_WRAP&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;array#c.NPY_CLIP&quot;&gt;&lt;code&gt;NPY_CLIP&lt;/code&gt;&lt;/a&gt;) determines how will indices smaller than 0 or larger than &lt;code&gt;nindarray&lt;/code&gt; will be handled.</source>
          <target state="translated">形状の3次元配列 &lt;code&gt;(n_outer, nindarray, nelem)&lt;/code&gt; として解釈される、Cの連続した動作セグメントへのポインター &lt;code&gt;src&lt;/code&gt; 、 &lt;code&gt;m_middle&lt;/code&gt; 整数インデックスの連続した動作セグメントへのポインター &lt;code&gt;indarray&lt;/code&gt; 、およびポインター &lt;code&gt;dest&lt;/code&gt; を受け取る関数。形状の3次元配列 &lt;code&gt;(n_outer, m_middle, nelem)&lt;/code&gt; として解釈される、Cの連続した動作セグメントへ。 &lt;code&gt;indarray&lt;/code&gt; のインデックスは、2番目の次元に沿って &lt;code&gt;src&lt;/code&gt; にインデックスを付け、対応する &lt;code&gt;nelem&lt;/code&gt; アイテムのチャンクを &lt;code&gt;dest&lt;/code&gt; にコピーするために使用されます。 &lt;code&gt;clipmode&lt;/code&gt; （値&lt;a href=&quot;array#c.NPY_RAISE&quot;&gt; &lt;code&gt;NPY_RAISE&lt;/code&gt; を&lt;/a&gt;取ることができます、&lt;a href=&quot;array#c.NPY_WRAP&quot;&gt; &lt;code&gt;NPY_WRAP&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;array#c.NPY_CLIP&quot;&gt; &lt;code&gt;NPY_CLIP&lt;/code&gt; &lt;/a&gt;）は、0より小さいまたは &lt;code&gt;nindarray&lt;/code&gt; より大きいインデックスがどのように処理されるかを決定します。</target>
        </trans-unit>
        <trans-unit id="104738b7ba43a478757ba0cfc95cfc1693132d3a" translate="yes" xml:space="preserve">
          <source>A function that takes a pointer &lt;code&gt;src&lt;/code&gt; to a C contiguous, behaved segment, interpreted as a 3-dimensional array of shape &lt;code&gt;(n_outer, nindarray, nelem)&lt;/code&gt;, a pointer &lt;code&gt;indarray&lt;/code&gt; to a contiguous, behaved segment of &lt;code&gt;m_middle&lt;/code&gt; integer indices, and a pointer &lt;code&gt;dest&lt;/code&gt; to a C contiguous, behaved segment, interpreted as a 3-dimensional array of shape &lt;code&gt;(n_outer, m_middle, nelem)&lt;/code&gt;. The indices in &lt;code&gt;indarray&lt;/code&gt; are used to index &lt;code&gt;src&lt;/code&gt; along the second dimension, and copy the corresponding chunks of &lt;code&gt;nelem&lt;/code&gt; items into &lt;code&gt;dest&lt;/code&gt;. &lt;code&gt;clipmode&lt;/code&gt; (which can take on the values &lt;a href=&quot;c-api.array#c.NPY_RAISE&quot;&gt;&lt;code&gt;NPY_RAISE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.array#c.NPY_WRAP&quot;&gt;&lt;code&gt;NPY_WRAP&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;c-api.array#c.NPY_CLIP&quot;&gt;&lt;code&gt;NPY_CLIP&lt;/code&gt;&lt;/a&gt;) determines how will indices smaller than 0 or larger than &lt;code&gt;nindarray&lt;/code&gt; will be handled.</source>
          <target state="translated">形状の3次元配列 &lt;code&gt;(n_outer, nindarray, nelem)&lt;/code&gt; として解釈される、Cの連続した動作するセグメントへのポインター &lt;code&gt;src&lt;/code&gt; をとる関数、 &lt;code&gt;m_middle&lt;/code&gt; 整数インデックスの連続した動作するセグメントへのポインター &lt;code&gt;indarray&lt;/code&gt; 、およびポインター &lt;code&gt;dest&lt;/code&gt; 形状の3次元配列 &lt;code&gt;(n_outer, m_middle, nelem)&lt;/code&gt; として解釈される、Cの連続した動作セグメントに。 &lt;code&gt;indarray&lt;/code&gt; のインデックスは、2番目の次元に沿って &lt;code&gt;src&lt;/code&gt; にインデックスを付け、対応する &lt;code&gt;nelem&lt;/code&gt; 項目のチャンクを &lt;code&gt;dest&lt;/code&gt; にコピーするために使用されます。 &lt;code&gt;clipmode&lt;/code&gt; （NPY_RAISEの値を取ることができます&lt;a href=&quot;c-api.array#c.NPY_RAISE&quot;&gt; &lt;code&gt;NPY_RAISE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;c-api.array#c.NPY_WRAP&quot;&gt; &lt;code&gt;NPY_WRAP&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;c-api.array#c.NPY_CLIP&quot;&gt; &lt;code&gt;NPY_CLIP&lt;/code&gt; は&lt;/a&gt;）よりもどの指数が0より小さくても大きくするかを決定する &lt;code&gt;nindarray&lt;/code&gt; が処理されます。</target>
        </trans-unit>
        <trans-unit id="7cb7204cb0f2bbcfcce745946459084676997fbf" translate="yes" xml:space="preserve">
          <source>A function to INCREF all the objects at the location &lt;em&gt;ptr&lt;/em&gt; according to the data-type &lt;em&gt;dtype&lt;/em&gt;. If &lt;em&gt;ptr&lt;/em&gt; is the start of a structured type with an object at any offset, then this will (recursively) increment the reference count of all object-like items in the structured type.</source>
          <target state="translated">データ型&lt;em&gt;dtype&lt;/em&gt;に従って、位置&lt;em&gt;ptr&lt;/em&gt;にあるすべてのオブジェクトをINCREFする関数。&lt;em&gt;ptr&lt;/em&gt;が任意のオフセットにオブジェクトがある構造化タイプの開始である場合、これは（再帰的に）構造化タイプ内のすべてのオブジェクト類似アイテムの参照カウントを増分します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf2abd32c85efc7a4a45d18f882ea7390dd2a706" translate="yes" xml:space="preserve">
          <source>A function to XDECREF all the object-like items at the location &lt;em&gt;ptr&lt;/em&gt; as recorded in the data-type, &lt;em&gt;dtype&lt;/em&gt;. This works recursively so that if &lt;code&gt;dtype&lt;/code&gt; itself has fields with data-types that contain object-like items, all the object-like fields will be XDECREF &lt;code&gt;'d&lt;/code&gt;.</source>
          <target state="translated">データ型&lt;em&gt;dtypeに&lt;/em&gt;記録されている位置&lt;em&gt;ptrの&lt;/em&gt;すべてのオブジェクト類似アイテムをXDECREFする関数。これがあればそうすることを再帰的に動作します &lt;code&gt;dtype&lt;/code&gt; 自体は、オブジェクトのような項目が含まれているデータ型のフィールドを持っている、すべてのオブジェクトのようなフィールドはXDECREFなります &lt;code&gt;'d&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="22460947c7a31673520aa4a3c153378510748e7e" translate="yes" xml:space="preserve">
          <source>A function to determine how scalars of this type should be interpreted. The argument is &lt;code&gt;NULL&lt;/code&gt; or a 0-dimensional array containing the data (if that is needed to determine the kind of scalar). The return value must be of type &lt;a href=&quot;array#c.NPY_SCALARKIND&quot;&gt;&lt;code&gt;NPY_SCALARKIND&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このタイプのスカラーをどのように解釈するかを決定する関数。引数は &lt;code&gt;NULL&lt;/code&gt; またはデータを含む0次元配列です（スカラーの種類を決定するために必要な場合）。戻り値はタイプ&lt;a href=&quot;array#c.NPY_SCALARKIND&quot;&gt; &lt;code&gt;NPY_SCALARKIND&lt;/code&gt; である&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="b5ce3a36b4ee5ac8d172d6bf8491bf2eb17ead79" translate="yes" xml:space="preserve">
          <source>A function to determine how scalars of this type should be interpreted. The argument is &lt;code&gt;NULL&lt;/code&gt; or a 0-dimensional array containing the data (if that is needed to determine the kind of scalar). The return value must be of type &lt;a href=&quot;c-api.array#c.NPY_SCALARKIND&quot;&gt;&lt;code&gt;NPY_SCALARKIND&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このタイプのスカラーを解釈する方法を決定する関数。引数は &lt;code&gt;NULL&lt;/code&gt; またはデータを含む0次元配列です（スカラーの種類を判別するために必要な場合）。戻り値は&lt;a href=&quot;c-api.array#c.NPY_SCALARKIND&quot;&gt; &lt;code&gt;NPY_SCALARKIND&lt;/code&gt; &lt;/a&gt;型である必要があります。</target>
        </trans-unit>
        <trans-unit id="3b27f94e3fb931693e2774cbba4852a8add55e98" translate="yes" xml:space="preserve">
          <source>A function which resolves the types and fills an array with the dtypes for the inputs and outputs</source>
          <target state="translated">型を解決し,入力と出力の dtypes で配列を埋めます.</target>
        </trans-unit>
        <trans-unit id="fa05609e2a63e5f9fc5e98307d1ff0cf96661165" translate="yes" xml:space="preserve">
          <source>A function which returns an inner loop. The &lt;code&gt;legacy&lt;/code&gt; in the name arises because for NumPy 1.6 a better variant had been planned. This variant has not yet come about.</source>
          <target state="translated">内側のループを返す関数。名前の &lt;code&gt;legacy&lt;/code&gt; は、NumPy 1.6ではより優れたバリアントが計画されていたために発生しました。このバリアントはまだ実現されていません。</target>
        </trans-unit>
        <trans-unit id="69b19ae750da9c4f2d084ff0e9fbbfc38d5ca7e9" translate="yes" xml:space="preserve">
          <source>A function whose call signature is similar to that of &lt;a href=&quot;numpy.triu#numpy.triu&quot;&gt;&lt;code&gt;triu&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;numpy.tril#numpy.tril&quot;&gt;&lt;code&gt;tril&lt;/code&gt;&lt;/a&gt;. That is, &lt;code&gt;mask_func(x, k)&lt;/code&gt; returns a boolean array, shaped like &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;k&lt;/code&gt; is an optional argument to the function.</source>
          <target state="translated">そのコール署名関数は、のと同様である&lt;a href=&quot;numpy.triu#numpy.triu&quot;&gt; &lt;code&gt;triu&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;numpy.tril#numpy.tril&quot;&gt; &lt;code&gt;tril&lt;/code&gt; &lt;/a&gt;。つまり、 &lt;code&gt;mask_func(x, k)&lt;/code&gt; は、 &lt;code&gt;x&lt;/code&gt; のような形状のブール配列を返します。 &lt;code&gt;k&lt;/code&gt; は、関数のオプションの引数です。</target>
        </trans-unit>
        <trans-unit id="c8a237dc5c1ca858afa1ad3081813802f1d53aa1" translate="yes" xml:space="preserve">
          <source>A general overview of building NumPy from source is given here, with detailed instructions for specific platforms given separately.</source>
          <target state="translated">ソースからNumPyを構築する一般的な概要はここに記載されていますが、特定のプラットフォームのための詳細な説明は別途記載されています。</target>
        </trans-unit>
        <trans-unit id="329876d5a642cd76a4b4d5c9d5c7a769170dc22c" translate="yes" xml:space="preserve">
          <source>A general-purpose record array constructor that dispatches to the appropriate &lt;a href=&quot;numpy.recarray#numpy.recarray&quot;&gt;&lt;code&gt;recarray&lt;/code&gt;&lt;/a&gt; creation function based on the inputs (see Notes).</source>
          <target state="translated">入力に基づいて適切な&lt;a href=&quot;numpy.recarray#numpy.recarray&quot;&gt; &lt;code&gt;recarray&lt;/code&gt; &lt;/a&gt;作成関数にディスパッチする汎用レコード配列コンストラクター（注を参照）。</target>
        </trans-unit>
        <trans-unit id="995bd7d70930e4a19e95e761b6d0636c4fb0d572" translate="yes" xml:space="preserve">
          <source>A generalization of this function for N-d arrays, that returns normal ndarrays.</source>
          <target state="translated">この関数を N-d 配列用に一般化したもので,通常の nd 配列を返します.</target>
        </trans-unit>
        <trans-unit id="7d2cd13996513172bdaffb1dca33e4b60945af7a" translate="yes" xml:space="preserve">
          <source>A generalization to N dimensions and other operations. &lt;code&gt;np.multiply.outer(a.ravel(), b.ravel())&lt;/code&gt; is the equivalent.</source>
          <target state="translated">N次元およびその他の操作への一般化。 &lt;code&gt;np.multiply.outer(a.ravel(), b.ravel())&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="6ea63b334059365b8726f6196d72e719b014eb2b" translate="yes" xml:space="preserve">
          <source>A generalization to dimensions other than 1D and other operations. &lt;code&gt;np.multiply.outer(a.ravel(), b.ravel())&lt;/code&gt; is the equivalent.</source>
          <target state="translated">1Dおよびその他の操作以外の次元への一般化。 &lt;code&gt;np.multiply.outer(a.ravel(), b.ravel())&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="05fbcfb35e19c702c00b11ba0147b99881f61dfb" translate="yes" xml:space="preserve">
          <source>A generic data source file (file, http, ftp, &amp;hellip;).</source>
          <target state="translated">一般的なデータソースファイル（ファイル、http、ftp、&amp;hellip;）。</target>
        </trans-unit>
        <trans-unit id="e742e0b647aaf1df5f5d3abb685cf9ccd7d61f19" translate="yes" xml:space="preserve">
          <source>A generic ufunc call. The ufunc is passed in as &lt;em&gt;self&lt;/em&gt;, the arguments to the ufunc as &lt;em&gt;args&lt;/em&gt; and &lt;em&gt;kwds&lt;/em&gt;. The &lt;em&gt;mps&lt;/em&gt; argument is an array of &lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject&lt;/code&gt;&lt;/a&gt; pointers whose values are discarded and which receive the converted input arguments as well as the ufunc outputs when success is returned. The user is responsible for managing this array and receives a new reference for each array in &lt;em&gt;mps&lt;/em&gt;. The total number of arrays in &lt;em&gt;mps&lt;/em&gt; is given by &lt;em&gt;self&lt;/em&gt; -&amp;gt;nin + &lt;em&gt;self&lt;/em&gt; -&amp;gt;nout.</source>
          <target state="translated">一般的なufunc呼び出し。 ufuncは&lt;em&gt;self&lt;/em&gt;として渡され、ufuncへの引数は&lt;em&gt;args&lt;/em&gt;および&lt;em&gt;kwds&lt;/em&gt;として渡されます。&lt;em&gt;MPSの&lt;/em&gt;引数は配列である&lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject&lt;/code&gt; の&lt;/a&gt;値が破棄され、成功が返されたときに変換された入力引数並びにufunc出力を受け取るポインタ。ユーザーはこの配列を管理する責任があり、&lt;em&gt;mps&lt;/em&gt;で各配列の新しい参照を&lt;em&gt;受け取り&lt;/em&gt;ます。配列の総数&lt;em&gt;MPSは、&lt;/em&gt;によって与えられる&lt;em&gt;自己&lt;/em&gt; &amp;gt;ニン+ - &lt;em&gt;自己&lt;/em&gt; - &amp;gt; NOUT。</target>
        </trans-unit>
        <trans-unit id="470ce9b7bfbbe0000647e1e82c8207ba45dad5c1" translate="yes" xml:space="preserve">
          <source>A good but technical page on &lt;a href=&quot;http://www.eecs.harvard.edu/~cduan/technical/git/&quot;&gt;git concepts&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.eecs.harvard.edu/~cduan/technical/git/&quot;&gt;gitの概念&lt;/a&gt;に関する優れた技術的なページ</target>
        </trans-unit>
        <trans-unit id="ad7ac43f6c1594c3c9c7080284b47d763bc8ee04" translate="yes" xml:space="preserve">
          <source>A growing plethora of scientific and mathematical Python-based packages are using NumPy arrays; though these typically support Python-sequence input, they convert such input to NumPy arrays prior to processing, and they often output NumPy arrays. In other words, in order to efficiently use much (perhaps even most) of today&amp;rsquo;s scientific/mathematical Python-based software, just knowing how to use Python&amp;rsquo;s built-in sequence types is insufficient - one also needs to know how to use NumPy arrays.</source>
          <target state="translated">ますます多くの科学的および数学的なPythonベースのパッケージがNumPy配列を使用しています。これらは通常Pythonシーケンス入力をサポートしますが、処理前にそのような入力をNumPy配列に変換し、多くの場合NumPy配列を出力します。言い換えれば、今日の科学的/数学的なPythonベースのソフトウェアの多く（おそらくほとんど）を効率的に使用するには、Pythonの組み込みシーケンスタイプの使用方法を知っているだけでは不十分です-NumPy配列の使用方法も知っている必要があります。</target>
        </trans-unit>
        <trans-unit id="f76ed0444355d5a14b125b7364ff4980576c15a3" translate="yes" xml:space="preserve">
          <source>A guiding principle is that human readers of the text are given precedence over contorting docstrings so our tools produce nice output. Rather than sacrificing the readability of the docstrings, we have written pre-processors to assist &lt;a href=&quot;http://sphinx.pocoo.org&quot;&gt;Sphinx&lt;/a&gt; in its task.</source>
          <target state="translated">指針となる原則は、テキストの人間の読者がゆがんだdocstringよりも優先されるため、ツールが優れた出力を生成することです。docstringの可読性を犠牲にするのではなく、&lt;a href=&quot;http://sphinx.pocoo.org&quot;&gt;Sphinxの&lt;/a&gt;タスクを支援するプリプロセッサーを作成しました。</target>
        </trans-unit>
        <trans-unit id="b77f49ba4cf074a32069b48a35ffecf32421fee4" translate="yes" xml:space="preserve">
          <source>A helper class for &lt;code&gt;CCompiler&lt;/code&gt; aims to provide extra build options to effectively control of compiler optimizations that are directly related to CPU features.</source>
          <target state="translated">&lt;code&gt;CCompiler&lt;/code&gt; のヘルパークラスは、CPU機能に直接関連するコンパイラの最適化を効果的に制御するための追加のビルドオプションを提供することを目的としています。</target>
        </trans-unit>
        <trans-unit id="e4625317d56afc2bf8a1ab930c61261029361d6f" translate="yes" xml:space="preserve">
          <source>A highly efficient way of reading binary data with a known data-type, as well as parsing simply formatted text files. Data written using the &lt;code&gt;tofile&lt;/code&gt; method can be read using this function.</source>
          <target state="translated">既知のデータ型のバイナリデータを読み取り、単純にフォーマットされたテキストファイルを解析する非常に効率的な方法。 &lt;code&gt;tofile&lt;/code&gt; メソッドを使用して書き込まれたデータは、この関数を使用して読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="4a1c31e1966da6e857ef1efb8f20d787f1fbadcc" translate="yes" xml:space="preserve">
          <source>A homogeneous container of numerical elements. Each element in the array occupies a fixed amount of memory (hence homogeneous), and can be a numerical element of a single type (such as float, int or complex) or a combination (such as &lt;code&gt;(float, int, float)&lt;/code&gt;). Each array has an associated data-type (or &lt;code&gt;dtype&lt;/code&gt;), which describes the numerical type of its elements:</source>
          <target state="translated">数値要素の均質なコンテナ。配列内の各要素は一定量のメモリを占有し（したがって同種）、単一タイプ（float、int、complexなど）または組み合わせ（ &lt;code&gt;(float, int, float)&lt;/code&gt; など）の数値要素にすることができます。各配列には、その要素の数値型を記述するデータ型（または &lt;code&gt;dtype&lt;/code&gt; ）が関連付けられています。</target>
        </trans-unit>
        <trans-unit id="75e9e8993c94f43bad514a2848161f06288eae11" translate="yes" xml:space="preserve">
          <source>A less powerful version of &lt;code&gt;np.multiply.outer&lt;/code&gt; that &lt;a href=&quot;numpy.ravel#numpy.ravel&quot;&gt;&lt;code&gt;ravel&lt;/code&gt;&lt;/a&gt;s all inputs to 1D. This exists primarily for compatibility with old code.</source>
          <target state="translated">少ない強力なバージョン &lt;code&gt;np.multiply.outer&lt;/code&gt; その&lt;a href=&quot;numpy.ravel#numpy.ravel&quot;&gt; &lt;code&gt;ravel&lt;/code&gt; &lt;/a&gt; 1Dへのすべての入力をね。これは主に古いコードとの互換性のために存在します。</target>
        </trans-unit>
        <trans-unit id="fed398eb719e55b17943429f3e4fdb68c14251c9" translate="yes" xml:space="preserve">
          <source>A list containing the data-types for the different columns, e.g. &lt;code&gt;['i4', 'f8', 'i4']&lt;/code&gt;. &lt;code&gt;formats&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; support the new convention of using types directly, i.e. &lt;code&gt;(int, float, int)&lt;/code&gt;. Note that &lt;code&gt;formats&lt;/code&gt; must be a list, not a tuple. Given that &lt;code&gt;formats&lt;/code&gt; is somewhat limited, we recommend specifying &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">さまざまな列のデータ型を含むリスト（例： &lt;code&gt;['i4', 'f8', 'i4']&lt;/code&gt; 。 &lt;code&gt;formats&lt;/code&gt; は、タイプを直接使用するという新しい規則、つまり &lt;code&gt;(int, float, int)&lt;/code&gt; サポートしていませ&lt;em&gt;ん&lt;/em&gt;。 &lt;code&gt;formats&lt;/code&gt; はタプルではなくリストでなければならないことに注意してください。ことを考えると &lt;code&gt;formats&lt;/code&gt; 多少制限され、我々は指定をお勧めします&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;代わりに。</target>
        </trans-unit>
        <trans-unit id="1da31c2d761b650fc657c3090a468a9da54f9de6" translate="yes" xml:space="preserve">
          <source>A list of D arrays describing the bin edges for each dimension.</source>
          <target state="translated">各次元のビンエッジを記述するD配列のリスト.</target>
        </trans-unit>
        <trans-unit id="4132766bc16ba1628237791ba4f2542341475d5c" translate="yes" xml:space="preserve">
          <source>A list of current Institutional Partners is maintained at the page &lt;a href=&quot;people#governance-people&quot;&gt;Current steering council and institutional partners&lt;/a&gt;.</source>
          <target state="translated">現在の機関パートナーのリストは、&lt;a href=&quot;people#governance-people&quot;&gt;現在の運営評議会と機関パートナーの&lt;/a&gt;ページにあります。</target>
        </trans-unit>
        <trans-unit id="642f705f85981daa89bf326a8fb2e60bead01724" translate="yes" xml:space="preserve">
          <source>A list of current Steering Council Members is maintained at the page &lt;a href=&quot;people#governance-people&quot;&gt;Current steering council and institutional partners&lt;/a&gt;.</source>
          <target state="translated">現在の運営評議会のメンバーのリストは、現在の運営評議&lt;a href=&quot;people#governance-people&quot;&gt;会と機関のパートナーの&lt;/a&gt;ページにあります。</target>
        </trans-unit>
        <trans-unit id="8dccfbefc014a73715a7bf33178f7d4dadc963d9" translate="yes" xml:space="preserve">
          <source>A list of dtypes or dtype convertible objects representing arrays.</source>
          <target state="translated">配列を表すdtypesまたはdtypeコンバーチブルオブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="ca05b514dd6531df90ebf63f10153d3470704d68" translate="yes" xml:space="preserve">
          <source>A list of dtypes or dtype convertible objects representing scalars.</source>
          <target state="translated">スカラーを表すdtypesまたはdtypeコンバーチブルオブジェクトのリスト.</target>
        </trans-unit>
        <trans-unit id="24f20e94cc1577ba19bd51fd88c7c894abd02ccc" translate="yes" xml:space="preserve">
          <source>A list of names to exclude. This list is appended to the default list [&amp;lsquo;return&amp;rsquo;,&amp;rsquo;file&amp;rsquo;,&amp;rsquo;print&amp;rsquo;]. Excluded names are appended an underscore: for example, &lt;code&gt;file&lt;/code&gt; would become &lt;code&gt;file_&lt;/code&gt;.</source>
          <target state="translated">除外する名前のリスト。このリストは、デフォルトのリスト['return'、 'file'、 'print']に追加されます。除外された名前には下線が追加されます。たとえば、 &lt;code&gt;file&lt;/code&gt; は &lt;code&gt;file_&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="0f3d5f54a16228377e53581376ffb48f3c30e87c" translate="yes" xml:space="preserve">
          <source>A list of objects that matched the search is displayed, sorted by relevance. All given keywords need to be found in the docstring for it to be returned as a result, but the order does not matter.</source>
          <target state="translated">検索にマッチしたオブジェクトのリストが、関連性でソートされて表示されます。結果として返されるためには、与えられたすべてのキーワードがdocstringの中で見つかる必要がありますが、順序は問題ではありません。</target>
        </trans-unit>
        <trans-unit id="9f6f052d201d59387579347a7dac2c74e5309ea5" translate="yes" xml:space="preserve">
          <source>A list of slices (start and end indexes) of unmasked indexes in the array.</source>
          <target state="translated">配列内のマスクされていないインデックスのスライス(開始インデックスと終了インデックス)のリスト。</target>
        </trans-unit>
        <trans-unit id="43756e35fd4b630771644c0972fd42f2b4b492e5" translate="yes" xml:space="preserve">
          <source>A list of sub-arrays as views into &lt;code&gt;ary&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ary&lt;/code&gt; へのビューとしてのサブ配列のリスト。</target>
        </trans-unit>
        <trans-unit id="cd652a1229439a6ceff8e2b412bf54484522702c" translate="yes" xml:space="preserve">
          <source>A list of sub-arrays.</source>
          <target state="translated">サブ配列のリスト。</target>
        </trans-unit>
        <trans-unit id="335672ba95b65b1f5d901e9f2df4feaada975adc" translate="yes" xml:space="preserve">
          <source>A list of tuples providing a more detailed description of the memory layout for each item in the homogeneous array. Each tuple in the list has two or three elements. Normally, this attribute would be used when &lt;em&gt;typestr&lt;/em&gt; is &lt;code&gt;V[0-9]+&lt;/code&gt;, but this is not a requirement. The only requirement is that the number of bytes represented in the &lt;em&gt;typestr&lt;/em&gt; key is the same as the total number of bytes represented here. The idea is to support descriptions of C-like structs that make up array elements. The elements of each tuple in the list are</source>
          <target state="translated">同種配列内の各項目のメモリレイアウトの詳細な説明を提供するタプルのリスト。リストの各タプルには2つまたは3つの要素があります。通常、この属性は&lt;em&gt;typestr&lt;/em&gt;が &lt;code&gt;V[0-9]+&lt;/code&gt; ときに使用されますが、これは必須ではありません。唯一の要件は、&lt;em&gt;typestr&lt;/em&gt;キーで表されるバイト数が、ここで表される合計バイト数と同じであることです。アイデアは、配列要素を構成するCのような構造体の記述をサポートすることです。リストの各タプルの要素は</target>
        </trans-unit>
        <trans-unit id="90b02866cbd2eb2a4a1f900e5689f4807053a09b" translate="yes" xml:space="preserve">
          <source>A list of tuples with indices of axes a generalized ufunc should operate on. For instance, for a signature of &lt;code&gt;(i,j),(j,k)-&amp;gt;(i,k)&lt;/code&gt; appropriate for matrix multiplication, the base elements are two-dimensional matrices and these are taken to be stored in the two last axes of each argument. The corresponding axes keyword would be &lt;code&gt;[(-2, -1), (-2, -1), (-2, -1)]&lt;/code&gt;. For simplicity, for generalized ufuncs that operate on 1-dimensional arrays (vectors), a single integer is accepted instead of a single-element tuple, and for generalized ufuncs for which all outputs are scalars, the output tuples can be omitted.</source>
          <target state="translated">一般化されたufuncが操作する軸のインデックスを持つタプルのリスト。たとえば、行列の乗算に適した &lt;code&gt;(i,j),(j,k)-&amp;gt;(i,k)&lt;/code&gt; シグネチャの場合、基本要素は2次元の行列であり、これらは最後の2つの軸に格納されます。各引数の。対応する軸のキーワードは &lt;code&gt;[(-2, -1), (-2, -1), (-2, -1)]&lt;/code&gt; です。簡単にするために、1次元配列（ベクトル）で動作する一般化されたufuncでは、単一要素のタプルの代わりに単一の整数が受け入れられ、すべての出力がスカラーである一般化されたufuncでは、出力タプルを省略できます。</target>
        </trans-unit>
        <trans-unit id="7f92ec16607722c37761b414dc6ad215cc481eea" translate="yes" xml:space="preserve">
          <source>A list of tuples, one tuple per field</source>
          <target state="translated">タプルのリスト、フィールドごとに1つのタプル</target>
        </trans-unit>
        <trans-unit id="1931f7fd587f1bfa9304b0a2cf9e0e86ad737bc7" translate="yes" xml:space="preserve">
          <source>A list representation of the einsum path.</source>
          <target state="translated">アインサムパスのリスト表現。</target>
        </trans-unit>
        <trans-unit id="01b8f3fc931ed4758e3c5ae0ca5a041861bb3033" translate="yes" xml:space="preserve">
          <source>A list which will be filled with all matched warnings.</source>
          <target state="translated">一致したすべての警告で埋められるリスト。</target>
        </trans-unit>
        <trans-unit id="589807e2972076a7140185840f86e44874d938aa" translate="yes" xml:space="preserve">
          <source>A loaded die is more likely to land on number 6:</source>
          <target state="translated">装填されたダイスは6番に着地する可能性が高い。</target>
        </trans-unit>
        <trans-unit id="189d9b82b9c6a5ad123dc2d81bd98cbcce5feec7" translate="yes" xml:space="preserve">
          <source>A location into which the result is stored. If not provided or &lt;code&gt;None&lt;/code&gt;, a freshly-allocated array is returned. For consistency with &lt;code&gt;ufunc.__call__&lt;/code&gt;, if given as a keyword, this may be wrapped in a 1-element tuple.</source>
          <target state="translated">結果が保存される場所。指定しないか &lt;code&gt;None&lt;/code&gt; の場合、新しく割り当てられた配列が返されます。 &lt;code&gt;ufunc.__call__&lt;/code&gt; との一貫性を保つために、キーワードとして指定した場合、これは1要素のタプルでラップされます。</target>
        </trans-unit>
        <trans-unit id="1c907358140afba5315d369006314c62c7759455" translate="yes" xml:space="preserve">
          <source>A location into which the result is stored. If not provided or None, a freshly-allocated array is returned. For consistency with &lt;code&gt;ufunc.__call__&lt;/code&gt;, if given as a keyword, this may be wrapped in a 1-element tuple.</source>
          <target state="translated">結果が保存される場所。指定しない場合、またはNoneの場合、新しく割り当てられた配列が返されます。 &lt;code&gt;ufunc.__call__&lt;/code&gt; との一貫性を保つために、キーワードとして指定した場合、これは1要素のタプルでラップできます。</target>
        </trans-unit>
        <trans-unit id="30ff2cf37c49042997e4c4edb219d3f048658fab" translate="yes" xml:space="preserve">
          <source>A location into which the result is stored. If provided, it must have a shape that matches the signature &lt;code&gt;(n,k),(k,m)-&amp;gt;(n,m)&lt;/code&gt;. If not provided or &lt;code&gt;None&lt;/code&gt;, a freshly-allocated array is returned.</source>
          <target state="translated">結果が保存される場所。指定する場合、署名は &lt;code&gt;(n,k),(k,m)-&amp;gt;(n,m)&lt;/code&gt; と一致する形状でなければなりません。指定しないか &lt;code&gt;None&lt;/code&gt; の場合、新しく割り当てられた配列が返されます。</target>
        </trans-unit>
        <trans-unit id="fe944c1e79e9f7e95d0ca50a0ad6059ed9f2387e" translate="yes" xml:space="preserve">
          <source>A location into which the result is stored. If provided, it must have a shape that matches the signature &lt;code&gt;(n,k),(k,m)-&amp;gt;(n,m)&lt;/code&gt;. If not provided or None, a freshly-allocated array is returned.</source>
          <target state="translated">結果が保存される場所。指定する場合は、署名 &lt;code&gt;(n,k),(k,m)-&amp;gt;(n,m)&lt;/code&gt; と一致する形状にする必要があります。指定しない場合、またはNoneの場合、新しく割り当てられた配列が返されます。</target>
        </trans-unit>
        <trans-unit id="221aee4fd070888287d5d44c89a21ae3247972e1" translate="yes" xml:space="preserve">
          <source>A location into which the result is stored. If provided, it must have a shape that the input broadcasts to. If not provided or None, a freshly-allocated array is returned.</source>
          <target state="translated">結果が格納される場所。指定された場合は、入力がブロードキャストされる形状でなければなりません。指定されていない場合や None の場合は、新たに割り当てられた配列が返されます。</target>
        </trans-unit>
        <trans-unit id="acb0da268f42123cfe5c091ea12c092ac1ddeece" translate="yes" xml:space="preserve">
          <source>A location into which the result is stored. If provided, it must have a shape that the input broadcasts to. If not provided or None, a freshly-allocated boolean array is returned.</source>
          <target state="translated">結果が格納される場所。指定された場合は、入力がブロードキャストされる形状を持っていなければなりません。指定されていない場合や None の場合は、新たに割り当てられたブール値の配列が返されます。</target>
        </trans-unit>
        <trans-unit id="74ecfd958d8205d0b812a91718af7b311a9c11fe" translate="yes" xml:space="preserve">
          <source>A location into which the result is stored. If provided, it must have a shape that the inputs broadcast to. If not provided or &lt;code&gt;None&lt;/code&gt;, a freshly-allocated array is returned. A tuple (possible only as a keyword argument) must have length equal to the number of outputs.</source>
          <target state="translated">結果が保存される場所。指定する場合は、入力がブロードキャストする形にする必要があります。指定しないか &lt;code&gt;None&lt;/code&gt; の場合、新しく割り当てられた配列が返されます。タプル（キーワード引数としてのみ可能）は、出力の数と同じ長さでなければなりません。</target>
        </trans-unit>
        <trans-unit id="8a42008aeb9e98fc1dc9af05e3018e1eceb3bf19" translate="yes" xml:space="preserve">
          <source>A location into which the result is stored. If provided, it must have a shape that the inputs broadcast to. If not provided or None, a freshly-allocated array is returned. A tuple (possible only as a keyword argument) must have length equal to the number of outputs.</source>
          <target state="translated">結果が格納される場所。指定した場合は、入力がブロードキャストされる形をしていなければなりません。指定しない場合や None の場合は、新たに割り当てられた配列が返されます。タプル(キーワード引数としてのみ可能)は、出力の数と等しい長さを持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="b7739f26a858b347978a4cfbfb1e35e7d5512c0c" translate="yes" xml:space="preserve">
          <source>A location where the result is stored</source>
          <target state="translated">結果が格納されている場所</target>
        </trans-unit>
        <trans-unit id="c5164a5cf9ad81d1e94ceee11b7f74d4934af37c" translate="yes" xml:space="preserve">
          <source>A loop in the NumPy C source code may have a &lt;code&gt;@TYPE@&lt;/code&gt; variable, targeted for string substitution, which is preprocessed to a number of otherwise identical loops with several strings such as &lt;code&gt;INT&lt;/code&gt;, &lt;code&gt;LONG&lt;/code&gt;, &lt;code&gt;UINT&lt;/code&gt;, &lt;code&gt;ULONG&lt;/code&gt;. The &lt;code&gt;@TYPE@&lt;/code&gt; style syntax thus reduces code duplication and maintenance burden by mimicking languages that have generic type support.</source>
          <target state="translated">NumPy Cソースコードのループには、文字列置換の対象となる &lt;code&gt;@TYPE@&lt;/code&gt; 変数が含まれる場合があります。この変数は、 &lt;code&gt;INT&lt;/code&gt; 、 &lt;code&gt;LONG&lt;/code&gt; 、 &lt;code&gt;UINT&lt;/code&gt; 、 &lt;code&gt;ULONG&lt;/code&gt; などの複数の文字列を持つ多数の同一のループに前処理されます。したがって、 &lt;code&gt;@TYPE@&lt;/code&gt; スタイルの構文は、ジェネリック型をサポートする言語を模倣することにより、コードの重複と保守の負担を軽減します。</target>
        </trans-unit>
        <trans-unit id="d772df58997e4959ba59b176b19f2790ec826fd9" translate="yes" xml:space="preserve">
          <source>A loose wrapper for a C-structure that contains the information needed for looping. This is useful if you are trying to understand the ufunc looping code. The &lt;a href=&quot;#c.PyUFuncLoopObject&quot;&gt;&lt;code&gt;PyUFuncLoopObject&lt;/code&gt;&lt;/a&gt; is the associated C-structure. It is defined in the &lt;code&gt;ufuncobject.h&lt;/code&gt; header.</source>
          <target state="translated">ループに必要な情報を含むC構造の緩いラッパー。これは、ufuncループコードを理解しようとしている場合に役立ちます。&lt;a href=&quot;#c.PyUFuncLoopObject&quot;&gt; &lt;code&gt;PyUFuncLoopObject&lt;/code&gt; は、&lt;/a&gt;関連するC-構造です。これは &lt;code&gt;ufuncobject.h&lt;/code&gt; ヘッダーで定義されています。</target>
        </trans-unit>
        <trans-unit id="210bb7c0a2b1abe6f26b2cdaf9e3f00dc43f0623" translate="yes" xml:space="preserve">
          <source>A loose wrapper for the C-structure that contains the information needed for reduce-like methods of ufuncs. This is useful if you are trying to understand the reduce, accumulate, and reduce-at code. The &lt;a href=&quot;#c.PyUFuncReduceObject&quot;&gt;&lt;code&gt;PyUFuncReduceObject&lt;/code&gt;&lt;/a&gt; is the associated C-structure. It is defined in the &lt;code&gt;ufuncobject.h&lt;/code&gt; header.</source>
          <target state="translated">C構造体の緩いラッパーで、reduceのようなufuncのメソッドに必要な情報が含まれています。これは、reduce、accumulate、reduce-atコードを理解しようとしている場合に役立ちます。&lt;a href=&quot;#c.PyUFuncReduceObject&quot;&gt; &lt;code&gt;PyUFuncReduceObject&lt;/code&gt; は、&lt;/a&gt;関連するC-構造です。これは &lt;code&gt;ufuncobject.h&lt;/code&gt; ヘッダーで定義されています。</target>
        </trans-unit>
        <trans-unit id="57d91d135628e6bd81b79d02ca2c8225c467f5cc" translate="yes" xml:space="preserve">
          <source>A lower-level and less safe routine for creating arbitrary views from custom shape and strides.</source>
          <target state="translated">カスタムシェイプとストライドから任意のビューを作成するための低レベルで安全性の低いルーチンです。</target>
        </trans-unit>
        <trans-unit id="2d1cb19028cca9983f03bd697ebc873a781f7663" translate="yes" xml:space="preserve">
          <source>A macro that expands to platform-dependent code. The &lt;em&gt;ret&lt;/em&gt; variable can be any integer. The &lt;code&gt;UFUNC_FPE_{ERR}&lt;/code&gt; bits are set in &lt;em&gt;ret&lt;/em&gt; according to the status of the corresponding error flags of the floating point processor.</source>
          <target state="translated">プラットフォームに依存するコードに展開するマクロ。&lt;em&gt;RETの&lt;/em&gt;変数は任意の整数を指定できます。 &lt;code&gt;UFUNC_FPE_{ERR}&lt;/code&gt; ビットが設定されている&lt;em&gt;RET&lt;/em&gt;浮動小数点プロセッサの対応するエラーフラグの状態に応じ。</target>
        </trans-unit>
        <trans-unit id="f28b1832d8de539ad6ac78e4879f653172b81a74" translate="yes" xml:space="preserve">
          <source>A macro used internally to check for errors and goto fail if found. This macro requires a fail label in the current code block. The &lt;em&gt;loop&lt;/em&gt; variable must have at least members (obj, errormask, and errorobj). If &lt;em&gt;loop&lt;/em&gt; -&amp;gt;obj is nonzero, then &lt;a href=&quot;https://docs.python.org/dev/c-api/exceptions.html#c.PyErr_Occurred&quot;&gt;&lt;code&gt;PyErr_Occurred&lt;/code&gt;&lt;/a&gt; () is called (meaning the GIL must be held). If &lt;em&gt;loop&lt;/em&gt; -&amp;gt;obj is zero, then if &lt;em&gt;loop&lt;/em&gt; -&amp;gt;errormask is nonzero, &lt;a href=&quot;#c.PyUFunc_checkfperr&quot;&gt;&lt;code&gt;PyUFunc_checkfperr&lt;/code&gt;&lt;/a&gt; is called with arguments &lt;em&gt;loop&lt;/em&gt; -&amp;gt;errormask and &lt;em&gt;loop&lt;/em&gt; -&amp;gt;errobj. If the result of this check of the IEEE floating point registers is true then the code redirects to the fail label which must be defined.</source>
          <target state="translated">エラーをチェックし、見つかった場合に失敗するために内部的に使用されるマクロ。このマクロでは、現在のコードブロックに失敗ラベルが必要です。&lt;em&gt;ループ&lt;/em&gt;変数は、少なくともメンバーで（OBJ、ERRORMASK、及びerrorobj）を有していなければなりません。場合は&lt;em&gt;ループ&lt;/em&gt; - &amp;gt; objが、その後、ゼロで&lt;a href=&quot;https://docs.python.org/dev/c-api/exceptions.html#c.PyErr_Occurred&quot;&gt; &lt;code&gt;PyErr_Occurred&lt;/code&gt; &lt;/a&gt;）（（GILを保持しなければならないという意味）と呼ばれています。場合は&lt;em&gt;ループ&lt;/em&gt; - &amp;gt; objがゼロの場合、&lt;em&gt;ループは&lt;/em&gt; - &amp;gt; ERRORMASKが非ゼロで、&lt;a href=&quot;#c.PyUFunc_checkfperr&quot;&gt; &lt;code&gt;PyUFunc_checkfperr&lt;/code&gt; は、&lt;/a&gt;引数で呼び出され&lt;em&gt;たループ&lt;/em&gt; - &amp;gt; ERRORMASKと&lt;em&gt;ループ&lt;/em&gt; - &amp;gt; errobj。 IEEE浮動小数点レジスタのこのチェックの結果がtrueの場合、コードは定義する必要のある失敗ラベルにリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="259aa1241531c8a953c8758b1ac4f41805af1a59" translate="yes" xml:space="preserve">
          <source>A macro which calls the auxdata&amp;rsquo;s clone function appropriately, returning a deep copy of the auxiliary data.</source>
          <target state="translated">auxdataのclone関数を適切に呼び出し、補助データの深いコピーを返すマクロ。</target>
        </trans-unit>
        <trans-unit id="6a68e2152dcf816535a4914a7278ab4814568b2a" translate="yes" xml:space="preserve">
          <source>A macro which calls the auxdata&amp;rsquo;s free function appropriately, does nothing if auxdata is NULL.</source>
          <target state="translated">auxdataの空き関数を適切に呼び出すマクロは、auxdataがNULLの場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="c85dcfb9c03f01d4f635e537884d50fe2361f8ef" translate="yes" xml:space="preserve">
          <source>A masked array can also be created by taking a .view(MaskedArray).</source>
          <target state="translated">.view(MaskedArray)を取得してマスクされた配列を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="ff8a66a27d58e687655398b86d619b56d5081716" translate="yes" xml:space="preserve">
          <source>A masked array is the combination of a standard &lt;a href=&quot;../reference/generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt; and a &lt;strong&gt;mask&lt;/strong&gt;. A mask is either &lt;code&gt;nomask&lt;/code&gt;, indicating that no value of the associated array is invalid, or an array of booleans that determines for each element of the associated array whether the value is valid or not. When an element of the mask is &lt;code&gt;False&lt;/code&gt;, the corresponding element of the associated array is valid and is said to be unmasked. When an element of the mask is &lt;code&gt;True&lt;/code&gt;, the corresponding element of the associated array is said to be masked (invalid).</source>
          <target state="translated">マスクされた配列は、標準の&lt;a href=&quot;../reference/generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; &lt;/a&gt;と&lt;strong&gt;マスクの&lt;/strong&gt;組み合わせです。マスクは、関連付けられた配列の値が無効でないことを示す &lt;code&gt;nomask&lt;/code&gt; か、関連付けられた配列の各要素について値が有効かどうかを決定するブール値の配列のいずれかです。マスクの要素が &lt;code&gt;False&lt;/code&gt; の場合、関連する配列の対応する要素は有効であり、マスクされていないと言われます。マスクの要素が &lt;code&gt;True&lt;/code&gt; の場合、関連する配列の対応する要素はマスクされている（無効である）と言われます。</target>
        </trans-unit>
        <trans-unit id="f52d1200442f679dc576dc7bcd38aabdb0e058c3" translate="yes" xml:space="preserve">
          <source>A masked array is the combination of a standard &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt; and a mask. A mask is either &lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt;, indicating that no value of the associated array is invalid, or an array of booleans that determines for each element of the associated array whether the value is valid or not. When an element of the mask is &lt;code&gt;False&lt;/code&gt;, the corresponding element of the associated array is valid and is said to be unmasked. When an element of the mask is &lt;code&gt;True&lt;/code&gt;, the corresponding element of the associated array is said to be masked (invalid).</source>
          <target state="translated">マスクされた配列は、標準の&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; &lt;/a&gt;とマスクの組み合わせです。マスクは、関連する配列の値が無効でないことを示す&lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;か、関連する配列の各要素に対して値が有効かどうかを決定するブール値の配列のいずれかです。マスクの要素が &lt;code&gt;False&lt;/code&gt; の場合、関連付けられた配列の対応する要素は有効であり、マスクされていないという。マスクの要素が &lt;code&gt;True&lt;/code&gt; の場合、関連付けられた配列の対応する要素はマスクされている（無効）と言います。</target>
        </trans-unit>
        <trans-unit id="829b7a94e24ea2654187698ce1c61c946cf592a4" translate="yes" xml:space="preserve">
          <source>A masked array with all data masked.</source>
          <target state="translated">すべてのデータがマスクされたマスクされた配列。</target>
        </trans-unit>
        <trans-unit id="4c13e0f2aab6ad6b446bac77982599c22e957fa5" translate="yes" xml:space="preserve">
          <source>A matlab, R, IDL, NumPy/SciPy dictionary</source>
          <target state="translated">matlab,R,IDL,NumPy/SciPy 辞書</target>
        </trans-unit>
        <trans-unit id="77a446e834e09b8c95fd907735120b99ef29b40b" translate="yes" xml:space="preserve">
          <source>A matrix of floating-point samples drawn from the standard normal distribution.</source>
          <target state="translated">標準正規分布から抽出された浮動小数点サンプルの行列。</target>
        </trans-unit>
        <trans-unit id="cc104aa34da923a98391ba0395e7135b414c1163" translate="yes" xml:space="preserve">
          <source>A matrix with orthonormal columns. When mode = &amp;lsquo;complete&amp;rsquo; the result is an orthogonal/unitary matrix depending on whether or not a is real/complex. The determinant may be either +/- 1 in that case.</source>
          <target state="translated">正規直交列をもつ行列。mode = 'complete'の場合、aが実数/複素数かどうかに応じて、結果は直交/ユニタリ行列になります。その場合、行列式は+/- 1になります。</target>
        </trans-unit>
        <trans-unit id="ca7c2fe181b290543210fadcc5053e8b3ec06ee8" translate="yes" xml:space="preserve">
          <source>A minimal &lt;code&gt;init{name}&lt;/code&gt; method looks like:</source>
          <target state="translated">最小限の &lt;code&gt;init{name}&lt;/code&gt; メソッドは次のようになります。</target>
        </trans-unit>
        <trans-unit id="b53664ffd0d1b20158d240bc21a792bcacea3d14" translate="yes" xml:space="preserve">
          <source>A minimum number of bins for the output array.</source>
          <target state="translated">出力配列の最小ビン数.</target>
        </trans-unit>
        <trans-unit id="0f7fbf4a6e300b7306d6e3cc9b3d65c15f44b2ab" translate="yes" xml:space="preserve">
          <source>A modified version of the input array, masked depending on the value of the &lt;code&gt;axis&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; パラメーターの値に応じてマスクされた、入力配列の変更されたバージョン。</target>
        </trans-unit>
        <trans-unit id="6344acf4bd2d798723a4d93d8470321a3ff92ae1" translate="yes" xml:space="preserve">
          <source>A more complex index transformation example.</source>
          <target state="translated">より複雑なインデックス変換の例。</target>
        </trans-unit>
        <trans-unit id="d0e4296234626cc1940c4e26b6217e094308ce0c" translate="yes" xml:space="preserve">
          <source>A more detailed explanation of strides can be found in the &amp;ldquo;ndarray.rst&amp;rdquo; file in the NumPy reference guide.</source>
          <target state="translated">ストライドの詳細については、NumPyリファレンスガイドの「ndarray.rst」ファイルをご覧ください。</target>
        </trans-unit>
        <trans-unit id="ec890bf6934bced19d9f9b3460a3cafc499210fc" translate="yes" xml:space="preserve">
          <source>A more extensive example of reST markup can be found in &lt;a href=&quot;http://docutils.sourceforge.net/docs/user/rst/demo.txt&quot;&gt;this example document&lt;/a&gt;; the &lt;a href=&quot;http://docutils.sourceforge.net/docs/user/rst/quickref.html&quot;&gt;quick reference&lt;/a&gt; is useful while editing.</source>
          <target state="translated">reSTマークアップのより広範な例は、&lt;a href=&quot;http://docutils.sourceforge.net/docs/user/rst/demo.txt&quot;&gt;このサンプルドキュメントにあり&lt;/a&gt;ます。&lt;a href=&quot;http://docutils.sourceforge.net/docs/user/rst/quickref.html&quot;&gt;クイックリファレンスは&lt;/a&gt;有用であるが編集です。</target>
        </trans-unit>
        <trans-unit id="b987c0a601229775f934a75a0acce45184bf47bd" translate="yes" xml:space="preserve">
          <source>A multi-dimensional array example:</source>
          <target state="translated">多次元配列の例。</target>
        </trans-unit>
        <trans-unit id="f88e9f525efb508388784dc73a582e741fab97e4" translate="yes" xml:space="preserve">
          <source>A multi-dimensional example:</source>
          <target state="translated">多次元の例。</target>
        </trans-unit>
        <trans-unit id="5dc89d991a8bf05772b7ec899a7daed6b0a8b80a" translate="yes" xml:space="preserve">
          <source>A multidimensional example:</source>
          <target state="translated">多次元的な例。</target>
        </trans-unit>
        <trans-unit id="aabb3055b78cf9d3f1111dd30755f105f909b03c" translate="yes" xml:space="preserve">
          <source>A multiline block starts with &lt;code&gt;'''&lt;/code&gt; (triple single-quotes) and ends with &lt;code&gt;'''&lt;/code&gt; in some &lt;em&gt;strictly&lt;/em&gt; subsequent line. Multiline blocks can be used only within .pyf files. The contents of a multiline block can be arbitrary (except that it cannot contain &lt;code&gt;'''&lt;/code&gt;) and no transformations (e.g. lowering cases) are applied to it.</source>
          <target state="translated">複数行のブロックは、 &lt;code&gt;'''&lt;/code&gt; （トリプルシングルクォート）で始まり、&lt;em&gt;厳密に&lt;/em&gt;後続の行で &lt;code&gt;'''&lt;/code&gt; で終わります。複数行ブロックは、.pyfファイル内でのみ使用できます。複数行ブロックの内容は任意であり（ &lt;code&gt;'''&lt;/code&gt; 含めることができない場合を除く）、変換（小文字など）は適用されません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="470114056533b2139223b20d707c44cd4db6a896" translate="yes" xml:space="preserve">
          <source>A named repeat rule is useful when the same set of repeats must be used several times in a block. It is specified using &amp;lt;rule1=item1, item2, item3,&amp;hellip;, itemN&amp;gt;, where N is the number of times the block should be repeated. On each repeat of the block, the entire expression, &amp;lsquo;&amp;lt;&amp;hellip;&amp;gt;&amp;rsquo; will be replaced first with item1, and then with item2, and so forth until N repeats are accomplished. Once a named repeat specification has been introduced, the same repeat rule may be used &lt;strong&gt;in the current block&lt;/strong&gt; by referring only to the name (i.e. &amp;lt;rule1&amp;gt;).</source>
          <target state="translated">名前付きリピートルールは、同じリピートのセットをブロック内で複数回使用する必要がある場合に役立ちます。&amp;lt;rule1 = item1、item2、item3、&amp;hellip;、itemN&amp;gt;を使用して指定します。ここで、Nはブロックを繰り返す必要がある回数です。ブロックが繰り返されるたびに、式全体 '&amp;lt;&amp;hellip;&amp;gt;'が最初にitem1に置き換えられ、次にitem2に置き換えられ、N回の繰り返しが完了するまで続きます。名前付きリピート仕様が導入されると、名前のみを参照することにより&lt;strong&gt;、現在のブロックで&lt;/strong&gt;同じリピートルールを使用できます（つまり、&amp;lt;rule1&amp;gt;）。</target>
        </trans-unit>
        <trans-unit id="fee4550ab9483136891754f4bdfd6191512d9294" translate="yes" xml:space="preserve">
          <source>A named repeat rule is useful when the same set of repeats must be used several times in a block. It is specified using &amp;lt;rule1=item1, item2, item3,&amp;hellip;, itemN&amp;gt;, where N is the number of times the block should be repeated. On each repeat of the block, the entire expression, &amp;lsquo;&amp;lt;&amp;hellip;&amp;gt;&amp;rsquo; will be replaced first with item1, and then with item2, and so forth until N repeats are accomplished. Once a named repeat specification has been introduced, the same repeat rule may be used &lt;strong&gt;in the current block&lt;/strong&gt; by referring only to the name (i.e. &amp;lt;rule1&amp;gt;.</source>
          <target state="translated">名前付き繰り返しルールは、同じ繰り返しのセットをブロック内で数回使用する必要がある場合に役立ちます。&amp;lt;rule1 = item1、item2、item3、&amp;hellip;、itemN&amp;gt;を使用して指定されます。Nはブロックを繰り返す回数です。ブロックが繰り返されるたびに、式全体が&amp;lt;&amp;lt; &amp;gt;&amp;gt;で最初にitem1に置き換えられ、次にitem2に置き換えられ、N回の繰り返しが完了するまで繰り返されます。名前付き繰り返し仕様が導入されると、名前のみを参照&lt;strong&gt;する&lt;/strong&gt;ことにより、同じ繰り返しルールを&lt;strong&gt;現在のブロックで&lt;/strong&gt;使用できます（つまり、&amp;lt;rule1&amp;gt;）。</target>
        </trans-unit>
        <trans-unit id="ef17d0fc14dd5a70ff872110bdccad64fcbfd56f" translate="yes" xml:space="preserve">
          <source>A natural approach when dealing with tabular data is to allocate a name to each column. A first possibility is to use an explicit structured dtype, as mentioned previously:</source>
          <target state="translated">表形式のデータを扱う際の自然なアプローチは、各列に名前を割り当てることです。最初の可能性は、前述のように明示的な構造化dtypeを使用することです。</target>
        </trans-unit>
        <trans-unit id="746f3b414823e7887d26584e61a99960d3d3807d" translate="yes" xml:space="preserve">
          <source>A new 1-D array initialized from text data in a string.</source>
          <target state="translated">文字列のテキストデータから初期化された新しい1次元配列です。</target>
        </trans-unit>
        <trans-unit id="ae95b32f6f003e94d14d7946d56545e0135f63ce" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; holding the non-masked data is returned.</source>
          <target state="translated">マスクされていないデータを保持する新しい&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="88ecc2ebbb56dcaedff4a2139418dee2fb902a28" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ndarray&lt;/code&gt; holding the non-masked data is returned.</source>
          <target state="translated">マスクされていないデータを保持する新しい &lt;code&gt;ndarray&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="3b8c590dfa252c7f3c893ca248877a1023a3d6aa" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ndpointer.contents&lt;/code&gt; member</source>
          <target state="translated">新しい &lt;code&gt;ndpointer.contents&lt;/code&gt; メンバー</target>
        </trans-unit>
        <trans-unit id="fe219505f265baf36bb811d03f81478d040b90cc" translate="yes" xml:space="preserve">
          <source>A new array holding the result is returned unless &lt;code&gt;out&lt;/code&gt; is specified, in which case a reference to &lt;code&gt;out&lt;/code&gt; is returned. The result has the same size as &lt;code&gt;a&lt;/code&gt;, and the same shape as &lt;code&gt;a&lt;/code&gt; if &lt;code&gt;axis&lt;/code&gt; is not None or &lt;code&gt;a&lt;/code&gt; is a 1-d array.</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; が指定されていない限り、結果を保持する新しい配列が返されます。この場合、 &lt;code&gt;out&lt;/code&gt; への参照が返されます。結果は、同じサイズ有し、かつ同じ形状あれば &lt;code&gt;axis&lt;/code&gt; Noneでないか、1次元配列です。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd535d99a931f0449184609f6016354bec2044d6" translate="yes" xml:space="preserve">
          <source>A new array holding the result is returned unless &lt;code&gt;out&lt;/code&gt; is specified, in which case a reference to out is returned.</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; が指定されていない限り、結果を保持する新しい配列が返されます。この場合、outへの参照が返されます。</target>
        </trans-unit>
        <trans-unit id="6f8f859ede56ba26f8769de8c565d9f4c768fea6" translate="yes" xml:space="preserve">
          <source>A new array holding the result is returned unless &lt;code&gt;out&lt;/code&gt; is specified, in which case it is returned.</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; が指定されていない限り、結果を保持する新しい配列が返されます。</target>
        </trans-unit>
        <trans-unit id="8e2320a4eb5e6995b9cc3fe7e2f76f7eeadca85d" translate="yes" xml:space="preserve">
          <source>A new array holding the result is returned unless &lt;code&gt;out&lt;/code&gt; is specified, in which it is returned. The result has the same size as &lt;code&gt;a&lt;/code&gt;, and the same shape as &lt;code&gt;a&lt;/code&gt; if &lt;code&gt;axis&lt;/code&gt; is not None or &lt;code&gt;a&lt;/code&gt; is a 1-d array.</source>
          <target state="translated">結果が返さ &lt;code&gt;out&lt;/code&gt; が指定されていない限り、結果を保持する新しい配列が返されます。結果は、同じサイズ有し、かつ同じ形状あれば &lt;code&gt;axis&lt;/code&gt; Noneでないか、1次元配列です。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="479cc7a91a9d4faa4652b5669146eec3a315bacd" translate="yes" xml:space="preserve">
          <source>A new array holding the result is returned unless out is specified, in which case a reference to out is returned. Return data-type is &lt;a href=&quot;../arrays.scalars#numpy.float64&quot;&gt;&lt;code&gt;float64&lt;/code&gt;&lt;/a&gt; for integers and floats smaller than &lt;a href=&quot;../arrays.scalars#numpy.float64&quot;&gt;&lt;code&gt;float64&lt;/code&gt;&lt;/a&gt;, or the input data-type, otherwise.</source>
          <target state="translated">outが指定されていない限り、結果を保持する新しい配列が返されます。指定されている場合は、outへの参照が返されます。戻りデータ型は、整数の場合は&lt;a href=&quot;../arrays.scalars#numpy.float64&quot;&gt; &lt;code&gt;float64&lt;/code&gt; &lt;/a&gt;であり、&lt;a href=&quot;../arrays.scalars#numpy.float64&quot;&gt; &lt;code&gt;float64&lt;/code&gt; &lt;/a&gt;よりも小さいfloatであるか、それ以外の場合は入力データ型です。</target>
        </trans-unit>
        <trans-unit id="d1bd872e7a7340bee975d5292cdea5f0a94c2302" translate="yes" xml:space="preserve">
          <source>A new array holding the result is returned unless out is specified, in which case a reference to out is returned. Return data-type is &lt;code&gt;float64&lt;/code&gt; for integers and floats smaller than &lt;code&gt;float64&lt;/code&gt;, or the input data-type, otherwise.</source>
          <target state="translated">outが指定されていない限り、結果を保持する新しい配列が返されます。この場合、outへの参照が返されます。戻り値のデータ型である &lt;code&gt;float64&lt;/code&gt; 整数およびより小さい浮遊 &lt;code&gt;float64&lt;/code&gt; そうでなければ、または入力データ型。</target>
        </trans-unit>
        <trans-unit id="a8f4bbb0d5737e1005ab85a4c1e5ee3d01d76917" translate="yes" xml:space="preserve">
          <source>A new array holding the result, unless &lt;code&gt;out&lt;/code&gt; was specified, in which case a reference to &lt;code&gt;out&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; が指定されていない限り、結果を保持する新しい配列。この場合、 &lt;code&gt;out&lt;/code&gt; への参照が返されます。</target>
        </trans-unit>
        <trans-unit id="5f6c1410a3a526a9aa31e8ca9eb607d4c83ef200" translate="yes" xml:space="preserve">
          <source>A new array holding the result. If the input contains integers or floats smaller than &lt;code&gt;float64&lt;/code&gt;, then the output data-type is &lt;code&gt;np.float64&lt;/code&gt;. Otherwise, the data-type of the output is the same as that of the input. If &lt;code&gt;out&lt;/code&gt; is specified, that array is returned instead.</source>
          <target state="translated">結果を保持する新しい配列。入力に &lt;code&gt;float64&lt;/code&gt; より小さい整数または浮動小数点数が含まれている場合、出力データ型は &lt;code&gt;np.float64&lt;/code&gt; です。それ以外の場合、出力のデータ型は入力のデータ型と同じです。 &lt;code&gt;out&lt;/code&gt; が指定されている場合は、代わりにその配列が返されます。</target>
        </trans-unit>
        <trans-unit id="12dcc14742fa5cf966b623d3902bec2fe90f26ac" translate="yes" xml:space="preserve">
          <source>A new boolean or &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; is returned unless &lt;code&gt;out&lt;/code&gt; is specified, in which case a reference to &lt;code&gt;out&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; が指定されていない限り、新しいブール値または&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;が返されます。この場合、 &lt;code&gt;out&lt;/code&gt; への参照が返されます。</target>
        </trans-unit>
        <trans-unit id="8f8e1d77c9cfe7d14f562328f05b8db6b12c1a26" translate="yes" xml:space="preserve">
          <source>A new boolean or array is returned unless &lt;code&gt;out&lt;/code&gt; is specified, in which case a reference to &lt;code&gt;out&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; が指定されていない限り、新しいブール値または配列が返されます。その場合、 &lt;code&gt;out&lt;/code&gt; への参照が返されます。</target>
        </trans-unit>
        <trans-unit id="03cb12e12d7ca89335002a36980c2fad87e769bb" translate="yes" xml:space="preserve">
          <source>A new flexible-type &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; with two fields: the first element containing a value, the second element containing the corresponding mask boolean. The returned record shape matches self.shape.</source>
          <target state="translated">2つのフィールドを持つ新しいフレキシブルタイプの&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;：値を含む最初の要素、対応するマスクブール値を含む2番目の要素。返されるレコードの形状はself.shapeと一致します。</target>
        </trans-unit>
        <trans-unit id="99912ae944b2b57418e1b7da69ce28ca8ba58a1d" translate="yes" xml:space="preserve">
          <source>A new flexible-type &lt;code&gt;ndarray&lt;/code&gt; with two fields: the first element containing a value, the second element containing the corresponding mask boolean. The returned record shape matches self.shape.</source>
          <target state="translated">2つのフィールドを持つ新しいフレキシブルタイプ &lt;code&gt;ndarray&lt;/code&gt; ：最初の要素には値が含まれ、2番目の要素には対応するマスクブール値が含まれます。返されたレコード形状は、self.shapeと一致します。</target>
        </trans-unit>
        <trans-unit id="cb4010ee58838d1694f9ab9f7b5e871db7356a2d" translate="yes" xml:space="preserve">
          <source>A new polynomial representing the derivative.</source>
          <target state="translated">微分を表す新しい多項式。</target>
        </trans-unit>
        <trans-unit id="45b4e3cf6c3f9c0bf06df2287ee1b7704ec67fba" translate="yes" xml:space="preserve">
          <source>A new series representing the derivative. The domain is the same as the domain of the differentiated series.</source>
          <target state="translated">微分級数を表す新級数。ドメインは微分級数のドメインと同じです。</target>
        </trans-unit>
        <trans-unit id="bf292f7f138c1a85853bbdea5d47f21f0f2e96a1" translate="yes" xml:space="preserve">
          <source>A new series representing the integral. The domain is the same as the domain of the integrated series.</source>
          <target state="translated">積分を表す新系列。ドメインは積分級数のドメインと同じです。</target>
        </trans-unit>
        <trans-unit id="b97518c3847501702c21aaf46fb19e4284c482dc" translate="yes" xml:space="preserve">
          <source>A new view on the array.</source>
          <target state="translated">配列の新しいビュー。</target>
        </trans-unit>
        <trans-unit id="06077e00197e6db37d041fa326fce614e70e4417" translate="yes" xml:space="preserve">
          <source>A nicer way to build up index tuples for arrays.</source>
          <target state="translated">配列用のインデックスタプルを構築するためのより良い方法です。</target>
        </trans-unit>
        <trans-unit id="f7d18c9a5816a4fd32587ba2ff5efc11cb522f13" translate="yes" xml:space="preserve">
          <source>A non-exhaustive list of these operations, which can be computed by &lt;a href=&quot;#numpy.einsum&quot;&gt;&lt;code&gt;einsum&lt;/code&gt;&lt;/a&gt;, is shown below along with examples:</source>
          <target state="translated">&lt;a href=&quot;#numpy.einsum&quot;&gt; &lt;code&gt;einsum&lt;/code&gt; &lt;/a&gt;で計算できるこれらの操作の完全なリストを、例とともに以下に示します。</target>
        </trans-unit>
        <trans-unit id="3f39be7ee390b50c936131bbc0227261bdd37433" translate="yes" xml:space="preserve">
          <source>A normal &lt;code&gt;argsort&lt;/code&gt; would have yielded:</source>
          <target state="translated">通常の &lt;code&gt;argsort&lt;/code&gt; は次のようになります：</target>
        </trans-unit>
        <trans-unit id="169aa3ac396274c2b6295b469d82a21e30785967" translate="yes" xml:space="preserve">
          <source>A number providing alignment information for this data type. Specifically, it shows how far from the start of a 2-element structure (whose first element is a &lt;code&gt;char&lt;/code&gt; ), the compiler places an item of this type: &lt;code&gt;offsetof(struct {char c; type v;},
v)&lt;/code&gt;</source>
          <target state="translated">このデータ型の配置情報を提供する数値。具体的には、2要素構造（最初の要素が &lt;code&gt;char&lt;/code&gt; ）の開始からどれだけ離れているかを示し、コンパイラーはこのタイプのアイテムを配置します： &lt;code&gt;offsetof(struct {char c; type v;}, v)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8937103f50695ce6653a16bee8c83a4ae6595480" translate="yes" xml:space="preserve">
          <source>A number representing the sign of the determinant. For a real matrix, this is 1, 0, or -1. For a complex matrix, this is a complex number with absolute value 1 (i.e., it is on the unit circle), or else 0.</source>
          <target state="translated">行列式の符号を表す数値。実数行列の場合は 1,0,-1 のいずれかである.複素行列の場合,これは絶対値が 1 の複素数(すなわち,単位円上にある),または 0 である.</target>
        </trans-unit>
        <trans-unit id="0040a43542844366dbc2263885b6af73ee030ad0" translate="yes" xml:space="preserve">
          <source>A number that uniquely identifies the data type. For new data-types, this number is assigned when the data-type is registered.</source>
          <target state="translated">データ型を一意に識別する番号。新しいデータ型の場合は、データ型の登録時にこの番号が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="e64bafda3fffa3a2f2c0d4bdf32a98e5edcb1985" translate="yes" xml:space="preserve">
          <source>A number, an array of numbers, or an instance of poly1d, at which to evaluate &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; を評価する数値、数値の配列、またはpoly1dのインスタンス。</target>
        </trans-unit>
        <trans-unit id="ed359e325ef3c86354bbb73ec8a423d46aff3b3c" translate="yes" xml:space="preserve">
          <source>A numpy array is homogeneous, and contains elements described by a dtype object. A dtype object can be constructed from different combinations of fundamental numeric types.</source>
          <target state="translated">numpy配列は均質であり,dtypeオブジェクトによって記述された要素を含みます.dtype オブジェクトは,基本的な数値型のさまざまな組み合わせから構築することができます.</target>
        </trans-unit>
        <trans-unit id="efcfbbb4a0a9c26532564adde93592102c95f15d" translate="yes" xml:space="preserve">
          <source>A one-dimensional masked array.</source>
          <target state="translated">1次元のマスクされた配列。</target>
        </trans-unit>
        <trans-unit id="0fa893bfe0bd95fab46e15f4d3eccd8809a9d3d5" translate="yes" xml:space="preserve">
          <source>A one-dimensional polynomial class.</source>
          <target state="translated">一次元多項式クラス。</target>
        </trans-unit>
        <trans-unit id="a15971ac2b7a274cce2c0bced4d09bdc2c62f96a" translate="yes" xml:space="preserve">
          <source>A one-line summary that does not use variable names or the function name, e.g.</source>
          <target state="translated">変数名や関数名を使用しない1行の要約。</target>
        </trans-unit>
        <trans-unit id="bb3aa572d8b0200f65354cc93cb34ae9206c0d0a" translate="yes" xml:space="preserve">
          <source>A one-line summary that does not use variable names or the function name.</source>
          <target state="translated">変数名や関数名を使わない一行要約。</target>
        </trans-unit>
        <trans-unit id="b2735c251fe39517e9e54a2f8b41705e1d67bc8a" translate="yes" xml:space="preserve">
          <source>A parenthesized number followed by a comma denotes a tuple with one element. The trailing comma distinguishes a one-element tuple from a parenthesized &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">括弧で囲まれた数字の後にコンマが続く場合は、1つの要素を持つタプルを示します。末尾のコンマは、1要素のタプルと括弧で囲まれた &lt;code&gt;n&lt;/code&gt; を区別します。</target>
        </trans-unit>
        <trans-unit id="6fff8125898e34535342e18def4fd6d7ee1146c9" translate="yes" xml:space="preserve">
          <source>A period for the x-coordinates. This parameter allows the proper interpolation of angular x-coordinates. Parameters &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; are ignored if &lt;code&gt;period&lt;/code&gt; is specified.</source>
          <target state="translated">X座標の期間。このパラメータにより、角度x座標の適切な補間が可能になります。 &lt;code&gt;period&lt;/code&gt; が指定されている場合、パラメーター &lt;code&gt;left&lt;/code&gt; および &lt;code&gt;right&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="343742afeb5c49344b0f6b087beb0d395d756502" translate="yes" xml:space="preserve">
          <source>A permanent or temporary ban from some or all NumPy spaces (mailing lists, gitter.im, etc.). The group will maintain records of all such bans so that they may be reviewed in the future or otherwise maintained.</source>
          <target state="translated">一部またはすべてのNumPyスペース(メーリングリスト、gitter.imなど)からの永久的または一時的な禁止。このグループはそのような禁止事項の記録を維持し、将来的に見直されるか、あるいは維持されるようにします。</target>
        </trans-unit>
        <trans-unit id="b807b86bd0a6c46355a0cf3278bb74297eec4a49" translate="yes" xml:space="preserve">
          <source>A pointer &lt;em&gt;to&lt;/em&gt; the first element of the array.</source>
          <target state="translated">配列の最初の要素&lt;em&gt;へ&lt;/em&gt;のポインター。</target>
        </trans-unit>
        <trans-unit id="54bc66c1a086a47763e1dec2c9b34cd3570a6b58" translate="yes" xml:space="preserve">
          <source>A pointer to a data-type descriptor object (see below). The data-type descriptor object is an instance of a new built-in type which allows a generic description of memory. There is a descriptor structure for each data type supported. This descriptor structure contains useful information about the type as well as a pointer to a table of function pointers to implement specific functionality.</source>
          <target state="translated">データ型記述子オブジェクトへのポインタ(下記参照)。データ型記述子オブジェクトは、メモリの一般的な記述を可能にする新しい組み込み型のインスタンスです。サポートされているデータ型ごとに記述子構造体があります。この記述子構造体には、型に関する有用な情報と、特定の機能を実装するための関数ポインタのテーブルへのポインタが含まれています。</target>
        </trans-unit>
        <trans-unit id="cc54b48424db5be195eefdd0e99665072c298078" translate="yes" xml:space="preserve">
          <source>A pointer to a data-type descriptor object (see below). The data-type descriptor object is an instance of a new built-in type which allows a generic description of memory. There is a descriptor structure for each data type supported. This descriptor structure contains useful information about the type as well as a pointer to a table of function pointers to implement specific functionality. As the name suggests, it is associated with the macro &lt;a href=&quot;array#c.PyArray_DESCR&quot;&gt;&lt;code&gt;PyArray_DESCR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">データ型記述子オブジェクトへのポインタ（以下を参照）。データ型記述子オブジェクトは、メモリの一般的な記述を可能にする新しい組み込み型のインスタンスです。サポートされているデータ型ごとに記述子構造があります。この記述子構造には、タイプに関する有用な情報と、特定の機能を実装するための関数ポインターのテーブルへのポインターが含まれています。名前が示すように、マクロ&lt;a href=&quot;array#c.PyArray_DESCR&quot;&gt; &lt;code&gt;PyArray_DESCR&lt;/code&gt; に&lt;/a&gt;関連付けられています。</target>
        </trans-unit>
        <trans-unit id="f52546cb0757bfc5efa9ebae8156141a177cf5a7" translate="yes" xml:space="preserve">
          <source>A pointer to a function that compares two elements of the array, &lt;code&gt;arr&lt;/code&gt;, pointed to by &lt;code&gt;d1&lt;/code&gt; and &lt;code&gt;d2&lt;/code&gt;. This function requires behaved (aligned and not swapped) arrays. The return value is 1 if * &lt;code&gt;d1&lt;/code&gt; &amp;gt; * &lt;code&gt;d2&lt;/code&gt;, 0 if * &lt;code&gt;d1&lt;/code&gt; == * &lt;code&gt;d2&lt;/code&gt;, and -1 if * &lt;code&gt;d1&lt;/code&gt; &amp;lt; * &lt;code&gt;d2&lt;/code&gt;. The array object &lt;code&gt;arr&lt;/code&gt; is used to retrieve itemsize and field information for flexible arrays.</source>
          <target state="translated">&lt;code&gt;d1&lt;/code&gt; および &lt;code&gt;d2&lt;/code&gt; が指す配列の2つの要素 &lt;code&gt;arr&lt;/code&gt; を比較する関数へのポインター。この関数には、動作する（整列され、スワップされない）配列が必要です。戻り値が1である場合* &lt;code&gt;d1&lt;/code&gt; &amp;gt; * &lt;code&gt;d2&lt;/code&gt; は、0であれば* &lt;code&gt;d1&lt;/code&gt; == * &lt;code&gt;d2&lt;/code&gt; 、及び-1であれば* &lt;code&gt;d1&lt;/code&gt; &amp;lt;* &lt;code&gt;d2&lt;/code&gt; 。配列オブジェクト &lt;code&gt;arr&lt;/code&gt; は、柔軟な配列の項目サイズとフィールド情報を取得するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1fc83854e537846a552a3275bf092cf2af85d046" translate="yes" xml:space="preserve">
          <source>A pointer to a function that converts the string pointed to by &lt;code&gt;str&lt;/code&gt; to one element of the corresponding type and places it in the memory location pointed to by &lt;code&gt;ip&lt;/code&gt;. After the conversion is completed, &lt;code&gt;*endptr&lt;/code&gt; points to the rest of the string. The last argument &lt;code&gt;arr&lt;/code&gt; is the array into which ip points (needed for variable-size data- types). Returns 0 on success or -1 on failure. Requires a behaved array. This function should be called without holding the Python GIL, and has to grab it for error reporting.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; が指す文字列を対応する型の1つの要素に変換し、 &lt;code&gt;ip&lt;/code&gt; が指すメモリ位置に配置する関数へのポインタ。変換が完了すると、 &lt;code&gt;*endptr&lt;/code&gt; は残りの文字列を指します。最後の引数 &lt;code&gt;arr&lt;/code&gt; は、ipが指す配列です（可変サイズのデータ​​型に必要）。成功した場合は0、失敗した場合は-1を返します。動作する配列が必要です。この関数はPython GILを保持せずに呼び出す必要があり、エラー報告のためにこの関数を取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="fc6cc8bae9ddadc31f5ed95f0732f27d78c14f32" translate="yes" xml:space="preserve">
          <source>A pointer to a function that fills a contiguous &lt;code&gt;buffer&lt;/code&gt; of the given &lt;code&gt;length&lt;/code&gt; with a single scalar &lt;code&gt;value&lt;/code&gt; whose address is given. The final argument is the array which is needed to get the itemsize for variable-length arrays.</source>
          <target state="translated">指定 &lt;code&gt;length&lt;/code&gt; れた長さの連続した &lt;code&gt;buffer&lt;/code&gt; を、アドレスが指定された単一のスカラー &lt;code&gt;value&lt;/code&gt; で埋める関数へのポインター。最後の引数は、可変長配列のアイテムサイズを取得するために必要な配列です。</target>
        </trans-unit>
        <trans-unit id="3910c8d96e5d20400e40452efc26010ea9229ece" translate="yes" xml:space="preserve">
          <source>A pointer to a function that fills a contiguous array of given length with data. The first two elements of the array must already be filled- in. From these two values, a delta will be computed and the values from item 3 to the end will be computed by repeatedly adding this computed delta. The data buffer must be well-behaved.</source>
          <target state="translated">指定された長さの連続する配列にデータを書き込む関数へのポインタ.配列の最初の2つの要素は,既に埋められている必要があります.これら2つの値からデルタが計算され,この計算されたデルタを繰り返し加算することで,項目3から最後までの値が計算されます.データバッファは、十分に振る舞われていなければなりません。</target>
        </trans-unit>
        <trans-unit id="431a234d877bed63a4147682817ee948ed7fbada" translate="yes" xml:space="preserve">
          <source>A pointer to a function that multiplies two &lt;code&gt;n&lt;/code&gt; -length sequences together, adds them, and places the result in element pointed to by &lt;code&gt;op&lt;/code&gt; of &lt;code&gt;arr&lt;/code&gt;. The start of the two sequences are pointed to by &lt;code&gt;ip1&lt;/code&gt; and &lt;code&gt;ip2&lt;/code&gt;. To get to the next element in each sequence requires a jump of &lt;code&gt;is1&lt;/code&gt; and &lt;code&gt;is2&lt;/code&gt;&lt;em&gt;bytes&lt;/em&gt;, respectively. This function requires behaved (though not necessarily contiguous) memory.</source>
          <target state="translated">2つの &lt;code&gt;n&lt;/code&gt; 長のシーケンスを乗算して加算し、結果を &lt;code&gt;arr&lt;/code&gt; の &lt;code&gt;op&lt;/code&gt; が指す要素に配置する関数へのポインター。2つのシーケンスの開始は、 &lt;code&gt;ip1&lt;/code&gt; および &lt;code&gt;ip2&lt;/code&gt; によってポイントされます。各シーケンスの次の要素に移動するには、それぞれ &lt;code&gt;is1&lt;/code&gt; および &lt;code&gt;is2&lt;/code&gt; &lt;em&gt;バイトの&lt;/em&gt;ジャンプが必要です。この関数は、動作する（必ずしも連続しているわけではありませんが）メモリを必要とします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aae344cd692cc12af2d04f598d731b117bcbfbcf" translate="yes" xml:space="preserve">
          <source>A pointer to a function that retrieves the index of the largest of &lt;code&gt;n&lt;/code&gt; elements in &lt;code&gt;arr&lt;/code&gt; beginning at the element pointed to by &lt;code&gt;data&lt;/code&gt;. This function requires that the memory segment be contiguous and behaved. The return value is always 0. The index of the largest element is returned in &lt;code&gt;max_ind&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; が指す要素から始まる、 &lt;code&gt;arr&lt;/code&gt; の &lt;code&gt;n&lt;/code&gt; 個の要素の最大のインデックスを取得する関数へのポインター。この機能では、メモリセグメントが連続して動作する必要があります。戻り値は常に0 &lt;code&gt;max_ind&lt;/code&gt; 。最大の要素のインデックスはmax_indに返されます。</target>
        </trans-unit>
        <trans-unit id="4ceac65337b54f9dcdd551d1e9b47510e515aabf" translate="yes" xml:space="preserve">
          <source>A pointer to a function that retrieves the index of the smallest of &lt;code&gt;n&lt;/code&gt; elements in &lt;code&gt;arr&lt;/code&gt; beginning at the element pointed to by &lt;code&gt;data&lt;/code&gt;. This function requires that the memory segment be contiguous and behaved. The return value is always 0. The index of the smallest element is returned in &lt;code&gt;min_ind&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; が指す要素から始まる &lt;code&gt;arr&lt;/code&gt; の最小の &lt;code&gt;n&lt;/code&gt; 要素のインデックスを取得する関数へのポインター。この機能では、メモリセグメントが連続して動作する必要があります。戻り値は常に0 &lt;code&gt;min_ind&lt;/code&gt; 。最小要素のインデックスはmin_indに返されます。</target>
        </trans-unit>
        <trans-unit id="3835d7b1621720aec7eaa6814ef86b756b4dbf87" translate="yes" xml:space="preserve">
          <source>A pointer to a function that returns TRUE if the item of &lt;code&gt;arr&lt;/code&gt; pointed to by &lt;code&gt;data&lt;/code&gt; is nonzero. This function can deal with misbehaved arrays.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; が指す &lt;code&gt;arr&lt;/code&gt; の項目がゼロ以外の場合にTRUEを返す関数へのポインター。この関数は、正しく動作しない配列を処理できます。</target>
        </trans-unit>
        <trans-unit id="475aaf0895b62768be3ac2099d9424549dcf7a83" translate="yes" xml:space="preserve">
          <source>A pointer to a function that returns a standard Python object from a single element of the array object &lt;em&gt;arr&lt;/em&gt; pointed to by &lt;em&gt;data&lt;/em&gt;. This function must be able to deal with &amp;ldquo;misbehaved &amp;ldquo;(misaligned and/or swapped) arrays correctly.</source>
          <target state="translated">&lt;em&gt;dataが&lt;/em&gt;指す配列オブジェクト&lt;em&gt;arrの&lt;/em&gt;単一の要素から標準のPythonオブジェクトを返す関数へのポインター。この関数は、「正しく動作しない」（正しく配置されていない、またはスワップされた）配列を正しく処理できる必要があります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3170ee650911ef94b49078fe0ef12bfaed1cd35b" translate="yes" xml:space="preserve">
          <source>A pointer to a function that scans (scanf style) one element of the corresponding type from the file descriptor &lt;code&gt;fd&lt;/code&gt; into the array memory pointed to by &lt;code&gt;ip&lt;/code&gt;. The array is assumed to be behaved. The last argument &lt;code&gt;arr&lt;/code&gt; is the array to be scanned into. Returns number of receiving arguments successfully assigned (which may be zero in case a matching failure occurred before the first receiving argument was assigned), or EOF if input failure occurs before the first receiving argument was assigned. This function should be called without holding the Python GIL, and has to grab it for error reporting.</source>
          <target state="translated">対応するタイプの1つの要素をファイル記述子 &lt;code&gt;fd&lt;/code&gt; から &lt;code&gt;ip&lt;/code&gt; が指す配列メモリにスキャンする（scanfスタイル）関数へのポインター。配列は動作すると見なされます。最後の引数 &lt;code&gt;arr&lt;/code&gt; はスキャンされる配列です。正常に割り当てられた受信引数の数（最初の受信引数が割り当てられる前に一致エラーが発生した場合はゼロになる場合があります）、または最初の受信引数が割り当てられる前に入力エラーが発生した場合はEOFを返します。この関数はPython GILを保持せずに呼び出す必要があり、エラー報告のためにこの関数を取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="d5345ed457c10e2b6dd319d2a0f575462b52b35a" translate="yes" xml:space="preserve">
          <source>A pointer to a function that sets the Python object &lt;em&gt;item&lt;/em&gt; into the array, &lt;em&gt;arr&lt;/em&gt;, at the position pointed to by &lt;em&gt;data&lt;/em&gt; . This function deals with &amp;ldquo;misbehaved&amp;rdquo; arrays. If successful, a zero is returned, otherwise, a negative one is returned (and a Python error set).</source>
          <target state="translated">Pythonオブジェクト&lt;em&gt;アイテム&lt;/em&gt;を配列&lt;em&gt;arrの&lt;/em&gt;&lt;em&gt;dataが&lt;/em&gt;指す位置に設定する関数へのポインター。この関数は、「正しく動作しない」配列を扱います。成功した場合はゼロが返され、それ以外の場合は負の1が返されます（およびPythonエラーセット）。</target>
        </trans-unit>
        <trans-unit id="07d68822ce5e306e8bf5019318abb9ceb0c735d6" translate="yes" xml:space="preserve">
          <source>A pointer to a list of (&lt;a href=&quot;c-api.dtype#c.npy_intp&quot;&gt;&lt;code&gt;npy_intp&lt;/code&gt;&lt;/a&gt;) integers which usually represent array shape or array strides.</source>
          <target state="translated">通常は配列形状または配列ストライドを表す（&lt;a href=&quot;c-api.dtype#c.npy_intp&quot;&gt; &lt;code&gt;npy_intp&lt;/code&gt; &lt;/a&gt;）整数のリストへのポインター。</target>
        </trans-unit>
        <trans-unit id="89b13316dd59646ea59001e9e827165721e7bc03" translate="yes" xml:space="preserve">
          <source>A pointer to a list of (&lt;a href=&quot;dtype#c.npy_intp&quot;&gt;&lt;code&gt;npy_intp&lt;/code&gt;&lt;/a&gt;) integers which usually represent array shape or array strides.</source>
          <target state="translated">通常、配列の形状または配列のストライドを表す（&lt;a href=&quot;dtype#c.npy_intp&quot;&gt; &lt;code&gt;npy_intp&lt;/code&gt; &lt;/a&gt;）整数のリストへのポインター。</target>
        </trans-unit>
        <trans-unit id="bca11ad9efa9f4f1976179ecad73042ba9578700" translate="yes" xml:space="preserve">
          <source>A pointer to a structure containing functions that the type needs to implement internal features. These functions are not the same thing as the universal functions (ufuncs) described later. Their signatures can vary arbitrarily.</source>
          <target state="translated">型が内部機能を実装するために必要な関数を含む構造体へのポインタ。これらの関数は、後述のユニバーサル関数(ufuncs)と同じものではありません。これらの関数のシグネチャは、任意に変更することができます。</target>
        </trans-unit>
        <trans-unit id="59953b5554f06beb9b2ea5a5bf0b78689b8252f0" translate="yes" xml:space="preserve">
          <source>A pointer to newly created memory of size &lt;em&gt;arr&lt;/em&gt; -&amp;gt;itemsize that holds the representation of 0 for that type. The returned pointer, &lt;em&gt;ret&lt;/em&gt;, &lt;strong&gt;must be freed&lt;/strong&gt; using &lt;a href=&quot;#c.PyDataMem_FREE&quot;&gt;&lt;code&gt;PyDataMem_FREE&lt;/code&gt;&lt;/a&gt; (ret) when it is not needed anymore.</source>
          <target state="translated">サイズの新しく作成されたメモリへのポインタ&lt;em&gt;ARR&lt;/em&gt;そのタイプ0の表現を保持している&amp;gt; itemsize - 。返されたポインタ&lt;em&gt;retは&lt;/em&gt;、不要になったときに&lt;a href=&quot;#c.PyDataMem_FREE&quot;&gt; &lt;code&gt;PyDataMem_FREE&lt;/code&gt; &lt;/a&gt;（ret）を使用して&lt;strong&gt;解放&lt;/strong&gt;する必要があります。</target>
        </trans-unit>
        <trans-unit id="88743a5469baac06308bedb60aa16a9c06a7a1cc" translate="yes" xml:space="preserve">
          <source>A pointer to newly created memory of size &lt;em&gt;arr&lt;/em&gt; -&amp;gt;itemsize that holds the representation of 1 for that type. The returned pointer, &lt;em&gt;ret&lt;/em&gt;, &lt;strong&gt;must be freed&lt;/strong&gt; using &lt;a href=&quot;#c.PyDataMem_FREE&quot;&gt;&lt;code&gt;PyDataMem_FREE&lt;/code&gt;&lt;/a&gt; (ret) when it is not needed anymore.</source>
          <target state="translated">サイズの新しく作成されたメモリへのポインタ&lt;em&gt;ARR&lt;/em&gt;そのタイプ1の表現を保持している&amp;gt; itemsize - 。返されたポインタ&lt;em&gt;retは&lt;/em&gt;、不要になったときに&lt;a href=&quot;#c.PyDataMem_FREE&quot;&gt; &lt;code&gt;PyDataMem_FREE&lt;/code&gt; &lt;/a&gt;（ret）を使用して&lt;strong&gt;解放&lt;/strong&gt;する必要があります。</target>
        </trans-unit>
        <trans-unit id="952d0c514c338d21716f5fd4d68c9399cc12f085" translate="yes" xml:space="preserve">
          <source>A pointer to the current element of the array.</source>
          <target state="translated">配列の現在の要素へのポインタ.</target>
        </trans-unit>
        <trans-unit id="aee26ff84fca6762d89892232d01d8f2be0bdf6b" translate="yes" xml:space="preserve">
          <source>A pointer to the first element of the array. This pointer can (and normally should) be recast to the data type of the array.</source>
          <target state="translated">配列の最初の要素へのポインタ.このポインタは,配列のデータ型にリキャストすることができます(通常はそうすべきです).</target>
        </trans-unit>
        <trans-unit id="56a9a21805ab17dfeac09889fcec479dcf32412f" translate="yes" xml:space="preserve">
          <source>A pointer to the memory area of the array as a Python integer. This memory area may contain data that is not aligned, or not in correct byte-order. The memory area may not even be writeable. The array flags and data-type of this array should be respected when passing this attribute to arbitrary C-code to avoid trouble that can include Python crashing. User Beware! The value of this attribute is exactly the same as &lt;code&gt;self._array_interface_['data'][0]&lt;/code&gt;.</source>
          <target state="translated">Python整数としての配列のメモリ領域へのポインタ。このメモリ領域には、整列されていない、または正しいバイト順でないデータが含まれている可能性があります。メモリ領域は、書き込みもできない場合があります。Pythonのクラッシュを含む問題を回避するために、この属性を任意のCコードに渡すときは、この配列の配列フラグとデータ型を尊重する必要があります。ユーザーは注意してください！この属性の値は、 &lt;code&gt;self._array_interface_['data'][0]&lt;/code&gt; とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="22a0ddabcc83c93156f54a9c4e5e12e5440e1811" translate="yes" xml:space="preserve">
          <source>A pointer to the number of bytes to jump to get to the next element in this dimension for each of the input and output arguments.</source>
          <target state="translated">入力および出力引数のそれぞれについて、このディメンジョンの次の要素に到達するためにジャンプするバイト数へのポインタ。</target>
        </trans-unit>
        <trans-unit id="38e72ad73c814139adc82a2dd23d234600ecd52c" translate="yes" xml:space="preserve">
          <source>A pointer to the size of the dimension over which this function is looping.</source>
          <target state="translated">この関数がループしている次元のサイズへのポインタ.</target>
        </trans-unit>
        <trans-unit id="b32e8bc9cebeb7ce19737bb101702a66d6ad1687" translate="yes" xml:space="preserve">
          <source>A pointer to the start of the single-segment chunk of memory.</source>
          <target state="translated">メモリのシングルセグメントチャンクの開始位置へのポインタ。</target>
        </trans-unit>
        <trans-unit id="6f57ac5d68543b1b89ec36367f4ed4ba98cb9a0b" translate="yes" xml:space="preserve">
          <source>A pointer to the underlying ndarray this iterator was created to represent.</source>
          <target state="translated">このイテレータが表現するために作成された基礎となる ndarray へのポインタ。</target>
        </trans-unit>
        <trans-unit id="a905832ada81de251c9fef160b03726a6aa39266" translate="yes" xml:space="preserve">
          <source>A polynomial class.</source>
          <target state="translated">多項式クラス。</target>
        </trans-unit>
        <trans-unit id="92c43ef422facf81c4d4c9adbfb7fdd14c6bdac1" translate="yes" xml:space="preserve">
          <source>A possible advantage this code has over the Fortran-equivalent code is that it takes arbitrarily strided (i.e. non-contiguous arrays) and may also run faster depending on the optimization capability of your compiler. But, it is an obviously more complicated than the simple code in &lt;code&gt;filter.f&lt;/code&gt;. This code must be compiled into a shared library. On my Linux system this is accomplished using:</source>
          <target state="translated">このコードがFortranと同等のコードに対して持つ可能性のある利点は、任意にストライド（つまり、非連続配列）を取り、コンパイラーの最適化機能によってはより高速に実行できることです。ただし、 &lt;code&gt;filter.f&lt;/code&gt; の単純なコードよりも明らかに複雑です。このコードは、共有ライブラリにコンパイルする必要があります。私のLinuxシステムでは、これは以下を使用して実行されます。</target>
        </trans-unit>
        <trans-unit id="0454333d741ede4c1731a6f584bd036397a70818" translate="yes" xml:space="preserve">
          <source>A possible use of &lt;code&gt;bincount&lt;/code&gt; is to perform sums over variable-size chunks of an array, using the &lt;code&gt;weights&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;code&gt;bincount&lt;/code&gt; の可能な使用法は、 &lt;code&gt;weights&lt;/code&gt; キーワードを使用して、配列の可変サイズのチャンクに対して合計を実行することです。</target>
        </trans-unit>
        <trans-unit id="1c8ebcd0235f5f5086307d84956c8e7e4f912a54" translate="yes" xml:space="preserve">
          <source>A potential drawback is that writing to a view can alter the original as well. If this is a problem, NumPy instead needs to create a physically distinct array &amp;ndash; a &lt;a href=&quot;https://docs.python.org/dev/library/copy.html#module-copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">潜在的な欠点は、ビューへの書き込みによって元のビューも変更される可能性があることです。これが問題である場合、NumPyは代わりに物理的に異なる配列（&lt;a href=&quot;https://docs.python.org/dev/library/copy.html#module-copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;を作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="bba8e35dba23bc8041a6e079b6a83f9598e8027c" translate="yes" xml:space="preserve">
          <source>A power series class.</source>
          <target state="translated">パワーシリーズクラス。</target>
        </trans-unit>
        <trans-unit id="360614eff4e9b482c7ccb1687741451d3292c036" translate="yes" xml:space="preserve">
          <source>A printable representation of the einsum path.</source>
          <target state="translated">アインサムの道を印刷して表現したもの。</target>
        </trans-unit>
        <trans-unit id="cccb2558c6121a3893278b1dfc962b0f04f189f8" translate="yes" xml:space="preserve">
          <source>A private reprimand from the committee to the individual(s) involved. In this case, the group chair will deliver that reprimand to the individual(s) over email, cc&amp;rsquo;ing the group.</source>
          <target state="translated">委員会から関係する個人への私的な叱責。この場合、グループチェアは、その叱責を電子メールで個人に配信し、グループにCCを送信します。</target>
        </trans-unit>
        <trans-unit id="03fcbd555d6873db7a97ecb9b9ef66697ff41f07" translate="yes" xml:space="preserve">
          <source>A property of an object that can be accessed using &lt;code&gt;obj.attribute&lt;/code&gt;, e.g., &lt;code&gt;shape&lt;/code&gt; is an attribute of an array:</source>
          <target state="translated">&lt;code&gt;obj.attribute&lt;/code&gt; を使用してアクセスできるオブジェクトのプロパティ。たとえば、 &lt;code&gt;shape&lt;/code&gt; は配列の属性です。</target>
        </trans-unit>
        <trans-unit id="053ed178639c9196d33818dd2666646aba596e58" translate="yes" xml:space="preserve">
          <source>A public reprimand. In this case, the committee chair will deliver that reprimand in the same venue that the violation occurred, within the limits of practicality. E.g., the original mailing list for an email violation, but for a chat room discussion where the person/context may be gone, they can be reached by other means. The group may choose to publish this message elsewhere for documentation purposes.</source>
          <target state="translated">公の場での叱責。この場合、委員会の委員長は、現実的な範囲内で、違反が発生したのと同じ場所で叱責を行います。例えば、電子メールでの違反の場合は元のメーリングリストですが、チャットルームでの議論の場合は、その人/文脈がなくなっているかもしれませんが、他の手段で連絡を取ることができます。グループは文書化の目的で、このメッセージを他の場所で公開することを選択することができます。</target>
        </trans-unit>
        <trans-unit id="f1ffb246c9560ea1d618d450ea896e76b209e6bc" translate="yes" xml:space="preserve">
          <source>A python function or method.</source>
          <target state="translated">python の関数やメソッド。</target>
        </trans-unit>
        <trans-unit id="821cd21cf38135598cfbfe30d5b97393e8433ef0" translate="yes" xml:space="preserve">
          <source>A rank 1 array already padded with zeros. Padded values are vector[:iaxis_pad_width[0]] and vector[-iaxis_pad_width[1]:].</source>
          <target state="translated">ランク 1 の配列で,すでに 0 でパディングされています.パディングされた値は vector[:iaxis_pad_width[0]]と vector[-iaxis_pad_width[1]:]です.</target>
        </trans-unit>
        <trans-unit id="f52cd7b1f61334c54c920333fad88ab94ddc81b5" translate="yes" xml:space="preserve">
          <source>A readonly view on the original array with the given shape. It is typically not contiguous. Furthermore, more than one element of a broadcasted array may refer to a single memory location.</source>
          <target state="translated">与えられた形状を持つ元の配列の読み取り専用ビュー.典型的には連続していない。さらに、ブロードキャストされた配列の1つ以上の要素は、1つのメモリ位置を参照することができます。</target>
        </trans-unit>
        <trans-unit id="b389c5737b120f8a3ba90ec279ff102ef606b7d1" translate="yes" xml:space="preserve">
          <source>A real or complex array with &lt;code&gt;a.ndim &amp;gt;= 2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a.ndim &amp;gt;= 2&lt;/code&gt; 実数配列または複素数配列。</target>
        </trans-unit>
        <trans-unit id="fd53e5dc7f86931b1547c68a8b6d4fe1dd602c8c" translate="yes" xml:space="preserve">
          <source>A real world example. A company drills 9 wild-cat oil exploration wells, each with an estimated probability of success of 0.1. All nine wells fail. What is the probability of that happening?</source>
          <target state="translated">現実世界の例です。ある会社が9つのワイルドキャット石油探査井を掘削しました。9 つの井戸はすべて失敗しました。その確率はどのくらいでしょうか?</target>
        </trans-unit>
        <trans-unit id="5947a5967a2d439c4597c86e8bee99e04c20ca77" translate="yes" xml:space="preserve">
          <source>A real world example. A company drills wild-cat oil exploration wells, each with an estimated probability of success of 0.1. What is the probability of having one success for each successive well, that is what is the probability of a single success after drilling 5 wells, after 6 wells, etc.?</source>
          <target state="translated">現実世界の例です。ある会社がワイルドキャットの石油探査井を掘削していますが、それぞれの成功確率は0.1と推定されています。5本の井戸を掘削した後、6本の井戸を掘削した後など、連続する井戸ごとに1回の成功を収める確率はどのようなものでしょうか?</target>
        </trans-unit>
        <trans-unit id="e6c74562d8979b3390f8b232c8d1dfde0b8a3f6d" translate="yes" xml:space="preserve">
          <source>A recent addition to &lt;code&gt;numpy.i&lt;/code&gt; are typemaps that permit argout arrays with views into memory that is managed. See the discussion &lt;a href=&quot;http://blog.enthought.com/python/numpy-arrays-with-pre-allocated-memory&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;numpy.i&lt;/code&gt; への最近の追加は、管理されているメモリへのビューを持つargout配列を許可するタイプマップです。こちらの説明を参照して&lt;a href=&quot;http://blog.enthought.com/python/numpy-arrays-with-pre-allocated-memory&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4897b0fc8fc9aa68f4bd4b56c858ff427fb775fb" translate="yes" xml:space="preserve">
          <source>A record array representation of a structured array can be obtained using the appropriate &lt;a href=&quot;https://numpy.org/doc/1.19/user/numpy-ndarray-view&quot;&gt;view&lt;/a&gt;:</source>
          <target state="translated">構造化配列のレコード配列表現は、適切な&lt;a href=&quot;https://numpy.org/doc/1.19/user/numpy-ndarray-view&quot;&gt;ビュー&lt;/a&gt;を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="fd871b1d5bdca8cb8b7d062142df3443751547bf" translate="yes" xml:space="preserve">
          <source>A record array representation of a structured array can be obtained using the appropriate &lt;a href=&quot;https://numpy.org/doc/1.20/user/numpy-ndarray-view&quot;&gt;view&lt;/a&gt;:</source>
          <target state="translated">構造化配列のレコード配列表現は、適切な&lt;a href=&quot;https://numpy.org/doc/1.20/user/numpy-ndarray-view&quot;&gt;ビュー&lt;/a&gt;を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="fe89375cc42c612714476798303a241ab8be3adb" translate="yes" xml:space="preserve">
          <source>A reduce-like operation on an array with a data-type that has a range &amp;ldquo;too small&amp;rdquo; to handle the result will silently wrap. One should use &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; to increase the size of the data-type over which reduction takes place.</source>
          <target state="translated">結果を処理するには「小さすぎる」範囲のデータ型を持つ配列に対するreduceのような操作は、黙ってラップします。&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;を使用して、縮小が行われるデータ型のサイズを増やす必要があります。</target>
        </trans-unit>
        <trans-unit id="e6a7a274041ceccc88ee2a54369682b28d0f8f72" translate="yes" xml:space="preserve">
          <source>A reference to the array that is iterated over.</source>
          <target state="translated">反復される配列への参照.</target>
        </trans-unit>
        <trans-unit id="d51f4a8ae48577ce85df8a7b72d4533baffe3b14" translate="yes" xml:space="preserve">
          <source>A release announcement with a link to the download site should be placed in the sidebar of the front page of scipy.org.</source>
          <target state="translated">ダウンロードサイトへのリンクを含むリリースアナウンスを scipy.org のフロントページのサイドバーに配置してください。</target>
        </trans-unit>
        <trans-unit id="9f747bfcaf0bf3a6676b7d54fffce39c144d966d" translate="yes" xml:space="preserve">
          <source>A request for a public or private apology, assuming the reporter agrees to this idea: they may at their discretion refuse further contact with the violator. The chair will deliver this request. The committee may, if it chooses, attach &amp;ldquo;strings&amp;rdquo; to this request: for example, the group may ask a violator to apologize in order to retain one&amp;rsquo;s membership on a mailing list.</source>
          <target state="translated">記者がこの考えに同意すると仮定して、公的または私的な謝罪の要求：彼らは彼らの裁量で違反者とのさらなる接触を拒否するかもしれません。議長がこのリクエストを配信します。委員会は、必要に応じて、この要求に「文字列」を添付することができます。たとえば、グループは、メーリングリストのメンバーシップを維持するために、違反者に謝罪するように依頼することができます。</target>
        </trans-unit>
        <trans-unit id="52c25cce5015e79149d448b806d435904b953adc" translate="yes" xml:space="preserve">
          <source>A return of True does not necessarily mean that the two arrays share any element. It just means that they &lt;em&gt;might&lt;/em&gt;.</source>
          <target state="translated">Trueが返されても、2つの配列が要素を共有しているとは限りません。それは単に彼ら&lt;em&gt;がそうするかもしれない&lt;/em&gt;ことを意味します。</target>
        </trans-unit>
        <trans-unit id="17df53d6df96ba2281763f3f5b0b2adebfd2975d" translate="yes" xml:space="preserve">
          <source>A rotated view of &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; の回転ビュー。</target>
        </trans-unit>
        <trans-unit id="c8f4d96b9511ee618313df6057280df3dcf54f39" translate="yes" xml:space="preserve">
          <source>A scalar assigned to a structured element will be assigned to all fields. This happens when a scalar is assigned to a structured array, or when an unstructured array is assigned to a structured array:</source>
          <target state="translated">構造化要素に代入されたスカラは、すべてのフィールドに代入されます。これは、スカラが構造化配列に代入された場合や、非構造化配列が構造化配列に代入された場合に発生します。</target>
        </trans-unit>
        <trans-unit id="22190750f3f50985b63589eae0fdf601ec030ee6" translate="yes" xml:space="preserve">
          <source>A second possibility is to modify the &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.mask&quot;&gt;&lt;code&gt;mask&lt;/code&gt;&lt;/a&gt; directly, but this usage is discouraged.</source>
          <target state="translated">2番目の可能性は、&lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.mask&quot;&gt; &lt;code&gt;mask&lt;/code&gt; &lt;/a&gt;直接変更することですが、この使用はお勧めしません。</target>
        </trans-unit>
        <trans-unit id="1503f40b41df4c31b9ad3f11d30b5aa1e01767eb" translate="yes" xml:space="preserve">
          <source>A second possibility is to use the two masked array constructors, &lt;a href=&quot;generated/numpy.ma.array#numpy.ma.array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/numpy.ma.masked_array#numpy.ma.masked_array&quot;&gt;&lt;code&gt;masked_array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2番目の可能性は、2つのマスクされた配列コンストラクター&lt;a href=&quot;generated/numpy.ma.array#numpy.ma.array&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;generated/numpy.ma.masked_array#numpy.ma.masked_array&quot;&gt; &lt;code&gt;masked_array&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="539c64bc5dca6b25103342f9b6ceae531cd655bf" translate="yes" xml:space="preserve">
          <source>A section (use if applicable) to warn users that the object is deprecated. Section contents should include:</source>
          <target state="translated">オブジェクトが非推奨であることをユーザーに警告するためのセクション(該当する場合は使用)。セクションの内容は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="2a12806d879a1f49595c81b483ba154ce122b36b" translate="yes" xml:space="preserve">
          <source>A seed sequence for BitGenerators with no need for seed state.</source>
          <target state="translated">シード状態を必要としないBitGenerators用のシードシーケンス。</target>
        </trans-unit>
        <trans-unit id="2970246a918f7637894e89bb5c0daa65c3e11d9e" translate="yes" xml:space="preserve">
          <source>A seed to initialize the &lt;a href=&quot;#numpy.random.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt;. If None, then fresh, unpredictable entropy will be pulled from the OS. If an &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;array_like[ints]&lt;/code&gt; is passed, then it will be passed to ~`numpy.random.SeedSequence` to derive the initial &lt;a href=&quot;#numpy.random.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt; state. One may also pass in a &lt;a href=&quot;numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#numpy.random.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; &lt;/a&gt;を初期化するためのシード。 Noneの場合、新鮮で予測不可能なエントロピーがOSから取得されます。場合は &lt;code&gt;int&lt;/code&gt; 型または &lt;code&gt;array_like[ints]&lt;/code&gt; 渡され、初期導き出すために〜 `numpy.random.SeedSequence`に渡される&lt;a href=&quot;#numpy.random.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; の&lt;/a&gt;状態を。&lt;a href=&quot;numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;インスタンスを渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="c226a62e6ab2149724331fa10d2fa8de3a8461e2" translate="yes" xml:space="preserve">
          <source>A seed to initialize the &lt;a href=&quot;#numpy.random.bit_generator.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt;. If None, then fresh, unpredictable entropy will be pulled from the OS. If an &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;array_like[ints]&lt;/code&gt; is passed, then it will be passed to &lt;code&gt;SeedSequence&lt;/code&gt; to derive the initial &lt;a href=&quot;#numpy.random.bit_generator.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt; state. One may also pass in an implementor of the &lt;a href=&quot;numpy.random.bit_generator.iseedsequence#numpy.random.bit_generator.ISeedSequence&quot;&gt;&lt;code&gt;ISeedSequence&lt;/code&gt;&lt;/a&gt; interface like &lt;code&gt;SeedSequence&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#numpy.random.bit_generator.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; &lt;/a&gt;を初期化するためのシード。Noneの場合、新鮮で予測不可能なエントロピーがOSから取得されます。場合は &lt;code&gt;int&lt;/code&gt; 型または &lt;code&gt;array_like[ints]&lt;/code&gt; 渡され、に渡されます &lt;code&gt;SeedSequence&lt;/code&gt; 初期導出する&lt;a href=&quot;#numpy.random.bit_generator.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; の&lt;/a&gt;状態を。&lt;a href=&quot;numpy.random.bit_generator.iseedsequence#numpy.random.bit_generator.ISeedSequence&quot;&gt; &lt;code&gt;ISeedSequence&lt;/code&gt; &lt;/a&gt;ような &lt;code&gt;SeedSequence&lt;/code&gt; インターフェースのインプリメンターを渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="11c802a20aa3d53087923c8bd089782db041e6e1" translate="yes" xml:space="preserve">
          <source>A seed to initialize the &lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt;. If None, then fresh, unpredictable entropy will be pulled from the OS. If an &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;array_like[ints]&lt;/code&gt; is passed, then it will be passed to &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; to derive the initial &lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt; state. One may also pass in a &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; instance. Additionally, when passed a &lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt;, it will be wrapped by &lt;a href=&quot;#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;. If passed a &lt;a href=&quot;#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;, it will be returned unaltered.</source>
          <target state="translated">&lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; &lt;/a&gt;を初期化するためのシード。Noneの場合、新鮮で予測不可能なエントロピーがOSから取得されます。場合は &lt;code&gt;int&lt;/code&gt; 型または &lt;code&gt;array_like[ints]&lt;/code&gt; 渡され、に渡されます&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;初期導出する&lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; の&lt;/a&gt;状態を。&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;インスタンスを渡すこともできます。さらに、&lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; を渡すと&lt;/a&gt;、&lt;a href=&quot;#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;によってラップされます。&lt;a href=&quot;#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;渡すと、変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="0cc0496b1cd126456483b858da3b7c3138679ee2" translate="yes" xml:space="preserve">
          <source>A seed to initialize the &lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt;. If None, then fresh, unpredictable entropy will be pulled from the OS. If an &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;array_like[ints]&lt;/code&gt; is passed, then it will be passed to &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; to derive the initial &lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt; state. One may also pass in a`SeedSequence` instance Additionally, when passed a &lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt;, it will be wrapped by &lt;a href=&quot;#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;. If passed a &lt;a href=&quot;#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;, it will be returned unaltered.</source>
          <target state="translated">&lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; &lt;/a&gt;を初期化するためのシード。 Noneの場合、新鮮で予測不可能なエントロピーがOSから取得されます。場合は &lt;code&gt;int&lt;/code&gt; 型または &lt;code&gt;array_like[ints]&lt;/code&gt; 渡され、に渡されます&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;初期導出する&lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; の&lt;/a&gt;状態を。一つも渡されたときに、さらにa`SeedSequence`インスタンスに渡すこと&lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; を&lt;/a&gt;、それがによってラップされます&lt;a href=&quot;#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;渡すと、変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="74fe8c2848b75659999487492c4dd90e9d32d176" translate="yes" xml:space="preserve">
          <source>A seed to initialize the &lt;a href=&quot;generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt;. If None, then fresh, unpredictable entropy will be pulled from the OS. If an &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;array_like[ints]&lt;/code&gt; is passed, then it will be passed to &lt;a href=&quot;generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; to derive the initial &lt;a href=&quot;generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt; state. One may also pass in a &lt;a href=&quot;generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; &lt;/a&gt;を初期化するためのシード。Noneの場合、新鮮で予測不可能なエントロピーがOSから取得されます。場合は &lt;code&gt;int&lt;/code&gt; 型または &lt;code&gt;array_like[ints]&lt;/code&gt; 渡され、に渡されます&lt;a href=&quot;generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;初期導出する&lt;a href=&quot;generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt; &lt;code&gt;BitGenerator&lt;/code&gt; の&lt;/a&gt;状態を。&lt;a href=&quot;generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;インスタンスを渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="1c822346cadbdc847b8cededc6c64abb2064a522" translate="yes" xml:space="preserve">
          <source>A seed to initialize the &lt;code&gt;BitGenerator&lt;/code&gt;. If None, then fresh, unpredictable entropy will be pulled from the OS. If an &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;array_like[ints]&lt;/code&gt; is passed, then it will be passed to &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; to derive the initial &lt;code&gt;BitGenerator&lt;/code&gt; state. One may also pass in an implementor of the &lt;code&gt;ISeedSequence&lt;/code&gt; interface like &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt;. Additionally, when passed a &lt;code&gt;BitGenerator&lt;/code&gt;, it will be wrapped by &lt;a href=&quot;#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;. If passed a &lt;a href=&quot;#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;, it will be returned unaltered.</source>
          <target state="translated">&lt;code&gt;BitGenerator&lt;/code&gt; を初期化するためのシード。 Noneの場合、新鮮で予測不可能なエントロピーがOSから取得されます。場合は &lt;code&gt;int&lt;/code&gt; 型または &lt;code&gt;array_like[ints]&lt;/code&gt; 渡され、に渡されます&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;初期導出する &lt;code&gt;BitGenerator&lt;/code&gt; の状態を。 &lt;code&gt;ISeedSequence&lt;/code&gt; ような&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;インターフェースのインプリメンターを渡すこともできます。さらに、 &lt;code&gt;BitGenerator&lt;/code&gt; を渡すと、&lt;a href=&quot;#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;によってラップされます。&lt;a href=&quot;#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; を&lt;/a&gt;渡すと、変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="297424ddec64c8c13c80221c2b5c2561d8b3dca1" translate="yes" xml:space="preserve">
          <source>A seed to initialize the &lt;code&gt;BitGenerator&lt;/code&gt;. If None, then fresh, unpredictable entropy will be pulled from the OS. If an &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;array_like[ints]&lt;/code&gt; is passed, then it will be passed to &lt;code&gt;SeedSequence&lt;/code&gt; to derive the initial &lt;code&gt;BitGenerator&lt;/code&gt; state. One may also pass in an implementor of the &lt;code&gt;ISeedSequence&lt;/code&gt; interface like &lt;code&gt;SeedSequence&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BitGenerator&lt;/code&gt; を初期化するためのシード。Noneの場合、新鮮で予測不可能なエントロピーがOSから取得されます。場合は &lt;code&gt;int&lt;/code&gt; 型または &lt;code&gt;array_like[ints]&lt;/code&gt; 渡され、に渡されます &lt;code&gt;SeedSequence&lt;/code&gt; 初期導出する &lt;code&gt;BitGenerator&lt;/code&gt; の状態を。 &lt;code&gt;ISeedSequence&lt;/code&gt; ような &lt;code&gt;SeedSequence&lt;/code&gt; インターフェースのインプリメンターを渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="57449a616b2733913d6c035b16ff8031a0c0309b" translate="yes" xml:space="preserve">
          <source>A segment of memory is inherently 1-dimensional, and there are many different schemes for arranging the items of an &lt;em&gt;N&lt;/em&gt;-dimensional array in a 1-dimensional block. NumPy is flexible, and &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; objects can accommodate any &lt;em&gt;strided indexing scheme&lt;/em&gt;. In a strided scheme, the N-dimensional index</source>
          <target state="translated">メモリのセグメントは本質的に1次元であり、1次元ブロックに&lt;em&gt;N&lt;/em&gt;次元配列の項目を配置するためのさまざまな方法があります。NumPyは柔軟性があり、&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;オブジェクトは&lt;em&gt;ストライドインデックススキームに&lt;/em&gt;対応できます。ストライドスキームでは、N次元インデックス</target>
        </trans-unit>
        <trans-unit id="88b71b624e002466d8dce52c6acba138c61b95ef" translate="yes" xml:space="preserve">
          <source>A sequence of arrays describing the monotonically increasing bin edges along each dimension.</source>
          <target state="translated">各次元に沿って単調に増加するビンエッジを記述する配列のシーケンス.</target>
        </trans-unit>
        <trans-unit id="bb659abce8099a5d28b1e3c93c69644abcc5c2a2" translate="yes" xml:space="preserve">
          <source>A sequence of length D, each an optional (lower, upper) tuple giving the outer bin edges to be used if the edges are not given explicitly in &lt;code&gt;bins&lt;/code&gt;. An entry of None in the sequence results in the minimum and maximum values being used for the corresponding dimension. The default, None, is equivalent to passing a tuple of D None values.</source>
          <target state="translated">エッジが明示的に与えられていない場合、長さDの配列は、それぞれ外側のビンのエッジを与える（上下）任意のタプルを使用する &lt;code&gt;bins&lt;/code&gt; 。シーケンスにNoneを入力すると、対応するディメンションに最小値と最大値が使用されます。デフォルトのNoneは、D None値のタプルを渡すことと同じです。</target>
        </trans-unit>
        <trans-unit id="81bbfb50533f2d3f2a4fd7fa0b51f48f0e734f02" translate="yes" xml:space="preserve">
          <source>A sequence of polynomial roots, or a square array or matrix object.</source>
          <target state="translated">多項式の根のシーケンス、または正方形の配列や行列オブジェクト。</target>
        </trans-unit>
        <trans-unit id="7b3926b650dc6329b849ef33b7f6184643cd8f01" translate="yes" xml:space="preserve">
          <source>A sequence that allows &amp;ldquo;walking&amp;rdquo; (iterating) over items, typically using a loop such as:</source>
          <target state="translated">通常、次のようなループを使用して、アイテム上を「歩く」（反復する）ことを可能にするシーケンス。</target>
        </trans-unit>
        <trans-unit id="8ce1aa80939c4940a07bf339eac2448c2647e279" translate="yes" xml:space="preserve">
          <source>A sequence that may contain a variable number of types of any kind. A tuple is immutable, i.e., once constructed it cannot be changed. Similar to a list, it can be indexed and sliced:</source>
          <target state="translated">任意の種類の型を可変数含むことができるシーケンス。タプルは不変です。つまり、一度構築されたものは変更できません。リストと同様に、インデックスを付けたり、スライスしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="75ceb930ec244dcfda247cc2f0b11b4fd68f2536" translate="yes" xml:space="preserve">
          <source>A series of the same kind as the calling class and equal to &lt;code&gt;series&lt;/code&gt; when evaluated.</source>
          <target state="translated">呼び出しクラスと同じ種類の &lt;code&gt;series&lt;/code&gt; 、評価時にシリーズと等しい。</target>
        </trans-unit>
        <trans-unit id="5057709f0bb39c2821cc05f21d054a694afcfad5" translate="yes" xml:space="preserve">
          <source>A series that represents the least squares fit to the data and has the domain and window specified in the call. If the coefficients for the unscaled and unshifted basis polynomials are of interest, do &lt;code&gt;new_series.convert().coef&lt;/code&gt;.</source>
          <target state="translated">データに適合する最小二乗を表し、ドメインとウィンドウが呼び出しで指定されている系列。スケールなしおよびシフトなしの基底多項式の係数が重要な場合は、 &lt;code&gt;new_series.convert().coef&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="1310a301fbe7183e2ce95e09f01f8a3d3a00c649" translate="yes" xml:space="preserve">
          <source>A series with the coefficient of the &lt;code&gt;deg&lt;/code&gt; term set to one and all others zero.</source>
          <target state="translated">&lt;code&gt;deg&lt;/code&gt; 項の係数が1に設定され、その他の係数がすべてゼロの系列。</target>
        </trans-unit>
        <trans-unit id="34501fdb58052d0c2fa5b147e753287dfd92f3af" translate="yes" xml:space="preserve">
          <source>A set of arrays is called &amp;ldquo;broadcastable&amp;rdquo; to the same shape if the above rules produce a valid result, &lt;em&gt;i.e.&lt;/em&gt;, one of the following is true:</source>
          <target state="translated">上記のルールが有効な結果を生成する場合、&lt;em&gt;つまり&lt;/em&gt;次のいずれかに該当する場合、配列のセットは同じ形状に「ブロードキャスト可能」と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="0fd60c6042a9c4728d8686f9ccb469161417ae1d" translate="yes" xml:space="preserve">
          <source>A set of ndarrays (or a single ndarray if there is only one dimension) corresponding to the derivatives of f with respect to each dimension. Each derivative has the same shape as f.</source>
          <target state="translated">各次元に関するfの導関数に対応するndarrayの集合(1次元しかない場合は1つのndarray).各導関数は f と同じ形をしています.</target>
        </trans-unit>
        <trans-unit id="94c527df312fef559bad352556ab86e1b52514f7" translate="yes" xml:space="preserve">
          <source>A seven-element array indicating which of Monday through Sunday are valid days. May be specified as a length-seven list or array, like [1,1,1,1,1,0,0]; a length-seven string, like &amp;lsquo;1111100&amp;rsquo;; or a string like &amp;ldquo;Mon Tue Wed Thu Fri&amp;rdquo;, made up of 3-character abbreviations for weekdays, optionally separated by white space. Valid abbreviations are: Mon Tue Wed Thu Fri Sat Sun</source>
          <target state="translated">月曜日から日曜日までが有効な日を示す7要素の配列。[1,1,1,1,1,0,0]のように、長さ7のリストまたは配列として指定できます。「1111100」のような長さ7の文字列。または「Mon Tue Wed Thu Fri」のような文字列。平日の3文字の省略形で構成され、オプションで空白で区切られます。有効な略語は次のとおりです。MonTue Wed Thu Fri Sat Sun</target>
        </trans-unit>
        <trans-unit id="04f42a27c9190ebe7cb7727c84f9c866b89f7f82" translate="yes" xml:space="preserve">
          <source>A shared library must be compiled in a special way ( &lt;em&gt;e.g.&lt;/em&gt; using the &lt;code&gt;-shared&lt;/code&gt; flag with gcc).</source>
          <target state="translated">共有ライブラリは、特別な方法でコンパイルする必要があります（&lt;em&gt;たとえば&lt;/em&gt;、gccで &lt;code&gt;-shared&lt;/code&gt; フラグを使用します）。</target>
        </trans-unit>
        <trans-unit id="c7b5c5f4e4e338a83df129a84a05152158bc31fb" translate="yes" xml:space="preserve">
          <source>A short (typically single-character) string that represents a data type in numpy and corresponds to &lt;code&gt;self.typeStr&lt;/code&gt;. For example, if &lt;code&gt;self.typeStr&lt;/code&gt; is &lt;code&gt;&quot;double&quot;&lt;/code&gt;, then &lt;code&gt;self.typeCode&lt;/code&gt; should be &lt;code&gt;&quot;d&quot;&lt;/code&gt;.</source>
          <target state="translated">numpyでデータ型を表し、 &lt;code&gt;self.typeStr&lt;/code&gt; に対応する短い（通常は1文字の）文字列。たとえば、 &lt;code&gt;self.typeStr&lt;/code&gt; が &lt;code&gt;&quot;double&quot;&lt;/code&gt; の場合、 &lt;code&gt;self.typeCode&lt;/code&gt; は &lt;code&gt;&quot;d&quot;&lt;/code&gt; にする必要があります。</target>
        </trans-unit>
        <trans-unit id="e55a234c7e08a3a8270c585bca1826465f16b1d3" translate="yes" xml:space="preserve">
          <source>A short repeat rule looks like &amp;lt;item1, item2, item3, &amp;hellip;, itemN&amp;gt;. The rule specifies that the entire expression, &amp;lsquo;&amp;lt;&amp;hellip;&amp;gt;&amp;rsquo; should be replaced first with item1, and then with item2, and so forth until N repeats are accomplished.</source>
          <target state="translated">短い繰り返しルールは、&amp;lt;item1、item2、item3、&amp;hellip;、itemN&amp;gt;のようになります。このルールでは、式全体が&amp;lt;&amp;lt; &amp;gt;&amp;gt;である場合は最初にitem1で置き換え、次にitem2で置き換えるなど、N回の繰り返しが完了するまで繰り返します。</target>
        </trans-unit>
        <trans-unit id="bdb221c54cae8ae542f146eae648a4dc67ac0bda" translate="yes" xml:space="preserve">
          <source>A short-hand notation for specifying the format of a structured data type is a comma-separated string of basic formats.</source>
          <target state="translated">構造化データ型のフォーマットを指定するためのショートハンド記法は、基本的なフォーマットをカンマで区切った文字列です。</target>
        </trans-unit>
        <trans-unit id="c658116a39377ba61c456f244fe2e0949f79cce1" translate="yes" xml:space="preserve">
          <source>A side-effect of transforming a masked array into a flexible &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; is that meta information (&lt;code&gt;fill_value&lt;/code&gt;, &amp;hellip;) will be lost.</source>
          <target state="translated">マスクされた配列を柔軟な&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;に変換することの副作用は、メタ情報（ &lt;code&gt;fill_value&lt;/code&gt; 、&amp;hellip;）が失われることです。</target>
        </trans-unit>
        <trans-unit id="ee1ddd23d8920cdacf644ae54f8c0e534ba570de" translate="yes" xml:space="preserve">
          <source>A side-effect of transforming a masked array into a flexible &lt;code&gt;ndarray&lt;/code&gt; is that meta information (&lt;code&gt;fill_value&lt;/code&gt;, &amp;hellip;) will be lost.</source>
          <target state="translated">マスクされた配列を柔軟な &lt;code&gt;ndarray&lt;/code&gt; に変換することの副作用は、メタ情報（ &lt;code&gt;fill_value&lt;/code&gt; 、&amp;hellip;）が失われることです。</target>
        </trans-unit>
        <trans-unit id="3ef5bd6e53370c679df60531a5915557eff674e0" translate="yes" xml:space="preserve">
          <source>A signal value guaranteed not to be a valid type enumeration number.</source>
          <target state="translated">有効な型の列挙番号ではないことが保証された信号値です。</target>
        </trans-unit>
        <trans-unit id="af2da0019a4fa9624d414aa98e9319fd7256e862" translate="yes" xml:space="preserve">
          <source>A signature file may contain one (recommended) or more &lt;code&gt;python
module&lt;/code&gt; blocks. &lt;code&gt;python module&lt;/code&gt; block describes the contents of a Python/C extension module &lt;code&gt;&amp;lt;modulename&amp;gt;module.c&lt;/code&gt; that F2PY generates.</source>
          <target state="translated">署名ファイルには、1つ（推奨）または複数の &lt;code&gt;python module&lt;/code&gt; ブロックが含まれる場合があります。 &lt;code&gt;python module&lt;/code&gt; ブロックは、F2PYが生成するPython / C拡張モジュール &lt;code&gt;&amp;lt;modulename&amp;gt;module.c&lt;/code&gt; の内容を記述します。</target>
        </trans-unit>
        <trans-unit id="f824cc83e3f63719d08123a34f5bfe79a99c6a77" translate="yes" xml:space="preserve">
          <source>A signature is a string describing the input/output dimensions of the elementary function of a ufunc. See section below for more details.</source>
          <target state="translated">シグネチャとは、ufuncの素関数の入出力次元を記述した文字列である。詳細は以下のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="6aaac34b68cf1a23deeac4050af33db08c374dea" translate="yes" xml:space="preserve">
          <source>A similar approach to in-place builds and use of &lt;code&gt;PYTHONPATH&lt;/code&gt; but outside the source tree is to use:</source>
          <target state="translated">インプレースビルドと &lt;code&gt;PYTHONPATH&lt;/code&gt; の使用に対する同様のアプローチですが、ソースツリーの外部で使用することです。</target>
        </trans-unit>
        <trans-unit id="48c83eae43f6ab6ce5f1574a2b3173c9326b00ba" translate="yes" xml:space="preserve">
          <source>A simple ISO date:</source>
          <target state="translated">シンプルなISOデート。</target>
        </trans-unit>
        <trans-unit id="3270422976ada43b0732fb69a269e6a3c42669d9" translate="yes" xml:space="preserve">
          <source>A simple check for &lt;code&gt;xp&lt;/code&gt; being strictly increasing is:</source>
          <target state="translated">&lt;code&gt;xp&lt;/code&gt; が厳密に増加していることの簡単なチェックは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2087f59f2fa38fce8e5fd9aad38ee596ccc3d8af" translate="yes" xml:space="preserve">
          <source>A simple data type containing a 32-bit big-endian integer: (see &lt;a href=&quot;#arrays-dtypes-constructing&quot;&gt;Specifying and constructing data types&lt;/a&gt; for details on construction)</source>
          <target state="translated">32ビットのビッグエンディアン整数を含む単純なデータ型：（&lt;a href=&quot;#arrays-dtypes-constructing&quot;&gt;構築の&lt;/a&gt;詳細については、データ型の指定と構築を参照）</target>
        </trans-unit>
        <trans-unit id="593a67c8ad8a28c370a51733b480fae1403014ec" translate="yes" xml:space="preserve">
          <source>A simple format for saving numpy arrays to disk with the full information about them.</source>
          <target state="translated">numpy配列の完全な情報をディスクに保存するためのシンプルなフォーマットです。</target>
        </trans-unit>
        <trans-unit id="4f69e9156919fa85d7fc17fd8515b50ec215be89" translate="yes" xml:space="preserve">
          <source>A simple interface to the IEEE error-flag checking support. The &lt;em&gt;errmask&lt;/em&gt; argument is a mask of &lt;code&gt;UFUNC_MASK_{ERR}&lt;/code&gt; bitmasks indicating which errors to check for (and how to check for them). The &lt;em&gt;errobj&lt;/em&gt; must be a Python tuple with two elements: a string containing the name which will be used in any communication of error and either a callable Python object (call-back function) or &lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt;&lt;code&gt;Py_None&lt;/code&gt;&lt;/a&gt;. The callable object will only be used if &lt;a href=&quot;#c.UFUNC_ERR_CALL&quot;&gt;&lt;code&gt;UFUNC_ERR_CALL&lt;/code&gt;&lt;/a&gt; is set as the desired error checking method. This routine manages the GIL and is safe to call even after releasing the GIL. If an error in the IEEE-compatible hardware is determined a -1 is returned, otherwise a 0 is returned.</source>
          <target state="translated">IEEEエラーフラグチェックサポートへのシンプルなインターフェイス。&lt;em&gt;errmaskの&lt;/em&gt;引数は、マスクで &lt;code&gt;UFUNC_MASK_{ERR}&lt;/code&gt; をチェックするためにどのエラー（及びそれらを確認する方法）を示すビットマスク。&lt;em&gt;errobjは、&lt;/em&gt;エラーの任意の通信に使用される名前のいずれか呼び出し可能なPythonオブジェクト（コールバック関数）又は含む文字列：2つの要素を持つPythonのタプルでなければならない&lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt; &lt;code&gt;Py_None&lt;/code&gt; を&lt;/a&gt;。呼び出し可能オブジェクトは、&lt;a href=&quot;#c.UFUNC_ERR_CALL&quot;&gt; &lt;code&gt;UFUNC_ERR_CALL&lt;/code&gt; &lt;/a&gt;が目的のエラーチェックメソッドとして設定されている場合にのみ使用されます。このルーチンはGILを管理し、GILを解放した後でも安全に呼び出すことができます。 IEEE互換ハードウェアのエラーが判別された場合は-1が返され、そうでない場合は0が返されます。</target>
        </trans-unit>
        <trans-unit id="29f34710a7684ff79fd871bcf98300fc810e986e" translate="yes" xml:space="preserve">
          <source>A simple interface to the IEEE error-flag checking support. The &lt;em&gt;errmask&lt;/em&gt; argument is a mask of &lt;code&gt;UFUNC_MASK_{ERR}&lt;/code&gt; bitmasks indicating which errors to check for (and how to check for them). The &lt;em&gt;errobj&lt;/em&gt; must be a Python tuple with two elements: a string containing the name which will be used in any communication of error and either a callable Python object (call-back function) or &lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt;&lt;code&gt;Py_None&lt;/code&gt;&lt;/a&gt;. The callable object will only be used if &lt;code&gt;UFUNC_ERR_CALL&lt;/code&gt; is set as the desired error checking method. This routine manages the GIL and is safe to call even after releasing the GIL. If an error in the IEEE-compatible hardware is determined a -1 is returned, otherwise a 0 is returned.</source>
          <target state="translated">IEEEエラーフラグチェックサポートへのシンプルなインターフェイス。&lt;em&gt;errmaskの&lt;/em&gt;引数は、マスクで &lt;code&gt;UFUNC_MASK_{ERR}&lt;/code&gt; をチェックするためにどのエラー（及びそれらを確認する方法）を示すビットマスク。&lt;em&gt;errobjは、&lt;/em&gt;エラーの任意の通信に使用される名前のいずれか呼び出し可能なPythonオブジェクト（コールバック関数）又は含む文字列：2つの要素を持つPythonのタプルでなければならない&lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt; &lt;code&gt;Py_None&lt;/code&gt; を&lt;/a&gt;。呼び出し可能なオブジェクトは、 &lt;code&gt;UFUNC_ERR_CALL&lt;/code&gt; が目的のエラーチェックメソッドとして設定されている場合にのみ使用されます。このルーチンはGILを管理し、GILを解放した後でも安全に呼び出すことができます。 IEEE互換ハードウェアのエラーが判別された場合は-1が返され、それ以外の場合は0が返されます。</target>
        </trans-unit>
        <trans-unit id="16f651ca7550d656d6c3f3ed82c4b589e375b548" translate="yes" xml:space="preserve">
          <source>A simple linked-list of C-structures containing the information needed to define a 1-d loop for a ufunc for every defined signature of a user-defined data-type.</source>
          <target state="translated">ユーザ定義のデータ型の定義されたシグネチャに対して、 ufuncの1-dループを定義するのに必要な情報を含む、C構造体の単純なリンクリストです。</target>
        </trans-unit>
        <trans-unit id="bee5d4bece8f223e1b2634c3eec8ea6c05d6636a" translate="yes" xml:space="preserve">
          <source>A simple module that only uses a single &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file should include the following:</source>
          <target state="translated">単一の&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;インターフェースファイルのみを使用する単純なモジュールには、以下を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="798db1bda5ff8b2af8f459281232c0cefd1e3ab9" translate="yes" xml:space="preserve">
          <source>A simple, but robust way to load the shared library is to get the absolute path name and load it using the cdll object of ctypes:</source>
          <target state="translated">共有ライブラリをロードするためのシンプルで堅牢な方法は、絶対パス名を取得して、ctypesのcdllオブジェクトを使用してロードすることです。</target>
        </trans-unit>
        <trans-unit id="09d93ce0346cd0a5029dbb7dc011a271c7317bfe" translate="yes" xml:space="preserve">
          <source>A simplified interface to broadcasting. This function takes the number of arrays to broadcast and then &lt;em&gt;num&lt;/em&gt; extra ( &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; ) arguments. These arguments are converted to arrays and iterators are created. &lt;a href=&quot;#c.PyArray_Broadcast&quot;&gt;&lt;code&gt;PyArray_Broadcast&lt;/code&gt;&lt;/a&gt; is then called on the resulting multi-iterator object. The resulting, broadcasted mult-iterator object is then returned. A broadcasted operation can then be performed using a single loop and using &lt;a href=&quot;#c.PyArray_MultiIter_NEXT&quot;&gt;&lt;code&gt;PyArray_MultiIter_NEXT&lt;/code&gt;&lt;/a&gt; (..)</source>
          <target state="translated">ブロードキャストへのシンプルなインターフェース。この機能は、ブロードキャストに配列の数を取り、その後、&lt;em&gt;NUM&lt;/em&gt;エクストラ（&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;）の引数。これらの引数は配列に変換され、反復子が作成されます。&lt;a href=&quot;#c.PyArray_Broadcast&quot;&gt; &lt;code&gt;PyArray_Broadcast&lt;/code&gt; &lt;/a&gt;は、結果のマルチイテレータオブジェクトで呼び出されます。その結果、ブロードキャストされたマルチイテレーターオブジェクトが返されます。ブロードキャストされた操作は、単一のループと&lt;a href=&quot;#c.PyArray_MultiIter_NEXT&quot;&gt; &lt;code&gt;PyArray_MultiIter_NEXT&lt;/code&gt; &lt;/a&gt;（..）を使用して実行できます。</target>
        </trans-unit>
        <trans-unit id="28984f56b20efb716a65187c5ff200fdda38c42b" translate="yes" xml:space="preserve">
          <source>A single axis over which a generalized ufunc should operate. This is a short-cut for ufuncs that operate over a single, shared core dimension, equivalent to passing in &lt;code&gt;axes&lt;/code&gt; with entries of &lt;code&gt;(axis,)&lt;/code&gt; for each single-core-dimension argument and &lt;code&gt;()&lt;/code&gt; for all others. For instance, for a signature &lt;code&gt;(i),(i)-&amp;gt;()&lt;/code&gt;, it is equivalent to passing in &lt;code&gt;axes=[(axis,), (axis,), ()]&lt;/code&gt;.</source>
          <target state="translated">一般化されたufuncが動作する単一の軸。これは、単一の共有コアディメンションで動作するufuncsのショートカットです。各シングルコアディメンションの引数には &lt;code&gt;(axis,)&lt;/code&gt; 、その他のすべての引数には &lt;code&gt;()&lt;/code&gt; のエントリを持つ &lt;code&gt;axes&lt;/code&gt; を渡すのと同じです。たとえば、署名 &lt;code&gt;(i),(i)-&amp;gt;()&lt;/code&gt; 場合、 &lt;code&gt;axes=[(axis,), (axis,), ()]&lt;/code&gt; を渡すのと同じです。</target>
        </trans-unit>
        <trans-unit id="7ecd974678a25bce6d0bb21975fdb524aa51f881" translate="yes" xml:space="preserve">
          <source>A single format (%10.5f), a sequence of formats, or a multi-format string, e.g. &amp;lsquo;Iteration %d &amp;ndash; %10.5f&amp;rsquo;, in which case &lt;code&gt;delimiter&lt;/code&gt; is ignored. For complex &lt;code&gt;X&lt;/code&gt;, the legal options for &lt;code&gt;fmt&lt;/code&gt; are:</source>
          <target state="translated">単一フォーマット（％10.5f）、フォーマットのシーケンス、またはマルチフォーマット文字列（例： 'Iteration％d &amp;ndash;％10.5f'）。この場合、 &lt;code&gt;delimiter&lt;/code&gt; は無視されます。複雑な &lt;code&gt;X&lt;/code&gt; の場合、 &lt;code&gt;fmt&lt;/code&gt; の有効なオプションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2f72626ebddb5f9ee710e36e21cf37f297c4305c" translate="yes" xml:space="preserve">
          <source>A sorted sequence of &lt;code&gt;slice&lt;/code&gt; objects (start index, end index).</source>
          <target state="translated">ソートされた &lt;code&gt;slice&lt;/code&gt; オブジェクトのシーケンス（開始インデックス、終了インデックス）。</target>
        </trans-unit>
        <trans-unit id="f59026a2e0815a0ce41083ddb7ee186606c6d091" translate="yes" xml:space="preserve">
          <source>A special case of the hyperbolic distribution. As &lt;code&gt;df&lt;/code&gt; gets large, the result resembles that of the standard normal distribution (&lt;a href=&quot;numpy.random.generator.standard_normal#numpy.random.Generator.standard_normal&quot;&gt;&lt;code&gt;standard_normal&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">双曲線分布の特殊なケース。 &lt;code&gt;df&lt;/code&gt; 標準正規分布（のこと大、結果似ているを取得&lt;a href=&quot;numpy.random.generator.standard_normal#numpy.random.Generator.standard_normal&quot;&gt; &lt;code&gt;standard_normal&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ecc24fea5b7eed9eceb13972942907ac09867998" translate="yes" xml:space="preserve">
          <source>A special case of the hyperbolic distribution. As &lt;code&gt;df&lt;/code&gt; gets large, the result resembles that of the standard normal distribution (&lt;a href=&quot;numpy.random.mtrand.randomstate.standard_normal#numpy.random.mtrand.RandomState.standard_normal&quot;&gt;&lt;code&gt;standard_normal&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">双曲線分布の特殊なケース。 &lt;code&gt;df&lt;/code&gt; 標準正規分布（のこと大、結果似ているを取得&lt;a href=&quot;numpy.random.mtrand.randomstate.standard_normal#numpy.random.mtrand.RandomState.standard_normal&quot;&gt; &lt;code&gt;standard_normal&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="adb25a3e6adf460924879166919cae43eab2ceab" translate="yes" xml:space="preserve">
          <source>A special case of the hyperbolic distribution. As &lt;code&gt;df&lt;/code&gt; gets large, the result resembles that of the standard normal distribution (&lt;a href=&quot;numpy.random.randomstate.standard_normal#numpy.random.RandomState.standard_normal&quot;&gt;&lt;code&gt;standard_normal&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">双曲線分布の特殊なケース。 &lt;code&gt;df&lt;/code&gt; 標準正規分布（のこと大、結果似ているを取得&lt;a href=&quot;numpy.random.randomstate.standard_normal#numpy.random.RandomState.standard_normal&quot;&gt; &lt;code&gt;standard_normal&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d9de1f750180b9a34d0a98ccb2914b9631953427" translate="yes" xml:space="preserve">
          <source>A special case of the hyperbolic distribution. As &lt;code&gt;df&lt;/code&gt; gets large, the result resembles that of the standard normal distribution (&lt;a href=&quot;numpy.random.standard_normal#numpy.random.standard_normal&quot;&gt;&lt;code&gt;standard_normal&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">双曲線分布の特殊なケース。 &lt;code&gt;df&lt;/code&gt; 標準正規分布（のこと大、結果似ているを取得&lt;a href=&quot;numpy.random.standard_normal#numpy.random.standard_normal&quot;&gt; &lt;code&gt;standard_normal&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="63e6ec7e623d9c397e9c59873fafb24c4baac24c" translate="yes" xml:space="preserve">
          <source>A special variable type indicating the number of &amp;ldquo;kinds&amp;rdquo; of scalars distinguished in determining scalar-coercion rules. This variable can take on the values &lt;code&gt;NPY_{KIND}&lt;/code&gt; where &lt;code&gt;{KIND}&lt;/code&gt; can be</source>
          <target state="translated">スカラー強制ルールの決定で区別されるスカラーの「種類」の数を示す特別な変数タイプ。この変数は、値 &lt;code&gt;NPY_{KIND}&lt;/code&gt; を取ることができます。ここで、 &lt;code&gt;{KIND}&lt;/code&gt; は、</target>
        </trans-unit>
        <trans-unit id="31bc091e887cfbbf0b45915994a2a358fbabb766" translate="yes" xml:space="preserve">
          <source>A special variable type indicating the number of &amp;ldquo;kinds&amp;rdquo; of scalars distinguished in determining scalar-coercion rules. This variable can take on the values:</source>
          <target state="translated">スカラー強制ルールを決定する際に区別されるスカラーの「種類」の数を示す特別な変数タイプ。この変数は次の値を取ることができます。</target>
        </trans-unit>
        <trans-unit id="047858130fa77a0a317e3a07b641429a62806764" translate="yes" xml:space="preserve">
          <source>A special variable-type which can take on different values to indicate the sorting algorithm being used.</source>
          <target state="translated">使用されているソートアルゴリズムを示すために異なる値を取ることができる特別な変数型。</target>
        </trans-unit>
        <trans-unit id="00866a4cd9f695363bff3007afb5f20a623db3b3" translate="yes" xml:space="preserve">
          <source>A special variable-type which can take on the values &lt;code&gt;NPY_{KIND}&lt;/code&gt; where &lt;code&gt;{KIND}&lt;/code&gt; is</source>
          <target state="translated">値 &lt;code&gt;NPY_{KIND}&lt;/code&gt; を取ることができる特別な変数タイプ。ここで &lt;code&gt;{KIND}&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="b7a5231cd4b10f823ce716dfaa60723246dd2c6d" translate="yes" xml:space="preserve">
          <source>A specialized copy and transpose function that works only for 2-d arrays. The returned array is a transposed copy of &lt;em&gt;op&lt;/em&gt;.</source>
          <target state="translated">2次元配列でのみ機能する特殊なコピーおよび転置関数。返される配列は、&lt;em&gt;opの&lt;/em&gt;転置されたコピーです。</target>
        </trans-unit>
        <trans-unit id="4b435ecc470e2597bc4d02d178d56713edd8c94b" translate="yes" xml:space="preserve">
          <source>A stranger has asked for directions&amp;hellip;</source>
          <target state="translated">見知らぬ人が道順を尋ねてきました&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="af2a950c790793615bfa85ddce287d3e3450b1e9" translate="yes" xml:space="preserve">
          <source>A string can have arbitrary length when using it as a string argument to F2PY generated wrapper function. If the length is greater than expected, the string is truncated. If the length is smaller than expected, additional memory is allocated and filled with &lt;code&gt;\0&lt;/code&gt;.</source>
          <target state="translated">文字列は、F2PYで生成されたラッパー関数の文字列引数として使用する場合、任意の長さにすることができます。長さが予想よりも大きい場合、文字列は切り捨てられます。長さが予想よりも短い場合、追加のメモリが割り当てられ、 &lt;code&gt;\0&lt;/code&gt; 埋められます。</target>
        </trans-unit>
        <trans-unit id="2497d67c71a8181efddc5d06ff6a25c2a2fb4d55" translate="yes" xml:space="preserve">
          <source>A string can have arbitrary length when using it as a string argument to F2PY generated wrapper function. If the length is greater than expected, the string is truncated. If the length is smaller that expected, additional memory is allocated and filled with &lt;code&gt;\0&lt;/code&gt;.</source>
          <target state="translated">文字列は、F2PYで生成されたラッパー関数の文字列引数として使用する場合、任意の長さにすることができます。長さが予想よりも大きい場合、文字列は切り捨てられます。長さが予想よりも短い場合、追加のメモリが割り当てられ、 &lt;code&gt;\0&lt;/code&gt; 埋められます。</target>
        </trans-unit>
        <trans-unit id="774ff5fbcb64cd63fcb41a3daa1076f5946c7ae1" translate="yes" xml:space="preserve">
          <source>A string combining invalid characters that must be deleted from the names.</source>
          <target state="translated">名前から削除する必要がある無効な文字を組み合わせた文字列。</target>
        </trans-unit>
        <trans-unit id="20a384e3c2e6a14cf6c36ba5a2e36844384b8f3f" translate="yes" xml:space="preserve">
          <source>A string containing the data.</source>
          <target state="translated">データを含む文字列。</target>
        </trans-unit>
        <trans-unit id="d92fb30e44bde7fa02db5d823fe26a99afa2efe0" translate="yes" xml:space="preserve">
          <source>A string integer specifies which axis to stack multiple comma separated arrays along. A string of two comma-separated integers allows indication of the minimum number of dimensions to force each entry into as the second integer (the axis to concatenate along is still the first integer).</source>
          <target state="translated">文字列整数は、カンマで区切られた複数の配列をどの軸に沿って積み重ねるかを指定します。カンマで区切られた2つの整数の文字列では、各エントリを2番目の整数として強制的に入れる次元の最小数を指定することができます(連結する軸は1番目の整数のままです)。</target>
        </trans-unit>
        <trans-unit id="a641af276b72e55102c42cfb585abb388eea7dfe" translate="yes" xml:space="preserve">
          <source>A string name for the ufunc. This is used dynamically to build the __doc__ attribute of ufuncs.</source>
          <target state="translated">ufuncの文字列名。これは ufuncs の __doc__属性を構築するために動的に使用されます。</target>
        </trans-unit>
        <trans-unit id="114cd592cdf4bef478ab0fc63ad99238e2d8ce95" translate="yes" xml:space="preserve">
          <source>A string naming the dump file.</source>
          <target state="translated">ダンプファイルを指定する文字列。</target>
        </trans-unit>
        <trans-unit id="df0f86d5ebf300964e3704370aa82f07970d9a8e" translate="yes" xml:space="preserve">
          <source>A string of comma-separated dtype specifications</source>
          <target state="translated">コンマで区切られたdtype指定の文字列</target>
        </trans-unit>
        <trans-unit id="7deb712c363da06697a0abbace6d83471ea4cf08" translate="yes" xml:space="preserve">
          <source>A string or a sequence of strings corresponding to the fields used for comparison.</source>
          <target state="translated">比較に使用されるフィールドに対応する文字列または文字列の列列。</target>
        </trans-unit>
        <trans-unit id="292579b654816d2d1cb9494934238580c48fc2c0" translate="yes" xml:space="preserve">
          <source>A string providing a name associated with this portion of the datatype. This could also be a tuple of &lt;code&gt;('full name',
'basic_name')&lt;/code&gt; where basic name would be a valid Python variable name representing the full name of the field.</source>
          <target state="translated">データ型のこの部分に関連付けられた名前を提供する文字列。これは、 &lt;code&gt;('full name', 'basic_name')&lt;/code&gt; タプルにすることもできます。基本名は、フィールドのフルネームを表す有効なPython変数名です。</target>
        </trans-unit>
        <trans-unit id="ef1826a04b54488c8c0f9650ea8e241ad78ca5bf" translate="yes" xml:space="preserve">
          <source>A string providing the basic type of the homogeneous array The basic string format consists of 3 parts: a character describing the byteorder of the data (&lt;code&gt;&amp;lt;&lt;/code&gt;: little-endian, &lt;code&gt;&amp;gt;&lt;/code&gt;: big-endian, &lt;code&gt;|&lt;/code&gt;: not-relevant), a character code giving the basic type of the array, and an integer providing the number of bytes the type uses.</source>
          <target state="translated">同種配列の基本型を提供する文字列基本文字列形式は、データのバイト順序を説明する文字（ &lt;code&gt;&amp;lt;&lt;/code&gt; ：リトルエンディアン、 &lt;code&gt;&amp;gt;&lt;/code&gt; ：ビッグエンディアン、 &lt;code&gt;|&lt;/code&gt; ：関連なし）、文字コードの3つの部分で構成されます。配列の基本型と、型が使用するバイト数を提供する整数を指定します。</target>
        </trans-unit>
        <trans-unit id="619f5c1475ced21cf4fa25f8cd5302b1602c1052" translate="yes" xml:space="preserve">
          <source>A string providing the basic type of the homogenous array The basic string format consists of 3 parts: a character describing the byteorder of the data (&lt;code&gt;&amp;lt;&lt;/code&gt;: little-endian, &lt;code&gt;&amp;gt;&lt;/code&gt;: big-endian, &lt;code&gt;|&lt;/code&gt;: not-relevant), a character code giving the basic type of the array, and an integer providing the number of bytes the type uses.</source>
          <target state="translated">同種配列の基本タイプを提供する文字列基本文字列フォーマットは、3つの部分で構成されます。データのバイトオーダーを説明する文字（ &lt;code&gt;&amp;lt;&lt;/code&gt; ：リトルエンディアン、 &lt;code&gt;&amp;gt;&lt;/code&gt; ：ビッグエンディアン、 &lt;code&gt;|&lt;/code&gt; ：非関連）、文字コード配列の基本型、および型が使用するバイト数を提供する整数。</target>
        </trans-unit>
        <trans-unit id="a90aac579586e4ebd136c30a26daae199bbf4715" translate="yes" xml:space="preserve">
          <source>A string that matches one of the &lt;code&gt;SNAME&lt;/code&gt; prefixes used in &lt;code&gt;Vector.h&lt;/code&gt; and &lt;code&gt;Vector.cxx&lt;/code&gt;. For example, &lt;code&gt;&quot;double&quot;&lt;/code&gt;.</source>
          <target state="translated">いずれかに一致する文字列 &lt;code&gt;SNAME&lt;/code&gt; のに使用される接頭辞 &lt;code&gt;Vector.h&lt;/code&gt; と &lt;code&gt;Vector.cxx&lt;/code&gt; を。たとえば、 &lt;code&gt;&quot;double&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="11a21b6388a76d32ee94fe75187d475e1e9a31be" translate="yes" xml:space="preserve">
          <source>A string with &amp;lsquo;f&amp;rsquo; representing trim from front and &amp;lsquo;b&amp;rsquo; to trim from back. Default is &amp;lsquo;fb&amp;rsquo;, trim zeros from both front and back of the array.</source>
          <target state="translated">「f」が前からのトリミングを表し、「b」が後ろからのトリミングを表す文字列。デフォルトは「fb」で、配列の前面と背面の両方からゼロをトリムします。</target>
        </trans-unit>
        <trans-unit id="9f5fc7d583671fa3d14d3cf2a8c5d45637921d25" translate="yes" xml:space="preserve">
          <source>A string with three comma-separated integers allows specification of the axis to concatenate along, the minimum number of dimensions to force the entries to, and which axis should contain the start of the arrays which are less than the specified number of dimensions. In other words the third integer allows you to specify where the 1&amp;rsquo;s should be placed in the shape of the arrays that have their shapes upgraded. By default, they are placed in the front of the shape tuple. The third argument allows you to specify where the start of the array should be instead. Thus, a third argument of &amp;lsquo;0&amp;rsquo; would place the 1&amp;rsquo;s at the end of the array shape. Negative integers specify where in the new shape tuple the last dimension of upgraded arrays should be placed, so the default is &amp;lsquo;-1&amp;rsquo;.</source>
          <target state="translated">3つのコンマ区切りの整数を含む文字列を使用すると、軸を指定して連結することができ、エントリを強制する最小次元数と、指定した次元数より少ない配列の開始を含む軸を指定できます。言い換えると、3番目の整数では、形状がアップグレードされた配列の形状の1を配置する場所を指定できます。デフォルトでは、それらは形状タプルの前に配置されます。 3番目の引数では、代わりに配列の開始位置を指定できます。したがって、3番目の引数「0」は、1を配列形状の最後に配置します。負の整数は、新しい形状タプルのどこにアップグレードされた配列の最後の次元を配置するかを指定するため、デフォルトは「-1」です。</target>
        </trans-unit>
        <trans-unit id="e6d2ae7b6da7c3e66b0ffab924afae035a474e84" translate="yes" xml:space="preserve">
          <source>A structured data type containing a 16-character string (in field &amp;lsquo;name&amp;rsquo;) and a sub-array of two 64-bit floating-point number (in field &amp;lsquo;grades&amp;rsquo;):</source>
          <target state="translated">16文字の文字列（フィールド 'name'内）と2つの64ビット浮動小数点数（フィールド 'grades'内）のサブ配列を含む構造化データタイプ：</target>
        </trans-unit>
        <trans-unit id="b512bc16c5dc1ece05fb571662540e6eab13385b" translate="yes" xml:space="preserve">
          <source>A structured datatype can be thought of as a sequence of bytes of a certain length (the structure&amp;rsquo;s &lt;a href=&quot;../glossary#term-itemsize&quot;&gt;itemsize&lt;/a&gt;) which is interpreted as a collection of fields. Each field has a name, a datatype, and a byte offset within the structure. The datatype of a field may be any numpy datatype including other structured datatypes, and it may also be a &lt;a href=&quot;../glossary#term-subarray-data-type&quot;&gt;subarray data type&lt;/a&gt; which behaves like an ndarray of a specified shape. The offsets of the fields are arbitrary, and fields may even overlap. These offsets are usually determined automatically by numpy, but can also be specified.</source>
          <target state="translated">構造化データ型は、フィールドのコレクションとして解釈される特定の長さのバイトのシーケンス（構造の&lt;a href=&quot;../glossary#term-itemsize&quot;&gt;itemsize&lt;/a&gt;）と考えることができます。各フィールドには、構造内に名前、データ型、およびバイトオフセットがあります。フィールドのデータ型は、他の構造化データ型を含む任意のnumpyデータ型である場合があり、指定された形状のndarrayのように動作するサブ&lt;a href=&quot;../glossary#term-subarray-data-type&quot;&gt;配列データ型で&lt;/a&gt;ある場合もあります。フィールドのオフセットは任意であり、フィールドがオーバーラップすることもあります。これらのオフセットは通常、numpyによって自動的に決定されますが、指定することもできます。</target>
        </trans-unit>
        <trans-unit id="f387c4506792763f7877a583ef74111591fec417" translate="yes" xml:space="preserve">
          <source>A subclass can override what happens when executing numpy ufuncs on it by overriding the default &lt;code&gt;ndarray.__array_ufunc__&lt;/code&gt; method. This method is executed &lt;em&gt;instead&lt;/em&gt; of the ufunc and should return either the result of the operation, or &lt;a href=&quot;https://docs.python.org/dev/library/constants.html#NotImplemented&quot;&gt;&lt;code&gt;NotImplemented&lt;/code&gt;&lt;/a&gt; if the operation requested is not implemented.</source>
          <target state="translated">サブクラスは、デフォルトの &lt;code&gt;ndarray.__array_ufunc__&lt;/code&gt; メソッドをオーバーライドすることにより、サブクラスでnumpyufuncsを実行したときに発生することをオーバーライドできます。このメソッドはufuncの&lt;em&gt;代わり&lt;/em&gt;に実行され、操作の結果を返すか、要求された操作が実装されていない場合は&lt;a href=&quot;https://docs.python.org/dev/library/constants.html#NotImplemented&quot;&gt; &lt;code&gt;NotImplemented&lt;/code&gt; を返す&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="f180152a86fa9b648a6bab2cda7a10f4905a48b6" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; designed to manipulate numerical arrays with missing data.</source>
          <target state="translated">データが欠落している数値配列を操作する&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;設計されたndarrayのサブクラス。</target>
        </trans-unit>
        <trans-unit id="2e73055c8960d39f9422f4c955da1aa6b20cdb50" translate="yes" xml:space="preserve">
          <source>A suitable Python interface to this shared library should be constructed. To do this create a file named interface.py with the following lines at the top:</source>
          <target state="translated">この共有ライブラリへの適切なPythonインターフェースを構築する必要があります。そのためには、interface.pyという名前のファイルを作成し、先頭に以下の行を記述してください。</target>
        </trans-unit>
        <trans-unit id="34235c2c2dbe1e87a37e895b872dd2f556806627" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;a href=&quot;#c.PyArray_DIMS&quot;&gt;&lt;code&gt;PyArray_DIMS&lt;/code&gt;&lt;/a&gt;, named to be consistent with the &lt;a href=&quot;../generated/numpy.ndarray.shape#numpy.ndarray.shape&quot;&gt;&lt;code&gt;shape&lt;/code&gt;&lt;/a&gt; usage within Python.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_DIMS&quot;&gt; &lt;code&gt;PyArray_DIMS&lt;/code&gt; &lt;/a&gt;の同義語であり、Python内での&lt;a href=&quot;../generated/numpy.ndarray.shape#numpy.ndarray.shape&quot;&gt; &lt;code&gt;shape&lt;/code&gt; &lt;/a&gt;使用法と一致するように名前が付けられています。</target>
        </trans-unit>
        <trans-unit id="0a9d85237edf034be6cf9bf1e244b291b0aee63a" translate="yes" xml:space="preserve">
          <source>A synonym for PyArray_DESCR, named to be consistent with the &amp;lsquo;dtype&amp;rsquo; usage within Python.</source>
          <target state="translated">PyArray_DESCRの同義語で、Python内での「dtype」の使用と一貫性があるように命名されています。</target>
        </trans-unit>
        <trans-unit id="f2681289891032d09b18ed94e9f65a0e2826ff47" translate="yes" xml:space="preserve">
          <source>A synonym for PyArray_DIMS, named to be consistent with the &amp;lsquo;shape&amp;rsquo; usage within Python.</source>
          <target state="translated">PyArray_DIMSの同義語であり、Python内での「形状」の使用と一致するように命名されています。</target>
        </trans-unit>
        <trans-unit id="fb1fd8cb6bc580ad49d52598a0e049687d62e978" translate="yes" xml:space="preserve">
          <source>A temporary array is formed by dropping the fields not in the key for the two arrays and concatenating the result. This array is then sorted, and the common entries selected. The output is constructed by filling the fields with the selected entries. Matching is not preserved if there are some duplicates&amp;hellip;</source>
          <target state="translated">一時配列は、2つの配列のキーにないフィールドを削除し、結果を連結することによって形成されます。次に、この配列がソートされ、共通のエントリが選択されます。出力は、選択したエントリをフィールドに入力することによって作成されます。重複がある場合、一致は保持されません&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="1519f14a1c1c3110230c658ad9f28caf3137d319" translate="yes" xml:space="preserve">
          <source>A test function is typically added to a package&amp;rsquo;s __init__.py like so:</source>
          <target state="translated">テスト関数は通常、次のようにパッケージの__init__.pyに追加されます。</target>
        </trans-unit>
        <trans-unit id="8c4410cbe0b9f7cf51e2244cb7c5c5dd5f8dc17d" translate="yes" xml:space="preserve">
          <source>A third option is to take the view of an existing array. In that case, the mask of the view is set to &lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; if the array has no named fields, or an array of boolean with the same structure as the array otherwise.</source>
          <target state="translated">3番目のオプションは、既存のアレイのビューを取ることです。その場合、配列に名前付きフィールドがない場合はビューのマスクが&lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; に&lt;/a&gt;設定され、それ以外の場合は配列と同じ構造を持つブール値の配列が設定されます。</target>
        </trans-unit>
        <trans-unit id="0f636d16ad05af695598dcc38696ba8fa663d5b8" translate="yes" xml:space="preserve">
          <source>A third source of entropy, used internally when calling &lt;a href=&quot;numpy.random.seedsequence.spawn#numpy.random.SeedSequence.spawn&quot;&gt;&lt;code&gt;SeedSequence.spawn&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;numpy.random.seedsequence.spawn#numpy.random.SeedSequence.spawn&quot;&gt; &lt;code&gt;SeedSequence.spawn&lt;/code&gt; を&lt;/a&gt;呼び出すときに内部的に使用されるエントロピーの3番目のソース</target>
        </trans-unit>
        <trans-unit id="b26618bcd66cd9132be5eed72ccd0ebdf50ea37a" translate="yes" xml:space="preserve">
          <source>A timedelta stored as a 64-bit integer.</source>
          <target state="translated">64ビットの整数として格納されたタイムデルタです。</target>
        </trans-unit>
        <trans-unit id="3c732466671bb9ce60ffffbea1204a8445e601bb" translate="yes" xml:space="preserve">
          <source>A total of the number of skipped and known failing tests is displayed at the end of the test run. Skipped tests are marked as &lt;code&gt;'S'&lt;/code&gt; in the test results (or &lt;code&gt;'SKIPPED'&lt;/code&gt; for &lt;code&gt;verbose &amp;gt; 1&lt;/code&gt;), and known failing tests are marked as &lt;code&gt;'x'&lt;/code&gt; (or &lt;code&gt;'XFAIL'&lt;/code&gt; if &lt;code&gt;verbose &amp;gt;
1&lt;/code&gt;).</source>
          <target state="translated">スキップされた既知の失敗したテストの合計数が、テスト実行の最後に表示されます。スキップされた試験は以下のようにマークされている &lt;code&gt;'S'&lt;/code&gt; の試験結果に（又は &lt;code&gt;'SKIPPED'&lt;/code&gt; のための &lt;code&gt;verbose &amp;gt; 1&lt;/code&gt; ）、及び既知の障害のテストは次のようにマークされている &lt;code&gt;'x'&lt;/code&gt; （または &lt;code&gt;'XFAIL'&lt;/code&gt; であれば &lt;code&gt;verbose &amp;gt; 1&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a64f95a5aede16bea5ef8a6ca146177fb6b3b182" translate="yes" xml:space="preserve">
          <source>A traditional character code indicating the data type.</source>
          <target state="translated">データタイプを示す従来の文字コード。</target>
        </trans-unit>
        <trans-unit id="0b2b4cceb7cfb51035a175e0d658850c2512647b" translate="yes" xml:space="preserve">
          <source>A tuple indicating the shape of the mask.</source>
          <target state="translated">マスクの形状を示すタプル。</target>
        </trans-unit>
        <trans-unit id="39b22a3028b03b7b08ff2b2c8d6c1ee3b20dc078" translate="yes" xml:space="preserve">
          <source>A tuple of axes can now be input to &lt;code&gt;expand_dims&lt;/code&gt;</source>
          <target state="translated">軸のタプルを &lt;code&gt;expand_dims&lt;/code&gt; に入力できるようになりました</target>
        </trans-unit>
        <trans-unit id="85c14115771a7d712b28ce39ebe75a1449ae6de7" translate="yes" xml:space="preserve">
          <source>A tuple of integer arrays, one array for each dimension.</source>
          <target state="translated">各次元に1つの配列を持つ整数配列のタプル.</target>
        </trans-unit>
        <trans-unit id="294fc3e3f8a6705ff5d64e4533f44195ce294863" translate="yes" xml:space="preserve">
          <source>A tuple showing the length of each dimension of an ndarray. The length of the tuple itself is the number of dimensions (&lt;a href=&quot;reference/generated/numpy.ndarray.ndim&quot;&gt;numpy.ndim&lt;/a&gt;). The product of the tuple elements is the number of elements in the array. For details, see &lt;a href=&quot;reference/generated/numpy.ndarray.shape&quot;&gt;numpy.ndarray.shape&lt;/a&gt;.</source>
          <target state="translated">ndarrayの各次元の長さを示すタプル。タプル自体の長さは、次元の数（&lt;a href=&quot;reference/generated/numpy.ndarray.ndim&quot;&gt;numpy.ndim&lt;/a&gt;）です。タプル要素の積は、配列内の要素の数です。詳細については、&lt;a href=&quot;reference/generated/numpy.ndarray.shape&quot;&gt;numpy.ndarray.shapeを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ae51c3ea3c094cd9cddbc02935737e4b00f64a16" translate="yes" xml:space="preserve">
          <source>A type object, which is an &lt;code&gt;_ndtpr&lt;/code&gt; instance containing dtype, ndim, shape and flags information.</source>
          <target state="translated">あるタイプのオブジェクト、 &lt;code&gt;_ndtpr&lt;/code&gt; の DTYPE、ndim、形状およびフラグ情報を含むインスタンス。</target>
        </trans-unit>
        <trans-unit id="fdd8d8f2aabfc1f94ccd461a927990273055b0f1" translate="yes" xml:space="preserve">
          <source>A typical implementation would convert any inputs or outputs that are instances of one&amp;rsquo;s own class, pass everything on to a superclass using &lt;code&gt;super()&lt;/code&gt;, and finally return the results after possible back-conversion. An example, taken from the test case &lt;code&gt;test_ufunc_override_with_super&lt;/code&gt; in &lt;code&gt;core/tests/test_umath.py&lt;/code&gt;, is the following.</source>
          <target state="translated">典型的な実装では、自分のクラスのインスタンスである入力または出力を変換し、 &lt;code&gt;super()&lt;/code&gt; を使用してすべてをスーパークラスに渡し、可能な逆変換の後に結果を返します。 &lt;code&gt;core/tests/test_umath.py&lt;/code&gt; &lt;code&gt;test_ufunc_override_with_super&lt;/code&gt; のテストケースtest_ufunc_override_with_superから抜粋した例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6e3c7bb6314ac7c8c0736544e2b11ed065754ed9" translate="yes" xml:space="preserve">
          <source>A typical release schedule is one beta, two release candidates and a final release. It&amp;rsquo;s best to discuss the timing on the mailing list first, in order for people to get their commits in on time, get doc wiki edits merged, etc. After a date is set, create a new maintenance/x.y.z branch, add new empty release notes for the next version in the master branch and update the Trac Milestones.</source>
          <target state="translated">一般的なリリーススケジュールは、1つのベータ、2つのリリース候補、および最終リリースです。最初にメーリングリストでタイミングについて話し合うことをお勧めします。これは、コミットを時間どおりに完了したり、ドキュメントWikiの編集をマージしたりするためです。日付を設定したら、新しいmaintenance / xyzブランチを作成し、新しい空のリリースを追加します。マスターブランチの次のバージョンのメモとTracマイルストーンの更新。</target>
        </trans-unit>
        <trans-unit id="3b160cb3cf90c99aa1978b7563a27004c60d976d" translate="yes" xml:space="preserve">
          <source>A unicode string.</source>
          <target state="translated">unicodeの文字列です。</target>
        </trans-unit>
        <trans-unit id="d2dc5b16a9633f04f2b77831428f3b69798d84b3" translate="yes" xml:space="preserve">
          <source>A unique character code for each of the 21 different built-in types.</source>
          <target state="translated">21種類のビルトインタイプのそれぞれに固有の文字コード。</target>
        </trans-unit>
        <trans-unit id="d057a382d54c38b38dfa71e3ba451944dcf3b8d8" translate="yes" xml:space="preserve">
          <source>A unique number for each of the 21 different built-in types.</source>
          <target state="translated">21種類の内蔵型のそれぞれに固有の番号。</target>
        </trans-unit>
        <trans-unit id="5b8b3285a28b8d0d0f9a89388a30be89c5f9ef89" translate="yes" xml:space="preserve">
          <source>A universal function (or &lt;a href=&quot;../glossary#term-ufunc&quot;&gt;ufunc&lt;/a&gt; for short) is a function that operates on &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarrays&lt;/code&gt;&lt;/a&gt; in an element-by-element fashion, supporting &lt;a href=&quot;#ufuncs-broadcasting&quot;&gt;array broadcasting&lt;/a&gt;, &lt;a href=&quot;#ufuncs-casting&quot;&gt;type casting&lt;/a&gt;, and several other standard features. That is, a ufunc is a &amp;ldquo;&lt;a href=&quot;../glossary#term-vectorization&quot;&gt;vectorized&lt;/a&gt;&amp;rdquo; wrapper for a function that takes a fixed number of specific inputs and produces a fixed number of specific outputs.</source>
          <target state="translated">ユニバーサル関数（または&lt;a href=&quot;../glossary#term-ufunc&quot;&gt;略してufunc&lt;/a&gt;）は、要素&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarrays&lt;/code&gt; &lt;/a&gt;を操作する関数であり、&lt;a href=&quot;#ufuncs-broadcasting&quot;&gt;配列ブロードキャスト&lt;/a&gt;、&lt;a href=&quot;#ufuncs-casting&quot;&gt;型キャスト&lt;/a&gt;、およびその他のいくつかの標準機能をサポートします。つまり、ufuncは、固定数の特定の入力を受け取り、固定数の特定の出力を生成する関数の「&lt;a href=&quot;../glossary#term-vectorization&quot;&gt;ベクトル化された&lt;/a&gt;」ラッパーです。</target>
        </trans-unit>
        <trans-unit id="64c1f6c06cc51041e07183275cab6719aeb64fb9" translate="yes" xml:space="preserve">
          <source>A universal function (or &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-ufunc&quot;&gt;ufunc&lt;/a&gt; for short) is a function that operates on &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarrays&lt;/code&gt;&lt;/a&gt; in an element-by-element fashion, supporting &lt;a href=&quot;#ufuncs-broadcasting&quot;&gt;array broadcasting&lt;/a&gt;, &lt;a href=&quot;#ufuncs-casting&quot;&gt;type casting&lt;/a&gt;, and several other standard features. That is, a ufunc is a &amp;ldquo;&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-vectorization&quot;&gt;vectorized&lt;/a&gt;&amp;rdquo; wrapper for a function that takes a fixed number of specific inputs and produces a fixed number of specific outputs.</source>
          <target state="translated">ユニバーサル関数（&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-ufunc&quot;&gt;略してufunc&lt;/a&gt;）は、要素&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarrays&lt;/code&gt; &lt;/a&gt;を操作する関数で、&lt;a href=&quot;#ufuncs-broadcasting&quot;&gt;配列のブロードキャスト&lt;/a&gt;、&lt;a href=&quot;#ufuncs-casting&quot;&gt;型のキャスト&lt;/a&gt;、およびその他のいくつかの標準機能をサポートしています。つまり、ufuncは、固定数の特定の入力を受け取り、固定数の特定の出力を生成する関数の「&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-vectorization&quot;&gt;ベクトル化された&lt;/a&gt;」ラッパーです。</target>
        </trans-unit>
        <trans-unit id="0b5238c72cf80b5c60c913bcf36e0c3b2aca2141" translate="yes" xml:space="preserve">
          <source>A use case for this function is to match the shape and layout of the iterator and tack on one or more dimensions. For example, in order to generate a vector per input value for a numerical gradient, you pass in ndim*itemsize for itemsize, then add another dimension to the end with size ndim and stride itemsize. To do the Hessian matrix, you do the same thing but add two dimensions, or take advantage of the symmetry and pack it into 1 dimension with a particular encoding.</source>
          <target state="translated">この関数の使用例としては、イテレータの形状やレイアウトに合わせて、1つ以上の次元を追加することが挙げられます。例えば、数値勾配の入力値ごとにベクトルを生成するには、itemize に ndim*itemsize を渡し、最後にサイズ ndim と stride itemsize を指定して別の次元を追加します。ヘシアン行列を作成するには,同じことを行いますが,2次元を追加するか,対称性を利用して,特定のエンコーディングを用いて1次元に詰め込みます.</target>
        </trans-unit>
        <trans-unit id="de22500eb5e8b8de7c477c2173c078a3f78b884b" translate="yes" xml:space="preserve">
          <source>A useful concept is &amp;ldquo;tuple unpacking&amp;rdquo;, which allows variables to be assigned to the contents of a tuple:</source>
          <target state="translated">便利な概念は「タプルアンパック」です。これにより、変数をタプルのコンテンツに割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="c23b4448f23bf99116b098b7042336b6a0a35ca9" translate="yes" xml:space="preserve">
          <source>A user-defined type number is returned that uniquely identifies the type. A pointer to the new structure can then be obtained from &lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt;&lt;code&gt;PyArray_DescrFromType&lt;/code&gt;&lt;/a&gt; using the returned type number. A -1 is returned if an error occurs. If this &lt;em&gt;dtype&lt;/em&gt; has already been registered (checked only by the address of the pointer), then return the previously-assigned type-number.</source>
          <target state="translated">タイプを一意に識別するユーザー定義のタイプ番号が返されます。次に、返された&lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt; &lt;code&gt;PyArray_DescrFromType&lt;/code&gt; &lt;/a&gt;を使用して、PyArray_DescrFromTypeから新しい構造体へのポインターを取得できます。エラーが発生した場合は-1が返されます。この&lt;em&gt;dtype&lt;/em&gt;がすでに登録されている場合（ポインターのアドレスによってのみチェックされる）、以前に割り当てられたタイプ番号を返します。</target>
        </trans-unit>
        <trans-unit id="d15cfd1e60814b656a603a12c408fd84b9dc49bd" translate="yes" xml:space="preserve">
          <source>A variable &lt;code&gt;x&lt;/code&gt; has a log-normal distribution if &lt;code&gt;log(x)&lt;/code&gt; is normally distributed. The probability density function for the log-normal distribution is:</source>
          <target state="translated">変数 &lt;code&gt;x&lt;/code&gt; は、 &lt;code&gt;log(x)&lt;/code&gt; が正規分布している場合、対数正規分布になります。対数正規分布の確率密度関数は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a380132a2a22dec2d9e0225f137d26ed0fb90cb8" translate="yes" xml:space="preserve">
          <source>A variable type indicating the kind of clipping that should be applied in certain functions.</source>
          <target state="translated">特定の関数で適用されるべきクリッピングの種類を示す変数型。</target>
        </trans-unit>
        <trans-unit id="92ee56069bf2a979b0f98f8dc2758991d6eaeb36" translate="yes" xml:space="preserve">
          <source>A variable type indicating the selection algorithm being used.</source>
          <target state="translated">使用されている選択アルゴリズムを示す変数型です。</target>
        </trans-unit>
        <trans-unit id="ed8e1a32ab2b9c51761a4c61f1d8c956e15e5de5" translate="yes" xml:space="preserve">
          <source>A variable type indicating whether the index returned should be that of the first suitable location (if &lt;a href=&quot;#c.NPY_SEARCHLEFT&quot;&gt;&lt;code&gt;NPY_SEARCHLEFT&lt;/code&gt;&lt;/a&gt;) or of the last (if &lt;a href=&quot;#c.NPY_SEARCHRIGHT&quot;&gt;&lt;code&gt;NPY_SEARCHRIGHT&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">返されたインデックスがなければならないかどうかを示す変数タイプその最初の適当な位置の（IF &lt;a href=&quot;#c.NPY_SEARCHLEFT&quot;&gt; &lt;code&gt;NPY_SEARCHLEFT&lt;/code&gt; &lt;/a&gt;）または最後の（場合&lt;a href=&quot;#c.NPY_SEARCHRIGHT&quot;&gt; &lt;code&gt;NPY_SEARCHRIGHT&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="fa9bf0dccea77846a06e4f1221f1f221c098b27c" translate="yes" xml:space="preserve">
          <source>A version which returns complex numbers when given negative reals.</source>
          <target state="translated">負のリアルが与えられたときに複素数を返すバージョン。</target>
        </trans-unit>
        <trans-unit id="2fcfc20f282779542aca2d1f71202cb495e262a7" translate="yes" xml:space="preserve">
          <source>A very common operation in much of NumPy code is the need to iterate over all the elements of a general, strided, N-dimensional array. This operation of a general-purpose N-dimensional loop is abstracted in the notion of an iterator object. To write an N-dimensional loop, you only have to create an iterator object from an ndarray, work with the dataptr member of the iterator object structure and call the macro &lt;a href=&quot;c-api.array#c.PyArray_ITER_NEXT&quot;&gt;&lt;code&gt;PyArray_ITER_NEXT&lt;/code&gt;&lt;/a&gt; (it) on the iterator object to move to the next element. The &amp;ldquo;next&amp;rdquo; element is always in C-contiguous order. The macro works by first special casing the C-contiguous, 1-D, and 2-D cases which work very simply.</source>
          <target state="translated">NumPyコードの多くで非常に一般的な操作は、一般的なストライドN次元配列のすべての要素を反復処理する必要があることです。この汎用N次元ループの操作は、反復子オブジェクトの概念で抽象化されています。N次元ループを作成するには、ndarrayからイテレーターオブジェクトを作成し、イテレーターオブジェクト構造のdataptrメンバーを操作して、イテレーターオブジェクトのマクロ&lt;a href=&quot;c-api.array#c.PyArray_ITER_NEXT&quot;&gt; &lt;code&gt;PyArray_ITER_NEXT&lt;/code&gt; &lt;/a&gt;（it）を呼び出して次の要素に移動するだけです。「次の」要素は常にC隣接の順序です。マクロは、非常に単純に機能するC隣接、1次元、および2次元のケースを最初に特別にケーシングすることによって機能します。</target>
        </trans-unit>
        <trans-unit id="7953bebd3c4d1f0aeb272423c5750e391178c282" translate="yes" xml:space="preserve">
          <source>A very common operation in much of NumPy code is the need to iterate over all the elements of a general, strided, N-dimensional array. This operation of a general-purpose N-dimensional loop is abstracted in the notion of an iterator object. To write an N-dimensional loop, you only have to create an iterator object from an ndarray, work with the dataptr member of the iterator object structure and call the macro &lt;a href=&quot;c-api/array#c.PyArray_ITER_NEXT&quot;&gt;&lt;code&gt;PyArray_ITER_NEXT&lt;/code&gt;&lt;/a&gt; (it) on the iterator object to move to the next element. The &amp;ldquo;next&amp;rdquo; element is always in C-contiguous order. The macro works by first special casing the C-contiguous, 1-D, and 2-D cases which work very simply.</source>
          <target state="translated">NumPyコードの多くで非常に一般的な操作は、一般的なストライドN次元配列のすべての要素を反復処理する必要があることです。汎用のN次元ループのこの操作は、イテレータオブジェクトの概念で抽象化されています。N次元ループを作成するには、ndarrayからイテレータオブジェクトを作成し、イテレータオブジェクト構造のdataptrメンバーを操作し、イテレータオブジェクトでマクロ&lt;a href=&quot;c-api/array#c.PyArray_ITER_NEXT&quot;&gt; &lt;code&gt;PyArray_ITER_NEXT&lt;/code&gt; &lt;/a&gt;（it）を呼び出して次の要素に移動するだけです。「次の」要素は常にC連続の順序になっています。マクロは、非常に単純に機能するC連続、1次元、および2次元のケースを最初に特別にケーシングすることによって機能します。</target>
        </trans-unit>
        <trans-unit id="2d293e5beee6d752c5e9563e11d78a171279a315" translate="yes" xml:space="preserve">
          <source>A view of &lt;code&gt;m&lt;/code&gt; with the columns reversed. Since a view is returned, this operation is</source>
          <target state="translated">列が逆になった &lt;code&gt;m&lt;/code&gt; のビュー。ビューが返されるため、この操作は</target>
        </trans-unit>
        <trans-unit id="66bdbd39fa3f528ae4cecafafda9e6501691569a" translate="yes" xml:space="preserve">
          <source>A view of &lt;code&gt;m&lt;/code&gt; with the entries of axis reversed. Since a view is returned, this operation is done in constant time.</source>
          <target state="translated">軸のエントリが逆になった &lt;code&gt;m&lt;/code&gt; のビュー。ビューが返されるため、この操作は一定の時間で行われます。</target>
        </trans-unit>
        <trans-unit id="248e57cd70b2bdbb1ce54ae0d4a6550da9299aaf" translate="yes" xml:space="preserve">
          <source>A view of &lt;code&gt;m&lt;/code&gt; with the rows reversed. Since a view is returned, this operation is</source>
          <target state="translated">行が反転した &lt;code&gt;m&lt;/code&gt; のビュー。ビューが返されるため、この操作は</target>
        </trans-unit>
        <trans-unit id="f51b7d94b5a97c50779fd88d4376e83b681ccdf5" translate="yes" xml:space="preserve">
          <source>A warning of class warning_class should be thrown by the callable when invoked with arguments args and keyword arguments kwargs. If a different type of warning is thrown, it will not be caught.</source>
          <target state="translated">warning_class クラスの警告は、引数 args とキーワード引数 kwargs で呼び出されたときに callable によってスローされなければなりません。異なるタイプの警告がスローされた場合、それは捕捉されません。</target>
        </trans-unit>
        <trans-unit id="285a9d7315ee28bbe9a84fc12d68e6c194ff4508" translate="yes" xml:space="preserve">
          <source>A way to represent items in a N-dimensional array in the 1-dimensional computer memory. In column-major order, the leftmost index &amp;ldquo;varies the fastest&amp;rdquo;: for example the array:</source>
          <target state="translated">1次元のコンピュータメモリ内のN次元配列内のアイテムを表す方法。列優先の順序で、左端のインデックスは「最も速く変化します」。たとえば、配列：</target>
        </trans-unit>
        <trans-unit id="daea7045bd351ddce2006b62de41e4e4e92970b0" translate="yes" xml:space="preserve">
          <source>A way to represent items in a N-dimensional array in the 1-dimensional computer memory. In row-major order, the rightmost index &amp;ldquo;varies the fastest&amp;rdquo;: for example the array:</source>
          <target state="translated">1次元のコンピュータメモリ内のN次元配列内のアイテムを表す方法。行優先の順序で、右端のインデックスは「最も速く変化します」。たとえば、配列は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e38ea5df529a5503793c2e50ddf4e165eafd5e2a" translate="yes" xml:space="preserve">
          <source>A work-around is to use the &lt;code&gt;view()&lt;/code&gt; method to view the result as unsigned integers with the same bit width:</source>
          <target state="translated">回避策は、 &lt;code&gt;view()&lt;/code&gt; メソッドを使用して、結果を同じビット幅の符号なし整数として表示することです。</target>
        </trans-unit>
        <trans-unit id="9df196eb4a0b9faf17592583cd28b8a6aede74a1" translate="yes" xml:space="preserve">
          <source>A() (numpy.matrix property)</source>
          <target state="translated">A()(numpy.matrixプロパティ)</target>
        </trans-unit>
        <trans-unit id="539891caca13f6ce7a5508b45d4b8eb9a8155d5e" translate="yes" xml:space="preserve">
          <source>A. T. Benjamin, et al., &amp;ldquo;Combinatorial Trigonometry with Chebyshev Polynomials,&amp;rdquo; &lt;em&gt;Journal of Statistical Planning and Inference 14&lt;/em&gt;, 2008 (&lt;a href=&quot;https://web.archive.org/web/20080221202153/https://www.math.hmc.edu/~benjamin/papers/CombTrig.pdf&quot;&gt;https://web.archive.org/web/20080221202153/https://www.math.hmc.edu/~benjamin/papers/CombTrig.pdf&lt;/a&gt;, pg. 4)</source>
          <target state="translated">AT Benjamin、et al。、&amp;ldquo; Combinatorial Trigonometry with Chebyshev Polynomials、&amp;rdquo; &lt;em&gt;Journal of Statistics Planning and Inference 14、2008&lt;/em&gt;（&lt;a href=&quot;https://web.archive.org/web/20080221202153/https://www.math.hmc.edu/~benjamin/papers/CombTrig.pdf&quot;&gt;https://web.archive.org/web/20080221202153/https://www.math.hmc.edu /~benjamin/papers/CombTrig.pdf、4&lt;/a&gt;ページ）</target>
        </trans-unit>
        <trans-unit id="e147b8f87d9785ccee0f5217b2b29d28af51a39e" translate="yes" xml:space="preserve">
          <source>A. T. Benjamin, et al., &amp;ldquo;Combinatorial Trigonometry with Chebyshev Polynomials,&amp;rdquo; &lt;em&gt;Journal of Statistical Planning and Inference 14&lt;/em&gt;, 2008 (preprint: &lt;a href=&quot;https://www.math.hmc.edu/~benjamin/papers/CombTrig.pdf&quot;&gt;https://www.math.hmc.edu/~benjamin/papers/CombTrig.pdf&lt;/a&gt;, pg. 4)</source>
          <target state="translated">AT Benjamin、et al。、&amp;ldquo; Combinatorial Trigonometry with Chebyshev Polynomials、&amp;rdquo; &lt;em&gt;Journal of Statistics Planning and Inference 14、2008&lt;/em&gt;（preprint：&lt;a href=&quot;https://www.math.hmc.edu/~benjamin/papers/CombTrig.pdf&quot;&gt;https&lt;/a&gt;：//www.math.hmc.edu/~benjamin/papers/CombTrig.pdf、pg。 4）</target>
        </trans-unit>
        <trans-unit id="73fb89647e9cf799e65a16c0b2c72ed24fcc54ac" translate="yes" xml:space="preserve">
          <source>A.V. Oppenheim and R.W. Schafer, &amp;ldquo;Discrete-Time Signal Processing&amp;rdquo;, Prentice-Hall, 1999, pp. 468-471.</source>
          <target state="translated">AV Oppenheim and RW Schafer、「Discrete-Time Signal Processing」、Prentice-Hall、1999、pp。468-471。</target>
        </trans-unit>
        <trans-unit id="0b970bacbaa93ce977fd2810127eff2b2d3794c2" translate="yes" xml:space="preserve">
          <source>A1() (numpy.matrix property)</source>
          <target state="translated">A1()(numpy.matrixプロパティ)</target>
        </trans-unit>
        <trans-unit id="326b02bd6d0ebe2c9b8a795e1dfac3715a078d10" translate="yes" xml:space="preserve">
          <source>ABI incompatibility is automatically detected in every numpy&amp;rsquo;s version. API incompatibility detection was added in numpy 1.4.0. If you want to supported many different numpy versions with one extension binary, you have to build your extension with the lowest &lt;a href=&quot;#c.NPY_FEATURE_VERSION&quot;&gt;&lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt;&lt;/a&gt; as possible.</source>
          <target state="translated">ABIの非互換性は、すべてのnumpyのバージョンで自動的に検出されます。APIの非互換性の検出がnumpy1.4.0で追加されました。1つの拡張バイナリで多くの異なるnumpyバージョンをサポートしたい場合は、可能な限り最小の&lt;a href=&quot;#c.NPY_FEATURE_VERSION&quot;&gt; &lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt; で&lt;/a&gt;拡張を構築する必要があります。</target>
        </trans-unit>
        <trans-unit id="e333a8f5d6c832811356beeee9fce0dffa5d510b" translate="yes" xml:space="preserve">
          <source>ABI incompatibility is automatically detected in every numpy&amp;rsquo;s version. API incompatibility detection was added in numpy 1.4.0. If you want to supported many different numpy versions with one extension binary, you have to build your extension with the lowest NPY_FEATURE_VERSION as possible.</source>
          <target state="translated">ABIの非互換性は、すべてのnumpyのバージョンで自動的に検出されます。API非互換性検出はnumpy 1.4.0で追加されました。1つの拡張バイナリで多くの異なるnumpyバージョンをサポートする場合は、できるだけ低いNPY_FEATURE_VERSIONで拡張を構築する必要があります。</target>
        </trans-unit>
        <trans-unit id="5995866cb7ff67106f4964a2376febd406b1609d" translate="yes" xml:space="preserve">
          <source>ALIGNED (A) the data and strides are aligned appropriately for the hardware (as determined by the compiler);</source>
          <target state="translated">ALIGNED (A)データとストライドがハードウェアに対して適切にアラインメントされている(コンパイラによって決定される)。</target>
        </trans-unit>
        <trans-unit id="4304323acf2d8950ef646184d037e624bf247b5a" translate="yes" xml:space="preserve">
          <source>ALIGNED / A</source>
          <target state="translated">ALIGNED/A</target>
        </trans-unit>
        <trans-unit id="c669e6d697ad4a42bc9b5d0d37cf73bc259d9578" translate="yes" xml:space="preserve">
          <source>ALIGNED and WRITEABLE.</source>
          <target state="translated">ALIGNEDとWRITEABLE。</target>
        </trans-unit>
        <trans-unit id="f993136f3c88fcde984662580493081020efb4f2" translate="yes" xml:space="preserve">
          <source>ALIGNED can only be set &lt;code&gt;True&lt;/code&gt; if the data is truly aligned.</source>
          <target state="translated">ALIGNEDは、データが本当に整列されている場合にのみ &lt;code&gt;True&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="4ca004ce1076234dbe61af69ea3047fa2374127c" translate="yes" xml:space="preserve">
          <source>API will change for Python 3.0!</source>
          <target state="translated">Python 3.0でAPIが変わります</target>
        </trans-unit>
        <trans-unit id="c9a017ad68340db7a300791b542b3e47b53bab0d" translate="yes" xml:space="preserve">
          <source>ARM support updated</source>
          <target state="translated">ARMのサポートが更新されました</target>
        </trans-unit>
        <trans-unit id="f831039f6aa812ccfca1eecca7ada1703e496314" translate="yes" xml:space="preserve">
          <source>ARMv7/A32 - CPU feature names</source>
          <target state="translated">ARMv7/A32-CPUの機能名</target>
        </trans-unit>
        <trans-unit id="e107c346719baa73a962eb147e8146974451ceed" translate="yes" xml:space="preserve">
          <source>ARMv8/A64 - CPU feature names</source>
          <target state="translated">ARMv8/A64-CPUの機能名</target>
        </trans-unit>
        <trans-unit id="1459b245217132f67436c3c2641848e54c45be8c" translate="yes" xml:space="preserve">
          <source>ATLAS</source>
          <target state="translated">ATLAS</target>
        </trans-unit>
        <trans-unit id="6fb558a4b07c9e1ee54cbf57a5f6f92ab12c67b6" translate="yes" xml:space="preserve">
          <source>Ability to acknowledge their own funding sources on the NumPy websites, in talks and T-shirts.</source>
          <target state="translated">NumPyのウェブサイトやトーク、Tシャツなどで、自分たちの資金源を認めることができる。</target>
        </trans-unit>
        <trans-unit id="2d59025cc76059a9759025fd524514d76730b95f" translate="yes" xml:space="preserve">
          <source>Ability to disable madvise hugepages</source>
          <target state="translated">madvise hugepagesを無効にする機能</target>
        </trans-unit>
        <trans-unit id="b1a4bc2e52b8112444fd646123cf0dfd338cd42b" translate="yes" xml:space="preserve">
          <source>Ability to influence the project through the participation of their Council Member.</source>
          <target state="translated">評議員の参加により、プロジェクトに影響を与える能力があること。</target>
        </trans-unit>
        <trans-unit id="e2ae7aaaec17d37bc7290a6e91d950782a1a0701" translate="yes" xml:space="preserve">
          <source>Ability to pad rank-n arrays</source>
          <target state="translated">ランクn配列のパッド機能</target>
        </trans-unit>
        <trans-unit id="88e4e2d2f4cfb621c3844a5b80ac5db07aeb847c" translate="yes" xml:space="preserve">
          <source>About NumPy</source>
          <target state="translated">NumPyについて</target>
        </trans-unit>
        <trans-unit id="e8cea8d7a2b325eab608d42bf7827996afaccb69" translate="yes" xml:space="preserve">
          <source>About this documentation</source>
          <target state="translated">このドキュメントについて</target>
        </trans-unit>
        <trans-unit id="97ec8580d4ae0d82a2150753bb70bdbc01a7704e" translate="yes" xml:space="preserve">
          <source>Abramowitz, M. and Stegun, I. A. (Eds.). &amp;ldquo;Handbook of Mathematical Functions with Formulas, Graphs, and Mathematical Tables, 9th printing,&amp;rdquo; New York: Dover, 1972.</source>
          <target state="translated">Abramowitz、M.およびStegun、IA（編）。「数式、グラフ、および数学表を使用した数学関数ハンドブック、9番目の印刷物」ニューヨーク：ドーバー、1972年。</target>
        </trans-unit>
        <trans-unit id="4e1f50a3f5352b9780a93248146f73d95f25a2f5" translate="yes" xml:space="preserve">
          <source>Abramowitz, M. and Stegun, I. A., &lt;em&gt;Handbook of Mathematical Functions&lt;/em&gt;, 10th printing, New York: Dover, 1964, pp. 79. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</source>
          <target state="translated">Abramowitz、M.およびStegun、IA、&lt;em&gt;Handbook of Mathematical Functions&lt;/em&gt;、10th Printing、New York：Dover、1964、pp。79。http &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;：//www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40e736856e2b97e31bab4e474e99a3cd42ea1797" translate="yes" xml:space="preserve">
          <source>Abramowitz, M. and Stegun, I. A., &lt;em&gt;Handbook of Mathematical Functions&lt;/em&gt;, 10th printing, New York: Dover, 1964, pp. 79ff. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</source>
          <target state="translated">Abramowitz、M.とStegun、IA、&lt;em&gt;Handbook of Mathematical Functions&lt;/em&gt;、10th Printing、New York：Dover、1964、pp。79ff。&lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5666ea42d49d782693a26070b385ac789d6be60c" translate="yes" xml:space="preserve">
          <source>Absolute Beginners Tutorial</source>
          <target state="translated">絶対的な初心者のためのチュートリアル</target>
        </trans-unit>
        <trans-unit id="488d2c4b657647616a3102eb9b5a5d6f7bc1ef16" translate="yes" xml:space="preserve">
          <source>Absolute beginner's guide</source>
          <target state="translated">初心者のためのガイド</target>
        </trans-unit>
        <trans-unit id="72be1abc9c41f18cb036851d094c7e5ee1691674" translate="yes" xml:space="preserve">
          <source>Absolute tolerance.</source>
          <target state="translated">絶対的な許容範囲。</target>
        </trans-unit>
        <trans-unit id="38ef1ee54a653575269705dbdf26ea3643a0677d" translate="yes" xml:space="preserve">
          <source>Absolute tolerance. The absolute difference is equal to &lt;code&gt;atol&lt;/code&gt;. Default is 1e-8.</source>
          <target state="translated">絶対許容誤差。絶対差は &lt;code&gt;atol&lt;/code&gt; と同じです。デフォルトは1e-8です。</target>
        </trans-unit>
        <trans-unit id="f2b82fc5344b46b896168f341b2c8150deb1752e" translate="yes" xml:space="preserve">
          <source>Absolute values including &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#complex&quot;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/a&gt; types.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#complex&quot;&gt; &lt;code&gt;complex&lt;/code&gt; &lt;/a&gt;型を含む絶対値。</target>
        </trans-unit>
        <trans-unit id="975afb77a17099a273652740c50322176a7899c3" translate="yes" xml:space="preserve">
          <source>Abstract base class for seed sequences that can spawn.</source>
          <target state="translated">スポーン可能なシード配列の抽象基底クラス。</target>
        </trans-unit>
        <trans-unit id="3a56b6f89460611cc544ed578033449602d74856" translate="yes" xml:space="preserve">
          <source>Abstract base class for seed sequences.</source>
          <target state="translated">種子配列の抽象基底クラス。</target>
        </trans-unit>
        <trans-unit id="eb9fe395b30f668b3380721b7a5fc094808ed8ed" translate="yes" xml:space="preserve">
          <source>Abstract base class of all complex number scalar types that are made up of floating-point numbers.</source>
          <target state="translated">浮動小数点数で構成されるすべての複素数スカラ型の抽象的な基底クラス。</target>
        </trans-unit>
        <trans-unit id="fc4bf9658d9a75ca1105b3bee4abecadacdd274d" translate="yes" xml:space="preserve">
          <source>Abstract base class of all floating-point scalar types.</source>
          <target state="translated">すべての浮動小数点スカラ型の抽象的な基本クラスです.</target>
        </trans-unit>
        <trans-unit id="1d171c40437cb7a421dcd23d47d8710022dde780" translate="yes" xml:space="preserve">
          <source>Abstract base class of all integer scalar types.</source>
          <target state="translated">すべての整数スカラ型の抽象的な基本クラスです。</target>
        </trans-unit>
        <trans-unit id="886578981c7d895286961e644e90fb9b20d1aaef" translate="yes" xml:space="preserve">
          <source>Abstract base class of all numeric scalar types with a (potentially) inexact representation of the values in its range, such as floating-point numbers.</source>
          <target state="translated">浮動小数点数のように、その範囲内の値を(潜在的に)不正確に表現するすべての数値スカラー型の抽象的な基本クラス。</target>
        </trans-unit>
        <trans-unit id="e384894160e6a510bd7eb4ad54c21cd74b73224c" translate="yes" xml:space="preserve">
          <source>Abstract base class of all numeric scalar types.</source>
          <target state="translated">すべての数値スカラ型の抽象的な基本クラスです。</target>
        </trans-unit>
        <trans-unit id="7b684a091401b005ea18208051023e2760f7610b" translate="yes" xml:space="preserve">
          <source>Abstract base class of all scalar types without predefined length. The actual size of these types depends on the specific &lt;code&gt;np.dtype&lt;/code&gt; instantiation.</source>
          <target state="translated">事前定義された長さのないすべてのスカラー型の抽象基本クラス。これらのタイプの実際のサイズは、特定の &lt;code&gt;np.dtype&lt;/code&gt; インスタンス化によって異なります。</target>
        </trans-unit>
        <trans-unit id="cd5b6c8e90c82a71d52d62e0bf04920ff75c25e2" translate="yes" xml:space="preserve">
          <source>Abstract base class of all signed integer scalar types.</source>
          <target state="translated">すべての符号付き整数スカラ型の抽象的な基本クラスです。</target>
        </trans-unit>
        <trans-unit id="a6479435be225736f20c98d887914dc57d0421f0" translate="yes" xml:space="preserve">
          <source>Abstract base class of all unsigned integer scalar types.</source>
          <target state="translated">すべての符号なし整数スカラ型の抽象的な基本クラスです。</target>
        </trans-unit>
        <trans-unit id="3196c273438daba1ad73ce097f5d816bace5cf68" translate="yes" xml:space="preserve">
          <source>Accelerate (MacOS)</source>
          <target state="translated">Accelerate (MacOS)</target>
        </trans-unit>
        <trans-unit id="11199dced7040dff526146cf002d1ddea45d0837" translate="yes" xml:space="preserve">
          <source>Accelerated BLAS/LAPACK libraries</source>
          <target state="translated">高速化されたBLAS/LAPACKライブラリ</target>
        </trans-unit>
        <trans-unit id="bcb77f2711885dd2e0c1b501af744fd631f7962c" translate="yes" xml:space="preserve">
          <source>Accepts a boolean array which is broadcast together with the operands. Values of True indicate to calculate the ufunc at that position, values of False indicate to leave the value in the output alone. This argument cannot be used for generalized ufuncs as those take non-scalar input.</source>
          <target state="translated">オペランドと一緒にブロードキャストされるブーリアン配列を受け取ります。Trueの値はその位置でufuncを計算することを示し、Falseの値は出力に値を残すことを示します。この引数は、一般化されたufuncには使用できません。</target>
        </trans-unit>
        <trans-unit id="7ff8ee5fd6920ddbc4707845c10dec516fb18e5f" translate="yes" xml:space="preserve">
          <source>Accepts any object as input, but always returns False unless the input is a MaskedArray containing masked values.</source>
          <target state="translated">入力として任意のオブジェクトを受け取りますが、入力がマスクされた値を含むMaskedArrayでない限り、常にFalseを返します。</target>
        </trans-unit>
        <trans-unit id="d7eafeaa5f92d0428891758cafdbada426336787" translate="yes" xml:space="preserve">
          <source>Access the values in a BitGenerator, convert them to &lt;code&gt;float64&lt;/code&gt; in the interval &lt;code&gt;[0.0.,&lt;/code&gt; `` 1.0)``. In addition to the &lt;code&gt;size&lt;/code&gt; kwarg, now supports &lt;code&gt;dtype='d'&lt;/code&gt; or &lt;code&gt;dtype='f'&lt;/code&gt;, and an &lt;code&gt;out&lt;/code&gt; kwarg to fill a user- supplied array.</source>
          <target state="translated">BitGeneratorの値にアクセスし、間隔 &lt;code&gt;[0.0.,&lt;/code&gt; `` 1.0） ``でそれらを &lt;code&gt;float64&lt;/code&gt; に変換します。 &lt;code&gt;size&lt;/code&gt; kwargに加えて、 &lt;code&gt;dtype='d'&lt;/code&gt; または &lt;code&gt;dtype='f'&lt;/code&gt; と、ユーザー指定の配列を満たすための &lt;code&gt;out&lt;/code&gt; kwargをサポートするようになりました。</target>
        </trans-unit>
        <trans-unit id="46e4364f8d908ab983f4441dcd9d804db302fed1" translate="yes" xml:space="preserve">
          <source>Access to proprietary information of their employer that could potentially leak into their work with the Project.</source>
          <target state="translated">プロジェクトの仕事に漏れる可能性のある雇用主の専有情報へのアクセス。</target>
        </trans-unit>
        <trans-unit id="5450fecbe2f49f1454935d6df12ccffe9a90bb18" translate="yes" xml:space="preserve">
          <source>Access to various distributions below is available via Cython or C-wrapper libraries like CFFI. All the functions accept a &lt;a href=&quot;#c.bitgen_t&quot;&gt;&lt;code&gt;bitgen_t&lt;/code&gt;&lt;/a&gt; as their first argument. To access these from Cython or C, you must link with the &lt;code&gt;npyrandom&lt;/code&gt; library which is part of the NumPy distribution, located in &lt;code&gt;numpy/random/lib&lt;/code&gt;.</source>
          <target state="translated">以下のさまざまなディストリビューションへのアクセスは、CythonまたはCFFIなどのCラッパーライブラリを介して利用できます。すべての関数は、最初の引数として&lt;a href=&quot;#c.bitgen_t&quot;&gt; &lt;code&gt;bitgen_t&lt;/code&gt; &lt;/a&gt;を受け入れます。CythonまたはCからこれらにアクセスするには、 &lt;code&gt;numpy/random/lib&lt;/code&gt; にあるNumPyディストリビューションの一部である &lt;code&gt;npyrandom&lt;/code&gt; ライブラリにリンクする必要があります。</target>
        </trans-unit>
        <trans-unit id="f33392cdbb4719437624a90456eca44187bad68f" translate="yes" xml:space="preserve">
          <source>Access to various distributions is available via Cython or C-wrapper libraries like CFFI. All the functions accept a &lt;a href=&quot;#c.bitgen_t&quot;&gt;&lt;code&gt;bitgen_t&lt;/code&gt;&lt;/a&gt; as their first argument.</source>
          <target state="translated">さまざまなディストリビューションへのアクセスは、CythonまたはCFFIなどのCラッパーライブラリを介して利用できます。すべての関数は、最初の引数として&lt;a href=&quot;#c.bitgen_t&quot;&gt; &lt;code&gt;bitgen_t&lt;/code&gt; &lt;/a&gt;を受け入れます。</target>
        </trans-unit>
        <trans-unit id="7afa654ae42daf5589c60112d9c94d589e6f3f1d" translate="yes" xml:space="preserve">
          <source>Accessible via &lt;a href=&quot;array#c.PyArray_DATA&quot;&gt;&lt;code&gt;PyArray_DATA&lt;/code&gt;&lt;/a&gt;, this data member is a pointer to the first element of the array. This pointer can (and normally should) be recast to the data type of the array.</source>
          <target state="translated">&lt;a href=&quot;array#c.PyArray_DATA&quot;&gt; &lt;code&gt;PyArray_DATA&lt;/code&gt; &lt;/a&gt;を介してアクセスできるこのデータメンバーは、配列の最初の要素へのポインターです。このポインタは、配列のデータ型に再キャストできます（通常は再キャストする必要があります）。</target>
        </trans-unit>
        <trans-unit id="963b10c79b437844743eff3670e03f7e724d2c1a" translate="yes" xml:space="preserve">
          <source>Accessing Individual Fields</source>
          <target state="translated">個別フィールドへのアクセス</target>
        </trans-unit>
        <trans-unit id="bdb57c80e6a4a5c4c53cb7deb5b82727664010b0" translate="yes" xml:space="preserve">
          <source>Accessing Multiple Fields</source>
          <target state="translated">複数のフィールドへのアクセス</target>
        </trans-unit>
        <trans-unit id="16c5166155700e6456d3ac7078b3466894c92ea9" translate="yes" xml:space="preserve">
          <source>Accessing a field of a masked array with structured datatype returns a &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">構造化データ型でマスクされた配列のフィールドにアクセスすると、&lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="ad44652f541aceec356fa1b8d890a83b5e7dc497" translate="yes" xml:space="preserve">
          <source>Accessing a mask</source>
          <target state="translated">マスクへのアクセス</target>
        </trans-unit>
        <trans-unit id="1ae3364beb66b0f5f244cd535829f92651c28eaf" translate="yes" xml:space="preserve">
          <source>Accessing only the valid entries</source>
          <target state="translated">有効なエントリのみにアクセスする</target>
        </trans-unit>
        <trans-unit id="097badc57289f74986291250ca0d50ffba8b6adb" translate="yes" xml:space="preserve">
          <source>Accessing the BitGenerator</source>
          <target state="translated">BitGeneratorへのアクセス</target>
        </trans-unit>
        <trans-unit id="b9cea573b7dc8cfac38c95967f1d0a9124dc54f0" translate="yes" xml:space="preserve">
          <source>Accessing the data</source>
          <target state="translated">データへのアクセス</target>
        </trans-unit>
        <trans-unit id="5c56508764b810016753b53da256711e1fc59c95" translate="yes" xml:space="preserve">
          <source>Accessing the mask</source>
          <target state="translated">マスクへのアクセス</target>
        </trans-unit>
        <trans-unit id="2444770b8ea0a7f5ab0c34a322154eaab7c51273" translate="yes" xml:space="preserve">
          <source>Accumulate</source>
          <target state="translated">Accumulate</target>
        </trans-unit>
        <trans-unit id="22b15212c762693681b9a14af1311471df5ef0ae" translate="yes" xml:space="preserve">
          <source>Accumulate along axis 0 (rows), down columns:</source>
          <target state="translated">軸0(行)に沿って、下の列に沿って累積します。</target>
        </trans-unit>
        <trans-unit id="c5dbcb1067a3510dbd548c0a2abcca4e50a8d0fa" translate="yes" xml:space="preserve">
          <source>Accumulate along axis 1 (columns), through rows:</source>
          <target state="translated">軸1(列)に沿って、行を通って蓄積します。</target>
        </trans-unit>
        <trans-unit id="b9d21cbdbf197dfdab9c0eb8a5bda1ff0c8fa94a" translate="yes" xml:space="preserve">
          <source>Accumulate the result of applying the operator to all elements.</source>
          <target state="translated">すべての要素に演算子を適用した結果を累積します。</target>
        </trans-unit>
        <trans-unit id="844eeaa03b150d61a1dec94b193e6b5d08629643" translate="yes" xml:space="preserve">
          <source>Acknowledgement on the NumPy websites, in talks and T-shirts.</source>
          <target state="translated">NumPyのウェブサイト、トークやTシャツでの謝辞。</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">Acknowledgements</target>
        </trans-unit>
        <trans-unit id="31ff49fa2a3d36710d217dfe85bcc7762d3f75c1" translate="yes" xml:space="preserve">
          <source>Act in a personal manner rather than impersonal. The Committee can engage the parties to understand the situation, while respecting the privacy and any necessary confidentiality of reporters. However, sometimes it is necessary to communicate with one or more individuals directly: the Committee&amp;rsquo;s goal is to improve the health of our community rather than only produce a formal decision.</source>
          <target state="translated">非個人的ではなく、個人的な方法で行動します。委員会は、記者のプライバシーと必要な機密性を尊重しながら、状況を理解するために当事者を関与させることができます。ただし、1人以上の個人と直接連絡を取る必要がある場合もあります。委員会の目標は、正式な決定を下すだけでなく、コミュニティの健康を改善することです。</target>
        </trans-unit>
        <trans-unit id="87027afe8e11221fd277eedf54dfc7a529e08117" translate="yes" xml:space="preserve">
          <source>Active Contribution</source>
          <target state="translated">積極的な貢献</target>
        </trans-unit>
        <trans-unit id="aa2ea3cd76ddce3cf06fbf3bce969151533e5b38" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;--f2cmap&lt;/code&gt; option to F2PY</source>
          <target state="translated">F2PYに &lt;code&gt;--f2cmap&lt;/code&gt; オプションを追加します</target>
        </trans-unit>
        <trans-unit id="749a58c47a8dd0cc292c38c0a634def341d0ed8f" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;axis&lt;/code&gt; argument for &lt;code&gt;random.permutation&lt;/code&gt; and &lt;code&gt;random.shuffle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;random.permutation&lt;/code&gt; および &lt;code&gt;random.shuffle&lt;/code&gt; の &lt;code&gt;axis&lt;/code&gt; 引数を追加します</target>
        </trans-unit>
        <trans-unit id="b8403958021dde40e72e13864dbc8b3f72e0eefe" translate="yes" xml:space="preserve">
          <source>Add NumPy declarations for Cython 3.0 and later</source>
          <target state="translated">Cython 3.0以降のNumPy宣言の追加</target>
        </trans-unit>
        <trans-unit id="4370e4e5b7bbb232b4f4d48ccc718302bf70924f" translate="yes" xml:space="preserve">
          <source>Add a CPP &lt;code&gt;#include&lt;/code&gt; statement to the extension module source. &lt;code&gt;&amp;lt;includefile&amp;gt;&lt;/code&gt; should be given in one of the following forms:</source>
          <target state="translated">CPP &lt;code&gt;#include&lt;/code&gt; ステートメントを拡張モジュールソースに追加します。 &lt;code&gt;&amp;lt;includefile&amp;gt;&lt;/code&gt; は、次のいずれかの形式で指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="56ced59b1ab2a27a1e28eb186c93bb18811d3b07" translate="yes" xml:space="preserve">
          <source>Add a new suppressing filter or apply it if the state is entered.</source>
          <target state="translated">新たに抑制フィルタを追加するか、状態が入力されている場合に適用します。</target>
        </trans-unit>
        <trans-unit id="d043d90a01e9bb2a87e33e05fa61ed3580fe178f" translate="yes" xml:space="preserve">
          <source>Add a sub-package to the current Configuration instance.</source>
          <target state="translated">現在のConfigurationインスタンスにサブパッケージを追加します。</target>
        </trans-unit>
        <trans-unit id="a9f6e016bc697e252d23d45724a67632f941a1b2" translate="yes" xml:space="preserve">
          <source>Add an &lt;code&gt;endpoint&lt;/code&gt; kwarg</source>
          <target state="translated">&lt;code&gt;endpoint&lt;/code&gt; クワーグを追加する</target>
        </trans-unit>
        <trans-unit id="9f956ed6209cd99585bc85bb720e2d7310513e80" translate="yes" xml:space="preserve">
          <source>Add another &lt;code&gt;REL&lt;/code&gt; commit to the numpy maintenance branch, which resets the &lt;code&gt;ISREALEASED&lt;/code&gt; flag to &lt;code&gt;False&lt;/code&gt; and increments the version counter:</source>
          <target state="translated">numpyメンテナンスブランチに別の &lt;code&gt;REL&lt;/code&gt; コミットを追加します。これにより、 &lt;code&gt;ISREALEASED&lt;/code&gt; フラグが &lt;code&gt;False&lt;/code&gt; にリセットされ、バージョンカウンターがインクリメントされます。</target>
        </trans-unit>
        <trans-unit id="172bd14aa4230b0564de31fe6a966e3fb7e443b7" translate="yes" xml:space="preserve">
          <source>Add any relevant modified or new files using &lt;code&gt;git add modified_file&lt;/code&gt; (see &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-add.html&quot;&gt;git add&lt;/a&gt;). This puts the files into a staging area, which is a queue of files that will be added to your next commit. Only add files that have related, complete changes. Leave files with unfinished changes for later commits.</source>
          <target state="translated">&lt;code&gt;git add modified_file&lt;/code&gt; 使用して関連する変更済みファイルまたは新しいファイルを追加します（&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-add.html&quot;&gt;git addを&lt;/a&gt;参照）。これにより、ファイルがステージング領域に配置されます。これは、次のコミットに追加されるファイルのキューです。関連する完全な変更があるファイルのみを追加します。後のコミットのために、ファイルに未完成の変更を残します。</target>
        </trans-unit>
        <trans-unit id="519a7255bd3f55d1b7e212ac3f5b0f7f59ed48fd" translate="yes" xml:space="preserve">
          <source>Add arguments element-wise.</source>
          <target state="translated">要素ごとに引数を追加します。</target>
        </trans-unit>
        <trans-unit id="cb0920fa450263e851b43ed7155e1089200b8db1" translate="yes" xml:space="preserve">
          <source>Add complex number support for &lt;code&gt;numpy.fromfile&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.fromfile&lt;/code&gt; の複素数サポートを追加</target>
        </trans-unit>
        <trans-unit id="50b3692c36c19643f3b6826c502d20cb873a00b6" translate="yes" xml:space="preserve">
          <source>Add complex number support for &lt;code&gt;numpy.fromstring&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.fromstring&lt;/code&gt; の複素数サポートを追加</target>
        </trans-unit>
        <trans-unit id="cf5ce0052c3cb14c88808808de75ffbd43bea0ed" translate="yes" xml:space="preserve">
          <source>Add data files to configuration data_files.</source>
          <target state="translated">設定data_filesにデータファイルを追加します。</target>
        </trans-unit>
        <trans-unit id="183f96ee73e13f3bf92ac869adb47cd5569f51bb" translate="yes" xml:space="preserve">
          <source>Add debugging hooks to the extension module. When using this extension module, various information about the wrapper is printed to standard output, for example, the values of variables, the steps taken, etc.</source>
          <target state="translated">拡張モジュールにデバッグ・フックを追加します。この拡張モジュールを利用すると、ラッパーに関する様々な情報が標準出力に出力されます。</target>
        </trans-unit>
        <trans-unit id="0bf1db6c64e3d637dcfd111519ca8c0cba0474f8" translate="yes" xml:space="preserve">
          <source>Add directory &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; to the list of directories to be searched for &lt;code&gt;-l&lt;/code&gt;.</source>
          <target state="translated">検索するディレクトリのリストにディレクトリ &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; を追加します &lt;code&gt;-l&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="974de5ada8253a5d4e9c975a8b5b2b2cc87bc9f2" translate="yes" xml:space="preserve">
          <source>Add extension to configuration.</source>
          <target state="translated">設定に拡張機能を追加します。</target>
        </trans-unit>
        <trans-unit id="b24e0797845ace332ac782f3100ed9496873f75c" translate="yes" xml:space="preserve">
          <source>Add files to the list of data_files to be included with the package.</source>
          <target state="translated">パッケージに含まれるdata_filesのリストにファイルを追加します。</target>
        </trans-unit>
        <trans-unit id="de9c92ff48ec1f448d3de3a6ce6737feb051d5a9" translate="yes" xml:space="preserve">
          <source>Add helpful details for newcomers (&amp;ldquo;Hayseed Road&amp;rdquo;, even though it&amp;rsquo;s the only turnoff at three km/mi). But not irrelevant ones:</source>
          <target state="translated">新規参入者に役立つ詳細を追加します（「ヘイシードロード」は、3 km / miで唯一のターンオフですが）。しかし、無関係ではありません：</target>
        </trans-unit>
        <trans-unit id="ec6d39fc613a2412b3149971ccc3066ea668ccca" translate="yes" xml:space="preserve">
          <source>Add installable headers to configuration.</source>
          <target state="translated">設定にインストール可能なヘッダを追加します。</target>
        </trans-unit>
        <trans-unit id="192c191f7a03fc113ffda7fc0311b90dbf55dc23" translate="yes" xml:space="preserve">
          <source>Add items 0 and 1 in first array to second array, and store results in first array:</source>
          <target state="translated">第1の配列の項目0と1を第2の配列に追加し、結果を第1の配列に格納します。</target>
        </trans-unit>
        <trans-unit id="42403b1e1d797b817002a948120252be5c28e7af" translate="yes" xml:space="preserve">
          <source>Add library to configuration.</source>
          <target state="translated">設定にライブラリを追加します。</target>
        </trans-unit>
        <trans-unit id="d1dfd748a6e3ff92f6edfebfaf877b6caf59740c" translate="yes" xml:space="preserve">
          <source>Add more ufunc loops for &lt;code&gt;datetime64&lt;/code&gt;, &lt;code&gt;timedelta64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datetime64&lt;/code&gt; 、 &lt;code&gt;timedelta64&lt;/code&gt; のufuncループをさらに追加します</target>
        </trans-unit>
        <trans-unit id="19de96cbe2d4b3fa04504d8bde35329ce18443b1" translate="yes" xml:space="preserve">
          <source>Add new fields to an existing array.</source>
          <target state="translated">既存の配列に新しいフィールドを追加します。</target>
        </trans-unit>
        <trans-unit id="5b7fe78c0d04c481a155a2de8a41f3881621e224" translate="yes" xml:space="preserve">
          <source>Add new release notes to the documentation release list:</source>
          <target state="translated">ドキュメントのリリースリストに新しいリリースノートを追加します。</target>
        </trans-unit>
        <trans-unit id="d2f20ffde813ddf49b70fa6579528381531956ef" translate="yes" xml:space="preserve">
          <source>Add one Chebyshev series to another.</source>
          <target state="translated">チェビシェフシリーズを1つ追加します。</target>
        </trans-unit>
        <trans-unit id="fd817ff95924ec8272d634ce0e8ab2243af60b54" translate="yes" xml:space="preserve">
          <source>Add one Hermite series to another.</source>
          <target state="translated">1つのハーミットシリーズを別のシリーズに追加します。</target>
        </trans-unit>
        <trans-unit id="0b8b661c7b6f0c6c875176dc938142703c034819" translate="yes" xml:space="preserve">
          <source>Add one Laguerre series to another.</source>
          <target state="translated">1つのラゲールシリーズを別のシリーズに追加します。</target>
        </trans-unit>
        <trans-unit id="93d32b5903dcfaf0d99ed0343cee2fd7fd1ebf6a" translate="yes" xml:space="preserve">
          <source>Add one Legendre series to another.</source>
          <target state="translated">レジェンドレシリーズを1つ追加して</target>
        </trans-unit>
        <trans-unit id="0d912f77007b5acc37a22e3054240ae70a3da350" translate="yes" xml:space="preserve">
          <source>Add one polynomial to another.</source>
          <target state="translated">1つの多項式を別の多項式に追加します。</target>
        </trans-unit>
        <trans-unit id="73402d691bbf690c620406d2bfd9dcbfbc5cb4b0" translate="yes" xml:space="preserve">
          <source>Add options to quiet build configuration and build with &lt;code&gt;-Werror&lt;/code&gt;</source>
          <target state="translated">クワイエットビルド構成にオプションを追加し、 &lt;code&gt;-Werror&lt;/code&gt; を使用してビルドします</target>
        </trans-unit>
        <trans-unit id="8041fb737a2e0a0d3f536fb0552a96a43ffb7877" translate="yes" xml:space="preserve">
          <source>Add other to self in-place.</source>
          <target state="translated">インプレイスの自己に他を追加します。</target>
        </trans-unit>
        <trans-unit id="f6d36d753b402c69d5e17a3850443960310aff1c" translate="yes" xml:space="preserve">
          <source>Add other to self, and return a new masked array.</source>
          <target state="translated">selfにotherを追加し、新しいマスクされた配列を返します。</target>
        </trans-unit>
        <trans-unit id="67ed9f18f2b9b6c49a507bbf14619c0eb79b4e1c" translate="yes" xml:space="preserve">
          <source>Add our own &lt;code&gt;*.pxd&lt;/code&gt; cython import file</source>
          <target state="translated">独自の &lt;code&gt;*.pxd&lt;/code&gt; .pxdcythonインポートファイルを追加します</target>
        </trans-unit>
        <trans-unit id="38367eda00cb06221a825ac891db31d4b74dcd00" translate="yes" xml:space="preserve">
          <source>Add padding to the fields to match what a C compiler would output for a similar C-struct. Can be &lt;code&gt;True&lt;/code&gt; only if &lt;code&gt;obj&lt;/code&gt; is a dictionary or a comma-separated string. If a struct dtype is being created, this also sets a sticky alignment flag &lt;code&gt;isalignedstruct&lt;/code&gt;.</source>
          <target state="translated">Cコンパイラが類似のC構造体に対して出力するものと一致するように、フィールドにパディングを追加します。することができ &lt;code&gt;True&lt;/code&gt; 場合にのみ、 &lt;code&gt;obj&lt;/code&gt; が辞書やカンマ区切りの文字列です。struct dtypeが作成されている場合、これはスティッキーアライメントフラグ &lt;code&gt;isalignedstruct&lt;/code&gt; も設定します。</target>
        </trans-unit>
        <trans-unit id="eeb521c915ba75bbea5f83fd82b92d84dd986501" translate="yes" xml:space="preserve">
          <source>Add paths to configuration include directories.</source>
          <target state="translated">インクルードディレクトリを含む設定へのパスを追加します。</target>
        </trans-unit>
        <trans-unit id="0967ccc52cda50cec6242dcae20e3e663f6b35ba" translate="yes" xml:space="preserve">
          <source>Add scripts to configuration.</source>
          <target state="translated">設定にスクリプトを追加します。</target>
        </trans-unit>
        <trans-unit id="3dd9e8736f2494a49ed757670af12e62654adc57" translate="yes" xml:space="preserve">
          <source>Add self to other, and return a new masked array.</source>
          <target state="translated">selfをotherに追加し、新しいマスクされた配列を返します。</target>
        </trans-unit>
        <trans-unit id="867e6fef453e3af448d8c2735af394c1c3900828" translate="yes" xml:space="preserve">
          <source>Add the given sequence of files to the beginning of the headers list. By default, headers will be installed under &amp;lt;python- include&amp;gt;/&amp;lt;self.name.replace(&amp;lsquo;.&amp;rsquo;,&amp;rsquo;/&amp;rsquo;)&amp;gt;/ directory. If an item of files is a tuple, then its first argument specifies the actual installation location relative to the &amp;lt;python-include&amp;gt; path.</source>
          <target state="translated">ヘッダーリストの先頭に、指定された一連のファイルを追加します。デフォルトでは、ヘッダーは&amp;lt;python- include&amp;gt; / &amp;lt;self.name.replace（ '。'、 '/'）&amp;gt; /ディレクトリにインストールされます。ファイルのアイテムがタプルの場合、その最初の引数は、&amp;lt;python-include&amp;gt;パスを基準にした実際のインストール場所を指定します。</target>
        </trans-unit>
        <trans-unit id="12793661dc735a50f73c70cbbe55f373e9453216" translate="yes" xml:space="preserve">
          <source>Add the given sequence of paths to the beginning of the include_dirs list. This list will be visible to all extension modules of the current package.</source>
          <target state="translated">与えられた一連のパスを include_dirs リストの先頭に追加します。このリストは現在のパッケージのすべての拡張モジュールから見えるようになります。</target>
        </trans-unit>
        <trans-unit id="e621d32dc1acbceb0f631d5058189d13dfa7e90e" translate="yes" xml:space="preserve">
          <source>Add the sequence of files to the beginning of the scripts list. Scripts will be installed under the &amp;lt;prefix&amp;gt;/bin/ directory.</source>
          <target state="translated">ファイルのシーケンスをスクリプトリストの先頭に追加します。スクリプトは&amp;lt;prefix&amp;gt; / bin /ディレクトリの下にインストールされます。</target>
        </trans-unit>
        <trans-unit id="5697ae8fd006e560c4fa78bfff9101ae272744d4" translate="yes" xml:space="preserve">
          <source>Add the upstream repository:</source>
          <target state="translated">上流のリポジトリを追加します。</target>
        </trans-unit>
        <trans-unit id="b2053e237d1b39ed2a55606928e6ab390939f27e" translate="yes" xml:space="preserve">
          <source>Added Support</source>
          <target state="translated">サポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="2f1cf6cab2980b1934b9fc8b7e4e15ffc7a86fa0" translate="yes" xml:space="preserve">
          <source>Added in API version 0x0000000D</source>
          <target state="translated">APIバージョン0x0000000Dで追加</target>
        </trans-unit>
        <trans-unit id="2e363efb6a62f825b55e45a4c27ae9d8e6d08be0" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;optimize&lt;/code&gt; argument which will optimize the contraction order of an einsum expression. For a contraction with three or more operands this can greatly increase the computational efficiency at the cost of a larger memory footprint during computation.</source>
          <target state="translated">アインサム式の縮小順序を最適化する最適 &lt;code&gt;optimize&lt;/code&gt; 引数を追加しました。3つ以上のオペランドを持つ縮約の場合、これにより、計算中のメモリフットプリントが大きくなりますが、計算効率が大幅に向上します。</target>
        </trans-unit>
        <trans-unit id="ad5cc68af97702d37f636fcf82a8110d0c8c61d1" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;-1&lt;/code&gt; to missing data is not a problem with &lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt;&lt;code&gt;numpy.genfromtxt&lt;/code&gt;&lt;/a&gt;; in this particular case, substituting the missing value with &lt;code&gt;0&lt;/code&gt; might have been fine, but we&amp;rsquo;ll see later that this is far from a general solution. Also, it is possible to call the &lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt;&lt;code&gt;numpy.genfromtxt&lt;/code&gt;&lt;/a&gt; function using the &lt;code&gt;usemask&lt;/code&gt; parameter. If &lt;code&gt;usemask=True&lt;/code&gt;, &lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt;&lt;code&gt;numpy.genfromtxt&lt;/code&gt;&lt;/a&gt; automatically returns a masked array.</source>
          <target state="translated">欠落しているデータに &lt;code&gt;-1&lt;/code&gt; を追加しても、&lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt; &lt;code&gt;numpy.genfromtxt&lt;/code&gt; &lt;/a&gt;では問題ありません。この特定のケースでは、欠落している値を &lt;code&gt;0&lt;/code&gt; に置き換えることで問題がなかった可能性がありますが、これは一般的な解決策とはほど遠いことが後でわかります。また、呼び出すことが可能である&lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt; &lt;code&gt;numpy.genfromtxt&lt;/code&gt; の&lt;/a&gt;使用機能 &lt;code&gt;usemask&lt;/code&gt; のパラメータを。 &lt;code&gt;usemask=True&lt;/code&gt; の場合、&lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt; &lt;code&gt;numpy.genfromtxt&lt;/code&gt; &lt;/a&gt;はマスクされた配列を自動的に返します。</target>
        </trans-unit>
        <trans-unit id="1190df5112112b0d1382beaeaf5f8e64d6c7c049" translate="yes" xml:space="preserve">
          <source>Adding and removing elements</source>
          <target state="translated">要素の追加と削除</target>
        </trans-unit>
        <trans-unit id="c1384e951912ddff50db4d4a2e9cf7e21631086d" translate="yes" xml:space="preserve">
          <source>Adding arrays with identical datatypes currently preserves the metadata:</source>
          <target state="translated">同一のデータ型を持つ配列を追加すると、現在はメタデータが保持されます。</target>
        </trans-unit>
        <trans-unit id="8b54f7832c99a271681bb0f8b856a0654cbc5037" translate="yes" xml:space="preserve">
          <source>Adding self-written functions to F2PY generated modules</source>
          <target state="translated">F2PYで生成されたモジュールへの自作関数の追加</target>
        </trans-unit>
        <trans-unit id="4621824a58175000e5dba0d2e77fe3e5f3ec70c6" translate="yes" xml:space="preserve">
          <source>Adding the NumPy include directory is, of course, only necessary if you are using NumPy arrays in the extension module (which is what we assume you are using Cython for). The distutils extensions in NumPy also include support for automatically producing the extension-module and linking it from a &lt;code&gt;.pyx&lt;/code&gt; file. It works so that if the user does not have Cython installed, then it looks for a file with the same file-name but a &lt;code&gt;.c&lt;/code&gt; extension which it then uses instead of trying to produce the &lt;code&gt;.c&lt;/code&gt; file again.</source>
          <target state="translated">もちろん、NumPyインクルードディレクトリの追加は、拡張モジュールでNumPy配列を使用している場合にのみ必要です（これは、Cythonを使用していると想定しています）。NumPyのdistutils拡張機能には、拡張機能モジュールを自動的に生成し、それを &lt;code&gt;.pyx&lt;/code&gt; ファイルからリンクするためのサポートも含まれています。これは、ユーザーがCythonをインストールしていない場合、同じファイル名で拡張子が &lt;code&gt;.c&lt;/code&gt; のファイルを探し、 &lt;code&gt;.c&lt;/code&gt; ファイルを再度作成する代わりに使用するように機能します。</target>
        </trans-unit>
        <trans-unit id="4b71895b23af2e6dac13ac1dabde5dfa97ef31a6" translate="yes" xml:space="preserve">
          <source>Adding the following:</source>
          <target state="translated">を追加しました。</target>
        </trans-unit>
        <trans-unit id="1a1f79e4f6a891b31604f6ea4c404a7e6fa73442" translate="yes" xml:space="preserve">
          <source>Adding the new data-type</source>
          <target state="translated">新しいデータ型の追加</target>
        </trans-unit>
        <trans-unit id="4824b090270ada949083d342d40990d88b7df270" translate="yes" xml:space="preserve">
          <source>Adding, removing, and sorting elements</source>
          <target state="translated">要素の追加、削除、ソート</target>
        </trans-unit>
        <trans-unit id="32ceef7d48b3859f43536940686eb939e0f9e4ac" translate="yes" xml:space="preserve">
          <source>Addition and Subtraction:</source>
          <target state="translated">足し算と引き算。</target>
        </trans-unit>
        <trans-unit id="22bd32fa29554a353014e46723283f5f4bc31a97" translate="yes" xml:space="preserve">
          <source>Additional Git Resources</source>
          <target state="translated">その他の Git リソース</target>
        </trans-unit>
        <trans-unit id="943ad27e8678913fe7eb228609bd2761433c8790" translate="yes" xml:space="preserve">
          <source>Additional PEPs of interest regarding documentation of code:</source>
          <target state="translated">コードの文書化に関して関心のある追加のPEP。</target>
        </trans-unit>
        <trans-unit id="2e979316df7e66e1ac30d87235c1730e8f93451f" translate="yes" xml:space="preserve">
          <source>Additional arguments to &lt;code&gt;func1d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;func1d&lt;/code&gt; への追加の引数。</target>
        </trans-unit>
        <trans-unit id="0653feeb476220c2b8cc0d61fa9d5c2a3e3d87eb" translate="yes" xml:space="preserve">
          <source>Additional compiler flags can be supplied by setting the &lt;code&gt;OPT&lt;/code&gt;, &lt;code&gt;FOPT&lt;/code&gt; (for Fortran), and &lt;code&gt;CC&lt;/code&gt; environment variables. When providing options that should improve the performance of the code ensure that you also set &lt;code&gt;-DNDEBUG&lt;/code&gt; so that debugging code is not executed.</source>
          <target state="translated">追加のコンパイラフラグは、 &lt;code&gt;OPT&lt;/code&gt; 、 &lt;code&gt;FOPT&lt;/code&gt; （Fortranの場合）、および &lt;code&gt;CC&lt;/code&gt; 環境変数を設定することで提供できます。コードのパフォーマンスを向上させるオプションを提供する場合は、デバッグコードが実行されないように &lt;code&gt;-DNDEBUG&lt;/code&gt; も設定してください。</target>
        </trans-unit>
        <trans-unit id="68a981e7b29ec99e7c56c4183712362f5fbf6baa" translate="yes" xml:space="preserve">
          <source>Additional explanation of the deprecation. Displayed in the docstring after the warning.</source>
          <target state="translated">非推奨の説明を追加しました。警告の後にdocstringで表示されます。</target>
        </trans-unit>
        <trans-unit id="2f33c64b8e45a0b559c62344568b319008aa4e48" translate="yes" xml:space="preserve">
          <source>Additional named arguments to &lt;code&gt;func1d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;func1d&lt;/code&gt; への追加の名前付き引数。</target>
        </trans-unit>
        <trans-unit id="f72fdd362bc25072f22f9fddd447c271e3cf745d" translate="yes" xml:space="preserve">
          <source>Additional options to F2PY process can be given using &lt;a href=&quot;../reference/generated/numpy.distutils.core.extension#numpy.distutils.core.Extension&quot;&gt;&lt;code&gt;Extension&lt;/code&gt;&lt;/a&gt; class argument &lt;code&gt;f2py_options&lt;/code&gt;.</source>
          <target state="translated">F2PYプロセスへの追加オプションは、&lt;a href=&quot;../reference/generated/numpy.distutils.core.extension#numpy.distutils.core.Extension&quot;&gt; &lt;code&gt;Extension&lt;/code&gt; &lt;/a&gt;クラス引数 &lt;code&gt;f2py_options&lt;/code&gt; を使用して指定できます。</target>
        </trans-unit>
        <trans-unit id="16061f32da099969910de77a21ac334b7294cb1c" translate="yes" xml:space="preserve">
          <source>Additional options to F2PY process can be given using &lt;code&gt;Extension&lt;/code&gt; class argument &lt;code&gt;f2py_options&lt;/code&gt;.</source>
          <target state="translated">F2PYプロセスへの追加オプションは、 &lt;code&gt;Extension&lt;/code&gt; クラス引数 &lt;code&gt;f2py_options&lt;/code&gt; を使用して指定できます。</target>
        </trans-unit>
        <trans-unit id="8360099c899f3d900441aaafde42126fd18c8863" translate="yes" xml:space="preserve">
          <source>Additional parameters passed to f2py</source>
          <target state="translated">f2pyに渡される追加のパラメータ</target>
        </trans-unit>
        <trans-unit id="8f7e4fc57a96ab242b4632ad20c4e828c8034419" translate="yes" xml:space="preserve">
          <source>Additional things you might want to do</source>
          <target state="translated">追加でやっておいた方がいいこと</target>
        </trans-unit>
        <trans-unit id="3b93cbfe8c1c407afb6b3fd42b149622884bc056" translate="yes" xml:space="preserve">
          <source>Additional tools you may find useful</source>
          <target state="translated">便利なその他のツール</target>
        </trans-unit>
        <trans-unit id="b252a7a9b6c6c45a4e9286771ebe97b99f918e68" translate="yes" xml:space="preserve">
          <source>Additionally, for a 2D array, &lt;code&gt;tolist&lt;/code&gt; applies recursively:</source>
          <target state="translated">さらに、2D配列の場合、 &lt;code&gt;tolist&lt;/code&gt; は再帰的に適用されます。</target>
        </trans-unit>
        <trans-unit id="77eeb47ff400756f1cc853a603bed516744ec8be" translate="yes" xml:space="preserve">
          <source>Additionally, our implementations of &lt;code&gt;sum&lt;/code&gt; and &lt;code&gt;mean&lt;/code&gt; do not accept the optional arguments that numpy&amp;rsquo;s implementation does.</source>
          <target state="translated">さらに、 &lt;code&gt;sum&lt;/code&gt; と &lt;code&gt;mean&lt;/code&gt; の実装は、numpyの実装が行うオプションの引数を受け入れません。</target>
        </trans-unit>
        <trans-unit id="1b6f855c96ea61fde07e7f6094fffb0063607dcd" translate="yes" xml:space="preserve">
          <source>Adjusts the iterator to point to the &lt;code&gt;index&lt;/code&gt; specified. If the iterator was constructed with the flag &lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;index&lt;/code&gt; is the C-order index, and if the iterator was constructed with the flag &lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;index&lt;/code&gt; is the Fortran-order index. Returns an error if there is no index being tracked, the index is out of bounds, or inner loop iteration is disabled.</source>
          <target state="translated">指定された &lt;code&gt;index&lt;/code&gt; を指すようにイテレータを調整します。イテレーターがフラグ&lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;index&lt;/code&gt; された場合、indexはCオーダーのインデックスであり、イテレーターがフラグ&lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;index&lt;/code&gt; された場合、indexはFortranオーダーのインデックスです。追跡されているインデックスがない場合、インデックスが範囲外の場合、または内部ループの反復が無効になっている場合は、エラーを返します。</target>
        </trans-unit>
        <trans-unit id="c53e871abed99db7c60f0e6f2c2a24b11cc57547" translate="yes" xml:space="preserve">
          <source>Adjusts the iterator to point to the &lt;code&gt;iterindex&lt;/code&gt; specified. The IterIndex is an index matching the iteration order of the iterator. Returns an error if the &lt;code&gt;iterindex&lt;/code&gt; is out of bounds, buffering is enabled, or inner loop iteration is disabled.</source>
          <target state="translated">指定された &lt;code&gt;iterindex&lt;/code&gt; を指すようにイテレーターを調整します。IterIndexは、イテレーターの反復順序と一致するインデックスです。 &lt;code&gt;iterindex&lt;/code&gt; が範囲外の場合、バッファリングが有効な場合、または内部ループ反復が無効な場合は、エラーを返します。</target>
        </trans-unit>
        <trans-unit id="a44fa8caa936143e610fe1aa66906556f9b4b048" translate="yes" xml:space="preserve">
          <source>Adjusts the iterator to point to the &lt;code&gt;ndim&lt;/code&gt; indices pointed to by &lt;code&gt;multi_index&lt;/code&gt;. Returns an error if a multi-index is not being tracked, the indices are out of bounds, or inner loop iteration is disabled.</source>
          <target state="translated">反復子を調整して、 &lt;code&gt;ndim&lt;/code&gt; が指すndimインデックスを指すようにし &lt;code&gt;multi_index&lt;/code&gt; 。マルチインデックスが追跡されていない場合、インデックスが範囲外である場合、または内部ループの反復が無効になっている場合は、エラーを返します。</target>
        </trans-unit>
        <trans-unit id="390482652fc6614f94b8e0b5d3b8e3e7bc440efc" translate="yes" xml:space="preserve">
          <source>Advance each iterator in a multi-iterator object, &lt;em&gt;multi&lt;/em&gt;, to its next (broadcasted) element.</source>
          <target state="translated">マルチイテレータオブジェクト、各イテレータを進める&lt;em&gt;マルチ&lt;/em&gt;その次（ブロードキャスト）要素に、。</target>
        </trans-unit>
        <trans-unit id="1eb4a413c0c668de3526e3736ba4eab0d5ad4902" translate="yes" xml:space="preserve">
          <source>Advance each iterator in a multi-iterator object, &lt;em&gt;multi&lt;/em&gt;, to the corresponding location of the &lt;em&gt;index&lt;/em&gt; into the flattened broadcasted array.</source>
          <target state="translated">マルチイテレータオブジェクト、各イテレータを進める&lt;em&gt;複数&lt;/em&gt;の対応する場所に、&lt;em&gt;インデックス&lt;/em&gt;平坦放送配列へ。</target>
        </trans-unit>
        <trans-unit id="73bcba17a49d905680f64f4b64cd0da0763a1fdc" translate="yes" xml:space="preserve">
          <source>Advance each iterator in a multi-iterator object, &lt;em&gt;multi&lt;/em&gt;, to the given</source>
          <target state="translated">マルチイテレータオブジェクト、各イテレータを進める&lt;em&gt;マルチ&lt;/em&gt;与えられたため、</target>
        </trans-unit>
        <trans-unit id="d06248316b0b57b9742900b7804039e7df16e3f2" translate="yes" xml:space="preserve">
          <source>Advance the pointer of only the &lt;em&gt;i&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;i&lt;/em&gt;だけのポインタを進める&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd761b85cd8dca1120d21ecad95bbc6dec40fee8" translate="yes" xml:space="preserve">
          <source>Advance the underlying RNG as-if delta draws have occurred.</source>
          <target state="translated">デルタ引きが発生した場合は、基礎となるRNGを前進させます。</target>
        </trans-unit>
        <trans-unit id="aa7d72635ecc2119da5bd876bd1d64f8f7714d93" translate="yes" xml:space="preserve">
          <source>Advanced F2PY usages</source>
          <target state="translated">高度なF2PYの使用法</target>
        </trans-unit>
        <trans-unit id="e4a9df64655f2d3ba6fe67579fc92c420e65f624" translate="yes" xml:space="preserve">
          <source>Advanced Indexing</source>
          <target state="translated">高度なインデックス作成</target>
        </trans-unit>
        <trans-unit id="4ce4788ce6f50f77a6f632da07b0398738b3b58b" translate="yes" xml:space="preserve">
          <source>Advanced git workflow</source>
          <target state="translated">高度な git ワークフロー</target>
        </trans-unit>
        <trans-unit id="0922b66273cf1a5abf90475333bea716b31aac15" translate="yes" xml:space="preserve">
          <source>Advanced indexes always are &lt;a href=&quot;ufuncs#ufuncs-broadcasting&quot;&gt;broadcast&lt;/a&gt; and iterated as &lt;em&gt;one&lt;/em&gt;:</source>
          <target state="translated">高度なインデックスは常に&lt;a href=&quot;ufuncs#ufuncs-broadcasting&quot;&gt;ブロードキャスト&lt;/a&gt;され、&lt;em&gt;1つ&lt;/em&gt;として繰り返されます。</target>
        </trans-unit>
        <trans-unit id="999315f478c86ddb00ef69d19a9dca673920820f" translate="yes" xml:space="preserve">
          <source>Advanced indexing</source>
          <target state="translated">高度なインデックス作成</target>
        </trans-unit>
        <trans-unit id="21de090526b322676fb2cfd95fc96221e9a21c87" translate="yes" xml:space="preserve">
          <source>Advanced indexing always returns a &lt;em&gt;copy&lt;/em&gt; of the data (contrast with basic slicing that returns a &lt;a href=&quot;../glossary#term-view&quot;&gt;view&lt;/a&gt;).</source>
          <target state="translated">高度なインデックス作成では、常にデータの&lt;em&gt;コピー&lt;/em&gt;が返されます（&lt;a href=&quot;../glossary#term-view&quot;&gt;ビュー&lt;/a&gt;を返す基本的なスライスとは対照的です）。</target>
        </trans-unit>
        <trans-unit id="b8ba30d88906e0b53b1be5c5761d50dabce952b7" translate="yes" xml:space="preserve">
          <source>Advanced indexing always returns a &lt;em&gt;copy&lt;/em&gt; of the data (contrast with basic slicing that returns a &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-view&quot;&gt;view&lt;/a&gt;).</source>
          <target state="translated">高度なインデックス作成は常にデータの&lt;em&gt;コピー&lt;/em&gt;を返します（&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-view&quot;&gt;ビュー&lt;/a&gt;を返す基本的なスライスとは対照的です）。</target>
        </trans-unit>
        <trans-unit id="70dd0ae3ed6d0d82e5da36672eadd958cf6f9000" translate="yes" xml:space="preserve">
          <source>Advanced indexing and index tricks</source>
          <target state="translated">高度なインデックス作成とインデックスのトリック</target>
        </trans-unit>
        <trans-unit id="adb03decbf1f08def4c5022df624652f98eb5d13" translate="yes" xml:space="preserve">
          <source>Advanced indexing is handled with this Python type. It is simply a loose wrapper around the C-structure containing the variables needed for advanced array indexing. The associated C-structure, &lt;code&gt;PyArrayMapIterObject&lt;/code&gt;, is useful if you are trying to understand the advanced-index mapping code. It is defined in the &lt;code&gt;arrayobject.h&lt;/code&gt; header. This type is not exposed to Python and could be replaced with a C-structure. As a Python type it takes advantage of reference- counted memory management.</source>
          <target state="translated">高度なインデックス作成は、このPythonタイプで処理されます。これは、高度な配列のインデックス付けに必要な変数を含むC構造体の単なる緩いラッパーです。関連するC構造体 &lt;code&gt;PyArrayMapIterObject&lt;/code&gt; は、詳細インデックスマッピングコードを理解しようとしている場合に役立ちます。これは、 &lt;code&gt;arrayobject.h&lt;/code&gt; ヘッダーで定義されています。このタイプはPythonに公開されておらず、C構造で置き換えることができます。Python型として、参照カウントメモリ管理を利用します。</target>
        </trans-unit>
        <trans-unit id="4cbc11f3f0cea97e5215f4270cb134a05ddd8588" translate="yes" xml:space="preserve">
          <source>Advanced indexing is triggered when the selection object, &lt;em&gt;obj&lt;/em&gt;, is a non-tuple sequence object, an &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; (of data type integer or bool), or a tuple with at least one sequence object or ndarray (of data type integer or bool). There are two types of advanced indexing: integer and Boolean.</source>
          <target state="translated">選択オブジェクト&lt;em&gt;obj&lt;/em&gt;が非タプルシーケンスオブジェクト、&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;（データタイプintegerまたはbool）、または少なくとも1つのシーケンスオブジェクトまたはndarray（データタイプintegerまたはbool）を持つタプルである場合、高度なインデックス作成がトリガーされます。高度なインデックス付けには、整数とブールの2つのタイプがあります。</target>
        </trans-unit>
        <trans-unit id="7487a77bfb935b52fb14dc8f53970ff984697487" translate="yes" xml:space="preserve">
          <source>Advanced indexing using &lt;code&gt;np.newaxis&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;np.newaxis&lt;/code&gt; を使用した高度なインデックス作成</target>
        </trans-unit>
        <trans-unit id="49db59514c67a8d248601a700109ab8d9f639d3e" translate="yes" xml:space="preserve">
          <source>Advanced types, not listed in the table above, are explored in section &lt;a href=&quot;basics.rec#structured-arrays&quot;&gt;Structured arrays&lt;/a&gt;.</source>
          <target state="translated">上記の表にリストされていない高度なタイプについては、&lt;a href=&quot;basics.rec#structured-arrays&quot;&gt;構造化配列の&lt;/a&gt;セクションで説明しています。</target>
        </trans-unit>
        <trans-unit id="611a42a1d4f61c91b62b09d02ca4dcaf618fc419" translate="yes" xml:space="preserve">
          <source>Advancing a RNG updates the underlying RNG state as-if a given number of calls to the underlying RNG have been made. In general there is not a one-to-one relationship between the number output random values from a particular distribution and the number of draws from the core RNG. This occurs for two reasons:</source>
          <target state="translated">RNGを進めると、基礎となるRNGへの呼び出しが所定の回数行われた場合に、基礎となるRNGの状態が更新されます。一般的に、特定の分布から出力されるランダム値の数とコアRNGからの抽選の数の間には一対一の関係はありません。これには2つの理由があります。</target>
        </trans-unit>
        <trans-unit id="2a1491b2d39360f6989a2a9f95147bc552e01c99" translate="yes" xml:space="preserve">
          <source>Advancing the RNG state resets any pre-computed random numbers. This is required to ensure exact reproducibility.</source>
          <target state="translated">RNG状態を進めると、事前に計算された乱数がリセットされます。これは正確な再現性を確保するために必要です。</target>
        </trans-unit>
        <trans-unit id="1a4120f3629606a400253ccb499c731c935784fe" translate="yes" xml:space="preserve">
          <source>Advocating for, or encouraging, any of the above behaviour.</source>
          <target state="translated">上記の行動のいずれかを支持したり、奨励したりすること。</target>
        </trans-unit>
        <trans-unit id="a95973a9f50f3287c49850414751629648c88b21" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;make&lt;/code&gt; is used to build the testing extension modules, &lt;code&gt;testVector.py&lt;/code&gt; can be run to execute the tests. As with other scripts that use &lt;code&gt;unittest&lt;/code&gt; to facilitate unit testing, &lt;code&gt;testVector.py&lt;/code&gt; defines a class that inherits from &lt;code&gt;unittest.TestCase&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;make&lt;/code&gt; を使用してテスト拡張モジュールをビルドした後、 &lt;code&gt;testVector.py&lt;/code&gt; を実行してテストを実行できます。使用する他のスクリプトと同様に &lt;code&gt;unittest&lt;/code&gt; ユニットテストを容易にするために、 &lt;code&gt;testVector.py&lt;/code&gt; はから継承するクラスを定義し &lt;code&gt;unittest.TestCase&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="636c85c596b79ae6f6574b8dc87fd6d94d555ebe" translate="yes" xml:space="preserve">
          <source>After NumPy is installed, install SciPy since some of the plots in the random module require &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/special.html#module-scipy.special&quot;&gt;&lt;code&gt;scipy.special&lt;/code&gt;&lt;/a&gt; to display properly.</source>
          <target state="translated">NumPyをインストールした後、ランダムモジュールの一部のプロットが正しく表示するために&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/special.html#module-scipy.special&quot;&gt; &lt;code&gt;scipy.special&lt;/code&gt; &lt;/a&gt;を必要とするため、SciPyをインストールします。</target>
        </trans-unit>
        <trans-unit id="d6d2068ec50f610c03bd42928d12cabbde2c89d7" translate="yes" xml:space="preserve">
          <source>After a short pause, you should find yourself at the home page for your own forked copy of &lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy&lt;/a&gt;.</source>
          <target state="translated">少し間を置いた後、&lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPyの&lt;/a&gt;独自のフォークコピーのホームページが表示されます。</target>
        </trans-unit>
        <trans-unit id="6d57095cd6026d2b53a1fdab66bf0bf6d44aff56" translate="yes" xml:space="preserve">
          <source>After application of the broadcasting rules, the sizes of all arrays must match. More details can be found in &lt;a href=&quot;basics.broadcasting&quot;&gt;Broadcasting&lt;/a&gt;.</source>
          <target state="translated">ブロードキャストルールの適用後、すべてのアレイのサイズが一致する必要があります。詳細については、&lt;a href=&quot;basics.broadcasting&quot;&gt;Broadcastingを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7d0ec039eeaad7931248938dc00b5e241e033e8d" translate="yes" xml:space="preserve">
          <source>After application of the broadcasting rules, the sizes of all arrays must match. More details can be found in &lt;a href=&quot;basics.broadcasting#basics-broadcasting&quot;&gt;Broadcasting&lt;/a&gt;.</source>
          <target state="translated">ブロードキャストルールの適用後、すべての配列のサイズが一致する必要があります。詳細については、&lt;a href=&quot;basics.broadcasting#basics-broadcasting&quot;&gt;Broadcastingを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d95a5016bd3b1fa69cde64b52dc8446b4fe73b5a" translate="yes" xml:space="preserve">
          <source>After being allocated with this flag, the caller may retrieve the new array by calling &lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt;&lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt;&lt;/a&gt; and getting the i-th object in the returned C array. The caller must call Py_INCREF on it to claim a reference to the array.</source>
          <target state="translated">このフラグが割り当てられた後、呼び出し元は&lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt; &lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt; &lt;/a&gt;を呼び出して返されたC配列のi番目のオブジェクトを取得することにより、新しい配列を取得できます。呼び出し元は、配列への参照を要求するためにPy_INCREFを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="68eb223f793cecafa70b72b2b2cd87c7e3024552" translate="yes" xml:space="preserve">
          <source>After calling this function, &lt;code&gt;NpyIter_HasMultiIndex(iter)&lt;/code&gt; will return false.</source>
          <target state="translated">この関数を呼び出した後、 &lt;code&gt;NpyIter_HasMultiIndex(iter)&lt;/code&gt; はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="c90e047a5904835abb0e3a66bba8cc0c6a4b3394" translate="yes" xml:space="preserve">
          <source>After checking, the thread-specific global variables, the inputs are evaluated to determine how the ufunc should proceed and the input and output arrays are constructed if necessary. Any inputs which are not arrays are converted to arrays (using context if necessary). Which of the inputs are scalars (and therefore converted to 0-D arrays) is noted.</source>
          <target state="translated">スレッド固有のグローバル変数をチェックした後、入力が評価されて ufunc がどのように進むべきかが決定され、必要に応じて入力と出力の配列が構築されます。配列ではない入力は(必要に応じてコンテキストを用いて)配列に変換されます。どの入力がスカラであるか(したがって、0-D 配列に変換されるか)はメモされています。</target>
        </trans-unit>
        <trans-unit id="84eaa230a19f707fcc5c351e2944b878215aece7" translate="yes" xml:space="preserve">
          <source>After constructing the format_parser object, the dtype attribute is the converted data-type: &lt;code&gt;dtype = format_parser(formats, names, titles).dtype&lt;/code&gt;</source>
          <target state="translated">format_parserオブジェクトを作成した後、dtype属性は変換されたデータ型です： &lt;code&gt;dtype = format_parser(formats, names, titles).dtype&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd142d176605dc21ba846f25e9df980015a2719f" translate="yes" xml:space="preserve">
          <source>After contributing new benchmarks, you should test them locally before submitting a pull request.</source>
          <target state="translated">新しいベンチマークを投稿した後は、プルリクエストを提出する前にローカルでテストしてください。</target>
        </trans-unit>
        <trans-unit id="56447ff54e7f3e9b89df5d3ea4714230ebd85b65" translate="yes" xml:space="preserve">
          <source>After modifying &lt;code&gt;add.pyf&lt;/code&gt;, the new Python module file can be generated by compiling both &lt;code&gt;add.f&lt;/code&gt; and &lt;code&gt;add.pyf&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;add.pyf&lt;/code&gt; を変更した後、 &lt;code&gt;add.f&lt;/code&gt; と &lt;code&gt;add.pyf&lt;/code&gt; の両方をコンパイルすることで新しいPythonモジュールファイルを生成できます。</target>
        </trans-unit>
        <trans-unit id="cd68e22e2a7eb392af857647e5dec919b73769b8" translate="yes" xml:space="preserve">
          <source>After modifying &lt;code&gt;add.pyf&lt;/code&gt;, the new python module file can be generated by compiling both &lt;code&gt;add.f&lt;/code&gt; and &lt;code&gt;add.pyf&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;add.pyf&lt;/code&gt; を変更した後、 &lt;code&gt;add.f&lt;/code&gt; と &lt;code&gt;add.pyf&lt;/code&gt; の両方をコンパイルすることで新しいPythonモジュールファイルを生成できます。</target>
        </trans-unit>
        <trans-unit id="455eb55512bcb65b5c410bb05796baeb29acbfea" translate="yes" xml:space="preserve">
          <source>After preparation, getting and setting is relatively straight forward, although the different modes of iteration need to be considered. Unless there is only a single indexing array during item getting, the validity of the indices is checked beforehand. Otherwise it is handled in the inner loop itself for optimization.</source>
          <target state="translated">準備をした後は、異なるモードの反復を考慮する必要がありますが、取得と設定は比較的簡単です。項目取得時に単一のインデックス配列しかない場合を除いて、インデックスの有効性は事前にチェックされます。それ以外の場合は、最適化のために内部ループ自体で処理されます。</target>
        </trans-unit>
        <trans-unit id="0c2593a461de164c26a9bd4395fe7ae4e6420b19" translate="yes" xml:space="preserve">
          <source>After processing data at the current element of the array, the next element of the array can be obtained using the macro &lt;a href=&quot;../reference/c-api/array#c.PyArray_ITER_NEXT&quot;&gt;&lt;code&gt;PyArray_ITER_NEXT&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;iter&lt;/code&gt; ). The iteration always proceeds in a C-style contiguous fashion (last index varying the fastest). The &lt;a href=&quot;../reference/c-api/array#c.PyArray_ITER_GOTO&quot;&gt;&lt;code&gt;PyArray_ITER_GOTO&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;iter&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt; ) can be used to jump to a particular point in the array, where &lt;code&gt;destination&lt;/code&gt; is an array of npy_intp data-type with space to handle at least the number of dimensions in the underlying array. Occasionally it is useful to use &lt;a href=&quot;../reference/c-api/array#c.PyArray_ITER_GOTO1D&quot;&gt;&lt;code&gt;PyArray_ITER_GOTO1D&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;iter&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt; ) which will jump to the 1-d index given by the value of &lt;code&gt;index&lt;/code&gt;. The most common usage, however, is given in the following example.</source>
          <target state="translated">配列の現在の要素でデータを処理した後、マクロ&lt;a href=&quot;../reference/c-api/array#c.PyArray_ITER_NEXT&quot;&gt; &lt;code&gt;PyArray_ITER_NEXT&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;iter&lt;/code&gt; ）を使用して配列の次の要素を取得できます。反復は常にCスタイルの連続した方法で進行します（最後のインデックスが最も速く変化します）。&lt;a href=&quot;../reference/c-api/array#c.PyArray_ITER_GOTO&quot;&gt; &lt;code&gt;PyArray_ITER_GOTO&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;iter&lt;/code&gt; 、 &lt;code&gt;destination&lt;/code&gt; ）配列内の特定のポイントにジャンプするために使用することができる &lt;code&gt;destination&lt;/code&gt; 、基礎となる配列の次元の少なくとも数ハンドルに空間を有するnpy_intpデータ型の配列です。時折、&lt;a href=&quot;../reference/c-api/array#c.PyArray_ITER_GOTO1D&quot;&gt; &lt;code&gt;PyArray_ITER_GOTO1D&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;iter&lt;/code&gt; 、 &lt;code&gt;index&lt;/code&gt; ）を使用すると便利です。これは、の値で指定された1次元インデックスにジャンプします。 &lt;code&gt;index&lt;/code&gt; 。ただし、最も一般的な使用法を次の例に示します。</target>
        </trans-unit>
        <trans-unit id="9819d71768a6909b8f1fb8eced733e894e00b1f0" translate="yes" xml:space="preserve">
          <source>After reading, you should be able to:</source>
          <target state="translated">読んだ後は、次のことができるようになります。</target>
        </trans-unit>
        <trans-unit id="16d173e349e6d8f7bad31a91c896cab0609e07c9" translate="yes" xml:space="preserve">
          <source>After the above has been installed, it can be imported and used as follows.</source>
          <target state="translated">上記をインストールした後、以下のようにインポートして使用することができます。</target>
        </trans-unit>
        <trans-unit id="e95782b0d249dfaa80b7a2dd2b91658ce77729a7" translate="yes" xml:space="preserve">
          <source>After the final release</source>
          <target state="translated">最終リリース後</target>
        </trans-unit>
        <trans-unit id="4d680aaff82c687dd72450b9e14045805107da54" translate="yes" xml:space="preserve">
          <source>After the final release is announced, a few administrative tasks are left to be done:</source>
          <target state="translated">最終リリースが発表された後には、いくつかの管理業務が残されています。</target>
        </trans-unit>
        <trans-unit id="38ee242b1e395e865043dafe24f53eebf7d98289" translate="yes" xml:space="preserve">
          <source>After the input arguments are processed, the code that actually does the work is written (likely calling other functions as needed). The final step of the C-function is to return something. If an error is encountered then &lt;code&gt;NULL&lt;/code&gt; should be returned (making sure an error has actually been set). If nothing should be returned then increment &lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt;&lt;code&gt;Py_None&lt;/code&gt;&lt;/a&gt; and return it. If a single object should be returned then it is returned (ensuring that you own a reference to it first). If multiple objects should be returned then you need to return a tuple. The &lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.Py_BuildValue&quot;&gt;&lt;code&gt;Py_BuildValue&lt;/code&gt;&lt;/a&gt; (format_string, c_variables&amp;hellip;) function makes it easy to build tuples of Python objects from C variables. Pay special attention to the difference between &amp;lsquo;N&amp;rsquo; and &amp;lsquo;O&amp;rsquo; in the format string or you can easily create memory leaks. The &amp;lsquo;O&amp;rsquo; format string increments the reference count of the &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; C-variable it corresponds to, while the &amp;lsquo;N&amp;rsquo; format string steals a reference to the corresponding &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; C-variable. You should use &amp;lsquo;N&amp;rsquo; if you have already created a reference for the object and just want to give that reference to the tuple. You should use &amp;lsquo;O&amp;rsquo; if you only have a borrowed reference to an object and need to create one to provide for the tuple.</source>
          <target state="translated">入力引数が処理された後、実際に作業を行うコードが記述されます（必要に応じて他の関数を呼び出す可能性があります）。C関数の最後のステップは、何かを返すことです。エラーが発生した場合は、 &lt;code&gt;NULL&lt;/code&gt; を返す必要があります（エラーが実際に設定されていることを確認してください）。何も返さない場合は、&lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt; &lt;code&gt;Py_None&lt;/code&gt; &lt;/a&gt;をインクリメントして返します。単一のオブジェクトを返す必要がある場合は、それが返されます（最初にそのオブジェクトへの参照を所有していることを確認してください）。複数のオブジェクトを返す必要がある場合は、タプルを返す必要があります。&lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.Py_BuildValue&quot;&gt; &lt;code&gt;Py_BuildValue&lt;/code&gt; &lt;/a&gt;（format_string、c_variables&amp;hellip;）関数を使用すると、C変数からPythonオブジェクトのタプルを簡単に作成できます。フォーマット文字列の「N」と「O」の違いに特に注意してください。そうしないと、メモリリークが簡単に発生する可能性があります。 「O」フォーマット文字列は、対応する&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt; C変数の参照カウントをインクリメントし、「N」フォーマット文字列は、対応する&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt; C変数への参照を盗みます。オブジェクトの参照をすでに作成していて、その参照をタプルに与えるだけの場合は、「N」を使用する必要があります。オブジェクトへの借用参照のみがあり、タプルを提供するためにオブジェクトを作成する必要がある場合は、「O」を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="697b44505fd313d9b8c894a494c99e13592310d3" translate="yes" xml:space="preserve">
          <source>After this call, iter-&amp;gt;dataptr points to the next point of the neighborhood. Calling this function after every point of the neighborhood has been visited is undefined.</source>
          <target state="translated">この呼び出しの後、iter-&amp;gt; dataptrは近傍の次のポイントを指します。近所のすべてのポイントを訪れた後にこの関数を呼び出すことは未定義です。</target>
        </trans-unit>
        <trans-unit id="0fe601eacfd3a15b153c497e6624cb578134ef4f" translate="yes" xml:space="preserve">
          <source>After this tutorial, you should be able to:</source>
          <target state="translated">このチュートリアルの後、あなたはできるようになるはずです。</target>
        </trans-unit>
        <trans-unit id="521a8dcc62f52bfdf554721e71118cca11cdce65" translate="yes" xml:space="preserve">
          <source>After you have defined a new Python type object, you must then define a new &lt;a href=&quot;../reference/c-api/types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr&lt;/code&gt;&lt;/a&gt; structure whose typeobject member will contain a pointer to the data-type you&amp;rsquo;ve just defined. In addition, the required functions in the &amp;ldquo;.f&amp;rdquo; member must be defined: nonzero, copyswap, copyswapn, setitem, getitem, and cast. The more functions in the &amp;ldquo;.f&amp;rdquo; member you define, however, the more useful the new data-type will be. It is very important to initialize unused functions to NULL. This can be achieved using &lt;a href=&quot;../reference/c-api/array#c.PyArray_InitArrFuncs&quot;&gt;&lt;code&gt;PyArray_InitArrFuncs&lt;/code&gt;&lt;/a&gt; (f).</source>
          <target state="translated">新しいPythonタイプオブジェクトを定義したら、新しい&lt;a href=&quot;../reference/c-api/types-and-structures#c.PyArray_Descr&quot;&gt; &lt;code&gt;PyArray_Descr&lt;/code&gt; &lt;/a&gt;構造を定義する必要があります。この構造のタイプオブジェクトメンバーには、定義したデータ型へのポインターが含まれます。さらに、「。f」メンバーに必要な関数（nonzero、copyswap、copyswapn、setitem、getitem、およびcast）を定義する必要があります。ただし、定義する「.f」メンバーの関数が多いほど、新しいデータ型の有用性が高まります。未使用の関数をNULLに初期化することは非常に重要です。これは、&lt;a href=&quot;../reference/c-api/array#c.PyArray_InitArrFuncs&quot;&gt; &lt;code&gt;PyArray_InitArrFuncs&lt;/code&gt; &lt;/a&gt;（f）を使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="54ae9eda3128d1b34b4a48ecba6759be6c9803cd" translate="yes" xml:space="preserve">
          <source>After you have finished reviewing, if you want to ask for the submitter to make changes, change your review status to &amp;ldquo;Changes requested.&amp;rdquo; This can be done on GitHub, PR page, Files changed tab, Review changes (button on the top right).</source>
          <target state="translated">レビューが終了した後、送信者に変更を依頼する場合は、レビューステータスを「変更が要求されました」に変更します。これは、GitHub、PRページ、[ファイルの変更]タブ、[変更の確認]（右上のボタン）で実行できます。</target>
        </trans-unit>
        <trans-unit id="0b9513877fd0ed1a40b8e9bf67003ecbb52357dd" translate="yes" xml:space="preserve">
          <source>Again, the hardware error flags are checked at the end of each 1-D loop.</source>
          <target state="translated">繰り返しになりますが、各1-Dループの最後にハードウェアエラーフラグがチェックされています。</target>
        </trans-unit>
        <trans-unit id="a858809876e8ca33d95a13b92b91d9e06506bf6f" translate="yes" xml:space="preserve">
          <source>Agree on a release schedule</source>
          <target state="translated">リリーススケジュールの合意</target>
        </trans-unit>
        <trans-unit id="7ef51dda5a44862684039216f84f183b76a80b26" translate="yes" xml:space="preserve">
          <source>Aimed at domain experts or people migrating to NumPy</source>
          <target state="translated">ドメインエキスパートやNumPyへの移行者を対象としています。</target>
        </trans-unit>
        <trans-unit id="3143b25d1a77f9836cd54d8380d781cf28018611" translate="yes" xml:space="preserve">
          <source>Airspeed Velocity manages building and Python virtualenvs by itself, unless told otherwise. Some of the benchmarking features in &lt;code&gt;runtests.py&lt;/code&gt; also tell ASV to use the NumPy compiled by &lt;code&gt;runtests.py&lt;/code&gt;. To run the benchmarks, you do not need to install a development version of NumPy to your current Python environment.</source>
          <target state="translated">Airspeed Velocityは、特に明記されていない限り、ビルドとPythonvirtualenvを単独で管理します。ベンチマーク機能の一部 &lt;code&gt;runtests.py&lt;/code&gt; はまた、numpyのがコンパイルによって使用するASVを伝える &lt;code&gt;runtests.py&lt;/code&gt; 。ベンチマークを実行するために、現在のPython環境にNumPyの開発バージョンをインストールする必要はありません。</target>
        </trans-unit>
        <trans-unit id="f93e37512c349fabdaaef9618ea22ae5babb455c" translate="yes" xml:space="preserve">
          <source>Alex Griffing (2015-2017)</source>
          <target state="translated">アレックス・グリフィング(2015-2017</target>
        </trans-unit>
        <trans-unit id="8366cf5fbe2fd64d60dc44a0b1acd5bdcd5ccf6a" translate="yes" xml:space="preserve">
          <source>Alex Griffing (served: 2015-2017)</source>
          <target state="translated">アレックス・グリフィン(在任:2015年~2017年</target>
        </trans-unit>
        <trans-unit id="15999ccd033219cd638f144231839361b543c152" translate="yes" xml:space="preserve">
          <source>Algebra</source>
          <target state="translated">Algebra</target>
        </trans-unit>
        <trans-unit id="04259816ace1ebe56c853a8763558570c008514a" translate="yes" xml:space="preserve">
          <source>Alias</source>
          <target state="translated">Alias</target>
        </trans-unit>
        <trans-unit id="5d21032a49ecef3de054fb37902be6d2de0b84fd" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#numpy.clongdouble&quot;&gt;&lt;code&gt;numpy.clongdouble&lt;/code&gt;&lt;/a&gt;, named after its size in bits. The existance of these aliases depends on the platform.</source>
          <target state="translated">&lt;a href=&quot;#numpy.clongdouble&quot;&gt; &lt;code&gt;numpy.clongdouble&lt;/code&gt; の&lt;/a&gt;エイリアスで、ビット単位のサイズにちなんで名付けられています。これらのエイリアスの存在は、プラットフォームによって異なります。</target>
        </trans-unit>
        <trans-unit id="12f7878ae7615fa2ad02f41815a9f80f09bb3c0b" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#numpy.longdouble&quot;&gt;&lt;code&gt;numpy.longdouble&lt;/code&gt;&lt;/a&gt;, named after its size in bits. The existence of these aliases depends on the platform.</source>
          <target state="translated">&lt;a href=&quot;#numpy.longdouble&quot;&gt; &lt;code&gt;numpy.longdouble&lt;/code&gt; の&lt;/a&gt;エイリアスで、ビット単位のサイズにちなんで名付けられています。これらのエイリアスの存在は、プラットフォームによって異なります。</target>
        </trans-unit>
        <trans-unit id="9e977544bb11abd40aa27a0e17f3a1e6f9d61990" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;numpy.random.generator.random#numpy.random.Generator.random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numpy.random.generator.random#numpy.random.Generator.random&quot;&gt; &lt;code&gt;random&lt;/code&gt; &lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="67d7f23a72a8843faf44deebd6c5b5926eb14ec8" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;numpy.random.mtrand.randomstate.random_sample#numpy.random.mtrand.RandomState.random_sample&quot;&gt;&lt;code&gt;random_sample&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numpy.random.mtrand.randomstate.random_sample#numpy.random.mtrand.RandomState.random_sample&quot;&gt; &lt;code&gt;random_sample&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="fe309eb61feba56d0836f1b2c95adfc2991a2b5a" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;numpy.random.random_sample#numpy.random.random_sample&quot;&gt;&lt;code&gt;random_sample&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numpy.random.random_sample#numpy.random.random_sample&quot;&gt; &lt;code&gt;random_sample&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="a5fb6088b0c82c76aa11a9dcfc145f34120a38b4" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;numpy.random.randomstate.random_sample#numpy.random.RandomState.random_sample&quot;&gt;&lt;code&gt;random_sample&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numpy.random.randomstate.random_sample#numpy.random.RandomState.random_sample&quot;&gt; &lt;code&gt;random_sample&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="7e56683c1e18fe1cca5f2fe9851f948516320b79" translate="yes" xml:space="preserve">
          <source>Alias for the signed integer type (one of &lt;a href=&quot;#numpy.byte&quot;&gt;&lt;code&gt;numpy.byte&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.short&quot;&gt;&lt;code&gt;numpy.short&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.intc&quot;&gt;&lt;code&gt;numpy.intc&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.int_&quot;&gt;&lt;code&gt;numpy.int_&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;np.longlong&lt;/code&gt;) that is the same size as a pointer.</source>
          <target state="translated">ポインタと同じサイズの符号付き整数型（&lt;a href=&quot;#numpy.byte&quot;&gt; &lt;code&gt;numpy.byte&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.short&quot;&gt; &lt;code&gt;numpy.short&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.intc&quot;&gt; &lt;code&gt;numpy.intc&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.int_&quot;&gt; &lt;code&gt;numpy.int_&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;np.longlong&lt;/code&gt; のいずれか）のエイリアス。</target>
        </trans-unit>
        <trans-unit id="e11ab6e8b1cb36d3287744a481226ea77503f965" translate="yes" xml:space="preserve">
          <source>Alias for the unsigned integer type (one of &lt;a href=&quot;#numpy.byte&quot;&gt;&lt;code&gt;numpy.byte&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.short&quot;&gt;&lt;code&gt;numpy.short&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.intc&quot;&gt;&lt;code&gt;numpy.intc&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.int_&quot;&gt;&lt;code&gt;numpy.int_&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;np.longlong&lt;/code&gt;) that is the same size as a pointer.</source>
          <target state="translated">ポインタと同じサイズの符号なし整数型（&lt;a href=&quot;#numpy.byte&quot;&gt; &lt;code&gt;numpy.byte&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.short&quot;&gt; &lt;code&gt;numpy.short&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.intc&quot;&gt; &lt;code&gt;numpy.intc&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.int_&quot;&gt; &lt;code&gt;numpy.int_&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;np.longlong&lt;/code&gt; のいずれか）のエイリアス。</target>
        </trans-unit>
        <trans-unit id="dd96d593089d1897d9f1a1b1e5ce6a97032c718f" translate="yes" xml:space="preserve">
          <source>Alias for the unsigned integer types (one of &lt;a href=&quot;#numpy.byte&quot;&gt;&lt;code&gt;numpy.byte&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.short&quot;&gt;&lt;code&gt;numpy.short&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.intc&quot;&gt;&lt;code&gt;numpy.intc&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.int_&quot;&gt;&lt;code&gt;numpy.int_&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#numpy.longlong&quot;&gt;&lt;code&gt;numpy.longlong&lt;/code&gt;&lt;/a&gt;) with the specified number of bits.</source>
          <target state="translated">指定されたビット数の符号なし整数型（&lt;a href=&quot;#numpy.byte&quot;&gt; &lt;code&gt;numpy.byte&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.short&quot;&gt; &lt;code&gt;numpy.short&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.intc&quot;&gt; &lt;code&gt;numpy.intc&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.int_&quot;&gt; &lt;code&gt;numpy.int_&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.longlong&quot;&gt; &lt;code&gt;numpy.longlong&lt;/code&gt; のいずれか&lt;/a&gt;）のエイリアス。</target>
        </trans-unit>
        <trans-unit id="2615477a59d94e07f87d8e76d7a88eff31bdc890" translate="yes" xml:space="preserve">
          <source>Alias on this platform</source>
          <target state="translated">このプラットフォームでのエイリアス</target>
        </trans-unit>
        <trans-unit id="6b7fb07ff883bca85d0fccd0822fbb8018f3186d" translate="yes" xml:space="preserve">
          <source>Alias to isMaskedArray.</source>
          <target state="translated">isMaskedArrayのエイリアスです。</target>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="fba36176b4a9c759d4fcc72655567ebf82febab0" translate="yes" xml:space="preserve">
          <source>Aliases for column names. For example, if &lt;code&gt;names&lt;/code&gt; were &lt;code&gt;('x', 'y', 'z')&lt;/code&gt; and &lt;code&gt;titles&lt;/code&gt; is &lt;code&gt;('x_coordinate', 'y_coordinate', 'z_coordinate')&lt;/code&gt;, then &lt;code&gt;arr['x']&lt;/code&gt; is equivalent to both &lt;code&gt;arr.x&lt;/code&gt; and &lt;code&gt;arr.x_coordinate&lt;/code&gt;.</source>
          <target state="translated">列名のエイリアス。たとえば、 &lt;code&gt;names&lt;/code&gt; が &lt;code&gt;('x', 'y', 'z')&lt;/code&gt; 、 &lt;code&gt;titles&lt;/code&gt; が &lt;code&gt;('x_coordinate', 'y_coordinate', 'z_coordinate')&lt;/code&gt; 場合、 &lt;code&gt;arr['x']&lt;/code&gt; は両方の &lt;code&gt;arr.x&lt;/code&gt; と同等です。および &lt;code&gt;arr.x_coordinate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d351cb2af52126fcf568f2f07224e63d83d817df" translate="yes" xml:space="preserve">
          <source>Aliases for functions which may be accelerated by SciPy.</source>
          <target state="translated">SciPyで高速化される可能性のある関数の別名。</target>
        </trans-unit>
        <trans-unit id="7c5bb328be3f290ae38f62da3e4ece591ab22fc8" translate="yes" xml:space="preserve">
          <source>Aliases for functions which may be accelerated by Scipy.</source>
          <target state="translated">Scipyで高速化される可能性のある関数のエイリアス。</target>
        </trans-unit>
        <trans-unit id="58cb5cabb707dc2fca99d0a3efb823bf212c1389" translate="yes" xml:space="preserve">
          <source>Aliases for the signed integer types (one of &lt;a href=&quot;#numpy.byte&quot;&gt;&lt;code&gt;numpy.byte&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.short&quot;&gt;&lt;code&gt;numpy.short&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.intc&quot;&gt;&lt;code&gt;numpy.intc&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.int_&quot;&gt;&lt;code&gt;numpy.int_&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#numpy.longlong&quot;&gt;&lt;code&gt;numpy.longlong&lt;/code&gt;&lt;/a&gt;) with the specified number of bits.</source>
          <target state="translated">指定されたビット数の符号付き整数型（&lt;a href=&quot;#numpy.byte&quot;&gt; &lt;code&gt;numpy.byte&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.short&quot;&gt; &lt;code&gt;numpy.short&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.intc&quot;&gt; &lt;code&gt;numpy.intc&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.int_&quot;&gt; &lt;code&gt;numpy.int_&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.longlong&quot;&gt; &lt;code&gt;numpy.longlong&lt;/code&gt; のいずれか&lt;/a&gt;）のエイリアス。</target>
        </trans-unit>
        <trans-unit id="13b88c72578e1bc088ddcd72007a263c4697a72b" translate="yes" xml:space="preserve">
          <source>Align the fields in memory as the C-compiler would.</source>
          <target state="translated">Cコンパイラが行うように、メモリ内のフィールドを整列させます。</target>
        </trans-unit>
        <trans-unit id="f3cba54c6d1af128e2fd6357be91e0ede30e9060" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;N&lt;/code&gt; elements of the matrix are placed into a single row.</source>
          <target state="translated">行列のすべての &lt;code&gt;N&lt;/code&gt; 要素が1行に配置されます。</target>
        </trans-unit>
        <trans-unit id="acddbf25025c4514b513776312b69fb5576c2571" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;NPY_SIZEOF_{CTYPE}&lt;/code&gt; constants have corresponding &lt;code&gt;NPY_BITSOF_{CTYPE}&lt;/code&gt; constants defined. The &lt;code&gt;NPY_BITSOF_{CTYPE}&lt;/code&gt; constants provide the number of bits in the data type. Specifically, the available &lt;code&gt;{CTYPE}s&lt;/code&gt; are</source>
          <target state="translated">すべての &lt;code&gt;NPY_SIZEOF_{CTYPE}&lt;/code&gt; 定数には、対応する &lt;code&gt;NPY_BITSOF_{CTYPE}&lt;/code&gt; 定数が定義されています。 &lt;code&gt;NPY_BITSOF_{CTYPE}&lt;/code&gt; 定数は、データ型のビット数を提供します。具体的には、利用可能な &lt;code&gt;{CTYPE}s&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="67b5ec265e79518c863e69eb7c6072155f6cfc03" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;fortran&lt;/code&gt; type objects have attribute &lt;code&gt;_cpointer&lt;/code&gt; that contains CObject referring to the C pointer of the corresponding Fortran/C function or variable in C level. Such CObjects can be used as a callback argument of F2PY generated functions to bypass Python C/API layer of calling Python functions from Fortran or C when the computational part of such functions is implemented in C or Fortran and wrapped with F2PY (or any other tool capable of providing CObject of a function).</source>
          <target state="translated">すべての &lt;code&gt;fortran&lt;/code&gt; タイプのオブジェクトには、対応するFortran / C関数またはCレベルの変数のCポインターを参照するCObjectを含む属性 &lt;code&gt;_cpointer&lt;/code&gt; があります。このようなCObjectは、F2PYで生成された関数のコールバック引数として使用できます。このような関数の計算部分がCまたはFortranで実装され、F2PY（またはその他のツール）でラップされている場合、FortranまたはCからPython関数を呼び出すPython C / APIレイヤーをバイパスします。関数のCObjectを提供できます）。</target>
        </trans-unit>
        <trans-unit id="3eda1f1204e846a63c393c972b4900dcc5fc8b0c" translate="yes" xml:space="preserve">
          <source>All BitGenerators can produce doubles, uint64s and uint32s via CTypes (&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.ctypes#numpy.random.PCG64.ctypes&quot;&gt;&lt;code&gt;PCG64.ctypes&lt;/code&gt;&lt;/a&gt;) and CFFI (&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.cffi#numpy.random.PCG64.cffi&quot;&gt;&lt;code&gt;PCG64.cffi&lt;/code&gt;&lt;/a&gt;). This allows the bit generators to be used in numba.</source>
          <target state="translated">すべてのBitGeneratorは、CTypes（&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.ctypes#numpy.random.PCG64.ctypes&quot;&gt; &lt;code&gt;PCG64.ctypes&lt;/code&gt; &lt;/a&gt;）およびCFFI（&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.cffi#numpy.random.PCG64.cffi&quot;&gt; &lt;code&gt;PCG64.cffi&lt;/code&gt; &lt;/a&gt;）を介してdouble、uint64s、およびuint32sを生成できます。これにより、ビットジェネレータをnumbaで使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="be76fffeff958a29e1cfac06d834cba1ca2ac9cb" translate="yes" xml:space="preserve">
          <source>All BitGenerators can produce doubles, uint64s and uint32s via CTypes (&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.pcg64.ctypes#numpy.random.pcg64.PCG64.ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;) and CFFI (&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.pcg64.cffi#numpy.random.pcg64.PCG64.cffi&quot;&gt;&lt;code&gt;cffi&lt;/code&gt;&lt;/a&gt;). This allows the bit generators to be used in numba.</source>
          <target state="translated">すべてのBitGeneratorは、CTypes（&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.pcg64.ctypes#numpy.random.pcg64.PCG64.ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;）およびCFFI（&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.pcg64.cffi#numpy.random.pcg64.PCG64.cffi&quot;&gt; &lt;code&gt;cffi&lt;/code&gt; &lt;/a&gt;）を介してdouble、uint64およびuint32を生成できます。これにより、numbaでビットジェネレーターを使用できます。</target>
        </trans-unit>
        <trans-unit id="c9bb8ae0504c4fd355ed5e394a6eda23387682d2" translate="yes" xml:space="preserve">
          <source>All BitGenerators in numpy use &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; to convert seeds into initialized states.</source>
          <target state="translated">numpyのすべてのBitGeneratorは、&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;を使用してシードを初期化された状態に変換します。</target>
        </trans-unit>
        <trans-unit id="42f60d8d5c75ba55b3aae96d540c38c0afd3075e" translate="yes" xml:space="preserve">
          <source>All C-structures corresponding to Python objects must begin with &lt;a href=&quot;../reference/c-api/types-and-structures#c.PyObject_HEAD&quot;&gt;&lt;code&gt;PyObject_HEAD&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_VAR_HEAD&quot;&gt;&lt;code&gt;PyObject_VAR_HEAD&lt;/code&gt;&lt;/a&gt;). In the same way, any sub-type must have a C-structure that begins with exactly the same memory layout as the parent type (or all of the parent types in the case of multiple-inheritance). The reason for this is that Python may attempt to access a member of the sub-type structure as if it had the parent structure ( &lt;em&gt;i.e.&lt;/em&gt; it will cast a given pointer to a pointer to the parent structure and then dereference one of it&amp;rsquo;s members). If the memory layouts are not compatible, then this attempt will cause unpredictable behavior (eventually leading to a memory violation and program crash).</source>
          <target state="translated">Pythonオブジェクトに対応するすべてのC構造体は、&lt;a href=&quot;../reference/c-api/types-and-structures#c.PyObject_HEAD&quot;&gt; &lt;code&gt;PyObject_HEAD&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_VAR_HEAD&quot;&gt; &lt;code&gt;PyObject_VAR_HEAD&lt;/code&gt; &lt;/a&gt;）で始まる必要があります。同様に、サブタイプは、親タイプ（または多重継承の場合はすべての親タイプ）とまったく同じメモリレイアウトで始まるC構造体を持っている必要があります。これは、Pythonがサブタイプ構造のメンバーに親構造を持っているかのようにアクセスしようとする可能性があるためです（&lt;em&gt;つまり&lt;/em&gt;、指定されたポインターを親構造へのポインターにキャストし、そのメンバーの1つを逆参照します）。メモリレイアウトに互換性がない場合、この試みは予測できない動作を引き起こします（最終的にはメモリ違反とプログラムクラッシュにつながります）。</target>
        </trans-unit>
        <trans-unit id="5f42cdec14792512c6317497d08c83b7f8c46a0b" translate="yes" xml:space="preserve">
          <source>All C-structures corresponding to Python objects must begin with &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_HEAD&quot;&gt;&lt;code&gt;PyObject_HEAD&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_VAR_HEAD&quot;&gt;&lt;code&gt;PyObject_VAR_HEAD&lt;/code&gt;&lt;/a&gt;). In the same way, any sub-type must have a C-structure that begins with exactly the same memory layout as the parent type (or all of the parent types in the case of multiple-inheritance). The reason for this is that Python may attempt to access a member of the sub-type structure as if it had the parent structure ( &lt;em&gt;i.e.&lt;/em&gt; it will cast a given pointer to a pointer to the parent structure and then dereference one of it&amp;rsquo;s members). If the memory layouts are not compatible, then this attempt will cause unpredictable behavior (eventually leading to a memory violation and program crash).</source>
          <target state="translated">Pythonオブジェクトに対応するすべてのC構造体は、&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_HEAD&quot;&gt; &lt;code&gt;PyObject_HEAD&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_VAR_HEAD&quot;&gt; &lt;code&gt;PyObject_VAR_HEAD&lt;/code&gt; &lt;/a&gt;）で始まる必要があります。同様に、サブタイプは、親タイプ（または多重継承の場合はすべての親タイプ）とまったく同じメモリレイアウトで始まるC構造体を持っている必要があります。これは、Pythonがサブタイプ構造のメンバーに親構造を持っているかのようにアクセスしようとする可能性があるためです（&lt;em&gt;つまり&lt;/em&gt;、指定されたポインターを親構造へのポインターにキャストしてから、そのメンバーの1つを逆参照します）。メモリレイアウトに互換性がない場合、この試みは予測できない動作を引き起こします（最終的にはメモリ違反とプログラムクラッシュにつながります）。</target>
        </trans-unit>
        <trans-unit id="c916ff6d79d5a6327c1d96c8c36c305d6432178f" translate="yes" xml:space="preserve">
          <source>All F2PY generated files are created in &lt;code&gt;&amp;lt;dirname&amp;gt;&lt;/code&gt;. Default is &lt;code&gt;tempfile.mkdtemp()&lt;/code&gt;.</source>
          <target state="translated">F2PYで生成されたすべてのファイルは &lt;code&gt;&amp;lt;dirname&amp;gt;&lt;/code&gt; に作成されます。デフォルトは &lt;code&gt;tempfile.mkdtemp()&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0c97effec24d7e33c3b06e4fc3b4dd25c34ca82f" translate="yes" xml:space="preserve">
          <source>All Setups</source>
          <target state="translated">すべての設定</target>
        </trans-unit>
        <trans-unit id="e82faa4a852e5e7d4ed74ce885cf0172a7a8e9ab" translate="yes" xml:space="preserve">
          <source>All array-like methods are now called with keyword arguments in fromnumeric.py</source>
          <target state="translated">配列のようなメソッドはすべて fromnumeric.py のキーワード引数で呼び出されるようになりました。</target>
        </trans-unit>
        <trans-unit id="eb1e144b53b6fbb02861788e7300ee911b816808" translate="yes" xml:space="preserve">
          <source>All arrays generated by basic slicing are always &lt;a href=&quot;../glossary#term-view&quot;&gt;views&lt;/a&gt; of the original array.</source>
          <target state="translated">基本的なスライスによって生成されたすべての配列は、常に元の配列の&lt;a href=&quot;../glossary#term-view&quot;&gt;ビュー&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="93006b441b63a8f203fde18dc1e2540284859337" translate="yes" xml:space="preserve">
          <source>All arrays generated by basic slicing are always &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-view&quot;&gt;views&lt;/a&gt; of the original array.</source>
          <target state="translated">基本的なスライスによって生成されたすべての配列は、常に元の配列の&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-view&quot;&gt;ビュー&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="60b8659a5aae8d8bd6d3f0a8ebb318da1489077c" translate="yes" xml:space="preserve">
          <source>All bit generators can produce doubles, uint64s and uint32s via CTypes (&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.ctypes#numpy.random.PCG64.ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;) and CFFI (&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.cffi#numpy.random.PCG64.cffi&quot;&gt;&lt;code&gt;cffi&lt;/code&gt;&lt;/a&gt;). This allows these bit generators to be used in numba.</source>
          <target state="translated">すべてのビットジェネレーターは、CTypes（&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.ctypes#numpy.random.PCG64.ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;）およびCFFI（&lt;a href=&quot;bit_generators/generated/numpy.random.pcg64.cffi#numpy.random.PCG64.cffi&quot;&gt; &lt;code&gt;cffi&lt;/code&gt; &lt;/a&gt;）を介してdouble、uint64s、およびuint32sを生成できます。これにより、これらのビットジェネレーターをnumbaで使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="c9be37c010a50fce0078664c2aec450a0fb2c2e9" translate="yes" xml:space="preserve">
          <source>All bit generators can produce doubles, uint64s and uint32s via CTypes (&lt;code&gt;ctypes&lt;/code&gt;) and CFFI (&lt;code&gt;cffi&lt;/code&gt;). This allows these bit generators to be used in numba.</source>
          <target state="translated">すべてのビットジェネレーターは、CTypes（ &lt;code&gt;ctypes&lt;/code&gt; ）とCFFI（ &lt;code&gt;cffi&lt;/code&gt; ）を介して、double、uint64s、uint32sを生成できます。これにより、これらのビットジェネレータをnumbaで使用できます。</target>
        </trans-unit>
        <trans-unit id="b69727cbe4d73bbfb0e440e37962ff9d4d419505" translate="yes" xml:space="preserve">
          <source>All built-in data-type objects have byteorder either &amp;lsquo;=&amp;rsquo; or &amp;lsquo;|&amp;rsquo;.</source>
          <target state="translated">すべての組み込みデータ型オブジェクトは、バイトオーダーが「=」または「|」のいずれかです。</target>
        </trans-unit>
        <trans-unit id="8b7a0f2018eee680f412af1df03ac77a63a47767" translate="yes" xml:space="preserve">
          <source>All but the last (righthand-most) bin is half-open. In other words, if &lt;code&gt;bins&lt;/code&gt; is:</source>
          <target state="translated">最後（最も右側）のビンを除いて、すべてが半分開いています。つまり、 &lt;code&gt;bins&lt;/code&gt; が次の場合：</target>
        </trans-unit>
        <trans-unit id="69d9e13f3c8c7761eb67dfa2398b7f8fb6f814ea" translate="yes" xml:space="preserve">
          <source>All code should be &lt;a href=&quot;https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard&quot;&gt;documented&lt;/a&gt;.</source>
          <target state="translated">すべてのコードを&lt;a href=&quot;https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard&quot;&gt;文書化する&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="a10a75d24470737c78acbe472c1daa04ba679066" translate="yes" xml:space="preserve">
          <source>All code should have tests (see &lt;a href=&quot;#test-coverage&quot;&gt;test coverage&lt;/a&gt; below for more details).</source>
          <target state="translated">すべてのコードにテストが必要です（詳細については、以下の&lt;a href=&quot;#test-coverage&quot;&gt;テストカバレッジを&lt;/a&gt;参照してください）。</target>
        </trans-unit>
        <trans-unit id="ff69c40820720e31d32ccaa63294de4fbcef8495" translate="yes" xml:space="preserve">
          <source>All elements of &lt;code&gt;a&lt;/code&gt; will be assigned this value.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; のすべての要素にこの値が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="5aae9c7e8e2ab607eca80bf471074cb902f987b2" translate="yes" xml:space="preserve">
          <source>All elements of a homogeneous array have the same type. ndarrays, in contrast to Python lists, are homogeneous. The type can be complicated, as in a &lt;a href=&quot;#term-structured-array&quot;&gt;structured array&lt;/a&gt;, but all elements have that type.</source>
          <target state="translated">同種配列のすべての要素は同じタイプです。Pythonリストとは対照的に、ndarrayは同種です。&lt;a href=&quot;#term-structured-array&quot;&gt;構造化配列の&lt;/a&gt;ように型は複雑になる可能性がありますが、すべての要素にその型があります。</target>
        </trans-unit>
        <trans-unit id="ab491eb1f9e84afa82844be62a42785a977e7753" translate="yes" xml:space="preserve">
          <source>All flags can be accessed using the single (upper case) letter as well as the full name.</source>
          <target state="translated">すべてのフラグは、フルネームと同様に単一の文字(大文字)でアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="96d53af971cb6fff2bbec3fdd9ead15faadcf4dc" translate="yes" xml:space="preserve">
          <source>All function declarations and definitions must use full prototypes (i.e. specify the types of all arguments).</source>
          <target state="translated">すべての関数の宣言と定義は、完全なプロトタイプを使用しなければなりません(つまり、すべての引数の型を指定します)。</target>
        </trans-unit>
        <trans-unit id="8e34248364070a9d79764ba20e005ff3f77292af" translate="yes" xml:space="preserve">
          <source>All functions and global variables should be declared static when they aren&amp;rsquo;t needed outside the current compilation unit.</source>
          <target state="translated">すべての関数とグローバル変数は、現在のコンパイルユニットの外部で必要ない場合は静的に宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="02f1cb3a6a2fd8188553a31c71d030165f948de9" translate="yes" xml:space="preserve">
          <source>All input arrays except int64 and uint64 can be safely cast to the returned dtype without loss of information.</source>
          <target state="translated">int64とuint64を除くすべての入力配列は、情報を失うことなく安全にdtypeにキャストすることができます。</target>
        </trans-unit>
        <trans-unit id="0d0b857c5a9b73e7d57ed711dbd367f8fced9c77" translate="yes" xml:space="preserve">
          <source>All input arrays with &lt;a href=&quot;generated/numpy.ndarray.ndim#numpy.ndarray.ndim&quot;&gt;&lt;code&gt;ndim&lt;/code&gt;&lt;/a&gt; smaller than the input array of largest &lt;a href=&quot;generated/numpy.ndarray.ndim#numpy.ndarray.ndim&quot;&gt;&lt;code&gt;ndim&lt;/code&gt;&lt;/a&gt;, have 1&amp;rsquo;s prepended to their shapes.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.ndim#numpy.ndarray.ndim&quot;&gt; &lt;code&gt;ndim&lt;/code&gt; &lt;/a&gt;が最大の&lt;a href=&quot;generated/numpy.ndarray.ndim#numpy.ndarray.ndim&quot;&gt; &lt;code&gt;ndim&lt;/code&gt; の&lt;/a&gt;入力配列よりも小さいすべての入力配列は、形状の前に1が付加されます。</target>
        </trans-unit>
        <trans-unit id="2dc665e3a6722e3373db803968527b6b6acc2ba2" translate="yes" xml:space="preserve">
          <source>All members of the Council shall disclose to the rest of the Council any conflict of interest they may have. Members with a conflict of interest in a particular issue may participate in Council discussions on that issue, but must recuse themselves from voting on the issue.</source>
          <target state="translated">審議会の全議員は、利害が対立する可能性がある場合、その旨を他の議員に開示しなければならない。特定の問題で利害が対立する議員は、その問題に関する審議会の討議に参加することができますが、その問題に関する投票からは身を引かなければなりません。</target>
        </trans-unit>
        <trans-unit id="e24f9443f9006deb641af5606ae740580a314b94" translate="yes" xml:space="preserve">
          <source>All ndarrays are &lt;a href=&quot;../glossary#term-homogeneous&quot;&gt;homogeneous&lt;/a&gt;: every item takes up the same size block of memory, and all blocks are interpreted in exactly the same way. How each item in the array is to be interpreted is specified by a separate &lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;data-type object&lt;/a&gt;, one of which is associated with every array. In addition to basic types (integers, floats, &lt;em&gt;etc.&lt;/em&gt;), the data type objects can also represent data structures.</source>
          <target state="translated">すべてのndarrayは&lt;a href=&quot;../glossary#term-homogeneous&quot;&gt;同種&lt;/a&gt;です。すべてのアイテムは同じサイズのメモリブロックを使用し、すべてのブロックはまったく同じ方法で解釈されます。配列内の各項目がどのように解釈されるかは、個別の&lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;データ型オブジェクト&lt;/a&gt;によって指定され、その1つがすべての配列に関連付けられます。基本型（整数、浮動小数点数&lt;em&gt;など&lt;/em&gt;）に加えて、データ型オブジェクトはデータ構造を表すこともできます。</target>
        </trans-unit>
        <trans-unit id="82a049ad9415682346f46e106edb4fd1fa69cce0" translate="yes" xml:space="preserve">
          <source>All ndarrays are &lt;a href=&quot;../glossary#term-homogenous&quot;&gt;homogenous&lt;/a&gt;: every item takes up the same size block of memory, and all blocks are interpreted in exactly the same way. How each item in the array is to be interpreted is specified by a separate &lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;data-type object&lt;/a&gt;, one of which is associated with every array. In addition to basic types (integers, floats, &lt;em&gt;etc.&lt;/em&gt;), the data type objects can also represent data structures.</source>
          <target state="translated">すべてのndarrayは&lt;a href=&quot;../glossary#term-homogenous&quot;&gt;同種&lt;/a&gt;です。すべてのアイテムは同じサイズのメモリブロックを使用し、すべてのブロックはまったく同じ方法で解釈されます。配列内の各項目がどのように解釈されるかは、個別の&lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;データ型オブジェクト&lt;/a&gt;によって指定され、その1つがすべての配列に関連付けられます。基本型（整数、浮動小数点数&lt;em&gt;など&lt;/em&gt;）に加えて、データ型オブジェクトはデータ構造を表すこともできます。</target>
        </trans-unit>
        <trans-unit id="ca446ec5487618f081b9b30abeedd928222d6468" translate="yes" xml:space="preserve">
          <source>All ndarrays are &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-homogenous&quot;&gt;homogenous&lt;/a&gt;: every item takes up the same size block of memory, and all blocks are interpreted in exactly the same way. How each item in the array is to be interpreted is specified by a separate &lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;data-type object&lt;/a&gt;, one of which is associated with every array. In addition to basic types (integers, floats, &lt;em&gt;etc.&lt;/em&gt;), the data type objects can also represent data structures.</source>
          <target state="translated">すべてのndarrayは&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-homogenous&quot;&gt;同種&lt;/a&gt;です。すべてのアイテムは同じサイズのメモリブロックを占有し、すべてのブロックはまったく同じ方法で解釈されます。配列内の各項目の解釈方法は、個別の&lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;データ型オブジェクト&lt;/a&gt;によって指定されます。その1つはすべての配列に関連付けられています。基本型（整数、浮動小数点数&lt;em&gt;など&lt;/em&gt;）に加えて、データ型オブジェクトはデータ構造を表すこともできます。</target>
        </trans-unit>
        <trans-unit id="da2b25874ee4e8732493aa486d012f0b0bed29b3" translate="yes" xml:space="preserve">
          <source>All of the classes are immutable and have the same methods, and especially they implement the Python numeric operators +, -, *, //, %, divmod, **, ==, and !=. The last two can be a bit problematic due to floating point roundoff errors. We now give a quick demonstration of the various operations using NumPy version 1.7.0.</source>
          <target state="translated">全てのクラスは不変で同じメソッドを持ち、特にPythonの数値演算子+,-,*,//,%,divmod,**,==,!=を実装しています。最後の2つは浮動小数点のラウンドオフエラーのために少し問題があります。ここでは、NumPyバージョン1.7.0を使った様々な操作の簡単なデモンストレーションを行います。</target>
        </trans-unit>
        <trans-unit id="d29928171307be63839851bd3b611b16ff9f6059" translate="yes" xml:space="preserve">
          <source>All of the commands above display the results in plain text in the console, and the results are not saved for comparison with future commits. For greater control, a graphical view, and to have results saved for future comparison you can run ASV commands (record results and generate HTML):</source>
          <target state="translated">上記のすべてのコマンドは結果をコンソールにプレーンテキストで表示し、結果は将来のコミットとの比較のために保存されません。より高度な制御、グラフィカルな表示、そして将来の比較のために結果を保存したい場合は、ASV コマンドを実行することができます (結果を記録して HTML を生成する)。</target>
        </trans-unit>
        <trans-unit id="d23d8201105a40c14ba3b7be79618b80eab9ec1b" translate="yes" xml:space="preserve">
          <source>All of the numeric data types (integer, floating point, and complex) have constants that are defined to be a specific enumerated type number. Exactly which enumerated type a bit-width type refers to is platform dependent. In particular, the constants available are &lt;code&gt;PyArray_{NAME}{BITS}&lt;/code&gt; where &lt;code&gt;{NAME}&lt;/code&gt; is &lt;strong&gt;INT&lt;/strong&gt;, &lt;strong&gt;UINT&lt;/strong&gt;, &lt;strong&gt;FLOAT&lt;/strong&gt;, &lt;strong&gt;COMPLEX&lt;/strong&gt; and &lt;code&gt;{BITS}&lt;/code&gt; can be 8, 16, 32, 64, 80, 96, 128, 160, 192, 256, and 512. Obviously not all bit-widths are available on all platforms for all the kinds of numeric types. Commonly 8-, 16-, 32-, 64-bit integers; 32-, 64-bit floats; and 64-, 128-bit complex types are available.</source>
          <target state="translated">すべての数値データ型（整数、浮動小数点、および複素数）には、特定の列挙型の数値として定義される定数があります。ビット幅型が参照する列挙型がプラットフォームによって異なります。特に、利用可能な定数は &lt;code&gt;PyArray_{NAME}{BITS}&lt;/code&gt; で、 &lt;code&gt;{NAME}&lt;/code&gt; は&lt;strong&gt;INT&lt;/strong&gt;、&lt;strong&gt;UINT&lt;/strong&gt;、&lt;strong&gt;FLOAT&lt;/strong&gt;、&lt;strong&gt;COMPLEXで&lt;/strong&gt;あり、 &lt;code&gt;{BITS}&lt;/code&gt; は8、16、32、64、80、96、128、160、192、 256、512。すべてのプラットフォームで、すべての種類の数値型に対して、すべてのビット幅を使用できるわけではありません。通常、8、16、32、64ビット整数。 32、64ビット浮動小数点数。また、64ビット、128ビットの複合型も使用できます。</target>
        </trans-unit>
        <trans-unit id="b5a846311d841d583030d446986226f22871d26f" translate="yes" xml:space="preserve">
          <source>All of the ufunc methods use the same underlying 1-D computational loops with input and output arguments adjusted so that the appropriate reduction takes place. For example, the key to the functioning of reduce is that the 1-D loop is called with the output and the second input pointing to the same position in memory and both having a step- size of 0. The first input is pointing to the input array with a step- size given by the appropriate stride for the selected axis. In this way, the operation performed is</source>
          <target state="translated">ufuncのすべてのメソッドは、適切なリダクションが行われるように入力と出力の引数を調整して、同じ1次元の計算ループを使用しています。例えば、reduceの機能の鍵は、出力と2番目の入力がメモリ上の同じ位置を指し、両方ともステップサイズが0である状態で1次元ループが呼び出されることです。 1番目の入力は、選択された軸の適切なストライドによって与えられたステップサイズを持つ入力配列を指しています。このようにして、実行される操作は</target>
        </trans-unit>
        <trans-unit id="5b156f6c315198e56c123c4ccd661578933f08cc" translate="yes" xml:space="preserve">
          <source>All of these functions can be used in &lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt;&lt;code&gt;PyArg_ParseTuple&lt;/code&gt;&lt;/a&gt; (&amp;hellip;) with the &amp;ldquo;O&amp;amp;&amp;rdquo; format specifier to automatically convert any Python object to the required C-object. All of these functions return &lt;a href=&quot;#c.NPY_SUCCEED&quot;&gt;&lt;code&gt;NPY_SUCCEED&lt;/code&gt;&lt;/a&gt; if successful and &lt;a href=&quot;#c.NPY_FAIL&quot;&gt;&lt;code&gt;NPY_FAIL&lt;/code&gt;&lt;/a&gt; if not. The first argument to all of these function is a Python object. The second argument is the &lt;strong&gt;address&lt;/strong&gt; of the C-type to convert the Python object to.</source>
          <target state="translated">これらの関数はすべて、&lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt; &lt;code&gt;PyArg_ParseTuple&lt;/code&gt; &lt;/a&gt;（&amp;hellip;）で「O＆」フォーマット指定子を使用して、Pythonオブジェクトを必要なCオブジェクトに自動的に変換できます。これらの機能のすべてが返す&lt;a href=&quot;#c.NPY_SUCCEED&quot;&gt; &lt;code&gt;NPY_SUCCEED&lt;/code&gt; を&lt;/a&gt;成功した場合&lt;a href=&quot;#c.NPY_FAIL&quot;&gt; &lt;code&gt;NPY_FAIL&lt;/code&gt; &lt;/a&gt;ない場合。これらすべての関数の最初の引数はPythonオブジェクトです。2番目の引数は、Pythonオブジェクトを変換するCタイプの&lt;strong&gt;アドレス&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="ac4adec62245a4de6e6a0610fe705282ae5f1f53" translate="yes" xml:space="preserve">
          <source>All other types map to &lt;code&gt;object_&lt;/code&gt; for convenience. Code should expect that such types may map to a specific (new) dtype in future the future.</source>
          <target state="translated">他のすべてのタイプは、便宜上 &lt;code&gt;object_&lt;/code&gt; にマップされます。コードは、そのようなタイプが将来特定の（新しい）dtypeにマップされる可能性があることを期待する必要があります。</target>
        </trans-unit>
        <trans-unit id="f9da82563cbc06f236006f76f4f3793a0cca3a52" translate="yes" xml:space="preserve">
          <source>All other types map to &lt;code&gt;object_&lt;/code&gt; for convenience. Code should expect that such types may map to a specific (new) dtype in the future.</source>
          <target state="translated">他のすべてのタイプは、便宜上 &lt;code&gt;object_&lt;/code&gt; にマップされます。コードは、そのようなタイプが将来特定の（新しい）dtypeにマップされる可能性があることを期待する必要があります。</target>
        </trans-unit>
        <trans-unit id="2247f8b0604f20c2ebdf433c5eb69f188bf79464" translate="yes" xml:space="preserve">
          <source>All python indexing operations &lt;code&gt;arr[index]&lt;/code&gt; are organized by first preparing the index and finding the index type. The supported index types are:</source>
          <target state="translated">すべてのpythonインデックス付け操作 &lt;code&gt;arr[index]&lt;/code&gt; は、最初にインデックスを準備し、インデックスタイプを見つけることによって編成されます。サポートされているインデックスタイプは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="696c30921da1780c98302e930b24c2f3424b4299" translate="yes" xml:space="preserve">
          <source>All quotes are for clarity.</source>
          <target state="translated">すべての引用はわかりやすくするためのものです。</target>
        </trans-unit>
        <trans-unit id="3639ec0f50b0f9a9a60809dc558a8b5d72fef67b" translate="yes" xml:space="preserve">
          <source>All rights reserved.</source>
          <target state="translated">すべての権利は留保されています。</target>
        </trans-unit>
        <trans-unit id="034cd32b67051bb7ac3ae3412072399da35e625f" translate="yes" xml:space="preserve">
          <source>All the &lt;code&gt;-1&lt;/code&gt; values we are seeing come from &lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt;&lt;code&gt;numpy.genfromtxt&lt;/code&gt;&lt;/a&gt; attempting to read missing data from the original &lt;code&gt;.csv&lt;/code&gt; file. Obviously, we don&amp;rsquo;t want to compute missing data as &lt;code&gt;-1&lt;/code&gt; - we just want to skip this value so it doesn&amp;rsquo;t interfere in our analysis. After importing the &lt;a href=&quot;../reference/maskedarray.generic#module-numpy.ma&quot;&gt;&lt;code&gt;numpy.ma&lt;/code&gt;&lt;/a&gt; module, we&amp;rsquo;ll create a new array, this time masking the invalid values:</source>
          <target state="translated">表示されている &lt;code&gt;-1&lt;/code&gt; の値はすべて、元の &lt;code&gt;.csv&lt;/code&gt; ファイルから欠落しているデータを&lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt; &lt;code&gt;numpy.genfromtxt&lt;/code&gt; &lt;/a&gt;うとしているnumpy.genfromtxtからのものです。明らかに、欠落データを &lt;code&gt;-1&lt;/code&gt; として計算する必要はありません。分析に干渉しないように、この値をスキップするだけです。&lt;a href=&quot;../reference/maskedarray.generic#module-numpy.ma&quot;&gt; &lt;code&gt;numpy.ma&lt;/code&gt; &lt;/a&gt;モジュールをインポートした後、新しい配列を作成します。今回は無効な値をマスクします。</target>
        </trans-unit>
        <trans-unit id="f230907dd19dccf16b4f94379f148d5d107bfa02" translate="yes" xml:space="preserve">
          <source>All the dates for one month:</source>
          <target state="translated">1ヶ月間の全日程。</target>
        </trans-unit>
        <trans-unit id="92efcb4e59829949c6cee13f46fe21646e8a17b1" translate="yes" xml:space="preserve">
          <source>All the entries of an array can be masked at once by assigning &lt;code&gt;True&lt;/code&gt; to the mask:</source>
          <target state="translated">マスクに &lt;code&gt;True&lt;/code&gt; を割り当てると、配列のすべてのエントリを一度にマスクできます。</target>
        </trans-unit>
        <trans-unit id="e10c13da687020f879a5a16ee83f203fa91cc081" translate="yes" xml:space="preserve">
          <source>All the following expressions construct the same block matrix:</source>
          <target state="translated">以下の式はすべて同じブロック行列を構成します。</target>
        </trans-unit>
        <trans-unit id="2ffebe2f92d5f410095769cef8e73e9e4be3848b" translate="yes" xml:space="preserve">
          <source>All the partition algorithms make temporary copies of the data when partitioning along any but the last axis. Consequently, partitioning along the last axis is faster and uses less space than partitioning along any other axis.</source>
          <target state="translated">すべてのパーティションアルゴリズムは、最後の軸以外の軸に沿ってパーティショニングするときにデータの一時的なコピーを作成します。その結果、最後の軸に沿ったパーティショニングは、他の軸に沿ったパーティショニングよりも高速で、使用するスペースも少なくなります。</target>
        </trans-unit>
        <trans-unit id="1a70c541e6faf05b3fbeaa0081931d87c5fc3fd1" translate="yes" xml:space="preserve">
          <source>All the sort algorithms make temporary copies of the data when sorting along any but the last axis. Consequently, sorting along the last axis is faster and uses less space than sorting along any other axis.</source>
          <target state="translated">すべてのソートアルゴリズムは、最後の軸以外の軸に沿ってソートするときに、データの一時的なコピーを作成します。その結果、最後の軸に沿ったソートは、他の軸に沿ったソートよりも高速で、使用するスペースが少なくなります。</target>
        </trans-unit>
        <trans-unit id="ab66b8b1e0107e2f156a60aff52485e98cb423a4" translate="yes" xml:space="preserve">
          <source>All the wheels link to a version of &lt;a href=&quot;https://github.com/xianyi/OpenBLAS&quot;&gt;OpenBLAS&lt;/a&gt; supplied via the &lt;a href=&quot;https://github.com/MacPython/openblas-libs&quot;&gt;openblas-libs&lt;/a&gt; repo. The shared object (or DLL) is shipped with in the wheel, renamed to prevent name collisions with other OpenBLAS shared objects that may exist in the filesystem.</source>
          <target state="translated">すべてのホイールは、&lt;a href=&quot;https://github.com/MacPython/openblas-libs&quot;&gt;openblas-libs&lt;/a&gt;リポジトリを介して提供されるバージョンの&lt;a href=&quot;https://github.com/xianyi/OpenBLAS&quot;&gt;OpenBLASに&lt;/a&gt;リンクしています。共有オブジェクト（またはDLL）はホイールに同梱されており、ファイルシステムに存在する可能性のある他のOpenBLAS共有オブジェクトとの名前の衝突を防ぐために名前が変更されています。</target>
        </trans-unit>
        <trans-unit id="d9a67449027b4f16bbb9f49aebbf3c5931bf6cfc" translate="yes" xml:space="preserve">
          <source>All three of these functions require the &lt;em&gt;module&lt;/em&gt; object (the return value of Py_InitModule). The &lt;em&gt;name&lt;/em&gt; is a string that labels the value in the module. Depending on which function is called, the &lt;em&gt;value&lt;/em&gt; argument is either a general object (&lt;a href=&quot;#c.PyModule_AddObject&quot;&gt;&lt;code&gt;PyModule_AddObject&lt;/code&gt;&lt;/a&gt; steals a reference to it), an integer constant, or a string constant.</source>
          <target state="translated">これら3つの関数はすべて、&lt;em&gt;モジュール&lt;/em&gt;オブジェクト（Py_InitModuleの戻り値）を必要とし&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;名前は、&lt;/em&gt;モジュール内の値をラベル文字列です。呼び出される関数に応じて、&lt;em&gt;value&lt;/em&gt;引数は、一般オブジェクト（&lt;a href=&quot;#c.PyModule_AddObject&quot;&gt; &lt;code&gt;PyModule_AddObject&lt;/code&gt; &lt;/a&gt;がその関数への参照を盗む）、整数定数、または文字列定数のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="06c4b64299274980aca1edafbb8e3c5466dde177" translate="yes" xml:space="preserve">
          <source>All timings were taken using Linux on a i5-3570 processor.</source>
          <target state="translated">すべてのタイミングは、i5-3570プロセッサ上のLinuxを使用して行われました。</target>
        </trans-unit>
        <trans-unit id="e2286d646fe081e068af4e78b5bd3f84302897ba" translate="yes" xml:space="preserve">
          <source>All timings were taken using Linux on an i5-3570 processor.</source>
          <target state="translated">すべてのタイミングは、i5-3570プロセッサ上のLinuxを使用して行われました。</target>
        </trans-unit>
        <trans-unit id="3b6801ef087b25df864317061c09ae2a58f2f84b" translate="yes" xml:space="preserve">
          <source>All trailing coefficients less than &lt;code&gt;tol&lt;/code&gt; will be removed.</source>
          <target state="translated">&lt;code&gt;tol&lt;/code&gt; より小さい後続係数はすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="5b1b305863dfd31164de95c6a2ba21a9d7316e39" translate="yes" xml:space="preserve">
          <source>All trigonometric functions use radians when an angle is called for. The ratio of degrees to radians is</source>
          <target state="translated">三角関数はすべて、角度が求められたときにラジアンを使います。度とラジアンの比は</target>
        </trans-unit>
        <trans-unit id="21be5744ad69fc918df7773d4afd2f7e1b293377" translate="yes" xml:space="preserve">
          <source>All ufuncs can also take output arguments. If necessary, output will be cast to the data-type(s) of the provided output array(s). If a class with an &lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt;&lt;code&gt;__array__&lt;/code&gt;&lt;/a&gt; method is used for the output, results will be written to the object returned by &lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt;&lt;code&gt;__array__&lt;/code&gt;&lt;/a&gt;. Then, if the class also has an &lt;a href=&quot;arrays.classes#numpy.class.__array_prepare__&quot;&gt;&lt;code&gt;__array_prepare__&lt;/code&gt;&lt;/a&gt; method, it is called so metadata may be determined based on the context of the ufunc (the context consisting of the ufunc itself, the arguments passed to the ufunc, and the ufunc domain.) The array object returned by &lt;a href=&quot;arrays.classes#numpy.class.__array_prepare__&quot;&gt;&lt;code&gt;__array_prepare__&lt;/code&gt;&lt;/a&gt; is passed to the ufunc for computation. Finally, if the class also has an &lt;a href=&quot;arrays.classes#numpy.class.__array_wrap__&quot;&gt;&lt;code&gt;__array_wrap__&lt;/code&gt;&lt;/a&gt; method, the returned &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; result will be passed to that method just before passing control back to the caller.</source>
          <target state="translated">すべてのufuncは出力引数を取ることもできます。必要に応じて、出力は提供された出力配列のデータ型にキャストされます。&lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt; &lt;code&gt;__array__&lt;/code&gt; &lt;/a&gt;メソッドを持つクラスが出力に使用される場合、結果は&lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt; &lt;code&gt;__array__&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクトに書き込まれます。次に、クラスが&lt;a href=&quot;arrays.classes#numpy.class.__array_prepare__&quot;&gt; &lt;code&gt;__array_prepare__&lt;/code&gt; &lt;/a&gt;メソッドも持っている場合、それが呼び出され、ufuncのコンテキスト（ufunc自体、ufuncに渡される引数、およびufuncドメインで構成されるコンテキスト）に基づいてメタデータを決定できます。配列&lt;a href=&quot;arrays.classes#numpy.class.__array_prepare__&quot;&gt; &lt;code&gt;__array_prepare__&lt;/code&gt; &lt;/a&gt;によって返されたオブジェクトは、計算のためにufuncに渡されます。最後に、クラスに&lt;a href=&quot;arrays.classes#numpy.class.__array_wrap__&quot;&gt; &lt;code&gt;__array_wrap__&lt;/code&gt; &lt;/a&gt;メソッドもある場合、返される&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;結果は、呼び出し元に制御を戻す直前にそのメソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="2d45789ac1ad3aa209fa7142eb2b247f7550708c" translate="yes" xml:space="preserve">
          <source>All ufuncs have four methods. However, these methods only make sense on scalar ufuncs that take two input arguments and return one output argument. Attempting to call these methods on other ufuncs will cause a &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. The reduce-like methods all take an &lt;em&gt;axis&lt;/em&gt; keyword, a &lt;em&gt;dtype&lt;/em&gt; keyword, and an &lt;em&gt;out&lt;/em&gt; keyword, and the arrays must all have dimension &amp;gt;= 1. The &lt;em&gt;axis&lt;/em&gt; keyword specifies the axis of the array over which the reduction will take place (with negative values counting backwards). Generally, it is an integer, though for &lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt;&lt;code&gt;ufunc.reduce&lt;/code&gt;&lt;/a&gt;, it can also be a tuple of &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; to reduce over several axes at once, or &lt;code&gt;None&lt;/code&gt;, to reduce over all axes. The &lt;em&gt;dtype&lt;/em&gt; keyword allows you to manage a very common problem that arises when naively using &lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt;&lt;code&gt;ufunc.reduce&lt;/code&gt;&lt;/a&gt;. Sometimes you may have an array of a certain data type and wish to add up all of its elements, but the result does not fit into the data type of the array. This commonly happens if you have an array of single-byte integers. The &lt;em&gt;dtype&lt;/em&gt; keyword allows you to alter the data type over which the reduction takes place (and therefore the type of the output). Thus, you can ensure that the output is a data type with precision large enough to handle your output. The responsibility of altering the reduce type is mostly up to you. There is one exception: if no &lt;em&gt;dtype&lt;/em&gt; is given for a reduction on the &amp;ldquo;add&amp;rdquo; or &amp;ldquo;multiply&amp;rdquo; operations, then if the input type is an integer (or Boolean) data-type and smaller than the size of the &lt;code&gt;int_&lt;/code&gt; data type, it will be internally upcast to the &lt;code&gt;int_&lt;/code&gt; (or &lt;code&gt;uint&lt;/code&gt;) data-type. Finally, the &lt;em&gt;out&lt;/em&gt; keyword allows you to provide an output array (for single-output ufuncs, which are currently the only ones supported; for future extension, however, a tuple with a single argument can be passed in). If &lt;em&gt;out&lt;/em&gt; is given, the &lt;em&gt;dtype&lt;/em&gt; argument is ignored.</source>
          <target state="translated">すべてのufuncには4つのメソッドがあります。ただし、これらのメソッドは、2つの入力引数を取り、1つの出力引数を返すスカラーufuncでのみ意味があります。他のufuncでこれらのメソッドを呼び出そうとすると、&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。低減-ような方法は、全ての取り&lt;em&gt;軸&lt;/em&gt;キーワード、&lt;em&gt;DTYPEの&lt;/em&gt;キーワード、および&lt;em&gt;アウト&lt;/em&gt;キーワード、およびアレイは、全ての次元&amp;gt; = 1有していなければならない&lt;em&gt;軸&lt;/em&gt;負と（キーワード指定を減少が起こるその上、アレイの軸を逆算した値）。通常、これは整数ですが、&lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt; &lt;code&gt;ufunc.reduce&lt;/code&gt; の&lt;/a&gt;場合、一度に複数の軸で削減するための&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; の&lt;/a&gt;タプルにすることも、 &lt;code&gt;None&lt;/code&gt; 、すべての軸で削減します。&lt;em&gt;DTYPEの&lt;/em&gt;キーワードを使用すると、単純に使用しているときに生じる非常に一般的な問題で管理することができます&lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt; &lt;code&gt;ufunc.reduce&lt;/code&gt; を&lt;/a&gt;。特定のデータ型の配列があり、その要素をすべて追加したい場合がありますが、結果は配列のデータ型に適合しません。これは通常、1バイト整数の配列がある場合に発生します。&lt;em&gt;DTYPE&lt;/em&gt;あなたは減少が（したがって、および出力の種類）が行われた上でデータ型を変更することを可能にするキーワード。したがって、出力が出力を処理するのに十分な精度を持つデータ型であることを確認できます。削減タイプを変更する責任は、主にあなた次第です。例外が1つあります&lt;em&gt;。dtypeが&lt;/em&gt;ない&lt;em&gt;場合&lt;/em&gt;「追加」または「乗算」演算の削減のために指定されている場合、入力タイプが整数（またはブール）データタイプであり、 &lt;code&gt;int_&lt;/code&gt; データタイプのサイズよりも小さい場合、内部的に &lt;code&gt;int_&lt;/code&gt; にアップキャストされます。（または &lt;code&gt;uint&lt;/code&gt; ）データ型。最後に、&lt;em&gt;out&lt;/em&gt;キーワードを使用すると、出力配列を提供できます（現在サポートされているのは単一出力のufuncのみです。将来の拡張では、単一の引数を持つタプルを渡すことができます）。&lt;em&gt;out&lt;/em&gt;が指定&lt;em&gt;された&lt;/em&gt;場合、&lt;em&gt;dtype&lt;/em&gt;引数は無視されます。</target>
        </trans-unit>
        <trans-unit id="07e4ecf9fa6d320e1c75b5c65b73ea6ee2358cf7" translate="yes" xml:space="preserve">
          <source>All ufuncs have four methods. However, these methods only make sense on scalar ufuncs that take two input arguments and return one output argument. Attempting to call these methods on other ufuncs will cause a &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. The reduce-like methods all take an &lt;em&gt;axis&lt;/em&gt; keyword, a &lt;em&gt;dtype&lt;/em&gt; keyword, and an &lt;em&gt;out&lt;/em&gt; keyword, and the arrays must all have dimension &amp;gt;= 1. The &lt;em&gt;axis&lt;/em&gt; keyword specifies the axis of the array over which the reduction will take place (with negative values counting backwards). Generally, it is an integer, though for &lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt;&lt;code&gt;ufunc.reduce&lt;/code&gt;&lt;/a&gt;, it can also be a tuple of &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; to reduce over several axes at once, or None, to reduce over all axes. The &lt;em&gt;dtype&lt;/em&gt; keyword allows you to manage a very common problem that arises when naively using &lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt;&lt;code&gt;ufunc.reduce&lt;/code&gt;&lt;/a&gt;. Sometimes you may have an array of a certain data type and wish to add up all of its elements, but the result does not fit into the data type of the array. This commonly happens if you have an array of single-byte integers. The &lt;em&gt;dtype&lt;/em&gt; keyword allows you to alter the data type over which the reduction takes place (and therefore the type of the output). Thus, you can ensure that the output is a data type with precision large enough to handle your output. The responsibility of altering the reduce type is mostly up to you. There is one exception: if no &lt;em&gt;dtype&lt;/em&gt; is given for a reduction on the &amp;ldquo;add&amp;rdquo; or &amp;ldquo;multiply&amp;rdquo; operations, then if the input type is an integer (or Boolean) data-type and smaller than the size of the &lt;a href=&quot;arrays.scalars#numpy.int_&quot;&gt;&lt;code&gt;int_&lt;/code&gt;&lt;/a&gt; data type, it will be internally upcast to the &lt;a href=&quot;arrays.scalars#numpy.int_&quot;&gt;&lt;code&gt;int_&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;arrays.scalars#numpy.uint&quot;&gt;&lt;code&gt;uint&lt;/code&gt;&lt;/a&gt;) data-type. Finally, the &lt;em&gt;out&lt;/em&gt; keyword allows you to provide an output array (for single-output ufuncs, which are currently the only ones supported; for future extension, however, a tuple with a single argument can be passed in). If &lt;em&gt;out&lt;/em&gt; is given, the &lt;em&gt;dtype&lt;/em&gt; argument is ignored.</source>
          <target state="translated">すべてのufuncには4つのメソッドがあります。ただし、これらのメソッドは、2つの入力引数を取り1つの出力引数を返すスカラーufuncでのみ意味があります。他のufuncでこれらのメソッドを呼び出そうとすると、&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。低減-ような方法は、全ての取り&lt;em&gt;軸&lt;/em&gt;キーワード、&lt;em&gt;DTYPEの&lt;/em&gt;キーワード、および&lt;em&gt;アウト&lt;/em&gt;キーワード、およびアレイは、全ての次元&amp;gt; = 1有していなければならない&lt;em&gt;軸&lt;/em&gt;負と（キーワード指定を減少が起こるその上、アレイの軸を逆方向にカウントする値）。通常、これは整数ですが、&lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt; &lt;code&gt;ufunc.reduce&lt;/code&gt; の&lt;/a&gt;場合、一度に複数の軸で縮小する&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; の&lt;/a&gt;タプル、またはすべての軸で縮小するNoneのタプルにすることもできます。&lt;em&gt;DTYPE&lt;/em&gt;キーワードを使用すると、&lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt; &lt;code&gt;ufunc.reduce&lt;/code&gt; &lt;/a&gt;を単純に使用するときに発生する非常に一般的な問題を管理できます。特定のデータ型の配列があり、そのすべての要素を合計したいが、結果が配列のデータ型に適合しない場合があります。これは通常、シングルバイト整数の配列がある場合に発生します。&lt;em&gt;DTYPE&lt;/em&gt;あなたは減少が（したがって、および出力の種類）が行われた上でデータ型を変更することを可能にするキーワード。したがって、出力が、出力を処理するのに十分な大きさの精度のデータ型であることを確認できます。削減タイプを変更する責任は、ほとんどの場合あなた次第です。 1つの例外があります：&lt;em&gt;dtypeが&lt;/em&gt;ない&lt;em&gt;場合&lt;/em&gt;「add」または「multiply」操作の削減のために与えられ、入力タイプが整数（またはブール）データ型であり、&lt;a href=&quot;arrays.scalars#numpy.int_&quot;&gt; &lt;code&gt;int_&lt;/code&gt; &lt;/a&gt;データ型のサイズよりも小さい場合、内部的に&lt;a href=&quot;arrays.scalars#numpy.int_&quot;&gt; &lt;code&gt;int_&lt;/code&gt; に&lt;/a&gt;アップキャストされます。（または&lt;a href=&quot;arrays.scalars#numpy.uint&quot;&gt; &lt;code&gt;uint&lt;/code&gt; &lt;/a&gt;）データ型。最後に、&lt;em&gt;out&lt;/em&gt;キーワードを使用すると、出力配列を提供できます（現在サポートされているのは、単一出力のufuncの場合です。ただし、将来の拡張のために、単一の引数を持つタプルを渡すことができます）。&lt;em&gt;out&lt;/em&gt;が指定&lt;em&gt;されて&lt;/em&gt;いる場合、&lt;em&gt;dtype&lt;/em&gt;引数は無視されます。</target>
        </trans-unit>
        <trans-unit id="d1d4dcf2513f280307ea7212ad2484d4d7691b21" translate="yes" xml:space="preserve">
          <source>All ufuncs have four methods. However, these methods only make sense on scalar ufuncs that take two input arguments and return one output argument. Attempting to call these methods on other ufuncs will cause a &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. The reduce-like methods all take an &lt;em&gt;axis&lt;/em&gt; keyword, a &lt;em&gt;dtype&lt;/em&gt; keyword, and an &lt;em&gt;out&lt;/em&gt; keyword, and the arrays must all have dimension &amp;gt;= 1. The &lt;em&gt;axis&lt;/em&gt; keyword specifies the axis of the array over which the reduction will take place (with negative values counting backwards). Generally, it is an integer, though for &lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt;&lt;code&gt;ufunc.reduce&lt;/code&gt;&lt;/a&gt;, it can also be a tuple of &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; to reduce over several axes at once, or None, to reduce over all axes. The &lt;em&gt;dtype&lt;/em&gt; keyword allows you to manage a very common problem that arises when naively using &lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt;&lt;code&gt;ufunc.reduce&lt;/code&gt;&lt;/a&gt;. Sometimes you may have an array of a certain data type and wish to add up all of its elements, but the result does not fit into the data type of the array. This commonly happens if you have an array of single-byte integers. The &lt;em&gt;dtype&lt;/em&gt; keyword allows you to alter the data type over which the reduction takes place (and therefore the type of the output). Thus, you can ensure that the output is a data type with precision large enough to handle your output. The responsibility of altering the reduce type is mostly up to you. There is one exception: if no &lt;em&gt;dtype&lt;/em&gt; is given for a reduction on the &amp;ldquo;add&amp;rdquo; or &amp;ldquo;multiply&amp;rdquo; operations, then if the input type is an integer (or Boolean) data-type and smaller than the size of the &lt;code&gt;int_&lt;/code&gt; data type, it will be internally upcast to the &lt;code&gt;int_&lt;/code&gt; (or &lt;code&gt;uint&lt;/code&gt;) data-type. Finally, the &lt;em&gt;out&lt;/em&gt; keyword allows you to provide an output array (for single-output ufuncs, which are currently the only ones supported; for future extension, however, a tuple with a single argument can be passed in). If &lt;em&gt;out&lt;/em&gt; is given, the &lt;em&gt;dtype&lt;/em&gt; argument is ignored.</source>
          <target state="translated">すべてのufuncには4つのメソッドがあります。ただし、これらのメソッドは、2つの入力引数を取り、1つの出力引数を返すスカラーufuncでのみ意味があります。他のufuncでこれらのメソッドを呼び出そうとすると、&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。低減-ような方法は、全ての取り&lt;em&gt;軸&lt;/em&gt;キーワード、&lt;em&gt;DTYPEの&lt;/em&gt;キーワード、および&lt;em&gt;アウト&lt;/em&gt;キーワード、およびアレイは、全ての次元&amp;gt; = 1有していなければならない&lt;em&gt;軸&lt;/em&gt;負と（キーワード指定を減少が起こるその上、アレイの軸を逆方向にカウントする値）。通常、これは整数ですが、&lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt; &lt;code&gt;ufunc.reduce&lt;/code&gt; の&lt;/a&gt;場合、一度に複数の軸で縮小する&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; の&lt;/a&gt;タプル、またはすべての軸で縮小するNoneにすることもできます。&lt;em&gt;DTYPE&lt;/em&gt;キーワードを使用すると、&lt;a href=&quot;generated/numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt; &lt;code&gt;ufunc.reduce&lt;/code&gt; &lt;/a&gt;を単純に使用するときに発生する非常に一般的な問題を管理できます。特定のデータ型の配列があり、そのすべての要素を合計したいが、結果が配列のデータ型に適合しない場合があります。これは通常、シングルバイト整数の配列がある場合に発生します。&lt;em&gt;DTYPE&lt;/em&gt;あなたは減少が（したがって、および出力の種類）が行われた上でデータ型を変更することを可能にするキーワード。したがって、出力が、出力を処理するのに十分な大きさの精度のデータ型であることを確認できます。リデュースタイプを変更する責任は、ほとんどの場合あなた次第です。 1つの例外があります：&lt;em&gt;dtypeが&lt;/em&gt;ない&lt;em&gt;場合&lt;/em&gt;「add」または「multiply」操作の削減のために与えられ、入力タイプが整数（またはブール）データ型であり、 &lt;code&gt;int_&lt;/code&gt; データ型のサイズよりも小さい場合、内部的に &lt;code&gt;int_&lt;/code&gt; にアップキャストされます。（または &lt;code&gt;uint&lt;/code&gt; ）データ型。最後に、&lt;em&gt;out&lt;/em&gt;キーワードを使用すると、出力配列を提供できます（現在サポートされているのは、単一出力ufuncの場合です。ただし、将来の拡張のために、単一の引数を持つタプルを渡すことができます）。&lt;em&gt;out&lt;/em&gt;が指定&lt;em&gt;されて&lt;/em&gt;いる場合、&lt;em&gt;dtype&lt;/em&gt;引数は無視されます。</target>
        </trans-unit>
        <trans-unit id="e2318c4003a311a2e1f7718e453877fa81f4be7b" translate="yes" xml:space="preserve">
          <source>All ufuncs take optional keyword arguments. Most of these represent advanced usage and will not typically be used.</source>
          <target state="translated">すべての ufuncs はオプションのキーワード引数を取ります。これらのほとんどは高度な使用法を表しており、通常は使用されません。</target>
        </trans-unit>
        <trans-unit id="08323fec08cd786e333ebc5f45dc257ddef21b88" translate="yes" xml:space="preserve">
          <source>All values are within the given interval:</source>
          <target state="translated">すべての値は、指定された間隔内にあります。</target>
        </trans-unit>
        <trans-unit id="3557caeafcef351493a190e0ca76e645501ead19" translate="yes" xml:space="preserve">
          <source>All warnings matching will be appended to the &lt;code&gt;log&lt;/code&gt; attribute.</source>
          <target state="translated">一致するすべての警告が &lt;code&gt;log&lt;/code&gt; 属性に追加されます。</target>
        </trans-unit>
        <trans-unit id="426f4527d218a846a225248157056b44e9737a63" translate="yes" xml:space="preserve">
          <source>All wrappers for Fortran/C routines, common blocks, or for Fortran 90 module data generated by F2PY are exposed to Python as &lt;code&gt;fortran&lt;/code&gt; type objects. Routine wrappers are callable &lt;code&gt;fortran&lt;/code&gt; type objects while wrappers to Fortran data have attributes referring to data objects.</source>
          <target state="translated">、又はF2PYによって生成されたFortran 90のモジュールデータについてのFortran / Cルーチン、共通ブロックのためのすべてのラッパーとしてPythonに曝される &lt;code&gt;fortran&lt;/code&gt; 型オブジェクト。ルーチンラッパーは呼び出し可能な &lt;code&gt;fortran&lt;/code&gt; タイプのオブジェクトですが、Fortranデータへのラッパーにはデータオブジェクトを参照する属性があります。</target>
        </trans-unit>
        <trans-unit id="bcb93f844114838b65254a80c40f12714c2f98e5" translate="yes" xml:space="preserve">
          <source>All you need to do to create a simple array is pass a list to it. If you choose to, you can also specify the type of data in your list. &lt;a href=&quot;../reference/arrays.dtypes#arrays-dtypes&quot;&gt;You can find more information about data types here&lt;/a&gt;.</source>
          <target state="translated">単純な配列を作成するために必要なのは、リストをそれに渡すことだけです。必要に応じて、リスト内のデータのタイプを指定することもできます。&lt;a href=&quot;../reference/arrays.dtypes#arrays-dtypes&quot;&gt;データ型の詳細については、こちらをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="190e63cbf64f38a9fb9c04176580017c05722f39" translate="yes" xml:space="preserve">
          <source>All you need to do to plot your values is run:</source>
          <target state="translated">値をプロットするために必要なのは、実行することだけです。</target>
        </trans-unit>
        <trans-unit id="d955aebd5a8ee7c5f8fcd53e07c9aa820263c95f" translate="yes" xml:space="preserve">
          <source>Allan Haldane</source>
          <target state="translated">アラン・ハルダン</target>
        </trans-unit>
        <trans-unit id="126850f0cc1d2b0e1d107977aa577dc3ee5009a2" translate="yes" xml:space="preserve">
          <source>Allocatable arrays</source>
          <target state="translated">割り当て可能な配列</target>
        </trans-unit>
        <trans-unit id="85b6fefe401a8781996bd809383b4e94b035998f" translate="yes" xml:space="preserve">
          <source>Allow a copy of &lt;code&gt;op[i]&lt;/code&gt; to be made if it does not meet the data type or alignment requirements as specified by the constructor flags and parameters.</source>
          <target state="translated">&lt;code&gt;op[i]&lt;/code&gt; コピーが、コンストラクターフラグとパラメーターで指定されたデータ型または配置要件を満たさない場合に作成できるようにします。</target>
        </trans-unit>
        <trans-unit id="9404967cc7ae4678bf28075900a5a4a4ae1c650b" translate="yes" xml:space="preserve">
          <source>Allow any cast, no matter what kind of data loss may occur.</source>
          <target state="translated">どんなキャストでも、どのようなデータ損失が発生しても許すことができます。</target>
        </trans-unit>
        <trans-unit id="546d0b09674a5e30e0706f69483253c6d7dc53df" translate="yes" xml:space="preserve">
          <source>Allow any safe casts, and casts between types of the same kind. For example, float64 -&amp;gt; float32 is permitted with this rule.</source>
          <target state="translated">安全なキャスト、および同じ種類のタイプ間のキャストを許可します。たとえば、float64-&amp;gt; float32はこのルールで許可されています。</target>
        </trans-unit>
        <trans-unit id="71319fc3e3ecea9eef5b367acc6390a448015540" translate="yes" xml:space="preserve">
          <source>Allow dtype field names to be unicode in Python 2</source>
          <target state="translated">Python 2 で dtype フィールド名を unicode にできるようにする</target>
        </trans-unit>
        <trans-unit id="897375acca9fa85a02ea8180e3301f00c8d2bb31" translate="yes" xml:space="preserve">
          <source>Allow identical and casts involving byte swapping.</source>
          <target state="translated">バイト交換を含む同一キャストとキャストを許可します。</target>
        </trans-unit>
        <trans-unit id="5e82a87fb0d9abd791679a7a9c324f1f365a79d4" translate="yes" xml:space="preserve">
          <source>Allow loading pickled object arrays stored in npy files. Reasons for disallowing pickles include security, as loading pickled data can execute arbitrary code. If pickles are disallowed, loading object arrays will fail. Default: False</source>
          <target state="translated">npy ファイルに格納された pickled オブジェクト配列の読み込みを許可します。ピクルスを許可しない理由は、ピクルスのデータを読み込むと任意のコードが実行される可能性があるため、セキュリティが含まれています。ピクルスが禁止されている場合、オブジェクト配列の読み込みは失敗します。デフォルト。デフォルト:False</target>
        </trans-unit>
        <trans-unit id="419825e4a25669fb8acd2b4871a5ccac5cea601a" translate="yes" xml:space="preserve">
          <source>Allow matmul (&lt;code&gt;@&lt;/code&gt; operator) to work with object arrays.</source>
          <target state="translated">matmul（ &lt;code&gt;@&lt;/code&gt; 演算子）がオブジェクト配列を操作できるようにします。</target>
        </trans-unit>
        <trans-unit id="3899d340cbeec687aaed3a39fcea31f537e754c9" translate="yes" xml:space="preserve">
          <source>Allow passing optimizations arguments to asv build</source>
          <target state="translated">asvのビルドに最適化の引数を渡すことができる</target>
        </trans-unit>
        <trans-unit id="aec03ff5fb7ac11a8270b0f45527f1de213187ed" translate="yes" xml:space="preserve">
          <source>Allow saving arrays with large number of named columns</source>
          <target state="translated">多数の名前付き列を持つ配列を保存できるようにする</target>
        </trans-unit>
        <trans-unit id="b7be66bfaf7dddda32176dfbd8947ed7745d9801" translate="yes" xml:space="preserve">
          <source>Allow saving object arrays using Python pickles. Reasons for disallowing pickles include security (loading pickled data can execute arbitrary code) and portability (pickled objects may not be loadable on different Python installations, for example if the stored objects require libraries that are not available, and not all pickled data is compatible between Python 2 and Python 3). Default: True</source>
          <target state="translated">Python のピクルスを使ったオブジェクト配列の保存を許可します。ピクルスを許可しない理由としては、セキュリティ (ピクルスデータをロードすると任意のコードが実行される可能性があります)と移植性 (ピクルスオブジェクトは異なる Python インストールではロードできないかもしれません。例えば、保存されたオブジェクトが利用できないライブラリを必要とする場合や、すべてのピクルスデータが Python 2 と Python 3 の間で互換性があるとは限りません)があります。デフォルト。デフォルト:True</target>
        </trans-unit>
        <trans-unit id="54a3f63d2a62cea8a28f6112a74010f0a2fa0c89" translate="yes" xml:space="preserve">
          <source>Allows memory-mapping of the data. See &lt;code&gt;open_memmep&lt;/code&gt;.</source>
          <target state="translated">データのメモリマッピングを許可します。 &lt;code&gt;open_memmep&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="9475de22330f0492d32cb9f57a359ae9ebe0344c" translate="yes" xml:space="preserve">
          <source>Allows reductions of empty arrays where they would normally fail, i.e. for ufuncs without an identity.</source>
          <target state="translated">通常であれば失敗するであろう空の配列の削減を可能にします。</target>
        </trans-unit>
        <trans-unit id="3c1f6d0da5555e3d148fda468da9cf9586ca5528" translate="yes" xml:space="preserve">
          <source>Along with their (mostly) C-derived names, the integer, float, and complex data-types are also available using a bit-width convention so that an array of the right size can always be ensured. Two aliases (&lt;a href=&quot;#numpy.intp&quot;&gt;&lt;code&gt;numpy.intp&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#numpy.uintp&quot;&gt;&lt;code&gt;numpy.uintp&lt;/code&gt;&lt;/a&gt;) pointing to the integer type that is sufficiently large to hold a C pointer are also provided.</source>
          <target state="translated">（ほとんど）Cから派生した名前に加えて、整数、浮動小数点数、および複素数のデータ型もビット幅の規則を使用して使用できるため、適切なサイズの配列を常に確保できます。Cポインターを保持するのに十分な大きさの整数型を指す2つのエイリアス（&lt;a href=&quot;#numpy.intp&quot;&gt; &lt;code&gt;numpy.intp&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#numpy.uintp&quot;&gt; &lt;code&gt;numpy.uintp&lt;/code&gt; &lt;/a&gt;）も提供されます。</target>
        </trans-unit>
        <trans-unit id="f4262e7f150c5914529572b5cd9e309be4f3a1f9" translate="yes" xml:space="preserve">
          <source>Alpha, positive (&amp;gt;0).</source>
          <target state="translated">アルファ、正（&amp;gt; 0）。</target>
        </trans-unit>
        <trans-unit id="1ebdee21b6a505b4aeefd9e14363fed83b554743" translate="yes" xml:space="preserve">
          <source>Alpha: &amp;lsquo;1.8.0a1&amp;rsquo;, &amp;lsquo;1.8.0a2&amp;rsquo;, etc.</source>
          <target state="translated">アルファ：「1.8.0a1」、「1.8.0a2」など</target>
        </trans-unit>
        <trans-unit id="6c7c998a02d246ade8effb246636669d3017223d" translate="yes" xml:space="preserve">
          <source>Alpine Linux (and other musl c library distros) support</source>
          <target state="translated">Alpine Linux (および他の musl c ライブラリディストロ)がサポートしています。</target>
        </trans-unit>
        <trans-unit id="da5e93aa3d78ef4ca7f7e53b7add77cc4b81efd4" translate="yes" xml:space="preserve">
          <source>Also accepts mu and sigma arguments.</source>
          <target state="translated">また、muとsigmaの引数も受け付けます。</target>
        </trans-unit>
        <trans-unit id="0b7c5f22b134cc3af66091a2f87fc3b22e43c5ef" translate="yes" xml:space="preserve">
          <source>Also allow scalars for indices.</source>
          <target state="translated">インデックスにスカラーを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="7251c141a65a5184415cbe928540e28b3360dffd" translate="yes" xml:space="preserve">
          <source>Also assume below that if the Notes talk about &amp;ldquo;matrix&amp;rdquo; that the arguments are two-dimensional entities.</source>
          <target state="translated">また、以下では、Notesが「行列」について説明している場合、引数は2次元エンティティであると想定します。</target>
        </trans-unit>
        <trans-unit id="58b23d955c4db2fc902a47049ecca184e6d09b31" translate="yes" xml:space="preserve">
          <source>Also create a new version hash in cversions.txt and a corresponding version define NPY_x_y_API_VERSION in numpyconfig.h</source>
          <target state="translated">また、cversions.txtに新しいバージョンハッシュを作成し、それに対応するバージョンを numpyconfig.hにNPY_x_y_API_VERSIONを定義します。</target>
        </trans-unit>
        <trans-unit id="a5239de48d300a49d551d40943d2cca20a2a2387" translate="yes" xml:space="preserve">
          <source>Also known as rolling or moving window, the window slides across all dimensions of the array and extracts subsets of the array at all window positions.</source>
          <target state="translated">ローリングウィンドウやムービングウィンドウとも呼ばれるこのウィンドウは、アレイのすべての次元をスライドし、すべてのウィンドウの位置でアレイのサブセットを抽出します。</target>
        </trans-unit>
        <trans-unit id="0d90d80696a309c7c8556cc68ea2ea97804da3bb" translate="yes" xml:space="preserve">
          <source>Also known as the Lorentz distribution.</source>
          <target state="translated">ローレンツ分布としても知られています。</target>
        </trans-unit>
        <trans-unit id="5314418ba7fc916c6ffe45c7e85e8067bf9357ce" translate="yes" xml:space="preserve">
          <source>Also known as the power function distribution.</source>
          <target state="translated">動力関数分布とも呼ばれています。</target>
        </trans-unit>
        <trans-unit id="5d179db72fc2e3131c342afeebad7f69e76c4889" translate="yes" xml:space="preserve">
          <source>Also note that, in general, the result of integrating a C-series needs to be &amp;ldquo;reprojected&amp;rdquo; onto the C-series basis set. Thus, typically, the result of this function is &amp;ldquo;unintuitive,&amp;rdquo; albeit correct; see Examples section below.</source>
          <target state="translated">また、一般に、Cシリーズを統合した結果は、Cシリーズベーシスセットに「再投影」する必要があることに注意してください。したがって、通常、この関数の結果は、正しいとはいえ、「直感的ではありません」。以下の例のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="5069b3090820edc390ac4ea5af79b726578db6bc" translate="yes" xml:space="preserve">
          <source>Also recognize that &lt;code&gt;x[[1,2,3]]&lt;/code&gt; will trigger advanced indexing, whereas due to the deprecated Numeric compatibility mentioned above, &lt;code&gt;x[[1,2,slice(None)]]&lt;/code&gt; will trigger basic slicing.</source>
          <target state="translated">また、 &lt;code&gt;x[[1,2,3]]&lt;/code&gt; は高度なインデックス作成をトリガーしますが、前述の非推奨の数値互換性のため、 &lt;code&gt;x[[1,2,slice(None)]]&lt;/code&gt; は基本的なスライスをトリガーします。</target>
        </trans-unit>
        <trans-unit id="b365c08da5d9707f8066a8a059aebd1096efa490" translate="yes" xml:space="preserve">
          <source>Also since much of NumPy is legacy code that was originally written without unit tests, there are still several modules that don&amp;rsquo;t have tests yet. Please feel free to choose one of these modules and develop tests for it.</source>
          <target state="translated">また、NumPyの多くは元々単体テストなしで記述されたレガシーコードであるため、まだテストが行​​われていないモジュールがいくつかあります。これらのモジュールのいずれかを自由に選択して、そのテストを開発してください。</target>
        </trans-unit>
        <trans-unit id="9d3aba4a2ff6c27b4f1a5e2eacd22c21dc662d1b" translate="yes" xml:space="preserve">
          <source>Also to temporarily override options, use &lt;a href=&quot;numpy.printoptions#numpy.printoptions&quot;&gt;&lt;code&gt;printoptions&lt;/code&gt;&lt;/a&gt; as a context manager:</source>
          <target state="translated">また、オプションを一時的にオーバーライドするには、コンテキストマネージャーとして&lt;a href=&quot;numpy.printoptions#numpy.printoptions&quot;&gt; &lt;code&gt;printoptions&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="40ce80b72a9c1717eb089ed66d73f56dd1035944" translate="yes" xml:space="preserve">
          <source>Also works for complex numbers (and thus can be used to map any line in the complex plane to any other line therein).</source>
          <target state="translated">複素数でも動作します(したがって、複素平面内の任意の線をその中の任意の他の線にマッピングするために使用することができます)。</target>
        </trans-unit>
        <trans-unit id="ae4104c7b18b9b6bb1e8bc147a280cadca288f5d" translate="yes" xml:space="preserve">
          <source>Also works for complex numbers, and thus can be used to calculate the parameters required to map any line in the complex plane to any other line therein.</source>
          <target state="translated">また、複素数に対しても動作するため、複素平面内の任意の線をその中の任意の他の線にマッピングするために必要なパラメータを計算するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="4d0e510cfcbca13b6ef52b5ccc774d1f9c86ee20" translate="yes" xml:space="preserve">
          <source>Also, when invoking the entire NumPy test suite, your tests will be found and run:</source>
          <target state="translated">また、NumPyのテストスイート全体を呼び出す際にも、あなたのテストが見つかり、実行されます。</target>
        </trans-unit>
        <trans-unit id="0f352a3bcd45d367a7b48fa8429730ec7b58156e" translate="yes" xml:space="preserve">
          <source>Also, when invoking the entire SciPy test suite, your tests will be found and run:</source>
          <target state="translated">また、SciPy テストスイート全体を起動すると、テストが発見されて実行されます。</target>
        </trans-unit>
        <trans-unit id="d3ae98cb5ab74a7083d29594486afdfdec895748" translate="yes" xml:space="preserve">
          <source>Also, when wrapping C functions, one must use &lt;code&gt;intent(c)&lt;/code&gt; attribute for &lt;code&gt;&amp;lt;routine name&amp;gt;&lt;/code&gt; in order to disable Fortran specific &lt;code&gt;F_FUNC(..,..)&lt;/code&gt; macros.</source>
          <target state="translated">また、C関数をラップする場合、Fortran固有の &lt;code&gt;F_FUNC(..,..)&lt;/code&gt; マクロを無効にするには、 &lt;code&gt;&amp;lt;routine name&amp;gt;&lt;/code&gt; に &lt;code&gt;intent(c)&lt;/code&gt; 属性を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="154136fcc4f44eb3b036da90a8bd08a2c9f62dbd" translate="yes" xml:space="preserve">
          <source>Alternate array object(s) in which to put the result; if provided, it must have a shape that the inputs broadcast to. A tuple of arrays (possible only as a keyword argument) must have length equal to the number of outputs; use None for uninitialized outputs to be allocated by the ufunc.</source>
          <target state="translated">結果を格納するための代替配列オブジェクト(複数可).配列のタプル(キーワード引数としてのみ可能)は、出力の数と同じ長さでなければなりません。</target>
        </trans-unit>
        <trans-unit id="186b59c13765d3d0d9381ad5de4a7d8b82c29991" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. It must have the same shape as the expected output and its type is preserved (e.g., if &lt;code&gt;dtype(out)&lt;/code&gt; is float, the result will consist of 0.0&amp;rsquo;s and 1.0&amp;rsquo;s). See &lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;Output type determination&lt;/a&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状である必要があり、そのタイプは保持されます（たとえば、 &lt;code&gt;dtype(out)&lt;/code&gt; がfloatの場合、結果は0.0と1.0で構成されます）。詳細については、&lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;出力タイプの決定&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c1698709727c2d257ee26f16d4cc2df0ac59e987" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. It must have the same shape as the expected output and its type is preserved (e.g., if &lt;code&gt;dtype(out)&lt;/code&gt; is float, the result will consist of 0.0&amp;rsquo;s and 1.0&amp;rsquo;s). See &lt;code&gt;doc.ufuncs&lt;/code&gt; (Section &amp;ldquo;Output arguments&amp;rdquo;) for more details.</source>
          <target state="translated">結果を配置する代替出力配列。予想される出力と同じ形状でなければならず、そのタイプは保持されます（たとえば、 &lt;code&gt;dtype(out)&lt;/code&gt; が浮動小数点の場合、結果は0.0と1.0で構成されます）。詳細については、 &lt;code&gt;doc.ufuncs&lt;/code&gt; （「出力引数」のセクション）を参照してください。</target>
        </trans-unit>
        <trans-unit id="95f8e28a3239be3e35610b35ae41af8f03a1a373" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. It must have the same shape as the expected output and its type is preserved (e.g., if &lt;code&gt;dtype(out)&lt;/code&gt; is float, the result will consist of 0.0&amp;rsquo;s and 1.0&amp;rsquo;s). See &lt;code&gt;ufuncs-output-type&lt;/code&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状である必要があり、そのタイプは保持されます（たとえば、 &lt;code&gt;dtype(out)&lt;/code&gt; がfloatの場合、結果は0.0と1.0で構成されます）。詳細については、 &lt;code&gt;ufuncs-output-type&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="05d635b829a3272cd2c92ec40258a7d4b60c9c89" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. It must have the same shape as the expected output and its type is preserved (e.g., if it is of type float, then it will remain so, returning 1.0 for True and 0.0 for False, regardless of the type of &lt;code&gt;a&lt;/code&gt;). See &lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;Output type determination&lt;/a&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状である必要があり、その型は保持されます（たとえば、float型の場合はそのままで &lt;code&gt;a&lt;/code&gt; の型に関係なく、Trueの場合は1.0、Falseの場合は0.0を返します）。詳細については、&lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;出力タイプの決定&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e7d8cfa461bbd4723af0411cedff8e47a335d9d0" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. It must have the same shape as the expected output and its type is preserved (e.g., if it is of type float, then it will remain so, returning 1.0 for True and 0.0 for False, regardless of the type of &lt;code&gt;a&lt;/code&gt;). See &lt;code&gt;doc.ufuncs&lt;/code&gt; (Section &amp;ldquo;Output arguments&amp;rdquo;) for details.</source>
          <target state="translated">結果を配置する代替出力配列。予想される出力と同じ形状である必要があり、その型は保持されます（たとえば、それがfloat型の場合、それはそのまま残り、 &lt;code&gt;a&lt;/code&gt; の型に関係なく、Trueの場合は1.0、Falseの場合は0.0を返します）。詳細については、 &lt;code&gt;doc.ufuncs&lt;/code&gt; （「出力引数」のセクション）を参照してください。</target>
        </trans-unit>
        <trans-unit id="7db01b91ec975c6069f8aa13f1c695893071334f" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. It must have the same shape as the expected output and its type is preserved (e.g., if it is of type float, then it will remain so, returning 1.0 for True and 0.0 for False, regardless of the type of &lt;code&gt;a&lt;/code&gt;). See &lt;code&gt;ufuncs-output-type&lt;/code&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状である必要があり、その型は保持されます（たとえば、float型の場合はそのままで &lt;code&gt;a&lt;/code&gt; の型に関係なく、Trueの場合は1.0、Falseの場合は0.0を返します）。詳細については、 &lt;code&gt;ufuncs-output-type&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="4866e784e2d9af93d956076b9ca654f019b24a96" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. It must have the same shape as the expected output, but the type is cast if necessary.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形でなければなりませんが、必要に応じて型はキャストされます。</target>
        </trans-unit>
        <trans-unit id="226b9f31a57381e88270efcf56d05a2acdd0d4be" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. The default is &lt;code&gt;None&lt;/code&gt;. If provided, it must have the same shape as the expected output, but the type will be cast if necessary. See &lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;Output type determination&lt;/a&gt; for more details. The casting of NaN to integer can yield unexpected results.</source>
          <target state="translated">結果を配置する代替出力配列。デフォルトは &lt;code&gt;None&lt;/code&gt; です。提供する場合、期待される出力と同じ形状である必要がありますが、タイプは必要に応じてキャストされます。詳細については、&lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;出力タイプの決定&lt;/a&gt;を参照してください。NaNを整数にキャストすると、予期しない結果が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="cb1ad439f43dc00d7ef73618d741c98ced923654" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. The default is &lt;code&gt;None&lt;/code&gt;. If provided, it must have the same shape as the expected output, but the type will be cast if necessary. See &lt;code&gt;doc.ufuncs&lt;/code&gt; for details. The casting of NaN to integer can yield unexpected results.</source>
          <target state="translated">結果を配置する代替出力配列。デフォルトは &lt;code&gt;None&lt;/code&gt; です。指定する場合は、予想される出力と同じ形状にする必要がありますが、必要に応じて型がキャストされます。詳細については、 &lt;code&gt;doc.ufuncs&lt;/code&gt; を参照してください。NaNを整数にキャストすると、予期しない結果が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="38808f978bef951a5c3af38877e5f4e00fc749f3" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. The default is &lt;code&gt;None&lt;/code&gt;. If provided, it must have the same shape as the expected output, but the type will be cast if necessary. See &lt;code&gt;ufuncs-output-type&lt;/code&gt; for more details. The casting of NaN to integer can yield unexpected results.</source>
          <target state="translated">結果を配置する代替出力配列。デフォルトは &lt;code&gt;None&lt;/code&gt; です。提供する場合、期待される出力と同じ形状である必要がありますが、タイプは必要に応じてキャストされます。詳細については、 &lt;code&gt;ufuncs-output-type&lt;/code&gt; を参照してください。NaNを整数にキャストすると、予期しない結果が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="44b0fc31b204b79086bfe677cbdfc1824ce755c7" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. The default is &lt;code&gt;None&lt;/code&gt;; if provided, it must have the same shape as the expected output, but the type will be cast if necessary. See &lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;Output type determination&lt;/a&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。デフォルトは &lt;code&gt;None&lt;/code&gt; です。提供する場合、期待される出力と同じ形状である必要がありますが、タイプは必要に応じてキャストされます。詳細については、&lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;出力タイプの決定&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a1df7e48a8694bc511c33f4fdb83c6299c349bb3" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. The default is &lt;code&gt;None&lt;/code&gt;; if provided, it must have the same shape as the expected output, but the type will be cast if necessary. See &lt;code&gt;doc.ufuncs&lt;/code&gt; for details.</source>
          <target state="translated">結果を配置する代替出力配列。デフォルトは &lt;code&gt;None&lt;/code&gt; です。指定する場合は、予想される出力と同じ形状にする必要がありますが、必要に応じて型がキャストされます。詳細については、 &lt;code&gt;doc.ufuncs&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="d2c40a652c7d0a0ce2c8ac32e90d759ce3f5fbf3" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. The default is &lt;code&gt;None&lt;/code&gt;; if provided, it must have the same shape as the expected output, but the type will be cast if necessary. See &lt;code&gt;ufuncs-output-type&lt;/code&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。デフォルトは &lt;code&gt;None&lt;/code&gt; です。提供する場合、期待される出力と同じ形状である必要がありますが、タイプは必要に応じてキャストされます。詳細については、 &lt;code&gt;ufuncs-output-type&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="2ee2621619f5de76df486cb10b39483168645510" translate="yes" xml:space="preserve">
          <source>Alternately, one can omit the &lt;code&gt;seed&lt;/code&gt; parameter and set the &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;counter&lt;/code&gt; directly.</source>
          <target state="translated">または、 &lt;code&gt;seed&lt;/code&gt; パラメータを省略して、 &lt;code&gt;key&lt;/code&gt; と &lt;code&gt;counter&lt;/code&gt; 直接設定することもできます。</target>
        </trans-unit>
        <trans-unit id="ad525857dfba045e849cea18042cc3d7880b99c2" translate="yes" xml:space="preserve">
          <source>Alternately, one can omit the seed parameter and set the &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;counter&lt;/code&gt; directly.</source>
          <target state="translated">あるいは、シードパラメータを省略して、 &lt;code&gt;key&lt;/code&gt; と &lt;code&gt;counter&lt;/code&gt; 直接設定することもできます。</target>
        </trans-unit>
        <trans-unit id="9b43a5588bae4cb9f5e29de0b36052914afeba32" translate="yes" xml:space="preserve">
          <source>Alternative Looping and Element Access</source>
          <target state="translated">代替ループと要素アクセス</target>
        </trans-unit>
        <trans-unit id="04c50d39f026457c3ef039adee4c7d2e01334bf3" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. If size is not None, it must have the same shape as the provided size and must match the type of the output values.</source>
          <target state="translated">結果を配置する代替出力配列。size が None でない場合は、指定された size と同じ形をしていなければならず、出力値の型にマッチしていなければなりません。</target>
        </trans-unit>
        <trans-unit id="ac126422935264a529db37a224ca2732607cef38" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output but the type of the resulting values will be cast if necessary.</source>
          <target state="translated">結果を格納する代替出力配列。期待される出力と同じ形状とバッファの長さでなければなりませんが、結果の値の型は必要に応じてキャストされます。</target>
        </trans-unit>
        <trans-unit id="e863787368c91b7bab7460b77df3b49a02452a31" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output but the type will be cast if necessary.</source>
          <target state="translated">結果を格納する代替出力配列。これは、期待される出力と同じ形状とバッファの長さでなければなりませんが、必要に応じて型はキャストされます。</target>
        </trans-unit>
        <trans-unit id="39933ee76bd16a325ecec03a6b6c69433535c017" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output but the type will be cast if necessary. See &lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;Output type determination&lt;/a&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状とバッファ長である必要がありますが、タイプは必要に応じてキャストされます。詳細については、&lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;出力タイプの決定&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9008d4b2e922f165a265eb88d277e1ffec09130a" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output but the type will be cast if necessary. See &lt;code&gt;doc.ufuncs&lt;/code&gt; (Section &amp;ldquo;Output arguments&amp;rdquo;) for more details.</source>
          <target state="translated">結果を配置する代替出力配列。予想される出力と同じ形状と長さのバッファが必要ですが、必要に応じて型がキャストされます。詳細については、 &lt;code&gt;doc.ufuncs&lt;/code&gt; （「出力引数」のセクション）を参照してください。</target>
        </trans-unit>
        <trans-unit id="560906432a29bad6bb6d814b0821886b56a3beb1" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output but the type will be cast if necessary. See &lt;code&gt;ufuncs-output-type&lt;/code&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状とバッファ長である必要がありますが、タイプは必要に応じてキャストされます。詳細については、 &lt;code&gt;ufuncs-output-type&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="6716188c035c63d861379b98db31dc6a05b5e2ca" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output, but the type (of the output) will be cast if necessary.</source>
          <target state="translated">結果を配置する代替出力配列。これは、期待される出力と同じ形状とバッファの長さでなければなりませんが、必要に応じて (出力の)型がキャストされます。</target>
        </trans-unit>
        <trans-unit id="0a76cb94a0ca7efaae715d349afff176965d63b9" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output, but the type of the output values will be cast if necessary.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状とバッファの長さでなければなりませんが、必要に応じて出力値の型がキャストされます。</target>
        </trans-unit>
        <trans-unit id="c295d74f775619fe463f057ab1dbd08a7d79f8f7" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape as the expected output but the type (of the calculated values) will be cast if necessary.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形でなければなりませんが、必要に応じて型(計算された値)がキャストされます。</target>
        </trans-unit>
        <trans-unit id="61a2880769e0fb1df50a4ab9060f58e553c38840" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape as the expected output but the type will be cast if necessary.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形でなければなりませんが、必要に応じて型はキャストされます。</target>
        </trans-unit>
        <trans-unit id="43b99c7a8d7488b79863b62ea908025b20096c8f" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape as the expected output, but the type of the output values will be cast if necessary.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形でなければなりませんが、必要に応じて出力値の型がキャストされます。</target>
        </trans-unit>
        <trans-unit id="f57d3485f19d67da466a6ee0162576b7a38c2d51" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape as the expected output, but the type of the output values will be cast if necessary. See &lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;Output type determination&lt;/a&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状である必要がありますが、出力値のタイプは必要に応じてキャストされます。詳細については、&lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;出力タイプの決定&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fd666e1b61b4360073157ecd0d0fcb9aaf5ef0cb" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape as the expected output, but the type of the output values will be cast if necessary. See &lt;code&gt;doc.ufuncs&lt;/code&gt; (Section &amp;ldquo;Output arguments&amp;rdquo;) for details.</source>
          <target state="translated">結果を配置する代替出力配列。予想される出力と同じ形状である必要がありますが、出力値のタイプは必要に応じてキャストされます。詳細については、 &lt;code&gt;doc.ufuncs&lt;/code&gt; （「出力引数」のセクション）を参照してください。</target>
        </trans-unit>
        <trans-unit id="245e3a5608b1c0ef8480e4bf9bf31cd384c67b24" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. It must have the same shape as the expected output, but the type of the output values will be cast if necessary. See &lt;code&gt;ufuncs-output-type&lt;/code&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状である必要がありますが、出力値のタイプは必要に応じてキャストされます。詳細については、 &lt;code&gt;ufuncs-output-type&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="886dc56850e1cdcb4b242ab241178dd7eddb1737" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. Must be of the same shape and buffer length as the expected output.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状とバッファ長でなければなりません。</target>
        </trans-unit>
        <trans-unit id="1dcc9c9b3901d2494530fe7503598647c49bed56" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. Must be of the same shape and buffer length as the expected output. See &lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;Output type determination&lt;/a&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状とバッファ長である必要があります。詳細については、&lt;a href=&quot;../ufuncs#ufuncs-output-type&quot;&gt;出力タイプの決定&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="30fc9cbd185de6b1e0ea1c76efbbd7a9e0eec0f8" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. Must be of the same shape and buffer length as the expected output. See &lt;code&gt;doc.ufuncs&lt;/code&gt; (Section &amp;ldquo;Output arguments&amp;rdquo;) for more details.</source>
          <target state="translated">結果を配置する代替出力配列。予想される出力と同じ形状およびバッファー長でなければなりません。詳細については、 &lt;code&gt;doc.ufuncs&lt;/code&gt; （「出力引数」のセクション）を参照してください。</target>
        </trans-unit>
        <trans-unit id="e9e1ab01a092624605645e8be4dd14df1a54ff4f" translate="yes" xml:space="preserve">
          <source>Alternative output array in which to place the result. Must be of the same shape and buffer length as the expected output. See &lt;code&gt;ufuncs-output-type&lt;/code&gt; for more details.</source>
          <target state="translated">結果を配置する代替出力配列。期待される出力と同じ形状とバッファ長である必要があります。詳細については、 &lt;code&gt;ufuncs-output-type&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="062470a2ae6bc814c086d6b65330892b0f072b57" translate="yes" xml:space="preserve">
          <source>Alternatively one may use &lt;code&gt;!&lt;/code&gt; or &lt;code&gt;^&lt;/code&gt; to negate all items:</source>
          <target state="translated">または、 &lt;code&gt;!&lt;/code&gt; を使用することもできます。または &lt;code&gt;^&lt;/code&gt; すべてのアイテムを無効にします：</target>
        </trans-unit>
        <trans-unit id="b0988f7b666b0761e9579b2bdb1096aad1df99ee" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;a href=&quot;#numpy.testing.assert_raises&quot;&gt;&lt;code&gt;assert_raises&lt;/code&gt;&lt;/a&gt; can be used as a context manager:</source>
          <target state="translated">または、&lt;a href=&quot;#numpy.testing.assert_raises&quot;&gt; &lt;code&gt;assert_raises&lt;/code&gt; &lt;/a&gt;をコンテキストマネージャとして使用することもできます。</target>
        </trans-unit>
        <trans-unit id="042b85098c25d452344f7eaee4b5c7db2499e054" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;code&gt;Philox&lt;/code&gt; can be used in parallel applications by using a sequence of distinct keys where each instance uses different key.</source>
          <target state="translated">または、 &lt;code&gt;Philox&lt;/code&gt; は、各インスタンスが異なるキーを使用する一連の異なるキーを使用することにより、並列アプリケーションで使用できます。</target>
        </trans-unit>
        <trans-unit id="4dd54fd37b627992b2c834451aea6cfe5843000e" translate="yes" xml:space="preserve">
          <source>Alternatively, Python&amp;rsquo;s builtin &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#round&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt; function uses a more accurate but slower algorithm for 64-bit floating point values:</source>
          <target state="translated">または、Pythonの組み込み&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#round&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt;関数は、64ビット浮動小数点値に対してより正確ですが低速のアルゴリズムを使用します。</target>
        </trans-unit>
        <trans-unit id="f0623427bd96685461eb8fa62b01f63338db5ece" translate="yes" xml:space="preserve">
          <source>Alternatively, calling:</source>
          <target state="translated">あるいは、電話をかける。</target>
        </trans-unit>
        <trans-unit id="603108a6af86b03c6a3e370901679f4bbc10b9d8" translate="yes" xml:space="preserve">
          <source>Alternatively, can be used as a context manager like &lt;a href=&quot;numpy.testing.assert_raises#numpy.testing.assert_raises&quot;&gt;&lt;code&gt;assert_raises&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">あるいは、&lt;a href=&quot;numpy.testing.assert_raises#numpy.testing.assert_raises&quot;&gt; &lt;code&gt;assert_raises&lt;/code&gt; の&lt;/a&gt;ようなコンテキストマネージャとして使用できます。</target>
        </trans-unit>
        <trans-unit id="64d1b2b8f8933f7c73a15d5c48954079a5c5f378" translate="yes" xml:space="preserve">
          <source>Alternatively, if &lt;code&gt;obj.__array_ufunc__&lt;/code&gt; is set to &lt;a href=&quot;https://docs.python.org/dev/library/constants.html#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, then as a special case, special methods like &lt;code&gt;ndarray.__add__&lt;/code&gt; will notice this and &lt;em&gt;unconditionally&lt;/em&gt; raise &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. This is useful if you want to create objects that interact with arrays via binary operations, but are not themselves arrays. For example, a units handling system might have an object &lt;code&gt;m&lt;/code&gt; representing the &amp;ldquo;meters&amp;rdquo; unit, and want to support the syntax &lt;code&gt;arr * m&lt;/code&gt; to represent that the array has units of &amp;ldquo;meters&amp;rdquo;, but not want to otherwise interact with arrays via ufuncs or otherwise. This can be done by setting &lt;code&gt;__array_ufunc__ = None&lt;/code&gt; and defining &lt;code&gt;__mul__&lt;/code&gt; and &lt;code&gt;__rmul__&lt;/code&gt; methods. (Note that this means that writing an &lt;code&gt;__array_ufunc__&lt;/code&gt; that always returns &lt;a href=&quot;https://docs.python.org/dev/library/constants.html#NotImplemented&quot;&gt;&lt;code&gt;NotImplemented&lt;/code&gt;&lt;/a&gt; is not quite the same as setting &lt;code&gt;__array_ufunc__ = None&lt;/code&gt;: in the former case, &lt;code&gt;arr + obj&lt;/code&gt; will raise &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, while in the latter case it is possible to define a &lt;code&gt;__radd__&lt;/code&gt; method to prevent this.)</source>
          <target state="translated">または、 &lt;code&gt;obj.__array_ufunc__&lt;/code&gt; が&lt;a href=&quot;https://docs.python.org/dev/library/constants.html#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;に設定されている場合、特別なケースとして、 &lt;code&gt;ndarray.__add__&lt;/code&gt; などの特別なメソッドがこれに気づき、&lt;em&gt;無条件&lt;/em&gt;に&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を送出し&lt;/a&gt;ます。これは、バイナリ演算を介して配列と相互作用するが、それ自体は配列ではないオブジェクトを作成する場合に役立ちます。たとえば、ユニットハンドリングシステムには、「メートル」単位を表すオブジェクト &lt;code&gt;m&lt;/code&gt; があり、配列に「メートル」の単位があることを表す構文 &lt;code&gt;arr * m&lt;/code&gt; をサポートしたいが、その他の方法でufuncsを介して配列と対話したくない場合があります。もしくはそうでないか。これを行うには、 &lt;code&gt;__array_ufunc__ = None&lt;/code&gt; を設定し、__ mul__を定義し &lt;code&gt;__mul__&lt;/code&gt; および &lt;code&gt;__rmul__&lt;/code&gt; メソッド。 （ &lt;code&gt;__array_ufunc__&lt;/code&gt; 、常にNotImplementedを返す&lt;a href=&quot;https://docs.python.org/dev/library/constants.html#NotImplemented&quot;&gt; &lt;code&gt;NotImplemented&lt;/code&gt; &lt;/a&gt;を書き込むことは、__ &lt;code&gt;__array_ufunc__ = None&lt;/code&gt; を設定することとまったく同じではないことに注意してください。前者の場合、 &lt;code&gt;arr + obj&lt;/code&gt; は&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を発生&lt;/a&gt;させ、後者の場合、 &lt;code&gt;__radd__&lt;/code&gt; メソッドを定義してこれを防ぎます。）</target>
        </trans-unit>
        <trans-unit id="b234cd2c60cae194ebb6fd51ca6da093f0fee91f" translate="yes" xml:space="preserve">
          <source>Alternatively, if &lt;code&gt;obj.__array_ufunc__&lt;/code&gt; is set to None, then as a special case, special methods like &lt;code&gt;ndarray.__add__&lt;/code&gt; will notice this and &lt;em&gt;unconditionally&lt;/em&gt; raise &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;. This is useful if you want to create objects that interact with arrays via binary operations, but are not themselves arrays. For example, a units handling system might have an object &lt;code&gt;m&lt;/code&gt; representing the &amp;ldquo;meters&amp;rdquo; unit, and want to support the syntax &lt;code&gt;arr * m&lt;/code&gt; to represent that the array has units of &amp;ldquo;meters&amp;rdquo;, but not want to otherwise interact with arrays via ufuncs or otherwise. This can be done by setting &lt;code&gt;__array_ufunc__ = None&lt;/code&gt; and defining &lt;code&gt;__mul__&lt;/code&gt; and &lt;code&gt;__rmul__&lt;/code&gt; methods. (Note that this means that writing an &lt;code&gt;__array_ufunc__&lt;/code&gt; that always returns &lt;a href=&quot;https://docs.python.org/dev/library/constants.html#NotImplemented&quot;&gt;&lt;code&gt;NotImplemented&lt;/code&gt;&lt;/a&gt; is not quite the same as setting &lt;code&gt;__array_ufunc__ = None&lt;/code&gt;: in the former case, &lt;code&gt;arr + obj&lt;/code&gt; will raise &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, while in the latter case it is possible to define a &lt;code&gt;__radd__&lt;/code&gt; method to prevent this.)</source>
          <target state="translated">あるいは、 &lt;code&gt;obj.__array_ufunc__&lt;/code&gt; がNoneに設定されている場合、特別な場合として、 &lt;code&gt;ndarray.__add__&lt;/code&gt; ような特別なメソッドはこれに気づき、&lt;em&gt;無条件&lt;/em&gt;に&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を発生させ&lt;/a&gt;ます。これは、二項演算を介して配列と相互作用するが、それ自体は配列ではないオブジェクトを作成する場合に役立ちます。たとえば、単位処理システムに「メートル」単位を表すオブジェクト &lt;code&gt;m&lt;/code&gt; があり、配列に「メートル」の単位があることを表す構文 &lt;code&gt;arr * m&lt;/code&gt; をサポートしたいが、それ以外の場合はufuncsを介して配列と対話したくない場合があります。もしくはそうでないか。これは、設定によって行うことができる &lt;code&gt;__array_ufunc__ = None&lt;/code&gt; と定義 &lt;code&gt;__mul__&lt;/code&gt; と &lt;code&gt;__rmul__&lt;/code&gt; メソッド。（これは、常に &lt;code&gt;__array_ufunc__&lt;/code&gt; を返す&lt;a href=&quot;https://docs.python.org/dev/library/constants.html#NotImplemented&quot;&gt; &lt;code&gt;NotImplemented&lt;/code&gt; &lt;/a&gt;を記述することは、__ &lt;code&gt;__array_ufunc__ = None&lt;/code&gt; を設定することとまったく同じではないことに注意してください。前者の場合、 &lt;code&gt;arr + obj&lt;/code&gt; は&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を発生さ&lt;/a&gt;せますが、後者の場合、 &lt;code&gt;__radd__&lt;/code&gt; メソッドを次のように定義できます。これを防ぎます。）</target>
        </trans-unit>
        <trans-unit id="dc724637dcaf6077291b2447e9e15e17d24e3961" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;mask&lt;/code&gt; can be initialized to homogeneous boolean array with the same shape as &lt;code&gt;data&lt;/code&gt; by passing in a scalar boolean value:</source>
          <target state="translated">または、スカラーブール値を渡す &lt;code&gt;data&lt;/code&gt; により、データと同じ形状の同種のブール配列に &lt;code&gt;mask&lt;/code&gt; を初期化できます。</target>
        </trans-unit>
        <trans-unit id="583a1520082a2f841cb9c2b26df45a61aae29321" translate="yes" xml:space="preserve">
          <source>Alternatively, the bit-width names can be used as supported on the platform. For example:</source>
          <target state="translated">あるいは、プラットフォームでサポートされているようにビット幅の名前を使用することもできます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="b1f643599e11dc92776d62b472f093ed0c1d450f" translate="yes" xml:space="preserve">
          <source>Alternatively, we may be dealing with a fixed-width file, where columns are defined as a given number of characters. In that case, we need to set &lt;code&gt;delimiter&lt;/code&gt; to a single integer (if all the columns have the same size) or to a sequence of integers (if columns can have different sizes):</source>
          <target state="translated">または、列が指定された文字数として定義されている固定幅のファイルを処理している場合もあります。その場合、 &lt;code&gt;delimiter&lt;/code&gt; を単一の整数（すべての列のサイズが同じ場合）または整数のシーケンス（列のサイズが異なる場合）に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="5b1b0753c6257b8ad2057a0e9b1f821b6cb17b75" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;a href=&quot;https://hypothesis.readthedocs.io/en/latest/&quot;&gt;Hypothesis&lt;/a&gt; to generate arbitrary data. Hypothesis manages both Python&amp;rsquo;s and Numpy&amp;rsquo;s random seeds for you, and provides a very concise and powerful way to describe data (including &lt;code&gt;hypothesis.extra.numpy&lt;/code&gt;, e.g. for a set of mutually-broadcastable shapes).</source>
          <target state="translated">または、&lt;a href=&quot;https://hypothesis.readthedocs.io/en/latest/&quot;&gt;仮説&lt;/a&gt;を使用して任意のデータを生成することもできます。Hypothesisは、PythonとNumpyの両方のランダムシードを管理し、データを記述するための非常に簡潔で強力な方法を提供します（ &lt;code&gt;hypothesis.extra.numpy&lt;/code&gt; を含む、たとえば、相互にブロードキャスト可能な形状のセット）。</target>
        </trans-unit>
        <trans-unit id="6a5c1fc742fbfbb6eee68bcc7446dc905aabc940" translate="yes" xml:space="preserve">
          <source>Alternatively, you may be able to use the storage-class specifier &lt;code&gt;__declspec(dllexport)&lt;/code&gt; in the C-definition of the function to avoid the need for this &lt;code&gt;.def&lt;/code&gt; file.</source>
          <target state="translated">または、関数のC定義でストレージクラス指定子 &lt;code&gt;__declspec(dllexport)&lt;/code&gt; を使用して、この &lt;code&gt;.def&lt;/code&gt; ファイルの必要性を回避できる場合があります。</target>
        </trans-unit>
        <trans-unit id="9875627fa24fe1db3e053ef8032f82cdbcfc75ff" translate="yes" xml:space="preserve">
          <source>Although the angle of the complex number 0 is undefined, &lt;code&gt;numpy.angle(0)&lt;/code&gt; returns the value 0.</source>
          <target state="translated">複素数0の角度は定義されていませんが、 &lt;code&gt;numpy.angle(0)&lt;/code&gt; は値0を返します。</target>
        </trans-unit>
        <trans-unit id="b342c0c34753dcaf1006d8958e953680d63f33ea" translate="yes" xml:space="preserve">
          <source>Although this is valid Numpy code, the type checker will complain about it, since its usage is discouraged. Please see : &lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;Data type objects&lt;/a&gt;</source>
          <target state="translated">これは有効なNumpyコードですが、使用が推奨されていないため、タイプチェッカーはこれについて文句を言います。参照してください：&lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;データ型オブジェクト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17df52de914786306f2e7b14be29f81e3abb7330" translate="yes" xml:space="preserve">
          <source>Although used in certain projects, this feature was long undocumented and is not well supported. Some aspects of metadata propagation are expected to change in the future.</source>
          <target state="translated">特定のプロジェクトで使用されていますが、この機能は長い間文書化されておらず、サポートも十分ではありません。メタデータの伝搬に関するいくつかの側面は、将来的に変更されることが予想されます。</target>
        </trans-unit>
        <trans-unit id="eb4639a6aea46ce8ed71791f65c8f91e841387e7" translate="yes" xml:space="preserve">
          <source>Although we provide the &lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; BitGenerator for use independent of &lt;a href=&quot;#numpy.random.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt;, note that its default seeding uses &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; rather than the legacy seeding algorithm. &lt;a href=&quot;#numpy.random.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; will use the legacy seeding algorithm. The methods to use the legacy seeding algorithm are currently private as the main reason to use them is just to implement &lt;a href=&quot;#numpy.random.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt;. However, one can reset the state of &lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; using the state of the &lt;a href=&quot;#numpy.random.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">我々は提供しますが&lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; &lt;/a&gt;の使用に依存しないためBitGeneratorを&lt;a href=&quot;#numpy.random.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;、ノートデフォルト播種の用途があること&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;レガシー播種アルゴリズムではなく。&lt;a href=&quot;#numpy.random.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;は、従来のシードアルゴリズムを使用します。従来のシードアルゴリズムを使用する方法は現在プライベート&lt;a href=&quot;#numpy.random.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;。これらを使用する主な理由は、RandomStateを実装するためだけです。ただし、&lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; &lt;/a&gt;の状態を使用してMT19937の状態をリセットでき&lt;a href=&quot;#numpy.random.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e228119d8236b4e4d18e3b2e104d4d85e550ff8" translate="yes" xml:space="preserve">
          <source>Although we provide the &lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; BitGenerator for use independent of &lt;a href=&quot;#numpy.random.mtrand.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt;, note that its default seeding uses &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; rather than the legacy seeding algorithm. &lt;a href=&quot;#numpy.random.mtrand.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; will use the legacy seeding algorithm. The methods to use the legacy seeding algorithm are currently private as the main reason to use them is just to implement &lt;a href=&quot;#numpy.random.mtrand.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt;. However, one can reset the state of &lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; using the state of the &lt;a href=&quot;#numpy.random.mtrand.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">我々は提供しますが&lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; &lt;/a&gt;の使用に依存しないためBitGeneratorを&lt;a href=&quot;#numpy.random.mtrand.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;、ノートデフォルト播種の用途があること&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;レガシー播種アルゴリズムではなく。&lt;a href=&quot;#numpy.random.mtrand.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;は、従来のシードアルゴリズムを使用します。レガシーシードアルゴリズムを使用する主な理由は、単に&lt;a href=&quot;#numpy.random.mtrand.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;を実装するためであるため、レガシーシードアルゴリズムを使用するメソッドは現在プライベートです。ただし、&lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; &lt;/a&gt;の状態を使用してMT19937の状態をリセットでき&lt;a href=&quot;#numpy.random.mtrand.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="661995b09649a8e5abaf7ee085f0d42af259279d" translate="yes" xml:space="preserve">
          <source>Always put spaces around the assignment, Boolean and comparison operators. In expressions using a lot of operators, add spaces around the outermost (lowest priority) operators.</source>
          <target state="translated">代入演算子、ブール演算子、比較演算子の周りには必ずスペースを入れてください。多くの演算子を使用する式では、最も外側の(優先度の低い)演算子の周りにスペースを追加します。</target>
        </trans-unit>
        <trans-unit id="dcc9ccd559a420363c97ebc977b2af5b809d20bf" translate="yes" xml:space="preserve">
          <source>Always returns False if &lt;code&gt;x&lt;/code&gt; isn&amp;rsquo;t a MaskedArray.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; がMaskedArrayでない場合は、常にFalseを返します。</target>
        </trans-unit>
        <trans-unit id="1b6227067f2d29f54359191689a5ac01ab8ecb4c" translate="yes" xml:space="preserve">
          <source>Always returns a sorted complex array.</source>
          <target state="translated">常にソートされた複素配列を返します。</target>
        </trans-unit>
        <trans-unit id="69ee6c2d0ed15c79e0813d98fa14630bebc22ae2" translate="yes" xml:space="preserve">
          <source>Among other options (see below) and options described in previous mode, the following options can be used in this mode:</source>
          <target state="translated">このモードでは、他のオプション(後述)や前回のモードで説明したオプションのうち、以下のオプションを使用することができます。</target>
        </trans-unit>
        <trans-unit id="df8d527f17cb0a1b5c3b8b6888a9546f1c89e0c3" translate="yes" xml:space="preserve">
          <source>Among other options (see below), the following options can be used in this mode:</source>
          <target state="translated">このモードでは、他のオプション(以下を参照)のうち、以下のオプションを使用することができます。</target>
        </trans-unit>
        <trans-unit id="7c68db5bc6e63b5b5bb435069771f8f296cb78c3" translate="yes" xml:space="preserve">
          <source>Among other things that are made possible is one can create a new array metadata object that uses the same data buffer to create a new view of that data buffer that has a different interpretation of the buffer (e.g., different shape, offset, byte order, strides, etc) but shares the same data bytes. Many operations in numpy do just this such as slices. Other operations, such as transpose, don&amp;rsquo;t move data elements around in the array, but rather change the information about the shape and strides so that the indexing of the array changes, but the data in the doesn&amp;rsquo;t move.</source>
          <target state="translated">特に可能になるのは、同じデータバッファーを使用する新しい配列メタデータオブジェクトを作成して、バッファーの解釈が異なる（たとえば、形状、オフセット、バイトオーダーが異なる）データバッファーの新しいビューを作成できることです。ストライドなど）が、同じデータバイトを共有します。numpyの多くの操作は、スライスのようにこれを行います。転置などの他の操作では、配列内のデータ要素は移動されませんが、形状とストライドに関する情報が変更され、配列のインデックスが変更されますが、配列内のデータは移動されません。</target>
        </trans-unit>
        <trans-unit id="9012c3648b6842a1e98c739d70a131d648f59d92" translate="yes" xml:space="preserve">
          <source>Among others this includes the likes of:</source>
          <target state="translated">その中には、以下のようなものも含まれています。</target>
        </trans-unit>
        <trans-unit id="d580c4489c2c610aab44ce0ad58b3f097208f00d" translate="yes" xml:space="preserve">
          <source>Amount paid against the loan changes. The &lt;code&gt;per&lt;/code&gt; is the period of interest.</source>
          <target state="translated">ローンの変更に対して支払われる金額。 &lt;code&gt;per&lt;/code&gt; 興味の期間です。</target>
        </trans-unit>
        <trans-unit id="99690d58d4abd10cd0938a7adcb56ded08ef66ad" translate="yes" xml:space="preserve">
          <source>An</source>
          <target state="translated">An</target>
        </trans-unit>
        <trans-unit id="83be67019e691f2e260d9d1c579e9717c930d1f5" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#term-ndarray&quot;&gt;ndarray&lt;/a&gt; with &lt;a href=&quot;#term-structured-data-type&quot;&gt;structured data type&lt;/a&gt; which has been subclassed as &lt;code&gt;np.recarray&lt;/code&gt; and whose dtype is of type &lt;code&gt;np.record&lt;/code&gt;, making the fields of its data type to be accessible by attribute.</source>
          <target state="translated">&lt;a href=&quot;#term-ndarray&quot;&gt;ndarray&lt;/a&gt;と&lt;a href=&quot;#term-structured-data-type&quot;&gt;構造化データ型&lt;/a&gt;としてサブクラス化されてきた &lt;code&gt;np.recarray&lt;/code&gt; そのDTYPEタイプのものであり、 &lt;code&gt;np.record&lt;/code&gt; そのデータ型のフィールドを作成するには、属性によってアクセスできるようにします。</target>
        </trans-unit>
        <trans-unit id="acae2de70c42b720bf5497e24967979b922bd47e" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; is a (usually fixed-size) multidimensional container of items of the same type and size. The number of dimensions and items in an array is defined by its &lt;a href=&quot;generated/numpy.ndarray.shape#numpy.ndarray.shape&quot;&gt;&lt;code&gt;shape&lt;/code&gt;&lt;/a&gt;, which is a &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; of &lt;em&gt;N&lt;/em&gt; non-negative integers that specify the sizes of each dimension. The type of items in the array is specified by a separate &lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;data-type object (dtype)&lt;/a&gt;, one of which is associated with each ndarray.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; は、&lt;/a&gt;同じタイプおよびサイズのアイテムの（通常固定サイズ）多次元容器です。配列の次元と項目の数は、&lt;a href=&quot;generated/numpy.ndarray.shape#numpy.ndarray.shape&quot;&gt; &lt;code&gt;shape&lt;/code&gt; &lt;/a&gt;によって定義されます。これは、各次元のサイズを指定する&lt;em&gt;N個&lt;/em&gt;の非負整数の&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;です。配列内の項目のタイプは、個別の&lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;データ型オブジェクト（dtype）&lt;/a&gt;によって指定され、その1つは各ndarrayに関連付けられています。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7bc19800098fdeab8e6191cd2c74779ca9496d4b" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; object has many methods which operate on or with the array in some fashion, typically returning an array result. These methods are briefly explained below. (Each method&amp;rsquo;s docstring has a more complete description.)</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;オブジェクトは、典型的には、アレイ結果を返す、いくつかの方法で配列またはで動作する多くの方法を有しています。これらの方法について、以下で簡単に説明します。（各メソッドのdocstringには、より完全な説明があります。）</target>
        </trans-unit>
        <trans-unit id="348950d835f507d8c6b41bfd8c248c2dc0fb77e9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://docs.python.org/dev/library/constants.html#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アン&lt;a href=&quot;https://docs.python.org/dev/library/constants.html#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b05a71a51c0cb8c4cd40edaace7ca201320e4e4c" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;Attributes&lt;/strong&gt; section, located below the &lt;strong&gt;Parameters&lt;/strong&gt; section, may be used to describe non-method attributes of the class:</source>
          <target state="translated">&lt;strong&gt;属性&lt;/strong&gt;の下方に位置する部分、&lt;strong&gt;パラメータ&lt;/strong&gt;セクションは、クラスの非メソッド属性を記述するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="aa95663d09715fdd85c3c286e62db310ab9bc156" translate="yes" xml:space="preserve">
          <source>An Hermite series class.</source>
          <target state="translated">ハーミットシリーズのクラス。</target>
        </trans-unit>
        <trans-unit id="37ba78634b9174a697f0599ae6f6dc13ecb77ada" translate="yes" xml:space="preserve">
          <source>An HermiteE series class.</source>
          <target state="translated">HermiteEシリーズのクラス。</target>
        </trans-unit>
        <trans-unit id="cffaa412bb40336800a7a25ffd6c3dab7659ec31" translate="yes" xml:space="preserve">
          <source>An Institutional Contributor is any individual Project Contributor who contributes to the project as part of their official duties at an Institutional Partner. Likewise, an Institutional Council Member is any Project Steering Council Member who contributes to the project as part of their official duties at an Institutional Partner.</source>
          <target state="translated">機関投資家とは、機関投資家パートナーの公式任務の一環としてプロジェクトに貢献する個人的な プロジェクト投資家のことである。同様に、機関協議会メンバーとは、機関パートナーの公的職務の一環としてプロジェクトに貢献するプロジェクト運営協議会メンバーのことである。</target>
        </trans-unit>
        <trans-unit id="a78770ecde29825877a3246385ccc0bac23a3a9c" translate="yes" xml:space="preserve">
          <source>An Institutional Partner is free to pursue funding for their work on The Project through any legal means. This could involve a non-profit organization raising money from private foundations and donors or a for-profit company building proprietary products and services that leverage Project Software and Services. Funding acquired by Institutional Partners to work on The Project is called Institutional Funding. However, no funding obtained by an Institutional Partner can override the Steering Council. If a Partner has funding to do NumPy work and the Council decides to not pursue that work as a project, the Partner is free to pursue it on their own. However in this situation, that part of the Partner&amp;rsquo;s work will not be under the NumPy umbrella and cannot use the Project trademarks in a way that suggests a formal relationship.</source>
          <target state="translated">教育機関のパートナーは、法的手段を問わず、プロジェクトでの作業に資金を提供することができます。これには、民間の財団やドナーから資金を調達する非営利団体や、プロジェクトソフトウェアとサービスを活用する独自の製品とサービスを構築する営利企業が含まれる可能性があります。プロジェクトに取り組むために機関パートナーが取得した資金は、機関資金と呼ばれます。ただし、機関パートナーが取得した資金は、運営評議会を無効にすることはできません。パートナーがNumPyの作業を行うための資金を持っていて、評議会がその作業をプロジェクトとして追求しないことを決定した場合、パートナーは自由にそれを追求することができます。ただし、この状況では、パートナーの作業のその部分はNumPyの傘下にはなく、正式な関係を示唆する方法でプロジェクトの商標を使用することはできません。</target>
        </trans-unit>
        <trans-unit id="774f2ca6463ce8bcd64cdfd525d1845b4ce03eef" translate="yes" xml:space="preserve">
          <source>An N-dimensional array containing samples of a scalar function.</source>
          <target state="translated">スカラー関数のサンプルを含むN次元配列.</target>
        </trans-unit>
        <trans-unit id="3d538fa8637c715f6bbc2c9c38a813643eb7ae9b" translate="yes" xml:space="preserve">
          <source>An N-dimensional iterator object to index arrays.</source>
          <target state="translated">配列をインデックス化するためのN次元イテレータオブジェクト.</target>
        </trans-unit>
        <trans-unit id="3dd52a8c903e6e44d839c6aa398f48a49b2e9a83" translate="yes" xml:space="preserve">
          <source>An N-dimensional tuple of current coordinates.</source>
          <target state="translated">現在の座標のN次元タプル。</target>
        </trans-unit>
        <trans-unit id="0469df4347714bf84d92842d69579d7dfabaaa72" translate="yes" xml:space="preserve">
          <source>An additional feature is that the path to a data-file can actually be a function that takes no arguments and returns the actual path(s) to the data-files. This is useful when the data files are generated while building the package.</source>
          <target state="translated">追加の機能として、データファイルへのパスは実際には引数を取らずにデータファイルへの実際のパスを返す関数にすることができます。これは、パッケージのビルド中にデータファイルが生成される場合に便利です。</target>
        </trans-unit>
        <trans-unit id="7d254b010f4ed265ad6e477d88efeadb8fd344eb" translate="yes" xml:space="preserve">
          <source>An additional list of paths to look for .ini files can be given to &lt;a href=&quot;distutils/misc_util#numpy.distutils.misc_util.get_info&quot;&gt;&lt;code&gt;get_info&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">.iniファイルを検索するためのパスの追加リストを&lt;a href=&quot;distutils/misc_util#numpy.distutils.misc_util.get_info&quot;&gt; &lt;code&gt;get_info&lt;/code&gt; &lt;/a&gt;に指定できます。</target>
        </trans-unit>
        <trans-unit id="10dfa862bcfcc9668a1db552ab4daea86348201e" translate="yes" xml:space="preserve">
          <source>An additional list of paths to look for .ini files can be given to &lt;code&gt;get_info&lt;/code&gt;.</source>
          <target state="translated">.iniファイルを探すパスの追加リストを &lt;code&gt;get_info&lt;/code&gt; に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="963bad104cdcf2da9f9197c7dd8bbca2134670a8" translate="yes" xml:space="preserve">
          <source>An additional set of variables and observations. &lt;code&gt;y&lt;/code&gt; has the same form as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">変数と観測の追加セット。 &lt;code&gt;y&lt;/code&gt; は &lt;code&gt;x&lt;/code&gt; と同じ形式です。</target>
        </trans-unit>
        <trans-unit id="290ba89cf67c59979f1b14cebdae08675ffa3872" translate="yes" xml:space="preserve">
          <source>An additional set of variables and observations. &lt;code&gt;y&lt;/code&gt; has the same form as that of &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">変数と観測の追加セット。 &lt;code&gt;y&lt;/code&gt; は &lt;code&gt;m&lt;/code&gt; と同じ形式です。</target>
        </trans-unit>
        <trans-unit id="535d7085464b23925e15a73868df4653982051e0" translate="yes" xml:space="preserve">
          <source>An additional set of variables and observations. &lt;code&gt;y&lt;/code&gt; has the same shape as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">変数と観測の追加セット。 &lt;code&gt;y&lt;/code&gt; は &lt;code&gt;x&lt;/code&gt; と同じ形状です。</target>
        </trans-unit>
        <trans-unit id="123e4ac201b989a06a3018b61ce098df1c75ac77" translate="yes" xml:space="preserve">
          <source>An alias for a field name in a structured datatype.</source>
          <target state="translated">構造化データタイプのフィールド名のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="0aadce1a1c3678a4b3a0e8fd514232b417ea179b" translate="yes" xml:space="preserve">
          <source>An alias for the density argument that behaves identically. To avoid confusion with the broken normed argument to &lt;a href=&quot;numpy.histogram#numpy.histogram&quot;&gt;&lt;code&gt;histogram&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;density&lt;/code&gt; should be preferred.</source>
          <target state="translated">同じように動作する密度引数のエイリアス。&lt;a href=&quot;numpy.histogram#numpy.histogram&quot;&gt; &lt;code&gt;histogram&lt;/code&gt; の&lt;/a&gt;壊れた正規化された引数との混乱を避けるために、 &lt;code&gt;density&lt;/code&gt; を優先する必要があります。</target>
        </trans-unit>
        <trans-unit id="2dff9706411c38850b8de8293266d9884231cabd" translate="yes" xml:space="preserve">
          <source>An arbitrary Python function.</source>
          <target state="translated">任意のPython関数。</target>
        </trans-unit>
        <trans-unit id="e8bb23ecea26f2757144af6ea155e648fd27499b" translate="yes" xml:space="preserve">
          <source>An array can be indexed by a tuple of nonnegative integers, by booleans, by another array, or by integers. The &lt;code&gt;rank&lt;/code&gt; of the array is the number of dimensions. The &lt;code&gt;shape&lt;/code&gt; of the array is a tuple of integers giving the size of the array along each dimension.</source>
          <target state="translated">配列は、非負の整数のタプル、ブール値、別の配列、または整数によってインデックスを付けることができます。配列の &lt;code&gt;rank&lt;/code&gt; は次元の数です。配列の &lt;code&gt;shape&lt;/code&gt; は、各次元に沿った配列のサイズを与える整数のタプルです。</target>
        </trans-unit>
        <trans-unit id="caae7edaffe66ab62bffc1b2b0bd2b213c039100" translate="yes" xml:space="preserve">
          <source>An array class with possibly masked values.</source>
          <target state="translated">マスクされた値を持つ配列クラス.</target>
        </trans-unit>
        <trans-unit id="4c85e68fd622a0d5a6428884a31f19296d5b57f7" translate="yes" xml:space="preserve">
          <source>An array containing the number of bytes to jump to get to the next element in each dimension.</source>
          <target state="translated">各次元の次の要素にジャンプするためのバイト数を含む配列。</target>
        </trans-unit>
        <trans-unit id="54ae13ad9fa748df727082d88d41d03835abae7a" translate="yes" xml:space="preserve">
          <source>An array containing the roots of the polynomial.</source>
          <target state="translated">多項式の根を含む配列.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
