<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="d83995123f5ea98603e646a9178fcfffebb1958a" translate="yes" xml:space="preserve">
          <source>Compared to indexing syntax, &lt;a href=&quot;#numpy.recarray.itemset&quot;&gt;&lt;code&gt;itemset&lt;/code&gt;&lt;/a&gt; provides some speed increase for placing a scalar into a particular location in an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;, if you must do this. However, generally this is discouraged: among other problems, it complicates the appearance of the code. Also, when using &lt;a href=&quot;#numpy.recarray.itemset&quot;&gt;&lt;code&gt;itemset&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;numpy.recarray.item#numpy.recarray.item&quot;&gt;&lt;code&gt;item&lt;/code&gt;&lt;/a&gt;) inside a loop, be sure to assign the methods to a local variable to avoid the attribute look-up at each loop iteration.</source>
          <target state="translated">索引付け構文と比較して、&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#numpy.recarray.itemset&quot;&gt; &lt;code&gt;itemset&lt;/code&gt; &lt;/a&gt;は、スカラーをndarrayの特定の場所に配置する必要がある場合に、これを高速化します。ただし、これは一般的にはお勧めできません。他の問題の中でも、コードの外観が複雑になります。また、ループ内で&lt;a href=&quot;#numpy.recarray.itemset&quot;&gt; &lt;code&gt;itemset&lt;/code&gt; &lt;/a&gt;（および&lt;a href=&quot;numpy.recarray.item#numpy.recarray.item&quot;&gt; &lt;code&gt;item&lt;/code&gt; &lt;/a&gt;）を使用する場合は、メソッドをローカル変数に割り当てて、ループの反復ごとに属性が検索されないようにしてください。</target>
        </trans-unit>
        <trans-unit id="c659be692ea2a97bb2ad6d27d767ba11002c5a0f" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 != h2).</source>
          <target state="translated">2つの半精度フロート(h1 !=h2)を比較します。</target>
        </trans-unit>
        <trans-unit id="a8531600ccd3e5208344582224d725dc6447d471" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 &amp;gt; h2).</source>
          <target state="translated">2つの半精度浮動小数点数を比較します（h1&amp;gt; h2）。</target>
        </trans-unit>
        <trans-unit id="1fe54d41d33ca7b444169273c69fa5061d6e3f69" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 &amp;gt;= h2).</source>
          <target state="translated">2つの半精度浮動小数点数（h1&amp;gt; = h2）を比較します。</target>
        </trans-unit>
        <trans-unit id="09c74964a2a76ed9d39c659abab42ad8913ca62f" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 &amp;lt; h2).</source>
          <target state="translated">2つの半精度浮動小数点数（h1 &amp;lt;h2）を比較します。</target>
        </trans-unit>
        <trans-unit id="09ca56b6c4b7cdb0aacabc3d8ecbb1eef0726cc8" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 &amp;lt;= h2).</source>
          <target state="translated">2つの半精度浮動小数点数（h1 &amp;lt;= h2）を比較します。</target>
        </trans-unit>
        <trans-unit id="2a372af75f04fe5db91b2eb992a65a4b830bbcda" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats (h1 == h2).</source>
          <target state="translated">2つの半精度フロート(h1 ==h2)を比較します。</target>
        </trans-unit>
        <trans-unit id="6569476619ffc6f6e8942d6f762781ba11246ce3" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats that are known to not be NaN (h1 &amp;lt; h2). If a value is NaN, the result is undefined.</source>
          <target state="translated">NaNでないことがわかっている2つの半精度浮動小数点数を比較します（h1 &amp;lt;h2）。値がNaNの場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="6caa81fd2bc3f158b7e80b5e938442169d219755" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats that are known to not be NaN (h1 &amp;lt;= h2). If a value is NaN, the result is undefined.</source>
          <target state="translated">NaNではないことがわかっている2つの半精度浮動小数点数を比較します（h1 &amp;lt;= h2）。値がNaNの場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="2488158fc090106e7c705b17853d535c32a0c590" translate="yes" xml:space="preserve">
          <source>Compares two half-precision floats that are known to not be NaN (h1 == h2). If a value is NaN, the result is undefined.</source>
          <target state="translated">NaNではないことがわかっている2つの半精度フロートを比較します(h1 ==h2)。値がNaNの場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="dff584999fbb6cd5911aa30f1590245afbbe3b17" translate="yes" xml:space="preserve">
          <source>Comparing Performance</source>
          <target state="translated">パフォーマンスの比較</target>
        </trans-unit>
        <trans-unit id="eea251154fb167c3cc620efaacead79a92ce4964" translate="yes" xml:space="preserve">
          <source>Comparing needs to be done against a valid version string or other &lt;a href=&quot;#numpy.lib.NumpyVersion&quot;&gt;&lt;code&gt;NumpyVersion&lt;/code&gt;&lt;/a&gt; instance. Note that all development versions of the same (pre-)release compare equal.</source>
          <target state="translated">有効なバージョン文字列または他の&lt;a href=&quot;#numpy.lib.NumpyVersion&quot;&gt; &lt;code&gt;NumpyVersion&lt;/code&gt; &lt;/a&gt;インスタンスに対して比較を行う必要があります。同じ（プレ）リリースのすべての開発バージョンは同等であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2dfcf898a3bd4e011123eee87384ecb67d0919d4" translate="yes" xml:space="preserve">
          <source>Comparison</source>
          <target state="translated">Comparison</target>
        </trans-unit>
        <trans-unit id="b25204cbd4bfc02484e2851632d991b06eb495ce" translate="yes" xml:space="preserve">
          <source>Comparison functions</source>
          <target state="translated">比較機能</target>
        </trans-unit>
        <trans-unit id="a7de33d110c915ab8e665813e77fafb72e84afb2" translate="yes" xml:space="preserve">
          <source>Comparison operators:</source>
          <target state="translated">比較演算子。</target>
        </trans-unit>
        <trans-unit id="701eaaa12ac0e8c94934fa420da9730a812c4f33" translate="yes" xml:space="preserve">
          <source>Comparison ufuncs accept &lt;code&gt;dtype=object&lt;/code&gt;, overriding the default &lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">比較ufuncsは &lt;code&gt;dtype=object&lt;/code&gt; を受け入れ、デフォルトの &lt;code&gt;bool&lt;/code&gt; オーバーライドします</target>
        </trans-unit>
        <trans-unit id="60feb87fb86f2eac3632d24b989448287950576a" translate="yes" xml:space="preserve">
          <source>Comparison ufuncs will now error rather than return NotImplemented</source>
          <target state="translated">比較用 ufuncs は NotImplemented を返すのではなく、エラーになるようになりました。</target>
        </trans-unit>
        <trans-unit id="2f12ca1e5a55a63736464971fc76ee35d3a18342" translate="yes" xml:space="preserve">
          <source>Comparison value</source>
          <target state="translated">比較値</target>
        </trans-unit>
        <trans-unit id="5d57c5330d10b55140b0ca441a4e01cd9cdaa363" translate="yes" xml:space="preserve">
          <source>Compatibility Note</source>
          <target state="translated">互換性ノート</target>
        </trans-unit>
        <trans-unit id="7d648a6dff363974f754bb78876c2b10dadd8183" translate="yes" xml:space="preserve">
          <source>Compatibility notes</source>
          <target state="translated">互換性に関する注意事項</target>
        </trans-unit>
        <trans-unit id="0e6533ab3612d352e3a6bd4b64fa60d5ed1065f2" translate="yes" xml:space="preserve">
          <source>Compatibility to python &lt;code&gt;numbers&lt;/code&gt; module</source>
          <target state="translated">Python &lt;code&gt;numbers&lt;/code&gt; モジュールとの互換性</target>
        </trans-unit>
        <trans-unit id="7f4c99d898504a4d469f2c56fcd16f51caf889ab" translate="yes" xml:space="preserve">
          <source>Compatible with &lt;a href=&quot;https://docs.python.org/dev/library/random.html#random.random&quot;&gt;&lt;code&gt;random.random&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/library/random.html#random.random&quot;&gt; &lt;code&gt;random.random&lt;/code&gt; と&lt;/a&gt;互換性があります</target>
        </trans-unit>
        <trans-unit id="ea22f9a763556ea1f2361c2df834dbb06a8b8368" translate="yes" xml:space="preserve">
          <source>Compile one or more source files.</source>
          <target state="translated">1つ以上のソースファイルをコンパイルします。</target>
        </trans-unit>
        <trans-unit id="2be70e01f60942c9e24658741298f498509439ce" translate="yes" xml:space="preserve">
          <source>Compile with debugging information</source>
          <target state="translated">デバッグ情報付きでコンパイル</target>
        </trans-unit>
        <trans-unit id="b27fa290ca920bb1c99bebb756fd2de9f4610d26" translate="yes" xml:space="preserve">
          <source>Compile without arch-dependent optimization</source>
          <target state="translated">アーチに依存した最適化を行わずにコンパイル</target>
        </trans-unit>
        <trans-unit id="5ecd4ab8f7ad7a6feb5b1c29b6881b6188694b84" translate="yes" xml:space="preserve">
          <source>Compile without optimization</source>
          <target state="translated">最適化せずにコンパイル</target>
        </trans-unit>
        <trans-unit id="f9f8c316ab0c50a41a54a632e4f37af9a9c7bed4" translate="yes" xml:space="preserve">
          <source>Compiled testing modules renamed and made private</source>
          <target state="translated">コンパイルされたテストモジュールの名前を変更して非公開に</target>
        </trans-unit>
        <trans-unit id="9674cbe94fc34b0813752dbf21ea3ff49c519ffa" translate="yes" xml:space="preserve">
          <source>Compiler directives</source>
          <target state="translated">コンパイラディレクティブ</target>
        </trans-unit>
        <trans-unit id="e1be83a7756a5bb6c9b11d838efbdc2b010f2edd" translate="yes" xml:space="preserve">
          <source>Compilers</source>
          <target state="translated">Compilers</target>
        </trans-unit>
        <trans-unit id="19e6a00c5d1d076b19873202250746217d5ee3ba" translate="yes" xml:space="preserve">
          <source>Compilers are auto-detected; building with a particular compiler can be done with &lt;code&gt;--fcompiler&lt;/code&gt;. E.g. to select gfortran:</source>
          <target state="translated">コンパイラは自動検出されます。特定のコンパイラを使用した &lt;code&gt;--fcompiler&lt;/code&gt; 、-fcompilerを使用して実行できます。たとえば、gfortranを選択します。</target>
        </trans-unit>
        <trans-unit id="647a61b7661823bee3e0fb318ccb983ea06af198" translate="yes" xml:space="preserve">
          <source>Complete example</source>
          <target state="translated">完全な例</target>
        </trans-unit>
        <trans-unit id="ff834855dd2cb771e7308c2c45e567479f89e7e7" translate="yes" xml:space="preserve">
          <source>Complete path, including the &lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; destination directory.</source>
          <target state="translated">&lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;宛先ディレクトリーを含む完全なパス。</target>
        </trans-unit>
        <trans-unit id="df410ba7b1720b637f5c18968fb3a87767285ecc" translate="yes" xml:space="preserve">
          <source>Complex addition in Cython</source>
          <target state="translated">Cythonでの複合加算</target>
        </trans-unit>
        <trans-unit id="de68f54a7ada83b34c3c594c6d6dc315f2d1dff5" translate="yes" xml:space="preserve">
          <source>Complex dtypes are not supported, they will raise a TypeError.</source>
          <target state="translated">複雑な d 型はサポートされておらず、TypeError が発生します。</target>
        </trans-unit>
        <trans-unit id="aa65be528af88fb5c8a75d1c112c51079bcd9e1b" translate="yes" xml:space="preserve">
          <source>Complex floating point</source>
          <target state="translated">複素浮動小数点</target>
        </trans-unit>
        <trans-unit id="50b56f643c3c403eee6bc18311217c2110cfc3d1" translate="yes" xml:space="preserve">
          <source>Complex floating-point numbers:</source>
          <target state="translated">複素浮動小数点数。</target>
        </trans-unit>
        <trans-unit id="5b80d64d624d4f3ca65bbe7239e385812c1d03ee" translate="yes" xml:space="preserve">
          <source>Complex functions</source>
          <target state="translated">複雑な機能</target>
        </trans-unit>
        <trans-unit id="0fa9ea03df83d22c3ed69e97864b69f2e7260411" translate="yes" xml:space="preserve">
          <source>Complex interpolation:</source>
          <target state="translated">複素補間。</target>
        </trans-unit>
        <trans-unit id="a65b5b7a1200ae7ef93272975b6c56910310c564" translate="yes" xml:space="preserve">
          <source>Complex is of a different type, so it up-casts the float in the &lt;code&gt;array_types&lt;/code&gt; argument:</source>
          <target state="translated">Complexは異なるタイプであるため、 &lt;code&gt;array_types&lt;/code&gt; 引数で浮動小数点数をアップキャストします。</target>
        </trans-unit>
        <trans-unit id="69f87237d33809159f47d1d133e1d70464aec740" translate="yes" xml:space="preserve">
          <source>Complex number, represented by two 32-bit floats (real and imaginary components)</source>
          <target state="translated">2つの32ビットのフロート(実数と虚数)で表される複素数</target>
        </trans-unit>
        <trans-unit id="8f5121e6148826628b346efc91040e8e1bf009fc" translate="yes" xml:space="preserve">
          <source>Complex number, represented by two double-precision floats (real and imaginary components).</source>
          <target state="translated">2つの倍精度フロート(実数と虚数)で表される複素数。</target>
        </trans-unit>
        <trans-unit id="95e775f958ed3272cf2a9c2fd5e4a1ac4fc419e7" translate="yes" xml:space="preserve">
          <source>Complex number, represented by two extended-precision floats (real and imaginary components).</source>
          <target state="translated">2つの拡張精度フロート(実成分と虚成分)で表される複素数。</target>
        </trans-unit>
        <trans-unit id="737289b1db62088f4dcb89c7c7dcaab50b2e300b" translate="yes" xml:space="preserve">
          <source>Complex number, represented by two single-precision floats (real and imaginary components)</source>
          <target state="translated">2つの単精度フロート(実部と虚部)で表される複素数</target>
        </trans-unit>
        <trans-unit id="44fc04a3b7819c72bdc8be8966689f3ecd87dbfd" translate="yes" xml:space="preserve">
          <source>Complex-conjugate all elements.</source>
          <target state="translated">すべての要素を複素共役化します。</target>
        </trans-unit>
        <trans-unit id="3ff5cadccad2941be3aad490dcbf596e9e2f1f26" translate="yes" xml:space="preserve">
          <source>Complex-conjugating dot product.</source>
          <target state="translated">錯体共役ドット積。</target>
        </trans-unit>
        <trans-unit id="f14b349bf9b6f0598bc456bea6a626f511dd720b" translate="yes" xml:space="preserve">
          <source>Complex-valued matrix with real e-values (but complex-valued e-vectors); note that &lt;code&gt;a.conj().T == a&lt;/code&gt;, i.e., &lt;code&gt;a&lt;/code&gt; is Hermitian.</source>
          <target state="translated">実数値のe値を含む複素数値行列（ただし複素数値のeベクトル）。なお &lt;code&gt;a.conj().T == a&lt;/code&gt; 、すなわち、エルミートです。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4745229c055fca9c55de4f5e19158b64c4e46c7f" translate="yes" xml:space="preserve">
          <source>Complex: [R + Rj, R + nanj, nan + Rj, nan + nanj]</source>
          <target state="translated">複合体:[R+Rj、R+nanj、nan+Rj、nan+nanj</target>
        </trans-unit>
        <trans-unit id="07214e21bcf968861459229df35bdc3eb2301560" translate="yes" xml:space="preserve">
          <source>Components of the first vector(s).</source>
          <target state="translated">最初のベクトルの成分。</target>
        </trans-unit>
        <trans-unit id="034a68a3b46b5f19a8396a79ba6059edc518f621" translate="yes" xml:space="preserve">
          <source>Components of the second vector(s).</source>
          <target state="translated">2 番目のベクトルの成分.</target>
        </trans-unit>
        <trans-unit id="45f45d1eb6794f5e653fdc744d97f27b67ca97c3" translate="yes" xml:space="preserve">
          <source>Compute &lt;code&gt;y = x1 * 2**x2&lt;/code&gt;, the inverse of &lt;a href=&quot;#numpy.frexp&quot;&gt;&lt;code&gt;frexp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">計算 &lt;code&gt;y = x1 * 2**x2&lt;/code&gt; 、の逆&lt;a href=&quot;#numpy.frexp&quot;&gt; &lt;code&gt;frexp&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3d882304ea9d87add3f90e5be6baef45c39f37eb" translate="yes" xml:space="preserve">
          <source>Compute RQ decomposition of a matrix.</source>
          <target state="translated">行列のRQ分解を計算します。</target>
        </trans-unit>
        <trans-unit id="0c64182221e47c35867a7af81c848c36fa6d8bc1" translate="yes" xml:space="preserve">
          <source>Compute a matrix transpose, or reorder any number of axes:</source>
          <target state="translated">行列の転置を計算したり,任意の数の軸を並べ替えたりします.</target>
        </trans-unit>
        <trans-unit id="13e5ab403f3a3a2b71e3a1b4880046ec10502553" translate="yes" xml:space="preserve">
          <source>Compute a product-sum over the last dimension of &lt;em&gt;obj1&lt;/em&gt; and the second-to-last dimension of &lt;em&gt;obj2&lt;/em&gt;. For 2-d arrays this is a matrix-product. Neither array is conjugated.</source>
          <target state="translated">&lt;em&gt;obj1の&lt;/em&gt;最後の次元と&lt;em&gt;obj2の&lt;/em&gt;最後から2番目の次元の積和を計算します。2次元配列の場合、これは行列積です。どちらの配列も共役ではありません。</target>
        </trans-unit>
        <trans-unit id="056b92ccdbc0e24b6f67de04cffc75083bf356ab" translate="yes" xml:space="preserve">
          <source>Compute a product-sum over the last dimensions of &lt;em&gt;obj1&lt;/em&gt; and &lt;em&gt;obj2&lt;/em&gt;. Neither array is conjugated.</source>
          <target state="translated">&lt;em&gt;obj1&lt;/em&gt;と&lt;em&gt;obj2の&lt;/em&gt;最後の次元の積和を計算します。どちらの配列も共役ではありません。</target>
        </trans-unit>
        <trans-unit id="5d7a1e013a739673e66d447edae1fe867b62d357" translate="yes" xml:space="preserve">
          <source>Compute an array where the subarrays contain index values 0, 1, &amp;hellip; varying only along the corresponding axis.</source>
          <target state="translated">サブ配列にインデックス値0、1、&amp;hellip;が含まれ、対応する軸に沿ってのみ変化する配列を計算します。</target>
        </trans-unit>
        <trans-unit id="947fc265208178db651870062fcd800d2541aa5f" translate="yes" xml:space="preserve">
          <source>Compute bit-wise inversion, or bit-wise NOT, element-wise.</source>
          <target state="translated">ビット単位の反転、またはビット単位のNOT、要素単位の計算を行います。</target>
        </trans-unit>
        <trans-unit id="4fa591d9d9af402206493fb5fda8248cb6f1c024" translate="yes" xml:space="preserve">
          <source>Compute hyperbolic tangent element-wise.</source>
          <target state="translated">双曲正接を要素ごとに計算します。</target>
        </trans-unit>
        <trans-unit id="a87a1fe24ae7fbea279764c44fdccdccf954c207" translate="yes" xml:space="preserve">
          <source>Compute polynomial values.</source>
          <target state="translated">多項式の値を計算します。</target>
        </trans-unit>
        <trans-unit id="f40295322c0f8e7f8c3dbdd16628efca9b1a5086" translate="yes" xml:space="preserve">
          <source>Compute singular values of a matrix.</source>
          <target state="translated">行列の特異値を計算します.</target>
        </trans-unit>
        <trans-unit id="068ac2c1a4127e2fed43429a48f36264cc85457c" translate="yes" xml:space="preserve">
          <source>Compute tangent element-wise.</source>
          <target state="translated">要素ごとに接線を計算します。</target>
        </trans-unit>
        <trans-unit id="d300b4bcd09d963652013deebe8168c3c89562c2" translate="yes" xml:space="preserve">
          <source>Compute tensor dot product along specified axes.</source>
          <target state="translated">指定された軸に沿ってテンソル点積を計算します。</target>
        </trans-unit>
        <trans-unit id="fa371bab50ec7f5949bcd135ca6f29870a08c615" translate="yes" xml:space="preserve">
          <source>Compute the &amp;lsquo;inverse&amp;rsquo; of an N-dimensional array.</source>
          <target state="translated">N次元配列の「逆」を計算します。</target>
        </trans-unit>
        <trans-unit id="7b6b08dbde076bf3b0ddbc251649cd1e930237a9" translate="yes" xml:space="preserve">
          <source>Compute the (Moore-Penrose) pseudo-inverse of a Hermitian matrix.</source>
          <target state="translated">エルミシアン行列の(モア・ペンローズ)擬似逆行列を計算します。</target>
        </trans-unit>
        <trans-unit id="fc5bbebd14e559d5af2472fcb7cd8cae4c38dfea" translate="yes" xml:space="preserve">
          <source>Compute the (Moore-Penrose) pseudo-inverse of a matrix.</source>
          <target state="translated">行列の(モア・ペンローズ)擬似逆行列を計算します。</target>
        </trans-unit>
        <trans-unit id="7a0d3b8cffb38e55193b71b10895c89358380d6f" translate="yes" xml:space="preserve">
          <source>Compute the (multiplicative) inverse of a matrix.</source>
          <target state="translated">行列の(乗算的な)逆数を計算する。</target>
        </trans-unit>
        <trans-unit id="ce317ec0f3a7246ebde3c56c949a94474c644f2c" translate="yes" xml:space="preserve">
          <source>Compute the 1-d correlation of the 1-d arrays &lt;em&gt;op1&lt;/em&gt; and &lt;em&gt;op2&lt;/em&gt; . The correlation is computed at each output point by multiplying &lt;em&gt;op1&lt;/em&gt; by a shifted version of &lt;em&gt;op2&lt;/em&gt; and summing the result. As a result of the shift, needed values outside of the defined range of &lt;em&gt;op1&lt;/em&gt; and &lt;em&gt;op2&lt;/em&gt; are interpreted as zero. The mode determines how many shifts to return: 0 - return only shifts that did not need to assume zero- values; 1 - return an object that is the same size as &lt;em&gt;op1&lt;/em&gt;, 2 - return all possible shifts (any overlap at all is accepted).</source>
          <target state="translated">1次元配列&lt;em&gt;op1&lt;/em&gt;および&lt;em&gt;op2の&lt;/em&gt; 1次元相関を計算します。相関は、&lt;em&gt;op1&lt;/em&gt;にシフトされたバージョンの&lt;em&gt;op2&lt;/em&gt;を乗算し、その結果を合計することにより、各出力ポイントで計算されます。シフトの結果、&lt;em&gt;op1&lt;/em&gt;と&lt;em&gt;op2の&lt;/em&gt;定義された範囲外の必要な値はゼロとして解釈されます。モードは、返すシフトの数を決定します。0-ゼロ値を想定する必要のないシフトのみを返します。1- &lt;em&gt;op1&lt;/em&gt;と同じサイズのオブジェクトを返します&lt;em&gt;。2-&lt;/em&gt;可能なすべてのシフトを返します（オーバーラップはすべて受け入れられます）。</target>
        </trans-unit>
        <trans-unit id="c0d44872f577915a6980faf8dd21743d44adf9e2" translate="yes" xml:space="preserve">
          <source>Compute the 2-dimensional FFT of a real array.</source>
          <target state="translated">実数配列の2次元FFTを計算する。</target>
        </trans-unit>
        <trans-unit id="d178e7eb58c146939d28cee1561c739e0e5a7a6e" translate="yes" xml:space="preserve">
          <source>Compute the 2-dimensional discrete Fourier Transform</source>
          <target state="translated">2次元離散フーリエ変換を計算する</target>
        </trans-unit>
        <trans-unit id="67a3a6e456306d80e1a85f7bd3abf35885e3417f" translate="yes" xml:space="preserve">
          <source>Compute the 2-dimensional inverse FFT of a real array.</source>
          <target state="translated">実数配列の2次元逆FFTを計算する。</target>
        </trans-unit>
        <trans-unit id="5dab8bf12f8acb88adf197e9679d392f9686e8f0" translate="yes" xml:space="preserve">
          <source>Compute the 2-dimensional inverse discrete Fourier Transform.</source>
          <target state="translated">2次元逆離散フーリエ変換を計算する。</target>
        </trans-unit>
        <trans-unit id="e520eedb99a35ab7b8e9d96c9ee884bd6396de95" translate="yes" xml:space="preserve">
          <source>Compute the FFT of a signal that has Hermitian symmetry, i.e., a real spectrum.</source>
          <target state="translated">エルミシア対称性を持つ信号、すなわち実数スペクトルのFFTを計算します。</target>
        </trans-unit>
        <trans-unit id="8d0c346e5e8eee0d8b840c557de8c1fb49e608f2" translate="yes" xml:space="preserve">
          <source>Compute the Heaviside step function.</source>
          <target state="translated">Heavisideステップ関数を計算します。</target>
        </trans-unit>
        <trans-unit id="0af5dc6ec4bce95c7deeb2e22d43be085363a3c4" translate="yes" xml:space="preserve">
          <source>Compute the N-dimensional discrete Fourier Transform for real input.</source>
          <target state="translated">実入力に対してN次元離散フーリエ変換を計算する。</target>
        </trans-unit>
        <trans-unit id="618a9fedeaaa9d126c314769627bca84416583fd" translate="yes" xml:space="preserve">
          <source>Compute the N-dimensional discrete Fourier Transform.</source>
          <target state="translated">N次元離散フーリエ変換を計算する。</target>
        </trans-unit>
        <trans-unit id="e7cb154cbbc3ce37f25f7537fe58a126b7946394" translate="yes" xml:space="preserve">
          <source>Compute the N-dimensional inverse discrete Fourier Transform.</source>
          <target state="translated">N次元逆離散フーリエ変換を計算する。</target>
        </trans-unit>
        <trans-unit id="fdada9bbbb0e0feab597366ef4af60a51ac07565" translate="yes" xml:space="preserve">
          <source>Compute the absolute values element-wise.</source>
          <target state="translated">要素ごとに絶対値を計算します。</target>
        </trans-unit>
        <trans-unit id="854c7a30aceed6c65bd1930d3f73b4435d8fefe0" translate="yes" xml:space="preserve">
          <source>Compute the anomalies (deviations from the arithmetic mean) along the given axis.</source>
          <target state="translated">指定された軸に沿った異常値(算術平均からの偏差)を計算します。</target>
        </trans-unit>
        <trans-unit id="032bf5a750caf3fcc37d976c4abec0978e892339" translate="yes" xml:space="preserve">
          <source>Compute the arithmetic mean along the specified axis, ignoring NaNs.</source>
          <target state="translated">NaNを無視して、指定された軸に沿った算術平均を計算します。</target>
        </trans-unit>
        <trans-unit id="c27697f73833b9f50c1ae272faa6ca6a07b48429" translate="yes" xml:space="preserve">
          <source>Compute the arithmetic mean along the specified axis.</source>
          <target state="translated">指定された軸に沿った算術平均を計算します。</target>
        </trans-unit>
        <trans-unit id="d2a56a9fc18ac2ca14dd4e52739d766778e94a9f" translate="yes" xml:space="preserve">
          <source>Compute the bi-dimensional histogram of two data samples.</source>
          <target state="translated">2つのデータサンプルの2次元ヒストグラムを計算します。</target>
        </trans-unit>
        <trans-unit id="8d0e71a5459a34a1c578cae96fc1cfe3bd566fe6" translate="yes" xml:space="preserve">
          <source>Compute the bit-wise AND of two arrays element-wise.</source>
          <target state="translated">2つの配列のビット単位のANDを要素単位で計算します.</target>
        </trans-unit>
        <trans-unit id="e7eb6c1c60d6349cc90d5c8c4320d954c000c524" translate="yes" xml:space="preserve">
          <source>Compute the bit-wise OR of two arrays element-wise.</source>
          <target state="translated">2つの配列のビット単位のORを計算します.</target>
        </trans-unit>
        <trans-unit id="55b35d5464c0530c89b3ec03e495b9078bf4cf47" translate="yes" xml:space="preserve">
          <source>Compute the bit-wise XOR of two arrays element-wise.</source>
          <target state="translated">2つの配列のビット単位のXORを計算します.</target>
        </trans-unit>
        <trans-unit id="f5acd6ba924e2efb344c13dbed92e0c329da8c41" translate="yes" xml:space="preserve">
          <source>Compute the condition number of a matrix.</source>
          <target state="translated">行列の条件番号を計算します。</target>
        </trans-unit>
        <trans-unit id="b1c67fc04779c3f2a70b86099aedfddb41f66c14" translate="yes" xml:space="preserve">
          <source>Compute the determinant of an array.</source>
          <target state="translated">配列の行列式を計算します.</target>
        </trans-unit>
        <trans-unit id="b702821ff84d14c559452b05bb97c2de7fb25e9d" translate="yes" xml:space="preserve">
          <source>Compute the differences between consecutive elements of an array.</source>
          <target state="translated">配列の連続した要素間の差を計算します.</target>
        </trans-unit>
        <trans-unit id="951e81c96daf183677546cd31bf58f658274b345" translate="yes" xml:space="preserve">
          <source>Compute the dot product of two or more arrays in a single function call, while automatically selecting the fastest evaluation order.</source>
          <target state="translated">1回の関数呼び出しで2つ以上の配列のドット積を計算し,その間に自動的に最速の評価順序を選択します.</target>
        </trans-unit>
        <trans-unit id="6d2ef25b4e32887cf6b0d4b62f770b736c0bf3b1" translate="yes" xml:space="preserve">
          <source>Compute the eigenvalues and right eigenvectors of a square array.</source>
          <target state="translated">正方形配列の固有値と右固有ベクトルを計算します。</target>
        </trans-unit>
        <trans-unit id="7972ade8ee96398f7c3dca6dc7f1e5fbe1dee9f0" translate="yes" xml:space="preserve">
          <source>Compute the eigenvalues of a complex Hermitian or real symmetric matrix.</source>
          <target state="translated">複素エルミート行列または実数対称行列の固有値を計算します。</target>
        </trans-unit>
        <trans-unit id="df2018ad5cc925c4bd2d8d45424431e34663700a" translate="yes" xml:space="preserve">
          <source>Compute the eigenvalues of a general matrix.</source>
          <target state="translated">一般行列の固有値を計算する。</target>
        </trans-unit>
        <trans-unit id="e2e2b6e6567897f80498047d4b073da0348b1fe0" translate="yes" xml:space="preserve">
          <source>Compute the future value.</source>
          <target state="translated">将来の値を計算します。</target>
        </trans-unit>
        <trans-unit id="ca53316c69a9d7dff355b503668c1872713b22a1" translate="yes" xml:space="preserve">
          <source>Compute the histogram of a set of data.</source>
          <target state="translated">データの集合のヒストグラムを計算します。</target>
        </trans-unit>
        <trans-unit id="089040bb2e30a76919dc623b5c63558c7963e5b8" translate="yes" xml:space="preserve">
          <source>Compute the interest portion of a payment.</source>
          <target state="translated">支払いの利息部分を計算します。</target>
        </trans-unit>
        <trans-unit id="deed0637d0888d671ccf558d5297ba636b52a784" translate="yes" xml:space="preserve">
          <source>Compute the inverse FFT of a signal that has Hermitian symmetry.</source>
          <target state="translated">エルミティア対称性を持つ信号の逆FFTを計算します。</target>
        </trans-unit>
        <trans-unit id="5919808f0861ce5e5c6edd192558abd6cdeed04d" translate="yes" xml:space="preserve">
          <source>Compute the inverse of the N-dimensional FFT of real input.</source>
          <target state="translated">実数入力のN次元FFTの逆数を計算します。</target>
        </trans-unit>
        <trans-unit id="ce30e6918f57933fede9b196ab6208b5d99d43fe" translate="yes" xml:space="preserve">
          <source>Compute the inverse of the n-point DFT for real input.</source>
          <target state="translated">実入力に対するn点DFTの逆数を計算します。</target>
        </trans-unit>
        <trans-unit id="146d4119420125716eb9e5162a664c6e708ec171" translate="yes" xml:space="preserve">
          <source>Compute the mean of the array.</source>
          <target state="translated">配列の平均を計算します.</target>
        </trans-unit>
        <trans-unit id="75b405fa34c2293f176a80e9455e345d4ea00995" translate="yes" xml:space="preserve">
          <source>Compute the median along the specified axis, while ignoring NaNs.</source>
          <target state="translated">NaNを無視して、指定された軸に沿った中央値を計算します。</target>
        </trans-unit>
        <trans-unit id="5f2fe82c20077c9d0997165620b7b7093677b74f" translate="yes" xml:space="preserve">
          <source>Compute the median along the specified axis.</source>
          <target state="translated">指定された軸に沿った中央値を計算します。</target>
        </trans-unit>
        <trans-unit id="f49f4e3eff991416a03a71efdb176b02ad137665" translate="yes" xml:space="preserve">
          <source>Compute the multidimensional histogram of some data.</source>
          <target state="translated">あるデータの多次元ヒストグラムを計算します。</target>
        </trans-unit>
        <trans-unit id="9f985f7023c691b407ddd9c38fd8d56c7f36cce8" translate="yes" xml:space="preserve">
          <source>Compute the number of periodic payments.</source>
          <target state="translated">定期的な支払い回数を計算します。</target>
        </trans-unit>
        <trans-unit id="733b57cc1709b7cf6a9c1de104182ed36cee85e6" translate="yes" xml:space="preserve">
          <source>Compute the one-dimensional FFT for real input.</source>
          <target state="translated">実入力の一次元FFTを計算します。</target>
        </trans-unit>
        <trans-unit id="8f2e370b04711ab583709ac47d198ba4e79cbadd" translate="yes" xml:space="preserve">
          <source>Compute the one-dimensional discrete Fourier Transform for real input.</source>
          <target state="translated">実入力に対する1次元離散フーリエ変換を計算します。</target>
        </trans-unit>
        <trans-unit id="e5e7857b86fdf420c15fe37d2645a15e124e2351" translate="yes" xml:space="preserve">
          <source>Compute the one-dimensional discrete Fourier Transform.</source>
          <target state="translated">1次元離散フーリエ変換を計算します。</target>
        </trans-unit>
        <trans-unit id="76b7badeb6481641dd13f6eaf394bb9c18c8cab1" translate="yes" xml:space="preserve">
          <source>Compute the one-dimensional inverse discrete Fourier Transform.</source>
          <target state="translated">1次元逆離散フーリエ変換を計算します。</target>
        </trans-unit>
        <trans-unit id="9381b1752cc6a461f7e91077cdb6db7fe5a48f4d" translate="yes" xml:space="preserve">
          <source>Compute the outer product of two vectors.</source>
          <target state="translated">2つのベクトルの外積を計算します。</target>
        </trans-unit>
        <trans-unit id="cbc3ab7d3f6c89e7688a1bd6e4393422aa4c3b90" translate="yes" xml:space="preserve">
          <source>Compute the payment against loan principal plus interest.</source>
          <target state="translated">ローンの元金+利息に対する支払いを計算します。</target>
        </trans-unit>
        <trans-unit id="46ed86386ad333de82eb1b7762aabfed9c76dfaf" translate="yes" xml:space="preserve">
          <source>Compute the payment against loan principal.</source>
          <target state="translated">ローンの元金に対する支払いを計算します。</target>
        </trans-unit>
        <trans-unit id="5b94637940b6e09f6a444aac566b5cffb0ef7cc5" translate="yes" xml:space="preserve">
          <source>Compute the present value.</source>
          <target state="translated">現在価値を計算します。</target>
        </trans-unit>
        <trans-unit id="ed2028550f82331ecb48f833083f7734128a7f0c" translate="yes" xml:space="preserve">
          <source>Compute the q-th percentile of the data along the specified axis.</source>
          <target state="translated">指定された軸に沿ったデータのq番目のパーセンタイルを計算します。</target>
        </trans-unit>
        <trans-unit id="c6ed1091760ac01a76bb052045201b29d9012406" translate="yes" xml:space="preserve">
          <source>Compute the q-th quantile of the data along the specified axis.</source>
          <target state="translated">指定された軸に沿ったデータのq番目の分位を計算します。</target>
        </trans-unit>
        <trans-unit id="a016c465eb4d3dc5939f0bdcc8907e529c903c76" translate="yes" xml:space="preserve">
          <source>Compute the qr factorization of a matrix.</source>
          <target state="translated">行列のqr因数分解を計算します。</target>
        </trans-unit>
        <trans-unit id="83309b8de9d230170ad49f73fb6a722aacbf72a8" translate="yes" xml:space="preserve">
          <source>Compute the qth percentile of the data along the specified axis, while ignoring nan values.</source>
          <target state="translated">nan値を無視して、指定された軸に沿ったデータのq番目のパーセンタイルを計算します。</target>
        </trans-unit>
        <trans-unit id="4fe3d325fd56452aa7f5ecbc4f8b7dad9aae46d0" translate="yes" xml:space="preserve">
          <source>Compute the qth quantile of the data along the specified axis, while ignoring nan values.</source>
          <target state="translated">nan値を無視して、指定された軸に沿ったデータのq番目の分位を計算します。</target>
        </trans-unit>
        <trans-unit id="de4cace71ddfe52eb9bc3f9b565cdbec00b48884" translate="yes" xml:space="preserve">
          <source>Compute the qth quantile of the data along the specified axis, while ignoring nan values. Returns the qth quantile(s) of the array elements.</source>
          <target state="translated">nan値を無視して、指定された軸に沿ったデータのq番目の分位を計算します。配列要素のq番目の分位値を返します。</target>
        </trans-unit>
        <trans-unit id="5ed535359eae3077289b82f9fc67b3ffd54128d9" translate="yes" xml:space="preserve">
          <source>Compute the rate of interest per period.</source>
          <target state="translated">期間ごとの利率を計算します。</target>
        </trans-unit>
        <trans-unit id="4a5f1b7538c28d59530b835e6055fa30abb75407" translate="yes" xml:space="preserve">
          <source>Compute the roots for the series. Note that the accuracy of the roots decrease the further outside the domain they lie.</source>
          <target state="translated">系列の根を計算します.根の精度は領域外に出るほど低下することに注意してください。</target>
        </trans-unit>
        <trans-unit id="5c8b9d5cf9d0408e56b56c50cb4c4ea45a908e79" translate="yes" xml:space="preserve">
          <source>Compute the roots of a Chebyshev series.</source>
          <target state="translated">チェビシェフ級数の根を計算しなさい。</target>
        </trans-unit>
        <trans-unit id="2d641d9e2bcefe116338c34e7e9f40f95aa74cff" translate="yes" xml:space="preserve">
          <source>Compute the roots of a Hermite series.</source>
          <target state="translated">エルミート級数の根を計算します。</target>
        </trans-unit>
        <trans-unit id="ae57b133f1570844585065d9e9104c93e1cbeadb" translate="yes" xml:space="preserve">
          <source>Compute the roots of a HermiteE series.</source>
          <target state="translated">HermiteE級数の根を計算します。</target>
        </trans-unit>
        <trans-unit id="43f37ce85ee2223f1cd749d722bfe6cde31f8d3f" translate="yes" xml:space="preserve">
          <source>Compute the roots of a Laguerre series.</source>
          <target state="translated">ラゲール級数の根を計算する。</target>
        </trans-unit>
        <trans-unit id="d296ea609a31255dd2dbb79a4294986988e4db61" translate="yes" xml:space="preserve">
          <source>Compute the roots of a Legendre series.</source>
          <target state="translated">レジェンドレ級数の根を計算する。</target>
        </trans-unit>
        <trans-unit id="19abb563bbb5b6ab6c8e5baeecc0592cab5fb3b0" translate="yes" xml:space="preserve">
          <source>Compute the roots of a polynomial.</source>
          <target state="translated">多項式の根を計算します。</target>
        </trans-unit>
        <trans-unit id="5d39f1a875851670d9065e685e3c7e7e93824abb" translate="yes" xml:space="preserve">
          <source>Compute the sign and (natural) logarithm of the determinant of an array.</source>
          <target state="translated">配列の行列式の符号と(自然)対数を計算します.</target>
        </trans-unit>
        <trans-unit id="f10d7331dd9b2505d01acc79b5a5c28111413dab" translate="yes" xml:space="preserve">
          <source>Compute the standard deviation along the specified axis, while ignoring NaNs.</source>
          <target state="translated">NaNを無視して、指定された軸に沿った標準偏差を計算します。</target>
        </trans-unit>
        <trans-unit id="66e310f2ac7182b1b997c8f29f43f4edc06f8e2a" translate="yes" xml:space="preserve">
          <source>Compute the standard deviation along the specified axis.</source>
          <target state="translated">指定された軸に沿った標準偏差を計算します。</target>
        </trans-unit>
        <trans-unit id="88f78cc6a5ad581dc5a8fb410e447c660bd9fa8f" translate="yes" xml:space="preserve">
          <source>Compute the truth value of NOT x element-wise.</source>
          <target state="translated">NOT x の要素ごとの真理値を計算します。</target>
        </trans-unit>
        <trans-unit id="bea68d81fc2eb04da18ba084a78837621cebec88" translate="yes" xml:space="preserve">
          <source>Compute the truth value of x1 AND x2 element-wise.</source>
          <target state="translated">x1 AND x2の真理値を要素ごとに計算します。</target>
        </trans-unit>
        <trans-unit id="a79688781ca1781bce152cb44a9b15f66b72bfb1" translate="yes" xml:space="preserve">
          <source>Compute the truth value of x1 OR x2 element-wise.</source>
          <target state="translated">x1 OR x2 の真理値を要素ごとに計算します。</target>
        </trans-unit>
        <trans-unit id="96e23b531f96b54840021483947c41a098b2ed1b" translate="yes" xml:space="preserve">
          <source>Compute the truth value of x1 XOR x2, element-wise.</source>
          <target state="translated">x1 XOR x2の真理値を要素ごとに計算します。</target>
        </trans-unit>
        <trans-unit id="6a8a6092543ea859a93955c068e3715cc92a71ca" translate="yes" xml:space="preserve">
          <source>Compute the variance along the specified axis, while ignoring NaNs.</source>
          <target state="translated">NaNを無視して、指定された軸に沿った分散を計算します。</target>
        </trans-unit>
        <trans-unit id="ab67fb4895d59fdba2f3312d3f97f40d39b32dc1" translate="yes" xml:space="preserve">
          <source>Compute the variance along the specified axis.</source>
          <target state="translated">指定された軸に沿った分散を計算します。</target>
        </trans-unit>
        <trans-unit id="8ad00c6a1c7489e8566fc76ef273931215436611" translate="yes" xml:space="preserve">
          <source>Compute the weighted average along the specified axis.</source>
          <target state="translated">指定された軸に沿った加重平均を計算します。</target>
        </trans-unit>
        <trans-unit id="79af5daa38dbf74799da93dffa5ef6f8fba6dccf" translate="yes" xml:space="preserve">
          <source>Compute two different sets of indices to access 4x4 arrays, one for the lower triangular part starting at the main diagonal, and one starting two diagonals further right:</source>
          <target state="translated">4x4配列にアクセスするために2つの異なるインデックスのセットを計算し、1つは主対角線から始まる下側の三角形の部分、もう1つはさらに右の2つの対角線から始まります。</target>
        </trans-unit>
        <trans-unit id="471eda8864ca36b1868976a6ed358ad1c7812441" translate="yes" xml:space="preserve">
          <source>Compute two different sets of indices to access 4x4 arrays, one for the upper triangular part starting at the main diagonal, and one starting two diagonals further right:</source>
          <target state="translated">4x4配列にアクセスするために2つの異なるインデックスのセットを計算し、1つは主対角線から始まる上部の三角形の部分、もう1つはさらに右の2つの対角線から始まります。</target>
        </trans-unit>
        <trans-unit id="197392cccae8af7bf76b914db915fad3a803ed5b" translate="yes" xml:space="preserve">
          <source>Compute z as follows:</source>
          <target state="translated">以下のようにzを計算します。</target>
        </trans-unit>
        <trans-unit id="e5847ac2ac3c001c3a2cac8771b53202e9193405" translate="yes" xml:space="preserve">
          <source>Computes a least-squares fit from the matrix.</source>
          <target state="translated">行列から最小二乗適合を計算します。</target>
        </trans-unit>
        <trans-unit id="d8ae02c2a1f37ef602fe9635ca3deb7ae7eff320" translate="yes" xml:space="preserve">
          <source>Computes a least-squares fit.</source>
          <target state="translated">最小二乗適合を計算します。</target>
        </trans-unit>
        <trans-unit id="fca5c893d0dd0095c803730ae984c8a5d1f22fbb" translate="yes" xml:space="preserve">
          <source>Computes spline fits.</source>
          <target state="translated">スプラインフィットを計算します。</target>
        </trans-unit>
        <trans-unit id="39bd0877aee14479f84fa968669682d5f4bb55d6" translate="yes" xml:space="preserve">
          <source>Computes the &amp;ldquo;exact&amp;rdquo; solution, &lt;code&gt;x&lt;/code&gt;, of the well-determined, i.e., full rank, linear matrix equation &lt;code&gt;ax = b&lt;/code&gt;.</source>
          <target state="translated">十分に決定された、つまりフルランクの線形行列方程式 &lt;code&gt;ax = b&lt;/code&gt; の「正確な」解 &lt;code&gt;x&lt;/code&gt; を計算します。</target>
        </trans-unit>
        <trans-unit id="650917c230f0e3e59e23869cdea9804dfbb8e6f0" translate="yes" xml:space="preserve">
          <source>Computes the Kronecker product, a composite array made of blocks of the second array scaled by the first.</source>
          <target state="translated">第2の配列のブロックを第1の配列でスケーリングした合成配列であるクロネッカー積を計算します.</target>
        </trans-unit>
        <trans-unit id="10cbc0814b0dd9715e5abe01e8dbaaa33fe8ad59" translate="yes" xml:space="preserve">
          <source>Computes the bit-wise AND of the underlying binary representation of the integers in the input arrays. This ufunc implements the C/Python operator &lt;code&gt;&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">入力配列内の整数の基礎となるバイナリ表現のビット単位のANDを計算します。このufuncは、C / Python演算子 &lt;code&gt;&amp;amp;&lt;/code&gt; を実装しています。</target>
        </trans-unit>
        <trans-unit id="60c3fbdfba7bb7378090a32d8c51b3e9fca09817" translate="yes" xml:space="preserve">
          <source>Computes the bit-wise NOT of the underlying binary representation of the integers in the input arrays. This ufunc implements the C/Python operator &lt;code&gt;~&lt;/code&gt;.</source>
          <target state="translated">入力配列内の整数の基礎となるバイナリ表現のビット単位のNOTを計算します。このufuncはC / Python演算子 &lt;code&gt;~&lt;/code&gt; 実装しています。</target>
        </trans-unit>
        <trans-unit id="42722e323632d4f5d01bc926af28a1c22d5e0f95" translate="yes" xml:space="preserve">
          <source>Computes the bit-wise OR of the underlying binary representation of the integers in the input arrays. This ufunc implements the C/Python operator &lt;code&gt;|&lt;/code&gt;.</source>
          <target state="translated">入力配列内の整数の基になるバイナリ表現のビット単位のORを計算します。このufuncはC / Pythonオペレーターを実装します &lt;code&gt;|&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67adfae8fffe1baa14f71537d861b7b2e85f7e48" translate="yes" xml:space="preserve">
          <source>Computes the bit-wise XOR of the underlying binary representation of the integers in the input arrays. This ufunc implements the C/Python operator &lt;code&gt;^&lt;/code&gt;.</source>
          <target state="translated">入力配列内の整数の基礎となるバイナリ表現のビット単位のXORを計算します。このufuncはC / Python演算子 &lt;code&gt;^&lt;/code&gt; を実装しています。</target>
        </trans-unit>
        <trans-unit id="7810254747fb57737310252a83ed1ecfa7ac7de1" translate="yes" xml:space="preserve">
          <source>Computes the remainder complementary to the &lt;a href=&quot;numpy.floor_divide#numpy.floor_divide&quot;&gt;&lt;code&gt;floor_divide&lt;/code&gt;&lt;/a&gt; function. It is equivalent to the Python modulus operator``x1 % x2`` and has the same sign as the divisor &lt;code&gt;x2&lt;/code&gt;. The MATLAB function equivalent to &lt;code&gt;np.remainder&lt;/code&gt; is &lt;code&gt;mod&lt;/code&gt;.</source>
          <target state="translated">関数&lt;a href=&quot;numpy.floor_divide#numpy.floor_divide&quot;&gt; &lt;code&gt;floor_divide&lt;/code&gt; を&lt;/a&gt;補完する剰余を計算します。Pythonのモジュラス演算子 `` x1％x2``と同等で、除数 &lt;code&gt;x2&lt;/code&gt; と同じ符号を持ちます。 &lt;code&gt;np.remainder&lt;/code&gt; と同等のMATLAB関数は &lt;code&gt;mod&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="531dbc47f0c42b16e91bc06f7934ffc0eee90d21" translate="yes" xml:space="preserve">
          <source>Computes the sample points and weights for Gauss-Chebyshev quadrature. These sample points and weights will correctly integrate polynomials of degree</source>
          <target state="translated">ガウス-シェビシェフ二乗法のサンプル点と重みを計算します。これらのサンプル点と重みは,次数</target>
        </trans-unit>
        <trans-unit id="d0825c93bd67fcabe34143f70ae3cf80cb8738d0" translate="yes" xml:space="preserve">
          <source>Computes the sample points and weights for Gauss-Hermite quadrature. These sample points and weights will correctly integrate polynomials of degree</source>
          <target state="translated">ガウス・ヘルミート二乗法のサンプル点と重みを計算します。これらのサンプル点と重みは,次数</target>
        </trans-unit>
        <trans-unit id="9e720112e13fbc925fc36348970ddc09e09d43c8" translate="yes" xml:space="preserve">
          <source>Computes the sample points and weights for Gauss-HermiteE quadrature. These sample points and weights will correctly integrate polynomials of degree</source>
          <target state="translated">Gauss-HermiteEの求積のためのサンプル点と重みを計算します。これらのサンプル点と重みは,次数</target>
        </trans-unit>
        <trans-unit id="01551c6580e6c7cd7da039752c76647a860146e9" translate="yes" xml:space="preserve">
          <source>Computes the sample points and weights for Gauss-Laguerre quadrature. These sample points and weights will correctly integrate polynomials of degree</source>
          <target state="translated">ガウス-ラグエール二乗法のサンプル点と重みを計算します。これらのサンプル点と重みは,次数</target>
        </trans-unit>
        <trans-unit id="a1676ee2351ddea298864c94b5761c72628c1745" translate="yes" xml:space="preserve">
          <source>Computes the sample points and weights for Gauss-Legendre quadrature. These sample points and weights will correctly integrate polynomials of degree</source>
          <target state="translated">ガウス-レジェンドレ二乗法のサンプル点と重みを計算します。これらのサンプル点と重みは,次数</target>
        </trans-unit>
        <trans-unit id="16b7ced6d1fb17233cfcad9fc6b8ccfb3b6fa95d" translate="yes" xml:space="preserve">
          <source>Computes the vector x that approximatively solves the equation &lt;code&gt;a @ x = b&lt;/code&gt;. The equation may be under-, well-, or over-determined (i.e., the number of linearly independent rows of &lt;code&gt;a&lt;/code&gt; can be less than, equal to, or greater than its number of linearly independent columns). If &lt;code&gt;a&lt;/code&gt; is square and of full rank, then &lt;code&gt;x&lt;/code&gt; (but for round-off error) is the &amp;ldquo;exact&amp;rdquo; solution of the equation. Else, &lt;code&gt;x&lt;/code&gt; minimizes the Euclidean 2-norm</source>
          <target state="translated">方程式 &lt;code&gt;a @ x = b&lt;/code&gt; を近似的に解くベクトルxを計算します。方程式は、過小、十分、または過大に決定される可能性があります（つまり、 &lt;code&gt;a&lt;/code&gt; の線形独立行の数は、線形独立列の数よりも少ない、等しい、または多い可能性があります）。場合正方形及びフルランクであり、次いで、 &lt;code&gt;x&lt;/code&gt; （ただし、丸め誤差のための）式の「正確な」解決策です。それ以外の場合、 &lt;code&gt;x&lt;/code&gt; はユークリッド2ノルムを最小化します &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54ad29fb2a5fef5a2e2b0f26f16821ff1f58a836" translate="yes" xml:space="preserve">
          <source>Computing determinants for a stack of matrices:</source>
          <target state="translated">行列のスタックに対する行列式を計算する.</target>
        </trans-unit>
        <trans-unit id="5ffa5ce5ed5560b7502b21e2214468e10166aa18" translate="yes" xml:space="preserve">
          <source>Computing log-determinants for a stack of matrices:</source>
          <target state="translated">行列のスタックの対数決定量を計算します.</target>
        </trans-unit>
        <trans-unit id="0fe14fa20a118f97b78bbb776b8e138eb54dc0e1" translate="yes" xml:space="preserve">
          <source>Computing the mean in float64 is more accurate:</source>
          <target state="translated">平均値をfloat64で計算するとより正確です。</target>
        </trans-unit>
        <trans-unit id="0a9983d1df747790eaf4d763cc8f1c4f963a34f1" translate="yes" xml:space="preserve">
          <source>Computing the standard deviation in float64 is more accurate:</source>
          <target state="translated">標準偏差をfloat64で計算するとより正確です。</target>
        </trans-unit>
        <trans-unit id="0d25e4fdfb9f10d7770a29a84aa8fcf9d6cb64d3" translate="yes" xml:space="preserve">
          <source>Computing the variance in float64 is more accurate:</source>
          <target state="translated">float64で分散を計算するとより正確です。</target>
        </trans-unit>
        <trans-unit id="750f4a65465f4b9d86986bbaa22fd86a632eb891" translate="yes" xml:space="preserve">
          <source>Concatenate a sequence of arrays along the given axis.</source>
          <target state="translated">与えられた軸に沿って配列を連結します.</target>
        </trans-unit>
        <trans-unit id="69f1f5039a9914b263cf71649e1821ac86e01220" translate="yes" xml:space="preserve">
          <source>Concatenate function that preserves input masks.</source>
          <target state="translated">入力マスクを保持する連結関数。</target>
        </trans-unit>
        <trans-unit id="ed6bd4fa614f6eb9503e5372178538f1d170fa87" translate="yes" xml:space="preserve">
          <source>Concatenation of 1d arrays along any but &lt;code&gt;axis=0&lt;/code&gt; raises &lt;code&gt;IndexError&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;axis=0&lt;/code&gt; 以外の任意の1d配列に沿って連結すると、 &lt;code&gt;IndexError&lt;/code&gt; が発生します</target>
        </trans-unit>
        <trans-unit id="6f58d263f33944384921df8405fd4a36e06175e2" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">Concepts</target>
        </trans-unit>
        <trans-unit id="ba05e100e3bed4ff3109d1f54b0ad1cc52a86a51" translate="yes" xml:space="preserve">
          <source>Conceptually, &lt;code&gt;__array_wrap__&lt;/code&gt; &amp;ldquo;wraps up the action&amp;rdquo; in the sense of allowing a subclass to set the type of the return value and update attributes and metadata. Let&amp;rsquo;s show how this works with an example. First we return to the simpler example subclass, but with a different name and some print statements:</source>
          <target state="translated">概念的には、 &lt;code&gt;__array_wrap__&lt;/code&gt; は、サブクラスが戻り値のタイプを設定し、属性とメタデータを更新できるようにするという意味で「アクションをまとめる」。これがどのように機能するかを例で示しましょう。最初に、より単純なサブクラスの例に戻りますが、名前とprintステートメントが異なります。</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="7dcf596bd4e5f4a9d24521f5f49fd79763f81495" translate="yes" xml:space="preserve">
          <source>Configuration (class in numpy.distutils.misc_util)</source>
          <target state="translated">設定 (numpy.distutils.misc_util のクラス)</target>
        </trans-unit>
        <trans-unit id="e244b01ee3f64c2283fc876d0c8eda64a9141003" translate="yes" xml:space="preserve">
          <source>Configuration class</source>
          <target state="translated">設定クラス</target>
        </trans-unit>
        <trans-unit id="de104104bf202d8e985f48514d72c44013ff4e3f" translate="yes" xml:space="preserve">
          <source>Conflict of interest</source>
          <target state="translated">利益相反</target>
        </trans-unit>
        <trans-unit id="184822ecb4734c964a62ae2e06e95f198b762b22" translate="yes" xml:space="preserve">
          <source>Conflicts of Interest</source>
          <target state="translated">利益相反</target>
        </trans-unit>
        <trans-unit id="3b137999e92fb865b60d44d9df90d00a70159dda" translate="yes" xml:space="preserve">
          <source>Conjugate gradients solver</source>
          <target state="translated">共役勾配ソルバー</target>
        </trans-unit>
        <trans-unit id="03aa9d5446588b4491e2deeb2d30f5f693fcd346" translate="yes" xml:space="preserve">
          <source>Consensus-based decision making by the community</source>
          <target state="translated">地域の合意に基づく意思決定</target>
        </trans-unit>
        <trans-unit id="da18f43cbda77c14c1135f5d6d7534517acba1bc" translate="yes" xml:space="preserve">
          <source>Consequences of alignment</source>
          <target state="translated">アライメントの結果</target>
        </trans-unit>
        <trans-unit id="ee60c103055af88b13ff323bc75bf150e6725271" translate="yes" xml:space="preserve">
          <source>Consider a Fortran 77 file &lt;code&gt;ftype.f&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ftype.f&lt;/code&gt; ファイルftype.fを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="823b148245451955fd9acdba548819ba7ce17047" translate="yes" xml:space="preserve">
          <source>Consider a potential project with an initial investment of $40 000 and projected cashflows of $5 000, $8 000, $12 000 and $30 000 at the end of each period discounted at a rate of 8% per period. To find the project&amp;rsquo;s net present value:</source>
          <target state="translated">初期投資が$ 40 000で、各期間の終わりに$ 5 000、$ 8 000、$ 12 000、および$ 30 000の予測キャッシュフローが、期間ごとに8％の割合で割り引かれる潜在的なプロジェクトについて考えてみます。プロジェクトの正味現在価値を見つけるには：</target>
        </trans-unit>
        <trans-unit id="e539f73473510ee53613700e677295e3dfb96cf9" translate="yes" xml:space="preserve">
          <source>Consider a reasonable prototype for a dot product function:</source>
          <target state="translated">ドット商品機能の合理的な試作品を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="cdfd5c5d52fe64ca5fe219ac6749930b18bf023b" translate="yes" xml:space="preserve">
          <source>Consider an urn with black and white marbles in it, &lt;code&gt;ngood&lt;/code&gt; of them are black and &lt;code&gt;nbad&lt;/code&gt; are white. If you draw &lt;code&gt;nsample&lt;/code&gt; balls without replacement, then the hypergeometric distribution describes the distribution of black balls in the drawn sample.</source>
          <target state="translated">黒と白の大理石が入ったつぼを考えてみてください &lt;code&gt;ngood&lt;/code&gt; は黒、 &lt;code&gt;nbad&lt;/code&gt; は白です。置換せずに &lt;code&gt;nsample&lt;/code&gt; ボールを描画する場合、超幾何分布は、描画されたサンプル内の黒いボールの分布を表します。</target>
        </trans-unit>
        <trans-unit id="0d56e4e8e5205e5f0b9d856e7027774cced155ea" translate="yes" xml:space="preserve">
          <source>Consider four points in different quadrants:</source>
          <target state="translated">4つの点を異なる四分位で考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="fb2b6acc5ced685725fe745ef47154f819027b77" translate="yes" xml:space="preserve">
          <source>Consider the following &lt;a href=&quot;https://numpy.org/doc/1.19/f2py/setup_example.py&quot;&gt;setup file&lt;/a&gt;:</source>
          <target state="translated">次の&lt;a href=&quot;https://numpy.org/doc/1.19/f2py/setup_example.py&quot;&gt;セットアップファイル&lt;/a&gt;について考えてみます。</target>
        </trans-unit>
        <trans-unit id="7c9c1bf2d1a0768df8735aff97cc8590c9d13541" translate="yes" xml:space="preserve">
          <source>Consider the following Fortran 77 code:</source>
          <target state="translated">次のFortran 77のコードを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="8515017e84be54d053995a36d2cd6320bd302547" translate="yes" xml:space="preserve">
          <source>Consider the following Fortran 77 subroutine that takes an array and applies a function &lt;code&gt;func&lt;/code&gt; to its elements.</source>
          <target state="translated">配列を受け取り、その要素に関数 &lt;code&gt;func&lt;/code&gt; を適用する次のFortran77サブルーチンについて考えてみます。</target>
        </trans-unit>
        <trans-unit id="80412f62c2645f04f58643107077fefaf6e15221" translate="yes" xml:space="preserve">
          <source>Consider the following Fortran 77 subroutine:</source>
          <target state="translated">次のFortran 77サブルーチンを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="8ad9bdce0c23896df7965ad8c90acb9c29b310c2" translate="yes" xml:space="preserve">
          <source>Consider the following Fortran 90 code:</source>
          <target state="translated">次のFortran 90のコードを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="ed0667d145092c432f907df7626ac668935a1be1" translate="yes" xml:space="preserve">
          <source>Consider two variables,</source>
          <target state="translated">2つの変数を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="e750e23dd4669e25e966e47bb3ecf6f06ddf394d" translate="yes" xml:space="preserve">
          <source>Const qualify UFunc inner loops</source>
          <target state="translated">コンス ト修飾 UFunc インナーループ</target>
        </trans-unit>
        <trans-unit id="e578be69fc8af5a2544b4a4596812e93693c1390" translate="yes" xml:space="preserve">
          <source>Constant padding. Outside bounds values will be the same as the first item in fill_value.</source>
          <target state="translated">一定のパディング。境界外の値は、fill_valueの最初の項目と同じになります。</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="40c1f81a4e69db7cd9d45c11cd781d9ad71dd11a" translate="yes" xml:space="preserve">
          <source>Constants of the &lt;code&gt;numpy.ma&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;numpy.ma&lt;/code&gt; モジュールの定数</target>
        </trans-unit>
        <trans-unit id="416f6fe7840ff98cc53cadbb77344b8df8be8efe" translate="yes" xml:space="preserve">
          <source>Constants of the numpy.ma module</source>
          <target state="translated">numpy.ma モジュールの定数</target>
        </trans-unit>
        <trans-unit id="ff100071278ebc0dce3b27374571a0b6214de453" translate="yes" xml:space="preserve">
          <source>Construct Python bytes containing the raw data bytes in the array.</source>
          <target state="translated">配列内の生データバイトを含むPythonバイトを構築します。</target>
        </trans-unit>
        <trans-unit id="2a92c9e90e58234afd363951b811ae566d58dd4a" translate="yes" xml:space="preserve">
          <source>Construct a 2-D histogram with variable bin width. First define the bin edges:</source>
          <target state="translated">可変ビン幅を持つ2次元ヒストグラムを構築します.まず、ビンの辺を定義します。</target>
        </trans-unit>
        <trans-unit id="b11f0a82e16bcae98f2244ba4878813b908a4c4a" translate="yes" xml:space="preserve">
          <source>Construct a configuration instance for the given package name. If &lt;em&gt;parent_name&lt;/em&gt; is not None, then construct the package as a sub-package of the &lt;em&gt;parent_name&lt;/em&gt; package. If &lt;em&gt;top_path&lt;/em&gt; and &lt;em&gt;package_path&lt;/em&gt; are None then they are assumed equal to the path of the file this instance was created in. The setup.py files in the numpy distribution are good examples of how to use the &lt;a href=&quot;#numpy.distutils.misc_util.Configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">指定されたパッケージ名の構成インスタンスを構築します。&lt;em&gt;parent_name&lt;/em&gt;がNoneでない場合は、パッケージを&lt;em&gt;parent_name&lt;/em&gt;パッケージのサブパッケージとして&lt;em&gt;作成し&lt;/em&gt;ます。場合&lt;em&gt;top_path&lt;/em&gt;と&lt;em&gt;PACKAGE_PATHは&lt;/em&gt; Noneです、彼らは、このインスタンスで作成したファイルのパスに等しいと仮定されている。numpyの分布のsetup.pyファイルを使用する方法の良い例です&lt;a href=&quot;#numpy.distutils.misc_util.Configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; &lt;/a&gt;インスタンスを。</target>
        </trans-unit>
        <trans-unit id="433d0814f344913efe3de8118404c8ba5f5d7e7f" translate="yes" xml:space="preserve">
          <source>Construct a dtype description list from a given dtype.</source>
          <target state="translated">与えられたdtypeからdtype記述リストを構築します。</target>
        </trans-unit>
        <trans-unit id="699e78314482350bc4ad52e8b449dfd4bedbe2f6" translate="yes" xml:space="preserve">
          <source>Construct a multi-dimensional &amp;ldquo;meshgrid&amp;rdquo; using indexing notation.</source>
          <target state="translated">インデックス表記を使用して、多次元の「メッシュグリッド」を構築します。</target>
        </trans-unit>
        <trans-unit id="5f1a333c2b137d94f4c46546de94da2e32f2f8d9" translate="yes" xml:space="preserve">
          <source>Construct a new 1-dimensional array of data-type determined by &lt;code&gt;descr&lt;/code&gt;, that ranges from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;stop&lt;/code&gt; (exclusive) in increments of &lt;code&gt;step&lt;/code&gt;. Equivalent to arange( &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;step&lt;/code&gt;, &lt;code&gt;typenum&lt;/code&gt; ).</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; から &lt;code&gt;stop&lt;/code&gt; （排他的）までの範囲で、 &lt;code&gt;step&lt;/code&gt; の増分で &lt;code&gt;descr&lt;/code&gt; によって決定されるデータ型の新しい1次元配列を作成します。 &lt;code&gt;typenum&lt;/code&gt; （ &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;stop&lt;/code&gt; 、 &lt;code&gt;step&lt;/code&gt; 、typenum）と同じです。</target>
        </trans-unit>
        <trans-unit id="fec9966593ee1edd10cbcd21d0622b1f630d401d" translate="yes" xml:space="preserve">
          <source>Construct a new 1-dimensional array of data-type, &lt;em&gt;typenum&lt;/em&gt;, that ranges from &lt;em&gt;start&lt;/em&gt; to &lt;em&gt;stop&lt;/em&gt; (exclusive) in increments of &lt;em&gt;step&lt;/em&gt; . Equivalent to &lt;strong&gt;arange&lt;/strong&gt; (&lt;em&gt;start&lt;/em&gt;, &lt;em&gt;stop&lt;/em&gt;, &lt;em&gt;step&lt;/em&gt;, dtype).</source>
          <target state="translated">新たな1次元データ型の配列、構築&lt;em&gt;typenum&lt;/em&gt;、の範囲であることを&lt;em&gt;開始&lt;/em&gt;する&lt;em&gt;、停止&lt;/em&gt;の増分で（排他的）&lt;em&gt;ステップ&lt;/em&gt;。相当&lt;strong&gt;arange&lt;/strong&gt;（&lt;em&gt;スタート&lt;/em&gt;、&lt;em&gt;ストップ&lt;/em&gt;、&lt;em&gt;ステップ&lt;/em&gt;、DTYPE）。</target>
        </trans-unit>
        <trans-unit id="8a706c57cd0f57f685f10a9b48082253d3c7f348" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;em&gt;nd&lt;/em&gt; -dimensional array with shape given by &lt;em&gt;dims&lt;/em&gt; and data type given by &lt;em&gt;dtype&lt;/em&gt;. If &lt;em&gt;fortran&lt;/em&gt; is non-zero, then a Fortran-order array is created, otherwise a C-order array is created. Fill the memory with zeros (or the 0 object if &lt;em&gt;dtype&lt;/em&gt; corresponds to &lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; ).</source>
          <target state="translated">新しい構築&lt;em&gt;ND&lt;/em&gt;で与えられる形状と次元アレイ&lt;em&gt;薄暗くなり&lt;/em&gt;によって与えられたデータ型&lt;em&gt;DTYPEを&lt;/em&gt;。&lt;em&gt;fortran&lt;/em&gt;がゼロ以外の場合は、Fortranオーダーの配列が作成されます。それ以外の場合は、Cオーダーの配列が作成されます。 （場合は0オブジェクトゼロでメモリを埋める&lt;em&gt;DTYPEは、&lt;/em&gt;に相当&lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8d2687a5e2ca712d27ca98860cfa5c57dee1f046" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;em&gt;nd&lt;/em&gt; -dimensional array with shape given by &lt;em&gt;dims&lt;/em&gt; and data type given by &lt;em&gt;dtype&lt;/em&gt;. If &lt;em&gt;fortran&lt;/em&gt; is non-zero, then a Fortran-order array is created, otherwise a C-order array is created. Fill the memory with zeros (or the 0 object if &lt;em&gt;dtype&lt;/em&gt; corresponds to &lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; ).</source>
          <target state="translated">新しい構築&lt;em&gt;ND&lt;/em&gt;で与えられる形状と次元アレイ&lt;em&gt;薄暗くなり&lt;/em&gt;によって与えられたデータ型&lt;em&gt;DTYPEを&lt;/em&gt;。&lt;em&gt;fortran&lt;/em&gt;がゼロ以外の場合は、Fortran次数配列が作成されます。それ以外の場合は、C次数配列が作成されます。メモリをゼロ（または&lt;em&gt;dtypeがNPY_OBJECTに&lt;/em&gt;対応する場合は0オブジェクト）で&lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8e79348d2a80859159fd1349201ec8444a12864b" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;em&gt;nd&lt;/em&gt; -dimensional array with shape given by &lt;em&gt;dims&lt;/em&gt; and data type given by &lt;em&gt;dtype&lt;/em&gt;. If &lt;em&gt;fortran&lt;/em&gt; is non-zero, then a Fortran-order array is created, otherwise a C-order array is created. The array is uninitialized unless the data type corresponds to &lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; in which case the array is filled with &lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt;&lt;code&gt;Py_None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新しい構築&lt;em&gt;ND&lt;/em&gt;で与えられる形状と次元アレイ&lt;em&gt;薄暗くなり&lt;/em&gt;によって与えられたデータ型&lt;em&gt;DTYPEを&lt;/em&gt;。&lt;em&gt;fortran&lt;/em&gt;がゼロ以外の場合は、Fortranオーダーの配列が作成されます。それ以外の場合は、Cオーダーの配列が作成されます。データ型が&lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;に対応していない限り、配列は初期化されていません。この場合、配列は&lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt; &lt;code&gt;Py_None&lt;/code&gt; &lt;/a&gt;で埋められます。</target>
        </trans-unit>
        <trans-unit id="43bfc74ca97bf8504fbbd30400b5012bf38a52fb" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;em&gt;nd&lt;/em&gt; -dimensional array with shape given by &lt;em&gt;dims&lt;/em&gt; and data type given by &lt;em&gt;dtype&lt;/em&gt;. If &lt;em&gt;fortran&lt;/em&gt; is non-zero, then a Fortran-order array is created, otherwise a C-order array is created. The array is uninitialized unless the data type corresponds to &lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; in which case the array is filled with &lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt;&lt;code&gt;Py_None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新しい構築&lt;em&gt;ND&lt;/em&gt;で与えられる形状と次元アレイ&lt;em&gt;薄暗くなり&lt;/em&gt;によって与えられたデータ型&lt;em&gt;DTYPEを&lt;/em&gt;。&lt;em&gt;fortran&lt;/em&gt;がゼロ以外の場合は、Fortran次数配列が作成されます。それ以外の場合は、C次数配列が作成されます。データ型が&lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;に対応しない限り、配列は初期化されません。NPY_OBJECTの場合、配列は&lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt; &lt;code&gt;Py_None&lt;/code&gt; &lt;/a&gt;で埋められます。</target>
        </trans-unit>
        <trans-unit id="dd48627fbdfc02f6cd5a744335a7b8a3ec7e74ff" translate="yes" xml:space="preserve">
          <source>Construct a new Generator with the default BitGenerator (PCG64).</source>
          <target state="translated">デフォルトのBitGenerator(PCG64)で新しいGeneratorを構築します。</target>
        </trans-unit>
        <trans-unit id="2293ee6e243af707ad818c946eb5f54c18c43217" translate="yes" xml:space="preserve">
          <source>Construct a one-dimensional ndarray of a single type from a binary or (ASCII) text &lt;code&gt;string&lt;/code&gt; of length &lt;code&gt;slen&lt;/code&gt;. The data-type of the array to-be-created is given by &lt;code&gt;dtype&lt;/code&gt;. If num is -1, then &lt;strong&gt;copy&lt;/strong&gt; the entire string and return an appropriately sized array, otherwise, &lt;code&gt;num&lt;/code&gt; is the number of items to &lt;strong&gt;copy&lt;/strong&gt; from the string. If &lt;code&gt;sep&lt;/code&gt; is NULL (or &amp;ldquo;&amp;rdquo;), then interpret the string as bytes of binary data, otherwise convert the sub-strings separated by &lt;code&gt;sep&lt;/code&gt; to items of data-type &lt;code&gt;dtype&lt;/code&gt;. Some data-types may not be readable in text mode and an error will be raised if that occurs. All errors return NULL.</source>
          <target state="translated">長さ &lt;code&gt;slen&lt;/code&gt; のバイナリまたは（ASCII）テキスト &lt;code&gt;string&lt;/code&gt; から、単一タイプの1次元ndarrayを構築します。作成する配列のデータ型は &lt;code&gt;dtype&lt;/code&gt; で指定します。 numが-1の場合、文字列全体を&lt;strong&gt;コピーし&lt;/strong&gt;て適切なサイズの配列を返します。それ以外の場合、 &lt;code&gt;num&lt;/code&gt; は文字列から&lt;strong&gt;コピー&lt;/strong&gt;するアイテムの数です。場合 &lt;code&gt;sep&lt;/code&gt; NULL（または「an」）は、バイナリデータのバイトとして文字列を解釈し、そうでなければサブストリングにより分離変換 &lt;code&gt;sep&lt;/code&gt; データ型の項目に &lt;code&gt;dtype&lt;/code&gt; 。一部のデータ型はテキストモードでは読み取りできない場合があり、それが発生するとエラーが発生します。すべてのエラーはNULLを返します。</target>
        </trans-unit>
        <trans-unit id="5251a91820bd97dd4c2975d82383f312ad4f99bf" translate="yes" xml:space="preserve">
          <source>Construct a one-dimensional ndarray of a single type from a binary or text file. The open file pointer is &lt;code&gt;fp&lt;/code&gt;, the data-type of the array to be created is given by &lt;code&gt;dtype&lt;/code&gt;. This must match the data in the file. If &lt;code&gt;num&lt;/code&gt; is -1, then read until the end of the file and return an appropriately sized array, otherwise, &lt;code&gt;num&lt;/code&gt; is the number of items to read. If &lt;code&gt;sep&lt;/code&gt; is NULL (or &amp;ldquo;&amp;rdquo;), then read from the file in binary mode, otherwise read from the file in text mode with &lt;code&gt;sep&lt;/code&gt; providing the item separator. Some array types cannot be read in text mode in which case an error is raised.</source>
          <target state="translated">バイナリファイルまたはテキストファイルから単一タイプの1次元ndarrayを作成します。開いているファイルのポインタは &lt;code&gt;fp&lt;/code&gt; で、作成される配列のデータ型は &lt;code&gt;dtype&lt;/code&gt; で指定されます。これは、ファイル内のデータと一致する必要があります。 &lt;code&gt;num&lt;/code&gt; が-1の場合、ファイルの最後まで読み取り、適切なサイズの配列を返します。それ以外の場合、 &lt;code&gt;num&lt;/code&gt; は読み取るアイテムの数です。場合 &lt;code&gt;sep&lt;/code&gt; NULL（または「an」）は、バイナリモードでファイルから読み取られ、そうでない場合とテキストモードでファイルから読み取ら &lt;code&gt;sep&lt;/code&gt; アイテムセパレータを提供します。一部の配列タイプはテキストモードで読み取ることができません。その場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="5dade1b4bc430d7a08d1e500dc891669be329c17" translate="yes" xml:space="preserve">
          <source>Construct a one-dimensional ndarray of a single type from an object, &lt;code&gt;buf&lt;/code&gt;, that exports the (single-segment) buffer protocol (or has an attribute __buffer__ that returns an object that exports the buffer protocol). A writeable buffer will be tried first followed by a read- only buffer. The &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt; flag of the returned array will reflect which one was successful. The data is assumed to start at &lt;code&gt;offset&lt;/code&gt; bytes from the start of the memory location for the object. The type of the data in the buffer will be interpreted depending on the data- type descriptor, &lt;code&gt;dtype.&lt;/code&gt; If &lt;code&gt;count&lt;/code&gt; is negative then it will be determined from the size of the buffer and the requested itemsize, otherwise, &lt;code&gt;count&lt;/code&gt; represents how many elements should be converted from the buffer.</source>
          <target state="translated">（単一セグメントの）バッファープロトコルをエクスポートする（またはバッファープロトコルをエクスポートするオブジェクトを返す属性__buffer__を持つ）オブジェクト &lt;code&gt;buf&lt;/code&gt; から、単一タイプの1次元ndarrayを作成します。書き込み可能なバッファーが最初に試行され、次に読み取り専用バッファーが試行されます。返された配列の&lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt;フラグは、どれが成功したかを反映します。データは、オブジェクトのメモリ位置の先頭からの &lt;code&gt;offset&lt;/code&gt; バイトで始まると想定されます。バッファ内のデータのタイプは、データタイプ記述子 &lt;code&gt;dtype.&lt;/code&gt; 応じて解釈されます。 &lt;code&gt;count&lt;/code&gt; が負の場合、それはバッファーのサイズと要求されたitemsizeから決定され、そうでなければ &lt;code&gt;count&lt;/code&gt; バッファから変換する要素の数を表します。</target>
        </trans-unit>
        <trans-unit id="e92de9d29a116aa0b6d137e92f4fcc4342111c10" translate="yes" xml:space="preserve">
          <source>Construct a polynomial from its roots:</source>
          <target state="translated">その根から多項式を構築します。</target>
        </trans-unit>
        <trans-unit id="54108fca709f2e6aae97ceda0d8c265646c4b46b" translate="yes" xml:space="preserve">
          <source>Construct a record array from a wide-variety of objects.</source>
          <target state="translated">さまざまなオブジェクトからレコード配列を構築します。</target>
        </trans-unit>
        <trans-unit id="dddc1fb766bf2c0701978de30cc0096077f1469c" translate="yes" xml:space="preserve">
          <source>Construct a record array from data.</source>
          <target state="translated">データからレコード配列を構築します。</target>
        </trans-unit>
        <trans-unit id="d4864a011f7d33f5af39ef59a61e350cf80e6b72" translate="yes" xml:space="preserve">
          <source>Construct an array by executing a function on grid positions.</source>
          <target state="translated">グリッド位置の関数を実行して配列を構築します。</target>
        </trans-unit>
        <trans-unit id="eb2f5ef9eabc5b7b4a11f36c9da5468304049228" translate="yes" xml:space="preserve">
          <source>Construct an array by executing a function over each coordinate.</source>
          <target state="translated">各座標上で関数を実行して配列を構築します。</target>
        </trans-unit>
        <trans-unit id="b8c37852e1d20c54f490e5d55d35d32a2e77d1a3" translate="yes" xml:space="preserve">
          <source>Construct an array by repeating A the number of times given by reps.</source>
          <target state="translated">repsで与えられた回数Aを繰り返して配列を構築します。</target>
        </trans-unit>
        <trans-unit id="dbd2833638747627f536392fa321860afd1ae4eb" translate="yes" xml:space="preserve">
          <source>Construct an array from a text file, using regular expression parsing.</source>
          <target state="translated">正規表現の解析を使用して、テキストファイルから配列を構築します。</target>
        </trans-unit>
        <trans-unit id="001455fa868d0d982a84f3e1e1c5e71cab1576c5" translate="yes" xml:space="preserve">
          <source>Construct an array from an index array and a set of arrays to choose from.</source>
          <target state="translated">インデックス配列と配列のセットから配列を構築します.</target>
        </trans-unit>
        <trans-unit id="bc43ce79bb40c8126c3a27887892f4214024c494" translate="yes" xml:space="preserve">
          <source>Construct an array from data in a text or binary file.</source>
          <target state="translated">テキストまたはバイナリファイル内のデータから配列を構築します。</target>
        </trans-unit>
        <trans-unit id="899756aeb93d1b6aa9bd7c93436b76c0a22fadb6" translate="yes" xml:space="preserve">
          <source>Construct an array.</source>
          <target state="translated">配列を構築します。</target>
        </trans-unit>
        <trans-unit id="c9c119fe2ffdbb682afbfd3d008f9fdd22f03e58" translate="yes" xml:space="preserve">
          <source>Construct an external function suitable for calling Python function from Fortran. &lt;code&gt;intent(callback)&lt;/code&gt; must be specified before the corresponding &lt;code&gt;external&lt;/code&gt; statement. If &amp;lsquo;argument&amp;rsquo; is not in argument list then it will be added to Python wrapper but only initializing external function.</source>
          <target state="translated">FortranからPython関数を呼び出すのに適した外部関数を作成します。 &lt;code&gt;intent(callback)&lt;/code&gt; は、対応する &lt;code&gt;external&lt;/code&gt; ステートメントの前に指定する必要があります。'argument'が引数リストにない場合、Pythonラッパーに追加されますが、外部関数を初期化するだけです。</target>
        </trans-unit>
        <trans-unit id="46ee020e3e38edbb070e9ee58f67dfe44037398b" translate="yes" xml:space="preserve">
          <source>Construct an ndarray that allows field access using attributes.</source>
          <target state="translated">属性を使ってフィールドにアクセスできるようにするNDアレイを構築します。</target>
        </trans-unit>
        <trans-unit id="fb44631c7aa67652764b1577b600ec14bbff21bf" translate="yes" xml:space="preserve">
          <source>Construct an ndarray:</source>
          <target state="translated">ndarrayを構築します。</target>
        </trans-unit>
        <trans-unit id="1836b53e3c198fe2973be15630e978884dacc6c1" translate="yes" xml:space="preserve">
          <source>Construct an open mesh from multiple sequences.</source>
          <target state="translated">複数のシーケンスからオープンメッシュを構築します。</target>
        </trans-unit>
        <trans-unit id="d3f16aad1976f8f22c5c798dc38d30d79a5e094c" translate="yes" xml:space="preserve">
          <source>Construct an open multi-dimensional &amp;ldquo;meshgrid&amp;rdquo; using indexing notation.</source>
          <target state="translated">インデックス表記を使用して、オープンな多次元「メッシュグリッド」を構築します。</target>
        </trans-unit>
        <trans-unit id="55ed2507cc0269a472eaaccd89421410ab758bab" translate="yes" xml:space="preserve">
          <source>Construct index arrays.</source>
          <target state="translated">インデックス配列を構築します。</target>
        </trans-unit>
        <trans-unit id="5a0c11bbbca8e4a4ea9ed0b83b66214ccecaa653" translate="yes" xml:space="preserve">
          <source>Construct the polynomial</source>
          <target state="translated">多項式を構築する</target>
        </trans-unit>
        <trans-unit id="192cbc084f005ca610c67957b0697275db236d0b" translate="yes" xml:space="preserve">
          <source>Constructing arrays</source>
          <target state="translated">配列の構築</target>
        </trans-unit>
        <trans-unit id="892df0306b57e168d52112a1ac784f3daa7382c7" translate="yes" xml:space="preserve">
          <source>Constructing masked arrays</source>
          <target state="translated">マスクされた配列の構築</target>
        </trans-unit>
        <trans-unit id="3b2acad01b35b6a4b590dd72299d537e83394aa4" translate="yes" xml:space="preserve">
          <source>Constructing polynomials by specifying coefficients is just one way of obtaining a polynomial instance, they may also be created by specifying their roots, by conversion from other polynomial types, and by least squares fits. Fitting is discussed in its own section, the other methods are demonstrated below:</source>
          <target state="translated">係数を指定して多項式を構築することは、多項式インスタンスを得るための1つの方法にすぎませんが、根を指定したり、他の多項式型から変換したり、最小二乗適合を行ったりすることでも作成できます。フィットについてはそれ自身のセクションで説明しますが、その他の方法については以下で説明します。</target>
        </trans-unit>
        <trans-unit id="5e3bd2707e230a54a78bfb480ed5e48501ad49b7" translate="yes" xml:space="preserve">
          <source>Construction and Destruction</source>
          <target state="translated">建設と破壊</target>
        </trans-unit>
        <trans-unit id="94e201ee9bbe86594c4ceb5d0adfb75c739dc4ae" translate="yes" xml:space="preserve">
          <source>Construction:</source>
          <target state="translated">Construction:</target>
        </trans-unit>
        <trans-unit id="38e2be5fd7d5e892898904110f6fb600a6f2fc5e" translate="yes" xml:space="preserve">
          <source>Constructs Python bytes showing a copy of the raw contents of data memory. The bytes object can be produced in either &amp;lsquo;C&amp;rsquo; or &amp;lsquo;Fortran&amp;rsquo;, or &amp;lsquo;Any&amp;rsquo; order (the default is &amp;lsquo;C&amp;rsquo;-order). &amp;lsquo;Any&amp;rsquo; order means C-order unless the F_CONTIGUOUS flag in the array is set, in which case it means &amp;lsquo;Fortran&amp;rsquo; order.</source>
          <target state="translated">データメモリの生の内容のコピーを示すPythonバイトを構築します。バイトオブジェクトは、「C」、「Fortran」、または「任意」の順序で生成できます（デフォルトは「C」順）。「任意」の順序は、配列のF_CONTIGUOUSフラグが設定されていない限り、C順序を意味します。その場合、「Fortran」順序を意味します。</target>
        </trans-unit>
        <trans-unit id="ced0c9c71d4ab448d256e9755d975eecac83dca4" translate="yes" xml:space="preserve">
          <source>Container customization: (see &lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;Indexing&lt;/a&gt;)</source>
          <target state="translated">コンテナのカスタマイズ：（&lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;インデックス作成を&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="945b5909351c614284e294687fc5eed8d30bdfa8" translate="yes" xml:space="preserve">
          <source>Container for the BitGenerators.</source>
          <target state="translated">BitGenerators のコンテナ。</target>
        </trans-unit>
        <trans-unit id="9518c0118e2383159ff89f0d3a6a9dc8b35e9445" translate="yes" xml:space="preserve">
          <source>Container for the Mersenne Twister pseudo-random number generator.</source>
          <target state="translated">メルセンヌツイスター擬似乱数発生器のコンテナ。</target>
        </trans-unit>
        <trans-unit id="d5e682207eece98b359f1e232839589a5bb83513" translate="yes" xml:space="preserve">
          <source>Container for the Philox (4x64) pseudo-random number generator.</source>
          <target state="translated">Philox (4x64)擬似乱数発生器のコンテナ。</target>
        </trans-unit>
        <trans-unit id="a3a1e2e5587dcb37af6a475783aa40a7e9e982e2" translate="yes" xml:space="preserve">
          <source>Container for the slow Mersenne Twister pseudo-random number generator. Consider using a different BitGenerator with the Generator container instead.</source>
          <target state="translated">遅い Mersenne Twister 疑似乱数ジェネレータ用のコンテナ。代わりに Generator コンテナで別の BitGenerator を使用することを検討してください。</target>
        </trans-unit>
        <trans-unit id="d6d56c0715bcae84fdc288fbfdbc42c1f40a6702" translate="yes" xml:space="preserve">
          <source>Contains the new set of coefficients.</source>
          <target state="translated">係数の新しいセットを含みます。</target>
        </trans-unit>
        <trans-unit id="e416e43f493dc03bd7f45d55965a398e7052a174" translate="yes" xml:space="preserve">
          <source>Contents:</source>
          <target state="translated">Contents:</target>
        </trans-unit>
        <trans-unit id="3643c1a8b97789cf4db3d875dc0365e5ddbc09e5" translate="yes" xml:space="preserve">
          <source>Context management and the &lt;a href=&quot;numpy.nditer.close#numpy.nditer.close&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method appeared in version 1.15.0.</source>
          <target state="translated">コンテキスト管理と&lt;a href=&quot;numpy.nditer.close#numpy.nditer.close&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドはバージョン1.15.0で登場しました。</target>
        </trans-unit>
        <trans-unit id="28ea8c81849521c495649532e08b0b593de2159c" translate="yes" xml:space="preserve">
          <source>Context manager and decorator doing much the same as &lt;code&gt;warnings.catch_warnings&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;warnings.catch_warnings&lt;/code&gt; とほとんど同じように動作するコンテキストマネージャとデコレータ。</target>
        </trans-unit>
        <trans-unit id="5df86c4c3ee2b6d151a9b289e9fec5a79fd29c69" translate="yes" xml:space="preserve">
          <source>Context manager for floating-point error handling.</source>
          <target state="translated">浮動小数点エラー処理のためのコンテキストマネージャ。</target>
        </trans-unit>
        <trans-unit id="bd35c159334bf5d6e2fa5b1e59c4a7083dc1dc6f" translate="yes" xml:space="preserve">
          <source>Context manager for setting print options.</source>
          <target state="translated">印刷オプションを設定するためのコンテキストマネージャー。</target>
        </trans-unit>
        <trans-unit id="e74eade6a152d46f1eb9b2b5ababc0f77f6bb16e" translate="yes" xml:space="preserve">
          <source>Contiguous array of same shape and content as &lt;code&gt;a&lt;/code&gt;, with type &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; if specified.</source>
          <target state="translated">と同じ形状および内容の連続した配列。指定されている場合 &lt;code&gt;a&lt;/code&gt; 、&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;タイプ。</target>
        </trans-unit>
        <trans-unit id="053873361447a3f60bca70c8480df2214f748216" translate="yes" xml:space="preserve">
          <source>Contrary to &lt;a href=&quot;numpy.asanyarray#numpy.asanyarray&quot;&gt;&lt;code&gt;asanyarray&lt;/code&gt;&lt;/a&gt;, ndarray subclasses are not passed through:</source>
          <target state="translated">&lt;a href=&quot;numpy.asanyarray#numpy.asanyarray&quot;&gt; &lt;code&gt;asanyarray&lt;/code&gt; &lt;/a&gt;とは異なり、ndarrayサブクラスは渡されません。</target>
        </trans-unit>
        <trans-unit id="912ab78ea9e7be41b10dbd4b2c4778f1938464e6" translate="yes" xml:space="preserve">
          <source>Contributing to NumPy</source>
          <target state="translated">NumPyへの貢献</target>
        </trans-unit>
        <trans-unit id="a60a223c98b2c36522f0b7f89f57ae14e144678a" translate="yes" xml:space="preserve">
          <source>Contributors</source>
          <target state="translated">Contributors</target>
        </trans-unit>
        <trans-unit id="e55585a604c550513c3afa02c0ebd3dbb5250133" translate="yes" xml:space="preserve">
          <source>Contributors to maintenance/1.11.3</source>
          <target state="translated">maintenance/1.11.3への投稿者</target>
        </trans-unit>
        <trans-unit id="1fb6ba6e1303f6e5416d2c67796f8de91feba760" translate="yes" xml:space="preserve">
          <source>Controlling Iteration Order</source>
          <target state="translated">反復順序の制御</target>
        </trans-unit>
        <trans-unit id="3381fbfd7109d41fe7b80cebebf3f59427289be0" translate="yes" xml:space="preserve">
          <source>Controls if intermediate optimization should occur. No optimization will occur if False and True will default to the &amp;lsquo;greedy&amp;rsquo; algorithm. Also accepts an explicit contraction list from the &lt;code&gt;np.einsum_path&lt;/code&gt; function. See &lt;code&gt;np.einsum_path&lt;/code&gt; for more details. Defaults to False.</source>
          <target state="translated">中間最適化を行うかどうかを制御します。FalseおよびTrueのデフォルトが「貪欲」アルゴリズムである場合、最適化は行われません。 &lt;code&gt;np.einsum_path&lt;/code&gt; 関数からの明示的な短縮リストも受け入れます。詳細については、 &lt;code&gt;np.einsum_path&lt;/code&gt; を参照してください。デフォルトはFalseです。</target>
        </trans-unit>
        <trans-unit id="962dce34fa4c991d8761b74453473e2047eb1a3f" translate="yes" xml:space="preserve">
          <source>Controls post-processing trimming of trailing digits, as follows:</source>
          <target state="translated">処理後の後続桁のトリミングを以下のように制御します。</target>
        </trans-unit>
        <trans-unit id="d93cc903a5f85a76e394a8f4bb04305a43ea383d" translate="yes" xml:space="preserve">
          <source>Controls printing of the sign of floating-point types. If &amp;lsquo;+&amp;rsquo;, always print the sign of positive values. If &amp;lsquo; &amp;lsquo;, always prints a space (whitespace character) in the sign position of positive values. If &amp;lsquo;-&amp;lsquo;, omit the sign character of positive values. (default &amp;lsquo;-&amp;lsquo;)</source>
          <target state="translated">浮動小数点型の符号の出力を制御します。「+」の場合、常に正の値の符号を出力します。''の場合、常に正の値の符号位置にスペース（空白文字）を出力します。「-」の場合、正の値の符号文字を省略します。（デフォルト '-'）</target>
        </trans-unit>
        <trans-unit id="7e4e4469d00d85c02bbeabd4c04ac5324f9efb77" translate="yes" xml:space="preserve">
          <source>Controls printing of the sign of floating-point types. If &amp;lsquo;+&amp;rsquo;, always print the sign of positive values. If &amp;lsquo; &amp;lsquo;, always prints a space (whitespace character) in the sign position of positive values. If &amp;lsquo;-&amp;lsquo;, omit the sign character of positive values. Defaults to &lt;code&gt;numpy.get_printoptions()['sign']&lt;/code&gt;.</source>
          <target state="translated">浮動小数点型の符号の印刷を制御します。「+」の場合、常に正の値の符号を出力します。''の場合、常に正の値の符号位置にスペース（空白文字）を出力します。「-」の場合、正の値の符号文字を省略します。デフォルトは &lt;code&gt;numpy.get_printoptions()['sign']&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="841208ff2e453a067133b334501582310ba65939" translate="yes" xml:space="preserve">
          <source>Controls the interpretation of the &lt;code&gt;precision&lt;/code&gt; option for floating-point types. Can take the following values (default maxprec_equal):</source>
          <target state="translated">浮動小数点型の &lt;code&gt;precision&lt;/code&gt; オプションの解釈を制御します。以下の値を取ることができます（デフォルトはmaxprec_equal）。</target>
        </trans-unit>
        <trans-unit id="bd5b6d8587399226c1239e4675c6dc1ac5b81996" translate="yes" xml:space="preserve">
          <source>Controls the interpretation of the &lt;code&gt;precision&lt;/code&gt; option for floating-point types. Defaults to &lt;code&gt;numpy.get_printoptions()['floatmode']&lt;/code&gt;. Can take the following values:</source>
          <target state="translated">浮動小数点型の &lt;code&gt;precision&lt;/code&gt; オプションの解釈を制御します。デフォルトは &lt;code&gt;numpy.get_printoptions()['floatmode']&lt;/code&gt; です。以下の値を取ることができます。</target>
        </trans-unit>
        <trans-unit id="053fc22cde7115d581a6dae5bcdbdffe93e520ff" translate="yes" xml:space="preserve">
          <source>Controls the iteration order. &amp;lsquo;C&amp;rsquo; means C order, &amp;lsquo;F&amp;rsquo; means Fortran order, &amp;lsquo;A&amp;rsquo; means &amp;lsquo;F&amp;rsquo; order if all the arrays are Fortran contiguous, &amp;lsquo;C&amp;rsquo; order otherwise, and &amp;lsquo;K&amp;rsquo; means as close to the order the array elements appear in memory as possible. This also affects the element memory order of &lt;code&gt;allocate&lt;/code&gt; operands, as they are allocated to be compatible with iteration order. Default is &amp;lsquo;K&amp;rsquo;.</source>
          <target state="translated">反復順序を制御します。「C」はC順序、「F」はFortran順序、「A」はすべての配列がFortran連続である場合は「F」順序、「C」順序はそれ以外の場合、「K」は配列要素が表示される順序に近いことを意味します可能な限りメモリに。繰り返し順序と互換性があるように &lt;code&gt;allocate&lt;/code&gt; ため、これは割り当てオペランドの要素メモリ順序にも影響します。デフォルトは「K」です。</target>
        </trans-unit>
        <trans-unit id="e9576b535389b3dbd06f435cca5164180f9065da" translate="yes" xml:space="preserve">
          <source>Controls the memory layout of the copy. &amp;lsquo;C&amp;rsquo; means C-order, &amp;lsquo;F&amp;rsquo; means F-order, &amp;lsquo;A&amp;rsquo; means &amp;lsquo;F&amp;rsquo; if &lt;code&gt;a&lt;/code&gt; is Fortran contiguous, &amp;lsquo;C&amp;rsquo; otherwise. &amp;lsquo;K&amp;rsquo; means match the layout of &lt;code&gt;a&lt;/code&gt; as closely as possible. (Note that this function and &lt;a href=&quot;numpy.copy#numpy.copy&quot;&gt;&lt;code&gt;numpy.copy&lt;/code&gt;&lt;/a&gt; are very similar, but have different default values for their order= arguments.)</source>
          <target state="translated">コピーのメモリレイアウトを制御します。「C」はCオーダーを意味し、「F」はFオーダーを意味し、「A」は &lt;code&gt;a&lt;/code&gt; がFortran連続である場合は「F」を意味し、それ以外の場合は「C」を意味します。「K」は、 &lt;code&gt;a&lt;/code&gt; のレイアウトにできるだけ一致することを意味します。（この関数と&lt;a href=&quot;numpy.copy#numpy.copy&quot;&gt; &lt;code&gt;numpy.copy&lt;/code&gt; &lt;/a&gt;はよく似ていますが、order =引数のデフォルト値が異なることに注意してください。）</target>
        </trans-unit>
        <trans-unit id="0444f926d86651cc3dd5611e09e50dadc271143c" translate="yes" xml:space="preserve">
          <source>Controls the memory layout of the copy. &amp;lsquo;C&amp;rsquo; means C-order, &amp;lsquo;F&amp;rsquo; means F-order, &amp;lsquo;A&amp;rsquo; means &amp;lsquo;F&amp;rsquo; if &lt;code&gt;a&lt;/code&gt; is Fortran contiguous, &amp;lsquo;C&amp;rsquo; otherwise. &amp;lsquo;K&amp;rsquo; means match the layout of &lt;code&gt;a&lt;/code&gt; as closely as possible. (Note that this function and &lt;a href=&quot;numpy.ndarray.copy#numpy.ndarray.copy&quot;&gt;&lt;code&gt;ndarray.copy&lt;/code&gt;&lt;/a&gt; are very similar, but have different default values for their order= arguments.)</source>
          <target state="translated">コピーのメモリレイアウトを制御します。「C」はCオーダーを意味し、「F」はFオーダーを意味し、「A」は &lt;code&gt;a&lt;/code&gt; がFortran連続である場合は「F」を意味し、それ以外の場合は「C」を意味します。「K」は、 &lt;code&gt;a&lt;/code&gt; のレイアウトにできるだけ一致することを意味します。（この関数と&lt;a href=&quot;numpy.ndarray.copy#numpy.ndarray.copy&quot;&gt; &lt;code&gt;ndarray.copy&lt;/code&gt; &lt;/a&gt;はよく似ていますが、order =引数のデフォルト値が異なります。）</target>
        </trans-unit>
        <trans-unit id="87b34e8b0f8ba396e7a4855d6f683c663aa9e3a5" translate="yes" xml:space="preserve">
          <source>Controls the memory layout of the output. &amp;lsquo;C&amp;rsquo; means it should be C contiguous. &amp;lsquo;F&amp;rsquo; means it should be Fortran contiguous, &amp;lsquo;A&amp;rsquo; means it should be &amp;lsquo;F&amp;rsquo; if the inputs are all &amp;lsquo;F&amp;rsquo;, &amp;lsquo;C&amp;rsquo; otherwise. &amp;lsquo;K&amp;rsquo; means it should be as close to the layout as the inputs as is possible, including arbitrarily permuted axes. Default is &amp;lsquo;K&amp;rsquo;.</source>
          <target state="translated">出力のメモリレイアウトを制御します。「C」は、C隣接でなければならないことを意味します。'F'はFortran隣接でなければならず、 'A'は入力がすべて 'F'の場合は 'F'、それ以外の場合は 'C'であることを意味します。'K'は、任意に置換された軸を含め、入力にできるだけ近いレイアウトにする必要があることを意味します。デフォルトは「K」です。</target>
        </trans-unit>
        <trans-unit id="914761ad3f3f74151dc575c678b27db7c8a59e79" translate="yes" xml:space="preserve">
          <source>Controls the memory layout order of the result. &amp;lsquo;C&amp;rsquo; means C order, &amp;lsquo;F&amp;rsquo; means Fortran order, &amp;lsquo;A&amp;rsquo; means &amp;lsquo;F&amp;rsquo; order if all the arrays are Fortran contiguous, &amp;lsquo;C&amp;rsquo; order otherwise, and &amp;lsquo;K&amp;rsquo; means as close to the order the array elements appear in memory as possible. Default is &amp;lsquo;K&amp;rsquo;.</source>
          <target state="translated">結果のメモリレイアウトの順序を制御します。「C」はC順序、「F」はFortran順序、「A」はすべての配列がFortran連続である場合は「F」順序、「C」順序はそれ以外の場合、「K」は配列要素が表示される順序に近いことを意味します可能な限りメモリに。デフォルトは「K」です。</target>
        </trans-unit>
        <trans-unit id="2bd2cad71e7b306729d33e9e77734a57f4c762bf" translate="yes" xml:space="preserve">
          <source>Controls what kind of data casting may occur when copying.</source>
          <target state="translated">コピー時にどのようなデータキャストが発生するかを制御します。</target>
        </trans-unit>
        <trans-unit id="5ffcf55707605cdac52bac56460f15163fa86687" translate="yes" xml:space="preserve">
          <source>Controls what kind of data casting may occur when making a copy or buffering. Setting this to &amp;lsquo;unsafe&amp;rsquo; is not recommended, as it can adversely affect accumulations.</source>
          <target state="translated">コピーまたはバッファリングを行うときに発生する可能性があるデータキャストの種類を制御します。累積に悪影響を与える可能性があるため、これを「安全でない」に設定することはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="fdeee7c21c5f079b8cf1347957a464129f951cd7" translate="yes" xml:space="preserve">
          <source>Controls what kind of data casting may occur.</source>
          <target state="translated">どのようなデータキャストが発生するかを制御します。</target>
        </trans-unit>
        <trans-unit id="b10dae3006bf56317c0969243da6568e60665a36" translate="yes" xml:space="preserve">
          <source>Controls what kind of data casting may occur. Defaults to &amp;lsquo;unsafe&amp;rsquo; for backwards compatibility.</source>
          <target state="translated">どのようなデータキャストが発生するかを制御します。下位互換性のために、デフォルトは「安全でない」です。</target>
        </trans-unit>
        <trans-unit id="ef9a6184cd0365349f0a3f3a85fd00227eeb5110" translate="yes" xml:space="preserve">
          <source>Controls what kind of data casting may occur. Setting this to &amp;lsquo;unsafe&amp;rsquo; is not recommended, as it can adversely affect accumulations.</source>
          <target state="translated">どのようなデータキャストが発生するかを制御します。累積に悪影響を与える可能性があるため、これを「安全でない」に設定することはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="a133c6e505fbc7f8c166ced5ad4ae7c59dc57fa0" translate="yes" xml:space="preserve">
          <source>Convenience attributes</source>
          <target state="translated">利便性の属性</target>
        </trans-unit>
        <trans-unit id="22a76f139a596a6451b3c663e17254b67d893014" translate="yes" xml:space="preserve">
          <source>Convenience class</source>
          <target state="translated">コンビニクラス</target>
        </trans-unit>
        <trans-unit id="5b35dc829b5e273f3ad96397576fa3e7d4023d78" translate="yes" xml:space="preserve">
          <source>Convenience constructor</source>
          <target state="translated">コンストラクタ</target>
        </trans-unit>
        <trans-unit id="d2fb0b32a197b1bc1c3268b6ce70b10c60d0e61b" translate="yes" xml:space="preserve">
          <source>Convenience function that accepts dimensions as input, e.g., &lt;code&gt;rand(2,2)&lt;/code&gt; would generate a 2-by-2 array of floats, uniformly distributed over &lt;code&gt;[0, 1)&lt;/code&gt;.</source>
          <target state="translated">次元を入力として受け入れる便利な関数。たとえば、 &lt;code&gt;rand(2,2)&lt;/code&gt; は、 &lt;code&gt;[0, 1)&lt;/code&gt; 均一に分散された2行2列の浮動小数点数の配列を生成します。</target>
        </trans-unit>
        <trans-unit id="a01257e80e28e1d2f9b1bc8f0a212e62ad583d28" translate="yes" xml:space="preserve">
          <source>Conventional C libraries (installed through &lt;code&gt;add_library&lt;/code&gt;) are not installed, and are just used during the build (they are statically linked). An installable C library is a pure C library, which does not depend on the python C runtime, and is installed such that it may be used by third-party packages. To build and install the C library, you just use the method &lt;code&gt;add_installed_library&lt;/code&gt; instead of &lt;code&gt;add_library&lt;/code&gt;, which takes the same arguments except for an additional &lt;code&gt;install_dir&lt;/code&gt; argument:</source>
          <target state="translated">従来のCライブラリ（ &lt;code&gt;add_library&lt;/code&gt; を介してインストールされる）はインストールされず、ビルド時に使用されるだけです（静的にリンクされます）。インストール可能なCライブラリは、Python Cランタイムに依存しない純粋なCライブラリであり、サードパーティのパッケージで使用できるようにインストールされます。Cライブラリをビルドしてインストールするには、 &lt;code&gt;add_library&lt;/code&gt; の代わりにメソッド &lt;code&gt;add_installed_library&lt;/code&gt; を使用するだけで、追加の &lt;code&gt;install_dir&lt;/code&gt; 引数を除いて同じ引数を取ります。</target>
        </trans-unit>
        <trans-unit id="61856b8c17a4ff32006fe4b7dcc6f96f253b2120" translate="yes" xml:space="preserve">
          <source>Conventions</source>
          <target state="translated">Conventions</target>
        </trans-unit>
        <trans-unit id="9151f8433f795cb0f0b5b6743aeb7de77ec49f00" translate="yes" xml:space="preserve">
          <source>Conversion</source>
          <target state="translated">Conversion</target>
        </trans-unit>
        <trans-unit id="a17fb47b245c5cba5d75f315922fb16fc043d307" translate="yes" xml:space="preserve">
          <source>Conversion Utilities</source>
          <target state="translated">変換ユーティリティ</target>
        </trans-unit>
        <trans-unit id="2ca5120be678740ebd6b346bd8c35bf444fe811c" translate="yes" xml:space="preserve">
          <source>Conversion between domains and class types can result in numerically ill defined series.</source>
          <target state="translated">ドメインとクラスタイプ間の変換は、数値的に定義されていない系列になることがあります。</target>
        </trans-unit>
        <trans-unit id="0d49759ae01851745446d678272b48f3f7fd7110" translate="yes" xml:space="preserve">
          <source>Conversion from other Python structures (e.g., lists, tuples)</source>
          <target state="translated">他の Python 構造体からの変換 (リスト、タプルなど)</target>
        </trans-unit>
        <trans-unit id="164fb2dcb28e63dc48fff2c40f2e5257de488afc" translate="yes" xml:space="preserve">
          <source>Conversion of &lt;code&gt;.src&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;.src&lt;/code&gt; ファイルの変換</target>
        </trans-unit>
        <trans-unit id="e986bec62e3e7ecaf96128a9c0f40c8e67846882" translate="yes" xml:space="preserve">
          <source>Conversion of &lt;code&gt;.src&lt;/code&gt; files using Templates</source>
          <target state="translated">テンプレートを使用した &lt;code&gt;.src&lt;/code&gt; ファイルの変換</target>
        </trans-unit>
        <trans-unit id="da46a4c4a17ed3ea61b3092dc001141780833a19" translate="yes" xml:space="preserve">
          <source>Conversion operations</source>
          <target state="translated">変換操作</target>
        </trans-unit>
        <trans-unit id="10a7c46d2fe217029ff23b380edb9248c804a468" translate="yes" xml:space="preserve">
          <source>Conversion; the operations &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;complex&lt;/code&gt;. . They work only on arrays that have one element in them and return the appropriate scalar.</source>
          <target state="translated">変換; 演算 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、および &lt;code&gt;complex&lt;/code&gt; 。。これらは、1つの要素を含む配列でのみ機能し、適切なスカラーを返します。</target>
        </trans-unit>
        <trans-unit id="b08eaadf77cfdba7944ddcaf69eee5a983b74af3" translate="yes" xml:space="preserve">
          <source>Conversions</source>
          <target state="translated">Conversions</target>
        </trans-unit>
        <trans-unit id="e5714517e2db28d492b0b79b54a5ada5c2a1521f" translate="yes" xml:space="preserve">
          <source>Conversions between types can be useful, but it is &lt;em&gt;not&lt;/em&gt; recommended for routine use. The loss of numerical precision in passing from a Chebyshev series of degree 50 to a Polynomial series of the same degree can make the results of numerical evaluation essentially random.</source>
          <target state="translated">型間の変換は便利ですが、日常的な使用に&lt;em&gt;は&lt;/em&gt;お勧め&lt;em&gt;できません&lt;/em&gt;。次数50のチェビシェフ級数から同じ次数の多項式級数に渡すときに数値の精度が失われると、数値評価の結果が本質的にランダムになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="03825a0528753ecd6c491dd8eedf420a0d9f4294" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;bytes&lt;/code&gt; in the encoding used by a subprocess into a filesystem-appropriate &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">サブプロセスが使用するエンコーディングの &lt;code&gt;bytes&lt;/code&gt; をファイルシステムに適した &lt;code&gt;str&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="6c7bd2e378946ee0f1c802ac20f6bf36a9ba9143" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;input&lt;/code&gt; to a Fortran contiguous &lt;code&gt;PyArrayObject*&lt;/code&gt; of the specified type. If the input object is not a Fortran contiguous &lt;code&gt;PyArrayObject*&lt;/code&gt;, a new one will be created and the new object flag will be set.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; を、指定されたタイプのFortran連続 &lt;code&gt;PyArrayObject*&lt;/code&gt; に変換します。入力オブジェクトがFortranの隣接する &lt;code&gt;PyArrayObject*&lt;/code&gt; ではない場合、新しいオブジェクトが作成され、新しいオブジェクトフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="df4f3ea05c4d5f97fc6c549144dbe49c3b958747" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;input&lt;/code&gt; to a NumPy array with the given &lt;code&gt;typecode&lt;/code&gt;. On success, return a valid &lt;code&gt;PyArrayObject*&lt;/code&gt; with the correct type. On failure, the Python error string will be set and the routine returns &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; を指定された &lt;code&gt;typecode&lt;/code&gt; の NumPy配列に変換します。成功し &lt;code&gt;PyArrayObject*&lt;/code&gt; 、正しい型の有効なPyArrayObject *を返します。失敗すると、Pythonエラー文字列が設定され、ルーチンは &lt;code&gt;NULL&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="57614032e1d034b46eca1c59ddd0f6d15bf36d4e" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;input&lt;/code&gt; to a contiguous &lt;code&gt;PyArrayObject*&lt;/code&gt; of the specified type. If the input object is not a contiguous &lt;code&gt;PyArrayObject*&lt;/code&gt;, a new one will be created and the new object flag will be set.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; を指定されたタイプの連続した &lt;code&gt;PyArrayObject*&lt;/code&gt; に変換します。入力オブジェクトが連続した &lt;code&gt;PyArrayObject*&lt;/code&gt; ではない場合、新しいオブジェクトが作成され、新しいオブジェクトフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="23cf93d55636e18fb2785cd6878809bff7d65f4b" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;number&lt;/code&gt; to the &lt;code&gt;base&lt;/code&gt; number system. The valid range is 2-36, the default value is 2.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; を &lt;code&gt;base&lt;/code&gt; 系に変換します。有効な範囲は2〜36で、デフォルト値は2です。</target>
        </trans-unit>
        <trans-unit id="f55fe4032611ab151ac35085a484ba4bedcc1c10" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;obj&lt;/code&gt; to an ndarray. The argument can be any nested sequence or object that exports the array interface. This is a macro form of &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; using &lt;code&gt;NULL&lt;/code&gt;, 0, 0, 0 for the other arguments. Your code must be able to handle any data-type descriptor and any combination of data-flags to use this macro.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; をndarrayに変換します。引数は、配列インターフェースをエクスポートするネストされたシーケンスまたはオブジェクトです。これは、他の引数に &lt;code&gt;NULL&lt;/code&gt; 、&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt;を使用するPyArray_FromAnyのマクロ形式です。このマクロを使用するには、コードで任意のデータ型記述子とデータフラグの任意の組み合わせを処理できる必要があります。</target>
        </trans-unit>
        <trans-unit id="03c66978e87b5a27b275061c368f5a6bcf66d726" translate="yes" xml:space="preserve">
          <source>Convert Python strings into one of &lt;a href=&quot;#c.NPY_QUICKSORT&quot;&gt;&lt;code&gt;NPY_QUICKSORT&lt;/code&gt;&lt;/a&gt; (starts with &amp;lsquo;q&amp;rsquo; or &amp;lsquo;Q&amp;rsquo;), &lt;a href=&quot;#c.NPY_HEAPSORT&quot;&gt;&lt;code&gt;NPY_HEAPSORT&lt;/code&gt;&lt;/a&gt; (starts with &amp;lsquo;h&amp;rsquo; or &amp;lsquo;H&amp;rsquo;), &lt;a href=&quot;#c.NPY_MERGESORT&quot;&gt;&lt;code&gt;NPY_MERGESORT&lt;/code&gt;&lt;/a&gt; (starts with &amp;lsquo;m&amp;rsquo; or &amp;lsquo;M&amp;rsquo;) or &lt;a href=&quot;#c.NPY_STABLESORT&quot;&gt;&lt;code&gt;NPY_STABLESORT&lt;/code&gt;&lt;/a&gt; (starts with &amp;lsquo;t&amp;rsquo; or &amp;lsquo;T&amp;rsquo;). &lt;a href=&quot;#c.NPY_MERGESORT&quot;&gt;&lt;code&gt;NPY_MERGESORT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c.NPY_STABLESORT&quot;&gt;&lt;code&gt;NPY_STABLESORT&lt;/code&gt;&lt;/a&gt; are aliased to each other for backwards compatibility and may refer to one of several stable sorting algorithms depending on the data type.</source>
          <target state="translated">Python文字列を&lt;a href=&quot;#c.NPY_QUICKSORT&quot;&gt; &lt;code&gt;NPY_QUICKSORT&lt;/code&gt; &lt;/a&gt;（「q」または「Q」で始まる）、&lt;a href=&quot;#c.NPY_HEAPSORT&quot;&gt; &lt;code&gt;NPY_HEAPSORT&lt;/code&gt; &lt;/a&gt;（「h」または「H」で始まる）、&lt;a href=&quot;#c.NPY_MERGESORT&quot;&gt; &lt;code&gt;NPY_MERGESORT&lt;/code&gt; &lt;/a&gt;（「m」または「M」で始まる）、または&lt;a href=&quot;#c.NPY_STABLESORT&quot;&gt; &lt;code&gt;NPY_STABLESORT&lt;/code&gt; &lt;/a&gt;（「」で始まる）のいずれかに変換しますt 'または' T '）。&lt;a href=&quot;#c.NPY_MERGESORT&quot;&gt; &lt;code&gt;NPY_MERGESORT&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#c.NPY_STABLESORT&quot;&gt; &lt;code&gt;NPY_STABLESORT&lt;/code&gt; &lt;/a&gt;は、下位互換性のために相互にエイリアス化されており、データ型に応じていくつかの安定したソートアルゴリズムの1つを参照する場合があります。</target>
        </trans-unit>
        <trans-unit id="e59da10540b8b045df108e94cbefc0a270a68b5c" translate="yes" xml:space="preserve">
          <source>Convert Python strings into one of &lt;code&gt;NPY_QUICKSORT&lt;/code&gt; (starts with &amp;lsquo;q&amp;rsquo; or &amp;lsquo;Q&amp;rsquo;), &lt;code&gt;NPY_HEAPSORT&lt;/code&gt; (starts with &amp;lsquo;h&amp;rsquo; or &amp;lsquo;H&amp;rsquo;), &lt;code&gt;NPY_MERGESORT&lt;/code&gt; (starts with &amp;lsquo;m&amp;rsquo; or &amp;lsquo;M&amp;rsquo;) or &lt;code&gt;NPY_STABLESORT&lt;/code&gt; (starts with &amp;lsquo;t&amp;rsquo; or &amp;lsquo;T&amp;rsquo;). &lt;code&gt;NPY_MERGESORT&lt;/code&gt; and &lt;code&gt;NPY_STABLESORT&lt;/code&gt; are aliased to each other for backwards compatibility and may refer to one of several stable sorting algorithms depending on the data type.</source>
          <target state="translated">Python文字列を &lt;code&gt;NPY_QUICKSORT&lt;/code&gt; （ 'q'または 'Q'で始まる）、 &lt;code&gt;NPY_HEAPSORT&lt;/code&gt; （ 'h'または 'H'で始まる）、 &lt;code&gt;NPY_MERGESORT&lt;/code&gt; （ 'm'または 'M'で始まる）または &lt;code&gt;NPY_STABLESORT&lt;/code&gt; （ 'で始まる）のいずれかに変換します。 t 'または' T '）。 &lt;code&gt;NPY_MERGESORT&lt;/code&gt; と &lt;code&gt;NPY_STABLESORT&lt;/code&gt; は、下位互換性のために相互にエイリアスされ、データ型に応じていくつかの安定したソートアルゴリズムの1つを参照する場合があります。</target>
        </trans-unit>
        <trans-unit id="3306f9c5860e043187dbc26b17cfa1986c3541ca" translate="yes" xml:space="preserve">
          <source>Convert Python strings into one of &lt;code&gt;NPY_SEARCHLEFT&lt;/code&gt; (starts with &amp;lsquo;l&amp;rsquo; or &amp;lsquo;L&amp;rsquo;), or &lt;code&gt;NPY_SEARCHRIGHT&lt;/code&gt; (starts with &amp;lsquo;r&amp;rsquo; or &amp;lsquo;R&amp;rsquo;).</source>
          <target state="translated">Python文字列を &lt;code&gt;NPY_SEARCHLEFT&lt;/code&gt; （ 'l'または 'L'で始まる）、または &lt;code&gt;NPY_SEARCHRIGHT&lt;/code&gt; （ 'r'または 'R'で始まる）のいずれかに変換します。</target>
        </trans-unit>
        <trans-unit id="9665692749eb5f8271a8ef2c2766c29e0fe1a31a" translate="yes" xml:space="preserve">
          <source>Convert Python strings into the corresponding byte-order character: &amp;lsquo;&amp;gt;&amp;rsquo;, &amp;lsquo;&amp;lt;&amp;rsquo;, &amp;lsquo;s&amp;rsquo;, &amp;lsquo;=&amp;rsquo;, or &amp;lsquo;|&amp;rsquo;.</source>
          <target state="translated">Python文字列を対応するバイト順文字に変換します： '&amp;gt;'、 '&amp;lt;'、 's'、 '='、または '|'。</target>
        </trans-unit>
        <trans-unit id="0249cb69b2094a04bbecaea9fed7d306da9e809a" translate="yes" xml:space="preserve">
          <source>Convert a /-separated pathname to one using the OS&amp;rsquo;s path separator.</source>
          <target state="translated">OSのパス区切り文字を使用して、/で区切られたパス名を1つに変換します。</target>
        </trans-unit>
        <trans-unit id="bbbde2984253b6c19463182f3ab3e49eacf0add1" translate="yes" xml:space="preserve">
          <source>Convert a Chebyshev series to a polynomial.</source>
          <target state="translated">チェビシェフ級数を多項式に変換します。</target>
        </trans-unit>
        <trans-unit id="3b725963ae7233b84da188095a5261995f877a10" translate="yes" xml:space="preserve">
          <source>Convert a Hermite series to a polynomial.</source>
          <target state="translated">エルミート級数を多項式に変換します。</target>
        </trans-unit>
        <trans-unit id="c5774d379d320ad666e23c93d53c895b9282a781" translate="yes" xml:space="preserve">
          <source>Convert a Laguerre series to a polynomial.</source>
          <target state="translated">ラゲール級数を多項式に変換します。</target>
        </trans-unit>
        <trans-unit id="c0cba427e743f4d7f6bd18952bc7a604ed734f1a" translate="yes" xml:space="preserve">
          <source>Convert a Legendre series to a polynomial.</source>
          <target state="translated">レジェンドレ級数を多項式に変換します。</target>
        </trans-unit>
        <trans-unit id="7303080b96152a0bf0712c8711af50deecda280f" translate="yes" xml:space="preserve">
          <source>Convert a Python object, &lt;em&gt;obj&lt;/em&gt;, representing an axis argument to the proper value for passing to the functions that take an integer axis. Specifically, if &lt;em&gt;obj&lt;/em&gt; is None, &lt;em&gt;axis&lt;/em&gt; is set to &lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt;&lt;code&gt;NPY_MAXDIMS&lt;/code&gt;&lt;/a&gt; which is interpreted correctly by the C-API functions that take axis arguments.</source>
          <target state="translated">軸引数を表すPythonオブジェクト&lt;em&gt;obj&lt;/em&gt;を、整数軸を取る関数に渡すための適切な値に変換します。具体的には、&lt;em&gt;obj&lt;/em&gt;がNoneの場合、&lt;em&gt;axis&lt;/em&gt;は&lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt; &lt;code&gt;NPY_MAXDIMS&lt;/code&gt; に&lt;/a&gt;設定されます。これは、軸引数を取るC-API関数によって正しく解釈されます。</target>
        </trans-unit>
        <trans-unit id="cb9724a7e14228c2698abcf68b1a251a0ae3b8f5" translate="yes" xml:space="preserve">
          <source>Convert a degree array to radians</source>
          <target state="translated">次数配列をラジアンに変換します.</target>
        </trans-unit>
        <trans-unit id="a5c1e0427139c907d167379333f020dfcf76dbc2" translate="yes" xml:space="preserve">
          <source>Convert a dtype into a ctypes type.</source>
          <target state="translated">dtypeをctypes型に変換します。</target>
        </trans-unit>
        <trans-unit id="04cea7e04fb2eca83318942c92f1c07b960f13bf" translate="yes" xml:space="preserve">
          <source>Convert a flat index into an index tuple.</source>
          <target state="translated">フラットインデックスをインデックスタプルに変換します。</target>
        </trans-unit>
        <trans-unit id="608694c52c4ebed3a5e39984190479f5e8a306e1" translate="yes" xml:space="preserve">
          <source>Convert a list into an array. If all elements are finite &lt;code&gt;asarray_chkfinite&lt;/code&gt; is identical to &lt;code&gt;asarray&lt;/code&gt;.</source>
          <target state="translated">リストを配列に変換します。すべての要素が有限である場合 &lt;code&gt;asarray_chkfinite&lt;/code&gt; は同じです &lt;code&gt;asarray&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c03ed6ac231e004466351d76fc80aa6d480fc3b7" translate="yes" xml:space="preserve">
          <source>Convert a list into an array:</source>
          <target state="translated">リストを配列に変換します。</target>
        </trans-unit>
        <trans-unit id="9c374ac29e69d14674f6d6142f266b0eef36664b" translate="yes" xml:space="preserve">
          <source>Convert a polynomial to a Chebyshev series.</source>
          <target state="translated">多項式をチェビシェフ級数に変換します。</target>
        </trans-unit>
        <trans-unit id="b5c9ed7a8b3e04ef89c09d23b7d0d8b444f0ef50" translate="yes" xml:space="preserve">
          <source>Convert a polynomial to a Hermite series.</source>
          <target state="translated">多項式をエルミート級数に変換します。</target>
        </trans-unit>
        <trans-unit id="4e3ec08396dbbd66882318c251a298df01079281" translate="yes" xml:space="preserve">
          <source>Convert a polynomial to a Laguerre series.</source>
          <target state="translated">多項式をラゲール級数に変換します。</target>
        </trans-unit>
        <trans-unit id="04c048566837ee3c2a27ff8795d4c53f80b84281" translate="yes" xml:space="preserve">
          <source>Convert a polynomial to a Legendre series.</source>
          <target state="translated">多項式をレジェンドレ級数に変換します。</target>
        </trans-unit>
        <trans-unit id="030db426d65b1085bdfe94fd49af9bb5148d5b11" translate="yes" xml:space="preserve">
          <source>Convert a radian array to degrees</source>
          <target state="translated">ラジアン配列を度数に変換する</target>
        </trans-unit>
        <trans-unit id="1fe8f7480d0d47cc60a5977befc1bf0fb1c97374" translate="yes" xml:space="preserve">
          <source>Convert a sequence of Python objects contained in &lt;em&gt;op&lt;/em&gt; to an array of ndarrays each having the same data type. The type is selected based on the typenumber (larger type number is chosen over a smaller one) ignoring objects that are only scalars. The length of the sequence is returned in &lt;em&gt;n&lt;/em&gt;, and an &lt;em&gt;n&lt;/em&gt; -length array of &lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject&lt;/code&gt;&lt;/a&gt; pointers is the return value (or &lt;code&gt;NULL&lt;/code&gt; if an error occurs). The returned array must be freed by the caller of this routine (using &lt;a href=&quot;#c.PyDataMem_FREE&quot;&gt;&lt;code&gt;PyDataMem_FREE&lt;/code&gt;&lt;/a&gt; ) and all the array objects in it &lt;code&gt;DECREF&lt;/code&gt; &amp;lsquo;d or a memory-leak will occur. The example template-code below shows a typically usage:</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;に含まれるPythonオブジェクトのシーケンスを、それぞれが同じデータ型を持つndarrayの配列に変換します。タイプはtypenumberに基づいて選択されます（小さいタイプよりも大きいタイプ番号が選択されます）。スカラーのみのオブジェクトは無視されます。シーケンスの長さは&lt;em&gt;n&lt;/em&gt;で返され、&lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject&lt;/code&gt; &lt;/a&gt;ポインターの&lt;em&gt;n&lt;/em&gt;長の配列が戻り値です（またはエラーが発生した場合は &lt;code&gt;NULL&lt;/code&gt; ）。返された配列は、このルーチンの呼び出し元が（&lt;a href=&quot;#c.PyDataMem_FREE&quot;&gt; &lt;code&gt;PyDataMem_FREE&lt;/code&gt; &lt;/a&gt;を使用して）解放する必要があり、その中のすべての配列オブジェクトが &lt;code&gt;DECREF&lt;/code&gt; されているか、メモリリークが発生します。以下のテンプレートコードの例は、一般的な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="69e79437d732a587d606f77d7f2799ba6ddc4e29" translate="yes" xml:space="preserve">
          <source>Convert a sequence of Python objects contained in &lt;em&gt;op&lt;/em&gt; to an array of ndarrays each having the same data type. The type is selected in the same way as &lt;code&gt;PyArray_ResultType&lt;/code&gt;. The length of the sequence is returned in &lt;em&gt;n&lt;/em&gt;, and an &lt;em&gt;n&lt;/em&gt; -length array of &lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject&lt;/code&gt;&lt;/a&gt; pointers is the return value (or &lt;code&gt;NULL&lt;/code&gt; if an error occurs). The returned array must be freed by the caller of this routine (using &lt;a href=&quot;#c.PyDataMem_FREE&quot;&gt;&lt;code&gt;PyDataMem_FREE&lt;/code&gt;&lt;/a&gt; ) and all the array objects in it &lt;code&gt;DECREF&lt;/code&gt; &amp;lsquo;d or a memory-leak will occur. The example template-code below shows a typically usage:</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;に含まれるPythonオブジェクトのシーケンスを、それぞれが同じデータ型を持つndarrayの配列に変換します。タイプは、 &lt;code&gt;PyArray_ResultType&lt;/code&gt; と同じ方法で選択されます。シーケンスの長さは&lt;em&gt;n&lt;/em&gt;で返され、&lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject&lt;/code&gt; &lt;/a&gt;ポインターの&lt;em&gt;n&lt;/em&gt;長の配列が戻り値です（エラーが発生した場合は &lt;code&gt;NULL&lt;/code&gt; ）。返された配列は、このルーチンの呼び出し元が（&lt;a href=&quot;#c.PyDataMem_FREE&quot;&gt; &lt;code&gt;PyDataMem_FREE&lt;/code&gt; &lt;/a&gt;を使用して）解放する必要があり、その中のすべての配列オブジェクトが &lt;code&gt;DECREF&lt;/code&gt; 'dされない場合、メモリリークが発生します。以下のテンプレートコードの例は、一般的な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="e101ec3d7ab1b665f48ac2d543089565c86aa54e" translate="yes" xml:space="preserve">
          <source>Convert all kinds of Python objects (including arrays and array scalars) to a (platform-pointer-sized) integer. On error, -1 is returned and an exception set.</source>
          <target state="translated">あらゆる種類のPythonオブジェクト(配列や配列スカラを含む)を(プラットフォームポインタサイズの)整数に変換します。エラー時には -1 が返され、例外が設定されます。</target>
        </trans-unit>
        <trans-unit id="1af2928a63dcb1e8b49b18ef5eb4581fbe6b1379" translate="yes" xml:space="preserve">
          <source>Convert all kinds of Python objects (including arrays and array scalars) to a standard integer. On error, -1 is returned and an exception set. You may find useful the macro:</source>
          <target state="translated">あらゆる種類のPythonオブジェクト(配列や配列スカラを含む)を標準の整数に変換します。エラー時には -1 が返され、例外が設定されます。マクロが便利です。</target>
        </trans-unit>
        <trans-unit id="ffbc378826f57347e9c8260b31120c1a5833498c" translate="yes" xml:space="preserve">
          <source>Convert an array of datetimes into an array of strings.</source>
          <target state="translated">datetimesの配列を文字列の配列に変換します。</target>
        </trans-unit>
        <trans-unit id="037f70609a1c007309e108da24f60e5d131632f5" translate="yes" xml:space="preserve">
          <source>Convert an array of size 1 to its scalar equivalent.</source>
          <target state="translated">サイズ1の配列をスカラ相当の配列に変換します.</target>
        </trans-unit>
        <trans-unit id="53df29e4ff05ae420cc48926e99a3b9e70512010" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a Chebyshev series, ordered from lowest degree to highest, to an array of the coefficients of the equivalent polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest to highest degree.</source>
          <target state="translated">チェビシェフシリーズの係数を表す配列を、最低次数から最高次数に並べ、等価多項式（「標準」基準を基準にして）から最低次数から最高数に並べられた係数の配列に変換します。</target>
        </trans-unit>
        <trans-unit id="6e39db716cf38d73c2e1474b5348e35ad5d45d64" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a Hermite series, ordered from lowest degree to highest, to an array of the coefficients of the equivalent polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest to highest degree.</source>
          <target state="translated">エルミート系列の係数を表す配列を、最低次数から最高次数に並べ、最低から最高次数に並べられた（「標準」基準に対して）等価多項式の係数の配列に変換します。</target>
        </trans-unit>
        <trans-unit id="8d92a2c5d4792677ccffae0416bcb9beb6eb167c" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a Laguerre series, ordered from lowest degree to highest, to an array of the coefficients of the equivalent polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest to highest degree.</source>
          <target state="translated">ラゲール系列の係数を表す配列を、最低次数から最高次数に並べ、最低次数から最高次数に並べられた（「標準」基準に対して）等価多項式の係数の配列に変換します。</target>
        </trans-unit>
        <trans-unit id="a288bed0f35723755d6a37566e44ab92c6ecb769" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a Legendre series, ordered from lowest degree to highest, to an array of the coefficients of the equivalent polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest to highest degree.</source>
          <target state="translated">ルジャンドル級数の係数を表す配列を、最低次数から最高次数に並べ、最低から最高次数に並べられた（「標準」基準に対して）等価多項式の係数の配列に変換します。</target>
        </trans-unit>
        <trans-unit id="8f863e3ceaa930790565bf1f263428f91f82dc05" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest degree to highest, to an array of the coefficients of the equivalent Chebyshev series, ordered from lowest to highest degree.</source>
          <target state="translated">最小次数から最高次数の順に並べられた多項式の係数（「標準」基準に対して）を表す配列を、最低次数から最高次数の順に並べられた同等のチェビシェフシリーズの係数の配列に変換します。</target>
        </trans-unit>
        <trans-unit id="77ebeb329b7c408d6e1a1754f29dec3917a76884" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest degree to highest, to an array of the coefficients of the equivalent Hermite series, ordered from lowest to highest degree.</source>
          <target state="translated">最小次数から最高次数の順に並べられた多項式の係数（「標準」基準に対して）を表す配列を、最低次数から最高次数の順に並べられた同等のエルミート系列の係数の配列に変換します。</target>
        </trans-unit>
        <trans-unit id="5d3f4ebc3ae40ac476278051222e82a2168385fe" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest degree to highest, to an array of the coefficients of the equivalent Laguerre series, ordered from lowest to highest degree.</source>
          <target state="translated">（「標準」基準に関連する）多項式の係数を表す配列を最低次数から最高次数に変換し、同等のラゲール級数の係数の配列に変換します。</target>
        </trans-unit>
        <trans-unit id="cec81c86dbe89e8d496cab1ec6207291b41341cd" translate="yes" xml:space="preserve">
          <source>Convert an array representing the coefficients of a polynomial (relative to the &amp;ldquo;standard&amp;rdquo; basis) ordered from lowest degree to highest, to an array of the coefficients of the equivalent Legendre series, ordered from lowest to highest degree.</source>
          <target state="translated">多項式の係数を表す配列（「標準」基準に対して）を最低次数から最高次数に変換し、同等のルジャンドル級数の係数の配列に変換します。</target>
        </trans-unit>
        <trans-unit id="4b17b279b5dccfd644af2817f95777400cf1861d" translate="yes" xml:space="preserve">
          <source>Convert angles from degrees to radians.</source>
          <target state="translated">角度を度からラジアンに変換します。</target>
        </trans-unit>
        <trans-unit id="7b990b4a48262db5915c35fe0989adfb1e63af66" translate="yes" xml:space="preserve">
          <source>Convert angles from radians to degrees.</source>
          <target state="translated">角度をラジアンから度数に変換します。</target>
        </trans-unit>
        <trans-unit id="45815db69ac2df469f002b3c383b11df15d3fe0f" translate="yes" xml:space="preserve">
          <source>Convert any Python object to a &lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;#c.PyArray_Check&quot;&gt;&lt;code&gt;PyArray_Check&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;obj&lt;/em&gt;) is TRUE then its reference count is incremented and a reference placed in &lt;em&gt;address&lt;/em&gt;. If &lt;em&gt;obj&lt;/em&gt; is not an array, then convert it to an array using &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; . No matter what is returned, you must DECREF the object returned by this routine in &lt;em&gt;address&lt;/em&gt; when you are done with it.</source>
          <target state="translated">Pythonオブジェクトを&lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject&lt;/code&gt; に&lt;/a&gt;変換します。場合&lt;a href=&quot;#c.PyArray_Check&quot;&gt; &lt;code&gt;PyArray_Check&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;objが&lt;/em&gt;）が真であるその参照カウントがインクリメントされ、参照が中に入れ&lt;em&gt;アドレス&lt;/em&gt;。&lt;em&gt;obj&lt;/em&gt;が配列でない場合は、&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt;を使用して配列に変換します。何が返されても、このルーチンを使い終わったら、このルーチンによって返されたオブジェクトを&lt;em&gt;アドレスで&lt;/em&gt; DECREFする必要があります。</target>
        </trans-unit>
        <trans-unit id="0b6da37e7cce779d1f71c021678852cf78adef4f" translate="yes" xml:space="preserve">
          <source>Convert any Python object to a &lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;#c.PyArray_Check&quot;&gt;&lt;code&gt;PyArray_Check&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;obj&lt;/em&gt;) is TRUE then its reference count is incremented and a reference placed in &lt;em&gt;address&lt;/em&gt;. If &lt;em&gt;obj&lt;/em&gt; is not an array, then convert it to an array using &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; . No matter what is returned, you must DECREF the object returned by this routine in &lt;em&gt;address&lt;/em&gt; when you are done with it.</source>
          <target state="translated">Pythonオブジェクトを&lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject&lt;/code&gt; に&lt;/a&gt;変換します。場合&lt;a href=&quot;#c.PyArray_Check&quot;&gt; &lt;code&gt;PyArray_Check&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;objが&lt;/em&gt;）が真であるその参照カウントがインクリメントされ、参照が中に入れ&lt;em&gt;アドレス&lt;/em&gt;。&lt;em&gt;obj&lt;/em&gt;が配列でない場合は、&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt;を使用して配列に変換します。何が返されるかに関係なく、このルーチンによって返されたオブジェクトを使い終わったら、&lt;em&gt;アドレスで&lt;/em&gt;DECREFする必要があります。</target>
        </trans-unit>
        <trans-unit id="2c520cfad3eae214eac5cb30701aacd3d0256a7c" translate="yes" xml:space="preserve">
          <source>Convert any Python object, &lt;em&gt;obj&lt;/em&gt;, to &lt;a href=&quot;#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt;, and place the result in &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">Pythonオブジェクト&lt;em&gt;obj&lt;/em&gt;を&lt;a href=&quot;#c.NPY_TRUE&quot;&gt; &lt;code&gt;NPY_TRUE&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#c.NPY_FALSE&quot;&gt; &lt;code&gt;NPY_FALSE&lt;/code&gt; &lt;/a&gt;に変換し、結果を&lt;em&gt;valueに&lt;/em&gt;配置し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1f11d66b7da05915fa0d0dcb369cc6d4a2e56d6e" translate="yes" xml:space="preserve">
          <source>Convert any Python object, &lt;em&gt;obj&lt;/em&gt;, with a (single-segment) buffer interface to a variable with members that detail the object&amp;rsquo;s use of its chunk of memory. The &lt;em&gt;buf&lt;/em&gt; variable is a pointer to a structure with base, ptr, len, and flags members. The &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Chunk&quot;&gt;&lt;code&gt;PyArray_Chunk&lt;/code&gt;&lt;/a&gt; structure is binary compatible with the Python&amp;rsquo;s buffer object (through its len member on 32-bit platforms and its ptr member on 64-bit platforms or in Python 2.5). On return, the base member is set to &lt;em&gt;obj&lt;/em&gt; (or its base if &lt;em&gt;obj&lt;/em&gt; is already a buffer object pointing to another object). If you need to hold on to the memory be sure to INCREF the base member. The chunk of memory is pointed to by &lt;em&gt;buf&lt;/em&gt; -&amp;gt;ptr member and has length &lt;em&gt;buf&lt;/em&gt; -&amp;gt;len. The flags member of &lt;em&gt;buf&lt;/em&gt; is &lt;code&gt;NPY_BEHAVED_RO&lt;/code&gt; with the &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt; flag set if &lt;em&gt;obj&lt;/em&gt; has a writeable buffer interface.</source>
          <target state="translated">（単一セグメントの）バッファーインターフェイスを持つ任意のPythonオブジェクト&lt;em&gt;objを&lt;/em&gt;、オブジェクトによるメモリのチャンクの使用を詳述するメンバーを持つ変数に変換します。&lt;em&gt;BUFの&lt;/em&gt;変数は、ベース、PTR、LEN、およびフラグメンバーと構造体へのポインタです。&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Chunk&quot;&gt; &lt;code&gt;PyArray_Chunk&lt;/code&gt; の&lt;/a&gt;構造は、（32ビットプラットフォームと64ビットプラットフォーム上やPython 2.5でのPTR部材上のLEN部材を介して）Pythonのバッファ・オブジェクトとバイナリ互換性があります。戻ったとき、ベースメンバーは&lt;em&gt;obj&lt;/em&gt;（または、&lt;em&gt;obj&lt;/em&gt;がすでに別のオブジェクトを指すバッファーオブジェクトの場合はそのベース）に設定される。メモリを保持する必要がある場合は、必ずベースメンバーをINCREFしてください。メモリのチャンクは&lt;em&gt;buf-&lt;/em&gt; &amp;gt; ptrメンバーによってポイントされ、長さを持っています&lt;em&gt;buf-&lt;/em&gt; &amp;gt; len。&lt;em&gt;buf&lt;/em&gt;のフラグメンバーは &lt;code&gt;NPY_BEHAVED_RO&lt;/code&gt; で、&lt;em&gt;obj&lt;/em&gt;に書き込み可能なバッファーインターフェイスがある場合は、&lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt;フラグが設定されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="569900dcf7d509c01e8e49d0b1d6eec3e381fdec" translate="yes" xml:space="preserve">
          <source>Convert any Python object, &lt;em&gt;obj&lt;/em&gt;, with a (single-segment) buffer interface to a variable with members that detail the object&amp;rsquo;s use of its chunk of memory. The &lt;em&gt;buf&lt;/em&gt; variable is a pointer to a structure with base, ptr, len, and flags members. The &lt;a href=&quot;types-and-structures#c.PyArray_Chunk&quot;&gt;&lt;code&gt;PyArray_Chunk&lt;/code&gt;&lt;/a&gt; structure is binary compatible with the Python&amp;rsquo;s buffer object (through its len member on 32-bit platforms and its ptr member on 64-bit platforms or in Python 2.5). On return, the base member is set to &lt;em&gt;obj&lt;/em&gt; (or its base if &lt;em&gt;obj&lt;/em&gt; is already a buffer object pointing to another object). If you need to hold on to the memory be sure to INCREF the base member. The chunk of memory is pointed to by &lt;em&gt;buf&lt;/em&gt; -&amp;gt;ptr member and has length &lt;em&gt;buf&lt;/em&gt; -&amp;gt;len. The flags member of &lt;em&gt;buf&lt;/em&gt; is &lt;code&gt;NPY_BEHAVED_RO&lt;/code&gt; with the &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt; flag set if &lt;em&gt;obj&lt;/em&gt; has a writeable buffer interface.</source>
          <target state="translated">（単一セグメントの）バッファインターフェイスを備えたPythonオブジェクト&lt;em&gt;objを&lt;/em&gt;、オブジェクトによるメモリチャンクの使用を詳細に示すメンバーを備えた変数に変換します。&lt;em&gt;BUFの&lt;/em&gt;変数は、ベース、PTR、LEN、およびフラグメンバーと構造体へのポインタです。&lt;a href=&quot;types-and-structures#c.PyArray_Chunk&quot;&gt; &lt;code&gt;PyArray_Chunk&lt;/code&gt; の&lt;/a&gt;構造は、（32ビットプラットフォームと64ビットプラットフォーム上やPython 2.5でのPTR部材上のLEN部材を介して）Pythonのバッファ・オブジェクトとバイナリ互換性があります。戻ると、ベースメンバーは&lt;em&gt;obj&lt;/em&gt;（または、&lt;em&gt;obj&lt;/em&gt;がすでに別のオブジェクトを指すバッファオブジェクトである場合はそのベース）に設定されます。メモリを保持する必要がある場合は、必ずベースメンバーをINCREFしてください。メモリのチャンクは&lt;em&gt;buf-&lt;/em&gt; &amp;gt; ptrメンバーによってポイントされ、長さがあります&lt;em&gt;buf-&lt;/em&gt; &amp;gt; len。&lt;em&gt;buf&lt;/em&gt;のflagsメンバーは &lt;code&gt;NPY_BEHAVED_RO&lt;/code&gt; であり、&lt;em&gt;obj&lt;/em&gt;に書き込み可能なバッファーインターフェイスがある場合は&lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt;フラグが設定されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c75a292870c1a62f954752682b5e4d2572c8fb49" translate="yes" xml:space="preserve">
          <source>Convert any Python sequence (or single Python number) passed in as &lt;em&gt;seq&lt;/em&gt; to (up to) &lt;em&gt;maxvals&lt;/em&gt; pointer-sized integers and place them in the &lt;em&gt;vals&lt;/em&gt; array. The sequence can be smaller then &lt;em&gt;maxvals&lt;/em&gt; as the number of converted objects is returned.</source>
          <target state="translated">&lt;em&gt;seq&lt;/em&gt;として渡されたすべてのPythonシーケンス（または単一のPython番号）を（最大で）&lt;em&gt;maxvals&lt;/em&gt;ポインターサイズの整数に&lt;em&gt;変換&lt;/em&gt;し、それらを&lt;em&gt;vals&lt;/em&gt;配列に配置します。変換されたオブジェクトの数が&lt;em&gt;返さ&lt;/em&gt;れるため、シーケンスは&lt;em&gt;maxvals&lt;/em&gt;よりも小さい場合があります。</target>
        </trans-unit>
        <trans-unit id="fa9c12af167e2e17ab265f1ff4c7ad781660a664" translate="yes" xml:space="preserve">
          <source>Convert any Python sequence, &lt;em&gt;obj&lt;/em&gt;, smaller than &lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt;&lt;code&gt;NPY_MAXDIMS&lt;/code&gt;&lt;/a&gt; to a C-array of &lt;a href=&quot;c-api.dtype#c.npy_intp&quot;&gt;&lt;code&gt;npy_intp&lt;/code&gt;&lt;/a&gt;. The Python object could also be a single number. The &lt;em&gt;seq&lt;/em&gt; variable is a pointer to a structure with members ptr and len. On successful return, &lt;em&gt;seq&lt;/em&gt; -&amp;gt;ptr contains a pointer to memory that must be freed, by calling &lt;a href=&quot;#c.PyDimMem_FREE&quot;&gt;&lt;code&gt;PyDimMem_FREE&lt;/code&gt;&lt;/a&gt;, to avoid a memory leak. The restriction on memory size allows this converter to be conveniently used for sequences intended to be interpreted as array shapes.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt; &lt;code&gt;NPY_MAXDIMS&lt;/code&gt; &lt;/a&gt;より小さいPythonシーケンス&lt;em&gt;objを&lt;/em&gt;npy_intpのC配列に&lt;a href=&quot;c-api.dtype#c.npy_intp&quot;&gt; &lt;code&gt;npy_intp&lt;/code&gt; &lt;/a&gt;ます。 Pythonオブジェクトは、単一の数値にすることもできます。&lt;em&gt;配列の&lt;/em&gt;変数は、メンバーPTRとlenを持つ構造体へのポインタです。成功リターン、上の&lt;em&gt;配列&lt;/em&gt; - &amp;gt; ptrが呼び出すことによって、解放されなければならないメモリへのポインタが含まれ&lt;a href=&quot;#c.PyDimMem_FREE&quot;&gt; &lt;code&gt;PyDimMem_FREE&lt;/code&gt; を&lt;/a&gt;メモリリークを回避するために、。メモリサイズの制限により、このコンバーターは、配列形状として解釈されることを目的としたシーケンスに便利に使用できます。</target>
        </trans-unit>
        <trans-unit id="ddbd151db3f713081a3e638e5a5727e61847e905" translate="yes" xml:space="preserve">
          <source>Convert any Python sequence, &lt;em&gt;obj&lt;/em&gt;, smaller than &lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt;&lt;code&gt;NPY_MAXDIMS&lt;/code&gt;&lt;/a&gt; to a C-array of &lt;a href=&quot;dtype#c.npy_intp&quot;&gt;&lt;code&gt;npy_intp&lt;/code&gt;&lt;/a&gt;. The Python object could also be a single number. The &lt;em&gt;seq&lt;/em&gt; variable is a pointer to a structure with members ptr and len. On successful return, &lt;em&gt;seq&lt;/em&gt; -&amp;gt;ptr contains a pointer to memory that must be freed, by calling &lt;a href=&quot;#c.PyDimMem_FREE&quot;&gt;&lt;code&gt;PyDimMem_FREE&lt;/code&gt;&lt;/a&gt;, to avoid a memory leak. The restriction on memory size allows this converter to be conveniently used for sequences intended to be interpreted as array shapes.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt; &lt;code&gt;NPY_MAXDIMS&lt;/code&gt; &lt;/a&gt;より小さいPythonシーケンス&lt;em&gt;objを&lt;/em&gt;npy_intpのC配列に&lt;a href=&quot;dtype#c.npy_intp&quot;&gt; &lt;code&gt;npy_intp&lt;/code&gt; &lt;/a&gt;ます。 Pythonオブジェクトは単一の数値にすることもできます。&lt;em&gt;配列の&lt;/em&gt;変数は、メンバーPTRとlenを持つ構造体へのポインタです。成功リターン、上の&lt;em&gt;配列&lt;/em&gt;- &amp;gt; ptrが呼び出すことによって、解放されなければならないメモリへのポインタが含まれ&lt;a href=&quot;#c.PyDimMem_FREE&quot;&gt; &lt;code&gt;PyDimMem_FREE&lt;/code&gt; を&lt;/a&gt;メモリリークを回避するために、。メモリサイズの制限により、このコンバータは配列形状として解釈されることを目的としたシーケンスに便利に使用できます。</target>
        </trans-unit>
        <trans-unit id="ed619a93f21a46ce5e25c505085d53ca9e82da5b" translate="yes" xml:space="preserve">
          <source>Convert any compatible Python object, &lt;em&gt;obj&lt;/em&gt;, to a data-type object in &lt;em&gt;dtype&lt;/em&gt;. A large number of Python objects can be converted to data-type objects. See &lt;a href=&quot;../arrays.dtypes#arrays-dtypes&quot;&gt;Data type objects (dtype)&lt;/a&gt; for a complete description. This version of the converter converts None objects to a &lt;a href=&quot;dtype#c.NPY_DEFAULT_TYPE&quot;&gt;&lt;code&gt;NPY_DEFAULT_TYPE&lt;/code&gt;&lt;/a&gt; data-type object. This function can be used with the &amp;ldquo;O&amp;amp;&amp;rdquo; character code in &lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt;&lt;code&gt;PyArg_ParseTuple&lt;/code&gt;&lt;/a&gt; processing.</source>
          <target state="translated">互換性のあるPythonオブジェクト&lt;em&gt;obj&lt;/em&gt;を&lt;em&gt;dtypeの&lt;/em&gt;データ型オブジェクトに&lt;em&gt;変換し&lt;/em&gt;ます。多数のPythonオブジェクトをデータ型オブジェクトに変換できます。詳細な説明については、&lt;a href=&quot;../arrays.dtypes#arrays-dtypes&quot;&gt;データ型オブジェクト（dtype）&lt;/a&gt;を参照してください。このバージョンのコンバーターは、Noneオブジェクトを&lt;a href=&quot;dtype#c.NPY_DEFAULT_TYPE&quot;&gt; &lt;code&gt;NPY_DEFAULT_TYPE&lt;/code&gt; &lt;/a&gt;データ型オブジェクトに変換します。この関数は、&lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt; &lt;code&gt;PyArg_ParseTuple&lt;/code&gt; &lt;/a&gt;処理の「O＆」文字コードで使用できます。</target>
        </trans-unit>
        <trans-unit id="69da68263fbc339b854ebcf71b991e1eb9b1a25a" translate="yes" xml:space="preserve">
          <source>Convert any compatible Python object, &lt;em&gt;obj&lt;/em&gt;, to a data-type object in &lt;em&gt;dtype&lt;/em&gt;. A large number of Python objects can be converted to data-type objects. See &lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;Data type objects (dtype)&lt;/a&gt; for a complete description. This version of the converter converts None objects to a &lt;a href=&quot;c-api.dtype#c.NPY_DEFAULT_TYPE&quot;&gt;&lt;code&gt;NPY_DEFAULT_TYPE&lt;/code&gt;&lt;/a&gt; data-type object. This function can be used with the &amp;ldquo;O&amp;amp;&amp;rdquo; character code in &lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt;&lt;code&gt;PyArg_ParseTuple&lt;/code&gt;&lt;/a&gt; processing.</source>
          <target state="translated">互換性のあるPythonオブジェクト&lt;em&gt;obj&lt;/em&gt;を&lt;em&gt;dtypeの&lt;/em&gt;データ型オブジェクトに&lt;em&gt;変換し&lt;/em&gt;ます。多数のPythonオブジェクトをデータ型オブジェクトに変換できます。詳細については、&lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;データ型オブジェクト（dtype）&lt;/a&gt;を参照してください。このバージョンのコンバーターは、Noneオブジェクトを&lt;a href=&quot;c-api.dtype#c.NPY_DEFAULT_TYPE&quot;&gt; &lt;code&gt;NPY_DEFAULT_TYPE&lt;/code&gt; &lt;/a&gt;データ型オブジェクトに変換します。この関数は、&lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt; &lt;code&gt;PyArg_ParseTuple&lt;/code&gt; &lt;/a&gt;処理で「O＆」文字コードとともに使用できます。</target>
        </trans-unit>
        <trans-unit id="76aa53d3435e68fd8a448322e838d44b487cd7d8" translate="yes" xml:space="preserve">
          <source>Convert any compatible Python object, &lt;em&gt;obj&lt;/em&gt;, to a data-type object in &lt;em&gt;dtype&lt;/em&gt;. This version of the converter converts None objects so that the returned data-type is &lt;code&gt;NULL&lt;/code&gt;. This function can also be used with the &amp;ldquo;O&amp;amp;&amp;rdquo; character in PyArg_ParseTuple processing.</source>
          <target state="translated">互換性のあるPythonオブジェクト&lt;em&gt;obj&lt;/em&gt;を&lt;em&gt;dtypeの&lt;/em&gt;データ型オブジェクトに&lt;em&gt;変換し&lt;/em&gt;ます。このバージョンのコンバーターはNoneオブジェクトを変換するため、返されるデータ型は &lt;code&gt;NULL&lt;/code&gt; になります。この関数は、PyArg_ParseTuple処理で「O＆」文字と共に使用することもできます。</target>
        </trans-unit>
        <trans-unit id="e9aec6c9ded5002efcbad399df89142237d7cc00" translate="yes" xml:space="preserve">
          <source>Convert input to a contiguous (C order) array.</source>
          <target state="translated">入力を連続(C次)配列に変換します.</target>
        </trans-unit>
        <trans-unit id="420fb690c0edc53e8debde6a0ec4d275687ce3ce" translate="yes" xml:space="preserve">
          <source>Convert input to a contiguous array.</source>
          <target state="translated">入力を連続する配列に変換します.</target>
        </trans-unit>
        <trans-unit id="33c1cb2e227b9bd61de344d0e7fbaab99233af47" translate="yes" xml:space="preserve">
          <source>Convert input to a floating point ndarray.</source>
          <target state="translated">入力を浮動小数点 ndarray に変換します。</target>
        </trans-unit>
        <trans-unit id="a5f5c7c34bf3d8463c0f5b22aa43e1fd52fac998" translate="yes" xml:space="preserve">
          <source>Convert input to an ndarray with column-major memory order.</source>
          <target state="translated">入力をメモリの列と長さの順序で ndarray に変換します。</target>
        </trans-unit>
        <trans-unit id="045aaccfe763e323c93890206739ec75aade7286" translate="yes" xml:space="preserve">
          <source>Convert input to an ndarray with either row or column-major memory order.</source>
          <target state="translated">入力を行または列-メジャーメモリ順の ndarray に変換します。</target>
        </trans-unit>
        <trans-unit id="a4ef171cc954b4a91951ba1a6dda729099545ddf" translate="yes" xml:space="preserve">
          <source>Convert input to an ndarray.</source>
          <target state="translated">入力をndarrayに変換します。</target>
        </trans-unit>
        <trans-unit id="ccd7aa35d1ae2b4dc3b90cbbf72ce01559391330" translate="yes" xml:space="preserve">
          <source>Convert inputs to arrays with at least one dimension.</source>
          <target state="translated">入力を少なくとも1次元の配列に変換します。</target>
        </trans-unit>
        <trans-unit id="a6f15509196d96b84e75e30f612e180331511cb6" translate="yes" xml:space="preserve">
          <source>Convert obj and place it in the ndarray, &lt;em&gt;arr&lt;/em&gt;, at the place pointed to by itemptr. Return -1 if an error occurs or 0 on success.</source>
          <target state="translated">objを変換し、それをndarray &lt;em&gt;arr&lt;/em&gt;のitemptrが指す場所に配置します。エラーが発生した場合は-1を返し、成功した場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="576d85a9ac7f4bb463bcd686151b14889c6fa48b" translate="yes" xml:space="preserve">
          <source>Convert series to a different kind and/or domain and/or window.</source>
          <target state="translated">系列を別の種類、ドメイン、ウィンドウに変換します。</target>
        </trans-unit>
        <trans-unit id="3f437b5b2be6d379bf2552ef729b64b4968647ed" translate="yes" xml:space="preserve">
          <source>Convert series to series of this class.</source>
          <target state="translated">系列をこのクラスの系列に変換します。</target>
        </trans-unit>
        <trans-unit id="11dd67ff4e76c78a832c4fe82ad1fa604de8aae0" translate="yes" xml:space="preserve">
          <source>Convert the Python strings &amp;lsquo;C&amp;rsquo;, &amp;lsquo;F&amp;rsquo;, &amp;lsquo;A&amp;rsquo;, and &amp;lsquo;K&amp;rsquo; into the &lt;a href=&quot;#c.NPY_ORDER&quot;&gt;&lt;code&gt;NPY_ORDER&lt;/code&gt;&lt;/a&gt; enumeration &lt;a href=&quot;#c.NPY_CORDER&quot;&gt;&lt;code&gt;NPY_CORDER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt;&lt;code&gt;NPY_FORTRANORDER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt;&lt;code&gt;NPY_ANYORDER&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python文字列 'C'、 'F'、 'A'、および 'K'を&lt;a href=&quot;#c.NPY_ORDER&quot;&gt; &lt;code&gt;NPY_ORDER&lt;/code&gt; &lt;/a&gt;列挙&lt;a href=&quot;#c.NPY_CORDER&quot;&gt; &lt;code&gt;NPY_CORDER&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt; &lt;code&gt;NPY_FORTRANORDER&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt; &lt;code&gt;NPY_ANYORDER&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#c.NPY_KEEPORDER&quot;&gt; &lt;code&gt;NPY_KEEPORDER&lt;/code&gt; に変換し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e537ead60d0d43e6e588d78323ccc29eca3c8343" translate="yes" xml:space="preserve">
          <source>Convert the Python strings &amp;lsquo;clip&amp;rsquo;, &amp;lsquo;wrap&amp;rsquo;, and &amp;lsquo;raise&amp;rsquo; into the &lt;a href=&quot;#c.NPY_CLIPMODE&quot;&gt;&lt;code&gt;NPY_CLIPMODE&lt;/code&gt;&lt;/a&gt; enumeration &lt;a href=&quot;#c.NPY_CLIP&quot;&gt;&lt;code&gt;NPY_CLIP&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_WRAP&quot;&gt;&lt;code&gt;NPY_WRAP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#c.NPY_RAISE&quot;&gt;&lt;code&gt;NPY_RAISE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python文字列 'clip'、 'wrap'、および 'raise'を&lt;a href=&quot;#c.NPY_CLIPMODE&quot;&gt; &lt;code&gt;NPY_CLIPMODE&lt;/code&gt; &lt;/a&gt;列挙型&lt;a href=&quot;#c.NPY_CLIP&quot;&gt; &lt;code&gt;NPY_CLIP&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_WRAP&quot;&gt; &lt;code&gt;NPY_WRAP&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#c.NPY_RAISE&quot;&gt; &lt;code&gt;NPY_RAISE&lt;/code&gt; に変換し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="bc37cf0719273a042d912bf17405514329ce06ef" translate="yes" xml:space="preserve">
          <source>Convert the Python strings &amp;lsquo;no&amp;rsquo;, &amp;lsquo;equiv&amp;rsquo;, &amp;lsquo;safe&amp;rsquo;, &amp;lsquo;same_kind&amp;rsquo;, and &amp;lsquo;unsafe&amp;rsquo; into the &lt;a href=&quot;#c.NPY_CASTING&quot;&gt;&lt;code&gt;NPY_CASTING&lt;/code&gt;&lt;/a&gt; enumeration &lt;a href=&quot;#c.NPY_NO_CASTING&quot;&gt;&lt;code&gt;NPY_NO_CASTING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_EQUIV_CASTING&quot;&gt;&lt;code&gt;NPY_EQUIV_CASTING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt;&lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_SAME_KIND_CASTING&quot;&gt;&lt;code&gt;NPY_SAME_KIND_CASTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#c.NPY_UNSAFE_CASTING&quot;&gt;&lt;code&gt;NPY_UNSAFE_CASTING&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python文字列「no」、「equiv」、「safe」、「same_kind」、および「unsafe」を&lt;a href=&quot;#c.NPY_CASTING&quot;&gt; &lt;code&gt;NPY_CASTING&lt;/code&gt; &lt;/a&gt;列挙型&lt;a href=&quot;#c.NPY_NO_CASTING&quot;&gt; &lt;code&gt;NPY_NO_CASTING&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_EQUIV_CASTING&quot;&gt; &lt;code&gt;NPY_EQUIV_CASTING&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt; &lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_SAME_KIND_CASTING&quot;&gt; &lt;code&gt;NPY_SAME_KIND_CASTING&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#c.NPY_UNSAFE_CASTING&quot;&gt; &lt;code&gt;NPY_UNSAFE_CASTING&lt;/code&gt; に変換し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="815ebb3363dd660001d42495eb8ae85f74f839e8" translate="yes" xml:space="preserve">
          <source>Convert the input to a &lt;a href=&quot;generated/numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;, copying the data only if necessary.</source>
          <target state="translated">入力を&lt;a href=&quot;generated/numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; に&lt;/a&gt;変換し、必要な場合にのみデータをコピーします。</target>
        </trans-unit>
        <trans-unit id="89dd3b39429f0c57adb052e020bf83426fade26c" translate="yes" xml:space="preserve">
          <source>Convert the input to a &lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;, copying the data only if necessary.</source>
          <target state="translated">入力を&lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; に&lt;/a&gt;変換し、必要な場合にのみデータをコピーします。</target>
        </trans-unit>
        <trans-unit id="0806bab1a140533a0bd7db5d9d14e0735040e429" translate="yes" xml:space="preserve">
          <source>Convert the input to a &lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;, copying the data only if necessary.</source>
          <target state="translated">入力を&lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; に&lt;/a&gt;変換し、必要な場合にのみデータをコピーします。</target>
        </trans-unit>
        <trans-unit id="d7f61cec71e421e2035c68b35503551782f13e38" translate="yes" xml:space="preserve">
          <source>Convert the input to a &lt;code&gt;chararray&lt;/code&gt;, copying the data only if necessary.</source>
          <target state="translated">入力を &lt;code&gt;chararray&lt;/code&gt; に変換し、必要な場合にのみデータをコピーします。</target>
        </trans-unit>
        <trans-unit id="98730b39eb982a451cdb3b14184177191517f090" translate="yes" xml:space="preserve">
          <source>Convert the input to a masked array of the given data-type.</source>
          <target state="translated">入力を指定されたデータ型のマスク付き配列に変換します。</target>
        </trans-unit>
        <trans-unit id="049b0255d3e880a109ec0e5f8d964f2db189e876" translate="yes" xml:space="preserve">
          <source>Convert the input to a masked array, conserving subclasses.</source>
          <target state="translated">入力をマスクされた配列に変換し、サブクラスを保存します。</target>
        </trans-unit>
        <trans-unit id="ff8828938f9435e62b42845c72c1f7535705ef18" translate="yes" xml:space="preserve">
          <source>Convert the input to an array, checking for NaNs or Infs.</source>
          <target state="translated">入力を配列に変換し、NaNやInfをチェックします。</target>
        </trans-unit>
        <trans-unit id="a3dfbf8e7020f742fa20a33d892353893c53d156" translate="yes" xml:space="preserve">
          <source>Convert the input to an array.</source>
          <target state="translated">入力を配列に変換します。</target>
        </trans-unit>
        <trans-unit id="a8a1ee418db1bf6815f8924edb3f1ae12bdde4d6" translate="yes" xml:space="preserve">
          <source>Convert the input to an ndarray, but pass ndarray subclasses through.</source>
          <target state="translated">入力をndarrayに変換しますが、ndarrayのサブクラスを通します。</target>
        </trans-unit>
        <trans-unit id="886f2026c6406a2793d6365ffa59384bbd4e87c7" translate="yes" xml:space="preserve">
          <source>Convert the python objects to ctypes-understood arguments.</source>
          <target state="translated">pythonオブジェクトをctypes-understood引数に変換します。</target>
        </trans-unit>
        <trans-unit id="7e4e1bb160f7f12732c4b9f9c2fff13135191fc1" translate="yes" xml:space="preserve">
          <source>Convert to an ndarray, but pass through ndarray subclasses.</source>
          <target state="translated">ndarrayに変換しますが、ndarrayのサブクラスを通過させます。</target>
        </trans-unit>
        <trans-unit id="0bf45673533df66645f8a1830f766ff21a3245ff" translate="yes" xml:space="preserve">
          <source>Convert to float.</source>
          <target state="translated">フロートに変換します。</target>
        </trans-unit>
        <trans-unit id="4d25fc1fde9972ce3ca1a8543e86c1eba0e323da" translate="yes" xml:space="preserve">
          <source>Convert to int.</source>
          <target state="translated">intに変換します。</target>
        </trans-unit>
        <trans-unit id="7cc45909f5c77c707373cc2714501a4d53754e23" translate="yes" xml:space="preserve">
          <source>Convert to long.</source>
          <target state="translated">ロングに変換します。</target>
        </trans-unit>
        <trans-unit id="3ae1f71abfac0c88927feea8e530f4f046de5146" translate="yes" xml:space="preserve">
          <source>Convert typestring characters (with &lt;em&gt;itemsize&lt;/em&gt;) to basic enumerated data types. The typestring character corresponding to signed and unsigned integers, floating point numbers, and complex-floating point numbers are recognized and converted. Other values of gentype are returned. This function can be used to convert, for example, the string &amp;lsquo;f4&amp;rsquo; to &lt;a href=&quot;c-api.dtype#c.NPY_FLOAT32&quot;&gt;&lt;code&gt;NPY_FLOAT32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">typestring文字（&lt;em&gt;itemsizeを使用&lt;/em&gt;）を基本的な列挙データ型に変換します。符号付きおよび符号なし整数、浮動小数点数、複素数浮動小数点数に対応するタイプ文字列文字が認識され、変換されます。gentypeの他の値が返されます。この関数は、たとえば文字列 'f4'を&lt;a href=&quot;c-api.dtype#c.NPY_FLOAT32&quot;&gt; &lt;code&gt;NPY_FLOAT32&lt;/code&gt; &lt;/a&gt;に変換するために使用できます。</target>
        </trans-unit>
        <trans-unit id="70c76df3e727c44cc42ff18ce9a9faa14245d650" translate="yes" xml:space="preserve">
          <source>Convert typestring characters (with &lt;em&gt;itemsize&lt;/em&gt;) to basic enumerated data types. The typestring character corresponding to signed and unsigned integers, floating point numbers, and complex-floating point numbers are recognized and converted. Other values of gentype are returned. This function can be used to convert, for example, the string &amp;lsquo;f4&amp;rsquo; to &lt;a href=&quot;dtype#c.NPY_FLOAT32&quot;&gt;&lt;code&gt;NPY_FLOAT32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タイプ文字列文字（&lt;em&gt;itemsize&lt;/em&gt;を&lt;em&gt;含む&lt;/em&gt;）を基本的な列挙データ型に変換します。符号付き整数と符号なし整数、浮動小数点数、および複素数浮動小数点数に対応するタイプストリング文字が認識され、変換されます。gentypeの他の値が返されます。この関数は、たとえば、文字列 'f4'を&lt;a href=&quot;dtype#c.NPY_FLOAT32&quot;&gt; &lt;code&gt;NPY_FLOAT32&lt;/code&gt; &lt;/a&gt;に変換するために使用できます。</target>
        </trans-unit>
        <trans-unit id="b3dad1560b74d1be07a243b82626281b4ea9ce03" translate="yes" xml:space="preserve">
          <source>Converters can also be used to provide a default for missing entries. In the following example, the converter &lt;code&gt;convert&lt;/code&gt; transforms a stripped string into the corresponding float or into -999 if the string is empty. We need to explicitly strip the string from white spaces as it is not done by default:</source>
          <target state="translated">コンバーターを使用して、欠落しているエントリーのデフォルトを提供することもできます。次の例では、converter &lt;code&gt;convert&lt;/code&gt; は、削除された文字列を対応するfloatに変換するか、文字列が空の場合は-999に変換します。デフォルトでは行われないため、空白から文字列を明示的に削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="d294648838323eafa5d5de8807a68d2168b2c3dd" translate="yes" xml:space="preserve">
          <source>Converting Python array_like Objects to NumPy Arrays</source>
          <target state="translated">Pythonのarray_likeオブジェクトをNumPyの配列に変換する</target>
        </trans-unit>
        <trans-unit id="8c2275396c9cff0a291777d1d13689b639dc64c6" translate="yes" xml:space="preserve">
          <source>Converting an arbitrary sequence object</source>
          <target state="translated">任意のシーケンスオブジェクトの変換</target>
        </trans-unit>
        <trans-unit id="81bfb14700a4e9e3d59d633b4a0dc102cc3ec25f" translate="yes" xml:space="preserve">
          <source>Converting arguments</source>
          <target state="translated">引数の変換</target>
        </trans-unit>
        <trans-unit id="9482d2a86e467faa5b2ef9c6c7ef5e719545adeb" translate="yes" xml:space="preserve">
          <source>Converting certain types to dtypes is Deprecated</source>
          <target state="translated">特定の型をdtypesに変換することは非推奨です。</target>
        </trans-unit>
        <trans-unit id="e546d48fddfc2b2309057fe0163a99c4890872bf" translate="yes" xml:space="preserve">
          <source>Converting data types</source>
          <target state="translated">データ型の変換</target>
        </trans-unit>
        <trans-unit id="7742f5240e1d4873e47ef6d80ce8f9d7eed5d915" translate="yes" xml:space="preserve">
          <source>Converting from Previous NumPy Iterators</source>
          <target state="translated">以前のNumPyイテレータからの変換</target>
        </trans-unit>
        <trans-unit id="938ed8e078016c5ba424e79f6b662e49a6f7f7b5" translate="yes" xml:space="preserve">
          <source>Converting of empty array-like objects to NumPy arrays</source>
          <target state="translated">空の配列のようなオブジェクトをNumPy配列に変換する</target>
        </trans-unit>
        <trans-unit id="39ce420f01e01a6e4767054eb7e780c8c56e6e83" translate="yes" xml:space="preserve">
          <source>Converts a double-precision float to a half-precision float. The value is rounded to the nearest representable half, with ties going to the nearest even. If the value is too small or too big, the system&amp;rsquo;s floating point underflow or overflow bit will be set.</source>
          <target state="translated">倍精度浮動小数点数を半精度浮動小数点数に変換します。値は最も近い表現可能な半分に丸められ、タイは最も近い偶数に移動します。値が小さすぎる、または大きすぎる場合、システムの浮動小数点アンダーフローまたはオーバーフロービットが設定されます。</target>
        </trans-unit>
        <trans-unit id="e78be2704a6f40b5c4f51bfc40fd50007ac5b7c1" translate="yes" xml:space="preserve">
          <source>Converts a flat index or array of flat indices into a tuple of coordinate arrays.</source>
          <target state="translated">フラットインデックスまたはフラットインデックスの配列を座標配列のタプルに変換します。</target>
        </trans-unit>
        <trans-unit id="ff19be80738f9cb33fa734371385cb9e202a0fe3" translate="yes" xml:space="preserve">
          <source>Converts a half-precision float to a double-precision float.</source>
          <target state="translated">半精度フロートを倍精度フロートに変換します。</target>
        </trans-unit>
        <trans-unit id="225d72d1ef1fe464a60bf24f2bcd8995f6d8fb0b" translate="yes" xml:space="preserve">
          <source>Converts a half-precision float to a single-precision float.</source>
          <target state="translated">半精度フロートを単精度フロートに変換します。</target>
        </trans-unit>
        <trans-unit id="b56df4d4b865c9ec05a120e856faf6520f962717" translate="yes" xml:space="preserve">
          <source>Converts a single-precision float to a half-precision float. The value is rounded to the nearest representable half, with ties going to the nearest even. If the value is too small or too big, the system&amp;rsquo;s floating point underflow or overflow bit will be set.</source>
          <target state="translated">単精度浮動小数点数を半精度浮動小数点数に変換します。値は最も近い表現可能な半分に丸められ、タイは最も近い偶数に移動します。値が小さすぎる、または大きすぎる場合、システムの浮動小数点アンダーフローまたはオーバーフロービットが設定されます。</target>
        </trans-unit>
        <trans-unit id="5a3ee1fe16ee1828b519f490c6bae9191c320478" translate="yes" xml:space="preserve">
          <source>Converts a tuple of index arrays into an array of flat indices, applying boundary modes to the multi-index.</source>
          <target state="translated">インデックス配列のタプルを,複数のインデックスに境界モードを適用して,平坦なインデックスの配列に変換します.</target>
        </trans-unit>
        <trans-unit id="3287b73c0df552bf6b6089a1d54b770f5356f2db" translate="yes" xml:space="preserve">
          <source>Converts and n-D structured array into an (n+1)-D unstructured array.</source>
          <target state="translated">n-D構造化配列を(n+1)-D非構造化配列に変換します.</target>
        </trans-unit>
        <trans-unit id="a0bbc22b26c0355c31054b5aa961d0bd84c67edc" translate="yes" xml:space="preserve">
          <source>Converts and n-D unstructured array into an (n-1)-D structured array.</source>
          <target state="translated">n-Dの非構造化配列を(n-1)-Dの構造化配列に変換します.</target>
        </trans-unit>
        <trans-unit id="4d7fdb170c1f22bd4d4e265e352eb1cd10b68118" translate="yes" xml:space="preserve">
          <source>Converts either a sequence of clipmodes or a single clipmode into a C array of &lt;a href=&quot;#c.NPY_CLIPMODE&quot;&gt;&lt;code&gt;NPY_CLIPMODE&lt;/code&gt;&lt;/a&gt; values. The number of clipmodes &lt;em&gt;n&lt;/em&gt; must be known before calling this function. This function is provided to help functions allow a different clipmode for each dimension.</source>
          <target state="translated">クリップモードのシーケンスまたは単一のクリップモードを&lt;a href=&quot;#c.NPY_CLIPMODE&quot;&gt; &lt;code&gt;NPY_CLIPMODE&lt;/code&gt; &lt;/a&gt;値のC配列に変換します。この関数を呼び出す前に、クリップモードの数&lt;em&gt;n&lt;/em&gt;を知っておく必要があります。この関数は、関数が次元ごとに異なるクリップモードを使用できるようにするために提供されています。</target>
        </trans-unit>
        <trans-unit id="250dc78cc5a9ee71a58ec6ac7dd196d5163a36c3" translate="yes" xml:space="preserve">
          <source>Convolve two arrays using the Fast Fourier Transform.</source>
          <target state="translated">高速フーリエ変換を用いて2つの配列を畳み込みます.</target>
        </trans-unit>
        <trans-unit id="576bd4ebce16db77995374ff7c034483bd0ae542" translate="yes" xml:space="preserve">
          <source>Cooley, James W., and John W. Tukey, 1965, &amp;ldquo;An algorithm for the machine calculation of complex Fourier series,&amp;rdquo; &lt;em&gt;Math. Comput.&lt;/em&gt; 19: 297-301.</source>
          <target state="translated">クーリー、ジェームズW.、およびジョンW.チューキー、1965、「複雑なフーリエ級数の機械計算のためのアルゴリズム」、&lt;em&gt;数学。計算。&lt;/em&gt;19：297-301。</target>
        </trans-unit>
        <trans-unit id="4f10880a810fc661c1a011a38c57406e757bc819" translate="yes" xml:space="preserve">
          <source>Coordinating voluntary mediation: if all involved parties agree, the Committee may facilitate a mediation process as detailed above.</source>
          <target state="translated">任意調停の調整:すべての関係者が同意した場合、委員会は上記のように調停プロセスを促進することができます。</target>
        </trans-unit>
        <trans-unit id="c60c368d84ce78415fed3fba568bb8b1ea3d29ea" translate="yes" xml:space="preserve">
          <source>Copies and Views</source>
          <target state="translated">コピーとビュー</target>
        </trans-unit>
        <trans-unit id="6c00b1c278cb1ce0a4df76e32fd03a9e07108220" translate="yes" xml:space="preserve">
          <source>Copies values from one array to another, broadcasting as necessary.</source>
          <target state="translated">ある配列から別の配列に値をコピーし,必要に応じてブロードキャストします.</target>
        </trans-unit>
        <trans-unit id="c60275d5c5be7a657ffd107291e98055ec17c0e9" translate="yes" xml:space="preserve">
          <source>Copy an element of an array to a standard Python scalar and return it.</source>
          <target state="translated">配列の要素を標準のPythonスカラにコピーして返します。</target>
        </trans-unit>
        <trans-unit id="da203dab271c623df22148990806ffd79128f7db" translate="yes" xml:space="preserve">
          <source>Copy from the source array, &lt;code&gt;src&lt;/code&gt;, into the destination array, &lt;code&gt;dest&lt;/code&gt;, performing a data-type conversion if necessary. If an error occurs return -1 (otherwise 0). The shape of &lt;code&gt;src&lt;/code&gt; must be broadcastable to the shape of &lt;code&gt;dest&lt;/code&gt;. The data areas of dest and src must not overlap.</source>
          <target state="translated">ソース配列 &lt;code&gt;src&lt;/code&gt; から宛先配列 &lt;code&gt;dest&lt;/code&gt; にコピーし、必要に応じてデータ型変換を実行します。エラーが発生した場合は-1（それ以外の場合は0）を返します。形状 &lt;code&gt;src&lt;/code&gt; の形状にbroadcastableでなければなりません &lt;code&gt;dest&lt;/code&gt; 。destとsrcのデータ領域は重複してはなりません。</target>
        </trans-unit>
        <trans-unit id="262c05dc573579847cb9294e40ece37b568232d5" translate="yes" xml:space="preserve">
          <source>Copy of &lt;code&gt;a&lt;/code&gt; with fields repacked, or &lt;code&gt;a&lt;/code&gt; itself if no repacking was needed.</source>
          <target state="translated">フィールドが再パックされ &lt;code&gt;a&lt;/code&gt; コピー、または再パックが必要ない場合 &lt;code&gt;a&lt;/code&gt; それ自体。</target>
        </trans-unit>
        <trans-unit id="9cf4b88f8aea8dc3032e39289c48a6f6e4000cca" translate="yes" xml:space="preserve">
          <source>Copy of self.</source>
          <target state="translated">自己のコピー。</target>
        </trans-unit>
        <trans-unit id="0f7a2502580eeb2a37c3da78f6d85e2d28d19dcb" translate="yes" xml:space="preserve">
          <source>Copy of the array, cast to a specified type.</source>
          <target state="translated">配列のコピーで、指定された型にキャストされます。</target>
        </trans-unit>
        <trans-unit id="1855ebfecee0e89a08817f0c462727dd9e51acd0" translate="yes" xml:space="preserve">
          <source>Copy the mask and set the sharedmask flag to False.</source>
          <target state="translated">マスクをコピーし、sharedmaskフラグをFalseに設定します。</target>
        </trans-unit>
        <trans-unit id="eda7f5e21aefc109d198cff2108b69be2a88ea2f" translate="yes" xml:space="preserve">
          <source>Copy-on-write memmap:</source>
          <target state="translated">コピーオンライトのmemmap。</target>
        </trans-unit>
        <trans-unit id="9efdf61f90e514f177252ac8197d7a3fecad778b" translate="yes" xml:space="preserve">
          <source>Copy-on-write: assignments affect data in memory, but changes are not saved to disk. The file on disk is read-only.</source>
          <target state="translated">コピーオンライト:割り当てはメモリ内のデータに影響を与えますが、変更はディスクに保存されません。ディスク上のファイルは読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="86da9f97b2521b0d5afa29bd95ef4ddf151eeb02" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2005, NumPy Developers</source>
          <target state="translated">Copyright (c)2005,NumPy Developers</target>
        </trans-unit>
        <trans-unit id="5b33d787803ee72e85555afb13ca15c7e8e68b1e" translate="yes" xml:space="preserve">
          <source>Core Dimension</source>
          <target state="translated">コア寸法</target>
        </trans-unit>
        <trans-unit id="a935f62f1a313ebc5f0b4349a182f187ea660c8d" translate="yes" xml:space="preserve">
          <source>Core dimensions assigned to the same label in the signature (e.g. the &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;inner1d&lt;/code&gt;&amp;rsquo;s &lt;code&gt;(i),(i)-&amp;gt;()&lt;/code&gt;) must have exactly matching sizes, no broadcasting is performed.</source>
          <target state="translated">署名に同じラベルに割り当てられたコアの寸法（例えば &lt;code&gt;i&lt;/code&gt; で &lt;code&gt;inner1d&lt;/code&gt; さん &lt;code&gt;(i),(i)-&amp;gt;()&lt;/code&gt; ）正確に一致する大きさを持っている必要があり、何の放送が行われません。</target>
        </trans-unit>
        <trans-unit id="a85e68f4d74fe8012fbcc947dee9e830301ccda9" translate="yes" xml:space="preserve">
          <source>Core dimensions assigned to the same label in the signature must have exactly matching sizes, no broadcasting is performed.</source>
          <target state="translated">署名の中の同じラベルに割り当てられたコア寸法は、サイズが完全に一致していなければならず、ブロードキャストは行われない。</target>
        </trans-unit>
        <trans-unit id="77d90b4a2e78538417c275f69722b0ac5a0a99f5" translate="yes" xml:space="preserve">
          <source>Core dimensions of each input or output array are represented by a list of dimension names in parentheses, &lt;code&gt;(i_1,...,i_N)&lt;/code&gt;; a scalar input/output is denoted by &lt;code&gt;()&lt;/code&gt;. Instead of &lt;code&gt;i_1&lt;/code&gt;, &lt;code&gt;i_2&lt;/code&gt;, etc, one can use any valid Python variable name.</source>
          <target state="translated">各入力または出力配列のコアディメンションは、括弧内のディメンション名のリスト &lt;code&gt;(i_1,...,i_N)&lt;/code&gt; ます。スカラー入出力は &lt;code&gt;()&lt;/code&gt; で示されます。 &lt;code&gt;i_1&lt;/code&gt; 、 &lt;code&gt;i_2&lt;/code&gt; などの代わりに、有効な任意のPython変数名を使用できます。</target>
        </trans-unit>
        <trans-unit id="74fda43cf5b94de17f1701a1daa8838cd689d1ac" translate="yes" xml:space="preserve">
          <source>Core signature string</source>
          <target state="translated">コア署名文字列</target>
        </trans-unit>
        <trans-unit id="9a73d7eeec664afb4494a9c7d06291968be1807f" translate="yes" xml:space="preserve">
          <source>Cormen, &amp;ldquo;Introduction to Algorithms&amp;rdquo;, Chapter 15.2, p. 370-378</source>
          <target state="translated">コーメン、「アルゴリズムの概要」、第15.2章、p。370-378</target>
        </trans-unit>
        <trans-unit id="eac6a2ed482be56481c69c9e34966e627a3d0405" translate="yes" xml:space="preserve">
          <source>Correcting technical inaccuracies in the documentation are high priority. For example, if a docstring is missing a parameter or the description of a fuction/parameter/method etc. is incorrect. Other &amp;ldquo;structural&amp;rdquo; defects like broken links are also high priority.</source>
          <target state="translated">ドキュメントの技術的な誤りを修正することは最優先事項です。たとえば、docstringにパラメータがない場合や、関数/パラメータ/メソッドなどの説明が正しくない場合です。壊れたリンクのような他の「構造的」欠陥も優先度が高いです。</target>
        </trans-unit>
        <trans-unit id="e09f45c90809a295b044ca045b6666387613a15c" translate="yes" xml:space="preserve">
          <source>Correlating</source>
          <target state="translated">Correlating</target>
        </trans-unit>
        <trans-unit id="c3ffb59304cd35f5989ecead23c1e787437b571d" translate="yes" xml:space="preserve">
          <source>Correspondingly, when the spectrum is purely real, the signal is Hermitian. The &lt;a href=&quot;generated/numpy.fft.hfft#numpy.fft.hfft&quot;&gt;&lt;code&gt;hfft&lt;/code&gt;&lt;/a&gt; family of functions exploits this symmetry by using &lt;code&gt;n/2+1&lt;/code&gt; complex points in the input (time) domain for &lt;code&gt;n&lt;/code&gt; real points in the frequency domain.</source>
          <target state="translated">同様に、スペクトルが純粋に実数である場合、信号はエルミートです。&lt;a href=&quot;generated/numpy.fft.hfft#numpy.fft.hfft&quot;&gt; &lt;code&gt;hfft&lt;/code&gt; &lt;/a&gt;関数のファミリーは、使用して、この対称性を利用する &lt;code&gt;n/2+1&lt;/code&gt; の入力（時間）のドメイン内の複合点を &lt;code&gt;n&lt;/code&gt; の周波数領域における実際の点。</target>
        </trans-unit>
        <trans-unit id="ef15bde640af7d5282d372b3668304d3b57605b8" translate="yes" xml:space="preserve">
          <source>Cosine element-wise.</source>
          <target state="translated">コサイン要素別。</target>
        </trans-unit>
        <trans-unit id="bb2b145a0846bc476ba8ae803dd9b740cb6457fc" translate="yes" xml:space="preserve">
          <source>Council Members invited to NumPy Developer Meetings.</source>
          <target state="translated">カウンシルメンバーをNumPy開発者ミーティングに招待しました。</target>
        </trans-unit>
        <trans-unit id="aab7364e9bda4d60657cb8306378b5c5f960cc4a" translate="yes" xml:space="preserve">
          <source>Council decision making</source>
          <target state="translated">審議会の決定</target>
        </trans-unit>
        <trans-unit id="e11cba1a9aa3f53d0063ccb87482cf72fbf79615" translate="yes" xml:space="preserve">
          <source>Council membership</source>
          <target state="translated">協議会のメンバー</target>
        </trans-unit>
        <trans-unit id="f85bd4ac12155f7ab384c763ede09ca77aca792b" translate="yes" xml:space="preserve">
          <source>Count masked elements in array or along a given axis.</source>
          <target state="translated">配列内または指定された軸に沿ってマスクされた要素をカウントします。</target>
        </trans-unit>
        <trans-unit id="dc43a8e6604d12ce95e869b8a107c8a135d37cfb" translate="yes" xml:space="preserve">
          <source>Count non-masked elements.</source>
          <target state="translated">マスクされていない要素をカウントします。</target>
        </trans-unit>
        <trans-unit id="fcd7647bccacf473f6f7538a24a5d644b1446db8" translate="yes" xml:space="preserve">
          <source>Count number of occurrences of each value in array of non-negative ints.</source>
          <target state="translated">非負のイント数の配列における各値の出現回数をカウントします。</target>
        </trans-unit>
        <trans-unit id="32c1e63927fc36a57080f439614d4f3a9e9a4010" translate="yes" xml:space="preserve">
          <source>Count the non-masked elements of the array along the given axis.</source>
          <target state="translated">指定された軸に沿って,配列のマスクされていない要素を数えます.</target>
        </trans-unit>
        <trans-unit id="f478aa803be450d56ad50466a52a872cccc5840c" translate="yes" xml:space="preserve">
          <source>Count the number of masked elements along the given axis.</source>
          <target state="translated">指定された軸に沿ってマスクされた要素の数を数えます。</target>
        </trans-unit>
        <trans-unit id="78bd22c42b14c011a02df9e7d1c6c3966b587ac6" translate="yes" xml:space="preserve">
          <source>Counter to use in the Philox state. Can be either a Python int (long in 2.x) in [0, 2**256) or a 4-element uint64 array. If not provided, the RNG is initialized at 0.</source>
          <target state="translated">Philox の状態で使用するカウンタ。0,2**256)のPython int (2.xではlong)か、4要素のuint64配列を指定します。省略した場合、RNGは0で初期化されます。</target>
        </trans-unit>
        <trans-unit id="7810ca2eec9994e430b34bfbe7314516c25672d5" translate="yes" xml:space="preserve">
          <source>Counting</source>
          <target state="translated">Counting</target>
        </trans-unit>
        <trans-unit id="341d54df06a257a5db8eb7bb0f7914e4712491fe" translate="yes" xml:space="preserve">
          <source>Counting the missing elements</source>
          <target state="translated">不足している要素を数える</target>
        </trans-unit>
        <trans-unit id="e51f7ebad6498090d852d60e0437352e55df1b6d" translate="yes" xml:space="preserve">
          <source>Counts how many valid days are in a half-open date range.</source>
          <target state="translated">半開きの日付範囲内にある有効な日の数を数えます。</target>
        </trans-unit>
        <trans-unit id="ab06dd416d9201cfa1a776030c3073f0f296ef5c" translate="yes" xml:space="preserve">
          <source>Counts the number of non-zero elements in the array object &lt;em&gt;self&lt;/em&gt;.</source>
          <target state="translated">配列オブジェクト&lt;em&gt;selfの&lt;/em&gt;ゼロ以外の要素の数をカウントします。</target>
        </trans-unit>
        <trans-unit id="35b1783f22a005e4a0e9aa8326071116370e26da" translate="yes" xml:space="preserve">
          <source>Counts the number of non-zero elements in the input array.</source>
          <target state="translated">入力配列に含まれる0以外の要素の数を数えます。</target>
        </trans-unit>
        <trans-unit id="c93aeb4f5df8b4c7a7489b48cdc9da95b95d9241" translate="yes" xml:space="preserve">
          <source>Counts the number of non-zero values in the array &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">配列 &lt;code&gt;a&lt;/code&gt; のゼロ以外の値の数をカウントします。</target>
        </trans-unit>
        <trans-unit id="a82b9a1216f695b2de1af812d1dbbca1ab80309a" translate="yes" xml:space="preserve">
          <source>Counts the number of valid days between &lt;code&gt;begindates&lt;/code&gt; and &lt;code&gt;enddates&lt;/code&gt;, not including the day of &lt;code&gt;enddates&lt;/code&gt;.</source>
          <target state="translated">間の有効日数カウント &lt;code&gt;begindates&lt;/code&gt; と &lt;code&gt;enddates&lt;/code&gt; の日を含まず、 &lt;code&gt;enddates&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="a0a5fdf81f7e55534496f51fe8e4d85151e98bfe" translate="yes" xml:space="preserve">
          <source>Covariance check in &lt;code&gt;np.random.multivariate_normal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;np.random.multivariate_normal&lt;/code&gt; の共分散チェック</target>
        </trans-unit>
        <trans-unit id="2ef356fd3fb8d0846092b2d591c24bc20398772e" translate="yes" xml:space="preserve">
          <source>Covariance in &lt;code&gt;random.mvnormal&lt;/code&gt; cast to double</source>
          <target state="translated">&lt;code&gt;random.mvnormal&lt;/code&gt; の共分散を2倍にキャスト</target>
        </trans-unit>
        <trans-unit id="0acc19acc7d5ef1e19db778f62f9ff93707d13fa" translate="yes" xml:space="preserve">
          <source>Covariance indicates the level to which two variables vary together. From the multivariate normal distribution, we draw N-dimensional samples,</source>
          <target state="translated">共分散は、2つの変数が一緒に変化するレベルを示します。多変量正規分布から、N次元の標本を描く。</target>
        </trans-unit>
        <trans-unit id="146d5410def5b1425b9181e3a3d6c9a98ceaffcd" translate="yes" xml:space="preserve">
          <source>Covariance indicates the level to which two variables vary together. If we examine N-dimensional samples,</source>
          <target state="translated">共分散は、2つの変数が一緒に変化するレベルを示します。N次元の標本を調べると</target>
        </trans-unit>
        <trans-unit id="7e3640f844cf3cff392814080ea6e4fc7ebf5942" translate="yes" xml:space="preserve">
          <source>Covariance matrix</source>
          <target state="translated">共分散行列</target>
        </trans-unit>
        <trans-unit id="ba1dce691b3dd8e45383b40c4c84fa04284a8fb4" translate="yes" xml:space="preserve">
          <source>Covariance matrix of the distribution. It must be symmetric and positive-semidefinite for proper sampling.</source>
          <target state="translated">分布の共分散行列.適切なサンプリングのためには、対称で正半定値でなければならない。</target>
        </trans-unit>
        <trans-unit id="68e8573d798a126e105247a473e35026f11fa4f8" translate="yes" xml:space="preserve">
          <source>Create Fortran subroutine wrappers to Fortran functions. &lt;code&gt;--wrap-functions&lt;/code&gt; is default because it ensures maximum portability and compiler independence.</source>
          <target state="translated">Fortran関数へのFortranサブルーチンラッパーを作成します。 &lt;code&gt;--wrap-functions&lt;/code&gt; は、最大限の移植性とコンパイラーの独立性を保証するため、デフォルトです。</target>
        </trans-unit>
        <trans-unit id="e198169e22830014df6d95b3cbbb568dc11dce1f" translate="yes" xml:space="preserve">
          <source>Create a 2-D array with the flattened input as a diagonal.</source>
          <target state="translated">入力を平坦化したものを対角線として2次元配列を作成します。</target>
        </trans-unit>
        <trans-unit id="a59869cacd92085b66bb144f1578d32820c3bbe9" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;generated/numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; を&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="e8c7020003f7473689a082f3999dbe024d7d290f" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; を&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="cf1fd6b11165877b30f8adf628ec7e27985f2765" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; を&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="c66092d36950339cb427dfcbe2dfba19b7f580ca" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;chararray&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chararray&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="053bb3dd5cd61ee6d9da229f972809abcee13ee6" translate="yes" xml:space="preserve">
          <source>Create a boolean mask from an array.</source>
          <target state="translated">配列からブーリアンマスクを作成します。</target>
        </trans-unit>
        <trans-unit id="54302d91f2b68bad9fdaaab3e8712a1aa2f411dc" translate="yes" xml:space="preserve">
          <source>Create a branch for the feature you want to work on. Since the branch name will appear in the merge message, use a sensible name such as &amp;lsquo;linspace-speedups&amp;rsquo;:</source>
          <target state="translated">作業する機能のブランチを作成します。ブランチ名はマージメッセージに表示されるため、「linspace-speedups」などのわかりやすい名前を使用してください。</target>
        </trans-unit>
        <trans-unit id="d93c678b3ed0b4d36476f41968f0182b90056627" translate="yes" xml:space="preserve">
          <source>Create a data type object.</source>
          <target state="translated">データ型オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="a87756a536e33363736738458832ff08b923fefb" translate="yes" xml:space="preserve">
          <source>Create a data-type.</source>
          <target state="translated">データ型を作成します。</target>
        </trans-unit>
        <trans-unit id="93eb0ae31609f0ed48c3c5dfd8b5a3cb8402ac97" translate="yes" xml:space="preserve">
          <source>Create a matrix of the given shape and propagate it with random samples from a uniform distribution over &lt;code&gt;[0, 1)&lt;/code&gt;.</source>
          <target state="translated">与えられた形状の行列を作成し、それを &lt;code&gt;[0, 1)&lt;/code&gt; 上の均一分布からのランダムサンプルで伝播します。</target>
        </trans-unit>
        <trans-unit id="c295b748c8517694492f48fd31f9b376f9c645c8" translate="yes" xml:space="preserve">
          <source>Create a memmap with dtype and shape that matches our data:</source>
          <target state="translated">データと一致するdtypeと形状のメモマップを作成します。</target>
        </trans-unit>
        <trans-unit id="19e2c3798e7032d352bdeb16a194e1b2b2271bab" translate="yes" xml:space="preserve">
          <source>Create a memory-map to an array stored in a &lt;em&gt;binary&lt;/em&gt; file on disk.</source>
          <target state="translated">ディスク上の&lt;em&gt;バイナリ&lt;/em&gt;ファイルに格納されている配列へのメモリマップを作成します。</target>
        </trans-unit>
        <trans-unit id="8a87bd8b7d3a950e18b45a000e101dc7d4817b57" translate="yes" xml:space="preserve">
          <source>Create a memory-map to an array stored in a binary file on disk.</source>
          <target state="translated">ディスク上のバイナリファイルに格納された配列へのメモリマップを作成します。</target>
        </trans-unit>
        <trans-unit id="177322a71483684c72dfc2b3215cca2baa8b7843" translate="yes" xml:space="preserve">
          <source>Create a memory-map to an array stored in a file on disk.</source>
          <target state="translated">ディスク上のファイルに格納されている配列へのメモリマップを作成します。</target>
        </trans-unit>
        <trans-unit id="dd122b2ab92f93dade4d0598cccec22c13f3cc51" translate="yes" xml:space="preserve">
          <source>Create a new 1-dimensional array from an iterable object.</source>
          <target state="translated">イテレート可能なオブジェクトから新しい1次元配列を作成します。</target>
        </trans-unit>
        <trans-unit id="da0150ead372af08b1b57e37f89fc0a11de82d56" translate="yes" xml:space="preserve">
          <source>Create a new array with the provided data-type descriptor, &lt;em&gt;descr&lt;/em&gt;, of the shape determined by &lt;em&gt;nd&lt;/em&gt; and &lt;em&gt;dims&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;nd&lt;/em&gt;および&lt;em&gt;dims&lt;/em&gt;によって決定される形状の、提供されたデータ型記述子&lt;em&gt;descrを&lt;/em&gt;使用して新しい配列を作成します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66aa9bc65510d6c47313fc8c574666e0fb6ecdf0" translate="yes" xml:space="preserve">
          <source>Create a new broadcasting universal function from required variables. Each ufunc builds around the notion of an element-by-element operation. Each ufunc object contains pointers to 1-d loops implementing the basic functionality for each supported type.</source>
          <target state="translated">必要な変数から新しいブロードキャストユニバーサル関数を作成します。各 ufunc は、要素ごとの操作の概念を中心に構築されています。各 ufunc オブジェクトは、サポートされている各型の基本的な機能を実装した 1-d ループへのポインタを含んでいます。</target>
        </trans-unit>
        <trans-unit id="4a2f526f17ce7c95e1ecc2546f61cdc127fd9387" translate="yes" xml:space="preserve">
          <source>Create a new data-type object from the built-in (or user-registered) data-type indicated by &lt;em&gt;typenum&lt;/em&gt;. All builtin types should not have any of their fields changed. This creates a new copy of the &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr&lt;/code&gt;&lt;/a&gt; structure so that you can fill it in as appropriate. This function is especially needed for flexible data-types which need to have a new elsize member in order to be meaningful in array construction.</source>
          <target state="translated">&lt;em&gt;typenumで&lt;/em&gt;示される&lt;em&gt;組み込み&lt;/em&gt;（またはユーザー登録）データ型から新しいデータ型オブジェクトを作成します。すべての組み込み型のフィールドは変更しないでください。これにより、&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt; &lt;code&gt;PyArray_Descr&lt;/code&gt; &lt;/a&gt;構造の新しいコピーが作成され、必要に応じて入力できるようになります。この関数は、配列構成で意味を持つために新しいelsizeメンバーを必要とする柔軟なデータ型に特に必要です。</target>
        </trans-unit>
        <trans-unit id="9f73a3ca4eff6106e72eaaa362a06b983218e17c" translate="yes" xml:space="preserve">
          <source>Create a new data-type object from the built-in (or user-registered) data-type indicated by &lt;em&gt;typenum&lt;/em&gt;. All builtin types should not have any of their fields changed. This creates a new copy of the &lt;a href=&quot;types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr&lt;/code&gt;&lt;/a&gt; structure so that you can fill it in as appropriate. This function is especially needed for flexible data-types which need to have a new elsize member in order to be meaningful in array construction.</source>
          <target state="translated">&lt;em&gt;typenumで&lt;/em&gt;示される&lt;em&gt;組み込み&lt;/em&gt;（またはユーザー登録）データ型から新しいデータ型オブジェクトを作成します。すべての組み込みタイプで、フィールドを変更しないでください。これにより、&lt;a href=&quot;types-and-structures#c.PyArray_Descr&quot;&gt; &lt;code&gt;PyArray_Descr&lt;/code&gt; &lt;/a&gt;構造の新しいコピーが作成され、必要に応じて入力できるようになります。この関数は、配列の構築で意味のあるものにするために新しいelsizeメンバーを持つ必要がある柔軟なデータ型に特に必要です。</target>
        </trans-unit>
        <trans-unit id="2566b193178a539463843e8aa80394649f42e4a2" translate="yes" xml:space="preserve">
          <source>Create a new data-type object with the byteorder set according to &lt;em&gt;newendian&lt;/em&gt;. All referenced data-type objects (in subdescr and fields members of the data-type object) are also changed (recursively). If a byteorder of &lt;code&gt;NPY_IGNORE&lt;/code&gt; is encountered it is left alone. If newendian is &lt;code&gt;NPY_SWAP&lt;/code&gt;, then all byte-orders are swapped. Other valid newendian values are &lt;code&gt;NPY_NATIVE&lt;/code&gt;, &lt;code&gt;NPY_LITTLE&lt;/code&gt;, and &lt;code&gt;NPY_BIG&lt;/code&gt; which all cause the returned data-typed descriptor (and all it&amp;rsquo;s referenced data-type descriptors) to have the corresponding byte- order.</source>
          <target state="translated">&lt;em&gt;newendian&lt;/em&gt;に従って&lt;em&gt;バイトオーダーが&lt;/em&gt;設定された新しいデータ型オブジェクトを作成します。参照されるすべてのデータ型オブジェクト（データ型オブジェクトのsubdescrおよびfieldsメンバー内）も（再帰的に）変更されます。 &lt;code&gt;NPY_IGNORE&lt;/code&gt; のバイトオーダーが発生した場合、それはそのままになります。 newendianが &lt;code&gt;NPY_SWAP&lt;/code&gt; の場合、すべてのバイト順が入れ替えられます。その他の有効なニューエンディアン値は &lt;code&gt;NPY_NATIVE&lt;/code&gt; 、 &lt;code&gt;NPY_LITTLE&lt;/code&gt; 、および &lt;code&gt;NPY_BIG&lt;/code&gt; であり、これらはすべて、返されたデータ型記述子（およびそれが参照するすべてのデータ型記述子）に対応するバイト順を持たせます。</target>
        </trans-unit>
        <trans-unit id="f6986303dc6f9f6f31cfc3c9b4f4566a4e6fb42d" translate="yes" xml:space="preserve">
          <source>Create a new masked array from scratch.</source>
          <target state="translated">ゼロから新しいマスク付き配列を作成します。</target>
        </trans-unit>
        <trans-unit id="db4af2ef3a8605462d0c80d1288e39839d7838af" translate="yes" xml:space="preserve">
          <source>Create a new uninitialized array of type, &lt;em&gt;typenum&lt;/em&gt;, whose size in each of &lt;em&gt;nd&lt;/em&gt; dimensions is given by the integer array, &lt;em&gt;dims&lt;/em&gt;.The memory for the array is uninitialized (unless typenum is &lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; in which case each element in the array is set to NULL). The &lt;em&gt;typenum&lt;/em&gt; argument allows specification of any of the builtin data-types such as &lt;a href=&quot;c-api.dtype#c.NPY_FLOAT&quot;&gt;&lt;code&gt;NPY_FLOAT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;c-api.dtype#c.NPY_LONG&quot;&gt;&lt;code&gt;NPY_LONG&lt;/code&gt;&lt;/a&gt;. The memory for the array can be set to zero if desired using &lt;a href=&quot;#c.PyArray_FILLWBYTE&quot;&gt;&lt;code&gt;PyArray_FILLWBYTE&lt;/code&gt;&lt;/a&gt; (return_object, 0).This function cannot be used to create a flexible-type array (no itemsize given).</source>
          <target state="translated">タイプの新しい初期化されていないアレイ作成&lt;em&gt;typenum&lt;/em&gt;サイズのそれぞれにおいて、&lt;em&gt;ND&lt;/em&gt;寸法整数配列で与えられるが、&lt;em&gt;暗く&lt;/em&gt; typenumがない限り、アレイの【選択メモリ（初期化されていないれる&lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;アレイ内の各要素はNULLに設定されている場合に）。&lt;em&gt;typenumの&lt;/em&gt;引数は、次のような組み込みのデータ型のいずれかの指定可能&lt;a href=&quot;c-api.dtype#c.NPY_FLOAT&quot;&gt; &lt;code&gt;NPY_FLOAT&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;c-api.dtype#c.NPY_LONG&quot;&gt; &lt;code&gt;NPY_LONG&lt;/code&gt; を&lt;/a&gt;。配列のメモリは、必要に応じて&lt;a href=&quot;#c.PyArray_FILLWBYTE&quot;&gt; &lt;code&gt;PyArray_FILLWBYTE&lt;/code&gt; &lt;/a&gt;（return_object、0）を使用してゼロに設定できます。この関数を使用して、フレキシブルタイプの配列を作成することはできません（itemizeが指定されていません）。</target>
        </trans-unit>
        <trans-unit id="7aab9551cebdfb58f6a09ed773d97c8c60687ac0" translate="yes" xml:space="preserve">
          <source>Create a new uninitialized array of type, &lt;em&gt;typenum&lt;/em&gt;, whose size in each of &lt;em&gt;nd&lt;/em&gt; dimensions is given by the integer array, &lt;em&gt;dims&lt;/em&gt;.The memory for the array is uninitialized (unless typenum is &lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; in which case each element in the array is set to NULL). The &lt;em&gt;typenum&lt;/em&gt; argument allows specification of any of the builtin data-types such as &lt;a href=&quot;dtype#c.NPY_FLOAT&quot;&gt;&lt;code&gt;NPY_FLOAT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;dtype#c.NPY_LONG&quot;&gt;&lt;code&gt;NPY_LONG&lt;/code&gt;&lt;/a&gt;. The memory for the array can be set to zero if desired using &lt;a href=&quot;#c.PyArray_FILLWBYTE&quot;&gt;&lt;code&gt;PyArray_FILLWBYTE&lt;/code&gt;&lt;/a&gt; (return_object, 0).This function cannot be used to create a flexible-type array (no itemsize given).</source>
          <target state="translated">タイプの新しい初期化されていないアレイ作成&lt;em&gt;typenum&lt;/em&gt;サイズのそれぞれにおいて、&lt;em&gt;ND&lt;/em&gt;寸法整数配列で与えられるが、&lt;em&gt;暗く&lt;/em&gt;typenumがない限り、アレイの【選択メモリ（初期化されていないれる&lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;アレイ内の各要素はNULLに設定されている場合に）。&lt;em&gt;typenumの&lt;/em&gt;引数は、次のような組み込みのデータ型のいずれかの指定可能&lt;a href=&quot;dtype#c.NPY_FLOAT&quot;&gt; &lt;code&gt;NPY_FLOAT&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;dtype#c.NPY_LONG&quot;&gt; &lt;code&gt;NPY_LONG&lt;/code&gt; を&lt;/a&gt;。必要に応じて、&lt;a href=&quot;#c.PyArray_FILLWBYTE&quot;&gt; &lt;code&gt;PyArray_FILLWBYTE&lt;/code&gt; &lt;/a&gt;（return_object、0）を使用して、配列のメモリをゼロに設定できます。この関数を使用して、フレキシブルタイプの配列を作成することはできません（項目サイズは指定されていません）。</target>
        </trans-unit>
        <trans-unit id="6c0c8b6de66490941ae490fc29850f004942457f" translate="yes" xml:space="preserve">
          <source>Create a new, empty record array:</source>
          <target state="translated">新しい空のレコード配列を作成します。</target>
        </trans-unit>
        <trans-unit id="12be6a102aebbe485e0f4ef96e897bf893ee3bfe" translate="yes" xml:space="preserve">
          <source>Create a numpy array from a ctypes array or POINTER.</source>
          <target state="translated">ctypes配列やPOINTERからnumpy配列を作成します。</target>
        </trans-unit>
        <trans-unit id="9ee63618f71a45ca583020dce46ecb32ddd626d9" translate="yes" xml:space="preserve">
          <source>Create a recarray from a list of records in text form.</source>
          <target state="translated">テキスト形式でレコードのリストから再配列を作成します。</target>
        </trans-unit>
        <trans-unit id="f87d9a4b85041e6a4b8d29381cf85414f7e3a747" translate="yes" xml:space="preserve">
          <source>Create a record array from a (flat) list of arrays</source>
          <target state="translated">配列の (フラットな)リストからレコード配列を作成する</target>
        </trans-unit>
        <trans-unit id="74e43cb92af065a3e7ecff01e8979f35b3a0afd5" translate="yes" xml:space="preserve">
          <source>Create a record array from binary data</source>
          <target state="translated">バイナリデータからレコード配列を作成</target>
        </trans-unit>
        <trans-unit id="00bebe7beba9d200b07101646c92c66e5cd00025" translate="yes" xml:space="preserve">
          <source>Create a set of indices to access the diagonal of a (4, 4) array:</source>
          <target state="translated">(4,4)配列の対角線にアクセスするためのインデックスのセットを作成します。</target>
        </trans-unit>
        <trans-unit id="108a4b49ad391d95a892bf9a02c53f664759b30e" translate="yes" xml:space="preserve">
          <source>Create a standard ndarray and convert it to a record array, using &lt;code&gt;arr.view(np.recarray)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;arr.view(np.recarray)&lt;/code&gt; を使用して、標準のndarrayを作成し、それをレコード配列に変換します</target>
        </trans-unit>
        <trans-unit id="c5cd4653ebf1e7a39dd1a7fde57d136d86e370ff" translate="yes" xml:space="preserve">
          <source>Create a tuple of &lt;a href=&quot;numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; objects which iterate in nested loops over different axes of the op argument. The first iterator is used in the outermost loop, the last in the innermost loop. Advancing one will change the subsequent iterators to point at its new element.</source>
          <target state="translated">op引数の異なる軸でネストされたループで反復する&lt;a href=&quot;numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; &lt;/a&gt;オブジェクトのタプルを作成します。最初の反復子は最も外側のループで使用され、最後の反復子は最も内側のループで使用されます。1つ進めると、後続のイテレータが新しい要素を指すように変更されます。</target>
        </trans-unit>
        <trans-unit id="0fc61fbee0ed5e8baf16ecef1179e57ba0313e61" translate="yes" xml:space="preserve">
          <source>Create a two-dimensional array with the flattened input as a diagonal.</source>
          <target state="translated">入力を平坦化したものを対角線として2次元配列を作成します。</target>
        </trans-unit>
        <trans-unit id="137fea567dac73b2d57dd9dfb89ded4439c13d56" translate="yes" xml:space="preserve">
          <source>Create a view into the array with the given shape and strides.</source>
          <target state="translated">与えられた形状と歩幅で配列にビューを作成します。</target>
        </trans-unit>
        <trans-unit id="81d0dc00ee9f15e21759f9f0bec711bb9bd505df" translate="yes" xml:space="preserve">
          <source>Create an array from an iterator.</source>
          <target state="translated">イテレータから配列を作成します。</target>
        </trans-unit>
        <trans-unit id="925f773d387b010ea0e8a6321db588428ffb283e" translate="yes" xml:space="preserve">
          <source>Create an array from binary file data</source>
          <target state="translated">バイナリファイルのデータから配列を作成</target>
        </trans-unit>
        <trans-unit id="d2e4e179d70e58136861749bef7d847f8a1e83ea" translate="yes" xml:space="preserve">
          <source>Create an array of the given shape and populate it with random samples from a uniform distribution over &lt;code&gt;[0, 1)&lt;/code&gt;.</source>
          <target state="translated">指定された形状の配列を作成し、 &lt;code&gt;[0, 1)&lt;/code&gt; 上の均一分布からのランダムサンプルをその配列に追加します。</target>
        </trans-unit>
        <trans-unit id="8ef83bcd085ae088871cf8b9cc78b6a1d61e3207" translate="yes" xml:space="preserve">
          <source>Create an array with two fields, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;:</source>
          <target state="translated">2つのフィールド &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; を持つ配列を作成します。</target>
        </trans-unit>
        <trans-unit id="1a31fd94f016f355d7832212f15cccc2bc9c1da3" translate="yes" xml:space="preserve">
          <source>Create an array wrapper around &lt;em&gt;data&lt;/em&gt; pointed to by the given pointer. The array flags will have a default that the data area is well-behaved and C-style contiguous. The shape of the array is given by the &lt;em&gt;dims&lt;/em&gt; c-array of length &lt;em&gt;nd&lt;/em&gt;. The data-type of the array is indicated by &lt;em&gt;typenum&lt;/em&gt;. If data comes from another reference-counted Python object, the reference count on this object should be increased after the pointer is passed in, and the base member of the returned ndarray should point to the Python object that owns the data. This will ensure that the provided memory is not freed while the returned array is in existence. To free memory as soon as the ndarray is deallocated, set the OWNDATA flag on the returned ndarray.</source>
          <target state="translated">&lt;em&gt;指定&lt;/em&gt;されたポインタが指す&lt;em&gt;データの&lt;/em&gt;周りに配列ラッパーを作成します。配列フラグには、データ領域が適切に動作し、Cスタイルで隣接しているというデフォルトがあります。配列の形状は、長さ&lt;em&gt;ndの&lt;/em&gt;&lt;em&gt;dims&lt;/em&gt; c-array によって指定されます。配列のデータ型は&lt;em&gt;typenum&lt;/em&gt;で示され&lt;em&gt;ます&lt;/em&gt;。データが別の参照カウントされるPythonオブジェクトからのものである場合、このオブジェクトの参照カウントは、ポインターが渡された後に増加する必要があり、返されるndarrayのベースメンバーは、データを所有するPythonオブジェクトを指す必要があります。これにより、返された配列が存在する間、提供されたメモリが解放されなくなります。 ndarrayの割り当てが解除されるとすぐにメモリを解放するには、返されたndarrayにOWNDATAフラグを設定します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47d4d6e775fe88f4b80d5ea4c370f0f98678742c" translate="yes" xml:space="preserve">
          <source>Create an array x, with a reference y and a copy z:</source>
          <target state="translated">参照 y とコピー z を持つ配列 x を作成します。</target>
        </trans-unit>
        <trans-unit id="edf37af870193c853e5704f79fa46afda7f8ab49" translate="yes" xml:space="preserve">
          <source>Create an array, but leave its allocated memory unchanged (i.e., it contains &amp;ldquo;garbage&amp;rdquo;).</source>
          <target state="translated">配列を作成しますが、割り当てられたメモリは変更しません（つまり、「ガベージ」が含まれます）。</target>
        </trans-unit>
        <trans-unit id="f8c0528bb084a014ea88bd25616f60c460edbaf2" translate="yes" xml:space="preserve">
          <source>Create an array, each element of which is zero.</source>
          <target state="translated">各要素が0である配列を作成します。</target>
        </trans-unit>
        <trans-unit id="415b3ad3f5d5fec6811715fcb43c61600d019de3" translate="yes" xml:space="preserve">
          <source>Create an array.</source>
          <target state="translated">配列を作成します。</target>
        </trans-unit>
        <trans-unit id="efc38388dbd54fefe6577db0dc2a6d52f3139f02" translate="yes" xml:space="preserve">
          <source>Create and add an Extension instance to the ext_modules list. This method also takes the following optional keyword arguments that are passed on to the Extension constructor.</source>
          <target state="translated">Extension インスタンスを作成して ext_modules リストに追加します。このメソッドは、Extension コンストラクタに渡される以下のオプションのキーワード引数も取ります。</target>
        </trans-unit>
        <trans-unit id="2ce4b69bed16e520597783987ce2ba31407bbf8f" translate="yes" xml:space="preserve">
          <source>Create and array.</source>
          <target state="translated">作成して配列を作成します。</target>
        </trans-unit>
        <trans-unit id="47f0f6dfd19f6638cbffe16ed61164856442a40f" translate="yes" xml:space="preserve">
          <source>Create and plot a band-limited signal with random phases:</source>
          <target state="translated">ランダムな位相を持つバンド制限信号を作成し、プロットします。</target>
        </trans-unit>
        <trans-unit id="655209fbd053b66333cb2ad561c140174943d616" translate="yes" xml:space="preserve">
          <source>Create and plot an image with band-limited frequency content:</source>
          <target state="translated">バンド制限された周波数のコンテンツで画像を作成し、プロットします。</target>
        </trans-unit>
        <trans-unit id="383101a807508f28ca3ca4eeb51cf4c39ba642f6" translate="yes" xml:space="preserve">
          <source>Create and return a ctypes object from a numpy array. Actually anything that exposes the __array_interface__ is accepted.</source>
          <target state="translated">numpy配列からctypesオブジェクトを作成して返します。実際には__array_interface__を公開しているものなら何でもOKです。</target>
        </trans-unit>
        <trans-unit id="a48e85aeb37d4861d852029c32e85348705a141a" translate="yes" xml:space="preserve">
          <source>Create and return a new object.</source>
          <target state="translated">新しいオブジェクトを作成して返します。</target>
        </trans-unit>
        <trans-unit id="4624b630f46c030fc80adec33ba7cfd098ce660b" translate="yes" xml:space="preserve">
          <source>Create and return a new object. See help(type) for accurate signature.</source>
          <target state="translated">新しいオブジェクトを作成して返します。正確なシグネチャについては help(type)を参照してください。</target>
        </trans-unit>
        <trans-unit id="0f91b98f5452e2c2460f51aa523deeb885a2d07f" translate="yes" xml:space="preserve">
          <source>Create diagonal arrays.</source>
          <target state="translated">斜めの配列を作成します。</target>
        </trans-unit>
        <trans-unit id="391f555392e014f93bf9364fc1af0a11257ae60d" translate="yes" xml:space="preserve">
          <source>Create nditers for use in nested loops</source>
          <target state="translated">入れ子になったループで使用するための nditers を作成します。</target>
        </trans-unit>
        <trans-unit id="cae0d44191595c4c5d6b5d99613364849c4f295d" translate="yes" xml:space="preserve">
          <source>Create or load a memory-mapped &lt;code&gt;.npy&lt;/code&gt; file.</source>
          <target state="translated">メモリマップされた &lt;code&gt;.npy&lt;/code&gt; ファイルを作成またはロードします。</target>
        </trans-unit>
        <trans-unit id="9040f175bb70c201bfb2817bf6bea6562fe6e4f5" translate="yes" xml:space="preserve">
          <source>Create or overwrite existing file for reading and writing.</source>
          <target state="translated">読み書き用の既存のファイルを作成したり、上書きしたりします。</target>
        </trans-unit>
        <trans-unit id="7d3e4465c7d12c41465d4474c631ce7fad0815ab" translate="yes" xml:space="preserve">
          <source>Create release notes for next release and edit them to set the version:</source>
          <target state="translated">次回リリースのリリースノートを作成し、編集してバージョンを設定します。</target>
        </trans-unit>
        <trans-unit id="ccfa8e99c8012683a7ba3bd391a6f3c7a84556b0" translate="yes" xml:space="preserve">
          <source>Create your own forked copy of &lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPyの&lt;/a&gt;独自のフォークコピーを作成する</target>
        </trans-unit>
        <trans-unit id="61846b313aa9245b09505ad8b0e04ecefa609640" translate="yes" xml:space="preserve">
          <source>Create your own forked copy of NumPy</source>
          <target state="translated">NumPyのフォークされたコピーを作成する</target>
        </trans-unit>
        <trans-unit id="58d0f155eb04fd57d6905d8542d41ea23a2730f2" translate="yes" xml:space="preserve">
          <source>Creates a copy of the array with its elements rearranged in such a way that the value of the element in k-th position is in the position it would be in a sorted array. All elements smaller than the k-th element are moved before this element and all equal or greater are moved behind it. The ordering of the elements in the two partitions is undefined.</source>
          <target state="translated">k 番目の位置にある要素の値が,ソートされた配列の場合と同じ位置になるように要素を並べ替えた配列のコピーを作成します.k 番目の要素よりも小さい要素はすべてこの要素の前に移動され,それと同じかそれ以上の要素はすべてこの要素の後ろに移動されます.2つの分割された要素の順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="f7413e806f1e7017ca021144131a6ec01d636c42" translate="yes" xml:space="preserve">
          <source>Creates an iterator for broadcasting the &lt;code&gt;nop&lt;/code&gt; array objects provided in &lt;code&gt;op&lt;/code&gt;, using regular NumPy broadcasting rules.</source>
          <target state="translated">通常のNumPyブロードキャストルールを使用して、 &lt;code&gt;op&lt;/code&gt; で提供される &lt;code&gt;nop&lt;/code&gt; 配列オブジェクトをブロードキャストするためのイテレーターを作成します。</target>
        </trans-unit>
        <trans-unit id="a06033694dc7625f6a25df5e7e99097ece139dbb" translate="yes" xml:space="preserve">
          <source>Creates an iterator for the given numpy array object &lt;code&gt;op&lt;/code&gt;.</source>
          <target state="translated">指定されたnumpy配列オブジェクト &lt;code&gt;op&lt;/code&gt; のイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="78828519e213a24466ffb5a259ee09315af2dd29" translate="yes" xml:space="preserve">
          <source>Creating a brand-new ndarray</source>
          <target state="translated">新しいndarrayの作成</target>
        </trans-unit>
        <trans-unit id="4c9a2fc32b270bbf859d7e8b444ca05b83cb8242" translate="yes" xml:space="preserve">
          <source>Creating a compiled extension module</source>
          <target state="translated">コンパイルされた拡張モジュールの作成</target>
        </trans-unit>
        <trans-unit id="820c06a933939c73d0a9ac20d7eebafd53283b18" translate="yes" xml:space="preserve">
          <source>Creating a mask</source>
          <target state="translated">マスクの作成</target>
        </trans-unit>
        <trans-unit id="22c58c7da34bb9f0e0421a8ca349dd28b6296e32" translate="yes" xml:space="preserve">
          <source>Creating a new universal function</source>
          <target state="translated">新しいユニバーサル機能の創出</target>
        </trans-unit>
        <trans-unit id="021b57ac73287317d5590d713033a11127224262" translate="yes" xml:space="preserve">
          <source>Creating a view on a structured array so it can be used in calculations</source>
          <target state="translated">構造化された配列のビューを作成して計算に使用できるようにする</target>
        </trans-unit>
        <trans-unit id="98d1b3c0571161e2acd40362a47356cdc1716fa1" translate="yes" xml:space="preserve">
          <source>Creating aligned structs: In order to know how to offset a field when &lt;code&gt;align=True&lt;/code&gt;, numpy looks up &lt;code&gt;field.dtype.alignment&lt;/code&gt;. This includes fields which are nested structured arrays.</source>
          <target state="translated">整列構造体の作成： &lt;code&gt;align=True&lt;/code&gt; の場合にフィールドをオフセットする方法を知るために、numpyは &lt;code&gt;field.dtype.alignment&lt;/code&gt; を検索します。これには、ネストされた構造化配列であるフィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="d41cf53fbab96d2f7a854a59cb350d9b2f249330" translate="yes" xml:space="preserve">
          <source>Creating an array from sub-classes:</source>
          <target state="translated">サブクラスから配列を作成する</target>
        </trans-unit>
        <trans-unit id="8c75c1be94407cd0140876081367297865708e3a" translate="yes" xml:space="preserve">
          <source>Creating arrays</source>
          <target state="translated">配列の作成</target>
        </trans-unit>
        <trans-unit id="c3f30a8cafd252b4d8cf955140bef8bdccce3b29" translate="yes" xml:space="preserve">
          <source>Creating arrays from raw bytes through the use of strings or buffers</source>
          <target state="translated">文字列やバッファを使用して生のバイトから配列を作成する</target>
        </trans-unit>
        <trans-unit id="b0ac33e8f2407adfe99099892032a5786f48a98d" translate="yes" xml:space="preserve">
          <source>Creating character arrays (&lt;code&gt;numpy.char&lt;/code&gt;)</source>
          <target state="translated">文字配列の作成（ &lt;code&gt;numpy.char&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="46432ea81a249419eb894b0e722ae04982146aa4" translate="yes" xml:space="preserve">
          <source>Creating character arrays (numpy.char)</source>
          <target state="translated">文字配列の作成 (numpy.char)</target>
        </trans-unit>
        <trans-unit id="a79124329baf0d3880f6e8bd974face711ed90d3" translate="yes" xml:space="preserve">
          <source>Creating data types</source>
          <target state="translated">データ型の作成</target>
        </trans-unit>
        <trans-unit id="3623ceac932f771e89eb47270eaee4ca0c39adaa" translate="yes" xml:space="preserve">
          <source>Creating iterators for nested iteration requires some care. All the iterator operands must match exactly, or the calls to &lt;a href=&quot;#c.NpyIter_ResetBasePointers&quot;&gt;&lt;code&gt;NpyIter_ResetBasePointers&lt;/code&gt;&lt;/a&gt; will be invalid. This means that automatic copies and output allocation should not be used haphazardly. It is possible to still use the automatic data conversion and casting features of the iterator by creating one of the iterators with all the conversion parameters enabled, then grabbing the allocated operands with the &lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt;&lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt;&lt;/a&gt; function and passing them into the constructors for the rest of the iterators.</source>
          <target state="translated">ネストされた反復のイテレータを作成するには、いくつかの注意が必要です。すべてのイテレータオペランドは&lt;a href=&quot;#c.NpyIter_ResetBasePointers&quot;&gt; &lt;code&gt;NpyIter_ResetBasePointers&lt;/code&gt; &lt;/a&gt;する必要があります。そうでない場合、NpyIter_ResetBasePointersの呼び出しは無効になります。これは、自動コピーと出力割り当てを無計画に使用しないことを意味します。すべての変換パラメーターを有効にしてイテレーターの1つを作成し、&lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt; &lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt; &lt;/a&gt;関数で割り当てられたオペランドを取得して、残りのイテレーターのコンストラクターに渡すことで、イテレーターの自動データ変換およびキャスト機能を引き続き使用できます。 。</target>
        </trans-unit>
        <trans-unit id="c5120a7c7085b0117ed81c3444ff1fdacef6c111" translate="yes" xml:space="preserve">
          <source>Creating many similar tests</source>
          <target state="translated">多くの類似テストを作成する</target>
        </trans-unit>
        <trans-unit id="cd65696c60dbcb551b3daf8b05a72fdadc9b03e3" translate="yes" xml:space="preserve">
          <source>Creating matrices</source>
          <target state="translated">行列の作成</target>
        </trans-unit>
        <trans-unit id="8ce41076023051e5ea6ac0164916e896e2479308" translate="yes" xml:space="preserve">
          <source>Creating new content</source>
          <target state="translated">新しいコンテンツの作成</target>
        </trans-unit>
        <trans-unit id="f8566f4a691c15a8a1f5c39fe579a737ee96da57" translate="yes" xml:space="preserve">
          <source>Creating new from template</source>
          <target state="translated">テンプレートから新規作成</target>
        </trans-unit>
        <trans-unit id="1dcddc1ce5a75de776531479edb4473eaa2354c5" translate="yes" xml:space="preserve">
          <source>Creating record arrays (&lt;code&gt;numpy.rec&lt;/code&gt;)</source>
          <target state="translated">レコード配列の作成（ &lt;code&gt;numpy.rec&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="12ca61a4de400f605aa79c20a0e04cfbaf0dcca2" translate="yes" xml:space="preserve">
          <source>Creating source for a basic extension module</source>
          <target state="translated">基本拡張モジュールのソース作成</target>
        </trans-unit>
        <trans-unit id="63696d372e0aaf637bc994c371bc42b8f6e4087e" translate="yes" xml:space="preserve">
          <source>Creating structured datatypes with fields aligned like in a C-struct.</source>
          <target state="translated">C-struct のようにフィールドを並べて構造化されたデータ型を作成します。</target>
        </trans-unit>
        <trans-unit id="2712464a5e2217c7128b08bcbdf2f7946d38c558" translate="yes" xml:space="preserve">
          <source>Creating sub-types</source>
          <target state="translated">サブタイプの作成</target>
        </trans-unit>
        <trans-unit id="96d205bb00cdfe3e870ea73a689c67cb6a768ed7" translate="yes" xml:space="preserve">
          <source>Creating the so-called signature file that contains descriptions of wrappers to Fortran or C functions, also called as signatures of the functions. In the case of Fortran routines, F2PY can create initial signature file by scanning Fortran source codes and catching all relevant information needed to create wrapper functions.</source>
          <target state="translated">FortranやC関数へのラッパーの記述を含む、いわゆるシグネチャファイルを作成することは、関数のシグネチャとも呼ばれます。Fortranルーチンの場合、F2PYはFortranのソースコードをスキャンして、ラッパー関数の作成に必要な関連情報をすべてキャッチすることで、初期署名ファイルを作成することができます。</target>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="992b553e540425ae3d718ae9cdd9d55e984ad9f2" translate="yes" xml:space="preserve">
          <source>Cross referencing issues</source>
          <target state="translated">クロスリファレンスの問題</target>
        </trans-unit>
        <trans-unit id="5f939e5434d3a238da77ef47c3189ac69e40c937" translate="yes" xml:space="preserve">
          <source>Cross-correlation of two 1-dimensional sequences.</source>
          <target state="translated">2つの1次元配列の相互相関。</target>
        </trans-unit>
        <trans-unit id="ce4fe4b7616cb7e3999589959d2a7bacb5e2b9bf" translate="yes" xml:space="preserve">
          <source>Cube each element in a list.</source>
          <target state="translated">リスト内の各要素をキューブ化します。</target>
        </trans-unit>
        <trans-unit id="cef7283ebb85e8146a8a72c4b6a145c8d059da03" translate="yes" xml:space="preserve">
          <source>Cumulative product across array propagating NaNs.</source>
          <target state="translated">アレイ伝搬するNaNの累積積。</target>
        </trans-unit>
        <trans-unit id="5e3b67811bb5290b6df8dbec735818173117ec67" translate="yes" xml:space="preserve">
          <source>Cumulative sum across array propagating NaNs.</source>
          <target state="translated">アレイを伝搬するNaNの累積和。</target>
        </trans-unit>
        <trans-unit id="7f04d49b0ca659708fb8cdf77308d17fd7ecaa88" translate="yes" xml:space="preserve">
          <source>Cumulative sum of array elements.</source>
          <target state="translated">配列要素の累積和。</target>
        </trans-unit>
        <trans-unit id="be1f93951f8385e05b64a90a07a9e0bcf5915f65" translate="yes" xml:space="preserve">
          <source>Current build and release info</source>
          <target state="translated">現在のビルドとリリース情報</target>
        </trans-unit>
        <trans-unit id="140e87163ac45492f58df33d7f85da346c418f4c" translate="yes" xml:space="preserve">
          <source>Current flat index into the array.</source>
          <target state="translated">配列への現在のフラットインデックス。</target>
        </trans-unit>
        <trans-unit id="ac8d8307cb5f245348dc52bf7e74dacfa1f5d300" translate="yes" xml:space="preserve">
          <source>Current mask.</source>
          <target state="translated">現在のマスク。</target>
        </trans-unit>
        <trans-unit id="6d822d8eae2a5586708d12f293da8fa609a9719e" translate="yes" xml:space="preserve">
          <source>Current steering council and institutional partners</source>
          <target state="translated">現在の運営協議会と機関パートナー</target>
        </trans-unit>
        <trans-unit id="cd5147b0a52164a4549e9b585f0ff08d7760a518" translate="yes" xml:space="preserve">
          <source>Current vision for the documentation: NEP 44</source>
          <target state="translated">文書化のための現在のビジョン NEP 44</target>
        </trans-unit>
        <trans-unit id="e18fc4f0ee67a5e9ebb69623c0e9e58a258e5764" translate="yes" xml:space="preserve">
          <source>Currently F2PY uses &lt;code&gt;use&lt;/code&gt; statement only for linking call-back modules and &lt;code&gt;external&lt;/code&gt; arguments (call-back functions), see &lt;a href=&quot;python-usage#call-back-arguments&quot;&gt;Call-back arguments&lt;/a&gt;.</source>
          <target state="translated">現在、F2PYは、コールバックモジュールと &lt;code&gt;external&lt;/code&gt; 引数（コールバック関数）をリンクする &lt;code&gt;use&lt;/code&gt; のみuseステートメントを使用し&lt;a href=&quot;python-usage#call-back-arguments&quot;&gt;ます&lt;/a&gt;。コールバック引数を参照してください。</target>
        </trans-unit>
        <trans-unit id="df3e2af3c9d9f82f00a46adce3db218a6d9d7bd8" translate="yes" xml:space="preserve">
          <source>Currently SciPy project consists of two packages:</source>
          <target state="translated">現在のSciPyプロジェクトは2つのパッケージで構成されています。</target>
        </trans-unit>
        <trans-unit id="4c8eba10595ddae0a34a9053064e392f6c153817" translate="yes" xml:space="preserve">
          <source>Currently unused. Reserved for future use in caching hash values.</source>
          <target state="translated">現在は未使用です。ハッシュ値をキャッシュする際の将来の使用のために予約されています。</target>
        </trans-unit>
        <trans-unit id="145cfe69f9ee12a7e63bf71c0687c6ce0c39cf65" translate="yes" xml:space="preserve">
          <source>Currently, F2PY can handle only &lt;code&gt;&amp;lt;type spec&amp;gt;(kind=&amp;lt;kindselector&amp;gt;)&lt;/code&gt; declarations where &lt;code&gt;&amp;lt;kindselector&amp;gt;&lt;/code&gt; is a numeric integer (e.g. 1, 2, 4,&amp;hellip;), but not a function call &lt;code&gt;KIND(..)&lt;/code&gt; or any other expression. F2PY needs to know what would be the corresponding C type and a general solution for that would be too complicated to implement.</source>
          <target state="translated">現在、F2PYは &lt;code&gt;&amp;lt;type spec&amp;gt;(kind=&amp;lt;kindselector&amp;gt;)&lt;/code&gt; 宣言のみを処理できます。 &lt;code&gt;&amp;lt;kindselector&amp;gt;&lt;/code&gt; は数値整数（例：1、2、4、&amp;hellip;）ですが、関数呼び出し &lt;code&gt;KIND(..)&lt;/code&gt; やその他の宣言は処理できません。式。F2PYは、対応するCタイプが何であるかを知る必要があり、そのための一般的なソリューションは、実装するには複雑すぎます。</target>
        </trans-unit>
        <trans-unit id="f631f9b1db6465c5c04372152e01854b72379e32" translate="yes" xml:space="preserve">
          <source>Currently, if the dtypes of two void structured arrays are not equivalent the comparison fails, returning the scalar value &lt;code&gt;False&lt;/code&gt;. This behavior is deprecated as of numpy 1.10 and will raise an error or perform elementwise comparison in the future.</source>
          <target state="translated">現在、2つのvoid構造化配列のdtypeが同等でない場合、比較は失敗し、スカラー値 &lt;code&gt;False&lt;/code&gt; を返します。この動作はnumpy1.10で非推奨になり、エラーが発生するか、将来的に要素ごとの比較が実行されます。</target>
        </trans-unit>
        <trans-unit id="3f68764d7b78c95b99b7a50768f974a72eb6b57d" translate="yes" xml:space="preserve">
          <source>Currently, multiline blocks can be used in the following constructs:</source>
          <target state="translated">現在、多行ブロックは以下の構成で使用できます。</target>
        </trans-unit>
        <trans-unit id="1ec971cf59e41bf03ff0b8ea0be4953b0a386b53" translate="yes" xml:space="preserve">
          <source>Custom Binary Formats</source>
          <target state="translated">カスタムバイナリ形式</target>
        </trans-unit>
        <trans-unit id="06783a663f807b884b2eb6d800592782869e00d8" translate="yes" xml:space="preserve">
          <source>Custom Weekmasks</source>
          <target state="translated">カスタムウィークマスク</target>
        </trans-unit>
        <trans-unit id="1d0b954477df12202d9d55dc07f21f80ba093bd7" translate="yes" xml:space="preserve">
          <source>Custom formatter for printing arrays</source>
          <target state="translated">配列を印刷するためのカスタムフォーマッタ</target>
        </trans-unit>
        <trans-unit id="3966644e2ea8e16e33b47c7b0116b4a1b709d7fa" translate="yes" xml:space="preserve">
          <source>Customize compiler using distutils command.</source>
          <target state="translated">distutilsコマンドを使ってコンパイラをカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="64b498274251dc846a8266e75b8161b55fdddd9a" translate="yes" xml:space="preserve">
          <source>Customizing Your Environment</source>
          <target state="translated">環境のカスタマイズ</target>
        </trans-unit>
        <trans-unit id="de17aeb8ce7893d8e4e28838507dc6ef7fed1ff4" translate="yes" xml:space="preserve">
          <source>Cut and paste the &lt;code&gt;release/README.md&lt;/code&gt; file contents into the text window.</source>
          <target state="translated">&lt;code&gt;release/README.md&lt;/code&gt; ファイルの内容を切り取ってテキストウィンドウに貼り付けます。</target>
        </trans-unit>
        <trans-unit id="5794c902f31f869d8d4450d4791299177dd6f5bf" translate="yes" xml:space="preserve">
          <source>Cut-off ratio for small singular values of &lt;code&gt;a&lt;/code&gt;. For the purposes of rank determination, singular values are treated as zero if they are smaller than &lt;code&gt;rcond&lt;/code&gt; times the largest singular value of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; の小さな特異値のカットオフ比。彼らはより小さい場合ランク決意の目的のために、特異値はゼロとして扱われ &lt;code&gt;rcond&lt;/code&gt; の最大特異値回。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="963e5a96bd3d87f0909e596539f6dfa7d84581ea" translate="yes" xml:space="preserve">
          <source>Cutoff for small singular values. Singular values less than or equal to &lt;code&gt;rcond * largest_singular_value&lt;/code&gt; are set to zero. Broadcasts against the stack of matrices.</source>
          <target state="translated">小さな特異値のカットオフ。 &lt;code&gt;rcond * largest_singular_value&lt;/code&gt; 以下の特異値はゼロに設定されます。行列のスタックに対してブロードキャストします。</target>
        </trans-unit>
        <trans-unit id="55b3718b804d3ea7ee851e585782dfffc4ddaa91" translate="yes" xml:space="preserve">
          <source>Cygwin 98-4.10, Python 2.1.1(MSC) - echo tests fail i.e. redefining environment variables may not work. FIXED: don&amp;rsquo;t use cygwin echo! Comment: also &lt;code&gt;cmd /c echo&lt;/code&gt; will not work but redefining environment variables do work.</source>
          <target state="translated">Cygwin 98-4.10、Python 2.1.1（MSC）-エコーテストが失敗します。つまり、環境変数の再定義が機能しない場合があります。修正済み：cygwinエコーを使用しないでください！コメント： &lt;code&gt;cmd /c echo&lt;/code&gt; も機能しませんが、環境変数の再定義は機能します。</target>
        </trans-unit>
        <trans-unit id="a512b3fa69c6f1d48fcf3a95fedda64e98719115" translate="yes" xml:space="preserve">
          <source>Cygwin 98-4.10, Python 2.3.3(cygming special)</source>
          <target state="translated">Cygwin 98-4.10、Python 2.3.3(cygming special)</target>
        </trans-unit>
        <trans-unit id="39b8f070b55c1bb2bcdf01997cdd384c00db9971" translate="yes" xml:space="preserve">
          <source>Cython</source>
          <target state="translated">Cython</target>
        </trans-unit>
        <trans-unit id="898ed53167a601efcad103a351ac74f0deab9018" translate="yes" xml:space="preserve">
          <source>Cython API for random</source>
          <target state="translated">ランダム用の Cython API</target>
        </trans-unit>
        <trans-unit id="5b09f0f52904095d26507661044a8d945b4a254e" translate="yes" xml:space="preserve">
          <source>Cython access to the random distributions is provided via a &lt;code&gt;pxd&lt;/code&gt; file</source>
          <target state="translated">ランダム分布へのCythonアクセスは、 &lt;code&gt;pxd&lt;/code&gt; ファイルを介して提供されます</target>
        </trans-unit>
        <trans-unit id="cab171f549e39f88e9fb2ae5bfbde7bb14d36360" translate="yes" xml:space="preserve">
          <source>Cython can be used to directly access the functions in &lt;code&gt;numpy/random/c_distributions.pxd&lt;/code&gt;. This requires linking with the &lt;code&gt;npyrandom&lt;/code&gt; library located in &lt;code&gt;numpy/random/lib&lt;/code&gt;.</source>
          <target state="translated">Cythonを使用して、 &lt;code&gt;numpy/random/c_distributions.pxd&lt;/code&gt; 関数に直接アクセスできます。これには、 &lt;code&gt;numpy/random/lib&lt;/code&gt; にある &lt;code&gt;npyrandom&lt;/code&gt; ライブラリとリンクする必要があります。</target>
        </trans-unit>
        <trans-unit id="2d33edb994024c4ec1cd5e1f6bde059373980991" translate="yes" xml:space="preserve">
          <source>Cython can be used to unpack the &lt;code&gt;PyCapsule&lt;/code&gt; provided by a BitGenerator. This example uses &lt;a href=&quot;bit_generators/pcg64#numpy.random.PCG64&quot;&gt;&lt;code&gt;PCG64&lt;/code&gt;&lt;/a&gt; and the example from above. The usual caveats for writing high-performance code using Cython &amp;ndash; removing bounds checks and wrap around, providing array alignment information &amp;ndash; still apply.</source>
          <target state="translated">Cythonを使用して、 &lt;code&gt;PyCapsule&lt;/code&gt; 提供するPyCapsuleを解凍できます。この例では、&lt;a href=&quot;bit_generators/pcg64#numpy.random.PCG64&quot;&gt; &lt;code&gt;PCG64&lt;/code&gt; &lt;/a&gt;と上記の例を使用しています。Cythonを使用して高性能コードを作成する際の通常の警告（境界チェックとラップアラウンドの削除、配列の配置情報の提供）は引き続き適用されます。</target>
        </trans-unit>
        <trans-unit id="3b507900d710138d9fc14b9bf7ca033f1876815b" translate="yes" xml:space="preserve">
          <source>Cython can be used to unpack the &lt;code&gt;PyCapsule&lt;/code&gt; provided by a BitGenerator. This example uses &lt;a href=&quot;bit_generators/pcg64#numpy.random.pcg64.PCG64&quot;&gt;&lt;code&gt;PCG64&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;random_gauss_zig&lt;/code&gt;, the Ziggurat-based generator for normals, to fill an array. The usual caveats for writing high-performance code using Cython &amp;ndash; removing bounds checks and wrap around, providing array alignment information &amp;ndash; still apply.</source>
          <target state="translated">Cythonを使用して、 &lt;code&gt;PyCapsule&lt;/code&gt; によって提供されるPyCapsule を解凍できます。この例では、使用&lt;a href=&quot;bit_generators/pcg64#numpy.random.pcg64.PCG64&quot;&gt; &lt;code&gt;PCG64&lt;/code&gt; &lt;/a&gt;および &lt;code&gt;random_gauss_zig&lt;/code&gt; アレイを埋めるために、法線用ジグラットベースの発電機を、。Cythonを使用して高性能のコードを作成するための通常の警告&amp;ndash;境界チェックを削除してラップアラウンドし、配列の位置合わせ情報を提供する&amp;ndash;が引き続き適用されます。</target>
        </trans-unit>
        <trans-unit id="88359b7dfcae29dfe670a173f005b5e46f30ab8e" translate="yes" xml:space="preserve">
          <source>Cython is the extension mechanism of choice for several scientific Python libraries, including Scipy, Pandas, SAGE, scikit-image and scikit-learn, as well as the XML processing library LXML. The language and compiler are well-maintained.</source>
          <target state="translated">Cython は、Scipy、Pandas、SAGE、scikit-image、scikit-learn、XML 処理ライブラリ LXML など、いくつかの科学的な Python ライブラリの拡張メカニズムとして選ばれています。言語とコンパイラはよく整備されています。</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="9c77f3b5da6a716c0c8711c7937fc207582f88d6" translate="yes" xml:space="preserve">
          <source>D. J. Hand, F. Daly, D. Lunn, E. Ostrowski, A Handbook of Small Data Sets, CRC Press, 1994.</source>
          <target state="translated">D.J.ハンド、F.ダリー、D.ルン、E.オストロウスキー、小データセットのハンドブック、CRC プレス、1994 年。</target>
        </trans-unit>
        <trans-unit id="9e1a42a64a9db004ac248d750b3e5535fe6705bf" translate="yes" xml:space="preserve">
          <source>DECREF&amp;rsquo;s an array object which may have the (deprecated) &lt;a href=&quot;#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt; flag set without causing the contents to be copied back into the original array. Resets the &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt; flag on the base object. This is useful for recovering from an error condition when writeback semantics are used, but will lead to wrong results.</source>
          <target state="translated">DECREFは、（非推奨の）&lt;a href=&quot;#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt; &lt;/a&gt;フラグが設定されていて、内容が元の配列にコピーされない可能性がある配列オブジェクトです。ベースオブジェクトの&lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt;フラグをリセットします。これは、ライトバックセマンティクスが使用されている場合にエラー状態から回復するのに役立ちますが、誤った結果につながります。</target>
        </trans-unit>
        <trans-unit id="62c4f5e8f3e17d3ec22760be4806239a479b50bf" translate="yes" xml:space="preserve">
          <source>Dalgaard, Peter, &amp;ldquo;Introductory Statistics With R&amp;rdquo;, Springer, 2002.</source>
          <target state="translated">ダルガード、ピーター、「R入門統計」、スプリンガー、2002年。</target>
        </trans-unit>
        <trans-unit id="5101f6a6ee46d3f6405ba78646fba174a0c2beec" translate="yes" xml:space="preserve">
          <source>Dalgaard, Peter, &amp;ldquo;Introductory Statistics with R&amp;rdquo;, Springer-Verlag, 2002.</source>
          <target state="translated">ダルガード、ピーター、「R入門統計」、Springer-Verlag、2002年。</target>
        </trans-unit>
        <trans-unit id="4553061944cf001ceb7836359a71ad75f6dced22" translate="yes" xml:space="preserve">
          <source>Daniel Lemire., &amp;ldquo;Fast Random Integer Generation in an Interval&amp;rdquo;, ACM Transactions on Modeling and Computer Simulation 29 (1), 2019, &lt;a href=&quot;http://arxiv.org/abs/1805.10941&quot;&gt;http://arxiv.org/abs/1805.10941&lt;/a&gt;.</source>
          <target state="translated">Daniel Lemire。、「区間内の高速ランダム整数生成」、モデリングとコンピュータシミュレーションに関するACMトランザクション29（1）、2019、&lt;a href=&quot;http://arxiv.org/abs/1805.10941&quot;&gt;http：//arxiv.org/abs/1805.10941&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4caaaf9cb8047a53fc77dfac273916c0e02f27d3" translate="yes" xml:space="preserve">
          <source>Darwin 7.2.0, Python 2.3</source>
          <target state="translated">Darwin 7.2.0,Python 2.3</target>
        </trans-unit>
        <trans-unit id="5022178af7e5aff72e419a94ea0af31d5816c478" translate="yes" xml:space="preserve">
          <source>Data Type API</source>
          <target state="translated">データ型API</target>
        </trans-unit>
        <trans-unit id="d173cb51d3ffa8369ddc5c7d9051236f920814da" translate="yes" xml:space="preserve">
          <source>Data access</source>
          <target state="translated">データアクセス</target>
        </trans-unit>
        <trans-unit id="523c14055a678c599d9f00d61258747011db43d5" translate="yes" xml:space="preserve">
          <source>Data and dtype endianness don&amp;rsquo;t match, change dtype to match data</source>
          <target state="translated">データとdtypeのエンディアンが一致しません。データと一致するようにdtypeを変更してください</target>
        </trans-unit>
        <trans-unit id="735479602dd9aae7423946b4c08fff04f057504a" translate="yes" xml:space="preserve">
          <source>Data and dtype endianness match, swap data and dtype</source>
          <target state="translated">データとdtypeのエンディアン一致、データとdtypeのスワップ</target>
        </trans-unit>
        <trans-unit id="835c3b4de5eb7adc697a6010300141561c8ef58d" translate="yes" xml:space="preserve">
          <source>Data and type endianness don&amp;rsquo;t match, change data to match dtype</source>
          <target state="translated">データとタイプのエンディアンが一致しません。dtypeに一致するようにデータを変更してください</target>
        </trans-unit>
        <trans-unit id="a459c7310b8e7648c0f1c03ad2fe7505060e920c" translate="yes" xml:space="preserve">
          <source>Data attribute containing the identity element for the ufunc, if it has one. If it does not, the attribute value is None.</source>
          <target state="translated">ufunc の identity 要素があればそれを含むデータ属性。持たない場合、属性値は None である。</target>
        </trans-unit>
        <trans-unit id="e78e721c9c235ccee8159d0be9160af82084ef4c" translate="yes" xml:space="preserve">
          <source>Data attribute containing the number of arguments the ufunc takes, including optional ones.</source>
          <target state="translated">ufunc が取る引数の数を含むデータ属性。</target>
        </trans-unit>
        <trans-unit id="03fe7a08b0b586a0b8eaaf0cdad9fc9b9cc9f6e6" translate="yes" xml:space="preserve">
          <source>Data attribute containing the number of arguments the ufunc treats as input.</source>
          <target state="translated">ufuncが入力として扱う引数の数を含むデータ属性。</target>
        </trans-unit>
        <trans-unit id="adfa3ffdeaf44e2dd6067b0132906bd6eef47e97" translate="yes" xml:space="preserve">
          <source>Data attribute containing the number of arguments the ufunc treats as output.</source>
          <target state="translated">ufuncが出力として扱う引数の数を含むデータ属性。</target>
        </trans-unit>
        <trans-unit id="692287ce05c432ce06118a7f5a56e29867abb305" translate="yes" xml:space="preserve">
          <source>Data attribute listing the data-type &amp;ldquo;Domain-Range&amp;rdquo; groupings the ufunc can deliver. The data-types are given using the character codes.</source>
          <target state="translated">ufuncが提供できるデータタイプ「ドメイン範囲」グループをリストするデータ属性。データ型は文字コードを使用して与えられます。</target>
        </trans-unit>
        <trans-unit id="6f759d67f0ed55480a1c6b69e639c270645daf7f" translate="yes" xml:space="preserve">
          <source>Data in new &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarrays&lt;/code&gt;&lt;/a&gt; is in the &lt;a href=&quot;../glossary#term-row-major&quot;&gt;row-major&lt;/a&gt; (C) order, unless otherwise specified, but, for example, &lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;basic array slicing&lt;/a&gt; often produces &lt;a href=&quot;../glossary#term-view&quot;&gt;views&lt;/a&gt; in a different scheme.</source>
          <target state="translated">新しい&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarrays&lt;/code&gt; &lt;/a&gt;データは、特に指定がない限り、&lt;a href=&quot;../glossary#term-row-major&quot;&gt;行&lt;/a&gt;優先（C）の順序になりますが、たとえば、&lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;基本的な配列スライシングでは、&lt;/a&gt;多くの場合、異なるスキームで&lt;a href=&quot;../glossary#term-view&quot;&gt;ビュー&lt;/a&gt;が生成されます。</target>
        </trans-unit>
        <trans-unit id="c0385a2191da01cdd85357b1f30dbba96a61452a" translate="yes" xml:space="preserve">
          <source>Data in new &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarrays&lt;/code&gt;&lt;/a&gt; is in the &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;row-major&lt;/a&gt; (C) order, unless otherwise specified, but, for example, &lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;basic array slicing&lt;/a&gt; often produces &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-view&quot;&gt;views&lt;/a&gt; in a different scheme.</source>
          <target state="translated">新しい&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarrays&lt;/code&gt; &lt;/a&gt;内のデータは、特に指定されていない限り、&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;行&lt;/a&gt;優先（C）順ですが、たとえば、&lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;基本的な配列のスライスでは、&lt;/a&gt;多くの場合、異なるスキームで&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-view&quot;&gt;ビュー&lt;/a&gt;が生成されます。</target>
        </trans-unit>
        <trans-unit id="2d84a810e9789b8179eb08002b6e519db8fa8ce7" translate="yes" xml:space="preserve">
          <source>Data is always written in &amp;lsquo;C&amp;rsquo; order, independent of the order of &lt;code&gt;a&lt;/code&gt;. The data produced by this method can be recovered using the function fromfile().</source>
          <target state="translated">データは常にのための独立した、「C」の順序で書かれています。このメソッドによって生成されたデータは、fromfile（）関数を使用して回復できます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e53167df8cb2fa7234110a0a44d40ca2cbd6313" translate="yes" xml:space="preserve">
          <source>Data items are converted to the nearest compatible Python type. Masked values are converted to &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt; is None, the corresponding entries in the output list will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">データ項目は、最も近い互換性のあるPythonタイプに変換されます。マスクされた値は&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt; &lt;code&gt;fill_value&lt;/code&gt; に&lt;/a&gt;変換されます。場合&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt; &lt;code&gt;fill_value&lt;/code&gt; は&lt;/a&gt; Noneです、出力リストの対応するエントリができなくなります &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7267220cb18bbd3fbaa14cb18866618233c8d0a4" translate="yes" xml:space="preserve">
          <source>Data items are converted to the nearest compatible Python type. Masked values are converted to &lt;a href=&quot;numpy.ma.masked_array.fill_value#numpy.ma.masked_array.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;numpy.ma.masked_array.fill_value#numpy.ma.masked_array.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt; is None, the corresponding entries in the output list will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">データ項目は、最も近い互換性のあるPythonタイプに変換されます。マスクされた値は&lt;a href=&quot;numpy.ma.masked_array.fill_value#numpy.ma.masked_array.fill_value&quot;&gt; &lt;code&gt;fill_value&lt;/code&gt; に&lt;/a&gt;変換されます。場合&lt;a href=&quot;numpy.ma.masked_array.fill_value#numpy.ma.masked_array.fill_value&quot;&gt; &lt;code&gt;fill_value&lt;/code&gt; は&lt;/a&gt;Noneです、出力リストの対応するエントリができなくなります &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4ac7e83183cb23b5999f887680eaa647e636fdc" translate="yes" xml:space="preserve">
          <source>Data read from the text file.</source>
          <target state="translated">テキストファイルから読み込んだデータ。</target>
        </trans-unit>
        <trans-unit id="ab4616f27eff8ec482bc1f61a6613379d5019665" translate="yes" xml:space="preserve">
          <source>Data read from the text file. If &lt;code&gt;usemask&lt;/code&gt; is True, this is a masked array.</source>
          <target state="translated">テキストファイルから読み取られたデータ。 &lt;code&gt;usemask&lt;/code&gt; がTrueの場合、これはマスクされた配列です。</target>
        </trans-unit>
        <trans-unit id="dadd6ac5ba02e2f7843ee180c516331cbdcd6a9f" translate="yes" xml:space="preserve">
          <source>Data sources</source>
          <target state="translated">データソース</target>
        </trans-unit>
        <trans-unit id="c3c77ecb1755c1a69e821e1aaac71fd5ec5e7ec0" translate="yes" xml:space="preserve">
          <source>Data stored in the file. For &lt;code&gt;.npz&lt;/code&gt; files, the returned instance of NpzFile class must be closed to avoid leaking file descriptors.</source>
          <target state="translated">ファイルに保存されたデータ。 &lt;code&gt;.npz&lt;/code&gt; ファイル、NpzFileクラスの返されたインスタンスは、ファイルディスクリプタのリークを避けるために閉じていなければなりません。</target>
        </trans-unit>
        <trans-unit id="b9d279299816a7c139a097762a532d3c7e26f292" translate="yes" xml:space="preserve">
          <source>Data to be averaged. Masked entries are not taken into account in the computation.</source>
          <target state="translated">平均化されるデータ。マスクされたエントリは計算には考慮されません。</target>
        </trans-unit>
        <trans-unit id="e03c72d9dcd23e4e11ad5552205bb89141629001" translate="yes" xml:space="preserve">
          <source>Data to be saved to a text file.</source>
          <target state="translated">テキストファイルに保存するデータ。</target>
        </trans-unit>
        <trans-unit id="ee503fe5765b8d9456bf21def7f9e06d2b12ebb6" translate="yes" xml:space="preserve">
          <source>Data type</source>
          <target state="translated">データ型</target>
        </trans-unit>
        <trans-unit id="76ebf87ff7259b3fa1470e7263b48576e422cbfd" translate="yes" xml:space="preserve">
          <source>Data type code.</source>
          <target state="translated">データ型コード。</target>
        </trans-unit>
        <trans-unit id="5c6b1bdaee5cd22bebfa68fe22da8ae17ee32ebc" translate="yes" xml:space="preserve">
          <source>Data type containing field &lt;code&gt;col1&lt;/code&gt; (10-character string at byte position 0), &lt;code&gt;col2&lt;/code&gt; (32-bit float at byte position 10), and &lt;code&gt;col3&lt;/code&gt; (integers at byte position 14):</source>
          <target state="translated">フィールド &lt;code&gt;col1&lt;/code&gt; （バイト位置0の10文字の文字列）、 &lt;code&gt;col2&lt;/code&gt; （バイト位置10の32ビットfloat）、および &lt;code&gt;col3&lt;/code&gt; （バイト位置14の整数）を含むデータ型：</target>
        </trans-unit>
        <trans-unit id="5323524ee17f1362827313c3d97940b4505408ab" translate="yes" xml:space="preserve">
          <source>Data type information</source>
          <target state="translated">データ型情報</target>
        </trans-unit>
        <trans-unit id="7f7a69abb16912ba94ab887a9c10ebbd9bc5371f" translate="yes" xml:space="preserve">
          <source>Data type objects</source>
          <target state="translated">データ型オブジェクト</target>
        </trans-unit>
        <trans-unit id="b653b6102e06af89505274160891e8ac6c604d2a" translate="yes" xml:space="preserve">
          <source>Data type objects (&lt;code&gt;dtype&lt;/code&gt;)</source>
          <target state="translated">データ型オブジェクト（ &lt;code&gt;dtype&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ac3315e5339816f58a1895e052b1e8c043da3b3c" translate="yes" xml:space="preserve">
          <source>Data type objects (dtype)</source>
          <target state="translated">データ型オブジェクト (dtype)</target>
        </trans-unit>
        <trans-unit id="6823842611ba946501e490386387306a34e9ab02" translate="yes" xml:space="preserve">
          <source>Data type of the output.</source>
          <target state="translated">出力のデータ型。</target>
        </trans-unit>
        <trans-unit id="eae3a99bdeb47b16f78d7fea21224392e5ca6e46" translate="yes" xml:space="preserve">
          <source>Data type of the output. If &lt;code&gt;dtype&lt;/code&gt; is None, the type of the data argument (&lt;code&gt;data.dtype&lt;/code&gt;) is used. If &lt;code&gt;dtype&lt;/code&gt; is not None and different from &lt;code&gt;data.dtype&lt;/code&gt;, a copy is performed.</source>
          <target state="translated">出力のデータ型。 &lt;code&gt;dtype&lt;/code&gt; がNoneの場合、データ引数のタイプ（ &lt;code&gt;data.dtype&lt;/code&gt; ）が使用されます。 &lt;code&gt;dtype&lt;/code&gt; がNoneでなく、 &lt;code&gt;data.dtype&lt;/code&gt; と異なる場合、コピーが実行されます。</target>
        </trans-unit>
        <trans-unit id="9a65ce3721c38edabce27611aa8f46d66f3904ff" translate="yes" xml:space="preserve">
          <source>Data type of the result.</source>
          <target state="translated">結果のデータ型。</target>
        </trans-unit>
        <trans-unit id="4ed14787943fa351395f0ee27e0b0514b81bf28b" translate="yes" xml:space="preserve">
          <source>Data type of the resulting array. If None, the dtypes will be determined by the contents of each column, individually.</source>
          <target state="translated">結果の配列のデータ型。Noneの場合、dtypesは各列の内容によって個別に決定されます。</target>
        </trans-unit>
        <trans-unit id="339d59d85f01f8cdcf6fd821645f37195e30ec02" translate="yes" xml:space="preserve">
          <source>Data type of the returned array. For binary files, it is used to determine the size and byte-order of the items in the file.</source>
          <target state="translated">返される配列のデータ型。バイナリファイルの場合、ファイル内の項目のサイズとバイト順を決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="3ba3363f75318cb54fd6298e9fc5286371dc0e38" translate="yes" xml:space="preserve">
          <source>Data type of the returned array. For binary files, it is used to determine the size and byte-order of the items in the file. Most builtin numeric types are supported and extension types may be supported.</source>
          <target state="translated">返される配列のデータ型。バイナリファイルの場合は、ファイル内の項目のサイズとバイト順を決定するために使用されます。ほとんどの組み込みの数値型がサポートされており、拡張子型もサポートされている場合があります。</target>
        </trans-unit>
        <trans-unit id="7f9f4851300f70d5dc3cf562fa3240960b4dbf05" translate="yes" xml:space="preserve">
          <source>Data type of the returned array. The default is float.</source>
          <target state="translated">返される配列のデータ型。デフォルトは float です。</target>
        </trans-unit>
        <trans-unit id="ed2ace0ed658145111b32dfd15ea87700b2f229e" translate="yes" xml:space="preserve">
          <source>Data type routines</source>
          <target state="translated">データ型ルーチン</target>
        </trans-unit>
        <trans-unit id="594095b790071c2f98aec2dbd65de7709d74433d" translate="yes" xml:space="preserve">
          <source>Data type sizes</source>
          <target state="translated">データ型のサイズ</target>
        </trans-unit>
        <trans-unit id="2adf3e418cb1c78b65b7a000ba430a45647a5ca7" translate="yes" xml:space="preserve">
          <source>Data type testing</source>
          <target state="translated">データ型テスト</target>
        </trans-unit>
        <trans-unit id="98a34d678f5229fc5eec78849854a56a627dd1d1" translate="yes" xml:space="preserve">
          <source>Data type to cast to.</source>
          <target state="translated">キャスト先のデータ型。</target>
        </trans-unit>
        <trans-unit id="182df8c2af2c2944401a368243e72ff53aba919b" translate="yes" xml:space="preserve">
          <source>Data type with fields &lt;code&gt;r&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (with the given titles), both being 8-bit unsigned integers, the first at byte position 0 from the start of the field and the second at position 2:</source>
          <target state="translated">フィールド &lt;code&gt;r&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; （指定されたタイトル）を持つデータ型。どちらも8ビットの符号なし整数で、最初はフィールドの先頭からバイト位置0に、2番目は位置2にあります。</target>
        </trans-unit>
        <trans-unit id="b44a74dfbd4c8cbced718e34ed1777e530392fab" translate="yes" xml:space="preserve">
          <source>Data type with fields &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, each being an 8-bit unsigned integer:</source>
          <target state="translated">フィールドを持つデータ型は &lt;code&gt;r&lt;/code&gt; は、 &lt;code&gt;g&lt;/code&gt; 、 &lt;code&gt;b&lt;/code&gt; 、それぞれが8ビットの符号なし整数であります： &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dce22c316f82e72fe3ef7972975de030981baa7a" translate="yes" xml:space="preserve">
          <source>Data type, scalar, or array to cast from.</source>
          <target state="translated">キャストするデータ型、スカラ、または配列。</target>
        </trans-unit>
        <trans-unit id="b6be514c02654c4ded06230fc9559da237b0aa77" translate="yes" xml:space="preserve">
          <source>Data types</source>
          <target state="translated">データ型</target>
        </trans-unit>
        <trans-unit id="555f1cb511a7fc830b4f9270140d6d7d6b86fdc6" translate="yes" xml:space="preserve">
          <source>Data types have the following method for changing the byte order:</source>
          <target state="translated">データ型には、バイト順を変更するための以下の方法があります。</target>
        </trans-unit>
        <trans-unit id="ddbd1fc6e1311002ff40414585d42fb972fc1c73" translate="yes" xml:space="preserve">
          <source>Data with a given value representing missing data</source>
          <target state="translated">欠損データを表す所定の値を持つデータ</target>
        </trans-unit>
        <trans-unit id="fd4e634077f484849d79c425f4661ed26b88a935" translate="yes" xml:space="preserve">
          <source>Data-type checking</source>
          <target state="translated">データ型チェック</target>
        </trans-unit>
        <trans-unit id="391d43bd010ab4fe13de7cc4c6ed3a95e700d762" translate="yes" xml:space="preserve">
          <source>Data-type consisting of more than one element:</source>
          <target state="translated">複数の要素で構成されるデータ型。</target>
        </trans-unit>
        <trans-unit id="0b016d89b64e9dc1c8dd396ed22b7193dd67c03e" translate="yes" xml:space="preserve">
          <source>Data-type descriptor of the returned view, e.g., float32 or int16. Omitting it results in the view having the same data-type as &lt;code&gt;a&lt;/code&gt;. This argument can also be specified as an ndarray sub-class, which then specifies the type of the returned object (this is equivalent to setting the &lt;code&gt;type&lt;/code&gt; parameter).</source>
          <target state="translated">返されるビューのデータ型記述子（float32やint16など）。これを省略すると、ビューのデータ型 &lt;code&gt;a&lt;/code&gt; 。と同じになります。この引数は、ndarrayサブクラスとして指定することもできます。このサブクラスは、返されるオブジェクトのタイプを指定します（これは、 &lt;code&gt;type&lt;/code&gt; パラメーターの設定と同じです）。</target>
        </trans-unit>
        <trans-unit id="b6f39aab51ccb8d0145c1277755ec804cf3ef171" translate="yes" xml:space="preserve">
          <source>Data-type descriptor of the returned view, e.g., float32 or int16. The default, None, results in the view having the same data-type as &lt;code&gt;a&lt;/code&gt;. As with &lt;code&gt;ndarray.view&lt;/code&gt;, dtype can also be specified as an ndarray sub-class, which then specifies the type of the returned object (this is equivalent to setting the &lt;code&gt;type&lt;/code&gt; parameter).</source>
          <target state="translated">返されるビューのデータ型記述子（float32やint16など）。同じデータ型を有するビューにおけるデフォルト、なし、結果。 &lt;code&gt;ndarray.view&lt;/code&gt; と同様に、dtypeをndarrayサブクラスとして指定することもできます。このサブクラスは、返されるオブジェクトのタイプを指定します（これは、 &lt;code&gt;type&lt;/code&gt; パラメーターの設定と同じです）。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2bc09131fee35a52a645be0fa4f4e07fdb68a652" translate="yes" xml:space="preserve">
          <source>Data-type descriptor of the returned view, e.g., float32 or int16. The default, None, results in the view having the same data-type as &lt;code&gt;a&lt;/code&gt;. This argument can also be specified as an ndarray sub-class, which then specifies the type of the returned object (this is equivalent to setting the &lt;code&gt;type&lt;/code&gt; parameter).</source>
          <target state="translated">返されたビューのデータ型記述子（例：float32またはint16）。同じデータ型を有するビューにおけるデフォルト、なし、結果。この引数は、ndarrayサブクラスとして指定することもできます。これは、返されるオブジェクトのタイプを指定します（これは、 &lt;code&gt;type&lt;/code&gt; パラメーターを設定することと同じです）。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22f7dd2234bee3f3f18b97392a6490d3ba873dee" translate="yes" xml:space="preserve">
          <source>Data-type descriptors</source>
          <target state="translated">データ型記述子</target>
        </trans-unit>
        <trans-unit id="5047a1b21f308ef4a4edd9ded69fea90920bfe2e" translate="yes" xml:space="preserve">
          <source>Data-type encapsulation</source>
          <target state="translated">データ型カプセル化</target>
        </trans-unit>
        <trans-unit id="2507f1a7f55fba205d86cdd75b7ab0cf6f6fbdd9" translate="yes" xml:space="preserve">
          <source>Data-type objects must be reference counted so be aware of the action on the data-type reference of different C-API calls. The standard rule is that when a data-type object is returned it is a new reference. Functions that take &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr *&lt;/code&gt;&lt;/a&gt; objects and return arrays steal references to the data-type their inputs unless otherwise noted. Therefore, you must own a reference to any data-type object used as input to such a function.</source>
          <target state="translated">データ型オブジェクトは参照カウントされる必要があるため、さまざまなC-API呼び出しのデータ型参照に対するアクションに注意してください。標準的な規則は、データ型オブジェクトが返されるとき、それが新しい参照であることです。特に明記されていない限り、&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt; &lt;code&gt;PyArray_Descr *&lt;/code&gt; &lt;/a&gt;オブジェクトを受け取り、配列を返す関数は、入力のデータ型への参照を盗みます。したがって、そのような関数への入力として使用されるデータ型オブジェクトへの参照を所有している必要があります。</target>
        </trans-unit>
        <trans-unit id="0e22d85cb52fcf6bb7492be5bede91731e2a7d9a" translate="yes" xml:space="preserve">
          <source>Data-type objects must be reference counted so be aware of the action on the data-type reference of different C-API calls. The standard rule is that when a data-type object is returned it is a new reference. Functions that take &lt;a href=&quot;types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr *&lt;/code&gt;&lt;/a&gt; objects and return arrays steal references to the data-type their inputs unless otherwise noted. Therefore, you must own a reference to any data-type object used as input to such a function.</source>
          <target state="translated">データ型オブジェクトは参照カウントする必要があるため、さまざまなC-API呼び出しのデータ型参照に対するアクションに注意してください。標準のルールでは、データ型オブジェクトが返されると、それは新しい参照になります。&lt;a href=&quot;types-and-structures#c.PyArray_Descr&quot;&gt; &lt;code&gt;PyArray_Descr *&lt;/code&gt; &lt;/a&gt;オブジェクトを受け取り、配列を返す関数は、特に明記されていない限り、データ型への参照を盗みます。したがって、そのような関数への入力として使用されるデータ型オブジェクトへの参照を所有している必要があります。</target>
        </trans-unit>
        <trans-unit id="b15d5f87e12104d07e12104f29fa0201983c667c" translate="yes" xml:space="preserve">
          <source>Data-type of returned array.</source>
          <target state="translated">返される配列のデータ型。</target>
        </trans-unit>
        <trans-unit id="175ad74f523c9673c9dc38454591d4eb74c4d08a" translate="yes" xml:space="preserve">
          <source>Data-type of the array&amp;rsquo;s elements.</source>
          <target state="translated">配列の要素のデータ型。</target>
        </trans-unit>
        <trans-unit id="083ed855a488906eb5ff7c9039d435f48aa3b852" translate="yes" xml:space="preserve">
          <source>Data-type of the coordinate arrays passed to &lt;code&gt;function&lt;/code&gt;. By default, &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; is float.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; に渡される座標配列のデータ型。デフォルトでは、&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;はfloatです。</target>
        </trans-unit>
        <trans-unit id="dea8e2a1f7fb1db9b7e34231c5e0957886ee508e" translate="yes" xml:space="preserve">
          <source>Data-type of the coordinate arrays passed to &lt;code&gt;function&lt;/code&gt;. By default, &lt;code&gt;dtype&lt;/code&gt; is float.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; に渡される座標配列のデータ型。デフォルトでは、 &lt;code&gt;dtype&lt;/code&gt; はfloatです。</target>
        </trans-unit>
        <trans-unit id="4e15c31196d8acf582467b65de7e2dab92710470" translate="yes" xml:space="preserve">
          <source>Data-type of the field in which to place &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;val&lt;/code&gt; を配置するフィールドのデータ型。</target>
        </trans-unit>
        <trans-unit id="39073b2fd3057c7b3b9a07d35e36e49c334d3ebb" translate="yes" xml:space="preserve">
          <source>Data-type of the output mask. By default, the output mask has a dtype of MaskType (bool). If the dtype is flexible, each field has a boolean dtype. This is ignored when &lt;code&gt;m&lt;/code&gt; is &lt;code&gt;nomask&lt;/code&gt;, in which case &lt;code&gt;nomask&lt;/code&gt; is always returned.</source>
          <target state="translated">出力マスクのデータ型。デフォルトでは、出力マスクのdtypeはMaskType（bool）です。dtypeが柔軟な場合、各フィールドにはブール型のdtypeがあります。 &lt;code&gt;m&lt;/code&gt; が &lt;code&gt;nomask&lt;/code&gt; の場合、これは無視されます。この場合、常に &lt;code&gt;nomask&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="51e15f46df8957d190b0e9a32edbef5e443c1138" translate="yes" xml:space="preserve">
          <source>Data-type of the output matrix.</source>
          <target state="translated">出力行列のデータ型。</target>
        </trans-unit>
        <trans-unit id="6c5a46bdf3d87da37dab2e1edc7254de947ac4c8" translate="yes" xml:space="preserve">
          <source>Data-type of the output. Defaults to &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">出力のデータ型。デフォルトは &lt;code&gt;float&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dae41e8d6682b39b1719c5f729cf4403ad9808e2" translate="yes" xml:space="preserve">
          <source>Data-type of the resulting array; default: float. If this is a structured data-type, the resulting array will be 1-dimensional, and each row will be interpreted as an element of the array. In this case, the number of columns used must match the number of fields in the data-type.</source>
          <target state="translated">結果として得られる配列のデータ型。これが構造化されたデータ型の場合、結果として得られる配列は1次元となり、各行は配列の要素として解釈されます。この場合、使用する列の数は、データ型のフィールドの数と一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b505071c887042075c861cc8fc2d25f1ea672dda" translate="yes" xml:space="preserve">
          <source>Data-type of the returned array.</source>
          <target state="translated">返された配列のデータ型。</target>
        </trans-unit>
        <trans-unit id="620d631e802c6625ade1eba3753c9c102dd738c0" translate="yes" xml:space="preserve">
          <source>Data-type of the returned array; default: float.</source>
          <target state="translated">返される配列のデータ型。</target>
        </trans-unit>
        <trans-unit id="b76cac3ce27a94ef1f707a3ae326b952d9ea72b6" translate="yes" xml:space="preserve">
          <source>Data-type of the returned matrix.</source>
          <target state="translated">返される行列のデータ型.</target>
        </trans-unit>
        <trans-unit id="83e3321d6d9c1b02b3af684537a3f17f48f92529" translate="yes" xml:space="preserve">
          <source>Data-type to convert &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to if given. Default is None.</source>
          <target state="translated">データ型は、変換すると &lt;code&gt;b&lt;/code&gt; 与えられた場合に。デフォルトはなしです。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98198bc475e33e539f57bb5d611ce0c46719fda9" translate="yes" xml:space="preserve">
          <source>Data-type with fields &lt;code&gt;R&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;, each being an unsigned 8-bit integer:</source>
          <target state="translated">フィールドが &lt;code&gt;R&lt;/code&gt; 、 &lt;code&gt;G&lt;/code&gt; 、 &lt;code&gt;B&lt;/code&gt; 、 &lt;code&gt;A&lt;/code&gt; のデータ型。それぞれが符号なし8ビット整数です。</target>
        </trans-unit>
        <trans-unit id="97d945f72df62bf65abebd32ec6eeec836638f9c" translate="yes" xml:space="preserve">
          <source>Data-type with fields &lt;code&gt;big&lt;/code&gt; (big-endian 32-bit integer) and &lt;code&gt;little&lt;/code&gt; (little-endian 32-bit integer):</source>
          <target state="translated">フィールド &lt;code&gt;big&lt;/code&gt; （ビッグエンディアン32ビット整数）と &lt;code&gt;little&lt;/code&gt; （リトルエンディアン32ビット整数）のデータ型：</target>
        </trans-unit>
        <trans-unit id="7d8d0e4f66717afb9caca10ce7ca4b6fef1542ca" translate="yes" xml:space="preserve">
          <source>Data-types can be used as functions to convert python numbers to array scalars (see the array scalar section for an explanation), python sequences of numbers to arrays of that type, or as arguments to the dtype keyword that many numpy functions or methods accept. Some examples:</source>
          <target state="translated">データ型は、 python の数値を配列スカラに変換する関数 (説明は配列スカラのセクションを参照してください)、 python の数値列をその型の配列に変換する関数、あるいは多くの numpy 関数やメソッドが受け入れる dtype キーワードの引数として使用することができます。いくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="f9892dceaf4c393849b8298d0123d5d5f05ba0c0" translate="yes" xml:space="preserve">
          <source>Data-types.</source>
          <target state="translated">Data-types.</target>
        </trans-unit>
        <trans-unit id="236d451bd1043c68cb6b168fe59695d559f46b5c" translate="yes" xml:space="preserve">
          <source>DataSource (class in numpy)</source>
          <target state="translated">データソース</target>
        </trans-unit>
        <trans-unit id="63d0f9bc2a331816b54d90289e0564cae9cab711" translate="yes" xml:space="preserve">
          <source>DataSource.abspath()</source>
          <target state="translated">DataSource.abspath()</target>
        </trans-unit>
        <trans-unit id="a75e29b5cace0f330a36c9eb65db62d75aa42186" translate="yes" xml:space="preserve">
          <source>DataSource.exists()</source>
          <target state="translated">DataSource.exists()</target>
        </trans-unit>
        <trans-unit id="bd4a229fdbfe009b3be26b6043f0184701a0533b" translate="yes" xml:space="preserve">
          <source>DataSource.open()</source>
          <target state="translated">DataSource.open()</target>
        </trans-unit>
        <trans-unit id="9406f9d63729835268647100d60fa6dda91bf0bf" translate="yes" xml:space="preserve">
          <source>DataSources can be local files or remote files/URLs. The files may also be compressed or uncompressed. DataSource hides some of the low-level details of downloading the file, allowing you to simply pass in a valid file path (or URL) and obtain a file object.</source>
          <target state="translated">データソースは、ローカルファイルまたはリモートファイル/URLにすることができます。また、ファイルは圧縮されている場合もあれば、圧縮されていない場合もあります。DataSource はファイルをダウンロードする際の低レベルの詳細を隠しているので、有効なファイルパス (または URL)を渡すだけでファイルオブジェクトを取得することができます。</target>
        </trans-unit>
        <trans-unit id="b8aeeec1fd740b257ff42ec9b3acef6af6a7c28c" translate="yes" xml:space="preserve">
          <source>Datatype or sequence of datatypes. If None, the datatypes are estimated from the &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">データ型またはデータ型のシーケンス。Noneの場合、データ型は &lt;code&gt;data&lt;/code&gt; から推定されます。</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="81b7d2ea42df2f5da13026da9e2cb57a3aabc441" translate="yes" xml:space="preserve">
          <source>Date:</source>
          <target state="translated">Date:</target>
        </trans-unit>
        <trans-unit id="3a634fe6b2da8d8d4c344bc698f77cf69c809b5f" translate="yes" xml:space="preserve">
          <source>Datetime</source>
          <target state="translated">Datetime</target>
        </trans-unit>
        <trans-unit id="bb7bfb490786a995bfa9e2a5b6823f17a1a216ef" translate="yes" xml:space="preserve">
          <source>Datetime Arithmetic</source>
          <target state="translated">日時算術</target>
        </trans-unit>
        <trans-unit id="26757f51523448884cb35f7c2e7a9d830a1f0706" translate="yes" xml:space="preserve">
          <source>Datetime Support Functions</source>
          <target state="translated">日時サポート機能</target>
        </trans-unit>
        <trans-unit id="e00cad3edede5f768d55ef060cdd96323a7571ad" translate="yes" xml:space="preserve">
          <source>Datetime Units</source>
          <target state="translated">日付時間 単位</target>
        </trans-unit>
        <trans-unit id="38b428bb26c8af0c4b0fd0c5793ec1f2bdae7051" translate="yes" xml:space="preserve">
          <source>Datetime and Timedelta Arithmetic</source>
          <target state="translated">日付と時間の算術</target>
        </trans-unit>
        <trans-unit id="4c72e4c628fc8e294be703a7cacbedb31e07e1dc" translate="yes" xml:space="preserve">
          <source>Datetime support</source>
          <target state="translated">日付のサポート</target>
        </trans-unit>
        <trans-unit id="48d6aa44d4ca3cc7a3a4b06f69e541ecb8ebd93c" translate="yes" xml:space="preserve">
          <source>Datetime support functions</source>
          <target state="translated">データタイムサポート機能</target>
        </trans-unit>
        <trans-unit id="45540e9d36b6a636a7d3f2083fde0b3cb45e0a66" translate="yes" xml:space="preserve">
          <source>Datetimes and Timedeltas</source>
          <target state="translated">日付と時間</target>
        </trans-unit>
        <trans-unit id="d5889493937e34467174cb169e91b981059850e9" translate="yes" xml:space="preserve">
          <source>Datetimes and Timedeltas work together to provide ways for simple datetime calculations.</source>
          <target state="translated">DatetimesとTimedeltasは、簡単な日付時間の計算方法を提供するために協力しています。</target>
        </trans-unit>
        <trans-unit id="51531cc702406b6c9763cc42d8bdd8ad26a43c0f" translate="yes" xml:space="preserve">
          <source>Datetimes are always stored based on POSIX time (though having a TAI mode which allows for accounting of leap-seconds is proposed), with an epoch of 1970-01-01T00:00Z. This means the supported dates are always a symmetric interval around the epoch, called &amp;ldquo;time span&amp;rdquo; in the table below.</source>
          <target state="translated">日時は常にPOSIX時間に基づいて格納されます（うるう秒の計算を可能にするTAIモードを提案しています）、エポックは1970-01-01T00：00Zです。つまり、サポートされる日付は常に、エポックを中心とした対称的な間隔であり、以下の表では「期間」と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="122763cb7427afdd4c15e276fdc1c80b3815094a" translate="yes" xml:space="preserve">
          <source>David McKay, &amp;ldquo;Information Theory, Inference and Learning Algorithms,&amp;rdquo; chapter 23, &lt;a href=&quot;http://www.inference.org.uk/mackay/itila/&quot;&gt;http://www.inference.org.uk/mackay/itila/&lt;/a&gt;</source>
          <target state="translated">デビッドマッケイ、「情報理論、推論および学習アルゴリズム」、第23章、&lt;a href=&quot;http://www.inference.org.uk/mackay/itila/&quot;&gt;http：//www.inference.org.uk/mackay/itila/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a5fdc0bfcbc22794c547cc3001bee75e7471095" translate="yes" xml:space="preserve">
          <source>Dealing with KIND specifiers</source>
          <target state="translated">kind指定子を扱う</target>
        </trans-unit>
        <trans-unit id="33d53a3ccf2fafd0ab1e36ce2784e68594b459b9" translate="yes" xml:space="preserve">
          <source>Dealing with array objects</source>
          <target state="translated">配列オブジェクトの扱い</target>
        </trans-unit>
        <trans-unit id="323cd88ac9edb3118c18157c13cf0ea074760ad6" translate="yes" xml:space="preserve">
          <source>Dealing with encoding and dtype issues</source>
          <target state="translated">エンコーディングやdtypeの問題に対応</target>
        </trans-unit>
        <trans-unit id="812d36d79a90e882bd2e8eae368ea14f78ae3b09" translate="yes" xml:space="preserve">
          <source>Dealing with types</source>
          <target state="translated">タイプに対応</target>
        </trans-unit>
        <trans-unit id="d2a20bd58858c9ae119cfad9819c0c3d1bae6ed3" translate="yes" xml:space="preserve">
          <source>Dealing with variable numbers of indices within programs</source>
          <target state="translated">プログラム内でのインデックスの可変数の処理</target>
        </trans-unit>
        <trans-unit id="a8f5a30a4cb8786cd322dd6dbfd8f1d482955120" translate="yes" xml:space="preserve">
          <source>Deallocates the iterator object and resolves any needed writebacks.</source>
          <target state="translated">イテレータオブジェクトを解放し、必要な書き込みを解決します。</target>
        </trans-unit>
        <trans-unit id="ad9c7cd74dc2bd34e8b8c600c07899c84dcc04dd" translate="yes" xml:space="preserve">
          <source>Debian (sid) Linux, Python 2.1.3+, 2.2.3+, 2.3.3 PyCrust 0.9.3, Idle 1.0.2</source>
          <target state="translated">Debian (sid)Linux,Python 2.1.3+,2.2.3+,2.3.3 PyCrust 0.9.3,Idle 1.0.2</target>
        </trans-unit>
        <trans-unit id="94860893584a6731f4089a31cf8088cfe91a8721" translate="yes" xml:space="preserve">
          <source>Debug build on Windows</source>
          <target state="translated">Windowsでのデバッグビルド</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="34b80087890916e2b26eb9e138628cfd6ccd9b6f" translate="yes" xml:space="preserve">
          <source>Debugging-Related Options</source>
          <target state="translated">デバッグ関連オプション</target>
        </trans-unit>
        <trans-unit id="1111acbc77e1b6bc2fd9153a83aaaa3e388ca65d" translate="yes" xml:space="preserve">
          <source>Deciding what case applies, checking broadcasting, and determining the kind of transposition needed are all done in &lt;code&gt;PyArray_MapIterNew&lt;/code&gt;. After setting up, there are two cases. If there is no subarray or it only has one element, no subarray iteration is necessary and an iterator is prepared which iterates all indexing arrays &lt;em&gt;as well as&lt;/em&gt; the result or value array. If there is a subarray, there are three iterators prepared. One for the indexing arrays, one for the result or value array (minus its subarray), and one for the subarrays of the original and the result/assignment array. The first two iterators give (or allow calculation) of the pointers into the start of the subarray, which then allows to restart the subarray iteration.</source>
          <target state="translated">適用されるケースの決定、ブロードキャストのチェック、必要な転置の種類の決定はすべて &lt;code&gt;PyArray_MapIterNew&lt;/code&gt; で行われます。セットアップ後、2つのケースがあります。サブ配列がないか、要素が1つしかない場合、サブ配列の反復は不要であり、すべてのインデックス配列&lt;em&gt;と&lt;/em&gt;結果または値の配列を反復する反復子が準備されます。サブアレイがある場合は、3つの反復子が用意されています。 1つはインデックス配列、もう1つは結果配列または値配列（そのサブ配列を除く）、および1つは元の配列と結果/割り当て配列のサブ配列です。最初の2つの反復子は、サブアレイの先頭へのポインターを提供（または計算を許可）して、サブアレイの反復を再開できるようにします。</target>
        </trans-unit>
        <trans-unit id="992872abe2546d68e736db66506b69af3e9450e2" translate="yes" xml:space="preserve">
          <source>Decimal characters include digit characters, and all characters that can be used to form decimal-radix numbers, e.g. &lt;code&gt;U+0660, ARABIC-INDIC DIGIT ZERO&lt;/code&gt;.</source>
          <target state="translated">10進文字には、数字、および10進基数を形成するために使用できるすべての文字が含まれます（例： &lt;code&gt;U+0660, ARABIC-INDIC DIGIT ZERO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9516fdc9c7eef205e499da4e7ec3cede5ceb388" translate="yes" xml:space="preserve">
          <source>Decimal characters include digit characters, and all characters that that can be used to form decimal-radix numbers, e.g. &lt;code&gt;U+0660, ARABIC-INDIC DIGIT ZERO&lt;/code&gt;.</source>
          <target state="translated">10進文字には、数字と、10進数の基数を形成するために使用できるすべての文字が含まれます（例： &lt;code&gt;U+0660, ARABIC-INDIC DIGIT ZERO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5e804f5eda262d8f5e4948e51ed0cc0894ec6b2" translate="yes" xml:space="preserve">
          <source>Declare external functions and variables in a header file.</source>
          <target state="translated">外部関数や変数をヘッダファイルに宣言します。</target>
        </trans-unit>
        <trans-unit id="e660781fd8b95b64d64b6f05b5f17d8ea5d1d96c" translate="yes" xml:space="preserve">
          <source>Decompose the elements of x into mantissa and twos exponent.</source>
          <target state="translated">xの要素を仮数と2指数に分解します。</target>
        </trans-unit>
        <trans-unit id="c0a2aa6456fc6630ef3dc6620f0cbae61a88fe6c" translate="yes" xml:space="preserve">
          <source>Decompositions</source>
          <target state="translated">Decompositions</target>
        </trans-unit>
        <trans-unit id="ffe4e593056575686068099d6790448db4206386" translate="yes" xml:space="preserve">
          <source>Decorator to apply to methods</source>
          <target state="translated">メソッドに適用するデコレータ</target>
        </trans-unit>
        <trans-unit id="e07b2c2e1e25e79a86c68698117e4cba4b32238d" translate="yes" xml:space="preserve">
          <source>Decorator which, when applied to a function, causes SkipTest to be raised when &lt;code&gt;skip_condition&lt;/code&gt; is True, and the function to be called normally otherwise.</source>
          <target state="translated">関数に適用すると、 &lt;code&gt;skip_condition&lt;/code&gt; がTrueの場合にSkipTestが発生し、それ以外の場合は関数が通常どおり呼び出されるデコレーター。</target>
        </trans-unit>
        <trans-unit id="adc746be3b00936c8c3a3472b3e3078c3a4656a5" translate="yes" xml:space="preserve">
          <source>Decorator, which, when applied to a function, causes KnownFailureException to be raised when &lt;code&gt;fail_condition&lt;/code&gt; is True, and the function to be called normally otherwise.</source>
          <target state="translated">関数に適用されると、 &lt;code&gt;fail_condition&lt;/code&gt; がTrueのときにKnownFailureExceptionが発生し、それ以外の場合は関数が通常どおり呼び出されるデコレーター。</target>
        </trans-unit>
        <trans-unit id="a2e23b650a15e5c693ca1445133d5ee60d9d20b4" translate="yes" xml:space="preserve">
          <source>Decorators</source>
          <target state="translated">Decorators</target>
        </trans-unit>
        <trans-unit id="951d318afe63ebb409ecca810f057a766c4ca7b0" translate="yes" xml:space="preserve">
          <source>Deep Copy</source>
          <target state="translated">ディープコピー</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="34692108afca567d865d43e42370d7e1925cff06" translate="yes" xml:space="preserve">
          <source>Default buffers</source>
          <target state="translated">デフォルトのバッファ</target>
        </trans-unit>
        <trans-unit id="571112037f7618f6ce10d8c3dd958643f65f8421" translate="yes" xml:space="preserve">
          <source>Default casting rule change</source>
          <target state="translated">デフォルトのキャストルールの変更</target>
        </trans-unit>
        <trans-unit id="2335a11535e98158d8ca1e7070652f1e66fd9c56" translate="yes" xml:space="preserve">
          <source>Default is &amp;lsquo;greedy&amp;rsquo;.</source>
          <target state="translated">デフォルトは「貪欲」です。</target>
        </trans-unit>
        <trans-unit id="c17e4da3ff3b0f9f748a4d6acc1f8640afd0a462" translate="yes" xml:space="preserve">
          <source>Default is &amp;lsquo;r+&amp;rsquo;.</source>
          <target state="translated">デフォルトは「r +」です。</target>
        </trans-unit>
        <trans-unit id="d6fc6505a7468b1eb07e232276a1a144ed108cc4" translate="yes" xml:space="preserve">
          <source>Default is &amp;lsquo;safe&amp;rsquo;.</source>
          <target state="translated">デフォルトは「安全」です。</target>
        </trans-unit>
        <trans-unit id="ffe4ea797d5b8a7f8cfde90ab339db72e2e542a2" translate="yes" xml:space="preserve">
          <source>Default is 0.</source>
          <target state="translated">デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="b9ce70b65cf5b4dc82412d7768f94d53c38cac38" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, the tuple (&lt;a href=&quot;#numpy.average&quot;&gt;&lt;code&gt;average&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;sum_of_weights&lt;/code&gt;) is returned, otherwise only the average is returned. If &lt;code&gt;weights=None&lt;/code&gt;, &lt;code&gt;sum_of_weights&lt;/code&gt; is equivalent to the number of elements over which the average is taken.</source>
          <target state="translated">デフォルトは &lt;code&gt;False&lt;/code&gt; です。場合は &lt;code&gt;True&lt;/code&gt; 、タプル（&lt;a href=&quot;#numpy.average&quot;&gt; &lt;code&gt;average&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;sum_of_weights&lt;/code&gt; は）そうでない場合のみ、平均値が返され、返されます。 &lt;code&gt;weights=None&lt;/code&gt; の場合、 &lt;code&gt;sum_of_weights&lt;/code&gt; は、平均がとられる要素の数と同じです。</target>
        </trans-unit>
        <trans-unit id="6fafe55b73fa98b695385282c370b435d27e1633" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;None&lt;/code&gt;, to use the entire axis.</source>
          <target state="translated">デフォルトは &lt;code&gt;None&lt;/code&gt; で、軸全体を使用します。</target>
        </trans-unit>
        <trans-unit id="28951177af990d02d67504338ec510505f905759" translate="yes" xml:space="preserve">
          <source>Default iteration</source>
          <target state="translated">デフォルトの反復</target>
        </trans-unit>
        <trans-unit id="966299221cc27c9aaada9018f864b33036434b1d" translate="yes" xml:space="preserve">
          <source>Default normalization (False) is by &lt;code&gt;(N - 1)&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the number of observations given (unbiased estimate). If &lt;code&gt;bias&lt;/code&gt; is True, then normalization is by &lt;code&gt;N&lt;/code&gt;. These values can be overridden by using the keyword &lt;code&gt;ddof&lt;/code&gt; in numpy versions &amp;gt;= 1.5.</source>
          <target state="translated">デフォルトの正規化（False）は &lt;code&gt;(N - 1)&lt;/code&gt; 。ここで、 &lt;code&gt;N&lt;/code&gt; は指定された観測値（偏りのない推定）の数です。場合は &lt;code&gt;bias&lt;/code&gt; Trueの場合、正規化はである &lt;code&gt;N&lt;/code&gt; 。これらの値は、numpyバージョン&amp;gt; = 1.5でキーワード &lt;code&gt;ddof&lt;/code&gt; を使用して上書きできます。</target>
        </trans-unit>
        <trans-unit id="90d359fa1c07cc7df5b917d7e3f5d34c57ec0aae" translate="yes" xml:space="preserve">
          <source>Default normalization (False) is by &lt;code&gt;(N-1)&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the number of observations given (unbiased estimate). If &lt;code&gt;bias&lt;/code&gt; is True, then normalization is by &lt;code&gt;N&lt;/code&gt;. This keyword can be overridden by the keyword &lt;code&gt;ddof&lt;/code&gt; in numpy versions &amp;gt;= 1.5.</source>
          <target state="translated">デフォルトの正規化（False）は &lt;code&gt;(N-1)&lt;/code&gt; によるものです。ここで、 &lt;code&gt;N&lt;/code&gt; は指定された観測値（不偏推定）の数です。場合は &lt;code&gt;bias&lt;/code&gt; Trueの場合、正規化はである &lt;code&gt;N&lt;/code&gt; 。このキーワードは、numpyバージョン&amp;gt; = 1.5のキーワード &lt;code&gt;ddof&lt;/code&gt; で上書きできます。</target>
        </trans-unit>
        <trans-unit id="719f3db22853f6f54f02e96c26a2311da39af743" translate="yes" xml:space="preserve">
          <source>Default priority for arrays.</source>
          <target state="translated">配列のデフォルトの優先度。</target>
        </trans-unit>
        <trans-unit id="6716ba557871317c5fd2c10ccc1e593c8f19cb74" translate="yes" xml:space="preserve">
          <source>Default scalar priority (very small)</source>
          <target state="translated">デフォルトのスカラー優先度(非常に小さい</target>
        </trans-unit>
        <trans-unit id="e641966d275ad425b62fc62d9745e763b1f6dd59" translate="yes" xml:space="preserve">
          <source>Default size of the user-settable internal buffers.</source>
          <target state="translated">ユーザーが設定可能な内部バッファのデフォルトサイズ。</target>
        </trans-unit>
        <trans-unit id="5d1efc3a1f02c0ec5b61bbb0c9ab7a02738e94d3" translate="yes" xml:space="preserve">
          <source>Default subtype priority.</source>
          <target state="translated">デフォルトのサブタイプの優先度。</target>
        </trans-unit>
        <trans-unit id="16a99af14cd742b7888548aa51fb6ac7d09e8605" translate="yes" xml:space="preserve">
          <source>Defaults to true. If set to false, the output will always be a strict array, not a subtype.</source>
          <target state="translated">デフォルトは true です。falseに設定すると、出力は常にサブタイプではなく厳密な配列となります。</target>
        </trans-unit>
        <trans-unit id="2b3e0f5011c5a7820f042e8646d3807526feef63" translate="yes" xml:space="preserve">
          <source>Define a vectorized function which takes a nested sequence of objects or numpy arrays as inputs and returns a single numpy array or a tuple of numpy arrays. The vectorized function evaluates &lt;code&gt;pyfunc&lt;/code&gt; over successive tuples of the input arrays like the python map function, except it uses the broadcasting rules of numpy.</source>
          <target state="translated">オブジェクトのネストされたシーケンスまたはnumpy配列を入力として受け取り、単一のnumpy配列またはnumpy配列のタプルを返すベクトル化された関数を定義します。ベクトル化された関数は、numpyのブロードキャストルールを使用することを除いて、python map関数と同様に、入力配列の連続するタプルに対して &lt;code&gt;pyfunc&lt;/code&gt; を評価します。</target>
        </trans-unit>
        <trans-unit id="3524bed7c2347159eaf40501936c85412e29b564" translate="yes" xml:space="preserve">
          <source>Define auxiliary C variable in F2PY generated wrapper function. Useful to save parameter values so that they can be accessed in initialization expression of other variables. Note that &lt;code&gt;intent(aux)&lt;/code&gt; silently implies &lt;code&gt;intent(c)&lt;/code&gt;.</source>
          <target state="translated">F2PYで生成されたラッパー関数で補助C変数を定義します。他の変数の初期化式でアクセスできるように、パラメーター値を保存するのに便利です。 &lt;code&gt;intent(aux)&lt;/code&gt; は黙って &lt;code&gt;intent(c)&lt;/code&gt; を意味することに注意してください。</target>
        </trans-unit>
        <trans-unit id="b67a2a6a2f10a0438338af977bc8d261b78376c0" translate="yes" xml:space="preserve">
          <source>Define macro &lt;code&gt;&amp;lt;macro&amp;gt;&lt;/code&gt;</source>
          <target state="translated">マクロ &lt;code&gt;&amp;lt;macro&amp;gt;&lt;/code&gt; を定義する</target>
        </trans-unit>
        <trans-unit id="3d175b5790f5972e2666d5bdfe0e596a28cd9c1e" translate="yes" xml:space="preserve">
          <source>Define macro &lt;code&gt;&amp;lt;macro&amp;gt;&lt;/code&gt; as &lt;code&gt;&amp;lt;defn&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">マクロ &lt;code&gt;&amp;lt;macro&amp;gt;&lt;/code&gt; を &lt;code&gt;&amp;lt;defn&amp;gt;&lt;/code&gt; として定義します。</target>
        </trans-unit>
        <trans-unit id="61505cbdb5cf52ffbc6a8bf8b8f8af1217631a20" translate="yes" xml:space="preserve">
          <source>Define the absolute value, which is &lt;code&gt;-x&lt;/code&gt; for &lt;code&gt;x &amp;lt;0&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; for &lt;code&gt;x &amp;gt;= 0&lt;/code&gt;.</source>
          <target state="translated">絶対値、定義 &lt;code&gt;-x&lt;/code&gt; 用 &lt;code&gt;x &amp;lt;0&lt;/code&gt; と &lt;code&gt;x&lt;/code&gt; のため &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60c3116e72bd6db8e3267fc1ab9d7cb6e083f5e7" translate="yes" xml:space="preserve">
          <source>Define the sigma function, which is -1 for &lt;code&gt;x &amp;lt; 0&lt;/code&gt; and +1 for &lt;code&gt;x &amp;gt;= 0&lt;/code&gt;.</source>
          <target state="translated">シグマ関数を定義します &lt;code&gt;x &amp;lt; 0&lt;/code&gt; 場合は-1 、 &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; +1です。</target>
        </trans-unit>
        <trans-unit id="f5471ada09dfcde67297a0ac30990ba21a16931a" translate="yes" xml:space="preserve">
          <source>Defined as 0 for use with Bool.</source>
          <target state="translated">Boolで使用する場合は0と定義されています。</target>
        </trans-unit>
        <trans-unit id="139ca190227fe964dc3838ddb050be0a20c65202" translate="yes" xml:space="preserve">
          <source>Defined as 1 for use with Bool.</source>
          <target state="translated">Boolで使用するために1と定義されています。</target>
        </trans-unit>
        <trans-unit id="670d6eec1e9ea50b484d7c17bdc447c52fe95496" translate="yes" xml:space="preserve">
          <source>Defined in &lt;code&gt;numpy/npy_cpu.h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy/npy_cpu.h&lt;/code&gt; で定義</target>
        </trans-unit>
        <trans-unit id="8b1b72675b98643cbdd56a0a279d2ae2f68589c9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;code&gt;numpy/npy_endian.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;numpy/npy_endian.h&lt;/code&gt; で定義されています。</target>
        </trans-unit>
        <trans-unit id="ae2f517ddf51729b13e97790dfae1d103c049332" translate="yes" xml:space="preserve">
          <source>Defined to be the number of scalar kinds (not including &lt;a href=&quot;#c.NPY_NOSCALAR&quot;&gt;&lt;code&gt;NPY_NOSCALAR&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">スカラーの種類の数として定義されます（&lt;a href=&quot;#c.NPY_NOSCALAR&quot;&gt; &lt;code&gt;NPY_NOSCALAR&lt;/code&gt; &lt;/a&gt;は含まれません）。</target>
        </trans-unit>
        <trans-unit id="26a40d9f0ef7f2215f8cc29e1f71feface330732" translate="yes" xml:space="preserve">
          <source>Defined to be the number of scalar kinds (not including &lt;code&gt;NPY_NOSCALAR&lt;/code&gt;).</source>
          <target state="translated">スカラーの種類の数として定義されます（ &lt;code&gt;NPY_NOSCALAR&lt;/code&gt; は含まれません）。</target>
        </trans-unit>
        <trans-unit id="419f0d57760d81471942dc1e9c4afabcbd428557" translate="yes" xml:space="preserve">
          <source>Defined to be the number of sorts. It is fixed at three by the need for backwards compatibility, and consequently &lt;a href=&quot;#c.NPY_MERGESORT&quot;&gt;&lt;code&gt;NPY_MERGESORT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c.NPY_STABLESORT&quot;&gt;&lt;code&gt;NPY_STABLESORT&lt;/code&gt;&lt;/a&gt; are aliased to each other and may refer to one of several stable sorting algorithms depending on the data type.</source>
          <target state="translated">ソートの数として定義されます。下位互換性の必要性により3に固定されているため、&lt;a href=&quot;#c.NPY_MERGESORT&quot;&gt; &lt;code&gt;NPY_MERGESORT&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#c.NPY_STABLESORT&quot;&gt; &lt;code&gt;NPY_STABLESORT&lt;/code&gt; &lt;/a&gt;は相互にエイリアスされ、データ型に応じていくつかの安定したソートアルゴリズムの1つを参照する場合があります。</target>
        </trans-unit>
        <trans-unit id="ba198b982dcf4bd0cea8ecc26bd1efeae5fde285" translate="yes" xml:space="preserve">
          <source>Defined to be the number of sorts. It is fixed at three by the need for backwards compatibility, and consequently &lt;code&gt;NPY_MERGESORT&lt;/code&gt; and &lt;code&gt;NPY_STABLESORT&lt;/code&gt; are aliased to each other and may refer to one of several stable sorting algorithms depending on the data type.</source>
          <target state="translated">ソート数として定義されます。これは、下位互換性の必要性により3に固定されているため、 &lt;code&gt;NPY_MERGESORT&lt;/code&gt; と &lt;code&gt;NPY_STABLESORT&lt;/code&gt; は相互にエイリアスされ、データ型に応じていくつかの安定したソートアルゴリズムの1つを参照する場合があります。</target>
        </trans-unit>
        <trans-unit id="0c2126c80b6518c66a9593fe462e64cc5a15f601" translate="yes" xml:space="preserve">
          <source>Defines</source>
          <target state="translated">Defines</target>
        </trans-unit>
        <trans-unit id="6e49bf7d4a54a21945d1908234ab12cc2626625b" translate="yes" xml:space="preserve">
          <source>Defining a more complex dtype.</source>
          <target state="translated">より複雑なdtypeを定義します。</target>
        </trans-unit>
        <trans-unit id="45bcbf15eef8b7f89c50a8bf22d703e07ba3a825" translate="yes" xml:space="preserve">
          <source>Defining an &lt;a href=&quot;#c.NpyAuxData&quot;&gt;&lt;code&gt;NpyAuxData&lt;/code&gt;&lt;/a&gt; is similar to defining a class in C++, but the object semantics have to be tracked manually since the API is in C. Here&amp;rsquo;s an example for a function which doubles up an element using an element copier function as a primitive.:</source>
          <target state="translated">定義&lt;a href=&quot;#c.NpyAuxData&quot;&gt; &lt;code&gt;NpyAuxData&lt;/code&gt; は&lt;/a&gt; C ++でクラスを定義することに似ているが、APIがCであるので、オブジェクトのセマンティクスを手動で追跡しなければならない。ここでプリミティブとして素子コピー機能を使用して要素を倍増機能のための例です：</target>
        </trans-unit>
        <trans-unit id="eaf85480139ce8b3345d7674369f7104c63e0e8b" translate="yes" xml:space="preserve">
          <source>Defining functions</source>
          <target state="translated">機能の定義</target>
        </trans-unit>
        <trans-unit id="8834c54a1246a67dbc0ecb790c071b10a7e3b66b" translate="yes" xml:space="preserve">
          <source>Defining new types</source>
          <target state="translated">新しいタイプの定義</target>
        </trans-unit>
        <trans-unit id="acaae33599c6928fc236b87036acdea8fbc03839" translate="yes" xml:space="preserve">
          <source>Defining the input</source>
          <target state="translated">入力の定義</target>
        </trans-unit>
        <trans-unit id="adaa548fb9106ef1144d20b8ae04cecae72c8510" translate="yes" xml:space="preserve">
          <source>Definite integral as approximated by trapezoidal rule.</source>
          <target state="translated">台形の法則で近似した定積分。</target>
        </trans-unit>
        <trans-unit id="3332194d546c6c7cc86b5b84d7cd68baf0e623cb" translate="yes" xml:space="preserve">
          <source>Definition of the core elements a generalized ufunc operates on.</source>
          <target state="translated">一般化されたufuncが動作するコア要素の定義。</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="9184d3e4687563972d72b163e489c6c843a31654" translate="yes" xml:space="preserve">
          <source>Degree of the basis polynomial for the series. Must be &amp;gt;= 0.</source>
          <target state="translated">シリーズの基底多項式の次数。0以上でなければなりません。</target>
        </trans-unit>
        <trans-unit id="16c78a8e8f95308316ca05a4c6f57586f7f58e4d" translate="yes" xml:space="preserve">
          <source>Degree of the fitting polynomial</source>
          <target state="translated">フィッティング多項式の次数</target>
        </trans-unit>
        <trans-unit id="ecef1da3fe83c50441aa06c22147e1dea28f0c9b" translate="yes" xml:space="preserve">
          <source>Degree of the interpolating polynomial</source>
          <target state="translated">補間多項式の次数</target>
        </trans-unit>
        <trans-unit id="b8722a2887db9363ae0b8c5a5c30ec99ff352e3d" translate="yes" xml:space="preserve">
          <source>Degree of the interpolating polynomial.</source>
          <target state="translated">補間多項式の次数。</target>
        </trans-unit>
        <trans-unit id="214ea8bba1ed183b7e097241368f077a3cd144a1" translate="yes" xml:space="preserve">
          <source>Degree of the resulting matrix.</source>
          <target state="translated">結果として得られる行列の程度.</target>
        </trans-unit>
        <trans-unit id="80d0e0a542e906c0db420181650b3b792573e76e" translate="yes" xml:space="preserve">
          <source>Degree of the series, one less than the number of coefficients.</source>
          <target state="translated">系列の度数、係数の数より1つ少ない。</target>
        </trans-unit>
        <trans-unit id="a6aec0c27c1647ddafe05683c8d4b8074b12d8ab" translate="yes" xml:space="preserve">
          <source>Degree(s) of the fitting polynomials. If &lt;code&gt;deg&lt;/code&gt; is a single integer all terms up to and including the &lt;code&gt;deg&lt;/code&gt;&amp;rsquo;th term are included in the fit. For NumPy versions &amp;gt;= 1.11.0 a list of integers specifying the degrees of the terms to include may be used instead.</source>
          <target state="translated">近似多項式の次数。場合 &lt;code&gt;deg&lt;/code&gt; 、単一の整数までを含むすべての用語 &lt;code&gt;deg&lt;/code&gt; 番目の用語は、フィット感に含まれています。NumPyバージョン&amp;gt; = 1.11.0の場合、含める用語の次数を指定する整数のリストを代わりに使用できます。</target>
        </trans-unit>
        <trans-unit id="4678dad6fdcb23005370fe1fca044a896edcd5e9" translate="yes" xml:space="preserve">
          <source>Degree(s) of the fitting polynomials. If &lt;code&gt;deg&lt;/code&gt; is a single integer, all terms up to and including the &lt;code&gt;deg&lt;/code&gt;&amp;rsquo;th term are included in the fit. For NumPy versions &amp;gt;= 1.11.0 a list of integers specifying the degrees of the terms to include may be used instead.</source>
          <target state="translated">近似多項式の次数。 &lt;code&gt;deg&lt;/code&gt; が単一の整数の場合、 &lt;code&gt;deg&lt;/code&gt; 番目の項までのすべての項が近似に含まれます。NumPyバージョン&amp;gt; = 1.11.0の場合、含める用語の次数を指定する整数のリストを代わりに使用できます。</target>
        </trans-unit>
        <trans-unit id="2de0696584be15bbb43013a1abc8390fb59e0b4c" translate="yes" xml:space="preserve">
          <source>Degrees of freedom in denominator, must be &amp;gt; 0.</source>
          <target state="translated">分母の自由度。0より大きい必要があります。</target>
        </trans-unit>
        <trans-unit id="d447133a9630e193dc9b4895034fdb7a2d5656cf" translate="yes" xml:space="preserve">
          <source>Degrees of freedom in numerator, must be &amp;gt; 0.</source>
          <target state="translated">分子の自由度。0より大きい必要があります。</target>
        </trans-unit>
        <trans-unit id="2fc860f3319e43352dfab21d263879520eed366e" translate="yes" xml:space="preserve">
          <source>Degrees of freedom, must be &amp;gt; 0.</source>
          <target state="translated">自由度。0より大きい必要があります。</target>
        </trans-unit>
        <trans-unit id="efdf5c52531831e38290d369a2fc1a1d6c2f3ab4" translate="yes" xml:space="preserve">
          <source>Delete elements from an array.</source>
          <target state="translated">配列から要素を削除します。</target>
        </trans-unit>
        <trans-unit id="09e1a4ac558262087ade7474a27905ea0753215f" translate="yes" xml:space="preserve">
          <source>Delete self[key].</source>
          <target state="translated">self[key]を削除します。</target>
        </trans-unit>
        <trans-unit id="826d5fa4cd77081924ffa3247bc7e1144ad995c4" translate="yes" xml:space="preserve">
          <source>Delete the memmap instance to close the memmap file.</source>
          <target state="translated">memmapインスタンスを削除してmemmapファイルを閉じる。</target>
        </trans-unit>
        <trans-unit id="306dd5805fe4440e89d904988e954764b20a3834" translate="yes" xml:space="preserve">
          <source>Deleting a branch on &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;githubで&lt;/a&gt;ブランチを削除する</target>
        </trans-unit>
        <trans-unit id="ea0fd59ff17f24ffbadfe6e0d10ec0a51da31f4d" translate="yes" xml:space="preserve">
          <source>Deleting a branch on github</source>
          <target state="translated">github上のブランチを削除する</target>
        </trans-unit>
        <trans-unit id="1b1ea38145f80e657023804a5a2fb9968cec7261" translate="yes" xml:space="preserve">
          <source>Deletion flushes memory changes to disk before removing the object:</source>
          <target state="translated">削除は、オブジェクトを削除する前に、メモリの変更をディスクにフラッシュします。</target>
        </trans-unit>
        <trans-unit id="51de9c21719e1ebba2842f93455553ec20fd0114" translate="yes" xml:space="preserve">
          <source>Demonstrate how large values of non-centrality lead to a more symmetric distribution.</source>
          <target state="translated">非中心性の大きな値がどのようにより対称的な分布につながるかを実証してください。</target>
        </trans-unit>
        <trans-unit id="c9afd5880fd0526ff9d73beb159ef27c30006c77" translate="yes" xml:space="preserve">
          <source>Demonstrate that taking the products of random samples from a uniform distribution can be fit well by a log-normal probability density function.</source>
          <target state="translated">一様分布からランダム標本の積を取ることが、対数正規確率密度関数によってよく適合することを実証しなさい。</target>
        </trans-unit>
        <trans-unit id="7d7f05c3b413d3520059a47e99ca5537a68001e7" translate="yes" xml:space="preserve">
          <source>Denominator degrees of freedom, must be &amp;gt; 0.</source>
          <target state="translated">分母の自由度。0より大きい必要があります。</target>
        </trans-unit>
        <trans-unit id="ac772a011193bb984a652b0f5e9cfc8b6b3f2d87" translate="yes" xml:space="preserve">
          <source>Denominator. If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">分母。 &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; 場合、それらは共通の形状にブロードキャスト可能でなければなりません（これが出力の形状になります）。</target>
        </trans-unit>
        <trans-unit id="a6d35ab78327ccc8143e058c2d052d12fd50168d" translate="yes" xml:space="preserve">
          <source>Depending on a particular situation, these steps can be carried out either by just in one command or step-by-step, some steps can be omitted or combined with others.</source>
          <target state="translated">特定の状況に応じて、これらのステップは、一つのコマンドだけで実行してもよいし、ステップごとに実行してもよいが、いくつかのステップは省略してもよいし、他のステップと組み合わせてもよい。</target>
        </trans-unit>
        <trans-unit id="e6afb75d92a8931b02a2738d385c5788774cce5b" translate="yes" xml:space="preserve">
          <source>Deprecate &lt;code&gt;PyArray_As1D&lt;/code&gt;, &lt;code&gt;PyArray_As2D&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PyArray_As1D&lt;/code&gt; 、 &lt;code&gt;PyArray_As2D&lt;/code&gt; を非推奨</target>
        </trans-unit>
        <trans-unit id="8177b7926d93631dfd44d657ba9e8e543611652c" translate="yes" xml:space="preserve">
          <source>Deprecate &lt;code&gt;np.alen&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;np.alen&lt;/code&gt; を非推奨</target>
        </trans-unit>
        <trans-unit id="94bea58e36ea97a89f697055be06b02616bb6d29" translate="yes" xml:space="preserve">
          <source>Deprecate &lt;code&gt;numpy.distutils.exec_command&lt;/code&gt; and &lt;code&gt;temp_file_name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.distutils.exec_command&lt;/code&gt; と &lt;code&gt;temp_file_name&lt;/code&gt; を非推奨にします</target>
        </trans-unit>
        <trans-unit id="e3d5c3226aeab842ac4342585e0eb153350d8fe9" translate="yes" xml:space="preserve">
          <source>Deprecate automatic &lt;code&gt;dtype=object&lt;/code&gt; for ragged input</source>
          <target state="translated">不規則な入力の自動 &lt;code&gt;dtype=object&lt;/code&gt; を非推奨</target>
        </trans-unit>
        <trans-unit id="0e5f70a8079e6d84db2bee2ad6acdd2ae8fcdc60" translate="yes" xml:space="preserve">
          <source>Deprecate non-scalar arrays as fill values in &lt;code&gt;ma.fill_value&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ma.fill_value&lt;/code&gt; の塗りつぶし値として非スカラー配列を非推奨</target>
        </trans-unit>
        <trans-unit id="70f8102d92a47e6f4e71c89d9fe6ee5a92104784" translate="yes" xml:space="preserve">
          <source>Deprecate the financial functions</source>
          <target state="translated">財務機能の廃止</target>
        </trans-unit>
        <trans-unit id="bb2c49fdd1b05e605a38f9115e56f66a3514e081" translate="yes" xml:space="preserve">
          <source>Deprecate views changing dimensions in fortran order</source>
          <target state="translated">fortranの順序でディメンションを変更するビューを非推奨とする</target>
        </trans-unit>
        <trans-unit id="35ee1fa50278c527aa6abc0d9e07608c509c3bdd" translate="yes" xml:space="preserve">
          <source>Deprecated features</source>
          <target state="translated">非推奨機能</target>
        </trans-unit>
        <trans-unit id="b42515ab1d65352ed70392656cd1eb8f0df21091" translate="yes" xml:space="preserve">
          <source>Deprecated in 1.14, use &lt;a href=&quot;#c.PyArray_DiscardWritebackIfCopy&quot;&gt;&lt;code&gt;PyArray_DiscardWritebackIfCopy&lt;/code&gt;&lt;/a&gt; followed by &lt;code&gt;Py_XDECREF&lt;/code&gt;</source>
          <target state="translated">1.14で非推奨になり、&lt;a href=&quot;#c.PyArray_DiscardWritebackIfCopy&quot;&gt; &lt;code&gt;PyArray_DiscardWritebackIfCopy&lt;/code&gt; に&lt;/a&gt;続いて &lt;code&gt;Py_XDECREF&lt;/code&gt; を使用します</target>
        </trans-unit>
        <trans-unit id="75510f16f2c885973d68ca6976d07c5d06c5ddae" translate="yes" xml:space="preserve">
          <source>Deprecated in numpy 1.9.0, use the abstract ABCPolyBase class instead. Note that the latter requires a number of virtual functions to be implemented.</source>
          <target state="translated">numpy 1.9.0で非推奨となったので、代わりに抽象的なABCPolyBaseクラスを使用してください。後者は実装するために多くの仮想関数を必要とすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="90fbb082fd2714c0f36df6a60a4e4c93fb36448f" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.10.0.</source>
          <target state="translated">バージョン 1.10.0 より非推奨。</target>
        </trans-unit>
        <trans-unit id="a505e56c3c318c866f582620a893576d41513eec" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.11.0.</source>
          <target state="translated">バージョン 1.11.0 より非推奨。</target>
        </trans-unit>
        <trans-unit id="5bc11ab8238bab2b746c4aca2228903684569fa4" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.11.0: NumPy does not store timezone information. For backwards compatibility, datetime64 still parses timezone offsets, which it handles by converting to UTC. This behaviour is deprecated and will raise an error in the future.</source>
          <target state="translated">バージョン1.11.0より非推奨:NumPyはタイムゾーン情報を保存しません。後方互換性のために、datetime64はまだタイムゾーンオフセットを解析していますが、これはUTCに変換して処理します。この動作は非推奨であり、将来的にはエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="94443fd2ced7d37ea3bb33b7fb41ae4c59135a80" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.12.0.</source>
          <target state="translated">バージョン 1.12.0 より非推奨。</target>
        </trans-unit>
        <trans-unit id="1bb047c7fb6232a7717b280821f8be5014a745a8" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.13.0: Passing an axis where &lt;code&gt;axis &amp;gt; a.ndim&lt;/code&gt; will be treated as &lt;code&gt;axis == a.ndim&lt;/code&gt;, and passing &lt;code&gt;axis &amp;lt; -a.ndim - 1&lt;/code&gt; will be treated as &lt;code&gt;axis == 0&lt;/code&gt;. This behavior is deprecated.</source>
          <target state="translated">バージョン1.13.0以降非推奨： &lt;code&gt;axis &amp;gt; a.ndim&lt;/code&gt; が &lt;code&gt;axis == a.ndim&lt;/code&gt; として扱われる軸を通過し、 &lt;code&gt;axis &amp;lt; -a.ndim - 1&lt;/code&gt; を通過すると &lt;code&gt;axis == 0&lt;/code&gt; として扱われます。この動作は非推奨です。</target>
        </trans-unit>
        <trans-unit id="3e9f850b19cb0642d327e07d7c89d5cd333bf85e" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.13.0: This function is identical to both:</source>
          <target state="translated">バージョン 1.13.0 より非推奨。この関数は両方とも同じです。</target>
        </trans-unit>
        <trans-unit id="a9a59ff61f9445930ed15b411b507cb3a3190092" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.14.0.</source>
          <target state="translated">バージョン 1.14.0 より非推奨。</target>
        </trans-unit>
        <trans-unit id="229727d5d807915b35e3a79a88f55c01627e95f0" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.14: Passing &lt;code&gt;sep=''&lt;/code&gt;, the default, is deprecated since it will trigger the deprecated binary mode of this function. This mode interprets &lt;a href=&quot;https://docs.python.org/dev/library/string.html#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; as binary bytes, rather than ASCII text with decimal numbers, an operation which is better spelt &lt;code&gt;frombuffer(string, dtype, count)&lt;/code&gt;. If &lt;a href=&quot;https://docs.python.org/dev/library/string.html#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; contains unicode text, the binary mode of &lt;a href=&quot;#numpy.fromstring&quot;&gt;&lt;code&gt;fromstring&lt;/code&gt;&lt;/a&gt; will first encode it into bytes using either utf-8 (python 3) or the default encoding (python 2), neither of which produce sane results.</source>
          <target state="translated">バージョン1.14以降非推奨：デフォルトの &lt;code&gt;sep=''&lt;/code&gt; を渡すと、この関数の非推奨のバイナリモードがトリガーされるため、非推奨です。このモードは、&lt;a href=&quot;https://docs.python.org/dev/library/string.html#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;を10進数のASCIIテキストではなく、バイナリバイトとして解釈します。この操作は、 &lt;code&gt;frombuffer(string, dtype, count)&lt;/code&gt; 方が適切です。&lt;a href=&quot;https://docs.python.org/dev/library/string.html#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;にUnicodeテキストが含まれている場合、&lt;a href=&quot;#numpy.fromstring&quot;&gt; &lt;code&gt;fromstring&lt;/code&gt; &lt;/a&gt;のバイナリモードは、最初にutf-8（python 3）またはデフォルトのエンコーディング（python 2）のいずれかを使用してそれをバイトにエンコードします。</target>
        </trans-unit>
        <trans-unit id="dca5b7419ce0c6a33ee759ad9e3594c329bce938" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.15.0: In order to remain backward compatible with a common usage in Numeric, basic slicing is also initiated if the selection object is any non-ndarray and non-tuple sequence (such as a &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;) containing &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#slice&quot;&gt;&lt;code&gt;slice&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;Ellipsis&lt;/code&gt; object, or the &lt;a href=&quot;constants#numpy.newaxis&quot;&gt;&lt;code&gt;newaxis&lt;/code&gt;&lt;/a&gt; object, but not for integer arrays or other embedded sequences.</source>
          <target state="translated">バージョン1.15.0以降非推奨：Numericの一般的な使用法との下位互換性を維持するために、選択オブジェクトが&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#slice&quot;&gt; &lt;code&gt;slice&lt;/code&gt; &lt;/a&gt;オブジェクトを含む非ndarrayおよび非タプルシーケンス（&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;など）の場合、基本的なスライスも開始されます。 &lt;code&gt;Ellipsis&lt;/code&gt; オブジェクト、または&lt;a href=&quot;constants#numpy.newaxis&quot;&gt; &lt;code&gt;newaxis&lt;/code&gt; の&lt;/a&gt;オブジェクトではなく、整数配列または他の埋め込まれた配列について。</target>
        </trans-unit>
        <trans-unit id="c18d46be05f158f4a9f48a23fcafd55bc8ee7952" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.16.</source>
          <target state="translated">バージョン 1.16 以降では非推奨。</target>
        </trans-unit>
        <trans-unit id="f6151f894a8e79cde423047d76e0abe9518b5d32" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.16: Deprecated, use &lt;code&gt;numpy.ndarray.item()&lt;/code&gt; instead.</source>
          <target state="translated">バージョン1.16以降非推奨：非推奨。代わりに &lt;code&gt;numpy.ndarray.item()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="b1b432849522b830c89f225ee338a9c7471a40a6" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.17.0: Use &lt;code&gt;atleast1d&lt;/code&gt; explicitly if this behavior is deliberate.</source>
          <target state="translated">バージョン1.17.0以降非推奨：この動作が意図的なものである場合は、 &lt;code&gt;atleast1d&lt;/code&gt; 明示的に使用してください。</target>
        </trans-unit>
        <trans-unit id="f3fc485c4dc97b2ed8df47cb88214775178f80c1" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.17: The output is currently marked so that if written to, a deprecation warning will be emitted. A future version will set the &lt;code&gt;writable&lt;/code&gt; flag False so writing to it will raise an error.</source>
          <target state="translated">バージョン1.17以降非推奨：出力は現在マークされているため、書き込まれると非推奨の警告が発行されます。将来のバージョンでは &lt;code&gt;writable&lt;/code&gt; フラグをFalseに設定するため、書き込みを行うとエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="ebb895521198bf56dee5e321bf357df5fd4f6567" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.17: The use of this function will give a deprecation warning when &lt;code&gt;np.clip&lt;/code&gt;. Instead of this function, the datatype must instead use &lt;code&gt;PyUFunc_RegisterLoopForDescr&lt;/code&gt; to attach a custom loop to &lt;code&gt;np.core.umath.clip&lt;/code&gt;, &lt;code&gt;np.minimum&lt;/code&gt;, and &lt;code&gt;np.maximum&lt;/code&gt;.</source>
          <target state="translated">バージョン1.17以降非推奨：この関数を使用すると、 &lt;code&gt;np.clip&lt;/code&gt; のときに非推奨の警告が表示されます。この関数の代わりに、データ型は代わりに &lt;code&gt;PyUFunc_RegisterLoopForDescr&lt;/code&gt; を使用して、カスタムループを &lt;code&gt;np.core.umath.clip&lt;/code&gt; 、 &lt;code&gt;np.minimum&lt;/code&gt; 、および &lt;code&gt;np.maximum&lt;/code&gt; にアタッチする必要があります。</target>
        </trans-unit>
        <trans-unit id="de338e92c60a533166acb2812b8ac73bb6d4ce78" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.18: &lt;a href=&quot;#numpy.fv&quot;&gt;&lt;code&gt;fv&lt;/code&gt;&lt;/a&gt; is deprecated; for details, see NEP 32 &lt;a href=&quot;#r56c3181b2753-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. Use the corresponding function in the numpy-financial library, &lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;.</source>
          <target state="translated">バージョン1.18以降非推奨：&lt;a href=&quot;#numpy.fv&quot;&gt; &lt;code&gt;fv&lt;/code&gt; &lt;/a&gt;は非推奨です。詳細については、NEP 32 &lt;a href=&quot;#r56c3181b2753-1&quot; id=&quot;id1&quot;&gt;[1]を&lt;/a&gt;参照してください。numpy-financialライブラリ&lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;の対応する関数を使用します。</target>
        </trans-unit>
        <trans-unit id="b0facf806618dd79f85bcdfeb96b483a5d2c790b" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.18: &lt;a href=&quot;#numpy.ipmt&quot;&gt;&lt;code&gt;ipmt&lt;/code&gt;&lt;/a&gt; is deprecated; for details, see NEP 32 &lt;a href=&quot;#r9c688a8cd90c-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. Use the corresponding function in the numpy-financial library, &lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;.</source>
          <target state="translated">バージョン1.18以降非推奨：&lt;a href=&quot;#numpy.ipmt&quot;&gt; &lt;code&gt;ipmt&lt;/code&gt; &lt;/a&gt;は非推奨です。詳細については、NEP 32 &lt;a href=&quot;#r9c688a8cd90c-1&quot; id=&quot;id1&quot;&gt;[1]を&lt;/a&gt;参照してください。numpy-financialライブラリ&lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;の対応する関数を使用します。</target>
        </trans-unit>
        <trans-unit id="4af74ad1a42c5d78e705e877eeba1d13bc87a139" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.18: &lt;a href=&quot;#numpy.irr&quot;&gt;&lt;code&gt;irr&lt;/code&gt;&lt;/a&gt; is deprecated; for details, see NEP 32 &lt;a href=&quot;#r709af50a60b2-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. Use the corresponding function in the numpy-financial library, &lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;.</source>
          <target state="translated">バージョン1.18以降非推奨：&lt;a href=&quot;#numpy.irr&quot;&gt; &lt;code&gt;irr&lt;/code&gt; &lt;/a&gt;は非推奨です。詳細については、NEP 32 &lt;a href=&quot;#r709af50a60b2-1&quot; id=&quot;id1&quot;&gt;[1]を&lt;/a&gt;参照してください。numpy-financialライブラリ&lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;の対応する関数を使用します。</target>
        </trans-unit>
        <trans-unit id="0e4a2e363c99818a9d13f0eaca950d1e5f129ea3" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.18: &lt;a href=&quot;#numpy.mirr&quot;&gt;&lt;code&gt;mirr&lt;/code&gt;&lt;/a&gt; is deprecated; for details, see NEP 32 &lt;a href=&quot;#r456242a4ac51-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. Use the corresponding function in the numpy-financial library, &lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;.</source>
          <target state="translated">バージョン1.18以降非推奨：&lt;a href=&quot;#numpy.mirr&quot;&gt; &lt;code&gt;mirr&lt;/code&gt; &lt;/a&gt;は非推奨です。詳細については、NEP 32 &lt;a href=&quot;#r456242a4ac51-1&quot; id=&quot;id1&quot;&gt;[1]を&lt;/a&gt;参照してください。numpy-financialライブラリ&lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;の対応する関数を使用します。</target>
        </trans-unit>
        <trans-unit id="9ae7d182c78d7880b97e071dd6c3f008c4703089" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.18: &lt;a href=&quot;#numpy.nper&quot;&gt;&lt;code&gt;nper&lt;/code&gt;&lt;/a&gt; is deprecated; for details, see NEP 32 &lt;a href=&quot;#rc337c54a0685-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. Use the corresponding function in the numpy-financial library, &lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;.</source>
          <target state="translated">バージョン1.18以降非推奨：&lt;a href=&quot;#numpy.nper&quot;&gt; &lt;code&gt;nper&lt;/code&gt; &lt;/a&gt;は非推奨です。詳細については、NEP 32 &lt;a href=&quot;#rc337c54a0685-1&quot; id=&quot;id1&quot;&gt;[1]を&lt;/a&gt;参照してください。numpy-financialライブラリ&lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;の対応する関数を使用します。</target>
        </trans-unit>
        <trans-unit id="722102ac0d93195875d5a48a6e6edb2b1334e60b" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.18: &lt;a href=&quot;#numpy.npv&quot;&gt;&lt;code&gt;npv&lt;/code&gt;&lt;/a&gt; is deprecated; for details, see NEP 32 &lt;a href=&quot;#r3b2e08cf0480-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. Use the corresponding function in the numpy-financial library, &lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;.</source>
          <target state="translated">バージョン1.18以降非推奨：&lt;a href=&quot;#numpy.npv&quot;&gt; &lt;code&gt;npv&lt;/code&gt; &lt;/a&gt;は非推奨です。詳細については、NEP 32 &lt;a href=&quot;#r3b2e08cf0480-1&quot; id=&quot;id1&quot;&gt;[1]を&lt;/a&gt;参照してください。numpy-financialライブラリ&lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;の対応する関数を使用します。</target>
        </trans-unit>
        <trans-unit id="9918e27cf21398356907f3c61a98f70daaa8ccca" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.18: &lt;a href=&quot;#numpy.pmt&quot;&gt;&lt;code&gt;pmt&lt;/code&gt;&lt;/a&gt; is deprecated; for details, see NEP 32 &lt;a href=&quot;#rc2d922c8f780-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. Use the corresponding function in the numpy-financial library, &lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;.</source>
          <target state="translated">バージョン1.18以降非推奨：&lt;a href=&quot;#numpy.pmt&quot;&gt; &lt;code&gt;pmt&lt;/code&gt; &lt;/a&gt;は非推奨です。詳細については、NEP 32 &lt;a href=&quot;#rc2d922c8f780-1&quot; id=&quot;id1&quot;&gt;[1]を&lt;/a&gt;参照してください。numpy-financialライブラリ&lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;の対応する関数を使用します。</target>
        </trans-unit>
        <trans-unit id="b61351ebc9c58fc245830a01ec935ce81776e389" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.18: &lt;a href=&quot;#numpy.ppmt&quot;&gt;&lt;code&gt;ppmt&lt;/code&gt;&lt;/a&gt; is deprecated; for details, see NEP 32 &lt;a href=&quot;#rf57421fde8a5-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. Use the corresponding function in the numpy-financial library, &lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;.</source>
          <target state="translated">バージョン1.18以降非推奨：&lt;a href=&quot;#numpy.ppmt&quot;&gt; &lt;code&gt;ppmt&lt;/code&gt; &lt;/a&gt;は非推奨です。詳細については、NEP 32 &lt;a href=&quot;#rf57421fde8a5-1&quot; id=&quot;id1&quot;&gt;[1]を&lt;/a&gt;参照してください。numpy-financialライブラリ&lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;の対応する関数を使用します。</target>
        </trans-unit>
        <trans-unit id="8f58ebc3967f75da2ad4ad9a201aa5b95f732c23" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.18: &lt;a href=&quot;#numpy.pv&quot;&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt; is deprecated; for details, see NEP 32 &lt;a href=&quot;#r4dbb32670290-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. Use the corresponding function in the numpy-financial library, &lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;.</source>
          <target state="translated">バージョン1.18以降非推奨：&lt;a href=&quot;#numpy.pv&quot;&gt; &lt;code&gt;pv&lt;/code&gt; &lt;/a&gt;は非推奨です。詳細については、NEP 32 &lt;a href=&quot;#r4dbb32670290-1&quot; id=&quot;id1&quot;&gt;[1]を&lt;/a&gt;参照してください。numpy-financialライブラリ&lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;の対応する関数を使用します。</target>
        </trans-unit>
        <trans-unit id="09696b345dc5d41ad6107a69e8f093f3ef6fbf60" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.18: &lt;a href=&quot;#numpy.rate&quot;&gt;&lt;code&gt;rate&lt;/code&gt;&lt;/a&gt; is deprecated; for details, see NEP 32 &lt;a href=&quot;#ra039f4b61da9-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. Use the corresponding function in the numpy-financial library, &lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;.</source>
          <target state="translated">バージョン1.18以降非推奨：&lt;a href=&quot;#numpy.rate&quot;&gt; &lt;code&gt;rate&lt;/code&gt; &lt;/a&gt;は非推奨です。詳細については、NEP 32 &lt;a href=&quot;#ra039f4b61da9-1&quot; id=&quot;id1&quot;&gt;[1]を&lt;/a&gt;参照してください。numpy-financialライブラリ&lt;a href=&quot;https://pypi.org/project/numpy-financial&quot;&gt;https://pypi.org/project/numpy-financial&lt;/a&gt;の対応する関数を使用します。</target>
        </trans-unit>
        <trans-unit id="977fd468425793cfbf8f772dae2496ad7d3fe053" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.19.0.</source>
          <target state="translated">バージョン 1.19.0 より非推奨。</target>
        </trans-unit>
        <trans-unit id="ca6eb95578bdc7772094de6e91491645e79982f1" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.19: Setting this function is deprecated and should always be &lt;code&gt;NULL&lt;/code&gt;, if set, it will be ignored.</source>
          <target state="translated">バージョン1.19以降非推奨：この関数の設定は非推奨であり、常に &lt;code&gt;NULL&lt;/code&gt; である必要があります。設定されている場合、無視されます。</target>
        </trans-unit>
        <trans-unit id="26689b58bf759fcfedfe480ee292230f1eae7e85" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.6.0.</source>
          <target state="translated">バージョン 1.6.0 より非推奨。</target>
        </trans-unit>
        <trans-unit id="856a55e66a97bf5d240b17c1887aa296c5dc656c" translate="yes" xml:space="preserve">
          <source>Deprecated since version NumPy: 1.19</source>
          <target state="translated">バージョン NumPy から非推奨となりました。1.19</target>
        </trans-unit>
        <trans-unit id="b5ebd48a05d1197ffab8d82861190636acfcb48f" translate="yes" xml:space="preserve">
          <source>Deprecated. Use &lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt;, which is similar. This flag &amp;ldquo;automatically&amp;rdquo; copies the data back when the returned array is deallocated, which is not supported in all python implementations.</source>
          <target state="translated">非推奨。同様の&lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt; を&lt;/a&gt;使用します。このフラグは、返された配列の割り当てが解除されると、「自動的に」データをコピーして戻します。これは、すべてのPython実装でサポートされているわけではありません。</target>
        </trans-unit>
        <trans-unit id="141e039b9533a98c94309e5719dbf35ad8e170ab" translate="yes" xml:space="preserve">
          <source>Deprecated: use npy_clear_floatstatus from npy_math.h instead.</source>
          <target state="translated">非推奨:代わりに npy_math.h の npy_clear_floatstatus を使用してください。</target>
        </trans-unit>
        <trans-unit id="5cf6f463ce56314bce23e2b79281c112c8d5ef7b" translate="yes" xml:space="preserve">
          <source>Deprecation Mechanism NPY_NO_DEPRECATED_API</source>
          <target state="translated">非推奨メカニズム NPY_NO_DEPRECATED_API</target>
        </trans-unit>
        <trans-unit id="e805018e013c9abe7c09d3afc5c0fe507af41dc4" translate="yes" xml:space="preserve">
          <source>Deprecation of &lt;code&gt;round&lt;/code&gt; for &lt;code&gt;np.complexfloating&lt;/code&gt; scalars</source>
          <target state="translated">&lt;code&gt;np.complexfloating&lt;/code&gt; スカラーの &lt;code&gt;round&lt;/code&gt; の非推奨</target>
        </trans-unit>
        <trans-unit id="ec478f0c20f4040dee40fd9f3880a3597cbd5e18" translate="yes" xml:space="preserve">
          <source>Deprecation of probably unused C-API functions</source>
          <target state="translated">おそらく使用されていないC-API関数の非推奨化</target>
        </trans-unit>
        <trans-unit id="25762dd86ec1779e02b0d1ae6a317b370da8e560" translate="yes" xml:space="preserve">
          <source>DeprecationWarning to error</source>
          <target state="translated">DeprecationWarning to error</target>
        </trans-unit>
        <trans-unit id="34730e9bbd5c0ba7b7655973316eed44e39da85f" translate="yes" xml:space="preserve">
          <source>Deprecations</source>
          <target state="translated">Deprecations</target>
        </trans-unit>
        <trans-unit id="3df6d2fd6e8a67d3f249d430871341dc61199132" translate="yes" xml:space="preserve">
          <source>Describes a block of memory comprised of blocks, each block comprised of items and of the same size, and blocks are interpreted in exactly the same way. In the simplest case each block contains a single item, for instance int32 or float64.</source>
          <target state="translated">ブロックで構成されるメモリのブロックを説明し、各ブロックは同じサイズのアイテムで構成され、ブロックは全く同じように解釈されます。最も単純なケースでは、各ブロックは単一の項目、例えば int32 や float64 を含んでいます。</target>
        </trans-unit>
        <trans-unit id="6735a66773b194a7ae390d1ca4d06ddff66cb19d" translate="yes" xml:space="preserve">
          <source>Describes partition algorithms used.</source>
          <target state="translated">使用するパーティションアルゴリズムについて説明します。</target>
        </trans-unit>
        <trans-unit id="a4cf5c2fa78a781f3bab283524a5720dd26e5a08" translate="yes" xml:space="preserve">
          <source>Describes sorting algorithms used.</source>
          <target state="translated">使用されているソートアルゴリズムについて説明しています。</target>
        </trans-unit>
        <trans-unit id="555c5d2cb07e18fc50ac305ad3849cdbe6160644" translate="yes" xml:space="preserve">
          <source>Describes whether or not &lt;code&gt;a&lt;/code&gt; can be written to.</source>
          <target state="translated">かどうかを説明しに書き込むことができます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="424441bbf87af33c47ad0cfb1f7fa3b9fa63955e" translate="yes" xml:space="preserve">
          <source>Describes whether or not &lt;code&gt;a&lt;/code&gt; is a copy of another &amp;ldquo;base&amp;rdquo; array.</source>
          <target state="translated">が別の「ベース」アレイのコピーで &lt;code&gt;a&lt;/code&gt; かどうかを示します。</target>
        </trans-unit>
        <trans-unit id="65d8e7f90a58b5a5ee1060f1f22a86aed35beae6" translate="yes" xml:space="preserve">
          <source>Describes whether or not &lt;code&gt;a&lt;/code&gt; is aligned properly for its type.</source>
          <target state="translated">がそのタイプに対して適切に配置されて &lt;code&gt;a&lt;/code&gt; かどうかを示します。</target>
        </trans-unit>
        <trans-unit id="370912d49663d282a37e14e8000dff571b91bc07" translate="yes" xml:space="preserve">
          <source>Describing the motivation for a change, the nature of a bug for bug fixes or some details on what an enhancement does are also good to include in a commit message. Messages should be understandable without looking at the code changes. A commit message like &lt;code&gt;MAINT: fixed another one&lt;/code&gt; is an example of what not to do; the reader has to go look for context elsewhere.</source>
          <target state="translated">変更の動機、バグ修正のためのバグの性質、または拡張機能の機能に関する詳細を説明することも、コミットメッセージに含めるとよいでしょう。メッセージは、コードの変更を見なくても理解できる必要があります。 &lt;code&gt;MAINT: fixed another one&lt;/code&gt; ようなコミットメッセージ：修正された別のメッセージは、すべきでないことの例です。読者は他の場所で文脈を探しに行かなければなりません。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="346e1a6ea2950aed7aedfa2b36e8e6dcfe2508d1" translate="yes" xml:space="preserve">
          <source>Description of the function arguments, keywords and their respective types.</source>
          <target state="translated">関数の引数、キーワード、およびそれぞれの型の説明。</target>
        </trans-unit>
        <trans-unit id="3fcfa113d41636118b9fc7438de0f310d710e2cc" translate="yes" xml:space="preserve">
          <source>Description of the input data type code.</source>
          <target state="translated">入力データ型コードの説明。</target>
        </trans-unit>
        <trans-unit id="9829bed50f31ac25ea870651c23dc5ce8171f8e6" translate="yes" xml:space="preserve">
          <source>Desired dtype of the result, either &amp;lsquo;d&amp;rsquo; (or &amp;lsquo;float64&amp;rsquo;) or &amp;lsquo;f&amp;rsquo; (or &amp;lsquo;float32&amp;rsquo;). All dtypes are determined by their name. The default value is &amp;lsquo;d&amp;rsquo;.</source>
          <target state="translated">結果の望ましいdtype。'd '（または' float64 '）または' f '（または' float32 '）。すべてのdtypeは、その名前によって決定されます。デフォルト値は「d」です。</target>
        </trans-unit>
        <trans-unit id="4dc0eca98857c96ea05d2834018645b78499602c" translate="yes" xml:space="preserve">
          <source>Desired dtype of the result, only &lt;code&gt;float64&lt;/code&gt; and &lt;code&gt;float32&lt;/code&gt; are supported. Byteorder must be native. The default value is np.float64.</source>
          <target state="translated">その結果、所望のDTYPEは、唯一 &lt;code&gt;float64&lt;/code&gt; と &lt;code&gt;float32&lt;/code&gt; サポートされています。Byteorderはネイティブである必要があります。デフォルト値はnp.float64です。</target>
        </trans-unit>
        <trans-unit id="f21ac6e26595def622d7f71a3b4db5b0d1d28b7c" translate="yes" xml:space="preserve">
          <source>Desired dtype of the result. All dtypes are determined by their name, i.e., &amp;lsquo;int64&amp;rsquo;, &amp;lsquo;int&amp;rsquo;, etc, so byteorder is not available and a specific precision may have different C types depending on the platform. The default value is &amp;lsquo;np.int&amp;rsquo;.</source>
          <target state="translated">結果の望ましいdtype。すべてのdtypeは、それらの名前、つまり「int64」、「int」などによって決定されるため、バイトオーダーは使用できず、特定の精度は、プラットフォームによって異なるC型を持つ場合があります。デフォルト値は「np.int」です。</target>
        </trans-unit>
        <trans-unit id="d558894b92f0819c442ffa7437422acfcded32d4" translate="yes" xml:space="preserve">
          <source>Desired dtype of the result. Byteorder must be native. The default value is int.</source>
          <target state="translated">結果の希望する dtype。Byteorderはネイティブでなければなりません。デフォルト値は int です。</target>
        </trans-unit>
        <trans-unit id="d86ba271286804fcc7fe2ef7c09a18afae0481f4" translate="yes" xml:space="preserve">
          <source>Desired dtype of the result. Byteorder must be native. The default value is np.int64.</source>
          <target state="translated">結果の希望する dtype。Byteorderはネイティブでなければなりません。デフォルト値はnp.int64です。</target>
        </trans-unit>
        <trans-unit id="d121e78f3074bde690535b07325dfb836a0267ba" translate="yes" xml:space="preserve">
          <source>Desired output data-type for the array, e.g, &lt;code&gt;numpy.int8&lt;/code&gt;. Default is &lt;code&gt;numpy.float64&lt;/code&gt;.</source>
          <target state="translated">配列に必要な出力データ型（例： &lt;code&gt;numpy.int8&lt;/code&gt; )。デフォルトは &lt;code&gt;numpy.float64&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1b152ee224a01e68e60fe4dbd7092f5aa497fbc8" translate="yes" xml:space="preserve">
          <source>Desired output data-type.</source>
          <target state="translated">希望する出力データタイプ。</target>
        </trans-unit>
        <trans-unit id="d92d689242f2299b4475be6532f6b4c69b49753f" translate="yes" xml:space="preserve">
          <source>Desired precision, default is 6.</source>
          <target state="translated">希望する精度、デフォルトは6です。</target>
        </trans-unit>
        <trans-unit id="57f388f8b04810bebe2800d826bdcb39eda4bd12" translate="yes" xml:space="preserve">
          <source>Desired precision, default is 7.</source>
          <target state="translated">希望する精度、デフォルトは7です。</target>
        </trans-unit>
        <trans-unit id="a6a71856ceab1e7196aa2dbfeeb1fbad499209f5" translate="yes" xml:space="preserve">
          <source>Despite its name, it returns &lt;code&gt;bytes&lt;/code&gt; not &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">その名前にもかかわらず、&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; s&lt;/a&gt;ではなく &lt;code&gt;bytes&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="bca53b020cb8963bff96b2ef13263bbd6169b5e5" translate="yes" xml:space="preserve">
          <source>Despite its name, it returns &lt;code&gt;bytes&lt;/code&gt; not &lt;code&gt;str&lt;/code&gt;s.</source>
          <target state="translated">その名前にもかかわらず、 &lt;code&gt;str&lt;/code&gt; sではなく &lt;code&gt;bytes&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="cde9d9b4e0b9af3dfaaddd342aedc25e93ab8375" translate="yes" xml:space="preserve">
          <source>Destination array.</source>
          <target state="translated">宛先配列。</target>
        </trans-unit>
        <trans-unit id="e7808a0714f80da97918a2e4274a40d30bcdd7a7" translate="yes" xml:space="preserve">
          <source>Destination positions for each of the original axes. These must also be unique.</source>
          <target state="translated">元の軸のそれぞれのデスティネーション位置。これらも一意でなければなりません。</target>
        </trans-unit>
        <trans-unit id="99fb38702fe48e541fee073291f16ca2b81c9e3c" translate="yes" xml:space="preserve">
          <source>Detailed docstrings for scalar numeric types</source>
          <target state="translated">スカラー数値型の詳細ドキュメント</target>
        </trans-unit>
        <trans-unit id="21ef51d75c614a51c95b2672f954fdc6c7fae2d1" translate="yes" xml:space="preserve">
          <source>Detailed notes</source>
          <target state="translated">詳細な注意事項</target>
        </trans-unit>
        <trans-unit id="7d40f5113e5a0be345c6e8da2b15397b86e772db" translate="yes" xml:space="preserve">
          <source>Details of Signature</source>
          <target state="translated">署名の詳細</target>
        </trans-unit>
        <trans-unit id="600eeccd7db308f4a989eda843209f6bc5c9f6d7" translate="yes" xml:space="preserve">
          <source>Determinant of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">の行列。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="706fbd5a75b61eb7b1941f3576619d3b0a2e0ad0" translate="yes" xml:space="preserve">
          <source>Determine an appropriate data-type object from the object &lt;em&gt;op&lt;/em&gt; (which should be a &amp;ldquo;nested&amp;rdquo; sequence object) and the minimum data-type descriptor mintype (which can be &lt;code&gt;NULL&lt;/code&gt; ). Similar in behavior to array(&lt;em&gt;op&lt;/em&gt;).dtype. Don&amp;rsquo;t confuse this function with &lt;a href=&quot;#c.PyArray_DescrConverter&quot;&gt;&lt;code&gt;PyArray_DescrConverter&lt;/code&gt;&lt;/a&gt;. This function essentially looks at all the objects in the (nested) sequence and determines the data-type from the elements it finds.</source>
          <target state="translated">オブジェクト&lt;em&gt;op&lt;/em&gt;（「ネストされた」シーケンスオブジェクトである必要があります）および最小のデータ型記述子mintype（ &lt;code&gt;NULL&lt;/code&gt; の場合もあります）から適切なデータ型オブジェクトを決定します。 array（&lt;em&gt;op&lt;/em&gt;）.dtype と動作が似ています。この関数と&lt;a href=&quot;#c.PyArray_DescrConverter&quot;&gt; &lt;code&gt;PyArray_DescrConverter&lt;/code&gt; を&lt;/a&gt;混同しないでください。この関数は基本的に、（ネストされた）シーケンス内のすべてのオブジェクトを調べ、見つかった要素からデータ型を決定します。</target>
        </trans-unit>
        <trans-unit id="898483c19901b499900035a5195202d8244c4b8f" translate="yes" xml:space="preserve">
          <source>Determine common type following standard coercion rules.</source>
          <target state="translated">標準的な強制ルールに沿って、共通のタイプを決定します。</target>
        </trans-unit>
        <trans-unit id="f493f90604c24e63ef3589f15cfb3213ad17edc7" translate="yes" xml:space="preserve">
          <source>Determine if &lt;em&gt;newstrides&lt;/em&gt; is a strides array consistent with the memory of an &lt;em&gt;nd&lt;/em&gt; -dimensional array with shape &lt;code&gt;dims&lt;/code&gt; and element-size, &lt;em&gt;elsize&lt;/em&gt;. The &lt;em&gt;newstrides&lt;/em&gt; array is checked to see if jumping by the provided number of bytes in each direction will ever mean jumping more than &lt;em&gt;numbytes&lt;/em&gt; which is the assumed size of the available memory segment. If &lt;em&gt;numbytes&lt;/em&gt; is 0, then an equivalent &lt;em&gt;numbytes&lt;/em&gt; is computed assuming &lt;em&gt;nd&lt;/em&gt;, &lt;em&gt;dims&lt;/em&gt;, and &lt;em&gt;elsize&lt;/em&gt; refer to a single-segment array. Return &lt;a href=&quot;#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;newstrides&lt;/em&gt; is acceptable, otherwise return &lt;a href=&quot;#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">かどうかを決定&lt;em&gt;newstridesは&lt;/em&gt;のメモリと一致進歩アレイである&lt;em&gt;ND&lt;/em&gt;形状と次元アレイ &lt;code&gt;dims&lt;/code&gt; 、素子サイズ&lt;em&gt;elsize&lt;/em&gt;。&lt;em&gt;newstridesの&lt;/em&gt;アレイは、各方向のバイト数によって提供ジャンプが今までの平均ジャンプ以上であろうかどうかを確認するためにチェックされる&lt;em&gt;NUMBYTES&lt;/em&gt;利用可能なメモリセグメントの想定されるサイズです。場合&lt;em&gt;NUMBYTESが&lt;/em&gt; 0である場合、等価&lt;em&gt;NUMBYTESを&lt;/em&gt;想定して計算される&lt;em&gt;ND&lt;/em&gt;、&lt;em&gt;暗くなり&lt;/em&gt;、そして&lt;em&gt;elsize&lt;/em&gt;単一セグメントの配列を参照します。&lt;a href=&quot;#c.NPY_TRUE&quot;&gt; &lt;code&gt;NPY_TRUE&lt;/code&gt; &lt;/a&gt;場合は&lt;em&gt;NPY_TRUEを&lt;/em&gt;返します&lt;em&gt;&lt;/em&gt;それ以外の場合は&lt;a href=&quot;#c.NPY_FALSE&quot;&gt; &lt;code&gt;NPY_FALSE&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="da40e84ab5bf1317a201c92d2f871ba0d2269134" translate="yes" xml:space="preserve">
          <source>Determine if a class is a subclass of a second class.</source>
          <target state="translated">クラスが 2 番目のクラスのサブクラスであるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="497b024471b22505be0452cda6ffd1b787cf7f0a" translate="yes" xml:space="preserve">
          <source>Determine if the first argument is a subclass of the second argument.</source>
          <target state="translated">第1引数が第2引数のサブクラスであるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="e06c23b59abd9e583829ad68cbb8b3a58d4c4624" translate="yes" xml:space="preserve">
          <source>Determine if two arrays might share memory</source>
          <target state="translated">2つの配列がメモリを共有するかどうかを判断する</target>
        </trans-unit>
        <trans-unit id="13f31601af111fc0a9613647f0e8d82f16d06a6c" translate="yes" xml:space="preserve">
          <source>Determine if two arrays share memory</source>
          <target state="translated">2つの配列がメモリを共有しているかどうかを判断</target>
        </trans-unit>
        <trans-unit id="5d37eec65368e1615ae79a8f04af1a04a9dce477" translate="yes" xml:space="preserve">
          <source>Determine if two arrays share memory.</source>
          <target state="translated">2 つの配列がメモリを共有しているかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="e963055554340fe23a99591f987fa19e05129866" translate="yes" xml:space="preserve">
          <source>Determine language value (c,f77,f90) from sources</source>
          <target state="translated">ソースから言語値 (c,f77,f90)を決定します。</target>
        </trans-unit>
        <trans-unit id="4fb1ffd013fbdd2899c42f65451c7410c495fa36" translate="yes" xml:space="preserve">
          <source>Determine whether input has masked values.</source>
          <target state="translated">入力がマスクされた値を持っているかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="6da721475fcf2ac096aa56aec4327be0c131e55d" translate="yes" xml:space="preserve">
          <source>Determines the data-type of the returned array and of the accumulator where the elements are summed. If dtype has the value None and &lt;code&gt;a&lt;/code&gt; is of integer type of precision less than the default integer precision, then the default integer precision is used. Otherwise, the precision is the same as that of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">返される配列と、要素が合計されるアキュムレータのデータ型を決定します。dtypeの値がNoneで、 &lt;code&gt;a&lt;/code&gt; がデフォルトの整数精度よりも小さい精度の整数型である場合、デフォルトの整数精度が使用されます。そうでなければ、精度はと同じです。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f0165b0ce28795b6a5c6c8a8e2bfad91d293d9b" translate="yes" xml:space="preserve">
          <source>Determines whether the array data should be viewed as in C (row-major) or FORTRAN (column-major) order.</source>
          <target state="translated">配列データを C (行-メジャー)と FORTRAN (列-メジャー)のどちらの順序で表示するかを決定します。</target>
        </trans-unit>
        <trans-unit id="62fef4817f86a662507fdd128bbc1b9cb8b3cd5a" translate="yes" xml:space="preserve">
          <source>Determines whether the given object represents a scalar data-type.</source>
          <target state="translated">与えられたオブジェクトがスカラーデータ型を表すかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="5f0e0492ec52021d3c5b8cdeeb35e0f95d3b1d72" translate="yes" xml:space="preserve">
          <source>Determines whether the indices should be viewed as indexing in row-major (C-style) or column-major (Fortran-style) order.</source>
          <target state="translated">インデックスを、行・長 (C-style)か列・長 (Fortran-style)のどちらの順序でインデックス化するかを決定します。</target>
        </trans-unit>
        <trans-unit id="d8ccfefbbecb3816295b6b2447f684f6ceabb4bd" translate="yes" xml:space="preserve">
          <source>Determines whether the multi-index should be viewed as indexing in row-major (C-style) or column-major (Fortran-style) order.</source>
          <target state="translated">マルチインデックスを、行メジャー (C-style)と列メジャー (Fortran-style)のどちらの順序でインデックスを作成するかを決定します。</target>
        </trans-unit>
        <trans-unit id="7f3f11f5478a9e233c7c8cac100e2bfaec97f4b5" translate="yes" xml:space="preserve">
          <source>DevOps</source>
          <target state="translated">DevOps</target>
        </trans-unit>
        <trans-unit id="128d929e44ba67ff5c30b4087fdf313afa8ae540" translate="yes" xml:space="preserve">
          <source>Develop your contribution:</source>
          <target state="translated">あなたの貢献を発展させてください。</target>
        </trans-unit>
        <trans-unit id="a48344532f1ee1fb98c3e511cc3d116bd18dc22b" translate="yes" xml:space="preserve">
          <source>Developing educational content &amp;amp; narrative documentation</source>
          <target state="translated">教育コンテンツとナラティブドキュメントの開発</target>
        </trans-unit>
        <trans-unit id="5b5a45feb873f8385f593977b660a4aeb8784691" translate="yes" xml:space="preserve">
          <source>Developing with git can be done entirely without github. Git is a distributed version control system. In order to use git on your machine you must &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;install it&lt;/a&gt;.</source>
          <target state="translated">gitを使用した開発は、githubなしで完全に実行できます。Gitは分散バージョン管理システムです。マシンでgitを使用&lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;するには、それをインストールする&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="87f796a86183612ba7edf694c5e9beb87d144d37" translate="yes" xml:space="preserve">
          <source>Development Setup</source>
          <target state="translated">開発セットアップ</target>
        </trans-unit>
        <trans-unit id="61783f8920477bd8cb8a05baf07e3ed366e8715d" translate="yes" xml:space="preserve">
          <source>Development process - details</source>
          <target state="translated">開発プロセス-詳細</target>
        </trans-unit>
        <trans-unit id="502db4c9cee083b4aedd4680eb9c9eeb3fff329b" translate="yes" xml:space="preserve">
          <source>Development process - summary</source>
          <target state="translated">開発プロセス-概要</target>
        </trans-unit>
        <trans-unit id="66e7dd4c526a5148a42bbca5f07010c8a652ad99" translate="yes" xml:space="preserve">
          <source>Development versions (no git hash available): &amp;lsquo;1.8.0.dev-Unknown&amp;rsquo;</source>
          <target state="translated">開発バージョン（利用可能なgitハッシュなし）： '1.8.0.dev-Unknown'</target>
        </trans-unit>
        <trans-unit id="d0fdf3b26f9c530f928d171827b0d01a3adcb222" translate="yes" xml:space="preserve">
          <source>Development versions after a1: &amp;lsquo;1.8.0a1.dev-f1234afa&amp;rsquo;,</source>
          <target state="translated">a1以降の開発バージョン： '1.8.0a1.dev-f1234afa'、</target>
        </trans-unit>
        <trans-unit id="5fcf12e6d8e4b52c92d8112af85cd4e8de564860" translate="yes" xml:space="preserve">
          <source>Development versions: &amp;lsquo;1.8.0.dev-f1234afa&amp;rsquo; (git commit hash appended)</source>
          <target state="translated">開発バージョン： '1.8.0.dev-f1234afa'（git commit hash追加）</target>
        </trans-unit>
        <trans-unit id="4020adf902ce73aabcac806e3e7ff49d1c01db16" translate="yes" xml:space="preserve">
          <source>Development workflow</source>
          <target state="translated">開発ワークフロー</target>
        </trans-unit>
        <trans-unit id="d19b6f0aed2ffef1a60727277d49ba4b00c0e3f0" translate="yes" xml:space="preserve">
          <source>Device to write message. If None, defaults to &lt;code&gt;sys.stdout&lt;/code&gt; which is very similar to &lt;code&gt;print&lt;/code&gt;. &lt;code&gt;device&lt;/code&gt; needs to have &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;flush()&lt;/code&gt; methods.</source>
          <target state="translated">メッセージを書き込むデバイス。Noneの場合、デフォルトは &lt;code&gt;sys.stdout&lt;/code&gt; になり &lt;code&gt;print&lt;/code&gt; 。これは、printと非常によく似ています。 &lt;code&gt;device&lt;/code&gt; には &lt;code&gt;write()&lt;/code&gt; &lt;code&gt;flush()&lt;/code&gt; メソッドとflush（）メソッドが必要です。</target>
        </trans-unit>
        <trans-unit id="2587e018673361fa809647d0df3794abbf90b626" translate="yes" xml:space="preserve">
          <source>Diagnosing machine parameters.</source>
          <target state="translated">機械のパラメータを診断します。</target>
        </trans-unit>
        <trans-unit id="571a1b4f25ce9e3bf2b1d858d49e854688780a04" translate="yes" xml:space="preserve">
          <source>Diagonal above which to zero elements. &lt;code&gt;k = 0&lt;/code&gt; (the default) is the main diagonal, &lt;code&gt;k &amp;lt; 0&lt;/code&gt; is below it and &lt;code&gt;k &amp;gt; 0&lt;/code&gt; is above.</source>
          <target state="translated">その上に要素をゼロにする対角線。 &lt;code&gt;k = 0&lt;/code&gt; （デフォルト）は主対角線で、 &lt;code&gt;k &amp;lt; 0&lt;/code&gt; はその下、 &lt;code&gt;k &amp;gt; 0&lt;/code&gt; は上です。</target>
        </trans-unit>
        <trans-unit id="55837b5795b6970f83dccf9cc6ed178e395491c1" translate="yes" xml:space="preserve">
          <source>Diagonal covariance (&lt;code&gt;cov&lt;/code&gt; has non-negative elements, and only on the diagonal)</source>
          <target state="translated">対角共分散（ &lt;code&gt;cov&lt;/code&gt; には負でない要素があり、対角線上のみ）</target>
        </trans-unit>
        <trans-unit id="997674fd629a0b4695b89afdafe7066dd8688712" translate="yes" xml:space="preserve">
          <source>Diagonal covariance means that points are oriented along x or y-axis:</source>
          <target state="translated">対角共分散とは、点がx軸またはy軸に沿って配向していることを意味します。</target>
        </trans-unit>
        <trans-unit id="8b13398d28ad559216c01627144dceb31c001c77" translate="yes" xml:space="preserve">
          <source>Diagonal in question. The default is 0. Use &lt;code&gt;k&amp;gt;0&lt;/code&gt; for diagonals above the main diagonal, and &lt;code&gt;k&amp;lt;0&lt;/code&gt; for diagonals below the main diagonal.</source>
          <target state="translated">問題の対角線。デフォルトは0です。主対角より上の対角には &lt;code&gt;k&amp;gt;0&lt;/code&gt; を使用し、主対角より下の対角には &lt;code&gt;k&amp;lt;0&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="2272a7d3ef4499c2fba3286512459f06b9b8c4bb" translate="yes" xml:space="preserve">
          <source>Diagonal offset (see &lt;a href=&quot;numpy.tril#numpy.tril&quot;&gt;&lt;code&gt;tril&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">対角オフセット（詳細については、&lt;a href=&quot;numpy.tril#numpy.tril&quot;&gt; &lt;code&gt;tril&lt;/code&gt; &lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="bdb7019564c135f875fc4c3e6f917c80e9b077c0" translate="yes" xml:space="preserve">
          <source>Diagonal offset (see &lt;a href=&quot;numpy.triu#numpy.triu&quot;&gt;&lt;code&gt;triu&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">対角オフセット（詳細は&lt;a href=&quot;numpy.triu#numpy.triu&quot;&gt; &lt;code&gt;triu&lt;/code&gt; &lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="03d8dd8b377b7d9a317ab567d850a967ff187884" translate="yes" xml:space="preserve">
          <source>Diagonal to set; 0, the default, corresponds to the &amp;ldquo;main&amp;rdquo; diagonal, a positive (negative) &lt;code&gt;k&lt;/code&gt; giving the number of the diagonal above (below) the main.</source>
          <target state="translated">設定する対角線。デフォルトの0は「主」対角に対応し、正（負） &lt;code&gt;k&lt;/code&gt; は主の上（下）の対角の数を示します。</target>
        </trans-unit>
        <trans-unit id="01b9cc7bface7de40b225d1e08bfd9974c80817b" translate="yes" xml:space="preserve">
          <source>Dictionary containing the information required to describe the state of the PRNG</source>
          <target state="translated">PRNGの状態を記述するために必要な情報を含む辞書</target>
        </trans-unit>
        <trans-unit id="465ece096e63883c4adc1473d9e883a01beef81f" translate="yes" xml:space="preserve">
          <source>Dictionary containing the old settings.</source>
          <target state="translated">古い設定を含む辞書。</target>
        </trans-unit>
        <trans-unit id="238865dee85fc7a720df3db4fb92252c7e4d3acf" translate="yes" xml:space="preserve">
          <source>Dictionary mapping field names to the corresponding default values.</source>
          <target state="translated">フィールド名を対応するデフォルト値にマッピングする辞書。</target>
        </trans-unit>
        <trans-unit id="e39dc1ed92c57f800777e71abed1d83e5faca236" translate="yes" xml:space="preserve">
          <source>Dictionary mapping old field names to their new version.</source>
          <target state="translated">古いフィールド名を新しいバージョンにマッピングする辞書。</target>
        </trans-unit>
        <trans-unit id="a302338cc77d36ca6ca6a444397d206bd6ba38d8" translate="yes" xml:space="preserve">
          <source>Dictionary of current print options with keys</source>
          <target state="translated">現在の印刷オプションのキー付き辞書</target>
        </trans-unit>
        <trans-unit id="9e2413069148ff06bfc90db576c632870eaad55e" translate="yes" xml:space="preserve">
          <source>Dictionary of named fields defined for this data type, or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">このデータ型に定義された名前付きフィールドの辞書、または &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6015961218e2af6fe8520645bc2f02289c93438a" translate="yes" xml:space="preserve">
          <source>Dictionary of parent fields (used interbally during recursion).</source>
          <target state="translated">親フィールドの辞書(再帰時に相互に使用されます)。</target>
        </trans-unit>
        <trans-unit id="b18fcf6662ee91bcc267021a433a9c47b4716fe9" translate="yes" xml:space="preserve">
          <source>Difference (subtraction) of two polynomials.</source>
          <target state="translated">2つの多項式の差(引き算)。</target>
        </trans-unit>
        <trans-unit id="825117b1f5072a690e7d5d35fccadef88b068aef" translate="yes" xml:space="preserve">
          <source>Difference between sequence and scalars:</source>
          <target state="translated">シーケンスとスカラーの違い</target>
        </trans-unit>
        <trans-unit id="44ae6a3aab38641659dd21a2dd5a0126482da74d" translate="yes" xml:space="preserve">
          <source>Differences Between 1.6 and 1.7 Datetimes</source>
          <target state="translated">1.6と1.7の日付の違い</target>
        </trans-unit>
        <trans-unit id="b75fd672a5cf256c07308370a04454e14a79f629" translate="yes" xml:space="preserve">
          <source>Differences with Array interface (Version 2)</source>
          <target state="translated">配列インタフェースとの違い(バージョン2</target>
        </trans-unit>
        <trans-unit id="4300cd91f693489c6a5674ec8ec61a6dee25b189" translate="yes" xml:space="preserve">
          <source>Different &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarrays&lt;/code&gt;&lt;/a&gt; can share the same data, so that changes made in one &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; may be visible in another. That is, an ndarray can be a &lt;em&gt;&amp;ldquo;view&amp;rdquo;&lt;/em&gt; to another ndarray, and the data it is referring to is taken care of by the &lt;em&gt;&amp;ldquo;base&amp;rdquo;&lt;/em&gt; ndarray. ndarrays can also be views to memory owned by Python &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt;&lt;code&gt;strings&lt;/code&gt;&lt;/a&gt; or objects implementing the &lt;code&gt;buffer&lt;/code&gt; or &lt;a href=&quot;arrays.interface#arrays-interface&quot;&gt;array&lt;/a&gt; interfaces.</source>
          <target state="translated">異なる&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarrays&lt;/code&gt; &lt;/a&gt;が同じデータを共有できるため、ある&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; で&lt;/a&gt;行われた変更が別のndarrayで表示される場合があります。つまり、ndarrayは別のndarrayの&lt;em&gt;「ビュー」&lt;/em&gt;になることができ、それが参照しているデータは&lt;em&gt;「ベース」の&lt;/em&gt; ndarray によって処理されます。ndarraysは、Pythonの&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt; &lt;code&gt;strings&lt;/code&gt; &lt;/a&gt;が所有するメモリのビューや、 &lt;code&gt;buffer&lt;/code&gt; または&lt;a href=&quot;arrays.interface#arrays-interface&quot;&gt;配列の&lt;/a&gt;インターフェースを実装するオブジェクトにすることもできます。</target>
        </trans-unit>
        <trans-unit id="d317c26cbc42ec5b9f720e139bd4e510372cd697" translate="yes" xml:space="preserve">
          <source>Different C numeric types of the same size have unique names</source>
          <target state="translated">同じサイズの異なるC言語の数値型には固有の名前が付いています。</target>
        </trans-unit>
        <trans-unit id="98865245deb6202007caff9ab4fef64fa9b26b3d" translate="yes" xml:space="preserve">
          <source>Different array objects can share the same data. The &lt;code&gt;view&lt;/code&gt; method creates a new array object that looks at the same data.</source>
          <target state="translated">異なる配列オブジェクトが同じデータを共有できます。 &lt;code&gt;view&lt;/code&gt; 方法は、同じデータを見て、新しい配列オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="2d1293c185e75af6d69f6c98a33e894acc7589c9" translate="yes" xml:space="preserve">
          <source>Differentiate a Chebyshev series.</source>
          <target state="translated">チェビシェフ級数を区別する。</target>
        </trans-unit>
        <trans-unit id="8d839ccd2dfc63fbf3d7f72d0c5a816686c1455a" translate="yes" xml:space="preserve">
          <source>Differentiate a Hermite series.</source>
          <target state="translated">ハーミットシリーズを区別してください。</target>
        </trans-unit>
        <trans-unit id="350467ef2f75b4100fac9eb332f8dbf9310f3098" translate="yes" xml:space="preserve">
          <source>Differentiate a Hermite_e series.</source>
          <target state="translated">Hermite_eシリーズを区別する。</target>
        </trans-unit>
        <trans-unit id="7ecd2cf570222711a1cc1ae4380637a814f82362" translate="yes" xml:space="preserve">
          <source>Differentiate a Laguerre series.</source>
          <target state="translated">ラゲール級数を区別する。</target>
        </trans-unit>
        <trans-unit id="320f56f9077471825e8d1549eab31dc00557c694" translate="yes" xml:space="preserve">
          <source>Differentiate a Legendre series.</source>
          <target state="translated">レジェンドレシリーズを差別化する</target>
        </trans-unit>
        <trans-unit id="7bfc33e1228b29a88933a8f29aae49636b3414cf" translate="yes" xml:space="preserve">
          <source>Differentiate a polynomial.</source>
          <target state="translated">多項式を微分する。</target>
        </trans-unit>
        <trans-unit id="844fa0e757902457e0da48c9d9d537e645b1a135" translate="yes" xml:space="preserve">
          <source>Differentiate.</source>
          <target state="translated">Differentiate.</target>
        </trans-unit>
        <trans-unit id="5fbe5e498b5af2c25aac251fb6bb0a2c7a4ee208" translate="yes" xml:space="preserve">
          <source>Dimension Index</source>
          <target state="translated">ディメンションインデックス</target>
        </trans-unit>
        <trans-unit id="604ffcf9d27fb4fb0162fdca0045216d08973bc5" translate="yes" xml:space="preserve">
          <source>Dimension Name</source>
          <target state="translated">寸法名</target>
        </trans-unit>
        <trans-unit id="16b40f0ccd35ed9bc1f597c1b6ca359ab12da9c4" translate="yes" xml:space="preserve">
          <source>Dimension indices in a flattened form; indices of argument &lt;code&gt;k&lt;/code&gt; are stored in &lt;code&gt;core_dim_ixs[core_offsets[k] : core_offsets[k] +
core_numdims[k]]&lt;/code&gt;</source>
          <target state="translated">平坦化された形式の次元インデックス。引数 &lt;code&gt;k&lt;/code&gt; のインデックスは、 &lt;code&gt;core_dim_ixs[core_offsets[k] : core_offsets[k] + core_numdims[k]]&lt;/code&gt; 格納されます</target>
        </trans-unit>
        <trans-unit id="4720f96f0dc9b13a80d3150f6ee99efe7a2bf618" translate="yes" xml:space="preserve">
          <source>Dimension lists for different arguments are separated by &lt;code&gt;&quot;,&quot;&lt;/code&gt;. Input/output arguments are separated by &lt;code&gt;&quot;-&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">異なる引数のディメンションリストは、 &lt;code&gt;&quot;,&quot;&lt;/code&gt; 区切られます。入出力引数は &lt;code&gt;&quot;-&amp;gt;&quot;&lt;/code&gt; で区切ります。</target>
        </trans-unit>
        <trans-unit id="93f05beec2d11025891d4dbf607e42fff20564b8" translate="yes" xml:space="preserve">
          <source>Disabling ATLAS and other accelerated libraries</source>
          <target state="translated">ATLASやその他の加速ライブラリを無効にする</target>
        </trans-unit>
        <trans-unit id="37cc6b0f7bb3682386878d1b4327551ac2b2f9c6" translate="yes" xml:space="preserve">
          <source>Discrete Fourier Transform (&lt;code&gt;numpy.fft&lt;/code&gt;)</source>
          <target state="translated">離散フーリエ変換（ &lt;code&gt;numpy.fft&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0599eda60b4e9fea359c989e15306fa6ba42641a" translate="yes" xml:space="preserve">
          <source>Discrete Fourier Transform (numpy.fft)</source>
          <target state="translated">離散フーリエ変換 (numpy.ft)</target>
        </trans-unit>
        <trans-unit id="7e09c6be62e60a24d79a9a2519a544283d5d6191" translate="yes" xml:space="preserve">
          <source>Discrete cross-correlation of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;v&lt;/code&gt; の離散相互相関。</target>
        </trans-unit>
        <trans-unit id="e53e1928d52ad6e33b46c1b8035d3e51b89bc405" translate="yes" xml:space="preserve">
          <source>Discrete fourier transform</source>
          <target state="translated">離散フーリエ変換</target>
        </trans-unit>
        <trans-unit id="d506f48e956cd0fc595f2d760c2568b2ecab8f30" translate="yes" xml:space="preserve">
          <source>Discrete uniform distribution over the closed interval &lt;code&gt;[low, high]&lt;/code&gt;.</source>
          <target state="translated">閉じた間隔での離散的な均一分布 &lt;code&gt;[low, high]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="581725b9ae0b1aa5fab3c6862adf5b089aedf3b7" translate="yes" xml:space="preserve">
          <source>Discrete uniform distribution, yielding integers.</source>
          <target state="translated">離散的な一様分布で、整数が得られます。</target>
        </trans-unit>
        <trans-unit id="e9cbd8c39929bc0b483e8db9cb22ad66356f9dd1" translate="yes" xml:space="preserve">
          <source>Discrete, linear convolution of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;v&lt;/code&gt; の離散線形たたみ込み。</target>
        </trans-unit>
        <trans-unit id="2f1bd27e525549ac4c15b3721fa99d1b05468878" translate="yes" xml:space="preserve">
          <source>Discrete, linear convolution of two one-dimensional sequences.</source>
          <target state="translated">2つの1次元配列の離散的な線形畳み込み。</target>
        </trans-unit>
        <trans-unit id="e6320bdc4929e4f52b900ddb94c8b699ecbe6801" translate="yes" xml:space="preserve">
          <source>Discrimination can be subtle and it can be unconscious. It can show itself as unfairness and hostility in otherwise ordinary interactions. We know that this does occur, and we will take care to look out for it. We would very much like to hear from you if you feel you have been treated unfairly, and we will use these procedures to make sure that your complaint is heard and addressed.</source>
          <target state="translated">差別は、微妙なことができ、それは無意識であることができます。それは、そうでなければ普通の交流の中で、不公平さや敵意として自分自身を示すことができます。私たちは、このようなことが起こることを知っていますので、そのようなことがないように注意します。不当な扱いを受けたと感じた場合には、ぜひご意見をお聞かせください。</target>
        </trans-unit>
        <trans-unit id="820f5171bb026c33497c51bf6408edd94f4c7574" translate="yes" xml:space="preserve">
          <source>Dispersion of the distribution, has to be &amp;gt;=0.</source>
          <target state="translated">分布の分散は&amp;gt; = 0でなければなりません。</target>
        </trans-unit>
        <trans-unit id="4d84e2496f66666155184bfa4fad0c59a39f67e0" translate="yes" xml:space="preserve">
          <source>Display a message on a device.</source>
          <target state="translated">デバイスにメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="b40bb754403d167b3c047ebbae91fd8d8cb0914f" translate="yes" xml:space="preserve">
          <source>Display histogram of the sample:</source>
          <target state="translated">サンプルのヒストグラムを表示します。</target>
        </trans-unit>
        <trans-unit id="188801f0d5b3d1b7349810d9fd7ff8a72e496879" translate="yes" xml:space="preserve">
          <source>Display results as a histogram:</source>
          <target state="translated">結果をヒストグラムとして表示します。</target>
        </trans-unit>
        <trans-unit id="8a9edcfc295cbbba0c31cafd95aee17d95c83756" translate="yes" xml:space="preserve">
          <source>Display the histogram of the samples, along with the probability density function:</source>
          <target state="translated">サンプルのヒストグラムを確率密度関数とともに表示します。</target>
        </trans-unit>
        <trans-unit id="1e318b4b3e84c3dbcd35ba51c8d38616480afa39" translate="yes" xml:space="preserve">
          <source>Display the order (the leading zero-coefficients are removed):</source>
          <target state="translated">次数を表示します(先頭のゼロ係数は削除されます)。</target>
        </trans-unit>
        <trans-unit id="73a33865dd016879cd21dfa8fd105859512d6d5a" translate="yes" xml:space="preserve">
          <source>Distance between 1 and the nearest floating point number.</source>
          <target state="translated">1と最も近い浮動小数点数との距離。</target>
        </trans-unit>
        <trans-unit id="1d3c457cbe3e35739086346e0a4048653efa42e7" translate="yes" xml:space="preserve">
          <source>Distribution</source>
          <target state="translated">Distribution</target>
        </trans-unit>
        <trans-unit id="1908a0e50cf9cf44d92392e9f5f89a3166d12095" translate="yes" xml:space="preserve">
          <source>Distribution mean, must be &amp;gt; 0.</source>
          <target state="translated">分布平均。0より大きい必要があります。</target>
        </trans-unit>
        <trans-unit id="955961355de913bb9e7fa3e948b32a11d7c7c64d" translate="yes" xml:space="preserve">
          <source>Distribution parameter. Must be greater than 1.</source>
          <target state="translated">分布パラメータ。1より大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="71fff5ea85661c16e7519843bc17a41ff8e91eb9" translate="yes" xml:space="preserve">
          <source>Distributions</source>
          <target state="translated">Distributions</target>
        </trans-unit>
        <trans-unit id="e7bf168f4e2cefa6f42a3fb7b922464be193fe57" translate="yes" xml:space="preserve">
          <source>Divergence between &lt;code&gt;upstream/master&lt;/code&gt; and your feature branch</source>
          <target state="translated">&lt;code&gt;upstream/master&lt;/code&gt; と機能ブランチ間の相違</target>
        </trans-unit>
        <trans-unit id="3e0529b57b9e8a87d594e4db130981ead9c297bb" translate="yes" xml:space="preserve">
          <source>Diversity Statement</source>
          <target state="translated">ダイバーシティ・ステートメント</target>
        </trans-unit>
        <trans-unit id="8b193321a119fbd0dcd684bd2d9426886ca75352" translate="yes" xml:space="preserve">
          <source>Divide one Chebyshev series by another.</source>
          <target state="translated">チェビシェフ級数を別の級数で割る。</target>
        </trans-unit>
        <trans-unit id="143efc24501a0aca7c9b8146445d3052ccca2768" translate="yes" xml:space="preserve">
          <source>Divide one Hermite series by another.</source>
          <target state="translated">1つのハーミットシリーズを別のもので割る。</target>
        </trans-unit>
        <trans-unit id="59969920d0ad8492606516de2799361ab80e51e4" translate="yes" xml:space="preserve">
          <source>Divide one Laguerre series by another.</source>
          <target state="translated">1つのラゲールシリーズを別のもので割る。</target>
        </trans-unit>
        <trans-unit id="cb8fb14724e04e74acd5ed518b7956bde57f9f7f" translate="yes" xml:space="preserve">
          <source>Divide one Legendre series by another.</source>
          <target state="translated">レジェンドレシリーズを別のもので割る。</target>
        </trans-unit>
        <trans-unit id="53b11bc9ec8586eecc94bbdfc2f103e8f1cdcb61" translate="yes" xml:space="preserve">
          <source>Divide one polynomial by another.</source>
          <target state="translated">1つの多項式を別の多項式で割る。</target>
        </trans-unit>
        <trans-unit id="c51ce5484f877f3b3126642a285f454856b1a199" translate="yes" xml:space="preserve">
          <source>Divide other into self, and return a new masked array.</source>
          <target state="translated">その他をselfに分割し、新しいマスクされた配列を返します。</target>
        </trans-unit>
        <trans-unit id="2ef1e5ad95321353adac46fbc8491e615e836d21" translate="yes" xml:space="preserve">
          <source>Divide self by other in-place.</source>
          <target state="translated">自己を他の場所で分割する。</target>
        </trans-unit>
        <trans-unit id="1e3c651961978f36b837c449de83e63bcfcd74e0" translate="yes" xml:space="preserve">
          <source>Divide self into other, and return a new masked array.</source>
          <target state="translated">selfをotherに分割し、新しいマスクされた配列を返します。</target>
        </trans-unit>
        <trans-unit id="fdde9e15039c0cebf1238ec9b7a4737bb63abb02" translate="yes" xml:space="preserve">
          <source>Dividend array.</source>
          <target state="translated">配当金の配列。</target>
        </trans-unit>
        <trans-unit id="94054a2bd282906d6045981a996c888ef4e4b84a" translate="yes" xml:space="preserve">
          <source>Dividend polynomial&amp;rsquo;s coefficients.</source>
          <target state="translated">配当多項式の係数。</target>
        </trans-unit>
        <trans-unit id="ae3d5366321b2cda8048303484a9efb3b8012809" translate="yes" xml:space="preserve">
          <source>Dividend.</source>
          <target state="translated">Dividend.</target>
        </trans-unit>
        <trans-unit id="3da76ff26283ccdfb95f22f35e70c08074f9c0d6" translate="yes" xml:space="preserve">
          <source>Division by zero: infinite result obtained from finite numbers.</source>
          <target state="translated">ゼロによる除算:有限数から得られる無限の結果。</target>
        </trans-unit>
        <trans-unit id="5c970858ddd5ebfccc0979913547b40892ea84f0" translate="yes" xml:space="preserve">
          <source>Division:</source>
          <target state="translated">Division:</target>
        </trans-unit>
        <trans-unit id="e528cec9df846efb2d96080851febbb0ef5214b8" translate="yes" xml:space="preserve">
          <source>Divisor array. If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">除数配列。 &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; 場合、それらは共通の形状にブロードキャスト可能でなければなりません（これが出力の形状になります）。</target>
        </trans-unit>
        <trans-unit id="35ac85bf74de66241c9334431207aa5df69df721" translate="yes" xml:space="preserve">
          <source>Divisor polynomial&amp;rsquo;s coefficients.</source>
          <target state="translated">除数多項式の係数。</target>
        </trans-unit>
        <trans-unit id="a079e40a62a4209488cf119d0047ff12fb70cf71" translate="yes" xml:space="preserve">
          <source>Divisor. If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">除数。 &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; 場合、それらは共通の形状にブロードキャスト可能でなければなりません（これが出力の形状になります）。</target>
        </trans-unit>
        <trans-unit id="1a536da5cd434d26e0ec447ec43ce448909aa6d1" translate="yes" xml:space="preserve">
          <source>Divmod:</source>
          <target state="translated">Divmod:</target>
        </trans-unit>
        <trans-unit id="45ce71204f92d6f8852c63ee93e7b51ac756d330" translate="yes" xml:space="preserve">
          <source>Do [not] lower the cases in &lt;code&gt;&amp;lt;fortran files&amp;gt;&lt;/code&gt;. By default, &lt;code&gt;--lower&lt;/code&gt; is assumed with &lt;code&gt;-h&lt;/code&gt; switch, and &lt;code&gt;--no-lower&lt;/code&gt; without the &lt;code&gt;-h&lt;/code&gt; switch.</source>
          <target state="translated">&lt;code&gt;&amp;lt;fortran files&amp;gt;&lt;/code&gt; 小文字を下げないでください。デフォルトでは、 &lt;code&gt;--lower&lt;/code&gt; は &lt;code&gt;-h&lt;/code&gt; スイッチで想定され、-no &lt;code&gt;--no-lower&lt;/code&gt; は &lt;code&gt;-h&lt;/code&gt; スイッチなしで想定されます。</target>
        </trans-unit>
        <trans-unit id="3d78017db5e95583684a29d66eb903a8ce60aba4" translate="yes" xml:space="preserve">
          <source>Do a keyword search on docstrings.</source>
          <target state="translated">ドクストリングスでキーワード検索をしてください。</target>
        </trans-unit>
        <trans-unit id="5093cfdeecbaad59b0032ada090cb03d7214ad89" translate="yes" xml:space="preserve">
          <source>Do any other changes. When you are ready to release, do the following changes:</source>
          <target state="translated">その他の変更を行ってください。リリースの準備ができたら、以下の変更を行います。</target>
        </trans-unit>
        <trans-unit id="5ed0fbfa16e3c978333f6bb9479feb8cb786008c" translate="yes" xml:space="preserve">
          <source>Do any platform-specific customization of a compiler instance.</source>
          <target state="translated">コンパイラインスタンスのプラットフォーム固有のカスタマイズを行います。</target>
        </trans-unit>
        <trans-unit id="aa4f30d77ca9cffce5a730094491acaed21d0c15" translate="yes" xml:space="preserve">
          <source>Do not abbreviate &lt;code&gt;scipy&lt;/code&gt;. There is no motivating use case to abbreviate it in the real world, so we avoid it in the documentation to avoid confusion.</source>
          <target state="translated">&lt;code&gt;scipy&lt;/code&gt; を省略しないでください。現実の世界ではそれを省略した動機付けのユースケースはないため、混乱を避けるためにドキュメントでは避けています。</target>
        </trans-unit>
        <trans-unit id="bbd5666b437c28187aec8798c5634c9e0657218d" translate="yes" xml:space="preserve">
          <source>Do not lookup &lt;code&gt;__buffer__&lt;/code&gt; attribute in &lt;code&gt;numpy.frombuffer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__buffer__&lt;/code&gt; 属性を検索しないで &lt;code&gt;numpy.frombuffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea9d279c47a9187c1db7b1f7b114b04d8f0172e5" translate="yes" xml:space="preserve">
          <source>Do not lose the type info if the sequence contains unknown objects.</source>
          <target state="translated">シーケンスに未知のオブジェクトが含まれている場合は、型情報を失わないようにしてください。</target>
        </trans-unit>
        <trans-unit id="753e558e0889bfe1b0b8ea64720e95bc5e2d003e" translate="yes" xml:space="preserve">
          <source>Do not make temporary copies for in-place accumulation</source>
          <target state="translated">場内蓄積のために一時的なコピーをしない</target>
        </trans-unit>
        <trans-unit id="37d435c090c5ec2cb12a71fd3a6a6e5087869ea8" translate="yes" xml:space="preserve">
          <source>Do not rely on the combination of &lt;code&gt;tofile&lt;/code&gt; and &lt;a href=&quot;#numpy.fromfile&quot;&gt;&lt;code&gt;fromfile&lt;/code&gt;&lt;/a&gt; for data storage, as the binary files generated are are not platform independent. In particular, no byte-order or data-type information is saved. Data can be stored in the platform independent &lt;code&gt;.npy&lt;/code&gt; format using &lt;a href=&quot;numpy.save#numpy.save&quot;&gt;&lt;code&gt;save&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.load#numpy.load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">組み合わせに依存しないでください &lt;code&gt;tofile&lt;/code&gt; と&lt;a href=&quot;#numpy.fromfile&quot;&gt; &lt;code&gt;fromfile&lt;/code&gt; &lt;/a&gt;生成されたバイナリファイルであるとして、データ・ストレージのためのプラットフォーム独立していません。特に、バイトオーダーやデータ型の情報は保存されません。代わりに、&lt;a href=&quot;numpy.save#numpy.save&quot;&gt; &lt;code&gt;save&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;numpy.load#numpy.load&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;を使用して、プラットフォームに依存しない &lt;code&gt;.npy&lt;/code&gt; 形式でデータを保存できます。</target>
        </trans-unit>
        <trans-unit id="3c8f5a205e26b952d375f39fdb5421c127666dd7" translate="yes" xml:space="preserve">
          <source>Do not rely on the combination of &lt;code&gt;tofile&lt;/code&gt; and &lt;a href=&quot;#numpy.fromfile&quot;&gt;&lt;code&gt;fromfile&lt;/code&gt;&lt;/a&gt; for data storage, as the binary files generated are not platform independent. In particular, no byte-order or data-type information is saved. Data can be stored in the platform independent &lt;code&gt;.npy&lt;/code&gt; format using &lt;a href=&quot;numpy.save#numpy.save&quot;&gt;&lt;code&gt;save&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.load#numpy.load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">組み合わせに依存しないでください &lt;code&gt;tofile&lt;/code&gt; と&lt;a href=&quot;#numpy.fromfile&quot;&gt; &lt;code&gt;fromfile&lt;/code&gt; &lt;/a&gt;生成されたバイナリファイルは、プラットフォーム独立していないとして、データストレージのために。特に、バイトオーダーまたはデータ型の情報は保存されません。データは、代わりに&lt;a href=&quot;numpy.save#numpy.save&quot;&gt; &lt;code&gt;save&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;numpy.load#numpy.load&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;を使用して、プラットフォームに依存しない &lt;code&gt;.npy&lt;/code&gt; 形式で保存できます。</target>
        </trans-unit>
        <trans-unit id="a3e1823cbbdfbb28b0abf8529520a9bf10c3f493" translate="yes" xml:space="preserve">
          <source>Do not use the Python keywords &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; to combine logical array expressions. These keywords will test the truth value of the entire array (not element-by-element as you might expect). Use the bitwise operators &amp;amp; and | instead.</source>
          <target state="translated">Pythonキーワードの &lt;code&gt;and&lt;/code&gt; と &lt;code&gt;or&lt;/code&gt; を使用して、論理配列式を組み合わせないでください。これらのキーワードは、配列全体の真理値をテストします（予想される要素ごとではありません）。ビットごとの演算子＆と|を使用する 代わりに。</target>
        </trans-unit>
        <trans-unit id="85f316156dde56fd422f702bfae89f5d01a4a0bd" translate="yes" xml:space="preserve">
          <source>Do this only for your own feature branches.</source>
          <target state="translated">これは自分の機能ブランチに対してのみ行います。</target>
        </trans-unit>
        <trans-unit id="2a35b8c3a828c6b50ebb9d495090ca5847cf7787" translate="yes" xml:space="preserve">
          <source>Do:</source>
          <target state="translated">Do:</target>
        </trans-unit>
        <trans-unit id="068e10d17a4f1e6b0314030af8daae7e135a1b46" translate="yes" xml:space="preserve">
          <source>Doc wiki</source>
          <target state="translated">ドクwiki</target>
        </trans-unit>
        <trans-unit id="36c8ac7818e5614c3ac61ff4c43b3f1973d4e79a" translate="yes" xml:space="preserve">
          <source>Docstring Conventions</source>
          <target state="translated">ドクストリング規約</target>
        </trans-unit>
        <trans-unit id="d28224752776e7c0254a76c36e65ec7c0fe81831" translate="yes" xml:space="preserve">
          <source>Docstring Processing Framework</source>
          <target state="translated">ドクストリング処理フレームワーク</target>
        </trans-unit>
        <trans-unit id="70bb9e1dd74f67c945982b5b826ac5c41ebd16c8" translate="yes" xml:space="preserve">
          <source>Docstring Standard</source>
          <target state="translated">ドクストリング標準</target>
        </trans-unit>
        <trans-unit id="166cd3bae5954cb6c42019231169856ee7b0313c" translate="yes" xml:space="preserve">
          <source>Docstrings for constants will not be visible in text terminals (constants are of immutable type, so docstrings can not be assigned to them like for for class instances), but will appear in the documentation built with Sphinx.</source>
          <target state="translated">定数のDocstringsはテキスト端末では表示されませんが(定数は不変型なので、クラスインスタンスのようにdocstringsを代入することはできません)、Sphinxで作成したドキュメントには表示されます。</target>
        </trans-unit>
        <trans-unit id="5e01c221d853296d84e769113c74b2df4ca129d1" translate="yes" xml:space="preserve">
          <source>Doctests</source>
          <target state="translated">Doctests</target>
        </trans-unit>
        <trans-unit id="974974af4b7655224f60ff495507eedae4f6994e" translate="yes" xml:space="preserve">
          <source>Doctests are a convenient way of documenting the behavior of a function and allowing that behavior to be tested at the same time. The output of an interactive Python session can be included in the docstring of a function, and the test framework can run the example and compare the actual output to the expected output.</source>
          <target state="translated">Doctests は関数の動作を文書化し、その動作を同時にテストできる便利な方法です。対話的な Python セッションの出力を関数の docstring に含めることができ、テストフレームワークはサンプルを実行して実際の出力と期待される出力を比較することができます。</target>
        </trans-unit>
        <trans-unit id="f82082d9447e427b76298b58ef65d29e97146b17" translate="yes" xml:space="preserve">
          <source>Document changes</source>
          <target state="translated">ドキュメントの変更</target>
        </trans-unit>
        <trans-unit id="02a65528400a16184e36f721be3f5d8abfcc2982" translate="yes" xml:space="preserve">
          <source>Document history</source>
          <target state="translated">文書履歴</target>
        </trans-unit>
        <trans-unit id="20294552e8cd0d5904c98b6f704516d3b16d0084" translate="yes" xml:space="preserve">
          <source>Document these as you would any other function. Do not include &lt;code&gt;self&lt;/code&gt; in the list of parameters. If a method has an equivalent function (which is the case for many ndarray methods for example), the function docstring should contain the detailed documentation, and the method docstring should refer to it. Only put brief summary and &lt;strong&gt;See Also&lt;/strong&gt; sections in the method docstring. The method should use a &lt;strong&gt;Returns&lt;/strong&gt; or &lt;strong&gt;Yields&lt;/strong&gt; section, as appropriate.</source>
          <target state="translated">他の関数と同じように、これらを文書化します。パラメータのリストに &lt;code&gt;self&lt;/code&gt; を含めないでください。メソッドに同等の関数がある場合（たとえば、多くのndarrayメソッドの場合）、関数docstringには詳細なドキュメントが含まれている必要があり、メソッドdocstringはそれを参照する必要があります。メソッドdocstringには、簡単な要約と&lt;strong&gt;関連項目&lt;/strong&gt;のみを入力して&lt;strong&gt;ください&lt;/strong&gt;。メソッドは、必要に応じて、&lt;strong&gt;Returns&lt;/strong&gt;または&lt;strong&gt;Yields&lt;/strong&gt;セクションを使用する必要があり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="aace7c330abd46b13c19d17e41a2b983184fb5c8" translate="yes" xml:space="preserve">
          <source>Documentation changes</source>
          <target state="translated">ドキュメントの変更</target>
        </trans-unit>
        <trans-unit id="bb46cfc837763500362046f3d178e5331ebd4963" translate="yes" xml:space="preserve">
          <source>Documentation for the f2py module (Fortran extensions for Python)</source>
          <target state="translated">f2pyモジュールのドキュメント (PythonのFortran拡張)</target>
        </trans-unit>
        <trans-unit id="d2706eec51222f32b825a53b6e68123a18fe8dfd" translate="yes" xml:space="preserve">
          <source>Documentation for the ufunc. Should not contain the function signature as this is generated dynamically when __doc__ is retrieved.</source>
          <target state="translated">ufuncのドキュメント。関数のシグネチャは __doc__が取得されたときに動的に生成されるので、このシグネチャを含むべきではありません。</target>
        </trans-unit>
        <trans-unit id="545b688d380f572b36365ef4db533e2981eb0dcd" translate="yes" xml:space="preserve">
          <source>Documenting class instances</source>
          <target state="translated">クラスインスタンスを文書化する</target>
        </trans-unit>
        <trans-unit id="de41a9c8105cd9d19325f3f162ff7a2bf42e6f9e" translate="yes" xml:space="preserve">
          <source>Documenting classes</source>
          <target state="translated">クラスを文書化する</target>
        </trans-unit>
        <trans-unit id="083e8a05c747196442536d6d3a79787f09f96786" translate="yes" xml:space="preserve">
          <source>Documenting constants</source>
          <target state="translated">定数の文書化</target>
        </trans-unit>
        <trans-unit id="e5a8458cad9711c106e216f2ddc8545dca74ac62" translate="yes" xml:space="preserve">
          <source>Documenting generators</source>
          <target state="translated">ジェネレーターの文書化</target>
        </trans-unit>
        <trans-unit id="e080b39745727d2a544712c7b574f27a35aa65d9" translate="yes" xml:space="preserve">
          <source>Documenting modules</source>
          <target state="translated">モジュールのドキュメント化</target>
        </trans-unit>
        <trans-unit id="2a54d61d3475020f8594e304efd77ba4b91e171c" translate="yes" xml:space="preserve">
          <source>Docutils Design Specification</source>
          <target state="translated">Docutils 設計仕様書</target>
        </trans-unit>
        <trans-unit id="0d7bd4643db21c4724f9db11e4bb21b57a80e3fc" translate="yes" xml:space="preserve">
          <source>Does &lt;em&gt;not&lt;/em&gt; conjugate! For the complex conjugate transpose, use &lt;code&gt;.H&lt;/code&gt;.</source>
          <target state="translated">活用し&lt;em&gt;ない&lt;/em&gt;！複素共役転置には、 &lt;code&gt;.H&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="fb0e5a02446a93df5c6a9418c49d06da3e217cfb" translate="yes" xml:space="preserve">
          <source>Does not check that the x-coordinate sequence &lt;code&gt;xp&lt;/code&gt; is increasing. If &lt;code&gt;xp&lt;/code&gt; is not increasing, the results are nonsense. A simple check for increasing is:</source>
          <target state="translated">x座標シーケンス &lt;code&gt;xp&lt;/code&gt; が増加していることを確認しません。 &lt;code&gt;xp&lt;/code&gt; が増加していない場合、結果はナンセンスです。増加の簡単なチェックは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="37a9483068c43f31f29b0fa4bbb6e7ded8b89453" translate="yes" xml:space="preserve">
          <source>Does not include memory consumed by non-element attributes of the array object.</source>
          <target state="translated">配列オブジェクトの非要素属性によって消費されるメモリは含まれません。</target>
        </trans-unit>
        <trans-unit id="012c8b761c8393729a4cb704d79590085ef18bb5" translate="yes" xml:space="preserve">
          <source>Does nothing here, but is called by the get_version method and can be overridden by subclasses.</source>
          <target state="translated">ここでは何もしませんが、get_versionメソッドによって呼び出され、サブクラスによってオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="82197e5e2b65bee680b92d50de02f93e5275ccd4" translate="yes" xml:space="preserve">
          <source>Does their energy intake deviate systematically from the recommended value of 7725 kJ?</source>
          <target state="translated">彼らのエネルギー摂取量は7725 kJの推奨値から系統的に逸脱しているのか?</target>
        </trans-unit>
        <trans-unit id="d715a7a4180b81aa4dc0e99a729aab2873bf8d94" translate="yes" xml:space="preserve">
          <source>Doesn&amp;rsquo;t do much for numpy?</source>
          <target state="translated">numpyにはあまり効果がありませんか？</target>
        </trans-unit>
        <trans-unit id="fda52ba5b69a393e193dac1fab0651122da1f1df" translate="yes" xml:space="preserve">
          <source>Doing a little timing in IPython shows that the reduced overhead and memory allocation of the Cython inner loop is providing a very nice speedup over both the straightforward Python code and an expression using NumPy&amp;rsquo;s built-in sum function.:</source>
          <target state="translated">IPythonで少しタイミングを実行すると、Cython内部ループのオーバーヘッドとメモリ割り当ての削減により、単純なPythonコードとNumPyの組み込み合計関数を使用した式の両方で非常に優れた高速化が提供されます。</target>
        </trans-unit>
        <trans-unit id="5a2e054286be13032ccbf78259a0703d8d83b801" translate="yes" xml:space="preserve">
          <source>Domain for the resulting series. If None the domain is the interval from the smallest root to the largest. If [] the domain is the class domain. The default is [].</source>
          <target state="translated">結果として得られる系列の領域.Noneの場合,ドメインは最小ルートから最大ルートまでの区間です.[]の場合、ドメインはクラス・ドメインです。デフォルトは[]です。</target>
        </trans-unit>
        <trans-unit id="4eb122f9bcef4efacc38db644f8b8fbbbd3f1f52" translate="yes" xml:space="preserve">
          <source>Domain over which &lt;code&gt;func&lt;/code&gt; is interpolated. The default is None, in which case the domain is [-1, 1].</source>
          <target state="translated">&lt;code&gt;func&lt;/code&gt; が補間されるドメイン。デフォルトは[なし]です。この場合、ドメインは[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="f2d15df66fa784a07d3132cdc84cc4e9d2a43f78" translate="yes" xml:space="preserve">
          <source>Domain to use for the returned series. If &lt;code&gt;None&lt;/code&gt;, then a minimal domain that covers the points &lt;code&gt;x&lt;/code&gt; is chosen. If &lt;code&gt;[]&lt;/code&gt; the class domain is used. The default value was the class domain in NumPy 1.4 and &lt;code&gt;None&lt;/code&gt; in later versions. The &lt;code&gt;[]&lt;/code&gt; option was added in numpy 1.5.0.</source>
          <target state="translated">返されたシリーズに使用するドメイン。 &lt;code&gt;None&lt;/code&gt; の場合、点 &lt;code&gt;x&lt;/code&gt; をカバーする最小ドメインが選択されます。 &lt;code&gt;[]&lt;/code&gt; の場合、クラスドメインが使用されます。デフォルト値はNumPy 1.4ではクラスドメインで、それ以降のバージョンでは &lt;code&gt;None&lt;/code&gt; でした。 &lt;code&gt;[]&lt;/code&gt; オプションは、numpyの1.5.0で追加されました。</target>
        </trans-unit>
        <trans-unit id="82edf41d9d3177c9bd118b575de636ba573d4e3f" translate="yes" xml:space="preserve">
          <source>Domain to use. The interval &lt;code&gt;[domain[0], domain[1]]&lt;/code&gt; is mapped to the interval &lt;code&gt;[window[0], window[1]]&lt;/code&gt; by shifting and scaling. The default value is [-1, 1].</source>
          <target state="translated">使用するドメイン。間隔 &lt;code&gt;[domain[0], domain[1]]&lt;/code&gt; は、シフトとスケーリングによって間隔 &lt;code&gt;[window[0], window[1]]&lt;/code&gt; マップされます。デフォルト値は[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="07b2e5d2cce01727bf325f6bd8595469a9076b39" translate="yes" xml:space="preserve">
          <source>Domain to use. The interval &lt;code&gt;[domain[0], domain[1]]&lt;/code&gt; is mapped to the interval &lt;code&gt;[window[0], window[1]]&lt;/code&gt; by shifting and scaling. The default value is [0, 1].</source>
          <target state="translated">使用するドメイン。間隔 &lt;code&gt;[domain[0], domain[1]]&lt;/code&gt; は、シフトとスケーリングによって間隔 &lt;code&gt;[window[0], window[1]]&lt;/code&gt; マップされます。デフォルト値は[0、1]です。</target>
        </trans-unit>
        <trans-unit id="99ef7d89dc77a04fadda76f62633917fa42d732a" translate="yes" xml:space="preserve">
          <source>Domains. Each domain must (successfully) convert to a 1-d array containing precisely two values.</source>
          <target state="translated">ドメイン。各ドメインは、正確に2つの値を含む1次元配列に変換する必要があります(成功)。</target>
        </trans-unit>
        <trans-unit id="845a637b103bbcbbace502867de0ec52f11db37e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t be fooled by this attribute&amp;rsquo;s name: &lt;code&gt;reduceat(a)&lt;/code&gt; is not necessarily smaller than &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">この属性の名前に騙されないでください &lt;code&gt;reduceat(a)&lt;/code&gt; は必ずしも &lt;code&gt;a&lt;/code&gt; よりも小さいとは限りません。</target>
        </trans-unit>
        <trans-unit id="ea5b3bcd94196dcf54402b9f64d0933d42d3c0f3" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t set the argtypes attribute of the function object and define an &lt;code&gt;_as_parameter_&lt;/code&gt; method for the object you want to pass in. The &lt;code&gt;_as_parameter_&lt;/code&gt; method must return a Python int which will be passed directly to the function.</source>
          <target state="translated">関数オブジェクトのargtypes属性を設定したり、渡したいオブジェクトの &lt;code&gt;_as_parameter_&lt;/code&gt; メソッドを定義したりしないでください &lt;code&gt;_as_parameter_&lt;/code&gt; メソッドは、関数に直接渡されるPythonintを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="63f6c0cae180c1519a43cdaf129188e65581d9cb" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;a href=&quot;#numpy.amax&quot;&gt;&lt;code&gt;amax&lt;/code&gt;&lt;/a&gt; for element-wise comparison of 2 arrays; when &lt;code&gt;a.shape[0]&lt;/code&gt; is 2, &lt;code&gt;maximum(a[0], a[1])&lt;/code&gt; is faster than &lt;code&gt;amax(a, axis=0)&lt;/code&gt;.</source>
          <target state="translated">2つの配列の要素ごとの比較に&lt;a href=&quot;#numpy.amax&quot;&gt; &lt;code&gt;amax&lt;/code&gt; &lt;/a&gt;を使用しないでください。場合 &lt;code&gt;a.shape[0]&lt;/code&gt; 、2であり、 &lt;code&gt;maximum(a[0], a[1])&lt;/code&gt; より速くなる &lt;code&gt;amax(a, axis=0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ee45e18cb25f4ffa299fe638bc542425558ed71" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;a href=&quot;#numpy.amin&quot;&gt;&lt;code&gt;amin&lt;/code&gt;&lt;/a&gt; for element-wise comparison of 2 arrays; when &lt;code&gt;a.shape[0]&lt;/code&gt; is 2, &lt;code&gt;minimum(a[0], a[1])&lt;/code&gt; is faster than &lt;code&gt;amin(a, axis=0)&lt;/code&gt;.</source>
          <target state="translated">2つの配列の要素ごとの比較に&lt;a href=&quot;#numpy.amin&quot;&gt; &lt;code&gt;amin&lt;/code&gt; &lt;/a&gt;を使用しないでください。場合 &lt;code&gt;a.shape[0]&lt;/code&gt; 2であり、 &lt;code&gt;minimum(a[0], a[1])&lt;/code&gt; よりも高速である &lt;code&gt;amin(a, axis=0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4daa4280ddb2880ee84e8ed5c7d8b50d974a1a2d" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use GCC extensions (e.g. don&amp;rsquo;t write multi-line strings without trailing backslashes). Preferably break long strings up onto separate lines like so:</source>
          <target state="translated">GCC拡張子を使用しないでください（たとえば、末尾に円記号を付けずに複数行の文字列を記述しないでください）。できれば、長い文字列を次のように別々の行に分割します。</target>
        </trans-unit>
        <trans-unit id="925b7467380efc1c88b586cffa1954673d787eb8" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t worry if English is not your first language. Do your best - we&amp;rsquo;ll revise your content and make sure we fix any issues with the code or text.</source>
          <target state="translated">英語があなたの第一言語でなくても心配しないでください。最善を尽くしてください。コンテンツを改訂し、コードまたはテキストの問題を修正します。</target>
        </trans-unit>
        <trans-unit id="aa88c4200f9ff0af7b35d86c216e43d9a614dd06" translate="yes" xml:space="preserve">
          <source>Dot method for ndarrays</source>
          <target state="translated">ndarraysのドット法</target>
        </trans-unit>
        <trans-unit id="e3ed26a26d95479b379119608058dbb2109efb38" translate="yes" xml:space="preserve">
          <source>Dot product of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. Can be an int, float, or complex depending on the types of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; のドット積。 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; のタイプに応じて、int、float、complexのいずれかになります。</target>
        </trans-unit>
        <trans-unit id="b1b5eb09c46c81da930e48b39cbd0988e1d15009" translate="yes" xml:space="preserve">
          <source>Dot product of two arrays.</source>
          <target state="translated">2つの配列のドット積。</target>
        </trans-unit>
        <trans-unit id="69fc04836f683a90b063205daff794ec842891ec" translate="yes" xml:space="preserve">
          <source>Dot product of two arrays. Specifically,</source>
          <target state="translated">2つの配列のドット積。具体的には</target>
        </trans-unit>
        <trans-unit id="c1a9df5fa2f54e372302b1a84476eb9810716451" translate="yes" xml:space="preserve">
          <source>Download wheels</source>
          <target state="translated">ホイールのダウンロード</target>
        </trans-unit>
        <trans-unit id="10eebd1ec669729dbb8a387ff1f1ee83e265b551" translate="yes" xml:space="preserve">
          <source>Draw &lt;code&gt;size&lt;/code&gt; samples of dimension k from a Dirichlet distribution. A Dirichlet-distributed random variable can be seen as a multivariate generalization of a Beta distribution. The Dirichlet distribution is a conjugate prior of a multinomial distribution in Bayesian inference.</source>
          <target state="translated">ディリクレ分布から次元kの &lt;code&gt;size&lt;/code&gt; サンプルを描画します。ディリクレ分布確率変数は、ベータ分布の多変量一般化と見なすことができます。ディリクレ分布は、ベイズ推論における多項分布の前の共役です。</target>
        </trans-unit>
        <trans-unit id="8cef6690ff1fb5f0c2316445230ab79655322c59" translate="yes" xml:space="preserve">
          <source>Draw each 100 values for lambda 100 and 500:</source>
          <target state="translated">ラムダ100と500の値をそれぞれ100個ずつ描きます。</target>
        </trans-unit>
        <trans-unit id="81a1f06763debec752f9772c00b9c8c55a29d67f" translate="yes" xml:space="preserve">
          <source>Draw random samples from a multivariate normal distribution.</source>
          <target state="translated">多変量正規分布からランダムなサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="bc8a71087c0197828056ce59780ae3569bbf2e6d" translate="yes" xml:space="preserve">
          <source>Draw random samples from a normal (Gaussian) distribution.</source>
          <target state="translated">正規分布(ガウス分布)からランダムなサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="c671d5af70be0d6ee7f133745fc1b0ba932a0dc3" translate="yes" xml:space="preserve">
          <source>Draw samples and plot the distribution:</source>
          <target state="translated">サンプルを描き、分布をプロットします。</target>
        </trans-unit>
        <trans-unit id="d0efc43d29d4ab1659826dde574edba31ec35e3f" translate="yes" xml:space="preserve">
          <source>Draw samples from a 1-parameter Weibull distribution with the given shape parameter &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">与えられた形状パラメーター &lt;code&gt;a&lt;/code&gt; で 1パラメーターのワイブル分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="fc465d9bb43792a6a4d6d0b79fc58926df796844" translate="yes" xml:space="preserve">
          <source>Draw samples from a Beta distribution.</source>
          <target state="translated">ベータ分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="db385760aa8dd626fb9adb8853dfd6288a91a9df" translate="yes" xml:space="preserve">
          <source>Draw samples from a Gamma distribution.</source>
          <target state="translated">ガンマ分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="78ab6a861638484d02fed32908592521ecb292b9" translate="yes" xml:space="preserve">
          <source>Draw samples from a Gumbel distribution with specified location and scale. For more information on the Gumbel distribution, see Notes and References below.</source>
          <target state="translated">指定された位置とスケールでガンベル分布からサンプルを描画します。ガンベル分布の詳細については、以下の注記と参考文献を参照してください。</target>
        </trans-unit>
        <trans-unit id="66a815e387ea9da74fa2238bda4162c421a8c8a9" translate="yes" xml:space="preserve">
          <source>Draw samples from a Gumbel distribution.</source>
          <target state="translated">ガンベル分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="cb301b24d49678b3e9fff80704432281d0df654a" translate="yes" xml:space="preserve">
          <source>Draw samples from a Hypergeometric distribution.</source>
          <target state="translated">双幾何学的分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="836d1593a600cfcfb833fff8c11191d4c4c5d27a" translate="yes" xml:space="preserve">
          <source>Draw samples from a Pareto II or Lomax distribution with specified shape.</source>
          <target state="translated">指定された形状のパレートIIまたはローマックス分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="721b7e6dfb7ad60658e5e614aa751c343f6988fc" translate="yes" xml:space="preserve">
          <source>Draw samples from a Poisson distribution.</source>
          <target state="translated">ポアソン分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="62a0b4d313dadcf54cda2bc4c9745765dcc56eb6" translate="yes" xml:space="preserve">
          <source>Draw samples from a Rayleigh distribution.</source>
          <target state="translated">レイリー分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="0cdf4a2aee4c3b56a5568531ce7576534f61561f" translate="yes" xml:space="preserve">
          <source>Draw samples from a Wald, or inverse Gaussian, distribution.</source>
          <target state="translated">Wald(逆ガウス分布)からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="16cd7ccf53dc2b531e1445308d5381898213743b" translate="yes" xml:space="preserve">
          <source>Draw samples from a Weibull distribution.</source>
          <target state="translated">ワイブル分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="0e097ecaf2ff3b51bfb55b676dfdfa6cbd8e50b1" translate="yes" xml:space="preserve">
          <source>Draw samples from a Zipf distribution.</source>
          <target state="translated">Zipf分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="b159750cd52438190e80fd2b264928bcdbbeffee" translate="yes" xml:space="preserve">
          <source>Draw samples from a binomial distribution.</source>
          <target state="translated">二項分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="3e18e00273a5fae8bbde1791f129e0cbe3bd2452" translate="yes" xml:space="preserve">
          <source>Draw samples from a chi-square distribution.</source>
          <target state="translated">カイ二乗分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="7461bda090453d4ff12b83f4027e9d3a1946262b" translate="yes" xml:space="preserve">
          <source>Draw samples from a log-normal distribution with specified mean, standard deviation, and array shape. Note that the mean and standard deviation are not the values for the distribution itself, but of the underlying normal distribution it is derived from.</source>
          <target state="translated">指定された平均,標準偏差,配列形状を持つ対数正規分布からサンプルを抽出します.平均と標準偏差は,その分布自体の値ではなく,その分布の基底にある正規分布の値であることに注意してください.</target>
        </trans-unit>
        <trans-unit id="418d59729801e30d611ad0edbc665078409b6f57" translate="yes" xml:space="preserve">
          <source>Draw samples from a log-normal distribution.</source>
          <target state="translated">対数正規分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="a1bc3727e4de5e7ab2b6eea3e4aaf62bfcf5bf0d" translate="yes" xml:space="preserve">
          <source>Draw samples from a logarithmic series distribution.</source>
          <target state="translated">対数級数分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="259f9fd69d995b257a6d58ec3161de00c6ac8e73" translate="yes" xml:space="preserve">
          <source>Draw samples from a logistic distribution.</source>
          <target state="translated">ロジスティック分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="caeefc0caf49fe896c077769862c6d8f2a2d4d55" translate="yes" xml:space="preserve">
          <source>Draw samples from a multinomial distribution.</source>
          <target state="translated">多項分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="3f26805ca2b4fd1c182f06df074a9a855b5c8e20" translate="yes" xml:space="preserve">
          <source>Draw samples from a negative binomial distribution.</source>
          <target state="translated">負の二項分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="6fad248b8adad205bba771cea1b6af2c597903fb" translate="yes" xml:space="preserve">
          <source>Draw samples from a noncentral chi-square distribution.</source>
          <target state="translated">非中心カイ二乗分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="9282b1d217bfacf12c8b8d4a104f2cce46e68b92" translate="yes" xml:space="preserve">
          <source>Draw samples from a standard Cauchy distribution with mode = 0.</source>
          <target state="translated">mode=0の標準コーシー分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="1bf09a114ab7401dced2153d963e20885d1b64c6" translate="yes" xml:space="preserve">
          <source>Draw samples from a standard Gamma distribution.</source>
          <target state="translated">標準ガンマ分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="14c3ce03d59dad5f0ba6dbc68a1db4e39a115c97" translate="yes" xml:space="preserve">
          <source>Draw samples from a standard Normal distribution (mean=0, stdev=1).</source>
          <target state="translated">標準正規分布(平均=0,stdev=1)から標本を抽出する.</target>
        </trans-unit>
        <trans-unit id="0a5ed72650600061c64a7b3836210429f01c8df4" translate="yes" xml:space="preserve">
          <source>Draw samples from a standard Student&amp;rsquo;s t distribution with &lt;code&gt;df&lt;/code&gt; degrees of freedom.</source>
          <target state="translated">&lt;code&gt;df&lt;/code&gt; 自由度の標準スチューデントのt分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="a9791d093a2516b6b22df69cdc89a44c76c8547c" translate="yes" xml:space="preserve">
          <source>Draw samples from a uniform distribution.</source>
          <target state="translated">均一な分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="c8dcd074131ab16cf48b101b69dbb09a06467e24" translate="yes" xml:space="preserve">
          <source>Draw samples from a von Mises distribution.</source>
          <target state="translated">フォン・ミーゼスの分布からサンプルを引く。</target>
        </trans-unit>
        <trans-unit id="3f67bb2441c84f4b1162da84f12a83a78820075f" translate="yes" xml:space="preserve">
          <source>Draw samples from an F distribution.</source>
          <target state="translated">F分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="b4cb12b4006c936a1a5eaa65c28e2a7372035b59" translate="yes" xml:space="preserve">
          <source>Draw samples from an exponential distribution.</source>
          <target state="translated">指数分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="a30ab841488cf720b5a3a41538404e70c0fdfa78" translate="yes" xml:space="preserve">
          <source>Draw samples from the (univariate) hypergeometric distribution.</source>
          <target state="translated">(一変量)双幾何学的分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="9016ff24a09fb989d28a00e24a13cde2696b4777" translate="yes" xml:space="preserve">
          <source>Draw samples from the Dirichlet distribution.</source>
          <target state="translated">ディリクレ分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="a3fdcad14f303f834dc59b1f3dccb9f86e1705cd" translate="yes" xml:space="preserve">
          <source>Draw samples from the Laplace or double exponential distribution with specified location (or mean) and scale (decay).</source>
          <target state="translated">ラプラス分布や二重指数分布から、位置(または平均)とスケール(減衰)を指定してサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="308c6270dd43fde905a32469d95cef01a142bca2" translate="yes" xml:space="preserve">
          <source>Draw samples from the distribution</source>
          <target state="translated">分布からサンプルを抽出する</target>
        </trans-unit>
        <trans-unit id="5b28ac74b7769bfdc417f7f61e050393575dc125" translate="yes" xml:space="preserve">
          <source>Draw samples from the distribution:</source>
          <target state="translated">分布からサンプルを採取します。</target>
        </trans-unit>
        <trans-unit id="bf043e5601b2f68702eac5005c66d1ebbc6a2030" translate="yes" xml:space="preserve">
          <source>Draw samples from the geometric distribution.</source>
          <target state="translated">幾何学的分布からサンプルを描く。</target>
        </trans-unit>
        <trans-unit id="50bffe344c068c3aa4f884953280cc5f75924007" translate="yes" xml:space="preserve">
          <source>Draw samples from the multivariate hypergeometric distribution.</source>
          <target state="translated">多変量双幾何分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="570de821167a667775bfd8af3be681420e790f2f" translate="yes" xml:space="preserve">
          <source>Draw samples from the noncentral F distribution.</source>
          <target state="translated">非中心F分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="c575768cb70c661f622a7746787703873a7fb9c5" translate="yes" xml:space="preserve">
          <source>Draw samples from the standard exponential distribution.</source>
          <target state="translated">標準指数分布からサンプルを抽出します。</target>
        </trans-unit>
        <trans-unit id="dc17866b1f3b7819078bdef07b4d9d1716739b78" translate="yes" xml:space="preserve">
          <source>Draw samples from the triangular distribution over the interval &lt;code&gt;[left, right]&lt;/code&gt;.</source>
          <target state="translated">区間 &lt;code&gt;[left, right]&lt;/code&gt; にわたる三角分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="1abf94062d6b0e1580c4eed26b19473395f5dd35" translate="yes" xml:space="preserve">
          <source>Draw ten thousand values from the geometric distribution, with the probability of an individual success equal to 0.35:</source>
          <target state="translated">幾何学的分布から1万個の値を描き、個々の成功の確率は0.35に等しい。</target>
        </trans-unit>
        <trans-unit id="226c6736b8b9dc551d8a75e9fd86f951df1752ee" translate="yes" xml:space="preserve">
          <source>Draw values from a noncentral chisquare with very small noncentrality, and compare to a chisquare.</source>
          <target state="translated">非中心性が非常に小さい非中心チスクエアから値を引き出し、チスクエアと比較します。</target>
        </trans-unit>
        <trans-unit id="3329d33efc5189ab8786b87fd997f1cb2a5fa5e8" translate="yes" xml:space="preserve">
          <source>Draw values from the distribution and plot the histogram</source>
          <target state="translated">分布から値を描き、ヒストグラムをプロットする</target>
        </trans-unit>
        <trans-unit id="2eb6c903d93ed4163d8a9ba3d7777ce26bf70cc2" translate="yes" xml:space="preserve">
          <source>Draw values from the distribution and plot the histogram:</source>
          <target state="translated">分布から値を描き、ヒストグラムをプロットします。</target>
        </trans-unit>
        <trans-unit id="345d5990ad5e8dc2505201d616bdccd87cd84e5e" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized Fisher distribution.</source>
          <target state="translated">パラメータ化されたFisher分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="19d957a8e68c68660a252e592ee001bf286ee4ee" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized Gumbel distribution.</source>
          <target state="translated">パラメータ化されたガンベル分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="3874e3e9ab062a1d7bfdc5d30325b887fbc419d7" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized Laplace distribution.</source>
          <target state="translated">パラメータ化されたラプラス分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="1cf05e207a79201534bfd254b9ef20861558f17e" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized Pareto distribution.</source>
          <target state="translated">パラメータ化されたパレート分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="03c373308c04f8e25032a7f57925fc2cd89f5c43" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized Poisson distribution.</source>
          <target state="translated">パラメータ化されたポアソン分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="800df344bc4e042b278de9e7bd37c782c2e5c6c8" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized Rayleigh distribution.</source>
          <target state="translated">パラメータ化されたレイリー分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="96c79cda5fd0d2766220ff50c40f50e59b603b40" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized Wald distribution.</source>
          <target state="translated">パラメータ化されたWald分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="881edd9192611978afca45ae863cda6f17a1d7fb" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized Weibull distribution.</source>
          <target state="translated">パラメータ化されたワイブル分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="cec1a5674838f11821fe1b57bed9970f730915c8" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized Zipf distribution.</source>
          <target state="translated">パラメータ化されたZipf分布からサンプルを描画します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
