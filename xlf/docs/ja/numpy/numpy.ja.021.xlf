<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="25cbadfbabe4aec8c49a2fe4ad5d41f89ab2957d" translate="yes" xml:space="preserve">
          <source>Use the indices of the non-zero elements as an index array to extract these elements:</source>
          <target state="translated">ゼロではない要素のインデックスをインデックス配列として使用して、これらの要素を抽出します。</target>
        </trans-unit>
        <trans-unit id="053906d6c11e234d0523bc070994cf48c59e8878" translate="yes" xml:space="preserve">
          <source>Use the library &lt;code&gt;&amp;lt;libname&amp;gt;&lt;/code&gt; when linking.</source>
          <target state="translated">リンクするときは、ライブラリ &lt;code&gt;&amp;lt;libname&amp;gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="52a989636199f4d3c95f768797df44dd326f52d3" translate="yes" xml:space="preserve">
          <source>Use the same sections as outlined above (all except &lt;code&gt;Returns&lt;/code&gt; are applicable). The constructor (&lt;code&gt;__init__&lt;/code&gt;) should also be documented here, the &lt;strong&gt;Parameters&lt;/strong&gt; section of the docstring details the constructors parameters.</source>
          <target state="translated">上記と同じセクションを使用してください（ &lt;code&gt;Returns&lt;/code&gt; を除くすべてが適用されます）。コンストラクター（ &lt;code&gt;__init__&lt;/code&gt; ）もここに文書化する必要があります。docstringの&lt;strong&gt;パラメーター&lt;/strong&gt;セクションにコンストラクターパラメーターの詳細が記載されています。</target>
        </trans-unit>
        <trans-unit id="bcbe93ff8f6462c82dd7a279518d76404badb4f2" translate="yes" xml:space="preserve">
          <source>Use the same sections as outlined for functions where applicable:</source>
          <target state="translated">該当する場合は、機能の概要と同じセクションを使用してください。</target>
        </trans-unit>
        <trans-unit id="91b5ae96e69a49c5a6862c6b40c4da95f9ee09c6" translate="yes" xml:space="preserve">
          <source>Use these sparingly, as they do not look very good in text terminals and are not often necessary. One situation in which a warning can be useful is for marking a known bug that is not yet fixed.</source>
          <target state="translated">テキスト端末ではあまり見栄えが良くないし、必要とされないことも多いので、 控えめに使いましょう。警告が有用な状況のひとつに、まだ修正されていない既知のバグをマークすることがあります。</target>
        </trans-unit>
        <trans-unit id="fce2d931323b452a238b3e2d786e8a8211d7c7e3" translate="yes" xml:space="preserve">
          <source>Used as an alias of &lt;a href=&quot;#c.NPY_MERGESORT&quot;&gt;&lt;code&gt;NPY_MERGESORT&lt;/code&gt;&lt;/a&gt; and vica versa.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_MERGESORT&quot;&gt; &lt;code&gt;NPY_MERGESORT&lt;/code&gt; の&lt;/a&gt;エイリアスとして使用され、その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="fd6f1513bb6f3e4a98050539792c7f3cbaf760a6" translate="yes" xml:space="preserve">
          <source>Used as-is.</source>
          <target state="translated">そのまま使用しています。</target>
        </trans-unit>
        <trans-unit id="86d25879dd6e8e65f51cfd2c9e310da0aa3fb93c" translate="yes" xml:space="preserve">
          <source>Used for an array, &lt;em&gt;op&lt;/em&gt;, that contains any Python objects. It decrements the reference count of every object in the array according to the data-type of &lt;em&gt;op&lt;/em&gt;. Normal return value is 0. A -1 is returned if an error occurs.</source>
          <target state="translated">Pythonオブジェクトを含む配列&lt;em&gt;opに&lt;/em&gt;使用されます。&lt;em&gt;opの&lt;/em&gt;データ型に従って、配列内のすべてのオブジェクトの参照カウントを減らします。通常の戻り値は0です。エラーが発生した場合は-1が返されます。</target>
        </trans-unit>
        <trans-unit id="12676328e0f8258da10db691bf737e9cd286a726" translate="yes" xml:space="preserve">
          <source>Used for an array, &lt;em&gt;op&lt;/em&gt;, that contains any Python objects. It increments the reference count of every object in the array according to the data-type of &lt;em&gt;op&lt;/em&gt;. A -1 is returned if an error occurs, otherwise 0 is returned.</source>
          <target state="translated">Pythonオブジェクトを含む配列&lt;em&gt;opに&lt;/em&gt;使用されます。&lt;em&gt;opの&lt;/em&gt;データ型に従って、配列内のすべてのオブジェクトの参照カウントをインクリメントします。エラーが発生した場合は-1が返され、それ以外の場合は0が返されます。</target>
        </trans-unit>
        <trans-unit id="2a13b41ea5661dcbc4d05b7183bc9d474dd67bb8" translate="yes" xml:space="preserve">
          <source>Used if &lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.copy&quot;&gt;&lt;code&gt;copy.copy&lt;/code&gt;&lt;/a&gt; is called on an array.</source>
          <target state="translated">配列で&lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.copy&quot;&gt; &lt;code&gt;copy.copy&lt;/code&gt; &lt;/a&gt;が呼び出された場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="b1500692edf9e6d67bd590cb2e6428fecab9820c" translate="yes" xml:space="preserve">
          <source>Used if &lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.copy&quot;&gt;&lt;code&gt;copy.copy&lt;/code&gt;&lt;/a&gt; is called on an array. Returns a copy of the array.</source>
          <target state="translated">配列で&lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.copy&quot;&gt; &lt;code&gt;copy.copy&lt;/code&gt; &lt;/a&gt;が呼び出された場合に使用されます。配列のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="054ce70cbf81d2356ba6ae20aa8fb864ef13bf9e" translate="yes" xml:space="preserve">
          <source>Used if &lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.deepcopy&quot;&gt;&lt;code&gt;copy.deepcopy&lt;/code&gt;&lt;/a&gt; is called on an array.</source>
          <target state="translated">配列で&lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.deepcopy&quot;&gt; &lt;code&gt;copy.deepcopy&lt;/code&gt; &lt;/a&gt;が呼び出された場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="df1278433c263cdbbd69170e679d3f52bb78e816" translate="yes" xml:space="preserve">
          <source>Used in &amp;lsquo;constant&amp;rsquo;. The values to set the padded values for each axis.</source>
          <target state="translated">「定数」で使用されます。各軸のパディングされた値を設定する値。</target>
        </trans-unit>
        <trans-unit id="465b8fcd19cd5e2ed77adff74f2ff5a3fc18db79" translate="yes" xml:space="preserve">
          <source>Used in &amp;lsquo;linear_ramp&amp;rsquo;. The values used for the ending value of the linear_ramp and that will form the edge of the padded array.</source>
          <target state="translated">「linear_ramp」で使用されます。linear_rampの終了値に使用され、パディングされた配列のエッジを形成する値。</target>
        </trans-unit>
        <trans-unit id="d71d6f65b16e9b35cb9fcf9b7569838936b2caa2" translate="yes" xml:space="preserve">
          <source>Used in &amp;lsquo;maximum&amp;rsquo;, &amp;lsquo;mean&amp;rsquo;, &amp;lsquo;median&amp;rsquo;, and &amp;lsquo;minimum&amp;rsquo;. Number of values at edge of each axis used to calculate the statistic value.</source>
          <target state="translated">「最大」、「平均」、「中央値」、「最小」で使用されます。統計値の計算に使用される各軸の端にある値の数。</target>
        </trans-unit>
        <trans-unit id="4325f42e7e418215aac0a73c897c39904b4d0a1e" translate="yes" xml:space="preserve">
          <source>Used in &amp;lsquo;reflect&amp;rsquo;, and &amp;lsquo;symmetric&amp;rsquo;. The &amp;lsquo;even&amp;rsquo; style is the default with an unaltered reflection around the edge value. For the &amp;lsquo;odd&amp;rsquo; style, the extended part of the array is created by subtracting the reflected values from two times the edge value.</source>
          <target state="translated">「反映」および「対称」で使用されます。「偶数」スタイルがデフォルトで、エッジ値の周りの反射は変更されません。「奇数」スタイルの場合、配列の拡張部分は、エッジ値の2倍から反射値を差し引くことによって作成されます。</target>
        </trans-unit>
        <trans-unit id="6a848d84f0829fb89fe0a4c3ff31da438ec74574" translate="yes" xml:space="preserve">
          <source>Used in universal function code to only release the Python GIL if loop-&amp;gt;obj is not true (&lt;em&gt;i.e.&lt;/em&gt; this is not an OBJECT array loop). Requires use of &lt;a href=&quot;array#c.NPY_BEGIN_THREADS_DEF&quot;&gt;&lt;code&gt;NPY_BEGIN_THREADS_DEF&lt;/code&gt;&lt;/a&gt; in variable declaration area.</source>
          <target state="translated">ユニバーサル関数コードで使用され、loop-&amp;gt; objがtrueでない場合（&lt;em&gt;つまり、&lt;/em&gt;これがOBJECT配列ループではない場合）にのみPythonGILを解放します。変数宣言領域で&lt;a href=&quot;array#c.NPY_BEGIN_THREADS_DEF&quot;&gt; &lt;code&gt;NPY_BEGIN_THREADS_DEF&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="1b7f1793a4a4b44dd1933f922f757d629d3be5a3" translate="yes" xml:space="preserve">
          <source>Used in universal function code to only release the Python GIL if loop-&amp;gt;obj is not true (&lt;em&gt;i.e.&lt;/em&gt; this is not an OBJECT array loop). Requires use of &lt;a href=&quot;c-api.array#c.NPY_BEGIN_THREADS_DEF&quot;&gt;&lt;code&gt;NPY_BEGIN_THREADS_DEF&lt;/code&gt;&lt;/a&gt; in variable declaration area.</source>
          <target state="translated">loop-&amp;gt; objがtrueでない（&lt;em&gt;つまり、&lt;/em&gt;これがOBJECT配列ループではない）場合にのみPython GILを解放するために、ユニバーサル関数コードで使用されます。変数宣言領域で&lt;a href=&quot;c-api.array#c.NPY_BEGIN_THREADS_DEF&quot;&gt; &lt;code&gt;NPY_BEGIN_THREADS_DEF&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="10031fc1a49c2cbba6bbb424956b8667cda6fefa" translate="yes" xml:space="preserve">
          <source>Used in universal function code to re-acquire the Python GIL if it was released (because loop-&amp;gt;obj was not true).</source>
          <target state="translated">Python GILがリリースされた場合、それを再取得するためにユニバーサル関数コードで使用されます（loop-&amp;gt; objがtrueでないため）。</target>
        </trans-unit>
        <trans-unit id="c23b41a6c14497a2fa2fb894918e5ebdff35b118" translate="yes" xml:space="preserve">
          <source>Used to construct the convolution operator.</source>
          <target state="translated">畳み込み演算子を構築するために使用します。</target>
        </trans-unit>
        <trans-unit id="c5c64c33615821368bc9743122d8a6c96ff848fe" translate="yes" xml:space="preserve">
          <source>Used to fill the array with data.</source>
          <target state="translated">配列をデータで埋めるために使用します。</target>
        </trans-unit>
        <trans-unit id="9ead00318903d57eb423777b76455ee4a052f86f" translate="yes" xml:space="preserve">
          <source>Used to select only certain elements from a sequence:</source>
          <target state="translated">シーケンスから特定の要素のみを選択するために使用します。</target>
        </trans-unit>
        <trans-unit id="4b06029f962bdaa60d205631cac84f36f3e29d6f" translate="yes" xml:space="preserve">
          <source>Useful functions in &lt;code&gt;numpy.distutils.misc_util&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.distutils.misc_util&lt;/code&gt; の便利な関数</target>
        </trans-unit>
        <trans-unit id="7dc863346a17f843606dc78b7fd5eaa70c18759a" translate="yes" xml:space="preserve">
          <source>Useful math constants</source>
          <target state="translated">便利な数学定数</target>
        </trans-unit>
        <trans-unit id="d7e7cae700d3c37685c439282d2378cb79df959c" translate="yes" xml:space="preserve">
          <source>Useful to regain the GIL in situations where it was released using the BEGIN form of this macro.</source>
          <target state="translated">このマクロのBEGINフォームを使用して解放された状況でGILを取り戻すのに便利です。</target>
        </trans-unit>
        <trans-unit id="8cef70f655bb7cdb9d1c581e3560341cb090e5c3" translate="yes" xml:space="preserve">
          <source>Useful to release the GIL only if &lt;em&gt;dtype&lt;/em&gt; does not contain arbitrary Python objects which may need the Python interpreter during execution of the loop.</source>
          <target state="translated">ループの実行中にPythonインタープリターを必要とする可能性のある任意のPythonオブジェクトが&lt;em&gt;dtypeに&lt;/em&gt;含まれていない場合にのみ、GILを解放するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="d580b2c9b4825f08cb2691c40cd94404df444f3e" translate="yes" xml:space="preserve">
          <source>Useful to release the GIL only if &lt;em&gt;dtype&lt;/em&gt; does not contain arbitrary Python objects which may need the Python interpreter during execution of the loop. Equivalent to</source>
          <target state="translated">ループの実行中にPythonインタープリターが必要になる可能性のある任意のPythonオブジェクトが&lt;em&gt;dtypeに&lt;/em&gt;含まれていない場合にのみ、GILを解放するのに役立ちます。に相当</target>
        </trans-unit>
        <trans-unit id="2978535fda1f10395442e618746112da0bb87d3a" translate="yes" xml:space="preserve">
          <source>Useful to release the GIL only if &lt;em&gt;loop_size&lt;/em&gt; exceeds a minimum threshold, currently set to 500. Should be matched with a &lt;a href=&quot;#c.NPY_END_THREADS&quot;&gt;&lt;code&gt;NPY_END_THREADS&lt;/code&gt;&lt;/a&gt; to regain the GIL.</source>
          <target state="translated">&lt;em&gt;loop_size&lt;/em&gt;が現在500に設定されている最小しきい値を超えた場合にのみGILを解放するのに役立ちます&lt;a href=&quot;#c.NPY_END_THREADS&quot;&gt; &lt;code&gt;NPY_END_THREADS&lt;/code&gt; &lt;/a&gt;を回復するには、NPY_END_THREADSと一致させる必要があります。</target>
        </trans-unit>
        <trans-unit id="377ee38d9430016857a7ac84277e93d26f665af8" translate="yes" xml:space="preserve">
          <source>User-defined BLAS detection order</source>
          <target state="translated">ユーザー定義のBLAS検出順序</target>
        </trans-unit>
        <trans-unit id="01d8c2fd752b3823aa5ae01359574a0ac7005a6d" translate="yes" xml:space="preserve">
          <source>User-defined LAPACK detection order</source>
          <target state="translated">ユーザー定義のLAPACK検出順序</target>
        </trans-unit>
        <trans-unit id="feb130415c58c07804dd84fa00fab56690d584a4" translate="yes" xml:space="preserve">
          <source>User-defined data-types</source>
          <target state="translated">ユーザー定義データ型</target>
        </trans-unit>
        <trans-unit id="77352cf9f5e0b55e17c69c67b2dd7ed545a9424a" translate="yes" xml:space="preserve">
          <source>User-defined types now need to implement &lt;code&gt;__str__&lt;/code&gt; and &lt;code&gt;__repr__&lt;/code&gt;</source>
          <target state="translated">ユーザー定義型は、 &lt;code&gt;__repr__&lt;/code&gt; &lt;code&gt;__str__&lt;/code&gt; と__repr__を実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="fd331bef50cb48757824818608d12be462d6034d" translate="yes" xml:space="preserve">
          <source>Users looking to manipulate tabular data, such as stored in csv files, may find other pydata projects more suitable, such as xarray, pandas, or DataArray. These provide a high-level interface for tabular data analysis and are better optimized for that use. For instance, the C-struct-like memory layout of structured arrays in numpy can lead to poor cache behavior in comparison.</source>
          <target state="translated">csvファイルに保存されているような表形式のデータを操作したいと考えているユーザーは、xarray、pandas、DataArrayなどの他のpydataプロジェクトの方が適しているかもしれません。これらのプロジェクトは表形式データ分析のための高レベルのインターフェイスを提供し、その用途に最適化されています。例えば、numpyの構造化配列のC-structのようなメモリレイアウトは、比較するとキャッシュの挙動が悪くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="2637443926c71ce03a091c2e95bf9b5610348992" translate="yes" xml:space="preserve">
          <source>Using &amp;lsquo;r&amp;rsquo; or &amp;lsquo;c&amp;rsquo; as a first string argument creates a matrix.</source>
          <target state="translated">最初の文字列引数として「r」または「c」を使用すると、行列が作成されます。</target>
        </trans-unit>
        <trans-unit id="65fcf8542af4dfa98c8e336c7ebb663b2e96f530" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#numpy.ix_&quot;&gt;&lt;code&gt;ix_&lt;/code&gt;&lt;/a&gt; one can quickly construct index arrays that will index the cross product. &lt;code&gt;a[np.ix_([1,3],[2,5])]&lt;/code&gt; returns the array &lt;code&gt;[[a[1,2] a[1,5]], [a[3,2] a[3,5]]]&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#numpy.ix_&quot;&gt; &lt;code&gt;ix_&lt;/code&gt; &lt;/a&gt;を使用すると、クロス積にインデックスを付けるインデックス配列をすばやく構築できます。 &lt;code&gt;a[np.ix_([1,3],[2,5])]&lt;/code&gt; は配列 &lt;code&gt;[[a[1,2] a[1,5]], [a[3,2] a[3,5]]]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32ece8fbb6c1ed850bf1c3c8fb0f4d5a7300c2c0" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#numpy.savez&quot;&gt;&lt;code&gt;savez&lt;/code&gt;&lt;/a&gt; with **kwds, the arrays are saved with the keyword names.</source>
          <target state="translated">** kwdsで&lt;a href=&quot;#numpy.savez&quot;&gt; &lt;code&gt;savez&lt;/code&gt; &lt;/a&gt;を使用すると、配列はキーワード名で保存されます。</target>
        </trans-unit>
        <trans-unit id="8c36d4099fe15bc91bbfe91acb74cd64e75d6b3f" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#numpy.savez&quot;&gt;&lt;code&gt;savez&lt;/code&gt;&lt;/a&gt; with *args, the arrays are saved with default names.</source>
          <target state="translated">* argsで&lt;a href=&quot;#numpy.savez&quot;&gt; &lt;code&gt;savez&lt;/code&gt; &lt;/a&gt;を使用すると、配列はデフォルト名で保存されます。</target>
        </trans-unit>
        <trans-unit id="a65056bb65a5824d8a28541dbacefafbcbe064d0" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../reference/generated/numpy.hsplit#numpy.hsplit&quot;&gt;&lt;code&gt;hsplit&lt;/code&gt;&lt;/a&gt;, you can split an array along its horizontal axis, either by specifying the number of equally shaped arrays to return, or by specifying the columns after which the division should occur:</source>
          <target state="translated">&lt;a href=&quot;../reference/generated/numpy.hsplit#numpy.hsplit&quot;&gt; &lt;code&gt;hsplit&lt;/code&gt; &lt;/a&gt;を使用すると、返す同じ形状の配列の数を指定するか、分割が発生する列を指定することにより、水平軸に沿って配列を分割できます。</target>
        </trans-unit>
        <trans-unit id="abcbf246bed1356ef5a4f7a84e0efa6276b04144" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;arr.reshape()&lt;/code&gt; will give a new shape to an array without changing the data. Just remember that when you use the reshape method, the array you want to produce needs to have the same number of elements as the original array. If you start with an array with 12 elements, you&amp;rsquo;ll need to make sure that your new array also has a total of 12 elements.</source>
          <target state="translated">&lt;code&gt;arr.reshape()&lt;/code&gt; を使用すると、データを変更せずに配列に新しい形状が与えられます。reshapeメソッドを使用する場合、生成する配列は元の配列と同じ数の要素を持っている必要があることを覚えておいてください。12個の要素を持つ配列から始める場合は、新しい配列にも合計12個の要素があることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="c05ea485672c370249efc13cf02206fa0079194e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;intent(inout)&lt;/code&gt; is generally not recommended, use &lt;code&gt;intent(in,out)&lt;/code&gt; instead. See also &lt;code&gt;intent(inplace)&lt;/code&gt; attribute.</source>
          <target state="translated">使用 &lt;code&gt;intent(inout)&lt;/code&gt; 一般的に推奨されていない、使用 &lt;code&gt;intent(in,out)&lt;/code&gt; 代わりに。 &lt;code&gt;intent(inplace)&lt;/code&gt; 属性も参照してください。</target>
        </trans-unit>
        <trans-unit id="d44e140015f4a842157d0c38e650d4d90f0d7d32" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;intent(inplace)&lt;/code&gt; is generally not recommended either. For example, when slices have been taken from an &lt;code&gt;intent(inplace)&lt;/code&gt; argument then after in-place changes, slices data pointers may point to unallocated memory area.</source>
          <target state="translated">通常、 &lt;code&gt;intent(inplace)&lt;/code&gt; の使用もお勧めしません。たとえば、スライスが &lt;code&gt;intent(inplace)&lt;/code&gt; 引数から取得され、インプレースが変更された後、スライスデータポインタが未割り当てのメモリ領域を指している場合があります。</target>
        </trans-unit>
        <trans-unit id="9b0a1a12d91b1a55351df033aec60b12c39daa72" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;np.newaxis&lt;/code&gt; will increase the dimensions of your array by one dimension when used once. This means that a &lt;strong&gt;1D&lt;/strong&gt; array will become a &lt;strong&gt;2D&lt;/strong&gt; array, a &lt;strong&gt;2D&lt;/strong&gt; array will become a &lt;strong&gt;3D&lt;/strong&gt; array, and so on.</source>
          <target state="translated">&lt;code&gt;np.newaxis&lt;/code&gt; を使用すると、一度使用すると配列の次元が1次元増加します。ことをこれは、&lt;strong&gt;1次元&lt;/strong&gt;アレイになるであろう&lt;strong&gt;2次元&lt;/strong&gt;アレイ、&lt;strong&gt;二次元&lt;/strong&gt;アレイになるであろう&lt;strong&gt;3次元&lt;/strong&gt;アレイなど。</target>
        </trans-unit>
        <trans-unit id="191982a04357e09366b8b88accf4a58472233372" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;runtests.py&lt;/code&gt; is the recommended approach to running tests. There are also a number of alternatives to it, for example in-place build or installing to a virtualenv. See the FAQ below for details.</source>
          <target state="translated">&lt;code&gt;runtests.py&lt;/code&gt; を使用することは、テストを実行するための推奨されるアプローチです。インプレースビルドやvirtualenvへのインストールなど、それに代わる方法もいくつかあります。詳細については、以下のFAQを参照してください。</target>
        </trans-unit>
        <trans-unit id="f797cc0ae3c70b42806d8484c2173341138aa334" translate="yes" xml:space="preserve">
          <source>Using Eclipse/PyDev with Anaconda/conda Python (or environments)</source>
          <target state="translated">Anaconda/conda Python(または環境)でEclipse/PyDevを使う</target>
        </trans-unit>
        <trans-unit id="0f4523c954e2a9e31bfb34aa3f197069ed09884a" translate="yes" xml:space="preserve">
          <source>Using F2PY</source>
          <target state="translated">F2PYの使用</target>
        </trans-unit>
        <trans-unit id="b5ca717d067542a1c5fc904dd82ea349b1543085" translate="yes" xml:space="preserve">
          <source>Using F2PY bindings in Python</source>
          <target state="translated">PythonでF2PYバインディングを使う</target>
        </trans-unit>
        <trans-unit id="805e17bb02b4c971b82b3da2b45fde14cdb9678e" translate="yes" xml:space="preserve">
          <source>Using NumPy C-API</source>
          <target state="translated">NumPy C-APIの使用</target>
        </trans-unit>
        <trans-unit id="9c7bc452a9834b5876e355900cc35464401d0f74" translate="yes" xml:space="preserve">
          <source>Using PyCharm with Anaconda/conda Python</source>
          <target state="translated">Anaconda/conda PythonでPyCharmを使う</target>
        </trans-unit>
        <trans-unit id="b9863374b5764d5e46c1682602eaea50268a1efa" translate="yes" xml:space="preserve">
          <source>Using Python as glue</source>
          <target state="translated">パイソンを接着剤として使う</target>
        </trans-unit>
        <trans-unit id="6f2e5d63438a571f3123ef33ae03e1d5f2864e48" translate="yes" xml:space="preserve">
          <source>Using Python from &lt;code&gt;conda&lt;/code&gt; (Anaconda)</source>
          <target state="translated">&lt;code&gt;conda&lt;/code&gt; （Anaconda）のPythonを使用する</target>
        </trans-unit>
        <trans-unit id="e43089c0ec4ca3358f03ef23a9043bc3004dbaed" translate="yes" xml:space="preserve">
          <source>Using VSCode with Anaconda/conda Python (or environments)</source>
          <target state="translated">Anaconda/conda Python(または環境)でVSCodeを使う</target>
        </trans-unit>
        <trans-unit id="d4ecb91f09183edc4f23a5cc314556ac8c1af3c8" translate="yes" xml:space="preserve">
          <source>Using a flexible &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">柔軟な &lt;code&gt;dtype&lt;/code&gt; を使用する。</target>
        </trans-unit>
        <trans-unit id="cfac66afdbdc20a411f9f9f200f87cdcbe870cdd" translate="yes" xml:space="preserve">
          <source>Using a view to convert an array to a recarray:</source>
          <target state="translated">ビューを使用して配列を再配列に変換します。</target>
        </trans-unit>
        <trans-unit id="a4fb72e0c5f0602466b0b452237f4e23496663cc" translate="yes" xml:space="preserve">
          <source>Using an External Loop</source>
          <target state="translated">外部ループの使用</target>
        </trans-unit>
        <trans-unit id="f210f428b873c49c7b2b57aa15cfa3164fde53af" translate="yes" xml:space="preserve">
          <source>Using an instance of &lt;a href=&quot;#numpy.errstate&quot;&gt;&lt;code&gt;errstate&lt;/code&gt;&lt;/a&gt; as a context manager allows statements in that context to execute with a known error handling behavior. Upon entering the context the error handling is set with &lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt;&lt;code&gt;seterr&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt;&lt;code&gt;seterrcall&lt;/code&gt;&lt;/a&gt;, and upon exiting it is reset to what it was before.</source>
          <target state="translated">&lt;a href=&quot;#numpy.errstate&quot;&gt; &lt;code&gt;errstate&lt;/code&gt; &lt;/a&gt;のインスタンスをコンテキストマネージャーとして使用すると、そのコンテキスト内のステートメントを既知のエラー処理動作で実行できます。コンテキストに入ると、エラー処理は&lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt; &lt;code&gt;seterr&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt; &lt;code&gt;seterrcall&lt;/code&gt; &lt;/a&gt;で設定され、終了すると、以前の状態にリセットされます。</target>
        </trans-unit>
        <trans-unit id="d1fe8e1d4770589cbebb7564eb13c83317ecba70" translate="yes" xml:space="preserve">
          <source>Using an ndpointer class in the argtypes method can make it significantly safer to call a C function using ctypes and the data- area of an ndarray. You may still want to wrap the function in an additional Python wrapper to make it user-friendly (hiding some obvious arguments and making some arguments output arguments). In this process, the &lt;code&gt;requires&lt;/code&gt; function in NumPy may be useful to return the right kind of array from a given input.</source>
          <target state="translated">argtypesメソッドでndpointerクラスを使用すると、ctypesとndarrayのデータ領域を使用してC関数を呼び出すのが非常に安全になります。関数を追加のPythonラッパーでラップして、ユーザーフレンドリーにすることもできます（いくつかの明白な引数を非表示にし、いくつかの引数を出力引数にします）。このプロセスでは、NumPyの &lt;code&gt;requires&lt;/code&gt; 関数が、特定の入力から適切な種類の配列を返すのに役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="7af0c7a348040b3b4ff1744a0608d17163c9138e" translate="yes" xml:space="preserve">
          <source>Using array-protocol type strings:</source>
          <target state="translated">配列プロトコル型の文字列を使用しています。</target>
        </trans-unit>
        <trans-unit id="fd7054fa064ad2611d4b7d00df8240d7735e3c37" translate="yes" xml:space="preserve">
          <source>Using array-scalar type:</source>
          <target state="translated">配列スカラ型を使用しています。</target>
        </trans-unit>
        <trans-unit id="03a2b430abf28e746816ea1cff1b193db00a94c9" translate="yes" xml:space="preserve">
          <source>Using comma-separated field formats. The shape is (2,3):</source>
          <target state="translated">カンマで区切られたフィールド形式を使用して 形は(2,3)です。</target>
        </trans-unit>
        <trans-unit id="e282c417933d97d3a53a56d481d1f405a74c7c0d" translate="yes" xml:space="preserve">
          <source>Using complex sequences:</source>
          <target state="translated">複雑なシーケンスを使用しています。</target>
        </trans-unit>
        <trans-unit id="eb191c9fcdc8ee9e52364b3acea1bba66afa1818" translate="yes" xml:space="preserve">
          <source>Using ctypes is a powerful way to connect Python with arbitrary C-code. Its advantages for extending Python include</source>
          <target state="translated">ctypesを使用することで、Pythonと任意のCコードを接続するための強力な方法です。Pythonを拡張するための利点は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="26e522c98bd807e94f2ab9fc3a1975ce203f287e" translate="yes" xml:space="preserve">
          <source>Using dictionaries. Two fields named &amp;lsquo;gender&amp;rsquo; and &amp;lsquo;age&amp;rsquo;:</source>
          <target state="translated">辞書を使用する。「gender」と「age」という2つのフィールド：</target>
        </trans-unit>
        <trans-unit id="af330b02f13d207e5fac3c22b8c9bdbaab36afee" translate="yes" xml:space="preserve">
          <source>Using dtype = None</source>
          <target state="translated">dtype=Noneを使用する</target>
        </trans-unit>
        <trans-unit id="00ac7fffb347ca02e4efcd6c4f0a66db988cde12" translate="yes" xml:space="preserve">
          <source>Using missing and filling values</source>
          <target state="translated">欠損値と充填値の使用</target>
        </trans-unit>
        <trans-unit id="8d2131672fafcfdf449f29b29350743e40c17d69" translate="yes" xml:space="preserve">
          <source>Using months for the unit:</source>
          <target state="translated">単位に月を使う</target>
        </trans-unit>
        <trans-unit id="68007c19f643deebacff69bbb71fb357fa3f341a" translate="yes" xml:space="preserve">
          <source>Using non-symbol-suffixed 64-bit BLAS/LAPACK in a program that also uses 32-bit BLAS/LAPACK can cause crashes under certain conditions (e.g. with embedded Python interpreters on Linux).</source>
          <target state="translated">32 ビット BLAS/LAPACK も使用しているプログラムで、符号付きではない 64 ビット BLAS/LAPACK を使用すると、特定の条件下でクラッシュが発生することがあります (Linux 上の組み込み Python インタプリタなど)。</target>
        </trans-unit>
        <trans-unit id="2f696379652fe6905a66fc5fd2b9273fa2471296" translate="yes" xml:space="preserve">
          <source>Using numpy.i</source>
          <target state="translated">numpy.iを使う</target>
        </trans-unit>
        <trans-unit id="e8111da9fdc8286f7fa1decedd3c62fdfaa40d28" translate="yes" xml:space="preserve">
          <source>Using numpy.ma</source>
          <target state="translated">numpy.maを使う</target>
        </trans-unit>
        <trans-unit id="fca1ba2673c50c8d4a43a28f5b4401d362ff3c79" translate="yes" xml:space="preserve">
          <source>Using numpy.random.binomial may change the RNG state vs. numpy &amp;lt; 1.9</source>
          <target state="translated">numpy.random.binomialを使用すると、RNG状態が変化する可能性があります。numpy&amp;lt;1.9</target>
        </trans-unit>
        <trans-unit id="03252764a2ca129ee8f53a1ebcd3c94ffd3382b7" translate="yes" xml:space="preserve">
          <source>Using poly1d objects:</source>
          <target state="translated">poly1dオブジェクトを使用しています。</target>
        </trans-unit>
        <trans-unit id="79eb3bbcb08c7d6704be86d77b0727b917270b3d" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;axis&lt;/code&gt; argument to compute matrix norms:</source>
          <target state="translated">使用する &lt;code&gt;axis&lt;/code&gt; 計算行列ノルムに引数を：</target>
        </trans-unit>
        <trans-unit id="9e684f49459c0d5aba4c5f2579aeb17add74610d" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;axis&lt;/code&gt; argument to compute vector norms:</source>
          <target state="translated">使用する &lt;code&gt;axis&lt;/code&gt; 計算ベクトルの規範に引数を：</target>
        </trans-unit>
        <trans-unit id="0049dd8bb80b8109d30cf294edeebc9226866484" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;copy&lt;/code&gt; method will make a complete copy of the array and its data (a &lt;em&gt;deep copy&lt;/em&gt;). To use this on your array, you could run:</source>
          <target state="translated">&lt;code&gt;copy&lt;/code&gt; メソッドを使用すると、配列とそのデータの完全なコピーが作成されます（&lt;em&gt;ディープコピー&lt;/em&gt;）。アレイでこれを使用するには、次のコマンドを実行できます。</target>
        </trans-unit>
        <trans-unit id="b9ba36c2f053a06ac3abc3a930f4a1d05aada052" translate="yes" xml:space="preserve">
          <source>Using the Convenience Classes</source>
          <target state="translated">便利教室の使い方</target>
        </trans-unit>
        <trans-unit id="1bd2966f639ab87086919a9a710a3ff850eadf79" translate="yes" xml:space="preserve">
          <source>Using the Einstein summation convention, many common multi-dimensional, linear algebraic array operations can be represented in a simple fashion. In &lt;em&gt;implicit&lt;/em&gt; mode &lt;a href=&quot;#numpy.einsum&quot;&gt;&lt;code&gt;einsum&lt;/code&gt;&lt;/a&gt; computes these values.</source>
          <target state="translated">Einstein総和規約を使用すると、多くの一般的な多次元線形代数配列演算を簡単な方法で表すことができます。では&lt;em&gt;、暗黙の&lt;/em&gt;モード&lt;a href=&quot;#numpy.einsum&quot;&gt; &lt;code&gt;einsum&lt;/code&gt; は&lt;/a&gt;、これらの値を計算します。</target>
        </trans-unit>
        <trans-unit id="75da2a462c666654f41a122b8cf7201ccca6f453" translate="yes" xml:space="preserve">
          <source>Using the casting rules</source>
          <target state="translated">キャスティングルールを使って</target>
        </trans-unit>
        <trans-unit id="a7a6cb5aa0103dc18935f9ad693972e0008b2a2f" translate="yes" xml:space="preserve">
          <source>Using the object looks like this:</source>
          <target state="translated">オブジェクトを使うとこんな感じになります。</target>
        </trans-unit>
        <trans-unit id="0e2a18ad6df592872579dd4bbee44818b7034db3" translate="yes" xml:space="preserve">
          <source>Using these #defines you can use the C-API in multiple files for a single extension module. In each file you must define &lt;a href=&quot;#c.PY_ARRAY_UNIQUE_SYMBOL&quot;&gt;&lt;code&gt;PY_ARRAY_UNIQUE_SYMBOL&lt;/code&gt;&lt;/a&gt; to some name that will hold the C-API (&lt;em&gt;e.g.&lt;/em&gt; myextension_ARRAY_API). This must be done &lt;strong&gt;before&lt;/strong&gt; including the numpy/arrayobject.h file. In the module initialization routine you call &lt;a href=&quot;#c.import_array&quot;&gt;&lt;code&gt;import_array&lt;/code&gt;&lt;/a&gt;. In addition, in the files that do not have the module initialization sub_routine define &lt;a href=&quot;#c.NO_IMPORT_ARRAY&quot;&gt;&lt;code&gt;NO_IMPORT_ARRAY&lt;/code&gt;&lt;/a&gt; prior to including numpy/arrayobject.h.</source>
          <target state="translated">これらの#definesを使用すると、単一の拡張モジュールの複数のファイルでC-APIを使用できます。各ファイルでは定義する必要があり&lt;a href=&quot;#c.PY_ARRAY_UNIQUE_SYMBOL&quot;&gt; &lt;code&gt;PY_ARRAY_UNIQUE_SYMBOL&lt;/code&gt; を&lt;/a&gt; C-APIを保持するいくつかの名前（に&lt;em&gt;例えば&lt;/em&gt; myextension_ARRAY_API）。これは、numpy / arrayobject.hファイルをインクルードする&lt;strong&gt;前&lt;/strong&gt;に行う必要があります。モジュール初期化ルーチンでは、&lt;a href=&quot;#c.import_array&quot;&gt; &lt;code&gt;import_array&lt;/code&gt; &lt;/a&gt;を呼び出します。また、モジュールの初期化sub_routineを持っていないファイルで定義&lt;a href=&quot;#c.NO_IMPORT_ARRAY&quot;&gt; &lt;code&gt;NO_IMPORT_ARRAY&lt;/code&gt; &lt;/a&gt; numpyの/ arrayobject.h含めて前に。</target>
        </trans-unit>
        <trans-unit id="315900bdae1d95768693f5caf49a459c0e9247e8" translate="yes" xml:space="preserve">
          <source>Using this result to index &lt;code&gt;a&lt;/code&gt; is equivalent to using the mask directly:</source>
          <target state="translated">この結果を使用して &lt;code&gt;a&lt;/code&gt; にインデックスを付けることは、マスクを直接使用することと同じです。</target>
        </trans-unit>
        <trans-unit id="2b3c55a8f302db1fd2b8e30d4741e13199d60cd0" translate="yes" xml:space="preserve">
          <source>Using this scheme, an upper bound on the probability of a collision can be estimated if one knows the number of streams that you derive. &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; hashes its inputs, both the seed and the spawn-tree-path, down to a 128-bit pool by default. The probability that there is a collision in that pool, pessimistically-estimated (&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;), will be about</source>
          <target state="translated">このスキームを使用すると、導出するストリームの数がわかっている場合、衝突の確率の上限を見積もることができます。&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;は、シードとspawn-tree-pathの両方の入力を、デフォルトで128ビットプールにハッシュします。そのプールで衝突が発生する確率は、悲観的に推定され（&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;）、約</target>
        </trans-unit>
        <trans-unit id="f1e207983fdf75c13618b12af3dac2cc9b09a86a" translate="yes" xml:space="preserve">
          <source>Using this scheme, an upper bound on the probability of a collision can be estimated if one knows the number of streams that you derive. &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; hashes its inputs, both the seed and the spawn-tree-path, down to a 128-bit pool by default. The probability that there is a collision in that pool, pessimistically-estimated (&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;), will be about</source>
          <target state="translated">このスキームを使用すると、導出するストリームの数がわかっている場合、衝突の確率の上限を推定できます。&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;は、シードとspawn-tree-pathの両方の入力を、デフォルトで128ビットプールにハッシュします。そのプールに衝突がある確率は、悲観的に見積もられ（&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;）、およそ</target>
        </trans-unit>
        <trans-unit id="81f2b8dfbfc71c96c12b186f5770d7cbd6cb20f2" translate="yes" xml:space="preserve">
          <source>Using tuples. &lt;code&gt;int&lt;/code&gt; is a fixed type, 3 the field&amp;rsquo;s shape. &lt;code&gt;void&lt;/code&gt; is a flexible type, here of size 10:</source>
          <target state="translated">タプルの使用。 &lt;code&gt;int&lt;/code&gt; は固定型で、フィールドの形状です。 &lt;code&gt;void&lt;/code&gt; は、ここではサイズ10の柔軟な型です。</target>
        </trans-unit>
        <trans-unit id="824f10f86cbfa339b11bf5f57f7a0ce042086b4a" translate="yes" xml:space="preserve">
          <source>Using via &lt;code&gt;numpy.distutils&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.distutils&lt;/code&gt; 経由で使用</target>
        </trans-unit>
        <trans-unit id="6043061ff0da53be43d1b2e098be1b0520525dba" translate="yes" xml:space="preserve">
          <source>Using via numpy.distutils</source>
          <target state="translated">via numpy.distutils の使用</target>
        </trans-unit>
        <trans-unit id="73888fb9a3aa49066395d1b7748b2f3a75b9907a" translate="yes" xml:space="preserve">
          <source>Using virtualenvs</source>
          <target state="translated">virtualenvs.</target>
        </trans-unit>
        <trans-unit id="ef8b4345a7cc12338d15d1fb67d9e4a4feb23426" translate="yes" xml:space="preserve">
          <source>Usually denoted</source>
          <target state="translated">通常は</target>
        </trans-unit>
        <trans-unit id="9efea8253bd046afd804470a677e434b3a6392ca" translate="yes" xml:space="preserve">
          <source>Usually there is no need to worry about how the arrays are stored in memory and whether the wrapped functions, being either Fortran or C functions, assume one or another storage order. F2PY automatically ensures that wrapped functions get arguments with proper storage order; the corresponding algorithm is designed to make copies of arrays only when absolutely necessary. However, when dealing with very large multidimensional input arrays with sizes close to the size of the physical memory in your computer, then a care must be taken to use always proper-contiguous and proper type arguments.</source>
          <target state="translated">通常、配列がどのようにメモリに格納されているか、またラップされた関数がFortranまたはC関数であるかどうかについて心配する必要はありません。F2PY は、ラップされた関数が適切なストレージ順序で引数を取得することを自動的に保証します;対応するアルゴリズムは、絶対に必要な場合にのみ配列のコピーを作成するように設計されています。しかし、コンピュータの物理メモリのサイズに近いサイズの非常に大きな多次元入力配列を扱う場合、常に適切な連続した適切な型の引数を使うように注意しなければなりません。</target>
        </trans-unit>
        <trans-unit id="04880c31a806536e09375a28b6393c4ae89b3000" translate="yes" xml:space="preserve">
          <source>Usually, defining a dtype is sufficient to define how the sequence of strings must be converted. However, some additional control may sometimes be required. For example, we may want to make sure that a date in a format &lt;code&gt;YYYY/MM/DD&lt;/code&gt; is converted to a &lt;code&gt;datetime&lt;/code&gt; object, or that a string like &lt;code&gt;xx%&lt;/code&gt; is properly converted to a float between 0 and 1. In such cases, we should define conversion functions with the &lt;code&gt;converters&lt;/code&gt; arguments.</source>
          <target state="translated">通常、文字列のシーケンスを変換する方法を定義するには、dtypeを定義するだけで十分です。ただし、追加の制御が必要になる場合があります。たとえば、 &lt;code&gt;YYYY/MM/DD&lt;/code&gt; 形式の日付が &lt;code&gt;datetime&lt;/code&gt; オブジェクトに変換されていること、または &lt;code&gt;xx%&lt;/code&gt; のような文字列が0から1の間のfloatに適切に変換されていることを確認したい場合があります。 &lt;code&gt;converters&lt;/code&gt; 引数を使用して変換関数を定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="a5abc30aa6f2b926c1472fe22071db5adb16a0bc" translate="yes" xml:space="preserve">
          <source>Usually, however, adding the &lt;code&gt;tests/&lt;/code&gt; directory to the python path isn&amp;rsquo;t desirable. Instead it would better to invoke the test straight from the module &lt;code&gt;xxx&lt;/code&gt;. To this end, simply place the following lines at the end of your package&amp;rsquo;s &lt;code&gt;__init__.py&lt;/code&gt; file:</source>
          <target state="translated">ただし、通常、 &lt;code&gt;tests/&lt;/code&gt; ディレクトリをpythonパスに追加することは望ましくありません。代わりに、モジュール &lt;code&gt;xxx&lt;/code&gt; から直接テストを呼び出すほうがよいでしょう。そのためには、パッケージの &lt;code&gt;__init__.py&lt;/code&gt; ファイルの最後に次の行を配置するだけです。</target>
        </trans-unit>
        <trans-unit id="89189507b2a074e98b2e877227343a6e1f27b3ab" translate="yes" xml:space="preserve">
          <source>Utility</source>
          <target state="translated">Utility</target>
        </trans-unit>
        <trans-unit id="6be23322b56766a1db9b8621387497e594f16d2d" translate="yes" xml:space="preserve">
          <source>Utility classes and functions for the polynomial modules.</source>
          <target state="translated">多項式モジュールのためのユーティリティクラスと関数</target>
        </trans-unit>
        <trans-unit id="c9ee5681d3c59f7541c27a38b67edf46259e187b" translate="yes" xml:space="preserve">
          <source>V</source>
          <target state="translated">V</target>
        </trans-unit>
        <trans-unit id="d00ce61cfc8e3df435adebc36c2fa866be4f94a4" translate="yes" xml:space="preserve">
          <source>Valid dtype for all arrays</source>
          <target state="translated">すべての配列に対して有効なdtype</target>
        </trans-unit>
        <trans-unit id="7c5b11cbfd943ab04293f9f062d297257b4ba0e8" translate="yes" xml:space="preserve">
          <source>Validating names</source>
          <target state="translated">名前の検証</target>
        </trans-unit>
        <trans-unit id="3522db33c6e586ed6f52f3af3bea08c2509cdaed" translate="yes" xml:space="preserve">
          <source>Value indicating that a masked array has no invalid entry. &lt;a href=&quot;#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; is used internally to speed up computations when the mask is not needed.</source>
          <target state="translated">マスクされた配列に無効なエントリがないことを示す値。&lt;a href=&quot;#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;は、マスクが不要な場合に計算を高速化するために内部的に使用されます。</target>
        </trans-unit>
        <trans-unit id="a1c7830f6acd0062d2809fbc11f2bfb2e8aedd16" translate="yes" xml:space="preserve">
          <source>Value indicating that a masked array has no invalid entry. &lt;a href=&quot;#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; is used internally to speed up computations when the mask is not needed. It is represented internally as &lt;code&gt;np.False_&lt;/code&gt;.</source>
          <target state="translated">マスクされた配列に無効なエントリがないことを示す値。&lt;a href=&quot;#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;は、マスクが不要な場合に計算を高速化するために内部的に使用されます。内部的には &lt;code&gt;np.False_&lt;/code&gt; として表されます。</target>
        </trans-unit>
        <trans-unit id="0b9ec234c1eee91fedfeaba35509216217fe21cd" translate="yes" xml:space="preserve">
          <source>Value of &lt;code&gt;operands&lt;/code&gt; at current iteration. Normally, this is a tuple of array scalars, but if the flag &lt;code&gt;external_loop&lt;/code&gt; is used, it is a tuple of one dimensional arrays.</source>
          <target state="translated">現在の反復での &lt;code&gt;operands&lt;/code&gt; 値。通常、これは配列スカラーのタプルですが、 &lt;code&gt;external_loop&lt;/code&gt; フラグが使用されている場合は、1次元配列のタプルです。</target>
        </trans-unit>
        <trans-unit id="d866e0938fcfdf12b88042317593d4295facb33c" translate="yes" xml:space="preserve">
          <source>Value to be placed in field.</source>
          <target state="translated">フィールドに配置する値。</target>
        </trans-unit>
        <trans-unit id="4ba37300f6a7d1d653bfd085d1c3e62828c53205" translate="yes" xml:space="preserve">
          <source>Value to be used to fill NaN values. If no value is passed then NaN values will be replaced with 0.0.</source>
          <target state="translated">NaN値を埋めるために使用する値。値が渡されなかった場合、NaNの値は0.0に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="73822c64a61d90da64aca29978cabf65524aa150" translate="yes" xml:space="preserve">
          <source>Value to be used to fill negative infinity values. If no value is passed then negative infinity values will be replaced with a very small (or negative) number.</source>
          <target state="translated">負の無限大値を埋めるために使用される値。値を渡さなかった場合、負の無限大値は非常に小さな(または負の)数値に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="f4796b06e4cb3d07bcdfe89591ec37b878b0609f" translate="yes" xml:space="preserve">
          <source>Value to be used to fill positive infinity values. If no value is passed then positive infinity values will be replaced with a very large number.</source>
          <target state="translated">正の無限大値を埋めるために使用される値。値を渡さなかった場合、正の無限大の値は非常に大きな数に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="f7cccdf775f458dbd65351fa14dd9eb110134681" translate="yes" xml:space="preserve">
          <source>Value to be written on the diagonal, its type must be compatible with that of the array a.</source>
          <target state="translated">対角線上に書き込まれる値は,その型が配列aの型と互換性がなければなりません.</target>
        </trans-unit>
        <trans-unit id="715dcdd8f6ff522d4658e491027e9aae31a8b5e6" translate="yes" xml:space="preserve">
          <source>Value to format.</source>
          <target state="translated">フォーマットへの値。</target>
        </trans-unit>
        <trans-unit id="3d3e32ccc4b0ab4e1f0dc806d286fb59b6c443d6" translate="yes" xml:space="preserve">
          <source>Value to return for &lt;code&gt;x &amp;gt; xp[-1]&lt;/code&gt;, default is &lt;code&gt;fp[-1]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x &amp;gt; xp[-1]&lt;/code&gt; に対して返す値。デフォルトは &lt;code&gt;fp[-1]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="26d4865cbe90216e1386cb06fe27a2a8a2fdea6f" translate="yes" xml:space="preserve">
          <source>Value to return for &lt;code&gt;x &amp;lt; xp[0]&lt;/code&gt;, default is &lt;code&gt;fp[0]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x &amp;lt; xp[0]&lt;/code&gt; に対して返す値。デフォルトは &lt;code&gt;fp[0]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d7a5e0e3824dade99c632ba9171e408c2ecc5e00" translate="yes" xml:space="preserve">
          <source>Value used for fixing invalid data. Default is None, in which case the &lt;code&gt;a.fill_value&lt;/code&gt; is used.</source>
          <target state="translated">無効なデータを修正するために使用される値。デフォルトはNone です。この場合、 &lt;code&gt;a.fill_value&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="69ddc9b73f581b3343b0affbf7e4377d672439b1" translate="yes" xml:space="preserve">
          <source>Value used internally for the masked values. If &lt;code&gt;fill_value&lt;/code&gt; is not None, it supersedes &lt;code&gt;endwith&lt;/code&gt;.</source>
          <target state="translated">マスクされた値に内部的に使用される値。 &lt;code&gt;fill_value&lt;/code&gt; がNoneでない場合、それは &lt;code&gt;endwith&lt;/code&gt; に取って代わります。</target>
        </trans-unit>
        <trans-unit id="328663db0b3aba67f0d82903937cd9193c3e207c" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values when necessary. If None, a default based on the data-type is used.</source>
          <target state="translated">必要に応じてマスクされた値を埋めるために使用される値。Noneの場合、データタイプに基づくデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="ac07a9705ce80720af8585478b1d81e8b7b8b456" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values.</source>
          <target state="translated">マスクされた値を埋めるために使用される値。</target>
        </trans-unit>
        <trans-unit id="86e71cf73f1d7bc170999262699205370f1f93e4" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values. Default is None, in which case &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt;&lt;code&gt;MaskedArray.fill_value&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">マスクされた値を埋めるために使用される値。デフォルトはNone です。この場合、&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt; &lt;code&gt;MaskedArray.fill_value&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="19866b65a013a0eb3c733fc479da8433fc02a5f3" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values. If None, the output of maximum_fill_value(self._data) is used instead.</source>
          <target state="translated">マスクされた値を塗りつぶすのに使われる値。Noneの場合は、maximum_fill_value(self._data)の出力が代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="5c0a58c6eeb18776376a78bc0a9866ce44b1ad27" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values. If None, the output of minimum_fill_value(self._data) is used instead.</source>
          <target state="translated">マスクされた値を塗りつぶすのに使われる値。Noneの場合は、代わりにminimum_fill_value(self._data)の出力が使用されます。</target>
        </trans-unit>
        <trans-unit id="752e711d9ae184609f9efa220ffeb98e2623ff23" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values. If None, use the output of &lt;code&gt;minimum_fill_value&lt;/code&gt;.</source>
          <target state="translated">マスクされた値を埋めるために使用される値。Noneの場合、 &lt;code&gt;minimum_fill_value&lt;/code&gt; の出力を使用します。</target>
        </trans-unit>
        <trans-unit id="94b3fde97e6b1196d461cd6d1087f12e6dea54b2" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values. If None, use the output of maximum_fill_value().</source>
          <target state="translated">マスクされた値を塗りつぶすのに使われる値。None の場合は、maximum_fill_value()の出力を使用します。</target>
        </trans-unit>
        <trans-unit id="eddd55b4550fcb347a1d6bf73a696e1497719104" translate="yes" xml:space="preserve">
          <source>Values are appended to a copy of this array.</source>
          <target state="translated">値はこの配列のコピーに追加されます。</target>
        </trans-unit>
        <trans-unit id="24421420351a973d79bcca3d2ef0e453017e616f" translate="yes" xml:space="preserve">
          <source>Values are generated within the half-open interval &lt;code&gt;[start, stop)&lt;/code&gt; (in other words, the interval including &lt;code&gt;start&lt;/code&gt; but excluding &lt;code&gt;stop&lt;/code&gt;). For integer arguments the function is equivalent to the Python built-in &lt;code&gt;range&lt;/code&gt; function, but returns an ndarray rather than a list.</source>
          <target state="translated">値は、ハーフオープンインターバル &lt;code&gt;[start, stop)&lt;/code&gt; （つまり、 &lt;code&gt;start&lt;/code&gt; を含み、 &lt;code&gt;stop&lt;/code&gt; を除外したインターバル）内で生成されます。整数引数の場合、この関数はPythonの組み込み &lt;code&gt;range&lt;/code&gt; 関数と同等ですが、リストではなくndarrayを返します。</target>
        </trans-unit>
        <trans-unit id="38b38aff8e14ce007107a5b62d7837a43399e916" translate="yes" xml:space="preserve">
          <source>Values at which the weight function will be computed.</source>
          <target state="translated">重み関数が計算される値。</target>
        </trans-unit>
        <trans-unit id="8afc1edfb8d26a9a4bac7610a9a2ed43bc17c240" translate="yes" xml:space="preserve">
          <source>Values from which to choose. &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;condition&lt;/code&gt; need to be broadcastable to some shape.</source>
          <target state="translated">選択する値。 &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; 、および &lt;code&gt;condition&lt;/code&gt; は、何らかの形でブロードキャストできる必要があります。</target>
        </trans-unit>
        <trans-unit id="55fd9fa348e62e91b8d05086f74314a1ab640581" translate="yes" xml:space="preserve">
          <source>Values in &lt;code&gt;i&lt;/code&gt; of less than 0 are treated as 0 (which yields an empty string).</source>
          <target state="translated">0未満の &lt;code&gt;i&lt;/code&gt; の値は0として扱われます（空の文字列が生成されます）。</target>
        </trans-unit>
        <trans-unit id="c01309d65a99b72623b37f6cd9a8f8ab7021db81" translate="yes" xml:space="preserve">
          <source>Values of the dictionary are strings or sequence of strings. The corresponding keys can be column indices (integers) or column names (strings). In addition, the special key &lt;code&gt;None&lt;/code&gt; can be used to define a default applicable to all columns.</source>
          <target state="translated">ディクショナリの値は、文字列または文字列のシーケンスです。対応するキーは、列インデックス（整数）または列名（文字列）にすることができます。さらに、特別なキー &lt;code&gt;None&lt;/code&gt; を使用して、すべての列に適用可能なデフォルトを定義できます。</target>
        </trans-unit>
        <trans-unit id="c0da0f066601a2a9367e697b89519e6b0c50e33e" translate="yes" xml:space="preserve">
          <source>Values to change the sign of.</source>
          <target state="translated">符号を変更する値。</target>
        </trans-unit>
        <trans-unit id="4158750ed1844d81234e02100fb4f6a0ce246137" translate="yes" xml:space="preserve">
          <source>Values to find the next representable value of.</source>
          <target state="translated">次の表現可能な値を見つけるための値。</target>
        </trans-unit>
        <trans-unit id="beb9a9be5bcba10dec2aa7359c7898f16a9d7ca8" translate="yes" xml:space="preserve">
          <source>Values to find the spacing of.</source>
          <target state="translated">の間隔を見つけるための値。</target>
        </trans-unit>
        <trans-unit id="3b61fff151ba4cdc5d10abd1dbdd04d94f432686" translate="yes" xml:space="preserve">
          <source>Values to insert into &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">値がに挿入します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19b54e21994fdcbd2ab01d7104b74c970245cfe1" translate="yes" xml:space="preserve">
          <source>Values to insert into &lt;code&gt;arr&lt;/code&gt;. If the type of &lt;code&gt;values&lt;/code&gt; is different from that of &lt;code&gt;arr&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt; is converted to the type of &lt;code&gt;arr&lt;/code&gt;. &lt;code&gt;values&lt;/code&gt; should be shaped so that &lt;code&gt;arr[...,obj,...] = values&lt;/code&gt; is legal.</source>
          <target state="translated">&lt;code&gt;arr&lt;/code&gt; に挿入する値。タイプ場合 &lt;code&gt;values&lt;/code&gt; と異なる &lt;code&gt;arr&lt;/code&gt; 、 &lt;code&gt;values&lt;/code&gt; の型に変換され &lt;code&gt;arr&lt;/code&gt; 。 &lt;code&gt;values&lt;/code&gt; は、 &lt;code&gt;arr[...,obj,...] = values&lt;/code&gt; が正当であるように整形する必要があります。</target>
        </trans-unit>
        <trans-unit id="817bf23706b268004f4bf56ee98317c1ad7d150d" translate="yes" xml:space="preserve">
          <source>Values to place in &lt;code&gt;a&lt;/code&gt; at target indices. If &lt;code&gt;v&lt;/code&gt; is shorter than &lt;code&gt;ind&lt;/code&gt; it will be repeated as necessary.</source>
          <target state="translated">値がに配置し、目標指標で。 &lt;code&gt;v&lt;/code&gt; が &lt;code&gt;ind&lt;/code&gt; より短い場合、必要に応じて繰り返されます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9be9f0fa346eb48800661efe4c9cdccf0a4d68a" translate="yes" xml:space="preserve">
          <source>Values to place in self._data copy at target indices.</source>
          <target state="translated">self._dataのコピーにターゲットのインデックスに配置する値。</target>
        </trans-unit>
        <trans-unit id="81f73f98efd45554f2765f8a372cd020b7023051" translate="yes" xml:space="preserve">
          <source>Values to prepend or append to &amp;ldquo;a&amp;rdquo; along axis prior to performing the difference. Scalar values are expanded to arrays with length 1 in the direction of axis and the shape of the input array in along all other axes. Otherwise the dimension and shape must match &amp;ldquo;a&amp;rdquo; except along axis.</source>
          <target state="translated">差分を実行する前に、軸に沿って「a」に追加または付加する値。スカラー値は、軸方向の長さが1で、他のすべての軸に沿った入力配列の形状を持つ配列に拡張されます。それ以外の場合は、軸に沿った場合を除いて、寸法と形状が「a」と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="3e169e71a4b3659a2db1d8c19b6c033e97b1e36f" translate="yes" xml:space="preserve">
          <source>Values to prepend or append to &lt;code&gt;a&lt;/code&gt; along axis prior to performing the difference. Scalar values are expanded to arrays with length 1 in the direction of axis and the shape of the input array in along all other axes. Otherwise the dimension and shape must match &lt;code&gt;a&lt;/code&gt; except along axis.</source>
          <target state="translated">先頭に追加または付加する値の差を実行する前に軸に沿っ。スカラー値は、軸の方向に長さが1で、他のすべての軸に沿って入力配列の形状を持つ配列に展開されます。それ以外の場合、寸法と形状は軸に沿っ &lt;code&gt;a&lt;/code&gt; を除いて一致する必要があります。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="462c5daaa1bebf27712ab1f9e6dff7991b7d4f2b" translate="yes" xml:space="preserve">
          <source>Values to put into &lt;code&gt;a&lt;/code&gt; where &lt;code&gt;mask&lt;/code&gt; is True. If &lt;code&gt;values&lt;/code&gt; is smaller than &lt;code&gt;a&lt;/code&gt; it will be repeated.</source>
          <target state="translated">入れるべき値 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;mask&lt;/code&gt; 真です。 &lt;code&gt;values&lt;/code&gt; が &lt;code&gt;a&lt;/code&gt; より小さい場合は繰り返されます。</target>
        </trans-unit>
        <trans-unit id="25e7a819f368d39546137552cf420f108ade4ace" translate="yes" xml:space="preserve">
          <source>Values to put into &lt;code&gt;a&lt;/code&gt;. Only the first N elements are used, where N is the number of True values in &lt;code&gt;mask&lt;/code&gt;. If &lt;code&gt;vals&lt;/code&gt; is smaller than N, it will be repeated, and if elements of &lt;code&gt;a&lt;/code&gt; are to be masked, this sequence must be non-empty.</source>
          <target state="translated">入れて値 &lt;code&gt;a&lt;/code&gt; 。最初のN個の要素のみが使用されます。Nは &lt;code&gt;mask&lt;/code&gt; のTrue値の数です。場合 &lt;code&gt;vals&lt;/code&gt; Nよりも小さい場合、それが繰り返されることになる、との構成要素場合はマスクするかを、この配列は、非空である必要があります。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60bd6b681e5d46e176fd602e7f740408a4b90a97" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix for powers.</source>
          <target state="translated">力のためのヴァンデルモンデ行列。</target>
        </trans-unit>
        <trans-unit id="6401e380553d40526975bfbedfb18608ca5c00ad" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix of Chebyshev series.</source>
          <target state="translated">チェビシェフ級数のヴァンダーモンド行列。</target>
        </trans-unit>
        <trans-unit id="ae6e82d94a52ea695163be06dc24993156d990a5" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix of Hermite series.</source>
          <target state="translated">Hermiteシリーズのヴァンダーモンド行列。</target>
        </trans-unit>
        <trans-unit id="a2d6130252c264087c83a0456898053f5cce8c9b" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix of Legendre series.</source>
          <target state="translated">ヴァンダーモンデの行列やレジェンドールシリーズ。</target>
        </trans-unit>
        <trans-unit id="5d2bf93649140d94c435a78c84579d541c1303f5" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix of given degree.</source>
          <target state="translated">与えられた次数のヴァンダーモンデ行列。</target>
        </trans-unit>
        <trans-unit id="315c420145ba2a2de3ef508e657b666b667d7db9" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix. If &lt;code&gt;increasing&lt;/code&gt; is False, the first column is &lt;code&gt;x^(N-1)&lt;/code&gt;, the second &lt;code&gt;x^(N-2)&lt;/code&gt; and so forth. If &lt;code&gt;increasing&lt;/code&gt; is True, the columns are &lt;code&gt;x^0, x^1, ..., x^(N-1)&lt;/code&gt;.</source>
          <target state="translated">ヴァンダーモンド行列。場合 &lt;code&gt;increasing&lt;/code&gt; Falseで、最初の列は、 &lt;code&gt;x^(N-1)&lt;/code&gt; 、第 &lt;code&gt;x^(N-2)&lt;/code&gt; 等が挙げられます。場合は &lt;code&gt;increasing&lt;/code&gt; Trueで、カラムがある &lt;code&gt;x^0, x^1, ..., x^(N-1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fb0e847303b2656c561914c6c1fadfb2178ba16" translate="yes" xml:space="preserve">
          <source>Variable names are displayed in typewriter font, obtained by using &lt;code&gt;\mathtt{var}&lt;/code&gt;:</source>
          <target state="translated">変数名は、 &lt;code&gt;\mathtt{var}&lt;/code&gt; を使用して取得したタイプライターフォントで表示されます。</target>
        </trans-unit>
        <trans-unit id="ef7476851367ab64af3bc4c81c52e5e1e6857c25" translate="yes" xml:space="preserve">
          <source>Variables in Numpy which control and describe alignment</source>
          <target state="translated">アラインメントを制御・記述するNumpyの変数</target>
        </trans-unit>
        <trans-unit id="2a1f6fba473be39ef3c80a51eed0db143c77f764" translate="yes" xml:space="preserve">
          <source>Variance while not ignoring NaNs</source>
          <target state="translated">NaNを無視した場合の分散</target>
        </trans-unit>
        <trans-unit id="8676fa65ac8cfd04cdda1d2741f1f3486c926b70" translate="yes" xml:space="preserve">
          <source>Various continuous integration (CI) services are triggered after each PR update to build the code, run unit tests, measure code coverage and check coding style of your branch. The CI tests must pass before your PR can be merged. If CI fails, you can find out why by clicking on the &amp;ldquo;failed&amp;rdquo; icon (red cross) and inspecting the build and test log. To avoid overuse and waste of this resource, &lt;a href=&quot;development_environment#recommended-development-setup&quot;&gt;test your work&lt;/a&gt; locally before committing.</source>
          <target state="translated">各PR更新後に、さまざまな継続的インテグレーション（CI）サービスがトリガーされ、コードの構築、単体テストの実行、コードカバレッジの測定、およびブランチのコーディングスタイルの確認が行われます。PRをマージする前に、CIテストに合格する必要があります。CIが失敗した場合は、「失敗」アイコン（赤い十字）をクリックし、ビルドとテストのログを調べることで理由を確認できます。このリソースの使いすぎや浪費を避けるために、コミットする前にローカルで&lt;a href=&quot;development_environment#recommended-development-setup&quot;&gt;作業をテストしてください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47604fcededf37e9515dbd4dd1f0e8ae5e2d23c4" translate="yes" xml:space="preserve">
          <source>Various fields have standard formats for array data. The following lists the ones with known python libraries to read them and return numpy arrays (there may be others for which it is possible to read and convert to numpy arrays so check the last section as well)</source>
          <target state="translated">様々なフィールドは配列データの標準フォーマットを持っています。以下は、それらを読み込んでnumpy配列を返すための既知のPythonライブラリを持つもののリストです(他にもnumpy配列を読み込んで変換できるものがあるかもしれませんので、最後のセクションもチェックしてください)</target>
        </trans-unit>
        <trans-unit id="407b9055a29b3862ad6596884f933fb2e3b90801" translate="yes" xml:space="preserve">
          <source>Various windows</source>
          <target state="translated">様々な窓</target>
        </trans-unit>
        <trans-unit id="a77d3d622bb695acc100256fe700b0a21c995057" translate="yes" xml:space="preserve">
          <source>Vector Quantization J. Makhoul, S. Roucos, and H. Gish, &amp;ldquo;Vector Quantization in Speech Coding,&amp;rdquo; Proc. IEEE, vol. 73, pp. 1551-1587, Nov. 1985.</source>
          <target state="translated">ベクトル量子化J.Makhoul、S。Roucos、およびH. Gish、「音声コーディングにおけるベクトル量子化」、Proc。IEEE、vol。73、pp.1551-1587、1985年11月。</target>
        </trans-unit>
        <trans-unit id="f5d5df32cb3f2a3be9fd3df5321700c5dfe41670" translate="yes" xml:space="preserve">
          <source>Vector Stacking</source>
          <target state="translated">ベクトルスタッキング</target>
        </trans-unit>
        <trans-unit id="690a0d6330a132cb4527e3e44d7a2347c9a06b3a" translate="yes" xml:space="preserve">
          <source>Vector cross product(s).</source>
          <target state="translated">ベクトルクロス積(複数可)。</target>
        </trans-unit>
        <trans-unit id="28cb052426ac62f08e613cbe9ac7789542c3593f" translate="yes" xml:space="preserve">
          <source>Vector cross-product.</source>
          <target state="translated">ベクトル交差生成物。</target>
        </trans-unit>
        <trans-unit id="0fe94b620577959abe98d342c3396c44b95bc9ac" translate="yes" xml:space="preserve">
          <source>Vector inner and outer products, &lt;a href=&quot;numpy.inner#numpy.inner&quot;&gt;&lt;code&gt;numpy.inner&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;numpy.outer#numpy.outer&quot;&gt;&lt;code&gt;numpy.outer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ベクターの内積と外積&lt;a href=&quot;numpy.inner#numpy.inner&quot;&gt; &lt;code&gt;numpy.inner&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;numpy.outer#numpy.outer&quot;&gt; &lt;code&gt;numpy.outer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc155524d5d2ad1522cc08f2291c52dc38dcecf1" translate="yes" xml:space="preserve">
          <source>Vector inner products:</source>
          <target state="translated">ベクトルの内側の製品。</target>
        </trans-unit>
        <trans-unit id="7b8a7176d65340f9da0fa7937d046de8633e6685" translate="yes" xml:space="preserve">
          <source>Vector outer product:</source>
          <target state="translated">ベクトル外積。</target>
        </trans-unit>
        <trans-unit id="acae4c791d04e4455a560ff6e41306cbb57dcf51" translate="yes" xml:space="preserve">
          <source>Vector(s) with the singular values, within each vector sorted in descending order. The first &lt;code&gt;a.ndim - 2&lt;/code&gt; dimensions have the same size as those of the input &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">降順で並べ替えられた各ベクトル内の特異値を含むベクトル。最初の &lt;code&gt;a.ndim - 2&lt;/code&gt; 次元は、入力 &lt;code&gt;a&lt;/code&gt; と同じサイズです。</target>
        </trans-unit>
        <trans-unit id="2a5acfbe842fd0541792480526462188b04dde53" translate="yes" xml:space="preserve">
          <source>Vector, vector returns the scalar inner product, but neither argument is complex-conjugated:</source>
          <target state="translated">Vector,vectorはスカラーの内積を返しますが、どちらの引数も複素共役化されていません。</target>
        </trans-unit>
        <trans-unit id="d24d62baa6df1c0e53e6c0f85d62c2190886f5dd" translate="yes" xml:space="preserve">
          <source>Vectorization describes the absence of any explicit looping, indexing, etc., in the code - these things are taking place, of course, just &amp;ldquo;behind the scenes&amp;rdquo; in optimized, pre-compiled C code. Vectorized code has many advantages, among which are:</source>
          <target state="translated">ベクトル化は、コードに明示的なループやインデックス作成などがないことを示します。もちろん、これらは、最適化され、コンパイル済みのCコードの「舞台裏」で行われています。ベクトル化されたコードには多くの利点があり、その中には次のものがあります。</target>
        </trans-unit>
        <trans-unit id="c6ec9d2e3c00c48eca40b4ca66a3c4d474b90630" translate="yes" xml:space="preserve">
          <source>Vectorized function.</source>
          <target state="translated">ベクトル化された関数。</target>
        </trans-unit>
        <trans-unit id="72db9853411ecb8ab44d24a7ecaed3ef15eeb780" translate="yes" xml:space="preserve">
          <source>Verbosity value for benchmark outputs, in the range 1-10. Default is 1.</source>
          <target state="translated">ベンチマーク出力の冗長度の値を 1 ~ 10 の範囲で指定します。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="56a92946aff3755099c7d26b356bbca785b0c03f" translate="yes" xml:space="preserve">
          <source>Verbosity value for test outputs, in the range 1-10. Default is 1.</source>
          <target state="translated">テスト出力の冗長度の値、範囲は 1 ~ 10 です。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="7bfe5238ce1d36e9bfcb089f4f57728d117a113e" translate="yes" xml:space="preserve">
          <source>Verify the mean and the variance:</source>
          <target state="translated">平均と分散を検証します。</target>
        </trans-unit>
        <trans-unit id="01e4cae31c98991a3d53edad9d5a04ca08ed4f3b" translate="yes" xml:space="preserve">
          <source>Version numbering</source>
          <target state="translated">バージョン・ナンバリング</target>
        </trans-unit>
        <trans-unit id="51eea7cbb443c92981917f3f8bfdb384f15a6153" translate="yes" xml:space="preserve">
          <source>Version of this function that preserves the shape of ar1.</source>
          <target state="translated">ar1の形状を保持するこの関数のバージョン.</target>
        </trans-unit>
        <trans-unit id="224aeb6086ba7022d83156756ac873c6ff737642" translate="yes" xml:space="preserve">
          <source>Versus a regular NumPy array of type &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;unicode&lt;/code&gt;, this class adds the following functionality:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;unicode&lt;/code&gt; 型の通常のNumPy配列と比較して、このクラスは次の機能を追加します。</target>
        </trans-unit>
        <trans-unit id="a21f850c092874207e85425f1992b2d1d4a0daef" translate="yes" xml:space="preserve">
          <source>Versus a regular NumPy array of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;, this class adds the following functionality:</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; または &lt;code&gt;unicode&lt;/code&gt; 型の通常のNumPy配列と比較して、このクラスは次の機能を追加します。</target>
        </trans-unit>
        <trans-unit id="8dff4805e231cae5fc82f2b66c5c75ea9b76e2a9" translate="yes" xml:space="preserve">
          <source>Very little support for C++ code and its different library-calling conventions. You will probably need a C wrapper around C++ code to use with ctypes (or just use Boost.Python instead).</source>
          <target state="translated">C++のコードとそのライブラリ呼び出しの規約はほとんどサポートされていません。ctypesを使用するためには、C++コードの周りにCのラッパーが必要になるでしょう (あるいは、代わりにBoost.Pythonを使用することもできます)。</target>
        </trans-unit>
        <trans-unit id="c127fa63d626c5390ae1bdab993f5e47e3ded50c" translate="yes" xml:space="preserve">
          <source>Very often, it is desirable to iterate over several arrays at the same time. The universal functions are an example of this kind of behavior. If all you want to do is iterate over arrays with the same shape, then simply creating several iterator objects is the standard procedure. For example, the following code iterates over two arrays assumed to be the same shape and size (actually obj1 just has to have at least as many total elements as does obj2):</source>
          <target state="translated">非常に多くの場合,同時に複数の配列を反復処理することが望ましい.ユニバーサル関数は、この種の動作の例です。同じ形状の配列を反復処理したいだけならば,単純に複数のイテレータオブジェクトを作成するのが標準的な手順です.たとえば、次のコードは、同じ形状とサイズの 2 つの配列を反復処理しています(実際には obj1 は obj2 と同数の総要素数を持つ必要があります)。</target>
        </trans-unit>
        <trans-unit id="ba00ebd75f3175e23b4f09615b45ef3560ac5818" translate="yes" xml:space="preserve">
          <source>View based and advanced indexing is mixed. In this case the view based indexing defines a collection of subarrays that are combined by the advanced indexing. For example, &lt;code&gt;arr[[1, 2, 3], :]&lt;/code&gt; is created by vertically stacking the subarrays &lt;code&gt;arr[1, :]&lt;/code&gt;, &lt;code&gt;arr[2,:]&lt;/code&gt;, and &lt;code&gt;arr[3, :]&lt;/code&gt;.</source>
          <target state="translated">ビューベースのインデックスと高度なインデックスが混在しています。この場合、ビューベースのインデックス付けは、高度なインデックス付けによって結合されるサブ配列のコレクションを定義します。たとえば、 &lt;code&gt;arr[[1, 2, 3], :]&lt;/code&gt; &lt;code&gt;arr[2,:]&lt;/code&gt; は、サブアレイ &lt;code&gt;arr[1, :]&lt;/code&gt; 、arr [2 ,:]、および &lt;code&gt;arr[3, :]&lt;/code&gt; 、：]を垂直に積み重ねることによって作成されます。</target>
        </trans-unit>
        <trans-unit id="a9c88862eb9a71fc0e8a80b619b8e3f7d2d2d42e" translate="yes" xml:space="preserve">
          <source>View casting</source>
          <target state="translated">キャストを見る</target>
        </trans-unit>
        <trans-unit id="56880c7be840a348e75d7f5abcf907eb8bf9c7d5" translate="yes" xml:space="preserve">
          <source>View casting - casting an existing ndarray as a given subclass</source>
          <target state="translated">ビューキャスト-既存の ndarray を指定したサブクラスとしてキャストする</target>
        </trans-unit>
        <trans-unit id="b2ca30abe686b95f053f55957fa5266ab07dca0a" translate="yes" xml:space="preserve">
          <source>View inputs as arrays with at least three dimensions.</source>
          <target state="translated">入力を少なくとも3次元の配列として表示します。</target>
        </trans-unit>
        <trans-unit id="45fb889525ea027b940786067638d779d675de17" translate="yes" xml:space="preserve">
          <source>View inputs as arrays with at least two dimensions.</source>
          <target state="translated">入力を少なくとも2次元の配列として表示します。</target>
        </trans-unit>
        <trans-unit id="6e4fbf98b4a2f11308bf6ec449635485ea8cdb89" translate="yes" xml:space="preserve">
          <source>View of &lt;code&gt;a&lt;/code&gt; with the number of dimensions increased by one.</source>
          <target state="translated">次元数が1増加した &lt;code&gt;a&lt;/code&gt; のビュー。</target>
        </trans-unit>
        <trans-unit id="1435a6e88e9cfdd34dddec8e0ea3d664de355e82" translate="yes" xml:space="preserve">
          <source>View of &lt;code&gt;a&lt;/code&gt; with the number of dimensions increased.</source>
          <target state="translated">次元数が増え &lt;code&gt;a&lt;/code&gt; ビュー。</target>
        </trans-unit>
        <trans-unit id="cbf2e6fd5608dfcde8e1d428501030442d53386c" translate="yes" xml:space="preserve">
          <source>View of &lt;code&gt;a&lt;/code&gt;, with axes suitably permuted.</source>
          <target state="translated">軸を適切に並べ替え &lt;code&gt;a&lt;/code&gt; ビュー。</target>
        </trans-unit>
        <trans-unit id="64d2e5a4061b7a0c16fd366760c98d172091bc5e" translate="yes" xml:space="preserve">
          <source>View or Shallow Copy</source>
          <target state="translated">表示またはシャローコピー</target>
        </trans-unit>
        <trans-unit id="690413363bd8aafde5497bc7e1d13a4d8e5f2372" translate="yes" xml:space="preserve">
          <source>View the array as a record array:</source>
          <target state="translated">配列をレコード配列として表示します。</target>
        </trans-unit>
        <trans-unit id="aea7dff1c7bb5f575c10f755c8f2b7c22ca00476" translate="yes" xml:space="preserve">
          <source>Viewing Structured Arrays Containing Objects</source>
          <target state="translated">オブジェクトを含む構造化配列の表示</target>
        </trans-unit>
        <trans-unit id="81d42abd80c44b454ac926e28ee7856a84a169a3" translate="yes" xml:space="preserve">
          <source>Viewing array data using a different type and dtype:</source>
          <target state="translated">配列データを別の型とdtypeで表示します。</target>
        </trans-unit>
        <trans-unit id="e4585378f90f92f4cace47440b8fa755fd8680a6" translate="yes" xml:space="preserve">
          <source>Views are an important NumPy concept! NumPy functions, as well as operations like indexing and slicing, will return views whenever possible. This saves memory and is faster (no copy of the data has to be made). However it&amp;rsquo;s important to be aware of this - modifying data in a view also modifies the original array!</source>
          <target state="translated">ビューは重要なNumPyの概念です！NumPy関数、およびインデックス作成やスライスなどの操作は、可能な限りビューを返します。これにより、メモリが節約され、高速になります（データのコピーを作成する必要はありません）。ただし、これに注意することが重要です。ビュー内のデータを変更すると、元の配列も変更されます。</target>
        </trans-unit>
        <trans-unit id="30c8756fc6d8ab2295389484bbe9c6879a472d3c" translate="yes" xml:space="preserve">
          <source>Views of arrays in Fortran order</source>
          <target state="translated">Fortranでの配列の表示順</target>
        </trans-unit>
        <trans-unit id="59879f373c87da4a2c95c0412230c3555cfc240e" translate="yes" xml:space="preserve">
          <source>Views returned from einsum are now writeable whenever the input array is writeable. For example, &lt;code&gt;np.einsum('ijk...-&amp;gt;kji...', a)&lt;/code&gt; will now have the same effect as &lt;a href=&quot;numpy.swapaxes#numpy.swapaxes&quot;&gt;&lt;code&gt;np.swapaxes(a, 0, 2)&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;np.einsum('ii-&amp;gt;i', a)&lt;/code&gt; will return a writeable view of the diagonal of a 2D array.</source>
          <target state="translated">einsumから返されたビューは、入力配列が書き込み可能であるときはいつでも書き込み可能になりました。たとえば、 &lt;code&gt;np.einsum('ijk...-&amp;gt;kji...', a)&lt;/code&gt; は&lt;a href=&quot;numpy.swapaxes#numpy.swapaxes&quot;&gt; &lt;code&gt;np.swapaxes(a, 0, 2)&lt;/code&gt; &lt;/a&gt;および &lt;code&gt;np.einsum('ii-&amp;gt;i', a)&lt;/code&gt; と同じ効果があります。、a）は、2D配列の対角線の書き込み可能なビューを返します。</target>
        </trans-unit>
        <trans-unit id="212733d972db48c77aaab9351402436eae4fd2ff" translate="yes" xml:space="preserve">
          <source>Views share data:</source>
          <target state="translated">ビューはデータを共有します。</target>
        </trans-unit>
        <trans-unit id="c9d8f3fc365bae8c1e0312cb68b7341a485aec6e" translate="yes" xml:space="preserve">
          <source>Views that change the dtype size (bytes per entry) should normally be avoided on arrays defined by slices, transposes, fortran-ordering, etc.:</source>
          <target state="translated">dtypeのサイズ(エントリあたりのバイト数)を変更するビューは,スライス,トランスポーズ,フォルトラン順序付けなどで定義された配列では,通常は避けた方がよいでしょう.</target>
        </trans-unit>
        <trans-unit id="56b0a8ac25b1950e1419116b1fa18ea25ea62bb3" translate="yes" xml:space="preserve">
          <source>Violent threats or language directed against another person.</source>
          <target state="translated">他人に対する暴力的な脅迫や言葉遣い。</target>
        </trans-unit>
        <trans-unit id="43e46231e2e4425940323040c2be47d46f02e331" translate="yes" xml:space="preserve">
          <source>Virtualenv</source>
          <target state="translated">Virtualenv</target>
        </trans-unit>
        <trans-unit id="2e7e7becfbd2f76f4c7a1cf2e451eb461ef24b08" translate="yes" xml:space="preserve">
          <source>Virtualenv is a very useful tool to keep several versions of packages around. It is also used in the Paver script to build the docs.</source>
          <target state="translated">Virtualenvは、複数のバージョンのパッケージを保持しておくのに非常に便利なツールです。また、Paverスクリプトでドキュメントを構築する際にも使用します。</target>
        </trans-unit>
        <trans-unit id="e2415cb7f63df0c9de23362326ad3c37a9adfc96" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>
        </trans-unit>
        <trans-unit id="3cd2f9e2b1f25c2f5e7b93f7ce911077d7d964a4" translate="yes" xml:space="preserve">
          <source>W. H. Press, S. A. Teukolsky, W. T. Vetterling and B. P. Flannery, &amp;ldquo;Numerical Recipes (3rd edition)&amp;rdquo;, Cambridge University Press, 2007, page 795.</source>
          <target state="translated">WH Press、SA Teukolsky、WT Vetterling、およびBP Flannery、「Numerical Recipes（3rd edition）」、Cambridge University Press、2007年、795ページ。</target>
        </trans-unit>
        <trans-unit id="e9c669c28770b602c0d3307e40af975f3d6ab286" translate="yes" xml:space="preserve">
          <source>W.H. Press, B.P. Flannery, S.A. Teukolsky, and W.T. Vetterling, &amp;ldquo;Numerical Recipes&amp;rdquo;, Cambridge University Press, 1986, page 425.</source>
          <target state="translated">WH Press、BP Flannery、SA Teukolsky、およびWT Vetterling、「Numerical Recipes」、Cambridge University Press、1986年、425ページ。</target>
        </trans-unit>
        <trans-unit id="dbd0b2fdf754a4d650097a931842e3ce01d68c23" translate="yes" xml:space="preserve">
          <source>W.H. Press, B.P. Flannery, S.A. Teukolsky, and W.T. Vetterling, &amp;ldquo;Numerical Recipes&amp;rdquo;, Cambridge University Press, 1986, page 429.</source>
          <target state="translated">WH Press、BP Flannery、SA Teukolsky、およびWT Vetterling、「Numerical Recipes」、Cambridge University Press、1986年、429ページ。</target>
        </trans-unit>
        <trans-unit id="4d8b44b86ac9762795ccf1eb37bf4871143a380a" translate="yes" xml:space="preserve">
          <source>WRITEABLE (W) the data area can be written to;</source>
          <target state="translated">WRITEABLE (W)データ領域に書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="a6dcab075be566e2b98d550a936f8cae5ce9422f" translate="yes" xml:space="preserve">
          <source>WRITEABLE / W</source>
          <target state="translated">ライタブル/W</target>
        </trans-unit>
        <trans-unit id="73fb58e7589a9ff67f327a9e1cfb0abcae369bb5" translate="yes" xml:space="preserve">
          <source>WRITEABLE can only be set &lt;code&gt;True&lt;/code&gt; if the array owns its own memory or the ultimate owner of the memory exposes a writeable buffer interface or is a string.</source>
          <target state="translated">配列が独自のメモリを所有している場合、またはメモリの最終的な所有者が書き込み可能なバッファインターフェイスを公開している場合、または文字列である場合にのみ、WRITEABLEを &lt;code&gt;True&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="5ca2fe3e818dba5a5804a5bb3a831dd89c500d7a" translate="yes" xml:space="preserve">
          <source>WRITEBACKIFCOPY (X) this array is a copy of some other array (referenced by .base). When the C-API function PyArray_ResolveWritebackIfCopy is called, the base array will be updated with the contents of this array.</source>
          <target state="translated">WRITEBACKIFCOPY (X)この配列は他の配列(.baseで参照される)のコピーです。C-API 関数 PyArray_ResolveWritebackIfCopy が呼び出されると、ベース配列はこの配列の内容で更新されます。</target>
        </trans-unit>
        <trans-unit id="3b243b9b37eb143e3a1ec8091e9c80e424b7cb17" translate="yes" xml:space="preserve">
          <source>WRITEBACKIFCOPY / X</source>
          <target state="translated">WRITEBACKIFCOPY/X</target>
        </trans-unit>
        <trans-unit id="09fcb82609179c1f7885c137f520c527fdcb1905" translate="yes" xml:space="preserve">
          <source>WRITEBACKIFCOPY can only be set &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">WRITEBACKIFCOPYは &lt;code&gt;False&lt;/code&gt; にのみ設定できます。</target>
        </trans-unit>
        <trans-unit id="6fd7081253d772e7a32e41421d2cdf6a9cabced2" translate="yes" xml:space="preserve">
          <source>Waloddi Weibull, &amp;ldquo;A Statistical Distribution Function of Wide Applicability&amp;rdquo;, Journal Of Applied Mechanics ASME Paper 1951.</source>
          <target state="translated">Waloddi Weibull、「幅広い適用性の統計的分布関数」、Journal of Applied Mechanics ASME Paper 1951。</target>
        </trans-unit>
        <trans-unit id="db8ff1d3b42b8d1fe40e88e8148de81cccee175c" translate="yes" xml:space="preserve">
          <source>Waloddi Weibull, Royal Technical University, Stockholm, 1939 &amp;ldquo;A Statistical Theory Of The Strength Of Materials&amp;rdquo;, Ingeniorsvetenskapsakademiens Handlingar Nr 151, 1939, Generalstabens Litografiska Anstalts Forlag, Stockholm.</source>
          <target state="translated">Waloddi Weibull、ロイヤルテクニカルユニバーシティ、ストックホルム、1939「材料の強度の統計理論」、Ingeniorsvetenskapsakademiens Handlear Nr 151、1939、Generalstabens Litografiska Anstalts Forlag、ストックホルム。</target>
        </trans-unit>
        <trans-unit id="f1346bf7169c446f1eec32708e49a903284d1169" translate="yes" xml:space="preserve">
          <source>Warn when saving a dtype with metadata</source>
          <target state="translated">メタデータ付きのdtypeを保存する際の警告</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="4754f4fe525f9c37d19fda1322550a0b26e13158" translate="yes" xml:space="preserve">
          <source>Warning class to filter</source>
          <target state="translated">フィルタリングする警告クラス</target>
        </trans-unit>
        <trans-unit id="f88a191846138392ad4758d4ff77a36f017f6d00" translate="yes" xml:space="preserve">
          <source>Warning objects</source>
          <target state="translated">警告オブジェクト</target>
        </trans-unit>
        <trans-unit id="bb630d84baa9f5fb3c8c438ee6064e7457d1688d" translate="yes" xml:space="preserve">
          <source>Warning on casting complex to real</source>
          <target state="translated">リアルへの配役コンプレックスに注意</target>
        </trans-unit>
        <trans-unit id="37361059464af82221d16eb1a2018e9694f9cd57" translate="yes" xml:space="preserve">
          <source>Warning: This attribute exists specifically for &lt;code&gt;__array_interface__&lt;/code&gt;, and is not a datatype description compatible with &lt;code&gt;np.dtype&lt;/code&gt;.</source>
          <target state="translated">警告：この属性は、専用に存在 &lt;code&gt;__array_interface__&lt;/code&gt; 、と互換性データ型説明ない &lt;code&gt;np.dtype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53dd2d8a36d40ea4bb66f08310fbbcb2e7533b5f" translate="yes" xml:space="preserve">
          <source>Warning: This attribute exists specifically for &lt;code&gt;__array_interface__&lt;/code&gt;, and passing it directly to &lt;code&gt;np.dtype&lt;/code&gt; will not accurately reconstruct some dtypes (e.g., scalar and subarray dtypes).</source>
          <target state="translated">この属性は、具体的のために存在する：警告 &lt;code&gt;__array_interface__&lt;/code&gt; 、とに直接渡し &lt;code&gt;np.dtype&lt;/code&gt; 正確にいくつかのdtypes（例えば、スカラーサブアレイdtypes）を再構築しません。</target>
        </trans-unit>
        <trans-unit id="67f63aaa6eb093a2b8631aeb7aa1f1f56dd3fc86" translate="yes" xml:space="preserve">
          <source>Warning: This functionality does &lt;strong&gt;not&lt;/strong&gt; consider axes separately, i.e. it does not apply interpolation/extrapolation. It fills the return array with the required number of elements, taken from &lt;code&gt;a&lt;/code&gt; as they are laid out in memory, disregarding strides and axes. (This is in case the new shape is smaller. For larger, see above.) This functionality is therefore not suitable to resize images, or data where each axis represents a separate and distinct entity.</source>
          <target state="translated">警告：この機能はない&lt;strong&gt;ではない&lt;/strong&gt;個別の軸を考え、すなわちそれは、補間/外挿は適用されません。ストライドと軸を無視して、メモリに配置されたときに &lt;code&gt;a&lt;/code&gt; から取得された必要な数の要素で戻り配列を埋めます。 （これは、新しい形状が小さい場合に当てはまります。大きい場合は、上記を参照してください。）したがって、この機能は、画像や各軸が個別のエンティティを表すデータのサイズ変更には適していません。</target>
        </trans-unit>
        <trans-unit id="1430f976c596795274458abcfbc4f280cbfcebac" translate="yes" xml:space="preserve">
          <source>Warnings</source>
          <target state="translated">Warnings</target>
        </trans-unit>
        <trans-unit id="60f5d88ea293a20258ae77bd080550b12d5b3d82" translate="yes" xml:space="preserve">
          <source>Warns</source>
          <target state="translated">Warns</target>
        </trans-unit>
        <trans-unit id="6fcbb55cbf3a317fd9e559a46404d4ffc0901e5d" translate="yes" xml:space="preserve">
          <source>Warns:</source>
          <target state="translated">Warns:</target>
        </trans-unit>
        <trans-unit id="2877e71e929aa29b0e79a512d385261189d70371" translate="yes" xml:space="preserve">
          <source>Wave heights tend to follow a Rayleigh distribution. If the mean wave height is 1 meter, what fraction of waves are likely to be larger than 3 meters?</source>
          <target state="translated">波高はレイリー分布に従う傾向がある。平均波高が1mだとすると、3mよりも大きい波の割合はどのくらいでしょうか?</target>
        </trans-unit>
        <trans-unit id="58cd26b5bf632fda361651c5bed4615a24ac5c34" translate="yes" xml:space="preserve">
          <source>We are thankful to the groups behind the following documents, from which we drew content and inspiration:</source>
          <target state="translated">私たちは、以下の文書の背後にあるグループに感謝しています。</target>
        </trans-unit>
        <trans-unit id="87d1583437d12a714a66434e88f0db3dd9eec3f0" translate="yes" xml:space="preserve">
          <source>We build 32- and 64-bit wheels on Windows. Windows 7, 8 and 10 are supported. We build NumPy using the &lt;a href=&quot;https://mingwpy.github.io&quot;&gt;mingw-w64 toolchain&lt;/a&gt; on Appveyor.</source>
          <target state="translated">Windows上で32ビットおよび64ビットのホイールを構築します。Windows 7、8、および10がサポートされています。&lt;a href=&quot;https://mingwpy.github.io&quot;&gt;Appveyorのmingw-w64ツールチェーン&lt;/a&gt;を使用してNumPyを構築します。</target>
        </trans-unit>
        <trans-unit id="52a53769f72b3e9d74a22d9793d68e7e1c952be3" translate="yes" xml:space="preserve">
          <source>We build all our wheels on cloud infrastructure - so this list of compilers is for information and debugging builds locally. See the &lt;code&gt;.travis.yml&lt;/code&gt; and &lt;code&gt;appveyor.yml&lt;/code&gt; scripts in the &lt;a href=&quot;https://github.com/MacPython/numpy-wheels&quot;&gt;numpy wheels&lt;/a&gt; repo for the definitive source of the build recipes. Packages that are available using pip are noted.</source>
          <target state="translated">私たちはすべてのホイールをクラウドインフラストラクチャ上に構築しています。したがって、このコンパイラのリストは、ビルドの情報とデバッグをローカルで行うためのものです。参照 &lt;code&gt;.travis.yml&lt;/code&gt; と &lt;code&gt;appveyor.yml&lt;/code&gt; でスクリプト&lt;a href=&quot;https://github.com/MacPython/numpy-wheels&quot;&gt;numpyの車輪が&lt;/a&gt;ビルドレシピの決定的なソースのレポ。pipを使用して利用できるパッケージが記載されています。</target>
        </trans-unit>
        <trans-unit id="5ffd71ee5e18a21e4fac71c59e3fce6abfaf692e" translate="yes" xml:space="preserve">
          <source>We build and ship &lt;a href=&quot;https://www.python.org/dev/peps/pep-0513&quot;&gt;manylinux1&lt;/a&gt; wheels for NumPy. Many Linux distributions include their own binary builds of NumPy.</source>
          <target state="translated">NumPy用に&lt;a href=&quot;https://www.python.org/dev/peps/pep-0513&quot;&gt;manylinux1&lt;/a&gt;ホイールを構築して出荷しています。多くのLinuxディストリビューションには、独自のNumPyのバイナリビルドが含まれています。</target>
        </trans-unit>
        <trans-unit id="c2a47a01a930577b3f6fd6bc57c66f9caa61248a" translate="yes" xml:space="preserve">
          <source>We build source releases in both .zip and .tar.gz formats.</source>
          <target state="translated">私たちは、.zip と .tar.gz の両方の形式でソースリリースを構築します。</target>
        </trans-unit>
        <trans-unit id="90fdab75def7d856cf227160207c1857877a95de" translate="yes" xml:space="preserve">
          <source>We can access the elements in the array using square brackets. When you&amp;rsquo;re accessing elements, remember that indexing in NumPy starts at 0. That means that if you want to access the first element in your array, you&amp;rsquo;ll be accessing element &amp;ldquo;0&amp;rdquo;.</source>
          <target state="translated">角括弧を使用して配列内の要素にアクセスできます。要素にアクセスするときは、NumPyのインデックス作成は0から始まることに注意してください。つまり、配列の最初の要素にアクセスする場合は、要素「0」にアクセスすることになります。</target>
        </trans-unit>
        <trans-unit id="72895573c71234a77f8f78e60c8d2a3fa9071512" translate="yes" xml:space="preserve">
          <source>We can also give indexes for more than one dimension. The arrays of indices for each dimension must have the same shape.</source>
          <target state="translated">複数の次元のインデックスを与えることもできます。各次元のインデックスの配列は同じ形状でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d199611fe572f9a604421aeb87fed868192644af" translate="yes" xml:space="preserve">
          <source>We can begin with a chain dot example. In this case, it is optimal to contract the &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; tensors first as represented by the first element of the path &lt;code&gt;(1, 2)&lt;/code&gt;. The resulting tensor is added to the end of the contraction and the remaining contraction &lt;code&gt;(0, 1)&lt;/code&gt; is then completed.</source>
          <target state="translated">チェーンドットの例から始めることができます。この場合、パス &lt;code&gt;(1, 2)&lt;/code&gt; の最初の要素で表されるように、最初に &lt;code&gt;b&lt;/code&gt; および &lt;code&gt;c&lt;/code&gt; テンソルを縮小するのが最適です。結果のテンソルが収縮の最後に追加され、残りの収縮 &lt;code&gt;(0, 1)&lt;/code&gt; が完了します。</target>
        </trans-unit>
        <trans-unit id="c24b2dc7e2cf1c2ee15a3b856c501da4eb664f2c" translate="yes" xml:space="preserve">
          <source>We can convert to a numpy array using &lt;a href=&quot;../reference/generated/numpy.array#numpy.array&quot;&gt;&lt;code&gt;numpy.array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/generated/numpy.asarray#numpy.asarray&quot;&gt;&lt;code&gt;numpy.asarray&lt;/code&gt;&lt;/a&gt;, which will call its &lt;code&gt;__array__&lt;/code&gt; method to obtain a standard &lt;code&gt;numpy.ndarray&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../reference/generated/numpy.array#numpy.array&quot;&gt; &lt;code&gt;numpy.array&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../reference/generated/numpy.asarray#numpy.asarray&quot;&gt; &lt;code&gt;numpy.asarray&lt;/code&gt; &lt;/a&gt;を使用してnumpy配列に変換できます。これにより、 &lt;code&gt;__array__&lt;/code&gt; メソッドが呼び出され、標準の &lt;code&gt;numpy.ndarray&lt;/code&gt; が取得されます。</target>
        </trans-unit>
        <trans-unit id="679a2f0f20fc2e3fa05b5f20a0ca536c32a5eeaa" translate="yes" xml:space="preserve">
          <source>We can get a finer control on the conversion of missing values with the &lt;code&gt;filling_values&lt;/code&gt; optional argument. Like &lt;code&gt;missing_values&lt;/code&gt;, this argument accepts different kind of values:</source>
          <target state="translated">オプションの &lt;code&gt;filling_values&lt;/code&gt; 引数を使用して、欠落値の変換をより細かく制御できます。 &lt;code&gt;missing_values&lt;/code&gt; と同様に、この引数はさまざまな種類の値を受け入れます。</target>
        </trans-unit>
        <trans-unit id="66a6a3c1aa8ab5615ae93578f83c6c2bc137c427" translate="yes" xml:space="preserve">
          <source>We can now compute the mean of the dataset, without taking the invalid data into account:</source>
          <target state="translated">無効なデータを考慮に入れずに、データセットの平均を計算できるようになりました。</target>
        </trans-unit>
        <trans-unit id="52c82ab011abc5da0365af1d671286d5b3b09bbe" translate="yes" xml:space="preserve">
          <source>We can overwrite this default with the &lt;code&gt;defaultfmt&lt;/code&gt; argument, that takes any format string:</source>
          <target state="translated">このデフォルトは、任意のフォーマット文字列をとる &lt;code&gt;defaultfmt&lt;/code&gt; 引数で上書きできます。</target>
        </trans-unit>
        <trans-unit id="07dfd0de116a4118d2e8d7ab1e0ba4c4055ce110" translate="yes" xml:space="preserve">
          <source>We can replace the maximum values with:</source>
          <target state="translated">最大値に置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="e6a512625d0cb7e17ddcfbaaf190c6f0c94959ed" translate="yes" xml:space="preserve">
          <source>We can reset the function to the default:</source>
          <target state="translated">機能をデフォルトに戻すことができます。</target>
        </trans-unit>
        <trans-unit id="b52b8758d686451191a4e1193e567d392d717d53" translate="yes" xml:space="preserve">
          <source>We can rewrite the line equation as &lt;code&gt;y = Ap&lt;/code&gt;, where &lt;code&gt;A = [[x 1]]&lt;/code&gt; and &lt;code&gt;p = [[m], [c]]&lt;/code&gt;. Now use &lt;a href=&quot;#numpy.linalg.lstsq&quot;&gt;&lt;code&gt;lstsq&lt;/code&gt;&lt;/a&gt; to solve for &lt;code&gt;p&lt;/code&gt;:</source>
          <target state="translated">行方程式を &lt;code&gt;y = Ap&lt;/code&gt; として書き換えます。ここで、 &lt;code&gt;A = [[x 1]]&lt;/code&gt; および &lt;code&gt;p = [[m], [c]]&lt;/code&gt; です。ここで&lt;a href=&quot;#numpy.linalg.lstsq&quot;&gt; &lt;code&gt;lstsq&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;p&lt;/code&gt; を解きます：</target>
        </trans-unit>
        <trans-unit id="9280da38538a3f969f230f09cea0b4dbc319a8ef" translate="yes" xml:space="preserve">
          <source>We can see the image using the &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.pyplot.imshow.html#matplotlib.pyplot.imshow&quot;&gt;&lt;code&gt;matplotlib.pyplot.imshow&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">&lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.pyplot.imshow.html#matplotlib.pyplot.imshow&quot;&gt; &lt;code&gt;matplotlib.pyplot.imshow&lt;/code&gt; &lt;/a&gt;関数を使用して画像を表示できます。</target>
        </trans-unit>
        <trans-unit id="bcf794d24d8964269b87153ebb1affba96ff631d" translate="yes" xml:space="preserve">
          <source>We can sort either by using sort directly, or argsort and this function</source>
          <target state="translated">ソートを直接使用するか、argsort とこの関数を使用してソートすることができます。</target>
        </trans-unit>
        <trans-unit id="c8b935f50d33884f474e4109b428a56eb6fe6366" translate="yes" xml:space="preserve">
          <source>We can use a different method other than the default to factorize cov: &amp;gt;&amp;gt;&amp;gt; y = rng.multivariate_normal(mean, cov, (3, 3), method=&amp;rsquo;cholesky&amp;rsquo;) &amp;gt;&amp;gt;&amp;gt; y.shape (3, 3, 2)</source>
          <target state="translated">デフォルト以外の別の方法を使用して、covを因数分解できます。&amp;gt;&amp;gt;&amp;gt; y = rng.multivariate_normal（mean、cov、（3、3）、method = 'cholesky'）&amp;gt;&amp;gt;&amp;gt; y.shape（3、3、 2）</target>
        </trans-unit>
        <trans-unit id="23502bd41157dbb482cc4d93fe154b6f35759b68" translate="yes" xml:space="preserve">
          <source>We can verify this, approximating the derivative with &lt;code&gt;(f(x + h) - f(x))/h&lt;/code&gt;:</source>
          <target state="translated">これを検証して、 &lt;code&gt;(f(x + h) - f(x))/h&lt;/code&gt; 導関数を近似します。</target>
        </trans-unit>
        <trans-unit id="1edbc1babc558648a370766b66d6bf09ff4d2327" translate="yes" xml:space="preserve">
          <source>We chose our default threshold because it is in wide use. Other thresholds are possible. For example, elsewhere in the 2007 edition of &lt;em&gt;Numerical recipes&lt;/em&gt; there is an alternative threshold of &lt;code&gt;S.max() *
np.finfo(M.dtype).eps / 2. * np.sqrt(m + n + 1.)&lt;/code&gt;. The authors describe this threshold as being based on &amp;ldquo;expected roundoff error&amp;rdquo; (p 71).</source>
          <target state="translated">広く使用されているため、デフォルトのしきい値を選択しました。他のしきい値が可能です。たとえば、&lt;em&gt;数値レシピの&lt;/em&gt; 2007年版の他の場所には、 &lt;code&gt;S.max() * np.finfo(M.dtype).eps / 2. * np.sqrt(m + n + 1.)&lt;/code&gt; 代替しきい値があります。* np.sqrt（m + n + 1.）。著者は、このしきい値を「予想される丸め誤差」（p 71）に基づいていると説明しています。</target>
        </trans-unit>
        <trans-unit id="81b92d4d0e0bfcb2ba46a1a8b9dd4a22e1691631" translate="yes" xml:space="preserve">
          <source>We could also have used the &lt;a href=&quot;../reference/generated/numpy.allclose#numpy.allclose&quot;&gt;&lt;code&gt;numpy.allclose&lt;/code&gt;&lt;/a&gt; function to make sure the reconstructed product is, in fact, &lt;em&gt;close&lt;/em&gt; to our original matrix (the difference between the two arrays is small):</source>
          <target state="translated">&lt;a href=&quot;../reference/generated/numpy.allclose#numpy.allclose&quot;&gt; &lt;code&gt;numpy.allclose&lt;/code&gt; &lt;/a&gt;関数を使用して、再構築された製品が実際に元の行列に&lt;em&gt;近い&lt;/em&gt;ことを確認することもできます（2つの配列の違いはわずかです）。</target>
        </trans-unit>
        <trans-unit id="d8ba993fff071da05f22748cefa6f6b8ad24e53b" translate="yes" xml:space="preserve">
          <source>We could have implemented:</source>
          <target state="translated">実装できたのに</target>
        </trans-unit>
        <trans-unit id="37a18e023d482a1a5f3f0844c696551b9f7ca294" translate="yes" xml:space="preserve">
          <source>We currently support Python 3.6-3.8 on Windows, OSX, and Linux</source>
          <target state="translated">現在、Windows、OSX、LinuxでPython 3.6-3.8をサポートしています。</target>
        </trans-unit>
        <trans-unit id="07a1c0a83c857f695d91b773fe8da038b7dff7fd" translate="yes" xml:space="preserve">
          <source>We currently use &lt;a href=&quot;http://www.sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt; for generating the API and reference documentation for NumPy. You will need Sphinx &amp;gt;= 2.2.0.</source>
          <target state="translated">現在、NumPyのAPIとリファレンスドキュメントを生成するために&lt;a href=&quot;http://www.sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt;を使用しています。Sphinx&amp;gt; = 2.2.0が必要になります。</target>
        </trans-unit>
        <trans-unit id="59bec2d1c76c534a2fc4afd9318e87ce91e937b9" translate="yes" xml:space="preserve">
          <source>We default to using a 128-bit integer using entropy gathered from the OS. This is a good amount of entropy to initialize all of the generators that we have in numpy. We do not recommend using small seeds below 32 bits for general use. Using just a small set of seeds to instantiate larger state spaces means that there are some initial states that are impossible to reach. This creates some biases if everyone uses such values.</source>
          <target state="translated">デフォルトでは、OSから集めたエントロピーを使って128ビットの整数を使用しています。これは、numpyにあるすべてのジェネレータを初期化するのに十分なエントロピー量です。一般的な使用のために32ビット以下の小さなシードを使うことはお勧めしません。より大きな状態空間をインスタンス化するために小さなシードのセットを使うということは、到達できない初期状態が存在することを意味します。これは、すべての人がそのような値を使うと、いくつかのバイアスが発生します。</target>
        </trans-unit>
        <trans-unit id="dc787d0b25c896acc068b7c607665544c0350ae5" translate="yes" xml:space="preserve">
          <source>We do as follows:</source>
          <target state="translated">以下のようにしています。</target>
        </trans-unit>
        <trans-unit id="6c39690106b67e736bf72e53ea7082db75a8ca14" translate="yes" xml:space="preserve">
          <source>We expect the arccos of 1 to be 0, and of -1 to be pi:</source>
          <target state="translated">1のアルコは0、-1のアルコはπと予想します。</target>
        </trans-unit>
        <trans-unit id="44f2a9cfd92075d83d3f564752917c6115d7836b" translate="yes" xml:space="preserve">
          <source>We expect the arctan of 0 to be 0, and of 1 to be pi/4:</source>
          <target state="translated">0のアルクタンを0、1のアルクタンをπ/4と予想しています。</target>
        </trans-unit>
        <trans-unit id="b30e48f7bd5611b7e5063995e5e3d8d0377a6a59" translate="yes" xml:space="preserve">
          <source>We finally give an example of a full ufunc, with inner loops for half-floats, floats, doubles, and long doubles. As in the previous sections we first give the .c file and then the corresponding setup.py file.</source>
          <target state="translated">最後に、ハーフフロート、フロート、ダブルス、ロングダブルスの内部ループを持つ完全な ufunc の例を示します。前のセクションと同様に、最初に.cファイルとそれに対応するsetup.pyファイルを提供します。</target>
        </trans-unit>
        <trans-unit id="60136b35f0997a97a43dcb76040b0f18f3536c81" translate="yes" xml:space="preserve">
          <source>We have 10 degrees of freedom, so is the sample mean within 95% of the recommended value?</source>
          <target state="translated">10自由度があるので、標本平均は推奨値の95%以内に収まっていますか?</target>
        </trans-unit>
        <trans-unit id="e5235dd026426cf863204463534241d25f8524b9" translate="yes" xml:space="preserve">
          <source>We intend to re-implement numpy functions as (generalized) Ufunc, in which case it will become possible for them to be overridden by the &lt;code&gt;__array_ufunc__&lt;/code&gt; method. A prime candidate is &lt;a href=&quot;generated/numpy.matmul#numpy.matmul&quot;&gt;&lt;code&gt;matmul&lt;/code&gt;&lt;/a&gt;, which currently is not a Ufunc, but could be relatively easily be rewritten as a (set of) generalized Ufuncs. The same may happen with functions such as &lt;a href=&quot;generated/numpy.median#numpy.median&quot;&gt;&lt;code&gt;median&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.amin#numpy.amin&quot;&gt;&lt;code&gt;amin&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;generated/numpy.argsort#numpy.argsort&quot;&gt;&lt;code&gt;argsort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">numpy関数を（一般化された）Ufuncとして再実装する予定です。その場合、 &lt;code&gt;__array_ufunc__&lt;/code&gt; メソッドでオーバーライドできるようになります。主要な候補は&lt;a href=&quot;generated/numpy.matmul#numpy.matmul&quot;&gt; &lt;code&gt;matmul&lt;/code&gt; で&lt;/a&gt;、これは現在Ufuncではありませんが、一般化されたUfunc（のセット）として比較的簡単に書き直すことができます。同じことが、&lt;a href=&quot;generated/numpy.median#numpy.median&quot;&gt; &lt;code&gt;median&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.amin#numpy.amin&quot;&gt; &lt;code&gt;amin&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.argsort#numpy.argsort&quot;&gt; &lt;code&gt;argsort&lt;/code&gt; &lt;/a&gt;などの関数でも発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3e23f0ad561893af23edd41efd72f4bd368c5b95" translate="yes" xml:space="preserve">
          <source>We intend to re-implement numpy functions as (generalized) Ufunc, in which case it will become possible for them to be overridden by the &lt;code&gt;__array_ufunc__&lt;/code&gt; method. A prime candidate is &lt;a href=&quot;generated/numpy.matmul#numpy.matmul&quot;&gt;&lt;code&gt;matmul&lt;/code&gt;&lt;/a&gt;, which currently is not a Ufunc, but could be relatively easily be rewritten as a (set of) generalized Ufuncs. The same may happen with functions such as &lt;a href=&quot;generated/numpy.median#numpy.median&quot;&gt;&lt;code&gt;median&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;min&lt;/code&gt;, and &lt;a href=&quot;generated/numpy.argsort#numpy.argsort&quot;&gt;&lt;code&gt;argsort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">numpy関数を（一般化された）Ufuncとして再実装する予定です。その場合、それらは &lt;code&gt;__array_ufunc__&lt;/code&gt; メソッドでオーバーライドできるようになります。主要な候補は&lt;a href=&quot;generated/numpy.matmul#numpy.matmul&quot;&gt; &lt;code&gt;matmul&lt;/code&gt; です&lt;/a&gt;。これは現在Ufuncではありませんが、比較的簡単に一般化されたUfunc（のセット）として書き直すことができます。&lt;a href=&quot;generated/numpy.median#numpy.median&quot;&gt; &lt;code&gt;median&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;min&lt;/code&gt; 、&lt;a href=&quot;generated/numpy.argsort#numpy.argsort&quot;&gt; &lt;code&gt;argsort&lt;/code&gt; &lt;/a&gt;などの関数でも同じことが起こります。</target>
        </trans-unit>
        <trans-unit id="1293e5317149027712d90c363de09ae292d438a7" translate="yes" xml:space="preserve">
          <source>We know how to recognize missing data, but we still need to provide a value for these missing entries. By default, this value is determined from the expected dtype according to this table:</source>
          <target state="translated">欠落データを認識する方法は分かっていますが、これらの欠落エントリに対して値を提供する必要があります。デフォルトでは、この値はこの表に従って期待されるdtypeから決定されます。</target>
        </trans-unit>
        <trans-unit id="6f8e06849ef9bab23d7db3a10be02e06887dd75e" translate="yes" xml:space="preserve">
          <source>We know that it is painfully common for internet communication to start at or devolve into obvious and flagrant abuse. We also recognize that sometimes people may have a bad day, or be unaware of some of the guidelines in this Code of Conduct. Please keep this in mind when deciding on how to respond to a breach of this Code.</source>
          <target state="translated">私たちは、インターネット上でのコミュニケーションが、最初から始まったり、明らかな悪意のある悪用に発展したりすることが、痛いほどよくあることを知っています。また、時には、人によっては気分が悪くなったり、この行動規範のガイドラインのいくつかを知らなかったりすることもあることを認識しています。この行動規範に違反した場合にどのように対応するかを決める際には、この点を念頭に置いてください。</target>
        </trans-unit>
        <trans-unit id="c3d95188759c6e8c19362be20ce93f51fbaea853" translate="yes" xml:space="preserve">
          <source>We know that it is painfully common for internet communication to start at or devolve into obvious and flagrant abuse. We will deal quickly with clear and severe breaches like personal threats, violent, sexist or racist language.</source>
          <target state="translated">インターネット上でのコミュニケーションは、最初から始まったり、明らかな悪用に発展したりすることが痛いほどよくあることを私たちは知っています。私たちは、個人的な脅迫、暴力的、性差別的、人種差別的な言葉など、明確で深刻な違反行為に迅速に対処します。</target>
        </trans-unit>
        <trans-unit id="f7544e988af826e0fbccd6c4b63e19df859cd38a" translate="yes" xml:space="preserve">
          <source>We make something where they don&amp;rsquo;t match:</source>
          <target state="translated">一致しないものを作成します。</target>
        </trans-unit>
        <trans-unit id="781a6efc97caaf1a36d25f937ebe769fa9a9b591" translate="yes" xml:space="preserve">
          <source>We may also want to keep track of the occurrence of missing data by constructing a boolean mask, with &lt;code&gt;True&lt;/code&gt; entries where data was missing and &lt;code&gt;False&lt;/code&gt; otherwise. To do that, we just have to set the optional argument &lt;code&gt;usemask&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; (the default is &lt;code&gt;False&lt;/code&gt;). The output array will then be a &lt;a href=&quot;../reference/maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">また、ブールマスクを作成して、データが欠落している場合は &lt;code&gt;True&lt;/code&gt; エントリ、それ以外の場合は &lt;code&gt;False&lt;/code&gt; を使用して、欠落データの発生を追跡することもできます。これを行うには、オプションの引数 &lt;code&gt;usemask&lt;/code&gt; を &lt;code&gt;True&lt;/code&gt; に設定する必要があります（デフォルトは &lt;code&gt;False&lt;/code&gt; です）。その場合、出力配列は&lt;a href=&quot;../reference/maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d343b0827c2326d2e2dfa15e06ce5fa3d4c2f432" translate="yes" xml:space="preserve">
          <source>We may sometimes need to define the column names from the data itself. In that case, we must use the &lt;code&gt;names&lt;/code&gt; keyword with a value of &lt;code&gt;True&lt;/code&gt;. The names will then be read from the first line (after the &lt;code&gt;skip_header&lt;/code&gt; ones), even if the line is commented out:</source>
          <target state="translated">データ自体から列名を定義する必要がある場合があります。その場合、 &lt;code&gt;True&lt;/code&gt; の値で &lt;code&gt;names&lt;/code&gt; キーワードを使用する必要があります。その行がコメントアウトされている場合でも、名前は最初の行（ &lt;code&gt;skip_header&lt;/code&gt; の行の後）から読み取られます。</target>
        </trans-unit>
        <trans-unit id="a4d639f7ac01ada7c421e46e5c0c6852fa788e6e" translate="yes" xml:space="preserve">
          <source>We might want to use an &lt;code&gt;ndarray&lt;/code&gt; to access these integers. In that case, we can create an array around this memory, and tell numpy that there are two integers, and that they are 16 bit and big-endian:</source>
          <target state="translated">これらの整数にアクセスするには、 &lt;code&gt;ndarray&lt;/code&gt; を使用することをお勧めします。その場合、このメモリの周りに配列を作成し、numpyに2つの整数があり、それらが16ビットでビッグエンディアンであることを伝えることができます。</target>
        </trans-unit>
        <trans-unit id="072334154bb34d89af6df6dd9ad4c673bc66d42c" translate="yes" xml:space="preserve">
          <source>We mostly follow the standard Python style conventions as described here:</source>
          <target state="translated">ここで説明されているように、ほとんどの場合、標準的な Python のスタイルの規約に従っています。</target>
        </trans-unit>
        <trans-unit id="b81decf25be5fe15c427b84c45168043bb0f3933" translate="yes" xml:space="preserve">
          <source>We need to keep in mind that &lt;code&gt;defaultfmt&lt;/code&gt; is used only if some names are expected but not defined.</source>
          <target state="translated">&lt;code&gt;defaultfmt&lt;/code&gt; は、一部の名前が予期されているが定義されていない場合にのみ使用されることに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="380361f0524609518a908c9433a3d7c3dd0b0e84" translate="yes" xml:space="preserve">
          <source>We need to keep in mind that by default, &lt;code&gt;dtype=float&lt;/code&gt;. A float is therefore expected for the second column. However, the strings &lt;code&gt;' 2.3%'&lt;/code&gt; and &lt;code&gt;' 78.9%'&lt;/code&gt; cannot be converted to float and we end up having &lt;code&gt;np.nan&lt;/code&gt; instead. Let&amp;rsquo;s now use a converter:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;dtype=float&lt;/code&gt; であることに注意する必要があります。したがって、2番目の列にはフロートが予想されます。ただし、文字列 &lt;code&gt;' 2.3%'&lt;/code&gt; および &lt;code&gt;' 78.9%'&lt;/code&gt; はfloatに変換できず、代わりに &lt;code&gt;np.nan&lt;/code&gt; になります。コンバーターを使用してみましょう：</target>
        </trans-unit>
        <trans-unit id="b3cf3455d01dd7db3c5c070359dd30cf5e39de43" translate="yes" xml:space="preserve">
          <source>We need to stress that this behavior may not be systematic, that masked data may be affected by the operation in some cases and therefore users should not rely on this data remaining unchanged.</source>
          <target state="translated">この動作は系統的ではない可能性があること、マスクされたデータは場合によっては操作の影響を受ける可能性があること、したがって、ユーザーはこのデータが変化せずに残っていることに頼るべきではないことを強調する必要があります。</target>
        </trans-unit>
        <trans-unit id="70c4b47019e4c41b3daf6bed7ca28bdcaf2fd573" translate="yes" xml:space="preserve">
          <source>We only give the C code as the setup.py file is exactly the same as the setup.py file in &lt;a href=&quot;#example-numpy-ufunc-for-one-dtype&quot;&gt;Example NumPy ufunc for one dtype&lt;/a&gt;, except that the line</source>
          <target state="translated">setup.pyファイルが正確でsetup.pyファイルと同じであると我々は唯一のCコードを与える&lt;a href=&quot;#example-numpy-ufunc-for-one-dtype&quot;&gt;1 DTYPEための例numpyのufunc&lt;/a&gt;ラインことを除いて、</target>
        </trans-unit>
        <trans-unit id="58ff07099c06b392c411860c04ae360c63b97582" translate="yes" xml:space="preserve">
          <source>We only show a few blocks for clarity:</source>
          <target state="translated">わかりやすくするために、いくつかのブロックだけを表示しています。</target>
        </trans-unit>
        <trans-unit id="673c3f49f8ee0b4069fb17ea81837a33f48d70f3" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;numpy.isin#numpy.isin&quot;&gt;&lt;code&gt;isin&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#numpy.in1d&quot;&gt;&lt;code&gt;in1d&lt;/code&gt;&lt;/a&gt; for new code.</source>
          <target state="translated">新しいコードには、&lt;a href=&quot;#numpy.in1d&quot;&gt; &lt;code&gt;in1d&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;numpy.isin#numpy.isin&quot;&gt; &lt;code&gt;isin&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="cf93137d5dc17f96b6bf02cdfd69394699568873" translate="yes" xml:space="preserve">
          <source>We recommend using dtype objects instead.</source>
          <target state="translated">代わりにdtypeオブジェクトを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7ca33c6b93a76db017c3cdc61675ace9bc2b416c" translate="yes" xml:space="preserve">
          <source>We recommend using the &lt;code&gt;.npy&lt;/code&gt; and &lt;code&gt;.npz&lt;/code&gt; extensions for files saved in this format. This is by no means a requirement; applications may wish to use these file formats but use an extension specific to the application. In the absence of an obvious alternative, however, we suggest using &lt;code&gt;.npy&lt;/code&gt; and &lt;code&gt;.npz&lt;/code&gt;.</source>
          <target state="translated">この形式で保存されたファイルには、拡張子 &lt;code&gt;.npy&lt;/code&gt; および &lt;code&gt;.npz&lt;/code&gt; を使用することをお勧めします。これは決して要件ではありません。アプリケーションはこれらのファイル形式を使用したい場合がありますが、アプリケーションに固有の拡張子を使用します。ただし、明確な代替手段がない場合は、 &lt;code&gt;.npy&lt;/code&gt; および &lt;code&gt;.npz&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2d2b661adfc63aa8859c127667d479a970f43ef4" translate="yes" xml:space="preserve">
          <source>We run a ufunc on an instance of our new array:</source>
          <target state="translated">新しい配列のインスタンスに対して ufunc を実行します。</target>
        </trans-unit>
        <trans-unit id="44aaad76397b012d2d13a57d62118fcba214a475" translate="yes" xml:space="preserve">
          <source>We strive to:</source>
          <target state="translated">努力しています。</target>
        </trans-unit>
        <trans-unit id="33c0514953dd33becf83ed3bc37cb8f06826d505" translate="yes" xml:space="preserve">
          <source>We then define a new test case class for each supported data type with a short definition such as:</source>
          <target state="translated">次に、サポートされているデータ型ごとに新しいテストケースクラスを定義します。</target>
        </trans-unit>
        <trans-unit id="0935f73910a1bfd402810a3c2528dcf47c85a9da" translate="yes" xml:space="preserve">
          <source>We understand that email is a difficult medium and can be isolating. Receiving criticism over email, without personal contact, can be particularly painful. This makes it especially important to keep an atmosphere of open-minded respect of the views of others. It also means that we must be transparent in our actions, and that we will do everything in our power to make sure that all our members are treated fairly and with sympathy.</source>
          <target state="translated">電子メールは難しい媒体であり、孤立してしまうことがあることを理解しています。個人的な接触なしに電子メールで批判を受けることは、特に苦痛を伴うことがあります。そのため、他者の意見を尊重し、心を開いた雰囲気を保つことが特に重要です。また、私たちは自分たちの行動を透明にしなければならず、すべてのメンバーが公平に、そして同情の念を持って扱われるように、私たちができる限りのことをするということです。</target>
        </trans-unit>
        <trans-unit id="ad180c1380373588b422b6f9367e1dfa995335a7" translate="yes" xml:space="preserve">
          <source>We use the algorithm published by Clenshaw &lt;a href=&quot;#rfd38a370b188-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; and referenced by Abramowitz and Stegun &lt;a href=&quot;#rfd38a370b188-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;, for which the function domain is partitioned into the two intervals [0,8] and (8,inf), and Chebyshev polynomial expansions are employed in each interval. Relative error on the domain [0,30] using IEEE arithmetic is documented &lt;a href=&quot;#rfd38a370b188-3&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt; as having a peak of 5.8e-16 with an rms of 1.4e-16 (n = 30000).</source>
          <target state="translated">Clenshaw &lt;a href=&quot;#rfd38a370b188-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;によって公開され、AbramowitzとStegun &lt;a href=&quot;#rfd38a370b188-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;によって参照されるアルゴリズムを使用します。関数ドメインは、2つの区間[0,8]と（8、inf）に分割され、チェビシェフ多項式展開では、各間隔。IEEE演算を使用したドメイン[0,30]の相対誤差は、RMSが1.4e-16（n = 30000）でピークが5.8e-16であると文書化&lt;a href=&quot;#rfd38a370b188-3&quot; id=&quot;id3&quot;&gt;[3]さ&lt;/a&gt;れています。</target>
        </trans-unit>
        <trans-unit id="9d53c78c1f4b5630c6b07b51b68a31292300c983" translate="yes" xml:space="preserve">
          <source>We use the same Fortran 77 code as in previous example but now we&amp;rsquo;ll pretend that F2PY was not able to guess the signatures of call-back arguments correctly. First, we create an initial signature file &lt;code&gt;callback2.pyf&lt;/code&gt; using F2PY:</source>
          <target state="translated">前の例と同じFortran77コードを使用しますが、F2PYがコールバック引数の署名を正しく推測できなかったと仮定します。まず、F2PYを使用して初期署名ファイル &lt;code&gt;callback2.pyf&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="a0523fb6c3b4aea424494446d21b54e60300c1ae" translate="yes" xml:space="preserve">
          <source>We wait until this point to push the tag because it is public and should not be changed after it has been pushed.</source>
          <target state="translated">タグは公開されているので、プッシュした後に変更してはいけないので、ここまで待ってからプッシュします。</target>
        </trans-unit>
        <trans-unit id="c9afbb264decb0b7e5bd769fa476b27d49621056" translate="yes" xml:space="preserve">
          <source>We will deal with the domain and window when we get to fitting, for the moment we ignore them and run through the basic algebraic and arithmetic operations.</source>
          <target state="translated">領域と窓については、フィッティングに入ってから扱いますが、当面はそれらを無視して、基本的な代数演算と算術演算を実行します。</target>
        </trans-unit>
        <trans-unit id="4c1bac40e83eb84eced242b32b6de4090c9d63d5" translate="yes" xml:space="preserve">
          <source>We will investigate and respond to all complaints. The NumPy Code of Conduct Committee and the NumPy Steering Committee (if involved) will protect the identity of the reporter, and treat the content of complaints as confidential (unless the reporter agrees otherwise).</source>
          <target state="translated">すべての苦情について調査し、対応します。NumPy行動規範委員会およびNumPy運営委員会(関与している場合)は、報告者の身元を保護し、苦情の内容を秘密として扱います(報告者の同意がない限り)。</target>
        </trans-unit>
        <trans-unit id="a83f39578a9a665e3a205bff08ec0d259c697975" translate="yes" xml:space="preserve">
          <source>We will use NumPy&amp;rsquo;s linear algebra module, &lt;a href=&quot;../reference/routines.linalg#module-numpy.linalg&quot;&gt;&lt;code&gt;numpy.linalg&lt;/code&gt;&lt;/a&gt;, to perform the operations in this tutorial. Most of the linear algebra functions in this module can also be found in &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/linalg.html#module-scipy.linalg&quot;&gt;&lt;code&gt;scipy.linalg&lt;/code&gt;&lt;/a&gt;, and users are encouraged to use the &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/index.html#module-scipy&quot;&gt;&lt;code&gt;scipy&lt;/code&gt;&lt;/a&gt; module for real-world applications. However, it is currently not possible to apply linear algebra operations to n-dimensional arrays using the &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/linalg.html#module-scipy.linalg&quot;&gt;&lt;code&gt;scipy.linalg&lt;/code&gt;&lt;/a&gt; module. For more information on this, check the &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/tutorial/linalg.html&quot;&gt;scipy.linalg Reference&lt;/a&gt;.</source>
          <target state="translated">このチュートリアルの操作を実行するには、NumPyの線形代数モジュール&lt;a href=&quot;../reference/routines.linalg#module-numpy.linalg&quot;&gt; &lt;code&gt;numpy.linalg&lt;/code&gt; &lt;/a&gt;を使用します。このモジュールのほとんどの線形代数関数は&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/linalg.html#module-scipy.linalg&quot;&gt; &lt;code&gt;scipy.linalg&lt;/code&gt; &lt;/a&gt;にもあり、ユーザーは実際のアプリケーションに&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/index.html#module-scipy&quot;&gt; &lt;code&gt;scipy&lt;/code&gt; &lt;/a&gt;モジュールを使用することをお勧めします。ただし、現在、&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/linalg.html#module-scipy.linalg&quot;&gt; &lt;code&gt;scipy.linalg&lt;/code&gt; &lt;/a&gt;モジュールを使用して線形代数演算をn次元配列に適用することはできません。これについての詳細は、&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/tutorial/linalg.html&quot;&gt;scipy.linalgリファレンスを&lt;/a&gt;確認してください。</target>
        </trans-unit>
        <trans-unit id="82a72786c4fe5d6bfb5f753a25b0cbc3ef629d6d" translate="yes" xml:space="preserve">
          <source>We wish to mark the fourth entry as invalid. The easiest is to create a masked array:</source>
          <target state="translated">4 番目のエントリを無効なものとしてマークしたいと思います。最も簡単なのは、マスクされた配列を作成することです。</target>
        </trans-unit>
        <trans-unit id="2678a6cb2f01328bc5e5792424e05e77b5265e7c" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll do a simple outer product, placing the dimensions of the first operand before the dimensions of the second operand. The &lt;code&gt;op_axes&lt;/code&gt; parameter needs one list of axes for each operand, and provides a mapping from the iterator&amp;rsquo;s axes to the axes of the operand.</source>
          <target state="translated">最初のオペランドの次元を2番目のオペランドの次元の前に配置して、単純な外積を行います。 &lt;code&gt;op_axes&lt;/code&gt; のパラメータは、各オペランドのための軸の1つのリストを必要とし、オペランドの軸にイテレータの軸からのマッピングを提供します。</target>
        </trans-unit>
        <trans-unit id="ced2186a63444cfbd458cebaed4de6214b500394" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll show how this works by creating a function &lt;a href=&quot;generated/numpy.square#numpy.square&quot;&gt;&lt;code&gt;square&lt;/code&gt;&lt;/a&gt; which squares its input. Let&amp;rsquo;s start with a minimal function definition excluding &amp;lsquo;out&amp;rsquo; parameter support.</source>
          <target state="translated">入力を二乗する関数&lt;a href=&quot;generated/numpy.square#numpy.square&quot;&gt; &lt;code&gt;square&lt;/code&gt; &lt;/a&gt;を作成することにより、これがどのように機能するかを示します。「out」パラメーターのサポートを除いた最小限の関数定義から始めましょう。</target>
        </trans-unit>
        <trans-unit id="0d014927573cadb3b0b374c9809c25adaa8d709f" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve seen that 13 is represented by &lt;code&gt;00001101&lt;/code&gt;. The invert or bit-wise NOT of 13 is then:</source>
          <target state="translated">13は &lt;code&gt;00001101&lt;/code&gt; で表されることがわかりました。13の反転またはビット単位のNOTは次のようになります。</target>
        </trans-unit>
        <trans-unit id="08e02d58d5e7e09402e352c84d20a516011f20f4" translate="yes" xml:space="preserve">
          <source>Website design and development</source>
          <target state="translated">ウェブサイトのデザインと開発</target>
        </trans-unit>
        <trans-unit id="9f5117721c82b02552e432ea3720cde40d7059ad" translate="yes" xml:space="preserve">
          <source>Weight function of the Hermite polynomials.</source>
          <target state="translated">エルミート多項式の重み関数。</target>
        </trans-unit>
        <trans-unit id="95800a204e1bbd4903f4870d8343853257206077" translate="yes" xml:space="preserve">
          <source>Weight function of the Hermite_e polynomials.</source>
          <target state="translated">Hermite_e多項式の重み関数。</target>
        </trans-unit>
        <trans-unit id="5f860b19432a865263496fdce430b1e33571bfe5" translate="yes" xml:space="preserve">
          <source>Weight function of the Laguerre polynomials.</source>
          <target state="translated">ラゲール多項式の重み関数。</target>
        </trans-unit>
        <trans-unit id="79be08f88c623301ce3bc873b7c9affda9625a90" translate="yes" xml:space="preserve">
          <source>Weight function of the Legendre polynomials.</source>
          <target state="translated">レジェンドレ多項式の重み関数。</target>
        </trans-unit>
        <trans-unit id="c74e4e7c5caf95682fb65872b5814741f06c7fac" translate="yes" xml:space="preserve">
          <source>Weighted average</source>
          <target state="translated">加重平均</target>
        </trans-unit>
        <trans-unit id="d8f6b85e664320ad22c47352d13059c9a94e57ff" translate="yes" xml:space="preserve">
          <source>Weighted average.</source>
          <target state="translated">加重平均。</target>
        </trans-unit>
        <trans-unit id="50616113e0953b16858a840423f52798108ba636" translate="yes" xml:space="preserve">
          <source>Weights to apply to the y-coordinates of the sample points. For gaussian uncertainties, use 1/sigma (not 1/sigma**2).</source>
          <target state="translated">サンプル点のy座標に適用される重み.ガウシアン不確かさの場合は,1/sigma(1/sigma**2ではなく)を使用する.</target>
        </trans-unit>
        <trans-unit id="5a7070233023bbad210855f921220f6a37969ec7" translate="yes" xml:space="preserve">
          <source>Weights, array of the same shape as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">重み、 &lt;code&gt;x&lt;/code&gt; と同じ形状の配列。</target>
        </trans-unit>
        <trans-unit id="946476c654c11a5e92f8b55850bb98a1263ad96b" translate="yes" xml:space="preserve">
          <source>Weights. If not None the contribution of each point &lt;code&gt;(x[i],y[i])&lt;/code&gt; to the fit is weighted by &lt;code&gt;w[i]&lt;/code&gt;. Ideally the weights are chosen so that the errors of the products &lt;code&gt;w[i]*y[i]&lt;/code&gt; all have the same variance. The default value is None.</source>
          <target state="translated">重み。Noneでない場合、フィットへの各ポイント &lt;code&gt;(x[i],y[i])&lt;/code&gt; の寄与は &lt;code&gt;w[i]&lt;/code&gt; によって重み付けされます。理想的には、積 &lt;code&gt;w[i]*y[i]&lt;/code&gt; の誤差がすべて同じ分散になるように重みが選択されます。デフォルト値はNoneです。</target>
        </trans-unit>
        <trans-unit id="1c25ee55e973a0ac3876804d2f28cc0929f53254" translate="yes" xml:space="preserve">
          <source>Weights. If not None, the contribution of each point &lt;code&gt;(x[i],y[i])&lt;/code&gt; to the fit is weighted by &lt;code&gt;w[i]&lt;/code&gt;. Ideally the weights are chosen so that the errors of the products &lt;code&gt;w[i]*y[i]&lt;/code&gt; all have the same variance. The default value is None.</source>
          <target state="translated">重み。Noneでない場合、フィットに対する各ポイント &lt;code&gt;(x[i],y[i])&lt;/code&gt; の寄与は &lt;code&gt;w[i]&lt;/code&gt; によって重み付けされます。理想的には、積 &lt;code&gt;w[i]*y[i]&lt;/code&gt; の誤差がすべて同じ分散になるように重みが選択されます。デフォルト値はNoneです。</target>
        </trans-unit>
        <trans-unit id="890907bf4b6e9a3c2721945116f4521c292ba997" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Binomial Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/BinomialDistribution.html&quot;&gt;http://mathworld.wolfram.com/BinomialDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「Binomial Distribution」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/BinomialDistribution.html&quot;&gt;http://mathworld.wolfram.com/BinomialDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44532eacfd8a477fb8d811692e1a730faf373cda" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Cauchy Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/CauchyDistribution.html&quot;&gt;http://mathworld.wolfram.com/CauchyDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「コーシー分布」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/CauchyDistribution.html&quot;&gt;http://mathworld.wolfram.com/CauchyDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce6b4d0490f5c6c29f7bd660e93014a010601e88" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Gamma Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/GammaDistribution.html&quot;&gt;http://mathworld.wolfram.com/GammaDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「ガンマ分布」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/GammaDistribution.html&quot;&gt;http://mathworld.wolfram.com/GammaDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="250b4512032938435df06c099254026086b0b46d" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Hypergeometric Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/HypergeometricDistribution.html&quot;&gt;http://mathworld.wolfram.com/HypergeometricDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「超幾何分布」MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/HypergeometricDistribution.html&quot;&gt;http://mathworld.wolfram.com/HypergeometricDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="403ee22c6c9f5dfb6128b5015952af83dc7fe1f5" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Laplace Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/LaplaceDistribution.html&quot;&gt;http://mathworld.wolfram.com/LaplaceDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「Laplace Distribution」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/LaplaceDistribution.html&quot;&gt;http://mathworld.wolfram.com/LaplaceDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c85ee5175b40c6661962e1c4dcdc7232b8e5568a" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Logistic Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/LogisticDistribution.html&quot;&gt;http://mathworld.wolfram.com/LogisticDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「ロジスティクス配布」MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/LogisticDistribution.html&quot;&gt;http://mathworld.wolfram.com/LogisticDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1938577c4f79d7fadb65a22f0b9b9cba0e6904e" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Negative Binomial Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/NegativeBinomialDistribution.html&quot;&gt;http://mathworld.wolfram.com/NegativeBinomialDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「負の二項分布」MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/NegativeBinomialDistribution.html&quot;&gt;http://mathworld.wolfram.com/NegativeBinomialDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed9cdcffdd5a34db501b8269560f163da34bcfda" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Noncentral F-Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/NoncentralF-Distribution.html&quot;&gt;http://mathworld.wolfram.com/NoncentralF-Distribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「非中心F分布」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/NoncentralF-Distribution.html&quot;&gt;http://mathworld.wolfram.com/NoncentralF-Distribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6786c23a16b57cae22a2a2fe8c5eef583bfac0cc" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Poisson Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/PoissonDistribution.html&quot;&gt;http://mathworld.wolfram.com/PoissonDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「ポアソン分布」MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/PoissonDistribution.html&quot;&gt;http://mathworld.wolfram.com/PoissonDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87ff1415ce102e6420c0e0f61ef322d348a5f507" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Sinc Function.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/SincFunction.html&quot;&gt;http://mathworld.wolfram.com/SincFunction.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「シンク関数」MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/SincFunction.html&quot;&gt;http://mathworld.wolfram.com/SincFunction.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d56f530182243e33b481a1e9052be8e6b37f719d" translate="yes" xml:space="preserve">
          <source>Welcome to NumPy!</source>
          <target state="translated">NumPyへようこそ</target>
        </trans-unit>
        <trans-unit id="abaf546091bcd48cd855fade4a2162266fa33ab0" translate="yes" xml:space="preserve">
          <source>Welcome to the absolute beginner&amp;rsquo;s guide to NumPy! If you have comments or suggestions, please don&amp;rsquo;t hesitate to reach out!</source>
          <target state="translated">NumPyの完全な初心者向けガイドへようこそ！コメントや提案があれば、遠慮なく連絡してください！</target>
        </trans-unit>
        <trans-unit id="97cc607ac7fcfde11c85a5379ce211093f48fda9" translate="yes" xml:space="preserve">
          <source>Welcome! This is the documentation for NumPy 1.19.0, last updated Jun 29, 2020.</source>
          <target state="translated">いらっしゃいませ! これはNumPy 1.19.0のドキュメントで、最終更新は2020年6月29日です。</target>
        </trans-unit>
        <trans-unit id="3fef717821661f9806ec19067704e1d37a6e1a47" translate="yes" xml:space="preserve">
          <source>What are the least-squares-best &lt;code&gt;m&lt;/code&gt; and &lt;code&gt;y0&lt;/code&gt; in &lt;code&gt;y = y0 + mx&lt;/code&gt; for the following data: {(0,1), (1,0), (1,2), (2,1)}. (Graph the points and you&amp;rsquo;ll see that it should be y0 = 0, m = 1.) The answer is provided by solving the over-determined matrix equation &lt;code&gt;Ax = b&lt;/code&gt;, where:</source>
          <target state="translated">次のデータの &lt;code&gt;y = y0 + mx&lt;/code&gt; 最小二乗最適 &lt;code&gt;m&lt;/code&gt; および &lt;code&gt;y0&lt;/code&gt; は何ですか：{（0,1）、（1,0）、（1,2）、（2,1）}。（ポイントをグラフ化すると、y0 = 0、m = 1になるはずです。）解は、過剰決定された行列方程式 &lt;code&gt;Ax = b&lt;/code&gt; 解くことによって得られます。ここで、</target>
        </trans-unit>
        <trans-unit id="3e9b892da0c44e54a5a3d94ba212b74404ec1950" translate="yes" xml:space="preserve">
          <source>What can be converted to a data-type object is described below:</source>
          <target state="translated">データ型オブジェクトに変換できるものは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7f1eadc1a60d1383bbd27a5874b7f7b346ec84b4" translate="yes" xml:space="preserve">
          <source>What encoding to use when reading Python 2 strings. Only useful when loading Python 2 generated pickled files in Python 3, which includes npy/npz files containing object arrays. Values other than &amp;lsquo;latin1&amp;rsquo;, &amp;lsquo;ASCII&amp;rsquo;, and &amp;lsquo;bytes&amp;rsquo; are not allowed, as they can corrupt numerical data. Default: &amp;lsquo;ASCII&amp;rsquo;</source>
          <target state="translated">Python 2文字列を読み取るときに使用するエンコーディング。オブジェクト配列を含むnpy / npzファイルを含む、Python 2で生成された漬物ファイルをPython 3にロードする場合にのみ役立ちます。「latin1」、「ASCII」、および「バイト」以外の値は、数値データを破壊する可能性があるため許可されません。デフォルト： 'ASCII'</target>
        </trans-unit>
        <trans-unit id="a414efd43aeae99e0f66cba2afec4195fe86ff0f" translate="yes" xml:space="preserve">
          <source>What happened.</source>
          <target state="translated">何があったの?</target>
        </trans-unit>
        <trans-unit id="d026aa92cb632a0008d65ec665e66cb82db19d44" translate="yes" xml:space="preserve">
          <source>What is NumPy?</source>
          <target state="translated">NumPyとは?</target>
        </trans-unit>
        <trans-unit id="1e1fa581e9e916507b4446a529a092d8e86437db" translate="yes" xml:space="preserve">
          <source>What is a masked array?</source>
          <target state="translated">マスクされた配列とは何ですか?</target>
        </trans-unit>
        <trans-unit id="9751e6648cb276739f841dae292a17853fcae611" translate="yes" xml:space="preserve">
          <source>What is an array?</source>
          <target state="translated">配列とは何ですか?</target>
        </trans-unit>
        <trans-unit id="437c59796bebb67cae1bb453196d12e5dabd418f" translate="yes" xml:space="preserve">
          <source>What is compared are values, not types. So an int (1) and an array of length one can evaluate as True:</source>
          <target state="translated">比較されるのは値であって型ではありません。つまり、int (1)と長さ 1 の配列は True と評価できます。</target>
        </trans-unit>
        <trans-unit id="0ad7f91a8e7927b564b105b1d3081b63dcc31aef" translate="yes" xml:space="preserve">
          <source>What is described below is a recommended workflow with Git.</source>
          <target state="translated">以下に説明するのは、Gitを使ったおすすめのワークフローです。</target>
        </trans-unit>
        <trans-unit id="b5bea1d13da31e58211ad4c35c1a02b82b3ae53f" translate="yes" xml:space="preserve">
          <source>What is released</source>
          <target state="translated">リリースされたもの</target>
        </trans-unit>
        <trans-unit id="ed5c56f4637ad63b06ae7f91c4fda9c76b610d6b" translate="yes" xml:space="preserve">
          <source>What is tested is whether the input has a non-zero imaginary part, not if the input type is complex.</source>
          <target state="translated">テストされるのは、入力がゼロではない虚部を持つかどうかであって、入力タイプが複素数であるかどうかではありません。</target>
        </trans-unit>
        <trans-unit id="010a5d0834f679e03164332d6d50425424fc97f8" translate="yes" xml:space="preserve">
          <source>What is the amortization schedule for a 1 year loan of $2500 at 8.24% interest per year compounded monthly?</source>
          <target state="translated">2500 ドルの 1 年間のローンの償却スケジュールは何ですか?</target>
        </trans-unit>
        <trans-unit id="59aacf2a72313a7cde0de3da40cb764e30627fa7" translate="yes" xml:space="preserve">
          <source>What is the future value after 10 years of saving $100 now, with an additional monthly savings of $100. Assume the interest rate is 5% (annually) compounded monthly?</source>
          <target state="translated">今100ドルを貯金して、毎月100ドルを追加で貯めた場合の10年後の将来価値はいくらになるでしょうか。金利は5%(年率)で毎月複利だとしますか?</target>
        </trans-unit>
        <trans-unit id="68f86a620521000717f405763a7c2c87aeacd919" translate="yes" xml:space="preserve">
          <source>What is the monthly payment needed to pay off a $200,000 loan in 15 years at an annual interest rate of 7.5%?</source>
          <target state="translated">年利7.5%で20万ドルのローンを15年で完済するのに必要な月々の支払い額は?</target>
        </trans-unit>
        <trans-unit id="bd55b3638089456ad2fcd33f8ddb002a9ff2afef" translate="yes" xml:space="preserve">
          <source>What is the present value (e.g., the initial investment) of an investment that needs to total $15692.93 after 10 years of saving $100 every month? Assume the interest rate is 5% (annually) compounded monthly.</source>
          <target state="translated">毎月100ドルを貯金して10年後に合計15692.93ドルになる必要がある投資の現在価値(初期投資など)はどれくらいでしょうか?金利を5%(年1回)毎月複利で計算したとします。</target>
        </trans-unit>
        <trans-unit id="80bbcabaec75450b003887ef27bbf523c85b5a9f" translate="yes" xml:space="preserve">
          <source>What is the right way to index multi-dimensional arrays? Before you jump to conclusions about the one and true way to index multi-dimensional arrays, it pays to understand why this is a confusing issue. This section will try to explain in detail how numpy indexing works and why we adopt the convention we do for images, and when it may be appropriate to adopt other conventions.</source>
          <target state="translated">多次元配列をインデックス化する正しい方法とは?多次元配列のインデックスを作成する方法について結論を急ぐ前に、なぜこれが混乱を招く問題なのかを理解しておく必要があります。この節では、numpy のインデックス付けがどのように動作するのか、また、なぜ画像に対してこのような規則を採用しているのか、また、他の規則を採用することが適切な場合にはどのような場合があるのかを詳細に説明します。</target>
        </trans-unit>
        <trans-unit id="c8f9b6ad9828683b0bae9bbc812741ce15ef2e1e" translate="yes" xml:space="preserve">
          <source>What makes this work so well is that &lt;code&gt;predictions&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; can contain one or a thousand values. They only need to be the same size.</source>
          <target state="translated">これをうまく機能させるのは、 &lt;code&gt;predictions&lt;/code&gt; と &lt;code&gt;labels&lt;/code&gt; に1つまたは1000の値を含めることができることです。それらは同じサイズである必要があります。</target>
        </trans-unit>
        <trans-unit id="e27b294bbb4cb3c1e3ee88822cc65d21f2416881" translate="yes" xml:space="preserve">
          <source>What results is the construction of a new array where each value of the index array selects one row from the array being indexed and the resultant array has the resulting shape (number of index elements, size of row).</source>
          <target state="translated">その結果,インデックス配列の各値がインデックス化されている配列から1行を選択し,結果として得られる配列の形状(インデックス要素の数,行のサイズ)を持つ新しい配列を構築することができます.</target>
        </trans-unit>
        <trans-unit id="0bd771107f7afe976fc592b463f0e0c3505ed432" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s New or Different</source>
          <target state="translated">新機能または相違点</target>
        </trans-unit>
        <trans-unit id="2feeca88895960783f7c2e153b1e528ad57119f7" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s the difference between a Python list and a NumPy array?</source>
          <target state="translated">PythonリストとNumPy配列の違いは何ですか？</target>
        </trans-unit>
        <trans-unit id="9f2949fbd884fd2e87977bc6442d7541c249e9bc" translate="yes" xml:space="preserve">
          <source>What’s New or Different</source>
          <target state="translated">何が新しいのか、それとも違うのか</target>
        </trans-unit>
        <trans-unit id="7c1df74199c25c42832661082d6ca6ac9e56b175" translate="yes" xml:space="preserve">
          <source>Wheeler, D. A., E. Rathke, and R. Weir (Eds.) (2009, May). Open Document Format for Office Applications (OpenDocument)v1.2, Part 2: Recalculated Formula (OpenFormula) Format - Annotated Version, Pre-Draft 12. Organization for the Advancement of Structured Information Standards (OASIS). Billerica, MA, USA. [ODT Document]. Available: &lt;a href=&quot;http://www.oasis-open.org/committees/documents.php&quot;&gt;http://www.oasis-open.org/committees/documents.php&lt;/a&gt; ?wg_abbrev=office-formulaOpenDocument-formula-20090508.odt</source>
          <target state="translated">Wheeler、DA、E。Rathke、およびR. Weir（編）（2009年5月）。 Officeアプリケーション用のオープンドキュメント形式（OpenDocument）v1.2、パート2：再計算された式（OpenFormula）形式-注釈付きバージョン、草案前12。構造化情報標準（OASIS）の進歩のための組織。ビレリカ、マサチューセッツ、米国。 [ODTドキュメント]。利用可能：&lt;a href=&quot;http://www.oasis-open.org/committees/documents.php&quot;&gt;http&lt;/a&gt; : //www.oasis-open.org/committees/documents.php？wg_abbrev = office-formulaOpenDocument-formula-20090508.odt</target>
        </trans-unit>
        <trans-unit id="030c83d2119f52206dbf3733046b420a1749a0e1" translate="yes" xml:space="preserve">
          <source>Wheeler, D. A., E. Rathke, and R. Weir (Eds.) (2009, May). Open Document Format for Office Applications (OpenDocument)v1.2, Part 2: Recalculated Formula (OpenFormula) Format - Annotated Version, Pre-Draft 12. Organization for the Advancement of Structured Information Standards (OASIS). Billerica, MA, USA. [ODT Document]. Available: &lt;a href=&quot;http://www.oasis-open.org/committees/documents.php?wg_abbrev=office-formula&quot;&gt;http://www.oasis-open.org/committees/documents.php?wg_abbrev=office-formula&lt;/a&gt; OpenDocument-formula-20090508.odt</source>
          <target state="translated">Wheeler、DA、E。Rathke、およびR. Weir（編）（2009年5月）。Officeアプリケーション用のオープンドキュメント形式（OpenDocument）v1.2、パート2：再計算された式（OpenFormula）形式-注釈付きバージョン、草案前12。構造化情報標準（OASIS）の進歩のための組織。ビレリカ、マサチューセッツ、米国。[ODTドキュメント]。利用可能：&lt;a href=&quot;http://www.oasis-open.org/committees/documents.php?wg_abbrev=office-formula&quot;&gt;http&lt;/a&gt; : //www.oasis-open.org/committees/documents.php? wg_abbrev=office-formula OpenDocument-formula-20090508.odt</target>
        </trans-unit>
        <trans-unit id="45e561a630c53e04980638c8d4e86ae0087886be" translate="yes" xml:space="preserve">
          <source>Wheels</source>
          <target state="translated">Wheels</target>
        </trans-unit>
        <trans-unit id="28b30ef805c7fb044e119b47e7ac08078b5b70cf" translate="yes" xml:space="preserve">
          <source>When &amp;lsquo;decimals&amp;rsquo; is negative, it specifies the number of positions to the left of the decimal point. The real and imaginary parts of complex numbers are rounded separately. Nothing is done if the array is not of float type and &amp;lsquo;decimals&amp;rsquo; is greater than or equal to 0.</source>
          <target state="translated">'decimals'が負の場合は、小数点の左側の桁数を指定します。複素数の実数部と虚数部は別々に丸められます。配列がfloat型ではなく、 'decimals'が0以上の場合、何も行われません。</target>
        </trans-unit>
        <trans-unit id="f209cff1399437b00b7cd0ee8730d177efc65293" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt;&lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt;&lt;/a&gt; is specified, the typical inner loop construct is as follows.</source>
          <target state="translated">場合&lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt; &lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt; が&lt;/a&gt;指定され、以下のように、典型的なインナーループ構造です。</target>
        </trans-unit>
        <trans-unit id="e3bd2b595c2ff9c9cbf3b48defe560bc708bb864" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#numpy.ma.MaskedArray.tofile&quot;&gt;&lt;code&gt;tofile&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">&lt;a href=&quot;#numpy.ma.MaskedArray.tofile&quot;&gt; &lt;code&gt;tofile&lt;/code&gt; &lt;/a&gt;が呼び出されたとき。</target>
        </trans-unit>
        <trans-unit id="62e74c933581584a63ff5ff51eb96f98ecf99dc0" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#numpy.ma.masked_array.tofile&quot;&gt;&lt;code&gt;tofile&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">&lt;a href=&quot;#numpy.ma.masked_array.tofile&quot;&gt; &lt;code&gt;tofile&lt;/code&gt; &lt;/a&gt;が呼び出されたとき。</target>
        </trans-unit>
        <trans-unit id="0d17005044d622bf07127624dd5d1775dbe22cd5" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; is not a valid dtype for a structured array.</source>
          <target state="translated">&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;が構造化配列の有効なdtypeではない場合。</target>
        </trans-unit>
        <trans-unit id="105e60976ea8fbfb90203db8ab4a0a320369170d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;A = rfft(a)&lt;/code&gt; and fs is the sampling frequency, &lt;code&gt;A[0]&lt;/code&gt; contains the zero-frequency term 0*fs, which is real due to Hermitian symmetry.</source>
          <target state="translated">場合 &lt;code&gt;A = rfft(a)&lt;/code&gt; とfsはサンプリング周波数であり、 &lt;code&gt;A[0]&lt;/code&gt; エルミート対称性に起因実数であり、ゼロ周波数項0 * FSを含んでいます。</target>
        </trans-unit>
        <trans-unit id="fb065328be54e2c3569cb5f58bbc8287bcb1fb7d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;PyArray_ResolveWritebackIfCopy&lt;/code&gt; is called, the array pointed to by base will be updated with the contents of this array.</source>
          <target state="translated">とき &lt;code&gt;PyArray_ResolveWritebackIfCopy&lt;/code&gt; が呼ばれ、ベースによって指される配列は、この配列の内容で更新されます。</target>
        </trans-unit>
        <trans-unit id="6087c2287fac970fe48c994c66e9668908c28aae" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a = 1&lt;/code&gt;, the Weibull distribution reduces to the exponential distribution.</source>
          <target state="translated">場合 &lt;code&gt;a = 1&lt;/code&gt; 、ワイブル分布は指数分布に帰着します。</target>
        </trans-unit>
        <trans-unit id="3234eec63d682a68b39f821bda537d5249018389" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is a 2D array, it is factorized as &lt;code&gt;u @ np.diag(s) @ vh
= (u * s) @ vh&lt;/code&gt;, where &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;vh&lt;/code&gt; are 2D unitary arrays and &lt;code&gt;s&lt;/code&gt; is a 1D array of &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s singular values. When &lt;code&gt;a&lt;/code&gt; is higher-dimensional, SVD is applied in stacked mode as explained below.</source>
          <target state="translated">場合2次元アレイである、それは次のように因数分解された &lt;code&gt;u @ np.diag(s) @ vh = (u * s) @ vh&lt;/code&gt; 、ここで &lt;code&gt;u&lt;/code&gt; および &lt;code&gt;vh&lt;/code&gt; 2D一体配列であり、 &lt;code&gt;s&lt;/code&gt; はの1Dアレイでの特異値。ときに、より高い次元で以下に説明するように、SVDを積層モードで適用されます。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40bcbe29998f385e3a1059191be0f61338a8c763" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is a structured array, this argument specifies which fields to compare first, second, and so on. This list does not need to include all of the fields.</source>
          <target state="translated">構造アレイであり、この引数は、第一比較するフィールドを指定し、第二、など。このリストには、すべてのフィールドを含める必要はありません。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c171b92b4bddf9c8ebd2e75ee317f0b5fe3e94eb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is an array with fields defined, this argument specifies which fields to compare first, second, etc. A single field can be specified as a string, and not all fields need be specified, but unspecified fields will still be used, in the order in which they come up in the dtype, to break ties.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がフィールドが定義された配列の場合、この引数は最初に比較するフィールド、2番目に比較するフィールドなどを指定します。単一のフィールドを文字列として指定でき、すべてのフィールドを指定する必要はありませんが、指定されていないフィールドは引き続き使用されます。関係を断つために、dtypeに現れる順序。</target>
        </trans-unit>
        <trans-unit id="78f75090c501ced3a2b9ede8c30345a037a7c202" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is an array with fields defined, this argument specifies which fields to compare first, second, etc. A single field can be specified as a string, and not all fields need to be specified, but unspecified fields will still be used, in the order in which they come up in the dtype, to break ties.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がフィールドが定義された配列の場合、この引数は最初に比較するフィールド、2番目に比較するフィールドなどを指定します。単一のフィールドを文字列として指定でき、すべてのフィールドを指定する必要はありませんが、未指定のフィールドは引き続き使用されます。関係を断つために、dtypeに現れる順序。</target>
        </trans-unit>
        <trans-unit id="2cd3e98c67109375f859806b9beef061a4ef694a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is an array with fields defined, this argument specifies which fields to compare first, second, etc. A single field can be specified as a string. Not all fields need be specified, but unspecified fields will still be used, in the order in which they come up in the dtype, to break ties.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がフィールドが定義された配列の場合、この引数は最初に比較するフィールド、2番目に比較するフィールドなどを指定します。単一のフィールドを文字列として指定できます。すべてのフィールドを指定する必要はありませんが、未指定のフィールドは、dtypeで出現する順序で引き続き使用され、結合を解除します。</target>
        </trans-unit>
        <trans-unit id="b2ce72a40e12e2d7dda3e8c60930788493a39d27" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is an array with fields defined, this argument specifies which fields to compare first, second, etc. Not all fields need be specified.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がフィールドが定義された配列の場合、この引数は最初に比較するフィールド、2番目に比較するフィールドなどを指定します。すべてのフィールドを指定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="ffd5f3ded394e20ded56e4169ae0a349c97ccd8c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;arange&lt;/code&gt; is used with floating point arguments, it is generally not possible to predict the number of elements obtained, due to the finite floating point precision. For this reason, it is usually better to use the function &lt;code&gt;linspace&lt;/code&gt; that receives as an argument the number of elements that we want, instead of the step:</source>
          <target state="translated">&lt;code&gt;arange&lt;/code&gt; を浮動小数点引数とともに使用する場合、浮動小数点の精度が有限であるため、通常、取得される要素の数を予測することはできません。このため、通常は、次の手順ではなく、必要な数の要素を引数として受け取る関数 &lt;code&gt;linspace&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d9212747ec3985b5dbc30be906a85b9cd4a58814" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;axes&lt;/code&gt; is integer_like, the sequence for evaluation will be: first the -Nth axis in &lt;code&gt;a&lt;/code&gt; and 0th axis in &lt;code&gt;b&lt;/code&gt;, and the -1th axis in &lt;code&gt;a&lt;/code&gt; and Nth axis in &lt;code&gt;b&lt;/code&gt; last.</source>
          <target state="translated">ときに &lt;code&gt;axes&lt;/code&gt; 最初に-Nth軸：integer_likeで、評価のための配列は、あろうとで第0軸 &lt;code&gt;b&lt;/code&gt; とで-1th軸と第Nのを軸 &lt;code&gt;b&lt;/code&gt; 最後。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0e5c01c245527cc066079729775f892bf5a93e0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;axis&lt;/code&gt; is specified, &lt;code&gt;values&lt;/code&gt; must have the correct shape.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; を指定する場合、 &lt;code&gt;values&lt;/code&gt; は正しい形状でなければなりません。</target>
        </trans-unit>
        <trans-unit id="91b3e386bc1245c3b6fdcb369364554e159e0d4a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;callstatement&lt;/code&gt; statement is used then F2PY may not generate proper prototypes for Fortran/C functions (because &lt;code&gt;&amp;lt;C-expr&amp;gt;&lt;/code&gt; may contain any function calls and F2PY has no way to determine what should be the proper prototype). With this statement you can explicitly specify the arguments of the corresponding prototype:</source>
          <target state="translated">場合 &lt;code&gt;callstatement&lt;/code&gt; のステートメントは、その後使用されているF2PYは、Fortran / C関数の適切なプロトタイプを生成しないかもしれない（なぜなら &lt;code&gt;&amp;lt;C-expr&amp;gt;&lt;/code&gt; 任意の関数呼び出しを含み、F2PYが適切なプロトタイプであるべきかを決定する方法を持っていなくてもよいです）。このステートメントを使用すると、対応するプロトタイプの引数を明示的に指定できます。</target>
        </trans-unit>
        <trans-unit id="3a3f207a74aef7083c1eb02bef5c64216a30b6fc" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;condition&lt;/code&gt; or &lt;code&gt;a&lt;/code&gt; contain masked values.</source>
          <target state="translated">とき &lt;code&gt;condition&lt;/code&gt; やマスクされた値が含まれています。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3581744e88f263225956bbed713e5c867c6bf74" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;copy=False&lt;/code&gt; and a copy is made for other reasons, the result is the same as if &lt;code&gt;copy=True&lt;/code&gt;, with some exceptions for &lt;code&gt;A&lt;/code&gt;, see the Notes section. The default order is &amp;lsquo;K&amp;rsquo;.</source>
          <target state="translated">ときに &lt;code&gt;copy=False&lt;/code&gt; とコピーが他の理由のために作られているかのように、結果は同じである &lt;code&gt;copy=True&lt;/code&gt; 、のためにいくつかの例外を除いて &lt;code&gt;A&lt;/code&gt; 、ノートのセクションを参照してください。デフォルトの順序は「K」です。</target>
        </trans-unit>
        <trans-unit id="2e1ae66e35c85b2fe34abaa8efd6e58beb3b3355" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;df&lt;/code&gt; &amp;lt;= 0 or when an inappropriate &lt;code&gt;size&lt;/code&gt; (e.g. &lt;code&gt;size=-1&lt;/code&gt;) is given.</source>
          <target state="translated">場合 &lt;code&gt;df&lt;/code&gt; &amp;lt;= 0の場合、または不適切な &lt;code&gt;size&lt;/code&gt; （例えば &lt;code&gt;size=-1&lt;/code&gt; ）が与えられます。</target>
        </trans-unit>
        <trans-unit id="6647686e555ae4abe6c033723e872acfb1bd3153" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;df&lt;/code&gt; independent random variables, each with standard normal distributions (mean 0, variance 1), are squared and summed, the resulting distribution is chi-square (see Notes). This distribution is often used in hypothesis testing.</source>
          <target state="translated">場合 &lt;code&gt;df&lt;/code&gt; を独立確率変数、標準正規分布（平均0、分散1）とそれぞれ、二乗と合計され、得られた分布は（注を参照）カイ二乗です。この分布は、仮説検定でよく使用されます。</target>
        </trans-unit>
        <trans-unit id="ef591edbbf8bac21872c8b29394eee7a7391694c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;dtype=None&lt;/code&gt;, the type of each column is determined iteratively from its data. We start by checking whether a string can be converted to a boolean (that is, if the string matches &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; in lower cases); then whether it can be converted to an integer, then to a float, then to a complex and eventually to a string. This behavior may be changed by modifying the default mapper of the &lt;code&gt;StringConverter&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;dtype=None&lt;/code&gt; の場合、各列のタイプはそのデータから繰り返し決定されます。文字列をブール値に変換できるかどうか（つまり、文字列が小文字で &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; に一致するかどうか）を確認することから始めます。次に、整数、浮動小数点数、複素数、最終的には文字列に変換できるかどうか。この動作は、 &lt;code&gt;StringConverter&lt;/code&gt; クラスのデフォルトのマッパーを変更することで変更できます。</target>
        </trans-unit>
        <trans-unit id="fd7138161ba09f963f4c9ef09529d5db9dce6e9c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;equal_nan&lt;/code&gt; is True, complex values with nan components are considered equal if either the real &lt;em&gt;or&lt;/em&gt; the imaginary components are nan.</source>
          <target state="translated">とき &lt;code&gt;equal_nan&lt;/code&gt; がTrueの本当のいずれかであれば、ナンコンポーネントを持つ複雑な値が等しいと見なされます&lt;em&gt;か&lt;/em&gt;虚数成分がNaNです。</target>
        </trans-unit>
        <trans-unit id="ffb0cfba1c0d31cbfd6e3e6d57d32a4b67d07be0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;high&lt;/code&gt; == &lt;code&gt;low&lt;/code&gt;, values of &lt;code&gt;low&lt;/code&gt; will be returned. If &lt;code&gt;high&lt;/code&gt; &amp;lt; &lt;code&gt;low&lt;/code&gt;, the results are officially undefined and may eventually raise an error, i.e. do not rely on this function to behave when passed arguments satisfying that inequality condition.</source>
          <target state="translated">&lt;code&gt;high&lt;/code&gt; ==の &lt;code&gt;low&lt;/code&gt; 、の値は &lt;code&gt;low&lt;/code&gt; 返されます。場合は &lt;code&gt;high&lt;/code&gt; &amp;lt; &lt;code&gt;low&lt;/code&gt; 、結果が公式に未定義され、最終的にエラーを発生させること、つまりは渡された引数は、その不等式条件を満たしたときに動作するために、この機能に依存していません。</target>
        </trans-unit>
        <trans-unit id="3c038afaac1cec1ca1939f072442e623790bdaa5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;high&lt;/code&gt; == &lt;code&gt;low&lt;/code&gt;, values of &lt;code&gt;low&lt;/code&gt; will be returned. If &lt;code&gt;high&lt;/code&gt; &amp;lt; &lt;code&gt;low&lt;/code&gt;, the results are officially undefined and may eventually raise an error, i.e. do not rely on this function to behave when passed arguments satisfying that inequality condition. The &lt;code&gt;high&lt;/code&gt; limit may be included in the returned array of floats due to floating-point rounding in the equation &lt;code&gt;low + (high-low) * random_sample()&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;high&lt;/code&gt; ==の &lt;code&gt;low&lt;/code&gt; 、の値は &lt;code&gt;low&lt;/code&gt; 返されます。場合は &lt;code&gt;high&lt;/code&gt; &amp;lt; &lt;code&gt;low&lt;/code&gt; 、結果が公式に未定義され、最終的にエラーを発生させること、つまりは渡された引数は、その不等式条件を満たしたときに動作するために、この機能に依存していません。 &lt;code&gt;high&lt;/code&gt; 限界は、方程式に丸めによる浮動小数点にフロートの返された配列に含まれていてもよい &lt;code&gt;low + (high-low) * random_sample()&lt;/code&gt; 。例えば：</target>
        </trans-unit>
        <trans-unit id="f9aa8b45107567c376fa7741eff97cb12f0255ea" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;normed&lt;/code&gt; is True, then the returned histogram is the sample density, defined such that the sum over bins of the product &lt;code&gt;bin_value * bin_area&lt;/code&gt; is 1.</source>
          <target state="translated">とき &lt;code&gt;normed&lt;/code&gt; Trueの場合、返されたヒストグラムはサンプルの密度である、そのような製品のビンにわたる和と定義 &lt;code&gt;bin_value * bin_area&lt;/code&gt; 1です。</target>
        </trans-unit>
        <trans-unit id="d3c1a253c347320a48abee4b8144700cbe11dedb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;op[i]&lt;/code&gt; is NULL, the requested data type &lt;code&gt;op_dtypes[i]&lt;/code&gt; may be NULL as well, in which case it is automatically generated from the dtypes of the arrays which are flagged as readable. The rules for generating the dtype are the same is for UFuncs. Of special note is handling of byte order in the selected dtype. If there is exactly one input, the input&amp;rsquo;s dtype is used as is. Otherwise, if more than one input dtypes are combined together, the output will be in native byte order.</source>
          <target state="translated">場合 &lt;code&gt;op[i]&lt;/code&gt; NULL、要求されたデータ型である &lt;code&gt;op_dtypes[i]&lt;/code&gt; それが自動的に読み取り可能としてフラグが設定されている配列のdtypesから生成された場合には、同様にNULLであってもよいです。dtypeの生成規則はUFuncの場合と同じです。特筆すべきは、選択したdtypeでのバイト順の処理です。入力が1つだけの場合、入力のdtypeがそのまま使用されます。それ以外の場合、複数の入力dtypeを組み合わせると、出力はネイティブのバイト順になります。</target>
        </trans-unit>
        <trans-unit id="8b2b29bdbe08a7c3e8ddf1683de5150728b2dbef" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;order&lt;/code&gt; is &amp;lsquo;A&amp;rsquo;, it will preserve the array&amp;rsquo;s &amp;lsquo;C&amp;rsquo; or &amp;lsquo;F&amp;rsquo; ordering:</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; が「A」の場合、配列の「C」または「F」の順序が保持されます。</target>
        </trans-unit>
        <trans-unit id="6b8f346f1161f4e387f8b7fce9c3c4eab735e268" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;order&lt;/code&gt; is &amp;lsquo;K&amp;rsquo;, it will preserve orderings that are neither &amp;lsquo;C&amp;rsquo; nor &amp;lsquo;F&amp;rsquo;, but won&amp;rsquo;t reverse axes:</source>
          <target state="translated">とき &lt;code&gt;order&lt;/code&gt; 「K」で、それは「C」や「F」でもない順序付けを保存するが、逆の軸ではないでしょうします。</target>
        </trans-unit>
        <trans-unit id="08a648e9a0d7c320ff7a951bdd5b53abf89293b1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;p&lt;/code&gt; cannot be converted to a rank-1 array.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; がランク1の配列に変換できない場合。</target>
        </trans-unit>
        <trans-unit id="e45ca1a69513367d482121e776e438a0bc2c1c76" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;path&lt;/code&gt; is an URL, &lt;a href=&quot;#numpy.DataSource.exists&quot;&gt;&lt;code&gt;exists&lt;/code&gt;&lt;/a&gt; will return True if it&amp;rsquo;s either stored locally in the &lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; directory, or is a valid remote URL. &lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; does not discriminate between the two, the file is accessible if it exists in either location.</source>
          <target state="translated">ときに &lt;code&gt;path&lt;/code&gt; URLで、&lt;a href=&quot;#numpy.DataSource.exists&quot;&gt; &lt;code&gt;exists&lt;/code&gt; &lt;/a&gt;、それはどちらかにローカルに保存されている場合にTrueを返します。&lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;ディレクトリ、または有効なリモートURLです。&lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;は2つを区別しません。ファイルがいずれかの場所に存在する場合、ファイルにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="25d6d2d2a499c808880c721a0e1b19db64d43932" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;seed&lt;/code&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, a new &lt;code&gt;BitGenerator&lt;/code&gt; and &lt;a href=&quot;#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; will be instantiated each time. This function does not manage a default global instance.</source>
          <target state="translated">とき &lt;code&gt;seed&lt;/code&gt; 省略していないか、され &lt;code&gt;None&lt;/code&gt; 、新しい &lt;code&gt;BitGenerator&lt;/code&gt; と&lt;a href=&quot;#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;、それぞれの時間をインスタンス化されます。この関数は、デフォルトのグローバルインスタンスを管理しません。</target>
        </trans-unit>
        <trans-unit id="11aa8349ecf313cc611177c175cba7ab95aa1209" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;start &amp;lt;= axis&lt;/code&gt;, the axis is rolled back until it lies in this position. When &lt;code&gt;start &amp;gt; axis&lt;/code&gt;, the axis is rolled until it lies before this position. The default, 0, results in a &amp;ldquo;complete&amp;rdquo; roll. The following table describes how negative values of &lt;code&gt;start&lt;/code&gt; are interpreted:</source>
          <target state="translated">とき &lt;code&gt;start &amp;lt;= axis&lt;/code&gt; 、それがこの位置にあるまで、軸がロールバックされます。とき &lt;code&gt;start &amp;gt; axis&lt;/code&gt; 、それがこの位置の前にあるまで、軸が圧延されます。デフォルトの0は、「完全な」ロールになります。次の表は、 &lt;code&gt;start&lt;/code&gt; の負の値がどのように解釈されるかを示しています。</target>
        </trans-unit>
        <trans-unit id="548ec80d9148e8694deef2af35ec844cd9f8fe80" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;writemasked&lt;/code&gt; flag is used, and this operand is buffered, this changes how data is copied from the buffer into the array. A masked copying routine is used, which only copies the elements in the buffer for which &lt;code&gt;writemasked&lt;/code&gt; returns true from the corresponding element in the ARRAYMASK operand.</source>
          <target state="translated">場合 &lt;code&gt;writemasked&lt;/code&gt; フラグが使用され、このオペランドは、データがアレイにバッファからコピーされるどのようにこの変更をバッファリングされます。マスクされたコピールーチンが使用されます。これは、ARRAYMASKオペランドの対応する要素から、 &lt;code&gt;writemasked&lt;/code&gt; がtrueを返すバッファの要素のみをコピーします。</target>
        </trans-unit>
        <trans-unit id="e06542a52ac6a1f85d560afb9efd573db44bd48f" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt;&lt;code&gt;NPY_ANYORDER&lt;/code&gt;&lt;/a&gt;, the result order is &lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt;&lt;code&gt;NPY_FORTRANORDER&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;prototype&lt;/em&gt; is a fortran array, &lt;a href=&quot;#c.NPY_CORDER&quot;&gt;&lt;code&gt;NPY_CORDER&lt;/code&gt;&lt;/a&gt; otherwise. When &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt;, the result order matches that of &lt;em&gt;prototype&lt;/em&gt;, even when the axes of &lt;em&gt;prototype&lt;/em&gt; aren&amp;rsquo;t in C or Fortran order.</source>
          <target state="translated">場合&lt;em&gt;順序が&lt;/em&gt;ある&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt; &lt;code&gt;NPY_ANYORDER&lt;/code&gt; &lt;/a&gt;、結果順序は&lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt; &lt;code&gt;NPY_FORTRANORDER&lt;/code&gt; &lt;/a&gt;場合&lt;em&gt;プロトタイプは&lt;/em&gt; FORTRAN配列、ある&lt;a href=&quot;#c.NPY_CORDER&quot;&gt; &lt;code&gt;NPY_CORDER&lt;/code&gt; &lt;/a&gt;さもなければ。場合&lt;em&gt;順序が&lt;/em&gt;ある&lt;a href=&quot;#c.NPY_KEEPORDER&quot;&gt; &lt;code&gt;NPY_KEEPORDER&lt;/code&gt; &lt;/a&gt;、その結果の順序が一致&lt;em&gt;プロトタイプ&lt;/em&gt;の軸も、&lt;em&gt;プロトタイプは、&lt;/em&gt; CまたはFortranの順序ではありません。</target>
        </trans-unit>
        <trans-unit id="e7033d51e081041b1a2d922760ea9482eb361bec" translate="yes" xml:space="preserve">
          <source>When F2PY finds a line with F2PY directive, the directive is first replaced by 5 spaces and then the line is reread.</source>
          <target state="translated">F2PYがF2PYディレクティブを持つ行を見つけると、まずそのディレクティブを5つのスペースに置き換えてから、その行を読み直します。</target>
        </trans-unit>
        <trans-unit id="ad9397f3e6e3e4c72dcb47695405ed9d0b6444eb" translate="yes" xml:space="preserve">
          <source>When NumPy is built, information about system configuration is recorded, and is made available for extension modules using NumPy&amp;rsquo;s C API. These are mostly defined in &lt;code&gt;numpyconfig.h&lt;/code&gt; (included in &lt;code&gt;ndarrayobject.h&lt;/code&gt;). The public symbols are prefixed by &lt;code&gt;NPY_*&lt;/code&gt;. NumPy also offers some functions for querying information about the platform in use.</source>
          <target state="translated">NumPyがビルドされると、システム構成に関する情報が記録され、NumPyのC APIを使用して拡張モジュールで使用できるようになります。これらは主に &lt;code&gt;numpyconfig.h&lt;/code&gt; で定義されています（ndarrayobject.hに含まれてい &lt;code&gt;ndarrayobject.h&lt;/code&gt; ）。パブリックシンボルの前には &lt;code&gt;NPY_*&lt;/code&gt; が付きます。 NumPyは、使用中のプラットフォームに関する情報を照会するための関数もいくつか提供しています。</target>
        </trans-unit>
        <trans-unit id="f9eebd0d248f1a6803fb5b3cabe894035e7a712b" translate="yes" xml:space="preserve">
          <source>When True, trailing zeros are removed from the inputs. When False, the inputs are passed through intact.</source>
          <target state="translated">True の場合、末尾のゼロは入力から削除されます。Falseの場合、入力はそのまま通過します。</target>
        </trans-unit>
        <trans-unit id="97a14729b31bf94d828802c225db2f870571e19a" translate="yes" xml:space="preserve">
          <source>When a &lt;em&gt;casting&lt;/em&gt; error occurs during assignment (for example updating a numerical array using a sequence of strings), the array being assigned to may end up in an unpredictable partially updated state. However, if any other error (such as an out of bounds index) occurs, the array will remain unchanged.</source>
          <target state="translated">場合&lt;em&gt;キャスティング&lt;/em&gt;エラーが（文字列の配列を用いた数値アレイを更新するなど）割り当て中に発生する、に割り当てられるアレイは、予測できない、部分的に更新された状態で終わることができます。ただし、他のエラー（範囲外のインデックスなど）が発生した場合、配列は変更されません。</target>
        </trans-unit>
        <trans-unit id="e61114b95ee070856965d70e916fd6711963caa8" translate="yes" xml:space="preserve">
          <source>When a NumPy array, that is Fortran contiguous and has a dtype corresponding to presumed Fortran type, is used as an input array argument, then its C pointer is directly passed to Fortran.</source>
          <target state="translated">入力配列の引数にFortran連続で,推定Fortran型に対応するdtypeを持つNumPy配列が使用された場合,そのCポインタが直接Fortranに渡されます.</target>
        </trans-unit>
        <trans-unit id="0d0060f5095733a108d2028d216426111947fd92" translate="yes" xml:space="preserve">
          <source>When a broadcasting error occurs, the iterator raises an exception which includes the input shapes to help diagnose the problem.</source>
          <target state="translated">ブロードキャストエラーが発生した場合、イテレータは入力形状を含む例外を発生させ、問題を診断するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="811ec8a0586d1ac674df53f06017026b62d3d8b5" translate="yes" xml:space="preserve">
          <source>When a member of the Code of Conduct committee becomes aware of a clear and severe breach, they will do the following:</source>
          <target state="translated">行動規範委員会の委員は、明確かつ重大な違反を認識した場合には、次のことを行います。</target>
        </trans-unit>
        <trans-unit id="bb6f21e3a640b767ac7aa4f3739c198a4f93da24" translate="yes" xml:space="preserve">
          <source>When a memmap causes a file to be created or extended beyond its current size in the filesystem, the contents of the new part are unspecified. On systems with POSIX filesystem semantics, the extended part will be filled with zero bytes.</source>
          <target state="translated">memmapによってファイルが作成されたり、ファイルシステムの現在のサイズを超えて拡張されたりした場合、新しい部分の内容は不特定である。POSIXファイルシステムセマンティクスを持つシステムでは、拡張された部分はゼロバイトで埋められます。</target>
        </trans-unit>
        <trans-unit id="7aea5877fc6d970c99b779ec7ae2a444e7ff36a4" translate="yes" xml:space="preserve">
          <source>When a parameter can only assume one of a fixed set of values, those values can be listed in braces, with the default appearing first:</source>
          <target state="translated">パラメータが固定された値のいずれか一方しか想定できない場合は、それらの値を中括弧で囲み、デフォルト値を最初に表示することができます。</target>
        </trans-unit>
        <trans-unit id="9b87e186d194de6f9d4cd9e098a815eab1dbc5b7" translate="yes" xml:space="preserve">
          <source>When a recording filter is added, matching warnings are stored in the &lt;code&gt;log&lt;/code&gt; attribute as well as in the list returned by &lt;code&gt;record&lt;/code&gt;.</source>
          <target state="translated">記録フィルターが追加されると、一致する警告が &lt;code&gt;log&lt;/code&gt; 属性と、 &lt;code&gt;record&lt;/code&gt; によって返されるリストに格納されます。</target>
        </trans-unit>
        <trans-unit id="d3862b7e9fa0724ebb3b8d0fa3f7b6e962081ab4" translate="yes" xml:space="preserve">
          <source>When a report is sent to the committee they will immediately reply to the reporter to confirm receipt. This reply must be sent within 72 hours, and the group should strive to respond much quicker than that.</source>
          <target state="translated">委員会に報告書が送られてきたら、すぐに報告者に返信して受領を確認する。この返信は72時間以内に送られなければならず、グループはそれよりもはるかに早い対応に努めるべきである。</target>
        </trans-unit>
        <trans-unit id="ba1de10f5ac1f9d67feabe34568ca76340334549" translate="yes" xml:space="preserve">
          <source>When a ufunc is called, many things must be done. The information collected from these setup operations is stored in a loop-object. This loop object is a C-structure (that could become a Python object but is not initialized as such because it is only used internally). This loop object has the layout needed to be used with PyArray_Broadcast so that the broadcasting can be handled in the same way as it is handled in other sections of code.</source>
          <target state="translated">ufuncが呼ばれると、多くのことが行われなければなりません。これらの設定操作から収集された情報はループオブジェクトに格納されます。このループオブジェクトはC構造体である(Pythonオブジェクトになる可能性があるが、内部でのみ使用されるため初期化されていない)。このループオブジェクトは、PyArray_Broadcast で使用するために必要なレイアウトを持っており、他のコードのセクションと同じようにブロードキャストを扱うことができます。</target>
        </trans-unit>
        <trans-unit id="bed1032321553c178be0f4aa76322e048587c74c" translate="yes" xml:space="preserve">
          <source>When a view is desired in as many cases as possible, &lt;code&gt;arr.reshape(-1)&lt;/code&gt; may be preferable.</source>
          <target state="translated">できるだけ多くの場合にビューが必要な場合は、 &lt;code&gt;arr.reshape(-1)&lt;/code&gt; が適しています。</target>
        </trans-unit>
        <trans-unit id="3d973a2064387ee8231885f5fb66b3c4832468fa" translate="yes" xml:space="preserve">
          <source>When accessing a single entry of a masked array with no named fields, the output is either a scalar (if the corresponding entry of the mask is &lt;code&gt;False&lt;/code&gt;) or the special value &lt;a href=&quot;maskedarray.baseclass#numpy.ma.masked&quot;&gt;&lt;code&gt;masked&lt;/code&gt;&lt;/a&gt; (if the corresponding entry of the mask is &lt;code&gt;True&lt;/code&gt;):</source>
          <target state="translated">名前付きフィールドのないマスクされた配列の単一のエントリにアクセスする場合、出力はスカラー（マスクの対応するエントリが &lt;code&gt;False&lt;/code&gt; の場合）または&lt;a href=&quot;maskedarray.baseclass#numpy.ma.masked&quot;&gt; &lt;code&gt;masked&lt;/code&gt; &lt;/a&gt;た特別な値（マスクの対応するエントリが &lt;code&gt;True&lt;/code&gt; の場合）です。</target>
        </trans-unit>
        <trans-unit id="06a15d5053f26aa57bf4b46b8d10d7192f9bc439" translate="yes" xml:space="preserve">
          <source>When accessing a slice, the output is a masked array whose &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute is a view of the original data, and whose mask is either &lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; (if there was no invalid entries in the original array) or a view of the corresponding slice of the original mask. The view is required to ensure propagation of any modification of the mask to the original.</source>
          <target state="translated">スライスにアクセスするときの出力は、&lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;属性が元のデータのビューであり、マスクが&lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;（元の配列に無効なエントリがなかった場合）または元の対応するスライスのビューであるマスクされた配列です。マスク。ビューは、マスクの変更を元に確実に伝播するために必要です。</target>
        </trans-unit>
        <trans-unit id="4d92b7829e88a948fb9eb65ffcf73c11643904a9" translate="yes" xml:space="preserve">
          <source>When added within a context, filters are only added inside the context and will be forgotten when the context is exited.</source>
          <target state="translated">コンテキスト内に追加された場合、フィルタはコンテキスト内でのみ追加され、コンテキストが終了すると忘れられます。</target>
        </trans-unit>
        <trans-unit id="9541e02340938d50efa6e54249172d0ce37841bb" translate="yes" xml:space="preserve">
          <source>When adding the &amp;lsquo;out&amp;rsquo; parameter, we have to explicitly provide those flags, because if someone passes in an array as &amp;lsquo;out&amp;rsquo;, the iterator will default to &amp;lsquo;readonly&amp;rsquo;, and our inner loop would fail. The reason &amp;lsquo;readonly&amp;rsquo; is the default for input arrays is to prevent confusion about unintentionally triggering a reduction operation. If the default were &amp;lsquo;readwrite&amp;rsquo;, any broadcasting operation would also trigger a reduction, a topic which is covered later in this document.</source>
          <target state="translated">「out」パラメータを追加するときは、これらのフラグを明示的に指定する必要があります。誰かが「out」として配列を渡すと、イテレータはデフォルトで「readonly」になり、内部ループが失敗するためです。'readonly'が入力配列のデフォルトである理由は、意図しないリダクション操作のトリガーに関する混乱を防ぐためです。デフォルトが「readwrite」の場合、ブロードキャスト操作によって削減もトリガーされます。このトピックについては、このドキュメントで後述します。</target>
        </trans-unit>
        <trans-unit id="4db060a24fc0c2ce0739cc8fe613a0f3bd607af5" translate="yes" xml:space="preserve">
          <source>When advanced indices are next to each other transposing may be necessary. All necessary transposing is handled by &lt;code&gt;PyArray_MapIterSwapAxes&lt;/code&gt; and has to be handled by the caller unless &lt;code&gt;PyArray_MapIterNew&lt;/code&gt; is asked to allocate the result.</source>
          <target state="translated">高度なインデックスが互いに隣接している場合、転置が必要になる場合があります。必要な転置はすべて &lt;code&gt;PyArray_MapIterSwapAxes&lt;/code&gt; によって処理され、 &lt;code&gt;PyArray_MapIterNew&lt;/code&gt; が結果の割り当てを要求されない限り、呼び出し元によって処理される必要があります。</target>
        </trans-unit>
        <trans-unit id="d51d0efd85b1005294bf85e6a8973d000ac30965" translate="yes" xml:space="preserve">
          <source>When all weights along axis are zero. See &lt;a href=&quot;numpy.ma.average#numpy.ma.average&quot;&gt;&lt;code&gt;numpy.ma.average&lt;/code&gt;&lt;/a&gt; for a version robust to this type of error.</source>
          <target state="translated">軸に沿ったすべての重みがゼロの場合。このタイプのエラーに強いバージョンについては、&lt;a href=&quot;numpy.ma.average#numpy.ma.average&quot;&gt; &lt;code&gt;numpy.ma.average&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b89455b8b1550525cbe82d65bea2d7c4ae5a2baa" translate="yes" xml:space="preserve">
          <source>When an array, each row is a coordinate in a D-dimensional space - such as &lt;code&gt;histogramdd(np.array([p1, p2, p3]))&lt;/code&gt;.</source>
          <target state="translated">配列の場合、各行はD次元空間の座標 &lt;code&gt;histogramdd(np.array([p1, p2, p3]))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8f93d8039436724f69d84838e7be89d226d23fc" translate="yes" xml:space="preserve">
          <source>When an array, each row is a coordinate in a D-dimensional space - such as &lt;code&gt;histogramgramdd(np.array([p1, p2, p3]))&lt;/code&gt;.</source>
          <target state="translated">配列の場合、各行は、 &lt;code&gt;histogramgramdd(np.array([p1, p2, p3]))&lt;/code&gt; などのD次元空間の座標です。</target>
        </trans-unit>
        <trans-unit id="74f6a2bdb1716e78ebe330a0020c810a9f33a7a2" translate="yes" xml:space="preserve">
          <source>When an array_like, each element is the list of values for single coordinate - such as &lt;code&gt;histogramdd((X, Y, Z))&lt;/code&gt;.</source>
          <target state="translated">array_likeの場合、各要素は、 &lt;code&gt;histogramdd((X, Y, Z))&lt;/code&gt; などの単一座標の値のリストです。</target>
        </trans-unit>
        <trans-unit id="82d8732b0393645ea59279b9ddb8a309ed548c77" translate="yes" xml:space="preserve">
          <source>When an array_like, each element is the list of values for single coordinate - such as &lt;code&gt;histogramgramdd((X, Y, Z))&lt;/code&gt;.</source>
          <target state="translated">array_likeの場合、各要素は &lt;code&gt;histogramgramdd((X, Y, Z))&lt;/code&gt; などの単一座標の値のリストです。</target>
        </trans-unit>
        <trans-unit id="c37c33974afb82f0204264e74c8f9fe0fca4a425" translate="yes" xml:space="preserve">
          <source>When an axis is specified the subarrays indexed by the axis are sorted. This is done by making the specified axis the first dimension of the array (move the axis to the first dimension to keep the order of the other axes) and then flattening the subarrays in C order. The flattened subarrays are then viewed as a structured type with each element given a label, with the effect that we end up with a 1-D array of structured types that can be treated in the same way as any other 1-D array. The result is that the flattened subarrays are sorted in lexicographic order starting with the first element.</source>
          <target state="translated">軸が指定されると、その軸によってインデックス付けされたサブアレイがソートされます。これは、指定された軸を配列の1次元目にし(他の軸の順序を維持するために軸を1次元目に移動します)、Cの順序でサブアレイを平坦化することによって行われます。平坦化されたサブアレイは、各要素にラベルが与えられた構造化型として表示され、他の1次元配列と同じように扱うことができる構造化型の1次元配列となります。その結果、平坦化されたサブアレイは、最初の要素から始まる辞書順にソートされます。</target>
        </trans-unit>
        <trans-unit id="355be91097240a30b4454a31696bf68a0b258227" translate="yes" xml:space="preserve">
          <source>When an axis is specified the subarrays indexed by the axis are sorted. This is done by making the specified axis the first dimension of the array and then flattening the subarrays in C order. The flattened subarrays are then viewed as a structured type with each element given a label, with the effect that we end up with a 1-D array of structured types that can be treated in the same way as any other 1-D array. The result is that the flattened subarrays are sorted in lexicographic order starting with the first element.</source>
          <target state="translated">軸が指定されると、その軸によってインデックス付けされたサブ配列がソートされます。これは、指定された軸を配列の1次元目にして、Cの順序でサブアレイを平坦化することで行われます。扁平化されたサブアレイは、各要素にラベルが与えられた構造化型として表示され、他の1次元配列と同じように扱うことができる構造化型の1次元配列となります。その結果、平坦化されたサブアレイは、最初の要素から始まる辞書順にソートされます。</target>
        </trans-unit>
        <trans-unit id="6b69f1e4103645c38ed661fd82fe69ef3f4b8546" translate="yes" xml:space="preserve">
          <source>When an ellipsis (&lt;code&gt;...&lt;/code&gt;) is present but has no size (i.e. replaces zero &lt;code&gt;:&lt;/code&gt;) the result will still always be an array. A view if no advanced index is present, otherwise a copy.</source>
          <target state="translated">省略記号（とき &lt;code&gt;...&lt;/code&gt; は）存在しているが、何の大きさを持っていない（すなわちゼロを置き換える &lt;code&gt;:&lt;/code&gt; ）結果はまだ常に配列になります。詳細インデックスが存在しない場合はビュー、それ以外の場合はコピー。</target>
        </trans-unit>
        <trans-unit id="a6d6a3b6d360dde7b2d4e12e9485e974a0d7c19d" translate="yes" xml:space="preserve">
          <source>When an extension module is written, compiled, and installed to somewhere in the Python path (sys.path), the code can then be imported into Python as if it were a standard python file. It will contain objects and methods that have been defined and compiled in C code. The basic steps for doing this in Python are well-documented and you can find more information in the documentation for Python itself available online at &lt;a href=&quot;https://www.python.org&quot;&gt;www.python.org&lt;/a&gt; .</source>
          <target state="translated">拡張モジュールが記述され、コンパイルされ、Pythonパス（sys.path）のどこかにインストールされると、コードは標準のPythonファイルであるかのようにPythonにインポートできます。これには、Cコードで定義およびコンパイルされたオブジェクトとメソッドが含まれます。Pythonでこれを行うための基本的な手順は十分に文書化されており、詳細については、&lt;a href=&quot;https://www.python.org&quot;&gt;www.python.orgで&lt;/a&gt;オンラインで入手できるPython自体の文書を参照してください。</target>
        </trans-unit>
        <trans-unit id="3d4c4fe16d2ce5d90f03758ae48eb086b0f73e4f" translate="yes" xml:space="preserve">
          <source>When an input date falls on the weekend or a holiday, &lt;a href=&quot;generated/numpy.busday_offset#numpy.busday_offset&quot;&gt;&lt;code&gt;busday_offset&lt;/code&gt;&lt;/a&gt; first applies a rule to roll the date to a valid business day, then applies the offset. The default rule is &amp;lsquo;raise&amp;rsquo;, which simply raises an exception. The rules most typically used are &amp;lsquo;forward&amp;rsquo; and &amp;lsquo;backward&amp;rsquo;.</source>
          <target state="translated">入力日付が週末または休日になる場合、&lt;a href=&quot;generated/numpy.busday_offset#numpy.busday_offset&quot;&gt; &lt;code&gt;busday_offset&lt;/code&gt; は&lt;/a&gt;最初に日付を有効な営業日にロールするルールを適用し、次にオフセットを適用します。デフォルトのルールは「raise」で、これは単に例外を発生させます。最も一般的に使用されるルールは「フォワード」と「バックワード」です。</target>
        </trans-unit>
        <trans-unit id="64e5ff0649d57b71884c5f5309f3367e78576ca8" translate="yes" xml:space="preserve">
          <source>When applied to masked arrays, this function drops the mask information if the &lt;code&gt;to_begin&lt;/code&gt; and/or &lt;code&gt;to_end&lt;/code&gt; parameters are used.</source>
          <target state="translated">マスクされた配列に適用されると、この関数は &lt;code&gt;to_begin&lt;/code&gt; や &lt;code&gt;to_end&lt;/code&gt; パラメータが使用されている場合にマスク情報を削除します。</target>
        </trans-unit>
        <trans-unit id="15d1d9494e1bc6589dcc00277cd9b509332d208c" translate="yes" xml:space="preserve">
          <source>When applying the rule would make the code less readable, even for someone who is used to reading code that follows the rules.</source>
          <target state="translated">ルールを適用すると、ルールに従ったコードを読むことに慣れている人でも、コードが読みにくくなります。</target>
        </trans-unit>
        <trans-unit id="e3d9940340bbe50ab427886c71fa9ffd19149804" translate="yes" xml:space="preserve">
          <source>When assigning to fields which are subarrays, the assigned value will first be broadcast to the shape of the subarray.</source>
          <target state="translated">サブアレイであるフィールドに代入する場合、代入された値はまずサブアレイの形状にブロードキャストされます。</target>
        </trans-unit>
        <trans-unit id="f9f55c2f275cd5eebce400c5d632f8721b4b827a" translate="yes" xml:space="preserve">
          <source>When axis is not None, this function does the same thing as &amp;ldquo;fancy&amp;rdquo; indexing (indexing arrays using arrays); however, it can be easier to use if you need elements along a given axis. A call such as &lt;code&gt;np.take(arr, indices, axis=3)&lt;/code&gt; is equivalent to &lt;code&gt;arr[:,:,:,indices,...]&lt;/code&gt;.</source>
          <target state="translated">axisがNoneでない場合、この関数は「ファンシー」なインデックス付け（配列を使用した配列のインデックス付け）と同じことを行います。ただし、特定の軸に沿った要素が必要な場合は、より簡単に使用できます。 &lt;code&gt;np.take(arr, indices, axis=3)&lt;/code&gt; などの呼び出しは、 &lt;code&gt;arr[:,:,:,indices,...]&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="98c8d4285d8be1f6c2247d830229aff2863b6c70" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, controls the size of the temporary buffers. Set to 0 for the default value.</source>
          <target state="translated">バッファリングが有効な場合、一時的なバッファのサイズを制御します。デフォルト値は 0 に設定されています。</target>
        </trans-unit>
        <trans-unit id="16e4f331a390aab5d5358796f242e2ca6c555d93" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, this allows the size of the inner loop to grow when buffering isn&amp;rsquo;t necessary. This option is best used if you&amp;rsquo;re doing a straight pass through all the data, rather than anything with small cache-friendly arrays of temporary values for each inner loop.</source>
          <target state="translated">バッファリングが有効になっている場合、これにより、バッファリングが不要なときに内部ループのサイズが大きくなります。このオプションは、各内部ループの一時的な値のキャッシュに適した小さな配列ではなく、すべてのデータを直接渡す場合に最適です。</target>
        </trans-unit>
        <trans-unit id="b51f6738b373830fc8b3cc055c675ac17c018d38" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, this also switches to a special buffering mode which reduces the loop length as necessary to not trample on values being reduced.</source>
          <target state="translated">バッファリングが有効になっている場合、これは特別なバッファリングモードにも切り替わり、ループの長さを必要に応じて減らしている値を踏みにじらないようにします。</target>
        </trans-unit>
        <trans-unit id="41819020a24f8ece45999c2f5c36e5cb1be0993f" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, this delays allocation of the buffers until &lt;a href=&quot;#c.NpyIter_Reset&quot;&gt;&lt;code&gt;NpyIter_Reset&lt;/code&gt;&lt;/a&gt; or another reset function is called. This flag exists to avoid wasteful copying of buffer data when making multiple copies of a buffered iterator for multi-threaded iteration.</source>
          <target state="translated">バッファリングが有効な場合、これにより、&lt;a href=&quot;#c.NpyIter_Reset&quot;&gt; &lt;code&gt;NpyIter_Reset&lt;/code&gt; &lt;/a&gt;または別のリセット関数が呼び出されるまで、バッファの割り当てが遅延します。このフラグは、マルチスレッド反復のためにバッファー付きイテレーターの複数のコピーを作成するときに、バッファーデータの無駄なコピーを回避するために存在します。</target>
        </trans-unit>
        <trans-unit id="4659cc673583a700172b8a1a2788271c0236c929" translate="yes" xml:space="preserve">
          <source>When building Python packages containing Fortran sources, then one can choose different Fortran compilers by using &lt;code&gt;build_ext&lt;/code&gt; command option &lt;code&gt;--fcompiler=&amp;lt;Vendor&amp;gt;&lt;/code&gt;. Here &lt;code&gt;&amp;lt;Vendor&amp;gt;&lt;/code&gt; can be one of the following names:</source>
          <target state="translated">Fortranソースを含むPythonパッケージをビルドする場合、 &lt;code&gt;build_ext&lt;/code&gt; コマンドオプション &lt;code&gt;--fcompiler=&amp;lt;Vendor&amp;gt;&lt;/code&gt; を使用して、さまざまなFortranコンパイラーを選択できます。ここで、 &lt;code&gt;&amp;lt;Vendor&amp;gt;&lt;/code&gt; は次のいずれかの名前になります。</target>
        </trans-unit>
        <trans-unit id="f21f4d61950661d3a1581fb7fc069996b1dddfdd" translate="yes" xml:space="preserve">
          <source>When building an extension module, a combination of the following macros may be required for non-gcc Fortran compilers:</source>
          <target state="translated">拡張モジュールをビルドする際には、非gccのFortranコンパイラでは以下のマクロの組み合わせが必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="230c13e7258bcd1f717539097a4dd43ccf64c97d" translate="yes" xml:space="preserve">
          <source>When calculating the power of an experiment (power = probability of rejecting the null hypothesis when a specific alternative is true) the non-central F statistic becomes important. When the null hypothesis is true, the F statistic follows a central F distribution. When the null hypothesis is not true, then it follows a non-central F statistic.</source>
          <target state="translated">実験の検出力(検出力=特定の代替案が真であるときに帰無仮説を棄却する確率)を計算するとき、非中心F統計量が重要になる。帰無仮説が真の場合、F統計量は中心F分布に従う。帰無仮説が真でないときは、非中心F統計量に従う。</target>
        </trans-unit>
        <trans-unit id="5a88371e6c71e0713242640efaf4aa0aa5e85f64" translate="yes" xml:space="preserve">
          <source>When called from the explicit constructor, &lt;code&gt;obj&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">明示的なコンストラクターから呼び出された場合、 &lt;code&gt;obj&lt;/code&gt; は &lt;code&gt;None&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="4c4c9c09668cb4fc50a86156b0582de19cfc0aea" translate="yes" xml:space="preserve">
          <source>When called from view casting, &lt;code&gt;obj&lt;/code&gt; can be an instance of any subclass of ndarray, including our own.</source>
          <target state="translated">ビューキャスティングから呼び出された場合、 &lt;code&gt;obj&lt;/code&gt; は、独自のものを含め、ndarrayの任意のサブクラスのインスタンスにすることができます。</target>
        </trans-unit>
        <trans-unit id="bdfd9e1642e1e1ff8048cf3528d0f05bb78c463a" translate="yes" xml:space="preserve">
          <source>When called in new-from-template, &lt;code&gt;obj&lt;/code&gt; is another instance of our own subclass, that we might use to update the new &lt;code&gt;self&lt;/code&gt; instance.</source>
          <target state="translated">new-from-templateで呼び出されると、 &lt;code&gt;obj&lt;/code&gt; は独自のサブクラスの別のインスタンスであり、新しい &lt;code&gt;self&lt;/code&gt; インスタンスを更新するために使用できます。</target>
        </trans-unit>
        <trans-unit id="67a93e8e91305afaf6fc0532016e5191c667e052" translate="yes" xml:space="preserve">
          <source>When called on a zero-d array or scalar, &lt;code&gt;nonzero(a)&lt;/code&gt; is treated as &lt;code&gt;nonzero(atleast1d(a))&lt;/code&gt;.</source>
          <target state="translated">ゼロ次元配列またはスカラー、上で呼び出されたときに &lt;code&gt;nonzero(a)&lt;/code&gt; として扱われ &lt;code&gt;nonzero(atleast1d(a))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05271cb09f7d75c6bfb61cf24594f89c89131399" translate="yes" xml:space="preserve">
          <source>When called with only scalars, &lt;code&gt;np.block&lt;/code&gt; is equivalent to an ndarray call. So &lt;code&gt;np.block([[1, 2], [3, 4]])&lt;/code&gt; is equivalent to &lt;code&gt;np.array([[1, 2], [3, 4]])&lt;/code&gt;.</source>
          <target state="translated">スカラーのみで呼び出される場合、 &lt;code&gt;np.block&lt;/code&gt; はndarray呼び出しと同等です。そう &lt;code&gt;np.block([[1, 2], [3, 4]])&lt;/code&gt; に相当する &lt;code&gt;np.array([[1, 2], [3, 4]])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb3fc5492e5904c93f3605a33709fbb0c2bb0c5b" translate="yes" xml:space="preserve">
          <source>When casting from complex to float or int. To avoid this, one should use &lt;code&gt;a.real.astype(t)&lt;/code&gt;.</source>
          <target state="translated">複素数から浮動小数点または整数にキャストする場合。これを回避するには、 &lt;code&gt;a.real.astype(t)&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d77d44055e40bb5dab3ddffb7c979aaad7a40365" translate="yes" xml:space="preserve">
          <source>When coding custom algorithms, and sometimes when wrapping existing C libraries, some familiarity with C is required. In particular, when using C memory management (&lt;code&gt;malloc&lt;/code&gt; and friends), it&amp;rsquo;s easy to introduce memory leaks. However, just compiling a Python module renamed to &lt;code&gt;.pyx&lt;/code&gt; can already speed it up, and adding a few type declarations can give dramatic speedups in some code.</source>
          <target state="translated">カスタムアルゴリズムをコーディングする場合、および既存のCライブラリをラップする場合は、Cにある程度精通している必要があります。特に、Cメモリ管理（ &lt;code&gt;malloc&lt;/code&gt; とその仲間）を使用する場合、メモリリークが発生しやすくなります。ただし、 &lt;code&gt;.pyx&lt;/code&gt; に名前が変更されたPythonモジュールをコンパイルするだけで、すでに高速化できます。また、いくつかの型宣言を追加すると、一部のコードで劇的な高速化が可能になります。</target>
        </trans-unit>
        <trans-unit id="7b0aeecc6c945df228976af6d76ace4f58298a37" translate="yes" xml:space="preserve">
          <source>When considering potential Members, the Council will look at candidates with a comprehensive view of their contributions. This will include but is not limited to code, code review, infrastructure work, mailing list and chat participation, community help/building, education and outreach, design work, etc. We are deliberately not setting arbitrary quantitative metrics (like &amp;ldquo;100 commits in this repo&amp;rdquo;) to avoid encouraging behavior that plays to the metrics rather than the project&amp;rsquo;s overall well-being. We want to encourage a diverse array of backgrounds, viewpoints and talents in our team, which is why we explicitly do not define code as the sole metric on which council membership will be evaluated.</source>
          <target state="translated">会員候補者を検討する際、理事会は候補者の貢献を包括的に検討します。これには、コード、コードレビュー、インフラストラクチャの作業、メーリングリストとチャットへの参加、コミュニティのヘルプ/構築、教育とアウトリーチ、設計作業などが含まれますが、これらに限定されません。このレポ」）は、プロジェクトの全体的な幸福ではなく、メトリックに影響を与える行動を奨励することを回避するためです。私たちは、チーム内のさまざまな背景、視点、才能を奨励したいと考えています。そのため、評議会のメンバーシップが評価される唯一の指標としてコードを明示的に定義していません。</target>
        </trans-unit>
        <trans-unit id="3afb0a37a10edd1baec0a1dc8d2095269323f16d" translate="yes" xml:space="preserve">
          <source>When creating a 0-d array from an array scalar use &lt;code&gt;f-&amp;gt;setitem&lt;/code&gt; instead of the standard copy from an array scalar. Must use if you don&amp;rsquo;t define an array scalar to go along with the data-type.</source>
          <target state="translated">配列スカラーから0-d配列を作成するときは、配列スカラーからの標準のコピーの代わりに &lt;code&gt;f-&amp;gt;setitem&lt;/code&gt; を使用してください。データ型に合わせて配列スカラーを定義しない場合に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8887c1561ce70af56f037b9ba953356547c232a4" translate="yes" xml:space="preserve">
          <source>When creating a new masked array with a simple, non-structured datatype, the mask is initially set to the special value &lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt;, that corresponds roughly to the boolean &lt;code&gt;False&lt;/code&gt;. Trying to set an element of &lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; will fail with a &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception, as a boolean does not support item assignment.</source>
          <target state="translated">単純な非構造化データ型で新しいマスクされた配列を作成する場合、マスクは最初、ブール値 &lt;code&gt;False&lt;/code&gt; にほぼ対応する特別な値&lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; に&lt;/a&gt;設定されます。ブール値はアイテムの割り当てをサポートしていないため、&lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; の&lt;/a&gt;要素を設定しようとすると&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;例外で失敗します。</target>
        </trans-unit>
        <trans-unit id="4e6d2af630e30f862a489ba6df45674126eb3cd4" translate="yes" xml:space="preserve">
          <source>When creating an array of datetimes from a string, it is still possible to automatically select the unit from the inputs, by using the datetime type with generic units.</source>
          <target state="translated">文字列からdatetimeの配列を作成する場合でも、一般的な単位を持つdatetime型を使用することで、入力から自動的に単位を選択することができます。</target>
        </trans-unit>
        <trans-unit id="ac49ba1355f1db42e6af84f03eb57484c54f1f5d" translate="yes" xml:space="preserve">
          <source>When cross-compiling with numpy distutils, it might be necessary to use modified npy-pkg-config files. Using the default/generated files will link with the host libraries (i.e. libnpymath.a). For cross-compilation you of-course need to link with target libraries, while using the host Python installation.</source>
          <target state="translated">numpy distutilsとのクロスコンパイルを行う場合、修正されたnpy-pkg-configファイルを使用する必要があるかもしれません。デフォルト/生成されたファイルを使用すると、ホストライブラリ(例:libnpymath.a)とリンクします。クロスコンパイルのためには、もちろん、ホストのPythonインストールを使用しながら、ターゲットライブラリとリンクする必要があります。</target>
        </trans-unit>
        <trans-unit id="8f67c8b0b4f5cc7d1d888ed98b880f842ee42d75" translate="yes" xml:space="preserve">
          <source>When either of the dimensions compared is one, the other is used. In other words, dimensions with size 1 are stretched or &amp;ldquo;copied&amp;rdquo; to match the other.</source>
          <target state="translated">比較されるディメンションのいずれかが一方の場合、もう一方が使用されます。つまり、サイズ1の寸法は、他の寸法と一致するように引き伸ばされるか、「コピー」されます。</target>
        </trans-unit>
        <trans-unit id="36a5c7d333e9c484967d9590699c121ae8287b5d" translate="yes" xml:space="preserve">
          <source>When either of the elements is masked, the result is masked as well, but the underlying boolean data are still set, with self and other considered equal if both are masked, and unequal otherwise.</source>
          <target state="translated">どちらかの要素がマスクされている場合、結果もマスクされますが、基礎となるブーリアンデータはまだ設定されており、selfとotherが両方マスクされている場合は等しく、そうでない場合は不等しくなります。</target>
        </trans-unit>
        <trans-unit id="2c15c829ea1146c460c63d87fff55a43784eaa99" translate="yes" xml:space="preserve">
          <source>When estimating the standard error of a proportion in a population by using a random sample, the normal distribution works well unless the product p*n &amp;lt;=5, where p = population proportion estimate, and n = number of samples, in which case the binomial distribution is used instead. For example, a sample of 15 people shows 4 who are left handed, and 11 who are right handed. Then p = 4/15 = 27%. 0.27*15 = 4, so the binomial distribution should be used in this case.</source>
          <target state="translated">ランダムサンプルを使用して母集団の比率の標準誤差を推定する場合、積p * n &amp;lt;= 5でない限り、正規分布はうまく機能します。代わりに二項分布が使用されます。たとえば、15人のサンプルは、左利きの4人と右利きの11人を示しています。次に、p = 4/15 = 27％です。0.27 * 15 = 4なので、この場合は二項分布を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="09930c9cc0372480cd647d7e9b5ec7bd58cefab8" translate="yes" xml:space="preserve">
          <source>When fewer indices are provided than the number of axes, the missing indices are considered complete slices&lt;code&gt;:&lt;/code&gt;</source>
          <target state="translated">提供されるインデックスが軸の数より少ない場合、欠落しているインデックスは完全なスライスと見なされます &lt;code&gt;:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b79bfc37b770b9a9d472063cecf571e647616c67" translate="yes" xml:space="preserve">
          <source>When fid is a file object, array contents are directly written to the file, bypassing the file object&amp;rsquo;s &lt;code&gt;write&lt;/code&gt; method. As a result, tofile cannot be used with files objects supporting compression (e.g., GzipFile) or file-like objects that do not support &lt;code&gt;fileno()&lt;/code&gt; (e.g., BytesIO).</source>
          <target state="translated">fidがファイルオブジェクトの場合、配列の内容はファイルオブジェクトの &lt;code&gt;write&lt;/code&gt; メソッドをバイパスして、直接ファイルに書き込まれます。その結果、tofileは、圧縮をサポートするファイルオブジェクト（GzipFileなど）または &lt;code&gt;fileno()&lt;/code&gt; をサポートしないファイル類似オブジェクト（BytesIOなど）では使用できません。</target>
        </trans-unit>
        <trans-unit id="aefa8c4cd90708b249d563eead9370ff301bdaf2" translate="yes" xml:space="preserve">
          <source>When finished:</source>
          <target state="translated">終わったら</target>
        </trans-unit>
        <trans-unit id="b8650f4614cacd7afc4a45f34e856756be0c8acc" translate="yes" xml:space="preserve">
          <source>When forcing an iteration order, we observed that the external loop option may provide the elements in smaller chunks because the elements can&amp;rsquo;t be visited in the appropriate order with a constant stride. When writing C code, this is generally fine, however in pure Python code this can cause a significant reduction in performance.</source>
          <target state="translated">反復順序を強制すると、要素が一定のストライドで適切な順序でアクセスできないため、外部ループオプションが要素を小さなチャンクで提供する可能性があることがわかりました。Cコードを作成する場合、これは通常問題ありませんが、純粋なPythonコードでは、パフォーマンスが大幅に低下する可能性があります。</target>
        </trans-unit>
        <trans-unit id="70fcc2c9e602ae36838f0ffe9f9889f2373533f4" translate="yes" xml:space="preserve">
          <source>When giving examples, we will use the following conventions:</source>
          <target state="translated">例を挙げる際には、以下のような慣例を使用します。</target>
        </trans-unit>
        <trans-unit id="f35ea57e8d85acee84ee1ddb5c53faafa07f0d16" translate="yes" xml:space="preserve">
          <source>When it comes to the data science ecosystem, Python and NumPy are built with the user in mind. One of the best examples of this is the built-in access to documentation. Every object contains the reference to a string, which is known as the &lt;strong&gt;docstring&lt;/strong&gt;. In most cases, this docstring contains a quick and concise summary of the object and how to use it. Python has a built-in &lt;code&gt;help()&lt;/code&gt; function that can help you access this information. This means that nearly any time you need more information, you can use &lt;code&gt;help()&lt;/code&gt; to quickly find the information that you need.</source>
          <target state="translated">データサイエンスエコシステムに関して言えば、PythonとNumPyはユーザーを念頭に置いて構築されています。これの最も良い例の1つは、ドキュメントへの組み込みアクセスです。すべてのオブジェクトには、&lt;strong&gt;docstring&lt;/strong&gt;と呼ばれる文字列への参照が含まれています。ほとんどの場合、このdocstringには、オブジェクトの簡潔で簡潔な要約とその使用方法が含まれています。Pythonには、この情報へのアクセスに &lt;code&gt;help()&lt;/code&gt; 組み込みのhelp（）関数があります。つまり、より多くの情報が必要なときはいつでも、 &lt;code&gt;help()&lt;/code&gt; を使用して必要な情報をすばやく見つけることができます。</target>
        </trans-unit>
        <trans-unit id="b9b252a9e3ddb6a4daaa0819da4dce1d5c66c848" translate="yes" xml:space="preserve">
          <source>When matplotlib is imported in the example, the Example code will be wrapped in &lt;code&gt;matplotlib&amp;rsquo;s Sphinx `plot&lt;/code&gt; directive &amp;lt;&lt;a href=&quot;http://matplotlib.org/sampledoc/extensions.html&quot;&gt;http://matplotlib.org/sampledoc/extensions.html&lt;/a&gt;&amp;gt;`_. When matplotlib is not explicitly imported, &lt;code&gt; plot::&lt;/code&gt; can be used directly if &lt;a href=&quot;https://matplotlib.org/api/sphinxext_plot_directive_api.html#module-matplotlib.sphinxext.plot_directive&quot;&gt;&lt;code&gt;matplotlib.sphinxext.plot_directive&lt;/code&gt;&lt;/a&gt; is loaded as a Sphinx extension in &lt;code&gt;conf.py&lt;/code&gt;.</source>
          <target state="translated">matplotlibがサンプルにインポートされると、サンプルコードは &lt;code&gt;matplotlib&amp;rsquo;s Sphinx `plot&lt;/code&gt; ディレクティブ&amp;lt; &lt;a href=&quot;http://matplotlib.org/sampledoc/extensions.html&quot;&gt;http://matplotlib.org/sampledoc/extensions.html&lt;/a&gt; &amp;gt; `_にラップされます。 matplotlibのは、明示的にインポートされていない場合は、 &lt;code&gt; plot::&lt;/code&gt; 場合は、直接使用することができます&lt;a href=&quot;https://matplotlib.org/api/sphinxext_plot_directive_api.html#module-matplotlib.sphinxext.plot_directive&quot;&gt; &lt;code&gt;matplotlib.sphinxext.plot_directive&lt;/code&gt; が&lt;/a&gt;でSphinxの拡張機能としてロードされます &lt;code&gt;conf.py&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d35b37d44b28508587e123d157336a91b6e8c01f" translate="yes" xml:space="preserve">
          <source>When multiple arrays are involved in an operation, you may want to use the same broadcasting rules that the math operations (&lt;em&gt;i.e.&lt;/em&gt; the ufuncs) use. This can be done easily using the &lt;a href=&quot;../reference/c-api/types-and-structures#c.PyArrayMultiIterObject&quot;&gt;&lt;code&gt;PyArrayMultiIterObject&lt;/code&gt;&lt;/a&gt;. This is the object returned from the Python command numpy.broadcast and it is almost as easy to use from C. The function &lt;a href=&quot;../reference/c-api/array#c.PyArray_MultiIterNew&quot;&gt;&lt;code&gt;PyArray_MultiIterNew&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;...&lt;/code&gt; ) is used (with &lt;code&gt;n&lt;/code&gt; input objects in place of &lt;code&gt;...&lt;/code&gt; ). The input objects can be arrays or anything that can be converted into an array. A pointer to a PyArrayMultiIterObject is returned. Broadcasting has already been accomplished which adjusts the iterators so that all that needs to be done to advance to the next element in each array is for PyArray_ITER_NEXT to be called for each of the inputs. This incrementing is automatically performed by &lt;a href=&quot;../reference/c-api/array#c.PyArray_MultiIter_NEXT&quot;&gt;&lt;code&gt;PyArray_MultiIter_NEXT&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;obj&lt;/code&gt; ) macro (which can handle a multiterator &lt;code&gt;obj&lt;/code&gt; as either a &lt;code&gt;PyArrayMultiObject *&lt;/code&gt; or a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt;). The data from input number &lt;code&gt;i&lt;/code&gt; is available using &lt;a href=&quot;../reference/c-api/array#c.PyArray_MultiIter_DATA&quot;&gt;&lt;code&gt;PyArray_MultiIter_DATA&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;obj&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt; ) and the total (broadcasted) size as &lt;code&gt;PyArray_MultiIter_SIZE&lt;/code&gt; ( &lt;code&gt;obj&lt;/code&gt;). An example of using this feature follows.</source>
          <target state="translated">複数の配列が操作に関係している場合、数学操作（&lt;em&gt;つまり&lt;/em&gt;、ufuncs）が使用するのと同じブロードキャストルールを使用することができます。これは、&lt;a href=&quot;../reference/c-api/types-and-structures#c.PyArrayMultiIterObject&quot;&gt; &lt;code&gt;PyArrayMultiIterObject&lt;/code&gt; &lt;/a&gt;を使用して簡単に実行できます。これはPythonコマンドnumpy.broadcastから返されるオブジェクトであり、Cから使用するのとほぼ同じくらい簡単です。関数&lt;a href=&quot;../reference/c-api/array#c.PyArray_MultiIterNew&quot;&gt; &lt;code&gt;PyArray_MultiIterNew&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;n&lt;/code&gt; 、 &lt;code&gt;...&lt;/code&gt; ）が使用されます（ &lt;code&gt;...&lt;/code&gt; の代わりに &lt;code&gt;n&lt;/code&gt; 個の入力オブジェクトが使用されます）。入力オブジェクトは、配列または配列に変換できるものであれば何でもかまいません。 PyArrayMultiIterObjectへのポインタが返されます。各配列の次の要素に進むために必要なのは、入力ごとにPyArray_ITER_NEXTが呼び出されるようにするために、イテレータを調整するブロードキャストはすでに完了しています。このインクリメントは、&lt;a href=&quot;../reference/c-api/array#c.PyArray_MultiIter_NEXT&quot;&gt; &lt;code&gt;PyArray_MultiIter_NEXT&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;obj&lt;/code&gt; ）マクロ（マルチ &lt;code&gt;PyArrayMultiObject *&lt;/code&gt; &lt;code&gt;obj&lt;/code&gt; をPyArrayMultiObject *または&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;として処理できます）によって自動的に実行されます。入力された番号からデータ &lt;code&gt;i&lt;/code&gt; を使用して利用可能である&lt;a href=&quot;../reference/c-api/array#c.PyArray_MultiIter_DATA&quot;&gt; &lt;code&gt;PyArray_MultiIter_DATA&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;obj&lt;/code&gt; 、 &lt;code&gt;i&lt;/code&gt; ）および合計（ブロードキャスト）サイズを &lt;code&gt;PyArray_MultiIter_SIZE&lt;/code&gt; （ &lt;code&gt;obj&lt;/code&gt; ）として。この機能の使用例を次に示します。</target>
        </trans-unit>
        <trans-unit id="36f72cd33b97d536492271e1edd9154022c923bc" translate="yes" xml:space="preserve">
          <source>When multiple examples are provided, they should be separated by blank lines. Comments explaining the examples should have blank lines both above and below them:</source>
          <target state="translated">複数の例が提供されている場合は、それらの例は空行で区切ってください。例を説明するコメントは、その上と下の両方に空行を入れてください。</target>
        </trans-unit>
        <trans-unit id="7c4c339ad493bfce465346e967265bb9c039f51a" translate="yes" xml:space="preserve">
          <source>When one of &lt;code&gt;actual&lt;/code&gt; and &lt;code&gt;desired&lt;/code&gt; is a scalar and the other is array_like, the function checks that each element of the array_like object is equal to the scalar.</source>
          <target state="translated">以下の場合 &lt;code&gt;actual&lt;/code&gt; と &lt;code&gt;desired&lt;/code&gt; スカラーであり、他のISはarray_likeオブジェクトの各要素はスカラーに等しいこと、機能チェックをarray_like。</target>
        </trans-unit>
        <trans-unit id="2eb53e9a562d149565801498a40e0d889c5c04ae" translate="yes" xml:space="preserve">
          <source>When one of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; is a scalar and the other is array_like, the function checks that each element of the array_like object is equal to the scalar.</source>
          <target state="translated">とき &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; スカラーであり、array_likeオブジェクトの各要素はスカラーに等しいことを他のISは、機能チェックをarray_like。</target>
        </trans-unit>
        <trans-unit id="63eda21eb7811aeacc325fcf56f657d21ccc05f4" translate="yes" xml:space="preserve">
          <source>When one or more of the arrays to be concatenated is a MaskedArray, this function will return a MaskedArray object instead of an ndarray, but the input masks are &lt;em&gt;not&lt;/em&gt; preserved. In cases where a MaskedArray is expected as input, use the ma.concatenate function from the masked array module instead.</source>
          <target state="translated">連結される1つ以上の配列がMaskedArrayである場合、この関数はndarrayではなくMaskedArrayオブジェクトを返しますが、入力マスクは保持され&lt;em&gt;ません&lt;/em&gt;。MaskedArrayが入力として期待される場合は、代わりに、マスクされた配列モジュールのma.concatenate関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="eccfc4e1a7be21e04b2017257495e340f746e64f" translate="yes" xml:space="preserve">
          <source>When only &lt;code&gt;condition&lt;/code&gt; is provided, this function is a shorthand for &lt;code&gt;np.asarray(condition).nonzero()&lt;/code&gt;. Using &lt;a href=&quot;numpy.nonzero#numpy.nonzero&quot;&gt;&lt;code&gt;nonzero&lt;/code&gt;&lt;/a&gt; directly should be preferred, as it behaves correctly for subclasses. The rest of this documentation covers only the case where all three arguments are provided.</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; のみが指定されている場合、この関数は &lt;code&gt;np.asarray(condition).nonzero()&lt;/code&gt; の省略形です。サブクラスに対して正しく動作するため、&lt;a href=&quot;numpy.nonzero#numpy.nonzero&quot;&gt; &lt;code&gt;nonzero&lt;/code&gt; &lt;/a&gt;直接使用することをお勧めします。このドキュメントの残りの部分では、3つの引数がすべて指定されている場合のみを扱います。</target>
        </trans-unit>
        <trans-unit id="b8419db09cea322048fba5bff5f136770a8b6713" translate="yes" xml:space="preserve">
          <source>When only &lt;code&gt;condition&lt;/code&gt; is provided, this function is identical to &lt;a href=&quot;numpy.ma.nonzero#numpy.ma.nonzero&quot;&gt;&lt;code&gt;nonzero&lt;/code&gt;&lt;/a&gt;. The rest of this documentation covers only the case where all three arguments are provided.</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; のみが指定されている場合、この関数は&lt;a href=&quot;numpy.ma.nonzero#numpy.ma.nonzero&quot;&gt; &lt;code&gt;nonzero&lt;/code&gt; &lt;/a&gt;と同じです。このドキュメントの残りの部分では、3つの引数がすべて指定されている場合のみを扱います。</target>
        </trans-unit>
        <trans-unit id="a83dea336fc44b86e10fe7d04631005f6869d53b" translate="yes" xml:space="preserve">
          <source>When opening the saved &lt;code&gt;.npz&lt;/code&gt; file with &lt;a href=&quot;numpy.load#numpy.load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; a &lt;code&gt;NpzFile&lt;/code&gt; object is returned. This is a dictionary-like object which can be queried for its list of arrays (with the &lt;code&gt;.files&lt;/code&gt; attribute), and for the arrays themselves.</source>
          <target state="translated">保存された &lt;code&gt;.npz&lt;/code&gt; ファイルを&lt;a href=&quot;numpy.load#numpy.load&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;で &lt;code&gt;NpzFile&lt;/code&gt; と、NpzFileオブジェクトが返されます。これは辞書のようなオブジェクトであり、配列のリスト（ &lt;code&gt;.files&lt;/code&gt; 属性を使用）および配列自体を照会できます。</target>
        </trans-unit>
        <trans-unit id="db678ddd8c249ca5b7124cc39a503e60a8883bd8" translate="yes" xml:space="preserve">
          <source>When operating and manipulating arrays, their data is sometimes copied into a new array and sometimes not. This is often a source of confusion for beginners. There are three cases:</source>
          <target state="translated">配列を操作したり操作したりするときに、そのデータが新しい配列にコピーされることもあれば、コピーされないこともあります。これは、初心者にとってはしばしば混乱の元となります。3つのケースがあります。</target>
        </trans-unit>
        <trans-unit id="db500670e369fb09767346f1ee93c96337acfc4a" translate="yes" xml:space="preserve">
          <source>When operating on two arrays, NumPy compares their shapes element-wise. It starts with the trailing dimensions and works its way forward. Two dimensions are compatible when</source>
          <target state="translated">2つの配列を操作するとき,NumPyはその形状を要素ごとに比較します.これは,後続の次元から始まり,その先の次元へと進んでいきます.2つの次元は,次の場合に互換性があります.</target>
        </trans-unit>
        <trans-unit id="991db5cc5ea188509eab7bddbbcf6ec194a1d9e5" translate="yes" xml:space="preserve">
          <source>When operating with arrays of different types, the type of the resulting array corresponds to the more general or precise one (a behavior known as upcasting).</source>
          <target state="translated">異なる型の配列を操作する場合,結果として得られる配列の型は,より一般的なものや正確なものに対応します(アップキャスティングと呼ばれる動作).</target>
        </trans-unit>
        <trans-unit id="26e6b9fa52377f35e02d57b8c33d212f74b50ae3" translate="yes" xml:space="preserve">
          <source>When order is &amp;lsquo;A&amp;rsquo; and &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; is an array in neither &amp;lsquo;C&amp;rsquo; nor &amp;lsquo;F&amp;rsquo; order, and a copy is forced by a change in dtype, then the order of the result is not necessarily &amp;lsquo;C&amp;rsquo; as expected. This is likely a bug.</source>
          <target state="translated">順序が 'A'で&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;が 'C'でも 'F'でもない配列で、dtypeの変更によってコピーが強制される場合、結果の順序は必ずしも期待どおり 'C'ではありません。これはおそらくバグです。</target>
        </trans-unit>
        <trans-unit id="5be535caa0bb6516144fc1de604b8372d3c9991d" translate="yes" xml:space="preserve">
          <source>When payments are due (&amp;lsquo;begin&amp;rsquo; (1) or &amp;lsquo;end&amp;rsquo; (0))</source>
          <target state="translated">支払い期限（ 'begin'（1）または 'end'（0））</target>
        </trans-unit>
        <trans-unit id="9149bcf3649f5259f262c786b3a7a6478a7a8e0f" translate="yes" xml:space="preserve">
          <source>When payments are due (&amp;lsquo;begin&amp;rsquo; (1) or &amp;lsquo;end&amp;rsquo; (0)). Defaults to {&amp;lsquo;end&amp;rsquo;, 0}.</source>
          <target state="translated">支払い期限（「開始」（1）または「終了」（0））。デフォルトは{'end'、0}です。</target>
        </trans-unit>
        <trans-unit id="6642df63420a359718ac20ea567420cbe3b18377" translate="yes" xml:space="preserve">
          <source>When performance is important for manipulating many business dates with one particular choice of weekmask and holidays, there is an object &lt;a href=&quot;generated/numpy.busdaycalendar#numpy.busdaycalendar&quot;&gt;&lt;code&gt;busdaycalendar&lt;/code&gt;&lt;/a&gt; which stores the data necessary in an optimized form.</source>
          <target state="translated">週マスクと休日の特定の1つの選択で多くのビジネス日付を操作するためにパフォーマンスが重要な場合、最適化された形式で必要なデータを格納するオブジェクト&lt;a href=&quot;generated/numpy.busdaycalendar#numpy.busdaycalendar&quot;&gt; &lt;code&gt;busdaycalendar&lt;/code&gt; &lt;/a&gt;があります。</target>
        </trans-unit>
        <trans-unit id="fd00b76d3636aeca15fb36d92b84ae47d7409ff3" translate="yes" xml:space="preserve">
          <source>When positive infinity and negative infinity are present:</source>
          <target state="translated">正の無限大と負の無限大がある場合</target>
        </trans-unit>
        <trans-unit id="bfd35400824f4bd78ecd5a9fec6a8610574752f0" translate="yes" xml:space="preserve">
          <source>When referring to an entirely different module:</source>
          <target state="translated">全く別のモジュールを参照する場合。</target>
        </trans-unit>
        <trans-unit id="b81236c338b918002d5b76ae218758bcc0c4f094" translate="yes" xml:space="preserve">
          <source>When referring to functions in the same sub-module, no prefix is needed, and the tree is searched upwards for a match.</source>
          <target state="translated">同じサブモジュール内の関数を参照する場合、接頭辞は不要で、ツリーは上向きに検索されます。</target>
        </trans-unit>
        <trans-unit id="de7c6f732a621082b328f0e10ba6ebce8f1a6e6b" translate="yes" xml:space="preserve">
          <source>When saving dictionaries, the dictionary keys become filenames inside the ZIP archive. Therefore, keys should be valid filenames. E.g., avoid keys that begin with &lt;code&gt;/&lt;/code&gt; or contain &lt;code&gt;.&lt;/code&gt;.</source>
          <target state="translated">辞書を保存するとき、辞書キーはZIPアーカイブ内のファイル名になります。したがって、キーは有効なファイル名である必要があります。たとえば、 &lt;code&gt;/&lt;/code&gt; で始まるキーや &lt;code&gt;.&lt;/code&gt; 含むキーは避けてください。。</target>
        </trans-unit>
        <trans-unit id="a563656ae79c2922818f2a82bafe22a75de09b5e" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;madvise&lt;/code&gt; NumPy will typically use hugepages for a performance boost. This behaviour can be modified by setting the environment variable:</source>
          <target state="translated">&lt;code&gt;madvise&lt;/code&gt; に設定すると、NumPyは通常、パフォーマンスを向上させるために巨大なページを使用します。この動作は、環境変数を設定することで変更できます。</target>
        </trans-unit>
        <trans-unit id="57212127eb9536990cda5db105b01bdf8367e735" translate="yes" xml:space="preserve">
          <source>When spaces are used as delimiters, or when no delimiter has been given as input, there should not be any missing data between two fields.</source>
          <target state="translated">スペースがデリミタとして使用されている場合、または入力としてデリミタが与えられていない場合、2つのフィールド間にデータの欠落があってはならない。</target>
        </trans-unit>
        <trans-unit id="4370d934ab543968b812927b0ca16a2cbda45f5d" translate="yes" xml:space="preserve">
          <source>When specifying a target using &lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;-t&lt;/code&gt;, or &lt;code&gt;--python&lt;/code&gt;, additional arguments may be forwarded to the target embedded by &lt;code&gt;runtests.py&lt;/code&gt; by passing the extra arguments after a bare &lt;code&gt;--&lt;/code&gt;. For example, to run a test method with the &lt;code&gt;--pdb&lt;/code&gt; flag forwarded to the target, run the following:</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 、 &lt;code&gt;-t&lt;/code&gt; 、または &lt;code&gt;--python&lt;/code&gt; を使用してターゲットを指定する場合、追加の引数は、裸の &lt;code&gt;--&lt;/code&gt; 後に追加の引数を渡すことにより、 &lt;code&gt;runtests.py&lt;/code&gt; によって埋め込まれたターゲットに転送される場合があります。たとえば、 &lt;code&gt;--pdb&lt;/code&gt; フラグをターゲットに転送してテストメソッドを実行するには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="de5db3a5e4bce528f298ed2c8c86e1143611c165" translate="yes" xml:space="preserve">
          <source>When storing a multi-byte value in memory as a sequence of bytes, the sequence addresses/sends/stores the least significant byte first (lowest address) and the most significant byte last (highest address). Common in x86 processors.</source>
          <target state="translated">マルチバイトの値をバイト列としてメモリに格納する場合、バイト列は、最下位のバイトの先頭(最下位アドレス)と最上位のバイトの最後(最上位アドレス)をアドレス/送信/格納します。x86プロセッサでは一般的。</target>
        </trans-unit>
        <trans-unit id="ea57d2031842d794e355da55aa4d649b5ca424d5" translate="yes" xml:space="preserve">
          <source>When storing a multi-byte value in memory as a sequence of bytes, the sequence addresses/sends/stores the most significant byte first (lowest address) and the least significant byte last (highest address). Common in micro-processors and used for transmission of data over network protocols.</source>
          <target state="translated">マルチバイト値をバイト列としてメモリに格納する場合、最も重要なバイトの先頭(最低アドレス)と、最も重要でないバイトの最後(最高アドレス)をアドレス/送信/格納します。マイクロプロセッサでは一般的で、ネットワークプロトコル上でのデータ伝送に使用されます。</target>
        </trans-unit>
        <trans-unit id="2c6d6090a315dc06167791d55632ca0e61a0eb7f" translate="yes" xml:space="preserve">
          <source>When studying hypothesis tests that assume normality, seeing how the tests perform on data from a Cauchy distribution is a good indicator of their sensitivity to a heavy-tailed distribution, since the Cauchy looks very much like a Gaussian distribution, but with heavier tails.</source>
          <target state="translated">正規性を仮定した仮説検定を研究するとき、コーキー分布からのデータで検定がどのように実行されるかを見ることは、コーキーがガウス分布に非常に似ているが、より重い尾を持つので、重い尾を持つ分布に対する感度の良い指標となります。</target>
        </trans-unit>
        <trans-unit id="4d6b9c752dcf618e14ab373ad09afb2c5aaf1513" translate="yes" xml:space="preserve">
          <source>When sub-classing &lt;code&gt;ndarray&lt;/code&gt; or creating duck-types that mimic the &lt;code&gt;ndarray&lt;/code&gt; interface, it is your responsibility to decide how aligned your APIs will be with those of numpy. For convenience, many numpy functions that have a corresponding &lt;code&gt;ndarray&lt;/code&gt; method (e.g., &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;mean&lt;/code&gt;, &lt;code&gt;take&lt;/code&gt;, &lt;code&gt;reshape&lt;/code&gt;) work by checking if the first argument to a function has a method of the same name. If it exists, the method is called instead of coercing the arguments to a numpy array.</source>
          <target state="translated">&lt;code&gt;ndarray&lt;/code&gt; をサブクラス化する場合、または &lt;code&gt;ndarray&lt;/code&gt; インターフェイスを模倣するduck-typeを作成する場合、APIをnumpyのAPIとどの程度整合させるかを決定するのはユーザーの責任です。便宜上、対応する必要があり、多くのnumpyの機能 &lt;code&gt;ndarray&lt;/code&gt; 方法（例えば、 &lt;code&gt;sum&lt;/code&gt; 、 &lt;code&gt;mean&lt;/code&gt; 、 &lt;code&gt;take&lt;/code&gt; 、 &lt;code&gt;reshape&lt;/code&gt; 関数の最初の引数が同じ名前のメソッドを持っているかどうかをチェックすることによって）仕事。存在する場合は、引数をnumpy配列に強制変換する代わりに、メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="83471109ed39b7eca8654b0b5b56f710df2f0ed6" translate="yes" xml:space="preserve">
          <source>When success (0 return value) is returned, either out_arr is filled with a non-NULL PyArrayObject and the rest of the parameters are untouched, or out_arr is filled with NULL, and the rest of the parameters are filled.</source>
          <target state="translated">成功(戻り値0)が返されると、out_arrはNULLではないPyArrayObjectで埋められ、残りのパラメータはそのままになるか、out_arrはNULLで埋められ、残りのパラメータは埋められるかのどちらかになります。</target>
        </trans-unit>
        <trans-unit id="c5848cbfcc751d6fb624a1cce409c076b5cc5302" translate="yes" xml:space="preserve">
          <source>When the &amp;ldquo;external_loop&amp;rdquo; was not used during construction, but is desired, this modifies the iterator to behave as if the flag was specified.</source>
          <target state="translated">「external_loop」が構築中に使用されなかったが望ましい場合、これにより、フラグが指定されたかのように動作するようにイテレーターが変更されます。</target>
        </trans-unit>
        <trans-unit id="a1da80e9817b29febb418ac2727dd8feb1e9ca57" translate="yes" xml:space="preserve">
          <source>When the &amp;ldquo;multi_index&amp;rdquo; flag was specified, this removes it, allowing the internal iteration structure to be optimized further.</source>
          <target state="translated">「multi_index」フラグが指定された場合、これによりフラグが削除され、内部反復構造をさらに最適化できるようになります。</target>
        </trans-unit>
        <trans-unit id="ea45d329df78eba717c22414db760106850fd424" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;axis&lt;/code&gt; keyword is specified an array of appropriate size is returned.</source>
          <target state="translated">ときに &lt;code&gt;axis&lt;/code&gt; キーワードが指定された適切なサイズの配列が返されます。</target>
        </trans-unit>
        <trans-unit id="3fdd0f5189c6dc8a23dfca9586f442b975510baf" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;axis&lt;/code&gt; keyword is used an array is returned.</source>
          <target state="translated">ときに &lt;code&gt;axis&lt;/code&gt; キーワードが使用されている配列が返されます。</target>
        </trans-unit>
        <trans-unit id="53c50ce51f38684cf2835cdea8b4002b8bbf92a8" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;c_index&lt;/code&gt; or &lt;code&gt;f_index&lt;/code&gt; flag was used, this property provides access to the index. Raises a ValueError if accessed and &lt;code&gt;has_index&lt;/code&gt; is False.</source>
          <target state="translated">場合 &lt;code&gt;c_index&lt;/code&gt; 又は &lt;code&gt;f_index&lt;/code&gt; フラグを使用し、このプロパティは、インデックスへのアクセスを提供します。アクセスされ、 &lt;code&gt;has_index&lt;/code&gt; がFalseの場合、ValueErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="76706b5098ca6b382b941c090b506c3f0587d432" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;multi_index&lt;/code&gt; flag was used, this property provides access to the index. Raises a ValueError if accessed accessed and &lt;code&gt;has_multi_index&lt;/code&gt; is False.</source>
          <target state="translated">とき &lt;code&gt;multi_index&lt;/code&gt; フラグが使用された、このプロパティは、インデックスへのアクセスを提供します。アクセスがアクセスされ、 &lt;code&gt;has_multi_index&lt;/code&gt; がFalseの場合、ValueErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="ac5d59cc3a2303eaecb29429bf707b0c3c3bedde" translate="yes" xml:space="preserve">
          <source>When the DFT is computed for purely real input, the output is Hermitian-symmetric, i.e. the negative frequency terms are just the complex conjugates of the corresponding positive-frequency terms, and the negative-frequency terms are therefore redundant. This function does not compute the negative frequency terms, and the length of the transformed axis of the output is therefore &lt;code&gt;n//2 + 1&lt;/code&gt;.</source>
          <target state="translated">DFTが純粋に実数の入力に対して計算される場合、出力はエルミート対称です。つまり、負の周波数項は対応する正の周波数項の複素共役にすぎないため、負の周波数項は冗長です。この関数は負の周波数項を計算しないため、出力の変換された軸の長さは &lt;code&gt;n//2 + 1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b75d1885e8ca13361f9bec6a445a1ba51b9a5271" translate="yes" xml:space="preserve">
          <source>When the committee (or a committee member) receives a report, they will first determine whether the report is about a clear and severe breach (as defined below). If so, immediate action needs to be taken in addition to the regular report handling process.</source>
          <target state="translated">委員会(または委員会委員)が報告書を受け取った場合、委員会はまず、その報告書が明確かつ重大な違反(以下に定義)に関す るものかどうかを判断する。もしそうであれば、通常の報告書処理プロセスに加えて、直ちに措置を講じる必要がある。</target>
        </trans-unit>
        <trans-unit id="d3d4a45bb9288ccb26e83539df4a7489dddcf142" translate="yes" xml:space="preserve">
          <source>When the data type of &lt;code&gt;a&lt;/code&gt; is longdouble or clongdouble, item() returns a scalar array object because there is no available Python scalar that would not lose information. Void arrays return a buffer object for item(), unless fields are defined, in which case a tuple is returned.</source>
          <target state="translated">データ・タイプとき利用可能なPythonのスカラーだろう失わない情報が存在しないため（）スカラー配列オブジェクトを返すlongdoubleまたはclongdouble、項目です。Void配列は、フィールドが定義されていない限り、item（）のバッファーオブジェクトを返します。その場合、タプルが返されます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d7c5ae7d2e5fed7aeaee002bc1ee17b1c24ba0a" translate="yes" xml:space="preserve">
          <source>When the dimension of the vector(s) in &lt;code&gt;a&lt;/code&gt; and/or &lt;code&gt;b&lt;/code&gt; does not equal 2 or 3.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; および/または &lt;code&gt;b&lt;/code&gt; のベクトルの次元が2または3に等しくない場合。</target>
        </trans-unit>
        <trans-unit id="dd1fba0c6bb426cf1f952081182426781d82c79b" translate="yes" xml:space="preserve">
          <source>When the error handling for a floating-point error (one of &amp;ldquo;divide&amp;rdquo;, &amp;ldquo;over&amp;rdquo;, &amp;ldquo;under&amp;rdquo;, or &amp;ldquo;invalid&amp;rdquo;) is set to &amp;lsquo;call&amp;rsquo; or &amp;lsquo;log&amp;rsquo;, the function that is called or the log instance that is written to is returned by &lt;a href=&quot;#numpy.geterrcall&quot;&gt;&lt;code&gt;geterrcall&lt;/code&gt;&lt;/a&gt;. This function or log instance has been set with &lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt;&lt;code&gt;seterrcall&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">浮動小数点エラーのエラー処理（「divide」、「over」、「under」、または「invalid」のいずれか）が「call」または「log」に設定されている場合、呼び出される関数またはログインスタンス書き込まれたものは&lt;a href=&quot;#numpy.geterrcall&quot;&gt; &lt;code&gt;geterrcall&lt;/code&gt; &lt;/a&gt;によって返されます。この関数またはログイン&lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt; &lt;code&gt;seterrcall&lt;/code&gt; &lt;/a&gt;、seterrcallで設定されています。</target>
        </trans-unit>
        <trans-unit id="3a105e739e37e79639871fe00f74a7608f41e18f" translate="yes" xml:space="preserve">
          <source>When the flag &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt;&lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt;&lt;/a&gt; is used, the code needs to know the parameters for doing the inner loop. These functions provide that information.</source>
          <target state="translated">フラグ&lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt; &lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt; &lt;/a&gt;を使用する場合、コードは内部ループを実行するためのパラメーターを知っている必要があります。これらの関数はその情報を提供します。</target>
        </trans-unit>
        <trans-unit id="a3b33dbd60831369f7fef62a2b038dc2ad278fa8" translate="yes" xml:space="preserve">
          <source>When the flags attribute is retrieved from Python, a special builtin object of this type is constructed. This special type makes it easier to work with the different flags by accessing them as attributes or by accessing them as if the object were a dictionary with the flag names as entries.</source>
          <target state="translated">flags属性がPythonから取得されると、この型の特別な組み込みオブジェクトが構築されます。この特別な型は、属性としてアクセスしたり、オブジェクトがフラグ名をエントリとして持つ辞書であるかのようにアクセスしたりすることで、さまざまなフラグの操作をより簡単にします。</target>
        </trans-unit>
        <trans-unit id="6997b127e257f2d9de0f0028a03e8903521c7172" translate="yes" xml:space="preserve">
          <source>When the index consists of as many integer arrays as the array being indexed has dimensions, the indexing is straight forward, but different from slicing.</source>
          <target state="translated">インデックスを作成する配列が次元を持つ整数配列の数だけインデックスが構成されている場合、インデックス作成は簡単ですが、スライスとは異なります。</target>
        </trans-unit>
        <trans-unit id="74a8e0eaba5b1fd886e8897754dffe2e69872867" translate="yes" xml:space="preserve">
          <source>When the indexed array &lt;code&gt;a&lt;/code&gt; is multidimensional, a single array of indices refers to the first dimension of &lt;code&gt;a&lt;/code&gt;. The following example shows this behavior by converting an image of labels into a color image using a palette.</source>
          <target state="translated">インデックス付き配列 &lt;code&gt;a&lt;/code&gt; が多次元の場合、インデックスの単一配列はaの最初の次元を参照 &lt;code&gt;a&lt;/code&gt; ます。次の例は、パレットを使用してラベルの画像をカラー画像に変換することにより、この動作を示しています。</target>
        </trans-unit>
        <trans-unit id="e3539c51a85d030896869c59fab4a3546a18e92e" translate="yes" xml:space="preserve">
          <source>When the input &lt;code&gt;a&lt;/code&gt; is a time-domain signal and &lt;code&gt;A = fft(a)&lt;/code&gt;, &lt;code&gt;np.abs(A)&lt;/code&gt; is its amplitude spectrum and &lt;code&gt;np.abs(A)**2&lt;/code&gt; is its power spectrum. The phase spectrum is obtained by &lt;code&gt;np.angle(A)&lt;/code&gt;.</source>
          <target state="translated">入力 &lt;code&gt;a&lt;/code&gt; が時間領域信号で &lt;code&gt;A = fft(a)&lt;/code&gt; 場合、 &lt;code&gt;np.abs(A)&lt;/code&gt; はその振幅スペクトルで、 &lt;code&gt;np.abs(A)**2&lt;/code&gt; はそのパワースペクトルです。位相スペクトルは &lt;code&gt;np.angle(A)&lt;/code&gt; によって取得されます。</target>
        </trans-unit>
        <trans-unit id="1367f160bbb5fedd65e0cbb76f7f60e11a8156e2" translate="yes" xml:space="preserve">
          <source>When the input and output arrays are aligned and of the correct type, but the striding is not uniform (non-contiguous and 2-D or larger), then a second looping structure is employed for the calculation. This approach converts all of the iterators for the input and output arguments to iterate over all but the largest dimension. The inner loop is then handled by the underlying 1-D computational loop. The outer loop is a standard iterator loop on the converted iterators. The hardware error flags are checked after each 1-D loop is completed.</source>
          <target state="translated">入力配列と出力配列が正しい型に整列されているが,ストライドが一様ではない場合(非連続で2次元以上),2番目のループ構造が計算に採用されます.このアプローチでは,入力と出力の引数に対するすべてのイテレータを変換して,最大次元を除くすべての次元を反復処理します.内側のループは、基礎となる1次元計算ループによって処理されます。外側のループは、変換されたイテレータ上の標準的なイテレータループです。ハードウェアエラーフラグは、各1次元ループが完了した後にチェックされます。</target>
        </trans-unit>
        <trans-unit id="34e3c1c18b6a533eb7d5554f7595a67b84951780" translate="yes" xml:space="preserve">
          <source>When the input is purely real, its transform is Hermitian, i.e., the component at frequency</source>
          <target state="translated">入力が純粋に実数である場合,その変換はエルミトス式であり,すなわち,周波数</target>
        </trans-unit>
        <trans-unit id="52b34b95d5e176ad47f62260446b195804a6cada" translate="yes" xml:space="preserve">
          <source>When the length of 1D &lt;code&gt;weights&lt;/code&gt; is not the same as the shape of &lt;code&gt;a&lt;/code&gt; along axis.</source>
          <target state="translated">場合1次元の長さ &lt;code&gt;weights&lt;/code&gt; の形状と同じではないに沿って軸。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af1eaf8889fe184a62b6fd5a964889299281ae31" translate="yes" xml:space="preserve">
          <source>When the nested list is two levels deep, this allows block matrices to be constructed from their components.</source>
          <target state="translated">入れ子になったリストが2レベル深い場合、これにより、ブロック行列をその構成要素から構築することができます。</target>
        </trans-unit>
        <trans-unit id="e5f5bbbcfb6705ce5d9a02195d69308545da2c5f" translate="yes" xml:space="preserve">
          <source>When the optional keys &lt;em&gt;offsets&lt;/em&gt; and &lt;em&gt;titles&lt;/em&gt; are provided, their values must each be lists of the same length as the &lt;em&gt;names&lt;/em&gt; and &lt;em&gt;formats&lt;/em&gt; lists. The &lt;em&gt;offsets&lt;/em&gt; value is a list of byte offsets (limited to &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.c_int&quot;&gt;&lt;code&gt;ctypes.c_int&lt;/code&gt;&lt;/a&gt;) for each field, while the &lt;em&gt;titles&lt;/em&gt; value is a list of titles for each field (&lt;code&gt;None&lt;/code&gt; can be used if no title is desired for that field). The &lt;em&gt;titles&lt;/em&gt; can be any &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt; object and will add another entry to the fields dictionary keyed by the title and referencing the same field tuple which will contain the title as an additional tuple member.</source>
          <target state="translated">オプションのキー&lt;em&gt;オフセット&lt;/em&gt;と&lt;em&gt;タイトルを指定&lt;/em&gt;する場合、それらの値はそれぞれ、&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;フォーマットの&lt;/em&gt;リストと同じ長さのリストでなければなりません。&lt;em&gt;オフセット&lt;/em&gt;値はバイトオフセット（これらに限定されのリストである&lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.c_int&quot;&gt; &lt;code&gt;ctypes.c_int&lt;/code&gt; &lt;/a&gt;ながら、各フィールドの）&lt;em&gt;タイトル&lt;/em&gt;値が各フィールドのタイトルのリスト（ある &lt;code&gt;None&lt;/code&gt; ないタイトルがそのフィールドのために所望されていない場合に使用できません）。&lt;em&gt;タイトルの&lt;/em&gt;いずれかであることができる &lt;code&gt;string&lt;/code&gt; または &lt;code&gt;unicode&lt;/code&gt; オブジェクトおよびフィールドに別のエントリを追加するには、タイトルをキーと追加のタプル部材としてタイトルを含むであろう同じフィールドタプルを参照する辞書。</target>
        </trans-unit>
        <trans-unit id="fe8737aa96b92cabf0904a91af144d1939eed308" translate="yes" xml:space="preserve">
          <source>When the optional keys &lt;em&gt;offsets&lt;/em&gt; and &lt;em&gt;titles&lt;/em&gt; are provided, their values must each be lists of the same length as the &lt;em&gt;names&lt;/em&gt; and &lt;em&gt;formats&lt;/em&gt; lists. The &lt;em&gt;offsets&lt;/em&gt; value is a list of byte offsets (limited to &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.c_int&quot;&gt;&lt;code&gt;ctypes.c_int&lt;/code&gt;&lt;/a&gt;) for each field, while the &lt;em&gt;titles&lt;/em&gt; value is a list of titles for each field (None can be used if no title is desired for that field). The &lt;em&gt;titles&lt;/em&gt; can be any &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt; object and will add another entry to the fields dictionary keyed by the title and referencing the same field tuple which will contain the title as an additional tuple member.</source>
          <target state="translated">オプションのキー&lt;em&gt;オフセット&lt;/em&gt;と&lt;em&gt;タイトルを指定&lt;/em&gt;する場合、それらの値はそれぞれ、&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;フォーマットの&lt;/em&gt;リストと同じ長さのリストである必要があります。&lt;em&gt;オフセット&lt;/em&gt;値はバイトオフセット（これらに限定されのリストである&lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.c_int&quot;&gt; &lt;code&gt;ctypes.c_int&lt;/code&gt; &lt;/a&gt;ながら、各フィールドの）&lt;em&gt;タイトル&lt;/em&gt;値が各フィールドのタイトルのリスト（タイトルがそのフィールドのために所望されていない場合はどれも使用できない）です。&lt;em&gt;タイトルの&lt;/em&gt;いずれかであることができる &lt;code&gt;string&lt;/code&gt; または &lt;code&gt;unicode&lt;/code&gt; オブジェクトおよびフィールドに別のエントリを追加するには、タイトルをキーと追加のタプル部材としてタイトルを含むであろう同じフィールドタプルを参照する辞書。</target>
        </trans-unit>
        <trans-unit id="0c89441828aa0daf46fb0989feeaa96e8f46c4c3" translate="yes" xml:space="preserve">
          <source>When the result of an advanced indexing operation has no elements but an individual index is out of bounds, whether or not an &lt;code&gt;IndexError&lt;/code&gt; is raised is undefined (e.g. &lt;code&gt;x[[], [123]]&lt;/code&gt; with &lt;code&gt;123&lt;/code&gt; being out of bounds).</source>
          <target state="translated">高度なインデックス作成操作の結果に要素がなく、個々のインデックスが範囲外である場合、 &lt;code&gt;IndexError&lt;/code&gt; が発生するかどうかは定義されていません（たとえば、 &lt;code&gt;x[[], [123]]&lt;/code&gt; 、 &lt;code&gt;123&lt;/code&gt; は範囲外）。</target>
        </trans-unit>
        <trans-unit id="a8285d0cb4c35abac624d1adebd2fa89972bd5bd" translate="yes" xml:space="preserve">
          <source>When the variables are named (either by a flexible dtype or with &lt;code&gt;names&lt;/code&gt;), there must not be any header in the file (else a ValueError exception is raised).</source>
          <target state="translated">変数に名前を付ける場合（柔軟なdtypeまたは &lt;code&gt;names&lt;/code&gt; ）、ファイルにヘッダーがあってはなりません（そうでない場合、ValueError例外が発生します）。</target>
        </trans-unit>
        <trans-unit id="cb9d5c54f477f497096e6733fd299984beb835c4" translate="yes" xml:space="preserve">
          <source>When the variables are named (either by a flexible dtype or with &lt;code&gt;names&lt;/code&gt;, there must not be any header in the file (else a ValueError exception is raised).</source>
          <target state="translated">変数に名前が付けられている場合（柔軟なdtypeまたは &lt;code&gt;names&lt;/code&gt; のいずれかで）、ファイルにヘッダーがあってはなりません（そうでない場合、ValueError例外が発生します）。</target>
        </trans-unit>
        <trans-unit id="545b6ed903baa5a5144eaa7b81c5d5357b7f3721" translate="yes" xml:space="preserve">
          <source>When the wheels have all been successfully built, download them using the &lt;code&gt;wheel-uploader&lt;/code&gt; in the &lt;code&gt;terryfy&lt;/code&gt; repository. The terryfy repository may be cloned from &lt;a href=&quot;https://github.com/MacPython/terryfy&quot;&gt;https://github.com/MacPython/terryfy&lt;/a&gt; if you don&amp;rsquo;t already have it. The wheels can also be uploaded using the &lt;code&gt;wheel-uploader&lt;/code&gt;, but we prefer to download all the wheels to the &lt;code&gt;../numpy/release/installers&lt;/code&gt; directory and upload later using &lt;code&gt;twine&lt;/code&gt;:</source>
          <target state="translated">ホイールは、すべて正常にビルドされている場合は、使用してそれらをダウンロードし &lt;code&gt;wheel-uploader&lt;/code&gt; して &lt;code&gt;terryfy&lt;/code&gt; リポジトリ。terryfyリポジトリは、まだ持っていない場合は&lt;a href=&quot;https://github.com/MacPython/terryfy&quot;&gt;https://github.com/MacPython/terryfy&lt;/a&gt;から複製できます。ホイールは &lt;code&gt;wheel-uploader&lt;/code&gt; を使用してアップロードすることもできますが、すべてのホイールを &lt;code&gt;../numpy/release/installers&lt;/code&gt; ディレクトリにダウンロードし、後でより糸を使用してアップロードすることをお勧めし &lt;code&gt;twine&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ce6824829e37ca585156c8e8abdeb7e7047b4a6" translate="yes" xml:space="preserve">
          <source>When there is at least one slice (&lt;code&gt;:&lt;/code&gt;), ellipsis (&lt;code&gt;...&lt;/code&gt;) or &lt;a href=&quot;constants#numpy.newaxis&quot;&gt;&lt;code&gt;newaxis&lt;/code&gt;&lt;/a&gt; in the index (or the array has more dimensions than there are advanced indexes), then the behaviour can be more complicated. It is like concatenating the indexing result for each advanced index element</source>
          <target state="translated">（そこに少なくとも一つのスライスである場合 &lt;code&gt;:&lt;/code&gt; ）、省略記号（ &lt;code&gt;...&lt;/code&gt; ）または&lt;a href=&quot;constants#numpy.newaxis&quot;&gt; &lt;code&gt;newaxis&lt;/code&gt; &lt;/a&gt;インデックスに（又はアレイは、高度なインデックスよりも多くの寸法を有する）、次いで、動作はより複雑にすることができます。これは、各高度なインデックス要素のインデックス結果を連結するようなものです</target>
        </trans-unit>
        <trans-unit id="7fc05435c156ef19015ca040276948a66576f250" translate="yes" xml:space="preserve">
          <source>When there is more than one axis to sum over - and they are not the last (first) axes of &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;b&lt;/code&gt;) - the argument &lt;code&gt;axes&lt;/code&gt; should consist of two sequences of the same length, with the first axis to sum over given first in both sequences, the second axis second, and so forth.</source>
          <target state="translated">合計する複数の軸があり、それらが &lt;code&gt;a&lt;/code&gt; （ &lt;code&gt;b&lt;/code&gt; ）の最後の（最初の）軸ではない場合、引数の &lt;code&gt;axes&lt;/code&gt; は同じ長さの2つのシーケンスで構成され、最初に合計する最初の軸が最初に与えられます。両方のシーケンス、2番目の軸、2番目など。</target>
        </trans-unit>
        <trans-unit id="aca72761c1059e14a576d5243f55b005214eb5e7" translate="yes" xml:space="preserve">
          <source>When there is only one operand, no axes are summed, and no output parameter is provided, a view into the operand is returned instead of a new array. Thus, taking the diagonal as &lt;code&gt;np.einsum('ii-&amp;gt;i', a)&lt;/code&gt; produces a view (changed in version 1.10.0).</source>
          <target state="translated">オペランドが1つしかない場合、軸は合計されず、出力パラメーターも提供されない場合、新しい配列の代わりにオペランドのビューが返されます。したがって、対角線を &lt;code&gt;np.einsum('ii-&amp;gt;i', a)&lt;/code&gt; すると、ビューが生成されます（バージョン1.10.0で変更）。</target>
        </trans-unit>
        <trans-unit id="d6560fa9a8a1164ba82db1ff6a46fb84089bde5d" translate="yes" xml:space="preserve">
          <source>When true, the resulting &lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt; can contain Unicode characters, when false only 8-bit characters. If unicode is &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;obj&lt;/code&gt; is one of the following:</source>
          <target state="translated">trueの場合、結果の&lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; に&lt;/a&gt;はUnicode文字を含めることができます。falseの場合、8ビット文字のみを含めることができます。unicodeが &lt;code&gt;None&lt;/code&gt; で、 &lt;code&gt;obj&lt;/code&gt; が次のいずれかである場合：</target>
        </trans-unit>
        <trans-unit id="65b8be94d25ee5071fb62b957f74c26a7a160de6" translate="yes" xml:space="preserve">
          <source>When true, the resulting &lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt; can contain Unicode characters, when false only 8-bit characters. If unicode is None and &lt;code&gt;obj&lt;/code&gt; is one of the following:</source>
          <target state="translated">trueの場合、結果の&lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; に&lt;/a&gt;はUnicode文字を含めることができ、falseの場合は8ビット文字のみを含めることができます。unicodeがNoneで、 &lt;code&gt;obj&lt;/code&gt; が次のいずれかである場合：</target>
        </trans-unit>
        <trans-unit id="a283e044d3ebfd4430bd993011e5610365921585" translate="yes" xml:space="preserve">
          <source>When true, the resulting &lt;code&gt;chararray&lt;/code&gt; can contain Unicode characters, when false only 8-bit characters. If unicode is &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;obj&lt;/code&gt; is one of the following:</source>
          <target state="translated">trueの場合、結果の &lt;code&gt;chararray&lt;/code&gt; にはUnicode文字を含めることができます。falseの場合、8ビット文字のみを含めることができます。unicodeが &lt;code&gt;None&lt;/code&gt; で、 &lt;code&gt;obj&lt;/code&gt; が次のいずれかである場合：</target>
        </trans-unit>
        <trans-unit id="f2245dda0193d47132d217a15baacd8d95efb40d" translate="yes" xml:space="preserve">
          <source>When true, the resulting &lt;code&gt;chararray&lt;/code&gt; can contain Unicode characters, when false only 8-bit characters. If unicode is None and &lt;code&gt;obj&lt;/code&gt; is one of the following:</source>
          <target state="translated">trueの場合、結果の &lt;code&gt;chararray&lt;/code&gt; にはUnicode文字を含めることができ、falseの場合は8ビット文字のみを含めることができます。unicodeがNoneで、 &lt;code&gt;obj&lt;/code&gt; が次のいずれかである場合：</target>
        </trans-unit>
        <trans-unit id="d546b1cbadc8d553f3a2c608a6a9f37844d1cc07" translate="yes" xml:space="preserve">
          <source>When two or more input parameters have exactly the same type, shape and description, they can be combined:</source>
          <target state="translated">2つ以上の入力パラメータが全く同じタイプ、形状、記述を持つ場合、それらを組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="ec3e52986ad6366d7a0f302f7264cd3302d4a4d7" translate="yes" xml:space="preserve">
          <source>When used as a command line tool, &lt;code&gt;f2py&lt;/code&gt; has three major modes, distinguished by the usage of &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;-h&lt;/code&gt; switches:</source>
          <target state="translated">コマンドラインツールとして使用する場合、 &lt;code&gt;f2py&lt;/code&gt; には3つの主要なモードがあり、 &lt;code&gt;-c&lt;/code&gt; および &lt;code&gt;-h&lt;/code&gt; スイッチの使用によって区別されます。</target>
        </trans-unit>
        <trans-unit id="a2f6bc6ae79777087ef9f135d7de551097f22c0d" translate="yes" xml:space="preserve">
          <source>When used inside &lt;code&gt;&amp;lt;routine signature&amp;gt;&lt;/code&gt;, then given C code will be inserted to the corresponding wrapper function just after declaring variables but before any C statements. So, &lt;code&gt;usercode&lt;/code&gt; follow-up can contain both declarations and C statements.</source>
          <target state="translated">&lt;code&gt;&amp;lt;routine signature&amp;gt;&lt;/code&gt; 内で使用すると、指定されたCコードは、変数を宣言した直後で、Cステートメントの前に対応するラッパー関数に挿入されます。したがって、 &lt;code&gt;usercode&lt;/code&gt; フォローアップには、宣言とCステートメントの両方を含めることができます。</target>
        </trans-unit>
        <trans-unit id="596f3568b1167a9a713a0235333d3a0c34a92814" translate="yes" xml:space="preserve">
          <source>When used inside &lt;code&gt;python module&lt;/code&gt; block, then given C code will be inserted to generated C/API source just before wrapper function definitions. Here you can define arbitrary C functions to be used in initialization of optional arguments, for example. If &lt;code&gt;usercode&lt;/code&gt; is used twice inside &lt;code&gt;python
module&lt;/code&gt; block then the second multiline block is inserted after the definition of external routines.</source>
          <target state="translated">&lt;code&gt;python module&lt;/code&gt; ブロック内で使用すると、指定されたCコードが、ラッパー関数定義の直前に生成されたC / APIソースに挿入されます。ここでは、たとえば、オプションの引数の初期化に使用される任意のC関数を定義できます。 &lt;code&gt;usercode&lt;/code&gt; が &lt;code&gt;python module&lt;/code&gt; ブロック内で2回使用される場合、2番目の複数行ブロックが外部ルーチンの定義の後に挿入されます。</target>
        </trans-unit>
        <trans-unit id="80e1b4b5cbc8b59436318942fdcb6ca6f33e723e" translate="yes" xml:space="preserve">
          <source>When used inside the first &lt;code&gt;interface&lt;/code&gt; block, then given C code will be inserted at the end of the initialization function of the extension module. Here you can modify extension modules dictionary. For example, for defining additional variables etc.</source>
          <target state="translated">最初の &lt;code&gt;interface&lt;/code&gt; ブロック内で使用すると、指定されたCコードが拡張モジュールの初期化関数の最後に挿入されます。ここで、拡張モジュール辞書を変更できます。たとえば、追加の変数を定義するためなど。</target>
        </trans-unit>
        <trans-unit id="436bc3d73aa6565d86aefabb54c9292e559b97a5" translate="yes" xml:space="preserve">
          <source>When used interactively with an object, &lt;code&gt;np.info(obj)&lt;/code&gt; is equivalent to &lt;code&gt;help(obj)&lt;/code&gt; on the Python prompt or &lt;code&gt;obj?&lt;/code&gt; on the IPython prompt.</source>
          <target state="translated">オブジェクトとインタラクティブに使用される場合、 &lt;code&gt;np.info(obj)&lt;/code&gt; は、Pythonプロンプトまたは &lt;code&gt;obj?&lt;/code&gt; の &lt;code&gt;help(obj)&lt;/code&gt; と同等です。IPythonプロンプトで。</target>
        </trans-unit>
        <trans-unit id="59366ede5c94f784128a0963e5498e4128255217" translate="yes" xml:space="preserve">
          <source>When used with arrays as arguments, &lt;a href=&quot;../reference/generated/numpy.r_#numpy.r_&quot;&gt;&lt;code&gt;r_&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/generated/numpy.c_#numpy.c_&quot;&gt;&lt;code&gt;c_&lt;/code&gt;&lt;/a&gt; are similar to &lt;a href=&quot;../reference/generated/numpy.vstack#numpy.vstack&quot;&gt;&lt;code&gt;vstack&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/generated/numpy.hstack#numpy.hstack&quot;&gt;&lt;code&gt;hstack&lt;/code&gt;&lt;/a&gt; in their default behavior, but allow for an optional argument giving the number of the axis along which to concatenate.</source>
          <target state="translated">配列を引数として使用する場合、&lt;a href=&quot;../reference/generated/numpy.r_#numpy.r_&quot;&gt; &lt;code&gt;r_&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../reference/generated/numpy.c_#numpy.c_&quot;&gt; &lt;code&gt;c_&lt;/code&gt; &lt;/a&gt;はデフォルトの動作で&lt;a href=&quot;../reference/generated/numpy.vstack#numpy.vstack&quot;&gt; &lt;code&gt;vstack&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../reference/generated/numpy.hstack#numpy.hstack&quot;&gt; &lt;code&gt;hstack&lt;/code&gt; &lt;/a&gt;に似ていますが、連結する軸の番号を指定するオプションの引数を使用できます。</target>
        </trans-unit>
        <trans-unit id="29f0905c43c5dc57dbedbc6c77600c829150dde0" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;http://www.sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt; in combination with the numpy conventions, you should use the &lt;code&gt;numpydoc&lt;/code&gt; extension so that your docstrings will be handled correctly. For example, Sphinx will extract the &lt;code&gt;Parameters&lt;/code&gt; section from your docstring and convert it into a field list. Using &lt;code&gt;numpydoc&lt;/code&gt; will also avoid the reStructuredText errors produced by plain Sphinx when it encounters numpy docstring conventions like section headers (e.g. &lt;code&gt;-------------&lt;/code&gt;) that sphinx does not expect to find in docstrings.</source>
          <target state="translated">使用するときは&lt;a href=&quot;http://www.sphinx-doc.org/&quot;&gt;スフィンクスを&lt;/a&gt;numpyの規則と組み合わせて、あなたが使用する必要があります &lt;code&gt;numpydoc&lt;/code&gt; のあなたのドキュメンテーション文字列が正しく処理されるように拡張します。たとえば、Sphinxはdocstringから &lt;code&gt;Parameters&lt;/code&gt; セクションを抽出し、それをフィールドリストに変換します。 &lt;code&gt;numpydoc&lt;/code&gt; を使用すると、sphinxがdocstringで見つけることを期待していないセクションヘッダー（例： &lt;code&gt;-------------&lt;/code&gt; ）のようなnumpy docstring規則に遭遇したときに、プレーンSphinxによって生成されるreStructuredTextエラーも回避されます。</target>
        </trans-unit>
        <trans-unit id="12d8af6e4436a72ae5774609dfe31b0219205b6b" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;distutils&lt;/code&gt;, for example in &lt;code&gt;setup.py&lt;/code&gt;.</source>
          <target state="translated">たとえば &lt;code&gt;setup.py&lt;/code&gt; で &lt;code&gt;distutils&lt;/code&gt; を使用する場合。</target>
        </trans-unit>
        <trans-unit id="a8bcdc54785df618c23c01dc97dc1468fe9c49c4" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;jumped&lt;/code&gt;, one does have to take care not to jump to a stream that was already used. In the above example, one could not later use &lt;code&gt;blocked_rng[0].jumped()&lt;/code&gt; as it would overlap with &lt;code&gt;blocked_rng[1]&lt;/code&gt;. Like with the independent streams, if the main process here wants to split off 10 more streams by jumping, then it needs to start with &lt;code&gt;range(10, 20)&lt;/code&gt;, otherwise it would recreate the same streams. On the other hand, if you carefully construct the streams, then you are guaranteed to have streams that do not overlap.</source>
          <target state="translated">&lt;code&gt;jumped&lt;/code&gt; を使用する場合、すでに使用されているストリームにジャンプしないように注意する必要があります。上記の例では、 &lt;code&gt;blocked_rng[1]&lt;/code&gt; と重複するため、 &lt;code&gt;blocked_rng[0].jumped()&lt;/code&gt; を後で使用することはできません。独立したストリームと同様に、ここでメインプロセスがジャンプによってさらに10個のストリームを分割する場合は、 &lt;code&gt;range(10, 20)&lt;/code&gt; から開始する必要があります。そうでない場合は、同じストリームを再作成します。一方、ストリームを注意深く作成すると、ストリームがオーバーラップしないことが保証されます。</target>
        </trans-unit>
        <trans-unit id="724bc629cdbfec6a4e5af9a220d38930424c297d" translate="yes" xml:space="preserve">
          <source>When using a non-integer step, such as 0.1, the results will often not be consistent. It is better to use &lt;a href=&quot;numpy.linspace#numpy.linspace&quot;&gt;&lt;code&gt;numpy.linspace&lt;/code&gt;&lt;/a&gt; for these cases.</source>
          <target state="translated">0.1などの整数以外のステップを使用すると、結果に一貫性がなくなることがよくあります。このような場合は、&lt;a href=&quot;numpy.linspace#numpy.linspace&quot;&gt; &lt;code&gt;numpy.linspace&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="27718ed960a95a721b47ff1931021ed4073bbe48" translate="yes" xml:space="preserve">
          <source>When using a string for &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; it is possible to get multiple results.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;に文字列を使用すると、複数の結果が得られる可能性があります。</target>
        </trans-unit>
        <trans-unit id="4483d4c2e345ca8073aa1a9817270cc3cdb40e82" translate="yes" xml:space="preserve">
          <source>When using a subclass (especially one which manipulates its shape), the default &lt;code&gt;ndarray.__setitem__&lt;/code&gt; behaviour will call &lt;code&gt;__getitem__&lt;/code&gt; for &lt;em&gt;basic&lt;/em&gt; indexing but not for &lt;em&gt;advanced&lt;/em&gt; indexing. For such a subclass it may be preferable to call &lt;code&gt;ndarray.__setitem__&lt;/code&gt; with a &lt;em&gt;base class&lt;/em&gt; ndarray view on the data. This &lt;em&gt;must&lt;/em&gt; be done if the subclasses &lt;code&gt;__getitem__&lt;/code&gt; does not return views.</source>
          <target state="translated">サブクラス（特にその形状を操作するクラス）を使用する場合、デフォルトの &lt;code&gt;ndarray.__setitem__&lt;/code&gt; 動作は、&lt;em&gt;基本的な&lt;/em&gt;インデックス作成では &lt;code&gt;__getitem__&lt;/code&gt; を呼び出しますが、&lt;em&gt;高度&lt;/em&gt;&lt;em&gt;な&lt;/em&gt;インデックス作成では呼び出しません。そのようなサブクラスのために呼び出すことが好ましいかもしれない &lt;code&gt;ndarray.__setitem__&lt;/code&gt; と&lt;em&gt;ベースクラス&lt;/em&gt;データにndarray図。これ&lt;em&gt;は&lt;/em&gt;、サブクラス &lt;code&gt;__getitem__&lt;/code&gt; がビューを返さない場合に実行する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc311b69f41b3e0c41508f3b081d2280ad7970ec" translate="yes" xml:space="preserve">
          <source>When using broadcasting with uint64 dtypes, the maximum value (2**64) cannot be represented as a standard integer type. The high array (or low if high is None) must have object dtype, e.g., array([2**64]).</source>
          <target state="translated">uint64のdtypeを持つブロードキャストを使用する場合、最大値(2**64)を標準の整数型として表現することはできません。high配列(highがNoneの場合はlow)は、array([2**64])などのオブジェクトdtypeを持たなければなりません。</target>
        </trans-unit>
        <trans-unit id="23e3eec66bc7d3437b52c086371fd6ea153ed9c6" translate="yes" xml:space="preserve">
          <source>When using pytest as a target (the default), you can &lt;a href=&quot;https://docs.pytest.org/en/latest/usage.html#specifying-tests-selecting-tests&quot;&gt;match test names using python operators&lt;/a&gt; by passing the &lt;code&gt;-k&lt;/code&gt; argument to pytest:</source>
          <target state="translated">pytestをターゲット（デフォルト）として使用する場合、&lt;a href=&quot;https://docs.pytest.org/en/latest/usage.html#specifying-tests-selecting-tests&quot;&gt;Python演算子を使用してテスト名を照合&lt;/a&gt;するには、 &lt;code&gt;-k&lt;/code&gt; 引数をpytestに渡します。</target>
        </trans-unit>
        <trans-unit id="c04978427f46ec116ad24550bbf1c67bfbb16f61" translate="yes" xml:space="preserve">
          <source>When using signed integer types the result is the two&amp;rsquo;s complement of the result for the unsigned type:</source>
          <target state="translated">符号付き整数型を使用する場合、結果は符号なし型の結果の2の補数になります。</target>
        </trans-unit>
        <trans-unit id="453da0e9bd45f20742c660821d0bef0203dd876c" translate="yes" xml:space="preserve">
          <source>When using the first form of dictionary-based specification, the titles may be supplied as an extra &lt;code&gt;'titles'&lt;/code&gt; key as described above. When using the second (discouraged) dictionary-based specification, the title can be supplied by providing a 3-element tuple &lt;code&gt;(datatype, offset, title)&lt;/code&gt; instead of the usual 2-element tuple:</source>
          <target state="translated">辞書ベースの仕様の最初の形式を使用する場合、タイトルは、上記のように追加の &lt;code&gt;'titles'&lt;/code&gt; キーとして提供される場合があります。2番目の（推奨されていない）辞書ベースの仕様を使用する場合 &lt;code&gt;(datatype, offset, title)&lt;/code&gt; は、通常の2要素タプルの代わりに3要素タプル（データ型、オフセット、タイトル）を提供することによって提供できます。</target>
        </trans-unit>
        <trans-unit id="fefd781e401a9acf4994aa658770a54631a31aac" translate="yes" xml:space="preserve">
          <source>When using the iterator in multi-threaded code or in code not holding the Python GIL, care must be taken to only call functions which are safe in that context. &lt;a href=&quot;#c.NpyIter_Copy&quot;&gt;&lt;code&gt;NpyIter_Copy&lt;/code&gt;&lt;/a&gt; cannot be safely called without the Python GIL, because it increments Python references. The &lt;code&gt;Reset*&lt;/code&gt; and some other functions may be safely called by passing in the &lt;code&gt;errmsg&lt;/code&gt; parameter as non-NULL, so that the functions will pass back errors through it instead of setting a Python exception.</source>
          <target state="translated">マルチスレッドコードまたはPython GILを保持しないコードでイテレーターを使用する場合、そのコンテキストで安全な関数のみを呼び出すように注意する必要があります。&lt;a href=&quot;#c.NpyIter_Copy&quot;&gt; &lt;code&gt;NpyIter_Copy&lt;/code&gt; &lt;/a&gt;はPython参照をインクリメントするため、Python GILなしでは安全に呼び出すことができません。 &lt;code&gt;Reset*&lt;/code&gt; および他のいくつかの機能を安全に通過させることによって呼び出すことができる &lt;code&gt;errmsg&lt;/code&gt; 機能は、Pythonの例外を設定するのではなく、それを介してエラーをバック通過するように、非NULLとしてパラメータ。</target>
        </trans-unit>
        <trans-unit id="88e2c9415b727957007e5109caacd82ffe84043d" translate="yes" xml:space="preserve">
          <source>When we call &lt;code&gt;C('hello')&lt;/code&gt;, the &lt;code&gt;__new__&lt;/code&gt; method gets its own class as first argument, and the passed argument, which is the string &lt;code&gt;'hello'&lt;/code&gt;. After python calls &lt;code&gt;__new__&lt;/code&gt;, it usually (see below) calls our &lt;code&gt;__init__&lt;/code&gt; method, with the output of &lt;code&gt;__new__&lt;/code&gt; as the first argument (now a class instance), and the passed arguments following.</source>
          <target state="translated">&lt;code&gt;C('hello')&lt;/code&gt; を呼び出すと、 &lt;code&gt;__new__&lt;/code&gt; メソッドは、最初の引数として独自のクラスを取得し、渡された引数（文字列 &lt;code&gt;'hello'&lt;/code&gt; ）を取得します。Pythonが呼び出した後 &lt;code&gt;__new__&lt;/code&gt; を、それは通常（下記参照）私たちを呼び出します &lt;code&gt;__init__&lt;/code&gt; の出力で、メソッドを &lt;code&gt;__new__&lt;/code&gt; 最初の引数（今クラスのインスタンス）として、そして渡される引数は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="80e0c3e3144afbdbfb1503b2b31fd233cbb9bcb1" translate="yes" xml:space="preserve">
          <source>When we index arrays with arrays of (integer) indices we are providing the list of indices to pick. With boolean indices the approach is different; we explicitly choose which items in the array we want and which ones we don&amp;rsquo;t.</source>
          <target state="translated">（整数）インデックスの配列で配列にインデックスを付ける場合、選択するインデックスのリストを提供します。ブールインデックスでは、アプローチが異なります。配列内の必要なアイテムと不要なアイテムを明示的に選択します。</target>
        </trans-unit>
        <trans-unit id="e0e93c50be29a8db34812f3b063181378aab17d0" translate="yes" xml:space="preserve">
          <source>When working along a given axis, a slice along that axis is returned in &lt;code&gt;output&lt;/code&gt; for each index where &lt;code&gt;condition&lt;/code&gt; evaluates to True. When working on a 1-D array, &lt;a href=&quot;#numpy.compress&quot;&gt;&lt;code&gt;compress&lt;/code&gt;&lt;/a&gt; is equivalent to &lt;a href=&quot;numpy.extract#numpy.extract&quot;&gt;&lt;code&gt;extract&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特定の軸に沿って作業すると、その軸に沿ったスライスが、 &lt;code&gt;condition&lt;/code&gt; がTrueと評価される各インデックスの &lt;code&gt;output&lt;/code&gt; に返されます。1次元配列で作業する場合、&lt;a href=&quot;#numpy.compress&quot;&gt; &lt;code&gt;compress&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;numpy.extract#numpy.extract&quot;&gt; &lt;code&gt;extract&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="7d7c565731670a0f048fc0a67ffb9fb36e062b00" translate="yes" xml:space="preserve">
          <source>When working with more complex dtypes which are composed of other dtypes, such as the struct dtype, creating inner loops that manipulate the dtypes requires carrying along additional data. NumPy supports this idea through a struct &lt;a href=&quot;#c.NpyAuxData&quot;&gt;&lt;code&gt;NpyAuxData&lt;/code&gt;&lt;/a&gt;, mandating a few conventions so that it is possible to do this.</source>
          <target state="translated">struct dtypeなどの他のdtypeで構成されるより複雑なdtypeを操作する場合、dtypeを操作する内部ループを作成するには、追加のデータを運ぶ必要があります。 NumPyは&lt;a href=&quot;#c.NpyAuxData&quot;&gt; &lt;code&gt;NpyAuxData&lt;/code&gt; &lt;/a&gt;構造体を通じてこのアイデアをサポートし、これを可能にするためにいくつかの規則を義務付けています。</target>
        </trans-unit>
        <trans-unit id="dccc69e8b88626650c84c98fbaee8d5823372b3a" translate="yes" xml:space="preserve">
          <source>When working with very large arrays on modern Linux kernels, you can experience a significant speedup when &lt;a href=&quot;https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html&quot;&gt;transparent hugepage&lt;/a&gt; is used. The current system policy for transparent hugepages can be seen by:</source>
          <target state="translated">最新のLinuxカーネルで非常に大きな配列を操作する場合、&lt;a href=&quot;https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html&quot;&gt;透過&lt;/a&gt;的な巨大ページを使用すると、大幅なスピードアップを体験できます。透過的な巨大ページの現在のシステムポリシーは、次のように表示されます。</target>
        </trans-unit>
        <trans-unit id="37deec6852814cd475cf2ac8609e4771e7e23ff2" translate="yes" xml:space="preserve">
          <source>When you break a long expression at a binary operator, the operator goes at the end of the previous line, e.g.,</source>
          <target state="translated">二進演算子で長い式を破る場合、演算子は前の行の最後に行きます。</target>
        </trans-unit>
        <trans-unit id="e44c90082df7337355379f5ec7bbacbbcd47fdf0" translate="yes" xml:space="preserve">
          <source>When you edit dependence relations that were initially generated by F2PY, be careful not to break the dependence relations of other relevant variables. Another thing to watch out is cyclic dependencies. F2PY is able to detect cyclic dependencies when constructing wrappers and it complains if any are found.</source>
          <target state="translated">F2PYによって最初に生成された依存関係を編集するときは、他の関連する変数の依存関係を壊さないように注意してください。もう一つ気をつけなければならないのは、周期的な依存関係です。F2PYはラッパーを構築する際に周期的な依存関係を検出することができ、検出された場合には文句を言います。</target>
        </trans-unit>
        <trans-unit id="656c7a0b5e4bb86f29ff26d5f3ecacd14ae91bd4" translate="yes" xml:space="preserve">
          <source>When you feel your work is finished, you can create a pull request (PR). Github has a nice help page that outlines the process for &lt;a href=&quot;https://help.github.com/articles/using-pull-requests/#initiating-the-pull-request&quot;&gt;filing pull requests&lt;/a&gt;.</source>
          <target state="translated">作業が終了したと感じたら、プルリクエスト（PR）を作成できます。Githubには、&lt;a href=&quot;https://help.github.com/articles/using-pull-requests/#initiating-the-pull-request&quot;&gt;プルリクエスト&lt;/a&gt;を提出するプロセスの概要を説明する便利なヘルプページがあります。</target>
        </trans-unit>
        <trans-unit id="57465a3d673d3ee14218ee57f56504a3d7049d2f" translate="yes" xml:space="preserve">
          <source>When you have a set of &amp;ldquo;ready&amp;rdquo; changes in a feature branch ready for NumPy&amp;rsquo;s &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;maintenance&lt;/code&gt; branches, you can push them to &lt;code&gt;upstream&lt;/code&gt; as follows:</source>
          <target state="translated">NumPyの &lt;code&gt;master&lt;/code&gt; ブランチまたは &lt;code&gt;maintenance&lt;/code&gt; ブランチの準備ができている機能ブランチに一連の「準備完了」の変更がある場合、次のようにそれらを &lt;code&gt;upstream&lt;/code&gt; プッシュできます。</target>
        </trans-unit>
        <trans-unit id="df9284875f70d664e11ddef3155365522e76bf5c" translate="yes" xml:space="preserve">
          <source>When you print an array, NumPy displays it in a similar way to nested lists, but with the following layout:</source>
          <target state="translated">配列を印刷すると、NumPyはネストされたリストと同様の方法で表示しますが、以下のようなレイアウトで表示します。</target>
        </trans-unit>
        <trans-unit id="ff118b2f38b6fa40b704c3319ca967dd7a981fb4" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;flatten&lt;/code&gt;, changes to your new array won&amp;rsquo;t change the parent array.</source>
          <target state="translated">&lt;code&gt;flatten&lt;/code&gt; を使用する場合、新しい配列を変更しても親配列は変更されません。</target>
        </trans-unit>
        <trans-unit id="aaa9ed3a1aa18ac3b534d99cdc2037422344dc84" translate="yes" xml:space="preserve">
          <source>When you use the &lt;code&gt;%apply&lt;/code&gt; directive, as is usually necessary to use &lt;code&gt;numpy.i&lt;/code&gt;, it will remain in effect until you tell &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; that it shouldn&amp;rsquo;t be. If the arguments to the functions or methods that you are wrapping have common names, such as &lt;code&gt;length&lt;/code&gt; or &lt;code&gt;vector&lt;/code&gt;, these typemaps may get applied in situations you do not expect or want. Therefore, it is always a good idea to add a &lt;code&gt;%clear&lt;/code&gt; directive after you are done with a specific typemap:</source>
          <target state="translated">&lt;code&gt;%apply&lt;/code&gt; ディレクティブを使用する場合、通常 &lt;code&gt;numpy.i&lt;/code&gt; を使用する必要があるので、&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;にそれを実行しないように指示するまで有効です。ラップしている関数またはメソッドへの引数に、 &lt;code&gt;length&lt;/code&gt; や &lt;code&gt;vector&lt;/code&gt; などの一般的な名前がある場合、これらのタイプマップは、予期しないまたは望まない状況で適用される可能性があります。したがって、特定のタイプマップを使用した後は、 &lt;code&gt;%clear&lt;/code&gt; ディレクティブを追加することを常にお勧めします。</target>
        </trans-unit>
        <trans-unit id="c9161d14b7fe0e0123346d805be6e656205c9a99" translate="yes" xml:space="preserve">
          <source>When you want to discard all changes and go back to the last commit in the repo, use one of:</source>
          <target state="translated">すべての変更を破棄して、レポの最後のコミットに戻りたい場合は、以下のいずれかを使用します。</target>
        </trans-unit>
        <trans-unit id="89f82c7a5bbe0891c1df2aa46cbdf990d1794aa1" translate="yes" xml:space="preserve">
          <source>Whenever &lt;a href=&quot;#c.NPY_VERSION&quot;&gt;&lt;code&gt;NPY_VERSION&lt;/code&gt;&lt;/a&gt; != PyArray_GetNDArrayCVersion, the extension has to be recompiled (ABI incompatibility).</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_VERSION&quot;&gt; &lt;code&gt;NPY_VERSION&lt;/code&gt; &lt;/a&gt;！= PyArray_GetNDArrayCVersionである場合は常に、拡張機能を再コンパイルする必要があります（ABIの非互換性）。</target>
        </trans-unit>
        <trans-unit id="3e2b99bc93c54f0bc24f4acf841fece1023b07a0" translate="yes" xml:space="preserve">
          <source>Whenever &lt;a href=&quot;#c.PY_ARRAY_UNIQUE_SYMBOL&quot;&gt;&lt;code&gt;PY_ARRAY_UNIQUE_SYMBOL&lt;/code&gt;&lt;/a&gt; is #defined, it also changes the name of the variable holding the C-API, which defaults to &lt;code&gt;PyArray_API&lt;/code&gt;, to whatever the macro is #defined to.</source>
          <target state="translated">&lt;a href=&quot;#c.PY_ARRAY_UNIQUE_SYMBOL&quot;&gt; &lt;code&gt;PY_ARRAY_UNIQUE_SYMBOL&lt;/code&gt; &lt;/a&gt;が#definedである場合は常に、C-APIを保持する変数の名前も変更されます。デフォルトでは &lt;code&gt;PyArray_API&lt;/code&gt; になり、マクロが定義されているものに変更されます。</target>
        </trans-unit>
        <trans-unit id="934b37ef17a0c4c0c83c595fef5a62578238ee15" translate="yes" xml:space="preserve">
          <source>Whenever a data-type is required in a NumPy function or method, either a &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; object or something that can be converted to one can be supplied. Such conversions are done by the &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; constructor:</source>
          <target state="translated">NumPy関数またはメソッドでデータ型が必要な場合はいつでも、&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;オブジェクトまたは1つに変換できるものを提供できます。このような変換は、&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;コンストラクターによって行われます。</target>
        </trans-unit>
        <trans-unit id="80254bc9efba4102e15f18db7d8295d8697a0360" translate="yes" xml:space="preserve">
          <source>Whenever a writeable operand has fewer elements than the full iteration space, that operand is undergoing a reduction. The &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; object requires that any reduction operand be flagged as read-write, and only allows reductions when &amp;lsquo;reduce_ok&amp;rsquo; is provided as an iterator flag.</source>
          <target state="translated">書き込み可能なオペランドの要素が反復空間全体よりも少ない場合、そのオペランドは削減されます。&lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; の&lt;/a&gt;オブジェクトは「reduce_ok」がイテレータフラグとして提供される場合、任意の還元オペランドのみ読み書き可能としてフラグを立て、そしてすることが削減を可能にすることを必要とします。</target>
        </trans-unit>
        <trans-unit id="090346f0957607fc5beeda4f38e177d1918c4444" translate="yes" xml:space="preserve">
          <source>Where True, yield &lt;code&gt;x&lt;/code&gt;, otherwise yield &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Trueの場合、 &lt;code&gt;x&lt;/code&gt; を生成し、それ以外の場合は &lt;code&gt;y&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="6a5eb067bd3fe81e1af9c383f00cfc0ba136e903" translate="yes" xml:space="preserve">
          <source>Where people expect that the 1st location will be incremented by 3. In fact, it will only be incremented by 1. The reason is because a new array is extracted from the original (as a temporary) containing the values at 1, 1, 3, 1, then the value 1 is added to the temporary, and then the temporary is assigned back to the original array. Thus the value of the array at x[1]+1 is assigned to x[1] three times, rather than being incremented 3 times.</source>
          <target state="translated">これは、1,1,3,1,1の値を含む元の配列から新しい配列を(一時的なものとして)抽出し、その一時的な配列に1の値を追加し、その一時的な配列を元の配列に代入するためです。したがって、x[1]+1の配列の値は、3回インクリメントされるのではなく、3回x[1]に代入されます。</target>
        </trans-unit>
        <trans-unit id="34d448bd986c4660db094fa15ea808d4305175ff" translate="yes" xml:space="preserve">
          <source>Where references like [1] appear in a tables within a numpydoc docstring, the table markup will be broken by numpydoc processing. See &lt;a href=&quot;https://github.com/numpy/numpydoc/issues/130&quot;&gt;numpydoc issue #130&lt;/a&gt;</source>
          <target state="translated">[1]のような参照がnumpydocdocstring内のテーブルに表示される場合、テーブルのマークアップはnumpydoc処理によって壊れます。&lt;a href=&quot;https://github.com/numpy/numpydoc/issues/130&quot;&gt;numpydocの問題＃130を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="b58703967453c474e94cf57585adb3b2a50448ed" translate="yes" xml:space="preserve">
          <source>Where the library can be found.</source>
          <target state="translated">図書館がある場所</target>
        </trans-unit>
        <trans-unit id="54df46f7307aa74c464486f1ea35cde9a77febe6" translate="yes" xml:space="preserve">
          <source>Where to install the npy-pkg config file, relatively to the current package path.</source>
          <target state="translated">npy-pkgの設定ファイルをインストールする場所は、現在のパッケージのパスを基準にしています。</target>
        </trans-unit>
        <trans-unit id="93d30f1df70c77ec829a136f4d8b2ef0c3b96d94" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;arg1&lt;/code&gt; is a subclass of &lt;code&gt;arg2&lt;/code&gt; or not.</source>
          <target state="translated">&lt;code&gt;arg1&lt;/code&gt; が &lt;code&gt;arg2&lt;/code&gt; のサブクラスかどうか。</target>
        </trans-unit>
        <trans-unit id="4cf13fb8eefba779715af0f3f14fe972d84fd59d" translate="yes" xml:space="preserve">
          <source>Whether automatically cast the type of the field to the maximum.</source>
          <target state="translated">フィールドの型を自動的に最大値にキャストするかどうか。</target>
        </trans-unit>
        <trans-unit id="7ded38313492e3b9340e10eb5e7bd8c5c0bea96c" translate="yes" xml:space="preserve">
          <source>Whether iteration requires access to the Python API, for example if one of the operands is an object array.</source>
          <target state="translated">イテレーションがPython APIへのアクセスを必要とするかどうか、例えばオペランドの1つがオブジェクトの配列である場合など。</target>
        </trans-unit>
        <trans-unit id="08ba3ba6d86470ddcf5c7c987a831ffff108d8b4" translate="yes" xml:space="preserve">
          <source>Whether masked data are propagated (True) or set to 0 (False) for the computation. Default is False. Propagating the mask means that if a masked value appears in a row or column, the whole row or column is considered masked.</source>
          <target state="translated">計算のためにマスクされたデータをプロパゲーションするか(True)、0に設定するか(False)。デフォルトはFalseです。マスクを伝搬するとは、マスクされた値が行または列に現れた場合、行または列全体がマスクされているとみなされることを意味します。</target>
        </trans-unit>
        <trans-unit id="942b421e5894c463ded7c95650a67b6fe3cd084e" translate="yes" xml:space="preserve">
          <source>Whether masked data should be discarded or considered as duplicates.</source>
          <target state="translated">マスクされたデータを破棄するか、重複とみなすか。</target>
        </trans-unit>
        <trans-unit id="8637ce438fa1d406f7ec1653600c39aad46d9db8" translate="yes" xml:space="preserve">
          <source>Whether masked values in &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are considered equal (True) or not (False). They are considered equal by default.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; のマスクされた値が等しいと見なされるか（True）、等しくないと見なされるか（False）。デフォルトでは等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="6867499c63cb6abaeab85ff30463c9432618d2ee" translate="yes" xml:space="preserve">
          <source>Whether masked values in a or b are considered equal (True) or not (False).</source>
          <target state="translated">aまたはbのマスクされた値が等しいとみなされるかどうか(True)、またはそうでないとみなされるかどうか(False)。</target>
        </trans-unit>
        <trans-unit id="288daa4940dd3020af5ede621755e8ef6fcd2c3a" translate="yes" xml:space="preserve">
          <source>Whether missing values (if any) should be treated as the largest values (True) or the smallest values (False) When the array contains unmasked values at the same extremes of the datatype, the ordering of these values and the masked values is undefined.</source>
          <target state="translated">欠落している値(もしあれば)を最大値(True)として扱うか、最小値(False)として扱うか。 配列にデータ型の同じ極端にマスクされていない値が含まれている場合、これらの値とマスクされている値の順序は未定義です。</target>
        </trans-unit>
        <trans-unit id="7da3b2e79fc5148bb637715841cccf76fc788e07" translate="yes" xml:space="preserve">
          <source>Whether missing values (if any) should be treated as the largest values (True) or the smallest values (False) When the array contains unmasked values sorting at the same extremes of the datatype, the ordering of these values and the masked values is undefined.</source>
          <target state="translated">欠落している値(もしあれば)を最大値(True)として扱うか、最小値(False)として扱うかを指定します。</target>
        </trans-unit>
        <trans-unit id="a6481db2a658331329f9aef51a26603d0843b05c" translate="yes" xml:space="preserve">
          <source>Whether or not an array is byte-swapped is determined by the data-type of the array. Native byte-order arrays are always requested by &lt;a href=&quot;../reference/c-api/array#c.PyArray_FROM_OTF&quot;&gt;&lt;code&gt;PyArray_FROM_OTF&lt;/code&gt;&lt;/a&gt; and so there is no need for a &lt;a href=&quot;../reference/c-api/array#c.NPY_ARRAY_NOTSWAPPED&quot;&gt;&lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt;&lt;/a&gt; flag in the requirements argument. There is also no way to get a byte-swapped array from this routine.</source>
          <target state="translated">配列がバイトスワップされるかどうかは、配列のデータ型によって決まります。ネイティブバイトオーダー配列は常に&lt;a href=&quot;../reference/c-api/array#c.PyArray_FROM_OTF&quot;&gt; &lt;code&gt;PyArray_FROM_OTF&lt;/code&gt; &lt;/a&gt;によって要求されるため、requirements引数に&lt;a href=&quot;../reference/c-api/array#c.NPY_ARRAY_NOTSWAPPED&quot;&gt; &lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt; &lt;/a&gt;フラグは必要ありません。このルーチンからバイトスワップされた配列を取得する方法もありません。</target>
        </trans-unit>
        <trans-unit id="ec0eb17948661387af03eedbd16c0982b256d2ca" translate="yes" xml:space="preserve">
          <source>Whether or not there are iterations left.</source>
          <target state="translated">イテレーションが残っているかどうか。</target>
        </trans-unit>
        <trans-unit id="6c6ce4cbc91d3e04017743bd327936e59b4be559" translate="yes" xml:space="preserve">
          <source>Whether or not to compute &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;vh&lt;/code&gt; in addition to &lt;code&gt;s&lt;/code&gt;. True by default.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; に加えて &lt;code&gt;u&lt;/code&gt; と &lt;code&gt;vh&lt;/code&gt; を計算するかどうか。デフォルトではTrue。</target>
        </trans-unit>
        <trans-unit id="34608785e0c8e6698e050294c20a41fc581a7a43" translate="yes" xml:space="preserve">
          <source>Whether the array data is Fortran-contiguous or not. Since Fortran-contiguous arrays are a common form of non-C-contiguity, we allow them to be written directly to disk for efficiency.</source>
          <target state="translated">配列データがFortran-contiguousであるかどうか。Fortran-連続性のあるアレイは非C-連続性の一般的な形式であるため、効率化のために直接ディスクに書き込めるようにしています。</target>
        </trans-unit>
        <trans-unit id="a7b87db28e0b29fd77663f2df3cc4a859b46d1b1" translate="yes" xml:space="preserve">
          <source>Whether the array is to interpreted as C-order or Fortran-order.</source>
          <target state="translated">配列をC順に解釈するかFortran順に解釈するか。</target>
        </trans-unit>
        <trans-unit id="944c20a06f71d4591f2972a6198b951c5988e169" translate="yes" xml:space="preserve">
          <source>Whether the buffer is read-only</source>
          <target state="translated">バッファが読み取り専用かどうか</target>
        </trans-unit>
        <trans-unit id="4f5043b4a62f84c7d0a89c1a7427fe7e0a42c45d" translate="yes" xml:space="preserve">
          <source>Whether the iteration over the operands is finished or not.</source>
          <target state="translated">オペランドに対する反復処理が終了したかどうか。</target>
        </trans-unit>
        <trans-unit id="13a09493df9f77aae557913a37ecafb9bbcd240e" translate="yes" xml:space="preserve">
          <source>Whether the mask is shared between masked arrays can be seen from the &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.sharedmask&quot;&gt;&lt;code&gt;sharedmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;#numpy.ma.MaskedArray.unshare_mask&quot;&gt;&lt;code&gt;unshare_mask&lt;/code&gt;&lt;/a&gt; ensures the mask is not shared. A copy of the mask is only made if it was shared.</source>
          <target state="translated">マスクされた配列間でマスクが共有されているかどうかは、&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.sharedmask&quot;&gt; &lt;code&gt;sharedmask&lt;/code&gt; &lt;/a&gt;プロパティで確認できます。&lt;a href=&quot;#numpy.ma.MaskedArray.unshare_mask&quot;&gt; &lt;code&gt;unshare_mask&lt;/code&gt; &lt;/a&gt;は、マスクが共有されないようにします。マスクのコピーは、共有されている場合にのみ作成されます。</target>
        </trans-unit>
        <trans-unit id="340b1de921c9745845d275ad69b116e9e6d7cce7" translate="yes" xml:space="preserve">
          <source>Whether the mask is shared between masked arrays can be seen from the &lt;a href=&quot;numpy.ma.masked_array.sharedmask#numpy.ma.masked_array.sharedmask&quot;&gt;&lt;code&gt;sharedmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;#numpy.ma.masked_array.unshare_mask&quot;&gt;&lt;code&gt;unshare_mask&lt;/code&gt;&lt;/a&gt; ensures the mask is not shared. A copy of the mask is only made if it was shared.</source>
          <target state="translated">マスクがマスクされた配列間で共有されているかどうかは、&lt;a href=&quot;numpy.ma.masked_array.sharedmask#numpy.ma.masked_array.sharedmask&quot;&gt; &lt;code&gt;sharedmask&lt;/code&gt; &lt;/a&gt;プロパティから確認できます。&lt;a href=&quot;#numpy.ma.masked_array.unshare_mask&quot;&gt; &lt;code&gt;unshare_mask&lt;/code&gt; &lt;/a&gt;は、マスクが共有されないようにします。マスクのコピーは、共有されている場合にのみ作成されます。</target>
        </trans-unit>
        <trans-unit id="db7611d744e4dcdca549d1fbd74911098f577c62" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt;&lt;code&gt;harden_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to True.</source>
          <target state="translated">マスクされた配列のマスクがハードかソフトかは、その&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;プロパティによって決まります。&lt;a href=&quot;numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt; &lt;code&gt;harden_mask&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;をTrueに設定します。</target>
        </trans-unit>
        <trans-unit id="b8f17f77435a0793df30f7927fd68842a3c16557" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt;&lt;code&gt;soften_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to False.</source>
          <target state="translated">マスクされた配列のマスクがハードかソフトかは、その&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;プロパティによって決まります。&lt;a href=&quot;numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt; &lt;code&gt;soften_mask&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;をFalseに設定します。</target>
        </trans-unit>
        <trans-unit id="a13aa0b6af557159a253f9e361f23d8056f7cd7c" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt;&lt;code&gt;harden_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to True.</source>
          <target state="translated">マスクされた配列のマスクがハードかソフトかは、その&lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;プロパティによって決まります。&lt;a href=&quot;numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt; &lt;code&gt;harden_mask&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;をTrueに設定します。</target>
        </trans-unit>
        <trans-unit id="58bb97d73903bba4379881dfe21651d2944e9e4f" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt;&lt;code&gt;soften_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to False.</source>
          <target state="translated">マスクされた配列のマスクがハードかソフトかは、その&lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;プロパティによって決まります。&lt;a href=&quot;numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt; &lt;code&gt;soften_mask&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;numpy.ma.masked_array.hardmask#numpy.ma.masked_array.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;をFalseに設定します。</target>
        </trans-unit>
        <trans-unit id="7f3e122a9b529992b197b46b09923f9ca3bd360b" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;code&gt;hardmask&lt;/code&gt; property. &lt;a href=&quot;#numpy.ma.harden_mask&quot;&gt;&lt;code&gt;harden_mask&lt;/code&gt;&lt;/a&gt; sets &lt;code&gt;hardmask&lt;/code&gt; to True.</source>
          <target state="translated">マスクされた配列のマスクがハードかソフトかは、その &lt;code&gt;hardmask&lt;/code&gt; プロパティによって決まります。&lt;a href=&quot;#numpy.ma.harden_mask&quot;&gt; &lt;code&gt;harden_mask&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;hardmask&lt;/code&gt; をTrueに設定します。</target>
        </trans-unit>
        <trans-unit id="01426ffe48ebece03a2678d8f2d6adc220725bf0" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;code&gt;hardmask&lt;/code&gt; property. &lt;a href=&quot;#numpy.ma.soften_mask&quot;&gt;&lt;code&gt;soften_mask&lt;/code&gt;&lt;/a&gt; sets &lt;code&gt;hardmask&lt;/code&gt; to False.</source>
          <target state="translated">マスクされた配列のマスクがハードかソフトかは、その &lt;code&gt;hardmask&lt;/code&gt; プロパティによって決まります。&lt;a href=&quot;#numpy.ma.soften_mask&quot;&gt; &lt;code&gt;soften_mask&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;hardmask&lt;/code&gt; をFalseに設定します。</target>
        </trans-unit>
        <trans-unit id="138446419a6b818b440bdbf047003a998807c2e8" translate="yes" xml:space="preserve">
          <source>Whether the names should be case-sensitive (&lt;code&gt;case_sensitive=True&lt;/code&gt;), converted to upper case (&lt;code&gt;case_sensitive=False&lt;/code&gt; or &lt;code&gt;case_sensitive='upper'&lt;/code&gt;) or to lower case (&lt;code&gt;case_sensitive='lower'&lt;/code&gt;).</source>
          <target state="translated">名前で大文字と小文字を区別するか（ &lt;code&gt;case_sensitive=True&lt;/code&gt; ）、大文字に変換するか（ &lt;code&gt;case_sensitive=False&lt;/code&gt; または &lt;code&gt;case_sensitive='upper'&lt;/code&gt; ）、小文字に変換するか（ &lt;code&gt;case_sensitive='lower'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ee9da79319e6c0e3169d3748cede2f00813142ab" translate="yes" xml:space="preserve">
          <source>Whether the output should be stored in row-major (C-style) or column-major (Fortran-style) order in memory.</source>
          <target state="translated">出力をメモリ内で行・長(Cスタイル)または列・長(Fortranスタイル)のどちらの順序で格納するか。</target>
        </trans-unit>
        <trans-unit id="92d233bcb4830096541e589ec9f4a1ebacbac55b" translate="yes" xml:space="preserve">
          <source>Whether the sample is shuffled when sampling without replacement. Default is True, False provides a speedup.</source>
          <target state="translated">置換せずにサンプリングするときにサンプルをシャッフルするかどうか。デフォルトはTrueで、Falseの場合は高速化されます。</target>
        </trans-unit>
        <trans-unit id="da175c30578215af592bdb3c0536af196e7c720a" translate="yes" xml:space="preserve">
          <source>Whether the sample is with or without replacement</source>
          <target state="translated">サンプルの交換の有無</target>
        </trans-unit>
        <trans-unit id="56d0390af16d5fd75c7929234de623abb71d3a3f" translate="yes" xml:space="preserve">
          <source>Whether this event constitutes a Code of Conduct violation.</source>
          <target state="translated">このイベントが行動規範違反に該当するかどうか。</target>
        </trans-unit>
        <trans-unit id="8abcd0ba2e0e0b4eb15c921a63cd2223ac9df3e8" translate="yes" xml:space="preserve">
          <source>Whether this is an ongoing situation, and there is a threat to anyone&amp;rsquo;s physical safety.</source>
          <target state="translated">これが進行中の状況であり、誰かの身体的安全に対する脅威があるかどうか。</target>
        </trans-unit>
        <trans-unit id="f7a933f70353e3ad1ecdef0da587770caa9c5376" translate="yes" xml:space="preserve">
          <source>Whether to automatically strip white spaces from the variables.</source>
          <target state="translated">変数から自動的にホワイトスペースを取り除くかどうか。</target>
        </trans-unit>
        <trans-unit id="442a6c8414200886a8391269e4fbd9de7abf0966" translate="yes" xml:space="preserve">
          <source>Whether to collapse a mask full of False to &lt;code&gt;nomask&lt;/code&gt;.</source>
          <target state="translated">Falseでいっぱいのマスクを &lt;code&gt;nomask&lt;/code&gt; に縮小するかどうか。</target>
        </trans-unit>
        <trans-unit id="4050a74967f8f69856c2fbd0e3e619300a40e0f0" translate="yes" xml:space="preserve">
          <source>Whether to collapse a mask full of False to nomask</source>
          <target state="translated">ノマスクにフォルスでいっぱいのマスクを崩すかどうか</target>
        </trans-unit>
        <trans-unit id="62176ff771859dd4204e465857618db43d4b9e20" translate="yes" xml:space="preserve">
          <source>Whether to collapse nested fields.</source>
          <target state="translated">入れ子になったフィールドを折りたたむかどうか。</target>
        </trans-unit>
        <trans-unit id="c052f30967f49a9b943b88084eb17b8a3c940aea" translate="yes" xml:space="preserve">
          <source>Whether to combine &lt;code&gt;mask&lt;/code&gt; with the mask of the input data, if any (True), or to use only &lt;code&gt;mask&lt;/code&gt; for the output (False). Default is True.</source>
          <target state="translated">マスクを入力データの &lt;code&gt;mask&lt;/code&gt; と組み合わせるかどうか（存在する場合）（True）、または出力に &lt;code&gt;mask&lt;/code&gt; のみを使用するか（False）。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="eddff56e50fafc8cb9b530fe24b021eae68e3c92" translate="yes" xml:space="preserve">
          <source>Whether to compare NaN&amp;rsquo;s as equal. If True, NaN&amp;rsquo;s in &lt;code&gt;a&lt;/code&gt; will be considered equal to NaN&amp;rsquo;s in &lt;code&gt;b&lt;/code&gt; in the output array.</source>
          <target state="translated">NaNを等しいと比較するかどうか。Trueの場合は、NaNの中でのNaNのと同等とみなされる &lt;code&gt;b&lt;/code&gt; 出力配列インチ &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02ebb4bc09961e4bbbe5be1fe036d0ee044eabeb" translate="yes" xml:space="preserve">
          <source>Whether to compare NaN&amp;rsquo;s as equal. If the dtype of a1 and a2 is complex, values will be considered equal if either the real or the imaginary component of a given value is &lt;code&gt;nan&lt;/code&gt;.</source>
          <target state="translated">NaNを同等と比較するかどうか。a1とa2のdtypeが複素数の場合、指定された値の実数成分または虚数成分のいずれかが &lt;code&gt;nan&lt;/code&gt; であれば、値は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="10fe679c9d66f1cf6761f7d27d834a6040161f28" translate="yes" xml:space="preserve">
          <source>Whether to copy the input data (True), or to use a reference instead. Default is False.</source>
          <target state="translated">入力データをコピーするか(True)、代わりに参照を使用するか。デフォルトはFalseです。</target>
        </trans-unit>
        <trans-unit id="5fe509663979cfcace796559b2e65ed21543a41a" translate="yes" xml:space="preserve">
          <source>Whether to create a copy of &lt;code&gt;x&lt;/code&gt; (True) or to replace values in-place (False). The in-place operation only occurs if casting to an array does not require a copy. Default is True.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; のコピーを作成するか（True）、値をインプレースで置換するか（False）。インプレース操作は、配列へのキャストにコピーが必要ない場合にのみ発生します。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="7cae43f7fc0aea2ec3356f28a33a3a863498b88e" translate="yes" xml:space="preserve">
          <source>Whether to create an aligned memory layout.</source>
          <target state="translated">アラインメントされたメモリレイアウトを作成するかどうか。</target>
        </trans-unit>
        <trans-unit id="cb3a38e23cd94158d3fb92938c528fabce71a1cc" translate="yes" xml:space="preserve">
          <source>Whether to force compression of an empty mask. Default is True.</source>
          <target state="translated">空のマスクを強制的に圧縮するかどうか。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="954b794bdd577e9151cce4c13b30b4547a80cce1" translate="yes" xml:space="preserve">
          <source>Whether to force the output to be a &lt;code&gt;pure&lt;/code&gt; ndarray (False) or to return a subclass of ndarray if appropriate (True, default).</source>
          <target state="translated">出力を &lt;code&gt;pure&lt;/code&gt; ndarray（False）にするか、必要に応じてndarrayのサブクラスを返すか（True、デフォルト）。</target>
        </trans-unit>
        <trans-unit id="e3b6a28cf1ae69fa2745e3bf0096fffb2681b0f4" translate="yes" xml:space="preserve">
          <source>Whether to import sub-modules in packages. Default is True.</source>
          <target state="translated">パッケージのサブモジュールをインポートするかどうか。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="560758d583a48f61c5f8c924a74ada989d313f2e" translate="yes" xml:space="preserve">
          <source>Whether to raise an AssertionError when a doctest fails. Default is True.</source>
          <target state="translated">doctest が失敗したときに AssertionError を発生させるかどうか。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="9da66ee12a4e35260c8d865d944cf7e0c6ffd0fb" translate="yes" xml:space="preserve">
          <source>Whether to re-generate the docstring cache. Default is False.</source>
          <target state="translated">docstringキャッシュを再生成するかどうか。デフォルトは False です。</target>
        </trans-unit>
        <trans-unit id="f98f2fb6c72df675129c76f9bce42592bdfab4fb" translate="yes" xml:space="preserve">
          <source>Whether to return a MaskedArray (or MaskedRecords is &lt;code&gt;asrecarray==True&lt;/code&gt;) or a ndarray.</source>
          <target state="translated">MaskedArray（またはMaskedRecordsは &lt;code&gt;asrecarray==True&lt;/code&gt; ）を返すか、ndarrayを返すか。</target>
        </trans-unit>
        <trans-unit id="fe2c4419241a17141e2305c4b8dcba97409a61c9" translate="yes" xml:space="preserve">
          <source>Whether to return a copy of &lt;code&gt;m&lt;/code&gt; (True) or &lt;code&gt;m&lt;/code&gt; itself (False).</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; （True）または &lt;code&gt;m&lt;/code&gt; 自体（False）のコピーを返すかどうか。</target>
        </trans-unit>
        <trans-unit id="d8e552974363003f8c300f894365cd71e993d9cb" translate="yes" xml:space="preserve">
          <source>Whether to return a copy of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; のコピーを返すかどうか。</target>
        </trans-unit>
        <trans-unit id="17b6d3614fb6aec6828495e1dc6c9f3e3cb25114" translate="yes" xml:space="preserve">
          <source>Whether to return a masked array or not.</source>
          <target state="translated">マスクされた配列を返すかどうか。</target>
        </trans-unit>
        <trans-unit id="8d4e9ec2ff1473fe325d2ab7b74109d36f9b95a7" translate="yes" xml:space="preserve">
          <source>Whether to return a recarray (MaskedRecords) or not.</source>
          <target state="translated">再配列(MaskedRecords)を返すかどうか。</target>
        </trans-unit>
        <trans-unit id="537dd9c43929ac61e1b91f77cf8f252cc29ca2c7" translate="yes" xml:space="preserve">
          <source>Whether to return a recarray (or MaskedRecords if &lt;code&gt;usemask==True&lt;/code&gt;) or just a flexible-type ndarray.</source>
          <target state="translated">再配列（または &lt;code&gt;usemask==True&lt;/code&gt; 場合はMaskedRecords）を返すか、フレキシブルタイプのndarrayのみを返すか。</target>
        </trans-unit>
        <trans-unit id="a99566bf50e4cbe34436592687ae3a066ec1520e" translate="yes" xml:space="preserve">
          <source>Whether to return a recarray or a mrecarray (&lt;code&gt;asrecarray=True&lt;/code&gt;) or a plain ndarray or masked array with flexible dtype. The default is False.</source>
          <target state="translated">recarrayまたはmrecarray（ &lt;code&gt;asrecarray=True&lt;/code&gt; ）を返すか、柔軟なdtypeを持つプレーンなndarrayまたはマスクされた配列を返すか。デフォルトはFalseです。</target>
        </trans-unit>
        <trans-unit id="037c91325bbf0eb3057c152573c6cd848efe298f" translate="yes" xml:space="preserve">
          <source>Whether to return a subclass of &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt; if possible (True) or a plain &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;. Default is True.</source>
          <target state="translated">&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt;サブクラスを返すか（True）、プレーンな&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; か&lt;/a&gt;。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="bdbbe0cbc16b25af4b5214a715ea3e1431bb785c" translate="yes" xml:space="preserve">
          <source>Whether to return the indices of the duplicated values.</source>
          <target state="translated">重複した値のインデックスを返すかどうか。</target>
        </trans-unit>
        <trans-unit id="0ae760f9c4f41fa0fbb26a77403a1c22ab55b573" translate="yes" xml:space="preserve">
          <source>Whether to show the sign for positive values.</source>
          <target state="translated">正の値の場合は符号を表示するかどうか。</target>
        </trans-unit>
        <trans-unit id="1b8be26bfc8b0e89327240212310466b2cf75c4c" translate="yes" xml:space="preserve">
          <source>Whether to shrink &lt;code&gt;m&lt;/code&gt; to &lt;code&gt;nomask&lt;/code&gt; if all its values are False.</source>
          <target state="translated">すべての値がFalseの場合、 &lt;code&gt;m&lt;/code&gt; を &lt;code&gt;nomask&lt;/code&gt; に縮小するかどうか。</target>
        </trans-unit>
        <trans-unit id="3178cfeee0adef6924aedc74760260f82717be37" translate="yes" xml:space="preserve">
          <source>Whether to shrink the output to &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; if all its values are False. Defaults to True.</source>
          <target state="translated">すべての値がFalseの場合に出力を&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;に縮小するかどうか。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="d9db91db6f9220d3637c22a670ce2fece1ba8892" translate="yes" xml:space="preserve">
          <source>Whether to store matrix in C- or Fortran-contiguous order, default is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">行列をCまたはFortranの連続した順序で格納するかどうか、デフォルトは 'C'です。</target>
        </trans-unit>
        <trans-unit id="f47e8ef32095f56286465eeec2aded155a972a62" translate="yes" xml:space="preserve">
          <source>Whether to store multi-dimensional data in row-major (C-style) or column-major (Fortran-style) order in memory.</source>
          <target state="translated">多次元データを行・長(Cスタイル)または列・長(Fortranスタイル)の順序でメモリに格納するかどうか。</target>
        </trans-unit>
        <trans-unit id="91845ffd71912999afe1ae31aecba568b6c77126" translate="yes" xml:space="preserve">
          <source>Whether to store multidimensional data in C- or Fortran-contiguous (row- or column-wise) order in memory.</source>
          <target state="translated">多次元データをC言語またはFortranで連続した順序(行順または列順)でメモリに格納するかどうか。</target>
        </trans-unit>
        <trans-unit id="dab7c3794a646540de7acd62a59e0fb24a52ca93" translate="yes" xml:space="preserve">
          <source>Whether to store the result in C- or Fortran-contiguous order, default is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">結果をCまたはFortranの連続した順序で格納するかどうか、デフォルトは 'C'です。</target>
        </trans-unit>
        <trans-unit id="bfc4130ee9478e47e13d28dd5c7bbedd301de36f" translate="yes" xml:space="preserve">
          <source>Whether to use a copy of &lt;code&gt;a&lt;/code&gt; (True) or to fix &lt;code&gt;a&lt;/code&gt; in place (False). Default is True.</source>
          <target state="translated">かどうかは、のコピーを使用するには（真の）または修正する場所（偽）で。デフォルトはTrueです。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aebefd02adf3850b379921c027ca5f73a9e89812" translate="yes" xml:space="preserve">
          <source>Whether to use a hard mask or not. With a hard mask, masked values cannot be unmasked. Default is False.</source>
          <target state="translated">ハードマスクを使用するかどうか。ハードマスクを使用すると、マスクされた値はマスク解除できません。デフォルトは False です。</target>
        </trans-unit>
        <trans-unit id="5e961f550eaad97e3dafff75ba96d8df26719652" translate="yes" xml:space="preserve">
          <source>Whether to use row-major (&amp;lsquo;C&amp;rsquo;) or column-major (&amp;lsquo;FORTRAN&amp;rsquo;) memory representation. Default is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">行優先（ 'C'）または列優先（ 'FORTRAN'）のメモリ表現を使用するかどうか。デフォルトは「C」です。</target>
        </trans-unit>
        <trans-unit id="cc497678cbe7ddcd1c3ae01eed475a06c838ec4e" translate="yes" xml:space="preserve">
          <source>Whether to use row-major (C-style) or column-major (Fortran-style) memory representation. Defaults to &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">行優先（Cスタイル）または列優先（Fortranスタイル）のメモリ表現を使用するかどうか。デフォルトは「C」です。</target>
        </trans-unit>
        <trans-unit id="25195d8226c7af7ee557736e882797435cd7c507" translate="yes" xml:space="preserve">
          <source>Which columns to read, with 0 being the first. For example, &lt;code&gt;usecols = (1, 4, 5)&lt;/code&gt; will extract the 2nd, 5th and 6th columns.</source>
          <target state="translated">読み取る列。最初は0です。たとえば、 &lt;code&gt;usecols = (1, 4, 5)&lt;/code&gt; は2番目、5番目、6番目の列を抽出します。</target>
        </trans-unit>
        <trans-unit id="ef9e92c2b540fbcf01177bb037dde03eb96de271" translate="yes" xml:space="preserve">
          <source>Which columns to read, with 0 being the first. For example, &lt;code&gt;usecols = (1,4,5)&lt;/code&gt; will extract the 2nd, 5th and 6th columns. The default, None, results in all columns being read.</source>
          <target state="translated">読み取る列。最初は0です。たとえば、 &lt;code&gt;usecols = (1,4,5)&lt;/code&gt; は2番目、5番目、6番目の列を抽出します。デフォルトのNoneでは、すべての列が読み取られます。</target>
        </trans-unit>
        <trans-unit id="fbd4eaea9ffb1459ac3fe81052e7c99556134589" translate="yes" xml:space="preserve">
          <source>Which creates a shared_library named code.so in the current directory. On Windows don&amp;rsquo;t forget to either add &lt;code&gt;__declspec(dllexport)&lt;/code&gt; in front of void on the line preceding each function definition, or write a &lt;code&gt;code.def&lt;/code&gt; file that lists the names of the functions to be exported.</source>
          <target state="translated">これにより、現在のディレクトリにcode.soという名前のshared_libraryが作成されます。Windowsでは、各関数定義の前の行のvoidの前に &lt;code&gt;__declspec(dllexport)&lt;/code&gt; を追加するか、エクスポートする関数の名前をリストする &lt;code&gt;code.def&lt;/code&gt; ファイルを作成することを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="13f9686c4e3a41f3f30b2ea464209b867b694965" translate="yes" xml:space="preserve">
          <source>Which gives more easily comparable results than using separate bins for each histogram:</source>
          <target state="translated">これは、ヒストグラムごとに別々のビンを使用するよりも、より簡単に比較可能な結果を提供します。</target>
        </trans-unit>
        <trans-unit id="a1a80f0fc41db0ca1b3afb508f48229204eeb48b" translate="yes" xml:space="preserve">
          <source>Which gives the polynomial &lt;code&gt;p&lt;/code&gt; in Chebyshev form. This works because</source>
          <target state="translated">これは多項式 &lt;code&gt;p&lt;/code&gt; をチェビシェフ形式で与えます。これは機能する</target>
        </trans-unit>
        <trans-unit id="4677fdc512f0b2c82debb07e465be34f22e7fdd0" translate="yes" xml:space="preserve">
          <source>While Python is a great language and a pleasure to code in, its dynamic nature results in overhead that can cause some code ( &lt;em&gt;i.e.&lt;/em&gt; raw computations inside of for loops) to be up 10-100 times slower than equivalent code written in a static compiled language. In addition, it can cause memory usage to be larger than necessary as temporary arrays are created and destroyed during computation. For many types of computing needs, the extra slow-down and memory consumption can often not be spared (at least for time- or memory- critical portions of your code). Therefore one of the most common needs is to call out from Python code to a fast, machine-code routine (e.g. compiled using C/C++ or Fortran). The fact that this is relatively easy to do is a big reason why Python is such an excellent high-level language for scientific and engineering programming.</source>
          <target state="translated">Pythonは優れた言語であり、コーディングするのが楽しいですが、その動的な性質により、オーバーヘッドが発生し、コードが発生する可能性があります（&lt;em&gt;つまり、&lt;/em&gt;forループ内の生の計算）は、静的コンパイル言語で記述された同等のコードよりも10〜100倍遅くなります。さらに、計算中に一時配列が作成および破棄されるため、メモリ使用量が必要以上に大きくなる可能性があります。多くの種類のコンピューティングニーズでは、余分な速度低下とメモリ消費を免れることはできません（少なくともコードの時間またはメモリが重要な部分では）。したがって、最も一般的なニーズの1つは、Pythonコードから高速のマシンコードルーチン（C / C ++またはFortranを使用してコンパイルされたものなど）を呼び出すことです。これが比較的簡単であるという事実は、Pythonが科学および工学プログラミングのための非常に優れた高級言語である大きな理由です。</target>
        </trans-unit>
        <trans-unit id="559b97a21645e20b96438fa99ddc59b3a9a0af7c" translate="yes" xml:space="preserve">
          <source>While a C-style and Fortran-style contiguous array, which has the corresponding flags set, can be addressed with the above strides, the actual strides may be different. This can happen in two cases:</source>
          <target state="translated">対応するフラグが設定されているCスタイルとFortranスタイルの連続配列は、上記のストライドでアドレスを指定することができますが、実際のストライドは異なる場合があります。これは次の2つのケースで起こり得ます。</target>
        </trans-unit>
        <trans-unit id="31b1b02b8719fc4aef9008c2ae820a7865ef1587" translate="yes" xml:space="preserve">
          <source>While the default data type is floating point (&lt;code&gt;np.float64&lt;/code&gt;), you can explicitly specify which data type you want using the &lt;code&gt;dtype&lt;/code&gt; keyword.</source>
          <target state="translated">デフォルトのデータ型は浮動小数点（ &lt;code&gt;np.float64&lt;/code&gt; ）ですが、 &lt;code&gt;dtype&lt;/code&gt; キーワードを使用して、必要なデータ型を明示的に指定できます。</target>
        </trans-unit>
        <trans-unit id="90e66f4e6fa5110e8476c65e7c15355fd96a8c2f" translate="yes" xml:space="preserve">
          <source>While the ndarray object is designed to allow rapid computation in Python, it is also designed to be general-purpose and satisfy a wide- variety of computational needs. As a result, if absolute speed is essential, there is no replacement for a well-crafted, compiled loop specific to your application and hardware. This is one of the reasons that numpy includes f2py so that an easy-to-use mechanisms for linking (simple) C/C++ and (arbitrary) Fortran code directly into Python are available. You are encouraged to use and improve this mechanism. The purpose of this section is not to document this tool but to document the more basic steps to writing an extension module that this tool depends on.</source>
          <target state="translated">ndarray オブジェクトは Python で高速な計算ができるように設計されていますが、汎用性があり、様々な計算ニーズを満たすように設計されています。その結果、絶対的なスピードが必要な場合、アプリケーションやハードウェアに特化した、よく練られたコンパイル済みのループに代わるものはありません。これは、(単純な)C/C++や(任意の)Fortranコードを直接Pythonにリンクするための使いやすいメカニズムが利用できるように、numpyにf2pyが含まれている理由の一つです。このメカニズムを使用して改善することが奨励されています。このセクションの目的は、このツールを文書化することではなく、このツールが依存する拡張モジュールを書くためのより基本的なステップを文書化することです。</target>
        </trans-unit>
        <trans-unit id="d1df1b5a0658c69d8a413e038e320119a5eacba2" translate="yes" xml:space="preserve">
          <source>While the nonzero values can be obtained with &lt;code&gt;a[nonzero(a)]&lt;/code&gt;, it is recommended to use &lt;code&gt;x[x.astype(bool)]&lt;/code&gt; or &lt;code&gt;x[x != 0]&lt;/code&gt; instead, which will correctly handle 0-d arrays.</source>
          <target state="translated">非ゼロ値は &lt;code&gt;x[x.astype(bool)]&lt;/code&gt; &lt;code&gt;a[nonzero(a)]&lt;/code&gt; で取得できますが、代わりにx [x.astype（bool）]または &lt;code&gt;x[x != 0]&lt;/code&gt; を使用することをお勧めします。これにより、0-d配列が正しく処理されます。</target>
        </trans-unit>
        <trans-unit id="95abe15b68efd387eb8c7edc6a4c57dd87ccf623" translate="yes" xml:space="preserve">
          <source>While we&amp;rsquo;re at it, let&amp;rsquo;s also introduce the &amp;lsquo;no_broadcast&amp;rsquo; flag, which will prevent the output from being broadcast. This is important, because we only want one input value for each output. Aggregating more than one input value is a reduction operation which requires special handling. It would already raise an error because reductions must be explicitly enabled in an iterator flag, but the error message that results from disabling broadcasting is much more understandable for end-users. To see how to generalize the square function to a reduction, look at the sum of squares function in the section about Cython.</source>
          <target state="translated">ここでは、出力がブロードキャストされないようにする「no_broadcast」フラグも導入しましょう。各出力に必要な入力値は1つだけなので、これは重要です。複数の入力値を集約することは、特別な処理を必要とするリダクション操作です。イテレータフラグで明示的に削減を有効にする必要があるため、既にエラーが発生しますが、ブロードキャストを無効にしたことによるエラーメッセージは、エンドユーザーにとってよりわかりやすくなっています。二乗関数を縮約に一般化する方法を確認するには、Cythonに関するセクションの二乗和関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="fdf453fd16b5200319b11da91be27d0c70481271" translate="yes" xml:space="preserve">
          <source>White spaces are ignored.</source>
          <target state="translated">ホワイトスペースは無視されます。</target>
        </trans-unit>
        <trans-unit id="22dce6bca851893db69d37c56a8bc235318a963f" translate="yes" xml:space="preserve">
          <source>Who Else Uses NumPy?</source>
          <target state="translated">他にNumPyを使っている人は?</target>
        </trans-unit>
        <trans-unit id="695c34413853a0a8946e80017d6dc886095f0264" translate="yes" xml:space="preserve">
          <source>Who are the responsible party(ies).</source>
          <target state="translated">責任者は誰か。</target>
        </trans-unit>
        <trans-unit id="31b504f4db86b2c606040985beea7e292d8749f2" translate="yes" xml:space="preserve">
          <source>Why is NumPy Fast?</source>
          <target state="translated">なぜNumPyは速いのか?</target>
        </trans-unit>
        <trans-unit id="7da3ad366450168b425d91b2ecc5364e5b9f6133" translate="yes" xml:space="preserve">
          <source>Why is There a Second File?</source>
          <target state="translated">なぜ2つ目のファイルがあるのか?</target>
        </trans-unit>
        <trans-unit id="617b3271b5b69fcf3df8ec039eca36a1dd4b4fb8" translate="yes" xml:space="preserve">
          <source>Why use &lt;code&gt;__new__&lt;/code&gt; rather than just the usual &lt;code&gt;__init__&lt;/code&gt;? Because in some cases, as for ndarray, we want to be able to return an object of some other class. Consider the following:</source>
          <target state="translated">通常の &lt;code&gt;__init__&lt;/code&gt; だけでなく &lt;code&gt;__new__&lt;/code&gt; を使用するのはなぜですか？場合によっては、ndarrayに関しては、他のクラスのオブジェクトを返したい場合があります。次のことを考慮してください。</target>
        </trans-unit>
        <trans-unit id="a5faa59dd442eb9f9b067a10198b95685727452a" translate="yes" xml:space="preserve">
          <source>Width of string to left-fill elements in &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">左フィル要素に文字列の幅。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a87a9df3bc292d00475af99a19cfb5bace676377" translate="yes" xml:space="preserve">
          <source>Wikipedia page: &lt;a href=&quot;https://en.wikipedia.org/wiki/Trapezoidal_rule&quot;&gt;https://en.wikipedia.org/wiki/Trapezoidal_rule&lt;/a&gt;</source>
          <target state="translated">ウィキペディアのページ：&lt;a href=&quot;https://en.wikipedia.org/wiki/Trapezoidal_rule&quot;&gt;https&lt;/a&gt; : //en.wikipedia.org/wiki/Trapezoidal_rule</target>
        </trans-unit>
        <trans-unit id="f57f881086e09b1ae09664bdf831c36a611c6436" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Binomial distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Binomial_distribution&quot;&gt;https://en.wikipedia.org/wiki/Binomial_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「二項分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Binomial_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Binomial_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06cf28156832f9d8c24f1184dfe95f4c17b24eb4" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Cauchy distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Cauchy_distribution&quot;&gt;https://en.wikipedia.org/wiki/Cauchy_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「Cauchyディストリビューション」&lt;a href=&quot;https://en.wikipedia.org/wiki/Cauchy_distribution&quot;&gt;https://en.wikipedia.org/wiki/Cauchy_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f4dafaf375cb5ca788c45f1e6be90dcf059029c" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Convolution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Convolution&quot;&gt;https://en.wikipedia.org/wiki/Convolution&lt;/a&gt;</source>
          <target state="translated">Wikipedia、「Convolution」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Convolution&quot;&gt;https：//en.wikipedia.org/wiki/Convolution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aefec7a4eb1a5aecabb180014fe85015da54a986" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Curve fitting&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Curve_fitting&quot;&gt;https://en.wikipedia.org/wiki/Curve_fitting&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「曲線フィッティング」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Curve_fitting&quot;&gt;https：//en.wikipedia.org/wiki/Curve_fitting&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ceebe5e149c9b6f7b481dab32a8b80c5a5e67177" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Dirichlet distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Dirichlet_distribution&quot;&gt;https://en.wikipedia.org/wiki/Dirichlet_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ディリクレ分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Dirichlet_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Dirichlet_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c274fb3e94d194d553ba10a5c9ba49ab92ab9ab3" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Exponential distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_distribution&quot;&gt;https://en.wikipedia.org/wiki/Exponential_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「指数分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Exponential_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0748ca7a20f6367685397b634c58b22d1101a55" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Exponential function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_function&quot;&gt;https://en.wikipedia.org/wiki/Exponential_function&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「指数関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_function&quot;&gt;https：//en.wikipedia.org/wiki/Exponential_function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="450a7618a7ae64b3deba48000f4698be90e329a4" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;F-distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/F-distribution&quot;&gt;https://en.wikipedia.org/wiki/F-distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「F-distribution」、&lt;a href=&quot;https://en.wikipedia.org/wiki/F-distribution&quot;&gt;https：//en.wikipedia.org/wiki/F-distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17b148f03642613eb714110e8ca6f8c433f95ee5" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Gamma distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_distribution&quot;&gt;https://en.wikipedia.org/wiki/Gamma_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ガンマ分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Gamma_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="607958a0e56c238af4c16a4ba8a36ed9dd6aae60" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Hyperbolic_function&quot;&gt;https://en.wikipedia.org/wiki/Hyperbolic_function&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ハイパーボリック関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Hyperbolic_function&quot;&gt;https：//en.wikipedia.org/wiki/Hyperbolic_function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2ed497979708d30048971b5f912f3a976a07c07" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Hypergeometric distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Hypergeometric_distribution&quot;&gt;https://en.wikipedia.org/wiki/Hypergeometric_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「超幾何分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Hypergeometric_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Hypergeometric_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6c41ede2dc056083c46b6379a06aec4ce640792" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse Gaussian distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&quot;&gt;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「逆ガウス分布」&lt;a href=&quot;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&quot;&gt;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c81f68efd7be19a13fb16b9d3ede8e0916b2b3ba" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Arccosh&quot;&gt;https://en.wikipedia.org/wiki/Arccosh&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「逆双曲線関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Arccosh&quot;&gt;https：//en.wikipedia.org/wiki/Arccosh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="788ea2b2b4739c5aba7340cb8614d021cf776477" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Arcsinh&quot;&gt;https://en.wikipedia.org/wiki/Arcsinh&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「逆双曲線関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Arcsinh&quot;&gt;https：//en.wikipedia.org/wiki/Arcsinh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7afed20bd82634dc688b205c679d736b6a3ca9fd" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Arctanh&quot;&gt;https://en.wikipedia.org/wiki/Arctanh&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「逆双曲線関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Arctanh&quot;&gt;https：//en.wikipedia.org/wiki/Arctanh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cbf65d4c8a1edb6485c9090716aa502b1cad498" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Laplace distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Laplace_distribution&quot;&gt;https://en.wikipedia.org/wiki/Laplace_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ラプラス分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Laplace_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Laplace_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5dafa467113c3ca3efc06f2332310e05c7a2741" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Logarithm&amp;rdquo;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithm&quot;&gt;https://en.wikipedia.org/wiki/Logarithm&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「対数」。&lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithm&quot;&gt;https://en.wikipedia.org/wiki/Logarithm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c49c2d4eec5ab9e21b7777f19f27c237fceb82c5" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Logarithmic distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithmic_distribution&quot;&gt;https://en.wikipedia.org/wiki/Logarithmic_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「対数分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithmic_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Logarithmic_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78ccdc5f379af6bc4c7ea04cc13613370465bc4d" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Logistic-distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Logistic_distribution&quot;&gt;https://en.wikipedia.org/wiki/Logistic_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia、「Logistic-distribution」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Logistic_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Logistic_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c3fd20f148f2b77555334569014216015267361" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Negative binomial distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Negative_binomial_distribution&quot;&gt;https://en.wikipedia.org/wiki/Negative_binomial_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「負の二項分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Negative_binomial_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Negative_binomial_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="785913c64c1118d2e5699ad155c8010ddb5608e2" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Noncentral F-distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_F-distribution&quot;&gt;https://en.wikipedia.org/wiki/Noncentral_F-distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia、「Noncentral F-distribution」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_F-distribution&quot;&gt;https：//en.wikipedia.org/wiki/Noncentral_F-distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="290d1f296088408d1c3d2c95c7a7428e7d2c6df3" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Noncentral chi-squared distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&quot;&gt;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「非中心カイ二乗分布」&lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&quot;&gt;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f54672c52ce6e2a5669a3fc7c140d35832003af5" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Normal distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution&quot;&gt;https://en.wikipedia.org/wiki/Normal_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「通常の配布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Normal_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47b80170417ddd59eaf50cda77d4edfc322816d8" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Pareto distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_distribution&quot;&gt;https://en.wikipedia.org/wiki/Pareto_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「パレート分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Pareto_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d689426c6cd7a9b7cf6ef5d58b51175bf540f33b" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Poisson distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_distribution&quot;&gt;https://en.wikipedia.org/wiki/Poisson_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ポアソン分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Poisson_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8adc5c562751b6b393b3aa2c35d2e2c7be11d14b" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Poisson process&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_process&quot;&gt;https://en.wikipedia.org/wiki/Poisson_process&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ポアソンプロセス」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_process&quot;&gt;https：//en.wikipedia.org/wiki/Poisson_process&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ca57768f5ed62a15abd4e259a3842bfc684623e" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Polynomial interpolation&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Polynomial_interpolation&quot;&gt;https://en.wikipedia.org/wiki/Polynomial_interpolation&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「多項式補間」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Polynomial_interpolation&quot;&gt;https：//en.wikipedia.org/wiki/Polynomial_interpolation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca489fd77451dbec195b0cb37e2326fd572ee535" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Rayleigh distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Rayleigh_distribution&quot;&gt;https://en.wikipedia.org/wiki/Rayleigh_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「レイリー配布」&lt;a href=&quot;https://en.wikipedia.org/wiki/Rayleigh_distribution&quot;&gt;https://en.wikipedia.org/wiki/Rayleigh_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56ead22f9041996687e49f69c8aa068b4de6264b" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Sinc function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Sinc_function&quot;&gt;https://en.wikipedia.org/wiki/Sinc_function&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「Sinc関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Sinc_function&quot;&gt;https：//en.wikipedia.org/wiki/Sinc_function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdeeaa545061fb4a54e4c2ef8adfce392d92d540" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Student&amp;rsquo;s t-distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Student's_t-distribution&quot;&gt;https://en.wikipedia.org/wiki/Student&amp;rsquo;s_t-distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「Student's t-distribution」&lt;a href=&quot;https://en.wikipedia.org/wiki/Student's_t-distribution&quot;&gt;https://en.wikipedia.org/wiki/Student's_t-distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="890688a22e8725c7cf1acbafe1abacdd0f27f3f0" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Triangular distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Triangular_distribution&quot;&gt;https://en.wikipedia.org/wiki/Triangular_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「三角分布」&lt;a href=&quot;https://en.wikipedia.org/wiki/Triangular_distribution&quot;&gt;https://en.wikipedia.org/wiki/Triangular_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d2b813725fc8f5761f54e225edc22f4a2afa8f7" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Two&amp;rsquo;s complement&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Two's_complement&quot;&gt;https://en.wikipedia.org/wiki/Two&amp;rsquo;s_complement&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「2の補数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Two's_complement&quot;&gt;https：//en.wikipedia.org/wiki/Two's_complement&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecbb6d74623f82d0937cf4a5246298d1b6f5e329" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Weibull distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Weibull_distribution&quot;&gt;https://en.wikipedia.org/wiki/Weibull_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ワイブル分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Weibull_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Weibull_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98885a7cf6a7f9d6ba5424eda905db3584405b75" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Window function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Window_function&quot;&gt;https://en.wikipedia.org/wiki/Window_function&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ウィンドウ関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Window_function&quot;&gt;https：//en.wikipedia.org/wiki/Window_function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49c2c96ddc19c930b5486ff7f81f0ce35e375ba2" translate="yes" xml:space="preserve">
          <source>Will install data-files to the locations:</source>
          <target state="translated">データファイルをその場所にインストールします。</target>
        </trans-unit>
        <trans-unit id="0c6212fef9bffd0b18c4eb2da8c005e9e5030130" translate="yes" xml:space="preserve">
          <source>Will need to add this in Python exposure</source>
          <target state="translated">Pythonの露出でこれを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="77b99d58f8024a3322642cff8a7f3229ae7fe238" translate="yes" xml:space="preserve">
          <source>Window for the returned series. If None the class window is used. The default is None.</source>
          <target state="translated">返された系列のウィンドウ。Noneの場合はクラス・ウィンドウが使用されます。デフォルトは None です。</target>
        </trans-unit>
        <trans-unit id="cec65d78532248828b5443e4752a3df7fc4931aa" translate="yes" xml:space="preserve">
          <source>Window functions</source>
          <target state="translated">ウィンドウ機能</target>
        </trans-unit>
        <trans-unit id="e640f561d38642c76bd680b6e8d0ccf0fad3f32d" translate="yes" xml:space="preserve">
          <source>Window length.</source>
          <target state="translated">窓の長さ</target>
        </trans-unit>
        <trans-unit id="42e8204afc5c4121e8aabab0c8c2df383aac93dd" translate="yes" xml:space="preserve">
          <source>Window shape</source>
          <target state="translated">窓の形状</target>
        </trans-unit>
        <trans-unit id="ef32d19ad6db1a011986e848a81515a21a4878bf" translate="yes" xml:space="preserve">
          <source>Window to use for the returned series. The default value is the default class domain</source>
          <target state="translated">返された系列に使用するウィンドウ。デフォルト値はデフォルトのクラスドメイン</target>
        </trans-unit>
        <trans-unit id="092e83dcd0b17c063ad8bac69729a61bcd90390f" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.chebyshev.chebyshev.domain#numpy.polynomial.chebyshev.Chebyshev.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.chebyshev.chebyshev.domain#numpy.polynomial.chebyshev.Chebyshev.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="26cbe48bc40af2be9b95617385514366c179f8c5" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.hermite.hermite.domain#numpy.polynomial.hermite.Hermite.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.hermite.hermite.domain#numpy.polynomial.hermite.Hermite.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="e22365565e3904f47ab3840e3c565f4c9730ed9d" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.hermite_e.hermitee.domain#numpy.polynomial.hermite_e.HermiteE.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.hermite_e.hermitee.domain#numpy.polynomial.hermite_e.HermiteE.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="9ae30d11df20bd6d7701709f6c7a07d9a4c0c35b" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.laguerre.laguerre.domain#numpy.polynomial.laguerre.Laguerre.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [0, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.laguerre.laguerre.domain#numpy.polynomial.laguerre.Laguerre.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[0、1]です。</target>
        </trans-unit>
        <trans-unit id="f003de753cd9362865426af3e4947b5f99fe6dc8" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.legendre.legendre.domain#numpy.polynomial.legendre.Legendre.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.legendre.legendre.domain#numpy.polynomial.legendre.Legendre.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="88febbc72ccac8a306fb0efe81d8a0b92e99d8f9" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.polynomial.polynomial.domain#numpy.polynomial.polynomial.Polynomial.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.polynomial.polynomial.domain#numpy.polynomial.polynomial.Polynomial.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="3a11c9632c71bf466541bc0b135a1a92817671b6" translate="yes" xml:space="preserve">
          <source>Windows 98, Python 2.1.1. Idle 0.8</source>
          <target state="translated">Windows 98、Python 2.1.1.1、Idle 0.8</target>
        </trans-unit>
        <trans-unit id="838d226af82740a98f0145b002fc6c84c21c7131" translate="yes" xml:space="preserve">
          <source>Windows Me Python 2.3(EE), Idle 1.0, PyCrust 0.7.2 Python 2.1.1 Idle 0.8</source>
          <target state="translated">Windows Me Python 2.3(EE),Idle 1.0,PyCrust 0.7.2 Python 2.1.1 Idle 0.8</target>
        </trans-unit>
        <trans-unit id="2d2f4a4fca6daeabadddf9bee05651305943de5c" translate="yes" xml:space="preserve">
          <source>Windows XP, Python 2.3.3</source>
          <target state="translated">Windows XP、Python 2.3.3</target>
        </trans-unit>
        <trans-unit id="5a8d5a3a8e3ea63c9e1686fc793d226b8e269fca" translate="yes" xml:space="preserve">
          <source>Windows builds use the &lt;a href=&quot;https://mingwpy.github.io&quot;&gt;mingw-w64 toolchain&lt;/a&gt;;</source>
          <target state="translated">Windowsビルドは&lt;a href=&quot;https://mingwpy.github.io&quot;&gt;mingw-w64ツールチェーン&lt;/a&gt;を使用します;</target>
        </trans-unit>
        <trans-unit id="1d0c85b48bfec29caf52b4700eb4512e9e2980af" translate="yes" xml:space="preserve">
          <source>Windows: 32-bit and 64-bit wheels built using Appveyor;</source>
          <target state="translated">Windows。Appveyorを使って32ビットと64ビットのホイールを構築しました。</target>
        </trans-unit>
        <trans-unit id="da15a9c19d58f2c4da712f0cc0618069c85b20a3" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;../reference/generated/numpy.savetxt#numpy.savetxt&quot;&gt;&lt;code&gt;savetxt&lt;/code&gt;&lt;/a&gt;, you can specify headers, footers, comments, and more.</source>
          <target state="translated">では&lt;a href=&quot;../reference/generated/numpy.savetxt#numpy.savetxt&quot;&gt; &lt;code&gt;savetxt&lt;/code&gt; &lt;/a&gt;、あなたはヘッダー、フッター、コメント、および多くを指定することができます。</target>
        </trans-unit>
        <trans-unit id="dd8127e25ea95e0575d8982f425efe9325056bce" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;Generator.integers&lt;/code&gt;, you can generate random integers from low (remember that this is inclusive with NumPy) to high (exclusive). You can set &lt;code&gt;endpoint=True&lt;/code&gt; to make the high number inclusive.</source>
          <target state="translated">では &lt;code&gt;Generator.integers&lt;/code&gt; 、あなたが低いから整数の乱数を生成することができ、高（排他的）に（これはnumpyのと包括的であることを覚えておいてください）。高い数値を含むように &lt;code&gt;endpoint=True&lt;/code&gt; を設定できます。</target>
        </trans-unit>
        <trans-unit id="90f4eb492be6190ac8266dfa1122d297c822b3bf" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;intent(hide)&lt;/code&gt; or &lt;code&gt;optional&lt;/code&gt; attributes specified and using a wrapper function without specifying the callback argument in argument list then call-back function is looked in the namespace of F2PY generated extension module where it can be set as a module attribute by a user.</source>
          <target state="translated">&lt;code&gt;intent(hide)&lt;/code&gt; 又は &lt;code&gt;optional&lt;/code&gt; 指定された属性と、その後コールバック関数は、それがユーザによるモジュールの属性として設定することができるF2PY生成拡張モジュールの名前空間で検索され、引数リスト内のコールバック引数を指定せずにラッパー関数を使用。</target>
        </trans-unit>
        <trans-unit id="c915e5fc79ca95b662b950c7a602693802648922" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;np.reshape&lt;/code&gt;, you can specify a few optional parameters:</source>
          <target state="translated">では &lt;code&gt;np.reshape&lt;/code&gt; 、あなたはいくつかのオプションのパラメータを指定することができます。</target>
        </trans-unit>
        <trans-unit id="aad51d8d6c50eba333fa3e657d7d2ea1d24b4116" translate="yes" xml:space="preserve">
          <source>With Matplotlib, you have access to an enormous number of visualization options.</source>
          <target state="translated">Matplotlibを使用すると、膨大な数の可視化オプションにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="32efd2d58393af190f568a67689ea6a3e549d28a" translate="yes" xml:space="preserve">
          <source>With a context manager:</source>
          <target state="translated">コンテキストマネージャーを使って</target>
        </trans-unit>
        <trans-unit id="f3558ac1d15b5a57abf53ea4474761a5d8cd7257" translate="yes" xml:space="preserve">
          <source>With a higher dimensional array the split is still along the first axis.</source>
          <target state="translated">高次元の配列では、分割は第1軸に沿って行われます。</target>
        </trans-unit>
        <trans-unit id="ee544b31e6fafc07fbb87de84c67e07d54295002" translate="yes" xml:space="preserve">
          <source>With a higher dimensional array the split is still along the second axis.</source>
          <target state="translated">高次元の配列では、分割は第2軸に沿って行われます。</target>
        </trans-unit>
        <trans-unit id="ab0ad2552c2290da0b4beaf3ab8b39ed880b7892" translate="yes" xml:space="preserve">
          <source>With a list of depth 1, &lt;a href=&quot;#numpy.block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; can be used as &lt;a href=&quot;numpy.hstack#numpy.hstack&quot;&gt;&lt;code&gt;hstack&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">深さ1のリストでは、&lt;a href=&quot;#numpy.block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;numpy.hstack#numpy.hstack&quot;&gt; &lt;code&gt;hstack&lt;/code&gt; &lt;/a&gt;として使用できます</target>
        </trans-unit>
        <trans-unit id="4a6ca14b02d06fe44564f452a8db5dc0b8887f51" translate="yes" xml:space="preserve">
          <source>With a list of depth 2, &lt;a href=&quot;#numpy.block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; can be used in place of &lt;a href=&quot;numpy.vstack#numpy.vstack&quot;&gt;&lt;code&gt;vstack&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">深さ2のリストを使用すると、&lt;a href=&quot;numpy.vstack#numpy.vstack&quot;&gt; &lt;code&gt;vstack&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;#numpy.block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="5f9ff7e20abf4e4beec43f72205b5efc96b3cabc" translate="yes" xml:space="preserve">
          <source>With a similar procedure the forward/backward approximations used for boundaries can be derived.</source>
          <target state="translated">同様の手順で、境界線に使用される前方/後方の近似を導出することができます。</target>
        </trans-unit>
        <trans-unit id="07af3a8001dd5a2cff9dc94ccf6ded3daafa9ec6" translate="yes" xml:space="preserve">
          <source>With instances:</source>
          <target state="translated">インスタンスで</target>
        </trans-unit>
        <trans-unit id="98601db3737fbbb6544e879545b48b394db52bb5" translate="yes" xml:space="preserve">
          <source>With optional &lt;code&gt;start&lt;/code&gt;, test beginning at that position. With optional &lt;code&gt;end&lt;/code&gt;, stop comparing at that position.</source>
          <target state="translated">オプションの &lt;code&gt;start&lt;/code&gt; では、その位置からテストを開始します。オプションの &lt;code&gt;end&lt;/code&gt; を使用すると、その位置で比較を停止します。</target>
        </trans-unit>
        <trans-unit id="432a947727f183556cdf77d6e3797bb503e0a762" translate="yes" xml:space="preserve">
          <source>With these definitions, an Institutional Partner is any recognized legal entity in the United States or elsewhere that employs at least 1 Institutional Contributor of Institutional Council Member. Institutional Partners can be for-profit or non-profit entities.</source>
          <target state="translated">これらの定義では、機関投資家のパートナーとは、米国又はその他の地域で認められた法人で、少なくとも1人の 機関投資家を雇用している機関投資家評議会メンバーを指す。機関投資家のパートナーは営利団体であっても非営利団体であっても構わない。</target>
        </trans-unit>
        <trans-unit id="c2d93c630b90cc0cf1d738f44caa66baf4d85928" translate="yes" xml:space="preserve">
          <source>With types:</source>
          <target state="translated">タイプがあります。</target>
        </trans-unit>
        <trans-unit id="5297c5a4978350f9e16a1aab9a51984e592036fa" translate="yes" xml:space="preserve">
          <source>Within a compiled Python module, &lt;code&gt;import_array()&lt;/code&gt; should only get called once. This could be in a C/C++ file that you have written and is linked to the module. If this is the case, then none of your interface files should &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; or call &lt;code&gt;import_array()&lt;/code&gt;. Or, this initialization call could be in a wrapper file generated by &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; from an interface file that has the &lt;code&gt;%init&lt;/code&gt; block as above. If this is the case, and you have more than one &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file, then only one interface file should &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; and call &lt;code&gt;import_array()&lt;/code&gt;.</source>
          <target state="translated">コンパイルされたPythonモジュール内では、 &lt;code&gt;import_array()&lt;/code&gt; は一度だけ呼び出されます。これは、作成したC / C ++ファイル内にあり、モジュールにリンクされている可能性があります。この場合、どのインターフェースファイルも &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; を#defineしたり、 &lt;code&gt;import_array()&lt;/code&gt; を呼び出したりしてはなりません。または、この初期化呼び出しは、上記のように &lt;code&gt;%init&lt;/code&gt; ブロックを持つインターフェースファイルから&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;によって生成されたラッパーファイルにある可能性があります。これが &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; 、複数の&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;インターフェースファイルがある場合、1つのインターフェースファイルのみが#define SWIG_FILE_WITH_INITを呼び出して &lt;code&gt;import_array()&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="42a24f4738db07788648f7de55bbb8493bc76610" translate="yes" xml:space="preserve">
          <source>Within these test methods, &lt;code&gt;assert_()&lt;/code&gt; and related functions are used to test whether a certain assumption is valid. If the assertion fails, the test fails. Note that the Python builtin &lt;code&gt;assert&lt;/code&gt; should not be used, because it is stripped during compilation with &lt;code&gt;-O&lt;/code&gt;.</source>
          <target state="translated">これらのテストメソッド内では、 &lt;code&gt;assert_()&lt;/code&gt; および関連する関数を使用して、特定の仮定が有効かどうかをテストします。アサーションが失敗すると、テストは失敗します。Python組み込み &lt;code&gt;assert&lt;/code&gt; は &lt;code&gt;-O&lt;/code&gt; を使用してコンパイル中に削除されるため、使用しないでください。</target>
        </trans-unit>
        <trans-unit id="0bf68fec54dbd7c575b675c0f5ecb37ef3c52771" translate="yes" xml:space="preserve">
          <source>Without a mask, the missing value will be filled with something, depending on what its corresponding type:</source>
          <target state="translated">マスクがない場合、欠落している値は、対応する型に応じて何かで埋められます。</target>
        </trans-unit>
        <trans-unit id="2729aa84fd8dbce5d8f5065881c86da559d3b68c" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;np.ix_&lt;/code&gt; call or only the diagonal elements would be selected.</source>
          <target state="translated">なし &lt;code&gt;np.ix_&lt;/code&gt; コールまたは対角要素のみが選択されることになります。</target>
        </trans-unit>
        <trans-unit id="c9d58767cd4150ffea0b74d98e5d21e09369f5e3" translate="yes" xml:space="preserve">
          <source>Work in progress. Basic linear algebra to be included here.</source>
          <target state="translated">進行中の作業。ここに収録される基礎線形代数。</target>
        </trans-unit>
        <trans-unit id="eb6d460982da286faa01241fe0e8688fe713d131" translate="yes" xml:space="preserve">
          <source>Working on the flattened array does not return slices along an axis but selects elements.</source>
          <target state="translated">平坦化された配列での作業は、軸に沿ったスライスを返すのではなく、要素を選択します。</target>
        </trans-unit>
        <trans-unit id="18f9309c3cd6c825d39b8b49605118cbab7b4c08" translate="yes" xml:space="preserve">
          <source>Working with mathematical formulas</source>
          <target state="translated">数式を使った作業</target>
        </trans-unit>
        <trans-unit id="20669d5d64b568db66a362c01f09d0be2912bdf7" translate="yes" xml:space="preserve">
          <source>Works only with 2-D arrays at the moment.</source>
          <target state="translated">現時点では2次元アレイのみで動作します。</target>
        </trans-unit>
        <trans-unit id="10b18b3520a07a5cef88cf768f74798c3a76c969" translate="yes" xml:space="preserve">
          <source>Wrapper around &lt;code&gt;cPickle.load&lt;/code&gt; which accepts either a file-like object or a filename.</source>
          <target state="translated">ファイルのようなオブジェクトまたはファイル名を受け入れる &lt;code&gt;cPickle.load&lt;/code&gt; のラッパー。</target>
        </trans-unit>
        <trans-unit id="9462c7fa9fecb835eb7e04e6564736baefd4da76" translate="yes" xml:space="preserve">
          <source>Wrapper functions to more user-friendly calling of certain math functions whose output data-type is different than the input data-type in certain domains of the input.</source>
          <target state="translated">出力データ型が入力の特定の領域で入力データ型と異なる出力データ型を持つ特定の数学関数の呼び出しをより使いやすくするためのラッパー関数。</target>
        </trans-unit>
        <trans-unit id="9ef9ae984284213ba399a55caa175126af51b14e" translate="yes" xml:space="preserve">
          <source>Wrapping Fortran or C functions to Python using F2PY consists of the following steps:</source>
          <target state="translated">F2PYを使ってFortranやC関数をPythonにラッピングするには、以下のステップがあります。</target>
        </trans-unit>
        <trans-unit id="4a3455d09d842fa89e3426820a565b99b12203bd" translate="yes" xml:space="preserve">
          <source>Wraps an index to the valid range if it is out of bounds.</source>
          <target state="translated">インデックスが範囲外の場合は、有効な範囲にラップします。</target>
        </trans-unit>
        <trans-unit id="7a347606df979a4d48c841a72544818a00c72b80" translate="yes" xml:space="preserve">
          <source>Wraps the numpy array and sets the mask according to context.</source>
          <target state="translated">numpy配列をラップし、コンテキストに応じてマスクを設定します。</target>
        </trans-unit>
        <trans-unit id="e18273e50d37416e99772f5cab31d35dc76b18b6" translate="yes" xml:space="preserve">
          <source>Write any changes in the array to the file on disk.</source>
          <target state="translated">配列の変更をディスク上のファイルに書き込みます。</target>
        </trans-unit>
        <trans-unit id="17ca7c9b94fb6b9ea51995accba9353b9d7605ae" translate="yes" xml:space="preserve">
          <source>Write array to a file as text or binary (default).</source>
          <target state="translated">配列をテキストまたはバイナリとしてファイルに書き込みます(デフォルト)。</target>
        </trans-unit>
        <trans-unit id="b0ef5a1f165fa86b8ee546df97daa724c33481fa" translate="yes" xml:space="preserve">
          <source>Write data to memmap array:</source>
          <target state="translated">memmap配列にデータを書き込む。</target>
        </trans-unit>
        <trans-unit id="39de007639c1cf0174274b49579ea3af01d9afca" translate="yes" xml:space="preserve">
          <source>Write the contents of &lt;em&gt;self&lt;/em&gt; to the file pointer &lt;em&gt;fp&lt;/em&gt; in C-style contiguous fashion. Write the data as binary bytes if &lt;em&gt;sep&lt;/em&gt; is the string &amp;ldquo;&amp;rdquo;or &lt;code&gt;NULL&lt;/code&gt;. Otherwise, write the contents of &lt;em&gt;self&lt;/em&gt; as text using the &lt;em&gt;sep&lt;/em&gt; string as the item separator. Each item will be printed to the file. If the &lt;em&gt;format&lt;/em&gt; string is not &lt;code&gt;NULL&lt;/code&gt; or &amp;ldquo;&amp;rdquo;, then it is a Python print statement format string showing how the items are to be written.</source>
          <target state="translated">&lt;em&gt;self&lt;/em&gt;の内容をCスタイルの連続した方法でファイルポインター&lt;em&gt;fp&lt;/em&gt;に書き込みます。&lt;em&gt;sep&lt;/em&gt;が文字列&amp;ldquo;&amp;rdquo;または &lt;code&gt;NULL&lt;/code&gt; の場合、データをバイナリバイトとして書き込みます。それ以外の場合は、&lt;em&gt;sep&lt;/em&gt;文字列を項目セパレータとして使用して、&lt;em&gt;self&lt;/em&gt;の内容をテキストとして書き込みます。各アイテムはファイルに出力されます。&lt;em&gt;フォーマット&lt;/em&gt;文字列が &lt;code&gt;NULL&lt;/code&gt; でも&amp;ldquo;&amp;rdquo;でもない場合は、アイテムの記述方法を示すPythonのprintステートメントフォーマット文字列です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c365fce32144380f0457057b029153143df4f1f" translate="yes" xml:space="preserve">
          <source>Writeable flag of C-API wrapped arrays</source>
          <target state="translated">C-API ラップされた配列の書き込み可能フラグ</target>
        </trans-unit>
        <trans-unit id="427fe64590307fe90e0ed3c7002e9d59f551f75b" translate="yes" xml:space="preserve">
          <source>Writeable keyword argument for &lt;code&gt;as_strided&lt;/code&gt;</source>
          <target state="translated">以下のための書き込み可能なキーワード引数 &lt;code&gt;as_strided&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d00c80b2825b910b28f217d40888491f74cea96" translate="yes" xml:space="preserve">
          <source>Writeable returned arrays (since version 1.10.0):</source>
          <target state="translated">書き込み可能な戻り値の配列(バージョン 1.10.0 以降)。</target>
        </trans-unit>
        <trans-unit id="197f0e3d3c3e05cccf3208160a3555c70f66258d" translate="yes" xml:space="preserve">
          <source>Writing NumPy arrays to files</source>
          <target state="translated">ファイルへのNumPy配列の書き込み</target>
        </trans-unit>
        <trans-unit id="282b9177a1f4610d4e348b555b88bf30f53e0383" translate="yes" xml:space="preserve">
          <source>Writing an extension module</source>
          <target state="translated">拡張モジュールの記述</target>
        </trans-unit>
        <trans-unit id="0c3bf8fb2ea06db30fe5350590bb97d5b64d0bc1" translate="yes" xml:space="preserve">
          <source>Writing benchmarks</source>
          <target state="translated">ベンチマークの書き方</target>
        </trans-unit>
        <trans-unit id="c65f92e1986e8f85d7778ff39887ed018803befa" translate="yes" xml:space="preserve">
          <source>Writing custom array containers</source>
          <target state="translated">カスタム配列コンテナの記述</target>
        </trans-unit>
        <trans-unit id="8df331347211aebb4040fc654e8d39cec0f7787f" translate="yes" xml:space="preserve">
          <source>Writing technical documentation</source>
          <target state="translated">技術文書の作成</target>
        </trans-unit>
        <trans-unit id="6ebe08ad44f2f2a207e761b2763be6cc2be06253" translate="yes" xml:space="preserve">
          <source>Writing tests for the &lt;code&gt;numpy.i&lt;/code&gt;&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file is a combinatorial headache. At present, 12 different data types are supported, each with 74 different argument signatures, for a total of 888 typemaps supported &amp;ldquo;out of the box&amp;rdquo;. Each of these typemaps, in turn, might require several unit tests in order to verify expected behavior for both proper and improper inputs. Currently, this results in more than 1,000 individual unit tests executed when &lt;code&gt;make test&lt;/code&gt; is run in the &lt;code&gt;numpy/tools/swig&lt;/code&gt; subdirectory.</source>
          <target state="translated">&lt;code&gt;numpy.i&lt;/code&gt; &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;インターフェースファイルのテストを記述することは、組み合わせの頭痛の種です。現在、12の異なるデータ型がサポートされており、それぞれに74の異なる引数シグネチャがあり、合計888個のタイプマップが「そのまま」サポートされます。これらの各タイプマップは、適切な入力と不適切な入力の両方で予想される動作を検証するために、いくつかの単体テストを必要とする場合があります。現在、 &lt;code&gt;numpy/tools/swig&lt;/code&gt; サブディレクトリで &lt;code&gt;make test&lt;/code&gt; を実行すると、1,000以上の個別のユニットテストが実行されます。</target>
        </trans-unit>
        <trans-unit id="2816eea6d2ca27dc13489d1d22deb06f1c29fb32" translate="yes" xml:space="preserve">
          <source>Writing the commit message</source>
          <target state="translated">コミットメッセージの書き方</target>
        </trans-unit>
        <trans-unit id="ebee068a6bbb2b626411eaf7fd90b5ceb9e67c66" translate="yes" xml:space="preserve">
          <source>Writing to the result of &lt;code&gt;numpy.broadcast_arrays&lt;/code&gt; will warn</source>
          <target state="translated">&lt;code&gt;numpy.broadcast_arrays&lt;/code&gt; の結果に書き込むと、警告が表示されます</target>
        </trans-unit>
        <trans-unit id="aecfd6c8b6bdc8850ec5e6c24472a391088658d3" translate="yes" xml:space="preserve">
          <source>Writing typemaps can be a bit nonintuitive. If you have specific questions about writing &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; typemaps for NumPy, the developers of &lt;code&gt;numpy.i&lt;/code&gt; do monitor the &lt;a href=&quot;mailto:Numpy-discussion%40python.org&quot;&gt;Numpy-discussion&lt;/a&gt; and &lt;a href=&quot;mailto:Swig-user%40lists.sourceforge.net&quot;&gt;Swig-user&lt;/a&gt; mail lists.</source>
          <target state="translated">タイプマップの記述は少し直感的ではない場合があります。NumPyの&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;タイプマップの記述について具体的な質問がある場合、 &lt;code&gt;numpy.i&lt;/code&gt; の開発者は&lt;a href=&quot;mailto:Numpy-discussion%40python.org&quot;&gt;Numpy-discussion&lt;/a&gt;およびSwig &lt;a href=&quot;mailto:Swig-user%40lists.sourceforge.net&quot;&gt;-user&lt;/a&gt;メールリストを監視します。</target>
        </trans-unit>
        <trans-unit id="67b3075df8e687d02e42240f00e9c97b2d568182" translate="yes" xml:space="preserve">
          <source>Writing your own tests</source>
          <target state="translated">自分のテストを書く</target>
        </trans-unit>
        <trans-unit id="d413bc13e5a3684c16168d045c65e08c472bd899" translate="yes" xml:space="preserve">
          <source>Writing your own ufunc</source>
          <target state="translated">自分のufuncを書く</target>
        </trans-unit>
        <trans-unit id="906b1e2537b7a59648d2378a60c2b5ab4b446170" translate="yes" xml:space="preserve">
          <source>XXX: I just obtained these values empirically</source>
          <target state="translated">XXX:経験的に得た値です。</target>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="translated">Y</target>
        </trans-unit>
        <trans-unit id="3e44498549b3ccfc159cdee6bdb9318868914b00" translate="yes" xml:space="preserve">
          <source>Yet another possibility is to use any of the following functions:</source>
          <target state="translated">さらに別の可能性として、以下の関数のいずれかを使用することができます。</target>
        </trans-unit>
        <trans-unit id="881f60e93d520cc9c2597264d824b1a04946803a" translate="yes" xml:space="preserve">
          <source>Yet, we have to &lt;em&gt;build&lt;/em&gt; a house before it exists:</source>
          <target state="translated">それでも、家が存在する前に家を&lt;em&gt;建てる&lt;/em&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="59fbe76f39839efb6c5b691e1b2b5256f482c50b" translate="yes" xml:space="preserve">
          <source>You already have your own forked copy of the &lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy&lt;/a&gt; repository, by following &lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;Making your own copy (fork) of NumPy&lt;/a&gt;, &lt;a href=&quot;gitwash/development_setup#set-up-fork&quot;&gt;Set up your fork&lt;/a&gt;, you have configured &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; by following &lt;a href=&quot;gitwash/configure_git#configure-git&quot;&gt;Git configuration&lt;/a&gt;, and have linked the upstream repository as explained in &lt;a href=&quot;gitwash/development_setup#linking-to-upstream&quot;&gt;Linking your repository to the upstream repo&lt;/a&gt;.</source>
          <target state="translated">あなたはすでに、独自のフォークコピー持って&lt;a href=&quot;https://www.numpy.org&quot;&gt;numpyのの&lt;/a&gt;次で、リポジトリを&lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;numpyの独自のコピー（フォーク）を作り&lt;/a&gt;、&lt;a href=&quot;gitwash/development_setup#set-up-fork&quot;&gt;自分のフォークを設定し&lt;/a&gt;、あなたが設定した&lt;a href=&quot;https://git-scm.com/&quot;&gt;Gitのを&lt;/a&gt;以下で&lt;a href=&quot;gitwash/configure_git#configure-git&quot;&gt;Gitの設定を&lt;/a&gt;し、で説明したように、上流リポジトリリンクされている&lt;a href=&quot;gitwash/development_setup#linking-to-upstream&quot;&gt;リポジトリのリンクをアップストリームリポジトリへ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00eb290eb607af17a427008cd0df7020db925634" translate="yes" xml:space="preserve">
          <source>You can &amp;ldquo;test run&amp;rdquo; the new documentation in a browser to make sure the links work:</source>
          <target state="translated">ブラウザで新しいドキュメントを「テスト実行」して、リンクが機能することを確認できます。</target>
        </trans-unit>
        <trans-unit id="77839705742503276b6ae229dcc3f770d8625b34" translate="yes" xml:space="preserve">
          <source>You can access and modify individual fields of a structured array by indexing with the field name:</source>
          <target state="translated">フィールド名でインデックスを作成することで、構造化配列の個々のフィールドにアクセスして変更することができます。</target>
        </trans-unit>
        <trans-unit id="7e4cda34004c0b0283cc5d19ef4967039dda6a9e" translate="yes" xml:space="preserve">
          <source>You can add an axis at index position 0 with:</source>
          <target state="translated">でインデックス位置0に軸を追加することができます。</target>
        </trans-unit>
        <trans-unit id="1ebcf08c273e379725ba3c03f7dbf5125d70db1c" translate="yes" xml:space="preserve">
          <source>You can add the arrays together with the plus sign.</source>
          <target state="translated">プラス記号と一緒に配列を追加することができます。</target>
        </trans-unit>
        <trans-unit id="3c8b2d15539f2fe59ff95576c13822e6dc13c97b" translate="yes" xml:space="preserve">
          <source>You can aggregate all the values in a matrix and you can aggregate them across columns or rows using the &lt;code&gt;axis&lt;/code&gt; parameter:</source>
          <target state="translated">マトリックス内のすべての値を集計でき、 &lt;code&gt;axis&lt;/code&gt; パラメーターを使用して列または行全体でそれらを集計できます。</target>
        </trans-unit>
        <trans-unit id="48a3c1bcf70f6a7368f40947c84aaebd7c765c17" translate="yes" xml:space="preserve">
          <source>You can aggregate matrices the same way you aggregated vectors:</source>
          <target state="translated">ベクトルを集約するのと同じように行列を集約することができます。</target>
        </trans-unit>
        <trans-unit id="237f9fca73b96863dad607a904e1d0df2385cdad" translate="yes" xml:space="preserve">
          <source>You can also expand an array by inserting a new axis at a specified position with &lt;code&gt;np.expand_dims&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;np.expand_dims&lt;/code&gt; を使用して指定した位置に新しい軸を挿入することにより、配列を展開することもできます。</target>
        </trans-unit>
        <trans-unit id="2dd1c35daf50a20134f87a7ce8e57e5c3ceac4f3" translate="yes" xml:space="preserve">
          <source>You can also get f2py to compile add.f and also compile its produced extension module leaving only a shared-library extension file that can be imported from Python:</source>
          <target state="translated">また、add.fをコンパイルするためにf2pyを取得し、その生成された拡張モジュールをコンパイルして、Pythonからインポートできる共有ライブラリの拡張ファイルだけを残すこともできます。</target>
        </trans-unit>
        <trans-unit id="96352e42690860acf17aa1a27a4a270b4c0831fe" translate="yes" xml:space="preserve">
          <source>You can also look at the &lt;a href=&quot;https://github.com/blog/39-say-hello-to-the-network-graph-visualizer&quot;&gt;network graph visualizer&lt;/a&gt; for your &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt; repo.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt;リポジトリの&lt;a href=&quot;https://github.com/blog/39-say-hello-to-the-network-graph-visualizer&quot;&gt;ネットワークグラフビジュアライザー&lt;/a&gt;を確認することもできます。</target>
        </trans-unit>
        <trans-unit id="282c4f97ad9fcd8ed55a4a8ee354250a844bfb56" translate="yes" xml:space="preserve">
          <source>You can also make use of the logical operators &lt;strong&gt;&amp;amp;&lt;/strong&gt; and &lt;strong&gt;|&lt;/strong&gt; in order to return boolean values that specify whether or not the values in an array fulfill a certain condition. This can be useful with arrays that contain names or other categorical values.</source>
          <target state="translated">論理演算子&lt;strong&gt;＆&lt;/strong&gt;および&lt;strong&gt;|&lt;/strong&gt;を利用することもできます&lt;strong&gt;。&lt;/strong&gt;配列内の値が特定の条件を満たすかどうかを指定するブール値を返すため。これは、名前またはその他のカテゴリ値を含む配列で役立ちます。</target>
        </trans-unit>
        <trans-unit id="d4a5fe8b97704af411fc68344f43f8175b5a17c2" translate="yes" xml:space="preserve">
          <source>You can also put the common two last lines into an extension-local header file as long as you make sure that NO_IMPORT_ARRAY is #defined before #including that file.</source>
          <target state="translated">また、共通の最後の2行を拡張子ローカルヘッダファイルに入れることもできます。</target>
        </trans-unit>
        <trans-unit id="e2c7a514bb765af4c0f18932e407e9116ccc75a9" translate="yes" xml:space="preserve">
          <source>You can also reverse the column at index position 1 (the second column):</source>
          <target state="translated">インデックス位置1(2列目)の列を反転させることもできます。</target>
        </trans-unit>
        <trans-unit id="c47550288816bfc7042c2dcdbf49371a30912fc7" translate="yes" xml:space="preserve">
          <source>You can also reverse the contents of only one column or row. For example, you can reverse the contents of the row at index position 1 (the second row):</source>
          <target state="translated">また、1つの列または行だけの内容を反転させることもできます。例えば、インデックス位置1(2行目)の行の内容を反転させることができます。</target>
        </trans-unit>
        <trans-unit id="c89799be221d2c9e96c99b9f246abd7f544a3e35" translate="yes" xml:space="preserve">
          <source>You can also save your array with the NumPy &lt;code&gt;savetxt&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;savetxt&lt;/code&gt; メソッドを使用して配列を保存することもできます。</target>
        </trans-unit>
        <trans-unit id="e4ba4cc9227f10a44933bdf77a3096f97d9f5f23" translate="yes" xml:space="preserve">
          <source>You can also select, for example, numbers that are equal to or greater than 5, and use that condition to index an array.</source>
          <target state="translated">また、例えば5以上の数値を選択して、その条件を使って配列のインデックスを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="752bbae56b5fc445187410f0f6a25c6c5e8c7b48" translate="yes" xml:space="preserve">
          <source>You can also stack two existing arrays, both vertically and horizontally. Let&amp;rsquo;s say you have two arrays, &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt;:</source>
          <target state="translated">2つの既存のアレイを垂直方向と水平方向の両方にスタックすることもできます。 &lt;code&gt;a1&lt;/code&gt; と &lt;code&gt;a2&lt;/code&gt; の2つの配列があるとしましょう。</target>
        </trans-unit>
        <trans-unit id="bd5bdd1d6f2605746dfa5444603a80a8e39ed12e" translate="yes" xml:space="preserve">
          <source>You can also start the product with a value other than one:</source>
          <target state="translated">また、1つ以外の価値観でスタートさせることも可能です。</target>
        </trans-unit>
        <trans-unit id="9238d7ca5ba3e22758c44fc16cfa76bade93b524" translate="yes" xml:space="preserve">
          <source>You can also start the sum with a value other than zero:</source>
          <target state="translated">また、ゼロ以外の値で和を開始することもできます。</target>
        </trans-unit>
        <trans-unit id="43992aec09e45c50ca9653d65e659c7e092c2a3a" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;../reference/c-api/array#c.PyArrayIter_Check&quot;&gt;&lt;code&gt;PyArrayIter_Check&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;obj&lt;/code&gt; ) to ensure you have an iterator object and &lt;a href=&quot;../reference/c-api/array#c.PyArray_ITER_RESET&quot;&gt;&lt;code&gt;PyArray_ITER_RESET&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;iter&lt;/code&gt; ) to reset an iterator object back to the beginning of the array.</source>
          <target state="translated">&lt;a href=&quot;../reference/c-api/array#c.PyArrayIter_Check&quot;&gt; &lt;code&gt;PyArrayIter_Check&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;obj&lt;/code&gt; ）を使用してイテレーターオブジェクトがあることを確認し、&lt;a href=&quot;../reference/c-api/array#c.PyArray_ITER_RESET&quot;&gt; &lt;code&gt;PyArray_ITER_RESET&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;iter&lt;/code&gt; ）を使用してイテレーターオブジェクトを配列の先頭にリセットすることもできます。</target>
        </trans-unit>
        <trans-unit id="4ccb624e067361a21a322987057a6b2251b60e37" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;.transpose&lt;/code&gt; to reverse or change the axes of an array according to the values you specify.</source>
          <target state="translated">&lt;code&gt;.transpose&lt;/code&gt; を使用して、指定した値に応じて配列の軸を反転または変更することもできます。</target>
        </trans-unit>
        <trans-unit id="ac3d777648f5ec3ef1ae8e36503188b848922325" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;np.linspace()&lt;/code&gt; to create an array with values that are spaced linearly in a specified interval:</source>
          <target state="translated">&lt;code&gt;np.linspace()&lt;/code&gt; を使用して、指定した間隔で直線的に間隔を空けた値を持つ配列を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="e3aa6540779ad8ab4d81b4e53e5a83928241b43a" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;np.nonzero()&lt;/code&gt; to print the elements in an array that are less than 5 with:</source>
          <target state="translated">&lt;code&gt;np.nonzero()&lt;/code&gt; を使用して、5未満の配列内の要素を次のように出力することもできます。</target>
        </trans-unit>
        <trans-unit id="22ef7353d852cd371f57e27ca42cd7bb34a1f070" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;np.nonzero()&lt;/code&gt; to select elements or indices from an array.</source>
          <target state="translated">&lt;code&gt;np.nonzero()&lt;/code&gt; を使用して、配列から要素またはインデックスを選択することもできます。</target>
        </trans-unit>
        <trans-unit id="f4d8b024f7fd32afc4d6ac9b62bcc081732f5262" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;ones()&lt;/code&gt;, &lt;code&gt;zeros()&lt;/code&gt;, and &lt;code&gt;random()&lt;/code&gt; to create a 2D array if you give them a tuple describing the dimensions of the matrix:</source>
          <target state="translated">また、使用することができる &lt;code&gt;ones()&lt;/code&gt; 、 &lt;code&gt;zeros()&lt;/code&gt; 、および &lt;code&gt;random()&lt;/code&gt; あなたは彼らに行列の次元を記述するタプルを与える場合は、2次元配列を作成します：</target>
        </trans-unit>
        <trans-unit id="0508f13fcfc5d4d4f4197384c0c76abecb7ede11" translate="yes" xml:space="preserve">
          <source>You can also use indexing with arrays as a target to assign to:</source>
          <target state="translated">また、代入先として配列を使ったインデックスを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="a6a6ee70ba30827e52ff4b44c9680907b623c5f1" translate="yes" xml:space="preserve">
          <source>You can check that the above works by doing some tests; for example, inquiring about maximum and minimum values for this array:</source>
          <target state="translated">例えば、この配列の最大値と最小値について問い合わせるなど、いくつかのテストを行うことで上記の動作を確認することができます。</target>
        </trans-unit>
        <trans-unit id="dbae01da7fe0ab4f2d4dfea82533b37281dc1510" translate="yes" xml:space="preserve">
          <source>You can check whether this option was enabled when your NumPy was built by looking at the value of &lt;code&gt;np.ones((10,1),
order='C').flags.f_contiguous&lt;/code&gt;. If this is &lt;code&gt;True&lt;/code&gt;, then your NumPy has relaxed strides checking enabled.</source>
          <target state="translated">&lt;code&gt;np.ones((10,1), order='C').flags.f_contiguous&lt;/code&gt; の値を調べることにより、NumPyが構築されたときにこのオプションが有効になっていたかどうかを確認できます。これが &lt;code&gt;True&lt;/code&gt; の場合、NumPyはストライドチェックの緩和を有効にしています。</target>
        </trans-unit>
        <trans-unit id="fe0afd9f0ce26d4a6f9c3a70ea220cbcab2e663a" translate="yes" xml:space="preserve">
          <source>You can concatenate them with &lt;code&gt;np.concatenate()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;np.concatenate()&lt;/code&gt; を使用してそれらを連結できます。</target>
        </trans-unit>
        <trans-unit id="b01806fc3711f6e062a40c836a2e4ff4c619a03c" translate="yes" xml:space="preserve">
          <source>You can concatenate them with:</source>
          <target state="translated">と連結させることができます。</target>
        </trans-unit>
        <trans-unit id="dd4eede6548034f569b1dbaaa5d82af6fae75d2c" translate="yes" xml:space="preserve">
          <source>You can copy out the numpy/core/lib/npy-pkg-config directory, add a pkgdir value to the .ini files and set NPY_PKG_CONFIG_PATH environment variable to point to the directory with the modified npy-pkg-config files.</source>
          <target state="translated">numpy/core/lib/npy-pkg-configディレクトリをコピーし、.iniファイルにpkgdirの値を追加し、環境変数NPY_PKG_CONFIG_PATHに、変更したnpy-pkg-configファイルのあるディレクトリを指すように設定します。</target>
        </trans-unit>
        <trans-unit id="bf631609d9ad3a3be35567a5fc91badfdcb1e34f" translate="yes" xml:space="preserve">
          <source>You can create a new array from a section of your array any time by specifying where you want to slice your array.</source>
          <target state="translated">配列をスライスしたい場所を指定することで、いつでも配列のセクションから新しい配列を作成することができます。</target>
        </trans-unit>
        <trans-unit id="f31cea59b1e43f33f7c2fbd9d2de6a5a9de225c9" translate="yes" xml:space="preserve">
          <source>You can create an array with a range of elements:</source>
          <target state="translated">要素の範囲を持つ配列を作成することができます。</target>
        </trans-unit>
        <trans-unit id="9f727d609d02021feb25c56ec5c7d4115e505da2" translate="yes" xml:space="preserve">
          <source>You can do all this with &lt;code&gt;slice()&lt;/code&gt; plus a few special objects, but there&amp;rsquo;s a lot to remember and this version is simpler because it uses the standard array indexing syntax.</source>
          <target state="translated">これはすべて、 &lt;code&gt;slice()&lt;/code&gt; といくつかの特別なオブジェクトで実行できますが、覚えなければならないことがたくさんあります。このバージョンでは、標準の配列インデックス構文を使用しているため、より単純です。</target>
        </trans-unit>
        <trans-unit id="5baf46913d5b2195b4f107095bd793625fa95842" translate="yes" xml:space="preserve">
          <source>You can do these arithmetic operations on matrices of different sizes, but only if one matrix has only one column or one row. In this case, NumPy will use its broadcast rules for the operation.</source>
          <target state="translated">異なるサイズの行列に対してこれらの算術演算を行うことができますが、1つの行列が1列または1行しかない場合に限ります。この場合、NumPyはそのブロードキャスト規則を使って演算を行います。</target>
        </trans-unit>
        <trans-unit id="3d172f1e6eacc137cdecc574b47f944d3853d107" translate="yes" xml:space="preserve">
          <source>You can do this automatically using the &lt;code&gt;wheel-uploader&lt;/code&gt; script from &lt;a href=&quot;https://github.com/MacPython/terryfy&quot;&gt;https://github.com/MacPython/terryfy&lt;/a&gt;. Here is the recommended incantation for downloading all the Windows, Manylinux, OSX wheels and uploading to PyPI.</source>
          <target state="translated">これは、&lt;a href=&quot;https://github.com/MacPython/terryfy&quot;&gt;https：//github.com/MacPython/terryfyの&lt;/a&gt; &lt;code&gt;wheel-uploader&lt;/code&gt; スクリプトを使用して自動的に行うことができます。これは、すべてのWindows、Manylinux、OSXホイールをダウンロードし、PyPIにアップロードするための推奨される呪文です。</target>
        </trans-unit>
        <trans-unit id="97c3d2c0245b4b7321ec5c2ca8eeee38ba0ad8e7" translate="yes" xml:space="preserve">
          <source>You can easily print all of the values in the array that are less than 5.</source>
          <target state="translated">配列内の5以下の値をすべて簡単に印刷することができます。</target>
        </trans-unit>
        <trans-unit id="6c63f33a9113ffa6279f9b313654b4abb853aa2e" translate="yes" xml:space="preserve">
          <source>You can easily reverse only the &lt;em&gt;rows&lt;/em&gt; with:</source>
          <target state="translated">次の方法で&lt;em&gt;行&lt;/em&gt;のみを簡単に反転できます。</target>
        </trans-unit>
        <trans-unit id="ee6ef35316335a7f1cb11120168c98209d725a17" translate="yes" xml:space="preserve">
          <source>You can easily save it as a .csv file with the name &amp;ldquo;new_file.csv&amp;rdquo; like this:</source>
          <target state="translated">次のように、「new_file.csv」という名前の.csvファイルとして簡単に保存できます。</target>
        </trans-unit>
        <trans-unit id="82504198a2e983dc31c81d0f6dc83440d487c0e7" translate="yes" xml:space="preserve">
          <source>You can easily save your dataframe with:</source>
          <target state="translated">で簡単にデータフレームを保存することができます。</target>
        </trans-unit>
        <trans-unit id="39be9a99e649b46efd47c1047b3ed1ee3dd34d76" translate="yes" xml:space="preserve">
          <source>You can easily use create a new array from a section of an existing array.</source>
          <target state="translated">既存の配列のセクションから新しい配列を作成することが簡単にできます。</target>
        </trans-unit>
        <trans-unit id="51adde44a6a18def3f2148c58a74d0ae15f40b43" translate="yes" xml:space="preserve">
          <source>You can edit this file directly or you can use the &lt;code&gt;git config --global&lt;/code&gt; command:</source>
          <target state="translated">このファイルを直接編集することも、 &lt;code&gt;git config --global&lt;/code&gt; コマンドを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="535e7d83a0f12ecc49312cf2783284d9e2baf7c7" translate="yes" xml:space="preserve">
          <source>You can even use this notation for object methods and objects themselves.</source>
          <target state="translated">この記法は、オブジェクトメソッドやオブジェクトそのものにも使えます。</target>
        </trans-unit>
        <trans-unit id="857a3e3d8c565a0a807995e6a2a380421127866a" translate="yes" xml:space="preserve">
          <source>You can explicitly convert a 1D array with either a row vector or a column vector using &lt;code&gt;np.newaxis&lt;/code&gt;. For example, you can convert a 1D array to a row vector by inserting an axis along the first dimension:</source>
          <target state="translated">&lt;code&gt;np.newaxis&lt;/code&gt; を使用して、行ベクトルまたは列ベクトルのいずれかで1D配列を明示的に変換できます。たとえば、最初の次元に沿って軸を挿入することにより、1D配列を行ベクトルに変換できます。</target>
        </trans-unit>
        <trans-unit id="cd190ae92f562a96f20ce99a02b9ac7ab128e4c8" translate="yes" xml:space="preserve">
          <source>You can find all of the installation details in the &lt;a href=&quot;https://www.scipy.org/install.html&quot;&gt;Installation&lt;/a&gt; section at &lt;a href=&quot;https://www.scipy.org&quot;&gt;SciPy&lt;/a&gt;.</source>
          <target state="translated">インストールの詳細はすべて、&lt;a href=&quot;https://www.scipy.org&quot;&gt;SciPyの&lt;/a&gt;&lt;a href=&quot;https://www.scipy.org/install.html&quot;&gt;インストール&lt;/a&gt;セクションにあります。</target>
        </trans-unit>
        <trans-unit id="bdb9e7ae57ffac28af422f704a853be72766092f" translate="yes" xml:space="preserve">
          <source>You can find larger planned and in-progress documentation improvement ideas &lt;a href=&quot;https://github.com/orgs/numpy/projects/2&quot;&gt;at our GitHub project&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/orgs/numpy/projects/2&quot;&gt;GitHubプロジェクトで、&lt;/a&gt;より大規模な計画中および進行中のドキュメント改善のアイデアを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="d25b50e70c597602f22d56000431ce6c81fbbbbd" translate="yes" xml:space="preserve">
          <source>You can find the unique elements in an array easily with &lt;code&gt;np.unique&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;np.unique&lt;/code&gt; を使用すると、配列内の一意の要素を簡単に見つけることができます。</target>
        </trans-unit>
        <trans-unit id="64a20c17cabe71b9adc6b2c4871ae4565e9a4af0" translate="yes" xml:space="preserve">
          <source>You can find unique values with:</source>
          <target state="translated">でユニークな値を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="79ef56c8153fa2d24dc577d3e3a0d47ca828d769" translate="yes" xml:space="preserve">
          <source>You can generate a 2 x 4 array of random integers between 0 and 4 with:</source>
          <target state="translated">で0から4までの乱数整数の2×4配列を生成することができます。</target>
        </trans-unit>
        <trans-unit id="74c28c5a8bb3004bf7dc11f9275ff87a6627fca1" translate="yes" xml:space="preserve">
          <source>You can get these on your own machine with (e.g) &lt;code&gt;git help push&lt;/code&gt; or (same thing) &lt;code&gt;git push --help&lt;/code&gt;, but, for convenience, here are the online manual pages for some common commands:</source>
          <target state="translated">これらは、（例） &lt;code&gt;git help push&lt;/code&gt; または（同じもの） &lt;code&gt;git push --help&lt;/code&gt; を使用して自分のマシンで取得できますが、便宜上、いくつかの一般的なコマンドのオンラインマニュアルページを次に示します。</target>
        </trans-unit>
        <trans-unit id="11c41f32976f77408fe3afa43f6236aa2549ca0d" translate="yes" xml:space="preserve">
          <source>You can have standard vectors or row/column vectors if you like.</source>
          <target state="translated">お好みで標準ベクトルや行/列ベクトルを持つことができます。</target>
        </trans-unit>
        <trans-unit id="f3e24545eb2cdf1492fbe6a370874d4d2e482730" translate="yes" xml:space="preserve">
          <source>You can index and slice NumPy arrays in the same ways you can slice Python lists.</source>
          <target state="translated">Pythonのリストをスライスするのと同じように、NumPyの配列をインデックス化してスライスすることができます。</target>
        </trans-unit>
        <trans-unit id="3c985751eeed6dac2e78c9a7702d8c0bef18d7e8" translate="yes" xml:space="preserve">
          <source>You can look at the following example to see how to use boolean indexing to generate an image of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mandelbrot_set&quot;&gt;Mandelbrot set&lt;/a&gt;:</source>
          <target state="translated">次の例を見て、ブールインデックスを使用して&lt;a href=&quot;https://en.wikipedia.org/wiki/Mandelbrot_set&quot;&gt;マンデルブロ集合の&lt;/a&gt;画像を生成する方法を確認できます。</target>
        </trans-unit>
        <trans-unit id="8a9537b5cf6ada6aee9b0e48c656db4298fbb1ca" translate="yes" xml:space="preserve">
          <source>You can obtain information about the function:</source>
          <target state="translated">機能に関する情報を得ることができます。</target>
        </trans-unit>
        <trans-unit id="a9ed554e08c6a0f3f56e82961f904108ee6fc5a8" translate="yes" xml:space="preserve">
          <source>You can pass Python lists of lists to create a 2-D array (or &amp;ldquo;matrix&amp;rdquo;) to represent them in NumPy.</source>
          <target state="translated">リストのPythonリストを渡して、NumPyでそれらを表す2D配列（または「マトリックス」）を作成できます。</target>
        </trans-unit>
        <trans-unit id="c33e63092f2c81ef7ef464c8978156a4abec7928" translate="yes" xml:space="preserve">
          <source>You can pass the &lt;code&gt;return_counts&lt;/code&gt; argument in &lt;code&gt;np.unique()&lt;/code&gt; along with your array to get the frequency count of unique values in a NumPy array.</source>
          <target state="translated">あなたは渡すことができ &lt;code&gt;return_counts&lt;/code&gt; の中で引数を &lt;code&gt;np.unique()&lt;/code&gt; numpyの配列内の一意の値の頻度数を得るためにあなたの配列と一緒に。</target>
        </trans-unit>
        <trans-unit id="0dc811f9e51cddee6cdcd6b73d03c1376a565596" translate="yes" xml:space="preserve">
          <source>You can quickly and easily load your saved text file using &lt;code&gt;loadtxt()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;loadtxt()&lt;/code&gt; を使用して、保存したテキストファイルをすばやく簡単にロードできます。</target>
        </trans-unit>
        <trans-unit id="bd99805037851e24542e0c190c949f7441fdb05e" translate="yes" xml:space="preserve">
          <source>You can quickly sort the numbers in ascending order with:</source>
          <target state="translated">で昇順に素早く並べ替えることができます。</target>
        </trans-unit>
        <trans-unit id="fbabee0d2a8ad11c2e5d1a9374dba3d5de22c5c5" translate="yes" xml:space="preserve">
          <source>You can reach another level of information by reading the source code of the object you&amp;rsquo;re interested in. Using a double question mark (&lt;code&gt;??&lt;/code&gt;) allows you to access the source code.</source>
          <target state="translated">関心のあるオブジェクトのソースコードを読み取ることで、別のレベルの情報に到達できます。二重疑問符（ &lt;code&gt;??&lt;/code&gt; ）を使用すると、ソースコードにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="525e57a42eaa3f05d626e2a1e78e1405cd0f56c6" translate="yes" xml:space="preserve">
          <source>You can report issues to the NumPy Code of Conduct committee, at &lt;a href=&quot;mailto:numpy-conduct%40googlegroups.com&quot;&gt;numpy-conduct@googlegroups.com&lt;/a&gt;. Currently, the committee consists of:</source>
          <target state="translated">問題は、&lt;a href=&quot;mailto:numpy-conduct%40googlegroups.com&quot;&gt;numpy-conduct @ googlegroups.comの&lt;/a&gt;NumPy行動規範委員会に報告できます。現在、委員会は以下で構成されています。</target>
        </trans-unit>
        <trans-unit id="411581b4a2c33f96f2e50370cca530bb14494a68" translate="yes" xml:space="preserve">
          <source>You can reverse it with:</source>
          <target state="translated">でリバースできます。</target>
        </trans-unit>
        <trans-unit id="91c836df02cbd1f82e91ec4724342db42d32dc07" translate="yes" xml:space="preserve">
          <source>You can reverse the content in all of the rows and all of the columns with:</source>
          <target state="translated">ですべての行とすべての列の内容を反転させることができます。</target>
        </trans-unit>
        <trans-unit id="b58f703b8270c8a067823a77d7af5bf7887ff76f" translate="yes" xml:space="preserve">
          <source>You can run examples as doctests using:</source>
          <target state="translated">を使ってdoctestsとしてサンプルを実行することができます。</target>
        </trans-unit>
        <trans-unit id="ca40d20f8092fec5dfdca584f23e5b003136ab53" translate="yes" xml:space="preserve">
          <source>You can save a NumPy array as a plain text file like a &lt;strong&gt;.csv&lt;/strong&gt; or &lt;strong&gt;.txt&lt;/strong&gt; file with &lt;code&gt;np.savetxt&lt;/code&gt;.</source>
          <target state="translated">NumPy配列は、 &lt;code&gt;np.savetxt&lt;/code&gt; を使用して&lt;strong&gt;.csv&lt;/strong&gt;ファイルや&lt;strong&gt;.txt&lt;/strong&gt;ファイルなどのプレーンテキストファイルとして保存できます。</target>
        </trans-unit>
        <trans-unit id="638da3aef28233421c8588fb61e4dfac171499ee" translate="yes" xml:space="preserve">
          <source>You can save it as &amp;ldquo;filename.npy&amp;rdquo; with:</source>
          <target state="translated">次のコマンドで「filename.npy」として保存できます。</target>
        </trans-unit>
        <trans-unit id="13c816c29bd6c6d8cea0adad71c911999f0f8043" translate="yes" xml:space="preserve">
          <source>You can see that we have selected only the first &lt;code&gt;k&lt;/code&gt; components of the last axis for &lt;code&gt;Sigma&lt;/code&gt; (this means that we have used only the first &lt;code&gt;k&lt;/code&gt; columns of each of the three matrices in the stack), and that we have selected only the first &lt;code&gt;k&lt;/code&gt; components in the second-to-last axis of &lt;code&gt;Vt&lt;/code&gt; (this means we have selected only the first &lt;code&gt;k&lt;/code&gt; rows from every matrix in the stack &lt;code&gt;Vt&lt;/code&gt; and all columns). If you are unfamiliar with the ellipsis syntax, it is a placeholder for other axes. For more details, see the documentation on &lt;a href=&quot;basics.indexing#basics-indexing&quot;&gt;Indexing&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Sigma&lt;/code&gt; の最後の軸の最初の &lt;code&gt;k&lt;/code&gt; 個のコンポーネントのみを選択し（これは、スタック内の3つの行列のそれぞれの最初の &lt;code&gt;k&lt;/code&gt; 列のみを使用したことを意味します）、最初の &lt;code&gt;k&lt;/code&gt; 個のみを選択したことがわかります。 &lt;code&gt;Vt&lt;/code&gt; の最後から2番目の軸のコンポーネント（これは、スタック &lt;code&gt;Vt&lt;/code&gt; のすべての行列とすべての列から最初の &lt;code&gt;k&lt;/code&gt; 行のみを選択したことを意味します）。省略記号の構文に慣れていない場合は、他の軸のプレースホルダーです。詳細については、&lt;a href=&quot;basics.indexing#basics-indexing&quot;&gt;インデックス作成&lt;/a&gt;に関するドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="aa597ab231ed849826c68828e374dfe531ab8bfd" translate="yes" xml:space="preserve">
          <source>You can select elements that are divisible by 2:</source>
          <target state="translated">2で割り切れる要素を選択することができます。</target>
        </trans-unit>
        <trans-unit id="09b64cb650b0721919b112892ec7540fa3bec8f6" translate="yes" xml:space="preserve">
          <source>You can specify on which axis you want the aggregation function to be computed. For example, you can find the minimum value within each column by specifying &lt;code&gt;axis=0&lt;/code&gt;.</source>
          <target state="translated">集計関数を計算する軸を指定できます。たとえば、 &lt;code&gt;axis=0&lt;/code&gt; を指定すると、各列内の最小値を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="09f8d7cd5b1c8277145559102abee3f2cfb118c0" translate="yes" xml:space="preserve">
          <source>You can split an array into several smaller arrays using &lt;code&gt;hsplit&lt;/code&gt;. You can specify either the number of equally shaped arrays to return or the columns &lt;em&gt;after&lt;/em&gt; which the division should occur.</source>
          <target state="translated">&lt;code&gt;hsplit&lt;/code&gt; を使用して、配列をいくつかの小さな配列に分割できます。あなたは返すように均等に形状のアレイの数または列のいずれかを指定することができます&lt;em&gt;後に&lt;/em&gt;分裂が起こるはずであるが。</target>
        </trans-unit>
        <trans-unit id="1737c7d22dd82b8a49628f21daf3b7f42db2f600" translate="yes" xml:space="preserve">
          <source>You can stack them vertically with &lt;code&gt;vstack&lt;/code&gt;:</source>
          <target state="translated">あなたは &lt;code&gt;vstack&lt;/code&gt; でそれらを垂直に積み重ねることができます：</target>
        </trans-unit>
        <trans-unit id="359027a8fcd07ccbd6d51b7568b15e7088674160" translate="yes" xml:space="preserve">
          <source>You can sum the columns with:</source>
          <target state="translated">で列を合計することができます。</target>
        </trans-unit>
        <trans-unit id="0e198e975b5d6fbfd387d7792f57d05cf99229ac" translate="yes" xml:space="preserve">
          <source>You can sum the rows with:</source>
          <target state="translated">で行を合計することができます。</target>
        </trans-unit>
        <trans-unit id="0f8dcdc8f58eab438163b027ae1026e44d575bec" translate="yes" xml:space="preserve">
          <source>You can tell Numpy to use 64-bit BLAS/LAPACK libraries by setting the environment variable:</source>
          <target state="translated">環境変数を設定することで、64ビットのBLAS/LAPACKライブラリを使用するようにNumpyに指示することができます。</target>
        </trans-unit>
        <trans-unit id="8032e81ac40a6f0f1a73b54a1b7839b994061479" translate="yes" xml:space="preserve">
          <source>You can think of reshaping as first raveling the array (using the given index order), then inserting the elements from the raveled array into the new array using the same kind of index ordering as was used for the raveling.</source>
          <target state="translated">リシェーピングとは、最初に(与えられたインデックス順を使って)配列をラベリングし、ラベリングに使われたのと同じ種類のインデックス順を使って、ラベリングされた配列の要素を新しい配列に挿入することだと考えることができます。</target>
        </trans-unit>
        <trans-unit id="e107150be46c6b7a2ed7f15bfecabb650a4f4c5d" translate="yes" xml:space="preserve">
          <source>You can transpose your array with &lt;code&gt;arr.transpose()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;arr.transpose()&lt;/code&gt; を使用して配列を転置できます。</target>
        </trans-unit>
        <trans-unit id="39ce4271e318082bcec3fc33c2529d0ffba9e99a" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;flatten&lt;/code&gt; to flatten your array into a 1D array.</source>
          <target state="translated">&lt;code&gt;flatten&lt;/code&gt; を使用して、配列を1D配列に平坦化できます。</target>
        </trans-unit>
        <trans-unit id="2665766d0c0d10f2c049bfca0a5d2ba9b8e78f7c" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;np.expand_dims&lt;/code&gt; to add an axis at index position 1 with:</source>
          <target state="translated">&lt;code&gt;np.expand_dims&lt;/code&gt; を使用して、次のようにインデックス位置1に軸を追加できます。</target>
        </trans-unit>
        <trans-unit id="3357dc9f6b41aea3aa6691cc31b9c4dd502c9267" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;np.load()&lt;/code&gt; to reconstruct your array.</source>
          <target state="translated">&lt;code&gt;np.load()&lt;/code&gt; を使用して配列を再構築できます。</target>
        </trans-unit>
        <trans-unit id="918c24145c112510b6d979f3bb91283ee6145456" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;np.newaxis&lt;/code&gt; and &lt;code&gt;np.expand_dims&lt;/code&gt; to increase the dimensions of your existing array.</source>
          <target state="translated">&lt;code&gt;np.newaxis&lt;/code&gt; と &lt;code&gt;np.expand_dims&lt;/code&gt; を使用して、既存の配列の次元を増やすことができます。</target>
        </trans-unit>
        <trans-unit id="582146c1d768f4228d4d49948b0b6a07949fe966" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;np.newaxis&lt;/code&gt; to add a new axis:</source>
          <target state="translated">&lt;code&gt;np.newaxis&lt;/code&gt; を使用して、新しい軸を追加できます。</target>
        </trans-unit>
        <trans-unit id="ec69deeefd01eed5f7356a6b5d80438d8d1eb727" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;np.nonzero()&lt;/code&gt; to print the indices of elements that are, for example, less than 5:</source>
          <target state="translated">&lt;code&gt;np.nonzero()&lt;/code&gt; を使用して、たとえば5未満の要素のインデックスを出力できます。</target>
        </trans-unit>
        <trans-unit id="1b3156b813541089f8aa43cd9e531951bf582e15" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;reshape()&lt;/code&gt; to reshape your array. For example, you can reshape this array to an array with three rows and two columns:</source>
          <target state="translated">&lt;code&gt;reshape()&lt;/code&gt; を使用して、配列の形状を変更できます。たとえば、この配列を3行2列の配列に再形成できます。</target>
        </trans-unit>
        <trans-unit id="6a1a526e2dfcefc7502bbfe7d5198a1cfd393800" translate="yes" xml:space="preserve">
          <source>You can use an initial value to compute the maximum of an empty slice, or to initialize it to a different value:</source>
          <target state="translated">初期値を使用して空のスライスの最大値を計算したり、別の値に初期化したりすることができます。</target>
        </trans-unit>
        <trans-unit id="d3a7f9c80832526780727f107f820703eff6333a" translate="yes" xml:space="preserve">
          <source>You can use arbitrary &lt;code&gt;&amp;lt;routine name&amp;gt;&lt;/code&gt; for a given Fortran/C function. Then you have to specify &lt;code&gt;&amp;lt;actual Fortran/C routine name&amp;gt;&lt;/code&gt; with this statement.</source>
          <target state="translated">特定のFortran / C関数に任意の &lt;code&gt;&amp;lt;routine name&amp;gt;&lt;/code&gt; を使用できます。次に、このステートメントで &lt;code&gt;&amp;lt;actual Fortran/C routine name&amp;gt;&lt;/code&gt; を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7d0bef869069e40769f21f1de600d0fc6d747dfa" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;initial&lt;/code&gt; keyword argument to initialize the reduction with a different value, and &lt;code&gt;where&lt;/code&gt; to select specific elements to include:</source>
          <target state="translated">&lt;code&gt;initial&lt;/code&gt; キーワード引数を使用して、別の値で削減を初期化し、含める特定の要素を選択する &lt;code&gt;where&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="23efac0b995d6e93a4035bff800bd00ab008b4c3" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;view&lt;/code&gt; method to create a new array object that looks at the same data as the original array (a &lt;em&gt;shallow copy&lt;/em&gt;).</source>
          <target state="translated">&lt;code&gt;view&lt;/code&gt; メソッドを使用して、元の配列と同じデータを参照する新しい配列オブジェクトを作成できます（&lt;em&gt;浅いコピー&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="91fa0d476f571316eb9194c7c7392edcc2d88959" translate="yes" xml:space="preserve">
          <source>You can use the code in &lt;code&gt;numpy.i&lt;/code&gt; to write your own typemaps. For example, if you had a five-dimensional array as a function argument, you could cut-and-paste the appropriate four-dimensional typemaps into your interface file. The modifications for the fourth dimension would be trivial.</source>
          <target state="translated">&lt;code&gt;numpy.i&lt;/code&gt; のコードを使用して、独自のタイプマップを作成できます。たとえば、関数の引数として5次元配列がある場合、適切な4次元タイプマップをインターフェイスファイルにカットアンドペーストできます。4次元の修正は簡単です。</target>
        </trans-unit>
        <trans-unit id="ee6cd9ad018d09a66b4b552d8d32fda830dc2b2b" translate="yes" xml:space="preserve">
          <source>You can visualize it this way:</source>
          <target state="translated">このように可視化することができます。</target>
        </trans-unit>
        <trans-unit id="a25a3e7f332f999168a07a6595359aa81fadc1bd" translate="yes" xml:space="preserve">
          <source>You can visualize your array this way:</source>
          <target state="translated">このようにして配列を可視化することができます。</target>
        </trans-unit>
        <trans-unit id="1ad9ee5f8f5d203d9af008ef1a29a03c8cf55b38" translate="yes" xml:space="preserve">
          <source>You can, of course, do more than just addition!</source>
          <target state="translated">もちろん、足し算だけではありません!</target>
        </trans-unit>
        <trans-unit id="d315d7e61c47b4d65f430fab5f0eebfd96cdc410" translate="yes" xml:space="preserve">
          <source>You cannot build extension modules with this function, that is, using &lt;code&gt;-c&lt;/code&gt; is not allowed. Use &lt;code&gt;compile&lt;/code&gt; command instead</source>
          <target state="translated">この関数で拡張モジュールをビルドすることはできません。つまり、 &lt;code&gt;-c&lt;/code&gt; の使用は許可されていません。代わりに &lt;code&gt;compile&lt;/code&gt; コマンドを使用してください</target>
        </trans-unit>
        <trans-unit id="bc82621089986951aa67f2243064c2c3dc5658df" translate="yes" xml:space="preserve">
          <source>You could also implement the reduce as follows:</source>
          <target state="translated">また、以下のようにreduceを実装することもできます。</target>
        </trans-unit>
        <trans-unit id="ce58363fd85bb854ab09669ee6f5c2f4477e67d0" translate="yes" xml:space="preserve">
          <source>You could create a Pandas dataframe</source>
          <target state="translated">パンダのデータフレームを作成することができます。</target>
        </trans-unit>
        <trans-unit id="bc55f5f061c21889fbee03345308fce9d6cd1563" translate="yes" xml:space="preserve">
          <source>You have to use &lt;code&gt;--set-upstream&lt;/code&gt; for each new branch that you create.</source>
          <target state="translated">作成する新しいブランチごとに &lt;code&gt;--set-upstream&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="751135e5dcfd64fe181d4032a7968478893af08b" translate="yes" xml:space="preserve">
          <source>You may also need to switch the dimensions of a matrix. This can happen when, for example, you have a model that expects a certain input shape that is different from your dataset. This is where the &lt;code&gt;reshape&lt;/code&gt; method can be useful. You simply need to pass in the new dimensions that you want for the matrix.</source>
          <target state="translated">行列の次元を切り替える必要がある場合もあります。これは、たとえば、データセットとは異なる特定の入力形状を期待するモデルがある場合に発生する可能性があります。ここで、 &lt;code&gt;reshape&lt;/code&gt; 方法が役立ちます。マトリックスに必要な新しい次元を渡すだけです。</target>
        </trans-unit>
        <trans-unit id="0c888e18d08dec9ae3d9fa98ee787e808245f065" translate="yes" xml:space="preserve">
          <source>You may also want to have easy access to all pull requests sent to the NumPy repository:</source>
          <target state="translated">また、NumPyリポジトリに送られたすべてのプルリクエストに簡単にアクセスできるようにしたいと思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="aa28650cb9c8a94633060dcb80be22a67fdaf333" translate="yes" xml:space="preserve">
          <source>You may also want to make sure that your editor of choice is used</source>
          <target state="translated">また、お好みのエディタが使用されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="ed0cb574f3d373b89a7c21d2c97860f79643815e" translate="yes" xml:space="preserve">
          <source>You may also want to register low-level ufunc loops for your data-type so that an ndarray of your data-type can have math applied to it seamlessly. Registering a new loop with exactly the same arg_types signature, silently replaces any previously registered loops for that data-type.</source>
          <target state="translated">また、データ型に低レベルの ufunc ループを登録して、データ型の ndarray がシームレスに数学を適用できるようにしたい場合もあるでしょう。全く同じarg_typesシグネチャで新しいループを登録すると、そのデータ型に対して以前に登録されたループが静かに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="7050d9d1fdb3bbac0ba025f332165a7313a2c595" translate="yes" xml:space="preserve">
          <source>You may have a correctly specified array dtype, but you need the array to have the opposite byte order in memory, and you want the dtype to match so the array values make sense. In this case you just do both of the previous operations:</source>
          <target state="translated">配列のdtypeが正しく指定されているかもしれませんが、メモリ上では配列のバイト順が逆になっている必要があり、配列の値が意味をなすようにdtypeを一致させたい場合があります。この場合は、先ほどの操作の両方を行うだけです。</target>
        </trans-unit>
        <trans-unit id="dc93d11c84f3cf0c80dc19552fbebbaec3165a7a" translate="yes" xml:space="preserve">
          <source>You may include some math:</source>
          <target state="translated">少しは算数を入れてもいいかもしれません。</target>
        </trans-unit>
        <trans-unit id="98e9f88bd4a89aebe54d98a979717885fd9d0412" translate="yes" xml:space="preserve">
          <source>You may use slicing to set values in the array, but (unlike lists) you can never grow the array. The size of the value to be set in &lt;code&gt;x[obj] = value&lt;/code&gt; must be (broadcastable) to the same shape as &lt;code&gt;x[obj]&lt;/code&gt;.</source>
          <target state="translated">配列に値を設定するためにスライスを使用できますが、（リストとは異なり）配列を大きくすることはできません。値のサイズは、に設定する &lt;code&gt;x[obj] = value&lt;/code&gt; と同じ形状に（broadcastable）でなければならない &lt;code&gt;x[obj]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="953ce32a13466f3c18c7daad4b9f88ea1d2c5786" translate="yes" xml:space="preserve">
          <source>You may want to allow builtin (and other user-defined) data-types to be cast automatically to your data-type. In order to make this possible, you must register a casting function with the data-type you want to be able to cast from. This requires writing low-level casting functions for each conversion you want to support and then registering these functions with the data-type descriptor. A low-level casting function has the signature.</source>
          <target state="translated">ビルトイン(および他のユーザー定義の)データ型を、自動的に自分のデータ型にキャストできるようにしたい場合があります。これを可能にするためには、キャストできるようにしたいデータ型にキャスト関数を登録しなければなりません。これは、サポートしたい変換ごとに低レベルのキャスト関数を書き、データ型記述子にこれらの関数を登録する必要があります。低レベルのキャスト関数にはシグネチャがあります。</target>
        </trans-unit>
        <trans-unit id="c3e38d04c287113098b3a4cbd709911d025d4509" translate="yes" xml:space="preserve">
          <source>You may want to take a section of your array or specific array elements to use in further analysis or additional operations. To do that, you&amp;rsquo;ll need to subset, slice, and/or index your arrays.</source>
          <target state="translated">配列のセクションまたは特定の配列要素を取得して、さらに分析したり、追加の操作で使用したりすることができます。これを行うには、配列をサブセット化、スライス、またはインデックス付けする必要があります。</target>
        </trans-unit>
        <trans-unit id="c09ca0043df118c7d46ae9f54f1af08b9fd4e55b" translate="yes" xml:space="preserve">
          <source>You might occasionally hear an array referred to as a &amp;ldquo;ndarray,&amp;rdquo; which is shorthand for &amp;ldquo;N-dimensional array.&amp;rdquo; An N-dimensional array is simply an array with any number of dimensions. You might also hear &lt;strong&gt;1-D&lt;/strong&gt;, or one-dimensional array, &lt;strong&gt;2-D&lt;/strong&gt;, or two-dimensional array, and so on. The NumPy &lt;code&gt;ndarray&lt;/code&gt; class is used to represent both matrices and vectors. A &lt;strong&gt;vector&lt;/strong&gt; is an array with a single dimension (there&amp;rsquo;s no difference between row and column vectors), while a &lt;strong&gt;matrix&lt;/strong&gt; refers to an array with two dimensions. For &lt;strong&gt;3-D&lt;/strong&gt; or higher dimensional arrays, the term &lt;strong&gt;tensor&lt;/strong&gt; is also commonly used.</source>
          <target state="translated">「N次元配列」の省略形である「ndarray」と呼ばれる配列が聞こえることがあります。 N次元配列は、任意の数の次元を持つ単純な配列です。また聞くかもしれない&lt;strong&gt;1-D &lt;/strong&gt;、または1次元配列、&lt;strong&gt;2-D &lt;/strong&gt;、または二次元配列、およびように。 NumPy &lt;code&gt;ndarray&lt;/code&gt; クラスは、行列とベクトルの両方を表すために使用されます。&lt;strong&gt;ベクターは&lt;/strong&gt;ながら、単一の次元（行と列ベクトルの間には差がありません）を持つ配列である&lt;strong&gt;マトリックスが&lt;/strong&gt;二次元の配列を意味します。以下のために&lt;strong&gt;3-D&lt;/strong&gt;又はより高い次元の配列、用語&lt;strong&gt;テンソルは&lt;/strong&gt;また、一般的に使用されます。</target>
        </trans-unit>
        <trans-unit id="50b94c625d2f8ec709ed8784bad70dc63767a95c" translate="yes" xml:space="preserve">
          <source>You might run into some conflicts cherry picking here. These are resolved the same way as merge/rebase conflicts. Except here you can use &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-blame.html&quot;&gt;git blame&lt;/a&gt; to see the difference between master and the backported branch to make sure nothing gets screwed up.</source>
          <target state="translated">ここでチェリーピッキングの競合が発生する可能性があります。これらは、マージ/リベースの競合と同じ方法で解決されます。ここを除いて、&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-blame.html&quot;&gt;git blame&lt;/a&gt;を使用して、マスターとバックポートされたブランチの違いを確認し、問題が発生していないことを確認できます。</target>
        </trans-unit>
        <trans-unit id="2b9946ceacebb206bc39fdb0ab02e7ae2fd4130a" translate="yes" xml:space="preserve">
          <source>You might want to do this if you need the data in memory to be a certain ordering. For example you might be writing the memory out to a file that needs a certain byte ordering.</source>
          <target state="translated">メモリ内のデータを特定の順序にする必要がある場合に、これを行うとよいでしょう。例えば、特定のバイト順を必要とするファイルにメモリを書き出しているかもしれません。</target>
        </trans-unit>
        <trans-unit id="135c8b6e87a57f29b421c9f6622548e64c5c181b" translate="yes" xml:space="preserve">
          <source>You might well benefit from some aliases to common commands.</source>
          <target state="translated">一般的なコマンドのエイリアスをいくつか使ってみるのもいいかもしれません。</target>
        </trans-unit>
        <trans-unit id="cf6cadaf59551ba845503a005299c5c807cc4a0a" translate="yes" xml:space="preserve">
          <source>You must have shared-libraries of your code (no static libraries).</source>
          <target state="translated">コードの共有ライブラリを持っている必要があります(静的ライブラリは不可)。</target>
        </trans-unit>
        <trans-unit id="77f72c989cc6f569ebbcaf3dc420d3b1a100bb4f" translate="yes" xml:space="preserve">
          <source>You need to do this only once. The instructions here are very similar to the instructions at &lt;a href=&quot;http://help.github.com/forking/&quot;&gt;http://help.github.com/forking/&lt;/a&gt; - please see that page for more detail. We&amp;rsquo;re repeating some of it here just to give the specifics for the &lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy&lt;/a&gt; project, and to suggest some default names.</source>
          <target state="translated">これは一度だけ行う必要があります。ここでの手順は、&lt;a href=&quot;http://help.github.com/forking/&quot;&gt;http：//help.github.com/forking/&lt;/a&gt;の手順と非常によく似ています。詳細については、そのページを参照してください。ここでは、&lt;a href=&quot;https://www.numpy.org&quot;&gt;NumPy&lt;/a&gt;プロジェクトの詳細を示し、いくつかのデフォルト名を提案するために、その一部を繰り返しています。</target>
        </trans-unit>
        <trans-unit id="59e40ad02adcd2c691240b758a6d5e9b9fe95316" translate="yes" xml:space="preserve">
          <source>You now have a copy of the code tree in the new &lt;code&gt;numpy&lt;/code&gt; directory. If this doesn&amp;rsquo;t work you can try the alternative read-only url:</source>
          <target state="translated">これで、新しい &lt;code&gt;numpy&lt;/code&gt; ディレクトリにコードツリーのコピーができました。これが機能しない場合は、別の読み取り専用URLを試すことができます。</target>
        </trans-unit>
        <trans-unit id="7d82a2ce6cf2dc0d704ac1ff16739b75bf2b960c" translate="yes" xml:space="preserve">
          <source>You should be able to run this command assuming your search-path is set-up properly. This command will produce an extension module named addmodule.c in the current directory. This extension module can now be compiled and used from Python just like any other extension module.</source>
          <target state="translated">検索パスが適切に設定されていれば、このコマンドを実行できるはずです。このコマンドを実行すると、カレントディレクトリにaddmodule.cという拡張モジュールが生成されます。この拡張モジュールは、他の拡張モジュールと同様に Python からコンパイルして使用することができます。</target>
        </trans-unit>
        <trans-unit id="f3568ae4f766e37d7c5effd4c8f672ee7bd5f8ce" translate="yes" xml:space="preserve">
          <source>You should note that, while included in the table for completeness, the &amp;lsquo;S&amp;rsquo;, &amp;lsquo;U&amp;rsquo;, and &amp;lsquo;V&amp;rsquo; types cannot be operated on by ufuncs. Also, note that on a 32-bit system the integer types may have different sizes, resulting in a slightly altered table.</source>
          <target state="translated">完全を期すために表に含まれていますが、「S」、「U」、および「V」タイプはufuncで操作できないことに注意してください。また、32ビットシステムでは、整数型のサイズが異なる場合があるため、テーブルが若干変更される場合があります。</target>
        </trans-unit>
        <trans-unit id="48e2566d73e02efbbc4b632bf5542ec3c76e7927" translate="yes" xml:space="preserve">
          <source>You should upload the wheels first, and the source formats last, to make sure that pip users don&amp;rsquo;t accidentally get a source install when they were expecting a binary wheel.</source>
          <target state="translated">バイナリホイールを期待していたときにpipユーザーが誤ってソースインストールを取得しないように、最初にホイールをアップロードし、最後にソース形式をアップロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="3f94ae48a7f12ec74a463a4d1b3c1e155565e461" translate="yes" xml:space="preserve">
          <source>You should upload your public gpg key to github, so that the tag will appear &amp;ldquo;verified&amp;rdquo; there.</source>
          <target state="translated">タグが「確認済み」で表示されるように、公開gpgキーをgithubにアップロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="ee5dfeab052b2a1f77650e75e63cd47d30c89d3e" translate="yes" xml:space="preserve">
          <source>You then need to configure your account to allow write access - see the &lt;code&gt;Generating SSH keys&lt;/code&gt; help on &lt;a href=&quot;https://help.github.com&quot;&gt;github help&lt;/a&gt;.</source>
          <target state="translated">次に、書き込みアクセスを許可するようにアカウントを構成する必要があります&lt;a href=&quot;https://help.github.com&quot;&gt;。githubヘルプの「&lt;/a&gt; &lt;code&gt;Generating SSH keys&lt;/code&gt; の生成」ヘルプを参照してください。</target>
        </trans-unit>
        <trans-unit id="f357b2fe6ddb759961311e43e7970103d0b441f0" translate="yes" xml:space="preserve">
          <source>You will also need to add the tests directory in the configuration section of your setup.py:</source>
          <target state="translated">また、setup.py の設定セクションに tests ディレクトリを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="e6a2d166af691548288af8a6c8b8422e8888e7ff" translate="yes" xml:space="preserve">
          <source>You will need Cython for building the binaries. Cython compiles the &lt;code&gt;.pyx&lt;/code&gt; files in the NumPy distribution to &lt;code&gt;.c&lt;/code&gt; files.</source>
          <target state="translated">バイナリを構築するにはCythonが必要です。Cythonは、NumPyディストリビューションの &lt;code&gt;.pyx&lt;/code&gt; ファイルを &lt;code&gt;.c&lt;/code&gt; ファイルにコンパイルします。</target>
        </trans-unit>
        <trans-unit id="60c5c8338d5ce273cc0c97b17a9b0c03f3cdfef9" translate="yes" xml:space="preserve">
          <source>You will need a personal access token &lt;a href=&quot;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&quot;&gt;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&lt;/a&gt; so that scripts can access the github NumPy repository.</source>
          <target state="translated">スクリプトがgithubNumPyリポジトリにアクセスできるようにするには、パーソナルアクセストークン&lt;a href=&quot;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&quot;&gt;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="5f2ad787d36eeaf353182285e56b32b7dd3f0a6d" translate="yes" xml:space="preserve">
          <source>You will need to have Latex installed for this, inclusive of support for Greek letters. For example, on Ubuntu xenial &lt;code&gt;texlive-lang-greek&lt;/code&gt; and &lt;code&gt;cm-super&lt;/code&gt; are needed. Also &lt;code&gt;latexmk&lt;/code&gt; is needed on non-Windows systems.</source>
          <target state="translated">これには、ギリシャ文字のサポートを含め、ラテックスをインストールする必要があります。たとえば、Ubuntuでは &lt;code&gt;texlive-lang-greek&lt;/code&gt; と &lt;code&gt;cm-super&lt;/code&gt; が必要です。また、Windows以外のシステムでは &lt;code&gt;latexmk&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="415b6aea89a48afb144b14ce0c80902b0ffbaf9f" translate="yes" xml:space="preserve">
          <source>You will need write permission for numpy-wheels in order to trigger wheel builds.</source>
          <target state="translated">ホイールビルドを起動するには、numpy-wheelsの書き込み許可が必要です。</target>
        </trans-unit>
        <trans-unit id="216a02cebcf00a1b32e4ce807da6752227f99dbc" translate="yes" xml:space="preserve">
          <source>You will, at some point, want to save your arrays to disk and load them back without having to re-run the code. Fortunately, there are several ways to save and load objects with NumPy. The ndarray objects can be saved to and loaded from the disk files with &lt;code&gt;loadtxt&lt;/code&gt; and &lt;code&gt;savetxt&lt;/code&gt; functions that handle normal text files, &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;save&lt;/code&gt; functions that handle NumPy binary files with a &lt;strong&gt;.npy&lt;/strong&gt; file extension, and a &lt;code&gt;savez&lt;/code&gt; function that handles NumPy files with a &lt;strong&gt;.npz&lt;/strong&gt; file extension.</source>
          <target state="translated">ある時点で、コードを再実行せずに、配列をディスクに保存してロードし直す必要があります。幸い、NumPyを使用してオブジェクトを保存およびロードする方法はいくつかあります。ndarrayオブジェクトは、通常のテキストファイルを処理する &lt;code&gt;loadtxt&lt;/code&gt; および &lt;code&gt;savetxt&lt;/code&gt; 関数、&lt;strong&gt;.npy&lt;/strong&gt;ファイル拡張子を持つNumPyバイナリファイルを処理する &lt;code&gt;load&lt;/code&gt; および &lt;code&gt;save&lt;/code&gt; 関数、およびNumPyファイルを処理する &lt;code&gt;savez&lt;/code&gt; 関数を使用して、ディスクファイルに保存およびロードできます。&lt;strong&gt;.npz&lt;/strong&gt;ファイル拡張子。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b7b74c10de119d207f3d55f6aca0d065a7b12c2" translate="yes" xml:space="preserve">
          <source>Your NumPy version</source>
          <target state="translated">あなたのNumPyバージョン</target>
        </trans-unit>
        <trans-unit id="2af06179f1b8740f992cc77cae66af896533cdbc" translate="yes" xml:space="preserve">
          <source>Your Python version</source>
          <target state="translated">あなたのPythonバージョン</target>
        </trans-unit>
        <trans-unit id="940843b0141e7785b2af30902bf00aeaed17ff7c" translate="yes" xml:space="preserve">
          <source>Your array has 2 axes. The first axis has a length of 2 and the second axis has a length of 3.</source>
          <target state="translated">配列には2つの軸があります。1つ目の軸の長さは2で、2つ目の軸の長さは3です。</target>
        </trans-unit>
        <trans-unit id="65606e148ee4a2cdae9cd01bdb2428ea4938c95f" translate="yes" xml:space="preserve">
          <source>Your collaborators can then commit directly into that repo with the usual:</source>
          <target state="translated">あなたの協力者は、通常の方法でそのレポに直接コミットすることができます。</target>
        </trans-unit>
        <trans-unit id="79b0006a3de24b4b7dc6ff2cd7d352f84f3e4b76" translate="yes" xml:space="preserve">
          <source>Your config file should now look something like (from &lt;code&gt;$ cat .git/config&lt;/code&gt;):</source>
          <target state="translated">設定ファイルは次のようになります（ &lt;code&gt;$ cat .git/config&lt;/code&gt; から）：</target>
        </trans-unit>
        <trans-unit id="521de696e9a3419886283bc12ee7028ed6d2ec64" translate="yes" xml:space="preserve">
          <source>Your data and dtype endianness don&amp;rsquo;t match, and you want to change the dtype so that it matches the data.</source>
          <target state="translated">データとdtypeのエンディアンが一致していないため、データと一致するようにdtypeを変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="5c8e64747c17b40a4b5d00783d37da934474788f" translate="yes" xml:space="preserve">
          <source>Your data and dtype endianness don&amp;rsquo;t match, and you want to swap the data so that they match the dtype</source>
          <target state="translated">データとdtypeのエンディアンが一致せず、dtypeと一致するようにデータを交換したい</target>
        </trans-unit>
        <trans-unit id="5ed0a2c588bf7e44fda3064d79e5f46f92a82610" translate="yes" xml:space="preserve">
          <source>Your data and dtype endianness match, but you want the data swapped and the dtype to reflect this</source>
          <target state="translated">データと dtype のエンディアンは一致していますが、データがスワップされていて dtype にはそれが反映されている必要があります。</target>
        </trans-unit>
        <trans-unit id="2a7febce3ef062310b05f44f84bd0843f7e336a1" translate="yes" xml:space="preserve">
          <source>Your personal &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; configurations are saved in the &lt;code&gt;.gitconfig&lt;/code&gt; file in your home directory. Here is an example &lt;code&gt;.gitconfig&lt;/code&gt; file:</source>
          <target state="translated">個人の&lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;構成は、ホームディレクトリの &lt;code&gt;.gitconfig&lt;/code&gt; ファイルに保存されます。 &lt;code&gt;.gitconfig&lt;/code&gt; ファイルの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="909f99a779adb66a76fc53ab56c7dd1caf35d0fd" translate="yes" xml:space="preserve">
          <source>Z</source>
          <target state="translated">Z</target>
        </trans-unit>
        <trans-unit id="1e16810e3242991af56a001ed6a884d632c200f8" translate="yes" xml:space="preserve">
          <source>Zero matrix of given shape, dtype, and order.</source>
          <target state="translated">指定された形状,dtype,次数のゼロ行列.</target>
        </trans-unit>
        <trans-unit id="e45e696eb3d4f02d39791369c3d3958a76ab90d1" translate="yes" xml:space="preserve">
          <source>Zero matrix.</source>
          <target state="translated">ゼロの行列。</target>
        </trans-unit>
        <trans-unit id="d5dc63474aa23584e657281af8b854e50d810b87" translate="yes" xml:space="preserve">
          <source>Zero padding. Outside bounds values will be 0.</source>
          <target state="translated">パディングはゼロになります。境界外の値は0になります。</target>
        </trans-unit>
        <trans-unit id="dc9379a72db3a8937472e62bd1e9326e04e14e35" translate="yes" xml:space="preserve">
          <source>Zero-padding, analogously with &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt;, is performed by appending zeros to the input along the specified dimension. Although this is the common approach, it might lead to surprising results. If another form of zero padding is desired, it must be performed before &lt;a href=&quot;#numpy.fft.ifft2&quot;&gt;&lt;code&gt;ifft2&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">&lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt;と同様にゼロパディングは、指定された次元に沿って入力にゼロを追加することによって実行されます。これは一般的なアプローチですが、驚くべき結果につながる可能性があります。別の形式のゼロパディングが必要な場合は、&lt;a href=&quot;#numpy.fft.ifft2&quot;&gt; &lt;code&gt;ifft2&lt;/code&gt; &lt;/a&gt;が呼び出される前に実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="64a64c98f6885c75110c036526d556b9a4c44be0" translate="yes" xml:space="preserve">
          <source>Zero-padding, analogously with &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt;, is performed by appending zeros to the input along the specified dimension. Although this is the common approach, it might lead to surprising results. If another form of zero padding is desired, it must be performed before &lt;a href=&quot;#numpy.fft.ifftn&quot;&gt;&lt;code&gt;ifftn&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">&lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt;と同様にゼロパディングは、指定された次元に沿って入力にゼロを追加することによって実行されます。これは一般的なアプローチですが、驚くべき結果につながる可能性があります。別の形式のゼロパディングが必要な場合は、&lt;a href=&quot;#numpy.fft.ifftn&quot;&gt; &lt;code&gt;ifftn&lt;/code&gt; &lt;/a&gt;を呼び出す前に実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="517f56a81e423e64373bd116eb0759a041c8ad2f" translate="yes" xml:space="preserve">
          <source>Zeros are returned for slices that are all-NaN or empty.</source>
          <target state="translated">All-NaNまたは空のスライスにはゼロが返されます。</target>
        </trans-unit>
        <trans-unit id="acacd887197bd2babb7be61e73a56d1f99561e0f" translate="yes" xml:space="preserve">
          <source>Zipf, G. K., &amp;ldquo;Selected Studies of the Principle of Relative Frequency in Language,&amp;rdquo; Cambridge, MA: Harvard Univ. Press, 1932.</source>
          <target state="translated">Zipf、GK、「言語における相対頻度の原理の選択された研究」、ケンブリッジ、マサチューセッツ：ハーバード大学 プレス、1932年。</target>
        </trans-unit>
        <trans-unit id="ed86773f64d57f9b3c7ee4020ed0f191241f3769" translate="yes" xml:space="preserve">
          <source>[ 1678 AD, 2262 AD]</source>
          <target state="translated">[西暦1678年、西暦2262年]</target>
        </trans-unit>
        <trans-unit id="402b4dc5670a23bc318ab3cb00cdc7fa9f64de7f" translate="yes" xml:space="preserve">
          <source>[ 1969 AD, 1970 AD]</source>
          <target state="translated">[西暦1969年、西暦1970年]</target>
        </trans-unit>
        <trans-unit id="bd183430653087be5ae12502c45fc000d3da0d92" translate="yes" xml:space="preserve">
          <source>[ 2.9e8 BC, 2.9e8 AD]</source>
          <target state="translated">[紀元前2.9e8、紀元前2.9e8]</target>
        </trans-unit>
        <trans-unit id="dc7f3e791b46510c11bbde8e0bb893651cf79bee" translate="yes" xml:space="preserve">
          <source>[1.0e15 BC, 1.0e15 AD]</source>
          <target state="translated">[BC 1.0e15、AD 1.0e15]</target>
        </trans-unit>
        <trans-unit id="06a7557ae8ce0cfbe48cae36c42a5043941673e5" translate="yes" xml:space="preserve">
          <source>[1.7e13 BC, 1.7e13 AD]</source>
          <target state="translated">[紀元前1.7e13、西暦1.7e13]</target>
        </trans-unit>
        <trans-unit id="d122eae6bae0b58d08b1fd88854423fb5b4631e6" translate="yes" xml:space="preserve">
          <source>[1.7e17 BC, 1.7e17 AD]</source>
          <target state="translated">[紀元前1.7e17、西暦1.7e17]</target>
        </trans-unit>
        <trans-unit id="af9678a88e0692bf413856f430540a50579b7921" translate="yes" xml:space="preserve">
          <source>[2.5e16 BC, 2.5e16 AD]</source>
          <target state="translated">[BC 2.5e16、AD 2.5e16]</target>
        </trans-unit>
        <trans-unit id="fb54cef9abe0ffb09a025ee28bfe888680b86ee0" translate="yes" xml:space="preserve">
          <source>[2.9e11 BC, 2.9e11 AD]</source>
          <target state="translated">[紀元前2.9e11、紀元前2.9e11]</target>
        </trans-unit>
        <trans-unit id="9b1e4a9e31badd5faa858bd32af6c4bab33690b0" translate="yes" xml:space="preserve">
          <source>[290301 BC, 294241 AD]</source>
          <target state="translated">[紀元前290301、西暦294241]</target>
        </trans-unit>
        <trans-unit id="2212219fa92d0d55a2e83f844d81d7dc4a36dd7d" translate="yes" xml:space="preserve">
          <source>[7.6e17 BC, 7.6e17 AD]</source>
          <target state="translated">[紀元前7.6e17、紀元前7.6e17]</target>
        </trans-unit>
        <trans-unit id="7855213bc11a8db7fc6daa3f131f06c9977a3960" translate="yes" xml:space="preserve">
          <source>[9.2e18 BC, 9.2e18 AD]</source>
          <target state="translated">[BC 9.2e18、AD 9.2e18]</target>
        </trans-unit>
        <trans-unit id="faf24ac10ab74f225b601311df4355d76763fa97" translate="yes" xml:space="preserve">
          <source>[CT]</source>
          <target state="translated">[CT]</target>
        </trans-unit>
        <trans-unit id="7d2f4bdb1926f2cbbdd65bcf6b74603f5acdf8c8" translate="yes" xml:space="preserve">
          <source>[G]</source>
          <target state="translated">[G]</target>
        </trans-unit>
        <trans-unit id="3d6c6c6111149819e43b6089c9a7b9c8a2431938" translate="yes" xml:space="preserve">
          <source>[NR]</source>
          <target state="translated">[NR]</target>
        </trans-unit>
        <trans-unit id="1b8941d3b1d081473898f4b2e4a8ff850cc6de82" translate="yes" xml:space="preserve">
          <source>[R5cc1f1f25381-1]</source>
          <target state="translated">[R5cc1f1f25381-1]</target>
        </trans-unit>
        <trans-unit id="0c4d5826769047e816879e0f7216ecf388ea499b" translate="yes" xml:space="preserve">
          <source>[Re860718f5533-1]</source>
          <target state="translated">[Re860718f5533-1]</target>
        </trans-unit>
        <trans-unit id="6b6f9491cb308db36a45d25a8dcf1db55932e083" translate="yes" xml:space="preserve">
          <source>[WRW]</source>
          <target state="translated">[WRW]</target>
        </trans-unit>
        <trans-unit id="ff244a354c248341a7c0c68812d2513231ccfc0a" translate="yes" xml:space="preserve">
          <source>__abs__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__abs __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="4c4b5bf4744a7442f73005c1fe439a869d4912cf" translate="yes" xml:space="preserve">
          <source>__add__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__add __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="6678ac2d33e0e869b460789a44fcc1898b470174" translate="yes" xml:space="preserve">
          <source>__and__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__and __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="0d11e11f5da3e629ed021ca7c69b3e1560e48dc7" translate="yes" xml:space="preserve">
          <source>__array__() (numpy.class method)</source>
          <target state="translated">__array __（）（numpy.classメソッド）</target>
        </trans-unit>
        <trans-unit id="3897c72013a6887de9a1de9869c3e948fd9696d2" translate="yes" xml:space="preserve">
          <source>__array_data__</source>
          <target state="translated">__array_data__</target>
        </trans-unit>
        <trans-unit id="81f5d0f249cae6e54a5453d7972fcd0943accd0e" translate="yes" xml:space="preserve">
          <source>__array_descr__</source>
          <target state="translated">__array_descr__</target>
        </trans-unit>
        <trans-unit id="71c1674de3ef7b1b98cc9d6fe1997049bf59be3a" translate="yes" xml:space="preserve">
          <source>__array_finalize__ (ndarray attribute)</source>
          <target state="translated">__array_finalize __（ndarray属性）</target>
        </trans-unit>
        <trans-unit id="8f36773cdfd15c6cb88da726f7af67270582d5e8" translate="yes" xml:space="preserve">
          <source>__array_finalize__() (numpy.class method)</source>
          <target state="translated">__array_finalize __（）（numpy.classメソッド）</target>
        </trans-unit>
        <trans-unit id="7ea410ff45968c207a24de940975e7ab4957e592" translate="yes" xml:space="preserve">
          <source>__array_function__() (numpy.class method)</source>
          <target state="translated">__array_function __（）（numpy.classメソッド）</target>
        </trans-unit>
        <trans-unit id="c0a201183273449f8bd82be2d062468aa25df323" translate="yes" xml:space="preserve">
          <source>__array_interface__</source>
          <target state="translated">__array_interface__</target>
        </trans-unit>
        <trans-unit id="5e8cd5fbc938886a9b24f4ad582e1858af233bd3" translate="yes" xml:space="preserve">
          <source>__array_interface__ (built-in variable)</source>
          <target state="translated">__array_interface __（組み込み変数）</target>
        </trans-unit>
        <trans-unit id="0a9ff3eb9a1e79e8a4cdf02304244a5327adcb47" translate="yes" xml:space="preserve">
          <source>__array_mask__</source>
          <target state="translated">__array_mask__</target>
        </trans-unit>
        <trans-unit id="ac7e7fcdcffb075d0e09e72d92d910d4b9351cdb" translate="yes" xml:space="preserve">
          <source>__array_offset__</source>
          <target state="translated">__array_offset__</target>
        </trans-unit>
        <trans-unit id="9c741cad077927490ce59ac67b73a774e6f89174" translate="yes" xml:space="preserve">
          <source>__array_prepare__() (numpy.class method)</source>
          <target state="translated">__array_prepare __（）（numpy.classメソッド）</target>
        </trans-unit>
        <trans-unit id="706e28500d6f6f91b4ccffa7a37375935df27ebf" translate="yes" xml:space="preserve">
          <source>__array_priority__ (ndarray attribute)</source>
          <target state="translated">__array_priority __（ndarray属性）</target>
        </trans-unit>
        <trans-unit id="238f299c155456fe6a848580f0ef9d3e6bb2a8de" translate="yes" xml:space="preserve">
          <source>__array_shape__</source>
          <target state="translated">__array_shape__</target>
        </trans-unit>
        <trans-unit id="2f3678a5595fd628d8dfae6d631c1ae1fb6ef8da" translate="yes" xml:space="preserve">
          <source>__array_strides__</source>
          <target state="translated">__array_strides__</target>
        </trans-unit>
        <trans-unit id="a6b58a1617079ec0d71beb11f7ad2a32fbc5e31b" translate="yes" xml:space="preserve">
          <source>__array_struct__ (C variable)</source>
          <target state="translated">__array_struct __（C変数）</target>
        </trans-unit>
        <trans-unit id="aa0ad955aed8601e1764fbffe3d43f4a00fe14f0" translate="yes" xml:space="preserve">
          <source>__array_typestr__</source>
          <target state="translated">__array_typestr__</target>
        </trans-unit>
        <trans-unit id="fe002ec6f40f1ef39f555bc8098b8ae17664e460" translate="yes" xml:space="preserve">
          <source>__array_ufunc__() (numpy.class method)</source>
          <target state="translated">__array_ufunc __（）（numpy.classメソッド）</target>
        </trans-unit>
        <trans-unit id="9314342a46890bf2effc2cd0ca7ae9d86fbab2ab" translate="yes" xml:space="preserve">
          <source>__array_wrap__ (ndarray attribute)</source>
          <target state="translated">__array_wrap __（ndarray属性）</target>
        </trans-unit>
        <trans-unit id="7119e49dd617e61e14c792d40e73cfaea33b58e9" translate="yes" xml:space="preserve">
          <source>__array_wrap__() (numpy.class method)</source>
          <target state="translated">__array_wrap __（）（numpy.classメソッド）</target>
        </trans-unit>
        <trans-unit id="7db20120a72ce06d646b6c6dcd5425b26c3e5960" translate="yes" xml:space="preserve">
          <source>__bool__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__bool __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="742d6d7ad7e950adf0baeb3840475b9697d5247f" translate="yes" xml:space="preserve">
          <source>__call__() (numpy.errstate method)</source>
          <target state="translated">__call __（）（numpy.errstateメソッド）</target>
        </trans-unit>
        <trans-unit id="42f6ad5a08ff5c43656e00a478c5d881e4d9bde2" translate="yes" xml:space="preserve">
          <source>__complex__() (numpy.ndarray method)</source>
          <target state="translated">__complex __（）（numpy.ndarrayメソッド）</target>
        </trans-unit>
        <trans-unit id="61d9f3d63c64e0c9246b6b0759acaa297a1b63f8" translate="yes" xml:space="preserve">
          <source>__contains__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__contains __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="21b97c4598a5c0f08b4e43cb110d60055e0a0d83" translate="yes" xml:space="preserve">
          <source>__copy__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__copy __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="76a34abc5b8589cb006e5abec3e19f45834f3e0e" translate="yes" xml:space="preserve">
          <source>__deepcopy__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__deepcopy __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="a4a0a2759a904d07b0a7f6382ee4cb135c42fa55" translate="yes" xml:space="preserve">
          <source>__delitem__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__delitem __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="e5f06b8d2741eb0c9a9ecfd96f7b29f8d327af99" translate="yes" xml:space="preserve">
          <source>__div__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__div __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="6b169bb83bc3ef64127b9f9631edac78b95e2d9c" translate="yes" xml:space="preserve">
          <source>__divmod__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__divmod __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="1071dfb4883bb317f4e15ad7285cdfb11590aa50" translate="yes" xml:space="preserve">
          <source>__eq__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__eq __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="4c6cd4c9dd6a2fae960042d008df97b84cc1a6b1" translate="yes" xml:space="preserve">
          <source>__float__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__float __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="ca2adcf577bd06d86d393f4b6f82348f709b3f8e" translate="yes" xml:space="preserve">
          <source>__floordiv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__floordiv __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="2e6e6576e79eed92b062f178480f9c2e44357d26" translate="yes" xml:space="preserve">
          <source>__ge__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ge __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="80c999b96cc2bf42febefc3267bbe623bb9a52fc" translate="yes" xml:space="preserve">
          <source>__getitem__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__getitem __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="0e67304b2966a9b24180761c372d7eb62eeca03d" translate="yes" xml:space="preserve">
          <source>__getstate__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__getstate __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="ee5a3430f0fc150d7881667230bccd9504f8ee6a" translate="yes" xml:space="preserve">
          <source>__gt__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__gt __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="204154f473ba4a7a760c5ad53c9c1bfd3f780935" translate="yes" xml:space="preserve">
          <source>__iadd__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__iadd __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="44c25ee9237277db9c3dc3837dd82885f32e9fc8" translate="yes" xml:space="preserve">
          <source>__iand__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__iand __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="f4b055ab67a5399205f992368c23e87a148e6bbc" translate="yes" xml:space="preserve">
          <source>__idiv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__idiv __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="12b013739c6f2ab8fb38abdf48c556c9bdf72b74" translate="yes" xml:space="preserve">
          <source>__ifloordiv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ifloordiv __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="2d0a20aaef82c1babb5e3f281fe1652445774c47" translate="yes" xml:space="preserve">
          <source>__ilshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ilshift __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="3ca6ec10e7e5c3ac6eed2fb2cd7983e511913fe0" translate="yes" xml:space="preserve">
          <source>__imod__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__imod __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="8dcfdd1ea7808e804d0d2de3b684e5a40b37c73f" translate="yes" xml:space="preserve">
          <source>__imul__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__imul __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="f3179c7957be9626d543af54227ef33447db811f" translate="yes" xml:space="preserve">
          <source>__int__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__int __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="0dcc5bfffa92fe686ee5601d0a55f2cbe2e7e00b" translate="yes" xml:space="preserve">
          <source>__invert__() (numpy.ndarray method)</source>
          <target state="translated">__invert __（）（numpy.ndarrayメソッド）</target>
        </trans-unit>
        <trans-unit id="f323a0176a30dc3806b3599ffb801b61f49118fc" translate="yes" xml:space="preserve">
          <source>__ior__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ior __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="a8a6fd1b32704d7df8f2c671be50224b0ddfd417" translate="yes" xml:space="preserve">
          <source>__ipow__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ipow __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="ac284929d6d2841bfb35a4fc881ba98436475838" translate="yes" xml:space="preserve">
          <source>__irshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__irshift __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="bb8d45f2d79b80bca777b8b65a1856160e35d3a7" translate="yes" xml:space="preserve">
          <source>__isub__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__isub __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="6b97aded6fce6da14ed1886d654538a1d7346166" translate="yes" xml:space="preserve">
          <source>__itruediv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__itruediv __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="f20873859cc72218063eb2e99f7b3c635fc1ccd7" translate="yes" xml:space="preserve">
          <source>__ixor__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ixor __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="3ab3b0671db0345ffc637119c88027677042a2e0" translate="yes" xml:space="preserve">
          <source>__le__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__le __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="a9db981374fe27550138235e60768f22b6087d62" translate="yes" xml:space="preserve">
          <source>__len__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__len __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="c8f86a204e8f36c3b1605f234d01078ebd148b7d" translate="yes" xml:space="preserve">
          <source>__lshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__lshift __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="8e27c1e077f869be7cdb6f17caf4c2c4a42f50ef" translate="yes" xml:space="preserve">
          <source>__lt__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__lt __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="8c72867d9219621c6d7aebcdaf258be66c2e7606" translate="yes" xml:space="preserve">
          <source>__matmul__() (numpy.ndarray method)</source>
          <target state="translated">__matmul __（）（numpy.ndarrayメソッド）</target>
        </trans-unit>
        <trans-unit id="46bca0791556e71757947e4ae551298c9d9d302b" translate="yes" xml:space="preserve">
          <source>__mod__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__mod __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="44df3a889306e1d1dad4c705432c35ffa9dc253c" translate="yes" xml:space="preserve">
          <source>__mul__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__mul __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="0edd530853ee5c7448a61802ef2a7bb2f316160d" translate="yes" xml:space="preserve">
          <source>__ne__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ne __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="f5d965082672e1ab3fccd5a35532509bcb204b3d" translate="yes" xml:space="preserve">
          <source>__neg__() (numpy.ndarray method)</source>
          <target state="translated">__neg __（）（numpy.ndarrayメソッド）</target>
        </trans-unit>
        <trans-unit id="874bc1e2d2304a0c375c91f465e9606decc5489c" translate="yes" xml:space="preserve">
          <source>__new__() (numpy.ma.MaskedArray static method)</source>
          <target state="translated">__new __（）（numpy.ma.MaskedArray静的メソッド）</target>
        </trans-unit>
        <trans-unit id="c2bc0efd8d9d9a7c9de047094bcea8ea3b6016f4" translate="yes" xml:space="preserve">
          <source>__or__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__or __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="b2c492f3eb1f3fb77459cd594dbb68e47052569d" translate="yes" xml:space="preserve">
          <source>__pos__() (numpy.ndarray method)</source>
          <target state="translated">__pos __（）（numpy.ndarrayメソッド）</target>
        </trans-unit>
        <trans-unit id="56ed35d1abe325c67368c19e29ec90342247a382" translate="yes" xml:space="preserve">
          <source>__pow__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__pow __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="7d5fff8a498554189fe8f227b7b8fdd3ac26b033" translate="yes" xml:space="preserve">
          <source>__radd__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__radd __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="d47b34763f0ab824f7faa9c38739259d9776ba95" translate="yes" xml:space="preserve">
          <source>__rand__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rand __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="45e87f9e2f2c5840cec279964e71d7abfcf560d0" translate="yes" xml:space="preserve">
          <source>__rdivmod__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rdivmod __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="e8f51120e253e84c609118bd38acc582cef0a098" translate="yes" xml:space="preserve">
          <source>__reduce__() (numpy.dtype method)</source>
          <target state="translated">__reduce __（）（numpy.dtypeメソッド）</target>
        </trans-unit>
        <trans-unit id="4e0aa284749252147e3e1f6388777dc57b0de5d9" translate="yes" xml:space="preserve">
          <source>__repr__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__repr __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="28754dd8ed99e36f8650c5c8c3991d308f1c4f57" translate="yes" xml:space="preserve">
          <source>__rfloordiv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rfloordiv __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="0f7b8ba6a95412da6684ff730f2a3413dbf233cc" translate="yes" xml:space="preserve">
          <source>__rlshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rlshift __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="6f4d58b4bb7931bfa7e3af8c43dfc1b22589f7d8" translate="yes" xml:space="preserve">
          <source>__rmod__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rmod __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="5e22a0ceb1f0d9fc1df49d219bf644ece8f8cba1" translate="yes" xml:space="preserve">
          <source>__rmul__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rmul __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="b38ea4e037bea2f469a4a53c5b3edfaaeafd86bb" translate="yes" xml:space="preserve">
          <source>__ror__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__ror __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="e32731356df615e055546fab7e9b727d861d2bfe" translate="yes" xml:space="preserve">
          <source>__rpow__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rpow __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="64f00839bb558300f64207e3b84e7e892be7e23e" translate="yes" xml:space="preserve">
          <source>__rrshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rrshift __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="3d012262378a0000ebe51f98742e1a14c7546a2c" translate="yes" xml:space="preserve">
          <source>__rshift__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rshift __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="ee7f010f4d4bd19b27dc403b07e4628d9460acd3" translate="yes" xml:space="preserve">
          <source>__rsub__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rsub __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="fc7e68badecf4937067508042a8240feaafc178f" translate="yes" xml:space="preserve">
          <source>__rtruediv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rtruediv __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="d7160c7d2860a0049df61a7a8ae4cfa33f241764" translate="yes" xml:space="preserve">
          <source>__rxor__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__rxor __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="f4912ee41d6cd83bd9e53dccd3c74fb2aa6c5cfd" translate="yes" xml:space="preserve">
          <source>__setitem__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__setitem __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="cb35b9d3e836a4e0fedf974ad62a85aab0abb72c" translate="yes" xml:space="preserve">
          <source>__setmask__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__setmask __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="91fcd479e5d18721e18563cb76b63c6dc180b643" translate="yes" xml:space="preserve">
          <source>__setstate__() (numpy.dtype method)</source>
          <target state="translated">__setstate __（）（numpy.dtypeメソッド）</target>
        </trans-unit>
        <trans-unit id="9d3cb50b03eb52dbbae73b53cf1916f25adaaad8" translate="yes" xml:space="preserve">
          <source>__str__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__str __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="2b414bde8ee1935d20f07da3bcb2184daa7ebeef" translate="yes" xml:space="preserve">
          <source>__sub__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__sub __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="140c3cde666eea556cdfd3011d31cb407d2266af" translate="yes" xml:space="preserve">
          <source>__truediv__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__truediv __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="07b1823cae9ddb58ae30758105a74c411063c5f0" translate="yes" xml:space="preserve">
          <source>__xor__() (numpy.ma.MaskedArray method)</source>
          <target state="translated">__xor __（）（numpy.ma.MaskedArrayメソッド）</target>
        </trans-unit>
        <trans-unit id="0edc0e5b0babe606fdece95d661f1a734b04a296" translate="yes" xml:space="preserve">
          <source>a (C variable)</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="96401488135b817c2f1747197a83525ae296049e" translate="yes" xml:space="preserve">
          <source>a (fixed) payment, &lt;a href=&quot;numpy.pmt#numpy.pmt&quot;&gt;&lt;code&gt;pmt&lt;/code&gt;&lt;/a&gt;, paid either</source>
          <target state="translated">（固定）支払い、&lt;a href=&quot;numpy.pmt#numpy.pmt&quot;&gt; &lt;code&gt;pmt&lt;/code&gt; &lt;/a&gt;、いずれかを支払い</target>
        </trans-unit>
        <trans-unit id="d5166cddbf23a08b5074c2edc9aec3c68a5f3663" translate="yes" xml:space="preserve">
          <source>a 1-D array of 624 unsigned integer keys.</source>
          <target state="translated">624個の符号なし整数キーの1次元配列。</target>
        </trans-unit>
        <trans-unit id="e95c05fdf3a7626457c027e91f7b377539d00b22" translate="yes" xml:space="preserve">
          <source>a 1-D array of 624 unsigned integers &lt;code&gt;keys&lt;/code&gt;.</source>
          <target state="translated">624個の符号なし整数 &lt;code&gt;keys&lt;/code&gt; 1次元配列。</target>
        </trans-unit>
        <trans-unit id="72fdfe6550961319f36cdd5e343cde12faf15445" translate="yes" xml:space="preserve">
          <source>a 1-d view of scalar</source>
          <target state="translated">スカラーの1次元ビュー</target>
        </trans-unit>
        <trans-unit id="74f70982e8ed106bd95f08838212248bb41b2355" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; &lt;/a&gt;、</target>
        </trans-unit>
        <trans-unit id="8f21ea65027d34d0f525219a53334dc35cb5bbea" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;chararray&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;chararray&lt;/code&gt; 、</target>
        </trans-unit>
        <trans-unit id="cb4065b0f0de4de8cc6afb691ce3365727df08a4" translate="yes" xml:space="preserve">
          <source>a Python str or unicode object,</source>
          <target state="translated">Python の str または unicode オブジェクト。</target>
        </trans-unit>
        <trans-unit id="753cc1b7cdb86a0a582f834f17fe8e4f8e20365f" translate="yes" xml:space="preserve">
          <source>a binary string for the data</source>
          <target state="translated">データのバイナリ文字列</target>
        </trans-unit>
        <trans-unit id="7be660f83fa27f597e95280a8283a2c0611d9749" translate="yes" xml:space="preserve">
          <source>a binary string for the mask.</source>
          <target state="translated">マスクのバイナリ文字列。</target>
        </trans-unit>
        <trans-unit id="da3d248ac1b46ab9b40ccba358d7b76cb5f95a1a" translate="yes" xml:space="preserve">
          <source>a binary string with the data (or a list if &amp;lsquo;a&amp;rsquo; is an object array)</source>
          <target state="translated">データを含むバイナリ文字列（または 'a'がオブジェクト配列の場合はリスト）</target>
        </trans-unit>
        <trans-unit id="23ba6abbcb5fde1985a0ccafa389ab00c97b60c5" translate="yes" xml:space="preserve">
          <source>a comma-separated string, such as &lt;code&gt;dtype=&quot;i4,f8,|U3&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dtype=&quot;i4,f8,|U3&quot;&lt;/code&gt; などのコンマ区切りの文字列。</target>
        </trans-unit>
        <trans-unit id="8f30c34fa91e5fe02fcaaa600112ca2401559232" translate="yes" xml:space="preserve">
          <source>a description of what conditions (if any) would convince the vetoer to withdraw their veto.</source>
          <target state="translated">拒否権者が拒否権を撤回するためにどのような条件があるかの説明。</target>
        </trans-unit>
        <trans-unit id="75a0b11cb8353626ce9f617e11df2761570b96e8" translate="yes" xml:space="preserve">
          <source>a dictionary</source>
          <target state="translated">じしょ</target>
        </trans-unit>
        <trans-unit id="704f270fcdda892dcd7da2499a02cbe197238d4e" translate="yes" xml:space="preserve">
          <source>a dictionary with two keys &lt;code&gt;'names'&lt;/code&gt; and &lt;code&gt;'formats'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'names'&lt;/code&gt; と &lt;code&gt;'formats'&lt;/code&gt; の2つのキーを持つ辞書。</target>
        </trans-unit>
        <trans-unit id="165258a094d59f96169a00b9e5b85c293cfac672" translate="yes" xml:space="preserve">
          <source>a flat iterator on the array.</source>
          <target state="translated">配列の平坦なイテレータ.</target>
        </trans-unit>
        <trans-unit id="38fa2b975a8b6b4a3d3bf21a07ac779da6179bf8" translate="yes" xml:space="preserve">
          <source>a float &lt;code&gt;cached_gaussian&lt;/code&gt;.</source>
          <target state="translated">float &lt;code&gt;cached_gaussian&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c6b35fc604217468fc6d89abf074eb38712618f" translate="yes" xml:space="preserve">
          <source>a full string specifying every real and imaginary part, e.g. &lt;code&gt;&amp;lsquo; %.4e %+.4ej %.4e %+.4ej %.4e %+.4ej&amp;rsquo;&lt;/code&gt; for 3 columns</source>
          <target state="translated">すべての実数部と虚数部を指定する完全な文字列 &lt;code&gt;&amp;lsquo; %.4e %+.4ej %.4e %+.4ej %.4e %+.4ej&amp;rsquo;&lt;/code&gt; 例：3列の場合は'％.4e％+。4ej％.4e％+。4ej％.4e％+。4ej'</target>
        </trans-unit>
        <trans-unit id="2a967621935781dbcc252b4a8b7d96f97a3cfb15" translate="yes" xml:space="preserve">
          <source>a future value, &lt;a href=&quot;numpy.fv#numpy.fv&quot;&gt;&lt;code&gt;fv&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">将来の価値、&lt;a href=&quot;numpy.fv#numpy.fv&quot;&gt; &lt;code&gt;fv&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62e19c74a71f45e1129086651da5d9eac4640584" translate="yes" xml:space="preserve">
          <source>a future value, &lt;a href=&quot;numpy.fv#numpy.fv&quot;&gt;&lt;code&gt;fv&lt;/code&gt;&lt;/a&gt; (e.g., 0)</source>
          <target state="translated">将来の値、&lt;a href=&quot;numpy.fv#numpy.fv&quot;&gt; &lt;code&gt;fv&lt;/code&gt; &lt;/a&gt;（たとえば、0）</target>
        </trans-unit>
        <trans-unit id="1753c0d76b344c4afe3b81d53fc356b2c9ebe4fe" translate="yes" xml:space="preserve">
          <source>a list of length 1, 2, or 3 specifying the ufunc buffer-size, the error mode integer, and the error call-back function. Normally, these values are looked up in a thread-specific dictionary. Passing them here circumvents that look up and uses the low-level specification provided for the error mode. This may be useful, for example, as an optimization for calculations requiring many ufunc calls on small arrays in a loop.</source>
          <target state="translated">ufunc のバッファサイズ、エラーモード整数、エラーコールバック関数を指定した長さ 1、2、または 3 のリスト。通常、これらの値はスレッド固有の辞書で検索されます。ここでこれらの値を渡すことで、この検索を回避し、エラーモードのために提供されている低レベルの仕様を使用します。これは、例えば、ループ内の小さな配列に対して多くのufunc呼び出しを必要とする計算の最適化として有用かもしれません。</target>
        </trans-unit>
        <trans-unit id="fdf1b7e7c1011d591cfbd0af0815aff32260a794" translate="yes" xml:space="preserve">
          <source>a list of length 3 specifying the ufunc buffer-size, the error mode integer, and the error call-back function. Normally, these values are looked up in a thread-specific dictionary. Passing them here circumvents that look up and uses the low-level specification provided for the error mode. This may be useful, for example, as an optimization for calculations requiring many ufunc calls on small arrays in a loop.</source>
          <target state="translated">ufunc のバッファサイズ、エラーモード整数、エラーコールバック関数を指定した長さ 3 のリスト。通常、これらの値はスレッド固有の辞書で検索されます。ここでこれらの値を渡すことで、この検索を回避し、エラーモードのために提供されている低レベルの仕様を使用します。これは、例えば、ループ内の小さな配列に対して多くのufunc呼び出しを必要とする計算の最適化として有用かもしれません。</target>
        </trans-unit>
        <trans-unit id="8a016fa87293ad87bf7d20c139907d4294ea1c51" translate="yes" xml:space="preserve">
          <source>a list of specifiers, one per column - in this case, the real and imaginary part must have separate specifiers, e.g. &lt;code&gt;[&amp;lsquo;%.3e + %.3ej&amp;rsquo;, &amp;lsquo;(%.15e%+.15ej)&amp;rsquo;]&lt;/code&gt; for 2 columns</source>
          <target state="translated">列ごとに1つの指定子のリスト-この場合、実数部と虚数部には別々の指定子が必要 &lt;code&gt;[&amp;lsquo;%.3e + %.3ej&amp;rsquo;, &amp;lsquo;(%.15e%+.15ej)&amp;rsquo;]&lt;/code&gt; 、2列の場合は['％.3e +％.3ej'、 '（％.15e％+。15ej）']</target>
        </trans-unit>
        <trans-unit id="754b3f88fe33809498963069c46fb70a1dd37618" translate="yes" xml:space="preserve">
          <source>a local file.</source>
          <target state="translated">ローカルファイルを使用しています。</target>
        </trans-unit>
        <trans-unit id="22e45aa7e27532a97050bec76c57f40005681c13" translate="yes" xml:space="preserve">
          <source>a powerful N-dimensional &lt;a href=&quot;reference/arrays#arrays&quot;&gt;array object&lt;/a&gt;</source>
          <target state="translated">強力なN次元&lt;a href=&quot;reference/arrays#arrays&quot;&gt;配列オブジェクト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ca4cb12a95fc655dfb15fbc902c4327211a0f3f" translate="yes" xml:space="preserve">
          <source>a present value, &lt;a href=&quot;numpy.pv#numpy.pv&quot;&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">現在値、&lt;a href=&quot;numpy.pv#numpy.pv&quot;&gt; &lt;code&gt;pv&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1b5254931af84f023d149f4ef57b6e3483f413e" translate="yes" xml:space="preserve">
          <source>a present value, &lt;a href=&quot;numpy.pv#numpy.pv&quot;&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt; (e.g., an amount borrowed)</source>
          <target state="translated">現在価値、&lt;a href=&quot;numpy.pv#numpy.pv&quot;&gt; &lt;code&gt;pv&lt;/code&gt; &lt;/a&gt;（たとえば、借入額）</target>
        </trans-unit>
        <trans-unit id="3f700e7c94c2cf78162bf09d2c7b35da27688852" translate="yes" xml:space="preserve">
          <source>a remote URL that has been downloaded and stored locally in the &lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; directory.</source>
          <target state="translated">ダウンロードされ、&lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;ディレクトリにローカルに保存されたリモートURL 。</target>
        </trans-unit>
        <trans-unit id="8177c15205bb62fb37d25bf262fbb7d33cc77467" translate="yes" xml:space="preserve">
          <source>a remote URL that has not been downloaded, but is valid and accessible.</source>
          <target state="translated">ダウンロードされていないが、有効でアクセス可能なリモート URL。</target>
        </trans-unit>
        <trans-unit id="fc18023e5beeb34cfd63a03735997fa403d6779a" translate="yes" xml:space="preserve">
          <source>a sequence of strings</source>
          <target state="translated">羅列</target>
        </trans-unit>
        <trans-unit id="581fbb7fd07105b5fb313725adb67250478b41d1" translate="yes" xml:space="preserve">
          <source>a sequence of tuples &lt;code&gt;(name, type)&lt;/code&gt;, such as &lt;code&gt;dtype=[('A', int), ('B', float)]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dtype=[('A', int), ('B', float)]&lt;/code&gt; などのタプル &lt;code&gt;(name, type)&lt;/code&gt; シーケンス。</target>
        </trans-unit>
        <trans-unit id="bb7fb34c341acd589894b7cb9e258fc160dbe4fc" translate="yes" xml:space="preserve">
          <source>a sequence of types, such as &lt;code&gt;dtype=(int, float, float)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dtype=(int, float, float)&lt;/code&gt; などのタイプのシーケンス。</target>
        </trans-unit>
        <trans-unit id="665aa4dfa862dbce7e767c7639de941c068720d2" translate="yes" xml:space="preserve">
          <source>a sequence of values</source>
          <target state="translated">値列</target>
        </trans-unit>
        <trans-unit id="4e4908db613729ad16f59838856c8fc6378cb91a" translate="yes" xml:space="preserve">
          <source>a single specifier, &lt;code&gt;fmt=&amp;rsquo;%.4e&amp;rsquo;&lt;/code&gt;, resulting in numbers formatted like &lt;code&gt;&amp;lsquo; (%s+%sj)&amp;rsquo; % (fmt, fmt)&lt;/code&gt;</source>
          <target state="translated">単一の指定子 &lt;code&gt;fmt=&amp;rsquo;%.4e&amp;rsquo;&lt;/code&gt; 、結果は &lt;code&gt;&amp;lsquo; (%s+%sj)&amp;rsquo; % (fmt, fmt)&lt;/code&gt; ような形式になります</target>
        </trans-unit>
        <trans-unit id="e920b8da955e5127e310279497efec15b98dd973" translate="yes" xml:space="preserve">
          <source>a single type, such as &lt;code&gt;dtype=float&lt;/code&gt;. The output will be 2D with the given dtype, unless a name has been associated with each column with the use of the &lt;code&gt;names&lt;/code&gt; argument (see below). Note that &lt;code&gt;dtype=float&lt;/code&gt; is the default for &lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt;&lt;code&gt;genfromtxt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;dtype=float&lt;/code&gt; などの単一のタイプ。 &lt;code&gt;names&lt;/code&gt; 引数を使用して各列に名前が関連付けられていない限り、出力は指定されたdtypeで2Dになります（以下を参照）。注こと &lt;code&gt;dtype=float&lt;/code&gt; のデフォルトです&lt;a href=&quot;../reference/generated/numpy.genfromtxt#numpy.genfromtxt&quot;&gt; &lt;code&gt;genfromtxt&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db9b14f123723ffb6a1c7625cfec338c91b7eb35" translate="yes" xml:space="preserve">
          <source>a single value</source>
          <target state="translated">たんち</target>
        </trans-unit>
        <trans-unit id="d621d0c0165fe844bdafa02ee3f44142e8347621" translate="yes" xml:space="preserve">
          <source>a string or a comma-separated string</source>
          <target state="translated">文字列またはカンマ区切り文字列</target>
        </trans-unit>
        <trans-unit id="02f0357554cfbce37a16e4d5a7d774ab825a16e0" translate="yes" xml:space="preserve">
          <source>a tuple giving the shape of the data</source>
          <target state="translated">データの形を与えるタプル</target>
        </trans-unit>
        <trans-unit id="5a7e14c9afd05529942ab7c758fc5563081473ff" translate="yes" xml:space="preserve">
          <source>a typecode for the data</source>
          <target state="translated">データの型コード</target>
        </trans-unit>
        <trans-unit id="2df379fb536f11677668023fe688e8a742e548d0" translate="yes" xml:space="preserve">
          <source>absolute (in module numpy)</source>
          <target state="translated">絶対</target>
        </trans-unit>
        <trans-unit id="4909bcee736f21faba4c4b4db99ca3259c9745b0" translate="yes" xml:space="preserve">
          <source>absolute(&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;b&lt;/code&gt;) &amp;lt;= (&lt;code&gt;atol&lt;/code&gt; + &lt;code&gt;rtol&lt;/code&gt; * absolute(&lt;code&gt;b&lt;/code&gt;))</source>
          <target state="translated">絶対（ &lt;code&gt;a&lt;/code&gt; - &lt;code&gt;b&lt;/code&gt; ）&amp;lt;=（ &lt;code&gt;atol&lt;/code&gt; + &lt;code&gt;rtol&lt;/code&gt; *絶対（ &lt;code&gt;b&lt;/code&gt; ））</target>
        </trans-unit>
        <trans-unit id="5e5215351c5a9435d5468e209f4ae4f89865d695" translate="yes" xml:space="preserve">
          <source>abspath() (numpy.DataSource method)</source>
          <target state="translated">abspath()(numpy.DataSourceメソッド)</target>
        </trans-unit>
        <trans-unit id="95c5768a77fb7c528c79cc85ec1625cb0c08d6c4" translate="yes" xml:space="preserve">
          <source>access element in second row, fifth column</source>
          <target state="translated">二行目五列目のアクセス要素</target>
        </trans-unit>
        <trans-unit id="1c3d3c4a6fc9f317a1315e03d8ba62adba671f6f" translate="yes" xml:space="preserve">
          <source>access last element in the 1xn matrix &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">1xNの行列でアクセス最後の要素 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da612b00046cfa57f5be01bb44f03c97ee5fcb20" translate="yes" xml:space="preserve">
          <source>accumulate</source>
          <target state="translated">accumulate</target>
        </trans-unit>
        <trans-unit id="34bf564c6974fe414e320272397007672183b5ad" translate="yes" xml:space="preserve">
          <source>accumulate() (numpy.ufunc method)</source>
          <target state="translated">accumulate()(numpy.ufuncメソッド)</target>
        </trans-unit>
        <trans-unit id="f0243b68a17b26311e55f3b2d09ecde950910d82" translate="yes" xml:space="preserve">
          <source>accumulate, ufunc</source>
          <target state="translated">アキュムレート、ufunc</target>
        </trans-unit>
        <trans-unit id="cf4af5674a567955ee1b6d6ccdd05687486f3828" translate="yes" xml:space="preserve">
          <source>acknowledge report is received</source>
          <target state="translated">届けが届く</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="6ace1c5836b39cd04d5f5385b3207b598d700c15" translate="yes" xml:space="preserve">
          <source>add (in module numpy)</source>
          <target state="translated">加える</target>
        </trans-unit>
        <trans-unit id="86dd47ccbe562e2b1411af1bea7a7949de431be1" translate="yes" xml:space="preserve">
          <source>add a release note to the &lt;code&gt;doc/release/upcoming_changes/&lt;/code&gt; directory, following the instructions and format in the &lt;code&gt;doc/release/upcoming_changes/README.rst&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;doc/release/upcoming_changes/README.rst&lt;/code&gt; ファイルの指示と形式に従って、リリースノートを &lt;code&gt;doc/release/upcoming_changes/&lt;/code&gt; ディレクトリに追加します。</target>
        </trans-unit>
        <trans-unit id="96719c763dccc81364d3257cacab29af4b7d83a4" translate="yes" xml:space="preserve">
          <source>add() (in module numpy.char)</source>
          <target state="translated">add()(モジュール numpy.char内)</target>
        </trans-unit>
        <trans-unit id="f3b59bfab0854033aead66d1b6faf7f43e0ee041" translate="yes" xml:space="preserve">
          <source>add_data_dir()</source>
          <target state="translated">add_data_dir()</target>
        </trans-unit>
        <trans-unit id="a31b71499e9386602eb7e0e5f273c05c0ac5ed45" translate="yes" xml:space="preserve">
          <source>add_data_dir() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_data_dir()(numpy.distutils.misc_util.Configurationメソッド)</target>
        </trans-unit>
        <trans-unit id="9200d797d00907bd4a67510f47960da2cec4c889" translate="yes" xml:space="preserve">
          <source>add_data_files()</source>
          <target state="translated">add_data_files()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
