<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="515f47b4abb1dce9e97ea49d8204403e4611929e" translate="yes" xml:space="preserve">
          <source>Return the gradient of an N-dimensional array.</source>
          <target state="translated">N次元配列の勾配を返します。</target>
        </trans-unit>
        <trans-unit id="54965ed70981b14b23ce26ba30cb8a61bb8dbfa1" translate="yes" xml:space="preserve">
          <source>Return the identity array.</source>
          <target state="translated">ID 配列を返します。</target>
        </trans-unit>
        <trans-unit id="27e04984c1484e1e4dcf34d9dc6f11aff682b763" translate="yes" xml:space="preserve">
          <source>Return the imaginary part of the complex argument.</source>
          <target state="translated">複素数引数の虚数部分を返します。</target>
        </trans-unit>
        <trans-unit id="f32e7563dc1251e29d97c223a7b05292bf504e42" translate="yes" xml:space="preserve">
          <source>Return the indexes of the first occurrences of the maximum values along the specified axis. If axis is None, the index is for the flattened matrix.</source>
          <target state="translated">指定された軸に沿った最大値の最初の出現位置のインデックスを返します。axis が None の場合、インデックスは平坦化された行列のものとなります。</target>
        </trans-unit>
        <trans-unit id="ef1228d8108fbf8d52c529bcc94d32966a7e5b27" translate="yes" xml:space="preserve">
          <source>Return the indexes of the first occurrences of the minimum values along the specified axis. If axis is None, the index is for the flattened matrix.</source>
          <target state="translated">指定された軸に沿って最初に出現する最小値のインデックスを返します。axis が None の場合、インデックスは平坦化された行列のものとなります。</target>
        </trans-unit>
        <trans-unit id="b5d360522b4f2a96bea2ce9398f71c49e37722bf" translate="yes" xml:space="preserve">
          <source>Return the indices for the lower-triangle of an (n, m) array.</source>
          <target state="translated">(n,m)配列の下三角形のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="c1322e5a732eed85297de913acf0b27628cd9452" translate="yes" xml:space="preserve">
          <source>Return the indices for the lower-triangle of arr.</source>
          <target state="translated">arrの下三角形のインデックスを返します.</target>
        </trans-unit>
        <trans-unit id="44902a69b78de07a74336b790e1c31eddccc5838" translate="yes" xml:space="preserve">
          <source>Return the indices for the upper-triangle of an (n, m) array.</source>
          <target state="translated">(n,m)配列の上三角形のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="08d7b25641bd326be0f5a2a4cfc7452db33961b0" translate="yes" xml:space="preserve">
          <source>Return the indices for the upper-triangle of arr.</source>
          <target state="translated">arrの上三角形のインデックスを返します.</target>
        </trans-unit>
        <trans-unit id="b29dadabf708bcad650ad81ab36fa832a296c27d" translate="yes" xml:space="preserve">
          <source>Return the indices of the bins to which each value in input array belongs.</source>
          <target state="translated">入力配列の各値が属するビンのインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="57114216c9d3e42a32857164a24535225ac0a426" translate="yes" xml:space="preserve">
          <source>Return the indices of the elements that are non-zero.</source>
          <target state="translated">0以外の要素のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="e17c758bfa538562da0c345226481fc6238a17c0" translate="yes" xml:space="preserve">
          <source>Return the indices of the maximum values in the specified axis ignoring NaNs.</source>
          <target state="translated">NaNを無視して、指定した軸の最大値のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="2a20a6f54b6e3e86de467c01b7e0887a181f4546" translate="yes" xml:space="preserve">
          <source>Return the indices of the maximum values in the specified axis ignoring NaNs. For all-NaN slices &lt;code&gt;ValueError&lt;/code&gt; is raised. Warning: the results cannot be trusted if a slice contains only NaNs and -Infs.</source>
          <target state="translated">NaNを無視して、指定された軸の最大値のインデックスを返します。全NaNスライスの &lt;code&gt;ValueError&lt;/code&gt; が発生します。警告：スライスにNaNと-Infsのみが含まれている場合、結果は信頼できません。</target>
        </trans-unit>
        <trans-unit id="45e4ea1c0f2fa42d3f6e2a5a187509f3f6638f38" translate="yes" xml:space="preserve">
          <source>Return the indices of the maximum values.</source>
          <target state="translated">最大値のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="286dea54db15d8e84b11e2db5daed487563abbe3" translate="yes" xml:space="preserve">
          <source>Return the indices of the minimum values in the specified axis ignoring NaNs.</source>
          <target state="translated">NaNを無視して指定した軸の最小値のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="4cb0c04e85bf537fe60e46b11458237f129ab9ca" translate="yes" xml:space="preserve">
          <source>Return the indices of the minimum values in the specified axis ignoring NaNs. For all-NaN slices &lt;code&gt;ValueError&lt;/code&gt; is raised. Warning: the results cannot be trusted if a slice contains only NaNs and Infs.</source>
          <target state="translated">NaNを無視して、指定された軸の最小値のインデックスを返します。全NaNスライスの &lt;code&gt;ValueError&lt;/code&gt; が発生します。警告：スライスにNaNとInfsのみが含まれている場合、結果は信頼できません。</target>
        </trans-unit>
        <trans-unit id="191234538d4cd09da1e38080198d78f2b517790d" translate="yes" xml:space="preserve">
          <source>Return the indices of the minimum values.</source>
          <target state="translated">最小値のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="a8395f2b6b23337ed22750523af7576e4add042f" translate="yes" xml:space="preserve">
          <source>Return the indices of the non-zero elements of the input array.</source>
          <target state="translated">入力配列の0以外の要素のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="b018b42e7dddbc80c723a674ff56f4709807d4ff" translate="yes" xml:space="preserve">
          <source>Return the indices of the original array that give the unique values:</source>
          <target state="translated">一意な値を与える元の配列のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="4c353b46419aea81b7f823e72abae74eb21131eb" translate="yes" xml:space="preserve">
          <source>Return the indices of unmasked elements that are not zero.</source>
          <target state="translated">0ではないマスクされていない要素のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="30e853c289f0a4c50584b3abf98ba2751b3843b3" translate="yes" xml:space="preserve">
          <source>Return the indices to access (n, n) arrays, given a masking function.</source>
          <target state="translated">マスキング関数を指定して、(n,n)配列にアクセスするためのインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="07776a93c8082aece145909bfa76971f4d685e04" translate="yes" xml:space="preserve">
          <source>Return the indices to access the main diagonal of an array.</source>
          <target state="translated">配列の主対角線にアクセスするためのインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="3f740ddbb458c4878ea93f81c268f2934b93fc0e" translate="yes" xml:space="preserve">
          <source>Return the indices to access the main diagonal of an n-dimensional array.</source>
          <target state="translated">n次元配列の主対角線にアクセスするためのインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="2648e5d3aaac410fe82ad287374403b4dc999e46" translate="yes" xml:space="preserve">
          <source>Return the internal state of the masked array, for pickling purposes.</source>
          <target state="translated">マスクされた配列の内部状態を返します。</target>
        </trans-unit>
        <trans-unit id="f8aec3a9964d351d08e5a7f9d6708ffcf5e1fb12" translate="yes" xml:space="preserve">
          <source>Return the item described by i, as a masked array.</source>
          <target state="translated">i で記述された項目をマスクされた配列として返します。</target>
        </trans-unit>
        <trans-unit id="04156679d18e2b0323f8d67cbef4542e3e2f0bde" translate="yes" xml:space="preserve">
          <source>Return the itemsize for the elements of this array.</source>
          <target state="translated">この配列の要素のアイテムサイズを返します。</target>
        </trans-unit>
        <trans-unit id="9c7c395532b726e5918581b8d18b88f82606a53d" translate="yes" xml:space="preserve">
          <source>Return the kind of scalar represented by &lt;em&gt;typenum&lt;/em&gt; and the array in &lt;em&gt;*arr&lt;/em&gt; (if &lt;em&gt;arr&lt;/em&gt; is not &lt;code&gt;NULL&lt;/code&gt; ). The array is assumed to be rank-0 and only used if &lt;em&gt;typenum&lt;/em&gt; represents a signed integer. If &lt;em&gt;arr&lt;/em&gt; is not &lt;code&gt;NULL&lt;/code&gt; and the first element is negative then &lt;a href=&quot;#c.NPY_INTNEG_SCALAR&quot;&gt;&lt;code&gt;NPY_INTNEG_SCALAR&lt;/code&gt;&lt;/a&gt; is returned, otherwise &lt;a href=&quot;#c.NPY_INTPOS_SCALAR&quot;&gt;&lt;code&gt;NPY_INTPOS_SCALAR&lt;/code&gt;&lt;/a&gt; is returned. The possible return values are the enumerated values in &lt;a href=&quot;#c.NPY_SCALARKIND&quot;&gt;&lt;code&gt;NPY_SCALARKIND&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;typenum&lt;/em&gt;で表されるスカラーの種類と&lt;em&gt;* arr&lt;/em&gt;の配列を &lt;code&gt;NULL&lt;/code&gt; （&lt;em&gt;arr&lt;/em&gt;がNULLでない場合）。配列はランク0と&lt;em&gt;見なされ&lt;/em&gt;、&lt;em&gt;typenum&lt;/em&gt;が符号付き整数を表す場合にのみ使用されます。場合&lt;em&gt;ARRは&lt;/em&gt;ない &lt;code&gt;NULL&lt;/code&gt; と最初の要素がその後、負の&lt;a href=&quot;#c.NPY_INTNEG_SCALAR&quot;&gt; &lt;code&gt;NPY_INTNEG_SCALAR&lt;/code&gt; が&lt;/a&gt;返され、そうでない場合&lt;a href=&quot;#c.NPY_INTPOS_SCALAR&quot;&gt; &lt;code&gt;NPY_INTPOS_SCALAR&lt;/code&gt; が&lt;/a&gt;返されます。可能な戻り値は、&lt;a href=&quot;#c.NPY_SCALARKIND&quot;&gt; &lt;code&gt;NPY_SCALARKIND&lt;/code&gt; &lt;/a&gt;の列挙値です。</target>
        </trans-unit>
        <trans-unit id="6c2a699f4de6609dceba5d0d4948f589e35b0463" translate="yes" xml:space="preserve">
          <source>Return the kind of scalar represented by &lt;em&gt;typenum&lt;/em&gt; and the array in &lt;em&gt;*arr&lt;/em&gt; (if &lt;em&gt;arr&lt;/em&gt; is not &lt;code&gt;NULL&lt;/code&gt; ). The array is assumed to be rank-0 and only used if &lt;em&gt;typenum&lt;/em&gt; represents a signed integer. If &lt;em&gt;arr&lt;/em&gt; is not &lt;code&gt;NULL&lt;/code&gt; and the first element is negative then &lt;code&gt;NPY_INTNEG_SCALAR&lt;/code&gt; is returned, otherwise &lt;code&gt;NPY_INTPOS_SCALAR&lt;/code&gt; is returned. The possible return values are &lt;code&gt;NPY_{kind}_SCALAR&lt;/code&gt; where &lt;code&gt;{kind}&lt;/code&gt; can be &lt;strong&gt;INTPOS&lt;/strong&gt;, &lt;strong&gt;INTNEG&lt;/strong&gt;, &lt;strong&gt;FLOAT&lt;/strong&gt;, &lt;strong&gt;COMPLEX&lt;/strong&gt;, &lt;strong&gt;BOOL&lt;/strong&gt;, or &lt;strong&gt;OBJECT&lt;/strong&gt;. &lt;code&gt;NPY_NOSCALAR&lt;/code&gt; is also an enumerated value &lt;a href=&quot;#c.NPY_SCALARKIND&quot;&gt;&lt;code&gt;NPY_SCALARKIND&lt;/code&gt;&lt;/a&gt; variables can take on.</source>
          <target state="translated">&lt;em&gt;typenum&lt;/em&gt;で表されるスカラーの種類と&lt;em&gt;* arr&lt;/em&gt;の配列を &lt;code&gt;NULL&lt;/code&gt; （&lt;em&gt;arr&lt;/em&gt;がNULLでない場合）。配列はランク0と&lt;em&gt;見なされ&lt;/em&gt;、&lt;em&gt;typenum&lt;/em&gt;が符号付き整数を表す場合にのみ使用されます。場合&lt;em&gt;ARRは&lt;/em&gt;ない &lt;code&gt;NULL&lt;/code&gt; と最初の要素がその後、負の &lt;code&gt;NPY_INTNEG_SCALAR&lt;/code&gt; が返され、そうでない場合 &lt;code&gt;NPY_INTPOS_SCALAR&lt;/code&gt; が返されます。可能な戻り値は &lt;code&gt;NPY_{kind}_SCALAR&lt;/code&gt; で、 &lt;code&gt;{kind}&lt;/code&gt; は&lt;strong&gt;INTPOS&lt;/strong&gt;、&lt;strong&gt;INTNEG&lt;/strong&gt;、&lt;strong&gt;FLOAT&lt;/strong&gt;、&lt;strong&gt;COMPLEX&lt;/strong&gt;、&lt;strong&gt;BOOL&lt;/strong&gt;、または&lt;strong&gt;OBJECT&lt;/strong&gt;。 &lt;code&gt;NPY_NOSCALAR&lt;/code&gt; は、&lt;a href=&quot;#c.NPY_SCALARKIND&quot;&gt; &lt;code&gt;NPY_SCALARKIND&lt;/code&gt; &lt;/a&gt;変数が取ることができる列挙値でもあります。</target>
        </trans-unit>
        <trans-unit id="789567c68dcbd08ff14776ed4411a09c33e2a312" translate="yes" xml:space="preserve">
          <source>Return the largest integer smaller or equal to the division of the inputs.</source>
          <target state="translated">入力の除算以下の最大の整数を返します。</target>
        </trans-unit>
        <trans-unit id="c517411957215d985fac612bc1905d101f0cfaab" translate="yes" xml:space="preserve">
          <source>Return the largest integer smaller or equal to the division of the inputs. It is equivalent to the Python &lt;code&gt;//&lt;/code&gt; operator and pairs with the Python &lt;code&gt;%&lt;/code&gt; (&lt;a href=&quot;numpy.remainder#numpy.remainder&quot;&gt;&lt;code&gt;remainder&lt;/code&gt;&lt;/a&gt;), function so that &lt;code&gt;a = a % b + b * (a // b)&lt;/code&gt; up to roundoff.</source>
          <target state="translated">入力の除算以下の最大の整数を返します。これは、Python &lt;code&gt;//&lt;/code&gt; 演算子と同等であり、Python &lt;code&gt;%&lt;/code&gt; （&lt;a href=&quot;numpy.remainder#numpy.remainder&quot;&gt; &lt;code&gt;remainder&lt;/code&gt; &lt;/a&gt;）関数とペアになるため、 &lt;code&gt;a = a % b + b * (a // b)&lt;/code&gt; が丸められます。</target>
        </trans-unit>
        <trans-unit id="528461915ba0f1c1489223d3271632c604ed396c" translate="yes" xml:space="preserve">
          <source>Return the least-squares solution to a linear matrix equation.</source>
          <target state="translated">一次行列方程式の最小二乗解を返します。</target>
        </trans-unit>
        <trans-unit id="b7505ab931d94494348d1865877183d42e29298d" translate="yes" xml:space="preserve">
          <source>Return the low-level casting function to cast from the given descriptor to the builtin type number. If no casting function exists return &lt;code&gt;NULL&lt;/code&gt; and set an error. Using this function instead of direct access to &lt;em&gt;from&lt;/em&gt; -&amp;gt;f-&amp;gt;cast will allow support of any user-defined casting functions added to a descriptors casting dictionary.</source>
          <target state="translated">指定された記述子から組み込み型番号にキャストする低レベルのキャスト関数を返します。キャスト関数が存在しない場合は、 &lt;code&gt;NULL&lt;/code&gt; を返し、エラーを設定します。代わりに直接アクセスのこの機能を使用して&lt;em&gt;から&lt;/em&gt; - &amp;gt; F-&amp;gt;キャストは、辞書をキャスト記述子に追加されたユーザー定義のキャスト関数のサポートを可能にします。</target>
        </trans-unit>
        <trans-unit id="05b8aee9c2e9a85e6d1b50a6c864af491ed5470a" translate="yes" xml:space="preserve">
          <source>Return the magic string for the given file format version.</source>
          <target state="translated">与えられたファイルフォーマットバージョンのマジックストリングを返します。</target>
        </trans-unit>
        <trans-unit id="45b9fb8d90e52afdcdeab93b462fbf6e6a689ebb" translate="yes" xml:space="preserve">
          <source>Return the mapping parameters.</source>
          <target state="translated">マッピングパラメータを返します。</target>
        </trans-unit>
        <trans-unit id="dff3942feb9dba326e808546dfb88526a0e9d175" translate="yes" xml:space="preserve">
          <source>Return the mask of &lt;code&gt;a&lt;/code&gt; as an ndarray if &lt;code&gt;a&lt;/code&gt; is a &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt; and the mask is not &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt;, else return &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt;. To guarantee a full array of booleans of the same shape as a, use &lt;a href=&quot;numpy.ma.getmaskarray#numpy.ma.getmaskarray&quot;&gt;&lt;code&gt;getmaskarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">マスクを返した場合ndarrayようです&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt;とマスクがない&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;、それ以外の戻り&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;。と同じ形状のブール値の完全な配列を保証するには、&lt;a href=&quot;numpy.ma.getmaskarray#numpy.ma.getmaskarray&quot;&gt; &lt;code&gt;getmaskarray&lt;/code&gt; を&lt;/a&gt;使用します。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b73278202e52f0b0978a45563c250eb1da46dd3" translate="yes" xml:space="preserve">
          <source>Return the mask of &lt;code&gt;arr&lt;/code&gt; as an ndarray if &lt;code&gt;arr&lt;/code&gt; is a &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt; and the mask is not &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt;, else return a full boolean array of False of the same shape as &lt;code&gt;arr&lt;/code&gt;.</source>
          <target state="translated">マスクを返し &lt;code&gt;arr&lt;/code&gt; 場合ndarrayとして &lt;code&gt;arr&lt;/code&gt; ある&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt;とマスクがない&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;と同じ形状の虚偽の完全なブール配列を返す他に、 &lt;code&gt;arr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65ffa512217eecf2cc4d2d9e1aa59071a56f7fb4" translate="yes" xml:space="preserve">
          <source>Return the mask of a masked array, or full array of False.</source>
          <target state="translated">マスクされた配列のマスク、または False の完全な配列を返します。</target>
        </trans-unit>
        <trans-unit id="1f7ab0f436b4820908a4b89bd8836b70b97a073a" translate="yes" xml:space="preserve">
          <source>Return the mask of a masked array, or full boolean array of False.</source>
          <target state="translated">マスクされた配列のマスク、またはFalseの完全なブール値の配列を返します。</target>
        </trans-unit>
        <trans-unit id="241cb3cf7384faa4c4ba57264752a9aa6b9e8f43" translate="yes" xml:space="preserve">
          <source>Return the mask of a masked array, or nomask.</source>
          <target state="translated">マスクされた配列のマスク、または nomask を返します。</target>
        </trans-unit>
        <trans-unit id="0198943da3b2ac1cb3042b4991d279273cca5974" translate="yes" xml:space="preserve">
          <source>Return the matrix as a (possibly nested) list.</source>
          <target state="translated">行列を,(入れ子になっている可能性のある)リストとして返します.</target>
        </trans-unit>
        <trans-unit id="b75e38b4a3b223b45cf14c221c144c99d0ffaeed" translate="yes" xml:space="preserve">
          <source>Return the matrix flattened to shape &lt;code&gt;(1, N)&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is the number of elements in the original matrix. A copy is made only if necessary.</source>
          <target state="translated">形状 &lt;code&gt;(1, N)&lt;/code&gt; に平坦化された行列を返します。ここで、 &lt;code&gt;N&lt;/code&gt; は元の行列の要素数です。コピーは必要な場合にのみ作成されます。</target>
        </trans-unit>
        <trans-unit id="c4ac3cfce9665c3cd02b10ff7990e423188fc733" translate="yes" xml:space="preserve">
          <source>Return the maximum along a given axis.</source>
          <target state="translated">指定された軸に沿った最大値を返します。</target>
        </trans-unit>
        <trans-unit id="f0a0cfedf661c554e6b13ad2a3f76cce3aa97b9e" translate="yes" xml:space="preserve">
          <source>Return the maximum of an array or maximum along an axis, ignoring any NaNs.</source>
          <target state="translated">NaNを無視して、配列の最大値または軸に沿った最大値を返します。</target>
        </trans-unit>
        <trans-unit id="6c64eaf9042035c98bae94065193fe6421fc65c1" translate="yes" xml:space="preserve">
          <source>Return the maximum of an array or maximum along an axis, ignoring any NaNs. When all-NaN slices are encountered a &lt;code&gt;RuntimeWarning&lt;/code&gt; is raised and NaN is returned for that slice.</source>
          <target state="translated">NaNを無視して、配列の最大値または軸に沿った最大値を返します。すべてのNaNスライスが検出されると、 &lt;code&gt;RuntimeWarning&lt;/code&gt; が発生し、そのスライスに対してNaNが返されます。</target>
        </trans-unit>
        <trans-unit id="6fad07ed00988f48334295989ff3e32f4254aee0" translate="yes" xml:space="preserve">
          <source>Return the maximum of an array or maximum along an axis.</source>
          <target state="translated">配列の最大値、または軸に沿った最大値を返します。</target>
        </trans-unit>
        <trans-unit id="851ea9260a5c21c8b727a2f6b44099b7b71e7056" translate="yes" xml:space="preserve">
          <source>Return the maximum value along an axis.</source>
          <target state="translated">軸に沿った最大値を返します。</target>
        </trans-unit>
        <trans-unit id="0d6be0f5a172d08a7c0e7f3e97010d8909b42d03" translate="yes" xml:space="preserve">
          <source>Return the maximum value that can be represented by the dtype of an object.</source>
          <target state="translated">オブジェクトのdtypeで表現可能な最大値を返します。</target>
        </trans-unit>
        <trans-unit id="d4844e2555ec3f77d41a2101fd364ed4802fa533" translate="yes" xml:space="preserve">
          <source>Return the minimum along a given axis.</source>
          <target state="translated">指定された軸に沿った最小値を返します。</target>
        </trans-unit>
        <trans-unit id="0cf1f8e7f200d22e79de4a554dee2f449cbc594f" translate="yes" xml:space="preserve">
          <source>Return the minimum of an array or minimum along an axis.</source>
          <target state="translated">配列の最小値、または軸に沿った最小値を返します。</target>
        </trans-unit>
        <trans-unit id="bb55176d6f2b7693402f506634ef43a5e1cf03e9" translate="yes" xml:space="preserve">
          <source>Return the minimum value along an axis.</source>
          <target state="translated">軸に沿った最小値を返します。</target>
        </trans-unit>
        <trans-unit id="b621e1221b1b7a270f0bbc888c5ba071f9536129" translate="yes" xml:space="preserve">
          <source>Return the minimum value that can be represented by the dtype of an object.</source>
          <target state="translated">オブジェクトのdtypeで表現できる最小値を返します。</target>
        </trans-unit>
        <trans-unit id="f8d656a0fd986950d5ce85bd0732475dd0554e11" translate="yes" xml:space="preserve">
          <source>Return the name of the object files for the given source files.</source>
          <target state="translated">与えられたソースファイルのオブジェクトファイル名を返します。</target>
        </trans-unit>
        <trans-unit id="1886a1a2095a1e33aaa9aebfe4fcb46744940ce5" translate="yes" xml:space="preserve">
          <source>Return the natural logarithm of one plus the input array, element-wise.</source>
          <target state="translated">1 の自然対数に入力配列を足したものを要素ごとに返します。</target>
        </trans-unit>
        <trans-unit id="4f96c6a38d1c3f4e2d6d5ff607c908ce46c30ea7" translate="yes" xml:space="preserve">
          <source>Return the next floating-point value after x1 towards x2, element-wise.</source>
          <target state="translated">x1の次の浮動小数点値をx2に向かって要素ごとに返します。</target>
        </trans-unit>
        <trans-unit id="5cd9047e81a2cc3ba4d8daca4480b9f6b8dd9ac8" translate="yes" xml:space="preserve">
          <source>Return the non-negative square-root of an array, element-wise.</source>
          <target state="translated">配列の非負の平方根を要素ごとに返します。</target>
        </trans-unit>
        <trans-unit id="dee32837188ce040da06492863db27352b060204" translate="yes" xml:space="preserve">
          <source>Return the normalized sinc function.</source>
          <target state="translated">正規化されたsinc関数を返す。</target>
        </trans-unit>
        <trans-unit id="45827f2b29e4e9a1d268845f6d8bb0e2a53735eb" translate="yes" xml:space="preserve">
          <source>Return the number of elements along a given axis.</source>
          <target state="translated">指定された軸に沿った要素の数を返します。</target>
        </trans-unit>
        <trans-unit id="407a2ca0094d9ee1b81e339bb0d79c3fcf85fc89" translate="yes" xml:space="preserve">
          <source>Return the numeric string left-filled with zeros</source>
          <target state="translated">ゼロで埋め尽くされた数値文字列を返します。</target>
        </trans-unit>
        <trans-unit id="9544acb9157f395e427dd8e0d80feef13e818eae" translate="yes" xml:space="preserve">
          <source>Return the numeric string left-filled with zeros in a string of length &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">長さ &lt;code&gt;width&lt;/code&gt; の文字列でゼロで埋められた数値文字列を返します。</target>
        </trans-unit>
        <trans-unit id="ad6a849467932edbb809fc9db124421d14bf2efd" translate="yes" xml:space="preserve">
          <source>Return the parameters of the linear map &lt;code&gt;offset + scale*x&lt;/code&gt; that maps &lt;code&gt;old&lt;/code&gt; to &lt;code&gt;new&lt;/code&gt; such that &lt;code&gt;old[i] -&amp;gt; new[i]&lt;/code&gt;, &lt;code&gt;i = 0, 1&lt;/code&gt;.</source>
          <target state="translated">リニアマップのリターンパラメータ &lt;code&gt;offset + scale*x&lt;/code&gt; マップする &lt;code&gt;old&lt;/code&gt; と &lt;code&gt;new&lt;/code&gt; ように &lt;code&gt;old[i] -&amp;gt; new[i]&lt;/code&gt; 、 &lt;code&gt;i = 0, 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17c1365ff2854ce55ab4f1f5872cdf1b41dbce0d" translate="yes" xml:space="preserve">
          <source>Return the product of array elements over a given axis treating Not a Numbers (NaNs) as ones.</source>
          <target state="translated">指定された軸上の配列要素の積を返します。</target>
        </trans-unit>
        <trans-unit id="9562cc8c04f37c48df649c5316be9c38535c7c22" translate="yes" xml:space="preserve">
          <source>Return the product of array elements over a given axis.</source>
          <target state="translated">指定された軸上の配列要素の積を返します。</target>
        </trans-unit>
        <trans-unit id="066647f3f555c31df8e132b65d8e8b6c769a5401" translate="yes" xml:space="preserve">
          <source>Return the product of the array elements over the given axis</source>
          <target state="translated">指定された軸上の配列要素の積を返します.</target>
        </trans-unit>
        <trans-unit id="ae507ac3212bace881909d4291099e9b4046c87c" translate="yes" xml:space="preserve">
          <source>Return the product of the array elements over the given axis.</source>
          <target state="translated">指定された軸上の配列要素の積を返します。</target>
        </trans-unit>
        <trans-unit id="50aba3722f13757177ea008511d3ee09acd52904" translate="yes" xml:space="preserve">
          <source>Return the real part of the complex argument.</source>
          <target state="translated">複素数引数の実数部分を返します。</target>
        </trans-unit>
        <trans-unit id="9f21463a9997e5c8887cb6a085d642583ab5f63e" translate="yes" xml:space="preserve">
          <source>Return the reciprocal of the argument, element-wise.</source>
          <target state="translated">引数の逆数を要素ごとに返します。</target>
        </trans-unit>
        <trans-unit id="3b2bb28ab4eb150d26fcb11a8d3977b832d53e55" translate="yes" xml:space="preserve">
          <source>Return the requested number of words for PRNG seeding.</source>
          <target state="translated">PRNG シードのために要求された語数を返します。</target>
        </trans-unit>
        <trans-unit id="919518dfceb075aabef35d7360930e2226924a20" translate="yes" xml:space="preserve">
          <source>Return the roots (a.k.a. &amp;ldquo;zeros&amp;rdquo;) of the polynomial</source>
          <target state="translated">多項式の根（別名「ゼロ」）を返す</target>
        </trans-unit>
        <trans-unit id="a470e7003e669496edea1faf7c2d56ae8dffe15f" translate="yes" xml:space="preserve">
          <source>Return the roots of a polynomial with coefficients given in p.</source>
          <target state="translated">pで与えられた係数を持つ多項式の根を返します。</target>
        </trans-unit>
        <trans-unit id="f4b88d6413411ad58520ea8ce29927c55bdae3f1" translate="yes" xml:space="preserve">
          <source>Return the roots of a polynomial.</source>
          <target state="translated">多項式の根を返します。</target>
        </trans-unit>
        <trans-unit id="4a03d4dd8ba5afdabef0640c41b07be54872cd19" translate="yes" xml:space="preserve">
          <source>Return the roots of the series polynomial.</source>
          <target state="translated">直列多項式の根を返します。</target>
        </trans-unit>
        <trans-unit id="d3e97b43cd32c17446d70eb26c0286035be48eb1" translate="yes" xml:space="preserve">
          <source>Return the scalar dtype or NumPy equivalent of Python type of an object.</source>
          <target state="translated">オブジェクトのスカラーdtypeまたはPython型のNumPy等価値を返します。</target>
        </trans-unit>
        <trans-unit id="0a73158c5b52af48040bdb4fee91974f5540fc8d" translate="yes" xml:space="preserve">
          <source>Return the scalar type of highest precision of the same kind as the input.</source>
          <target state="translated">入力と同じ種類の最高精度のスカラー型を返します。</target>
        </trans-unit>
        <trans-unit id="cb3c5f80b5d93fb6b55e59c93265b18fd4268c77" translate="yes" xml:space="preserve">
          <source>Return the scaled companion matrix of c.</source>
          <target state="translated">c のスケーリングされたコンパニオン行列を返します.</target>
        </trans-unit>
        <trans-unit id="99bcd2523cffabebe7c604503f7c790947eb2094" translate="yes" xml:space="preserve">
          <source>Return the shape in the &lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt;の形状を返す&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63fe0040824229eb5bbff9e6f6994f8f512d5882" translate="yes" xml:space="preserve">
          <source>Return the shape of an array.</source>
          <target state="translated">配列の形状を返します。</target>
        </trans-unit>
        <trans-unit id="e37b8e166f6b9e20972a03eec6e6411b0f7ce3b1" translate="yes" xml:space="preserve">
          <source>Return the shape tuple as an array of some other c-types type. For example: &lt;code&gt;self.shape_as(ctypes.c_short)&lt;/code&gt;.</source>
          <target state="translated">形状タプルを他のCタイプタイプの配列として返します。例： &lt;code&gt;self.shape_as(ctypes.c_short)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="baaab661a54b51d6a154d38d3a1c30a2d216053d" translate="yes" xml:space="preserve">
          <source>Return the sinc function.</source>
          <target state="translated">sinc関数を返します。</target>
        </trans-unit>
        <trans-unit id="c459ccc30062a19eb1e782165048d90a682d1c59" translate="yes" xml:space="preserve">
          <source>Return the size of the buffer used in ufuncs.</source>
          <target state="translated">ufuncsで使用するバッファのサイズを返します。</target>
        </trans-unit>
        <trans-unit id="66b2664823259b33b12cf47409b310d349cab197" translate="yes" xml:space="preserve">
          <source>Return the sorted, unique values that are in both of the input arrays.</source>
          <target state="translated">入力配列の両方にある、ソートされた一意の値を返します。</target>
        </trans-unit>
        <trans-unit id="d48a3dd22ad0eedf4c3e43152db4039e70f6f623" translate="yes" xml:space="preserve">
          <source>Return the sorted, unique values that are in only one (not both) of the input arrays.</source>
          <target state="translated">入力配列の一方のみにある(両方ではない)ソートされた一意の値を返します。</target>
        </trans-unit>
        <trans-unit id="b211bbd5ccdf8b8125d11c8a542bcd2849733a96" translate="yes" xml:space="preserve">
          <source>Return the standard deviation of the array elements along the given axis.</source>
          <target state="translated">指定された軸に沿った配列要素の標準偏差を返します.</target>
        </trans-unit>
        <trans-unit id="292e6e2cd5f2e85caa1a63e76e83e33760a06771" translate="yes" xml:space="preserve">
          <source>Return the stride in the &lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt;のストライドを返します&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8829f8c9f0d1186a68b848fd0d4166204ee8ce93" translate="yes" xml:space="preserve">
          <source>Return the strides tuple as an array of some other c-types type. For example: &lt;code&gt;self.strides_as(ctypes.c_longlong)&lt;/code&gt;.</source>
          <target state="translated">ストライドタプルを他のCタイプタイプの配列として返します。例： &lt;code&gt;self.strides_as(ctypes.c_longlong)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="741a2da88e9a6a4388a1806db634c3c49732d30a" translate="yes" xml:space="preserve">
          <source>Return the string representation of a scalar dtype.</source>
          <target state="translated">スカラdtypeの文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="32f8ea013e9775d66642865ae77d3cc344db4829" translate="yes" xml:space="preserve">
          <source>Return the string representation of an array.</source>
          <target state="translated">配列の文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="a263364698df4237186fc32cc479614a10bc1c81" translate="yes" xml:space="preserve">
          <source>Return the sum along diagonals of the array.</source>
          <target state="translated">配列の対角線に沿った和を返します。</target>
        </trans-unit>
        <trans-unit id="504fc3d79cf94aad87b10aa92ba8d6b1ce2cf5fa" translate="yes" xml:space="preserve">
          <source>Return the sum of array elements over a given axis treating Not a Numbers (NaNs) as zero.</source>
          <target state="translated">Not a Numbers (NaNs)をゼロとして扱い、指定された軸上の配列要素の合計を返します。</target>
        </trans-unit>
        <trans-unit id="c1ee1b9bb46d4f9f9b79d3a5ce24a42b62ed6ebc" translate="yes" xml:space="preserve">
          <source>Return the sum of the array elements over the given axis.</source>
          <target state="translated">指定された軸上の配列要素の合計を返します。</target>
        </trans-unit>
        <trans-unit id="b19b066cb142b245e290decb6be06e605f0bf088" translate="yes" xml:space="preserve">
          <source>Return the truncated value of the input, element-wise.</source>
          <target state="translated">入力を要素ごとに切り捨てた値を返します。</target>
        </trans-unit>
        <trans-unit id="2599b6cc3a4c38afe543a65ffcabe345fb26585d" translate="yes" xml:space="preserve">
          <source>Return the truth value of (x1 &amp;gt; x2) element-wise.</source>
          <target state="translated">（x1&amp;gt; x2）の真理値を要素ごとに返します。</target>
        </trans-unit>
        <trans-unit id="7752788b070df597322f38ebb4dc9213f3c683fd" translate="yes" xml:space="preserve">
          <source>Return the truth value of (x1 &amp;gt;= x2) element-wise.</source>
          <target state="translated">（x1&amp;gt; = x2）の真理値を要素ごとに返します。</target>
        </trans-unit>
        <trans-unit id="eb4fbaf3562e8cca96ecf9eebd0e2bd0cecc0427" translate="yes" xml:space="preserve">
          <source>Return the truth value of (x1 &amp;lt; x2) element-wise.</source>
          <target state="translated">（x1 &amp;lt;x2）の真理値を要素ごとに返します。</target>
        </trans-unit>
        <trans-unit id="58e15c2bf6c8b494c895f54890efb2d25831802d" translate="yes" xml:space="preserve">
          <source>Return the truth value of (x1 &amp;lt;= x2) element-wise.</source>
          <target state="translated">（x1 &amp;lt;= x2）の真理値を要素ごとに返します。</target>
        </trans-unit>
        <trans-unit id="4856478cbd72d0f4f1146167eba942296e3b8143" translate="yes" xml:space="preserve">
          <source>Return the truth value of (x1 =&amp;lt; x2) element-wise.</source>
          <target state="translated">（x1 = &amp;lt;x2）の真理値を要素ごとに返します。</target>
        </trans-unit>
        <trans-unit id="11ac86217f7990ab6baeea71048d9c94fc9a1d88" translate="yes" xml:space="preserve">
          <source>Return the unique rows of a 2D array</source>
          <target state="translated">2次元配列の一意の行を返します.</target>
        </trans-unit>
        <trans-unit id="c469ebfe7cb33b937f591d4fa3a929ff9a01dfd2" translate="yes" xml:space="preserve">
          <source>Return the unique values in &lt;code&gt;ar1&lt;/code&gt; that are not in &lt;code&gt;ar2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ar2&lt;/code&gt; にない一意の値を &lt;code&gt;ar1&lt;/code&gt; に返します。</target>
        </trans-unit>
        <trans-unit id="2998311b7b1c99551e770cbe5d2291b619d2a6ce" translate="yes" xml:space="preserve">
          <source>Return the unique, sorted array of values that are in either of the two input arrays.</source>
          <target state="translated">2つの入力配列のいずれかにある値の、一意でソートされた配列を返します。</target>
        </trans-unit>
        <trans-unit id="1b05d0baa4de012c3a57f18d2544332f4e706037" translate="yes" xml:space="preserve">
          <source>Return the weighted average of array over the given axis.</source>
          <target state="translated">指定された軸に対する配列の加重平均を返します。</target>
        </trans-unit>
        <trans-unit id="8d25e4b98f01704ffd521078e96e2665bea656da" translate="yes" xml:space="preserve">
          <source>Return true if all the given flags are set for the data-type object.</source>
          <target state="translated">与えられたすべてのフラグがデータ型オブジェクトに設定されている場合は真を返します。</target>
        </trans-unit>
        <trans-unit id="5430635a01a4925fc9263c96d90c0babbb45a914" translate="yes" xml:space="preserve">
          <source>Return true if directory is local directory.</source>
          <target state="translated">ディレクトリがローカルディレクトリの場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="3ce0b8f6b4991f5effe35f466f710b21164c8929" translate="yes" xml:space="preserve">
          <source>Return true when using mingw32 environment.</source>
          <target state="translated">mingw32環境を使用している場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="9aebabfeb629269cee4178e22c4a40b3331dc0d0" translate="yes" xml:space="preserve">
          <source>Return type: &lt;code&gt;PyArrayObject*&lt;/code&gt;</source>
          <target state="translated">戻り値の型： &lt;code&gt;PyArrayObject*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58c4caf11ea89b10e3e07372602e19b9d3f5d7b2" translate="yes" xml:space="preserve">
          <source>Return type: &lt;code&gt;const char*&lt;/code&gt;</source>
          <target state="translated">戻り値の型： &lt;code&gt;const char*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccd2aef4e4644db8d3572d2b60b5474addd70554" translate="yes" xml:space="preserve">
          <source>Return type: &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">戻り値の型： &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4359385fde24967ca356ab6b8c59a0bf57309beb" translate="yes" xml:space="preserve">
          <source>Return value of &lt;code&gt;iternext&lt;/code&gt; function pointer</source>
          <target state="translated">&lt;code&gt;iternext&lt;/code&gt; 関数ポインターの戻り値</target>
        </trans-unit>
        <trans-unit id="af845a82cc2614607d54a7161ad36a9bc37ba532" translate="yes" xml:space="preserve">
          <source>Return value%self.</source>
          <target state="translated">値%selfを返します。</target>
        </trans-unit>
        <trans-unit id="31dfafa17646a229170f1ade518e458663718971" translate="yes" xml:space="preserve">
          <source>Return value&amp;amp;self.</source>
          <target state="translated">戻り値と自己。</target>
        </trans-unit>
        <trans-unit id="d90daf8d5aa851317dd3679efcafdf465a0633b6" translate="yes" xml:space="preserve">
          <source>Return value&amp;gt;&amp;gt;self.</source>
          <target state="translated">戻り値&amp;gt;&amp;gt;自己。</target>
        </trans-unit>
        <trans-unit id="e1ba43664eef558139c9b1acfa23030565253845" translate="yes" xml:space="preserve">
          <source>Return value&amp;lt;&amp;lt;self.</source>
          <target state="translated">戻り値&amp;lt;&amp;lt;自己。</target>
        </trans-unit>
        <trans-unit id="7c5902a10e0a47ff68bb91e658fc910d52a6c8ad" translate="yes" xml:space="preserve">
          <source>Return value^self.</source>
          <target state="translated">値^selfを返します。</target>
        </trans-unit>
        <trans-unit id="a6f98dcf7fb0e963db3dbe8a24f301986499e81e" translate="yes" xml:space="preserve">
          <source>Return value|self.</source>
          <target state="translated">戻り値|self.</target>
        </trans-unit>
        <trans-unit id="c94d9d62ccd04b6089fc9a5b8ebc6df23d66c48e" translate="yes" xml:space="preserve">
          <source>Return x to the power p, (x**p).</source>
          <target state="translated">xをpの累乗に戻す、(x**p)。</target>
        </trans-unit>
        <trans-unit id="c62839b2e419eef7cee01f90ad40701ed5235ed3" translate="yes" xml:space="preserve">
          <source>Return x, y values at equally spaced points in domain.</source>
          <target state="translated">ドメイン内の等間隔の点でx,yの値を返します。</target>
        </trans-unit>
        <trans-unit id="9d2d96565dc06a866465216373028dc31bfc11ee" translate="yes" xml:space="preserve">
          <source>Return:</source>
          <target state="translated">Return:</target>
        </trans-unit>
        <trans-unit id="03e7c173de43cc7d4a2d20753b6d48002de600f4" translate="yes" xml:space="preserve">
          <source>Returned array or scalar: &lt;code&gt;y = +x&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">返される配列またはスカラー： &lt;code&gt;y = +x&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="16e872913f7fb85827ecd897f9a8c7b8381fbcd6" translate="yes" xml:space="preserve">
          <source>Returned array or scalar: &lt;code&gt;y = -x&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">返される配列またはスカラー： &lt;code&gt;y = -x&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="364281f9080178b7af85e558e099c5ed42bbaef3" translate="yes" xml:space="preserve">
          <source>Returning to our &lt;code&gt;big_end_arr&lt;/code&gt; - in this case our underlying data is big-endian (data endianness) and we&amp;rsquo;ve set the dtype to match (the dtype is also big-endian). However, sometimes you need to flip these around.</source>
          <target state="translated">&lt;code&gt;big_end_arr&lt;/code&gt; に戻ります-この場合、基になるデータはビッグエンディアン（データエンディアン）であり、dtypeを一致するように設定しました（dtypeもビッグエンディアンです）。ただし、これらを裏返す必要がある場合もあります。</target>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="967676e6b10999300a584227863a4ba1b08da2c2" translate="yes" xml:space="preserve">
          <source>Returns &amp;lsquo;None&amp;rsquo; on success.</source>
          <target state="translated">成功した場合は「なし」を返します。</target>
        </trans-unit>
        <trans-unit id="6ef550a083a055e3895f6cf01cc83cd5990cce1b" translate="yes" xml:space="preserve">
          <source>Returns &amp;lsquo;None&amp;rsquo;.</source>
          <target state="translated">'None'を返します。</target>
        </trans-unit>
        <trans-unit id="02e55f850228e3cf85705b30b246127c963cc1f3" translate="yes" xml:space="preserve">
          <source>Returns (&lt;code&gt;mantissa&lt;/code&gt;, &lt;code&gt;exponent&lt;/code&gt;), where &lt;code&gt;x = mantissa * 2**exponent`&lt;/code&gt;. The mantissa is lies in the open interval(-1, 1), while the twos exponent is a signed integer.</source>
          <target state="translated">（ &lt;code&gt;mantissa&lt;/code&gt; 、 &lt;code&gt;exponent&lt;/code&gt; ）を返します。ここで、 &lt;code&gt;x = mantissa * 2**exponent`&lt;/code&gt; です。仮数は開いた間隔（-1、1）にありますが、2の指数は符号付き整数です。</target>
        </trans-unit>
        <trans-unit id="26cbce73ac835ade8c7506537810d6d87510af85" translate="yes" xml:space="preserve">
          <source>Returns 0 for success, -1 for failure.</source>
          <target state="translated">成功の場合は 0、失敗の場合は -1 を返します。</target>
        </trans-unit>
        <trans-unit id="115737b79c1838ec68c9067bcc9e58a706c69cf2" translate="yes" xml:space="preserve">
          <source>Returns 0 if &lt;em&gt;obj&lt;/em&gt; is not a sub-class of ndarray. Otherwise, returns the total number of elements in the array. Safer version of &lt;a href=&quot;#c.PyArray_SIZE&quot;&gt;&lt;code&gt;PyArray_SIZE&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;obj&lt;/em&gt;).</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt;がndarrayのサブクラスでない場合、0を返します。それ以外の場合は、配列内の要素の総数を返します。&lt;a href=&quot;#c.PyArray_SIZE&quot;&gt; &lt;code&gt;PyArray_SIZE&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;obj&lt;/em&gt;）のより安全なバージョン。</target>
        </trans-unit>
        <trans-unit id="9eeaaadff86a0865cb617b460306672621245e72" translate="yes" xml:space="preserve">
          <source>Returns 0 if nothing was done, -1 on error, and 1 if action was taken.</source>
          <target state="translated">何もしていない場合は 0 を、エラーの場合は -1 を、アクションが行われた場合は 1 を返します。</target>
        </trans-unit>
        <trans-unit id="6712a5e3dc71d74ee825d5e63bac86197f6e5c9c" translate="yes" xml:space="preserve">
          <source>Returns 0 on success, -1 on error.</source>
          <target state="translated">成功した場合は 0、エラーの場合は -1 を返します。</target>
        </trans-unit>
        <trans-unit id="bc2b7dfb346d75cdc21e598dc1d034d91960f26f" translate="yes" xml:space="preserve">
          <source>Returns 0 when &lt;code&gt;x2&lt;/code&gt; is 0 and both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are (arrays of) integers. &lt;code&gt;mod&lt;/code&gt; is an alias of &lt;code&gt;remainder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x2&lt;/code&gt; が0で、 &lt;code&gt;x1&lt;/code&gt; と &lt;code&gt;x2&lt;/code&gt; の両方が（の配列）整数の場合、0を返します。 &lt;code&gt;mod&lt;/code&gt; の別名である &lt;code&gt;remainder&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02125e071c8b94170ef70aa1eddcf2caa5d6d226" translate="yes" xml:space="preserve">
          <source>Returns 1 if the caller needs to handle the inner-most 1-dimensional loop, or 0 if the iterator handles all looping. This is controlled by the constructor flag &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt;&lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NpyIter_EnableExternalLoop&quot;&gt;&lt;code&gt;NpyIter_EnableExternalLoop&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">呼び出し側が最も内側の1次元ループを処理する必要がある場合は1を返し、イテレータがすべてのループを処理する場合は0を返します。これは、コンストラクタフラグ&lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt; &lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#c.NpyIter_EnableExternalLoop&quot;&gt; &lt;code&gt;NpyIter_EnableExternalLoop&lt;/code&gt; &lt;/a&gt;によって制御されます。</target>
        </trans-unit>
        <trans-unit id="c3e040ea16828a7af098812246ada10b737a3018" translate="yes" xml:space="preserve">
          <source>Returns 1 if the flag &lt;a href=&quot;#c.NPY_ITER_DELAY_BUFALLOC&quot;&gt;&lt;code&gt;NPY_ITER_DELAY_BUFALLOC&lt;/code&gt;&lt;/a&gt; was passed to the iterator constructor, and no call to one of the Reset functions has been done yet, 0 otherwise.</source>
          <target state="translated">フラグ&lt;a href=&quot;#c.NPY_ITER_DELAY_BUFALLOC&quot;&gt; &lt;code&gt;NPY_ITER_DELAY_BUFALLOC&lt;/code&gt; &lt;/a&gt;がイテレーターコンストラクターに渡された場合は1を返し、リセット関数の1つに対する呼び出しはまだ行われていません。それ以外の場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="a0eabf7ad3fd7b74468203994ab254ca9f092705" translate="yes" xml:space="preserve">
          <source>Returns 1 if the iterator requires buffering, which occurs when an operand needs conversion or alignment and so cannot be used directly.</source>
          <target state="translated">イテレータがバッファリングを必要とする場合は1を返します。これは、オペランドが変換や整列を必要とするため、直接使用できない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="07efa4c5ad0c190a842da7877da8f8a7ecc05afc" translate="yes" xml:space="preserve">
          <source>Returns 1 if the iterator was created with the &lt;a href=&quot;#c.NPY_ITER_BUFFERED&quot;&gt;&lt;code&gt;NPY_ITER_BUFFERED&lt;/code&gt;&lt;/a&gt; flag, 0 otherwise.</source>
          <target state="translated">イテレータが&lt;a href=&quot;#c.NPY_ITER_BUFFERED&quot;&gt; &lt;code&gt;NPY_ITER_BUFFERED&lt;/code&gt; &lt;/a&gt;フラグで作成された場合は1を返し、それ以外の場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="7fe75eb194456195b6d1b8d969b6406be6143f07" translate="yes" xml:space="preserve">
          <source>Returns 1 if the iterator was created with the &lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt;&lt;/a&gt; flag, 0 otherwise.</source>
          <target state="translated">イテレータが&lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt; &lt;/a&gt;フラグで作成された場合は1を返し、それ以外の場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="38631735810573a469f961bd65c472da0a8230c7" translate="yes" xml:space="preserve">
          <source>Returns 1 if the iterator was created with the &lt;a href=&quot;#c.NPY_ITER_GROWINNER&quot;&gt;&lt;code&gt;NPY_ITER_GROWINNER&lt;/code&gt;&lt;/a&gt; flag, 0 otherwise.</source>
          <target state="translated">イテレータが&lt;a href=&quot;#c.NPY_ITER_GROWINNER&quot;&gt; &lt;code&gt;NPY_ITER_GROWINNER&lt;/code&gt; &lt;/a&gt;フラグで作成された場合は1を返し、それ以外の場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="b8d1389e5f77607a3b12ae5b77c6639df8690f30" translate="yes" xml:space="preserve">
          <source>Returns 1 if the iterator was created with the &lt;a href=&quot;#c.NPY_ITER_MULTI_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_MULTI_INDEX&lt;/code&gt;&lt;/a&gt; flag, 0 otherwise.</source>
          <target state="translated">イテレータが&lt;a href=&quot;#c.NPY_ITER_MULTI_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_MULTI_INDEX&lt;/code&gt; &lt;/a&gt;フラグで作成された場合は1を返し、それ以外の場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="d3326607915053b072db3754b1468eb7f280b7fd" translate="yes" xml:space="preserve">
          <source>Returns 1 is h is negative, 0 otherwise.</source>
          <target state="translated">hが負の場合は1を、そうでない場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="c7e3a4672660c3fef2c4d418a19dc79d3aa04f9c" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;typenum&lt;/em&gt; represents a valid type-number (builtin or user-defined or character code). Otherwise, this function returns &lt;a href=&quot;#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_TRUE&quot;&gt; &lt;code&gt;NPY_TRUE&lt;/code&gt; &lt;/a&gt;が有効なタイプ番号（組み込みまたはユーザー定義または文字コード）を表す場合は、&lt;em&gt;NPY_TRUEを&lt;/em&gt;返します。それ以外の場合、この関数は&lt;a href=&quot;#c.NPY_FALSE&quot;&gt; &lt;code&gt;NPY_FALSE&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="403725e5bd16147bddc5c00206db6d225b14ec1b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NPY_SUCCEED&lt;/code&gt; or &lt;code&gt;NPY_FAIL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NPY_SUCCEED&lt;/code&gt; または &lt;code&gt;NPY_FAIL&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b2ee97c7d4d45cc3feedc9a8d0d04c663fbfdb87" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NPY_SUCCEED&lt;/code&gt; or &lt;code&gt;NPY_FAIL&lt;/code&gt;. If errmsg is non-NULL, no Python exception is set when &lt;code&gt;NPY_FAIL&lt;/code&gt; is returned. Instead, *errmsg is set to an error message. When errmsg is non-NULL, the function may be safely called without holding the Python GIL.</source>
          <target state="translated">&lt;code&gt;NPY_SUCCEED&lt;/code&gt; または &lt;code&gt;NPY_FAIL&lt;/code&gt; を返します。errmsgがNULLでない場合、 &lt;code&gt;NPY_FAIL&lt;/code&gt; が返されてもPython例外は設定されません。代わりに、* errmsgはエラーメッセージに設定されます。errmsgがNULLでない場合、Python GILを保持せずに関数を安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="47389ff75ac1dac4fc9061aae7ecb422b035bc40" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on error.</source>
          <target state="translated">エラーの場合は &lt;code&gt;NULL&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="434e6107888cc3fe5eea38850e0297bb0baa2361" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;num&lt;/code&gt; evenly spaced samples, calculated over the interval [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;].</source>
          <target state="translated">間隔[ &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;stop&lt;/code&gt; ] で計算された、等間隔のサンプル &lt;code&gt;num&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ed514510f3b537bea9e9077fa3f766a0eb88a65f" translate="yes" xml:space="preserve">
          <source>Returns NULL if there is an error, otherwise returns the allocated iterator.</source>
          <target state="translated">エラーが発生した場合は NULL を返し、そうでない場合は割り当てられたイテレータを返します。</target>
        </trans-unit>
        <trans-unit id="0cd5102c0c0283a9bb6087aae24006067b8fa0ad" translate="yes" xml:space="preserve">
          <source>Returns NULL if there is an error. If errmsg is non-NULL, no Python exception is set when &lt;code&gt;NPY_FAIL&lt;/code&gt; is returned. Instead, *errmsg is set to an error message. When errmsg is non-NULL, the function may be safely called without holding the Python GIL.</source>
          <target state="translated">エラーが発生した場合はNULLを返します。errmsgがNULLでない場合、 &lt;code&gt;NPY_FAIL&lt;/code&gt; が返されてもPython例外は設定されません。代わりに、* errmsgはエラーメッセージに設定されます。errmsgがNULLでない場合、Python GILを保持せずに関数を安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="e51e8551ebfe6fca028ffaed0b3dcc12d1cfd551" translate="yes" xml:space="preserve">
          <source>Returns True if all elements evaluate to True.</source>
          <target state="translated">すべての要素がTrueに評価された場合にTrueを返します。</target>
        </trans-unit>
        <trans-unit id="808f8cc1023b8b8b461233c324cdae40c59f8861" translate="yes" xml:space="preserve">
          <source>Returns True if any of the elements of &lt;code&gt;a&lt;/code&gt; evaluate to True.</source>
          <target state="translated">要素のいずれかの場合にtrueを返しますTrueに評価されます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e09465575f73a123f17dab8ca49ad32c13ae007" translate="yes" xml:space="preserve">
          <source>Returns True if cast between data types can occur according to the casting rule.</source>
          <target state="translated">キャスティングルールに従ってデータ型間のキャストが可能な場合に True を返します。</target>
        </trans-unit>
        <trans-unit id="26515f3430c1beb03327c19aea3c862cf87e2819" translate="yes" xml:space="preserve">
          <source>Returns True if cast between data types can occur according to the casting rule. If from is a scalar or array scalar, also returns True if the scalar value can be cast without overflow or truncation to an integer.</source>
          <target state="translated">キャスティングルールに従ってデータ型間のキャストが可能な場合、Trueを返します。from がスカラまたは配列のスカラの場合、スカラ値がオーバーフローまたは整数への切り捨てなしにキャストできる場合も True を返します。</target>
        </trans-unit>
        <trans-unit id="6ca8bde0449dc63fab8f1009f5405759a6a25b60" translate="yes" xml:space="preserve">
          <source>Returns True if first argument is a typecode lower/equal in type hierarchy.</source>
          <target state="translated">最初の引数が型階層内の型コードの下位/等号である場合に真を返します。</target>
        </trans-unit>
        <trans-unit id="b22a5e45572f21d466de38f8cf1f9bde8fa5c7c6" translate="yes" xml:space="preserve">
          <source>Returns True if input arrays are shape consistent and all elements equal.</source>
          <target state="translated">入力配列の形状が一致しており、すべての要素が等しい場合に True を返します。</target>
        </trans-unit>
        <trans-unit id="79c716dae7ce9527ef33b5eba4a0f55958f2b185" translate="yes" xml:space="preserve">
          <source>Returns True if running the benchmarks works, False if an error occurred.</source>
          <target state="translated">ベンチマークの実行がうまくいった場合はTrueを、エラーが発生した場合はFalseを返します。</target>
        </trans-unit>
        <trans-unit id="a811e0e866b438205e75d605f3c9be1e70ce941c" translate="yes" xml:space="preserve">
          <source>Returns True if the array is Fortran contiguous but &lt;em&gt;not&lt;/em&gt; C contiguous.</source>
          <target state="translated">配列がFortranに隣接しているが&lt;em&gt;、&lt;/em&gt; Cには隣接してい&lt;em&gt;ない&lt;/em&gt;場合はTrueを返します。</target>
        </trans-unit>
        <trans-unit id="b3e3425ff31e0cbaa9952242fc3d0c4e5347e2df" translate="yes" xml:space="preserve">
          <source>Returns True if the arrays are equal.</source>
          <target state="translated">配列が等しい場合にTrueを返します。</target>
        </trans-unit>
        <trans-unit id="657502feb806168cc5b8212642e98def4223ed9a" translate="yes" xml:space="preserve">
          <source>Returns True if the two arrays are equal within the given tolerance, False otherwise. If either array contains NaN, then False is returned.</source>
          <target state="translated">2つの配列が指定された許容範囲内で等しい場合はTrueを、そうでない場合はFalseを返します。どちらかの配列に NaN が含まれている場合は False を返します。</target>
        </trans-unit>
        <trans-unit id="3960bd971c0cba3eb94501357090736485e6a466" translate="yes" xml:space="preserve">
          <source>Returns True if the two arrays are equal within the given tolerance; False otherwise.</source>
          <target state="translated">2 つの配列が指定された許容範囲内で等しい場合に True を返します。</target>
        </trans-unit>
        <trans-unit id="1f496acf00678c60acead22834064d093f50edbf" translate="yes" xml:space="preserve">
          <source>Returns True if the type of &lt;code&gt;element&lt;/code&gt; is a scalar type.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; の型がスカラー型の場合はTrueを返します。</target>
        </trans-unit>
        <trans-unit id="29cc2cb62c0b5499b9399d976d2df9b55d8de11d" translate="yes" xml:space="preserve">
          <source>Returns True if the type of &lt;code&gt;num&lt;/code&gt; is a scalar type.</source>
          <target state="translated">&lt;code&gt;num&lt;/code&gt; の型がスカラー型の場合、Trueを返します。</target>
        </trans-unit>
        <trans-unit id="3ea4ca820c758a490715c100d25b4440eef8f8a1" translate="yes" xml:space="preserve">
          <source>Returns True if two arrays are element-wise equal within a tolerance.</source>
          <target state="translated">2つの配列が許容範囲内で要素的に等しい場合にTrueを返します。</target>
        </trans-unit>
        <trans-unit id="3c624ab991c8dcb608801a88a5aa060b39bad3f6" translate="yes" xml:space="preserve">
          <source>Returns a 1D version of self, as a view.</source>
          <target state="translated">自己の1次元版をビューとして返します。</target>
        </trans-unit>
        <trans-unit id="26557217ee751540d08e486aa9eef727e5531028" translate="yes" xml:space="preserve">
          <source>Returns a NumPy universal function (&lt;code&gt;ufunc&lt;/code&gt;) object.</source>
          <target state="translated">NumPyユニバーサル関数（ &lt;code&gt;ufunc&lt;/code&gt; ）オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="6e407833134eebbc319885c05c271c5a57ef5854" translate="yes" xml:space="preserve">
          <source>Returns a bitmask with following possible flags:</source>
          <target state="translated">以下のフラグを指定してビットマスクを返します。</target>
        </trans-unit>
        <trans-unit id="91b109ae0c5c39185976689bba7a552fbf29fc0e" translate="yes" xml:space="preserve">
          <source>Returns a bool array, where True if input element is complex.</source>
          <target state="translated">bool 配列を返します。</target>
        </trans-unit>
        <trans-unit id="dabfcb617950873e8b96e392c7720c623c079877" translate="yes" xml:space="preserve">
          <source>Returns a bool array, where True if input element is real.</source>
          <target state="translated">bool 配列を返します。</target>
        </trans-unit>
        <trans-unit id="82ea7c5e7a626408c091c717ccb87ff9842c5dab" translate="yes" xml:space="preserve">
          <source>Returns a boolean array indicating valid days.</source>
          <target state="translated">有効な日数を示すブール値の配列を返します。</target>
        </trans-unit>
        <trans-unit id="a5a798bd13b7830305d14f0afef753c930fa84ef" translate="yes" xml:space="preserve">
          <source>Returns a boolean array of the same shape as &lt;code&gt;x&lt;/code&gt;, True where &lt;code&gt;x ==
+/-inf&lt;/code&gt;, otherwise False.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; と同じ形状のブール配列を返します &lt;code&gt;x == +/-inf&lt;/code&gt; 場合はx == +/- inf、それ以外の場合はFalseです。</target>
        </trans-unit>
        <trans-unit id="d9ce4c56a2d469c6e69d1b58412023cf9af003eb" translate="yes" xml:space="preserve">
          <source>Returns a boolean array of where &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equal within the given tolerance. If both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are scalars, returns a single boolean value.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; が指定された許容範囲内で等しいブール配列を返します。 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; の両方がスカラーの場合、単一のブール値を返します。</target>
        </trans-unit>
        <trans-unit id="83ee034b20cdef524b1b56d45efc976fcf29daf9" translate="yes" xml:space="preserve">
          <source>Returns a boolean array the same length as &lt;code&gt;ar1&lt;/code&gt; that is True where an element of &lt;code&gt;ar1&lt;/code&gt; is in &lt;code&gt;ar2&lt;/code&gt; and False otherwise.</source>
          <target state="translated">&lt;code&gt;ar1&lt;/code&gt; の要素が &lt;code&gt;ar2&lt;/code&gt; にある &lt;code&gt;ar1&lt;/code&gt; Trueであるar1と同じ長さのブール配列を返し、それ以外の場合はFalse を返します。</target>
        </trans-unit>
        <trans-unit id="9137a4dac459c56407a0eff3e78727c7563c0934" translate="yes" xml:space="preserve">
          <source>Returns a boolean array where two arrays are element-wise equal within a tolerance.</source>
          <target state="translated">2つの配列が許容範囲内で要素ごとに等しくなるようなブール値の配列を返します。</target>
        </trans-unit>
        <trans-unit id="f39e7df99fe1f81eb255ab72edb28ea68c868dfa" translate="yes" xml:space="preserve">
          <source>Returns a boolean array which is &lt;code&gt;True&lt;/code&gt; where the string element in &lt;code&gt;a&lt;/code&gt; ends with &lt;code&gt;suffix&lt;/code&gt;, otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">あるブール配列を返します &lt;code&gt;True&lt;/code&gt; でどこの文字列要素で終わる &lt;code&gt;suffix&lt;/code&gt; 、そうでない場合 &lt;code&gt;False&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a334fe58c8a986c427834f6fe9b5cd8d9fb82c01" translate="yes" xml:space="preserve">
          <source>Returns a boolean array which is &lt;code&gt;True&lt;/code&gt; where the string element in &lt;code&gt;a&lt;/code&gt; starts with &lt;code&gt;prefix&lt;/code&gt;, otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">あるブール配列を返します &lt;code&gt;True&lt;/code&gt; でどこの文字列要素で始まる &lt;code&gt;prefix&lt;/code&gt; 、そうでない場合 &lt;code&gt;False&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8bd38d9a8e9f8c407e8e3f280919c951e2d0c907" translate="yes" xml:space="preserve">
          <source>Returns a boolean array which is &lt;code&gt;True&lt;/code&gt; where the string element in &lt;code&gt;self&lt;/code&gt; ends with &lt;code&gt;suffix&lt;/code&gt;, otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の文字列要素が &lt;code&gt;suffix&lt;/code&gt; で終わる &lt;code&gt;True&lt;/code&gt; であるブール配列を返します。それ以外の場合は &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2033519e4602085304e1e9678984a15d9cc301af" translate="yes" xml:space="preserve">
          <source>Returns a boolean array which is &lt;code&gt;True&lt;/code&gt; where the string element in &lt;code&gt;self&lt;/code&gt; starts with &lt;code&gt;prefix&lt;/code&gt;, otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; のブール配列を返します。 &lt;code&gt;self&lt;/code&gt; の文字列要素は &lt;code&gt;prefix&lt;/code&gt; で始まり、それ以外の場合は &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f84ecb9e671fe5a62ffff4868951710fc18cbbe4" translate="yes" xml:space="preserve">
          <source>Returns a borrowed reference to the dtype property (&lt;code&gt;PyArray_Descr*&lt;/code&gt;) of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">戻り値DTYPEプロパティ（への借用参照 &lt;code&gt;PyArray_Descr*&lt;/code&gt; の）と仮定すると、にキャストすることができます &lt;code&gt;PyArrayObject*&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d93d22ee0a05554fc3e02d3abc3080d943e7a932" translate="yes" xml:space="preserve">
          <source>Returns a borrowed reference to the dtype property of the array.</source>
          <target state="translated">配列の dtype プロパティへの借用参照を返します。</target>
        </trans-unit>
        <trans-unit id="45a9d16c849ee627a07de34d3c7c60fb103ea46a" translate="yes" xml:space="preserve">
          <source>Returns a data-type object corresponding to &lt;em&gt;typenum&lt;/em&gt;. The &lt;em&gt;typenum&lt;/em&gt; can be one of the enumerated types, a character code for one of the enumerated types, or a user-defined type. If you want to use a flexible size array, then you need to &lt;code&gt;flexible typenum&lt;/code&gt; and set the results &lt;code&gt;elsize&lt;/code&gt; parameter to the desired size. The typenum is one of the &lt;a href=&quot;c-api.dtype#c.NPY_TYPES&quot;&gt;&lt;code&gt;NPY_TYPES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;typenumに&lt;/em&gt;対応するデータ型オブジェクトを返します。&lt;em&gt;typenumは、&lt;/em&gt;列挙型のいずれか、列挙型のいずれか、またはユーザー定義型の文字コードとすることができます。あなたは柔軟なサイズの配列を使用したい場合は、必要に &lt;code&gt;flexible typenum&lt;/code&gt; と結果が設定 &lt;code&gt;elsize&lt;/code&gt; 希望のサイズにパラメータを。typenumはの一つである&lt;a href=&quot;c-api.dtype#c.NPY_TYPES&quot;&gt; &lt;code&gt;NPY_TYPES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f146681841c85aace0a34a120762a5f8b4dcd71" translate="yes" xml:space="preserve">
          <source>Returns a data-type object corresponding to &lt;em&gt;typenum&lt;/em&gt;. The &lt;em&gt;typenum&lt;/em&gt; can be one of the enumerated types, a character code for one of the enumerated types, or a user-defined type. If you want to use a flexible size array, then you need to &lt;code&gt;flexible typenum&lt;/code&gt; and set the results &lt;code&gt;elsize&lt;/code&gt; parameter to the desired size. The typenum is one of the &lt;a href=&quot;dtype#c.NPY_TYPES&quot;&gt;&lt;code&gt;NPY_TYPES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;typenumに&lt;/em&gt;対応するデータ型オブジェクトを返します。&lt;em&gt;typenumは、&lt;/em&gt;列挙型のいずれか、列挙型のいずれか、またはユーザー定義型の文字コードとすることができます。あなたは柔軟なサイズの配列を使用したい場合は、必要に &lt;code&gt;flexible typenum&lt;/code&gt; と結果が設定 &lt;code&gt;elsize&lt;/code&gt; 希望のサイズにパラメータを。typenumはの一つである&lt;a href=&quot;dtype#c.NPY_TYPES&quot;&gt; &lt;code&gt;NPY_TYPES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15b9f3d70ca5443f34eb49cbaf7c94ae04e8a130" translate="yes" xml:space="preserve">
          <source>Returns a dictionary with fields indexing lists of their parent fields.</source>
          <target state="translated">親フィールドのリストをインデックス化したフィールドを持つ辞書を返します。</target>
        </trans-unit>
        <trans-unit id="9a578a246fffa06028202e1279c889ee7312aef8" translate="yes" xml:space="preserve">
          <source>Returns a dtype based off the given description.</source>
          <target state="translated">与えられた説明に基づいて、dtypeを返します。</target>
        </trans-unit>
        <trans-unit id="5795a0049817d205be48c9819c929b8acc52949f" translate="yes" xml:space="preserve">
          <source>Returns a field of the given array as a certain type.</source>
          <target state="translated">与えられた配列のフィールドを特定の型として返します。</target>
        </trans-unit>
        <trans-unit id="0ed85eacf19d11d52b6d79ef57328eaa6ff1884e" translate="yes" xml:space="preserve">
          <source>Returns a flattened copy of an array.</source>
          <target state="translated">配列の平坦化されたコピーを返します。</target>
        </trans-unit>
        <trans-unit id="dd3cb09fe46e6a87a1feae1dc5ef282345db3f60" translate="yes" xml:space="preserve">
          <source>Returns a function pointer for getting the current multi-index of the iterator. Returns NULL if the iterator is not tracking a multi-index. It is recommended that this function pointer be cached in a local variable before the iteration loop.</source>
          <target state="translated">イテレータの現在のマルチインデックスを取得するための関数ポインタを返します。イテレータがマルチインデックスを追跡していない場合は NULL を返します。この関数ポインタは、反復ループの前にローカル変数にキャッシュしておくことを推奨します。</target>
        </trans-unit>
        <trans-unit id="cac0b6f2ec24de0c744fa0d16cddbbf8b9be417a" translate="yes" xml:space="preserve">
          <source>Returns a function pointer for iteration. A specialized version of the function pointer may be calculated by this function instead of being stored in the iterator structure. Thus, to get good performance, it is required that the function pointer be saved in a variable rather than retrieved for each loop iteration.</source>
          <target state="translated">反復のための関数ポインタを返します。関数ポインタの特殊なバージョンは、イテレータ構造体に保存される代わりに、この関数によって計算されることがあります。したがって、良いパフォーマンスを得るためには、ループの反復のたびに関数ポインタを取得するのではなく、変数に保存する必要があります。</target>
        </trans-unit>
        <trans-unit id="a10c17be31eedd0bba6a40970571d6f7ad579178" translate="yes" xml:space="preserve">
          <source>Returns a list of files named &amp;lsquo;fname&amp;rsquo; from 1) System-wide directory (directory-location of this module) 2) Users HOME directory (os.environ[&amp;lsquo;HOME&amp;rsquo;]) 3) Local directory</source>
          <target state="translated">1）システム全体のディレクトリ（このモジュールのディレクトリの場所）2）ユーザーのHOMEディレクトリ（os.environ ['HOME']）3）ローカルディレクトリから、 'fname'という名前のファイルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="470736429ce15047825d29117adb4e0e0bcf7e7b" translate="yes" xml:space="preserve">
          <source>Returns a list of slices corresponding to the masked clumps of a 1-D array.</source>
          <target state="translated">1次元配列のマスクされた塊に対応するスライスのリストを返します。</target>
        </trans-unit>
        <trans-unit id="ff03f876a6e223e8fd0b7dd5a3bf0d6a33a4de9f" translate="yes" xml:space="preserve">
          <source>Returns a list of slices corresponding to the masked clumps of a 1-D array. (A &amp;ldquo;clump&amp;rdquo; is defined as a contiguous region of the array).</source>
          <target state="translated">1次元配列のマスクされた束に対応するスライスのリストを返します。（「クランプ」は、アレイの隣接する領域として定義されます）。</target>
        </trans-unit>
        <trans-unit id="c21fca56f91f1c5a4d143b1ee3460eb700de0353" translate="yes" xml:space="preserve">
          <source>Returns a list with types grouped input-&amp;gt;output.</source>
          <target state="translated">タイプがグループ化された入力-&amp;gt;出力のリストを返します。</target>
        </trans-unit>
        <trans-unit id="c0272a490b459b53e6a460ee6dccbcaf9058f37a" translate="yes" xml:space="preserve">
          <source>Returns a masked array containing the same data, but with a new shape. The result is a view on the original array; if this is not possible, a ValueError is raised.</source>
          <target state="translated">同じデータを含むマスクされた配列を、新しい形状で返します。結果は元の配列のビューとなります。</target>
        </trans-unit>
        <trans-unit id="5e5cf56c302519782e893744ba414d38c09a1f71" translate="yes" xml:space="preserve">
          <source>Returns a matrix from an array-like object, or from a string of data. A matrix is a specialized 2-D array that retains its 2-D nature through operations. It has certain special operators, such as &lt;code&gt;*&lt;/code&gt; (matrix multiplication) and &lt;code&gt;**&lt;/code&gt; (matrix power).</source>
          <target state="translated">配列のようなオブジェクトから、またはデータの文字列から行列を返します。行列は、操作を通じて2次元の性質を保持する特殊な2次元配列です。 &lt;code&gt;*&lt;/code&gt; （行列の乗算）や &lt;code&gt;**&lt;/code&gt; （行列のべき乗）などの特定の演算子があります。</target>
        </trans-unit>
        <trans-unit id="318e63603ad5502f105445287c0a8e45500fc3d7" translate="yes" xml:space="preserve">
          <source>Returns a matrix object, which is a specialized 2-D array.</source>
          <target state="translated">特殊な 2 次元配列である行列オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="c56c7bf918f34dbbdfaab7d29a7d2d783ce5ea93" translate="yes" xml:space="preserve">
          <source>Returns a new bit generator with the state jumped</source>
          <target state="translated">ジャンプした状態の新しいビット生成器を返します。</target>
        </trans-unit>
        <trans-unit id="c5151209d098f68dae7578cd8812927e8535ffd5" translate="yes" xml:space="preserve">
          <source>Returns a new bit generator with the state jumped.</source>
          <target state="translated">ジャンプした状態の新しいビット生成器を返します。</target>
        </trans-unit>
        <trans-unit id="9993ad4416ff33a234df99302634d35edd192413" translate="yes" xml:space="preserve">
          <source>Returns a new dtype object, with the type of all fields in &lt;code&gt;ndtype&lt;/code&gt; to a boolean type. Field names are not altered.</source>
          <target state="translated">内のすべてのフィールドのタイプで、新しいDTYPEオブジェクトを返します &lt;code&gt;ndtype&lt;/code&gt; boolean型へ。フィールド名は変更されません。</target>
        </trans-unit>
        <trans-unit id="036b93da87acf0f9009061895003203f40272ee2" translate="yes" xml:space="preserve">
          <source>Returns a new numpy.recarray with fields in &lt;code&gt;drop_names&lt;/code&gt; dropped.</source>
          <target state="translated">drop_namesのフィールドが &lt;code&gt;drop_names&lt;/code&gt; れた新しいnumpy.recarrayを返します。</target>
        </trans-unit>
        <trans-unit id="223e1f5bba425e5a7dd6c215bc7f90e351b648a8" translate="yes" xml:space="preserve">
          <source>Returns a pointer to an array of the &lt;code&gt;nop&lt;/code&gt; strides, one for each iterated object, to be used by the inner loop.</source>
          <target state="translated">内側のループで使用される、 &lt;code&gt;nop&lt;/code&gt; ストライドの配列へのポインター（各反復オブジェクトに1つ）を返します。</target>
        </trans-unit>
        <trans-unit id="838538d04561d6a9d16bd3bb4e63fec4b29ad727" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the dimensions/shape of the array. The number of elements matches the number of dimensions of the array. Can return &lt;code&gt;NULL&lt;/code&gt; for 0-dimensional arrays.</source>
          <target state="translated">配列の次元/形状へのポインターを返します。要素の数は、配列の次元数と一致します。0次元配列の場合は &lt;code&gt;NULL&lt;/code&gt; を返すことができます。</target>
        </trans-unit>
        <trans-unit id="a46e48e23c89e64929900374a373bb27be1a34b2" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the number of iterations the inner loop should execute.</source>
          <target state="translated">内部ループが実行すべき反復回数へのポインタを返します。</target>
        </trans-unit>
        <trans-unit id="808286411c5d2579f73d07bbb321d374dc0eccdc" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the strides of the array. The number of elements matches the number of dimensions of the array.</source>
          <target state="translated">配列のストライドへのポインタを返します。要素数は配列の次元数と一致します。</target>
        </trans-unit>
        <trans-unit id="b83c4a09f9ed920ca4753bed9ece5a39f0600246" translate="yes" xml:space="preserve">
          <source>Returns a scalar type-object from a type-number, &lt;em&gt;type&lt;/em&gt; . Equivalent to &lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt;&lt;code&gt;PyArray_DescrFromType&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;type&lt;/em&gt;)-&amp;gt;typeobj except for reference counting and error-checking. Returns a new reference to the typeobject on success or &lt;code&gt;NULL&lt;/code&gt; on failure.</source>
          <target state="translated">型数、からスカラー型のオブジェクトを返します&lt;em&gt;タイプ&lt;/em&gt;。相当&lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt; &lt;code&gt;PyArray_DescrFromType&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;タイプ&lt;/em&gt;） - &amp;gt;参照カウントとエラーチェックを除いtypeobj。成功した場合はtypeobjectへの新しい参照を、失敗した場合は &lt;code&gt;NULL&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a902c79dd4c838787c681b0d4416e4369385827a" translate="yes" xml:space="preserve">
          <source>Returns a series representing the product &lt;code&gt;(x - r[0])*(x - r[1])*...*(x - r[n-1])&lt;/code&gt;, where &lt;code&gt;r&lt;/code&gt; is a list of roots.</source>
          <target state="translated">積 &lt;code&gt;(x - r[0])*(x - r[1])*...*(x - r[n-1])&lt;/code&gt; 表す系列を返します。ここで、 &lt;code&gt;r&lt;/code&gt; は根のリストです。</target>
        </trans-unit>
        <trans-unit id="be0aa23a8d558edba28782ba899073b3f7ca7aa8" translate="yes" xml:space="preserve">
          <source>Returns a single bool if &lt;code&gt;axis&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;; otherwise, returns &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; の場合、単一のブール値を返します。それ以外の場合は、&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; を&lt;/a&gt;返します</target>
        </trans-unit>
        <trans-unit id="be30276c7d2a4f123cd76fd21583eae64e4c3d58" translate="yes" xml:space="preserve">
          <source>Returns a standard &lt;a href=&quot;../reference/generated/numpy.recarray#numpy.recarray&quot;&gt;&lt;code&gt;numpy.recarray&lt;/code&gt;&lt;/a&gt; (if &lt;code&gt;usemask=False&lt;/code&gt;) or a &lt;code&gt;MaskedRecords&lt;/code&gt; array (if &lt;code&gt;usemaske=True&lt;/code&gt;). The default dtype is &lt;code&gt;dtype=None&lt;/code&gt;, meaning that the types of each column will be automatically determined.</source>
          <target state="translated">標準の&lt;a href=&quot;../reference/generated/numpy.recarray#numpy.recarray&quot;&gt; &lt;code&gt;numpy.recarray&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;usemask=False&lt;/code&gt; の場合）または &lt;code&gt;MaskedRecords&lt;/code&gt; 配列（ &lt;code&gt;usemaske=True&lt;/code&gt; の場合）を返します。デフォルトのdtypeは &lt;code&gt;dtype=None&lt;/code&gt; です。これは、各列のタイプが自動的に決定されることを意味します。</target>
        </trans-unit>
        <trans-unit id="fcabb281b53f9ab6610007c6f4cc947d93898ab5" translate="yes" xml:space="preserve">
          <source>Returns a true division of the inputs, element-wise.</source>
          <target state="translated">入力の真の分割を、要素ごとに返します。</target>
        </trans-unit>
        <trans-unit id="859cc83c125a67c9e1d2ef23db058a23816a9fa1" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the indices of the current iteration.</source>
          <target state="translated">現在の繰り返しのインデックスを含むタプルを返します。</target>
        </trans-unit>
        <trans-unit id="52830cbf09e3acc294145e0b75c673b00250e3be" translate="yes" xml:space="preserve">
          <source>Returns a tuple of &lt;a href=&quot;numpy.flatiter#numpy.flatiter&quot;&gt;&lt;code&gt;numpy.flatiter&lt;/code&gt;&lt;/a&gt; objects, one for each &amp;ldquo;component&amp;rdquo; of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の「コンポーネント」ごとに1つ、&lt;a href=&quot;numpy.flatiter#numpy.flatiter&quot;&gt; &lt;code&gt;numpy.flatiter&lt;/code&gt; &lt;/a&gt;オブジェクトのタプルを返します。</target>
        </trans-unit>
        <trans-unit id="15d14b7c215283230bbde4fde3fbe238d5e3e4d1" translate="yes" xml:space="preserve">
          <source>Returns a tuple of arrays, one for each dimension of &lt;code&gt;a&lt;/code&gt;, containing the indices of the non-zero elements in that dimension. The values in &lt;code&gt;a&lt;/code&gt; are always tested and returned in row-major, C-style order.</source>
          <target state="translated">リターンアレイのタプルの各次元に対して1つのその次元における非ゼロ要素のインデックスを含みます。 &lt;code&gt;a&lt;/code&gt; の値は常にテストされ、行優先、Cスタイルの順序で返されます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb24f4887cf31f7b0741a4e6974577466201ed4d" translate="yes" xml:space="preserve">
          <source>Returns a tuple of arrays, one for each dimension, containing the indices of the non-zero elements in that dimension. The corresponding non-zero values can be obtained with:</source>
          <target state="translated">各ディメンジョンに対して1つずつ、そのディメンジョン内のゼロ以外の要素のインデックスを含む配列のタプルを返します。対応するゼロ以外の値は、以下のようにして得られます。</target>
        </trans-unit>
        <trans-unit id="399659d2ce9197e3f68969e3461f22fc719d209a" translate="yes" xml:space="preserve">
          <source>Returns a tuple of arrays, with &lt;code&gt;grid[i].shape = (1, ..., 1, dimensions[i], 1, ..., 1)&lt;/code&gt; with dimensions[i] in the ith place</source>
          <target state="translated">&lt;code&gt;grid[i].shape = (1, ..., 1, dimensions[i], 1, ..., 1)&lt;/code&gt; の配列のタプルをi番目の次元[i]で返します</target>
        </trans-unit>
        <trans-unit id="30d2e5ef20dc9f641259b52e69f8f4329425a2a3" translate="yes" xml:space="preserve">
          <source>Returns a view of the array with axes transposed.</source>
          <target state="translated">軸を転置した配列のビューを返します。</target>
        </trans-unit>
        <trans-unit id="27391d004074faca53b46e3996c6c3c219480d2d" translate="yes" xml:space="preserve">
          <source>Returns an array containing the same data with a new shape.</source>
          <target state="translated">同じデータを含む配列を、新しい形状で返します。</target>
        </trans-unit>
        <trans-unit id="5aeea1524bbb4b99f1bdbceae7089113e87b36b9" translate="yes" xml:space="preserve">
          <source>Returns an array of anomalies, with the same shape as the input and where the arithmetic mean is computed along the given axis.</source>
          <target state="translated">入力と同じ形状で、与えられた軸に沿って算術平均が計算された異常値の配列を返します。</target>
        </trans-unit>
        <trans-unit id="5a0f58d6dddf5cd41797684629530254cf6a8c8a" translate="yes" xml:space="preserve">
          <source>Returns an array representing a linear polynomial.</source>
          <target state="translated">線形多項式を表す配列を返します。</target>
        </trans-unit>
        <trans-unit id="f94de1f6c7639ea5d7ce403286395619048ad47d" translate="yes" xml:space="preserve">
          <source>Returns an array with the number of non-overlapping occurrences of substring &lt;code&gt;sub&lt;/code&gt; in the range [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;].</source>
          <target state="translated">範囲[ &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;end&lt;/code&gt; ] 内の部分文字列 &lt;code&gt;sub&lt;/code&gt; の重複しない出現回数の配列を返します。</target>
        </trans-unit>
        <trans-unit id="45a88ec2bccba0b1c19ca07ff9136eb845b66f52" translate="yes" xml:space="preserve">
          <source>Returns an element-wise indication of the sign of a number.</source>
          <target state="translated">数値の符号を要素単位で返します。</target>
        </trans-unit>
        <trans-unit id="de96e095414d689252b03aefa6d51a16cbfc3b50" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the &lt;a href=&quot;#array-flags&quot;&gt;array-flags&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#array-flags&quot;&gt;配列フラグを&lt;/a&gt;表す整数を返します。</target>
        </trans-unit>
        <trans-unit id="9635b520b34813723c2f4f44400040e004496303" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the flags of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">旗表す整数を返しますと仮定して、にキャストすることができます &lt;code&gt;PyArrayObject*&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fffc645b65d4cb0b478c983fa888d91f9d5e6474" translate="yes" xml:space="preserve">
          <source>Returns an ndarray object from a Python object that exposes the &lt;a href=&quot;../arrays.interface#__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt; attribute following the array interface protocol. If the object does not contain this attribute then a borrowed reference to &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt;&lt;code&gt;Py_NotImplemented&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">配列インターフェイスプロトコルに従って&lt;a href=&quot;../arrays.interface#__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; &lt;/a&gt;属性を公​​開するPythonオブジェクトからndarrayオブジェクトを返します。オブジェクトにこの属性が含まれていない場合は、&lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt; &lt;code&gt;Py_NotImplemented&lt;/code&gt; &lt;/a&gt;への借用参照が返されます。</target>
        </trans-unit>
        <trans-unit id="5ba2d31cc4b0e639b95456209cc1de19e6149cfd" translate="yes" xml:space="preserve">
          <source>Returns an ndarray object from a Python object that exposes the &lt;a href=&quot;../arrays.interface#object.__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt; attribute following the array interface protocol. If the object does not contain this attribute then a borrowed reference to &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt;&lt;code&gt;Py_NotImplemented&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">配列インターフェイスプロトコルに従って&lt;a href=&quot;../arrays.interface#object.__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; &lt;/a&gt;属性を公​​開するPythonオブジェクトからndarrayオブジェクトを返します。オブジェクトにこの属性が含まれていない場合は、&lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt; &lt;code&gt;Py_NotImplemented&lt;/code&gt; &lt;/a&gt;への借用参照が返されます。</target>
        </trans-unit>
        <trans-unit id="5fb7cb9cdabb794c59312979d79f2f454b931d00" translate="yes" xml:space="preserve">
          <source>Returns an ndarray object from a Python object that exposes the &lt;a href=&quot;../arrays.interface#object.__array_struct__&quot;&gt;&lt;code&gt;__array_struct__&lt;/code&gt;&lt;/a&gt; attribute and follows the array interface protocol. If the object does not contain this attribute then a borrowed reference to &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt;&lt;code&gt;Py_NotImplemented&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">&lt;a href=&quot;../arrays.interface#object.__array_struct__&quot;&gt; &lt;code&gt;__array_struct__&lt;/code&gt; &lt;/a&gt;属性を公​​開し、配列インターフェイスプロトコルに従うPythonオブジェクトからndarrayオブジェクトを返します。オブジェクトにこの属性が含まれていない場合は、&lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt; &lt;code&gt;Py_NotImplemented&lt;/code&gt; &lt;/a&gt;への借用参照が返されます。</target>
        </trans-unit>
        <trans-unit id="a8e486ab7595a742e750c6b5fb68a5e7723e7b7d" translate="yes" xml:space="preserve">
          <source>Returns an ndarray object from a Python object that exposes the &lt;a href=&quot;arrays.interface#__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt; attribute following the array interface protocol. If the object does not contain this attribute then a borrowed reference to &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt;&lt;code&gt;Py_NotImplemented&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">配列インターフェイスプロトコルに従って&lt;a href=&quot;arrays.interface#__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; &lt;/a&gt;属性を公​​開するPythonオブジェクトからndarrayオブジェクトを返します。オブジェクトにこの属性が含まれていない場合は、&lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt; &lt;code&gt;Py_NotImplemented&lt;/code&gt; &lt;/a&gt;への借用参照が返されます。</target>
        </trans-unit>
        <trans-unit id="defd61a16e8456c3662e0bbcd8b6e4544c88f9f5" translate="yes" xml:space="preserve">
          <source>Returns an ndarray object from a Python object that exposes the &lt;code&gt;__array_struct__&lt;/code&gt; attribute and follows the array interface protocol. If the object does not contain this attribute then a borrowed reference to &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt;&lt;code&gt;Py_NotImplemented&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">&lt;code&gt;__array_struct__&lt;/code&gt; 属性を公​​開し、配列インターフェースプロトコルに従うPythonオブジェクトからndarrayオブジェクトを返します。オブジェクトにこの属性が含まれていない場合は、&lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt; &lt;code&gt;Py_NotImplemented&lt;/code&gt; &lt;/a&gt;への借用参照が返されます。</target>
        </trans-unit>
        <trans-unit id="e68745ac983845b9eb541855dfdd4c1cfa0ba166" translate="yes" xml:space="preserve">
          <source>Returns array of indices of the maximum values along the given axis.</source>
          <target state="translated">指定した軸に沿った最大値のインデックスの配列を返します。</target>
        </trans-unit>
        <trans-unit id="a71dcc827b5e07f838075d3a5caff5e6a8e138b7" translate="yes" xml:space="preserve">
          <source>Returns array of indices of the maximum values along the given axis. Masked values are treated as if they had the value fill_value.</source>
          <target state="translated">指定した軸に沿った最大値のインデックスの配列を返します。マスクされた値は、あたかも fill_value という値を持っているかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="3272962658178566710f9691c655f62f6f462ac4" translate="yes" xml:space="preserve">
          <source>Returns dtype for the base element of the subarrays, regardless of their dimension or shape.</source>
          <target state="translated">次元や形状に関係なく、サブ配列の基底要素のdtypeを返します。</target>
        </trans-unit>
        <trans-unit id="fb3c5a765826dbc160b2629b990fe6fbc4be3cdb" translate="yes" xml:space="preserve">
          <source>Returns either a new reference to self if dtype is not given or a new array of provided data type if dtype is different from the current dtype of the array.</source>
          <target state="translated">dtypeが与えられていない場合はselfへの新しい参照を、dtypeが配列の現在のdtypeと異なる場合は指定されたデータ型の新しい配列を返します。</target>
        </trans-unit>
        <trans-unit id="bf9f415a99f80c456ba9880f70ef07188c8051bb" translate="yes" xml:space="preserve">
          <source>Returns element-wise True where signbit is set (less than zero).</source>
          <target state="translated">signbitが設定されている(0より小さい)場合に、要素単位でTrueを返します。</target>
        </trans-unit>
        <trans-unit id="f338a78b0e40859071dbd16839fbebae883403c5" translate="yes" xml:space="preserve">
          <source>Returns element-wise base array raised to power from second array.</source>
          <target state="translated">2 番目の配列から乗算して、要素単位の基底配列を返します。</target>
        </trans-unit>
        <trans-unit id="8019b995da064a9519ce144fc0391726fe3412ea" translate="yes" xml:space="preserve">
          <source>Returns non-zero if &lt;em&gt;arr&lt;/em&gt; can be cast to &lt;em&gt;totype&lt;/em&gt; according to the casting rule given in &lt;em&gt;casting&lt;/em&gt;. If &lt;em&gt;arr&lt;/em&gt; is an array scalar, its value is taken into account, and non-zero is also returned when the value will not overflow or be truncated to an integer when converting to a smaller type.</source>
          <target state="translated">戻り値ゼロでない場合は&lt;em&gt;ARRを&lt;/em&gt;するためにキャストできる&lt;em&gt;totype&lt;/em&gt;に与えられた鋳造規則に従って&lt;em&gt;鋳造&lt;/em&gt;。&lt;em&gt;arr&lt;/em&gt;が配列スカラーの場合、その値が考慮され、より小さい型に変換するときに値がオーバーフローしないか、整数に切り捨てられない場合にもゼロ以外が返されます。</target>
        </trans-unit>
        <trans-unit id="578c25be3a47f3925ec3d30b6194822d36f3b53b" translate="yes" xml:space="preserve">
          <source>Returns non-zero if an array of data type &lt;em&gt;fromtype&lt;/em&gt; (which can include flexible types) can be cast safely to an array of data type &lt;em&gt;totype&lt;/em&gt; (which can include flexible types) according to the casting rule &lt;em&gt;casting&lt;/em&gt;. For simple types with &lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt;&lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt;&lt;/a&gt;, this is basically a wrapper around &lt;a href=&quot;#c.PyArray_CanCastSafely&quot;&gt;&lt;code&gt;PyArray_CanCastSafely&lt;/code&gt;&lt;/a&gt;, but for flexible types such as strings or unicode, it produces results taking into account their sizes. Integer and float types can only be cast to a string or unicode type using &lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt;&lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt;&lt;/a&gt; if the string or unicode type is big enough to hold the max value of the integer/float type being cast from.</source>
          <target state="translated">データ型&lt;em&gt;fromtype&lt;/em&gt;（フレキシブルタイプを含むことができる）の配列を、キャストルール&lt;em&gt;キャスト&lt;/em&gt;に従ってデータタイプ&lt;em&gt;totype&lt;/em&gt;（フレキシブルタイプを含むことができる）の配列に安全にキャストできる場合は、ゼロ以外を返します。&lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt; &lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt; の&lt;/a&gt;単純型の場合、これは基本的に&lt;a href=&quot;#c.PyArray_CanCastSafely&quot;&gt; &lt;code&gt;PyArray_CanCastSafely&lt;/code&gt; の&lt;/a&gt;ラッパーですが、文字列やユニコードなどの柔軟な型の場合、サイズを考慮した結果が生成されます。整数型と浮動小数点型は、文字列型またはUnicode型がキャスト元の整数型または浮動小数点型の最大値を保持するのに十分な大きさである場合にのみ、&lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt; &lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt; &lt;/a&gt;を使用して文字列型またはUnicode型にキャストできます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce6b8f0c4ec83a1402de56c2e34413bf75b42ffd" translate="yes" xml:space="preserve">
          <source>Returns non-zero if an array of data type &lt;em&gt;fromtype&lt;/em&gt; can be cast to an array of data type &lt;em&gt;totype&lt;/em&gt; without losing information. An exception is that 64-bit integers are allowed to be cast to 64-bit floating point values even though this can lose precision on large integers so as not to proliferate the use of long doubles without explicit requests. Flexible array types are not checked according to their lengths with this function.</source>
          <target state="translated">データ型&lt;em&gt;fromtype&lt;/em&gt;の配列を、情報を失うことなくデータ型&lt;em&gt;totypeの&lt;/em&gt;配列にキャストできる場合は、ゼロ以外を返します。例外は、64ビット整数を64ビット浮動小数点値にキャストできることです。これは、大きな整数の精度が失われる可能性があるため、明示的な要求なしでlong doubleの使用が増加しないようにするためです。この関数では、フレキシブルアレイタイプはその長さに従ってチェックされません。</target>
        </trans-unit>
        <trans-unit id="009a9310deb92537b808ab91212710a189e4451a" translate="yes" xml:space="preserve">
          <source>Returns one array of grid indices, &lt;code&gt;grid.shape = (len(dimensions),) + tuple(dimensions)&lt;/code&gt;.</source>
          <target state="translated">グリッドインデックスの1つの配列 &lt;code&gt;grid.shape = (len(dimensions),) + tuple(dimensions)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="52c2273cd80979ab77c8d77556b8041d5809ac4d" translate="yes" xml:space="preserve">
          <source>Returns pointers to the end-points of an array.</source>
          <target state="translated">配列の終点へのポインタを返します。</target>
        </trans-unit>
        <trans-unit id="b8b929aa0e64f62d714c79c20bb2ed4cff9005cd" translate="yes" xml:space="preserve">
          <source>Returns single boolean unless &lt;code&gt;axis&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; でない限り、単一のブール値を返します</target>
        </trans-unit>
        <trans-unit id="85f124d396a8cca8daf0b6150db2c3baa3bbed2f" translate="yes" xml:space="preserve">
          <source>Returns the (complex) conjugate transpose of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の（複素数）共役転置を返します。</target>
        </trans-unit>
        <trans-unit id="fd94f46441fb0a066c178a4c64f1a6085b905a48" translate="yes" xml:space="preserve">
          <source>Returns the (multiplicative) inverse of invertible &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">可逆 &lt;code&gt;self&lt;/code&gt; の（乗法）逆を返します。</target>
        </trans-unit>
        <trans-unit id="27a38d55a488439e220541b994a0c10a2c5296e5" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt;-th dimension of an array &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">配列 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; の &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; 番目の次元を返します。</target>
        </trans-unit>
        <trans-unit id="e17b1f28b2d0326d95a4ac69d5a18555cadbe967" translate="yes" xml:space="preserve">
          <source>Returns the Chebyshev series &lt;code&gt;c&lt;/code&gt; raised to the power &lt;code&gt;pow&lt;/code&gt;. The argument &lt;code&gt;c&lt;/code&gt; is a sequence of coefficients ordered from low to high. i.e., [1,2,3] is the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2.&lt;/code&gt;</source>
          <target state="translated">パワー &lt;code&gt;pow&lt;/code&gt; に引き上げられたチェビシェフシリーズ &lt;code&gt;c&lt;/code&gt; を返します。引数 &lt;code&gt;c&lt;/code&gt; は、低から高の順序で並べられた係数のシーケンスです。つまり、[1,2,3]は系列 &lt;code&gt;T_0 + 2*T_1 + 3*T_2.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c19ff72c5e7b4b33394346a0b149ffa3dd267dc3" translate="yes" xml:space="preserve">
          <source>Returns the Chebyshev series coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;1*T_0 + 2*T_1 + 3*T_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*T_0(x)*T_0(y) + 1*T_1(x)*T_0(y) +
2*T_0(x)*T_1(y) + 2*T_1(x)*T_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 沿って &lt;code&gt;m&lt;/code&gt; 回微分されたチェビシェフシリーズ係数 &lt;code&gt;c&lt;/code&gt; を返します。各反復で、結果に &lt;code&gt;scl&lt;/code&gt; が乗算されます（スケーリング係数は、変数の線形変化で使用されます）。引数 &lt;code&gt;c&lt;/code&gt; は、各軸に沿った低次から高次までの係数の配列です。たとえば、[[1,2,3]は系列 &lt;code&gt;1*T_0 + 2*T_1 + 3*T_2&lt;/code&gt; を表し、[[1,2]、[1 、2]]は &lt;code&gt;1*T_0(x)*T_0(y) + 1*T_1(x)*T_0(y) + 2*T_0(x)*T_1(y) + 2*T_1(x)*T_1(y)&lt;/code&gt; axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合。</target>
        </trans-unit>
        <trans-unit id="51c140591b74a0d1fee97f09b426cb62c831fe6c" translate="yes" xml:space="preserve">
          <source>Returns the Chebyshev series coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*T_0(x)*T_0(y) + 1*T_1(x)*T_0(y) + 2*T_0(x)*T_1(y) +
2*T_1(x)*T_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">戻りチェビシェフ級数係数を &lt;code&gt;c&lt;/code&gt; 集積 &lt;code&gt;m&lt;/code&gt; から時間 &lt;code&gt;lbnd&lt;/code&gt; 沿って &lt;code&gt;axis&lt;/code&gt; 。各反復で、結果の系列に &lt;code&gt;scl&lt;/code&gt; が&lt;strong&gt;乗算&lt;/strong&gt;され、積分定数 &lt;code&gt;k&lt;/code&gt; が追加されます。スケーリング係数は、変数の線形変化で使用するためのものです。 （「バイヤーは注意してください」：何をしているのかによって、 &lt;code&gt;scl&lt;/code&gt; を期待されるものの逆数にしたい場合があることに注意してください。詳細については、以下の「注意」セクションを参照してください。引数 &lt;code&gt;c&lt;/code&gt; は、各軸に沿って低次から高次、たとえば、[1,2,3]は系列 &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; 表します一方、[[1,2]、[1,2]]は &lt;code&gt;1*T_0(x)*T_0(y) + 1*T_1(x)*T_0(y) + 2*T_0(x)*T_1(y) + 2*T_1(x)*T_1(y)&lt;/code&gt; axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合、2 * T_1（x）* T_1（y）。</target>
        </trans-unit>
        <trans-unit id="8fcb4ff6f7c6a3d9ef93e2dcfc52e8f8796319fa" translate="yes" xml:space="preserve">
          <source>Returns the Chebyshev series that interpolates &lt;code&gt;func&lt;/code&gt; at the Chebyshev points of the first kind in the interval [-1, 1]. The interpolating series tends to a minmax approximation to &lt;code&gt;func&lt;/code&gt; with increasing &lt;code&gt;deg&lt;/code&gt; if the function is continuous in the interval.</source>
          <target state="translated">区間[-1、1]の第1種のチェビシェフ点で &lt;code&gt;func&lt;/code&gt; を補間するチェビシェフ級数を返します。内挿系列は、関数が区間内で連続である場合、 &lt;code&gt;deg&lt;/code&gt; が増加するにつれて &lt;code&gt;func&lt;/code&gt; のミニマックス近似になる傾向があります。</target>
        </trans-unit>
        <trans-unit id="b07ebc531340b87673abfd1f024bdc89d45d7007" translate="yes" xml:space="preserve">
          <source>Returns the Hermite series &lt;code&gt;c&lt;/code&gt; raised to the power &lt;code&gt;pow&lt;/code&gt;. The argument &lt;code&gt;c&lt;/code&gt; is a sequence of coefficients ordered from low to high. i.e., [1,2,3] is the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pow&lt;/code&gt; 引き上げられたエルミートシリーズ &lt;code&gt;c&lt;/code&gt; を返します。引数 &lt;code&gt;c&lt;/code&gt; は、低から高の順序で並べられた係数のシーケンスです。つまり、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38bb43fa9b0cd1cba2d7e700e138a1ce808ed498" translate="yes" xml:space="preserve">
          <source>Returns the Hermite series coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;1*H_0 + 2*H_1 + 3*H_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) +
2*H_0(x)*H_1(y) + 2*H_1(x)*H_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 沿って &lt;code&gt;m&lt;/code&gt; 回微分されたエルミート系列係数 &lt;code&gt;c&lt;/code&gt; を返します。各反復で、結果に &lt;code&gt;scl&lt;/code&gt; が乗算されます（スケーリング係数は、変数の線形変化で使用されます）。引数 &lt;code&gt;c&lt;/code&gt; は、各軸に沿った低次から高次までの係数の配列です。たとえば、[[1,2,3]は系列 &lt;code&gt;1*H_0 + 2*H_1 + 3*H_2&lt;/code&gt; を表し、[[1,2]、[1 、2]]は、 &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) + 2*H_0(x)*H_1(y) + 2*H_1(x)*H_1(y)&lt;/code&gt; axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合。</target>
        </trans-unit>
        <trans-unit id="6fdd479f3684cd6fab81a5f0c83cd2978f6db6a0" translate="yes" xml:space="preserve">
          <source>Returns the Hermite series coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;H_0 + 2*H_1 + 3*H_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) + 2*H_0(x)*H_1(y) +
2*H_1(x)*H_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 沿って &lt;code&gt;lbnd&lt;/code&gt; から &lt;code&gt;m&lt;/code&gt; 回積分されたエルミートシリーズ係数 &lt;code&gt;c&lt;/code&gt; を返します。各反復で、結果の系列に &lt;code&gt;scl&lt;/code&gt; が&lt;strong&gt;乗算&lt;/strong&gt;され、積分定数 &lt;code&gt;k&lt;/code&gt; が追加されます。スケーリング係数は、変数の線形変化で使用するためのものです。 （「バイヤーは注意してください」：何をしているのかによって、 &lt;code&gt;scl&lt;/code&gt; を期待されるものの逆数にしたい場合があることに注意してください。詳細については、以下の「注意」セクションを参照してください。引数 &lt;code&gt;c&lt;/code&gt; は、各軸に沿って低次から高次、たとえば、[1,2,3]は系列 &lt;code&gt;H_0 + 2*H_1 + 3*H_2&lt;/code&gt; 表します&lt;strong&gt;&lt;/strong&gt;一方、[[1,2]、[1,2]]は &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) + 2*H_0(x)*H_1(y) + 2*H_1(x)*H_1(y)&lt;/code&gt; axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合、2 * H_1（x）* H_1（y）。</target>
        </trans-unit>
        <trans-unit id="0e03d85b7cb766e37b49f36881ce04d9561050c0" translate="yes" xml:space="preserve">
          <source>Returns the Hermite_e series coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;H_0 + 2*H_1 + 3*H_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) + 2*H_0(x)*H_1(y) +
2*H_1(x)*H_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">戻りHermite_eシリーズ係数 &lt;code&gt;c&lt;/code&gt; 集積 &lt;code&gt;m&lt;/code&gt; から時間 &lt;code&gt;lbnd&lt;/code&gt; 沿って &lt;code&gt;axis&lt;/code&gt; 。各反復で、結果の系列に &lt;code&gt;scl&lt;/code&gt; が&lt;strong&gt;乗算&lt;/strong&gt;され、積分定数 &lt;code&gt;k&lt;/code&gt; が追加されます。スケーリング係数は、変数の線形変化で使用するためのものです。 （「バイヤーは注意してください」：何をしているのかによって、 &lt;code&gt;scl&lt;/code&gt; を期待されるものの逆数にしたい場合があることに注意してください。詳細については、以下の「注意」セクションを参照してください。引数 &lt;code&gt;c&lt;/code&gt; は、各軸に沿って低次から高次、たとえば、[1,2,3]は系列 &lt;code&gt;H_0 + 2*H_1 + 3*H_2&lt;/code&gt; 表します一方、[[1,2]、[1,2]]は &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) + 2*H_0(x)*H_1(y) + 2*H_1(x)*H_1(y)&lt;/code&gt; axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合、2 * H_1（x）* H_1（y）。</target>
        </trans-unit>
        <trans-unit id="f994c1c77662952de13b72ec1cb9b59a30088124" translate="yes" xml:space="preserve">
          <source>Returns the Laguerre series &lt;code&gt;c&lt;/code&gt; raised to the power &lt;code&gt;pow&lt;/code&gt;. The argument &lt;code&gt;c&lt;/code&gt; is a sequence of coefficients ordered from low to high. i.e., [1,2,3] is the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt;</source>
          <target state="translated">戻り値は、ラゲールシリーズ &lt;code&gt;c&lt;/code&gt; 電源に上げ &lt;code&gt;pow&lt;/code&gt; 。引数 &lt;code&gt;c&lt;/code&gt; は、低から高の順序で並べられた係数のシーケンスです。つまり、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd67bccd89dec7b84a0f263cadef9ef3b8b2abf4" translate="yes" xml:space="preserve">
          <source>Returns the Laguerre series coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;1*L_0 + 2*L_1 + 3*L_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) +
2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 沿って &lt;code&gt;m&lt;/code&gt; 回微分されたラゲール級数係数 &lt;code&gt;c&lt;/code&gt; を返します。各反復で、結果に &lt;code&gt;scl&lt;/code&gt; が乗算されます（スケーリング係数は、変数の線形変化で使用されます）。引数 &lt;code&gt;c&lt;/code&gt; は、各軸に沿った低次から高次までの係数の配列です。たとえば、[[1,2,3]は系列 &lt;code&gt;1*L_0 + 2*L_1 + 3*L_2&lt;/code&gt; を表し、[[1,2]、[1 、2]]は、 &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合。</target>
        </trans-unit>
        <trans-unit id="a36104a44d4c73e587b5267fdc3125d9e9962c93" translate="yes" xml:space="preserve">
          <source>Returns the Laguerre series coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;L_0 + 2*L_1 + 3*L_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) +
2*L_1(x)*L_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 沿って &lt;code&gt;lbnd&lt;/code&gt; から &lt;code&gt;m&lt;/code&gt; 回積分されたラゲール級数係数 &lt;code&gt;c&lt;/code&gt; を返します。各反復で、結果の系列に &lt;code&gt;scl&lt;/code&gt; が&lt;strong&gt;乗算&lt;/strong&gt;され、積分定数 &lt;code&gt;k&lt;/code&gt; が追加されます。スケーリング係数は、変数の線形変化で使用するためのものです。 （「バイヤーは注意してください」：何をしているのかによって、 &lt;code&gt;scl&lt;/code&gt; を期待されるものの逆数にしたい場合があることに注意してください。詳細については、以下の「注意」セクションを参照してください。引数 &lt;code&gt;c&lt;/code&gt; は、各軸に沿って低次から高次、たとえば、[1,2,3]は系列 &lt;code&gt;L_0 + 2*L_1 + 3*L_2&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;一方、[[1,2]、[1,2]]は &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合、2 * L_1（x）* L_1（y）。</target>
        </trans-unit>
        <trans-unit id="c884d7d7bbacfa0d8c4f0d11afe877e72a8762a9" translate="yes" xml:space="preserve">
          <source>Returns the Legendre series &lt;code&gt;c&lt;/code&gt; raised to the power &lt;code&gt;pow&lt;/code&gt;. The argument &lt;code&gt;c&lt;/code&gt; is a sequence of coefficients ordered from low to high. i.e., [1,2,3] is the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt;</source>
          <target state="translated">パワー &lt;code&gt;pow&lt;/code&gt; に引き上げられたルジャンドルシリーズ &lt;code&gt;c&lt;/code&gt; を返します。引数 &lt;code&gt;c&lt;/code&gt; は、低から高の順序で並べられた係数のシーケンスです。つまり、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9aec3f7374402168612096c12626ad1ed5c82577" translate="yes" xml:space="preserve">
          <source>Returns the Legendre series coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;1*L_0 + 2*L_1 + 3*L_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) +
2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 沿って &lt;code&gt;m&lt;/code&gt; 回微分されたルジャンドル系列係数 &lt;code&gt;c&lt;/code&gt; を返します。各反復で、結果に &lt;code&gt;scl&lt;/code&gt; が乗算されます（スケーリング係数は、変数の線形変化で使用されます）。引数 &lt;code&gt;c&lt;/code&gt; は、各軸に沿った低次から高次までの係数の配列です。たとえば、[[1,2,3]は系列 &lt;code&gt;1*L_0 + 2*L_1 + 3*L_2&lt;/code&gt; を表し、[[1,2]、[1 、2]]は、 &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合。</target>
        </trans-unit>
        <trans-unit id="4a51274546bf924dd416ea8425edac23e0abc587" translate="yes" xml:space="preserve">
          <source>Returns the Legendre series coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;L_0 + 2*L_1 + 3*L_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) +
2*L_1(x)*L_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lbnd&lt;/code&gt; から &lt;code&gt;axis&lt;/code&gt; 沿って &lt;code&gt;m&lt;/code&gt; 回積分されたルジャンドル系列係数 &lt;code&gt;c&lt;/code&gt; を返します。各反復で、結果の系列に &lt;code&gt;scl&lt;/code&gt; が&lt;strong&gt;乗算&lt;/strong&gt;され、積分定数 &lt;code&gt;k&lt;/code&gt; が追加されます。スケーリング係数は、変数の線形変化で使用するためのものです。 （「バイヤーは注意してください」：何をしているのかによって、 &lt;code&gt;scl&lt;/code&gt; を期待されるものの逆数にしたい場合があることに注意してください。詳細については、以下の「注意」セクションを参照してください。引数 &lt;code&gt;c&lt;/code&gt; は、各軸に沿って低次から高次、たとえば、[1,2,3]は系列 &lt;code&gt;L_0 + 2*L_1 + 3*L_2&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;一方、[[1,2]、[1,2]]は &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合、2 * L_1（x）* L_1（y）。</target>
        </trans-unit>
        <trans-unit id="22d64806d0f573e6aae1d9ab8498480317b34be4" translate="yes" xml:space="preserve">
          <source>Returns the NPV (Net Present Value) of a cash flow series.</source>
          <target state="translated">キャッシュフロー系列のNPV(正味現在価値)を返します。</target>
        </trans-unit>
        <trans-unit id="3c137d6ab752a1a419551450441663ea9713ac92" translate="yes" xml:space="preserve">
          <source>Returns the Vandermonde matrix of degree &lt;code&gt;deg&lt;/code&gt; and sample points &lt;code&gt;x&lt;/code&gt;. The Vandermonde matrix is defined by</source>
          <target state="translated">次数 &lt;code&gt;deg&lt;/code&gt; とサンプルポイント &lt;code&gt;x&lt;/code&gt; のヴァンダーモンド行列を返します。ヴァンダーモンド行列は、</target>
        </trans-unit>
        <trans-unit id="5bfc8cf62cfe82f2c9a3492a2538db7f55bfc867" translate="yes" xml:space="preserve">
          <source>Returns the average of the array elements along given axis.</source>
          <target state="translated">指定した軸に沿った配列要素の平均を返します。</target>
        </trans-unit>
        <trans-unit id="65f19b2033d6e804190b09f246af9a1f84be8335" translate="yes" xml:space="preserve">
          <source>Returns the average of the array elements. The average is taken over the flattened array by default, otherwise over the specified axis. &lt;a href=&quot;../arrays.scalars#numpy.float64&quot;&gt;&lt;code&gt;float64&lt;/code&gt;&lt;/a&gt; intermediate and return values are used for integer inputs.</source>
          <target state="translated">配列要素の平均を返します。平均は、デフォルトでフラット化された配列で取得されます。それ以外の場合は、指定された軸で取得されます。&lt;a href=&quot;../arrays.scalars#numpy.float64&quot;&gt; &lt;code&gt;float64&lt;/code&gt; の&lt;/a&gt;中間値と戻り値は、整数入力に使用されます。</target>
        </trans-unit>
        <trans-unit id="9a7a0a83f8ee3f88fa0c20189c0d4ac30a4fefe0" translate="yes" xml:space="preserve">
          <source>Returns the average of the array elements. The average is taken over the flattened array by default, otherwise over the specified axis. &lt;code&gt;float64&lt;/code&gt; intermediate and return values are used for integer inputs.</source>
          <target state="translated">配列要素の平均を返します。平均は、デフォルトでは平坦化された配列で取得され、それ以外の場合は指定された軸で取得されます。 &lt;code&gt;float64&lt;/code&gt; 中間値と戻り値は整数入力に使用されます。</target>
        </trans-unit>
        <trans-unit id="da94c213a46beb19d86e10459dc3048a91bbf7b6" translate="yes" xml:space="preserve">
          <source>Returns the average of the matrix elements along the given axis.</source>
          <target state="translated">指定された軸に沿った行列要素の平均を返します。</target>
        </trans-unit>
        <trans-unit id="0068e75a5ec4a982069a5c11ee5893dfa3f6ee69" translate="yes" xml:space="preserve">
          <source>Returns the broadcast shape of the iterator in &lt;code&gt;outshape&lt;/code&gt;. This can only be called on an iterator which is tracking a multi-index.</source>
          <target state="translated">イテレータのブロードキャスト形状を &lt;code&gt;outshape&lt;/code&gt; で返します。これは、マルチインデックスを追跡しているイテレータでのみ呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="59cb40edade0a60821e9c8728c90ce4019cc7711" translate="yes" xml:space="preserve">
          <source>Returns the coefficients of the polynomial whose leading coefficient is one for the given sequence of zeros (multiple roots must be included in the sequence as many times as their multiplicity; see Examples). A square matrix (or array, which will be treated as a matrix) can also be given, in which case the coefficients of the characteristic polynomial of the matrix are returned.</source>
          <target state="translated">指定した一連のゼロに対して先頭の係数が1である多項式の係数を返します(複数の根は、その倍数の何倍もの数だけ含まれていなければなりません;例を参照してください)。正方行列(あるいは行列として扱われる配列)を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="9a3ee119768a6a76dde85f3db63eca898fd52187" translate="yes" xml:space="preserve">
          <source>Returns the data type with the smallest size and smallest scalar kind to which both &lt;code&gt;type1&lt;/code&gt; and &lt;code&gt;type2&lt;/code&gt; may be safely cast.</source>
          <target state="translated">&lt;code&gt;type1&lt;/code&gt; と &lt;code&gt;type2&lt;/code&gt; の両方を安全にキャストできる最小のサイズと最小のスカラーの種類のデータ型を返します。</target>
        </trans-unit>
        <trans-unit id="e4339e8090b0a422018db91db164d57c296f3de6" translate="yes" xml:space="preserve">
          <source>Returns the data type with the smallest size and smallest scalar kind to which both &lt;code&gt;type1&lt;/code&gt; and &lt;code&gt;type2&lt;/code&gt; may be safely cast. The returned data type is always in native byte order.</source>
          <target state="translated">&lt;code&gt;type1&lt;/code&gt; と &lt;code&gt;type2&lt;/code&gt; の両方を安全にキャストできる最小のサイズと最小のスカラーの種類のデータ型を返します。返されるデータ型は常にネイティブのバイト順です。</target>
        </trans-unit>
        <trans-unit id="652ac6762e24a3418b146937904fd1f674c2224b" translate="yes" xml:space="preserve">
          <source>Returns the difference of two Chebyshev series &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt;. The sequences of coefficients are from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt;.</source>
          <target state="translated">2つのチェビシェフシリーズ &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt; の差を返します。係数のシーケンスは、最低次の項から最高次までです。つまり、[1,2,3]は、系列 &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="810185597496d8c0a086bcfb1d063b53f5bfeb16" translate="yes" xml:space="preserve">
          <source>Returns the difference of two Hermite series &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt;. The sequences of coefficients are from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのHermiteシリーズ &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt; の差を返します。係数のシーケンスは、最低次の項から最高次の項までです。つまり、[1,2,3]は、系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="208a2d78d3f934b924e6ee9dc9fe7f3d628be890" translate="yes" xml:space="preserve">
          <source>Returns the difference of two Laguerre series &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt;. The sequences of coefficients are from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのラゲール系列 &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt; の差を返します。係数のシーケンスは、最低次の項から最高次の項までです。つまり、[1,2,3]は、系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="be0457d2a096b03dacb16ec4b9b3e6226803db10" translate="yes" xml:space="preserve">
          <source>Returns the difference of two Legendre series &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt;. The sequences of coefficients are from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのルジャンドル系列 &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt; の差を返します。係数のシーケンスは、最低次の項から最高次の項までです。つまり、[1,2,3]は、系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="d084870c51f5e13c851d15b086b19fb99d050125" translate="yes" xml:space="preserve">
          <source>Returns the difference of two polynomials &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order term to highest, i.e., [1,2,3] represents the polynomial &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt;.</source>
          <target state="translated">2つの多項式 &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt; の差を返します。引数は、最低次の項から最高次までの係数のシーケンスです。つまり、[1,2,3]は、多項式 &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="9f1d8ee5cd294f79f1c399414296222f25d00036" translate="yes" xml:space="preserve">
          <source>Returns the directory containing NumPy C header files.</source>
          <target state="translated">NumPy Cヘッダファイルを含むディレクトリを返します。</target>
        </trans-unit>
        <trans-unit id="e0189ccd9f65586480cc5f3ba179ed30ed4323e1" translate="yes" xml:space="preserve">
          <source>Returns the discrete, linear convolution of two one-dimensional sequences.</source>
          <target state="translated">2つの1次元シーケンスの離散的な線形畳み込みを返します。</target>
        </trans-unit>
        <trans-unit id="af372a1a4631fac47072f3f87c81329981478748" translate="yes" xml:space="preserve">
          <source>Returns the dot product of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are both scalars or both 1-D arrays then a scalar is returned; otherwise an array is returned. If &lt;code&gt;out&lt;/code&gt; is given, then it is returned.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; のドット積を返します。場合及び &lt;code&gt;b&lt;/code&gt; スカラーが返され、次いでスカラーまたは両方の1-Dアレイの両方です。それ以外の場合は、配列が返されます。 &lt;code&gt;out&lt;/code&gt; が指定されている場合は、それが返されます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b48088bf8a056601fc331a8831fcde05c38bc2a" translate="yes" xml:space="preserve">
          <source>Returns the dot product of the supplied arrays.</source>
          <target state="translated">与えられた配列のドット積を返します。</target>
        </trans-unit>
        <trans-unit id="ae6f7a436d9c5b853f5258dd3e837dbb130aafbb" translate="yes" xml:space="preserve">
          <source>Returns the endianness of the current platform. One of &lt;a href=&quot;#c.NPY_CPU_BIG&quot;&gt;&lt;code&gt;NPY_CPU_BIG&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_CPU_LITTLE&quot;&gt;&lt;code&gt;NPY_CPU_LITTLE&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#c.NPY_CPU_UNKNOWN_ENDIAN&quot;&gt;&lt;code&gt;NPY_CPU_UNKNOWN_ENDIAN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在のプラットフォームのエンディアンを返します。一つ&lt;a href=&quot;#c.NPY_CPU_BIG&quot;&gt; &lt;code&gt;NPY_CPU_BIG&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_CPU_LITTLE&quot;&gt; &lt;code&gt;NPY_CPU_LITTLE&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#c.NPY_CPU_UNKNOWN_ENDIAN&quot;&gt; &lt;code&gt;NPY_CPU_UNKNOWN_ENDIAN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db092eb9af5a3e3a76fb82a7afe5490aa2ddcea7" translate="yes" xml:space="preserve">
          <source>Returns the endianness of the current platform. One of &lt;code&gt;NPY_CPU_BIG&lt;/code&gt;, &lt;code&gt;NPY_CPU_LITTLE&lt;/code&gt;, or &lt;code&gt;NPY_CPU_UNKNOWN_ENDIAN&lt;/code&gt;.</source>
          <target state="translated">現在のプラットフォームのエンディアンを返します。一つ &lt;code&gt;NPY_CPU_BIG&lt;/code&gt; 、 &lt;code&gt;NPY_CPU_LITTLE&lt;/code&gt; 、または &lt;code&gt;NPY_CPU_UNKNOWN_ENDIAN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67a4cfc6d13e64ee8c7f0e5e3ea5f0dc0aae5be7" translate="yes" xml:space="preserve">
          <source>Returns the field names of the input datatype as a tuple.</source>
          <target state="translated">入力データ型のフィールド名をタプルで返します。</target>
        </trans-unit>
        <trans-unit id="c30830e3906b13a9b106787cd034def7c923cee0" translate="yes" xml:space="preserve">
          <source>Returns the field names of the input datatype as a tuple. Nested structure are flattened beforehand.</source>
          <target state="translated">入力データ型のフィールド名をタプルで返します。入れ子になった構造体はあらかじめ平坦化されています。</target>
        </trans-unit>
        <trans-unit id="0f0c2322eb3e3266616e01e73e5e13553faba179" translate="yes" xml:space="preserve">
          <source>Returns the greatest common divisor of &lt;code&gt;|x1|&lt;/code&gt; and &lt;code&gt;|x2|&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;|x1|&lt;/code&gt; 最大公約数を返します および &lt;code&gt;|x2|&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96e5cd14b263d3f1d7e13bd1da219d8e84004c5d" translate="yes" xml:space="preserve">
          <source>Returns the indices of the maximum values along an axis.</source>
          <target state="translated">軸に沿った最大値のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="6fd0ce4f3a8a5599013e0e8bf8afc094b6c66089" translate="yes" xml:space="preserve">
          <source>Returns the indices of the minimum values along an axis.</source>
          <target state="translated">軸に沿った最小値のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="ac39c0a6c8eb391ea93991374f33f2d985224b6b" translate="yes" xml:space="preserve">
          <source>Returns the indices that would partition this array.</source>
          <target state="translated">この配列を分割するインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="066f0bc1f78b8495c8fc78fba6ab6dd35e66306d" translate="yes" xml:space="preserve">
          <source>Returns the indices that would sort an array.</source>
          <target state="translated">配列をソートするインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="f1537d0d9b6c521d0eaec523829a299d0b0d35b3" translate="yes" xml:space="preserve">
          <source>Returns the indices that would sort this array.</source>
          <target state="translated">この配列をソートするインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="edccc0a948e4da449b67cb64212a52312b7ed741" translate="yes" xml:space="preserve">
          <source>Returns the length of a string &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">文字列 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; の長さを返します。</target>
        </trans-unit>
        <trans-unit id="57334d6b355fa0ec4f557d153030a58219d7f8fc" translate="yes" xml:space="preserve">
          <source>Returns the length of an array &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">配列 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; の長さを返します。</target>
        </trans-unit>
        <trans-unit id="44599c6fb1f0a7514d2bd99b73cb153b26fa2f4a" translate="yes" xml:space="preserve">
          <source>Returns the lowest common multiple of &lt;code&gt;|x1|&lt;/code&gt; and &lt;code&gt;|x2|&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;|x1|&lt;/code&gt; 最小公倍数を返します および &lt;code&gt;|x2|&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35cac07fcea754e8297dd0565e7202c4a107b869" translate="yes" xml:space="preserve">
          <source>Returns the maximum filling value for a given datatype.</source>
          <target state="translated">指定されたデータ型に対する最大充填値を返します。</target>
        </trans-unit>
        <trans-unit id="4457ed798c0061e3ce7961eee7f4387c54e6d803" translate="yes" xml:space="preserve">
          <source>Returns the maximum of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. If (&lt;em&gt;a&lt;/em&gt;) or (&lt;em&gt;b&lt;/em&gt;) are expressions they are evaluated twice.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;最大値を返します。（&lt;em&gt;a&lt;/em&gt;）または（&lt;em&gt;b&lt;/em&gt;）が式の場合、それらは2回評価されます。</target>
        </trans-unit>
        <trans-unit id="d834b35582d6f8df6f939a50065823f0b5b2cafc" translate="yes" xml:space="preserve">
          <source>Returns the median of the array elements.</source>
          <target state="translated">配列要素の中央値を返します。</target>
        </trans-unit>
        <trans-unit id="c62ef342a59cb61c6779dde6629cd016952c832b" translate="yes" xml:space="preserve">
          <source>Returns the minimum filling value for a given datatype.</source>
          <target state="translated">指定されたデータ型の最小充填値を返します。</target>
        </trans-unit>
        <trans-unit id="1a8e83436c0220effd776390ac8f193176b9b632" translate="yes" xml:space="preserve">
          <source>Returns the minimum of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. If (&lt;em&gt;a&lt;/em&gt;) or (&lt;em&gt;b&lt;/em&gt;) are expressions they are evaluated twice.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;最小値を返します。（&lt;em&gt;a&lt;/em&gt;）または（&lt;em&gt;b&lt;/em&gt;）が式の場合、それらは2回評価されます。</target>
        </trans-unit>
        <trans-unit id="f9ada65f8805ea4046c6d097e360ca3e3c9ff5d1" translate="yes" xml:space="preserve">
          <source>Returns the number of dimensions being iterated. If a multi-index was not requested in the iterator constructor, this value may be smaller than the number of dimensions in the original objects.</source>
          <target state="translated">反復処理を行うディメンションの数を返します。イテレータのコンストラクタで複数のインデックスが要求されなかった場合、この値は元のオブジェクトのディメンジョン数よりも小さくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="72b2edcfbc5eb4395e5fb93768ca15e6ea15c51e" translate="yes" xml:space="preserve">
          <source>Returns the number of elements being iterated. This is the product of all the dimensions in the shape. When a multi index is being tracked (and &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; may be called) the size may be &lt;code&gt;-1&lt;/code&gt; to indicate an iterator is too large. Such an iterator is invalid, but may become valid after &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; is called. It is not necessary to check for this case.</source>
          <target state="translated">反復される要素の数を返します。これは、形状のすべての寸法の積です。マルチインデックスが追跡されている場合（および &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; が呼び出される場合）、サイズが &lt;code&gt;-1&lt;/code&gt; になり、イテレータが大きすぎることを示します。このようなイテレータは無効ですが、 &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; が呼び出された後に有効になる場合があります。このケースを確認する必要はありません。</target>
        </trans-unit>
        <trans-unit id="81a1b267bdc9613fdc34f48e560867b69e9bf01b" translate="yes" xml:space="preserve">
          <source>Returns the number of operands in the iterator.</source>
          <target state="translated">イテレータ内のオペランドの数を返します。</target>
        </trans-unit>
        <trans-unit id="104ede44e50eab53cdc70c000280ef712803aebb" translate="yes" xml:space="preserve">
          <source>Returns the numpy.distutils config command instance.</source>
          <target state="translated">numpy.distutils 設定コマンドのインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="c979c27368e89d132692f0e48b3260c993e96e6f" translate="yes" xml:space="preserve">
          <source>Returns the one-dimensional piecewise linear interpolant to a function with given discrete data points (&lt;code&gt;xp&lt;/code&gt;, &lt;code&gt;fp&lt;/code&gt;), evaluated at &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">1次元の区分線形補間関数を、 &lt;code&gt;x&lt;/code&gt; で評価された、指定された離散データポイント（ &lt;code&gt;xp&lt;/code&gt; 、 &lt;code&gt;fp&lt;/code&gt; ）を持つ関数に返します。</target>
        </trans-unit>
        <trans-unit id="af6d974e97dff6b874b62e637b76121df7cd3fd0" translate="yes" xml:space="preserve">
          <source>Returns the pickle of the array as a string.</source>
          <target state="translated">配列のピクルスを文字列で返します。</target>
        </trans-unit>
        <trans-unit id="7f3d2ea9cca86da6ee47a885279507f66b7426dc" translate="yes" xml:space="preserve">
          <source>Returns the pickle of the array as a string. pickle.loads or numpy.loads will convert the string back to an array.</source>
          <target state="translated">配列の pickle を文字列として返します。 pickle.loads や numpy.loads は文字列を配列に変換して返します。</target>
        </trans-unit>
        <trans-unit id="668f0eb9cb2aecc346de205aa45b54c97c370a13" translate="yes" xml:space="preserve">
          <source>Returns the polynomial &lt;code&gt;c&lt;/code&gt; raised to the power &lt;code&gt;pow&lt;/code&gt;. The argument &lt;code&gt;c&lt;/code&gt; is a sequence of coefficients ordered from low to high. i.e., [1,2,3] is the series &lt;code&gt;1 + 2*x + 3*x**2.&lt;/code&gt;</source>
          <target state="translated">多項式 &lt;code&gt;c&lt;/code&gt; を &lt;code&gt;pow&lt;/code&gt; 乗した値を返します。引数 &lt;code&gt;c&lt;/code&gt; は、低から高の順序で並べられた係数のシーケンスです。つまり、[1,2,3]は、系列 &lt;code&gt;1 + 2*x + 3*x**2.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98788735767277cb3a2812c6f467184b53c81177" translate="yes" xml:space="preserve">
          <source>Returns the polynomial coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the polynomial &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1 + 1*x + 2*y + 2*x*y&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 沿って &lt;code&gt;m&lt;/code&gt; 回微分された多項式係数 &lt;code&gt;c&lt;/code&gt; を返します。各反復で、結果に &lt;code&gt;scl&lt;/code&gt; が乗算されます（スケーリング係数は、変数の線形変化で使用されます）。引数 &lt;code&gt;c&lt;/code&gt; は、各軸に沿った低次から高次までの係数の配列です。たとえば、[[1,2,3]は多項式 &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; を表し、[[1,2]、[ [1,2]]は、axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合、 &lt;code&gt;1 + 1*x + 2*y + 2*x*y&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="812803e3d789955f6635617a019a448f8a912cff" translate="yes" xml:space="preserve">
          <source>Returns the polynomial coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients, from low to high degree along each axis, e.g., [1,2,3] represents the polynomial &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1 + 1*x + 2*y + 2*x*y&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">多項式係数を返し &lt;code&gt;c&lt;/code&gt; を統合 &lt;code&gt;m&lt;/code&gt; から時間 &lt;code&gt;lbnd&lt;/code&gt; 沿って &lt;code&gt;axis&lt;/code&gt; 。各反復で、結果の系列に &lt;code&gt;scl&lt;/code&gt; が&lt;strong&gt;乗算&lt;/strong&gt;され、積分定数 &lt;code&gt;k&lt;/code&gt; が追加されます。スケーリング係数は、変数の線形変化で使用するためのものです。 （「バイヤーは注意してください」：何をしているのかによっては、 &lt;code&gt;scl&lt;/code&gt; を期待されるものの逆数にしたい場合があることに注意してください。詳細については、下記の「注意」セクションを参照してください。引数 &lt;code&gt;c&lt;/code&gt; は係数の配列です。各軸に沿って低次から高次まで。たとえば、[1,2,3]は多項式 &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; 表します一方、[[1,2]、[1,2]]は、axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合、 &lt;code&gt;1 + 1*x + 2*y + 2*x*y&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="034f18e1309d3af00dcecfcccba40ebc63a2dfc0" translate="yes" xml:space="preserve">
          <source>Returns the polynomial resulting from the sum of two input polynomials. Each input must be either a poly1d object or a 1D sequence of polynomial coefficients, from highest to lowest degree.</source>
          <target state="translated">2つの入力多項式の和から得られる多項式を返します。それぞれの入力は、 poly1d オブジェクト、または多項式係数の1次元シーケンスのいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="45d74340cddf0d729cebcaf8b2e4de65ebcd90b5" translate="yes" xml:space="preserve">
          <source>Returns the product of two Chebyshev series &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt;.</source>
          <target state="translated">2つのチェビシェフシリーズ &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt; の積を返します。引数は、最小の「項」から最大までの係数のシーケンスです。たとえば、[1,2,3]は系列 &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="90407e92cc9ae107c5141f61cdb115c9772b8d39" translate="yes" xml:space="preserve">
          <source>Returns the product of two Hermite series &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのHermiteシリーズ &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt; の積を返します。引数は、最小の「項」から最大までの係数のシーケンスです。たとえば、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="55b4851756e2216b22eca249f48dd9a0645c91af" translate="yes" xml:space="preserve">
          <source>Returns the product of two Laguerre series &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのラゲールシリーズ &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt; の積を返します。引数は、最小の「項」から最大までの係数のシーケンスです。たとえば、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="ed3d1969be746bdc953ad6a50b9f5f53423cb887" translate="yes" xml:space="preserve">
          <source>Returns the product of two Legendre series &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのルジャンドル系列 &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt; の積を返します。引数は、最小の「項」から最大までの係数のシーケンスです。たとえば、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="2f47f44fd535dccc1d40014124d8bffd47f6c24e" translate="yes" xml:space="preserve">
          <source>Returns the product of two polynomials &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order term to highest, e.g., [1,2,3] represents the polynomial &lt;code&gt;1 + 2*x + 3*x**2.&lt;/code&gt;</source>
          <target state="translated">2つの多項式 &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt; の積を返します。引数は、最低次の項から最高次の項までの係数のシーケンスです。たとえば、[1,2,3]は、多項式 &lt;code&gt;1 + 2*x + 3*x**2.&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="fca0e8567184e99925ad16f6cb0ea2e6f81257a6" translate="yes" xml:space="preserve">
          <source>Returns the pseudo-Vandermonde matrix of degree &lt;code&gt;deg&lt;/code&gt; and sample points &lt;code&gt;x&lt;/code&gt;. The pseudo-Vandermonde matrix is defined by</source>
          <target state="translated">次数 &lt;code&gt;deg&lt;/code&gt; およびサンプルポイント &lt;code&gt;x&lt;/code&gt; の疑似ヴァンダーモンド行列を返します。疑似ヴァンダーモンド行列は、</target>
        </trans-unit>
        <trans-unit id="3ba4324de2b007c57da9981c59bca1e95d6295d5" translate="yes" xml:space="preserve">
          <source>Returns the pseudo-Vandermonde matrix of degrees &lt;code&gt;deg&lt;/code&gt; and sample points &lt;code&gt;(x, y)&lt;/code&gt;. The pseudo-Vandermonde matrix is defined by</source>
          <target state="translated">度 &lt;code&gt;deg&lt;/code&gt; とサンプルポイント &lt;code&gt;(x, y)&lt;/code&gt; の疑似ヴァンダーモンド行列を返します。疑似ヴァンダーモンド行列は、</target>
        </trans-unit>
        <trans-unit id="0505a85f1546cf212b05a18cdbfac51ab8f0edab" translate="yes" xml:space="preserve">
          <source>Returns the pseudo-Vandermonde matrix of degrees &lt;code&gt;deg&lt;/code&gt; and sample points &lt;code&gt;(x, y, z)&lt;/code&gt;. If &lt;code&gt;l, m, n&lt;/code&gt; are the given degrees in &lt;code&gt;x, y, z&lt;/code&gt;, then Hehe pseudo-Vandermonde matrix is defined by</source>
          <target state="translated">度 &lt;code&gt;deg&lt;/code&gt; とサンプルポイント &lt;code&gt;(x, y, z)&lt;/code&gt; の疑似ヴァンダーモンド行列を返します。場合 &lt;code&gt;l, m, n&lt;/code&gt; に与えられる度で &lt;code&gt;x, y, z&lt;/code&gt; 、次いで、ヘヘ擬似Vandermonde行列は、によって定義されます。</target>
        </trans-unit>
        <trans-unit id="dcba6a788557e27d1600c939b7e0e6bcee3df211" translate="yes" xml:space="preserve">
          <source>Returns the pseudo-Vandermonde matrix of degrees &lt;code&gt;deg&lt;/code&gt; and sample points &lt;code&gt;(x, y, z)&lt;/code&gt;. If &lt;code&gt;l, m, n&lt;/code&gt; are the given degrees in &lt;code&gt;x, y, z&lt;/code&gt;, then The pseudo-Vandermonde matrix is defined by</source>
          <target state="translated">度 &lt;code&gt;deg&lt;/code&gt; とサンプルポイント &lt;code&gt;(x, y, z)&lt;/code&gt; の疑似ヴァンダーモンド行列を返します。場合 &lt;code&gt;l, m, n&lt;/code&gt; に与えられる度で &lt;code&gt;x, y, z&lt;/code&gt; 、次いで、擬似Vandermonde行列は、によって定義されます。</target>
        </trans-unit>
        <trans-unit id="a0dfe6f7c95bdb4b62f68b53ef4ef0355bd56e7e" translate="yes" xml:space="preserve">
          <source>Returns the q-th percentile(s) of the array elements.</source>
          <target state="translated">配列要素の q 番目のパーセンタイルを返します。</target>
        </trans-unit>
        <trans-unit id="03c4335c3eca743136a785e996958b7d4dd32720" translate="yes" xml:space="preserve">
          <source>Returns the qth percentile(s) of the array elements.</source>
          <target state="translated">配列要素のq番目のパーセンタイル(複数可)を返します。</target>
        </trans-unit>
        <trans-unit id="b71204c4bcdfc548b2d775b43fa93febb5cb5c86" translate="yes" xml:space="preserve">
          <source>Returns the quotient and remainder of polynomial division.</source>
          <target state="translated">多項式除算の商と余りを返します。</target>
        </trans-unit>
        <trans-unit id="5539394ed1f9159fbcd5498b07cf3011c1c6013c" translate="yes" xml:space="preserve">
          <source>Returns the quotient-with-remainder of two Chebyshev series &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt;.</source>
          <target state="translated">2つのチェビシェフシリーズ &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt; の余りの商を返します。引数は、最低の「項」から最高までの係数のシーケンスです。たとえば、[1,2,3]は系列 &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="3c9b32eb3913036ab4848efb8a09e03a2b485c78" translate="yes" xml:space="preserve">
          <source>Returns the quotient-with-remainder of two Hermite series &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのエルミート系列 &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt; の余りの商を返します。引数は最低次の「項」から最高までの係数のシーケンスです。たとえば、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="1cfe346de71f03469f33afec6b946010bed57838" translate="yes" xml:space="preserve">
          <source>Returns the quotient-with-remainder of two Laguerre series &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのラゲール系列 &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt; の余りの商を返します。引数は最低次の「項」から最高までの係数のシーケンスです。たとえば、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="3fb4329aa6f46cc7b9b33ece62fbf989fb8a3eff" translate="yes" xml:space="preserve">
          <source>Returns the quotient-with-remainder of two Legendre series &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのルジャンドル系列 &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt; の余りの商を返します。引数は最低次の「項」から最高までの係数のシーケンスです。たとえば、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="a3689b38a43f155518ee2dc202a48e26e60d74e0" translate="yes" xml:space="preserve">
          <source>Returns the quotient-with-remainder of two polynomials &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order term to highest, e.g., [1,2,3] represents &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt;.</source>
          <target state="translated">2つの多項式 &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt; の余りの商を返します。引数は、最低次の項から最高次の項までの係数のシーケンスです。たとえば、[1,2,3]は &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="31d7cd04614c66cfb2662662ac7b45a0813921ba" translate="yes" xml:space="preserve">
          <source>Returns the rank of an array &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">配列 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; のランクを返します。</target>
        </trans-unit>
        <trans-unit id="9c102b720ec8b29fab2892f9d407b1e75bc2dddf" translate="yes" xml:space="preserve">
          <source>Returns the real valued &lt;code&gt;n&lt;/code&gt;-point inverse discrete Fourier transform of &lt;code&gt;a&lt;/code&gt;, where &lt;code&gt;a&lt;/code&gt; contains the non-negative frequency terms of a Hermitian-symmetric sequence. &lt;code&gt;n&lt;/code&gt; is the length of the result, not the input.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; の実際の &lt;code&gt;n&lt;/code&gt; 点逆離散フーリエ変換を返します。ここで &lt;code&gt;a&lt;/code&gt; にはエルミート対称シーケンスの非負の周波数項が含まれています。 &lt;code&gt;n&lt;/code&gt; は結果の長さであり、入力ではありません。</target>
        </trans-unit>
        <trans-unit id="14414e7247ed656c7f8ecc2881b9ef6b21189dbd" translate="yes" xml:space="preserve">
          <source>Returns the reference count of any Python object.</source>
          <target state="translated">任意のPythonオブジェクトの参照数を返します。</target>
        </trans-unit>
        <trans-unit id="35861d05afccf11b14d65be82364638d5da5f22b" translate="yes" xml:space="preserve">
          <source>Returns the result of running the tests as a &lt;code&gt;nose.result.TextTestResult&lt;/code&gt; object.</source>
          <target state="translated">テストを実行した結果を &lt;code&gt;nose.result.TextTestResult&lt;/code&gt; オブジェクトとして返します。</target>
        </trans-unit>
        <trans-unit id="753ce26de906bfa5b9b21f679e32ea77e8a28bf0" translate="yes" xml:space="preserve">
          <source>Returns the result of: &lt;a href=&quot;#r3b2e08cf0480-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">次の結果を返します：&lt;a href=&quot;#r3b2e08cf0480-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bbfd044511fa063c6d57e2098157507a22a9cd2d" translate="yes" xml:space="preserve">
          <source>Returns the result of: &lt;a href=&quot;#r3b2e08cf0480-g&quot; id=&quot;id1&quot;&gt;[G]&lt;/a&gt;</source>
          <target state="translated">次の結果を返します：&lt;a href=&quot;#r3b2e08cf0480-g&quot; id=&quot;id1&quot;&gt;[G]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9dc97b6ac9048eac7422cd909b32da73491e7ee0" translate="yes" xml:space="preserve">
          <source>Returns the series coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;1*He_0 + 2*He_1 + 3*He_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*He_0(x)*He_0(y) + 1*He_1(x)*He_0(y)
+ 2*He_0(x)*He_1(y) + 2*He_1(x)*He_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 沿って &lt;code&gt;m&lt;/code&gt; 回微分された系列係数 &lt;code&gt;c&lt;/code&gt; を返します。各反復で、結果に &lt;code&gt;scl&lt;/code&gt; が乗算されます（スケーリング係数は、変数の線形変化で使用されます）。引数 &lt;code&gt;c&lt;/code&gt; は、各軸に沿った低次から高次までの係数の配列です。たとえば、[1,2,3]は、シリーズ[ &lt;code&gt;1*He_0 + 2*He_1 + 3*He_2&lt;/code&gt; ]を表し、[[1,2]、[1 、2]]は、 &lt;code&gt;1*He_0(x)*He_0(y) + 1*He_1(x)*He_0(y) + 2*He_0(x)*He_1(y) + 2*He_1(x)*He_1(y)&lt;/code&gt; axis = 0が &lt;code&gt;x&lt;/code&gt; で、axis = 1が &lt;code&gt;y&lt;/code&gt; の場合。</target>
        </trans-unit>
        <trans-unit id="33c79d5bd1b828fe56fff7ab34262c86ebedb4db" translate="yes" xml:space="preserve">
          <source>Returns the series representing the basis polynomial of degree &lt;code&gt;deg&lt;/code&gt;.</source>
          <target state="translated">次数 &lt;code&gt;deg&lt;/code&gt; の基底多項式を表す系列を返します。</target>
        </trans-unit>
        <trans-unit id="1d1459d65cb63a34507944e05e2b25e7a7d6d497" translate="yes" xml:space="preserve">
          <source>Returns the series that interpolates &lt;code&gt;func&lt;/code&gt; at the Chebyshev points of the first kind scaled and shifted to the &lt;a href=&quot;numpy.polynomial.chebyshev.chebyshev.domain#numpy.polynomial.chebyshev.Chebyshev.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt;. The resulting series tends to a minmax approximation of &lt;code&gt;func&lt;/code&gt; when the function is continuous in the domain.</source>
          <target state="translated">スケーリングされて&lt;a href=&quot;numpy.polynomial.chebyshev.chebyshev.domain#numpy.polynomial.chebyshev.Chebyshev.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;シフトされた第1種のチェビシェフポイントで &lt;code&gt;func&lt;/code&gt; を補間する系列を返します。結果として得られる系列は、関数がドメイン内で連続である場合、 &lt;code&gt;func&lt;/code&gt; の minmax近似になる傾向があります。</target>
        </trans-unit>
        <trans-unit id="243274d38f80f8996cef60e40896c01773cf5d58" translate="yes" xml:space="preserve">
          <source>Returns the size of an array &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">配列 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; のサイズを返します。</target>
        </trans-unit>
        <trans-unit id="889a78eaaf95eb1635de57e9289a6f27c0493f50" translate="yes" xml:space="preserve">
          <source>Returns the sorted unique elements of an array. There are three optional outputs in addition to the unique elements:</source>
          <target state="translated">ソートされた配列の一意の要素を返します。一意な要素の他に、オプションで 3 つの出力があります。</target>
        </trans-unit>
        <trans-unit id="1328cab3aac8e2dbdd547945290ba74e96f6f7e8" translate="yes" xml:space="preserve">
          <source>Returns the square identity matrix of given size.</source>
          <target state="translated">指定されたサイズの正方行列を返します。</target>
        </trans-unit>
        <trans-unit id="861999a4d2797ac1402d6d7712689a58393d7d9b" translate="yes" xml:space="preserve">
          <source>Returns the standard deviation of the array elements along given axis.</source>
          <target state="translated">指定した軸に沿った配列要素の標準偏差を返します。</target>
        </trans-unit>
        <trans-unit id="cf3992f1b6b548da7f78877dbf11faaf6ecdfed3" translate="yes" xml:space="preserve">
          <source>Returns the standard deviation, a measure of the spread of a distribution, of the array elements. The standard deviation is computed for the flattened array by default, otherwise over the specified axis.</source>
          <target state="translated">配列要素の標準偏差(分布の広がりの尺度)を返します。標準偏差は、デフォルトでは平坦化された配列に対して計算され、そうでない場合は指定された軸に対して計算されます。</target>
        </trans-unit>
        <trans-unit id="63aef6e94d92ea777f2481ab542787c8497e5843" translate="yes" xml:space="preserve">
          <source>Returns the standard deviation, a measure of the spread of a distribution, of the non-NaN array elements. The standard deviation is computed for the flattened array by default, otherwise over the specified axis.</source>
          <target state="translated">非NaN配列要素の標準偏差(分布の広がりの尺度)を返します。標準偏差は、デフォルトでは平坦化された配列に対して計算され、そうでない場合は指定された軸に対して計算されます。</target>
        </trans-unit>
        <trans-unit id="a8a9d452b0a14e574110fec9c963939343b0a696" translate="yes" xml:space="preserve">
          <source>Returns the sum of the matrix elements, along the given axis.</source>
          <target state="translated">指定された軸に沿った行列の要素の合計を返します。</target>
        </trans-unit>
        <trans-unit id="56df12876e3ef3c2d6402f1711e1dd9e201b9d47" translate="yes" xml:space="preserve">
          <source>Returns the sum of two Chebyshev series &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients ordered from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt;.</source>
          <target state="translated">2つのチェビシェフシリーズ &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt; の合計を返します。引数は、最低次の項から最高次の順序で並べられた係数のシーケンスです。つまり、[1,2,3]は系列 &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="9f8d90e8f5058c85c858181fdd853bb681b639b1" translate="yes" xml:space="preserve">
          <source>Returns the sum of two Hermite series &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients ordered from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのHermiteシリーズ &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt; の合計を返します。引数は、最低次の項から最高次の順序で並べられた係数のシーケンスです。つまり、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="e343afc4ec403ddb4a07a175db27c8b934548217" translate="yes" xml:space="preserve">
          <source>Returns the sum of two Laguerre series &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients ordered from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのラゲール系列 &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt; の合計を返します。引数は、最低次の項から最高次の順序で並べられた係数のシーケンスです。つまり、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="08ebba99b5e682337f429d0518b0a4b4683cc9ba" translate="yes" xml:space="preserve">
          <source>Returns the sum of two Legendre series &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients ordered from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">2つのルジャンドル系列 &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt; の合計を返します。引数は、最低次の項から最高次の順序で並べられた係数のシーケンスです。つまり、[1,2,3]は系列 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="e4d3aa31dd6cc24bc5142adf29bfe7ab68a96cdb" translate="yes" xml:space="preserve">
          <source>Returns the sum of two polynomials &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order term to highest, i.e., [1,2,3] represents the polynomial &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt;.</source>
          <target state="translated">2つの多項式 &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt; の合計を返します。引数は、最低次の項から最高次までの係数のシーケンスです。つまり、[1,2,3]は、多項式 &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; 表します。</target>
        </trans-unit>
        <trans-unit id="555517df976270d26d220b5abd37ae3b29e81e02" translate="yes" xml:space="preserve">
          <source>Returns the total number of bytes consumed by the array.</source>
          <target state="translated">配列が消費したバイト数の合計を返します。</target>
        </trans-unit>
        <trans-unit id="08a3eedbbc4447295f4b3ab0817e2c8e44d52e17" translate="yes" xml:space="preserve">
          <source>Returns the total size (in number of elements) of the array.</source>
          <target state="translated">配列の合計サイズ(要素数)を返します。</target>
        </trans-unit>
        <trans-unit id="c0122f2e064e120539e47c2e76d79dd0769a6974" translate="yes" xml:space="preserve">
          <source>Returns the transpose of the matrix.</source>
          <target state="translated">行列の転置を返します。</target>
        </trans-unit>
        <trans-unit id="8103951f3b101ed891e0245214697d04e8671403" translate="yes" xml:space="preserve">
          <source>Returns the type that results from applying the NumPy type promotion rules to the arguments.</source>
          <target state="translated">NumPy型推進規則を引数に適用した結果の型を返します。</target>
        </trans-unit>
        <trans-unit id="8fdf7db87570a7f6c52908fc3ad9fbec4db3a6e1" translate="yes" xml:space="preserve">
          <source>Returns the type that results from applying the numpy type promotion rules to the arguments.</source>
          <target state="translated">引数にnumpy型推進規則を適用した結果の型を返します。</target>
        </trans-unit>
        <trans-unit id="9fcb970733afa5b097af33d9de77b7cbac4cb640" translate="yes" xml:space="preserve">
          <source>Returns the underlying data, as a view of the masked array.</source>
          <target state="translated">マスクされた配列のビューとして、基礎となるデータを返します。</target>
        </trans-unit>
        <trans-unit id="fed561673c346b9f16c4ec4d4ff08b3f280f244d" translate="yes" xml:space="preserve">
          <source>Returns the value of x with the sign bit copied from y. Works for any value, including Inf and NaN.</source>
          <target state="translated">yから符号ビットをコピーしたxの値を返します。</target>
        </trans-unit>
        <trans-unit id="16099bcc078e16d07a4ae75c8b6b654b6332317e" translate="yes" xml:space="preserve">
          <source>Returns the variance of the array elements, a measure of the spread of a distribution. The variance is computed for the flattened array by default, otherwise over the specified axis.</source>
          <target state="translated">これは、分布の広がりを表す指標です。分散は、デフォルトでは平坦化された配列に対して計算され、そうでない場合は指定された軸に対して計算されます。</target>
        </trans-unit>
        <trans-unit id="cb18ae95c5e35204046cc09e398511056be63bc4" translate="yes" xml:space="preserve">
          <source>Returns the variance of the array elements, along given axis.</source>
          <target state="translated">指定した軸に沿った配列要素の分散を返します。</target>
        </trans-unit>
        <trans-unit id="c3e9acb4bd3a02b91f54dfa17e1b2f763becd3b7" translate="yes" xml:space="preserve">
          <source>Returns the variance of the matrix elements, along the given axis.</source>
          <target state="translated">指定された軸に沿った行列要素の分散を返します。</target>
        </trans-unit>
        <trans-unit id="b9b884a60c7fe7f37e25842c08ff53b680b391dc" translate="yes" xml:space="preserve">
          <source>Returns the x, y values at &lt;code&gt;n&lt;/code&gt; linearly spaced points across the domain. Here y is the value of the polynomial at the points x. By default the domain is the same as that of the series instance. This method is intended mostly as a plotting aid.</source>
          <target state="translated">ドメイン全体で線形に等間隔に配置された &lt;code&gt;n&lt;/code&gt; 個のポイントのx、y値を返します。ここで、yは点xでの多項式の値です。デフォルトでは、ドメインはシリーズインスタンスのドメインと同じです。この方法は、主に作図補助として使用することを目的としています。</target>
        </trans-unit>
        <trans-unit id="50c294f4eec79060386173bdf27e8490ba02b492" translate="yes" xml:space="preserve">
          <source>Returns true for each element if all cased characters in the string are lowercase and there is at least one cased character, false otherwise.</source>
          <target state="translated">文字列内のすべての大文字小文字が小文字であり、少なくとも 1 つの大文字小文字がある場合は各要素に対して true を返し、そうでない場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="753528b5ab5f175f46668650b8bacacaa16504ef" translate="yes" xml:space="preserve">
          <source>Returns true for each element if all cased characters in the string are uppercase and there is at least one character, false otherwise.</source>
          <target state="translated">文字列内のすべての大文字小文字が大文字で、1文字以上ある場合は各要素に対してtrueを返し、そうでない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="4bfbeb6b6c0b416ee8e5cf4faf5b53f0aadf96a8" translate="yes" xml:space="preserve">
          <source>Returns true for each element if all characters in the string are alphabetic and there is at least one character, false otherwise.</source>
          <target state="translated">文字列内のすべての文字がアルファベットで、少なくとも 1 文字ある場合は各要素に対して true を返し、そうでない場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="cf7fa053bb092cbadbd2af9aae8682af88372ecd" translate="yes" xml:space="preserve">
          <source>Returns true for each element if all characters in the string are alphanumeric and there is at least one character, false otherwise.</source>
          <target state="translated">文字列内のすべての文字が英数字で、少なくとも 1 文字以上ある場合は各要素に対して true を返し、そうでない場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="9557a4d0e93669375c528934eeb8740504713415" translate="yes" xml:space="preserve">
          <source>Returns true for each element if all characters in the string are digits and there is at least one character, false otherwise.</source>
          <target state="translated">文字列内のすべての文字が数字で、少なくとも1文字の場合は各要素に対して真を返し、そうでない場合は偽を返します。</target>
        </trans-unit>
        <trans-unit id="66cb6901402641740a602c53764c017cb120ceda" translate="yes" xml:space="preserve">
          <source>Returns true for each element if the element is a titlecased string and there is at least one character, false otherwise.</source>
          <target state="translated">各要素がタイトルベースの文字列であり、少なくとも 1 文字がある場合は true を返し、そうでない場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="e9518f21664e4afe6128d00ac71f7d1491d8fae5" translate="yes" xml:space="preserve">
          <source>Returns true for each element if there are only whitespace characters in the string and there is at least one character, false otherwise.</source>
          <target state="translated">文字列の中に空白文字しかなく、1文字以上ある場合は各要素に対してtrueを返し、そうでない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="bc23eaf8decd7d27362fe8a53e892bd8e30c837d" translate="yes" xml:space="preserve">
          <source>Returns two objects, a 1-D array containing the eigenvalues of &lt;code&gt;a&lt;/code&gt;, and a 2-D square array or matrix (depending on the input type) of the corresponding eigenvectors (in columns).</source>
          <target state="translated">戻り二つのオブジェクト、の固有値を含む1次元配列、および（列）に対応する固有ベクトルの2次元正方形アレイ又はマトリクス（入力タイプに応じて）。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8df936a304bc9cb4981c0751ad709ae03295d24c" translate="yes" xml:space="preserve">
          <source>Returns x1 * 2**x2, element-wise.</source>
          <target state="translated">要素ごとに x1*2**x2 を返します。</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="0de06e6a3f0a0e4f05c1785f0626100e3a7e7650" translate="yes" xml:space="preserve">
          <source>Reusing a C library from another package</source>
          <target state="translated">他のパッケージからCライブラリを再利用する</target>
        </trans-unit>
        <trans-unit id="23561a6432b472e5926c67bf018fd70d987f97d0" translate="yes" xml:space="preserve">
          <source>Reusing npymath</source>
          <target state="translated">npymathの再利用</target>
        </trans-unit>
        <trans-unit id="6af530c175f99c7b69fc2fd9cfe2f192506a1f94" translate="yes" xml:space="preserve">
          <source>Reverse or permute the axes of an array; returns the modified array.</source>
          <target state="translated">配列の軸を逆にしたり,パーミュートしたりします.</target>
        </trans-unit>
        <trans-unit id="231aa4b8807deb9df59f688eef9ddc9a775ad8bb" translate="yes" xml:space="preserve">
          <source>Reverse the order of elements in an array along the given axis.</source>
          <target state="translated">指定された軸に沿って配列の要素の順序を逆にします.</target>
        </trans-unit>
        <trans-unit id="8d2b78e53e90814f69a7d711d93f1d0ac0ff8bbf" translate="yes" xml:space="preserve">
          <source>Reversing along axis 0 (the row axis) yields</source>
          <target state="translated">0軸(行軸)に沿って反転させると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="05845515ff13c14616adf9a6a234f41d7f1cb563" translate="yes" xml:space="preserve">
          <source>Review process:</source>
          <target state="translated">レビューのプロセス。</target>
        </trans-unit>
        <trans-unit id="9a2c8a9684a510457d0b13d88ff56372c650e6ee" translate="yes" xml:space="preserve">
          <source>Reviewer Checklist</source>
          <target state="translated">査読者チェックリスト</target>
        </trans-unit>
        <trans-unit id="fcf1f2d05ab28c4583dc42c5672beb7010342235" translate="yes" xml:space="preserve">
          <source>Reviewer Guidelines</source>
          <target state="translated">査読者ガイドライン</target>
        </trans-unit>
        <trans-unit id="44c08f9ef9427cfe7adf2cb2e727c85659041264" translate="yes" xml:space="preserve">
          <source>Reviewers (the other developers and interested community members) will write inline and/or general comments on your Pull Request (PR) to help you improve its implementation, documentation and style. Every single developer working on the project has their code reviewed, and we&amp;rsquo;ve come to see it as friendly conversation from which we all learn and the overall code quality benefits. Therefore, please don&amp;rsquo;t let the review discourage you from contributing: its only aim is to improve the quality of project, not to criticize (we are, after all, very grateful for the time you&amp;rsquo;re donating!).</source>
          <target state="translated">レビューア（他の開発者および関心のあるコミュニティメンバー）は、プルリクエスト（PR）にインラインおよび/または一般的なコメントを書き込んで、実装、ドキュメント、およびスタイルの改善に役立てます。プロジェクトに取り組んでいるすべての開発者はコードをレビューし、それを私たち全員が学ぶ友好的な会話であり、全体的なコード品質の利点であると見なすようになりました。したがって、レビューが貢献を思いとどまらせないようにしてください。その唯一の目的は、プロジェクトの品質を向上させることであり、批判することではありません（結局のところ、寄付してくださったことに非常に感謝しています！）。</target>
        </trans-unit>
        <trans-unit id="c2a014ce96177152b88c54c05c7877b3c332f568" translate="yes" xml:space="preserve">
          <source>Reviewers (the other developers and interested community members) will write inline and/or general comments on your Pull Request (PR) to help you improve its implementation, documentation and style. Every single developer working on the project has their code reviewed, and we&amp;rsquo;ve come to see it as friendly conversation from which we all learn and the overall code quality benefits. Therefore, please don&amp;rsquo;t let the review discourage you from contributing: its only aim is to improve the quality of project, not to criticize (we are, after all, very grateful for the time you&amp;rsquo;re donating!). See our &lt;a href=&quot;reviewer_guidelines#reviewer-guidelines&quot;&gt;Reviewer Guidelines&lt;/a&gt; for more information.</source>
          <target state="translated">レビューア（他の開発者および関心のあるコミュニティメンバー）は、プルリクエスト（PR）にインラインおよび/または一般的なコメントを書き込んで、実装、ドキュメント、およびスタイルの改善に役立てます。プロジェクトに取り組んでいるすべての開発者はコードをレビューし、それを私たち全員が学ぶ友好的な会話であり、全体的なコード品質の利点であると見なすようになりました。したがって、レビューで貢献を思いとどまらせないでください。その唯一の目的は、プロジェクトの品質を向上させることであり、批判することではありません（結局のところ、寄付してくださったことに感謝しています）。詳細については、&lt;a href=&quot;reviewer_guidelines#reviewer-guidelines&quot;&gt;レビュー担当者のガイドライン&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b1944a28683cb8c67a1213a25a8b7ed2746e566c" translate="yes" xml:space="preserve">
          <source>Reviewing open pull requests (PRs) helps move the project forward. We encourage people outside the project to get involved as well; it&amp;rsquo;s a great way to get familiar with the codebase.</source>
          <target state="translated">オープンプルリクエスト（PR）を確認すると、プロジェクトを前進させるのに役立ちます。プロジェクト外の人にも参加することをお勧めします。これは、コードベースに慣れるための優れた方法です。</target>
        </trans-unit>
        <trans-unit id="12f0b8976280b3a478cdfcfdf420378ad0d6ee0d" translate="yes" xml:space="preserve">
          <source>Reviews can come from outside the NumPy team &amp;ndash; we welcome contributions from domain experts (for instance, &lt;code&gt;linalg&lt;/code&gt; or &lt;code&gt;fft&lt;/code&gt;) or maintainers of other projects. You do not need to be a NumPy maintainer (a NumPy team member with permission to merge a PR) to review.</source>
          <target state="translated">レビューはNumPyチームの外部から行うことができます。ドメインの専門家（たとえば、 &lt;code&gt;linalg&lt;/code&gt; や &lt;code&gt;fft&lt;/code&gt; ）または他のプロジェクトのメンテナーからの貢献を歓迎します。レビューするために、NumPyメンテナー（PRをマージする権限を持つNumPyチームメンバー）である必要はありません。</target>
        </trans-unit>
        <trans-unit id="56e5177db6b61a0abc1a51eb3847bdae69e9cec0" translate="yes" xml:space="preserve">
          <source>Rewrite the commit message for &lt;code&gt;13d7934&lt;/code&gt; to something more sensible.</source>
          <target state="translated">&lt;code&gt;13d7934&lt;/code&gt; のコミットメッセージをもっと賢明なものに書き直してください。</target>
        </trans-unit>
        <trans-unit id="0a9995163dd5d79353d40fc664acd71a2d21ad21" translate="yes" xml:space="preserve">
          <source>Rewriting commit history</source>
          <target state="translated">コミット履歴の書き換え</target>
        </trans-unit>
        <trans-unit id="e98e658c19c9f301dd9e3485679871cb4ee5e57f" translate="yes" xml:space="preserve">
          <source>Right-hand tensor, which can be of any shape.</source>
          <target state="translated">右手のテンソルで、どのような形でもよい。</target>
        </trans-unit>
        <trans-unit id="ed6a870cf722e4c806fc7839a0d6357be9862122" translate="yes" xml:space="preserve">
          <source>Right-most separator to split each element in array.</source>
          <target state="translated">配列の各要素を分割する右端の区切り文字。</target>
        </trans-unit>
        <trans-unit id="7220212e40671919000e3bf88fe1b3c9fdb58d86" translate="yes" xml:space="preserve">
          <source>Robust (resilient to outliers) estimator that takes into account data variability and data size.</source>
          <target state="translated">データの変動性とデータサイズを考慮に入れたロバストな(外れ値に強い)推定器。</target>
        </trans-unit>
        <trans-unit id="632fe7c40d78f157a979c1254b96d791cf9757c5" translate="yes" xml:space="preserve">
          <source>Roll array elements along a given axis.</source>
          <target state="translated">指定された軸に沿って配列要素をロールします.</target>
        </trans-unit>
        <trans-unit id="f3f0226b8f652356fa69f1458fcf0dac541d2f26" translate="yes" xml:space="preserve">
          <source>Roll the elements of an array by a number of positions along a given axis.</source>
          <target state="translated">配列の要素を指定された軸に沿っていくつかの位置で転がします.</target>
        </trans-unit>
        <trans-unit id="e111e906c0921c62bf2e9cb93a9ad178fda871c0" translate="yes" xml:space="preserve">
          <source>Roll the specified axis backwards, until it lies in a given position.</source>
          <target state="translated">指定された軸を、指定された位置になるまで後方に回転させます。</target>
        </trans-unit>
        <trans-unit id="d98b0ca605945d95c50600bf91067a279fbd44fc" translate="yes" xml:space="preserve">
          <source>Roll two six sided dice 1000 times and sum the results:</source>
          <target state="translated">六角形のサイコロを2つ1000回転がし、結果を合計します。</target>
        </trans-unit>
        <trans-unit id="5fcb398cc910717cb25001dcf54232455707365a" translate="yes" xml:space="preserve">
          <source>Roots:</source>
          <target state="translated">Roots:</target>
        </trans-unit>
        <trans-unit id="bb153005d9e21d383a2c6e3be0c44b1fe3a63a2d" translate="yes" xml:space="preserve">
          <source>Rotate an array by 90 degrees in the plane specified by axes.</source>
          <target state="translated">配列を軸で指定した平面内で90度回転させます。</target>
        </trans-unit>
        <trans-unit id="85a259a41b2e5b39d4b06f8e1a5fe18db3ab0c4b" translate="yes" xml:space="preserve">
          <source>Rotate array counterclockwise.</source>
          <target state="translated">アレイを反時計回りに回転させます。</target>
        </trans-unit>
        <trans-unit id="b7ab8ec584238c82a5212e48cb3759a55758f2a7" translate="yes" xml:space="preserve">
          <source>Rotation direction is from the first towards the second axis.</source>
          <target state="translated">回転方向は、第1の軸から第2の軸に向かう方向である。</target>
        </trans-unit>
        <trans-unit id="88de8f5e18fe62876391bb0651faeb2b2013dd11" translate="yes" xml:space="preserve">
          <source>Rough equivalents</source>
          <target state="translated">大まかな目安</target>
        </trans-unit>
        <trans-unit id="6ef6710278af843c63eb4804971e9e7223129ff9" translate="yes" xml:space="preserve">
          <source>Round a number to the nearest integer toward infinity.</source>
          <target state="translated">無限大に近い整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="c3e06589436e268833d1881f2f6462dd9a4c08f4" translate="yes" xml:space="preserve">
          <source>Round a number to the nearest integer toward minus infinity.</source>
          <target state="translated">マイナス無限大に向かって、最も近い整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="8bbd6fdca0872074d7ea10498d4f4539891707a4" translate="yes" xml:space="preserve">
          <source>Round an array of floats element-wise to nearest integer towards zero. The rounded values are returned as floats.</source>
          <target state="translated">フロートの配列を要素単位でゼロに近い整数に丸めます。丸められた値は、フロートとして返されます。</target>
        </trans-unit>
        <trans-unit id="00de80754bba4d0e8ba276a85eb44caf0893d44b" translate="yes" xml:space="preserve">
          <source>Round an array to the given number of decimals.</source>
          <target state="translated">配列を指定された小数に丸めます。</target>
        </trans-unit>
        <trans-unit id="0073184d9bc88d5eb76d1886770536810e5e88c8" translate="yes" xml:space="preserve">
          <source>Round elements of the array to the nearest integer.</source>
          <target state="translated">配列の要素を最も近い整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="b1202882c35083babeaf5c44663b51b79c7528ec" translate="yes" xml:space="preserve">
          <source>Round to given number of decimals</source>
          <target state="translated">小数点以下に丸める</target>
        </trans-unit>
        <trans-unit id="0435f2a63e7a6f18b43a28bac8f5340822cb081f" translate="yes" xml:space="preserve">
          <source>Round to nearest integer towards zero.</source>
          <target state="translated">ゼロに最も近い整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="905cc3792492961c10eb158788a7c9f956d57aa5" translate="yes" xml:space="preserve">
          <source>Rounding</source>
          <target state="translated">Rounding</target>
        </trans-unit>
        <trans-unit id="d42a838433b7238b0c5468d86dbc71bcd8216faf" translate="yes" xml:space="preserve">
          <source>Routine listings are encouraged, especially for large modules, for which it is hard to get a good overview of all functionality provided by looking at the source file(s) or the &lt;code&gt;__all__&lt;/code&gt; dict.</source>
          <target state="translated">特に、ソースファイルまたは &lt;code&gt;__all__&lt;/code&gt; dictを調べて提供されるすべての機能の概要を把握するのが難しい大規模なモジュールの場合は、定期的なリストを作成することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a445e5ad1fb1907481f4ddbc262ce7d8458bf4fe" translate="yes" xml:space="preserve">
          <source>Routines</source>
          <target state="translated">Routines</target>
        </trans-unit>
        <trans-unit id="f5a0442e12c879ca82d9a4ff475b0a52a67d183e" translate="yes" xml:space="preserve">
          <source>Row-major (C-style) or column-major (Fortran-style) order.</source>
          <target state="translated">行・長 (Cスタイル)または列・長 (Fortranスタイル)の順序。</target>
        </trans-unit>
        <trans-unit id="dd584b0a0a8ac0a882725b96e0c08de6a716af77" translate="yes" xml:space="preserve">
          <source>Row-major order is also known as the C order, as the C programming language uses it. New NumPy arrays are by default in row-major order.</source>
          <target state="translated">行・長順はC言語で使用されていることからC順とも呼ばれています。新しいNumPy配列はデフォルトでは行長順です。</target>
        </trans-unit>
        <trans-unit id="5b10de0c605d74957808597fe0048296ee8e401f" translate="yes" xml:space="preserve">
          <source>Rules for installation paths:</source>
          <target state="translated">設置経路のルール。</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="482c3d9df82671ce896fb7bde9617c5b2fb25b36" translate="yes" xml:space="preserve">
          <source>Run a test module.</source>
          <target state="translated">テストモジュールを実行します。</target>
        </trans-unit>
        <trans-unit id="a722234cd0b3244f81dfee69fb25192819893e0d" translate="yes" xml:space="preserve">
          <source>Run benchmarks for module using nose.</source>
          <target state="translated">noseを使ってモジュールのベンチマークを実行します。</target>
        </trans-unit>
        <trans-unit id="23cad5152fa9dd89c0311e56531d8eb651e932a8" translate="yes" xml:space="preserve">
          <source>Run doctests found in the given file.</source>
          <target state="translated">指定されたファイルで見つかったdoctestsを実行します。</target>
        </trans-unit>
        <trans-unit id="92ffa8360edea62a8d2eb5d776625e93bb4952d5" translate="yes" xml:space="preserve">
          <source>Run quietly.</source>
          <target state="translated">静かに走る。</target>
        </trans-unit>
        <trans-unit id="e2f2755270e260e0a70ee7806aac91bcec7c313d" translate="yes" xml:space="preserve">
          <source>Run tests for module using nose.</source>
          <target state="translated">noseを使ってモジュールのテストを実行します。</target>
        </trans-unit>
        <trans-unit id="b37fc50cfbc9d483e70aabf60864a7a850765478" translate="yes" xml:space="preserve">
          <source>Run tests using your favourite IDE such as &lt;a href=&quot;https://code.visualstudio.com/docs/python/testing#_enable-a-test-framework&quot;&gt;vscode&lt;/a&gt; or &lt;a href=&quot;https://www.jetbrains.com/help/pycharm/testing-your-first-python-application.html&quot;&gt;pycharm&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://code.visualstudio.com/docs/python/testing#_enable-a-test-framework&quot;&gt;vscode&lt;/a&gt;や&lt;a href=&quot;https://www.jetbrains.com/help/pycharm/testing-your-first-python-application.html&quot;&gt;pycharm&lt;/a&gt;などのお気に入りのIDEを使用してテストを実行します</target>
        </trans-unit>
        <trans-unit id="ffc431fc4dffd990bd1413637f46fc51335f2c8e" translate="yes" xml:space="preserve">
          <source>Run with extra verbosity.</source>
          <target state="translated">余分な動詞で走る。</target>
        </trans-unit>
        <trans-unit id="73989d9c59264da08a15dba21c7d58237a91f08f" translate="yes" xml:space="preserve">
          <source>Running</source>
          <target state="translated">Running</target>
        </trans-unit>
        <trans-unit id="9fccbe4ad7980d64490ede8305d6b72049acf328" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;np.shares_memory(x1, x2)&lt;/code&gt; without &lt;code&gt;max_work&lt;/code&gt; set takes around 1 minute for this case. It is possible to find problems that take still significantly longer.</source>
          <target state="translated">この場合、 &lt;code&gt;max_work&lt;/code&gt; を設定せずに &lt;code&gt;np.shares_memory(x1, x2)&lt;/code&gt; を実行すると、約1分かかります。さらにかなり時間がかかる問題を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="1544c03a8ffbebbc0c6a506abc957a597a1c13ce" translate="yes" xml:space="preserve">
          <source>Running NumPy&amp;rsquo;s test suite locally requires some additional packages, such as &lt;code&gt;pytest&lt;/code&gt; and &lt;code&gt;hypothesis&lt;/code&gt;. The additional testing dependencies are listed in &lt;code&gt;test_requirements.txt&lt;/code&gt; in the top-level directory, and can conveniently be installed with:</source>
          <target state="translated">NumPyのテストスイートをローカルで実行するには、 &lt;code&gt;pytest&lt;/code&gt; や &lt;code&gt;hypothesis&lt;/code&gt; などの追加パッケージが必要です。追加のテスト依存関係は、トップレベルディレクトリの &lt;code&gt;test_requirements.txt&lt;/code&gt; にリストされており、次のコマンドで簡単にインストールできます。</target>
        </trans-unit>
        <trans-unit id="6528715436e5d1c6eabe2ebd257332528dba3b72" translate="yes" xml:space="preserve">
          <source>Running individual test files can be useful; it&amp;rsquo;s much faster than running the whole test suite or that of a whole module (example: &lt;code&gt;np.random.test()&lt;/code&gt;). This can be done with:</source>
          <target state="translated">個々のテストファイルを実行すると便利です。テストスイート全体またはモジュール全体を実行するよりもはるかに高速です（例： &lt;code&gt;np.random.test()&lt;/code&gt; ）。これは次の方法で実行できます。</target>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="translated">テストの実行</target>
        </trans-unit>
        <trans-unit id="bff8195100b4b22ac5fb5cdcd26353a9ec88605b" translate="yes" xml:space="preserve">
          <source>Running tests from inside Python</source>
          <target state="translated">Python内部からのテスト実行</target>
        </trans-unit>
        <trans-unit id="bfaab35a824a22ed7c0f74a26346e946e0bea461" translate="yes" xml:space="preserve">
          <source>Running tests from the command line</source>
          <target state="translated">コマンドラインからのテスト実行</target>
        </trans-unit>
        <trans-unit id="84bb290eb9bcc8f74f1a78f6463a544c117ad53f" translate="yes" xml:space="preserve">
          <source>Running tests with &lt;a href=&quot;https://tox.readthedocs.io/&quot;&gt;tox&lt;/a&gt; is also supported. For example, to build NumPy and run the test suite with Python 3.7, use:</source>
          <target state="translated">&lt;a href=&quot;https://tox.readthedocs.io/&quot;&gt;toxを使用した&lt;/a&gt;テストの実行もサポートされています。たとえば、NumPyをビルドし、Python 3.7でテストスイートを実行するには、次を使用します。</target>
        </trans-unit>
        <trans-unit id="696e4c661450d7937db29b17bc26dfb494678b53" translate="yes" xml:space="preserve">
          <source>Running this from the Python interpreter produces the same answers as our native Python/NumPy code did.</source>
          <target state="translated">これをPythonインタプリタから実行すると、ネイティブのPython/NumPyコードと同じ答えが得られます。</target>
        </trans-unit>
        <trans-unit id="ccd516c7fcfbde1fe3af5b5d27edfb36eaead71f" translate="yes" xml:space="preserve">
          <source>Runtime warnings when comparing NaN numbers</source>
          <target state="translated">NaN数を比較する際のランタイム警告</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="2a9cb5b040f4dae3fe4cb250a7e3cfe66da6fdda" translate="yes" xml:space="preserve">
          <source>SFC64</source>
          <target state="translated">SFC64</target>
        </trans-unit>
        <trans-unit id="ae544b7a9d33ca4e36a0346efcf1ee33e3a251e4" translate="yes" xml:space="preserve">
          <source>SFC64 (class in numpy.random)</source>
          <target state="translated">SFC64 (numpy.random のクラス)</target>
        </trans-unit>
        <trans-unit id="c387eaab9d4aa15a891083867d719e44ab39eeb7" translate="yes" xml:space="preserve">
          <source>SFC64 - A fast generator based on random invertible mappings. Usually the fastest generator of the four. See the &lt;a href=&quot;http://pracrand.sourceforge.net/RNG_engines.txt&quot;&gt;SFC author&amp;rsquo;s page&lt;/a&gt; for (a little) more detail.</source>
          <target state="translated">SFC64-ランダムな可逆マッピングに基づく高速ジェネレーター。通常、4つの中で最も速いジェネレーター。詳細については、&lt;a href=&quot;http://pracrand.sourceforge.net/RNG_engines.txt&quot;&gt;SFCの作成者のページ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6c0159189813715cb594d6925030c6b1c554da97" translate="yes" xml:space="preserve">
          <source>SFC64 Small Fast Chaotic PRNG</source>
          <target state="translated">SFC64 小型高速カオスPRNG</target>
        </trans-unit>
        <trans-unit id="93db16809e7e08fc5b307c5dac1d071ac2ffe024" translate="yes" xml:space="preserve">
          <source>SFC64.cffi</source>
          <target state="translated">SFC64.cffi</target>
        </trans-unit>
        <trans-unit id="8c70f8e77e814d093abf0c432b09e04412d07414" translate="yes" xml:space="preserve">
          <source>SFC64.ctypes</source>
          <target state="translated">SFC64.ctypes</target>
        </trans-unit>
        <trans-unit id="c7c29743e92aa8405c74e1aec744ed96cb16b9a6" translate="yes" xml:space="preserve">
          <source>SFC64.state</source>
          <target state="translated">SFC64.state</target>
        </trans-unit>
        <trans-unit id="924c62807d3ec8e9314d143171d21220828a94aa" translate="yes" xml:space="preserve">
          <source>SIMD Optimizations</source>
          <target state="translated">SIMDの最適化</target>
        </trans-unit>
        <trans-unit id="53b6ef282f211fcee8a9cc2897135f48a3c3b8e9" translate="yes" xml:space="preserve">
          <source>SIP</source>
          <target state="translated">SIP</target>
        </trans-unit>
        <trans-unit id="cde420170ff42fbe1a561b91e2014d8eeea6ce03" translate="yes" xml:space="preserve">
          <source>SIP (used mainly in PyQT)</source>
          <target state="translated">SIP</target>
        </trans-unit>
        <trans-unit id="9fc3a42100f1ceda422a2ce1611b1ec04ca80bc0" translate="yes" xml:space="preserve">
          <source>SIP is another tool for wrapping C/C++ libraries that is Python specific and appears to have very good support for C++. Riverbank Computing developed SIP in order to create Python bindings to the QT library. An interface file must be written to generate the binding, but the interface file looks a lot like a C/C++ header file. While SIP is not a full C++ parser, it understands quite a bit of C++ syntax as well as its own special directives that allow modification of how the Python binding is accomplished. It also allows the user to define mappings between Python types and C/C++ structures and classes.</source>
          <target state="translated">SIPはC/C++ライブラリをラップするための別のツールで、Pythonに特化しており、C++を非常によくサポートしているようです。Riverbank Computingは、QTライブラリへのPythonバインディングを作成するためにSIPを開発しました。バインディングを生成するためにはインターフェースファイルを書かなければなりませんが、インターフェースファイルはC/C++のヘッダファイルのように見えます。SIPは完全なC++パーサーではありませんが、Pythonバインディングがどのように達成されるかの修正を可能にする独自の特別なディレクティブと同様に、C++の構文をかなり理解しています。また、ユーザーはPythonの型とC/C++の構造とクラスの間のマッピングを定義することができます。</target>
        </trans-unit>
        <trans-unit id="7a081af39b5090da8572fb3b42d46a96a05c3a63" translate="yes" xml:space="preserve">
          <source>SVD is usually described for the factorization of a 2D matrix</source>
          <target state="translated">SVDは通常、2次元行列の因数分解のために記述されます。</target>
        </trans-unit>
        <trans-unit id="036957d2a9081c97173c18935e3371750d2077c9" translate="yes" xml:space="preserve">
          <source>SWIG</source>
          <target state="translated">SWIG</target>
        </trans-unit>
        <trans-unit id="fd33a1a85b5ff3e23c09f90879fa657c3307f1c3" translate="yes" xml:space="preserve">
          <source>SWIG (automatic wrapper generator)</source>
          <target state="translated">SWIG(自動ラッパー生成装置</target>
        </trans-unit>
        <trans-unit id="813b0236483a0b9cf4d4001c3c4c34b1cb682035" translate="yes" xml:space="preserve">
          <source>SafeEval</source>
          <target state="translated">SafeEval</target>
        </trans-unit>
        <trans-unit id="5284a44de20af4d8fda72c52069fea5f8f3e96f7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c.NPY_ITEM_REFCOUNT&quot;&gt;&lt;code&gt;NPY_ITEM_REFCOUNT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_ITEM_REFCOUNT&quot;&gt; &lt;code&gt;NPY_ITEM_REFCOUNT&lt;/code&gt; と&lt;/a&gt;同じです。</target>
        </trans-unit>
        <trans-unit id="386093403720892978afbe80778e5bada06f7adc" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#term-column-major&quot;&gt;column-major&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#term-column-major&quot;&gt;column-majorと&lt;/a&gt;同じです。</target>
        </trans-unit>
        <trans-unit id="dcceefc8ed9ad321ab5aade3cb152019ccd856ea" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#term-row-major&quot;&gt;row-major&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#term-row-major&quot;&gt;行メジャーと&lt;/a&gt;同じです。</target>
        </trans-unit>
        <trans-unit id="b0821f9ed8f87afd42b3c108e416912412bf96c6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;numpy.ndarray.mean#numpy.ndarray.mean&quot;&gt;&lt;code&gt;ndarray.mean&lt;/code&gt;&lt;/a&gt; except that, where that returns an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;, this returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;numpy.ndarray.mean#numpy.ndarray.mean&quot;&gt; &lt;code&gt;ndarray.mean&lt;/code&gt; と&lt;/a&gt;同じですが、それが&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;を返す場合、これは&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="fe606b4476f6db839be0cc036e84badd1677b28e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;numpy.ndarray.prod#numpy.ndarray.prod&quot;&gt;&lt;code&gt;ndarray.prod&lt;/code&gt;&lt;/a&gt;, except, where that returns an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;, this returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object instead.</source>
          <target state="translated">&lt;a href=&quot;numpy.ndarray.prod#numpy.ndarray.prod&quot;&gt; &lt;code&gt;ndarray.prod&lt;/code&gt; &lt;/a&gt;と同じですが、&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;を返す場合は、代わりに&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="0d5cffd944b6e5b6c1e94c80f05651121d801fb2" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;numpy.ndarray.ptp#numpy.ndarray.ptp&quot;&gt;&lt;code&gt;ndarray.ptp&lt;/code&gt;&lt;/a&gt;, except, where that would return an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; object, this returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;numpy.ndarray.ptp#numpy.ndarray.ptp&quot;&gt; &lt;code&gt;ndarray.ptp&lt;/code&gt; &lt;/a&gt;と同じですが、&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;オブジェクトを返す場合は、&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="0643e4a16350ea173b9b0a8912b24ff1de619acc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;eps&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eps&lt;/code&gt; と同じ。</target>
        </trans-unit>
        <trans-unit id="cdf57153dc4245d12e46ba27a1830237c75c5b31" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;self.transpose()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self.transpose()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="986319e53de4261fe58310c58f31ac3908578e97" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;xmax&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;xmax&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="23ff064d357d2d9014f1d60ce928cc8ed1a10b62" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;xmin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;xmin&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="13f13898983ea35ed65c623a2897bcfed3c118b7" translate="yes" xml:space="preserve">
          <source>Same as PyArray_MatrixProduct, but store the result in &lt;em&gt;out&lt;/em&gt;. The output array must have the correct shape, type, and be C-contiguous, or an exception is raised.</source>
          <target state="translated">PyArray_MatrixProductと同じですが、結果を&lt;em&gt;outに&lt;/em&gt;格納&lt;em&gt;し&lt;/em&gt;ます。出力配列は、正しい形状、タイプ、C隣接でなければなりません。そうでないと、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="bffa078d23aed2a817ce48765fc03d00756a302d" translate="yes" xml:space="preserve">
          <source>Same kind casting in concatenate with &lt;code&gt;axis=None&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;axis=None&lt;/code&gt; と連結した同じ種類のキャスト</target>
        </trans-unit>
        <trans-unit id="bc9aa2f95bc6e9d0f3a61f32a8c597c512d3672d" translate="yes" xml:space="preserve">
          <source>Same thing without the added noise</source>
          <target state="translated">同じことをノイズなしで</target>
        </trans-unit>
        <trans-unit id="859449a4d3d6686c281e85a475b499646f970b6e" translate="yes" xml:space="preserve">
          <source>Sample spacing (inverse of the sampling rate). Defaults to 1.</source>
          <target state="translated">サンプル間隔(サンプリングレートの逆数)。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="95f068b324924127e052655006617bf7cd2be412" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a Gamma distribution with specified parameters, &lt;a href=&quot;../../generated/numpy.shape#numpy.shape&quot;&gt;&lt;code&gt;shape&lt;/code&gt;&lt;/a&gt; (sometimes designated &amp;ldquo;k&amp;rdquo;) and &lt;code&gt;scale&lt;/code&gt; (sometimes designated &amp;ldquo;theta&amp;rdquo;), where both parameters are &amp;gt; 0.</source>
          <target state="translated">サンプルは、指定されたパラメーター、&lt;a href=&quot;../../generated/numpy.shape#numpy.shape&quot;&gt; &lt;code&gt;shape&lt;/code&gt; &lt;/a&gt;（「k」と呼ばれることもある）、および &lt;code&gt;scale&lt;/code&gt; （「シータ」と呼ばれることもある）を使用してガンマ分布から抽出されます。両方のパラメーターは&amp;gt; 0です。</target>
        </trans-unit>
        <trans-unit id="e7d485289c6f6dc71bf065ec3cda03098a214efc" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a Gamma distribution with specified parameters, &lt;code&gt;shape&lt;/code&gt; (sometimes designated &amp;ldquo;k&amp;rdquo;) and &lt;code&gt;scale&lt;/code&gt; (sometimes designated &amp;ldquo;theta&amp;rdquo;), where both parameters are &amp;gt; 0.</source>
          <target state="translated">サンプルは、指定されたパラメーター、 &lt;code&gt;shape&lt;/code&gt; （「k」と呼ばれることもあります）、 &lt;code&gt;scale&lt;/code&gt; （「シータ」と呼ばれることもある）を指定したガンマ分布から描画されます。両方のパラメーターは&amp;gt; 0です。</target>
        </trans-unit>
        <trans-unit id="292bf0606e0fce9a550ce09f811744a2d52ff4b2" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a Gamma distribution with specified parameters, shape (sometimes designated &amp;ldquo;k&amp;rdquo;) and scale=1.</source>
          <target state="translated">サンプルは、指定されたパラメーター、形状（「k」と指定されることもある）、scale = 1のガンマ分布から描画されます。</target>
        </trans-unit>
        <trans-unit id="6df7e41bdf9569985c1aa43e6794e3eeb780c017" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a Zipf distribution with specified parameter &lt;code&gt;a&lt;/code&gt; &amp;gt; 1.</source>
          <target state="translated">サンプルは、指定されたパラメーター &lt;code&gt;a&lt;/code&gt; &amp;gt; 1でZipf分布から抽出されます。</target>
        </trans-unit>
        <trans-unit id="5250057b4b5fd8c546513ca9ab55476b863ba678" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a binomial distribution with specified parameters, n trials and p probability of success where n an integer &amp;gt;= 0 and p is in the interval [0,1]. (n may be input as a float, but it is truncated to an integer in use)</source>
          <target state="translated">サンプルは、指定されたパラメーター、n回の試行、p回の成功確率で指定された二項分布から抽出されます。nは整数&amp;gt; = 0で、pは[0,1]の間隔にあります。（nは浮動小数点数として入力できますが、使用中の整数に切り捨てられます）</target>
        </trans-unit>
        <trans-unit id="8dbb69b6e5ec7d08f0e2435ee1314b66a818968b" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a hypergeometric distribution with specified parameters, &lt;code&gt;ngood&lt;/code&gt; (ways to make a good selection), &lt;code&gt;nbad&lt;/code&gt; (ways to make a bad selection), and &lt;code&gt;nsample&lt;/code&gt; (number of items sampled, which is less than or equal to the sum &lt;code&gt;ngood + nbad&lt;/code&gt;).</source>
          <target state="translated">サンプルは、 &lt;code&gt;ngood&lt;/code&gt; （正しい選択を行うための方法）、 &lt;code&gt;nbad&lt;/code&gt; （悪い選択を行うための方法）、および &lt;code&gt;nsample&lt;/code&gt; （ &lt;code&gt;ngood + nbad&lt;/code&gt; の合計以下のサンプリングされた項目の数）を指定したパラメーターを持つ超幾何分布から描画されますnbad）。</target>
        </trans-unit>
        <trans-unit id="ae4da6fd6cd239d95203286c66f246b73ebba651" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a log series distribution with specified shape parameter, 0 &amp;lt; &lt;code&gt;p&lt;/code&gt; &amp;lt; 1.</source>
          <target state="translated">サンプルは、指定された形状パラメーター0 &amp;lt; &lt;code&gt;p&lt;/code&gt; &amp;lt;1の対数系列分布から抽出されます。</target>
        </trans-unit>
        <trans-unit id="2642093206fd7f788ffdf56363454a5315a935c3" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a logistic distribution with specified parameters, loc (location or mean, also median), and scale (&amp;gt;0).</source>
          <target state="translated">サンプルは、指定されたパラメーター、位置（位置または平均、中央値）、およびスケール（&amp;gt; 0）を使用してロジスティック分布から抽出されます。</target>
        </trans-unit>
        <trans-unit id="52cc2ad4beaa6917bf1214b3d49bd1103ff9199c" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a negative binomial distribution with specified parameters, &lt;code&gt;n&lt;/code&gt; successes and &lt;code&gt;p&lt;/code&gt; probability of success where &lt;code&gt;n&lt;/code&gt; is &amp;gt; 0 and &lt;code&gt;p&lt;/code&gt; is in the interval (0, 1].</source>
          <target state="translated">サンプルは、指定されたパラメーター、 &lt;code&gt;n&lt;/code&gt; 回の成功、および &lt;code&gt;p&lt;/code&gt; 回の成功確率を使用して負の二項分布から抽出されます &lt;code&gt;n&lt;/code&gt; は&amp;gt; 0で、 &lt;code&gt;p&lt;/code&gt; は区間（0、1]にあります。</target>
        </trans-unit>
        <trans-unit id="ec7898fb57c300f285ca6a3cce375169d55effe7" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a negative binomial distribution with specified parameters, &lt;code&gt;n&lt;/code&gt; successes and &lt;code&gt;p&lt;/code&gt; probability of success where &lt;code&gt;n&lt;/code&gt; is &amp;gt; 0 and &lt;code&gt;p&lt;/code&gt; is in the interval [0, 1].</source>
          <target state="translated">サンプルは、指定されたパラメーター、 &lt;code&gt;n&lt;/code&gt; 回の成功、 &lt;code&gt;p&lt;/code&gt; 回の成功確率で指定された負の二項分布から抽出されます。ここで、 &lt;code&gt;n&lt;/code&gt; は0より大きく、 &lt;code&gt;p&lt;/code&gt; は区間[0、1]にあります。</target>
        </trans-unit>
        <trans-unit id="455cf138a17b68d1fc0c1eed8d31fa7c4006171d" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a von Mises distribution with specified mode (mu) and dispersion (kappa), on the interval [-pi, pi].</source>
          <target state="translated">サンプルは、指定されたモード(mu)と分散(kappa)を持つフォン・ミーゼス分布から、区間[-pi,pi]上で描画されます。</target>
        </trans-unit>
        <trans-unit id="bb4f03b29c8e3b63c24cec04cc545cc1fd8cf5d6" translate="yes" xml:space="preserve">
          <source>Samples are drawn from an F distribution with specified parameters, &lt;code&gt;dfnum&lt;/code&gt; (degrees of freedom in numerator) and &lt;code&gt;dfden&lt;/code&gt; (degrees of freedom in denominator), where both parameters &amp;gt; 1. &lt;code&gt;nonc&lt;/code&gt; is the non-centrality parameter.</source>
          <target state="translated">サンプルは、パラメーター &lt;code&gt;dfnum&lt;/code&gt; （分子の自由度）と &lt;code&gt;dfden&lt;/code&gt; （分母の自由度）が指定されたF分布から抽出されます。ここで、両方のパラメーター&amp;gt; 1です &lt;code&gt;nonc&lt;/code&gt; は非心性パラメーターです。</target>
        </trans-unit>
        <trans-unit id="4892bdfe2aaeaf82fbd092fa5988f294bc583a61" translate="yes" xml:space="preserve">
          <source>Samples are drawn from an F distribution with specified parameters, &lt;code&gt;dfnum&lt;/code&gt; (degrees of freedom in numerator) and &lt;code&gt;dfden&lt;/code&gt; (degrees of freedom in denominator), where both parameters must be greater than zero.</source>
          <target state="translated">サンプルは、指定されたパラメーター &lt;code&gt;dfnum&lt;/code&gt; （分子の自由度）および &lt;code&gt;dfden&lt;/code&gt; （分母の自由度）を使用してF分布から描画されます。両方のパラメーターはゼロより大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="4bb08e3515ffd6aa9d5bee107026229ac17863ca" translate="yes" xml:space="preserve">
          <source>Samples are uniformly distributed over the half-open interval &lt;code&gt;[low, high)&lt;/code&gt; (includes low, but excludes high). In other words, any value within the given interval is equally likely to be drawn by &lt;a href=&quot;#numpy.random.Generator.uniform&quot;&gt;&lt;code&gt;uniform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サンプルは、ハーフオープン間隔 &lt;code&gt;[low, high)&lt;/code&gt; にわたって均一に分散されます（低は含まれますが、高は除外されます）。言い換えると、指定された間隔内の値はすべて、&lt;a href=&quot;#numpy.random.Generator.uniform&quot;&gt; &lt;code&gt;uniform&lt;/code&gt; &lt;/a&gt;によって描画される可能性が等しくなります。</target>
        </trans-unit>
        <trans-unit id="d340df89668e62b717c65799d1869523b77a34e8" translate="yes" xml:space="preserve">
          <source>Samples are uniformly distributed over the half-open interval &lt;code&gt;[low, high)&lt;/code&gt; (includes low, but excludes high). In other words, any value within the given interval is equally likely to be drawn by &lt;a href=&quot;#numpy.random.RandomState.uniform&quot;&gt;&lt;code&gt;uniform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サンプルは、ハーフオープン間隔 &lt;code&gt;[low, high)&lt;/code&gt; に均一に分散されます（低を含みますが、高を除外します）。言い換えると、指定された間隔内の任意の値は、&lt;a href=&quot;#numpy.random.RandomState.uniform&quot;&gt; &lt;code&gt;uniform&lt;/code&gt; &lt;/a&gt;に描画される可能性が等しくなります。</target>
        </trans-unit>
        <trans-unit id="f9383c411a0915a47021cbe45a442f8d0fdfdd3e" translate="yes" xml:space="preserve">
          <source>Samples are uniformly distributed over the half-open interval &lt;code&gt;[low, high)&lt;/code&gt; (includes low, but excludes high). In other words, any value within the given interval is equally likely to be drawn by &lt;a href=&quot;#numpy.random.mtrand.RandomState.uniform&quot;&gt;&lt;code&gt;uniform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サンプルは、ハーフオープン間隔 &lt;code&gt;[low, high)&lt;/code&gt; にわたって均一に分散されます（低は含まれますが、高は除外されます）。言い換えると、指定された間隔内の値はすべて、&lt;a href=&quot;#numpy.random.mtrand.RandomState.uniform&quot;&gt; &lt;code&gt;uniform&lt;/code&gt; &lt;/a&gt;によって描画される可能性が等しくなります。</target>
        </trans-unit>
        <trans-unit id="0f729eb82b77600af67af00647a1f1dad27c671a" translate="yes" xml:space="preserve">
          <source>Samples are uniformly distributed over the half-open interval &lt;code&gt;[low, high)&lt;/code&gt; (includes low, but excludes high). In other words, any value within the given interval is equally likely to be drawn by &lt;a href=&quot;#numpy.random.uniform&quot;&gt;&lt;code&gt;uniform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サンプルは、ハーフオープン間隔 &lt;code&gt;[low, high)&lt;/code&gt; に均一に分散されます（低を含みますが、高を除外します）。言い換えると、指定された間隔内の値は、&lt;a href=&quot;#numpy.random.uniform&quot;&gt; &lt;code&gt;uniform&lt;/code&gt; &lt;/a&gt;に描画される可能性が等しくなります。</target>
        </trans-unit>
        <trans-unit id="4e7b0b4ef52307f715c259bfbd9d1f9ffabf426c" translate="yes" xml:space="preserve">
          <source>Samples are uniformly distributed over the half-open interval &lt;code&gt;[low, high)&lt;/code&gt; (includes low, but excludes high). In other words, any value within the given interval is equally likely to be drawn by &lt;a href=&quot;numpy.random.uniform#numpy.random.uniform&quot;&gt;&lt;code&gt;uniform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サンプルは、ハーフオープン間隔 &lt;code&gt;[low, high)&lt;/code&gt; に均一に分散されます（低を含みますが、高を除外します）。言い換えると、指定された間隔内の値は、&lt;a href=&quot;numpy.random.uniform#numpy.random.uniform&quot;&gt; &lt;code&gt;uniform&lt;/code&gt; &lt;/a&gt;に描画される可能性が等しくなります。</target>
        </trans-unit>
        <trans-unit id="50ca6603017443460a2eb081d6d85c883218b476" translate="yes" xml:space="preserve">
          <source>Sampling random rows from a 2-D array is not possible with this function, but is possible with &lt;a href=&quot;numpy.random.generator.choice#numpy.random.Generator.choice&quot;&gt;&lt;code&gt;Generator.choice&lt;/code&gt;&lt;/a&gt; through its &lt;code&gt;axis&lt;/code&gt; keyword.</source>
          <target state="translated">2次元配列からランダムな行をサンプリングすることは、この関数では不可能ですが、&lt;a href=&quot;numpy.random.generator.choice#numpy.random.Generator.choice&quot;&gt; &lt;code&gt;Generator.choice&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;axis&lt;/code&gt; キーワードを使用することで可能です。</target>
        </trans-unit>
        <trans-unit id="8efd3024c7a674dd5f3fda767589dbd95c091015" translate="yes" xml:space="preserve">
          <source>Sampling random rows from a 2-D array is not possible with this function, but is possible with &lt;code&gt;Generator.choice&lt;/code&gt; through its &lt;code&gt;axis&lt;/code&gt; keyword.</source>
          <target state="translated">2次元配列からランダムな行をサンプリングすることは、この関数では不可能ですが、 &lt;code&gt;Generator.choice&lt;/code&gt; を使用して &lt;code&gt;axis&lt;/code&gt; キーワードを使用することで可能です。</target>
        </trans-unit>
        <trans-unit id="efc5f5a55f8bab95355af4762ab8a0048f2ab336" translate="yes" xml:space="preserve">
          <source>Sanity check:</source>
          <target state="translated">正気を確認して</target>
        </trans-unit>
        <trans-unit id="46e0b005ca82c3880442e9e9a7df96f006de258b" translate="yes" xml:space="preserve">
          <source>Save a masked array to a file in binary format.</source>
          <target state="translated">マスクされた配列をバイナリ形式でファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="911a916b79ab4bc074d4f36912c7fcb7aa4fb620" translate="yes" xml:space="preserve">
          <source>Save a single array to a binary file in NumPy format.</source>
          <target state="translated">単一の配列をNumPy形式のバイナリファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="be789a78cf6b85597d4ddf6213d2224a3e631822" translate="yes" xml:space="preserve">
          <source>Save an array to a binary file in NumPy &lt;code&gt;.npy&lt;/code&gt; format</source>
          <target state="translated">配列をバイナリファイルにNumPy &lt;code&gt;.npy&lt;/code&gt; 形式で保存します</target>
        </trans-unit>
        <trans-unit id="0ba53caacee0f1259455de36e504f82387901221" translate="yes" xml:space="preserve">
          <source>Save an array to a binary file in NumPy &lt;code&gt;.npy&lt;/code&gt; format.</source>
          <target state="translated">配列をバイナリファイルにNumPy &lt;code&gt;.npy&lt;/code&gt; 形式で保存します。</target>
        </trans-unit>
        <trans-unit id="ae01427f92b7456f5ec5bc4f8ee0ae7409a744f4" translate="yes" xml:space="preserve">
          <source>Save an array to a file as plain text.</source>
          <target state="translated">配列をプレーンテキストとしてファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="e9e71c5c94b983abfad5d7a619c58515029b9590" translate="yes" xml:space="preserve">
          <source>Save an array to a text file.</source>
          <target state="translated">配列をテキストファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="54418cd6e366b63c682bf48fc64d3d0a4bf3ce65" translate="yes" xml:space="preserve">
          <source>Save several arrays into a &lt;code&gt;.npz&lt;/code&gt; archive</source>
          <target state="translated">複数のアレイを &lt;code&gt;.npz&lt;/code&gt; アーカイブに保存します</target>
        </trans-unit>
        <trans-unit id="021c93af546584623236047204c21bba0386e331" translate="yes" xml:space="preserve">
          <source>Save several arrays into a compressed &lt;code&gt;.npz&lt;/code&gt; archive</source>
          <target state="translated">複数の配列を圧縮された &lt;code&gt;.npz&lt;/code&gt; アーカイブに保存する</target>
        </trans-unit>
        <trans-unit id="84c68241efc575af7cb341cd4262bbd68e582701" translate="yes" xml:space="preserve">
          <source>Save several arrays into a single file in compressed &lt;code&gt;.npz&lt;/code&gt; format.</source>
          <target state="translated">複数の配列を圧縮された &lt;code&gt;.npz&lt;/code&gt; 形式で1つのファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="55ff9d364225dd18ab7f086fb25a1a8994e9b5f3" translate="yes" xml:space="preserve">
          <source>Save several arrays into a single file in uncompressed &lt;code&gt;.npz&lt;/code&gt; format.</source>
          <target state="translated">複数の配列を非圧縮の &lt;code&gt;.npz&lt;/code&gt; 形式で1つのファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="5fe177b86d821a794e0add75b799a949b995201f" translate="yes" xml:space="preserve">
          <source>Save several arrays into an uncompressed &lt;code&gt;.npz&lt;/code&gt; archive</source>
          <target state="translated">複数のアレイを非圧縮の &lt;code&gt;.npz&lt;/code&gt; アーカイブに保存します</target>
        </trans-unit>
        <trans-unit id="3834037486fe19959e5d74bb67ba75ca5f90b37c" translate="yes" xml:space="preserve">
          <source>Save several arrays into an uncompressed &lt;code&gt;.npz&lt;/code&gt; file format</source>
          <target state="translated">複数の配列を非圧縮の &lt;code&gt;.npz&lt;/code&gt; ファイル形式で保存します</target>
        </trans-unit>
        <trans-unit id="96abd2c6b79ee8cefdc4d885ebbf8bf5eb950e9e" translate="yes" xml:space="preserve">
          <source>Save the raw data to disk:</source>
          <target state="translated">生データをディスクに保存します。</target>
        </trans-unit>
        <trans-unit id="84c4cc6b052ed4ea693e7157bb77f1d9b09e008c" translate="yes" xml:space="preserve">
          <source>Save/restore using a pickle file</source>
          <target state="translated">ピックルファイルによる保存・復元</target>
        </trans-unit>
        <trans-unit id="1c89e5421877d9597204c3cd7df45767dab30f5d" translate="yes" xml:space="preserve">
          <source>Save/restore using tofile and fromfile</source>
          <target state="translated">tofileとfromfileを使用した保存/リストア</target>
        </trans-unit>
        <trans-unit id="73ed9caa35087e09e960ba1aa94c477b31fec1b4" translate="yes" xml:space="preserve">
          <source>Scalar arguments</source>
          <target state="translated">スカラー引数</target>
        </trans-unit>
        <trans-unit id="7e81135d8c591c75fcb8a4fae4114af8598c3355" translate="yes" xml:space="preserve">
          <source>Scalar attribute identical to the corresponding array attribute.</source>
          <target state="translated">対応する配列属性と同じスカラ属性。</target>
        </trans-unit>
        <trans-unit id="fbae089728fbd07d2074ad963d381420ee002558" translate="yes" xml:space="preserve">
          <source>Scalar inputs are converted to 1-dimensional arrays, whilst higher-dimensional inputs are preserved.</source>
          <target state="translated">スカラー入力は1次元配列に変換され、高次元入力は保持されます。</target>
        </trans-unit>
        <trans-unit id="9749893e3890bfd1d5e9a92308e37602214ab9aa" translate="yes" xml:space="preserve">
          <source>Scalar method identical to the corresponding array attribute.</source>
          <target state="translated">対応する配列属性と同じスカラーメソッド。</target>
        </trans-unit>
        <trans-unit id="1a487a95dda8c7320c2a85629036aba70a8b62f6" translate="yes" xml:space="preserve">
          <source>Scalar multiplication raises an error.</source>
          <target state="translated">スカラーの掛け算でエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="acac1d81b3534449675419a519bb343ca8e4b6f9" translate="yes" xml:space="preserve">
          <source>Scalar promotion in &lt;code&gt;PyArray_ConvertToCommonType&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PyArray_ConvertToCommonType&lt;/code&gt; でのスカラープロモーション</target>
        </trans-unit>
        <trans-unit id="059145f049285d511ac68922d472332e007411c0" translate="yes" xml:space="preserve">
          <source>Scalar representation of &lt;code&gt;a&lt;/code&gt;. The output data type is the same type returned by the input&amp;rsquo;s &lt;code&gt;item&lt;/code&gt; method.</source>
          <target state="translated">のスカラ表現。出力データ型は、入力の &lt;code&gt;item&lt;/code&gt; メソッドによって返される型と同じです。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f022d1745ad0c0eeb0f1290564887589cd41951" translate="yes" xml:space="preserve">
          <source>ScalarArrayTypes</source>
          <target state="translated">ScalarArrayTypes</target>
        </trans-unit>
        <trans-unit id="54b48aed2add2b87361aacba152bfad9a3b60a3a" translate="yes" xml:space="preserve">
          <source>Scalars</source>
          <target state="translated">Scalars</target>
        </trans-unit>
        <trans-unit id="c7a963db41c3d974050e19a5aa96bbcac0e75176" translate="yes" xml:space="preserve">
          <source>Scalars currently do not include byte order information, so extracting a scalar from an array will return an integer in native byte order. Hence:</source>
          <target state="translated">スカラは現在のところバイトオーダー情報を含んでいないので、配列からスカラを抽出するとネイティブのバイトオーダーで整数を返します。そのため、配列からスカラを抽出するとネイティブのバイト順で整数が返されます。</target>
        </trans-unit>
        <trans-unit id="a99f0f7dfd154d0342b30f3c55eb535a79c456a7" translate="yes" xml:space="preserve">
          <source>Scalars.</source>
          <target state="translated">Scalars.</target>
        </trans-unit>
        <trans-unit id="a29f0256272e79ca91a1c4e608f09a6264397d12" translate="yes" xml:space="preserve">
          <source>Scale</source>
          <target state="translated">Scale</target>
        </trans-unit>
        <trans-unit id="2f4826e6ef9018b6fbf17f3255b508abfe544913" translate="yes" xml:space="preserve">
          <source>Scale parameter, must be &amp;gt; 0.</source>
          <target state="translated">スケールパラメータ。0より大きい必要があります。</target>
        </trans-unit>
        <trans-unit id="6d36d2d6ae526784915f210e3fb8dde2023d2741" translate="yes" xml:space="preserve">
          <source>Scale, also equals the mode. Must be non-negative. Default is 1.</source>
          <target state="translated">スケール、モードにも等しくなります。非負でなければなりません。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="a1d8be118bc39d12d4a10d74286dab4f70d176d9" translate="yes" xml:space="preserve">
          <source>Scaled companion matrix of dimensions (deg, deg).</source>
          <target state="translated">次元(deg,deg)のスケーリングされたコンパニオン行列。</target>
        </trans-unit>
        <trans-unit id="90f0936d7f1fd48b7b8ab09a84e5ccbd404fee5f" translate="yes" xml:space="preserve">
          <source>SciPy &amp;mdash; a collection of scientific tools for Python.</source>
          <target state="translated">SciPy &amp;mdash; Python用の科学ツールのコレクション。</target>
        </trans-unit>
        <trans-unit id="d8eb0bbdbe7c30ed05a6b89b85311cc11a519093" translate="yes" xml:space="preserve">
          <source>SciPy Lecture Notes</source>
          <target state="translated">SciPy 講義ノート</target>
        </trans-unit>
        <trans-unit id="6cf90182d0d3f8bc33c7beb41c69dd94a1b45912" translate="yes" xml:space="preserve">
          <source>SciPy Tutorial</source>
          <target state="translated">SciPyチュートリアル</target>
        </trans-unit>
        <trans-unit id="99e184aada462085df37c7560cdb13c82af8c9fb" translate="yes" xml:space="preserve">
          <source>SciPy consists of Python packages, called SciPy packages, that are available to Python users via the &lt;code&gt;scipy&lt;/code&gt; namespace. Each SciPy package may contain other SciPy packages. And so on. Therefore, the SciPy directory tree is a tree of packages with arbitrary depth and width. Any SciPy package may depend on NumPy packages but the dependence on other SciPy packages should be kept minimal or zero.</source>
          <target state="translated">SciPyは、SciPyパッケージと呼ばれるPythonパッケージで構成され、Pythonユーザーが &lt;code&gt;scipy&lt;/code&gt; 名前空間を介して使用できます。各SciPyパッケージには、他のSciPyパッケージが含まれている場合があります。等々。したがって、SciPyディレクトリツリーは、任意の深さと幅を持つパッケージのツリーです。すべてのSciPyパッケージはNumPyパッケージに依存する可能性がありますが、他のSciPyパッケージへの依存は最小限またはゼロに保つ必要があります。</target>
        </trans-unit>
        <trans-unit id="8e94aba713782c22853e995a20e9f3be2dad06e8" translate="yes" xml:space="preserve">
          <source>SciPy pure Python package example</source>
          <target state="translated">SciPy 純粋なPythonパッケージの例</target>
        </trans-unit>
        <trans-unit id="f56355002d65034ce1206bc48c155f52fefbd24f" translate="yes" xml:space="preserve">
          <source>SciPy structure</source>
          <target state="translated">サイパイ構造</target>
        </trans-unit>
        <trans-unit id="cbfee5c7cc913d86191979f6c77056f50e0278b0" translate="yes" xml:space="preserve">
          <source>SciPy uses the testing framework from &lt;a href=&quot;routines.testing#module-numpy.testing&quot;&gt;&lt;code&gt;numpy.testing&lt;/code&gt;&lt;/a&gt;, so all of the NumPy examples shown below are also applicable to SciPy</source>
          <target state="translated">SciPyは&lt;a href=&quot;routines.testing#module-numpy.testing&quot;&gt; &lt;code&gt;numpy.testing&lt;/code&gt; &lt;/a&gt;のテストフレームワークを使用しているため、以下に示すすべてのNumPyの例はSciPyにも適用できます。</target>
        </trans-unit>
        <trans-unit id="034e5d890cd435fe540161b6563bbf26cb52539a" translate="yes" xml:space="preserve">
          <source>SciPy uses the testing framework from &lt;a href=&quot;routines.testing#module-numpy.testing&quot;&gt;&lt;code&gt;numpy.testing&lt;/code&gt;&lt;/a&gt;, so all the SciPy examples shown here are also applicable to NumPy. NumPy&amp;rsquo;s full test suite can be run as follows:</source>
          <target state="translated">SciPyは&lt;a href=&quot;routines.testing#module-numpy.testing&quot;&gt; &lt;code&gt;numpy.testing&lt;/code&gt; &lt;/a&gt;のテストフレームワークを使用するため、ここに示すSciPyの例はすべてNumPyにも適用できます。 NumPyの完全なテストスイートは、次のように実行できます。</target>
        </trans-unit>
        <trans-unit id="0393074b82615f4e275b98b2246d689226a48539" translate="yes" xml:space="preserve">
          <source>SciPy.org wiki</source>
          <target state="translated">SciPy.org wiki</target>
        </trans-unit>
        <trans-unit id="73afce261b6dfa8d8e62c8a81d6da680b749cab7" translate="yes" xml:space="preserve">
          <source>Search include files from given directories.</source>
          <target state="translated">指定されたディレクトリからインクルードファイルを検索します。</target>
        </trans-unit>
        <trans-unit id="98cc363c0119e35d1c8070755fc4d4c2387aad71" translate="yes" xml:space="preserve">
          <source>Searching</source>
          <target state="translated">Searching</target>
        </trans-unit>
        <trans-unit id="bb90e7394de350824c838bd1395dda4027383e30" translate="yes" xml:space="preserve">
          <source>Sebastian Berg</source>
          <target state="translated">セバスチャン・ベルク</target>
        </trans-unit>
        <trans-unit id="4b2e1da1c964383188e00a10d2e39b923197f807" translate="yes" xml:space="preserve">
          <source>Second argument to the dot product.</source>
          <target state="translated">ドット積の第2引数。</target>
        </trans-unit>
        <trans-unit id="7ef33b9083ac3caeba432f4b438a6779b5a70013" translate="yes" xml:space="preserve">
          <source>Second argument.</source>
          <target state="translated">第二引数。</target>
        </trans-unit>
        <trans-unit id="cb5ad8b50723a7d1fd17584bedb0f83a41415a3b" translate="yes" xml:space="preserve">
          <source>Second array</source>
          <target state="translated">2番目の配列</target>
        </trans-unit>
        <trans-unit id="221217640b561f4f6031bb5b13fc0d6996901859" translate="yes" xml:space="preserve">
          <source>Second axis.</source>
          <target state="translated">第二軸。</target>
        </trans-unit>
        <trans-unit id="32c1b237f4f300bba4fa4c9ac90f12b44936dc59" translate="yes" xml:space="preserve">
          <source>Second data type.</source>
          <target state="translated">2つ目のデータ型。</target>
        </trans-unit>
        <trans-unit id="ca4787861f1057c421779e8f1dedf89da61ae27f" translate="yes" xml:space="preserve">
          <source>Second input vector. Input is flattened if not already 1-dimensional.</source>
          <target state="translated">2番目の入力ベクトル.入力は1次元でない場合は平坦化されます.</target>
        </trans-unit>
        <trans-unit id="edb13a05930d9e71ca1063cf578d1a9fdd2a8c6d" translate="yes" xml:space="preserve">
          <source>Second mode:</source>
          <target state="translated">セカンドモード。</target>
        </trans-unit>
        <trans-unit id="01d29ac55b3ec08df028359b5d454eb4ba1e410b" translate="yes" xml:space="preserve">
          <source>Second one-dimensional input array.</source>
          <target state="translated">第2の1次元入力配列。</target>
        </trans-unit>
        <trans-unit id="d8e2f5f8f159edc62dbf9c3ce59c926f0a69e928" translate="yes" xml:space="preserve">
          <source>Second operand for ufuncs requiring two operands. Operand must be broadcastable over first operand after indexing or slicing.</source>
          <target state="translated">2つのオペランドを必要とするufuncsのための2番目のオペランド。オペランドは、インデックスを作成したりスライスしたりした後、最初のオペランドの上にブロードキャスト可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5cc1e296313c284444e01aa95fbe95c897b4202e" translate="yes" xml:space="preserve">
          <source>Section &amp;ldquo;Output arguments&amp;rdquo;</source>
          <target state="translated">セクション「出力引数」</target>
        </trans-unit>
        <trans-unit id="7ff5a6dafd806f6d95302657c480d07703b64604" translate="yes" xml:space="preserve">
          <source>Sections</source>
          <target state="translated">Sections</target>
        </trans-unit>
        <trans-unit id="86103efaefb974fbeaef0d11fb26a4e10fb923ee" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#how-to-io-large-arrays&quot;&gt;Write or read large arrays&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#how-to-io-large-arrays&quot;&gt;大きな配列の書き込みまたは読み取りを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="41b9a7ed6858aec5ceec48359e5d8ec1f8ffd4d1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#quickstart-shape-manipulation&quot;&gt;below&lt;/a&gt; to get more details on &lt;code&gt;reshape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reshape&lt;/code&gt; 詳細については、&lt;a href=&quot;#quickstart-shape-manipulation&quot;&gt;以下&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="64fdae2b1f409fab454a0b6575a79a20076b3149" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#rebasing-on-master&quot;&gt;Rebasing on master&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#rebasing-on-master&quot;&gt;マスターに基づくリベースを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e0d3ccd68e0c0e2e2383f28e0aa58fd9bef0633a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#term-axis&quot;&gt;axis&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#term-axis&quot;&gt;軸を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="909f687a6d644afaf116513903bcb6653d49ea52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#term-ravel&quot;&gt;ravel&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#term-ravel&quot;&gt;ravelを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9316f227f1b6905c972301e2f227b4d2e5a4826e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#term-structured-data-type&quot;&gt;structured data type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#term-structured-data-type&quot;&gt;構造化データ型を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="faf0bd98883d1433a2c44675804c0341b3472b2d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#term-view&quot;&gt;view&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#term-view&quot;&gt;ビューを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d2029de82eb780f6939854d19a93981f53bd665b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt; for definitions and conventions used.</source>
          <target state="translated">使用される定義と規則については、&lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;fft&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6c0a72c1cb8120cf7ac0dfcc72d95999596565de" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt; for details, definitions and conventions used.</source>
          <target state="translated">参照&lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;fft&lt;/code&gt; &lt;/a&gt;使用詳細、定義やコンベンションのために。</target>
        </trans-unit>
        <trans-unit id="0cfb9ee7c8187701f4953f4898745e4a0133d308" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt; for definitions and conventions used.</source>
          <target state="translated">使用される定義と規則については、&lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="39476c56ef5f38d2b1f008f544da6916173b58b1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt; for details, definitions and conventions used.</source>
          <target state="translated">参照してください&lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt;使用詳細、定義やコンベンションのために。</target>
        </trans-unit>
        <trans-unit id="967ac82f55bdf0a1e5e32db07feee81b4336ed50" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;arrays.datetime#arrays-datetime&quot;&gt;Datetimes and Timedeltas&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;arrays.datetime#arrays-datetime&quot;&gt;日時とタイムデルタ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f111cce9ed2d7158c1f45c1a7d864f18edbaaf3f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;arrays.dtypes#string-dtype-note&quot;&gt;Note on string types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;arrays.dtypes#string-dtype-note&quot;&gt;文字列型に関する注意を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2394875ced9766b9920c6fda530a08bce17207b9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;basics.rec#structured-arrays&quot;&gt;Structured arrays&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;basics.rec#structured-arrays&quot;&gt;構造化配列を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="32fbac70fdbf6b6767972829b5d64317ce260c1b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;examples/cython/index#extending-cython-example&quot;&gt;Extending numpy.random via Cython&lt;/a&gt; for the complete listings of these examples and a minimal &lt;code&gt;setup.py&lt;/code&gt; to build the c-extension modules.</source>
          <target state="translated">これらの例の完全なリストとc-extensionモジュールを構築するための最小限の &lt;code&gt;setup.py&lt;/code&gt; については、&lt;a href=&quot;examples/cython/index#extending-cython-example&quot;&gt;Cython&lt;/a&gt;を介したnumpy.randomの拡張を参照してください。</target>
        </trans-unit>
        <trans-unit id="362c440e832fc9f791e0925e193ae378b155e71e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;extending&quot;&gt;Extending&lt;/a&gt; for examples of using these functions.</source>
          <target state="translated">これらの関数の使用例については、&lt;a href=&quot;extending&quot;&gt;拡張&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6936963c4857562319e39034c4eba8403c844439" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://mathesaurus.sf.net/&quot;&gt;http://mathesaurus.sf.net/&lt;/a&gt; for another MATLAB&amp;reg;/NumPy cross-reference.</source>
          <target state="translated">別のMATLAB&amp;reg;/ NumPy相互参照については、&lt;a href=&quot;http://mathesaurus.sf.net/&quot;&gt;http：//mathesaurus.sf.net/&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a5b2dca6ea3ce9fa8366a88d3077edc5ccc79caf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://asv.readthedocs.io/&quot;&gt;ASV documentation&lt;/a&gt; for basics on how to write benchmarks.</source>
          <target state="translated">ベンチマークの作成方法の基本については、&lt;a href=&quot;https://asv.readthedocs.io/&quot;&gt;ASVのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="12c16cfb6abe442490f8c7248ecc3f777cd01ad8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness&quot;&gt;Endianness&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness&quot;&gt;エンディアンを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2759b1edc7f5de4ed3b70a0271458ccf90b1ed18" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Python_software#Embedded_as_a_scripting_language&quot;&gt;List of Python software: scripting&lt;/a&gt; for a list of softwares that use Python as a scripting language</source>
          <target state="translated">スクリプト言語としてPythonを使用するソフトウェアのリストについては、&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Python_software#Embedded_as_a_scripting_language&quot;&gt;「Pythonソフトウェア&lt;/a&gt;のリスト：スクリプト」を参照してください。</target>
        </trans-unit>
        <trans-unit id="fd1d29fc8ffd8a495485a47438b29cfbb1794b87" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/Row-_and_column-major_order&quot;&gt;Row- and column-major order&lt;/a&gt;.</source>
          <target state="translated">行&lt;a href=&quot;https://en.wikipedia.org/wiki/Row-_and_column-major_order&quot;&gt;および列の主要な順序を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9e60a11a0efdb9fb66087756ac0399ba9bf9be1c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/Row-_and_column-major_order&quot;&gt;Row- and column-major order&lt;/a&gt;. NumPy creates arrays in row-major order by default.</source>
          <target state="translated">行&lt;a href=&quot;https://en.wikipedia.org/wiki/Row-_and_column-major_order&quot;&gt;および列の主要な順序を&lt;/a&gt;参照してください。NumPyは、デフォルトで行優先の順序で配列を作成します。</target>
        </trans-unit>
        <trans-unit id="e57518b27ed21cde08dd2e6bf10a8b62b4ab50ee" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://numpy.org/devdocs/user/theory.broadcasting.html&quot;&gt;this article&lt;/a&gt; for illustrations of broadcasting concepts.</source>
          <target state="translated">ブロードキャストの概念の図については、&lt;a href=&quot;https://numpy.org/devdocs/user/theory.broadcasting.html&quot;&gt;この記事&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5c015117cd802eda9931a9906e2501956ec2f1ae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy&quot;&gt;&lt;code&gt;pandas.DataFrame.to_numpy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy&quot;&gt; &lt;code&gt;pandas.DataFrame.to_numpy&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b5e4d97067b946e4ef690b272184e4efc5ede623" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;What&amp;rsquo;s New or Different&lt;/a&gt; for a complete list of improvements and differences from the traditional &lt;code&gt;Randomstate&lt;/code&gt;.</source>
          <target state="translated">従来の &lt;code&gt;Randomstate&lt;/code&gt; との改善点と相違点の完全なリストについては、&lt;a href=&quot;new-or-different#new-or-different&quot;&gt;新機能または新機能を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="192ac208c2a010aec7e6d78dc1244a3730c800d5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;What&amp;rsquo;s New or Different&lt;/a&gt; for more information</source>
          <target state="translated">詳細については&lt;a href=&quot;new-or-different#new-or-different&quot;&gt;、新機能または相違点&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="79bed1cbe270deb55a61fb72310b3bb8b6412c8c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;What&amp;rsquo;s New or Different&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については&lt;a href=&quot;new-or-different#new-or-different&quot;&gt;、新機能または相違点&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="32f0e6dd051b734927a01c5db87a2be927d800dd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.diag_indices#numpy.diag_indices&quot;&gt;&lt;code&gt;diag_indices&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;numpy.diag_indices#numpy.diag_indices&quot;&gt; &lt;code&gt;diag_indices&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5443e9a54948aa9c9379a327531c6bccc7711bdf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.einsum_path#numpy.einsum_path&quot;&gt;&lt;code&gt;numpy.einsum_path&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;numpy.einsum_path#numpy.einsum_path&quot;&gt; &lt;code&gt;numpy.einsum_path&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="686c392217c3aaf7298c3e78ad0a9f7cb212a937" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt; for definitions and conventions used.</source>
          <target state="translated">使用される定義と規則については、&lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt; &lt;code&gt;fft&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="205ca8dcd159fbcee76df1b2fef8925f1440e59e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt; for details, definitions and conventions used.</source>
          <target state="translated">参照&lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt; &lt;code&gt;fft&lt;/code&gt; &lt;/a&gt;使用詳細、定義やコンベンションのために。</target>
        </trans-unit>
        <trans-unit id="9478a5052b310742b09afa66203bc879673c7b08" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.fft.fftn#numpy.fft.fftn&quot;&gt;&lt;code&gt;fftn&lt;/code&gt;&lt;/a&gt; for details and a plotting example, and &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt; for definitions and conventions used.</source>
          <target state="translated">詳細とプロットの例については&lt;a href=&quot;numpy.fft.fftn#numpy.fft.fftn&quot;&gt; &lt;code&gt;fftn&lt;/code&gt; &lt;/a&gt;を、使用される定義と規則については&lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="675d16e4fa406a9a6c6a04ecb2e8ae0357bdec4d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.fft.ifftn#numpy.fft.ifftn&quot;&gt;&lt;code&gt;ifftn&lt;/code&gt;&lt;/a&gt; for details and a plotting example, and &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt; for definition and conventions used.</source>
          <target state="translated">参照&lt;a href=&quot;numpy.fft.ifftn#numpy.fft.ifftn&quot;&gt; &lt;code&gt;ifftn&lt;/code&gt; &lt;/a&gt;詳細とプロット例えば、および&lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt;使用される定義と規則について。</target>
        </trans-unit>
        <trans-unit id="b7538fd13cf14ea1644418142ccb8df97c6be45c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.fft.rfft#numpy.fft.rfft&quot;&gt;&lt;code&gt;rfft&lt;/code&gt;&lt;/a&gt; for definitions and conventions used for real input.</source>
          <target state="translated">実際の入力に使用される定義と規則については、&lt;a href=&quot;numpy.fft.rfft#numpy.fft.rfft&quot;&gt; &lt;code&gt;rfft&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="14d8b147d16c03edc0300c16ec51d7d6ca5bbe18" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.ma.sort#numpy.ma.sort&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt; for notes on the different sorting algorithms.</source>
          <target state="translated">さまざまな並べ替えアルゴリズムについては、&lt;a href=&quot;numpy.ma.sort#numpy.ma.sort&quot;&gt; &lt;code&gt;sort&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d7cb24d59875b3cc3574d8087b692673ddcdb195" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.ndarray.tolist#numpy.ndarray.tolist&quot;&gt;&lt;code&gt;ndarray.tolist&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">完全なドキュメントについては、&lt;a href=&quot;numpy.ndarray.tolist#numpy.ndarray.tolist&quot;&gt; &lt;code&gt;ndarray.tolist&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ea9267ac587bed3ccf047481f2944300dad26164" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; parameters of the same name</source>
          <target state="translated">同じ名前の&lt;a href=&quot;numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; &lt;/a&gt;パラメータを参照してください</target>
        </trans-unit>
        <trans-unit id="c45cefa68ab5a49c7fc455bfaecdfb960c92f083" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.partition#numpy.partition&quot;&gt;&lt;code&gt;partition&lt;/code&gt;&lt;/a&gt; for notes on the different selection algorithms.</source>
          <target state="translated">さまざまな選択アルゴリズムに関する注意事項については、&lt;a href=&quot;numpy.partition#numpy.partition&quot;&gt; &lt;code&gt;partition&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a40a1aa29fa9651123546ac2519835462e20cae8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt;&lt;code&gt;numpy.sort&lt;/code&gt;&lt;/a&gt; for notes on the different sorting algorithms.</source>
          <target state="translated">さまざまな並べ替えアルゴリズムに関する注意事項については、&lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt; &lt;code&gt;numpy.sort&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ba13a78a2a0a3fa0752c74cc8d90a5244ecac0db" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt; for notes on the different sorting algorithms.</source>
          <target state="translated">さまざまな並べ替えアルゴリズムについては、&lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt; &lt;code&gt;sort&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="193831fdc2be9f5768df3d003b30aca1e44dbbda" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.tril_indices#numpy.tril_indices&quot;&gt;&lt;code&gt;tril_indices&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;numpy.tril_indices#numpy.tril_indices&quot;&gt; &lt;code&gt;tril_indices&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5fd11c543ebfdc5c211e4a6d71346d0822c268b0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.triu_indices#numpy.triu_indices&quot;&gt;&lt;code&gt;triu_indices&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;numpy.triu_indices#numpy.triu_indices&quot;&gt; &lt;code&gt;triu_indices&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6d738912af327e02de9688811d1f6caf6ae3c3bc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;user/basics.broadcasting#module-numpy.doc.broadcasting&quot;&gt;&lt;code&gt;numpy.doc.broadcasting&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;user/basics.broadcasting#module-numpy.doc.broadcasting&quot;&gt; &lt;code&gt;numpy.doc.broadcasting&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a26a6c6d8fd9cacc6f2cfad9d6c978bd1cfae12c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;column-major&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;column-major&lt;/code&gt; 参照してください</target>
        </trans-unit>
        <trans-unit id="d124b82767a9a18459a70bf42d4d1a5c2cabceaa" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;new-or-different&lt;/code&gt; for more information</source>
          <target state="translated">詳細については、 &lt;code&gt;new-or-different&lt;/code&gt; を参照してください</target>
        </trans-unit>
        <trans-unit id="ca9ae24d30e172d05736d39babb905ced23075a8" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;np.partition&lt;/code&gt; for notes on the different algorithms.</source>
          <target state="translated">さまざまなアルゴリズムに関する注意事項については、 &lt;code&gt;np.partition&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="1ad79a6d0f605b65724a6a24d54e33980e6ab85b" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;numpy.polynomial.chebfromfunction&lt;/code&gt; for more details.</source>
          <target state="translated">詳細については、 &lt;code&gt;numpy.polynomial.chebfromfunction&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="b7cbeeba787c7bac123af34723f7ac27f6b8e113" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;numpy_distutils/fcompiler.py&lt;/code&gt; for up-to-date list of supported compilers or run</source>
          <target state="translated">サポートされているコンパイラの最新リストについては、 &lt;code&gt;numpy_distutils/fcompiler.py&lt;/code&gt; を参照するか、実行してください</target>
        </trans-unit>
        <trans-unit id="53aeb06592aff3e55872eab7aafc82f2099b695a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;row-major&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;row-major&lt;/code&gt; 参照してください</target>
        </trans-unit>
        <trans-unit id="d8d7757a34f4e9d0f656d306b6f251fdbb133f09" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;sort&lt;/code&gt; for notes on the different sorting algorithms.</source>
          <target state="translated">さまざまな並べ替えアルゴリズムについては、 &lt;code&gt;sort&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="a9c9247d944d749a48936abc88d1a40f983cb1d7" translate="yes" xml:space="preserve">
          <source>See &lt;em&gt;array&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;配列を&lt;/em&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">参照</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">参照:</target>
        </trans-unit>
        <trans-unit id="904e7e2293896fc6a190899b0e3541d19b216aa3" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;arrays.classes#numpy.class.__array_function__&quot;&gt;&lt;code&gt;numpy.class.__array_function__&lt;/code&gt;&lt;/a&gt; for more information. This flag is checked at import time.</source>
          <target state="translated">詳細については、&lt;a href=&quot;arrays.classes#numpy.class.__array_function__&quot;&gt; &lt;code&gt;numpy.class.__array_function__&lt;/code&gt; &lt;/a&gt;も参照してください。このフラグはインポート時にチェックされます。</target>
        </trans-unit>
        <trans-unit id="c42bf30b104306d8d14d78bea5733810e45f113e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;http://www.numpy.org/neps/nep-0018-array-function-protocol.html&quot;&gt;NEP 18&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.numpy.org/neps/nep-0018-array-function-protocol.html&quot;&gt;NEP18&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="726c8c4767eaebe110b0b0a5572bbc69c9f2d3bd" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://numpy.org/neps/nep-0018-array-function-protocol.html&quot;&gt;NEP 18&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://numpy.org/neps/nep-0018-array-function-protocol.html&quot;&gt;NEP18&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="32afcc466e80065c98820b39346c93678b8ddbce" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;intent(callback)&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;intent(callback)&lt;/code&gt; 属性も参照してください。</target>
        </trans-unit>
        <trans-unit id="1234129c54dee52191f9a009e54d14ba3cd7901d" translate="yes" xml:space="preserve">
          <source>See also the corresponding attribute of the derived class of interest.</source>
          <target state="translated">興味のある派生クラスの対応する属性も参照してください。</target>
        </trans-unit>
        <trans-unit id="4afdc4f9248e485e658b7f06fc706ad02db078bf" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-locally-and-remotely&quot;&gt;https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-locally-and-remotely&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-locally-and-remotely&quot;&gt;https&lt;/a&gt;：//stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-locally-and-remotely</target>
        </trans-unit>
        <trans-unit id="fc70241c94e61db73d579089182797ead2f9266e" translate="yes" xml:space="preserve">
          <source>See casting argument of &lt;code&gt;ndarray.astype&lt;/code&gt;. Controls what kind of data casting may occur.</source>
          <target state="translated">&lt;code&gt;ndarray.astype&lt;/code&gt; のキャスト引数を参照してください。発生する可能性のあるデータキャストの種類を制御します。</target>
        </trans-unit>
        <trans-unit id="1dd0bc48db89bc375f2f824cfcb08b1ef9134457" translate="yes" xml:space="preserve">
          <source>See copy argument to &lt;code&gt;ndarray.astype&lt;/code&gt;. If true, always return a copy. If false, and &lt;code&gt;dtype&lt;/code&gt; requirements are satisfied, a view is returned.</source>
          <target state="translated">&lt;code&gt;ndarray.astype&lt;/code&gt; へのコピー引数を参照してください。trueの場合、常にコピーを返します。falseで、 &lt;code&gt;dtype&lt;/code&gt; 要件が満たされている場合、ビューが返されます。</target>
        </trans-unit>
        <trans-unit id="1514c7f6c78706cd69d9f9b84fdf65277ce18169" translate="yes" xml:space="preserve">
          <source>See linalg.py in numpy folder for more.</source>
          <target state="translated">詳細は numpy フォルダの linalg.py を参照してください。</target>
        </trans-unit>
        <trans-unit id="ac48e975ba53acce9969156066615d007ed0a86a" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../generated/numpy.einsum#numpy.einsum&quot;&gt;&lt;code&gt;einsum&lt;/code&gt;&lt;/a&gt; function for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../generated/numpy.einsum#numpy.einsum&quot;&gt; &lt;code&gt;einsum&lt;/code&gt; &lt;/a&gt;関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="83750efeee588beded293ee3f9269da81e7c7a09" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;generated/numpy.einsum#numpy.einsum&quot;&gt;&lt;code&gt;einsum&lt;/code&gt;&lt;/a&gt; function for more details.</source>
          <target state="translated">詳細については、関数&lt;a href=&quot;generated/numpy.einsum#numpy.einsum&quot;&gt; &lt;code&gt;einsum&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="932a4257d3ac9f247fc75aac0a4b3c15e79bc083" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/MacPython/numpy-wheels&quot;&gt;numpy wheels&lt;/a&gt; building repository for more detail.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://github.com/MacPython/numpy-wheels&quot;&gt;numpywheels&lt;/a&gt;構築リポジトリを参照してください。</target>
        </trans-unit>
        <trans-unit id="05244e546140f7e533088e471d08417c187232f7" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;MacPython/numpy wheels&lt;/code&gt; repository.</source>
          <target state="translated">&lt;code&gt;MacPython/numpy wheels&lt;/code&gt; リポジトリを参照してください。</target>
        </trans-unit>
        <trans-unit id="b4f3fbbc86b01e081d4bf3029eeb047323af050f" translate="yes" xml:space="preserve">
          <source>See the class docstring for the number of bits returned.</source>
          <target state="translated">返されるビット数については、クラスの docstring を参照してください。</target>
        </trans-unit>
        <trans-unit id="c83ee6459f11d959cce47b344352f4193d454359" translate="yes" xml:space="preserve">
          <source>See the function &lt;a href=&quot;#c.PyArray_MinScalarType&quot;&gt;&lt;code&gt;PyArray_MinScalarType&lt;/code&gt;&lt;/a&gt; for an alternative mechanism introduced in NumPy 1.6.0.</source>
          <target state="translated">NumPy 1.6.0で導入された代替メカニズムについては、関数&lt;a href=&quot;#c.PyArray_MinScalarType&quot;&gt; &lt;code&gt;PyArray_MinScalarType&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5b5e9065c0e163926104e92911bff64adedee471" translate="yes" xml:space="preserve">
          <source>See the function &lt;a href=&quot;#c.PyArray_ResultType&quot;&gt;&lt;code&gt;PyArray_ResultType&lt;/code&gt;&lt;/a&gt; for details of NumPy type promotion, updated in NumPy 1.6.0.</source>
          <target state="translated">NumPy 1.6.0で更新されたNumPyタイプの昇格の詳細については、関数&lt;a href=&quot;#c.PyArray_ResultType&quot;&gt; &lt;code&gt;PyArray_ResultType&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="27b980b7065c19a238ed0ab9383f5a540a5d637c" translate="yes" xml:space="preserve">
          <source>See the more detailed documentation for &lt;code&gt;numpy.diagonal&lt;/code&gt; if you use this function to extract a diagonal and wish to write to the resulting array; whether it returns a copy or a view depends on what version of numpy you are using.</source>
          <target state="translated">この関数を使用して対角線を抽出し、結果の配列に書き込みたい場合は、 &lt;code&gt;numpy.diagonal&lt;/code&gt; の詳細なドキュメントを参照してください。コピーを返すかビューを返すかは、使用しているnumpyのバージョンによって異なります。</target>
        </trans-unit>
        <trans-unit id="a367dbe20937470e410dfbea9585fd8048f1569d" translate="yes" xml:space="preserve">
          <source>See the notes and examples for clarification.</source>
          <target state="translated">注釈と例を参照して明確にしてください。</target>
        </trans-unit>
        <trans-unit id="ed05825174e3134f290feabd650cdebd78790e5d" translate="yes" xml:space="preserve">
          <source>See the notes for an outline of the algorithm.</source>
          <target state="translated">アルゴリズムの概要については、注意事項を参照してください。</target>
        </trans-unit>
        <trans-unit id="9f233733da4c5945268174450132dc468d9cc226" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://github.com/scipy/scipy/issues/4919&quot;&gt;https://github.com/scipy/scipy/issues/4919&lt;/a&gt; for a discussion of signing release tags, and &lt;a href=&quot;https://keyring.debian.org/creating-key.html&quot;&gt;https://keyring.debian.org/creating-key.html&lt;/a&gt; for instructions on creating a GPG key if you do not have one.</source>
          <target state="translated">リリースタグへの署名の説明については&lt;a href=&quot;https://keyring.debian.org/creating-key.html&quot;&gt;https://github.com/scipy/scipy/issues/4919&lt;/a&gt;を、GPGキーの作成手順については&lt;a href=&quot;https://github.com/scipy/scipy/issues/4919&quot;&gt;https://keyring.debian.org/creating-key.html&lt;/a&gt;を参照してください。ひとつも無い。</target>
        </trans-unit>
        <trans-unit id="6766ba274f9d0d5aeccf1125da13776bf3679884" translate="yes" xml:space="preserve">
          <source>SeedSequence (class in numpy.random)</source>
          <target state="translated">シードシーケンス</target>
        </trans-unit>
        <trans-unit id="2de41805fe60d43135ccbebaad2f5782594f2632" translate="yes" xml:space="preserve">
          <source>SeedSequence mixes sources of entropy in a reproducible way to set the initial state for independent and very probably non-overlapping BitGenerators.</source>
          <target state="translated">SeedSequenceは、再現性の高い方法でエントロピー源を混合し、独立した、おそらく重なりのないBitGeneratorの初期状態を設定します。</target>
        </trans-unit>
        <trans-unit id="c837283b736981a9d882e30832f45d2c3a206514" translate="yes" xml:space="preserve">
          <source>SeedSequence spawning</source>
          <target state="translated">シードシーケンス産卵</target>
        </trans-unit>
        <trans-unit id="28355ed4d1be051fdd750124cc876d1fa222f5c2" translate="yes" xml:space="preserve">
          <source>SeedSequence.entropy</source>
          <target state="translated">SeedSequence.entropy</target>
        </trans-unit>
        <trans-unit id="03d7f2826ccb833676fbe70c0022e77d2e2c9c55" translate="yes" xml:space="preserve">
          <source>SeedSequence.generate_state()</source>
          <target state="translated">SeedSequence.generate_state()</target>
        </trans-unit>
        <trans-unit id="c4d5a701757a2a9341845319c69171cb1c646cf5" translate="yes" xml:space="preserve">
          <source>SeedSequence.spawn()</source>
          <target state="translated">SeedSequence.spawn()</target>
        </trans-unit>
        <trans-unit id="9ba62987b34fe8fc63485d9dd7e815f3286c5601" translate="yes" xml:space="preserve">
          <source>SeedSequence.spawn_key</source>
          <target state="translated">SeedSequence.spawn_key</target>
        </trans-unit>
        <trans-unit id="529f2be0ba9acc44b2bfc2619c9e560a49fb0f5d" translate="yes" xml:space="preserve">
          <source>Seeding &lt;code&gt;RandomState&lt;/code&gt; using an array requires a 1-d array</source>
          <target state="translated">配列を使用して &lt;code&gt;RandomState&lt;/code&gt; をシードするには、1次元配列が必要です</target>
        </trans-unit>
        <trans-unit id="8803a737a63e4b3f599d7264c369bdc58f640281" translate="yes" xml:space="preserve">
          <source>Seeding and Entropy</source>
          <target state="translated">種付けとエントロピー</target>
        </trans-unit>
        <trans-unit id="e478fbf4bf9d911f2c366f8992866e1d7b083794" translate="yes" xml:space="preserve">
          <source>Seeding and State</source>
          <target state="translated">種付けと状態</target>
        </trans-unit>
        <trans-unit id="27b5c56d24ea90f0f46a962efa10519d7d721726" translate="yes" xml:space="preserve">
          <source>Seeds can be passed to any of the BitGenerators. The provided value is mixed via &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; to spread a possible sequence of seeds across a wider range of initialization states for the BitGenerator. Here &lt;a href=&quot;bit_generators/pcg64#numpy.random.PCG64&quot;&gt;&lt;code&gt;PCG64&lt;/code&gt;&lt;/a&gt; is used and is wrapped with a &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シードは、任意のBitGeneratorに渡すことができます。提供された値は&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;を介して混合され、BitGeneratorのより広い範囲の初期化状態にシードの可能なシーケンスを分散します。ここでは&lt;a href=&quot;bit_generators/pcg64#numpy.random.PCG64&quot;&gt; &lt;code&gt;PCG64&lt;/code&gt; &lt;/a&gt;が使用され、&lt;a href=&quot;generator#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;ラップされています。</target>
        </trans-unit>
        <trans-unit id="37cd3865c006d959fb649d73b618699ccd761419" translate="yes" xml:space="preserve">
          <source>Seeds can be passed to any of the BitGenerators. The provided value is mixed via &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; to spread a possible sequence of seeds across a wider range of initialization states for the BitGenerator. Here &lt;a href=&quot;bit_generators/pcg64#numpy.random.pcg64.PCG64&quot;&gt;&lt;code&gt;PCG64&lt;/code&gt;&lt;/a&gt; is used and is wrapped with a &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シードは任意のBitGeneratorに渡すことができます。提供された値は&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;を介して混合され、可能なシードのシーケンスをBitGeneratorのより広い範囲の初期化状態に分散します。ここでは&lt;a href=&quot;bit_generators/pcg64#numpy.random.pcg64.PCG64&quot;&gt; &lt;code&gt;PCG64&lt;/code&gt; &lt;/a&gt;が使用され、&lt;a href=&quot;generator#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;ラップされています。</target>
        </trans-unit>
        <trans-unit id="befc8fb6b3706476b647851ec8b54ce3f110f269" translate="yes" xml:space="preserve">
          <source>Selection algorithm. Default is &amp;lsquo;introselect&amp;rsquo;</source>
          <target state="translated">選択アルゴリズム。デフォルトは「introselect」です</target>
        </trans-unit>
        <trans-unit id="ad6f6961c3fd31b6fdfea3ebca7b48b26cade497" translate="yes" xml:space="preserve">
          <source>Selection algorithm. Default is &amp;lsquo;introselect&amp;rsquo;.</source>
          <target state="translated">選択アルゴリズム。デフォルトは「introselect」です。</target>
        </trans-unit>
        <trans-unit id="e4ebe86796a86b2f6ad98a5ef9dcf9068bc06196" translate="yes" xml:space="preserve">
          <source>Selects a subset of the axes of length one in the shape. If an axis is selected with shape entry greater than one, an error is raised.</source>
          <target state="translated">シェイプ内の長さ 1 の軸のサブセットを選択します。shape entryが1より大きい軸が選択された場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="7f96a534619bacb3ad4f1fc42bed9158e10d6d9e" translate="yes" xml:space="preserve">
          <source>Selects a subset of the entries of length one in the shape. If an axis is selected with shape entry greater than one, an error is raised.</source>
          <target state="translated">シェイプの長さが1のエントリのサブセットを選択します。形状のエントリーが1より大きい軸が選択された場合は、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="d113b695dceac1abca63d8057088ab91eda91dcc" translate="yes" xml:space="preserve">
          <source>Selects a subset of the single-dimensional entries in the shape. If an axis is selected with shape entry greater than one, an error is raised.</source>
          <target state="translated">シェイプ内の一次元エントリのサブセットを選択します。シェイプエントリが1より大きい軸が選択された場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="79443358879bd95386fe2826725c9fd86b989cfe" translate="yes" xml:space="preserve">
          <source>Self-written Python C/API functions can be defined inside signature files using &lt;code&gt;usercode&lt;/code&gt; and &lt;code&gt;pymethoddef&lt;/code&gt; statements (they must be used inside the &lt;code&gt;python module&lt;/code&gt; block). For example, the following signature file &lt;code&gt;spam.pyf&lt;/code&gt;</source>
          <target state="translated">自己記述の &lt;code&gt;usercode&lt;/code&gt; / API関数は、 &lt;code&gt;pymethoddef&lt;/code&gt; ステートメントとpymethoddefステートメントを使用して署名ファイル内で定義できます（これらは &lt;code&gt;python module&lt;/code&gt; ブロック内で使用する必要があります）。たとえば、次の署名ファイル &lt;code&gt;spam.pyf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fcb043cced9bf871f8d9c8f89f0f16414b1d26ad" translate="yes" xml:space="preserve">
          <source>Senior &lt;a href=&quot;https://numfocus.org/code-of-conduct#persons-responsible&quot;&gt;NumFOCUS staff&lt;/a&gt;: &lt;a href=&quot;mailto:conduct%40numfocus.org&quot;&gt;conduct@numfocus.org&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://numfocus.org/code-of-conduct#persons-responsible&quot;&gt;NumFOCUSの&lt;/a&gt;シニアスタッフ：&lt;a href=&quot;mailto:conduct%40numfocus.org&quot;&gt;conduct@numfocus.org&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1671ef9d02cf65603b61940347a9ba392c0d61a" translate="yes" xml:space="preserve">
          <source>Separate compilation</source>
          <target state="translated">別編集</target>
        </trans-unit>
        <trans-unit id="1016bd837a14ebb17e9d66314eef86b904454048" translate="yes" xml:space="preserve">
          <source>Separate core math library</source>
          <target state="translated">セパレートコア数学ライブラリ</target>
        </trans-unit>
        <trans-unit id="ce43c468d1865e00edb6873541f360679646ae28" translate="yes" xml:space="preserve">
          <source>Separator between array items for text output. If &amp;ldquo;&amp;rdquo; (empty), a binary file is written, equivalent to &lt;code&gt;file.write(a.tobytes())&lt;/code&gt;.</source>
          <target state="translated">テキスト出力用の配列項目間のセパレーター。「」（空）の場合、 &lt;code&gt;file.write(a.tobytes())&lt;/code&gt; と同等のバイナリファイルが書き込まれます。</target>
        </trans-unit>
        <trans-unit id="69c3854cf2f97e2b89f4f88e15dea295b287e18d" translate="yes" xml:space="preserve">
          <source>Separator between items if file is a text file. Empty (&amp;ldquo;&amp;rdquo;) separator means the file should be treated as binary. Spaces (&amp;rdquo; &amp;ldquo;) in the separator match zero or more whitespace characters. A separator consisting only of spaces must match at least one whitespace.</source>
          <target state="translated">ファイルがテキストファイルの場合、アイテム間の区切り文字。空（ &quot;&quot;）の区切り記号は、ファイルをバイナリとして扱う必要があることを意味します。区切り文字のスペース（ &quot;&quot;）は、ゼロ個以上の空白文字と一致します。スペースのみで構成されるセパレータは、少なくとも1つの空白と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="58b5ef82070109089258d37935f6f8dd60465e83" translate="yes" xml:space="preserve">
          <source>Separator to split each string element in &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">セパレータは、各文字列要素を分割します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fda4d938e57bdf80fd45be4a4b9ed3293812c803" translate="yes" xml:space="preserve">
          <source>Sequence containing the roots.</source>
          <target state="translated">根を含むシーケンス。</target>
        </trans-unit>
        <trans-unit id="577113b6ca2471336f20adea7da8449aa1b619c6" translate="yes" xml:space="preserve">
          <source>Sequence of Poly series coefficients. This routine fails for empty sequences.</source>
          <target state="translated">ポリ級数係数のシーケンス。このルーチンは、空のシーケンスでは失敗します。</target>
        </trans-unit>
        <trans-unit id="7d56bc3b59f98575164058303f56739492a375cb" translate="yes" xml:space="preserve">
          <source>Sequence of arrays</source>
          <target state="translated">配列のシーケンス</target>
        </trans-unit>
        <trans-unit id="74a030f26672046723689084e56201ef57135767" translate="yes" xml:space="preserve">
          <source>Sequence of input arrays.</source>
          <target state="translated">入力配列のシーケンス。</target>
        </trans-unit>
        <trans-unit id="0cd7f24fb8c01924663f200685435e6585e0483c" translate="yes" xml:space="preserve">
          <source>Sequence of title strings. An empty list can be used to leave titles out.</source>
          <target state="translated">タイトル文字列のシーケンス。空のリストを使用してタイトルを除外することができます。</target>
        </trans-unit>
        <trans-unit id="e892733a57cfb8724fa5f063a8369bfa0e2ca384" translate="yes" xml:space="preserve">
          <source>Series basis polynomial of degree &lt;code&gt;deg&lt;/code&gt;.</source>
          <target state="translated">次数 &lt;code&gt;deg&lt;/code&gt; のシリーズ基底多項式。</target>
        </trans-unit>
        <trans-unit id="1337e50ba66491fb95c336fa496a5915ac327127" translate="yes" xml:space="preserve">
          <source>Series of representing the identity.</source>
          <target state="translated">アイデンティティを表すシリーズ。</target>
        </trans-unit>
        <trans-unit id="b63dd64982c7da79c8185bb27db51618398f47db" translate="yes" xml:space="preserve">
          <source>Series with the specified roots.</source>
          <target state="translated">指定された根を持つ直列。</target>
        </trans-unit>
        <trans-unit id="c58eeea00ccb981db5bb1976aef71852fd00d936" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;a.flat[n] = values[n]&lt;/code&gt; for all &lt;code&gt;n&lt;/code&gt; in indices.</source>
          <target state="translated">インデックス内のすべての &lt;code&gt;n&lt;/code&gt; に &lt;code&gt;a.flat[n] = values[n]&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="77a70ae836628667e278cbc0920a320844fc2438" translate="yes" xml:space="preserve">
          <source>Set a Python function to be used when pretty printing arrays.</source>
          <target state="translated">配列をきれいに印刷するときに使用するPython関数を設定します。</target>
        </trans-unit>
        <trans-unit id="2c5db0d0b74f7205ac29d00dc0f28315d34810c2" translate="yes" xml:space="preserve">
          <source>Set a callback function for the &amp;lsquo;call&amp;rsquo; mode.</source>
          <target state="translated">'call'モードのコールバック関数を設定します。</target>
        </trans-unit>
        <trans-unit id="b4dd0addc44a7c0a5f052f38a920a2396cfdd632" translate="yes" xml:space="preserve">
          <source>Set array flags WRITEABLE, ALIGNED, (WRITEBACKIFCOPY and UPDATEIFCOPY), respectively.</source>
          <target state="translated">配列フラグ WRITEABLE,ALIGNED,(WRITEBACKIFCOPY,UPDATEIFCOPY)をそれぞれ設定します。</target>
        </trans-unit>
        <trans-unit id="fe4f54f983d0fc0329e51cb812fc504ecf7d9aeb" translate="yes" xml:space="preserve">
          <source>Set how floating-point errors are handled.</source>
          <target state="translated">浮動小数点エラーの処理方法を設定します。</target>
        </trans-unit>
        <trans-unit id="39887c043db9f2506d3506245ce2f8a4950e71c8" translate="yes" xml:space="preserve">
          <source>Set item described by index. If value is masked, masks those locations.</source>
          <target state="translated">インデックスで記述された項目を設定します。値がマスクされている場合は、その場所をマスクします。</target>
        </trans-unit>
        <trans-unit id="d43a840d83fb8f7ade894cbf5726d0d362e9206c" translate="yes" xml:space="preserve">
          <source>Set items 0 and 1 to their negative values:</source>
          <target state="translated">項目 0 と 1 を負の値に設定します。</target>
        </trans-unit>
        <trans-unit id="7e3313ed91d9ab09cbf1b02b801051fadfe61771" translate="yes" xml:space="preserve">
          <source>Set of strings or integers representing the positional or keyword arguments for which the function will not be vectorized. These will be passed directly to &lt;code&gt;pyfunc&lt;/code&gt; unmodified.</source>
          <target state="translated">関数がベクトル化されない位置引数またはキーワード引数を表す文字列または整数のセット。これらは変更されずに直接 &lt;code&gt;pyfunc&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="852786c22c7b6e5d3fa7c9ca71d5ecb116430db0" translate="yes" xml:space="preserve">
          <source>Set operations for arrays based on sorting.</source>
          <target state="translated">ソートに基づく配列のセット操作。</target>
        </trans-unit>
        <trans-unit id="dd426fb4dd6e4754c713da93e729d89067e4bb9f" translate="yes" xml:space="preserve">
          <source>Set print options for the scope of the &lt;code&gt;with&lt;/code&gt; block, and restore the old options at the end. See &lt;a href=&quot;numpy.set_printoptions#numpy.set_printoptions&quot;&gt;&lt;code&gt;set_printoptions&lt;/code&gt;&lt;/a&gt; for the full description of available options.</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; ブロックのスコープに印刷オプションを設定し、最後に古いオプションを復元します。使用可能なオプションの詳細については、&lt;a href=&quot;numpy.set_printoptions#numpy.set_printoptions&quot;&gt; &lt;code&gt;set_printoptions&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="865d37322e223fb10d7a9b7ba6a65aa905f9c08b" translate="yes" xml:space="preserve">
          <source>Set printing options.</source>
          <target state="translated">印刷オプションを設定します。</target>
        </trans-unit>
        <trans-unit id="12d96b7d9d8a25110f724914dda75cc579f9b15b" translate="yes" xml:space="preserve">
          <source>Set routines</source>
          <target state="translated">ルーチンの設定</target>
        </trans-unit>
        <trans-unit id="90e5a4de82b432cd6a08040a41846a8b484aa8bd" translate="yes" xml:space="preserve">
          <source>Set self[key] to value.</source>
          <target state="translated">self[key]をvalueに設定します。</target>
        </trans-unit>
        <trans-unit id="03a01981fda3953041f5032c2c1e545ec21542ec" translate="yes" xml:space="preserve">
          <source>Set storage-indexed locations to corresponding values.</source>
          <target state="translated">ストレージインデックスのある場所を対応する値に設定します。</target>
        </trans-unit>
        <trans-unit id="b78901915d1c3e355e6e7781fdabdcf49646d0cb" translate="yes" xml:space="preserve">
          <source>Set the &lt;em&gt;iterator&lt;/em&gt; index and dataptr to the location in the array indicated by the integer &lt;em&gt;index&lt;/em&gt; which points to an element in the C-styled flattened array.</source>
          <target state="translated">&lt;em&gt;反復子&lt;/em&gt;インデックスとdataptrを、Cスタイルのフラット化された配列の要素を指す整数&lt;em&gt;インデックス&lt;/em&gt;で示される配列内の場所に設定し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4a1438d389936667e0dd90e958cbfcfc479a293a" translate="yes" xml:space="preserve">
          <source>Set the &lt;em&gt;iterator&lt;/em&gt; index, dataptr, and coordinates members to the location in the array indicated by the N-dimensional c-array, &lt;em&gt;destination&lt;/em&gt;, which must have size at least &lt;em&gt;iterator&lt;/em&gt; -&amp;gt;nd_m1+1.</source>
          <target state="translated">&lt;em&gt;イテレータ&lt;/em&gt;インデックス、dataptr、および座標メンバーを、少なくとも&lt;em&gt;イテレータ&lt;/em&gt; -&amp;gt; nd_m1 + 1のサイズでなければならないN次元のc配列、&lt;em&gt;destination&lt;/em&gt;で示される配列内の場所に設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b299e493bd0935fc88448c94801f1997339f1089" translate="yes" xml:space="preserve">
          <source>Set the argtypes attribute to a list whose entries contain objects with a classmethod named from_param that knows how to convert your object to an object that ctypes can understand (an int/long, string, unicode, or object with the &lt;code&gt;_as_parameter_&lt;/code&gt; attribute).</source>
          <target state="translated">argtypes属性を、オブジェクトをctypesが理解できるオブジェクト（int / long、string、unicode、または &lt;code&gt;_as_parameter_&lt;/code&gt; 属性を持つオブジェクト）に変換する方法を知っているfrom_paramという名前のクラスメソッドを持つオブジェクトがエントリに含まれるリストに設定します。</target>
        </trans-unit>
        <trans-unit id="9fda88468648975d476004e19b12d7764d8871eb" translate="yes" xml:space="preserve">
          <source>Set the divide by zero floating point exception</source>
          <target state="translated">ゼロによる除算の浮動小数点例外を設定します。</target>
        </trans-unit>
        <trans-unit id="052e8b4098d433df163dbe5f239a55cbd55acd03" translate="yes" xml:space="preserve">
          <source>Set the filling value of a masked array.</source>
          <target state="translated">マスクされた配列の充填値を設定します。</target>
        </trans-unit>
        <trans-unit id="9db96c8032d2ad506db915a48cc3b65dec28661e" translate="yes" xml:space="preserve">
          <source>Set the filling value of a, if a is a masked array.</source>
          <target state="translated">aがマスクされた配列の場合、aのフィリング値を設定します。</target>
        </trans-unit>
        <trans-unit id="8edcc5a32149cac92ce5f5d9a420660866edfc9a" translate="yes" xml:space="preserve">
          <source>Set the floating-point error callback function or log object.</source>
          <target state="translated">浮動小数点エラーコールバック関数またはログオブジェクトを設定します。</target>
        </trans-unit>
        <trans-unit id="f50931261f78ae53e6d835ee44ec72ac16267946" translate="yes" xml:space="preserve">
          <source>Set the internal state of the generator from a tuple.</source>
          <target state="translated">タプルからジェネレータの内部状態を設定します。</target>
        </trans-unit>
        <trans-unit id="b7c017b4e42e5916929d8c2729e2850e7861e4ad" translate="yes" xml:space="preserve">
          <source>Set the invalid floating point exception</source>
          <target state="translated">無効な浮動小数点の例外を設定します。</target>
        </trans-unit>
        <trans-unit id="5fc1b5b3104040e069bf3d79bfbecde1de4a9774" translate="yes" xml:space="preserve">
          <source>Set the mask.</source>
          <target state="translated">マスクを設定します。</target>
        </trans-unit>
        <trans-unit id="ddcd09abf8029d03a1fc8a1db4814b795eb053c2" translate="yes" xml:space="preserve">
          <source>Set the object that defines floating-point error handling.</source>
          <target state="translated">浮動小数点エラー処理を定義するオブジェクトを設定します。</target>
        </trans-unit>
        <trans-unit id="e125e8e413edbc9d7b60464db9303d04e73186dc" translate="yes" xml:space="preserve">
          <source>Set the overflow floating point exception</source>
          <target state="translated">オーバーフロー浮動小数点例外の設定</target>
        </trans-unit>
        <trans-unit id="32771428ee3d4ac8ada5bdd6145886e45b552f86" translate="yes" xml:space="preserve">
          <source>Set the size of the buffer used in ufuncs.</source>
          <target state="translated">ufuncsで使用するバッファのサイズを設定します。</target>
        </trans-unit>
        <trans-unit id="0594a866f8a04edf46179a77822269ada171c654" translate="yes" xml:space="preserve">
          <source>Set the underflow floating point exception</source>
          <target state="translated">アンダーフロー浮動小数点例外の設定</target>
        </trans-unit>
        <trans-unit id="74d19ff83e70ffb68238d34c2f7bcf87b543941d" translate="yes" xml:space="preserve">
          <source>Set treatment for all types of floating-point errors at once:</source>
          <target state="translated">すべての浮動小数点エラーの種類を一度に処理するように設定します。</target>
        </trans-unit>
        <trans-unit id="2bacc37a23889ec714670cdfe5fecedf315b4135" translate="yes" xml:space="preserve">
          <source>Set up and configure a &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt; account</source>
          <target state="translated">&lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt;アカウントを設定して構成します</target>
        </trans-unit>
        <trans-unit id="934f3ab472fce7c6568b2156a158b396fb14a162" translate="yes" xml:space="preserve">
          <source>Set up and configure a github account</source>
          <target state="translated">githubアカウントの設定と設定</target>
        </trans-unit>
        <trans-unit id="24dd5663183f0705285e5e40d51d2de2774a118e" translate="yes" xml:space="preserve">
          <source>Set up your editor to follow &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;PEP 8&lt;/a&gt; (remove trailing white space, no tabs, etc.). Check code with pyflakes / flake8.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;PEP 8&lt;/a&gt;に従うようにエディターを設定します（末尾の空白を削除し、タブを削除します）。pyflakes / flake8でコードを確認してください。</target>
        </trans-unit>
        <trans-unit id="2f196e543f2114715612962c8d3b1c8137a2f320" translate="yes" xml:space="preserve">
          <source>Set up your fork</source>
          <target state="translated">フォークをセットアップする</target>
        </trans-unit>
        <trans-unit id="ce6b655d86b17e69eddcf3fa6cf57de4d2e9e627" translate="yes" xml:space="preserve">
          <source>Set up your repository so &lt;code&gt;git pull&lt;/code&gt; pulls from &lt;code&gt;upstream&lt;/code&gt; by default:</source>
          <target state="translated">デフォルトでgitpullが &lt;code&gt;upstream&lt;/code&gt; から &lt;code&gt;git pull&lt;/code&gt; するようにリポジトリを設定します。</target>
        </trans-unit>
        <trans-unit id="3643bcad64c7deb0821dc34ea3dcd8232b0cde58" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;a.flat[n] = values[n]&lt;/code&gt; for each n where &lt;code&gt;mask.flat[n]==True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mask.flat[n]==True&lt;/code&gt; である各nに &lt;code&gt;a.flat[n] = values[n]&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="5df9a7759f3c95336d2489bfd2b71f6a63ff0e82" translate="yes" xml:space="preserve">
          <source>Sets self._data.flat[n] = values[n] for each n in indices. If &lt;code&gt;values&lt;/code&gt; is shorter than &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/a&gt; then it will repeat. If &lt;code&gt;values&lt;/code&gt; has some masked values, the initial mask is updated in consequence, else the corresponding values are unmasked.</source>
          <target state="translated">インデックスの各nにself._data.flat [n] = values [n]を設定します。 &lt;code&gt;values&lt;/code&gt; が&lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/a&gt;より短い場合は、繰り返されます。 &lt;code&gt;values&lt;/code&gt; にマスクされた値がある場合、結果として初期マスクが更新されます。それ以外の場合、対応する値はマスクされません。</target>
        </trans-unit>
        <trans-unit id="4b6bbd22699cc5a44aa30f4688fb3d6f05291031" translate="yes" xml:space="preserve">
          <source>Sets self._data.flat[n] = values[n] for each n in indices. If &lt;code&gt;values&lt;/code&gt; is shorter than &lt;a href=&quot;numpy.ma.indices#numpy.ma.indices&quot;&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/a&gt; then it will repeat. If &lt;code&gt;values&lt;/code&gt; has some masked values, the initial mask is updated in consequence, else the corresponding values are unmasked.</source>
          <target state="translated">インデックス内の各nにself._data.flat [n] = values [n]を設定します。 &lt;code&gt;values&lt;/code&gt; が&lt;a href=&quot;numpy.ma.indices#numpy.ma.indices&quot;&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/a&gt;よりも短い場合は繰り返されます。 &lt;code&gt;values&lt;/code&gt; にマスクされた値がある場合、結果として初期マスクが更新されます。それ以外の場合、対応する値はマスクされません。</target>
        </trans-unit>
        <trans-unit id="6e37f27c4b449514c6ac39ca56b186f5e999b75a" translate="yes" xml:space="preserve">
          <source>Sets the flag represented by &lt;code&gt;f&lt;/code&gt; of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">フラグによって表される設定 &lt;code&gt;f&lt;/code&gt; の仮定すると、にキャストすることができる &lt;code&gt;PyArrayObject*&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d60b0890a431be3750d67b0f7fe70b5f3af16d7e" translate="yes" xml:space="preserve">
          <source>Setting Up</source>
          <target state="translated">設定</target>
        </trans-unit>
        <trans-unit id="adf72c83614ca687d6f697b1bf172e89b7086997" translate="yes" xml:space="preserve">
          <source>Setting and getting error handling</source>
          <target state="translated">エラー処理の設定と取得</target>
        </trans-unit>
        <trans-unit id="81151f889bbd067b6b91cb320c1d8c0c937dceab" translate="yes" xml:space="preserve">
          <source>Setting the flag is only useful to aid with NumPy developement to ensure the new version is bug free and should be avoided for production code. It is a helpful test for projects that either create custom datatypes or use for example complicated structured dtypes. The flag is expected to be removed in 1.21 with the new version being always in use.</source>
          <target state="translated">このフラグを設定することは、NumPyの開発において、新バージョンにバグがないことを確認するためにのみ有効であり、プロダクションコードでは避けるべきである。これは、カスタムデータタイプを作成したり、複雑な構造のデータタイプを使用するプロジェクトに役立つテストです。このフラグは、1.21で削除され、新バージョンが常に使用されるようになる予定である。</target>
        </trans-unit>
        <trans-unit id="07c4909ef19e3a61ad16bdd17fc70d371fda482e" translate="yes" xml:space="preserve">
          <source>Setting the names</source>
          <target state="translated">名前の設定</target>
        </trans-unit>
        <trans-unit id="a384be3e2e0c4f12be39cdfe96a41f79740f7b44" translate="yes" xml:space="preserve">
          <source>Setting the timezone to UTC shows the same information, but with a Z suffix</source>
          <target state="translated">タイムゾーンをUTCに設定すると、同じ情報が表示されますが、接尾辞がZになります。</target>
        </trans-unit>
        <trans-unit id="5a9f0a4af2c6084c2784fc14b31f00dab0521ac3" translate="yes" xml:space="preserve">
          <source>Setting up</source>
          <target state="translated">設定</target>
        </trans-unit>
        <trans-unit id="efe55a3c73407daa5d9341f376c5889144a52435" translate="yes" xml:space="preserve">
          <source>Setting up and using your development environment</source>
          <target state="translated">開発環境の設定と使用</target>
        </trans-unit>
        <trans-unit id="aa4a226df76e5e8361726edfef50413981d0e099" translate="yes" xml:space="preserve">
          <source>Setting up git for NumPy development</source>
          <target state="translated">NumPy開発のためのgitの設定</target>
        </trans-unit>
        <trans-unit id="b171317f32aa40176413904ea160239515ac8105" translate="yes" xml:space="preserve">
          <source>Setting up the filtering function is similar and allows the filtering function to be called with ndarray arguments as the first two arguments and with pointers to integers (large enough to handle the strides and shape of an ndarray) as the last two arguments.:</source>
          <target state="translated">フィルタリング関数の設定も同様で、最初の2つの引数にndarrayの引数を、最後の2つの引数に整数へのポインタ(ndarrayのストライドと形状を扱うのに十分な大きさ)を指定してフィルタリング関数を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="e1d3a4c5f9d99de50e3926a4fb4bbceabef7db74" translate="yes" xml:space="preserve">
          <source>Settle on the mediator: while parties can propose a different mediator than the suggested candidate, only if common agreement is reached on all terms can the process move forward.</source>
          <target state="translated">調停委員に関する和解:当事者は、提案された候補者とは異なる調停委員を提案することができますが、すべての条件で共通の合意に達した場合にのみ、プロセスを前進させることができます。</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="c91695f6ab0af4734ea0166f05bdecf2943954de" translate="yes" xml:space="preserve">
          <source>Setup and teardown functions to functions and methods are known as &amp;ldquo;fixtures&amp;rdquo;, and their use is not encouraged.</source>
          <target state="translated">関数とメソッドへのセットアップおよびティアダウン関数は「フィクスチャ」と呼ばれ、それらの使用は推奨されません。</target>
        </trans-unit>
        <trans-unit id="badd1cce039672931750b6c398bce1ef82aaa01b" translate="yes" xml:space="preserve">
          <source>Several algorithms in NumPy work on arbitrarily strided arrays. However, some algorithms require single-segment arrays. When an irregularly strided array is passed in to such algorithms, a copy is automatically made.</source>
          <target state="translated">NumPyのいくつかのアルゴリズムは,任意のストライド配列で動作します.しかし,一部のアルゴリズムはシングルセグメント配列を必要とします.そのようなアルゴリズムに不規則にストライドされた配列が渡されると,自動的にコピーが作成されます.</target>
        </trans-unit>
        <trans-unit id="a13457498c6c9544e67cbe90a0e9f0dc104a3d19" translate="yes" xml:space="preserve">
          <source>Several array-creation functions of the ndarray allow specification of a particular sub-type to be created. This allows sub-types to be handled seamlessly in many routines. When a sub-type is created in such a fashion, however, neither the __new__ method nor the __init__ method gets called. Instead, the sub-type is allocated and the appropriate instance-structure members are filled in. Finally, the &lt;a href=&quot;../reference/arrays.classes#numpy.class.__array_finalize__&quot;&gt;&lt;code&gt;__array_finalize__&lt;/code&gt;&lt;/a&gt; attribute is looked-up in the object dictionary. If it is present and not None, then it can be either a CObject containing a pointer to a &lt;code&gt;PyArray_FinalizeFunc&lt;/code&gt; or it can be a method taking a single argument (which could be None).</source>
          <target state="translated">ndarrayのいくつかの配列作成関数を使用すると、特定のサブタイプを指定できます。これにより、サブタイプを多くのルーチンでシームレスに処理できます。ただし、このような方法でサブタイプが作成されると、__ new__メソッドも__init__メソッドも呼び出されません。代わりに、サブタイプが割り当てられ、適切なインスタンス構造メンバーが入力されます。最後に、&lt;a href=&quot;../reference/arrays.classes#numpy.class.__array_finalize__&quot;&gt; &lt;code&gt;__array_finalize__&lt;/code&gt; &lt;/a&gt;属性がオブジェクトディクショナリで検索されます。それが存在し、Noneでない場合は、 &lt;code&gt;PyArray_FinalizeFunc&lt;/code&gt; へのポインターを含むCObjectであるか、単一の引数を取るメソッド（Noneである可能性があります）のいずれかです。</target>
        </trans-unit>
        <trans-unit id="ee91814fe29cd50dd07cba70c00800f2c64e3183" translate="yes" xml:space="preserve">
          <source>Several arrays can be stacked together along different axes:</source>
          <target state="translated">複数の配列を異なる軸に沿って積み重ねることができます。</target>
        </trans-unit>
        <trans-unit id="9b90ce6fb4085d183a65fefb11a9d8d772bd909e" translate="yes" xml:space="preserve">
          <source>Several kinds of strings can be converted. Recognized strings can be prepended with &lt;code&gt;'&amp;gt;'&lt;/code&gt; (&lt;a href=&quot;../glossary#term-big-endian&quot;&gt;big-endian&lt;/a&gt;), &lt;code&gt;'&amp;lt;'&lt;/code&gt; (&lt;a href=&quot;../glossary#term-little-endian&quot;&gt;little-endian&lt;/a&gt;), or &lt;code&gt;'='&lt;/code&gt; (hardware-native, the default), to specify the byte order.</source>
          <target state="translated">数種類の文字列を変換できます。認識される文字列の前に &lt;code&gt;'&amp;gt;'&lt;/code&gt; （&lt;a href=&quot;../glossary#term-big-endian&quot;&gt;ビッグエンディアン&lt;/a&gt;）、 &lt;code&gt;'&amp;lt;'&lt;/code&gt; （&lt;a href=&quot;../glossary#term-little-endian&quot;&gt;リトルエンディアン&lt;/a&gt;）、または &lt;code&gt;'='&lt;/code&gt; （ハードウェアネイティブ、デフォルト）を付けて、バイト順序を指定できます。</target>
        </trans-unit>
        <trans-unit id="feb6d874b888999df457d285f3a6f7b3c564b09d" translate="yes" xml:space="preserve">
          <source>Several kinds of strings can be converted. Recognized strings can be prepended with &lt;code&gt;'&amp;gt;'&lt;/code&gt; (&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-big-endian&quot;&gt;big-endian&lt;/a&gt;), &lt;code&gt;'&amp;lt;'&lt;/code&gt; (&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-little-endian&quot;&gt;little-endian&lt;/a&gt;), or &lt;code&gt;'='&lt;/code&gt; (hardware-native, the default), to specify the byte order.</source>
          <target state="translated">いくつかの種類の文字列を変換できます。認識される文字列の前に &lt;code&gt;'&amp;gt;'&lt;/code&gt; （&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-big-endian&quot;&gt;ビッグエンディアン&lt;/a&gt;）、 &lt;code&gt;'&amp;lt;'&lt;/code&gt; （&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-little-endian&quot;&gt;リトルエンディアン&lt;/a&gt;）、または &lt;code&gt;'='&lt;/code&gt; （ハードウェアネイティブ、デフォルト）を付けて、バイトオーダーを指定できます。</target>
        </trans-unit>
        <trans-unit id="85d6a2092d89a65e46012bf0996318aa5023e324" translate="yes" xml:space="preserve">
          <source>Several new types are defined in the C-code. Most of these are accessible from Python, but a few are not exposed due to their limited use. Every new Python type has an associated &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; with an internal structure that includes a pointer to a &amp;ldquo;method table&amp;rdquo; that defines how the new object behaves in Python. When you receive a Python object into C code, you always get a pointer to a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure. Because a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure is very generic and defines only &lt;a href=&quot;#c.PyObject_HEAD&quot;&gt;&lt;code&gt;PyObject_HEAD&lt;/code&gt;&lt;/a&gt;, by itself it is not very interesting. However, different objects contain more details after the &lt;a href=&quot;#c.PyObject_HEAD&quot;&gt;&lt;code&gt;PyObject_HEAD&lt;/code&gt;&lt;/a&gt; (but you have to cast to the correct type to access them &amp;mdash; or use accessor functions or macros).</source>
          <target state="translated">Cコードでは、いくつかの新しいタイプが定義されています。これらのほとんどはPythonからアクセスできますが、使用が制限されているために公開されていないものもあります。すべての新しいPythonタイプには、Pythonでの新しいオブジェクトの動作を定義する「メソッドテーブル」へのポインターを含む内部構造を持つ&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;が関連付けられています。 PythonオブジェクトをCコードで受け取ると、常に&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;/a&gt;構造体へのポインターを取得します。ので&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject&lt;/code&gt; の&lt;/a&gt;構造は非常に一般的であり、唯一の定義&lt;a href=&quot;#c.PyObject_HEAD&quot;&gt; &lt;code&gt;PyObject_HEAD&lt;/code&gt; を&lt;/a&gt;、それ自体でそれは非常に興味深いものではありません。ただし、さまざまなオブジェクトには、&lt;a href=&quot;#c.PyObject_HEAD&quot;&gt; &lt;code&gt;PyObject_HEAD&lt;/code&gt; の&lt;/a&gt;後に詳細が含まれています（ただし、オブジェクトにアクセスするには、正しいタイプにキャストするか、アクセサ関数またはマクロを使用する必要があります）。</target>
        </trans-unit>
        <trans-unit id="ea3e5d75b76acbd893a6d1a1cc411aeb6e8d344d" translate="yes" xml:space="preserve">
          <source>Several new types are defined in the C-code. Most of these are accessible from Python, but a few are not exposed due to their limited use. Every new Python type has an associated &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; with an internal structure that includes a pointer to a &amp;ldquo;method table&amp;rdquo; that defines how the new object behaves in Python. When you receive a Python object into C code, you always get a pointer to a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure. Because a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure is very generic and defines only &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_HEAD&quot;&gt;&lt;code&gt;PyObject_HEAD&lt;/code&gt;&lt;/a&gt;, by itself it is not very interesting. However, different objects contain more details after the &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_HEAD&quot;&gt;&lt;code&gt;PyObject_HEAD&lt;/code&gt;&lt;/a&gt; (but you have to cast to the correct type to access them &amp;mdash; or use accessor functions or macros).</source>
          <target state="translated">Cコードでは、いくつかの新しい型が定義されています。これらのほとんどはPythonからアクセスできますが、使用が制限されているために公開されていないものもあります。すべての新しいPythonタイプには、関連付けられた&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt;があり、内部構造には、新しいオブジェクトがPythonでどのように動作するかを定義する「メソッドテーブル」へのポインターが含まれています。 PythonオブジェクトをCコードに受け取ると、常に&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;/a&gt;構造体へのポインターを取得します。ので&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject&lt;/code&gt; の&lt;/a&gt;構造は非常に一般的であり、唯一の定義&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_HEAD&quot;&gt; &lt;code&gt;PyObject_HEAD&lt;/code&gt; を&lt;/a&gt;、それ自体でそれは非常に興味深いものではありません。ただし、&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_HEAD&quot;&gt; &lt;code&gt;PyObject_HEAD&lt;/code&gt; の&lt;/a&gt;後には、オブジェクトごとに詳細が含まれています（ただし、オブジェクトにアクセスするには、正しいタイプにキャストする必要があります（または、アクセサー関数やマクロを使用します）。</target>
        </trans-unit>
        <trans-unit id="8baf8c262d837f958d6464df64e5309968744eec" translate="yes" xml:space="preserve">
          <source>Several of the linear algebra routines listed above are able to compute results for several matrices at once, if they are stacked into the same array.</source>
          <target state="translated">上に挙げたいくつかの線形代数ルーチンは,同じ配列にスタックされていれば,複数の行列の結果を一度に計算することができます.</target>
        </trans-unit>
        <trans-unit id="2dacd729f87ab003204bc2cd8332b6cc4d854b19" translate="yes" xml:space="preserve">
          <source>Several people sharing a single repository</source>
          <target state="translated">複数の人が一つのリポジトリを共有する</target>
        </trans-unit>
        <trans-unit id="72b4a9a262fa7d17e9ac09d705cde6aa24c8773a" translate="yes" xml:space="preserve">
          <source>Several python types are equivalent to a corresponding array scalar when used to generate a &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">いくつかのpythonタイプは、&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;オブジェクトの生成に使用される場合、対応する配列スカラーに相当します。</target>
        </trans-unit>
        <trans-unit id="d8d57e382f3991d452f308a37f4d81577154ad54" translate="yes" xml:space="preserve">
          <source>Several sentences providing an extended description. Refer to variables using back-ticks, e.g. &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">詳細な説明を提供するいくつかの文。 &lt;code&gt;var&lt;/code&gt; などのバックティックを使用して変数を参照してください。</target>
        </trans-unit>
        <trans-unit id="1600b8c8e0cd3be2f37da02262f382de60b6f611" translate="yes" xml:space="preserve">
          <source>Sexist, racist, or otherwise discriminatory jokes and language.</source>
          <target state="translated">性差別、人種差別、その他の差別的なジョークや言葉遣い。</target>
        </trans-unit>
        <trans-unit id="6c3e28ff5f28439895ee75d4f683fd40b7b5c1c1" translate="yes" xml:space="preserve">
          <source>Shape (length along each transformed axis) to use from the input. (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). The final element of &lt;code&gt;s&lt;/code&gt; corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;rfft(x, n)&lt;/code&gt;, while for the remaining axes, it corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;fft(x, n)&lt;/code&gt;. Along any axis, if the given shape is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. if &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used.</source>
          <target state="translated">入力から使用する形状（変換された各軸に沿った長さ）。（ &lt;code&gt;s[0]&lt;/code&gt; は軸0、 &lt;code&gt;s[1]&lt;/code&gt; は軸1などを指します）。最終要素 &lt;code&gt;s&lt;/code&gt; に相当する &lt;code&gt;n&lt;/code&gt; ため &lt;code&gt;rfft(x, n)&lt;/code&gt; 残りの軸の間に、それに対応する &lt;code&gt;n&lt;/code&gt; 個のために &lt;code&gt;fft(x, n)&lt;/code&gt; 。任意の軸に沿って、与えられた形状が入力の形状より小さい場合、入力は切り取られます。大きい場合、入力はゼロで埋められます。 &lt;code&gt;s&lt;/code&gt; が指定されていない場合、axesで指定された &lt;code&gt;axes&lt;/code&gt; 沿った入力の形状が使用されます。</target>
        </trans-unit>
        <trans-unit id="25e97af4557ebd95034e25fa1946abe7364f73b7" translate="yes" xml:space="preserve">
          <source>Shape (length of each axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). This corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;ifft(x, n)&lt;/code&gt;. Along each axis, if the given shape is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. if &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used. See notes for issue on &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt; zero padding.</source>
          <target state="translated">出力の形状（各軸の長さ）（ &lt;code&gt;s[0]&lt;/code&gt; は軸0を、 &lt;code&gt;s[1]&lt;/code&gt; は軸1を、など）。これに該当する &lt;code&gt;n&lt;/code&gt; ため &lt;code&gt;ifft(x, n)&lt;/code&gt; 。各軸に沿って、与えられた形状が入力の形状より小さい場合、入力は切り取られます。大きい場合、入力はゼロで埋められます。 &lt;code&gt;s&lt;/code&gt; が指定されていない場合、axesで指定された &lt;code&gt;axes&lt;/code&gt; 沿った入力の形状が使用されます。&lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt;ゼロパディングに関する問題については、注記を参照してください。</target>
        </trans-unit>
        <trans-unit id="4f0274375e7f902c51299d209c86d1f430d2633d" translate="yes" xml:space="preserve">
          <source>Shape (length of each transformed axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). &lt;code&gt;s&lt;/code&gt; is also the number of input points used along this axis, except for the last axis, where &lt;code&gt;s[-1]//2+1&lt;/code&gt; points of the input are used. Along any axis, if the shape indicated by &lt;code&gt;s&lt;/code&gt; is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. If &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used.</source>
          <target state="translated">（形状の出力（各変換軸の長さ） &lt;code&gt;s[0]&lt;/code&gt; 軸0を指し、 &lt;code&gt;s[1]&lt;/code&gt; 等軸1へ）。 &lt;code&gt;s&lt;/code&gt; は、最後の軸を除いて、この軸に沿って使用される入力ポイントの数でもあり、入力 &lt;code&gt;s[-1]//2+1&lt;/code&gt; ポイントが使用されます。任意の軸に沿って、 &lt;code&gt;s&lt;/code&gt; で示される形状が入力の形状よりも小さい場合、入力はトリミングされます。大きい場合、入力はゼロで埋められます。 &lt;code&gt;s&lt;/code&gt; が指定されていない場合、axesで指定された &lt;code&gt;axes&lt;/code&gt; 沿った入力の形状が使用されます。</target>
        </trans-unit>
        <trans-unit id="4c31ca7f114595ee4198765b2a8eb90c036202b2" translate="yes" xml:space="preserve">
          <source>Shape (length of each transformed axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). &lt;code&gt;s&lt;/code&gt; is also the number of input points used along this axis, except for the last axis, where &lt;code&gt;s[-1]//2+1&lt;/code&gt; points of the input are used. Along any axis, if the shape indicated by &lt;code&gt;s&lt;/code&gt; is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. If &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by axes is used. Except for the last axis which is taken to be &lt;code&gt;2*(m-1)&lt;/code&gt; where &lt;code&gt;m&lt;/code&gt; is the length of the input along that axis.</source>
          <target state="translated">出力の形状（変換された各軸の長さ）（ &lt;code&gt;s[0]&lt;/code&gt; は軸0を指し、 &lt;code&gt;s[1]&lt;/code&gt; は軸1を指しますなど）。 &lt;code&gt;s&lt;/code&gt; は、入力 &lt;code&gt;s[-1]//2+1&lt;/code&gt; ポイントが使用される最後の軸を除いて、この軸に沿って使用される入力ポイントの数でもあります。任意の軸に沿って、 &lt;code&gt;s&lt;/code&gt; で示される形状が入力の形状よりも小さい場合、入力はトリミングされます。大きい場合、入力にはゼロが埋め込まれます。 &lt;code&gt;s&lt;/code&gt; が指定されていない場合、axesで指定された軸に沿った入力の形状が使用されます。であると解釈される最後の軸を除き、 &lt;code&gt;2*(m-1)&lt;/code&gt; &lt;code&gt;m&lt;/code&gt; は、その軸に沿った入力の長さです。</target>
        </trans-unit>
        <trans-unit id="715197f23d8523982bbe5b136ca8694c043fdfe2" translate="yes" xml:space="preserve">
          <source>Shape (length of each transformed axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). This corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;fft(x, n)&lt;/code&gt;. Along any axis, if the given shape is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. if &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used.</source>
          <target state="translated">出力の形状（変換された各軸の長さ）（ &lt;code&gt;s[0]&lt;/code&gt; は軸0を、 &lt;code&gt;s[1]&lt;/code&gt; は軸1を、など）。これは、 &lt;code&gt;fft(x, n)&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; に対応します。任意の軸に沿って、与えられた形状が入力の形状より小さい場合、入力は切り取られます。大きい場合、入力はゼロで埋められます。 &lt;code&gt;s&lt;/code&gt; が指定されていない場合、axesで指定された &lt;code&gt;axes&lt;/code&gt; 沿った入力の形状が使用されます。</target>
        </trans-unit>
        <trans-unit id="911dd842dd5fbba1fec3b25f55cac11209b63564" translate="yes" xml:space="preserve">
          <source>Shape (length of each transformed axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). This corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;fft(x, n)&lt;/code&gt;. Along each axis, if the given shape is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. if &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used.</source>
          <target state="translated">出力の形状（変換された各軸の長さ）（ &lt;code&gt;s[0]&lt;/code&gt; は軸0を、 &lt;code&gt;s[1]&lt;/code&gt; は軸1を、など）。これは、 &lt;code&gt;fft(x, n)&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; に対応します。各軸に沿って、与えられた形状が入力の形状より小さい場合、入力は切り取られます。大きい場合、入力はゼロで埋められます。 &lt;code&gt;s&lt;/code&gt; が指定されていない場合、axesで指定された &lt;code&gt;axes&lt;/code&gt; 沿った入力の形状が使用されます。</target>
        </trans-unit>
        <trans-unit id="b17262b4844364ff0a648b69b2dd5889d0fd6ded" translate="yes" xml:space="preserve">
          <source>Shape (length of each transformed axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). This corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;ifft(x, n)&lt;/code&gt;. Along any axis, if the given shape is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. if &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used. See notes for issue on &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt; zero padding.</source>
          <target state="translated">出力の形状（変換された各軸の長さ）（ &lt;code&gt;s[0]&lt;/code&gt; は軸0を、 &lt;code&gt;s[1]&lt;/code&gt; は軸1を、など）。これは &lt;code&gt;ifft(x, n)&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; に対応します。任意の軸に沿って、与えられた形状が入力の形状より小さい場合、入力は切り取られます。大きい場合、入力はゼロで埋められます。 &lt;code&gt;s&lt;/code&gt; が指定されていない場合、axesで指定された &lt;code&gt;axes&lt;/code&gt; 沿った入力の形状が使用されます。&lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt;ゼロパディングに関する問題については、注記を参照してください。</target>
        </trans-unit>
        <trans-unit id="4ebeb877c0987d74b5cc7ea4944124e8bf55dfce" translate="yes" xml:space="preserve">
          <source>Shape Manipulation</source>
          <target state="translated">形状の操作</target>
        </trans-unit>
        <trans-unit id="c9f4b98b8edf5592548ab5955c6e16a228f358cb" translate="yes" xml:space="preserve">
          <source>Shape consistent means they are either the same shape, or one input array can be broadcasted to create the same shape as the other one.</source>
          <target state="translated">形状に一貫性があるということは,それらが同じ形状であるか,あるいは,一方の入力配列をブロードキャストして他方の入力配列と同じ形状にすることができることを意味します.</target>
        </trans-unit>
        <trans-unit id="5f1d9e046d241980c89d8b9124d4eafb15b1ca52" translate="yes" xml:space="preserve">
          <source>Shape manipulation</source>
          <target state="translated">形状操作</target>
        </trans-unit>
        <trans-unit id="3b6ca0ce8b60b462e3cf99cb12bf59179d6a929d" translate="yes" xml:space="preserve">
          <source>Shape of broadcasted result.</source>
          <target state="translated">放送結果の形状。</target>
        </trans-unit>
        <trans-unit id="bddad57d8d1388e963005420a02793b2da427fb5" translate="yes" xml:space="preserve">
          <source>Shape of created array.</source>
          <target state="translated">作成された配列の形状。</target>
        </trans-unit>
        <trans-unit id="818a25b0afe1b04d91a3db71658f37d35b630552" translate="yes" xml:space="preserve">
          <source>Shape of each array.</source>
          <target state="translated">各配列の形状。</target>
        </trans-unit>
        <trans-unit id="6cd9e448195effa4bae30eb0f347906fc449b5d5" translate="yes" xml:space="preserve">
          <source>Shape of output array.</source>
          <target state="translated">出力配列の形状。</target>
        </trans-unit>
        <trans-unit id="46e7814f1b68d56a7fb197281826d8c0d7e2f4af" translate="yes" xml:space="preserve">
          <source>Shape of resized array.</source>
          <target state="translated">リサイズされた配列の形状。</target>
        </trans-unit>
        <trans-unit id="ee903849125469d0cd897ee6f3eb2ebe3bb658c4" translate="yes" xml:space="preserve">
          <source>Shape of the FFT.</source>
          <target state="translated">FFTの形状。</target>
        </trans-unit>
        <trans-unit id="93a4d2c249aa77d74ddbee4b73894079d88c4f5d" translate="yes" xml:space="preserve">
          <source>Shape of the array.</source>
          <target state="translated">配列の形状。</target>
        </trans-unit>
        <trans-unit id="02877fc62d2c6f24e10d1abc3b67c8004f59d738" translate="yes" xml:space="preserve">
          <source>Shape of the distribution. Must be positive.</source>
          <target state="translated">分布の形状。正でなければならない。</target>
        </trans-unit>
        <trans-unit id="f2d500bd962f41d17541e213ff6895cd13e0803e" translate="yes" xml:space="preserve">
          <source>Shape of the empty array, e.g., &lt;code&gt;(2, 3)&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">空の配列の形状 &lt;code&gt;(2, 3)&lt;/code&gt; 例：（2、3）または &lt;code&gt;2&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="24ef6c437154658151fd05bcb5ba7d5668bdcc5d" translate="yes" xml:space="preserve">
          <source>Shape of the empty matrix.</source>
          <target state="translated">空の行列の形状。</target>
        </trans-unit>
        <trans-unit id="655648f0fa12f5cdf873e10745fb89b0bd95696d" translate="yes" xml:space="preserve">
          <source>Shape of the inverse FFT.</source>
          <target state="translated">逆FFTの形状。</target>
        </trans-unit>
        <trans-unit id="3199c5dcca84fd372c42321d02949f1a124a4434" translate="yes" xml:space="preserve">
          <source>Shape of the matrix</source>
          <target state="translated">マトリックスの形状</target>
        </trans-unit>
        <trans-unit id="c98d12cd91ff402d167f61e45930510176bc8db1" translate="yes" xml:space="preserve">
          <source>Shape of the new array, e.g., &lt;code&gt;(2, 3)&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(2, 3)&lt;/code&gt; や &lt;code&gt;2&lt;/code&gt; など、新しい配列の形状。</target>
        </trans-unit>
        <trans-unit id="011eae76336380495ec0325c87bbf97467274627" translate="yes" xml:space="preserve">
          <source>Shape of the output array, which also determines the shape of the coordinate arrays passed to &lt;code&gt;function&lt;/code&gt;.</source>
          <target state="translated">出力配列の形状。これは、 &lt;code&gt;function&lt;/code&gt; に渡される座標配列の形状も決定します。</target>
        </trans-unit>
        <trans-unit id="c07147cdf3a1896289324d57eac09581fa428dd6" translate="yes" xml:space="preserve">
          <source>Shape of the output. If given as N integers, each integer specifies the size of one dimension. If given as a tuple, this tuple gives the complete shape.</source>
          <target state="translated">出力の形状。N個の整数として与えられた場合,各整数は1次元の大きさを指定します.タプルとして与えられた場合,このタプルは完全な形状を与えます.</target>
        </trans-unit>
        <trans-unit id="f87637ff96718f6c6acc84960eb8149c37e2f7dc" translate="yes" xml:space="preserve">
          <source>Shape of the real output to the inverse FFT.</source>
          <target state="translated">逆FFTへの実出力の形状。</target>
        </trans-unit>
        <trans-unit id="af9d8afd8fa749d8e52d9830aee69713b28d831e" translate="yes" xml:space="preserve">
          <source>Shape of the required MaskedArray.</source>
          <target state="translated">必要なMaskedArrayの形状。</target>
        </trans-unit>
        <trans-unit id="f193325063386f8670f6bce639fd004cd8504ab4" translate="yes" xml:space="preserve">
          <source>Shape of the resulting array. If not provided, inferred from &lt;code&gt;arrayList[0]&lt;/code&gt;.</source>
          <target state="translated">結果の配列の形状。指定されていない場合は、 &lt;code&gt;arrayList[0]&lt;/code&gt; から推測されます。</target>
        </trans-unit>
        <trans-unit id="e290412db84643bfd2e4e9eaed5764c99448847e" translate="yes" xml:space="preserve">
          <source>Shape parameter for the distribution. Must be in the range (0, 1).</source>
          <target state="translated">分布の形状パラメータ。範囲(0,1)でなければなりません。</target>
        </trans-unit>
        <trans-unit id="83905d9bb159cfd69b777f36625de825a5e41d49" translate="yes" xml:space="preserve">
          <source>Shape parameter for window.</source>
          <target state="translated">ウィンドウの形状パラメータ。</target>
        </trans-unit>
        <trans-unit id="9b7a43cf04b72cc2f8a23566b289e4d0bd8ec177" translate="yes" xml:space="preserve">
          <source>Shape parameter of the distribution. Must be nonnegative.</source>
          <target state="translated">分布の形状パラメータ。非負でなければなりません。</target>
        </trans-unit>
        <trans-unit id="8e3c6edf56bb87890fd0d1cdb08c97f69b223d25" translate="yes" xml:space="preserve">
          <source>Shape tuple of the sub-array if this data type describes a sub-array, and &lt;code&gt;()&lt;/code&gt; otherwise.</source>
          <target state="translated">このデータ型がサブ配列を表す場合はサブ配列の形状タプル、そうでない場合は &lt;code&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="446e2a7d2369f9d1a3b2488394691efa0754afe6" translate="yes" xml:space="preserve">
          <source>Shape tuple, the shape of the iterator.</source>
          <target state="translated">形状タプル、イテレータの形状。</target>
        </trans-unit>
        <trans-unit id="97199b837363f72dd4350eb91690dc95c41183ea" translate="yes" xml:space="preserve">
          <source>Shape, axis and array properties</source>
          <target state="translated">形状、軸、配列のプロパティ</target>
        </trans-unit>
        <trans-unit id="4737472ac1933c52f0c3cc2cfc96a958bfe52820" translate="yes" xml:space="preserve">
          <source>Shape-1 fields in dtypes won&amp;rsquo;t be collapsed to scalars in a future version</source>
          <target state="translated">dtypesのShape-1フィールドは、将来のバージョンでスカラーに折りたたまれません。</target>
        </trans-unit>
        <trans-unit id="553abfec4e1a448d4b14d3d81794f14b5ad2fe5b" translate="yes" xml:space="preserve">
          <source>Share status of the mask (read-only).</source>
          <target state="translated">マスクの状態を共有します(読み取り専用)。</target>
        </trans-unit>
        <trans-unit id="0623dae016dff8efe16121fd71d3922aed43e23d" translate="yes" xml:space="preserve">
          <source>Sharing private content, such as emails sent privately or non-publicly, or unlogged forums such as IRC channel history, without the sender&amp;rsquo;s consent.</source>
          <target state="translated">送信者の同意なしに、非公開または非公開で送信された電子メールなどのプライベートコンテンツ、またはIRCチャネル履歴などのログに記録されていないフォーラムを共有する。</target>
        </trans-unit>
        <trans-unit id="7c87de531eb450c69f475f1cc68cfb4c95a8aa3e" translate="yes" xml:space="preserve">
          <source>Shift the bits of an integer to the left.</source>
          <target state="translated">整数のビットを左にシフトします。</target>
        </trans-unit>
        <trans-unit id="2f8deb45beae3abccb987abecafce17d01cca0db" translate="yes" xml:space="preserve">
          <source>Shift the bits of an integer to the right.</source>
          <target state="translated">整数のビットを右にシフトします。</target>
        </trans-unit>
        <trans-unit id="4b62e14d6acb41a9881dd5c7d1b632d11117bf42" translate="yes" xml:space="preserve">
          <source>Shift the zero-frequency component only along the second axis:</source>
          <target state="translated">第2軸に沿ってゼロ周波数成分のみをシフトさせます。</target>
        </trans-unit>
        <trans-unit id="dd4356118ce17af4ac61d8e18b734f9c851e6a93" translate="yes" xml:space="preserve">
          <source>Shift the zero-frequency component to the center of the spectrum.</source>
          <target state="translated">ゼロ周波数成分をスペクトルの中心にシフトさせます。</target>
        </trans-unit>
        <trans-unit id="5055dc1fca0e758173b975d01eb66d87f3cbb17c" translate="yes" xml:space="preserve">
          <source>Shift zero-frequency component to the center of the spectrum.</source>
          <target state="translated">ゼロ周波数成分をスペクトルの中心にシフトさせます。</target>
        </trans-unit>
        <trans-unit id="b180ab3848496fb12e866c104e23d82cd3b364fd" translate="yes" xml:space="preserve">
          <source>Shifts zero-frequency terms to centre of array</source>
          <target state="translated">ゼロ周波数の項をアレイの中心にシフト</target>
        </trans-unit>
        <trans-unit id="277215a3b406656029fa8041449bf3521c519abc" translate="yes" xml:space="preserve">
          <source>Shifts zero-frequency terms to the center of the array. For two-dimensional input, swaps first and third quadrants, and second and fourth quadrants.</source>
          <target state="translated">ゼロ周波数の項を配列の中心にシフトします。2次元入力の場合,第1象限と第3象限,第2象限と第4象限を入れ替えます.</target>
        </trans-unit>
        <trans-unit id="609f71722b1e0b0ddda63eb0a8662f11ffaacc20" translate="yes" xml:space="preserve">
          <source>Short answer</source>
          <target state="translated">ショートアンサー</target>
        </trans-unit>
        <trans-unit id="b762aac578ae466a940477f419de45f5524873a7" translate="yes" xml:space="preserve">
          <source>Short repeat rule</source>
          <target state="translated">ショートリピートルール</target>
        </trans-unit>
        <trans-unit id="9d55add28a10423436ae7204b8967feb872c3c9b" translate="yes" xml:space="preserve">
          <source>Shortcut functions</source>
          <target state="translated">ショートカット機能</target>
        </trans-unit>
        <trans-unit id="82df73654f5b2a3f44b1124d8173803e26dbe857" translate="yes" xml:space="preserve">
          <source>Shortcut to &lt;code&gt;masked_where&lt;/code&gt;, where &lt;code&gt;condition&lt;/code&gt; is True for &lt;code&gt;x&lt;/code&gt; inside the interval [v1,v2] (v1 &amp;lt;= x &amp;lt;= v2). The boundaries &lt;code&gt;v1&lt;/code&gt; and &lt;code&gt;v2&lt;/code&gt; can be given in either order.</source>
          <target state="translated">&lt;code&gt;masked_where&lt;/code&gt; へのショートカット。ここで、 &lt;code&gt;condition&lt;/code&gt; は区間[v1、v2]（v1 &amp;lt;= x &amp;lt;= v2）内の &lt;code&gt;x&lt;/code&gt; に対して Trueです。境界 &lt;code&gt;v1&lt;/code&gt; と &lt;code&gt;v2&lt;/code&gt; はどちらの順序でも指定できます。</target>
        </trans-unit>
        <trans-unit id="2b41646ab781bb52f3ec916c5f5214e0562ccf8b" translate="yes" xml:space="preserve">
          <source>Shortcut to &lt;code&gt;masked_where&lt;/code&gt;, where &lt;code&gt;condition&lt;/code&gt; is True for &lt;code&gt;x&lt;/code&gt; outside the interval [v1,v2] (x &amp;lt; v1)|(x &amp;gt; v2). The boundaries &lt;code&gt;v1&lt;/code&gt; and &lt;code&gt;v2&lt;/code&gt; can be given in either order.</source>
          <target state="translated">&lt;code&gt;masked_where&lt;/code&gt; へのショートカット。ここで、 &lt;code&gt;condition&lt;/code&gt; は区間[v1、v2]外の &lt;code&gt;x&lt;/code&gt; に対して Trueです（x &amp;lt;v1）|（x&amp;gt; v2）。境界 &lt;code&gt;v1&lt;/code&gt; と &lt;code&gt;v2&lt;/code&gt; はどちらの順序でも指定できます。</target>
        </trans-unit>
        <trans-unit id="ced5f0ef00997398994de090b892574d2e91c8dd" translate="yes" xml:space="preserve">
          <source>Should comments be added, or rather removed as unhelpful or extraneous?</source>
          <target state="translated">コメントを追加すべきか、むしろ役に立たないものや余計なものとして削除すべきか。</target>
        </trans-unit>
        <trans-unit id="acdc204ec7aab16219e80f4999281b4fbb5c2edb" translate="yes" xml:space="preserve">
          <source>Should variable names be improved for clarity or consistency?</source>
          <target state="translated">明瞭さや一貫性のために変数名を改善すべきか?</target>
        </trans-unit>
        <trans-unit id="90a7ea5e6af4c7b7105e0bea7e0631a8b326d3c4" translate="yes" xml:space="preserve">
          <source>Show how an extreme value distribution can arise from a Gaussian process and compare to a Gaussian:</source>
          <target state="translated">極値分布がガウス過程からどのように発生するかを示し、ガウスと比較してください。</target>
        </trans-unit>
        <trans-unit id="b56794a666b325c7452f614533fd9e51fb479063" translate="yes" xml:space="preserve">
          <source>Show libraries in the system on which NumPy was built.</source>
          <target state="translated">NumPyがビルドされたシステムのライブラリを表示します。</target>
        </trans-unit>
        <trans-unit id="19b965e86e175fb4e059f2686baef10d13deee7c" translate="yes" xml:space="preserve">
          <source>Show the coefficient of the k-th power in the polynomial (which is equivalent to &lt;code&gt;p.c[-(i+1)]&lt;/code&gt;):</source>
          <target state="translated">多項式でk乗の係数を表示します（これは &lt;code&gt;p.c[-(i+1)]&lt;/code&gt; と同等です）。</target>
        </trans-unit>
        <trans-unit id="2dc1d2c7e18782c1b84edd4a515e52ecaf16ffe6" translate="yes" xml:space="preserve">
          <source>Show the coefficients:</source>
          <target state="translated">係数を表示します。</target>
        </trans-unit>
        <trans-unit id="196a4e0eff8a41440049d47c5b180f7f45132ca2" translate="yes" xml:space="preserve">
          <source>Show which elements are NaN.</source>
          <target state="translated">どの要素がNaNであるかを示す。</target>
        </trans-unit>
        <trans-unit id="c42d9c8bf1bc36b5a64f8cd7d6ec47959c633d86" translate="yes" xml:space="preserve">
          <source>Show which elements are not NaN or +/-inf.</source>
          <target state="translated">どの要素がNaNまたは+/infでないかを示す。</target>
        </trans-unit>
        <trans-unit id="1722f8e8697cd3b5c7fd5053f2fe5fc8ffff0c94" translate="yes" xml:space="preserve">
          <source>Showing the shape equivalence:</source>
          <target state="translated">形状の等価性を示す。</target>
        </trans-unit>
        <trans-unit id="78c27257780bd2122b57fd1c62035f0e4e503ed6" translate="yes" xml:space="preserve">
          <source>Shown commented is the &lt;code&gt;cython.boundscheck&lt;/code&gt; decorator, which turns bounds-checking for memory view accesses on or off on a per-function basis. We can use this to further speed up our code, at the expense of safety (or a manual check prior to entering the loop).</source>
          <target state="translated">コメント付きで示されているのは、 &lt;code&gt;cython.boundscheck&lt;/code&gt; デコレータです。これは、関数ごとにメモリビューアクセスの境界チェックをオンまたはオフにします。これを使用して、安全性（またはループに入る前の手動チェック）を犠牲にして、コードをさらに高速化できます。</target>
        </trans-unit>
        <trans-unit id="f7b90b8e09428e6e1e81258972869d09b4e3cfb5" translate="yes" xml:space="preserve">
          <source>Shows which elements are Not a Number (NaN).</source>
          <target state="translated">どの要素がNaN(Not a Number)であるかを表示します。</target>
        </trans-unit>
        <trans-unit id="fe897f37d53e4d88b6771d092e29d0cbef83871f" translate="yes" xml:space="preserve">
          <source>Shows which elements are finite (not NaN, not infinity)</source>
          <target state="translated">どの要素が有限であるかを示す(NaNではなく、無限ではない</target>
        </trans-unit>
        <trans-unit id="7baa9edf65ea714b6abdb42e0d551c9f633b7a31" translate="yes" xml:space="preserve">
          <source>Shows which elements are negative infinity.</source>
          <target state="translated">どの要素が負の無限大であるかを表示します。</target>
        </trans-unit>
        <trans-unit id="8a9af7136c0a378e79ffd9025ff0d52b52f3f5b3" translate="yes" xml:space="preserve">
          <source>Shows which elements are neither NaN nor infinity.</source>
          <target state="translated">どの要素がNaNでも無限大でもないかを表示します。</target>
        </trans-unit>
        <trans-unit id="b641e3652a21af65f93f39772715d39737df1101" translate="yes" xml:space="preserve">
          <source>Shows which elements are positive infinity.</source>
          <target state="translated">どの要素が正の無限大であるかを表示します。</target>
        </trans-unit>
        <trans-unit id="cae71eb0e9768c0464ac97199ab347f3e2d0b2fa" translate="yes" xml:space="preserve">
          <source>Shows which elements are positive or negative infinity.</source>
          <target state="translated">どの要素が正の無限大か負の無限大かを表示します。</target>
        </trans-unit>
        <trans-unit id="fb36ed0dc4329ccc9a4d63a4ab49050cba7729e3" translate="yes" xml:space="preserve">
          <source>Shrinking an array: array is flattened (in the order that the data are stored in memory), resized, and reshaped:</source>
          <target state="translated">配列の縮小:配列を平坦化(メモリにデータが格納されている順に)→リサイズ→リシェイプ。</target>
        </trans-unit>
        <trans-unit id="58c6f54429dd2870d35a18395965f5a1b38823a8" translate="yes" xml:space="preserve">
          <source>Shuffle the rows of &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; の行をシャッフルします：</target>
        </trans-unit>
        <trans-unit id="44d7d0d72aadcc192ac3995e5b56c0102f7a1b89" translate="yes" xml:space="preserve">
          <source>Shuffling non-NumPy sequences</source>
          <target state="translated">NumPy以外の配列をシャッフルする</target>
        </trans-unit>
        <trans-unit id="57d924a0266c81fc54add4584a1ccacbe3e83546" translate="yes" xml:space="preserve">
          <source>Signals to nose that this function is or is not a test.</source>
          <target state="translated">この機能がテストであること、またはテストでないことを鼻に知らせます。</target>
        </trans-unit>
        <trans-unit id="2f32be1dc74166373c988ec03b0bd86f0a576919" translate="yes" xml:space="preserve">
          <source>Signature</source>
          <target state="translated">Signature</target>
        </trans-unit>
        <trans-unit id="cdb0058a181250a9ed3dc6baaf33739c00830333" translate="yes" xml:space="preserve">
          <source>Signature file</source>
          <target state="translated">署名ファイル</target>
        </trans-unit>
        <trans-unit id="48c25274f2c6a3a31b614cf30d6e68f12adabdbb" translate="yes" xml:space="preserve">
          <source>Signature files may contain arbitrary Fortran code (so that Fortran codes can be considered as signature files). F2PY silently ignores Fortran constructs that are irrelevant for creating the interface. However, this includes also syntax errors. So, be careful not making ones ;-).</source>
          <target state="translated">署名ファイルは任意のFortranコードを含むことがあります(Fortranコードが署名ファイルとみなされるように)。F2PY は、インターフェイスの作成に無関係な Fortran コンストラクトを黙って無視します。しかし、これには構文エラーも含まれます。なので、ミスをしないように気をつけてください。)</target>
        </trans-unit>
        <trans-unit id="2556fe3e1954aac2c0d596053d8410a59d32ec25" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with C &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">C &lt;code&gt;char&lt;/code&gt; と互換性のある符号付き整数型。</target>
        </trans-unit>
        <trans-unit id="1ed4ffba395cdc78a06bc8aef22d52feeb9ef587" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with C &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">Cのと互換性のある符号付き整数型、 &lt;code&gt;int&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2df765a1d1b4bfd63f3eef6c165d9bac728dd845" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with C &lt;code&gt;long long&lt;/code&gt;.</source>
          <target state="translated">Cと互換性のある整数型を、署名された &lt;code&gt;long long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8c3ddadee8eb882f252acb34d3759790567639b" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with C &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">Cのと互換性のある符号付き整数型、 &lt;code&gt;short&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3535a51d5a67e5c7e53fbd6a214f69c4b8cd2511" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with C &lt;code&gt;unsigned long long&lt;/code&gt;.</source>
          <target state="translated">型符号付き整数、Cとの互換性は、 &lt;code&gt;unsigned long long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6ed12d0e004eac85a220db2690db8547d7f3e1e" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with Python &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; and C &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">Pythonのと互換性のある符号付き整数型、&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;及びC &lt;code&gt;long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8655a56d33a88ccca3424a80c2615a1309c9dd5" translate="yes" xml:space="preserve">
          <source>Signed integer types</source>
          <target state="translated">符号付き整数型</target>
        </trans-unit>
        <trans-unit id="da359fb8c5b11d9028368f0d4871e060007c46d2" translate="yes" xml:space="preserve">
          <source>Signed zero when using divmod</source>
          <target state="translated">divmod を使用している場合は、0 に符号を付けます。</target>
        </trans-unit>
        <trans-unit id="fe5067c25ed2390437f2a3346e95bda2cae66467" translate="yes" xml:space="preserve">
          <source>Similar function in SciPy (SVD-based).</source>
          <target state="translated">SciPy(SVDベース)でも同様の機能があります。</target>
        </trans-unit>
        <trans-unit id="4c8f44d09da8431defcd27c477cf2b5bbabb029b" translate="yes" xml:space="preserve">
          <source>Similar function in SciPy (but also solves the generalized eigenvalue problem).</source>
          <target state="translated">SciPyでも似たような関数があります(一般化された固有値問題も解いています).</target>
        </trans-unit>
        <trans-unit id="f14a4ed123dc0817aed12a4d9e25e01388c701ad" translate="yes" xml:space="preserve">
          <source>Similar function in SciPy that also solves the generalized eigenvalue problem.</source>
          <target state="translated">一般化された固有値問題を解くSciPyの類似関数.</target>
        </trans-unit>
        <trans-unit id="bb0f879da7865ee7c2e51093714874b7e0056059" translate="yes" xml:space="preserve">
          <source>Similar function in SciPy.</source>
          <target state="translated">SciPyでも同様の機能があります。</target>
        </trans-unit>
        <trans-unit id="7931cda1fe427976dc0d85722ec095e3dd727c1d" translate="yes" xml:space="preserve">
          <source>Similar function which always returns ndarrays.</source>
          <target state="translated">常に ndarrays を返す類似の関数。</target>
        </trans-unit>
        <trans-unit id="3274df1aa677da58a67e936b08b6d01b18ae9bbb" translate="yes" xml:space="preserve">
          <source>Similar function which checks input for NaNs and Infs.</source>
          <target state="translated">NaNsやInfsの入力をチェックする類似の関数。</target>
        </trans-unit>
        <trans-unit id="5bfc139e101673a0040c4eaa29d6026a0cc4d777" translate="yes" xml:space="preserve">
          <source>Similar function which passes through subclasses.</source>
          <target state="translated">サブクラスを通過する似たような関数</target>
        </trans-unit>
        <trans-unit id="385cb8c7bac921aa96fc7c5b5e20aadf977c2b11" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c.PyArray_FROM_O&quot;&gt;&lt;code&gt;PyArray_FROM_O&lt;/code&gt;&lt;/a&gt; except it can take an argument of &lt;em&gt;requirements&lt;/em&gt; indicating properties the resulting array must have. Available requirements that can be enforced are &lt;a href=&quot;#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_F_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_F_CONTIGUOUS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_ALIGNED&quot;&gt;&lt;code&gt;NPY_ARRAY_ALIGNED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_NOTSWAPPED&quot;&gt;&lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_ENSURECOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_ENSURECOPY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_FORCECAST&quot;&gt;&lt;code&gt;NPY_ARRAY_FORCECAST&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#c.NPY_ARRAY_ENSUREARRAY&quot;&gt;&lt;code&gt;NPY_ARRAY_ENSUREARRAY&lt;/code&gt;&lt;/a&gt;. Standard combinations of flags can also be used:</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_FROM_O&quot;&gt; &lt;code&gt;PyArray_FROM_O&lt;/code&gt; に&lt;/a&gt;似ていますが、結果の配列に必要なプロパティを示す&lt;em&gt;要件の&lt;/em&gt;引数を取ることができます。強制することができる利用可能な要件がある&lt;a href=&quot;#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt; &lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_ARRAY_F_CONTIGUOUS&quot;&gt; &lt;code&gt;NPY_ARRAY_F_CONTIGUOUS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_ARRAY_ALIGNED&quot;&gt; &lt;code&gt;NPY_ARRAY_ALIGNED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_ARRAY_NOTSWAPPED&quot;&gt; &lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_ARRAY_ENSURECOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_ENSURECOPY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_ARRAY_FORCECAST&quot;&gt; &lt;code&gt;NPY_ARRAY_FORCECAST&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#c.NPY_ARRAY_ENSUREARRAY&quot;&gt; &lt;code&gt;NPY_ARRAY_ENSUREARRAY&lt;/code&gt; &lt;/a&gt;。フラグの標準的な組み合わせも使用できます。</target>
        </trans-unit>
        <trans-unit id="34e63b3cec603aed4fdc223ab142b8582483ea26" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c.PyArray_FROM_O&quot;&gt;&lt;code&gt;PyArray_FROM_O&lt;/code&gt;&lt;/a&gt; except it can take an argument of &lt;em&gt;typenum&lt;/em&gt; specifying the type-number the returned array.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_FROM_O&quot;&gt; &lt;code&gt;PyArray_FROM_O&lt;/code&gt; &lt;/a&gt;と似ていますが、返される配列の型番号を指定する&lt;em&gt;typenumの&lt;/em&gt;引数を取ることができます。</target>
        </trans-unit>
        <trans-unit id="9ab72ded5542baece20f259b6e4f2d1ffd7e40a6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; except the data-type is specified using a typenumber. &lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt;&lt;code&gt;PyArray_DescrFromType&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;typenum&lt;/em&gt;) is passed directly to &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt;. This macro also adds &lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt;&lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt;&lt;/a&gt; to requirements if &lt;a href=&quot;#c.NPY_ARRAY_ENSURECOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_ENSURECOPY&lt;/code&gt;&lt;/a&gt; is passed in as requirements.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; に&lt;/a&gt;似ていますが、データ型はtypenumberを使用して指定されます。&lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt; &lt;code&gt;PyArray_DescrFromType&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;typenum&lt;/em&gt;）は直接&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; に&lt;/a&gt;渡されます。このマクロはまた、追加&lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt; &lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt; を&lt;/a&gt;場合の要件に&lt;a href=&quot;#c.NPY_ARRAY_ENSURECOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_ENSURECOPY&lt;/code&gt; が&lt;/a&gt;要件として渡されます。</target>
        </trans-unit>
        <trans-unit id="b7795b78351922539b7bd3388bd15513fe09ab10" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.linspace&quot;&gt;&lt;code&gt;linspace&lt;/code&gt;&lt;/a&gt;, but uses a step size (instead of the number of samples).</source>
          <target state="translated">&lt;a href=&quot;#numpy.linspace&quot;&gt; &lt;code&gt;linspace&lt;/code&gt; &lt;/a&gt;に似ていますが、（サンプル数ではなく）ステップサイズを使用します。</target>
        </trans-unit>
        <trans-unit id="61b73acdf7b4aeb554b76ddf529120fdd3244e4c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.linspace&quot;&gt;&lt;code&gt;linspace&lt;/code&gt;&lt;/a&gt;, but with numbers spaced evenly on a log scale (a geometric progression).</source>
          <target state="translated">&lt;a href=&quot;#numpy.linspace&quot;&gt; &lt;code&gt;linspace&lt;/code&gt; &lt;/a&gt;に似ていますが、対数スケールで等間隔に配置された数値（幾何学的プログレッション）。</target>
        </trans-unit>
        <trans-unit id="b7334b28a788c204f9b851a15f23e3dc83fbe028" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.ma.asanyarray&quot;&gt;&lt;code&gt;asanyarray&lt;/code&gt;&lt;/a&gt;, but does not conserve subclass.</source>
          <target state="translated">&lt;a href=&quot;#numpy.ma.asanyarray&quot;&gt; &lt;code&gt;asanyarray&lt;/code&gt; &lt;/a&gt;に似ていますが、サブクラスを保存しません。</target>
        </trans-unit>
        <trans-unit id="e0639724205f7208e357391aa44785bd18f6e10a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.ma.asarray&quot;&gt;&lt;code&gt;asarray&lt;/code&gt;&lt;/a&gt;, but conserves subclasses.</source>
          <target state="translated">&lt;a href=&quot;#numpy.ma.asarray&quot;&gt; &lt;code&gt;asarray&lt;/code&gt; &lt;/a&gt;に似ていますが、サブクラスを保持します。</target>
        </trans-unit>
        <trans-unit id="52b03ff3070cbd0c331ca874c17fde9b769a2a13" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.random.RandomState.random_integers&quot;&gt;&lt;code&gt;random_integers&lt;/code&gt;&lt;/a&gt;, only for the half-open interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;), and 0 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="translated">&lt;a href=&quot;#numpy.random.RandomState.random_integers&quot;&gt; &lt;code&gt;random_integers&lt;/code&gt; &lt;/a&gt;と同様に、ハーフオープン間隔[ &lt;code&gt;low&lt;/code&gt; 、 &lt;code&gt;high&lt;/code&gt; ）の場合のみであり、 &lt;code&gt;high&lt;/code&gt; が省略されている場合は0が最小値です。</target>
        </trans-unit>
        <trans-unit id="087902d07ba8ed25e8e25e39b41104a23371fa18" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.random.mtrand.RandomState.random_integers&quot;&gt;&lt;code&gt;random_integers&lt;/code&gt;&lt;/a&gt;, only for the half-open interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;), and 0 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="translated">&lt;a href=&quot;#numpy.random.mtrand.RandomState.random_integers&quot;&gt; &lt;code&gt;random_integers&lt;/code&gt; &lt;/a&gt;と同様に、ハーフオープン間隔[ &lt;code&gt;low&lt;/code&gt; 、 &lt;code&gt;high&lt;/code&gt; ）の場合のみ、 &lt;code&gt;high&lt;/code&gt; を省略した場合は0が最小値になります。</target>
        </trans-unit>
        <trans-unit id="851925d10fb9418018f1fbd7f3551cc8b537ed0b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.random.random_integers&quot;&gt;&lt;code&gt;random_integers&lt;/code&gt;&lt;/a&gt;, only for the half-open interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;), and 0 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="translated">&lt;a href=&quot;#numpy.random.random_integers&quot;&gt; &lt;code&gt;random_integers&lt;/code&gt; &lt;/a&gt;と同様に、ハーフオープン間隔[ &lt;code&gt;low&lt;/code&gt; 、 &lt;code&gt;high&lt;/code&gt; ）のみであり、 &lt;code&gt;high&lt;/code&gt; が省略されている場合は0が最小値です。</target>
        </trans-unit>
        <trans-unit id="bc4726691a28fbb0358d1f4f5490980be0f53a29" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;numpy.asanyarray#numpy.asanyarray&quot;&gt;&lt;code&gt;asanyarray&lt;/code&gt;&lt;/a&gt;, but does not conserve subclass.</source>
          <target state="translated">&lt;a href=&quot;numpy.asanyarray#numpy.asanyarray&quot;&gt; &lt;code&gt;asanyarray&lt;/code&gt; &lt;/a&gt;に似ていますが、サブクラスを保存しません。</target>
        </trans-unit>
        <trans-unit id="71b620118226b8b5ca27f915fbc164b08a1de6a3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;numpy.asarray#numpy.asarray&quot;&gt;&lt;code&gt;asarray&lt;/code&gt;&lt;/a&gt;, but conserves subclasses.</source>
          <target state="translated">&lt;a href=&quot;numpy.asarray#numpy.asarray&quot;&gt; &lt;code&gt;asarray&lt;/code&gt; &lt;/a&gt;に似ていますが、サブクラスを保存します。</target>
        </trans-unit>
        <trans-unit id="4f32836393c39ad349545e85caa88d4f0b0d4f21" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;numpy.geomspace#numpy.geomspace&quot;&gt;&lt;code&gt;geomspace&lt;/code&gt;&lt;/a&gt;, but with the end points specified as logarithms.</source>
          <target state="translated">&lt;a href=&quot;numpy.geomspace#numpy.geomspace&quot;&gt; &lt;code&gt;geomspace&lt;/code&gt; &lt;/a&gt;に似ていますが、終点が対数として指定されています。</target>
        </trans-unit>
        <trans-unit id="417a17a1757a4da41cca5bee188d52bc2ed947d2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;numpy.random.random_integers#numpy.random.random_integers&quot;&gt;&lt;code&gt;random_integers&lt;/code&gt;&lt;/a&gt;, only for the half-open interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;), and 0 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="translated">&lt;a href=&quot;numpy.random.random_integers#numpy.random.random_integers&quot;&gt; &lt;code&gt;random_integers&lt;/code&gt; &lt;/a&gt;と同様に、ハーフオープン間隔[ &lt;code&gt;low&lt;/code&gt; 、 &lt;code&gt;high&lt;/code&gt; ）のみであり、 &lt;code&gt;high&lt;/code&gt; が省略されている場合は0が最小値です。</target>
        </trans-unit>
        <trans-unit id="9f556182c8173073bc9575354a35bd7cdcf632ab" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;np.copyto(arr, vals, where=mask)&lt;/code&gt;, the difference is that &lt;a href=&quot;#numpy.place&quot;&gt;&lt;code&gt;place&lt;/code&gt;&lt;/a&gt; uses the first N elements of &lt;code&gt;vals&lt;/code&gt;, where N is the number of True values in &lt;code&gt;mask&lt;/code&gt;, while &lt;a href=&quot;numpy.copyto#numpy.copyto&quot;&gt;&lt;code&gt;copyto&lt;/code&gt;&lt;/a&gt; uses the elements where &lt;code&gt;mask&lt;/code&gt; is True.</source>
          <target state="translated">同様 &lt;code&gt;np.copyto(arr, vals, where=mask)&lt;/code&gt; 、違いはある&lt;a href=&quot;#numpy.place&quot;&gt; &lt;code&gt;place&lt;/code&gt; &lt;/a&gt;の最初のN個の要素を使用し &lt;code&gt;vals&lt;/code&gt; Nはで真の値の数であり、 &lt;code&gt;mask&lt;/code&gt; しながら&lt;a href=&quot;numpy.copyto#numpy.copyto&quot;&gt; &lt;code&gt;copyto&lt;/code&gt; &lt;/a&gt;元素使用 &lt;code&gt;mask&lt;/code&gt; Trueです。</target>
        </trans-unit>
        <trans-unit id="85182c2cf4636594ba4bb81df790d59ce12b4844" translate="yes" xml:space="preserve">
          <source>Similar to a Blackman</source>
          <target state="translated">ブラックマンに似ている</target>
        </trans-unit>
        <trans-unit id="fda0ddbefcd9b950d1be64cfa40b8b4d44338564" translate="yes" xml:space="preserve">
          <source>Similar to a Hamming</source>
          <target state="translated">ハミングに似ている</target>
        </trans-unit>
        <trans-unit id="e44711f2465ecfd9681ac18329e5511ea31ae57b" translate="yes" xml:space="preserve">
          <source>Similar to a Hanning</source>
          <target state="translated">ハニングに似ている</target>
        </trans-unit>
        <trans-unit id="234d445a03f1aebf3ed4d77e0d02e9c11e9233b2" translate="yes" xml:space="preserve">
          <source>Similar to add_library, but the specified library is installed.</source>
          <target state="translated">add_library と似ていますが、指定したライブラリがインストールされます。</target>
        </trans-unit>
        <trans-unit id="3dfdcd8111d1084fb95920b6488396d3e8d8a393" translate="yes" xml:space="preserve">
          <source>Similar to geomspace, but with arithmetic instead of geometric progression.</source>
          <target state="translated">ジオムスペースに似ていますが、幾何学的な進行の代わりに算術を用います。</target>
        </trans-unit>
        <trans-unit id="33e0805e34847491157755893623c681d0de564b" translate="yes" xml:space="preserve">
          <source>Similar to geomspace, but with endpoints specified using log and base.</source>
          <target state="translated">geomspaceに似ていますが、logとbaseを使ってエンドポイントを指定します。</target>
        </trans-unit>
        <trans-unit id="2e5b100f812a24f804b90138859e80b7ccf1d358" translate="yes" xml:space="preserve">
          <source>Similar to linspace, with the step size specified instead of the number of samples.</source>
          <target state="translated">linspaceに似ていますが,サンプル数の代わりにステップサイズが指定されます.</target>
        </trans-unit>
        <trans-unit id="17805c407a9f09edaa3bff91c61279fe000f669b" translate="yes" xml:space="preserve">
          <source>Similar to linspace, with the step size specified instead of the number of samples. Note that, when used with a float endpoint, the endpoint may or may not be included.</source>
          <target state="translated">linspaceと似ていますが、サンプル数の代わりにステップサイズを指定します。float 終点と一緒に使用する場合,終点が含まれている場合と含まれていない場合があることに注意してください.</target>
        </trans-unit>
        <trans-unit id="376b7895ca7454ae515537b5c988798aa23f4981" translate="yes" xml:space="preserve">
          <source>Similar to logspace, but with endpoints specified directly.</source>
          <target state="translated">logspaceに似ていますが、エンドポイントが直接指定されます。</target>
        </trans-unit>
        <trans-unit id="fb5e56ddf3f3d8bcd94b1df305f6991c2bdc0db5" translate="yes" xml:space="preserve">
          <source>Similar to logspace, but with the samples uniformly distributed in linear space, instead of log space.</source>
          <target state="translated">logspace に似ていますが、サンプルは対数空間ではなく線形空間に一様に分布しています。</target>
        </trans-unit>
        <trans-unit id="5cda9d166d2c62a294e133fed232c50e89a11895" translate="yes" xml:space="preserve">
          <source>Similar types of different sizes are not subdtypes of each other:</source>
          <target state="translated">異なるサイズの類似したタイプは、お互いのサブタイプではありません。</target>
        </trans-unit>
        <trans-unit id="972ade8b6d212f3e2ece52621379958937336838" translate="yes" xml:space="preserve">
          <source>Similar, but takes a tuple as its argument.</source>
          <target state="translated">似ていますが、タプルを引数に取ります。</target>
        </trans-unit>
        <trans-unit id="d90324501e9d6e49bd014963ecc43250f1eed84e" translate="yes" xml:space="preserve">
          <source>Similarly for methods:</source>
          <target state="translated">メソッドについても同様です。</target>
        </trans-unit>
        <trans-unit id="e7febc7c84ac14d9161e90a9bbe4e73cfefdd12e" translate="yes" xml:space="preserve">
          <source>Similarly to tuples, structured scalars can also be indexed with an integer:</source>
          <target state="translated">タプルと同様に、構造化スカラも整数でインデックス化することができます。</target>
        </trans-unit>
        <trans-unit id="437fd8a6b3938e0290f56252121bacb40108af36" translate="yes" xml:space="preserve">
          <source>Similarly to use the older &lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; bit generator (not recommended), one can instantiate it directly and pass it to &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">古い&lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; &lt;/a&gt;ビットジェネレーター（非推奨）を使用するのと同様に、直接インスタンス化して&lt;a href=&quot;generator#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;渡すことができます。</target>
        </trans-unit>
        <trans-unit id="b81f29fb06f44979e9e57de858a22a5741bb7e1e" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;a href=&quot;generated/numpy.lib.scimath.sqrt#numpy.lib.scimath.sqrt&quot;&gt;&lt;code&gt;sqrt&lt;/code&gt;&lt;/a&gt;, other base logarithms, &lt;a href=&quot;generated/numpy.lib.scimath.power#numpy.lib.scimath.power&quot;&gt;&lt;code&gt;power&lt;/code&gt;&lt;/a&gt; and trig functions are correctly handled. See their respective docstrings for specific examples.</source>
          <target state="translated">同様に、&lt;a href=&quot;generated/numpy.lib.scimath.sqrt#numpy.lib.scimath.sqrt&quot;&gt; &lt;code&gt;sqrt&lt;/code&gt; &lt;/a&gt;、その他の底の対数、&lt;a href=&quot;generated/numpy.lib.scimath.power#numpy.lib.scimath.power&quot;&gt; &lt;code&gt;power&lt;/code&gt; &lt;/a&gt;およびtrig関数は正しく処理されます。具体的な例については、それぞれのdocstringを参照してください。</target>
        </trans-unit>
        <trans-unit id="8e9eeb8d7a147426a8015c3531ee3a6251c0e6fe" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;sqrt&lt;/code&gt;, other base logarithms, &lt;code&gt;power&lt;/code&gt; and trig functions are correctly handled. See their respective docstrings for specific examples.</source>
          <target state="translated">同様に、 &lt;code&gt;sqrt&lt;/code&gt; 、他の基本対数、 &lt;code&gt;power&lt;/code&gt; 、およびトリガー関数は正しく処理されます。特定の例については、それぞれのdocstringを参照してください。</target>
        </trans-unit>
        <trans-unit id="d1cdc37a321535dbe93903e9032ec99be36f1027" translate="yes" xml:space="preserve">
          <source>Simple Array Operations</source>
          <target state="translated">簡単な配列操作</target>
        </trans-unit>
        <trans-unit id="acf3895a0f3e8fb2433f49e7c933653b2955fa80" translate="yes" xml:space="preserve">
          <source>Simple Iteration Example</source>
          <target state="translated">単純な反復の例</target>
        </trans-unit>
        <trans-unit id="4512383893712587e1eb27a74805a2a877a79b85" translate="yes" xml:space="preserve">
          <source>Simple Multi-Iteration Example</source>
          <target state="translated">単純なマルチイテレーションの例</target>
        </trans-unit>
        <trans-unit id="ee5ac00418ffcbbfc2c7682d69aa3b8e08bf38cb" translate="yes" xml:space="preserve">
          <source>Simple assignments make no copy of objects or their data.</source>
          <target state="translated">単純な割り当てでは、オブジェクトやそのデータのコピーは行われません。</target>
        </trans-unit>
        <trans-unit id="76c4886348213898712d6d2115acfbcb32296217" translate="yes" xml:space="preserve">
          <source>Simple example - adding an extra attribute to ndarray</source>
          <target state="translated">シンプルな例-ndarray に追加の属性を追加する</target>
        </trans-unit>
        <trans-unit id="50416fe10bcfba1d097d2f78636e350c2106eb91" translate="yes" xml:space="preserve">
          <source>Simple example showing support of broadcasting</source>
          <target state="translated">放送対応を示す簡単な例</target>
        </trans-unit>
        <trans-unit id="ae19d7f5a896d028209ec76ca00e6ca839a5fe6f" translate="yes" xml:space="preserve">
          <source>Simple financial functions</source>
          <target state="translated">シンプルな金融機能</target>
        </trans-unit>
        <trans-unit id="8e69123a5602858fe2de0c627a59627cbd3eee16" translate="yes" xml:space="preserve">
          <source>Simple matching of version numbers, for use in CCompiler and FCompiler.</source>
          <target state="translated">CCompilerやFCompilerで使用するためのバージョン番号の単純なマッチング。</target>
        </trans-unit>
        <trans-unit id="d369dea603addc198cac2b7cf54d9f2f5da3fe8f" translate="yes" xml:space="preserve">
          <source>Simple random data</source>
          <target state="translated">単純なランダムデータ</target>
        </trans-unit>
        <trans-unit id="275d613237a6724f9191d7c3f72deea3d3a6bb91" translate="yes" xml:space="preserve">
          <source>Simplified Wrapper and Interface Generator (SWIG) is an old and fairly stable method for wrapping C/C++-libraries to a large variety of other languages. It does not specifically understand NumPy arrays but can be made useable with NumPy through the use of typemaps. There are some sample typemaps in the numpy/tools/swig directory under numpy.i together with an example module that makes use of them. SWIG excels at wrapping large C/C++ libraries because it can (almost) parse their headers and auto-produce an interface. Technically, you need to generate a &lt;code&gt;.i&lt;/code&gt; file that defines the interface. Often, however, this &lt;code&gt;.i&lt;/code&gt; file can be parts of the header itself. The interface usually needs a bit of tweaking to be very useful. This ability to parse C/C++ headers and auto-generate the interface still makes SWIG a useful approach to adding functionalilty from C/C++ into Python, despite the other methods that have emerged that are more targeted to Python. SWIG can actually target extensions for several languages, but the typemaps usually have to be language-specific. Nonetheless, with modifications to the Python-specific typemaps, SWIG can be used to interface a library with other languages such as Perl, Tcl, and Ruby.</source>
          <target state="translated">Simplified Wrapper and Interface Generator（SWIG）は、C / C ++ライブラリを他のさまざまな言語にラップするための古くてかなり安定した方法です。 NumPy配列を具体的に理解していませんが、タイプマップを使用してNumPyで使用できるようにすることができます。 numpy.iの下のnumpy / tools / swigディレクトリにいくつかのサンプルタイプマップと、それらを使用するサンプルモジュールがあります。 SWIGは、ヘッダーを（ほぼ）解析してインターフェイスを自動生成できるため、大規模なC / C ++ライブラリのラップに優れています。技術的には、インターフェイスを定義する &lt;code&gt;.i&lt;/code&gt; ファイルを生成する必要があります。ただし、多くの場合、この &lt;code&gt;.i&lt;/code&gt; ファイルはヘッダー自体の一部にすることができます。インターフェイスを非常に便利にするには、通常、少し調整する必要があります。 C / C ++ヘッダーを解析し、インターフェイスを自動生成するこの機能により、SWIGは、Pythonをよりターゲットとする他のメソッドが登場したにもかかわらず、C / C ++からPythonに機能を追加するための便利なアプローチになります。 SWIGは実際には複数の言語の拡張機能をターゲットにすることができますが、タイプマップは通常、言語固有である必要があります。それでも、Python固有のタイプマップを変更すると、SWIGを使用して、ライブラリをPerl、Tcl、Rubyなどの他の言語とインターフェイスさせることができます。</target>
        </trans-unit>
        <trans-unit id="1c8cdc6800aadf2bece7e4049099bee1ec8e07ce" translate="yes" xml:space="preserve">
          <source>Simulate from the complex normal distribution (&lt;code&gt;complex_normal&lt;/code&gt;)</source>
          <target state="translated">複素正規分布からシミュレート（ &lt;code&gt;complex_normal&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6c7cbba342c72a06adf163e32df8899d2552eb30" translate="yes" xml:space="preserve">
          <source>Simultaneous floor division and remainder.</source>
          <target state="translated">フロア分割と残りを同時に行う。</target>
        </trans-unit>
        <trans-unit id="6c920146c0be4bce97c21cbae03c25f07c0d27fb" translate="yes" xml:space="preserve">
          <source>Since NumPy contains parts written in C and Cython that need to be compiled before use, make sure you have the necessary compilers and Python development headers installed - see &lt;a href=&quot;../user/building#building-from-source&quot;&gt;Building from source&lt;/a&gt;. Building NumPy as of version &lt;code&gt;1.17&lt;/code&gt; requires a C99 compliant compiler.</source>
          <target state="translated">NumPyには、使用前にコンパイルする必要があるCおよびCythonで記述されたパーツが含まれているため、必要なコンパイラーとPython開発ヘッダーがインストールされていることを確認してください。「&lt;a href=&quot;../user/building#building-from-source&quot;&gt;ソースからのビルド&lt;/a&gt;」を参照してください。バージョン &lt;code&gt;1.17&lt;/code&gt; 以降でNumPyをビルドするには、C99準拠のコンパイラが必要です。</target>
        </trans-unit>
        <trans-unit id="ca1a79260d5ca9a9dbd5ed4cd5ff16638e1c6e5b" translate="yes" xml:space="preserve">
          <source>Since Numpy version 1.17.0 the Generator can be initialized with a number of different BitGenerators. It exposes many different probability distributions. See &lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19&lt;/a&gt; for context on the updated random Numpy number routines. The legacy &lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; random number routines are still available, but limited to a single BitGenerator.</source>
          <target state="translated">Numpyバージョン1.17.0以降、ジェネレーターはいくつかの異なるBitGeneratorsで初期化できます。それは多くの異なる確率分布を公開します。参照&lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19を&lt;/a&gt;更新し、ランダムなnumpyの数ルーチンのコンテキストのために。従来の&lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;乱数ルーチンは引き続き使用できますが、単一のBitGeneratorに限定されます。</target>
        </trans-unit>
        <trans-unit id="8316a9e39c39081dc4c144a73ec33fdf3205f0d5" translate="yes" xml:space="preserve">
          <source>Since Numpy version 1.17.0 the Generator can be initialized with a number of different BitGenerators. It exposes many different probability distributions. See &lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19&lt;/a&gt; for context on the updated random Numpy number routines. The legacy &lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; random number routines are still available, but limited to a single BitGenerator. See &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;What&amp;rsquo;s New or Different&lt;/a&gt; for a complete list of improvements and differences from the legacy &lt;code&gt;Randomstate&lt;/code&gt;.</source>
          <target state="translated">Numpyバージョン1.17.0以降、ジェネレーターはさまざまなBitGeneratorsで初期化できます。それは多くの異なる確率分布を公開します。参照&lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19を&lt;/a&gt;更新し、ランダムなnumpyの数ルーチンのコンテキストのために。従来の&lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;乱数ルーチンは引き続き使用できますが、単一のBitGeneratorに限定されます。従来の &lt;code&gt;Randomstate&lt;/code&gt; との改善点と相違点の完全なリストについては、&lt;a href=&quot;new-or-different#new-or-different&quot;&gt;新機能または相違点&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5bfc61180c73bf11bcf8e9a59d533a6dcbb10666" translate="yes" xml:space="preserve">
          <source>Since Numpy version 1.17.0 the Generator can be initialized with a number of different BitGenerators. It exposes many different probability distributions. See &lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19&lt;/a&gt; for context on the updated random Numpy number routines. The legacy &lt;a href=&quot;legacy#numpy.random.mtrand.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; random number routines are still available, but limited to a single BitGenerator.</source>
          <target state="translated">Numpyバージョン1.17.0以降、ジェネレーターはいくつかの異なるBitGeneratorsで初期化できます。それは多くの異なる確率分布を公開します。更新されたランダムNumpy数値ルーチンのコンテキストについては、&lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19&lt;/a&gt;を参照してください。従来の&lt;a href=&quot;legacy#numpy.random.mtrand.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;乱数ルーチンは引き続き使用できますが、単一のBitGeneratorに限定されます。</target>
        </trans-unit>
        <trans-unit id="0e5a09c913abb2d820fe3ca564fc0e41384dbaaf" translate="yes" xml:space="preserve">
          <source>Since all ufuncs can take output arguments, this will always be (at least) 1.</source>
          <target state="translated">すべてのufuncsは出力引数を取ることができるので、これは常に(少なくとも)1になります。</target>
        </trans-unit>
        <trans-unit id="2ed82f769a88b72358683adc7002539ca034c05e" translate="yes" xml:space="preserve">
          <source>Since concatenation happens along the last axis first, &lt;a href=&quot;#numpy.block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; is _not_ capable of producing the following directly:</source>
          <target state="translated">連結は最初に最後の軸に沿って行われるため、&lt;a href=&quot;#numpy.block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;は次のものを直接生成することはできません。</target>
        </trans-unit>
        <trans-unit id="17c112276469f0963d2aaf7604dae9a20dae7974" translate="yes" xml:space="preserve">
          <source>Since large parts of the main documentation are obtained from numpy via &lt;code&gt;import numpy&lt;/code&gt; and examining the docstrings, you will need to first build NumPy, and install it so that the correct version is imported.</source>
          <target state="translated">メインドキュメントの大部分は、 &lt;code&gt;import numpy&lt;/code&gt; を介してnumpyから取得され、docstringを調べるため、最初にNumPyをビルドし、正しいバージョンがインポートされるようにインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="1c8d555d61db4dd7cd7039692a77374689036018" translate="yes" xml:space="preserve">
          <source>Since many of these have platform-dependent definitions, a set of fixed-size aliases are provided:</source>
          <target state="translated">これらの多くはプラットフォームに依存した定義を持っているため、固定サイズのエイリアスのセットが提供されています。</target>
        </trans-unit>
        <trans-unit id="d94a9b208aeb21038eb14dc8469527c3cfa527ef" translate="yes" xml:space="preserve">
          <source>Since this information may be updated regularly, please ensure you are viewing the most &lt;a href=&quot;https://numpy.org/devdocs/user/troubleshooting-importerror.html&quot;&gt;up-to-date version&lt;/a&gt;.</source>
          <target state="translated">この情報は定期的に更新される可能性があるため、&lt;a href=&quot;https://numpy.org/devdocs/user/troubleshooting-importerror.html&quot;&gt;最新バージョンを&lt;/a&gt;表示していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="f8bdf65fe9895293c3efd0afce21587c54d0b0c6" translate="yes" xml:space="preserve">
          <source>Since we are going to perform linear algebra operations on this data, it might be more interesting to have real numbers between 0 and 1 in each entry of the matrices to represent the RGB values. We can do that by setting</source>
          <target state="translated">このデータに対して線形代数演算を行うので、RGB値を表す行列の各エントリに0から1の間の実数を入れた方が面白いかもしれません。これを実現するには</target>
        </trans-unit>
        <trans-unit id="dbccad20cacee376129c1a8bbd5585811048a318" translate="yes" xml:space="preserve">
          <source>Single Array Iteration</source>
          <target state="translated">単一配列反復</target>
        </trans-unit>
        <trans-unit id="5bfe00c763bcef48d9a91d8c005d3c1e44fabf7a" translate="yes" xml:space="preserve">
          <source>Single element indexing</source>
          <target state="translated">単一要素のインデキシング</target>
        </trans-unit>
        <trans-unit id="c9752708782db8b51435265b223542426b8e9d5d" translate="yes" xml:space="preserve">
          <source>Single element indexing for a 1-D array is what one expects. It work exactly like that for other standard Python sequences. It is 0-based, and accepts negative indices for indexing from the end of the array.</source>
          <target state="translated">1次元配列の単一要素インデキシングは期待通りのものです。これは他の標準的なPython配列と全く同じように動作します。これは0ベースで、配列の末尾からのインデックス付けには負のインデックスを受け付けます。</target>
        </trans-unit>
        <trans-unit id="29650df4d35e8ea7c57b58195e7eb25dd75fd519" translate="yes" xml:space="preserve">
          <source>Single instance: If only a single instance of a class is exposed, document the class. Examples can use the instance name.</source>
          <target state="translated">単一のインスタンス。クラスの単一インスタンスのみが公開されている場合は、そのクラスをドキュメント化します。例ではインスタンス名を使うことができます。</target>
        </trans-unit>
        <trans-unit id="023390c0097bcde6b939037ae58aad9f1eccdd96" translate="yes" xml:space="preserve">
          <source>Single-precision floating-point number type, compatible with C &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">Cのと互換性の単精度浮動小数点数型、 &lt;code&gt;float&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1923a37e061c3d312b736626f7d4070c8dcabda6" translate="yes" xml:space="preserve">
          <source>Singular Value Decomposition.</source>
          <target state="translated">特異値分解。</target>
        </trans-unit>
        <trans-unit id="be2751c62dbed56ddb419e417fca2d9511c5f595" translate="yes" xml:space="preserve">
          <source>Singular values of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">の特異値。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68b02182aef6a1a2ed8fb4231b775d9a82547ea8" translate="yes" xml:space="preserve">
          <source>Size of &lt;code&gt;np.ndarray&lt;/code&gt; and &lt;code&gt;np.void_&lt;/code&gt; changed</source>
          <target state="translated">&lt;code&gt;np.ndarray&lt;/code&gt; と &lt;code&gt;np.void_&lt;/code&gt; のサイズが変更されました</target>
        </trans-unit>
        <trans-unit id="b7fade19a5b493a2c26eed472f4faba3db6b181a" translate="yes" xml:space="preserve">
          <source>Size of a pointer on this platform (sizeof(void *))</source>
          <target state="translated">このプラットフォームでのポインタのサイズ (sizeof(void *))</target>
        </trans-unit>
        <trans-unit id="9f7ca2b11c805ad773c63eebb03a2a048382c59e" translate="yes" xml:space="preserve">
          <source>Size of a pointer on this platform (sizeof(void *)) (A macro defines NPY_SIZEOF_INTP as well.)</source>
          <target state="translated">このプラットフォーム上のポインタのサイズ (sizeof(void *)(マクロでNPY_SIZEOF_INTPも定義しています)。</target>
        </trans-unit>
        <trans-unit id="f19f296d7676df236287d76dbc5f75e14729bdc6" translate="yes" xml:space="preserve">
          <source>Size of buffer.</source>
          <target state="translated">バッファのサイズ。</target>
        </trans-unit>
        <trans-unit id="94f57e9139c081fd224904e8757bd108f6615f74" translate="yes" xml:space="preserve">
          <source>Size of spacing between samples.</source>
          <target state="translated">サンプル間の間隔の大きさ。</target>
        </trans-unit>
        <trans-unit id="3de9e845a3b95a48f909e7b501dd8bf3a25f0227" translate="yes" xml:space="preserve">
          <source>Size of the data (how many bytes is in &lt;em&gt;e.g.&lt;/em&gt; the integer)</source>
          <target state="translated">データのサイズ（でどのように多くのバイトです&lt;em&gt;例えば&lt;/em&gt;整数）</target>
        </trans-unit>
        <trans-unit id="69356099c1bda1de5732916fcc4b059a9e5e1e9d" translate="yes" xml:space="preserve">
          <source>Size of the data is in turn described by:</source>
          <target state="translated">データのサイズは順番に記述されます。</target>
        </trans-unit>
        <trans-unit id="b7b677e8d293fb1fdabc56b0ddc443af48c5aeca" translate="yes" xml:space="preserve">
          <source>Size of the iterator.</source>
          <target state="translated">イテレータのサイズ。</target>
        </trans-unit>
        <trans-unit id="9f5f50339fb8609920b44a4a178129be24577d29" translate="yes" xml:space="preserve">
          <source>Size of the pooled entropy to store. Default is 4 to give a 128-bit entropy pool. 8 (for 256 bits) is another reasonable choice if working with larger PRNGs, but there is very little to be gained by selecting another value.</source>
          <target state="translated">プールされたエントロピーを格納するサイズ。デフォルトは4で、128ビットのエントロピーをプールします。8 (256ビットの場合)も、より大きなPRNGを扱う場合には妥当な選択ですが、他の値を選択しても得られるものはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="425427638096d8909ac722e80f2f8c0179bde19c" translate="yes" xml:space="preserve">
          <source>Size of the returned identity matrix.</source>
          <target state="translated">返された ID マトリックスのサイズ。</target>
        </trans-unit>
        <trans-unit id="c4824192ad4385f49198eaabf9b1f747f0e02ed6" translate="yes" xml:space="preserve">
          <source>Size of ufunc buffer in bytes.</source>
          <target state="translated">ufunc バッファのサイズをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="48b38a422a66109df2128a05233e6e628a97c405" translate="yes" xml:space="preserve">
          <source>Size of window over each axis that takes part in the sliding window. If &lt;code&gt;axis&lt;/code&gt; is not present, must have same length as the number of input array dimensions. Single integers &lt;code&gt;i&lt;/code&gt; are treated as if they were the tuple &lt;code&gt;(i,)&lt;/code&gt;.</source>
          <target state="translated">スライディングウィンドウに参加する各軸上のウィンドウのサイズ。 &lt;code&gt;axis&lt;/code&gt; が存在しない場合は、入力配列の次元数と同じ長さである必要があります。単一の整数 &lt;code&gt;i&lt;/code&gt; は、タプル &lt;code&gt;(i,)&lt;/code&gt; かのように扱われます。</target>
        </trans-unit>
        <trans-unit id="3a7523f4fd4e263fe3e608e0a858c1961e98f75d" translate="yes" xml:space="preserve">
          <source>Sized aliases</source>
          <target state="translated">Sizedの異名</target>
        </trans-unit>
        <trans-unit id="ad4bbd7cecbd939b77596b18a5178a89c143d6ba" translate="yes" xml:space="preserve">
          <source>Skip the first &lt;code&gt;skiprows&lt;/code&gt; lines, including comments; default: 0.</source>
          <target state="translated">コメントを含む最初の &lt;code&gt;skiprows&lt;/code&gt; 行をスキップします。デフォルト：0。</target>
        </trans-unit>
        <trans-unit id="f82f7e14ba8536ae148e3663cd12d9df9f23c8e7" translate="yes" xml:space="preserve">
          <source>Skipping lines and choosing columns</source>
          <target state="translated">行のスキップと列の選択</target>
        </trans-unit>
        <trans-unit id="5ade18da6c0bc324987dd2a6e552253d5690d6e9" translate="yes" xml:space="preserve">
          <source>Slices can be specified within programs by using the slice() function in Python. For example:</source>
          <target state="translated">プログラム内でスライスを指定するには、Pythonのslice()関数を使用します。例えば</target>
        </trans-unit>
        <trans-unit id="a938184025b02624b2da57d3c83ebf5d1d8150a6" translate="yes" xml:space="preserve">
          <source>Slices of &lt;code&gt;x&lt;/code&gt; in this axis are shuffled. Each slice is shuffled independently of the others. If &lt;code&gt;axis&lt;/code&gt; is None, the flattened array is shuffled.</source>
          <target state="translated">この軸の &lt;code&gt;x&lt;/code&gt; のスライスがシャッフルされます。各スライスは、他のスライスとは独立してシャッフルされます。場合は &lt;code&gt;axis&lt;/code&gt; Noneで、平坦化配列がシャッフルされます。</target>
        </trans-unit>
        <trans-unit id="2054604b34ddf6e044b0a886dacbc545d40e1664" translate="yes" xml:space="preserve">
          <source>Slicing an array returns a view of it:</source>
          <target state="translated">配列をスライスすると、その配列のビューを返します。</target>
        </trans-unit>
        <trans-unit id="ceefed34cafaf5b19edca282e41b54d0f46c4e35" translate="yes" xml:space="preserve">
          <source>Slicing creates a view, whose memory is shared with x:</source>
          <target state="translated">スライシングはビューを作成し、そのメモリは x と共有されます。</target>
        </trans-unit>
        <trans-unit id="57307a703ae75763102410199fd5e5560ee358fe" translate="yes" xml:space="preserve">
          <source>Sliding window view of the array. The sliding window dimensions are inserted at the end, and the original dimensions are trimmed as required by the size of the sliding window. That is, &lt;code&gt;view.shape = x_shape_trimmed + window_shape&lt;/code&gt;, where &lt;code&gt;x_shape_trimmed&lt;/code&gt; is &lt;code&gt;x.shape&lt;/code&gt; with every entry reduced by one less than the corresponding window size.</source>
          <target state="translated">アレイのスライディングウィンドウビュー。スライディングウィンドウの寸法は最後に挿入され、元の寸法はスライディングウィンドウのサイズに応じてトリミングされます。つまり、 &lt;code&gt;view.shape = x_shape_trimmed + window_shape&lt;/code&gt; 。ここで、 &lt;code&gt;x_shape_trimmed&lt;/code&gt; は &lt;code&gt;x.shape&lt;/code&gt; であり、すべてのエントリが対応するウィンドウサイズより1つ小さくなります。</target>
        </trans-unit>
        <trans-unit id="8e774194cbc136ee79daaa22964c29ad8085570b" translate="yes" xml:space="preserve">
          <source>Slightly more realistic example - attribute added to existing array</source>
          <target state="translated">少し現実的な例-既存の配列に属性を追加</target>
        </trans-unit>
        <trans-unit id="68f51b4a2c9bfa7e4967d12fe3615173471a2867" translate="yes" xml:space="preserve">
          <source>Small results can be suppressed:</source>
          <target state="translated">小さな結果であれば、それを抑えることができます。</target>
        </trans-unit>
        <trans-unit id="55c8d4062bb648b3be6e31f36bb0441eeb936269" translate="yes" xml:space="preserve">
          <source>Smallest (most negative) power of &lt;code&gt;ibeta&lt;/code&gt; consistent with there being no leading zeros in the mantissa.</source>
          <target state="translated">仮数に先行ゼロがないことと一致する &lt;code&gt;ibeta&lt;/code&gt; の最小（最も負の）パワー。</target>
        </trans-unit>
        <trans-unit id="5723001a57f6b6652b2b21977d2b2710160cd8a8" translate="yes" xml:space="preserve">
          <source>Smallest (positive) power of &lt;code&gt;ibeta&lt;/code&gt; that causes overflow.</source>
          <target state="translated">オーバーフローを引き起こす &lt;code&gt;ibeta&lt;/code&gt; の最小（正の）パワー。</target>
        </trans-unit>
        <trans-unit id="77213ab3e24eed5431e4dc1329418d12eafeda49" translate="yes" xml:space="preserve">
          <source>Smallest size of user-settable internal buffers.</source>
          <target state="translated">ユーザー設定可能な内部バッファの最小サイズ。</target>
        </trans-unit>
        <trans-unit id="0ebb78e1cc10e7821acd9ee50766c4cfdcff7b2e" translate="yes" xml:space="preserve">
          <source>So go ahead and pick something that annoys or confuses you about NumPy, experiment with the code, hang around for discussions or go through the reference documents to try to fix it. Things will fall in place and soon you&amp;rsquo;ll have a pretty good understanding of the project as a whole. Good Luck!</source>
          <target state="translated">だから、先に進んで、NumPyについてあなたを悩ませたり混乱させたりするものを選んだり、コードを試したり、議論のためにぶらぶらしたり、リファレンスドキュメントを調べて修正しようとしたりしてください。物事はうまくいき、すぐにプロジェクト全体をかなりよく理解できるようになります。がんばろう！</target>
        </trans-unit>
        <trans-unit id="68fc77bcced0c9052ba8e6d4c729d2a1c844ceab" translate="yes" xml:space="preserve">
          <source>So go ahead and pick something that annoys or confuses you about numpy, experiment with the code, hang around for discussions or go through the reference documents to try to fix it. Things will fall in place and soon you&amp;rsquo;ll have a pretty good understanding of the project as a whole. Good Luck!</source>
          <target state="translated">だから、先に進んで、numpyについてあなたを悩ませたり混乱させたりするものを選んだり、コードを試したり、議論のためにぶらぶらしたり、リファレンスドキュメントを調べて修正しようとしたりしてください。物事はうまくいき、すぐにプロジェクト全体をかなりよく理解できるようになります。がんばろう！</target>
        </trans-unit>
        <trans-unit id="5987afde50b9e89e0e7eef5d3f74c5e410d18d69" translate="yes" xml:space="preserve">
          <source>So if this is true, why not choose the index order that matches what you most expect? In particular, why not define row-ordered images to use the image convention? (This is sometimes referred to as the Fortran convention vs the C convention, thus the &amp;lsquo;C&amp;rsquo; and &amp;lsquo;FORTRAN&amp;rsquo; order options for array ordering in numpy.) The drawback of doing this is potential performance penalties. It&amp;rsquo;s common to access the data sequentially, either implicitly in array operations or explicitly by looping over rows of an image. When that is done, then the data will be accessed in non-optimal order. As the first index is incremented, what is actually happening is that elements spaced far apart in memory are being sequentially accessed, with usually poor memory access speeds. For example, for a two dimensional image &amp;lsquo;im&amp;rsquo; defined so that im[0, 10] represents the value at x=0, y=10. To be consistent with usual Python behavior then im[0] would represent a column at x=0. Yet that data would be spread over the whole array since the data are stored in row order. Despite the flexibility of numpy&amp;rsquo;s indexing, it can&amp;rsquo;t really paper over the fact basic operations are rendered inefficient because of data order or that getting contiguous subarrays is still awkward (e.g., im[:,0] for the first row, vs im[0]), thus one can&amp;rsquo;t use an idiom such as for row in im; for col in im does work, but doesn&amp;rsquo;t yield contiguous column data.</source>
          <target state="translated">それでこれが本当なら、あなたが最も期待するものと一致するインデックスの順序を選択してみませんか？特に、画像の規則を使用するように行順の画像を定義しないのはなぜですか？ （これは、Fortran規約とC規約と呼ばれることもあるので、numpyでの配列の順序付けのための「C」および「FORTRAN」の順序オプションです。）これを行うことの欠点は、潜在的なパフォーマンスの低下です。配列操作で暗黙的に、または画像の行をループして明示的にデータに順次アクセスするのが一般的です。それが行われると、データは最適でない順序でアクセスされます。最初のインデックスがインクリメントされると、実際に起こっていることは、メモリ内で遠く離れた要素がシーケンシャルにアクセスされており、通常はメモリアクセス速度が遅いということです。たとえば、im [0、10]がx = 0での値を表すように定義された2次元画像 'im'の場合、y = 10。通常のPythonの動作と一致させるために、im [0]はx = 0の列を表します。ただし、データは行順に格納されるため、そのデータはアレイ全体に分散されます。 numpyのインデックス付けの柔軟性にもかかわらず、データの順序や連続するサブ配列の取得が依然として厄介なため（たとえば、最初の行のim [：、0]とim [ 0]）、したがって、im in rowのようなイディオムは使用できません。 im in colは機能しますが、連続した列データは生成されません。データの順序が原因で基本的な操作が非効率的になる、または連続したサブ配列を取得するのが依然として厄介であること（たとえば、最初の行のim [：、0]とim [0]の比較）を実際に説明することはできません。 imの行のようなイディオムを使用しないでください。 im in colは機能しますが、連続した列データは生成されません。データの順序が原因で基本的な操作が非効率的になる、または連続したサブ配列を取得するのが依然として厄介であること（たとえば、最初の行のim [：、0]とim [0]の比較）を実際に説明することはできません。 imの行のようなイディオムを使用しないでください。 im in colは機能しますが、連続した列データは生成されません。</target>
        </trans-unit>
        <trans-unit id="4ea56e56cf12d7e1630fa5a0096d5cb95aa660e7" translate="yes" xml:space="preserve">
          <source>So note that &lt;code&gt;x[0,2] = x[0][2]&lt;/code&gt; though the second case is more inefficient as a new temporary array is created after the first index that is subsequently indexed by 2.</source>
          <target state="translated">したがって、 &lt;code&gt;x[0,2] = x[0][2]&lt;/code&gt; あることに注意してください。ただし、最初のインデックスの後に新しい一時配列が作成され、その後2でインデックスが付けられるため、2番目のケースは非効率的です。</target>
        </trans-unit>
        <trans-unit id="19c037ce117c6ef2223ffde05ba36545c8c954f9" translate="yes" xml:space="preserve">
          <source>So one can use code to construct tuples of any number of indices and then use these within an index.</source>
          <target state="translated">そのため、コードを使って任意の数のインデックスのタプルを構築し、インデックス内でそれらを使用することができます。</target>
        </trans-unit>
        <trans-unit id="75338853856b7644da267b729869a79f35465ac8" translate="yes" xml:space="preserve">
          <source>So the p-value is about 0.009, which says the null hypothesis has a probability of about 99% of being true.</source>
          <target state="translated">つまり、P値は0.009くらいで、帰無仮説が99%くらいの確率で真実であるということです。</target>
        </trans-unit>
        <trans-unit id="b22b13d407a40d9045527bdf90132a3a9fa96895" translate="yes" xml:space="preserve">
          <source>So there is about a 1% chance that the F statistic will exceed 7.62, the measured value is 36, so the null hypothesis is rejected at the 1% level.</source>
          <target state="translated">つまり、F統計が7.62を超える確率は1%程度で、測定値は36なので、帰無仮説は1%レベルで棄却されるということになります。</target>
        </trans-unit>
        <trans-unit id="4ddd4fd416fe6d1fe16f23ac519d97ee1e2dc7a2" translate="yes" xml:space="preserve">
          <source>So, by defining a specific &lt;code&gt;__array_wrap__&lt;/code&gt; method for our subclass, we can tweak the output from ufuncs. The &lt;code&gt;__array_wrap__&lt;/code&gt; method requires &lt;code&gt;self&lt;/code&gt;, then an argument - which is the result of the ufunc - and an optional parameter &lt;em&gt;context&lt;/em&gt;. This parameter is returned by ufuncs as a 3-element tuple: (name of the ufunc, arguments of the ufunc, domain of the ufunc), but is not set by other numpy functions. Though, as seen above, it is possible to do otherwise, &lt;code&gt;__array_wrap__&lt;/code&gt; should return an instance of its containing class. See the masked array subclass for an implementation.</source>
          <target state="translated">したがって、サブクラスに特定の &lt;code&gt;__array_wrap__&lt;/code&gt; メソッドを定義することで、ufuncsからの出力を微調整できます。 &lt;code&gt;__array_wrap__&lt;/code&gt; 方法が必要 &lt;code&gt;self&lt;/code&gt; ufuncの結果である- -とオプションのパラメータ、引数&lt;em&gt;コンテキスト&lt;/em&gt;。このパラメーターは、ufuncsによって3要素のタプルとして返されます:( ufuncの名前、ufuncの引数、ufuncのドメイン）が、他のnumpy関数によって設定されません。上で見たように、他の方法で行うことは可能ですが、 &lt;code&gt;__array_wrap__&lt;/code&gt; はそれを含むクラスのインスタンスを返す必要があります。実装については、マスクされた配列サブクラスを参照してください。</target>
        </trans-unit>
        <trans-unit id="a6530c806dc81f899a20b29f20f0a01aeaaaf38e" translate="yes" xml:space="preserve">
          <source>So, over 64 months would be required to pay off the loan.</source>
          <target state="translated">そのため、64ヶ月を超えると完済が必要になります。</target>
        </trans-unit>
        <trans-unit id="0cd2be4123405b8b865dc4d67f41a8ad4c3f36a7" translate="yes" xml:space="preserve">
          <source>So, this class does not actually do anything interesting: it just converts any instances of its own to regular ndarray (otherwise, we&amp;rsquo;d get infinite recursion!), and adds an &lt;code&gt;info&lt;/code&gt; dictionary that tells which inputs and outputs it converted. Hence, e.g.,</source>
          <target state="translated">したがって、このクラスは実際には何も興味深いことはしません。それ自体のインスタンスを通常のndarrayに変換し（そうでない場合は無限再帰になります！）、変換した入力と出力を示す &lt;code&gt;info&lt;/code&gt; ディクショナリを追加します。したがって、例えば、</target>
        </trans-unit>
        <trans-unit id="a5004dc1aab93010354b018bb188be79f920df9c" translate="yes" xml:space="preserve">
          <source>So, to end up with the same $15692.93 under the same $100 per month &amp;ldquo;savings plan,&amp;rdquo; for annual interest rates of 4% and 3%, one would need initial investments of $649.27 and $1273.79, respectively.</source>
          <target state="translated">したがって、同じ月額100ドルの「貯蓄プラン」で同じ$ 15692.93になるには、年利4％と3％の場合、それぞれ初期投資$ 649.27と$ 1273.79が必要になります。</target>
        </trans-unit>
        <trans-unit id="14b8aecd3aaaa33e35d9724dfec4e61ddcb14189" translate="yes" xml:space="preserve">
          <source>So:</source>
          <target state="translated">So:</target>
        </trans-unit>
        <trans-unit id="6ebdb3e9e8d6757481f655d319b1afadf8dc01e9" translate="yes" xml:space="preserve">
          <source>Solution to the system a x = b. Returned shape is identical to &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">システムの解法ax = b。返される形状は &lt;code&gt;b&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="949505f2f39f0b589771403ff8b3ce6df4de8e29" translate="yes" xml:space="preserve">
          <source>Solve &lt;code&gt;a.T x.T = b.T&lt;/code&gt; instead</source>
          <target state="translated">解決 &lt;code&gt;a.T x.T = b.T&lt;/code&gt; 代わりに</target>
        </trans-unit>
        <trans-unit id="47cd45ea813008c51999b21afe4021732229d27d" translate="yes" xml:space="preserve">
          <source>Solve a linear matrix equation, or system of linear scalar equations.</source>
          <target state="translated">一次行列方程式、または一次スカラー方程式の系を解きなさい。</target>
        </trans-unit>
        <trans-unit id="30e7aa84268178ffe0845e5a39585732ba9f3586" translate="yes" xml:space="preserve">
          <source>Solve a.T x.T = b.T instead</source>
          <target state="translated">代わりにa.T x.T=b.Tを解く</target>
        </trans-unit>
        <trans-unit id="f401130634f936a923b84a9e812b9c0958189ce8" translate="yes" xml:space="preserve">
          <source>Solve the system of equations &lt;code&gt;3 * x0 + x1 = 9&lt;/code&gt; and &lt;code&gt;x0 + 2 * x1 = 8&lt;/code&gt;:</source>
          <target state="translated">方程式系 &lt;code&gt;3 * x0 + x1 = 9&lt;/code&gt; および &lt;code&gt;x0 + 2 * x1 = 8&lt;/code&gt; 解く：</target>
        </trans-unit>
        <trans-unit id="e357636c18d54887208506dd3f992cf9376f1a5d" translate="yes" xml:space="preserve">
          <source>Solve the system of equations &lt;code&gt;x0 + 2 * x1 = 1&lt;/code&gt; and &lt;code&gt;3 * x0 + 5 * x1 = 2&lt;/code&gt;:</source>
          <target state="translated">連立方程式 &lt;code&gt;x0 + 2 * x1 = 1&lt;/code&gt; および &lt;code&gt;3 * x0 + 5 * x1 = 2&lt;/code&gt; ます：</target>
        </trans-unit>
        <trans-unit id="4fa6a62025edb0c24849f443aeee1762c51d4292" translate="yes" xml:space="preserve">
          <source>Solve the tensor equation &lt;code&gt;a x = b&lt;/code&gt; for x.</source>
          <target state="translated">テンソル方程式 &lt;code&gt;a x = b&lt;/code&gt; をxについて解きます。</target>
        </trans-unit>
        <trans-unit id="2662dd226f62ccee1e8db7abb4ac87cf33caa66b" translate="yes" xml:space="preserve">
          <source>Solves the equation</source>
          <target state="translated">方程式を解く</target>
        </trans-unit>
        <trans-unit id="c7e1b491799507ad39ca1efa34833c4a45590d4c" translate="yes" xml:space="preserve">
          <source>Solving equations and inverting matrices</source>
          <target state="translated">方程式を解き、行列を反転させる</target>
        </trans-unit>
        <trans-unit id="7816460fa8a4213b4e69ef8f70cd9ea8a3ffd6ed" translate="yes" xml:space="preserve">
          <source>Some Key Differences</source>
          <target state="translated">いくつかの重要な違い</target>
        </trans-unit>
        <trans-unit id="f6ac3edd3880760d2a349fec2ec6dede68663b58" translate="yes" xml:space="preserve">
          <source>Some NumPy routines always return views, some always return copies, some may return one or the other, and for some the choice can be specified. Responsiblity for managing views and copies falls to the programmer. &lt;a href=&quot;reference/generated/numpy.shares_memory#numpy.shares_memory&quot;&gt;&lt;code&gt;numpy.shares_memory&lt;/code&gt;&lt;/a&gt; will check whether &lt;code&gt;b&lt;/code&gt; is a view of &lt;code&gt;a&lt;/code&gt;, but an exact answer isn&amp;rsquo;t always feasible, as the documentation page explains.</source>
          <target state="translated">一部のNumPyルーチンは常にビューを返し、一部は常にコピーを返し、一部はどちらか一方を返す場合があり、一部の場合は選択肢を指定できます。ビューとコピーを管理する責任はプログラマーにあります。&lt;a href=&quot;reference/generated/numpy.shares_memory#numpy.shares_memory&quot;&gt; &lt;code&gt;numpy.shares_memory&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;b&lt;/code&gt; がaのビューで &lt;code&gt;a&lt;/code&gt; かどうかをチェックしますが、ドキュメントページで説明されているように、正確な答えが常に実行可能であるとは限りません。</target>
        </trans-unit>
        <trans-unit id="43b0492eef0c0518822e4513393b1d39235d0d0e" translate="yes" xml:space="preserve">
          <source>Some cases where uint and true alignment are different ()</source>
          <target state="translated">uint と真のアラインメントが異なる場合があります()</target>
        </trans-unit>
        <trans-unit id="d1019de292a3b48b30fff1374e4676305929bebd" translate="yes" xml:space="preserve">
          <source>Some cases where uint and true alignment are different (default gcc linux):</source>
          <target state="translated">uint と真のアラインメントが異なる場合があります(デフォルトの gcc linux)。</target>
        </trans-unit>
        <trans-unit id="a542d599020730fc9e801345b862f13f14b4acf2" translate="yes" xml:space="preserve">
          <source>Some entries may be missing in the dataset we are trying to import. In a previous example, we used a converter to transform an empty string into a float. However, user-defined converters may rapidly become cumbersome to manage.</source>
          <target state="translated">インポートしようとしているデータセットの中に、いくつかのエントリが欠けている可能性があります。前の例では、空の文字列をfloatに変換するためにコンバータを使用しました。しかし、ユーザー定義のコンバータは、管理が急速に面倒になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">いくつかの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="5c7fd1727ed40b6d20e06713861689602adf2ada" translate="yes" xml:space="preserve">
          <source>Some features described in this document require a recent version of &lt;code&gt;numpydoc&lt;/code&gt;. For example, the &lt;strong&gt;Yields&lt;/strong&gt; section was added in &lt;code&gt;numpydoc&lt;/code&gt; 0.6.</source>
          <target state="translated">このドキュメントで説明されている一部の機能には、最新バージョンの &lt;code&gt;numpydoc&lt;/code&gt; が必要です。たとえば、&lt;strong&gt;Yields&lt;/strong&gt;セクションは &lt;code&gt;numpydoc&lt;/code&gt; 0.6で追加されました。</target>
        </trans-unit>
        <trans-unit id="c3cc4ff3232feca4c3b11921843d78bf63af7e91" translate="yes" xml:space="preserve">
          <source>Some key differences</source>
          <target state="translated">主な相違点</target>
        </trans-unit>
        <trans-unit id="64fb9ccdfaf0e9d2d3e1359a257e97c7311570c0" translate="yes" xml:space="preserve">
          <source>Some more use alternate naming conventions for extended-precision floats and complex numbers:</source>
          <target state="translated">また、拡張精度の浮動小数点数や複素数に対して、別の命名規則を使用しているところもあります。</target>
        </trans-unit>
        <trans-unit id="8c00107ac79c20e1a081f03fb6cbaba3191f960b" translate="yes" xml:space="preserve">
          <source>Some of the scalar types are essentially equivalent to fundamental Python types and therefore inherit from them as well as from the generic array scalar type:</source>
          <target state="translated">いくつかのスカラー型は基本的にPythonの基本的な型と同等であるため、汎用配列スカラー型と同様にそれらを継承しています。</target>
        </trans-unit>
        <trans-unit id="a5f562d4f1e3fdb2208baf42f6c6a18bd596f596" translate="yes" xml:space="preserve">
          <source>Some of the tests in the test suite require a large amount of memory, and are skipped if your system does not have enough.</source>
          <target state="translated">テストスイートのテストの中には、大量のメモリを必要とするものがあり、システムに十分なメモリがない場合はスキップされます。</target>
        </trans-unit>
        <trans-unit id="565ad1be01f304cf8276cf987896bb34b886694b" translate="yes" xml:space="preserve">
          <source>Some of the types in this module rely on features only present in the standard library in Python 3.8 and greater. If you want to use these types in earlier versions of Python, you should install the &lt;a href=&quot;https://pypi.org/project/typing-extensions/&quot;&gt;typing-extensions&lt;/a&gt; package.</source>
          <target state="translated">このモジュールの一部のタイプは、Python3.8以降の標準ライブラリにのみ存在する機能に依存しています。以前のバージョンのPythonでこれらの型を使用する場合は、&lt;a href=&quot;https://pypi.org/project/typing-extensions/&quot;&gt;typing-extensions&lt;/a&gt;パッケージをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="c85e63aec45df025bea301bcb4bf6b89b178cf85" translate="yes" xml:space="preserve">
          <source>Some old Fortran codes need special compiler options in order to work correctly. In order to specify compiler options per source file, &lt;code&gt;numpy.distutils&lt;/code&gt; Fortran compiler looks for the following pattern:</source>
          <target state="translated">一部の古いFortranコードは、正しく機能するために特別なコンパイラオプションを必要とします。ソースファイルごとにコンパイラオプションを指定するために、 &lt;code&gt;numpy.distutils&lt;/code&gt; Fortranコンパイラは次のパターンを探します。</target>
        </trans-unit>
        <trans-unit id="ddbcdd8799a6eb22893d3198d17fe75528762dea" translate="yes" xml:space="preserve">
          <source>Some operations, such as &lt;code&gt;+=&lt;/code&gt; and &lt;code&gt;*=&lt;/code&gt;, act in place to modify an existing array rather than create a new one.</source>
          <target state="translated">&lt;code&gt;+=&lt;/code&gt; や &lt;code&gt;*=&lt;/code&gt; などの一部の操作は、新しい配列を作成するのではなく、既存の配列を変更するために適切に機能します。</target>
        </trans-unit>
        <trans-unit id="a2cfebd3d3ece5c1e007859b24f38d898adb6c60" translate="yes" xml:space="preserve">
          <source>Some special methods and attributes are used by arrays in order to facilitate the interoperation of sub-types with the base ndarray type.</source>
          <target state="translated">配列では、ベースとなるndarray型とサブ型の相互運用を容易にするために、いくつかの特別なメソッドと属性が使用されます。</target>
        </trans-unit>
        <trans-unit id="b279d322696735803b77494e0d85658168ba5e97" translate="yes" xml:space="preserve">
          <source>Some spreadsheet programs calculate the &amp;ldquo;floor-towards-zero&amp;rdquo;, in other words &lt;code&gt;floor(-2.5) == -2&lt;/code&gt;. NumPy instead uses the definition of &lt;a href=&quot;#numpy.floor&quot;&gt;&lt;code&gt;floor&lt;/code&gt;&lt;/a&gt; where &lt;code&gt;floor(-2.5) == -3&lt;/code&gt;.</source>
          <target state="translated">一部のスプレッドシートプログラムは、「floor-towards-zero」、つまり &lt;code&gt;floor(-2.5) == -2&lt;/code&gt; 計算します。numpyの代わりの定義使用&lt;a href=&quot;#numpy.floor&quot;&gt; &lt;code&gt;floor&lt;/code&gt; &lt;/a&gt; &lt;code&gt;floor(-2.5) == -3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7051281732f2ec06ad8a423664716faeca269413" translate="yes" xml:space="preserve">
          <source>Some things to consider:</source>
          <target state="translated">考慮すべき点がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="e076ea295087ca8af80708dc44915c8314e4840f" translate="yes" xml:space="preserve">
          <source>Some useful aliases of the above types are</source>
          <target state="translated">上記のタイプのいくつかの有用なエイリアスは</target>
        </trans-unit>
        <trans-unit id="1671b95e5ffbf1238a81b8297939415d3fd1114c" translate="yes" xml:space="preserve">
          <source>Something like the following code can be used to support both &lt;code&gt;RandomState&lt;/code&gt; and &lt;code&gt;Generator&lt;/code&gt;, with the understanding that the interfaces are slightly different</source>
          <target state="translated">以下のコードのようなものは、両方サポートするために使用することができる &lt;code&gt;RandomState&lt;/code&gt; 及び &lt;code&gt;Generator&lt;/code&gt; インターフェイスが若干異なることを理解して、</target>
        </trans-unit>
        <trans-unit id="d18010aa6e32898329ba9966b17eb41dba315729" translate="yes" xml:space="preserve">
          <source>Something&amp;rsquo;s wrong with this data - we are not supposed to have negative values in a cumulative data set. What&amp;rsquo;s going on?</source>
          <target state="translated">このデータに問題があります。累積データセットに負の値があるとは想定されていません。どうしたの？</target>
        </trans-unit>
        <trans-unit id="34617697c9559c1ea4d57507d3c772b924d1efbc" translate="yes" xml:space="preserve">
          <source>Sometimes &lt;code&gt;copy&lt;/code&gt; should be called after slicing if the original array is not required anymore. For example, suppose &lt;code&gt;a&lt;/code&gt; is a huge intermediate result and the final result &lt;code&gt;b&lt;/code&gt; only contains a small fraction of &lt;code&gt;a&lt;/code&gt;, a deep copy should be made when constructing &lt;code&gt;b&lt;/code&gt; with slicing:</source>
          <target state="translated">時には、 &lt;code&gt;copy&lt;/code&gt; 元の配列がもはや必要とされない場合、スライス後に呼び出される必要があります。たとえば、 &lt;code&gt;a&lt;/code&gt; が巨大な中間結果であり、最終結果 &lt;code&gt;b&lt;/code&gt; に含まれるのはaのごく一部で &lt;code&gt;a&lt;/code&gt; とすると、スライスを使用して &lt;code&gt;b&lt;/code&gt; を作成する場合は、ディープコピーを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="4268b2129ba925e1d48843c5c395c0c45327167b" translate="yes" xml:space="preserve">
          <source>Sometimes a Fortran package may require that users provide routines that the package will use. F2PY can construct an interface to such routines so that Python functions could be called from Fortran.</source>
          <target state="translated">時々、Fortran パッケージは、ユーザがパッケージが使用するルーチンを提供することを要求することがあります。F2PYは、Pythonの関数をFortranから呼び出すことができるように、そのようなルーチンへのインターフェースを構築することができます。</target>
        </trans-unit>
        <trans-unit id="9467a0f0b915a6467304173ebaf28fafa38f3924" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to access a multidimensional array as a C-style multi-dimensional array so that algorithms can be implemented using C&amp;rsquo;s a[i][j][k] syntax. This routine returns a pointer, &lt;em&gt;ptr&lt;/em&gt;, that simulates this kind of C-style array, for 1-, 2-, and 3-d ndarrays.</source>
          <target state="translated">Cのa [i] [j] [k]構文を使用してアルゴリズムを実装できるように、Cスタイルの多次元配列として多次元配列にアクセスすると便利な場合があります。このルーチンは、1次元、2次元、および3次元のndarrayに対して、この種のCスタイルの配列をシミュレートするポインター&lt;em&gt;ptrを&lt;/em&gt;返します。</target>
        </trans-unit>
        <trans-unit id="ec72337ff3c83f7940812234b3ba998c6f082e9e" translate="yes" xml:space="preserve">
          <source>Sometimes it may be useful to get the N-dimensional index while iterating. The ndenumerate iterator can achieve this.</source>
          <target state="translated">時々、反復処理中にN次元のインデックスを取得するのが便利な場合があります。ndenumerateイテレータはこれを実現します。</target>
        </trans-unit>
        <trans-unit id="0744d9126505450547757e296c542c0b00376d4c" translate="yes" xml:space="preserve">
          <source>Sometimes you might want to skip a test or mark it as a known failure, such as when the test suite is being written before the code it&amp;rsquo;s meant to test, or if a test only fails on a particular architecture.</source>
          <target state="translated">場合によっては、テストを意図したコードの前にテストスイートが書き込まれている場合や、特定のアーキテクチャでのみテストが失敗した場合など、テストをスキップするか、既知のエラーとしてマークする必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="c295e72861adbd23ef6b2dcbfed6577dacefe499" translate="yes" xml:space="preserve">
          <source>Sometimes, the best approach is to use the &lt;code&gt;%extend&lt;/code&gt; directive to define new methods for your classes (or overload existing ones) that take a &lt;code&gt;PyObject*&lt;/code&gt; (that either is or can be converted to a &lt;code&gt;PyArrayObject*&lt;/code&gt;) instead of a pointer to a buffer. In this case, the helper routines in &lt;code&gt;numpy.i&lt;/code&gt; can be very useful.</source>
          <target state="translated">場合によっては、 &lt;code&gt;%extend&lt;/code&gt; ディレクティブを使用して、バッファへのポインタの代わりに &lt;code&gt;PyObject*&lt;/code&gt; （または &lt;code&gt;PyArrayObject*&lt;/code&gt; 変換できる）を取るクラスの新しいメソッドを定義する（または既存のメソッドをオーバーロードする）のが最善の方法です。。この場合、 &lt;code&gt;numpy.i&lt;/code&gt; のヘルパールーチンが非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="04ecf9e2bc2654660a3c52fb5b73eb5423e29ed8" translate="yes" xml:space="preserve">
          <source>Sometimes, you mess up merges or rebases. Luckily, in Git it is relatively straightforward to recover from such mistakes.</source>
          <target state="translated">時々、マージやリベースを失敗してしまうことがあります。幸いなことに、Git ではこのようなミスから回復するのは比較的簡単です。</target>
        </trans-unit>
        <trans-unit id="013e7e93c49d182f82742c8920c97f56d061e7e4" translate="yes" xml:space="preserve">
          <source>Somewhat more sophisticated example</source>
          <target state="translated">やや洗練された例</target>
        </trans-unit>
        <trans-unit id="328b7438e36cdae2c28d64a3dd3bc7ddc0df1e77" translate="yes" xml:space="preserve">
          <source>Sort a complex array using the real part first, then the imaginary part.</source>
          <target state="translated">最初に実部を用いて複素配列をソートし,次に虚部を用いてソートします.</target>
        </trans-unit>
        <trans-unit id="7703cef2dff0050a3552375a078ec7f70589b4bd" translate="yes" xml:space="preserve">
          <source>Sort an array in-place.</source>
          <target state="translated">配列をインプレースでソートします。</target>
        </trans-unit>
        <trans-unit id="758912cadfdc3e6db6c081dc567a966e86a886f3" translate="yes" xml:space="preserve">
          <source>Sort an array in-place. Refer to &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt;&lt;code&gt;numpy.sort&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">配列をインプレースでソートします。完全なドキュメントについては、&lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt; &lt;code&gt;numpy.sort&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e971cf5812926cfacabdee56dc64c56ffada0b99" translate="yes" xml:space="preserve">
          <source>Sort by age, then height if ages are equal:</source>
          <target state="translated">年齢が同じなら年齢順に並べ替え、年齢が同じなら身長順に並べ替えます。</target>
        </trans-unit>
        <trans-unit id="edf066d3ae816f3adbcc852b784794ee538b1cc5" translate="yes" xml:space="preserve">
          <source>Sort names: first by surname, then by name.</source>
          <target state="translated">名前のソート:最初に苗字で、次に名前でソートします。</target>
        </trans-unit>
        <trans-unit id="c29b838e8a5ddeb05ab8f84b06787846a1a439df" translate="yes" xml:space="preserve">
          <source>Sort the array, in-place</source>
          <target state="translated">配列をソートします。</target>
        </trans-unit>
        <trans-unit id="b84eb35a33eb1b763dfde94c1db6ce2176107aa8" translate="yes" xml:space="preserve">
          <source>Sort two columns of numbers:</source>
          <target state="translated">2列の数字を並べ替えます。</target>
        </trans-unit>
        <trans-unit id="880e5dacaffdb29c387c406a9aa16d00ec9b6165" translate="yes" xml:space="preserve">
          <source>Sorted 1D array of common and unique elements.</source>
          <target state="translated">共通要素とユニーク要素の1D配列をソートしました。</target>
        </trans-unit>
        <trans-unit id="2b58c607b5c87ff5c9488ade6840a7c97cabbe74" translate="yes" xml:space="preserve">
          <source>Sorted 1D array of unique values that are in only one of the input arrays.</source>
          <target state="translated">入力配列のうちの1つだけにある一意の値の1次元配列をソートします。</target>
        </trans-unit>
        <trans-unit id="378e9e163b7eecefadb4415cae533096e336c4ab" translate="yes" xml:space="preserve">
          <source>Sorting</source>
          <target state="translated">Sorting</target>
        </trans-unit>
        <trans-unit id="ba112ceba77d3fead905df9fb056b8ffb7481e25" translate="yes" xml:space="preserve">
          <source>Sorting algorithm. The default is &amp;lsquo;quicksort&amp;rsquo;. Note that both &amp;lsquo;stable&amp;rsquo; and &amp;lsquo;mergesort&amp;rsquo; use timsort or radix sort under the covers and, in general, the actual implementation will vary with data type. The &amp;lsquo;mergesort&amp;rsquo; option is retained for backwards compatibility.</source>
          <target state="translated">並べ替えアルゴリズム。デフォルトは 'quicksort'です。'stable'と 'mergesort'はどちらも内部でtimsortまたはradix sortを使用し、一般に実際の実装はデータ型によって異なることに注意してください。'mergesort'オプションは、下位互換性のために保持されています。</target>
        </trans-unit>
        <trans-unit id="0575bbf541bc6691bd2f441dd799bc35084ddbf2" translate="yes" xml:space="preserve">
          <source>Sorting algorithm. The default is &amp;lsquo;quicksort&amp;rsquo;. Note that both &amp;lsquo;stable&amp;rsquo; and &amp;lsquo;mergesort&amp;rsquo; use timsort under the covers and, in general, the actual implementation will vary with data type. The &amp;lsquo;mergesort&amp;rsquo; option is retained for backwards compatibility.</source>
          <target state="translated">並べ替えアルゴリズム。デフォルトは 'quicksort'です。'stable'と 'mergesort'はどちらも内部でティムソートを使用し、一般に実際の実装はデータ型によって異なることに注意してください。'mergesort'オプションは、下位互換性のために保持されています。</target>
        </trans-unit>
        <trans-unit id="2cdbbd83ff8697bca9c84ed001e2e5d899425b4f" translate="yes" xml:space="preserve">
          <source>Sorting algorithm. The default is &amp;lsquo;quicksort&amp;rsquo;. Note that both &amp;lsquo;stable&amp;rsquo; and &amp;lsquo;mergesort&amp;rsquo; use timsort under the covers and, in general, the actual implementation will vary with datatype. The &amp;lsquo;mergesort&amp;rsquo; option is retained for backwards compatibility.</source>
          <target state="translated">並べ替えアルゴリズム。デフォルトは 'quicksort'です。'stable'と 'mergesort'はどちらも内部でティムソートを使用し、一般に、実際の実装はデータ型によって異なることに注意してください。'mergesort'オプションは、下位互換性のために保持されています。</target>
        </trans-unit>
        <trans-unit id="ac2a35ddb37753b49a15b129584e4d1ff35a6cad" translate="yes" xml:space="preserve">
          <source>Sorting an element is simple with &lt;code&gt;np.sort()&lt;/code&gt;. You can specify the axis, kind, and order when you call the function.</source>
          <target state="translated">要素の並べ替えは、 &lt;code&gt;np.sort()&lt;/code&gt; を使用すると簡単です。関数を呼び出すときに、軸、種類、および順序を指定できます。</target>
        </trans-unit>
        <trans-unit id="bdc99b8f2211c27e95a7ae2ea3c4e510c89721f9" translate="yes" xml:space="preserve">
          <source>Sorting with keys:</source>
          <target state="translated">キーを使ってソートします。</target>
        </trans-unit>
        <trans-unit id="26d009fe61cd6c804332028c785b29bfb52d084f" translate="yes" xml:space="preserve">
          <source>Sorting, searching, and counting</source>
          <target state="translated">並び替え、検索、カウント</target>
        </trans-unit>
        <trans-unit id="6767832dfbb08054083a5a2806dbcbcc61e43981" translate="yes" xml:space="preserve">
          <source>Source array</source>
          <target state="translated">ソース配列</target>
        </trans-unit>
        <trans-unit id="0573d3f51a9aab11e2cc3aca537f496eac0b69fc" translate="yes" xml:space="preserve">
          <source>Source distribution</source>
          <target state="translated">ソースの分布</target>
        </trans-unit>
        <trans-unit id="f129cc36c0cc30f28b30e1834c4eba00a6a6b06e" translate="yes" xml:space="preserve">
          <source>Source of entropy. &amp;lsquo;system&amp;rsquo; uses system cryptographic pool. &amp;lsquo;fallback&amp;rsquo; uses a hash of the time and process id.</source>
          <target state="translated">エントロピーの源。'system'はシステム暗号プールを使用します。「フォールバック」は、時間とプロセスIDのハッシュを使用します。</target>
        </trans-unit>
        <trans-unit id="a7c9035efe52f2756450e1fe32a13149d10a224e" translate="yes" xml:space="preserve">
          <source>Source tree</source>
          <target state="translated">ソースツリー</target>
        </trans-unit>
        <trans-unit id="dc1737b3b1fae12e4ca81687b7ce0c8d06e3bfa1" translate="yes" xml:space="preserve">
          <source>Spacing between f values. Default unitary spacing for all dimensions. Spacing can be specified using:</source>
          <target state="translated">f値間の間隔。すべての寸法のデフォルトの単位間隔。間隔は、以下を使用して指定することができます。</target>
        </trans-unit>
        <trans-unit id="534a506bdd04ed14f369aaa8c5d2a5a1b475cf75" translate="yes" xml:space="preserve">
          <source>Spacing between values. For any output &lt;code&gt;out&lt;/code&gt;, this is the distance between two adjacent values, &lt;code&gt;out[i+1] - out[i]&lt;/code&gt;. The default step size is 1. If &lt;code&gt;step&lt;/code&gt; is specified as a position argument, &lt;code&gt;start&lt;/code&gt; must also be given.</source>
          <target state="translated">値間の間隔。出力 &lt;code&gt;out&lt;/code&gt; の場合、これは2つの隣接する値 &lt;code&gt;out[i+1] - out[i]&lt;/code&gt; 間の距離です。デフォルトのステップサイズは1です。 &lt;code&gt;step&lt;/code&gt; 位置引数として指定する場合は、 &lt;code&gt;start&lt;/code&gt; も指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="9b1c83ae389903de1c17429b8031bd633cfea38a" translate="yes" xml:space="preserve">
          <source>Spacing can be also specified with an array that represents the coordinates of the values F along the dimensions. For instance a uniform spacing:</source>
          <target state="translated">間隔は、次元に沿った値 F の座標を表す配列で指定することもできます。例えば、一様な間隔。</target>
        </trans-unit>
        <trans-unit id="3c1452a3b0205f538f941fa6e2df87a5606ff452" translate="yes" xml:space="preserve">
          <source>Spacing of +- inf and NaN is NaN.</source>
          <target state="translated">の間隔は+-infとNaNの間隔はNaNである。</target>
        </trans-unit>
        <trans-unit id="23afed8ee1674d2a0d0a6b27d54e26458214a09b" translate="yes" xml:space="preserve">
          <source>Spawn a number of child &lt;a href=&quot;#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; s by extending the &lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt;&lt;code&gt;spawn_key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;を拡張して、多数の子SeedSequenceを&lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt; &lt;code&gt;spawn_key&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="91b21b0aabd8c374de6706b913967d168827f182" translate="yes" xml:space="preserve">
          <source>Spawn a number of child &lt;a href=&quot;numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; s by extending the &lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt;&lt;code&gt;spawn_key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;を拡張して、多数の子SeedSequenceを&lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt; &lt;code&gt;spawn_key&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="4a7b1bed90f9109d1560bedfed1f5842d8350d2b" translate="yes" xml:space="preserve">
          <source>Spawn a number of child &lt;code&gt;SeedSequence&lt;/code&gt; s by extending the &lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt;&lt;code&gt;spawn_key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SeedSequence&lt;/code&gt; を拡張して、多数の子SeedSequenceを&lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt; &lt;code&gt;spawn_key&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3011c57bc17adfb34d1d5b7d2a537f2f42b61ecd" translate="yes" xml:space="preserve">
          <source>Spawn a number of child &lt;code&gt;SeedSequence&lt;/code&gt; s by extending the &lt;code&gt;spawn_key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SeedSequence&lt;/code&gt; を拡張して、多数の子SeedSequenceを &lt;code&gt;spawn_key&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="5bdcbf562b3722f869ecc22fc6f007711257a292" translate="yes" xml:space="preserve">
          <source>Special attributes and methods</source>
          <target state="translated">特殊な属性とメソッド</target>
        </trans-unit>
        <trans-unit id="aed4a5ac93d537d2fee54607e067f0fcd734c2a7" translate="yes" xml:space="preserve">
          <source>Special case of &lt;a href=&quot;#c.PyArray_EquivTypes&quot;&gt;&lt;code&gt;PyArray_EquivTypes&lt;/code&gt;&lt;/a&gt; (&amp;hellip;) that does not accept flexible data types but may be easier to call.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_EquivTypes&quot;&gt; &lt;code&gt;PyArray_EquivTypes&lt;/code&gt; &lt;/a&gt;（&amp;hellip;）の特殊なケースで、柔軟なデータ型を受け入れませんが、呼び出しは簡単です。</target>
        </trans-unit>
        <trans-unit id="1fe419ca9a2135cb73cdfe673bb644f8c5d089ef" translate="yes" xml:space="preserve">
          <source>Special case of &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; for when &lt;em&gt;op&lt;/em&gt; is already an array but it needs to be of a specific &lt;em&gt;newtype&lt;/em&gt; (including byte-order) or has certain &lt;em&gt;requirements&lt;/em&gt;.</source>
          <target state="translated">特別な場合&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt;場合の&lt;em&gt;OPが&lt;/em&gt;既に配列であるが、それは特定のであることが必要である&lt;em&gt;のnewtype&lt;/em&gt;（バイト順を含む）、または特定有する&lt;em&gt;要件を&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="75f613a38c9a77eef52fd9053dd584ff64dc4df0" translate="yes" xml:space="preserve">
          <source>Special cases</source>
          <target state="translated">特別なケース</target>
        </trans-unit>
        <trans-unit id="60bf3781f7b69622f4280d80dab8f4e70529bfe8" translate="yes" xml:space="preserve">
          <source>Special functions for NPY_OBJECT</source>
          <target state="translated">NPY_OBJECTの特殊関数</target>
        </trans-unit>
        <trans-unit id="b3dfcf123c0344e2a770caf2c6d80f585312a2df" translate="yes" xml:space="preserve">
          <source>Special hook for ufuncs.</source>
          <target state="translated">ufuncs専用フック。</target>
        </trans-unit>
        <trans-unit id="93a7e480fca31e54d3a1bf415987f972c987379d" translate="yes" xml:space="preserve">
          <source>Special methods</source>
          <target state="translated">特殊な方法</target>
        </trans-unit>
        <trans-unit id="236fb9c3ae636a04ac95eb7b7ad259661aa1f52c" translate="yes" xml:space="preserve">
          <source>Special options</source>
          <target state="translated">特別オプション</target>
        </trans-unit>
        <trans-unit id="74beb6845eb25315ea92e2ea4ebb77c3ebadf8dd" translate="yes" xml:space="preserve">
          <source>Special scalar float values don&amp;rsquo;t cause upcast to double anymore</source>
          <target state="translated">特別なスカラーフロート値により、アップキャストが2倍になることはなくなりました</target>
        </trans-unit>
        <trans-unit id="7b47c55cf6c229444142c9b9017fc538e2c7deff" translate="yes" xml:space="preserve">
          <source>Special values defined in numpy: nan, inf,</source>
          <target state="translated">numpyで定義された特殊な値:nan,inf.</target>
        </trans-unit>
        <trans-unit id="a2158670ec5e5117a3b35c2952cf53165872b26e" translate="yes" xml:space="preserve">
          <source>Specialized &lt;code&gt;isnan&lt;/code&gt;, &lt;code&gt;isinf&lt;/code&gt;, and &lt;code&gt;isfinite&lt;/code&gt; ufuncs for bool and int types</source>
          <target state="translated">boolおよびint型用の特殊な &lt;code&gt;isnan&lt;/code&gt; 、 &lt;code&gt;isinf&lt;/code&gt; 、および &lt;code&gt;isfinite&lt;/code&gt; ufuncs</target>
        </trans-unit>
        <trans-unit id="8899a5e1011908ed3c98b6c76098d0a6e169ff42" translate="yes" xml:space="preserve">
          <source>Specialized, in-depth documentation</source>
          <target state="translated">専門的で詳細な文書化</target>
        </trans-unit>
        <trans-unit id="3231c99cca4b4794d01cebdeb84abe04e24ba373" translate="yes" xml:space="preserve">
          <source>Specific Guidelines</source>
          <target state="translated">具体的なガイドライン</target>
        </trans-unit>
        <trans-unit id="552d192c548d97ba2f26ac2b633deab2d34515a8" translate="yes" xml:space="preserve">
          <source>Specific features of ndarray sub-typing</source>
          <target state="translated">ndarrayサブタイピングの具体的な特徴</target>
        </trans-unit>
        <trans-unit id="3002d8550adc7583b9e34c0e71be4f097501b6cb" translate="yes" xml:space="preserve">
          <source>Specific methods</source>
          <target state="translated">具体的な方法</target>
        </trans-unit>
        <trans-unit id="cf2f0aad66d259134ba110faea6639bae5dba0cf" translate="yes" xml:space="preserve">
          <source>Specifies how indices outside &lt;code&gt;[0, n-1]&lt;/code&gt; will be treated:</source>
          <target state="translated">&lt;code&gt;[0, n-1]&lt;/code&gt; 以外のインデックスの処理方法を指定します。</target>
        </trans-unit>
        <trans-unit id="a7fddec5bc5d09611a6a6411474f1557bfcece40" translate="yes" xml:space="preserve">
          <source>Specifies how out-of-bounds indices are handled. Can specify either one mode or a tuple of modes, one mode per index.</source>
          <target state="translated">境界外インデックスの処理方法を指定します。1つのモードまたはモードのタプルを指定することができ、インデックスごとに1つのモードを指定します。</target>
        </trans-unit>
        <trans-unit id="bd5a8d9eaa67a4089d4d8ea6c9d2499b271531d4" translate="yes" xml:space="preserve">
          <source>Specifies how out-of-bounds indices will behave.</source>
          <target state="translated">境界外指数がどのように振る舞うかを指定します。</target>
        </trans-unit>
        <trans-unit id="0c82c7d4c03f4e3d40af4885f34fa55cd32452a2" translate="yes" xml:space="preserve">
          <source>Specifies how out-of-bounds indices will behave. &amp;lsquo;raise&amp;rsquo; : raise an error. &amp;lsquo;wrap&amp;rsquo; : wrap around. &amp;lsquo;clip&amp;rsquo; : clip to the range.</source>
          <target state="translated">範囲外のインデックスの動作を指定します。'raise'：エラーを発生させます。'wrap'：ラップアラウンド。'clip'：範囲にクリップします。</target>
        </trans-unit>
        <trans-unit id="613844173fd200c8dfdc2aaedd515354fe3b2a25" translate="yes" xml:space="preserve">
          <source>Specifies how to handle encoding errors</source>
          <target state="translated">エンコーディングエラーの処理方法を指定します。</target>
        </trans-unit>
        <trans-unit id="9b982562ff1b137afe496fb00468655c2065dda1" translate="yes" xml:space="preserve">
          <source>Specifies the calculation iteration order/memory layout of the output array. Defaults to &amp;lsquo;K&amp;rsquo;. &amp;lsquo;C&amp;rsquo; means the output should be C-contiguous, &amp;lsquo;F&amp;rsquo; means F-contiguous, &amp;lsquo;A&amp;rsquo; means F-contiguous if the inputs are F-contiguous and not also not C-contiguous, C-contiguous otherwise, and &amp;lsquo;K&amp;rsquo; means to match the element ordering of the inputs as closely as possible.</source>
          <target state="translated">出力配列の計算反復順序/メモリレイアウトを指定します。デフォルトは「K」です。'C'は出力がC隣接でなければならないことを意味し、 'F'はF隣接であることを意味し、 'A'は入力がF隣接であり、C隣接ではない場合はF隣接であり、それ以外の場合はC隣接であり、 'K 'は、入力の要素の順序をできる限り一致させることを意味します。</target>
        </trans-unit>
        <trans-unit id="050a737d589d7084aca709c1606453929922c13e" translate="yes" xml:space="preserve">
          <source>Specifies the minimum number of dimensions that the resulting array should have. Ones will be pre-pended to the shape as needed to meet this requirement.</source>
          <target state="translated">結果として得られる配列が持つべき最小の寸法数を指定します。この要件を満たすために,必要に応じて形状に 1 がプリペンドされます.</target>
        </trans-unit>
        <trans-unit id="1931e4d3fdc0bcca4a66f0fb2135dc85de6a0cb0" translate="yes" xml:space="preserve">
          <source>Specifies the subscripts for summation as comma separated list of subscript labels. An implicit (classical Einstein summation) calculation is performed unless the explicit indicator &amp;lsquo;-&amp;gt;&amp;rsquo; is included as well as subscript labels of the precise output form.</source>
          <target state="translated">添え字ラベルのコンマ区切りリストとして、合計の添え字を指定します。明示的なインジケーター「-&amp;gt;」と正確な出力形式の添え字ラベルが含まれていない限り、暗黙の（古典的なEinstein総和）計算が実行されます。</target>
        </trans-unit>
        <trans-unit id="7ecc55fddab59538bed27df3a80b7134cf4b1452" translate="yes" xml:space="preserve">
          <source>Specifies the subscripts for summation.</source>
          <target state="translated">和算の添え字を指定します。</target>
        </trans-unit>
        <trans-unit id="dc782b605bddd3902febdfde45c4deaed380a257" translate="yes" xml:space="preserve">
          <source>Specifies whether the calculation is done with the lower triangular part of &lt;code&gt;a&lt;/code&gt; (&amp;lsquo;L&amp;rsquo;, default) or the upper triangular part (&amp;lsquo;U&amp;rsquo;). Irrespective of this value only the real parts of the diagonal will be considered in the computation to preserve the notion of a Hermitian matrix. It therefore follows that the imaginary part of the diagonal will always be treated as zero.</source>
          <target state="translated">計算を &lt;code&gt;a&lt;/code&gt; の下三角部分（ 'L'、デフォルト）または上三角部分（ 'U'）のどちらで行うかを指定します。この値に関係なく、エルミート行列の概念を保存するために、計算では対角の実部のみが考慮されます。したがって、対角の虚数部は常にゼロとして扱われます。</target>
        </trans-unit>
        <trans-unit id="84b53fe298f53e60bfe5c134c03be76d2e5954a6" translate="yes" xml:space="preserve">
          <source>Specify &lt;code&gt;count&lt;/code&gt; to improve performance. It allows &lt;code&gt;fromiter&lt;/code&gt; to pre-allocate the output array, instead of resizing it on demand.</source>
          <target state="translated">パフォーマンスを向上させるために &lt;code&gt;count&lt;/code&gt; を指定します。 &lt;code&gt;fromiter&lt;/code&gt; は、オンデマンドでサイズを変更する代わりに、出力配列を事前に割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="8e47dd699795bbff19e2079eb9b60b779f348ba1" translate="yes" xml:space="preserve">
          <source>Specify F77 compiler flags</source>
          <target state="translated">F77コンパイラフラグの指定</target>
        </trans-unit>
        <trans-unit id="1dcabceb32b27e0847050d1a346a04229536da54" translate="yes" xml:space="preserve">
          <source>Specify F90 compiler flags</source>
          <target state="translated">F90コンパイラフラグの指定</target>
        </trans-unit>
        <trans-unit id="8adb73cadd47dbe74102288e37caa0fd6b7db46d" translate="yes" xml:space="preserve">
          <source>Specify Fortran compiler type by vendor.</source>
          <target state="translated">ベンダーごとにFortranコンパイラの種類を指定します。</target>
        </trans-unit>
        <trans-unit id="f370943c83badb26dd5a7697022661a921c18d58" translate="yes" xml:space="preserve">
          <source>Specify architecture specific optimization flags</source>
          <target state="translated">アーキテクチャ固有の最適化フラグを指定します。</target>
        </trans-unit>
        <trans-unit id="6cd35496e6db0dfd44a3dbf9c1531af1eb18b378" translate="yes" xml:space="preserve">
          <source>Specify optimization flags</source>
          <target state="translated">最適化フラグの指定</target>
        </trans-unit>
        <trans-unit id="d2e60a439c767ec0b6740ba66972caebb34c777a" translate="yes" xml:space="preserve">
          <source>Specify the algorithm that is used to generate the variates. Must be &amp;lsquo;count&amp;rsquo; or &amp;lsquo;marginals&amp;rsquo; (the default). See the Notes for a description of the methods.</source>
          <target state="translated">変量の生成に使用されるアルゴリズムを指定します。 'count'または 'marginals'（デフォルト）である必要があります。メソッドの説明については、注記を参照してください。</target>
        </trans-unit>
        <trans-unit id="a2559f8e80c3826a37d110b99c7697f1e76b2b76" translate="yes" xml:space="preserve">
          <source>Specify the memory layout of the array. If object is not an array, the newly created array will be in C order (row major) unless &amp;lsquo;F&amp;rsquo; is specified, in which case it will be in Fortran order (column major). If object is an array the following holds.</source>
          <target state="translated">配列のメモリレイアウトを指定します。オブジェクトが配列でない場合、新しく作成された配列は 'F'が指定されていない限り、C順（行優先）になります。この場合、Fortran順（列優先）になります。オブジェクトが配列の場合、以下が成り立ちます。</target>
        </trans-unit>
        <trans-unit id="c44bd2c1faa32dfad2b525474c59d5dbcd2e61f5" translate="yes" xml:space="preserve">
          <source>Specify the order of the array. If order is &amp;lsquo;C&amp;rsquo; (default), then the array will be in C-contiguous order (last-index varies the fastest). If order is &amp;lsquo;F&amp;rsquo;, then the returned array will be in Fortran-contiguous order (first-index varies the fastest).</source>
          <target state="translated">配列の順序を指定します。順序が 'C'（デフォルト）の場合、配列はCの連続した順序になります（最後のインデックスが最も速く変化します）。順序が 'F'の場合、返される配列はFortranの連続した順序になります（最初のインデックスが最も速く変化します）。</target>
        </trans-unit>
        <trans-unit id="8f0736b76ded7485aa40ce78476b297a664e4a9e" translate="yes" xml:space="preserve">
          <source>Specify the order of the array. If order is &amp;lsquo;C&amp;rsquo; (default), then the array will be in C-contiguous order (last-index varies the fastest). If order is &amp;lsquo;F&amp;rsquo;, then the returned array will be in Fortran-contiguous order (first-index varies the fastest). If order is &amp;lsquo;A&amp;rsquo;, then the returned array may be in any order (either C-, Fortran-contiguous, or even discontiguous).</source>
          <target state="translated">配列の順序を指定します。順序が 'C'（デフォルト）の場合、配列はCの連続した順序になります（最後のインデックスが最も速く変化します）。順序が 'F'の場合、返される配列はFortranの連続した順序になります（最初のインデックスが最も速く変化します）。順序が 'A'の場合、返される配列は任意の順序（C-、Fortran-contiguous、または不連続）になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="21cff05ed82b999db4c7f573fea17c64f4478c68" translate="yes" xml:space="preserve">
          <source>Specify the order of the array. If order is &amp;lsquo;C&amp;rsquo;, then the array will be in C-contiguous order (last-index varies the fastest). If order is &amp;lsquo;F&amp;rsquo;, then the returned array will be in Fortran-contiguous order (first-index varies the fastest). If order is &amp;lsquo;A&amp;rsquo; (default), then the returned array may be in any order (either C-, Fortran-contiguous, or even discontiguous), unless a copy is required, in which case it will be C-contiguous.</source>
          <target state="translated">配列の順序を指定します。順序が「C」の場合、配列はCの連続した順序になります（最後のインデックスが最も速く変化します）。順序が 'F'の場合、返される配列はFortranの連続した順序になります（最初のインデックスが最も速く変化します）。順序が 'A'（デフォルト）の場合、コピーが必要でない限り、返される配列は任意の順序（C-、Fortran連続、または不連続）になります。この場合、コピーはC-連続になります。</target>
        </trans-unit>
        <trans-unit id="1fb27d227bb393f1187ad4e5eb0ced3e536e01ee" translate="yes" xml:space="preserve">
          <source>Specify the order of the ndarray memory layout: &lt;a href=&quot;../../glossary#term-row-major&quot;&gt;row-major&lt;/a&gt;, C-style or &lt;a href=&quot;../../glossary#term-column-major&quot;&gt;column-major&lt;/a&gt;, Fortran-style. This only has an effect if the shape is greater than 1-D. The default order is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">ndarrayメモリレイアウトの順序を指定します：&lt;a href=&quot;../../glossary#term-row-major&quot;&gt;行メジャー&lt;/a&gt;、Cスタイル、または&lt;a href=&quot;../../glossary#term-column-major&quot;&gt;列メジャー&lt;/a&gt;、Fortranスタイル。これは、形状が1-Dより大きい場合にのみ効果があります。デフォルトの順序は「C」です。</target>
        </trans-unit>
        <trans-unit id="b4bff2e865a836b411173470fe4113bf016b57f0" translate="yes" xml:space="preserve">
          <source>Specify the order of the ndarray memory layout: &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;row-major&lt;/a&gt;, C-style or &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-column-major&quot;&gt;column-major&lt;/a&gt;, Fortran-style. This only has an effect if the shape is greater than 1-D. The default order is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">ndarrayメモリレイアウトの順序を指定します：&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;行&lt;/a&gt;優先、Cスタイルまたは&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-column-major&quot;&gt;列&lt;/a&gt;優先、Fortranスタイル。これは、形状が1-Dより大きい場合にのみ効果があります。デフォルトの順序は「C」です。</target>
        </trans-unit>
        <trans-unit id="ca65dac8916a03a2b42b9073cf8dba2d198d2c46" translate="yes" xml:space="preserve">
          <source>Specify the path to F77 compiler</source>
          <target state="translated">F77コンパイラのパスを指定</target>
        </trans-unit>
        <trans-unit id="f40540977344e7693e0730aa8ce345078b96cb56" translate="yes" xml:space="preserve">
          <source>Specify the path to F90 compiler</source>
          <target state="translated">F90コンパイラのパスを指定します。</target>
        </trans-unit>
        <trans-unit id="25ffc5daaa5434408ba7fc08d7e2fa025443a543" translate="yes" xml:space="preserve">
          <source>Specifying a where argument:</source>
          <target state="translated">where 引数を指定する。</target>
        </trans-unit>
        <trans-unit id="55a5e09335e7b11d69401e54a34729197354c2ca" translate="yes" xml:space="preserve">
          <source>Specifying a where argument: &amp;gt;&amp;gt;&amp;gt; a = np.array([[5, 9, 13], [14, 10, 12], [11, 15, 19]]) &amp;gt;&amp;gt;&amp;gt; np.mean(a) 12.0 &amp;gt;&amp;gt;&amp;gt; np.mean(a, where=[[True], [False], [False]]) 9.0</source>
          <target state="translated">where引数の指定：&amp;gt;&amp;gt;&amp;gt; a = np.array（[[5、9、13]、[14、10、12]、[11、15、19]]）&amp;gt;&amp;gt;&amp;gt; np.mean（a）12.0 &amp;gt;&amp;gt;&amp;gt; np.mean（a、where = [[True]、[False]、[False]]）9.0</target>
        </trans-unit>
        <trans-unit id="83ad629c93587e0e12f83328a8f66ad92721efa4" translate="yes" xml:space="preserve">
          <source>Specifying and constructing data types</source>
          <target state="translated">データ型の指定と構築</target>
        </trans-unit>
        <trans-unit id="00b91ffde426d9b0a3c3899a390a47a2d221ddad" translate="yes" xml:space="preserve">
          <source>Specifying config_fc options for libraries in setup.py script</source>
          <target state="translated">setup.pyスクリプトでライブラリのconfig_fcオプションを指定する</target>
        </trans-unit>
        <trans-unit id="497ce53e1d016b8475e5f51d0ed03829af1fe8b7" translate="yes" xml:space="preserve">
          <source>Specifying dtype and names</source>
          <target state="translated">dtypeと名前の指定</target>
        </trans-unit>
        <trans-unit id="99c8805177de6129ae475f67ee264572110d40f8" translate="yes" xml:space="preserve">
          <source>Specifying just the month, but forcing a &amp;lsquo;days&amp;rsquo; unit:</source>
          <target state="translated">月のみを指定し、「日」単位を強制する：</target>
        </trans-unit>
        <trans-unit id="b3dbb36c7df88f2134e58d3a13401955888547e5" translate="yes" xml:space="preserve">
          <source>Specifying the roots of a polynomial still leaves one degree of freedom, typically represented by an undetermined leading coefficient. &lt;a href=&quot;#r6c2ffae921d1-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; In the case of this function, that coefficient - the first one in the returned array - is always taken as one. (If for some reason you have one other point, the only automatic way presently to leverage that information is to use &lt;code&gt;polyfit&lt;/code&gt;.)</source>
          <target state="translated">多項式の根を指定しても、1つの自由度が残ります。これは通常、未決定の先行係数で表されます。&lt;a href=&quot;#r6c2ffae921d1-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;この関数の場合、その係数-返される配列の最初の係数-は常に1と見なされます。（何らかの理由で別のポイントがある場合、現在その情報を活用する唯一の自動方法は、 &lt;code&gt;polyfit&lt;/code&gt; を使用することです。）</target>
        </trans-unit>
        <trans-unit id="d2530001e7fd871e53a2ba97c658ec2622aa446b" translate="yes" xml:space="preserve">
          <source>Speed could be gained in some operations by an implementation of &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt;&lt;code&gt;numpy.sort&lt;/code&gt;&lt;/a&gt;, that can provide directly the permutation vectors, thus avoiding calls to &lt;a href=&quot;numpy.argsort#numpy.argsort&quot;&gt;&lt;code&gt;numpy.argsort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一部の操作では、順列ベクトルを直接提供できる&lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt; &lt;code&gt;numpy.sort&lt;/code&gt; を&lt;/a&gt;実装することで速度を上げることができるため、&lt;a href=&quot;numpy.argsort#numpy.argsort&quot;&gt; &lt;code&gt;numpy.argsort&lt;/code&gt; の&lt;/a&gt;呼び出しを回避できます。</target>
        </trans-unit>
        <trans-unit id="594ba849acb62bf9955d3fae75bdbb1d0f88e7a2" translate="yes" xml:space="preserve">
          <source>Speed improvement for np.random.shuffle</source>
          <target state="translated">np.random.shuffle の速度改善</target>
        </trans-unit>
        <trans-unit id="0b1f4aea2b38e05ca6cff4352833d4c2eead6bd1" translate="yes" xml:space="preserve">
          <source>Speeding up copy operations by using uint assignment in instead of memcpy</source>
          <target state="translated">memcpyの代わりにuint代入を使用してコピー操作を高速化する</target>
        </trans-unit>
        <trans-unit id="a14b3fe9e3a8f7a006654577a6ae1da8f05955f4" translate="yes" xml:space="preserve">
          <source>Speedup &lt;code&gt;np.block&lt;/code&gt; for large arrays</source>
          <target state="translated">スピードアップ &lt;code&gt;np.block&lt;/code&gt; 大きな配列のために</target>
        </trans-unit>
        <trans-unit id="40f31f8c5826e4dbe6f04955ac190ea5cc71bdb4" translate="yes" xml:space="preserve">
          <source>Speedup &lt;code&gt;np.take&lt;/code&gt; for read-only arrays</source>
          <target state="translated">スピードアップ &lt;code&gt;np.take&lt;/code&gt; 読み取り専用アレイについて</target>
        </trans-unit>
        <trans-unit id="2bafe3b9bad42eed1cf1d2eed53157311e9bd804" translate="yes" xml:space="preserve">
          <source>Spherical covariance (&lt;a href=&quot;../../generated/numpy.cov#numpy.cov&quot;&gt;&lt;code&gt;cov&lt;/code&gt;&lt;/a&gt; is a multiple of the identity matrix)</source>
          <target state="translated">球面共分散（&lt;a href=&quot;../../generated/numpy.cov#numpy.cov&quot;&gt; &lt;code&gt;cov&lt;/code&gt; &lt;/a&gt;は単位行列の倍数です）</target>
        </trans-unit>
        <trans-unit id="76bb3aba19733547ddb8d57ed987b6a041161ff6" translate="yes" xml:space="preserve">
          <source>Spherical covariance (&lt;code&gt;cov&lt;/code&gt; is a multiple of the identity matrix)</source>
          <target state="translated">球面共分散（ &lt;code&gt;cov&lt;/code&gt; は単位行列の倍数です）</target>
        </trans-unit>
        <trans-unit id="916f5f35ac38196af506905815cb0ca39bdc945d" translate="yes" xml:space="preserve">
          <source>Sphinx (pip)</source>
          <target state="translated">スフィンクス</target>
        </trans-unit>
        <trans-unit id="6812de7308d57b3049480b863a1f55dfc4da84e7" translate="yes" xml:space="preserve">
          <source>Sphinx extensions</source>
          <target state="translated">スフィンクスエクステンション</target>
        </trans-unit>
        <trans-unit id="4efa11778c1ea32ea551ee21675a9b8096e60567" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays as views into &lt;code&gt;ary&lt;/code&gt;.</source>
          <target state="translated">配列を &lt;code&gt;ary&lt;/code&gt; へのビューとして複数のサブ配列に分割します。</target>
        </trans-unit>
        <trans-unit id="088d71f3f52d7346fd614d711bd267b4c39c4007" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays horizontally (column-wise).</source>
          <target state="translated">配列を水平方向に複数のサブ配列に分割します。</target>
        </trans-unit>
        <trans-unit id="b5754126c144e79af24aefbc17318a87cc5f7fd2" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays of equal or near-equal size.</source>
          <target state="translated">配列を同じサイズまたはそれに近いサイズの複数のサブ配列に分割します。</target>
        </trans-unit>
        <trans-unit id="0cf080dcab286083ff1cc66a435eccc8025f3bbc" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays of equal or near-equal size. Does not raise an exception if an equal division cannot be made.</source>
          <target state="translated">配列を,等しく,あるいはほぼ等しくなるようなサイズの複数のサブ配列に分割します.等しく分割できない場合は例外を発生させません。</target>
        </trans-unit>
        <trans-unit id="c6395892c45b206d6b99821cc909fe1d65570f05" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays of equal size.</source>
          <target state="translated">配列を同じ大きさの複数のサブ配列に分割します。</target>
        </trans-unit>
        <trans-unit id="505aae82481059a2edd349c99b982eb22991f3d7" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays vertically (row-wise).</source>
          <target state="translated">配列を縦に複数のサブ配列に分割します(行単位)。</target>
        </trans-unit>
        <trans-unit id="0976bf6e914482518c948616b2a64bfe1f530549" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays.</source>
          <target state="translated">配列を複数のサブ配列に分割します。</target>
        </trans-unit>
        <trans-unit id="ffd00244dfa808ccdb1e357f445723b1de446321" translate="yes" xml:space="preserve">
          <source>Split array along second axis.</source>
          <target state="translated">2 番目の軸に沿って配列を分割します。</target>
        </trans-unit>
        <trans-unit id="19f8340eb834a92f93fbe1b260b02dab12c9b437" translate="yes" xml:space="preserve">
          <source>Split array along third axis.</source>
          <target state="translated">第3軸に沿って配列を分割します。</target>
        </trans-unit>
        <trans-unit id="abb8acff6e092f71fe2d7d85b72048053b4e0289" translate="yes" xml:space="preserve">
          <source>Split array into a list of multiple sub-arrays of equal size.</source>
          <target state="translated">配列を同じサイズの複数のサブ配列のリストに分割します。</target>
        </trans-unit>
        <trans-unit id="eeb46fbf791ef3d6b7513aae13670bfd1d286c5f" translate="yes" xml:space="preserve">
          <source>Split array into a list of multiple sub-arrays vertically.</source>
          <target state="translated">配列を複数のサブ配列のリストに縦に分割します。</target>
        </trans-unit>
        <trans-unit id="08031d3c1e963e5e593f6077f8007bde4094d65a" translate="yes" xml:space="preserve">
          <source>Split array into multiple sub-arrays along the 3rd axis (depth).</source>
          <target state="translated">配列を第3軸(深さ)に沿って複数のサブ配列に分割します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
