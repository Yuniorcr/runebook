<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="3e3af0fcef04d64e093680f90bd154da4da6f7e6" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized beta distribution.</source>
          <target state="translated">パラメータ化されたベータ分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="66aa1280d92bc58e93f2dd0657680e02202ddedc" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized binomial distribution, where each sample is equal to the number of successes over the n trials.</source>
          <target state="translated">パラメータ化された二項分布からサンプルを描画し、各サンプルはn回の試行での成功数に等しい。</target>
        </trans-unit>
        <trans-unit id="803cd0d20a6c49e0eab984068f59353e0ec6f797" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized chi-square distribution.</source>
          <target state="translated">パラメータ化されたカイ二乗分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="0a07d0ff0927ba822ed7f54576b179ec4780bfd4" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized exponential distribution.</source>
          <target state="translated">パラメータ化された指数分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="a2f28dab17c9ec69c1e4c0816e2b49d0d97cc8c9" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized gamma distribution.</source>
          <target state="translated">パラメータ化されたガンマ分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="645b194e18330c38a086d019ef409b1ad04a10ac" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized geometric distribution.</source>
          <target state="translated">パラメータ化された幾何学的分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="675c1d8f69c01109a94a55f050b7feba6cfeb004" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized hypergeometric distribution. Each sample is the number of good items within a randomly selected subset of size &lt;code&gt;nsample&lt;/code&gt; taken from a set of &lt;code&gt;ngood&lt;/code&gt; good items and &lt;code&gt;nbad&lt;/code&gt; bad items.</source>
          <target state="translated">パラメータ化された超幾何分布からサンプルを描画します。各サンプルは、 &lt;code&gt;ngood&lt;/code&gt; の良いアイテムと &lt;code&gt;nbad&lt;/code&gt; の悪いアイテムのセットから取られた、サイズ &lt;code&gt;nsample&lt;/code&gt; のランダムに選択されたサブセット内の良いアイテムの数です。</target>
        </trans-unit>
        <trans-unit id="0ec5fd25c15e2f401571dd2213b5e63981af1884" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized log-normal distribution.</source>
          <target state="translated">パラメータ化された対数正規分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="92c1e4b50e7e0ed6389caf6bd275c9d96e903819" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized logarithmic series distribution.</source>
          <target state="translated">パラメータ化された対数級数分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="0418a31cc205f33ce6262d40794bf3e47add1b19" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized logistic distribution.</source>
          <target state="translated">パラメータ化されたロジスティック分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="16ad062ab33ce9488dba4d726621ff0742f56c11" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized negative binomial distribution, where each sample is equal to N, the number of failures that occurred before a total of n successes was reached.</source>
          <target state="translated">パラメータ化された負の二項分布から引き出されたサンプルは、各サンプルがNに等しく、合計N個の成功に達する前に発生した失敗の数です。</target>
        </trans-unit>
        <trans-unit id="afe023dcddff604c4223693c51bcae1660f6eba8" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized noncentral Fisher distribution.</source>
          <target state="translated">パラメータ化された非心フィッシャー分布からのサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="0dad06577da3cf941b7346f737f68fc3b67c036b" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized noncentral chi-square distribution.</source>
          <target state="translated">パラメータ化された非心カイ二乗分布からのサンプルの描画。</target>
        </trans-unit>
        <trans-unit id="1b7aa6be999ea249ca4e25e9eb3c5a161f178b65" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized normal distribution.</source>
          <target state="translated">パラメータ化された正規分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="75a239b9fd8457ca43a81ea8883cb90f669b784d" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized power distribution.</source>
          <target state="translated">パラメータ化された電力分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="417f5f8f2a7e8f51ee4be6e5ef1c8c34cc318b2f" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized standard Student&amp;rsquo;s t distribution.</source>
          <target state="translated">パラメーター化された標準のスチューデントのt分布から抽出されたサンプル。</target>
        </trans-unit>
        <trans-unit id="9cfa7b49541ac131db1708e85662c20f82750d1b" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized standard gamma distribution.</source>
          <target state="translated">パラメータ化された標準ガンマ分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="24c6b8b6588f6544b47569ada0a5521ca47031b8" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized triangular distribution.</source>
          <target state="translated">パラメータ化された三角分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="59ea0a59c91c46f3d89e817e79cad726c3dc2dab" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized uniform distribution.</source>
          <target state="translated">パラメータ化された一様分布からサンプルを描画します。</target>
        </trans-unit>
        <trans-unit id="f20dd8e0ca9375ee4c56dd90351efacbd5b573d8" translate="yes" xml:space="preserve">
          <source>Drawn samples from the parameterized von Mises distribution.</source>
          <target state="translated">パラメータ化されたフォン・ミーゼス分布からのサンプルの描画。</target>
        </trans-unit>
        <trans-unit id="cb8b86177c95587cf24b6f015131fe691b9fc3ba" translate="yes" xml:space="preserve">
          <source>Drawn samples.</source>
          <target state="translated">描かれたサンプル。</target>
        </trans-unit>
        <trans-unit id="1d18cceebff607d37e9bf2c1387fbd956866a568" translate="yes" xml:space="preserve">
          <source>Draws samples in [0, 1] from a power distribution with positive exponent a - 1.</source>
          <target state="translated">0,1]のサンプルを,正の指数a-1の累乗分布から抽出します.</target>
        </trans-unit>
        <trans-unit id="3494c64843d7663d424ff8535f672114cde4d98a" translate="yes" xml:space="preserve">
          <source>Dropped Support</source>
          <target state="translated">ドロップされたサポート</target>
        </trans-unit>
        <trans-unit id="7d056b5f5f0adde2e16d37463c52db860d944e35" translate="yes" xml:space="preserve">
          <source>Dtype for the structured array.</source>
          <target state="translated">構造化配列のDtype。</target>
        </trans-unit>
        <trans-unit id="74a25c41a58aa29ed3adc5f8de64d6df2cab73e9" translate="yes" xml:space="preserve">
          <source>Dtype parameter added to &lt;code&gt;np.linspace&lt;/code&gt; and &lt;code&gt;np.logspace&lt;/code&gt;</source>
          <target state="translated">追加DTYPEパラメータ &lt;code&gt;np.linspace&lt;/code&gt; と &lt;code&gt;np.logspace&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90ed446a6c6e03872b9c3414013b747e673d0a8f" translate="yes" xml:space="preserve">
          <source>Dtypes for structured arrays can be specified in several forms, but all forms specify at least the data type and field name. For details see &lt;a href=&quot;../../user/basics.rec#module-numpy.doc.structured_arrays&quot;&gt;&lt;code&gt;doc.structured_arrays&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">構造化配列のD型はいくつかの形式で指定できますが、すべての形式で少なくともデータ型とフィールド名が指定されます。詳細については、&lt;a href=&quot;../../user/basics.rec#module-numpy.doc.structured_arrays&quot;&gt; &lt;code&gt;doc.structured_arrays&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6c6259462846b5f9baee7053eaac196aa6133053" translate="yes" xml:space="preserve">
          <source>Dtypes for structured arrays can be specified in several forms, but all forms specify at least the data type and field name. For details see &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/user/basics.rec.html#module-numpy.doc.structured_arrays&quot;&gt;&lt;code&gt;doc.structured_arrays&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">構造化配列のDtypeはいくつかの形式で指定できますが、すべての形式で少なくともデータ型とフィールド名を指定します。詳細については、&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/user/basics.rec.html#module-numpy.doc.structured_arrays&quot;&gt; &lt;code&gt;doc.structured_arrays&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ffaaa2445408170b57b919ca6485e258a7c95d8b" translate="yes" xml:space="preserve">
          <source>Duda, R. O., Hart, P. E., and Stork, D. G., &amp;ldquo;Pattern Classification,&amp;rdquo; 2nd ed., New York: Wiley, 2001.</source>
          <target state="translated">Duda、RO、Hart、PE、およびStork、DG、「Pattern Classification」、第2版、ニューヨーク：Wiley、2001年。</target>
        </trans-unit>
        <trans-unit id="6baaefd65351906a350ba168fbf221f0d184adfa" translate="yes" xml:space="preserve">
          <source>Due to floating point rounding the resulting array may not be Hermitian, the diagonal elements may not be 1, and the elements may not satisfy the inequality abs(a) &amp;lt;= 1. The real and imaginary parts are clipped to the interval [-1, 1] in an attempt to improve on that situation but is not much help in the complex case.</source>
          <target state="translated">浮動小数点の丸めが原因で、結果の配列がエルミートにならない場合があり、対角要素が1にならない場合があり、要素は不等式abs（a）&amp;lt;= 1を満たさない場合があります。実数部と虚数部は区間[-1にクリップされます、1]その状況を改善するための試みですが、複雑なケースではあまり役に立ちません。</target>
        </trans-unit>
        <trans-unit id="d5668939217d0a50f3a990081bee30e034ec210d" translate="yes" xml:space="preserve">
          <source>Due to limitations in the interpretation of structured dtypes, dtypes with fields with empty names will have the names replaced by &amp;lsquo;f0&amp;rsquo;, &amp;lsquo;f1&amp;rsquo;, etc. Such arrays will not round-trip through the format entirely accurately. The data is intact; only the field names will differ. We are working on a fix for this. This fix will not require a change in the file format. The arrays with such structures can still be saved and restored, and the correct dtype may be restored by using the &lt;code&gt;loadedarray.view(correct_dtype)&lt;/code&gt; method.</source>
          <target state="translated">構造化dtypeの解釈の制限により、名前が空のフィールドを持つdtypeは、名前が「f0」、「f1」などに置き換えられます。このような配列は、フォーマットを完全に正確に往復しません。データはそのままです。フィールド名のみが異なります。この問題の修正に取り組んでいます。この修正では、ファイル形式を変更する必要はありません。このような構造を持つ配列は引き続き保存および復元でき、 &lt;code&gt;loadedarray.view(correct_dtype)&lt;/code&gt; メソッドを使用して正しいdtypeを復元できます。</target>
        </trans-unit>
        <trans-unit id="be47cf08679632a886113408bbed677d155a3d74" translate="yes" xml:space="preserve">
          <source>Dump a pickle of the array to the specified file.</source>
          <target state="translated">配列のピクルスを指定したファイルにダンプします。</target>
        </trans-unit>
        <trans-unit id="c5317185019827371b1e31a396e0d441834d3252" translate="yes" xml:space="preserve">
          <source>Dump a pickle of the array to the specified file. The array can be read back with pickle.load or numpy.load.</source>
          <target state="translated">配列のpickleを指定したファイルにダンプします。配列は pickle.load または numpy.load で読み返すことができます。</target>
        </trans-unit>
        <trans-unit id="7a2c1b02316fce9ee22b42f7f9087251340c710e" translate="yes" xml:space="preserve">
          <source>During iteration, you may want to use the index of the current element in a computation. For example, you may want to visit the elements of an array in memory order, but use a C-order, Fortran-order, or multidimensional index to look up values in a different array.</source>
          <target state="translated">イテレーションの間、計算で現在の要素のインデックスを使用したい場合があります。例えば,メモリ順に配列の要素を参照したいが,C順,Fortran順,または多次元インデックスを使用して別の配列の値を参照したい場合があります.</target>
        </trans-unit>
        <trans-unit id="3bf08c964c7c95130d665e4d98704726bfb41a50" translate="yes" xml:space="preserve">
          <source>During the beta/RC phase, an explicit request for testing the binaries with several other libraries (SciPy/Matplotlib/Pygame) should be posted on the mailing list.</source>
          <target state="translated">ベータ/RCの段階では,他のライブラリ(SciPy/Matplotlib/Pygame)を使ってバイナリをテストしたいという明確な要望をメーリングリストに投稿してください.</target>
        </trans-unit>
        <trans-unit id="b260078602d9938ed8897f4dbe8eacdc7db28c29" translate="yes" xml:space="preserve">
          <source>During the everyday project activities, council members participate in all discussions, code review and other project activities as peers with all other Contributors and the Community. In these everyday activities, Council Members do not have any special power or privilege through their membership on the Council. However, it is expected that because of the quality and quantity of their contributions and their expert knowledge of the Project Software and Services that Council Members will provide useful guidance, both technical and in terms of project direction, to potentially less experienced contributors.</source>
          <target state="translated">日常的なプロジェクト活動の中で、カウンシルメンバーは、他のすべてのコントリビューターやコミュニティとのピアとして、すべての議論やコードレビューなどのプロジェクト活動に参加します。これらの日常的な活動において、カウンシルメンバーはカウンシルのメンバーであることを通じ、特別な権限や特権を持つことはありません。しかし、その貢献の質と量、プロジェクトソフトウェアとサービスに関する専門的な知識により、 評議会メンバーは、経験の浅い貢献者に対して、技術的にもプロジェクトの方向性の観点からも、 有益なガイダンスを提供することが期待されています。</target>
        </trans-unit>
        <trans-unit id="3a97e818f2855e4e5e1bc73604c63d51f0dc4bf1" translate="yes" xml:space="preserve">
          <source>Durran D. R. (1999) Numerical Methods for Wave Equations in Geophysical Fluid Dynamics. New York: Springer.</source>
          <target state="translated">Durran D.R.(1999)Numerical Methods for Wave Equations in Geophysical Fluid Dynamics.ニューヨーク。シュプリンガー.</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="26aa5b06114619ee705d4e196e09408f75d82651" translate="yes" xml:space="preserve">
          <source>E.R. Kanasewich, &amp;ldquo;Time Sequence Analysis in Geophysics&amp;rdquo;, The University of Alberta Press, 1975, pp. 106-108.</source>
          <target state="translated">ERカナウィッチ、「地球物理学における時系列分析」、アルバータ大学出版局、1975年、106〜108ページ。</target>
        </trans-unit>
        <trans-unit id="7020945b62676f3792048d52264e61eaf1f2f06e" translate="yes" xml:space="preserve">
          <source>E.R. Kanasewich, &amp;ldquo;Time Sequence Analysis in Geophysics&amp;rdquo;, The University of Alberta Press, 1975, pp. 109-110.</source>
          <target state="translated">ERカナウィッチ、「地球物理学における時系列分析」、アルバータ大学出版局、1975年、109-110ページ。</target>
        </trans-unit>
        <trans-unit id="3bd1ccd7ec68cbb9d222ef47028613ad14f66cf8" translate="yes" xml:space="preserve">
          <source>E.R. Kanasewich, &amp;ldquo;Time Sequence Analysis in Geophysics&amp;rdquo;, The University of Alberta Press, 1975, pp. 177-178.</source>
          <target state="translated">ERカナウィッチ、「地球物理学における時系列分析」、アルバータ大学出版局、1975年、pp。177-178。</target>
        </trans-unit>
        <trans-unit id="9282259a9bffd46a322a6acfc9997c91e019e7d4" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;constants#numpy.newaxis&quot;&gt;&lt;code&gt;newaxis&lt;/code&gt;&lt;/a&gt; object in the selection tuple serves to expand the dimensions of the resulting selection by one unit-length dimension. The added dimension is the position of the &lt;a href=&quot;constants#numpy.newaxis&quot;&gt;&lt;code&gt;newaxis&lt;/code&gt;&lt;/a&gt; object in the selection tuple.</source>
          <target state="translated">選択タプルの各&lt;a href=&quot;constants#numpy.newaxis&quot;&gt; &lt;code&gt;newaxis&lt;/code&gt; &lt;/a&gt;オブジェクトは、結果として得られる選択の次元を1つの単位長の次元だけ拡張する働きをします。追加された次元は、選択タプル内の&lt;a href=&quot;constants#numpy.newaxis&quot;&gt; &lt;code&gt;newaxis&lt;/code&gt; &lt;/a&gt;オブジェクトの位置です。</target>
        </trans-unit>
        <trans-unit id="073efad576bf9e16c2944aef4f81bdac4eda711d" translate="yes" xml:space="preserve">
          <source>Each NumPy module exposes &lt;a href=&quot;#numpy.testing.Tester.bench&quot;&gt;&lt;code&gt;bench&lt;/code&gt;&lt;/a&gt; in its namespace to run all benchmarks for it.</source>
          <target state="translated">各NumPyモジュールは、その名前空間で&lt;a href=&quot;#numpy.testing.Tester.bench&quot;&gt; &lt;code&gt;bench&lt;/code&gt; &lt;/a&gt;を公開して、そのすべてのベンチマークを実行します。</target>
        </trans-unit>
        <trans-unit id="f2eda913d3072244fb087de35642a2b1eb54ff25" translate="yes" xml:space="preserve">
          <source>Each NumPy module exposes &lt;a href=&quot;#numpy.testing.Tester.test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; in its namespace to run all tests for it. For example, to run all tests for numpy.lib:</source>
          <target state="translated">各NumPyモジュールは、その名前空間で&lt;a href=&quot;#numpy.testing.Tester.test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;を公開して、すべてのテストを実行します。たとえば、numpy.libのすべてのテストを実行するには：</target>
        </trans-unit>
        <trans-unit id="f76bc743577aee15d005972242975d93c3b7f843" translate="yes" xml:space="preserve">
          <source>Each array in the tuple has the same shape as the &lt;code&gt;indices&lt;/code&gt; array.</source>
          <target state="translated">タプルの各配列は、 &lt;code&gt;indices&lt;/code&gt; 配列と同じ形状です。</target>
        </trans-unit>
        <trans-unit id="386efca9f91ba00773f6c9bc7ed1232d730522e6" translate="yes" xml:space="preserve">
          <source>Each array must have the same shape.</source>
          <target state="translated">各配列は同じ形をしていなければなりません。</target>
        </trans-unit>
        <trans-unit id="286a71006dd39afde343b3c45a4fd98ff7cec30e" translate="yes" xml:space="preserve">
          <source>Each boolean array corresponds to a function in &lt;code&gt;funclist&lt;/code&gt;. Wherever &lt;code&gt;condlist[i]&lt;/code&gt; is True, &lt;code&gt;funclist[i](x)&lt;/code&gt; is used as the output value.</source>
          <target state="translated">各ブール配列は &lt;code&gt;funclist&lt;/code&gt; の関数に対応しています。どこ &lt;code&gt;condlist[i]&lt;/code&gt; Trueで、 &lt;code&gt;funclist[i](x)&lt;/code&gt; 出力値として使用されます。</target>
        </trans-unit>
        <trans-unit id="eef78733a1d1f7432ec1ab2af99217db7ce78c93" translate="yes" xml:space="preserve">
          <source>Each boolean array in &lt;code&gt;condlist&lt;/code&gt; selects a piece of &lt;code&gt;x&lt;/code&gt;, and should therefore be of the same shape as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;condlist&lt;/code&gt; の各ブール配列は、 &lt;code&gt;x&lt;/code&gt; の一部を選択するため、 &lt;code&gt;x&lt;/code&gt; と同じ形状でなければなりません。</target>
        </trans-unit>
        <trans-unit id="8fe6ffb6ecffd6c39387e8f0ab0c3a109b7064bf" translate="yes" xml:space="preserve">
          <source>Each built-in data-type has a character code (the updated Numeric typecodes), that uniquely identifies it.</source>
          <target state="translated">各組み込みデータ型は、それを一意に識別する文字コード(更新された数値型コード)を持っています。</target>
        </trans-unit>
        <trans-unit id="a69a75e46ca3ac2d199e74b13f3b32f8dd1d6b80" translate="yes" xml:space="preserve">
          <source>Each differentiation is multiplied by &lt;code&gt;scl&lt;/code&gt;. The end result is multiplication by &lt;code&gt;scl**m&lt;/code&gt;. This is for use in a linear change of variable. (Default: 1)</source>
          <target state="translated">各微分は &lt;code&gt;scl&lt;/code&gt; で乗算されます。最終結果は &lt;code&gt;scl**m&lt;/code&gt; による乗算です。これは、変数の線形変化で使用するためのものです。（デフォルト：1）</target>
        </trans-unit>
        <trans-unit id="80d6286823e7a8996b335e27ee039bd71682bf33" translate="yes" xml:space="preserve">
          <source>Each dimension in the signature is matched to a dimension of the corresponding passed-in array, starting from the end of the shape tuple.</source>
          <target state="translated">シグネチャの各次元は、形状タプルの末尾から順に、対応する入力配列の次元にマッチします。</target>
        </trans-unit>
        <trans-unit id="e3a7c87b9ea1dd98d592dea35e0511973a19c5ea" translate="yes" xml:space="preserve">
          <source>Each dimension in the signature is matched to a dimension of the corresponding passed-in array, starting from the end of the shape tuple. These are the core dimensions, and they must be present in the arrays, or an error will be raised.</source>
          <target state="translated">シグネチャの各次元は、形状タプルの末尾から始まる対応する配列の次元にマッチします。これらはコアディメンジョンであり、配列に存在していなければエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="f8fa7f34f98b652b735f9d41844bf81c524a5373" translate="yes" xml:space="preserve">
          <source>Each element of &lt;code&gt;a&lt;/code&gt; represents a bit-field that should be unpacked into a binary-valued output array. The shape of the output array is either 1-D (if &lt;code&gt;axis&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;) or the same shape as the input array with unpacking done along the axis specified.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; の各要素は、バイナリ値の出力配列にアンパックされるビットフィールドを表します。出力配列の形状は、1-D（ &lt;code&gt;axis&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; の場合）または指定された軸に沿ってアンパックされた入力配列と同じ形状です。</target>
        </trans-unit>
        <trans-unit id="50237f597aa5c58319566769ed4e784a20d0c8c4" translate="yes" xml:space="preserve">
          <source>Each element of the sum of the &amp;lsquo;ipmt&amp;rsquo; and &amp;lsquo;ppmt&amp;rsquo; arrays should equal &amp;lsquo;pmt&amp;rsquo;.</source>
          <target state="translated">「ipmt」配列と「ppmt」配列の合計の各要素は、「pmt」に等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="20a2380f652b4d55cd4c96370ca8c7d2de50620c" translate="yes" xml:space="preserve">
          <source>Each entry in the mymethods array is a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyMethodDef&quot;&gt;&lt;code&gt;PyMethodDef&lt;/code&gt;&lt;/a&gt; structure containing 1) the Python name, 2) the C-function that implements the function, 3) flags indicating whether or not keywords are accepted for this function, and 4) The docstring for the function. Any number of functions may be defined for a single module by adding more entries to this table. The last entry must be all NULL as shown to act as a sentinel. Python looks for this entry to know that all of the functions for the module have been defined.</source>
          <target state="translated">mymethods配列の各エントリは、1）Python名、2）関数を実装するC関数、3）この関数でキーワードが受け入れられるかどうかを示すフラグ、4）関数のdocstringを含む&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyMethodDef&quot;&gt; &lt;code&gt;PyMethodDef&lt;/code&gt; &lt;/a&gt;構造体です。 。このテーブルにエントリを追加することにより、1つのモジュールに対して任意の数の関数を定義できます。番兵として機能するために示されているように、最後のエントリはすべてNULLである必要があります。Pythonはこのエントリを検索して、モジュールのすべての関数が定義されていることを認識します。</target>
        </trans-unit>
        <trans-unit id="0f33bf09c046e31c2241219b2051cb5ec2d5021c" translate="yes" xml:space="preserve">
          <source>Each entry will be the default for the corresponding column</source>
          <target state="translated">各エントリは、対応する列のデフォルトとなります。</target>
        </trans-unit>
        <trans-unit id="6596e910451a16280ea499b967185410396fa721" translate="yes" xml:space="preserve">
          <source>Each function is evaluated over &lt;code&gt;x&lt;/code&gt; wherever its corresponding condition is True. It should take a 1d array as input and give an 1d array or a scalar value as output. If, instead of a callable, a scalar is provided then a constant function (&lt;code&gt;lambda x: scalar&lt;/code&gt;) is assumed.</source>
          <target state="translated">各関数は、対応する条件がTrueである場合に &lt;code&gt;x&lt;/code&gt; に対して評価されます。入力として1次元配列を取り、出力として1次元配列またはスカラー値を与える必要があります。呼び出し可能ではなくスカラーが提供される場合、定数関数（ &lt;code&gt;lambda x: scalar&lt;/code&gt; ）が想定されます。</target>
        </trans-unit>
        <trans-unit id="8d8deda694e466984ce525e906c00ea4f5dea09d" translate="yes" xml:space="preserve">
          <source>Each generalized ufunc has information associated with it that states what the &amp;ldquo;core&amp;rdquo; dimensionality of the inputs is, as well as the corresponding dimensionality of the outputs (the element-wise ufuncs have zero core dimensions). The list of the core dimensions for all arguments is called the &amp;ldquo;signature&amp;rdquo; of a ufunc. For example, the ufunc numpy.add has signature &lt;code&gt;(),()-&amp;gt;()&lt;/code&gt; defining two scalar inputs and one scalar output.</source>
          <target state="translated">それぞれの一般化されたufuncには、入力の「コア」次元と、それに対応する出力の次元（要素ごとのufuncのコア次元はゼロ）を示す情報が関連付けられています。すべての引数のコアディメンションのリストは、ufuncの「シグネチャ」と呼ばれます。たとえば、ufunc numpy.addには &lt;code&gt;(),()-&amp;gt;()&lt;/code&gt; 2つのスカラー入力と1つのスカラー出力を定義するシグネチャ（）、（）-&amp;gt;（）があります。</target>
        </trans-unit>
        <trans-unit id="93ff2ff5db4665bc2536253e2cbc256cc6ee369b" translate="yes" xml:space="preserve">
          <source>Each item is used as an &amp;ldquo;op_axes&amp;rdquo; argument to an nditer</source>
          <target state="translated">各アイテムはnditerの「op_axes」引数として使用されます</target>
        </trans-unit>
        <trans-unit id="6515db7940afb238e42bf63e06ca75d53b616e9e" translate="yes" xml:space="preserve">
          <source>Each key can be a column index or a column name, and the corresponding value should be a single object. We can use the special key &lt;code&gt;None&lt;/code&gt; to define a default for all columns.</source>
          <target state="translated">各キーは列インデックスまたは列名にすることができ、対応する値は単一のオブジェクトである必要があります。特別なキー &lt;code&gt;None&lt;/code&gt; を使用して、すべての列のデフォルトを定義できます。</target>
        </trans-unit>
        <trans-unit id="83888ab60bad511e4b53bdc1db03bb5f1c808f79" translate="yes" xml:space="preserve">
          <source>Each line past the first &lt;code&gt;skip_header&lt;/code&gt; lines is split at the &lt;code&gt;delimiter&lt;/code&gt; character, and characters following the &lt;code&gt;comments&lt;/code&gt; character are discarded.</source>
          <target state="translated">最初の &lt;code&gt;skip_header&lt;/code&gt; 行を過ぎた各行は &lt;code&gt;delimiter&lt;/code&gt; 文字で分割され、 &lt;code&gt;comments&lt;/code&gt; 文字に続く文字は破棄されます。</target>
        </trans-unit>
        <trans-unit id="af447abfb761a63b2a173a6fe4db497d82a1d986" translate="yes" xml:space="preserve">
          <source>Each module should have a docstring with at least a summary line. Other sections are optional, and should be used in the same order as for documenting functions when they are appropriate:</source>
          <target state="translated">各モジュールは、少なくとも要約行を持つdocstringを持つべきです。他のセクションはオプションで、適切な場合は関数のドキュメント化と同じ順序で使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="13efd9029e94adb763eb953172be3877d35b0214" translate="yes" xml:space="preserve">
          <source>Each of the arithmetic operations (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;divmod()&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt; or &lt;code&gt;pow()&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;) and the comparisons (&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;) is equivalent to the corresponding universal function (or &lt;a href=&quot;../glossary#term-ufunc&quot;&gt;ufunc&lt;/a&gt; for short) in NumPy. For more information, see the section on &lt;a href=&quot;ufuncs#ufuncs&quot;&gt;Universal Functions&lt;/a&gt;.</source>
          <target state="translated">各算術演算（ &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;//&lt;/code&gt; 、 &lt;code&gt;%&lt;/code&gt; 、 &lt;code&gt;divmod()&lt;/code&gt; 、 &lt;code&gt;**&lt;/code&gt; または &lt;code&gt;pow()&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;amp;&lt;/code&gt; 、 &lt;code&gt;^&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;~&lt;/code&gt; ）および比較（ &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;!=&lt;/code&gt; ）は、NumPyの対応するユニバーサル関数（または&lt;a href=&quot;../glossary#term-ufunc&quot;&gt;略してufunc&lt;/a&gt;）と同等です。詳細については、のセクションを参照してください。&lt;a href=&quot;ufuncs#ufuncs&quot;&gt;ユニバーサル関数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3956c5acda082528edb0dd788f86e08b90ce29c7" translate="yes" xml:space="preserve">
          <source>Each of the arithmetic operations (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;divmod()&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt; or &lt;code&gt;pow()&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;) and the comparisons (&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;) is equivalent to the corresponding universal function (or &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-ufunc&quot;&gt;ufunc&lt;/a&gt; for short) in NumPy. For more information, see the section on &lt;a href=&quot;ufuncs#ufuncs&quot;&gt;Universal Functions&lt;/a&gt;.</source>
          <target state="translated">各算術演算（ &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;//&lt;/code&gt; 、 &lt;code&gt;%&lt;/code&gt; 、 &lt;code&gt;divmod()&lt;/code&gt; 、 &lt;code&gt;**&lt;/code&gt; または &lt;code&gt;pow()&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;amp;&lt;/code&gt; 、 &lt;code&gt;^&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;~&lt;/code&gt; ）および比較（ &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;!=&lt;/code&gt; ）は、NumPy の対応するユニバーサル関数（&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-ufunc&quot;&gt;略してufunc&lt;/a&gt;）と同等です。詳細については、次のセクションを参照してください。&lt;a href=&quot;ufuncs#ufuncs&quot;&gt;ユニバーサル機能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce900752c03b63d004b95034fc7fe45e45781bb2" translate="yes" xml:space="preserve">
          <source>Each of these 12 classes is collected into a &lt;code&gt;unittest.TestSuite&lt;/code&gt;, which is then executed. Errors and failures are summed together and returned as the exit argument. Any non-zero result indicates that at least one test did not pass.</source>
          <target state="translated">これらの12個のクラスはそれぞれ &lt;code&gt;unittest.TestSuite&lt;/code&gt; に収集され、実行されます。エラーと失敗は合計され、終了引数として返されます。ゼロ以外の結果は、少なくとも1つのテストに合格しなかったことを示します。</target>
        </trans-unit>
        <trans-unit id="534d5807de7d2badcef1e7e804770614e9153a49" translate="yes" xml:space="preserve">
          <source>Each of these sub-topics is covered in the following sub-sections.</source>
          <target state="translated">それぞれのサブテーマについては、以下のサブテーマでカバーしています。</target>
        </trans-unit>
        <trans-unit id="f67c4cfb6e2d44f4338462a5c73308f6ff60ab98" translate="yes" xml:space="preserve">
          <source>Each row in the text file must have the same number of values.</source>
          <target state="translated">テキストファイルの各行は、同じ数の値を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="8b09b89b09738ea85b440f6b9b0782f598ebe968" translate="yes" xml:space="preserve">
          <source>Each sequence should be of integer or boolean type. Boolean sequences will be interpreted as boolean masks for the corresponding dimension (equivalent to passing in &lt;code&gt;np.nonzero(boolean_sequence)&lt;/code&gt;).</source>
          <target state="translated">各シーケンスは整数型またはブール型である必要があります。ブールシーケンスは、対応する次元のブールマスクとして解釈され &lt;code&gt;np.nonzero(boolean_sequence)&lt;/code&gt; 渡すことと同等）。</target>
        </trans-unit>
        <trans-unit id="b117b16ba13396092e447a51f24074ff2e6bd854" translate="yes" xml:space="preserve">
          <source>Each test defined by the &lt;code&gt;VectorTestCase&lt;/code&gt; class extracts the python function it is trying to test by accessing the &lt;code&gt;Vector&lt;/code&gt; module&amp;rsquo;s dictionary:</source>
          <target state="translated">&lt;code&gt;VectorTestCase&lt;/code&gt; クラスで定義された各テストは、 &lt;code&gt;Vector&lt;/code&gt; モジュールの辞書にアクセスして、テストしようとしているpython関数を抽出します。</target>
        </trans-unit>
        <trans-unit id="6083c3d38cbd0a21c59fda4f10850fe83ec68a22" translate="yes" xml:space="preserve">
          <source>Each tuple has the form &lt;code&gt;(fieldname, datatype, shape)&lt;/code&gt; where shape is optional. &lt;code&gt;fieldname&lt;/code&gt; is a string (or tuple if titles are used, see &lt;a href=&quot;#titles&quot;&gt;Field Titles&lt;/a&gt; below), &lt;code&gt;datatype&lt;/code&gt; may be any object convertible to a datatype, and &lt;code&gt;shape&lt;/code&gt; is a tuple of integers specifying subarray shape.</source>
          <target state="translated">各タプルにはフォーム &lt;code&gt;(fieldname, datatype, shape)&lt;/code&gt; があり、形状はオプションです。 &lt;code&gt;fieldname&lt;/code&gt; は文字列（またはタイトルが使用されている場合はタプル。以下の&lt;a href=&quot;#titles&quot;&gt;フィールドタイトルを&lt;/a&gt;参照）、 &lt;code&gt;datatype&lt;/code&gt; はデータ型に変換可能な任意のオブジェクト、 &lt;code&gt;shape&lt;/code&gt; はサブ配列の形状を指定する整数のタプルです。</target>
        </trans-unit>
        <trans-unit id="a7730362892427e71964e48c12006a9cf86055b3" translate="yes" xml:space="preserve">
          <source>Each ufunc consists of an elementary function that performs the most basic operation on the smallest portion of array arguments (e.g. adding two numbers is the most basic operation in adding two arrays). The ufunc applies the elementary function multiple times on different parts of the arrays. The input/output of elementary functions can be vectors; e.g., the elementary function of inner1d takes two vectors as input.</source>
          <target state="translated">各 ufunc は、配列の引数の最も小さい部分に対して最も基本的な操作を行う素関数で構成されています (例えば、2つの配列を足す際には、2つの数字を足すことが最も基本的な操作となります)。ufuncは、配列の異なる部分に対して複数回の素関数を適用します。初等関数の入出力はベクトルにすることができます;例えば,inner1dの初等関数は2つのベクトルを入力とします.</target>
        </trans-unit>
        <trans-unit id="cb1cf57d2ff93f75da1bd8ea2b2acd61c3fea8cd" translate="yes" xml:space="preserve">
          <source>Each universal function takes array inputs and produces array outputs by performing the core function element-wise on the inputs (where an element is generally a scalar, but can be a vector or higher-order sub-array for generalized ufuncs). Standard broadcasting rules are applied so that inputs not sharing exactly the same shapes can still be usefully operated on. Broadcasting can be understood by four rules:</source>
          <target state="translated">各万能関数は,配列入力を受け取り,入力に対して要素ごとにコア関数を実行することで配列出力を生成します(ここで,要素は一般的にスカラですが,一般化された ufuncs の場合はベクトルや高次の部分配列にすることもできます).標準的なブロードキャストルールが適用されるため、全く同じ形状を共有していない入力でも操作が可能です。ブロードキャスティングは4つのルールで理解できます。</target>
        </trans-unit>
        <trans-unit id="778a8f870adb20070c9bbd4345579e90072a320d" translate="yes" xml:space="preserve">
          <source>Easier setup and teardown functions / methods</source>
          <target state="translated">より簡単なセットアップとティアダウン機能・メソッド</target>
        </trans-unit>
        <trans-unit id="2797646a63f7af5bb42f88a4088468f8dc30c1ee" translate="yes" xml:space="preserve">
          <source>Edit pavement.py and setup.py as detailed in HOWTO_RELEASE:</source>
          <target state="translated">HOWTO_RELEASEにあるようにpavement.pyとsetup.pyを編集します。</target>
        </trans-unit>
        <trans-unit id="2810e44da03a82e21b0a6385cc2c1eef5fd13ec6" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;azure/posix.yml&lt;/code&gt; and &lt;code&gt;azure/windows.yml&lt;/code&gt; files to make sure they have the correct version, and put in the commit hash for the &lt;code&gt;REL&lt;/code&gt; commit created above for &lt;code&gt;BUILD_COMMIT&lt;/code&gt;, see an _example:</source>
          <target state="translated">&lt;code&gt;azure/posix.yml&lt;/code&gt; ファイルと &lt;code&gt;azure/windows.yml&lt;/code&gt; ファイルを編集して、バージョンが正しいことを確認し、上記で作成した &lt;code&gt;BUILD_COMMIT&lt;/code&gt; の &lt;code&gt;REL&lt;/code&gt; コミットのコミットハッシュを入力します。_exampleを参照してください。</target>
        </trans-unit>
        <trans-unit id="c7e9fb2ea6c3b8c3ce97645eb902c348d859f36d" translate="yes" xml:space="preserve">
          <source>Editor</source>
          <target state="translated">Editor</target>
        </trans-unit>
        <trans-unit id="93d5c22f934ab8df1b20f8c3472b63bf839853fa" translate="yes" xml:space="preserve">
          <source>Effect of the &lt;a href=&quot;numpy.ma.copy#numpy.ma.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="translated">&lt;a href=&quot;numpy.ma.copy#numpy.ma.copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;引数の効果。</target>
        </trans-unit>
        <trans-unit id="b16a3ec6ab9f466c4d89051f80bac7ab3d7a2dde" translate="yes" xml:space="preserve">
          <source>Effect of the &lt;code&gt;shrink&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;shrink&lt;/code&gt; パラメータの効果。</target>
        </trans-unit>
        <trans-unit id="15b4ace616414347d2dd3d2801314c174bc7ba08" translate="yes" xml:space="preserve">
          <source>Effectively, this implements:</source>
          <target state="translated">効果的には、これが実装されています。</target>
        </trans-unit>
        <trans-unit id="76eeaec1ccfef9304ec0a31b036423f1378c5288" translate="yes" xml:space="preserve">
          <source>Efficient</source>
          <target state="translated">Efficient</target>
        </trans-unit>
        <trans-unit id="2b4d17c36c1ff28a27a4b2931f3e20dd1dbef5a2" translate="yes" xml:space="preserve">
          <source>Efficient multi-dimensional iterator object to iterate over arrays.</source>
          <target state="translated">配列を反復処理するための効率的な多次元イテレータオブジェクト。</target>
        </trans-unit>
        <trans-unit id="7e03cfade90e6c295c76156a8e2c563a63efa318" translate="yes" xml:space="preserve">
          <source>Efficient multi-dimensional iterator object to iterate over arrays. To get started using this object, see the &lt;a href=&quot;../arrays.nditer#arrays-nditer&quot;&gt;introductory guide to array iteration&lt;/a&gt;.</source>
          <target state="translated">配列を反復処理する効率的な多次元反復子オブジェクト。このオブジェクトの使用を開始するには、&lt;a href=&quot;../arrays.nditer#arrays-nditer&quot;&gt;配列反復の入門ガイドを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="036e376170c1d3906a5f0a04018619e235105dc6" translate="yes" xml:space="preserve">
          <source>Effort to spend on solving the overlap problem (maximum number of candidate solutions to consider). The following special values are recognized:</source>
          <target state="translated">重複問題の解決に費やす労力(検討すべき候補解の最大数)。以下のような特別な値が認められる。</target>
        </trans-unit>
        <trans-unit id="ab3820529f3b083c6a31ff8350ee28b11115b842" translate="yes" xml:space="preserve">
          <source>Effort to spend on solving the overlap problem. See &lt;a href=&quot;numpy.shares_memory#numpy.shares_memory&quot;&gt;&lt;code&gt;shares_memory&lt;/code&gt;&lt;/a&gt; for details. Default for &lt;code&gt;may_share_memory&lt;/code&gt; is to do a bounds check.</source>
          <target state="translated">重複問題の解決に費やす努力。詳細については、&lt;a href=&quot;numpy.shares_memory#numpy.shares_memory&quot;&gt; &lt;code&gt;shares_memory&lt;/code&gt; &lt;/a&gt;を参照してください。 &lt;code&gt;may_share_memory&lt;/code&gt; のデフォルトは、境界チェックを行うことです。</target>
        </trans-unit>
        <trans-unit id="444baf679021343f134e3ab4afdb77852c13f5b7" translate="yes" xml:space="preserve">
          <source>Einstein summation convention.</source>
          <target state="translated">アインシュタインの和算規約。</target>
        </trans-unit>
        <trans-unit id="9e7269d88813a122dd6b4c8836b591f55f6ef940" translate="yes" xml:space="preserve">
          <source>Einsum</source>
          <target state="translated">Einsum</target>
        </trans-unit>
        <trans-unit id="b7f8aa394c8c17e22a13e4ec50ff49bf4fdd395d" translate="yes" xml:space="preserve">
          <source>Einsum optimization path updates and efficiency improvements</source>
          <target state="translated">アインサム最適化パスの更新と効率化</target>
        </trans-unit>
        <trans-unit id="5f574da7dabc16cec8dc28f2e16dcdf93d39e214" translate="yes" xml:space="preserve">
          <source>Either &amp;lsquo;inv&amp;rsquo; or &amp;lsquo;zig&amp;rsquo;. &amp;lsquo;inv&amp;rsquo; uses the default inverse CDF method. &amp;lsquo;zig&amp;rsquo; uses the much faster Ziggurat method of Marsaglia and Tsang.</source>
          <target state="translated">「inv」または「zig」のいずれか。'inv'は、既定の逆CDFメソッドを使用します。'zig'は、MarsagliaとTsangのより高速なZigguratメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="41ec8a6c5a0f22c1b241625049fb5165828e9c89" translate="yes" xml:space="preserve">
          <source>Either &lt;a href=&quot;ufunc#c.PyUFunc_One&quot;&gt;&lt;code&gt;PyUFunc_One&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ufunc#c.PyUFunc_Zero&quot;&gt;&lt;code&gt;PyUFunc_Zero&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ufunc#c.PyUFunc_None&quot;&gt;&lt;code&gt;PyUFunc_None&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;PyUFunc_AllOnes&lt;/code&gt; to indicate the identity for this operation. It is only used for a reduce-like call on an empty array.</source>
          <target state="translated">&lt;a href=&quot;ufunc#c.PyUFunc_One&quot;&gt; &lt;code&gt;PyUFunc_One&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;ufunc#c.PyUFunc_Zero&quot;&gt; &lt;code&gt;PyUFunc_Zero&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;ufunc#c.PyUFunc_None&quot;&gt; &lt;code&gt;PyUFunc_None&lt;/code&gt; 、&lt;/a&gt;または &lt;code&gt;PyUFunc_AllOnes&lt;/code&gt; のいずれかで、この操作のIDを示します。これは、空の配列に対するreduceのような呼び出しにのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="f248b6168fbf2f57439344bf599f0d52d7a807c7" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;NULL&lt;/code&gt; or a dictionary containing low-level casting functions for user- defined data-types. Each function is wrapped in a &lt;code&gt;PyCObject *&lt;/code&gt; and keyed by the data-type number.</source>
          <target state="translated">いずれかの &lt;code&gt;NULL&lt;/code&gt; またはUSER-ための低レベルキャスティング機能を含む辞書は、データ型を定義しました。各関数は &lt;code&gt;PyCObject *&lt;/code&gt; でラップされ、データ型番号でキー付けされます。</target>
        </trans-unit>
        <trans-unit id="cd680ae51259fbdc5100a31577a59d7a7923df2f" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;NULL&lt;/code&gt; or an array of &lt;a href=&quot;array#c.NPY_NSCALARKINDS&quot;&gt;&lt;code&gt;NPY_NSCALARKINDS&lt;/code&gt;&lt;/a&gt; pointers. These pointers should each be either &lt;code&gt;NULL&lt;/code&gt; or a pointer to an array of integers (terminated by &lt;a href=&quot;dtype#c.NPY_NOTYPE&quot;&gt;&lt;code&gt;NPY_NOTYPE&lt;/code&gt;&lt;/a&gt;) indicating data-types that a scalar of this data-type of the specified kind can be cast to safely (this usually means without losing precision).</source>
          <target state="translated">どちらか &lt;code&gt;NULL&lt;/code&gt; かの配列&lt;a href=&quot;array#c.NPY_NSCALARKINDS&quot;&gt; &lt;code&gt;NPY_NSCALARKINDS&lt;/code&gt; の&lt;/a&gt;ポインタ。これらのポインターは、それぞれ &lt;code&gt;NULL&lt;/code&gt; か、指定された種類のこのデータ型のスカラーを安全にキャストできるデータ型を示す整数配列（&lt;a href=&quot;dtype#c.NPY_NOTYPE&quot;&gt; &lt;code&gt;NPY_NOTYPE&lt;/code&gt; で&lt;/a&gt;終了）へのポインターである必要があります（これは通常、精度を失うことなく意味します）。</target>
        </trans-unit>
        <trans-unit id="ff36def358c4174701abf75ea4d4e0cdcf5bd477" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;NULL&lt;/code&gt; or an array of &lt;a href=&quot;c-api.array#c.NPY_NSCALARKINDS&quot;&gt;&lt;code&gt;NPY_NSCALARKINDS&lt;/code&gt;&lt;/a&gt; pointers. These pointers should each be either &lt;code&gt;NULL&lt;/code&gt; or a pointer to an array of integers (terminated by &lt;a href=&quot;c-api.dtype#c.NPY_NOTYPE&quot;&gt;&lt;code&gt;NPY_NOTYPE&lt;/code&gt;&lt;/a&gt;) indicating data-types that a scalar of this data-type of the specified kind can be cast to safely (this usually means without losing precision).</source>
          <target state="translated">どちらか &lt;code&gt;NULL&lt;/code&gt; かの配列&lt;a href=&quot;c-api.array#c.NPY_NSCALARKINDS&quot;&gt; &lt;code&gt;NPY_NSCALARKINDS&lt;/code&gt; の&lt;/a&gt;ポインタ。これらのポインターは、それぞれ &lt;code&gt;NULL&lt;/code&gt; または整数の配列（&lt;a href=&quot;c-api.dtype#c.NPY_NOTYPE&quot;&gt; &lt;code&gt;NPY_NOTYPE&lt;/code&gt; で&lt;/a&gt;終了）へのポインターのいずれかで、指定した種類のこのデータ型のスカラーを安全にキャストできるデータ型を示します（これは通常、精度を失うことなく意味します）。</target>
        </trans-unit>
        <trans-unit id="9b68604ef80074abda088f5c021808f55b2ed04d" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;NULL&lt;/code&gt; or an array of integers (terminated by &lt;a href=&quot;c-api.dtype#c.NPY_NOTYPE&quot;&gt;&lt;code&gt;NPY_NOTYPE&lt;/code&gt;&lt;/a&gt; ) indicated data-types that this data-type can be cast to safely (this usually means without losing precision).</source>
          <target state="translated">いずれかの &lt;code&gt;NULL&lt;/code&gt; または（によって終了整数のアレイ&lt;a href=&quot;c-api.dtype#c.NPY_NOTYPE&quot;&gt; &lt;code&gt;NPY_NOTYPE&lt;/code&gt; は&lt;/a&gt;）（精度を失うことなく、これは通常の手段）は、このデータ型を安全にキャストすることができるデータ型を示しました。</target>
        </trans-unit>
        <trans-unit id="8a8e73551f33a77ec9147f05121309347af67814" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;NULL&lt;/code&gt; or an array of integers (terminated by &lt;a href=&quot;dtype#c.NPY_NOTYPE&quot;&gt;&lt;code&gt;NPY_NOTYPE&lt;/code&gt;&lt;/a&gt; ) indicated data-types that this data-type can be cast to safely (this usually means without losing precision).</source>
          <target state="translated">&lt;code&gt;NULL&lt;/code&gt; または整数の配列（&lt;a href=&quot;dtype#c.NPY_NOTYPE&quot;&gt; &lt;code&gt;NPY_NOTYPE&lt;/code&gt; で&lt;/a&gt;終了）のいずれかが、このデータ型を安全にキャストできるデータ型を示しました（これは通常、精度を失うことなく意味します）。</target>
        </trans-unit>
        <trans-unit id="accffd1618e3de5c69c33d1510a23e42c114bdf3" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;None&lt;/code&gt; to indicate a C-style contiguous array or a Tuple of strides which provides the number of bytes needed to jump to the next array element in the corresponding dimension. Each entry must be an integer (a Python &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt;). As with shape, the values may be larger than can be represented by a C &amp;ldquo;int&amp;rdquo; or &amp;ldquo;long&amp;rdquo;; the calling code should handle this appropriately, either by raising an error, or by using &lt;code&gt;Py_LONG_LONG&lt;/code&gt; in C. The default is &lt;code&gt;None&lt;/code&gt; which implies a C-style contiguous memory buffer. In this model, the last dimension of the array varies the fastest. For example, the default strides tuple for an object whose array entries are 8 bytes long and whose shape is (10,20,30) would be (4800, 240, 8)</source>
          <target state="translated">いずれか &lt;code&gt;None&lt;/code&gt; Cスタイルの連続配列または数は、対応する次元における次の配列要素にジャンプするのに必要なバイト提供ストライドのタプルを示します。各エントリは整数でなければなりません（Pythonの &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;long&lt;/code&gt; ）。形状と同様に、値はCの「int」または「long」で表すことができる値よりも大きい場合があります。呼び出し側のコードは、エラーを発生させるか、Cで &lt;code&gt;Py_LONG_LONG&lt;/code&gt; を使用して、これを適切に処理する必要があります。デフォルトは &lt;code&gt;None&lt;/code&gt; で、Cスタイルの連続したメモリバッファーを意味します。このモデルでは、配列の最後の次元が最も速く変化します。たとえば、配列のエントリが8バイトで、形状が（10,20,30）であるオブジェクトのデフォルトのストライドは、（4800、240、8）になります。</target>
        </trans-unit>
        <trans-unit id="2e35b148ce133a87759db1169ada9bc7afe8b136" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;PyUFunc_One&lt;/code&gt;, &lt;code&gt;PyUFunc_Zero&lt;/code&gt;, &lt;code&gt;PyUFunc_None&lt;/code&gt; or &lt;code&gt;PyUFunc_AllOnes&lt;/code&gt; to indicate the identity for this operation. It is only used for a reduce-like call on an empty array.</source>
          <target state="translated">&lt;code&gt;PyUFunc_One&lt;/code&gt; 、 &lt;code&gt;PyUFunc_Zero&lt;/code&gt; 、 &lt;code&gt;PyUFunc_None&lt;/code&gt; または &lt;code&gt;PyUFunc_AllOnes&lt;/code&gt; のいずれかで、この操作のIDを示します。空の配列に対するreduceのような呼び出しにのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="fb67ce0cbc08322db9293cceafb38eefe75acb01" translate="yes" xml:space="preserve">
          <source>Either None to indicate a C-style contiguous array or a Tuple of strides which provides the number of bytes needed to jump to the next array element in the corresponding dimension. Each entry must be an integer (a Python &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt;). As with shape, the values may be larger than can be represented by a C &amp;ldquo;int&amp;rdquo; or &amp;ldquo;long&amp;rdquo;; the calling code should handle this appropriately, either by raising an error, or by using &lt;code&gt;Py_LONG_LONG&lt;/code&gt; in C. The default is None which implies a C-style contiguous memory buffer. In this model, the last dimension of the array varies the fastest. For example, the default strides tuple for an object whose array entries are 8 bytes long and whose shape is (10,20,30) would be (4800, 240, 8)</source>
          <target state="translated">[なし]は、Cスタイルの連続配列を示すか、対応する次元の次の配列要素にジャンプするために必要なバイト数を提供するストライドのタプルを示します。各エントリは整数（Python &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;long&lt;/code&gt; ）である必要があります。形状と同様に、値はCの「int」または「long」で表すことができる値よりも大きくなる場合があります。呼び出し元のコードは、エラーを発生させるか、Cで &lt;code&gt;Py_LONG_LONG&lt;/code&gt; を使用することにより、これを適切に処理する必要があります。デフォルトはNoneで、Cスタイルの連続メモリバッファーを意味します。このモデルでは、配列の最後の次元が最も速く変化します。たとえば、配列エントリの長さが8バイトで、形状が（10,20,30）のオブジェクトのデフォルトのストライドタプルは（4800、240、8）になります。</target>
        </trans-unit>
        <trans-unit id="987f54d54272ffd5f21f8146bd411a9086f8f96d" translate="yes" xml:space="preserve">
          <source>Either a basic-type description string as in &lt;em&gt;typestr&lt;/em&gt; or another list (for nested structured types)</source>
          <target state="translated">&lt;em&gt;typestrの&lt;/em&gt;ような基本タイプの説明文字列または別のリスト（ネストされた構造化タイプの場合）</target>
        </trans-unit>
        <trans-unit id="e36f94dd4a5bc304e7b8e5a337101261c2694c11" translate="yes" xml:space="preserve">
          <source>Either a data-type, a tuple of data-types, or a special signature string indicating the input and output types of a ufunc. This argument allows you to provide a specific signature for the 1-d loop to use in the underlying calculation. If the loop specified does not exist for the ufunc, then a TypeError is raised. Normally, a suitable loop is found automatically by comparing the input types with what is available and searching for a loop with data-types to which all inputs can be cast safely. This keyword argument lets you bypass that search and choose a particular loop. A list of available signatures is provided by the &lt;strong&gt;types&lt;/strong&gt; attribute of the ufunc object. For backwards compatibility this argument can also be provided as &lt;em&gt;sig&lt;/em&gt;, although the long form is preferred. Note that this should not be confused with the generalized ufunc &lt;a href=&quot;c-api.generalized-ufuncs#details-of-signature&quot;&gt;signature&lt;/a&gt; that is stored in the &lt;strong&gt;signature&lt;/strong&gt; attribute of the of the ufunc object.</source>
          <target state="translated">データ型、データ型のタプル、またはufuncの入力と出力の型を示す特別な署名文字列のいずれか。この引数により、基になる計算で使用する1-dループに特定のシグネチャを提供できます。指定されたループがufuncに存在しない場合、TypeErrorが発生します。通常、適切なループは、入力タイプと利用可能なタイプを比較し、すべての入力を安全にキャストできるデータタイプのループを検索することにより、自動的に検出されます。このキーワード引数により、その検索をバイパスして特定のループを選択できます。使用可能な署名のリストは、ufuncオブジェクトの&lt;strong&gt;types&lt;/strong&gt;属性によって提供されます。後方互換性のために、この引数は&lt;em&gt;sig&lt;/em&gt;として提供することもできます&lt;em&gt;&lt;/em&gt;、ただし長い形式が好ましい。これは、ufuncオブジェクトの&lt;strong&gt;署名&lt;/strong&gt;属性に格納されている一般化されたufunc &lt;a href=&quot;c-api.generalized-ufuncs#details-of-signature&quot;&gt;署名&lt;/a&gt;と混同しないでください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7610b5a110dcd0d84cf907684a00201bedfda50b" translate="yes" xml:space="preserve">
          <source>Either a data-type, a tuple of data-types, or a special signature string indicating the input and output types of a ufunc. This argument allows you to provide a specific signature for the 1-d loop to use in the underlying calculation. If the loop specified does not exist for the ufunc, then a TypeError is raised. Normally, a suitable loop is found automatically by comparing the input types with what is available and searching for a loop with data-types to which all inputs can be cast safely. This keyword argument lets you bypass that search and choose a particular loop. A list of available signatures is provided by the &lt;strong&gt;types&lt;/strong&gt; attribute of the ufunc object. For backwards compatibility this argument can also be provided as &lt;em&gt;sig&lt;/em&gt;, although the long form is preferred. Note that this should not be confused with the generalized ufunc &lt;a href=&quot;c-api/generalized-ufuncs#details-of-signature&quot;&gt;signature&lt;/a&gt; that is stored in the &lt;strong&gt;signature&lt;/strong&gt; attribute of the of the ufunc object.</source>
          <target state="translated">データ型、データ型のタプル、またはufuncの入力型と出力型を示す特別な署名文字列のいずれか。この引数を使用すると、基になる計算で使用する1-dループに特定の署名を指定できます。指定されたループがufuncに存在しない場合、TypeErrorが発生します。通常、適切なループは、入力タイプを使用可能なものと比較し、すべての入力を安全にキャストできるデータタイプのループを検索することによって自動的に検出されます。このキーワード引数を使用すると、その検索をバイパスして特定のループを選択できます。使用可能なシグニチャのリストは、ufuncオブジェクトの&lt;strong&gt;types&lt;/strong&gt;属性によって提供されます。下位互換性のために、この引数は&lt;em&gt;sig&lt;/em&gt;として提供することもできます。&lt;em&gt;&lt;/em&gt;、ただし、長い形式が推奨されます。これを、ufuncオブジェクトの&lt;strong&gt;signature&lt;/strong&gt;属性に格納されている一般化されたufunc&lt;a href=&quot;c-api/generalized-ufuncs#details-of-signature&quot;&gt;署名&lt;/a&gt;と混同しないように注意してください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e1209e0f0503ff7dc267174ecb081f65f265397" translate="yes" xml:space="preserve">
          <source>Either passing n arguments as in njoin(&amp;lsquo;a&amp;rsquo;,&amp;rsquo;b&amp;rsquo;), or a sequence of n names as in njoin([&amp;lsquo;a&amp;rsquo;,&amp;rsquo;b&amp;rsquo;]) is handled, or a mixture of such arguments.</source>
          <target state="translated">njoin（ 'a'、 'b'）のようにn個の引数を渡すか、njoin（['a'、 'b']）のようにn個の名前のシーケンスを渡すか、またはそのような引数の混合を処理します。</target>
        </trans-unit>
        <trans-unit id="c7015ddb90f8a42ecbacfed5d690fb153cc71ff7" translate="yes" xml:space="preserve">
          <source>Either the file name (string) or an open file (file-like object) where the data will be saved. If file is a string or a Path, the &lt;code&gt;.npz&lt;/code&gt; extension will be appended to the file name if it is not already there.</source>
          <target state="translated">データが保存されるファイル名（文字列）または開いているファイル（ファイルのようなオブジェクト）。fileが文字列またはパスの場合、 &lt;code&gt;.npz&lt;/code&gt; 拡張子がファイル名に追加されます（まだ存在しない場合）。</target>
        </trans-unit>
        <trans-unit id="0f9fa4310da3a7c0b9cf42ac99c7003bdc5b813b" translate="yes" xml:space="preserve">
          <source>Either the filename (string) or an open file (file-like object) where the data will be saved. If file is a string or a Path, the &lt;code&gt;.npz&lt;/code&gt; extension will be appended to the filename if it is not already there.</source>
          <target state="translated">データが保存されるファイル名（文字列）または開いているファイル（ファイルのようなオブジェクト）のいずれか。ファイルが文字列またはパスの場合、ファイル名がまだ存在しない場合は、 &lt;code&gt;.npz&lt;/code&gt; 拡張子がファイル名に追加されます。</target>
        </trans-unit>
        <trans-unit id="2953df344283c54bedef1d8e252fb3c96e667a80" translate="yes" xml:space="preserve">
          <source>Element index to partition by. The k-th element will be in its final sorted position and all smaller elements will be moved before it and all larger elements behind it. The order all elements in the partitions is undefined. If provided with a sequence of k-th it will partition all of them into their sorted position at once.</source>
          <target state="translated">分割する要素のインデックス。k 番目の要素は最終的にソートされた位置にあり、すべての小さい要素はその前に、大きい要素はその後ろに移動されます。パーティション内のすべての要素の順序は未定義です。k番目のシーケンスが与えられた場合は、すべての要素を一度にソートされた位置に分割します。</target>
        </trans-unit>
        <trans-unit id="603f2f92b6e79eef48a044dac1baeab309560ae3" translate="yes" xml:space="preserve">
          <source>Element index to partition by. The k-th value of the element will be in its final sorted position and all smaller elements will be moved before it and all equal or greater elements behind it. The order of all elements in the partitions is undefined. If provided with a sequence of k-th it will partition all elements indexed by k-th of them into their sorted position at once.</source>
          <target state="translated">分割する要素のインデックス。要素の k 番目の値が最終的にソートされた位置になり、すべての小さい要素はその前に、等しいか大きい要素はその後ろに移動されます。パーティション内のすべての要素の順序は定義されていません。k番目のシーケンスが与えられている場合は、そのうちのk番目の値でインデックス付けされたすべての要素を、ソートされた位置に一度に分割します。</target>
        </trans-unit>
        <trans-unit id="dd1e5c082697760ec705616bbb818b3e3054f2a3" translate="yes" xml:space="preserve">
          <source>Element index to partition by. The kth element value will be in its final sorted position and all smaller elements will be moved before it and all equal or greater elements behind it. The order of all elements in the partitions is undefined. If provided with a sequence of kth it will partition all elements indexed by kth of them into their sorted position at once.</source>
          <target state="translated">分割する要素のインデックス。k 番目の要素の値は、最終的にソートされた位置になり、すべての小さい要素はその前に、等しいか大きい要素はその後ろに移動されます。パーティション内のすべての要素の順序は定義されていません。k番目のシーケンスが与えられた場合、そのうちのk番目のインデックスを持つすべての要素を、ソートされた位置に一度に分割します。</target>
        </trans-unit>
        <trans-unit id="67afd821e881e618d2d3c592047caa6ab2545d17" translate="yes" xml:space="preserve">
          <source>Element-wise 2 to the power &lt;code&gt;x&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">要素ごとの2の &lt;code&gt;x&lt;/code&gt; 乗。 &lt;code&gt;x&lt;/code&gt; がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="adaf9e130e6f948876c40cb7079ab5374d49e139" translate="yes" xml:space="preserve">
          <source>Element-wise &lt;code&gt;x*x&lt;/code&gt;, of the same shape and dtype as &lt;code&gt;x&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">要素単位 &lt;code&gt;x*x&lt;/code&gt; と同じ形状とDTYPEの、 &lt;code&gt;x&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="808b6a2cc974757f97aaa854c54baffd849df5f9" translate="yes" xml:space="preserve">
          <source>Element-wise arc tangent of &lt;code&gt;x1/x2&lt;/code&gt; choosing the quadrant correctly.</source>
          <target state="translated">象限を正しく選択する &lt;code&gt;x1/x2&lt;/code&gt; の要素単位の逆正接。</target>
        </trans-unit>
        <trans-unit id="2ac96759d5e7cde7bc053be626eb0c73009447e8" translate="yes" xml:space="preserve">
          <source>Element-wise exponential minus one: &lt;code&gt;out = exp(x) - 1&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">要素ごとの指数マイナス1： &lt;code&gt;out = exp(x) - 1&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="2e24669e28a8f1555e04e187ba59f7b56eef5d74" translate="yes" xml:space="preserve">
          <source>Element-wise maximum of array elements.</source>
          <target state="translated">配列要素の要素数の最大値。</target>
        </trans-unit>
        <trans-unit id="de0f8227b430f00f150f25df31d4c6130cd8dee1" translate="yes" xml:space="preserve">
          <source>Element-wise maximum of two arrays, ignores NaNs.</source>
          <target state="translated">2つの配列の要素ごとの最大値で、NaNを無視します。</target>
        </trans-unit>
        <trans-unit id="f0000ade51e0b31f8609d90f1fdd9bbd95746777" translate="yes" xml:space="preserve">
          <source>Element-wise maximum of two arrays, ignoring any NaNs.</source>
          <target state="translated">NaNを無視した2つの配列の要素ごとの最大値。</target>
        </trans-unit>
        <trans-unit id="a0de4ef4fdf4c984be543486b8ef23d43631cea6" translate="yes" xml:space="preserve">
          <source>Element-wise maximum of two arrays, propagates NaNs.</source>
          <target state="translated">2つの配列の要素方向の最大値で、NaNを伝播する。</target>
        </trans-unit>
        <trans-unit id="bdcc1733a93ea05c9ded4af3bbc823384a01061c" translate="yes" xml:space="preserve">
          <source>Element-wise maximum of two arrays, propagating any NaNs.</source>
          <target state="translated">任意のNaNを伝播する2つの配列の要素間の最大値。</target>
        </trans-unit>
        <trans-unit id="117fbbb294a3d3f4ec6bf9953291f0979ba3eb6d" translate="yes" xml:space="preserve">
          <source>Element-wise minimum of array elements.</source>
          <target state="translated">配列要素の要素単位での最小値。</target>
        </trans-unit>
        <trans-unit id="f10c8e11f8111bdb87b272aa363c7d5a87d2958e" translate="yes" xml:space="preserve">
          <source>Element-wise minimum of two arrays, ignores NaNs.</source>
          <target state="translated">2つの配列の要素方向の最小値、NaNを無視します。</target>
        </trans-unit>
        <trans-unit id="0c1d7d39298313f44ede26ddbe99082deaf8d999" translate="yes" xml:space="preserve">
          <source>Element-wise minimum of two arrays, ignoring any NaNs.</source>
          <target state="translated">NaNを無視した2つの配列の要素別最小値。</target>
        </trans-unit>
        <trans-unit id="129e7a520fce7febf9e89723a4b3e31c307bd988" translate="yes" xml:space="preserve">
          <source>Element-wise minimum of two arrays, propagates NaNs.</source>
          <target state="translated">2つのアレイの要素方向の最小値で、NaNを伝播させる。</target>
        </trans-unit>
        <trans-unit id="31ccb3abbc1e393d00365ccd1319992c54e9ed13" translate="yes" xml:space="preserve">
          <source>Element-wise minimum of two arrays, propagating any NaNs.</source>
          <target state="translated">任意のNaNを伝播する2つの配列の要素最小値。</target>
        </trans-unit>
        <trans-unit id="a664254a8e3d768c1b8ca8504a3064612680ed55" translate="yes" xml:space="preserve">
          <source>Element-wise quotient resulting from floor division. This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">フロア除算から得られる要素ごとの商。 &lt;code&gt;x1&lt;/code&gt; と &lt;code&gt;x2&lt;/code&gt; の両方がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="35a0aab7c92a2f3f84b40cb7246ed8c1bcebd9a8" translate="yes" xml:space="preserve">
          <source>Element-wise remainder from floor division. This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">フロア分割からの要素ごとの残り。 &lt;code&gt;x1&lt;/code&gt; と &lt;code&gt;x2&lt;/code&gt; の両方がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="41a18c5c80ce790e4ab72162c437f0a9d09ae712" translate="yes" xml:space="preserve">
          <source>Elementary Function</source>
          <target state="translated">初等関数</target>
        </trans-unit>
        <trans-unit id="04982a80ae05d1b0cdf8cb6f954f5d90370c1f1a" translate="yes" xml:space="preserve">
          <source>Elements shapes must match along the appropriate axes (without broadcasting), but leading 1s will be prepended to the shape as necessary to make the dimensions match.</source>
          <target state="translated">要素図形は適切な軸に沿って一致させる必要がありますが(ブロードキャストなしで)、寸法が一致するようにするために必要に応じて、先頭の 1 が図形に付加されます。</target>
        </trans-unit>
        <trans-unit id="ec73af38a64af612d36b6b1e08ea284a14bd8798" translate="yes" xml:space="preserve">
          <source>Elements that roll beyond the last position are re-introduced at the first.</source>
          <target state="translated">最後の位置を超えて転がる要素は、最初に再導入されます。</target>
        </trans-unit>
        <trans-unit id="8ec956445b767a135cb8c6d627b5a2dfeb02537d" translate="yes" xml:space="preserve">
          <source>Elements to compare for the maximum. See &lt;a href=&quot;numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">最大値と比較する要素。詳細については、&lt;a href=&quot;numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt; &lt;code&gt;reduce&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4ba7c2272413ef1378137b3e69e8b4722f8659b1" translate="yes" xml:space="preserve">
          <source>Elements to compare for the minimum. See &lt;a href=&quot;numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">最小値と比較する要素。詳細については、&lt;a href=&quot;numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt; &lt;code&gt;reduce&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9c0973f46abdf4cfdea56a1e0e2597c002a92fb2" translate="yes" xml:space="preserve">
          <source>Elements to include in the product. See &lt;a href=&quot;numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">製品に含める要素。詳細については、&lt;a href=&quot;numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt; &lt;code&gt;reduce&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="836bba81daa7bbfa24fcec9d876cd0ca01db1438" translate="yes" xml:space="preserve">
          <source>Elements to include in the sum. See &lt;a href=&quot;numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">合計に含める要素。詳細については、&lt;a href=&quot;numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt; &lt;code&gt;reduce&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a68b36609400536b206e5ed8f4915662a0a2020b" translate="yes" xml:space="preserve">
          <source>Elements to sum.</source>
          <target state="translated">合計するための要素。</target>
        </trans-unit>
        <trans-unit id="680319fcdd621a03121d173370e025227fa7d8d6" translate="yes" xml:space="preserve">
          <source>Elementwise bit operations</source>
          <target state="translated">要素ごとのビット演算</target>
        </trans-unit>
        <trans-unit id="59a9a9f6dbe39b1cf060328792d82b4916bb1fe4" translate="yes" xml:space="preserve">
          <source>Email the editor of LWN to let them know of the release. Directions at: &lt;a href=&quot;https://lwn.net/op/FAQ.lwn#contact&quot;&gt;https://lwn.net/op/FAQ.lwn#contact&lt;/a&gt;</source>
          <target state="translated">LWNの編集者に電子メールを送信して、リリースを知らせます。道順：&lt;a href=&quot;https://lwn.net/op/FAQ.lwn#contact&quot;&gt;https&lt;/a&gt;：//lwn.net/op/FAQ.lwn#contact</target>
        </trans-unit>
        <trans-unit id="599d2acd649f524c65c4bd78c5dfde8f2b7d2eea" translate="yes" xml:space="preserve">
          <source>Emeritus members</source>
          <target state="translated">名誉会員</target>
        </trans-unit>
        <trans-unit id="975003171b5d10383f8baffd2a3aedbe6bfb0ccf" translate="yes" xml:space="preserve">
          <source>Emit py3kwarnings for division of integer arrays</source>
          <target state="translated">整数配列の除算に関する py3kwarnings を表示します。</target>
        </trans-unit>
        <trans-unit id="5b188c1a7743df45af55da550ee4905951a67f8f" translate="yes" xml:space="preserve">
          <source>Emphasize empathy for individuals rather than judging behavior, avoiding binary labels of &amp;ldquo;good&amp;rdquo; and &amp;ldquo;bad/evil&amp;rdquo;. Overt, clear-cut aggression and harassment exists and we will be address that firmly. But many scenarios that can prove challenging to resolve are those where normal disagreements devolve into unhelpful or harmful behavior from multiple parties. Understanding the full context and finding a path that re-engages all is hard, but ultimately the most productive for our community.</source>
          <target state="translated">「善」と「悪/悪」のバイナリラベルを避け、行動を判断するのではなく、個人への共感を強調します。明白で明確な攻撃性と嫌がらせが存在し、私たちはそれにしっかりと対処します。しかし、解決が難しいと判明する可能性のある多くのシナリオは、通常の意見の不一致が複数の関係者からの役に立たないまたは有害な行動に発展するシナリオです。完全なコンテキストを理解し、すべてに再び関与するパスを見つけることは困難ですが、最終的には私たちのコミュニティにとって最も生産的です。</target>
        </trans-unit>
        <trans-unit id="777a53a52816c5597e4f366c2ef31bc0f2a213da" translate="yes" xml:space="preserve">
          <source>Empty array of the given shape and type.</source>
          <target state="translated">指定された形状と型の空の配列.</target>
        </trans-unit>
        <trans-unit id="30b8b3469c24b495eeedeb9693c9bf36670e4dcd" translate="yes" xml:space="preserve">
          <source>Empty masked array modelled on an existing array.</source>
          <target state="translated">既存の配列をモデル化した空のマスク付き配列.</target>
        </trans-unit>
        <trans-unit id="6985c4b0d668125594b4f0ca6436e1c86a0154e8" translate="yes" xml:space="preserve">
          <source>Empty masked array with all elements masked.</source>
          <target state="translated">すべての要素がマスクされた空のマスクされた配列。</target>
        </trans-unit>
        <trans-unit id="680b8e573f5c82aced131f36a223b41bb3352d25" translate="yes" xml:space="preserve">
          <source>Empty masked array with the properties of an existing array.</source>
          <target state="translated">既存の配列のプロパティを持つ空のマスクされた配列。</target>
        </trans-unit>
        <trans-unit id="45886aabb4d2355c3b829d3be8c1cca38e105c36" translate="yes" xml:space="preserve">
          <source>Enable AVX2/AVX512 at compile time</source>
          <target state="translated">コンパイル時に AVX2/AVX512 を有効にする</target>
        </trans-unit>
        <trans-unit id="a122b7a065f1b0b6e65770d5576676e667e835a7" translate="yes" xml:space="preserve">
          <source>Enables support for iteration of sub-ranges of the full &lt;code&gt;iterindex&lt;/code&gt; range &lt;code&gt;[0, NpyIter_IterSize(iter))&lt;/code&gt;. Use the function &lt;a href=&quot;#c.NpyIter_ResetToIterIndexRange&quot;&gt;&lt;code&gt;NpyIter_ResetToIterIndexRange&lt;/code&gt;&lt;/a&gt; to specify a range for iteration.</source>
          <target state="translated">完全な &lt;code&gt;iterindex&lt;/code&gt; 範囲 &lt;code&gt;[0, NpyIter_IterSize(iter))&lt;/code&gt; のサブ範囲の反復のサポートを有効にします。関数&lt;a href=&quot;#c.NpyIter_ResetToIterIndexRange&quot;&gt; &lt;code&gt;NpyIter_ResetToIterIndexRange&lt;/code&gt; &lt;/a&gt;を使用して、反復の範囲を指定します。</target>
        </trans-unit>
        <trans-unit id="0bc79001ca7d4881c81aec2ea04317198e31e1bd" translate="yes" xml:space="preserve">
          <source>Enables the specified array flags. This function does no validation, and assumes that you know what you&amp;rsquo;re doing.</source>
          <target state="translated">指定された配列フラグを有効にします。この関数は検証を行わず、ユーザーが何をしているかを理解していることを前提としています。</target>
        </trans-unit>
        <trans-unit id="2919970bd082897345d32d119a4800b54dae0c81" translate="yes" xml:space="preserve">
          <source>Encapsulate the functionality of functions and methods that take the axis= keyword and work properly with None as the axis argument. The input array is &lt;code&gt;obj&lt;/code&gt;, while &lt;code&gt;*axis&lt;/code&gt; is a converted integer (so that &amp;gt;=MAXDIMS is the None value), and &lt;code&gt;requirements&lt;/code&gt; gives the needed properties of &lt;code&gt;obj&lt;/code&gt;. The output is a converted version of the input so that requirements are met and if needed a flattening has occurred. On output negative values of &lt;code&gt;*axis&lt;/code&gt; are converted and the new value is checked to ensure consistency with the shape of &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">axis =キーワードを取り、Noneを軸引数として適切に機能する関数とメソッドの機能をカプセル化します。入力配列は &lt;code&gt;obj&lt;/code&gt; ですが、 &lt;code&gt;*axis&lt;/code&gt; は変換された整数であり（&amp;gt; = MAXDIMSはNone値です）、 &lt;code&gt;requirements&lt;/code&gt; は &lt;code&gt;obj&lt;/code&gt; に必要なプロパティを提供します。出力は入力の変換されたバージョンであり、要件が満たされ、必要に応じて平坦化が行われます。出力時に &lt;code&gt;*axis&lt;/code&gt; の負の値が変換され、新しい値がチェックされて &lt;code&gt;obj&lt;/code&gt; の形状との整合性が確保されます。</target>
        </trans-unit>
        <trans-unit id="27ce22c6173324f95f01ae2e015c760af4bd2880" translate="yes" xml:space="preserve">
          <source>Enclose variables in single backticks. The colon must be preceded by a space, or omitted if the type is absent.</source>
          <target state="translated">変数をシングルバックトークで囲みます。コロンの前にはスペースを、型がない場合は省略する必要があります。</target>
        </trans-unit>
        <trans-unit id="349d554a10586cdec500258debd97663d605504e" translate="yes" xml:space="preserve">
          <source>Encoding argument for text IO functions</source>
          <target state="translated">テキストIO関数のエンコーディング引数</target>
        </trans-unit>
        <trans-unit id="3fcbf1219e531263b67edb6bcb90e0e603ad6031" translate="yes" xml:space="preserve">
          <source>Encoding used to decode the inputfile. Does not apply to input streams.</source>
          <target state="translated">入力ファイルのデコードに使用されるエンコーディング。入力ストリームには適用されません。</target>
        </trans-unit>
        <trans-unit id="b27e46c5a085977e5cb88681f8a881b52c0fec71" translate="yes" xml:space="preserve">
          <source>Encoding used to decode the inputfile. Does not apply to input streams. The special value &amp;lsquo;bytes&amp;rsquo; enables backward compatibility workarounds that ensures you receive byte arrays as results if possible and passes &amp;lsquo;latin1&amp;rsquo; encoded strings to converters. Override this value to receive unicode arrays and pass strings as input to converters. If set to None the system default is used. The default value is &amp;lsquo;bytes&amp;rsquo;.</source>
          <target state="translated">入力ファイルのデコードに使用されるエンコード。入力ストリームには適用されません。特別な値 'bytes'は下位互換性の回避策を有効にし、可能であれば結果としてバイト配列を受け取り、 'latin1'エンコードされた文字列をコンバーターに渡します。この値をオーバーライドして、Unicode配列を受け取り、文字列を入力としてコンバーターに渡します。Noneに設定すると、システムのデフォルトが使用されます。デフォルト値は「バイト」です。</target>
        </trans-unit>
        <trans-unit id="6776a87f17cb7165db7de968828852a089f8cd2b" translate="yes" xml:space="preserve">
          <source>Encoding used to decode the inputfile. Does not apply when &lt;code&gt;fname&lt;/code&gt; is a file object. The special value &amp;lsquo;bytes&amp;rsquo; enables backward compatibility workarounds that ensure that you receive byte arrays when possible and passes latin1 encoded strings to converters. Override this value to receive unicode arrays and pass strings as input to converters. If set to None the system default is used. The default value is &amp;lsquo;bytes&amp;rsquo;.</source>
          <target state="translated">入力ファイルのデコードに使用されるエンコード。 &lt;code&gt;fname&lt;/code&gt; がファイルオブジェクトの場合は適用されません。特別な値 'bytes'により、下位互換性の回避策が可能になり、可能であればバイト配列を受け取り、latin1エンコードされた文字列をコンバーターに渡します。この値をオーバーライドして、Unicode配列を受け取り、文字列を入力としてコンバーターに渡します。Noneに設定すると、システムのデフォルトが使用されます。デフォルト値は「バイト」です。</target>
        </trans-unit>
        <trans-unit id="8e2939a9752e2c7114a267e7bcdaebdf8d9a69e0" translate="yes" xml:space="preserve">
          <source>Encoding used to encode the outputfile. Does not apply to output streams. If the encoding is something other than &amp;lsquo;bytes&amp;rsquo; or &amp;lsquo;latin1&amp;rsquo; you will not be able to load the file in NumPy versions &amp;lt; 1.14. Default is &amp;lsquo;latin1&amp;rsquo;.</source>
          <target state="translated">出力ファイルのエンコードに使用されるエンコード。出力ストリームには適用されません。エンコーディングが「bytes」または「latin1」以外の場合、NumPyバージョン&amp;lt;1.14でファイルをロードできません。デフォルトは「latin1」です。</target>
        </trans-unit>
        <trans-unit id="672959489089d143587fef9e4d4ad09fb66e2197" translate="yes" xml:space="preserve">
          <source>End of interval. The interval does not include this value, except in some cases where &lt;code&gt;step&lt;/code&gt; is not an integer and floating point round-off affects the length of &lt;code&gt;out&lt;/code&gt;.</source>
          <target state="translated">インターバルの終わり。間隔には、この値は含まれません。ただし、 &lt;code&gt;step&lt;/code&gt; が整数ではなく、浮動小数点の丸めが &lt;code&gt;out&lt;/code&gt; の長さに影響する場合があります。</target>
        </trans-unit>
        <trans-unit id="d9b220f5e9cefe4e27d14fddf001bfa3a63353e7" translate="yes" xml:space="preserve">
          <source>Endianness of this data:</source>
          <target state="translated">このデータのエンディアン性</target>
        </trans-unit>
        <trans-unit id="90010140c11fc0bb2865fc9b51fcfa59f205ccef" translate="yes" xml:space="preserve">
          <source>Endnotes</source>
          <target state="translated">Endnotes</target>
        </trans-unit>
        <trans-unit id="05406404937f1ded938df8b2535e2c18c93233ac" translate="yes" xml:space="preserve">
          <source>Enforcing the Code of Conduct impacts our community today and for the future. It&amp;rsquo;s an action that we do not take lightly. When reviewing enforcement measures, the Code of Conduct Committee will keep the following values and guidelines in mind:</source>
          <target state="translated">行動規範の施行は、現在および将来のコミュニティに影響を与えます。それは私たちが軽視しない行動です。施行措置を検討する際、行動規範委員会は以下の価値観とガイドラインを念頭に置いています。</target>
        </trans-unit>
        <trans-unit id="f3bf2be725863fdffb3b97618f54e280ae615ed8" translate="yes" xml:space="preserve">
          <source>Enhancements</source>
          <target state="translated">Enhancements</target>
        </trans-unit>
        <trans-unit id="83a41a009718ba8b1b08f10745bce80452ba74f4" translate="yes" xml:space="preserve">
          <source>Enlarging an array: as above, but missing entries are filled with zeros:</source>
          <target state="translated">配列の拡大:上記と同様ですが、欠落している項目はゼロで埋められます。</target>
        </trans-unit>
        <trans-unit id="6c8cedd3caa9e42a775e9fa4b437c16d37b9b189" translate="yes" xml:space="preserve">
          <source>Ensure that the original contents of &lt;code&gt;intent(in)&lt;/code&gt; argument is preserved. Typically used in connection with &lt;code&gt;intent(in,out)&lt;/code&gt; attribute. F2PY creates an optional argument &lt;code&gt;overwrite_&amp;lt;argument name&amp;gt;&lt;/code&gt; with the default value &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;intent(in)&lt;/code&gt; 引数の元の内容が保持されていることを確認してください。通常、 &lt;code&gt;intent(in,out)&lt;/code&gt; 属性に関連して使用されます。F2PYは、オプションの引数 &lt;code&gt;overwrite_&amp;lt;argument name&amp;gt;&lt;/code&gt; をデフォルト値 &lt;code&gt;0&lt;/code&gt; で作成します。</target>
        </trans-unit>
        <trans-unit id="0b1cfaa83bf2eab645405941ddc61295f0ec9ed6" translate="yes" xml:space="preserve">
          <source>Ensure you are dealing with a well-behaved array (aligned, in machine byte-order and single-segment) of the correct type and number of dimensions.</source>
          <target state="translated">正しいタイプと次元数を持つ,よく動作する配列(マシンのバイトオーダーとシングルセグメントで配列されたもの)を扱っていることを確認してください.</target>
        </trans-unit>
        <trans-unit id="31a314f110f22f052f3fa828713d2b2afb82f2d3" translate="yes" xml:space="preserve">
          <source>Ensures that the input or output matches the iteration dimensions exactly.</source>
          <target state="translated">入力または出力が反復寸法と正確に一致することを保証します。</target>
        </trans-unit>
        <trans-unit id="2dfe05db0717fbae4e4c8fa997a9589c52cb7615" translate="yes" xml:space="preserve">
          <source>Enter your GitHub username and password (repeat contributors or advanced users can remove this step by connecting to GitHub with &lt;a href=&quot;gitwash/development_setup#set-up-and-configure-a-github-account&quot;&gt;SSH&lt;/a&gt;).</source>
          <target state="translated">GitHubのユーザー名とパスワードを入力します（リピートコントリビューターまたは上級ユーザーは、&lt;a href=&quot;gitwash/development_setup#set-up-and-configure-a-github-account&quot;&gt;SSHで&lt;/a&gt;GitHubに接続することでこの手順を削除できます）。</target>
        </trans-unit>
        <trans-unit id="b3a6fa7af7b1354d47707152a8ad806c277ca980" translate="yes" xml:space="preserve">
          <source>Entropy bits in 32-bit unsigned integers. A scalar is returned if size is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">32ビット符号なし整数のエントロピービット。サイズが &lt;code&gt;None&lt;/code&gt; の場合、スカラーが返されます。</target>
        </trans-unit>
        <trans-unit id="b0366a10ef9d6d3ef8c64dd51eeccb78bad1656a" translate="yes" xml:space="preserve">
          <source>Enumerated Types</source>
          <target state="translated">列挙型</target>
        </trans-unit>
        <trans-unit id="e4ac742e5d17c07aad844f80aaa89a24ed90f881" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;np.prod(a.shape)&lt;/code&gt;, i.e., the product of the array&amp;rsquo;s dimensions.</source>
          <target state="translated">等しい &lt;code&gt;np.prod(a.shape)&lt;/code&gt; 、すなわち、配列の次元の製品。</target>
        </trans-unit>
        <trans-unit id="2baf15a74d602a8791ff350bd57dfdac0a7e5d0e" translate="yes" xml:space="preserve">
          <source>Equations : as discussed in the &lt;strong&gt;Notes&lt;/strong&gt; section above, LaTeX formatting should be kept to a minimum. Often it&amp;rsquo;s possible to show equations as Python code or pseudo-code instead, which is much more readable in a terminal. For inline display use double backticks (like &lt;code&gt;y = np.sin(x)&lt;/code&gt;). For display with blank lines above and below, use a double colon and indent the code, like:</source>
          <target state="translated">方程式：上記の&lt;strong&gt;注の&lt;/strong&gt;セクションで説明したように、LaTeXのフォーマットは最小限に抑える必要があります。多くの場合、方程式をPythonコードまたは疑似コードとして表示することができます。これは、ターミナルではるかに読みやすくなります。インライン表示の場合は、二重のバッククォートを使用します（ &lt;code&gt;y = np.sin(x)&lt;/code&gt; ）。上下に空白行がある表示の場合は、次のように二重コロンを使用してコードをインデントします。</target>
        </trans-unit>
        <trans-unit id="cf762494180c61769e42e78eeea4e46c35cf2ea1" translate="yes" xml:space="preserve">
          <source>Equations can also be typeset underneath the math directive:</source>
          <target state="translated">数学指令の下に数式をタイプセットすることもできます。</target>
        </trans-unit>
        <trans-unit id="b75f0322b44b0e91520f5021f79c37a01c9e121d" translate="yes" xml:space="preserve">
          <source>Equivalent array function.</source>
          <target state="translated">等価な配列関数。</target>
        </trans-unit>
        <trans-unit id="a87b0e23e278c7d5e4e266e84f6badc171df142a" translate="yes" xml:space="preserve">
          <source>Equivalent array method.</source>
          <target state="translated">等価配列法。</target>
        </trans-unit>
        <trans-unit id="1f85d863747d1d952d2380d6f9b0e6bc4a93c6e6" translate="yes" xml:space="preserve">
          <source>Equivalent function</source>
          <target state="translated">等価関数</target>
        </trans-unit>
        <trans-unit id="ec48c460ff53cdf24f427482ba077c38b868cbe6" translate="yes" xml:space="preserve">
          <source>Equivalent function for ndarrays.</source>
          <target state="translated">ndarraysの等価関数。</target>
        </trans-unit>
        <trans-unit id="47b16a4308d5d95c02caa6becddf32961f2329b1" translate="yes" xml:space="preserve">
          <source>Equivalent function in the NumPy module.</source>
          <target state="translated">NumPyモジュールの等価関数。</target>
        </trans-unit>
        <trans-unit id="3fda7b941f8c3619f7cfea52fae50b8fafb8283f" translate="yes" xml:space="preserve">
          <source>Equivalent function in the masked array module.</source>
          <target state="translated">マスクされた配列モジュールの等価関数。</target>
        </trans-unit>
        <trans-unit id="f3946f30225c2c4e0913895a299311328885ca06" translate="yes" xml:space="preserve">
          <source>Equivalent function in the top level NumPy module.</source>
          <target state="translated">トップレベルのNumPyモジュールの等価関数。</target>
        </trans-unit>
        <trans-unit id="e79348928e8ad109f51e4deea501091d1124a6a4" translate="yes" xml:space="preserve">
          <source>Equivalent function in the top-level NumPy module.</source>
          <target state="translated">トップレベルのNumPyモジュールの等価関数。</target>
        </trans-unit>
        <trans-unit id="f012d5b24482ab2f7fe8b36bc8562d2e06cf863d" translate="yes" xml:space="preserve">
          <source>Equivalent function in top-level NumPy module.</source>
          <target state="translated">トップレベルのNumPyモジュールの等価関数。</target>
        </trans-unit>
        <trans-unit id="bb89f40e9f2471ebbc500654e8790a75f09e8680" translate="yes" xml:space="preserve">
          <source>Equivalent function with additional &lt;code&gt;loc&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; arguments for setting the mean and standard deviation.</source>
          <target state="translated">平均と標準偏差を設定するための &lt;code&gt;loc&lt;/code&gt; および &lt;code&gt;scale&lt;/code&gt; 引数が追加された同等の関数。</target>
        </trans-unit>
        <trans-unit id="3fec03561045f830610698c03c4e7cda301e9182" translate="yes" xml:space="preserve">
          <source>Equivalent functionality of &lt;a href=&quot;numpy.add#numpy.add&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numpy.add#numpy.add&quot;&gt; &lt;code&gt;add&lt;/code&gt; と&lt;/a&gt;同等の機能。</target>
        </trans-unit>
        <trans-unit id="73110076e1002b6b052fe8f385604bf0bd306ff9" translate="yes" xml:space="preserve">
          <source>Equivalent method in ndarray</source>
          <target state="translated">ndarrayでの等価法</target>
        </trans-unit>
        <trans-unit id="8b818de9537a41af44762a6ff8c93846b78172ce" translate="yes" xml:space="preserve">
          <source>Equivalent method on ndarray object.</source>
          <target state="translated">ndarrayオブジェクトの等価メソッド。</target>
        </trans-unit>
        <trans-unit id="323a53e2d1eaaaf783c2a6e70d300696fee31861" translate="yes" xml:space="preserve">
          <source>Equivalent method when working on 1-D arrays</source>
          <target state="translated">1次元配列を扱う場合の等価法</target>
        </trans-unit>
        <trans-unit id="198298ece560304dd9cecebb0a6c0ea2bb7a8bae" translate="yes" xml:space="preserve">
          <source>Equivalent method.</source>
          <target state="translated">等価法。</target>
        </trans-unit>
        <trans-unit id="46b37d7b2f299efd2d123535be0f6369732ae724" translate="yes" xml:space="preserve">
          <source>Equivalent ndarray method.</source>
          <target state="translated">等価のndarray法。</target>
        </trans-unit>
        <trans-unit id="c920736bc05ff403de2ed423ca7f0b9c0f3adffb" translate="yes" xml:space="preserve">
          <source>Equivalent of Python &lt;code&gt;//&lt;/code&gt; operator.</source>
          <target state="translated">Python &lt;code&gt;//&lt;/code&gt; 演算子に相当します。</target>
        </trans-unit>
        <trans-unit id="505d790701850092dede13a1225a7d0508099ca4" translate="yes" xml:space="preserve">
          <source>Equivalent of the MATLAB &lt;code&gt;rem&lt;/code&gt; function.</source>
          <target state="translated">MATLABの &lt;code&gt;rem&lt;/code&gt; 関数に相当します。</target>
        </trans-unit>
        <trans-unit id="4cdc670d68d8d05adfb0ac70f3d0ea4670424187" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#c.PyDataType_FLAGCHK&quot;&gt;&lt;code&gt;PyDataType_FLAGCHK&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;dtype&lt;/em&gt;, &lt;a href=&quot;#c.NPY_ITEM_REFCOUNT&quot;&gt;&lt;code&gt;NPY_ITEM_REFCOUNT&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;#c.PyDataType_FLAGCHK&quot;&gt; &lt;code&gt;PyDataType_FLAGCHK&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;dtype&lt;/em&gt;、&lt;a href=&quot;#c.NPY_ITEM_REFCOUNT&quot;&gt; &lt;code&gt;NPY_ITEM_REFCOUNT&lt;/code&gt; &lt;/a&gt;）と同等です。</target>
        </trans-unit>
        <trans-unit id="fee6dbfeac3ceda19730d1e4e0704640fe75ab77" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.all#numpy.ndarray.all&quot;&gt;&lt;code&gt;ndarray.all&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return an array with True elements for every 1-d sub-array of &lt;code&gt;self&lt;/code&gt; defined by &lt;code&gt;axis&lt;/code&gt; in which all the elements are True.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.all#numpy.ndarray.all&quot;&gt; &lt;code&gt;ndarray.all&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。すべての要素がTrueである &lt;code&gt;axis&lt;/code&gt; によって定義された &lt;code&gt;self&lt;/code&gt; 1-dサブ配列ごとにTrue要素を含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="186b0b563cbae838de8810c69312c1eaa62ec654" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.any#numpy.ndarray.any&quot;&gt;&lt;code&gt;ndarray.any&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return an array with True elements for every 1-d sub-array of &lt;em&gt;self&lt;/em&gt; defined by &lt;em&gt;axis&lt;/em&gt; in which any of the elements are True.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.any#numpy.ndarray.any&quot;&gt; &lt;code&gt;ndarray.any&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。要素のいずれかがTrueである&lt;em&gt;軸&lt;/em&gt;によって定義された&lt;em&gt;自己の&lt;/em&gt;1-dサブ配列ごとにTrue要素を含む配列を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f442103406eabff3384a2561e7e4f3b1cb166d5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt;&lt;code&gt;ndarray.argmax&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return the index of the largest element of &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt; &lt;code&gt;ndarray.argmax&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。&lt;em&gt;軸に&lt;/em&gt;沿った&lt;em&gt;自己&lt;/em&gt;の最大要素のインデックスを返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c75a0ddd8d31ee8d0abd1790434d076eb8e7770e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt;&lt;code&gt;ndarray.argmin&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return the index of the smallest element of &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt; &lt;code&gt;ndarray.argmin&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。&lt;em&gt;軸に&lt;/em&gt;沿った&lt;em&gt;自己&lt;/em&gt;の最小要素のインデックスを返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a28fa5901ef493ca3cfeb35f1edc348f4ba70f84" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.argpartition#numpy.ndarray.argpartition&quot;&gt;&lt;code&gt;ndarray.argpartition&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;ktharray&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;kind&lt;/em&gt;). Return an array of indices such that selection of these indices along the given &lt;code&gt;axis&lt;/code&gt; would return a partitioned version of &lt;em&gt;self&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.argpartition#numpy.ndarray.argpartition&quot;&gt; &lt;code&gt;ndarray.argpartition&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;ktharray&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;kind&lt;/em&gt;）と同等です。指定された &lt;code&gt;axis&lt;/code&gt; 沿ってこれらのインデックスを選択すると、&lt;em&gt;selfの&lt;/em&gt;パーティションバージョンが返されるように、インデックスの配列を返します。</target>
        </trans-unit>
        <trans-unit id="e47633b0ba2c1ea2ce577109feb2860147110ce7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.argsort#numpy.ndarray.argsort&quot;&gt;&lt;code&gt;ndarray.argsort&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return an array of indices such that selection of these indices along the given &lt;code&gt;axis&lt;/code&gt; would return a sorted version of &lt;em&gt;self&lt;/em&gt;. If &lt;em&gt;self&lt;/em&gt; -&amp;gt;descr is a data-type with fields defined, then self-&amp;gt;descr-&amp;gt;names is used to determine the sort order. A comparison where the first field is equal will use the second field and so on. To alter the sort order of a structured array, create a new data-type with a different order of names and construct a view of the array with that new data-type.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.argsort#numpy.ndarray.argsort&quot;&gt; &lt;code&gt;ndarray.argsort&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。指定された &lt;code&gt;axis&lt;/code&gt; 沿ってこれらのインデックスを選択すると、ソートされたバージョンの&lt;em&gt;self&lt;/em&gt;が返されるように、インデックスの配列を返します。場合は&lt;em&gt;、自己&lt;/em&gt;- &amp;gt; DESCRは、その後、自己&amp;gt; descr-&amp;gt;名前を定義したフィールドのデータ型は、ソート順を決定するために使用されています。最初のフィールドが等しい場合の比較では、2番目のフィールドが使用されます。構造化配列の並べ替え順序を変更するには、名前の順序が異なる新しいデータ型を作成し、その新しいデータ型で配列のビューを作成します。</target>
        </trans-unit>
        <trans-unit id="ab44c6dfb76d44a22896198277fc1dfa63e19a39" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.byteswap#numpy.ndarray.byteswap&quot;&gt;&lt;code&gt;ndarray.byteswap&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;inplace&lt;/em&gt;). Return an array whose data area is byteswapped. If &lt;em&gt;inplace&lt;/em&gt; is non-zero, then do the byteswap inplace and return a reference to self. Otherwise, create a byteswapped copy and leave self unchanged.</source>
          <target state="translated">相当&lt;a href=&quot;../generated/numpy.ndarray.byteswap#numpy.ndarray.byteswap&quot;&gt; &lt;code&gt;ndarray.byteswap&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;セルフ&lt;/em&gt;、&lt;em&gt;インプレース&lt;/em&gt;）。データ領域がバイトスワップされている配列を返します。場合は&lt;em&gt;インプレースが&lt;/em&gt;ゼロで、その後、バイトスワップのインプレースを行い、自己への参照を返します。それ以外の場合は、バイトスワップされたコピーを作成し、自分自身を変更しないでください。</target>
        </trans-unit>
        <trans-unit id="63580b7937fc29a8cc1a69e6dad1db1d8c003559" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.choose#numpy.ndarray.choose&quot;&gt;&lt;code&gt;ndarray.choose&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;op&lt;/em&gt;, &lt;em&gt;ret&lt;/em&gt;, &lt;em&gt;clipmode&lt;/em&gt;). Create a new array by selecting elements from the sequence of arrays in &lt;em&gt;op&lt;/em&gt; based on the integer values in &lt;em&gt;self&lt;/em&gt;. The arrays must all be broadcastable to the same shape and the entries in &lt;em&gt;self&lt;/em&gt; should be between 0 and len(&lt;em&gt;op&lt;/em&gt;). The output is placed in &lt;em&gt;ret&lt;/em&gt; unless it is &lt;code&gt;NULL&lt;/code&gt; in which case a new output is created. The &lt;em&gt;clipmode&lt;/em&gt; argument determines behavior for when entries in &lt;em&gt;self&lt;/em&gt; are not between 0 and len(&lt;em&gt;op&lt;/em&gt;).</source>
          <target state="translated">相当&lt;a href=&quot;../generated/numpy.ndarray.choose#numpy.ndarray.choose&quot;&gt; &lt;code&gt;ndarray.choose&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;自己&lt;/em&gt;、&lt;em&gt;OP&lt;/em&gt;、&lt;em&gt;RET&lt;/em&gt;、&lt;em&gt;clipmode&lt;/em&gt;）。&lt;em&gt;selfの&lt;/em&gt;整数値に基づいて、&lt;em&gt;opの&lt;/em&gt;配列のシーケンスから要素を選択して、新しい配列を作成します。配列はすべて同じ形状にブロードキャスト可能である必要があり、&lt;em&gt;self&lt;/em&gt;のエントリは0からlen（&lt;em&gt;op&lt;/em&gt;）の間にある必要があります。 &lt;code&gt;NULL&lt;/code&gt; でない限り、出力は&lt;em&gt;retに&lt;/em&gt;配置されます&lt;em&gt;。NULLの&lt;/em&gt;場合、新しい出力が作成されます。&lt;em&gt;clipmodeの&lt;/em&gt;引数は、内のエントリときのための行動を決定する&lt;em&gt;自己が&lt;/em&gt;0とlen（の間ではありません&lt;em&gt;OPを&lt;/em&gt;）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7c3b2ea44431c439616093a9d5ebd74980360b6c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.clip#numpy.ndarray.clip&quot;&gt;&lt;code&gt;ndarray.clip&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;min&lt;/em&gt;, &lt;em&gt;max&lt;/em&gt;). Clip an array, &lt;em&gt;self&lt;/em&gt;, so that values larger than &lt;em&gt;max&lt;/em&gt; are fixed to &lt;em&gt;max&lt;/em&gt; and values less than &lt;em&gt;min&lt;/em&gt; are fixed to &lt;em&gt;min&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.clip#numpy.ndarray.clip&quot;&gt; &lt;code&gt;ndarray.clip&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;min&lt;/em&gt;、&lt;em&gt;max&lt;/em&gt;）と同等です。アレイ、クリップ&lt;em&gt;自己&lt;/em&gt;よりも大きな値ように、&lt;em&gt;maxは&lt;/em&gt;に固定されている&lt;em&gt;最大値&lt;/em&gt;未満と値を&lt;em&gt;最小&lt;/em&gt;に固定されている&lt;em&gt;分&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="48d43c27921059f0a7a10c6b7d33e4ffbe0ee4d6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.compress#numpy.ndarray.compress&quot;&gt;&lt;code&gt;ndarray.compress&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;condition&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt; ). Return the elements along &lt;em&gt;axis&lt;/em&gt; corresponding to elements of &lt;em&gt;condition&lt;/em&gt; that are true.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.compress#numpy.ndarray.compress&quot;&gt; &lt;code&gt;ndarray.compress&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;condition&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。真である&lt;em&gt;条件の&lt;/em&gt;要素に対応する&lt;em&gt;軸に&lt;/em&gt;沿った要素を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9aa772deed9dfab23ce08d5aaf5096e5f550d9a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.conjugate#numpy.ndarray.conjugate&quot;&gt;&lt;code&gt;ndarray.conjugate&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;). Return the complex conjugate of &lt;em&gt;self&lt;/em&gt;. If &lt;em&gt;self&lt;/em&gt; is not of complex data type, then return &lt;em&gt;self&lt;/em&gt; with a reference.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.conjugate#numpy.ndarray.conjugate&quot;&gt; &lt;code&gt;ndarray.conjugate&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;）と同等です。&lt;em&gt;自己&lt;/em&gt;の複素共役を返します。&lt;em&gt;self&lt;/em&gt;が複素数データ型でない場合は、参照を使用して&lt;em&gt;self&lt;/em&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="9e0619959acd54807feb74d65e4fc49e0c39d7c4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.copy#numpy.ndarray.copy&quot;&gt;&lt;code&gt;ndarray.copy&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;fortran&lt;/em&gt;). Make a copy of the &lt;em&gt;old&lt;/em&gt; array. The returned array is always aligned and writeable with data interpreted the same as the old array. If &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_CORDER&quot;&gt;&lt;code&gt;NPY_CORDER&lt;/code&gt;&lt;/a&gt;, then a C-style contiguous array is returned. If &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt;&lt;code&gt;NPY_FORTRANORDER&lt;/code&gt;&lt;/a&gt;, then a Fortran-style contiguous array is returned. If &lt;em&gt;order is&lt;/em&gt;&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt;&lt;code&gt;NPY_ANYORDER&lt;/code&gt;&lt;/a&gt;, then the array returned is Fortran-style contiguous only if the old one is; otherwise, it is C-style contiguous.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.copy#numpy.ndarray.copy&quot;&gt; &lt;code&gt;ndarray.copy&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;fortran&lt;/em&gt;）と同等です。&lt;em&gt;古い&lt;/em&gt;アレイのコピーを作成します。返される配列は常に整列され、古い配列と同じように解釈されるデータで書き込み可能です。&lt;em&gt;order&lt;/em&gt;が&lt;a href=&quot;#c.NPY_CORDER&quot;&gt; &lt;code&gt;NPY_CORDER&lt;/code&gt; の&lt;/a&gt;場合、Cスタイルの連続した配列が返されます。&lt;em&gt;order&lt;/em&gt;が&lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt; &lt;code&gt;NPY_FORTRANORDER&lt;/code&gt; の&lt;/a&gt;場合、Fortranスタイルの連続配列が返されます。&lt;em&gt;orderが&lt;/em&gt;&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt; &lt;code&gt;NPY_ANYORDER&lt;/code&gt; の&lt;/a&gt;場合、返される配列は、古い配列が;である場合にのみ、Fortranスタイルの連続です。それ以外の場合は、Cスタイルの連続です。</target>
        </trans-unit>
        <trans-unit id="a0c3cd7eb6fa6d356c2901bb9f6d3ba8cab9d89e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.cumprod#numpy.ndarray.cumprod&quot;&gt;&lt;code&gt;ndarray.cumprod&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return 1-d cumulative products of elements in &lt;code&gt;self&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. Perform the product after converting data to data type &lt;code&gt;rtype&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.cumprod#numpy.ndarray.cumprod&quot;&gt; &lt;code&gt;ndarray.cumprod&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。 &lt;code&gt;axis&lt;/code&gt; 沿った &lt;code&gt;self&lt;/code&gt; の要素の1-d累積積を返します。データをデータ型 &lt;code&gt;rtype&lt;/code&gt; に変換してから製品を実行してください。</target>
        </trans-unit>
        <trans-unit id="cb82bf0e510f4d18fb05a89ac99cab0f063a9efd" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.cumsum#numpy.ndarray.cumsum&quot;&gt;&lt;code&gt;ndarray.cumsum&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return cumulative 1-d sums of elements in &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;. Perform the sum after converting data to data type &lt;em&gt;rtype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.cumsum#numpy.ndarray.cumsum&quot;&gt; &lt;code&gt;ndarray.cumsum&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。&lt;em&gt;軸に&lt;/em&gt;沿った&lt;em&gt;自己&lt;/em&gt;の要素の累積1-d合計を返し&lt;em&gt;ます&lt;/em&gt;。データをデータ型&lt;em&gt;rtype&lt;/em&gt;に変換した後、合計を実行します。</target>
        </trans-unit>
        <trans-unit id="147baa3bca301ee2641ca21a0eba77e7a019e912" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.diagonal#numpy.ndarray.diagonal&quot;&gt;&lt;code&gt;ndarray.diagonal&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;offset&lt;/em&gt;, &lt;em&gt;axis1&lt;/em&gt;, &lt;em&gt;axis2&lt;/em&gt; ). Return the &lt;em&gt;offset&lt;/em&gt; diagonals of the 2-d arrays defined by &lt;em&gt;axis1&lt;/em&gt; and &lt;em&gt;axis2&lt;/em&gt;.</source>
          <target state="translated">相当&lt;a href=&quot;../generated/numpy.ndarray.diagonal#numpy.ndarray.diagonal&quot;&gt; &lt;code&gt;ndarray.diagonal&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;自己&lt;/em&gt;、&lt;em&gt;オフセット&lt;/em&gt;、&lt;em&gt;AXIS1&lt;/em&gt;、&lt;em&gt;Axis2の&lt;/em&gt;）。&lt;em&gt;axis1&lt;/em&gt;と&lt;em&gt;axis2で&lt;/em&gt;定義された2次元配列の&lt;em&gt;オフセット&lt;/em&gt;対角線を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8a8dee6eb2f62046701960813747a2ce4d3c4eb9" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.flatten#numpy.ndarray.flatten&quot;&gt;&lt;code&gt;ndarray.flatten&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;order&lt;/em&gt;). Return a 1-d copy of the array. If &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt;&lt;code&gt;NPY_FORTRANORDER&lt;/code&gt;&lt;/a&gt; the elements are scanned out in Fortran order (first-dimension varies the fastest). If &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_CORDER&quot;&gt;&lt;code&gt;NPY_CORDER&lt;/code&gt;&lt;/a&gt;, the elements of &lt;code&gt;self&lt;/code&gt; are scanned in C-order (last dimension varies the fastest). If &lt;em&gt;order&lt;/em&gt;&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt;&lt;code&gt;NPY_ANYORDER&lt;/code&gt;&lt;/a&gt;, then the result of &lt;a href=&quot;#c.PyArray_ISFORTRAN&quot;&gt;&lt;code&gt;PyArray_ISFORTRAN&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;) is used to determine which order to flatten.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.flatten#numpy.ndarray.flatten&quot;&gt; &lt;code&gt;ndarray.flatten&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;order&lt;/em&gt;）と同等です。配列の1次元コピーを返します。&lt;em&gt;順序&lt;/em&gt;が&lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt; &lt;code&gt;NPY_FORTRANORDER&lt;/code&gt; &lt;/a&gt;の場合、要素はFortranの順序でスキャンされます（一次元が最も速く変化します）。&lt;em&gt;順序&lt;/em&gt;が&lt;a href=&quot;#c.NPY_CORDER&quot;&gt; &lt;code&gt;NPY_CORDER&lt;/code&gt; の&lt;/a&gt;場合、 &lt;code&gt;self&lt;/code&gt; の要素はC順序でスキャンされます（最後の次元が最も速く変化します）。&lt;em&gt;順序が&lt;/em&gt;&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt; &lt;code&gt;NPY_ANYORDER&lt;/code&gt; の&lt;/a&gt;場合、&lt;a href=&quot;#c.PyArray_ISFORTRAN&quot;&gt; &lt;code&gt;PyArray_ISFORTRAN&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;）の結果を使用して、フラット化する順序を決定します。</target>
        </trans-unit>
        <trans-unit id="55b8b003a6301beae59c2337672b7d873a7a30b4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.getfield#numpy.ndarray.getfield&quot;&gt;&lt;code&gt;ndarray.getfield&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;dtype&lt;/em&gt;, &lt;em&gt;offset&lt;/em&gt;). This function &lt;a href=&quot;https://docs.python.org/3/c-api/intro.html?reference-count-details&quot;&gt;steals a reference&lt;/a&gt; to &lt;code&gt;PyArray_Descr&lt;/code&gt; and returns a new array of the given &lt;code&gt;dtype&lt;/code&gt; using the data in the current array at a specified &lt;code&gt;offset&lt;/code&gt; in bytes. The &lt;code&gt;offset&lt;/code&gt; plus the itemsize of the new array type must be less than &lt;code&gt;self
-&amp;gt;descr-&amp;gt;elsize&lt;/code&gt; or an error is raised. The same shape and strides as the original array are used. Therefore, this function has the effect of returning a field from a structured array. But, it can also be used to select specific bytes or groups of bytes from any array type.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.getfield#numpy.ndarray.getfield&quot;&gt; &lt;code&gt;ndarray.getfield&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;dtype&lt;/em&gt;、&lt;em&gt;offset&lt;/em&gt;）と同等です。この関数は、 &lt;code&gt;PyArray_Descr&lt;/code&gt; へ&lt;a href=&quot;https://docs.python.org/3/c-api/intro.html?reference-count-details&quot;&gt;の参照&lt;/a&gt;を盗み、バイト単位で指定された &lt;code&gt;offset&lt;/code&gt; で現在の配列のデータを使用して、指定された &lt;code&gt;dtype&lt;/code&gt; の新しい配列を返します。新しい配列タイプの &lt;code&gt;offset&lt;/code&gt; とアイテムサイズは、 &lt;code&gt;self -&amp;gt;descr-&amp;gt;elsize&lt;/code&gt; 未満である必要があります。そうでない場合、エラーが発生します。元のアレイと同じ形状とストライドが使用されます。したがって、この関数には、構造化配列からフィールドを返す効果があります。ただし、任意の配列タイプから特定のバイトまたはバイトのグループを選択するためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="e4d22054d186b1f1ff23d804468173438990f202" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.max#numpy.ndarray.max&quot;&gt;&lt;code&gt;ndarray.max&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Returns the largest element of &lt;em&gt;self&lt;/em&gt; along the given &lt;em&gt;axis&lt;/em&gt;. When the result is a single element, returns a numpy scalar instead of an ndarray.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.max#numpy.ndarray.max&quot;&gt; &lt;code&gt;ndarray.max&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。指定された&lt;em&gt;軸に&lt;/em&gt;沿った&lt;em&gt;自己&lt;/em&gt;の最大要素を返します。結果が単一要素の場合、ndarrayの代わりにnumpyスカラーを返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d38f65f39197f34563c038f540e3b44a0d2f6ba" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.mean#numpy.ndarray.mean&quot;&gt;&lt;code&gt;ndarray.mean&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Returns the mean of the elements along the given &lt;em&gt;axis&lt;/em&gt;, using the enumerated type &lt;em&gt;rtype&lt;/em&gt; as the data type to sum in. Default sum behavior is obtained using &lt;a href=&quot;dtype#c.NPY_NOTYPE&quot;&gt;&lt;code&gt;NPY_NOTYPE&lt;/code&gt;&lt;/a&gt; for &lt;em&gt;rtype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.mean#numpy.ndarray.mean&quot;&gt; &lt;code&gt;ndarray.mean&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。列挙型&lt;em&gt;rtype&lt;/em&gt;を合計するデータ型として使用して、指定された&lt;em&gt;軸&lt;/em&gt;に沿った要素の平均を返します。デフォルトの合計動作は、&lt;em&gt;rtypeの&lt;/em&gt;&lt;a href=&quot;dtype#c.NPY_NOTYPE&quot;&gt; &lt;code&gt;NPY_NOTYPE&lt;/code&gt; &lt;/a&gt;を使用して取得されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5cb706fff5203c363163a51434cc7adef7ffc29f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.min#numpy.ndarray.min&quot;&gt;&lt;code&gt;ndarray.min&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return the smallest element of &lt;em&gt;self&lt;/em&gt; along the given &lt;em&gt;axis&lt;/em&gt;. When the result is a single element, returns a numpy scalar instead of an ndarray.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.min#numpy.ndarray.min&quot;&gt; &lt;code&gt;ndarray.min&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。指定された&lt;em&gt;軸に&lt;/em&gt;沿って&lt;em&gt;自己&lt;/em&gt;の最小要素を返し&lt;em&gt;ます&lt;/em&gt;。結果が単一要素の場合、ndarrayの代わりにnumpyスカラーを返します。</target>
        </trans-unit>
        <trans-unit id="d5d5265b484ee101637dbdbbeb657d0f5063ebd7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.nonzero#numpy.ndarray.nonzero&quot;&gt;&lt;code&gt;ndarray.nonzero&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;). Returns a tuple of index arrays that select elements of &lt;em&gt;self&lt;/em&gt; that are nonzero. If (nd= &lt;a href=&quot;#c.PyArray_NDIM&quot;&gt;&lt;code&gt;PyArray_NDIM&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;self&lt;/code&gt; ))==1, then a single index array is returned. The index arrays have data type &lt;a href=&quot;dtype#c.NPY_INTP&quot;&gt;&lt;code&gt;NPY_INTP&lt;/code&gt;&lt;/a&gt;. If a tuple is returned (nd</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.nonzero#numpy.ndarray.nonzero&quot;&gt; &lt;code&gt;ndarray.nonzero&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;）と同等です。ゼロ以外の&lt;em&gt;selfの&lt;/em&gt;要素を選択するインデックス配列のタプルを返します。（nd = &lt;a href=&quot;#c.PyArray_NDIM&quot;&gt; &lt;code&gt;PyArray_NDIM&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;self&lt;/code&gt; ））== 1の場合、単一のインデックス配列が返されます。インデックス配列のデータ型は&lt;a href=&quot;dtype#c.NPY_INTP&quot;&gt; &lt;code&gt;NPY_INTP&lt;/code&gt; &lt;/a&gt;です。タプルが返された場合（nd</target>
        </trans-unit>
        <trans-unit id="404bdbd3b8a1b96a6c46adc73debf37dfd647756" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.partition#numpy.ndarray.partition&quot;&gt;&lt;code&gt;ndarray.partition&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;ktharray&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;kind&lt;/em&gt;). Partitions the array so that the values of the element indexed by &lt;em&gt;ktharray&lt;/em&gt; are in the positions they would be if the array is fully sorted and places all elements smaller than the kth before and all elements equal or greater after the kth element. The ordering of all elements within the partitions is undefined. If &lt;em&gt;self&lt;/em&gt;-&amp;gt;descr is a data-type with fields defined, then self-&amp;gt;descr-&amp;gt;names is used to determine the sort order. A comparison where the first field is equal will use the second field and so on. To alter the sort order of a structured array, create a new data-type with a different order of names and construct a view of the array with that new data-type. Returns zero on success and -1 on failure.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.partition#numpy.ndarray.partition&quot;&gt; &lt;code&gt;ndarray.partition&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;ktharray&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;kind&lt;/em&gt;）と同等です。&lt;em&gt;ktharrayで&lt;/em&gt;インデックス付けされた要素の値が、配列が完全に並べ替えられた場合の位置にあるように配列を分割し、すべての要素をk番目より前に小さく、すべての要素をk番目以降に配置します。パーティション内のすべての要素の順序は定義されていません。&lt;em&gt;自己の&lt;/em&gt;場合&lt;em&gt;&lt;/em&gt;-&amp;gt; descrはフィールドが定義されたデータ型であり、self-&amp;gt; descr-&amp;gt; namesを使用してソート順を決定します。最初のフィールドが等しい場合の比較では、2番目のフィールドが使用されます。構造化配列の並べ替え順序を変更するには、名前の順序が異なる新しいデータ型を作成し、その新しいデータ型で配列のビューを作成します。成功した場合はゼロを返し、失敗した場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="c549a447e1ab678178d605e0abed17f0cd61d094" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.prod#numpy.ndarray.prod&quot;&gt;&lt;code&gt;ndarray.prod&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return 1-d products of elements in &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;. Perform the product after converting data to data type &lt;em&gt;rtype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.prod#numpy.ndarray.prod&quot;&gt; &lt;code&gt;ndarray.prod&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。&lt;em&gt;軸に&lt;/em&gt;沿って&lt;em&gt;自己&lt;/em&gt;の要素の1-d積を返し&lt;em&gt;ます&lt;/em&gt;。データをデータ型&lt;em&gt;rtype&lt;/em&gt;に変換してから製品を実行して&lt;em&gt;ください&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="50e5592224385bd5a5a47c4e8db5171ddcc2ccb3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.ptp#numpy.ndarray.ptp&quot;&gt;&lt;code&gt;ndarray.ptp&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return the difference between the largest element of &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt; and the smallest element of &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;. When the result is a single element, returns a numpy scalar instead of an ndarray.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.ptp#numpy.ndarray.ptp&quot;&gt; &lt;code&gt;ndarray.ptp&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。最大の要素との間の差を返す&lt;em&gt;自己&lt;/em&gt;沿って&lt;em&gt;軸&lt;/em&gt;との最小要素&lt;em&gt;自己&lt;/em&gt;沿って&lt;em&gt;軸&lt;/em&gt;。結果が単一要素の場合、ndarrayの代わりにnumpyスカラーを返します。</target>
        </trans-unit>
        <trans-unit id="8518311e2b7b6ac094e9b94bd62860a33aa8bf47" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.repeat#numpy.ndarray.repeat&quot;&gt;&lt;code&gt;ndarray.repeat&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;op&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Copy the elements of &lt;em&gt;self&lt;/em&gt;, &lt;em&gt;op&lt;/em&gt; times along the given &lt;em&gt;axis&lt;/em&gt;. Either &lt;em&gt;op&lt;/em&gt; is a scalar integer or a sequence of length &lt;em&gt;self&lt;/em&gt; -&amp;gt;dimensions[ &lt;em&gt;axis&lt;/em&gt; ] indicating how many times to repeat each item along the axis.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.repeat#numpy.ndarray.repeat&quot;&gt; &lt;code&gt;ndarray.repeat&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;op&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。与えられた&lt;em&gt;軸に&lt;/em&gt;沿って&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;op&lt;/em&gt;時間の要素をコピーします。いずれかの&lt;em&gt;OPは&lt;/em&gt;、スカラー整数または長さの配列である&lt;em&gt;自己&lt;/em&gt;&amp;gt;寸法[ -&lt;em&gt;軸&lt;/em&gt;の軸に沿って各項目を繰り返す回数を示します]。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d8cf34534cc24beb73c77b84496c087a2293d28" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.reshape#numpy.ndarray.reshape&quot;&gt;&lt;code&gt;ndarray.reshape&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;shape&lt;/em&gt;) where &lt;em&gt;shape&lt;/em&gt; is a sequence. Converts &lt;em&gt;shape&lt;/em&gt; to a &lt;a href=&quot;types-and-structures#c.PyArray_Dims&quot;&gt;&lt;code&gt;PyArray_Dims&lt;/code&gt;&lt;/a&gt; structure and calls &lt;a href=&quot;#c.PyArray_Newshape&quot;&gt;&lt;code&gt;PyArray_Newshape&lt;/code&gt;&lt;/a&gt; internally. For back-ward compatibility &amp;ndash; Not recommended</source>
          <target state="translated">&lt;em&gt;shape&lt;/em&gt;がシーケンスである&lt;a href=&quot;../generated/numpy.ndarray.reshape#numpy.ndarray.reshape&quot;&gt; &lt;code&gt;ndarray.reshape&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;shape&lt;/em&gt;）と同等です。&lt;em&gt;形状&lt;/em&gt;を&lt;a href=&quot;types-and-structures#c.PyArray_Dims&quot;&gt; &lt;code&gt;PyArray_Dims&lt;/code&gt; &lt;/a&gt;構造に変換し、内部で&lt;a href=&quot;#c.PyArray_Newshape&quot;&gt; &lt;code&gt;PyArray_Newshape&lt;/code&gt; &lt;/a&gt;を呼び出します。後方互換性のため&amp;ndash;推奨されません&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="638611d108c9a9ce025011cf0fefaaa249e16115" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.resize#numpy.ndarray.resize&quot;&gt;&lt;code&gt;ndarray.resize&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;newshape&lt;/em&gt;, refcheck &lt;code&gt;=&lt;/code&gt;&lt;em&gt;refcheck&lt;/em&gt;, order= fortran ). This function only works on single-segment arrays. It changes the shape of &lt;em&gt;self&lt;/em&gt; inplace and will reallocate the memory for &lt;em&gt;self&lt;/em&gt; if &lt;em&gt;newshape&lt;/em&gt; has a different total number of elements then the old shape. If reallocation is necessary, then &lt;em&gt;self&lt;/em&gt; must own its data, have &lt;em&gt;self&lt;/em&gt; - &lt;code&gt;&amp;gt;base==NULL&lt;/code&gt;, have &lt;em&gt;self&lt;/em&gt; - &lt;code&gt;&amp;gt;weakrefs==NULL&lt;/code&gt;, and (unless refcheck is 0) not be referenced by any other array. The fortran argument can be &lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt;&lt;code&gt;NPY_ANYORDER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_CORDER&quot;&gt;&lt;code&gt;NPY_CORDER&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt;&lt;code&gt;NPY_FORTRANORDER&lt;/code&gt;&lt;/a&gt;. It currently has no effect. Eventually it could be used to determine how the resize operation should view the data when constructing a differently-dimensioned array. Returns None on success and NULL on error.</source>
          <target state="translated">相当&lt;a href=&quot;../generated/numpy.ndarray.resize#numpy.ndarray.resize&quot;&gt; &lt;code&gt;ndarray.resize&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;自己&lt;/em&gt;、&lt;em&gt;newshape&lt;/em&gt;、refcheck &lt;code&gt;=&lt;/code&gt; &lt;em&gt;refcheck&lt;/em&gt;、順序= FORTRAN）を。この関数は、単一セグメントの配列でのみ機能します。これは、の形状変化し&lt;em&gt;、自己&lt;/em&gt;インプレースをとするためにメモリを再割り当てします&lt;em&gt;自己&lt;/em&gt;場合&lt;em&gt;newshapeは&lt;/em&gt;、その後の要素の異なる合計数古い形状を有しています。再配置が必要である場合、&lt;em&gt;自己&lt;/em&gt;のデータを所有している必要があり、持っている&lt;em&gt;自己&lt;/em&gt;- &lt;code&gt;&amp;gt;base==NULL&lt;/code&gt; 有する&lt;em&gt;自己&lt;/em&gt;- &lt;code&gt;&amp;gt;weakrefs==NULL&lt;/code&gt; 、及び（refcheckが0でない限り）任意の他の配列によって参照されません。 FORTRAN引数は、することができ&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt; &lt;code&gt;NPY_ANYORDER&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_CORDER&quot;&gt; &lt;code&gt;NPY_CORDER&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt; &lt;code&gt;NPY_FORTRANORDER&lt;/code&gt; &lt;/a&gt;。現在、効果はありません。最終的には、異なる次元の配列を作成するときに、サイズ変更操作でデータをどのように表示するかを決定するために使用できます。成功した場合はNoneを返し、エラーの場合はNULLを返します。</target>
        </trans-unit>
        <trans-unit id="54966ab6c4e29db133f8104359b27e76b17c469a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.round#numpy.ndarray.round&quot;&gt;&lt;code&gt;ndarray.round&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;decimals&lt;/em&gt;, &lt;em&gt;out&lt;/em&gt;). Returns the array with elements rounded to the nearest decimal place. The decimal place is defined as the</source>
          <target state="translated">相当&lt;a href=&quot;../generated/numpy.ndarray.round#numpy.ndarray.round&quot;&gt; &lt;code&gt;ndarray.round&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;自己&lt;/em&gt;、&lt;em&gt;小数&lt;/em&gt;、&lt;em&gt;アウト&lt;/em&gt;）。要素を小数点以下第2位で四捨五入した配列を返します。小数点以下の桁数は、</target>
        </trans-unit>
        <trans-unit id="ec01042d1895112ebd1035318c0017010dd4e832" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.searchsorted#numpy.ndarray.searchsorted&quot;&gt;&lt;code&gt;ndarray.searchsorted&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;values&lt;/em&gt;, &lt;em&gt;side&lt;/em&gt;, &lt;em&gt;perm&lt;/em&gt;). Assuming &lt;em&gt;self&lt;/em&gt; is a 1-d array in ascending order, then the output is an array of indices the same shape as &lt;em&gt;values&lt;/em&gt; such that, if the elements in &lt;em&gt;values&lt;/em&gt; were inserted before the indices, the order of &lt;em&gt;self&lt;/em&gt; would be preserved. No checking is done on whether or not self is in ascending order.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.searchsorted#numpy.ndarray.searchsorted&quot;&gt; &lt;code&gt;ndarray.searchsorted&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;values&lt;/em&gt;、&lt;em&gt;side&lt;/em&gt;、&lt;em&gt;perm&lt;/em&gt;）と同等です。仮定&lt;em&gt;自己&lt;/em&gt;昇順に1次元配列され、出力は同じ形状インデックスの配列である&lt;em&gt;値&lt;/em&gt;の要素ならばそのようなことは&lt;em&gt;値が&lt;/em&gt;インデックスの前に挿入し、順&lt;em&gt;自己が&lt;/em&gt;保持されることになります。自己が昇順であるかどうかのチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="cef7e5af80a428c5254d2fef178ea505c8c19ead" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.setfield#numpy.ndarray.setfield&quot;&gt;&lt;code&gt;ndarray.setfield&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;val&lt;/em&gt;, &lt;em&gt;dtype&lt;/em&gt;, &lt;em&gt;offset&lt;/em&gt; ). Set the field starting at &lt;em&gt;offset&lt;/em&gt; in bytes and of the given &lt;em&gt;dtype&lt;/em&gt; to &lt;em&gt;val&lt;/em&gt;. The &lt;em&gt;offset&lt;/em&gt; plus &lt;em&gt;dtype&lt;/em&gt; -&amp;gt;elsize must be less than &lt;em&gt;self&lt;/em&gt; -&amp;gt;descr-&amp;gt;elsize or an error is raised. Otherwise, the &lt;em&gt;val&lt;/em&gt; argument is converted to an array and copied into the field pointed to. If necessary, the elements of &lt;em&gt;val&lt;/em&gt; are repeated to fill the destination array, But, the number of elements in the destination must be an integer multiple of the number of elements in &lt;em&gt;val&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.setfield#numpy.ndarray.setfield&quot;&gt; &lt;code&gt;ndarray.setfield&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;val&lt;/em&gt;、&lt;em&gt;dtype&lt;/em&gt;、&lt;em&gt;offset&lt;/em&gt;）と同等です。バイト単位の&lt;em&gt;オフセット&lt;/em&gt;で始まり、指定された&lt;em&gt;dtypeのフィールド&lt;/em&gt;を&lt;em&gt;valに設定し&lt;/em&gt;ます。&lt;em&gt;オフセット&lt;/em&gt;プラス&lt;em&gt;DTYPE&lt;/em&gt; - &amp;gt; elsize未満でなければならない&lt;em&gt;自己&lt;/em&gt;&amp;gt; descr-&amp;gt; elsizeまたはエラーが発生しました- 。それ以外の場合、&lt;em&gt;val&lt;/em&gt;引数は配列に変換され、ポイントされたフィールドにコピーされます。必要に応じて、&lt;em&gt;val&lt;/em&gt;の要素を繰り返して宛先配列を埋めますが、宛先の要素の数は、の要素の数の整数倍である必要があります。&lt;em&gt;val&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5a3c3255647be24898e308dd8ac21dadefba0c0a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.sort#numpy.ndarray.sort&quot;&gt;&lt;code&gt;ndarray.sort&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;kind&lt;/em&gt;). Return an array with the items of &lt;em&gt;self&lt;/em&gt; sorted along &lt;em&gt;axis&lt;/em&gt;. The array is sorted using the algorithm denoted by &lt;em&gt;kind&lt;/em&gt;, which is an integer/enum pointing to the type of sorting algorithms used.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.sort#numpy.ndarray.sort&quot;&gt; &lt;code&gt;ndarray.sort&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;kind&lt;/em&gt;）と同等です。&lt;em&gt;軸に&lt;/em&gt;沿って&lt;em&gt;自己&lt;/em&gt;ソートされたアイテムを含む配列を返し&lt;em&gt;ます&lt;/em&gt;。配列は、&lt;em&gt;kind&lt;/em&gt;で示されるアルゴリズムを使用してソートされます。これは、使用されるソートアルゴリズムのタイプを指す整数/列挙型です。</target>
        </trans-unit>
        <trans-unit id="27a6b11953d97b15697fad15568b370248cfeb20" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.squeeze#numpy.ndarray.squeeze&quot;&gt;&lt;code&gt;ndarray.squeeze&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;). Return a new view of &lt;em&gt;self&lt;/em&gt; with all of the dimensions of length 1 removed from the shape.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.squeeze#numpy.ndarray.squeeze&quot;&gt; &lt;code&gt;ndarray.squeeze&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;）と同等です。長さ1のすべての寸法を形状から削除して、&lt;em&gt;自己の&lt;/em&gt;新しいビューを返します。</target>
        </trans-unit>
        <trans-unit id="862af43d2c6b0a55c85e6d3a6b411873c5226258" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.std#numpy.ndarray.std&quot;&gt;&lt;code&gt;ndarray.std&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return the standard deviation using data along &lt;em&gt;axis&lt;/em&gt; converted to data type &lt;em&gt;rtype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.std#numpy.ndarray.std&quot;&gt; &lt;code&gt;ndarray.std&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。データ型&lt;em&gt;rtypeに&lt;/em&gt;変換された&lt;em&gt;軸に&lt;/em&gt;沿ったデータを使用して標準偏差を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e292f5ba0e99a5f16bcc2829ab5d9470ad0f4d13" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.sum#numpy.ndarray.sum&quot;&gt;&lt;code&gt;ndarray.sum&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return 1-d vector sums of elements in &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;. Perform the sum after converting data to data type &lt;em&gt;rtype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.sum#numpy.ndarray.sum&quot;&gt; &lt;code&gt;ndarray.sum&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。&lt;em&gt;軸に&lt;/em&gt;沿った&lt;em&gt;自己&lt;/em&gt;の要素の1次元ベクトル和を返し&lt;em&gt;ます&lt;/em&gt;。データをデータ型&lt;em&gt;rtype&lt;/em&gt;に変換した後、合計を実行します。</target>
        </trans-unit>
        <trans-unit id="246fe22eecb98bac6eed58c36c5c002cc77b5ad9" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.swapaxes#numpy.ndarray.swapaxes&quot;&gt;&lt;code&gt;ndarray.swapaxes&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;a1&lt;/em&gt;, &lt;em&gt;a2&lt;/em&gt;). The returned array is a new view of the data in &lt;em&gt;self&lt;/em&gt; with the given axes, &lt;em&gt;a1&lt;/em&gt; and &lt;em&gt;a2&lt;/em&gt;, swapped.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.swapaxes#numpy.ndarray.swapaxes&quot;&gt; &lt;code&gt;ndarray.swapaxes&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;a1&lt;/em&gt;、&lt;em&gt;a2&lt;/em&gt;）と同等です。返される配列は、データの新しいビューである&lt;em&gt;自己&lt;/em&gt;所与軸と&lt;em&gt;A1&lt;/em&gt;と&lt;em&gt;A2&lt;/em&gt;スワップ、。</target>
        </trans-unit>
        <trans-unit id="a390cc4ddaa841114316d31bea2078c5a16e1cf6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.take#numpy.ndarray.take&quot;&gt;&lt;code&gt;ndarray.take&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;indices&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;ret&lt;/em&gt;, &lt;em&gt;clipmode&lt;/em&gt;) except &lt;em&gt;axis&lt;/em&gt; =None in Python is obtained by setting &lt;em&gt;axis&lt;/em&gt; = &lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt;&lt;code&gt;NPY_MAXDIMS&lt;/code&gt;&lt;/a&gt; in C. Extract the items from self indicated by the integer-valued &lt;em&gt;indices&lt;/em&gt; along the given &lt;em&gt;axis.&lt;/em&gt; The clipmode argument can be &lt;a href=&quot;#c.NPY_RAISE&quot;&gt;&lt;code&gt;NPY_RAISE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_WRAP&quot;&gt;&lt;code&gt;NPY_WRAP&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#c.NPY_CLIP&quot;&gt;&lt;code&gt;NPY_CLIP&lt;/code&gt;&lt;/a&gt; to indicate what to do with out-of-bound indices. The &lt;em&gt;ret&lt;/em&gt; argument can specify an output array rather than having one created internally.</source>
          <target state="translated">相当&lt;a href=&quot;../generated/numpy.ndarray.take#numpy.ndarray.take&quot;&gt; &lt;code&gt;ndarray.take&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;自己&lt;/em&gt;、&lt;em&gt;インデックス&lt;/em&gt;、&lt;em&gt;軸&lt;/em&gt;、&lt;em&gt;RET&lt;/em&gt;、&lt;em&gt;clipmode&lt;/em&gt;除く）&lt;em&gt;軸&lt;/em&gt;= Pythonでいずれも設定することによって得られていない&lt;em&gt;軸&lt;/em&gt;= &lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt; &lt;code&gt;NPY_MAXDIMS&lt;/code&gt; を&lt;/a&gt;自己が整数値で示さから項目を抽出Cで&lt;em&gt;指数&lt;/em&gt;所与沿って&lt;em&gt;軸。&lt;/em&gt; clipmode引数は、&lt;a href=&quot;#c.NPY_RAISE&quot;&gt; &lt;code&gt;NPY_RAISE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_WRAP&quot;&gt; &lt;code&gt;NPY_WRAP&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#c.NPY_CLIP&quot;&gt; &lt;code&gt;NPY_CLIP&lt;/code&gt; の&lt;/a&gt;いずれかで、範囲外のインデックスをどう処理するかを示します。&lt;em&gt;RET&lt;/em&gt;引数ではなく、内部で作成された1つを有するより出力配列を指定することができます。</target>
        </trans-unit>
        <trans-unit id="7206ce6e4a585b31fefc3d225467d40239cdb106" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.tobytes#numpy.ndarray.tobytes&quot;&gt;&lt;code&gt;ndarray.tobytes&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;order&lt;/em&gt;). Return the bytes of this array in a Python string.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.tobytes#numpy.ndarray.tobytes&quot;&gt; &lt;code&gt;ndarray.tobytes&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;order&lt;/em&gt;）と同等です。この配列のバイトをPython文字列で返します。</target>
        </trans-unit>
        <trans-unit id="171c56ed06f2b8f601e0836c87ae1d6a49d81221" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.tolist#numpy.ndarray.tolist&quot;&gt;&lt;code&gt;ndarray.tolist&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;). Return a nested Python list from &lt;em&gt;self&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.tolist#numpy.ndarray.tolist&quot;&gt; &lt;code&gt;ndarray.tolist&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;）と同等です。ネストされたPythonリストを&lt;em&gt;self&lt;/em&gt;から返します。</target>
        </trans-unit>
        <trans-unit id="d77e40fb42cd93f8c483ffa7d7241b393d0e4ae3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.trace#numpy.ndarray.trace&quot;&gt;&lt;code&gt;ndarray.trace&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;offset&lt;/em&gt;, &lt;em&gt;axis1&lt;/em&gt;, &lt;em&gt;axis2&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return the sum (using &lt;em&gt;rtype&lt;/em&gt; as the data type of summation) over the &lt;em&gt;offset&lt;/em&gt; diagonal elements of the 2-d arrays defined by &lt;em&gt;axis1&lt;/em&gt; and &lt;em&gt;axis2&lt;/em&gt; variables. A positive offset chooses diagonals above the main diagonal. A negative offset selects diagonals below the main diagonal.</source>
          <target state="translated">相当&lt;a href=&quot;../generated/numpy.ndarray.trace#numpy.ndarray.trace&quot;&gt; &lt;code&gt;ndarray.trace&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;自己&lt;/em&gt;、&lt;em&gt;オフセット&lt;/em&gt;、&lt;em&gt;AXIS1&lt;/em&gt;、&lt;em&gt;Axis2の&lt;/em&gt;、&lt;em&gt;RTYPE&lt;/em&gt;）。 （使用した和を返す&lt;em&gt;RTYPEを&lt;/em&gt;にわたる合計のデータ・タイプのような）&lt;em&gt;オフセット&lt;/em&gt;によって定義された2次元配列の対角要素&lt;em&gt;AXIS1&lt;/em&gt;と&lt;em&gt;Axis2の&lt;/em&gt;変数。正のオフセットは、主対角線より上の対角線を選択します。負のオフセットは、主対角線の下の対角線を選択します。</target>
        </trans-unit>
        <trans-unit id="9dd34a2c83d97a0f513db9230449465e813314c6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.transpose#numpy.ndarray.transpose&quot;&gt;&lt;code&gt;ndarray.transpose&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;permute&lt;/em&gt;). Permute the axes of the ndarray object &lt;em&gt;self&lt;/em&gt; according to the data structure &lt;em&gt;permute&lt;/em&gt; and return the result. If &lt;em&gt;permute&lt;/em&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the resulting array has its axes reversed. For example if &lt;em&gt;self&lt;/em&gt; has shape</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.transpose#numpy.ndarray.transpose&quot;&gt; &lt;code&gt;ndarray.transpose&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;permute&lt;/em&gt;）と同等です。データ構造&lt;em&gt;permute&lt;/em&gt;に従って、ndarrayオブジェクト&lt;em&gt;self&lt;/em&gt;の軸を並べ替え、結果を返します。&lt;em&gt;順列&lt;/em&gt;が &lt;code&gt;NULL&lt;/code&gt; の場合、結果の配列の軸は逆になります。たとえば、&lt;em&gt;自己&lt;/em&gt;が形をしている場合&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b13fb477c1c38e7bfcb6352e8ffc5f4bb87dd24f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../generated/numpy.ndarray.view#numpy.ndarray.view&quot;&gt;&lt;code&gt;ndarray.view&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;dtype&lt;/em&gt;). Return a new view of the array &lt;em&gt;self&lt;/em&gt; as possibly a different data-type, &lt;em&gt;dtype&lt;/em&gt;, and different array subclass &lt;em&gt;ptype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../generated/numpy.ndarray.view#numpy.ndarray.view&quot;&gt; &lt;code&gt;ndarray.view&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;dtype&lt;/em&gt;）と同等です。配列&lt;em&gt;selfの&lt;/em&gt;新しいビューを、おそらく異なるデータ型、&lt;em&gt;dtype&lt;/em&gt;、および異なる配列サブクラス&lt;em&gt;ptype&lt;/em&gt;として&lt;em&gt;返し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e3ecf3d3dd70eafb08906a1ad49ac399520f10f8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.all#numpy.ndarray.all&quot;&gt;&lt;code&gt;ndarray.all&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return an array with True elements for every 1-d sub-array of &lt;code&gt;self&lt;/code&gt; defined by &lt;code&gt;axis&lt;/code&gt; in which all the elements are True.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.all#numpy.ndarray.all&quot;&gt; &lt;code&gt;ndarray.all&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。すべての要素がTrueである &lt;code&gt;axis&lt;/code&gt; によって定義された &lt;code&gt;self&lt;/code&gt; 1次元サブ配列ごとにTrue要素を持つ配列を返します。</target>
        </trans-unit>
        <trans-unit id="efd8289812e23cf1b7df07369198edcd67ccd665" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.any#numpy.ndarray.any&quot;&gt;&lt;code&gt;ndarray.any&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return an array with True elements for every 1-d sub-array of &lt;em&gt;self&lt;/em&gt; defined by &lt;em&gt;axis&lt;/em&gt; in which any of the elements are True.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.any#numpy.ndarray.any&quot;&gt; &lt;code&gt;ndarray.any&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。いずれかの要素がTrueである&lt;em&gt;axis&lt;/em&gt;によって定義された&lt;em&gt;自己の&lt;/em&gt; 1次元サブ配列ごとにTrue要素を持つ配列を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea109271e7fe639649aeaaf2a0b5dd56ecc23fcf" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt;&lt;code&gt;ndarray.argmax&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return the index of the largest element of &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt; &lt;code&gt;ndarray.argmax&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。&lt;em&gt;軸に&lt;/em&gt;沿った&lt;em&gt;自分自身&lt;/em&gt;の最大要素のインデックスを返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9e5a451b453bc4aefcc71e37cd8b0e84168886e8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt;&lt;code&gt;ndarray.argmin&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return the index of the smallest element of &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt; &lt;code&gt;ndarray.argmin&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。&lt;em&gt;軸に&lt;/em&gt;沿った&lt;em&gt;自分自身&lt;/em&gt;の最小要素のインデックスを返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cf7a1a44ff60373e9f731b7ce7e339177577c561" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.argpartition#numpy.ndarray.argpartition&quot;&gt;&lt;code&gt;ndarray.argpartition&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;ktharray&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;kind&lt;/em&gt;). Return an array of indices such that selection of these indices along the given &lt;code&gt;axis&lt;/code&gt; would return a partitioned version of &lt;em&gt;self&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.argpartition#numpy.ndarray.argpartition&quot;&gt; &lt;code&gt;ndarray.argpartition&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;ktharray&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;kind&lt;/em&gt;）と同等です。特定の &lt;code&gt;axis&lt;/code&gt; 沿ってこれらのインデックスを選択すると、分割されたバージョンの&lt;em&gt;self&lt;/em&gt;が返されるように、インデックスの配列を返します。</target>
        </trans-unit>
        <trans-unit id="d75ff39235401fe4390dbb04fd226bfccafd46e5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.argsort#numpy.ndarray.argsort&quot;&gt;&lt;code&gt;ndarray.argsort&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return an array of indices such that selection of these indices along the given &lt;code&gt;axis&lt;/code&gt; would return a sorted version of &lt;em&gt;self&lt;/em&gt;. If &lt;em&gt;self&lt;/em&gt; -&amp;gt;descr is a data-type with fields defined, then self-&amp;gt;descr-&amp;gt;names is used to determine the sort order. A comparison where the first field is equal will use the second field and so on. To alter the sort order of a structured array, create a new data-type with a different order of names and construct a view of the array with that new data-type.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.argsort#numpy.ndarray.argsort&quot;&gt; &lt;code&gt;ndarray.argsort&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。指定された &lt;code&gt;axis&lt;/code&gt; 沿ってこれらのインデックスを選択すると、並べ替えられたバージョンの&lt;em&gt;self&lt;/em&gt;が返されるように、インデックスの配列を返します。場合は&lt;em&gt;、自己&lt;/em&gt; - &amp;gt; DESCRは、その後、自己&amp;gt; descr-&amp;gt;名前を定義したフィールドのデータ型は、ソート順を決定するために使用されています。最初のフィールドが等しい比較では、2番目のフィールドが使用されます。構造化配列のソート順を変更するには、名前の順序が異なる新しいデータ型を作成し、その新しいデータ型で配列のビューを作成します。</target>
        </trans-unit>
        <trans-unit id="6daadea926a9bfb0a800c60a35b85b50c40374a1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.byteswap#numpy.ndarray.byteswap&quot;&gt;&lt;code&gt;ndarray.byteswap&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;inplace&lt;/em&gt;). Return an array whose data area is byteswapped. If &lt;em&gt;inplace&lt;/em&gt; is non-zero, then do the byteswap inplace and return a reference to self. Otherwise, create a byteswapped copy and leave self unchanged.</source>
          <target state="translated">相当&lt;a href=&quot;generated/numpy.ndarray.byteswap#numpy.ndarray.byteswap&quot;&gt; &lt;code&gt;ndarray.byteswap&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;セルフ&lt;/em&gt;、&lt;em&gt;インプレース&lt;/em&gt;）。データ領域がバイトスワップされている配列を返します。場合は&lt;em&gt;インプレースが&lt;/em&gt;ゼロで、その後、バイトスワップのインプレースを行い、自己への参照を返します。それ以外の場合は、バイトスワップされたコピーを作成し、変更しないままにします。</target>
        </trans-unit>
        <trans-unit id="2ab0b0009765a5d262f32c0eec580607299fc96a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.choose#numpy.ndarray.choose&quot;&gt;&lt;code&gt;ndarray.choose&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;op&lt;/em&gt;, &lt;em&gt;ret&lt;/em&gt;, &lt;em&gt;clipmode&lt;/em&gt;). Create a new array by selecting elements from the sequence of arrays in &lt;em&gt;op&lt;/em&gt; based on the integer values in &lt;em&gt;self&lt;/em&gt;. The arrays must all be broadcastable to the same shape and the entries in &lt;em&gt;self&lt;/em&gt; should be between 0 and len(&lt;em&gt;op&lt;/em&gt;). The output is placed in &lt;em&gt;ret&lt;/em&gt; unless it is &lt;code&gt;NULL&lt;/code&gt; in which case a new output is created. The &lt;em&gt;clipmode&lt;/em&gt; argument determines behavior for when entries in &lt;em&gt;self&lt;/em&gt; are not between 0 and len(&lt;em&gt;op&lt;/em&gt;).</source>
          <target state="translated">相当&lt;a href=&quot;generated/numpy.ndarray.choose#numpy.ndarray.choose&quot;&gt; &lt;code&gt;ndarray.choose&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;自己&lt;/em&gt;、&lt;em&gt;OP&lt;/em&gt;、&lt;em&gt;RET&lt;/em&gt;、&lt;em&gt;clipmode&lt;/em&gt;）。&lt;em&gt;selfの&lt;/em&gt;整数値に基づいて&lt;em&gt;opの&lt;/em&gt;配列のシーケンスから要素を選択して、新しい配列を作成します。配列はすべて同じ形状にブロードキャスト可能である必要があり、&lt;em&gt;self&lt;/em&gt;のエントリは0からlen（&lt;em&gt;op&lt;/em&gt;）の間でなければなりません。 &lt;code&gt;NULL&lt;/code&gt; でない限り、出力は&lt;em&gt;retに&lt;/em&gt;配置されます&lt;em&gt;。NULLの&lt;/em&gt;場合、新しい出力が作成されます。&lt;em&gt;clipmodeの&lt;/em&gt;引数は、内のエントリときのための行動を決定する&lt;em&gt;自己が&lt;/em&gt; 0とlen（の間ではありません&lt;em&gt;OPを&lt;/em&gt;）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07498cd87fe2ef12a2b26de127164c39b4bd9e44" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.clip#numpy.ndarray.clip&quot;&gt;&lt;code&gt;ndarray.clip&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;min&lt;/em&gt;, &lt;em&gt;max&lt;/em&gt;). Clip an array, &lt;em&gt;self&lt;/em&gt;, so that values larger than &lt;em&gt;max&lt;/em&gt; are fixed to &lt;em&gt;max&lt;/em&gt; and values less than &lt;em&gt;min&lt;/em&gt; are fixed to &lt;em&gt;min&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.clip#numpy.ndarray.clip&quot;&gt; &lt;code&gt;ndarray.clip&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;min&lt;/em&gt;、&lt;em&gt;max&lt;/em&gt;）と同等です。アレイ、クリップ&lt;em&gt;自己&lt;/em&gt;よりも大きな値ように、&lt;em&gt;maxは&lt;/em&gt;に固定されている&lt;em&gt;最大値&lt;/em&gt;未満と値を&lt;em&gt;最小&lt;/em&gt;に固定されている&lt;em&gt;分&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c163c568fd35392b35f7cb27b6a29f0e9cbd90da" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.compress#numpy.ndarray.compress&quot;&gt;&lt;code&gt;ndarray.compress&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;condition&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt; ). Return the elements along &lt;em&gt;axis&lt;/em&gt; corresponding to elements of &lt;em&gt;condition&lt;/em&gt; that are true.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.compress#numpy.ndarray.compress&quot;&gt; &lt;code&gt;ndarray.compress&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;condition&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。true である&lt;em&gt;条件の&lt;/em&gt;要素に対応する&lt;em&gt;軸に&lt;/em&gt;沿った要素を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd9acb1c9e137920376909d2dadce0362beab80c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.conjugate#numpy.ndarray.conjugate&quot;&gt;&lt;code&gt;ndarray.conjugate&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;). Return the complex conjugate of &lt;em&gt;self&lt;/em&gt;. If &lt;em&gt;self&lt;/em&gt; is not of complex data type, then return &lt;em&gt;self&lt;/em&gt; with a reference.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.conjugate#numpy.ndarray.conjugate&quot;&gt; &lt;code&gt;ndarray.conjugate&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;）と同等です。&lt;em&gt;自己&lt;/em&gt;の複素共役を返します。&lt;em&gt;自分自身&lt;/em&gt;が複雑なデータ型でない場合は、&lt;em&gt;自分自身&lt;/em&gt;を参照で返します。</target>
        </trans-unit>
        <trans-unit id="cf40d04106c5d52e1884e99b3a37b71d8a81e331" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.copy#numpy.ndarray.copy&quot;&gt;&lt;code&gt;ndarray.copy&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;fortran&lt;/em&gt;). Make a copy of the &lt;em&gt;old&lt;/em&gt; array. The returned array is always aligned and writeable with data interpreted the same as the old array. If &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_CORDER&quot;&gt;&lt;code&gt;NPY_CORDER&lt;/code&gt;&lt;/a&gt;, then a C-style contiguous array is returned. If &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt;&lt;code&gt;NPY_FORTRANORDER&lt;/code&gt;&lt;/a&gt;, then a Fortran-style contiguous array is returned. If &lt;em&gt;order is&lt;/em&gt;&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt;&lt;code&gt;NPY_ANYORDER&lt;/code&gt;&lt;/a&gt;, then the array returned is Fortran-style contiguous only if the old one is; otherwise, it is C-style contiguous.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.copy#numpy.ndarray.copy&quot;&gt; &lt;code&gt;ndarray.copy&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;fortran&lt;/em&gt;）と同等です。&lt;em&gt;古い&lt;/em&gt;アレイのコピーを作成します。返された配列は常に整列され、データは古い配列と同じように解釈されて書き込み可能です。&lt;em&gt;order&lt;/em&gt;が&lt;a href=&quot;#c.NPY_CORDER&quot;&gt; &lt;code&gt;NPY_CORDER&lt;/code&gt; の&lt;/a&gt;場合、Cスタイルの連続した配列が返されます。&lt;em&gt;order&lt;/em&gt;が&lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt; &lt;code&gt;NPY_FORTRANORDER&lt;/code&gt; の&lt;/a&gt;場合、Fortranスタイルの連続した配列が返されます。&lt;em&gt;orderが&lt;/em&gt;&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt; &lt;code&gt;NPY_ANYORDER&lt;/code&gt; の&lt;/a&gt;場合、返される配列は、古い配列が連続している場合にのみ、Fortranスタイルの連続になります。それ以外の場合は、Cスタイルの連続です。</target>
        </trans-unit>
        <trans-unit id="98feecd02ab5026f0970a3c09806ab4167d96259" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.cumprod#numpy.ndarray.cumprod&quot;&gt;&lt;code&gt;ndarray.cumprod&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return 1-d cumulative products of elements in &lt;code&gt;self&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. Perform the product after converting data to data type &lt;code&gt;rtype&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.cumprod#numpy.ndarray.cumprod&quot;&gt; &lt;code&gt;ndarray.cumprod&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。 &lt;code&gt;axis&lt;/code&gt; 沿った &lt;code&gt;self&lt;/code&gt; の要素の1次元累積積を返します。データをデータ型 &lt;code&gt;rtype&lt;/code&gt; に変換してから製品を実行します。</target>
        </trans-unit>
        <trans-unit id="26f34a6ad4ecf38e07a2778b6f8366d8507a10ea" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.cumsum#numpy.ndarray.cumsum&quot;&gt;&lt;code&gt;ndarray.cumsum&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return cumulative 1-d sums of elements in &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;. Perform the sum after converting data to data type &lt;em&gt;rtype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.cumsum#numpy.ndarray.cumsum&quot;&gt; &lt;code&gt;ndarray.cumsum&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。&lt;em&gt;軸に&lt;/em&gt;沿った&lt;em&gt;自分自身&lt;/em&gt;内の要素の累積1次元和を返し&lt;em&gt;ます&lt;/em&gt;。データをデータ型&lt;em&gt;rtype&lt;/em&gt;に変換した後、合計を実行します。</target>
        </trans-unit>
        <trans-unit id="44d031ba857ad4460b29f51ce74504941e945e52" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.diagonal#numpy.ndarray.diagonal&quot;&gt;&lt;code&gt;ndarray.diagonal&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;offset&lt;/em&gt;, &lt;em&gt;axis1&lt;/em&gt;, &lt;em&gt;axis2&lt;/em&gt; ). Return the &lt;em&gt;offset&lt;/em&gt; diagonals of the 2-d arrays defined by &lt;em&gt;axis1&lt;/em&gt; and &lt;em&gt;axis2&lt;/em&gt;.</source>
          <target state="translated">相当&lt;a href=&quot;generated/numpy.ndarray.diagonal#numpy.ndarray.diagonal&quot;&gt; &lt;code&gt;ndarray.diagonal&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;自己&lt;/em&gt;、&lt;em&gt;オフセット&lt;/em&gt;、&lt;em&gt;AXIS1&lt;/em&gt;、&lt;em&gt;Axis2の&lt;/em&gt;）。&lt;em&gt;axis1&lt;/em&gt;と&lt;em&gt;axis2で&lt;/em&gt;定義された2次元配列の&lt;em&gt;オフセット&lt;/em&gt;対角線を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6400ea427e27ba969159bbf1cd1e50c3dd25455" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.flatten#numpy.ndarray.flatten&quot;&gt;&lt;code&gt;ndarray.flatten&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;order&lt;/em&gt;). Return a 1-d copy of the array. If &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt;&lt;code&gt;NPY_FORTRANORDER&lt;/code&gt;&lt;/a&gt; the elements are scanned out in Fortran order (first-dimension varies the fastest). If &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_CORDER&quot;&gt;&lt;code&gt;NPY_CORDER&lt;/code&gt;&lt;/a&gt;, the elements of &lt;code&gt;self&lt;/code&gt; are scanned in C-order (last dimension varies the fastest). If &lt;em&gt;order&lt;/em&gt;&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt;&lt;code&gt;NPY_ANYORDER&lt;/code&gt;&lt;/a&gt;, then the result of &lt;a href=&quot;#c.PyArray_ISFORTRAN&quot;&gt;&lt;code&gt;PyArray_ISFORTRAN&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;) is used to determine which order to flatten.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.flatten#numpy.ndarray.flatten&quot;&gt; &lt;code&gt;ndarray.flatten&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;order&lt;/em&gt;）と同等です。配列の1次元のコピーを返します。&lt;em&gt;order&lt;/em&gt;が&lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt; &lt;code&gt;NPY_FORTRANORDER&lt;/code&gt; &lt;/a&gt;の場合、要素はFortran順にスキャンされます（最初の次元が最も速く変化します）。&lt;em&gt;order&lt;/em&gt;が&lt;a href=&quot;#c.NPY_CORDER&quot;&gt; &lt;code&gt;NPY_CORDER&lt;/code&gt; の&lt;/a&gt;場合、 &lt;code&gt;self&lt;/code&gt; の要素はCオーダーでスキャンされます（最後の次元が最も速く変化します）。&lt;em&gt;注文が&lt;/em&gt;&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt; &lt;code&gt;NPY_ANYORDER&lt;/code&gt; の&lt;/a&gt;場合、&lt;a href=&quot;#c.PyArray_ISFORTRAN&quot;&gt; &lt;code&gt;PyArray_ISFORTRAN&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;）の結果を使用して、フラット化する注文を決定します。</target>
        </trans-unit>
        <trans-unit id="acb7bf8250a91a19555dbcdb02102524e6c94de7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.getfield#numpy.ndarray.getfield&quot;&gt;&lt;code&gt;ndarray.getfield&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;dtype&lt;/em&gt;, &lt;em&gt;offset&lt;/em&gt;). This function &lt;a href=&quot;https://docs.python.org/3/c-api/intro.html?reference-count-details&quot;&gt;steals a reference&lt;/a&gt; to &lt;code&gt;PyArray_Descr&lt;/code&gt; and returns a new array of the given &lt;code&gt;dtype&lt;/code&gt; using the data in the current array at a specified &lt;code&gt;offset&lt;/code&gt; in bytes. The &lt;code&gt;offset&lt;/code&gt; plus the itemsize of the new array type must be less than &lt;code&gt;self
-&amp;gt;descr-&amp;gt;elsize&lt;/code&gt; or an error is raised. The same shape and strides as the original array are used. Therefore, this function has the effect of returning a field from a structured array. But, it can also be used to select specific bytes or groups of bytes from any array type.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.getfield#numpy.ndarray.getfield&quot;&gt; &lt;code&gt;ndarray.getfield&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;dtype&lt;/em&gt;、&lt;em&gt;offset&lt;/em&gt;）と同等です。この関数は &lt;code&gt;PyArray_Descr&lt;/code&gt; へ&lt;a href=&quot;https://docs.python.org/3/c-api/intro.html?reference-count-details&quot;&gt;の参照&lt;/a&gt;を盗み取り、指定された &lt;code&gt;offset&lt;/code&gt; （バイト単位）の現在の配列のデータを使用して、指定された &lt;code&gt;dtype&lt;/code&gt; の新しい配列を返します。 &lt;code&gt;offset&lt;/code&gt; 新しい配列型のプラスitemsize未満でなければなりません &lt;code&gt;self -&amp;gt;descr-&amp;gt;elsize&lt;/code&gt; またはエラーが発生します。元の配列と同じ形状とストライドが使用されます。したがって、この関数には、構造化配列からフィールドを返す効果があります。ただし、任意の配列タイプから特定のバイトまたはバイトのグループを選択するためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="6e1e5da9cdc7a9b4c6725235e40182f3951d083a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.max#numpy.ndarray.max&quot;&gt;&lt;code&gt;ndarray.max&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Returns the largest element of &lt;em&gt;self&lt;/em&gt; along the given &lt;em&gt;axis&lt;/em&gt;. When the result is a single element, returns a numpy scalar instead of an ndarray.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.max#numpy.ndarray.max&quot;&gt; &lt;code&gt;ndarray.max&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。指定された&lt;em&gt;軸に&lt;/em&gt;沿って&lt;em&gt;自分自身&lt;/em&gt;の最大の要素を返します。結果が単一の要素である場合、ndarrayではなく派手なスカラーを返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bdd01120eccb02f99889760c9ef36e279a9f9ea8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.mean#numpy.ndarray.mean&quot;&gt;&lt;code&gt;ndarray.mean&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Returns the mean of the elements along the given &lt;em&gt;axis&lt;/em&gt;, using the enumerated type &lt;em&gt;rtype&lt;/em&gt; as the data type to sum in. Default sum behavior is obtained using &lt;a href=&quot;c-api.dtype#c.NPY_NOTYPE&quot;&gt;&lt;code&gt;NPY_NOTYPE&lt;/code&gt;&lt;/a&gt; for &lt;em&gt;rtype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.mean#numpy.ndarray.mean&quot;&gt; &lt;code&gt;ndarray.mean&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。合計するデータ型として列挙型&lt;em&gt;rtype&lt;/em&gt;を使用して、指定された&lt;em&gt;軸&lt;/em&gt;に沿った要素の平均を返します。デフォルトの合計動作は、&lt;em&gt;rtypeに&lt;/em&gt;&lt;a href=&quot;c-api.dtype#c.NPY_NOTYPE&quot;&gt; &lt;code&gt;NPY_NOTYPE&lt;/code&gt; &lt;/a&gt;を使用して取得されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e276f562081b61880c79febde9752c6b4583d12" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.min#numpy.ndarray.min&quot;&gt;&lt;code&gt;ndarray.min&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return the smallest element of &lt;em&gt;self&lt;/em&gt; along the given &lt;em&gt;axis&lt;/em&gt;. When the result is a single element, returns a numpy scalar instead of an ndarray.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.min#numpy.ndarray.min&quot;&gt; &lt;code&gt;ndarray.min&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。指定された&lt;em&gt;軸に&lt;/em&gt;沿って&lt;em&gt;自分自身&lt;/em&gt;の最小要素を返し&lt;em&gt;ます&lt;/em&gt;。結果が単一の要素である場合、ndarrayではなく派手なスカラーを返します。</target>
        </trans-unit>
        <trans-unit id="e792db3a62a29831ce03976f5ea2350fba5a323b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.nonzero#numpy.ndarray.nonzero&quot;&gt;&lt;code&gt;ndarray.nonzero&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;). Returns a tuple of index arrays that select elements of &lt;em&gt;self&lt;/em&gt; that are nonzero. If (nd= &lt;a href=&quot;#c.PyArray_NDIM&quot;&gt;&lt;code&gt;PyArray_NDIM&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;self&lt;/code&gt; ))==1, then a single index array is returned. The index arrays have data type &lt;a href=&quot;c-api.dtype#c.NPY_INTP&quot;&gt;&lt;code&gt;NPY_INTP&lt;/code&gt;&lt;/a&gt;. If a tuple is returned (nd</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.nonzero#numpy.ndarray.nonzero&quot;&gt; &lt;code&gt;ndarray.nonzero&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;）と同等です。ゼロ以外の&lt;em&gt;自分自身の&lt;/em&gt;要素を選択するインデックス配列のタプルを返します。（nd = &lt;a href=&quot;#c.PyArray_NDIM&quot;&gt; &lt;code&gt;PyArray_NDIM&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;self&lt;/code&gt; ））== 1の場合、単一のインデックス配列が返されます。インデックス配列のデータ型は&lt;a href=&quot;c-api.dtype#c.NPY_INTP&quot;&gt; &lt;code&gt;NPY_INTP&lt;/code&gt; &lt;/a&gt;です。タプルが返された場合（nd</target>
        </trans-unit>
        <trans-unit id="a70d121c7d953594f404dacb0d342fd3ab8b30ba" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.partition#numpy.ndarray.partition&quot;&gt;&lt;code&gt;ndarray.partition&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;ktharray&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;kind&lt;/em&gt;). Partitions the array so that the values of the element indexed by &lt;em&gt;ktharray&lt;/em&gt; are in the positions they would be if the array is fully sorted and places all elements smaller than the kth before and all elements equal or greater after the kth element. The ordering of all elements within the partitions is undefined. If &lt;em&gt;self&lt;/em&gt;-&amp;gt;descr is a data-type with fields defined, then self-&amp;gt;descr-&amp;gt;names is used to determine the sort order. A comparison where the first field is equal will use the second field and so on. To alter the sort order of a structured array, create a new data-type with a different order of names and construct a view of the array with that new data-type. Returns zero on success and -1 on failure.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.partition#numpy.ndarray.partition&quot;&gt; &lt;code&gt;ndarray.partition&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;ktharray&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;kind&lt;/em&gt;）と同等です。&lt;em&gt;ktharray&lt;/em&gt;によってインデックスが付けられた要素の値が配列が完全に並べ替えられ、すべての要素が前のk番目より小さく、すべての要素がk番目の要素の後にある場合と同じ位置になるように配列を分割します。パーティション内のすべての要素の順序は定義されていません。&lt;em&gt;自己&lt;/em&gt;なら&lt;em&gt;&lt;/em&gt;-&amp;gt; descrはフィールドが定義されたデータ型であり、次にself-&amp;gt; descr-&amp;gt; namesを使用してソート順を決定します。最初のフィールドが等しい比較では、2番目のフィールドが使用されます。構造化配列のソート順を変更するには、名前の順序が異なる新しいデータ型を作成し、その新しいデータ型で配列のビューを作成します。成功した場合は0を、失敗した場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="1404ab20af4a0d50c24ff1ca93cc3a3448c7e38e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.prod#numpy.ndarray.prod&quot;&gt;&lt;code&gt;ndarray.prod&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return 1-d products of elements in &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;. Perform the product after converting data to data type &lt;em&gt;rtype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.prod#numpy.ndarray.prod&quot;&gt; &lt;code&gt;ndarray.prod&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。&lt;em&gt;軸に&lt;/em&gt;沿って&lt;em&gt;自分自身&lt;/em&gt;の要素の1次元積を返し&lt;em&gt;ます&lt;/em&gt;。データをデータ型&lt;em&gt;rtype&lt;/em&gt;に変換してから製品を実行します。</target>
        </trans-unit>
        <trans-unit id="1100d008c0276fd76e61e9204938c06e2c190cea" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.ptp#numpy.ndarray.ptp&quot;&gt;&lt;code&gt;ndarray.ptp&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Return the difference between the largest element of &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt; and the smallest element of &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;. When the result is a single element, returns a numpy scalar instead of an ndarray.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.ptp#numpy.ndarray.ptp&quot;&gt; &lt;code&gt;ndarray.ptp&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。最大の要素との間の差を返す&lt;em&gt;自己&lt;/em&gt;沿って&lt;em&gt;軸&lt;/em&gt;との最小要素&lt;em&gt;自己&lt;/em&gt;沿って&lt;em&gt;軸&lt;/em&gt;。結果が単一の要素である場合、ndarrayの代わりに派手なスカラーを返します。</target>
        </trans-unit>
        <trans-unit id="2c16f538cf9a4222086ade1f8bc40148ea4157cd" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.repeat#numpy.ndarray.repeat&quot;&gt;&lt;code&gt;ndarray.repeat&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;op&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;). Copy the elements of &lt;em&gt;self&lt;/em&gt;, &lt;em&gt;op&lt;/em&gt; times along the given &lt;em&gt;axis&lt;/em&gt;. Either &lt;em&gt;op&lt;/em&gt; is a scalar integer or a sequence of length &lt;em&gt;self&lt;/em&gt; -&amp;gt;dimensions[ &lt;em&gt;axis&lt;/em&gt; ] indicating how many times to repeat each item along the axis.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.repeat#numpy.ndarray.repeat&quot;&gt; &lt;code&gt;ndarray.repeat&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;op&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;）と同等です。与えられた&lt;em&gt;軸に&lt;/em&gt;沿って&lt;em&gt;自分自身&lt;/em&gt;、&lt;em&gt;op&lt;/em&gt;回の要素をコピーします。いずれかの&lt;em&gt;OPは&lt;/em&gt;、スカラー整数または長さの配列である&lt;em&gt;自己&lt;/em&gt; &amp;gt;寸法[ - &lt;em&gt;軸&lt;/em&gt;の軸に沿って各項目を繰り返す回数を示します]。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="89f8dce1a3fdb6440169e6117acb2747787948e3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.reshape#numpy.ndarray.reshape&quot;&gt;&lt;code&gt;ndarray.reshape&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;shape&lt;/em&gt;) where &lt;em&gt;shape&lt;/em&gt; is a sequence. Converts &lt;em&gt;shape&lt;/em&gt; to a &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Dims&quot;&gt;&lt;code&gt;PyArray_Dims&lt;/code&gt;&lt;/a&gt; structure and calls &lt;a href=&quot;#c.PyArray_Newshape&quot;&gt;&lt;code&gt;PyArray_Newshape&lt;/code&gt;&lt;/a&gt; internally. For back-ward compatibility &amp;ndash; Not recommended</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.reshape#numpy.ndarray.reshape&quot;&gt; &lt;code&gt;ndarray.reshape&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;shape&lt;/em&gt;）と同等です。ここで、&lt;em&gt;shape&lt;/em&gt;はシーケンスです。&lt;em&gt;形状&lt;/em&gt;を&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Dims&quot;&gt; &lt;code&gt;PyArray_Dims&lt;/code&gt; &lt;/a&gt;構造体に変換し、内部で&lt;a href=&quot;#c.PyArray_Newshape&quot;&gt; &lt;code&gt;PyArray_Newshape&lt;/code&gt; &lt;/a&gt;を呼び出します。下位互換性のため&amp;ndash;非推奨</target>
        </trans-unit>
        <trans-unit id="c66cfa86b4fd8c96342e13259600ca57c73356a4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.resize#numpy.ndarray.resize&quot;&gt;&lt;code&gt;ndarray.resize&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;newshape&lt;/em&gt;, refcheck &lt;code&gt;=&lt;/code&gt;&lt;em&gt;refcheck&lt;/em&gt;, order= fortran ). This function only works on single-segment arrays. It changes the shape of &lt;em&gt;self&lt;/em&gt; inplace and will reallocate the memory for &lt;em&gt;self&lt;/em&gt; if &lt;em&gt;newshape&lt;/em&gt; has a different total number of elements then the old shape. If reallocation is necessary, then &lt;em&gt;self&lt;/em&gt; must own its data, have &lt;em&gt;self&lt;/em&gt; - &lt;code&gt;&amp;gt;base==NULL&lt;/code&gt;, have &lt;em&gt;self&lt;/em&gt; - &lt;code&gt;&amp;gt;weakrefs==NULL&lt;/code&gt;, and (unless refcheck is 0) not be referenced by any other array. The fortran argument can be &lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt;&lt;code&gt;NPY_ANYORDER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_CORDER&quot;&gt;&lt;code&gt;NPY_CORDER&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt;&lt;code&gt;NPY_FORTRANORDER&lt;/code&gt;&lt;/a&gt;. It currently has no effect. Eventually it could be used to determine how the resize operation should view the data when constructing a differently-dimensioned array. Returns None on success and NULL on error.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.resize#numpy.ndarray.resize&quot;&gt; &lt;code&gt;ndarray.resize&lt;/code&gt; と&lt;/a&gt;同等（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;newshape&lt;/em&gt;、refcheck &lt;code&gt;=&lt;/code&gt; &lt;em&gt;refcheck&lt;/em&gt;、order = fortran）。この関数は、単一セグメントの配列でのみ機能します。これは、の形状変化し&lt;em&gt;、自己&lt;/em&gt;インプレースをとするためにメモリを再割り当てします&lt;em&gt;自己&lt;/em&gt;場合&lt;em&gt;newshapeは&lt;/em&gt;、その後の要素の異なる合計数古い形状を有しています。再配置が必要である場合、&lt;em&gt;自己&lt;/em&gt;のデータを所有している必要があり、持っている&lt;em&gt;自己&lt;/em&gt; - &lt;code&gt;&amp;gt;base==NULL&lt;/code&gt; 有する&lt;em&gt;自己&lt;/em&gt; - &lt;code&gt;&amp;gt;weakrefs==NULL&lt;/code&gt; 、及び（refcheckが0でない限り）任意の他の配列によって参照されません。 FORTRAN引数は、することができ&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt; &lt;code&gt;NPY_ANYORDER&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_CORDER&quot;&gt; &lt;code&gt;NPY_CORDER&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt; &lt;code&gt;NPY_FORTRANORDER&lt;/code&gt; &lt;/a&gt;。現在、効果はありません。最終的には、異なる次元の配列を作成するときに、サイズ変更操作でデータをどのように表示するかを決定するために使用できます。成功した場合はNoneを、エラーの場合はNULLを返します。</target>
        </trans-unit>
        <trans-unit id="c35d0fb0b3b672f40f8ed22b6a36b98bc32ccd79" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.round#numpy.ndarray.round&quot;&gt;&lt;code&gt;ndarray.round&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;decimals&lt;/em&gt;, &lt;em&gt;out&lt;/em&gt;). Returns the array with elements rounded to the nearest decimal place. The decimal place is defined as the</source>
          <target state="translated">相当&lt;a href=&quot;generated/numpy.ndarray.round#numpy.ndarray.round&quot;&gt; &lt;code&gt;ndarray.round&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;自己&lt;/em&gt;、&lt;em&gt;小数&lt;/em&gt;、&lt;em&gt;アウト&lt;/em&gt;）。最も近い小数点以下の桁数に要素を丸めた配列を返します。小数点以下は</target>
        </trans-unit>
        <trans-unit id="77c91912c2f0496c5da34bf18831db8c3ec272aa" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.searchsorted#numpy.ndarray.searchsorted&quot;&gt;&lt;code&gt;ndarray.searchsorted&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;values&lt;/em&gt;, &lt;em&gt;side&lt;/em&gt;, &lt;em&gt;perm&lt;/em&gt;). Assuming &lt;em&gt;self&lt;/em&gt; is a 1-d array in ascending order, then the output is an array of indices the same shape as &lt;em&gt;values&lt;/em&gt; such that, if the elements in &lt;em&gt;values&lt;/em&gt; were inserted before the indices, the order of &lt;em&gt;self&lt;/em&gt; would be preserved. No checking is done on whether or not self is in ascending order.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.searchsorted#numpy.ndarray.searchsorted&quot;&gt; &lt;code&gt;ndarray.searchsorted&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;values&lt;/em&gt;、&lt;em&gt;side&lt;/em&gt;、&lt;em&gt;perm&lt;/em&gt;）と同等です。仮定&lt;em&gt;自己&lt;/em&gt;昇順に1次元配列され、出力は同じ形状インデックスの配列である&lt;em&gt;値&lt;/em&gt;の要素ならばそのようなことは&lt;em&gt;値が&lt;/em&gt;インデックスの前に挿入し、順&lt;em&gt;自己が&lt;/em&gt;保持されることになります。自己が昇順であるかどうかのチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="129c27494826551cd6d91c742839f2dd3b7a2b39" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.setfield#numpy.ndarray.setfield&quot;&gt;&lt;code&gt;ndarray.setfield&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;val&lt;/em&gt;, &lt;em&gt;dtype&lt;/em&gt;, &lt;em&gt;offset&lt;/em&gt; ). Set the field starting at &lt;em&gt;offset&lt;/em&gt; in bytes and of the given &lt;em&gt;dtype&lt;/em&gt; to &lt;em&gt;val&lt;/em&gt;. The &lt;em&gt;offset&lt;/em&gt; plus &lt;em&gt;dtype&lt;/em&gt; -&amp;gt;elsize must be less than &lt;em&gt;self&lt;/em&gt; -&amp;gt;descr-&amp;gt;elsize or an error is raised. Otherwise, the &lt;em&gt;val&lt;/em&gt; argument is converted to an array and copied into the field pointed to. If necessary, the elements of &lt;em&gt;val&lt;/em&gt; are repeated to fill the destination array, But, the number of elements in the destination must be an integer multiple of the number of elements in &lt;em&gt;val&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.setfield#numpy.ndarray.setfield&quot;&gt; &lt;code&gt;ndarray.setfield&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;val&lt;/em&gt;、&lt;em&gt;dtype&lt;/em&gt;、&lt;em&gt;offset&lt;/em&gt;）と同等です。バイトで&lt;em&gt;オフセットさ&lt;/em&gt;れ、指定された&lt;em&gt;dtypeのフィールド&lt;/em&gt;を&lt;em&gt;valに設定し&lt;/em&gt;ます。&lt;em&gt;オフセット&lt;/em&gt;プラス&lt;em&gt;DTYPE&lt;/em&gt; - &amp;gt; elsize未満でなければならない&lt;em&gt;自己&lt;/em&gt; &amp;gt; descr-&amp;gt; elsizeまたはエラーが発生しました- 。それ以外の場合、引数&lt;em&gt;val&lt;/em&gt;は配列に変換され、ポイントされたフィールドにコピーされます。必要に応じて、&lt;em&gt;val&lt;/em&gt;の要素が宛先配列を満たすまで繰り返されますが、宛先の要素数は、配列の要素数の整数倍でなければなりません。&lt;em&gt;val&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="329e170888d304760a845c23e2123d83a997ded2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.sort#numpy.ndarray.sort&quot;&gt;&lt;code&gt;ndarray.sort&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;kind&lt;/em&gt;). Return an array with the items of &lt;em&gt;self&lt;/em&gt; sorted along &lt;em&gt;axis&lt;/em&gt;. The array is sorted using the algorithm denoted by &lt;em&gt;kind&lt;/em&gt; , which is an integer/enum pointing to the type of sorting algorithms used.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.sort#numpy.ndarray.sort&quot;&gt; &lt;code&gt;ndarray.sort&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;kind&lt;/em&gt;）と同等です。&lt;em&gt;軸に&lt;/em&gt;沿って&lt;em&gt;セルフ&lt;/em&gt;ソートされたアイテムの配列を返し&lt;em&gt;ます&lt;/em&gt;。配列は、&lt;em&gt;kind&lt;/em&gt;で示されるアルゴリズムを使用してソートされます。これは、使用されるソートアルゴリズムのタイプを指す整数/列挙型です。</target>
        </trans-unit>
        <trans-unit id="18f23f95a5677bb30c45f3519a8a38c4eb9ab14d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.squeeze#numpy.ndarray.squeeze&quot;&gt;&lt;code&gt;ndarray.squeeze&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;). Return a new view of &lt;em&gt;self&lt;/em&gt; with all of the dimensions of length 1 removed from the shape.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.squeeze#numpy.ndarray.squeeze&quot;&gt; &lt;code&gt;ndarray.squeeze&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;）と同等です。図形から長さ1のすべての次元を削除した、&lt;em&gt;自己の&lt;/em&gt;新しいビューを返します。</target>
        </trans-unit>
        <trans-unit id="f3ea257f6db1c3b5b426fb4027029e9f1b7413a5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.std#numpy.ndarray.std&quot;&gt;&lt;code&gt;ndarray.std&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return the standard deviation using data along &lt;em&gt;axis&lt;/em&gt; converted to data type &lt;em&gt;rtype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.std#numpy.ndarray.std&quot;&gt; &lt;code&gt;ndarray.std&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。データ型&lt;em&gt;rtypeに&lt;/em&gt;変換された&lt;em&gt;軸に&lt;/em&gt;沿ったデータを使用して標準偏差を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c7387b455871f5d5fed3305db644e74b9628876" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.sum#numpy.ndarray.sum&quot;&gt;&lt;code&gt;ndarray.sum&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return 1-d vector sums of elements in &lt;em&gt;self&lt;/em&gt; along &lt;em&gt;axis&lt;/em&gt;. Perform the sum after converting data to data type &lt;em&gt;rtype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.sum#numpy.ndarray.sum&quot;&gt; &lt;code&gt;ndarray.sum&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;axis&lt;/em&gt;、&lt;em&gt;rtype&lt;/em&gt;）と同等です。&lt;em&gt;axisに&lt;/em&gt;沿った&lt;em&gt;自分自身&lt;/em&gt;の要素の1次元ベクトルの合計を返し&lt;em&gt;ます&lt;/em&gt;。データをデータ型&lt;em&gt;rtype&lt;/em&gt;に変換した後、合計を実行します。</target>
        </trans-unit>
        <trans-unit id="9b9ac6ba7775647d994932881b5b117c78bc1d61" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.swapaxes#numpy.ndarray.swapaxes&quot;&gt;&lt;code&gt;ndarray.swapaxes&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;a1&lt;/em&gt;, &lt;em&gt;a2&lt;/em&gt;). The returned array is a new view of the data in &lt;em&gt;self&lt;/em&gt; with the given axes, &lt;em&gt;a1&lt;/em&gt; and &lt;em&gt;a2&lt;/em&gt;, swapped.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.swapaxes#numpy.ndarray.swapaxes&quot;&gt; &lt;code&gt;ndarray.swapaxes&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;a1&lt;/em&gt;、&lt;em&gt;a2&lt;/em&gt;）と同等です。返される配列は、与えられた軸&lt;em&gt;a1&lt;/em&gt;と&lt;em&gt;a2&lt;/em&gt;が入れ替えられた、&lt;em&gt;自分自身&lt;/em&gt;内のデータの新しいビューです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="526d5a8267bf48a76f6e4bef39106e81c90185a6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.take#numpy.ndarray.take&quot;&gt;&lt;code&gt;ndarray.take&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;indices&lt;/em&gt;, &lt;em&gt;axis&lt;/em&gt;, &lt;em&gt;ret&lt;/em&gt;, &lt;em&gt;clipmode&lt;/em&gt;) except &lt;em&gt;axis&lt;/em&gt; =None in Python is obtained by setting &lt;em&gt;axis&lt;/em&gt; = &lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt;&lt;code&gt;NPY_MAXDIMS&lt;/code&gt;&lt;/a&gt; in C. Extract the items from self indicated by the integer-valued &lt;em&gt;indices&lt;/em&gt; along the given &lt;em&gt;axis.&lt;/em&gt; The clipmode argument can be &lt;a href=&quot;#c.NPY_RAISE&quot;&gt;&lt;code&gt;NPY_RAISE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_WRAP&quot;&gt;&lt;code&gt;NPY_WRAP&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#c.NPY_CLIP&quot;&gt;&lt;code&gt;NPY_CLIP&lt;/code&gt;&lt;/a&gt; to indicate what to do with out-of-bound indices. The &lt;em&gt;ret&lt;/em&gt; argument can specify an output array rather than having one created internally.</source>
          <target state="translated">相当&lt;a href=&quot;generated/numpy.ndarray.take#numpy.ndarray.take&quot;&gt; &lt;code&gt;ndarray.take&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;自己&lt;/em&gt;、&lt;em&gt;インデックス&lt;/em&gt;、&lt;em&gt;軸&lt;/em&gt;、&lt;em&gt;RET&lt;/em&gt;、&lt;em&gt;clipmode&lt;/em&gt;除く）&lt;em&gt;軸&lt;/em&gt; = Pythonでいずれも設定することによって得られていない&lt;em&gt;軸&lt;/em&gt; = &lt;a href=&quot;#c.NPY_MAXDIMS&quot;&gt; &lt;code&gt;NPY_MAXDIMS&lt;/code&gt; を&lt;/a&gt;自己が整数値で示さから項目を抽出Cで&lt;em&gt;指数&lt;/em&gt;所与沿って&lt;em&gt;軸。&lt;/em&gt; clipmode引数はでき&lt;a href=&quot;#c.NPY_RAISE&quot;&gt; &lt;code&gt;NPY_RAISE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#c.NPY_WRAP&quot;&gt; &lt;code&gt;NPY_WRAP&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#c.NPY_CLIP&quot;&gt; &lt;code&gt;NPY_CLIP&lt;/code&gt; &lt;/a&gt;アウトオブバウンドインデックスをどのように処理するかを示すために。&lt;em&gt;RET&lt;/em&gt;引数ではなく、内部で作成された1つを有するより出力配列を指定することができます。</target>
        </trans-unit>
        <trans-unit id="3fbb6db45f5065f7d5f46448fca11ee7f459d488" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.tobytes#numpy.ndarray.tobytes&quot;&gt;&lt;code&gt;ndarray.tobytes&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;order&lt;/em&gt;). Return the bytes of this array in a Python string.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.tobytes#numpy.ndarray.tobytes&quot;&gt; &lt;code&gt;ndarray.tobytes&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;order&lt;/em&gt;）と同等です。この配列のバイトをPython文字列で返します。</target>
        </trans-unit>
        <trans-unit id="e1487cf1aae9421a58178865b5cc518907b872e6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.tolist#numpy.ndarray.tolist&quot;&gt;&lt;code&gt;ndarray.tolist&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;). Return a nested Python list from &lt;em&gt;self&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.tolist#numpy.ndarray.tolist&quot;&gt; &lt;code&gt;ndarray.tolist&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;）と同等です。ネストされたPythonリストを&lt;em&gt;self&lt;/em&gt;から返します。</target>
        </trans-unit>
        <trans-unit id="92f6eaf18a532cc83a7879c0fc5e0cdb9219ac58" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.trace#numpy.ndarray.trace&quot;&gt;&lt;code&gt;ndarray.trace&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;offset&lt;/em&gt;, &lt;em&gt;axis1&lt;/em&gt;, &lt;em&gt;axis2&lt;/em&gt;, &lt;em&gt;rtype&lt;/em&gt;). Return the sum (using &lt;em&gt;rtype&lt;/em&gt; as the data type of summation) over the &lt;em&gt;offset&lt;/em&gt; diagonal elements of the 2-d arrays defined by &lt;em&gt;axis1&lt;/em&gt; and &lt;em&gt;axis2&lt;/em&gt; variables. A positive offset chooses diagonals above the main diagonal. A negative offset selects diagonals below the main diagonal.</source>
          <target state="translated">相当&lt;a href=&quot;generated/numpy.ndarray.trace#numpy.ndarray.trace&quot;&gt; &lt;code&gt;ndarray.trace&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;自己&lt;/em&gt;、&lt;em&gt;オフセット&lt;/em&gt;、&lt;em&gt;AXIS1&lt;/em&gt;、&lt;em&gt;Axis2の&lt;/em&gt;、&lt;em&gt;RTYPE&lt;/em&gt;）。&lt;em&gt;axis1&lt;/em&gt;および&lt;em&gt;axis2&lt;/em&gt;変数で定義された2次元配列の&lt;em&gt;オフセット&lt;/em&gt;対角要素の合計を返します（合計のデータ型として&lt;em&gt;rtype&lt;/em&gt;を使用）。正のオフセットは、主対角線より上の対角線を選択します。負のオフセットは、主対角線の下の対角線を選択します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="903dc5f64afb6611725d0b8ef7bd16c3db35ef02" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.transpose#numpy.ndarray.transpose&quot;&gt;&lt;code&gt;ndarray.transpose&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;permute&lt;/em&gt;). Permute the axes of the ndarray object &lt;em&gt;self&lt;/em&gt; according to the data structure &lt;em&gt;permute&lt;/em&gt; and return the result. If &lt;em&gt;permute&lt;/em&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the resulting array has its axes reversed. For example if &lt;em&gt;self&lt;/em&gt; has shape</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.transpose#numpy.ndarray.transpose&quot;&gt; &lt;code&gt;ndarray.transpose&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;permute&lt;/em&gt;）と同等です。データ構造の&lt;em&gt;並べ替え&lt;/em&gt;に従ってndarrayオブジェクト&lt;em&gt;self&lt;/em&gt;の軸を並べ替え、結果を返します。&lt;em&gt;permute&lt;/em&gt;が &lt;code&gt;NULL&lt;/code&gt; の場合、結果の配列の軸は逆になります。たとえば、&lt;em&gt;自分&lt;/em&gt;に形がある場合&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e84dfaf00361747bc32ce6d08fe80d8b155279f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;generated/numpy.ndarray.view#numpy.ndarray.view&quot;&gt;&lt;code&gt;ndarray.view&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;dtype&lt;/em&gt;). Return a new view of the array &lt;em&gt;self&lt;/em&gt; as possibly a different data-type, &lt;em&gt;dtype&lt;/em&gt;, and different array subclass &lt;em&gt;ptype&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ndarray.view#numpy.ndarray.view&quot;&gt; &lt;code&gt;ndarray.view&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;dtype&lt;/em&gt;）と同等です。配列&lt;em&gt;selfの&lt;/em&gt;新しいビューを、異なるデータ型&lt;em&gt;dtype&lt;/em&gt;、および異なる配列サブクラス&lt;em&gt;ptype&lt;/em&gt;として返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="c80f2487a92354ad196d90ca737086d6a28cb501" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/dev/c-api/init.html#c.Py_BEGIN_ALLOW_THREADS&quot;&gt;&lt;code&gt;Py_BEGIN_ALLOW_THREADS&lt;/code&gt;&lt;/a&gt; except it uses &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; to determine if the macro if replaced with white-space or not.</source>
          <target state="translated">相当&lt;a href=&quot;https://docs.python.org/dev/c-api/init.html#c.Py_BEGIN_ALLOW_THREADS&quot;&gt; &lt;code&gt;Py_BEGIN_ALLOW_THREADS&lt;/code&gt; &lt;/a&gt;それが使用する以外 &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; をマクロ空白かに置き換えている場合かどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="657a5eba5419e2937f0d7b0877025c3f2a8bf379" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/dev/c-api/init.html#c.Py_END_ALLOW_THREADS&quot;&gt;&lt;code&gt;Py_END_ALLOW_THREADS&lt;/code&gt;&lt;/a&gt; except it uses &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; to determine if the macro if replaced with white-space or not.</source>
          <target state="translated">相当&lt;a href=&quot;https://docs.python.org/dev/c-api/init.html#c.Py_END_ALLOW_THREADS&quot;&gt; &lt;code&gt;Py_END_ALLOW_THREADS&lt;/code&gt; &lt;/a&gt;それが使用する以外 &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; をマクロ空白かに置き換えている場合かどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="821886e91092ad64682392ad985ffcb281eaf4b3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;1/2 * (np.exp(x) + np.exp(-x))&lt;/code&gt; and &lt;code&gt;np.cos(1j*x)&lt;/code&gt;.</source>
          <target state="translated">相当する &lt;code&gt;1/2 * (np.exp(x) + np.exp(-x))&lt;/code&gt; 及び &lt;code&gt;np.cos(1j*x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6cedbe2e2d0fc9bc98c2a4058eb21de10f0ba961" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;1/2 * (np.exp(x) - np.exp(-x))&lt;/code&gt; or &lt;code&gt;-1j * np.sin(1j*x)&lt;/code&gt;.</source>
          <target state="translated">相当する &lt;code&gt;1/2 * (np.exp(x) - np.exp(-x))&lt;/code&gt; 又は &lt;code&gt;-1j * np.sin(1j*x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65cabfa0a0b1ab314bf5ad313943ea0a61c9f913" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;a.copy(order='K')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a.copy(order='K')&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="4a8b0df6f8f30decfdb8712f593677bd0361c0ef" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;divmod(x, 1)&lt;/code&gt; for positive &lt;code&gt;x&lt;/code&gt; with the return values switched.</source>
          <target state="translated">戻り値が切り替えられた正の &lt;code&gt;x&lt;/code&gt; の &lt;code&gt;divmod(x, 1)&lt;/code&gt; と同等。</target>
        </trans-unit>
        <trans-unit id="3f28125a3d825d23c8591cf7b44d136f5206aec6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;m[::-1,...]&lt;/code&gt;. Does not require the array to be two-dimensional.</source>
          <target state="translated">&lt;code&gt;m[::-1,...]&lt;/code&gt; 同等です。配列が2次元である必要はありません。</target>
        </trans-unit>
        <trans-unit id="158b7bdd2f113f05d23975a3a9ae7c4cbbee72c4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;np.asarray(self)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;np.asarray(self)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="7b757950b99b3fb5a49cac119260ff6b59afd089" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;np.asarray(x).ravel()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;np.asarray(x).ravel()&lt;/code&gt; と同等</target>
        </trans-unit>
        <trans-unit id="01b942f822242874c950f31737a64908f9f10037" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;np.sin(x)/np.cos(x)&lt;/code&gt; element-wise.</source>
          <target state="translated">要素ごとの &lt;code&gt;np.sin(x)/np.cos(x)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="e03e98ed258ef214f7093f680237951ada6cdb9f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;np.sinh(x)/np.cosh(x)&lt;/code&gt; or &lt;code&gt;-1j * np.tan(1j*x)&lt;/code&gt;.</source>
          <target state="translated">等価に &lt;code&gt;np.sinh(x)/np.cosh(x)&lt;/code&gt; か &lt;code&gt;-1j * np.tan(1j*x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6b5ff4ad03763736f9b2a4f6770ab65b1c73219" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;np.transpose(self)&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is real-valued.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; が実数値の場合、 &lt;code&gt;np.transpose(self)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="75b818defe3ad1876ebfb087b965f01d49fa2ec9" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sqrt(x1**2 + x2**2)&lt;/code&gt;, element-wise. If &lt;code&gt;x1&lt;/code&gt; or &lt;code&gt;x2&lt;/code&gt; is scalar_like (i.e., unambiguously cast-able to a scalar type), it is broadcast for use with each element of the other argument. (See Examples)</source>
          <target state="translated">要素ごとに &lt;code&gt;sqrt(x1**2 + x2**2)&lt;/code&gt; と同等です。場合は &lt;code&gt;x1&lt;/code&gt; または &lt;code&gt;x2&lt;/code&gt; scalar_like（すなわち、明確にキャスト可能なスカラー型に）で、それは他の引数の各要素で使用するためにブロードキャストされます。（例を参照）</target>
        </trans-unit>
        <trans-unit id="00df9c133fe8747499700e75effeb0cd5d136ccc" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;x.copy()&lt;/code&gt;, but only defined for types that support arithmetic.</source>
          <target state="translated">&lt;code&gt;x.copy()&lt;/code&gt; と同等ですが、算術をサポートするタイプに対してのみ定義されます。</target>
        </trans-unit>
        <trans-unit id="23adb20441299c90dbd1e383cfab76bf7d2274b8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;x1 - x2&lt;/code&gt; in terms of array broadcasting.</source>
          <target state="translated">アレイブロードキャストに関しては、 &lt;code&gt;x1 - x2&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="2c304ff74936613f3d12e0fc5cde4c506dd3f3ab" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;x1&lt;/code&gt; * &lt;code&gt;x2&lt;/code&gt; in terms of array broadcasting.</source>
          <target state="translated">アレイブロードキャストに関しては、 &lt;code&gt;x1&lt;/code&gt; * &lt;code&gt;x2&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="98520850afe8056507d9d642ea9323b3ed72e130" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;x1&lt;/code&gt; + &lt;code&gt;x2&lt;/code&gt; in terms of array broadcasting.</source>
          <target state="translated">アレイブロードキャストに関しては、 &lt;code&gt;x1&lt;/code&gt; + &lt;code&gt;x2&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="202bf1615636b8e0a84392691bc084a70b43390b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;em&gt;self&lt;/em&gt;.put(&lt;em&gt;values&lt;/em&gt;, &lt;em&gt;indices&lt;/em&gt;, &lt;em&gt;clipmode&lt;/em&gt; ). Put &lt;em&gt;values&lt;/em&gt; into &lt;em&gt;self&lt;/em&gt; at the corresponding (flattened) &lt;em&gt;indices&lt;/em&gt;. If &lt;em&gt;values&lt;/em&gt; is too small it will be repeated as necessary.</source>
          <target state="translated">相当する&lt;em&gt;自己&lt;/em&gt; .put（&lt;em&gt;値&lt;/em&gt;、&lt;em&gt;指数&lt;/em&gt;、&lt;em&gt;clipmode&lt;/em&gt;）。対応する（平坦化された）&lt;em&gt;インデックス&lt;/em&gt;で&lt;em&gt;値&lt;/em&gt;を&lt;em&gt;自分自身に&lt;/em&gt;入れ&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;値&lt;/em&gt;が小さすぎる場合は、必要に応じて繰り返されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="65d607762120cf690bb00c590b16fa127fb75062" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;em&gt;self&lt;/em&gt;.ravel(&lt;em&gt;order&lt;/em&gt;). Same basic functionality as &lt;a href=&quot;#c.PyArray_Flatten&quot;&gt;&lt;code&gt;PyArray_Flatten&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;self&lt;/em&gt;, &lt;em&gt;order&lt;/em&gt;) except if &lt;em&gt;order&lt;/em&gt; is 0 and &lt;em&gt;self&lt;/em&gt; is C-style contiguous, the shape is altered but no copy is performed.</source>
          <target state="translated">同等の&lt;em&gt;自己&lt;/em&gt; .ravel（&lt;em&gt;オーダー&lt;/em&gt;）。&lt;a href=&quot;#c.PyArray_Flatten&quot;&gt; &lt;code&gt;PyArray_Flatten&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;order&lt;/em&gt;）と同じ基本機能。ただし、&lt;em&gt;order&lt;/em&gt;が0で、&lt;em&gt;self&lt;/em&gt;がCスタイルの連続である場合、形状は変更されますが、コピーは実行されません。</target>
        </trans-unit>
        <trans-unit id="9032a6cc40438a50e150a4a41ff47d4fe89a4820" translate="yes" xml:space="preserve">
          <source>Equivalent to PyArray_CanCastTypeTo(fromtype, totype, NPY_SAFE_CASTING).</source>
          <target state="translated">PyArray_CanCastTypeTo(fromtype,totype,NPY_SAFE_CASTING)と同等。</target>
        </trans-unit>
        <trans-unit id="aa1dee2d3e2220598a3bbd05e1af8c95afb8286e" translate="yes" xml:space="preserve">
          <source>Equivalent to Python&amp;rsquo;s &lt;code&gt;%&lt;/code&gt; operator.</source>
          <target state="translated">Pythonの &lt;code&gt;%&lt;/code&gt; 演算子に相当します。</target>
        </trans-unit>
        <trans-unit id="c543b869fe6bab79a3a934117c7c6a1eff863d6f" translate="yes" xml:space="preserve">
          <source>Equivalent to Python&amp;rsquo;s &lt;code&gt;//&lt;/code&gt; operator.</source>
          <target state="translated">Pythonの &lt;code&gt;//&lt;/code&gt; 演算子に相当します。</target>
        </trans-unit>
        <trans-unit id="731025cc785b584c28e327dc6f1d60cad5cb1eb2" translate="yes" xml:space="preserve">
          <source>Equivalent to but faster than &lt;code&gt;np.maximum(a_min, np.minimum(a, a_max))&lt;/code&gt;. No check is performed to ensure &lt;code&gt;a_min &amp;lt; a_max&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;np.maximum(a_min, np.minimum(a, a_max))&lt;/code&gt; 同等ですが、それより高速です。 &lt;code&gt;a_min &amp;lt; a_max&lt;/code&gt; ことを確認するためのチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="6b2f298705887fc3f13bb047301aaf8328f81dca" translate="yes" xml:space="preserve">
          <source>Equivalent to but faster than &lt;code&gt;np.minimum(a_max, np.maximum(a, a_min))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;np.minimum(a_max, np.maximum(a, a_min))&lt;/code&gt; 同等ですが、それよりも高速です。</target>
        </trans-unit>
        <trans-unit id="e127cc159cef630175cb2a2528435fea3e7fcdb3" translate="yes" xml:space="preserve">
          <source>Equivalent to calling &lt;code&gt;$ nosetests &amp;lt;argv&amp;gt; &amp;lt;file_to_run&amp;gt;&lt;/code&gt; from the command line</source>
          <target state="translated">コマンドラインから &lt;code&gt;$ nosetests &amp;lt;argv&amp;gt; &amp;lt;file_to_run&amp;gt;&lt;/code&gt; を呼び出すのと同等</target>
        </trans-unit>
        <trans-unit id="ed8f3be106058d41aa3036c07045c7a5df9a7239" translate="yes" xml:space="preserve">
          <source>Equivalent to creating a copy of the array and applying the MaskedArray &lt;code&gt;sort()&lt;/code&gt; method.</source>
          <target state="translated">配列のコピーを作成し、MaskedArrayの &lt;code&gt;sort()&lt;/code&gt; メソッドを適用するのと同じです。</target>
        </trans-unit>
        <trans-unit id="5b847d0d31d2133c0201a061723b9aa92d8890f7" translate="yes" xml:space="preserve">
          <source>Equivalent to either NPY_INT or NPY_LONGLONG, depending on the platform.</source>
          <target state="translated">プラットフォームに応じて、NPY_INTまたはNPY_LONGLONGのいずれかに相当します。</target>
        </trans-unit>
        <trans-unit id="85f38ed4c0f6096936fc4b84fb6a21d19adcc1cb" translate="yes" xml:space="preserve">
          <source>Equivalent to either NPY_UINT or NPY_ULONGLONG, depending on the platform.</source>
          <target state="translated">プラットフォームに応じて、NPY_UINTまたはNPY_ULONGLONGのいずれかに相当します。</target>
        </trans-unit>
        <trans-unit id="d656dbe889cfc08e9f09fa23957b7de58cae8caa" translate="yes" xml:space="preserve">
          <source>Equivalent to m[:,::-1]. Requires the array to be at least 2-D.</source>
          <target state="translated">m[:,::-1]に相当します.配列が2次元以上であることが必要です.</target>
        </trans-unit>
        <trans-unit id="1215aa39e41289b1c51c145e05d1743101aa9773" translate="yes" xml:space="preserve">
          <source>Equivalent to running:</source>
          <target state="translated">走ることに等しい。</target>
        </trans-unit>
        <trans-unit id="5a910d755d7e89acbf27b19fb05f069771ab0e7b" translate="yes" xml:space="preserve">
          <source>Equivalent to the Python &lt;code&gt;%&lt;/code&gt; operator.</source>
          <target state="translated">Python &lt;code&gt;%&lt;/code&gt; 演算子に相当します。</target>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">同等です。</target>
        </trans-unit>
        <trans-unit id="f2c299359dd358c2f6f22a22ce8b45b901e994e8" translate="yes" xml:space="preserve">
          <source>Equivalently use the &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;&lt;code&gt;mask&lt;/code&gt; attribute.</source>
          <target state="translated">同様に、&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt; &lt;code&gt;mask&lt;/code&gt; 属性を使用します。</target>
        </trans-unit>
        <trans-unit id="6eed85d2c6463174f53200b994de55fedca2fe50" translate="yes" xml:space="preserve">
          <source>Equivalently use the &lt;code&gt;MaskedArray&lt;/code&gt;&lt;code&gt;data&lt;/code&gt; attribute.</source>
          <target state="translated">同様に、 &lt;code&gt;MaskedArray&lt;/code&gt; &lt;code&gt;data&lt;/code&gt; 属性を使用します。</target>
        </trans-unit>
        <trans-unit id="e59ba61683ec6d73dab0ba426c13a6a7d9ed31cf" translate="yes" xml:space="preserve">
          <source>Equivalently, eliminating the inner loop, the last two lines would be:</source>
          <target state="translated">等しく、内側のループを排除すると、最後の2行は次のようになります。</target>
        </trans-unit>
        <trans-unit id="6b59734e1b8f67d36df303549c4673ff4f6c8d66" translate="yes" xml:space="preserve">
          <source>Equivalently, eliminating the inner loop, this can be expressed as:</source>
          <target state="translated">同様に、内側のループを排除すると、これは次のように表すことができます。</target>
        </trans-unit>
        <trans-unit id="28b75128748a47d2bb367541f76250db5dd9b6a0" translate="yes" xml:space="preserve">
          <source>Equivalently:</source>
          <target state="translated">Equivalently:</target>
        </trans-unit>
        <trans-unit id="149658b77c9d6e6cef1bb293ac32b781ccfe7dbd" translate="yes" xml:space="preserve">
          <source>Eric Wieser</source>
          <target state="translated">エリック・ヴィーザー</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">エラー処理</target>
        </trans-unit>
        <trans-unit id="5f577c8bef8739558c43df8e8796bc8e5a825a61" translate="yes" xml:space="preserve">
          <source>Error objects</source>
          <target state="translated">エラーオブジェクト</target>
        </trans-unit>
        <trans-unit id="f13df400826d5582075c86f7280e918d94d2f9f5" translate="yes" xml:space="preserve">
          <source>Error type changes</source>
          <target state="translated">エラータイプの変更</target>
        </trans-unit>
        <trans-unit id="4884820cd63fe6870fd18f5bb40f96cacf7c1253" translate="yes" xml:space="preserve">
          <source>Errors result if the second argument is also supplied when x is a scalar input, if first and second arguments have different shapes, or if the first argument has complex values</source>
          <target state="translated">xがスカラー入力の場合に第2引数も与えられた場合、第1引数と第2引数の形状が異なる場合、または第1引数が複素数の値を持つ場合にエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="68e944c31c80a964e18589df952c8e941c618fb2" translate="yes" xml:space="preserve">
          <source>Errors result if the second argument is also supplied when x is a scalar input, if first and second arguments have different shapes, or if the first argument has complex values.</source>
          <target state="translated">xがスカラ入力の場合に第2引数も与えられた場合、第1引数と第2引数の形状が異なる場合、または第1引数の値が複素数の場合にエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="6896dc5d66baa055255d6a61e0f3010c1fcb944f" translate="yes" xml:space="preserve">
          <source>Errors result if the second argument is supplied when the first argument is a scalar, or if the first and second arguments have different shapes.</source>
          <target state="translated">第1引数がスカラであるときに第2引数が与えられた場合や、第1引数と第2引数の形状が異なる場合にエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="e6308f5d5324d30901fdba46e76a6baf1ab30827" translate="yes" xml:space="preserve">
          <source>Establish a timeline for mediation to complete, ideally within two weeks.</source>
          <target state="translated">調停が完了するまでのタイムラインを設定し、理想的には2週間以内に完了するようにします。</target>
        </trans-unit>
        <trans-unit id="8e5c90765bd01e407f47b56e1714c9f9bd1ace4b" translate="yes" xml:space="preserve">
          <source>Estimate a covariance matrix, given data and weights.</source>
          <target state="translated">データと重みを与えられた共分散行列を推定する.</target>
        </trans-unit>
        <trans-unit id="3ff0c8c72ff670edbc5bdbae93aa2dbd2e54c4c0" translate="yes" xml:space="preserve">
          <source>Estimate the covariance matrix.</source>
          <target state="translated">共分散行列を推定する。</target>
        </trans-unit>
        <trans-unit id="2e86acb34f53f4c550f3dcf28b42823f0f59d900" translate="yes" xml:space="preserve">
          <source>Estimator based on leave-one-out cross-validation estimate of the integrated squared error. Can be regarded as a generalization of Scott&amp;rsquo;s rule.</source>
          <target state="translated">統合された2乗誤差のリーブワンアウト相互検証推定に基づく推定量。スコットの法則の一般化と見なすことができます。</target>
        </trans-unit>
        <trans-unit id="35592e888d12a9934594d9f1f111830a7b9f7f37" translate="yes" xml:space="preserve">
          <source>Estimator does not take variability into account, only data size. Commonly overestimates number of bins required.</source>
          <target state="translated">推定器は変動性を考慮せず、データサイズのみを考慮します。一般的に必要なビンの数を過大評価することが多い。</target>
        </trans-unit>
        <trans-unit id="da87f1093e8c246b1f6d85fea3650000b6da3790" translate="yes" xml:space="preserve">
          <source>Euler&amp;rsquo;s constant, base of natural logarithms, Napier&amp;rsquo;s constant.</source>
          <target state="translated">オイラー定数、自然対数の底、ネイピア定数。</target>
        </trans-unit>
        <trans-unit id="f91dd3dbbfae685abb68bc410da02d957a011629" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D Chebyshev series at points (x, y).</source>
          <target state="translated">点(x,y)における2次元チェビシェフ級数を評価する。</target>
        </trans-unit>
        <trans-unit id="e05e0d192839700194b0291808ce8475fe0d0cc1" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D Chebyshev series on the Cartesian product of x and y.</source>
          <target state="translated">xとyの直交積の2次元チェビシェフ級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="7249c2fe23f2e17738db2110e9c2474dc3a27187" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D Hermite series at points (x, y).</source>
          <target state="translated">点(x,y)での2次元エルミテ級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="12ed956c99b6390def2dd7ee918ef9474cc02f06" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D Hermite series on the Cartesian product of x and y.</source>
          <target state="translated">xとyのデカルト積の2次元エルミテ級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="cedce799e74482d1942c64f4cd11a5b3fd98c128" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D HermiteE series at points (x, y).</source>
          <target state="translated">点(x,y)での2次元エルミテE級数を評価します。</target>
        </trans-unit>
        <trans-unit id="48cc948294af1d7f259543794e3f125d854efce7" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D HermiteE series on the Cartesian product of x and y.</source>
          <target state="translated">xとyの直交積上の2次元エルミテE級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="338d5b747397dce60dd29055f57344efa1d37666" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D Laguerre series at points (x, y).</source>
          <target state="translated">点(x,y)における2次元ラゲール級数を評価する。</target>
        </trans-unit>
        <trans-unit id="4a829f126487a9ec9a923ab666b31db182581736" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D Laguerre series on the Cartesian product of x and y.</source>
          <target state="translated">xとyのデカルト積の2次元ラゲール級数を評価する。</target>
        </trans-unit>
        <trans-unit id="bb447e6da0b73bad544e19cbcbc6052261416eb9" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D Legendre series at points (x, y).</source>
          <target state="translated">点(x,y)での2次元レジェンドレ級数を評価する。</target>
        </trans-unit>
        <trans-unit id="7373a9e22eb3236ef35b254cc0cb7ed7d29c6948" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D Legendre series on the Cartesian product of x and y.</source>
          <target state="translated">xとyのデカルト積の2次元レジェンドレ級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="a527503bfcf8c4cb30f6f6943d6775ba7732cdef" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D polynomial at points (x, y).</source>
          <target state="translated">点(x,y)で2次元多項式を評価する。</target>
        </trans-unit>
        <trans-unit id="03726da2d6f02abab8a254ba40a2a300ecaef683" translate="yes" xml:space="preserve">
          <source>Evaluate a 2-D polynomial on the Cartesian product of x and y.</source>
          <target state="translated">xとyの直交積上の2次元多項式を評価しなさい。</target>
        </trans-unit>
        <trans-unit id="9029d2c825f46990756a36847b1a1b6ef93e7f31" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D Chebyshev series at points (x, y, z).</source>
          <target state="translated">点(x,y,z)での3次元チェビシェフ級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="6e0bda3c65d8c3458e685987ef115c2f03e1ce48" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D Chebyshev series on the Cartesian product of x, y, and z.</source>
          <target state="translated">x,y,zの直交積の3次元チェビシェフ級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="ae23b9ad402238d53a7767ef4d1d0feecad8d46a" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D Hermite series at points (x, y, z).</source>
          <target state="translated">点(x,y,z)での3次元ハーミット級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="1fa86ea2fa2a78cb282ebd3e58571d4035e81572" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D Hermite series on the Cartesian product of x, y, and z.</source>
          <target state="translated">x,y,zの直交積の3次元エルミテ級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="e0e36a6aa699aa19c71e1fd7089481c08a161992" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D HermiteE series on the Cartesian product of x, y, and z.</source>
          <target state="translated">x,y,zの直交積の3次元HermiteE級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="645e8b8ce98d2275a7fb6f40acce5d53b7f2ad81" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D Hermite_e series at points (x, y, z).</source>
          <target state="translated">点(x,y,z)での3次元Hermite_e級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="ea580f96650cb24e9fc6eb589c30aba361084e3d" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D Laguerre series at points (x, y, z).</source>
          <target state="translated">点(x,y,z)における3次元ラゲール級数を評価する。</target>
        </trans-unit>
        <trans-unit id="345ed8afbed95aea3201f6d8df2e9d955fe4ee9d" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D Laguerre series on the Cartesian product of x, y, and z.</source>
          <target state="translated">x,y,zの直交積の3次元ラゲール級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="fc1af478b3c58299201cb5fd893a359ec10739ca" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D Legendre series at points (x, y, z).</source>
          <target state="translated">点(x,y,z)での3次元レジェンドレ級数を評価する。</target>
        </trans-unit>
        <trans-unit id="888774bb82f3f8de5edab168d25dbd0a2eb3d033" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D Legendre series on the Cartesian product of x, y, and z.</source>
          <target state="translated">x,y,zの直交積の3次元レジェンドレ級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="e8846df08e194f124fe8cded1c782376715e8f39" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D polynomial at points (x, y, z).</source>
          <target state="translated">点(x,y,z)で3次元多項式を評価する。</target>
        </trans-unit>
        <trans-unit id="33f78fc3c5ae1454f9df0431d3f3fda38023ac26" translate="yes" xml:space="preserve">
          <source>Evaluate a 3-D polynomial on the Cartesian product of x, y and z.</source>
          <target state="translated">x,y,zの直交積上の3次元多項式を評価しなさい。</target>
        </trans-unit>
        <trans-unit id="8b4e7acfc43ebffbd9c6285f10ac1b60b175795c" translate="yes" xml:space="preserve">
          <source>Evaluate a Chebyshev series at points x.</source>
          <target state="translated">点xでのチェビシェフ級数を評価します。</target>
        </trans-unit>
        <trans-unit id="1f4ce01843c1515b967b600cb8fa4018d3436eaa" translate="yes" xml:space="preserve">
          <source>Evaluate a Laguerre series at points x.</source>
          <target state="translated">点xでのラゲール級数を評価する。</target>
        </trans-unit>
        <trans-unit id="161f6a7aae0d5d7f196e5ee0e04ba73d7963b76b" translate="yes" xml:space="preserve">
          <source>Evaluate a Legendre series at points x.</source>
          <target state="translated">点xでレジェンドレ級数を評価する。</target>
        </trans-unit>
        <trans-unit id="1cc49d22e70eea61f6bdc96018100e105aba00e0" translate="yes" xml:space="preserve">
          <source>Evaluate a piecewise-defined function.</source>
          <target state="translated">欠片定義関数を評価します。</target>
        </trans-unit>
        <trans-unit id="79a283e785c7b9ab6cbfe6dbfe59b713502d0afb" translate="yes" xml:space="preserve">
          <source>Evaluate a polynomial at points x.</source>
          <target state="translated">点xで多項式を評価する。</target>
        </trans-unit>
        <trans-unit id="ac86c84a106ffc30d8eceed0ff68761b61ebad9a" translate="yes" xml:space="preserve">
          <source>Evaluate a polynomial at specific values.</source>
          <target state="translated">特定の値で多項式を評価する。</target>
        </trans-unit>
        <trans-unit id="283714fe4f49f84ab071c16c98a04aac5c0eb13d" translate="yes" xml:space="preserve">
          <source>Evaluate a polynomial specified by its roots at points x.</source>
          <target state="translated">点xでその根で指定された多項式を評価する。</target>
        </trans-unit>
        <trans-unit id="5ae76cb25d3ddcb8fd7f5add4137cfe2c33287a6" translate="yes" xml:space="preserve">
          <source>Evaluate an Hermite series at points x.</source>
          <target state="translated">点xでエルミート級数を評価してください。</target>
        </trans-unit>
        <trans-unit id="ce1ba49b7053d6908dd1d4b7a38524a5c4ffc2df" translate="yes" xml:space="preserve">
          <source>Evaluate an HermiteE series at points x.</source>
          <target state="translated">点xでのエルミテE級数を評価します。</target>
        </trans-unit>
        <trans-unit id="a389fe7d0ca7745a323c209ce5b023a9e30716fa" translate="yes" xml:space="preserve">
          <source>Evaluate the polynomial at</source>
          <target state="translated">で多項式を評価する</target>
        </trans-unit>
        <trans-unit id="201867eba810e127d20356b4920cc833601a5f27" translate="yes" xml:space="preserve">
          <source>Evaluates TRUE as long as the iterator has not looped through all of the elements, otherwise it evaluates FALSE.</source>
          <target state="translated">イテレータがすべての要素をループしていない限り TRUE を評価し、そうでない場合は FALSE を評価します。</target>
        </trans-unit>
        <trans-unit id="a61e7944eeb541b39ec48ef4572671aa9245dfe1" translate="yes" xml:space="preserve">
          <source>Evaluates TRUE as long as the multi-iterator has not looped through all of the elements (of the broadcasted result), otherwise it evaluates FALSE.</source>
          <target state="translated">マルチイテレータが(ブロードキャストされた結果の)すべての要素をループしていない限り TRUE を評価し、そうでない場合は FALSE を評価します。</target>
        </trans-unit>
        <trans-unit id="22e5fc7652637561dc1ca3671ce7888c08020803" translate="yes" xml:space="preserve">
          <source>Evaluates a Chebyshev series.</source>
          <target state="translated">チェビシェフ級数を評価します。</target>
        </trans-unit>
        <trans-unit id="8f5b426162065bbed8197ac088255c41cba4b070" translate="yes" xml:space="preserve">
          <source>Evaluates a Hermite series.</source>
          <target state="translated">ハーミットシリーズを評価します。</target>
        </trans-unit>
        <trans-unit id="df7f15c01da2df8b851fc9f6e1e067fbbad7da62" translate="yes" xml:space="preserve">
          <source>Evaluates a Laguerre series.</source>
          <target state="translated">ラゲール級数を評価します。</target>
        </trans-unit>
        <trans-unit id="24200a16cfb4d36b211f0c64c8db3868f1aa7d7b" translate="yes" xml:space="preserve">
          <source>Evaluates a Legendre series.</source>
          <target state="translated">レジェンドレシリーズを評価します。</target>
        </trans-unit>
        <trans-unit id="85ee46dc575694a88add8fcac6da5ac9ea0ec2c1" translate="yes" xml:space="preserve">
          <source>Evaluates a polynomial.</source>
          <target state="translated">多項式を評価します。</target>
        </trans-unit>
        <trans-unit id="c6780dad55d1f852632365f7570aa643328d5b06" translate="yes" xml:space="preserve">
          <source>Evaluates as True if arrays &lt;em&gt;a1&lt;/em&gt; and &lt;em&gt;a2&lt;/em&gt; have the same shape.</source>
          <target state="translated">配列&lt;em&gt;a1&lt;/em&gt;と&lt;em&gt;a2&lt;/em&gt;が同じ形状の場合、Trueと評価されます。</target>
        </trans-unit>
        <trans-unit id="14b73bad8268092556c3d59c6262a1db866e29f2" translate="yes" xml:space="preserve">
          <source>Evaluates as true if &lt;code&gt;a&lt;/code&gt; is FORTRAN ordered.</source>
          <target state="translated">FORTRANで順序付けされている場合 &lt;code&gt;a&lt;/code&gt; trueと評価されます。</target>
        </trans-unit>
        <trans-unit id="74face1b8e76f520379a33453af827275b42370d" translate="yes" xml:space="preserve">
          <source>Evaluates as true if &lt;code&gt;a&lt;/code&gt; is a contiguous array. Equivalent to &lt;code&gt;(PyArray_ISCONTIGUOUS(a))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; が連続配列の場合、 trueと評価されます。 &lt;code&gt;(PyArray_ISCONTIGUOUS(a))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="6a92de714017736a8a012563cdae53ed5c18d733" translate="yes" xml:space="preserve">
          <source>Evaluates as true if &lt;code&gt;a&lt;/code&gt; is non-&lt;code&gt;NULL&lt;/code&gt; and can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; でなく、 &lt;code&gt;PyArrayObject*&lt;/code&gt; キャストできる場合、 trueと評価されます。</target>
        </trans-unit>
        <trans-unit id="30b857f72fdd592a4e93e214be9f6a2a22f1daa5" translate="yes" xml:space="preserve">
          <source>Evaluates as true if &lt;em&gt;obj&lt;/em&gt; is a data-type object ( &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr *&lt;/code&gt;&lt;/a&gt; ).</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt;がデータ型オブジェクト（&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt; &lt;code&gt;PyArray_Descr *&lt;/code&gt; &lt;/a&gt;）の場合、trueと評価されます。</target>
        </trans-unit>
        <trans-unit id="1b0b459a4df746d063d9691e5dca8206407e50e5" translate="yes" xml:space="preserve">
          <source>Evaluates as true if &lt;em&gt;obj&lt;/em&gt; is a data-type object ( &lt;a href=&quot;types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr *&lt;/code&gt;&lt;/a&gt; ).</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt;がデータ型オブジェクト（&lt;a href=&quot;types-and-structures#c.PyArray_Descr&quot;&gt; &lt;code&gt;PyArray_Descr *&lt;/code&gt; &lt;/a&gt;）の場合、trueと評価されます。</target>
        </trans-unit>
        <trans-unit id="01d60164442fc0f55a5557baa1dde2ec4ee3a192" translate="yes" xml:space="preserve">
          <source>Evaluates as true if the data buffer of &lt;code&gt;a&lt;/code&gt; uses native byte order. Equivalent to &lt;code&gt;(PyArray_ISNOTSWAPPED(a))&lt;/code&gt;.</source>
          <target state="translated">真と評価のデータバッファであれば用途ネイティブのバイトオーダー。 &lt;code&gt;(PyArray_ISNOTSWAPPED(a))&lt;/code&gt; と同等です。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcbfc3fc7cd5c92daad9c6700316991a65012cae" translate="yes" xml:space="preserve">
          <source>Evaluates pyfunc over input arrays using broadcasting rules of numpy.</source>
          <target state="translated">numpyのブロードキャストルールを用いて入力配列に対してpyfuncを評価します。</target>
        </trans-unit>
        <trans-unit id="88a80c85f7d09b073fbd515eb093798e576dcd94" translate="yes" xml:space="preserve">
          <source>Evaluates the Einstein summation convention on the operands.</source>
          <target state="translated">オペランド上のアインシュタインの和算規約を評価します。</target>
        </trans-unit>
        <trans-unit id="09f56994a692d463245ca900188d259358a1a1e3" translate="yes" xml:space="preserve">
          <source>Evaluates the lowest cost contraction order for an einsum expression by considering the creation of intermediate arrays.</source>
          <target state="translated">中間配列の作成を考慮して、einsum式の最もコストの低い縮約順序を評価します。</target>
        </trans-unit>
        <trans-unit id="a4fdb9cdb108616be69434eab1761cc78b88d33b" translate="yes" xml:space="preserve">
          <source>Evaluates to a pointer of type &lt;code&gt;void*&lt;/code&gt; that points to the data buffer of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">タイプのポインタに評価 &lt;code&gt;void*&lt;/code&gt; のデータバッファを指していることを、仮定にキャストすることができる &lt;code&gt;PyArrayObject*&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b165cdcba7dabc88d6d0700bab2cea35959b8e6" translate="yes" xml:space="preserve">
          <source>Evaluates to an array of type &lt;code&gt;npy_intp&lt;/code&gt; and length &lt;code&gt;array_numdims(a)&lt;/code&gt;, giving the lengths of all of the dimensions of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">型の配列に評価 &lt;code&gt;npy_intp&lt;/code&gt; 及び長 &lt;code&gt;array_numdims(a)&lt;/code&gt; の寸法の全ての長さを与える、と仮定すると、に鋳造することができる &lt;code&gt;PyArrayObject*&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d18aba4418a76811df39bd817fcca0ecc3daf26" translate="yes" xml:space="preserve">
          <source>Evaluates to an array of type &lt;code&gt;npy_intp&lt;/code&gt; and length &lt;code&gt;array_numdims(a)&lt;/code&gt;, giving the stridess of all of the dimensions of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;. A stride is the distance in bytes between an element and its immediate neighbor along the same axis.</source>
          <target state="translated">&lt;code&gt;npy_intp&lt;/code&gt; 型と長さ &lt;code&gt;array_numdims(a)&lt;/code&gt; の配列に評価し &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;PyArrayObject*&lt;/code&gt; キャストできると仮定して、 &lt;code&gt;a&lt;/code&gt; のすべての次元の刻み幅を与えます。ストライドは、同じ軸に沿った要素とそのすぐ隣の要素との間のバイト単位の距離です。</target>
        </trans-unit>
        <trans-unit id="ee0a95426dfe5b7eb47ffd5ae2f4fb51edb35193" translate="yes" xml:space="preserve">
          <source>Evaluates to the &lt;code&gt;i&lt;/code&gt;-th dimension size of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">評価された &lt;code&gt;i&lt;/code&gt; の番目の次元の大きさとすれば、にキャストすることができます &lt;code&gt;PyArrayObject*&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d4d289826f9e7f76dff23ce9b5a0d1ae92ad3cc" translate="yes" xml:space="preserve">
          <source>Evaluates to the &lt;code&gt;i&lt;/code&gt;-th stride of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">評価された &lt;code&gt;i&lt;/code&gt; の目のストライド、仮定にキャストすることができます &lt;code&gt;PyArrayObject*&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32b35e339f75424281676b07ad9e28b079acb58f" translate="yes" xml:space="preserve">
          <source>Evaluates to the integer data type code of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">整数データ型コードに評価されると仮定すると、にキャストすることができる &lt;code&gt;PyArrayObject*&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60ab5981a7770a6202629fec1405f5cf8e6b68cf" translate="yes" xml:space="preserve">
          <source>Evaluates to the integer number of dimensions of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">大きさの整数倍に評価、仮定に鋳造することができる &lt;code&gt;PyArrayObject*&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0be0f4e7a59afdff5acbdbf74f20f94ceb3fdc16" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;arr&lt;/em&gt; is C-style contiguous.</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;がCスタイルの連続である場合、trueと評価します。</target>
        </trans-unit>
        <trans-unit id="ccd3cb113f37e222d005c24c43bbeb4bb385e088" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;arr&lt;/em&gt; is Fortran-style contiguous and &lt;em&gt;not&lt;/em&gt; C-style contiguous. &lt;a href=&quot;#c.PyArray_IS_F_CONTIGUOUS&quot;&gt;&lt;code&gt;PyArray_IS_F_CONTIGUOUS&lt;/code&gt;&lt;/a&gt; is the correct way to test for Fortran-style contiguity.</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;がC スタイルの連続で&lt;em&gt;はなく&lt;/em&gt; Fortranスタイルの連続である場合にtrueを評価します。&lt;a href=&quot;#c.PyArray_IS_F_CONTIGUOUS&quot;&gt; &lt;code&gt;PyArray_IS_F_CONTIGUOUS&lt;/code&gt; &lt;/a&gt;は、Fortranスタイルの連続性をテストする正しい方法です。</target>
        </trans-unit>
        <trans-unit id="299ed12a95038cc7c47da499ceb2b1bb9bee7088" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;arr&lt;/em&gt; is Fortran-style contiguous.</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;がFortranスタイルの連続である場合、trueと評価します。</target>
        </trans-unit>
        <trans-unit id="0c6d7ddd3ec484ead393ec310ff7dd53898345cc" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is a Python object whose type is a sub-type of &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; の&lt;/a&gt;サブタイプであるPythonオブジェクトである場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="8d47b6abc57e8489e373d14442e0e135d79d490a" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is a Python object whose type is a sub-type of &lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;がPythonオブジェクトであり、そのタイプが&lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; の&lt;/a&gt;サブタイプである場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="eda799e9981a95fbdf277bb7b4cac9dbe1897388" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is a Python object with type &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt;型のPythonオブジェクトである場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="b99992949fa52eb31a616aa72ce3d2db9c377b8a" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is a Python object with type &lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が&lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt;型のPythonオブジェクトの場合、trueと評価されます。</target>
        </trans-unit>
        <trans-unit id="6eeb9c0e570ee6c3d7212996fe6c19be5c590a98" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is a Python scalar object (see &lt;a href=&quot;#c.PyArray_IsPythonScalar&quot;&gt;&lt;code&gt;PyArray_IsPythonScalar&lt;/code&gt;&lt;/a&gt;), an array scalar (an instance of a sub-type of &lt;code&gt;PyGenericArr_Type&lt;/code&gt;) or an instance of a sub-type of &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt; whose dimensionality is 0.</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;がPythonスカラーオブジェクト（&lt;a href=&quot;#c.PyArray_IsPythonScalar&quot;&gt; &lt;code&gt;PyArray_IsPythonScalar&lt;/code&gt; を&lt;/a&gt;参照）、配列スカラー（ &lt;code&gt;PyGenericArr_Type&lt;/code&gt; のサブタイプのインスタンス）、または次元数が0の&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; の&lt;/a&gt;サブタイプのインスタンスである場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="77128428ecc736c262cee4d932684f9895a30acc" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is a Python scalar object (see &lt;a href=&quot;#c.PyArray_IsPythonScalar&quot;&gt;&lt;code&gt;PyArray_IsPythonScalar&lt;/code&gt;&lt;/a&gt;), an array scalar (an instance of a sub-type of &lt;code&gt;PyGenericArr_Type&lt;/code&gt;) or an instance of a sub-type of &lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt; whose dimensionality is 0.</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;がPythonスカラーオブジェクト（&lt;a href=&quot;#c.PyArray_IsPythonScalar&quot;&gt; &lt;code&gt;PyArray_IsPythonScalar&lt;/code&gt; を&lt;/a&gt;参照）、配列スカラー（ &lt;code&gt;PyGenericArr_Type&lt;/code&gt; のサブタイプのインスタンス）、または次元が0の&lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; の&lt;/a&gt;サブタイプのインスタンスである場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="67ae1d1c2d9114996b7543dee8f883c75689b0de" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is a builtin Python scalar object (int, float, complex, bytes, str, long, bool).</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が組み込みのPythonスカラーオブジェクト（int、float、complex、bytes、str、long、bool）の場合、trueと評価されます。</target>
        </trans-unit>
        <trans-unit id="782aad878c58725282c24466a66a6d37025e0309" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is a builtin Python scalar object (int, float, complex, str, unicode, long, bool).</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が組み込みのPythonスカラーオブジェクト（int、float、complex、str、unicode、long、bool）の場合、trueと評価します。</target>
        </trans-unit>
        <trans-unit id="f7b432815e26220931657feceb0900b1d3b25457" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is an array iterator (or instance of a subclass of the array iterator type).</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が配列反復子（または配列反復子型のサブクラスのインスタンス）の場合、trueを評価します。</target>
        </trans-unit>
        <trans-unit id="72e9df6c71cba94b804e10a331ae768c03dc3136" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is an instance of (a subclass of) &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt; and has 0 dimensions.</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt;（のサブクラス）のインスタンスであり、次元が0の場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="a92e36e0c44fee9b890a2256c6136f6838cd352e" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is an instance of (a subclass of) &lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt; and has 0 dimensions.</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が&lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt;（のサブクラス）のインスタンスであり、次元が0の場合、trueと評価されます。</target>
        </trans-unit>
        <trans-unit id="5906e8dd00d0a1adb4ea6aa8b5091429c7f25bb2" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is an instance of &lt;code&gt;Py{cls}ArrType_Type&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が &lt;code&gt;Py{cls}ArrType_Type&lt;/code&gt; インスタンスである場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="4fb6fa662c78b1650cad28ec8017fe594278de63" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is an instance of a builtin numeric type (int, float, complex, long, bool)</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が組み込み数値型（int、float、complex、long、bool）のインスタンスである場合にtrueを評価します</target>
        </trans-unit>
        <trans-unit id="ab21393a2ba887799bdff9d28c50be01d0b70f5b" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is either a Python scalar object (see &lt;a href=&quot;#c.PyArray_IsPythonScalar&quot;&gt;&lt;code&gt;PyArray_IsPythonScalar&lt;/code&gt;&lt;/a&gt;) or an array scalar (an instance of a sub- type of &lt;code&gt;PyGenericArr_Type&lt;/code&gt; ).</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;がPythonスカラーオブジェクト（&lt;a href=&quot;#c.PyArray_IsPythonScalar&quot;&gt; &lt;code&gt;PyArray_IsPythonScalar&lt;/code&gt; を&lt;/a&gt;参照）または配列スカラー（ &lt;code&gt;PyGenericArr_Type&lt;/code&gt; のサブタイプのインスタンス）の場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="cf7b1413b57bbc99790ccf42c73ff86cedf1427a" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is either an array scalar (an instance of a sub-type of &lt;code&gt;PyGenericArr_Type&lt;/code&gt; ), or an instance of (a sub-class of) &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt; whose dimensionality is 0.</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が配列スカラー（ &lt;code&gt;PyGenericArr_Type&lt;/code&gt; のサブタイプのインスタンス）または次元数が0の&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt;（のサブクラス）のインスタンスである場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="5912b104b67fdb86cc53730cfe7f9447f1497a17" translate="yes" xml:space="preserve">
          <source>Evaluates true if &lt;em&gt;op&lt;/em&gt; is either an array scalar (an instance of a sub-type of &lt;code&gt;PyGenericArr_Type&lt;/code&gt; ), or an instance of (a sub-class of) &lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt; whose dimensionality is 0.</source>
          <target state="translated">&lt;em&gt;op&lt;/em&gt;が配列スカラー（ &lt;code&gt;PyGenericArr_Type&lt;/code&gt; のサブタイプのインスタンス）、または次元が0である&lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt;（のサブクラス）のインスタンスのいずれかである場合、trueを評価します。</target>
        </trans-unit>
        <trans-unit id="82908b45216f6f64aa572e8d9614febf36cdc646" translate="yes" xml:space="preserve">
          <source>Evaluates true if the data area of &lt;em&gt;arr&lt;/em&gt; can be written to</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;のデータ領域に書き込むことができる場合はtrueと評価します</target>
        </trans-unit>
        <trans-unit id="a6798bac58d14b80f66da409bb3101b7acf52c78" translate="yes" xml:space="preserve">
          <source>Evaluates true if the data area of &lt;em&gt;arr&lt;/em&gt; consists of a single (C-style or Fortran-style) contiguous segment.</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;のデータ領域が単一（CスタイルまたはFortranスタイル）の連続したセグメントで構成されている場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="52d051a4856042792e3562a8cf85f0b04c4a4af1" translate="yes" xml:space="preserve">
          <source>Evaluates true if the data area of &lt;em&gt;arr&lt;/em&gt; is C-style contiguous, aligned, and in machine byte-order.</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;のデータ領域がCスタイルの連続した、整列された、マシンのバイト順である場合、trueと評価します。</target>
        </trans-unit>
        <trans-unit id="e202a99f33c9bfd2e1c5ac0fa0b8a81399b57105" translate="yes" xml:space="preserve">
          <source>Evaluates true if the data area of &lt;em&gt;arr&lt;/em&gt; is C-style contiguous, and &lt;a href=&quot;#c.PyArray_ISBEHAVED&quot;&gt;&lt;code&gt;PyArray_ISBEHAVED&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;arr&lt;/em&gt;) is true.</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;のデータ領域がCスタイルの連続であり、&lt;a href=&quot;#c.PyArray_ISBEHAVED&quot;&gt; &lt;code&gt;PyArray_ISBEHAVED&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;arr&lt;/em&gt;）がtrueの場合、trueと評価します。</target>
        </trans-unit>
        <trans-unit id="effc549b6cbff87555006675e1c79c18e43a5365" translate="yes" xml:space="preserve">
          <source>Evaluates true if the data area of &lt;em&gt;arr&lt;/em&gt; is Fortran-style contiguous and &lt;a href=&quot;#c.PyArray_ISBEHAVED&quot;&gt;&lt;code&gt;PyArray_ISBEHAVED&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;arr&lt;/em&gt;) is true.</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;のデータ領域がFortranスタイルの連続であり、&lt;a href=&quot;#c.PyArray_ISBEHAVED&quot;&gt; &lt;code&gt;PyArray_ISBEHAVED&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;arr&lt;/em&gt;）がtrueの場合、trueと評価します。</target>
        </trans-unit>
        <trans-unit id="8df904ca22ec2803d50d17cdbf121eedc6d72400" translate="yes" xml:space="preserve">
          <source>Evaluates true if the data area of &lt;em&gt;arr&lt;/em&gt; is Fortran-style contiguous, aligned, and in machine byte-order &lt;strong&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;のデータ領域がFortranスタイルの連続した、整列された、マシンのバイト順である場合、trueと評価します&lt;strong&gt;。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a1b64683aef87f7f1b4257764cf4227296d827e" translate="yes" xml:space="preserve">
          <source>Evaluates true if the data area of &lt;em&gt;arr&lt;/em&gt; is aligned and in machine byte-order.</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;のデータ領域が整列され、マシンのバイト順である場合、trueと評価します。</target>
        </trans-unit>
        <trans-unit id="f7f20e7e1e5772639b1f7c4eb4bff4d2800f8c2a" translate="yes" xml:space="preserve">
          <source>Evaluates true if the data area of &lt;em&gt;arr&lt;/em&gt; is aligned and writeable and in machine byte-order according to its descriptor.</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;のデータ領域が整列され、書き込み可能であり、その記述子に従ってマシンのバイト順である場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="e474d3b13b1be737b699dd99e94b826acd4340ff" translate="yes" xml:space="preserve">
          <source>Evaluates true if the data area of &lt;em&gt;arr&lt;/em&gt; is properly aligned on the machine.</source>
          <target state="translated">&lt;em&gt;arr&lt;/em&gt;のデータ領域がマシン上で適切に配置されている場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="2fa74bf1ebb6946b1363906270140aeda279cf9f" translate="yes" xml:space="preserve">
          <source>Evaluates true if the data area of the ndarray &lt;em&gt;m&lt;/em&gt; is &lt;strong&gt;not&lt;/strong&gt; in machine byte-order according to the array&amp;rsquo;s data-type descriptor.</source>
          <target state="translated">ndarrayのデータ領域場合はtrueを評価し&lt;em&gt;、mが&lt;/em&gt;あり&lt;strong&gt;ません&lt;/strong&gt;、配列のデータ型記述子による機械のバイトオーダーに。</target>
        </trans-unit>
        <trans-unit id="3267c071decd2c90623cf8528c8e4938c54505e6" translate="yes" xml:space="preserve">
          <source>Evaluates true if the data area of the ndarray &lt;em&gt;m&lt;/em&gt; is in machine byte-order according to the array&amp;rsquo;s data-type descriptor.</source>
          <target state="translated">ndarray &lt;em&gt;mの&lt;/em&gt;データ領域が配列のデータ型記述子に従ってマシンのバイト順である場合にtrueを評価します。</target>
        </trans-unit>
        <trans-unit id="74157d4f0e365e7c26ee7ae56617ac39f0fc6cb5" translate="yes" xml:space="preserve">
          <source>Evaluation:</source>
          <target state="translated">Evaluation:</target>
        </trans-unit>
        <trans-unit id="bfed403a77ac8bf381d674a3abfc57ba60883a8b" translate="yes" xml:space="preserve">
          <source>Even for contiguous arrays a stride for a given dimension &lt;code&gt;arr.strides[dim]&lt;/code&gt; may be &lt;em&gt;arbitrary&lt;/em&gt; if &lt;code&gt;arr.shape[dim] == 1&lt;/code&gt; or the array has no elements. It does &lt;em&gt;not&lt;/em&gt; generally hold that &lt;code&gt;self.strides[-1] == self.itemsize&lt;/code&gt; for C-style contiguous arrays or &lt;code&gt;self.strides[0] == self.itemsize&lt;/code&gt; for Fortran-style contiguous arrays is true.</source>
          <target state="translated">隣接する配列の場合でも、 &lt;code&gt;arr.shape[dim] == 1&lt;/code&gt; か、配列に要素がない場合、特定の次元 &lt;code&gt;arr.strides[dim]&lt;/code&gt; ストライドは&lt;em&gt;任意で&lt;/em&gt;ある可能&lt;em&gt;性&lt;/em&gt;があります。一般に、Cスタイルの連続配列の &lt;code&gt;self.strides[-1] == self.itemsize&lt;/code&gt; 、またはFortranスタイルの連続配列の &lt;code&gt;self.strides[0] == self.itemsize&lt;/code&gt; がtrueであるとは&lt;em&gt;考えられ&lt;/em&gt;ていませ&lt;em&gt;ん&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1298a53951ccd9aa53bf4ad3ab74e5154ee53b89" translate="yes" xml:space="preserve">
          <source>Even for contiguous arrays a stride for a given dimension &lt;code&gt;arr.strides[dim]&lt;/code&gt; may be &lt;em&gt;arbitrary&lt;/em&gt; if &lt;code&gt;arr.shape[dim] == 1&lt;/code&gt; or the array has no elements. It does &lt;em&gt;not&lt;/em&gt; generally hold that &lt;code&gt;self.strides[-1] == self.itemsize&lt;/code&gt; for C-style contiguous arrays or &lt;code&gt;self.strides[0] == self.itemsize&lt;/code&gt; for Fortran-style contiguous arrays is true. The correct way to access the &lt;code&gt;itemsize&lt;/code&gt; of an array from the C API is &lt;code&gt;PyArray_ITEMSIZE(arr)&lt;/code&gt;.</source>
          <target state="translated">隣接する配列の場合でも、 &lt;code&gt;arr.shape[dim] == 1&lt;/code&gt; か、配列に要素がない場合、特定の次元 &lt;code&gt;arr.strides[dim]&lt;/code&gt; ストライドは&lt;em&gt;任意で&lt;/em&gt;ある可能&lt;em&gt;性&lt;/em&gt;があります。一般に、Cスタイルの連続配列の &lt;code&gt;self.strides[-1] == self.itemsize&lt;/code&gt; 、またはFortranスタイルの連続配列の &lt;code&gt;self.strides[0] == self.itemsize&lt;/code&gt; がtrueであるとは&lt;em&gt;考えられ&lt;/em&gt;ていませ&lt;em&gt;ん&lt;/em&gt;。C APIから配列の &lt;code&gt;itemsize&lt;/code&gt; にアクセスする正しい方法は &lt;code&gt;PyArray_ITEMSIZE(arr)&lt;/code&gt; です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f9827d8888420fb8aa22f4344271feb523136ca5" translate="yes" xml:space="preserve">
          <source>Even though 0 occurs twice in the list of indices, the 0th element is only incremented once. This is because Python requires &amp;ldquo;a+=1&amp;rdquo; to be equivalent to &amp;ldquo;a = a + 1&amp;rdquo;.</source>
          <target state="translated">インデックスのリストで0が2回出現しても、0番目の要素は1回だけインクリメントされます。これは、Pythonでは「a + = 1」が「a = a + 1」と同等である必要があるためです。</target>
        </trans-unit>
        <trans-unit id="e92024a025e8d5da08f38acb277e2e10c54a8e1a" translate="yes" xml:space="preserve">
          <source>Even though the image is not as sharp, using a small number of &lt;code&gt;k&lt;/code&gt; singular values (compared to the original set of 768 values), we can recover many of the distinguishing features from this image.</source>
          <target state="translated">画像はそれほど鮮明ではありませんが、少数の &lt;code&gt;k&lt;/code&gt; 個の特異値（元の768個の値のセットと比較して）を使用すると、この画像から多くの特徴的な特徴を復元できます。</target>
        </trans-unit>
        <trans-unit id="c17cc6a8778f1a9a25e4a2f86caa32ef74f1e599" translate="yes" xml:space="preserve">
          <source>Even when the input array is two-dimensional:</source>
          <target state="translated">入力配列が2次元の場合も</target>
        </trans-unit>
        <trans-unit id="42a0931fb2d7f42f3ac87c5b18547abf5d77fe06" translate="yes" xml:space="preserve">
          <source>Evenly round to the given number of decimals.</source>
          <target state="translated">与えられた小数に均等に丸めます。</target>
        </trans-unit>
        <trans-unit id="a19e0ffd5cc3d9a3df8ad933c77e6bea9dd169fb" translate="yes" xml:space="preserve">
          <source>Evenly spaced numbers with careful handling of endpoints.</source>
          <target state="translated">エンドポイントを丁寧に扱った等間隔の数字。</target>
        </trans-unit>
        <trans-unit id="1b950907a8c83b7ddb21092298e5404983c4a665" translate="yes" xml:space="preserve">
          <source>Eventually, expect to &lt;code&gt;__array_function__&lt;/code&gt; to always be enabled.</source>
          <target state="translated">最終的には、 &lt;code&gt;__array_function__&lt;/code&gt; が常に有効になることが期待されます。</target>
        </trans-unit>
        <trans-unit id="581f2179fc03c06bcc3dcff4b3f8f2a107464b3a" translate="yes" xml:space="preserve">
          <source>Every Python module, extension module, or subpackage in the SciPy package directory should have a corresponding &lt;code&gt;test_&amp;lt;name&amp;gt;.py&lt;/code&gt; file. Pytest examines these files for test methods (named test*) and test classes (named Test*).</source>
          <target state="translated">SciPyパッケージディレクトリ内のすべてのPythonモジュール、拡張モジュール、またはサブパッケージには、対応する &lt;code&gt;test_&amp;lt;name&amp;gt;.py&lt;/code&gt; ファイルが必要です。Pytestはこれらのファイルでtestメソッド（test *という名前）とテストクラス（Test *という名前）を探します。</target>
        </trans-unit>
        <trans-unit id="8b7039d02f9e55e5e4b1540b84794daa8aa48877" translate="yes" xml:space="preserve">
          <source>Every module should have a docstring at the very top of the file. The module&amp;rsquo;s docstring may extend over multiple lines. If your docstring does extend over multiple lines, the closing three quotation marks must be on a line by itself, preferably preceded by a blank line.</source>
          <target state="translated">すべてのモジュールには、ファイルの最上部にdocstringが必要です。モジュールのdocstringは、複数行にまたがる場合があります。docstringが複数行にまたがる場合は、最後の3つの引用符を単独で1行に配置する必要があり、できれば空白行を前に付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="fae734cbfb45b3c7fcea4a1b93bd51caeedc12aa" translate="yes" xml:space="preserve">
          <source>Every ufunc calculation involves some overhead related to setting up the calculation. The practical significance of this overhead is that even though the actual calculation of the ufunc is very fast, you will be able to write array and type-specific code that will work faster for small arrays than the ufunc. In particular, using ufuncs to perform many calculations on 0-D arrays will be slower than other Python-based solutions (the silently-imported scalarmath module exists precisely to give array scalars the look-and-feel of ufunc based calculations with significantly reduced overhead).</source>
          <target state="translated">すべての ufunc の計算は、計算の設定に関連したいくつかのオーバーヘッドを伴います。このオーバーヘッドの実用的な意味は、実際のufuncの計算は非常に高速であるにもかかわらず、小さな配列に対してはufuncよりも高速に動作する配列や型に特化したコードを書くことができるようになるということです。特に、0-D 配列上で多くの計算を行うために ufuncs を使うと、他の Python ベースのソリューションよりも遅くなります (静かにインポートされた scalarmath モジュールは、配列スカラーに ufunc ベースの計算のルックアンドフィールを与えるために存在していますが、オーバーヘッドは大幅に削減されています)。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="6dcd3f46d09547b62bf07ba9b2943c95d53ddae3" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">例1</target>
        </trans-unit>
        <trans-unit id="30643b2e1a03cdc521bd995bce3101935a638007" translate="yes" xml:space="preserve">
          <source>Example 1: Matrix creation from a string</source>
          <target state="translated">例1:文字列からの行列作成</target>
        </trans-unit>
        <trans-unit id="1c56ea49918b9baed94cf4bc0ee9f324efc8841a" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">例2</target>
        </trans-unit>
        <trans-unit id="ce3d11c2b2ea882cbd46aab60dee035848945f1a" translate="yes" xml:space="preserve">
          <source>Example 2: Matrix creation from nested sequence</source>
          <target state="translated">例2:入れ子になったシーケンスからの行列作成</target>
        </trans-unit>
        <trans-unit id="fbf4dab701189a344fa5ab06d7b87c11a74e3da0" translate="yes" xml:space="preserve">
          <source>Example 3</source>
          <target state="translated">例3</target>
        </trans-unit>
        <trans-unit id="7a618a4143ae0244c26c66d93ae5ab076865eca3" translate="yes" xml:space="preserve">
          <source>Example 3: Matrix creation from an array</source>
          <target state="translated">例3:配列からの行列作成</target>
        </trans-unit>
        <trans-unit id="f4cd3ef194759e6a1bf205a2958b720d8edb10da" translate="yes" xml:space="preserve">
          <source>Example 4</source>
          <target state="translated">例4</target>
        </trans-unit>
        <trans-unit id="cbc410822099cff77c866f8b10c2e48ca12a1afc" translate="yes" xml:space="preserve">
          <source>Example Non-ufunc extension</source>
          <target state="translated">非ufunc拡張の例</target>
        </trans-unit>
        <trans-unit id="97f8c7c900cba2f392e5e38662fe498a8f56646a" translate="yes" xml:space="preserve">
          <source>Example NumPy ufunc for one dtype</source>
          <target state="translated">例 1つのdtypeに対するNumPy ufunc</target>
        </trans-unit>
        <trans-unit id="b8809483f5fc6a5c010269d8adf002c5725f0e9b" translate="yes" xml:space="preserve">
          <source>Example NumPy ufunc with multiple arguments/return values</source>
          <target state="translated">複数の引数/戻り値を持つ NumPy ufunc の例</target>
        </trans-unit>
        <trans-unit id="66ef9bf28d21feb518a571e273d9e8fce03143d5" translate="yes" xml:space="preserve">
          <source>Example NumPy ufunc with multiple dtypes</source>
          <target state="translated">複数のdtypesを持つNumPy ufuncの例</target>
        </trans-unit>
        <trans-unit id="14395f9293b35a0e404c1a51a85116a67b48bdc5" translate="yes" xml:space="preserve">
          <source>Example NumPy ufunc with structured array dtype arguments</source>
          <target state="translated">構造化された配列dtypeの引数を持つNumPy ufuncの例</target>
        </trans-unit>
        <trans-unit id="f8172515c31d6aac1029b5cb8f7b23a7b399484c" translate="yes" xml:space="preserve">
          <source>Example Rendered</source>
          <target state="translated">レンダリング例</target>
        </trans-unit>
        <trans-unit id="b501c037bbc988735c2c33076d9ac8bcdd035dcd" translate="yes" xml:space="preserve">
          <source>Example Source</source>
          <target state="translated">ソースの例</target>
        </trans-unit>
        <trans-unit id="4a0d4f43d7d9bdb2a4af703ab58a4be1e4d7fae7" translate="yes" xml:space="preserve">
          <source>Example illustrating a common use of &lt;a href=&quot;#numpy.linalg.qr&quot;&gt;&lt;code&gt;qr&lt;/code&gt;&lt;/a&gt;: solving of least squares problems</source>
          <target state="translated">&lt;a href=&quot;#numpy.linalg.qr&quot;&gt; &lt;code&gt;qr&lt;/code&gt; の&lt;/a&gt;一般的な使用法を示す例：最小二乗問題の解決</target>
        </trans-unit>
        <trans-unit id="63135172667b6a87b3380fb1464ecfa4e93bae96" translate="yes" xml:space="preserve">
          <source>Example npymath.ini modified for cross-compilation:</source>
          <target state="translated">クロスコンパイルのために修正した npymath.ini の例。</target>
        </trans-unit>
        <trans-unit id="8b9b4c475cb57be9cefc272ad9e58398f1d4a72d" translate="yes" xml:space="preserve">
          <source>Example of ellipsis use:</source>
          <target state="translated">省略形の使用例。</target>
        </trans-unit>
        <trans-unit id="663d5de84d17f73904544fdaa7818c43c339aab6" translate="yes" xml:space="preserve">
          <source>Example of the &lt;em&gt;axis&lt;/em&gt; argument</source>
          <target state="translated">&lt;em&gt;軸&lt;/em&gt;引数の例</target>
        </trans-unit>
        <trans-unit id="441193d28defb7b45677223f2e8385cc1771ef57" translate="yes" xml:space="preserve">
          <source>Example showing broadcast of scalar_like argument:</source>
          <target state="translated">scalar_like 引数のブロードキャストを示す例。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="5ac5a296d96aa3e1af1d332eed81649776f6a783" translate="yes" xml:space="preserve">
          <source>Examples include ctypes, SWIG and Cython (which wraps C and C++) and f2py (which wraps Fortran).</source>
          <target state="translated">例としては、ctypes、SWIG、Cython(CとC++をラップしています)、f2py(Fortranをラップしています)などがあります。</target>
        </trans-unit>
        <trans-unit id="4fdbf34a4034d36b34a713099fb629e7144865e3" translate="yes" xml:space="preserve">
          <source>Examples of formats that cannot be read directly but for which it is not hard to convert are those formats supported by libraries like PIL (able to read and write many image formats such as jpg, png, etc).</source>
          <target state="translated">直接読むことはできませんが、変換するのは難しくないフォーマットの例としては、PILのようなライブラリでサポートされているフォーマットがあります (jpg,pngなどの多くの画像フォーマットを読み書きすることができます)。</target>
        </trans-unit>
        <trans-unit id="f4f2c02f27681846f10b4ebe60fe1c291af3908e" translate="yes" xml:space="preserve">
          <source>Examples of using Numba, Cython, CFFI</source>
          <target state="translated">Numba、Cython、CFFIの使用例</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="f7651c4bad19b71b6cb07d324b05afde4b46e15c" translate="yes" xml:space="preserve">
          <source>Exceeded max_work.</source>
          <target state="translated">max_workを超えました。</target>
        </trans-unit>
        <trans-unit id="b4a918f3b3ebec530b94769e489c47c784e700d0" translate="yes" xml:space="preserve">
          <source>Except for splitting from the right, &lt;a href=&quot;#numpy.char.rsplit&quot;&gt;&lt;code&gt;rsplit&lt;/code&gt;&lt;/a&gt; behaves like &lt;a href=&quot;numpy.char.split#numpy.char.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">右から分割することを除いて、&lt;a href=&quot;#numpy.char.rsplit&quot;&gt; &lt;code&gt;rsplit&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;numpy.char.split#numpy.char.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; の&lt;/a&gt;ように動作します。</target>
        </trans-unit>
        <trans-unit id="50cf8f9b1990e86989de06e0c8538067135c84c5" translate="yes" xml:space="preserve">
          <source>Except for the handling of missing data this function does the same as &lt;a href=&quot;numpy.corrcoef#numpy.corrcoef&quot;&gt;&lt;code&gt;numpy.corrcoef&lt;/code&gt;&lt;/a&gt;. For more details and examples, see &lt;a href=&quot;numpy.corrcoef#numpy.corrcoef&quot;&gt;&lt;code&gt;numpy.corrcoef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">欠落データの処理を除いて、この関数は&lt;a href=&quot;numpy.corrcoef#numpy.corrcoef&quot;&gt; &lt;code&gt;numpy.corrcoef&lt;/code&gt; &lt;/a&gt;と同じです。詳細と例については、&lt;a href=&quot;numpy.corrcoef#numpy.corrcoef&quot;&gt; &lt;code&gt;numpy.corrcoef&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fcfc562b386cd345086d419126e4274f3e7274f0" translate="yes" xml:space="preserve">
          <source>Except for the handling of missing data this function does the same as &lt;a href=&quot;numpy.cov#numpy.cov&quot;&gt;&lt;code&gt;numpy.cov&lt;/code&gt;&lt;/a&gt;. For more details and examples, see &lt;a href=&quot;numpy.cov#numpy.cov&quot;&gt;&lt;code&gt;numpy.cov&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">欠落データの処理を除いて、この関数は&lt;a href=&quot;numpy.cov#numpy.cov&quot;&gt; &lt;code&gt;numpy.cov&lt;/code&gt; &lt;/a&gt;と同じです。詳細と例については、&lt;a href=&quot;numpy.cov#numpy.cov&quot;&gt; &lt;code&gt;numpy.cov&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="596913a65e41737843ee5c2dbdb338f87062d44f" translate="yes" xml:space="preserve">
          <source>Exception: if &lt;code&gt;&amp;lt;modulename&amp;gt;&lt;/code&gt; contains a substring &lt;code&gt;__user__&lt;/code&gt;, then the corresponding &lt;code&gt;python module&lt;/code&gt; block describes the signatures of so-called call-back functions (see &lt;a href=&quot;python-usage#call-back-arguments&quot;&gt;Call-back arguments&lt;/a&gt;).</source>
          <target state="translated">例外： &lt;code&gt;&amp;lt;modulename&amp;gt;&lt;/code&gt; に部分文字列 &lt;code&gt;__user__&lt;/code&gt; が含まれている場合、対応する &lt;code&gt;python module&lt;/code&gt; ブロックは、いわゆるコールバック関数のシグネチャを記述します（&lt;a href=&quot;python-usage#call-back-arguments&quot;&gt;コールバック引数を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="356b80b4376a84cb81f1eaec6f12177c31c9684b" translate="yes" xml:space="preserve">
          <source>Excessive profanity. Please avoid swearwords; people differ greatly in their sensitivity to swearing.</source>
          <target state="translated">過度の冒涜。悪口は避けてください。人によって悪口に対する感受性は大きく異なります。</target>
        </trans-unit>
        <trans-unit id="d9b4ae599e40c23f9e1e3a0e96ba44f45767d0e8" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;f2py&lt;/code&gt; without any options to get an up-to-date list of available options.</source>
          <target state="translated">オプションなしで &lt;code&gt;f2py&lt;/code&gt; を実行して、使用可能なオプションの最新リストを取得します。</target>
        </trans-unit>
        <trans-unit id="26e6ce501ea40e3a3a4030f941745cb2ec376d8c" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;func1d(a, *args)&lt;/code&gt; where &lt;code&gt;func1d&lt;/code&gt; operates on 1-D arrays and &lt;code&gt;a&lt;/code&gt; is a 1-D slice of &lt;code&gt;arr&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;func1d(a, *args)&lt;/code&gt; 実行します。ここで、 &lt;code&gt;func1d&lt;/code&gt; は1次元配列を操作し、 &lt;code&gt;a&lt;/code&gt; は &lt;code&gt;axis&lt;/code&gt; 沿った &lt;code&gt;arr&lt;/code&gt; の 1次元スライスです。</target>
        </trans-unit>
        <trans-unit id="cf7ed2655aaf6ca10ebe34c9fc51e6d32e46bc68" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;func1d(a, *args, **kwargs)&lt;/code&gt; where &lt;code&gt;func1d&lt;/code&gt; operates on 1-D arrays and &lt;code&gt;a&lt;/code&gt; is a 1-D slice of &lt;code&gt;arr&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">実行 &lt;code&gt;func1d(a, *args, **kwargs)&lt;/code&gt; &lt;code&gt;func1d&lt;/code&gt; は、 1-Dアレイで動作し、1-Dスライスである &lt;code&gt;arr&lt;/code&gt; に沿って &lt;code&gt;axis&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2cece8ace64c3475d26ff85f2c7434847f99f4d" translate="yes" xml:space="preserve">
          <source>Execute a command in a sub-process.</source>
          <target state="translated">サブプロセスでコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="cbd62d234a86ea4d63bc3019c94a352e75700653" translate="yes" xml:space="preserve">
          <source>Existing array to use for output. If not given, returns a default copy of a.</source>
          <target state="translated">出力に使用する既存の配列。指定しない場合は、デフォルトのコピーを返します。</target>
        </trans-unit>
        <trans-unit id="49efde5e22ecb6838665120a39ab53a2bd9e68ce" translate="yes" xml:space="preserve">
          <source>Existing arrays are not copied:</source>
          <target state="translated">既存の配列はコピーされません。</target>
        </trans-unit>
        <trans-unit id="49afcf31d80f21e8d0b1602a5dec36d208fe71f8" translate="yes" xml:space="preserve">
          <source>Expand the shape of an array.</source>
          <target state="translated">配列の形状を展開します。</target>
        </trans-unit>
        <trans-unit id="ffcf950230f953a0aa6e82e09f28f2ca5a3b9124" translate="yes" xml:space="preserve">
          <source>Expectation of interval, must be &amp;gt;= 0. A sequence of expectation intervals must be broadcastable over the requested size.</source>
          <target state="translated">間隔の期待値。0以上である必要があります。期待間隔のシーケンスは、要求されたサイズでブロードキャストできる必要があります。</target>
        </trans-unit>
        <trans-unit id="b78dbac20462df52109f148c03ffe8d871381643" translate="yes" xml:space="preserve">
          <source>Expected type</source>
          <target state="translated">期待されるタイプ</target>
        </trans-unit>
        <trans-unit id="cf1e24ddaed54869cdb52d8afc4913163a237789" translate="yes" xml:space="preserve">
          <source>Expects a 1-D &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;, returns None if all values are masked.</source>
          <target state="translated">1-D &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; が期待され&lt;/a&gt;、すべての値がマスクされている場合はNoneを返します。</target>
        </trans-unit>
        <trans-unit id="436d6ba04e28ca54111c317cd8c5730750821416" translate="yes" xml:space="preserve">
          <source>Experimental Windows 64 bits support</source>
          <target state="translated">実験的なWindows 64ビットサポート</target>
        </trans-unit>
        <trans-unit id="1bb6e6265dd9bdb6a18fab53ed1eab48ecc15430" translate="yes" xml:space="preserve">
          <source>Expired deprecations</source>
          <target state="translated">期限切れの非推奨</target>
        </trans-unit>
        <trans-unit id="308f613122797fe7bbf7289f6c7ded6a9a215476" translate="yes" xml:space="preserve">
          <source>Explained without fancy indexing, this is equivalent to the following use of &lt;a href=&quot;numpy.ndindex#numpy.ndindex&quot;&gt;&lt;code&gt;ndindex&lt;/code&gt;&lt;/a&gt;, which sets each of &lt;code&gt;ii&lt;/code&gt;, &lt;code&gt;jj&lt;/code&gt;, and &lt;code&gt;kk&lt;/code&gt; to a tuple of indices:</source>
          <target state="translated">ファンシーインデックスを使用せずに説明すると、これは次の&lt;a href=&quot;numpy.ndindex#numpy.ndindex&quot;&gt; &lt;code&gt;ndindex&lt;/code&gt; の&lt;/a&gt;使用と同等であり、 &lt;code&gt;ii&lt;/code&gt; 、 &lt;code&gt;jj&lt;/code&gt; 、および &lt;code&gt;kk&lt;/code&gt; のそれぞれをインデックスのタプルに設定します。</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="70888d5de72e21e66f15d3b4da0b71ef035227ca" translate="yes" xml:space="preserve">
          <source>Explanation of &lt;code&gt;out&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; 説明。</target>
        </trans-unit>
        <trans-unit id="6c1cbb49be518437de30818cb1c73f87724317b3" translate="yes" xml:space="preserve">
          <source>Explanation of anonymous return value of type &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;type&lt;/code&gt; の匿名戻り値の説明。</target>
        </trans-unit>
        <trans-unit id="21e720a46ab84c7db649aa1af73527c035249fc0" translate="yes" xml:space="preserve">
          <source>Explanation of parameters passed to a generator&amp;rsquo;s &lt;code&gt;.send()&lt;/code&gt; method, formatted as for Parameters, above. Since, like for Yields and Returns, a single object is always passed to the method, this may describe either the single parameter, or positional arguments passed as a tuple. If a docstring includes Receives it must also include Yields.</source>
          <target state="translated">上記のParametersと同様にフォーマットされた、ジェネレーターの &lt;code&gt;.send()&lt;/code&gt; メソッドに渡されるパラメーターの説明。Yields and Returnsの場合と同様に、単一のオブジェクトが常にメソッドに渡されるため、これは単一のパラメーター、またはタプルとして渡される位置引数のいずれかを表す場合があります。docstringにReceivesが含まれている場合は、Yieldsも含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="ed24536543d63881e8b2573801bfcc470ea854c5" translate="yes" xml:space="preserve">
          <source>Explanation of return value named &lt;code&gt;describe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;describe&lt;/code&gt; という名前の戻り値の説明。</target>
        </trans-unit>
        <trans-unit id="084a31a8f3e785c2c2a6e821453dbd829b121e68" translate="yes" xml:space="preserve">
          <source>Explanation of the returned values and their types. Similar to the &lt;strong&gt;Parameters&lt;/strong&gt; section, except the name of each return value is optional. The type of each return value is always required:</source>
          <target state="translated">戻り値とそのタイプの説明。各戻り値の名前がオプションであることを除いて、「&lt;strong&gt;パラメーター」&lt;/strong&gt;セクションと同様です。各戻り値のタイプは常に必要です。</target>
        </trans-unit>
        <trans-unit id="7d6a974dcdac50109739458b5d455115ab1bc92d" translate="yes" xml:space="preserve">
          <source>Explanation of the yielded values and their types. This is relevant to generators only. Similar to the &lt;strong&gt;Returns&lt;/strong&gt; section in that the name of each value is optional, but the type of each value is always required:</source>
          <target state="translated">生成された値とそのタイプの説明。これはジェネレーターにのみ関係します。各値の名前はオプションであるという点で「&lt;strong&gt;返品」&lt;/strong&gt;セクションに似てい&lt;strong&gt;ます&lt;/strong&gt;が、各値のタイプは常に必須です。</target>
        </trans-unit>
        <trans-unit id="a9375f321c90af9af48e6e3fb9835073a5901dfe" translate="yes" xml:space="preserve">
          <source>Explanations</source>
          <target state="translated">Explanations</target>
        </trans-unit>
        <trans-unit id="83ab7f45afecc2791323d368cde7b157fa580ff5" translate="yes" xml:space="preserve">
          <source>Explicit constructor call - as in &lt;code&gt;MySubClass(params)&lt;/code&gt;. This is the usual route to Python instance creation.</source>
          <target state="translated">明示的なコンストラクター呼び出し &lt;code&gt;MySubClass(params)&lt;/code&gt; 。これは、Pythonインスタンスを作成するための通常のルートです。</target>
        </trans-unit>
        <trans-unit id="7239478231860a1fad923ee0b23fbd1cf944cc01" translate="yes" xml:space="preserve">
          <source>Exploring your repository</source>
          <target state="translated">リポジトリの探索</target>
        </trans-unit>
        <trans-unit id="f2a8ab3710ac4db36fc8b2f6b13aa845d130b020" translate="yes" xml:space="preserve">
          <source>Exponent of the smallest (most negative) power of &lt;code&gt;ibeta&lt;/code&gt; that, added to 1.0, gives something different from 1.0</source>
          <target state="translated">1.0に追加された、1.0とは異なる何かを与える &lt;code&gt;ibeta&lt;/code&gt; の最小（最も負の）指数の指数</target>
        </trans-unit>
        <trans-unit id="b6c379526da851c2c188007fc0f60f969489df7a" translate="yes" xml:space="preserve">
          <source>Exponent of the smallest power of &lt;code&gt;ibeta&lt;/code&gt; that, subtracted from 1.0, gives something different from 1.0.</source>
          <target state="translated">1.0から差し引かれた &lt;code&gt;ibeta&lt;/code&gt; の最小の指数で、1.0とは異なる値を与えます。</target>
        </trans-unit>
        <trans-unit id="4b6764a081f01f39974a118ba6996f7bb9dae570" translate="yes" xml:space="preserve">
          <source>Exponentials</source>
          <target state="translated">Exponentials</target>
        </trans-unit>
        <trans-unit id="3ce964226c06687afb0e1cd2608b915c6e2ae80f" translate="yes" xml:space="preserve">
          <source>Exponents and logarithms</source>
          <target state="translated">指数と対数</target>
        </trans-unit>
        <trans-unit id="6816711cea53eaf2821d868455dd2b74af82fbfc" translate="yes" xml:space="preserve">
          <source>Extended Precision</source>
          <target state="translated">拡張された精度</target>
        </trans-unit>
        <trans-unit id="c0c674d20d95b51b6a4e4dd52d4e269a50723636" translate="yes" xml:space="preserve">
          <source>Extended array wrapping mechanism for ufuncs</source>
          <target state="translated">ufuncs の拡張配列ラッピング機構</target>
        </trans-unit>
        <trans-unit id="4be9a4abd6d7c8083fc1a7bf9004e653250a9ba5" translate="yes" xml:space="preserve">
          <source>Extending</source>
          <target state="translated">Extending</target>
        </trans-unit>
        <trans-unit id="11f9e57877f87be0cc6660ad6431454b1ce0dd15" translate="yes" xml:space="preserve">
          <source>Extending numpy.random via Cython</source>
          <target state="translated">Cython経由でnumpy.randomを拡張する</target>
        </trans-unit>
        <trans-unit id="853464b537e82bc933ba7340602eb65117de87c5" translate="yes" xml:space="preserve">
          <source>Extending via CFFI</source>
          <target state="translated">CFFI経由での拡張</target>
        </trans-unit>
        <trans-unit id="d370bc918c56f5c33646a1857c72f909913490c1" translate="yes" xml:space="preserve">
          <source>Extending via Numba</source>
          <target state="translated">ヌンバ経由で延長</target>
        </trans-unit>
        <trans-unit id="800827a3cd2ee901ad8ec499c46ac0ff69445548" translate="yes" xml:space="preserve">
          <source>Extending via Numba and CFFI</source>
          <target state="translated">ヌンバとCFFIを経由した拡張</target>
        </trans-unit>
        <trans-unit id="b8df212e6d243492be0344c26fa93a5ac0e105d8" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;#c.NpyIter_MultiNew&quot;&gt;&lt;code&gt;NpyIter_MultiNew&lt;/code&gt;&lt;/a&gt; with several advanced options providing more control over broadcasting and buffering.</source>
          <target state="translated">&lt;a href=&quot;#c.NpyIter_MultiNew&quot;&gt; &lt;code&gt;NpyIter_MultiNew&lt;/code&gt; &lt;/a&gt;を拡張して、ブロードキャストとバッファリングをより詳細に制御するいくつかの高度なオプションを提供します。</target>
        </trans-unit>
        <trans-unit id="1071c16401775941686162869b5dcd9b3809f3d7" translate="yes" xml:space="preserve">
          <source>Extension (class in numpy.distutils.core)</source>
          <target state="translated">拡張機能 (numpy.distutils.core のクラス)</target>
        </trans-unit>
        <trans-unit id="85e3302475f159bce563240760503f1c4aa91903" translate="yes" xml:space="preserve">
          <source>Extension modules that need to compile against NumPy should use this function to locate the appropriate include directory.</source>
          <target state="translated">NumPyに対してコンパイルする必要がある拡張モジュールは、この関数を使用して適切なインクルードディレクトリを見つける必要があります。</target>
        </trans-unit>
        <trans-unit id="f48f1027b2aaccf449a26fbdeefabcf146890c52" translate="yes" xml:space="preserve">
          <source>Extension modules were discussed in &lt;a href=&quot;c-info.how-to-extend#writing-an-extension&quot;&gt;Writing an extension module&lt;/a&gt;. The most basic way to interface with compiled code is to write an extension module and construct a module method that calls the compiled code. For improved readability, your method should take advantage of the &lt;code&gt;PyArg_ParseTuple&lt;/code&gt; call to convert between Python objects and C data-types. For standard C data-types there is probably already a built-in converter. For others you may need to write your own converter and use the &lt;code&gt;&quot;O&amp;amp;&quot;&lt;/code&gt; format string which allows you to specify a function that will be used to perform the conversion from the Python object to whatever C-structures are needed.</source>
          <target state="translated">拡張モジュールについては&lt;a href=&quot;c-info.how-to-extend#writing-an-extension&quot;&gt;、拡張モジュールの作成で&lt;/a&gt;説明しました。コンパイルされたコードとインターフェイスする最も基本的な方法は、拡張モジュールを記述し、コンパイルされたコードを呼び出すモジュールメソッドを構築することです。読みやすさを向上させるには、メソッドで &lt;code&gt;PyArg_ParseTuple&lt;/code&gt; 呼び出しを利用して、PythonオブジェクトとCデータ型の間で変換する必要があります。標準のCデータ型の場合、おそらくすでに組み込みのコンバーターがあります。他の人にとっては、独自のコンバーターを作成し、 &lt;code&gt;&quot;O&amp;amp;&quot;&lt;/code&gt; 形式の文字列を使用する必要がある場合があります。これにより、Pythonオブジェクトから必要なC構造体への変換を実行するために使用される関数を指定できます。</target>
        </trans-unit>
        <trans-unit id="c018e97c181cd9c183fd3a91a81ef0772a1542dd" translate="yes" xml:space="preserve">
          <source>Extension name.</source>
          <target state="translated">拡張子の名前。</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="27a37d04136a1c128f059ba2a96a979d4da85562" translate="yes" xml:space="preserve">
          <source>External &lt;code&gt;nose&lt;/code&gt; plugins are usable by &lt;code&gt;numpy.testing.Tester&lt;/code&gt;</source>
          <target state="translated">外部 &lt;code&gt;nose&lt;/code&gt; プラグインは &lt;code&gt;numpy.testing.Tester&lt;/code&gt; で使用できます</target>
        </trans-unit>
        <trans-unit id="730550afb5b9c93a998c435ea0c0d79790c3f92e" translate="yes" xml:space="preserve">
          <source>External Links:</source>
          <target state="translated">外部リンク</target>
        </trans-unit>
        <trans-unit id="ae23cb438f3e53ca3afef0a03ebcc1785000e0ee" translate="yes" xml:space="preserve">
          <source>External member: Thomas Caswell</source>
          <target state="translated">外部メンバー。トーマス・キャスウェル</target>
        </trans-unit>
        <trans-unit id="f5695baec527125ed849fab25176346709bcdc26" translate="yes" xml:space="preserve">
          <source>Extra arguments to be used in the function call. Default is no extra arguments.</source>
          <target state="translated">関数呼び出しで使用する追加引数。デフォルトでは、余分な引数はありません。</target>
        </trans-unit>
        <trans-unit id="7f681966048a97639927ca7899e8b79125b2db1c" translate="yes" xml:space="preserve">
          <source>Extra command line arguments to pass to the compiler.</source>
          <target state="translated">コンパイラに渡す追加のコマンドライン引数。</target>
        </trans-unit>
        <trans-unit id="ca14953b246ceea670453a567006ae580503bb4e" translate="yes" xml:space="preserve">
          <source>Extra command line arguments to pass to the fortran77 compiler.</source>
          <target state="translated">fortran77 コンパイラに渡す追加のコマンドライン引数。</target>
        </trans-unit>
        <trans-unit id="6295d4fda810b14243403cdc434ad1cb27dc0759" translate="yes" xml:space="preserve">
          <source>Extra command line arguments to pass to the fortran90 compiler.</source>
          <target state="translated">fortran90 コンパイラに渡す追加のコマンドライン引数。</target>
        </trans-unit>
        <trans-unit id="7475cdd2c7bf2da401a59201928f6e438e74c2c4" translate="yes" xml:space="preserve">
          <source>Extra data to be passed to the 1-d vector loops or &lt;code&gt;NULL&lt;/code&gt; if no extra-data is needed. This C-array must be the same size ( &lt;em&gt;i.e.&lt;/em&gt; ntypes) as the functions array. &lt;code&gt;NULL&lt;/code&gt; is used if extra_data is not needed. Several C-API calls for UFuncs are just 1-d vector loops that make use of this extra data to receive a pointer to the actual function to call.</source>
          <target state="translated">1次元ベクトルループに渡される追加データ、または追加データが不要な場合は &lt;code&gt;NULL&lt;/code&gt; 。このC配列は、関数配列と同じサイズ（&lt;em&gt;つまり、&lt;/em&gt; ntypes）でなければなりません。extra_dataが不要な場合は、 &lt;code&gt;NULL&lt;/code&gt; が使用されます。UFuncのいくつかのC-API呼び出しは、この追加のデータを利用して、呼び出す実際の関数へのポインターを受け取る1次元のベクトルループです。</target>
        </trans-unit>
        <trans-unit id="76b524fa169ed9d7419720ac2e63f1800fb02fd6" translate="yes" xml:space="preserve">
          <source>Extra features in NumPy Distutils</source>
          <target state="translated">NumPy Distutilsの追加機能</target>
        </trans-unit>
        <trans-unit id="0ba9e867255fe2b4e1a52a57cb3c07e37658da6a" translate="yes" xml:space="preserve">
          <source>Extra gotchas - custom &lt;code&gt;__del__&lt;/code&gt; methods and ndarray.base</source>
          <target state="translated">追加の落とし穴-カスタム &lt;code&gt;__del__&lt;/code&gt; メソッドとndarray.base</target>
        </trans-unit>
        <trans-unit id="e4b908b04be2629c5ae91c968b91dbf4fa38bfee" translate="yes" xml:space="preserve">
          <source>Extract a diagonal or construct a diagonal array.</source>
          <target state="translated">対角線を抽出したり、対角線配列を構築したりします。</target>
        </trans-unit>
        <trans-unit id="8f2f355e8dba1681289d909a9095fc402d801e4a" translate="yes" xml:space="preserve">
          <source>Extract the diagonal (requires explicit form):</source>
          <target state="translated">対角線を抽出します(明示的な形式が必要です)。</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="00b194f535090973445600575106dc4bd4b91c15" translate="yes" xml:space="preserve">
          <source>F &amp;amp; C order preserved, otherwise most similar order</source>
          <target state="translated">FとCの順序は保持されますが、それ以外は最も類似した順序です</target>
        </trans-unit>
        <trans-unit id="3a82a1967b0685fff927bd0da5e7638582e5ea69" translate="yes" xml:space="preserve">
          <source>F order</source>
          <target state="translated">エフオーダー</target>
        </trans-unit>
        <trans-unit id="c79b9dbc4a93112f31ab2f13620d941f25753284" translate="yes" xml:space="preserve">
          <source>F order if input is F and not C, otherwise C order</source>
          <target state="translated">入力がFでCでない場合はFオーダー、そうでない場合はCオーダー</target>
        </trans-unit>
        <trans-unit id="f2a180292b361263e635ced3b9691c0e12c80c50" translate="yes" xml:space="preserve">
          <source>F2PY Users Guide and Reference Manual</source>
          <target state="translated">F2PY ユーザーガイドとリファレンスマニュアル</target>
        </trans-unit>
        <trans-unit id="3b399d8776a2242967c58643767ca90dfddcac38" translate="yes" xml:space="preserve">
          <source>F2PY can be used either as a command line tool &lt;code&gt;f2py&lt;/code&gt; or as a Python module &lt;code&gt;numpy.f2py&lt;/code&gt;. While we try to install the command line tool as part of the numpy setup, some platforms like Windows make it difficult to reliably put the executable on the &lt;code&gt;PATH&lt;/code&gt;. We will refer to &lt;code&gt;f2py&lt;/code&gt; in this document but you may have to run it as a module:</source>
          <target state="translated">F2PYは、コマンドラインツール &lt;code&gt;f2py&lt;/code&gt; またはPythonモジュール &lt;code&gt;numpy.f2py&lt;/code&gt; のいずれかとして使用できます。numpyセットアップの一部としてコマンドラインツールをインストールしようとしていますが、Windowsなどの一部のプラットフォームでは、実行可能ファイルを &lt;code&gt;PATH&lt;/code&gt; に確実に配置することが困難です。このドキュメントでは &lt;code&gt;f2py&lt;/code&gt; を参照しますが、モジュールとして実行する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="792c6defec01dbafd2bb97ac5636c97cd76fd00b" translate="yes" xml:space="preserve">
          <source>F2PY compiles all sources and builds an extension module containing the wrappers. In building extension modules, F2PY uses &lt;code&gt;numpy_distutils&lt;/code&gt; that supports a number of Fortran 77/90/95 compilers, including Gnu, Intel, Sun Fortre, SGI MIPSpro, Absoft, NAG, Compaq etc. compilers.</source>
          <target state="translated">F2PYはすべてのソースをコンパイルし、ラッパーを含む拡張モジュールを構築します。拡張モジュールの構築において、F2PYは、Gnu、Intel、Sun Fortre、SGI MIPSpro、Absoft、NAG、Compaqなどのコンパイラーを含む多くのFortran77 / 90/95コンパイラーをサポートする &lt;code&gt;numpy_distutils&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="92e93ef7e35d0de4b606056f7c05a7e7f8e0fa7b" translate="yes" xml:space="preserve">
          <source>F2PY directive has the following form:</source>
          <target state="translated">F2PY指令は、以下のような形をしています。</target>
        </trans-unit>
        <trans-unit id="c802734ec43042e46fc429c3bbb7f9b7a790ab48" translate="yes" xml:space="preserve">
          <source>F2PY directives</source>
          <target state="translated">F2PY指令</target>
        </trans-unit>
        <trans-unit id="b9c3fd91761103aa57848e2e22375fdb641f2ae9" translate="yes" xml:space="preserve">
          <source>F2PY generated interface is very flexible with respect to call-back arguments. For each call-back argument an additional optional argument &lt;code&gt;&amp;lt;name&amp;gt;_extra_args&lt;/code&gt; is introduced by F2PY. This argument can be used to pass extra arguments to user provided call-back arguments.</source>
          <target state="translated">F2PYで生成されたインターフェイスは、コールバック引数に関して非常に柔軟です。コールバック引数ごとに、追加のオプションの引数 &lt;code&gt;&amp;lt;name&amp;gt;_extra_args&lt;/code&gt; がF2PYによって導入されます。この引数を使用して、ユーザーが指定したコールバック引数に追加の引数を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="99f6bbe236422250760ea03e1afee2f05419e0cf" translate="yes" xml:space="preserve">
          <source>F2PY generated wrapper functions accept (almost) any Python object as a string argument, &lt;code&gt;str&lt;/code&gt; is applied for non-string objects. Exceptions are NumPy arrays that must have type code &lt;code&gt;'c'&lt;/code&gt; or &lt;code&gt;'1'&lt;/code&gt; when used as string arguments.</source>
          <target state="translated">F2PYで生成されたラッパー関数は、（ほぼ）すべてのPythonオブジェクトを文字列引数として受け入れ、 &lt;code&gt;str&lt;/code&gt; は非文字列オブジェクトに適用されます。例外はNumPy配列であり、文字列引数として使用する場合はタイプコード &lt;code&gt;'c'&lt;/code&gt; または &lt;code&gt;'1'&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="f8ac895bc25eb576f465fead8da56c16856e681e" translate="yes" xml:space="preserve">
          <source>F2PY generates wrappers to &lt;code&gt;common&lt;/code&gt; blocks defined in a routine signature block. Common blocks are visible by all Fortran codes linked with the current extension module, but not to other extension modules (this restriction is due to how Python imports shared libraries). In Python, the F2PY wrappers to &lt;code&gt;common&lt;/code&gt; blocks are &lt;code&gt;fortran&lt;/code&gt; type objects that have (dynamic) attributes related to data members of common blocks. When accessed, these attributes return as NumPy array objects (multidimensional arrays are Fortran-contiguous) that directly link to data members in common blocks. Data members can be changed by direct assignment or by in-place changes to the corresponding array objects.</source>
          <target state="translated">F2PYは、ルーチンの署名ブロックで定義された &lt;code&gt;common&lt;/code&gt; ブロックへのラッパーを生成します。共通ブロックは、現在の拡張モジュールにリンクされているすべてのFortranコードで表示されますが、他の拡張モジュールには表示されません（この制限は、Pythonが共有ライブラリをインポートする方法によるものです）。 Pythonでは、 &lt;code&gt;common&lt;/code&gt; ブロックへのF2PYラッパーは、共通ブロックのデータメンバーに関連する（動的）属性を持つ &lt;code&gt;fortran&lt;/code&gt; タイプのオブジェクトです。アクセスされると、これらの属性は、共通ブロック内のデータメンバーに直接リンクするNumPy配列オブジェクト（多次元配列はFortranに隣接）として返されます。データメンバーは、直接割り当てるか、対応する配列オブジェクトにインプレースで変更することで変更できます。</target>
        </trans-unit>
        <trans-unit id="818e71d7199268e4ad0bb28a90c9ec7b67e6a73f" translate="yes" xml:space="preserve">
          <source>F2PY generates wrappers to all entry names using the signature of the routine block.</source>
          <target state="translated">F2PYは、ルーチンブロックのシグネチャを使用して、すべてのエントリ名へのラッパーを生成します。</target>
        </trans-unit>
        <trans-unit id="86d8d5f0414d9a23442dad9a8767153d6dc63973" translate="yes" xml:space="preserve">
          <source>F2PY has basic support for Fortran 90 module allocatable arrays.</source>
          <target state="translated">F2PYはFortran 90モジュールの割り当て可能な配列を基本的にサポートしています。</target>
        </trans-unit>
        <trans-unit id="70ca3b53756dbec8defd4dadba9010e32a75e058" translate="yes" xml:space="preserve">
          <source>F2PY implements basic compatibility checks between related arguments in order to avoid any unexpected crashes.</source>
          <target state="translated">F2PY は、予期せぬクラッシュを避けるために、関連する引数間の基本的な互換性チェックを実装しています。</target>
        </trans-unit>
        <trans-unit id="d254f0a276a232e34acfb47e3326523f334f058d" translate="yes" xml:space="preserve">
          <source>F2PY may lower cases also in C expressions when scanning Fortran codes (see &lt;code&gt;--[no]-lower&lt;/code&gt; option).</source>
          <target state="translated">F2PYは、FortranコードをスキャンするときにC式でも小文字になる場合があります（ &lt;code&gt;--[no]-lower&lt;/code&gt; オプションを参照）。</target>
        </trans-unit>
        <trans-unit id="ec756cae82276f06410c3a4d2b35a06f369bcafa" translate="yes" xml:space="preserve">
          <source>F2PY provides &lt;code&gt;intent(inplace)&lt;/code&gt; attribute that would modify the attributes of an input array so that any changes made by Fortran routine will be effective also in input argument. For example, if one specifies &lt;code&gt;intent(inplace) a&lt;/code&gt; (see below, how), then the example above would read:</source>
          <target state="translated">F2PYは、入力配列の属性を変更する &lt;code&gt;intent(inplace)&lt;/code&gt; 属性を提供します。これにより、Fortranルーチンによって行われた変更は、入力引数でも有効になります。たとえば、 &lt;code&gt;intent(inplace) a&lt;/code&gt; 指定した場合（以下の方法を参照）、上記の例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="fca2006682a608b9e1b2b53bb3bb49e7143a70f2" translate="yes" xml:space="preserve">
          <source>F2PY reads a signature file and writes a Python C/API module containing Fortran/C/Python bindings.</source>
          <target state="translated">F2PYは署名ファイルを読み込んで、Fortran/C/Pythonバインディングを含むPython C/APIモジュールを書き込みます。</target>
        </trans-unit>
        <trans-unit id="33d34cb52e571436cd929620cb006187918c3090" translate="yes" xml:space="preserve">
          <source>F2PY supports calling Python functions from Fortran or C codes.</source>
          <target state="translated">F2PYはFortranやCコードからのPython関数の呼び出しをサポートしています。</target>
        </trans-unit>
        <trans-unit id="a50f97135d3a00f9c97ae354c1ab19960a6943cf" translate="yes" xml:space="preserve">
          <source>F2Py Guide</source>
          <target state="translated">F2Pyガイド</target>
        </trans-unit>
        <trans-unit id="db0e0f2556443edbd8b7072d8289833837b00763" translate="yes" xml:space="preserve">
          <source>F2py allows you to automatically construct an extension module that interfaces to routines in Fortran 77/90/95 code. It has the ability to parse Fortran 77/90/95 code and automatically generate Python signatures for the subroutines it encounters, or you can guide how the subroutine interfaces with Python by constructing an interface-definition-file (or modifying the f2py-produced one).</source>
          <target state="translated">F2pyを使用すると、Fortran 77/90/95コード内のルーチンとインターフェースする拡張モジュールを自動的に構築することができます。F2pyはFortran 77/90/95のコードを解析し、遭遇したサブルーチンのためにPythonのシグネチャを自動的に生成する機能を持っています。また、インターフェース定義ファイルを構築することで、サブルーチンがPythonとどのようにインターフェースするかをガイドすることができます。</target>
        </trans-unit>
        <trans-unit id="bf8300dc1be4d8761c3816eeb71051b6b621dd6e" translate="yes" xml:space="preserve">
          <source>FFT</source>
          <target state="translated">FFT</target>
        </trans-unit>
        <trans-unit id="ca600c25350318c92a93eef893cdd109ac18c10d" translate="yes" xml:space="preserve">
          <source>FFT (Fast Fourier Transform) refers to a way the discrete Fourier Transform (DFT) can be calculated efficiently, by using symmetries in the calculated terms. The symmetry is highest when &lt;code&gt;n&lt;/code&gt; is a power of 2, and the transform is therefore most efficient for these sizes.</source>
          <target state="translated">FFT（高速フーリエ変換）は、計算された項の対称性を使用して、離散フーリエ変換（DFT）を効率的に計算できる方法を指します。対称性は、 &lt;code&gt;n&lt;/code&gt; が2の累乗のときに最も高くなるため、変換はこれらのサイズに対して最も効率的です。</target>
        </trans-unit>
        <trans-unit id="1e904f6af52956913c4ff703c15d71d4683c8dd0" translate="yes" xml:space="preserve">
          <source>F_CONTIGUOUS / F / FORTRAN</source>
          <target state="translated">F_CONTIGUOUS/F/FORTRAN</target>
        </trans-unit>
        <trans-unit id="10ba031202732234b30a39bc920cbaa6d821ef6b" translate="yes" xml:space="preserve">
          <source>F_CONTIGUOUS and not C_CONTIGUOUS.</source>
          <target state="translated">F_CONTIGUOUSであって、C_CONTIGUOUSではありません。</target>
        </trans-unit>
        <trans-unit id="542219cc1d690d05adfbb2e51a8b3ccb1985fddc" translate="yes" xml:space="preserve">
          <source>F_CONTIGUOUS or C_CONTIGUOUS (one-segment test).</source>
          <target state="translated">F_CONTIGUOUSまたはC_CONTIGUOUS(ワンセグテスト)。</target>
        </trans-unit>
        <trans-unit id="85c6c271be69ba94867c22f54f57654f454c41b4" translate="yes" xml:space="preserve">
          <source>Factor the matrix &lt;code&gt;a&lt;/code&gt; as &lt;em&gt;qr&lt;/em&gt;, where &lt;code&gt;q&lt;/code&gt; is orthonormal and &lt;code&gt;r&lt;/code&gt; is upper-triangular.</source>
          <target state="translated">行列 &lt;code&gt;a&lt;/code&gt; を&lt;em&gt;qr&lt;/em&gt;として因数分解します。ここで、 &lt;code&gt;q&lt;/code&gt; は正規直交で、 &lt;code&gt;r&lt;/code&gt; は上三角です。</target>
        </trans-unit>
        <trans-unit id="fb318cde14ee94b6e5d32ac7d527c0788644b0e1" translate="yes" xml:space="preserve">
          <source>Fail unless an exception of class exception_class and with message that matches expected_regexp is thrown by callable when invoked with arguments args and keyword arguments kwargs.</source>
          <target state="translated">引数argsとキーワード引数kwargsで呼び出された場合、exception_classクラスの例外でexpected_regexpにマッチするメッセージを持つ例外がcallableによってスローされない限り失敗します。</target>
        </trans-unit>
        <trans-unit id="021d84299e2248496708e7d1e546ad6c2c18b0ba" translate="yes" xml:space="preserve">
          <source>Fail unless an exception of class exception_class is thrown by callable when invoked with arguments args and keyword arguments kwargs.</source>
          <target state="translated">引数argsとキーワード引数kwargsで呼び出された場合、callableによってexception_classクラスの例外が投げられない限り失敗します。</target>
        </trans-unit>
        <trans-unit id="88591071684d50acd16039be01f0c08d81ea457a" translate="yes" xml:space="preserve">
          <source>Fail unless an exception of class exception_class is thrown by callable when invoked with arguments args and keyword arguments kwargs. If a different type of exception is thrown, it will not be caught, and the test case will be deemed to have suffered an error, exactly as for an unexpected exception.</source>
          <target state="translated">引数argsとキーワード引数kwargsで呼び出されたときに、callableによってexception_classクラスの例外がスローされない限り、失敗します。異なるタイプの例外がスローされた場合、それは捕捉されず、テストケースは予期せぬ例外の場合と同じようにエラーが発生したとみなされます。</target>
        </trans-unit>
        <trans-unit id="719788786f4bf9fa2ee26b39d5371d0a438935c3" translate="yes" xml:space="preserve">
          <source>Fail unless the given callable throws the specified warning.</source>
          <target state="translated">与えられた callable が指定された警告を投げない限り、失敗します。</target>
        </trans-unit>
        <trans-unit id="552c13b4b3257ae89f519cb962e935c59da9aa88" translate="yes" xml:space="preserve">
          <source>Fanaticism consists of redoubling your efforts when you have forgotten your aim. &amp;mdash; &lt;em&gt;George Santayana&lt;/em&gt;</source>
          <target state="translated">狂信はあなたがあなたの目的を忘れたときにあなたの努力を倍増することから成ります。&amp;mdash; &lt;em&gt;ジョージ・サンタヤナ&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c67baf5f0ace8714e24d83b916518b08cd541740" translate="yes" xml:space="preserve">
          <source>Fast element-wise operations, called a &lt;a href=&quot;#term-ufunc&quot;&gt;ufunc&lt;/a&gt;, operate on arrays.</source>
          <target state="translated">&lt;a href=&quot;#term-ufunc&quot;&gt;ufunc&lt;/a&gt;と呼ばれる要素ごとの高速操作は、配列を操作します。</target>
        </trans-unit>
        <trans-unit id="a35d6e8cdee3fab38ad9c3056a80a39fdb1d90ea" translate="yes" xml:space="preserve">
          <source>Faster version of &lt;a href=&quot;#numpy.base_repr&quot;&gt;&lt;code&gt;base_repr&lt;/code&gt;&lt;/a&gt; for base 2.</source>
          <target state="translated">base 2 の&lt;a href=&quot;#numpy.base_repr&quot;&gt; &lt;code&gt;base_repr&lt;/code&gt; の&lt;/a&gt;高速バージョン。</target>
        </trans-unit>
        <trans-unit id="450b0ab74bf6b08b6fed235cfac5fd255dd761eb" translate="yes" xml:space="preserve">
          <source>Fasttake and fastputmask slots are deprecated and NULL&amp;rsquo;ed</source>
          <target state="translated">Fasttakeおよびfastputmaskスロットは非推奨になり、NULLになります</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="cba8e75130f021ad02ee54a4acd20b3b023d217d" translate="yes" xml:space="preserve">
          <source>Fernando Perez&amp;rsquo; git page - &lt;a href=&quot;http://www.fperez.org/py4science/git.html&quot;&gt;Fernando&amp;rsquo;s git page&lt;/a&gt; - many links and tips</source>
          <target state="translated">フェルナンドペレスのgitページ-&lt;a href=&quot;http://www.fperez.org/py4science/git.html&quot;&gt;フェルナンドのgitページ&lt;/a&gt;-多くのリンクとヒント</target>
        </trans-unit>
        <trans-unit id="5c6f34280b7f890c09c370b6ae106bab782a8ea7" translate="yes" xml:space="preserve">
          <source>Field Access</source>
          <target state="translated">フィールドアクセス</target>
        </trans-unit>
        <trans-unit id="783edc3ed85699bf943ebb957a288a27bf6fa548" translate="yes" xml:space="preserve">
          <source>Field Titles</source>
          <target state="translated">フィールドタイトル</target>
        </trans-unit>
        <trans-unit id="1f20e66b17a6eb7c2baf1ab68337d91eaf6f4f80" translate="yes" xml:space="preserve">
          <source>Figure</source>
          <target state="translated">Figure</target>
        </trans-unit>
        <trans-unit id="6810ab68c484c234e459c4fd42ee6ddebf48e9df" translate="yes" xml:space="preserve">
          <source>File bug reports or feature requests, and make contributions (e.g. code patches), by opening a &amp;ldquo;new issue&amp;rdquo; on GitHub:</source>
          <target state="translated">GitHubで「新しい問題」を開いて、バグレポートや機能リクエストを提出し、貢献（コードパッチなど）を行います。</target>
        </trans-unit>
        <trans-unit id="373ecfdf236324d2c0d2c0966daa4376bd84ecc7" translate="yes" xml:space="preserve">
          <source>File extensions</source>
          <target state="translated">ファイル拡張子</target>
        </trans-unit>
        <trans-unit id="d09479e812c08194a796ba5cf0534018f31d75df" translate="yes" xml:space="preserve">
          <source>File like object that the output is written to, default is &lt;code&gt;stdout&lt;/code&gt;. The object has to be opened in &amp;lsquo;w&amp;rsquo; or &amp;lsquo;a&amp;rsquo; mode.</source>
          <target state="translated">出力が書き込まれるオブジェクトのようなファイル。デフォルトは &lt;code&gt;stdout&lt;/code&gt; です。オブジェクトは「w」または「a」モードで開く必要があります。</target>
        </trans-unit>
        <trans-unit id="87eae4c8fed58e613f33763392061f9f060bfb3a" translate="yes" xml:space="preserve">
          <source>File mode.</source>
          <target state="translated">ファイルモード。</target>
        </trans-unit>
        <trans-unit id="fd757708817417e6d160c4d854e159b642dde015" translate="yes" xml:space="preserve">
          <source>File name or file object to read.</source>
          <target state="translated">読み取るファイル名またはファイルオブジェクト。</target>
        </trans-unit>
        <trans-unit id="a9cb7966c21c4ba3f863696ad8ce671f4f627493" translate="yes" xml:space="preserve">
          <source>File object.</source>
          <target state="translated">ファイルオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4a94520c92dda87c31025fbdcee94cc740835e3c" translate="yes" xml:space="preserve">
          <source>File on disk is unchanged:</source>
          <target state="translated">ディスク上のファイルに変更はありません。</target>
        </trans-unit>
        <trans-unit id="0031f1b0b3ec78263f049edb5bf2d9bd62cb7daa" translate="yes" xml:space="preserve">
          <source>File or filename to which the data is saved. If file is a file-object, then the filename is unchanged. If file is a string or Path, a &lt;code&gt;.npy&lt;/code&gt; extension will be appended to the file name if it does not already have one.</source>
          <target state="translated">データの保存先のファイルまたはファイル名。fileがfile-objectの場合、ファイル名は変更されません。ファイルが文字列またはパスの場合、拡張子がない場合は &lt;code&gt;.npy&lt;/code&gt; 拡張子がファイル名に追加されます。</target>
        </trans-unit>
        <trans-unit id="1eb6e34596962a0a844dec399c9d41368523ad02" translate="yes" xml:space="preserve">
          <source>File or filename to which the data is saved. If file is a file-object, then the filename is unchanged. If file is a string or Path, a &lt;code&gt;.npy&lt;/code&gt; extension will be appended to the filename if it does not already have one.</source>
          <target state="translated">データが保存されるファイルまたはファイル名。fileがfile-objectの場合、ファイル名は変更されません。ファイルが文字列またはパスの場合、ファイル名に &lt;code&gt;.npy&lt;/code&gt; 拡張子が付いていなければ、拡張子が.npyに追加されます。</target>
        </trans-unit>
        <trans-unit id="e820f26629f1b163437a25da45907f2a0bdeef89" translate="yes" xml:space="preserve">
          <source>File, filename, list, or generator to read. If the filename extension is &lt;code&gt;gz&lt;/code&gt; or &lt;a href=&quot;https://docs.python.org/dev/library/bz2.html#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt;, the file is first decompressed. Note that generators must return byte strings in Python 3k. The strings in a list or produced by a generator are treated as lines.</source>
          <target state="translated">読み取るファイル、ファイル名、リスト、またはジェネレータ。ファイル名の拡張子が &lt;code&gt;gz&lt;/code&gt; または&lt;a href=&quot;https://docs.python.org/dev/library/bz2.html#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; の&lt;/a&gt;場合、ファイルは最初に解凍されます。ジェネレーターはPython 3kでバイト文字列を返す必要があることに注意してください。リスト内の文字列またはジェネレータによって生成された文字列は、行として扱われます。</target>
        </trans-unit>
        <trans-unit id="fab43e32c1dfae0973539d24c1436cb574228947" translate="yes" xml:space="preserve">
          <source>File, filename, list, or generator to read. If the filename extension is &lt;code&gt;gz&lt;/code&gt; or &lt;a href=&quot;https://docs.python.org/dev/library/bz2.html#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt;, the file is first decompressed. Note that generators must return byte strings. The strings in a list or produced by a generator are treated as lines.</source>
          <target state="translated">読み取るファイル、ファイル名、リスト、またはジェネレーター。ファイル名拡張子が &lt;code&gt;gz&lt;/code&gt; または&lt;a href=&quot;https://docs.python.org/dev/library/bz2.html#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; の&lt;/a&gt;場合、ファイルは最初に解凍されます。ジェネレータはバイト文字列を返す必要があることに注意してください。リスト内の文字列またはジェネレータによって生成された文字列は、行として扱われます。</target>
        </trans-unit>
        <trans-unit id="822b222e1d15e367e3952f91b983db03e9a7813a" translate="yes" xml:space="preserve">
          <source>File, filename, or generator to read. If the filename extension is &lt;code&gt;.gz&lt;/code&gt; or &lt;code&gt;.bz2&lt;/code&gt;, the file is first decompressed. Note that generators should return byte strings for Python 3k.</source>
          <target state="translated">読み取るファイル、ファイル名、またはジェネレータ。ファイル名の拡張子が &lt;code&gt;.gz&lt;/code&gt; または &lt;code&gt;.bz2&lt;/code&gt; の場合、ファイルは最初に解凍されます。ジェネレーターはPython 3kのバイト文字列を返す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7c2d62ffff5fbd690a9400522b7a8e17b68bb40c" translate="yes" xml:space="preserve">
          <source>File, filename, or generator to read. If the filename extension is &lt;code&gt;.gz&lt;/code&gt; or &lt;code&gt;.bz2&lt;/code&gt;, the file is first decompressed. Note that generators should return byte strings.</source>
          <target state="translated">読み取るファイル、ファイル名、またはジェネレーター。ファイル名拡張子が &lt;code&gt;.gz&lt;/code&gt; または &lt;code&gt;.bz2&lt;/code&gt; の場合、ファイルは最初に解凍されます。ジェネレータはバイト文字列を返す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c13aad6dcb77e8786c02dc6c8f0cc3a100a87f10" translate="yes" xml:space="preserve">
          <source>File-like object to write the output to. If omitted, use a pager.</source>
          <target state="translated">出力を書き込むファイルのようなオブジェクト。省略した場合はページャーを使用します。</target>
        </trans-unit>
        <trans-unit id="3b5057522ae1af734e89a0b5dfbff160729789a2" translate="yes" xml:space="preserve">
          <source>Filename extension if &lt;code&gt;source_fn&lt;/code&gt; is not provided. The extension tells which fortran standard is used. The default is &lt;code&gt;f&lt;/code&gt;, which implies F77 standard.</source>
          <target state="translated">&lt;code&gt;source_fn&lt;/code&gt; が指定されていない場合のファイル名拡張子。拡張機能は、どのFortran標準が使用されているかを示します。デフォルトは &lt;code&gt;f&lt;/code&gt; で、これはF77標準を意味します。</target>
        </trans-unit>
        <trans-unit id="529e452aa227b660fcf372199a15e8d7d5c2906a" translate="yes" xml:space="preserve">
          <source>Filename or file object to read.</source>
          <target state="translated">読み取るファイル名またはファイルオブジェクト。</target>
        </trans-unit>
        <trans-unit id="cafc76c090d17de83480422080a28bd0d7fd39f0" translate="yes" xml:space="preserve">
          <source>Fill a newly created array with a single value obj at all locations in the structure with object data-types. No checking is performed but &lt;em&gt;arr&lt;/em&gt; must be of data-type &lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; and be single-segment and uninitialized (no previous objects in position). Use &lt;code&gt;PyArray_DECREF&lt;/code&gt; (&lt;em&gt;arr&lt;/em&gt;) if you need to decrement all the items in the object array prior to calling this function.</source>
          <target state="translated">新しく作成された配列に、構造体のすべての場所で単一の値objをオブジェクトデータ型で埋めます。チェックは行われませんが、&lt;em&gt;arr&lt;/em&gt;はデータ型&lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt;で、単一セグメントで初期化されていない（前のオブジェクトが配置されていない）必要があります。この関数を呼び出す前にオブジェクト配列のすべての項目をデクリメントする必要がある場合は、 &lt;code&gt;PyArray_DECREF&lt;/code&gt; （&lt;em&gt;arr&lt;/em&gt;）を使用してください。</target>
        </trans-unit>
        <trans-unit id="bb9c4c9e7ee887e06f557b25790d19437a193098" translate="yes" xml:space="preserve">
          <source>Fill a newly created array with a single value obj at all locations in the structure with object data-types. No checking is performed but &lt;em&gt;arr&lt;/em&gt; must be of data-type &lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; and be single-segment and uninitialized (no previous objects in position). Use &lt;code&gt;PyArray_DECREF&lt;/code&gt; (&lt;em&gt;arr&lt;/em&gt;) if you need to decrement all the items in the object array prior to calling this function.</source>
          <target state="translated">構造内のすべての場所で、新しく作成された配列に単一の値objをオブジェクトデータ型で入力します。チェックは実行されませんが、&lt;em&gt;arr&lt;/em&gt;はデータ型&lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; で&lt;/a&gt;あり、単一セグメントで初期化されていない必要があります（前のオブジェクトが配置されていない）。この関数を呼び出す前にオブジェクト配列内のすべての項目をデクリメントする必要がある場合は、 &lt;code&gt;PyArray_DECREF&lt;/code&gt; （&lt;em&gt;arr&lt;/em&gt;）を使用します。</target>
        </trans-unit>
        <trans-unit id="2dddc689c840b0f704b5fbfeacd8ef3c5403555f" translate="yes" xml:space="preserve">
          <source>Fill in a new Python type-object structure with pointers to new functions that will over-ride the default behavior while leaving any function that should remain the same unfilled (or NULL). The tp_name element should be different.</source>
          <target state="translated">デフォルトの振る舞いを上書きする新しい関数へのポインタを持つ新しいPythonの型オブジェクト構造体を埋めます。tp_name要素は異なるものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="522f873213d8106cc0a4bcd37cf77275093b44ed" translate="yes" xml:space="preserve">
          <source>Fill in the tp_base member of the new type-object structure with a pointer to the (main) parent type object. For multiple-inheritance, also fill in the tp_bases member with a tuple containing all of the parent objects in the order they should be used to define inheritance. Remember, all parent-types must have the same C-structure for multiple inheritance to work properly.</source>
          <target state="translated">新しい型オブジェクト構造体の tp_base メンバに、(メインの)親型オブジェクトへのポインタを記入します。複数継承の場合は、継承を定義するために使用されるべき順序で、すべての親オブジェクトを含むタプルを tp_bases メンバに記入します。マルチプル継承が正しく動作するためには、すべての親型が同じC構造を持っていなければならないことを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="b5a170286ef4b261aa8d713f55afdd2bfdd31a79" translate="yes" xml:space="preserve">
          <source>Fill out the release note &lt;code&gt;doc/release/1.14.5-notes.rst&lt;/code&gt; calling out significant changes.</source>
          <target state="translated">リリースノート &lt;code&gt;doc/release/1.14.5-notes.rst&lt;/code&gt; に記入して、重要な変更を呼び出します。</target>
        </trans-unit>
        <trans-unit id="260366fdf73d36b977576943b4aedf90420566c3" translate="yes" xml:space="preserve">
          <source>Fill the array pointed to by &lt;em&gt;obj&lt;/em&gt; &amp;mdash;which must be a (subclass of) ndarray&amp;mdash;with the contents of &lt;em&gt;val&lt;/em&gt; (evaluated as a byte). This macro calls memset, so obj must be contiguous.</source>
          <target state="translated">&lt;em&gt;objが&lt;/em&gt;指す配列（ndarray（のサブクラス）でなければなりません）に、&lt;em&gt;val&lt;/em&gt;の内容（バイトとして評価）を入力します。このマクロはmemsetを呼び出すため、objは連続している必要があります。</target>
        </trans-unit>
        <trans-unit id="1cc72d434ca66ec2855e95222b47cf34ee62d6a9" translate="yes" xml:space="preserve">
          <source>Fill the array with a scalar value.</source>
          <target state="translated">配列をスカラ値で埋めます。</target>
        </trans-unit>
        <trans-unit id="a5d5966e608173a9667b1c1fac892e66538c72e9" translate="yes" xml:space="preserve">
          <source>Fill the array, &lt;em&gt;arr&lt;/em&gt;, with the given scalar object, &lt;em&gt;obj&lt;/em&gt;. The object is first converted to the data type of &lt;em&gt;arr&lt;/em&gt;, and then copied into every location. A -1 is returned if an error occurs, otherwise 0 is returned.</source>
          <target state="translated">配列&lt;em&gt;arr&lt;/em&gt;に、指定されたスカラーオブジェクト&lt;em&gt;objを入力し&lt;/em&gt;ます。オブジェクトはまず&lt;em&gt;arr&lt;/em&gt;のデータ型に変換され、次にすべての場所にコピーされます。エラーが発生した場合は-1が返され、それ以外の場合は0が返されます。</target>
        </trans-unit>
        <trans-unit id="7bee882405d3a5e1e28b315ab4a7baab2498c486" translate="yes" xml:space="preserve">
          <source>Fill the main diagonal of the given array of any dimensionality.</source>
          <target state="translated">任意の次元の配列の主対角線を埋めます.</target>
        </trans-unit>
        <trans-unit id="b0054199bd21115b17143e2277b55874769f1942" translate="yes" xml:space="preserve">
          <source>Fill value.</source>
          <target state="translated">塗りつぶし値。</target>
        </trans-unit>
        <trans-unit id="b3edc087fa7c92433208963d028502658cb11c3c" translate="yes" xml:space="preserve">
          <source>Filling a masked array</source>
          <target state="translated">マスクされた配列を埋める</target>
        </trans-unit>
        <trans-unit id="b16b1c014bc041df050e0baec2b30b9a58147141" translate="yes" xml:space="preserve">
          <source>Filling in the missing data</source>
          <target state="translated">不足しているデータを埋める</target>
        </trans-unit>
        <trans-unit id="f534a9943c59ee88bfbaa91a174f38f23a434db7" translate="yes" xml:space="preserve">
          <source>Filling value used to pad missing data on the shorter arrays.</source>
          <target state="translated">短い配列の欠落したデータを埋めるために使用される充填値。</target>
        </trans-unit>
        <trans-unit id="4473d8b6f530a08d5d328b58cdecfd819be6ec67" translate="yes" xml:space="preserve">
          <source>Filling value. A consistency test is performed to make sure the value is compatible with the dtype of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">充填値。値が &lt;code&gt;a&lt;/code&gt; のdtypeと互換性があることを確認するために、整合性テストが実行されます。</target>
        </trans-unit>
        <trans-unit id="13227282778cd8d20999d32a512e651e3ee07193" translate="yes" xml:space="preserve">
          <source>Filling value. Default is None.</source>
          <target state="translated">充填値を指定します。デフォルトは None です。</target>
        </trans-unit>
        <trans-unit id="6c1d42d50fc7e4074f490614ad1bcf00ba471b76" translate="yes" xml:space="preserve">
          <source>Fills &lt;code&gt;nop&lt;/code&gt; flags. Sets &lt;code&gt;outreadflags[i]&lt;/code&gt; to 1 if &lt;code&gt;op[i]&lt;/code&gt; can be read from, and to 0 if not.</source>
          <target state="translated">塗りつぶしは、 &lt;code&gt;nop&lt;/code&gt; フラグを。 &lt;code&gt;op[i]&lt;/code&gt; を読み取ることができる場合は &lt;code&gt;outreadflags[i]&lt;/code&gt; を1に設定し、そうでない場合は0に設定します。</target>
        </trans-unit>
        <trans-unit id="749d04ce696c047f8e1f31d9e0905d115c8ee6f7" translate="yes" xml:space="preserve">
          <source>Fills &lt;code&gt;nop&lt;/code&gt; flags. Sets &lt;code&gt;outwriteflags[i]&lt;/code&gt; to 1 if &lt;code&gt;op[i]&lt;/code&gt; can be written to, and to 0 if not.</source>
          <target state="translated">塗りつぶしは、 &lt;code&gt;nop&lt;/code&gt; フラグを。 &lt;code&gt;op[i]&lt;/code&gt; に書き込むことができる場合は &lt;code&gt;outwriteflags[i]&lt;/code&gt; を1に設定し、できない場合は0に設定します。</target>
        </trans-unit>
        <trans-unit id="488079b1696f7e1612a42c6bc0389bc81283467e" translate="yes" xml:space="preserve">
          <source>Fills fields from output with fields from input, with support for nested structures.</source>
          <target state="translated">出力からのフィールドを入力からのフィールドで埋め、入れ子構造をサポートします。</target>
        </trans-unit>
        <trans-unit id="8d3ad1e9024ff38aba4d75bcdff8761b89757502" translate="yes" xml:space="preserve">
          <source>Filter deprecation warnings while running the test suite.</source>
          <target state="translated">テストスイートの実行中に非推奨の警告をフィルタリングします。</target>
        </trans-unit>
        <trans-unit id="53d64090d55b3e9e6c51d2a5eb3eec10a8e6734d" translate="yes" xml:space="preserve">
          <source>Filters added inside the context manager will be discarded again when leaving it. Upon entering all filters defined outside a context will be applied automatically.</source>
          <target state="translated">コンテキストマネージャ内で追加されたフィルタは、コンテキストマネージャを離れると再び破棄されます。コンテキストの外側で定義されたフィルタは、入力時に自動的に適用されます。</target>
        </trans-unit>
        <trans-unit id="1f7718a6ac69fd3c4dc296189cd48158349007af" translate="yes" xml:space="preserve">
          <source>Final output manipulation</source>
          <target state="translated">最終出力操作</target>
        </trans-unit>
        <trans-unit id="f8cf825450130b603f61a294cd870952ff541ac0" translate="yes" xml:space="preserve">
          <source>Finally make a pull request using Github. Make sure it is against the maintenance branch and not master, Github will usually suggest you make the pull request against master.</source>
          <target state="translated">最後にGithubを使ってプルリクエストを行います。master ではなく maintenance ブランチに対するものであることを確認してください。Github は通常、master に対するプルリクエストを推奨します。</target>
        </trans-unit>
        <trans-unit id="ba468d0ce6c90f05fb67a4c2a63c164ebea004bd" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;Configuration&lt;/code&gt; has &lt;code&gt;.todict()&lt;/code&gt; method that returns all the configuration data as a dictionary suitable for passing on to the &lt;code&gt;setup(..)&lt;/code&gt; function.</source>
          <target state="translated">最後に、 &lt;code&gt;Configuration&lt;/code&gt; には、すべての構成データを、 &lt;code&gt;setup(..)&lt;/code&gt; 関数に渡すのに適した辞書として返す &lt;code&gt;.todict()&lt;/code&gt; メソッドがあります。</target>
        </trans-unit>
        <trans-unit id="889c8c42cccc1d124561a48d8ca41abb6ac29d7b" translate="yes" xml:space="preserve">
          <source>Finally, a data type can describe items that are themselves arrays of items of another data type. These sub-arrays must, however, be of a fixed size.</source>
          <target state="translated">最後に、データ型は、それ自体が別のデータ型の項目の配列である項目を記述することができます。ただし、これらのサブ配列は固定サイズでなければなりません。</target>
        </trans-unit>
        <trans-unit id="aa9d6cc4ce78cfcc5632e894bf62475be204d2f2" translate="yes" xml:space="preserve">
          <source>Finally, build an extension module using &lt;code&gt;f2py -c -m foo calculate.f&lt;/code&gt;</source>
          <target state="translated">最後に、 &lt;code&gt;f2py -c -m foo calculate.f&lt;/code&gt; を使用して拡張モジュールを構築します。</target>
        </trans-unit>
        <trans-unit id="8c4822ed4109421c2e3621bdd61e51416dfd1386" translate="yes" xml:space="preserve">
          <source>Finally, build the extension module using &lt;code&gt;f2py -c callback2.pyf callback.f&lt;/code&gt;.</source>
          <target state="translated">最後に、 &lt;code&gt;f2py -c callback2.pyf callback.f&lt;/code&gt; を使用して拡張モジュールをビルドします。</target>
        </trans-unit>
        <trans-unit id="591676022a4d7afed7631e7209e11f88a0c70ca2" translate="yes" xml:space="preserve">
          <source>Finally, if you are only interested in testing a subset of SciPy, for example, the &lt;code&gt;integrate&lt;/code&gt; module, use the following:</source>
          <target state="translated">最後に、 &lt;code&gt;integrate&lt;/code&gt; モジュールなど、SciPyのサブセットのテストのみに関心がある場合は、以下を使用します。</target>
        </trans-unit>
        <trans-unit id="7ffdd7c64bfdacea7dacfdba32a5f08b8fc22860" translate="yes" xml:space="preserve">
          <source>Finally, if you detect a typo or an error in the documentation, or would like to suggest a different approach, you can also open an issue or submit a pull request with your suggestion. Keep in mind that changes fixing grammatical/spelling errors are welcome but not necessarily the highest priority. &amp;ldquo;Grammatical correctness&amp;rdquo; often gets confused with &amp;ldquo;style&amp;rdquo; which can result in unfruitful discussions that don&amp;rsquo;t necessarily improve anything. Changes that modify wording or rearrange phrasing without changing the technical content are discouraged. If you think that a different wording improves clarity, you should open an issue as noted above, but again, changes along these lines very often tend to be highly subjective and not necessarily do much to improve the quality of the documentation.</source>
          <target state="translated">最後に、ドキュメントでタイプミスやエラーを検出した場合、または別のアプローチを提案したい場合は、問題を開いたり、提案とともにプルリクエストを送信したりすることもできます。文法/スペルミスを修正する変更は歓迎されますが、必ずしも最優先事項ではないことに注意してください。 「文法の正しさ」は「スタイル」と混同されることが多く、その結果、必ずしも何も改善されない不実な議論につながる可能性があります。技術的な内容を変更せずに文言を変更したり、フレージングを再配置したりすることはお勧めしません。別の言い回しで明快さが向上すると思われる場合は、上記のように問題を開く必要がありますが、繰り返しになりますが、これらの線に沿った変更は非常に主観的である傾向があり、必ずしもドキュメントの品質を向上させるとは限りません。</target>
        </trans-unit>
        <trans-unit id="3cd9ab198daaf3fb255075968e2a8d87bc37a3b9" translate="yes" xml:space="preserve">
          <source>Finally, it is emphasized that &lt;code&gt;v&lt;/code&gt; consists of the &lt;em&gt;right&lt;/em&gt; (as in right-hand side) eigenvectors of &lt;code&gt;a&lt;/code&gt;. A vector &lt;code&gt;y&lt;/code&gt; satisfying &lt;code&gt;dot(y.T, a) = z * y.T&lt;/code&gt; for some number &lt;code&gt;z&lt;/code&gt; is called a &lt;em&gt;left&lt;/em&gt; eigenvector of &lt;code&gt;a&lt;/code&gt;, and, in general, the left and right eigenvectors of a matrix are not necessarily the (perhaps conjugate) transposes of each other.</source>
          <target state="translated">最後に、 &lt;code&gt;v&lt;/code&gt; が &lt;code&gt;a&lt;/code&gt; の&lt;em&gt;右&lt;/em&gt;（固有値）の固有ベクトルで構成されることを強調します。ベクトル &lt;code&gt;y&lt;/code&gt; 満たす &lt;code&gt;dot(y.T, a) = z * y.T&lt;/code&gt; いくつかの数のために &lt;code&gt;z&lt;/code&gt; 呼び出され&lt;em&gt;、左&lt;/em&gt;の固有ベクトル、及び、一般的に、マトリックスの左と右の固有ベクトルは、必ずしもそれぞれの（おそらく共役）転置ありませんその他。&lt;em&gt;&lt;/em&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d65f378e68ed6a19a18dfdea402e5e3481327cbe" translate="yes" xml:space="preserve">
          <source>Finally, it is emphasized that &lt;code&gt;v&lt;/code&gt; consists of the &lt;em&gt;right&lt;/em&gt; (as in right-hand side) eigenvectors of &lt;code&gt;a&lt;/code&gt;. A vector &lt;code&gt;y&lt;/code&gt; satisfying &lt;code&gt;y.T @ a = z * y.T&lt;/code&gt; for some number &lt;code&gt;z&lt;/code&gt; is called a &lt;em&gt;left&lt;/em&gt; eigenvector of &lt;code&gt;a&lt;/code&gt;, and, in general, the left and right eigenvectors of a matrix are not necessarily the (perhaps conjugate) transposes of each other.</source>
          <target state="translated">最後に、ことが強調される &lt;code&gt;v&lt;/code&gt; で構成され&lt;em&gt;、右&lt;/em&gt;の固有ベクトル（右側のように）。ベクトル &lt;code&gt;y&lt;/code&gt; 満足 &lt;code&gt;y.T @ a = z * y.T&lt;/code&gt; いくつかの数のために &lt;code&gt;z&lt;/code&gt; が呼び出され&lt;em&gt;、左&lt;/em&gt;の固有ベクトル一般的に、マトリックスの左と右の固有ベクトルは、必ずしも互いの（おそらく共役）転置されない、などです。 &lt;code&gt;a&lt;/code&gt; &lt;em&gt;&lt;/em&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cc16b6bd7f60859052f3d3e721d3a31f9f6a180" translate="yes" xml:space="preserve">
          <source>Finally, now you are confident this tag correctly defines the source code that you released you can push the tag and release commit up to github:</source>
          <target state="translated">最後に、このタグがリリースしたソースコードを正しく定義していることを確認したら、このタグをgithubにプッシュしてコミットをリリースすることができます。</target>
        </trans-unit>
        <trans-unit id="6153981fb1186c6a6c180fa5791ae775d104d070" translate="yes" xml:space="preserve">
          <source>Finally, remove the backup branch upon a successful rebase:</source>
          <target state="translated">最後に、リベースが成功したらバックアップブランチを削除します。</target>
        </trans-unit>
        <trans-unit id="98d9a64e4784c058720be52ad39c03d39a9fcbd1" translate="yes" xml:space="preserve">
          <source>Finally, specific entries can be masked and/or unmasked by assigning to the mask a sequence of booleans:</source>
          <target state="translated">最後に、マスクにブーリアンのシーケンスを割り当てることで、特定のエントリをマスクしたり、マスクを解除したりすることができます。</target>
        </trans-unit>
        <trans-unit id="4d63661f6815f6c84ea80e3487b297638030ca91" translate="yes" xml:space="preserve">
          <source>Finally, the committee will make a report to the NumPy Steering Council (as well as the NumPy core team in the event of an ongoing resolution, such as a ban).</source>
          <target state="translated">最後に、委員会はNumPy運営協議会に報告を行います(禁止などの継続中の決議があった場合はNumPyコアチームにも報告します)。</target>
        </trans-unit>
        <trans-unit id="d4ee797bc2c97cc8f17d94ef802f458cb35c39bc" translate="yes" xml:space="preserve">
          <source>Finally, the decision is made about how to execute the looping mechanism to ensure that all elements of the input arrays are combined to produce the output arrays of the correct type. The options for loop execution are one-loop (for contiguous, aligned, and correct data type), strided-loop (for non-contiguous but still aligned and correct data type), and a buffered loop (for mis-aligned or incorrect data type situations). Depending on which execution method is called for, the loop is then setup and computed.</source>
          <target state="translated">最後に,入力配列のすべての要素が正しい型の出力配列を生成するために結合されることを確実にするために,ループ機構をどのように実行するかについての決定が行われます.ループ実行のオプションは,1ループ(連続しており,整列しており,正しいデータ型の場合),strided-loop(連続していないが整列しており,正しいデータ型の場合),およびバッファ付きループ(整列していない,または正しくないデータ型の場合)です.どの実行方法が呼び出されたかに応じて、ループが設定され、計算されます。</target>
        </trans-unit>
        <trans-unit id="75d671d62eb366ddccfcb1e2724191d1a472b131" translate="yes" xml:space="preserve">
          <source>Finally, the two functions to be exported by the interface can be written simply as:</source>
          <target state="translated">最後に、インターフェースがエクスポートする2つの関数は、単純に次のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="f06dcc2f32047bb203bf95d18ff9fb7501e8c9e4" translate="yes" xml:space="preserve">
          <source>Finally, to obtain the full approximated image, we need to reassemble these matrices into the approximation. Now, note that</source>
          <target state="translated">最後に、完全な近似画像を得るために、これらの行列を近似画像に再構築する必要があります。さて、次のことに注意してください</target>
        </trans-unit>
        <trans-unit id="3616e9f1dcf861efd823c12b4478a31e6b82b402" translate="yes" xml:space="preserve">
          <source>Financial functions</source>
          <target state="translated">財務機能</target>
        </trans-unit>
        <trans-unit id="e6c50d99742741634b01369176b77e9bcc5af665" translate="yes" xml:space="preserve">
          <source>Financial interests, such as investments, employment or contracting work, outside of The Project that may influence their work on The Project.</source>
          <target state="translated">プロジェクト以外の投資、雇用、請負業務など、プロジェクトでの業務に影響を与える可能性のある財務上の利害関係。</target>
        </trans-unit>
        <trans-unit id="eddebdeca9f674c3a8bdff9147a750bce04b0b48" translate="yes" xml:space="preserve">
          <source>Find a candidate who can serve as a mediator.</source>
          <target state="translated">斡旋役を務めてくれる候補者を探しましょう。</target>
        </trans-unit>
        <trans-unit id="75334f040026f76d3eebb8839bcb303508014551" translate="yes" xml:space="preserve">
          <source>Find a domain suitable for a polynomial or Chebyshev series defined at the values supplied.</source>
          <target state="translated">与えられた値で定義された多項式またはチェビシェフ級数に適した領域を探します。</target>
        </trans-unit>
        <trans-unit id="c2a6e9c15d888c380a37d1831fa7891adeb9bb51" translate="yes" xml:space="preserve">
          <source>Find contiguous unmasked data in a masked array along the given axis.</source>
          <target state="translated">指定された軸に沿ってマスクされた配列の中から連続するマスクされていないデータを見つけます。</target>
        </trans-unit>
        <trans-unit id="a4ea5a445ce3dee9c559f1f1b3b7f52dca61477d" translate="yes" xml:space="preserve">
          <source>Find elements in a sorted array.</source>
          <target state="translated">ソートされた配列の要素を検索します。</target>
        </trans-unit>
        <trans-unit id="48cd38efe59f33f3a5f798ed6a4cf4880d549aa4" translate="yes" xml:space="preserve">
          <source>Find elements in sorted array.</source>
          <target state="translated">ソートされた配列の要素を検索します。</target>
        </trans-unit>
        <trans-unit id="f6a5d00a32b708a9fb964c2d1da18b0ebb9fba20" translate="yes" xml:space="preserve">
          <source>Find indices where elements of v should be inserted in a to maintain order.</source>
          <target state="translated">順番を維持するためにvの要素がaに挿入されるべきインデックスを見つけます。</target>
        </trans-unit>
        <trans-unit id="18d914d41d09d92c97e462c896bc6019f8705e89" translate="yes" xml:space="preserve">
          <source>Find indices where elements should be inserted to maintain order.</source>
          <target state="translated">順番を維持するために要素が挿入されるべきインデックスを見つけます。</target>
        </trans-unit>
        <trans-unit id="9f16fd78492b0e655d9646c090e0277fb4bab8b3" translate="yes" xml:space="preserve">
          <source>Find more information about &lt;a href=&quot;../reference/arrays.indexing#arrays-indexing&quot;&gt;newaxis here&lt;/a&gt; and &lt;code&gt;expand_dims&lt;/code&gt; at &lt;a href=&quot;../reference/generated/numpy.expand_dims#numpy.expand_dims&quot;&gt;&lt;code&gt;expand_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../reference/arrays.indexing#arrays-indexing&quot;&gt;newaxisの&lt;/a&gt;詳細については、 &lt;code&gt;expand_dims&lt;/code&gt; で&lt;a href=&quot;../reference/generated/numpy.expand_dims#numpy.expand_dims&quot;&gt; &lt;code&gt;expand_dims&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4372485b0452a2bbbc2898c490d8eaeffc724caf" translate="yes" xml:space="preserve">
          <source>Find the coefficients of a polynomial with a given sequence of roots.</source>
          <target state="translated">与えられた根の列を持つ多項式の係数を求めよ。</target>
        </trans-unit>
        <trans-unit id="faa2e8dff7b7635f67ecf147d005df15f99ba737" translate="yes" xml:space="preserve">
          <source>Find the coefficients of a polynomial with the given sequence of roots.</source>
          <target state="translated">与えられた根の列を持つ多項式の係数を求めよ。</target>
        </trans-unit>
        <trans-unit id="4eb3d9e0549601789e7c859dc2344bd2a9cd19fd" translate="yes" xml:space="preserve">
          <source>Find the derivative of order &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">次数 &lt;code&gt;m&lt;/code&gt; の導関数を求めます。</target>
        </trans-unit>
        <trans-unit id="d4ef9328264dc057bcc77daf8eddd203dc0e44a3" translate="yes" xml:space="preserve">
          <source>Find the duplicates in a structured array along a given key</source>
          <target state="translated">指定されたキーに沿って構造化された配列の重複を見つける</target>
        </trans-unit>
        <trans-unit id="8b2e68d5137b01880925e686f099633be3e06dde" translate="yes" xml:space="preserve">
          <source>Find the indices into a sorted array &lt;code&gt;a&lt;/code&gt; such that, if the corresponding elements in &lt;code&gt;v&lt;/code&gt; were inserted before the indices, the order of &lt;code&gt;a&lt;/code&gt; would be preserved.</source>
          <target state="translated">ソートされた配列へのインデックス検索に対応する要素ならばそのようなことは &lt;code&gt;v&lt;/code&gt; は指数の前に挿入された、の順に保存されるであろうが。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a9d95dd2166bd57167eb2521a394d4c2313d8ed" translate="yes" xml:space="preserve">
          <source>Find the indices of array elements that are non-zero, grouped by element.</source>
          <target state="translated">要素ごとにグループ化された0以外の配列要素のインデックスを求めます。</target>
        </trans-unit>
        <trans-unit id="2515b150e246a2efffb14706325a36534baa7e52" translate="yes" xml:space="preserve">
          <source>Find the indices of the first and last unmasked values along an axis.</source>
          <target state="translated">軸に沿って、最初と最後のマスクされていない値のインデックスを見つけます。</target>
        </trans-unit>
        <trans-unit id="696f121ac590832370778adcb2254fdcf409cf46" translate="yes" xml:space="preserve">
          <source>Find the indices of the first and last unmasked values.</source>
          <target state="translated">マスクされていない最初と最後の値のインデックスを検索します。</target>
        </trans-unit>
        <trans-unit id="8c77cbf79b427711a4234d92c8cd55031f045a5a" translate="yes" xml:space="preserve">
          <source>Find the intersection of two arrays.</source>
          <target state="translated">2つの配列の交点を求めます.</target>
        </trans-unit>
        <trans-unit id="1d747b61a4dca9ab1a6c9357e1706a93f4e98f6e" translate="yes" xml:space="preserve">
          <source>Find the product of two polynomials.</source>
          <target state="translated">2つの多項式の積を求めよ。</target>
        </trans-unit>
        <trans-unit id="f141aa841d4a25a7614625f7b95555f03b44cb1f" translate="yes" xml:space="preserve">
          <source>Find the roots:</source>
          <target state="translated">根っこを探せ</target>
        </trans-unit>
        <trans-unit id="e641c4ed98de6b655c0148c1b174236bccd25db9" translate="yes" xml:space="preserve">
          <source>Find the set difference of two arrays.</source>
          <target state="translated">2つの配列の集合の差を求めます.</target>
        </trans-unit>
        <trans-unit id="1d47458289ee93eb8b76d9bd5fb051fb0ed38ef9" translate="yes" xml:space="preserve">
          <source>Find the set exclusive-or of two arrays.</source>
          <target state="translated">2つの配列の集合の排他的論理和を求めます。</target>
        </trans-unit>
        <trans-unit id="40c6faf7e08f7eff45fa7f2fb510420c1dd0653b" translate="yes" xml:space="preserve">
          <source>Find the sum of two polynomials.</source>
          <target state="translated">2つの多項式の和を求めよ。</target>
        </trans-unit>
        <trans-unit id="bc296de5854442d0290915421679a6d44da683c5" translate="yes" xml:space="preserve">
          <source>Find the union of two arrays.</source>
          <target state="translated">2つの配列の和を求めます.</target>
        </trans-unit>
        <trans-unit id="1c2a1d48695ed18506cd6bf1d2bc59c3cfb89875" translate="yes" xml:space="preserve">
          <source>Find the unique elements of an array.</source>
          <target state="translated">配列のユニークな要素を見つけます。</target>
        </trans-unit>
        <trans-unit id="3c5a640c918941c9e6a6ecbfe984c3f4bfbed0d7" translate="yes" xml:space="preserve">
          <source>Finding help</source>
          <target state="translated">ヘルプを探す</target>
        </trans-unit>
        <trans-unit id="5b7033e44afb091d2adc537dc898dc007a565a8f" translate="yes" xml:space="preserve">
          <source>Finding masked data</source>
          <target state="translated">マスクされたデータを探す</target>
        </trans-unit>
        <trans-unit id="3f98684f09d3dc8ddcf467b643533c39f6675211" translate="yes" xml:space="preserve">
          <source>Finds the data type of smallest size and kind to which &lt;em&gt;type1&lt;/em&gt; and &lt;em&gt;type2&lt;/em&gt; may be safely converted. This function is symmetric and associative. A string or unicode result will be the proper size for storing the max value of the input types converted to a string or unicode.</source>
          <target state="translated">&lt;em&gt;type1&lt;/em&gt;と&lt;em&gt;type2&lt;/em&gt;を安全に変換できる最小のサイズと種類のデータ型を見つけます。この関数は対称的で結合的です。文字列またはUnicodeの結果は、文字列またはUnicodeに変換された入力タイプの最大値を格納するための適切なサイズになります。</target>
        </trans-unit>
        <trans-unit id="ce819b28621d52328ceb9faf1bacb0b89098499a" translate="yes" xml:space="preserve">
          <source>Finds the polynomial resulting from the multiplication of the two input polynomials. Each input must be either a poly1d object or a 1D sequence of polynomial coefficients, from highest to lowest degree.</source>
          <target state="translated">2つの入力多項式の乗算の結果として得られる多項式を求めます.各入力は poly1d オブジェクトまたは多項式係数の1次元シーケンスのいずれかでなければなりません.</target>
        </trans-unit>
        <trans-unit id="1b46b96bf59323c910259f84d4d30f9baf994f09" translate="yes" xml:space="preserve">
          <source>Finish the Release Note</source>
          <target state="translated">リリースノートを完成させる</target>
        </trans-unit>
        <trans-unit id="7f34df28a801d8ac2bf79f8d990420b3ba51454a" translate="yes" xml:space="preserve">
          <source>First adjusts the date to fall on a valid day according to the &lt;code&gt;roll&lt;/code&gt; rule, then applies offsets to the given dates counted in valid days.</source>
          <target state="translated">最初に、 &lt;code&gt;roll&lt;/code&gt; ルールに従って日付が有効な日付になるように調整し、次に、有効な日数でカウントされた特定の日付にオフセットを適用します。</target>
        </trans-unit>
        <trans-unit id="3d783583ca6eea2b3fefbcfe238ea095a9cef1e3" translate="yes" xml:space="preserve">
          <source>First argument.</source>
          <target state="translated">第一引数。</target>
        </trans-unit>
        <trans-unit id="b0d88798d2f2c8c94dabdac74a6e61e0c6a796bf" translate="yes" xml:space="preserve">
          <source>First array</source>
          <target state="translated">最初の配列</target>
        </trans-unit>
        <trans-unit id="6ac9adbced8bb3d28582fadcfc79411667f91541" translate="yes" xml:space="preserve">
          <source>First array elements raised to powers from second array, element-wise.</source>
          <target state="translated">最初の配列要素は、要素ごとに2番目の配列から累乗されます。</target>
        </trans-unit>
        <trans-unit id="2e663054d84a3a5ee1c34a1c08db3c0840bbd3a5" translate="yes" xml:space="preserve">
          <source>First axis.</source>
          <target state="translated">第一軸。</target>
        </trans-unit>
        <trans-unit id="683b791e072100a372b3bb52b18b0195b72f135d" translate="yes" xml:space="preserve">
          <source>First data type.</source>
          <target state="translated">最初のデータ型。</target>
        </trans-unit>
        <trans-unit id="380b7446c9b92904f875ef654f53dbe5211d262c" translate="yes" xml:space="preserve">
          <source>First fork NumPy into your account, as from &lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;Making your own copy (fork) of NumPy&lt;/a&gt;.</source>
          <target state="translated">NumPyの&lt;a href=&quot;gitwash/development_setup#forking&quot;&gt;独自のコピー（フォーク）を作成する&lt;/a&gt;場合と同様に、最初にNumPyをアカウントにフォークします。</target>
        </trans-unit>
        <trans-unit id="c696689a14b681bedf220e6fcb537947492362e7" translate="yes" xml:space="preserve">
          <source>First input vector. Input is flattened if not already 1-dimensional.</source>
          <target state="translated">最初の入力ベクトル。入力は1次元でない場合は平坦化されます.</target>
        </trans-unit>
        <trans-unit id="4da5db5b8e385a1ee882571360fd0091e5988af4" translate="yes" xml:space="preserve">
          <source>First mode, &lt;code&gt;buffer&lt;/code&gt; is None:</source>
          <target state="translated">最初のモード、 &lt;code&gt;buffer&lt;/code&gt; はなし：</target>
        </trans-unit>
        <trans-unit id="79fb79c693534cb9180b2dc2b3dd92f6526ad678" translate="yes" xml:space="preserve">
          <source>First of all, if confused or uncertain, definitely look at the Examples - in its full generality, this function is less simple than it might seem from the following code description (below ndi = &lt;code&gt;numpy.lib.index_tricks&lt;/code&gt;):</source>
          <target state="translated">まず第一に、混乱または不確実な場合は、必ず例を確認してください。一般的に、この関数は、次のコードの説明（ndi = &lt;code&gt;numpy.lib.index_tricks&lt;/code&gt; の下）から見えるほど単純ではありません。</target>
        </trans-unit>
        <trans-unit id="9507aadaef3c19b4ad781014173284bb4bf64a4d" translate="yes" xml:space="preserve">
          <source>First one-dimensional input array.</source>
          <target state="translated">最初の1次元入力配列。</target>
        </trans-unit>
        <trans-unit id="563237e589c4b3a10445b43e30dbcdf140e6cad9" translate="yes" xml:space="preserve">
          <source>First we need a polynomial class and a polynomial instance to play with. The classes can be imported directly from the polynomial package or from the module of the relevant type. Here we import from the package and use the conventional Polynomial class because of its familiarity:</source>
          <target state="translated">まず、多項式クラスと多項式インスタンスが必要です。クラスは、多項式パッケージから直接インポートすることも、関連する型のモジュールからインポートすることもできます。ここでは、パッケージからインポートし、親しみやすいので従来の多項式クラスを使用しています。</target>
        </trans-unit>
        <trans-unit id="b0f42fa2b5b73e0d242583740b22144cb029b3bc" translate="yes" xml:space="preserve">
          <source>First you follow the instructions for &lt;a href=&quot;#forking&quot;&gt;Making your own copy (fork) of NumPy&lt;/a&gt;.</source>
          <target state="translated">まず&lt;a href=&quot;#forking&quot;&gt;、NumPyの独自のコピー（フォーク）&lt;/a&gt;を作成するための手順に従います。</target>
        </trans-unit>
        <trans-unit id="a78e460dd4b928f74942152fb57a017ad1190035" translate="yes" xml:space="preserve">
          <source>First, change/check the following variables in &lt;code&gt;pavement.py&lt;/code&gt; depending on the release version:</source>
          <target state="translated">まず、リリースバージョンに応じて、 &lt;code&gt;pavement.py&lt;/code&gt; の次の変数を変更/確認します。</target>
        </trans-unit>
        <trans-unit id="5de2ca0c3525a19f6ce453df437f39312ae63f64" translate="yes" xml:space="preserve">
          <source>First, fetch new commits from the &lt;code&gt;upstream&lt;/code&gt; repository:</source>
          <target state="translated">まず、 &lt;code&gt;upstream&lt;/code&gt; リポジトリから新しいコミットをフェッチします。</target>
        </trans-unit>
        <trans-unit id="cb7560a3397ca22e9994a5b8700ca3649fe54f4e" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s check for the shape of the data in our array. Since this image is two-dimensional (the pixels in the image form a rectangle), we might expect a two-dimensional array to represent it (a matrix). However, using the &lt;code&gt;shape&lt;/code&gt; property of this NumPy array gives us a different result:</source>
          <target state="translated">まず、配列内のデータの形状を確認しましょう。この画像は2次元であるため（画像内のピクセルは長方形を形成します）、2次元配列がそれを表すと予想される場合があります（行列）。ただし、このNumPy配列の &lt;code&gt;shape&lt;/code&gt; プロパティを使用すると、異なる結果が得られます。</target>
        </trans-unit>
        <trans-unit id="e842f4efdaf87bde11917dd06d4d96aa743693a2" translate="yes" xml:space="preserve">
          <source>First, merge or rebase on the target branch.</source>
          <target state="translated">まず、ターゲットブランチをマージまたはリベースします。</target>
        </trans-unit>
        <trans-unit id="3d50e07ef0974f6c61f9887836f0cd195c4b8ffe" translate="yes" xml:space="preserve">
          <source>First, we create a signature file from &lt;code&gt;fib1.f&lt;/code&gt; by running</source>
          <target state="translated">まず、我々はから署名ファイル作成 &lt;code&gt;fib1.f&lt;/code&gt; を実行することにより、</target>
        </trans-unit>
        <trans-unit id="0b5747b08f0749ca8d3f849c4ccb46feb2a535fd" translate="yes" xml:space="preserve">
          <source>First, we solve for</source>
          <target state="translated">まず、次のような問題を解決します。</target>
        </trans-unit>
        <trans-unit id="2db03d669f6d38f72ba0afd2d06c9fa6852bb990" translate="yes" xml:space="preserve">
          <source>First, you need to make the branch you will work on. This needs to be based on the older version of NumPy (not master):</source>
          <target state="translated">まず、作業するブランチを作る必要があります。これは古いバージョンの NumPy をベースにする必要があります (master ではありません)。</target>
        </trans-unit>
        <trans-unit id="2b876747d103212266850792bf08c2d985fdb7ec" translate="yes" xml:space="preserve">
          <source>Fisher, R.A,, A.S. Corbet, and C.B. Williams. 1943. The relation between the number of species and the number of individuals in a random sample of an animal population. Journal of Animal Ecology, 12:42-58.</source>
          <target state="translated">Fisher,R.A.,A.S.Corbet,and C.B.Williams.1943.動物集団の無作為標本における種の数と個体数の関係。動物生態学雑誌、12:42-58。</target>
        </trans-unit>
        <trans-unit id="1c009756385026adf817423fdf3347327b7bcadd" translate="yes" xml:space="preserve">
          <source>Fit a line, &lt;code&gt;y = mx + c&lt;/code&gt;, through some noisy data-points:</source>
          <target state="translated">いくつかのノイズの多いデータポイントを介して直線 &lt;code&gt;y = mx + c&lt;/code&gt; を近似します。</target>
        </trans-unit>
        <trans-unit id="04b6a58e5360946679575e2105b73e661e63702d" translate="yes" xml:space="preserve">
          <source>Fit a polynomial &lt;code&gt;p(x) = p[0] * x**deg + ... + p[deg]&lt;/code&gt; of degree &lt;code&gt;deg&lt;/code&gt; to points &lt;code&gt;(x, y)&lt;/code&gt;. Returns a vector of coefficients &lt;code&gt;p&lt;/code&gt; that minimises the squared error in the order &lt;code&gt;deg&lt;/code&gt;, &lt;code&gt;deg-1&lt;/code&gt;, &amp;hellip; &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">多項式 &lt;code&gt;p(x) = p[0] * x**deg + ... + p[deg]&lt;/code&gt; 度 &lt;code&gt;deg&lt;/code&gt; をポイント &lt;code&gt;(x, y)&lt;/code&gt; 近似します。二乗誤差を最小化する係数 &lt;code&gt;p&lt;/code&gt; のベクトルを &lt;code&gt;deg&lt;/code&gt; 、 &lt;code&gt;deg-1&lt;/code&gt; 、&amp;hellip; &lt;code&gt;0&lt;/code&gt; の順序で返します。</target>
        </trans-unit>
        <trans-unit id="c63bb8e80d7458f568a44355aa0204375070cb16" translate="yes" xml:space="preserve">
          <source>Fits using Chebyshev series are usually better conditioned than fits using power series, but much can depend on the distribution of the sample points and the smoothness of the data. If the quality of the fit is inadequate splines may be a good alternative.</source>
          <target state="translated">チェビシェフ級数を用いた適合は、通常、力価級数を用いた適合よりも条件付きがよいが、多くは標本点の分布やデータの平滑性に依存する。フィットの質が不十分な場合は,スプラインがよい代替手段になるかもしれません.</target>
        </trans-unit>
        <trans-unit id="aed614e2e664ebb51dcf5d13afb77c7acb23c65a" translate="yes" xml:space="preserve">
          <source>Fits using Hermite series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the Hermite weight. In that case the weight &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.hermite.hermweight#numpy.polynomial.hermite.hermweight&quot;&gt;&lt;code&gt;hermweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">エルミート級数を使用した近似は、データを &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; で近似できる場合におそらく最も役立ちます。ここで、 &lt;code&gt;w(x)&lt;/code&gt; はエルミートの重みです。その場合、重み &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; をデータ値 &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt; と一緒に使用する必要があります。重み関数は&lt;a href=&quot;numpy.polynomial.hermite.hermweight#numpy.polynomial.hermite.hermweight&quot;&gt; &lt;code&gt;hermweight&lt;/code&gt; &lt;/a&gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="7ac350719f356e32b4a5aa08bc22f253d0d0c702" translate="yes" xml:space="preserve">
          <source>Fits using Hermite series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the Hermite weight. In that case the weight &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.hermite.hermweight#numpy.polynomial.hermite.hermweight&quot;&gt;&lt;code&gt;hermweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Hermiteシリーズを使用した近似は、データが &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; で近似できる場合におそらく最も役立ちます。ここで、 &lt;code&gt;w(x)&lt;/code&gt; はHermiteの重みです。その場合、重み &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; をデータ値 &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt; と一緒に使用する必要があります。重み関数は&lt;a href=&quot;numpy.polynomial.hermite.hermweight#numpy.polynomial.hermite.hermweight&quot;&gt; &lt;code&gt;hermweight&lt;/code&gt; &lt;/a&gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="2a56ae26ef02f4f89e7f11d94ca2c9c2304108b1" translate="yes" xml:space="preserve">
          <source>Fits using HermiteE series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the HermiteE weight. In that case the weight &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.hermite_e.hermeweight#numpy.polynomial.hermite_e.hermeweight&quot;&gt;&lt;code&gt;hermeweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">HermiteEシリーズを使用した近似は、データを &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; で近似できる場合におそらく最も役立ちます。ここで、 &lt;code&gt;w(x)&lt;/code&gt; はHermiteEの重みです。その場合、重み &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; をデータ値 &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt; と一緒に使用する必要があります。重み関数は&lt;a href=&quot;numpy.polynomial.hermite_e.hermeweight#numpy.polynomial.hermite_e.hermeweight&quot;&gt; &lt;code&gt;hermeweight&lt;/code&gt; &lt;/a&gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="676d43f6371871e1abab21b58a8b9ef9e5c444e9" translate="yes" xml:space="preserve">
          <source>Fits using HermiteE series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the HermiteE weight. In that case the weight &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.hermite_e.hermeweight#numpy.polynomial.hermite_e.hermeweight&quot;&gt;&lt;code&gt;hermeweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">HermiteEシリーズを使用した近似は、データが &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; で近似できる場合におそらく最も役立ちます。ここで、 &lt;code&gt;w(x)&lt;/code&gt; はHermiteEの重みです。その場合、重み &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; をデータ値 &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt; と一緒に使用する必要があります。重み関数は&lt;a href=&quot;numpy.polynomial.hermite_e.hermeweight#numpy.polynomial.hermite_e.hermeweight&quot;&gt; &lt;code&gt;hermeweight&lt;/code&gt; &lt;/a&gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="ce120ffeca412ba96243f730c358ebc5c1bfbf99" translate="yes" xml:space="preserve">
          <source>Fits using Laguerre series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the Laguerre weight. In that case the weight &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.laguerre.lagweight#numpy.polynomial.laguerre.lagweight&quot;&gt;&lt;code&gt;lagweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ラゲール系列を使用した近似は、データを &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; で近似できる場合におそらく最も役立ちます。ここで、 &lt;code&gt;w(x)&lt;/code&gt; はラゲールの重みです。その場合、重み &lt;code&gt;sqrt(w(x[i]))&lt;/code&gt; をデータ値 &lt;code&gt;y[i]/sqrt(w(x[i]))&lt;/code&gt; と一緒に使用する必要があります。重み関数は&lt;a href=&quot;numpy.polynomial.laguerre.lagweight#numpy.polynomial.laguerre.lagweight&quot;&gt; &lt;code&gt;lagweight&lt;/code&gt; &lt;/a&gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="a6ad2d45b7ba84d02856af83a31db48500b6c521" translate="yes" xml:space="preserve">
          <source>Fits using Laguerre series are probably most useful when the data can be approximated by &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt;, where &lt;code&gt;w(x)&lt;/code&gt; is the Laguerre weight. In that case the weight &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; should be used together with data values &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt;. The weight function is available as &lt;a href=&quot;numpy.polynomial.laguerre.lagweight#numpy.polynomial.laguerre.lagweight&quot;&gt;&lt;code&gt;lagweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ラゲール級数を使用した近似は、データが &lt;code&gt;sqrt(w(x)) * p(x)&lt;/code&gt; で近似できる場合におそらく最も役立ちます。ここで、 &lt;code&gt;w(x)&lt;/code&gt; はラゲールの重みです。その場合、重み &lt;code&gt;sqrt(w(x[i])&lt;/code&gt; をデータ値 &lt;code&gt;y[i]/sqrt(w(x[i])&lt;/code&gt; と一緒に使用する必要があります。重み関数は&lt;a href=&quot;numpy.polynomial.laguerre.lagweight#numpy.polynomial.laguerre.lagweight&quot;&gt; &lt;code&gt;lagweight&lt;/code&gt; &lt;/a&gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="a49cebd2c0a64b6ed696a25d8e9c66d10c8d54a0" translate="yes" xml:space="preserve">
          <source>Fits using Legendre series are usually better conditioned than fits using power series, but much can depend on the distribution of the sample points and the smoothness of the data. If the quality of the fit is inadequate splines may be a good alternative.</source>
          <target state="translated">レジェンドレ級数を用いた適合は、通常、パワー級数を用いた適合よりも条件の良いものですが、多くは標本点の分布やデータの平滑性に依存します。フィットの質が不十分な場合は,スプラインがよい代替手段になるかもしれません.</target>
        </trans-unit>
        <trans-unit id="5165daf49b08b1322899a60f534d050a344807b1" translate="yes" xml:space="preserve">
          <source>Fitting</source>
          <target state="translated">Fitting</target>
        </trans-unit>
        <trans-unit id="5e51f96db68dc8fabd62d003884216322595fc6f" translate="yes" xml:space="preserve">
          <source>Fitting is the reason that the &lt;code&gt;domain&lt;/code&gt; and &lt;code&gt;window&lt;/code&gt; attributes are part of the convenience classes. To illustrate the problem, the values of the Chebyshev polynomials up to degree 5 are plotted below.</source>
          <target state="translated">フィッティングは、 &lt;code&gt;domain&lt;/code&gt; と &lt;code&gt;window&lt;/code&gt; 属性がコンビニエンスクラスの一部である理由です。問題を説明するために、5次までのチェビシェフ多項式の値を以下にプロットします。</target>
        </trans-unit>
        <trans-unit id="a882b40f9b004c60f42b6ed77cd0d0cb856640fe" translate="yes" xml:space="preserve">
          <source>Fix for PPC long double floating point information</source>
          <target state="translated">PPCの長い二重浮動小数点情報の修正</target>
        </trans-unit>
        <trans-unit id="919c4e1e9eb76e3cc1d2c2a8e361176acc1a9a4a" translate="yes" xml:space="preserve">
          <source>Fix regression in matmul (&lt;code&gt;@&lt;/code&gt; operator) for boolean types</source>
          <target state="translated">ブール型のmatmul（ &lt;code&gt;@&lt;/code&gt; 演算子）の回帰を修正</target>
        </trans-unit>
        <trans-unit id="0f0d59fd522286a2d4031174470931df04c244c1" translate="yes" xml:space="preserve">
          <source>Fix swig bug in &lt;code&gt;numpy.i&lt;/code&gt;</source>
          <target state="translated">numpy.iの小枝のバグを &lt;code&gt;numpy.i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f95e31f1005ee116c93848080ddafc6a63474e8a" translate="yes" xml:space="preserve">
          <source>Fix to financial.npv</source>
          <target state="translated">financial.npvに固定</target>
        </trans-unit>
        <trans-unit id="fe4ad4288a37cfec787d6b9ab856b537a200ab81" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;eigh&lt;/code&gt; and &lt;code&gt;cholesky&lt;/code&gt; methods in &lt;code&gt;numpy.random.multivariate_normal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cholesky&lt;/code&gt; &lt;code&gt;eigh&lt;/code&gt; メソッドとcholeskyメソッドを修正し &lt;code&gt;numpy.random.multivariate_normal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fa2ab2730080c4d8658ad57247e52d05152019e" translate="yes" xml:space="preserve">
          <source>Fixed stride displacement from the beginning of an axis? Default is 0. Needs to be &amp;gt;=0.</source>
          <target state="translated">軸の最初からのストライド変位を修正しましたか？デフォルトは0です。0以上にする必要があります。</target>
        </trans-unit>
        <trans-unit id="cb2453cbdd88f7c5dbf744844c92b0eb5d9399b7" translate="yes" xml:space="preserve">
          <source>Fixed the jumping implementation in &lt;code&gt;MT19937.jumped&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MT19937.jumped&lt;/code&gt; のジャンプの実装を修正しました</target>
        </trans-unit>
        <trans-unit id="8028cdac733fedf53d18c62ba8dde19dd4874832" translate="yes" xml:space="preserve">
          <source>Fixes Merged</source>
          <target state="translated">フィックス マージド</target>
        </trans-unit>
        <trans-unit id="988fef1858095167d23aba7f3c43fc27915118e8" translate="yes" xml:space="preserve">
          <source>Fixing Warnings</source>
          <target state="translated">警告の修正</target>
        </trans-unit>
        <trans-unit id="35076585aaced59b92c591cb61ebdef18acdfe9a" translate="yes" xml:space="preserve">
          <source>Flag checking</source>
          <target state="translated">フラグチェック</target>
        </trans-unit>
        <trans-unit id="a59933a6089d6095752a4cce71d3ac903e7e62ac" translate="yes" xml:space="preserve">
          <source>Flag indicating the return a legacy tuple state when the BitGenerator is MT19937.</source>
          <target state="translated">BitGeneratorがMT19937の場合、レガシータプル状態を返すことを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="ed451b4de2e9f4e89792baf70b0beefe2ddce512" translate="yes" xml:space="preserve">
          <source>Flag indicating to return a legacy tuple state when the BitGenerator is MT19937, instead of a dict.</source>
          <target state="translated">BitGeneratorがMT19937の場合、dictではなくレガシータプル状態を返すことを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="9eae779d408b29132a4d17f05274c96311b19164" translate="yes" xml:space="preserve">
          <source>Flag indicating whether a tuple &lt;code&gt;(result, sum of weights)&lt;/code&gt; should be returned as output (True), or just the result (False). Default is False.</source>
          <target state="translated">タプル &lt;code&gt;(result, sum of weights)&lt;/code&gt; を出力（True）として返すか、結果（False）のみとして返すかを示すフラグ。デフォルトはFalseです。</target>
        </trans-unit>
        <trans-unit id="cba3c052d7e9a9fd1a29828876ef83802ed53ad9" translate="yes" xml:space="preserve">
          <source>Flag to determine whether to mark test as deprecated or not. If the condition is a callable, it is used at runtime to dynamically make the decision. Default is True.</source>
          <target state="translated">テストを非推奨とマークするかどうかを決定するフラグ。条件が呼び出し可能なものであれば、実行時に動的に判断するために使用されます。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="fc63716a41208b1dbc0ebbf61137c2d0ff0fbfd4" translate="yes" xml:space="preserve">
          <source>Flag to determine whether to mark the decorated test as a known failure (if True) or not (if False).</source>
          <target state="translated">デコレーションされたテストを既知の失敗としてマークするか(Trueの場合)、しないか(Falseの場合)を決定するフラグ。</target>
        </trans-unit>
        <trans-unit id="3a36aef11ecfbbf2d82d57b5084b3ab96e773b04" translate="yes" xml:space="preserve">
          <source>Flag to determine whether to skip the decorated test.</source>
          <target state="translated">デコレーションテストをスキップするかどうかを決定するフラグ。</target>
        </trans-unit>
        <trans-unit id="75e57359674e825c88bcaaa1bf354a5ba42abc10" translate="yes" xml:space="preserve">
          <source>Flag-like constants</source>
          <target state="translated">旗のような定数</target>
        </trans-unit>
        <trans-unit id="684f757afc22b26a0ad180a11e58599da12d805b" translate="yes" xml:space="preserve">
          <source>Flags indicating how the memory pointed to by data is to be interpreted. Possible flags are &lt;a href=&quot;c-api.array#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.array#c.NPY_ARRAY_F_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_F_CONTIGUOUS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.array#c.NPY_ARRAY_OWNDATA&quot;&gt;&lt;code&gt;NPY_ARRAY_OWNDATA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.array#c.NPY_ARRAY_ALIGNED&quot;&gt;&lt;code&gt;NPY_ARRAY_ALIGNED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.array#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.array#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;c-api.array#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">データが指すメモリがどのように解釈されるかを示すフラグ。可能なフラグは、&lt;a href=&quot;c-api.array#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt; &lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;c-api.array#c.NPY_ARRAY_F_CONTIGUOUS&quot;&gt; &lt;code&gt;NPY_ARRAY_F_CONTIGUOUS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;c-api.array#c.NPY_ARRAY_OWNDATA&quot;&gt; &lt;code&gt;NPY_ARRAY_OWNDATA&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;c-api.array#c.NPY_ARRAY_ALIGNED&quot;&gt; &lt;code&gt;NPY_ARRAY_ALIGNED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;c-api.array#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;c-api.array#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;c-api.array#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="a25e18657a4cd94e4091eda9ea0dfb9fbc2878ec" translate="yes" xml:space="preserve">
          <source>Flags that may be passed in &lt;code&gt;flags&lt;/code&gt; are any combination of the global and per-operand flags documented in &lt;a href=&quot;#c.NpyIter_MultiNew&quot;&gt;&lt;code&gt;NpyIter_MultiNew&lt;/code&gt;&lt;/a&gt;, except for &lt;a href=&quot;#c.NPY_ITER_ALLOCATE&quot;&gt;&lt;code&gt;NPY_ITER_ALLOCATE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">渡されるフラグ &lt;code&gt;flags&lt;/code&gt; で文書化グローバルごとのオペランドのフラグの任意の組み合わせである&lt;a href=&quot;#c.NpyIter_MultiNew&quot;&gt; &lt;code&gt;NpyIter_MultiNew&lt;/code&gt; &lt;/a&gt;を除き、&lt;a href=&quot;#c.NPY_ITER_ALLOCATE&quot;&gt; &lt;code&gt;NPY_ITER_ALLOCATE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="edc811e4e9d890d1a74c59122b943f93451db31b" translate="yes" xml:space="preserve">
          <source>Flags that may be passed in &lt;code&gt;flags&lt;/code&gt;, applying to the whole iterator, are:</source>
          <target state="translated">反復子全体に適用される、 &lt;code&gt;flags&lt;/code&gt; で渡されるフラグは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e576896ed3787e8ae91c02c3fee7275b55ae4f5d" translate="yes" xml:space="preserve">
          <source>Flags that may be passed in &lt;code&gt;op_flags[i]&lt;/code&gt;, where &lt;code&gt;0 &amp;lt;= i &amp;lt; nop&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;op_flags[i]&lt;/code&gt; で渡されるフラグ。ここで、 &lt;code&gt;0 &amp;lt;= i &amp;lt; nop&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0902dde9b75159ba7b0f6af69bd12aa3aed3ab46" translate="yes" xml:space="preserve">
          <source>Flags to control the behavior of the iterator.</source>
          <target state="translated">イテレータの動作を制御するフラグ。</target>
        </trans-unit>
        <trans-unit id="1bbaad527fcacc3d77ae0f546c2f20b2e4ef2d71" translate="yes" xml:space="preserve">
          <source>Flat Iterator indexing</source>
          <target state="translated">フラットイテレータインデックス化</target>
        </trans-unit>
        <trans-unit id="ca0541280577eeacfb45501ad1950007e690905f" translate="yes" xml:space="preserve">
          <source>Flat array iterator.</source>
          <target state="translated">平らな配列のイテレータ。</target>
        </trans-unit>
        <trans-unit id="3f8292fdeb383ecef90303832ffb1117799af185" translate="yes" xml:space="preserve">
          <source>Flat iteration</source>
          <target state="translated">フラットイテレーション</target>
        </trans-unit>
        <trans-unit id="666002e8705384831180e281fa74a843e3206b27" translate="yes" xml:space="preserve">
          <source>Flat iterator object to iterate over arrays.</source>
          <target state="translated">配列を反復処理するフラットイテレータオブジェクト。</target>
        </trans-unit>
        <trans-unit id="7d04e81220d975aa709532a3862f6c1a6f4a3f05" translate="yes" xml:space="preserve">
          <source>Flatten a structured data-type description.</source>
          <target state="translated">構造化されたデータ型の記述を平坦化します。</target>
        </trans-unit>
        <trans-unit id="ec4ad130c0f4e03f5e84c5e86d9264a95dc6c3f6" translate="yes" xml:space="preserve">
          <source>Flattened version of this function.</source>
          <target state="translated">この関数のフラット化バージョン。</target>
        </trans-unit>
        <trans-unit id="21fe615f2b66ecf8096308ee67f646d6664a1077" translate="yes" xml:space="preserve">
          <source>Flip an array horizontally (axis=1).</source>
          <target state="translated">配列を水平方向に反転させます(軸=1)。</target>
        </trans-unit>
        <trans-unit id="7849c3ad46cd56097aefd350ce5a24872c1a9619" translate="yes" xml:space="preserve">
          <source>Flip an array horizontally.</source>
          <target state="translated">配列を水平に反転させます。</target>
        </trans-unit>
        <trans-unit id="a25cec9261711d7c64f4f0328d27630ff4251008" translate="yes" xml:space="preserve">
          <source>Flip an array vertically (axis=0).</source>
          <target state="translated">配列を縦方向に反転させます(軸は0)。</target>
        </trans-unit>
        <trans-unit id="58f1196dc69384b1c0ff7122abf54115c6fe24e6" translate="yes" xml:space="preserve">
          <source>Flip an array vertically.</source>
          <target state="translated">配列を垂直に反転させます。</target>
        </trans-unit>
        <trans-unit id="054ba7b0cd3f0b3aa1e4b17f975a52c4e03f8b87" translate="yes" xml:space="preserve">
          <source>Flip array in the left/right direction.</source>
          <target state="translated">配列を左右方向に反転させます。</target>
        </trans-unit>
        <trans-unit id="a71aa214a7a981c7e5292f4c8603043e9a55d042" translate="yes" xml:space="preserve">
          <source>Flip array in the up/down direction.</source>
          <target state="translated">配列を上下方向に反転させます。</target>
        </trans-unit>
        <trans-unit id="d6b601389a5cfb7f115ef7332083ae3431e4e4e3" translate="yes" xml:space="preserve">
          <source>Flip the entries in each column in the up/down direction. Rows are preserved, but appear in a different order than before.</source>
          <target state="translated">各列のエントリを上下方向に反転させます。行は保存されますが、以前とは異なる順序で表示されます。</target>
        </trans-unit>
        <trans-unit id="f14bb6de935d5a8cea7f1dc6e4323a38f4e11462" translate="yes" xml:space="preserve">
          <source>Flip the entries in each row in the left/right direction. Columns are preserved, but appear in a different order than before.</source>
          <target state="translated">各行のエントリを左右方向に反転させます。列は保存されますが、以前とは異なる順序で表示されます。</target>
        </trans-unit>
        <trans-unit id="a806413f7b898c72fd5e92970c2a0a0a31830c28" translate="yes" xml:space="preserve">
          <source>Float printing now uses &amp;ldquo;dragon4&amp;rdquo; algorithm for shortest decimal representation</source>
          <target state="translated">フロート印刷で、最短の小数表現に「dragon4」アルゴリズムが使用されるようになりました</target>
        </trans-unit>
        <trans-unit id="3a7d4f9efa22847d513f86cb336f4d917bb3ff00" translate="yes" xml:space="preserve">
          <source>Float type code to coerce input array &lt;code&gt;a&lt;/code&gt;. If &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; is one of the &amp;lsquo;int&amp;rsquo; dtypes, it is replaced with float64.</source>
          <target state="translated">入力配列 &lt;code&gt;a&lt;/code&gt; を強制するフロート型コード。&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;が「int」dtypeの1つである場合、それはfloat64に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="01625a6e71519a2c19afcda12e2e9da94df799dc" translate="yes" xml:space="preserve">
          <source>Floating functions</source>
          <target state="translated">浮動関数</target>
        </trans-unit>
        <trans-unit id="0c47a1b436ef0cc135c28b0dd8fa381311e23c7a" translate="yes" xml:space="preserve">
          <source>Floating point</source>
          <target state="translated">浮動小数点</target>
        </trans-unit>
        <trans-unit id="1229245ed91cf5c1f6662011b64e640e64679fd2" translate="yes" xml:space="preserve">
          <source>Floating point classification</source>
          <target state="translated">浮動小数点分類</target>
        </trans-unit>
        <trans-unit id="82951541de1b33acb443a62a7f1b908de9e19ba0" translate="yes" xml:space="preserve">
          <source>Floating point error handling</source>
          <target state="translated">浮動小数点エラー処理</target>
        </trans-unit>
        <trans-unit id="dbe05d916add7aed11140c3ac753c505841f4681" translate="yes" xml:space="preserve">
          <source>Floating point number &lt;code&gt;beta**minexp&lt;/code&gt; (the smallest [in magnitude] usable floating value).</source>
          <target state="translated">浮動小数点数 &lt;code&gt;beta**minexp&lt;/code&gt; （使用可能な最小の[大きさ]浮動小数点値）。</target>
        </trans-unit>
        <trans-unit id="1fd86bfd9f81a559ed8b4c9674c5d1f9e823b143" translate="yes" xml:space="preserve">
          <source>Floating point precision can be set:</source>
          <target state="translated">浮動小数点精度を設定できます。</target>
        </trans-unit>
        <trans-unit id="481d82b2ccb68e7d8e1fe5eda973bb77f53833f0" translate="yes" xml:space="preserve">
          <source>Floating point precision. Defaults to &lt;code&gt;numpy.get_printoptions()['precision']&lt;/code&gt;.</source>
          <target state="translated">浮動小数点の精度。デフォルトは &lt;code&gt;numpy.get_printoptions()['precision']&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6770ad9e8703a79e53fa3beb7d8e8f53215f921c" translate="yes" xml:space="preserve">
          <source>Floating point routines</source>
          <target state="translated">浮動小数点ルーチン</target>
        </trans-unit>
        <trans-unit id="a8d35036268d7e5fa8b38b4abd4d049aeafa51d6" translate="yes" xml:space="preserve">
          <source>Floating point scalars implement &lt;code&gt;as_integer_ratio&lt;/code&gt; to match the builtin float</source>
          <target state="translated">浮動小数点スカラーは、組み込みのfloatと一致するように &lt;code&gt;as_integer_ratio&lt;/code&gt; を実装します</target>
        </trans-unit>
        <trans-unit id="bbb20a81d8b5780d9de2483bc5cafd120d0cd965" translate="yes" xml:space="preserve">
          <source>Floating point values are not demoted to integers, and complex values are not demoted to floats.</source>
          <target state="translated">浮動小数点値は整数には移行せず、複素数値はfloatには移行しません。</target>
        </trans-unit>
        <trans-unit id="2a6aa48e3a6c80756547c7551fe79b07bb4f3a1c" translate="yes" xml:space="preserve">
          <source>Floating values between -1 and 1. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">-1と1の間の浮動小数点値 &lt;code&gt;x&lt;/code&gt; がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="e6f0281f3f5728d7cb1a3465fbf569e0196bf3cd" translate="yes" xml:space="preserve">
          <source>Floating-point number &lt;code&gt;beta**machep&lt;/code&gt; (floating point precision)</source>
          <target state="translated">浮動小数点数 &lt;code&gt;beta**machep&lt;/code&gt; （浮動小数点精度）</target>
        </trans-unit>
        <trans-unit id="f8899b4f72c4b482d21d27616c70625d6596dd90" translate="yes" xml:space="preserve">
          <source>Floating-point number &lt;code&gt;beta**negep&lt;/code&gt;.</source>
          <target state="translated">浮動小数点数 &lt;code&gt;beta**negep&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2eae9dc4dc291f4562016bea57ea67a7a3b1f88f" translate="yes" xml:space="preserve">
          <source>Floating-point numbers:</source>
          <target state="translated">浮動小数点数。</target>
        </trans-unit>
        <trans-unit id="55734ad7ec5ec7776c0a844d3df4e815b482074b" translate="yes" xml:space="preserve">
          <source>Floats uniformly distributed over &lt;code&gt;[0, 1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[0, 1)&lt;/code&gt; 上に均一に分散されたフロート。</target>
        </trans-unit>
        <trans-unit id="9c505c67e9b4dbb54495e1dc42c80f1a7a1c454f" translate="yes" xml:space="preserve">
          <source>Floor divide self by other in-place.</source>
          <target state="translated">床は、他の場所で自己を分割します。</target>
        </trans-unit>
        <trans-unit id="1ddc7d58e45f89f16199c2075dcd43275a50c059" translate="yes" xml:space="preserve">
          <source>Floor division, &amp;lsquo;//&amp;rsquo;, is the division operator for the polynomial classes, polynomials are treated like integers in this regard. For Python versions &amp;lt; 3.x the &amp;lsquo;/&amp;rsquo; operator maps to &amp;lsquo;//&amp;rsquo;, as it does for Python, for later versions the &amp;lsquo;/&amp;rsquo; will only work for division by scalars. At some point it will be deprecated:</source>
          <target state="translated">フロア除算 '//'は多項式クラスの除算演算子であり、多項式はこの点で整数のように扱われます。Pythonバージョン&amp;lt;3.xの場合、 '/'演算子は '//'にマップされます。Pythonの場合と同様に、それ以降のバージョンでは、 '/'はスカラーによる除算でのみ機能します。ある時点で廃止される予定です。</target>
        </trans-unit>
        <trans-unit id="977e7ae24b1ce53baf0769e85a5d553c0c1ba1a9" translate="yes" xml:space="preserve">
          <source>Following each integration the result is &lt;em&gt;multiplied&lt;/em&gt; by &lt;code&gt;scl&lt;/code&gt; before the integration constant is added. (Default: 1)</source>
          <target state="translated">各積分に続いて、積分定数が追加される前に結果に &lt;code&gt;scl&lt;/code&gt; が&lt;em&gt;乗算&lt;/em&gt;されます。（デフォルト：1）</target>
        </trans-unit>
        <trans-unit id="0edda5efdca0ba777ab89777b73ae8abb0ac8170" translate="yes" xml:space="preserve">
          <source>Following the header comes the array data. If the dtype contains Python objects (i.e. &lt;code&gt;dtype.hasobject is True&lt;/code&gt;), then the data is a Python pickle of the array. Otherwise the data is the contiguous (either C- or Fortran-, depending on &lt;code&gt;fortran_order&lt;/code&gt;) bytes of the array. Consumers can figure out the number of bytes by multiplying the number of elements given by the shape (noting that &lt;code&gt;shape=()&lt;/code&gt; means there is 1 element) by &lt;code&gt;dtype.itemsize&lt;/code&gt;.</source>
          <target state="translated">ヘッダーの後に配列データが続きます。dtypeにPythonオブジェクトが含まれている場合（つまり、 &lt;code&gt;dtype.hasobject is True&lt;/code&gt; ）、データは配列のPythonピクルです。それ以外の場合、データは配列の連続した（fortran_orderに応じてCまたは &lt;code&gt;fortran_order&lt;/code&gt; ）バイトです。コンシューマは、シェイプによって与えられた要素の数（ &lt;code&gt;shape=()&lt;/code&gt; が1つの要素があることを意味することに注意）に &lt;code&gt;dtype.itemsize&lt;/code&gt; を掛けることによって、バイト数を計算できます。</target>
        </trans-unit>
        <trans-unit id="ec0c3b76630fd745381cc215a284820af75a683a" translate="yes" xml:space="preserve">
          <source>Footnotes</source>
          <target state="translated">Footnotes</target>
        </trans-unit>
        <trans-unit id="1e3737ce90be5e40d3542337b2a16d0ddfea15fe" translate="yes" xml:space="preserve">
          <source>For 18 of the 21 types this number is fixed by the data-type. For the flexible data-types, this number can be anything.</source>
          <target state="translated">21の型のうち18の型では、この数値はデータ型によって固定されています。柔軟性のあるデータ型では、この数値は何でも構いません。</target>
        </trans-unit>
        <trans-unit id="6fe31cdcb6c6646809088d5903655d52a55d450e" translate="yes" xml:space="preserve">
          <source>For 2-D arrays it is the matrix product:</source>
          <target state="translated">2次元配列の場合は,行列の積になります.</target>
        </trans-unit>
        <trans-unit id="3f962aedbf83ef9d65d44b9e69490919cc79f9a0" translate="yes" xml:space="preserve">
          <source>For 2-D mixed with 1-D, the result is the usual.</source>
          <target state="translated">1-Dに2-Dが混ざっている場合は、通常の結果になります。</target>
        </trans-unit>
        <trans-unit id="249d7389fa64403ab6c1fc03103e6db107907e49" translate="yes" xml:space="preserve">
          <source>For 8-bit strings, this method is locale-dependent.</source>
          <target state="translated">8 ビット文字列の場合、この方法はロケールに依存します。</target>
        </trans-unit>
        <trans-unit id="e34d3054bfe352b99ce08082d1411334b317ca53" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; one-dimensional, this is equivalent to:</source>
          <target state="translated">以下のために &lt;code&gt;A&lt;/code&gt; と &lt;code&gt;B&lt;/code&gt; の一次元、これは、と等価です。</target>
        </trans-unit>
        <trans-unit id="a6fa074fdf944e6525f90fb53e3868628cc3a171" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;a.view(some_dtype)&lt;/code&gt;, if &lt;code&gt;some_dtype&lt;/code&gt; has a different number of bytes per entry than the previous dtype (for example, converting a regular array to a structured array), then the behavior of the view cannot be predicted just from the superficial appearance of &lt;code&gt;a&lt;/code&gt; (shown by &lt;code&gt;print(a)&lt;/code&gt;). It also depends on exactly how &lt;code&gt;a&lt;/code&gt; is stored in memory. Therefore if &lt;code&gt;a&lt;/code&gt; is C-ordered versus fortran-ordered, versus defined as a slice or transpose, etc., the view may give different results.</source>
          <target state="translated">ため &lt;code&gt;a.view(some_dtype)&lt;/code&gt; 場合、 &lt;code&gt;some_dtype&lt;/code&gt; は、（例えば、構造アレイの規則的なアレイを変換）前DTYPEよりエントリあたりのバイトの異なった数を有し、そのビューの挙動は、表面外観をわずかに予測することはできません（で示される &lt;code&gt;print(a)&lt;/code&gt; ）。また &lt;code&gt;a&lt;/code&gt; がメモリにどのように格納されるかにも依存します。したがって、 &lt;code&gt;a&lt;/code&gt; がC順であるか、 fortran順であるか、またはスライスまたは転置として定義されているなどの場合、ビューは異なる結果をもたらす可能性があります。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e46f2d6f5fe5e7ec999c5f95aef2596fb69e222c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;array&lt;/code&gt;, &lt;strong&gt;``*`` means element-wise multiplication&lt;/strong&gt;, while &lt;strong&gt;``@`` means matrix multiplication&lt;/strong&gt;; they have associated functions &lt;code&gt;multiply()&lt;/code&gt; and &lt;code&gt;dot()&lt;/code&gt;. (Before python 3.5, &lt;code&gt;@&lt;/code&gt; did not exist and one had to use &lt;code&gt;dot()&lt;/code&gt; for matrix multiplication).</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 、&lt;strong&gt;`` * ``手段要素毎の乗算&lt;/strong&gt;しばらく、&lt;strong&gt;`` @ ``手段行列の乗算&lt;/strong&gt;; それらには、 &lt;code&gt;multiply()&lt;/code&gt; および &lt;code&gt;dot()&lt;/code&gt; 関数が関連付けられています。（Python 3.5より前は、 &lt;code&gt;@&lt;/code&gt; は存在せず、行列の乗算に &lt;code&gt;dot()&lt;/code&gt; を使用する必要がありました）。</target>
        </trans-unit>
        <trans-unit id="3105b82282a4b74064eec805ba7d2c290a53d304" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;array&lt;/code&gt;, the &lt;strong&gt;vector shapes 1xN, Nx1, and N are all different things&lt;/strong&gt;. Operations like &lt;code&gt;A[:,1]&lt;/code&gt; return a one-dimensional array of shape N, not a two-dimensional array of shape Nx1. Transpose on a one-dimensional &lt;code&gt;array&lt;/code&gt; does nothing.</source>
          <target state="translated">以下のため &lt;code&gt;array&lt;/code&gt; 、&lt;strong&gt;ベクトルはの1xN、Nx1の、およびNを形作る全て異なるものです&lt;/strong&gt;。 &lt;code&gt;A[:,1]&lt;/code&gt; ような演算は、形状Nx1の2次元配列ではなく、形状Nの1次元配列を返します。1次元 &lt;code&gt;array&lt;/code&gt; 転置は何もしません。</target>
        </trans-unit>
        <trans-unit id="272593adff1434bde1d4cd33b0346e0c6d20e042" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;e, E&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; specifiers, the number of digits to print after the decimal point.</source>
          <target state="translated">以下のために &lt;code&gt;e, E&lt;/code&gt; 及び &lt;code&gt;f&lt;/code&gt; 指定子、桁数は、小数点の後に印刷します。</target>
        </trans-unit>
        <trans-unit id="a8b87fa4bee96c31297a2faf4474562d50259437" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;g&lt;/code&gt; and &lt;code&gt;G&lt;/code&gt;, the maximum number of significant digits.</source>
          <target state="translated">以下のための &lt;code&gt;g&lt;/code&gt; と &lt;code&gt;G&lt;/code&gt; 、最大有効桁数。</target>
        </trans-unit>
        <trans-unit id="d98628f7394ff0daa3811e58311c01f9a29ca826" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;matrix&lt;/code&gt;, &lt;strong&gt;``*`` means matrix multiplication&lt;/strong&gt;, and for element-wise multiplication one has to use the &lt;code&gt;multiply()&lt;/code&gt; function.</source>
          <target state="translated">以下のために &lt;code&gt;matrix&lt;/code&gt; 、&lt;strong&gt;`` * ``手段行列の乗算&lt;/strong&gt;、および1つは使用しなければならない要素毎の乗算のための &lt;code&gt;multiply()&lt;/code&gt; 関数を。</target>
        </trans-unit>
        <trans-unit id="637ce924b991228068be8a9a9fc01722cca48f39" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;matrix&lt;/code&gt;, &lt;strong&gt;one-dimensional arrays are always upconverted to 1xN or Nx1 matrices&lt;/strong&gt; (row or column vectors). &lt;code&gt;A[:,1]&lt;/code&gt; returns a two-dimensional matrix of shape Nx1.</source>
          <target state="translated">以下のため &lt;code&gt;matrix&lt;/code&gt; 、&lt;strong&gt;1次元配列は、常に1xNまたはNx1のマトリックスにアップコンバートされた&lt;/strong&gt;（行または列ベクトル）。 &lt;code&gt;A[:,1]&lt;/code&gt; は、形状Nx1の2次元行列を返します。</target>
        </trans-unit>
        <trans-unit id="2f16f572df2de5dbe71ab6b482a26aade3788153" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;s&lt;/code&gt;, the maximum number of characters.</source>
          <target state="translated">以下のため &lt;code&gt;s&lt;/code&gt; 、文字の最大数。</target>
        </trans-unit>
        <trans-unit id="99d20f637f3a6e1d55b90d0390d938da13e44f35" translate="yes" xml:space="preserve">
          <source>For C code, see the &lt;a href=&quot;style_guide#style-guide&quot;&gt;numpy-c-style-guide&lt;/a&gt;</source>
          <target state="translated">Cコードについては、&lt;a href=&quot;style_guide#style-guide&quot;&gt;numpy-c-style-guideを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="96de2b474663e4b27c100d387c234e173e9360ba" translate="yes" xml:space="preserve">
          <source>For NumPy &amp;gt;= 1.10.0 a view of &lt;code&gt;a&lt;/code&gt; is always returned. For earlier NumPy versions a view of &lt;code&gt;a&lt;/code&gt; is returned only if the order of the axes is changed, otherwise the input array is returned.</source>
          <target state="translated">numpyののための&amp;gt; = 1.10.0ビューは常に返されます。以前numpyのバージョンのためのビューさもなければ入力配列が返され、軸の順序が変更された場合にのみ返されます。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="187181bc029dad6f61070b7f6592eecd79b97aa5" translate="yes" xml:space="preserve">
          <source>For NumPy &amp;gt;= 1.10.0, if &lt;code&gt;a&lt;/code&gt; is an ndarray, then a view of &lt;code&gt;a&lt;/code&gt; is returned; otherwise a new array is created. For earlier NumPy versions a view of &lt;code&gt;a&lt;/code&gt; is returned only if the order of the axes is changed, otherwise the input array is returned.</source>
          <target state="translated">場合numpyのため&amp;gt; = 1.10.0、ndarrayであり、その後のビュー戻されます。それ以外の場合は、新しい配列が作成されます。以前numpyのバージョンのためのビューさもなければ入力配列が返され、軸の順序が変更された場合にのみ返されます。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54f70af9beed617bc137c199798e6f21c9093a8c" translate="yes" xml:space="preserve">
          <source>For Python, the preferred way of handling contiguous (or technically, &lt;em&gt;strided&lt;/em&gt;) blocks of homogeneous data is with NumPy, which provides full object-oriented access to multidimensial arrays of data. Therefore, the most logical Python interface for the &lt;code&gt;rms&lt;/code&gt; function would be (including doc string):</source>
          <target state="translated">Pythonの場合、同種のデータの連続した（技術的には&lt;em&gt;stridedの&lt;/em&gt;）ブロックを処理する推奨方法は、NumPyを使用することです。これにより、データの多次元配列への完全なオブジェクト指向のアクセスが提供されます。したがって、 &lt;code&gt;rms&lt;/code&gt; 関数の最も論理的なPythonインターフェイスは（doc文字列を含む）です。</target>
        </trans-unit>
        <trans-unit id="55f9e5f045d92376c7d38dda0f2622f9b6352be6" translate="yes" xml:space="preserve">
          <source>For a 1-D array this has no effect, as a transposed vector is simply the same vector. To convert a 1-D array into a 2D column vector, an additional dimension must be added. &lt;code&gt;np.atleast2d(a).T&lt;/code&gt; achieves this, as does &lt;code&gt;a[:, np.newaxis]&lt;/code&gt;. For a 2-D array, this is a standard matrix transpose. For an n-D array, if axes are given, their order indicates how the axes are permuted (see Examples). If axes are not provided and &lt;code&gt;a.shape = (i[0], i[1], ... i[n-2], i[n-1])&lt;/code&gt;, then &lt;code&gt;a.transpose().shape = (i[n-1], i[n-2], ... i[1], i[0])&lt;/code&gt;.</source>
          <target state="translated">1次元配列の場合、転置されたベクトルは単純に同じベクトルであるため、これは効果がありません。1次元配列を2次元列ベクトルに変換するには、次元を追加する必要があります。 &lt;code&gt;np.atleast2d(a).T&lt;/code&gt; は &lt;code&gt;a[:, np.newaxis]&lt;/code&gt; と同様にこれを実現します。2次元配列の場合、これは標準の行列転置です。nD配列の場合、軸が指定されている場合、それらの順序は軸がどのように置換されるかを示します（例を参照）。軸が指定されておらず、 &lt;code&gt;a.shape = (i[0], i[1], ... i[n-2], i[n-1])&lt;/code&gt; 場合、 &lt;code&gt;a.transpose().shape = (i[n-1], i[n-2], ... i[1], i[0])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c37103fe1630ecb51bfbc7a903129e1d60dd7ed" translate="yes" xml:space="preserve">
          <source>For a 1D array, &lt;code&gt;a.tolist()&lt;/code&gt; is almost the same as &lt;code&gt;list(a)&lt;/code&gt;, except that &lt;code&gt;tolist&lt;/code&gt; changes numpy scalars to Python scalars:</source>
          <target state="translated">1D配列の場合、 &lt;code&gt;a.tolist()&lt;/code&gt; は &lt;code&gt;list(a)&lt;/code&gt; とほぼ同じ &lt;code&gt;tolist&lt;/code&gt; が、tolistがnumpyスカラーをPythonスカラーに変更する点が異なります。</target>
        </trans-unit>
        <trans-unit id="d3f2a60e0b01b84231d8024aebcc5e084e0ba27d" translate="yes" xml:space="preserve">
          <source>For a 1D array, &lt;code&gt;a.tolist()&lt;/code&gt; is almost the same as &lt;code&gt;list(a)&lt;/code&gt;:</source>
          <target state="translated">1D配列の場合、 &lt;code&gt;a.tolist()&lt;/code&gt; は &lt;code&gt;list(a)&lt;/code&gt; とほぼ同じです。</target>
        </trans-unit>
        <trans-unit id="cf0f7c81098fcc87863f3be5d59395a987825914" translate="yes" xml:space="preserve">
          <source>For a complete discussion of creation methods for masked arrays please see section &lt;a href=&quot;#maskedarray-generic-constructing&quot;&gt;Constructing masked arrays&lt;/a&gt;.</source>
          <target state="translated">マスクされた配列の作成方法の完全な説明については、セクションを参照してください&lt;a href=&quot;#maskedarray-generic-constructing&quot;&gt;マスクされた配列を構築します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0bdfc3356f177e5d7773cb796069c781e6c3ff20" translate="yes" xml:space="preserve">
          <source>For a description of the &lt;code&gt;.npy&lt;/code&gt; format, see &lt;a href=&quot;numpy.lib.format#module-numpy.lib.format&quot;&gt;&lt;code&gt;numpy.lib.format&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">説明については &lt;code&gt;.npy&lt;/code&gt; 形式、参照&lt;a href=&quot;numpy.lib.format#module-numpy.lib.format&quot;&gt; &lt;code&gt;numpy.lib.format&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="197692467968599b779c0574e1302cadc5d30a4f" translate="yes" xml:space="preserve">
          <source>For a full description of these options, see &lt;a href=&quot;numpy.set_printoptions#numpy.set_printoptions&quot;&gt;&lt;code&gt;set_printoptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのオプションの詳細については、&lt;a href=&quot;numpy.set_printoptions#numpy.set_printoptions&quot;&gt; &lt;code&gt;set_printoptions&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b040ed436e354a6dfab8e28023d68c6eed7a06c2" translate="yes" xml:space="preserve">
          <source>For a function that returns a 1D array, the number of dimensions in &lt;code&gt;outarr&lt;/code&gt; is the same as &lt;code&gt;arr&lt;/code&gt;.</source>
          <target state="translated">1D配列を返す関数の場合、 &lt;code&gt;outarr&lt;/code&gt; の次元数は &lt;code&gt;arr&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="9409ae5300d15907687b38139959611e06963f16" translate="yes" xml:space="preserve">
          <source>For a function that returns a higher dimensional array, those dimensions are inserted in place of the &lt;code&gt;axis&lt;/code&gt; dimension.</source>
          <target state="translated">より高い次元の配列を返す関数の場合、それらの次元は &lt;code&gt;axis&lt;/code&gt; 次元の代わりに挿入されます。</target>
        </trans-unit>
        <trans-unit id="17b694669442e700bd635063d9a03b4ef4365eec" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion, read on and follow the links at the bottom of this page.</source>
          <target state="translated">より詳細な議論については、このページの下部にあるリンクを参照してください。</target>
        </trans-unit>
        <trans-unit id="7adc015d596be980abdfb7f52ddd54b20d9ed4e4" translate="yes" xml:space="preserve">
          <source>For a multi-dimensional array, accumulate is applied along only one axis (axis zero by default; see Examples below) so repeated use is necessary if one wants to accumulate over multiple axes.</source>
          <target state="translated">多次元配列の場合、アキュムレートは1つの軸(デフォルトでは軸ゼロ;以下の例を参照)に沿ってのみ適用されるので、複数の軸に渡ってアキュムレートしたい場合は繰り返し使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4a70a58adc76a39cce5a267ab70438cf75b9572e" translate="yes" xml:space="preserve">
          <source>For a non-trivial signature, &lt;code&gt;dimensions&lt;/code&gt; will also contain the sizes of the core dimensions as well, starting at the second entry. Only one size is provided for each unique dimension name and the sizes are given according to the first occurrence of a dimension name in the signature.</source>
          <target state="translated">重要なシグネチャの場合、 &lt;code&gt;dimensions&lt;/code&gt; には2番目のエントリから始まるコアディメンションのサイズも含まれます。一意のディメンション名ごとに1つのサイズのみが提供され、サイズはシグネチャ内の最初のディメンション名の出現に従って与えられます。</target>
        </trans-unit>
        <trans-unit id="8218bd5d7a6649aa63226e5b622d4b8efad4dc34" translate="yes" xml:space="preserve">
          <source>For a one-dimensional array, accumulate produces results equivalent to:</source>
          <target state="translated">1次元配列の場合,アキュムレートはこれと同等の結果を生成します.</target>
        </trans-unit>
        <trans-unit id="0424b9224931152a35a50c93d8cc0ece880de71a" translate="yes" xml:space="preserve">
          <source>For a one-sided t-test, how far out in the distribution does the t statistic appear?</source>
          <target state="translated">片側t検定では,t 統計量は分布のどのくらい外側に現れるか?</target>
        </trans-unit>
        <trans-unit id="3911c3b2407712ae47f85ee3fb1ac557138ff00b" translate="yes" xml:space="preserve">
          <source>For a possible future loop selector with a different signature.</source>
          <target state="translated">異なるシグネチャを持つ可能性のある将来のループセレクタのために。</target>
        </trans-unit>
        <trans-unit id="c991a419f14da45f93fac679b2b79a552dc6a583" translate="yes" xml:space="preserve">
          <source>For a simple example, consider taking the sum of all elements in an array.</source>
          <target state="translated">簡単な例として、配列のすべての要素の合計を取ることを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="65b58d63b284139c1918d1c4f188a0cdc07b3bf2" translate="yes" xml:space="preserve">
          <source>For advanced assignments, there is in general no guarantee for the iteration order. This means that if an element is set more than once, it is not possible to predict the final result.</source>
          <target state="translated">高度な代入では、一般的に反復順序の保証はありません。つまり、ある要素が複数回設定された場合、最終的な結果を予測することができないということです。</target>
        </trans-unit>
        <trans-unit id="d08105fb315fdfa97977e494fc0f07ee6275d676" translate="yes" xml:space="preserve">
          <source>For all of these macros &lt;em&gt;arr&lt;/em&gt; must be an instance of a (subclass of) &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt;, but no checking is done.</source>
          <target state="translated">これらすべてのマクロでは、&lt;em&gt;arr&lt;/em&gt;は&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt;（のサブクラス）のインスタンスでなければなりませんが、チェックは行われません。</target>
        </trans-unit>
        <trans-unit id="e1f0a94de943c1efcc57e0ced39bb6353a416723" translate="yes" xml:space="preserve">
          <source>For all of these macros &lt;em&gt;arr&lt;/em&gt; must be an instance of a (subclass of) &lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらすべてのマクロについて、&lt;em&gt;arr&lt;/em&gt;は&lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt;（のサブクラス）のインスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="24c98e7efdd0450f6d403ff7e88bf2f5b1a932b5" translate="yes" xml:space="preserve">
          <source>For all-NaN slices or slices with zero degrees of freedom, NaN is returned and a &lt;code&gt;RuntimeWarning&lt;/code&gt; is raised.</source>
          <target state="translated">すべてがNaNのスライスまたは自由度が0のスライスの場合、NaNが返され、 &lt;code&gt;RuntimeWarning&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="b523336c8d394d1599c127fd9600cfe28ac8e406" translate="yes" xml:space="preserve">
          <source>For all-NaN slices, NaN is returned and a &lt;code&gt;RuntimeWarning&lt;/code&gt; is raised.</source>
          <target state="translated">全NaNスライスの場合、NaNが返され、 &lt;code&gt;RuntimeWarning&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="cdcb9c3fa272c68c7dc5e676247f2291a44c1673" translate="yes" xml:space="preserve">
          <source>For an accompanying example, see &lt;a href=&quot;#example&quot;&gt;example.py&lt;/a&gt;.</source>
          <target state="translated">付随する例については、&lt;a href=&quot;#example&quot;&gt;example.pyを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f544bc19358af783f5828a5e5053cd2cf057f05c" translate="yes" xml:space="preserve">
          <source>For an array &lt;code&gt;a&lt;/code&gt; with &lt;code&gt;a.ndim &amp;gt;= 2&lt;/code&gt;, the diagonal is the list of locations with indices &lt;code&gt;a[i, ..., i]&lt;/code&gt; all identical. This function modifies the input array in-place, it does not return a value.</source>
          <target state="translated">アレイのための &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;a.ndim &amp;gt;= 2&lt;/code&gt; 、対角線はインデックスを有する場所のリストである &lt;code&gt;a[i, ..., i]&lt;/code&gt; 全て同一です。この関数は入力配列をインプレースで変更し、値を返しません。</target>
        </trans-unit>
        <trans-unit id="3aca4d8fb9611bde95449f6380639b52b005e231" translate="yes" xml:space="preserve">
          <source>For an array a with two axes, transpose(a) gives the matrix transpose.</source>
          <target state="translated">2 軸を持つ配列 a に対して,transpose(a)は行列の転置を与えます.</target>
        </trans-unit>
        <trans-unit id="836b756b5d814f029c077f0578ba6c0e58a3c672" translate="yes" xml:space="preserve">
          <source>For an array with rank greater than 1, some of the padding of later axes is calculated from padding of previous axes. This is easiest to think about with a rank 2 array where the corners of the padded array are calculated by using padded values from the first axis.</source>
          <target state="translated">ランクが1より大きい配列の場合、後の軸のパディングの一部は前の軸のパディングから計算されます。これは、最初の軸からのパディング値を使用して、パディングされた配列の角が計算されるランク2の配列で考えるのが最も簡単です。</target>
        </trans-unit>
        <trans-unit id="6e96c6b0d98bc68cbd820a41e54b4b8abe37a921" translate="yes" xml:space="preserve">
          <source>For an even number of input points, &lt;code&gt;A[n//2]&lt;/code&gt; represents the sum of the values at the positive and negative Nyquist frequencies, as the two are aliased together. See &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">偶数の入力ポイントの場合、 &lt;code&gt;A[n//2]&lt;/code&gt; は、2つのエイリアスが一緒にエイリアスされるため、正と負のナイキスト周波数での値の合計を表します。詳細については、&lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="57743d92673c43f581b946774bebcebd154a8f73" translate="yes" xml:space="preserve">
          <source>For an example, see &lt;a href=&quot;numpy.lib.arrayterator#numpy.lib.Arrayterator&quot;&gt;&lt;code&gt;Arrayterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例については、&lt;a href=&quot;numpy.lib.arrayterator#numpy.lib.Arrayterator&quot;&gt; &lt;code&gt;Arrayterator&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8c782854d522cc47b6ef0aa24c79c91b4278be4a" translate="yes" xml:space="preserve">
          <source>For an optional array argument, all its dimensions must be bounded.</source>
          <target state="translated">オプションの配列引数の場合は、そのすべての次元が束縛されていなければなりません。</target>
        </trans-unit>
        <trans-unit id="6fe48c8702effa07c62fb464257e567d9ddc8002" translate="yes" xml:space="preserve">
          <source>For any index combination, including slicing and axis insertion, &lt;code&gt;a[indices]&lt;/code&gt; is the same as &lt;code&gt;a[np.index_exp[indices]]&lt;/code&gt; for any array &lt;code&gt;a&lt;/code&gt;. However, &lt;code&gt;np.index_exp[indices]&lt;/code&gt; can be used anywhere in Python code and returns a tuple of slice objects that can be used in the construction of complex index expressions.</source>
          <target state="translated">スライスと軸の挿入を含むインデックスの組み合わせの場合、 &lt;code&gt;a[indices]&lt;/code&gt; は任意の配列 &lt;code&gt;a&lt;/code&gt; の &lt;code&gt;a[np.index_exp[indices]]&lt;/code&gt; と同じです。ただし、 &lt;code&gt;np.index_exp[indices]&lt;/code&gt; はPythonコードの任意の場所で使用でき、複雑なインデックス式の構築に使用できるスライスオブジェクトのタプルを返します。</target>
        </trans-unit>
        <trans-unit id="befc2c9b3e9174a0e95946cae12589b779a18421" translate="yes" xml:space="preserve">
          <source>For array methods that take an &lt;code&gt;axis&lt;/code&gt; keyword, it defaults to None. If axis is None, then the array is treated as a 1-D array. Any other value for &lt;code&gt;axis&lt;/code&gt; represents the dimension along which the operation should proceed.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; キーワードを使用する配列メソッドの場合、デフォルトはNoneです。axisがNoneの場合、配列は1次元配列として扱われます。 &lt;code&gt;axis&lt;/code&gt; その他の値は、操作を進める際の寸法を表します。</target>
        </trans-unit>
        <trans-unit id="ec5bdb26c08f7af1b31abb9fd2aadbeeef092f4f" translate="yes" xml:space="preserve">
          <source>For array methods that take an &lt;em&gt;axis&lt;/em&gt; keyword, it defaults to &lt;code&gt;None&lt;/code&gt;. If axis is &lt;em&gt;None&lt;/em&gt;, then the array is treated as a 1-D array. Any other value for &lt;em&gt;axis&lt;/em&gt; represents the dimension along which the operation should proceed.</source>
          <target state="translated">&lt;em&gt;axis&lt;/em&gt;キーワードを取る配列メソッドの場合、デフォルトは &lt;code&gt;None&lt;/code&gt; です。axisが&lt;em&gt;Noneの&lt;/em&gt;場合、配列は1次元配列として扱われます。&lt;em&gt;axisの&lt;/em&gt;他の値は、操作が進むべき次元を表します。</target>
        </trans-unit>
        <trans-unit id="d57067c37de796c57ab86aba446833670680acd2" translate="yes" xml:space="preserve">
          <source>For array methods that take an &lt;em&gt;axis&lt;/em&gt; keyword, it defaults to &lt;em&gt;None&lt;/em&gt;. If axis is &lt;em&gt;None&lt;/em&gt;, then the array is treated as a 1-D array. Any other value for &lt;em&gt;axis&lt;/em&gt; represents the dimension along which the operation should proceed.</source>
          <target state="translated">&lt;em&gt;axis&lt;/em&gt;キーワードを使用する配列メソッドの場合、デフォルトは&lt;em&gt;None&lt;/em&gt;です。axisが&lt;em&gt;Noneの&lt;/em&gt;場合、配列は1次元配列として扱われます。&lt;em&gt;軸の&lt;/em&gt;その他の値は、操作を進める際の寸法を表します。</target>
        </trans-unit>
        <trans-unit id="dcba10981a70013794c3901be17ecdedebc27a1a" translate="yes" xml:space="preserve">
          <source>For backward compatibility and as a standard &amp;ldquo;container &amp;ldquo;class, the UserArray from Numeric has been brought over to NumPy and named &lt;a href=&quot;generated/numpy.lib.user_array.container#numpy.lib.user_array.container&quot;&gt;&lt;code&gt;numpy.lib.user_array.container&lt;/code&gt;&lt;/a&gt; The container class is a Python class whose self.array attribute is an ndarray. Multiple inheritance is probably easier with numpy.lib.user_array.container than with the ndarray itself and so it is included by default. It is not documented here beyond mentioning its existence because you are encouraged to use the ndarray class directly if you can.</source>
          <target state="translated">下位互換性のため、および標準の「コンテナー」クラスとして、NumericのUserArrayがNumPyに&lt;a href=&quot;generated/numpy.lib.user_array.container#numpy.lib.user_array.container&quot;&gt; &lt;code&gt;numpy.lib.user_array.container&lt;/code&gt; &lt;/a&gt;され、numpy.lib.user_array.containerという名前が付けられました。コンテナークラスは、self.array属性がndarrayであるPythonクラスです。 numpy.lib.user_array.containerの方がndarray自体よりも多重継承の方が簡単なので、デフォルトで含まれています。可能な場合はndarrayクラスを直接使用することをお勧めするため、その存在について言及する以外に、ここでは説明しません。</target>
        </trans-unit>
        <trans-unit id="1756e23a025872fd532e8ba6c08bb9a4085acd5e" translate="yes" xml:space="preserve">
          <source>For backward compatibility with Python 2 the &lt;code&gt;S&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt; typestrings remain zero-terminated bytes and &lt;code&gt;np.string_&lt;/code&gt; continues to map to &lt;code&gt;np.bytes_&lt;/code&gt;. To use actual strings in Python 3 use &lt;code&gt;U&lt;/code&gt; or &lt;code&gt;np.unicode_&lt;/code&gt;. For signed bytes that do not need zero-termination &lt;code&gt;b&lt;/code&gt; or &lt;code&gt;i1&lt;/code&gt; can be used.</source>
          <target state="translated">パイソン2との下位互換性のために &lt;code&gt;S&lt;/code&gt; とtypestringsはゼロ終端バイト残る &lt;code&gt;np.string_&lt;/code&gt; をにマッピングし続ける &lt;code&gt;np.bytes_&lt;/code&gt; 。Python 3で実際の文字列を使用するには、 &lt;code&gt;U&lt;/code&gt; または &lt;code&gt;np.unicode_&lt;/code&gt; を使用します。ゼロ終端を必要としない符号付きバイトには、 &lt;code&gt;b&lt;/code&gt; または &lt;code&gt;i1&lt;/code&gt; を使用できます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f4c86851229c177d560fbdf1b8fb4dd2c3ff306" translate="yes" xml:space="preserve">
          <source>For backward compatible legacy reasons, we cannot change this. See &lt;code&gt;random-quick-start&lt;/code&gt;.</source>
          <target state="translated">下位互換性のあるレガシーの理由により、これを変更することはできません。 &lt;code&gt;random-quick-start&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="c77dfb74768b5914a720e322bd9c4f4d3188beb4" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, datetime64 still parses timezone offsets, which it handles by converting to UTC. However, the resulting datetime is timezone naive:</source>
          <target state="translated">後方互換性のために、datetime64 はまだタイムゾーンオフセットを解析していますが、これは UTC に変換して処理します。しかし、結果として得られる datetime はタイムゾーンがナイーブなものになります。</target>
        </trans-unit>
        <trans-unit id="1c64f15e60882d9539499a036901b91bc24bc19f" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, the form (str, array of 624 uints, int) is also accepted although it is missing some information about the cached Gaussian value: &lt;code&gt;state = ('MT19937', keys, pos)&lt;/code&gt;.</source>
          <target state="translated">下位互換性のために、フォーム（str、624 uints、intの配列）も受け入れられますが、キャッシュされたガウス値に関する情報が欠落しています： &lt;code&gt;state = ('MT19937', keys, pos)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4eb2208bc27c7545536cb93635c9264ced09a6ad" translate="yes" xml:space="preserve">
          <source>For bandlimited interpolation of discrete-time signals, the ideal interpolation kernel is proportional to the sinc function.</source>
          <target state="translated">離散時間信号のバンドリミテッド補間では、理想的な補間カーネルはsinc関数に比例します。</target>
        </trans-unit>
        <trans-unit id="0640d05a7ef317b56adcd70bde409c84daf4b12d" translate="yes" xml:space="preserve">
          <source>For buffered loops, care must be taken to copy and cast data before the loop function is called because the underlying loop expects aligned data of the correct data-type (including byte-order). The buffered loop must handle this copying and casting prior to calling the loop function on chunks no greater than the user-specified bufsize.</source>
          <target state="translated">バッファ付きループの場合、ループ関数を呼び出す前にデータをコピーしてキャストする必要があります。バッファ付きループでは、ユーザーが指定したバフサイズ以下のチャンクに対してループ関数を呼び出す前に、このコピーとキャストを処理しなければなりません。</target>
        </trans-unit>
        <trans-unit id="cb4713bd95be47f513cc79d1a6764009b9a70f10" translate="yes" xml:space="preserve">
          <source>For building NumPy, you&amp;rsquo;ll need a recent version of Cython.</source>
          <target state="translated">NumPyをビルドするには、Cythonの最新バージョンが必要です。</target>
        </trans-unit>
        <trans-unit id="78ea569e34a0a0f36b8d0d5224e34f847b3cf085" translate="yes" xml:space="preserve">
          <source>For clarity it is useful to provide some examples of the type description and corresponding &lt;a href=&quot;#__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt; &amp;lsquo;descr&amp;rsquo; entries. Thanks to Scott Gilbert for these examples:</source>
          <target state="translated">明確にするために、型の説明と対応する&lt;a href=&quot;#__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; &lt;/a&gt; 'descr'エントリのいくつかの例を提供すると便利です。これらの例を提供してくれたScott Gilbertに感謝します。</target>
        </trans-unit>
        <trans-unit id="cf57e9a465ef336bb9e191a7bcc71c622dd7e36c" translate="yes" xml:space="preserve">
          <source>For clearly intentional breaches, report those to the Code of Conduct committee (see below). For possibly unintentional breaches, you may reply to the person and point out this code of conduct (either in public or in private, whatever is most appropriate). If you would prefer not to do that, please feel free to report to the Code of Conduct Committee directly, or ask the Committee for advice, in confidence.</source>
          <target state="translated">明らかに意図的な違反については、行動規範委員会(下記参照)に報告してください。意図的でない違反の可能性がある場合は、相手に返信してこの行動規範を指摘してください(公の場でもプライベートでも、最も適切なものであれば何でも)。それをしたくない場合は、行動規範委員会に直接報告するか、内密に行動規範委員会に助言を求めてください。</target>
        </trans-unit>
        <trans-unit id="f79e4e860ac02f7665b97a2330e074b2889f9891" translate="yes" xml:space="preserve">
          <source>For comparison and general edification of the reader we provide a simple implementation of a C extension of logit that uses no numpy.</source>
          <target state="translated">読者の比較と一般的な理解のために、numpyを使用しないlogitのC拡張の簡単な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="90d52548b7d82f8c08562b9cefe270c672ec6067" translate="yes" xml:space="preserve">
          <source>For comparison with the other methods to be discussed. Here is another example of a function that filters a two-dimensional array of double precision floating-point numbers using a fixed averaging filter. The advantage of using Fortran to index into multi-dimensional arrays should be clear from this example.</source>
          <target state="translated">議論される他の方法との比較のために。倍精度浮動小数点数の2次元配列を固定平均化フィルタを用いてフィルタリングする関数の別の例を示します.Fortranを用いて多次元配列にインデックスを作成する利点は,この例から明らかであるはずです.</target>
        </trans-unit>
        <trans-unit id="aefcdcec95bb0a9f49c3ea43d81c147b480f4a1a" translate="yes" xml:space="preserve">
          <source>For complete documentation of the types of floating-point exceptions and treatment options, see &lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt;&lt;code&gt;seterr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">浮動小数点例外のタイプと処理オプションの完全なドキュメントについては、&lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt; &lt;code&gt;seterr&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f6638e7aa649639c70b61a262d3fcb528e530dcc" translate="yes" xml:space="preserve">
          <source>For completeness, we&amp;rsquo;ll also add the &amp;lsquo;external_loop&amp;rsquo; and &amp;lsquo;buffered&amp;rsquo; flags, as these are what you will typically want for performance reasons.</source>
          <target state="translated">完全を期すために、「external_loop」および「buffered」フラグも追加します。これらは通常、パフォーマンス上の理由で必要になるものだからです。</target>
        </trans-unit>
        <trans-unit id="823eefe35591ae1ef0928dcf4115410e8d28b81a" translate="yes" xml:space="preserve">
          <source>For complex arguments, &lt;code&gt;x = a + ib&lt;/code&gt;, we can write</source>
          <target state="translated">複雑な引数、 &lt;code&gt;x = a + ib&lt;/code&gt; 場合、次のように書くことができます</target>
        </trans-unit>
        <trans-unit id="00d19b01697a76f9042f9abe787cb066622b4409" translate="yes" xml:space="preserve">
          <source>For complex dtypes, the above is applied to each of the real and imaginary components of &lt;code&gt;x&lt;/code&gt; separately.</source>
          <target state="translated">複雑なdtypeの場合、上記は &lt;code&gt;x&lt;/code&gt; の実数部と虚数部のそれぞれに個別に適用されます。</target>
        </trans-unit>
        <trans-unit id="7aabc240767fa8c38770aded9994dbfb9309fc85" translate="yes" xml:space="preserve">
          <source>For complex inputs, the &lt;a href=&quot;#numpy.sign&quot;&gt;&lt;code&gt;sign&lt;/code&gt;&lt;/a&gt; function returns &lt;code&gt;sign(x.real) + 0j if x.real != 0 else sign(x.imag) + 0j&lt;/code&gt;.</source>
          <target state="translated">複素数入力の場合、&lt;a href=&quot;#numpy.sign&quot;&gt; &lt;code&gt;sign&lt;/code&gt; &lt;/a&gt;関数は &lt;code&gt;sign(x.real) + 0j if x.real != 0 else sign(x.imag) + 0j&lt;/code&gt; はsign（x.real）+ 0jを、それ以外の場合はsign（x.imag）+ 0jを返します。</target>
        </trans-unit>
        <trans-unit id="37a57514466afa09fc7538317ff0a405ada2d56e" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.arccos&quot;&gt;&lt;code&gt;arccos&lt;/code&gt;&lt;/a&gt; is a complex analytic function that has branch cuts &lt;code&gt;[-inf, -1]&lt;/code&gt; and &lt;code&gt;[1, inf]&lt;/code&gt; and is continuous from above on the former and from below on the latter.</source>
          <target state="translated">複素数値の入力の場合、&lt;a href=&quot;#numpy.arccos&quot;&gt; &lt;code&gt;arccos&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;[-inf, -1]&lt;/code&gt; と &lt;code&gt;[1, inf]&lt;/code&gt; ブランチカットを持つ複雑な分析関数であり、前者では上から、後者では下から連続です。</target>
        </trans-unit>
        <trans-unit id="ff44215d073bf2342406439d430f9b3eb5cc308c" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.arccosh&quot;&gt;&lt;code&gt;arccosh&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has a branch cut &lt;code&gt;[-inf, 1]&lt;/code&gt; and is continuous from above on it.</source>
          <target state="translated">複素数値の入力の場合、&lt;a href=&quot;#numpy.arccosh&quot;&gt; &lt;code&gt;arccosh&lt;/code&gt; &lt;/a&gt;は、分岐カット &lt;code&gt;[-inf, 1]&lt;/code&gt; あり、上から連続している複雑な分析関数です。</target>
        </trans-unit>
        <trans-unit id="64f377fde8ecd4efebbb4d5831dcc8bc678877a9" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.arcsin&quot;&gt;&lt;code&gt;arcsin&lt;/code&gt;&lt;/a&gt; is a complex analytic function that has, by convention, the branch cuts [-inf, -1] and [1, inf] and is continuous from above on the former and from below on the latter.</source>
          <target state="translated">複素数値の入力の場合、&lt;a href=&quot;#numpy.arcsin&quot;&gt; &lt;code&gt;arcsin&lt;/code&gt; &lt;/a&gt;は、慣例により、分岐が[-inf、-1]および[1、inf]をカットする複雑な分析関数であり、前者では上から、後者では下から連続しています。</target>
        </trans-unit>
        <trans-unit id="57038706eece9d133e1f92cf4c0e30653094f94f" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.arctan&quot;&gt;&lt;code&gt;arctan&lt;/code&gt;&lt;/a&gt; is a complex analytic function that has [&lt;code&gt;1j, infj&lt;/code&gt;] and [&lt;code&gt;-1j, -infj&lt;/code&gt;] as branch cuts, and is continuous from the left on the former and from the right on the latter.</source>
          <target state="translated">複素数値の入力の場合、&lt;a href=&quot;#numpy.arctan&quot;&gt; &lt;code&gt;arctan&lt;/code&gt; &lt;/a&gt;は[ &lt;code&gt;1j, infj&lt;/code&gt; ]および[ &lt;code&gt;-1j, -infj&lt;/code&gt; ]をブランチカットとして持つ複雑な分析関数であり、前者では左から、後者では右から連続です。</target>
        </trans-unit>
        <trans-unit id="4c701e0e2c7136fbf8b3d11659944481b8208402" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.arctanh&quot;&gt;&lt;code&gt;arctanh&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has branch cuts &lt;code&gt;[-1, -inf]&lt;/code&gt; and &lt;code&gt;[1, inf]&lt;/code&gt; and is continuous from above on the former and from below on the latter.</source>
          <target state="translated">複素数値の入力の場合、&lt;a href=&quot;#numpy.arctanh&quot;&gt; &lt;code&gt;arctanh&lt;/code&gt; &lt;/a&gt;は分岐カット &lt;code&gt;[-1, -inf]&lt;/code&gt; および &lt;code&gt;[1, inf]&lt;/code&gt; を持つ複雑な分析関数であり、前者では上から、後者では下から連続です。</target>
        </trans-unit>
        <trans-unit id="159e5638a9f1467d3dd2785cf39347fd2d548d9f" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.log&quot;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has a branch cut &lt;code&gt;[-inf, 0]&lt;/code&gt; and is continuous from above on it. &lt;a href=&quot;#numpy.log&quot;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt; handles the floating-point negative zero as an infinitesimal negative number, conforming to the C99 standard.</source>
          <target state="translated">複素数値の入力の場合、&lt;a href=&quot;#numpy.log&quot;&gt; &lt;code&gt;log&lt;/code&gt; &lt;/a&gt;は、分岐カット &lt;code&gt;[-inf, 0]&lt;/code&gt; 持ち、上から連続する複雑な分析関数です。&lt;a href=&quot;#numpy.log&quot;&gt; &lt;code&gt;log&lt;/code&gt; &lt;/a&gt;は、C99標準に準拠して、浮動小数点の負のゼロを微小な負の数として扱います。</target>
        </trans-unit>
        <trans-unit id="5ba7031abf7f62c036d84ca3e657ff0bbe63c9b4" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.log10&quot;&gt;&lt;code&gt;log10&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has a branch cut &lt;code&gt;[-inf, 0]&lt;/code&gt; and is continuous from above on it. &lt;a href=&quot;#numpy.log10&quot;&gt;&lt;code&gt;log10&lt;/code&gt;&lt;/a&gt; handles the floating-point negative zero as an infinitesimal negative number, conforming to the C99 standard.</source>
          <target state="translated">複素数値の入力のために、&lt;a href=&quot;#numpy.log10&quot;&gt; &lt;code&gt;log10&lt;/code&gt; のは、&lt;/a&gt;分枝切断有する複雑な分析機能である &lt;code&gt;[-inf, 0]&lt;/code&gt; とその上に上から連続しています。&lt;a href=&quot;#numpy.log10&quot;&gt; &lt;code&gt;log10&lt;/code&gt; &lt;/a&gt;は、C99標準に準拠して、浮動小数点の負のゼロを微小な負の数として扱います。</target>
        </trans-unit>
        <trans-unit id="1d03218ffbd2a27086f21639f1e5d2c57e1fdb96" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.log1p&quot;&gt;&lt;code&gt;log1p&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has a branch cut &lt;code&gt;[-inf, -1]&lt;/code&gt; and is continuous from above on it. &lt;a href=&quot;#numpy.log1p&quot;&gt;&lt;code&gt;log1p&lt;/code&gt;&lt;/a&gt; handles the floating-point negative zero as an infinitesimal negative number, conforming to the C99 standard.</source>
          <target state="translated">複素数値の入力の場合、&lt;a href=&quot;#numpy.log1p&quot;&gt; &lt;code&gt;log1p&lt;/code&gt; &lt;/a&gt;はブランチカット &lt;code&gt;[-inf, -1]&lt;/code&gt; 持ち、上から連続している複雑な分析関数です。&lt;a href=&quot;#numpy.log1p&quot;&gt; &lt;code&gt;log1p&lt;/code&gt; &lt;/a&gt;は、C99標準に準拠して、浮動小数点の負のゼロを微小な負の数として扱います。</target>
        </trans-unit>
        <trans-unit id="714b21ba8fb7b3f93db097558f921f5a3cc7d7e7" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;#numpy.log2&quot;&gt;&lt;code&gt;log2&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has a branch cut &lt;code&gt;[-inf, 0]&lt;/code&gt; and is continuous from above on it. &lt;a href=&quot;#numpy.log2&quot;&gt;&lt;code&gt;log2&lt;/code&gt;&lt;/a&gt; handles the floating-point negative zero as an infinitesimal negative number, conforming to the C99 standard.</source>
          <target state="translated">複素数値の入力の場合、&lt;a href=&quot;#numpy.log2&quot;&gt; &lt;code&gt;log2&lt;/code&gt; &lt;/a&gt;は分岐カット &lt;code&gt;[-inf, 0]&lt;/code&gt; 持ち、上から連続する複素解析関数です。&lt;a href=&quot;#numpy.log2&quot;&gt; &lt;code&gt;log2&lt;/code&gt; &lt;/a&gt;は、C99標準に準拠して、浮動小数点の負のゼロを微小な負の数として扱います。</target>
        </trans-unit>
        <trans-unit id="a557bc2da4dcaaf761d30f4619e8e0d4a2f4e8f4" translate="yes" xml:space="preserve">
          <source>For complex-valued input, &lt;a href=&quot;numpy.arccos#numpy.arccos&quot;&gt;&lt;code&gt;arccos&lt;/code&gt;&lt;/a&gt; is a complex analytical function that has branch cuts &lt;code&gt;[1j, infj]&lt;/code&gt; and &lt;code&gt;[-1j, -infj]&lt;/code&gt; and is continuous from the right on the former and from the left on the latter.</source>
          <target state="translated">複素数値の入力の場合、&lt;a href=&quot;numpy.arccos#numpy.arccos&quot;&gt; &lt;code&gt;arccos&lt;/code&gt; &lt;/a&gt;は、分岐カット &lt;code&gt;[1j, infj]&lt;/code&gt; と &lt;code&gt;[-1j, -infj]&lt;/code&gt; を持つ複雑な分析関数であり、前者では右から、後者では左から連続です。</target>
        </trans-unit>
        <trans-unit id="3c5f909f0d078490d8b615f107e16ec3bc3a188b" translate="yes" xml:space="preserve">
          <source>For computing the ULP difference, this API does not differentiate between various representations of NAN (ULP difference between 0x7fc00000 and 0xffc00000 is zero).</source>
          <target state="translated">ULP差の計算において、本APIはNANの様々な表現を区別しない(0x7fc00000と0xffc00000の間のULP差はゼロ)。</target>
        </trans-unit>
        <trans-unit id="e81428e8e562739a6cb03d81d7a49ece97991e48" translate="yes" xml:space="preserve">
          <source>For consistency with histogram, an array of pre-computed bins is passed through unmodified:</source>
          <target state="translated">ヒストグラムとの整合性を保つために,事前に計算されたビンの配列が変更されていない状態で渡されます.</target>
        </trans-unit>
        <trans-unit id="67034429080fa2a52e171f0ea36b0dba67f26dbe" translate="yes" xml:space="preserve">
          <source>For convenience and backward compatibility, a single &lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; instance&amp;rsquo;s methods are imported into the numpy.random namespace, see &lt;a href=&quot;legacy#legacy&quot;&gt;Legacy Random Generation&lt;/a&gt; for the complete list.</source>
          <target state="translated">利便性と下位互換性のために、単一の&lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;インスタンスのメソッドがnumpy.random名前空間にインポートされます。完全なリストについては、&lt;a href=&quot;legacy#legacy&quot;&gt;レガシーランダム生成&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="eed4c585fafb6282979d170d7fc49312f2240470" translate="yes" xml:space="preserve">
          <source>For convenience and backward compatibility, a single &lt;a href=&quot;legacy#numpy.random.mtrand.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; instance&amp;rsquo;s methods are imported into the numpy.random namespace, see &lt;a href=&quot;legacy#legacy&quot;&gt;Legacy Random Generation&lt;/a&gt; for the complete list.</source>
          <target state="translated">利便性と下位互換性のために、単一の&lt;a href=&quot;legacy#numpy.random.mtrand.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt;インスタンスのメソッドがnumpy.random名前空間にインポートされます。完全なリストについては、&lt;a href=&quot;legacy#legacy&quot;&gt;レガシーランダム生成&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5d0d8cd3e47bac7d4c34c5ffeca248e53bd90070" translate="yes" xml:space="preserve">
          <source>For convenience, viewing an ndarray as type &lt;code&gt;np.recarray&lt;/code&gt; will automatically convert to &lt;code&gt;np.record&lt;/code&gt; datatype, so the dtype can be left out of the view:</source>
          <target state="translated">便宜上、タイプとしてndarrayを見 &lt;code&gt;np.recarray&lt;/code&gt; は自動的に変換されます &lt;code&gt;np.record&lt;/code&gt; DTYPEがビューから除外することができますので、データ型：</target>
        </trans-unit>
        <trans-unit id="96d19661d614c330e3a9e7e16801d7b1d4abdea7" translate="yes" xml:space="preserve">
          <source>For data types that are always the same size (such as long), this holds the size of the data type. For flexible data types where different arrays can have a different elementsize, this should be 0.</source>
          <target state="translated">常に同じサイズのデータ型(longなど)の場合、これはデータ型のサイズを保持します。異なる配列が異なる要素サイズを持つことができる柔軟性のあるデータ型の場合、これは0でなければなりません。</target>
        </trans-unit>
        <trans-unit id="88871b72e212455bd0a3305f24c658a9086cd65b" translate="yes" xml:space="preserve">
          <source>For data types that describe sub-arrays:</source>
          <target state="translated">サブ配列を記述するデータ型の場合。</target>
        </trans-unit>
        <trans-unit id="665e908efd043172f3a61d4025a859ec2c83aba8" translate="yes" xml:space="preserve">
          <source>For definition of the DFT and conventions used.</source>
          <target state="translated">使用するDFTの定義や規約についてはこちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="ec4950c0b9d4572d83c373887e2dc02d9903faa1" translate="yes" xml:space="preserve">
          <source>For detailed info on testing, see &lt;a href=&quot;../dev/development_environment#testing-builds&quot;&gt;Testing builds&lt;/a&gt;.</source>
          <target state="translated">テストの詳細については、&lt;a href=&quot;../dev/development_environment#testing-builds&quot;&gt;ビルドの&lt;/a&gt;テストを参照してください。</target>
        </trans-unit>
        <trans-unit id="fb5f8bb3afe673736236ecca5864cdc9f7fc37e1" translate="yes" xml:space="preserve">
          <source>For developers of NumPy: do not instantiate this at the module level. The initial calculation of these parameters is expensive and negatively impacts import times. These objects are cached, so calling &lt;code&gt;finfo()&lt;/code&gt; repeatedly inside your functions is not a problem.</source>
          <target state="translated">NumPyの開発者向け：モジュールレベルでこれをインスタンス化しないでください。これらのパラメータの最初の計算は費用がかかり、インポート時間に悪影響を及ぼします。これらのオブジェクトはキャッシュされるため、関数内で繰り返し &lt;code&gt;finfo()&lt;/code&gt; を呼び出しても問題はありません。</target>
        </trans-unit>
        <trans-unit id="83549bc3ff37e9fd5f340310941a033ae7a10e48" translate="yes" xml:space="preserve">
          <source>For development, you can set up an in-place build so that changes made to &lt;code&gt;.py&lt;/code&gt; files have effect without rebuild. First, run:</source>
          <target state="translated">開発の場合、 &lt;code&gt;.py&lt;/code&gt; ファイルに加えられた変更が再構築せずに有効になるように、インプレースビルドを設定できます。ファーストラン：</target>
        </trans-unit>
        <trans-unit id="c58f9c7b61fa3d8a2763dc4a797daee41cc03eb8" translate="yes" xml:space="preserve">
          <source>For each distinct core dimension, a set of &lt;code&gt;UFUNC_CORE_DIM*&lt;/code&gt; flags</source>
          <target state="translated">コアディメンションごとに、一連の &lt;code&gt;UFUNC_CORE_DIM*&lt;/code&gt; フラグ</target>
        </trans-unit>
        <trans-unit id="396b05c439db2438a9382de672b6fa8e95c31893" translate="yes" xml:space="preserve">
          <source>For each distinct core dimension, the possible &lt;a href=&quot;c-api.generalized-ufuncs#frozen&quot;&gt;frozen&lt;/a&gt; size if &lt;code&gt;UFUNC_CORE_DIM_SIZE_INFERRED&lt;/code&gt; is 0</source>
          <target state="translated">個別のコアディメンションごとに、 &lt;code&gt;UFUNC_CORE_DIM_SIZE_INFERRED&lt;/code&gt; が0の場合に考えられる&lt;a href=&quot;c-api.generalized-ufuncs#frozen&quot;&gt;フリーズ&lt;/a&gt;サイズ</target>
        </trans-unit>
        <trans-unit id="69d98b78325a9c10a5d66de529392752b9338931" translate="yes" xml:space="preserve">
          <source>For each distinct core dimension, the possible &lt;a href=&quot;generalized-ufuncs#frozen&quot;&gt;frozen&lt;/a&gt; size if &lt;code&gt;UFUNC_CORE_DIM_SIZE_INFERRED&lt;/code&gt; is 0</source>
          <target state="translated">個別のコアディメンションごとに、 &lt;code&gt;UFUNC_CORE_DIM_SIZE_INFERRED&lt;/code&gt; が0の場合に可能な&lt;a href=&quot;generalized-ufuncs#frozen&quot;&gt;フリーズ&lt;/a&gt;サイズ</target>
        </trans-unit>
        <trans-unit id="eb98f2bacd6f2ddd2321b31d6e02518d57ef1a01" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a copy of the string where all characters occurring in the optional argument &lt;code&gt;deletechars&lt;/code&gt; are removed, and the remaining characters have been mapped through the given translation table.</source>
          <target state="translated">各要素のために、すべての文字は、オプションの引数で発生する文字列のコピーを返す &lt;code&gt;deletechars&lt;/code&gt; 除去し、残りの文字は、指定された変換テーブルを介してマッピングされています。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fd82d55a1666ac371b70f835404bd2254f11112" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a copy of the string with all occurrences of substring &lt;code&gt;old&lt;/code&gt; replaced by &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">内の各要素について、サブストリングのすべての出現で文字列のコピーを返し &lt;code&gt;old&lt;/code&gt; で置き換える &lt;code&gt;new&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0072392849c4a29d135980cb1732127fb7c8293" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a copy with the leading and trailing characters removed.</source>
          <target state="translated">内の各要素について、先頭と末尾の文字をコピーを返す削除。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce017fa2090bd21769500e23616f51df45b2cf16" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a copy with the leading characters removed.</source>
          <target state="translated">内の各要素について、削除主人公でコピーを返します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcc8c5cf0a4ab8429da79ab635d524c5cd68a8b9" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a copy with the trailing characters removed.</source>
          <target state="translated">内の各要素について、削除末尾の文字をコピーを返します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b48d2d67a82f24a073bc0fd48d1c7c812f1f1bea" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a list of the lines in the element, breaking at line boundaries.</source>
          <target state="translated">内の各要素について、ラインの境界で破り、要素内の行のリストを返します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d96129628d06f13e5afb8f18fe53cee0a045c865" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return a list of the words in the string, using &lt;code&gt;sep&lt;/code&gt; as the delimiter string.</source>
          <target state="translated">各要素のために、使用して、文字列内の単語のリストを返す &lt;code&gt;sep&lt;/code&gt; 区切り文字列として。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53321b75d28930691a06237aff36907b43cca790" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, return the highest index in the string where substring &lt;code&gt;sub&lt;/code&gt; is found, such that &lt;code&gt;sub&lt;/code&gt; is contained within [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;].</source>
          <target state="translated">各要素のために、サブストリングの文字列で最も高いインデックスを返す &lt;code&gt;sub&lt;/code&gt; 発見され、その結果、 &lt;code&gt;sub&lt;/code&gt; 内に含まれる[ &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;end&lt;/code&gt; ]。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e01fe9cacbc57867bf7b4b4ec2f69fefe5c4a037" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, split the element as the first occurrence of &lt;code&gt;sep&lt;/code&gt;, and return 3 strings containing the part before the separator, the separator itself, and the part after the separator. If the separator is not found, return 3 strings containing the string itself, followed by two empty strings.</source>
          <target state="translated">各要素のために、最初に出現として要素を分割 &lt;code&gt;sep&lt;/code&gt; 、およびセパレータ、セパレータ自体、およびセパレータの後の部分の前部分を含有する3つの文字列を返します。セパレータが見つからない場合は、文字列自体を含む3つの文字列を返し、その後に2つの空の文字列を返します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7288d8c0ac4641f453c7b03f986690cbb92d91ab" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;a&lt;/code&gt;, split the element as the last occurrence of &lt;code&gt;sep&lt;/code&gt;, and return 3 strings containing the part before the separator, the separator itself, and the part after the separator. If the separator is not found, return 3 strings containing the string itself, followed by two empty strings.</source>
          <target state="translated">各要素のために、最後の発生等の素子を分割 &lt;code&gt;sep&lt;/code&gt; 、およびセパレータ、セパレータ自体、およびセパレータの後の部分の前部分を含有する3つの文字列を返します。セパレータが見つからない場合は、文字列自体を含む3つの文字列を返し、その後に2つの空の文字列を返します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2be6980f0e55faed04690c7996e6d49756d7224" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return True if there are only decimal characters in the element.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素について、要素に小数点文字のみがある場合はTrueを返します。</target>
        </trans-unit>
        <trans-unit id="b59ff6bcceb7225ac9cadb07484ec0465abb9c2a" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return True if there are only numeric characters in the element.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素について、要素に数字のみが含まれている場合はTrueを返します。</target>
        </trans-unit>
        <trans-unit id="9058afe727e5f02cb1c2a82daba2773477e47ab5" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy of the string where all characters occurring in the optional argument &lt;code&gt;deletechars&lt;/code&gt; are removed, and the remaining characters have been mapped through the given translation table.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素について、オプションの引数 &lt;code&gt;deletechars&lt;/code&gt; に出現するすべての文字が削除され、残りの文字が指定された変換テーブルを介してマップされた文字列のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="ef526a1c4bb908663ee9a7ed64b48415ce75d7c1" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy of the string with all occurrences of substring &lt;code&gt;old&lt;/code&gt; replaced by &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 内の要素ごとに、すべてのサブストリング &lt;code&gt;old&lt;/code&gt; が &lt;code&gt;new&lt;/code&gt; に置き換えられた文字列のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="9e51c79c7e0159f28fc2312e8504acece61be2e0" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy of the string with uppercase characters converted to lowercase and vice versa.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素について、大文字を小文字に、またはその逆に変換した文字列のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="563e89160eca98fee13c4e654d4638943cb7ede0" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy with the leading and trailing characters removed.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素について、先頭と末尾の文字を削除したコピーを返します。</target>
        </trans-unit>
        <trans-unit id="a46f8951acf83f33ee77a16371dbcf5fcea54c99" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy with the leading characters removed.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素について、先頭の文字を削除したコピーを返します。</target>
        </trans-unit>
        <trans-unit id="c528552cf6666391ba164c6c98e3136c037ac0d0" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a copy with the trailing characters removed.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素について、末尾の文字を削除したコピーを返します。</target>
        </trans-unit>
        <trans-unit id="f3c87a7be827172789e8630db0faa9be334e4260" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a list of the lines in the element, breaking at line boundaries.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素について、要素の行のリストを、行の境界で分割して返します。</target>
        </trans-unit>
        <trans-unit id="3ca0a78fe28a9ed4242353e9fcde6e632b8bffa9" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a list of the words in the string, using &lt;code&gt;sep&lt;/code&gt; as the delimiter string.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素について、区切り文字列として &lt;code&gt;sep&lt;/code&gt; を使用して、文字列内の単語のリストを返します。</target>
        </trans-unit>
        <trans-unit id="41b923cc154e9a0efebee6038be59b5d66a9e904" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return a titlecased version of the string: words start with uppercase characters, all remaining cased characters are lowercase.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素について、タイトルケースバージョンの文字列を返します。単語は大文字で始まり、残りのすべての文字は小文字です。</target>
        </trans-unit>
        <trans-unit id="a4fdbaa4039cefb583d1742ab7a44dc37da553da" translate="yes" xml:space="preserve">
          <source>For each element in &lt;code&gt;self&lt;/code&gt;, return the highest index in the string where substring &lt;code&gt;sub&lt;/code&gt; is found, such that &lt;code&gt;sub&lt;/code&gt; is contained within [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;].</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素について、 &lt;code&gt;sub&lt;/code&gt; が[ &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;end&lt;/code&gt; ]に含まれるように、substring &lt;code&gt;sub&lt;/code&gt; が見つかった文字列の最高のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="66977f41b0aa64aabf235a79a75dcf6b6472f8b1" translate="yes" xml:space="preserve">
          <source>For each element, return True if there are only decimal characters in the element.</source>
          <target state="translated">各要素について、要素内に10進数文字しかない場合はTrueを返します。</target>
        </trans-unit>
        <trans-unit id="b1bf891f44f7ba1a69d9acfd1c67a586b04384f4" translate="yes" xml:space="preserve">
          <source>For each element, return True if there are only numeric characters in the element.</source>
          <target state="translated">各要素について、要素内に数字のみがある場合はTrueを返します。</target>
        </trans-unit>
        <trans-unit id="de1f34aa0e69ee353932bddbc1b5178f2575078b" translate="yes" xml:space="preserve">
          <source>For each element, return the lowest index in the string where substring &lt;code&gt;sub&lt;/code&gt; is found, such that &lt;code&gt;sub&lt;/code&gt; is contained in the range [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;].</source>
          <target state="translated">各要素について、 &lt;code&gt;sub&lt;/code&gt; が範囲[ &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;end&lt;/code&gt; ]に含まれるように、substring &lt;code&gt;sub&lt;/code&gt; が見つかった文字列の最小のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="2d0516f761ea835ae249621609400fab8f420640" translate="yes" xml:space="preserve">
          <source>For each element, return the lowest index in the string where substring &lt;code&gt;sub&lt;/code&gt; is found.</source>
          <target state="translated">要素ごとに、部分文字列 &lt;code&gt;sub&lt;/code&gt; が見つかった文字列の最も低いインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="1a1da4bbdbc0f0985083d16493c494b0cdbca1db" translate="yes" xml:space="preserve">
          <source>For efficient memory alignment, &lt;code&gt;np.longdouble&lt;/code&gt; is usually stored padded with zero bits, either to 96 or 128 bits. Which is more efficient depends on hardware and development environment; typically on 32-bit systems they are padded to 96 bits, while on 64-bit systems they are typically padded to 128 bits. &lt;code&gt;np.longdouble&lt;/code&gt; is padded to the system default; &lt;code&gt;np.float96&lt;/code&gt; and &lt;code&gt;np.float128&lt;/code&gt; are provided for users who want specific padding. In spite of the names, &lt;code&gt;np.float96&lt;/code&gt; and &lt;code&gt;np.float128&lt;/code&gt; provide only as much precision as &lt;code&gt;np.longdouble&lt;/code&gt;, that is, 80 bits on most x86 machines and 64 bits in standard Windows builds.</source>
          <target state="translated">効率的なメモリアライメントのために、 &lt;code&gt;np.longdouble&lt;/code&gt; は通常、96ビットまたは128ビットのいずれかのゼロビットで埋められて格納されます。どちらがより効率的かは、ハードウェアと開発環境によって異なります。通常、32ビットシステムでは96ビットにパディングされますが、64ビットシステムでは通常128ビットにパディングされます。 &lt;code&gt;np.longdouble&lt;/code&gt; は、システムのデフォルトに埋め込まれます。 &lt;code&gt;np.float96&lt;/code&gt; および &lt;code&gt;np.float128&lt;/code&gt; は、特定のパディングが必要なユーザー向けに提供されています。名前にもかかわらず、 &lt;code&gt;np.float96&lt;/code&gt; と &lt;code&gt;np.float128&lt;/code&gt; は、np.longdoubleと同じくらいの精度、 &lt;code&gt;np.longdouble&lt;/code&gt; 、ほとんどのx86マシンでは80ビット、標準のWindowsビルドでは64ビットしか提供しません。</target>
        </trans-unit>
        <trans-unit id="42afabee0f54dc6a738be8285f1c8adb1a389c2c" translate="yes" xml:space="preserve">
          <source>For events with an expected separation</source>
          <target state="translated">予想される分離があるイベントの場合</target>
        </trans-unit>
        <trans-unit id="69f5ea3c2094e2e0d29f615dbd5f1be3db9e9635" translate="yes" xml:space="preserve">
          <source>For example &lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;slicing&lt;/a&gt; can produce views of the array:</source>
          <target state="translated">たとえば、&lt;a href=&quot;arrays.indexing#arrays-indexing&quot;&gt;スライス&lt;/a&gt;すると配列のビューが生成されます。</target>
        </trans-unit>
        <trans-unit id="6ba61c52342c8ca357f9b025f520786b1e36f952" translate="yes" xml:space="preserve">
          <source>For example suppose the source directory contains fun/foo.dat and fun/bar/car.dat:</source>
          <target state="translated">例えば、ソースディレクトリに fun/foo.dat と fun/bar/car.dat があるとします。</target>
        </trans-unit>
        <trans-unit id="1b62eba4a89119c28458eb16bfa619aca8aa8969" translate="yes" xml:space="preserve">
          <source>For example you might make a startup script that looks like this (Note: this is just an example, not a statement of &amp;ldquo;best practices&amp;rdquo;):</source>
          <target state="translated">たとえば、次のような起動スクリプトを作成できます（注：これは単なる例であり、「ベストプラクティス」の説明ではありません）。</target>
        </trans-unit>
        <trans-unit id="290de80d5fc36b01dd67ceeb09359da7bf8e0291" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; has a state consisting of 624 &lt;code&gt;uint32&lt;/code&gt; integers. A naive way to take a 32-bit integer seed would be to just set the last element of the state to the 32-bit seed and leave the rest 0s. This is a valid state for &lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt;, but not a good one. The Mersenne Twister algorithm &lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html&quot;&gt;suffers if there are too many 0s&lt;/a&gt;. Similarly, two adjacent 32-bit integer seeds (i.e. &lt;code&gt;12345&lt;/code&gt; and &lt;code&gt;12346&lt;/code&gt;) would produce very similar streams.</source>
          <target state="translated">たとえば、&lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; に&lt;/a&gt;は、624個の &lt;code&gt;uint32&lt;/code&gt; 整数で構成される状態があります。32ビット整数シードを取得する単純な方法は、状態の最後の要素を32ビットシードに設定し、残りを0のままにすることです。これは&lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; の&lt;/a&gt;有効な状態ですが、適切な状態ではありません。&lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html&quot;&gt;0が多すぎると、&lt;/a&gt;メルセンヌツイスターアルゴリズムが影響を受けます。同様に、2つの隣接する32ビット整数シード（つまり、 &lt;code&gt;12345&lt;/code&gt; と &lt;code&gt;12346&lt;/code&gt; ）は、非常に類似したストリームを生成します。</target>
        </trans-unit>
        <trans-unit id="c528a73750dc2b0ea8c9a4908a64744d7d47416a" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; has a state consisting of 624 &lt;code&gt;uint32&lt;/code&gt; integers. A naive way to take a 32-bit integer seed would be to just set the last element of the state to the 32-bit seed and leave the rest 0s. This is a valid state for &lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt;, but not a good one. The Mersenne Twister algorithm &lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html&quot;&gt;suffers if there are too many 0s&lt;/a&gt;. Similarly, two adjacent 32-bit integer seeds (i.e. &lt;code&gt;12345&lt;/code&gt; and &lt;code&gt;12346&lt;/code&gt;) would produce very similar streams.</source>
          <target state="translated">たとえば、&lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; に&lt;/a&gt;は、624個の &lt;code&gt;uint32&lt;/code&gt; 整数で構成される状態があります。 32ビット整数シードを取得する素朴な方法は、状態の最後の要素を32ビットシードに設定し、残りを0のままにすることです。これは&lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; の&lt;/a&gt;有効な状態ですが、適切な状態ではありません。 Mersenne Twisterアルゴリズム&lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html&quot;&gt;は、0が多すぎると影響を受け&lt;/a&gt;ます。同様に、2つの隣接する32ビット整数シード（つまり、 &lt;code&gt;12345&lt;/code&gt; および &lt;code&gt;12346&lt;/code&gt; ）は、非常に類似したストリームを生成します。</target>
        </trans-unit>
        <trans-unit id="c92ea12ee3f0aa3697d45f7df6d6af24fc7fd6b1" translate="yes" xml:space="preserve">
          <source>For example, F2PY generates from</source>
          <target state="translated">例えば、F2PYは</target>
        </trans-unit>
        <trans-unit id="30f8823abb19bf71600d2b51cdc69b652a8cdb6f" translate="yes" xml:space="preserve">
          <source>For example, I might be working on a computer with a little-endian CPU - such as an Intel Pentium, but I have loaded some data from a file written by a computer that is big-endian. Let&amp;rsquo;s say I have loaded 4 bytes from a file written by a Sun (big-endian) computer. I know that these 4 bytes represent two 16-bit integers. On a big-endian machine, a two-byte integer is stored with the Most Significant Byte (MSB) first, and then the Least Significant Byte (LSB). Thus the bytes are, in memory order:</source>
          <target state="translated">たとえば、Intel PentiumなどのリトルエンディアンCPUを搭載したコンピューターで作業している場合でも、ビッグエンディアンのコンピューターによって書き込まれたファイルからデータをロードしました。Sun（ビッグエンディアン）コンピューターによって書き込まれたファイルから4バイトをロードしたとしましょう。これらの4バイトは2つの16ビット整数を表すことを私は知っています。ビッグエンディアンマシンでは、2バイト整数が最初に最上位バイト（MSB）で格納され、次に最下位バイト（LSB）で格納されます。したがって、バイトはメモリ順に次のようになります。</target>
        </trans-unit>
        <trans-unit id="214075869a9c515ee07024b57bc4ea923a1819de" translate="yes" xml:space="preserve">
          <source>For example, a 2x2 array &lt;code&gt;A&lt;/code&gt; is Fortran-contiguous if its elements are stored in memory in the following order:</source>
          <target state="translated">たとえば、2x2配列 &lt;code&gt;A&lt;/code&gt; は、その要素が次の順序でメモリに格納されている場合、Fortranに隣接しています。</target>
        </trans-unit>
        <trans-unit id="e8f7cf41730b21d0b9a823684d400d6bc79bd0dc" translate="yes" xml:space="preserve">
          <source>For example, a function &lt;code&gt;myrange(n)&lt;/code&gt; generated from the following signature</source>
          <target state="translated">たとえば、次の署名から生成された関数 &lt;code&gt;myrange(n)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32bc5e66732d4344162eb54fb50c625865f9eafb" translate="yes" xml:space="preserve">
          <source>For example, add.accumulate() is equivalent to np.cumsum().</source>
          <target state="translated">例えば、add.accumulate()はnp.cumsum()と同等です。</target>
        </trans-unit>
        <trans-unit id="9a8d227d278d37b6250f8f06b0e4ddba59ee6707" translate="yes" xml:space="preserve">
          <source>For example, add.reduce() is equivalent to sum().</source>
          <target state="translated">例えば、add.reduce()はsum()と同等です。</target>
        </trans-unit>
        <trans-unit id="10dea8dee68a389bd052fd52669dfbae04bf6a1e" translate="yes" xml:space="preserve">
          <source>For example, calculating 3*a, where a is an array of 32-bit floats, intuitively should result in a 32-bit float output. If the 3 is a 32-bit integer, the NumPy rules indicate it can&amp;rsquo;t convert losslessly into a 32-bit float, so a 64-bit float should be the result type. By examining the value of the constant, &amp;lsquo;3&amp;rsquo;, we see that it fits in an 8-bit integer, which can be cast losslessly into the 32-bit float.</source>
          <target state="translated">たとえば、3 * aを計算すると（aは32ビットの浮動小数点数の配列）、直感的には32ビットの浮動小数点数の出力になります。 3が32ビット整数の場合、NumPyルールはそれを無損失で32ビット浮動小数点に変換できないことを示しているため、64ビット浮動小数点が結果の型である必要があります。定数「3」の値を調べると、8ビット整数に収まることがわかります。これは、32ビット浮動小数点に無損失でキャストできます。</target>
        </trans-unit>
        <trans-unit id="e896d341feb39ad2e94789a2fa3a61f98c1ab6de" translate="yes" xml:space="preserve">
          <source>For example, consider a ufunc with signature &lt;code&gt;(i,j),(i)-&amp;gt;()&lt;/code&gt;. In this case, &lt;code&gt;args&lt;/code&gt; will contain three pointers to the data of the input/output arrays &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;. Furthermore, &lt;code&gt;dimensions&lt;/code&gt; will be &lt;code&gt;[N, I, J]&lt;/code&gt; to define the size of &lt;code&gt;N&lt;/code&gt; of the loop and the sizes &lt;code&gt;I&lt;/code&gt; and &lt;code&gt;J&lt;/code&gt; for the core dimensions &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt;. Finally, &lt;code&gt;steps&lt;/code&gt; will be &lt;code&gt;[a_N, b_N, c_N, a_i, a_j, b_i]&lt;/code&gt;, containing all necessary strides.</source>
          <target state="translated">たとえば、署名が &lt;code&gt;(i,j),(i)-&amp;gt;()&lt;/code&gt; ufuncを考えます。この場合、 &lt;code&gt;args&lt;/code&gt; には、入出力配列 &lt;code&gt;a&lt;/code&gt; 、 &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;c&lt;/code&gt; のデータへの3つのポインターが含まれます。さらに、 &lt;code&gt;dimensions&lt;/code&gt; は &lt;code&gt;[N, I, J]&lt;/code&gt; なり、ループの &lt;code&gt;N&lt;/code&gt; のサイズ &lt;code&gt;I&lt;/code&gt; コアの次元 &lt;code&gt;i&lt;/code&gt; および &lt;code&gt;j&lt;/code&gt; のサイズIおよび &lt;code&gt;J&lt;/code&gt; を定義します。最後に、 &lt;code&gt;steps&lt;/code&gt; は &lt;code&gt;[a_N, b_N, c_N, a_i, a_j, b_i]&lt;/code&gt; 、必要なストライドがすべて含まれます。</target>
        </trans-unit>
        <trans-unit id="dcfa362f844d8235742ab06beea7b0f26a111d9a" translate="yes" xml:space="preserve">
          <source>For example, consider the following Python code:</source>
          <target state="translated">例えば、以下のPythonのコードを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="65c761c5136870def0974489fd65a1f38ad92d78" translate="yes" xml:space="preserve">
          <source>For example, for functions like &lt;code&gt;log&lt;/code&gt; with branch cuts, the versions in this module provide the mathematically valid answers in the complex plane:</source>
          <target state="translated">たとえば、ブランチカット付きの &lt;code&gt;log&lt;/code&gt; ような関数の場合、このモジュールのバージョンは、複素平面で数学的に有効な答えを提供します。</target>
        </trans-unit>
        <trans-unit id="1ae012c1a0fdd5d83c39490663637fce0836fd8c" translate="yes" xml:space="preserve">
          <source>For example, here is a typical source generator function:</source>
          <target state="translated">例えば、ここに代表的なソース生成機能を示します。</target>
        </trans-unit>
        <trans-unit id="5f16b11fb1616884a1f7f0284cf2a3ad3bd24f37" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;a&lt;/code&gt; is a 3x3 array:</source>
          <target state="translated">たとえば、 &lt;code&gt;a&lt;/code&gt; が3x3配列の場合：</target>
        </trans-unit>
        <trans-unit id="7e1eba6b832e945c1e4ddb165d50f426b3bfee26" translate="yes" xml:space="preserve">
          <source>For example, if an iterator was created with a single array as its input, and it was possible to rearrange all its axes and then collapse it into a single strided iteration, this would return a view that is a one-dimensional array.</source>
          <target state="translated">例えば、1つの配列を入力としてイテレータが作成され、そのイテレータの軸をすべて並べ替えて、1つのストライド反復に畳み込むことができた場合、これは1次元の配列であるビューを返すことになります。</target>
        </trans-unit>
        <trans-unit id="a7f0071af46179382458b34ec09b89b95e091389" translate="yes" xml:space="preserve">
          <source>For example, if we choose</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="2ff87dba0f6e77925be276fcef4c7c831b8ea504" translate="yes" xml:space="preserve">
          <source>For example, if we want to import only the first and the last columns, we can use &lt;code&gt;usecols=(0, -1)&lt;/code&gt;:</source>
          <target state="translated">たとえば、最初と最後の列のみをインポートする場合は、 &lt;code&gt;usecols=(0, -1)&lt;/code&gt; 使用できます。</target>
        </trans-unit>
        <trans-unit id="cd3d9bd14f229a7eb91aaf840c6ac1f84467537b" translate="yes" xml:space="preserve">
          <source>For example, if you create this array:</source>
          <target state="translated">例えば、このような配列を作成した場合。</target>
        </trans-unit>
        <trans-unit id="16f1b7e404a82b7d866b4be0ca94013f93955314" translate="yes" xml:space="preserve">
          <source>For example, if you create this function:</source>
          <target state="translated">例えば、このような関数を作成した場合。</target>
        </trans-unit>
        <trans-unit id="d4336a303ad0f6a2b1bcee09892c8545dcc3ff9f" translate="yes" xml:space="preserve">
          <source>For example, if you start with this array:</source>
          <target state="translated">例えば、このような配列から始めると</target>
        </trans-unit>
        <trans-unit id="302f8b44862add9c44dd094ba5ef88c857733962" translate="yes" xml:space="preserve">
          <source>For example, if you want your sub-class or duck-type to be compatible with numpy&amp;rsquo;s &lt;code&gt;sum&lt;/code&gt; function, the method signature for this object&amp;rsquo;s &lt;code&gt;sum&lt;/code&gt; method should be the following:</source>
          <target state="translated">たとえば、サブクラスまたはダックタイプをnumpyの &lt;code&gt;sum&lt;/code&gt; 関数と互換性があるようにする場合、このオブジェクトの &lt;code&gt;sum&lt;/code&gt; メソッドのメソッドシグネチャは次のようになります。</target>
        </trans-unit>
        <trans-unit id="77b454223ff8bed8a9b0c67509f246c5fba091e9" translate="yes" xml:space="preserve">
          <source>For example, on a (typical linux x64 gcc) system, the numpy &lt;code&gt;complex64&lt;/code&gt; datatype is implemented as &lt;code&gt;struct { float real, imag; }&lt;/code&gt;. This has &amp;ldquo;true&amp;rdquo; alignment of 4 and &amp;ldquo;uint&amp;rdquo; alignment of 8 (equal to the true alignment of &lt;code&gt;uint64&lt;/code&gt;).</source>
          <target state="translated">たとえば、（典型的なLinux x64 gcc）システムでは、numpy &lt;code&gt;complex64&lt;/code&gt; データ型は &lt;code&gt;struct { float real, imag; }&lt;/code&gt; として実装されます。}。これには、4の「true」アライメントと8の「uint」アライメントがあります（ &lt;code&gt;uint64&lt;/code&gt; の trueアライメントと同じ）。</target>
        </trans-unit>
        <trans-unit id="4ae14922ef64a97a2775a05d3077ba74da55d933" translate="yes" xml:space="preserve">
          <source>For example, the coordinates of a point in 3D space &lt;code&gt;[1,&amp;nbsp;2,&amp;nbsp;1]&lt;/code&gt; has one axis. That axis has 3 elements in it, so we say it has a length of 3. In the example pictured below, the array has 2 axes. The first axis has a length of 2, the second axis has a length of 3.</source>
          <target state="translated">たとえば、3D空間 &lt;code&gt;[1,&amp;nbsp;2,&amp;nbsp;1]&lt;/code&gt; 1、2、1 ]の点の座標には1つの軸があります。その軸には3つの要素があるため、長さは3と言います。下の図の例では、配列には2つの軸があります。最初の軸の長さは2で、2番目の軸の長さは3です。</target>
        </trans-unit>
        <trans-unit id="a172b13cb31313d38b209503a58e68588770858e" translate="yes" xml:space="preserve">
          <source>For example, this is the mean square error formula (a central formula used in supervised machine learning models that deal with regression):</source>
          <target state="translated">例えば、これは平均二乗誤差の式(回帰を扱う教師付き機械学習モデルで使われる中心的な式)です。</target>
        </trans-unit>
        <trans-unit id="0368fcdf7406da31a66eddfd11e72598360ada41" translate="yes" xml:space="preserve">
          <source>For example, using a 2-D boolean array of shape (2,3) with four True elements to select rows from a 3-D array of shape (2,3,5) results in a 2-D result of shape (4,5):</source>
          <target state="translated">例えば、4つのTrue要素を持つシェイプ(2,3)の2-Dブーリアン配列を使用して、シェイプ(2,3,5)の3-D配列から行を選択すると、シェイプ(4,5)の2-D結果が得られます。</target>
        </trans-unit>
        <trans-unit id="54b9b1c9d703092f2621c55a5b2cd1e1eddf85b5" translate="yes" xml:space="preserve">
          <source>For example, you can create an array from a regular Python list or tuple using the &lt;code&gt;array&lt;/code&gt; function. The type of the resulting array is deduced from the type of the elements in the sequences.</source>
          <target state="translated">たとえば、 &lt;code&gt;array&lt;/code&gt; 関数を使用して、通常のPythonリストまたはタプルから配列を作成できます。結果の配列のタイプは、シーケンス内の要素のタイプから推測されます。</target>
        </trans-unit>
        <trans-unit id="3fad2cb39c870a9de4b9e44ed99144a88481e6ec" translate="yes" xml:space="preserve">
          <source>For example, you can plot a 1D array like this:</source>
          <target state="translated">例えば、1次元配列をこのようにプロットすることができます。</target>
        </trans-unit>
        <trans-unit id="390c0f644804c3940d2b75b4dff6f12c284b252d" translate="yes" xml:space="preserve">
          <source>For example, you may have an array like this one:</source>
          <target state="translated">例えば、このような配列があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="d24b595e5b1e7c226dfee05c7297047fa32fe9c1" translate="yes" xml:space="preserve">
          <source>For example, you might well want to be able to shorten &lt;code&gt;git checkout&lt;/code&gt; to &lt;code&gt;git co&lt;/code&gt;. Or you may want to alias &lt;code&gt;git diff --color-words&lt;/code&gt; (which gives a nicely formatted output of the diff) to &lt;code&gt;git wdiff&lt;/code&gt;</source>
          <target state="translated">たとえば、 &lt;code&gt;git checkout&lt;/code&gt; を &lt;code&gt;git co&lt;/code&gt; に短縮できるようにしたい場合があります。それとも、エイリアスにしたいことがあり &lt;code&gt;git diff --color-words&lt;/code&gt; に（差分のきれいにフォーマットの出力が得られます） &lt;code&gt;git wdiff&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="8b82f8996b94b3076d2602f80a0b8a902b3a3586" translate="yes" xml:space="preserve">
          <source>For examples, see the various functions.</source>
          <target state="translated">例としては、各種機能を参照してください。</target>
        </trans-unit>
        <trans-unit id="13b2e9c534395e7c5f78b138c5b0b5d135b327e2" translate="yes" xml:space="preserve">
          <source>For finite values, isclose uses the following equation to test whether two floating point values are equivalent.</source>
          <target state="translated">有限値の場合、iscloseは以下の式を用いて、2つの浮動小数点値が等価かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="e9eda33d9c06cab528c6194c742df4404b1ba711" translate="yes" xml:space="preserve">
          <source>For fixed format Fortran codes, &lt;code&gt;&amp;lt;comment char&amp;gt;&lt;/code&gt; must be at the first column of a file, of course. For free format Fortran codes, F2PY directives can appear anywhere in a file.</source>
          <target state="translated">もちろん、固定フォーマットのFortranコードの場合、 &lt;code&gt;&amp;lt;comment char&amp;gt;&lt;/code&gt; はファイルの最初の列になければなりません。フリーフォーマットのFortranコードの場合、F2PYディレクティブはファイル内のどこにでも表示できます。</target>
        </trans-unit>
        <trans-unit id="d62c0e35a11ece55b5adf0e9c849759b322d0ed9" translate="yes" xml:space="preserve">
          <source>For floating point arguments, the length of the result is &lt;code&gt;ceil((stop - start)/step)&lt;/code&gt;. Because of floating point overflow, this rule may result in the last element of &lt;code&gt;out&lt;/code&gt; being greater than &lt;code&gt;stop&lt;/code&gt;.</source>
          <target state="translated">浮動小数点引数の場合、結果の長さは &lt;code&gt;ceil((stop - start)/step)&lt;/code&gt; です。浮動小数点のオーバーフローのため、このルールでは、 &lt;code&gt;out&lt;/code&gt; の最後の要素が &lt;code&gt;stop&lt;/code&gt; よりも大きくなる場合があります。</target>
        </trans-unit>
        <trans-unit id="e9208c67472507d398cb8a93a13859f9ce375088" translate="yes" xml:space="preserve">
          <source>For floating point numbers the numerical precision of sum (and &lt;code&gt;np.add.reduce&lt;/code&gt;) is in general limited by directly adding each number individually to the result causing rounding errors in every step. However, often numpy will use a numerically better approach (partial pairwise summation) leading to improved precision in many use-cases. This improved precision is always provided when no &lt;code&gt;axis&lt;/code&gt; is given. When &lt;code&gt;axis&lt;/code&gt; is given, it will depend on which axis is summed. Technically, to provide the best speed possible, the improved precision is only used when the summation is along the fast axis in memory. Note that the exact precision may vary depending on other parameters. In contrast to NumPy, Python&amp;rsquo;s &lt;code&gt;math.fsum&lt;/code&gt; function uses a slower but more precise approach to summation. Especially when summing a large number of lower precision floating point numbers, such as &lt;code&gt;float32&lt;/code&gt;, numerical errors can become significant. In such cases it can be advisable to use &lt;code&gt;dtype=&amp;rdquo;float64&amp;rdquo;&lt;/code&gt; to use a higher precision for the output.</source>
          <target state="translated">浮動小数点数の場合、合計（および &lt;code&gt;np.add.reduce&lt;/code&gt; ）の数値精度は一般に、各数値を結果に直接加算することによって制限され、すべてのステップで丸めエラーが発生します。ただし、多くの場合、numpyは数値的に優れたアプローチ（部分的なペアごとの合計）を使用して、多くのユースケースで精度を向上させます。この改善された精度は、 &lt;code&gt;axis&lt;/code&gt; が指定されていない場合に常に提供されます。 &lt;code&gt;axis&lt;/code&gt; が与えられたとき、それは合計される軸に依存します。技術的には、可能な限り最高の速度を提供するため、精度が向上するのは、合計がメモリ内の高速軸に沿っている場合のみです。正確な精度は他のパラメータによって異なる場合があることに注意してください。 NumPyとは対照的に、Pythonの &lt;code&gt;math.fsum&lt;/code&gt; 関数は、より低速ですがより正確な総和のアプローチを使用します。特に、 &lt;code&gt;float32&lt;/code&gt; など、精度の低い浮動小数点数を多数加算すると、数値エラーが大きくなる可能性があります。このような場合は、出力に高精度を使用するために &lt;code&gt;dtype=&amp;rdquo;float64&amp;rdquo;&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f41c623cdcb4a0e7f4eb2e6a140ca19a3b6cef7a" translate="yes" xml:space="preserve">
          <source>For floating-point input, the &lt;em&gt;std&lt;/em&gt; is computed using the same precision the input has. Depending on the input data, this can cause the results to be inaccurate, especially for float32 (see example below). Specifying a higher-accuracy accumulator using the &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; keyword can alleviate this issue.</source>
          <target state="translated">浮動小数点入力の場合、&lt;em&gt;std&lt;/em&gt;は入力と同じ精度を使用して計算されます。入力データによっては、特にfloat32の場合、結果が不正確になる可能性があります（以下の例を参照）。&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;キーワードを使用してより正確なアキュムレータを指定すると、この問題を軽減できます。</target>
        </trans-unit>
        <trans-unit id="effdce45ed2fe7c4c7447e7c5d6ed579806ca2bd" translate="yes" xml:space="preserve">
          <source>For floating-point input, the variance is computed using the same precision the input has. Depending on the input data, this can cause the results to be inaccurate, especially for &lt;code&gt;float32&lt;/code&gt; (see example below). Specifying a higher-accuracy accumulator using the &lt;code&gt;dtype&lt;/code&gt; keyword can alleviate this issue.</source>
          <target state="translated">浮動小数点入力の場合、分散は入力と同じ精度を使用して計算されます。入力データによっては、特に &lt;code&gt;float32&lt;/code&gt; の場合、結果が不正確になる可能性があります（以下の例を参照）。 &lt;code&gt;dtype&lt;/code&gt; キーワードを使用してより正確なアキュムレータを指定すると、この問題を軽減できます。</target>
        </trans-unit>
        <trans-unit id="d9b2341f620f885d0f8ab294ce3abbf3b1a90c60" translate="yes" xml:space="preserve">
          <source>For full documentation, see &lt;a href=&quot;numpy.searchsorted#numpy.searchsorted&quot;&gt;&lt;code&gt;numpy.searchsorted&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">完全なドキュメントについては、&lt;a href=&quot;numpy.searchsorted#numpy.searchsorted&quot;&gt; &lt;code&gt;numpy.searchsorted&lt;/code&gt; を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="8407df90b73fe86cd7253f98195431a6f813b267" translate="yes" xml:space="preserve">
          <source>For further details, consult the numpy reference documentation on array indexing.</source>
          <target state="translated">詳細については、配列のインデックスについての numpy リファレンスドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="77c711733607bfc1bae041078b86f27ea8766c29" translate="yes" xml:space="preserve">
          <source>For further information, see &lt;a href=&quot;numpy.memmap#numpy.memmap&quot;&gt;&lt;code&gt;memmap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;numpy.memmap#numpy.memmap&quot;&gt; &lt;code&gt;memmap&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e11475a277ae3113deb33326346ecfc8620fa4bf" translate="yes" xml:space="preserve">
          <source>For general resources for learning &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; see &lt;a href=&quot;git_resources#git-resources&quot;&gt;Additional Git Resources&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;を学習するための一般的なリソースについては、&lt;a href=&quot;git_resources#git-resources&quot;&gt;追加のGitリソースを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8e32d40cffc64e1d0297c17e549d89391273d13d" translate="yes" xml:space="preserve">
          <source>For help in printing, the following strings are defined as the correct format specifier in printf and related commands.</source>
          <target state="translated">印刷に役立つように、printfや関連コマンドでは、以下の文字列が正しい書式指定子として定義されています。</target>
        </trans-unit>
        <trans-unit id="489d6f9ad36355f45e025471f49df88064ca87ee" translate="yes" xml:space="preserve">
          <source>For higher dimensional arrays summing a single axis can be done with ellipsis:</source>
          <target state="translated">高次元の配列の場合,1軸の和は楕円で行うことができます.</target>
        </trans-unit>
        <trans-unit id="6a424dcac51ca8b201228fd393c244dbeb8c5216" translate="yes" xml:space="preserve">
          <source>For i in &lt;code&gt;range(len(indices))&lt;/code&gt;, &lt;a href=&quot;#numpy.ufunc.reduceat&quot;&gt;&lt;code&gt;reduceat&lt;/code&gt;&lt;/a&gt; computes &lt;code&gt;ufunc.reduce(a[indices[i]:indices[i+1]])&lt;/code&gt;, which becomes the i-th generalized &amp;ldquo;row&amp;rdquo; parallel to &lt;code&gt;axis&lt;/code&gt; in the final result (i.e., in a 2-D array, for example, if &lt;code&gt;axis = 0&lt;/code&gt;, it becomes the i-th row, but if &lt;code&gt;axis = 1&lt;/code&gt;, it becomes the i-th column). There are three exceptions to this:</source>
          <target state="translated">&lt;code&gt;range(len(indices))&lt;/code&gt; の iに対して、&lt;a href=&quot;#numpy.ufunc.reduceat&quot;&gt; &lt;code&gt;reduceat&lt;/code&gt; は&lt;/a&gt; &lt;code&gt;ufunc.reduce(a[indices[i]:indices[i+1]])&lt;/code&gt; 計算し、最終結果の &lt;code&gt;axis&lt;/code&gt; に平行なi番目の一般化された「行」になります（つまり、2次元配列では、たとえば、 &lt;code&gt;axis = 0&lt;/code&gt; 場合はi番目の行になりますが、 &lt;code&gt;axis = 1&lt;/code&gt; 場合はi番目の列になります）。これには3つの例外があります。</target>
        </trans-unit>
        <trans-unit id="3e2d688963af310435591977ab9e45596586b894" translate="yes" xml:space="preserve">
          <source>For initializing an array &lt;code&gt;&amp;lt;array name&amp;gt;&lt;/code&gt;, F2PY generates a loop over all indices and dimensions that executes the following pseudo-statement:</source>
          <target state="translated">配列 &lt;code&gt;&amp;lt;array name&amp;gt;&lt;/code&gt; 初期化するために、F2PYは、次の疑似ステートメントを実行するすべてのインデックスと次元に対してループを生成します。</target>
        </trans-unit>
        <trans-unit id="05f651225304ab9158ee3f9e677f8c577d092edf" translate="yes" xml:space="preserve">
          <source>For input arrays that are smaller than the specified buffer size, copies are made of all non-contiguous, mis-aligned, or out-of- byteorder arrays to ensure that for small arrays, a single loop is used. Then, array iterators are created for all the input arrays and the resulting collection of iterators is broadcast to a single shape.</source>
          <target state="translated">指定されたバッファサイズよりも小さい入力配列に対しては,小さな配列に対しては 1 つのループが利用されることを保証するために,連続していない配列,位置ずれしている配列,バイトオーダー外の配列のコピーがすべて作成されます.その後,すべての入力配列に対して配列イテレータが作成され,その結果得られたイテレータのコレクションが単一の形状にブロードキャストされます.</target>
        </trans-unit>
        <trans-unit id="0c7b69e69466d27c81eb277802b5fd2ba93ef1f2" translate="yes" xml:space="preserve">
          <source>For instructions on building for source package, see &lt;a href=&quot;building&quot;&gt;Building from source&lt;/a&gt;. This information is useful mainly for advanced users.</source>
          <target state="translated">ソースパッケージのビルド方法については、参照&lt;a href=&quot;building&quot;&gt;ソースからのビルド&lt;/a&gt;。この情報は、主に上級ユーザーに役立ちます。</target>
        </trans-unit>
        <trans-unit id="37dbe6dc0691b61b379d0a2afb8134a45871395a" translate="yes" xml:space="preserve">
          <source>For integer arguments with absolute value larger than 1 the result is always zero because of the way Python handles integer division. For integer zero the result is an overflow.</source>
          <target state="translated">絶対値が1よりも大きい整数の引数の場合、Pythonは整数の除算を処理するため、結果は常にゼロになります。整数ゼロの場合、結果はオーバーフローとなります。</target>
        </trans-unit>
        <trans-unit id="117e2f99abde5ef34211f008976cf994cee261a9" translate="yes" xml:space="preserve">
          <source>For integer input the return values are floats.</source>
          <target state="translated">整数入力の場合、戻り値はfloatです。</target>
        </trans-unit>
        <trans-unit id="51f2302ae3afa42e90f16f1c35bbd2af61213570" translate="yes" xml:space="preserve">
          <source>For integer specifiers (eg. &lt;code&gt;d,i,o,x&lt;/code&gt;), the minimum number of digits.</source>
          <target state="translated">整数指定子（例： &lt;code&gt;d,i,o,x&lt;/code&gt; ）の場合、最小桁数。</target>
        </trans-unit>
        <trans-unit id="7401aba5507b33d4914d20070660b9faa95209c3" translate="yes" xml:space="preserve">
          <source>For integer types, exact equality is used, in the same way as &lt;a href=&quot;numpy.ma.masked_equal#numpy.ma.masked_equal&quot;&gt;&lt;code&gt;masked_equal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">整数型の場合は、&lt;a href=&quot;numpy.ma.masked_equal#numpy.ma.masked_equal&quot;&gt; &lt;code&gt;masked_equal&lt;/code&gt; &lt;/a&gt;と同じように、完全等価が使用されます。</target>
        </trans-unit>
        <trans-unit id="1e54c6af26706ff283ff28256c72b54eb26fbc6b" translate="yes" xml:space="preserve">
          <source>For integers, the fill value will be different in general to the result of &lt;code&gt;masked_equal&lt;/code&gt;.</source>
          <target state="translated">整数の場合、塗りつぶしの値は、一般的に &lt;code&gt;masked_equal&lt;/code&gt; の結果とは異なります。</target>
        </trans-unit>
        <trans-unit id="7d049cee37488c14a6b5c65b1da77ab9e42f2daa" translate="yes" xml:space="preserve">
          <source>For matrices that are not square or that (for negative powers) cannot be inverted numerically.</source>
          <target state="translated">正方でない行列や(負のべき乗の場合は)数値的に反転できない行列の場合。</target>
        </trans-unit>
        <trans-unit id="582e5fdc5986730f5cfb2129f1c085cdd20f4ef0" translate="yes" xml:space="preserve">
          <source>For monotonically _increasing_ &lt;code&gt;bins&lt;/code&gt;, the following are equivalent:</source>
          <target state="translated">単調_increasing_について &lt;code&gt;bins&lt;/code&gt; 、以下は等価です。</target>
        </trans-unit>
        <trans-unit id="83fdf15871a7264e4f60e9ab78a977dea92e1a03" translate="yes" xml:space="preserve">
          <source>For more detailed documentation.</source>
          <target state="translated">より詳細なドキュメントについてはこちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="37ae37abcab4e25dbfe5d8b108d91993462a8cf5" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;numpy.random.mtrand.randomstate.set_state#numpy.random.mtrand.RandomState.set_state&quot;&gt;&lt;code&gt;set_state&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;numpy.random.mtrand.randomstate.set_state#numpy.random.mtrand.RandomState.set_state&quot;&gt; &lt;code&gt;set_state&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="51a8eedb7d395c27948e4922d0fabc18aafcf5ff" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;numpy.random.set_state#numpy.random.set_state&quot;&gt;&lt;code&gt;set_state&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;numpy.random.set_state#numpy.random.set_state&quot;&gt; &lt;code&gt;set_state&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8f7f38b00189236c28757faab4aba491a5544afa" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;code&gt;linalg.lstsq&lt;/code&gt;.</source>
          <target state="translated">詳細については、 &lt;code&gt;linalg.lstsq&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="e8a8f4e50fa887cbbddc19a83dfdf91655b33341" translate="yes" xml:space="preserve">
          <source>For more extensive information, see &lt;a href=&quot;../reference/testing#testing-guidelines&quot;&gt;Testing Guidelines&lt;/a&gt;</source>
          <target state="translated">より詳細な情報については、&lt;a href=&quot;../reference/testing#testing-guidelines&quot;&gt;テストガイドラインを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="95cf6089ff82991425d6efdc0504169843591543" translate="yes" xml:space="preserve">
          <source>For more help on this function please see section 1.8 (Keyword Parameters for Extension Functions) of the Extending and Embedding tutorial in the Python documentation.</source>
          <target state="translated">この関数の詳細については、PythonドキュメントのExtending and Embeddingチュートリアルのセクション1.8 (Keyword Parameters for Extension Functions)を参照してください。</target>
        </trans-unit>
        <trans-unit id="61db67fed17b10d2110b06ec89aa13d261ade260" translate="yes" xml:space="preserve">
          <source>For more information on dictionaries, read the &lt;a href=&quot;https://docs.python.org/tutorial/&quot;&gt;Python tutorial&lt;/a&gt;.</source>
          <target state="translated">辞書の詳細については、&lt;a href=&quot;https://docs.python.org/tutorial/&quot;&gt;Pythonチュートリアルをお&lt;/a&gt;読みください。</target>
        </trans-unit>
        <trans-unit id="03f4a148b39366545cf97da19167eb00139c5efc" translate="yes" xml:space="preserve">
          <source>For more information on the qr factorization, see for example: &lt;a href=&quot;https://en.wikipedia.org/wiki/QR_factorization&quot;&gt;https://en.wikipedia.org/wiki/QR_factorization&lt;/a&gt;</source>
          <target state="translated">QR分解の詳細については、例を参照して&lt;a href=&quot;https://en.wikipedia.org/wiki/QR_factorization&quot;&gt;ください&lt;/a&gt;：https : //en.wikipedia.org/wiki/QR_factorization</target>
        </trans-unit>
        <trans-unit id="17921f717812e3320e8a7f42f4f17f79981316f9" translate="yes" xml:space="preserve">
          <source>For more information see:</source>
          <target state="translated">詳細はこちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="3985651be63157e0b3fd0f006d48347a4d4ad484" translate="yes" xml:space="preserve">
          <source>For more information, a way to suppress the warning, and an example of &lt;a href=&quot;#numpy.RankWarning&quot;&gt;&lt;code&gt;RankWarning&lt;/code&gt;&lt;/a&gt; being issued, see &lt;a href=&quot;numpy.polyfit#numpy.polyfit&quot;&gt;&lt;code&gt;polyfit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">詳細、警告を抑制する方法、および発行される&lt;a href=&quot;#numpy.RankWarning&quot;&gt; &lt;code&gt;RankWarning&lt;/code&gt; の&lt;/a&gt;例については、&lt;a href=&quot;numpy.polyfit#numpy.polyfit&quot;&gt; &lt;code&gt;polyfit&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8581f2666047bb23a92c8e690d1acad362013f23" translate="yes" xml:space="preserve">
          <source>For more information, read the section on lists in the &lt;a href=&quot;https://docs.python.org/tutorial/&quot;&gt;Python tutorial&lt;/a&gt;. For a mapping type (key-value), see &lt;em&gt;dictionary&lt;/em&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://docs.python.org/tutorial/&quot;&gt;Pythonチュートリアルの&lt;/a&gt;リストに関するセクションを参照してください。マッピングタイプ（キー値）については、&lt;em&gt;辞書を&lt;/em&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6c4cae020b6b04928ab8186f1d73c1c26eba4002" translate="yes" xml:space="preserve">
          <source>For more information, refer to the &lt;a href=&quot;../index#module-numpy&quot;&gt;&lt;code&gt;numpy&lt;/code&gt;&lt;/a&gt; module and examine the methods and attributes of an array.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../index#module-numpy&quot;&gt; &lt;code&gt;numpy&lt;/code&gt; &lt;/a&gt;モジュールを参照して、配列のメソッドと属性を調べてください。</target>
        </trans-unit>
        <trans-unit id="d0fe83d89b7a0207c98cafeb4a0d87c2838e97b1" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.python.org/3/extending/building.html&quot;&gt;Building C and C++ Extensions&lt;/a&gt; Python documentation for details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://docs.python.org/3/extending/building.html&quot;&gt;BuildingCおよびC ++ ExtensionsPythonの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="fa1433baa3f08eec4628310de483f3180d604e64" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-push.html&quot;&gt;git push&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-push.html&quot;&gt;gitpushを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b974edc2834bd1e574341abd9ce885d0e7a2979b" translate="yes" xml:space="preserve">
          <source>For more information, see F2Py source code &lt;code&gt;numpy/f2py/capi_maps.py&lt;/code&gt;.</source>
          <target state="translated">詳細については、F2Pyソースコード &lt;code&gt;numpy/f2py/capi_maps.py&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="b32b573b8f00ce30b3419ec834d75448d214948d" translate="yes" xml:space="preserve">
          <source>For negative numbers, if width is not given, a minus sign is added to the front. If width is given, the two&amp;rsquo;s complement of the number is returned, with respect to that width.</source>
          <target state="translated">負の数の場合、幅を指定しないと、マイナス記号が前に追加されます。幅を指定すると、その幅に関して、数値の2の補数が返されます。</target>
        </trans-unit>
        <trans-unit id="5fc06ff1428a67551e7039c42cd5b569afbb759c" translate="yes" xml:space="preserve">
          <source>For non-Hermitian normal matrices the SciPy function &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.schur.html#scipy.linalg.schur&quot;&gt;&lt;code&gt;scipy.linalg.schur&lt;/code&gt;&lt;/a&gt; is preferred because the matrix &lt;code&gt;v&lt;/code&gt; is guaranteed to be unitary, which is not the case when using &lt;a href=&quot;#numpy.linalg.eig&quot;&gt;&lt;code&gt;eig&lt;/code&gt;&lt;/a&gt;. The Schur factorization produces an upper triangular matrix rather than a diagonal matrix, but for normal matrices only the diagonal of the upper triangular matrix is needed, the rest is roundoff error.</source>
          <target state="translated">非エルミート正規行列の場合、行列 &lt;code&gt;v&lt;/code&gt; が単一であることが保証されているため、SciPy関数&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.schur.html#scipy.linalg.schur&quot;&gt; &lt;code&gt;scipy.linalg.schur&lt;/code&gt; &lt;/a&gt;が推奨されます。これは、&lt;a href=&quot;#numpy.linalg.eig&quot;&gt; &lt;code&gt;eig&lt;/code&gt; &lt;/a&gt;を使用する場合には当てはまりません。Schur分解は、対角行列ではなく上三角行列を生成しますが、正規行列の場合、上三角行列の対角のみが必要であり、残りは丸め誤差です。</target>
        </trans-unit>
        <trans-unit id="1e6d9fefb02ae78e90327bf08c7741fd4d7aad3c" translate="yes" xml:space="preserve">
          <source>For one-dimensional arrays these notions coincide.</source>
          <target state="translated">一次元配列については,これらの概念は一致しています.</target>
        </trans-unit>
        <trans-unit id="6a2721282deb17b4500d92138a510cdb4754bcd3" translate="yes" xml:space="preserve">
          <source>For operations which are either not commutative or not associative, doing a reduction over multiple axes is not well-defined. The ufuncs do not currently raise an exception in this case, but will likely do so in the future.</source>
          <target state="translated">可換的ではない、あるいは連想的ではない演算では、複数の軸をまたいで還元を行うことは、十分に定義されていません。ufuncsは現在この場合に例外を発生させていませんが、将来的には例外を発生させることになるでしょう。</target>
        </trans-unit>
        <trans-unit id="cce08ac0d595dc1fc36977f113db0494cd013706" translate="yes" xml:space="preserve">
          <source>For other keyword-only arguments, see the &lt;a href=&quot;../ufuncs#ufuncs-kwargs&quot;&gt;ufunc docs&lt;/a&gt;.</source>
          <target state="translated">その他のキーワードのみの引数については、&lt;a href=&quot;../ufuncs#ufuncs-kwargs&quot;&gt;ufunc docsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0c08ef249ec6e440d6a8f4e999cc7fb84e271c54" translate="yes" xml:space="preserve">
          <source>For our example, we&amp;rsquo;ll create a sum of squares function. To start, let&amp;rsquo;s implement this function in straightforward Python. We want to support an &amp;lsquo;axis&amp;rsquo; parameter similar to the numpy &lt;a href=&quot;generated/numpy.sum#numpy.sum&quot;&gt;&lt;code&gt;sum&lt;/code&gt;&lt;/a&gt; function, so we will need to construct a list for the &lt;code&gt;op_axes&lt;/code&gt; parameter. Here&amp;rsquo;s how this looks.</source>
          <target state="translated">この例では、二乗和関数を作成します。まず、この関数を単純なPythonで実装しましょう。numpy &lt;a href=&quot;generated/numpy.sum#numpy.sum&quot;&gt; &lt;code&gt;sum&lt;/code&gt; &lt;/a&gt;関数と同様の「axis」パラメーターをサポートしたいので、 &lt;code&gt;op_axes&lt;/code&gt; パラメーターのリストを作成する必要があります。これはどのように見えるかです。</target>
        </trans-unit>
        <trans-unit id="1bfec23fd3b5a8e4feecb9f5b43f562b252ee813" translate="yes" xml:space="preserve">
          <source>For paragraphs, indentation is significant and indicates indentation in the output. New paragraphs are marked with a blank line.</source>
          <target state="translated">段落の場合、インデントは重要で、出力のインデントを示します。新しい段落は空白行でマークされます。</target>
        </trans-unit>
        <trans-unit id="f8e34004cd49470f698985ea088603e79d6737af" translate="yes" xml:space="preserve">
          <source>For pickling.</source>
          <target state="translated">漬け込み用。</target>
        </trans-unit>
        <trans-unit id="45d056f2d6dc25af69ffd36f748681cb1b37bcb7" translate="yes" xml:space="preserve">
          <source>For positive integers &lt;code&gt;n&lt;/code&gt;, the power is computed by repeated matrix squarings and matrix multiplications. If &lt;code&gt;n == 0&lt;/code&gt;, the identity matrix of the same shape as M is returned. If &lt;code&gt;n &amp;lt; 0&lt;/code&gt;, the inverse is computed and then raised to the &lt;code&gt;abs(n)&lt;/code&gt;.</source>
          <target state="translated">正の整数 &lt;code&gt;n&lt;/code&gt; の場合、累乗は、行列の二乗と行列の乗算の繰り返しによって計算されます。 &lt;code&gt;n == 0&lt;/code&gt; 場合、Mと同じ形状の単位行列が返されます。場合 &lt;code&gt;n &amp;lt; 0&lt;/code&gt; 、逆数を計算した後に上昇させる &lt;code&gt;abs(n)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2868f608509a0fb880318bfa1ea537e24b697cca" translate="yes" xml:space="preserve">
          <source>For private use, NumPy also constructs a &lt;code&gt;config.h&lt;/code&gt; in the NumPy include directory, which is not exported by NumPy (that is a python extension which use the numpy C API will not see those symbols), to avoid namespace pollution.</source>
          <target state="translated">プライベート使用の場合、NumPyはまた、NumPyインクルードディレクトリに &lt;code&gt;config.h&lt;/code&gt; を構築します。これは、NumPyによってエクスポートされません（つまり、numpy C APIを使用するpython拡張機能はこれらのシンボルを認識しません）。これにより、名前空間の汚染を回避します。</target>
        </trans-unit>
        <trans-unit id="3cba0cef0ecc3bf15466cf0b613737ac43d7cf46" translate="yes" xml:space="preserve">
          <source>For random samples from</source>
          <target state="translated">からのランダムサンプルの場合</target>
        </trans-unit>
        <trans-unit id="3b14ea0275a3817032fbdd7fbc1e7bdb06b2af67" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.arccos&quot;&gt;&lt;code&gt;arccos&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">実数値の入力データ型の場合、&lt;a href=&quot;#numpy.arccos&quot;&gt; &lt;code&gt;arccos&lt;/code&gt; は&lt;/a&gt;常に実出力を返します。実数または無限大として表現できない値ごとに、 &lt;code&gt;nan&lt;/code&gt; が生成され、 &lt;code&gt;invalid&lt;/code&gt; 浮動小数点エラーフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="f985096374044eb3c8f423921e1ca43a25a0a64a" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.arccosh&quot;&gt;&lt;code&gt;arccosh&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">実数値の入力データ型の場合、&lt;a href=&quot;#numpy.arccosh&quot;&gt; &lt;code&gt;arccosh&lt;/code&gt; は&lt;/a&gt;常に実出力を返します。実数または無限大として表現できない値ごとに、 &lt;code&gt;nan&lt;/code&gt; が生成され、 &lt;code&gt;invalid&lt;/code&gt; 浮動小数点エラーフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="1bd6dae91050b378f422d64d0fd3d06caee7dc76" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.arcsinh&quot;&gt;&lt;code&gt;arcsinh&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it returns &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">実数値の入力データ型の場合、&lt;a href=&quot;#numpy.arcsinh&quot;&gt; &lt;code&gt;arcsinh&lt;/code&gt; は&lt;/a&gt;常に実出力を返します。実数または無限大として表現できない値ごとに、 &lt;code&gt;nan&lt;/code&gt; を返し、 &lt;code&gt;invalid&lt;/code&gt; 浮動小数点エラーフラグを設定します。</target>
        </trans-unit>
        <trans-unit id="f1a3e2a79ac88302cd49ced01b5ae36cb593f786" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.arctan&quot;&gt;&lt;code&gt;arctan&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">実数値の入力データ型の場合、&lt;a href=&quot;#numpy.arctan&quot;&gt; &lt;code&gt;arctan&lt;/code&gt; は&lt;/a&gt;常に実出力を返します。実数または無限大として表現できない値ごとに、 &lt;code&gt;nan&lt;/code&gt; が生成され、 &lt;code&gt;invalid&lt;/code&gt; 浮動小数点エラーフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="4e59a4a7e10620a1dcf06247438f5e136a0933eb" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.arctanh&quot;&gt;&lt;code&gt;arctanh&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">実数値の入力データ型の場合、&lt;a href=&quot;#numpy.arctanh&quot;&gt; &lt;code&gt;arctanh&lt;/code&gt; は&lt;/a&gt;常に実出力を返します。実数または無限大として表現できない値ごとに、 &lt;code&gt;nan&lt;/code&gt; が生成され、 &lt;code&gt;invalid&lt;/code&gt; 浮動小数点エラーフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="00463e3d9bf72a8660310a707c972e6c6b2f2a87" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.log&quot;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">実数値の入力データ型の場合、&lt;a href=&quot;#numpy.log&quot;&gt; &lt;code&gt;log&lt;/code&gt; は&lt;/a&gt;常に実出力を返します。実数または無限大として表現できない値ごとに、 &lt;code&gt;nan&lt;/code&gt; が生成され、 &lt;code&gt;invalid&lt;/code&gt; 浮動小数点エラーフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="1dd401d005377ef79add082427bec36bd76d7d40" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.log10&quot;&gt;&lt;code&gt;log10&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">実数値の入力データ型の場合、&lt;a href=&quot;#numpy.log10&quot;&gt; &lt;code&gt;log10&lt;/code&gt; は&lt;/a&gt;常に実出力を返します。実数または無限大として表現できない値ごとに、 &lt;code&gt;nan&lt;/code&gt; が生成され、 &lt;code&gt;invalid&lt;/code&gt; 浮動小数点エラーフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="18c562bcbaf668e2b82c801663121e7d15eaaa37" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.log1p&quot;&gt;&lt;code&gt;log1p&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">実数値の入力データ型の場合、&lt;a href=&quot;#numpy.log1p&quot;&gt; &lt;code&gt;log1p&lt;/code&gt; は&lt;/a&gt;常に実出力を返します。実数または無限大として表現できない値ごとに、 &lt;code&gt;nan&lt;/code&gt; が生成され、 &lt;code&gt;invalid&lt;/code&gt; 浮動小数点エラーフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="cb65926ba3df7c570cfbf88879b3b9d563294100" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;a href=&quot;#numpy.log2&quot;&gt;&lt;code&gt;log2&lt;/code&gt;&lt;/a&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">実数値の入力データ型の場合、&lt;a href=&quot;#numpy.log2&quot;&gt; &lt;code&gt;log2&lt;/code&gt; は&lt;/a&gt;常に実出力を返します。実数または無限大として表現できない値ごとに、 &lt;code&gt;nan&lt;/code&gt; が生成され、 &lt;code&gt;invalid&lt;/code&gt; 浮動小数点エラーフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="5a691d6f039d37de2f424c2292fd24a2e8849ab5" translate="yes" xml:space="preserve">
          <source>For real-valued input data types, &lt;em&gt;arcsin&lt;/em&gt; always returns real output. For each value that cannot be expressed as a real number or infinity, it yields &lt;code&gt;nan&lt;/code&gt; and sets the &lt;code&gt;invalid&lt;/code&gt; floating point error flag.</source>
          <target state="translated">実数値の入力データ型の場合、&lt;em&gt;arcsinは&lt;/em&gt;常に実出力を返します。実数または無限大として表現できない値ごとに、 &lt;code&gt;nan&lt;/code&gt; が生成され、 &lt;code&gt;invalid&lt;/code&gt; 浮動小数点エラーフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="ac8dda629e47802177efe000a2d093f5e016a0cb" translate="yes" xml:space="preserve">
          <source>For real-valued input, &lt;a href=&quot;#numpy.log1p&quot;&gt;&lt;code&gt;log1p&lt;/code&gt;&lt;/a&gt; is accurate also for &lt;code&gt;x&lt;/code&gt; so small that &lt;code&gt;1 + x == 1&lt;/code&gt; in floating-point accuracy.</source>
          <target state="translated">実数値の入力の場合、&lt;a href=&quot;#numpy.log1p&quot;&gt; &lt;code&gt;log1p&lt;/code&gt; &lt;/a&gt;は、浮動小数点の精度で &lt;code&gt;1 + x == 1&lt;/code&gt; となるほど小さい &lt;code&gt;x&lt;/code&gt; についても正確です。</target>
        </trans-unit>
        <trans-unit id="8718e777159adb99e6030aa86f73aaa6419d14ea" translate="yes" xml:space="preserve">
          <source>For repeatability and readability, the dictionary keys are sorted in alphabetic order. This is for convenience only. A writer SHOULD implement this if possible. A reader MUST NOT depend on this.</source>
          <target state="translated">再現性と可読性のために、辞書キーはアルファベット順に並べ替えています。これは便宜上のものである。ライターは可能であればこれを実装すべきである[SHOULD]。読者はこれに依存してはならない[MUST NOT]。</target>
        </trans-unit>
        <trans-unit id="6bd239911d468099089301c7ec88d5d1667469b6" translate="yes" xml:space="preserve">
          <source>For reshape, resize, and transpose, the single tuple argument may be replaced with &lt;code&gt;n&lt;/code&gt; integers which will be interpreted as an n-tuple.</source>
          <target state="translated">形状変更、サイズ変更、および転置の場合、単一のタプル引数は、nタプルとして解釈される &lt;code&gt;n&lt;/code&gt; 整数に置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="6fe957d6ccb5cf28dddb483265ed8d862961930a" translate="yes" xml:space="preserve">
          <source>For scalar &lt;code&gt;a&lt;/code&gt;, returns the data type with the smallest size and smallest scalar kind which can hold its value.</source>
          <target state="translated">スカラー &lt;code&gt;a&lt;/code&gt; の場合、その値を保持できる最小のサイズと最小のスカラーの種類を持つデータ型を返します。</target>
        </trans-unit>
        <trans-unit id="22863dbfbfce9a1b2c0c06d8e441eed6ee432e4b" translate="yes" xml:space="preserve">
          <source>For scalar &lt;code&gt;a&lt;/code&gt;, returns the data type with the smallest size and smallest scalar kind which can hold its value. For non-scalar array &lt;code&gt;a&lt;/code&gt;, returns the vector&amp;rsquo;s dtype unmodified.</source>
          <target state="translated">スカラー &lt;code&gt;a&lt;/code&gt; の場合、その値を保持できる最小のサイズと最小のスカラーの種類を持つデータ型を返します。非スカラー配列 &lt;code&gt;a&lt;/code&gt; の場合、ベクターのdtypeを変更せずに返します。</target>
        </trans-unit>
        <trans-unit id="5642e4133974cc82494c6e2e1a04d4f6b4435c53" translate="yes" xml:space="preserve">
          <source>For several methods, an optional &lt;em&gt;out&lt;/em&gt; argument can also be provided and the result will be placed into the output array given. The &lt;em&gt;out&lt;/em&gt; argument must be an &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; and have the same number of elements. It can have a different data type in which case casting will be performed.</source>
          <target state="translated">いくつかのメソッドでは、オプションの&lt;em&gt;out&lt;/em&gt;引数も指定でき、結果は指定された出力配列に配置されます。&lt;em&gt;うちの&lt;/em&gt;引数がなければなりません&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;と同じ数の要素を持っています。キャストが実行される場合、異なるデータ型を持つことができます。</target>
        </trans-unit>
        <trans-unit id="b0753b0fcbeca94ce7630240e047138c854a65dd" translate="yes" xml:space="preserve">
          <source>For signed integer inputs, the two&amp;rsquo;s complement is returned. In a two&amp;rsquo;s-complement system negative numbers are represented by the two&amp;rsquo;s complement of the absolute value. This is the most common method of representing signed integers on computers &lt;a href=&quot;#rde927b304c4f-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. A N-bit two&amp;rsquo;s-complement system can represent every integer in the range</source>
          <target state="translated">符号付き整数入力の場合、2の補数が返されます。2の補数システムでは、負の数は絶対値の2の補数で表されます。これは、コンピューターで符号付き整数を表す最も一般的な方法です&lt;a href=&quot;#rde927b304c4f-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;。Nビットの2の補数システムは、範囲内のすべての整数を表すことができます</target>
        </trans-unit>
        <trans-unit id="8a7f873acfba66a72d1ce69253d776c71ca10e17" translate="yes" xml:space="preserve">
          <source>For simplicity we give a ufunc for a single dtype, the &amp;lsquo;f8&amp;rsquo; double. As in the previous section, we first give the .c file and then the setup.py file used to create the module containing the ufunc.</source>
          <target state="translated">簡単にするために、単一のdtypeにufunc、「f8」doubleを指定します。前のセクションと同様に、最初に.cファイルを指定し、次にufuncを含むモジュールの作成に使用するsetup.pyファイルを指定します。</target>
        </trans-unit>
        <trans-unit id="1790f111eccdfcb9badd8e72bbfbae78adf5ee18" translate="yes" xml:space="preserve">
          <source>For standard library functions:</source>
          <target state="translated">標準的なライブラリ関数の場合。</target>
        </trans-unit>
        <trans-unit id="e58c1a1b97b83acb57ac2ac307ed0d7c16b3baf7" translate="yes" xml:space="preserve">
          <source>For structured arrays, all fields are combined, with masked values ignored. The result is masked if all fields were masked, with self and other considered equal only if both were fully masked.</source>
          <target state="translated">構造化された配列の場合、すべてのフィールドが結合され、マスクされた値は無視されます。すべてのフィールドがマスクされている場合、結果はマスクされ、selfとotherは両方が完全にマスクされている場合にのみ等しいとみなされます。</target>
        </trans-unit>
        <trans-unit id="60753f45a63d90af610aa65f98fdd4ce690bf30a" translate="yes" xml:space="preserve">
          <source>For structured datatypes with no fields this function now returns False.</source>
          <target state="translated">フィールドを持たない構造化データ型の場合、この関数は False を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="54b403ec15e745ce9b0d408a4253b0a3db036c37" translate="yes" xml:space="preserve">
          <source>For structured types, a structured scalar is returned, with each field the default fill value for its type.</source>
          <target state="translated">構造化された型の場合は、構造化されたスカラが返され、各フィールドはその型のデフォルトの塗りつぶし値となります。</target>
        </trans-unit>
        <trans-unit id="7c0b7d9c35a991bbf7b4be3304607a91761fd2e6" translate="yes" xml:space="preserve">
          <source>For subarray types, the fill value is an array of the same size containing the default scalar fill value.</source>
          <target state="translated">部分配列型の場合、塗りつぶし値はデフォルトのスカラー塗りつぶし値を含む同じサイズの配列となります。</target>
        </trans-unit>
        <trans-unit id="fa1668cc4f1ad2127afa574513a965e4f8de0bd1" translate="yes" xml:space="preserve">
          <source>For tall matrices in NumPy version up to 1.6.2, the diagonal &amp;ldquo;wrapped&amp;rdquo; after N columns. You can have this behavior with this option. This affects only tall matrices.</source>
          <target state="translated">1.6.2までのNumPyバージョンの背の高い行列の場合、N列の後に対角線が「ラップ」されます。このオプションでこの動作をさせることができます。これは背の高い行列のみに影響します。</target>
        </trans-unit>
        <trans-unit id="15797574f39fa9a94e6a6ba0f1322211577809c1" translate="yes" xml:space="preserve">
          <source>For tests with a result that is random or platform-dependent, mark the output as such:</source>
          <target state="translated">ランダムな結果やプラットフォームに依存するテストの場合は、そのような出力をマークしてください。</target>
        </trans-unit>
        <trans-unit id="571561584fb9de04ee089fbe39a5ff6d6bc01c7a" translate="yes" xml:space="preserve">
          <source>For the explicit constructor call, our subclass will need to create a new ndarray instance of its own class. In practice this means that we, the authors of the code, will need to make a call to &lt;code&gt;ndarray.__new__(MySubClass,...)&lt;/code&gt;, a class-hierarchy prepared call to &lt;code&gt;super(MySubClass, cls).__new__(cls, ...)&lt;/code&gt;, or do view casting of an existing array (see below)</source>
          <target state="translated">明示的なコンストラクター呼び出しの場合、サブクラスは独自のクラスの新しいndarrayインスタンスを作成する必要があります。実際には、これは、コードの作成者である &lt;code&gt;ndarray.__new__(MySubClass,...)&lt;/code&gt; 呼び出す必要があることを意味します。これは、クラス階層で準備された &lt;code&gt;super(MySubClass, cls).__new__(cls, ...)&lt;/code&gt; 、または既存の配列のビューキャストを実行します（以下を参照）</target>
        </trans-unit>
        <trans-unit id="18e3d7bba1f8f57e3e3d0698a1673d2f7dbd0218" translate="yes" xml:space="preserve">
          <source>For the first run, we threw 3 times 1, 4 times 2, etc. For the second, we threw 2 times 1, 4 times 2, etc.</source>
          <target state="translated">1本目は3回1、4回2などを投げました。2本目は2回1、4回2などを投げました。</target>
        </trans-unit>
        <trans-unit id="72f9e5e8e38fa061436e99d12c2a915135e47ac9" translate="yes" xml:space="preserve">
          <source>For the following methods there are also corresponding functions in &lt;a href=&quot;index#module-numpy&quot;&gt;&lt;code&gt;numpy&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;generated/numpy.all#numpy.all&quot;&gt;&lt;code&gt;all&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.any#numpy.any&quot;&gt;&lt;code&gt;any&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.argmax#numpy.argmax&quot;&gt;&lt;code&gt;argmax&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.argmin#numpy.argmin&quot;&gt;&lt;code&gt;argmin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.argpartition#numpy.argpartition&quot;&gt;&lt;code&gt;argpartition&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.argsort#numpy.argsort&quot;&gt;&lt;code&gt;argsort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.choose#numpy.choose&quot;&gt;&lt;code&gt;choose&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.clip#numpy.clip&quot;&gt;&lt;code&gt;clip&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.compress#numpy.compress&quot;&gt;&lt;code&gt;compress&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.copy#numpy.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.cumprod#numpy.cumprod&quot;&gt;&lt;code&gt;cumprod&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.cumsum#numpy.cumsum&quot;&gt;&lt;code&gt;cumsum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.diagonal#numpy.diagonal&quot;&gt;&lt;code&gt;diagonal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.imag#numpy.imag&quot;&gt;&lt;code&gt;imag&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.amax#numpy.amax&quot;&gt;&lt;code&gt;max&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.mean#numpy.mean&quot;&gt;&lt;code&gt;mean&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.amin#numpy.amin&quot;&gt;&lt;code&gt;min&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.nonzero#numpy.nonzero&quot;&gt;&lt;code&gt;nonzero&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.partition#numpy.partition&quot;&gt;&lt;code&gt;partition&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.prod#numpy.prod&quot;&gt;&lt;code&gt;prod&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.ptp#numpy.ptp&quot;&gt;&lt;code&gt;ptp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.put#numpy.put&quot;&gt;&lt;code&gt;put&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.ravel#numpy.ravel&quot;&gt;&lt;code&gt;ravel&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.real#numpy.real&quot;&gt;&lt;code&gt;real&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.repeat#numpy.repeat&quot;&gt;&lt;code&gt;repeat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.reshape#numpy.reshape&quot;&gt;&lt;code&gt;reshape&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.around#numpy.around&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.searchsorted#numpy.searchsorted&quot;&gt;&lt;code&gt;searchsorted&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.sort#numpy.sort&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.squeeze#numpy.squeeze&quot;&gt;&lt;code&gt;squeeze&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.std#numpy.std&quot;&gt;&lt;code&gt;std&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.sum#numpy.sum&quot;&gt;&lt;code&gt;sum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.swapaxes#numpy.swapaxes&quot;&gt;&lt;code&gt;swapaxes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.take#numpy.take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.trace#numpy.trace&quot;&gt;&lt;code&gt;trace&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.transpose#numpy.transpose&quot;&gt;&lt;code&gt;transpose&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/numpy.var#numpy.var&quot;&gt;&lt;code&gt;var&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の方法についても、対応する関数がある&lt;a href=&quot;index#module-numpy&quot;&gt; &lt;code&gt;numpy&lt;/code&gt; の&lt;/a&gt;：&lt;a href=&quot;generated/numpy.all#numpy.all&quot;&gt; &lt;code&gt;all&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.any#numpy.any&quot;&gt; &lt;code&gt;any&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.argmax#numpy.argmax&quot;&gt; &lt;code&gt;argmax&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.argmin#numpy.argmin&quot;&gt; &lt;code&gt;argmin&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.argpartition#numpy.argpartition&quot;&gt; &lt;code&gt;argpartition&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.argsort#numpy.argsort&quot;&gt; &lt;code&gt;argsort&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.choose#numpy.choose&quot;&gt; &lt;code&gt;choose&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.clip#numpy.clip&quot;&gt; &lt;code&gt;clip&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.compress#numpy.compress&quot;&gt; &lt;code&gt;compress&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.copy#numpy.copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.cumprod#numpy.cumprod&quot;&gt; &lt;code&gt;cumprod&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.cumsum#numpy.cumsum&quot;&gt; &lt;code&gt;cumsum&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.diagonal#numpy.diagonal&quot;&gt; &lt;code&gt;diagonal&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.imag#numpy.imag&quot;&gt; &lt;code&gt;imag&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.amax#numpy.amax&quot;&gt; &lt;code&gt;max&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.mean#numpy.mean&quot;&gt; &lt;code&gt;mean&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.amin#numpy.amin&quot;&gt; &lt;code&gt;min&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.nonzero#numpy.nonzero&quot;&gt; &lt;code&gt;nonzero&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.partition#numpy.partition&quot;&gt; &lt;code&gt;partition&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.prod#numpy.prod&quot;&gt; &lt;code&gt;prod&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.ptp#numpy.ptp&quot;&gt; &lt;code&gt;ptp&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.put#numpy.put&quot;&gt; &lt;code&gt;put&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.ravel#numpy.ravel&quot;&gt; &lt;code&gt;ravel&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.real#numpy.real&quot;&gt; &lt;code&gt;real&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.repeat#numpy.repeat&quot;&gt; &lt;code&gt;repeat&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.reshape#numpy.reshape&quot;&gt; &lt;code&gt;reshape&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.around#numpy.around&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.searchsorted#numpy.searchsorted&quot;&gt; &lt;code&gt;searchsorted&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.sort#numpy.sort&quot;&gt; &lt;code&gt;sort&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.squeeze#numpy.squeeze&quot;&gt; &lt;code&gt;squeeze&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.std#numpy.std&quot;&gt; &lt;code&gt;std&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.sum#numpy.sum&quot;&gt; &lt;code&gt;sum&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.swapaxes#numpy.swapaxes&quot;&gt; &lt;code&gt;swapaxes&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.take#numpy.take&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.trace#numpy.trace&quot;&gt; &lt;code&gt;trace&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.transpose#numpy.transpose&quot;&gt; &lt;code&gt;transpose&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;generated/numpy.var#numpy.var&quot;&gt; &lt;code&gt;var&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f398fd04d9f322afdba477002ec5cde7b5d2d1b" translate="yes" xml:space="preserve">
          <source>For the general case, the iteration works by keeping track of a list of coordinate counters in the iterator object. At each iteration, the last coordinate counter is increased (starting from 0). If this counter is smaller than one less than the size of the array in that dimension (a pre-computed and stored value), then the counter is increased and the dataptr member is increased by the strides in that dimension and the macro ends. If the end of a dimension is reached, the counter for the last dimension is reset to zero and the dataptr is moved back to the beginning of that dimension by subtracting the strides value times one less than the number of elements in that dimension (this is also pre-computed and stored in the backstrides member of the iterator object). In this case, the macro does not end, but a local dimension counter is decremented so that the next-to-last dimension replaces the role that the last dimension played and the previously-described tests are executed again on the next-to-last dimension. In this way, the dataptr is adjusted appropriately for arbitrary striding.</source>
          <target state="translated">一般的な場合には、反復はイテレータオブジェクト内の座標カウンタのリストを追跡することによって動作します。反復のたびに、 最後の座標カウンタが増えていきます (0 から始まります)。このカウンタがその次元内の配列のサイズ(事前に計算されて格納されている値)より1より小さい場合、カウンタが増加し、その次元内のストライドによってdataptrメンバが増加し、マクロが終了します。あるディメンジョンの終了に達した場合、最後のディメンジョンのカウンタはゼロにリセットされ、そのディメンジョンの要素数より1少ないストライド値の倍の値を引くことで、dataptrはそのディメンジョンの先頭に戻ります(これも事前に計算され、イテレータ オブジェクトの backstrides メンバに格納されています)。この場合、マクロは終了しませんが、ローカル次元カウンタがデクリメントされ、次の次元が最後の次元が最後の次元が果たした役割を置き換えるようになり、前に説明したテストが次の次元で再度実行されます。このようにして、dataptr は任意のストライドに対して適切に調整される。</target>
        </trans-unit>
        <trans-unit id="a106ff191577f5e49df4ba4a5b92a5dff872216c" translate="yes" xml:space="preserve">
          <source>For the most part, the rules for dispatch with &lt;code&gt;__array_function__&lt;/code&gt; match those for &lt;code&gt;__array_ufunc__&lt;/code&gt;. In particular:</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;__array_function__&lt;/code&gt; を使用したディスパッチのルールは__array_ufunc__のルールと一致し &lt;code&gt;__array_ufunc__&lt;/code&gt; 。特に：</target>
        </trans-unit>
        <trans-unit id="4180b0d2e31dfed11719fe695b4c67afcfef466f" translate="yes" xml:space="preserve">
          <source>For the parameter types, be as precise as possible. Below are a few examples of parameters and their types.</source>
          <target state="translated">パラメータの種類については、できるだけ正確に記述してください。以下にパラメータとその型の例を示します。</target>
        </trans-unit>
        <trans-unit id="5aabe002787ac5ab3c2a4862f3aa6c788cd300e2" translate="yes" xml:space="preserve">
          <source>For the typenum macros, the argument is an integer representing an enumerated array data type. For the array type checking macros the argument must be a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; that can be directly interpreted as a &lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject *&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">typenumマクロの場合、引数は列挙された配列データ型を表す整数です。配列型チェックマクロの場合、引数は&lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject *&lt;/code&gt; &lt;/a&gt;として直接解釈できる&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; で&lt;/a&gt;ある必要があります。</target>
        </trans-unit>
        <trans-unit id="62fce29176d606bc6dce1d1603810532e05edeb2" translate="yes" xml:space="preserve">
          <source>For the typenum macros, the argument is an integer representing an enumerated array data type. For the array type checking macros the argument must be a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; that can be directly interpreted as a &lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject *&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">typenumマクロの場合、引数は列挙型配列データ型を表す整数です。配列型チェックマクロの場合、引数は&lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject *&lt;/code&gt; &lt;/a&gt;として直接解釈できる&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; で&lt;/a&gt;ある必要があります。</target>
        </trans-unit>
        <trans-unit id="5d3c40fa5c98be8aa15b70b390891bf28a170212" translate="yes" xml:space="preserve">
          <source>For these reasons it is advisable to avoid &lt;code&gt;as_strided&lt;/code&gt; when possible.</source>
          <target state="translated">これらの理由から、可能な場合は &lt;code&gt;as_strided&lt;/code&gt; を使用しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="eb33fc8c29e1bd562bffb815c2697c66a036bae2" translate="yes" xml:space="preserve">
          <source>For these reasons, NumPy provides an API to work with npy_half values accessible by including &amp;lt;numpy/halffloat.h&amp;gt; and linking to &amp;lsquo;npymath&amp;rsquo;. For functions that are not provided directly, such as the arithmetic operations, the preferred method is to convert to float or double and back again, as in the following example.</source>
          <target state="translated">これらの理由により、NumPyは、&amp;lt;numpy / halffloat.h&amp;gt;をインクルードして「npymath」にリンクすることでアクセス可能なnpy_half値を処理するAPIを提供します。算術演算など、直接提供されない関数の場合、推奨される方法は、次の例のように、floatまたはdoubleに変換してから再び元に戻すことです。</target>
        </trans-unit>
        <trans-unit id="684c1e70d951c1d84a7330eb5d5d620e2e0f3ef5" translate="yes" xml:space="preserve">
          <source>For this example we will only handle the method &lt;code&gt;__call__&lt;/code&gt;.</source>
          <target state="translated">この例では、メソッド &lt;code&gt;__call__&lt;/code&gt; のみを処理します。</target>
        </trans-unit>
        <trans-unit id="c5b0d8b34011752e4113aaa6a6fce2b3c78d19e5" translate="yes" xml:space="preserve">
          <source>For this function to work on sub-classes of ndarray, they must define &lt;a href=&quot;numpy.sum#numpy.sum&quot;&gt;&lt;code&gt;sum&lt;/code&gt;&lt;/a&gt; with the kwarg &lt;code&gt;keepdims&lt;/code&gt;</source>
          <target state="translated">この関数がndarrayのサブクラスで機能するためには、kwarg &lt;code&gt;keepdims&lt;/code&gt; &lt;a href=&quot;numpy.sum#numpy.sum&quot;&gt; &lt;code&gt;sum&lt;/code&gt; &lt;/a&gt;を定義する必要があります</target>
        </trans-unit>
        <trans-unit id="bffe6d0d22813c5a9e09a6444b12ab5f734f3a30" translate="yes" xml:space="preserve">
          <source>For this reason it is possible to use the output from the np.nonzero() function directly as an index since it always returns a tuple of index arrays.</source>
          <target state="translated">このため、np.nonzero()関数の出力をインデックスとして直接使用することができます。</target>
        </trans-unit>
        <trans-unit id="c7b38cff3c38a7296ea244a6f149ab3fa89299cb" translate="yes" xml:space="preserve">
          <source>For this reason, it is equivalent to (but faster than) the following use of &lt;a href=&quot;numpy.apply_along_axis#numpy.apply_along_axis&quot;&gt;&lt;code&gt;apply_along_axis&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">このため、次の&lt;a href=&quot;numpy.apply_along_axis#numpy.apply_along_axis&quot;&gt; &lt;code&gt;apply_along_axis&lt;/code&gt; の&lt;/a&gt;使用と同等です（ただし、それより高速です）。</target>
        </trans-unit>
        <trans-unit id="77bbee921f7bbec73ea6da64c3957049942fe48c" translate="yes" xml:space="preserve">
          <source>For this sample array</source>
          <target state="translated">このサンプル配列の場合</target>
        </trans-unit>
        <trans-unit id="ef360ecaea0bceb4141bc860c62269adcea43126" translate="yes" xml:space="preserve">
          <source>For two dimensional arrays, the return will be two arrays ordered by axis. In this example the first array stands for the gradient in rows and the second one in columns direction:</source>
          <target state="translated">2次元配列の場合、戻り値は軸で順に並べられた2つの配列になります。この例では、最初の配列は行方向の勾配を表し、2番目の配列は列方向の勾配を表します。</target>
        </trans-unit>
        <trans-unit id="5688be18895d1ed44e4e4ac9ea5a009f3d8f644d" translate="yes" xml:space="preserve">
          <source>For ufuncs dynamically created from python functions, this member holds a reference to the underlying Python function.</source>
          <target state="translated">python 関数から動的に作成された ufuncs の場合、このメンバは基礎となる Python 関数への参照を保持します。</target>
        </trans-unit>
        <trans-unit id="f51d3a13e3a61d2cfd5f82478bfc77249b90c3e8" translate="yes" xml:space="preserve">
          <source>For ufuncs, it is hoped to eventually deprecate this method in favour of &lt;a href=&quot;#numpy.class.__array_ufunc__&quot;&gt;&lt;code&gt;__array_ufunc__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ufuncsのためには、最終的に賛成してこの方法を廃止するために期待されている&lt;a href=&quot;#numpy.class.__array_ufunc__&quot;&gt; &lt;code&gt;__array_ufunc__&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3fec4c12c09d2caf632487f32e741d15fde50a70" translate="yes" xml:space="preserve">
          <source>For unpickling.</source>
          <target state="translated">解凍用に。</target>
        </trans-unit>
        <trans-unit id="f5a617d92aada34c5b1b91d32c80426c8f059f29" translate="yes" xml:space="preserve">
          <source>For unsigned integer arrays, the results will also be unsigned. This should not be surprising, as the result is consistent with calculating the difference directly:</source>
          <target state="translated">符号なし整数配列の場合、結果も符号なしになります。これは、結果が差分を直接計算することと一致しているので、驚くべきことではありません。</target>
        </trans-unit>
        <trans-unit id="6e4eba9645d784baff280ba41b2a35d0eb68b9c9" translate="yes" xml:space="preserve">
          <source>For us, what consensus means is that we entrust &lt;em&gt;everyone&lt;/em&gt; with the right to veto any change if they feel it necessary. While this may sound like a recipe for obstruction and pain, this is not what happens. Instead, we find that most people take this responsibility seriously, and only invoke their veto when they judge that a serious problem is being ignored, and that their veto is necessary to protect the project. And in practice, it turns out that such vetoes are almost never formally invoked, because their mere possibility ensures that Contributors are motivated from the start to find some solution that everyone can live with &amp;ndash; thus accomplishing our goal of ensuring that all interested perspectives are taken into account.</source>
          <target state="translated">私たちにとってコンセンサスとは、必要に応じて変更を拒否する権利を&lt;em&gt;すべての人&lt;/em&gt;に委ねることです。これは閉塞と痛みのレシピのように聞こえるかもしれませんが、これは起こりません。代わりに、ほとんどの人がこの責任を真剣に受け止めており、深刻な問題が無視されていると判断し、プロジェクトを保護するために拒否権が必要であると判断した場合にのみ拒否権を行使します。そして実際には、そのような拒否権が正式に呼び出されることはほとんどありません。なぜなら、それらの単なる可能性により、貢献者は最初から誰もが一緒に暮らせる解決策を見つけるように動機付けられるためです。したがって、関心のあるすべての視点を確実に取り入れることができます。考慮に入れます。</target>
        </trans-unit>
        <trans-unit id="4b61801e49c04aeb574dfd6c0384db9e70e2d05c" translate="yes" xml:space="preserve">
          <source>For use if one has reason to manually (re-)set the internal state of the bit generator used by the RandomState instance. By default, RandomState uses the &amp;ldquo;Mersenne Twister&amp;rdquo;&lt;a href=&quot;#r0933ec43c7c9-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; pseudo-random number generating algorithm.</source>
          <target state="translated">RandomStateインスタンスによって使用されるビットジェネレーターの内部状態を手動で（再）設定する理由がある場合に使用します。デフォルトでは、RandomStateは「Mersenne Twister」&lt;a href=&quot;#r0933ec43c7c9-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;疑似乱数生成アルゴリズムを使用します。</target>
        </trans-unit>
        <trans-unit id="897febe53ee6bd5d25313858b98b8601f29d1bc3" translate="yes" xml:space="preserve">
          <source>For use if one has reason to manually (re-)set the internal state of the bit generator used by the RandomState instance. By default, RandomState uses the &amp;ldquo;Mersenne Twister&amp;rdquo;&lt;a href=&quot;#rd62dfb5ffa26-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; pseudo-random number generating algorithm.</source>
          <target state="translated">RandomStateインスタンスによって使用されるビットジェネレーターの内部状態を手動で（再）設定する理由がある場合に使用します。デフォルトでは、RandomStateは「MersenneTwister」&lt;a href=&quot;#rd62dfb5ffa26-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;疑似乱数生成アルゴリズムを使用します。</target>
        </trans-unit>
        <trans-unit id="ea29248ff311f62cfdcca5534fc099ca5bcc6b8e" translate="yes" xml:space="preserve">
          <source>For use if one has reason to manually (re-)set the internal state of the bit generator used by the RandomState instance. By default, RandomState uses the &amp;ldquo;Mersenne Twister&amp;rdquo;&lt;a href=&quot;#rf0f3f75f485b-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; pseudo-random number generating algorithm.</source>
          <target state="translated">RandomStateインスタンスによって使用されるビットジェネレーターの内部状態を手動で（再）設定する理由がある場合に使用します。デフォルトでは、RandomStateは「MersenneTwister」&lt;a href=&quot;#rf0f3f75f485b-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;疑似乱数生成アルゴリズムを使用します。</target>
        </trans-unit>
        <trans-unit id="23f7c1942ce335813533514ab6d97be522e99c17" translate="yes" xml:space="preserve">
          <source>For use with &lt;a href=&quot;#c.NPY_ITER_ALLOCATE&quot;&gt;&lt;code&gt;NPY_ITER_ALLOCATE&lt;/code&gt;&lt;/a&gt;, this flag disables allocating an array subtype for the output, forcing it to be a straight ndarray.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_ITER_ALLOCATE&quot;&gt; &lt;code&gt;NPY_ITER_ALLOCATE&lt;/code&gt; &lt;/a&gt;で使用する場合、このフラグは出力の配列サブタイプの割り当てを無効にし、それをストレートndarrayにします。</target>
        </trans-unit>
        <trans-unit id="4f63cfae8856e0c1b4c745d806a5044a1d2050ad" translate="yes" xml:space="preserve">
          <source>For use with &lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt;&lt;code&gt;PyArg_ParseTuple&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt; &lt;code&gt;PyArg_ParseTuple&lt;/code&gt; で&lt;/a&gt;使用します</target>
        </trans-unit>
        <trans-unit id="703ab6c203bc4f7c082f6639ec9949c363231487" translate="yes" xml:space="preserve">
          <source>For use with &lt;code&gt;PyArg_ParseTuple&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PyArg_ParseTuple&lt;/code&gt; で使用する場合</target>
        </trans-unit>
        <trans-unit id="8cb254f53813d4f5ed5d47fcd78786e6b4efd30e" translate="yes" xml:space="preserve">
          <source>For values exactly halfway between rounded decimal values, NumPy rounds to the nearest even value. Thus 1.5 and 2.5 round to 2.0, -0.5 and 0.5 round to 0.0, etc.</source>
          <target state="translated">四捨五入された小数点以下の値のちょうど中間の値については、NumPyは最も近い偶数値に丸めます。したがって、1.5と2.5は2.0に、-0.5と0.5は0.0に丸められます。</target>
        </trans-unit>
        <trans-unit id="30f0a5ecb33fee954cb51300dbd6244641e9062e" translate="yes" xml:space="preserve">
          <source>For values exactly halfway between rounded decimal values, NumPy rounds to the nearest even value. Thus 1.5 and 2.5 round to 2.0, -0.5 and 0.5 round to 0.0, etc. Results may also be surprising due to the inexact representation of decimal fractions in the IEEE floating point standard &lt;a href=&quot;#r907366b089c1-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; and errors introduced when scaling by powers of ten.</source>
          <target state="translated">丸められた10進値のちょうど中間の値の場合、NumPyは最も近い偶数の値に丸めます。したがって、1.5と2.5は2.0に丸められ、-0.5と0.5は0.0に丸められます。IEEE浮動小数点標準&lt;a href=&quot;#r907366b089c1-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;の小数部の不正確な表現と、10の累乗でスケーリングするときに導入されるエラーにより、結果も驚くかもしれません。</target>
        </trans-unit>
        <trans-unit id="a7513a1115d30c3b715a3ca9a5ba6b73db8ad275" translate="yes" xml:space="preserve">
          <source>For values of &lt;code&gt;ord &amp;lt; 1&lt;/code&gt;, the result is, strictly speaking, not a mathematical &amp;lsquo;norm&amp;rsquo;, but it may still be useful for various numerical purposes.</source>
          <target state="translated">&lt;code&gt;ord &amp;lt; 1&lt;/code&gt; 値の場合、結果は厳密に言えば、数学的な「ノルム」ではありませんが、それでもさまざまな数値目的に役立つ可能性があります。</target>
        </trans-unit>
        <trans-unit id="4b8df8eb2541671de725aa87916abd483ac03487" translate="yes" xml:space="preserve">
          <source>For values of &lt;code&gt;ord &amp;lt;= 0&lt;/code&gt;, the result is, strictly speaking, not a mathematical &amp;lsquo;norm&amp;rsquo;, but it may still be useful for various numerical purposes.</source>
          <target state="translated">&lt;code&gt;ord &amp;lt;= 0&lt;/code&gt; 値の場合、結果は厳密には数学的な「ノルム」ではありませんが、さまざまな数値の目的には役立ちます。</target>
        </trans-unit>
        <trans-unit id="d6c5fe59c42bb96e8794f338a14a9afba25af3e6" translate="yes" xml:space="preserve">
          <source>For vectors (1-D arrays) it computes the ordinary inner-product:</source>
          <target state="translated">ベクトル(1次元配列)に対しては,通常の内積を計算します.</target>
        </trans-unit>
        <trans-unit id="f31afbaa8abd3ce58c5bf83aec637268a269a63d" translate="yes" xml:space="preserve">
          <source>For vectors &lt;code&gt;x1&lt;/code&gt;, &lt;code&gt;x2&lt;/code&gt;,&amp;hellip;, &amp;lsquo;xn&amp;rsquo; with lengths &lt;code&gt;Ni=len(xi)&lt;/code&gt; , return &lt;code&gt;(N1, N2, N3,...Nn)&lt;/code&gt; shaped arrays if indexing=&amp;rsquo;ij&amp;rsquo; or &lt;code&gt;(N2, N1, N3,...Nn)&lt;/code&gt; shaped arrays if indexing=&amp;rsquo;xy&amp;rsquo; with the elements of &lt;code&gt;xi&lt;/code&gt; repeated to fill the matrix along the first dimension for &lt;code&gt;x1&lt;/code&gt;, the second for &lt;code&gt;x2&lt;/code&gt; and so on.</source>
          <target state="translated">長さが &lt;code&gt;Ni=len(xi)&lt;/code&gt; のベクトル &lt;code&gt;x1&lt;/code&gt; 、 &lt;code&gt;x2&lt;/code&gt; 、&amp;hellip;、 'xn'の場合、indexing = 'ij'または &lt;code&gt;(N2, N1, N3,...Nn)&lt;/code&gt; 場合 &lt;code&gt;(N1, N2, N3,...Nn)&lt;/code&gt; 形状の配列を返します。 ..Nn） &lt;code&gt;x1&lt;/code&gt; の最初の次元、 &lt;code&gt;x2&lt;/code&gt; の2番目の次元などに沿ってマトリックスを満たすために &lt;code&gt;xi&lt;/code&gt; の要素が繰り返されるindexing = 'xy'の場合の配列。</target>
        </trans-unit>
        <trans-unit id="51b960f61f40e8cc6aeabaf2a1735fbc2b9ac25d" translate="yes" xml:space="preserve">
          <source>For view casting and new-from-template, the equivalent of &lt;code&gt;ndarray.__new__(MySubClass,...&lt;/code&gt; is called, at the C level.</source>
          <target state="translated">ビューのキャストとnew-from-templateの場合、Cレベルで &lt;code&gt;ndarray.__new__(MySubClass,...&lt;/code&gt; と同等のものが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1f6242c0a79a41aa81490f6fd1ec86280110a2af" translate="yes" xml:space="preserve">
          <source>Force a cast to the output type even if it cannot be done safely. Without this flag, a data cast will occur only if it can be done safely, otherwise an error is raised.</source>
          <target state="translated">安全に行えない場合でも、出力型へのキャストを強制的に行います。このフラグがない場合、データのキャストは安全に行える場合にのみ行われ、そうでない場合はエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="d3ec8aad2bec1b3220d7b727c3bf434f0d55bc18" translate="yes" xml:space="preserve">
          <source>Force the mask to hard.</source>
          <target state="translated">マスクを強く押し付けます。</target>
        </trans-unit>
        <trans-unit id="cd0355317a1ab931fccb7ea5788f7a01c8683490" translate="yes" xml:space="preserve">
          <source>Force the mask to soft.</source>
          <target state="translated">マスクを強制的にソフトにします。</target>
        </trans-unit>
        <trans-unit id="46e07bf1dcba4f22fb0998d98afd707eecb583d3" translate="yes" xml:space="preserve">
          <source>Format Version 1.0</source>
          <target state="translated">フォーマットバージョン1.0</target>
        </trans-unit>
        <trans-unit id="9c5ba690bca66f9b43bf7dce492a8ecc14116342" translate="yes" xml:space="preserve">
          <source>Format Version 2.0</source>
          <target state="translated">フォーマットバージョン2.0</target>
        </trans-unit>
        <trans-unit id="6d476621018ad05f5efc66b66f9628e71614d77b" translate="yes" xml:space="preserve">
          <source>Format Version 3.0</source>
          <target state="translated">フォーマットバージョン3.0</target>
        </trans-unit>
        <trans-unit id="082aa72e2e80659bc0dafa9d8a6a53207113bd45" translate="yes" xml:space="preserve">
          <source>Format a floating-point scalar as a decimal string in positional notation.</source>
          <target state="translated">浮動小数点スカラを位置表記の10進文字列としてフォーマットします。</target>
        </trans-unit>
        <trans-unit id="63ec1825c81674406abf9c065439398606f8e9c4" translate="yes" xml:space="preserve">
          <source>Format a floating-point scalar as a decimal string in scientific notation.</source>
          <target state="translated">浮動小数点スカラを科学的表記法で10進数文字列としてフォーマットします。</target>
        </trans-unit>
        <trans-unit id="2ba865544cbf6ad122958e97b9cb7e6ee2fca0ce" translate="yes" xml:space="preserve">
          <source>Format string for text file output. Each entry in the array is formatted to text by first converting it to the closest Python type, and then using &amp;ldquo;format&amp;rdquo; % item.</source>
          <target state="translated">テキストファイル出力のフォーマット文字列。配列の各エントリは、最初に最も近いPythonタイプに変換し、次に「フォーマット」％アイテムを使用して、テキストにフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="a3b7bf2b2380c4418912a52f4b2af945c3ac0459" translate="yes" xml:space="preserve">
          <source>Formatting issues</source>
          <target state="translated">書式の問題</target>
        </trans-unit>
        <trans-unit id="e5a92b78c74fdad3772b95c0bef006808c6f5062" translate="yes" xml:space="preserve">
          <source>Fornberg B. (1988) Generation of Finite Difference Formulas on Arbitrarily Spaced Grids, Mathematics of Computation 51, no. 184 : 699-706. &lt;a href=&quot;http://www.ams.org/journals/mcom/1988-51-184/S0025-5718-1988-0935077-0/S0025-5718-1988-0935077-0.pdf&quot;&gt;PDF&lt;/a&gt;.</source>
          <target state="translated">Fornberg B.（1988）任意の間隔のグリッドでの有限差分式の生成、Mathematics of Computation 51、no。184：699-706。&lt;a href=&quot;http://www.ams.org/journals/mcom/1988-51-184/S0025-5718-1988-0935077-0/S0025-5718-1988-0935077-0.pdf&quot;&gt;PDF&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d1cc558102f286f771795f2da7cbcbf5ba1b6328" translate="yes" xml:space="preserve">
          <source>Fortran 90 module data</source>
          <target state="translated">Fortran 90 モジュールデータ</target>
        </trans-unit>
        <trans-unit id="b62f0c388a951d6d6803e4d2dc48f368bb1a5685" translate="yes" xml:space="preserve">
          <source>Fortran assumed shape array and size function support in &lt;code&gt;numpy.f2py&lt;/code&gt;</source>
          <target state="translated">Fortranは、 &lt;code&gt;numpy.f2py&lt;/code&gt; で形状配列とサイズ関数のサポートを想定しています</target>
        </trans-unit>
        <trans-unit id="b756e1ed184faeae9981dd9378f750e8c6c0e04f" translate="yes" xml:space="preserve">
          <source>Fortran files</source>
          <target state="translated">フォートランファイル</target>
        </trans-unit>
        <trans-unit id="443b7dd908046f637f8adbdcefe50ee302b6f087" translate="yes" xml:space="preserve">
          <source>Fortran order if all the inputs are Fortran, C otherwise.</source>
          <target state="translated">すべての入力がFortranの場合はFortranの順番、そうでない場合はCです。</target>
        </trans-unit>
        <trans-unit id="0dbb13a4208640c43e953aa1ecfe0492f9b453d1" translate="yes" xml:space="preserve">
          <source>Fortran order.</source>
          <target state="translated">フォートランの注文。</target>
        </trans-unit>
        <trans-unit id="458144d44956123a91798b5242d7c298d549eb1b" translate="yes" xml:space="preserve">
          <source>Fortran source of module / subroutine to compile</source>
          <target state="translated">コンパイルするモジュール/サブルーチンのFortranソース</target>
        </trans-unit>
        <trans-unit id="e6b7af163ec1d9df45d457b3365dd7a8bb154117" translate="yes" xml:space="preserve">
          <source>Fortran to Python Interface Generator.</source>
          <target state="translated">FortranからPythonへのインターフェースジェネレータ。</target>
        </trans-unit>
        <trans-unit id="c97ded998a0ca595e9b4695a113a861855f88705" translate="yes" xml:space="preserve">
          <source>Fortran-contiguous arrays when data is stored column-wise, i.e. indexing of data as stored in memory starts from the lowest dimension;</source>
          <target state="translated">データが列単位で格納されている場合,すなわち,メモリに格納されているデータのインデックス付けは最下位の次元から開始されます.</target>
        </trans-unit>
        <trans-unit id="3c103a2ce4fa5c4bdfbfca73532b43fd7c1242b6" translate="yes" xml:space="preserve">
          <source>Fortran-order</source>
          <target state="translated">Fortran-order</target>
        </trans-unit>
        <trans-unit id="01f074f9b2b7da2704c7bf16c64348fbe5aff689" translate="yes" xml:space="preserve">
          <source>Fortran/C routine signatures</source>
          <target state="translated">フォートラン/Cルーチン署名</target>
        </trans-unit>
        <trans-unit id="fa529d42774f0768730f12bc0880f9965a988000" translate="yes" xml:space="preserve">
          <source>Forward bytes from a subprocess call to the console, without attempting to decode them.</source>
          <target state="translated">サブプロセスコールからのバイトを、デコードを試みずにコンソールに転送します。</target>
        </trans-unit>
        <trans-unit id="ececb946a3ffd8fb7cf57101d577f7acf1341e58" translate="yes" xml:space="preserve">
          <source>Forward port changes in the release branch to release notes and release scripts, if any, to master branch.</source>
          <target state="translated">リリースブランチのポートの変更をリリースノートとリリーススクリプトに転送します。</target>
        </trans-unit>
        <trans-unit id="2982346b57dba0536f8cd38d08e71e22e03b5068" translate="yes" xml:space="preserve">
          <source>Four values of the output are invalid: the first one comes from taking the square root of a negative number, the second from the division by zero, and the last two where the inputs were masked.</source>
          <target state="translated">出力の4つの値が無効です:最初の1つは負の数の平方根、2つ目はゼロによる除算、そして最後の2つは入力がマスクされています。</target>
        </trans-unit>
        <trans-unit id="f163a620e6be53409bc7d6c8a56980a06cc8552e" translate="yes" xml:space="preserve">
          <source>Fourier analysis is fundamentally a method for expressing a function as a sum of periodic components, and for recovering the function from those components. When both the function and its Fourier transform are replaced with discretized counterparts, it is called the discrete Fourier transform (DFT). The DFT has become a mainstay of numerical computing in part because of a very fast algorithm for computing it, called the Fast Fourier Transform (FFT), which was known to Gauss (1805) and was brought to light in its current form by Cooley and Tukey &lt;a href=&quot;#rfb1dc64dd6a5-ct&quot; id=&quot;id1&quot;&gt;[CT]&lt;/a&gt;. Press et al. &lt;a href=&quot;#rfb1dc64dd6a5-nr&quot; id=&quot;id2&quot;&gt;[NR]&lt;/a&gt; provide an accessible introduction to Fourier analysis and its applications.</source>
          <target state="translated">基本的にフーリエ解析は、関数を周期的な成分の合計として表現し、それらの成分から関数を復元する方法です。関数とそのフーリエ変換の両方が離散化された対応物に置き換えられる場合、それは離散フーリエ変換（DFT）と呼ばれます。ガウス（1805）に知られており、クーリーによって現在の形で明らかにされた高速フーリエ変換（FFT）と呼ばれる非常に高速なアルゴリズムのため、DFTは数値計算の主力になりましたチューキー&lt;a href=&quot;#rfb1dc64dd6a5-ct&quot; id=&quot;id1&quot;&gt;[CT]&lt;/a&gt;。プレス他 &lt;a href=&quot;#rfb1dc64dd6a5-nr&quot; id=&quot;id2&quot;&gt;[NR]&lt;/a&gt;フーリエ解析とそのアプリケーションへのアクセス可能な紹介を提供します。</target>
        </trans-unit>
        <trans-unit id="69fe683adb41f9ba1a3873187fd6c76482148e01" translate="yes" xml:space="preserve">
          <source>Fourier transform of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">のフーリエ変換 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
