<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="54983c2355606799f94a75d132c8bd7837b4a39f" translate="yes" xml:space="preserve">
          <source>add_data_files() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_data_files()(numpy.distutils.misc_util.Configurationメソッド)</target>
        </trans-unit>
        <trans-unit id="d39e075ad580ed9430d688b578bea0106ca860d7" translate="yes" xml:space="preserve">
          <source>add_extension()</source>
          <target state="translated">add_extension()</target>
        </trans-unit>
        <trans-unit id="dde38d723d84e8e3008d215ec723d11491dccbe9" translate="yes" xml:space="preserve">
          <source>add_extension() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_extension()(numpy.distutils.misc_util.Configurationメソッド)</target>
        </trans-unit>
        <trans-unit id="5d009ac9f079e7fdced9a90ef1200c3fb1c35715" translate="yes" xml:space="preserve">
          <source>add_headers()</source>
          <target state="translated">add_headers()</target>
        </trans-unit>
        <trans-unit id="b10e3b759af510577d52946d19cc4092f37e972a" translate="yes" xml:space="preserve">
          <source>add_headers() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_headers()(numpy.distutils.misc_util.Configurationメソッド)</target>
        </trans-unit>
        <trans-unit id="a628a8da50197850cf2b27e98a076e5dfaec48a9" translate="yes" xml:space="preserve">
          <source>add_include_dirs()</source>
          <target state="translated">add_include_dirs()</target>
        </trans-unit>
        <trans-unit id="e1fea60228e7efb4aa9e7071f56a99192cf45d32" translate="yes" xml:space="preserve">
          <source>add_include_dirs() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_include_dirs()(numpy.distutils.misc_util.Configurationメソッド)</target>
        </trans-unit>
        <trans-unit id="679396cba67a48464bf811972c38f924aa64b48e" translate="yes" xml:space="preserve">
          <source>add_installed_library()</source>
          <target state="translated">add_installed_library()</target>
        </trans-unit>
        <trans-unit id="cf8b1440cbdf71111d93d1b381bae22cec11a668" translate="yes" xml:space="preserve">
          <source>add_installed_library() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_installed_library()(numpy.distutils.misc_util.Configurationメソッド)</target>
        </trans-unit>
        <trans-unit id="71d86799367064b55c54776185a9fa95324d5115" translate="yes" xml:space="preserve">
          <source>add_library()</source>
          <target state="translated">add_library()</target>
        </trans-unit>
        <trans-unit id="1dd094c9bc1ad3803b6eebf78f350bb9b430d9a3" translate="yes" xml:space="preserve">
          <source>add_library() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_library()(numpy.distutils.misc_util.Configurationメソッド)</target>
        </trans-unit>
        <trans-unit id="57577ee9b0c4153aed9b6032a828bc2bd94141bd" translate="yes" xml:space="preserve">
          <source>add_npy_pkg_config()</source>
          <target state="translated">add_npy_pkg_config()</target>
        </trans-unit>
        <trans-unit id="9e52abd2aa496b5f8ede990383d900949f91ad1b" translate="yes" xml:space="preserve">
          <source>add_npy_pkg_config() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_npy_pkg_config()(numpy.distutils.misc_util.Configurationメソッド)</target>
        </trans-unit>
        <trans-unit id="2afe23be8ed398ab8857f6343100631a790dc6cd" translate="yes" xml:space="preserve">
          <source>add_scripts()</source>
          <target state="translated">add_scripts()</target>
        </trans-unit>
        <trans-unit id="8de38016dc5eff53a8df791bdb2b47b172fbd747" translate="yes" xml:space="preserve">
          <source>add_scripts() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_scripts()(numpy.distutils.misc_util.Configurationメソッド)</target>
        </trans-unit>
        <trans-unit id="383afd61f3ac7b75fb75aad69f134fad0b8ca518" translate="yes" xml:space="preserve">
          <source>add_subpackage()</source>
          <target state="translated">add_subpackage()</target>
        </trans-unit>
        <trans-unit id="bddf4fd6b6da42a0cea8cd2ed9653ceadb48f804" translate="yes" xml:space="preserve">
          <source>add_subpackage() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">add_subpackage()(numpy.distutils.misc_util.Configurationメソッド)</target>
        </trans-unit>
        <trans-unit id="7454b77fff3e8b4898819b19a46726101e6e746d" translate="yes" xml:space="preserve">
          <source>adding new</source>
          <target state="translated">加筆</target>
        </trans-unit>
        <trans-unit id="8b76301eeafa074e9b1580b8e1e94a2f768508db" translate="yes" xml:space="preserve">
          <source>advance() (numpy.random.PCG64 method)</source>
          <target state="translated">advance()(numpy.random.PCG64メソッド)</target>
        </trans-unit>
        <trans-unit id="bbe8d341332442be367ae7496195539f9a25ca06" translate="yes" xml:space="preserve">
          <source>after which you may use it:</source>
          <target state="translated">その後、それを使用することができます。</target>
        </trans-unit>
        <trans-unit id="8751d9764b9e420b466b6d3a1af017a0677f6373" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;numpy.bool_&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.bool_&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="99307e4954f163e794234187dca9613b68cf3950" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;numpy.ma.core.MaskedArray&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.ma.core.MaskedArray&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="827cd73e1f786ecc41180e5c9b752f33e09cfa0d" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;numpy.testing._private.nosetester.NoseTester&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.testing._private.nosetester.NoseTester&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="3bea4606b8381d936b8f862d721bc4422652b565" translate="yes" xml:space="preserve">
          <source>aligned</source>
          <target state="translated">aligned</target>
        </trans-unit>
        <trans-unit id="3862a1e1a444131dc1d5dd4fac19fb7dd924b914" translate="yes" xml:space="preserve">
          <source>alignment (numpy.dtype attribute)</source>
          <target state="translated">アラインメント (numpy.dtype属性)</target>
        </trans-unit>
        <trans-unit id="b5ed48a7e558cd86b3060b17f07ecd93ad208a0f" translate="yes" xml:space="preserve">
          <source>all (in module numpy.ma)</source>
          <target state="translated">すべて</target>
        </trans-unit>
        <trans-unit id="c9b67f192627e781bd65254e3f01d7c7d1f7593a" translate="yes" xml:space="preserve">
          <source>all : apply to all numeric exceptions</source>
          <target state="translated">all:すべての数値的な例外に適用されます。</target>
        </trans-unit>
        <trans-unit id="02b51f76b609588ff1bb008fcb09d85646814f4d" translate="yes" xml:space="preserve">
          <source>all values are clipped to the region [0, len(&lt;em&gt;op&lt;/em&gt;) ).</source>
          <target state="translated">すべての値は領域にクリップされます[0、len（&lt;em&gt;op&lt;/em&gt;））。</target>
        </trans-unit>
        <trans-unit id="9bf6441dd2f3e3a2f7a6a3cf364373a79e83ef34" translate="yes" xml:space="preserve">
          <source>all() (in module numpy)</source>
          <target state="translated">all()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="78ae7e89726d260069e17c5543b7ab56ab82dda8" translate="yes" xml:space="preserve">
          <source>all_strings() (in module numpy.distutils.misc_util)</source>
          <target state="translated">all_strings()(モジュール numpy.distutils.misc_util 内)</target>
        </trans-unit>
        <trans-unit id="b1adf53e63e2551b2fe1d5c3bd56fac7b8c8730b" translate="yes" xml:space="preserve">
          <source>allclose() (in module numpy)</source>
          <target state="translated">allclose()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="84066c3f504c34c817692265860f350cd03a1d8b" translate="yes" xml:space="preserve">
          <source>allequal() (in module numpy.ma)</source>
          <target state="translated">allequal()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="5f68636b4d8e2360cff9361a21f9fe7b974479dc" translate="yes" xml:space="preserve">
          <source>allows re-use of C code</source>
          <target state="translated">C コードの再利用を可能にします。</target>
        </trans-unit>
        <trans-unit id="938b4736ea611c1db1be66c9936c1fef25cd367a" translate="yes" xml:space="preserve">
          <source>allpath() (in module numpy.distutils.misc_util)</source>
          <target state="translated">allpath()(モジュール numpy.distutils.misc_util 内)</target>
        </trans-unit>
        <trans-unit id="e081f07cc9e5db663fff9d5cac2d3850671bcc16" translate="yes" xml:space="preserve">
          <source>along the selected axis. This basic operations is repeated for arrays with greater than 1 dimension so that the reduction takes place for every 1-D sub-array along the selected axis. An iterator with the selected dimension removed handles this looping.</source>
          <target state="translated">を選択します.この基本的な操作は,選択された軸に沿った1次元の部分配列ごとに削減が行われるように,1次元よりも大きい配列に対して繰り返されます.選択された次元が削除されたイテレータは,このループを処理します.</target>
        </trans-unit>
        <trans-unit id="b4d47e529aae629550b0ce38a7631c8820773d8e" translate="yes" xml:space="preserve">
          <source>alterdot, restoredot</source>
          <target state="translated">alterdot,restoreddot</target>
        </trans-unit>
        <trans-unit id="e181e2672f11aab90682d40ae1f74cb4a59a352d" translate="yes" xml:space="preserve">
          <source>alternative matrix product with different broadcasting rules.</source>
          <target state="translated">放送ルールが異なる代替マトリックス製品</target>
        </trans-unit>
        <trans-unit id="659b3d51475f52846b34250fc2f3104f88ea05ef" translate="yes" xml:space="preserve">
          <source>amax() (in module numpy)</source>
          <target state="translated">amax()</target>
        </trans-unit>
        <trans-unit id="f5ed48d60059206c34f373bde7a33e400bca7cfa" translate="yes" xml:space="preserve">
          <source>amin() (in module numpy)</source>
          <target state="translated">amin()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="d5c33156b55ff5d884c15ca93f63965475efbc0f" translate="yes" xml:space="preserve">
          <source>an element can be uniquely represented with fewer digits only print it with that many.</source>
          <target state="translated">要素をより少ない桁数で一意に表現できる場合は、その桁数でのみ印刷します。</target>
        </trans-unit>
        <trans-unit id="d97116fb611676c553cafd7e91d3cb6d9d944f76" translate="yes" xml:space="preserve">
          <source>an existing &lt;a href=&quot;../reference/generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;numpy.dtype&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">既存の&lt;a href=&quot;../reference/generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;numpy.dtype&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="df029fe8a63af7d14ac608ed97dde63b030d2caf" translate="yes" xml:space="preserve">
          <source>an explanation of why it is being invoked, and</source>
          <target state="translated">呼び出される理由の説明と</target>
        </trans-unit>
        <trans-unit id="823a758cbccc512d56ec862367d06a05b288cc90" translate="yes" xml:space="preserve">
          <source>an integer &lt;code&gt;has_gauss&lt;/code&gt;.</source>
          <target state="translated">整数 &lt;code&gt;has_gauss&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1a89b6dbc62e2ecbe0ebcd0a5d73de4e21d1c4f" translate="yes" xml:space="preserve">
          <source>an integer &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">整数 &lt;code&gt;pos&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15910dec81f9c9a98e1ebad416875d0df4e025aa" translate="yes" xml:space="preserve">
          <source>an interest &lt;a href=&quot;numpy.rate#numpy.rate&quot;&gt;&lt;code&gt;rate&lt;/code&gt;&lt;/a&gt; compounded once per period, of which there are</source>
          <target state="translated">期間ごとに1回複利&lt;a href=&quot;numpy.rate#numpy.rate&quot;&gt; &lt;code&gt;rate&lt;/code&gt; &lt;/a&gt;れる金利</target>
        </trans-unit>
        <trans-unit id="2289bbf94306c82e816811105ebeeca253ecaa1e" translate="yes" xml:space="preserve">
          <source>an ndarray of type &lt;code&gt;str&lt;/code&gt; or &amp;lsquo;unicode`</source>
          <target state="translated">タイプ &lt;code&gt;str&lt;/code&gt; または 'unicode`のndarray</target>
        </trans-unit>
        <trans-unit id="826247ffac909fe163f4e2b88062934b2cab458d" translate="yes" xml:space="preserve">
          <source>an ndarray of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;</source>
          <target state="translated">タイプ &lt;code&gt;str&lt;/code&gt; または &lt;code&gt;unicode&lt;/code&gt; の ndarray</target>
        </trans-unit>
        <trans-unit id="2d3dc9fdbbadc069727c60e0c3aa3672342be1bd" translate="yes" xml:space="preserve">
          <source>an object describing the type of the elements in the array. One can create or specify dtype&amp;rsquo;s using standard Python types. Additionally NumPy provides types of its own. numpy.int32, numpy.int16, and numpy.float64 are some examples.</source>
          <target state="translated">配列内の要素のタイプを説明するオブジェクト。標準のPythonタイプを使用してdtypeを作成または指定できます。さらに、NumPyは独自のタイプを提供します。numpy.int32、numpy.int16、およびnumpy.float64はいくつかの例です。</target>
        </trans-unit>
        <trans-unit id="9b7561f4ff2158dc85941da44931edc4ad2c3036" translate="yes" xml:space="preserve">
          <source>an unambiguous statement that a veto is being invoked,</source>
          <target state="translated">拒否権が発動されていることを明確に表明しています。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="b4f65b085945d03c1edb6b232a29375d1161de81" translate="yes" xml:space="preserve">
          <source>and (optional) specification of whether payment is made at the beginning (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;begin&amp;rsquo;, 1}) or the end (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;end&amp;rsquo;, 0}) of each period</source>
          <target state="translated">（オプション）支払いが各期間の最初（ &lt;code&gt;when&lt;/code&gt; = {'begin'、1}）で行われるか、最後（ &lt;code&gt;when&lt;/code&gt; = {'end'、0}）で行われるかを指定</target>
        </trans-unit>
        <trans-unit id="5833b1f15104570d293482956b4e5fd815e1db0d" translate="yes" xml:space="preserve">
          <source>and :</source>
          <target state="translated">と</target>
        </trans-unit>
        <trans-unit id="3355548b53e5236290084dc7edd162d02b6ca923" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;6ad92e5&lt;/code&gt; is the last commit in the &lt;code&gt;master&lt;/code&gt; branch. Suppose we want to make the following changes:</source>
          <target state="translated">そして &lt;code&gt;6ad92e5&lt;/code&gt; は最後のでコミットされ &lt;code&gt;master&lt;/code&gt; ブランチ。次の変更を加えたいとします。</target>
        </trans-unit>
        <trans-unit id="797c67830de97564fba53da317ed1e492268c79b" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;chebval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Chebyshev series of the same degrees and sample points.</source>
          <target state="translated">そして &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 及び &lt;code&gt;chebval2d(x, y, c)&lt;/code&gt; 丸めに同じ最大であろう。この同等性は、最小二乗フィッティングと、同じ次数とサンプルポイントの多数の2次元チェビシェフシリーズの評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="da14b6b88d2fad669bca837faa7ed9c787dac966" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;chebval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Chebyshev series of the same degrees and sample points.</source>
          <target state="translated">および &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 及び &lt;code&gt;chebval3d(x, y, z, c)&lt;/code&gt; 丸めに同じ最大であろう。この同等性は、最小二乗フィッティングと、同じ次数およびサンプルポイントの多数の3次元チェビシェフシリーズの評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="b716423ee6b9dd4aa2dd31986d3fc4926ba22b66" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermeval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D HermiteE series of the same degrees and sample points.</source>
          <target state="translated">および &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; および &lt;code&gt;hermeval2d(x, y, c)&lt;/code&gt; は、丸めまで同じになります。この同等性は、最小二乗フィッティングと、同じ次数およびサンプルポイントの多数の2次元HermiteEシリーズの評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="0bb7be95d49eb169e5fef85fb85e12dd1e27bfcb" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermeval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D HermiteE series of the same degrees and sample points.</source>
          <target state="translated">および &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; および &lt;code&gt;hermeval3d(x, y, z, c)&lt;/code&gt; 丸めに同じ最大であろう。この同等性は、最小二乗フィッティングと、同じ次数およびサンプルポイントの多数の3-D HermiteEシリーズの評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="fad303d6d70cbfff9a7cadca76594a240d4779ba" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Hermite series of the same degrees and sample points.</source>
          <target state="translated">および &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; および &lt;code&gt;hermval2d(x, y, c)&lt;/code&gt; 丸めに同じ最大であろう。この同等性は、最小二乗フィッティングと、同じ次数とサンプルポイントの多数の2次元エルミートシリーズの評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="69130e5b9bd31179248eb5d2f9a0cc5ecfe9349f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Hermite series of the same degrees and sample points.</source>
          <target state="translated">および &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; および &lt;code&gt;hermval3d(x, y, z, c)&lt;/code&gt; は、丸めまで同じになります。この同等性は、最小二乗フィッティングと、同じ次数と標本点の多数の3次元エルミート系列の評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="9b94de589bf13a5bc17957bebab8021561c8051b" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;lagval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Laguerre series of the same degrees and sample points.</source>
          <target state="translated">そして &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 及び &lt;code&gt;lagval2d(x, y, c)&lt;/code&gt; 丸めに同じ最大であろう。この同等性は、最小二乗フィッティングと、同じ次数およびサンプルポイントの多数の2次元ラゲール級数の評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="887de847ecb98d0a4ffe26b974e5d6faac855e03" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;lagval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Laguerre series of the same degrees and sample points.</source>
          <target state="translated">そして &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 及び &lt;code&gt;lagval3d(x, y, z, c)&lt;/code&gt; 丸めに同じ最大であろう。この同等性は、最小二乗フィッティングと、同じ次数とサンプルポイントの多数の3次元ラゲール系列の評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="77be8fffad26eba68998db6b5b7dc00aa86c4875" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;legval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Legendre series of the same degrees and sample points.</source>
          <target state="translated">そして &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 及び &lt;code&gt;legval2d(x, y, c)&lt;/code&gt; 丸めに同じ最大であろう。この同等性は、最小二乗フィッティングと、同じ次数と標本点の多数の2次元ルジャンドル系列の評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="1fe9099e7bf711386734009f432d373ed86b575a" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;legval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Legendre series of the same degrees and sample points.</source>
          <target state="translated">そして &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 及び &lt;code&gt;legval3d(x, y, z, c)&lt;/code&gt; 丸めに同じ最大であろう。この同等性は、最小二乗フィッティングと、同じ次数とサンプルポイントの多数の3次元ルジャンドル系列の評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="8b1fd063b78f7302ac115ff2db5fed9d22cf0052" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;polyval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D polynomials of the same degrees and sample points.</source>
          <target state="translated">そして &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 及び &lt;code&gt;polyval2d(x, y, c)&lt;/code&gt; 丸めに同じ最大であろう。この同等性は、最小二乗フィッティングと、同じ次数とサンプルポイントの多数の2次元多項式の評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="c5af8d835e165267cf6cfd34fea99066b079ba1c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;polyval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D polynomials of the same degrees and sample points.</source>
          <target state="translated">そして &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; 及び &lt;code&gt;polyval3d(x, y, z, c)&lt;/code&gt; 丸めに同じ最大であろう。この同等性は、最小二乗フィッティングと、同じ次数およびサンプルポイントの多数の3次元多項式の評価の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="382d318bf063c46cf188d091802ccd3ceed61a68" translate="yes" xml:space="preserve">
          <source>and &lt;em&gt;q&lt;/em&gt; and &lt;em&gt;r&lt;/em&gt; are the quotient and remainder obtained by dividing &lt;em&gt;j - i&lt;/em&gt; by &lt;em&gt;k&lt;/em&gt;: &lt;em&gt;j - i = q k + r&lt;/em&gt;, so that &lt;em&gt;i + (m - 1) k &amp;lt; j&lt;/em&gt;.</source>
          <target state="translated">および&lt;em&gt;Q&lt;/em&gt;と&lt;em&gt;Rは&lt;/em&gt;割った商と剰余である&lt;em&gt;IをJ -を&lt;/em&gt;することにより&lt;em&gt;K&lt;/em&gt;：&lt;em&gt;J - I = QK + rは&lt;/em&gt;、その結果、&lt;em&gt;I +（M - 1）K &amp;lt;J &lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="069f04b72eac94b2bd204e4194a270895c7bad4f" translate="yes" xml:space="preserve">
          <source>and C-contiguous if the order is as follows:</source>
          <target state="translated">とC-連続している場合は、次のようになります。</target>
        </trans-unit>
        <trans-unit id="22dee2ded64b247edd9bb6cbefb4906380e62c94" translate="yes" xml:space="preserve">
          <source>and Weibull distributions are generalizations of the Rayleigh.</source>
          <target state="translated">とワイブル分布はレイリー分布の一般化です。</target>
        </trans-unit>
        <trans-unit id="b7b7fa8b50a0f68e7ae7fb7f5f808bd52fd91e87" translate="yes" xml:space="preserve">
          <source>and a variance of</source>
          <target state="translated">の分散と</target>
        </trans-unit>
        <trans-unit id="9530d5599dbc0288dc61c31e3923f2f568c88c91" translate="yes" xml:space="preserve">
          <source>and build a wrapper using &lt;code&gt;f2py -c ftype.f -m ftype&lt;/code&gt;.</source>
          <target state="translated">そして、 &lt;code&gt;f2py -c ftype.f -m ftype&lt;/code&gt; を使用してラッパーを構築します。</target>
        </trans-unit>
        <trans-unit id="eba91851b59fbd345fa178868b5887e29f7f53ae" translate="yes" xml:space="preserve">
          <source>and has coefficients</source>
          <target state="translated">と係数を持っています。</target>
        </trans-unit>
        <trans-unit id="fbc9b2575f7bdeb4f2787fbcb14ff87e5fbb029e" translate="yes" xml:space="preserve">
          <source>and is defined up to &lt;code&gt;m - 1&lt;/code&gt; integration constants &lt;code&gt;k&lt;/code&gt;. The constants determine the low-order polynomial part</source>
          <target state="translated">また、最大 &lt;code&gt;m - 1&lt;/code&gt; 積分定数 &lt;code&gt;k&lt;/code&gt; まで定義されます。定数は低次多項式部分を決定します</target>
        </trans-unit>
        <trans-unit id="b4683fb165059225c66d63bb15b9988a1ac779b7" translate="yes" xml:space="preserve">
          <source>and more generally</source>
          <target state="translated">より一般的には</target>
        </trans-unit>
        <trans-unit id="c9de3a2d16580ffabe130528b2dc32d830e4b557" translate="yes" xml:space="preserve">
          <source>and on Windows:</source>
          <target state="translated">とWindowsの場合。</target>
        </trans-unit>
        <trans-unit id="664546cd37a839e1b840acdc8c4f50e6856fb9a0" translate="yes" xml:space="preserve">
          <source>and substituting</source>
          <target state="translated">を代入して</target>
        </trans-unit>
        <trans-unit id="ac6e187cb772692898db3e1fc4d23ad7cc69833d" translate="yes" xml:space="preserve">
          <source>and supports advancing an arbitrary number of steps as well as</source>
          <target state="translated">と同様に任意のステップ数を進めることをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ced0174f90d515de4d6888cde32613f58e4b7761" translate="yes" xml:space="preserve">
          <source>and supports arbitrary advancing and jumping the sequence in increments of</source>
          <target state="translated">のインクリメントでシーケンスを任意に進めたりジャンプしたりすることをサポートしています。</target>
        </trans-unit>
        <trans-unit id="e04253ffbb0d8d03e5791d061b4cb87bb54996d2" translate="yes" xml:space="preserve">
          <source>and that distinct seeds will not run into each other for at least</source>
          <target state="translated">互いに異なる種がぶつからないようにするためには、少なくとも</target>
        </trans-unit>
        <trans-unit id="a6874ad5db55244006ef6ac097dd2fe8ac21f02c" translate="yes" xml:space="preserve">
          <source>and the Standard Cauchy distribution just sets</source>
          <target state="translated">を設定し、標準コーシー分布は</target>
        </trans-unit>
        <trans-unit id="f4cae9d3c50690186c19a112f66b187f09b75655" translate="yes" xml:space="preserve">
          <source>and the argument you are passing is an integer extracted from a NumPy array, then you have stumbled upon this problem. The solution is to modify the &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; type conversion system to accept NumPy array scalars in addition to the standard integer types. Fortunately, this capability has been provided for you. Simply copy the file:</source>
          <target state="translated">渡した引数がNumPy配列から抽出された整数である場合、この問題に遭遇しました。解決策は、標準の整数型に加えてNumPy配列スカラーを受け入れるように&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;型変換システムを変更することです。幸い、この機能は提供されています。ファイルをコピーするだけです。</target>
        </trans-unit>
        <trans-unit id="33581168ac25635a1502a03f9acdea3d138f136f" translate="yes" xml:space="preserve">
          <source>and the columns of &lt;code&gt;u&lt;/code&gt; are the eigenvectors of</source>
          <target state="translated">&lt;code&gt;u&lt;/code&gt; の列はの固有ベクトルです</target>
        </trans-unit>
        <trans-unit id="826febfce772db61c3d04fd7bce80d4dc77a9db2" translate="yes" xml:space="preserve">
          <source>and the corresponding &amp;lt;C type&amp;gt;. &amp;lt;C type&amp;gt; can be one of the following:</source>
          <target state="translated">および対応する&amp;lt;Cタイプ&amp;gt;。&amp;lt;Cタイプ&amp;gt;は次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="7b93a06443dca8775a4bd856d451ba43367d3470" translate="yes" xml:space="preserve">
          <source>and the following code in setup.py:</source>
          <target state="translated">と、setup.pyに以下のコードを記述します。</target>
        </trans-unit>
        <trans-unit id="1f64f494e4179c271afa9e034175c67d6773596b" translate="yes" xml:space="preserve">
          <source>and the history looks now like this:</source>
          <target state="translated">そして、歴史は今こうなっています。</target>
        </trans-unit>
        <trans-unit id="74b8f2299cbba682a4b579a73f467a4ec1857066" translate="yes" xml:space="preserve">
          <source>and the interval of integration is</source>
          <target state="translated">であり、積分の間隔は</target>
        </trans-unit>
        <trans-unit id="92fe9067409398d8dd3631850b053951d71f69ef" translate="yes" xml:space="preserve">
          <source>and the value of</source>
          <target state="translated">の値と</target>
        </trans-unit>
        <trans-unit id="ed0e732aab882afaf6a1228703532b501012189b" translate="yes" xml:space="preserve">
          <source>and then for</source>
          <target state="translated">而して</target>
        </trans-unit>
        <trans-unit id="4058d81c951f3b990aaed88021725e23952b71b0" translate="yes" xml:space="preserve">
          <source>and then use it as:</source>
          <target state="translated">として使用します。</target>
        </trans-unit>
        <trans-unit id="2b5b8e8768392651dd13b01808c68fe276b01006" translate="yes" xml:space="preserve">
          <source>and thus</source>
          <target state="translated">而して</target>
        </trans-unit>
        <trans-unit id="12c4523bbdf66e159a75d6197c389881a96a68bb" translate="yes" xml:space="preserve">
          <source>and will be installed as foo.ini in the &amp;lsquo;lib&amp;rsquo; subpath.</source>
          <target state="translated">「lib」サブパスにfoo.iniとしてインストールされます。</target>
        </trans-unit>
        <trans-unit id="add68b20cac45386824d8e6ae72ca7d86f8dc328" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m allocarr allocarr.f90&lt;/code&gt;.</source>
          <target state="translated">そして、 &lt;code&gt;f2py -c -m allocarr allocarr.f90&lt;/code&gt; を使用してラップします。</target>
        </trans-unit>
        <trans-unit id="d613819ef6701fd8472d12f723beca1637fbdab3" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m arr array.f -DF2PY_REPORT_ON_ARRAY_COPY=1&lt;/code&gt;.</source>
          <target state="translated">そして、 &lt;code&gt;f2py -c -m arr array.f -DF2PY_REPORT_ON_ARRAY_COPY=1&lt;/code&gt; を使用してラップします。</target>
        </trans-unit>
        <trans-unit id="8b31b74a575d011e885d6c6f5649864b27cd3411" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m callback callback.f&lt;/code&gt;.</source>
          <target state="translated">そして、 &lt;code&gt;f2py -c -m callback callback.f&lt;/code&gt; を使用してラップします。</target>
        </trans-unit>
        <trans-unit id="8175ea198b4950d05adf3518df479055f274bf1e" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m common common.f&lt;/code&gt;.</source>
          <target state="translated">そして、 &lt;code&gt;f2py -c -m common common.f&lt;/code&gt; を使用してラップします。</target>
        </trans-unit>
        <trans-unit id="056e539dfee2ba52a90898acd17522879537de25" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m moddata moddata.f90&lt;/code&gt;.</source>
          <target state="translated">そして、 &lt;code&gt;f2py -c -m moddata moddata.f90&lt;/code&gt; を使用してラップします。</target>
        </trans-unit>
        <trans-unit id="3b4db0560dc46f2d4e13ea3950db7709d0979924" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m mystring string.f&lt;/code&gt;.</source>
          <target state="translated">そして、 &lt;code&gt;f2py -c -m mystring string.f&lt;/code&gt; を使用してラップします。</target>
        </trans-unit>
        <trans-unit id="d711ecaa7b4b21a198ff2452b13bd23403090a3e" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m pfromf extcallback.f&lt;/code&gt;.</source>
          <target state="translated">そして、 &lt;code&gt;f2py -c -m pfromf extcallback.f&lt;/code&gt; を使用してラップします。</target>
        </trans-unit>
        <trans-unit id="87fb3f7a8c15af228c2038ec8d15e16b4d160aca" translate="yes" xml:space="preserve">
          <source>and wrap it using &lt;code&gt;f2py -c -m scalar scalar.f&lt;/code&gt;.</source>
          <target state="translated">そして、 &lt;code&gt;f2py -c -m scalar scalar.f&lt;/code&gt; を使用してラップします。</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="0d6d4ce9bc2f72691f31cbdb3ce274f9ba1a9150" translate="yes" xml:space="preserve">
          <source>angle() (in module numpy)</source>
          <target state="translated">angle()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="ca7d48e766fde308dee941d4825e21d2d3c29c38" translate="yes" xml:space="preserve">
          <source>anom (in module numpy.ma)</source>
          <target state="translated">アノム</target>
        </trans-unit>
        <trans-unit id="5e9d521a1c9ef6cef065869ca14d24a3af467a2f" translate="yes" xml:space="preserve">
          <source>anom() (numpy.ma.masked_array method)</source>
          <target state="translated">anom()(numpy.ma.masked_arrayメソッド)</target>
        </trans-unit>
        <trans-unit id="689fd17fb0834021d27b7647afa47b83d92cf3fa" translate="yes" xml:space="preserve">
          <source>anomalies (in module numpy.ma)</source>
          <target state="translated">異常値</target>
        </trans-unit>
        <trans-unit id="96d042e9d2f79f5c362205887d2fd10e774d8553" translate="yes" xml:space="preserve">
          <source>any (in module numpy.ma)</source>
          <target state="translated">任意</target>
        </trans-unit>
        <trans-unit id="c81302cd0823545f8a863a80235cc693225c079a" translate="yes" xml:space="preserve">
          <source>any Python object</source>
          <target state="translated">任意のPythonオブジェクト</target>
        </trans-unit>
        <trans-unit id="26afd6718c385ce176984aeb1fc97c7714924710" translate="yes" xml:space="preserve">
          <source>any() (in module numpy)</source>
          <target state="translated">any()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="ec28c258907898600c82ebfbed34c70f2e49b318" translate="yes" xml:space="preserve">
          <source>anywhere within the interval &lt;code&gt;[a, b)&lt;/code&gt;, and zero elsewhere.</source>
          <target state="translated">区間 &lt;code&gt;[a, b)&lt;/code&gt; 内の任意の場所、および他の場所ではゼロ。</target>
        </trans-unit>
        <trans-unit id="b057a07d6f9cb2c976e820af61ab073b58eb78b5" translate="yes" xml:space="preserve">
          <source>append() (in module numpy)</source>
          <target state="translated">append()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="ad4d679cdc46e39df57fde68edb8cb8ce07b670f" translate="yes" xml:space="preserve">
          <source>append_fields() (in module numpy.lib.recfunctions)</source>
          <target state="translated">append_fields()(モジュール numpy.lib.recfunctions 内)</target>
        </trans-unit>
        <trans-unit id="0e1ce1c2f5a814275c9aa5e7af9c1be96050144d" translate="yes" xml:space="preserve">
          <source>appendpath() (in module numpy.distutils.misc_util)</source>
          <target state="translated">appendpath()(モジュール numpy.distutils.misc_util 内)</target>
        </trans-unit>
        <trans-unit id="b7fb694a67af1bbae7f4e4abd3db29295f6e4799" translate="yes" xml:space="preserve">
          <source>apply_along_axis() (in module numpy)</source>
          <target state="translated">apply_along_axis()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="90a420b32c76315e8d1c13735a93f3137d75ccd5" translate="yes" xml:space="preserve">
          <source>apply_along_fields() (in module numpy.lib.recfunctions)</source>
          <target state="translated">apply_along_fields()(モジュール numpy.lib.recfunctions 内)</target>
        </trans-unit>
        <trans-unit id="013c94f27096b659ce2c4df05185ad4386b3f1f6" translate="yes" xml:space="preserve">
          <source>apply_over_axes() (in module numpy)</source>
          <target state="translated">apply_over_axes()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="996ea1c904eacebe1ba18322b8e828e66b6f7252" translate="yes" xml:space="preserve">
          <source>arange (in module numpy.ma)</source>
          <target state="translated">アレンジ</target>
        </trans-unit>
        <trans-unit id="b56e8caeef40ca1f548aef4b21b77b75e6c6fa11" translate="yes" xml:space="preserve">
          <source>arange() (in module numpy)</source>
          <target state="translated">arange()</target>
        </trans-unit>
        <trans-unit id="707f2892001cf39b5f36ca9e23524ceff3128831" translate="yes" xml:space="preserve">
          <source>arange() will create arrays with regularly incrementing values. Check the docstring for complete information on the various ways it can be used. A few examples will be given here:</source>
          <target state="translated">arange()は、定期的に値をインクリメントする配列を作成します。docstringをチェックして、さまざまな使い方についての完全な情報を得ることができます。ここではいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="2cd7164e7f9989f74b41706261521709e04d093a" translate="yes" xml:space="preserve">
          <source>arccos (in module numpy)</source>
          <target state="translated">arccos</target>
        </trans-unit>
        <trans-unit id="c8af548c39777ec8ce893029c1668167ed049fe4" translate="yes" xml:space="preserve">
          <source>arccosh (in module numpy)</source>
          <target state="translated">arccosh</target>
        </trans-unit>
        <trans-unit id="a87fcaba4776688561773c2988046382ce315f29" translate="yes" xml:space="preserve">
          <source>arch type true-aln uint-aln &amp;mdash;- &amp;mdash;- &amp;mdash;&amp;mdash;&amp;ndash; &amp;mdash;&amp;mdash;&amp;ndash; x86_64 complex64 4 8 x86_64 float128 16 8 x86 float96 4 -</source>
          <target state="translated">アーチ型true-aln uint-aln--&amp;mdash;&amp;mdash;&amp;ndash; &amp;mdash;&amp;mdash;&amp;ndash; x86_64 complex64 4 8 x86_64 float128 16 8 x86 float96 4-</target>
        </trans-unit>
        <trans-unit id="71022aab6e9286094303b92f205fe172e74edc8b" translate="yes" xml:space="preserve">
          <source>arcsin (in module numpy)</source>
          <target state="translated">アークシン</target>
        </trans-unit>
        <trans-unit id="68231d1de5a739f81f3e7b0004057e5e69f6b1b9" translate="yes" xml:space="preserve">
          <source>arcsinh (in module numpy)</source>
          <target state="translated">arcsinh</target>
        </trans-unit>
        <trans-unit id="a07ac714f84bd3714487862b9cf3f152ffad2866" translate="yes" xml:space="preserve">
          <source>arctan (in module numpy)</source>
          <target state="translated">arctan</target>
        </trans-unit>
        <trans-unit id="21d1adfdd08c986fedce05650822c80484a61107" translate="yes" xml:space="preserve">
          <source>arctan2 (in module numpy)</source>
          <target state="translated">arctan2</target>
        </trans-unit>
        <trans-unit id="27a90cb24fd2520aa83565ec94301eb886b72ccf" translate="yes" xml:space="preserve">
          <source>arctanh (in module numpy)</source>
          <target state="translated">arctanh</target>
        </trans-unit>
        <trans-unit id="c92198fa1543dbbf7d31d9921b2124ab33cf337a" translate="yes" xml:space="preserve">
          <source>are integers which specify the &lt;a href=&quot;generated/numpy.ndarray.strides#numpy.ndarray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; of the array. The &lt;a href=&quot;../glossary#term-column-major&quot;&gt;column-major&lt;/a&gt; order (used, for example, in the Fortran language and in &lt;em&gt;Matlab&lt;/em&gt;) and &lt;a href=&quot;../glossary#term-row-major&quot;&gt;row-major&lt;/a&gt; order (used in C) schemes are just specific kinds of strided scheme, and correspond to memory that can be &lt;em&gt;addressed&lt;/em&gt; by the strides:</source>
          <target state="translated">配列の&lt;a href=&quot;generated/numpy.ndarray.strides#numpy.ndarray.strides&quot;&gt; &lt;code&gt;strides&lt;/code&gt; &lt;/a&gt;を指定する整数です。&lt;a href=&quot;../glossary#term-column-major&quot;&gt;列優先&lt;/a&gt;順位（Fortranの言語であり、例えば、使用&lt;em&gt;のMatlab&lt;/em&gt;）と&lt;a href=&quot;../glossary#term-row-major&quot;&gt;行優先&lt;/a&gt;スキーム（Cで使用される）順序ができるメモリにストライド方式、及び対応のちょうど特定の種類である&lt;em&gt;アドレス指定&lt;/em&gt;ストライドによって。</target>
        </trans-unit>
        <trans-unit id="3adb0d1ab1039cafb57396c156866d8e70606717" translate="yes" xml:space="preserve">
          <source>are integers which specify the &lt;a href=&quot;generated/numpy.ndarray.strides#numpy.ndarray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; of the array. The &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-column-major&quot;&gt;column-major&lt;/a&gt; order (used, for example, in the Fortran language and in &lt;em&gt;Matlab&lt;/em&gt;) and &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;row-major&lt;/a&gt; order (used in C) schemes are just specific kinds of strided scheme, and correspond to memory that can be &lt;em&gt;addressed&lt;/em&gt; by the strides:</source>
          <target state="translated">配列の&lt;a href=&quot;generated/numpy.ndarray.strides#numpy.ndarray.strides&quot;&gt; &lt;code&gt;strides&lt;/code&gt; &lt;/a&gt;を指定する整数です。&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-column-major&quot;&gt;列優先&lt;/a&gt;順位（Fortranの言語であり、例えば、使用&lt;em&gt;のMatlab&lt;/em&gt;）と&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;行優先&lt;/a&gt;スキーム（Cで使用される）順序ができるメモリにストライド方式、及び対応のちょうど特定の種類である&lt;em&gt;アドレス指定&lt;/em&gt;ストライドによって。</target>
        </trans-unit>
        <trans-unit id="1d263c54f38b65b019759a7add5f9ed7acd93456" translate="yes" xml:space="preserve">
          <source>are negative. The numerous properties of the sine and related functions are included in any standard trigonometry text.</source>
          <target state="translated">は負の値です。サインと関連関数の多くの性質は、標準的な三角法のテキストに含まれています。</target>
        </trans-unit>
        <trans-unit id="92381ae5f44b48309b90fa949376d9d4d941a336" translate="yes" xml:space="preserve">
          <source>are orthogonal matrices,</source>
          <target state="translated">は直交行列である。</target>
        </trans-unit>
        <trans-unit id="0ac5b00203e7ae1222da14608fc5c4c7216e77c9" translate="yes" xml:space="preserve">
          <source>are square and</source>
          <target state="translated">は四角い</target>
        </trans-unit>
        <trans-unit id="669792700179361c9d8fe73151e2b79db8b5caec" translate="yes" xml:space="preserve">
          <source>are the Chebyshev functions of degree</source>
          <target state="translated">は次数のチェビシェフ関数</target>
        </trans-unit>
        <trans-unit id="129e19c3744be92c900ed8885f8191610c8c8ce9" translate="yes" xml:space="preserve">
          <source>are the red, green and blue channel arrays we had originally. Notice we can use the &lt;code&gt;@&lt;/code&gt; operator (the matrix multiplication operator for NumPy arrays, see &lt;a href=&quot;../reference/generated/numpy.matmul#numpy.matmul&quot;&gt;&lt;code&gt;numpy.matmul&lt;/code&gt;&lt;/a&gt;) for this:</source>
          <target state="translated">もともと持っていた赤、緑、青のチャンネルアレイです。これには &lt;code&gt;@&lt;/code&gt; 演算子（NumPy配列の行列乗算演算子&lt;a href=&quot;../reference/generated/numpy.matmul#numpy.matmul&quot;&gt; &lt;code&gt;numpy.matmul&lt;/code&gt; &lt;/a&gt;参照）を使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1afadeb92ac28d92d6b69092e6d32440796d181a" translate="yes" xml:space="preserve">
          <source>are the weights. This problem is solved by setting up as the (typically) overdetermined matrix equation</source>
          <target state="translated">は重みである。この問題は、(典型的には)過決定行列式として設定することで解決します。</target>
        </trans-unit>
        <trans-unit id="a5d56af6aa2f265c010d81963817477c3d92c441" translate="yes" xml:space="preserve">
          <source>are the weights. This problem is solved by setting up the (typically) over-determined matrix equation:</source>
          <target state="translated">は重みである。この問題は、(典型的には)過決定行列式を設定することで解決します。</target>
        </trans-unit>
        <trans-unit id="fdb04f4d11c6a65b9a5894e03caa30b736a99d26" translate="yes" xml:space="preserve">
          <source>are the weights. This problem is solved by setting up the (typically) overdetermined matrix equation</source>
          <target state="translated">は重みである。この問題は、(典型的には)過大決定された行列式を設定することで解決されます。</target>
        </trans-unit>
        <trans-unit id="f36b3b4d2dece244c51056a6d60476a5c85502a9" translate="yes" xml:space="preserve">
          <source>argmax (in module numpy.ma)</source>
          <target state="translated">argmax</target>
        </trans-unit>
        <trans-unit id="7d46636cf4afdc2dacf36f1f6721764924cafd51" translate="yes" xml:space="preserve">
          <source>argmax()</source>
          <target state="translated">argmax()</target>
        </trans-unit>
        <trans-unit id="fb2999d30d14ac977c75cf101f3979de47914d7c" translate="yes" xml:space="preserve">
          <source>argmax() (in module numpy)</source>
          <target state="translated">argmax()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="80d9a9d74202db1e861bcc34de70b303cc250b4f" translate="yes" xml:space="preserve">
          <source>argmin (in module numpy.ma)</source>
          <target state="translated">argmin</target>
        </trans-unit>
        <trans-unit id="9763909b010e579a85ed5b5990e3baf43612e411" translate="yes" xml:space="preserve">
          <source>argmin()</source>
          <target state="translated">argmin()</target>
        </trans-unit>
        <trans-unit id="1a144df443434e0f2bf3013a3ab1022b57a582b1" translate="yes" xml:space="preserve">
          <source>argmin() (in module numpy)</source>
          <target state="translated">argmin()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="84b72c16cca4c67ebf78ebe9c2cbf921cc97505a" translate="yes" xml:space="preserve">
          <source>argpartition() (in module numpy)</source>
          <target state="translated">argpartition()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="c562cf9f77bcad33a5839a227c798328253eb298" translate="yes" xml:space="preserve">
          <source>argsort()</source>
          <target state="translated">argsort()</target>
        </trans-unit>
        <trans-unit id="a12244c920367ae1ed226ccac89fd7177abc7d76" translate="yes" xml:space="preserve">
          <source>argsort() (in module numpy)</source>
          <target state="translated">argsort()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="61bb48ed51e263b861ec08bd9fb734f9f3e55efd" translate="yes" xml:space="preserve">
          <source>argwhere() (in module numpy)</source>
          <target state="translated">argwhere()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="8443c67e67614d068b1d25667465caf9999802da" translate="yes" xml:space="preserve">
          <source>around (in module numpy.ma)</source>
          <target state="translated">周り</target>
        </trans-unit>
        <trans-unit id="5916b37aa6e73d9e54ce91b8aaa1a263325c8dff" translate="yes" xml:space="preserve">
          <source>around a long time</source>
          <target state="translated">久々に</target>
        </trans-unit>
        <trans-unit id="a1ce0e8bf4631bc3a2f22b57007bb6531037f494" translate="yes" xml:space="preserve">
          <source>around() (in module numpy)</source>
          <target state="translated">around()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="6e0d844833034105ca9d0a0031301081b281f21c" translate="yes" xml:space="preserve">
          <source>array concatenator</source>
          <target state="translated">配列連結子</target>
        </trans-unit>
        <trans-unit id="e5352918bd8a3978373297fe1b00bbc9373ae30f" translate="yes" xml:space="preserve">
          <source>array or dtype for which to repack the fields.</source>
          <target state="translated">フィールドをリパックするための配列または dtype。</target>
        </trans-unit>
        <trans-unit id="ba1a495bcaaee82b2fac1b638653aa07bf09dae2" translate="yes" xml:space="preserve">
          <source>array scalars</source>
          <target state="translated">配列スカラー</target>
        </trans-unit>
        <trans-unit id="3cea35e50887e9e70837814225ba800fca276baf" translate="yes" xml:space="preserve">
          <source>array to cast</source>
          <target state="translated">キャストする配列</target>
        </trans-unit>
        <trans-unit id="d1eb95117410892e44a296cab726cc1a5f72f061" translate="yes" xml:space="preserve">
          <source>array with the new dtype, with field values copied from the fields in the input array with the same name</source>
          <target state="translated">配列に新しい dtype を追加し、同じ名前の入力配列のフィールドからフィールドの値をコピーします。</target>
        </trans-unit>
        <trans-unit id="77cac1115e139f70b3eec55c371fae847e017e93" translate="yes" xml:space="preserve">
          <source>array() (in module numpy)</source>
          <target state="translated">array()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="f8c8a3b49a7f801825a963bddbadefd27ff840cd" translate="yes" xml:space="preserve">
          <source>array2string() (in module numpy)</source>
          <target state="translated">array2string()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="41aaf9e386813f7733bc1f12e0edd0c5dff4eb0c" translate="yes" xml:space="preserve">
          <source>array_equal() (in module numpy)</source>
          <target state="translated">array_equal()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="fdf4ec20e97ebfa9a1e9f119d09218ea3a122913" translate="yes" xml:space="preserve">
          <source>array_equiv() (in module numpy)</source>
          <target state="translated">array_equiv()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="9eb2c94e7f8e9452859d7ea00172b7da45c76710" translate="yes" xml:space="preserve">
          <source>array_like : For functions that take arguments which can have not only a type &lt;code&gt;ndarray&lt;/code&gt;, but also types that can be converted to an ndarray (i.e. scalar types, sequence types), those arguments can be documented with type &lt;code&gt;array_like&lt;/code&gt;.</source>
          <target state="translated">array_like：ndarray型だけでなく、 &lt;code&gt;ndarray&lt;/code&gt; に変換できる型（つまり、スカラー型、シーケンス型）を持つことができる引数を取る関数の場合、それらの引数は &lt;code&gt;array_like&lt;/code&gt; 型で文書化できます。</target>
        </trans-unit>
        <trans-unit id="6e2b5af90d565ba3626041a3ed69df6763b7d5e6" translate="yes" xml:space="preserve">
          <source>array_repr() (in module numpy)</source>
          <target state="translated">array_repr()</target>
        </trans-unit>
        <trans-unit id="baae9a79844dd686cd1dad5f96539314c3ddeff8" translate="yes" xml:space="preserve">
          <source>array_split() (in module numpy)</source>
          <target state="translated">array_split()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="b7041d3b9d767042c4b5a61dbdca6a6f8979e448" translate="yes" xml:space="preserve">
          <source>array_str() (in module numpy)</source>
          <target state="translated">array_str()</target>
        </trans-unit>
        <trans-unit id="487871c2a85a9991407ead3c9b46c49245b35691" translate="yes" xml:space="preserve">
          <source>arrays to be broadcast together so that the loop progresses in C-style contiguous fashion over the broadcasted array. The corresponding C-structure is the &lt;a href=&quot;#c.PyArrayMultiIterObject&quot;&gt;&lt;code&gt;PyArrayMultiIterObject&lt;/code&gt;&lt;/a&gt; whose memory layout must begin any object, &lt;em&gt;obj&lt;/em&gt;, passed in to the &lt;a href=&quot;array#c.PyArray_Broadcast&quot;&gt;&lt;code&gt;PyArray_Broadcast&lt;/code&gt;&lt;/a&gt; (obj) function. Broadcasting is performed by adjusting array iterators so that each iterator represents the broadcasted shape and size, but has its strides adjusted so that the correct element from the array is used at each iteration.</source>
          <target state="translated">ループがブロードキャストされたアレイ上でCスタイルの連続した方法で進行するように、アレイは一緒にブロードキャストされます。対応するC構造体は&lt;a href=&quot;#c.PyArrayMultiIterObject&quot;&gt; &lt;code&gt;PyArrayMultiIterObject&lt;/code&gt; &lt;/a&gt;であり、そのメモリレイアウトは、&lt;a href=&quot;array#c.PyArray_Broadcast&quot;&gt; &lt;code&gt;PyArray_Broadcast&lt;/code&gt; &lt;/a&gt;（obj）関数に渡されるオブジェクト&lt;em&gt;objを&lt;/em&gt;開始する必要があります。ブロードキャストは、各イテレータがブロードキャストされた形状とサイズを表すように配列イテレータを調整することによって実行されますが、各反復で配列の正しい要素が使用されるようにストライドが調整されます。</target>
        </trans-unit>
        <trans-unit id="d2a594f8e6ee27f50955a3a17ae9a3c3dbd440f6" translate="yes" xml:space="preserve">
          <source>arrays to be broadcast together so that the loop progresses in C-style contiguous fashion over the broadcasted array. The corresponding C-structure is the &lt;a href=&quot;#c.PyArrayMultiIterObject&quot;&gt;&lt;code&gt;PyArrayMultiIterObject&lt;/code&gt;&lt;/a&gt; whose memory layout must begin any object, &lt;em&gt;obj&lt;/em&gt;, passed in to the &lt;a href=&quot;c-api.array#c.PyArray_Broadcast&quot;&gt;&lt;code&gt;PyArray_Broadcast&lt;/code&gt;&lt;/a&gt; (obj) function. Broadcasting is performed by adjusting array iterators so that each iterator represents the broadcasted shape and size, but has its strides adjusted so that the correct element from the array is used at each iteration.</source>
          <target state="translated">ループがブロードキャストされる配列上でCスタイルの連続した方法で進行するように、一緒にブロードキャストされる配列。対応するC構造体は&lt;a href=&quot;#c.PyArrayMultiIterObject&quot;&gt; &lt;code&gt;PyArrayMultiIterObject&lt;/code&gt; &lt;/a&gt;であり、そのメモリレイアウトは、&lt;a href=&quot;c-api.array#c.PyArray_Broadcast&quot;&gt; &lt;code&gt;PyArray_Broadcast&lt;/code&gt; &lt;/a&gt;（obj）関数に渡されるオブジェクト&lt;em&gt;objを&lt;/em&gt;開始する必要があります。ブロードキャストは、各イテレータがブロードキャストされた形状とサイズを表すように配列イテレータを調整することによって実行されますが、ストライドは、各反復で配列の正しい要素が使用されるように調整されます。</target>
        </trans-unit>
        <trans-unit id="f2de9943568aa25a2f59576f5bf4c9cf947bfe4c" translate="yes" xml:space="preserve">
          <source>ary[2:3]</source>
          <target state="translated">ary[2:3]</target>
        </trans-unit>
        <trans-unit id="713b3beefc88807b0a6f0684e0af35113c39a1cc" translate="yes" xml:space="preserve">
          <source>ary[3:]</source>
          <target state="translated">ary[3:]</target>
        </trans-unit>
        <trans-unit id="3e96c1cfc8d64c7da732c5c9ff3e4beca0ed7e69" translate="yes" xml:space="preserve">
          <source>ary[:2]</source>
          <target state="translated">ary[:2]</target>
        </trans-unit>
        <trans-unit id="df211ccdd94a63e0bcb9e6ae427a249484a49d60" translate="yes" xml:space="preserve">
          <source>as</source>
          <target state="translated">as</target>
        </trans-unit>
        <trans-unit id="a0e5661019f2ea4f99ec63ab6db62fbd4412fb05" translate="yes" xml:space="preserve">
          <source>as a C code block of the &lt;code&gt;usercode&lt;/code&gt; statement;</source>
          <target state="translated">&lt;code&gt;usercode&lt;/code&gt; ステートメントのCコードブロックとして。</target>
        </trans-unit>
        <trans-unit id="c7508335332244c4d5a639449928bf107842d290" translate="yes" xml:space="preserve">
          <source>as a C expression of the &lt;code&gt;callstatement&lt;/code&gt; statement;</source>
          <target state="translated">&lt;code&gt;callstatement&lt;/code&gt; ステートメントのC式として。</target>
        </trans-unit>
        <trans-unit id="b7f7018104749a0f98a3c4b0214516ac493c7ecb" translate="yes" xml:space="preserve">
          <source>as a C type specification of the &lt;code&gt;callprotoargument&lt;/code&gt; statement;</source>
          <target state="translated">&lt;code&gt;callprotoargument&lt;/code&gt; ステートメントのCタイプ仕様として。</target>
        </trans-unit>
        <trans-unit id="9e869f6b28e69902a281789e652ee39928bbbaed" translate="yes" xml:space="preserve">
          <source>as a list of C arrays of the &lt;code&gt;pymethoddef&lt;/code&gt; statement;</source>
          <target state="translated">&lt;code&gt;pymethoddef&lt;/code&gt; ステートメントのC配列のリストとして。</target>
        </trans-unit>
        <trans-unit id="0a960f0a485739de9ec7e0394dd5e46da6afde09" translate="yes" xml:space="preserve">
          <source>as below</source>
          <target state="translated">以下のように</target>
        </trans-unit>
        <trans-unit id="39f73cc7abe0e62c980ea2dcd75266833a05fa1f" translate="yes" xml:space="preserve">
          <source>as documentation string.</source>
          <target state="translated">をドキュメント文字列として使用します。</target>
        </trans-unit>
        <trans-unit id="41c08deffdfcbff8dce597ed244b8163bb59c6b8" translate="yes" xml:space="preserve">
          <source>as well as &lt;code&gt;build_ext&lt;/code&gt; and &lt;code&gt;build_clib&lt;/code&gt; commands are enhanced to support Fortran sources.</source>
          <target state="translated">また、 &lt;code&gt;build_ext&lt;/code&gt; コマンドと &lt;code&gt;build_clib&lt;/code&gt; コマンドは、Fortranソースをサポートするように拡張されています。</target>
        </trans-unit>
        <trans-unit id="9703981bf526b57d8b2a91b4faf0312184094a24" translate="yes" xml:space="preserve">
          <source>as_array() (in module numpy.ctypeslib)</source>
          <target state="translated">as_array()(モジュール numpy.ctypeslib内)</target>
        </trans-unit>
        <trans-unit id="519e18146c5f487cb817ef5031c8ac424c76613c" translate="yes" xml:space="preserve">
          <source>as_ctypes() (in module numpy.ctypeslib)</source>
          <target state="translated">as_ctypes()(モジュール numpy.ctypeslib 内)</target>
        </trans-unit>
        <trans-unit id="1c1d8d19ab4aa7fe87542451776256312aec530b" translate="yes" xml:space="preserve">
          <source>as_ctypes_type() (in module numpy.ctypeslib)</source>
          <target state="translated">as_ctypes_type()(in module numpy.ctypeslib)</target>
        </trans-unit>
        <trans-unit id="d2a3db50a543cf83b610d850969a82cf692df2c4" translate="yes" xml:space="preserve">
          <source>as_list() (in module numpy.distutils.misc_util)</source>
          <target state="translated">as_list()(モジュール numpy.distutils.misc_util 内)</target>
        </trans-unit>
        <trans-unit id="075230cd6466b590ee0c722dc432efcfe3c119f5" translate="yes" xml:space="preserve">
          <source>as_series() (in module numpy.polynomial.polyutils)</source>
          <target state="translated">as_series()(モジュール numpy.polynomial.polyutils 内)</target>
        </trans-unit>
        <trans-unit id="28fee9b82f5ae65e42527fa39402302fdcaa1c24" translate="yes" xml:space="preserve">
          <source>as_strided() (in module numpy.lib.stride_tricks)</source>
          <target state="translated">as_strided()(モジュール numpy.lib.stride_tricks 内)</target>
        </trans-unit>
        <trans-unit id="867e9f61afecd3a9e37ccd6ae0ff7c38b6332187" translate="yes" xml:space="preserve">
          <source>asanyarray() (in module numpy)</source>
          <target state="translated">asanyarray()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="57fed5a9848ddacba867eec9379491978922730b" translate="yes" xml:space="preserve">
          <source>asarray() (in module numpy)</source>
          <target state="translated">asarray()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="7bf8d23acaad30d6cbfa69e2e59470632cd4efde" translate="yes" xml:space="preserve">
          <source>asarray_chkfinite() (in module numpy)</source>
          <target state="translated">asarray_chkfinite()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="e4d9e9ee11b93d4d2a4b05fe5ea24cffbf05630b" translate="yes" xml:space="preserve">
          <source>ascontiguousarray() (in module numpy)</source>
          <target state="translated">ascontiguousarray()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="845ed282e67b1546fe7da06252297b07571f5e87" translate="yes" xml:space="preserve">
          <source>asfarray() (in module numpy)</source>
          <target state="translated">asfarray()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="de1f90be7e18c6c1957c721eea19c1a87997c35a" translate="yes" xml:space="preserve">
          <source>asfortranarray() (in module numpy)</source>
          <target state="translated">asfortranarray()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="4550aeaed1ed9aca459142ab390bc1594c305f32" translate="yes" xml:space="preserve">
          <source>asmatrix() (in module numpy)</source>
          <target state="translated">asmatrix()</target>
        </trans-unit>
        <trans-unit id="2daf3b9e77860d510df5145906aae59cad82cda8" translate="yes" xml:space="preserve">
          <source>asscalar() (in module numpy)</source>
          <target state="translated">asscalar()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="9c5a47c06e905788a569b217928e31492a21ad95" translate="yes" xml:space="preserve">
          <source>assert_allclose() (in module numpy.testing)</source>
          <target state="translated">assert_allclose()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="7d258a6ac26e5a61b289e60f0098b8b7172356cc" translate="yes" xml:space="preserve">
          <source>assert_almost_equal() (in module numpy.testing)</source>
          <target state="translated">assert_almost_equal()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="e23e43d3c19bab48f96df3f85175fea1df8a8a6f" translate="yes" xml:space="preserve">
          <source>assert_approx_equal() (in module numpy.testing)</source>
          <target state="translated">assert_approx_equal()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="50506a489108545f8bafceb4f9d2a83946517b5e" translate="yes" xml:space="preserve">
          <source>assert_array_almost_equal() (in module numpy.testing)</source>
          <target state="translated">assert_array_almost_equal()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="13c2bcc1ad4c47c657b77f257b532cba292d2c1a" translate="yes" xml:space="preserve">
          <source>assert_array_almost_equal_nulp() (in module numpy.testing)</source>
          <target state="translated">assert_array_almost_equal_nulp()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="07e8a17609a256436859a0b1476fe203c877dfd2" translate="yes" xml:space="preserve">
          <source>assert_array_equal() (in module numpy.testing)</source>
          <target state="translated">assert_array_equal()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="80f277ea86033566d980ed020623e39e932dd69c" translate="yes" xml:space="preserve">
          <source>assert_array_less() (in module numpy.testing)</source>
          <target state="translated">assert_array_less()(モジュール numpy.testing の)</target>
        </trans-unit>
        <trans-unit id="2ea8d89e03c995cf3804d556b67197c64bad0c46" translate="yes" xml:space="preserve">
          <source>assert_array_max_ulp() (in module numpy.testing)</source>
          <target state="translated">assert_array_max_ulp()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="c9aab4de6eb692438bb0e404193bb704be829fd8" translate="yes" xml:space="preserve">
          <source>assert_equal() (in module numpy.testing)</source>
          <target state="translated">assert_equal()(モジュール numpy.testing で)</target>
        </trans-unit>
        <trans-unit id="c44de8cf34ae3f784d868acb6cbbc40d06f99d86" translate="yes" xml:space="preserve">
          <source>assert_raises() (in module numpy.testing)</source>
          <target state="translated">assert_raises()(モジュール numpy.testing 内)</target>
        </trans-unit>
        <trans-unit id="1ff877c978fdd2fde44d148843b01883d709b186" translate="yes" xml:space="preserve">
          <source>assert_raises_regex() (in module numpy.testing)</source>
          <target state="translated">assert_raises_regex()(モジュール numpy.testing の)</target>
        </trans-unit>
        <trans-unit id="a55cd964b5a4b6f70c034d4f7cb41896c2e788d8" translate="yes" xml:space="preserve">
          <source>assert_string_equal() (in module numpy.testing)</source>
          <target state="translated">assert_string_equal()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="09e7146e5259390d1b00df299dbe52351940832d" translate="yes" xml:space="preserve">
          <source>assert_warns() (in module numpy.testing)</source>
          <target state="translated">assert_warns()(モジュール numpy.testing 内)</target>
        </trans-unit>
        <trans-unit id="b1b7fcc6b7e7f2edcfddfd6f4f9953679d484a5d" translate="yes" xml:space="preserve">
          <source>assign_fields_by_name() (in module numpy.lib.recfunctions)</source>
          <target state="translated">assign_fields_by_name()(モジュール numpy.lib.recfunctions 内)</target>
        </trans-unit>
        <trans-unit id="f54f9517e08fcf16cacc4763d94c152b250ef88e" translate="yes" xml:space="preserve">
          <source>assuming you have the proper permissions to write to the main site- packages directory for the version of Python you are using. For the resulting package to work, you need to create a file named &lt;code&gt;__init__.py&lt;/code&gt; (in the same directory as &lt;code&gt;add.pyf&lt;/code&gt;). Notice the extension module is defined entirely in terms of the &lt;code&gt;add.pyf&lt;/code&gt; and &lt;code&gt;add.f&lt;/code&gt; files. The conversion of the .pyf file to a .c file is handled by &lt;code&gt;numpy.disutils&lt;/code&gt;.</source>
          <target state="translated">使用しているPythonのバージョンのメインsite-packagesディレクトリに書き込むための適切な権限があることを前提としています。仕事への結果のパッケージのために、あなたは、という名前のファイルを作成する必要があります &lt;code&gt;__init__.py&lt;/code&gt; （と同じディレクトリに &lt;code&gt;add.pyf&lt;/code&gt; を）。拡張モジュールは、 &lt;code&gt;add.f&lt;/code&gt; ファイルとadd.fファイルに関して完全に定義されていることに &lt;code&gt;add.pyf&lt;/code&gt; してください。 .pyfファイルから.cファイルへの変換は、numpy.disutilsによって処理され &lt;code&gt;numpy.disutils&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1702ae47af6499909e522270271e2781fca16e18" translate="yes" xml:space="preserve">
          <source>astype and string dtype</source>
          <target state="translated">astypeおよび文字列dtype</target>
        </trans-unit>
        <trans-unit id="e455bcaec7dd3d48a53f1e781987111ddea24905" translate="yes" xml:space="preserve">
          <source>astype() (numpy.char.chararray method)</source>
          <target state="translated">astype()(numpy.char.chararrayメソッド)</target>
        </trans-unit>
        <trans-unit id="4ee457007e2d9666b30d79d9cb8e25f231845260" translate="yes" xml:space="preserve">
          <source>at the beginning (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;begin&amp;rsquo;, 1}) or the end (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;end&amp;rsquo;, 0}) of each period</source>
          <target state="translated">各期間の始め（ &lt;code&gt;when&lt;/code&gt; = {'begin'、1}）または終わり（ &lt;code&gt;when&lt;/code&gt; = {'end'、0}）</target>
        </trans-unit>
        <trans-unit id="98018726794f8b04a48022ae18afacaad6b59d5e" translate="yes" xml:space="preserve">
          <source>at the end of a test module will run the tests when that module is called in the python interpreter.</source>
          <target state="translated">は、テストモジュールの最後にあるモジュールが Python インタープリタで呼び出されたときにテストを実行します。</target>
        </trans-unit>
        <trans-unit id="669cc3033f8f95000a31a6adfce2ed59ae5db3d4" translate="yes" xml:space="preserve">
          <source>at() (numpy.ufunc method)</source>
          <target state="translated">at()(numpy.ufuncメソッド)</target>
        </trans-unit>
        <trans-unit id="2e92211aba53af332937f936bfb7ab0f3c9656bc" translate="yes" xml:space="preserve">
          <source>atleast_1d (in module numpy.ma)</source>
          <target state="translated">atleast_1d</target>
        </trans-unit>
        <trans-unit id="2e66dc9e8bfbe64b6c4c546eb3c3d7158e869471" translate="yes" xml:space="preserve">
          <source>atleast_1d() (in module numpy)</source>
          <target state="translated">atleast_1d()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="cd3bd8be1ccba564df747fc74d243033a9292186" translate="yes" xml:space="preserve">
          <source>atleast_2d (in module numpy.ma)</source>
          <target state="translated">atleast_2d (in module numpy.ma)</target>
        </trans-unit>
        <trans-unit id="1c3cd375151bed0cbd09bcbebf94702a14bfe83a" translate="yes" xml:space="preserve">
          <source>atleast_2d() (in module numpy)</source>
          <target state="translated">atleast_2d()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="71cfe47d9e6f9d82abd5c019a690cd4b49ca1d32" translate="yes" xml:space="preserve">
          <source>atleast_3d (in module numpy.ma)</source>
          <target state="translated">atleast_3d</target>
        </trans-unit>
        <trans-unit id="e38eaf801357aa8a43e4de60fcaaaf6ad8635bff" translate="yes" xml:space="preserve">
          <source>atleast_3d() (in module numpy)</source>
          <target state="translated">atleast_3d()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="e086ba9c9e10e78de6d782cc24fedd67fde0aa0f" translate="yes" xml:space="preserve">
          <source>attosecond</source>
          <target state="translated">attosecond</target>
        </trans-unit>
        <trans-unit id="2c317cd0735d9046d7675c475fa1c6dce647953f" translate="yes" xml:space="preserve">
          <source>attribute</source>
          <target state="translated">attribute</target>
        </trans-unit>
        <trans-unit id="dcec2bd719fe49afef6e4f31a461d7c2249835bc" translate="yes" xml:space="preserve">
          <source>attribute_identifier - string passed directly to nosetests as &amp;lsquo;-A&amp;rsquo;.</source>
          <target state="translated">attribute_identifier-「-A」としてnosetestsに直接渡される文字列。</target>
        </trans-unit>
        <trans-unit id="d7f67a250d8254339cc572b200990d99fe1baf29" translate="yes" xml:space="preserve">
          <source>attributes</source>
          <target state="translated">attributes</target>
        </trans-unit>
        <trans-unit id="20bc9d4304f08f1fabe83150f7982d9b144c8267" translate="yes" xml:space="preserve">
          <source>auditwheel (pip)</source>
          <target state="translated">監査車</target>
        </trans-unit>
        <trans-unit id="8b2aa87fd715e8fc33515a88f2c942d4d1417b9b" translate="yes" xml:space="preserve">
          <source>automatic type-conversions with minimal memory usage</source>
          <target state="translated">メモリ使用量を最小限に抑えた自動型変換</target>
        </trans-unit>
        <trans-unit id="083bcca22f7d139f5a50d8fb6729483051f02a96" translate="yes" xml:space="preserve">
          <source>average for masked arrays &amp;ndash; useful if your data contains &amp;ldquo;missing&amp;rdquo; values</source>
          <target state="translated">マスクされた配列の平均&amp;ndash;データに「欠損値」が含まれている場合に役立ちます</target>
        </trans-unit>
        <trans-unit id="3519af104e75d823d0fa1ea84c426de1985bbc61" translate="yes" xml:space="preserve">
          <source>average() (in module numpy)</source>
          <target state="translated">平均値()</target>
        </trans-unit>
        <trans-unit id="1e5e77454535016c3c2d70224c9ce7fe93b77743" translate="yes" xml:space="preserve">
          <source>avoid learning C API&amp;rsquo;s</source>
          <target state="translated">CAPIの学習を避ける</target>
        </trans-unit>
        <trans-unit id="df22c6cc1102e69e22a84c6cbdde07f758c348aa" translate="yes" xml:space="preserve">
          <source>avoids API/reference counting issues</source>
          <target state="translated">API/参照カウントの問題を回避</target>
        </trans-unit>
        <trans-unit id="3cfe8dce67bb17593948077dcd580eec2efa4053" translate="yes" xml:space="preserve">
          <source>axis</source>
          <target state="translated">axis</target>
        </trans-unit>
        <trans-unit id="1369bfbbe10bd2ebc62f0589fce7ed99832bc438" translate="yes" xml:space="preserve">
          <source>axis, makes an angle at the origin (measured counter-clockwise from that axis), and departs from the origin. The</source>
          <target state="translated">軸を軸とし、原点で角度を作り(その軸から反時計回りに測定)、原点から出発します。このような場合には</target>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="e7fa555d28e54760cca9ab22fa3970792f8725e3" translate="yes" xml:space="preserve">
          <source>b (C variable)</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="f51aa02285bc7bc8412c301ae2c8840fdf599823" translate="yes" xml:space="preserve">
          <source>bartlett() (in module numpy)</source>
          <target state="translated">bartlett()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="1405df66cbe219b0bf6355bc3d60361a8376b6b4" translate="yes" xml:space="preserve">
          <source>base</source>
          <target state="translated">base</target>
        </trans-unit>
        <trans-unit id="a75f3a39cafb8c7f65dea6d083ffeea8039d373b" translate="yes" xml:space="preserve">
          <source>base object</source>
          <target state="translated">基底体</target>
        </trans-unit>
        <trans-unit id="8f1617b71dc5ca00652e31b46898a3c68d49aa46" translate="yes" xml:space="preserve">
          <source>base_repr() (in module numpy)</source>
          <target state="translated">base_repr()</target>
        </trans-unit>
        <trans-unit id="870a0ec272f2449210299395f03f3a0fa2ee451d" translate="yes" xml:space="preserve">
          <source>baseclass (numpy.ma.MaskedArray attribute)</source>
          <target state="translated">baseclass (numpy.ma.MaskedArray属性)</target>
        </trans-unit>
        <trans-unit id="2b0ede751868ba1edd43f74dd5c3372b06d23b4f" translate="yes" xml:space="preserve">
          <source>baseclass() (numpy.ma.masked_array property)</source>
          <target state="translated">baseclass()(numpy.ma.masked_array プロパティ)</target>
        </trans-unit>
        <trans-unit id="cda1c9d5b218719d60f82af6e4c29ab15397f2a0" translate="yes" xml:space="preserve">
          <source>basic &lt;a href=&quot;reference/routines.fft#routines-fft&quot;&gt;Fourier transforms&lt;/a&gt;</source>
          <target state="translated">基本的な&lt;a href=&quot;reference/routines.fft#routines-fft&quot;&gt;フーリエ変換&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab1f924527566281758056fb59b8f789a2233485" translate="yes" xml:space="preserve">
          <source>basic &lt;a href=&quot;reference/routines.linalg#routines-linalg&quot;&gt;linear algebra functions&lt;/a&gt;</source>
          <target state="translated">基本的な&lt;a href=&quot;reference/routines.linalg#routines-linalg&quot;&gt;線形代数関数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccc4eb23861f6307170155e1682887c76e1a2e88" translate="yes" xml:space="preserve">
          <source>basis() (numpy.polynomial.chebyshev.Chebyshev class method)</source>
          <target state="translated">ベーシス()(numpy.polynomial.chebyshev.Chebyshevクラスメソッド)</target>
        </trans-unit>
        <trans-unit id="ed181e11a7eb0c3173cf4b55f151e061b13c3ba0" translate="yes" xml:space="preserve">
          <source>basis_name (numpy.polynomial.chebyshev.Chebyshev attribute)</source>
          <target state="translated">基底名 (numpy.polynomial.chebyshev.Chebyshev属性)</target>
        </trans-unit>
        <trans-unit id="2e1c8a86a313a7779b1bfcf7cabd8019190084ce" translate="yes" xml:space="preserve">
          <source>be a non-homogeneous stepsize, we minimize the &amp;ldquo;consistency error&amp;rdquo;</source>
          <target state="translated">不均一なステップサイズであるため、「一貫性エラー」を最小限に抑える</target>
        </trans-unit>
        <trans-unit id="0e22fe1595747cabbf0c6dbd3d0193fcaf00847f" translate="yes" xml:space="preserve">
          <source>be a random vector which has components that follow a standard gamma distribution, then</source>
          <target state="translated">が標準ガンマ分布に従う成分を持つランダムベクトルであるとすると</target>
        </trans-unit>
        <trans-unit id="68af3b90fc09e7be7c135d5a85ef2cc386d2ccfa" translate="yes" xml:space="preserve">
          <source>beautifulsoup4 (pip)</source>
          <target state="translated">ビューティフルスープ4(ピップ</target>
        </trans-unit>
        <trans-unit id="8a17d8f1826cc2a242f906122028c65263d1c55f" translate="yes" xml:space="preserve">
          <source>before running the examples.</source>
          <target state="translated">例を実行する前に</target>
        </trans-unit>
        <trans-unit id="c634276287c8803430a093393b850e2ca2f9f05e" translate="yes" xml:space="preserve">
          <source>bench() (numpy.testing.Tester method)</source>
          <target state="translated">bench()(numpy.testing.Testerメソッド)</target>
        </trans-unit>
        <trans-unit id="6dc0089ca6ddb35902876f3d59340d14fa3c480f" translate="yes" xml:space="preserve">
          <source>benchmarking NumPy</source>
          <target state="translated">ベンチマークNumPy</target>
        </trans-unit>
        <trans-unit id="a295e0bdde1938d1fbfd343e5a3e569e868e1465" translate="yes" xml:space="preserve">
          <source>beta</source>
          <target state="translated">beta</target>
        </trans-unit>
        <trans-unit id="4547f0b1e39eb6afba69c5a54d83e325fbba754c" translate="yes" xml:space="preserve">
          <source>beta() (in module numpy.random)</source>
          <target state="translated">beta()(モジュール numpy.random 内)</target>
        </trans-unit>
        <trans-unit id="370e9b2e420241288c5f58e112540e67765eedf2" translate="yes" xml:space="preserve">
          <source>between the true gradient and its estimate from a linear combination of the neighboring grid-points:</source>
          <target state="translated">の間の真の勾配と、隣接する格子点の線形の組み合わせからの推定値との間の値を求めます。</target>
        </trans-unit>
        <trans-unit id="3cc146f0b911a8dcd7cb48efd1a6b89b5d9e9dd0" translate="yes" xml:space="preserve">
          <source>bias, ddof arguments to corrcoef</source>
          <target state="translated">バイアス、DDOFの議論は、あなたがそれを理解することができます。</target>
        </trans-unit>
        <trans-unit id="38e4f23119f7668c81c56c877acdc10f397299d2" translate="yes" xml:space="preserve">
          <source>big-endian</source>
          <target state="translated">big-endian</target>
        </trans-unit>
        <trans-unit id="2c5f3eb11a8562c01ee623d2b5bbe0b69287b0b4" translate="yes" xml:space="preserve">
          <source>binary ufunc</source>
          <target state="translated">バイナリUFUNC</target>
        </trans-unit>
        <trans-unit id="2807fac1c9c00a1c46db40fbee0d63dd182e8528" translate="yes" xml:space="preserve">
          <source>binary_repr() (in module numpy)</source>
          <target state="translated">binary_repr()</target>
        </trans-unit>
        <trans-unit id="98eb14753cfe6bec8773aebbbb98f988613a9af4" translate="yes" xml:space="preserve">
          <source>bincount() (in module numpy)</source>
          <target state="translated">bincount()</target>
        </trans-unit>
        <trans-unit id="192238cb0585f7468729e73aacedb3b60d02ba11" translate="yes" xml:space="preserve">
          <source>binomial() (in module numpy.random)</source>
          <target state="translated">二項式()</target>
        </trans-unit>
        <trans-unit id="47778dc2debdaa1fe50c3abde2844e068638329e" translate="yes" xml:space="preserve">
          <source>binomial_t (C type)</source>
          <target state="translated">二項式_t</target>
        </trans-unit>
        <trans-unit id="0255a952f3f47efe67706319101b72f5fc0d536e" translate="yes" xml:space="preserve">
          <source>bit_generator (numpy.random.Generator attribute)</source>
          <target state="translated">bit_generator (numpy.random.Generator属性)</target>
        </trans-unit>
        <trans-unit id="2c596313963d944ee7c9dae1238e7716785af61b" translate="yes" xml:space="preserve">
          <source>bitgen - pointer to the bit generator struct</source>
          <target state="translated">bitgen-ビットジェネレータ構造体へのポインタ.</target>
        </trans-unit>
        <trans-unit id="78ae62068c56331e7460f87a7eaff9291bd90e6f" translate="yes" xml:space="preserve">
          <source>bitgen_t (C type)</source>
          <target state="translated">ビットゲン_t</target>
        </trans-unit>
        <trans-unit id="3c27540860076349ae5dffd7d1c6ce8b0639200c" translate="yes" xml:space="preserve">
          <source>bitwise AND operator (Python native and NumPy ufunc)</source>
          <target state="translated">ビット単位の AND 演算子 (Python ネイティブおよび NumPy ufunc)</target>
        </trans-unit>
        <trans-unit id="456c0441d0dc36d493e457bcc2c2427b9c77be54" translate="yes" xml:space="preserve">
          <source>bitwise OR operator (Python native and NumPy ufunc)</source>
          <target state="translated">ビット論理和演算子 (PythonネイティブおよびNumPy ufunc)</target>
        </trans-unit>
        <trans-unit id="44682f63c1cea33ef4b51125b720945ba8e1ecba" translate="yes" xml:space="preserve">
          <source>bitwise_and (in module numpy)</source>
          <target state="translated">ビットワイズアンド</target>
        </trans-unit>
        <trans-unit id="e5b8d812c0241efe3ec19fccab0075e28b86ed2a" translate="yes" xml:space="preserve">
          <source>bitwise_or (in module numpy)</source>
          <target state="translated">ビットワイズオア</target>
        </trans-unit>
        <trans-unit id="e943d9e50c58d11877cd0ed8e40f1e887e0301f3" translate="yes" xml:space="preserve">
          <source>bitwise_xor (in module numpy)</source>
          <target state="translated">ビットごとのxor</target>
        </trans-unit>
        <trans-unit id="bd2f1fc9014781d4aac3d755b4c1e915c8569f44" translate="yes" xml:space="preserve">
          <source>blackman() (in module numpy)</source>
          <target state="translated">ブラックマン()</target>
        </trans-unit>
        <trans-unit id="40d81328ca7a1b47c12d1f090a76b27da6e9d73a" translate="yes" xml:space="preserve">
          <source>block() (in module numpy)</source>
          <target state="translated">block()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="4762f4c083c54acbd43fdbe16bcb14242aa57d1b" translate="yes" xml:space="preserve">
          <source>blue_text() (in module numpy.distutils.misc_util)</source>
          <target state="translated">blue_text()(モジュール numpy.distutils.misc_util 内)</target>
        </trans-unit>
        <trans-unit id="d56e968e114e573cfd190c4d3bf6aed6322aa13c" translate="yes" xml:space="preserve">
          <source>bmat() (in module numpy)</source>
          <target state="translated">bmat()</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">bool</target>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="translated">boolean</target>
        </trans-unit>
        <trans-unit id="d72a486442cabd3f8fe75d717b106695d47f6c72" translate="yes" xml:space="preserve">
          <source>boolean (single boolean array); if there is more than one boolean array as index or the shape does not match exactly, the boolean array will be converted to an integer array instead.</source>
          <target state="translated">boolean (単一の boolean 配列);インデックスとして複数の boolean 配列がある場合や、形状が正確に一致しない場合は、代わりに boolean 配列が整数配列に変換されます。</target>
        </trans-unit>
        <trans-unit id="55fe08ce363e1662570c4fe7b96c7e56a55568f5" translate="yes" xml:space="preserve">
          <source>breaking up the inner 1-D loop into bufsize chunks (with a possible remainder).</source>
          <target state="translated">内側の 1-D ループを bufsize チャンクに分割します(残りの可能性もあります)。</target>
        </trans-unit>
        <trans-unit id="723e98a2d81120cdb2cafeea0da074deed788ae4" translate="yes" xml:space="preserve">
          <source>broadcast an array to a given shape.</source>
          <target state="translated">配列を指定された形状にブロードキャストします。</target>
        </trans-unit>
        <trans-unit id="4546e9e027d603e9c2e2dca4965d842153f7f06e" translate="yes" xml:space="preserve">
          <source>broadcast.index</source>
          <target state="translated">broadcast.index</target>
        </trans-unit>
        <trans-unit id="001b43ff0c9a255aabcaf017c15d7f06c9327de8" translate="yes" xml:space="preserve">
          <source>broadcast.iters</source>
          <target state="translated">broadcast.iters</target>
        </trans-unit>
        <trans-unit id="ae463d3c99a46c06a1a04c8ebf434cdf7bea2ab4" translate="yes" xml:space="preserve">
          <source>broadcast.nd</source>
          <target state="translated">broadcast.nd</target>
        </trans-unit>
        <trans-unit id="d9f59b3723747ef995372e2df514a875f0b77266" translate="yes" xml:space="preserve">
          <source>broadcast.ndim</source>
          <target state="translated">broadcast.ndim</target>
        </trans-unit>
        <trans-unit id="58795340849dd72449d2807c5f578701f9a5187a" translate="yes" xml:space="preserve">
          <source>broadcast.numiter</source>
          <target state="translated">broadcast.numiter</target>
        </trans-unit>
        <trans-unit id="56edfa480a13ddef44b9b091ea2882b26a4d728d" translate="yes" xml:space="preserve">
          <source>broadcast.reset()</source>
          <target state="translated">broadcast.reset()</target>
        </trans-unit>
        <trans-unit id="4302be9815d6142b26e931693ba676d717243ff5" translate="yes" xml:space="preserve">
          <source>broadcast.shape</source>
          <target state="translated">broadcast.shape</target>
        </trans-unit>
        <trans-unit id="5bb73758ac5f83a30015a7a88885b5b708cc414e" translate="yes" xml:space="preserve">
          <source>broadcast.size</source>
          <target state="translated">broadcast.size</target>
        </trans-unit>
        <trans-unit id="f9c8a746c2c634ba7fc05eead4fdf32d81d727e6" translate="yes" xml:space="preserve">
          <source>broadcast_arrays() (in module numpy)</source>
          <target state="translated">broadcast_arrays()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="9d40979da018aecb8cdf9396d10f3668ce01d188" translate="yes" xml:space="preserve">
          <source>broadcast_to() (in module numpy)</source>
          <target state="translated">broadcast_to()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="12eea3ddc58ce0010288276b780f9c1c36dc4324" translate="yes" xml:space="preserve">
          <source>broadcastable</source>
          <target state="translated">broadcastable</target>
        </trans-unit>
        <trans-unit id="c0534bdb55aa1d3ed50d4ac96fd147ad08b297d5" translate="yes" xml:space="preserve">
          <source>broadcasting</source>
          <target state="translated">broadcasting</target>
        </trans-unit>
        <trans-unit id="990742f8b49d8a82ae9e774983af03393c251cd2" translate="yes" xml:space="preserve">
          <source>buffers</source>
          <target state="translated">buffers</target>
        </trans-unit>
        <trans-unit id="343029df606fb81c3dcc1ca4beb284c059610b41" translate="yes" xml:space="preserve">
          <source>buffers of the specified size created to handle the data from all the inputs and outputs of a ufunc. The default size of a buffer is 10,000 elements. Whenever buffer-based calculation would be needed, but all input arrays are smaller than the buffer size, those misbehaved or incorrectly-typed arrays will be copied before the calculation proceeds. Adjusting the size of the buffer may therefore alter the speed at which ufunc calculations of various sorts are completed. A simple interface for setting this variable is accessible using the function</source>
          <target state="translated">ufuncのすべての入出力からのデータを処理するために作成される、指定されたサイズのバッファ。バッファのデフォルトサイズは10,000要素です。バッファベースの計算が必要な場合であっても、すべての入力配列がバッファサイズよりも小さい場合には、計算が進む前に、正しく動作しない配列や正しく型付けされていない配列がコピーされてしまいます。そのため、バッファのサイズを調整することで、様々な種類の ufunc の計算が完了する速度が変化する可能性があります。この変数を設定するためのシンプルなインターフェースは、関数</target>
        </trans-unit>
        <trans-unit id="9d678511e5d9d9700e0c61588ace1f2f932eb38c" translate="yes" xml:space="preserve">
          <source>build shell independence</source>
          <target state="translated">ビルドシェル独立性</target>
        </trans-unit>
        <trans-unit id="984b5b8886ad46f0fdc91e64ad75197f42c78692" translate="yes" xml:space="preserve">
          <source>builtin string and buffer objects</source>
          <target state="translated">ビルトイン文字列およびバッファオブジェクト</target>
        </trans-unit>
        <trans-unit id="968b7707068373728f0f8845a922a8845f8d45a8" translate="yes" xml:space="preserve">
          <source>busday_count() (in module numpy)</source>
          <target state="translated">busday_count()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="3a8e4238aef0503b67a7b98aadcc9c36f624f928" translate="yes" xml:space="preserve">
          <source>busday_offset() (in module numpy)</source>
          <target state="translated">busday_offset()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="9c51c4de75fb39edc344c67ac7e54305add75bf4" translate="yes" xml:space="preserve">
          <source>busdaycalendar (class in numpy)</source>
          <target state="translated">バスデーカレンダー</target>
        </trans-unit>
        <trans-unit id="04321f572e0fabbee0a1a93777cd88d54e09dd4d" translate="yes" xml:space="preserve">
          <source>busdaycalendar.holidays</source>
          <target state="translated">busdaycalendar.holidays</target>
        </trans-unit>
        <trans-unit id="0bae0b2b6fcf64fd9b8a4f9e45f94bb607c5b5f8" translate="yes" xml:space="preserve">
          <source>busdaycalendar.weekmask</source>
          <target state="translated">busdaycalendar.weekmask</target>
        </trans-unit>
        <trans-unit id="58ad59c7d160d27786d9c7595d41e1b4f63d1bda" translate="yes" xml:space="preserve">
          <source>but an exception is raised when it is incompatible with the input array &lt;code&gt;a&lt;/code&gt;:</source>
          <target state="translated">それは入力配列と互換性がないときには例外が発生し &lt;code&gt;a&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="93d497268ec26a8d0ca25ea3d3674706f8d76050" translate="yes" xml:space="preserve">
          <source>but different representation in memory</source>
          <target state="translated">しかし、記憶の中では異なる表現をしています。</target>
        </trans-unit>
        <trans-unit id="de6166af23fd580ad4ad571cccf47df6413c2dd4" translate="yes" xml:space="preserve">
          <source>but if &lt;code&gt;rate = 0&lt;/code&gt; then:</source>
          <target state="translated">ただし、 &lt;code&gt;rate = 0&lt;/code&gt; 場合：</target>
        </trans-unit>
        <trans-unit id="27e7449493d258f7bb8348e8f7cd4455f0ad3d56" translate="yes" xml:space="preserve">
          <source>but if every element in the array can be uniquely represented with an equal number of fewer digits, use that many digits for all elements.</source>
          <target state="translated">しかし、配列のすべての要素が同じ数の少ない桁数で一意に表現できる場合は、すべての要素にその数の桁数を使用します。</target>
        </trans-unit>
        <trans-unit id="fa223914c4449551a292206a3fa939d42c8a4130" translate="yes" xml:space="preserve">
          <source>but the following Python function</source>
          <target state="translated">が、以下のPython関数</target>
        </trans-unit>
        <trans-unit id="c633e2eacc0b593ab472c852512249bd4ce0787b" translate="yes" xml:space="preserve">
          <source>by computing a vector &lt;code&gt;x&lt;/code&gt; that minimizes the squared Euclidean 2-norm</source>
          <target state="translated">二乗ユークリッド2ノルムを最小化するベクトル &lt;code&gt;x&lt;/code&gt; を計算する</target>
        </trans-unit>
        <trans-unit id="40479b6eef6dbf9dda3d35355ab344bc2bfabcd9" translate="yes" xml:space="preserve">
          <source>by directly taking a view of the masked array as a &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt; or one of its subclass (which is actually what using the &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute does).</source>
          <target state="translated">マスクされた配列のビューを&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; &lt;/a&gt;またはそのサブクラスの1つとして直接取得します（これは実際には&lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;属性を使用して行われます）。</target>
        </trans-unit>
        <trans-unit id="d8283daaf9438ff9c1dd10cc76adcff6d06a04ce" translate="yes" xml:space="preserve">
          <source>by using the &lt;a href=&quot;generated/numpy.ma.getdata#numpy.ma.getdata&quot;&gt;&lt;code&gt;getdata&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ma.getdata#numpy.ma.getdata&quot;&gt; &lt;code&gt;getdata&lt;/code&gt; &lt;/a&gt;関数を使用する。</target>
        </trans-unit>
        <trans-unit id="891bb830afcfe6ae4400a7ba2555850af073edab" translate="yes" xml:space="preserve">
          <source>byte-array indices now raises an IndexError</source>
          <target state="translated">バイト配列のインデックスが IndexError を発生するようになりました。</target>
        </trans-unit>
        <trans-unit id="2f3195d84af65fc8e872abda66a3c22b84207e67" translate="yes" xml:space="preserve">
          <source>byte_bounds() (in module numpy)</source>
          <target state="translated">byte_bounds()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="05bff6641f8f88fd248a88fc2ffe316232755974" translate="yes" xml:space="preserve">
          <source>byteorder (numpy.dtype attribute)</source>
          <target state="translated">バイトオーダ</target>
        </trans-unit>
        <trans-unit id="a7cfaee70ac85e8ac9464a87c3ea62f1b38a4c08" translate="yes" xml:space="preserve">
          <source>bytes() (in module numpy.random)</source>
          <target state="translated">bytes()(モジュール numpy.random 内)</target>
        </trans-unit>
        <trans-unit id="2fb0d59df1803049bc028c930a7b7b70aa773ae3" translate="yes" xml:space="preserve">
          <source>byteswap() (numpy.char.chararray method)</source>
          <target state="translated">byteswap()(numpy.char.chararrayメソッド)</target>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="7241b8d6ac40d7108736b27bb1013a7038ff0aab" translate="yes" xml:space="preserve">
          <source>c() (numpy.poly1d property)</source>
          <target state="translated">c()(numpy.poly1d プロパティ)</target>
        </trans-unit>
        <trans-unit id="3625d392a7e5fce41f29d1e8016b62260e625c63" translate="yes" xml:space="preserve">
          <source>c_ (in module numpy)</source>
          <target state="translated">c_(モジュールnumpy内)</target>
        </trans-unit>
        <trans-unit id="1073936e61f1b10ce87f9dbff9b82ef782adee2b" translate="yes" xml:space="preserve">
          <source>call the iterator&amp;rsquo;s &lt;code&gt;close&lt;/code&gt; method once finished iterating, which will trigger the write-back.</source>
          <target state="translated">反復が終了したら、反復子の &lt;code&gt;close&lt;/code&gt; メソッドを呼び出します。これにより、書き戻しがトリガーされます。</target>
        </trans-unit>
        <trans-unit id="63aa3c962332c23c697960da2a61a9def61426e1" translate="yes" xml:space="preserve">
          <source>call: Call a function specified using the &lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt;&lt;code&gt;seterrcall&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">call：&lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt; &lt;code&gt;seterrcall&lt;/code&gt; &lt;/a&gt;関数を使用して指定された関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="51708db3ecef0cfd27706b2aa23721be5883b75a" translate="yes" xml:space="preserve">
          <source>calls &lt;code&gt;val = myiter.next()&lt;/code&gt; repeatedly until &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; is raised by the iterator. There are several ways to iterate over an array that may be useful: default iteration, flat iteration, and</source>
          <target state="translated">イテレータによって&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;が発生するまで、 &lt;code&gt;val = myiter.next()&lt;/code&gt; 繰り返し呼び出します。有用な配列を反復する方法はいくつかあります。デフォルトの反復、フラット反復、および</target>
        </trans-unit>
        <trans-unit id="58a9aa0c99c08f84a5d8f86ef3ad9ad7c8f592db" translate="yes" xml:space="preserve">
          <source>calls &lt;code&gt;val = next(myiter)&lt;/code&gt; repeatedly until &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; is raised by the iterator. There are several ways to iterate over an array that may be useful: default iteration, flat iteration, and</source>
          <target state="translated">イテレータによって&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;が発生するまで、 &lt;code&gt;val = next(myiter)&lt;/code&gt; 繰り返し呼び出します。有用な配列を反復処理する方法はいくつかあります。デフォルトの反復、フラットな反復、および</target>
        </trans-unit>
        <trans-unit id="6ccb45502776bafe9e95a8e70c928dd1accf9c18" translate="yes" xml:space="preserve">
          <source>can also interface to existing C code</source>
          <target state="translated">既存の C コードとのインターフェイスも可能</target>
        </trans-unit>
        <trans-unit id="1f6b5007ed0f906d0aabf1f3faa976bdeb00ac24" translate="yes" xml:space="preserve">
          <source>can be made safer by replacing with:</source>
          <target state="translated">に置き換えることで、より安全なものにすることができます。</target>
        </trans-unit>
        <trans-unit id="04a6443b6b00d5feec06092c3ea4c9407c745bf1" translate="yes" xml:space="preserve">
          <source>can cause performance problems that are nearly impossible to optimize out</source>
          <target state="translated">を最適化することがほぼ不可能なパフォーマンスの問題を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="9c960ee5bb6c4b0a8f37cfe5f81174508cf2cf01" translate="yes" xml:space="preserve">
          <source>can code in pseudo python and generate C code</source>
          <target state="translated">擬似的に python でコーディングして C コードを生成することができます。</target>
        </trans-unit>
        <trans-unit id="247fa9a6acb5f36703e35b6e1cd9e3d20b4304ba" translate="yes" xml:space="preserve">
          <source>can embed pure C code in Python module and have weave extract, generate interfaces and compile, etc.</source>
          <target state="translated">純粋なC言語のコードをPythonモジュールに埋め込んで、waveで抽出、インターフェースの生成、コンパイルなどを行うことができます。</target>
        </trans-unit>
        <trans-unit id="83198d2750007ba12dcc873d1cb5e77ea69a1864" translate="yes" xml:space="preserve">
          <source>can turn many numpy expressions into C code</source>
          <target state="translated">多くの numpy 式を C コードに変換することができます。</target>
        </trans-unit>
        <trans-unit id="181cb0703490224c94eaf1abf75448f995070072" translate="yes" xml:space="preserve">
          <source>can&amp;rsquo;t use for writing code to be turned into C extensions, only a wrapper tool.</source>
          <target state="translated">C拡張機能に変換するコードの記述には使用できません。ラッパーツールのみを使用できます。</target>
        </trans-unit>
        <trans-unit id="2e15bc1099f7ca29e948714a9950828090d32a9f" translate="yes" xml:space="preserve">
          <source>can_cast() (in module numpy)</source>
          <target state="translated">can_cast()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="01ea5970d70ac5f73a36e071b5c4433bc114cd92" translate="yes" xml:space="preserve">
          <source>cancastscalarkindto</source>
          <target state="translated">cancastscalarkindto</target>
        </trans-unit>
        <trans-unit id="5502d07d8688e83594cf91157dbb3e6ad5aa71b4" translate="yes" xml:space="preserve">
          <source>cancastto</source>
          <target state="translated">cancastto</target>
        </trans-unit>
        <trans-unit id="0daf2be4891f2e673ff31b7e826146f9bf603a07" translate="yes" xml:space="preserve">
          <source>capitalize() (in module numpy.char)</source>
          <target state="translated">キャピタライズ()</target>
        </trans-unit>
        <trans-unit id="b7685cdd4930f79033d05da8aac4af9c9c9ab92b" translate="yes" xml:space="preserve">
          <source>capsule (numpy.random.BitGenerator attribute)</source>
          <target state="translated">カプセル</target>
        </trans-unit>
        <trans-unit id="f8f874fd7d657cad9485fea57c14c4628eab7d58" translate="yes" xml:space="preserve">
          <source>cast() (numpy.polynomial.chebyshev.Chebyshev class method)</source>
          <target state="translated">cast()(numpy.polynomial.chebyshev.Chebyshev クラスメソッド)</target>
        </trans-unit>
        <trans-unit id="a7e9b3430d204f0df99d98d8c03dfcf376a8c649" translate="yes" xml:space="preserve">
          <source>castdict</source>
          <target state="translated">castdict</target>
        </trans-unit>
        <trans-unit id="affff8eb8a68041f4ab3a5a5bf0192628a847dc9" translate="yes" xml:space="preserve">
          <source>castfunc (C function)</source>
          <target state="translated">カストファンク</target>
        </trans-unit>
        <trans-unit id="2c2efb534915503faffffe3fa6b42bf0fe2cc020" translate="yes" xml:space="preserve">
          <source>casting rules</source>
          <target state="translated">鋳方</target>
        </trans-unit>
        <trans-unit id="10684720a57a4948965feea00dac3532703b4bba" translate="yes" xml:space="preserve">
          <source>cbrt (in module numpy)</source>
          <target state="translated">cbrt</target>
        </trans-unit>
        <trans-unit id="8f0e4cafc540784e5c7143458d0bb0f257e5dbc9" translate="yes" xml:space="preserve">
          <source>ceil (in module numpy)</source>
          <target state="translated">ceil</target>
        </trans-unit>
        <trans-unit id="a70b53611c7b221dadeffa493d5a52fd82a9dbc0" translate="yes" xml:space="preserve">
          <source>center() (in module numpy.char)</source>
          <target state="translated">center()(モジュール numpy.char内)</target>
        </trans-unit>
        <trans-unit id="856d967d6d0fe50b9132732fe903223b5d1854c7" translate="yes" xml:space="preserve">
          <source>cffi (numpy.random.BitGenerator attribute)</source>
          <target state="translated">cffi (numpy.random.BitGenerator 属性)</target>
        </trans-unit>
        <trans-unit id="b491db843ce6ae6481567884ceb0e319eff3c631" translate="yes" xml:space="preserve">
          <source>char (numpy.dtype attribute)</source>
          <target state="translated">char (numpy.dtype属性)</target>
        </trans-unit>
        <trans-unit id="34e3e632ca42fd404683a5e2d24a06327726c052" translate="yes" xml:space="preserve">
          <source>character arrays</source>
          <target state="translated">文字配列</target>
        </trans-unit>
        <trans-unit id="3c86c2f390efb57ee3dacae11c8b0b41789a7b72" translate="yes" xml:space="preserve">
          <source>chararray (class in numpy)</source>
          <target state="translated">chararray</target>
        </trans-unit>
        <trans-unit id="ebef4e6bdecc3f0df29f7de5c3e87a0b7d64410d" translate="yes" xml:space="preserve">
          <source>chararray.T</source>
          <target state="translated">chararray.T</target>
        </trans-unit>
        <trans-unit id="a0886dd26712f2fe3f62874d7a7635cbe157ff05" translate="yes" xml:space="preserve">
          <source>chararray.argsort()</source>
          <target state="translated">chararray.argsort()</target>
        </trans-unit>
        <trans-unit id="e34e755af986f23fd5041b8b7cc617e6754456b3" translate="yes" xml:space="preserve">
          <source>chararray.astype()</source>
          <target state="translated">chararray.astype()</target>
        </trans-unit>
        <trans-unit id="8c228d15af6ce72f8781676ab954dac9c06550da" translate="yes" xml:space="preserve">
          <source>chararray.base</source>
          <target state="translated">chararray.base</target>
        </trans-unit>
        <trans-unit id="96f2e7f4869844d623e92591aab70f5f6e24214b" translate="yes" xml:space="preserve">
          <source>chararray.copy()</source>
          <target state="translated">chararray.copy()</target>
        </trans-unit>
        <trans-unit id="b315fbac0e29f3fc03c73b36e10351d32da376ee" translate="yes" xml:space="preserve">
          <source>chararray.count()</source>
          <target state="translated">chararray.count()</target>
        </trans-unit>
        <trans-unit id="3af38aab24ccb67d2c9449b1addc4f3dde89b66e" translate="yes" xml:space="preserve">
          <source>chararray.ctypes</source>
          <target state="translated">chararray.ctypes</target>
        </trans-unit>
        <trans-unit id="6421e04608afd1aa482a92517e5d34846a27c85c" translate="yes" xml:space="preserve">
          <source>chararray.data</source>
          <target state="translated">chararray.data</target>
        </trans-unit>
        <trans-unit id="4a0232137ab8b8ab246e3e2e1fc2820c98db9e86" translate="yes" xml:space="preserve">
          <source>chararray.decode()</source>
          <target state="translated">chararray.decode()</target>
        </trans-unit>
        <trans-unit id="889579d431306f233f264aaa2f522cd8002799ba" translate="yes" xml:space="preserve">
          <source>chararray.dtype</source>
          <target state="translated">chararray.dtype</target>
        </trans-unit>
        <trans-unit id="8a35d98272bae2bee59431afb0d19f25eb7ade8d" translate="yes" xml:space="preserve">
          <source>chararray.dump()</source>
          <target state="translated">chararray.dump()</target>
        </trans-unit>
        <trans-unit id="8a1b2985e51ca160b7ec10c06b5046f671382d74" translate="yes" xml:space="preserve">
          <source>chararray.dumps()</source>
          <target state="translated">chararray.dumps()</target>
        </trans-unit>
        <trans-unit id="03b0811474628f6be4083acb70378eab2aa8a130" translate="yes" xml:space="preserve">
          <source>chararray.encode()</source>
          <target state="translated">chararray.encode()</target>
        </trans-unit>
        <trans-unit id="d045ecd37690ed3dafe37dd487f97399fad88ad6" translate="yes" xml:space="preserve">
          <source>chararray.endswith()</source>
          <target state="translated">chararray.endswith()</target>
        </trans-unit>
        <trans-unit id="0ffcdb5d9c2c0ab6a11f7560e2778b662c6ead5d" translate="yes" xml:space="preserve">
          <source>chararray.expandtabs()</source>
          <target state="translated">chararray.expandtabs()</target>
        </trans-unit>
        <trans-unit id="03720bacb068488037411665dd5084d8dbce517c" translate="yes" xml:space="preserve">
          <source>chararray.fill()</source>
          <target state="translated">chararray.fill()</target>
        </trans-unit>
        <trans-unit id="dd727bc24ae8c548b7423414ac6783801eefda47" translate="yes" xml:space="preserve">
          <source>chararray.find()</source>
          <target state="translated">chararray.find()</target>
        </trans-unit>
        <trans-unit id="63f3e3ccd095b73426fac852f3ee7bf59e936f64" translate="yes" xml:space="preserve">
          <source>chararray.flags</source>
          <target state="translated">chararray.flags</target>
        </trans-unit>
        <trans-unit id="21002856b53a6441f0d5e344c5d48be638767e39" translate="yes" xml:space="preserve">
          <source>chararray.flat</source>
          <target state="translated">chararray.flat</target>
        </trans-unit>
        <trans-unit id="095da7c453a206efaff703877886586fd5685d01" translate="yes" xml:space="preserve">
          <source>chararray.flatten()</source>
          <target state="translated">chararray.flatten()</target>
        </trans-unit>
        <trans-unit id="8c8606ecd97087d8212bcffc68979bf5329d8c7b" translate="yes" xml:space="preserve">
          <source>chararray.getfield()</source>
          <target state="translated">chararray.getfield()</target>
        </trans-unit>
        <trans-unit id="5d0dfc685f3a58431ab287e68de034eb55961f99" translate="yes" xml:space="preserve">
          <source>chararray.imag</source>
          <target state="translated">chararray.imag</target>
        </trans-unit>
        <trans-unit id="d0b8500695c7409aeea012b6b809d4fe43bcb3d7" translate="yes" xml:space="preserve">
          <source>chararray.index()</source>
          <target state="translated">chararray.index()</target>
        </trans-unit>
        <trans-unit id="acb20c4bd8ebe0be3bc2cfd18b3e59c42c447154" translate="yes" xml:space="preserve">
          <source>chararray.isalnum()</source>
          <target state="translated">chararray.isalnum()</target>
        </trans-unit>
        <trans-unit id="a66ecb9b2c5e5b5fcb6b047cb4c9e31417d5c13b" translate="yes" xml:space="preserve">
          <source>chararray.isalpha()</source>
          <target state="translated">chararray.isalpha()</target>
        </trans-unit>
        <trans-unit id="143613a65da7c189daeb4faf53c4810096e83b3d" translate="yes" xml:space="preserve">
          <source>chararray.isdecimal()</source>
          <target state="translated">chararray.isdecimal()</target>
        </trans-unit>
        <trans-unit id="c4e0213c0d37ff358d18d2ca9e3241f9abbb113c" translate="yes" xml:space="preserve">
          <source>chararray.isdigit()</source>
          <target state="translated">chararray.isdigit()</target>
        </trans-unit>
        <trans-unit id="d768e3fa5ec445042ffe66547e027375aba3e72c" translate="yes" xml:space="preserve">
          <source>chararray.islower()</source>
          <target state="translated">chararray.islower()</target>
        </trans-unit>
        <trans-unit id="5ce33bad5fcbe9bb8578ba7979a9d3d712661922" translate="yes" xml:space="preserve">
          <source>chararray.isnumeric()</source>
          <target state="translated">chararray.isnumeric()</target>
        </trans-unit>
        <trans-unit id="7563dfe1944e68a7fe7b7a770ec1e9af568f7f71" translate="yes" xml:space="preserve">
          <source>chararray.isspace()</source>
          <target state="translated">chararray.isspace()</target>
        </trans-unit>
        <trans-unit id="94a0e9047845c243e494978ec22ee72f09f8722a" translate="yes" xml:space="preserve">
          <source>chararray.istitle()</source>
          <target state="translated">chararray.istitle()</target>
        </trans-unit>
        <trans-unit id="ff973ce849e182d387ea033478c5ecd4f26666ca" translate="yes" xml:space="preserve">
          <source>chararray.isupper()</source>
          <target state="translated">chararray.isupper()</target>
        </trans-unit>
        <trans-unit id="07b3bb5dfab61ae981a8f0a3dcb84be6091ed056" translate="yes" xml:space="preserve">
          <source>chararray.item()</source>
          <target state="translated">chararray.item()</target>
        </trans-unit>
        <trans-unit id="de8c59892875c62ffc1a1ce48b04578445571240" translate="yes" xml:space="preserve">
          <source>chararray.itemsize</source>
          <target state="translated">chararray.itemsize</target>
        </trans-unit>
        <trans-unit id="f65fa52d4dbbea12feeaca91ccf8c76544703126" translate="yes" xml:space="preserve">
          <source>chararray.join()</source>
          <target state="translated">chararray.join()</target>
        </trans-unit>
        <trans-unit id="020a18b7b7ef5f3e1d15f46c736aae923e0320a4" translate="yes" xml:space="preserve">
          <source>chararray.ljust()</source>
          <target state="translated">chararray.ljust()</target>
        </trans-unit>
        <trans-unit id="85549df2e98225b226578b8b2cf28279d40f2677" translate="yes" xml:space="preserve">
          <source>chararray.lower()</source>
          <target state="translated">chararray.lower()</target>
        </trans-unit>
        <trans-unit id="9cc5e792d68757d5452a0a7392e5a5593359bdaa" translate="yes" xml:space="preserve">
          <source>chararray.lstrip()</source>
          <target state="translated">chararray.lstrip()</target>
        </trans-unit>
        <trans-unit id="712efe2d872fefe323b3cb4f74a095c6089f631e" translate="yes" xml:space="preserve">
          <source>chararray.nbytes</source>
          <target state="translated">chararray.nbytes</target>
        </trans-unit>
        <trans-unit id="a5da84ca381b2bcb88df35a6fa61a64e7dfe0ec5" translate="yes" xml:space="preserve">
          <source>chararray.ndim</source>
          <target state="translated">chararray.ndim</target>
        </trans-unit>
        <trans-unit id="53bcee73d053a28b4c7062ec965a0625b9ce5f32" translate="yes" xml:space="preserve">
          <source>chararray.nonzero()</source>
          <target state="translated">chararray.nonzero()</target>
        </trans-unit>
        <trans-unit id="2b1d59cbb6e6290532ba07416863d4ccff19bb5d" translate="yes" xml:space="preserve">
          <source>chararray.put()</source>
          <target state="translated">chararray.put()</target>
        </trans-unit>
        <trans-unit id="4c145fdafdb1b4f697e008772eb81d24c87f31c4" translate="yes" xml:space="preserve">
          <source>chararray.ravel()</source>
          <target state="translated">chararray.ravel()</target>
        </trans-unit>
        <trans-unit id="82a4a1658890715852e4b3f7954cb7dce6bdc407" translate="yes" xml:space="preserve">
          <source>chararray.real</source>
          <target state="translated">chararray.real</target>
        </trans-unit>
        <trans-unit id="bc49c60fae14a029c270fa2ce5636735f33304da" translate="yes" xml:space="preserve">
          <source>chararray.repeat()</source>
          <target state="translated">chararray.repeat()</target>
        </trans-unit>
        <trans-unit id="e4057ac55ebaae8eb4ccf3adcb9346cac1e18558" translate="yes" xml:space="preserve">
          <source>chararray.replace()</source>
          <target state="translated">chararray.replace()</target>
        </trans-unit>
        <trans-unit id="d27ed5ad9cc1f037913419d39f635cb70b5a3e3c" translate="yes" xml:space="preserve">
          <source>chararray.reshape()</source>
          <target state="translated">chararray.reshape()</target>
        </trans-unit>
        <trans-unit id="7c55368d49823a88748b77a3c014c418e7eafbf4" translate="yes" xml:space="preserve">
          <source>chararray.resize()</source>
          <target state="translated">chararray.resize()</target>
        </trans-unit>
        <trans-unit id="e17143f324af78cb4a5753b231c1e3f7aa611c83" translate="yes" xml:space="preserve">
          <source>chararray.rfind()</source>
          <target state="translated">chararray.rfind()</target>
        </trans-unit>
        <trans-unit id="4239c5ca5f8656ae9592f0e373ca0a9215cd52f9" translate="yes" xml:space="preserve">
          <source>chararray.rindex()</source>
          <target state="translated">chararray.rindex()</target>
        </trans-unit>
        <trans-unit id="f0a9c1fe3e4518d3ee683abedd9fee18d38f3bc8" translate="yes" xml:space="preserve">
          <source>chararray.rjust()</source>
          <target state="translated">chararray.rjust()</target>
        </trans-unit>
        <trans-unit id="306a53b506623059a6b9028c93ce8fa2c428a624" translate="yes" xml:space="preserve">
          <source>chararray.rsplit()</source>
          <target state="translated">chararray.rsplit()</target>
        </trans-unit>
        <trans-unit id="1d5eb548163962da5b9d96b40b7f9fc01b7359ad" translate="yes" xml:space="preserve">
          <source>chararray.rstrip()</source>
          <target state="translated">chararray.rstrip()</target>
        </trans-unit>
        <trans-unit id="50b0ad482eabd1fc95445d8eb938a47d547b824e" translate="yes" xml:space="preserve">
          <source>chararray.searchsorted()</source>
          <target state="translated">chararray.searchsorted()</target>
        </trans-unit>
        <trans-unit id="c8a1269d773a72a94193552a016300bc1a7bc267" translate="yes" xml:space="preserve">
          <source>chararray.setfield()</source>
          <target state="translated">chararray.setfield()</target>
        </trans-unit>
        <trans-unit id="fa7150b3d4a7868b081e2994071dacf7abe8e627" translate="yes" xml:space="preserve">
          <source>chararray.setflags()</source>
          <target state="translated">chararray.setflags()</target>
        </trans-unit>
        <trans-unit id="30076fe7af2da7e4387648aa6c1dba67a4399c0f" translate="yes" xml:space="preserve">
          <source>chararray.shape</source>
          <target state="translated">chararray.shape</target>
        </trans-unit>
        <trans-unit id="d6e9ddd56ac3e624e2bdf0a0082f90804d58815b" translate="yes" xml:space="preserve">
          <source>chararray.size</source>
          <target state="translated">chararray.size</target>
        </trans-unit>
        <trans-unit id="bc7a8f4797b23871a9cd118dee9e7135be60f447" translate="yes" xml:space="preserve">
          <source>chararray.sort()</source>
          <target state="translated">chararray.sort()</target>
        </trans-unit>
        <trans-unit id="8f770eef8be4cc73ef56d96593ba3b62decb2a9c" translate="yes" xml:space="preserve">
          <source>chararray.split()</source>
          <target state="translated">chararray.split()</target>
        </trans-unit>
        <trans-unit id="2dc07b811ca25bd05973befbd2b31ab3c7596fda" translate="yes" xml:space="preserve">
          <source>chararray.splitlines()</source>
          <target state="translated">chararray.splitlines()</target>
        </trans-unit>
        <trans-unit id="04935a142bacf27094c9711e3676609f938bf684" translate="yes" xml:space="preserve">
          <source>chararray.squeeze()</source>
          <target state="translated">chararray.squeeze()</target>
        </trans-unit>
        <trans-unit id="92b089013501291ca2d9ad9990b60bc62e6f5ad3" translate="yes" xml:space="preserve">
          <source>chararray.startswith()</source>
          <target state="translated">chararray.startswith()</target>
        </trans-unit>
        <trans-unit id="c6ff09354c723678c95a1d20b56ca7ae9157623e" translate="yes" xml:space="preserve">
          <source>chararray.strides</source>
          <target state="translated">chararray.strides</target>
        </trans-unit>
        <trans-unit id="594a551054b5eeb02ba5ac82daf5264a7c130b73" translate="yes" xml:space="preserve">
          <source>chararray.strip()</source>
          <target state="translated">chararray.strip()</target>
        </trans-unit>
        <trans-unit id="3d89d85706c10d79c9c1a94b4d71f2caea0731c1" translate="yes" xml:space="preserve">
          <source>chararray.swapaxes()</source>
          <target state="translated">chararray.swapaxes()</target>
        </trans-unit>
        <trans-unit id="ed54ca8f1e84b329dd5dfe5f4bcecc51b7949574" translate="yes" xml:space="preserve">
          <source>chararray.swapcase()</source>
          <target state="translated">chararray.swapcase()</target>
        </trans-unit>
        <trans-unit id="606dd5443068499af38925689683c491d45d23a0" translate="yes" xml:space="preserve">
          <source>chararray.take()</source>
          <target state="translated">chararray.take()</target>
        </trans-unit>
        <trans-unit id="6b892ea46a6a519b8e38bfeb07f8043b913eead2" translate="yes" xml:space="preserve">
          <source>chararray.title()</source>
          <target state="translated">chararray.title()</target>
        </trans-unit>
        <trans-unit id="33b76d2d94f872f842d04fb34ec6a743974f7604" translate="yes" xml:space="preserve">
          <source>chararray.tofile()</source>
          <target state="translated">chararray.tofile()</target>
        </trans-unit>
        <trans-unit id="bbfc507797dad886c94f8f1337de372cd00cd704" translate="yes" xml:space="preserve">
          <source>chararray.tolist()</source>
          <target state="translated">chararray.tolist()</target>
        </trans-unit>
        <trans-unit id="c6cc16936930410ff18660ad5d73749bcc2b6a63" translate="yes" xml:space="preserve">
          <source>chararray.tostring()</source>
          <target state="translated">chararray.tostring()</target>
        </trans-unit>
        <trans-unit id="01d2b1250e07e89f6bbba7fab6c22db228489f41" translate="yes" xml:space="preserve">
          <source>chararray.translate()</source>
          <target state="translated">chararray.translate()</target>
        </trans-unit>
        <trans-unit id="0e6343e9c9a7e24f84b6a29a7abbc9f407502b9c" translate="yes" xml:space="preserve">
          <source>chararray.transpose()</source>
          <target state="translated">chararray.transpose()</target>
        </trans-unit>
        <trans-unit id="90bfa55cfb3d0b77bb03ab483ac428e065685fe3" translate="yes" xml:space="preserve">
          <source>chararray.upper()</source>
          <target state="translated">chararray.upper()</target>
        </trans-unit>
        <trans-unit id="00c5462c720bb4df0cee44c74b658ccf3eb3ea6a" translate="yes" xml:space="preserve">
          <source>chararray.view()</source>
          <target state="translated">chararray.view()</target>
        </trans-unit>
        <trans-unit id="64dcdfb99c030871657300e47131f41ed74ed92e" translate="yes" xml:space="preserve">
          <source>chararray.zfill()</source>
          <target state="translated">chararray.zfill()</target>
        </trans-unit>
        <trans-unit id="7135cf4d6d472ba308e86628bd5e53b6a8669ca0" translate="yes" xml:space="preserve">
          <source>chararrays should be created using &lt;a href=&quot;numpy.char.array#numpy.char.array&quot;&gt;&lt;code&gt;numpy.char.array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;numpy.char.asarray#numpy.char.asarray&quot;&gt;&lt;code&gt;numpy.char.asarray&lt;/code&gt;&lt;/a&gt;, rather than this constructor directly.</source>
          <target state="translated">chararray は、このコンストラクタを直接作成するのではなく、&lt;a href=&quot;numpy.char.array#numpy.char.array&quot;&gt; &lt;code&gt;numpy.char.array&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;numpy.char.asarray#numpy.char.asarray&quot;&gt; &lt;code&gt;numpy.char.asarray&lt;/code&gt; &lt;/a&gt;を使用して作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="fc4e5ec9d57b70e0c39f7e813893f89c9a80fe3e" translate="yes" xml:space="preserve">
          <source>cheb2poly() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">cheb2poly()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="3440ab75f6b82c2a036c511b9ccc46d2cef63f94" translate="yes" xml:space="preserve">
          <source>chebadd() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebadd()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="1520dc687ff17f4efde2433cb958a7572b6c9a51" translate="yes" xml:space="preserve">
          <source>chebcompanion() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebcompanion()(モジュール numpy.polynomial.chebyshev 内)</target>
        </trans-unit>
        <trans-unit id="283bf829ae11b76f46c254e5397f48a4d6a2c1ea" translate="yes" xml:space="preserve">
          <source>chebder() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebder()(モジュール numpy.polynomial.chebyshev 内)</target>
        </trans-unit>
        <trans-unit id="8af5e208c369e3cc5c795056a1979916cd2e8062" translate="yes" xml:space="preserve">
          <source>chebdiv() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebdiv()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="c2e516f041054a163f30e2394e97525d80ca69ef" translate="yes" xml:space="preserve">
          <source>chebdomain (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">チェブドメイン</target>
        </trans-unit>
        <trans-unit id="440906f563093ff46cdc3ff33a6ac7b49554e35a" translate="yes" xml:space="preserve">
          <source>chebfit() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebfit()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="98253cbfd6a53701a6ceb155b973cf842bd16b6c" translate="yes" xml:space="preserve">
          <source>chebfromroots() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebfromroots()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="f12f34c002790fc3341b76a90412731c56ace9ec" translate="yes" xml:space="preserve">
          <source>chebgauss() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebgauss()</target>
        </trans-unit>
        <trans-unit id="2a151bb776d8947d62ee88c17dc1e47886d65aec" translate="yes" xml:space="preserve">
          <source>chebgrid2d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebgrid2d()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="818d41a91a1275420f36ba4156075f70252ff936" translate="yes" xml:space="preserve">
          <source>chebgrid3d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebgrid3d()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="6dc43b12197028b0b12a95a6918dda98bb21d47b" translate="yes" xml:space="preserve">
          <source>chebint() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebint()(モジュール numpy.polynomial.chebyshev 内)</target>
        </trans-unit>
        <trans-unit id="5f6db99d180bb90b16cec4ef24c682d9b6d8b909" translate="yes" xml:space="preserve">
          <source>chebinterpolate() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebinterpolate()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="e7b9701d093a4a697890e79d2900bda007298b89" translate="yes" xml:space="preserve">
          <source>chebline() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebline()(モジュール numpy.polynomial.chebyshev 内)</target>
        </trans-unit>
        <trans-unit id="faf615bfb6bae6a9922f816b167f3cf8aa489622" translate="yes" xml:space="preserve">
          <source>chebmul() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebmul()(モジュール numpy.polynomial.chebyshev 内)</target>
        </trans-unit>
        <trans-unit id="9db00ee7c3aab8f4af155d027140dc55a7749be1" translate="yes" xml:space="preserve">
          <source>chebmulx() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebmulx()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="326160578192c9fcae4a678a4b79db6d7551e8b2" translate="yes" xml:space="preserve">
          <source>chebone (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">チェボーン</target>
        </trans-unit>
        <trans-unit id="3e28fcc0ca62a55a1c4f7080caace1d0d187ab43" translate="yes" xml:space="preserve">
          <source>chebpow() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebpow()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="3ff86a635eb49ebb923e7b59d3d226702fe8ed35" translate="yes" xml:space="preserve">
          <source>chebpts1() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebpts1()(モジュール numpy.polynomial.chebyshev 内)</target>
        </trans-unit>
        <trans-unit id="dd460618c23b006e03ad9f5131aa99bd51791802" translate="yes" xml:space="preserve">
          <source>chebpts2() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebpts2()(モジュール numpy.polynomial.chebyshev 内)</target>
        </trans-unit>
        <trans-unit id="d38de44aa771c6146e43805d5853d4424068b2c1" translate="yes" xml:space="preserve">
          <source>chebroots() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebroots()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="a0c01b52d2cbe29ca28f8a88e38995a0c1cb155e" translate="yes" xml:space="preserve">
          <source>chebsub() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebsub()(モジュール numpy.polynomial.chebyshev 内)</target>
        </trans-unit>
        <trans-unit id="2f94425a411f389b1fa3da4a26f73a28e33c0f21" translate="yes" xml:space="preserve">
          <source>chebtrim() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebtrim()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="c3927d2869ede880e07f8e6f071739f6126deafc" translate="yes" xml:space="preserve">
          <source>chebval() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebval()(モジュール numpy.polynomial.chebyshev 内)</target>
        </trans-unit>
        <trans-unit id="96fec6b49c504bf3c9f74ba4be73ec1109cdb7b7" translate="yes" xml:space="preserve">
          <source>chebval2d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebval2d()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="c07f1735f0466640ec395edaa4e4c9bf5e5abc72" translate="yes" xml:space="preserve">
          <source>chebval3d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebval3d()(モジュール numpy.polynomial.chebyshev 内)</target>
        </trans-unit>
        <trans-unit id="581d237793418e7825fbb3d3bbcb2a5f24639726" translate="yes" xml:space="preserve">
          <source>chebvander() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebvvander()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="ab08f8ba1290c177c53c2a563af4993f5449130b" translate="yes" xml:space="preserve">
          <source>chebvander2d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebvander2d()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="ea27096e22cc1705d8eaf5cc079ae3cb97692dbf" translate="yes" xml:space="preserve">
          <source>chebvander3d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebvander3d()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="12d9eea401e68ac65378b871ad9ae2c5e7740c9e" translate="yes" xml:space="preserve">
          <source>chebweight() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebweight()(モジュール numpy.polynomial.chebyshev で)</target>
        </trans-unit>
        <trans-unit id="5a3501e090867e009d827f2a3da6e00ec2b69ff6" translate="yes" xml:space="preserve">
          <source>chebx (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebx</target>
        </trans-unit>
        <trans-unit id="7e4ce919c0dac120ad1d2d62e6ee0dcfba734df2" translate="yes" xml:space="preserve">
          <source>chebzero (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">チェブゼロ</target>
        </trans-unit>
        <trans-unit id="d7290533351d45636f24653403e55f494f934e81" translate="yes" xml:space="preserve">
          <source>chisquare() (in module numpy.random)</source>
          <target state="translated">chisquare()(モジュール numpy.random 内)</target>
        </trans-unit>
        <trans-unit id="8ec3f8e8ee8f2bbeaad479e8cc4886ea011c6119" translate="yes" xml:space="preserve">
          <source>choice() (in module numpy.random)</source>
          <target state="translated">choice()(モジュール numpy.random内)</target>
        </trans-unit>
        <trans-unit id="9882ebdaffea81f72b5fe1cb9ffd3c121dbe727c" translate="yes" xml:space="preserve">
          <source>choice(a, size=None, replace=True, p=None, axis=0):</source>
          <target state="translated">choice(a,size=None,replace=True,p=None,axis=0)。</target>
        </trans-unit>
        <trans-unit id="b1e472e94afd0fe53768d1436d0bd203f18ffb0d" translate="yes" xml:space="preserve">
          <source>cholesky factorization of a matrix (&lt;code&gt;chol(a)&lt;/code&gt; in matlab returns an upper triangular matrix, but &lt;code&gt;linalg.cholesky(a)&lt;/code&gt; returns a lower triangular matrix)</source>
          <target state="translated">行列のコレスキー分解（matlabの &lt;code&gt;chol(a)&lt;/code&gt; は上三角行列を返しますが、 &lt;code&gt;linalg.cholesky(a)&lt;/code&gt; は下三角行列を返します）</target>
        </trans-unit>
        <trans-unit id="715db4d07e163c133ba15c71bbee61c3f9fe49ed" translate="yes" xml:space="preserve">
          <source>cholesky() (in module numpy.linalg)</source>
          <target state="translated">cholesky()(モジュール numpy.linalg 内)</target>
        </trans-unit>
        <trans-unit id="40f02258628b3f0bad711db6f6079f750a06de5f" translate="yes" xml:space="preserve">
          <source>choose() (in module numpy)</source>
          <target state="translated">choose()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="d76c34c79cf00add93e463054fe4592f63967161" translate="yes" xml:space="preserve">
          <source>class name</source>
          <target state="translated">クラス名</target>
        </trans-unit>
        <trans-unit id="a814a60721cb9d1368e5877060ee79bf1e966c6d" translate="yes" xml:space="preserve">
          <source>class of &lt;a href=&quot;#numpy.ogrid&quot;&gt;&lt;code&gt;ogrid&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.mgrid#numpy.mgrid&quot;&gt;&lt;code&gt;mgrid&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">&lt;a href=&quot;#numpy.ogrid&quot;&gt; &lt;code&gt;ogrid&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;numpy.mgrid#numpy.mgrid&quot;&gt; &lt;code&gt;mgrid&lt;/code&gt; &lt;/a&gt;オブジェクトのクラス</target>
        </trans-unit>
        <trans-unit id="75531da240318b7fed636eec1882b36203273a71" translate="yes" xml:space="preserve">
          <source>class of &lt;a href=&quot;numpy.ogrid#numpy.ogrid&quot;&gt;&lt;code&gt;ogrid&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#numpy.mgrid&quot;&gt;&lt;code&gt;mgrid&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">&lt;a href=&quot;numpy.ogrid#numpy.ogrid&quot;&gt; &lt;code&gt;ogrid&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#numpy.mgrid&quot;&gt; &lt;code&gt;mgrid&lt;/code&gt; &lt;/a&gt;オブジェクトのクラス</target>
        </trans-unit>
        <trans-unit id="3def21de649e07bec6074edc1295c1dbf2cdb389" translate="yes" xml:space="preserve">
          <source>class.__array__()</source>
          <target state="translated">class.__array__()</target>
        </trans-unit>
        <trans-unit id="d8b8983057658ed3f6bdc85449803b72b3eaf62c" translate="yes" xml:space="preserve">
          <source>class.__array_finalize__()</source>
          <target state="translated">class.__array_finalize__()</target>
        </trans-unit>
        <trans-unit id="9eddbb2718caf79e115c786ba385877dcd11082b" translate="yes" xml:space="preserve">
          <source>class.__array_function__()</source>
          <target state="translated">class.__array_function__()</target>
        </trans-unit>
        <trans-unit id="5661d1a56502e8ac304b8cfb9310c81795c37acb" translate="yes" xml:space="preserve">
          <source>class.__array_prepare__()</source>
          <target state="translated">class.__array_prepare__()</target>
        </trans-unit>
        <trans-unit id="131c845b35b1d855c6e0a8648a35d2a20e71fb72" translate="yes" xml:space="preserve">
          <source>class.__array_priority__</source>
          <target state="translated">class.__array_priority__</target>
        </trans-unit>
        <trans-unit id="1a99c0e2e81c7dc5265f365bd9f859898939f7f3" translate="yes" xml:space="preserve">
          <source>class.__array_ufunc__()</source>
          <target state="translated">class.__array_ufunc__()</target>
        </trans-unit>
        <trans-unit id="a1d6fef3822241e04ca21da9bf9dcd3e7a0e96e0" translate="yes" xml:space="preserve">
          <source>class.__array_wrap__()</source>
          <target state="translated">class.__array_wrap__()</target>
        </trans-unit>
        <trans-unit id="7ed97478eca204c1f821d1fae79c1deea507a835" translate="yes" xml:space="preserve">
          <source>clean separation of C code from Python code</source>
          <target state="translated">CコードとPythonコードのクリーンな分離</target>
        </trans-unit>
        <trans-unit id="9cbc9887757a8ca1dde87ae0ace22133564ffce6" translate="yes" xml:space="preserve">
          <source>clip() (in module numpy)</source>
          <target state="translated">clip()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="680d2a09594daf12a1069779369ffb2e1cea1b49" translate="yes" xml:space="preserve">
          <source>close() (numpy.nditer method)</source>
          <target state="translated">close()(numpy.nditerメソッド)</target>
        </trans-unit>
        <trans-unit id="dea690f0fa5f30339f0fce6a0df780f955bddb62" translate="yes" xml:space="preserve">
          <source>clump_masked() (in module numpy.ma)</source>
          <target state="translated">clump_masked()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="5a3dc284504dcbfd6d3cdf2f10e5cd49810a71f9" translate="yes" xml:space="preserve">
          <source>clump_unmasked() (in module numpy.ma)</source>
          <target state="translated">clump_unmasked()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="ca957dc587e9b2990f27289d4476b100c53685b9" translate="yes" xml:space="preserve">
          <source>code generation</source>
          <target state="translated">コード生成</target>
        </trans-unit>
        <trans-unit id="df58f74ab84d9fefcf0c7ccbd8033048f6bd78b7" translate="yes" xml:space="preserve">
          <source>coef() (numpy.poly1d property)</source>
          <target state="translated">coef()(numpy.poly1d プロパティ)</target>
        </trans-unit>
        <trans-unit id="eb61425ed72fb3da82763549e26c5a9eebf618c2" translate="yes" xml:space="preserve">
          <source>coefficients() (numpy.poly1d property)</source>
          <target state="translated">coefficients()(numpy.poly1d プロパティ)</target>
        </trans-unit>
        <trans-unit id="92ee54333e25bf863df2ae9faa5cbe5d7918b520" translate="yes" xml:space="preserve">
          <source>coeffs() (numpy.poly1d property)</source>
          <target state="translated">coeffs()(numpy.poly1d プロパティ)</target>
        </trans-unit>
        <trans-unit id="eaa53207ce05aebcca0109285580c37ac1e3becf" translate="yes" xml:space="preserve">
          <source>column_stack (in module numpy.ma)</source>
          <target state="translated">column_stack</target>
        </trans-unit>
        <trans-unit id="5181b8cc99ce5a4fc3774b9c56e8f4cd408132ad" translate="yes" xml:space="preserve">
          <source>column_stack() (in module numpy)</source>
          <target state="translated">column_stack()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="9c2a143c1a523e8c38ebec39b270288313b71c4b" translate="yes" xml:space="preserve">
          <source>combination of the four above</source>
          <target state="translated">四つ巴</target>
        </trans-unit>
        <trans-unit id="5b17a6c606a82dafd93db84a19945afe2d559ed4" translate="yes" xml:space="preserve">
          <source>comments</source>
          <target state="translated">comments</target>
        </trans-unit>
        <trans-unit id="ff51a47a2e8bd4a0e12b2a4ed15def10b2d33eda" translate="yes" xml:space="preserve">
          <source>common usage</source>
          <target state="translated">俗用</target>
        </trans-unit>
        <trans-unit id="5fb74f66daf091e7dd1ecb8bbcc70002005933a1" translate="yes" xml:space="preserve">
          <source>common_fill_value() (in module numpy.ma)</source>
          <target state="translated">common_fill_value()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="ee1112f12f38b67ae14011999ef5ec696959118c" translate="yes" xml:space="preserve">
          <source>common_type() (in module numpy)</source>
          <target state="translated">common_type()</target>
        </trans-unit>
        <trans-unit id="26f60a5cce0c6d5b2e57e18b2d35ae1e36416abf" translate="yes" xml:space="preserve">
          <source>compare()</source>
          <target state="translated">compare()</target>
        </trans-unit>
        <trans-unit id="97b0d35bb30049a5d45e02b1831278b4eda22f51" translate="yes" xml:space="preserve">
          <source>compare_chararrays() (in module numpy.char)</source>
          <target state="translated">compare_chararrays()(モジュール numpy.char内)</target>
        </trans-unit>
        <trans-unit id="2dbfe4ebcd8fee7857b685ad78e3ed0d7adacd5d" translate="yes" xml:space="preserve">
          <source>compares &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; element-wise, and returns the maximum value from each pair</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; を要素ごとに比較し、各ペアから最大値を返します</target>
        </trans-unit>
        <trans-unit id="0bc6bb94a5841680eac8b24c50f7f203bddf6efb" translate="yes" xml:space="preserve">
          <source>comparison operators automatically remove whitespace from the end when comparing values</source>
          <target state="translated">比較演算子は、値を比較する際に末尾の空白を自動的に削除します。</target>
        </trans-unit>
        <trans-unit id="5dc263fe5becfea01b176b6f2c59c47f5c9e30d7" translate="yes" xml:space="preserve">
          <source>compatible: C char</source>
          <target state="translated">互換性があります。C char</target>
        </trans-unit>
        <trans-unit id="b6f3616403b91bcca29c6d66deaa259fca1c71c2" translate="yes" xml:space="preserve">
          <source>compatible: C double</source>
          <target state="translated">互換性があります。Cダブル</target>
        </trans-unit>
        <trans-unit id="3a60ffd6205d40bc856a671fa4e08cfcd110cecb" translate="yes" xml:space="preserve">
          <source>compatible: C float</source>
          <target state="translated">互換性があります。Cフロート</target>
        </trans-unit>
        <trans-unit id="f073b6de757df35ba247c55c3964d7d52b773758" translate="yes" xml:space="preserve">
          <source>compatible: C int</source>
          <target state="translated">互換性があります。C int</target>
        </trans-unit>
        <trans-unit id="40b7f03aa1b19106a86c56ba50e037d5206c806b" translate="yes" xml:space="preserve">
          <source>compatible: C long float</source>
          <target state="translated">互換性があります。Cロングフロート</target>
        </trans-unit>
        <trans-unit id="cb723e2b32584378f30a8735a6ef6e7629ebbc6b" translate="yes" xml:space="preserve">
          <source>compatible: C long long</source>
          <target state="translated">互換性があります。Cロングロング</target>
        </trans-unit>
        <trans-unit id="ecc77366a9b31571ae5448cf05363adc208831d1" translate="yes" xml:space="preserve">
          <source>compatible: C short</source>
          <target state="translated">互換性があります。Cショート</target>
        </trans-unit>
        <trans-unit id="ed63752e426201568429c1b5c39a77e7730a00ec" translate="yes" xml:space="preserve">
          <source>compatible: C unsigned char</source>
          <target state="translated">互換性があります。C 符号なし文字</target>
        </trans-unit>
        <trans-unit id="6131bdfb33c7d418305b9d2cdc92ae85a5af9f2a" translate="yes" xml:space="preserve">
          <source>compatible: C unsigned int</source>
          <target state="translated">互換性があります。C 符号なし整数</target>
        </trans-unit>
        <trans-unit id="74f429a2c27a0294f21da19c5c441c9749998f2d" translate="yes" xml:space="preserve">
          <source>compatible: C unsigned short</source>
          <target state="translated">互換性があります。C 符号なしショート</target>
        </trans-unit>
        <trans-unit id="b6ba6a32bed64cf5a9232cd7c9d35670d71a6b95" translate="yes" xml:space="preserve">
          <source>compatible: Python bool</source>
          <target state="translated">互換性があります。Python bool</target>
        </trans-unit>
        <trans-unit id="3a7c3ba21e5c9b98ff9493b3a2332bc01da2acf9" translate="yes" xml:space="preserve">
          <source>compatible: Python bytes</source>
          <target state="translated">互換性があります。Pythonのバイト</target>
        </trans-unit>
        <trans-unit id="ac5c35fe3ca1ebc8ca06a8c3de46cf6805f05c2e" translate="yes" xml:space="preserve">
          <source>compatible: Python complex</source>
          <target state="translated">互換性があります。Pythonの複合体</target>
        </trans-unit>
        <trans-unit id="ccfe9ea4157b60f68bc564e103bab4c8e62c3310" translate="yes" xml:space="preserve">
          <source>compatible: Python float</source>
          <target state="translated">互換性があります。Pythonフロート</target>
        </trans-unit>
        <trans-unit id="deaa9d9b419b938f9c813fe1389b8e5d682c08bc" translate="yes" xml:space="preserve">
          <source>compatible: Python int</source>
          <target state="translated">互換性があります。Python int</target>
        </trans-unit>
        <trans-unit id="bb789842b4f097658b4d0daf408c1bf46047807e" translate="yes" xml:space="preserve">
          <source>compatible: Python unicode/str</source>
          <target state="translated">互換性があります。Python unicode/str</target>
        </trans-unit>
        <trans-unit id="cf1f717d197fc8e5974b4f9084d38a7f517dbc38" translate="yes" xml:space="preserve">
          <source>compile it as &lt;code&gt;f2py -c var.pyf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f2py -c var.pyf&lt;/code&gt; としてコンパイルします。</target>
        </trans-unit>
        <trans-unit id="e94672708cbf9704f4ee27f82bcad62b6b2d70a6" translate="yes" xml:space="preserve">
          <source>compile() (in module numpy.f2py)</source>
          <target state="translated">compile()(モジュール numpy.f2py内)</target>
        </trans-unit>
        <trans-unit id="6ff16b36dc77810e63bda254427a1d6965fa127a" translate="yes" xml:space="preserve">
          <source>complex</source>
          <target state="translated">complex</target>
        </trans-unit>
        <trans-unit id="b0943e701cd3bb43f80ab8d923713de62beda111" translate="yes" xml:space="preserve">
          <source>complex conjugate transpose of &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 複素共役転置</target>
        </trans-unit>
        <trans-unit id="ad5f2438020ae87682ba05a117c31fb76179fa10" translate="yes" xml:space="preserve">
          <source>complex floating-point</source>
          <target state="translated">複素浮動小数点</target>
        </trans-unit>
        <trans-unit id="5f1552bfeef0596a1536bf57e8099cc0fec3442d" translate="yes" xml:space="preserve">
          <source>complex numbers</source>
          <target state="translated">複素数</target>
        </trans-unit>
        <trans-unit id="1300290fac80e64e65c897cc636825b3bf98727c" translate="yes" xml:space="preserve">
          <source>complex types are structures with &lt;strong&gt;.real&lt;/strong&gt; and &lt;strong&gt;.imag&lt;/strong&gt; members (in that order).</source>
          <target state="translated">複合型が持つ構造であり&lt;strong&gt;.real&lt;/strong&gt;と&lt;strong&gt;.imag&lt;/strong&gt;メンバー（この順序で）。</target>
        </trans-unit>
        <trans-unit id="37255ef72b3305625faa9cc04c3ca5048e18518f" translate="yes" xml:space="preserve">
          <source>complex(nan, 0) is returned for complex nan inputs.</source>
          <target state="translated">complex(nan,0)が返されます.</target>
        </trans-unit>
        <trans-unit id="83690a45e3eae803665f74f69eb799f7d70796de" translate="yes" xml:space="preserve">
          <source>complex-floating point</source>
          <target state="translated">複素浮動点</target>
        </trans-unit>
        <trans-unit id="0b13cc5b0f5953c11cf1d66539462d9bcb70e018" translate="yes" xml:space="preserve">
          <source>complex64/128 alignment has changed</source>
          <target state="translated">complex64/128アライメントが変更されました</target>
        </trans-unit>
        <trans-unit id="a8ecd550185cdfbf4b5cafbacdff1b27a0b87521" translate="yes" xml:space="preserve">
          <source>compress() (in module numpy)</source>
          <target state="translated">compress()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="218780efbde5d9204ce60293a68ff078433666cc" translate="yes" xml:space="preserve">
          <source>compress_cols() (in module numpy.ma)</source>
          <target state="translated">compress_cols()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="0af94334dfdba15883b4e7bc82db6d65c835e9d7" translate="yes" xml:space="preserve">
          <source>compress_rowcols() (in module numpy.ma)</source>
          <target state="translated">compress_rowcols()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="fd181a95d3d7769923d4e132bc11e1ea445d7321" translate="yes" xml:space="preserve">
          <source>compress_rows() (in module numpy.ma)</source>
          <target state="translated">compress_rows()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="79d85deb7083b40b36a44b1a9e2315ffc8586953" translate="yes" xml:space="preserve">
          <source>compressed() (in module numpy.ma)</source>
          <target state="translated">compressed()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="fb0e376fc8d7e393fd9b910442739652e0dd4ba2" translate="yes" xml:space="preserve">
          <source>concatenate columns of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; の列を連結します</target>
        </trans-unit>
        <trans-unit id="15705caf5a52fa95cd0f7e6c8e82601d5e667bc7" translate="yes" xml:space="preserve">
          <source>concatenate rows of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; の行を連結します</target>
        </trans-unit>
        <trans-unit id="f91ae2afd16f23d8ea3d65e147dd86e528e568dc" translate="yes" xml:space="preserve">
          <source>concatenate() (in module numpy)</source>
          <target state="translated">コンカチネイト()</target>
        </trans-unit>
        <trans-unit id="fc716d4ba7af72a71b964ea7b0fa92e460cbfb88" translate="yes" xml:space="preserve">
          <source>cond() (in module numpy.linalg)</source>
          <target state="translated">cond()(モジュール numpy.linalg 内)</target>
        </trans-unit>
        <trans-unit id="2fd4587e9b05a828702a43458bd940605bda98e3" translate="yes" xml:space="preserve">
          <source>config.add_library(&amp;lsquo;library&amp;rsquo;,</source>
          <target state="translated">config.add_library(&amp;lsquo;library&amp;rsquo;,</target>
        </trans-unit>
        <trans-unit id="dd5850fedeefdc811cc0e445479ded0a6afde62b" translate="yes" xml:space="preserve">
          <source>config.add_library()</source>
          <target state="translated">config.add_library()</target>
        </trans-unit>
        <trans-unit id="331bf2074c9d970b8ebe6d7d8e2ba60e3c0d9866" translate="yes" xml:space="preserve">
          <source>config[&amp;lsquo;py_modules&amp;rsquo;].append((packagename, &amp;lsquo;__config__&amp;rsquo;,generate_config_py))</source>
          <target state="translated">config ['py_modules']。append（（packagename、 '__config __'、generate_config_py））</target>
        </trans-unit>
        <trans-unit id="e7d221bc608c207651cb22ffcbfb4f98d40bfefe" translate="yes" xml:space="preserve">
          <source>conj (in module numpy)</source>
          <target state="translated">コンジュ</target>
        </trans-unit>
        <trans-unit id="88b2d853129bb96da374c264dda50b4a2bf96df3" translate="yes" xml:space="preserve">
          <source>conj() (numpy.char.chararray method)</source>
          <target state="translated">conj()(numpy.char.chararrayメソッド)</target>
        </trans-unit>
        <trans-unit id="b542e61b6615b008eb010688839358da2c33cf6b" translate="yes" xml:space="preserve">
          <source>conjugate (in module numpy)</source>
          <target state="translated">コンジュゲート</target>
        </trans-unit>
        <trans-unit id="09458903a66f4f5ddf09614672302dc4447ff56f" translate="yes" xml:space="preserve">
          <source>conjugate transpose of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">の共役転置 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7fe5a4e2ecb76563c81a9572f8e828cb60f7005" translate="yes" xml:space="preserve">
          <source>conjugate() (numpy.char.chararray method)</source>
          <target state="translated">conjugate()(numpy.char.chararrayメソッド)</target>
        </trans-unit>
        <trans-unit id="b99126cb52e0ea3c508cec2b545109557b209042" translate="yes" xml:space="preserve">
          <source>construct a matrix from blocks &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;, and &lt;code&gt;d&lt;/code&gt;</source>
          <target state="translated">ブロック &lt;code&gt;a&lt;/code&gt; 、 &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;c&lt;/code&gt; 、および &lt;code&gt;d&lt;/code&gt; から行列を作成します</target>
        </trans-unit>
        <trans-unit id="535ae678fd33caa22f33566744706724ad7aa74c" translate="yes" xml:space="preserve">
          <source>construction</source>
          <target state="translated">construction</target>
        </trans-unit>
        <trans-unit id="aec35663cc08bdfda3337cd75b03461267a7d043" translate="yes" xml:space="preserve">
          <source>construction from None</source>
          <target state="translated">なしからの構築</target>
        </trans-unit>
        <trans-unit id="619db471a0cc5d1c0f349ad38fad5c7e6ba9e0f7" translate="yes" xml:space="preserve">
          <source>construction from dict</source>
          <target state="translated">ディクティクトコンストラクション</target>
        </trans-unit>
        <trans-unit id="061c0ead9fabb1afe0c755f8366b03529737c520" translate="yes" xml:space="preserve">
          <source>construction from dtype</source>
          <target state="translated">dtypeからの構築</target>
        </trans-unit>
        <trans-unit id="bf3f3709ecc8a88566bd68e6f49e96490f9d45f4" translate="yes" xml:space="preserve">
          <source>construction from list</source>
          <target state="translated">リストからの構築</target>
        </trans-unit>
        <trans-unit id="ed53fb7a389bc8af6889decf80c45711a8378acf" translate="yes" xml:space="preserve">
          <source>construction from string</source>
          <target state="translated">紐組み</target>
        </trans-unit>
        <trans-unit id="ee0f4cf7c24d0a7489f0e61bcbdf105b79c8cc1a" translate="yes" xml:space="preserve">
          <source>construction from tuple</source>
          <target state="translated">タプル構造</target>
        </trans-unit>
        <trans-unit id="94306437aee7a7084e7a3c861e9cd25b7f24b88b" translate="yes" xml:space="preserve">
          <source>construction from type</source>
          <target state="translated">しゅるいこうぞう</target>
        </trans-unit>
        <trans-unit id="27be7169704392d4362795301a4837999e54a9dd" translate="yes" xml:space="preserve">
          <source>container (class in numpy.lib.user_array)</source>
          <target state="translated">コンテナ</target>
        </trans-unit>
        <trans-unit id="e1f0fc60613e7adfd585ec813dd3608c9a83a720" translate="yes" xml:space="preserve">
          <source>container class</source>
          <target state="translated">コンテナクラス</target>
        </trans-unit>
        <trans-unit id="3e424f4b706c2b2fa77351a6eefa4c650e2a096c" translate="yes" xml:space="preserve">
          <source>contiguous</source>
          <target state="translated">contiguous</target>
        </trans-unit>
        <trans-unit id="7b918272e30440e5c56aa0161da73b18f0b209c6" translate="yes" xml:space="preserve">
          <source>control how NumPy reports contiguity for arrays. The default that it is enabled and the debug mode is disabled. This setting should always be enabled. Setting the debug option can be interesting for testing code written in C which iterates through arrays that may or may not be contiguous in memory. Most users will have no reason to change these, for details please see the &lt;a href=&quot;https://numpy.org/doc/1.19/reference/memory-layout&quot;&gt;memory layout&lt;/a&gt; documentation.</source>
          <target state="translated">NumPyが配列の隣接性を報告する方法を制御します。デフォルトでは有効で、デバッグモードは無効です。この設定は常に有効にする必要があります。デバッグオプションの設定は、メモリ内で連続している場合と隣接していない場合がある配列を反復処理するCで記述されたコードをテストする場合に役立ちます。ほとんどのユーザーはこれらを変更する理由はありません。詳細については、&lt;a href=&quot;https://numpy.org/doc/1.19/reference/memory-layout&quot;&gt;メモリレイアウトの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="861b5e7fd92cf98d6d3545cff1ed489ad723f192" translate="yes" xml:space="preserve">
          <source>convert single-element &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Union&quot;&gt;&lt;code&gt;ctypes.Union&lt;/code&gt;&lt;/a&gt;s into single-element &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Structure&quot;&gt;&lt;code&gt;ctypes.Structure&lt;/code&gt;&lt;/a&gt;s</source>
          <target state="translated">単一要素変換&lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Union&quot;&gt; &lt;code&gt;ctypes.Union&lt;/code&gt; &lt;/a&gt; sが単一要素に&lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Structure&quot;&gt; &lt;code&gt;ctypes.Structure&lt;/code&gt; &lt;/a&gt; S</target>
        </trans-unit>
        <trans-unit id="b6531a385cf45309a968877a5b25982769948f9d" translate="yes" xml:space="preserve">
          <source>convert() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="translated">convert()(numpy.polynomial.chebyshev.Chebyshev メソッド)</target>
        </trans-unit>
        <trans-unit id="803f2e67aba54c292351bfae281e163242c28125" translate="yes" xml:space="preserve">
          <source>convolve() (in module numpy)</source>
          <target state="translated">convolve()</target>
        </trans-unit>
        <trans-unit id="0f424b5cb8f1c3681591bbe06573826adce5581a" translate="yes" xml:space="preserve">
          <source>coordinate of the outgoing ray&amp;rsquo;s intersection with the unit circle is the sine of that angle. It ranges from -1 for</source>
          <target state="translated">単位光線と出て行く光線の交点の座標は、その角度のサインです。-1から</target>
        </trans-unit>
        <trans-unit id="e3b8af52da659b911061b76c9fab2709d9a1ace6" translate="yes" xml:space="preserve">
          <source>coords (numpy.flatiter attribute)</source>
          <target state="translated">coords (numpy.flatiter属性)</target>
        </trans-unit>
        <trans-unit id="64128964e651ff8647e51e7e28a126f42d2615dc" translate="yes" xml:space="preserve">
          <source>copy (in module numpy.ma)</source>
          <target state="translated">コピー</target>
        </trans-unit>
        <trans-unit id="8b7a5a6dab2979b222e8a439e53e4872290cef05" translate="yes" xml:space="preserve">
          <source>copy() (in module numpy)</source>
          <target state="translated">コピー()</target>
        </trans-unit>
        <trans-unit id="6545e8d6dcdd2eb58c6821c24f89d1f32babb595" translate="yes" xml:space="preserve">
          <source>copy=True</source>
          <target state="translated">copy=True</target>
        </trans-unit>
        <trans-unit id="25f60c889e8ea8c0e2ade969ec8faf5052c61227" translate="yes" xml:space="preserve">
          <source>copying and possibly casting data for any inputs or outputs for which buffers are necessary.</source>
          <target state="translated">バッファが必要な入力または出力のデータをコピーしたり、場合によってはキャストしたりします。</target>
        </trans-unit>
        <trans-unit id="7887079595c277c87f68e757745e208bf0eaf3f5" translate="yes" xml:space="preserve">
          <source>copysign (in module numpy)</source>
          <target state="translated">コピサイン</target>
        </trans-unit>
        <trans-unit id="45a0dabeeb29109bc2d28ed0ebf2023e137ec5fa" translate="yes" xml:space="preserve">
          <source>copyswap()</source>
          <target state="translated">copyswap()</target>
        </trans-unit>
        <trans-unit id="876097f4459c7470d6688d9ce159e4a8ccab704e" translate="yes" xml:space="preserve">
          <source>copyswapn()</source>
          <target state="translated">copyswapn()</target>
        </trans-unit>
        <trans-unit id="554d0ebac3e6a8e42c4fb3edf33badce9b18867d" translate="yes" xml:space="preserve">
          <source>copyto() (in module numpy)</source>
          <target state="translated">copyto()</target>
        </trans-unit>
        <trans-unit id="b69afa0cf7141ebe0769d69668ad22a513252d4a" translate="yes" xml:space="preserve">
          <source>corrcoef() (in module numpy)</source>
          <target state="translated">corrcoef()</target>
        </trans-unit>
        <trans-unit id="3ef9f14d827f119ffa999ccc18cc855663164c0d" translate="yes" xml:space="preserve">
          <source>correlate</source>
          <target state="translated">correlate</target>
        </trans-unit>
        <trans-unit id="0819b5cb17864456f838a7fe51d62f185b23f8f6" translate="yes" xml:space="preserve">
          <source>correlate() (in module numpy)</source>
          <target state="translated">correlate()</target>
        </trans-unit>
        <trans-unit id="d2aed0bd06b228213d0a27ddb7443f7f45243234" translate="yes" xml:space="preserve">
          <source>corresponding function for ndarrays</source>
          <target state="translated">ndarraysに対応する関数</target>
        </trans-unit>
        <trans-unit id="0e637d88d91207fbb6f4c83b59c00afe528d0db4" translate="yes" xml:space="preserve">
          <source>corresponds to the offset (in bytes):</source>
          <target state="translated">はオフセット(バイト数)に対応します。</target>
        </trans-unit>
        <trans-unit id="d8cf3ac7dca60449e1a426216ec4b31a8ff3319b" translate="yes" xml:space="preserve">
          <source>cos (in module numpy)</source>
          <target state="translated">cos</target>
        </trans-unit>
        <trans-unit id="fd5f600b0fd36d468bcf8ff06532f55c661bb273" translate="yes" xml:space="preserve">
          <source>cosh (in module numpy)</source>
          <target state="translated">cosh</target>
        </trans-unit>
        <trans-unit id="e4899ed91ff28b42a34bdd8392418d83db4fbcae" translate="yes" xml:space="preserve">
          <source>count (in module numpy.ma)</source>
          <target state="translated">カウント</target>
        </trans-unit>
        <trans-unit id="74e3384425df18d7c6074da119ee809e26d021cb" translate="yes" xml:space="preserve">
          <source>count() (in module numpy.char)</source>
          <target state="translated">count()</target>
        </trans-unit>
        <trans-unit id="b5d6b9e022b20667b3a5157c9095d113489b0094" translate="yes" xml:space="preserve">
          <source>count_masked() (in module numpy.ma)</source>
          <target state="translated">count_masked()(in module numpy.ma)</target>
        </trans-unit>
        <trans-unit id="8b0c36250408d33c1092f36bec343df0b811acf1" translate="yes" xml:space="preserve">
          <source>count_nonzero() (in module numpy)</source>
          <target state="translated">count_nonzero()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="55610ff1e73080b27b25157ecb3ac05a69d9949f" translate="yes" xml:space="preserve">
          <source>cov has new &lt;code&gt;fweights&lt;/code&gt; and &lt;code&gt;aweights&lt;/code&gt; arguments</source>
          <target state="translated">&lt;code&gt;fweights&lt;/code&gt; は新しいfweightsと &lt;code&gt;aweights&lt;/code&gt; の引数があります</target>
        </trans-unit>
        <trans-unit id="c924f51f0e3833a81d6586f90143113d99b7c253" translate="yes" xml:space="preserve">
          <source>cov() (in module numpy)</source>
          <target state="translated">cov()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="25f153565c312fd00c39eaba2a67c74150b8be62" translate="yes" xml:space="preserve">
          <source>cpu (in module numpy.distutils.cpuinfo)</source>
          <target state="translated">cpu (モジュール numpy.distutils.cpuinfo 内)</target>
        </trans-unit>
        <trans-unit id="46be831c51c8e766d2aebaf7fe6dbef35f54919c" translate="yes" xml:space="preserve">
          <source>create a (read-only) record array from binary data contained in a string</source>
          <target state="translated">文字列に含まれるバイナリデータからレコード配列を作成します。</target>
        </trans-unit>
        <trans-unit id="96928416e78912a094542c866c95adc9aadf5052" translate="yes" xml:space="preserve">
          <source>create a column vector</source>
          <target state="translated">列ベクトルを作る</target>
        </trans-unit>
        <trans-unit id="28244d98521e9496fe84466a769190fe12dd1c67" translate="yes" xml:space="preserve">
          <source>create a recarray from a list of records in text form</source>
          <target state="translated">テキスト形式のレコードリストから再配列を作成する</target>
        </trans-unit>
        <trans-unit id="9767e68c8095efd4a9ea33ce259a6b88dbcf7a7a" translate="yes" xml:space="preserve">
          <source>create a record array from a (flat) list of arrays</source>
          <target state="translated">配列のリストからレコード配列を作成する</target>
        </trans-unit>
        <trans-unit id="face545fd1960961b918d9a8a47eb4713dc21cfe" translate="yes" xml:space="preserve">
          <source>create an increasing vector (see note &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;RANGES&lt;/a&gt;)</source>
          <target state="translated">増加するベクトルを作成します（注&lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;RANGESを&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="22cae5779e25221a7188951fbd20226638b98aab" translate="yes" xml:space="preserve">
          <source>create m by n copies of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; のコピーをn個ずつm個作成する</target>
        </trans-unit>
        <trans-unit id="8f8915bde7fef5934e28dee4ffea11584d399bef" translate="yes" xml:space="preserve">
          <source>creating a C-structure (usually named &lt;code&gt;Py{Name}Object&lt;/code&gt;) that is binary- compatible with the &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure itself but holds the additional information needed for that particular object;</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;/a&gt;構造自体とバイナリ互換ですが、その特定のオブジェクトに必要な追加情報を保持するC構造（通常は &lt;code&gt;Py{Name}Object&lt;/code&gt; という名前）を作成します。</target>
        </trans-unit>
        <trans-unit id="e6ad82f0e649e82403b39a772f1294f3512a9ac1" translate="yes" xml:space="preserve">
          <source>cross product where the last dimension is frozen and must be 3</source>
          <target state="translated">最後の寸法が凍結されており、3でなければならないクロス積</target>
        </trans-unit>
        <trans-unit id="c2d24a8a1de91728a57aa001330acdd6d624c5f0" translate="yes" xml:space="preserve">
          <source>cross() (in module numpy)</source>
          <target state="translated">cross()</target>
        </trans-unit>
        <trans-unit id="50f38d1083792f074814a156b3c79ea8aa55d751" translate="yes" xml:space="preserve">
          <source>cross1d</source>
          <target state="translated">cross1d</target>
        </trans-unit>
        <trans-unit id="0d8768fe8ed5b3b50f265d1b36511b5e36a8af83" translate="yes" xml:space="preserve">
          <source>ctypes</source>
          <target state="translated">ctypes</target>
        </trans-unit>
        <trans-unit id="2f90aad65618261442aaa7b81c1ca6286bc79806" translate="yes" xml:space="preserve">
          <source>ctypes interface</source>
          <target state="translated">シータイズインタフェース</target>
        </trans-unit>
        <trans-unit id="7c233d6bf43eb8eb1a3399298814ad44729dd73b" translate="yes" xml:space="preserve">
          <source>ctypes_load_library() (in module numpy.ctypeslib)</source>
          <target state="translated">ctypes_load_library()(in module numpy.ctypeslib)</target>
        </trans-unit>
        <trans-unit id="2f4fb557e103b7c59a646b4d99dd1afeb342195f" translate="yes" xml:space="preserve">
          <source>cumprod (in module numpy.ma)</source>
          <target state="translated">キュムプロード</target>
        </trans-unit>
        <trans-unit id="0c4fa9d9d661e7bef173fe528cb68b0cf53de4d2" translate="yes" xml:space="preserve">
          <source>cumprod() (in module numpy)</source>
          <target state="translated">cumprod()</target>
        </trans-unit>
        <trans-unit id="2ed10f79103330788aa67575f6aa78092c158c66" translate="yes" xml:space="preserve">
          <source>cumsum (in module numpy.ma)</source>
          <target state="translated">クサムサム</target>
        </trans-unit>
        <trans-unit id="f866c480db2f514a1660097cf32c8431936583bf" translate="yes" xml:space="preserve">
          <source>cumsum() (in module numpy)</source>
          <target state="translated">cumsumum()</target>
        </trans-unit>
        <trans-unit id="1d459f0c1fe5f3263aa5ba320fbfa6f7fbe6b0d4" translate="yes" xml:space="preserve">
          <source>current index in broadcasted result</source>
          <target state="translated">ブロードキャスト結果の現在のインデックス</target>
        </trans-unit>
        <trans-unit id="9bc6d7f5cdc982a5b5c64e1cdc1dd46448191ac1" translate="yes" xml:space="preserve">
          <source>cutdeg() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="translated">cutdeg()(numpy.polynomial.chebyshev.Chebyshev メソッド)</target>
        </trans-unit>
        <trans-unit id="58e50bc9c0407076689ad3679715778c25d47a4a" translate="yes" xml:space="preserve">
          <source>cyan_text() (in module numpy.distutils.misc_util)</source>
          <target state="translated">cyan_text()(モジュール numpy.distutils.misc_util 内)</target>
        </trans-unit>
        <trans-unit id="b84307c339632db39e0ce17c36ea17f79f71aa21" translate="yes" xml:space="preserve">
          <source>cyg2win32() (in module numpy.distutils.misc_util)</source>
          <target state="translated">cyg2win32()(モジュール numpy.distutils.misc_util 内)</target>
        </trans-unit>
        <trans-unit id="b798d5ed9f6178d7bd39c0cc2eebe6889dd57698" translate="yes" xml:space="preserve">
          <source>cygwin</source>
          <target state="translated">cygwin</target>
        </trans-unit>
        <trans-unit id="f523ad3731da084ec2bff871d3db747f1c8312ae" translate="yes" xml:space="preserve">
          <source>cython (pip)</source>
          <target state="translated">シソン</target>
        </trans-unit>
        <trans-unit id="34dc8e1804c0a14aeb717e91af443219be617042" translate="yes" xml:space="preserve">
          <source>darwin</source>
          <target state="translated">darwin</target>
        </trans-unit>
        <trans-unit id="42e30f210e53327143149ff57680b735bb58bd12" translate="yes" xml:space="preserve">
          <source>data (numpy.char.chararray attribute)</source>
          <target state="translated">データ(numpy.char.chararray属性)</target>
        </trans-unit>
        <trans-unit id="06f89efb403077b8873b790bff97f657cfbcca59" translate="yes" xml:space="preserve">
          <source>data in the same field may be heterogeneous - they will be promoted to the highest data type.</source>
          <target state="translated">同じフィールド内のデータは異種である可能性があります-それらは最も高いデータタイプに昇格します。</target>
        </trans-unit>
        <trans-unit id="514b6c186c35fc54539a61efdeaf6a526df3d22d" translate="yes" xml:space="preserve">
          <source>data() (numpy.ma.masked_array property)</source>
          <target state="translated">data()(numpy.ma.masked_array プロパティ)</target>
        </trans-unit>
        <trans-unit id="0698e178c43f5ca032d10e380d5ce7d033ef4d81" translate="yes" xml:space="preserve">
          <source>datatype</source>
          <target state="translated">datatype</target>
        </trans-unit>
        <trans-unit id="78c2bf962c7ff4a2ba578da59e1c6984d83fdf48" translate="yes" xml:space="preserve">
          <source>datatype for output array</source>
          <target state="translated">出力配列のデータ型</target>
        </trans-unit>
        <trans-unit id="89ffad089c042f31dcc81269da38bef3ca44ab1f" translate="yes" xml:space="preserve">
          <source>datetime</source>
          <target state="translated">datetime</target>
        </trans-unit>
        <trans-unit id="f4c5786955a445c0963519000260e83ec90369c0" translate="yes" xml:space="preserve">
          <source>datetime64 changes</source>
          <target state="translated">datetime64 の変更</target>
        </trans-unit>
        <trans-unit id="adc91338119543bcb36b467b5bdc026e4c377893" translate="yes" xml:space="preserve">
          <source>datetime_as_string() (in module numpy)</source>
          <target state="translated">datetime_as_string()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="bf0a49bdb65081ff86949c61b690c41007f12456" translate="yes" xml:space="preserve">
          <source>datetime_data() (in module numpy)</source>
          <target state="translated">datetime_data()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="a2620cbc10f5198dd03e3f5a1569eb5dcf9a6a87" translate="yes" xml:space="preserve">
          <source>day</source>
          <target state="translated">day</target>
        </trans-unit>
        <trans-unit id="a6cdce3593be9ec2a29961e2959ec8706e35990b" translate="yes" xml:space="preserve">
          <source>debug_print() (numpy.nditer method)</source>
          <target state="translated">debug_print()(numpy.nditerメソッド)</target>
        </trans-unit>
        <trans-unit id="8f613003a3dc4ce3c0aa2ed1706a981b4a8efb7e" translate="yes" xml:space="preserve">
          <source>deciding whether or not to use buffers on the input and output data (mis-aligned and/or wrong data-type)</source>
          <target state="translated">入出力データにバッファを使用するかどうかの判断 (データ型のずれやデータ型の間違い)</target>
        </trans-unit>
        <trans-unit id="54f474fba3feafcf251e509610cb8602d9dc5a00" translate="yes" xml:space="preserve">
          <source>decode() (in module numpy.char)</source>
          <target state="translated">decode()</target>
        </trans-unit>
        <trans-unit id="75d994b7d1398cf793a6568add61044b6dc8996b" translate="yes" xml:space="preserve">
          <source>decorate_methods() (in module numpy.testing)</source>
          <target state="translated">decorate_methods()(in module numpy.testing)</target>
        </trans-unit>
        <trans-unit id="52d03a285acbd7b1cb4c0af2f80e9e9db926c0c9" translate="yes" xml:space="preserve">
          <source>decreases. The covariance matrix shows this clearly:</source>
          <target state="translated">が減少します.共分散行列はこのことをはっきりと示しています。</target>
        </trans-unit>
        <trans-unit id="107500c863824eeac2f4fdc0078c651f143cb594" translate="yes" xml:space="preserve">
          <source>decreasing</source>
          <target state="translated">decreasing</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="5af8b24e6660e5b09f43329b07dade58389bf5d1" translate="yes" xml:space="preserve">
          <source>default_config_dict() (in module numpy.distutils.misc_util)</source>
          <target state="translated">default_config_dict()(in module numpy.distutils.misc_util)</target>
        </trans-unit>
        <trans-unit id="30be42fd575d90a8a1f735dc861100439e9bf428" translate="yes" xml:space="preserve">
          <source>default_fill_value() (in module numpy.ma)</source>
          <target state="translated">default_fill_value()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="739887860d6f7e3bce7e67a673f401c907c33d62" translate="yes" xml:space="preserve">
          <source>default_rng() (in module numpy.random)</source>
          <target state="translated">default_rng()(モジュール numpy.random 内)</target>
        </trans-unit>
        <trans-unit id="6db774abb0c25975b61f6aa91c052ddf0e296ad2" translate="yes" xml:space="preserve">
          <source>deg2rad (in module numpy)</source>
          <target state="translated">デグ2ラッド</target>
        </trans-unit>
        <trans-unit id="7accea69b7734c0c2b18d5e687964c7c1ffe4437" translate="yes" xml:space="preserve">
          <source>degree() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="translated">degree()(numpy.polynomial.chebyshev.Chebyshevメソッド)</target>
        </trans-unit>
        <trans-unit id="454cc71cfccab4ce788458f6f97499557ea2a1ab" translate="yes" xml:space="preserve">
          <source>degrees (in module numpy)</source>
          <target state="translated">度</target>
        </trans-unit>
        <trans-unit id="0faeac4cdc5db6015136032d25c2e8590f786ad5" translate="yes" xml:space="preserve">
          <source>delete() (in module numpy)</source>
          <target state="translated">delete()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="47447d88f3f3309c863bfbcdeedb644af73f6345" translate="yes" xml:space="preserve">
          <source>delocate (pip)</source>
          <target state="translated">デロケート</target>
        </trans-unit>
        <trans-unit id="5c0ec4c984cc2ae2eeaa723f06ebd1937df5e588" translate="yes" xml:space="preserve">
          <source>depends</source>
          <target state="translated">depends</target>
        </trans-unit>
        <trans-unit id="851a320e62543d474e18f6b5c2e5af2289800d1f" translate="yes" xml:space="preserve">
          <source>deprecate() (in module numpy)</source>
          <target state="translated">deprecate()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="dcb9f70c195028c2d85a67e91040b240613488ca" translate="yes" xml:space="preserve">
          <source>deprecate_with_doc() (in module numpy)</source>
          <target state="translated">deprecate_with_doc()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="56b0a13637baa92a244b091eea3d262238f94f2f" translate="yes" xml:space="preserve">
          <source>deprecated and removed features</source>
          <target state="translated">非推奨および削除された機能</target>
        </trans-unit>
        <trans-unit id="9ae976c3c0d316d843524434d94d2e9020a3d2c6" translate="yes" xml:space="preserve">
          <source>deprecated() (in module numpy.testing.dec)</source>
          <target state="translated">deprecated()(モジュール numpy.testing.dec 内)</target>
        </trans-unit>
        <trans-unit id="9deaad8e848c8a74deed6f2e84ae1d6efe134727" translate="yes" xml:space="preserve">
          <source>deriv() (numpy.poly1d method)</source>
          <target state="translated">誘導体()(numpy.poly1dメソッド)</target>
        </trans-unit>
        <trans-unit id="bddb160f8427059ace03b13012a6cdcafcdb690f" translate="yes" xml:space="preserve">
          <source>derivative of a polynomial</source>
          <target state="translated">多項式の導関数</target>
        </trans-unit>
        <trans-unit id="f62d7584e9b1d09a6e5bf09ee14b092d7c6ef992" translate="yes" xml:space="preserve">
          <source>descr (numpy.dtype attribute)</source>
          <target state="translated">descr (numpy.dtype属性)</target>
        </trans-unit>
        <trans-unit id="63df73b031f4d587816621dedd13df2f4f9e81ee" translate="yes" xml:space="preserve">
          <source>describes the probability of</source>
          <target state="translated">の確率を記述します。</target>
        </trans-unit>
        <trans-unit id="1ad78bff8f556c8aead44f520b1070ea02bbee01" translate="yes" xml:space="preserve">
          <source>det() (in module numpy.linalg)</source>
          <target state="translated">det()(モジュール numpy.linalg 内)</target>
        </trans-unit>
        <trans-unit id="d4e6e3c01fac8a2d031ca58cc4de7fe5906dc8df" translate="yes" xml:space="preserve">
          <source>determine a data-type from formats, names, titles.</source>
          <target state="translated">フォーマット、名前、タイトルからデータ型を決定します。</target>
        </trans-unit>
        <trans-unit id="d1e88d5d8c5a5ef55ff37e23074e335855f4b83e" translate="yes" xml:space="preserve">
          <source>diag() (in module numpy)</source>
          <target state="translated">diag()</target>
        </trans-unit>
        <trans-unit id="2d73149578affe290c5b827d7329105c5e2d9268" translate="yes" xml:space="preserve">
          <source>diag_indices() (in module numpy)</source>
          <target state="translated">diag_indices()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="9f7d32e921f1db641fd428954cb8421d63deac7c" translate="yes" xml:space="preserve">
          <source>diag_indices_from() (in module numpy)</source>
          <target state="translated">diag_indices_from()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="381ce62e558c0b0171ba55b71c3fa5c89a9ed0cb" translate="yes" xml:space="preserve">
          <source>diagflat() (in module numpy)</source>
          <target state="translated">diagflat()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="b3b8d9663e32a5a6835c5d75b18e60b7e06176ac" translate="yes" xml:space="preserve">
          <source>diagonal 2-D array from a 1-D array specified by the user.</source>
          <target state="translated">ユーザが指定した1次元配列から斜め2次元配列を作成します.</target>
        </trans-unit>
        <trans-unit id="1a7489d7507ae9b4ab35a6e875d77cffdde56bad" translate="yes" xml:space="preserve">
          <source>diagonal() (in module numpy)</source>
          <target state="translated">対角線()</target>
        </trans-unit>
        <trans-unit id="c3aff8b3352ae4e5762d729395050e4c8c2d165d" translate="yes" xml:space="preserve">
          <source>dict or list of dict of keywords to be appended to keywords.</source>
          <target state="translated">キーワードに付加するキーワードのdictまたはdictのリスト。</target>
        </trans-unit>
        <trans-unit id="81b9e3a36870077b605d0d27515b92425c2b85fd" translate="yes" xml:space="preserve">
          <source>dict_append() (in module numpy.distutils.misc_util)</source>
          <target state="translated">dict_append()(モジュール numpy.distutils.misc_util 内)</target>
        </trans-unit>
        <trans-unit id="aad1af87e892ceb09bbeb99ee884890585bb0f3a" translate="yes" xml:space="preserve">
          <source>diff() (in module numpy)</source>
          <target state="translated">diff()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="5b7dcedc53b850c418147bf57c20afb93f4e6a5c" translate="yes" xml:space="preserve">
          <source>digit so that negative &lt;em&gt;decimals&lt;/em&gt; cause rounding to the nearest 10&amp;rsquo;s, 100&amp;rsquo;s, etc. If out is &lt;code&gt;NULL&lt;/code&gt;, then the output array is created, otherwise the output is placed in &lt;em&gt;out&lt;/em&gt; which must be the correct size and type.</source>
          <target state="translated">負の&lt;em&gt;小数&lt;/em&gt;が10、100などに最も近い値に丸められるように桁を指定し &lt;code&gt;NULL&lt;/code&gt; がNULLの場合、出力配列が作成されます。それ以外の場合、出力は&lt;em&gt;outに&lt;/em&gt;配置さ&lt;em&gt;れ&lt;/em&gt;、正しいサイズとタイプでなければなりません。</target>
        </trans-unit>
        <trans-unit id="8e9a864e42514122e2addf6438f0b4a859e55b83" translate="yes" xml:space="preserve">
          <source>digitize() (in module numpy)</source>
          <target state="translated">digitize()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="47c51ca3143a5014455bedb536ca110a69960b1b" translate="yes" xml:space="preserve">
          <source>dimension or stride input arguments are now passed by &lt;code&gt;npy_intp const*&lt;/code&gt;</source>
          <target state="translated">次元またはストライド入力引数が &lt;code&gt;npy_intp const*&lt;/code&gt; によって渡されるようになりました</target>
        </trans-unit>
        <trans-unit id="770ead4b281a69b87ba814ae4b8562f19f32d83e" translate="yes" xml:space="preserve">
          <source>dimension.</source>
          <target state="translated">dimension.</target>
        </trans-unit>
        <trans-unit id="1e24bf4d3a658b06aab2a246837548270b36e18d" translate="yes" xml:space="preserve">
          <source>dimension. If dim is negative, then the dimension with the largest axis is found and used.</source>
          <target state="translated">次元を指定します。dimが負の場合、最大の軸を持つ次元が検出され、使用されます。</target>
        </trans-unit>
        <trans-unit id="3e61d25cc9eb0d69f33b6a8518b99e9e1980400e" translate="yes" xml:space="preserve">
          <source>dimensions of array</source>
          <target state="translated">配列の次元</target>
        </trans-unit>
        <trans-unit id="b34287d3d8d0e7f58de46824d7fc6802d8a63b6d" translate="yes" xml:space="preserve">
          <source>dirichlet() (in module numpy.random)</source>
          <target state="translated">dirichlet()(モジュール numpy.random内)</target>
        </trans-unit>
        <trans-unit id="65af0351bcffcd198b7a8e7072a7a52674156c38" translate="yes" xml:space="preserve">
          <source>discard field titles</source>
          <target state="translated">フィールドタイトルを破棄する</target>
        </trans-unit>
        <trans-unit id="5d196e9b488404692df582fc83d89cd86c1de7d2" translate="yes" xml:space="preserve">
          <source>discard the class names of &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Structure&quot;&gt;&lt;code&gt;ctypes.Structure&lt;/code&gt;&lt;/a&gt;s and &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Union&quot;&gt;&lt;code&gt;ctypes.Union&lt;/code&gt;&lt;/a&gt;s</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Structure&quot;&gt; &lt;code&gt;ctypes.Structure&lt;/code&gt; &lt;/a&gt; sと&lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Union&quot;&gt; &lt;code&gt;ctypes.Union&lt;/code&gt; &lt;/a&gt; s のクラス名を破棄する</target>
        </trans-unit>
        <trans-unit id="efdc42df013315243fe9c974d7c2ce715499cdbb" translate="yes" xml:space="preserve">
          <source>disp() (in module numpy)</source>
          <target state="translated">disp()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="866ca3152fe58aab8fea8f1f36dcef620b6854ec" translate="yes" xml:space="preserve">
          <source>distribution is a generalization of the</source>
          <target state="translated">の一般化です。</target>
        </trans-unit>
        <trans-unit id="82e943d406bbded98c104127488b1c684b96ea19" translate="yes" xml:space="preserve">
          <source>distribution.</source>
          <target state="translated">distribution.</target>
        </trans-unit>
        <trans-unit id="9d5c61b50b1fb9f50174dc923990e3b1afb8515b" translate="yes" xml:space="preserve">
          <source>distutils</source>
          <target state="translated">distutils</target>
        </trans-unit>
        <trans-unit id="2f77ebbb3a69cfc4c27845ee54925ad5ce6e475f" translate="yes" xml:space="preserve">
          <source>distutils.misc_util</source>
          <target state="translated">distutils.misc_util</target>
        </trans-unit>
        <trans-unit id="7a8df13a7cbf2465e1047ade0c4269ebc193d217" translate="yes" xml:space="preserve">
          <source>divide (in module numpy)</source>
          <target state="translated">割り算</target>
        </trans-unit>
        <trans-unit id="1f0fd2d43d9087e688e8de6afa22244319c890f3" translate="yes" xml:space="preserve">
          <source>divide : divide by zero (for integers as well!)</source>
          <target state="translated">divide:ゼロで割る (整数でも可)</target>
        </trans-unit>
        <trans-unit id="f6019054f02ac7a53244c4cd2c825272a147f164" translate="yes" xml:space="preserve">
          <source>divmod (in module numpy)</source>
          <target state="translated">divmod</target>
        </trans-unit>
        <trans-unit id="cc9c31f3e79aa90255a8e8b22a1531b34440c436" translate="yes" xml:space="preserve">
          <source>divmod operation is now supported for two &lt;code&gt;timedelta64&lt;/code&gt; operands</source>
          <target state="translated">divmod操作が2つの &lt;code&gt;timedelta64&lt;/code&gt; オペランドでサポートされるようになりました</target>
        </trans-unit>
        <trans-unit id="eadcd9bd2a09c75aef04954e6799e50278ee124a" translate="yes" xml:space="preserve">
          <source>do</source>
          <target state="translated">do</target>
        </trans-unit>
        <trans-unit id="4d05566dfc6bae47522d03d4262d6037630ed367" translate="yes" xml:space="preserve">
          <source>do_something()</source>
          <target state="translated">do_something()</target>
        </trans-unit>
        <trans-unit id="991df3b771771a539ddbf4310717613161e94259" translate="yes" xml:space="preserve">
          <source>doc.example (module)</source>
          <target state="translated">お手本</target>
        </trans-unit>
        <trans-unit id="3c7b7fd96947e7594c39c70a91a4b40c25881137" translate="yes" xml:space="preserve">
          <source>does what the earlier examples do, at near-C speeds, but with the code simplicity we expect from something based on Python. Indeed, the NumPy idiom is even simpler! This last example illustrates two of NumPy&amp;rsquo;s features which are the basis of much of its power: vectorization and broadcasting.</source>
          <target state="translated">前の例と同じようにCに近い速度で実行しますが、コードが単純なため、Pythonに基づくものに期待されます。実際、NumPyのイディオムはさらに単純です。この最後の例は、NumPyのパワーの多くの基礎となる2つの機能であるベクトル化とブロードキャストを示しています。</target>
        </trans-unit>
        <trans-unit id="8e374fbd1d241649219180e3f6556cdeb17929db" translate="yes" xml:space="preserve">
          <source>doesn&amp;rsquo;t change the original polynomial. However, all the multiplications and divisions will be done using Chebyshev series, hence the type of the result.</source>
          <target state="translated">元の多項式は変更されません。ただし、すべての乗算と除算はチェビシェフシリーズを使用して行われるため、結果の型になります。</target>
        </trans-unit>
        <trans-unit id="88460b8925ad3b640cad87cdeca3a8f709d70d55" translate="yes" xml:space="preserve">
          <source>doesn&amp;rsquo;t necessarily avoid reference counting issues or needing to know API&amp;rsquo;s</source>
          <target state="translated">必ずしも参照カウントの問題やAPIを知る必要があることを回避するわけではありません</target>
        </trans-unit>
        <trans-unit id="78fd1ae73a82b3a1b74caf412f9cd41abd1c3f97" translate="yes" xml:space="preserve">
          <source>domain (numpy.polynomial.chebyshev.Chebyshev attribute)</source>
          <target state="translated">ドメイン</target>
        </trans-unit>
        <trans-unit id="694d71d18774cd67340868fe72907c4b8e10c5cb" translate="yes" xml:space="preserve">
          <source>dot multiplication with two arguments.</source>
          <target state="translated">2つの引数を持つドットの乗算。</target>
        </trans-unit>
        <trans-unit id="bc61afb2131286a2f026f864fdaa30af6e04a4bf" translate="yes" xml:space="preserve">
          <source>dot() (in module numpy)</source>
          <target state="translated">dot()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="9b68c564ce64db4710625469c36ad6b6c4888b72" translate="yes" xml:space="preserve">
          <source>dot_join() (in module numpy.distutils.misc_util)</source>
          <target state="translated">dot_join()(モジュール numpy.distutils.misc_util 内)</target>
        </trans-unit>
        <trans-unit id="d4c79ad04666f7fdb248656ac475c39c49d8eae1" translate="yes" xml:space="preserve">
          <source>dotblas functionality moved to multiarray</source>
          <target state="translated">ドットブラスの機能をマルチアレイに移行</target>
        </trans-unit>
        <trans-unit id="0e073e29338a1d41aba509d862c98767df169d86" translate="yes" xml:space="preserve">
          <source>dotfunc()</source>
          <target state="translated">dotfunc()</target>
        </trans-unit>
        <trans-unit id="620690cac5cb35ce8ef5eef5355ab35430f046f6" translate="yes" xml:space="preserve">
          <source>downsample with low-pass filtering</source>
          <target state="translated">ローパスフィルタリングによるダウンサンプル</target>
        </trans-unit>
        <trans-unit id="d2b995548c5e5ffd240554fb3e401782a157795a" translate="yes" xml:space="preserve">
          <source>draws have been made.</source>
          <target state="translated">抽選が行われました。</target>
        </trans-unit>
        <trans-unit id="ba8ee1309c7446f271e55d3b58e36be787703cd9" translate="yes" xml:space="preserve">
          <source>drop_fields() (in module numpy.lib.recfunctions)</source>
          <target state="translated">drop_fields()(モジュール numpy.lib.recfunctions 内)</target>
        </trans-unit>
        <trans-unit id="e462e437ceb399e1208498f9d04c8391ac075db8" translate="yes" xml:space="preserve">
          <source>dsplit() (in module numpy)</source>
          <target state="translated">dsplit()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="3dfe7c786a0e64ffb8680d0571767f40916a49b4" translate="yes" xml:space="preserve">
          <source>dstack (in module numpy.ma)</source>
          <target state="translated">dstack</target>
        </trans-unit>
        <trans-unit id="1908a4729f9c65fe9efd32f81786f7e4c28dcf6c" translate="yes" xml:space="preserve">
          <source>dstack() (in module numpy)</source>
          <target state="translated">dstack()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="63eb44aa9dfe2c9c81d4ede5c878a887b7f21327" translate="yes" xml:space="preserve">
          <source>dtype</source>
          <target state="translated">dtype</target>
        </trans-unit>
        <trans-unit id="38e6963e36b6a80a1c283bbc18ebe1a631261bae" translate="yes" xml:space="preserve">
          <source>dtype (class in numpy)</source>
          <target state="translated">dtype</target>
        </trans-unit>
        <trans-unit id="ac15f31cedeb9dc5577ec7e82aa97d89f820198c" translate="yes" xml:space="preserve">
          <source>dtype construction</source>
          <target state="translated">ディーがたこうぞう</target>
        </trans-unit>
        <trans-unit id="7d65447cf0f257af28849b8c6264dfb6d0f3cc3d" translate="yes" xml:space="preserve">
          <source>dtype object</source>
          <target state="translated">ディーがたもくてきたい</target>
        </trans-unit>
        <trans-unit id="74f8b3e860a54f6ce7dfe64c37a38c6972a5c4ae" translate="yes" xml:space="preserve">
          <source>dtype objects also contain information about the type, such as its bit-width and its byte-order. The data type can also be used indirectly to query properties of the type, such as whether it is an integer:</source>
          <target state="translated">dtype オブジェクトには、ビット幅やバイト順などの型に関する情報も含まれています。データ型は、整数かどうかなどの型のプロパティを問い合わせるために間接的に使用することもできます。</target>
        </trans-unit>
        <trans-unit id="928c656d6649516e98f229b8253aaf1d477c41b3" translate="yes" xml:space="preserve">
          <source>dtype or string representing a typecode.</source>
          <target state="translated">タイプコードを表すdtypeまたは文字列。</target>
        </trans-unit>
        <trans-unit id="017bf752e596afc3d59b1da2acd4589bebab639d" translate="yes" xml:space="preserve">
          <source>dtype string representation changes</source>
          <target state="translated">dtype 文字列表現の変更</target>
        </trans-unit>
        <trans-unit id="299bb8f66c98350ba3ea303ebe2eaa7a7a6b6698" translate="yes" xml:space="preserve">
          <source>dtype() (numpy.ma.masked_array property)</source>
          <target state="translated">dtype()(numpy.ma.masked_arrayプロパティ)</target>
        </trans-unit>
        <trans-unit id="332d69f959baeae98fab56a711f69c32c706efd6" translate="yes" xml:space="preserve">
          <source>dtype.__reduce__()</source>
          <target state="translated">dtype.__reduce__()</target>
        </trans-unit>
        <trans-unit id="730100d67fecfbd742c4f9c469301f51b1b99a56" translate="yes" xml:space="preserve">
          <source>dtype.__setstate__()</source>
          <target state="translated">dtype.__setstate__()</target>
        </trans-unit>
        <trans-unit id="e38718f6be450ebc34e5ddd2f1ad0af5be3a7136" translate="yes" xml:space="preserve">
          <source>dtype.alignment</source>
          <target state="translated">dtype.alignment</target>
        </trans-unit>
        <trans-unit id="db374eeb23adc6aee82545b34274ced73d22212c" translate="yes" xml:space="preserve">
          <source>dtype.base</source>
          <target state="translated">dtype.base</target>
        </trans-unit>
        <trans-unit id="b09b9918657426384fd293dc6c6dc3138d0f2199" translate="yes" xml:space="preserve">
          <source>dtype.byteorder</source>
          <target state="translated">dtype.byteorder</target>
        </trans-unit>
        <trans-unit id="92e0b0adaca929ce598d180d2eb305740982944d" translate="yes" xml:space="preserve">
          <source>dtype.char</source>
          <target state="translated">dtype.char</target>
        </trans-unit>
        <trans-unit id="deaff1f53e2ad4294b50ed2584b4636da61e8a5f" translate="yes" xml:space="preserve">
          <source>dtype.descr</source>
          <target state="translated">dtype.descr</target>
        </trans-unit>
        <trans-unit id="643c69696910fadd237a5b95224cd74870e072e1" translate="yes" xml:space="preserve">
          <source>dtype.fields</source>
          <target state="translated">dtype.fields</target>
        </trans-unit>
        <trans-unit id="3f0b3f86ae682e1188442eac207435a6f6dfd661" translate="yes" xml:space="preserve">
          <source>dtype.flags</source>
          <target state="translated">dtype.flags</target>
        </trans-unit>
        <trans-unit id="3fed29e361a9273c69431a619bf5089d888c355a" translate="yes" xml:space="preserve">
          <source>dtype.hasobject</source>
          <target state="translated">dtype.hasobject</target>
        </trans-unit>
        <trans-unit id="c993883c28f77d4fb4d9b9c7653c1c4053229c55" translate="yes" xml:space="preserve">
          <source>dtype.isalignedstruct</source>
          <target state="translated">dtype.isalignedstruct</target>
        </trans-unit>
        <trans-unit id="7404613141c76d96e843ccb003e901d11543f22b" translate="yes" xml:space="preserve">
          <source>dtype.isbuiltin</source>
          <target state="translated">dtype.isbuiltin</target>
        </trans-unit>
        <trans-unit id="40b005199a12bf495f9a9137b1e5d144d31a1398" translate="yes" xml:space="preserve">
          <source>dtype.isnative</source>
          <target state="translated">dtype.isnative</target>
        </trans-unit>
        <trans-unit id="67359b4731b252c0f6883cede588730e199d3828" translate="yes" xml:space="preserve">
          <source>dtype.itemsize</source>
          <target state="translated">dtype.itemsize</target>
        </trans-unit>
        <trans-unit id="7543bba29383632be32e1442fd17bf7baa1ca84e" translate="yes" xml:space="preserve">
          <source>dtype.kind</source>
          <target state="translated">dtype.kind</target>
        </trans-unit>
        <trans-unit id="132f511321791fccd55a21c80c94c2898b01d243" translate="yes" xml:space="preserve">
          <source>dtype.name</source>
          <target state="translated">dtype.name</target>
        </trans-unit>
        <trans-unit id="cd275094e503879b7398282e3495fec0708742a1" translate="yes" xml:space="preserve">
          <source>dtype.names</source>
          <target state="translated">dtype.names</target>
        </trans-unit>
        <trans-unit id="c587add7d7facce43a2ca773e3aba5630a3a13e3" translate="yes" xml:space="preserve">
          <source>dtype.ndim</source>
          <target state="translated">dtype.ndim</target>
        </trans-unit>
        <trans-unit id="e490c70d05e0843a2cb7f13b9081b6602a69fd04" translate="yes" xml:space="preserve">
          <source>dtype.newbyteorder()</source>
          <target state="translated">dtype.newbyteorder()</target>
        </trans-unit>
        <trans-unit id="9c151fb6198c46a7ca390ed7d96ccbfe4430ade1" translate="yes" xml:space="preserve">
          <source>dtype.num</source>
          <target state="translated">dtype.num</target>
        </trans-unit>
        <trans-unit id="325767462c26252bfff6926a88c21090ac111b72" translate="yes" xml:space="preserve">
          <source>dtype.shape</source>
          <target state="translated">dtype.shape</target>
        </trans-unit>
        <trans-unit id="0c91b0d5ab49b865064b0e437439035e7770aaf9" translate="yes" xml:space="preserve">
          <source>dtype.str</source>
          <target state="translated">dtype.str</target>
        </trans-unit>
        <trans-unit id="b804dc21220d6a81028d91158c7cdd7ef40b7d4b" translate="yes" xml:space="preserve">
          <source>dtype.subdtype</source>
          <target state="translated">dtype.subdtype</target>
        </trans-unit>
        <trans-unit id="29fe59ccc900093aa58b075484e1268349083728" translate="yes" xml:space="preserve">
          <source>dtype.type</source>
          <target state="translated">dtype.type</target>
        </trans-unit>
        <trans-unit id="058dcaff860d97a2bc6092edd26991f94472f233" translate="yes" xml:space="preserve">
          <source>dtypes (numpy.nditer attribute)</source>
          <target state="translated">dtypes (numpy.nditer属性)</target>
        </trans-unit>
        <trans-unit id="33a0060b013379e2a0ddb1ff4fbacff62c7041fc" translate="yes" xml:space="preserve">
          <source>dtypes are now always true</source>
          <target state="translated">dtypes が常に真になりました。</target>
        </trans-unit>
        <trans-unit id="80c62840b8faa70fb875cd42f090f0b6dfa17fdb" translate="yes" xml:space="preserve">
          <source>dump() (numpy.char.chararray method)</source>
          <target state="translated">dump()(numpy.char.chararrayメソッド)</target>
        </trans-unit>
        <trans-unit id="a2e539266138dfe64d07c3d727d722d79efa6f37" translate="yes" xml:space="preserve">
          <source>dumps() (numpy.char.chararray method)</source>
          <target state="translated">dumps()(numpy.char.chararrayメソッド)</target>
        </trans-unit>
        <trans-unit id="be4c2066d589acdc5a48edc2af530fc606035666" translate="yes" xml:space="preserve">
          <source>dynamic compiling and loading of generated C code</source>
          <target state="translated">生成されたCコードの動的コンパイルとロード</target>
        </trans-unit>
        <trans-unit id="85ccb9825dcdf406c557d9b08fe54b1e6132fced" translate="yes" xml:space="preserve">
          <source>e (in module numpy)</source>
          <target state="translated">e</target>
        </trans-unit>
        <trans-unit id="d9abdff51e41712d497fb29b3ae9b0ea47034cb5" translate="yes" xml:space="preserve">
          <source>easy integration with NumPy through the ctypes attribute</source>
          <target state="translated">ctypes属性を使ってNumPyと簡単に統合できます。</target>
        </trans-unit>
        <trans-unit id="9822786b415970fef7d2f7ac592cf1e09ff699a6" translate="yes" xml:space="preserve">
          <source>edgeitems : int</source>
          <target state="translated">edgeitems:int</target>
        </trans-unit>
        <trans-unit id="102e74e5d178a1ac90b1c96427e5d4de66e8f284" translate="yes" xml:space="preserve">
          <source>ediff1d() (in module numpy)</source>
          <target state="translated">ediff1d()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="8fccc85c272c540bc6a9ce3323f24dca5d95fb9e" translate="yes" xml:space="preserve">
          <source>eig() (in module numpy.linalg)</source>
          <target state="translated">eig()(モジュール numpy.linalg 内)</target>
        </trans-unit>
        <trans-unit id="8e31d23407944ef257e18d0ac61fbbb56d9b4d36" translate="yes" xml:space="preserve">
          <source>eigenvalues and eigenvectors of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">の固有値と固有ベクトル &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="604731e081ef9c2b0c693bab2858a824aef871f8" translate="yes" xml:space="preserve">
          <source>eigenvalues and eigenvectors of &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 、 &lt;code&gt;b&lt;/code&gt; の固有値と固有ベクトル</target>
        </trans-unit>
        <trans-unit id="8b8569df0972f74f25a93d295b37f82f8e9895ca" translate="yes" xml:space="preserve">
          <source>eigenvalues and eigenvectors of a real symmetric or complex Hermitian (conjugate symmetric) array.</source>
          <target state="translated">実数対称または複素エルミシアン(共役対称)配列の固有値と固有ベクトル.</target>
        </trans-unit>
        <trans-unit id="d74e977a44b66ffc1ce5ca067f3dcfcdb78fd65f" translate="yes" xml:space="preserve">
          <source>eigenvalues and eigenvectors of real symmetric or complex Hermitian (conjugate symmetric) arrays.</source>
          <target state="translated">実数対称または複素ハーミシアン(共役対称)配列の固有値と固有ベクトル.</target>
        </trans-unit>
        <trans-unit id="e24f362802624e65e988826294b76a57949106bb" translate="yes" xml:space="preserve">
          <source>eigenvalues and right eigenvectors for non-symmetric arrays.</source>
          <target state="translated">非対称配列の固有値と右固有ベクトル.</target>
        </trans-unit>
        <trans-unit id="3c11c77ba59e77db21d0c9051a06daa958f0973d" translate="yes" xml:space="preserve">
          <source>eigenvalues and right eigenvectors of general arrays</source>
          <target state="translated">一般配列の固有値と右固有ベクトル</target>
        </trans-unit>
        <trans-unit id="707ce0ac898709f67312be24165684fc84a8ae39" translate="yes" xml:space="preserve">
          <source>eigenvalues and right eigenvectors of general real or complex arrays.</source>
          <target state="translated">一般的な実数または複素配列の固有値と右固有ベクトル.</target>
        </trans-unit>
        <trans-unit id="6b7c5bb27d21683dfaf6730db73e2b017e68dc33" translate="yes" xml:space="preserve">
          <source>eigenvalues of a non-symmetric array.</source>
          <target state="translated">非対称配列の固有値.</target>
        </trans-unit>
        <trans-unit id="ff63c2b33f1bf013fd7f73542f95a531334c4a3f" translate="yes" xml:space="preserve">
          <source>eigenvalues of a real symmetric or complex Hermitian (conjugate symmetric) array.</source>
          <target state="translated">実質対称または複素ハーミシアン(共役対称)配列の固有値.</target>
        </trans-unit>
        <trans-unit id="69cf2a431c5864fe825349c3441fac497875c6b6" translate="yes" xml:space="preserve">
          <source>eigenvalues of general real or complex arrays.</source>
          <target state="translated">一般的な実数または複素数配列の固有値.</target>
        </trans-unit>
        <trans-unit id="a726573c83e56de369454207866153eb1d530393" translate="yes" xml:space="preserve">
          <source>eigenvalues of non-symmetric arrays.</source>
          <target state="translated">非対称配列の固有値.</target>
        </trans-unit>
        <trans-unit id="ebed1a1bd106374a4bbf615436b802d28e5a9fbc" translate="yes" xml:space="preserve">
          <source>eigenvalues of real symmetric or complex Hermitian (conjugate symmetric) arrays.</source>
          <target state="translated">実数対称配列または複素ハーミシアン(共役対称)配列の固有値.</target>
        </trans-unit>
        <trans-unit id="0f50061babaec71959181b1e41f0e4098eeb7931" translate="yes" xml:space="preserve">
          <source>eigh() (in module numpy.linalg)</source>
          <target state="translated">eigh()(モジュール numpy.linalg 内)</target>
        </trans-unit>
        <trans-unit id="c516c69b3dae3436cb28d6fb29c0f3afa699bcc8" translate="yes" xml:space="preserve">
          <source>eigvals() (in module numpy.linalg)</source>
          <target state="translated">eigvals()(モジュール numpy.linalg 内)</target>
        </trans-unit>
        <trans-unit id="335455afe9ce2d17f279da6cae49b7e2968d1f1f" translate="yes" xml:space="preserve">
          <source>eigvalsh() (in module numpy.linalg)</source>
          <target state="translated">eigvalsh()(モジュール numpy.linalg 内)</target>
        </trans-unit>
        <trans-unit id="c5a2f7e1cd2f3a148a44dad907e59efc12a07547" translate="yes" xml:space="preserve">
          <source>einsum() (in module numpy)</source>
          <target state="translated">einsum()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="79b8718f1020c5591183af9efc058e5ba31beeb8" translate="yes" xml:space="preserve">
          <source>einsum_path() (in module numpy)</source>
          <target state="translated">einsum_path()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="764dfff4f99f1cba19be9b7bb87af681bbd73d32" translate="yes" xml:space="preserve">
          <source>element of</source>
          <target state="translated">要素</target>
        </trans-unit>
        <trans-unit id="b2139d4795963823f99b289e755ce8832883453f" translate="yes" xml:space="preserve">
          <source>element-by-element AND operator (NumPy ufunc) &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;See note LOGICOPS&lt;/a&gt;</source>
          <target state="translated">要素ごとのAND演算子（NumPy ufunc）&lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;注LOGICOPSを参照してください&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c7f2d7fb3f25882abfb7a810ad19360d6295967" translate="yes" xml:space="preserve">
          <source>element-by-element OR operator (NumPy ufunc) &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;See note LOGICOPS&lt;/a&gt;</source>
          <target state="translated">要素ごとのOR演算子（NumPy ufunc）&lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;注LOGICOPSを参照してください&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1d340e84ab391df39e876c58a014225247209b4" translate="yes" xml:space="preserve">
          <source>element-wise divide</source>
          <target state="translated">ようそぶんかつ</target>
        </trans-unit>
        <trans-unit id="369aed3f90143b6273cec5d9d51bfddb6a033e6b" translate="yes" xml:space="preserve">
          <source>element-wise exponentiation</source>
          <target state="translated">ようそごしえんざん</target>
        </trans-unit>
        <trans-unit id="efe74a7ab762aa894b06b73a92fbe2deab383df4" translate="yes" xml:space="preserve">
          <source>element-wise multiply</source>
          <target state="translated">素子掛け</target>
        </trans-unit>
        <trans-unit id="f9dae9ec9db0e08ea99f4e05fd27891607a15765" translate="yes" xml:space="preserve">
          <source>elements when the shape in the selected axis is</source>
          <target state="translated">要素を選択したときに、選択された軸の形状が</target>
        </trans-unit>
        <trans-unit id="900198081b75108f6b121e67b33afd480337f02e" translate="yes" xml:space="preserve">
          <source>ellipsis</source>
          <target state="translated">ellipsis</target>
        </trans-unit>
        <trans-unit id="45d1376f728c4117afac7b8a5ba8098e1c1926d4" translate="yes" xml:space="preserve">
          <source>empty (in module numpy.ma)</source>
          <target state="translated">空</target>
        </trans-unit>
        <trans-unit id="c92b5d5b3d6585c8ee0c6746334e3922b6456cc9" translate="yes" xml:space="preserve">
          <source>empty() (in module numpy)</source>
          <target state="translated">empty()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="b99389bbe00cc75c6fdedfdd92578f3ba8a38969" translate="yes" xml:space="preserve">
          <source>empty_like (in module numpy.ma)</source>
          <target state="translated">empty_like</target>
        </trans-unit>
        <trans-unit id="a36a084a654e57268a36586bf62610a3a8c86f98" translate="yes" xml:space="preserve">
          <source>empty_like() (in module numpy)</source>
          <target state="translated">empty_like()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="e3a4b13abee5b4be00f5721b91a7d0878f784f6d" translate="yes" xml:space="preserve">
          <source>enable_external_loop() (numpy.nditer method)</source>
          <target state="translated">enable_external_loop()(numpy.nditerメソッド)</target>
        </trans-unit>
        <trans-unit id="4527096d6ffe48114355af2a695881ddcdfbc4ef" translate="yes" xml:space="preserve">
          <source>encode() (in module numpy.char)</source>
          <target state="translated">encode()</target>
        </trans-unit>
        <trans-unit id="78000dbc67facb8b0e8fa6e573192bc21de91a1c" translate="yes" xml:space="preserve">
          <source>endswith() (in module numpy.char)</source>
          <target state="translated">endswith()</target>
        </trans-unit>
        <trans-unit id="dc751783ce1248d4c57bfc1816da162546f2eb66" translate="yes" xml:space="preserve">
          <source>enforcement via transparent decision (see &lt;a href=&quot;report_handling_manual#coc-resolutions&quot;&gt;Resolutions&lt;/a&gt;) by the Code of Conduct Committee</source>
          <target state="translated">行動規範委員会による透明性のある決定（&lt;a href=&quot;report_handling_manual#coc-resolutions&quot;&gt;決議を&lt;/a&gt;参照）による執行</target>
        </trans-unit>
        <trans-unit id="dc589cf870a667d65121c2d57280a2e54906415b" translate="yes" xml:space="preserve">
          <source>entire second row of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">全体の第二列 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee2c074c5998ad8b1d0dc4c4c1367daa199a6a38" translate="yes" xml:space="preserve">
          <source>entropy (numpy.random.SeedSequence attribute)</source>
          <target state="translated">エントロピー (numpy.random.SeedSequence属性)</target>
        </trans-unit>
        <trans-unit id="46bf91fd3ebb0765cf0ca98b0e1ce3489c226464" translate="yes" xml:space="preserve">
          <source>equal (in module numpy)</source>
          <target state="translated">イコール</target>
        </trans-unit>
        <trans-unit id="90ee6eda70e3acb362d8fda756dac6bdb5cbce7d" translate="yes" xml:space="preserve">
          <source>equal() (in module numpy.char)</source>
          <target state="translated">イコール()</target>
        </trans-unit>
        <trans-unit id="ea1956830a633e72f92d87c2591365245e60e4c2" translate="yes" xml:space="preserve">
          <source>equivalent function</source>
          <target state="translated">等価関数</target>
        </trans-unit>
        <trans-unit id="db7c5989d3e7ec2ebb716cd0bee069b5f5178b0a" translate="yes" xml:space="preserve">
          <source>equivalent function when no data is missing.</source>
          <target state="translated">データが欠落していない場合の等価関数</target>
        </trans-unit>
        <trans-unit id="624afe8ff81b138fbd886600e6d6138f83556f21" translate="yes" xml:space="preserve">
          <source>equivalent function; see for details.</source>
          <target state="translated">と同等の関数を使用しています。</target>
        </trans-unit>
        <trans-unit id="1306883bced448604a8275a21bbf3cd6574a170d" translate="yes" xml:space="preserve">
          <source>equivalent method</source>
          <target state="translated">等価法</target>
        </trans-unit>
        <trans-unit id="8006f608472f1bc24c0343e0f95d801801d506a3" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;nanpercentile(..., 50)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nanpercentile(..., 50)&lt;/code&gt; と同等</target>
        </trans-unit>
        <trans-unit id="016bcc0bb764e09458cabfaee03f3afd16405a35" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;nanquantile(..., 0.5)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nanquantile(..., 0.5)&lt;/code&gt; と同等</target>
        </trans-unit>
        <trans-unit id="7735e981ef85e6afa72b957b018c92c8f163374b" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;percentile(..., 50)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;percentile(..., 50)&lt;/code&gt; と同等</target>
        </trans-unit>
        <trans-unit id="116888ce0e584314fd11f62fe6e73c9386fdc3bd" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;quantile(..., 0.5)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;quantile(..., 0.5)&lt;/code&gt; と同等</target>
        </trans-unit>
        <trans-unit id="30faa2a9bff49f64b3fd07b91143a28f6ee9aef3" translate="yes" xml:space="preserve">
          <source>equivalent to nanpercentile, but with q in the range [0, 1].</source>
          <target state="translated">ナノパーセンタイルに相当しますが、qは[0,1]の範囲にあります。</target>
        </trans-unit>
        <trans-unit id="539494e85474bd22686dd584a10af20706cc33df" translate="yes" xml:space="preserve">
          <source>equivalent to percentile, except with q in the range [0, 1].</source>
          <target state="translated">qが[0,1]の範囲にある場合を除き、パーセンタイルと同等です。</target>
        </trans-unit>
        <trans-unit id="417b72406b46b2c5fcf5b9fcbcc60479d4142c68" translate="yes" xml:space="preserve">
          <source>equivalent to quantile, but with q in the range [0, 100].</source>
          <target state="translated">quantileと同等ですが、qの範囲は[0,100]です。</target>
        </trans-unit>
        <trans-unit id="f0a7a174240ced7d03adf452fe55943f3ef7b914" translate="yes" xml:space="preserve">
          <source>error handling</source>
          <target state="translated">エラー処理</target>
        </trans-unit>
        <trans-unit id="6fc6b4cdfc7444409a5ddd580841415db4178dd8" translate="yes" xml:space="preserve">
          <source>errstate (class in numpy)</source>
          <target state="translated">errstate</target>
        </trans-unit>
        <trans-unit id="c6f76fe76735d8e29b77a77d9d1e5cc572df7c46" translate="yes" xml:space="preserve">
          <source>errstate.__call__()</source>
          <target state="translated">errstate.__call__()</target>
        </trans-unit>
        <trans-unit id="6b942e2831f972c22e2b0292ea3a8176ab41cd3b" translate="yes" xml:space="preserve">
          <source>etc</source>
          <target state="translated">etc</target>
        </trans-unit>
        <trans-unit id="9f1ae7469b79e149e684fc56f162b516748b71f5" translate="yes" xml:space="preserve">
          <source>euler_gamma (in module numpy)</source>
          <target state="translated">オイラーガンマ</target>
        </trans-unit>
        <trans-unit id="514e4425ab04e470a8365c9452d2149db06f58e5" translate="yes" xml:space="preserve">
          <source>evaluates pyfunc over input arrays using broadcasting rules of numpy</source>
          <target state="translated">numpyのブロードキャストルールを用いて入力配列に対してpyfuncを評価します。</target>
        </trans-unit>
        <trans-unit id="26dcea074c0bd78db2feb7209b5d00e1e4b7d6f2" translate="yes" xml:space="preserve">
          <source>even if this would print more or fewer digits than necessary to specify the value uniquely.</source>
          <target state="translated">これは、値を一意に指定するために必要な桁数よりも多いか少ないかの数字を表示することになるとしてもです。</target>
        </trans-unit>
        <trans-unit id="5b57b830c94000da1160929bf7283ab86f49f3c2" translate="yes" xml:space="preserve">
          <source>even: &lt;code&gt;ihfft(hfft(a, 2*len(a) - 2) == a&lt;/code&gt;, within roundoff error,</source>
          <target state="translated">偶数： &lt;code&gt;ihfft(hfft(a, 2*len(a) - 2) == a&lt;/code&gt; 、丸め誤差内、</target>
        </trans-unit>
        <trans-unit id="989fbbc4488f162d1512836c0d3a033b755440f4" translate="yes" xml:space="preserve">
          <source>even: &lt;code&gt;ihfft(hfft(a, 2*len(a) - 2)) == a&lt;/code&gt;, within roundoff error,</source>
          <target state="translated">偶数： &lt;code&gt;ihfft(hfft(a, 2*len(a) - 2)) == a&lt;/code&gt; 、丸め誤差内、</target>
        </trans-unit>
        <trans-unit id="ce1488c0654de9ef5fb411e5e89d3ca5a3240457" translate="yes" xml:space="preserve">
          <source>events occurring within the observed interval</source>
          <target state="translated">観測間隔内に発生した事象</target>
        </trans-unit>
        <trans-unit id="0144f12663267b408b2f7925d3242c176b68f212" translate="yes" xml:space="preserve">
          <source>every other row of &lt;code&gt;a&lt;/code&gt;, starting with the first</source>
          <target state="translated">他のすべての行、最初から始まります &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55bef032effdd81931a148eaa732db622466a0e9" translate="yes" xml:space="preserve">
          <source>every other row of &lt;code&gt;a&lt;/code&gt;, starting with the third and going to the twenty-first</source>
          <target state="translated">他のすべての行、第で始まり、第二十一に行きます &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="725b04ae9d29ff5a599d418622d6dda1334b6e8e" translate="yes" xml:space="preserve">
          <source>exec_command</source>
          <target state="translated">exec_command</target>
        </trans-unit>
        <trans-unit id="df9559563b12462d8514749042e2ca31bec0c2dd" translate="yes" xml:space="preserve">
          <source>exec_command &amp;mdash; execute command in a specified directory and</source>
          <target state="translated">exec_command &amp;mdash;指定されたディレクトリでコマンドを実行し、</target>
        </trans-unit>
        <trans-unit id="73f62035aeb16abb834d936f3a217f95c3f72c2d" translate="yes" xml:space="preserve">
          <source>exists() (numpy.DataSource method)</source>
          <target state="translated">exists()(numpy.DataSourceメソッド)</target>
        </trans-unit>
        <trans-unit id="ec8fbc156969365df62003e6b565ed514c0ff4ac" translate="yes" xml:space="preserve">
          <source>exp (in module numpy)</source>
          <target state="translated">エクスポ</target>
        </trans-unit>
        <trans-unit id="6b3605cab140409fb4bb5b1ed87cf372111d3254" translate="yes" xml:space="preserve">
          <source>exp : Exponential function log : Natural logarithm</source>
          <target state="translated">exp.指数関数 log:自然対数</target>
        </trans-unit>
        <trans-unit id="a16bad9a53c6f7c471be49458a89a3842eaafb4a" translate="yes" xml:space="preserve">
          <source>exp2 (in module numpy)</source>
          <target state="translated">エクスポ2</target>
        </trans-unit>
        <trans-unit id="48b7ce12ec0288bbc44d493661658a0484e7b8af" translate="yes" xml:space="preserve">
          <source>expand_dims() (in module numpy)</source>
          <target state="translated">expand_dims()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="7aed5543baadcb85c77221780bbc427aa0d22b5b" translate="yes" xml:space="preserve">
          <source>expandtabs() (in module numpy.char)</source>
          <target state="translated">expandtabs()(モジュール numpy.char 内)</target>
        </trans-unit>
        <trans-unit id="69a225569fccbfb8c3231cb324cc54c05e93c1b7" translate="yes" xml:space="preserve">
          <source>explicit constructor call (&lt;code&gt;obj = MySubClass(params)&lt;/code&gt;). This will call the usual sequence of &lt;code&gt;MySubClass.__new__&lt;/code&gt; then (if it exists) &lt;code&gt;MySubClass.__init__&lt;/code&gt;.</source>
          <target state="translated">明示的なコンストラクター呼び出し（ &lt;code&gt;obj = MySubClass(params)&lt;/code&gt; ）。これにより、 &lt;code&gt;MySubClass.__new__&lt;/code&gt; 通常のシーケンスが呼び出され、（存在する場合は） &lt;code&gt;MySubClass.__init__&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="3ccfbba11770830ba9441f215dee566c97fbb41e" translate="yes" xml:space="preserve">
          <source>expm1 (in module numpy)</source>
          <target state="translated">expm1</target>
        </trans-unit>
        <trans-unit id="2b5fe7c59e022c82975be9b329317cd1f232f91d" translate="yes" xml:space="preserve">
          <source>exponential() (in module numpy.random)</source>
          <target state="translated">エクスポネンシャル()</target>
        </trans-unit>
        <trans-unit id="4fa23bb0bb55db65982a50570e153f19001dd653" translate="yes" xml:space="preserve">
          <source>extending.pyx</source>
          <target state="translated">extending.pyx</target>
        </trans-unit>
        <trans-unit id="f6d5488c231d0315c936dd74c2a7e77ca42c6b81" translate="yes" xml:space="preserve">
          <source>extending_distributions.pyx</source>
          <target state="translated">extending_distributions.pyx</target>
        </trans-unit>
        <trans-unit id="92a3b0835ee4bb7e12eb176472deca3e6e14d755" translate="yes" xml:space="preserve">
          <source>extra_compiler_args</source>
          <target state="translated">extra_compiler_args</target>
        </trans-unit>
        <trans-unit id="f0bd321ffaea11e583890596abe8de7b908001cc" translate="yes" xml:space="preserve">
          <source>extra_f77_compile_args</source>
          <target state="translated">extra_f77_compile_args</target>
        </trans-unit>
        <trans-unit id="7c71ee0b5da58da5daab5fef2e127b9f275b5412" translate="yes" xml:space="preserve">
          <source>extra_f90_compile_args</source>
          <target state="translated">extra_f90_compile_args</target>
        </trans-unit>
        <trans-unit id="b8a26c3bbc1729a0a97dcd0efa43c381380cf5e7" translate="yes" xml:space="preserve">
          <source>extract the columms of &lt;code&gt;a&lt;/code&gt; where column vector v &amp;gt; 0.5</source>
          <target state="translated">columms抽出&amp;gt; 0.5ここで、列ベクトルvを &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb32a335cb30ce5b736be5553097f25fb734c76e" translate="yes" xml:space="preserve">
          <source>extract the columms of &lt;code&gt;a&lt;/code&gt; where vector v &amp;gt; 0.5</source>
          <target state="translated">ベクトルv&amp;gt; 0.5である &lt;code&gt;a&lt;/code&gt; の列を抽出します</target>
        </trans-unit>
        <trans-unit id="95bd73247d465bbb181c2a8e93978501a15e9bf8" translate="yes" xml:space="preserve">
          <source>extract() (in module numpy)</source>
          <target state="translated">extract()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="ee05ca9c5db63b176e79807ea64031c752546bc6" translate="yes" xml:space="preserve">
          <source>eye() (in module numpy)</source>
          <target state="translated">eye()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="4a0a19218e082a343a1b17e5333409af9d98f0f5" translate="yes" xml:space="preserve">
          <source>f</source>
          <target state="translated">f</target>
        </trans-unit>
        <trans-unit id="bf96aecf558d13e47f6c0965b98e254906af5a17" translate="yes" xml:space="preserve">
          <source>f() (in module numpy.random)</source>
          <target state="translated">f()(モジュール numpy.random内)</target>
        </trans-unit>
        <trans-unit id="30abc3767275c9e9694ddaa0aa3a89c5570e0097" translate="yes" xml:space="preserve">
          <source>f2py</source>
          <target state="translated">f2py</target>
        </trans-unit>
        <trans-unit id="327e22a8a02aed833a08c9f4d1d2dfe737445ffb" translate="yes" xml:space="preserve">
          <source>f2py script on Windows</source>
          <target state="translated">Windowsでのf2pyスクリプト</target>
        </trans-unit>
        <trans-unit id="34740c66e9bde6f63ede1c737388b71a9e995e98" translate="yes" xml:space="preserve">
          <source>f2py_options</source>
          <target state="translated">f2py_options</target>
        </trans-unit>
        <trans-unit id="97388acdc4bbf551fc080c0fdbe232a9f5ea522f" translate="yes" xml:space="preserve">
          <source>fabs (in module numpy)</source>
          <target state="translated">ファブ</target>
        </trans-unit>
        <trans-unit id="e9d740b92682a14a3d6b17e4d6fbc565d1c1241f" translate="yes" xml:space="preserve">
          <source>fast indexing support for arrays</source>
          <target state="translated">配列の高速インデキシングサポート</target>
        </trans-unit>
        <trans-unit id="713e3b0d003a0a96a88e01e6e325e3b1f3d0c4df" translate="yes" xml:space="preserve">
          <source>fastclip()</source>
          <target state="translated">fastclip()</target>
        </trans-unit>
        <trans-unit id="dfa68c18bac4cb0c07243b7b2a65d4a2ee78cd35" translate="yes" xml:space="preserve">
          <source>fastputmask()</source>
          <target state="translated">fastputmask()</target>
        </trans-unit>
        <trans-unit id="0caf8ed2e2c39d94bf72741f2ae9123e539fd8a3" translate="yes" xml:space="preserve">
          <source>fasttake()</source>
          <target state="translated">fasttake()</target>
        </trans-unit>
        <trans-unit id="c941609ac1d104a01c42e9b206912fdac5cc65e7" translate="yes" xml:space="preserve">
          <source>femtosecond</source>
          <target state="translated">femtosecond</target>
        </trans-unit>
        <trans-unit id="caf3162430104eb1135efc665aa1d1e4312952a4" translate="yes" xml:space="preserve">
          <source>fewer lines of code generally means fewer bugs</source>
          <target state="translated">コード行数が少ないほどバグが少ない</target>
        </trans-unit>
        <trans-unit id="714e10823230eb4fb73ec7052ea81023e7310a6f" translate="yes" xml:space="preserve">
          <source>fft() (in module numpy.fft)</source>
          <target state="translated">fft()(モジュール numpy.ft内)</target>
        </trans-unit>
        <trans-unit id="7196aee88d4c325ab306ab93b6117c9d336ce285" translate="yes" xml:space="preserve">
          <source>fft2() (in module numpy.fft)</source>
          <target state="translated">fft2()(モジュール numpy.ft内)</target>
        </trans-unit>
        <trans-unit id="58069c78df0a9a40ce1487003fead6e577325b84" translate="yes" xml:space="preserve">
          <source>fftfreq() (in module numpy.fft)</source>
          <target state="translated">fftfreq()(モジュール numpy.fft 内)</target>
        </trans-unit>
        <trans-unit id="93963698a27187f9f37871d5825a0b1d6d1ca8cb" translate="yes" xml:space="preserve">
          <source>fftn() (in module numpy.fft)</source>
          <target state="translated">fftn()(モジュール numpy.ft内)</target>
        </trans-unit>
        <trans-unit id="9329758eb6e2239ffcf4f3afebe4c3e9a5fe38e1" translate="yes" xml:space="preserve">
          <source>fftshift() (in module numpy.fft)</source>
          <target state="translated">fftshift()(モジュール numpy.fft 内)</target>
        </trans-unit>
        <trans-unit id="2da0b68df8841752bb747a76780679bcd87c6215" translate="yes" xml:space="preserve">
          <source>field</source>
          <target state="translated">field</target>
        </trans-unit>
        <trans-unit id="c4e6ecedb04033a6879435a60964c87b41b52d09" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f0&lt;/code&gt; containing a 3-character string</source>
          <target state="translated">3文字の文字列を含む &lt;code&gt;f0&lt;/code&gt; という名前のフィールド</target>
        </trans-unit>
        <trans-unit id="55eb7ee3704413e2136f2f7ecb0a3f0bd2da893a" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f0&lt;/code&gt; containing a 32-bit integer</source>
          <target state="translated">32ビット整数を含む &lt;code&gt;f0&lt;/code&gt; という名前のフィールド</target>
        </trans-unit>
        <trans-unit id="f2dd8c98eeacb3a0454ce0d1e0c2cc24e9f0f733" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f1&lt;/code&gt; containing a 2 x 3 sub-array of 64-bit floating-point numbers</source>
          <target state="translated">64ビット浮動小数点数の2 x 3サブ配列を含む &lt;code&gt;f1&lt;/code&gt; という名前のフィールド</target>
        </trans-unit>
        <trans-unit id="a22cf569168c52ca030187440d4a10ddbfbfd8a9" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f1&lt;/code&gt; containing a sub-array of shape (3,) containing 64-bit unsigned integers</source>
          <target state="translated">64ビットの符号なし整数を含む形状（3、）のサブ配列を含む &lt;code&gt;f1&lt;/code&gt; という名前のフィールド</target>
        </trans-unit>
        <trans-unit id="d08ab054c7e9d7d4ba38f5e4e61011a0066a55ea" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f2&lt;/code&gt; containing a 3 x 4 sub-array containing 10-character strings</source>
          <target state="translated">10文字の文字列を含む3 x 4サブ配列を含む &lt;code&gt;f2&lt;/code&gt; という名前のフィールド</target>
        </trans-unit>
        <trans-unit id="9891de86c73491b5ad58363d1eee27c1a869f365" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f2&lt;/code&gt; containing a 32-bit floating-point number</source>
          <target state="translated">32ビット浮動小数点数を含む &lt;code&gt;f2&lt;/code&gt; という名前のフィールド</target>
        </trans-unit>
        <trans-unit id="9b37ac716d049c8dc3c78c15b0d35e03ede7acca" translate="yes" xml:space="preserve">
          <source>field() (numpy.recarray method)</source>
          <target state="translated">field()(numpy.recarrayメソッド)</target>
        </trans-unit>
        <trans-unit id="bbc373999b12266580ba5d832060d096e74a4676" translate="yes" xml:space="preserve">
          <source>fields (numpy.dtype attribute)</source>
          <target state="translated">フィールド(numpy.dtype属性)</target>
        </trans-unit>
        <trans-unit id="8d8989cf616d19904ae3a5ff4c4a0ba319468b63" translate="yes" xml:space="preserve">
          <source>file.txt -&amp;gt; (., file.txt)-&amp;gt; parent/file.txt</source>
          <target state="translated">file.txt-&amp;gt;（。、file.txt）-&amp;gt; parent / file.txt</target>
        </trans-unit>
        <trans-unit id="b10ef848ebbad89fe9348318d14a018b5aa082fb" translate="yes" xml:space="preserve">
          <source>fill()</source>
          <target state="translated">fill()</target>
        </trans-unit>
        <trans-unit id="87082ebf5eb734605c061a742d123a5e98f628f6" translate="yes" xml:space="preserve">
          <source>fill() (numpy.char.chararray method)</source>
          <target state="translated">fill()(numpy.char.chararrayメソッド)</target>
        </trans-unit>
        <trans-unit id="52586b62d4bd21b87b7665b4a445b3b186479b53" translate="yes" xml:space="preserve">
          <source>fill_diagonal() (in module numpy)</source>
          <target state="translated">fill_diagonal()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="fc86255e0c7aa14b8933d56328b22d406541614c" translate="yes" xml:space="preserve">
          <source>fill_value (numpy.ma.MaskedArray attribute)</source>
          <target state="translated">fill_value (numpy.ma.MaskedArray属性)</target>
        </trans-unit>
        <trans-unit id="9a5feb63525709f31c717f1870ec680d7c8ef5cc" translate="yes" xml:space="preserve">
          <source>fill_value() (numpy.ma.masked_array property)</source>
          <target state="translated">fill_value()(numpy.ma.masked_arrayプロパティ)</target>
        </trans-unit>
        <trans-unit id="323b1eef35f59fd8f0a786c091fb55003c809484" translate="yes" xml:space="preserve">
          <source>filled() (in module numpy.ma)</source>
          <target state="translated">filled()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="3bf985a9cbe36e6b54f12e53cbb84da9549bc938" translate="yes" xml:space="preserve">
          <source>fillwithscalar()</source>
          <target state="translated">fillwithscalar()</target>
        </trans-unit>
        <trans-unit id="3373018b9e0197e690a7e5f713648287ca160d36" translate="yes" xml:space="preserve">
          <source>filter() (numpy.testing.suppress_warnings method)</source>
          <target state="translated">filter()(numpy.testing.suppressow_warningsメソッド)</target>
        </trans-unit>
        <trans-unit id="52457a8fc60c9f3405c9e086de9f858e97e1138d" translate="yes" xml:space="preserve">
          <source>filter_sources() (in module numpy.distutils.misc_util)</source>
          <target state="translated">filter_sources()(モジュール numpy.distutils.misc_util 内)</target>
        </trans-unit>
        <trans-unit id="39bc06b87e284271de70137b1e676bb4093be162" translate="yes" xml:space="preserve">
          <source>find out where &lt;em&gt;func&lt;/em&gt; is defined</source>
          <target state="translated">&lt;em&gt;func&lt;/em&gt;が定義されている場所を見つける</target>
        </trans-unit>
        <trans-unit id="8af3cb5d8e52f697d3e13d7e2c4ac9837e89821f" translate="yes" xml:space="preserve">
          <source>find the &lt;code&gt;k&lt;/code&gt; largest eigenvalues and eigenvectors of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; の &lt;code&gt;k&lt;/code&gt; 個の最大固有値と固有ベクトルを見つける</target>
        </trans-unit>
        <trans-unit id="e8819141187b47187cb7702601f5207277e548a1" translate="yes" xml:space="preserve">
          <source>find the indices where (&lt;code&gt;a&lt;/code&gt; &amp;gt; 0.5)</source>
          <target state="translated">（ &lt;code&gt;a&lt;/code&gt; &amp;gt; 0.5）であるインデックスを見つけます</target>
        </trans-unit>
        <trans-unit id="a19f4f3111e3f2da24f14b73dc7c956219a65bbe" translate="yes" xml:space="preserve">
          <source>find() (in module numpy.char)</source>
          <target state="translated">find()(モジュール numpy.char内)</target>
        </trans-unit>
        <trans-unit id="78ca34b36cdc542cbf9ce4c090eb82a4dc64d20d" translate="yes" xml:space="preserve">
          <source>find_common_type() (in module numpy)</source>
          <target state="translated">find_common_type()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="8b83c87c3416026b076b7f78b91237887831d897" translate="yes" xml:space="preserve">
          <source>find_duplicates() (in module numpy.lib.recfunctions)</source>
          <target state="translated">find_duplicates()(モジュール numpy.lib.recfunctions 内)</target>
        </trans-unit>
        <trans-unit id="34c563a47a7ec77153f984f51d54ab4ee9f00244" translate="yes" xml:space="preserve">
          <source>find_executable &amp;mdash; locate a command using info from environment</source>
          <target state="translated">find_executable &amp;mdash;環境からの情報を使用してコマンドを見つける</target>
        </trans-unit>
        <trans-unit id="ef51befcc1e02e58a2e0d5d1deeddd798df08f4f" translate="yes" xml:space="preserve">
          <source>finfo (class in numpy)</source>
          <target state="translated">フィンフォ</target>
        </trans-unit>
        <trans-unit id="206bb07570d244e8d01269aec441b56c880c1eac" translate="yes" xml:space="preserve">
          <source>finished (numpy.nditer attribute)</source>
          <target state="translated">終了した</target>
        </trans-unit>
        <trans-unit id="44491eab6ec3cd9e85ac367a87e79463bdd5e585" translate="yes" xml:space="preserve">
          <source>fit() (numpy.polynomial.chebyshev.Chebyshev class method)</source>
          <target state="translated">fit()(numpy.polynomial.chebyshev.Chebyshev クラスメソッド)</target>
        </trans-unit>
        <trans-unit id="5d459b462f5e28a84a0aa6c34c7d16f7aedb6b3d" translate="yes" xml:space="preserve">
          <source>fix() (in module numpy)</source>
          <target state="translated">fix()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="68d67d0f6e5021c7862c5e9a6654045fa465fb73" translate="yes" xml:space="preserve">
          <source>fix_invalid() (in module numpy.ma)</source>
          <target state="translated">fix_invalid()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="08e8fbbf851437ec84f288c35c369fb2524070bb" translate="yes" xml:space="preserve">
          <source>flags (numpy.char.chararray attribute)</source>
          <target state="translated">フラグ(numpy.char.chararray属性)</target>
        </trans-unit>
        <trans-unit id="649adc91552d9200989ef4536551bac064614ef7" translate="yes" xml:space="preserve">
          <source>flags:</source>
          <target state="translated">flags:</target>
        </trans-unit>
        <trans-unit id="8f27e4f0b0e1fabc56425bc40b6e79fabb64c9af" translate="yes" xml:space="preserve">
          <source>flake8</source>
          <target state="translated">flake8</target>
        </trans-unit>
        <trans-unit id="189b2a7c6546f7add7185b89effd64888a9adf74" translate="yes" xml:space="preserve">
          <source>flat (numpy.char.chararray attribute)</source>
          <target state="translated">フラット</target>
        </trans-unit>
        <trans-unit id="e61540f087503c1f760ac7a7eb2d4d7261a060da" translate="yes" xml:space="preserve">
          <source>flat() (numpy.lib.Arrayterator property)</source>
          <target state="translated">flat()(numpy.lib.Arrayterator プロパティ)</target>
        </trans-unit>
        <trans-unit id="2709c73dd56d611ecc8fa09799ffbe4bc3f993f1" translate="yes" xml:space="preserve">
          <source>flatiter (class in numpy)</source>
          <target state="translated">平板器</target>
        </trans-unit>
        <trans-unit id="9eda71accad55a82028c98ee54aab74d7d1d8e1e" translate="yes" xml:space="preserve">
          <source>flatiter.base</source>
          <target state="translated">flatiter.base</target>
        </trans-unit>
        <trans-unit id="e63e8acf5e5b985c9ef39d6d2e5bca40431592cf" translate="yes" xml:space="preserve">
          <source>flatiter.coords</source>
          <target state="translated">flatiter.coords</target>
        </trans-unit>
        <trans-unit id="71980daa41701f7dd66e3122ef6c46e253e371e0" translate="yes" xml:space="preserve">
          <source>flatiter.copy()</source>
          <target state="translated">flatiter.copy()</target>
        </trans-unit>
        <trans-unit id="111d72b58214fd5edc49ae5bd99efcae33b94e7c" translate="yes" xml:space="preserve">
          <source>flatiter.index</source>
          <target state="translated">flatiter.index</target>
        </trans-unit>
        <trans-unit id="78870306a27cc2f96878d65528776b08b14377ea" translate="yes" xml:space="preserve">
          <source>flatnonzero() (in module numpy)</source>
          <target state="translated">flatnonzero()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="cfd8000071ae6c15bf310c8bee0f2532397bc5c8" translate="yes" xml:space="preserve">
          <source>flatnotmasked_contiguous() (in module numpy.ma)</source>
          <target state="translated">flatnotmasked_contiguous()(モジュール numpy.ma の)</target>
        </trans-unit>
        <trans-unit id="dfcc4abe24f28a526eec67e8496cc25a7b5c8e4d" translate="yes" xml:space="preserve">
          <source>flatnotmasked_edges() (in module numpy.ma)</source>
          <target state="translated">flatnotmasked_edges()(in module numpy.ma)</target>
        </trans-unit>
        <trans-unit id="314a58b2686e027cc887ea8b9d331e73cfb86f21" translate="yes" xml:space="preserve">
          <source>flatten() (numpy.char.chararray method)</source>
          <target state="translated">flatten()(numpy.char.chararrayメソッド)</target>
        </trans-unit>
        <trans-unit id="5886850896adbe693e4648245035fb0de7dd11ef" translate="yes" xml:space="preserve">
          <source>flatten_descr() (in module numpy.lib.recfunctions)</source>
          <target state="translated">flatten_descr()(モジュール numpy.lib.recfunctions 内)</target>
        </trans-unit>
        <trans-unit id="ac6636e36f5e2f037ea735a4e0d0630255d15f1f" translate="yes" xml:space="preserve">
          <source>flexible</source>
          <target state="translated">flexible</target>
        </trans-unit>
        <trans-unit id="1aeb3ece66a667978f3aaf736d31b8f00a413261" translate="yes" xml:space="preserve">
          <source>flip() (in module numpy)</source>
          <target state="translated">flip()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="7c8f92d99ba7855465faeb61d3da7c7d16021c75" translate="yes" xml:space="preserve">
          <source>flip(m) corresponds to &lt;code&gt;m[::-1,::-1,...,::-1]&lt;/code&gt; with &lt;code&gt;::-1&lt;/code&gt; at all positions.</source>
          <target state="translated">flip（m）は &lt;code&gt;m[::-1,::-1,...,::-1]&lt;/code&gt; し、すべての位置で &lt;code&gt;::-1&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="06a8719f83f8ee20f4a5eda0096a85dbf966db8b" translate="yes" xml:space="preserve">
          <source>flip(m, (0, 1)) corresponds to &lt;code&gt;m[::-1,::-1,...]&lt;/code&gt; with &lt;code&gt;::-1&lt;/code&gt; at position 0 and position 1.</source>
          <target state="translated">flip（m、（0、1））は、 &lt;code&gt;m[::-1,::-1,...]&lt;/code&gt; し、位置0と位置1に &lt;code&gt;::-1&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="7b1b52175a077136da59a35cf9a58cfe4d7c569e" translate="yes" xml:space="preserve">
          <source>flip(m, 0) is equivalent to flipud(m).</source>
          <target state="translated">flip(m,0)は flipud(m)と等価です。</target>
        </trans-unit>
        <trans-unit id="baa1935b7e3f0e41dfa49a231f8b3cbe0667b373" translate="yes" xml:space="preserve">
          <source>flip(m, 1) is equivalent to fliplr(m).</source>
          <target state="translated">flip(m,1)は fliplr(m)と同等です。</target>
        </trans-unit>
        <trans-unit id="a868dfd7e4c2dd932bb00349ea3d224b34bd402c" translate="yes" xml:space="preserve">
          <source>flip(m, n) corresponds to &lt;code&gt;m[...,::-1,...]&lt;/code&gt; with &lt;code&gt;::-1&lt;/code&gt; at position n.</source>
          <target state="translated">flip（m、n）は &lt;code&gt;m[...,::-1,...]&lt;/code&gt; 対応し、位置n は &lt;code&gt;::-1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0ccbc9b3b70e34d66bd6a8b375c5827d853854b0" translate="yes" xml:space="preserve">
          <source>fliplr() (in module numpy)</source>
          <target state="translated">fliplr()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="b7213bad9c966b51cdd19312a9fe058a21b516fd" translate="yes" xml:space="preserve">
          <source>flipud() (in module numpy)</source>
          <target state="translated">flipud()</target>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="translated">float</target>
        </trans-unit>
        <trans-unit id="9f25035ded8071d3e0237fffb8b3e2ccdd4179eb" translate="yes" xml:space="preserve">
          <source>float128 values now print correctly on ppc systems</source>
          <target state="translated">ppc システムで float128 の値が正しく表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="622be6eba8adcf08630e037f6582791064e40963" translate="yes" xml:space="preserve">
          <source>float_power (in module numpy)</source>
          <target state="translated">float_power</target>
        </trans-unit>
        <trans-unit id="b093abee54a9fde98b4eb34f8a1f370eea716fab" translate="yes" xml:space="preserve">
          <source>floating-point</source>
          <target state="translated">floating-point</target>
        </trans-unit>
        <trans-unit id="95f6168b24eeb31a8d6fc82fac33485bfd0297ae" translate="yes" xml:space="preserve">
          <source>floor (in module numpy)</source>
          <target state="translated">フロア</target>
        </trans-unit>
        <trans-unit id="f1d4d15e23194d92c9a1b98f0e2fcd88bea778ea" translate="yes" xml:space="preserve">
          <source>floor_divide (in module numpy)</source>
          <target state="translated">フロアディバイド</target>
        </trans-unit>
        <trans-unit id="ba4460382c5b9073386c7a0014f9147181379c3e" translate="yes" xml:space="preserve">
          <source>flush() (numpy.memmap method)</source>
          <target state="translated">flush()(numpy.memmapメソッド)</target>
        </trans-unit>
        <trans-unit id="614abe062892098112cd7e75a4e19dc3ee08d602" translate="yes" xml:space="preserve">
          <source>fmax (in module numpy)</source>
          <target state="translated">fmax</target>
        </trans-unit>
        <trans-unit id="76ef6b3f5487646abbb7958bf60dbeb4dd313cd3" translate="yes" xml:space="preserve">
          <source>fmin (in module numpy)</source>
          <target state="translated">fmin</target>
        </trans-unit>
        <trans-unit id="c756fde722f7b443fe3fca0c2c6d211575fb2bd9" translate="yes" xml:space="preserve">
          <source>fmod (in module numpy)</source>
          <target state="translated">fmod</target>
        </trans-unit>
        <trans-unit id="e0913290570412a6300e5cf8040bac1fa137b796" translate="yes" xml:space="preserve">
          <source>foo() (in module doc.example)</source>
          <target state="translated">foo()(モジュールdoc.example内)</target>
        </trans-unit>
        <trans-unit id="12b8d7939cd264eecdb244e9a94f3079d47d15bf" translate="yes" xml:space="preserve">
          <source>foo/&lt;code&gt;*&lt;/code&gt;.txt`` -&amp;gt; parent/foo/a.txt, parent/foo/b.txt</source>
          <target state="translated">foo / &lt;code&gt;*&lt;/code&gt; .txt``-&amp;gt; parent / foo / a.txt、parent / foo / b.txt</target>
        </trans-unit>
        <trans-unit id="833ea48d42ae7901c509d4b894d199b92cdabbc8" translate="yes" xml:space="preserve">
          <source>foo/file.txt -&amp;gt; (foo, foo/file.txt) -&amp;gt; parent/foo/file.txt</source>
          <target state="translated">foo / file.txt-&amp;gt;（foo、foo / file.txt）-&amp;gt; parent / foo / file.txt</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="507d778eee60076496a3254a83432c83ecd323ab" translate="yes" xml:space="preserve">
          <source>for &lt;a href=&quot;#numpy.pv&quot;&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt;, which is then returned.</source>
          <target state="translated">以下のための&lt;a href=&quot;#numpy.pv&quot;&gt; &lt;code&gt;pv&lt;/code&gt; &lt;/a&gt;返され、。</target>
        </trans-unit>
        <trans-unit id="4c85b1033cb05ead376e57c9c2abdb237426dc49" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;pmt&lt;/code&gt;.</source>
          <target state="translated">以下のための &lt;code&gt;pmt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75f5bf14a755ac1d35f667b483875d227ec687b8" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;rate&lt;/code&gt;.</source>
          <target state="translated">用 &lt;code&gt;rate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="641bb69e72489381cd39638cd090b0b13192fc14" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;x &amp;gt; 0&lt;/code&gt; and 0 elsewhere.</source>
          <target state="translated">以下のため &lt;code&gt;x &amp;gt; 0&lt;/code&gt; と0他の場所。</target>
        </trans-unit>
        <trans-unit id="6f23394f1b08a704d28df11c3d83d02417d48588" translate="yes" xml:space="preserve">
          <source>for P(x) the probability of &lt;code&gt;x&lt;/code&gt; good results in the drawn sample, g = &lt;code&gt;ngood&lt;/code&gt;, b = &lt;code&gt;nbad&lt;/code&gt;, and n = &lt;code&gt;nsample&lt;/code&gt;.</source>
          <target state="translated">P（X）の確率のため &lt;code&gt;x&lt;/code&gt; 描か試料において良好な結果、G = &lt;code&gt;ngood&lt;/code&gt; 、B = &lt;code&gt;nbad&lt;/code&gt; 、かつn = &lt;code&gt;nsample&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="179ef9d820f49da9bd41e05c05743fd4c38c8387" translate="yes" xml:space="preserve">
          <source>for SciPy, supported NumPy version(s)</source>
          <target state="translated">SciPy用、サポートされているNumPyのバージョン</target>
        </trans-unit>
        <trans-unit id="c59644f8c38524a802838e9b8763976ea96db31b" translate="yes" xml:space="preserve">
          <source>for definition of the DFT and conventions used.</source>
          <target state="translated">DFTの定義と使用されている規約を参照してください。</target>
        </trans-unit>
        <trans-unit id="8a0c03f6d6ff423e672049e7ead64d00eba0178b" translate="yes" xml:space="preserve">
          <source>for instance.</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="2eccc35166ccc0fe84164ed3f8705715de695948" translate="yes" xml:space="preserve">
          <source>for-loops.</source>
          <target state="translated">for-loops.</target>
        </trans-unit>
        <trans-unit id="bf06383e6c52e1d0e21e07daf1320beee1e277d7" translate="yes" xml:space="preserve">
          <source>format_float_positional() (in module numpy)</source>
          <target state="translated">format_float_positional()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="d316f6a073b07a2b8786611c0ada34cf396c1c6e" translate="yes" xml:space="preserve">
          <source>format_float_scientific() (in module numpy)</source>
          <target state="translated">format_float_scientific()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="889d10aad85da4573470f1d5d4221e456124a62c" translate="yes" xml:space="preserve">
          <source>format_parser (class in numpy)</source>
          <target state="translated">フォーマットパーサ</target>
        </trans-unit>
        <trans-unit id="d9944c746c536ce904925b517e008347a60c708a" translate="yes" xml:space="preserve">
          <source>formatter : dict of callables</source>
          <target state="translated">フォーマッタ:コールアブルのディクショナリ</target>
        </trans-unit>
        <trans-unit id="10ed514c3b8115e81d1e5dd1eb905b6a54376a35" translate="yes" xml:space="preserve">
          <source>frexp (in module numpy)</source>
          <target state="translated">フリークスプ</target>
        </trans-unit>
        <trans-unit id="ed8e521212a12ac7e4d0fb093513b06d504d46cb" translate="yes" xml:space="preserve">
          <source>from None</source>
          <target state="translated">なしから</target>
        </trans-unit>
        <trans-unit id="fc06fa909803b087f74192b7ada1cbdf105f1b91" translate="yes" xml:space="preserve">
          <source>from None, dtype</source>
          <target state="translated">なしから、dtype</target>
        </trans-unit>
        <trans-unit id="c1806a800a22f9b5349fc86e1a1a7aea3cf619e7" translate="yes" xml:space="preserve">
          <source>from Python.</source>
          <target state="translated">Pythonから。</target>
        </trans-unit>
        <trans-unit id="4fd7ad719be1fd8671ddcef389110aa45f112d40" translate="yes" xml:space="preserve">
          <source>from an interpreter will run all the test routine in &amp;lsquo;test_matlib.py&amp;rsquo;.</source>
          <target state="translated">インタープリターからは、「test_matlib.py」内のすべてのテストルーチンを実行します。</target>
        </trans-unit>
        <trans-unit id="a56f0017f9e13b83ce1ddc76e01935de92ecce4b" translate="yes" xml:space="preserve">
          <source>from dict</source>
          <target state="translated">ディクトより</target>
        </trans-unit>
        <trans-unit id="d0f2eed171b0cd9a8467a7d257d0f15fe21881b9" translate="yes" xml:space="preserve">
          <source>from dict, dtype</source>
          <target state="translated">から dict,dtype</target>
        </trans-unit>
        <trans-unit id="edfc8631157375950c7cd8c4401ac6a84a89056d" translate="yes" xml:space="preserve">
          <source>from dtype</source>
          <target state="translated">dtypeより</target>
        </trans-unit>
        <trans-unit id="6185c25d0a8fba6f7fd5d33f922700e43be5ca10" translate="yes" xml:space="preserve">
          <source>from dtype, dtype</source>
          <target state="translated">dtype,dtypeから</target>
        </trans-unit>
        <trans-unit id="f78ceeae52e6af41dcda4b7bfeca58204b20b672" translate="yes" xml:space="preserve">
          <source>from list</source>
          <target state="translated">一覧から</target>
        </trans-unit>
        <trans-unit id="d0648e58f30367c8b278cda4a29b97ba3dd42be8" translate="yes" xml:space="preserve">
          <source>from list, dtype</source>
          <target state="translated">リストから,dtype</target>
        </trans-unit>
        <trans-unit id="314e62e8a3f0d6f865ca4af18b8a3a1a95ebf8fb" translate="yes" xml:space="preserve">
          <source>from string</source>
          <target state="translated">ひもから</target>
        </trans-unit>
        <trans-unit id="fcdf6423c0a7b962f1552e1176ec9969b53c230d" translate="yes" xml:space="preserve">
          <source>from string, dtype</source>
          <target state="translated">文字列、dtypeから</target>
        </trans-unit>
        <trans-unit id="a912e777fc698825555dca9b36374034e4f369f3" translate="yes" xml:space="preserve">
          <source>from the array. This can be a useful construct for defining recursive algorithms. To loop over the entire array requires</source>
          <target state="translated">を配列から取り出すことができます。これは、再帰的アルゴリズムを定義するための有用な構成要素となります。配列全体をループするには</target>
        </trans-unit>
        <trans-unit id="7df586a54524690164fa949416cc1a0867d8bd2c" translate="yes" xml:space="preserve">
          <source>from the beginning of the memory block associated with the array. Here,</source>
          <target state="translated">は、配列に関連付けられたメモリブロックの先頭からの値です。ここでは</target>
        </trans-unit>
        <trans-unit id="4c6f4f49023eabbf0f0689d39ae7144629a6d391" translate="yes" xml:space="preserve">
          <source>from tuple</source>
          <target state="translated">タプルから</target>
        </trans-unit>
        <trans-unit id="c6eb47329d29746a741df04a74229729e407b7cb" translate="yes" xml:space="preserve">
          <source>from tuple, dtype</source>
          <target state="translated">タプル、dtypeから</target>
        </trans-unit>
        <trans-unit id="655862a48e73381de75028468ee5f8fb6a691a34" translate="yes" xml:space="preserve">
          <source>from type</source>
          <target state="translated">型から</target>
        </trans-unit>
        <trans-unit id="cc4923cad27bcf958e36d6d176e1026b95823fe1" translate="yes" xml:space="preserve">
          <source>from type, dtype</source>
          <target state="translated">型から,dtype</target>
        </trans-unit>
        <trans-unit id="9de2673c94ba7aa5130ddde8b22c977a39f59c4a" translate="yes" xml:space="preserve">
          <source>fromarrays() (in module numpy.core.records)</source>
          <target state="translated">fromarrays()(モジュール numpy.core.records で)</target>
        </trans-unit>
        <trans-unit id="998666c78448b2e201fcc2721a55b998fd264ad0" translate="yes" xml:space="preserve">
          <source>frombuffer (in module numpy.ma)</source>
          <target state="translated">フロムバッファ</target>
        </trans-unit>
        <trans-unit id="a09a2291b073194a9e4e4c3261e6402d5c7c9fb1" translate="yes" xml:space="preserve">
          <source>frombuffer() (in module numpy)</source>
          <target state="translated">frombuffer()</target>
        </trans-unit>
        <trans-unit id="54b8eed4383b240b888c4c4b126b05239024fac9" translate="yes" xml:space="preserve">
          <source>fromfile() (in module numpy)</source>
          <target state="translated">fromfile()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="67dd76eb4e751d30b184ed8f7dba17226884f25d" translate="yes" xml:space="preserve">
          <source>fromfunction (in module numpy.ma)</source>
          <target state="translated">fromfunction</target>
        </trans-unit>
        <trans-unit id="2609e777c8615535022385ce5ffafa842795552b" translate="yes" xml:space="preserve">
          <source>fromfunction() (in module numpy)</source>
          <target state="translated">fromfunction()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="4770c5ed74ab3d34a97e7f5559cac811a39495c2" translate="yes" xml:space="preserve">
          <source>fromiter() (in module numpy)</source>
          <target state="translated">fromiter()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="4f87ea787c8abff4a1a4e4f422bb623b114fefab" translate="yes" xml:space="preserve">
          <source>frompyfunc() (in module numpy)</source>
          <target state="translated">frompyfunc()</target>
        </trans-unit>
        <trans-unit id="9444ce2e5b53ed223de48ff6c48284b72123e227" translate="yes" xml:space="preserve">
          <source>fromrecords() (in module numpy.core.records)</source>
          <target state="translated">fromrecords()(モジュール numpy.core.records の)</target>
        </trans-unit>
        <trans-unit id="13e198bde8dd4e26ac454374e66741e7ad295ade" translate="yes" xml:space="preserve">
          <source>fromregex() (in module numpy)</source>
          <target state="translated">fromregex()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="303ae899e76061c12cc3a7090cadfe537bded678" translate="yes" xml:space="preserve">
          <source>fromroots() (numpy.polynomial.chebyshev.Chebyshev class method)</source>
          <target state="translated">fromroots()(numpy.polynomial.chebyshev.Chebyshev クラスメソッド)</target>
        </trans-unit>
        <trans-unit id="74c6af61b2599e033d6cc1b285fc0b4341444fa1" translate="yes" xml:space="preserve">
          <source>fromstr()</source>
          <target state="translated">fromstr()</target>
        </trans-unit>
        <trans-unit id="e9e25948480a7ad1e60c9767cf2fab17d67767eb" translate="yes" xml:space="preserve">
          <source>fromstring() (in module numpy)</source>
          <target state="translated">fromstring()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="3f4bb586f04a0c1d93eadab9363a8a3183b4860c" translate="yes" xml:space="preserve">
          <source>fs</source>
          <target state="translated">fs</target>
        </trans-unit>
        <trans-unit id="a545f65bd5294b57a20112743a8e6b26a298f3c8" translate="yes" xml:space="preserve">
          <source>full argument checking with the ndpointer class factory</source>
          <target state="translated">ndpointerクラスのファクトリを使った完全な引数チェック</target>
        </trans-unit>
        <trans-unit id="2781ad7d1943401e771b2621b8e44a60d2e64be7" translate="yes" xml:space="preserve">
          <source>full() (in module numpy)</source>
          <target state="translated">full()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="78d290a9ba5ea8c6d5d95171c5ac5b002b71fc50" translate="yes" xml:space="preserve">
          <source>full_like() (in module numpy)</source>
          <target state="translated">full_like()(モジュール numpy 内)</target>
        </trans-unit>
        <trans-unit id="1d82b3fc2b22ef96ec69ef6060d2d90838b01fd5" translate="yes" xml:space="preserve">
          <source>functionality in shared libraries written for other purposes can be obtained with a simple Python wrapper and search for the library.</source>
          <target state="translated">他の目的で書かれた共有ライブラリの機能は、簡単なPythonのラッパーを使ってライブラリを検索するだけで取得できます。</target>
        </trans-unit>
        <trans-unit id="ab08261bc4509d2b5826c6574778bc8e4f6a0a95" translate="yes" xml:space="preserve">
          <source>functions from &lt;code&gt;math.h&lt;/code&gt; and &lt;code&gt;Python.h&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;math.h&lt;/code&gt; および &lt;code&gt;Python.h&lt;/code&gt; の関数;</target>
        </trans-unit>
        <trans-unit id="46783935fb4a913842ef46305db884e5043b31a7" translate="yes" xml:space="preserve">
          <source>fundamental data-type for &lt;a href=&quot;#numpy.recarray&quot;&gt;&lt;code&gt;recarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#numpy.recarray&quot;&gt; &lt;code&gt;recarray&lt;/code&gt; の&lt;/a&gt;基本的なデータ型。</target>
        </trans-unit>
        <trans-unit id="742723b2f5462c6767afd9285e399ab3fc59669d" translate="yes" xml:space="preserve">
          <source>fv() (in module numpy)</source>
          <target state="translated">fv()</target>
        </trans-unit>
        <trans-unit id="4031b9277aa37fe0db235d5989cd3d5b7e94d2c9" translate="yes" xml:space="preserve">
          <source>gamma() (in module numpy.random)</source>
          <target state="translated">gamma()(モジュール numpy.random内)</target>
        </trans-unit>
        <trans-unit id="80c3de47324331b86c68ea883a171372d2422d31" translate="yes" xml:space="preserve">
          <source>gcd (in module numpy)</source>
          <target state="translated">ジーシーディー</target>
        </trans-unit>
        <trans-unit id="da3a8dce208eef7611be290fa58858f569b06296" translate="yes" xml:space="preserve">
          <source>generate_config_py() (in module numpy.distutils.misc_util)</source>
          <target state="translated">generate_config_py()(in module numpy.distutils.misc_util)</target>
        </trans-unit>
        <trans-unit id="a38ce329971e1af94e2eaf8f8a5ff413f119201f" translate="yes" xml:space="preserve">
          <source>generate_state() (numpy.random.SeedSequence method)</source>
          <target state="translated">generate_state()(numpy.random.SeedSequenceメソッド)</target>
        </trans-unit>
        <trans-unit id="7241e14eb8a5a304085461fcfa4c6fa244e68205" translate="yes" xml:space="preserve">
          <source>generates lots of code between Python and the C code</source>
          <target state="translated">PythonとCコードの間にたくさんのコードを生成します。</target>
        </trans-unit>
        <trans-unit id="2e0b50817f2723205647a06ed11c1ead60b6316f" translate="yes" xml:space="preserve">
          <source>generic (class in numpy)</source>
          <target state="translated">ジェネリック</target>
        </trans-unit>
        <trans-unit id="2809e8161e133b999963df8f39908b398f79dee3" translate="yes" xml:space="preserve">
          <source>generic function accepting an arbitrary mask function.</source>
          <target state="translated">任意のマスク関数を受け入れる汎用関数。</target>
        </trans-unit>
        <trans-unit id="b469a86408c4935b23d7b64b9baf36215b529912" translate="yes" xml:space="preserve">
          <source>generic.T</source>
          <target state="translated">generic.T</target>
        </trans-unit>
        <trans-unit id="52258fbec818a1911b91c41ed1eb7ef5d72ba150" translate="yes" xml:space="preserve">
          <source>generic.__array__()</source>
          <target state="translated">generic.__array__()</target>
        </trans-unit>
        <trans-unit id="a5611c1449f7f8c63d58765a700c44e9db832dd1" translate="yes" xml:space="preserve">
          <source>generic.__array_interface__</source>
          <target state="translated">generic.__array_interface__</target>
        </trans-unit>
        <trans-unit id="4434bc2887cd41c0218bd1488cf0349ac5c6458f" translate="yes" xml:space="preserve">
          <source>generic.__array_priority__</source>
          <target state="translated">generic.__array_priority__</target>
        </trans-unit>
        <trans-unit id="e7fff2a413db4d581cabcf75076300fef64e33fe" translate="yes" xml:space="preserve">
          <source>generic.__array_struct__</source>
          <target state="translated">generic.__array_struct__</target>
        </trans-unit>
        <trans-unit id="a2dc55b18a066c90cd39d05ccc7b01e1c7a6ff35" translate="yes" xml:space="preserve">
          <source>generic.__array_wrap__()</source>
          <target state="translated">generic.__array_wrap__()</target>
        </trans-unit>
        <trans-unit id="19a6a00b128e761d4b407c44f9f3bb65666ba8a8" translate="yes" xml:space="preserve">
          <source>generic.__reduce__()</source>
          <target state="translated">generic.__reduce__()</target>
        </trans-unit>
        <trans-unit id="389d5b5bb216a10ee340bfd5d3308727977062f4" translate="yes" xml:space="preserve">
          <source>generic.__setstate__()</source>
          <target state="translated">generic.__setstate__()</target>
        </trans-unit>
        <trans-unit id="e45d1c433f1fda11f60eb85497acc3ba000bbf39" translate="yes" xml:space="preserve">
          <source>generic.all()</source>
          <target state="translated">generic.all()</target>
        </trans-unit>
        <trans-unit id="64801abe861da5837f771263359a2bab8cae2f10" translate="yes" xml:space="preserve">
          <source>generic.any()</source>
          <target state="translated">generic.any()</target>
        </trans-unit>
        <trans-unit id="efa2b5577e861f03c3a391c5e8f94f14a10b29de" translate="yes" xml:space="preserve">
          <source>generic.argmax()</source>
          <target state="translated">generic.argmax()</target>
        </trans-unit>
        <trans-unit id="e79046323116d58903e84d783131070cac83127d" translate="yes" xml:space="preserve">
          <source>generic.argmin()</source>
          <target state="translated">generic.argmin()</target>
        </trans-unit>
        <trans-unit id="0bd818f73b366356b240dd8375f1631f96bc9233" translate="yes" xml:space="preserve">
          <source>generic.argsort()</source>
          <target state="translated">generic.argsort()</target>
        </trans-unit>
        <trans-unit id="ce4b14f4138c8bb1ac8ae2f950b82286f5f23259" translate="yes" xml:space="preserve">
          <source>generic.astype()</source>
          <target state="translated">generic.astype()</target>
        </trans-unit>
        <trans-unit id="7adc226216b1b6addb2c6f9f2ac4e51c6361384b" translate="yes" xml:space="preserve">
          <source>generic.base</source>
          <target state="translated">generic.base</target>
        </trans-unit>
        <trans-unit id="28026df0591c6f05f04fe89a5670ad060fcd04d7" translate="yes" xml:space="preserve">
          <source>generic.byteswap()</source>
          <target state="translated">generic.byteswap()</target>
        </trans-unit>
        <trans-unit id="2754b64b74be6824e0ad92f2effe6e1bc91a9323" translate="yes" xml:space="preserve">
          <source>generic.choose()</source>
          <target state="translated">generic.choose()</target>
        </trans-unit>
        <trans-unit id="2c299bc311d2ef268efe9f6599ec42f61dce43d7" translate="yes" xml:space="preserve">
          <source>generic.clip()</source>
          <target state="translated">generic.clip()</target>
        </trans-unit>
        <trans-unit id="0ca223c87753b3c5a460ce0e31ad8739e41570bd" translate="yes" xml:space="preserve">
          <source>generic.compress()</source>
          <target state="translated">generic.compress()</target>
        </trans-unit>
        <trans-unit id="091975e701b656dcc9d1df46df930af0c00bbe41" translate="yes" xml:space="preserve">
          <source>generic.conjugate()</source>
          <target state="translated">generic.conjugate()</target>
        </trans-unit>
        <trans-unit id="bc342944c16e13fe598f18002179579fab7c0dd7" translate="yes" xml:space="preserve">
          <source>generic.copy()</source>
          <target state="translated">generic.copy()</target>
        </trans-unit>
        <trans-unit id="276dff436e45e6127b18680dfeee02e36027f17f" translate="yes" xml:space="preserve">
          <source>generic.cumprod()</source>
          <target state="translated">generic.cumprod()</target>
        </trans-unit>
        <trans-unit id="bfaa5bd91164dfe1e61a883a875791bbfb80d851" translate="yes" xml:space="preserve">
          <source>generic.cumsum()</source>
          <target state="translated">generic.cumsum()</target>
        </trans-unit>
        <trans-unit id="7ff4df79724617f014ff5fa97abe80623c872833" translate="yes" xml:space="preserve">
          <source>generic.data</source>
          <target state="translated">generic.data</target>
        </trans-unit>
        <trans-unit id="2ad46928a853f66cb7ae5970e206881627f413d6" translate="yes" xml:space="preserve">
          <source>generic.diagonal()</source>
          <target state="translated">generic.diagonal()</target>
        </trans-unit>
        <trans-unit id="84a0e5576b79dfe2a653a7eea785bcce74cd97f2" translate="yes" xml:space="preserve">
          <source>generic.dtype</source>
          <target state="translated">generic.dtype</target>
        </trans-unit>
        <trans-unit id="783b525ea62c9bd4d64d31dcbfe3036d2f60214b" translate="yes" xml:space="preserve">
          <source>generic.dump()</source>
          <target state="translated">generic.dump()</target>
        </trans-unit>
        <trans-unit id="8a3ca0ecbb76902f7f48db4d346f67da46851bc7" translate="yes" xml:space="preserve">
          <source>generic.dumps()</source>
          <target state="translated">generic.dumps()</target>
        </trans-unit>
        <trans-unit id="47d45d75d5179896a47b4d91f372eaccfaa9cfde" translate="yes" xml:space="preserve">
          <source>generic.fill()</source>
          <target state="translated">generic.fill()</target>
        </trans-unit>
        <trans-unit id="ef0e932a9f0acf3d185857f24726f4f9233a71fd" translate="yes" xml:space="preserve">
          <source>generic.flags</source>
          <target state="translated">generic.flags</target>
        </trans-unit>
        <trans-unit id="2020599513a2fa26a6c54427d9d1f65f1671b03c" translate="yes" xml:space="preserve">
          <source>generic.flat</source>
          <target state="translated">generic.flat</target>
        </trans-unit>
        <trans-unit id="c2ef4fd8b55c86f6d1efe75aaadd1a6f8f893515" translate="yes" xml:space="preserve">
          <source>generic.flatten()</source>
          <target state="translated">generic.flatten()</target>
        </trans-unit>
        <trans-unit id="138bd20652e17a61c33f6adf78139d4c31eecaa1" translate="yes" xml:space="preserve">
          <source>generic.getfield()</source>
          <target state="translated">generic.getfield()</target>
        </trans-unit>
        <trans-unit id="0a5e7d64f7d42d0695b5d23d7a52eed831c5f0f9" translate="yes" xml:space="preserve">
          <source>generic.imag</source>
          <target state="translated">generic.imag</target>
        </trans-unit>
        <trans-unit id="1bd42fcc426df74ccd590279d4c90ed5dd81da7e" translate="yes" xml:space="preserve">
          <source>generic.item()</source>
          <target state="translated">generic.item()</target>
        </trans-unit>
        <trans-unit id="33817c1ed5fec31510a967559ace3a3d6d9afda1" translate="yes" xml:space="preserve">
          <source>generic.itemset()</source>
          <target state="translated">generic.itemset()</target>
        </trans-unit>
        <trans-unit id="fb302b41445c21a9df1b716673db0eaca166893f" translate="yes" xml:space="preserve">
          <source>generic.itemsize</source>
          <target state="translated">generic.itemsize</target>
        </trans-unit>
        <trans-unit id="d91b8bb2b1eeebdbbf979093ad955442849f6cc4" translate="yes" xml:space="preserve">
          <source>generic.max()</source>
          <target state="translated">generic.max()</target>
        </trans-unit>
        <trans-unit id="2e5bce83027d5f4131019a3a04e7766a706207d6" translate="yes" xml:space="preserve">
          <source>generic.mean()</source>
          <target state="translated">generic.mean()</target>
        </trans-unit>
        <trans-unit id="4be3b366226fe2bf7d5fff4b7d53f6d7e2275939" translate="yes" xml:space="preserve">
          <source>generic.min()</source>
          <target state="translated">generic.min()</target>
        </trans-unit>
        <trans-unit id="add5710e5ce19bccc38a6dae2abf75d0e6324fb7" translate="yes" xml:space="preserve">
          <source>generic.nbytes</source>
          <target state="translated">generic.nbytes</target>
        </trans-unit>
        <trans-unit id="e99c0102749d701556ccf6b8ddf87c1c98b18a6d" translate="yes" xml:space="preserve">
          <source>generic.ndim</source>
          <target state="translated">generic.ndim</target>
        </trans-unit>
        <trans-unit id="c1660dd6670e607a1e66cf2cb0ab2571665bf51b" translate="yes" xml:space="preserve">
          <source>generic.newbyteorder()</source>
          <target state="translated">generic.newbyteorder()</target>
        </trans-unit>
        <trans-unit id="44d7b0cfda72b4e20f5756e4102f8f8754ac9537" translate="yes" xml:space="preserve">
          <source>generic.nonzero()</source>
          <target state="translated">generic.nonzero()</target>
        </trans-unit>
        <trans-unit id="4a32babeb2a2ccf41bbe5180f77ee3ba1623abd2" translate="yes" xml:space="preserve">
          <source>generic.prod()</source>
          <target state="translated">generic.prod()</target>
        </trans-unit>
        <trans-unit id="87522ec89addeb6d404762869cdddd2b39cd056d" translate="yes" xml:space="preserve">
          <source>generic.ptp()</source>
          <target state="translated">generic.ptp()</target>
        </trans-unit>
        <trans-unit id="590499edd932463ceeed1fbbebec5d3d71a70c50" translate="yes" xml:space="preserve">
          <source>generic.put()</source>
          <target state="translated">generic.put()</target>
        </trans-unit>
        <trans-unit id="51a080ab2a704c1983a785d7c67e7b5a0e6334ff" translate="yes" xml:space="preserve">
          <source>generic.ravel()</source>
          <target state="translated">generic.ravel()</target>
        </trans-unit>
        <trans-unit id="0663f1e7a6bb0ae91f3a9052f114680011ce023d" translate="yes" xml:space="preserve">
          <source>generic.real</source>
          <target state="translated">generic.real</target>
        </trans-unit>
        <trans-unit id="5d833eca4393b3f25b2ac09c00008fbc288e0783" translate="yes" xml:space="preserve">
          <source>generic.repeat()</source>
          <target state="translated">generic.repeat()</target>
        </trans-unit>
        <trans-unit id="0f80a4e04b8d6798b9f9c24956ea632fd52bb98a" translate="yes" xml:space="preserve">
          <source>generic.reshape()</source>
          <target state="translated">generic.reshape()</target>
        </trans-unit>
        <trans-unit id="fb7112ffd7f108e99759425319f7ca81e6fff7ce" translate="yes" xml:space="preserve">
          <source>generic.resize()</source>
          <target state="translated">generic.resize()</target>
        </trans-unit>
        <trans-unit id="db1186d7513cd8a4340b725202a1769916e25379" translate="yes" xml:space="preserve">
          <source>generic.round()</source>
          <target state="translated">generic.round()</target>
        </trans-unit>
        <trans-unit id="1cced9c43ce19de4251617cfbe2e88dd8e3ef17b" translate="yes" xml:space="preserve">
          <source>generic.searchsorted()</source>
          <target state="translated">generic.searchsorted()</target>
        </trans-unit>
        <trans-unit id="74f61f0f343974a473d68e8ff5536a791b7c8197" translate="yes" xml:space="preserve">
          <source>generic.setfield()</source>
          <target state="translated">generic.setfield()</target>
        </trans-unit>
        <trans-unit id="564e1331e20ad0d61cacd0fc7a26a9b8c3d1c3ac" translate="yes" xml:space="preserve">
          <source>generic.setflags()</source>
          <target state="translated">generic.setflags()</target>
        </trans-unit>
        <trans-unit id="c6513f91115123ee95d4923113c42d0941c19973" translate="yes" xml:space="preserve">
          <source>generic.shape</source>
          <target state="translated">generic.shape</target>
        </trans-unit>
        <trans-unit id="efafe2f79217a1fb31a43927da248fe5439d3328" translate="yes" xml:space="preserve">
          <source>generic.size</source>
          <target state="translated">generic.size</target>
        </trans-unit>
        <trans-unit id="a81b5a7b74210778abaed8d2c920e6e583500c3e" translate="yes" xml:space="preserve">
          <source>generic.sort()</source>
          <target state="translated">generic.sort()</target>
        </trans-unit>
        <trans-unit id="ccd76d17a158f7ca25e6e875bae60466516cb782" translate="yes" xml:space="preserve">
          <source>generic.squeeze()</source>
          <target state="translated">generic.squeeze()</target>
        </trans-unit>
        <trans-unit id="a98c9a5da6154d2ba440d083b05fab8ae3abfd2c" translate="yes" xml:space="preserve">
          <source>generic.std()</source>
          <target state="translated">generic.std()</target>
        </trans-unit>
        <trans-unit id="d0c34cf0161e1c4ff3cc16b2cc77fe89c96c801a" translate="yes" xml:space="preserve">
          <source>generic.strides</source>
          <target state="translated">generic.strides</target>
        </trans-unit>
        <trans-unit id="8cc4a97852323265636110d0fd398ad7e1583a0d" translate="yes" xml:space="preserve">
          <source>generic.sum()</source>
          <target state="translated">generic.sum()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
