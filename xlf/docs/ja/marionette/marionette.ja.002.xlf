<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="marionette">
    <body>
      <group id="marionette">
        <trans-unit id="ba846a79bd719082b066bf9828c5cc12471dddd5" translate="yes" xml:space="preserve">
          <source>This will immediately render &lt;code&gt;RootView&lt;/code&gt; and fire the usual triggers such as &lt;code&gt;before:attach&lt;/code&gt; and &lt;code&gt;attach&lt;/code&gt; in addition to the &lt;code&gt;before:render&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt; triggers.</source>
          <target state="translated">これにより、即座に &lt;code&gt;RootView&lt;/code&gt; がレンダリングされ、 &lt;code&gt;before:render&lt;/code&gt; および &lt;code&gt;render&lt;/code&gt; トリガーに加えて、before： &lt;code&gt;before:attach&lt;/code&gt; および &lt;code&gt;attach&lt;/code&gt; などの通常のトリガーが起動します。</target>
        </trans-unit>
        <trans-unit id="6036b3f89eadab59588436b50c4978006bf0e1d9" translate="yes" xml:space="preserve">
          <source>This will set a trigger called &lt;code&gt;show:link&lt;/code&gt; that will be fired whenever the user clicks an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; inside the view.</source>
          <target state="translated">これにより、ユーザーがビュー内の &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; をクリックするたびに起動される &lt;code&gt;show:link&lt;/code&gt; というトリガーが設定されます。</target>
        </trans-unit>
        <trans-unit id="456c43b09b336f08ddb24cec398ee7def4d28650" translate="yes" xml:space="preserve">
          <source>This works exactly the same way for the &lt;code&gt;CollectionView&lt;/code&gt; and its &lt;code&gt;childView&lt;/code&gt;:</source>
          <target state="translated">これは、 &lt;code&gt;CollectionView&lt;/code&gt; とその &lt;code&gt;childView&lt;/code&gt; の場合とまったく同じように機能します。</target>
        </trans-unit>
        <trans-unit id="a0e5d6fc6540f6a4a35402d2e364a692502e6493" translate="yes" xml:space="preserve">
          <source>To access an option, we use the &lt;code&gt;getOption&lt;/code&gt; method. &lt;code&gt;getOption&lt;/code&gt; will fall back to the value of the same name defined on the instance if not defined in the options.</source>
          <target state="translated">オプションにアクセスするには、 &lt;code&gt;getOption&lt;/code&gt; メソッドを使用します。 &lt;code&gt;getOption&lt;/code&gt; は、オプションで定義されていない場合、インスタンスで定義された同じ名前の値にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="385ec0005897ad7ef03ed0e1ae25df2f7c906b0d" translate="yes" xml:space="preserve">
          <source>To access the child view of a &lt;code&gt;View&lt;/code&gt; - use the &lt;code&gt;getChildView(regionName)&lt;/code&gt; method. This will return the view instance that is currently being displayed at that region, or &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">子ビューにアクセスするには、 &lt;code&gt;View&lt;/code&gt; 使用- &lt;code&gt;getChildView(regionName)&lt;/code&gt; メソッドを。これは、そのリージョンに現在表示されているビューインスタンス、または &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e09ccf0e50ea605bfa1582d030f943579d7a8e22" translate="yes" xml:space="preserve">
          <source>To add regions to a view after it has been instantiated, simply use the &lt;code&gt;addRegion&lt;/code&gt; method:</source>
          <target state="translated">インスタンス化された後にビューにリージョンを追加するには、単純に &lt;code&gt;addRegion&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="77c69489cc6b8e216db8fb3411eb0032e2d28bf0" translate="yes" xml:space="preserve">
          <source>To call specific functions on event triggers, use the &lt;code&gt;childViewEvents&lt;/code&gt; attribute to map child events to methods on the parent view. This takes events fired on child views - &lt;em&gt;without the &lt;code&gt;childview:&lt;/code&gt; prefix&lt;/em&gt; - and calls the method referenced or attached function.</source>
          <target state="translated">イベントトリガーで特定の関数を呼び出すには、 &lt;code&gt;childViewEvents&lt;/code&gt; 属性を使用して、子イベントを親ビューのメソッドにマップします。これは&lt;em&gt;、 &lt;code&gt;childview:&lt;/code&gt; プレフィックスなしで、&lt;/em&gt;子ビューで発生したイベントを受け取り、参照またはアタッチされた関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="79e1fd7f064b7a1f1843471f5b702559216b1dde" translate="yes" xml:space="preserve">
          <source>To define your &lt;code&gt;ui&lt;/code&gt; hash, just set an object of named jQuery selectors to the &lt;code&gt;ui&lt;/code&gt; attribute of your View:</source>
          <target state="translated">&lt;code&gt;ui&lt;/code&gt; ハッシュを定義するには、名前付きjQueryセレクターのオブジェクトをビューの &lt;code&gt;ui&lt;/code&gt; 属性に設定するだけです。</target>
        </trans-unit>
        <trans-unit id="7abc66f4bd96d45be84e1e329a175072f29883d6" translate="yes" xml:space="preserve">
          <source>To get the handles to your UI elements, use the &lt;code&gt;getUI(ui)&lt;/code&gt; method:</source>
          <target state="translated">UI要素のハンドルを取得するには、 &lt;code&gt;getUI(ui)&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="e716dd93ec6ee64d9b43143ccfd78e32e8baadac" translate="yes" xml:space="preserve">
          <source>To implement your own DOM API use &lt;code&gt;setDomApi&lt;/code&gt;:</source>
          <target state="translated">独自のDOM APIを実装するには、 &lt;code&gt;setDomApi&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="6d1a20c4230001ed09b49b1a1ac7e5cb503f700d" translate="yes" xml:space="preserve">
          <source>To overwrite the parent &lt;code&gt;el&lt;/code&gt; of the region with the rendered contents of the inner View, use &lt;code&gt;replaceElement&lt;/code&gt; as so:</source>
          <target state="translated">リージョンの親 &lt;code&gt;el&lt;/code&gt; を内部ビューのレンダリングされたコンテンツで上書きするには、次のように &lt;code&gt;replaceElement&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="f9deb22b277e4bb94fff5287834e0d9c52bede3b" translate="yes" xml:space="preserve">
          <source>To show a view inside a region, simply call &lt;code&gt;showChildView(regionName, view)&lt;/code&gt;. This will handle rendering the view's HTML and attaching it to the DOM for you:</source>
          <target state="translated">リージョン内のビューを表示するには、単に &lt;code&gt;showChildView(regionName, view)&lt;/code&gt; 呼び出します。これにより、ビューのHTMLのレンダリングとDOMへのアタッチが処理されます。</target>
        </trans-unit>
        <trans-unit id="5c2cf42465f9440c172fb46aa4af2a5bef8d79f7" translate="yes" xml:space="preserve">
          <source>To support non-Marionette Views, Marionette uses two flags to determine if it should trigger &lt;code&gt;render&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; events on the view. If a custom view throws it's own &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;destroy&lt;/code&gt; events, the related flag should be set to &lt;code&gt;true&lt;/code&gt; to avoid Marionette duplicating these events.</source>
          <target state="translated">非マリオネットビューをサポートするために、マリオネットは2つのフラグを使用して、ビューの &lt;code&gt;render&lt;/code&gt; イベントと &lt;code&gt;destroy&lt;/code&gt; イベントをトリガーするかどうかを決定します。カスタムビューが独自の &lt;code&gt;render&lt;/code&gt; または &lt;code&gt;destroy&lt;/code&gt; イベントをスローする場合、Marionetteがこれらのイベントを複製しないように、関連フラグを &lt;code&gt;true&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="ee2b9a04ebaa9257d4d6b167e2286bb023fc559c" translate="yes" xml:space="preserve">
          <source>Trigger an event and &lt;a href=&quot;events#onevent-binding&quot;&gt;a corresponding method&lt;/a&gt; on the object. It is the same as &lt;code&gt;Backbone&lt;/code&gt;'s &lt;a href=&quot;http://backbonejs.org/#Events-trigger&quot;&gt;&lt;code&gt;trigger&lt;/code&gt;&lt;/a&gt; but with the additional method handler.</source>
          <target state="translated">オブジェクトのイベントと&lt;a href=&quot;events#onevent-binding&quot;&gt;対応するメソッド&lt;/a&gt;をトリガーします。 &lt;code&gt;Backbone&lt;/code&gt; の&lt;a href=&quot;http://backbonejs.org/#Events-trigger&quot;&gt; &lt;code&gt;trigger&lt;/code&gt; &lt;/a&gt;と同じですが、メソッドハンドラーが追加されています。</target>
        </trans-unit>
        <trans-unit id="27e09777ec09003d272acf09af53dd2e6503b3c9" translate="yes" xml:space="preserve">
          <source>Trigger an event and a corresponding method on the target object.</source>
          <target state="translated">ターゲットオブジェクト上でイベントと対応するメソッドをトリガーします。</target>
        </trans-unit>
        <trans-unit id="2a8d0e1960b68eb1b1a1eec88873b2f67ef3bfc2" translate="yes" xml:space="preserve">
          <source>Triggering Events on Child Events</source>
          <target state="translated">子イベントのトリガーイベント</target>
        </trans-unit>
        <trans-unit id="3db9c7d0afaa943a06bd3243b5f59b986b608ff7" translate="yes" xml:space="preserve">
          <source>Triggering and Listening to Events</source>
          <target state="translated">イベントのトリガーとリスニング</target>
        </trans-unit>
        <trans-unit id="a908b41dd53060995b60afa5eac5245d704bfa23" translate="yes" xml:space="preserve">
          <source>Unique Client ID</source>
          <target state="translated">ユニーククライアントID</target>
        </trans-unit>
        <trans-unit id="08adfc1c6dba64d1e18890a8a5f8b0c75a9c03c1" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;http://backbonejs.org/#View-template&quot;&gt;&lt;code&gt;Backbone.View&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;classes&quot;&gt;Marionette views&lt;/a&gt; provide a customizable solution for rendering a template with data and placing the results in the DOM.</source>
          <target state="translated">&lt;a href=&quot;http://backbonejs.org/#View-template&quot;&gt; &lt;code&gt;Backbone.View&lt;/code&gt; &lt;/a&gt;とは異なり、&lt;a href=&quot;classes&quot;&gt;Marionetteビュー&lt;/a&gt;は、データを含むテンプレートをレンダリングし、結果をDOMに配置するためのカスタマイズ可能なソリューションを提供します。</target>
        </trans-unit>
        <trans-unit id="eaa8cf2db49eecc02170a60d957f17c35ff291f0" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;Backbone.View&lt;/code&gt; Marionette defines &lt;code&gt;render&lt;/code&gt; and this method should not be overridden. To add functionality to the render use the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; and &lt;code&gt;before:render&lt;/code&gt; events&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Backbone.View&lt;/code&gt; とは異なり、マリオネットは &lt;code&gt;render&lt;/code&gt; を定義し、このメソッドはオーバーライドされません。レンダーに機能を追加するには、&lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; および &lt;code&gt;before:render&lt;/code&gt; イベントを使用します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2697109b59f266d9a20453e5d7da360b7e07fcc" translate="yes" xml:space="preserve">
          <source>Unlike managed children there may be cases where you want to insert views to the results of the &lt;code&gt;CollectionView&lt;/code&gt; after the &lt;code&gt;collection&lt;/code&gt; changes, or after sorting and/or filtering. In these cases the solution might depend slightly on the features used on the &lt;code&gt;CollectionView&lt;/code&gt;.</source>
          <target state="translated">管理された子とは異なり、 &lt;code&gt;collection&lt;/code&gt; 変更後、または並べ替えやフィルタリング後に、 &lt;code&gt;CollectionView&lt;/code&gt; の結果にビューを挿入したい場合があります。これらの場合、ソリューションは &lt;code&gt;CollectionView&lt;/code&gt; で使用される機能にわずかに依存する可能性があります。</target>
        </trans-unit>
        <trans-unit id="8eadc202f0957d4bfc6b14611c2a7f66918eefe6" translate="yes" xml:space="preserve">
          <source>Unlike other &lt;a href=&quot;classes&quot;&gt;Marionette classes&lt;/a&gt;, &lt;code&gt;Behavior&lt;/code&gt;s are not meant to be instantiated except by a view.</source>
          <target state="translated">他の&lt;a href=&quot;classes&quot;&gt;Marionetteクラス&lt;/a&gt;とは異なり、 &lt;code&gt;Behavior&lt;/code&gt; は、ビューを除いてインスタンス化されることを意図していません。</target>
        </trans-unit>
        <trans-unit id="2f3485fdf3ae3831ba56f645c6f462d9a81292dd" translate="yes" xml:space="preserve">
          <source>Upgrade Guide</source>
          <target state="translated">アップグレードガイド</target>
        </trans-unit>
        <trans-unit id="6354643730833ae8a19ce09cf0eabe316905561b" translate="yes" xml:space="preserve">
          <source>Upgrade Guide from v3 to v4</source>
          <target state="translated">v3からv4へのアップグレードガイド</target>
        </trans-unit>
        <trans-unit id="5042dde06c5deca547ea7cf100c10c29428d92be" translate="yes" xml:space="preserve">
          <source>Upgrading for Marionette 2.x</source>
          <target state="translated">マリオネット2.xへのアップグレード</target>
        </trans-unit>
        <trans-unit id="801e235fc8abe18b2a6d14b993240c622fcdd384" translate="yes" xml:space="preserve">
          <source>Upgrading to Marionette 3</source>
          <target state="translated">マリオネット3へのアップグレード</target>
        </trans-unit>
        <trans-unit id="79ca5e1cdcd94d90c50f8c8526fa8be123de3df2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;isEnabled&lt;/code&gt; if you need to know the state of a feature flag programmatically.</source>
          <target state="translated">プログラムで機能フラグの状態を知る必要がある場合は、 &lt;code&gt;isEnabled&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="1a2cca36be7ffb24a08cff3f8271679e2a01e28d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;setEnabled&lt;/code&gt; to change the value of a flag. While setting a flag at any point may work, these flags are designed to be set before any functionality of Marionette is used. Change flags after at your own risk.</source>
          <target state="translated">フラグの値を変更するには、 &lt;code&gt;setEnabled&lt;/code&gt; を使用します。いつでもフラグを設定できますが、これらのフラグはMarionetteの機能を使用する前に設定するように設計されています。自分の責任でフラグを変更してください。</target>
        </trans-unit>
        <trans-unit id="65b3d6ff138d53019eb40c4bf6dc16a500369b46" translate="yes" xml:space="preserve">
          <source>Users of versions of Marionette prior to v4 will notice that a router is no longer a &lt;a href=&quot;classes&quot;&gt;bundled class&lt;/a&gt;. The &lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;Marionette.AppRouter&lt;/a&gt; was extracted and the core library will no longer hold an opinion on routing.</source>
          <target state="translated">バージョン4より前のMarionetteのユーザーは、ルーターが&lt;a href=&quot;classes&quot;&gt;バンドルされたクラスで&lt;/a&gt;はなくなったことに気付くでしょう。&lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;Marionette.AppRouterが&lt;/a&gt;抽出されなかったとコアライブラリは、もはやルーティングについての意見を保持します。</target>
        </trans-unit>
        <trans-unit id="d4f81ffd9345fff8b9320a5e98ae9c9b80c7f7a4" translate="yes" xml:space="preserve">
          <source>Users of versions of Marionette prior to v4 will notice that a router is no longer bundled. The &lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;Marionette.AppRouter&lt;/a&gt; was extracted and the core library will no longer hold an opinion on routing.</source>
          <target state="translated">v4より前のバージョンのMarionetteのユーザーは、ルーターがバンドルされなくなったことに気付くでしょう。&lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;Marionette.AppRouterが&lt;/a&gt;抽出されなかったとコアライブラリは、もはやルーティングについての意見を保持します。</target>
        </trans-unit>
        <trans-unit id="27ee1098a6fd4fb1ea6d962c2f6e7dd69e6d59ab" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Behavior&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;Behavior&lt;/code&gt; sの使用</target>
        </trans-unit>
        <trans-unit id="2e05c9e31272e9dd55979bb8ca2a1b61bd5c940e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;CollectionView&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; の使用</target>
        </trans-unit>
        <trans-unit id="433a7a6c6b4879b360bd2ba8e5a45aa7730529a4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;CollectionView&lt;/code&gt;'s &lt;code&gt;childViewEvents&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; の &lt;code&gt;childViewEvents&lt;/code&gt; の使用</target>
        </trans-unit>
        <trans-unit id="bbfeb8ac783a32ccaa68907f97085f894afcf357" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;CollectionView&lt;/code&gt;'s &lt;code&gt;childViewTriggers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; の &lt;code&gt;childViewTriggers&lt;/code&gt; の使用</target>
        </trans-unit>
        <trans-unit id="f3e15d343d39e7253f068049cdedd81febd6f8ca" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setElement&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;setElement&lt;/code&gt; の使用</target>
        </trans-unit>
        <trans-unit id="812099ff63e746eaf220dfeeb406a02711016677" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;ui&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ui&lt;/code&gt; 使用</target>
        </trans-unit>
        <trans-unit id="a32eea76841ea065691e4cd85f9832e10ddde365" translate="yes" xml:space="preserve">
          <source>Using Behaviors</source>
          <target state="translated">行動様式の利用</target>
        </trans-unit>
        <trans-unit id="a41a8e686067c9cb12bd676c7f024ac61848f236" translate="yes" xml:space="preserve">
          <source>Using CollectionView</source>
          <target state="translated">コレクションビューの使用</target>
        </trans-unit>
        <trans-unit id="bcdc1228190180106763e709593ffa4ec16d4bfb" translate="yes" xml:space="preserve">
          <source>Using ES6 Modules</source>
          <target state="translated">ES6モジュールの使用</target>
        </trans-unit>
        <trans-unit id="b5d38c8595ef59265e40019624551a84d39f934b" translate="yes" xml:space="preserve">
          <source>Using Regions on a view</source>
          <target state="translated">ビューでのリージョンの使用</target>
        </trans-unit>
        <trans-unit id="8548b3322caae3fbdf2ec743cb376df724d37bba" translate="yes" xml:space="preserve">
          <source>Using a Custom Renderer</source>
          <target state="translated">カスタムレンダラの使用</target>
        </trans-unit>
        <trans-unit id="e8a9a88c2df48705f29701dab35d736845b3322d" translate="yes" xml:space="preserve">
          <source>Using a RegionClass</source>
          <target state="translated">RegionClass の使用</target>
        </trans-unit>
        <trans-unit id="9a9f785aefeb293e51dc15c82b88ff674873564a" translate="yes" xml:space="preserve">
          <source>Using a View Without a Template</source>
          <target state="translated">テンプレートなしでビューを使用する</target>
        </trans-unit>
        <trans-unit id="3930c0ae98a9da7422b3bb19ebceffe12ba43c1b" translate="yes" xml:space="preserve">
          <source>Using a similar approach is possible to create a region animated with CSS:</source>
          <target state="translated">同様の方法で、CSSでアニメーションしたリージョンを作成することができます。</target>
        </trans-unit>
        <trans-unit id="5139be936719c94a0cacdb3ed6a55f248b6f6192" translate="yes" xml:space="preserve">
          <source>Using an object, we must define the &lt;code&gt;behaviorClass&lt;/code&gt; attribute to refer to our behaviors and then add any extra options with keys matching the option we want to override. Any passed options will override the values from &lt;code&gt;options&lt;/code&gt; property.</source>
          <target state="translated">オブジェクトを使用して、 &lt;code&gt;behaviorClass&lt;/code&gt; を参照するためにbehaviorClass属性を定義し、オーバーライドするオプションと一致するキーを持つ追加のオプションを追加する必要があります。渡されたオプションはすべて、 &lt;code&gt;options&lt;/code&gt; プロパティの値をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="ee8bbedd8b4698a28c384cf0c5ee8da8a1e79d62" translate="yes" xml:space="preserve">
          <source>Using regions lets you listen to the events that fire on child views - views attached inside a region. This lets a parent view take action depending on what events are triggered in views it directly owns.</source>
          <target state="translated">リージョンを使用すると、子ビュー、つまりリージョン内に接続されたビューで発生するイベントを聞くことができます。これにより、親ビューが直接所有しているビューでトリガーされるイベントに応じて、親ビューがアクションを起こすことができます。</target>
        </trans-unit>
        <trans-unit id="817982dec535c11f3fa64f999b4704a99b55eadb" translate="yes" xml:space="preserve">
          <source>Using separate &lt;code&gt;View&lt;/code&gt;&lt;code&gt;LayoutView&lt;/code&gt; and &lt;code&gt;ItemView&lt;/code&gt; was complicating the API for Marionette needlessly. The new &lt;code&gt;View&lt;/code&gt; replaces all of this and sets a clear recommendation for building layout trees.</source>
          <target state="translated">別の &lt;code&gt;View&lt;/code&gt; &lt;code&gt;LayoutView&lt;/code&gt; と &lt;code&gt;ItemView&lt;/code&gt; を使用すると、MarionetteのAPIが不必要に複雑になりました。新しい &lt;code&gt;View&lt;/code&gt; はこれをすべて置き換え、レイアウトツリーを構築するための明確な推奨事項を設定します。</target>
        </trans-unit>
        <trans-unit id="2e457fef53b8f802e96ada661387b9d7edd7b7ca" translate="yes" xml:space="preserve">
          <source>Using this process, &lt;code&gt;before:dom:refresh&lt;/code&gt; will call the &lt;code&gt;onBeforeDomRefresh&lt;/code&gt; method. Let's see it in action with a custom event:</source>
          <target state="translated">このプロセスを使用して、 &lt;code&gt;before:dom:refresh&lt;/code&gt; は &lt;code&gt;onBeforeDomRefresh&lt;/code&gt; メソッドを呼び出します。カスタムイベントで実際に動作しているところを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="8bf056ede57539fe7ab422f88b516c58223a0adf" translate="yes" xml:space="preserve">
          <source>Utility Functions</source>
          <target state="translated">ユーティリティ機能</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="72baf7764f11e9fdad2b2e25816f89717ad66f57" translate="yes" xml:space="preserve">
          <source>Value Attributes</source>
          <target state="translated">値属性</target>
        </trans-unit>
        <trans-unit id="69bd4ef9fbd0894a22759c3766b859defbdedbc8" translate="yes" xml:space="preserve">
          <source>View</source>
          <target state="translated">View</target>
        </trans-unit>
        <trans-unit id="f79a05b6d0a1a004547c199b4c29b81289a839e5" translate="yes" xml:space="preserve">
          <source>View &lt;code&gt;events&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; 見る</target>
        </trans-unit>
        <trans-unit id="958bf0cc26ab6c4778a2a3a054ed6b4a74e0fcdb" translate="yes" xml:space="preserve">
          <source>View &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;triggers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; と &lt;code&gt;triggers&lt;/code&gt; 表示する</target>
        </trans-unit>
        <trans-unit id="fa8fbc39825e6de9e0d93562407b13e1711413e5" translate="yes" xml:space="preserve">
          <source>View &lt;code&gt;render&lt;/code&gt; is no longer bound to the view</source>
          <target state="translated">ビューの &lt;code&gt;render&lt;/code&gt; がビューにバインドされなくなった</target>
        </trans-unit>
        <trans-unit id="5f6c9eec2c8e0dc3e7d469bd18b62b0cb306a6cc" translate="yes" xml:space="preserve">
          <source>View &lt;code&gt;triggers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;triggers&lt;/code&gt; 表示</target>
        </trans-unit>
        <trans-unit id="c6729099963f88f60def2ae31117ca53e3d228f8" translate="yes" xml:space="preserve">
          <source>View &lt;code&gt;triggers&lt;/code&gt; Event Object</source>
          <target state="translated">&lt;code&gt;triggers&lt;/code&gt; イベントオブジェクトの表示</target>
        </trans-unit>
        <trans-unit id="845c9b8f7a18b781fac4dac39f6d84a3935a9e8d" translate="yes" xml:space="preserve">
          <source>View DOM Change Events</source>
          <target state="translated">DOM 変更イベントを見る</target>
        </trans-unit>
        <trans-unit id="3208a18454377ff40072371eec10a744be4da019" translate="yes" xml:space="preserve">
          <source>View DOM proxies</source>
          <target state="translated">DOM プロキシを見る</target>
        </trans-unit>
        <trans-unit id="00947c6031ed281f9ca251b90cfbd0e688a881dc" translate="yes" xml:space="preserve">
          <source>View Destroy Events</source>
          <target state="translated">デストロイイベントを見る</target>
        </trans-unit>
        <trans-unit id="a77e6decaadbd6c9dba17ef5c3aebc35f9567bb7" translate="yes" xml:space="preserve">
          <source>View Events</source>
          <target state="translated">イベントを見る</target>
        </trans-unit>
        <trans-unit id="918d0ef653910bf4111dbbaa6534e2857152b632" translate="yes" xml:space="preserve">
          <source>View Lifecycle</source>
          <target state="translated">ライフサイクルを見る</target>
        </trans-unit>
        <trans-unit id="074d870b70b1b41e1d454018ceeef8b48f4d6900" translate="yes" xml:space="preserve">
          <source>View Lifecycle and Events</source>
          <target state="translated">ライフサイクルとイベントを見る</target>
        </trans-unit>
        <trans-unit id="a553cf4491c12ca67907c1c3087ac69461e952cf" translate="yes" xml:space="preserve">
          <source>View Proxy</source>
          <target state="translated">プロキシを見る</target>
        </trans-unit>
        <trans-unit id="376fbaa0d3330a5706b4ac1606fb05d61195ed65" translate="yes" xml:space="preserve">
          <source>View Rendering</source>
          <target state="translated">レンダリングを見る</target>
        </trans-unit>
        <trans-unit id="414584a71183ec9fbc09a40fed17fdc2fbc7e2bc" translate="yes" xml:space="preserve">
          <source>View Template Rendering</source>
          <target state="translated">テンプレートレンダリングを見る</target>
        </trans-unit>
        <trans-unit id="eba22960e41a0a2cea75d1f76196451d4334a96d" translate="yes" xml:space="preserve">
          <source>View data serialization no longer clones the data</source>
          <target state="translated">ビューデータのシリアル化でデータがクローン化されなくなった</target>
        </trans-unit>
        <trans-unit id="bcefec5396e82de7065feadaf515526ea6c9a6eb" translate="yes" xml:space="preserve">
          <source>View definition options will not be passed to the view &lt;code&gt;initialize&lt;/code&gt;.</source>
          <target state="translated">ビュー定義オプションは、ビューの &lt;code&gt;initialize&lt;/code&gt; 渡されません。</target>
        </trans-unit>
        <trans-unit id="f249b1e7dfff899841205e8afe3ef2fcbc6f49bc" translate="yes" xml:space="preserve">
          <source>View entity events</source>
          <target state="translated">エンティティイベントの表示</target>
        </trans-unit>
        <trans-unit id="10162c4c6ed49922242efffff0171faf523d53b7" translate="yes" xml:space="preserve">
          <source>View events and triggers</source>
          <target state="translated">イベントとトリガーを表示</target>
        </trans-unit>
        <trans-unit id="9b412532146b50bb3609207aa033765c1d50e7f6" translate="yes" xml:space="preserve">
          <source>View is constructed</source>
          <target state="translated">ビューが構築されている</target>
        </trans-unit>
        <trans-unit id="b87d354b5fd262dda1354f87d29a631c598c7b67" translate="yes" xml:space="preserve">
          <source>View is initialized</source>
          <target state="translated">ビューが初期化される</target>
        </trans-unit>
        <trans-unit id="1ead4eeb9b9a3c3349404dc40a5bf16f55ca3dd8" translate="yes" xml:space="preserve">
          <source>View isAttached()</source>
          <target state="translated">ビューの isAttached()</target>
        </trans-unit>
        <trans-unit id="228c90e7a2d2a442579c0c7a8a327b6f84280879" translate="yes" xml:space="preserve">
          <source>View isDestroyed()</source>
          <target state="translated">ビューの isDestroyed()</target>
        </trans-unit>
        <trans-unit id="d4874a255a50dd76b79d25c00aec8ed257812fee" translate="yes" xml:space="preserve">
          <source>View isRendered()</source>
          <target state="translated">ビューの isRendered()</target>
        </trans-unit>
        <trans-unit id="3d41b58b53a5ba34076b7613271014fe6ed5ca74" translate="yes" xml:space="preserve">
          <source>View regions will be emptied on each render so views shown outside of the &lt;code&gt;render&lt;/code&gt; event will still need be reshown on subsequent renders.</source>
          <target state="translated">各レンダーでビュー領域が空になるので、 &lt;code&gt;render&lt;/code&gt; イベントの外側に表示されるビューは、その後のレンダーでも再表示する必要があります。</target>
        </trans-unit>
        <trans-unit id="a44c4fb12334958833e8dabb26a0950634409d7a" translate="yes" xml:space="preserve">
          <source>View triggers an &lt;code&gt;initialize&lt;/code&gt; event on the behavior.</source>
          <target state="translated">ビューはビヘイビアーの &lt;code&gt;initialize&lt;/code&gt; イベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="f880a30351aa948c04f1c77a21073ace565a228e" translate="yes" xml:space="preserve">
          <source>View's &lt;code&gt;template: false&lt;/code&gt; now no-ops the render</source>
          <target state="translated">ビューの &lt;code&gt;template: false&lt;/code&gt; なり、レンダリングは無効になります</target>
        </trans-unit>
        <trans-unit id="8ad7397c3dcd557257da6e96ded094c76b7dbdc3" translate="yes" xml:space="preserve">
          <source>View.showChildView and Application.showView now return the shown view</source>
          <target state="translated">View.showChildViewとApplication.showViewが表示されたビューを返すようになりました。</target>
        </trans-unit>
        <trans-unit id="24be61285e096fa817d4cdb0a0ed8294ea5bd2fb" translate="yes" xml:space="preserve">
          <source>Views</source>
          <target state="translated">Views</target>
        </trans-unit>
        <trans-unit id="cfe5585ef7613c80f71f6098d65bb457af4b7ea0" translate="yes" xml:space="preserve">
          <source>Views can automatically bind DOM events to methods and View events with &lt;a href=&quot;dom.interactions#view-events&quot;&gt;&lt;code&gt;events&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dom.interactions#view-triggers&quot;&gt;&lt;code&gt;triggers&lt;/code&gt;&lt;/a&gt; respectively:</source>
          <target state="translated">ビューは自動的にDOMイベントをメソッドにバインドし、ビューイベントを&lt;a href=&quot;dom.interactions#view-events&quot;&gt; &lt;code&gt;events&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;dom.interactions#view-triggers&quot;&gt; &lt;code&gt;triggers&lt;/code&gt; &lt;/a&gt;それぞれバインドします。</target>
        </trans-unit>
        <trans-unit id="530b6cff94ce165c5c74438ebe8e7c3c2782da3b" translate="yes" xml:space="preserve">
          <source>Views can automatically bind to its model or collection with &lt;a href=&quot;events.entity#model-events&quot;&gt;&lt;code&gt;modelEvents&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;events.entity#collection-events&quot;&gt;&lt;code&gt;collectionEvents&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">ビューは、それぞれ&lt;a href=&quot;events.entity#model-events&quot;&gt; &lt;code&gt;modelEvents&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;events.entity#collection-events&quot;&gt; &lt;code&gt;collectionEvents&lt;/code&gt; を&lt;/a&gt;使用して、モデルまたはコレクションに自動的にバインドできます。</target>
        </trans-unit>
        <trans-unit id="2dd64acc9ba1f803312437462bf302ce45e1b66e" translate="yes" xml:space="preserve">
          <source>Views can bind custom events whenever users perform some interaction with the DOM. Using the view &lt;a href=&quot;#view-events&quot;&gt;&lt;code&gt;events&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#view-triggers&quot;&gt;&lt;code&gt;triggers&lt;/code&gt;&lt;/a&gt; handlers lets us either bind user input directly to an action or fire a generic trigger that may or may not be handled.</source>
          <target state="translated">ビューは、ユーザーがDOMを操作するたびにカスタムイベントをバインドできます。ビュー&lt;a href=&quot;#view-events&quot;&gt; &lt;code&gt;events&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#view-triggers&quot;&gt; &lt;code&gt;triggers&lt;/code&gt; &lt;/a&gt;ハンドラーを使用すると、ユーザー入力をアクションに直接バインドするか、処理される場合と処理されない場合がある汎用トリガーを起動できます。</target>
        </trans-unit>
        <trans-unit id="a6e842ab498fea2c4a89af757e6a7568dc78a68a" translate="yes" xml:space="preserve">
          <source>We now have a clear API for communicating with the &lt;code&gt;Notification&lt;/code&gt; across the application. Don't forget to define the &lt;code&gt;channelName&lt;/code&gt; on your &lt;code&gt;MnObject&lt;/code&gt; definition.</source>
          <target state="translated">これで、アプリケーション全体で &lt;code&gt;Notification&lt;/code&gt; と通信するための明確なAPI ができました。 &lt;code&gt;MnObject&lt;/code&gt; 定義で &lt;code&gt;channelName&lt;/code&gt; を定義することを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="bf433df67b96691434115cf2cc9f40e963778344" translate="yes" xml:space="preserve">
          <source>We'll cover a simple example:</source>
          <target state="translated">簡単な例を取り上げます。</target>
        </trans-unit>
        <trans-unit id="8590ac0e96f6aaec76ed725365c2e679c7c726fb" translate="yes" xml:space="preserve">
          <source>What is Context Data?</source>
          <target state="translated">コンテキストデータとは?</target>
        </trans-unit>
        <trans-unit id="e93ef73b4370c828b5cbb7ff1417b8a40365018f" translate="yes" xml:space="preserve">
          <source>What is a template</source>
          <target state="translated">テンプレートとは</target>
        </trans-unit>
        <trans-unit id="3c3e865e128e4b1ce064e9d8c609e441fe64dee5" translate="yes" xml:space="preserve">
          <source>What is a template?</source>
          <target state="translated">テンプレートとは?</target>
        </trans-unit>
        <trans-unit id="0c4b638becb2d80160585fdad152750a1ca07db3" translate="yes" xml:space="preserve">
          <source>What rendering indicates varies slightly between the two Marionette views.</source>
          <target state="translated">レンダリングが示すものは、2つのマリオネットのビューの間で若干異なります。</target>
        </trans-unit>
        <trans-unit id="11c90de4ce6fca13fd858d8f9ba519873f900dac" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;CollectionView&lt;/code&gt; is instantiated it creates a region for showing the &lt;a href=&quot;#collectionviews-emptyview&quot;&gt;&lt;code&gt;emptyView&lt;/code&gt;&lt;/a&gt;. This region can be requested using the &lt;code&gt;getEmptyRegion&lt;/code&gt; method. The region will share the &lt;code&gt;el&lt;/code&gt; with the &lt;code&gt;CollectionView&lt;/code&gt; and is shown with &lt;a href=&quot;marionette.region#additional-options&quot;&gt;&lt;code&gt;replaceElement: false&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">とき &lt;code&gt;CollectionView&lt;/code&gt; がインスタンス化され、それは示すための領域を作成します&lt;a href=&quot;#collectionviews-emptyview&quot;&gt; &lt;code&gt;emptyView&lt;/code&gt; を&lt;/a&gt;。このリージョンは、 &lt;code&gt;getEmptyRegion&lt;/code&gt; メソッドを使用してリクエストできます。領域は &lt;code&gt;el&lt;/code&gt; を &lt;code&gt;CollectionView&lt;/code&gt; と共有し、&lt;a href=&quot;marionette.region#additional-options&quot;&gt; &lt;code&gt;replaceElement: false&lt;/code&gt; &lt;/a&gt;表示されます。</target>
        </trans-unit>
        <trans-unit id="3342ec4ee33530f8b8d99091ef49f016c5160ae3" translate="yes" xml:space="preserve">
          <source>When a childview is added to the children &lt;a href=&quot;events.class#addchild-and-beforeaddchild-events&quot;&gt;&lt;code&gt;add:child&lt;/code&gt; and &lt;code&gt;before:add:child&lt;/code&gt; events&lt;/a&gt; will trigger</source>
          <target state="translated">childviewが子に&lt;a href=&quot;events.class#addchild-and-beforeaddchild-events&quot;&gt; &lt;code&gt;add:child&lt;/code&gt; &lt;code&gt;before:add:child&lt;/code&gt; &lt;/a&gt;されると、add：childおよびbefore：add：childイベントがトリガーされます</target>
        </trans-unit>
        <trans-unit id="2fd9998e0658b046d1e4b852f05c773add101b7f" translate="yes" xml:space="preserve">
          <source>When a childview is removed from the children &lt;a href=&quot;events.class#removechild-and-beforeremovechild-events&quot;&gt;&lt;code&gt;remove:child&lt;/code&gt; and &lt;code&gt;before:remove:child&lt;/code&gt; events&lt;/a&gt; will trigger.</source>
          <target state="translated">childviewが&lt;a href=&quot;events.class#removechild-and-beforeremovechild-events&quot;&gt; &lt;code&gt;remove:child&lt;/code&gt; &lt;code&gt;before:remove:child&lt;/code&gt; &lt;/a&gt;から削除されると、remove：childおよびbefore：remove：childイベントがトリガーされます。</target>
        </trans-unit>
        <trans-unit id="d43534f296897ae95efbca7a448d053a1c187f35" translate="yes" xml:space="preserve">
          <source>When a collection has no children, and you need to render a view other than the list of childViews, you can specify an &lt;code&gt;emptyView&lt;/code&gt; attribute on your collection view. The &lt;code&gt;emptyView&lt;/code&gt; just like the &lt;a href=&quot;#collectionviews-childview&quot;&gt;&lt;code&gt;childView&lt;/code&gt;&lt;/a&gt; can also be passed as an option on instantiation or can be a function that returns the &lt;code&gt;emptyView&lt;/code&gt;.</source>
          <target state="translated">コレクションに子がなく、childViewsのリスト以外のビューをレンダリングする必要がある場合、コレクションビューで &lt;code&gt;emptyView&lt;/code&gt; 属性を指定できます。 &lt;code&gt;emptyView&lt;/code&gt; 同じよう&lt;a href=&quot;#collectionviews-childview&quot;&gt; &lt;code&gt;childView&lt;/code&gt; は&lt;/a&gt;また、インスタンス化のオプションとして渡すことができるかを返す関数とすることができる &lt;code&gt;emptyView&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="879afb489fe7c8a051e86601681830430a012e45" translate="yes" xml:space="preserve">
          <source>When a model is added to the &lt;code&gt;collection&lt;/code&gt;, the &lt;code&gt;CollectionView&lt;/code&gt; will render that one model into the &lt;code&gt;children&lt;/code&gt;.</source>
          <target state="translated">モデルが &lt;code&gt;collection&lt;/code&gt; に追加されると、 &lt;code&gt;CollectionView&lt;/code&gt; はその1つのモデルを &lt;code&gt;children&lt;/code&gt; レンダリングします。</target>
        </trans-unit>
        <trans-unit id="d5174d7794a4c785b3c9c0de4eb92446d6696972" translate="yes" xml:space="preserve">
          <source>When a model is removed from the &lt;code&gt;collection&lt;/code&gt; (or destroyed / deleted), the &lt;code&gt;CollectionView&lt;/code&gt; will destroy and remove that model's child view.</source>
          <target state="translated">モデルが &lt;code&gt;collection&lt;/code&gt; から削除（または破棄/削除）されると、 &lt;code&gt;CollectionView&lt;/code&gt; はそのモデルの子ビューを破棄して削除します。</target>
        </trans-unit>
        <trans-unit id="495f5d3167da8a7a6f530131b4b3d87f9c71a3ce" translate="yes" xml:space="preserve">
          <source>When an event is triggered, the first letter of each section of the event name is capitalized, and the word &quot;on&quot; is prepended to the front of it. Examples:</source>
          <target state="translated">イベントがトリガーされると、イベント名の各セクションの最初の文字が大文字になり、その前に &quot;on &quot;という単語が前置きされます。例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="b9c1595a7042408c7c5ea50df0f3c51d13ea84f7" translate="yes" xml:space="preserve">
          <source>When instantiating a &lt;code&gt;Application&lt;/code&gt; there are several properties, if passed, that will be attached directly to the instance: &lt;code&gt;channelName&lt;/code&gt;, &lt;code&gt;radioEvents&lt;/code&gt;, &lt;code&gt;radioRequests&lt;/code&gt;, &lt;code&gt;region&lt;/code&gt;, &lt;code&gt;regionClass&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; インスタンス化するとき、渡された場合、インスタンスに直接アタッチされるいくつかのプロパティがあります： &lt;code&gt;channelName&lt;/code&gt; 、 &lt;code&gt;radioEvents&lt;/code&gt; 、 &lt;code&gt;radioRequests&lt;/code&gt; 、 &lt;code&gt;region&lt;/code&gt; 、 &lt;code&gt;regionClass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d280f973d0d5bdbbf49c8e1cde1446de5a131cca" translate="yes" xml:space="preserve">
          <source>When instantiating a &lt;code&gt;CollectionView&lt;/code&gt; there are several properties, if passed, that will be attached directly to the instance: &lt;code&gt;attributes&lt;/code&gt;, &lt;code&gt;behaviors&lt;/code&gt;, &lt;code&gt;childView&lt;/code&gt;, &lt;code&gt;childViewContainer&lt;/code&gt;, &lt;code&gt;childViewEventPrefix&lt;/code&gt;, &lt;code&gt;childViewEvents&lt;/code&gt;, &lt;code&gt;childViewOptions&lt;/code&gt;, &lt;code&gt;childViewTriggers&lt;/code&gt;, &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;collection&lt;/code&gt;, &lt;code&gt;collectionEvents&lt;/code&gt;, &lt;code&gt;el&lt;/code&gt;, &lt;code&gt;emptyView&lt;/code&gt;, &lt;code&gt;emptyViewOptions&lt;/code&gt;, &lt;code&gt;events&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;modelEvents&lt;/code&gt;, &lt;code&gt;sortWithCollection&lt;/code&gt;, &lt;code&gt;tagName&lt;/code&gt;, &lt;code&gt;template&lt;/code&gt;, &lt;code&gt;templateContext&lt;/code&gt;, &lt;code&gt;triggers&lt;/code&gt;, &lt;code&gt;ui&lt;/code&gt;, &lt;code&gt;viewComparator&lt;/code&gt;, &lt;code&gt;viewFilter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; をインスタンス化するとき、渡された場合、インスタンスに直接アタッチされるいくつかのプロパティがあります： &lt;code&gt;attributes&lt;/code&gt; 、 &lt;code&gt;behaviors&lt;/code&gt; 、 &lt;code&gt;childView&lt;/code&gt; 、 &lt;code&gt;childViewContainer&lt;/code&gt; 、 &lt;code&gt;childViewEventPrefix&lt;/code&gt; 、 &lt;code&gt;childViewEvents&lt;/code&gt; 、 &lt;code&gt;childViewOptions&lt;/code&gt; 、 &lt;code&gt;childViewTriggers&lt;/code&gt; 、 &lt;code&gt;className&lt;/code&gt; 、 &lt;code&gt;collection&lt;/code&gt; 、 &lt;code&gt;collectionEvents&lt;/code&gt; 、 &lt;code&gt;el&lt;/code&gt; 、 &lt;code&gt;emptyView&lt;/code&gt; 、 &lt;code&gt;emptyViewOptions&lt;/code&gt; 、 &lt;code&gt;events&lt;/code&gt; 、 &lt;code&gt;id&lt;/code&gt; 、 &lt;code&gt;model&lt;/code&gt; 、 &lt;code&gt;modelEvents&lt;/code&gt; 、 &lt;code&gt;sortWithCollection&lt;/code&gt; 、 &lt;code&gt;tagName&lt;/code&gt; 、 &lt;code&gt;template&lt;/code&gt; 、 &lt;code&gt;templateContext&lt;/code&gt; 、 &lt;code&gt;triggers&lt;/code&gt; 、 &lt;code&gt;ui&lt;/code&gt; 、 &lt;code&gt;viewComparator&lt;/code&gt; 、 &lt;code&gt;viewFilter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59ac214f6bd1dc3a4aeff422112107b0d8b42ce2" translate="yes" xml:space="preserve">
          <source>When instantiating a &lt;code&gt;MnObject&lt;/code&gt; there are several properties, if passed, that will be attached directly to the instance: &lt;code&gt;channelName&lt;/code&gt;, &lt;code&gt;radioEvents&lt;/code&gt;, &lt;code&gt;radioRequests&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MnObject&lt;/code&gt; をインスタンス化するとき、渡された場合、インスタンスに直接アタッチされるいくつかのプロパティがあります： &lt;code&gt;channelName&lt;/code&gt; 、 &lt;code&gt;radioEvents&lt;/code&gt; 、 &lt;code&gt;radioRequests&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b731f712bb3236ae0b833da8c6073bcea141e4e3" translate="yes" xml:space="preserve">
          <source>When instantiating a &lt;code&gt;Region&lt;/code&gt; there are two properties, if passed, that will be attached directly to the instance: &lt;code&gt;el&lt;/code&gt;, and &lt;code&gt;replaceElement&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Region&lt;/code&gt; をインスタンス化するときに、2つのプロパティが渡された場合、それらはインスタンスに直接アタッチされます： &lt;code&gt;el&lt;/code&gt; と &lt;code&gt;replaceElement&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="91247ce06802ca3423fa1c865e72f6d9f2af444f" translate="yes" xml:space="preserve">
          <source>When instantiating a &lt;code&gt;View&lt;/code&gt; there are several properties, if passed, that will be attached directly to the instance: &lt;code&gt;attributes&lt;/code&gt;, &lt;code&gt;behaviors&lt;/code&gt;, &lt;code&gt;childViewEventPrefix&lt;/code&gt;, &lt;code&gt;childViewEvents&lt;/code&gt;, &lt;code&gt;childViewTriggers&lt;/code&gt;, &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;collection&lt;/code&gt;, &lt;code&gt;collectionEvents&lt;/code&gt;, &lt;code&gt;el&lt;/code&gt;, &lt;code&gt;events&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;modelEvents&lt;/code&gt;, &lt;code&gt;regionClass&lt;/code&gt;, &lt;code&gt;regions&lt;/code&gt;, &lt;code&gt;tagName&lt;/code&gt;, &lt;code&gt;template&lt;/code&gt;, &lt;code&gt;templateContext&lt;/code&gt;, &lt;code&gt;triggers&lt;/code&gt;, &lt;code&gt;ui&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; インスタンス化するとき、渡された場合、インスタンスに直接添付されるいくつかのプロパティがあります： &lt;code&gt;attributes&lt;/code&gt; 、 &lt;code&gt;behaviors&lt;/code&gt; 、 &lt;code&gt;childViewEventPrefix&lt;/code&gt; 、 &lt;code&gt;childViewEvents&lt;/code&gt; 、 &lt;code&gt;childViewTriggers&lt;/code&gt; 、 &lt;code&gt;className&lt;/code&gt; 、 &lt;code&gt;collection&lt;/code&gt; 、 &lt;code&gt;collectionEvents&lt;/code&gt; 、 &lt;code&gt;el&lt;/code&gt; 、 &lt;code&gt;events&lt;/code&gt; 、 &lt;code&gt;id&lt;/code&gt; 、 &lt;code&gt;model&lt;/code&gt; 、 &lt;code&gt;modelEvents&lt;/code&gt; 、 &lt;code&gt;regionClass&lt;/code&gt; 、 &lt;code&gt;regions&lt;/code&gt; 、 &lt;code&gt;tagName&lt;/code&gt; 、 &lt;code&gt;template&lt;/code&gt; 、 &lt;code&gt;templateContext&lt;/code&gt; 、 &lt;code&gt;triggers&lt;/code&gt; 、 &lt;code&gt;ui&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f817faae9c55e65080378d01cba0a11ffeec33dc" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;a&lt;/code&gt; tag is clicked here, the &lt;code&gt;link:click&lt;/code&gt; event is fired. This event can be listened to using the &lt;a href=&quot;events#onevent-binding&quot;&gt;&lt;code&gt;onEvent&lt;/code&gt; Binding&lt;/a&gt; technique discussed in the &lt;a href=&quot;events&quot;&gt;events documentation&lt;/a&gt;.</source>
          <target state="translated">ときにタグがここでクリックすると、 &lt;code&gt;link:click&lt;/code&gt; イベントが発生しています。このイベントは、&lt;a href=&quot;events&quot;&gt;イベントドキュメントで&lt;/a&gt;説明されている&lt;a href=&quot;events#onevent-binding&quot;&gt; &lt;code&gt;onEvent&lt;/code&gt; &lt;/a&gt; Bindingテクニックを使用してリッスンできます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b14936c91dbb2453a9429ed420ba010c8e28cd2" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;collection&lt;/code&gt; for the view is &lt;code&gt;reset&lt;/code&gt;, the view will destroy all children and re-render the entire collection.</source>
          <target state="translated">ビューの &lt;code&gt;collection&lt;/code&gt; が &lt;code&gt;reset&lt;/code&gt; と、ビューはすべての子を破棄し、コレクション全体を再レンダリングします。</target>
        </trans-unit>
        <trans-unit id="563471832303cba952c4e6e32daf6d80d2446894" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;collection&lt;/code&gt; for the view is sorted, the view by default automatically re-sort its child views unless the &lt;code&gt;sortWithCollection&lt;/code&gt; attribute on the &lt;code&gt;CollectionView&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, or the &lt;code&gt;viewComparator&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ビューの &lt;code&gt;collection&lt;/code&gt; がソートされると、 &lt;code&gt;CollectionView&lt;/code&gt; の &lt;code&gt;sortWithCollection&lt;/code&gt; 属性が &lt;code&gt;false&lt;/code&gt; に設定されているか、または &lt;code&gt;viewComparator&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; でない限り、デフォルトでビューは自動的に子ビューを再ソートします。</target>
        </trans-unit>
        <trans-unit id="97f748999e1eda52bfaafcd9e61a13195f9a36f9" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;filter&lt;/code&gt; event is fired the children filtered out will have already been detached from the view's &lt;code&gt;el&lt;/code&gt;, but new children will not yet have been rendered. The &lt;code&gt;filter&lt;/code&gt; event not only receives the view instance, but also arrays of attached views, and detached views.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; イベントが発生すると、フィルターで除外された子は既にビューの &lt;code&gt;el&lt;/code&gt; から切り離されていますが、新しい子はまだレンダリングされていません。 &lt;code&gt;filter&lt;/code&gt; イベントは、ビュー・インスタンスを受信するだけでなく、添付のビューのアレイ、及び剥離のビューだけでなく。</target>
        </trans-unit>
        <trans-unit id="68e7eac6fee216c92e298738ddb8ca16f212b942" translate="yes" xml:space="preserve">
          <source>When the children are destroyed the &lt;a href=&quot;events.class#destroychildren-and-beforedestroychildren-events&quot;&gt;&lt;code&gt;destroy:children&lt;/code&gt; and &lt;code&gt;before:destroy:children&lt;/code&gt; events&lt;/a&gt; will trigger.</source>
          <target state="translated">子が破棄されると、&lt;a href=&quot;events.class#destroychildren-and-beforedestroychildren-events&quot;&gt; &lt;code&gt;destroy:children&lt;/code&gt; および &lt;code&gt;before:destroy:children&lt;/code&gt; イベント&lt;/a&gt;がトリガーされます。</target>
        </trans-unit>
        <trans-unit id="18e891ed6625ab6aab3a95cc78cb42e21f4a8683" translate="yes" xml:space="preserve">
          <source>When the children are rendered the &lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt;&lt;code&gt;render:children&lt;/code&gt; and &lt;code&gt;before:render:children&lt;/code&gt; events&lt;/a&gt; will trigger.</source>
          <target state="translated">子がレンダリングされると、&lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt; &lt;code&gt;render:children&lt;/code&gt; および &lt;code&gt;before:render:children&lt;/code&gt; イベント&lt;/a&gt;がトリガーされます。</target>
        </trans-unit>
        <trans-unit id="044e97a3b2bf2ef1ff4f572e6d7a9af115276cf4" translate="yes" xml:space="preserve">
          <source>When the instance of &lt;code&gt;MyView&lt;/code&gt; is rendered, the &lt;code&gt;.overwrite-me&lt;/code&gt; element will be removed from the DOM and replaced with an element of &lt;code&gt;.new-class&lt;/code&gt; - this lets us do things like rendering views inside &lt;code&gt;table&lt;/code&gt; or &lt;code&gt;select&lt;/code&gt; more easily - these elements are usually very strict on what content they will allow.</source>
          <target state="translated">&lt;code&gt;MyView&lt;/code&gt; のインスタンスがレンダリングされると、 &lt;code&gt;.overwrite-me&lt;/code&gt; 要素がDOMから削除され、 &lt;code&gt;.new-class&lt;/code&gt; の要素に置き換えられます。これにより、 &lt;code&gt;table&lt;/code&gt; 内のビューをレンダリングしたり &lt;code&gt;select&lt;/code&gt; より簡単に選択したりできます -これらの要素は通常彼らが許可するコンテンツに非常に厳しい。</target>
        </trans-unit>
        <trans-unit id="6583844939448dd6ec6e35d2359161a875d454cd" translate="yes" xml:space="preserve">
          <source>When to use Events</source>
          <target state="translated">イベントを使用する場合</target>
        </trans-unit>
        <trans-unit id="f232bf0d8359219a4283672f40649749c39fddfc" translate="yes" xml:space="preserve">
          <source>When to use Requests</source>
          <target state="translated">リクエストを使用する場合</target>
        </trans-unit>
        <trans-unit id="ad375afe1c7d46b48d002e730e358101ea72b318" translate="yes" xml:space="preserve">
          <source>When using a &lt;code&gt;collection&lt;/code&gt; to manage the children of &lt;code&gt;CollectionView&lt;/code&gt;, specify a &lt;code&gt;childView&lt;/code&gt; for your &lt;code&gt;CollectionView&lt;/code&gt;. This must be a Backbone view class definition, not an instance. It can be any &lt;code&gt;Backbone.View&lt;/code&gt; related class including both Marionette's &lt;code&gt;View&lt;/code&gt; and &lt;code&gt;CollectionView&lt;/code&gt;.</source>
          <target state="translated">使用する場合は &lt;code&gt;collection&lt;/code&gt; する子どもたちで管理する &lt;code&gt;CollectionView&lt;/code&gt; を、指定 &lt;code&gt;childView&lt;/code&gt; あなたのための &lt;code&gt;CollectionView&lt;/code&gt; を。これは、インスタンスではなく、バックボーンビューのクラス定義である必要があります。Marionetteの &lt;code&gt;View&lt;/code&gt; と &lt;code&gt;CollectionView&lt;/code&gt; の両方を含む任意の &lt;code&gt;Backbone.View&lt;/code&gt; 関連クラスにすることができます。</target>
        </trans-unit>
        <trans-unit id="e0369407484ca48ca8e5acf375cd15bf76c0121a" translate="yes" xml:space="preserve">
          <source>When using functions to set attributes, Marionette will assign the instance of your new class as &lt;code&gt;this&lt;/code&gt;. You can use this feature to ensure you're able to access your object in cases where &lt;code&gt;this&lt;/code&gt; isn't what you might expect it to be.</source>
          <target state="translated">関数を使用して属性を設定すると、Marionetteは新しいクラスのインスタンスを &lt;code&gt;this&lt;/code&gt; として割り当てます。あなたはケースで、あなたのオブジェクトにアクセスすることができるかどうかを確認するために、この機能を使用することができ &lt;code&gt;this&lt;/code&gt; あなたはそれがあることを期待するかもしれないものではありません。</target>
        </trans-unit>
        <trans-unit id="c897094ff8fd1cd42431590267bd3f7945950ddb" translate="yes" xml:space="preserve">
          <source>When using implicit listeners, the &lt;a href=&quot;#a-child-views-event-prefix&quot;&gt;&lt;code&gt;childview:*&lt;/code&gt; event prefix&lt;/a&gt; is used which needs to be included as part of the handler:</source>
          <target state="translated">暗黙のリスナーを使用する場合は、ハンドラの一部として含める必要がある&lt;a href=&quot;#a-child-views-event-prefix&quot;&gt; &lt;code&gt;childview:*&lt;/code&gt; イベントプレフィックス&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="3dddc67984a54a778dd74c7353cd264dba016929" translate="yes" xml:space="preserve">
          <source>When we attach behaviors to views, we can also pass in options to add to the behavior. This tends to be static information relating to what the behavior should do. In our above example, we want to override the message to our &lt;code&gt;DestroyWarn&lt;/code&gt; and &lt;code&gt;Tooltip&lt;/code&gt; behaviors to match the original message on the View:</source>
          <target state="translated">ビヘイビアーをビューにアタッチするとき、ビヘイビアーに追加するオプションを渡すこともできます。これは、振る舞いが何をすべきかに関する静的な情報になる傾向があります。上記の例では、メッセージを &lt;code&gt;DestroyWarn&lt;/code&gt; および &lt;code&gt;Tooltip&lt;/code&gt; ビヘイビアーにオーバーライドして、ビューの元のメッセージと一致させます。</target>
        </trans-unit>
        <trans-unit id="c14a5685ba760ccd1bcc89b5fad6fc31aa29e04b" translate="yes" xml:space="preserve">
          <source>When we extend classes, we can provide class attributes with specific values by defining them in the object we pass as the &lt;code&gt;extend&lt;/code&gt; parameter:</source>
          <target state="translated">クラスを拡張するとき、 &lt;code&gt;extend&lt;/code&gt; パラメーターとして渡すオブジェクトで定義することにより、クラス属性に特定の値を提供できます。</target>
        </trans-unit>
        <trans-unit id="9374ba495ac8c84db18946a595412c0c6594a27a" translate="yes" xml:space="preserve">
          <source>When we instantiate &lt;code&gt;MyView&lt;/code&gt;, each instance will be given a &lt;code&gt;.bg-success&lt;/code&gt; class with a &lt;code&gt;myRegion&lt;/code&gt; region created on the &lt;code&gt;.my-region&lt;/code&gt; element.</source>
          <target state="translated">&lt;code&gt;MyView&lt;/code&gt; をインスタンス化すると、各インスタンスには &lt;code&gt;.bg-success&lt;/code&gt; クラスが与えられ、 &lt;code&gt;.my-region&lt;/code&gt; 要素に作成された &lt;code&gt;myRegion&lt;/code&gt; リージョンが含まれます。</target>
        </trans-unit>
        <trans-unit id="485c9d643992b8357326ed00397cfd672a015cf0" translate="yes" xml:space="preserve">
          <source>When we show views in the region, the contents of &lt;code&gt;#first-region&lt;/code&gt; and &lt;code&gt;#second-region&lt;/code&gt; will be replaced with the contents of the view we show. The value in the &lt;code&gt;regions&lt;/code&gt; hash is just a jQuery selector, and any valid jQuery syntax will suffice.</source>
          <target state="translated">リージョンのビューを表示すると、 &lt;code&gt;#first-region&lt;/code&gt; と &lt;code&gt;#second-region&lt;/code&gt; のコンテンツは、表示するビューのコンテンツに置き換えられます。 &lt;code&gt;regions&lt;/code&gt; ハッシュの値は単なるjQueryセレクターであり、有効なjQuery構文で十分です。</target>
        </trans-unit>
        <trans-unit id="295bf762687e95d19ec762adfcd07005635224f8" translate="yes" xml:space="preserve">
          <source>When you extend &lt;code&gt;View&lt;/code&gt;, we use the &lt;code&gt;regions&lt;/code&gt; attribute to point to the selector where the new view will be displayed:</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; を拡張するときは、 &lt;code&gt;regions&lt;/code&gt; 属性を使用して、新しいビューが表示されるセレクターをポイントします。</target>
        </trans-unit>
        <trans-unit id="31a1db5c28f74443b35f5b5c26c0f3a0ad5e191b" translate="yes" xml:space="preserve">
          <source>When you show a view inside a region - either using &lt;a href=&quot;marionette.region#showing-a-view&quot;&gt;&lt;code&gt;region.show(view)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;marionette.view#showing-a-view&quot;&gt;&lt;code&gt;showChildView('region', view)&lt;/code&gt;&lt;/a&gt; - the &lt;code&gt;Region&lt;/code&gt; will emit events around the view events that you can hook into.</source>
          <target state="translated">使用してどちらか-あなたは領域内のビューを表示すると&lt;a href=&quot;marionette.region#showing-a-view&quot;&gt; &lt;code&gt;region.show(view)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;marionette.view#showing-a-view&quot;&gt; &lt;code&gt;showChildView('region', view)&lt;/code&gt; &lt;/a&gt; - &lt;code&gt;Region&lt;/code&gt; あなたにフックできることを表示するイベントを中心にイベントを発行します。</target>
        </trans-unit>
        <trans-unit id="ab4ab02c23803c32bfcce161ab522d0eea3bf1a2" translate="yes" xml:space="preserve">
          <source>When your views get some more regions, you may want to think of the most efficient way to render your views. Since manipulating the DOM is performance heavy, it's best practice to render most of your views at once.</source>
          <target state="translated">ビューのリージョンがいくつか増えてきたら、ビューをレンダリングする最も効率的な方法を考えたくなるかもしれません。DOM の操作はパフォーマンスが重いので、ほとんどのビューを一度にレンダリングするのが最善の方法です。</target>
        </trans-unit>
        <trans-unit id="31904a835116baee7dc4cda0b6a72afff4d70c2b" translate="yes" xml:space="preserve">
          <source>Where possible, we will document how to make the changes in Marionette 2.x so that your applications can continue to work and to ease the burden of upgrading to Marionette 3.</source>
          <target state="translated">可能な限り、Marionette 2.xでの変更点を文書化して、お使いのアプリケーションが引き続き動作し、Marionette 3へのアップグレードの負担を軽減できるようにします。</target>
        </trans-unit>
        <trans-unit id="89ba5f595dfc4655ab42cbceac06a2d3e68d9a75" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;#serializing-data&quot;&gt;serializing data&lt;/a&gt; deals more with getting the data belonging to the view into the template, template context mixes in other needed data, or in some cases, might do extra computations that go beyond simply &quot;serializing&quot; the view's &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;collection&lt;/code&gt;</source>
          <target state="translated">一方で&lt;a href=&quot;#serializing-data&quot;&gt;、データのシリアライズ&lt;/a&gt;テンプレートにビューに属するデータを取得してより多くの取引を、他の必要なデータでテンプレートコンテキストミックスは、またはいくつかのケースでは、ビューの「シリアル化」だけでとどまらず、余分な計算を行う可能性があります &lt;code&gt;model&lt;/code&gt; や &lt;code&gt;collection&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1662bfc50d8d0e8da8f3009538d9736e070a1741" translate="yes" xml:space="preserve">
          <source>While regions may be instantiated and useful on their own, their primary use case is through the &lt;a href=&quot;#defining-the-application-region&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#defining-regions&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">リージョンはそれ自体でインスタンス化されて役立つ場合がありますが、その主な使用例は&lt;a href=&quot;#defining-the-application-region&quot;&gt; &lt;code&gt;Application&lt;/code&gt; &lt;/a&gt;クラスと&lt;a href=&quot;#defining-regions&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt;クラスを使用することです。</target>
        </trans-unit>
        <trans-unit id="a24f99c1bdc82d992679816b41bfcd84bd7c8e44" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;el&lt;/code&gt; of the view can be attached the contents of the view can be removed and added to during the lifetime of the view. If you are adding listeners to the contents of the view rather than &lt;code&gt;attach&lt;/code&gt; the &lt;a href=&quot;events.class#domrefresh-event&quot;&gt;&lt;code&gt;dom:refresh&lt;/code&gt; event&lt;/a&gt; would be best.</source>
          <target state="translated">ビューの &lt;code&gt;el&lt;/code&gt; はアタッチできますが、ビューのコンテンツは、ビューの存続期間中に削除および追加できます。ビューのコンテンツにリスナーを追加するのではなく、&lt;a href=&quot;events.class#domrefresh-event&quot;&gt; &lt;code&gt;dom:refresh&lt;/code&gt; &lt;/a&gt;イベントを &lt;code&gt;attach&lt;/code&gt; するのが最適です。</target>
        </trans-unit>
        <trans-unit id="04f8ace971e3fb356fa22be2fee1743c5c367b88" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;el&lt;/code&gt; of the view may remain attached, its contents will be removed on render. If you have added listeners to the contents of the view rather than &lt;code&gt;before:detach&lt;/code&gt; the &lt;a href=&quot;events.class#domremove-event&quot;&gt;&lt;code&gt;dom:remove&lt;/code&gt; event&lt;/a&gt; would be best.</source>
          <target state="translated">ビューの &lt;code&gt;el&lt;/code&gt; はアタッチされたままですが、その内容はレンダリング時に削除されます。 &lt;code&gt;before:detach&lt;/code&gt; ではなくビューのコンテンツにリスナーを追加した場合：&lt;a href=&quot;events.class#domremove-event&quot;&gt; &lt;code&gt;dom:remove&lt;/code&gt; イベント&lt;/a&gt;を切り離すのが最適です。</target>
        </trans-unit>
        <trans-unit id="bb3a9f881d7beaf76c573c5d2e108bdac4b98ad8" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;marionette.view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; in most cases the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; event&lt;/a&gt; is the best place to show child views &lt;a href=&quot;marionette.view#efficient-nested-view-structures&quot;&gt;for best performance&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;marionette.view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt;ほとんどの場合、&lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; のイベントは&lt;/a&gt;、子ビュー表示するのに最適な場所です&lt;a href=&quot;marionette.view#efficient-nested-view-structures&quot;&gt;最高のパフォーマンスのために&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e6037820f59f55a67e4e10c8498274cc3a29394" translate="yes" xml:space="preserve">
          <source>With the release of Marionette 3.2, developers can remove the dependency on jQuery and integrate with the DOM using a custom api.</source>
          <target state="translated">Marionette 3.2 のリリースにより、開発者は jQuery への依存を取り除き、カスタム API を使用して DOM と統合できるようになりました。</target>
        </trans-unit>
        <trans-unit id="c549bec6bf0b0e2bc77c402f2a42c0715cb4b5f2" translate="yes" xml:space="preserve">
          <source>You call the request an action to perform e.g. &lt;code&gt;show:notification&lt;/code&gt;</source>
          <target state="translated">リクエストを実行するアクションと呼びます。例： &lt;code&gt;show:notification&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e21eb20beeb6841547c91017bb8f9f2f871b62a7" translate="yes" xml:space="preserve">
          <source>You can add the view events monitor to any non-Marionette view:</source>
          <target state="translated">マリオネット以外のビューにビューイベントモニターを追加することができます。</target>
        </trans-unit>
        <trans-unit id="8b6f79d2f0b4ff2057de72f431d6c7f321087ee7" translate="yes" xml:space="preserve">
          <source>You can also add multiple regions using &lt;code&gt;addRegions&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;addRegions&lt;/code&gt; を使用して複数のリージョンを追加することもできます。</target>
        </trans-unit>
        <trans-unit id="d0620a2ffe768126f78c244704c1288977384230" translate="yes" xml:space="preserve">
          <source>You can also bind a function callback directly in the &lt;code&gt;modelEvents&lt;/code&gt; attribute:</source>
          <target state="translated">関数コールバックを &lt;code&gt;modelEvents&lt;/code&gt; 属性に直接バインドすることもできます。</target>
        </trans-unit>
        <trans-unit id="352263fc7bfd32ddb1b944f577c4d133122f14c6" translate="yes" xml:space="preserve">
          <source>You can also define &lt;code&gt;childView&lt;/code&gt; as a function. In this form, the value returned by this method is the &lt;code&gt;ChildView&lt;/code&gt; class that will be instantiated when a &lt;code&gt;Model&lt;/code&gt; needs to be initially rendered. This method also gives you the ability to customize per &lt;code&gt;Model&lt;/code&gt;&lt;code&gt;ChildViews&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;childView&lt;/code&gt; を関数として定義することもできます。この形式では、このメソッドによって返される値は、 &lt;code&gt;Model&lt;/code&gt; を最初にレンダリングする必要があるときにインスタンス化される &lt;code&gt;ChildView&lt;/code&gt; クラスです。このメソッドでは、 &lt;code&gt;Model&lt;/code&gt; &lt;code&gt;ChildViews&lt;/code&gt; ごとにカスタマイズすることもできます。</target>
        </trans-unit>
        <trans-unit id="045892e9c2b50d26ad003cebdbeb415f7a141514" translate="yes" xml:space="preserve">
          <source>You can also define a template context value as a method. How this method is called is determined by your templating solution. For instance with handlebars a method is called with the context of the data passed to the template.</source>
          <target state="translated">テンプレートのコンテキスト値をメソッドとして定義することもできます。このメソッドがどのように呼び出されるかは、テンプレートソリューションによって決まります。例えば、ハンドルバーでは、テンプレートに渡されたデータのコンテキストでメソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="88f237f674b87bf9e5b532f6dcf46bf652ba59ca" translate="yes" xml:space="preserve">
          <source>You can also implement a different DOM API for a particular class:</source>
          <target state="translated">また、特定のクラスに対して異なる DOM API を実装することもできます。</target>
        </trans-unit>
        <trans-unit id="6be50940b89aa06376e91c3067f526a42869b9e4" translate="yes" xml:space="preserve">
          <source>You can also specify the &lt;code&gt;childViewOptions&lt;/code&gt; as a function, if you need to calculate the values to return at runtime. The model will be passed into the function should you need access to it when calculating &lt;code&gt;childViewOptions&lt;/code&gt;. The function must return an object, and the attributes of the object will be copied to the &lt;code&gt;childView&lt;/code&gt; instance's options.</source>
          <target state="translated">実行時に返す値を計算する必要がある場合は、 &lt;code&gt;childViewOptions&lt;/code&gt; を関数として指定することもできます。 &lt;code&gt;childViewOptions&lt;/code&gt; を計算するときにモデルにアクセスする必要がある場合、モデルは関数に渡されます。関数はオブジェクトを返す必要があり、オブジェクトの属性は &lt;code&gt;childView&lt;/code&gt; インスタンスのオプションにコピーされます。</target>
        </trans-unit>
        <trans-unit id="c76079fcf18d67e481507b58bf68a9a1953e8772" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;listenTo&lt;/code&gt; as in Backbone:</source>
          <target state="translated">また、Backboneのように &lt;code&gt;listenTo&lt;/code&gt; を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="412b8fbfdc3280542c5755300cd421ba96370a3f" translate="yes" xml:space="preserve">
          <source>You can also use this method to determine when the empty view was shown:</source>
          <target state="translated">また、このメソッドを使用して、空のビューがいつ表示されたかを判断することもできます。</target>
        </trans-unit>
        <trans-unit id="c0deb4b7d5c38176df83fbbe2656f184b52b015c" translate="yes" xml:space="preserve">
          <source>You can customize the event prefix for events that are forwarded through the view. To do this, set the &lt;code&gt;childViewEventPrefix&lt;/code&gt; on the view or collectionview. For more information on the &lt;code&gt;childViewEventPrefix&lt;/code&gt; see &lt;a href=&quot;#event-bubbling&quot;&gt;Event bubbling&lt;/a&gt;.</source>
          <target state="translated">ビューを介して転送されるイベントのイベントプレフィックスをカスタマイズできます。これを行うには、ビューまたはコレクションビューで &lt;code&gt;childViewEventPrefix&lt;/code&gt; を設定します。詳細については &lt;code&gt;childViewEventPrefix&lt;/code&gt; 参照&lt;a href=&quot;#event-bubbling&quot;&gt;イベントバブリングを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="590c6a7dfdaf579ece509f743f6b6bf2b2db9dfa" translate="yes" xml:space="preserve">
          <source>You can define regions with an object literal. Object literal definitions expect an &lt;code&gt;el&lt;/code&gt; property - the selector string to hook the region into. With this format is possible to define whether showing the region overwrites the &lt;code&gt;el&lt;/code&gt; or just overwrites the content (the default behavior).</source>
          <target state="translated">オブジェクトリテラルを使用して領域を定義できます。オブジェクトリテラル定義では、 &lt;code&gt;el&lt;/code&gt; プロパティ（領域をフックするセレクター文字列）が必要です。このフォーマットでは、領域を表示することで &lt;code&gt;el&lt;/code&gt; を上書きするか、単にコンテンツを上書きするかを定義できます（デフォルトの動作）。</target>
        </trans-unit>
        <trans-unit id="39fc0ad9cdcf20a6dd97476044dd1d5943d67b07" translate="yes" xml:space="preserve">
          <source>You can detach a child view from a region through &lt;code&gt;detachChildView(region)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;detachChildView(region)&lt;/code&gt; を使用して、リージョンから子ビューを切り離すことができます</target>
        </trans-unit>
        <trans-unit id="65430ca44e9a1ef5b30f9bbf607cf49f7d69c116" translate="yes" xml:space="preserve">
          <source>You can modify the way any particular view attaches a compiled template to the &lt;code&gt;el&lt;/code&gt; by overriding &lt;code&gt;attachElContents&lt;/code&gt;. This method receives only the results of the view's renderer and is only called if the renderer returned a value.</source>
          <target state="translated">&lt;code&gt;attachElContents&lt;/code&gt; をオーバーライドすることにより、特定のビューがコンパイル済みテンプレートを &lt;code&gt;el&lt;/code&gt; にアタッチする方法を変更できます。このメソッドは、ビューのレンダラーの結果のみを受け取り、レンダラーが値を返した場合にのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="154f4a47538cb54057fa9d81ae809bef2fc09359" translate="yes" xml:space="preserve">
          <source>You can now create instances of &lt;code&gt;MyView&lt;/code&gt; with JavaScript's &lt;code&gt;new&lt;/code&gt; keyword:</source>
          <target state="translated">JavaScriptの &lt;code&gt;new&lt;/code&gt; キーワードで &lt;code&gt;MyView&lt;/code&gt; のインスタンスを作成できるようになりました。</target>
        </trans-unit>
        <trans-unit id="1b9a2e3f180677d14a0aa533f13cea3d36b2e9cf" translate="yes" xml:space="preserve">
          <source>You can override this by specifying an &lt;code&gt;attachHtml&lt;/code&gt; method in your view definition. This method takes two parameters and has no return value.</source>
          <target state="translated">ビュー定義で &lt;code&gt;attachHtml&lt;/code&gt; メソッドを指定することで、これをオーバーライドできます。このメソッドは2つのパラメーターを取り、戻り値はありません。</target>
        </trans-unit>
        <trans-unit id="85e09ebacc1355fcda51f74877974306f9548748" translate="yes" xml:space="preserve">
          <source>You can remove a view from a region (effectively &quot;unshowing&quot; it) with &lt;code&gt;region.empty()&lt;/code&gt; on a region:</source>
          <target state="translated">リージョンの &lt;code&gt;region.empty()&lt;/code&gt; を使用して、リージョンからビューを削除できます（実質的にはビューを「表示しない」）。</target>
        </trans-unit>
        <trans-unit id="6273fc4e1446209c9e1394b751a7e8810d1b79ae" translate="yes" xml:space="preserve">
          <source>You can remove all of the regions from a view by calling &lt;code&gt;removeRegions&lt;/code&gt; or you can remove a region by name using &lt;code&gt;removeRegion&lt;/code&gt;. When a region is removed the region will be destroyed.</source>
          <target state="translated">&lt;code&gt;removeRegions&lt;/code&gt; を呼び出してビューからすべてのリージョンを削除するか、 &lt;code&gt;removeRegion&lt;/code&gt; を使用して名前でリージョンを削除できます。リージョンが削除されると、リージョンは破棄されます。</target>
        </trans-unit>
        <trans-unit id="dbf45cd6f323a2a9e197f6dcda0a3e6aad7668fa" translate="yes" xml:space="preserve">
          <source>You can retrieve a view by a number of methods. If the findBy* method cannot find the view, it will return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">いくつかの方法でビューを取得できます。findBy *メソッドがビューを見つけられない場合、 &lt;code&gt;undefined&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8843d03919c5e6c87255303c4ae89c76de7060ee" translate="yes" xml:space="preserve">
          <source>You can run Marionette 3 alongside Marionette 2 with the Marionette.noConflict() function.</source>
          <target state="translated">Marionette.noConflict()関数を使用すると、Marionette 3 を Marionette 2 と並べて実行することができます。</target>
        </trans-unit>
        <trans-unit id="6b0185c5b71c101bd11414cb6f484ae0a5a47177" translate="yes" xml:space="preserve">
          <source>You can set the renderer for a view class by using the class method &lt;code&gt;setRenderer&lt;/code&gt;. The renderer accepts two arguments. The first is the template passed to the view, and the second argument is the data to be rendered into the template.</source>
          <target state="translated">クラスメソッド &lt;code&gt;setRenderer&lt;/code&gt; を使用して、ビュークラスのレンダラーを設定できます。レンダラーは2つの引数を受け入れます。1つ目はビューに渡されるテンプレートで、2つ目の引数はテンプレートにレンダリングされるデータです。</target>
        </trans-unit>
        <trans-unit id="1c43dca4d81a7521c5ae0f814409215ef3e5fcfb" translate="yes" xml:space="preserve">
          <source>You can show a template or a string directly into a region. Additionally you can pass an object literal containing a template and any other view options. Under the hood a &lt;code&gt;Marionette.View&lt;/code&gt; is instantiated using the template.</source>
          <target state="translated">テンプレートまたは文字列をリージョンに直接表示できます。さらに、テンプレートと他のビューオプションを含むオブジェクトリテラルを渡すことができます。内部で &lt;code&gt;Marionette.View&lt;/code&gt; がテンプレートを使用してインスタンス化されます。</target>
        </trans-unit>
        <trans-unit id="e0612899fa66ed5ed13794c4b92f564aaab94095" translate="yes" xml:space="preserve">
          <source>You can use a jQuery string selector to define regions.</source>
          <target state="translated">jQueryの文字列セレクタを使ってリージョンを定義することができます。</target>
        </trans-unit>
        <trans-unit id="fece023eda962e466d0a7bcf7f8bb4207bd1d306" translate="yes" xml:space="preserve">
          <source>You may be instantiating a &lt;code&gt;View&lt;/code&gt; with existing HTML, but if you re-render the view, like any other view, your view will render the &lt;code&gt;template&lt;/code&gt; into the view's &lt;code&gt;el&lt;/code&gt; and any children will need to be re-shown.</source>
          <target state="translated">既存のHTMLを使用して &lt;code&gt;View&lt;/code&gt; をインスタンス化している可能性がありますが、他のビューと同様にビューを再レンダリングすると、ビューは &lt;code&gt;template&lt;/code&gt; をビューの &lt;code&gt;el&lt;/code&gt; にレンダリングし、すべての子を再表示する必要があります。</target>
        </trans-unit>
        <trans-unit id="dcd00372b85c4240c0588dc131c1ef0e51f89f5a" translate="yes" xml:space="preserve">
          <source>You want to call &lt;em&gt;exactly one&lt;/em&gt; function</source>
          <target state="translated">&lt;em&gt;正確に1つの&lt;/em&gt;関数を呼び出したい</target>
        </trans-unit>
        <trans-unit id="ddb791a1169bad5fa64486e48c29a682db85e28f" translate="yes" xml:space="preserve">
          <source>You want to get the return value of the request</source>
          <target state="translated">リクエストの戻り値を取得したい場合</target>
        </trans-unit>
        <trans-unit id="733091f99ebd9b020dbefe930383826ac306218b" translate="yes" xml:space="preserve">
          <source>add:child and before:add:child events</source>
          <target state="translated">add:child および before:add:child イベント</target>
        </trans-unit>
        <trans-unit id="4b24a16c78c9c2836ca0973059d7d662d16e99a3" translate="yes" xml:space="preserve">
          <source>add:region and before:add:region events</source>
          <target state="translated">add:region と before:add:region イベント</target>
        </trans-unit>
        <trans-unit id="ce8b3dc4f07f1a5690813e1aea70e14f5cb84171" translate="yes" xml:space="preserve">
          <source>attach and before:attach events</source>
          <target state="translated">attach と before:attach イベント</target>
        </trans-unit>
        <trans-unit id="b06455ce13f0f90ba9633ade5d77c768af92a0dd" translate="yes" xml:space="preserve">
          <source>before:start event</source>
          <target state="translated">ビフォア:スタートイベント</target>
        </trans-unit>
        <trans-unit id="923116359e40486b166379697d99ab2fde7920bf" translate="yes" xml:space="preserve">
          <source>bindEvents</source>
          <target state="translated">bindEvents</target>
        </trans-unit>
        <trans-unit id="4915ddbd37bcb8a6001b37a437bdf5ecaaceb147" translate="yes" xml:space="preserve">
          <source>bindRequests</source>
          <target state="translated">bindRequests</target>
        </trans-unit>
        <trans-unit id="e505b967430a3bb9fecce86a06560d1f7135c9da" translate="yes" xml:space="preserve">
          <source>childView</source>
          <target state="translated">childView</target>
        </trans-unit>
        <trans-unit id="d6b7b0fb68b9174bb0dcc1913f0764f6975b6bc4" translate="yes" xml:space="preserve">
          <source>children Iterators And Collection Functions</source>
          <target state="translated">子イテレータとコレクション関数</target>
        </trans-unit>
        <trans-unit id="caeb909ae4ff4ee25a0ff0d476946ed256f2aee1" translate="yes" xml:space="preserve">
          <source>contains</source>
          <target state="translated">contains</target>
        </trans-unit>
        <trans-unit id="77601fb66b4297e3e45cca4cbcd2e3c10225854c" translate="yes" xml:space="preserve">
          <source>destroy A Region</source>
          <target state="translated">ちいきをつぶす</target>
        </trans-unit>
        <trans-unit id="c71c2b68fb6e0f13179d83d98c33056cb0758c97" translate="yes" xml:space="preserve">
          <source>destroy and before:destroy events</source>
          <target state="translated">壊す前と壊す前:壊すイベント</target>
        </trans-unit>
        <trans-unit id="381839133befcb875f971ab18be62cb66e29828a" translate="yes" xml:space="preserve">
          <source>destroy:children and before:destroy:children events</source>
          <target state="translated">destroy:childrenとその前:destroy:childrenイベント</target>
        </trans-unit>
        <trans-unit id="8ed37b58bcf274cc69a7d2e9e4bce2c230882041" translate="yes" xml:space="preserve">
          <source>detach and before:detach events</source>
          <target state="translated">デタッチイベントとデタッチ前:デタッチイベント</target>
        </trans-unit>
        <trans-unit id="ed7675fddaf1010f0ce10a0143c517123184646b" translate="yes" xml:space="preserve">
          <source>dom:refresh event</source>
          <target state="translated">dom:リフレッシュイベント</target>
        </trans-unit>
        <trans-unit id="737a65a8d1e5da28c25b74edcda88f9759767228" translate="yes" xml:space="preserve">
          <source>dom:remove event</source>
          <target state="translated">dom:remove イベント</target>
        </trans-unit>
        <trans-unit id="b32f279e548b6fceef4343170778273bfe60658c" translate="yes" xml:space="preserve">
          <source>each</source>
          <target state="translated">each</target>
        </trans-unit>
        <trans-unit id="ab0b2a06f5f90f63aaf6a7667e56ae131b04ea07" translate="yes" xml:space="preserve">
          <source>empty and before:empty events</source>
          <target state="translated">空と前:空イベント</target>
        </trans-unit>
        <trans-unit id="087635d5608a063540024d365841929e415cc04a" translate="yes" xml:space="preserve">
          <source>emptyView</source>
          <target state="translated">emptyView</target>
        </trans-unit>
        <trans-unit id="5873f666d03fb3fb39d0db9c71b5e1f769334088" translate="yes" xml:space="preserve">
          <source>every</source>
          <target state="translated">every</target>
        </trans-unit>
        <trans-unit id="de93ba2d15f3dbf65f76e6fd21e1e4b002459dd8" translate="yes" xml:space="preserve">
          <source>extend</source>
          <target state="translated">extend</target>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="translated">filter</target>
        </trans-unit>
        <trans-unit id="f13b46441106631883dc910e1cf9a8dcabad7a36" translate="yes" xml:space="preserve">
          <source>filter and before:filter events</source>
          <target state="translated">フィルタとその前:フィルタイベント</target>
        </trans-unit>
        <trans-unit id="ded8dae5786fb0e9e6ffb657401fd861ba2efe11" translate="yes" xml:space="preserve">
          <source>find</source>
          <target state="translated">find</target>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="translated">first</target>
        </trans-unit>
        <trans-unit id="2e9d30d0432894c5e85fd27e7b9a489c6a4f1207" translate="yes" xml:space="preserve">
          <source>getEmptyRegion</source>
          <target state="translated">getEmptyRegion</target>
        </trans-unit>
        <trans-unit id="83c56db9950579487ccee319e643d7570062dacc" translate="yes" xml:space="preserve">
          <source>getOption</source>
          <target state="translated">getOption</target>
        </trans-unit>
        <trans-unit id="6fc30fecb923b88b2066b34e69b864bb3660ef1b" translate="yes" xml:space="preserve">
          <source>give community members a chance to provide feedback for new functionality</source>
          <target state="translated">コミュニティメンバーに新機能のフィードバックを提供する機会を与える</target>
        </trans-unit>
        <trans-unit id="9b420bde4948b69dc5ad625bd1d282587aff7f83" translate="yes" xml:space="preserve">
          <source>if you are using a &lt;code&gt;template&lt;/code&gt; with a &lt;code&gt;CollectionView&lt;/code&gt; that is not also given a &lt;code&gt;model&lt;/code&gt;, your &lt;code&gt;CollectionView&lt;/code&gt; will &lt;a href=&quot;serializing-a-collection&quot;&gt;serialize the collection&lt;/a&gt; for the template. This could be costly and unnecessary. If your &lt;code&gt;CollectionView&lt;/code&gt; has a &lt;code&gt;template&lt;/code&gt; it is advised to either use an empty &lt;code&gt;model&lt;/code&gt; or override the &lt;a href=&quot;#serializing-data&quot;&gt;&lt;code&gt;serializeData&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; 指定されていない &lt;code&gt;CollectionView&lt;/code&gt; で &lt;code&gt;template&lt;/code&gt; を使用している場合、CollectionViewはテンプレートの &lt;code&gt;CollectionView&lt;/code&gt; を&lt;a href=&quot;serializing-a-collection&quot;&gt;シリアル化し&lt;/a&gt;ます。これは費用がかかり、不必要な場合があります。あなたの場合は &lt;code&gt;CollectionView&lt;/code&gt; があり &lt;code&gt;template&lt;/code&gt; 、それが空のいずれかを使用することをお勧めされ &lt;code&gt;model&lt;/code&gt; 、または上書き&lt;a href=&quot;#serializing-data&quot;&gt; &lt;code&gt;serializeData&lt;/code&gt; の&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="8ad7d21c71b049b7003ba31b5f1322974df77ac8" translate="yes" xml:space="preserve">
          <source>initial</source>
          <target state="translated">initial</target>
        </trans-unit>
        <trans-unit id="4728f278b1371bfd6c3804c60f121bb5b72b9089" translate="yes" xml:space="preserve">
          <source>initialize</source>
          <target state="translated">initialize</target>
        </trans-unit>
        <trans-unit id="03d8e7a105b3dcaef4c1b8ad3eef028f50fc2607" translate="yes" xml:space="preserve">
          <source>initialize event</source>
          <target state="translated">初期化イベント</target>
        </trans-unit>
        <trans-unit id="d6aa1f3a789f3f3108666e0ac807ca5ca7dc5fa5" translate="yes" xml:space="preserve">
          <source>invoke</source>
          <target state="translated">invoke</target>
        </trans-unit>
        <trans-unit id="5490fcfb3b65c57bc1ad63914e1bd391595b83d4" translate="yes" xml:space="preserve">
          <source>isEmpty</source>
          <target state="translated">isEmpty</target>
        </trans-unit>
        <trans-unit id="213ed3ea453bf610688ff8041e0a3b7b6abb5e6e" translate="yes" xml:space="preserve">
          <source>last</source>
          <target state="translated">last</target>
        </trans-unit>
        <trans-unit id="21f29d255b41381cea3d9e904e0e4db8e5ce9702" translate="yes" xml:space="preserve">
          <source>make it possible to add breaking changes in a minor release</source>
          <target state="translated">マイナーリリースでの変更点の追加を可能にしました。</target>
        </trans-unit>
        <trans-unit id="37745ed7a0f005fb14522c5cc7c1ba3d9e0df579" translate="yes" xml:space="preserve">
          <source>map</source>
          <target state="translated">map</target>
        </trans-unit>
        <trans-unit id="245b49eb9fcdf157f46406e51d080c6183d975a5" translate="yes" xml:space="preserve">
          <source>mergeOptions</source>
          <target state="translated">mergeOptions</target>
        </trans-unit>
        <trans-unit id="a1d1d85b9bfe9e1cd2ac823922331df9a2e4e564" translate="yes" xml:space="preserve">
          <source>normalizeMethods</source>
          <target state="translated">normalizeMethods</target>
        </trans-unit>
        <trans-unit id="c180780680dd2e3853ca96386f0e77e1396c3fcb" translate="yes" xml:space="preserve">
          <source>onEvent Binding</source>
          <target state="translated">オンイベントバインディング</target>
        </trans-unit>
        <trans-unit id="5a7cfae7c5a95a19b72263816bc6cea1397eb45b" translate="yes" xml:space="preserve">
          <source>or for all &lt;code&gt;Backbone.View&lt;/code&gt;s</source>
          <target state="translated">またはすべての &lt;code&gt;Backbone.View&lt;/code&gt; の場合</target>
        </trans-unit>
        <trans-unit id="88faac11dac221116e7705b81a183fd08668de4b" translate="yes" xml:space="preserve">
          <source>partition</source>
          <target state="translated">partition</target>
        </trans-unit>
        <trans-unit id="07542ad08b8353036c3f43fd7fbb4ea166f300fb" translate="yes" xml:space="preserve">
          <source>pluck</source>
          <target state="translated">pluck</target>
        </trans-unit>
        <trans-unit id="48c3689f6dd5e9e952f925b7ebebf64d7c43fc56" translate="yes" xml:space="preserve">
          <source>reduce</source>
          <target state="translated">reduce</target>
        </trans-unit>
        <trans-unit id="90afb8c10d80d7b84837590eb43cb0b81ca22390" translate="yes" xml:space="preserve">
          <source>reject</source>
          <target state="translated">reject</target>
        </trans-unit>
        <trans-unit id="ff1ff50da33c811a603b0e9d8679453fa3741d49" translate="yes" xml:space="preserve">
          <source>remove:child and before:remove:child events</source>
          <target state="translated">remove:child および before:remove:child イベント</target>
        </trans-unit>
        <trans-unit id="23429fb74e9a7d6b46aa608ba008b4decc5259f2" translate="yes" xml:space="preserve">
          <source>remove:region and before:remove:region events</source>
          <target state="translated">remove:region と before:remove:region イベント</target>
        </trans-unit>
        <trans-unit id="10acf66c426461b7cbcc5758f3a6fe21ea46015e" translate="yes" xml:space="preserve">
          <source>render and before:render events</source>
          <target state="translated">render と before:render イベント</target>
        </trans-unit>
        <trans-unit id="a7f496c3a0141308e26218726a0c1dac8f48aa28" translate="yes" xml:space="preserve">
          <source>render:children and before:render:children events</source>
          <target state="translated">render:children および before:render:children イベント</target>
        </trans-unit>
        <trans-unit id="38695f4b1fe01a26b75981337e7fec875be2ed91" translate="yes" xml:space="preserve">
          <source>reset A Region</source>
          <target state="translated">エーリージョンのリセット</target>
        </trans-unit>
        <trans-unit id="27ad1672d8c97d748c9f1d8d465abfbf6bffeb72" translate="yes" xml:space="preserve">
          <source>rest</source>
          <target state="translated">rest</target>
        </trans-unit>
        <trans-unit id="8f773fe324e238fb35e50fb28b478ba00043e7a1" translate="yes" xml:space="preserve">
          <source>show and before:show events</source>
          <target state="translated">ショーとその前:ショーイベント</target>
        </trans-unit>
        <trans-unit id="eb875812858d27b22cb2b75f992dffadc1b05c66" translate="yes" xml:space="preserve">
          <source>some</source>
          <target state="translated">some</target>
        </trans-unit>
        <trans-unit id="af73846f20e53d1dff77338111168d49d64fafd9" translate="yes" xml:space="preserve">
          <source>sort and before:sort events</source>
          <target state="translated">ソートとその前:ソートイベント</target>
        </trans-unit>
        <trans-unit id="4a0fdf08d1ce1af1b278da2c3d908737c82cd296" translate="yes" xml:space="preserve">
          <source>start event</source>
          <target state="translated">スタートイベント</target>
        </trans-unit>
        <trans-unit id="2041cc0f86fcee4fbf0ccd352e5593da8c9c14a8" translate="yes" xml:space="preserve">
          <source>toArray</source>
          <target state="translated">toArray</target>
        </trans-unit>
        <trans-unit id="0831ec17b10a6e2fb3a43c80fb1b41567cbd2ee7" translate="yes" xml:space="preserve">
          <source>triggerMethod</source>
          <target state="translated">triggerMethod</target>
        </trans-unit>
        <trans-unit id="1522e5c22c2c62df46fc95dabc8012a590a6747b" translate="yes" xml:space="preserve">
          <source>unbindEvents</source>
          <target state="translated">unbindEvents</target>
        </trans-unit>
        <trans-unit id="93e6375c709e20d9b3fde5cec12e2e1b310f78fc" translate="yes" xml:space="preserve">
          <source>unbindRequests</source>
          <target state="translated">unbindRequests</target>
        </trans-unit>
        <trans-unit id="0d4e654c613ea68bffeeab1587b7dbac44826c2b" translate="yes" xml:space="preserve">
          <source>without</source>
          <target state="translated">without</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
