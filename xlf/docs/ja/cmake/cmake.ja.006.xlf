<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="a84b8059c009f755b58c2a4e071b55fe0e475931" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LANGUAGE&lt;/code&gt; is set, the specified compiler will be used to perform the check. Acceptable values are &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;LANGUAGE&lt;/code&gt; 設定され、指定されたコンパイラがチェックを実行するために使用されます。許容値は &lt;code&gt;C&lt;/code&gt; および &lt;code&gt;CXX&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a0c5c6bff69dee49373e9b4fa8c2ed356d71059c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LANGUAGE&lt;/code&gt; is set, the specified compiler will be used to perform the check. Acceptable values are &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt;. If not set, the C compiler will be used if enabled. If the C compiler is not enabled, the C++ compiler will be used if enabled.</source>
          <target state="translated">場合は &lt;code&gt;LANGUAGE&lt;/code&gt; 設定され、指定されたコンパイラがチェックを実行するために使用されます。許容値は &lt;code&gt;C&lt;/code&gt; および &lt;code&gt;CXX&lt;/code&gt; です。設定されていない場合、有効にするとCコンパイラが使用されます。Cコンパイラが有効になっていない場合、有効にするとC ++コンパイラが使用されます。</target>
        </trans-unit>
        <trans-unit id="1e49879e925e90fb110eabcb331c26c19f58156b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LIBRARY_TARGET&lt;/code&gt; is a static library, macros are defined without values.</source>
          <target state="translated">&lt;code&gt;LIBRARY_TARGET&lt;/code&gt; が静的ライブラリの場合、マクロは値なしで定義されます。</target>
        </trans-unit>
        <trans-unit id="c48a6a4137169f6653d1222723c26405a94b37e6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; is given the corresponding property will be set on the created target. See documentation of the &lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt;&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt; target property for details.</source>
          <target state="translated">&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; が指定されている場合、対応するプロパティが作成されたターゲットに設定されます。詳細については、&lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt; &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; &lt;/a&gt;ターゲットプロパティのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="5223e155f3847f4d07db6f90e4725b0b01243e64" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;NAMELINK_SKIP&lt;/code&gt; is specified, &lt;code&gt;NAMELINK_COMPONENT&lt;/code&gt; has no effect. It is not recommended to use &lt;code&gt;NAMELINK_SKIP&lt;/code&gt; in conjunction with &lt;code&gt;NAMELINK_COMPONENT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NAMELINK_SKIP&lt;/code&gt; が指定されている場合、 &lt;code&gt;NAMELINK_COMPONENT&lt;/code&gt; は無効です。使用することをお勧めしません &lt;code&gt;NAMELINK_SKIP&lt;/code&gt; をと一緒に &lt;code&gt;NAMELINK_COMPONENT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a987270cba03c1cf8aac71225f3c8840a4d845d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; is specified, then no additional paths are added to the search. If &lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; is not specified, the search process is as follows:</source>
          <target state="translated">&lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; が指定されている場合、追加のパスは検索に追加されません。 &lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; が指定されていない場合、検索プロセスは次のようになります。</target>
        </trans-unit>
        <trans-unit id="75b7a0417a2b55276855bf7958eb12cee4662fb1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;OBJC&lt;/code&gt; is not defined, the &lt;a href=&quot;cc#envvar:CC&quot; id=&quot;index-0-envvar:CC&quot;&gt;&lt;code&gt;CC&lt;/code&gt;&lt;/a&gt; environment variable will be checked instead.</source>
          <target state="translated">&lt;code&gt;OBJC&lt;/code&gt; が定義されていない場合は、代わりに&lt;a href=&quot;cc#envvar:CC&quot; id=&quot;index-0-envvar:CC&quot;&gt; &lt;code&gt;CC&lt;/code&gt; &lt;/a&gt;環境変数がチェックされます。</target>
        </trans-unit>
        <trans-unit id="1983a499ccecab18da55abcd8ff3314d22b08562" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;OBJCXX&lt;/code&gt; is not defined, the &lt;a href=&quot;cxx#envvar:CXX&quot; id=&quot;index-0-envvar:CXX&quot;&gt;&lt;code&gt;CXX&lt;/code&gt;&lt;/a&gt; environment variable will be checked instead.</source>
          <target state="translated">&lt;code&gt;OBJCXX&lt;/code&gt; が定義されていない場合は、代わりに&lt;a href=&quot;cxx#envvar:CXX&quot; id=&quot;index-0-envvar:CXX&quot;&gt; &lt;code&gt;CXX&lt;/code&gt; &lt;/a&gt;環境変数がチェックされます。</target>
        </trans-unit>
        <trans-unit id="ca1e97ca4fb52ee7a5c19b5e864755c0ce74ed69" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;PARENT_SCOPE&lt;/code&gt; is present then the variable is removed from the scope above the current scope. See the same option in the &lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; command for further details.</source>
          <target state="translated">場合 &lt;code&gt;PARENT_SCOPE&lt;/code&gt; 存在し、変数は、現在のスコープ上記範囲から除去されます。詳細については、&lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;コマンドの同じオプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="9b49daf8b9bc2e87b53d7ce74829b289f82ac6b8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;PATH_SUFFIXES&lt;/code&gt; is specified, the suffixes are appended to each (&lt;code&gt;W&lt;/code&gt;) or (&lt;code&gt;U&lt;/code&gt;) directory entry one-by-one.</source>
          <target state="translated">場合 &lt;code&gt;PATH_SUFFIXES&lt;/code&gt; が指定され、サフィックスは、それぞれ（に添付されている &lt;code&gt;W&lt;/code&gt; ）又は（ &lt;code&gt;U&lt;/code&gt; ）のディレクトリエントリ一つずつ。</target>
        </trans-unit>
        <trans-unit id="9503111aebb1371246ff62fec6c68303438de54e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;PREFIX_NAME&lt;/code&gt; is specified, the argument will be used as a prefix to all generated macros.</source>
          <target state="translated">場合 &lt;code&gt;PREFIX_NAME&lt;/code&gt; が指定され、引数が生成されたすべてのマクロを接頭辞として使用されます。</target>
        </trans-unit>
        <trans-unit id="e9a78ed9af41c6fa770151641302a09ddd7547fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; is not defined, &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable will be used, if any.</source>
          <target state="translated">&lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; が定義されていない場合、&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;変数が使用されます（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="4c3b50dbcd4132c7668313b729cabe43423050d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Python3_FIND_ABI&lt;/code&gt; is not defined, any ABI will be searched.</source>
          <target state="translated">&lt;code&gt;Python3_FIND_ABI&lt;/code&gt; が定義されていない場合、すべてのABIが検索されます。</target>
        </trans-unit>
        <trans-unit id="d2777b6b755873811701320f4aca9e9c1e83bfbe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; is not defined, &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable will be used, if any.</source>
          <target state="translated">&lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; が定義されていない場合、&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;変数が使用されます（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="2e95dff594588354af06ddd9c66b42ffff674a59" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Python_FIND_ABI&lt;/code&gt; is not defined, any ABI will be searched.</source>
          <target state="translated">&lt;code&gt;Python_FIND_ABI&lt;/code&gt; が定義されていない場合、すべてのABIが検索されます。</target>
        </trans-unit>
        <trans-unit id="3833a52d19f3e3d17a5af71b1eaf6d032f375029" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; is not defined, &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable will be used, if any.</source>
          <target state="translated">&lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; が定義されていない場合、&lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-1-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt;変数が使用されます（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="6e2dd30e2725c1dcc8b960390418dcdde4befb6b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;QUIET&lt;/code&gt; is used, CTest will suppress any non-error messages that it otherwise would have printed to the console.</source>
          <target state="translated">&lt;code&gt;QUIET&lt;/code&gt; が使用されている場合、CTestは、コンソールに出力されるはずのエラー以外のメッセージを抑制します。</target>
        </trans-unit>
        <trans-unit id="6fe1769fb8cc752adf87915b060c38a505893b09" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;SYMBOLIC&lt;/code&gt; (boolean) is set to &lt;code&gt;True&lt;/code&gt; the build system will be informed that the source file is not actually created on disk but instead used as a symbolic name for a build rule.</source>
          <target state="translated">場合 &lt;code&gt;SYMBOLIC&lt;/code&gt; （ブール値）がに設定されている &lt;code&gt;True&lt;/code&gt; ビルドシステムは、ソースファイルが実際にディスク上に作成したが、代わりにビルドルールのシンボル名として使用されていないことが通知されます。</target>
        </trans-unit>
        <trans-unit id="c1f184a2031267879df091c13d595365978c40bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;TRACK&lt;/code&gt; is used, the submissions will go to the specified track on the CDash server. If no &lt;code&gt;TRACK&lt;/code&gt; is specified, the name of the model is used by default.</source>
          <target state="translated">場合 &lt;code&gt;TRACK&lt;/code&gt; 使用され、提出は、CDASHサーバー上の特定のトラックに移動します。 &lt;code&gt;TRACK&lt;/code&gt; が指定されていない場合、デフォルトでモデルの名前が使用されます。</target>
        </trans-unit>
        <trans-unit id="ae3c861fca4272f69bb87929089c24ba66cad1d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;TRUE&lt;/code&gt;, CMake will neither generate installation rules nor will it generate &lt;code&gt;cmake_install.cmake&lt;/code&gt; files. This variable is &lt;code&gt;FALSE&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;TRUE&lt;/code&gt; の場合、CMakeはインストールルールも &lt;code&gt;cmake_install.cmake&lt;/code&gt; ファイルも生成しません。この変数はデフォルトで &lt;code&gt;FALSE&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5af564aabb3bb252a1e6046d6ecc34806491ea66" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;TRUE&lt;/code&gt;, use of deprecated functionality will issue fatal errors. If this variable is not set, CMake behaves as if it were set to &lt;code&gt;FALSE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TRUE&lt;/code&gt; の場合、非推奨の機能を使用すると致命的なエラーが発生します。この変数が設定されていない場合、CMakeは &lt;code&gt;FALSE&lt;/code&gt; に設定されているかのように動作します。</target>
        </trans-unit>
        <trans-unit id="62f0a3ad1a5544a1eb14cff4b6dac2459f264bb0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;USE_BAR&lt;/code&gt; is true and &lt;code&gt;USE_ZOT&lt;/code&gt; is false, this provides an option called &lt;code&gt;USE_FOO&lt;/code&gt; that defaults to ON. Otherwise, it sets &lt;code&gt;USE_FOO&lt;/code&gt; to OFF and hides the option from the user. If the status of &lt;code&gt;USE_BAR&lt;/code&gt; or &lt;code&gt;USE_ZOT&lt;/code&gt; ever changes, any value for the &lt;code&gt;USE_FOO&lt;/code&gt; option is saved so that when the option is re-enabled it retains its old value.</source>
          <target state="translated">場合 &lt;code&gt;USE_BAR&lt;/code&gt; が真であると &lt;code&gt;USE_ZOT&lt;/code&gt; がfalseで、これはと呼ばれるオプションを提供 &lt;code&gt;USE_FOO&lt;/code&gt; そのデフォルトONにします。それ以外の場合は、 &lt;code&gt;USE_FOO&lt;/code&gt; をOFFに設定し、オプションをユーザーから非表示にします。 &lt;code&gt;USE_BAR&lt;/code&gt; または &lt;code&gt;USE_ZOT&lt;/code&gt; のステータスが変更された場合は、 &lt;code&gt;USE_FOO&lt;/code&gt; オプションの値が保存されるため、オプションを再度有効にしても、古い値が保持されます。</target>
        </trans-unit>
        <trans-unit id="b2f740024ee45ca83324b273739eadebf0d209c4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; is set, the custom command defined by this function will create a stamp file with the name &lt;code&gt;&amp;lt;targetName&amp;gt;.stamp&lt;/code&gt; in the current binary directory whenever doxygen is re-run. With this option present, all items in &lt;code&gt;&amp;lt;filesOrDirs&amp;gt;&lt;/code&gt; must be files (i.e. no directories, symlinks or wildcards) and each of the files must exist at the time &lt;code&gt;doxygen_add_docs()&lt;/code&gt; is called. An error will be raised if any of the items listed is missing or is not a file when &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; is given. A dependency will be created on each of the files so that doxygen will only be re-run if one of the files is updated. Without the &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; option, doxygen will always be re-run if the &lt;code&gt;&amp;lt;targetName&amp;gt;&lt;/code&gt; target is built regardless of whether anything listed in &lt;code&gt;&amp;lt;filesOrDirs&amp;gt;&lt;/code&gt; has changed.</source>
          <target state="translated">場合 &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; がセットされ、この機能によって定義されたカスタムコマンドは、名前のスタンプファイルを作成します &lt;code&gt;&amp;lt;targetName&amp;gt;.stamp&lt;/code&gt; doxygenには、再実行されるたびに現在のバイナリのディレクトリに。このオプションが存在する場合、 &lt;code&gt;&amp;lt;filesOrDirs&amp;gt;&lt;/code&gt; 内のすべてのアイテムはファイルである必要があり（つまり、ディレクトリ、シンボリックリンク、またはワイルドカードがない）、 &lt;code&gt;doxygen_add_docs()&lt;/code&gt; が呼び出されたときに各ファイルが存在する必要があります。 &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; を指定したときに、リストされている項目のいずれかが欠落しているか、ファイルではない場合、エラーが発生します。各ファイルに依存関係が作成されるため、ファイルの1つが更新された場合にのみdoxygenが再実行されます。 &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; オプションがないと、doxygenは常に再実行されます。 &lt;code&gt;&amp;lt;targetName&amp;gt;&lt;/code&gt; ターゲットは、 &lt;code&gt;&amp;lt;filesOrDirs&amp;gt;&lt;/code&gt; にリストされているものが変更されたかどうかに関係なくビルドされます。</target>
        </trans-unit>
        <trans-unit id="f1d7a072cc2cc9434ed312ac21e0598694df0fd2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; is 1 or is undefined, output is written to the &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; directory.</source>
          <target state="translated">場合 &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; が 1であるか定義されていない、出力が書き込まれ&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; の&lt;/a&gt;ディレクトリ。</target>
        </trans-unit>
        <trans-unit id="0254fd4f3b09a96cc47349e95d2214257677bf43" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; is 2, a dedicated directory will be used. The path of this directory can be retrieved from the &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; target property.</source>
          <target state="translated">場合 &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; が 2である、専用のディレクトリが使用されます。このディレクトリのパスは、 &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; ターゲットプロパティから取得できます。</target>
        </trans-unit>
        <trans-unit id="c7800eac1bfef21c1f5ab9034fd7fabbcd20a3db" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; is set to 2, it is &lt;strong&gt;strongly&lt;/strong&gt; recommended to use a dedicated directory unique to the target when either the &lt;code&gt;OUTPUT_DIR&lt;/code&gt; option or the &lt;code&gt;CMAKE_SWIG_OUTDIR&lt;/code&gt; variable are specified. The output directory contents are erased as part of the target build, so to prevent interference between targets or losing other important files, each target should have its own dedicated output directory.</source>
          <target state="translated">場合 &lt;code&gt;UseSWIG_MODULE_VERSION&lt;/code&gt; が 2に設定されている、されて&lt;strong&gt;強く&lt;/strong&gt;いずれかのときに、ターゲットに独自の専用のディレクトリを使用することを推奨 &lt;code&gt;OUTPUT_DIR&lt;/code&gt; のオプションまたは &lt;code&gt;CMAKE_SWIG_OUTDIR&lt;/code&gt; の変数が指定されています。出力ディレクトリの内容はターゲットビルドの一部として消去されるため、ターゲット間の干渉や他の重要なファイルの損失を防ぐために、各ターゲットには専用の出力ディレクトリが必要です。</target>
        </trans-unit>
        <trans-unit id="c82f0f51b5c571a01369715817ae9b73091b0162" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;WIN32&lt;/code&gt; is given the property &lt;a href=&quot;../prop_tgt/win32_executable#prop_tgt:WIN32_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:WIN32_EXECUTABLE&quot;&gt;&lt;code&gt;WIN32_EXECUTABLE&lt;/code&gt;&lt;/a&gt; will be set on the target created. See documentation of that target property for details.</source>
          <target state="translated">&lt;code&gt;WIN32&lt;/code&gt; が指定されている場合、プロパティ&lt;a href=&quot;../prop_tgt/win32_executable#prop_tgt:WIN32_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:WIN32_EXECUTABLE&quot;&gt; &lt;code&gt;WIN32_EXECUTABLE&lt;/code&gt; &lt;/a&gt;が作成されたターゲットに設定されます。詳細については、そのターゲットプロパティのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9fb2ea5cf8b6a7fc3473d5e5d00dae9d1d62952d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;bison&lt;/code&gt; is found, the module defines the macro:</source>
          <target state="translated">場合 &lt;code&gt;bison&lt;/code&gt; 発見され、モジュールはマクロを定義します。</target>
        </trans-unit>
        <trans-unit id="fb0232c29e2f4502ca937571d7f6879d90fdf134" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;include(CPack)&lt;/code&gt; is used then by default this variable is set to the content of &lt;a href=&quot;cmake_install_default_directory_permissions#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-1-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt;&lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;include(CPack)&lt;/code&gt; 、デフォルトでは、その後に使用され、この変数はの内容に設定されている&lt;a href=&quot;cmake_install_default_directory_permissions#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-1-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt; &lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22d72e238fd63f1ca0ecbfc31e8151ef1131ef58" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; are available on the system, then we will use them to compute the square root in the &lt;code&gt;mysqrt&lt;/code&gt; function. Add the following code to the &lt;code&gt;mysqrt&lt;/code&gt; function in &lt;code&gt;MathFunctions/mysqrt.cxx&lt;/code&gt; (don&amp;rsquo;t forget the &lt;code&gt;#endif&lt;/code&gt; before returning the result!):</source>
          <target state="translated">場合は &lt;code&gt;log&lt;/code&gt; および &lt;code&gt;exp&lt;/code&gt; がシステム上で利用可能な、我々は中に平方根を計算するためにそれらを使用します &lt;code&gt;mysqrt&lt;/code&gt; の機能。次のコードを &lt;code&gt;MathFunctions/mysqrt.cxx&lt;/code&gt; の &lt;code&gt;mysqrt&lt;/code&gt; 関数に追加します（結果を返す前に &lt;code&gt;#endif&lt;/code&gt; を忘れないでください！）：</target>
        </trans-unit>
        <trans-unit id="755dfbeb5796600eb5e5926c49b4e418d05d642b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;make install&lt;/code&gt; is invoked and directories are implicitly created they get permissions set by &lt;a href=&quot;#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-0-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt;&lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt;&lt;/a&gt; variable or platform specific default permissions if the variable is not set.</source>
          <target state="translated">場合は &lt;code&gt;make install&lt;/code&gt; 呼び出されるとディレクトリが暗黙的に作成されている彼らがで設定されたアクセス許可を取得&lt;a href=&quot;#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-0-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt; &lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt; の&lt;/a&gt;変数が設定されていない場合は、変数またはプラットフォーム固有のデフォルトの権限を。</target>
        </trans-unit>
        <trans-unit id="9b32ea172cfac162d3c08c5ef739c2385835347e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;make install&lt;/code&gt; is invoked or &lt;code&gt;INSTALL&lt;/code&gt; is built, this directory is prepended onto all install directories. This variable defaults to &lt;code&gt;/usr/local&lt;/code&gt; on UNIX and &lt;code&gt;c:/Program Files/${PROJECT_NAME}&lt;/code&gt; on Windows. See &lt;a href=&quot;cmake_install_prefix_initialized_to_default#variable:CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&lt;/code&gt;&lt;/a&gt; for how a project might choose its own default.</source>
          <target state="translated">場合は &lt;code&gt;make install&lt;/code&gt; を呼び出さたりれる &lt;code&gt;INSTALL&lt;/code&gt; 構築され、このディレクトリは、すべてのインストールディレクトリ上に付加されます。この変数のデフォルトは、UNIXでは &lt;code&gt;/usr/local&lt;/code&gt; 、Windowsでは &lt;code&gt;c:/Program Files/${PROJECT_NAME}&lt;/code&gt; です。プロジェクトが独自のデフォルトを選択する方法については、&lt;a href=&quot;cmake_install_prefix_initialized_to_default#variable:CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="33ff9193e8936ac26ee22f9207d8333e8480e4f5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pkg-config&lt;/code&gt; returns multiple values for the specified variable, &lt;code&gt;resultVar&lt;/code&gt; will contain a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pkg-config&lt;/code&gt; が指定された変数に対して複数の値を返す場合、 &lt;code&gt;resultVar&lt;/code&gt; には&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;; -list&lt;/a&gt;が含まれます。</target>
        </trans-unit>
        <trans-unit id="bf1cd5e314dd0b71b22fedd85511647dc2ae1e11" translate="yes" xml:space="preserve">
          <source>If ALL is set, the target will be added to the default build target.</source>
          <target state="translated">ALLが設定されている場合、デフォルトのビルドターゲットにターゲットが追加されます。</target>
        </trans-unit>
        <trans-unit id="16b256dd2471e93b77c29265347ae93f5d471be1" translate="yes" xml:space="preserve">
          <source>If Boost was built using the boost-cmake project or from Boost 1.70.0 on it provides a package configuration file for use with find_package&amp;rsquo;s config mode. This module looks for the package configuration file called &lt;code&gt;BoostConfig.cmake&lt;/code&gt; or &lt;code&gt;boost-config.cmake&lt;/code&gt; and stores the result in &lt;code&gt;CACHE&lt;/code&gt; entry &amp;ldquo;Boost_DIR&amp;rdquo;. If found, the package configuration file is loaded and this module returns with no further action. See documentation of the Boost CMake package configuration for details on what it provides.</source>
          <target state="translated">Boostがboost-cmakeプロジェクトを使用して、またはBoost 1.70.0からビルドされた場合、find_packageの構成モードで使用するパッケージ構成ファイルが提供されます。このモジュールは、 &lt;code&gt;BoostConfig.cmake&lt;/code&gt; または &lt;code&gt;boost-config.cmake&lt;/code&gt; というパッケージ構成ファイルを探し、その結果を &lt;code&gt;CACHE&lt;/code&gt; エントリ「Boost_DIR」に格納します。見つかった場合、パッケージ構成ファイルがロードされ、このモジュールは何もせずに戻ります。それが提供するものの詳細については、Boost CMakeパッケージ構成のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="5d91ec96a190cb075995286d5fc9e0cdae317050" translate="yes" xml:space="preserve">
          <source>If CMake is currently processing deferred calls scheduled by the &lt;a href=&quot;../command/cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt;&lt;code&gt;cmake_language(DEFER)&lt;/code&gt;&lt;/a&gt; command, this variable evaluates to &lt;code&gt;DEFERRED&lt;/code&gt; instead of a specific line number.</source>
          <target state="translated">CMakeが現在&lt;a href=&quot;../command/cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt; &lt;code&gt;cmake_language(DEFER)&lt;/code&gt; &lt;/a&gt;コマンドによってスケジュールされた遅延呼び出しを処理している場合、この変数は特定の行番号ではなく &lt;code&gt;DEFERRED&lt;/code&gt; と評価されます。</target>
        </trans-unit>
        <trans-unit id="029bb713c83429f5d5e7995236e27a13ac47bb96" translate="yes" xml:space="preserve">
          <source>If CMake is run with the Makefile or Ninja generator, then &lt;code&gt;include(CPack)&lt;/code&gt; also generates a target &lt;code&gt;package_source&lt;/code&gt;. To build a source package, instead of &lt;code&gt;cpack -G TGZ --config CPackSourceConfig.cmake&lt;/code&gt; one may call &lt;code&gt;cmake --build . --target package_source&lt;/code&gt;, &lt;code&gt;make package_source&lt;/code&gt;, or &lt;code&gt;ninja package_source&lt;/code&gt;.</source>
          <target state="translated">CMakeがMakefileまたはNinjaジェネレーターで実行される場合、 &lt;code&gt;include(CPack)&lt;/code&gt; はターゲット &lt;code&gt;package_source&lt;/code&gt; も生成します。ソースパッケージをビルドするには、 &lt;code&gt;cpack -G TGZ --config CPackSourceConfig.cmake&lt;/code&gt; の代わりに、 &lt;code&gt;cmake --build . --target package_source&lt;/code&gt; buildを呼び出すことができます。 --target package_source、 &lt;code&gt;make package_source&lt;/code&gt; 、または &lt;code&gt;ninja package_source&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d825ba1b0d98086890654b869a50e96b19fd86f" translate="yes" xml:space="preserve">
          <source>If CMake is run with the Makefile, Ninja, or Xcode generator, then &lt;code&gt;include(CPack)&lt;/code&gt; generates a target &lt;code&gt;package&lt;/code&gt;. This makes it possible to build a binary installer from CMake, Make, or Ninja: Instead of &lt;code&gt;cpack&lt;/code&gt;, one may call &lt;code&gt;cmake --build . --target package&lt;/code&gt; or &lt;code&gt;make package&lt;/code&gt; or &lt;code&gt;ninja package&lt;/code&gt;. The VS generator creates an uppercase target &lt;code&gt;PACKAGE&lt;/code&gt;.</source>
          <target state="translated">CMakeがMakefile、Ninja、またはXcodeジェネレーターで実行される場合、 &lt;code&gt;include(CPack)&lt;/code&gt; はターゲット &lt;code&gt;package&lt;/code&gt; 生成します。これにより、CMake、Make、またはNinjaからバイナリインストーラーをビルドできます &lt;code&gt;cpack&lt;/code&gt; 代わりに、 &lt;code&gt;cmake --build . --target package&lt;/code&gt; buildを呼び出すことができます。-ターゲットパッケージまたは &lt;code&gt;make package&lt;/code&gt; または &lt;code&gt;ninja package&lt;/code&gt; 。VSジェネレーターは大文字のターゲット &lt;code&gt;PACKAGE&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="e6f339798b174d94e66a83a4fe08aba5893b9034" translate="yes" xml:space="preserve">
          <source>If CTest is asked to run only a subset of tests (e.g. using regular expressions or the &lt;code&gt;--rerun-failed&lt;/code&gt; option) and the cleanup test is not in the set of tests to run, it will automatically be added if any tests in the set require any fixture listed in &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt;.</source>
          <target state="translated">CTestがテストのサブセットのみを実行するように要求され（たとえば、正規表現または &lt;code&gt;--rerun-failed&lt;/code&gt; オプションを使用）、クリーンアップテストが実行するテストのセットに含まれていない場合、セット内のテストがあれば自動的に追加されます &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt; にリストされている器具が必要です。</target>
        </trans-unit>
        <trans-unit id="5d267b6bb4d5ef12baed307fada0f826a8ec855e" translate="yes" xml:space="preserve">
          <source>If CTest is asked to run only a subset of tests (e.g. using regular expressions or the &lt;code&gt;--rerun-failed&lt;/code&gt; option) and the setup test is not in the set of tests to run, it will automatically be added if any tests in the set require any fixture listed in &lt;code&gt;FIXTURES_SETUP&lt;/code&gt;.</source>
          <target state="translated">CTestがテストのサブセットのみを実行するように要求され（たとえば、正規表現または &lt;code&gt;--rerun-failed&lt;/code&gt; オプションを使用）、セットアップテストが実行するテストのセットにない場合、セット内のテストがあれば自動的に追加されます &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; にリストされている器具が必要です。</target>
        </trans-unit>
        <trans-unit id="ec58b23c55b54b9b245b4918924f5e51892c14fc" translate="yes" xml:space="preserve">
          <source>If CURL was built using the CMake buildsystem then it provides its own &lt;code&gt;CURLConfig.cmake&lt;/code&gt; file for use with the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command&amp;rsquo;s config mode. This module looks for this file and, if found, returns its results with no further action.</source>
          <target state="translated">CURLがCMakeビルドシステムを使用して&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;れた場合、find_package（）コマンドの構成モードで使用するための独自の &lt;code&gt;CURLConfig.cmake&lt;/code&gt; ファイルを提供します。このモジュールはこのファイルを検索し、見つかった場合は、それ以上のアクションなしで結果を返します。</target>
        </trans-unit>
        <trans-unit id="abf02ccdb2d3409a988d8d038ccd606ad63d705e" translate="yes" xml:space="preserve">
          <source>If False, do not try to use the relevant CMake wrapping command.</source>
          <target state="translated">False の場合は、関連する CMake ラッピングコマンドを使用しようとしません。</target>
        </trans-unit>
        <trans-unit id="45d44b1292592dc708ef500f8cba7911a8ffd925" translate="yes" xml:space="preserve">
          <source>If False, optional Yy part of Xxx system is not available.</source>
          <target state="translated">False の場合、Xxx システムのオプションの Yy 部分は利用できません。</target>
        </trans-unit>
        <trans-unit id="ab02204c2b483912e1b1bf78f7f3a02eccba3411" translate="yes" xml:space="preserve">
          <source>If GSL is found, this module defines the following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets:</source>
          <target state="translated">GSLが見つかった場合、このモジュールは次の&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;ターゲットを定義します。</target>
        </trans-unit>
        <trans-unit id="1b9301d9a14b3d0ef762051513d0e3346a23233c" translate="yes" xml:space="preserve">
          <source>If USE_BAR is true and USE_ZOT is false, this provides an option called USE_FOO that defaults to ON. Otherwise, it sets USE_FOO to OFF. If the status of USE_BAR or USE_ZOT ever changes, any value for the USE_FOO option is saved so that when the option is re-enabled it retains its old value.</source>
          <target state="translated">USE_BAR が true で USE_ZOT が false の場合、これは USE_FOO と呼ばれるオプションを提供し、デフォルトでは ON に設定される。それ以外の場合は USE_FOO を OFF に設定する。USE_BAR または USE_ZOT のステータスが変更された場合、USE_FOO オプションの値は保存され、オプションが再有効化された時に古い値を保持する。</target>
        </trans-unit>
        <trans-unit id="6133a60b4a2b7a6507e2c6571908a17624d85b99" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;CMAKE_TARGET_MESSAGES&lt;/code&gt; cache entry exists its value initializes the value of this property.</source>
          <target state="translated">&lt;code&gt;CMAKE_TARGET_MESSAGES&lt;/code&gt; キャッシュエントリが存在する場合、その値はこのプロパティの値を初期化します。</target>
        </trans-unit>
        <trans-unit id="38ad99888bdf2e2daa11c3fbdeb77bf0f28d6156" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;FILENAME&lt;/code&gt; is given, the information is printed into this file. If &lt;code&gt;APPEND&lt;/code&gt; is used, it is appended to this file, otherwise the file is overwritten if it already existed. If the VAR option is used, the information is &amp;ldquo;printed&amp;rdquo; into the specified variable. If &lt;code&gt;FILENAME&lt;/code&gt; is not used, the information is printed to the terminal. Using the &lt;code&gt;DESCRIPTION&lt;/code&gt; option a description or headline can be set which will be printed above the actual content. If only one type of package was requested, no title is printed, unless it is explicitly set using either &lt;code&gt;DESCRIPTION&lt;/code&gt; to use a custom string, or &lt;code&gt;DEFAULT_DESCRIPTION&lt;/code&gt; to use a default title for the requested type. If &lt;code&gt;INCLUDE_QUIET_PACKAGES&lt;/code&gt; is given, packages which have been searched with &lt;code&gt;find_package(... QUIET)&lt;/code&gt; will also be listed. By default they are skipped. If &lt;code&gt;FATAL_ON_MISSING_REQUIRED_PACKAGES&lt;/code&gt; is given, CMake will abort if a package which is marked as one of the package types listed in the &lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-1-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt;&lt;/a&gt; global property has not been found. The default value for the &lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-2-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt;&lt;/a&gt; global property is &lt;code&gt;REQUIRED&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;FILENAME&lt;/code&gt; 与えられ、情報がこのファイルに出力されます。 &lt;code&gt;APPEND&lt;/code&gt; が使用されている場合は、このファイルに追加されます。それ以外の場合は、ファイルがすでに存在する場合は上書きされます。 VARオプションを使用すると、情報は指定した変数に「出力」されます。 &lt;code&gt;FILENAME&lt;/code&gt; を使用しない場合、情報は端末に出力されます。 &lt;code&gt;DESCRIPTION&lt;/code&gt; オプションを使用して、実際のコンテンツの上に印刷される説明または見出しを設定できます。 1種類のパッケージのみが要求された場合、 &lt;code&gt;DESCRIPTION&lt;/code&gt; を使用してカスタム文字列を使用するか、 &lt;code&gt;DEFAULT_DESCRIPTION&lt;/code&gt; を使用して要求されたタイプのデフォルトのタイトルを使用するように明示的に設定しない限り、タイトルは出力されません。 &lt;code&gt;INCLUDE_QUIET_PACKAGES&lt;/code&gt; の場合が与えられると、 &lt;code&gt;find_package(... QUIET)&lt;/code&gt; 検索されたパッケージもリストされます。デフォルトでは、スキップされます。場合 &lt;code&gt;FATAL_ON_MISSING_REQUIRED_PACKAGES&lt;/code&gt; が与えられているに記載されているパッケージの種類の一つとしてマークされているパッケージた場合、CMakeのは中止されます&lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-1-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt; &lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt; &lt;/a&gt;グローバルプロパティが見つかっていません。&lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-2-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt; &lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt; &lt;/a&gt;グローバルプロパティのデフォルト値は &lt;code&gt;REQUIRED&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ce1ad6cc8b4cfafe232f565f2f1c4345ca358a16" translate="yes" xml:space="preserve">
          <source>If a Makefile or Ninja generator is used to generate the build tree, it is not recommended to invoke &lt;code&gt;make&lt;/code&gt; or &lt;code&gt;ninja&lt;/code&gt; directly. Instead, it is recommended that the IDE invoke &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;--build&lt;/code&gt; argument, which will in turn invoke the appropriate build tool.</source>
          <target state="translated">MakefileまたはNinjaジェネレーターを使用してビルドツリーを生成する場合、 &lt;code&gt;make&lt;/code&gt; または &lt;code&gt;ninja&lt;/code&gt; を直接呼び出すことはお勧めしません。代わりに、IDEが &lt;code&gt;--build&lt;/code&gt; 引数を指定して&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;を呼び出すことをお勧めします。これにより、適切なビルドツールが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="30da87e82d95c1f6b4609119037e4119fc9a6375" translate="yes" xml:space="preserve">
          <source>If a Qt macro is found, then the C++ source file &lt;code&gt;&amp;lt;base&amp;gt;.&amp;lt;source_extension&amp;gt;&lt;/code&gt; is expected to as well contain an include statement</source>
          <target state="translated">Qtマクロが見つかった場合、C ++ソースファイル &lt;code&gt;&amp;lt;base&amp;gt;.&amp;lt;source_extension&amp;gt;&lt;/code&gt; は、includeステートメントも含まれていることが期待されます</target>
        </trans-unit>
        <trans-unit id="8f29417611d74a81e0c2da5b42b2e17268bca5ed" translate="yes" xml:space="preserve">
          <source>If a Qt macro is found, then the header will be compiled by the &lt;code&gt;moc&lt;/code&gt; to the output file &lt;code&gt;moc_&amp;lt;base_name&amp;gt;.cpp&lt;/code&gt;. The complete output file path is described in the section &lt;a href=&quot;#output-file-location&quot;&gt;Output file location&lt;/a&gt;.</source>
          <target state="translated">Qtマクロが見つかった場合、ヘッダーは &lt;code&gt;moc&lt;/code&gt; によって出力ファイル &lt;code&gt;moc_&amp;lt;base_name&amp;gt;.cpp&lt;/code&gt; にコンパイルされます。完全な出力ファイルパスについては、「&lt;a href=&quot;#output-file-location&quot;&gt;出力ファイルの場所」で&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="4d81907809743ab71d2f0c569251fe08a3d45207" translate="yes" xml:space="preserve">
          <source>If a binary target is linked transitively to a macOS &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-1-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;Headers&lt;/code&gt; directory of the framework is also treated as a usage requirement. This has the same effect as passing the framework directory as an include directory.</source>
          <target state="translated">バイナリターゲットがMacOSのに推移リンクされている場合&lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-1-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;Headers&lt;/code&gt; フレームワークのディレクトリも使用要件として扱われます。これは、フレームワークディレクトリをインクルードディレクトリとして渡すのと同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="b38c16842af76f1a34b978439304e09452f61f1f" translate="yes" xml:space="preserve">
          <source>If a download method is specified, any existing contents of the source directory may be deleted. Only the URL download method checks whether this directory is either missing or empty before initiating the download, stopping with an error if it is not empty. All other download methods silently discard any previous contents of the source directory.</source>
          <target state="translated">ダウンロード方法が指定されている場合、ソース・ディレクトリの既存のコンテンツはすべて削除される可能性があります。URL ダウンロード・メソッドのみが、ダウンロードを開始する前に、このディレクトリが見つからないか空かをチェックし、空でない場合はエラーで停止します。他のすべてのダウンロード方法は、ソース・ディレクトリの以前のコンテンツを黙って破棄します。</target>
        </trans-unit>
        <trans-unit id="bf495c6174880956522c16daa2126fbdc860de6a" translate="yes" xml:space="preserve">
          <source>If a file is specified, the version is written into it. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">ファイルを指定すると、バージョンがファイルに書き込まれます。ヘルプは、指定された場合、名前付きの&amp;lt;f&amp;gt; ileに出力されます。</target>
        </trans-unit>
        <trans-unit id="cde95a6fbde81056465c0717a39c7a9abf3c1717" translate="yes" xml:space="preserve">
          <source>If a library does not export any symbols, it must not be declared as a &lt;code&gt;SHARED&lt;/code&gt; library. For example, a Windows resource DLL or a managed C++/CLI DLL that exports no unmanaged symbols would need to be a &lt;code&gt;MODULE&lt;/code&gt; library. This is because CMake expects a &lt;code&gt;SHARED&lt;/code&gt; library to always have an associated import library on Windows.</source>
          <target state="translated">ライブラリがシンボルをエクスポートしない場合は、 &lt;code&gt;SHARED&lt;/code&gt; ライブラリとして宣言してはなりません。たとえば、アンマネージシンボルをエクスポートしないWindowsリソースDLLまたはマネージC ++ / CLI DLLは、 &lt;code&gt;MODULE&lt;/code&gt; ライブラリである必要があります。これは、CMakeが &lt;code&gt;SHARED&lt;/code&gt; ライブラリに常にWindowsに関連付けられたインポートライブラリがあることを期待しているためです。</target>
        </trans-unit>
        <trans-unit id="1c7c20d06b1ceb52bc20bce290d4a6ceed994c89" translate="yes" xml:space="preserve">
          <source>If a library search path must be provided, prefer to localize the effect where possible by using the &lt;a href=&quot;target_link_directories#command:target_link_directories&quot; id=&quot;index-0-command:target_link_directories&quot;&gt;&lt;code&gt;target_link_directories()&lt;/code&gt;&lt;/a&gt; command rather than &lt;code&gt;link_directories()&lt;/code&gt;. The target-specific command can also control how the search directories propagate to other dependent targets.</source>
          <target state="translated">ライブラリ検索パスを提供する必要がある場合は、&lt;a href=&quot;target_link_directories#command:target_link_directories&quot; id=&quot;index-0-command:target_link_directories&quot;&gt; &lt;code&gt;target_link_directories()&lt;/code&gt; &lt;/a&gt;ではなくtarget_link_directories（）コマンドを使用して、可能な場合は効果をローカライズすることをお &lt;code&gt;link_directories()&lt;/code&gt; ます。ターゲット固有のコマンドは、検索ディレクトリが他の依存ターゲットに伝播する方法も制御できます。</target>
        </trans-unit>
        <trans-unit id="61d8e546933123589d9c078b3fa2f1d940bed581" translate="yes" xml:space="preserve">
          <source>If a macro from &lt;a href=&quot;../prop_tgt/automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt; is found in a header file, &lt;code&gt;moc&lt;/code&gt; will be run on the file. The result will be put into a file named according to &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt;. If the macro is found in a C++ implementation file, the moc output will be put into a file named according to &lt;code&gt;&amp;lt;basename&amp;gt;.moc&lt;/code&gt;, following the Qt conventions. The &lt;code&gt;&amp;lt;basename&amp;gt;.moc&lt;/code&gt; must be included by the user in the C++ implementation file with a preprocessor &lt;code&gt;#include&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt; &lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt; &lt;/a&gt;からのマクロがヘッダーファイルで見つかった場合、 &lt;code&gt;moc&lt;/code&gt; がそのファイルで実行されます。結果は &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt; に従って名前が付けられたファイルに入れられます。マクロがC ++実装ファイルで見つかった場合、moc出力は、Qtの規則に従って、 &lt;code&gt;&amp;lt;basename&amp;gt;.moc&lt;/code&gt; に従って名前が付けられたファイルに書き込まれます。 &lt;code&gt;&amp;lt;basename&amp;gt;.moc&lt;/code&gt; プリプロセッサとC ++実装ファイルにユーザーが含まれていなければならない &lt;code&gt;#include&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5118a0725ca4c145abc986d741e5223705b89c8" translate="yes" xml:space="preserve">
          <source>If a module is found, the &lt;code&gt;&amp;lt;prefix&amp;gt;_MODULE_NAME&lt;/code&gt; variable will contain the name of the matching module. This variable can be used if you need to run &lt;a href=&quot;#command:pkg_get_variable&quot; id=&quot;index-1-command:pkg_get_variable&quot;&gt;&lt;code&gt;pkg_get_variable()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モジュールが見つかった場合、 &lt;code&gt;&amp;lt;prefix&amp;gt;_MODULE_NAME&lt;/code&gt; 変数には一致するモジュールの名前が含まれます。この変数は、&lt;a href=&quot;#command:pkg_get_variable&quot; id=&quot;index-1-command:pkg_get_variable&quot;&gt; &lt;code&gt;pkg_get_variable()&lt;/code&gt; &lt;/a&gt;を実行する必要がある場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="e61d89320b40aba27bcf79fccf87c4aed97f1b2b" translate="yes" xml:space="preserve">
          <source>If a module is specified instead of a file, the file with name &lt;code&gt;&amp;lt;modulename&amp;gt;.cmake&lt;/code&gt; is searched first in &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;, then in the CMake module directory. There is one exception to this: if the file which calls &lt;code&gt;include()&lt;/code&gt; is located itself in the CMake builtin module directory, then first the CMake builtin module directory is searched and &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-1-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt; afterwards. See also policy &lt;a href=&quot;../policy/cmp0017#policy:CMP0017&quot; id=&quot;index-0-policy:CMP0017&quot;&gt;&lt;code&gt;CMP0017&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイルの代わりにモジュールが指定されている場合、 &lt;code&gt;&amp;lt;modulename&amp;gt;.cmake&lt;/code&gt; という名前のファイルが最初に&lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; &lt;/a&gt;で検索され、次にCMakeモジュールディレクトリで検索されます。これには1つの例外があります&lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-1-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; &lt;/a&gt; &lt;code&gt;include()&lt;/code&gt; を呼び出すファイル自体がCMake組み込みモジュールディレクトリにある場合、最初にCMake組み込みモジュールディレクトリが検索され、その後CMAKE_MODULE_PATHが検索されます。ポリシー&lt;a href=&quot;../policy/cmp0017#policy:CMP0017&quot; id=&quot;index-0-policy:CMP0017&quot;&gt; &lt;code&gt;CMP0017&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="51ffc6354b2e588493e140bc7b0710dcba5e576b" translate="yes" xml:space="preserve">
          <source>If a module library target has this property set to true it will be built as a &lt;code&gt;CFBundle&lt;/code&gt; when built on the mac. It will have the directory structure required for a &lt;code&gt;CFBundle&lt;/code&gt; and will be suitable to be used for creating Browser Plugins or other application resources.</source>
          <target state="translated">モジュールライブラリターゲットでこのプロパティがtrueに設定されている場合、Macでビルドすると &lt;code&gt;CFBundle&lt;/code&gt; としてビルドされます。これは、 &lt;code&gt;CFBundle&lt;/code&gt; に必要なディレクトリ構造を持ち、ブラウザプラグインやその他のアプリケーションリソースの作成に使用するのに適しています。</target>
        </trans-unit>
        <trans-unit id="56a4ad6e890033baf429a7642de0b3d8f0409c6b" translate="yes" xml:space="preserve">
          <source>If a module library target has this property set to true it will be built as a CFBundle when built on the Mac. It will have the directory structure required for a CFBundle.</source>
          <target state="translated">モジュールライブラリターゲットがこのプロパティを true に設定している場合、Mac でビルドしたときに CFBundle としてビルドされます。これは CFBundle に必要なディレクトリ構造を持っています。</target>
        </trans-unit>
        <trans-unit id="6bcc9eb162a4ea86518a1d45e609ab1ab92e7156" translate="yes" xml:space="preserve">
          <source>If a non-full path value is supplied then CMake will resolve the full path of the compiler.</source>
          <target state="translated">フルパスでない値が与えられた場合、CMake はコンパイラのフルパスを解決します。</target>
        </trans-unit>
        <trans-unit id="09802ddc5835d1f8601e782f10eb13e94cff49c0" translate="yes" xml:space="preserve">
          <source>If a preprocessor &lt;code&gt;#include&lt;/code&gt; directive is found which matches &lt;code&gt;&amp;lt;path&amp;gt;ui_&amp;lt;basename&amp;gt;.h&lt;/code&gt;, and a &lt;code&gt;&amp;lt;basename&amp;gt;.ui&lt;/code&gt; file exists, then &lt;code&gt;uic&lt;/code&gt; will be executed to generate the appropriate file. The &lt;code&gt;&amp;lt;basename&amp;gt;.ui&lt;/code&gt; file is searched for in the following places</source>
          <target state="translated">&lt;code&gt;&amp;lt;path&amp;gt;ui_&amp;lt;basename&amp;gt;.h&lt;/code&gt; に一致するプリプロセッサ &lt;code&gt;#include&lt;/code&gt; ディレクティブが見つかり、 &lt;code&gt;&amp;lt;basename&amp;gt;.ui&lt;/code&gt; ファイルが存在する場合、適切なファイルを生成するために &lt;code&gt;uic&lt;/code&gt; が実行されます。 &lt;code&gt;&amp;lt;basename&amp;gt;.ui&lt;/code&gt; ファイルは次の場所に検索され</target>
        </trans-unit>
        <trans-unit id="d6da461134eb622c066a37f8f41e6aa35023f548" translate="yes" xml:space="preserve">
          <source>If a project arranges for package registry entries to exist, such as:</source>
          <target state="translated">プロジェクトがパッケージのレジストリエントリが存在するように配置されている場合。</target>
        </trans-unit>
        <trans-unit id="69112ed1ca4287eda16218232add0593f5fa3361" translate="yes" xml:space="preserve">
          <source>If a project has presets available, either through &lt;code&gt;CMakePresets.json&lt;/code&gt; or &lt;code&gt;CMakeUserPresets.json&lt;/code&gt;, the list of presets will appear in a drop-down menu in &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-9-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; between the source directory and the binary directory. Choosing a preset sets the binary directory, generator, environment variables, and cache variables, but all of these options can be overridden after a preset is selected.</source>
          <target state="translated">プロジェクトに &lt;code&gt;CMakePresets.json&lt;/code&gt; または &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; のいずれかを介して使用可能なプリセットがある場合、プリセットのリストは、ソースディレクトリとバイナリディレクトリの間の&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-9-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; の&lt;/a&gt;ドロップダウンメニューに表示されます。プリセットを選択すると、バイナリディレクトリ、ジェネレータ、環境変数、およびキャッシュ変数が設定されますが、プリセットを選択すると、これらのオプションはすべて上書きできます。</target>
        </trans-unit>
        <trans-unit id="65be43e974227fe9b147c8a92b603c8470a2b7e0" translate="yes" xml:space="preserve">
          <source>If a relative path is given it is interpreted relative to the value of the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable. The prefix can be relocated at install time using the &lt;code&gt;DESTDIR&lt;/code&gt; mechanism explained in the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable documentation.</source>
          <target state="translated">相対パスが指定されている場合、&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;変数の値に関連して解釈されます。プレフィックスは、&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;変数のドキュメントで説明されている &lt;code&gt;DESTDIR&lt;/code&gt; メカニズムを使用して、インストール時に再配置できます。</target>
        </trans-unit>
        <trans-unit id="e47823b6d62c96e9277c973d24a085c76125200d" translate="yes" xml:space="preserve">
          <source>If a required dependency is not found by &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;, the cache is populated with an entry which contains a &lt;code&gt;NOTFOUND&lt;/code&gt; value. This value can be replaced by specifying it on the command line, or in the &lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt;&lt;code&gt;ccmake(1)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; tool. See the &lt;a href=&quot;../user-interaction/index#guide:User%20Interaction%20Guide&quot; id=&quot;index-0-guide:User Interaction Guide&quot;&gt;&lt;code&gt;User Interaction Guide&lt;/code&gt;&lt;/a&gt; for more about setting cache entries.</source>
          <target state="translated">必要な依存関係が&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;によって見つからない場合、キャッシュには &lt;code&gt;NOTFOUND&lt;/code&gt; 値を含むエントリが入力されます。この値は、コマンドラインで指定するか、&lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt; &lt;code&gt;ccmake(1)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt;ツールで指定することで置き換えることができます。キャッシュエントリの設定の詳細については、&lt;a href=&quot;../user-interaction/index#guide:User%20Interaction%20Guide&quot; id=&quot;index-0-guide:User Interaction Guide&quot;&gt; &lt;code&gt;User Interaction Guide&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4c8196579aa746a6923b61258b6c04c94e465626" translate="yes" xml:space="preserve">
          <source>If a selected architecture is available for both: device SDK and simulator SDK it will be built for the SDK selected by &lt;a href=&quot;../variable/cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt;&lt;/a&gt; and removed from the corresponding SDK.</source>
          <target state="translated">選択したアーキテクチャがデバイスSDKとシミュレータSDKの両方で使用できる場合、&lt;a href=&quot;../variable/cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt; &lt;/a&gt;によって選択されたSDK用にビルドされ、対応するSDKから削除されます。</target>
        </trans-unit>
        <trans-unit id="1ce4f4bc21be48080994173da37cb6c23cdc10a3" translate="yes" xml:space="preserve">
          <source>If a sequential execution of multiple commands is required, use multiple &lt;a href=&quot;#command:execute_process&quot; id=&quot;index-0-command:execute_process&quot;&gt;&lt;code&gt;execute_process()&lt;/code&gt;&lt;/a&gt; calls with a single &lt;code&gt;COMMAND&lt;/code&gt; argument.</source>
          <target state="translated">複数のコマンドの順次実行が必要な場合は、単一の &lt;code&gt;COMMAND&lt;/code&gt; 引数を指定して複数の&lt;a href=&quot;#command:execute_process&quot; id=&quot;index-0-command:execute_process&quot;&gt; &lt;code&gt;execute_process()&lt;/code&gt; &lt;/a&gt;呼び出しを使用します。</target>
        </trans-unit>
        <trans-unit id="547e42797e310852adfe811b5914e22366c828a1" translate="yes" xml:space="preserve">
          <source>If a single target needs to produce more than one jar from its java source code, to prevent the accumulation of duplicate class files in subsequent jars, set/reset &lt;code&gt;CMAKE_JAR_CLASSES_PREFIX&lt;/code&gt; prior to calling the &lt;code&gt;add_jar()&lt;/code&gt; function:</source>
          <target state="translated">単一のターゲットがそのJavaソースコードから複数のjarを生成する必要がある場合、後続のjarに重複するクラスファイルが蓄積するのを防ぐために、 &lt;code&gt;add_jar()&lt;/code&gt; 関数を呼び出す前に &lt;code&gt;CMAKE_JAR_CLASSES_PREFIX&lt;/code&gt; を設定/リセットします。</target>
        </trans-unit>
        <trans-unit id="c641393cb0eece48d4dd44486eeb44abf009bad3" translate="yes" xml:space="preserve">
          <source>If a source file matches multiple groups, the &lt;em&gt;last&lt;/em&gt; group that explicitly lists the file with &lt;code&gt;FILES&lt;/code&gt; will be favored, if any. If no group explicitly lists the file, the &lt;em&gt;last&lt;/em&gt; group whose regular expression matches the file will be favored.</source>
          <target state="translated">ソースファイルが複数のグループと一致する場合、 &lt;code&gt;FILES&lt;/code&gt; を使用してファイルを明示的にリストする&lt;em&gt;最後の&lt;/em&gt;グループが優先されます。ファイルを明示的にリストするグループがない場合、正規表現がファイルと一致する&lt;em&gt;最後の&lt;/em&gt;グループが優先されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="536c556452212ea95ed6c58cfeaa6b27e5dedb31" translate="yes" xml:space="preserve">
          <source>If a static or object library has dependency optimization enabled, it first discards all dependencies. Then, it looks through all of the direct and indirect dependencies that it initially had, and adds them back if they meet any of the following criteria:</source>
          <target state="translated">スタティック・ライブラリまたはオブジェクト・ライブラリで依存関係の最適化が有効になっている場合、最初にすべての依存関係を破棄します。次に、最初に持っていた直接依存関係と間接依存関係をすべて調べ、以下の基準のいずれかを満たしていれば、それらを追加します。</target>
        </trans-unit>
        <trans-unit id="1ff64afb256005e648317888f49a9ea8bedf5a29" translate="yes" xml:space="preserve">
          <source>If a step target is created for an independent step by the &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;STEP_TARGETS&lt;/code&gt; option or by the &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-3-command:externalproject_add_steptargets&quot;&gt;&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt;&lt;/a&gt; function, it will not depend on the external targets, but may depend on targets for other steps.</source>
          <target state="translated">独立したステップのステップターゲットが&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;STEP_TARGETS&lt;/code&gt; オプションまたは&lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-3-command:externalproject_add_steptargets&quot;&gt; &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; &lt;/a&gt;関数によって作成された場合、外部ターゲットには依存しませんが、他のステップのターゲットに依存する場合があります。</target>
        </trans-unit>
        <trans-unit id="54c2368249cdcf215901649de3840031aae28a1e" translate="yes" xml:space="preserve">
          <source>If a supported thread library was found.</source>
          <target state="translated">サポートされているスレッドライブラリが見つかった場合。</target>
        </trans-unit>
        <trans-unit id="94c4041072aa12a8170210a7c2481c4a26139cbb" translate="yes" xml:space="preserve">
          <source>If a target has &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; set to true, it may still be listed in an &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command, but the user is responsible for ensuring that the target&amp;rsquo;s build artifacts are not missing or outdated when an install is performed.</source>
          <target state="translated">ターゲットの &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; がtrueに設定されている場合でも、&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt;コマンドにリストされる可能性がありますが、インストールの実行時にターゲットのビルドアーティファクトが欠落したり古くなったりしないようにするのはユーザーの責任です。</target>
        </trans-unit>
        <trans-unit id="268cbe75fdcd8fdd0afae3aae3c9376547806fc0" translate="yes" xml:space="preserve">
          <source>If a test in the set of tests to be executed requires a particular fixture, that fixture&amp;rsquo;s setup and cleanup tests would normally be added to the test set automatically. This option prevents adding setup or cleanup tests for fixtures matching the &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt;. Note that all other fixture behavior is retained, including test dependencies and skipping tests that have fixture setup tests that fail.</source>
          <target state="translated">実行するテストセットのテストに特定のフィクスチャが必要な場合、そのフィクスチャのセットアップテストとクリーンアップテストは通常​​、テストセットに自動的に追加されます。このオプションは、 &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt; に一致するフィクスチャのセットアップまたはクリーンアップテストの追加を防ぎます。テストの依存関係や、フィクスチャセットアップテストが失敗したテストのスキップなど、他のすべてのフィクスチャの動作は保持されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6ef878935fc088712608718479f10bca7a3fe5b5" translate="yes" xml:space="preserve">
          <source>If a test with the &lt;a href=&quot;fixtures_setup#prop_test:FIXTURES_SETUP&quot; id=&quot;index-0-prop_test:FIXTURES_SETUP&quot;&gt;&lt;code&gt;FIXTURES_SETUP&lt;/code&gt;&lt;/a&gt; property set is &lt;code&gt;DISABLED&lt;/code&gt;, the fixture behavior will be as though that setup test was passing and any test case requiring that fixture will still run.</source>
          <target state="translated">&lt;a href=&quot;fixtures_setup#prop_test:FIXTURES_SETUP&quot; id=&quot;index-0-prop_test:FIXTURES_SETUP&quot;&gt; &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; &lt;/a&gt;プロパティが設定されたテストが &lt;code&gt;DISABLED&lt;/code&gt; の場合、フィクスチャの動作はそのセットアップテストに合格したかのようになり、そのフィクスチャを必要とするテストケースは引き続き実行されます。</target>
        </trans-unit>
        <trans-unit id="e25c4d39c99f143a71529fe04e60d393c28c3dc5" translate="yes" xml:space="preserve">
          <source>If a user passes &lt;code&gt;-DMY_CUSTOM_VARIABLE=SomeValue&lt;/code&gt; to CMake then this setting will be made visible to the toolchain file both for the main project and for test projects generated by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command source file signature.</source>
          <target state="translated">ユーザーが &lt;code&gt;-DMY_CUSTOM_VARIABLE=SomeValue&lt;/code&gt; をCMakeに渡すと、この設定は、メインプロジェクトと、&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;コマンドのソースファイルシグネチャによって生成されたテストプロジェクトの両方のツールチェーンファイルに表示されます。</target>
        </trans-unit>
        <trans-unit id="a842b761fc2cc46d1bf8004e60de2d41c1f8aef7" translate="yes" xml:space="preserve">
          <source>If all of these parameters were not sufficient to find the right MPI implementation, a user may disable the entire autodetection process by specifying both a list of libraries in &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_LIBRARIES&lt;/code&gt; and a list of include directories in &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_ADDITIONAL_INCLUDE_DIRS&lt;/code&gt;. Any other variable may be set in addition to these two. The module will then validate the MPI settings and store the settings in the cache.</source>
          <target state="translated">これらのパラメータのすべてが右MPIの実装を見つけることが十分ではなかった場合、ユーザーは、内のライブラリのリストの両方を指定することで、全体の自動検出プロセスを無効にすることが &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_LIBRARIES&lt;/code&gt; とのリストは、内のディレクトリが含ま &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_ADDITIONAL_INCLUDE_DIRS&lt;/code&gt; 。これら2つに加えて、他の変数を設定できます。次に、モジュールはMPI設定を検証し、設定をキャッシュに保存します。</target>
        </trans-unit>
        <trans-unit id="9f1067c13a7dcb4c490cdf987b03d674713e663a" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command is used without the &lt;code&gt;COMPONENT&lt;/code&gt; argument, these files will be grouped into a default component. The name of this default install component will be taken from this variable. It defaults to &lt;code&gt;Unspecified&lt;/code&gt;.</source>
          <target state="translated">場合は&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;コマンドをせずに使用されている &lt;code&gt;COMPONENT&lt;/code&gt; の引数は、これらのファイルは、デフォルトのコンポーネントにグループ化されます。このデフォルトのインストールコンポーネントの名前は、この変数から取得されます。デフォルトは &lt;code&gt;Unspecified&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3770be889285772cbcbfe827735f8497e101f896" translate="yes" xml:space="preserve">
          <source>If an IDE project generator is used, such as &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; or one of the Visual Studio generators, and the IDE understands the project format used, the IDE should read the project file and build it the same way it would otherwise.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;やVisualStudioジェネレーターの1つなどのIDEプロジェクトジェネレーターが使用されており、IDEが使用されているプロジェクト形式を理解している場合、IDEはプロジェクトファイルを読み取り、それ以外の場合と同じ方法でビルドする必要があります。</target>
        </trans-unit>
        <trans-unit id="87a6f86c5573059989c9d5d97e79a6d4a1c57901" translate="yes" xml:space="preserve">
          <source>If an absolute path (with a leading slash or drive letter) is given it is used verbatim.</source>
          <target state="translated">絶対パス (先頭にスラッシュまたはドライブレターを含む)が与えられている場合は、そのまま使用されます。</target>
        </trans-unit>
        <trans-unit id="0e4127e7e02b19c3ee7c444efc55bb5a66de7c64" translate="yes" xml:space="preserve">
          <source>If an additional clean file is specific to a single target only, then the &lt;a href=&quot;../prop_tgt/additional_clean_files#prop_tgt:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_tgt:ADDITIONAL_CLEAN_FILES&quot;&gt;&lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt;&lt;/a&gt; target property would usually be a better choice than this directory property.</source>
          <target state="translated">追加のクリーンファイルが単一のターゲットのみに固有である場合は、通常、&lt;a href=&quot;../prop_tgt/additional_clean_files#prop_tgt:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_tgt:ADDITIONAL_CLEAN_FILES&quot;&gt; &lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt; &lt;/a&gt;ターゲットプロパティがこのディレクトリプロパティよりも適しています。</target>
        </trans-unit>
        <trans-unit id="686deca2ff89a7d4cf50a69d2978f830f599e5d6" translate="yes" xml:space="preserve">
          <source>If an imported library has the &lt;a href=&quot;../prop_tgt/imported_no_soname#prop_tgt:IMPORTED_NO_SONAME&quot; id=&quot;index-0-prop_tgt:IMPORTED_NO_SONAME&quot;&gt;&lt;code&gt;IMPORTED_NO_SONAME&lt;/code&gt;&lt;/a&gt; target property set, CMake may ask the linker to search for the library instead of using the full path (e.g. &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; becomes &lt;code&gt;-lfoo&lt;/code&gt;).</source>
          <target state="translated">インポートされたライブラリに&lt;a href=&quot;../prop_tgt/imported_no_soname#prop_tgt:IMPORTED_NO_SONAME&quot; id=&quot;index-0-prop_tgt:IMPORTED_NO_SONAME&quot;&gt; &lt;code&gt;IMPORTED_NO_SONAME&lt;/code&gt; &lt;/a&gt;ターゲットプロパティが設定されている場合、CMakeはリンカーにフルパスを使用する代わりにライブラリを検索するように要求する場合があります（例： &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; は &lt;code&gt;-lfoo&lt;/code&gt; になります）。</target>
        </trans-unit>
        <trans-unit id="63071814530f0cecd16e2a7b5266265a6759857e" translate="yes" xml:space="preserve">
          <source>If an interface library has source files (i.e. the &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt;&lt;code&gt;SOURCES&lt;/code&gt;&lt;/a&gt; target property is set), it will appear in the generated buildsystem as a build target much like a target defined by the &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command. It does not compile any sources, but does contain build rules for custom commands created by the &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">インターフェイスライブラリにソースファイルがある場合（つまり、&lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt; &lt;code&gt;SOURCES&lt;/code&gt; &lt;/a&gt;ターゲットプロパティが設定されている&lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;、add_custom_target（）コマンドで定義されたターゲットと同様に、生成されたビルドシステムにビルドターゲットとして表示されます。ソースはコンパイルされませんが、&lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt;コマンドによって作成されたカスタムコマンドのビルドルールが含まれています。</target>
        </trans-unit>
        <trans-unit id="f340b5d202dc558a099da87acbeddfd7ee2cf4f1" translate="yes" xml:space="preserve">
          <source>If another project wishes to use &lt;code&gt;Foo&lt;/code&gt; it need only to locate the &lt;code&gt;FooConfig.cmake&lt;/code&gt; file and load it to get all the information it needs about package content locations. Since the package configuration file is provided by the package installation it already knows all the file locations.</source>
          <target state="translated">別のプロジェクトが &lt;code&gt;Foo&lt;/code&gt; を使用したい場合は、 &lt;code&gt;FooConfig.cmake&lt;/code&gt; ファイルを見つけてロードするだけで、パッケージコンテンツの場所について必要なすべての情報を取得できます。パッケージ構成ファイルはパッケージのインストールによって提供されるため、すべてのファイルの場所をすでに知っています。</target>
        </trans-unit>
        <trans-unit id="3bb3450146ea57e19ac69da16371933be619c4c5" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;RPATH&lt;/code&gt;/&lt;code&gt;RUNPATH&lt;/code&gt; entries passed to the linker contain the &lt;a href=&quot;#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-1-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt;, the matching path fragments are replaced with the &lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">いずれの場合 &lt;code&gt;RPATH&lt;/code&gt; / &lt;code&gt;RUNPATH&lt;/code&gt; のリンカに渡されたエントリが含まれている&lt;a href=&quot;#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-1-variable:CMAKE_STAGING_PREFIX&quot;&gt; &lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt; を&lt;/a&gt;、一致するパスの断片が置き換えられます&lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="551ced0b3d41b44343e965393c2779d700e688c8" translate="yes" xml:space="preserve">
          <source>If any dependency is an &lt;code&gt;OUTPUT&lt;/code&gt; of another custom command in the same directory (&lt;code&gt;CMakeLists.txt&lt;/code&gt; file), CMake automatically brings the other custom command into the target in which this command is built. A target-level dependency is added if any dependency is listed as &lt;code&gt;BYPRODUCTS&lt;/code&gt; of a target or any of its build events in the same directory to ensure the byproducts will be available.</source>
          <target state="translated">依存関係が同じディレクトリ（ &lt;code&gt;CMakeLists.txt&lt;/code&gt; ファイル）内の別のカスタムコマンドの &lt;code&gt;OUTPUT&lt;/code&gt; である場合、CMakeは他のカスタムコマンドをこのコマンドがビルドされているターゲットに自動的に取り込みます。依存関係がターゲットの &lt;code&gt;BYPRODUCTS&lt;/code&gt; または同じディレクトリ内のそのビルドイベントのいずれかとしてリストされている場合は、ターゲットレベルの依存関係が追加され、副産物が確実に利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="bc32bb81e8e11188b3e232ec2557ca4bbeaa0b4f" translate="yes" xml:space="preserve">
          <source>If any macros should be provided by the &lt;code&gt;MathFunctions&lt;/code&gt; package, they should be in a separate file which is installed to the same location as the &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; file, and included from there.</source>
          <target state="translated">&lt;code&gt;MathFunctions&lt;/code&gt; パッケージでマクロを提供する必要がある場合は、 &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; ファイルと同じ場所にインストールされ、そこから含まれる別のファイルに含める必要があります。</target>
        </trans-unit>
        <trans-unit id="9aa302667eeacecadece2926953fee3342f3d2a5" translate="yes" xml:space="preserve">
          <source>If any of a fixture&amp;rsquo;s setup tests fail, none of the tests listing that fixture in its &lt;a href=&quot;fixtures_required#prop_test:FIXTURES_REQUIRED&quot; id=&quot;index-1-prop_test:FIXTURES_REQUIRED&quot;&gt;&lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt;&lt;/a&gt; property will be run. Cleanup tests will, however, still be executed.</source>
          <target state="translated">フィクスチャのセットアップテストのいずれかが失敗した場合、&lt;a href=&quot;fixtures_required#prop_test:FIXTURES_REQUIRED&quot; id=&quot;index-1-prop_test:FIXTURES_REQUIRED&quot;&gt; &lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt; &lt;/a&gt;プロパティにそのフィクスチャをリストするテストは実行されません。ただし、クリーンアップテストは実行されます。</target>
        </trans-unit>
        <trans-unit id="31be31c1956c6ce625bb108b4d063dc37c13fc5c" translate="yes" xml:space="preserve">
          <source>If any of the above &lt;code&gt;..._DIR&lt;/code&gt; options are not specified, their defaults are computed as follows. If the &lt;code&gt;PREFIX&lt;/code&gt; option is given or the &lt;code&gt;EP_PREFIX&lt;/code&gt; directory property is set, then an external project is built and installed under the specified prefix:</source>
          <target state="translated">上記の &lt;code&gt;..._DIR&lt;/code&gt; オプションのいずれかが指定されていない場合、それらのデフォルトは次のように計算されます。場合は &lt;code&gt;PREFIX&lt;/code&gt; のオプションが与えられているか &lt;code&gt;EP_PREFIX&lt;/code&gt; のディレクトリプロパティが設定され、その後、外部のプロジェクトが構築され、指定された接頭辞の下にインストールされています：</target>
        </trans-unit>
        <trans-unit id="ce0ab55359c26cf33d083e8b56a394029f52de2f" translate="yes" xml:space="preserve">
          <source>If any of the extracted files changes, then the &lt;code&gt;moc&lt;/code&gt; file for the source file gets rebuilt even when the source file itself doesn&amp;rsquo;t change.</source>
          <target state="translated">抽出されたファイルのいずれかが変更されると、ソースファイル自体が変更されていない場合でも、ソースファイルの &lt;code&gt;moc&lt;/code&gt; ファイルが再構築されます。</target>
        </trans-unit>
        <trans-unit id="21f56c9f2c1213410ff0686ab1ca0a54a2adec77" translate="yes" xml:space="preserve">
          <source>If any of the extracted files is &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; or if it is not in the target&amp;rsquo;s sources, then it might be necessary to add it to the &lt;code&gt;_autogen&lt;/code&gt; target dependencies. See &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt; for reference.</source>
          <target state="translated">抽出されたファイルのいずれかが&lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; の&lt;/a&gt;場合、またはターゲットのソースにない場合は、 &lt;code&gt;_autogen&lt;/code&gt; ターゲットの依存関係に追加する必要がある場合があります。参照&lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; を&lt;/a&gt;参考のために。</target>
        </trans-unit>
        <trans-unit id="48ace6fa6d0fc10df03ce17a8578176351f5c361" translate="yes" xml:space="preserve">
          <source>If called from within a find module loaded by &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt;, search prefixes unique to the current package being found. Specifically look in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable. The package root variables are maintained as a stack so if called from nested find modules, root paths from the parent&amp;rsquo;s find module will be searched after paths from the current module, i.e. &lt;code&gt;&amp;lt;CurrentPackage&amp;gt;_ROOT&lt;/code&gt;, &lt;code&gt;ENV{&amp;lt;CurrentPackage&amp;gt;_ROOT}&lt;/code&gt;, &lt;code&gt;&amp;lt;ParentPackage&amp;gt;_ROOT&lt;/code&gt;, &lt;code&gt;ENV{&amp;lt;ParentPackage&amp;gt;_ROOT}&lt;/code&gt;, etc. This can be skipped if &lt;code&gt;NO_PACKAGE_ROOT_PATH&lt;/code&gt; is passed. See policy &lt;a href=&quot;../policy/cmp0074#policy:CMP0074&quot; id=&quot;index-0-policy:CMP0074&quot;&gt;&lt;code&gt;CMP0074&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt;によってロードされた検索モジュール内から呼び出された場合、検索されている現在のパッケージに固有の検索プレフィックス。具体的には、 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake変数と &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 環境変数を調べます。パッケージのルート変数はスタックとして維持されるため、ネストされた検索モジュールから呼び出された場合、親の検索モジュールからのルートパスは、現在のモジュールからのパスの後に検索されます。つまり、 &lt;code&gt;&amp;lt;CurrentPackage&amp;gt;_ROOT&lt;/code&gt; 、 &lt;code&gt;ENV{&amp;lt;CurrentPackage&amp;gt;_ROOT}&lt;/code&gt; 、 &lt;code&gt;&amp;lt;ParentPackage&amp;gt;_ROOT&lt;/code&gt; 、 &lt;code&gt;ENV{&amp;lt;ParentPackage&amp;gt;_ROOT}&lt;/code&gt; など &lt;code&gt;NO_PACKAGE_ROOT_PATH&lt;/code&gt; が渡された場合はスキップできます。ポリシー&lt;a href=&quot;../policy/cmp0074#policy:CMP0074&quot; id=&quot;index-0-policy:CMP0074&quot;&gt; &lt;code&gt;CMP0074&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ace4bf92f50f5027cdb18f88aa1000fcd48f9168" translate="yes" xml:space="preserve">
          <source>If called from within a find module or any other script loaded by a call to &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt;, search prefixes unique to the current package being found. Specifically, look in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable. The package root variables are maintained as a stack, so if called from nested find modules or config packages, root paths from the parent&amp;rsquo;s find module or config package will be searched after paths from the current module or package. In other words, the search order would be &lt;code&gt;&amp;lt;CurrentPackage&amp;gt;_ROOT&lt;/code&gt;, &lt;code&gt;ENV{&amp;lt;CurrentPackage&amp;gt;_ROOT}&lt;/code&gt;, &lt;code&gt;&amp;lt;ParentPackage&amp;gt;_ROOT&lt;/code&gt;, &lt;code&gt;ENV{&amp;lt;ParentPackage&amp;gt;_ROOT}&lt;/code&gt;, etc. This can be skipped if &lt;code&gt;NO_PACKAGE_ROOT_PATH&lt;/code&gt; is passed or by setting the &lt;a href=&quot;../variable/cmake_find_use_package_root_path#variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_USE_PACKAGE_ROOT_PATH&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;FALSE&lt;/code&gt;. See policy &lt;a href=&quot;../policy/cmp0074#policy:CMP0074&quot; id=&quot;index-0-policy:CMP0074&quot;&gt;&lt;code&gt;CMP0074&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; の&lt;/a&gt;呼び出しによってロードされたfindモジュールまたはその他のスクリプト内から呼び出された場合、検出されている現在のパッケージに固有の検索プレフィックス。具体的には、 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake変数と &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 環境変数を調べます。パッケージのルート変数はスタックとして維持されるため、ネストされた検索モジュールまたは構成パッケージから呼び出された場合、親の検索モジュールまたは構成パッケージからのルートパスは、現在のモジュールまたはパッケージからのパスの後に検索されます。つまり、検索順序は &lt;code&gt;&amp;lt;CurrentPackage&amp;gt;_ROOT&lt;/code&gt; 、 &lt;code&gt;ENV{&amp;lt;CurrentPackage&amp;gt;_ROOT}&lt;/code&gt; 、 &lt;code&gt;&amp;lt;ParentPackage&amp;gt;_ROOT&lt;/code&gt; 、 &lt;code&gt;ENV{&amp;lt;ParentPackage&amp;gt;_ROOT}&lt;/code&gt; 、など。これは、 &lt;code&gt;NO_PACKAGE_ROOT_PATH&lt;/code&gt; が渡された &lt;code&gt;FALSE&lt;/code&gt; 、または&lt;a href=&quot;../variable/cmake_find_use_package_root_path#variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_USE_PACKAGE_ROOT_PATH&lt;/code&gt; &lt;/a&gt;をFALSEに設定することでスキップできます。ポリシー&lt;a href=&quot;../policy/cmp0074#policy:CMP0074&quot; id=&quot;index-0-policy:CMP0074&quot;&gt; &lt;code&gt;CMP0074&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b31c93a143d375c1c52be3e439969375ba18588c" translate="yes" xml:space="preserve">
          <source>If calling both &lt;code&gt;find_package(PythonInterp)&lt;/code&gt; and &lt;code&gt;find_package(PythonLibs)&lt;/code&gt;, call &lt;code&gt;find_package(PythonInterp)&lt;/code&gt; first to get the currently active Python version by default with a consistent version of PYTHON_LIBRARIES.</source>
          <target state="translated">両方を呼び出す場合 &lt;code&gt;find_package(PythonInterp)&lt;/code&gt; と &lt;code&gt;find_package(PythonLibs)&lt;/code&gt; を、コール &lt;code&gt;find_package(PythonInterp)&lt;/code&gt; 最初PYTHON_LIBRARIESの一貫性のあるバージョンではデフォルトで現在アクティブなPythonのバージョンを取得します。</target>
        </trans-unit>
        <trans-unit id="fab332da51b5bc3f9f294a4e32e446bb209cb3e7" translate="yes" xml:space="preserve">
          <source>If compiling with MSVC, this variable can be set to &lt;code&gt;MT&lt;/code&gt; or &lt;code&gt;MD&lt;/code&gt; (the default) to enable searching a GTest build tree</source>
          <target state="translated">MSVCでコンパイルする場合、この変数を &lt;code&gt;MT&lt;/code&gt; または &lt;code&gt;MD&lt;/code&gt; （デフォルト）に設定して、GTestビルドツリーの検索を有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="77d41c846ee25d932a4b3832a4b3eb6ada1c88af" translate="yes" xml:space="preserve">
          <source>If component &lt;code&gt;Development&lt;/code&gt; is specified, it implies sub-components &lt;code&gt;Development.Module&lt;/code&gt; and &lt;code&gt;Development.Embed&lt;/code&gt;.</source>
          <target state="translated">コンポーネント &lt;code&gt;Development&lt;/code&gt; が指定されている場合、それはサブコンポーネント &lt;code&gt;Development.Module&lt;/code&gt; および &lt;code&gt;Development.Embed&lt;/code&gt; を意味します。</target>
        </trans-unit>
        <trans-unit id="dbca474ee16576ce231953be33a7edeedf3a1746" translate="yes" xml:space="preserve">
          <source>If components &lt;code&gt;Interpreter&lt;/code&gt; and &lt;code&gt;Development&lt;/code&gt; (or one of its sub-components) are both specified, this module search only for interpreter with same platform architecture as the one defined by &lt;code&gt;CMake&lt;/code&gt; configuration. This constraint does not apply if only &lt;code&gt;Interpreter&lt;/code&gt; component is specified.</source>
          <target state="translated">コンポーネント &lt;code&gt;Interpreter&lt;/code&gt; と &lt;code&gt;Development&lt;/code&gt; （またはそのサブコンポーネントの1つ）の両方が指定されている場合、このモジュールは、 &lt;code&gt;CMake&lt;/code&gt; 構成で定義されたものと同じプラットフォームアーキテクチャーを持つインタープリターのみを検索します。 &lt;code&gt;Interpreter&lt;/code&gt; コンポーネントのみが指定されている場合、この制約は適用されません。</target>
        </trans-unit>
        <trans-unit id="f9c9240327accea955bd9cd5dbf01f37a734eb44" translate="yes" xml:space="preserve">
          <source>If components &lt;code&gt;Interpreter&lt;/code&gt; and &lt;code&gt;Development&lt;/code&gt; are both specified, this module search only for interpreter with same platform architecture as the one defined by &lt;code&gt;CMake&lt;/code&gt; configuration. This contraint does not apply if only &lt;code&gt;Interpreter&lt;/code&gt; component is specified.</source>
          <target state="translated">コンポーネント &lt;code&gt;Interpreter&lt;/code&gt; と &lt;code&gt;Development&lt;/code&gt; の両方が指定されている場合、このモジュールは、 &lt;code&gt;CMake&lt;/code&gt; 構成で定義されたものと同じプラットフォームアーキテクチャを持つインタープリターのみを検索します。 &lt;code&gt;Interpreter&lt;/code&gt; コンポーネントのみが指定されている場合、この制約は適用されません。</target>
        </trans-unit>
        <trans-unit id="23f33bf9f5310a8b358bb121e66d9ab06b833722" translate="yes" xml:space="preserve">
          <source>If enabled, generates a &lt;code&gt;compile_commands.json&lt;/code&gt; file containing the exact compiler calls for all translation units of the project in machine-readable form. The format of the JSON file looks like:</source>
          <target state="translated">有効にすると、プロジェクトのすべての翻訳単位の正確なコンパイラー呼び出しを含む &lt;code&gt;compile_commands.json&lt;/code&gt; ファイルが機械可読形式で生成されます。JSONファイルの形式は次のようになります。</target>
        </trans-unit>
        <trans-unit id="40365f751e960380e567b1d5706111db75c88a28" translate="yes" xml:space="preserve">
          <source>If enabled, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator will generate only a single Xcode project file for the topmost &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command instead of generating one for every &lt;code&gt;project()&lt;/code&gt; command.</source>
          <target state="translated">有効にした場合、&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; の&lt;/a&gt;発電機は、最上位のための唯一の単一のXcodeプロジェクトファイルが生成されます&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;の代わりに、すべてのための1を生成するコマンド &lt;code&gt;project()&lt;/code&gt; コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="fb2c75d71e08090054aaa90c83b9d8ee337c6ac0" translate="yes" xml:space="preserve">
          <source>If enabled, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator will generate schema files. These are useful to invoke analyze, archive, build-for-testing and test actions from the command line.</source>
          <target state="translated">有効にすると、&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;ジェネレーターはスキーマファイルを生成します。これらは、コマンドラインから分析、アーカイブ、テスト用ビルド、およびテストアクションを呼び出すのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="867050304a7675288eaf8963cc56214d9f2847a0" translate="yes" xml:space="preserve">
          <source>If enabled, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator will generate only a single Xcode project file for the topmost &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command instead of generating one for every &lt;code&gt;project()&lt;/code&gt; command.</source>
          <target state="translated">有効にした場合、&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; の&lt;/a&gt;発電機は、最上位のための唯一の単一のXcodeプロジェクトファイルが生成されます&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;の代わりに、すべてのための1を生成するコマンド &lt;code&gt;project()&lt;/code&gt; コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="e9a4365232a4a7c505cff30323b768170bacd0a8" translate="yes" xml:space="preserve">
          <source>If enabled, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator will generate schema files. These are useful to invoke analyze, archive, build-for-testing and test actions from the command line.</source>
          <target state="translated">有効にすると、&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt;ジェネレーターはスキーマファイルを生成します。これらは、コマンドラインから分析、アーカイブ、テスト用ビルド、およびテストアクションを呼び出すのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="184b891eafb7658e9eb08bb9aaa68720d472cdf6" translate="yes" xml:space="preserve">
          <source>If enabled, the main build&amp;rsquo;s default ALL target will not depend on the test step. This can be a useful way of ensuring the test step is defined but only gets invoked when manually requested.</source>
          <target state="translated">有効にした場合、メインビルドのデフォルトのALLターゲットはテストステップに依存しません。これは、テストステップが定義されていることを確認するのに便利な方法ですが、手動で要求された場合にのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fe34f0138ab67bac2c5b9512463a9e0d22ab71c0" translate="yes" xml:space="preserve">
          <source>If enabled, the main build&amp;rsquo;s default ALL target will not depend on the test step. This can be a useful way of ensuring the test step is defined but only gets invoked when manually requested. This may cause a step target to be created automatically for either the &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;build&lt;/code&gt; step. See policy &lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-1-policy:CMP0114&quot;&gt;&lt;code&gt;CMP0114&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有効にすると、メインビルドのデフォルトのALLターゲットはテストステップに依存しません。これは、テストステップが定義されていることを確認するための便利な方法ですが、手動で要求された場合にのみ呼び出されます。これにより、 &lt;code&gt;install&lt;/code&gt; ステップまたは &lt;code&gt;build&lt;/code&gt; ステップのいずれかでステップターゲットが自動的に作成される場合があります。ポリシー&lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-1-policy:CMP0114&quot;&gt; &lt;code&gt;CMP0114&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="34f61f4d033b49a768ae71cfe043ec99e358b69f" translate="yes" xml:space="preserve">
          <source>If enabled, this gives the custom step direct access to the terminal if possible.</source>
          <target state="translated">これを有効にすると、可能であれば、カスタムステップがターミナルに直接アクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="26201c8e30d3cbdebd02af3699dc887019c7afac" translate="yes" xml:space="preserve">
          <source>If enabling &lt;code&gt;ASM&lt;/code&gt;, enable it last so that CMake can check whether compilers for other languages like &lt;code&gt;C&lt;/code&gt; work for assembly too.</source>
          <target state="translated">有効にする場合は &lt;code&gt;ASM&lt;/code&gt; を、CMakeのは、のような他の言語用のコンパイラかどうかを確認することができ、最後ので、それを可能にする &lt;code&gt;C&lt;/code&gt; の仕事アセンブリすぎのために。</target>
        </trans-unit>
        <trans-unit id="7abbffa540742c7cf4fa1ebe0e74ebfd81b48ba7" translate="yes" xml:space="preserve">
          <source>If enabling &lt;code&gt;ASM&lt;/code&gt;, list it last so that CMake can check whether compilers for other languages like &lt;code&gt;C&lt;/code&gt; work for assembly too.</source>
          <target state="translated">&lt;code&gt;ASM&lt;/code&gt; を有効にする場合は、最後にリストして、CMakeが &lt;code&gt;C&lt;/code&gt; のような他の言語のコンパイラもアセンブリで機能するかどうかを確認できるようにします。</target>
        </trans-unit>
        <trans-unit id="1454d9f78cfb0a64ae2e61b388f844084cb6d4a9" translate="yes" xml:space="preserve">
          <source>If false, do not try to link to OpenAL</source>
          <target state="translated">false の場合、OpenAL にリンクしようとしません。</target>
        </trans-unit>
        <trans-unit id="3cc02da9837a8f08b40d058d7d5eb6baf210fb68" translate="yes" xml:space="preserve">
          <source>If false, do not try to use GIF.</source>
          <target state="translated">falseの場合はGIFを使用しようとしないでください。</target>
        </trans-unit>
        <trans-unit id="3ea9918af87118318049529c8bdb3158bb864037" translate="yes" xml:space="preserve">
          <source>If false, do not try to use JPEG.</source>
          <target state="translated">falseの場合は、JPEGを使用しようとしないでください。</target>
        </trans-unit>
        <trans-unit id="7e6a05720011b912a1c5f9e7333daa111ad94d7d" translate="yes" xml:space="preserve">
          <source>If false, do not try to use PNG.</source>
          <target state="translated">falseの場合は、PNGを使用しようとしないでください。</target>
        </trans-unit>
        <trans-unit id="25876edcd37fcd6d58f200b27a90ab322adb7dcc" translate="yes" xml:space="preserve">
          <source>If false, don&amp;rsquo;t try to use Qt 4.</source>
          <target state="translated">falseの場合、Qt 4を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="05ff46dab8de8348fb8ae91792efa4efbdfbd4e1" translate="yes" xml:space="preserve">
          <source>If false, don&amp;rsquo;t try to use Qt 4. This variable is for compatibility only.</source>
          <target state="translated">falseの場合は、Qt 4を使用しないでください。この変数は互換性のみを目的としています。</target>
        </trans-unit>
        <trans-unit id="6c937fd47bf1974552f241cf782ed4fef913739e" translate="yes" xml:space="preserve">
          <source>If false, don&amp;rsquo;t try to use Qt. This variable is for compatibility only.</source>
          <target state="translated">falseの場合、Qtを使用しないでください。この変数は互換性のみを目的としています。</target>
        </trans-unit>
        <trans-unit id="97b28576175ccb25f038fe5a0fef27b1a21ed678" translate="yes" xml:space="preserve">
          <source>If flex is found on the system, the module provides the macro:</source>
          <target state="translated">システム上にフレックスがある場合、モジュールはマクロを提供します。</target>
        </trans-unit>
        <trans-unit id="34048faf9083cbcc1bbe0d5f7656256ea69a678d" translate="yes" xml:space="preserve">
          <source>If it is not set, or is set to a non-integer value, a sensible default limit is used. If the recursion limit is reached, the script terminates immediately with a fatal error.</source>
          <target state="translated">設定されていない場合、または非整数に設定されている場合は、適切なデフォルトの制限値が使用されます。再帰制限に達した場合、スクリプトは致命的なエラーで直ちに終了する。</target>
        </trans-unit>
        <trans-unit id="a9f6ad21f4bff30dad19b272775d6969dac0e7b3" translate="yes" xml:space="preserve">
          <source>If left out the &lt;code&gt;all&lt;/code&gt; target is built.</source>
          <target state="translated">省略した場合、 &lt;code&gt;all&lt;/code&gt; ターゲットが構築されます。</target>
        </trans-unit>
        <trans-unit id="5442bb15452a712ecfb89dd0bc8d4368d66e1ab9" translate="yes" xml:space="preserve">
          <source>If library type is not specified, &lt;code&gt;MODULE&lt;/code&gt; is assumed.</source>
          <target state="translated">ライブラリー・タイプが指定されていない場合、 &lt;code&gt;MODULE&lt;/code&gt; が想定されます。</target>
        </trans-unit>
        <trans-unit id="aeba8e375f0c783f9c209104440b7f2423c3045f" translate="yes" xml:space="preserve">
          <source>If mangling for a category is not known, its macro is left undefined. All macros require raw names in both lower case and upper case.</source>
          <target state="translated">カテゴリのマングリングがわからない場合、そのマクロは未定義のままになります。すべてのマクロは、小文字と大文字の両方の生の名前を必要とします。</target>
        </trans-unit>
        <trans-unit id="4e9f60ab0766159d96adfcbc5c7875194ce06d0f" translate="yes" xml:space="preserve">
          <source>If many external projects should have the same set of step targets, setting a directory property may be more convenient. The &lt;code&gt;build&lt;/code&gt; step target could be created automatically by setting the &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; directory property before creating the external projects with &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-10-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">多くの外部プロジェクトに同じステップターゲットのセットが必要な場合は、ディレクトリプロパティを設定する方が便利な場合があります。&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-10-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;を使用して外部プロジェクトを作成する前に、 &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; ディレクトリプロパティを設定することで、 &lt;code&gt;build&lt;/code&gt; ステップターゲットを自動的に作成できます。</target>
        </trans-unit>
        <trans-unit id="81fd05cbc2865f3191f4c14fc220507bd602549d" translate="yes" xml:space="preserve">
          <source>If many external projects should have the same set of step targets, setting a directory property may be more convenient. The &lt;code&gt;build&lt;/code&gt; step target could be created automatically by setting the &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; directory property before creating the external projects with &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-6-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">多くの外部プロジェクトが同じステップターゲットのセットを持つ必要がある場合は、ディレクトリプロパティを設定する方が便利な場合があります。&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-6-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; で&lt;/a&gt;外部プロジェクトを作成する前に &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; ディレクトリプロパティを設定することにより、 &lt;code&gt;build&lt;/code&gt; ステップターゲットを自動的に作成できます。</target>
        </trans-unit>
        <trans-unit id="557efab8af7815cb81652f809b79455810cd6fcc" translate="yes" xml:space="preserve">
          <source>If more than one &lt;code&gt;OUTPUT_*&lt;/code&gt; or &lt;code&gt;ERROR_*&lt;/code&gt; option is given for the same pipe the precedence is not specified. If no &lt;code&gt;OUTPUT_*&lt;/code&gt; or &lt;code&gt;ERROR_*&lt;/code&gt; options are given the output will be shared with the corresponding pipes of the CMake process itself.</source>
          <target state="translated">同じパイプに複数の &lt;code&gt;OUTPUT_*&lt;/code&gt; または &lt;code&gt;ERROR_*&lt;/code&gt; オプションが指定されている場合、優先順位は指定されていません。 &lt;code&gt;OUTPUT_*&lt;/code&gt; または &lt;code&gt;ERROR_*&lt;/code&gt; オプションが指定されていない場合、出力はCMakeプロセス自体の対応するパイプと共有されます。</target>
        </trans-unit>
        <trans-unit id="1bf10a4079d54118f50926664fe4d801b72e746b" translate="yes" xml:space="preserve">
          <source>If more than one artifact is specified, it is the user&amp;rsquo;s responsibility to ensure the consistency of the various artifacts.</source>
          <target state="translated">複数のアーティファクトが指定されている場合、さまざまなアーティファクトの一貫性を確保するのはユーザーの責任です。</target>
        </trans-unit>
        <trans-unit id="dc7929c846614bb3c192a2fe8907908cc5e956f0" translate="yes" xml:space="preserve">
          <source>If more than one library was found, all of them should be included in these variables (see the &lt;a href=&quot;#standard-variable-names&quot;&gt;Standard Variable Names&lt;/a&gt; section for more information).</source>
          <target state="translated">複数のライブラリが見つかった場合は、それらすべてをこれらの変数に含める必要があります（詳細については、「&lt;a href=&quot;#standard-variable-names&quot;&gt;標準変数名」&lt;/a&gt;セクションを参照してください）。</target>
        </trans-unit>
        <trans-unit id="2b7d1e9bc9224820618f618eb5f12dad67320006" translate="yes" xml:space="preserve">
          <source>If multiple tests specify the same resource lock, they are guaranteed not to run concurrently.</source>
          <target state="translated">複数のテストが同じリソースロックを指定した場合、それらが同時に実行されないことが保証されます。</target>
        </trans-unit>
        <trans-unit id="738e91e7a3f68b153b759e799475035fdec70559" translate="yes" xml:space="preserve">
          <source>If neither &lt;a href=&quot;#prop_tgt:JOB_POOL_PRECOMPILE_HEADER&quot; id=&quot;index-0-prop_tgt:JOB_POOL_PRECOMPILE_HEADER&quot;&gt;&lt;code&gt;JOB_POOL_PRECOMPILE_HEADER&lt;/code&gt;&lt;/a&gt; nor &lt;a href=&quot;../variable/cmake_job_pool_precompile_header#variable:CMAKE_JOB_POOL_PRECOMPILE_HEADER&quot; id=&quot;index-1-variable:CMAKE_JOB_POOL_PRECOMPILE_HEADER&quot;&gt;&lt;code&gt;CMAKE_JOB_POOL_PRECOMPILE_HEADER&lt;/code&gt;&lt;/a&gt; are set then &lt;a href=&quot;job_pool_compile#prop_tgt:JOB_POOL_COMPILE&quot; id=&quot;index-0-prop_tgt:JOB_POOL_COMPILE&quot;&gt;&lt;code&gt;JOB_POOL_COMPILE&lt;/code&gt;&lt;/a&gt; will be used for this task.</source>
          <target state="translated">どちらの場合&lt;a href=&quot;#prop_tgt:JOB_POOL_PRECOMPILE_HEADER&quot; id=&quot;index-0-prop_tgt:JOB_POOL_PRECOMPILE_HEADER&quot;&gt; &lt;code&gt;JOB_POOL_PRECOMPILE_HEADER&lt;/code&gt; &lt;/a&gt;も&lt;a href=&quot;../variable/cmake_job_pool_precompile_header#variable:CMAKE_JOB_POOL_PRECOMPILE_HEADER&quot; id=&quot;index-1-variable:CMAKE_JOB_POOL_PRECOMPILE_HEADER&quot;&gt; &lt;code&gt;CMAKE_JOB_POOL_PRECOMPILE_HEADER&lt;/code&gt; が&lt;/a&gt;設定され、その後&lt;a href=&quot;job_pool_compile#prop_tgt:JOB_POOL_COMPILE&quot; id=&quot;index-0-prop_tgt:JOB_POOL_COMPILE&quot;&gt; &lt;code&gt;JOB_POOL_COMPILE&lt;/code&gt; は&lt;/a&gt;、このタスクのために使用されます。</target>
        </trans-unit>
        <trans-unit id="1ec764198dd1c6663dfba4bd8e0bdc9f8b206129" translate="yes" xml:space="preserve">
          <source>If neither &lt;code&gt;NETRC&lt;/code&gt; option is given CMake will check variables &lt;code&gt;CMAKE_NETRC&lt;/code&gt; and &lt;code&gt;CMAKE_NETRC_FILE&lt;/code&gt;, respectively.</source>
          <target state="translated">どちらの &lt;code&gt;NETRC&lt;/code&gt; オプションも指定されていない場合、CMakeは変数 &lt;code&gt;CMAKE_NETRC&lt;/code&gt; および &lt;code&gt;CMAKE_NETRC_FILE&lt;/code&gt; をそれぞれチェックします。</target>
        </trans-unit>
        <trans-unit id="d8d3c352b14aac248dc3a1c47bd89084829f5acb" translate="yes" xml:space="preserve">
          <source>If neither of the above conditions are met, it is assumed that the command name is a program to be found on the &lt;code&gt;PATH&lt;/code&gt; at build time.</source>
          <target state="translated">上記の条件のいずれも満たされない場合、コマンド名はビルド時に &lt;code&gt;PATH&lt;/code&gt; で検出されるプログラムであると見なされます。</target>
        </trans-unit>
        <trans-unit id="72bbd38d1eb0d3712acbba4fd016c2da07213906" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, &lt;code&gt;Interpreter&lt;/code&gt; is assumed.</source>
          <target state="translated">&lt;code&gt;COMPONENTS&lt;/code&gt; が指定されていない場合、 &lt;code&gt;Interpreter&lt;/code&gt; が想定されます。</target>
        </trans-unit>
        <trans-unit id="e7bed97e422d1a916929ce04438590b9a8a9859e" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;COMPONENTS&lt;/code&gt; is specified, &lt;code&gt;Interpreter&lt;/code&gt; is assumed.</source>
          <target state="translated">&lt;code&gt;COMPONENTS&lt;/code&gt; が指定されていない場合、 &lt;code&gt;Interpreter&lt;/code&gt; が想定されます。</target>
        </trans-unit>
        <trans-unit id="326df0ed4b9d0688a5041a3173717fc7cdfb9152" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;PREFIX&lt;/code&gt;, &lt;code&gt;EP_PREFIX&lt;/code&gt;, or &lt;code&gt;EP_BASE&lt;/code&gt; is specified, then the default is to set &lt;code&gt;PREFIX&lt;/code&gt; to &lt;code&gt;&amp;lt;name&amp;gt;-prefix&lt;/code&gt;. Relative paths are interpreted with respect to &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; at the point where &lt;code&gt;ExternalProject_Add()&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;PREFIX&lt;/code&gt; 、 &lt;code&gt;EP_PREFIX&lt;/code&gt; 、または &lt;code&gt;EP_BASE&lt;/code&gt; が指定されていない場合、デフォルトでは &lt;code&gt;PREFIX&lt;/code&gt; が &lt;code&gt;&amp;lt;name&amp;gt;-prefix&lt;/code&gt; -prefixに設定されます。 &lt;code&gt;ExternalProject_Add()&lt;/code&gt; が呼び出された時点で、相対パスは&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;に関して解釈されます。</target>
        </trans-unit>
        <trans-unit id="9e4e8532d2c76f3d90ea05988211445b1992dd4c" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VERSION&lt;/code&gt; is given, the &lt;a href=&quot;../variable/project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt;&lt;code&gt;PROJECT_VERSION&lt;/code&gt;&lt;/a&gt; variable is used. If this hasn&amp;rsquo;t been set, it errors out.</source>
          <target state="translated">&lt;code&gt;VERSION&lt;/code&gt; が指定されていない場合、&lt;a href=&quot;../variable/project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt; &lt;code&gt;PROJECT_VERSION&lt;/code&gt; &lt;/a&gt;変数が使用されます。これが設定されていない場合、エラーになります。</target>
        </trans-unit>
        <trans-unit id="45101166804a3c8302449d2b26279989369cfd35" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;[version]&lt;/code&gt; and/or component list is given to a recursive invocation inside a find-module, the corresponding arguments are forwarded automatically from the outer call (including the &lt;code&gt;EXACT&lt;/code&gt; flag for &lt;code&gt;[version]&lt;/code&gt;). Version support is currently provided only on a package-by-package basis (see the &lt;a href=&quot;#version-selection&quot;&gt;Version Selection&lt;/a&gt; section below). When a version range is specified but the package is only designed to expect a single version, the package will ignore the upper end point of the range and only take the single version at the lower end of the range into account.</source>
          <target state="translated">find-module内の再帰呼び出しに &lt;code&gt;[version]&lt;/code&gt; やコンポーネントリストが指定されていない場合、対応する引数は外部呼び出しから自動的に転送されます（ &lt;code&gt;[version]&lt;/code&gt; の &lt;code&gt;EXACT&lt;/code&gt; フラグを含む）。バージョンサポートは現在、パッケージごとにのみ提供されています（以下の&lt;a href=&quot;#version-selection&quot;&gt;バージョン選択&lt;/a&gt;セクションを参照）。バージョン範囲が指定されているが、パッケージが単一バージョンのみを想定するように設計されている場合、パッケージは範囲の上限を無視し、範囲の下限にある単一バージョンのみを考慮します。</target>
        </trans-unit>
        <trans-unit id="c2f698832628ef5f8c4ead002990c5e31959a51e" translate="yes" xml:space="preserve">
          <source>If no argument is given after &lt;code&gt;ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; or if &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; is an empty string, then this command will clear any existing value of the environment variable.</source>
          <target state="translated">&lt;code&gt;ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; 後に引数が指定されていない場合、または &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; が空の文字列である場合、このコマンドは環境変数の既存の値をすべてクリアします。</target>
        </trans-unit>
        <trans-unit id="f67727e80d8df0633da95ebe9836eda8c2e1d01f" translate="yes" xml:space="preserve">
          <source>If no arguments given, &lt;code&gt;include_guard&lt;/code&gt; has the same scope as a variable, meaning that the include guard effect is isolated by the most recent function scope or current directory if no inner function scopes exist. In this case the command behavior is the same as:</source>
          <target state="translated">引数が指定されていない場合、 &lt;code&gt;include_guard&lt;/code&gt; のスコープは変数と同じになります。つまり、内部関数スコープが存在しない場合、includeガード効果は最新の関数スコープまたは現在のディレクトリによって分離されます。この場合、コマンドの動作は次と同じです。</target>
        </trans-unit>
        <trans-unit id="e0ddeddd7faedd568ef8d5b7b2c671f916f2220d" translate="yes" xml:space="preserve">
          <source>If no component is specified in the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; call, then it only searches for the ImageMagick executable directory. This code defines the following variables:</source>
          <target state="translated">&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;コールでコンポーネントが指定されていない場合、ImageMagick実行可能ディレクトリのみが検索されます。このコードは、次の変数を定義します。</target>
        </trans-unit>
        <trans-unit id="429bbff986c1aecd35eada0718b113ebdb0a04ec" translate="yes" xml:space="preserve">
          <source>If no explicit &lt;a href=&quot;#prop_tgt:UNITY_BUILD_MODE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_MODE&quot;&gt;&lt;code&gt;UNITY_BUILD_MODE&lt;/code&gt;&lt;/a&gt; has been specified, CMake will default to &lt;code&gt;BATCH&lt;/code&gt;.</source>
          <target state="translated">明示的な&lt;a href=&quot;#prop_tgt:UNITY_BUILD_MODE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_MODE&quot;&gt; &lt;code&gt;UNITY_BUILD_MODE&lt;/code&gt; &lt;/a&gt;が指定されていない場合、CMakeはデフォルトで &lt;code&gt;BATCH&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="9f96038217144684da1eb206e8c7a554ea9017ad" translate="yes" xml:space="preserve">
          <source>If no explicit &lt;a href=&quot;unity_build_mode#prop_tgt:UNITY_BUILD_MODE&quot; id=&quot;index-1-prop_tgt:UNITY_BUILD_MODE&quot;&gt;&lt;code&gt;UNITY_BUILD_MODE&lt;/code&gt;&lt;/a&gt; has been specified, CMake will default to &lt;code&gt;BATCH&lt;/code&gt;.</source>
          <target state="translated">明示的な&lt;a href=&quot;unity_build_mode#prop_tgt:UNITY_BUILD_MODE&quot; id=&quot;index-1-prop_tgt:UNITY_BUILD_MODE&quot;&gt; &lt;code&gt;UNITY_BUILD_MODE&lt;/code&gt; &lt;/a&gt;が指定されていない場合、CMakeはデフォルトで &lt;code&gt;BATCH&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="5cee43e793c33b8fc5ce96b3ab373d44b41a3a7f" translate="yes" xml:space="preserve">
          <source>If no explicit &lt;code&gt;&amp;lt;format string&amp;gt;&lt;/code&gt; is given it will default to:</source>
          <target state="translated">明示的な &lt;code&gt;&amp;lt;format string&amp;gt;&lt;/code&gt; が指定されていない場合、デフォルトで次のようになります。</target>
        </trans-unit>
        <trans-unit id="674cf2c8cb48e088b2e72e10862aafb55095c771" translate="yes" xml:space="preserve">
          <source>If no explicit &lt;code&gt;&amp;lt;format_string&amp;gt;&lt;/code&gt; is given, it will default to:</source>
          <target state="translated">明示的な &lt;code&gt;&amp;lt;format_string&amp;gt;&lt;/code&gt; が指定されていない場合、デフォルトで次のようになります。</target>
        </trans-unit>
        <trans-unit id="07cfde79fa51309df3c1c8e13832b49cd36f822c" translate="yes" xml:space="preserve">
          <source>If no tests were found, the default behavior of CTest is to always log an error message but to return an error code in script mode only. This option unifies the behavior of CTest by either returning an error code if no tests were found or by ignoring it.</source>
          <target state="translated">テストが見つからなかった場合、CTest のデフォルトの動作は、常にエラーメッセージをログに記録しますが、スクリプトモードのみでエラーコードを返します。このオプションは、テストが見つからなかった場合にエラーコードを返すか、それを無視することで CTest の動作を統一します。</target>
        </trans-unit>
        <trans-unit id="b505dd517fb85fe7ea74ba5312f273fa9f6ad9c8" translate="yes" xml:space="preserve">
          <source>If no value is set and if a &lt;code&gt;.int&lt;/code&gt; file is added as a source file to the executable target it will be treated as an &lt;code&gt;Integrity Application&lt;/code&gt;.</source>
          <target state="translated">値が設定されておらず、 &lt;code&gt;.int&lt;/code&gt; ファイルが実行可能ターゲットにソースファイルとして追加されている場合、それは &lt;code&gt;Integrity Application&lt;/code&gt; として扱われます。</target>
        </trans-unit>
        <trans-unit id="d19f4a86a17f0ec822a40563125dd7743176e5e8" translate="yes" xml:space="preserve">
          <source>If no variable name is given, removes exactly one element. Otherwise, assign the first element&amp;rsquo;s value to the given variable and removes it, up to the last variable name given.</source>
          <target state="translated">変数名が指定されていない場合は、要素を1つだけ削除します。それ以外の場合は、最初の要素の値を指定された変数に割り当て、指定された最後の変数名まで削除します。</target>
        </trans-unit>
        <trans-unit id="9ed74f4234a3180de981150cab53a4bf64ae0456" translate="yes" xml:space="preserve">
          <source>If no variable name is given, removes exactly one element. Otherwise, assign the last element&amp;rsquo;s value to the given variable and removes it, up to the last variable name given.</source>
          <target state="translated">変数名が指定されていない場合は、要素を1つだけ削除します。それ以外の場合は、最後の要素の値を指定された変数に割り当て、指定された最後の変数名まで削除します。</target>
        </trans-unit>
        <trans-unit id="de994325bf4c3507d6337d773fbe378097afb001" translate="yes" xml:space="preserve">
          <source>If not &lt;code&gt;FALSE&lt;/code&gt;, use of deprecated functionality will issue warnings. If this variable is not set, CMake behaves as if it were set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FALSE&lt;/code&gt; でない場合、廃止された機能を使用すると警告が表示されます。この変数が設定されていない場合、CMakeは &lt;code&gt;TRUE&lt;/code&gt; に設定されているかのように動作します。</target>
        </trans-unit>
        <trans-unit id="df40a7cf08e816ddb19eced6d55adee232926119" translate="yes" xml:space="preserve">
          <source>If not defined, search for shared libraries and static libraries in that order.</source>
          <target state="translated">定義されていない場合は、共有ライブラリと静的ライブラリの順に検索します。</target>
        </trans-unit>
        <trans-unit id="da3f1097a123dc3a947e2dee06fc1440a9acfad4" translate="yes" xml:space="preserve">
          <source>If not set explicitly the value is initialized by the &lt;code&gt;CMAKE_MSVCIDE_RUN_PATH&lt;/code&gt; environment variable, if set, and otherwise left empty.</source>
          <target state="translated">明示的に設定されていない場合、値は &lt;code&gt;CMAKE_MSVCIDE_RUN_PATH&lt;/code&gt; 環境変数によって初期化されます（設定されている場合）。それ以外の場合は空のままです。</target>
        </trans-unit>
        <trans-unit id="23d25baa2dbf6fc969bf8dbcecf42019c2960778" translate="yes" xml:space="preserve">
          <source>If not set explicitly the value is initialized by the &lt;code&gt;MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; environment variable, if set, and otherwise computed based on the host platform.</source>
          <target state="translated">明示的に設定されていない場合、値は &lt;code&gt;MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; 環境変数によって初期化されます（設定されている場合）。それ以外の場合は、ホストプラットフォームに基づいて計算されます。</target>
        </trans-unit>
        <trans-unit id="ade365e49df034b291a4e6dd2b70207c6474b2c2" translate="yes" xml:space="preserve">
          <source>If not set explicitly the value is initialized by the &lt;code&gt;SDKROOT&lt;/code&gt; environment variable, if set, and otherwise computed based on the &lt;a href=&quot;cmake_osx_deployment_target#variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot; id=&quot;index-0-variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot;&gt;&lt;code&gt;CMAKE_OSX_DEPLOYMENT_TARGET&lt;/code&gt;&lt;/a&gt; or the host platform.</source>
          <target state="translated">明示的に設定されていない場合、値は &lt;code&gt;SDKROOT&lt;/code&gt; 環境変数によって初期化されます（設定されている場合）。それ以外の場合は、&lt;a href=&quot;cmake_osx_deployment_target#variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot; id=&quot;index-0-variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot;&gt; &lt;code&gt;CMAKE_OSX_DEPLOYMENT_TARGET&lt;/code&gt; &lt;/a&gt;またはホストプラットフォームに基づいて計算されます。</target>
        </trans-unit>
        <trans-unit id="3b350555ffbfe92a276b57345b8d1dad228c8d82" translate="yes" xml:space="preserve">
          <source>If not set, CMake treats this property as &lt;code&gt;OFF&lt;/code&gt; by default. CMake generators that are capable of organizing into a hierarchy of folders use the values of the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-1-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property to name those folders. See also the documentation for the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-2-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">設定されていない場合、CMakeはデフォルトでこのプロパティを &lt;code&gt;OFF&lt;/code&gt; として扱います。フォルダーの階層に編成できるCMakeジェネレーターは、&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-1-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;ターゲットプロパティの値を使用して、それらのフォルダーに名前を付けます。&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-2-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;ターゲットプロパティのドキュメントもご覧ください。</target>
        </trans-unit>
        <trans-unit id="bb74e6ff4bb1be8aa0a1ebb606bec384f11e8742" translate="yes" xml:space="preserve">
          <source>If not set, CMake uses &amp;ldquo;CMakePredefinedTargets&amp;rdquo; as a default value for this property. Targets such as INSTALL, PACKAGE and RUN_TESTS will be organized into this FOLDER. See also the documentation for the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">設定されていない場合、CMakeはこのプロパティのデフォルト値として「CMakePredefinedTargets」を使用します。INSTALL、PACKAGE、RUN_TESTSなどのターゲットは、このFOLDERに編成されます。&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;ターゲットプロパティのドキュメントもご覧ください。</target>
        </trans-unit>
        <trans-unit id="9193e511f15947f1228cccdef8e3ebd91a751c55" translate="yes" xml:space="preserve">
          <source>If not set, CMake uses the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-1-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; property of the parent target as a default value for this property. See also the documentation for the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-2-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property and the &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">設定されていない場合、CMakeは親ターゲットの&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-1-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;プロパティをこのプロパティのデフォルト値として使用します。&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-2-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt;ターゲットプロパティと&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;ターゲットプロパティのドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="cbc0b8dd8779fda12d439f8b008a02d0f194d0ae" translate="yes" xml:space="preserve">
          <source>If not set, the string &amp;ldquo;&lt;code&gt;&amp;lt;TYPE&amp;gt;&lt;/code&gt; packages&amp;rdquo; is used.</source>
          <target state="translated">設定されていない場合、文字列「 &lt;code&gt;&amp;lt;TYPE&amp;gt;&lt;/code&gt; packages」が使用されます。</target>
        </trans-unit>
        <trans-unit id="c4c910b932becb0586cd772435b7784cb48528dd" translate="yes" xml:space="preserve">
          <source>If not set, this property uses the value of the &lt;a href=&quot;../variable/cmake_job_pools#variable:CMAKE_JOB_POOLS&quot; id=&quot;index-0-variable:CMAKE_JOB_POOLS&quot;&gt;&lt;code&gt;CMAKE_JOB_POOLS&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">設定されていない場合、このプロパティは&lt;a href=&quot;../variable/cmake_job_pools#variable:CMAKE_JOB_POOLS&quot; id=&quot;index-0-variable:CMAKE_JOB_POOLS&quot;&gt; &lt;code&gt;CMAKE_JOB_POOLS&lt;/code&gt; &lt;/a&gt;変数の値を使用します。</target>
        </trans-unit>
        <trans-unit id="fe79476e1a8a00d4d5090047776246f0935cb077" translate="yes" xml:space="preserve">
          <source>If not specified, CMake checks the &lt;a href=&quot;../envvar/cmake_generator#envvar:CMAKE_GENERATOR&quot; id=&quot;index-0-envvar:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt; environment variable and otherwise falls back to a builtin default selection.</source>
          <target state="translated">指定しない場合、CMakeは&lt;a href=&quot;../envvar/cmake_generator#envvar:CMAKE_GENERATOR&quot; id=&quot;index-0-envvar:CMAKE_GENERATOR&quot;&gt; &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; &lt;/a&gt;環境変数をチェックし、それ以外の場合は組み込みのデフォルト選択にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="0383a3936dbe01c440196142e58b24182954b1d4" translate="yes" xml:space="preserve">
          <source>If not specified, the default will be &lt;em&gt;false&lt;/em&gt; if using a NDK version that provides the unified headers and &lt;em&gt;true&lt;/em&gt; otherwise.</source>
          <target state="translated">指定しない場合、統合ヘッダーを提供するNDKバージョンを使用する場合、デフォルトは&lt;em&gt;falseに&lt;/em&gt;なり、それ以外の場合は&lt;em&gt;trueになり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8fa2aa5cc02c205b99dc76d79bc8d459f575bffb" translate="yes" xml:space="preserve">
          <source>If not specified, the default will be a value that selects the latest available GCC toolchain.</source>
          <target state="translated">指定しない場合、デフォルトでは最新の利用可能なGCCツールチェーンを選択する値になります。</target>
        </trans-unit>
        <trans-unit id="b069f3c1816aa6ea2d4b779547d8e21dc098d457" translate="yes" xml:space="preserve">
          <source>If one or more package in this categories has not been found, CMake will abort when calling &lt;a href=&quot;#command:feature_summary&quot; id=&quot;index-0-command:feature_summary&quot;&gt;&lt;code&gt;feature_summary()&lt;/code&gt;&lt;/a&gt; with the &amp;lsquo;FATAL_ON_MISSING_REQUIRED_PACKAGES&amp;rsquo; option enabled.</source>
          <target state="translated">このカテゴリの1つ以上のパッケージが見つからない場合、「FATAL_ON_MISSING_REQUIRED_PACKAGES」オプションを有効にして&lt;a href=&quot;#command:feature_summary&quot; id=&quot;index-0-command:feature_summary&quot;&gt; &lt;code&gt;feature_summary()&lt;/code&gt; &lt;/a&gt;を呼び出すと、CMakeは異常終了します。</target>
        </trans-unit>
        <trans-unit id="2518d614876354e845d92e10ad71efe7209de0f6" translate="yes" xml:space="preserve">
          <source>If only &lt;code&gt;basename_LIBRARY_RELEASE&lt;/code&gt; is defined, &lt;code&gt;basename_LIBRARY&lt;/code&gt; will be set to the release value, and &lt;code&gt;basename_LIBRARY_DEBUG&lt;/code&gt; will be set to &lt;code&gt;basename_LIBRARY_DEBUG-NOTFOUND&lt;/code&gt;. If only &lt;code&gt;basename_LIBRARY_DEBUG&lt;/code&gt; is defined, then &lt;code&gt;basename_LIBRARY&lt;/code&gt; will take the debug value, and &lt;code&gt;basename_LIBRARY_RELEASE&lt;/code&gt; will be set to &lt;code&gt;basename_LIBRARY_RELEASE-NOTFOUND&lt;/code&gt;.</source>
          <target state="translated">唯一の場合 &lt;code&gt;basename_LIBRARY_RELEASE&lt;/code&gt; が定義され、 &lt;code&gt;basename_LIBRARY&lt;/code&gt; はリリース値に設定され、かつ &lt;code&gt;basename_LIBRARY_DEBUG&lt;/code&gt; がに設定されます &lt;code&gt;basename_LIBRARY_DEBUG-NOTFOUND&lt;/code&gt; 。唯一の場合 &lt;code&gt;basename_LIBRARY_DEBUG&lt;/code&gt; が定義され、その後、 &lt;code&gt;basename_LIBRARY&lt;/code&gt; は、デバッグ値を取る、と &lt;code&gt;basename_LIBRARY_RELEASE&lt;/code&gt; がに設定されます &lt;code&gt;basename_LIBRARY_RELEASE-NOTFOUND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebcbde2218e66c214c9f58a9a93171174de2845a" translate="yes" xml:space="preserve">
          <source>If policy &lt;a href=&quot;../policy/cmp0060#policy:CMP0060&quot; id=&quot;index-0-policy:CMP0060&quot;&gt;&lt;code&gt;CMP0060&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt;, then when a library in one of these directories is given by full path to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; CMake will generate the &lt;code&gt;-l&amp;lt;name&amp;gt;&lt;/code&gt; form on link lines for historical purposes.</source>
          <target state="translated">ポリシー&lt;a href=&quot;../policy/cmp0060#policy:CMP0060&quot; id=&quot;index-0-policy:CMP0060&quot;&gt; &lt;code&gt;CMP0060&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;NEW&lt;/code&gt; に設定されていない場合、これらのディレクトリの1つにあるライブラリが&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;へのフルパスで指定されると、CMakeは履歴上の目的でリンク行に &lt;code&gt;-l&amp;lt;name&amp;gt;&lt;/code&gt; 形式を生成します。</target>
        </trans-unit>
        <trans-unit id="1adf54f66df93def1552e65b8b1c773994e72024" translate="yes" xml:space="preserve">
          <source>If policy &lt;a href=&quot;../policy/cmp0068#policy:CMP0068&quot; id=&quot;index-0-policy:CMP0068&quot;&gt;&lt;code&gt;CMP0068&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, this property also controls use of &lt;a href=&quot;install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt; in the build tree on macOS. Either way, the &lt;a href=&quot;build_with_install_name_dir#prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;BUILD_WITH_INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt; target property takes precedence.</source>
          <target state="translated">ポリシー&lt;a href=&quot;../policy/cmp0068#policy:CMP0068&quot; id=&quot;index-0-policy:CMP0068&quot;&gt; &lt;code&gt;CMP0068&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;NEW&lt;/code&gt; でない場合、このプロパティはmacOSのビルドツリーでの&lt;a href=&quot;install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; の&lt;/a&gt;使用も制御します。いずれの場合も、&lt;a href=&quot;build_with_install_name_dir#prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;BUILD_WITH_INSTALL_NAME_DIR&lt;/code&gt; &lt;/a&gt;ターゲットプロパティが優先されます。</target>
        </trans-unit>
        <trans-unit id="956833caeba66e8c3b7ef50acbe1706aa405421a" translate="yes" xml:space="preserve">
          <source>If policy &lt;a href=&quot;../policy/cmp0086#policy:CMP0086&quot; id=&quot;index-0-policy:CMP0086&quot;&gt;&lt;code&gt;CMP0086&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;, &lt;code&gt;-module &amp;lt;module_name&amp;gt;&lt;/code&gt; is passed to &lt;code&gt;SWIG&lt;/code&gt; compiler.</source>
          <target state="translated">ポリシー&lt;a href=&quot;../policy/cmp0086#policy:CMP0086&quot; id=&quot;index-0-policy:CMP0086&quot;&gt; &lt;code&gt;CMP0086&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;NEW&lt;/code&gt; に設定されている場合、 &lt;code&gt;-module &amp;lt;module_name&amp;gt;&lt;/code&gt; が &lt;code&gt;SWIG&lt;/code&gt; に渡されますコンパイラにます。</target>
        </trans-unit>
        <trans-unit id="1e020b0c2f005309a323e464c9709aff4ae278f6" translate="yes" xml:space="preserve">
          <source>If possible, the MPI version will be determined by this module. The facilities to detect the MPI version were introduced with MPI-1.2, and therefore cannot be found for older MPI versions.</source>
          <target state="translated">可能であれば、MPI のバージョンはこのモジュールによって決定されます。MPI のバージョンを検出する機能は MPI-1.2 で導入されたものなので、古い MPI のバージョンでは見つけることができません。</target>
        </trans-unit>
        <trans-unit id="a8521310c7ab6e5e56e009826eabca260d778b45" translate="yes" xml:space="preserve">
          <source>If present and true, this will cause all libraries to be built shared unless the library was explicitly added as a static library. This variable is often added to projects as an &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-0-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; so that each user of a project can decide if they want to build the project using shared or static libraries.</source>
          <target state="translated">存在し、trueの場合、ライブラリが静的ライブラリとして明示的に追加されていない限り、すべてのライブラリが共有ビルドされます。この変数は多くの場合、&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-0-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt;としてプロジェクトに追加されますため、プロジェクトの各ユーザーは、共有ライブラリを使用するか静的ライブラリを使用するかを決定できます。</target>
        </trans-unit>
        <trans-unit id="46443ef3218d266800ab26081649bb729efa30e5" translate="yes" xml:space="preserve">
          <source>If provided, the optional &lt;code&gt;comment&lt;/code&gt; will be passed as the &lt;code&gt;COMMENT&lt;/code&gt; for the &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command used to create the custom target internally.</source>
          <target state="translated">提供されている場合、オプションの &lt;code&gt;comment&lt;/code&gt; として渡されます &lt;code&gt;COMMENT&lt;/code&gt; 用&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;内部でカスタムターゲットを作成するために使用されるコマンド。</target>
        </trans-unit>
        <trans-unit id="ec6bc186ce164c347e9de686a37bf1dd2980360c" translate="yes" xml:space="preserve">
          <source>If required, you may select which files and directories to list or extract from the archive using the specified &lt;code&gt;&amp;lt;patterns&amp;gt;&lt;/code&gt;. Wildcards are supported. If the &lt;code&gt;PATTERNS&lt;/code&gt; option is not given, the entire archive will be listed or extracted.</source>
          <target state="translated">必要に応じて、指定した &lt;code&gt;&amp;lt;patterns&amp;gt;&lt;/code&gt; を使用して、アーカイブから一覧表示または抽出するファイルとディレクトリを選択できます。ワイルドカードがサポートされています。 &lt;code&gt;PATTERNS&lt;/code&gt; オプションが指定されていない場合、アーカイブ全体が一覧表示または抽出されます。</target>
        </trans-unit>
        <trans-unit id="1d09d0430e79bf59f7b657720c27b472484899c7" translate="yes" xml:space="preserve">
          <source>If set in the cache it is used to initialize the value of the &lt;a href=&quot;../prop_gbl/rule_messages#prop_gbl:RULE_MESSAGES&quot; id=&quot;index-0-prop_gbl:RULE_MESSAGES&quot;&gt;&lt;code&gt;RULE_MESSAGES&lt;/code&gt;&lt;/a&gt; property. Users may disable the option in their local build tree to disable granular messages and report only as each target completes in Makefile builds.</source>
          <target state="translated">キャッシュに設定されている場合は、&lt;a href=&quot;../prop_gbl/rule_messages#prop_gbl:RULE_MESSAGES&quot; id=&quot;index-0-prop_gbl:RULE_MESSAGES&quot;&gt; &lt;code&gt;RULE_MESSAGES&lt;/code&gt; &lt;/a&gt;プロパティの値を初期化するために使用されます。ユーザーはローカルビルドツリーのオプションを無効にして、詳細なメッセージを無効にし、Makefileビルドで各ターゲットが完了したときにのみレポートすることができます。</target>
        </trans-unit>
        <trans-unit id="272ec1d6420f5b2744281dbff393f2a7317dff29" translate="yes" xml:space="preserve">
          <source>If set this CMake script will be executed by CPack during its local [CPack-private] installation which is done right before packaging the files. The script is not called by e.g.: &lt;code&gt;make install&lt;/code&gt;.</source>
          <target state="translated">設定すると、このCMakeスクリプトは、ファイルをパッケージ化する直前に行われるローカル[CPack-private]インストール中にCPackによって実行されます。スクリプトは、たとえば、 &lt;code&gt;make install&lt;/code&gt; によって呼び出されません。。</target>
        </trans-unit>
        <trans-unit id="c1fc101f76be58173fe034af9fb26a060d0a33e9" translate="yes" xml:space="preserve">
          <source>If set this will enable device linking on the library target. Normally device linking is deferred until a shared library or executable is generated, allowing for multiple static libraries to resolve device symbols at the same time when they are used by a shared library or executable.</source>
          <target state="translated">これを設定すると、ライブラリターゲット上でデバイスリンクが有効になります。通常、デバイスリンクは共有ライブラリまたは実行ファイルが生成されるまで延期され、複数のスタティックライブラリが共有ライブラリまたは実行ファイルで使用されるときに、同時にデバイスシンボルを解決することができます。</target>
        </trans-unit>
        <trans-unit id="343524f270e356ac04c4117963b1a6c10a95d3ca" translate="yes" xml:space="preserve">
          <source>If set this will enable separable compilation for all CUDA files for the given target.</source>
          <target state="translated">これを設定すると、指定されたターゲットのすべてのCUDAファイルに対して分離可能なコンパイルが可能になります。</target>
        </trans-unit>
        <trans-unit id="9f5805ecfd5007b48fdaee93cffbd5e01ccbbc02" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;FALSE&lt;/code&gt; or undefined: Enable multiple version/component requirements.</source>
          <target state="translated">&lt;code&gt;FALSE&lt;/code&gt; または未定義に設定されている場合：複数のバージョン/コンポーネント要件を有効にします。</target>
        </trans-unit>
        <trans-unit id="2e1923da3a35fe97453420dc041c5d1976347b78" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;OFF&lt;/code&gt; it will never be emitted</source>
          <target state="translated">&lt;code&gt;OFF&lt;/code&gt; 設定した場合にそれは決して放出されません</target>
        </trans-unit>
        <trans-unit id="6e102b02dc555a53d99c0d8996a336936070f308" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;ON&lt;/code&gt; it will always be emitted</source>
          <target state="translated">&lt;code&gt;ON&lt;/code&gt; に設定した場合に常に出力されます</target>
        </trans-unit>
        <trans-unit id="61c105cb51eaf644ff72e45505b80c22d0725e40" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;ONLY&lt;/code&gt;, then only the roots in &lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; will be searched. If set to &lt;code&gt;NEVER&lt;/code&gt;, then the roots in &lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; will be ignored and only the host system root will be used. If set to &lt;code&gt;BOTH&lt;/code&gt;, then the host system paths and the paths in &lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-3-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; will be searched.</source>
          <target state="translated">&lt;code&gt;ONLY&lt;/code&gt; に設定すると、&lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; &lt;/a&gt;のルートのみが検索されます。 &lt;code&gt;NEVER&lt;/code&gt; に設定すると、&lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; の&lt;/a&gt;ルートは無視され、ホストシステムのルートのみが使用されます。 &lt;code&gt;BOTH&lt;/code&gt; に設定した場合、ホストシステムのパスと&lt;a href=&quot;cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-3-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; &lt;/a&gt;のパスが検索されます。</target>
        </trans-unit>
        <trans-unit id="1653dba7defc4aa4365dc4c6b95572e33dd7ac88" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;TRUE&lt;/code&gt;, contents of target property &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; will be forwarded to &lt;code&gt;SWIG&lt;/code&gt; compiler. If set to &lt;code&gt;FALSE&lt;/code&gt; target property &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; will be ignored. If not set, target property &lt;code&gt;SWIG_USE_TARGET_INCLUDE_DIRECTORIES&lt;/code&gt; will be considered.</source>
          <target state="translated">&lt;code&gt;TRUE&lt;/code&gt; に設定すると、ターゲットプロパティ&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; の&lt;/a&gt;内容が &lt;code&gt;SWIG&lt;/code&gt; コンパイラに転送されます。 &lt;code&gt;FALSE&lt;/code&gt; に設定すると、ターゲットプロパティ&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;は無視されます。設定されていない場合、ターゲットプロパティ &lt;code&gt;SWIG_USE_TARGET_INCLUDE_DIRECTORIES&lt;/code&gt; が考慮されます。</target>
        </trans-unit>
        <trans-unit id="b60b56bd68196a381f3866767bfd11bcbc287868" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;TRUE&lt;/code&gt;, contents of target property &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; will be forwarded to &lt;code&gt;SWIG&lt;/code&gt; compiler. If set to &lt;code&gt;FALSE&lt;/code&gt; or not defined, target property &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; will be ignored. This behavior can be overridden by specifying source property &lt;code&gt;USE_TARGET_INCLUDE_DIRECTORIES&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TRUE&lt;/code&gt; に設定すると、ターゲットプロパティ&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; の&lt;/a&gt;内容が &lt;code&gt;SWIG&lt;/code&gt; コンパイラに転送されます。 &lt;code&gt;FALSE&lt;/code&gt; に設定するか、定義しない場合、ターゲットプロパティ&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;は無視されます。この動作は、ソースプロパティ &lt;code&gt;USE_TARGET_INCLUDE_DIRECTORIES&lt;/code&gt; を指定することでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="6a5754a3387ef38858ec8c6092013434463093ea" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;TRUE&lt;/code&gt;, values of variables prefixed with &lt;code&gt;CPACK_&lt;/code&gt; will be escaped before being written to the configuration files, so that the cpack program receives them exactly as they were specified. If not, characters like quotes and backslashes can cause parsing errors or alter the value received by the cpack program. Defaults to &lt;code&gt;FALSE&lt;/code&gt; for backwards compatibility.</source>
          <target state="translated">&lt;code&gt;TRUE&lt;/code&gt; に設定すると、 &lt;code&gt;CPACK_&lt;/code&gt; で始まる変数の値はエスケープされてから設定ファイルに書き込まれ、cpackプログラムは指定されたとおりにそれらを受け取ります。そうでない場合、引用符やバックスラッシュなどの文字は、解析エラーを引き起こしたり、cpackプログラムが受け取った値を変更したりする可能性があります。デフォルトは &lt;code&gt;FALSE&lt;/code&gt; です。下位互換性のために、です。</target>
        </trans-unit>
        <trans-unit id="75aff9a59610f6f48529b4715559de0f345225eb" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;TRUE&lt;/code&gt;: Create CMake cache entries for the above artifact specification variables so that users can edit them interactively. This disables support for multiple version/component requirements.</source>
          <target state="translated">&lt;code&gt;TRUE&lt;/code&gt; に設定されている場合：ユーザーがインタラクティブに編集できるように、上記のアーティファクト仕様変数のCMakeキャッシュエントリを作成します。これにより、複数のバージョン/コンポーネント要件のサポートが無効になります。</target>
        </trans-unit>
        <trans-unit id="f53525f3d97ca399f00ebd0208aa03b3f0fc33eb" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, the test will be skipped and its status will be &amp;lsquo;Not Run&amp;rsquo;. A &lt;code&gt;DISABLED&lt;/code&gt; test will not be counted in the total number of tests and its completion status will be reported to CDash as &lt;code&gt;Disabled&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; に設定すると、テストはスキップされ、そのステータスは「実行されません」になります。 &lt;code&gt;DISABLED&lt;/code&gt; テストはテストし、その完了状態の合計数にカウントされないようにCDASHに報告される &lt;code&gt;Disabled&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd857f6dae53345c336a4b22238674cd1770ff33" translate="yes" xml:space="preserve">
          <source>If set to FALSE, search &lt;strong&gt;only&lt;/strong&gt; for shared libraries.</source>
          <target state="translated">FALSEに設定すると、共有ライブラリ&lt;strong&gt;のみ&lt;/strong&gt;を検索します。</target>
        </trans-unit>
        <trans-unit id="d6b905e6d62cbbc469cfc3f9d734dc04122ff5d3" translate="yes" xml:space="preserve">
          <source>If set to TRUE, search &lt;strong&gt;only&lt;/strong&gt; for static libraries.</source>
          <target state="translated">TRUEに設定した場合、検索&lt;strong&gt;のみ&lt;/strong&gt;、静的ライブラリがれます。</target>
        </trans-unit>
        <trans-unit id="656b07b5d0646a11f05f535fb9f6e26cc13e4ed5" translate="yes" xml:space="preserve">
          <source>If set to a list of arguments those will be added to the scheme.</source>
          <target state="translated">引数のリストに設定すると、それらがスキームに追加されます。</target>
        </trans-unit>
        <trans-unit id="7e8a371bfae5e6ce9c30aee8a4ac4a49d1660765" translate="yes" xml:space="preserve">
          <source>If set to a list of environment variables and values of the form &lt;code&gt;MYVAR=value&lt;/code&gt; those environment variables will be added to the scheme.</source>
          <target state="translated">環境変数と &lt;code&gt;MYVAR=value&lt;/code&gt; の形式の値のリストに設定すると、それらの環境変数がスキームに追加されます。</target>
        </trans-unit>
        <trans-unit id="9c7cc5d6e6ed2eb1934bf73f5562d4ae46549b95" translate="yes" xml:space="preserve">
          <source>If set to a list of environment variables and values of the form &lt;code&gt;MYVAR=value&lt;/code&gt; those environment variables will be defined while running the test. The environment is restored to its previous state after the test is done.</source>
          <target state="translated">環境変数と &lt;code&gt;MYVAR=value&lt;/code&gt; 形式の値のリストに設定されている場合、これらの環境変数はテストの実行中に定義されます。テストが完了すると、環境は以前の状態に復元されます。</target>
        </trans-unit>
        <trans-unit id="3961c65e52c433ace06b0fc5f95f6e64e715ead6" translate="yes" xml:space="preserve">
          <source>If set to a list of files, the test will not be run unless all of the files exist.</source>
          <target state="translated">ファイルのリストに設定した場合、すべてのファイルが存在しない限りテストは実行されません。</target>
        </trans-unit>
        <trans-unit id="e324226d89ff39ffcb6cfaca900000fb561b143d" translate="yes" xml:space="preserve">
          <source>If set to a name then that name will be reported to &lt;code&gt;CDASH&lt;/code&gt; as a named measurement with a value of &lt;code&gt;1&lt;/code&gt;. You may also specify a value by setting &lt;code&gt;MEASUREMENT&lt;/code&gt; to &lt;code&gt;measurement=value&lt;/code&gt;.</source>
          <target state="translated">名前を設定すると、その名前は値 &lt;code&gt;1&lt;/code&gt; の名前付き測定値として &lt;code&gt;CDASH&lt;/code&gt; に報告されます。 &lt;code&gt;MEASUREMENT&lt;/code&gt; を &lt;code&gt;measurement=value&lt;/code&gt; 設定して値を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="508483b7c2e7e2b9a8c20b7c6ce01623bb6b2036" translate="yes" xml:space="preserve">
          <source>If set to true then this is an object file.</source>
          <target state="translated">trueに設定すると、これはオブジェクトファイルです。</target>
        </trans-unit>
        <trans-unit id="68aeca830ab8d49e7291d649bb0708a8f7d0163e" translate="yes" xml:space="preserve">
          <source>If set to true, enables interprocedural optimizations if they are known &lt;a href=&quot;../module/checkiposupported#module:CheckIPOSupported&quot; id=&quot;index-0-module:CheckIPOSupported&quot;&gt;&lt;code&gt;to be supported&lt;/code&gt;&lt;/a&gt; by the compiler. Depending on value of policy &lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-0-policy:CMP0069&quot;&gt;&lt;code&gt;CMP0069&lt;/code&gt;&lt;/a&gt;, the error will be reported or ignored, if interprocedural optimization is enabled but not supported.</source>
          <target state="translated">trueに設定すると、コンパイラーによって&lt;a href=&quot;../module/checkiposupported#module:CheckIPOSupported&quot; id=&quot;index-0-module:CheckIPOSupported&quot;&gt; &lt;code&gt;to be supported&lt;/code&gt; &lt;/a&gt;されることがわかっている場合に、プロシージャー間の最適化が有効になります。ポリシー&lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-0-policy:CMP0069&quot;&gt; &lt;code&gt;CMP0069&lt;/code&gt; の&lt;/a&gt;値に依存プロシージャー間の最適化が有効になっているがサポートされていない、エラーが報告されるか無視されます。</target>
        </trans-unit>
        <trans-unit id="d8cd6cac7b512160799c8a74b37c0affe381073a" translate="yes" xml:space="preserve">
          <source>If set to true, enables interprocedural optimizations if they are known to be supported by the compiler.</source>
          <target state="translated">true に設定すると、コンパイラでサポートされていることがわかっている場合、手順間の最適化を有効にします。</target>
        </trans-unit>
        <trans-unit id="bcd7b6cf97d8e2a0168a26ddd277cfbe0505f12b" translate="yes" xml:space="preserve">
          <source>If set to true, this will invert the pass/fail flag of the test.</source>
          <target state="translated">true に設定すると、テストの合否フラグを反転させます。</target>
        </trans-unit>
        <trans-unit id="e84408a2ba103ae2828cb3568033d31b2933c5a9" translate="yes" xml:space="preserve">
          <source>If set, CTest will update the repository&amp;rsquo;s submodules before updating.</source>
          <target state="translated">設定されている場合、CTestは更新前にリポジトリのサブモジュールを更新します。</target>
        </trans-unit>
        <trans-unit id="e0d920612995f8a0b917b2c1a49b5b76f2e604d3" translate="yes" xml:space="preserve">
          <source>If set, checks only the specified vendor, if not set checks all the possibilities. List of vendors valid in this module:</source>
          <target state="translated">セットされている場合は、指定されたベンダーのみをチェックし、セットされていない場合はすべての可能性をチェックします。このモジュールで有効なベンダーのリスト。</target>
        </trans-unit>
        <trans-unit id="c823d9115e264ca718c48dba7c4d21c4a0dc6708" translate="yes" xml:space="preserve">
          <source>If set, if the output matches one of specified regular expressions, the test will be marked as skipped. Example:</source>
          <target state="translated">セットされている場合、出力が指定された正規表現のいずれかと一致した場合、テストはスキップされます。例。</target>
        </trans-unit>
        <trans-unit id="eb25be356f11f13bd96a46fe54f2d93d67e8de75" translate="yes" xml:space="preserve">
          <source>If set, if the output matches one of specified regular expressions, the test will fail. Example:</source>
          <target state="translated">セットされている場合、出力が指定された正規表現のいずれかと一致した場合、テストは失敗します。例を示します。</target>
        </trans-unit>
        <trans-unit id="7d59224a9baba3d0037b4d9660d56273a7d1c4bb" translate="yes" xml:space="preserve">
          <source>If set, report any undefined properties to this file.</source>
          <target state="translated">設定されている場合、未定義のプロパティをこのファイルに報告します。</target>
        </trans-unit>
        <trans-unit id="dbb4e64ce44b0f96f9be8ff420869ebe5a6ea017" translate="yes" xml:space="preserve">
          <source>If set, specifies additional versions of Matlab that may be looked for. The variable should be a list of strings, organised by pairs of release name and versions, such as follows:</source>
          <target state="translated">セットされている場合は,検索する可能性のあるMatlabの追加バージョンを指定します.この変数は,以下のように,リリース名とバージョンのペアで整理された文字列のリストでなければなりません.</target>
        </trans-unit>
        <trans-unit id="9c8997cdfecb1cfb937ac71bcd0e98ab20663b90" translate="yes" xml:space="preserve">
          <source>If set, the &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-3-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt; is included automatically on a per-generator basis. It only need contain overrides.</source>
          <target state="translated">設定されている場合、&lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-3-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt; &lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt; &lt;/a&gt;はジェネレーターごとに自動的に含まれます。オーバーライドを含めるだけで済みます。</target>
        </trans-unit>
        <trans-unit id="6f926a3c63300107774698cdf1b2dd1ec46d7225" translate="yes" xml:space="preserve">
          <source>If set, the following variables are passed in to the generated try_compile CMakeLists.txt to initialize compile target properties with default values:</source>
          <target state="translated">設定されている場合、以下の変数が生成された try_compile CMakeLists.txt に渡され、コンパイル対象のプロパティをデフォルト値で初期化します。</target>
        </trans-unit>
        <trans-unit id="8514d73d44c12bb07d874aaf69a90ad39d7031fe" translate="yes" xml:space="preserve">
          <source>If set, the lookup of Matlab and the intermediate configuration steps are outputted to the console.</source>
          <target state="translated">設定されている場合、Matlabのルックアップと中間的な設定ステップをコンソールに出力します。</target>
        </trans-unit>
        <trans-unit id="b34bbfeba5b8d0aa737893e1f435919690da6666" translate="yes" xml:space="preserve">
          <source>If set, the test output will be checked against the specified regular expressions and at least one of the regular expressions has to match, otherwise the test will fail. Example:</source>
          <target state="translated">設定されている場合、テスト出力は指定された正規表現と照合され、少なくとも1つの正規表現が一致しなければなりません。例を示します。</target>
        </trans-unit>
        <trans-unit id="83f095438a33c2e4139501c17adbaa860231f094" translate="yes" xml:space="preserve">
          <source>If set, this causes the output from the custom step to be captured to files in the external project&amp;rsquo;s &lt;code&gt;LOG_DIR&lt;/code&gt; if supplied or &lt;code&gt;STAMP_DIR&lt;/code&gt;.</source>
          <target state="translated">設定すると、カスタムステップからの出力が、外部プロジェクトの &lt;code&gt;LOG_DIR&lt;/code&gt; (提供されている場合）または &lt;code&gt;STAMP_DIR&lt;/code&gt; 内のファイルにキャプチャされます。</target>
        </trans-unit>
        <trans-unit id="82972795f71affe19082f745d349524d05f1d948" translate="yes" xml:space="preserve">
          <source>If set, this property completely overrides the generic property for the named configuration.</source>
          <target state="translated">設定されている場合、このプロパティは、指定された構成のジェネリック・プロパティを完全に上書きします。</target>
        </trans-unit>
        <trans-unit id="2ef098119209ba85d386a15248da3719b9f2f55c" translate="yes" xml:space="preserve">
          <source>If set, this will tell the required compilers to enable device linking on the library target. Device linking is an additional link step required by some CUDA compilers when &lt;a href=&quot;cuda_separable_compilation#prop_tgt:CUDA_SEPARABLE_COMPILATION&quot; id=&quot;index-0-prop_tgt:CUDA_SEPARABLE_COMPILATION&quot;&gt;&lt;code&gt;CUDA_SEPARABLE_COMPILATION&lt;/code&gt;&lt;/a&gt; is enabled. Normally device linking is deferred until a shared library or executable is generated, allowing for multiple static libraries to resolve device symbols at the same time when they are used by a shared library or executable.</source>
          <target state="translated">設定されている場合、これは、ライブラリターゲットでデバイスリンクを有効にするように必要なコンパイラに指示します。デバイスリンクは、&lt;a href=&quot;cuda_separable_compilation#prop_tgt:CUDA_SEPARABLE_COMPILATION&quot; id=&quot;index-0-prop_tgt:CUDA_SEPARABLE_COMPILATION&quot;&gt; &lt;code&gt;CUDA_SEPARABLE_COMPILATION&lt;/code&gt; &lt;/a&gt;が有効になっている場合に、一部のCUDAコンパイラで必要とされる追加のリンクステップです。通常、デバイスのリンクは共有ライブラリまたは実行可能ファイルが生成されるまで延期され、複数の静的ライブラリが共有ライブラリまたは実行可能ファイルによって使用されるときに同時にデバイスシンボルを解決できるようにします。</target>
        </trans-unit>
        <trans-unit id="0482866b4dde63796f7920f8866b1ca2d2719b60" translate="yes" xml:space="preserve">
          <source>If specified, configuration will error if a suitable CUDA Toolkit is not found.</source>
          <target state="translated">指定した場合、適切なCUDAツールキットが見つからないと設定がエラーになります。</target>
        </trans-unit>
        <trans-unit id="74fe61013fc0da2e7e13f2aea36a950a0abe8db1" translate="yes" xml:space="preserve">
          <source>If specified, describes the version of the CUDA Toolkit to search for.</source>
          <target state="translated">指定した場合、検索するCUDAツールキットのバージョンを記述します。</target>
        </trans-unit>
        <trans-unit id="64c88640f9f8518c9809a5716a9881041a27466c" translate="yes" xml:space="preserve">
          <source>If specified, the CUDA Toolkit is considered found only if the exact &lt;code&gt;VERSION&lt;/code&gt; specified is recovered.</source>
          <target state="translated">指定された場合、CUDA Toolkitは、指定された正確な &lt;code&gt;VERSION&lt;/code&gt; が回復された場合にのみ検出されたと見なされます。</target>
        </trans-unit>
        <trans-unit id="228e18132f5561d618b3af8d81d58a42a727bf08" translate="yes" xml:space="preserve">
          <source>If specified, the parameter is passed along with &lt;code&gt;--gtest_output=xml:&lt;/code&gt; to test executable. The actual file name is the same as the test target, including prefix and suffix. This should be used instead of &lt;code&gt;EXTRA_ARGS --gtest_output=xml&lt;/code&gt; to avoid race conditions writing the XML result output when using parallel test execution.</source>
          <target state="translated">指定した場合、パラメーターは &lt;code&gt;--gtest_output=xml:&lt;/code&gt; とともに渡されて実行可能ファイルをテストします。実際のファイル名は、プレフィックスとサフィックスを含め、テストターゲットと同じです。これは、 &lt;code&gt;EXTRA_ARGS --gtest_output=xml&lt;/code&gt; の代わりに使用して、並列テスト実行を使用するときにXML結果出力を書き込む競合状態を回避する必要があります。</target>
        </trans-unit>
        <trans-unit id="5c8d14636863c3dec3c5b856df68f15342cb2920" translate="yes" xml:space="preserve">
          <source>If specified, the search for a suitable CUDA Toolkit will not produce any messages.</source>
          <target state="translated">指定された場合、適切なCUDAツールキットを検索してもメッセージは出てきません。</target>
        </trans-unit>
        <trans-unit id="9c7930d04d2f2d1434014d736aa507b2744a7261" translate="yes" xml:space="preserve">
          <source>If such a library target has this property set to &lt;code&gt;TRUE&lt;/code&gt; it will be built as a framework when built on the macOS and iOS. It will have the directory structure required for a framework and will be suitable to be used with the &lt;code&gt;-framework&lt;/code&gt; option. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_framework#variable:CMAKE_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="translated">そのようなライブラリターゲットでこのプロパティが &lt;code&gt;TRUE&lt;/code&gt; に設定されている場合、macOSおよびiOSでビルドすると、フレームワークとしてビルドされます。フレームワークに必要なディレクトリ構造を持ち、 &lt;code&gt;-framework&lt;/code&gt; オプションでの使用に適しています。このプロパティは、&lt;a href=&quot;../variable/cmake_framework#variable:CMAKE_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FRAMEWORK&lt;/code&gt; の&lt;/a&gt;値によって初期化されます、ターゲットの作成時に設定されている場合変数のれます。</target>
        </trans-unit>
        <trans-unit id="af731b6633381becd0cd3ada4b497552d16c5823" translate="yes" xml:space="preserve">
          <source>If that property is not set then CMake uses an appropriate default value based on the compiler to select the CUDA runtime library.</source>
          <target state="translated">そのプロパティが設定されていない場合、CMake はコンパイラに基づいて適切なデフォルト値を使用して CUDA ランタイム・ライブラリを選択します。</target>
        </trans-unit>
        <trans-unit id="106e236f57f265f5539272df6448eb4f55c60bc0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt;&lt;/a&gt; global property is set all search paths will be tested as normal, with &lt;code&gt;32/&lt;/code&gt; appended, and with all matches of &lt;code&gt;lib/&lt;/code&gt; replaced with &lt;code&gt;lib32/&lt;/code&gt;. This property is automatically set for the platforms that are known to need it if at least one of the languages supported by the &lt;a href=&quot;project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command is enabled.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt; &lt;/a&gt;グローバルプロパティが設定されている場合、すべての検索パスが通常どおりテストされ、 &lt;code&gt;32/&lt;/code&gt; 追加され、 &lt;code&gt;lib/&lt;/code&gt; すべての一致が &lt;code&gt;lib32/&lt;/code&gt; 置き換えられます。このプロパティは、&lt;a href=&quot;project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;コマンドでサポートされている言語の少なくとも1つが有効になっている場合に、このプロパティが必要であることがわかっているプラ​​ットフォームに対して自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="692c2434840c30f4c658bd7821648965c03938b7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt;&lt;/a&gt; global property is set all search paths will be tested as normal, with &lt;code&gt;64/&lt;/code&gt; appended, and with all matches of &lt;code&gt;lib/&lt;/code&gt; replaced with &lt;code&gt;lib64/&lt;/code&gt;. This property is automatically set for the platforms that are known to need it if at least one of the languages supported by the &lt;a href=&quot;project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command is enabled.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt; &lt;/a&gt;グローバルプロパティが設定されている場合、すべての検索パスが通常どおりテストされ、 &lt;code&gt;64/&lt;/code&gt; 追加され、 &lt;code&gt;lib/&lt;/code&gt; すべての一致が &lt;code&gt;lib64/&lt;/code&gt; 置き換えられます。このプロパティは、&lt;a href=&quot;project#command:project&quot; id=&quot;index-2-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;コマンドでサポートされている言語の少なくとも1つが有効になっている場合に、このプロパティが必要であることがわかっているプラ​​ットフォームに対して自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="0dc246617e7d654446957c593c9948b9f9c9cd81" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt;&lt;/a&gt; global property is set all search paths will be tested as normal, with &lt;code&gt;x32/&lt;/code&gt; appended, and with all matches of &lt;code&gt;lib/&lt;/code&gt; replaced with &lt;code&gt;libx32/&lt;/code&gt;. This property is automatically set for the platforms that are known to need it if at least one of the languages supported by the &lt;a href=&quot;project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command is enabled.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-1-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt; &lt;/a&gt;グローバルプロパティが設定されている場合、すべての検索パスは通常どおりテストされ、 &lt;code&gt;x32/&lt;/code&gt; 追加され、 &lt;code&gt;lib/&lt;/code&gt; すべての一致が &lt;code&gt;libx32/&lt;/code&gt; 置き換えられます。このプロパティは、&lt;a href=&quot;project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;コマンドでサポートされている言語の少なくとも1つが有効になっている場合に、このプロパティが必要であることがわかっているプラ​​ットフォームに対して自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="cd8533fbd3ebe00344ed769b81a2c1910a022ef7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; global property is not set, the value of this variable is used in its place. See &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-1-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; for additional information.</source>
          <target state="translated">場合&lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;JOB_POOLS&lt;/code&gt; &lt;/a&gt;グローバルプロパティが設定されていない、この変数の値は、その場所に使用されています。詳細については、&lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-1-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;JOB_POOLS&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="86b775c85f5a15ecdb40ed2fd1db7aa137ad4543" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; target property is set on a target then its value determines whether the target is included in the &amp;ldquo;all&amp;rdquo; target of this directory and its ancestors.</source>
          <target state="translated">場合&lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; の&lt;/a&gt;targetプロパティがターゲットに設定され、その値は、ターゲットがこのディレクトリとその祖先の「すべて」のターゲットに含まれているか否かを判定する。</target>
        </trans-unit>
        <trans-unit id="2e08d12fdd805bd7f16723cabb549085f5855840" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_android_api#variable:CMAKE_ANDROID_API&quot; id=&quot;index-0-variable:CMAKE_ANDROID_API&quot;&gt;&lt;code&gt;CMAKE_ANDROID_API&lt;/code&gt;&lt;/a&gt; variable is set, its value is used as the API level.</source>
          <target state="translated">場合&lt;a href=&quot;../variable/cmake_android_api#variable:CMAKE_ANDROID_API&quot; id=&quot;index-0-variable:CMAKE_ANDROID_API&quot;&gt; &lt;code&gt;CMAKE_ANDROID_API&lt;/code&gt; の&lt;/a&gt;変数が設定され、その値は、APIレベルとして使用されています。</target>
        </trans-unit>
        <trans-unit id="1b4a6212c1587b4bffde0ab6297f7a42e07e368c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_android_ndk#variable:CMAKE_ANDROID_NDK&quot; id=&quot;index-0-variable:CMAKE_ANDROID_NDK&quot;&gt;&lt;code&gt;CMAKE_ANDROID_NDK&lt;/code&gt;&lt;/a&gt; variable is set, the NDK at the specified location will be used.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_android_ndk#variable:CMAKE_ANDROID_NDK&quot; id=&quot;index-0-variable:CMAKE_ANDROID_NDK&quot;&gt; &lt;code&gt;CMAKE_ANDROID_NDK&lt;/code&gt; &lt;/a&gt;変数が設定されている場合、指定された場所のNDKが使用されます。</target>
        </trans-unit>
        <trans-unit id="c5f96a2f65a671e007aa0f113bbcb2405e581932" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_find_library_custom_lib_suffix#variable:CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&quot; id=&quot;index-0-variable:CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&quot;&gt;&lt;code&gt;CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&lt;/code&gt;&lt;/a&gt; variable is set all search paths will be tested as normal, with the suffix appended, and with all matches of &lt;code&gt;lib/&lt;/code&gt; replaced with &lt;code&gt;lib${CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX}/&lt;/code&gt;. This variable overrides the &lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt;&lt;/a&gt; global properties.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_find_library_custom_lib_suffix#variable:CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&quot; id=&quot;index-0-variable:CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&quot;&gt; &lt;code&gt;CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX&lt;/code&gt; &lt;/a&gt;変数が設定されている場合、すべての検索パスが通常どおりにテストされ、サフィックスが追加され、 &lt;code&gt;lib/&lt;/code&gt; すべての一致が &lt;code&gt;lib${CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX}/&lt;/code&gt; 置き換えられます。この変数は&lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt; &lt;/a&gt;グローバルプロパティをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="a6a9453c4ba32452c7432ac067eb4ce832621a60" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_project_include#variable:CMAKE_PROJECT_INCLUDE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE&quot;&gt;&lt;code&gt;CMAKE_PROJECT_INCLUDE&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE&lt;/code&gt; variables are set, the files they point to will be included as the last step of the &lt;code&gt;project()&lt;/code&gt; command. If both are set, then &lt;a href=&quot;../variable/cmake_project_include#variable:CMAKE_PROJECT_INCLUDE&quot; id=&quot;index-1-variable:CMAKE_PROJECT_INCLUDE&quot;&gt;&lt;code&gt;CMAKE_PROJECT_INCLUDE&lt;/code&gt;&lt;/a&gt; will be included before &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;../variable/cmake_project_include#variable:CMAKE_PROJECT_INCLUDE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE&quot;&gt; &lt;code&gt;CMAKE_PROJECT_INCLUDE&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE&lt;/code&gt; 変数が設定されている、彼らがポイントファイルは、最後のステップとして含まれる &lt;code&gt;project()&lt;/code&gt; コマンド。両方が設定されている場合、&lt;a href=&quot;../variable/cmake_project_include#variable:CMAKE_PROJECT_INCLUDE&quot; id=&quot;index-1-variable:CMAKE_PROJECT_INCLUDE&quot;&gt; &lt;code&gt;CMAKE_PROJECT_INCLUDE&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE&lt;/code&gt; の前に含まれます。</target>
        </trans-unit>
        <trans-unit id="b7061488d89587435e02b5a9e73825410ac8a5d4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt;&lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE_BEFORE&lt;/code&gt; variables are set, the files they point to will be included as the first step of the &lt;code&gt;project()&lt;/code&gt; command. If both are set, then &lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-1-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt;&lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt;&lt;/a&gt; will be included before &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE_BEFORE&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt; &lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE_BEFORE&lt;/code&gt; 変数が設定されている、彼らがポイントファイルは、最初のステップとして含まれる &lt;code&gt;project()&lt;/code&gt; コマンド。両方が設定されている場合、&lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-1-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt; &lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE_BEFORE&lt;/code&gt; の前に含まれます。</target>
        </trans-unit>
        <trans-unit id="b42833e1521cd3e5a61b28079b80e0bafe9479d7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt;&lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt;&lt;/a&gt; variable is set, the file pointed to by that variable will be included as the first step of the &lt;code&gt;project()&lt;/code&gt; command.</source>
          <target state="translated">場合&lt;a href=&quot;../variable/cmake_project_include_before#variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot; id=&quot;index-0-variable:CMAKE_PROJECT_INCLUDE_BEFORE&quot;&gt; &lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt; の&lt;/a&gt;変数が設定され、ファイルはその変数によって指さの最初のステップとして含まれる &lt;code&gt;project()&lt;/code&gt; コマンド。</target>
        </trans-unit>
        <trans-unit id="ea6cb4551f7806bb14f1e3366adb4ac5d36795e5" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-3-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable is set, the API level is detected from the NDK directory structure containing the sysroot.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-3-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt;変数が設定されている場合、sysrootを含むNDKディレクトリ構造からAPIレベルが検出されます。</target>
        </trans-unit>
        <trans-unit id="0841bf5b3d471d7eafec2418f248759990deb068" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../variable/ctest_checkout_command#variable:CTEST_CHECKOUT_COMMAND&quot; id=&quot;index-0-variable:CTEST_CHECKOUT_COMMAND&quot;&gt;&lt;code&gt;CTEST_CHECKOUT_COMMAND&lt;/code&gt;&lt;/a&gt; variable (or the &lt;a href=&quot;../variable/ctest_cvs_checkout#variable:CTEST_CVS_CHECKOUT&quot; id=&quot;index-0-variable:CTEST_CVS_CHECKOUT&quot;&gt;&lt;code&gt;CTEST_CVS_CHECKOUT&lt;/code&gt;&lt;/a&gt; variable) is set, its content is treated as command-line. The command is invoked with the current working directory set to the parent of the source directory, even if the source directory already exists. This can be used to create the source tree from a version control repository.</source>
          <target state="translated">場合&lt;a href=&quot;../variable/ctest_checkout_command#variable:CTEST_CHECKOUT_COMMAND&quot; id=&quot;index-0-variable:CTEST_CHECKOUT_COMMAND&quot;&gt; &lt;code&gt;CTEST_CHECKOUT_COMMAND&lt;/code&gt; の&lt;/a&gt;変数（又は&lt;a href=&quot;../variable/ctest_cvs_checkout#variable:CTEST_CVS_CHECKOUT&quot; id=&quot;index-0-variable:CTEST_CVS_CHECKOUT&quot;&gt; &lt;code&gt;CTEST_CVS_CHECKOUT&lt;/code&gt; の&lt;/a&gt;変数）が設定され、その内容は、コマンドラインとして扱われます。コマンドは、ソースディレクトリが既に存在する場合でも、現在の作業ディレクトリをソースディレクトリの親に設定して呼び出されます。これを使用して、バージョン管理リポジトリからソースツリーを作成できます。</target>
        </trans-unit>
        <trans-unit id="026ae09c815c0d6fc4b6a3e1c275b8677f7fb941" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; compiler passes to the linker an architecture-specific system library search directory such as &lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; this variable contains the &lt;code&gt;&amp;lt;arch&amp;gt;&lt;/code&gt; name if/as detected by CMake.</source>
          <target state="translated">&lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; コンパイラーがリンカーに &lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; などのアーキテクチャー固有のシステムライブラリ検索ディレクトリを渡す場合、この変数には、CMakeによって検出されたif / asのような &lt;code&gt;&amp;lt;arch&amp;gt;&lt;/code&gt; 名が含まれます。</target>
        </trans-unit>
        <trans-unit id="c8b6ca35e4389840705d7748f801abbb707b3dc2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; could be built and run successfully, the internal cache variable specified by &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; will be set to 1, otherwise it will be set to an value that evaluates to boolean false (e.g. an empty string or an error message).</source>
          <target state="translated">場合は &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 構築され、正常に実行することができ、内部キャッシュ変数はで指定された &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; 1に設定され、それ以外の場合は値に設定されることをブールfalseと評価（例えば、空の文字列またはエラーメッセージ） 。</target>
        </trans-unit>
        <trans-unit id="abde6e0d8ce027f57124ce88144da68238b6e41b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt; file was found, &lt;code&gt;uic&lt;/code&gt; is called on it to generate &lt;code&gt;ui_&amp;lt;ui_base&amp;gt;.h&lt;/code&gt; in the directory</source>
          <target state="translated">&lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt; ファイルが見つかった場合、そのファイルで &lt;code&gt;uic&lt;/code&gt; が呼び出され、ディレクトリに &lt;code&gt;ui_&amp;lt;ui_base&amp;gt;.h&lt;/code&gt; が生成されます</target>
        </trans-unit>
        <trans-unit id="0d62d6213c4bb8bc375810a215fedc2d3fffcb40" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:&amp;lt;type&amp;gt;&lt;/code&gt; portion is given it must be one of the types specified by the &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-1-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; command documentation for its &lt;code&gt;CACHE&lt;/code&gt; signature. If the &lt;code&gt;:&amp;lt;type&amp;gt;&lt;/code&gt; portion is omitted the entry will be created with no type if it does not exist with a type already. If a command in the project sets the type to &lt;code&gt;PATH&lt;/code&gt; or &lt;code&gt;FILEPATH&lt;/code&gt; then the &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; will be converted to an absolute path.</source>
          <target state="translated">場合 &lt;code&gt;:&amp;lt;type&amp;gt;&lt;/code&gt; 部分が与えられ、それは、で指定されたタイプのいずれかでなければならない&lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-1-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;そのためのコマンドドキュメント &lt;code&gt;CACHE&lt;/code&gt; の署名。場合 &lt;code&gt;:&amp;lt;type&amp;gt;&lt;/code&gt; の部分が省略されていることが既に型に存在しない場合にエントリが無いタイプで作成されます。プロジェクトのコマンドでタイプを &lt;code&gt;PATH&lt;/code&gt; または &lt;code&gt;FILEPATH&lt;/code&gt; に設定すると、 &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; は絶対パスに変換されます。</target>
        </trans-unit>
        <trans-unit id="18e502ccb5dd261d96c313b282aef2959856381e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;APPEND&lt;/code&gt; option is given the list is appended to any existing property value (except that empty values are ignored and not appended). If the &lt;code&gt;APPEND_STRING&lt;/code&gt; option is given the string is appended to any existing property value as string, i.e. it results in a longer string and not a list of strings. When using &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; with a property defined to support &lt;code&gt;INHERITED&lt;/code&gt; behavior (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;), no inheriting occurs when finding the initial value to append to. If the property is not already directly set in the nominated scope, the command will behave as though &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; had not been given.</source>
          <target state="translated">場合 &lt;code&gt;APPEND&lt;/code&gt; のオプションが指定されたリストは、（空の値が無視され、添付されていないことを除いて）すべての既存のプロパティ値に追加されます。場合 &lt;code&gt;APPEND_STRING&lt;/code&gt; のオプションは、文字列を文字列として既存のプロパティの値に追加されて与えられ、それが長い文字列と文字列のリストにない結果すなわち。 &lt;code&gt;INHERITED&lt;/code&gt; 動作をサポートするように定義されたプロパティで &lt;code&gt;APPEND&lt;/code&gt; または &lt;code&gt;APPEND_STRING&lt;/code&gt; を使用する場合（&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; を&lt;/a&gt;参照）、追加する初期値を見つけるときに継承は発生しません。プロパティが指定されたスコープに直接設定されていない場合、コマンドは &lt;code&gt;APPEND&lt;/code&gt; または &lt;code&gt;APPEND_STRING&lt;/code&gt; が指定されていないかのように動作します。</target>
        </trans-unit>
        <trans-unit id="92cb4c2b601264f6395c5e6f098dd57e6b88121f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;APPEND&lt;/code&gt; option is given the list is appended to any existing property value. If the &lt;code&gt;APPEND_STRING&lt;/code&gt; option is given the string is appended to any existing property value as string, i.e. it results in a longer string and not a list of strings. When using &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; with a property defined to support &lt;code&gt;INHERITED&lt;/code&gt; behavior (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;), no inheriting occurs when finding the initial value to append to. If the property is not already directly set in the nominated scope, the command will behave as though &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; had not been given.</source>
          <target state="translated">場合 &lt;code&gt;APPEND&lt;/code&gt; のオプションが指定されたリストは、既存のプロパティ値に追加されます。場合 &lt;code&gt;APPEND_STRING&lt;/code&gt; のオプションは、文字列を文字列として既存のプロパティの値に追加されて与えられ、それが長い文字列と文字列のリストにない結果すなわち。 &lt;code&gt;INHERITED&lt;/code&gt; 動作をサポートするように定義されたプロパティ（&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; を&lt;/a&gt;参照）で &lt;code&gt;APPEND&lt;/code&gt; または &lt;code&gt;APPEND_STRING&lt;/code&gt; を使用する場合、追加する初期値を見つけるときに継承は行われません。指定されたスコープでプロパティがまだ直接設定されていない場合、コマンドは &lt;code&gt;APPEND&lt;/code&gt; または &lt;code&gt;APPEND_STRING&lt;/code&gt; が指定されていないかのように動作します。</target>
        </trans-unit>
        <trans-unit id="b3c6d194e6610169dd91e505c431088309c1dff5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;BUILTIN_TYPES_ONLY&lt;/code&gt; option is not given, the macro checks for headers &lt;code&gt;&amp;lt;sys/types.h&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;stddef.h&amp;gt;&lt;/code&gt;, and saves results in &lt;code&gt;HAVE_SYS_TYPES_H&lt;/code&gt;, &lt;code&gt;HAVE_STDINT_H&lt;/code&gt;, and &lt;code&gt;HAVE_STDDEF_H&lt;/code&gt;. The type size check automatically includes the available headers, thus supporting checks of types defined in the headers.</source>
          <target state="translated">&lt;code&gt;BUILTIN_TYPES_ONLY&lt;/code&gt; オプションが指定されていない場合、マクロはヘッダー &lt;code&gt;&amp;lt;sys/types.h&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt; 、および &lt;code&gt;&amp;lt;stddef.h&amp;gt;&lt;/code&gt; を &lt;code&gt;HAVE_SYS_TYPES_H&lt;/code&gt; 、結果をHAVE_SYS_TYPES_H、 &lt;code&gt;HAVE_STDINT_H&lt;/code&gt; 、および &lt;code&gt;HAVE_STDDEF_H&lt;/code&gt; に保存します。タイプサイズチェックには、使用可能なヘッダーが自動的に含まれるため、ヘッダーで定義されたタイプのチェックがサポートされます。</target>
        </trans-unit>
        <trans-unit id="87001704a9c9f037372706a35804a957f0758614" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;BU_CHMOD_BUNDLE_ITEMS&lt;/code&gt; variable is set then bundle items will be marked writable before &lt;code&gt;install_name_tool&lt;/code&gt; tries to change them.</source>
          <target state="translated">&lt;code&gt;BU_CHMOD_BUNDLE_ITEMS&lt;/code&gt; 変数が設定されている場合、 &lt;code&gt;install_name_tool&lt;/code&gt; がそれらを変更しようとする前に、バンドル項目は書き込み可能とマークされます。</target>
        </trans-unit>
        <trans-unit id="d436e35f4ed44e40987df48abb9ca1805145da65" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;CONFIGURE_DEPENDS&lt;/code&gt; flag is specified, CMake will add logic to the main build system check target to rerun the flagged &lt;code&gt;GLOB&lt;/code&gt; commands at build time. If any of the outputs change, CMake will regenerate the build system.</source>
          <target state="translated">&lt;code&gt;CONFIGURE_DEPENDS&lt;/code&gt; フラグが指定されている場合、CMakeは、ビルド時にフラグを付けた &lt;code&gt;GLOB&lt;/code&gt; コマンドを再実行するロジックをメインビルドシステムチェックターゲットに追加します。出力のいずれかが変更されると、CMakeはビルドシステムを再生成します。</target>
        </trans-unit>
        <trans-unit id="18451159d1b05ae5672e6e9aa3419b2ef580a3b1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;CUDA&lt;/code&gt; language has been enabled we will use the directory containing the compiler as the first search location for &lt;code&gt;nvcc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CUDA&lt;/code&gt; 言語が有効になっている場合は、コンパイラを含むディレクトリを &lt;code&gt;nvcc&lt;/code&gt; の最初の検索場所として使用します。</target>
        </trans-unit>
        <trans-unit id="17efef13905605a50a8bcb93c18a3796d38051e6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;CUDAToolkit_ROOT&lt;/code&gt; cmake configuration variable (e.g., &lt;code&gt;-DCUDAToolkit_ROOT=/some/path&lt;/code&gt;) &lt;em&gt;or&lt;/em&gt; environment variable is defined, it will be searched. If both an environment variable &lt;strong&gt;and&lt;/strong&gt; a configuration variable are specified, the &lt;em&gt;configuration&lt;/em&gt; variable takes precedence.</source>
          <target state="translated">場合 &lt;code&gt;CUDAToolkit_ROOT&lt;/code&gt; cmakeの設定変数（例えば、 &lt;code&gt;-DCUDAToolkit_ROOT=/some/path&lt;/code&gt; ）&lt;em&gt;または&lt;/em&gt;環境変数が定義され、それが検索されます。環境変数&lt;strong&gt;と&lt;/strong&gt;構成変数の両方が指定されている場合は、&lt;em&gt;構成&lt;/em&gt;変数が優先されます。</target>
        </trans-unit>
        <trans-unit id="aae98b828c863d9f6a4ab587f76831d3b091e9b4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Config.cmake&lt;/code&gt; file is found and the optionally-specified version is satisfied, then the CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command considers the package to be found and the entire library package is assumed to be complete as designed.</source>
          <target state="translated">場合 &lt;code&gt;Config.cmake&lt;/code&gt; のファイルが発見され、必要に応じて、指定されたバージョンが満たされ、その後、CMakeのを&lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;コマンドは、パッケージが発見されると見なし、全体ライブラリパッケージが設計通りに完了したことを想定しています。</target>
        </trans-unit>
        <trans-unit id="627cf4bf20c57c39f86cc6bf24d6cbbb67544070" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; argument is provided then targets in the subdirectory will not be included in the &lt;code&gt;ALL&lt;/code&gt; target of the parent directory by default, and will be excluded from IDE project files. Users must explicitly build targets in the subdirectory. This is meant for use when the subdirectory contains a separate part of the project that is useful but not necessary, such as a set of examples. Typically the subdirectory should contain its own &lt;a href=&quot;project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command invocation so that a full build system will be generated in the subdirectory (such as a VS IDE solution file). Note that inter-target dependencies supersede this exclusion. If a target built by the parent project depends on a target in the subdirectory, the dependee target will be included in the parent project build system to satisfy the dependency.</source>
          <target state="translated">&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; 引数が指定されている場合、サブディレクトリ内のターゲットは、デフォルトでは親ディレクトリの &lt;code&gt;ALL&lt;/code&gt; ターゲットに含まれず、IDEプロジェクトファイルから除外されます。ユーザーはサブディレクトリにターゲットを明示的に構築する必要があります。これは、一連の例のように、サブディレクトリにプロジェクトの別の部分が含まれている場合に使用することを目的としています。通常、サブディレクトリには独自の&lt;a href=&quot;project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;が含まれている必要があります完全なビルドシステムがサブディレクトリに生成されるようにコマンドを呼び出す（VS IDEソリューションファイルなど）。ターゲット間の依存関係がこの除外に優先することに注意してください。親プロジェクトによってビルドされたターゲットがサブディレクトリ内のターゲットに依存している場合、依存関係を満たすために、依存先ターゲットが親プロジェクトのビルドシステムに含まれます。</target>
        </trans-unit>
        <trans-unit id="612dfc91330eed12cf8e9c8d4433a2fc59f69112" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;INHERITED&lt;/code&gt; option is given, then the &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-3-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt; command will chain up to the next higher scope when the requested property is not set in the scope given to the command.</source>
          <target state="translated">場合 &lt;code&gt;INHERITED&lt;/code&gt; オプションが指定され、その後、&lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-3-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; &lt;/a&gt;要求されたプロパティがコマンドに与えられた範囲内に設定されていない次のより高い範囲までのコマンドの意志チェーン。</target>
        </trans-unit>
        <trans-unit id="88ebba1c8ea161fb5d5e2741ab907eb160257684" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; argument is passed, this is used as base path to calculate all the relative paths. The &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; argument must be an absolute path. If this argument is not passed, the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable will be used instead. The default value is good when generating a FooConfig.cmake file to use your package from the install tree. When generating a FooConfig.cmake file to use your package from the build tree this option should be used.</source>
          <target state="translated">&lt;code&gt;INSTALL_PREFIX&lt;/code&gt; 引数が渡された場合、これはすべての相対パスを計算するためのベースパスとして使用されます。 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 引数は絶対パスでなければなりません。この引数が渡されない場合は、代わりに&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;変数が使用されます。デフォルトツリーは、FooConfig.cmakeファイルを生成して、インストールツリーからパッケージを使用する場合に適しています。ビルドツリーからパッケージを使用するためにFooConfig.cmakeファイルを生成する場合、このオプションを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="64279e21a7d26c7d1e69239ad7f7694b2573dbf6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;MODULE&lt;/code&gt; option is not specfied in the above signature, CMake first searches for the package using Module mode. Then, if the package is not found, it searches again using Config mode. A user may set the variable &lt;a href=&quot;../variable/cmake_find_package_prefer_config#variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_PREFER_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;TRUE&lt;/code&gt; to direct CMake first search using Config mode before falling back to Module mode.</source>
          <target state="translated">上記のシグネチャで &lt;code&gt;MODULE&lt;/code&gt; オプションが指定されていない場合、CMakeは最初にモジュールモードを使用してパッケージを検索します。次に、パッケージが見つからない場合は、構成モードを使用して再度検索します。ユーザーは、変数&lt;a href=&quot;../variable/cmake_find_package_prefer_config#variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_PREFER_CONFIG&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;TRUE&lt;/code&gt; に設定して、モジュールモードにフォールバックする前に、構成モードを使用してCMakeの最初の検索を指示できます。</target>
        </trans-unit>
        <trans-unit id="42f6f8b192382b7a7b6cf8792663ac10c34c1a95" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;MODULE&lt;/code&gt; option is not specified in the above signature, CMake first searches for the package using Module mode. Then, if the package is not found, it searches again using Config mode. A user may set the variable &lt;a href=&quot;../variable/cmake_find_package_prefer_config#variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_PREFER_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;TRUE&lt;/code&gt; to direct CMake first search using Config mode before falling back to Module mode.</source>
          <target state="translated">上記の署名で &lt;code&gt;MODULE&lt;/code&gt; オプションが指定されていない場合、CMakeは最初にモジュールモードを使用してパッケージを検索します。次に、パッケージが見つからない場合は、構成モードを使用して再度検索します。ユーザーは、変数&lt;a href=&quot;../variable/cmake_find_package_prefer_config#variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_PREFER_CONFIG&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_PREFER_CONFIG&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;TRUE&lt;/code&gt; に設定して、モジュールモードにフォールバックする前に、構成モードを使用してCMakeの最初の検索を指示できます。</target>
        </trans-unit>
        <trans-unit id="9648b83f1bad51b37424088974b5cbf3e0313f7d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;NO_DEPENDS&lt;/code&gt; option is specified, the step target will not depend on the dependencies of the external project (i.e. on any dependencies of the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; custom target created by &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;). This is usually safe for the &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt; steps, since they do not typically require that the dependencies are updated and built. Using &lt;code&gt;NO_DEPENDS&lt;/code&gt; for any of the other pre-defined steps, however, may break parallel builds. Only use &lt;code&gt;NO_DEPENDS&lt;/code&gt; where it is certain that the named steps genuinely do not have dependencies. For custom steps, consider whether or not the custom commands require the dependencies to be configured, built and installed.</source>
          <target state="translated">場合 &lt;code&gt;NO_DEPENDS&lt;/code&gt; のオプションが指定され、ステップの目標は、（のいずれかの依存関係、すなわち外部プロジェクトの依存関係に依存しません &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; によって作成されたカスタムターゲット&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;）。通常、依存関係を更新してビルドする必要がないため、 &lt;code&gt;download&lt;/code&gt; 、 &lt;code&gt;update&lt;/code&gt; 、 &lt;code&gt;patch&lt;/code&gt; 手順は安全です。ただし、他の事前定義されたステップのいずれかで &lt;code&gt;NO_DEPENDS&lt;/code&gt; を使用すると、並列ビルドが中断する可能性があります。 &lt;code&gt;NO_DEPENDS&lt;/code&gt; のみを使用名前付きのステップが本当に依存関係を持たないことが確実な場合。カスタムステップについては、カスタムコマンドで依存関係を構成、構築、インストールする必要があるかどうかを検討してください。</target>
        </trans-unit>
        <trans-unit id="30d2ddbcab2f19a67f471cb639a405b338e0cb82" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;PARENT_SCOPE&lt;/code&gt; option is given the variable will be set in the scope above the current scope. Each new directory or function creates a new scope. This command will set the value of a variable into the parent directory or calling function (whichever is applicable to the case at hand). The previous state of the variable&amp;rsquo;s value stays the same in the current scope (e.g., if it was undefined before, it is still undefined and if it had a value, it is still that value).</source>
          <target state="translated">場合 &lt;code&gt;PARENT_SCOPE&lt;/code&gt; オプションが指定された変数は、現在のスコープ上記の範囲に設定されます。新しいディレクトリまたは関数ごとに新しいスコープが作成されます。このコマンドは、変数の値を親ディレクトリまたは呼び出し元の関数に設定します（現在のケースに該当する方）。変数の値の以前の状態は、現在のスコープ内で同じままです（たとえば、以前に定義されていなかった場合、それは未定義であり、値があった場合でも、その値です）。</target>
        </trans-unit>
        <trans-unit id="9afab6f67fc04819ba850074a45b394deefc743e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;QUIET_ON_EMPTY&lt;/code&gt; option is used, if only one type of package was requested, and no packages belonging to that category were found, then no output (including the &lt;code&gt;DESCRIPTION&lt;/code&gt;) is printed or added to the &lt;code&gt;VAR&lt;/code&gt; variable.</source>
          <target state="translated">場合 &lt;code&gt;QUIET_ON_EMPTY&lt;/code&gt; のオプションが使用されているパッケージの一種類のみが要求された、そしてそのカテゴリに属する一切のパッケージが見つからなかった場合は、その後、（を含む何も出力 &lt;code&gt;DESCRIPTION&lt;/code&gt; は）印刷されないかに追加された &lt;code&gt;VAR&lt;/code&gt; の変数。</target>
        </trans-unit>
        <trans-unit id="914314f70eac980ec014938b5b8595c651d89dce" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;SET&lt;/code&gt; option is given the variable is set to a boolean value indicating whether the property has been set. If the &lt;code&gt;DEFINED&lt;/code&gt; option is given the variable is set to a boolean value indicating whether the property has been defined such as with the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">場合 &lt;code&gt;SET&lt;/code&gt; のオプションが指定された変数は、プロパティが設定されているかどうかを示すブール値に設定されています。場合 &lt;code&gt;DEFINED&lt;/code&gt; オプションが指定された変数は、プロパティは、のように定義されているかどうかを示すブール値に設定されている&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-1-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;コマンド。</target>
        </trans-unit>
        <trans-unit id="30165bc362af77b1c1f9688b6b04fa5a20876aa2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;SOURCE_DATE_EPOCH&lt;/code&gt; environment variable is set, its value will be used instead of the current time. See &lt;a href=&quot;https://reproducible-builds.org/specs/source-date-epoch/&quot;&gt;https://reproducible-builds.org/specs/source-date-epoch/&lt;/a&gt; for details.</source>
          <target state="translated">場合 &lt;code&gt;SOURCE_DATE_EPOCH&lt;/code&gt; の環境変数が設定され、その値ではなく、現在の時刻で使用されます。詳細については、&lt;a href=&quot;https://reproducible-builds.org/specs/source-date-epoch/&quot;&gt;https：//reproducible-builds.org/specs/source-date-epoch/&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4bd6972740f597018508b2c092ce10433e6d5fea" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;SYSTEM&lt;/code&gt; option is given, the compiler will be told the directories are meant as system include directories on some platforms. Signalling this setting might achieve effects such as the compiler skipping warnings, or these fixed-install system files not being considered in dependency calculations - see compiler docs.</source>
          <target state="translated">&lt;code&gt;SYSTEM&lt;/code&gt; オプションが指定されている場合、一部のプラットフォームでは、システムインクルードディレクトリとしてディレクトリが意図されていることがコンパイラーに通知されます。この設定を通知すると、コンパイラが警告をスキップする、またはこれらの固定インストールシステムファイルが依存関係の計算で考慮されないなどの影響が生じる可能性があります。コンパイラのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="eb7a98fc24f3b4bb6be9f96344b8c19e843e5ab3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;moc&lt;/code&gt; output file of a header is included by a source, it will be generated in a different location than if it was not included. This is described in the section &lt;a href=&quot;#output-file-location&quot;&gt;Output file location&lt;/a&gt;.</source>
          <target state="translated">ヘッダーの &lt;code&gt;moc&lt;/code&gt; 出力ファイルがソースに含まれている場合、含まれていない場合とは異なる場所に生成されます。これについては、「&lt;a href=&quot;#output-file-location&quot;&gt;出力ファイルの場所」で&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="7bedfd205b0a3f42156b2645185355c17f1155b0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;query.json&lt;/code&gt; file &lt;code&gt;requests&lt;/code&gt; member is missing or invalid, this member is a JSON object with a single &lt;code&gt;error&lt;/code&gt; member containing a string with an error message. Otherwise, this member contains a JSON array with a response for each entry of the &lt;code&gt;requests&lt;/code&gt; array, in the same order. Each response is</source>
          <target state="translated">場合 &lt;code&gt;query.json&lt;/code&gt; ファイルの &lt;code&gt;requests&lt;/code&gt; メンバーがないか、無効ですが、このメンバーは単一でJSONオブジェクトで &lt;code&gt;error&lt;/code&gt; 、エラーメッセージの文字列を含むメンバー。それ以外の場合、このメンバーには、 &lt;code&gt;requests&lt;/code&gt; 配列の各エントリに対する応答を同じ順序で含むJSON配列が含まれます。各応答は</target>
        </trans-unit>
        <trans-unit id="cf32e6dced5532dbeb69dc080165053934332908" translate="yes" xml:space="preserve">
          <source>If the CMake generator is the &lt;code&gt;Green Hills MULTI&lt;/code&gt; and not overridden then the orginal projects settings for the GHS toolset and target system customization cache variables are propagated into the external project.</source>
          <target state="translated">CMakeジェネレーターが &lt;code&gt;Green Hills MULTI&lt;/code&gt; であり、オーバーライドされていない場合、GHSツールセットの元のプロジェクト設定とターゲットシステムのカスタマイズキャッシュ変数が外部プロジェクトに伝達されます。</target>
        </trans-unit>
        <trans-unit id="7aa02b08f683e3b9754fad40365c97bf16a5ce42" translate="yes" xml:space="preserve">
          <source>If the CMake generator is the &lt;code&gt;Green Hills MULTI&lt;/code&gt; and not overridden then the original project&amp;rsquo;s settings for the GHS toolset and target system customization cache variables are propagated into the external project.</source>
          <target state="translated">CMakeジェネレーターがGreenHills &lt;code&gt;Green Hills MULTI&lt;/code&gt; あり、オーバーライドされていない場合、GHSツールセットおよびターゲットシステムのカスタマイズキャッシュ変数に対する元のプロジェクトの設定は、外部プロジェクトに伝播されます。</target>
        </trans-unit>
        <trans-unit id="2dda889ff51a8ce1be56bcfb82d179de998a12e3" translate="yes" xml:space="preserve">
          <source>If the CUDA_PATH environment variable is defined, it will be searched for &lt;code&gt;nvcc&lt;/code&gt;.</source>
          <target state="translated">CUDA_PATH環境変数が定義されている場合は、 &lt;code&gt;nvcc&lt;/code&gt; が検索されます。</target>
        </trans-unit>
        <trans-unit id="bce5d569f1d441e714f9fc634e609f93412a8cb0" translate="yes" xml:space="preserve">
          <source>If the GLVND OpenGL and GLX libraries are available, prefer them. This forces &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt; to be empty. This is the default if components were requested (since components correspond to GLVND libraries) or if policy &lt;a href=&quot;../policy/cmp0072#policy:CMP0072&quot; id=&quot;index-0-policy:CMP0072&quot;&gt;&lt;code&gt;CMP0072&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">GLVND OpenGLおよびGLXライブラリが利用可能な場合は、それらを優先します。これにより、 &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt; が強制的に空になります。コンポーネントが要求された場合（コンポーネントがGLVNDライブラリに対応するため）、またはポリシー&lt;a href=&quot;../policy/cmp0072#policy:CMP0072&quot; id=&quot;index-0-policy:CMP0072&quot;&gt; &lt;code&gt;CMP0072&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;NEW&lt;/code&gt; に設定されている場合、これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="14939988c62a966844fa6c581fe15b05439214db" translate="yes" xml:space="preserve">
          <source>If the argument is a relative path and it exists in the current source directory, a file-level dependency is created on that file in the current source directory.</source>
          <target state="translated">引数が相対パスで、それがカレント・ソース・ディレクトリに存在する場合、カレント・ソース・ディレクトリ内のそのファイルにファイルレベルの依存関係が作成されます。</target>
        </trans-unit>
        <trans-unit id="b33b760f7acd8416cd2c7b6a46f2034fb6702bf9" translate="yes" xml:space="preserve">
          <source>If the argument is an absolute path, a file-level dependency is created on that path.</source>
          <target state="translated">引数が絶対パスの場合、そのパス上にファイルレベルの依存関係が作成されます。</target>
        </trans-unit>
        <trans-unit id="c9a6f2272461199fd0c5cb8b4362b7cd32d8539c" translate="yes" xml:space="preserve">
          <source>If the argument is the name of a source file that has been added to a target or on which a source file property has been set, a file-level dependency is created on that source file.</source>
          <target state="translated">引数がターゲットに追加されたソース・ファイル名、またはソース・ファイル・プロパティが設定されたソース・ファイル名の場合、そのソース・ファイルにファイルレベルの依存関係が作成されます。</target>
        </trans-unit>
        <trans-unit id="517435c5456f5797ac46708153a43e71aecc0dd9" translate="yes" xml:space="preserve">
          <source>If the argument is the name of a target (created by the &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command) a target-level dependency is created to make sure the target is built before any target using this custom command. Additionally, if the target is an executable or library, a file-level dependency is created to cause the custom command to re-run whenever the target is recompiled.</source>
          <target state="translated">引数がターゲットの名前（&lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;コマンドによって作成される）の場合、ターゲットレベルの依存関係が作成され、このカスタムコマンドを使用してターゲットがターゲットの前にビルドされるようにします。さらに、ターゲットが実行可能ファイルまたはライブラリの場合、ファイルレベルの依存関係が作成され、ターゲットが再コンパイルされるたびにカスタムコマンドが再実行されます。</target>
        </trans-unit>
        <trans-unit id="127f440d15138216f83961a135ae42956d155176" translate="yes" xml:space="preserve">
          <source>If the cache entry does not exist prior to the call or the &lt;code&gt;FORCE&lt;/code&gt; option is given then the cache entry will be set to the given value. Furthermore, any normal variable binding in the current scope will be removed to expose the newly cached value to any immediately following evaluation.</source>
          <target state="translated">呼び出しの前にキャッシュエントリが存在しないか、 &lt;code&gt;FORCE&lt;/code&gt; オプションが指定されている場合、キャッシュエントリは指定された値に設定されます。さらに、現在のスコープ内の通常の変数バインディングは削除され、新しくキャッシュされた値が直後の評価に公開されます。</target>
        </trans-unit>
        <trans-unit id="056a82e56fc2bbae7440dc4c505b10604d660059" translate="yes" xml:space="preserve">
          <source>If the command is unable to obtain a timestamp, the &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; will be set to the empty string &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">コマンドがタイムスタンプを取得できない場合、 &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; は空の文字列 &lt;code&gt;&quot;&quot;&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="78c30fffd9009e745843799c6fc686e52d950153" translate="yes" xml:space="preserve">
          <source>If the command line client executable is found the following macro is defined:</source>
          <target state="translated">コマンドラインクライアント実行ファイルが見つかった場合、以下のマクロが定義されています。</target>
        </trans-unit>
        <trans-unit id="8ee68900ff2dd86077ac8e980b9bce723367a651" translate="yes" xml:space="preserve">
          <source>If the command line client executable is found two macros are defined:</source>
          <target state="translated">コマンドラインクライアント実行ファイルが見つかった場合、2つのマクロが定義されています。</target>
        </trans-unit>
        <trans-unit id="f2aa3a8ec48e1ef00eb148ee9c39b77423c045ce" translate="yes" xml:space="preserve">
          <source>If the component &lt;code&gt;Development&lt;/code&gt; is requested, it is &lt;strong&gt;strongly&lt;/strong&gt; recommended to also include the component &lt;code&gt;Interpreter&lt;/code&gt; to get expected result.</source>
          <target state="translated">コンポーネント &lt;code&gt;Development&lt;/code&gt; が要求された場合、期待される結果を得るためにコンポーネント &lt;code&gt;Interpreter&lt;/code&gt; も含めることを&lt;strong&gt;強く&lt;/strong&gt;お勧めします。</target>
        </trans-unit>
        <trans-unit id="0746bb15856aff956a9f8399555685028e89f583" translate="yes" xml:space="preserve">
          <source>If the configuration type is set via &lt;code&gt;-C &amp;lt;cfg&amp;gt;&lt;/code&gt; from the command line then this variable is populated accordingly.</source>
          <target state="translated">構成タイプがコマンドラインから &lt;code&gt;-C &amp;lt;cfg&amp;gt;&lt;/code&gt; を介して設定されている場合、この変数はそれに応じて入力されます。</target>
        </trans-unit>
        <trans-unit id="a786d18d9166e14b02a2996c15c4d2de0163d05c" translate="yes" xml:space="preserve">
          <source>If the configure step assumed the external project uses CMake as its build system, the build step will also. Otherwise, the build step will assume a Makefile-based build and simply run &lt;code&gt;make&lt;/code&gt; with no arguments as the default build step. This can be overridden with custom build commands if required.</source>
          <target state="translated">構成ステップで外部プロジェクトがビルドシステムとしてCMakeを使用すると想定した場合、ビルドステップでも使用されます。それ以外の場合、ビルドステップはMakefileベースのビルドを想定し、デフォルトのビルドステップとして引数なしで単に &lt;code&gt;make&lt;/code&gt; を実行します。これは、必要に応じてカスタムビルドコマンドでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="da9730129890fa0cd9f6e7d2e948b4e5d9e1f010" translate="yes" xml:space="preserve">
          <source>If the configure step assumed the external project uses CMake as its build system, the install step will also. Otherwise, the install step will assume a Makefile-based build and simply run &lt;code&gt;make install&lt;/code&gt; as the default build step. This can be overridden with custom install commands if required.</source>
          <target state="translated">構成ステップで外部プロジェクトがビルドシステムとしてCMakeを使用すると想定した場合、インストールステップでもCMakeが使用されます。それ以外の場合、インストール手順ではMakefileベースのビルドを想定し、デフォルトのビルド手順として &lt;code&gt;make install&lt;/code&gt; を実行します。これは、必要に応じてカスタムインストールコマンドでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="19b312103b6a0fa603fb35d087009ae86c954f9a" translate="yes" xml:space="preserve">
          <source>If the dependency could not be found it sets an informative diagnostic message and calls &lt;a href=&quot;../command/return#command:return&quot; id=&quot;index-0-command:return&quot;&gt;&lt;code&gt;return()&lt;/code&gt;&lt;/a&gt; to end processing of the calling package configuration file and return to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command that loaded it.</source>
          <target state="translated">依存関係が見つからなかった場合、それは有益な診断メッセージを設定し、&lt;a href=&quot;../command/return#command:return&quot; id=&quot;index-0-command:return&quot;&gt; &lt;code&gt;return()&lt;/code&gt; &lt;/a&gt;を呼び出して、呼び出し元のパッケージ構成ファイルの処理を終了し、それをロードした&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;コマンドに戻ります。</target>
        </trans-unit>
        <trans-unit id="96fae9af91a51f71db660ede5fbb6107ac3c8d2d" translate="yes" xml:space="preserve">
          <source>If the dependency is found, and its full path does not match either &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt; or &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt;, the full path is added to the resolved dependencies, and &lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; recursively resolves that library&amp;rsquo;s own dependencies.</source>
          <target state="translated">依存関係が見つかり、そのフルパスが &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt; または &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt; のいずれにも一致しない場合、フルパスが解決された依存関係に追加され、 &lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; がそのライブラリ自体の依存関係を再帰的に解決します。</target>
        </trans-unit>
        <trans-unit id="0d3d2575880313387bb2d12a2352ddada4de6b2c" translate="yes" xml:space="preserve">
          <source>If the dependency is found, and its full path matches one of the &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt;, the full path is added to the resolved dependencies, and &lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; recursively resolves that library&amp;rsquo;s own dependencies. Otherwise, resolution proceeds to step 6.</source>
          <target state="translated">依存関係が見つかり、そのフルパスが &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt; のいずれかに一致する場合、フルパスが解決された依存関係に追加され、 &lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; がそのライブラリー自体の依存関係を再帰的に解決します。それ以外の場合、解決はステップ6に進みます。</target>
        </trans-unit>
        <trans-unit id="89909557c3e9823498a99f911b0661cff9186cf4" translate="yes" xml:space="preserve">
          <source>If the dependency is found, but its full path matches one of the &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt;, it is not added to the resolved dependencies, and dependency resolution stops for that dependency.</source>
          <target state="translated">依存関係が見つかったが、そのフルパスが &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt; のいずれかに一致する場合、その依存関係は解決された依存関係に追加されず、その依存関係の依存関係の解決は停止します。</target>
        </trans-unit>
        <trans-unit id="045ccc0597846f5d7d3fa926e21d9f9e8dc6e941" translate="yes" xml:space="preserve">
          <source>If the dependency starts with &lt;code&gt;@executable_path/&lt;/code&gt;, and an &lt;code&gt;EXECUTABLES&lt;/code&gt; argument is in the process of being resolved, and replacing &lt;code&gt;@executable_path/&lt;/code&gt; with the directory of the executable yields an existing file, the dependency is resolved to that file.</source>
          <target state="translated">依存関係が &lt;code&gt;EXECUTABLES&lt;/code&gt; &lt;code&gt;@executable_path/&lt;/code&gt; で始まり、EXECUTABLES引数が解決中の場合、@ executeable_path &lt;code&gt;@executable_path/&lt;/code&gt; を実行可能ファイルのディレクトリに置き換えると、既存のファイルが生成され、依存関係はそのファイルに解決されます。</target>
        </trans-unit>
        <trans-unit id="f901bbe545c313c01ae1b78203f0d2794d3c408d" translate="yes" xml:space="preserve">
          <source>If the depending file does not have any &lt;code&gt;RUNPATH&lt;/code&gt; entries, and the library exists in one of the depending file&amp;rsquo;s &lt;code&gt;RPATH&lt;/code&gt; entries, or its parents&amp;rsquo;, in that order, the dependency is resolved to that file.</source>
          <target state="translated">依存ファイルに &lt;code&gt;RUNPATH&lt;/code&gt; エントリがなく、ライブラリが依存ファイルの &lt;code&gt;RPATH&lt;/code&gt; エントリの1つ、またはその親の順序で存在する場合、依存関係はそのファイルに解決されます。</target>
        </trans-unit>
        <trans-unit id="2d2cc8186868c77569de1bc1f17461e52dd033e3" translate="yes" xml:space="preserve">
          <source>If the directory doesn&amp;rsquo;t already exist CMake will make it.</source>
          <target state="translated">ディレクトリがまだ存在しない場合、CMakeが作成します。</target>
        </trans-unit>
        <trans-unit id="4c31e21e8a219fa31aeaa8c1577f2491c58b1e5e" translate="yes" xml:space="preserve">
          <source>If the file is a build input, use the &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; command to update the file only when its content changes.</source>
          <target state="translated">ファイルがビルド入力の場合は、&lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt;コマンドを使用して、内容が変更されたときにのみファイルを更新します。</target>
        </trans-unit>
        <trans-unit id="fee07055472b9e2cc033acb1218d21549d5cc062" translate="yes" xml:space="preserve">
          <source>If the find procedure fails for a variable &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_WORKS&lt;/code&gt;, then the settings detected by or passed to the module did not work and even a simple MPI test program failed to compile.</source>
          <target state="translated">変数 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_WORKS&lt;/code&gt; の検索手順が失敗すると、モジュールによって検出された、またはモジュールに渡された設定が機能せず、単純なMPIテストプログラムでもコンパイルに失敗しました。</target>
        </trans-unit>
        <trans-unit id="f4db254792119b926535d35f67a261b159bcc013" translate="yes" xml:space="preserve">
          <source>If the following variables are set to true, the respective search will be performed:</source>
          <target state="translated">以下の変数を真に設定すると、それぞれの検索を行います。</target>
        </trans-unit>
        <trans-unit id="b4c5f8892911b9443b21b3c7da7d01c077944d90" translate="yes" xml:space="preserve">
          <source>If the found thread library is pthread compatible.</source>
          <target state="translated">見つかったスレッドライブラリが pthread と互換性がある場合。</target>
        </trans-unit>
        <trans-unit id="9d5fe9b452c697badf81668a9efee5c4a2c3abcd" translate="yes" xml:space="preserve">
          <source>If the found thread library is the HP thread library.</source>
          <target state="translated">見つかったスレッドライブラリがHPスレッドライブラリの場合。</target>
        </trans-unit>
        <trans-unit id="55f03b1760a021f61ef39912bc60b9bc89d58ca8" translate="yes" xml:space="preserve">
          <source>If the found thread library is the win32 one.</source>
          <target state="translated">見つかったスレッドライブラリが win32 の場合。</target>
        </trans-unit>
        <trans-unit id="8afc21ba3b19f5017930dbea305ddfdc14be6e22" translate="yes" xml:space="preserve">
          <source>If the generator supports &lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt;&lt;/a&gt;, this is a string specifying the generator platform name.</source>
          <target state="translated">ジェネレーターが&lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt; を&lt;/a&gt;サポートする場合、これはジェネレーターのプラットフォーム名を指定する文字列です。</target>
        </trans-unit>
        <trans-unit id="2ac777367b9e5b8ae469973518aacfb56e0a0582" translate="yes" xml:space="preserve">
          <source>If the generator supports configuration types, then &lt;code&gt;basename_LIBRARY&lt;/code&gt; and &lt;code&gt;basename_LIBRARIES&lt;/code&gt; will be set with debug and optimized flags specifying the library to be used for the given configuration. If no build type has been set or the generator in use does not support configuration types, then &lt;code&gt;basename_LIBRARY&lt;/code&gt; and &lt;code&gt;basename_LIBRARIES&lt;/code&gt; will take only the release value, or the debug value if the release one is not set.</source>
          <target state="translated">ジェネレーターが構成タイプをサポートする場合、 &lt;code&gt;basename_LIBRARY&lt;/code&gt; および &lt;code&gt;basename_LIBRARIES&lt;/code&gt; には、指定された構成に使用されるライブラリーを指定するデバッグおよび最適化フラグが設定されます。ビルドタイプが設定されていないか、使用中のジェネレーターが設定タイプをサポートしていない場合、 &lt;code&gt;basename_LIBRARY&lt;/code&gt; および &lt;code&gt;basename_LIBRARIES&lt;/code&gt; はリリース値のみ、またはリリース値が設定されていない場合はデバッグ値を取得します。</target>
        </trans-unit>
        <trans-unit id="8a825cfea9a15f0e3c5d7b7b6c20bcefb75639c7" translate="yes" xml:space="preserve">
          <source>If the header files define the symbol as a macro it is considered available and assumed to work. If the header files declare the symbol as a function or variable then the symbol must also be available for linking (so intrinsics may not be detected). If the symbol is a type, enum value, or intrinsic it will not be recognized (consider using &lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt;&lt;code&gt;CheckTypeSize&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;checkcsourcecompiles#module:CheckCSourceCompiles&quot; id=&quot;index-0-module:CheckCSourceCompiles&quot;&gt;&lt;code&gt;CheckCSourceCompiles&lt;/code&gt;&lt;/a&gt;). If the check needs to be done in C++, consider using &lt;a href=&quot;checkcxxsymbolexists#module:CheckCXXSymbolExists&quot; id=&quot;index-0-module:CheckCXXSymbolExists&quot;&gt;&lt;code&gt;CheckCXXSymbolExists&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ヘッダーファイルでシンボルがマクロとして定義されている場合、そのシンボルは使用可能であると見なされ、機能すると見なされます。ヘッダーファイルでシンボルが関数または変数として宣言されている場合、そのシンボルもリンクに使用できる必要があります（そのため、組み込み関数が検出されない場合があります）。シンボルがタイプ、列挙値、または組み込みの場合、認識されません（&lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt; &lt;code&gt;CheckTypeSize&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;checkcsourcecompiles#module:CheckCSourceCompiles&quot; id=&quot;index-0-module:CheckCSourceCompiles&quot;&gt; &lt;code&gt;CheckCSourceCompiles&lt;/code&gt; の&lt;/a&gt;使用を検討してください）。チェックをC ++で行う必要がある場合は、代わりに&lt;a href=&quot;checkcxxsymbolexists#module:CheckCXXSymbolExists&quot; id=&quot;index-0-module:CheckCXXSymbolExists&quot;&gt; &lt;code&gt;CheckCXXSymbolExists&lt;/code&gt; の&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="b39d20d6c179691c6022701af9ee3dbb591179c6" translate="yes" xml:space="preserve">
          <source>If the header files define the symbol as a macro it is considered available and assumed to work. If the header files declare the symbol as a function or variable then the symbol must also be available for linking. If the symbol is a type or enum value it will not be recognized (consider using &lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt;&lt;code&gt;CheckTypeSize&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt;&lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">ヘッダーファイルでシンボルがマクロとして定義されている場合、そのシンボルは使用可能であると見なされ、機能すると見なされます。ヘッダーファイルでシンボルが関数または変数として宣言されている場合は、そのシンボルもリンクに使用できる必要があります。シンボルがタイプまたは列挙値の場合、認識されません（&lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt; &lt;code&gt;CheckTypeSize&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt; &lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt; の&lt;/a&gt;使用を検討してください）。</target>
        </trans-unit>
        <trans-unit id="0247aaa07bb083238e1b60c52cf5dc6297cbe6d7" translate="yes" xml:space="preserve">
          <source>If the header files define the symbol as a macro it is considered available and assumed to work. If the header files declare the symbol as a function or variable then the symbol must also be available for linking. If the symbol is a type, enum value, or C++ template it will not be recognized: consider using the &lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt;&lt;code&gt;CheckTypeSize&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt;&lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">ヘッダーファイルがシンボルをマクロとして定義している場合、それは使用可能であると見なされ、機能すると見なされます。ヘッダーファイルがシンボルを関数または変数として宣言している場合、そのシンボルはリンクにも使用できる必要があります。シンボルがタイプ、列挙値、またはC ++テンプレートの場合、認識されません。代わりに、&lt;a href=&quot;checktypesize#module:CheckTypeSize&quot; id=&quot;index-0-module:CheckTypeSize&quot;&gt; &lt;code&gt;CheckTypeSize&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt; &lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt; &lt;/a&gt;モジュールの使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="7e4bcaa007503c90e98f66c3dcb2f0f1a74bbeb9" translate="yes" xml:space="preserve">
          <source>If the imported project has different configuration names than the current project, set the &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property to specify the mapping.</source>
          <target state="translated">インポートされたプロジェクトの構成名が現在のプロジェクトと異なる場合は、 &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; ターゲットプロパティを設定してマッピングを指定します。</target>
        </trans-unit>
        <trans-unit id="8ef37225d4c049b47efcf19609de88c0aa83b198" translate="yes" xml:space="preserve">
          <source>If the includer does not define a value the above-shown default will be used and the value will appear in the cache for editing by the user.</source>
          <target state="translated">includer が値を定義していない場合は、 上に示したデフ ォル ト が使われ、 その値はユーザーが編集できるようにキャッシュに表示されます。</target>
        </trans-unit>
        <trans-unit id="7229063fd8f5d9edc3e5dcf86b3b6c20d714e674" translate="yes" xml:space="preserve">
          <source>If the input file is modified the build system will re-run CMake to re-configure the file and generate the build system again. The generated file is modified and its timestamp updated on subsequent cmake runs only if its content is changed.</source>
          <target state="translated">入力ファイルが変更された場合、ビルドシステムはCMakeを再実行してファイルを再設定し、ビルドシステムを再生成します。生成されたファイルは内容が変更された場合にのみ変更され、その後の cmake の実行でタイムスタンプが更新されます。</target>
        </trans-unit>
        <trans-unit id="9bd95d4375c3f59407ec5ad3ad61f53d1415f21c" translate="yes" xml:space="preserve">
          <source>If the keyword &lt;code&gt;CLEAR&lt;/code&gt; is given then advanced variables are changed back to unadvanced. If the keyword &lt;code&gt;FORCE&lt;/code&gt; is given then the variables are made advanced. If neither &lt;code&gt;FORCE&lt;/code&gt; nor &lt;code&gt;CLEAR&lt;/code&gt; is specified, new values will be marked as advanced, but if a variable already has an advanced/non-advanced state, it will not be changed.</source>
          <target state="translated">キーワード &lt;code&gt;CLEAR&lt;/code&gt; を指定すると、高度な変数が高度でない変数に戻ります。キーワード &lt;code&gt;FORCE&lt;/code&gt; を指定すると、変数が拡張されます。 &lt;code&gt;FORCE&lt;/code&gt; も &lt;code&gt;CLEAR&lt;/code&gt; も指定されていない場合、新しい値は拡張としてマークされますが、変数がすでに拡張/非拡張状態になっている場合は、変更されません。</target>
        </trans-unit>
        <trans-unit id="aa11ec4d2c499822b4a97b8ea66028083c29ce86" translate="yes" xml:space="preserve">
          <source>If the left hand argument to &lt;code&gt;MATCHES&lt;/code&gt; is missing it returns false without error</source>
          <target state="translated">&lt;code&gt;MATCHES&lt;/code&gt; の左側の引数がない場合、エラーなしでfalseを返します</target>
        </trans-unit>
        <trans-unit id="ca976db296b62307634ed55538b2f60d1382ba12" translate="yes" xml:space="preserve">
          <source>If the libexslt library has been found</source>
          <target state="translated">libexslt ライブラリが見つかった場合</target>
        </trans-unit>
        <trans-unit id="c5d69bb2712516e28654ad76b4e35e57ab49a21f" translate="yes" xml:space="preserve">
          <source>If the library file is in a macOS framework, the &lt;code&gt;Headers&lt;/code&gt; directory of the framework will also be processed as a &lt;a href=&quot;../manual/cmake-buildsystem.7#target-usage-requirements&quot;&gt;usage requirement&lt;/a&gt;. This has the same effect as passing the framework directory as an include directory.</source>
          <target state="translated">ライブラリファイルがmacOSフレームワークにある場合、フレームワークの &lt;code&gt;Headers&lt;/code&gt; ディレクトリも&lt;a href=&quot;../manual/cmake-buildsystem.7#target-usage-requirements&quot;&gt;使用要件&lt;/a&gt;として処理されます。これは、フレームワークディレクトリをインクルードディレクトリとして渡すのと同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="a6aeaf755f136d2fa24e2f379337a38f35766919" translate="yes" xml:space="preserve">
          <source>If the library found is a framework, then &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; will be set to the full path to the framework &lt;code&gt;&amp;lt;fullPath&amp;gt;/A.framework&lt;/code&gt;. When a full path to a framework is used as a library, CMake will use a &lt;code&gt;-framework A&lt;/code&gt;, and a &lt;code&gt;-F&amp;lt;fullPath&amp;gt;&lt;/code&gt; to link the framework to the target.</source>
          <target state="translated">見つかったライブラリがフレームワークである場合、 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; はフレームワークへのフルパス &lt;code&gt;&amp;lt;fullPath&amp;gt;/A.framework&lt;/code&gt; に設定されます。フレームワークへのフルパスがライブラリとして使用される場合、CMakeは &lt;code&gt;-framework A&lt;/code&gt; と &lt;code&gt;-F&amp;lt;fullPath&amp;gt;&lt;/code&gt; を使用してフレームワークをターゲットにリンクします。</target>
        </trans-unit>
        <trans-unit id="480a847a4ec0873d542be0e2f0a384a20681eb86" translate="yes" xml:space="preserve">
          <source>If the library is available with multiple configurations, the &lt;a href=&quot;../prop_tgt/imported_configurations#prop_tgt:IMPORTED_CONFIGURATIONS&quot; id=&quot;index-0-prop_tgt:IMPORTED_CONFIGURATIONS&quot;&gt;&lt;code&gt;IMPORTED_CONFIGURATIONS&lt;/code&gt;&lt;/a&gt; target property should also be populated:</source>
          <target state="translated">ライブラリが複数の構成で使用できる場合は、&lt;a href=&quot;../prop_tgt/imported_configurations#prop_tgt:IMPORTED_CONFIGURATIONS&quot; id=&quot;index-0-prop_tgt:IMPORTED_CONFIGURATIONS&quot;&gt; &lt;code&gt;IMPORTED_CONFIGURATIONS&lt;/code&gt; &lt;/a&gt;ターゲットプロパティも設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="18ab6b8361de4008028c2f9094dfd98c10e35918" translate="yes" xml:space="preserve">
          <source>If the library type is not specified, &lt;code&gt;MODULE&lt;/code&gt; is assumed.</source>
          <target state="translated">ライブラリタイプが指定されていない場合、 &lt;code&gt;MODULE&lt;/code&gt; が想定されます。</target>
        </trans-unit>
        <trans-unit id="663c4b7e7b52b37ae8fb04dd7eeb5e583e7b583f" translate="yes" xml:space="preserve">
          <source>If the libxml2 library has been found</source>
          <target state="translated">libxml2 ライブラリが見つかった場合</target>
        </trans-unit>
        <trans-unit id="23c81ae610c85776879a16001183eedc839bc079" translate="yes" xml:space="preserve">
          <source>If the libxslt library has been found</source>
          <target state="translated">libxslt ライブラリが見つかった場合</target>
        </trans-unit>
        <trans-unit id="dddd335c9713542e2b0a86e70bfd6a602fa49036" translate="yes" xml:space="preserve">
          <source>If the local clone already has the commit corresponding to the hash, no &lt;code&gt;git fetch&lt;/code&gt; needs to be performed to check for changes each time CMake is re-run. This can result in a significant speed up if many external projects are being used.</source>
          <target state="translated">ローカルクローンにすでにハッシュに対応するコミットがある場合、CMakeが再実行されるたびに変更を確認するために &lt;code&gt;git fetch&lt;/code&gt; を実行する必要はありません。これにより、多くの外部プロジェクトが使用されている場合、速度が大幅に向上します。</target>
        </trans-unit>
        <trans-unit id="9dbec8e724da2f9299c8c428ab998999af78c556" translate="yes" xml:space="preserve">
          <source>If the mangling for some symbol is not known then no preprocessor definition is created, and a warning is displayed.</source>
          <target state="translated">あるシンボルのマングリングがわからない場合は、プリプロセッサ定義が作成されず、警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="de117eaafe839a260ce801f2587f20f0632b8a94" translate="yes" xml:space="preserve">
          <source>If the not-yet-resolved dependency matches any of the &lt;code&gt;PRE_EXCLUDE_REGEXES&lt;/code&gt;, dependency resolution stops for that dependency.</source>
          <target state="translated">まだ解決されていない依存関係が &lt;code&gt;PRE_EXCLUDE_REGEXES&lt;/code&gt; のいずれかに一致する場合、その依存関係の依存関係の解決は停止します。</target>
        </trans-unit>
        <trans-unit id="4c0dca9c10124a53bf5e1c5b382b1989e566c5b5" translate="yes" xml:space="preserve">
          <source>If the not-yet-resolved dependency matches any of the &lt;code&gt;PRE_INCLUDE_REGEXES&lt;/code&gt;, steps 2 and 3 are skipped, and the dependency resolution proceeds to step 4.</source>
          <target state="translated">まだ解決されていない依存関係が &lt;code&gt;PRE_INCLUDE_REGEXES&lt;/code&gt; のいずれかに一致する場合、手順2と3はスキップされ、依存関係の解決は手順4に進みます。</target>
        </trans-unit>
        <trans-unit id="788a913d2f05d89c7266359583c99c4baec074a3" translate="yes" xml:space="preserve">
          <source>If the output matches this regular expression the test will be marked as skipped.</source>
          <target state="translated">出力がこの正規表現と一致する場合、テストはスキップされたものとしてマークされます。</target>
        </trans-unit>
        <trans-unit id="c15b6027a33ae314c140c72b5b4f6f0de1e84cb8" translate="yes" xml:space="preserve">
          <source>If the output matches this regular expression the test will fail.</source>
          <target state="translated">出力がこの正規表現と一致する場合、テストは失敗します。</target>
        </trans-unit>
        <trans-unit id="7b02991fb310a7ffdd348a7041053c496a66633b" translate="yes" xml:space="preserve">
          <source>If the package configuration file cannot be found CMake will generate an error describing the problem unless the &lt;code&gt;QUIET&lt;/code&gt; argument is specified. If &lt;code&gt;REQUIRED&lt;/code&gt; is specified and the package is not found a fatal error is generated and the configure step stops executing. If &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt; has been set to a directory not containing a configuration file CMake will ignore it and search from scratch.</source>
          <target state="translated">パッケージ構成ファイルが見つからない場合、 &lt;code&gt;QUIET&lt;/code&gt; 引数が指定されていないと、CMakeは問題を説明するエラーを生成します。 &lt;code&gt;REQUIRED&lt;/code&gt; が指定されていて、パッケージが見つからない場合、致命的なエラーが生成され、構成ステップの実行が停止します。 &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt; が構成ファイルを含まないディレクトリに設定されている場合、CMakeはそれを無視して最初から検索します。</target>
        </trans-unit>
        <trans-unit id="a9c8efb888f3779aec23b79c76d6e0ed90e9f5f1" translate="yes" xml:space="preserve">
          <source>If the package provides any macros or functions, they should be listed in an additional section, but can be documented by additional &lt;code&gt;.rst:&lt;/code&gt; comment blocks immediately above where those macros or functions are defined.</source>
          <target state="translated">パッケージがマクロまたは関数を提供する場合、それらは追加のセクションにリストされる必要がありますが、それらのマクロまたは関数が定義されている直前の追加の &lt;code&gt;.rst:&lt;/code&gt; コメントブロックによって文書化できます。</target>
        </trans-unit>
        <trans-unit id="0a0bafb9a8d90e13f8a9841521905d961585723f" translate="yes" xml:space="preserve">
          <source>If the platform has &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; then we will use them to compute the square root in the &lt;code&gt;mysqrt&lt;/code&gt; function. We first test for the availability of these functions using the &lt;a href=&quot;../../module/checksymbolexists#module:CheckSymbolExists&quot; id=&quot;index-0-module:CheckSymbolExists&quot;&gt;&lt;code&gt;CheckSymbolExists&lt;/code&gt;&lt;/a&gt; module in the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;. On some platforms, we will need to link to the m library. If &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; are not initially found, require the m library and try again.</source>
          <target state="translated">プラットフォームに &lt;code&gt;log&lt;/code&gt; と &lt;code&gt;exp&lt;/code&gt; がある場合は、それらを使用して &lt;code&gt;mysqrt&lt;/code&gt; 関数の平方根を計算します。最初に、トップレベルの &lt;code&gt;CMakeLists.txt&lt;/code&gt; の&lt;a href=&quot;../../module/checksymbolexists#module:CheckSymbolExists&quot; id=&quot;index-0-module:CheckSymbolExists&quot;&gt; &lt;code&gt;CheckSymbolExists&lt;/code&gt; &lt;/a&gt;モジュールを使用して、これらの関数の可用性をテストします。一部のプラットフォームでは、mライブラリにリンクする必要があります。 &lt;code&gt;log&lt;/code&gt; と &lt;code&gt;exp&lt;/code&gt; が最初に見つからない場合は、mライブラリが必要であり、再試行してください。</target>
        </trans-unit>
        <trans-unit id="884833f2e8da59fce1382e26656c1379a11b4480" translate="yes" xml:space="preserve">
          <source>If the project code does not set the policy explicitly, users may set it on the command line by defining the &lt;code&gt;CMAKE_POLICY_DEFAULT_CMP0056&lt;/code&gt; variable in the cache.</source>
          <target state="translated">プロジェクトコードでポリシーを明示的に設定しない場合、ユーザーはキャッシュで &lt;code&gt;CMAKE_POLICY_DEFAULT_CMP0056&lt;/code&gt; 変数を定義することにより、コマンドラインでポリシーを設定できます。</target>
        </trans-unit>
        <trans-unit id="26aaad5e3dca4ff8c4c1c8ff6b182a25fb5bc34b" translate="yes" xml:space="preserve">
          <source>If the property is not defined for the nominated directory scope, an empty string is returned. In the case of &lt;code&gt;INHERITED&lt;/code&gt; properties, if the property is not found for the nominated directory scope, the search will chain to a parent scope as described for the &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">指定されたディレクトリスコープに対してプロパティが定義されていない場合、空の文字列が返されます。 &lt;code&gt;INHERITED&lt;/code&gt; プロパティの場合、指定されたディレクトリスコープのプロパティが見つからない場合、&lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt;コマンドで説明されているように、検索は親スコープにチェーンします。</target>
        </trans-unit>
        <trans-unit id="b53ce9a5cafbc34a35b03719ab7b01640fc0c1c9" translate="yes" xml:space="preserve">
          <source>If the property is not set, CMake will use the value provided by &lt;a href=&quot;../variable/cmake_disable_precompile_headers#variable:CMAKE_DISABLE_PRECOMPILE_HEADERS&quot; id=&quot;index-0-variable:CMAKE_DISABLE_PRECOMPILE_HEADERS&quot;&gt;&lt;code&gt;CMAKE_DISABLE_PRECOMPILE_HEADERS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロパティが設定されていない場合、CMakeは&lt;a href=&quot;../variable/cmake_disable_precompile_headers#variable:CMAKE_DISABLE_PRECOMPILE_HEADERS&quot; id=&quot;index-0-variable:CMAKE_DISABLE_PRECOMPILE_HEADERS&quot;&gt; &lt;code&gt;CMAKE_DISABLE_PRECOMPILE_HEADERS&lt;/code&gt; &lt;/a&gt;によって提供された値を使用します。</target>
        </trans-unit>
        <trans-unit id="8b1dc08fc655babfcf603618c21cde532ece0972" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;c_extensions#prop_tgt:C_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:C_EXTENSIONS&quot;&gt;&lt;code&gt;C_EXTENSIONS&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;c_extensions#prop_tgt:C_EXTENSIONS&quot; id=&quot;index-1-prop_tgt:C_EXTENSIONS&quot;&gt;&lt;code&gt;C_EXTENSIONS&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJC_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:OBJC_EXTENSIONS&quot;&gt;&lt;code&gt;OBJC_EXTENSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロパティが設定されていない、そしてプロジェクトが設定されている場合は&lt;a href=&quot;c_extensions#prop_tgt:C_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:C_EXTENSIONS&quot;&gt; &lt;code&gt;C_EXTENSIONS&lt;/code&gt; を&lt;/a&gt;、の値&lt;a href=&quot;c_extensions#prop_tgt:C_EXTENSIONS&quot; id=&quot;index-1-prop_tgt:C_EXTENSIONS&quot;&gt; &lt;code&gt;C_EXTENSIONS&lt;/code&gt; が&lt;/a&gt;設定されている&lt;a href=&quot;#prop_tgt:OBJC_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:OBJC_EXTENSIONS&quot;&gt; &lt;code&gt;OBJC_EXTENSIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0497532004112f39c7e2b1fd699eb26fe291d825" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-0-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD&quot;&gt;&lt;code&gt;OBJC_STANDARD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロパティが設定されていない、そしてプロジェクトが設定されている場合は&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-0-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; を&lt;/a&gt;、の値&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; が&lt;/a&gt;設定されている&lt;a href=&quot;#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD&quot;&gt; &lt;code&gt;OBJC_STANDARD&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="049e0ee49f668b6bf9a07fac62a736dfb1807cac" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;c_standard_required#prop_tgt:C_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:C_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;C_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;c_standard_required#prop_tgt:C_STANDARD_REQUIRED&quot; id=&quot;index-1-prop_tgt:C_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;C_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJC_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;OBJC_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロパティが設定されていない、そしてプロジェクトが設定されている場合は&lt;a href=&quot;c_standard_required#prop_tgt:C_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:C_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;C_STANDARD_REQUIRED&lt;/code&gt; を&lt;/a&gt;、の値&lt;a href=&quot;c_standard_required#prop_tgt:C_STANDARD_REQUIRED&quot; id=&quot;index-1-prop_tgt:C_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;C_STANDARD_REQUIRED&lt;/code&gt; が&lt;/a&gt;設定されている&lt;a href=&quot;#prop_tgt:OBJC_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;OBJC_STANDARD_REQUIRED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec42359e90f0b9e4d48ae045be16802a6e5647c8" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:CXX_EXTENSIONS&quot;&gt;&lt;code&gt;CXX_EXTENSIONS&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-1-prop_tgt:CXX_EXTENSIONS&quot;&gt;&lt;code&gt;CXX_EXTENSIONS&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJCXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:OBJCXX_EXTENSIONS&quot;&gt;&lt;code&gt;OBJCXX_EXTENSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロパティが設定されておらず、プロジェクトが&lt;a href=&quot;cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:CXX_EXTENSIONS&quot;&gt; &lt;code&gt;CXX_EXTENSIONS&lt;/code&gt; &lt;/a&gt;を設定している場合、&lt;a href=&quot;cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-1-prop_tgt:CXX_EXTENSIONS&quot;&gt; &lt;code&gt;CXX_EXTENSIONS&lt;/code&gt; &lt;/a&gt;の値がOBJCXX_EXTENSIONSに設定され&lt;a href=&quot;#prop_tgt:OBJCXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:OBJCXX_EXTENSIONS&quot;&gt; &lt;code&gt;OBJCXX_EXTENSIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3cd9ccea63d6554bfdb2561bee9408bebb77293e" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD&quot;&gt;&lt;code&gt;OBJCXX_STANDARD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロパティが設定されていない、そしてプロジェクトが設定されている場合は&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; を&lt;/a&gt;、の値&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; が&lt;/a&gt;設定されている&lt;a href=&quot;#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD&quot;&gt; &lt;code&gt;OBJCXX_STANDARD&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7dfc36642d73a1280da12bf4b91cffcb1a7b74b5" translate="yes" xml:space="preserve">
          <source>If the property is not set, and the project has set the &lt;a href=&quot;cxx_standard_required#prop_tgt:CXX_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;CXX_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt;, the value of &lt;a href=&quot;cxx_standard_required#prop_tgt:CXX_STANDARD_REQUIRED&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;CXX_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt; is set for &lt;a href=&quot;#prop_tgt:OBJCXX_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;OBJCXX_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロパティが設定されていない、そしてプロジェクトが設定されている場合は&lt;a href=&quot;cxx_standard_required#prop_tgt:CXX_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;CXX_STANDARD_REQUIRED&lt;/code&gt; を&lt;/a&gt;、の値&lt;a href=&quot;cxx_standard_required#prop_tgt:CXX_STANDARD_REQUIRED&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;CXX_STANDARD_REQUIRED&lt;/code&gt; が&lt;/a&gt;設定されている&lt;a href=&quot;#prop_tgt:OBJCXX_STANDARD_REQUIRED&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;OBJCXX_STANDARD_REQUIRED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="32ccf7d9cf41398c264ae645659401c9842ada84" translate="yes" xml:space="preserve">
          <source>If the provided &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; is a relative path, it is evaluated relative to the given base directory &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt;. If no base directory is provided, the default base directory will be &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; が相対パスの場合、指定されたベースディレクトリ &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; を基準にして評価されます。ベースディレクトリが指定されていない場合、デフォルトのベースディレクトリは&lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="cb8106d30205ece490c122f32ea8af6ad8654354" translate="yes" xml:space="preserve">
          <source>If the provided &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is a relative path, it is evaluated relative to the given base directory &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt;. If no base directory is provided, the default base directory will be &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; が相対パスの場合、指定されたベースディレクトリ &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; を基準にして評価されます。ベースディレクトリが指定されていない場合、デフォルトのベースディレクトリは&lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="5b42e5baadb9b450227ed74aa5d54e782655b4fb" translate="yes" xml:space="preserve">
          <source>If the required resource can be controlled by CTest you should use &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-0-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#prop_test:TIMEOUT_AFTER_MATCH&quot; id=&quot;index-2-prop_test:TIMEOUT_AFTER_MATCH&quot;&gt;&lt;code&gt;TIMEOUT_AFTER_MATCH&lt;/code&gt;&lt;/a&gt;. This property should be used when only the test itself can determine when its required resources are available.</source>
          <target state="translated">必要なリソースをCTestで制御できる場合は、&lt;a href=&quot;#prop_test:TIMEOUT_AFTER_MATCH&quot; id=&quot;index-2-prop_test:TIMEOUT_AFTER_MATCH&quot;&gt; &lt;code&gt;TIMEOUT_AFTER_MATCH&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-0-prop_test:RESOURCE_LOCK&quot;&gt; &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; &lt;/a&gt;を使用する必要があります。このプロパティは、必要なリソースがいつ利用できるかをテスト自体だけが判断できる場合に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8be5e3d26119a719d5d82ac446c736b74f653767" translate="yes" xml:space="preserve">
          <source>If the running version of CMake is lower than the &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; required version it will stop processing the project and report an error. The optional &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; version, if specified, must be at least the &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version and affects policy settings as described below. If the running version of CMake is older than 3.12, the extra &lt;code&gt;...&lt;/code&gt; dots will be seen as version component separators, resulting in the &lt;code&gt;...&amp;lt;max&amp;gt;&lt;/code&gt; part being ignored and preserving the pre-3.12 behavior of basing policies on &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">実行中のCMakeのバージョンが &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 必要なバージョンより低い場合、プロジェクトの処理を停止し、エラーを報告します。オプションの &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; バージョンを指定する場合は、少なくとも &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; バージョンである必要があり、以下で説明するようにポリシー設定に影響します。実行中のCMakeのバージョンが3.12より古い場合、余分な &lt;code&gt;...&lt;/code&gt; ドットはバージョンコンポーネントの区切り文字として表示され、その結果 &lt;code&gt;...&amp;lt;max&amp;gt;&lt;/code&gt; 部分は無視され、 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 基づくポリシーの3.12より前の動作を維持します。&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="207467c7e9547d09795fdda12450ebc1075cbdcb" translate="yes" xml:space="preserve">
          <source>If the same sources are used to create both a shared and a static library, the uppercased symbol &lt;code&gt;${BASE_NAME}_STATIC_DEFINE&lt;/code&gt; should be used when building the static library:</source>
          <target state="translated">共有ライブラリと静的ライブラリの両方を作成するために同じソースを使用する場合、静的ライブラリを構築するときに大文字の記号 &lt;code&gt;${BASE_NAME}_STATIC_DEFINE&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2298d1fe31990959aacf4b9e2c7d2d193e6ed609" translate="yes" xml:space="preserve">
          <source>If the set of inputs includes directories, this variable will specify patterns used to exclude files from them. The following patterns are added by &lt;code&gt;doxygen_add_docs()&lt;/code&gt; to ensure CMake-specific files and directories are not included in the input. If the project sets &lt;code&gt;DOXYGEN_EXCLUDE_PATTERNS&lt;/code&gt;, those contents are merged with these additional patterns rather than replacing them:</source>
          <target state="translated">入力のセットにディレクトリが含まれている場合、この変数はそれらからファイルを除外するために使用されるパターンを指定します。次のパターンは、CMake固有のファイルとディレクトリが入力に含まれないようにするために、 &lt;code&gt;doxygen_add_docs()&lt;/code&gt; によって追加されます。プロジェクトが &lt;code&gt;DOXYGEN_EXCLUDE_PATTERNS&lt;/code&gt; を設定する場合、それらのコンテンツは、これらの追加のパターンと置き換えられるのではなく、それらとマージされます。</target>
        </trans-unit>
        <trans-unit id="00d7e06570a5af7561acdbf87c2b9cfea40ede92" translate="yes" xml:space="preserve">
          <source>If the specified &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; changes and no &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; is given, a message will be printed to inform about the change.</source>
          <target state="translated">指定された &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; が変更され、 &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; が指定されていない場合、変更を通知するメッセージが出力されます。</target>
        </trans-unit>
        <trans-unit id="5bdc76dbc6acd34cdbaf058b7a4e31b4bf743d18" translate="yes" xml:space="preserve">
          <source>If the specified &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; changes, a message will be printed to inform about the change.</source>
          <target state="translated">指定された &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; が変更されると、変更について通知するメッセージが出力されます。</target>
        </trans-unit>
        <trans-unit id="a2ccf9fd78c805bc88c8880bd3e8adfd660d4657" translate="yes" xml:space="preserve">
          <source>If the specified location is equal to &lt;code&gt;Resources&lt;/code&gt;, the resulting location will be the same as if the &lt;a href=&quot;../prop_tgt/resource#prop_tgt:RESOURCE&quot; id=&quot;index-1-prop_tgt:RESOURCE&quot;&gt;&lt;code&gt;RESOURCE&lt;/code&gt;&lt;/a&gt; property had been used. If the specified location is a sub-folder of &lt;code&gt;Resources&lt;/code&gt;, it will be placed into the respective sub-folder. Note: For iOS Apple uses a flat bundle layout where no &lt;code&gt;Resources&lt;/code&gt; folder exist. Therefore CMake strips the &lt;code&gt;Resources&lt;/code&gt; folder name from the specified location.</source>
          <target state="translated">指定された場所が &lt;code&gt;Resources&lt;/code&gt; と等しい場合、結果の場所は&lt;a href=&quot;../prop_tgt/resource#prop_tgt:RESOURCE&quot; id=&quot;index-1-prop_tgt:RESOURCE&quot;&gt; &lt;code&gt;RESOURCE&lt;/code&gt; &lt;/a&gt;プロパティが使用された場合と同じになります。指定された場所が &lt;code&gt;Resources&lt;/code&gt; のサブフォルダーである場合、それはそれぞれのサブフォルダーに配置されます。注：iOSの場合、Appleは &lt;code&gt;Resources&lt;/code&gt; フォルダーが存在しないフラットバンドルレイアウトを使用します。したがって、CMake は指定された場所から &lt;code&gt;Resources&lt;/code&gt; フォルダー名を削除します。</target>
        </trans-unit>
        <trans-unit id="1b3666bf44a169eb8d893fa7a3718ab95d2192cc" translate="yes" xml:space="preserve">
          <source>If the sub-project&amp;rsquo;s &lt;code&gt;CMakeLists.txt&lt;/code&gt; file is not at the top level of its source tree, the &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; option can be used to tell &lt;code&gt;FetchContent&lt;/code&gt; where to find it. The following example shows how to use that option and it also sets a variable which is meaningful to the subproject before pulling it into the main build:</source>
          <target state="translated">サブプロジェクトの &lt;code&gt;CMakeLists.txt&lt;/code&gt; ファイルがソースツリーの最上位にない場合は、 &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; オプションを使用して、 &lt;code&gt;FetchContent&lt;/code&gt; にファイルの場所を指示できます。次の例は、そのオプションの使用方法を示しています。また、サブプロジェクトをメインビルドにプルする前に、サブプロジェクトにとって意味のある変数を設定します。</target>
        </trans-unit>
        <trans-unit id="cd3da126920da25b9730e37e60af1cacc71aa7f8" translate="yes" xml:space="preserve">
          <source>If the target contains Fortran source files that provide modules and the compiler supports a module output directory this specifies the directory in which the modules will be placed. When this property is not set the modules will be placed in the build directory corresponding to the target&amp;rsquo;s source directory. If the variable &lt;a href=&quot;../variable/cmake_fortran_module_directory#variable:CMAKE_Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_Fortran_MODULE_DIRECTORY&quot;&gt;&lt;code&gt;CMAKE_Fortran_MODULE_DIRECTORY&lt;/code&gt;&lt;/a&gt; is set when a target is created its value is used to initialize this property.</source>
          <target state="translated">ターゲットにモジュールを提供するFortranソースファイルが含まれ、コンパイラがモジュール出力ディレクトリをサポートする場合、これはモジュールが配置されるディレクトリを指定します。このプロパティが設定されていない場合、モジュールはターゲットのソースディレクトリに対応するビルドディレクトリに配置されます。ターゲットの作成時に変数&lt;a href=&quot;../variable/cmake_fortran_module_directory#variable:CMAKE_Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_Fortran_MODULE_DIRECTORY&quot;&gt; &lt;code&gt;CMAKE_Fortran_MODULE_DIRECTORY&lt;/code&gt; &lt;/a&gt;が設定されている場合、その値を使用してこのプロパティが初期化されます。</target>
        </trans-unit>
        <trans-unit id="9844821a39bedb63cafe3de6279c81b7e3d3637e" translate="yes" xml:space="preserve">
          <source>If the target contains ISPC source files, this specifies the directory in which the generated headers will be placed. Relative paths are treated with respect to the value of &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. When this property is not set, the headers will be placed a generator defined build directory. If the variable &lt;a href=&quot;../variable/cmake_ispc_header_directory#variable:CMAKE_ISPC_HEADER_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_ISPC_HEADER_DIRECTORY&quot;&gt;&lt;code&gt;CMAKE_ISPC_HEADER_DIRECTORY&lt;/code&gt;&lt;/a&gt; is set when a target is created its value is used to initialize this property.</source>
          <target state="translated">ターゲットにISPCソースファイルが含まれている場合、これは生成されたヘッダーが配置されるディレクトリを指定します。相対パスは、&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;の値に関して処理されます。このプロパティが設定されていない場合、ヘッダーはジェネレーターで定義されたビルドディレクトリに配置されます。ターゲットの作成時に変数&lt;a href=&quot;../variable/cmake_ispc_header_directory#variable:CMAKE_ISPC_HEADER_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_ISPC_HEADER_DIRECTORY&quot;&gt; &lt;code&gt;CMAKE_ISPC_HEADER_DIRECTORY&lt;/code&gt; &lt;/a&gt;が設定されている場合、その値を使用してこのプロパティが初期化されます。</target>
        </trans-unit>
        <trans-unit id="daa6481f338aeb14d63c02c3f44c0c9606ed58b0" translate="yes" xml:space="preserve">
          <source>If the target contains Swift source files, this specifies the directory in which the modules will be placed. When this property is not set, the modules will be placed in the build directory corresponding to the target&amp;rsquo;s source directory. If the variable &lt;a href=&quot;../variable/cmake_swift_module_directory#variable:CMAKE_Swift_MODULE_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_Swift_MODULE_DIRECTORY&quot;&gt;&lt;code&gt;CMAKE_Swift_MODULE_DIRECTORY&lt;/code&gt;&lt;/a&gt; is set when a target is created its value is used to initialise this property.</source>
          <target state="translated">ターゲットにSwiftソースファイルが含まれている場合は、モジュールを配置するディレクトリを指定します。このプロパティが設定されていない場合、モジュールはターゲットのソースディレクトリに対応するビルドディレクトリに配置されます。変数&lt;a href=&quot;../variable/cmake_swift_module_directory#variable:CMAKE_Swift_MODULE_DIRECTORY&quot; id=&quot;index-0-variable:CMAKE_Swift_MODULE_DIRECTORY&quot;&gt; &lt;code&gt;CMAKE_Swift_MODULE_DIRECTORY&lt;/code&gt; &lt;/a&gt;がターゲットの作成時に設定されている場合、その値を使用してこのプロパティが初期化されます。</target>
        </trans-unit>
        <trans-unit id="5f1a7596a56f08cfdb95ae654e69a25397b52100" translate="yes" xml:space="preserve">
          <source>If the target is a JNI library, utilize the following commands to create a JNI symbolic link:</source>
          <target state="translated">ターゲットがJNIライブラリの場合は、以下のコマンドを利用してJNIシンボリックリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="c71f7de5e1a977c08481189823c8eb86e2ad1711" translate="yes" xml:space="preserve">
          <source>If the target platform doesn&amp;rsquo;t support deployment, this property won&amp;rsquo;t have any effect.</source>
          <target state="translated">ターゲットプラットフォームがデプロイメントをサポートしていない場合、このプロパティは効果がありません。</target>
        </trans-unit>
        <trans-unit id="5a39c500f09285496f819a8ea4b55310886000f8" translate="yes" xml:space="preserve">
          <source>If the use of the -pthread compiler and linker flag is preferred then the caller can set</source>
          <target state="translated">pthread コンパイラとリンカフラグの使用が望ましい場合は、呼び出し側が</target>
        </trans-unit>
        <trans-unit id="0d34dfaaf7fe6d9f0a7d65e18862b94d7c44c5f9" translate="yes" xml:space="preserve">
          <source>If the use of the -pthread compiler and linker flag is preferred then the caller can set this variable to TRUE. The compiler flag can only be used with the imported target. Use of both the imported target as well as this switch is highly recommended for new code.</source>
          <target state="translated">pthread コンパイラおよびリンカフラグを使用したい場合は、この変数を TRUE に設定します。コンパイラフラグは、インポートしたターゲットでのみ使用できます。新しいコードを作成する際には、インポートしたターゲットとこのスイッチの両方を使用することを強く推奨します。</target>
        </trans-unit>
        <trans-unit id="14e7c7f865a33eeeb669d351cf0a8bc392c36e25" translate="yes" xml:space="preserve">
          <source>If the value requested does not result in a compile flag being added for the compiler in use, a previous standard flag will be added instead. This means that using:</source>
          <target state="translated">要求された値が、使用中のコンパイラにコンパイル・フラグが追加されない場合、代わりに以前の標準フラグが追加されます。これは、使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="114d2105a920f81751ee48b2fa305a19bdeae44f" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;CMAKE_GNUtoMS&lt;/code&gt; is set when a target is created its value is used to initialize this property. The variable must be set prior to the first command that enables a language such as &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt;. CMake provides the variable as an option to the user automatically when configuring on Windows with GNU tools.</source>
          <target state="translated">ターゲットの作成時に変数 &lt;code&gt;CMAKE_GNUtoMS&lt;/code&gt; が設定されている場合、その値を使用してこのプロパティが初期化されます。この変数は、&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; &lt;/a&gt;などの言語を有効にする最初のコマンドの前に設定する必要があります。CMakeは、GNUツールを使用してWindowsで構成するときに、ユーザーにオプションとして変数を自動的に提供します。</target>
        </trans-unit>
        <trans-unit id="9d104b425cb6e48eb4e180bf39c26c7f7e32ceb8" translate="yes" xml:space="preserve">
          <source>If the xmllint command-line executable has been found</source>
          <target state="translated">xmllint コマンドライン実行ファイルが見つかった場合</target>
        </trans-unit>
        <trans-unit id="7884e3bafb039371675f08ebebfb72cbe801ce39" translate="yes" xml:space="preserve">
          <source>If the xsltproc command-line executable has been found</source>
          <target state="translated">xsltproc コマンドライン実行ファイルが見つかった場合</target>
        </trans-unit>
        <trans-unit id="ad162c06ca8a2bd7caddbaf8ccc9ed92df99495c" translate="yes" xml:space="preserve">
          <source>If this is an &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;Alias Target&lt;/a&gt;, this property contains the name of the target aliased.</source>
          <target state="translated">これが&lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;エイリアスターゲットの&lt;/a&gt;場合、このプロパティにはエイリアスされたターゲットの名前が​​含まれます。</target>
        </trans-unit>
        <trans-unit id="f4e35d3ca4120e1451c8ad4af6c52f0fe815b898" translate="yes" xml:space="preserve">
          <source>If this is defined, then no SDL_main will be linked in because only applications need main(). Otherwise, it is assumed you are building an application and this module will attempt to locate and set the proper link flags as part of the returned SDL_LIBRARY variable.</source>
          <target state="translated">これが定義されている場合、main()が必要なのはアプリケーションだけなので、SDL_mainはリンクされません。そうでない場合は、アプリケーションを構築していると見なされ、このモジュールは返されたSDL_LIBRARY変数の一部として適切なリンクフラグを探して設定しようとします。</target>
        </trans-unit>
        <trans-unit id="c1b9c29febe69f2811dc139ec834f6ae9303348c" translate="yes" xml:space="preserve">
          <source>If this is not set, the test will be run with the working directory set to the binary directory associated with where the test was created (i.e. the &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; for where &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; was called).</source>
          <target state="translated">これが設定されていない場合、テストは（つまり、テストが作成された場所に関連付けられているバイナリ・ディレクトリに作業ディレクトリを設定して実行されます&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;場所について&lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; が&lt;/a&gt;呼ばれました）。</target>
        </trans-unit>
        <trans-unit id="745c10103d92eb5d1a49a6fd3de949b83bb8284c" translate="yes" xml:space="preserve">
          <source>If this is set to &lt;code&gt;TRUE&lt;/code&gt;, then the rpath information is not added to compiled executables. The default is to add rpath information if the platform supports it. This allows for easy running from the build tree. To omit RPATH in the install step, but not the build step, use &lt;a href=&quot;cmake_skip_install_rpath#variable:CMAKE_SKIP_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_INSTALL_RPATH&quot;&gt;&lt;code&gt;CMAKE_SKIP_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">これが &lt;code&gt;TRUE&lt;/code&gt; に設定されている場合、rpath情報はコンパイルされた実行可能ファイルに追加されません。プラットフォームがサポートしている場合、デフォルトではrpath情報が追加されます。これにより、ビルドツリーから簡単に実行できます。インストール手順ではRPATHを省略してビルド手順では&lt;a href=&quot;cmake_skip_install_rpath#variable:CMAKE_SKIP_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_INSTALL_RPATH&quot;&gt; &lt;code&gt;CMAKE_SKIP_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;代わりにCMAKE_SKIP_INSTALL_RPATHを使用します。</target>
        </trans-unit>
        <trans-unit id="7a6e673595436e0a99cea485ec03f1adeaa4667c" translate="yes" xml:space="preserve">
          <source>If this is set, no download or update steps are performed for the specified content and the &lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; variable returned to the caller is pointed at this location. This gives developers a way to have a separate checkout of the content that they can modify freely without interference from the build. The build simply uses that existing source, but it still defines &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt; to point inside its own build area. Developers are strongly encouraged to use this mechanism rather than editing the sources populated in the default location, as changes to sources in the default location can be lost when content population details are changed by the project.</source>
          <target state="translated">これが設定されている場合、指定されたコンテンツに対してダウンロードまたは更新のステップは実行されず、呼び出し元に返される &lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; 変数はこの場所を指します。これにより、開発者はコンテンツを個別にチェックアウトして、ビルドからの干渉を受けずに自由に変更できるようになります。ビルドは単にその既存のソースを使用しますが、独自のビルド領域内を指すように &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt; を定義します。プロジェクトによってコンテンツの母集団の詳細が変更されると、デフォルトの場所にあるソースへの変更が失われる可能性があるため、開発者はデフォルトの場所にあるソースを編集するのではなく、このメカニズムを使用することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="59453de23b218ed0ac388cabb6e9384f17c93393" translate="yes" xml:space="preserve">
          <source>If this module replaces an older version, you should set compatibility variables to cause the least disruption possible.</source>
          <target state="translated">このモジュールが古いバージョンを置き換える場合は、互換性変数を設定して可能な限り混乱を少なくする必要があります。</target>
        </trans-unit>
        <trans-unit id="d88a3acf88a63b9fc172526711ef1c0d7152f074" translate="yes" xml:space="preserve">
          <source>If this option is specified, any &lt;code&gt;-DLINK_LIBRARIES=...&lt;/code&gt; value given to the &lt;code&gt;CMAKE_FLAGS&lt;/code&gt; option will be ignored.</source>
          <target state="translated">このオプションが指定されている場合は、任意の &lt;code&gt;-DLINK_LIBRARIES=...&lt;/code&gt; に与えられた値 &lt;code&gt;CMAKE_FLAGS&lt;/code&gt; のオプションは無視されます。</target>
        </trans-unit>
        <trans-unit id="97274455e8968ea5618ce0fc8f030ed428982daf" translate="yes" xml:space="preserve">
          <source>If this property contains a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt;, then the first value is the command and remaining values are its arguments.</source>
          <target state="translated">このプロパティに&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;セミコロンで区切られたリスト&lt;/a&gt;が含まれている場合、最初の値はコマンドで、残りの値はその引数です。</target>
        </trans-unit>
        <trans-unit id="02268b70ca35116337a6c0574a877c73a06db6d5" translate="yes" xml:space="preserve">
          <source>If this property is not set and policy &lt;a href=&quot;../policy/cmp0068#policy:CMP0068&quot; id=&quot;index-0-policy:CMP0068&quot;&gt;&lt;code&gt;CMP0068&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, the value of &lt;a href=&quot;build_with_install_rpath#prop_tgt:BUILD_WITH_INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_RPATH&quot;&gt;&lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; is used in its place.</source>
          <target state="translated">このプロパティーが設定されておらず、ポリシー&lt;a href=&quot;../policy/cmp0068#policy:CMP0068&quot; id=&quot;index-0-policy:CMP0068&quot;&gt; &lt;code&gt;CMP0068&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;NEW&lt;/code&gt; でない場合、&lt;a href=&quot;build_with_install_rpath#prop_tgt:BUILD_WITH_INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_RPATH&quot;&gt; &lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;の値が使用されます。</target>
        </trans-unit>
        <trans-unit id="f6caee9db62b40c92a94a92e9c266163861ed210" translate="yes" xml:space="preserve">
          <source>If this property is not set by the user, it will be calculated at generate-time by CMake.</source>
          <target state="translated">このプロパティがユーザによって設定されていない場合は、生成時に CMake によって計算されます。</target>
        </trans-unit>
        <trans-unit id="5fb0fd7d35d4bc47da151d89ec484436b9593c41" translate="yes" xml:space="preserve">
          <source>If this property is not set then CMake uses the default value &lt;code&gt;MultiThreaded$&amp;lt;$&amp;lt;CONFIG:Debug&amp;gt;:Debug&amp;gt;DLL&lt;/code&gt; to select a MSVC runtime library.</source>
          <target state="translated">このプロパティが設定されていない場合、CMakeはデフォルト値 &lt;code&gt;MultiThreaded$&amp;lt;$&amp;lt;CONFIG:Debug&amp;gt;:Debug&amp;gt;DLL&lt;/code&gt; を使用してMSVCランタイムライブラリを選択します。</target>
        </trans-unit>
        <trans-unit id="0877ba77bc191c7ba32fd37baa76796533e02233" translate="yes" xml:space="preserve">
          <source>If this property is not specified, then the &lt;code&gt;ALL_BUILD&lt;/code&gt; project will be the default.</source>
          <target state="translated">このプロパティが指定されていない場合、 &lt;code&gt;ALL_BUILD&lt;/code&gt; プロジェクトがデフォルトになります。</target>
        </trans-unit>
        <trans-unit id="592090a25fd3802a73c2bfc99e16a50175da1890" translate="yes" xml:space="preserve">
          <source>If this property is set and no matching configurations are available, then the imported target is considered to be not found. This property is ignored for non-imported targets.</source>
          <target state="translated">このプロパティが設定されていて、一致する構成がない場合、インポートされたターゲットは見つかりませんでした。このプロパティは、インポートされていないターゲットに対しては無視されます。</target>
        </trans-unit>
        <trans-unit id="820a9972664d6cbf958a6bb5a562203e75229aaa" translate="yes" xml:space="preserve">
          <source>If this property is set then the file extension of the output file will be the same as that of the source file. Normally the output file extension is computed based on the language of the source file, for example &lt;code&gt;.cxx&lt;/code&gt; will go to a &lt;code&gt;.o&lt;/code&gt; extension.</source>
          <target state="translated">このプロパティが設定されている場合、出力ファイルのファイル拡張子はソースファイルの拡張子と同じになります。通常、出力ファイルの拡張子はソースファイルの言語に基づいて計算されます。たとえば、 &lt;code&gt;.cxx&lt;/code&gt; は &lt;code&gt;.o&lt;/code&gt; 拡張子になります。</target>
        </trans-unit>
        <trans-unit id="658e8a2d36d2ad08725c045c682a347f19bb198b" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-2-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC 1800 (Visual Studio 2013) and lower, this has no effect.</source>
          <target state="translated">このプロパティが &lt;code&gt;ON&lt;/code&gt; に設定されている場合、&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティの値は要件として扱われます。このプロパティが &lt;code&gt;OFF&lt;/code&gt; または設定されていない場合、&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-2-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティはオプションとして扱われ、要求が利用できない場合は以前の標準に「減衰」する可能性があります。 MSVC 1800（Visual Studio 2013）以下など、標準レベルの概念がないコンパイラの場合、これは効果がありません。</target>
        </trans-unit>
        <trans-unit id="8d6a42e06b5c10209d3ab38741c6c6ba27900d29" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-2-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC, this has no effect.</source>
          <target state="translated">このプロパティが &lt;code&gt;ON&lt;/code&gt; に設定されている場合、&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-1-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティの値は要件として扱われます。このプロパティが &lt;code&gt;OFF&lt;/code&gt; または設定されていない場合、&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-2-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティはオプションとして扱われ、要求されたものが利用できない場合、以前の標準に「減衰」する場合があります。MSVCなどの標準レベルの概念がないコンパイラーの場合、これは効果がありません。</target>
        </trans-unit>
        <trans-unit id="145d811465431e86fc13853360d3c9316e821033" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-1-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-2-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC 1800 (Visual Studio 2013) and lower, this has no effect.</source>
          <target state="translated">このプロパティが &lt;code&gt;ON&lt;/code&gt; に設定されている場合、&lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-1-prop_tgt:CUDA_STANDARD&quot;&gt; &lt;code&gt;CUDA_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティの値は要件として扱われます。このプロパティが &lt;code&gt;OFF&lt;/code&gt; または設定されていない場合、&lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-2-prop_tgt:CUDA_STANDARD&quot;&gt; &lt;code&gt;CUDA_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティはオプションとして扱われ、要求が利用できない場合は以前の標準に「減衰」する可能性があります。 MSVC 1800（Visual Studio 2013）以下など、標準レベルの概念がないコンパイラの場合、これは効果がありません。</target>
        </trans-unit>
        <trans-unit id="e789f2277be6ed3ee3e768be774436b4f0f21d8d" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-1-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-2-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC, this has no effect.</source>
          <target state="translated">このプロパティが &lt;code&gt;ON&lt;/code&gt; に設定されている場合、&lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-1-prop_tgt:CUDA_STANDARD&quot;&gt; &lt;code&gt;CUDA_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティの値は要件として扱われます。このプロパティが &lt;code&gt;OFF&lt;/code&gt; または未設定の場合、&lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-2-prop_tgt:CUDA_STANDARD&quot;&gt; &lt;code&gt;CUDA_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティはオプションとして扱われ、要求されたものが使用できない場合、以前の標準に「減衰」する場合があります。 MSVCなどの標準レベルの概念がないコンパイラーの場合、これは効果がありません。</target>
        </trans-unit>
        <trans-unit id="6ba3638dfc1a2afbae87268bf97ac87b97068827" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-2-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC 1800 (Visual Studio 2013) and lower, this has no effect.</source>
          <target state="translated">このプロパティが &lt;code&gt;ON&lt;/code&gt; に設定されている場合、&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティの値は要件として扱われます。このプロパティが &lt;code&gt;OFF&lt;/code&gt; または設定されていない場合、&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-2-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティはオプションとして扱われ、要求が利用できない場合は以前の標準に「減衰」する可能性があります。 MSVC 1800（Visual Studio 2013）以下など、標準レベルの概念がないコンパイラの場合、これは効果がありません。</target>
        </trans-unit>
        <trans-unit id="d131467a32c41578579e973fff81b62c2e1e2267" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-2-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available. For compilers that have no notion of a standard level, such as MSVC, this has no effect.</source>
          <target state="translated">このプロパティが &lt;code&gt;ON&lt;/code&gt; に設定されている場合、&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-1-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティの値は要件として扱われます。このプロパティが &lt;code&gt;OFF&lt;/code&gt; または未設定の場合、&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-2-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティはオプションとして扱われ、要求されたものが使用できない場合、以前の標準に「減衰」する場合があります。MSVCなどの標準レベルの概念がないコンパイラーの場合、これは効果がありません。</target>
        </trans-unit>
        <trans-unit id="86ba2f08b9d7f81f07e86407de99a71f9769d698" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-1-prop_tgt:OBJC_STANDARD&quot;&gt;&lt;code&gt;OBJC_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-2-prop_tgt:OBJC_STANDARD&quot;&gt;&lt;code&gt;OBJC_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available.</source>
          <target state="translated">このプロパティが &lt;code&gt;ON&lt;/code&gt; に設定されている場合、&lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-1-prop_tgt:OBJC_STANDARD&quot;&gt; &lt;code&gt;OBJC_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティの値は要件として扱われます。このプロパティが &lt;code&gt;OFF&lt;/code&gt; または設定されていない場合、&lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-2-prop_tgt:OBJC_STANDARD&quot;&gt; &lt;code&gt;OBJC_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティはオプションとして扱われ、要求が利用できない場合は以前の標準に「減衰」する可能性があります。</target>
        </trans-unit>
        <trans-unit id="347daf2af7a3e526d3e2191f310081ad4d88de7c" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the value of the &lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-1-prop_tgt:OBJCXX_STANDARD&quot;&gt;&lt;code&gt;OBJCXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as a requirement. If this property is &lt;code&gt;OFF&lt;/code&gt; or unset, the &lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-2-prop_tgt:OBJCXX_STANDARD&quot;&gt;&lt;code&gt;OBJCXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property is treated as optional and may &amp;ldquo;decay&amp;rdquo; to a previous standard if the requested is not available.</source>
          <target state="translated">このプロパティが &lt;code&gt;ON&lt;/code&gt; に設定されている場合、&lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-1-prop_tgt:OBJCXX_STANDARD&quot;&gt; &lt;code&gt;OBJCXX_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティの値は要件として扱われます。このプロパティが &lt;code&gt;OFF&lt;/code&gt; または設定されていない場合、&lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-2-prop_tgt:OBJCXX_STANDARD&quot;&gt; &lt;code&gt;OBJCXX_STANDARD&lt;/code&gt; &lt;/a&gt;ターゲットプロパティはオプションとして扱われ、要求が利用できない場合は以前の標準に「減衰」する可能性があります。</target>
        </trans-unit>
        <trans-unit id="ccc944da24605fc0f876ed05a8face444342d576" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;True&lt;/code&gt; then the source file is really an object file and should not be compiled. It will still be linked into the target though.</source>
          <target state="translated">このプロパティが &lt;code&gt;True&lt;/code&gt; に設定されている場合、ソースファイルは実際にはオブジェクトファイルであり、コンパイルしないでください。それでもターゲットにリンクされます。</target>
        </trans-unit>
        <trans-unit id="107bfb6b511bbd6e540c0ab9e2fe9b7f95739303" translate="yes" xml:space="preserve">
          <source>If this property is set to a filename then when CMake runs it will report any properties or variables that were accessed but not defined into the filename specified in this property.</source>
          <target state="translated">このプロパティがファイル名に設定されている場合、CMake が実行されると、このプロパティで指定されたファイル名にアクセスされたが定義されていないプロパティや変数をレポートします。</target>
        </trans-unit>
        <trans-unit id="560c52752d48fd93e310cc9f26dc969491d66e9d" translate="yes" xml:space="preserve">
          <source>If this target property is not set then the target will be included in the &amp;ldquo;all&amp;rdquo; target of the containing directory. Furthermore, it will be included in the &amp;ldquo;all&amp;rdquo; target of its ancestor directories unless the &lt;a href=&quot;../prop_dir/exclude_from_all#prop_dir:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_dir:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; directory property is set.</source>
          <target state="translated">このターゲットプロパティが設定されていない場合、ターゲットは含まれているディレクトリの「すべて」のターゲットに含まれます。さらに、&lt;a href=&quot;../prop_dir/exclude_from_all#prop_dir:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_dir:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt;ディレクトリプロパティが設定されていない限り、祖先ディレクトリの「すべて」のターゲットに含まれます。</target>
        </trans-unit>
        <trans-unit id="87359b9ef527cebb071fbdadf08ba713fbbb2421" translate="yes" xml:space="preserve">
          <source>If this variable contains a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt;, then the first value is the command and remaining values are its arguments.</source>
          <target state="translated">この変数に&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;セミコロンで区切られたリスト&lt;/a&gt;が含まれている場合、最初の値はコマンドで、残りの値はその引数です。</target>
        </trans-unit>
        <trans-unit id="3d8c7aec3d039fc5873940fa9d82eebb1dee56bb" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to &lt;code&gt;ON&lt;/code&gt; at the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, CMake will not add the regeneration target to the build system or perform any build system checks.</source>
          <target state="translated">トップレベルの &lt;code&gt;CMakeLists.txt&lt;/code&gt; ファイルの最後でこの変数が &lt;code&gt;ON&lt;/code&gt; と評価された場合、CMakeは再生成ターゲットをビルドシステムに追加せず、ビルドシステムチェックも実行しません。</target>
        </trans-unit>
        <trans-unit id="cb2ad5711d88b8f590b0746cf172c9737874cfaf" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to &lt;code&gt;ON&lt;/code&gt; at the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Sublime%20Text%202.html#generator:Sublime%20Text%202&quot; id=&quot;index-0-generator:Sublime Text 2&quot;&gt;&lt;code&gt;Sublime Text 2&lt;/code&gt;&lt;/a&gt; extra generator excludes the build tree from the &lt;code&gt;.sublime-project&lt;/code&gt; if it is inside the source tree.</source>
          <target state="translated">トップレベルの &lt;code&gt;CMakeLists.txt&lt;/code&gt; ファイルの最後でこの変数が &lt;code&gt;ON&lt;/code&gt; と評価された場合、&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Sublime%20Text%202.html#generator:Sublime%20Text%202&quot; id=&quot;index-0-generator:Sublime Text 2&quot;&gt; &lt;code&gt;Sublime Text 2&lt;/code&gt; &lt;/a&gt;追加ジェネレーターは、ソースツリー内にある場合、ビルドツリーを &lt;code&gt;.sublime-project&lt;/code&gt; から除外します。</target>
        </trans-unit>
        <trans-unit id="2904a0f8228c6fbb9ac3939861bb0efac8b1629b" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to &lt;code&gt;ON&lt;/code&gt; at the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Sublime%20Text%202.html#generator:Sublime%20Text%202&quot; id=&quot;index-0-generator:Sublime Text 2&quot;&gt;&lt;code&gt;Sublime Text 2&lt;/code&gt;&lt;/a&gt; extra generator excludes the build tree from the &lt;code&gt;.sublime-project&lt;/code&gt; if it is inside the source tree.</source>
          <target state="translated">この変数がトップレベルの &lt;code&gt;CMakeLists.txt&lt;/code&gt; ファイルの最後で &lt;code&gt;ON&lt;/code&gt; と評価された場合、&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Sublime%20Text%202.html#generator:Sublime%20Text%202&quot; id=&quot;index-0-generator:Sublime Text 2&quot;&gt; &lt;code&gt;Sublime Text 2&lt;/code&gt; の&lt;/a&gt;追加ジェネレーターは、ビルドツリーがソースツリー内にある場合、 &lt;code&gt;.sublime-project&lt;/code&gt; からビルドツリーを除外します。</target>
        </trans-unit>
        <trans-unit id="4b615dd880b2243378d765b82fda9e8c5a2d1234" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to &lt;code&gt;ON&lt;/code&gt; at the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, the generator creates projectfiles based on targets rather than projects.</source>
          <target state="translated">トップレベルの &lt;code&gt;CMakeLists.txt&lt;/code&gt; ファイルの最後でこの変数が &lt;code&gt;ON&lt;/code&gt; と評価されると、ジェネレーターはプロジェクトではなくターゲットに基づいてプロジェクトファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="37c5da609c3b89432b44db6580bc4df9d53f0495" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to &lt;code&gt;ON&lt;/code&gt; the generator excludes from the project file any files that are located outside the project root.</source>
          <target state="translated">この変数の評価が &lt;code&gt;ON&lt;/code&gt; の場合、ジェネレーターはプロジェクトファイルからプロジェクトルートの外にあるファイルを除外します。</target>
        </trans-unit>
        <trans-unit id="8ee0173b82daab8d7fbb371bf7a330d485119fa7" translate="yes" xml:space="preserve">
          <source>If this variable evaluates to a boolean true value, all status messages associated with the check will be suppressed.</source>
          <target state="translated">この変数が真偽値として評価された場合、チェックに関連付けられたすべてのステータスメッセージは抑制されます。</target>
        </trans-unit>
        <trans-unit id="7b34710e66ed10fd7cd7c19061ff369063979df1" translate="yes" xml:space="preserve">
          <source>If this variable is defined empty the native build tool&amp;rsquo;s default number is used.</source>
          <target state="translated">この変数が空で定義されている場合、ネイティブビルドツールのデフォルト番号が使用されます。</target>
        </trans-unit>
        <trans-unit id="3f91bdd0ce5abf26abfd69add0e827de6d945adc" translate="yes" xml:space="preserve">
          <source>If this variable is enabled, CMake automatically adds &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; to the include path for each directory. These additional include directories do not propagate down to subdirectories. This is useful mainly for out-of-source builds, where files generated into the build tree are included by files located in the source tree.</source>
          <target state="translated">この変数が有効になっている場合、CMakeは&lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;を各ディレクトリのインクルードパスに自動的に追加します。これらの追加のインクルードディレクトリは、サブディレクトリに伝播しません。これは主に、ビルドツリーに生成されたファイルがソースツリーにあるファイルに含まれるソース外ビルドで役立ちます。</target>
        </trans-unit>
        <trans-unit id="5f0cb48cb8df1fb274ff087420ce81109e01481d" translate="yes" xml:space="preserve">
          <source>If this variable is enabled, CMake automatically adds for each shared library target, static library target, module target and executable target, &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; to the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property. By default &lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&lt;/code&gt; is &lt;code&gt;OFF&lt;/code&gt;.</source>
          <target state="translated">この変数が有効になっている場合、CMakeは、共有ライブラリターゲット、静的ライブラリターゲット、モジュールターゲット、および実行可能ターゲット&lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;、CMAKE_CURRENT_SOURCE_DIRおよび&lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;ターゲットプロパティに自動的に追加します。デフォルトでは、 &lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&lt;/code&gt; は &lt;code&gt;OFF&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f27b9c7a76dd75faec68d3755b87bc8e49006902" translate="yes" xml:space="preserve">
          <source>If this variable is not set then the &lt;a href=&quot;../prop_tgt/cuda_runtime_library#prop_tgt:CUDA_RUNTIME_LIBRARY&quot; id=&quot;index-1-prop_tgt:CUDA_RUNTIME_LIBRARY&quot;&gt;&lt;code&gt;CUDA_RUNTIME_LIBRARY&lt;/code&gt;&lt;/a&gt; target property will not be set automatically. If that property is not set then CMake uses an appropriate default value based on the compiler to select the CUDA runtime library.</source>
          <target state="translated">この変数が設定されていない場合、&lt;a href=&quot;../prop_tgt/cuda_runtime_library#prop_tgt:CUDA_RUNTIME_LIBRARY&quot; id=&quot;index-1-prop_tgt:CUDA_RUNTIME_LIBRARY&quot;&gt; &lt;code&gt;CUDA_RUNTIME_LIBRARY&lt;/code&gt; &lt;/a&gt;ターゲットプロパティは自動的に設定されません。そのプロパティが設定されていない場合、CMakeはコンパイラに基づいて適切なデフォルト値を使用してCUDAランタイムライブラリを選択します。</target>
        </trans-unit>
        <trans-unit id="6d8c00eb8928c5b1331b8e51769f6456ed96a25e" translate="yes" xml:space="preserve">
          <source>If this variable is not set then the &lt;a href=&quot;../prop_tgt/msvc_runtime_library#prop_tgt:MSVC_RUNTIME_LIBRARY&quot; id=&quot;index-1-prop_tgt:MSVC_RUNTIME_LIBRARY&quot;&gt;&lt;code&gt;MSVC_RUNTIME_LIBRARY&lt;/code&gt;&lt;/a&gt; target property will not be set automatically. If that property is not set then CMake uses the default value &lt;code&gt;MultiThreaded$&amp;lt;$&amp;lt;CONFIG:Debug&amp;gt;:Debug&amp;gt;DLL&lt;/code&gt; to select a MSVC runtime library.</source>
          <target state="translated">この変数が設定されていない場合、&lt;a href=&quot;../prop_tgt/msvc_runtime_library#prop_tgt:MSVC_RUNTIME_LIBRARY&quot; id=&quot;index-1-prop_tgt:MSVC_RUNTIME_LIBRARY&quot;&gt; &lt;code&gt;MSVC_RUNTIME_LIBRARY&lt;/code&gt; &lt;/a&gt;ターゲットプロパティは自動的に設定されません。そのプロパティが設定されていない場合、CMakeはデフォルト値 &lt;code&gt;MultiThreaded$&amp;lt;$&amp;lt;CONFIG:Debug&amp;gt;:Debug&amp;gt;DLL&lt;/code&gt; を使用してMSVCランタイムライブラリを選択します。</target>
        </trans-unit>
        <trans-unit id="cc009ec01d00cb824b37579310380742a9ab81ee" translate="yes" xml:space="preserve">
          <source>If this variable is not set, the default behavior is &lt;code&gt;ALWAYS&lt;/code&gt;.</source>
          <target state="translated">この変数が設定されていない場合、デフォルトの動作は &lt;code&gt;ALWAYS&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="01acc490f8aa302dd83e10050ab579c5f95417e2" translate="yes" xml:space="preserve">
          <source>If this variable is not set, this behavior is enabled by default if &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-1-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt;&lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt;&lt;/a&gt; is 3.1 or later, disabled otherwise.</source>
          <target state="translated">この変数が設定されていない場合、&lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-1-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt; &lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt; &lt;/a&gt;が3.1以降の場合、この動作はデフォルトで有効になり、それ以外の場合は無効になります。</target>
        </trans-unit>
        <trans-unit id="70d97702a5c43ed53c1e395eceff687ce49d7fbb" translate="yes" xml:space="preserve">
          <source>If this variable is not specified, it is determined automatically by system introspection.</source>
          <target state="translated">この変数が指定されていない場合は、システムのイントロスペクションによって自動的に決定されます。</target>
        </trans-unit>
        <trans-unit id="ab715f956cf23707b80a1b1c0ce69b3acab521a7" translate="yes" xml:space="preserve">
          <source>If this variable is not specified, it is determined by the value of &lt;code&gt;CMAKE_OBJDUMP&lt;/code&gt; if set, else by system introspection.</source>
          <target state="translated">この変数が指定されていない場合は、 &lt;code&gt;CMAKE_OBJDUMP&lt;/code&gt; が設定されている場合はその値によって、そうでない場合はシステムのイントロスペクションによって決定されます。</target>
        </trans-unit>
        <trans-unit id="7edac8955b37ef873dafa8a7f7c5dd0d67dd38a4" translate="yes" xml:space="preserve">
          <source>If this variable is set to &lt;code&gt;STDERR&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt; or &lt;code&gt;NONE&lt;/code&gt; then commands in &lt;a href=&quot;../command/execute_process#command:execute_process&quot; id=&quot;index-0-command:execute_process&quot;&gt;&lt;code&gt;execute_process()&lt;/code&gt;&lt;/a&gt; calls will be printed to either stderr or stdout or not at all.</source>
          <target state="translated">この変数が &lt;code&gt;STDERR&lt;/code&gt; 、 &lt;code&gt;STDOUT&lt;/code&gt; 、または &lt;code&gt;NONE&lt;/code&gt; に設定されている場合、&lt;a href=&quot;../command/execute_process#command:execute_process&quot; id=&quot;index-0-command:execute_process&quot;&gt; &lt;code&gt;execute_process()&lt;/code&gt; &lt;/a&gt;呼び出しのコマンドは、stderrまたはstdoutに出力されるか、まったく出力されません。</target>
        </trans-unit>
        <trans-unit id="794b0b8d927116641b36668add340c3f8f66c2ce" translate="yes" xml:space="preserve">
          <source>If this variable is set to TRUE, the Eclipse project generator will generate an Eclipse project in &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; . This project can then be used in Eclipse e.g. for the version control functionality. &lt;a href=&quot;#variable:CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&quot; id=&quot;index-0-variable:CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&quot;&gt;&lt;code&gt;CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&lt;/code&gt;&lt;/a&gt; defaults to FALSE; so nothing is written into the source directory.</source>
          <target state="translated">この変数がTRUEに設定されている場合、Eclipseプロジェクトジェネレーターは&lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; に&lt;/a&gt; Eclipseプロジェクトを生成します。このプロジェクトはEclipseで使用できます（バージョン管理機能など​​）。&lt;a href=&quot;#variable:CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&quot; id=&quot;index-0-variable:CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&quot;&gt; &lt;code&gt;CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT&lt;/code&gt; の&lt;/a&gt;デフォルトはFALSEです。そのため、ソースディレクトリには何も書き込まれません。</target>
        </trans-unit>
        <trans-unit id="7e95746b0051a057a1ff83ee1c30e6fbd2f8500d" translate="yes" xml:space="preserve">
          <source>If true, do not add run time path information.</source>
          <target state="translated">true の場合、ランタイムパス情報を追加しません。</target>
        </trans-unit>
        <trans-unit id="a89b7d8465a0a5b89c8545a7852f6f1c0e9ad053" translate="yes" xml:space="preserve">
          <source>If true, no compiler wrapper will be searched for.</source>
          <target state="translated">true の場合、コンパイラのラッパーは検索されません。</target>
        </trans-unit>
        <trans-unit id="d1137daa9a8b974db53f0acb5d090570797803c7" translate="yes" xml:space="preserve">
          <source>If true, the guessing step will be skipped.</source>
          <target state="translated">真の場合、推測のステップはスキップされます。</target>
        </trans-unit>
        <trans-unit id="28729f3a182bb43fe798fa0d0a35993e2c74015e" translate="yes" xml:space="preserve">
          <source>If true, the module assumes that the compiler itself does not provide an MPI implementation and skips to step 2.</source>
          <target state="translated">true の場合、モジュールはコンパイラ自身が MPI 実装を提供していないと仮定し、ステップ 2 にスキップします。</target>
        </trans-unit>
        <trans-unit id="e4d38ddd2c85476e4303eabe26804fb16927fc0c" translate="yes" xml:space="preserve">
          <source>If two or more directories contain libraries with identical file names and some libraries are linked from those directories, the library search path lookup will end up linking libraries from the first directory. This is a known limitation of Xcode.</source>
          <target state="translated">2つ以上のディレクトリに同じファイル名のライブラリが含まれており、いくつかのライブラリがそれらのディレクトリからリンクされている場合、ライブラリの検索パス検索は、最初のディレクトリからライブラリをリンクすることになります。これはXcodeの既知の制限事項です。</target>
        </trans-unit>
        <trans-unit id="c5d17bbb804d5250bd91f365271871df4c3e03a4" translate="yes" xml:space="preserve">
          <source>If unset (the default) it will only be emitted when the project was configured for an embedded Xcode SDK like iOS, tvOS, watchOS or any of the simulators.</source>
          <target state="translated">設定を解除すると(デフォルト)、iOS、tvOS、watchOS、またはシミュレータのような組み込みのXcode SDK用にプロジェクトが設定されている場合にのみ出力されます。</target>
        </trans-unit>
        <trans-unit id="c4debc9a25b5fbc1b4d73d514aa623b4655e9496" translate="yes" xml:space="preserve">
          <source>If unset or empty, rely on the compiler to determine whether the file should be preprocessed. If explicitly set to &lt;code&gt;OFF&lt;/code&gt; then the file does not need to be preprocessed. If explicitly set to &lt;code&gt;ON&lt;/code&gt;, then the file does need to be preprocessed as part of the compilation step.</source>
          <target state="translated">設定されていないか空の場合は、コンパイラに依存して、ファイルを前処理する必要があるかどうかを判断してください。明示的に &lt;code&gt;OFF&lt;/code&gt; に設定されている場合、ファイルを前処理する必要はありません。明示的に &lt;code&gt;ON&lt;/code&gt; に設定されている場合、ファイルはコンパイル手順の一部として前処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="35beb3e2b8fc61f0e40a1f1fcc7a56ec37a43f15" translate="yes" xml:space="preserve">
          <source>If using &lt;code&gt;FetchContent_Populate()&lt;/code&gt; within CMake&amp;rsquo;s script mode, be aware that the implementation sets up a sub-build which therefore requires a CMake generator and build tool to be available. If these cannot be found by default, then the &lt;a href=&quot;../variable/cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; variables will need to be set appropriately on the command line invoking the script.</source>
          <target state="translated">CMakeのスクリプトモードで &lt;code&gt;FetchContent_Populate()&lt;/code&gt; を使用する場合、実装はサブビルドをセットアップするため、CMakeジェネレーターとビルドツールを使用できるようにする必要があることに注意してください。これらがデフォルトで見つからない場合、&lt;a href=&quot;../variable/cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt; &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; &lt;/a&gt;変数を、スクリプトを呼び出すコマンドラインで適切に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="467d235ab2b447f04a92e3449a01dd60402b8f68" translate="yes" xml:space="preserve">
          <source>If variable &lt;code&gt;UseSWIG_TARGET_NAME_PREFERENCE&lt;/code&gt; is set to &lt;code&gt;STANDARD&lt;/code&gt;, this command is deprecated and &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command must be used instead.</source>
          <target state="translated">変数 &lt;code&gt;UseSWIG_TARGET_NAME_PREFERENCE&lt;/code&gt; が &lt;code&gt;STANDARD&lt;/code&gt; に設定されている場合、このコマンドは非推奨になり、&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;コマンドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3858510c34dbe23e3be2aabe2500e8eacf23da77" translate="yes" xml:space="preserve">
          <source>If we want our example project to also be used from a build directory we only have to add the following to &lt;code&gt;CMakeLists.txt&lt;/code&gt;:</source>
          <target state="translated">サンプルプロジェクトをビルドディレクトリからも使用したい場合は、 &lt;code&gt;CMakeLists.txt&lt;/code&gt; に以下を追加するだけです。</target>
        </trans-unit>
        <trans-unit id="55be3dca421b3e3930e5f2ffe02d2ceee70ea6d7" translate="yes" xml:space="preserve">
          <source>If wxWidgets is required (i.e., not an optional part):</source>
          <target state="translated">wxWidgetsが必須の場合(つまりオプションではない)。</target>
        </trans-unit>
        <trans-unit id="7629f66b98e72ca234c5e469dac092268133b92a" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t set the &lt;code&gt;INSTALLPATH&lt;/code&gt;, then by default the documentation will be installed to :</source>
          <target state="translated">&lt;code&gt;INSTALLPATH&lt;/code&gt; を設定しない場合、デフォルトでドキュメントは次の場所にインストールされます。</target>
        </trans-unit>
        <trans-unit id="240dfa844479574de8aa4d5a3b5d3347a001e2d0" translate="yes" xml:space="preserve">
          <source>If you have a good way of getting the version (from a header file, for example), you can use that information to set &lt;code&gt;Foo_VERSION&lt;/code&gt; (although note that find modules have traditionally used &lt;code&gt;Foo_VERSION_STRING&lt;/code&gt;, so you may want to set both). Otherwise, attempt to use the information from &lt;code&gt;pkg-config&lt;/code&gt;</source>
          <target state="translated">（ヘッダーファイルなどから）バージョンを取得する適切な方法がある場合は、その情報を使用して &lt;code&gt;Foo_VERSION&lt;/code&gt; を設定できます（ただし、findモジュールは従来から &lt;code&gt;Foo_VERSION_STRING&lt;/code&gt; を使用していたため、両方を設定することもできます）。それ以外の場合は、 &lt;code&gt;pkg-config&lt;/code&gt; からの情報を使用してみてください</target>
        </trans-unit>
        <trans-unit id="da2758d30b2b9d5cc70af05f5541b856dc3f949e" translate="yes" xml:space="preserve">
          <source>If you have options that depend on the values of other options, see the module help for &lt;a href=&quot;../module/cmakedependentoption#module:CMakeDependentOption&quot; id=&quot;index-0-module:CMakeDependentOption&quot;&gt;&lt;code&gt;CMakeDependentOption&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">他のオプションの値に依存するオプションがある場合は、&lt;a href=&quot;../module/cmakedependentoption#module:CMakeDependentOption&quot; id=&quot;index-0-module:CMakeDependentOption&quot;&gt; &lt;code&gt;CMakeDependentOption&lt;/code&gt; の&lt;/a&gt;モジュールヘルプを参照してください。</target>
        </trans-unit>
        <trans-unit id="a783d68605ba9a71240b242ac8a3558069d13192" translate="yes" xml:space="preserve">
          <source>If you need the multithreaded version of Qt, set QT_MT_REQUIRED to TRUE</source>
          <target state="translated">Qt のマルチスレッド版が必要な場合は、 QT_MT_REQUIRED を TRUE に設定します。</target>
        </trans-unit>
        <trans-unit id="ad3e21f3a121362d780a5f05bd1c165694d81eb7" translate="yes" xml:space="preserve">
          <source>If you pass plugins to &lt;code&gt;fixup_bundle&lt;/code&gt; as the libs parameter, you should install them or copy them into the bundle before calling &lt;code&gt;fixup_bundle&lt;/code&gt;. The &lt;code&gt;&amp;lt;libs&amp;gt;&lt;/code&gt; parameter is a list of libraries that must be fixed up, but that cannot be determined by &lt;code&gt;otool&lt;/code&gt; output analysis (i.e. &lt;code&gt;plugins&lt;/code&gt;).</source>
          <target state="translated">あなたがプラグインを渡すと &lt;code&gt;fixup_bundle&lt;/code&gt; libsのパラメータとして、あなたはそれらをインストールしたり、呼び出す前に、バンドルにコピーする必要があり &lt;code&gt;fixup_bundle&lt;/code&gt; を。 &lt;code&gt;&amp;lt;libs&amp;gt;&lt;/code&gt; パラメータがアップし、固定しなければならないライブラリのリストですが、それはによって決定することができない &lt;code&gt;otool&lt;/code&gt; 出力分析（すなわち &lt;code&gt;plugins&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="342ad3f46a23d13e0a765e537dc4610778667a26" translate="yes" xml:space="preserve">
          <source>If you specify &lt;code&gt;TEST_INCLUDE_FILE&lt;/code&gt;, that file will be included and processed when ctest is run on the directory.</source>
          <target state="translated">&lt;code&gt;TEST_INCLUDE_FILE&lt;/code&gt; を指定した場合、そのファイルはディレクトリでctestが実行されたときに含まれ、処理されます。</target>
        </trans-unit>
        <trans-unit id="5631b086af4391f2361051cda7064bef68b2d353" translate="yes" xml:space="preserve">
          <source>If you specify &lt;code&gt;TEST_INCLUDE_FILES&lt;/code&gt;, those files will be included and processed when ctest is run on the directory.</source>
          <target state="translated">&lt;code&gt;TEST_INCLUDE_FILES&lt;/code&gt; を指定すると、ctestがディレクトリで実行されるときに、それらのファイルが含まれ、処理されます。</target>
        </trans-unit>
        <trans-unit id="e59d0ed1eacb8a6f5056dead4f547cfdfdd94d5c" translate="yes" xml:space="preserve">
          <source>If you want to see the list of available presets, you can run:</source>
          <target state="translated">利用可能なプリセットのリストを見たい場合は、実行してください。</target>
        </trans-unit>
        <trans-unit id="86412892c8e08d7232ed2afcdac8386587aaa81f" translate="yes" xml:space="preserve">
          <source>If you wish to use the Gettext library (libintl), use &lt;a href=&quot;findintl#module:FindIntl&quot; id=&quot;index-0-module:FindIntl&quot;&gt;&lt;code&gt;FindIntl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Gettextライブラリ（libintl）を使用する場合は、&lt;a href=&quot;findintl#module:FindIntl&quot; id=&quot;index-0-module:FindIntl&quot;&gt; &lt;code&gt;FindIntl&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="9a9a21b6fc6b32a2e5566cbb1ecb16fe936ed261" translate="yes" xml:space="preserve">
          <source>If you wish to use the Gettext tools (&lt;code&gt;msgmerge&lt;/code&gt;, &lt;code&gt;msgfmt&lt;/code&gt;, etc.), use &lt;a href=&quot;findgettext#module:FindGettext&quot; id=&quot;index-0-module:FindGettext&quot;&gt;&lt;code&gt;FindGettext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Gettextツール（ &lt;code&gt;msgmerge&lt;/code&gt; 、 &lt;code&gt;msgfmt&lt;/code&gt; など）を使用する場合は、&lt;a href=&quot;findgettext#module:FindGettext&quot; id=&quot;index-0-module:FindGettext&quot;&gt; &lt;code&gt;FindGettext&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="220572356970df928c6654d008f10935c25277eb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to specify the installation of Python to use, you should modify the following cache variables:</source>
          <target state="translated">使用するPythonのインストールを指定する場合は、次のキャッシュ変数を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="438fe08156c697fc4a29879a7f819c1775f0e6bd" translate="yes" xml:space="preserve">
          <source>Ignore &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; 変数は無視してください。</target>
        </trans-unit>
        <trans-unit id="adf935e0986128222bf1d163af930827bd5b1d38" translate="yes" xml:space="preserve">
          <source>Ignore COMPILE_DEFINITIONS_&amp;lt;Config&amp;gt; properties</source>
          <target state="translated">COMPILE_DEFINITIONS_ &amp;lt;Config&amp;gt;プロパティを無視する</target>
        </trans-unit>
        <trans-unit id="e9c35c5bb1c27ffc7e719a70db469bf46b72c43d" translate="yes" xml:space="preserve">
          <source>Ignore the local branch and always checkout the branch specified by &lt;code&gt;GIT_TAG&lt;/code&gt;.</source>
          <target state="translated">ローカルブランチを無視し、常に &lt;code&gt;GIT_TAG&lt;/code&gt; で指定されたブランチをチェックアウトします。</target>
        </trans-unit>
        <trans-unit id="d4c835c0772da721ba47510daa9d1c33ac4af6e8" translate="yes" xml:space="preserve">
          <source>Ignored for non-imported targets.</source>
          <target state="translated">インポートされていないターゲットは無視されます。</target>
        </trans-unit>
        <trans-unit id="46a306057ab4969a4f6e26407924f5ce5ae2bd9a" translate="yes" xml:space="preserve">
          <source>Ignored. Behavior is default in CMake &amp;gt;= 3.0.</source>
          <target state="translated">無視されます。CMake 3.0以降の動作はデフォルトです。</target>
        </trans-unit>
        <trans-unit id="573fb946b1c80d307a08138735973b58a7c0036b" translate="yes" xml:space="preserve">
          <source>Ignored. See CMake Policy &lt;a href=&quot;../policy/cmp0043#policy:CMP0043&quot; id=&quot;index-0-policy:CMP0043&quot;&gt;&lt;code&gt;CMP0043&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">無視されます。CMakeポリシー&lt;a href=&quot;../policy/cmp0043#policy:CMP0043&quot; id=&quot;index-0-policy:CMP0043&quot;&gt; &lt;code&gt;CMP0043&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="77f70e23bc4f12a1f6fdf1f528ad6f98b0a0a140" translate="yes" xml:space="preserve">
          <source>Ignored. This was once used but is no longer needed.</source>
          <target state="translated">無視されています。かつては使われていましたが、不要になりました。</target>
        </trans-unit>
        <trans-unit id="f4a3dadc40ffc53df8d265e9f7ae52cef2b6b873" translate="yes" xml:space="preserve">
          <source>Implicit dependencies such as &lt;code&gt;Boost::filesystem&lt;/code&gt; requiring &lt;code&gt;Boost::system&lt;/code&gt; will be automatically detected and satisfied, even if system is not specified when using &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; and if &lt;code&gt;Boost::system&lt;/code&gt; is not added to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;. If using &lt;code&gt;Boost::thread&lt;/code&gt;, then &lt;code&gt;Threads::Threads&lt;/code&gt; will also be added automatically.</source>
          <target state="translated">&lt;code&gt;Boost::system&lt;/code&gt; を必要とする &lt;code&gt;Boost::filesystem&lt;/code&gt; などの暗黙的な依存関係は、&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; の&lt;/a&gt;使用時にシステムが指定されておらず、 &lt;code&gt;Boost::system&lt;/code&gt; が&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; に&lt;/a&gt;追加されていない場合でも、自動的に検出され、満たされます。 &lt;code&gt;Boost::thread&lt;/code&gt; を使用する場合、 &lt;code&gt;Threads::Threads&lt;/code&gt; も自動的に追加されます。</target>
        </trans-unit>
        <trans-unit id="a31b383678419806f5ead0560328ba2bf1c79265" translate="yes" xml:space="preserve">
          <source>Implicit link libraries and flags detected for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">言語 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; に対して暗黙的なリンクライブラリとフラグが検出されました。</target>
        </trans-unit>
        <trans-unit id="54f66e009276602ce456971ada8cab01104af9f8" translate="yes" xml:space="preserve">
          <source>Implicit linker framework search path detected for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">言語 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; の暗黙的なリンカーフレームワーク検索パスが検出されました。</target>
        </trans-unit>
        <trans-unit id="e247b753bea66dff24c42212fbf93dd51776ca60" translate="yes" xml:space="preserve">
          <source>Implicit linker search path detected for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">言語 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; の暗黙的なリンカー検索パスが検出されました。</target>
        </trans-unit>
        <trans-unit id="af7551d5e165e6893fd99488c8e51e2999fd587f" translate="yes" xml:space="preserve">
          <source>Implicitly created directories are created if they are not explicitly installed by &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command but are needed to install a file on a certain path. Example of such locations are directories created due to the setting of &lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">暗黙的に作成されたディレクトリは、&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;コマンドによって明示的にインストールされていないが、特定のパスにファイルをインストールするために必要な場合に作成されます。そのような場所の例は、&lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;の設定により作成されたディレクトリです。</target>
        </trans-unit>
        <trans-unit id="19a29d496677d34abdf4064ab67098cd6b05a91d" translate="yes" xml:space="preserve">
          <source>Important message printed to stderr to attract user&amp;rsquo;s attention.</source>
          <target state="translated">ユーザーの注意を引くためにstderrに出力される重要なメッセージ。</target>
        </trans-unit>
        <trans-unit id="1bd0d4de13d733783688f546062f97ab6a08713a" translate="yes" xml:space="preserve">
          <source>Imported Executables</source>
          <target state="translated">インポートされた実行ファイル</target>
        </trans-unit>
        <trans-unit id="55f6f305e45f8618dd5ce0a0030a07d3b2c2840f" translate="yes" xml:space="preserve">
          <source>Imported Libraries</source>
          <target state="translated">輸入されたライブラリ</target>
        </trans-unit>
        <trans-unit id="f6d0f7638ba3ef0cd1a426bf0a4f991c2e1cb7da" translate="yes" xml:space="preserve">
          <source>Imported Targets</source>
          <target state="translated">輸入ターゲット</target>
        </trans-unit>
        <trans-unit id="f7a9640a73a64138bfc84441dcc301f6a4199db2" translate="yes" xml:space="preserve">
          <source>Imported Targets from Packages</source>
          <target state="translated">パッケージからインポートしたターゲット</target>
        </trans-unit>
        <trans-unit id="202f02bfc5abfe27c17eb4fa3b977b33c84e9422" translate="yes" xml:space="preserve">
          <source>Imported target</source>
          <target state="translated">輸入されたターゲット</target>
        </trans-unit>
        <trans-unit id="375ae037609c8745f55b07c09854d5867d6c1cdf" translate="yes" xml:space="preserve">
          <source>Imported target for using iconv.</source>
          <target state="translated">iconvを使用するためにインポートされたターゲット。</target>
        </trans-unit>
        <trans-unit id="37a9c8f1d81835742651b320a0a628c6cc05785a" translate="yes" xml:space="preserve">
          <source>Imported target for using the ODBC library, if found.</source>
          <target state="translated">ODBC ライブラリを使用するためのターゲットをインポートしました。</target>
        </trans-unit>
        <trans-unit id="99d044d9c559cc35a01b48d24159e07faf855129" translate="yes" xml:space="preserve">
          <source>Imported targets</source>
          <target state="translated">輸入されたターゲット</target>
        </trans-unit>
        <trans-unit id="0553ae7222ae62138779db715a3a73a9d77d8fee" translate="yes" xml:space="preserve">
          <source>Imported targets:</source>
          <target state="translated">輸入されたターゲット。</target>
        </trans-unit>
        <trans-unit id="b278ed35e4c25d4e3cdb29eb8d2798d2851b3470" translate="yes" xml:space="preserve">
          <source>Importing Executables</source>
          <target state="translated">実行ファイルのインポート</target>
        </trans-unit>
        <trans-unit id="1dd489e5e4efeae515cf45caaa691b48566d2019" translate="yes" xml:space="preserve">
          <source>Importing Libraries</source>
          <target state="translated">ライブラリのインポート</target>
        </trans-unit>
        <trans-unit id="55f283ee7526f3c6e85099989f92e16c73f53ecc" translate="yes" xml:space="preserve">
          <source>Importing Targets</source>
          <target state="translated">ターゲットのインポート</target>
        </trans-unit>
        <trans-unit id="e042284b1c843195ddf0ddee4923e774dd610905" translate="yes" xml:space="preserve">
          <source>Importing and Exporting Guide</source>
          <target state="translated">輸出入ガイド</target>
        </trans-unit>
        <trans-unit id="f96c1beede9a123ecf0d86e367c948c1219cf9e6" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;CMakeLists.txt&lt;/code&gt; we add a filter to &lt;a href=&quot;../variable/cmake_automoc_depend_filters#variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-1-variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">で &lt;code&gt;CMakeLists.txt&lt;/code&gt; 我々はにフィルタを追加&lt;a href=&quot;../variable/cmake_automoc_depend_filters#variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-1-variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC_DEPEND_FILTERS&lt;/code&gt; &lt;/a&gt;このように：</target>
        </trans-unit>
        <trans-unit id="15070484d3d209ccce43582660ea91002809b0f6" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;main.cc&lt;/code&gt;, replace &lt;code&gt;#include MathFunctions.h&lt;/code&gt; with:</source>
          <target state="translated">で &lt;code&gt;main.cc&lt;/code&gt; 、置き換え &lt;code&gt;#include MathFunctions.h&lt;/code&gt; して：</target>
        </trans-unit>
        <trans-unit id="09fe57648c1c369f3f8a771a8556c013a4767b89" translate="yes" xml:space="preserve">
          <source>In CMake 2.4 and below it is possible to write code like</source>
          <target state="translated">CMake 2.4 以降では、以下のようなコードを書くことができます。</target>
        </trans-unit>
        <trans-unit id="372753e9354c3c48a489ae905cdd21b49709af37" translate="yes" xml:space="preserve">
          <source>In CMake 2.4 and below the variable &lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; was used to request compatibility with earlier versions of CMake. In CMake 2.6 and above all compatibility issues are handled by policies and the &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt; command. However, CMake must still check &lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; for projects written for CMake 2.4 and below.</source>
          <target state="translated">CMake 2.4 &lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; は、変数CMAKE_BACKWARDS_COMPATIBILITYを使用して、以前のバージョンのCMakeとの互換性を要求していました。CMake 2.6以降では、すべての互換性の問題はポリシーと&lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt;コマンドによって処理されます。ただし、CMakeは、CMake 2.4以下向けに &lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; れたプロジェクトについて、CMAKE_BACKWARDS_COMPATIBILITYを引き続きチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="792922d718799ee6eba92c4e81a40fa8d128071d" translate="yes" xml:space="preserve">
          <source>In CMake 2.6.1 and below, &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(GLOB_RECURSE)&lt;/code&gt;&lt;/a&gt; calls would follow through symlinks, sometimes coming up with unexpectedly large result sets because of symlinks to top level directories that contain hundreds of thousands of files.</source>
          <target state="translated">CMake 2.6.1 &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(GLOB_RECURSE)&lt;/code&gt; &lt;/a&gt;、file（GLOB_RECURSE）呼び出しはシンボリックリンクをたどり、数十万のファイルを含むトップレベルのディレクトリへのシンボリックリンクが原因で、予期しない大きな結果セットが生じる場合があります。</target>
        </trans-unit>
        <trans-unit id="a9a3a46efd9a05da1ef101fb3d68e675598b2b6a" translate="yes" xml:space="preserve">
          <source>In CMake 2.6.2 and below, CMake Policy settings in scripts loaded by the &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands would affect the includer. Explicit invocations of &lt;code&gt;cmake_policy(PUSH)&lt;/code&gt; and &lt;code&gt;cmake_policy(POP)&lt;/code&gt; were required to isolate policy changes and protect the includer. While some scripts intend to affect the policies of their includer, most do not. In CMake 2.6.3 and above, &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-1-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; by default &lt;code&gt;PUSH&lt;/code&gt; and &lt;code&gt;POP&lt;/code&gt; an entry on the policy stack around an included script, but provide a &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; option to disable it. This policy determines whether or not to imply &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; for compatibility. The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to imply &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; for &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-2-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to allow the commands to do their default cmake_policy &lt;code&gt;PUSH&lt;/code&gt; and &lt;code&gt;POP&lt;/code&gt;.</source>
          <target state="translated">CMake 2.6.2以前では、&lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;コマンドによってロードされたスクリプトのCMakeポリシー設定は、インクルーダーに影響します。ポリシーの変更を分離してインクルーダーを保護するには、 &lt;code&gt;cmake_policy(PUSH)&lt;/code&gt; および &lt;code&gt;cmake_policy(POP)&lt;/code&gt; を明示的に呼び出す必要がありました。一部のスクリプトはインクルーダーのポリシーに影響を与えることを意図していますが、ほとんどは影響しません。 CMake 2.6.3以降で&lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-1-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;、include（）および&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;がデフォルトで、含まれているスクリプトの周囲のポリシースタックのエントリを &lt;code&gt;PUSH&lt;/code&gt; および &lt;code&gt;POP&lt;/code&gt; しますが、 &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; オプションを使用して無効にします。このポリシーは、 &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; を暗示するかどうかを決定します互換性のため。 &lt;code&gt;OLD&lt;/code&gt; このポリシーの動作が暗示することです &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; をするために&lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-2-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;コマンドを。このポリシーの &lt;code&gt;NEW&lt;/code&gt; 動作は、コマンドがデフォルトのcmake_policy &lt;code&gt;PUSH&lt;/code&gt; および &lt;code&gt;POP&lt;/code&gt; を実行できるようにすることです。</target>
        </trans-unit>
        <trans-unit id="2b48795ed522bc01cb0a61e135326afd93efd3d3" translate="yes" xml:space="preserve">
          <source>In CMake 2.6.2 and below, incorrect variable reference syntax such as a missing close-brace (&lt;code&gt;${FOO&lt;/code&gt;) was reported but did not stop processing of CMake code. This policy determines whether a bad variable reference is an error. The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to warn about the error, leave the string untouched, and continue. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error.</source>
          <target state="translated">CMake 2.6.2以前では、閉じ括弧（ &lt;code&gt;${FOO&lt;/code&gt; ）がないなどの誤った変数参照構文が報告されていましたが、CMakeコードの処理は停止しませんでした。このポリシーは、不正な変数参照がエラーであるかどうかを決定します。このポリシーの &lt;code&gt;OLD&lt;/code&gt; 動作は、エラーについて警告し、文字列をそのままにして続行します。このポリシーの &lt;code&gt;NEW&lt;/code&gt; 動作は、エラーを報告することです。</target>
        </trans-unit>
        <trans-unit id="9b3433edb7ff048bd90b0cf8bd20b13ebf4f4128" translate="yes" xml:space="preserve">
          <source>In CMake 2.8.0 and lower the &lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-1-command:link_directories&quot;&gt;&lt;code&gt;link_directories()&lt;/code&gt;&lt;/a&gt; command passed relative paths unchanged to the linker. In CMake 2.8.1 and above the &lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-2-command:link_directories&quot;&gt;&lt;code&gt;link_directories()&lt;/code&gt;&lt;/a&gt; command prefers to interpret relative paths with respect to &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;, which is consistent with &lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt; and other commands. The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to use relative paths verbatim in the linker command. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to convert relative paths to absolute paths by appending the relative path to &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;.</source>
          <target state="translated">CMake 2.8.0以下では、&lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-1-command:link_directories&quot;&gt; &lt;code&gt;link_directories()&lt;/code&gt; &lt;/a&gt;コマンドは相対パスを変更せずにリンカーに渡しました。 CMakeの2.8.1に及び上方&lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-2-command:link_directories&quot;&gt; &lt;code&gt;link_directories()&lt;/code&gt; &lt;/a&gt;コマンドは、に対して相対パスを解釈することを好む &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; と一致して、&lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt;および他のコマンド。このポリシーの &lt;code&gt;OLD&lt;/code&gt; 動作は、リンカーコマンドで相対パスをそのまま使用することです。このポリシーの &lt;code&gt;NEW&lt;/code&gt; 動作は、相対パスを &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; に追加することにより、相対パスを絶対パスに変換することです。</target>
        </trans-unit>
        <trans-unit id="9be4f81cf981c948e1cbe0b9eef463edadd4739f" translate="yes" xml:space="preserve">
          <source>In CMake 2.8.12 and lower, the &lt;a href=&quot;../command/get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt;&lt;code&gt;get_target_property()&lt;/code&gt;&lt;/a&gt; command accepted a non-existent target argument without issuing any error or warning. The result variable is set to a &lt;code&gt;-NOTFOUND&lt;/code&gt; value.</source>
          <target state="translated">CMake 2.8.12以前では、&lt;a href=&quot;../command/get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt; &lt;code&gt;get_target_property()&lt;/code&gt; &lt;/a&gt;コマンドは、エラーや警告を発行することなく、存在しないターゲット引数を受け入れました。結果変数は &lt;code&gt;-NOTFOUND&lt;/code&gt; 値に設定されます。</target>
        </trans-unit>
        <trans-unit id="3f7b2894defd21b4487c815675a41df3e8ae2651" translate="yes" xml:space="preserve">
          <source>In CMake 2.8.2 and lower the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command silently ignored if it was called with only one argument, and this argument wasn&amp;rsquo;t a valid target. In CMake 2.8.3 and above it reports an error in this case.</source>
          <target state="translated">CMake 2.8.2 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;は、target_link_libraries（）コマンドが1つの引数のみで呼び出され、この引数が有効なターゲットではなかった場合、暗黙的に無視されていました。CMake 2.8.3以降では、この場合はエラーが報告されます。</target>
        </trans-unit>
        <trans-unit id="335c2a3c8a4d403f1f764426f14ed981c7b46667" translate="yes" xml:space="preserve">
          <source>In CMake 3.12 and above the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt; command now searches prefixes specified by the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable. Package roots are maintained as a stack so nested calls to all &lt;code&gt;find_*&lt;/code&gt; commands inside find modules also search the roots as prefixes. This policy provides compatibility with projects that have not been updated to avoid using &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; variables for other purposes.</source>
          <target state="translated">CMake 3.12以降では、&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt;コマンドは、 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake変数と &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 環境変数で指定されたプレフィックスを検索するようになりました。パッケージルートはスタックとして維持されるため、findモジュール内のすべての &lt;code&gt;find_*&lt;/code&gt; コマンドへのネストされた呼び出しも、ルートをプレフィックスとして検索します。このポリシーは、他の目的で &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 変数を使用しないように更新されていないプロジェクトとの互換性を提供します。</target>
        </trans-unit>
        <trans-unit id="3033f9e09ff46f3d188a16dc4cce2f3d3ff87954" translate="yes" xml:space="preserve">
          <source>In CMake 3.12 and above the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt; command now searches prefixes specified by the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable. Package roots are maintained as a stack so nested calls to all &lt;code&gt;find_*&lt;/code&gt; commands inside find modules and config packages also search the roots as prefixes. This policy provides compatibility with projects that have not been updated to avoid using &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; variables for other purposes.</source>
          <target state="translated">CMake 3.12以降では、&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt;コマンドは、 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake変数と &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 環境変数で指定されたプレフィックスを検索するようになりました。パッケージルートはスタックとして維持されるため、findモジュールおよびconfigパッケージ内のすべての &lt;code&gt;find_*&lt;/code&gt; コマンドへのネストされた呼び出しも、プレフィックスとしてルートを検索します。このポリシーは、他の目的で &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 変数を使用しないように、更新されていないプロジェクトとの互換性を提供します。</target>
        </trans-unit>
        <trans-unit id="9c52384a85b2b0709ff719e3942b18b6b142d396" translate="yes" xml:space="preserve">
          <source>In CMake 3.12 and above, the</source>
          <target state="translated">CMake 3.12 以降では</target>
        </trans-unit>
        <trans-unit id="dcd0de431a57788e96a4fd163c4a47d2f94dbb0b" translate="yes" xml:space="preserve">
          <source>In CMake 3.13 and above the &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-6-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command prefers to do nothing when a normal variable of the given name already exists. It does not create or update a cache entry or remove the normal variable. The new behavior is consistent between the first and later runs in a build tree. This policy provides compatibility with projects that have not been updated to expect the new behavior.</source>
          <target state="translated">CMake 3.13以上では、&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-6-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt;コマンドは、指定された名前の通常の変数がすでに存在する場合は何もしません。キャッシュエントリの作成や更新、通常の変数の削除は行いません。新しい動作は、ビルドツリーの最初の実行とその後の実行の間で一貫しています。このポリシーは、新しい動作を期待するように更新されていないプロジェクトとの互換性を提供します。</target>
        </trans-unit>
        <trans-unit id="72cd139f9b98415e4f7b303fa6cfbc01301676b4" translate="yes" xml:space="preserve">
          <source>In CMake 3.13 and above, the &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-1-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt; command now converts relative source file paths to absolute paths in the following cases:</source>
          <target state="translated">CMake 3.13以降では、&lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-1-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt;コマンドは次の場合に相対ソースファイルパスを絶対パスに変換するようになりました。</target>
        </trans-unit>
        <trans-unit id="570f166131644526527480ee73109380062d95f8" translate="yes" xml:space="preserve">
          <source>In CMake 3.13 and earlier, &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt; did not evaluate generator expressions. CMake 3.14 and later will evaluate generator expressions for &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-4-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-5-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">CMake 3.13以前では、&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install(CODE)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt; &lt;code&gt;install(SCRIPT)&lt;/code&gt; &lt;/a&gt;はジェネレーター式を評価しませんでした。CMake 3.14以降では、&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-4-command:install&quot;&gt; &lt;code&gt;install(CODE)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-5-command:install&quot;&gt; &lt;code&gt;install(SCRIPT)&lt;/code&gt; の&lt;/a&gt;ジェネレータ式を評価します。</target>
        </trans-unit>
        <trans-unit id="64de8365d63699cb266201100b308fbc397c135e" translate="yes" xml:space="preserve">
          <source>In CMake 3.13 and lower, the &lt;code&gt;$&amp;lt;IN_LIST:...&amp;gt;&lt;/code&gt; generator expression always returned &lt;code&gt;0&lt;/code&gt; if the first argument was empty, even if the list contained an empty item. This behavior is inconsistent with the &lt;code&gt;IN_LIST&lt;/code&gt; behavior of &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt;, which this generator expression is meant to emulate. CMake 3.14 and later handles this case correctly.</source>
          <target state="translated">CMake 3.13 &lt;code&gt;$&amp;lt;IN_LIST:...&amp;gt;&lt;/code&gt; は、リストに空のアイテムが含まれている場合でも、最初の引数が空の場合、$ &amp;lt;IN_LIST：...&amp;gt;ジェネレータ式は常に &lt;code&gt;0&lt;/code&gt; を返しました。この動作は、と矛盾している &lt;code&gt;IN_LIST&lt;/code&gt; のの行動&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt;このジェネレータ式をエミュレートすることを意味しています、。CMake 3.14以降では、このケースを正しく処理します。</target>
        </trans-unit>
        <trans-unit id="e4667764345f76b3be45041f957257e85d005081" translate="yes" xml:space="preserve">
          <source>In CMake 3.14 and below the &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command populated the user package registry by default and users needed to set the &lt;a href=&quot;../variable/cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; to disable it, e.g. in automated build and packaging environments. Since the user package registry is stored outside the build tree, this side effect should not be enabled by default. Therefore CMake 3.15 and above prefer that &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-2-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; does nothing unless an explicit &lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is set to enable it. This policy provides compatibility with projects that have not been updated.</source>
          <target state="translated">CMake 3.14以下では、&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt;コマンドはデフォルトでユーザーパッケージレジストリを設定し、ユーザーは&lt;a href=&quot;../variable/cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;を設定してそれを無効にする必要がありました（例：自動ビルドおよびパッケージング環境）。ユーザーパッケージレジストリはビルドツリーの外部に格納されるため、この副作用はデフォルトでは有効にしないでください。したがって、CMake 3.15 &lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;は、明示的なCMAKE_EXPORT_PACKAGE_REGISTRY変数が有効に設定されていない限り、&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-2-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt;は何もしないことを好みます。このポリシーは、更新されていないプロジェクトとの互換性を提供します。</target>
        </trans-unit>
        <trans-unit id="39d5f02ade2e50558290bf313056f6664fa821e0" translate="yes" xml:space="preserve">
          <source>In CMake 3.14 and below the module would report the Boost version number as specified in the preprocessor definition &lt;code&gt;BOOST_VERSION&lt;/code&gt; in the &lt;code&gt;boost/version.hpp&lt;/code&gt; file. In CMake 3.15 and later it is preferred that the reported version number matches the &lt;code&gt;x.y.z&lt;/code&gt; format reported by the CMake package shipped with Boost &lt;code&gt;1.70.0&lt;/code&gt; and later. The macro value is still reported in the &lt;code&gt;Boost_VERSION_MACRO&lt;/code&gt; variable.</source>
          <target state="translated">CMake 3.14以前では、モジュールは &lt;code&gt;boost/version.hpp&lt;/code&gt; ファイルのプリプロセッサー定義 &lt;code&gt;BOOST_VERSION&lt;/code&gt; で指定されているBoostバージョン番号を報告します。 CMake 3.15以降では、報告されるバージョン番号が、Boost &lt;code&gt;1.70.0&lt;/code&gt; 以降に同梱されているCMakeパッケージによって報告される &lt;code&gt;x.y.z&lt;/code&gt; 形式と一致することが推奨されます。マクロの値は引き続き &lt;code&gt;Boost_VERSION_MACRO&lt;/code&gt; 変数で報告されます。</target>
        </trans-unit>
        <trans-unit id="abc7d4f4650323e98e8d9c5ac28105af13619a2e" translate="yes" xml:space="preserve">
          <source>In CMake 3.14 and below, MSVC runtime library selection flags are added to the default &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; cache entries by CMake automatically. This allows users to edit their cache entries to adjust the flags. However, the presence of such default flags is problematic for projects that want to choose a different runtime library programmatically. In particular, it requires string editing of the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; variables with knowledge of the CMake builtin defaults so they can be replaced.</source>
          <target state="translated">CMake 3.14以前では、MSVCランタイムライブラリ選択フラグがCMakeによってデフォルトの &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; キャッシュエントリに自動的に追加されます。これにより、ユーザーはキャッシュエントリを編集してフラグを調整できます。ただし、このようなデフォルトフラグの存在は、プログラムで別のランタイムライブラリを選択するプロジェクトにとって問題となります。特に、 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 変数を文字列編集して、CMake ビルトインのデフォルトを知っている変数に置き換えることができるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="d7b83574eb8256db0a63919a719668937f20ba82" translate="yes" xml:space="preserve">
          <source>In CMake 3.15 and earlier, &lt;code&gt;RPATH&lt;/code&gt; entries set via &lt;a href=&quot;../variable/cmake_install_rpath#variable:CMAKE_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_INSTALL_RPATH&quot;&gt;&lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; or via &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; have not been escaped before being inserted into the &lt;code&gt;cmake_install.cmake&lt;/code&gt; script. Dynamic linkers on ELF-based systems (e.g. Linux and FreeBSD) allow certain keywords in &lt;code&gt;RPATH&lt;/code&gt; entries, such as &lt;code&gt;${ORIGIN}&lt;/code&gt; (More details are available in the &lt;code&gt;ld.so&lt;/code&gt; man pages on those systems). The syntax of these keywords can match CMake&amp;rsquo;s variable syntax. In order to not be substituted (usually to an empty string) already by the intermediary &lt;code&gt;cmake_install.cmake&lt;/code&gt; script, the user had to double-escape such &lt;code&gt;RPATH&lt;/code&gt; keywords, e.g. &lt;code&gt;set(CMAKE_INSTALL_RPATH &quot;\\\${ORIGIN}/../lib&quot;)&lt;/code&gt;. Since the intermediary &lt;code&gt;cmake_install.cmake&lt;/code&gt; script is an implementation detail of CMake, CMake 3.16 and later will make sure &lt;code&gt;RPATH&lt;/code&gt; entries are inserted literally by escaping any coincidental CMake syntax.</source>
          <target state="translated">CMake 3.15以前では、&lt;a href=&quot;../variable/cmake_install_rpath#variable:CMAKE_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_INSTALL_RPATH&quot;&gt; &lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt;を介して設定された &lt;code&gt;RPATH&lt;/code&gt; エントリは、 &lt;code&gt;cmake_install.cmake&lt;/code&gt; スクリプトに挿入される前にエスケープされていませんでした。 ELFベースのシステム（LinuxやFreeBSDなど）のダイナミックリンカーでは、 &lt;code&gt;${ORIGIN}&lt;/code&gt; などの &lt;code&gt;RPATH&lt;/code&gt; エントリで特定のキーワードを使用できます（詳細については、これらのシステムの &lt;code&gt;ld.so&lt;/code&gt; のマニュアルページを参照してください）。これらのキーワードの構文は、CMakeの可変構文と一致する可能性があります。中間の &lt;code&gt;cmake_install.cmake&lt;/code&gt; スクリプトによって（通常は空の文字列に）置き換えられないようにするために、ユーザーはそのような &lt;code&gt;RPATH&lt;/code&gt; キーワードをダブルエスケープする必要がありました。 &lt;code&gt;set(CMAKE_INSTALL_RPATH &quot;\\\${ORIGIN}/../lib&quot;)&lt;/code&gt; 。中間の &lt;code&gt;cmake_install.cmake&lt;/code&gt; スクリプトはCMakeの実装の詳細であるため、CMake 3.16以降では、偶然のCMake構文をエスケープして、 &lt;code&gt;RPATH&lt;/code&gt; エントリが文字通り挿入されるようにします。</target>
        </trans-unit>
        <trans-unit id="d277e3b954ca87ac257f2d438c009f94d4a88f65" translate="yes" xml:space="preserve">
          <source>In CMake 3.16 and below the &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-1-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; ignores the &lt;code&gt;BEFORE&lt;/code&gt; keyword in private scope. CMake 3.17 and later honors &lt;code&gt;BEFORE&lt;/code&gt; keyword in all scopes. This policy provides compatibility for projects that have not been updated to expect the new behavior.</source>
          <target state="translated">CMake 3.16以下では、&lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-1-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt;はプライベートスコープの &lt;code&gt;BEFORE&lt;/code&gt; キーワードを無視します。CMake 3.17以降は、すべてのスコープで &lt;code&gt;BEFORE&lt;/code&gt; キーワードを尊重します。このポリシーは、新しい動作を期待するために更新されていないプロジェクトに互換性を提供します。</target>
        </trans-unit>
        <trans-unit id="bef6ad23c580562c14dda513ee6797d627b3baad" translate="yes" xml:space="preserve">
          <source>In CMake 3.16 and below the interface link properties attached to libraries are not propagated for private dependencies of static libraries. Only the libraries themselves are propagated to link the dependent binary. CMake 3.17 and later prefer to propagate all interface link properties. This policy provides compatibility for projects that have not been updated to expect the new behavior.</source>
          <target state="translated">CMake 3.16 以降では、ライブラリに添付されているインターフェイス・リンク・プロパティは、静的ライブラリのプライベート依存性のためにプロパゲーションされません。依存するバイナリをリンクするために、ライブラリ自体のみが伝搬されます。CMake 3.17 以降では、すべてのインターフェイス・リンク・プロパティが伝搬されることを好みます。このポリシーは、新しい動作を期待して更新されていないプロジェクトとの互換性を提供します。</target>
        </trans-unit>
        <trans-unit id="bf3cdb495a4764b6e69f49536e598806fabece28" translate="yes" xml:space="preserve">
          <source>In CMake 3.16 and below, if a variable was not defined at all or just defined locally, the &lt;a href=&quot;../command/mark_as_advanced#command:mark_as_advanced&quot; id=&quot;index-1-command:mark_as_advanced&quot;&gt;&lt;code&gt;mark_as_advanced()&lt;/code&gt;&lt;/a&gt; command would create a new cache entry with an &lt;code&gt;UNINITIALIZED&lt;/code&gt; type and no value. When a &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt; (or other similar &lt;code&gt;find_&lt;/code&gt; command) would next run, it would find this undefined cache entry and set it up with an empty string value. This process would end up deleting the local variable in the process (due to the way the cache works), effectively clearing any stored &lt;code&gt;find_&lt;/code&gt; results that were only available in the local scope.</source>
          <target state="translated">CMake 3.16以下では、変数がまったく定義されていないか、ローカルで定義されているだけの場合、&lt;a href=&quot;../command/mark_as_advanced#command:mark_as_advanced&quot; id=&quot;index-1-command:mark_as_advanced&quot;&gt; &lt;code&gt;mark_as_advanced()&lt;/code&gt; &lt;/a&gt;コマンドは、 &lt;code&gt;UNINITIALIZED&lt;/code&gt; タイプで値のない新しいキャッシュエントリを作成します。とき&lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt; &lt;code&gt;find_path()&lt;/code&gt; &lt;/a&gt;（または他の同様の &lt;code&gt;find_&lt;/code&gt; コマンド）は、次実行します、それはこの未定義のキャッシュエントリを見つけて、空の文字列値でそれを設定します。このプロセスでは、（キャッシュの動作方法により）プロセス内のローカル変数が削除され、ローカルスコープでのみ使用可能であった保存 &lt;code&gt;find_&lt;/code&gt; 結果が効果的にクリアされます。</target>
        </trans-unit>
        <trans-unit id="aa45b1c9c742b0a84a82071e4542c5cec95b7523" translate="yes" xml:space="preserve">
          <source>In CMake 3.17 and below, a target can link to a target aliased to itself.</source>
          <target state="translated">CMake 3.17 以降では、ターゲットは自分自身にエイリアスされたターゲットにリンクすることができます。</target>
        </trans-unit>
        <trans-unit id="8c25a280f96bdef5898537e9c793009e48c97049" translate="yes" xml:space="preserve">
          <source>In CMake 3.17 and below, an &lt;code&gt;ALIAS&lt;/code&gt; target can overwrite silently an existing target with the same name.</source>
          <target state="translated">CMake 3.17以下では、 &lt;code&gt;ALIAS&lt;/code&gt; ターゲットは同じ名前の既存のターゲットをサイレントに上書きできます。</target>
        </trans-unit>
        <trans-unit id="52233ecd5059a884b04f18e073e2f2bf721d7e55" translate="yes" xml:space="preserve">
          <source>In CMake 3.17 and below, link options are not used by the device link step.</source>
          <target state="translated">CMake 3.17 以降では、デバイスリンクステップでリンクオプションは使用されません。</target>
        </trans-unit>
        <trans-unit id="dd8d58d6380ec62bf0653fe5bfb39fa563d3a50b" translate="yes" xml:space="preserve">
          <source>In CMake 3.17 and below, multiple calls to &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command with the same &lt;code&gt;FILE&lt;/code&gt; without &lt;code&gt;APPEND&lt;/code&gt; are accepted silently but only the last occurrence is taken into account during the generation.</source>
          <target state="translated">CMake 3.17以下では、 &lt;code&gt;APPEND&lt;/code&gt; なしで同じ &lt;code&gt;FILE&lt;/code&gt; を使用した&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt;コマンドの複数の呼び出しはサイレントに受け入れられますが、生成中に最後の発生のみが考慮されます。</target>
        </trans-unit>
        <trans-unit id="b9eef3f5013259375b6f7662fbb049bb4a8f7a36" translate="yes" xml:space="preserve">
          <source>In CMake 3.18 and below, step targets have some limitations:</source>
          <target state="translated">CMake 3.18 以降では、ステップターゲットにはいくつかの制限があります。</target>
        </trans-unit>
        <trans-unit id="0d00dcdb410145e1c763c21975aff70d3ba3fed0" translate="yes" xml:space="preserve">
          <source>In CMake 3.18 and below, the &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-1-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; command on UNIX would find files that are readable without requiring execute permission, and would not find files that are executable without read permission. In CMake 3.19 and above, &lt;code&gt;find_program&lt;/code&gt; now prefers to require execute permission but not read permission. This policy provides compatibility with projects that have not been updated to expect the new behavior.</source>
          <target state="translated">CMake 3.18以下では、UNIXの&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-1-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt;コマンドは、実行権限を必要とせずに読み取り可能なファイルを検索し、読み取り権限なしで実行可能なファイルを検索しませんでした。CMake 3.19以降では、 &lt;code&gt;find_program&lt;/code&gt; は実行権限を要求することを優先しますが、読み取り権限は要求しません。このポリシーは、新しい動作を期待するために更新されていないプロジェクトとの互換性を提供します。</target>
        </trans-unit>
        <trans-unit id="173094a741e02ff7542fa929d53bbf5ed65b3e40" translate="yes" xml:space="preserve">
          <source>In CMake 3.18 and lower a dependency on the evaluated target of the above generator expressions would always be added. CMake 3.19 and above prefer to not add this dependency. This policy provides compatibility for projects that have not been updated to expect the new behavior.</source>
          <target state="translated">CMake 3.18 以下では、上記のジェネレータ式の評価済みターゲットに対する依存関係が常に追加されていました。CMake 3.19 以降では、この依存関係は追加されません。このポリシーは、新しい動作を期待してアップデートされていないプロジェクトとの互換性を提供します。</target>
        </trans-unit>
        <trans-unit id="e354a84c7f0f402f5a9aab36bc287c5bf3701139" translate="yes" xml:space="preserve">
          <source>In CMake 3.18 and lower, the Makefile generators put a copy of both custom commands in the Makefile for target &lt;code&gt;second&lt;/code&gt; even though its dependency on target &lt;code&gt;first&lt;/code&gt; ensures that the first custom command runs before the second. Running &lt;code&gt;make second&lt;/code&gt; would cause the first custom command to run once in the &lt;code&gt;first&lt;/code&gt; target and then again in the &lt;code&gt;second&lt;/code&gt; target.</source>
          <target state="translated">CMake 3.18以前では、Makefileジェネレーターは、 &lt;code&gt;first&lt;/code&gt; ターゲットへの依存により最初のカスタムコマンドが2番目のコマンドの前に実行されることを保証しますが、両方のカスタムコマンドのコピーをターゲットの &lt;code&gt;second&lt;/code&gt; のMakefileに配置します。 &lt;code&gt;make second&lt;/code&gt; を実行すると、最初のカスタムコマンドが &lt;code&gt;first&lt;/code&gt; ターゲットで1回実行され、次に &lt;code&gt;second&lt;/code&gt; ターゲットで再度実行されます。</target>
        </trans-unit>
        <trans-unit id="9560cec4710b5fdc0ce4e694e7776bc6b003bf3f" translate="yes" xml:space="preserve">
          <source>In CMake 3.19 and above, the &lt;a href=&quot;../module/externalproject#module:ExternalProject&quot; id=&quot;index-1-module:ExternalProject&quot;&gt;&lt;code&gt;ExternalProject&lt;/code&gt;&lt;/a&gt; module prefers a revised design to address these problems:</source>
          <target state="translated">CMake 3.19以降では、&lt;a href=&quot;../module/externalproject#module:ExternalProject&quot; id=&quot;index-1-module:ExternalProject&quot;&gt; &lt;code&gt;ExternalProject&lt;/code&gt; &lt;/a&gt;モジュールは、これらの問題に対処するために改訂された設計を優先します。</target>
        </trans-unit>
        <trans-unit id="c4ca3b41553414dd479832020e4819c448616aaa" translate="yes" xml:space="preserve">
          <source>In CMake versions 2.6.4 and lower the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-1-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command implicitly dereferenced arguments corresponding to variables, even those named like numbers or boolean constants, except for &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;. Numbers and boolean constants such as &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, &lt;code&gt;no&lt;/code&gt;, &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;off&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;notfound&lt;/code&gt;, &lt;code&gt;ignore&lt;/code&gt; (all case insensitive) were recognized in some cases but not all. For example, the code &lt;code&gt;if(TRUE)&lt;/code&gt; might have evaluated as &lt;code&gt;false&lt;/code&gt;. Numbers such as 2 were recognized only in boolean expressions like &lt;code&gt;if(NOT 2)&lt;/code&gt; (leading to &lt;code&gt;false&lt;/code&gt;) but not as a single-argument like &lt;code&gt;if(2)&lt;/code&gt; (also leading to &lt;code&gt;false&lt;/code&gt;). Later versions of CMake prefer to treat numbers and boolean constants literally, so they should not be used as variable names.</source>
          <target state="translated">CMakeバージョン2.6.4以下では、&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-1-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt;コマンドは、 &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;1&lt;/code&gt; を除いて、数値やブール定数のような名前の変数であっても、変数に対応する引数を暗黙的に逆参照しました。 &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;false&lt;/code&gt; 、 &lt;code&gt;yes&lt;/code&gt; 、 &lt;code&gt;no&lt;/code&gt; 、 &lt;code&gt;on&lt;/code&gt; 、 &lt;code&gt;off&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; 、 &lt;code&gt;n&lt;/code&gt; 、 &lt;code&gt;notfound&lt;/code&gt; 、 &lt;code&gt;ignore&lt;/code&gt; （すべて大文字と小文字を区別しない）などの数値とブール定数が認識されたが、すべてではなかった。たとえば、コード &lt;code&gt;if(TRUE)&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; と評価された可能性があります。2などの数値は、 &lt;code&gt;if(NOT 2)&lt;/code&gt; （ &lt;code&gt;false&lt;/code&gt; につながる）のようなブール式でのみ認識されましたが、 &lt;code&gt;if(2)&lt;/code&gt; （ &lt;code&gt;false&lt;/code&gt; につながる）のような単一の引数としては認識されませんでした。CMakeの以降のバージョンでは、数値とブール定数を文字どおりに扱うことを好むため、変数名として使用しないでください。</target>
        </trans-unit>
        <trans-unit id="fae7d644c697e56b02ba19472fab36952e4fb166" translate="yes" xml:space="preserve">
          <source>In CMake versions 2.8.2 through 2.8.12, this variable holds the fourth version number component of the &lt;a href=&quot;cmake_version#variable:CMAKE_VERSION&quot; id=&quot;index-0-variable:CMAKE_VERSION&quot;&gt;&lt;code&gt;CMAKE_VERSION&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">CMakeバージョン2.8.2〜2.8.12では、この変数はCMAKE_VERSION変数の4番目のバージョン番号コンポーネントを&lt;a href=&quot;cmake_version#variable:CMAKE_VERSION&quot; id=&quot;index-0-variable:CMAKE_VERSION&quot;&gt; &lt;code&gt;CMAKE_VERSION&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3994edbc03f12e3873ed0faf0b76d0fe4f8a8b77" translate="yes" xml:space="preserve">
          <source>In CMake versions 3.10.1 and 3.10.2, this option was called &lt;code&gt;TIMEOUT&lt;/code&gt;. This clashed with the &lt;code&gt;TIMEOUT&lt;/code&gt; test property, which is one of the common properties that would be set with the &lt;code&gt;PROPERTIES&lt;/code&gt; keyword, usually leading to legal but unintended behavior. The keyword was changed to &lt;code&gt;DISCOVERY_TIMEOUT&lt;/code&gt; in CMake 3.10.3 to address this problem. The ambiguous behavior of the &lt;code&gt;TIMEOUT&lt;/code&gt; keyword in 3.10.1 and 3.10.2 has not been preserved.</source>
          <target state="translated">CMakeバージョン3.10.1および3.10.2では、このオプションは &lt;code&gt;TIMEOUT&lt;/code&gt; と呼ばれていました。これは &lt;code&gt;TIMEOUT&lt;/code&gt; テストプロパティと衝突しました。これは、 &lt;code&gt;PROPERTIES&lt;/code&gt; キーワードで設定される一般的なプロパティの1つであり、通常は合法ですが意図しない動作につながります。この問題に対処するため、CMake 3.10.3ではキーワードが &lt;code&gt;DISCOVERY_TIMEOUT&lt;/code&gt; に変更されました。3.10.1および3.10.2の &lt;code&gt;TIMEOUT&lt;/code&gt; キーワードのあいまいな動作は保持されていません。</target>
        </trans-unit>
        <trans-unit id="5eb53b89c84abccbd172e9f7665d4f94fd415fca" translate="yes" xml:space="preserve">
          <source>In CMake versions prior to 3.0 this command returned a command line that directly invokes the native build tool for the current generator. Their implementation of the &lt;code&gt;PROJECT_NAME&lt;/code&gt; option had no useful effects, so CMake now warns on use of the option.</source>
          <target state="translated">3.0以前のCMakeバージョンでは、このコマンドは、現在のジェネレーターのネイティブビルドツールを直接呼び出すコマンドラインを返しました。 &lt;code&gt;PROJECT_NAME&lt;/code&gt; オプションの実装には効果がなかったため、CMakeはオプションの使用について警告するようになりました。</target>
        </trans-unit>
        <trans-unit id="5dca42f556e4fcf7bb59ad78bbf6d0dd1b3d8f67" translate="yes" xml:space="preserve">
          <source>In Module mode the loaded find module is responsible to honor the request detailed by these variables; see the find module for details. In Config mode &lt;code&gt;find_package&lt;/code&gt; handles &lt;code&gt;REQUIRED&lt;/code&gt;, &lt;code&gt;QUIET&lt;/code&gt;, and &lt;code&gt;[version]&lt;/code&gt; options automatically but leaves it to the package configuration file to handle components in a way that makes sense for the package. The package configuration file may set &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; to false to tell &lt;code&gt;find_package&lt;/code&gt; that component requirements are not satisfied.</source>
          <target state="translated">モジュールモードでは、ロードされた検索モジュールは、これらの変数によって詳述された要求を受け入れる責任があります。詳細については、findモジュールを参照してください。構成モードでは、 &lt;code&gt;find_package&lt;/code&gt; は &lt;code&gt;REQUIRED&lt;/code&gt; 、 &lt;code&gt;QUIET&lt;/code&gt; 、および &lt;code&gt;[version]&lt;/code&gt; オプションを自動的に処理しますが、パッケージに適した方法でコンポーネントを処理するために、パッケージ構成ファイルに任せます。パッケージ構成ファイルは、 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; をfalseに &lt;code&gt;find_package&lt;/code&gt; て、コンポーネントの要件が満たされていないことをfind_packageに通知する場合があります。</target>
        </trans-unit>
        <trans-unit id="90bc7624e2e39f63a4443878d95118f6f8b9e529" translate="yes" xml:space="preserve">
          <source>In Module mode, CMake searches for a file called &lt;code&gt;Find&amp;lt;PackageName&amp;gt;.cmake&lt;/code&gt;. The file is first searched in the &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;, then among the &lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;Find Modules&lt;/a&gt; provided by the CMake installation. If the file is found, it is read and processed by CMake. It is responsible for finding the package, checking the version, and producing any needed messages. Some find-modules provide limited or no support for versioning; check the module documentation.</source>
          <target state="translated">モジュールモードでは、CMakeは &lt;code&gt;Find&amp;lt;PackageName&amp;gt;.cmake&lt;/code&gt; というファイルを検索します。ファイルは最初に&lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; &lt;/a&gt;で&lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;検索&lt;/a&gt;され、次にCMakeインストールによって提供される検索モジュール間で検索されます。ファイルが見つかると、CMakeによって読み取られて処理されます。パッケージの検索、バージョンの確認、必要なメッセージの生成を担当します。一部のfind-modulesは、バージョン管理を限定的にサポートするか、サポートしません。モジュールのドキュメントを確認してください。</target>
        </trans-unit>
        <trans-unit id="bd67accab842c1259a891972da1d36bc52886fe6" translate="yes" xml:space="preserve">
          <source>In Visual Studio solution, by default the &lt;code&gt;INSTALL&lt;/code&gt; target will not be part of the default build. Setting this variable will enable the &lt;code&gt;INSTALL&lt;/code&gt; target to be part of the default build.</source>
          <target state="translated">Visual Studioソリューションでは、デフォルトで &lt;code&gt;INSTALL&lt;/code&gt; ターゲットはデフォルトビルドの一部にはなりません。この変数を設定すると、 &lt;code&gt;INSTALL&lt;/code&gt; ターゲットをデフォルトのビルドの一部にすることができます。</target>
        </trans-unit>
        <trans-unit id="fa00d568302b5b8e19e42a7d91ce7994c91f2c5c" translate="yes" xml:space="preserve">
          <source>In Visual Studio solution, by default the &lt;code&gt;PACKAGE&lt;/code&gt; target will not be part of the default build. Setting this variable will enable the &lt;code&gt;PACKAGE&lt;/code&gt; target to be part of the default build.</source>
          <target state="translated">Visual Studioソリューションでは、デフォルトで &lt;code&gt;PACKAGE&lt;/code&gt; ターゲットはデフォルトビルドの一部にはなりません。この変数を設定すると、 &lt;code&gt;PACKAGE&lt;/code&gt; ターゲットをデフォルトのビルドの一部にすることができます。</target>
        </trans-unit>
        <trans-unit id="cb189b5a79af6cbfd40bd6eeac484fae4d0192b4" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt;&lt;code&gt;ctest_build()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">で&lt;a href=&quot;#ctest-script&quot;&gt;CTESTスクリプト&lt;/a&gt;、&lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt; &lt;code&gt;ctest_build()&lt;/code&gt; &lt;/a&gt;コマンドは、このステップを実行します。コマンドの引数には、ステップ設定の一部を指定できます。</target>
        </trans-unit>
        <trans-unit id="fe0108a3b8ad00b0b35ec2b8d4631469052c69cf" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_configure#command:ctest_configure&quot; id=&quot;index-0-command:ctest_configure&quot;&gt;&lt;code&gt;ctest_configure()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">で&lt;a href=&quot;#ctest-script&quot;&gt;CTESTスクリプト&lt;/a&gt;、&lt;a href=&quot;../command/ctest_configure#command:ctest_configure&quot; id=&quot;index-0-command:ctest_configure&quot;&gt; &lt;code&gt;ctest_configure()&lt;/code&gt; &lt;/a&gt;コマンドは、このステップを実行します。コマンドの引数には、ステップ設定の一部を指定できます。</target>
        </trans-unit>
        <trans-unit id="43318da7a2639ac6f1c4b4dcbf7498b8ac9bf561" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt;&lt;code&gt;ctest_coverage()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">で&lt;a href=&quot;#ctest-script&quot;&gt;CTESTスクリプト&lt;/a&gt;、&lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt; &lt;code&gt;ctest_coverage()&lt;/code&gt; &lt;/a&gt;コマンドは、このステップを実行します。コマンドの引数には、ステップ設定の一部を指定できます。</target>
        </trans-unit>
        <trans-unit id="d89b5b9dad977c71dc5cddce179a082a1f66ab18" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt;&lt;code&gt;ctest_memcheck()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">で&lt;a href=&quot;#ctest-script&quot;&gt;CTESTスクリプト&lt;/a&gt;、&lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt; &lt;code&gt;ctest_memcheck()&lt;/code&gt; &lt;/a&gt;コマンドは、このステップを実行します。コマンドの引数には、ステップ設定の一部を指定できます。</target>
        </trans-unit>
        <trans-unit id="487c35ce6bcfba74e035f483401129536df8a5b2" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings. The command first runs the command-line specified by the &lt;code&gt;CTEST_CHECKOUT_COMMAND&lt;/code&gt; variable, if set, to initialize the source directory.</source>
          <target state="translated">で&lt;a href=&quot;#ctest-script&quot;&gt;CTESTスクリプト&lt;/a&gt;、&lt;a href=&quot;../command/ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt; &lt;code&gt;ctest_start()&lt;/code&gt; &lt;/a&gt;コマンドは、このステップを実行します。コマンドの引数には、ステップ設定の一部を指定できます。このコマンドは、 &lt;code&gt;CTEST_CHECKOUT_COMMAND&lt;/code&gt; 変数（設定されている場合）で指定されたコマンドラインを最初に実行して、ソースディレクトリを初期化します。</target>
        </trans-unit>
        <trans-unit id="6fad17710ee7a849a23070df97414a6efd651114" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">で&lt;a href=&quot;#ctest-script&quot;&gt;CTESTスクリプト&lt;/a&gt;、&lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt; &lt;code&gt;ctest_submit()&lt;/code&gt; &lt;/a&gt;コマンドは、このステップを実行します。コマンドの引数には、ステップ設定の一部を指定できます。</target>
        </trans-unit>
        <trans-unit id="71936e6502cfce889a40e4ff2bd8b932fe36e412" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">で&lt;a href=&quot;#ctest-script&quot;&gt;CTESTスクリプト&lt;/a&gt;、&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt;コマンドは、このステップを実行します。コマンドの引数には、ステップ設定の一部を指定できます。</target>
        </trans-unit>
        <trans-unit id="b7324b400aafb97f6400cda583b36a017e57c0f6" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt;, the &lt;a href=&quot;../command/ctest_update#command:ctest_update&quot; id=&quot;index-0-command:ctest_update&quot;&gt;&lt;code&gt;ctest_update()&lt;/code&gt;&lt;/a&gt; command runs this step. Arguments to the command may specify some of the step settings.</source>
          <target state="translated">で&lt;a href=&quot;#ctest-script&quot;&gt;CTESTスクリプト&lt;/a&gt;、&lt;a href=&quot;../command/ctest_update#command:ctest_update&quot; id=&quot;index-0-command:ctest_update&quot;&gt; &lt;code&gt;ctest_update()&lt;/code&gt; &lt;/a&gt;コマンドは、このステップを実行します。コマンドの引数には、ステップ設定の一部を指定できます。</target>
        </trans-unit>
        <trans-unit id="8ce3963c46c66f8fcff18a25a83dc99f4e00034d" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;FooConfig.cmake&lt;/code&gt; file there may be code like this to make the install destinations know to the using project:</source>
          <target state="translated">で &lt;code&gt;FooConfig.cmake&lt;/code&gt; のファイルのインストール先を使用してプロジェクトを知っているにするには、このようなコードがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="3753e1a317f6a9f6c9bbb54b7a5f9607fca8cb6d" translate="yes" xml:space="preserve">
          <source>In a function, &lt;code&gt;ARGN&lt;/code&gt;, &lt;code&gt;ARGC&lt;/code&gt;, &lt;code&gt;ARGV&lt;/code&gt; and &lt;code&gt;ARGV0&lt;/code&gt;, &lt;code&gt;ARGV1&lt;/code&gt;, &amp;hellip; are true variables in the usual CMake sense. In a macro, they are not, they are string replacements much like the C preprocessor would do with a macro. This has a number of consequences, as explained in the &lt;a href=&quot;#argument-caveats&quot;&gt;Argument Caveats&lt;/a&gt; section below.</source>
          <target state="translated">関数では、 &lt;code&gt;ARGN&lt;/code&gt; 、 &lt;code&gt;ARGC&lt;/code&gt; 、 &lt;code&gt;ARGV&lt;/code&gt; および &lt;code&gt;ARGV0&lt;/code&gt; 、 &lt;code&gt;ARGV1&lt;/code&gt; 、&amp;hellip;は通常のCMakeの意味での真の変数です。マクロではそうではありません。Cプリプロセッサがマクロで行うのと同じように、これらは文字列の置換です。以下の「&lt;a href=&quot;#argument-caveats&quot;&gt;引数の警告」&lt;/a&gt;セクションで説明するように、これには多くの影響があります。</target>
        </trans-unit>
        <trans-unit id="579a843a8d47b112e922e3a0067ff904a489e088" translate="yes" xml:space="preserve">
          <source>In a similar manner, libraries from other projects may be accessed through &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-11-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets.</source>
          <target state="translated">同様に、他のプロジェクトのライブラリには、&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-11-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;ターゲットを介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="feb0dde0de4d247b825639ee8afea990e68b79da" translate="yes" xml:space="preserve">
          <source>In addition to accepting values from that command, values may be set directly on any directory using the &lt;a href=&quot;../command/set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; command, and can be set on the current directory using the &lt;a href=&quot;../command/set_directory_properties#command:set_directory_properties&quot; id=&quot;index-0-command:set_directory_properties&quot;&gt;&lt;code&gt;set_directory_properties()&lt;/code&gt;&lt;/a&gt; command. A directory gets its initial value from its parent directory if it has one. The initial value of the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property comes from the value of this property. Both directory and target property values are adjusted by calls to the &lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-1-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt; command. Calls to &lt;a href=&quot;../command/set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/set_directory_properties#command:set_directory_properties&quot; id=&quot;index-1-command:set_directory_properties&quot;&gt;&lt;code&gt;set_directory_properties()&lt;/code&gt;&lt;/a&gt;, however, will update the directory property value without updating target property values. Therefore direct property updates must be made before calls to &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; for targets they are meant to affect.</source>
          <target state="translated">そのコマンドから値を受け入れることに加えて、値は&lt;a href=&quot;../command/set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt;コマンドを使用して任意のディレクトリに直接設定でき、&lt;a href=&quot;../command/set_directory_properties#command:set_directory_properties&quot; id=&quot;index-0-command:set_directory_properties&quot;&gt; &lt;code&gt;set_directory_properties()&lt;/code&gt; &lt;/a&gt;コマンドを使用して現在のディレクトリに設定できます。ディレクトリには、親ディレクトリがある場合、その親ディレクトリから初期値が取得されます。&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;ターゲットプロパティの初期値は、このプロパティの値から取得されます。ディレクトリとターゲットの両方のプロパティ値は、&lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-1-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt;コマンドの呼び出しによって調整されます。&lt;a href=&quot;../command/set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../command/set_directory_properties#command:set_directory_properties&quot; id=&quot;index-1-command:set_directory_properties&quot;&gt; &lt;code&gt;set_directory_properties()&lt;/code&gt; の&lt;/a&gt;呼び出しただし、ターゲットプロパティ値を更新せずにディレクトリプロパティ値を更新します。したがって、直接的なプロパティの更新は、それらが影響を与えることが意図されているターゲットの&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; の&lt;/a&gt;呼び出しの前に行う必要があります。</target>
        </trans-unit>
        <trans-unit id="50a879fc595fded2fb67a7b4fb11a9fda93cf2c1" translate="yes" xml:space="preserve">
          <source>In addition to cmake language files, the &lt;code&gt;EXPORT_ANDROID_MK&lt;/code&gt; mode maybe used to specify an export to the android ndk build system. This mode accepts the same options as the normal export mode. The Android NDK supports the use of prebuilt libraries, both static and shared. This allows cmake to build the libraries of a project and make them available to an ndk build system complete with transitive dependencies, include flags and defines required to use the libraries.</source>
          <target state="translated">cmake言語ファイルに加えて、 &lt;code&gt;EXPORT_ANDROID_MK&lt;/code&gt; モードを使用して、android ndkビルドシステムへのエクスポートを指定できます。このモードは、通常のエクスポートモードと同じオプションを受け入れます。Android NDKは、静的ライブラリと共有ライブラリの両方のビルド済みライブラリの使用をサポートしています。これにより、cmakeはプロジェクトのライブラリをビルドし、推移的な依存関係を備えたndkビルドシステムで利用できるようにし、ライブラリの使用に必要なフラグと定義を含めます。</target>
        </trans-unit>
        <trans-unit id="d7370c8bb1ae47a436be47a0c5121f782d551c71" translate="yes" xml:space="preserve">
          <source>In addition to finding the includes and libraries required to compile an &lt;code&gt;HDF5&lt;/code&gt; client application, this module also makes an effort to find tools that come with the &lt;code&gt;HDF5&lt;/code&gt; distribution that may be useful for regression testing.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;HDF5&lt;/code&gt; クライアントアプリケーションをコンパイルするために必要なインクルードとライブラリを見つけることに加えて、回帰テストに役立つ可能性のある &lt;code&gt;HDF5&lt;/code&gt; ディストリビューションに付属するツールを見つける努力もします。</target>
        </trans-unit>
        <trans-unit id="5d54a0528f7710258d68c8f84aaaa0e907798e54" translate="yes" xml:space="preserve">
          <source>In addition to global properties, this command (for historical reasons) also supports the &lt;a href=&quot;../prop_dir/variables#prop_dir:VARIABLES&quot; id=&quot;index-0-prop_dir:VARIABLES&quot;&gt;&lt;code&gt;VARIABLES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_dir/macros#prop_dir:MACROS&quot; id=&quot;index-0-prop_dir:MACROS&quot;&gt;&lt;code&gt;MACROS&lt;/code&gt;&lt;/a&gt; directory properties. It also supports a special &lt;code&gt;COMPONENTS&lt;/code&gt; global property that lists the components given to the &lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">グローバルプロパティに加えて、このコマンドは（歴史的な理由により）&lt;a href=&quot;../prop_dir/variables#prop_dir:VARIABLES&quot; id=&quot;index-0-prop_dir:VARIABLES&quot;&gt; &lt;code&gt;VARIABLES&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../prop_dir/macros#prop_dir:MACROS&quot; id=&quot;index-0-prop_dir:MACROS&quot;&gt; &lt;code&gt;MACROS&lt;/code&gt; &lt;/a&gt;ディレクトリプロパティもサポートします。また、&lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;コマンドに指定されたコンポーネントをリストする特別な &lt;code&gt;COMPONENTS&lt;/code&gt; グローバルプロパティもサポートしています。</target>
        </trans-unit>
        <trans-unit id="97693a61211b6c08cdfb2cd555ffec5b362cd1ef" translate="yes" xml:space="preserve">
          <source>In addition to referencing the formal parameters you can reference the &lt;code&gt;ARGC&lt;/code&gt; variable which will be set to the number of arguments passed into the function as well as &lt;code&gt;ARGV0&lt;/code&gt;, &lt;code&gt;ARGV1&lt;/code&gt;, &lt;code&gt;ARGV2&lt;/code&gt;, &amp;hellip; which will have the actual values of the arguments passed in. This facilitates creating functions with optional arguments.</source>
          <target state="translated">仮パラメーターを参照することに加えて、関数に渡される引数の数に設定される &lt;code&gt;ARGC&lt;/code&gt; 変数と、渡された引数の実際の値を持つ &lt;code&gt;ARGV0&lt;/code&gt; 、 &lt;code&gt;ARGV1&lt;/code&gt; 、 &lt;code&gt;ARGV2&lt;/code&gt; 、&amp;hellip;を参照できます。これにより、オプションの引数を持つ関数を作成します。</target>
        </trans-unit>
        <trans-unit id="3434845571c6e46ffa234c8b21b2ffc295a3c478" translate="yes" xml:space="preserve">
          <source>In addition to referencing the formal parameters you can reference the values &lt;code&gt;${ARGC}&lt;/code&gt; which will be set to the number of arguments passed into the function as well as &lt;code&gt;${ARGV0}&lt;/code&gt;, &lt;code&gt;${ARGV1}&lt;/code&gt;, &lt;code&gt;${ARGV2}&lt;/code&gt;, &amp;hellip; which will have the actual values of the arguments passed in. This facilitates creating macros with optional arguments.</source>
          <target state="translated">仮パラメーターの参照に加えて、関数に渡される引数の数に設定される値 &lt;code&gt;${ARGC}&lt;/code&gt; と &lt;code&gt;${ARGV0}&lt;/code&gt; 、 &lt;code&gt;${ARGV1}&lt;/code&gt; 、 &lt;code&gt;${ARGV2}&lt;/code&gt; 、&amp;hellip;を参照できます。渡された引数の実際の値を持っています。これにより、オプションの引数を持つマクロの作成が容易になります。</target>
        </trans-unit>
        <trans-unit id="3dabd33fa95da3cf66e6d9c8b7a5cce0374b6cb3" translate="yes" xml:space="preserve">
          <source>In addition to the above cache variables, the following cache variables are also defined for each content name (&lt;code&gt;&amp;lt;ucName&amp;gt;&lt;/code&gt; is the uppercased value of &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;):</source>
          <target state="translated">上記キャッシュ変数に加えて、次のキャッシュ変数は、各コンテンツ名に定義されている（ &lt;code&gt;&amp;lt;ucName&amp;gt;&lt;/code&gt; の大文字値は &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="94ed95d0c53ea8fa8873d2f2f706c0c390a1c5fc" translate="yes" xml:space="preserve">
          <source>In addition to the above explicit options, any other unrecognized options are passed through unmodified to &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-5-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; to perform the download, patch and update steps. The following options are explicitly prohibited (they are disabled by the &lt;code&gt;FetchContent_Populate()&lt;/code&gt; command):</source>
          <target state="translated">上記の明示的なオプションに加えて、その他の認識されないオプションは、変更なしで&lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-5-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;に渡され、ダウンロード、パッチ、および更新の手順が実行されます。次のオプションは明示的に禁止されてい &lt;code&gt;FetchContent_Populate()&lt;/code&gt; コマンドによって無効にされます）。</target>
        </trans-unit>
        <trans-unit id="d5dd10862833ccd92e2b4b6f172f88e43ebfc131" translate="yes" xml:space="preserve">
          <source>In addition to the common options listed above, each target can accept the following additional arguments:</source>
          <target state="translated">上記の一般的なオプションに加えて、各ターゲットは以下の追加引数を受け入れることができます。</target>
        </trans-unit>
        <trans-unit id="3a49868c0e41bd48c9083505542b8d5cd093e0c8" translate="yes" xml:space="preserve">
          <source>In all cases the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is treated as case-insensitive and corresponds to any of the names specified (&lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; or names given by &lt;code&gt;NAMES&lt;/code&gt;).</source>
          <target state="translated">すべての場合において、 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; は大文字と小文字を区別しないものとして扱われ、指定された名前（ &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; または &lt;code&gt;NAMES&lt;/code&gt; によって指定された名前）のいずれかに対応します。</target>
        </trans-unit>
        <trans-unit id="d3c51d75965d97b1950e57135b6774b69840c10e" translate="yes" xml:space="preserve">
          <source>In all cases the &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; may be zero or more of the &lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt; below.</source>
          <target state="translated">すべての場合において、 &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; は、以下の&lt;a href=&quot;#options&quot;&gt;オプションの&lt;/a&gt;ゼロまたはそれ以上です。</target>
        </trans-unit>
        <trans-unit id="6acbf382166d428d3e4cf5ab410fd7895fcb887a" translate="yes" xml:space="preserve">
          <source>In an effort to remove some clutter and clear up some issues for people who are not necessarily Tcl/Tk gurus/developers, some variables were moved or removed. Changes compared to CMake 2.4 are:</source>
          <target state="translated">ごちゃごちゃした部分を取り除き、Tcl/Tkの達人/開発者とは限らない人のための問題をクリアするために、いくつかの変数を移動したり、削除したりしました。CMake 2.4 との変更点は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="53d65c0b6bf60de95e52df5f2a3f462eaac305bf" translate="yes" xml:space="preserve">
          <source>In another directory, we can link unconditionally to the &lt;code&gt;Upstream::lib1&lt;/code&gt; target, which may be an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-12-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target from a package, or an &lt;code&gt;ALIAS&lt;/code&gt; target if built as part of the same buildsystem.</source>
          <target state="translated">別のディレクトリで、無条件で &lt;code&gt;Upstream::lib1&lt;/code&gt; ターゲットにリンクできます。これは、パッケージからの&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-12-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;ターゲット、または同じビルドシステムの一部としてビルドされている場合は &lt;code&gt;ALIAS&lt;/code&gt; ターゲットです。</target>
        </trans-unit>
        <trans-unit id="eef826a55cac06c1879ce9ba465cfaebe56eca9c" translate="yes" xml:space="preserve">
          <source>In both of these cases (typically on the first run in a new build tree), the &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-4-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command gives the cache entry type &lt;code&gt;BOOL&lt;/code&gt; and removes any normal (non-cached) variable of the same name. In the remaining case that the cache entry of the specified name already exists and has a type (typically on later runs in a build tree), the &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-5-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command changes nothing and any normal variable of the same name remains set.</source>
          <target state="translated">これらの両方のケース（通常、新しいビルドツリーでの最初の実行時）では、&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-4-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt;コマンドはキャッシュエントリタイプに &lt;code&gt;BOOL&lt;/code&gt; を指定し、同じ名前の通常の（キャッシュされていない）変数を削除します。指定された名前のキャッシュエントリが既に存在し、タイプがある（通常、ビルドツリーで後で実行される）場合、&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-5-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt;コマンドは何も変更せず、同じ名前の通常の変数は設定されたままになります。</target>
        </trans-unit>
        <trans-unit id="1d4d2fd211b265548d953b40147e0537bd2cf7b8" translate="yes" xml:space="preserve">
          <source>In build trees generated by CMake, this configuration file is generated by the &lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module if included by the project. The module uses variables to obtain a value for each setting as documented with the settings below.</source>
          <target state="translated">CMakeによって生成されるビルドツリーでは、プロジェクトに含まれている場合、この構成ファイルは&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt;モジュールによって生成されます。モジュールは変数を使用して、以下の設定で文書化されているように各設定の値を取得します。</target>
        </trans-unit>
        <trans-unit id="1424f591443e77ee7cef06a3de669dbef60b455c" translate="yes" xml:space="preserve">
          <source>In buildsystems which contain &lt;code&gt;foo.c&lt;/code&gt; and &lt;code&gt;foo.cpp&lt;/code&gt;, building the &lt;code&gt;foo.i&lt;/code&gt; target will preprocess both files.</source>
          <target state="translated">含まbuildsystemsで &lt;code&gt;foo.c&lt;/code&gt; のと &lt;code&gt;foo.cpp&lt;/code&gt; を、建物 &lt;code&gt;foo.i&lt;/code&gt; ターゲットは、両方のファイルを前処理するだろう。</target>
        </trans-unit>
        <trans-unit id="b396b032ed160a8687e2ead0aeb30c843bb59dd8" translate="yes" xml:space="preserve">
          <source>In case of malformed variables CMake will fail:</source>
          <target state="translated">変数に不正な形式のものがある場合、CMake は失敗します。</target>
        </trans-unit>
        <trans-unit id="fe856104fa4469feb8fa40c88847f24bf3e30606" translate="yes" xml:space="preserve">
          <source>In cases where a non-trivial generator expression is used, the &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; expression may be used within the argument of an &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; expression. It is a replacement marker which expands to the installation prefix when imported by a consuming project.</source>
          <target state="translated">非自明ジェネレータ式が使用される場合には、 &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; の発現は、引数内で使用することができる &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; の発現。これは、使用プロジェクトによってインポートされたときにインストールプレフィックスに展開される置換マーカーです。</target>
        </trans-unit>
        <trans-unit id="b011d3c74fd868c800972d925777646d63cd2366" translate="yes" xml:space="preserve">
          <source>In cases where it is known that a package configuration file is provided by upstream, and only that should be used, the &lt;code&gt;CONFIG&lt;/code&gt; keyword may be passed to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">上流からパッケージ構成ファイルが提供されていることがわかっていて、それだけを使用する必要がある場合は、 &lt;code&gt;CONFIG&lt;/code&gt; キーワードを&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; に&lt;/a&gt;渡すことができます。</target>
        </trans-unit>
        <trans-unit id="de15853a2871cb4dd054a7627f7786744075e443" translate="yes" xml:space="preserve">
          <source>In cross-compiling or packaging scenarios where the sysroot is read-only or where the sysroot should otherwise remain pristine, the &lt;a href=&quot;../../variable/cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt; variable can be set to a location to actually install the files.</source>
          <target state="translated">sysrootが読み取り専用であるか、sysrootを元の状態に保つ必要があるクロスコンパイルまたはパッケージングのシナリオでは、&lt;a href=&quot;../../variable/cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt; &lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt; &lt;/a&gt;変数を実際にファイルをインストールする場所に設定できます。</target>
        </trans-unit>
        <trans-unit id="008f2be7204bb4603233413b9f5b594b55c2417d" translate="yes" xml:space="preserve">
          <source>In cygwin, look for the cygwin version first. Don&amp;rsquo;t look for it later to avoid finding the cygwin version on a Win32 build.</source>
          <target state="translated">cygwinで、最初にcygwinバージョンを探します。Win32ビルドでcygwinバージョンを見つけるのを避けるために、後で検索しないでください。</target>
        </trans-unit>
        <trans-unit id="bc86e86efba49805a225a14ad8716f777dd1b746" translate="yes" xml:space="preserve">
          <source>In each of the following JSON-related subcommands, if the optional &lt;code&gt;ERROR_VARIABLE&lt;/code&gt; argument is given, errors will be reported in &lt;code&gt;&amp;lt;error-variable&amp;gt;&lt;/code&gt; and the &lt;code&gt;&amp;lt;out-var&amp;gt;&lt;/code&gt; will be set to &lt;code&gt;&amp;lt;member|index&amp;gt;-[&amp;lt;member|index&amp;gt;...]-NOTFOUND&lt;/code&gt; with the path elements up to the point where the error occurred, or just &lt;code&gt;NOTFOUND&lt;/code&gt; if there is no relevant path. If an error occurs but the &lt;code&gt;ERROR_VARIABLE&lt;/code&gt; option is not present, a fatal error message is generated. If no error occurs, the &lt;code&gt;&amp;lt;error-variable&amp;gt;&lt;/code&gt; will be set to &lt;code&gt;NOTFOUND&lt;/code&gt;.</source>
          <target state="translated">以下のJSON関連の各サブコマンドで、オプションの &lt;code&gt;ERROR_VARIABLE&lt;/code&gt; 引数を指定すると、エラーが &lt;code&gt;&amp;lt;error-variable&amp;gt;&lt;/code&gt; で報告され、 &lt;code&gt;&amp;lt;out-var&amp;gt;&lt;/code&gt; が &lt;code&gt;&amp;lt;member|index&amp;gt;-[&amp;lt;member|index&amp;gt;...]-NOTFOUND&lt;/code&gt; 設定されます。 &amp;gt; ...]-エラーが発生したポイントまでのパス要素を含む &lt;code&gt;NOTFOUND&lt;/code&gt; 、または関連するパスがない場合は単にNOTFOUND。エラーが発生したが &lt;code&gt;ERROR_VARIABLE&lt;/code&gt; オプションが存在しない場合、致命的なエラーメッセージが生成されます。エラーが発生しない場合、 &lt;code&gt;&amp;lt;error-variable&amp;gt;&lt;/code&gt; は &lt;code&gt;NOTFOUND&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="12e446a6b5af8852c6a882e3f68fa7ab24de49ad" translate="yes" xml:space="preserve">
          <source>In either case (or even when providing both variables and imported targets), find modules should provide backwards compatibility with old versions that had the same name.</source>
          <target state="translated">どちらの場合でも(あるいは変数とインポートされたターゲットの両方を提供する場合でも)、findモジュールは同じ名前を持つ古いバージョンとの下位互換性を提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="da2fc9270765521b14ff00542bf409c894166e1d" translate="yes" xml:space="preserve">
          <source>In more complex project hierarchies, the dependency relationships can be more complicated. Consider a hierarchy where &lt;code&gt;projA&lt;/code&gt; is the top level project and it depends directly on projects &lt;code&gt;projB&lt;/code&gt; and &lt;code&gt;projC&lt;/code&gt;. Both &lt;code&gt;projB&lt;/code&gt; and &lt;code&gt;projC&lt;/code&gt; can be built standalone and they also both depend on another project &lt;code&gt;projD&lt;/code&gt;. &lt;code&gt;projB&lt;/code&gt; additionally depends on &lt;code&gt;projE&lt;/code&gt;. This example assumes that all five projects are available on a company git server. The &lt;code&gt;CMakeLists.txt&lt;/code&gt; of each project might have sections like the following:</source>
          <target state="translated">より複雑なプロジェクト階層では、依存関係はさらに複雑になる可能性があります。 &lt;code&gt;projA&lt;/code&gt; が最上位プロジェクトであり、プロジェクト &lt;code&gt;projB&lt;/code&gt; および &lt;code&gt;projC&lt;/code&gt; に直接依存している階層について考えてみます。 &lt;code&gt;projB&lt;/code&gt; と &lt;code&gt;projC&lt;/code&gt; はどちらもスタンドアロンで構築でき、どちらも別のプロジェクト &lt;code&gt;projD&lt;/code&gt; に依存しています。 &lt;code&gt;projB&lt;/code&gt; は別途に依存 &lt;code&gt;projE&lt;/code&gt; 。この例では、5つのプロジェクトすべてが会社のgitサーバーで使用できると想定しています。各プロジェクトの &lt;code&gt;CMakeLists.txt&lt;/code&gt; には、次のようなセクションがあります。</target>
        </trans-unit>
        <trans-unit id="ed218fea753c58fb2eb5486f89dfe4fd864e22a5" translate="yes" xml:space="preserve">
          <source>In most cases none of the above variables will require setting, unless multiple ICU versions are available and a specific version is required.</source>
          <target state="translated">複数のICUバージョンが利用可能で、特定のバージョンが必要な場合を除き、ほとんどの場合、上記の変数のどれも設定を必要としません。</target>
        </trans-unit>
        <trans-unit id="575370cf46ed9e09106e304eff794982cfaf6350" translate="yes" xml:space="preserve">
          <source>In most cases none of the above variables will require setting, unless multiple Ice versions are available and a specific version is required. On Windows, the most recent version of Ice will be found through the registry. On Unix, the programs, headers and libraries will usually be in standard locations, but Ice_SLICE_DIRS might not be automatically detected (commonly known locations are searched). All the other variables are defaulted using Ice_HOME, if set. It&amp;rsquo;s possible to set Ice_HOME and selectively specify alternative locations for the other components; this might be required for e.g. newer versions of Visual Studio if the heuristics are not sufficient to identify the correct programs and libraries for the specific Visual Studio version.</source>
          <target state="translated">複数のIceバージョンが利用可能で、特定のバージョンが必要でない限り、ほとんどの場合、上記の変数は設定を必要としません。 Windowsでは、Iceの最新バージョンはレジストリから見つかります。 Unixでは、プログラム、ヘッダー、およびライブラリは通常、標準の場所にありますが、Ice_SLICE_DIRSは自動的に検出されない場合があります（一般に既知の場所が検索されます）。他のすべての変数は、設定されている場合、Ice_HOMEを使用してデフォルト設定されます。 Ice_HOMEを設定し、他のコンポーネントの代替の場所を選択的に指定することが可能です。これは、特定のVisual Studioバージョンの正しいプログラムとライブラリを特定するためのヒューリスティックが不十分な場合など、新しいバージョンのVisual Studioで必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="56d6cf3cf27e503d93d2ad459825a9ddd5170e36" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; will just be a couple of options defining the download method and method-specific details like a commit tag or archive hash. For example:</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; は、ダウンロード方法と、コミットタグやアーカイブハッシュなどの方法固有の詳細を定義するいくつかのオプションになります。例えば：</target>
        </trans-unit>
        <trans-unit id="5be4de0f38cec75433162f506732238b6deb0b94" translate="yes" xml:space="preserve">
          <source>In most cases, the only argument given to &lt;code&gt;FetchContent_Populate()&lt;/code&gt; is the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. When used this way, the command assumes the content details have been recorded by an earlier call to &lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-0-command:fetchcontent_declare&quot;&gt;&lt;code&gt;FetchContent_Declare()&lt;/code&gt;&lt;/a&gt;. The details are stored in a global property, so they are unaffected by things like variable or directory scope. Therefore, it doesn&amp;rsquo;t matter where in the project the details were previously declared, as long as they have been declared before the call to &lt;code&gt;FetchContent_Populate()&lt;/code&gt;. Those saved details are then used to construct a call to &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-2-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; in a private sub-build to perform the content population immediately. The implementation of &lt;code&gt;ExternalProject_Add()&lt;/code&gt; ensures that if the content has already been populated in a previous CMake run, that content will be reused rather than repopulating them again. For the common case where population involves downloading content, the cost of the download is only paid once.</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; に渡される唯一の引数は &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; です。この方法で使用すると、コマンドはコンテンツの詳細が&lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-0-command:fetchcontent_declare&quot;&gt; &lt;code&gt;FetchContent_Declare()&lt;/code&gt; &lt;/a&gt;への以前の呼び出しによって記録されていると想定します。詳細はグローバルプロパティに格納されるため、変数やディレクトリのスコープなどの影響を受けません。したがって、 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; の呼び出し前に詳細が宣言されていれば、プロジェクトのどこで以前に詳細が宣言されていても問題ありません。保存されたこれらの詳細は、プライベートサブビルドで&lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-2-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;への呼び出しを作成するために使用され、コンテンツの作成をすぐに実行します。 &lt;code&gt;ExternalProject_Add()&lt;/code&gt; の実装以前のCMakeの実行でコンテンツが既に入力されている場合は、そのコンテンツが再入力されるのではなく再利用されることを保証します。人口がコンテンツのダウンロードを伴う一般的なケースでは、ダウンロードの費用は一度だけ支払われます。</target>
        </trans-unit>
        <trans-unit id="60645aed53818a69cd9c8c00beb389b36af7e2bd" translate="yes" xml:space="preserve">
          <source>In most cases, the saved details do not specify any options relating to the directories to use for the internal sub-build, final source and build areas. It is generally best to leave these decisions up to the &lt;code&gt;FetchContent&lt;/code&gt; module to handle on the project&amp;rsquo;s behalf. The &lt;code&gt;FETCHCONTENT_BASE_DIR&lt;/code&gt; cache variable controls the point under which all content population directories are collected, but in most cases developers would not need to change this. The default location is &lt;code&gt;${CMAKE_BINARY_DIR}/_deps&lt;/code&gt;, but if developers change this value, they should aim to keep the path short and just below the top level of the build tree to avoid running into path length problems on Windows.</source>
          <target state="translated">ほとんどの場合、保存された詳細には、内部サブビルド、最終ソース、およびビルド領域に使用するディレクトリに関連するオプションが指定されていません。一般に、これらの決定は &lt;code&gt;FetchContent&lt;/code&gt; モジュールに任せて、プロジェクトに代わって処理するのが最善です。 &lt;code&gt;FETCHCONTENT_BASE_DIR&lt;/code&gt; のキャッシュ変数は、すべてのコンテンツの人口のディレクトリが収集され、その下の点を制御し、ほとんどの場合、開発者はこれを変更する必要はありません。デフォルトの場所は &lt;code&gt;${CMAKE_BINARY_DIR}/_deps&lt;/code&gt; ですが、開発者がこの値を変更する場合、Windowsでパス長の問題が発生しないように、パスを短く、ビルドツリーの最上位レベルのすぐ下に保つことを目的とする必要があります。</target>
        </trans-unit>
        <trans-unit id="27353e019ba2c66a5e7aeac725cb00f81aeb155f" translate="yes" xml:space="preserve">
          <source>In most command signatures where the &lt;code&gt;INTERFACE&lt;/code&gt; keyword appears, the items listed after it only become part of that target&amp;rsquo;s usage requirements and are not part of the target&amp;rsquo;s own settings. However, in this signature of &lt;code&gt;add_library&lt;/code&gt;, the &lt;code&gt;INTERFACE&lt;/code&gt; keyword refers to the library type only. Sources listed after it in the &lt;code&gt;add_library&lt;/code&gt; call are &lt;code&gt;PRIVATE&lt;/code&gt; to the interface library and do not appear in its &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt;&lt;code&gt;INTERFACE_SOURCES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; キーワードが表示されるほとんどのコマンド署名では、その後にリストされる項目は、そのターゲットの使用要件の一部になるだけであり、ターゲット自体の設定の一部ではありません。ただし、この &lt;code&gt;add_library&lt;/code&gt; の署名では、 &lt;code&gt;INTERFACE&lt;/code&gt; キーワードはライブラリタイプのみを参照します。 &lt;code&gt;add_library&lt;/code&gt; 呼び出しでその後にリストされているソースは、インターフェイスライブラリに対して &lt;code&gt;PRIVATE&lt;/code&gt; であり、&lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt; &lt;code&gt;INTERFACE_SOURCES&lt;/code&gt; &lt;/a&gt;ターゲットプロパティには表示されません。</target>
        </trans-unit>
        <trans-unit id="65fc96648b0c8fe8929cd2f04149b800764e1a41" translate="yes" xml:space="preserve">
          <source>In new projects, please use the &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_XXX&lt;/code&gt; equivalents. Additionally, the following variables are deprecated:</source>
          <target state="translated">新しいプロジェクトでは、 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_XXX&lt;/code&gt; を使用してください。さらに、以下の変数は非推奨です。</target>
        </trans-unit>
        <trans-unit id="a358467d931a2a73c3c567b94f39d973f221864a" translate="yes" xml:space="preserve">
          <source>In order to control the guessing step, the following variable may be set:</source>
          <target state="translated">推測ステップを制御するために、以下の変数を設定してもよい。</target>
        </trans-unit>
        <trans-unit id="57373d5071051b529e1ed01e1ec480cc2ece27a2" translate="yes" xml:space="preserve">
          <source>In order to evaluate variable references immediately when scheduling a deferred call, wrap it using &lt;code&gt;cmake_language(EVAL)&lt;/code&gt;. However, note that arguments will be re-evaluated in the deferred call, though that can be avoided by using bracket arguments. For example:</source>
          <target state="translated">遅延呼び出しをスケジュールするときに変数参照をすぐに評価するには、 &lt;code&gt;cmake_language(EVAL)&lt;/code&gt; を使用して変数参照をラップします。ただし、引数は据え置き呼び出しで再評価されることに注意してください。ただし、ブラケット引数を使用することで回避できます。例えば：</target>
        </trans-unit>
        <trans-unit id="5c405d9b4b475b1074c352a32918dac161c6d4f7" translate="yes" xml:space="preserve">
          <source>In order to make cross compiling your project easier, use &lt;code&gt;try_run&lt;/code&gt; only if really required. If you use &lt;code&gt;try_run&lt;/code&gt;, use the &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; or &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; options only if really required. Using them will require that when cross-compiling, the cache variables will have to be set manually to the output of the executable. You can also &amp;ldquo;guard&amp;rdquo; the calls to &lt;code&gt;try_run&lt;/code&gt; with an &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; block checking the &lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-1-variable:CMAKE_CROSSCOMPILING&quot;&gt;&lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt;&lt;/a&gt; variable and provide an easy-to-preset alternative for this case.</source>
          <target state="translated">プロジェクトのクロスコンパイルを容易にするために、本当に必要な場合にのみ &lt;code&gt;try_run&lt;/code&gt; を使用してください。あなたが使用している場合は &lt;code&gt;try_run&lt;/code&gt; 、使用 &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; または &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; 本当に必要な場合にのみ、オプション。それらを使用するには、クロスコンパイル時に、キャッシュ変数を実行可能ファイルの出力に手動で設定する必要があります。また、&lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-1-variable:CMAKE_CROSSCOMPILING&quot;&gt; &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; &lt;/a&gt;変数をチェックする&lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt;ブロックを &lt;code&gt;try_run&lt;/code&gt; してtry_runへの呼び出しを「保護」し、この場合に簡単に設定できる代替手段を提供することもできます。</target>
        </trans-unit>
        <trans-unit id="785ed4da0043260ec21f55facc118ed4401d7cf4" translate="yes" xml:space="preserve">
          <source>In order to support projects depending on linker search paths added by linking to libraries with known full paths, the &lt;code&gt;OLD&lt;/code&gt; behavior for this policy will add the linker search paths even though they are not needed for their own libraries. When this policy is set to &lt;code&gt;OLD&lt;/code&gt;, CMake will produce a link line such as</source>
          <target state="translated">既知のフルパスを持つライブラリにリンクすることによって追加されたリンカー検索パスに依存するプロジェクトをサポートするために、このポリシーの &lt;code&gt;OLD&lt;/code&gt; 動作は、それらが独自のライブラリに必要ない場合でもリンカー検索パスを追加します。このポリシーが &lt;code&gt;OLD&lt;/code&gt; に設定されている場合、CMakeは次のようなリンク行を生成します</target>
        </trans-unit>
        <trans-unit id="f5fbffa39f02c815da46345eb1a2a94103583f5d" translate="yes" xml:space="preserve">
          <source>In other words, when &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; appear in a target&amp;rsquo;s &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-5-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; property they will be treated as &lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;Interface Libraries&lt;/a&gt;, but when they appear in a target&amp;rsquo;s &lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt;&lt;code&gt;LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; property their object files will be included in the link too.</source>
          <target state="translated">つまり、 &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;オブジェクトライブラリ&lt;/a&gt;がターゲットの&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-5-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;プロパティに表示されると、それらは&lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;インターフェイスライブラリ&lt;/a&gt;として扱われますが、ターゲットの&lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt; &lt;code&gt;LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;プロパティに表示されると、オブジェクトファイルもリンクに含まれます。</target>
        </trans-unit>
        <trans-unit id="bec4fb23c8d962608e746326eb0d69fe492310ad" translate="yes" xml:space="preserve">
          <source>In our example, &lt;code&gt;MathFunctions_MAJOR_VERSION&lt;/code&gt; is defined as a &lt;a href=&quot;../../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt; which means that it must be compatible among the dependencies of any depender. By setting this custom defined user property in this version and in the next version of &lt;code&gt;MathFunctions&lt;/code&gt;, &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; will issue a diagnostic if there is an attempt to use version 3 together with version 4. Packages can choose to employ such a pattern if different major versions of the package are designed to be incompatible.</source>
          <target state="translated">この例では、 &lt;code&gt;MathFunctions_MAJOR_VERSION&lt;/code&gt; は&lt;a href=&quot;../../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; &lt;/a&gt;として定義されています。これは、依存関係の依存関係間で互換性がなければならないことを意味します。このバージョンと次のバージョンの &lt;code&gt;MathFunctions&lt;/code&gt; でこのカスタム定義のユーザープロパティを設定することにより、バージョン3をバージョン4と一緒に使用しようとすると、&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt;は診断を発行します。パッケージは互換性がないように設計されています。</target>
        </trans-unit>
        <trans-unit id="482951e89e498e98e571bf236b6e756ff80bdbcf" translate="yes" xml:space="preserve">
          <source>In processing the requirement for the &lt;code&gt;cxx_constexpr&lt;/code&gt; feature, &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; will ensure that the in-use C++ compiler is capable of the feature, and will add any necessary flags such as &lt;code&gt;-std=gnu++11&lt;/code&gt; to the compile lines of C++ files in the &lt;code&gt;mylib&lt;/code&gt; target. A &lt;code&gt;FATAL_ERROR&lt;/code&gt; is issued if the compiler is not capable of the feature.</source>
          <target state="translated">&lt;code&gt;cxx_constexpr&lt;/code&gt; の要件の処理中機能の、&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;は、使用中のC ++コンパイラがこの機能に対応できるようにし、 &lt;code&gt;-std=gnu++11&lt;/code&gt; などの必要なフラグをC ++ファイルのコンパイル行に追加します。で &lt;code&gt;mylib&lt;/code&gt; ターゲット。 &lt;code&gt;FATAL_ERROR&lt;/code&gt; は、コンパイラが機能できない場合に発行されます。</target>
        </trans-unit>
        <trans-unit id="cb73cd3993ee3625ca7b6607d4d6b217f76a6132" translate="yes" xml:space="preserve">
          <source>In projects that use a large number of commonly available features from a particular language standard (e.g. C++ 11) one may specify a meta-feature (e.g. &lt;code&gt;cxx_std_11&lt;/code&gt;) that requires use of a compiler mode aware of that standard. This is simpler than specifying all the features individually, but does not guarantee the existence of any particular feature. Diagnosis of use of unsupported features will be delayed until compile time.</source>
          <target state="translated">特定の言語標準（C ++ 11など）の一般的に利用可能な機能を多数使用するプロジェクトでは、その標準を認識するコンパイラモードの使用を必要とするメタ機能（ &lt;code&gt;cxx_std_11&lt;/code&gt; など）を指定できます。これは、すべての機能を個別に指定するよりも簡単ですが、特定の機能の存在を保証するものではありません。サポートされていない機能の使用の診断は、コンパイル時まで延期されます。</target>
        </trans-unit>
        <trans-unit id="01d5356b91ce68f3df813bfbaaab6214e9158490" translate="yes" xml:space="preserve">
          <source>In projects that use a large number of commonly available features from a particular language standard (e.g. C++ 11) one may specify a meta-feature (e.g. &lt;code&gt;cxx_std_11&lt;/code&gt;) that requires use of a compiler mode that is at minimum aware of that standard, but could be greater. This is simpler than specifying all the features individually, but does not guarantee the existence of any particular feature. Diagnosis of use of unsupported features will be delayed until compile time.</source>
          <target state="translated">特定の言語標準（C ++ 11など）から一般的に利用可能な機能を多数使用するプロジェクトでは、少なくともその標準を認識しているコンパイラモードの使用を必要とするメタ機能（ &lt;code&gt;cxx_std_11&lt;/code&gt; など）を指定できますが、大きくなる。これは、すべての機能を個別に指定するよりも簡単ですが、特定の機能の存在を保証するものではありません。サポートされていない機能の使用の診断は、コンパイル時まで延期されます。</target>
        </trans-unit>
        <trans-unit id="ec1877efd0c9843256c66d801ebf6723be819a75" translate="yes" xml:space="preserve">
          <source>In some cases it can be necessary or useful to invoke the Qt build tools in a more-manual way. Several macros are available to add targets for such uses.</source>
          <target state="translated">場合によっては、より手動的な方法で Qt ビルドツールを呼び出すことが必要であったり、有用であったりすることがあります。そのような用途のためにターゲットを追加するためのマクロがいくつか用意されています。</target>
        </trans-unit>
        <trans-unit id="3fdc2a88a2aed30012c3f29a268697171295d4e7" translate="yes" xml:space="preserve">
          <source>In some cases using the Package Registries is not desirable. CMake allows one to disable them using the following variables:</source>
          <target state="translated">パッケージレジストリの使用が望ましくない場合もあります。CMakeでは、以下の変数を使用して、それらを無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="151cc73438c2335ed38c2afb8d0deacd8245242a" translate="yes" xml:space="preserve">
          <source>In some cases, for example for packaging and for system wide installations, it is not desirable to write the user package registry. If the &lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt; variable is enabled, the &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command will do nothing.</source>
          <target state="translated">パッケージ化やシステム全体のインストールなど、場合によっては、ユーザーパッケージレジストリを作成することは望ましくありません。場合 &lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt; の変数が有効になっている、&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt;コマンドは何もしません。</target>
        </trans-unit>
        <trans-unit id="0cb229e063b4a860506b04c6b48549576582d1d1" translate="yes" xml:space="preserve">
          <source>In some cases, for example to locate only system wide installations, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; when searching for packages. If the &lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is &lt;code&gt;TRUE&lt;/code&gt;, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">場合によっては、たとえばシステム全体のインストールのみを見つけるために、パッケージを検索するときに&lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;ユーザーパッケージレジストリ&lt;/a&gt;を使用することが望ましくない場合があります。&lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;変数が &lt;code&gt;TRUE&lt;/code&gt; の場合、すべての&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;コマンドは、 &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; 引数で呼び出されたかのように、&lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;ユーザーパッケージレジストリ&lt;/a&gt;をスキップします。</target>
        </trans-unit>
        <trans-unit id="a39df5e372109009b8d668bdb97a1acdaa33a7e7" translate="yes" xml:space="preserve">
          <source>In some cases, for example to locate only system wide installations, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; when searching for packages. If the &lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is enabled, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">システム全体のインストールのみを検索する場合など、&lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;パッケージ&lt;/a&gt;を検索するときにユーザーパッケージレジストリを使用することが望ましくない場合があります。場合&lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt; の&lt;/a&gt;変数が有効になっている、すべての&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;コマンドは、 &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; 引数を指定して呼び出されたかのように、&lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;ユーザーパッケージレジストリ&lt;/a&gt;をスキップします。</target>
        </trans-unit>
        <trans-unit id="cddf4c1b85d7b2c300b8fff712da5889de4b9075" translate="yes" xml:space="preserve">
          <source>In some cases, for example to locate only system wide installations, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; when searching for packages. If the &lt;a href=&quot;#variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_USE_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is &lt;code&gt;FALSE&lt;/code&gt;, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">場合によっては、たとえばシステム全体のインストールのみを見つけるために、パッケージを検索するときに&lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;ユーザーパッケージレジストリ&lt;/a&gt;を使用することが望ましくない場合があります。場合&lt;a href=&quot;#variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_USE_PACKAGE_REGISTRY&lt;/code&gt; の&lt;/a&gt;変数がある &lt;code&gt;FALSE&lt;/code&gt; 、すべて&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;コマンドはスキップされます&lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;ユーザーパッケージレジストリを&lt;/a&gt;それらがで呼び出されたかのように &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; の引数。</target>
        </trans-unit>
        <trans-unit id="3108e4a724be379c9e7d579ea5fe1eb5c6b7a963" translate="yes" xml:space="preserve">
          <source>In some cases, for example to locate only user specific installations, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; when searching for packages. If the &lt;code&gt;CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; variable is &lt;code&gt;FALSE&lt;/code&gt;, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">場合によっては、たとえばユーザー固有のインストールのみを見つけるために、パッケージを検索するときに&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;システムパッケージレジストリ&lt;/a&gt;を使用することが望ましくない場合があります。場合 &lt;code&gt;CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; の変数がある &lt;code&gt;FALSE&lt;/code&gt; 、すべて&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;コマンドはスキップされます&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;システムパッケージレジストリを&lt;/a&gt;それらがで呼び出されたかのように &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; の引数。</target>
        </trans-unit>
        <trans-unit id="088c572dbca02ae474bda1f35266de7600d199d7" translate="yes" xml:space="preserve">
          <source>In some cases, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; when searching for packages. If the &lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is &lt;code&gt;TRUE&lt;/code&gt;, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">場合によっては、&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;パッケージ&lt;/a&gt;を検索するときにシステムパッケージレジストリを使用することが望ましくないことがあります。&lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt;変数が &lt;code&gt;TRUE&lt;/code&gt; の場合、すべての&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;コマンドは、 &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; 引数で呼び出されたかのように、&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;システムパッケージレジストリ&lt;/a&gt;をスキップします。</target>
        </trans-unit>
        <trans-unit id="1e382d860227d1f4650b5bb83ad998a8b7f71fce" translate="yes" xml:space="preserve">
          <source>In some cases, it is not desirable to use the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; when searching for packages. If the &lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable is enabled, all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands will skip the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; as if they were called with the &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; argument.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;パッケージ&lt;/a&gt;を検索するときにシステムパッケージレジストリを使用することが望ましくない場合があります。場合&lt;a href=&quot;#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; の&lt;/a&gt;変数が有効になっている、すべての&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;コマンドは、 &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; 引数を指定して呼び出されたかのように、&lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;システムパッケージレジストリ&lt;/a&gt;をスキップします。</target>
        </trans-unit>
        <trans-unit id="2601f7dd1783bcb44c322aca8587c756ad8c9ce2" translate="yes" xml:space="preserve">
          <source>In some way the function applies a canonicalization to the source names. This is necessary to find file matches if the files have been added to the target with different directory prefixes:</source>
          <target state="translated">この関数は何らかの方法でソース名に正規化を適用します。これは、異なるディレクトリプレフィックスを持つファイルがターゲットに追加されている場合に、ファイルのマッチを見つけるために必要です。</target>
        </trans-unit>
        <trans-unit id="4a78616e0469725b890f682c90126a1ac5b68ec0" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;MathFunctions&lt;/code&gt; subdirectory, a new source file named &lt;code&gt;MakeTable.cxx&lt;/code&gt; has been provided to generate the table.</source>
          <target state="translated">で &lt;code&gt;MathFunctions&lt;/code&gt; のサブディレクトリ、という名前の新しいソースファイル &lt;code&gt;MakeTable.cxx&lt;/code&gt; は、テーブルを生成するために提供されています。</target>
        </trans-unit>
        <trans-unit id="e462f51c2f68d0127a927b1eae9ef0320b28c102" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Nightly&lt;/code&gt; dashboard mode, specify the &amp;ldquo;nightly start time&amp;rdquo;. With centralized version control systems (&lt;code&gt;cvs&lt;/code&gt; and &lt;code&gt;svn&lt;/code&gt;), the &lt;code&gt;Update&lt;/code&gt; step checks out the version of the software as of this time so that multiple clients choose a common version to test. This is not well-defined in distributed version-control systems so the setting is ignored.</source>
          <target state="translated">で &lt;code&gt;Nightly&lt;/code&gt; ダッシュボードモード、「夜間の開始時刻」を指定します。集中型バージョン管理システム（ &lt;code&gt;cvs&lt;/code&gt; および &lt;code&gt;svn&lt;/code&gt; ）を使用すると、複数のクライアントがテストする共通のバージョンを選択できるように、現時点でソフトウェアのバージョンを &lt;code&gt;Update&lt;/code&gt; ステップがチェックアウトします。これは分散バージョン管理システムでは明確に定義されていないため、設定は無視されます。</target>
        </trans-unit>
        <trans-unit id="eca498acf645dc75a25c3851dede036c5a81bbf4" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;projA&lt;/code&gt; call to &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-2-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;projD&lt;/code&gt; is listed ahead of &lt;code&gt;projB&lt;/code&gt; and &lt;code&gt;projC&lt;/code&gt; to ensure that &lt;code&gt;projA&lt;/code&gt; is in control of how &lt;code&gt;projD&lt;/code&gt; is populated.</source>
          <target state="translated">&lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-2-command:fetchcontent_makeavailable&quot;&gt; &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; &lt;/a&gt;への &lt;code&gt;projA&lt;/code&gt; 呼び出しでは、 &lt;code&gt;projD&lt;/code&gt; が &lt;code&gt;projB&lt;/code&gt; および &lt;code&gt;projC&lt;/code&gt; の前にリストされ、 &lt;code&gt;projA&lt;/code&gt; がどのように制御している &lt;code&gt;projD&lt;/code&gt; が移入されています。</target>
        </trans-unit>
        <trans-unit id="18a9f509a6cdcb9ab1c806de2d69ca549adcd182" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;projA&lt;/code&gt; call to &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-5-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;projD&lt;/code&gt; is listed ahead of &lt;code&gt;projB&lt;/code&gt; and &lt;code&gt;projC&lt;/code&gt; to ensure that &lt;code&gt;projA&lt;/code&gt; is in control of how &lt;code&gt;projD&lt;/code&gt; is populated.</source>
          <target state="translated">で &lt;code&gt;projA&lt;/code&gt; のに呼び出し&lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-5-command:fetchcontent_makeavailable&quot;&gt; &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;projD&lt;/code&gt; は前方のリストされ &lt;code&gt;projB&lt;/code&gt; と &lt;code&gt;projC&lt;/code&gt; ことを確実にするために &lt;code&gt;projA&lt;/code&gt; がどのように制御している &lt;code&gt;projD&lt;/code&gt; が移入されています。</target>
        </trans-unit>
        <trans-unit id="330d324f1f03239a27814ff1f6b42f65fa2e39a6" translate="yes" xml:space="preserve">
          <source>In the CMakeLists file, add an &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-12-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; library and specify its location on disk:</source>
          <target state="translated">CMakeListsファイルで、&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-12-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;ライブラリを追加し、ディスク上のその場所を指定します。</target>
        </trans-unit>
        <trans-unit id="04d9ad20d2d5cc5e9661f134ad7f03d178a49d10" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;mylib&lt;/code&gt; requires &lt;code&gt;cxx_constexpr&lt;/code&gt; when it is built itself, but consumers of &lt;code&gt;mylib&lt;/code&gt; are not required to use a compiler which supports &lt;code&gt;cxx_constexpr&lt;/code&gt;. If the interface of &lt;code&gt;mylib&lt;/code&gt; does require the &lt;code&gt;cxx_constexpr&lt;/code&gt; feature (or any other known feature), that may be specified with the &lt;code&gt;PUBLIC&lt;/code&gt; or &lt;code&gt;INTERFACE&lt;/code&gt; signatures of &lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-1-command:target_compile_features&quot;&gt;&lt;code&gt;target_compile_features()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">上記の例では、 &lt;code&gt;mylib&lt;/code&gt; 必要です &lt;code&gt;cxx_constexpr&lt;/code&gt; それ自体が構築されていますが、消費者の &lt;code&gt;mylib&lt;/code&gt; 支持体には、コンパイラを使用する必要はありません &lt;code&gt;cxx_constexpr&lt;/code&gt; を。界面場合 &lt;code&gt;mylib&lt;/code&gt; 必要とする &lt;code&gt;cxx_constexpr&lt;/code&gt; の機能（又は任意の他の既知の特徴）を、それを用いて指定することができる &lt;code&gt;PUBLIC&lt;/code&gt; または &lt;code&gt;INTERFACE&lt;/code&gt; の署名&lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-1-command:target_compile_features&quot;&gt; &lt;code&gt;target_compile_features()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="6069de41089952074b3b5113b70e1b84097a798f" translate="yes" xml:space="preserve">
          <source>In the build directory, notice that the file &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; has been created in the &lt;code&gt;cmake&lt;/code&gt; subdirectory.</source>
          <target state="translated">ビルドディレクトリで、ファイル &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; が &lt;code&gt;cmake&lt;/code&gt; サブディレクトリに作成されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7ba63d43b16efd49c4fc084c6739864233f8affb" translate="yes" xml:space="preserve">
          <source>In the case of a host build then &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; may be set explicitly when first configuring a new build tree in order to enable targeting the build for a different version of the host operating system than is actually running on the host. This is allowed and not considered cross compiling so long as the binaries built for the specified OS version can still run on the host.</source>
          <target state="translated">ホストビルドの場合は &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; 最初に新しいビルドツリーを構成するときにCMAKE_SYSTEM_VERSIONを明示的に設定して、ホストで実際に実行されているものとは異なるバージョンのホストオペレーティングシステムのビルドを対象とすることができます。指定されたOSバージョン用にビルドされたバイナリがホストで実行できる限り、これは許可され、クロスコンパイルとは見なされません。</target>
        </trans-unit>
        <trans-unit id="11a39eb756b06bcb663999bc69355898b5260ec2" translate="yes" xml:space="preserve">
          <source>In the case of properties listed in &lt;a href=&quot;../prop_tgt/compatible_interface_bool#prop_tgt:COMPATIBLE_INTERFACE_BOOL&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_BOOL&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_BOOL&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt;, the debug output shows which target was responsible for setting the property, and which other dependencies also defined the property. In the case of &lt;a href=&quot;../prop_tgt/compatible_interface_number_max#prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MAX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/compatible_interface_number_min#prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MIN&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MIN&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MIN&lt;/code&gt;&lt;/a&gt;, the debug output shows the value of the property from each dependency, and whether the value determines the new extreme.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/compatible_interface_bool#prop_tgt:COMPATIBLE_INTERFACE_BOOL&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_BOOL&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_BOOL&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; に&lt;/a&gt;リストされているプロパティの場合、デバッグ出力は、プロパティの設定を担当したターゲットと、プロパティを定義した他の依存関係を示します。以下の場合&lt;a href=&quot;../prop_tgt/compatible_interface_number_max#prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MAX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../prop_tgt/compatible_interface_number_min#prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MIN&quot; id=&quot;index-1-prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MIN&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MIN&lt;/code&gt; &lt;/a&gt;、デバッグ出力は、各依存のプロパティの値を示し、その値は新しい極端にあるか否かを判定する。</target>
        </trans-unit>
        <trans-unit id="c787a6007492b75e471f648e02e710be800db8b5" translate="yes" xml:space="preserve">
          <source>In the context of the buildsystem definition as a whole, it is largely irrelevant whether particular libraries are &lt;code&gt;SHARED&lt;/code&gt; or &lt;code&gt;STATIC&lt;/code&gt; &amp;ndash; the commands, dependency specifications and other APIs work similarly regardless of the library type. The &lt;code&gt;MODULE&lt;/code&gt; library type is dissimilar in that it is generally not linked to &amp;ndash; it is not used in the right-hand-side of the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command. It is a type which is loaded as a plugin using runtime techniques. If the library does not export any unmanaged symbols (e.g. Windows resource DLL, C++/CLI DLL), it is required that the library not be a &lt;code&gt;SHARED&lt;/code&gt; library because CMake expects &lt;code&gt;SHARED&lt;/code&gt; libraries to export at least one symbol.</source>
          <target state="translated">全体としてのビルドシステム定義のコンテキストでは、特定のライブラリが &lt;code&gt;SHARED&lt;/code&gt; または &lt;code&gt;STATIC&lt;/code&gt; であるかどうかはほとんど関係ありません。コマンド、依存関係の仕様、およびその他のAPIは、ライブラリのタイプに関係なく同様に機能します。 &lt;code&gt;MODULE&lt;/code&gt; のライブラリー・タイプは、それが一般的にリンクされていないという点で類似していない-それはの右辺で使用されていない&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;コマンド。ランタイム技術を使用してプラグインとしてロードされるタイプです。ライブラリがアンマネージシンボル（WindowsリソースDLL、C ++ / CLI DLLなど）をエクスポートしない場合、CMakeは &lt;code&gt;SHARED&lt;/code&gt; ライブラリが少なくとも1つのシンボルをエクスポートすることを想定しているため、ライブラリが &lt;code&gt;SHARED&lt;/code&gt; ライブラリでないことが必要です。</target>
        </trans-unit>
        <trans-unit id="4c50f6fec3926ae844630f6b9c5668fc9e91991b" translate="yes" xml:space="preserve">
          <source>In the example file above, there are four GPUs with ID&amp;rsquo;s 0 through 3. GPU 0 has 2 slots, GPU 1 has 4, GPU 2 has 2, and GPU 3 has a default of 1 slot. There is also one cryptography chip with 4 slots.</source>
          <target state="translated">上記のサンプルファイルには、IDが0〜3の4つのGPUがあります。GPU0には2つのスロット、GPU 1には4、GPU 2には2、GPU3にはデフォルトの1スロットがあります。4スロットの暗号化チップも1つあります。</target>
        </trans-unit>
        <trans-unit id="4d931b823e80eab20fb92cc30f9ecbcb4354b344" translate="yes" xml:space="preserve">
          <source>In the first case, you can use &lt;code&gt;if(${ARGV1})&lt;/code&gt;. In the second and third case, the proper way to check if an optional variable was passed to the macro is to use &lt;code&gt;if(${ARGC} GREATER 2)&lt;/code&gt;. In the last case, you can use &lt;code&gt;foreach(loop_var ${ARGN})&lt;/code&gt; but this will skip empty arguments. If you need to include them, you can use</source>
          <target state="translated">最初のケースでは、 &lt;code&gt;if(${ARGV1})&lt;/code&gt; 使用できます。2番目と3番目のケースでは、オプションの変数がマクロに渡されたかどうかを確認する適切な方法は、 &lt;code&gt;if(${ARGC} GREATER 2)&lt;/code&gt; を使用することです。。最後のケースでは、 &lt;code&gt;foreach(loop_var ${ARGN})&lt;/code&gt; を使用できますが、これは空の引数をスキップします。それらを含める必要がある場合は、</target>
        </trans-unit>
        <trans-unit id="538eb9c2a0f031b0e2cc75683acb7ddf5b51d096" translate="yes" xml:space="preserve">
          <source>In the following, &amp;ldquo;the &lt;code&gt;tgt&lt;/code&gt; filename&amp;rdquo; means the name of the &lt;code&gt;tgt&lt;/code&gt; binary file. This has to be distinguished from &amp;ldquo;the target name&amp;rdquo;, which is just the string &lt;code&gt;tgt&lt;/code&gt;.</source>
          <target state="translated">以下において、「 &lt;code&gt;tgt&lt;/code&gt; ファイル名」とは、 &lt;code&gt;tgt&lt;/code&gt; バイナリファイルの名前を意味します。これは、文字列 &lt;code&gt;tgt&lt;/code&gt; である「ターゲット名」とは区別する必要があります。</target>
        </trans-unit>
        <trans-unit id="a7945598b9c517f4b396895107d0346263d45edb" translate="yes" xml:space="preserve">
          <source>In the list of all given files for all files ending with &lt;code&gt;.Designer.cs&lt;/code&gt; and &lt;code&gt;.resx&lt;/code&gt; is searched. For every &lt;em&gt;designer&lt;/em&gt; or &lt;em&gt;resource&lt;/em&gt; file a file with the same base name but only &lt;code&gt;.cs&lt;/code&gt; as extension is searched. If this is found, the &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; properties are set as follows:</source>
          <target state="translated">&lt;code&gt;.Designer.cs&lt;/code&gt; および &lt;code&gt;.resx&lt;/code&gt; で終わるすべてのファイルについて、指定されたすべてのファイルのリストで検索されます。すべての&lt;em&gt;デザイナー&lt;/em&gt;または&lt;em&gt;リソース&lt;/em&gt;ファイルについて、同じベース名を持つが &lt;code&gt;.cs&lt;/code&gt; のみのファイル拡張子としてが検索されます。これが見つかった場合、 &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; プロパティは次のように設定されます。</target>
        </trans-unit>
        <trans-unit id="c1df0858eeae0d7e9dde52661a3cf9b614d5e174" translate="yes" xml:space="preserve">
          <source>In the list of all given files for all files ending with &lt;code&gt;.Designer.cs&lt;/code&gt; is searched. For every &lt;em&gt;designer&lt;/em&gt; file all files with the same base name but different extensions are searched. If a match is found, the source file properties of the &lt;em&gt;designer&lt;/em&gt; file are set depending on the extension of the matched file:</source>
          <target state="translated">&lt;code&gt;.Designer.cs&lt;/code&gt; で終わるすべてのファイルについて、指定されたすべてのファイルのリストで検索されます。すべての&lt;em&gt;デザイナーの&lt;/em&gt;ために&lt;em&gt;&lt;/em&gt;ファイル、ベース名は同じで拡張子が異なるすべてのファイルが検索されます。一致が見つかった場合、&lt;em&gt;デザイナー&lt;/em&gt;ファイルのソースファイルプロパティは、一致したファイルの拡張子に応じて設定されます。</target>
        </trans-unit>
        <trans-unit id="76baf510d7d8ee0dc3463d6ddbd1b1b4bb480ba0" translate="yes" xml:space="preserve">
          <source>In the list of all given files for all files ending with &lt;code&gt;.xaml.cs&lt;/code&gt; is searched. For every &lt;em&gt;xaml-cs&lt;/em&gt; file, a file with the same base name but extension &lt;code&gt;.xaml&lt;/code&gt; is searched. If a match is found, the source file properties of the &lt;code&gt;.xaml.cs&lt;/code&gt; file are set:</source>
          <target state="translated">&lt;code&gt;.xaml.cs&lt;/code&gt; で終わるすべてのファイルについて、指定されたすべてのファイルのリストで検索されます。すべての&lt;em&gt;xaml-cs&lt;/em&gt;ファイルについて、ベース名は同じで拡張子が &lt;code&gt;.xaml&lt;/code&gt; のファイルが検索されます。一致が見つかった場合、 &lt;code&gt;.xaml.cs&lt;/code&gt; ファイルのソースファイルプロパティが設定されます。</target>
        </trans-unit>
        <trans-unit id="0c8bd77911d9b865202bc718cba2649d9b8ade9d" translate="yes" xml:space="preserve">
          <source>In the remaining sections, we will walk through a set of example projects step-by-step. The first project will create and install a library and corresponding CMake configuration and package files. The second project will use the generated package.</source>
          <target state="translated">残りのセクションでは、一連のプロジェクトの例を順を追って説明します。最初のプロジェクトでは、ライブラリと対応するCMakeの設定ファイルとパッケージファイルを作成してインストールします。2 番目のプロジェクトでは、生成されたパッケージを使用します。</target>
        </trans-unit>
        <trans-unit id="0fe0294c4456feb98955115a0c3304083a693328" translate="yes" xml:space="preserve">
          <source>In the second form any program in the current source directory that matches the regular expression will be installed.</source>
          <target state="translated">第二の形式では、カレントソースディレクトリ内の正規表現にマッチするプログラムがインストールされます。</target>
        </trans-unit>
        <trans-unit id="c9b65f2c109870d5d55222ae3de15fbfd0dba89c" translate="yes" xml:space="preserve">
          <source>In the simple signature this specifies the failure message. Use &lt;code&gt;DEFAULT_MSG&lt;/code&gt; to ask for a default message to be computed (recommended). Not valid in the full signature.</source>
          <target state="translated">単純な署名では、これは失敗メッセージを指定します。使用する &lt;code&gt;DEFAULT_MSG&lt;/code&gt; をして、計算するデフォルトメッセージを要求します（推奨）。完全な署名では無効です。</target>
        </trans-unit>
        <trans-unit id="634a9b063493393ff0b0f4b517baf5b0bc20cf53" translate="yes" xml:space="preserve">
          <source>In the standard CMake workflow, the file &lt;code&gt;CPackConfig.cmake&lt;/code&gt; is generated by the &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; executable, provided the &lt;a href=&quot;../module/cpack#module:CPack&quot; id=&quot;index-0-module:CPack&quot;&gt;&lt;code&gt;CPack&lt;/code&gt;&lt;/a&gt; module is included by the project&amp;rsquo;s &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="translated">標準CMakeのワークフローでは、ファイル &lt;code&gt;CPackConfig.cmake&lt;/code&gt; はによって生成され&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt;提供、実行可能&lt;a href=&quot;../module/cpack#module:CPack&quot; id=&quot;index-0-module:CPack&quot;&gt; &lt;code&gt;CPack&lt;/code&gt; の&lt;/a&gt;モジュールは、プロジェクトので含まれています &lt;code&gt;CMakeLists.txt&lt;/code&gt; ファイルにます。</target>
        </trans-unit>
        <trans-unit id="7ea1599cec8b79be2228dea4fcdba46f25c86739" translate="yes" xml:space="preserve">
          <source>In the target &lt;code&gt;my_target&lt;/code&gt; a header file &lt;code&gt;complex_class.hpp&lt;/code&gt; uses a custom macro &lt;code&gt;JSON_BASED_CLASS&lt;/code&gt; which is defined in an other header &lt;code&gt;macros.hpp&lt;/code&gt;:</source>
          <target state="translated">ターゲット &lt;code&gt;my_target&lt;/code&gt; で、ヘッダーファイル &lt;code&gt;complex_class.hpp&lt;/code&gt; は、他のヘッダーで定義されているカスタムマクロ &lt;code&gt;JSON_BASED_CLASS&lt;/code&gt; を使用します &lt;code&gt;macros.hpp&lt;/code&gt; で。</target>
        </trans-unit>
        <trans-unit id="204f1dcfd91b4602305f2d798f9b90af3199a744" translate="yes" xml:space="preserve">
          <source>In this case the &lt;code&gt;Q_OBJECT&lt;/code&gt; macro is hidden inside another macro called &lt;code&gt;CUSTOM_MACRO&lt;/code&gt;. To let CMake know that source files that contain &lt;code&gt;CUSTOM_MACRO&lt;/code&gt; need to be &lt;code&gt;moc&lt;/code&gt; processed, we call:</source>
          <target state="translated">この場合、 &lt;code&gt;Q_OBJECT&lt;/code&gt; マクロは &lt;code&gt;CUSTOM_MACRO&lt;/code&gt; と呼ばれる別のマクロの中に隠されています。CMakeに、 &lt;code&gt;CUSTOM_MACRO&lt;/code&gt; を含むソースファイルを &lt;code&gt;moc&lt;/code&gt; 処理する必要があることを知らせるには、次のように呼び出します。</target>
        </trans-unit>
        <trans-unit id="4c6a3c89029e57a2d1f7070dfd963ee72e8920d5" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;Foo_FINAL&lt;/code&gt; will expand to &lt;code&gt;final&lt;/code&gt; if the compiler supports the keyword, or to empty otherwise.</source>
          <target state="translated">この場合、 &lt;code&gt;Foo_FINAL&lt;/code&gt; はに拡大する &lt;code&gt;final&lt;/code&gt; コンパイラがキーワードをサポートしている場合、またはそれ以外の場合は空にします。</target>
        </trans-unit>
        <trans-unit id="14917a6f89a81ab57d696410ff4727ffb7df0251" translate="yes" xml:space="preserve">
          <source>In this case, a &lt;code&gt;FindAutmoc4.cmake&lt;/code&gt; module wraps a call to &lt;code&gt;find_package(Automoc4 NO_MODULE)&lt;/code&gt; and adds an additional search directory for &lt;code&gt;automoc4&lt;/code&gt;. Then the call to &lt;code&gt;find_package_handle_standard_args&lt;/code&gt; produces a proper success/failure message.</source>
          <target state="translated">この場合、 &lt;code&gt;FindAutmoc4.cmake&lt;/code&gt; モジュールは &lt;code&gt;find_package(Automoc4 NO_MODULE)&lt;/code&gt; への呼び出しをラップし、automoc4の検索ディレクトリを &lt;code&gt;automoc4&lt;/code&gt; ます。次に、 &lt;code&gt;find_package_handle_standard_args&lt;/code&gt; を呼び出すと、適切な成功/失敗メッセージが生成されます。</target>
        </trans-unit>
        <trans-unit id="a7746056a18b7d9a076205eac1fdec2b08bc9126" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; file could be as simple as:</source>
          <target state="translated">この場合、 &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; ファイルは次のように単純です。</target>
        </trans-unit>
        <trans-unit id="5b09e5afcf6a307427590313e600e45d81361b99" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;LibArchive&lt;/code&gt; package is considered to be found if both &lt;code&gt;LibArchive_LIBRARY&lt;/code&gt; and &lt;code&gt;LibArchive_INCLUDE_DIR&lt;/code&gt; are valid. Also the version of &lt;code&gt;LibArchive&lt;/code&gt; will be checked by using the version contained in &lt;code&gt;LibArchive_VERSION&lt;/code&gt;. Since no &lt;code&gt;FAIL_MESSAGE&lt;/code&gt; is given, the default messages will be printed.</source>
          <target state="translated">この場合、 &lt;code&gt;LibArchive_LIBRARY&lt;/code&gt; と &lt;code&gt;LibArchive_INCLUDE_DIR&lt;/code&gt; の両方が有効な場合、 &lt;code&gt;LibArchive&lt;/code&gt; パッケージは検出されたと見なされます。また、 &lt;code&gt;LibArchive&lt;/code&gt; のバージョンは、 &lt;code&gt;LibArchive_VERSION&lt;/code&gt; に含まれているバージョンを使用してチェックされます。 &lt;code&gt;FAIL_MESSAGE&lt;/code&gt; が指定されていないため、デフォルトのメッセージが出力されます。</target>
        </trans-unit>
        <trans-unit id="ad7830b435d957b704005c0358a6d3b72bf8b7fb" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;exe1&lt;/code&gt; executable will be compiled with &lt;code&gt;-DClimbingStats_FROM_BUILD_LOCATION&lt;/code&gt;. The exporting commands generate &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets with either the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; or the &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; omitted, and the &lt;code&gt;*_INTERFACE&lt;/code&gt; marker stripped away. A separate project consuming the &lt;code&gt;ClimbingStats&lt;/code&gt; package would contain:</source>
          <target state="translated">この場合、 &lt;code&gt;exe1&lt;/code&gt; 実行可能ファイルは-DClimbingStats_FROM_BUILD_LOCATIONを使用してコンパイルされ &lt;code&gt;-DClimbingStats_FROM_BUILD_LOCATION&lt;/code&gt; 。エクスポートコマンドは、 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; または &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; を省略し、 &lt;code&gt;*_INTERFACE&lt;/code&gt; マーカーを取り除いた&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;ターゲットを生成します。を消費する別のプロジェクト &lt;code&gt;ClimbingStats&lt;/code&gt; パッケージを使用するは、次のものが含まれます。</target>
        </trans-unit>
        <trans-unit id="c0546276adac56533f04d0e5bdf8dc378e4f6b34" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;exe1&lt;/code&gt; source files will be compiled with &lt;code&gt;-DCONTAINER_SIZE=200&lt;/code&gt;.</source>
          <target state="translated">この場合、 &lt;code&gt;exe1&lt;/code&gt; ソースファイルは &lt;code&gt;-DCONTAINER_SIZE=200&lt;/code&gt; でコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="495c1fea41ee99340b9007386d5c6f47393c3521" translate="yes" xml:space="preserve">
          <source>In this case, the single resource group indicates that it needs four GPU slots, all of which may come from separate GPUs (though they don&amp;rsquo;t have to; CTest may still assign slots from the same GPU.)</source>
          <target state="translated">この場合、単一のリソースグループは、4つのGPUスロットが必要であることを示します。これらはすべて、別々のGPUから取得できます（必須ではありません。CTestは同じGPUからスロットを割り当てることができます）。</target>
        </trans-unit>
        <trans-unit id="faef534bcd7846b2c682b12ff151675f0992d37a" translate="yes" xml:space="preserve">
          <source>In this case, when using &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;INCLUDES DESTINATION&lt;/code&gt; was specified. This causes the &lt;code&gt;IMPORTED&lt;/code&gt; targets to have their &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; populated with the &lt;code&gt;include&lt;/code&gt; directory in the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;. When the &lt;code&gt;IMPORTED&lt;/code&gt; target is used by downstream, it automatically consumes the entries from that property.</source>
          <target state="translated">この場合、&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt;を使用するときに、 &lt;code&gt;INCLUDES DESTINATION&lt;/code&gt; が指定されました。これが原因と &lt;code&gt;IMPORTED&lt;/code&gt; 彼らの持っている目標を&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; が&lt;/a&gt;移入 &lt;code&gt;include&lt;/code&gt; ているディレクトリを&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt;。とき &lt;code&gt;IMPORTED&lt;/code&gt; ターゲットは下流で使用されている、それは自動的にそのプロパティからエントリを消費します。</target>
        </trans-unit>
        <trans-unit id="795768706f4a38ae7b505cd0f2f793177bc40cef" translate="yes" xml:space="preserve">
          <source>In this example, CMake will ensure the compiler is invoked in a mode of at-least C++ 11 (or C++ 14, C++ 17, &amp;hellip;), adding flags such as &lt;code&gt;-std=gnu++11&lt;/code&gt; if necessary. This applies to sources within &lt;code&gt;mylib&lt;/code&gt; as well as any dependents (that may include headers from &lt;code&gt;mylib&lt;/code&gt;).</source>
          <target state="translated">この例では、CMakeは、コンパイラが少なくともC ++ 11（またはC ++ 14、C ++ 17、&amp;hellip;）のモードで呼び出されるようにし、必要に応じて &lt;code&gt;-std=gnu++11&lt;/code&gt; などのフラグを追加します。これは、 &lt;code&gt;mylib&lt;/code&gt; 内のソースとすべての依存関係（ &lt;code&gt;mylib&lt;/code&gt; からのヘッダーを含む場合があります）に適用されます。</target>
        </trans-unit>
        <trans-unit id="c89544a45ca6b75fa73a98ece762b01f9c3972ca" translate="yes" xml:space="preserve">
          <source>In this example, CMake will ensure the compiler is invoked in a mode that is aware of C++ 11 (or above), adding flags such as &lt;code&gt;-std=gnu++11&lt;/code&gt; if necessary. This applies to sources within &lt;code&gt;mylib&lt;/code&gt; as well as any dependents (that may include headers from &lt;code&gt;mylib&lt;/code&gt;).</source>
          <target state="translated">この例では、CMakeはC ++ 11（またはそれ以上）を認識するモードでコンパイラーが呼び出されるようにし、必要に応じて &lt;code&gt;-std=gnu++11&lt;/code&gt; などのフラグを追加します。これは、 &lt;code&gt;mylib&lt;/code&gt; 内のソースと依存関係（ &lt;code&gt;mylib&lt;/code&gt; からのヘッダーを含む場合がある）に適用されます）に。</target>
        </trans-unit>
        <trans-unit id="a781926952f21503419f7bc0fb80b66328789027" translate="yes" xml:space="preserve">
          <source>In this example, for &lt;code&gt;myapp1&lt;/code&gt;, the first pass will, unexpectedly, determine that the link language is &lt;code&gt;CXX&lt;/code&gt; because the evaluation of the generator expression will be an empty string so &lt;code&gt;myapp1&lt;/code&gt; will depends on target &lt;code&gt;lib&lt;/code&gt; which is &lt;code&gt;C++&lt;/code&gt;. On the contrary, for &lt;code&gt;myapp2&lt;/code&gt;, the first evaluation will give &lt;code&gt;C&lt;/code&gt; as link language, so the second pass will correctly add target &lt;code&gt;libother&lt;/code&gt; as link dependency.</source>
          <target state="translated">この例では、ため &lt;code&gt;myapp1&lt;/code&gt; 、最初のパスは、予想外に、リンクの言語であることを決定する &lt;code&gt;CXX&lt;/code&gt; ようジェネレータ式の評価が空の文字列になるため &lt;code&gt;myapp1&lt;/code&gt; 意志がターゲットに依存 &lt;code&gt;lib&lt;/code&gt; である &lt;code&gt;C++&lt;/code&gt; 。逆に、 &lt;code&gt;myapp2&lt;/code&gt; の場合、最初の評価ではリンク言語として &lt;code&gt;C&lt;/code&gt; が与えられるため、2番目のパスではターゲット &lt;code&gt;libother&lt;/code&gt; がリンク依存関係として正しく追加されます。</target>
        </trans-unit>
        <trans-unit id="e813483137820a3e9af75d2b9cf5269ae6126a79" translate="yes" xml:space="preserve">
          <source>In this example, group 0 gets 2 slots from GPU &lt;code&gt;0&lt;/code&gt;, group 1 gets 2 slots from GPU &lt;code&gt;2&lt;/code&gt;, and group 2 gets 4 slots from GPU &lt;code&gt;1&lt;/code&gt;, 1 slot from GPU &lt;code&gt;3&lt;/code&gt;, and 2 slots from cryptography chip &lt;code&gt;card0&lt;/code&gt;.</source>
          <target state="translated">この例では、グループ0はGPU &lt;code&gt;0&lt;/code&gt; から2スロット、グループ1はGPU &lt;code&gt;2&lt;/code&gt; から2スロット、グループ2はGPU &lt;code&gt;1&lt;/code&gt; から4スロット、GPU &lt;code&gt;3&lt;/code&gt; から1スロット、暗号化チップ &lt;code&gt;card0&lt;/code&gt; から2スロットを取得します。</target>
        </trans-unit>
        <trans-unit id="3ec83c1549b57889d549086797bf605970cfafa4" translate="yes" xml:space="preserve">
          <source>In this example, there are two group descriptions (implicitly separated by a semicolon.) The content of the first description is &lt;code&gt;2,gpus:2&lt;/code&gt;. This description specifies 2 groups, each of which requires 2 slots from a single GPU. The content of the second description is &lt;code&gt;gpus:4,crypto_chips:2&lt;/code&gt;. This description does not specify a group count, so a default of 1 is assumed. This single group requires 4 slots from a single GPU and 2 slots from a single cryptography chip. In total, 3 resource groups are specified for this test, each with its own unique requirements.</source>
          <target state="translated">この例では、2つのグループの説明があります（セミコロンで暗黙的に区切られています）。最初の説明の内容は &lt;code&gt;2,gpus:2&lt;/code&gt; です。この説明では、2つのグループを指定します。各グループには、単一のGPUから2つのスロットが必要です。 2番目の説明の内容は &lt;code&gt;gpus:4,crypto_chips:2&lt;/code&gt; です。この説明ではグループ数が指定されていないため、デフォルトの1が想定されます。この単一のグループには、単一のGPUから4つのスロット、単一の暗号化チップから2つのスロットが必要です。このテストでは、合計3つのリソースグループが指定されており、それぞれに固有の要件があります。</target>
        </trans-unit>
        <trans-unit id="fc469e2d74ed34e509c529fc20edd178dacef100" translate="yes" xml:space="preserve">
          <source>In this form, &lt;code&gt;&amp;lt;srcdir&amp;gt;&lt;/code&gt; should contain a complete CMake project with a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file and all sources. The &lt;code&gt;&amp;lt;bindir&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;srcdir&amp;gt;&lt;/code&gt; will not be deleted after this command is run. Specify &lt;code&gt;&amp;lt;targetName&amp;gt;&lt;/code&gt; to build a specific target instead of the &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;ALL_BUILD&lt;/code&gt; target. See below for the meaning of other options.</source>
          <target state="translated">このフォームでは、 &lt;code&gt;&amp;lt;srcdir&amp;gt;&lt;/code&gt; に、 &lt;code&gt;CMakeLists.txt&lt;/code&gt; ファイルとすべてのソースを含む完全なCMakeプロジェクトが含まれている必要があります。 &lt;code&gt;&amp;lt;bindir&amp;gt;&lt;/code&gt; と &lt;code&gt;&amp;lt;srcdir&amp;gt;&lt;/code&gt; このコマンドが実行された後に削除されることはありません。 &lt;code&gt;all&lt;/code&gt; または &lt;code&gt;ALL_BUILD&lt;/code&gt; の代わりに特定のターゲットを構築するには、 &lt;code&gt;&amp;lt;targetName&amp;gt;&lt;/code&gt; を指定しますターゲットのます。他のオプションの意味については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="e38723a700a8af9c8acb671019864dd441d0144b" translate="yes" xml:space="preserve">
          <source>In this form, one or more source files must be provided. If &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-1-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; is unset or is set to &lt;code&gt;EXECUTABLE&lt;/code&gt;, the sources must include a definition for &lt;code&gt;main&lt;/code&gt; and CMake will create a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file to build the source(s) as an executable. If &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-2-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;STATIC_LIBRARY&lt;/code&gt;, a static library will be built instead and no definition for &lt;code&gt;main&lt;/code&gt; is required. For an executable, the generated &lt;code&gt;CMakeLists.txt&lt;/code&gt; file would contain something like the following:</source>
          <target state="translated">この形式では、1つ以上のソースファイルを指定する必要があります。場合&lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-1-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt; &lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt; が&lt;/a&gt;未設定であるかに設定されている &lt;code&gt;EXECUTABLE&lt;/code&gt; 、ソースは、の定義含まなければならない &lt;code&gt;main&lt;/code&gt; とCMakeのを作成する &lt;code&gt;CMakeLists.txt&lt;/code&gt; の実行可能ファイルとしてソース（S）を構築するために、ファイルを。場合&lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-2-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt; &lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt; が&lt;/a&gt;に設定されている &lt;code&gt;STATIC_LIBRARY&lt;/code&gt; 、静的ライブラリが代わりに建設される予定とのための定義 &lt;code&gt;main&lt;/code&gt; 必要とされません。実行可能ファイルの場合、生成された &lt;code&gt;CMakeLists.txt&lt;/code&gt; ファイルには次のようなものが含まれます。</target>
        </trans-unit>
        <trans-unit id="96807519e86607c3e14a00b25ca13ed90674b984" translate="yes" xml:space="preserve">
          <source>In this guide, we will present the concept of &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets and demonstrate how to import existing executable or library files from disk into a CMake project. We will then show how CMake supports exporting targets from one CMake-based project and importing them into another. Finally, we will demonstrate how to package a project with a configuration file to allow for easy integration into other CMake projects. This guide and the complete example source code can be found in the &lt;code&gt;Help/guide/importing-exporting&lt;/code&gt; directory of the CMake source code tree.</source>
          <target state="translated">このガイドでは、&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;ターゲットの概念を示し、既存の実行可能ファイルまたはライブラリファイルをディスクからCMakeプロジェクトにインポートする方法を示します。次に、CMakeが1つのCMakeベースのプロジェクトからのターゲットのエクスポートと別のプロジェクトへのインポートをどのようにサポートするかを示します。最後に、他のCMakeプロジェクトに簡単に統合できるように、構成ファイルを使用してプロジェクトをパッケージ化する方法を示します。このガイドと完全なサンプルソースコードは、CMakeソースコードツリーの &lt;code&gt;Help/guide/importing-exporting&lt;/code&gt; ディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="d6b8e905dfed21c75cf25bdc5802ed699f1a4104" translate="yes" xml:space="preserve">
          <source>In this scenario, if you choose to install only the &lt;code&gt;Development&lt;/code&gt; component, both the headers and namelink will be installed without the library. (If you don&amp;rsquo;t also install the &lt;code&gt;Libraries&lt;/code&gt; component, the namelink will be a dangling symlink, and projects that link to the library will have build errors.) If you install only the &lt;code&gt;Libraries&lt;/code&gt; component, only the library will be installed, without the headers and namelink.</source>
          <target state="translated">このシナリオでは、 &lt;code&gt;Development&lt;/code&gt; コンポーネントのみをインストールすることを選択した場合、ヘッダーと名前リンクの両方がライブラリなしでインストールされます。（ &lt;code&gt;Libraries&lt;/code&gt; コンポーネントもインストールしない場合、名前リンクはぶら下がりシンボリックリンクになり、ライブラリにリンクするプロジェクトはビルドエラーになります。） &lt;code&gt;Libraries&lt;/code&gt; のみをインストールする場合コンポーネントのみがインストールされ、ライブラリはインストールされません。ヘッダーと名前リンク。</target>
        </trans-unit>
        <trans-unit id="6aa2ea44d8b88046da7a91e70b59846b629d607c" translate="yes" xml:space="preserve">
          <source>In this section we will show how the &lt;a href=&quot;../../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt;&lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt;&lt;/a&gt; variable can be used to control the default behavior of &lt;a href=&quot;../../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, and allow control over how libraries without an explicit type (&lt;code&gt;STATIC&lt;/code&gt;, &lt;code&gt;SHARED&lt;/code&gt;, &lt;code&gt;MODULE&lt;/code&gt; or &lt;code&gt;OBJECT&lt;/code&gt;) are built.</source>
          <target state="translated">このセクションでは、&lt;a href=&quot;../../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt; &lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt; &lt;/a&gt;変数を使用して&lt;a href=&quot;../../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; の&lt;/a&gt;デフォルトの動作を制御し、明示的な型（ &lt;code&gt;STATIC&lt;/code&gt; 、 &lt;code&gt;SHARED&lt;/code&gt; 、 &lt;code&gt;MODULE&lt;/code&gt; 、または &lt;code&gt;OBJECT&lt;/code&gt; ）のないライブラリを構築する方法を制御できるようにする方法を示します。</target>
        </trans-unit>
        <trans-unit id="35463d41901b805f9ba19695683bc2732ed13231" translate="yes" xml:space="preserve">
          <source>In this use-case, the CMake code will wish to enable a particular language standard if available from the compiler. The &lt;a href=&quot;../prop_tgt/cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; target property variable may be set to the desired language standard for a particular target, and the &lt;a href=&quot;../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-0-variable:CMAKE_CXX_STANDARD&quot;&gt;&lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt;&lt;/a&gt; may be set to influence all following targets:</source>
          <target state="translated">この使用例では、CMakeコードは、コンパイラーから利用可能な場合、特定の言語標準を有効にすることを望みます。&lt;a href=&quot;../prop_tgt/cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; の&lt;/a&gt;ターゲットプロパティ変数は、特定の標的に対する所望の言語標準、およびに設定されてもよい&lt;a href=&quot;../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-0-variable:CMAKE_CXX_STANDARD&quot;&gt; &lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt; &lt;/a&gt;以下のすべてのターゲットに影響を与えるように設定されてもよいです。</target>
        </trans-unit>
        <trans-unit id="90a18896dd7e3dbd05373b7e60360ba9de908dbe" translate="yes" xml:space="preserve">
          <source>In this variant, &lt;code&gt;&amp;lt;lists&amp;gt;&lt;/code&gt; is a whitespace or semicolon separated list of list-valued variables. The &lt;code&gt;foreach&lt;/code&gt; command iterates over each item in each given list. The &lt;code&gt;&amp;lt;items&amp;gt;&lt;/code&gt; following the &lt;code&gt;ITEMS&lt;/code&gt; keyword are processed as in the first variant of the &lt;code&gt;foreach&lt;/code&gt; command. The forms &lt;code&gt;LISTS A&lt;/code&gt; and &lt;code&gt;ITEMS ${A}&lt;/code&gt; are equivalent.</source>
          <target state="translated">このバリアントでは、 &lt;code&gt;&amp;lt;lists&amp;gt;&lt;/code&gt; は空白またはセミコロンで区切られたリスト値変数のリストです。 &lt;code&gt;foreach&lt;/code&gt; コマンドは、各与えられたリストの各項目を反復処理します。 &lt;code&gt;&amp;lt;items&amp;gt;&lt;/code&gt; 以下 &lt;code&gt;ITEMS&lt;/code&gt; の第1の変形例と同様に処理されているキーワード &lt;code&gt;foreach&lt;/code&gt; コマンド。フォーム &lt;code&gt;LISTS A&lt;/code&gt; と &lt;code&gt;ITEMS ${A}&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="4d09fbafc366c794c05eaa56b20f54d451e107bb" translate="yes" xml:space="preserve">
          <source>In this variant, &lt;code&gt;&amp;lt;lists&amp;gt;&lt;/code&gt; is a whitespace or semicolon separated list of list-valued variables. The &lt;code&gt;foreach&lt;/code&gt; command iterates over each list simultaneously setting the iteration variables as follows:</source>
          <target state="translated">このバリアントでは、 &lt;code&gt;&amp;lt;lists&amp;gt;&lt;/code&gt; は、リスト値変数の空白またはセミコロンで区切られたリストです。 &lt;code&gt;foreach&lt;/code&gt; の、次のように同時に反復変数を設定し、各リストの上にコマンドを反復します：</target>
        </trans-unit>
        <trans-unit id="81d8b22a8d1010c9ab92e281bb426c8fd32311af" translate="yes" xml:space="preserve">
          <source>In this variant, &lt;code&gt;foreach&lt;/code&gt; iterates over the numbers 0, 1, &amp;hellip; up to (and including) the nonnegative integer &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">このバリアントでは、 &lt;code&gt;foreach&lt;/code&gt; は0、1、&amp;hellip;、負でない整数 &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; まで（およびそれを含む）まで反復します。</target>
        </trans-unit>
        <trans-unit id="cedaab0a06bfc8d60da04b56bb5b94a4474c3074" translate="yes" xml:space="preserve">
          <source>In this variant, &lt;code&gt;foreach&lt;/code&gt; iterates over the numbers from &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; up to at most &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; in steps of &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; is not specified, then the step size is 1. The three arguments &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; must all be nonnegative integers, and &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; must not be smaller than &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt;; otherwise you enter the danger zone of undocumented behavior that may change in future releases.</source>
          <target state="translated">このバリアントでは、 &lt;code&gt;foreach&lt;/code&gt; は &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; から最大で次の数まで反復します &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; は、 &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; のステップで&amp;lt; &amp;lt;stop&amp;gt;ます。 &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; が指定されていない場合、ステップサイズは1です。3つの引数 &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; はすべて負でない整数でなければならず、 &lt;code&gt;&amp;lt;stop&amp;gt;&lt;/code&gt; は &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; より小さくてはなりません。そうしないと、将来のリリースで変更される可能性がある文書化されていない動作の危険ゾーンに入ります。</target>
        </trans-unit>
        <trans-unit id="912ad91c8a9e8d07fce740305f3e3089d4a7de32" translate="yes" xml:space="preserve">
          <source>In this version all files in &lt;code&gt;&amp;lt;bindir&amp;gt;/CMakeFiles/CMakeTmp&lt;/code&gt; will be cleaned automatically. For debugging, &lt;code&gt;--debug-trycompile&lt;/code&gt; can be passed to &lt;code&gt;cmake&lt;/code&gt; to avoid this clean. However, multiple sequential &lt;code&gt;try_compile&lt;/code&gt; operations reuse this single output directory. If you use &lt;code&gt;--debug-trycompile&lt;/code&gt;, you can only debug one &lt;code&gt;try_compile&lt;/code&gt; call at a time. The recommended procedure is to protect all &lt;code&gt;try_compile&lt;/code&gt; calls in your project by &lt;code&gt;if(NOT DEFINED &amp;lt;resultVar&amp;gt;)&lt;/code&gt; logic, configure with cmake all the way through once, then delete the cache entry associated with the try_compile call of interest, and then re-run cmake again with &lt;code&gt;--debug-trycompile&lt;/code&gt;.</source>
          <target state="translated">このバージョンでは、 &lt;code&gt;&amp;lt;bindir&amp;gt;/CMakeFiles/CMakeTmp&lt;/code&gt; 内のすべてのファイル自動的にクリーンアップされます。デバッグの場合、 &lt;code&gt;--debug-trycompile&lt;/code&gt; を &lt;code&gt;cmake&lt;/code&gt; に渡して、この問題を回避できます。ただし、複数の順次 &lt;code&gt;try_compile&lt;/code&gt; 操作は、この単一の出力ディレクトリを再利用します。 &lt;code&gt;--debug-trycompile&lt;/code&gt; を使用する場合、デバッグできるのは一度に1つの &lt;code&gt;try_compile&lt;/code&gt; 呼び出しのみです。推奨される手順は、 &lt;code&gt;--debug-trycompile&lt;/code&gt; によってプロジェクト内のすべての &lt;code&gt;try_compile&lt;/code&gt; 呼び出しを保護することです。 &lt;code&gt;if(NOT DEFINED &amp;lt;resultVar&amp;gt;)&lt;/code&gt; ロジック、cmakeを使用して1度設定し、対象のtry_compile呼び出しに関連するキャッシュエントリを削除してから、再実行することです。もう一度cmake</target>
        </trans-unit>
        <trans-unit id="9d75afcedf77994041e46586e2d4fd27c496934e" translate="yes" xml:space="preserve">
          <source>In total the dependencies of the &lt;code&gt;_autogen&lt;/code&gt; target are composed from</source>
          <target state="translated">合計で、 &lt;code&gt;_autogen&lt;/code&gt; ターゲットの依存関係は以下から構成されます</target>
        </trans-unit>
        <trans-unit id="5f8f675dc00440fd6730f9b9dc22b812593d71c4" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;INSTALL&lt;/code&gt; target to default build.</source>
          <target state="translated">デフォルトのビルドに &lt;code&gt;INSTALL&lt;/code&gt; ターゲットを含めます。</target>
        </trans-unit>
        <trans-unit id="48e5e8dae482d67bdfb7fe826386762d334434b8" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;PACKAGE&lt;/code&gt; target to default build.</source>
          <target state="translated">デフォルトのビルドに &lt;code&gt;PACKAGE&lt;/code&gt; ターゲットを含めます。</target>
        </trans-unit>
        <trans-unit id="67796e70c1b3fc264ff928a09d02542e7552b222" translate="yes" xml:space="preserve">
          <source>Include Directories and Usage Requirements</source>
          <target state="translated">ディレクトリと利用要件を含める</target>
        </trans-unit>
        <trans-unit id="e74bc52f3b3fe2528e8e649f3cc8e41b042c1138" translate="yes" xml:space="preserve">
          <source>Include an external Microsoft project file in a workspace.</source>
          <target state="translated">ワークスペースに外部の Microsoft プロジェクト ファイルをインクルードします。</target>
        </trans-unit>
        <trans-unit id="f0d96242ab0342c46719da163872c87dba83a4eb" translate="yes" xml:space="preserve">
          <source>Include directories for GDAL headers.</source>
          <target state="translated">GDALヘッダ用のディレクトリを含めます。</target>
        </trans-unit>
        <trans-unit id="88fa5da10c45484b3be0daa0a1788d66fb9345d1" translate="yes" xml:space="preserve">
          <source>Include directories for Google Protocol Buffers</source>
          <target state="translated">Google プロトコルバッファのディレクトリを含む</target>
        </trans-unit>
        <trans-unit id="8e0d894920f055045fe2b193e47abf678034cef4" translate="yes" xml:space="preserve">
          <source>Include directories require some special consideration when specified as usage requirements and when used with generator expressions. The &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; command accepts both relative and absolute include directories:</source>
          <target state="translated">インクルードディレクトリを使用要件として指定する場合、およびジェネレータ式で使用する場合は、特別な考慮が必要です。&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt;コマンドは、両方の相対を受け付け、絶対ディレクトリを含みます。</target>
        </trans-unit>
        <trans-unit id="ce43ac439197ffc955e524b2550b161ad6f531cd" translate="yes" xml:space="preserve">
          <source>Include directories to be used for every source file compiled with the &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; compiler. This is meant for specification of system include directories needed by the language for the current platform. The directories always appear at the end of the include path passed to the compiler.</source>
          <target state="translated">&lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; コンパイラでコンパイルされたすべてのソースファイルに使用されるディレクトリを含めます。これは、現在のプラットフォームの言語が必要とするシステムインクルードディレクトリを指定するためのものです。ディレクトリは、コンパイラに渡されるインクルードパスの最後に常に表示されます。</target>
        </trans-unit>
        <trans-unit id="32d2423d4df26a6d0a45a87e0b2a0f72dc810e6f" translate="yes" xml:space="preserve">
          <source>Include directories usage requirements commonly differ between the build-tree and the install-tree. The &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; and &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; generator expressions can be used to describe separate usage requirements based on the usage location. Relative paths are allowed within the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; expression and are interpreted relative to the installation prefix. For example:</source>
          <target state="translated">インクルードディレクトリの使用要件は、通常、ビルドツリーとインストールツリーで異なります。 &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; と &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; ジェネレータ式は、使用位置に基づいて個別使用の要件を記述するために使用することができます。相対パスは &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 式内で許可され、インストールプレフィックスに関連して解釈されます。例えば：</target>
        </trans-unit>
        <trans-unit id="5f1b0ffb783fe81c6ee7eabe3afbcc850210398e" translate="yes" xml:space="preserve">
          <source>Include file check macros honor &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt;.</source>
          <target state="translated">インクルードファイルチェックマクロは &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt; を尊重します。</target>
        </trans-unit>
        <trans-unit id="f75295c6b25f9d91bdec92487f46ffb98ec99137" translate="yes" xml:space="preserve">
          <source>Include file scanning regular expression.</source>
          <target state="translated">ファイルスキャンの正規表現を含む。</target>
        </trans-unit>
        <trans-unit id="14ce261eaed382d8b1c4862f16a7bee6f00ed6fc" translate="yes" xml:space="preserve">
          <source>Include path(s) for MPI header.</source>
          <target state="translated">MPI ヘッダのパスを含む。</target>
        </trans-unit>
        <trans-unit id="f16b0129fde0a65301ef3aaed51d235f77a00c03" translate="yes" xml:space="preserve">
          <source>Include this module in the top CMakeLists.txt file of a project to enable testing with CTest and dashboard submissions to CDash:</source>
          <target state="translated">プロジェクトの先頭の CMakeLists.txt ファイルにこのモジュールをインクルードして、CTest でのテストと CDash へのダッシュボードの送信を可能にします。</target>
        </trans-unit>
        <trans-unit id="b12826fe44caa27a14339b084130a9357afa20a5" translate="yes" xml:space="preserve">
          <source>Include this module to search for compiler-provided system runtime libraries and add install rules for them. Some optional variables may be set prior to including the module to adjust behavior:</source>
          <target state="translated">このモジュールをインクルードすると、コンパイラが提供するシステム・ランタイム・ライブラリを検索し、それらのインストール・ルールを追加することができます。このモジュールをインクルードする前に、動作を調整するためにいくつかのオプション変数を設定することができます。</target>
        </trans-unit>
        <trans-unit id="15ae65a91b6d3429dd28c5ce4d4be8c5332ec71d" translate="yes" xml:space="preserve">
          <source>Included &lt;code&gt;moc_*.cpp&lt;/code&gt; and &lt;code&gt;*.moc&lt;/code&gt; files will be generated in the &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; directory which is automatically added to the target&amp;rsquo;s &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インクルードされた &lt;code&gt;moc_*.cpp&lt;/code&gt; &lt;code&gt;*.moc&lt;/code&gt; および* .mocファイルは、ターゲットの&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; に&lt;/a&gt;自動的に追加される &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; ディレクトリに生成されます。</target>
        </trans-unit>
        <trans-unit id="84302a5df7b76ccdb6e34c68f72400c71ce5a8a4" translate="yes" xml:space="preserve">
          <source>Included moc output files</source>
          <target state="translated">同梱されているmoc出力ファイル</target>
        </trans-unit>
        <trans-unit id="ea8a543f60580381edf0a4ac9cfb685762b0e5f4" translate="yes" xml:space="preserve">
          <source>Included scripts do automatic &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt; PUSH and POP.</source>
          <target state="translated">含まれているスクリプトは、自動&lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt; PUSHおよびPOPを実行します。</target>
        </trans-unit>
        <trans-unit id="ca576823909d32ddb6875fc1b60fa7e15d936b2c" translate="yes" xml:space="preserve">
          <source>Includes an external Microsoft project in the generated workspace file. Currently does nothing on UNIX. This will create a target named &lt;code&gt;[projectname]&lt;/code&gt;. This can be used in the &lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt; command to make things depend on the external project.</source>
          <target state="translated">生成されたワークスペースファイルに外部Microsoftプロジェクトを含めます。現在、UNIXでは何もしません。これにより、 &lt;code&gt;[projectname]&lt;/code&gt; という名前のターゲットが作成されます。これを&lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt;コマンドで使用して、物事を外部プロジェクトに依存させることができます。</target>
        </trans-unit>
        <trans-unit id="48b24587f09cbb0c6d6de778bcf9dbc97bf3880e" translate="yes" xml:space="preserve">
          <source>Includes or removes items from &lt;code&gt;list&lt;/code&gt; that match the regular expression &lt;code&gt;regex&lt;/code&gt;.</source>
          <target state="translated">正規表現 &lt;code&gt;regex&lt;/code&gt; に一致するアイテムを &lt;code&gt;list&lt;/code&gt; 含めるか、リストから削除します。</target>
        </trans-unit>
        <trans-unit id="0865b4d7c07f05d7bf978b3a6f3c225e1a5056ee" translate="yes" xml:space="preserve">
          <source>Includes or removes items from the list that match the mode&amp;rsquo;s pattern. In &lt;code&gt;REGEX&lt;/code&gt; mode, items will be matched against the given regular expression.</source>
          <target state="translated">モードのパターンに一致するアイテムをリストに含めるか、リストから削除します。で &lt;code&gt;REGEX&lt;/code&gt; のモード、アイテムが与えられた正規表現と照合されます。</target>
        </trans-unit>
        <trans-unit id="5aab172bab3c2a3b59d730ace5a79dbd2f2f6825" translate="yes" xml:space="preserve">
          <source>Including header moc files in sources</source>
          <target state="translated">ヘッダーmocファイルをソースに含める</target>
        </trans-unit>
        <trans-unit id="ee983326646b313992ad093f9391d987efeb75f1" translate="yes" xml:space="preserve">
          <source>Inclusion of the CPack module adds two new build targets, &lt;code&gt;package&lt;/code&gt; and &lt;code&gt;package_source&lt;/code&gt;, which build the binary and source installers respectively. The generated binary installers contain everything installed via CMake&amp;rsquo;s &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command (and the deprecated commands &lt;a href=&quot;../command/install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt;&lt;code&gt;install_files()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt;&lt;code&gt;install_programs()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt;&lt;code&gt;install_targets()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">CPackモジュールを含めると、2つの新しいビルドターゲット、 &lt;code&gt;package&lt;/code&gt; と &lt;code&gt;package_source&lt;/code&gt; が追加され、それぞれバイナリインストーラーとソースインストーラーがビルドされます。生成されたバイナリインストーラーには、CMakeの&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;コマンド（および非推奨のコマンド&lt;a href=&quot;../command/install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt; &lt;code&gt;install_files()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../command/install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt; &lt;code&gt;install_programs()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../command/install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt; &lt;code&gt;install_targets()&lt;/code&gt; &lt;/a&gt;）を介してインストールされたすべてが含まれています。</target>
        </trans-unit>
        <trans-unit id="67bc18555a1177d099ef0ced4e356503aeeb7caa" translate="yes" xml:space="preserve">
          <source>Inclusion of this module defines the following variables:</source>
          <target state="translated">このモジュールを含めると、以下の変数が定義されます。</target>
        </trans-unit>
        <trans-unit id="c357bfafb66ce474f3fd20335a0aa9647e140631" translate="yes" xml:space="preserve">
          <source>Index into the &lt;code&gt;commands&lt;/code&gt; member of the &lt;code&gt;backtraceGraph&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;backtraceGraph&lt;/code&gt; の &lt;code&gt;commands&lt;/code&gt; メンバーにインデックスを付けます。</target>
        </trans-unit>
        <trans-unit id="08184ca3440cb5c4d1ed6a21dfc7529844965ff5" translate="yes" xml:space="preserve">
          <source>Index into the &lt;code&gt;files&lt;/code&gt; member of the &lt;code&gt;backtraceGraph&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;backtraceGraph&lt;/code&gt; の &lt;code&gt;files&lt;/code&gt; メンバーにインデックスを付けます。</target>
        </trans-unit>
        <trans-unit id="f8a9e575346155f87f2e13080f9ca870ed430741" translate="yes" xml:space="preserve">
          <source>Index into the &lt;code&gt;nodes&lt;/code&gt; member of the &lt;code&gt;backtraceGraph&lt;/code&gt; representing the parent in the graph.</source>
          <target state="translated">グラフの親を表す &lt;code&gt;backtraceGraph&lt;/code&gt; の &lt;code&gt;nodes&lt;/code&gt; メンバーへのインデックス。</target>
        </trans-unit>
        <trans-unit id="2e3f72dfbcd8f39920f845b42377d218730b45fc" translate="yes" xml:space="preserve">
          <source>Index into the &lt;code&gt;nodes&lt;/code&gt; member of the &lt;code&gt;backtraceGraph&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;backtraceGraph&lt;/code&gt; の &lt;code&gt;nodes&lt;/code&gt; メンバーにインデックスを付けます。</target>
        </trans-unit>
        <trans-unit id="44a7b35850cc745f71a4e09cc355f9df1fac6a4a" translate="yes" xml:space="preserve">
          <source>Indicate that the &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; does not match &lt;code&gt;${CMAKE_FIND_PACKAGE_NAME}&lt;/code&gt;. This is usually a mistake and raises a warning, but it may be intentional for usage of the command for components of a larger package.</source>
          <target state="translated">&lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; が &lt;code&gt;${CMAKE_FIND_PACKAGE_NAME}&lt;/code&gt; 一致しないことを示します。これは通常間違いであり、警告が表示されますが、より大きなパッケージのコンポーネントに対してコマンドを使用することを意図している場合があります。</target>
        </trans-unit>
        <trans-unit id="15abe2bacc2fc425402b5f9f1ef307af0e5e3d9a" translate="yes" xml:space="preserve">
          <source>Indicate that this target should be added to the default build target so that it will be run every time (the command cannot be called &lt;code&gt;ALL&lt;/code&gt;).</source>
          <target state="translated">このターゲットをデフォルトのビルドターゲットに追加して、毎回実行されるように指定します（コマンドを &lt;code&gt;ALL&lt;/code&gt; と呼び出すことはできません）。</target>
        </trans-unit>
        <trans-unit id="084b05340a492359d4fa3f6561098321d502a7ee" translate="yes" xml:space="preserve">
          <source>Indicates the version of the JSON format. The version has a major and minor components following semantic version conventions.</source>
          <target state="translated">JSON フォーマットのバージョンを示す。このバージョンは、セマンティックバージョンの規約に従ったメジャーコンポーネントとマイナーコンポーネントを持っています。</target>
        </trans-unit>
        <trans-unit id="7bc8d7f5e1fe6d22afbdbd001b383f19154f0ef9" translate="yes" xml:space="preserve">
          <source>Indicates the version(s) of the object kind that the client understands. Versions have major and minor components following semantic version conventions. The value must be</source>
          <target state="translated">クライアントが理解しているオブジェクトの種類のバージョンを示します。バージョンは、意味的なバージョンの規約に従ったメジャーとマイナーのコンポーネントを持っています。値は</target>
        </trans-unit>
        <trans-unit id="c71b1ed7078de3fd73795686bab3b4a65b3070eb" translate="yes" xml:space="preserve">
          <source>Indication of whether an &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED target&lt;/a&gt; is globally visible.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTEDターゲット&lt;/a&gt;がグローバルに表示されるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="de64979f84f85b02d52b9bfd15b06fcfe41576f8" translate="yes" xml:space="preserve">
          <source>Individual component values are also available in variables:</source>
          <target state="translated">個々の成分値は変数でも利用可能です。</target>
        </trans-unit>
        <trans-unit id="2dbd2ee7390c6862577544debd7027e78c9c7599" translate="yes" xml:space="preserve">
          <source>Individual features from C++ 11</source>
          <target state="translated">C++11 の個別機能</target>
        </trans-unit>
        <trans-unit id="953fe87f62cfefd171e7bae9a2f7a14222715c22" translate="yes" xml:space="preserve">
          <source>Individual features from C++ 14</source>
          <target state="translated">C++14 からの個別機能</target>
        </trans-unit>
        <trans-unit id="9240fc562da1462636e151b0e00206f1e805baa6" translate="yes" xml:space="preserve">
          <source>Individual features from C++ 98</source>
          <target state="translated">C++98 の個別機能</target>
        </trans-unit>
        <trans-unit id="1f7961b0e11fd11062cf867a9840aa1259e2b034" translate="yes" xml:space="preserve">
          <source>Inform &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above that the target platform enables WinRT compilation by default and it needs to be explicitly disabled if &lt;code&gt;/ZW&lt;/code&gt; or &lt;a href=&quot;../prop_tgt/vs_winrt_component#prop_tgt:VS_WINRT_COMPONENT&quot; id=&quot;index-0-prop_tgt:VS_WINRT_COMPONENT&quot;&gt;&lt;code&gt;VS_WINRT_COMPONENT&lt;/code&gt;&lt;/a&gt; is omitted (as opposed to enabling it when either of those options is present)</source>
          <target state="translated">通知&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;のVisual Studioジェネレータを&lt;/a&gt;VS 2010のために、そのターゲットプラットフォーム上では、デフォルトではWinRTのコンパイルを可能にし、それがあれば、明示的に無効にする必要があります &lt;code&gt;/ZW&lt;/code&gt; または&lt;a href=&quot;../prop_tgt/vs_winrt_component#prop_tgt:VS_WINRT_COMPONENT&quot; id=&quot;index-0-prop_tgt:VS_WINRT_COMPONENT&quot;&gt; &lt;code&gt;VS_WINRT_COMPONENT&lt;/code&gt; が&lt;/a&gt;省略されている（これらのオプションのいずれかが存在する場合、それを有効にするとは対照的に）</target>
        </trans-unit>
        <trans-unit id="760d5c61626c9c854bc797c86a64dfe5fc4bb8b4" translate="yes" xml:space="preserve">
          <source>Information for determining when cmake needs to be re-run as a result of file changes.</source>
          <target state="translated">ファイルの変更の結果、いつ cmake を再実行する必要があるかを判断するための情報。</target>
        </trans-unit>
        <trans-unit id="5fc8e754fcf300d133b1065bed0784d42ce7a4d8" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_config_var('SOABI')&lt;/code&gt; or computed from &lt;code&gt;distutils.sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; or &lt;code&gt;python-config --extension-suffix&lt;/code&gt;. If package &lt;code&gt;distutils.sysconfig&lt;/code&gt; is not available, &lt;code&gt;sysconfig.get_config_var('SOABI')&lt;/code&gt; or &lt;code&gt;sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; are used.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_config_var('SOABI')&lt;/code&gt; によって返される情報、または &lt;code&gt;distutils.sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; または &lt;code&gt;python-config --extension-suffix&lt;/code&gt; から計算される情報。パッケージ &lt;code&gt;distutils.sysconfig&lt;/code&gt; が使用できない場合は、 &lt;code&gt;sysconfig.get_config_var('SOABI')&lt;/code&gt; または &lt;code&gt;sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="c98bea0dbe0ebfa1577d8a25002189ef27af6542" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_config_var('SOABI')&lt;/code&gt; or computed from &lt;code&gt;distutils.sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; or &lt;code&gt;python3-config --extension-suffix&lt;/code&gt;. If package &lt;code&gt;distutils.sysconfig&lt;/code&gt; is not available, &lt;code&gt;sysconfig.get_config_var('SOABI')&lt;/code&gt; or &lt;code&gt;sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; are used.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_config_var('SOABI')&lt;/code&gt; によって返される情報、または &lt;code&gt;distutils.sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; または &lt;code&gt;python3-config --extension-suffix&lt;/code&gt; から計算される情報。パッケージ &lt;code&gt;distutils.sysconfig&lt;/code&gt; が使用できない場合は、 &lt;code&gt;sysconfig.get_config_var('SOABI')&lt;/code&gt; または &lt;code&gt;sysconfig.get_config_var('EXT_SUFFIX')&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="de74defde69e029b17dda4cbca7feb0173f3da16" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)&lt;/code&gt; or else &lt;code&gt;sysconfig.get_path('purelib')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)&lt;/code&gt; または &lt;code&gt;sysconfig.get_path('purelib')&lt;/code&gt; によって返される情報。</target>
        </trans-unit>
        <trans-unit id="5b55814270eecdb8abe78a0c097551dd267e22cf" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)&lt;/code&gt; によって返される情報。</target>
        </trans-unit>
        <trans-unit id="b8b2ded9c1f5f328483adb0b15b0654063932d6e" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)&lt;/code&gt; or else &lt;code&gt;sysconfig.get_path('stdlib')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)&lt;/code&gt; または &lt;code&gt;sysconfig.get_path('stdlib')&lt;/code&gt; によって返される情報。</target>
        </trans-unit>
        <trans-unit id="ec0210675e260ec2ceeec1041264e99d0916a952" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)&lt;/code&gt; によって返される情報。</target>
        </trans-unit>
        <trans-unit id="0eca97ef014fff034834229f64a319997d941595" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)&lt;/code&gt; or else &lt;code&gt;sysconfig.get_path('platlib')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)&lt;/code&gt; または &lt;code&gt;sysconfig.get_path('platlib')&lt;/code&gt; によって返される情報。</target>
        </trans-unit>
        <trans-unit id="0f0dd0b3e60b3af524934a221efe1f3dd89e56df" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)&lt;/code&gt; によって返される情報。</target>
        </trans-unit>
        <trans-unit id="603b0707558df10d9ae151eb0ea3ea980e9e48c3" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)&lt;/code&gt; or else &lt;code&gt;sysconfig.get_path('platstdlib')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)&lt;/code&gt; または &lt;code&gt;sysconfig.get_path('platstdlib')&lt;/code&gt; によって返される情報。</target>
        </trans-unit>
        <trans-unit id="94d0466121c89b424cc3b49f263c3f205df24e16" translate="yes" xml:space="preserve">
          <source>Information returned by &lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)&lt;/code&gt; によって返される情報。</target>
        </trans-unit>
        <trans-unit id="8d38dd8d4c62303b340ed596b35089ff2d586fdf" translate="yes" xml:space="preserve">
          <source>Inheriting constructors, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2540.htm&quot;&gt;N2540&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2540.htm&quot;&gt;N2540で&lt;/a&gt;定義されている継承コンストラクター。</target>
        </trans-unit>
        <trans-unit id="2f68994ca2757be8a1c7985a35c3412f228a2e19" translate="yes" xml:space="preserve">
          <source>Initial values of the CMake environment variables are those of the calling process. Values can be changed using the &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-2-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/unset#command:unset&quot; id=&quot;index-2-command:unset&quot;&gt;&lt;code&gt;unset()&lt;/code&gt;&lt;/a&gt; commands. These commands only affect the running CMake process, not the system environment at large. Changed values are not written back to the calling process, and they are not seen by subsequent build or test processes.</source>
          <target state="translated">CMake環境変数の初期値は、呼び出しプロセスの初期値です。値は、&lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-2-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../command/unset#command:unset&quot; id=&quot;index-2-command:unset&quot;&gt; &lt;code&gt;unset()&lt;/code&gt; &lt;/a&gt;コマンドを使用して変更できます。これらのコマンドは、実行中のCMakeプロセスにのみ影響し、システム環境全体には影響しません。変更された値は呼び出しプロセスに書き戻されず、後続のビルドまたはテストプロセスでは表示されません。</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="d5c957ed1b4da2c188db25f9128530ddfec287e7" translate="yes" xml:space="preserve">
          <source>Initialize &lt;a href=&quot;../variable/cmake_cuda_architectures#variable:CMAKE_CUDA_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; when &lt;code&gt;CMAKE_CUDA_COMPILER_ID&lt;/code&gt; is &lt;code&gt;NVIDIA&lt;/code&gt;. Raise an error if &lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-0-prop_tgt:CUDA_ARCHITECTURES&quot;&gt;&lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; is empty.</source>
          <target state="translated">初期&lt;a href=&quot;../variable/cmake_cuda_architectures#variable:CMAKE_CUDA_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_ARCHITECTURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_ARCHITECTURES&lt;/code&gt; &lt;/a&gt;とき &lt;code&gt;CMAKE_CUDA_COMPILER_ID&lt;/code&gt; がある &lt;code&gt;NVIDIA&lt;/code&gt; 。&lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-0-prop_tgt:CUDA_ARCHITECTURES&quot;&gt; &lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt; &lt;/a&gt;が空の場合、エラーを発生させます。</target>
        </trans-unit>
        <trans-unit id="b95827639c34d5f28c6e463ed65d7dfce549b6de" translate="yes" xml:space="preserve">
          <source>Initialized lambda captures, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3648.html&quot;&gt;N3648&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3648.html&quot;&gt;N3648で&lt;/a&gt;定義されている初期化されたラムダキャプチャ。</target>
        </trans-unit>
        <trans-unit id="849e7314588f2d49278daaac5abcc629587dc45f" translate="yes" xml:space="preserve">
          <source>Initializer lists, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2672.htm&quot;&gt;N2672&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2672.htm&quot;&gt;N2672で&lt;/a&gt;定義されている初期化リスト。</target>
        </trans-unit>
        <trans-unit id="6669706f8bb76450838b5b6b1a1c0bb0fcdf78a7" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;../prop_tgt/optimize_dependencies#prop_tgt:OPTIMIZE_DEPENDENCIES&quot; id=&quot;index-0-prop_tgt:OPTIMIZE_DEPENDENCIES&quot;&gt;&lt;code&gt;OPTIMIZE_DEPENDENCIES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/optimize_dependencies#prop_tgt:OPTIMIZE_DEPENDENCIES&quot; id=&quot;index-0-prop_tgt:OPTIMIZE_DEPENDENCIES&quot;&gt; &lt;code&gt;OPTIMIZE_DEPENDENCIES&lt;/code&gt; &lt;/a&gt;ターゲットプロパティを初期化します。</target>
        </trans-unit>
        <trans-unit id="30f852a8ae044f3a8c3c7771c3520a272f1bd81b" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;../variable/ctest_use_launchers#variable:CTEST_USE_LAUNCHERS&quot; id=&quot;index-0-variable:CTEST_USE_LAUNCHERS&quot;&gt;&lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt;&lt;/a&gt; variable if not already defined.</source>
          <target state="translated">まだ定義されていない場合は、&lt;a href=&quot;../variable/ctest_use_launchers#variable:CTEST_USE_LAUNCHERS&quot; id=&quot;index-0-variable:CTEST_USE_LAUNCHERS&quot;&gt; &lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt; &lt;/a&gt;変数を初期化します。</target>
        </trans-unit>
        <trans-unit id="45f75b8832779ed143501551e9ea2afefc8dbbe1" translate="yes" xml:space="preserve">
          <source>Inline namespaces, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2535.htm&quot;&gt;N2535&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2535.htm&quot;&gt;N2535で&lt;/a&gt;定義されているインライン名前空間。</target>
        </trans-unit>
        <trans-unit id="caf92b611ce949cc2a2e44c5dabf3c80f7f98b9b" translate="yes" xml:space="preserve">
          <source>Input Variables</source>
          <target state="translated">入力変数</target>
        </trans-unit>
        <trans-unit id="5e84aa4a269e4bae126e915d20feb1a8aa793a39" translate="yes" xml:space="preserve">
          <source>Input directories must have &lt;code&gt;CMakeLists.txt&lt;/code&gt;.</source>
          <target state="translated">入力ディレクトリには &lt;code&gt;CMakeLists.txt&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="f7cbe0d5e7bcd879cdab597264f976adc8005cc6" translate="yes" xml:space="preserve">
          <source>Insert elements to the 0th position in the list.</source>
          <target state="translated">リストの0番目の位置に要素を挿入します。</target>
        </trans-unit>
        <trans-unit id="d42bab8a19b97389255c83488cd69f0338c55190" translate="yes" xml:space="preserve">
          <source>Inserts elements to the list to the specified location.</source>
          <target state="translated">リストに指定した位置に要素を挿入します。</target>
        </trans-unit>
        <trans-unit id="7dfff46393a5e398a05480e1aa0eac374d594ebe" translate="yes" xml:space="preserve">
          <source>Inside brackets, specifies an inclusive range between characters on either side e.g. &lt;code&gt;[a-f]&lt;/code&gt; is &lt;code&gt;[abcdef]&lt;/code&gt; To match a literal &lt;code&gt;-&lt;/code&gt; using brackets, make it the first or the last character e.g. &lt;code&gt;[+*/-]&lt;/code&gt; matches basic mathematical operators.</source>
          <target state="translated">角かっこ内で、両側の文字間の包括的な範囲を指定します。例： &lt;code&gt;[a-f]&lt;/code&gt; is &lt;code&gt;[abcdef]&lt;/code&gt; リテラルに一致させるには &lt;code&gt;-&lt;/code&gt; 大かっこを使用して、最初または最後の文字をそれとします。例： &lt;code&gt;[+*/-]&lt;/code&gt; は基本的な数学演算子に一致</target>
        </trans-unit>
        <trans-unit id="6d04fe1aecb2f3d900223eb374b809b8bfc56494" translate="yes" xml:space="preserve">
          <source>Install (or copy) a resolved &amp;lt;plugin&amp;gt; to the default plugins directory (or &amp;lt;plugins_dir&amp;gt;) relative to &amp;lt;executable&amp;gt; and store the result in &amp;lt;installed_plugin_path_var&amp;gt;.</source>
          <target state="translated">解決済みの&amp;lt;plugin&amp;gt;を、&amp;lt;executable&amp;gt;を基準にしてデフォルトのプラグインディレクトリ（または&amp;lt;plugins_dir&amp;gt;）にインストール（またはコピー）し、結果を&amp;lt;installed_plugin_path_var&amp;gt;に保存します。</target>
        </trans-unit>
        <trans-unit id="865fe61d1b71e2d3a82dc85e60543ea718fd5217" translate="yes" xml:space="preserve">
          <source>Install (or copy) an unresolved &amp;lt;plugin&amp;gt; to the default plugins directory (or &amp;lt;plugins_dir&amp;gt;) relative to &amp;lt;executable&amp;gt; and store the result in &amp;lt;installed_plugin_path_var&amp;gt;. See documentation of INSTALL_QT4_PLUGIN_PATH.</source>
          <target state="translated">未解決の&amp;lt;plugin&amp;gt;を、&amp;lt;executable&amp;gt;に相対するデフォルトのプラグインディレクトリ（または&amp;lt;plugins_dir&amp;gt;）にインストール（またはコピー）し、結果を&amp;lt;installed_plugin_path_var&amp;gt;に保存します。INSTALL_QT4_PLUGIN_PATHのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="e5e8a07ae23c93c28f19cc38c003a2bfb6a173c9" translate="yes" xml:space="preserve">
          <source>Install Rules</source>
          <target state="translated">インストールルール</target>
        </trans-unit>
        <trans-unit id="596143eadb996007842f1892d637595afa56ce76" translate="yes" xml:space="preserve">
          <source>Install a Project</source>
          <target state="translated">プロジェクトのインストール</target>
        </trans-unit>
        <trans-unit id="aac3689fb44199d78ca8d02df0296ca8c199e827" translate="yes" xml:space="preserve">
          <source>Install directory for running cmake.</source>
          <target state="translated">cmakeを実行するためのインストールディレクトリです。</target>
        </trans-unit>
        <trans-unit id="b756da7345778dc6650d2db91fa7ae91c0eb0a29" translate="yes" xml:space="preserve">
          <source>Install directory used by &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; が&lt;/a&gt;使用するインストールディレクトリ。</target>
        </trans-unit>
        <trans-unit id="a820410182ac3e9c6773d2380fc0c94ffd9b2cdc" translate="yes" xml:space="preserve">
          <source>Install rules from &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; calls are interleaved with those in caller.</source>
          <target state="translated">&lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt;呼び出しからのインストール規則は、呼び出し元の規則とインターリーブされます。</target>
        </trans-unit>
        <trans-unit id="4fd128bc830c6c1092ba7637218ba80011d4a8b7" translate="yes" xml:space="preserve">
          <source>Install the generated configuration files with the &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-7-command:install&quot;&gt;&lt;code&gt;INSTALL(files)&lt;/code&gt;&lt;/a&gt; command. Both &lt;code&gt;MathFunctionsConfigVersion.cmake&lt;/code&gt; and &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; are installed to the same location, completing the package.</source>
          <target state="translated">生成された構成ファイルを&lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-7-command:install&quot;&gt; &lt;code&gt;INSTALL(files)&lt;/code&gt; &lt;/a&gt;コマンドでインストールします。どちらも &lt;code&gt;MathFunctionsConfigVersion.cmake&lt;/code&gt; と &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; は、パッケージを完了し、同じ場所にインストールされています。</target>
        </trans-unit>
        <trans-unit id="8358a66612875f90b48c5f31167ce547a99912dc" translate="yes" xml:space="preserve">
          <source>Install:</source>
          <target state="translated">Install:</target>
        </trans-unit>
        <trans-unit id="6cb6095d1a6213a7ae4a94779224aba3bbd27673" translate="yes" xml:space="preserve">
          <source>InstallRequiredSystemLibraries</source>
          <target state="translated">InstallRequiredSystemLibraries</target>
        </trans-unit>
        <trans-unit id="6cb09209a2f7f85811ae7f99854a0dbbdd77638c" translate="yes" xml:space="preserve">
          <source>Installation directory on the target system. This may be used by some CPack generators like NSIS to create an installation directory e.g., &amp;ldquo;CMake 2.5&amp;rdquo; below the installation prefix. All installed elements will be put inside this directory.</source>
          <target state="translated">ターゲットシステムのインストールディレクトリ。これは、NSISなどの一部のCPackジェネレーターによって、インストールプレフィックスの下に「CMake 2.5」などのインストールディレクトリを作成するために使用される場合があります。インストールされたすべての要素は、このディレクトリ内に配置されます。</target>
        </trans-unit>
        <trans-unit id="832dcff63893e05fe5f4d002e43fbd31b78d2224" translate="yes" xml:space="preserve">
          <source>Installation of directories may be controlled with fine granularity using the &lt;code&gt;PATTERN&lt;/code&gt; or &lt;code&gt;REGEX&lt;/code&gt; options. These &amp;ldquo;match&amp;rdquo; options specify a globbing pattern or regular expression to match directories or files encountered within input directories. They may be used to apply certain options (see below) to a subset of the files and directories encountered. The full path to each input file or directory (with forward slashes) is matched against the expression. A &lt;code&gt;PATTERN&lt;/code&gt; will match only complete file names: the portion of the full path matching the pattern must occur at the end of the file name and be preceded by a slash. A &lt;code&gt;REGEX&lt;/code&gt; will match any portion of the full path but it may use &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; to simulate the &lt;code&gt;PATTERN&lt;/code&gt; behavior. By default all files and directories are installed whether or not they are matched. The &lt;code&gt;FILES_MATCHING&lt;/code&gt; option may be given before the first match option to disable installation of files (but not directories) not matched by any expression. For example, the code</source>
          <target state="translated">ディレクトリのインストールは、 &lt;code&gt;PATTERN&lt;/code&gt; または &lt;code&gt;REGEX&lt;/code&gt; オプションを使用して細かく制御できます。これらの「一致」オプションは、入力ディレクトリ内で検出されたディレクトリまたはファイルに一致するグロビングパターンまたは正規表現を指定します。これらは、特定のオプション（以下を参照）を、検出されたファイルとディレクトリのサブセットに適用するために使用できます。各入力ファイルまたはディレクトリへのフルパス（スラッシュを含む）が式と照合されます。 &lt;code&gt;PATTERN&lt;/code&gt; 唯一の完全なファイル名と一致します：パターンに一致する完全なパスの部分は、ファイル名の最後に行われなければならないとスラッシュが先行します。 A &lt;code&gt;REGEX&lt;/code&gt; は、完全なパスのいずれかの部分と一致しますが、それは使用することができます &lt;code&gt;/&lt;/code&gt; と &lt;code&gt;$&lt;/code&gt; &lt;code&gt;PATTERN&lt;/code&gt; 動作をシミュレートします。デフォルトでは、一致するかどうかに関係なく、すべてのファイルとディレクトリがインストールされます。 &lt;code&gt;FILES_MATCHING&lt;/code&gt; のオプションは任意の式で一致しないファイル（ただし、ディレクトリ）の無効化インストールに最初の一致オプションの前に与えられてもよいです。たとえば、コード</target>
        </trans-unit>
        <trans-unit id="1069ad6672b23cddf617074211b784be96073800" translate="yes" xml:space="preserve">
          <source>Installation prefix to be placed in the &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt; placeholder. This does not actually configure the external project to install to the given prefix. That must be done by passing appropriate arguments to the external project configuration step, e.g. using &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt; プレースホルダーに配置されるインストールプレフィックス。これは実際には、外部プロジェクトを指定されたプレフィックスにインストールするように構成しません。これは、たとえば &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt; を使用して、適切な引数を外部プロジェクト構成ステップに渡すことによって行う必要があります。</target>
        </trans-unit>
        <trans-unit id="c427a6f0cc8307cb555c1e7e29b1e1b136d8bf9d" translate="yes" xml:space="preserve">
          <source>Installing &lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt;&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt; targets requires a &lt;code&gt;BUNDLE DESTINATION&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt; &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; &lt;/a&gt;ターゲットをインストールするには、 &lt;code&gt;BUNDLE DESTINATION&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="7dff38038b2d84d442c8d708975b6ee317cedde5" translate="yes" xml:space="preserve">
          <source>Installing Directories</source>
          <target state="translated">ディレクトリのインストール</target>
        </trans-unit>
        <trans-unit id="22db3b6f18653c674e1ab24c75f2000b68ec01d0" translate="yes" xml:space="preserve">
          <source>Installing Exports</source>
          <target state="translated">エクスポートのインストール</target>
        </trans-unit>
        <trans-unit id="ebc6e304f03866c9429746623d6855a965a61670" translate="yes" xml:space="preserve">
          <source>Installing Files</source>
          <target state="translated">ファイルのインストール</target>
        </trans-unit>
        <trans-unit id="88b4010941f9a5bf16e9361ee05c50d34f2990ce" translate="yes" xml:space="preserve">
          <source>Installing Targets</source>
          <target state="translated">ターゲットの設置</target>
        </trans-unit>
        <trans-unit id="d8fdf5f4ba8f191e194595405b6615f001a9f9ba" translate="yes" xml:space="preserve">
          <source>Installing a target with the &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; target property set to &lt;code&gt;TRUE&lt;/code&gt; has undefined behavior.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt;ターゲットプロパティを &lt;code&gt;TRUE&lt;/code&gt; に設定してターゲットをインストールすると、未定義の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="5aa622fa824c2a69a933ea9568d3468ada4bd1f7" translate="yes" xml:space="preserve">
          <source>Installing and Testing (Step 4)</source>
          <target state="translated">インストールとテスト(ステップ4</target>
        </trans-unit>
        <trans-unit id="b7f0e3286b62dec5e7e1cceb350f12eb753efe5e" translate="yes" xml:space="preserve">
          <source>Installs Qt plugins, writes a Qt configuration file (if needed) and fixes up a Qt4 executable using BundleUtilities so it is standalone and can be drag-and-drop copied to another machine as long as all of the system libraries are compatible. The executable will be fixed-up at install time. &amp;lt;component&amp;gt; is the COMPONENT used for bundle fixup and plugin installation. See documentation of FIXUP_QT4_BUNDLE.</source>
          <target state="translated">Qtプラグインをインストールし、Qt構成ファイルを書き込み（必要な場合）、BundleUtilitiesを使用してQt4実行可能ファイルを修正します。これにより、スタンドアロンであり、すべてのシステムライブラリに互換性がある限り、別のマシンにドラッグアンドドロップでコピーできます。実行ファイルはインストール時に修正されます。&amp;lt;component&amp;gt;は、バンドルの修正とプラグインのインストールに使用されるコンポーネントです。FIXUP_QT4_BUNDLEのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="25fad22f93e4d0246fada28ede63d0522f00f458" translate="yes" xml:space="preserve">
          <source>Installs the software. This target is only automatically available if the software defines install rules with the &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. See also &lt;a href=&quot;#software-installation&quot;&gt;Software Installation&lt;/a&gt;.</source>
          <target state="translated">ソフトウェアをインストールします。このターゲットは、ソフトウェアが&lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;コマンドでインストールルールを定義している場合にのみ自動的に使用できます。&lt;a href=&quot;#software-installation&quot;&gt;ソフトウェアのインストール&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="e70dbf4fdcde1140ee9c5500188d0b6628492ef1" translate="yes" xml:space="preserve">
          <source>Instance specification is supported only on specific generators:</source>
          <target state="translated">インスタンス指定は、特定のジェネレーターでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="a6b80840347014f11789ad500f3f8411f65a3a72" translate="yes" xml:space="preserve">
          <source>Instead of calling &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-1-command:externalproject_add_steptargets&quot;&gt;&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt;&lt;/a&gt;, the target could be defined along with the &lt;code&gt;foobar&lt;/code&gt; project itself:</source>
          <target state="translated">&lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-1-command:externalproject_add_steptargets&quot;&gt; &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; &lt;/a&gt;を呼び出す代わりに、ターゲットを &lt;code&gt;foobar&lt;/code&gt; プロジェクト自体とともに定義できます。</target>
        </trans-unit>
        <trans-unit id="000473f66e917a17ada3fcffacd2fa6a4549cca9" translate="yes" xml:space="preserve">
          <source>Instead of calling &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-4-command:externalproject_add_steptargets&quot;&gt;&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt;&lt;/a&gt;, the target could be defined along with the &lt;code&gt;foobar&lt;/code&gt; project itself:</source>
          <target state="translated">&lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-4-command:externalproject_add_steptargets&quot;&gt; &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; &lt;/a&gt;を呼び出す代わりに、ターゲットを &lt;code&gt;foobar&lt;/code&gt; プロジェクト自体と一緒に定義することができます。</target>
        </trans-unit>
        <trans-unit id="4ee5beed50aa7f5c949f694811eccac293678fcd" translate="yes" xml:space="preserve">
          <source>Instead of leaving byproducts undeclared in the rules that generate them, Ninja expects byproducts to be listed along with other outputs. Such rules may be marked with a &lt;code&gt;restat&lt;/code&gt; option that tells Ninja to check the timestamps of outputs after the rules run. This prevents byproducts whose timestamps do not change from causing their dependents to re-build unnecessarily.</source>
          <target state="translated">副産物を生成するルールで宣言されていない副産物を残す代わりに、Ninjaは副産物が他の出力とともにリストされることを期待します。そのようなルールは、ルールの実行後に出力のタイムスタンプをチェックするようNinjaに指示する &lt;code&gt;restat&lt;/code&gt; オプションでマークされる場合があります。これにより、タイムスタンプが変更されない副産物が、依存関係を不必要に再構築するのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="230406a82b84fbf6b6a66a305878a269e3fdbf32" translate="yes" xml:space="preserve">
          <source>Instead of specifying all the desired components, it is possible to obtain a list of all defined components and then remove the unwanted ones from the list. The &lt;a href=&quot;../command/get_cmake_property#command:get_cmake_property&quot; id=&quot;index-0-command:get_cmake_property&quot;&gt;&lt;code&gt;get_cmake_property()&lt;/code&gt;&lt;/a&gt; command can be used to obtain the &lt;code&gt;COMPONENTS&lt;/code&gt; property, then the &lt;a href=&quot;../command/list#command:list&quot; id=&quot;index-0-command:list&quot;&gt;&lt;code&gt;list(REMOVE_ITEM)&lt;/code&gt;&lt;/a&gt; command can be used to remove the unwanted ones. For example, to use all defined components except &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt;:</source>
          <target state="translated">必要なすべてのコンポーネントを指定する代わりに、定義されたすべてのコンポーネントのリストを取得して、不要なものをリストから削除することができます。&lt;a href=&quot;../command/get_cmake_property#command:get_cmake_property&quot; id=&quot;index-0-command:get_cmake_property&quot;&gt; &lt;code&gt;get_cmake_property()&lt;/code&gt; &lt;/a&gt;コマンドを取得するために使用することができ &lt;code&gt;COMPONENTS&lt;/code&gt; 、その後、プロパティを&lt;a href=&quot;../command/list#command:list&quot; id=&quot;index-0-command:list&quot;&gt; &lt;code&gt;list(REMOVE_ITEM)&lt;/code&gt; &lt;/a&gt;コマンドは、不要なものを削除するために使用することができます。たとえば、 &lt;code&gt;foo&lt;/code&gt; と &lt;code&gt;bar&lt;/code&gt; を除くすべての定義済みコンポーネントを使用するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="b376bac70729e6a82f1d4d12115dd32253300835" translate="yes" xml:space="preserve">
          <source>Integer values specifying the major, minor, and patch version components.</source>
          <target state="translated">メジャー、マイナー、パッチバージョンのコンポーネントを指定する整数値。</target>
        </trans-unit>
        <trans-unit id="f6235cc220a6a0f5ed69e7ed8bb2cf3fa7bbd333" translate="yes" xml:space="preserve">
          <source>Integrated development environments (IDEs) may want to integrate with CMake to improve the development experience for CMake users. This document lays out the recommended best practices for such integration.</source>
          <target state="translated">統合開発環境(IDE)は、CMake ユーザーの開発経験を向上させるために、CMake と統合したい場合があります。このドキュメントでは、そのような統合のための推奨されるベストプラクティスについて説明します。</target>
        </trans-unit>
        <trans-unit id="a5b5fdf4152fa200d05e2ed9454335247b287409" translate="yes" xml:space="preserve">
          <source>Intel (obsolete versions of mkl 32 and 64 bit)</source>
          <target state="translated">インテル</target>
        </trans-unit>
        <trans-unit id="8aab861d5c0d7682098ed6cc0b28d3e64207eea9" translate="yes" xml:space="preserve">
          <source>Intel Hex and Motorola S-record files are automatically converted to binary while reading unless this option is given.</source>
          <target state="translated">Intel HexとMotorola S-recordファイルは、このオプションが与えられていない限り、読み込み中に自動的にバイナリに変換されます。</target>
        </trans-unit>
        <trans-unit id="1046dd1ee2507bec3fa06d2feba90d631fad18f0" translate="yes" xml:space="preserve">
          <source>Intel10_32 (intel mkl v10 32 bit)</source>
          <target state="translated">インテル10_32 (インテルmkl v10 32ビット)</target>
        </trans-unit>
        <trans-unit id="9f12d73c5bed4184eef0794062f902274141f1ed" translate="yes" xml:space="preserve">
          <source>Intel10_64ilp (intel mkl v10+ 64 bit, threaded code, ilp64 model)</source>
          <target state="translated">Intel10_64ilp (インテルmkl v10+64ビット、スレッドコード、ilp64モデル)</target>
        </trans-unit>
        <trans-unit id="c831bfd3a9b791aa8fefd0f5d9b2e39a70020571" translate="yes" xml:space="preserve">
          <source>Intel10_64ilp_seq (intel mkl v10+ 64 bit, sequential code, ilp64 model)</source>
          <target state="translated">Intel10_64ilp_seq (インテルmkl v10+64ビット、シーケンシャルコード、ilp64モデル)</target>
        </trans-unit>
        <trans-unit id="e30a223469734a63fe80dce916416c48598710dc" translate="yes" xml:space="preserve">
          <source>Intel10_64lp (intel mkl v10+ 64 bit, threaded code, lp64 model)</source>
          <target state="translated">Intel10_64lp (インテルmkl v10+64ビット、スレッドコード、lp64モデル)</target>
        </trans-unit>
        <trans-unit id="6b392507898ea23f6d087d68941f2c196fb9d1de" translate="yes" xml:space="preserve">
          <source>Intel10_64lp_seq (intel mkl v10+ 64 bit, sequential code, lp64 model)</source>
          <target state="translated">インテル10_64lp_seq (インテルmkl v10+64ビット、シーケンシャルコード、lp64モデル)</target>
        </trans-unit>
        <trans-unit id="e526825f1739063c877f1259c20f98f77fe40805" translate="yes" xml:space="preserve">
          <source>Intended to indicate whether CMake is cross compiling, but note limitations discussed below.</source>
          <target state="translated">CMake がクロスコンパイルを行っているかどうかを示すことを意図していますが、後述する制限事項に注意してください。</target>
        </trans-unit>
        <trans-unit id="0e7974fe60b15bcdb097e9dc78815ab836bf32eb" translate="yes" xml:space="preserve">
          <source>Interactive Dialogs</source>
          <target state="translated">インタラクティブダイアログ</target>
        </trans-unit>
        <trans-unit id="4218adeeef5c22aa0d3a90281a66729d80adc82a" translate="yes" xml:space="preserve">
          <source>Interface Libraries</source>
          <target state="translated">インターフェースライブラリ</target>
        </trans-unit>
        <trans-unit id="96e9e5192fe756d3fd41d1979d5a3b9d7309e865" translate="yes" xml:space="preserve">
          <source>Internal Variables</source>
          <target state="translated">内部変数</target>
        </trans-unit>
        <trans-unit id="1fc89e1d3411b0608601d8cd048609ca07f356fb" translate="yes" xml:space="preserve">
          <source>Internal management property. Do not set or get.</source>
          <target state="translated">内部管理物件。設定したり、取得したりしないでください。</target>
        </trans-unit>
        <trans-unit id="850f52e8f27f6e50bae3c9bf2beb74e599d0d4d6" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-4-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-3-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt; to create each step. If any &lt;code&gt;STEP_TARGETS&lt;/code&gt; or &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; were specified, then &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; will also be called after &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-4-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; have the &lt;code&gt;NO_DEPENDS&lt;/code&gt; option set, whereas &lt;code&gt;STEP_TARGETS&lt;/code&gt; do not. Other than that, the two options result in &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; being called in the same way. Even if a step is not mentioned in either of those two options, &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; can still be called later to manually define a target for the step.</source>
          <target state="translated">内部的に、&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-4-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-3-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt;を呼び出して各ステップを作成します。いずれかの場合 &lt;code&gt;STEP_TARGETS&lt;/code&gt; または &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; を指定し、次いで &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; も後に呼び出されます&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-4-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; は持って &lt;code&gt;NO_DEPENDS&lt;/code&gt; のに対し、オプションのセットを &lt;code&gt;STEP_TARGETS&lt;/code&gt; はありません。それ以外の2つのオプションでは、 &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; が同じ方法で呼び出されます。これらの2つのオプションのいずれかでステップが言及されていない場合でも、 &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 引き続き後で呼び出して、ステップのターゲットを手動で定義できます。</target>
        </trans-unit>
        <trans-unit id="3ca771adda222523f4686072d750597ccff48b86" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-5-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-1-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt; to create each step. If any &lt;code&gt;STEP_TARGETS&lt;/code&gt; were specified, then &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; will also be called after &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-2-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;. Even if a step is not mentioned in the &lt;code&gt;STEP_TARGETS&lt;/code&gt; option, &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; can still be called later to manually define a target for the step.</source>
          <target state="translated">内部的には、&lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-5-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-1-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt;を呼び出して各ステップを作成します。いずれの場合 &lt;code&gt;STEP_TARGETS&lt;/code&gt; を指定し、次いで &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; も後に呼び出されます&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-2-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;STEP_TARGETS&lt;/code&gt; オプションでステップが指定されていない場合でも、 &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; を後で呼び出して、ステップのターゲットを手動で定義できます。</target>
        </trans-unit>
        <trans-unit id="5d9208ef80044158cba16051d29c90db7c24a6ca" translate="yes" xml:space="preserve">
          <source>Internally, this macro executes &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-3-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; to create the resulting version file. Depending on the &lt;code&gt;COMPATIBILITY&lt;/code&gt;, the corresponding &lt;code&gt;BasicConfigVersion-&amp;lt;COMPATIBILITY&amp;gt;.cmake.in&lt;/code&gt; file is used. Please note that these files are internal to CMake and you should not call &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-4-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; on them yourself, but they can be used as starting point to create more sophisticted custom &lt;code&gt;ConfigVersion.cmake&lt;/code&gt; files.</source>
          <target state="translated">内部的には、このマクロは&lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-3-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt;を実行して、結果のバージョンファイルを作成します。 &lt;code&gt;COMPATIBILITY&lt;/code&gt; に応じて、対応する &lt;code&gt;BasicConfigVersion-&amp;lt;COMPATIBILITY&amp;gt;.cmake.in&lt;/code&gt; ファイルが使用されます。これらのファイルはCMakeの内部にあり、自分で&lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-4-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt;を呼び出すことはできませんが、より洗練されたカスタム &lt;code&gt;ConfigVersion.cmake&lt;/code&gt; ファイルを作成するための開始点として使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="ae30d1b78e26f95f1bd946cd3468d39046fec04e" translate="yes" xml:space="preserve">
          <source>Introduction to CMake Buildsystems</source>
          <target state="translated">CMake ビルドシステム入門</target>
        </trans-unit>
        <trans-unit id="6a9b44369c96eafd66d755034e5ce80488ad8832" translate="yes" xml:space="preserve">
          <source>Invocation</source>
          <target state="translated">Invocation</target>
        </trans-unit>
        <trans-unit id="0dac934ff5f7c5ffb7e2765e757f2db836992cbf" translate="yes" xml:space="preserve">
          <source>Invoking the Buildsystem</source>
          <target state="translated">ビルドシステムの呼び出し</target>
        </trans-unit>
        <trans-unit id="305388ace3ade1a2e164495bb37562bbc8391879" translate="yes" xml:space="preserve">
          <source>IronPython</source>
          <target state="translated">IronPython</target>
        </trans-unit>
        <trans-unit id="8457b39aa54c2fc0f5226c9fde9e321d943c29f3" translate="yes" xml:space="preserve">
          <source>Is set if and only if &lt;code&gt;backtrace(3)&lt;/code&gt; support detected.</source>
          <target state="translated">&lt;code&gt;backtrace(3)&lt;/code&gt; サポートが検出された場合にのみ設定されます。</target>
        </trans-unit>
        <trans-unit id="1dba70b8a5f5aaf56c2c63b53b03b9d228c6739a" translate="yes" xml:space="preserve">
          <source>Is there a better place for us to save the &lt;code&gt;HAVE_LOG&lt;/code&gt; and &lt;code&gt;HAVE_EXP&lt;/code&gt; values other than in &lt;code&gt;TutorialConfig.h&lt;/code&gt;? Let&amp;rsquo;s try to use &lt;a href=&quot;../../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-1-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;TutorialConfig.h&lt;/code&gt; 以外に &lt;code&gt;HAVE_LOG&lt;/code&gt; と &lt;code&gt;HAVE_EXP&lt;/code&gt; の値を保存するのに適した場所はありますか？&lt;a href=&quot;../../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-1-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt;を使ってみましょう。</target>
        </trans-unit>
        <trans-unit id="7d97420912521ae43a8c57412cad497ff55be3ff" translate="yes" xml:space="preserve">
          <source>Is this just a name for a rule.</source>
          <target state="translated">これはただのルールの名前なのか</target>
        </trans-unit>
        <trans-unit id="50e120bec02a986e95253c25cc31dce8a8d930ee" translate="yes" xml:space="preserve">
          <source>Is this source file an abstract class.</source>
          <target state="translated">このソースファイルは抽象クラスです。</target>
        </trans-unit>
        <trans-unit id="7d52fe04e3dc3e30b5d5dd6d76e74199a69f5c9e" translate="yes" xml:space="preserve">
          <source>Is this source file generated as part of the build or CMake process.</source>
          <target state="translated">このソースファイルは、ビルドまたは CMake プロセスの一部として生成されたものです。</target>
        </trans-unit>
        <trans-unit id="eee219ca7cd18eaef1940959c469c63bf93fa54b" translate="yes" xml:space="preserve">
          <source>Is this source file only a header file.</source>
          <target state="translated">このソースファイルはヘッダファイルだけですかね。</target>
        </trans-unit>
        <trans-unit id="c787c93360fa660548dd883c2cb18709eea4be0a" translate="yes" xml:space="preserve">
          <source>Is this source file skipped by &lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:PRECOMPILE_HEADERS&quot;&gt;&lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt;&lt;/a&gt; feature.</source>
          <target state="translated">このソースファイルは&lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:PRECOMPILE_HEADERS&quot;&gt; &lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt; &lt;/a&gt;機能によってスキップされますか？</target>
        </trans-unit>
        <trans-unit id="17696532d655f9e6976f8ca06eae3eadff071011" translate="yes" xml:space="preserve">
          <source>It also adds the following macros (from &lt;code&gt;KDE3Macros.cmake&lt;/code&gt;) &lt;code&gt;SRCS_VAR&lt;/code&gt; is always the variable which contains the list of source files for your application or library.</source>
          <target state="translated">また、次のマクロを追加します（ &lt;code&gt;KDE3Macros.cmake&lt;/code&gt; から） &lt;code&gt;SRCS_VAR&lt;/code&gt; は常に、アプリケーションまたはライブラリのソースファイルのリストを含む変数です。</target>
        </trans-unit>
        <trans-unit id="3b06ea46613cc8792c43979c89c9537e0315642f" translate="yes" xml:space="preserve">
          <source>It also determines what the name of the library is.</source>
          <target state="translated">また、図書館の名前が何であるかを決定します。</target>
        </trans-unit>
        <trans-unit id="ecd16171fb833a1fd98017fcad46332c2fc93ee3" translate="yes" xml:space="preserve">
          <source>It also determines what the name of the library is. This code sets the following variables:</source>
          <target state="translated">また、ライブラリの名前を決定します。このコードでは、以下の変数を設定しています。</target>
        </trans-unit>
        <trans-unit id="9eeea1007b693abe3db3ca67519ec2516342d790" translate="yes" xml:space="preserve">
          <source>It contains the following variables: ECOS_DEFINITIONS ECOSCONFIG_EXECUTABLE ECOS_CONFIG_FILE - defaults to ecos.ecc, if your eCos configuration file has a different name, adjust this variable for internal use only:</source>
          <target state="translated">以下の変数が含まれています。ECOS_DEFINITIONS ECOSCONFIG_EXECUTABLE ECOS_CONFIG_FILE-デフォルトはecos.eccです。</target>
        </trans-unit>
        <trans-unit id="0cac0b805c44abeff71f48d654dffb56998dd0fd" translate="yes" xml:space="preserve">
          <source>It creates custom commands in the target as necessary to make data files available for each &lt;code&gt;DATA{}&lt;/code&gt; reference previously evaluated by other functions provided by this module. Data files may be fetched from one of the URL templates specified in the &lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; variable, or may be found locally in one of the paths specified in the &lt;code&gt;ExternalData_OBJECT_STORES&lt;/code&gt; variable.</source>
          <target state="translated">必要に応じてターゲットにカスタムコマンドを作成し、このモジュールが提供する他の関数によって以前に評価された各 &lt;code&gt;DATA{}&lt;/code&gt; 参照でデータファイルを使用できるようにします。データファイルは、URLテンプレートのいずれかで指定されたから取り込まれる場合があり &lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; の変数、またはで指定されたパスのいずれかでローカルに見つけることができる &lt;code&gt;ExternalData_OBJECT_STORES&lt;/code&gt; の変数。</target>
        </trans-unit>
        <trans-unit id="9a0c7e6681f032d6ae40114392ccd54a3d21fe22" translate="yes" xml:space="preserve">
          <source>It defines:</source>
          <target state="translated">それは定義しています。</target>
        </trans-unit>
        <trans-unit id="00833fb282230efc9619c0e63d02597a2960c061" translate="yes" xml:space="preserve">
          <source>It generates in &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; definitions of the following macros:</source>
          <target state="translated">次のマクロの &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 定義を生成します。</target>
        </trans-unit>
        <trans-unit id="3facecfa56a1cc45985dd67ebc07c173d090f4e1" translate="yes" xml:space="preserve">
          <source>It is also possible to define a &lt;code&gt;GLOBAL&lt;/code&gt;&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-10-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target which is accessible globally in the buildsystem.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-10-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;グローバルにアクセス可能な &lt;code&gt;GLOBAL&lt;/code&gt; IMPORTEDターゲットを定義することもできます。</target>
        </trans-unit>
        <trans-unit id="f61e27ce463c04079ae5721cc47220d686ab2807" translate="yes" xml:space="preserve">
          <source>It is also used as the default value for the &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; target property of executables.</source>
          <target state="translated">また、実行可能ファイルの&lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt; &lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt; &lt;/a&gt;ターゲットプロパティのデフォルト値としても使用されます。</target>
        </trans-unit>
        <trans-unit id="2e537d932e0bcacf8a085d48e9c860b9972b2763" translate="yes" xml:space="preserve">
          <source>It is an error to not put a closing brace at the end of a macro name. For example, &lt;code&gt;${sourceDir&lt;/code&gt; is invalid. A dollar sign (&lt;code&gt;$&lt;/code&gt;) followed by anything other than a left curly brace (&lt;code&gt;{&lt;/code&gt;) with a possible namespace is interpreted as a literal dollar sign.</source>
          <target state="translated">マクロ名の末尾に閉じ括弧を付けないのはエラーです。たとえば、 &lt;code&gt;${sourceDir&lt;/code&gt; は無効です。ドル記号（ &lt;code&gt;$&lt;/code&gt; ）の後に名前空間の可能性がある左中括弧（ &lt;code&gt;{&lt;/code&gt; ）以外のものが続く場合は、文字通りのドル記号として解釈されます。</target>
        </trans-unit>
        <trans-unit id="ed100d5a0d2b0f442750f96c3b4307d5d9521983" translate="yes" xml:space="preserve">
          <source>It is designed to be used in a &lt;a href=&quot;../manual/cmake-packages.7#config-file-packages&quot;&gt;Package Configuration File&lt;/a&gt; (&lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt;). &lt;code&gt;find_dependency&lt;/code&gt; forwards the correct parameters for &lt;code&gt;QUIET&lt;/code&gt; and &lt;code&gt;REQUIRED&lt;/code&gt; which were passed to the original &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; call. Any additional arguments specified are forwarded to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-packages.7#config-file-packages&quot;&gt;パッケージ構成ファイル&lt;/a&gt;（ &lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt; ）で使用するように設計されています。 &lt;code&gt;find_dependency&lt;/code&gt; は、元の&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;呼び出しに渡された &lt;code&gt;QUIET&lt;/code&gt; および &lt;code&gt;REQUIRED&lt;/code&gt; の正しいパラメーターを転送します。指定された追加の引数は、&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; に&lt;/a&gt;転送されます。</target>
        </trans-unit>
        <trans-unit id="7a44d71303ec18ea8d05dd3817e65039a5bd6c51" translate="yes" xml:space="preserve">
          <source>It is important to note that the imported targets behave differently than variables created by this module: multiple calls to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package(Boost)&lt;/code&gt;&lt;/a&gt; in the same directory or sub-directories with different options (e.g. static or shared) will not override the values of the targets created by the first call.</source>
          <target state="translated">インポートされたターゲットは、このモジュールによって作成された変数とは異なる動作をすることに注意することが重要です。同じディレクトリまたは異なるオプション（たとえば、静的または共有）でサブディレクトリにある&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package(Boost)&lt;/code&gt; &lt;/a&gt;を複数回呼び出しても、ターゲットの値は上書きされません。最初の呼び出しで作成されます。</target>
        </trans-unit>
        <trans-unit id="8582d72a73c33920546dcd125733b9840186c3c3" translate="yes" xml:space="preserve">
          <source>It is initialized by &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;, but may be edited in a &lt;code&gt;CTestCustom&lt;/code&gt; file. See &lt;a href=&quot;../command/ctest_read_custom_files#command:ctest_read_custom_files&quot; id=&quot;index-0-command:ctest_read_custom_files&quot;&gt;&lt;code&gt;ctest_read_custom_files()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt;によって初期化されますが、 &lt;code&gt;CTestCustom&lt;/code&gt; ファイルで編集できます。&lt;a href=&quot;../command/ctest_read_custom_files#command:ctest_read_custom_files&quot; id=&quot;index-0-command:ctest_read_custom_files&quot;&gt; &lt;code&gt;ctest_read_custom_files()&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="eab1e72abeb377c054a6d0a92cd74a82859c897b" translate="yes" xml:space="preserve">
          <source>It is no longer necessary to use this module or call &lt;code&gt;find_package(CUDA)&lt;/code&gt; for compiling CUDA code. Instead, list &lt;code&gt;CUDA&lt;/code&gt; among the languages named in the top-level call to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, or call the &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; command with &lt;code&gt;CUDA&lt;/code&gt;. Then one can add CUDA (&lt;code&gt;.cu&lt;/code&gt;) sources to programs directly in calls to &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールを使用したり、CUDAコードをコンパイルするために &lt;code&gt;find_package(CUDA)&lt;/code&gt; を呼び出す必要はなくなりました。代わりに、リストの &lt;code&gt;CUDA&lt;/code&gt; にトップレベルのコールで指定された言語の中で&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;コマンド、またはお電話&lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; &lt;/a&gt;を使用してコマンドを &lt;code&gt;CUDA&lt;/code&gt; 。次に、&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; の&lt;/a&gt;呼び出しで、CUDA（ &lt;code&gt;.cu&lt;/code&gt; ）ソースをプログラムに直接追加できます。</target>
        </trans-unit>
        <trans-unit id="c7f9bfe26c754a01e84c38006481e9df97af47a8" translate="yes" xml:space="preserve">
          <source>It is no longer necessary to use this module or call &lt;code&gt;find_package(CUDA)&lt;/code&gt;. Instead, list &lt;code&gt;CUDA&lt;/code&gt; among the languages named in the top-level call to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, or call the &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; command with &lt;code&gt;CUDA&lt;/code&gt;. Then one can add CUDA (&lt;code&gt;.cu&lt;/code&gt;) sources to programs directly in calls to &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールを使用したり、 &lt;code&gt;find_package(CUDA)&lt;/code&gt; を呼び出したりする必要はありません。代わりに、リストの &lt;code&gt;CUDA&lt;/code&gt; にトップレベルのコールで指定された言語の中で&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;コマンド、またはお電話&lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; &lt;/a&gt;を使用してコマンドを &lt;code&gt;CUDA&lt;/code&gt; 。次に、&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; の&lt;/a&gt;呼び出しで、CUDA（ &lt;code&gt;.cu&lt;/code&gt; ）ソースをプログラムに直接追加できます。</target>
        </trans-unit>
        <trans-unit id="02d8908871b9ad057bd8f1c249def26296666e73" translate="yes" xml:space="preserve">
          <source>It is not allowed to create an &lt;code&gt;ALIAS&lt;/code&gt; target with the same name as an another target.</source>
          <target state="translated">別のターゲットと同じ名前の &lt;code&gt;ALIAS&lt;/code&gt; ターゲットを作成することは許可されていません。</target>
        </trans-unit>
        <trans-unit id="0ab850b9d62b1442d2c89db7a8be31d527ba579f" translate="yes" xml:space="preserve">
          <source>It is possible for the cache entry to exist prior to the call but have no type set if it was created on the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; command line by a user through the &lt;code&gt;-D&amp;lt;var&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; option without specifying a type. In this case the &lt;code&gt;set&lt;/code&gt; command will add the type. Furthermore, if the &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; is &lt;code&gt;PATH&lt;/code&gt; or &lt;code&gt;FILEPATH&lt;/code&gt; and the &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; provided on the command line is a relative path, then the &lt;code&gt;set&lt;/code&gt; command will treat the path as relative to the current working directory and convert it to an absolute path.</source>
          <target state="translated">タイプを指定せずに &lt;code&gt;-D&amp;lt;var&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; オプションを介してユーザーが&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt;コマンドラインで作成した場合、呼び出しの前にキャッシュエントリが存在する可能性がありますが、タイプが設定されていません。この場合、 &lt;code&gt;set&lt;/code&gt; コマンドはタイプを追加します。さらに、 &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; が &lt;code&gt;PATH&lt;/code&gt; または &lt;code&gt;FILEPATH&lt;/code&gt; であり、コマンドラインで指定された &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; が相対パスである場合、 &lt;code&gt;set&lt;/code&gt; コマンドはパスを現在の作業ディレクトリに対する相対パスとして扱い、絶対パスに変換します。</target>
        </trans-unit>
        <trans-unit id="99bc959bced8be60dc336dd2e09f758d9c63056b" translate="yes" xml:space="preserve">
          <source>It is possible to create a suitable package configuration file and package version file to define a package for the build tree which may be used without installation. Consumers of the build tree can simply ensure that the &lt;a href=&quot;../../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; contains the build directory, or set the &lt;code&gt;MathFunctions_DIR&lt;/code&gt; to &lt;code&gt;&amp;lt;build_dir&amp;gt;/MathFunctions&lt;/code&gt; in the cache.</source>
          <target state="translated">適切なパッケージ構成ファイルとパッケージバージョンファイルを作成して、インストールなしで使用できるビルドツリーのパッケージを定義することができます。ビルドツリーの利用者は、&lt;a href=&quot;../../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;にビルドディレクトリが含まれていることを確認するか、キャッシュ内の &lt;code&gt;MathFunctions_DIR&lt;/code&gt; を &lt;code&gt;&amp;lt;build_dir&amp;gt;/MathFunctions&lt;/code&gt; に設定するだけです。</target>
        </trans-unit>
        <trans-unit id="19f15215fb4d40bc6420414ce06e6cb10e611c10" translate="yes" xml:space="preserve">
          <source>It is quite common practice in CMake for modules to use some additional files, such as templates to be copied in after substituting CMake variables. In such cases, a function needs to know where to locate those files in a way that doesn&amp;rsquo;t depend on where the function is called. Without &lt;code&gt;CMAKE_CURRENT_FUNCTION_LIST_DIR&lt;/code&gt;, the code to do that would typically use the following pattern:</source>
          <target state="translated">モジュールがCMake変数を置き換えた後にコピーされるテンプレートなど、いくつかの追加ファイルを使用することは、CMakeでは非常に一般的な方法です。このような場合、関数は、関数が呼び出される場所に依存しない方法で、これらのファイルの場所を知る必要があります。 &lt;code&gt;CMAKE_CURRENT_FUNCTION_LIST_DIR&lt;/code&gt; がない場合、これを行うコードは通常、次のパターンを使用します。</target>
        </trans-unit>
        <trans-unit id="9e10f2bd69f9ceeb2fac021dae308fc278bd8f5a" translate="yes" xml:space="preserve">
          <source>It is recommended to build in a separate directory to the source because that keeps the source directory pristine, allows for building a single source with multiple toolchains, and allows easy clearing of build artifacts by simply deleting the build directory.</source>
          <target state="translated">ソースディレクトリを原始的な状態に保ち、複数のツールチェーンで単一のソースをビルドすることができ、ビルドディレクトリを削除するだけでビルドの成果物を簡単にクリアできるため、ソースとは別のディレクトリでビルドすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="fa759d68eccaef87507d885f78e836cc680e7bf0" translate="yes" xml:space="preserve">
          <source>It is required for building the same target with multiple SDKs. A common use case is the parallel use of &lt;code&gt;iphoneos&lt;/code&gt; and &lt;code&gt;iphonesimulator&lt;/code&gt; SDKs.</source>
          <target state="translated">複数のSDKで同じターゲットを構築するために必要です。一般的な使用例は、 &lt;code&gt;iphoneos&lt;/code&gt; と &lt;code&gt;iphonesimulator&lt;/code&gt; SDKの並行使用です。</target>
        </trans-unit>
        <trans-unit id="d45c896b45d69dccaa9f17baef72b5493f57b344" translate="yes" xml:space="preserve">
          <source>It is tempting to use this command to avoid writing the list of source files for a library or executable target. While this seems to work, there is no way for CMake to generate a build system that knows when a new source file has been added. Normally the generated build system knows when it needs to rerun CMake because the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file is modified to add a new source. When the source is just added to the directory without modifying this file, one would have to manually rerun CMake to generate a build system incorporating the new file.</source>
          <target state="translated">ライブラリまたは実行可能ターゲットのソースファイルのリストを書き込まないようにするために、このコマンドを使用するのは魅力的です。これは機能しているように見えますが、CMakeが新しいソースファイルがいつ追加されたかを認識するビルドシステムを生成する方法はありません。通常、生成されたビルドシステムは、 &lt;code&gt;CMakeLists.txt&lt;/code&gt; ファイルが新しいソースを追加するように変更されているため、CMakeを再実行する必要があるタイミングを認識しています。このファイルを変更せずにソースをディレクトリに追加した場合、CMakeを手動で再実行して、新しいファイルを組み込んだビルドシステムを生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="140f8e24b86c41b95078fcfa1c99dfbbe372bee4" translate="yes" xml:space="preserve">
          <source>It makes no sense to use this module when &lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-0-policy:CMP0069&quot;&gt;&lt;code&gt;CMP0069&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;OLD&lt;/code&gt; so module will return error in this case. See policy &lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-1-policy:CMP0069&quot;&gt;&lt;code&gt;CMP0069&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-0-policy:CMP0069&quot;&gt; &lt;code&gt;CMP0069&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;OLD&lt;/code&gt; に設定されている場合、このモジュールを使用しても意味がありません。この場合、モジュールはエラーを返します。詳細については、ポリシー&lt;a href=&quot;../policy/cmp0069#policy:CMP0069&quot; id=&quot;index-1-policy:CMP0069&quot;&gt; &lt;code&gt;CMP0069&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7fc53c18edd98c4db973762e1a962adba056dc6c" translate="yes" xml:space="preserve">
          <source>It makes no sense to use this module when &lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-0-policy:CMP0083&quot;&gt;&lt;code&gt;CMP0083&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;OLD&lt;/code&gt;, so the command will return an error in this case. See policy &lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-1-policy:CMP0083&quot;&gt;&lt;code&gt;CMP0083&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-0-policy:CMP0083&quot;&gt; &lt;code&gt;CMP0083&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;OLD&lt;/code&gt; に設定されている場合、このモジュールを使用しても意味がないため、この場合、コマンドはエラーを返します。詳細については、ポリシー&lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-1-policy:CMP0083&quot;&gt; &lt;code&gt;CMP0083&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d804edf5700e48bb6d0d12d0a06c6855d2cfc829" translate="yes" xml:space="preserve">
          <source>It may also provide a CMake package configuration file:</source>
          <target state="translated">また、CMake パッケージの設定ファイルを提供する場合もあります。</target>
        </trans-unit>
        <trans-unit id="a248b134ddfc896083ee02843eb91b660d1d14b2" translate="yes" xml:space="preserve">
          <source>It may specify usage requirements such as &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-8-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-3-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-3-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt;&lt;code&gt;INTERFACE_SOURCES&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../prop_tgt/interface_position_independent_code#prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot; id=&quot;index-3-prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt;. Only the &lt;code&gt;INTERFACE&lt;/code&gt; modes of the &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-4-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-3-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-3-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-9-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; commands may be used with &lt;code&gt;INTERFACE&lt;/code&gt; libraries.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-8-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-3-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-3-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt; &lt;code&gt;INTERFACE_SOURCES&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../prop_tgt/interface_position_independent_code#prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot; id=&quot;index-3-prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt;などの使用要件を指定できます。唯一の &lt;code&gt;INTERFACE&lt;/code&gt; のモード&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-4-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-3-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-3-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-9-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt;コマンドを用いて使用することができる &lt;code&gt;INTERFACE&lt;/code&gt; ライブラリ。</target>
        </trans-unit>
        <trans-unit id="6e95cd97050f30468877800daaa7c94d730c01f3" translate="yes" xml:space="preserve">
          <source>It might be necessary to set &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; manually on certain platforms, or to use a CUDA runtime not installed in the default location. In newer versions of the toolkit the CUDA library is included with the graphics driver &amp;ndash; be sure that the driver version matches what is needed by the CUDA runtime version.</source>
          <target state="translated">特定のプラットフォームでは、 &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; を手動で設定するか、デフォルトの場所にインストールされていないCUDAランタイムを使用する必要がある場合があります。ツールキットの新しいバージョンでは、CUDAライブラリがグラフィックスドライバーに含まれています。ドライバーのバージョンがCUDAランタイムバージョンに必要なバージョンと一致していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="131215078eb93a6beaa97e51326e25109b378dc3" translate="yes" xml:space="preserve">
          <source>It passes its arguments through &lt;code&gt;ExternalData_Expand_Arguments&lt;/code&gt; and then invokes the &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-1-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; command using the results.</source>
          <target state="translated">&lt;code&gt;ExternalData_Expand_Arguments&lt;/code&gt; を介して引数を渡し、その結果を使用して&lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-1-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt;コマンドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="46d87800053ac2805e2891d834ab3ef2c398471c" translate="yes" xml:space="preserve">
          <source>It provides the function squish_add_test() for adding a squish test to cmake using Squish &amp;gt;= 4.x:</source>
          <target state="translated">これは、Squish&amp;gt; = 4.xを使用してsquishテストをcmakeに追加するための関数squish_add_test（）を提供します。</target>
        </trans-unit>
        <trans-unit id="230f709848f654ce14f6b69a491dcb43a43111f9" translate="yes" xml:space="preserve">
          <source>It provides the function squish_v4_add_test() for adding a squish test to cmake using Squish 4.x:</source>
          <target state="translated">Squish 4.xを使ってcmakeにスクイッシュテストを追加するための関数squish_v4_add_test()を提供しています。</target>
        </trans-unit>
        <trans-unit id="07fc27ab7696778a7f29619c34de1f0889b7341b" translate="yes" xml:space="preserve">
          <source>It replaces each &lt;code&gt;DATA{}&lt;/code&gt; reference in an argument with the full path of a real data file on disk that will exist after the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; builds.</source>
          <target state="translated">引数内の各 &lt;code&gt;DATA{}&lt;/code&gt; 参照を、 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; のビルド後に存在するディスク上の実際のデータファイルのフルパスで置き換えます。</target>
        </trans-unit>
        <trans-unit id="18a34744fe75278943e262a733b2f5d2725e4a4b" translate="yes" xml:space="preserve">
          <source>It searches a package using &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; and prints the resulting flags to stdout. This can be used instead of pkg-config to find installed libraries in plain Makefile-based projects or in autoconf-based projects (via &lt;code&gt;share/aclocal/cmake.m4&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt;を使用してパッケージを検索し、結果のフラグをstdoutに出力します。これは、pkg-configの代わりに使用して、プレーンなMakefileベースのプロジェクトまたはautoconfベースのプロジェクト（ &lt;code&gt;share/aclocal/cmake.m4&lt;/code&gt; を介して）にインストールされているライブラリを検索できます。</target>
        </trans-unit>
        <trans-unit id="539973ffd5ddd232e953d3fb1fd196169e0b538f" translate="yes" xml:space="preserve">
          <source>It sets &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; to the given compiler and the cmake internal variable &lt;code&gt;CMAKE_CXX_COMPILER_ID&lt;/code&gt; to the given compiler-id. It also bypasses the check for working compiler and basic compiler information tests.</source>
          <target state="translated">&lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; を指定のコンパイラに設定し、cmake内部変数 &lt;code&gt;CMAKE_CXX_COMPILER_ID&lt;/code&gt; を指定のコンパイラIDに設定します。また、動作中のコンパイラと基本的なコンパイラ情報テストのチェックもバイパスします。</target>
        </trans-unit>
        <trans-unit id="898027f4b3b38cafac348bbcfc4e0765bc29fb44" translate="yes" xml:space="preserve">
          <source>It sets &lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt; to the given compiler and the cmake internal variable &lt;code&gt;CMAKE_C_COMPILER_ID&lt;/code&gt; to the given compiler-id. It also bypasses the check for working compiler and basic compiler information tests.</source>
          <target state="translated">&lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt; を指定されたコンパイラーに設定し、cmake内部変数 &lt;code&gt;CMAKE_C_COMPILER_ID&lt;/code&gt; を指定されたコンパイラーIDに設定します。また、動作中のコンパイラと基本的なコンパイラ情報テストのチェックもバイパスします。</target>
        </trans-unit>
        <trans-unit id="f32c02ef20d3c51d0d4963ece4c1f452b2502478" translate="yes" xml:space="preserve">
          <source>It sets &lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt; to the given compiler and the cmake internal variable &lt;code&gt;CMAKE_Fortran_COMPILER_ID&lt;/code&gt; to the given compiler-id. It also bypasses the check for working compiler and basic compiler information tests.</source>
          <target state="translated">&lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt; を指定されたコンパイラーに設定し、cmake内部変数 &lt;code&gt;CMAKE_Fortran_COMPILER_ID&lt;/code&gt; を指定されたコンパイラーIDに設定します。また、動作中のコンパイラと基本的なコンパイラ情報テストのチェックもバイパスします。</target>
        </trans-unit>
        <trans-unit id="e5537b0969ab25848ac7ea3420bbfe5f95c6ba35" translate="yes" xml:space="preserve">
          <source>It sets the given &lt;code&gt;&amp;lt;cachevariable&amp;gt;&lt;/code&gt; to a command-line string as above but without the &lt;code&gt;--target&lt;/code&gt; option. The &lt;code&gt;&amp;lt;makecommand&amp;gt;&lt;/code&gt; is ignored but should be the full path to devenv, nmake, make or one of the end user build tools for legacy invocations.</source>
          <target state="translated">これは、与えられたセット &lt;code&gt;&amp;lt;cachevariable&amp;gt;&lt;/code&gt; 上記のようなもので、なしのコマンドライン文字列に &lt;code&gt;--target&lt;/code&gt; オプション。 &lt;code&gt;&amp;lt;makecommand&amp;gt;&lt;/code&gt; 無視されますが、devenvを、NMAKE、メイクやレガシー呼び出しのためのエンドユーザー・ビルド・ツールの1への完全パスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="53738665baa8c1906753f38564462b3d686b704c" translate="yes" xml:space="preserve">
          <source>It should also be noted that each build step is created via a call to &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-0-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;. See that command&amp;rsquo;s documentation for the automatic substitutions that are supported for some options.</source>
          <target state="translated">各ビルドステップは、&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-0-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; の&lt;/a&gt;呼び出しを介して作成されることにも注意してください。一部のオプションでサポートされている自動置換については、そのコマンドのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="c04322397828e2d7366a72076e53452b2be788e0" translate="yes" xml:space="preserve">
          <source>It should also be noted that each build step is created via a call to &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-2-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;. See that command&amp;rsquo;s documentation for the automatic substitutions that are supported for some options.</source>
          <target state="translated">また、各ビルドステップは&lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-2-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; の&lt;/a&gt;呼び出しを介して作成されることにも注意してください。一部のオプションでサポートされている自動置換については、そのコマンドのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2f9523253343e8f7e896301d6304293061bb8661" translate="yes" xml:space="preserve">
          <source>It should be noted that the &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-1-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt;&lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; properties do not affect the file names or version-related symlinks that CMake generates for the library. The &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; target properties still control the file and symlink names. The &lt;code&gt;install_name&lt;/code&gt; is also still controlled by &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; プロパティとMACHO_COMPATIBILITY_VERSIONプロパティは、CMakeがライブラリ用に生成するファイル名やバージョン関連のシンボリックリンクには影響しないことに注意して&lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-1-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt; &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; の&lt;/a&gt;ターゲットプロパティは、まだファイルやシンボリックリンクの名前を制御します。 &lt;code&gt;install_name&lt;/code&gt; はまた、まだによって制御されている&lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ccad6183876e21c33ad3c27a0d504aa8da063c2" translate="yes" xml:space="preserve">
          <source>It should be noted that the &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; and &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-1-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt;&lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt;&lt;/a&gt; properties do not affect the file names or version-related symlinks that CMake generates for the library. The &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; target properties still control the file and symlink names. The &lt;code&gt;install_name&lt;/code&gt; is also still controlled by &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-1-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt; &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; &lt;/a&gt;プロパティとMACHO_COMPATIBILITY_VERSIONプロパティは、CMakeがライブラリ用に生成するファイル名やバージョン関連のシンボリックリンクには影響しないことに注意して &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; 。&lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; の&lt;/a&gt;ターゲットプロパティは、まだファイルやシンボリックリンクの名前を制御します。 &lt;code&gt;install_name&lt;/code&gt; はまた、まだによって制御されている&lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-1-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24adba4122cc7565787fe3aca68e595840687414" translate="yes" xml:space="preserve">
          <source>It tests whether a simple test executable using Fortran and C (and C++ when the CXX option is given) compiles and links successfully. The result is stored in the cache entry &lt;code&gt;FortranCInterface_VERIFIED_C&lt;/code&gt; (or &lt;code&gt;FortranCInterface_VERIFIED_CXX&lt;/code&gt; if &lt;code&gt;CXX&lt;/code&gt; is given) as a boolean. If the check fails and &lt;code&gt;QUIET&lt;/code&gt; is not given the function terminates with a fatal error message describing the problem. The purpose of this check is to stop a build early for incompatible compiler combinations. The test is built in the &lt;code&gt;Release&lt;/code&gt; configuration.</source>
          <target state="translated">FortranとC（およびCXXオプションが指定されている場合はC ++）を使用する単純なテスト実行可能ファイルが正常にコンパイルおよびリンクされるかどうかをテストします。結果はキャッシュエントリに格納されている &lt;code&gt;FortranCInterface_VERIFIED_C&lt;/code&gt; （又は &lt;code&gt;FortranCInterface_VERIFIED_CXX&lt;/code&gt; 場合 &lt;code&gt;CXX&lt;/code&gt; が booleanとして与えられます）。チェックが失敗し、 &lt;code&gt;QUIET&lt;/code&gt; が指定されていない場合、関数は終了し、問題を説明する致命的なエラーメッセージが表示されます。このチェックの目的は、互換性のないコンパイラーの組み合わせのビルドを早期に停止することです。テストは &lt;code&gt;Release&lt;/code&gt; 構成に組み込まれています。</target>
        </trans-unit>
        <trans-unit id="85f95fc1c4b1611a1cdd3bbf0047df01fbb751cd" translate="yes" xml:space="preserve">
          <source>It uses various tools to obtain the list of required shared library files:</source>
          <target state="translated">必要な共有ライブラリファイルの一覧を取得するための各種ツールを使用します。</target>
        </trans-unit>
        <trans-unit id="540b6bc88ff3316875b57f58e3a610278e37ec1e" translate="yes" xml:space="preserve">
          <source>It will contain &amp;ldquo;supportedProtocolVersions&amp;rdquo; with an array of server protocol versions supported by the cmake server. These are JSON objects with &amp;ldquo;major&amp;rdquo; and &amp;ldquo;minor&amp;rdquo; keys containing non-negative integer values. Some versions may be marked as experimental. These will contain the &amp;ldquo;isExperimental&amp;rdquo; key set to true. Enabling these requires a special command line argument when starting the cmake server mode.</source>
          <target state="translated">cmakeサーバーがサポートするサーバープロトコルバージョンの配列を含む「supportedProtocolVersions」が含まれます。これらは、負ではない整数値を含む「メジャー」および「マイナー」キーを持つJSONオブジェクトです。一部のバージョンは試験段階としてマークされている場合があります。これらには、trueに設定された「isExperimental」キーが含まれます。これらを有効にするには、cmakeサーバーモードを起動するときに特別なコマンドライン引数が必要です。</target>
        </trans-unit>
        <trans-unit id="49c5ecd682d4df6243e2acda8ec2f3f0693d778c" translate="yes" xml:space="preserve">
          <source>It will list the complete project structure as it is known to cmake.</source>
          <target state="translated">cmakeで知られているように、完全なプロジェクト構造をリストアップします。</target>
        </trans-unit>
        <trans-unit id="e1a8db9e81fa3f8c683b8f9ed9d330ad0f2ecde2" translate="yes" xml:space="preserve">
          <source>It will list the complete project test structure as it is known to cmake.</source>
          <target state="translated">cmakeで知られている完全なプロジェクトのテスト構造をリストアップします。</target>
        </trans-unit>
        <trans-unit id="6808c8204d577fa2ece3c38b251984f29a930279" translate="yes" xml:space="preserve">
          <source>It would be possible to write a abstraction &lt;code&gt;interface.h&lt;/code&gt; header containing something like:</source>
          <target state="translated">次のような内容を含む抽象化 &lt;code&gt;interface.h&lt;/code&gt; ヘッダーを書くことは可能です。</target>
        </trans-unit>
        <trans-unit id="5964f43c9a8c6d612958a653b7feb7555a2c779e" translate="yes" xml:space="preserve">
          <source>Items containing &lt;code&gt;::&lt;/code&gt;, such as &lt;code&gt;Foo::Bar&lt;/code&gt;, are assumed to be &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS&lt;/a&gt; library target names and will cause an error if no such target exists. See policy &lt;a href=&quot;../policy/cmp0028#policy:CMP0028&quot; id=&quot;index-0-policy:CMP0028&quot;&gt;&lt;code&gt;CMP0028&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Foo::Bar&lt;/code&gt; などの &lt;code&gt;::&lt;/code&gt; を含むアイテムは、&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED&lt;/a&gt;または&lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS&lt;/a&gt;ライブラリのターゲット名と見なされ、そのようなターゲットが存在しない場合はエラーが発生します。ポリシー&lt;a href=&quot;../policy/cmp0028#policy:CMP0028&quot; id=&quot;index-0-policy:CMP0028&quot;&gt; &lt;code&gt;CMP0028&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b863fee645bffa04a955e22068f5052f7c8757fb" translate="yes" xml:space="preserve">
          <source>JNI enables Java code running in a Java Virtual Machine (JVM) to call and be called by native applications and libraries written in other languages such as C, C++.</source>
          <target state="translated">JNIは、Java仮想マシン(JVM)で実行されているJavaコードが、CやC++などの他の言語で書かれたネイティブアプリケーションやライブラリを呼び出したり、呼び出したりできるようにします。</target>
        </trans-unit>
        <trans-unit id="0cb5f1c321d5fcbed8e87d48a0ec750a1556f265" translate="yes" xml:space="preserve">
          <source>JOB_POOLS</source>
          <target state="translated">JOB_POOLS</target>
        </trans-unit>
        <trans-unit id="c715d1fef50af3b2f4b2d6bfcc05ac7e0727b71f" translate="yes" xml:space="preserve">
          <source>JOB_POOL_COMPILE</source>
          <target state="translated">JOB_POOL_COMPILE</target>
        </trans-unit>
        <trans-unit id="a96b3b402f9a3cb22873cb000e7be4f77fc3bc6e" translate="yes" xml:space="preserve">
          <source>JOB_POOL_LINK</source>
          <target state="translated">JOB_POOL_LINK</target>
        </trans-unit>
        <trans-unit id="3919978d27d1d3d6911b704b0fd3db02845a7d9c" translate="yes" xml:space="preserve">
          <source>JOB_POOL_PRECOMPILE_HEADER</source>
          <target state="translated">JOB_POOL_PRECOMPILE_HEADER</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="f3a712a9c3a32dd65f4a99d1dec5512045d746da" translate="yes" xml:space="preserve">
          <source>JSON object representing backtrace information with the following members:</source>
          <target state="translated">バックトレース情報を表すJSONオブジェクトで、以下のメンバを持ちます。</target>
        </trans-unit>
        <trans-unit id="945de2ab564ff9ae4f94af16837480cf4bc991b9" translate="yes" xml:space="preserve">
          <source>JSON trace format:</source>
          <target state="translated">JSONトレースフォーマット。</target>
        </trans-unit>
        <trans-unit id="a26e63e0dd630bf0aa29409ebb2007f8ed0989a9" translate="yes" xml:space="preserve">
          <source>Javadoc</source>
          <target state="translated">Javadoc</target>
        </trans-unit>
        <trans-unit id="32f36b7a72227d41f5dc6c620090f2d8c323b7d9" translate="yes" xml:space="preserve">
          <source>Join all the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments together using the &lt;code&gt;&amp;lt;glue&amp;gt;&lt;/code&gt; string and store the result in the named &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;glue&amp;gt;&lt;/code&gt; 文字列を使用してすべての &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 引数を結合し、結果を名前付き &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; に格納します。</target>
        </trans-unit>
        <trans-unit id="bf531baac89a93fff2e8c7745df5e283ba2e5568" translate="yes" xml:space="preserve">
          <source>Join all the input arguments together using the glue string and store the result in the named output variable.</source>
          <target state="translated">すべての入力引数をグルー文字列を使って結合し、その結果を名前付きの出力変数に格納します。</target>
        </trans-unit>
        <trans-unit id="4bf6e958650c635fec6eac782ac58dc98db5630f" translate="yes" xml:space="preserve">
          <source>Joins the list with the content of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; の内容でリストを結合します。</target>
        </trans-unit>
        <trans-unit id="010b01fc24aad4280cc924ea685fd017cd4e3f0e" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_DCOP_SKELS(SRCS_VAR header1.h &amp;hellip; headerN.h )</source>
          <target state="translated">KDE3_ADD_DCOP_SKELS（SRCS_VAR header1.h&amp;hellip;headerN.h）</target>
        </trans-unit>
        <trans-unit id="72fb15004d0272e20c14bcadc854b385469ae178" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_DCOP_STUBS(SRCS_VAR header1.h &amp;hellip; headerN.h )</source>
          <target state="translated">KDE3_ADD_DCOP_STUBS（SRCS_VAR header1.h&amp;hellip;headerN.h）</target>
        </trans-unit>
        <trans-unit id="c3221ae61631e028cae95142fd23dcb1bc23dde8" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_EXECUTABLE(name file1 &amp;hellip; fileN )</source>
          <target state="translated">KDE3_ADD_EXECUTABLE（名前file1&amp;hellip;fileN）</target>
        </trans-unit>
        <trans-unit id="858063d416a37becceacbb209596da2da7b93096" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_KCFG_FILES(SRCS_VAR file1.kcfgc &amp;hellip; fileN.kcfgc )</source>
          <target state="translated">KDE3_ADD_KCFG_FILES（SRCS_VAR file1.kcfgc&amp;hellip;fileN.kcfgc）</target>
        </trans-unit>
        <trans-unit id="2a933d48ae1c94885e1ceb61e81d0b29feadc031" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_KDEINIT_EXECUTABLE(name file1 &amp;hellip; fileN )</source>
          <target state="translated">KDE3_ADD_KDEINIT_EXECUTABLE（名前file1&amp;hellip;fileN）</target>
        </trans-unit>
        <trans-unit id="ce4727a4e96b751d28ef2aa496ba715b86460449" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_KPART(name [WITH_PREFIX] file1 &amp;hellip; fileN )</source>
          <target state="translated">KDE3_ADD_KPART（name [WITH_PREFIX] file1&amp;hellip;fileN）</target>
        </trans-unit>
        <trans-unit id="550583275b9ab6beb79fe9e47ae47f40826ac8c7" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_MOC_FILES(SRCS_VAR file1 &amp;hellip; fileN )</source>
          <target state="translated">KDE3_ADD_MOC_FILES（SRCS_VAR file1&amp;hellip;fileN）</target>
        </trans-unit>
        <trans-unit id="48471772052fd12246be3829e2cc66f71685bc09" translate="yes" xml:space="preserve">
          <source>KDE3_ADD_UI_FILES(SRCS_VAR file1.ui &amp;hellip; fileN.ui )</source>
          <target state="translated">KDE3_ADD_UI_FILES（SRCS_VAR file1.ui&amp;hellip;fileN.ui）</target>
        </trans-unit>
        <trans-unit id="133db4c6a30c7aae981caafbffb3d63a15d5c351" translate="yes" xml:space="preserve">
          <source>KDE3_AUTOMOC(file1 &amp;hellip; fileN)</source>
          <target state="translated">KDE3_AUTOMOC（ファイル1&amp;hellip;ファイルN）</target>
        </trans-unit>
        <trans-unit id="ba552bb8a0d3aaabb80c675b000843cefabce4dd" translate="yes" xml:space="preserve">
          <source>KDE3_INSTALL_LIBTOOL_FILE(target)</source>
          <target state="translated">KDE3_INSTALL_LIBTOOL_FILE(target)</target>
        </trans-unit>
        <trans-unit id="a5c84895227d24aa02679556b154aa9aff3585df" translate="yes" xml:space="preserve">
          <source>KEEP_EXTENSION</source>
          <target state="translated">KEEP_EXTENSION</target>
        </trans-unit>
        <trans-unit id="e8231b3cdb17e3f53372033d1d322ce64a775b92" translate="yes" xml:space="preserve">
          <source>Kate</source>
          <target state="translated">Kate</target>
        </trans-unit>
        <trans-unit id="8d68807a0b950fdd8e441c212de1dc02ad69305a" translate="yes" xml:space="preserve">
          <source>Keccak SHA-3.</source>
          <target state="translated">Keccak SHA-3。</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="472d3e712d9b9e91c93a4bc69741038feda86527" translate="yes" xml:space="preserve">
          <source>Key points from this example:</source>
          <target state="translated">この事例からのポイント</target>
        </trans-unit>
        <trans-unit id="96ae20164e98062b734fb48fccbaf90b8749a532" translate="yes" xml:space="preserve">
          <source>Keys are a single letter corresponding to a CMake cache variable type:</source>
          <target state="translated">キーは、CMake キャッシュ変数の型に対応する一文字です。</target>
        </trans-unit>
        <trans-unit id="1db613a313c68f1367b94928244a58851cd00717" translate="yes" xml:space="preserve">
          <source>Keywords terminate lists of values, e.g. if directly after a &lt;code&gt;one_value_keyword&lt;/code&gt; another recognized keyword follows, this is interpreted as the beginning of the new option. E.g. &lt;code&gt;my_install(TARGETS foo DESTINATION OPTIONAL)&lt;/code&gt; would result in &lt;code&gt;MY_INSTALL_DESTINATION&lt;/code&gt; set to &lt;code&gt;&quot;OPTIONAL&quot;&lt;/code&gt;, but as &lt;code&gt;OPTIONAL&lt;/code&gt; is a keyword itself &lt;code&gt;MY_INSTALL_DESTINATION&lt;/code&gt; will be empty (but added to &lt;code&gt;MY_INSTALL_KEYWORDS_MISSING_VALUES&lt;/code&gt;) and &lt;code&gt;MY_INSTALL_OPTIONAL&lt;/code&gt; will therefore be set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">キーワードは値のリストを終了します。たとえば、 &lt;code&gt;one_value_keyword&lt;/code&gt; の直後に別の認識されたキーワードが続く場合、これは新しいオプションの始まりとして解釈されます。例えば &lt;code&gt;my_install(TARGETS foo DESTINATION OPTIONAL)&lt;/code&gt; をもたらすであろう &lt;code&gt;MY_INSTALL_DESTINATION&lt;/code&gt; のにセット &lt;code&gt;&quot;OPTIONAL&quot;&lt;/code&gt; 、しかしとして &lt;code&gt;OPTIONAL&lt;/code&gt; があるキーワード自体 &lt;code&gt;MY_INSTALL_DESTINATION&lt;/code&gt; は空（それだけに追加され &lt;code&gt;MY_INSTALL_KEYWORDS_MISSING_VALUES&lt;/code&gt; ）と &lt;code&gt;MY_INSTALL_OPTIONAL&lt;/code&gt; は従ってに設定されます &lt;code&gt;TRUE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b05203cf89b60eb36609a1a8b7f3cafe0927486a" translate="yes" xml:space="preserve">
          <source>Known issues</source>
          <target state="translated">既知の問題</target>
        </trans-unit>
        <trans-unit id="7a7b5b3f1e499e82aabe63eaa09e81ad0a4598fc" translate="yes" xml:space="preserve">
          <source>Known toolset version numbers are:</source>
          <target state="translated">既知のツールセットのバージョン番号は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="c05bd2887a3c2398070db8292db9cc17084c2553" translate="yes" xml:space="preserve">
          <source>Known version numbers are:</source>
          <target state="translated">既知のバージョン番号は</target>
        </trans-unit>
        <trans-unit id="3dcd8a49e464c48d94446a8c88366486a0dad26a" translate="yes" xml:space="preserve">
          <source>LABELS</source>
          <target state="translated">LABELS</target>
        </trans-unit>
        <trans-unit id="2a3ffd9ebb6961e4e446366efa8d0013586561fb" translate="yes" xml:space="preserve">
          <source>LANGUAGE</source>
          <target state="translated">LANGUAGE</target>
        </trans-unit>
        <trans-unit id="44a8e31cec00df4f141118aac60bd55fa0d49c60" translate="yes" xml:space="preserve">
          <source>LANG_CLANG_TIDY</source>
          <target state="translated">LANG_CLANG_TIDY</target>
        </trans-unit>
        <trans-unit id="33de8403580924dd2e976a3103fd769a57970db7" translate="yes" xml:space="preserve">
          <source>LANG_COMPILER_LAUNCHER</source>
          <target state="translated">LANG_COMPILER_LAUNCHER</target>
        </trans-unit>
        <trans-unit id="cec6c7a8fbc84dafa50f931474a881cdd4e73641" translate="yes" xml:space="preserve">
          <source>LANG_CPPCHECK</source>
          <target state="translated">LANG_CPPCHECK</target>
        </trans-unit>
        <trans-unit id="f96e07147917c5d12513e3c24251b83876d7091c" translate="yes" xml:space="preserve">
          <source>LANG_CPPLINT</source>
          <target state="translated">LANG_CPPLINT</target>
        </trans-unit>
        <trans-unit id="cb4e1c8fe3b11a22d6cd88e39c62cf52b197e888" translate="yes" xml:space="preserve">
          <source>LANG_INCLUDE_WHAT_YOU_USE</source>
          <target state="translated">LANG_INCLUDE_WHAT_YOU_USE</target>
        </trans-unit>
        <trans-unit id="e06b25d20650e07bfa0e07095ae584905d6d88ff" translate="yes" xml:space="preserve">
          <source>LANG_VISIBILITY_PRESET</source>
          <target state="translated">LANG_VISIBILITY_PRESET</target>
        </trans-unit>
        <trans-unit id="53b446e895561fdf453c0ea50ada7bf6756264fe" translate="yes" xml:space="preserve">
          <source>LDFLAGS</source>
          <target state="translated">LDFLAGS</target>
        </trans-unit>
        <trans-unit id="2125bf18d3da3c8d4371722e5c9da5edd37aafc3" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_DIRECTORY</source>
          <target state="translated">LIBRARY_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="480a03334097de5faeac9c0bec1ad4a2e000984b" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LIBRARY_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b42cf1815581dd51e7f01e1dac6350b36736f313" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">LIBRARY_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="3d4acd271155c40ac6b27f1e3f71198b9dbf88a6" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_NAME</source>
          <target state="translated">LIBRARY_OUTPUT_NAME</target>
        </trans-unit>
        <trans-unit id="c1381a897c8964dd98ef1abbccc762dac98af533" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LIBRARY_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9a0c687844d270f516071592c9db01a10047d3c6" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_NAME_CONFIG</source>
          <target state="translated">LIBRARY_OUTPUT_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="27515048cbdf4a6009f2f77883fe7e8b0d176dbc" translate="yes" xml:space="preserve">
          <source>LIBRARY_OUTPUT_PATH</source>
          <target state="translated">LIBRARY_OUTPUT_PATH</target>
        </trans-unit>
        <trans-unit id="63947618a8833355116d86b491ab9d462633eaa0" translate="yes" xml:space="preserve">
          <source>LIBXSLT_FOUND - system has LibXslt LIBXSLT_INCLUDE_DIR - the LibXslt include directory LIBXSLT_LIBRARIES - Link these to LibXslt LIBXSLT_DEFINITIONS - Compiler switches required for using LibXslt LIBXSLT_VERSION_STRING - version of LibXslt found (since CMake 2.8.8)</source>
          <target state="translated">LIBXSLT_FOUND-システムに LibXslt がある LIBXSLT_INCLUDE_DIR-LibXslt のインクルードディレクトリ LIBXSLT_LIBRARARIES-LibXslt へのリンク LIBXSLT_DEFINITIONS-LibXslt を使用するために必要なコンパイラスイッチ LIBXSLT_VERSION_STRING-検出された LibXslt のバージョン (CMake 2.8.8 以降)LIBXSLT_VERSION_STRING-検出された LibXslt のバージョン (CMake 2.8.8 以降)</target>
        </trans-unit>
        <trans-unit id="f05af4f1b65988277f40848b77106a3e0b3837e3" translate="yes" xml:space="preserve">
          <source>LINKER_LANGUAGE</source>
          <target state="translated">LINKER_LANGUAGE</target>
        </trans-unit>
        <trans-unit id="d0375330b4b150c2c542be102e77dd8eb0641533" translate="yes" xml:space="preserve">
          <source>LINK_DEPENDS</source>
          <target state="translated">LINK_DEPENDS</target>
        </trans-unit>
        <trans-unit id="8822fd17445f54bec87ce2f7c7693add73e508d0" translate="yes" xml:space="preserve">
          <source>LINK_DEPENDS_NO_SHARED</source>
          <target state="translated">LINK_DEPENDS_NO_SHARED</target>
        </trans-unit>
        <trans-unit id="ba16fcbb2171bcc5e11fa1fd8870adbcdbb118d1" translate="yes" xml:space="preserve">
          <source>LINK_DIRECTORIES</source>
          <target state="translated">LINK_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="6742dbe54aec0217212608f98878c9ea49012af1" translate="yes" xml:space="preserve">
          <source>LINK_FLAGS</source>
          <target state="translated">LINK_FLAGS</target>
        </trans-unit>
        <trans-unit id="bfdfa365576034adc147b34e4b54994a4aa588ce" translate="yes" xml:space="preserve">
          <source>LINK_FLAGS_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LINK_FLAGS_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6a5b83554c1fae50cd3d22e32cafbf3ce5c1f8b3" translate="yes" xml:space="preserve">
          <source>LINK_FLAGS_CONFIG</source>
          <target state="translated">LINK_FLAGS_CONFIG</target>
        </trans-unit>
        <trans-unit id="fca845711560c6945794af2b85ab87cb2ccfee95" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_LIBRARIES</source>
          <target state="translated">LINK_INTERFACE_LIBRARIES</target>
        </trans-unit>
        <trans-unit id="984ba4d3f063aedc33b84aacc8b09c533a795f6c" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2ca59efc2446f4bf8c858f12fd2d3a7e01f50973" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_LIBRARIES_CONFIG</source>
          <target state="translated">LINK_INTERFACE_LIBRARIES_CONFIG</target>
        </trans-unit>
        <trans-unit id="62203fe7b8d9762620e9047f0f1423127621fcd6" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_MULTIPLICITY</source>
          <target state="translated">LINK_INTERFACE_MULTIPLICITY</target>
        </trans-unit>
        <trans-unit id="a7051a820bce6b1bb934f1fdf3c64d2bd6a51510" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_MULTIPLICITY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LINK_INTERFACE_MULTIPLICITY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d9e29ee3a0a7190700ee30a2aaddc4a64b22b460" translate="yes" xml:space="preserve">
          <source>LINK_INTERFACE_MULTIPLICITY_CONFIG</source>
          <target state="translated">LINK_INTERFACE_MULTIPLICITY_CONFIG</target>
        </trans-unit>
        <trans-unit id="0204d13b20379e039009fad4831e252ff07ed932" translate="yes" xml:space="preserve">
          <source>LINK_LIBRARIES</source>
          <target state="translated">LINK_LIBRARIES</target>
        </trans-unit>
        <trans-unit id="86761e62739241fbd774ad024672540562305557" translate="yes" xml:space="preserve">
          <source>LINK_OPTIONS</source>
          <target state="translated">LINK_OPTIONS</target>
        </trans-unit>
        <trans-unit id="2ad5d57cb23a1c7a9ccc582ebf34cee0abeba207" translate="yes" xml:space="preserve">
          <source>LINK_SEARCH_END_STATIC</source>
          <target state="translated">LINK_SEARCH_END_STATIC</target>
        </trans-unit>
        <trans-unit id="d53ad5936c589b72d5b41f88bc88c7cbd8f7e7e0" translate="yes" xml:space="preserve">
          <source>LINK_SEARCH_START_STATIC</source>
          <target state="translated">LINK_SEARCH_START_STATIC</target>
        </trans-unit>
        <trans-unit id="84f5d850299f846d9e61d5c97e3e3f55634ee841" translate="yes" xml:space="preserve">
          <source>LINK_WHAT_YOU_USE</source>
          <target state="translated">LINK_WHAT_YOU_USE</target>
        </trans-unit>
        <trans-unit id="efe907313826e26d0eaef8e5c927a14832101127" translate="yes" xml:space="preserve">
          <source>LISTFILE_STACK</source>
          <target state="translated">LISTFILE_STACK</target>
        </trans-unit>
        <trans-unit id="a0bad7644cdf8f7358f15691c7f9f8c506488813" translate="yes" xml:space="preserve">
          <source>LLVM libc++ Shared</source>
          <target state="translated">LLVM libc++共有</target>
        </trans-unit>
        <trans-unit id="d155674a5dad17bd5dc7de7f0457a0dccb629928" translate="yes" xml:space="preserve">
          <source>LLVM libc++ Static</source>
          <target state="translated">LLVM libc++スタティック</target>
        </trans-unit>
        <trans-unit id="dc5c7379599c2942d4306de49be58e442218f5b2" translate="yes" xml:space="preserve">
          <source>LOCAL DCMTK</source>
          <target state="translated">LOCAL DCMTK</target>
        </trans-unit>
        <trans-unit id="40c3322b3b3d0d946724fe784d34663629e1932a" translate="yes" xml:space="preserve">
          <source>LOCATION</source>
          <target state="translated">LOCATION</target>
        </trans-unit>
        <trans-unit id="54f98562ace52182700d465b67ae966369fa5cbf" translate="yes" xml:space="preserve">
          <source>LOCATION_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">LOCATION_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cb84ab2253fa8454f7c281f828ae9e8f1e538a74" translate="yes" xml:space="preserve">
          <source>LOCATION_CONFIG</source>
          <target state="translated">LOCATION_CONFIG</target>
        </trans-unit>
        <trans-unit id="63ca32757021e9c4c3a4560a7e10b9f10141eb4e" translate="yes" xml:space="preserve">
          <source>LUA50_FOUND, if false, do not try to link to Lua LUA_LIBRARIES, both lua and lualib LUA_INCLUDE_DIR, where to find lua.h and lualib.h (and probably lauxlib.h)</source>
          <target state="translated">LUA50_FOUND,false の場合は Lua へのリンクを試みない LUA_LIBRARARIES,lua と lualib の両方 LUA_INCLUDE_DIR,lua.h と lualib.h (おそらく lauxlib.h も)の場所</target>
        </trans-unit>
        <trans-unit id="e2b1c7459afc13c19ec4de104ab99e38c71617e1" translate="yes" xml:space="preserve">
          <source>LUA51_FOUND, if false, do not try to link to Lua LUA_LIBRARIES LUA_INCLUDE_DIR, where to find lua.h LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)</source>
          <target state="translated">LUA51_FOUND,false の場合、Lua へのリンクを試みない LUA_LIBRARARIES LUA_INCLUDE_DIR,lua.h を見つける場所 LUA_VERSION_STRING,検出された Lua のバージョン (CMake 2.8.8 以降)</target>
        </trans-unit>
        <trans-unit id="7e7f38ead3676543d4dc450aea693822a237dafe" translate="yes" xml:space="preserve">
          <source>LUA_FOUND - if false, do not try to link to Lua LUA_LIBRARIES - both lua and lualib LUA_INCLUDE_DIR - where to find lua.h LUA_VERSION_STRING - the version of Lua found LUA_VERSION_MAJOR - the major version of Lua LUA_VERSION_MINOR - the minor version of Lua LUA_VERSION_PATCH - the patch version of Lua</source>
          <target state="translated">LUA_FOUND-false の場合、Lua へのリンクを試みない LUA_LIBRARARIES-lua と lualib の両方 LUA_INCLUDE_DIR-lua.h の場所 LUA_VERSION_STRING-見つかった Lua のバージョン LUA_VERSION_MAJOR-Lua のメジャーバージョン LUA_VERSION_MINOR-Lua のマイナーバージョン LUA_VERSION_PATCH-Lua のパッチバージョン LUA_VERSION_PATCH</target>
        </trans-unit>
        <trans-unit id="e5ce93d215e8e3a4434238625708b36031de9a8c" translate="yes" xml:space="preserve">
          <source>Label and Subproject Summary</source>
          <target state="translated">ラベルとサブプロジェクトの概要</target>
        </trans-unit>
        <trans-unit id="d35ca39e2e21cf40f56a6667eff108f9433e4775" translate="yes" xml:space="preserve">
          <source>Lambda functions, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2927.pdf&quot;&gt;N2927&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2927.pdf&quot;&gt;N2927で&lt;/a&gt;定義されているラムダ関数。</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="a5d36440693b6c51d272890eb26092ccb4a17694" translate="yes" xml:space="preserve">
          <source>Language-specific flag to be used to link a library specified by a path to its file.</source>
          <target state="translated">パスで指定されたライブラリをそのファイルにリンクするために使用される言語固有のフラグ。</target>
        </trans-unit>
        <trans-unit id="2162ad22b0cbe82ab6cb30b75d04a8324cd5eaa4" translate="yes" xml:space="preserve">
          <source>Language-specific suffix for libraries that you link to.</source>
          <target state="translated">リンク先のライブラリの言語固有の接尾辞。</target>
        </trans-unit>
        <trans-unit id="db07be184479f34078cd4fc76d248dc0975720e9" translate="yes" xml:space="preserve">
          <source>Languages</source>
          <target state="translated">Languages</target>
        </trans-unit>
        <trans-unit id="64a2cb9f08f164f4b95af179adcd054826d66e95" translate="yes" xml:space="preserve">
          <source>Languages are enabled by the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command. Language-specific built-in variables, such as &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt;, &lt;code&gt;CMAKE_CXX_COMPILER_ID&lt;/code&gt; etc are set by invoking the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command. If no project command is in the top-level CMakeLists file, one will be implicitly generated. By default the enabled languages are &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt;:</source>
          <target state="translated">言語は、&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;コマンドによって有効になります。 &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; 、 &lt;code&gt;CMAKE_CXX_COMPILER_ID&lt;/code&gt; などの言語固有の組み込み変数は、&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt;コマンドを呼び出すことによって設定されます。最上位のCMakeListsファイルにプロジェクトコマンドがない場合は、暗黙的に生成されます。デフォルトで有効な言語は &lt;code&gt;C&lt;/code&gt; および &lt;code&gt;CXX&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c470204feaa6afa803476577ad28f809eaf43089" translate="yes" xml:space="preserve">
          <source>Languages compiled into an &lt;code&gt;IMPORTED&lt;/code&gt; static library.</source>
          <target state="translated">&lt;code&gt;IMPORTED&lt;/code&gt; 静的ライブラリにコンパイルされた言語。</target>
        </trans-unit>
        <trans-unit id="d51b73f96ab72ad3815ce560c5556d25f260bfd7" translate="yes" xml:space="preserve">
          <source>Lastly, suppose that &lt;code&gt;secretsauce&lt;/code&gt; provides a script called &lt;code&gt;makedoc&lt;/code&gt; which can be used to generate its own documentation. Further suppose that the script expects the output directory to be provided as the only parameter and that it should be run from the &lt;code&gt;secretsauce&lt;/code&gt; source directory. A custom step and a custom target to trigger the script can be defined like so:</source>
          <target state="translated">最後に、と仮定 &lt;code&gt;secretsauce&lt;/code&gt; は、スクリプトと呼ば提供 &lt;code&gt;makedoc&lt;/code&gt; 独自のドキュメントを生成するために使用することができます。さらに、スクリプトが出力ディレクトリが唯一のパラメータとして提供されることを期待し、 &lt;code&gt;secretsauce&lt;/code&gt; ソースディレクトリから実行する必要があると想定します。スクリプトをトリガーするカスタムステップとカスタムターゲットは、次のように定義できます。</target>
        </trans-unit>
        <trans-unit id="fc6cbca8f873c65cbb2e8981679dcca506c7773a" translate="yes" xml:space="preserve">
          <source>Lastly, the following example demonstrates how one might download and unpack a firmware tarball using CMake&amp;rsquo;s &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;script mode&lt;/code&gt;&lt;/a&gt;. The call to &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-4-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate()&lt;/code&gt;&lt;/a&gt; specifies all the content details and the unpacked firmware will be placed in a &lt;code&gt;firmware&lt;/code&gt; directory below the current working directory.</source>
          <target state="translated">最後に、次の例は、CMakeの&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;script mode&lt;/code&gt; &lt;/a&gt;を使用してファームウェアtarballをダウンロードして解凍する方法を示しています。&lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-4-command:fetchcontent_populate&quot;&gt; &lt;code&gt;FetchContent_Populate()&lt;/code&gt; &lt;/a&gt;への呼び出しはすべてのコンテンツの詳細を指定し、解凍された &lt;code&gt;firmware&lt;/code&gt; は現在の作業ディレクトリの下のファームウェアディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="7b59beead33a91a2cb84032d9291768413dffff7" translate="yes" xml:space="preserve">
          <source>Lastly, we have a function called &lt;code&gt;do_test&lt;/code&gt; that runs the application and verifies that the computed square root is correct for given input. For each invocation of &lt;code&gt;do_test&lt;/code&gt;, another test is added to the project with a name, input, and expected results based on the passed arguments.</source>
          <target state="translated">最後に、アプリケーションを実行し、計算された平方根が特定の入力に対して正しいことを確認する &lt;code&gt;do_test&lt;/code&gt; という関数があります。 &lt;code&gt;do_test&lt;/code&gt; を呼び出すたびに、名前、入力、および渡された引数に基づく期待される結果を使用して、別のテストがプロジェクトに追加されます。</target>
        </trans-unit>
        <trans-unit id="a6bed35f8913d07b23e0ab067d05c6b979d663dc" translate="yes" xml:space="preserve">
          <source>Later, in another &lt;code&gt;ctest -S&lt;/code&gt; script:</source>
          <target state="translated">後で、別の &lt;code&gt;ctest -S&lt;/code&gt; スクリプトで：</target>
        </trans-unit>
        <trans-unit id="ead4b43e91ade7f4ca0e613faf6261cbc402a813" translate="yes" xml:space="preserve">
          <source>Launch &lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-0-manual:cmake-server(7)&quot;&gt;&lt;code&gt;cmake-server(7)&lt;/code&gt;&lt;/a&gt; mode.</source>
          <target state="translated">起動&lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-0-manual:cmake-server(7)&quot;&gt; &lt;code&gt;cmake-server(7)&lt;/code&gt; &lt;/a&gt;モード。</target>
        </trans-unit>
        <trans-unit id="8972d921d33dcb292f3d4a102a0721510ecee94b" translate="yes" xml:space="preserve">
          <source>Launch tests in a random order. This may be useful for detecting implicit test dependencies.</source>
          <target state="translated">テストをランダムな順序で起動します。これは暗黙のテスト依存性を検出するのに便利かもしれません。</target>
        </trans-unit>
        <trans-unit id="c1572e6e5de5ba1ea552d8ec5ef3f1b42f331b6e" translate="yes" xml:space="preserve">
          <source>Legacy CPack Modules</source>
          <target state="translated">レガシーCPackモジュール</target>
        </trans-unit>
        <trans-unit id="7064ca9b585df986e1513ca88574711f3f6ad54a" translate="yes" xml:space="preserve">
          <source>Legacy Macros</source>
          <target state="translated">レガシーマクロ</target>
        </trans-unit>
        <trans-unit id="7bc5c10b3cc464b7e0602487fdb463ff97f6ea80" translate="yes" xml:space="preserve">
          <source>Legacy option for old Dart2 dashboard server feature. Do not use.</source>
          <target state="translated">古いDart2ダッシュボードサーバー機能のレガシーオプション。使用しないでください。</target>
        </trans-unit>
        <trans-unit id="7cfb5b6849e07c693231687b0f4e43523fa02262" translate="yes" xml:space="preserve">
          <source>Legacy option. Not used.</source>
          <target state="translated">レガシーオプション。使用されていません。</target>
        </trans-unit>
        <trans-unit id="02a2dd730da2ba8ac5c5969f51aea3976b43120f" translate="yes" xml:space="preserve">
          <source>Legacy option. When &lt;code&gt;SubmitURL&lt;/code&gt; is not set, it is constructed from &lt;code&gt;DropMethod&lt;/code&gt;, &lt;code&gt;DropSiteUser&lt;/code&gt;, &lt;code&gt;DropSitePassword&lt;/code&gt;, &lt;code&gt;DropSite&lt;/code&gt;, and &lt;code&gt;DropLocation&lt;/code&gt;.</source>
          <target state="translated">従来のオプション。 &lt;code&gt;SubmitURL&lt;/code&gt; が設定されていない場合、 &lt;code&gt;DropMethod&lt;/code&gt; 、 &lt;code&gt;DropSiteUser&lt;/code&gt; 、 &lt;code&gt;DropSitePassword&lt;/code&gt; 、 &lt;code&gt;DropSite&lt;/code&gt; 、および &lt;code&gt;DropLocation&lt;/code&gt; から構成されます。</target>
        </trans-unit>
        <trans-unit id="53789e63c0a26b06f6ee3389f57916b3259c1e85" translate="yes" xml:space="preserve">
          <source>Legend:</source>
          <target state="translated">Legend:</target>
        </trans-unit>
        <trans-unit id="b980c29dffb624a5dc3dc81e69b57b2fbcae8537" translate="yes" xml:space="preserve">
          <source>Let &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; process &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; files.</source>
          <target state="translated">ましょう&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;プロセス&lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt;ファイルを。</target>
        </trans-unit>
        <trans-unit id="84afbb5aa5f0540b53650c3e5591bd37057ba14d" translate="yes" xml:space="preserve">
          <source>Let &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; process header files that end with a &lt;code&gt;.hh&lt;/code&gt; extension.</source>
          <target state="translated">ましょう&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt;プロセスのヘッダファイルとそのエンド &lt;code&gt;.hh&lt;/code&gt; 拡張子を。</target>
        </trans-unit>
        <trans-unit id="7bd151a608622cb3130e031619f11188439eb047" translate="yes" xml:space="preserve">
          <source>Let CMake know that source files that contain &lt;code&gt;CUSTOM_MACRO&lt;/code&gt; must be &lt;code&gt;moc&lt;/code&gt; processed as well:</source>
          <target state="translated">CMakeに、 &lt;code&gt;CUSTOM_MACRO&lt;/code&gt; を含むソースファイルも &lt;code&gt;moc&lt;/code&gt; 処理する必要があることを知らせます。</target>
        </trans-unit>
        <trans-unit id="665a3949600d2d1cf90cd3d7aa7d6d3216fd1d3c" translate="yes" xml:space="preserve">
          <source>Let us consider adding some code to our project that depends on features the target platform may not have. For this example, we will add some code that depends on whether or not the target platform has the &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; functions. Of course almost every platform has these functions but for this tutorial assume that they are not common.</source>
          <target state="translated">ターゲットプラットフォームにない機能に依存するコードをプロジェクトに追加することを検討してみましょう。この例では、ターゲットプラットフォームに &lt;code&gt;log&lt;/code&gt; 関数と &lt;code&gt;exp&lt;/code&gt; 関数があるかどうかに依存するコードを追加します。もちろん、ほとんどすべてのプラットフォームにこれらの機能がありますが、このチュートリアルでは、それらが一般的ではないと想定しています。</target>
        </trans-unit>
        <trans-unit id="a11e1aa1eb06ea278cf8badd0614fafa8ed9c307" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s also add version numbering to the MathFunctions library. In &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt;, set the &lt;a href=&quot;../../prop_tgt/version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../prop_tgt/soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; properties:</source>
          <target state="translated">MathFunctionsライブラリにバージョン番号も追加しましょう。で &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; は、設定&lt;a href=&quot;../../prop_tgt/version#prop_tgt:VERSION&quot; id=&quot;index-0-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../prop_tgt/soversion#prop_tgt:SOVERSION&quot; id=&quot;index-0-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; &lt;/a&gt;プロパティを：</target>
        </trans-unit>
        <trans-unit id="057420202e9e083705bdf36a264aea683e02a96e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s edit the &lt;code&gt;MathFunctions&lt;/code&gt; project to use components. The source code for this section can be found in &lt;code&gt;Help\guide\importing-exporting\MathFunctionsComponents&lt;/code&gt;. The CMakeLists file for this project adds two subdirectories: &lt;code&gt;Addition&lt;/code&gt; and &lt;code&gt;SquareRoot&lt;/code&gt;.</source>
          <target state="translated">コンポーネントを使用するように &lt;code&gt;MathFunctions&lt;/code&gt; プロジェクトを編集してみましょう。このセクションのソースコードは、 &lt;code&gt;Help\guide\importing-exporting\MathFunctionsComponents&lt;/code&gt; ます。このプロジェクトのCMakeListsファイルは、 &lt;code&gt;Addition&lt;/code&gt; と &lt;code&gt;SquareRoot&lt;/code&gt; の2つのサブディレクトリを追加します。</target>
        </trans-unit>
        <trans-unit id="a476098ec0146605d97a85dacc7525712b475073" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s refactor our code from &lt;a href=&quot;#adding-a-library-step-2&quot;&gt;Adding a Library (Step 2)&lt;/a&gt; to use the modern CMake approach of usage requirements. We first state that anybody linking to MathFunctions needs to include the current source directory, while MathFunctions itself doesn&amp;rsquo;t. So this can become an &lt;code&gt;INTERFACE&lt;/code&gt; usage requirement.</source>
          <target state="translated">&lt;a href=&quot;#adding-a-library-step-2&quot;&gt;ライブラリの追加（ステップ2）&lt;/a&gt;からコードをリファクタリングして、使用要件の最新のCMakeアプローチを使用してみましょう。最初に、MathFunctionsにリンクする人は誰でも現在のソースディレクトリを含める必要があるが、MathFunctions自体は含めないことを述べます。したがって、これは &lt;code&gt;INTERFACE&lt;/code&gt; 使用要件になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="b4412bd49a1d24ffa482dbc0a8c9eb78d557f322" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start by looking at the &lt;code&gt;MathFunctions&lt;/code&gt; project in the &lt;code&gt;Help/guide/importing-exporting/MathFunctions&lt;/code&gt; directory. Here we have a header file &lt;code&gt;MathFunctions.h&lt;/code&gt; that declares a &lt;code&gt;sqrt&lt;/code&gt; function:</source>
          <target state="translated">&lt;code&gt;Help/guide/importing-exporting/MathFunctions&lt;/code&gt; ディレクトリにある &lt;code&gt;MathFunctions&lt;/code&gt; プロジェクトを見てみましょう。ここに、 &lt;code&gt;sqrt&lt;/code&gt; 関数を宣言するヘッダーファイル &lt;code&gt;MathFunctions.h&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="0227126717e12d2e1a7e8db522ce5e424ca6ae47" translate="yes" xml:space="preserve">
          <source>LibXml2 libraries to be linked</source>
          <target state="translated">リンクされるLibXml2ライブラリ</target>
        </trans-unit>
        <trans-unit id="72a5e2ce6a95049ee400a12b23770ed29f508dc7" translate="yes" xml:space="preserve">
          <source>Libraries and targets following &lt;code&gt;LINK_PUBLIC&lt;/code&gt; are linked to, and are made part of the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;. If policy &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-1-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, they are also made part of the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-1-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt;. Libraries and targets following &lt;code&gt;LINK_PRIVATE&lt;/code&gt; are linked to, but are not made part of the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-2-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;LINK_PUBLIC&lt;/code&gt; に続くライブラリとターゲットはリンクされ、&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; の&lt;/a&gt;一部になります。ポリシー&lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-1-policy:CMP0022&quot;&gt; &lt;code&gt;CMP0022&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;NEW&lt;/code&gt; でない場合、それらも&lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-1-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; の&lt;/a&gt;一部になります。 &lt;code&gt;LINK_PRIVATE&lt;/code&gt; に続くライブラリとターゲットはリンクされますが、&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-2-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; &lt;/a&gt;）の一部にはなりません。</target>
        </trans-unit>
        <trans-unit id="b5bb02cc2b547e366731d9c4741cbfe12126d5e9" translate="yes" xml:space="preserve">
          <source>Libraries for Dependents Only (Legacy)</source>
          <target state="translated">扶養家族専用図書館(レガシー</target>
        </trans-unit>
        <trans-unit id="c8fd5c30b70e93d2d47ebf09d7bffd470f6e860b" translate="yes" xml:space="preserve">
          <source>Libraries for a Target and/or its Dependents</source>
          <target state="translated">ターゲットおよび/またはその従属物のためのライブラリ</target>
        </trans-unit>
        <trans-unit id="11e374fe6f743a858d1aafd9c3026ae4c75636ea" translate="yes" xml:space="preserve">
          <source>Libraries for a Target and/or its Dependents (Legacy)</source>
          <target state="translated">ターゲットおよび/またはその依存物のためのライブラリ (レガシー)</target>
        </trans-unit>
        <trans-unit id="24e71fb98cd1deecc4c4603225243e84825aa0f9" translate="yes" xml:space="preserve">
          <source>Libraries for both a Target and its Dependents</source>
          <target state="translated">ターゲットとその従属物の両方のライブラリ</target>
        </trans-unit>
        <trans-unit id="eff3e6cfcc86dbe4a700e77678e3efbac027153f" translate="yes" xml:space="preserve">
          <source>Libraries linked by full-path must have a valid library file name.</source>
          <target state="translated">フルパスでリンクされたライブラリは、有効なライブラリファイル名を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="d77fde896b1dad40782fac9b15b74762ae69b65b" translate="yes" xml:space="preserve">
          <source>Libraries linked into every executable and shared library linked for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;. This is meant for specification of system libraries needed by the language for the current platform.</source>
          <target state="translated">すべての実行可能ファイルにリンクされたライブラリと、言語 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; にリンクされた共有ライブラリ。これは、現在のプラットフォームの言語で必要なシステムライブラリの仕様を意味します。</target>
        </trans-unit>
        <trans-unit id="87ae7f7631aabc856d140a9563f0187627759799" translate="yes" xml:space="preserve">
          <source>Libraries linked may not have leading or trailing whitespace.</source>
          <target state="translated">リンク先の図書館は、先頭または末尾に空白がない場合があります。</target>
        </trans-unit>
        <trans-unit id="d5627f410fd28d61a6f61cadd6cdd713c4b9d5aa" translate="yes" xml:space="preserve">
          <source>Libraries linked using &amp;ldquo;Link Binary With Libraries&amp;rdquo; are linked after the ones linked through regular linker flags. This order should be taken into account when different static libraries contain symbols with the same name, as the former ones will take precedence over the latter.</source>
          <target state="translated">「LinkBinaryWith Libraries」を使用してリンクされたライブラリは、通常のリンカーフラグを介してリンクされたライブラリの後にリンクされます。異なる静的ライブラリに同じ名前のシンボルが含まれている場合は、前者の方が後者よりも優先されるため、この順序を考慮する必要があります。</target>
        </trans-unit>
        <trans-unit id="bd42c5ae851b488cdefdc733c434ab4002beb753" translate="yes" xml:space="preserve">
          <source>Libraries linked via full path no longer produce linker search paths.</source>
          <target state="translated">フルパスでリンクされたライブラリは、リンカー検索パスを生成しなくなりました。</target>
        </trans-unit>
        <trans-unit id="0e9b98d37af82523b3b6aefa1e864f9c1db64c70" translate="yes" xml:space="preserve">
          <source>Libraries may provide entirely different header files depending on requested compiler features.</source>
          <target state="translated">ライブラリは、要求されたコンパイラの機能に応じて、全く異なるヘッダーファイルを提供することがあります。</target>
        </trans-unit>
        <trans-unit id="411e33e3043f02c2f597cd5e0d7ca0d42a10a103" translate="yes" xml:space="preserve">
          <source>Libraries may themselves have other private library dependencies that expect to be found via &lt;code&gt;RPATH&lt;/code&gt; mechanisms, but some linkers are not able to fully decode those paths (e.g. due to the presence of things like &lt;code&gt;$ORIGIN&lt;/code&gt;).</source>
          <target state="translated">ライブラリ自体は、 &lt;code&gt;RPATH&lt;/code&gt; メカニズムを介して検出されると予想される他のプライベートライブラリ依存関係を持っている可能性がありますが、一部のリンカーはそれらのパスを完全にデコードできません（たとえば、 &lt;code&gt;$ORIGIN&lt;/code&gt; などの存在が原因です）。</target>
        </trans-unit>
        <trans-unit id="f698e08ff120f1c44fe0f193ce7b7ddfb2b2537c" translate="yes" xml:space="preserve">
          <source>Libraries not Providing Config-file Packages</source>
          <target state="translated">設定ファイルパッケージを提供していないライブラリ</target>
        </trans-unit>
        <trans-unit id="a7432493f3195167b0589a7c26d296ad1fe0e1a4" translate="yes" xml:space="preserve">
          <source>Libraries providing Config-file packages</source>
          <target state="translated">コンフィグファイルパッケージを提供するライブラリ</target>
        </trans-unit>
        <trans-unit id="e471655a6880afebc8000fb66e6c0b31eaef8523" translate="yes" xml:space="preserve">
          <source>Libraries specified as &lt;code&gt;debug&lt;/code&gt; are wrapped in a generator expression to correspond to debug builds. If policy &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-3-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, the libraries are also appended to the &lt;code&gt;LINK_INTERFACE_LIBRARIES_DEBUG&lt;/code&gt; property (or to the properties corresponding to configurations listed in the &lt;a href=&quot;../prop_gbl/debug_configurations#prop_gbl:DEBUG_CONFIGURATIONS&quot; id=&quot;index-1-prop_gbl:DEBUG_CONFIGURATIONS&quot;&gt;&lt;code&gt;DEBUG_CONFIGURATIONS&lt;/code&gt;&lt;/a&gt; global property if it is set). Libraries specified as &lt;code&gt;optimized&lt;/code&gt; are appended to the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; property. If policy &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-4-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, they are also appended to the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-4-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt; property. Libraries specified as &lt;code&gt;general&lt;/code&gt; (or without any keyword) are treated as if specified for both &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;optimized&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;debug&lt;/code&gt; として指定されたライブラリは、デバッグビルドに対応するようにジェネレータ式でラップされます。ポリシー&lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-3-policy:CMP0022&quot;&gt; &lt;code&gt;CMP0022&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;NEW&lt;/code&gt; でない場合、ライブラリは &lt;code&gt;LINK_INTERFACE_LIBRARIES_DEBUG&lt;/code&gt; プロパティ（または、設定されている場合は&lt;a href=&quot;../prop_gbl/debug_configurations#prop_gbl:DEBUG_CONFIGURATIONS&quot; id=&quot;index-1-prop_gbl:DEBUG_CONFIGURATIONS&quot;&gt; &lt;code&gt;DEBUG_CONFIGURATIONS&lt;/code&gt; &lt;/a&gt;グローバルプロパティにリストされている構成に対応するプロパティ）にも追加されます。 &lt;code&gt;optimized&lt;/code&gt; として指定されたライブラリは、&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;プロパティに追加されます。ポリシー&lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-4-policy:CMP0022&quot;&gt; &lt;code&gt;CMP0022&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;NEW&lt;/code&gt; でない場合、それらは&lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-4-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; &lt;/a&gt;プロパティにも追加されます。 &lt;code&gt;general&lt;/code&gt; として指定されたライブラリ（またはキーワードなし）は、 &lt;code&gt;debug&lt;/code&gt; と &lt;code&gt;optimized&lt;/code&gt; 両方に指定されているかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="c709b0760084759d9153ea402bc8eb230f599f15" translate="yes" xml:space="preserve">
          <source>Libraries to link to GDAL.</source>
          <target state="translated">GDALにリンクするライブラリ。</target>
        </trans-unit>
        <trans-unit id="06115790112b5497766706fec699af1b08cf680b" translate="yes" xml:space="preserve">
          <source>Library Output Artifacts</source>
          <target state="translated">ライブラリ出力アーティファクト</target>
        </trans-unit>
        <trans-unit id="ca6b67c2df13230a64623dcad428f2bd48ab54ef" translate="yes" xml:space="preserve">
          <source>Library dependencies are transitive by default with this signature. When this target is linked into another target then the libraries linked to this target will appear on the link line for the other target too. This transitive &amp;ldquo;link interface&amp;rdquo; is stored in the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property and may be overridden by setting the property directly. When &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-0-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt;, transitive linking is built in but may be overridden by the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt; property. Calls to other signatures of this command may set the property making any libraries linked exclusively by this signature private.</source>
          <target state="translated">ライブラリの依存関係は、このシグネチャを使用してデフォルトで推移的です。このターゲットが別のターゲットにリンクされている場合、このターゲットにリンクされているライブラリは、他のターゲットのリンク行にも表示されます。この推移的な「リンクインターフェイス」は&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt;ターゲットプロパティに格納され、プロパティを直接設定することでオーバーライドできます。&lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-0-policy:CMP0022&quot;&gt; &lt;code&gt;CMP0022&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;NEW&lt;/code&gt; に設定されていない場合、推移的なリンクは組み込まれますが、&lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; &lt;/a&gt;プロパティによってオーバーライドされる可能性があります。このコマンドの他のシグネチャを呼び出すと、プロパティが設定され、このシグネチャによって排他的にリンクされたライブラリがプライベートになります。</target>
        </trans-unit>
        <trans-unit id="ce163c3c844e03ab561b26e440d65b63e01841e5" translate="yes" xml:space="preserve">
          <source>License to be embedded in the installer. It will typically be displayed to the user by the produced installer (often with an explicit &amp;ldquo;Accept&amp;rdquo; button, for graphical installers) prior to installation. This license file is NOT added to the installed files but is used by some CPack generators like NSIS. If you want to install a license file (may be the same as this one) along with your project, you must add an appropriate CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command in your &lt;code&gt;CMakeLists.txt&lt;/code&gt;.</source>
          <target state="translated">インストーラーに埋め込まれるライセンス。通常、インストールの前に、生成されたインストーラー（多くの場合、グラフィカルインストーラーの場合は明示的な[承諾]ボタンが表示されます）によってユーザーに表示されます。このライセンスファイルはインストールファイルに追加されませんが、NSISなどの一部のCPackジェネレーターによって使用されます。ライセンスファイル（これと同じ場合があります）をプロジェクトと共に&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;する場合は、 &lt;code&gt;CMakeLists.txt&lt;/code&gt; に適切なCMake install（）コマンドを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="f352328f675c8fd36fb0b57681f635429542821f" translate="yes" xml:space="preserve">
          <source>License to be embedded in the installer. It will typically be displayed to the user by the produced installer (often with an explicit &amp;ldquo;Accept&amp;rdquo; button, for graphical installers) prior to installation. This license file is NOT added to the installed files but is used by some CPack generators like NSIS. If you want to install a license file (may be the same as this one) along with your project, you must add an appropriate CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command in your &lt;code&gt;CMakeLists.txt&lt;/code&gt;.</source>
          <target state="translated">インストーラーに埋め込まれるライセンス。これは通常、インストールの前に、作成されたインストーラー（グラフィカルインストーラーの場合は明示的な[同意する]ボタンが付いていることが多い）によってユーザーに表示されます。このライセンスファイルはインストールされたファイルに追加されませんが、NSISなどの一部のCPackジェネレーターによって使用されます。プロジェクトと一緒にライセンスファイル（これと同じ場合があります）をインストールする場合は、 &lt;code&gt;CMakeLists.txt&lt;/code&gt; に適切なCMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;コマンドを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="9fc9c5a7d8326df046caa8d770d0b0dc0dbc12f4" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD 3-clause License.</source>
          <target state="translated">BSD 3-clause Licenseのもとでライセンスされています。</target>
        </trans-unit>
        <trans-unit id="e20a81f6afd3fae0c59c38944ac6767fd62525b0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--trace&lt;/code&gt;, but with variables expanded.</source>
          <target state="translated">同様 &lt;code&gt;--trace&lt;/code&gt; が、変数を拡大しました。</target>
        </trans-unit>
        <trans-unit id="7fa7519fd60587f27eeeb3830c6632412281a7fe" translate="yes" xml:space="preserve">
          <source>Like build specifications, &lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt;&lt;code&gt;link libraries&lt;/code&gt;&lt;/a&gt; may be specified with generator expression conditions. However, as consumption of usage requirements is based on collection from linked dependencies, there is an additional limitation that the link dependencies must form a &amp;ldquo;directed acyclic graph&amp;rdquo;. That is, if linking to a target is dependent on the value of a target property, that target property may not be dependent on the linked dependencies:</source>
          <target state="translated">ビルド仕様と同様に、&lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt; &lt;code&gt;link libraries&lt;/code&gt; &lt;/a&gt;はジェネレータ式の条件で指定できます。ただし、使用要件の消費はリンクされた依存関係からの収集に基づいているため、リンクの依存関係が「有向非循環グラフ」を形成する必要があるという追加の制限があります。つまり、ターゲットへのリンクがターゲットプロパティの値に依存している場合、そのターゲットプロパティはリンクされた依存関係に依存していない可能性があります。</target>
        </trans-unit>
        <trans-unit id="88c61f2d88449b24792933c53c3ca5cd4c331181" translate="yes" xml:space="preserve">
          <source>Limit the number of distinct strings to be extracted.</source>
          <target state="translated">抽出する文字列の数を制限します。</target>
        </trans-unit>
        <trans-unit id="0d030f1ce0ccb1a363316bcd988f700f7adba65c" translate="yes" xml:space="preserve">
          <source>Limit the number of input bytes to read from the file.</source>
          <target state="translated">ファイルから読み込む入力バイト数を制限します。</target>
        </trans-unit>
        <trans-unit id="8ee50303c4ddfddbb00406211f00133c89003342" translate="yes" xml:space="preserve">
          <source>Limit the number of total bytes to store in the &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; に格納する合計バイト数を制限します。</target>
        </trans-unit>
        <trans-unit id="add5aa8287282db812baa350d4df83c631b5b90e" translate="yes" xml:space="preserve">
          <source>Limit the output for failed tests to &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; bytes.</source>
          <target state="translated">失敗したテストの出力を &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; バイトに制限します。</target>
        </trans-unit>
        <trans-unit id="51317cc26f371b435b137e2748387d95729495b2" translate="yes" xml:space="preserve">
          <source>Limit the output for passed tests to &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; bytes.</source>
          <target state="translated">合格したテストの出力を &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; バイトに制限します。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="52c0a2f3a058b234bb1af57941e3f1c4df61c56c" translate="yes" xml:space="preserve">
          <source>Limitations:</source>
          <target state="translated">Limitations:</target>
        </trans-unit>
        <trans-unit id="de88e6cb0c37e7eccb7bafa70f3d7b501270c9b2" translate="yes" xml:space="preserve">
          <source>Line 1 loads the target CMake file. Although we only exported a single target, this file may import any number of targets. Their locations are computed relative to the file location so that the install tree may be easily moved. Line 3 references the imported &lt;code&gt;MathFunctions&lt;/code&gt; library. The resulting build system will link to the library from its installed location.</source>
          <target state="translated">1行目はターゲットCMakeファイルをロードします。エクスポートしたターゲットは1つだけですが、このファイルは任意の数のターゲットをインポートできます。それらの場所は、インストールツリーを簡単に移動できるように、ファイルの場所を基準にして計算されます。3行目は、インポートされた &lt;code&gt;MathFunctions&lt;/code&gt; ライブラリを参照しています。結果のビルドシステムは、インストールされた場所からライブラリにリンクします。</target>
        </trans-unit>
        <trans-unit id="6b7983cc27bfad92522c4689e8fce94e2c7241a2" translate="yes" xml:space="preserve">
          <source>Line Comment</source>
          <target state="translated">ラインコメント</target>
        </trans-unit>
        <trans-unit id="d04a3fe528bdb5fe9ea62798df9b0dad04583c4a" translate="yes" xml:space="preserve">
          <source>Line number in the file where the backtrace was added.</source>
          <target state="translated">バックトレースを追加したファイルの行番号。</target>
        </trans-unit>
        <trans-unit id="ee718585268b0a865f1a2143d226cdf80de7dcd7" translate="yes" xml:space="preserve">
          <source>Link Libraries and Generator Expressions</source>
          <target state="translated">リンクライブラリとジェネレータ式</target>
        </trans-unit>
        <trans-unit id="cf1b25d2af3b2317b872b27fb369aca91c0011b5" translate="yes" xml:space="preserve">
          <source>Link dependency files usage requirements commonly differ between the build-tree and the install-tree. The &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; and &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; generator expressions can be used to describe separate usage requirements based on the usage location. Relative paths are allowed within the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; expression and are interpreted relative to the installation prefix. For example:</source>
          <target state="translated">リンク依存ファイルの使用要件は、通常、ビルドツリーとインストールツリーで異なります。 &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; と &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; ジェネレータ式は、使用位置に基づいて個別使用の要件を記述するために使用することができます。相対パスは &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 式内で許可され、インストールプレフィックスに関連して解釈されます。例えば：</target>
        </trans-unit>
        <trans-unit id="33752246473e44877194f4c9ccca77da1be8eb56" translate="yes" xml:space="preserve">
          <source>Link flags specified here are inserted into the link command in the same place as the link libraries. This might not be correct, depending on the linker. Use the &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; target property or &lt;a href=&quot;target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt;&lt;code&gt;target_link_options()&lt;/code&gt;&lt;/a&gt; command to add link flags explicitly. The flags will then be placed at the toolchain-defined flag position in the link command.</source>
          <target state="translated">ここで指定したリンクフラグは、リンクライブラリと同じ場所でlinkコマンドに挿入されます。リンカによっては、これは正しくない場合があります。リンクフラグを明示的に追加するには、&lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; &lt;/a&gt;ターゲットプロパティまたは&lt;a href=&quot;target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt; &lt;code&gt;target_link_options()&lt;/code&gt; &lt;/a&gt;コマンドを使用します。フラグは、リンクコマンドのツールチェーンで定義されたフラグの位置に配置されます。</target>
        </trans-unit>
        <trans-unit id="83359e6ad72de707c3a2f1ef1482680899ef79f1" translate="yes" xml:space="preserve">
          <source>Link libraries by full path even in implicit directories.</source>
          <target state="translated">暗黙のディレクトリでもフルパスでライブラリをリンクします。</target>
        </trans-unit>
        <trans-unit id="14083047b165d39e704fd9d398460fe872c9caa3" translate="yes" xml:space="preserve">
          <source>Link libraries to all targets added later.</source>
          <target state="translated">後で追加されたすべてのターゲットにライブラリをリンクします。</target>
        </trans-unit>
        <trans-unit id="fba1336f71e3b8d8812bc5830620a3de3e3846b0" translate="yes" xml:space="preserve">
          <source>Link libraries to swig module:</source>
          <target state="translated">ライブラリをswigモジュールにリンクします。</target>
        </trans-unit>
        <trans-unit id="2d07a6a8b36cd3ae8edb0887e25115aeeb4da214" translate="yes" xml:space="preserve">
          <source>Link the target using the C++ linker tool (obsolete).</source>
          <target state="translated">C++リンカ・ツールを使用してターゲットをリンクします(廃止されました)。</target>
        </trans-unit>
        <trans-unit id="e0c454888d257808ea084fbec2b78eb410b84da6" translate="yes" xml:space="preserve">
          <source>Link these to use BZip2</source>
          <target state="translated">これらをリンクしてBZip2を使用する</target>
        </trans-unit>
        <trans-unit id="7924c2fc63d8b06519c041c2ec246f61b485c603" translate="yes" xml:space="preserve">
          <source>Link to these if you need to link against the exslt library.</source>
          <target state="translated">exslt ライブラリに対してリンクする必要がある場合は、これらにリンクしてください。</target>
        </trans-unit>
        <trans-unit id="59ec70fbd649c685c55088fb883eab5ccb35bc39" translate="yes" xml:space="preserve">
          <source>Link with &lt;code&gt;-cudart=none&lt;/code&gt; or equivalent flag(s) to use no CUDA runtime library.</source>
          <target state="translated">&lt;code&gt;-cudart=none&lt;/code&gt; または同等のフラグとリンクして、CUDAランタイムライブラリを使用しません。</target>
        </trans-unit>
        <trans-unit id="deb89ee46e96906174c4a9ac0d4e1b6da16bab12" translate="yes" xml:space="preserve">
          <source>Link with &lt;code&gt;-cudart=shared&lt;/code&gt; or equivalent flag(s) to use a dynamically-linked CUDA runtime library.</source>
          <target state="translated">動的にリンクされたCUDAランタイムライブラリを使用するには、 &lt;code&gt;-cudart=shared&lt;/code&gt; または同等のフラグでリンクします。</target>
        </trans-unit>
        <trans-unit id="d068d4ea382da4de6bd9225e40926898dec251ae" translate="yes" xml:space="preserve">
          <source>Link with &lt;code&gt;-cudart=static&lt;/code&gt; or equivalent flag(s) to use a statically-linked CUDA runtime library.</source>
          <target state="translated">&lt;code&gt;-cudart=static&lt;/code&gt; または同等のフラグでリンクして、静的にリンクされたCUDAランタイムライブラリを使用します。</target>
        </trans-unit>
        <trans-unit id="bd8775a4b04b16dd310081e33a82811f46683343" translate="yes" xml:space="preserve">
          <source>Linker flag to be used to specify a &lt;code&gt;.def&lt;/code&gt; file for dll creation.</source>
          <target state="translated">DLL作成用の &lt;code&gt;.def&lt;/code&gt; ファイルを指定するために使用されるリンカーフラグ。</target>
        </trans-unit>
        <trans-unit id="5f40c95d128f8d0b322f7abd1a9f30c68b3fcd15" translate="yes" xml:space="preserve">
          <source>Linker flags for MPI programs.</source>
          <target state="translated">MPIプログラムのリンカフラグ。</target>
        </trans-unit>
        <trans-unit id="5c00b3b7b8e668799ba268c093ac3bbe6cf568f8" translate="yes" xml:space="preserve">
          <source>Linker flags to be used to create executables.</source>
          <target state="translated">実行ファイルの作成に使用するリンカフラグ。</target>
        </trans-unit>
        <trans-unit id="60e98971e6c589c940537f70b749bf8d3bc026da" translate="yes" xml:space="preserve">
          <source>Linker flags to be used to create modules.</source>
          <target state="translated">モジュールを作成する際に使用するリンカフラグ。</target>
        </trans-unit>
        <trans-unit id="c2bf79d512366ac0e24e9710bf0fb67a79bea2b3" translate="yes" xml:space="preserve">
          <source>Linker flags to be used to create shared libraries.</source>
          <target state="translated">共有ライブラリを作成するために使用するリンカフラグ。</target>
        </trans-unit>
        <trans-unit id="b8ac2eefa8bef732f5ce615412014b8948247a35" translate="yes" xml:space="preserve">
          <source>Linker flags to be used to create static libraries.</source>
          <target state="translated">スタティックライブラリを作成する際に使用するリンカフラグ。</target>
        </trans-unit>
        <trans-unit id="efcbb30ef14dcce7a4053fc793959e787134b546" translate="yes" xml:space="preserve">
          <source>Linking Object Libraries</source>
          <target state="translated">オブジェクトライブラリのリンク</target>
        </trans-unit>
        <trans-unit id="b3bff7095e80135ddc8d8585d859c9f31cf78f34" translate="yes" xml:space="preserve">
          <source>Links to available documentation and community resources may be found on this web page.</source>
          <target state="translated">利用可能なドキュメントやコミュニティのリソースへのリンクは、このウェブページで見つけることができます。</target>
        </trans-unit>
        <trans-unit id="370441f3fd35c3b9beef515e04ebf5bbea33eb54" translate="yes" xml:space="preserve">
          <source>Linux-specific</source>
          <target state="translated">Linux-specific</target>
        </trans-unit>
        <trans-unit id="fdde76936d4b5732be629827a3727f3c2fad9dfc" translate="yes" xml:space="preserve">
          <source>List &lt;code&gt;CACHE&lt;/code&gt; variables will run CMake and list all the variables from the CMake &lt;code&gt;CACHE&lt;/code&gt; that are not marked as &lt;code&gt;INTERNAL&lt;/code&gt; or &lt;a href=&quot;../prop_cache/advanced#prop_cache:ADVANCED&quot; id=&quot;index-0-prop_cache:ADVANCED&quot;&gt;&lt;code&gt;ADVANCED&lt;/code&gt;&lt;/a&gt;. This will effectively display current CMake settings, which can then be changed with &lt;code&gt;-D&lt;/code&gt; option. Changing some of the variables may result in more variables being created. If &lt;code&gt;A&lt;/code&gt; is specified, then it will display also advanced variables. If &lt;code&gt;H&lt;/code&gt; is specified, it will also display help for each variable.</source>
          <target state="translated">リスト &lt;code&gt;CACHE&lt;/code&gt; 変数はCMakeを実行し、 &lt;code&gt;INTERNAL&lt;/code&gt; または&lt;a href=&quot;../prop_cache/advanced#prop_cache:ADVANCED&quot; id=&quot;index-0-prop_cache:ADVANCED&quot;&gt; &lt;code&gt;ADVANCED&lt;/code&gt; &lt;/a&gt;としてマークされていないCMake &lt;code&gt;CACHE&lt;/code&gt; からのすべての変数をリストします。これにより、現在のCMake設定が効果的に表示され、 &lt;code&gt;-D&lt;/code&gt; オプションで変更できます。一部の変数を変更すると、より多くの変数が作成される可能性があります。場合 &lt;code&gt;A&lt;/code&gt; が指定されている、それはまた、先進的な変数を表示します。場合 &lt;code&gt;H&lt;/code&gt; が指定され、それはまた、各変数のヘルプを表示します。</target>
        </trans-unit>
        <trans-unit id="4dc48f438aae2cd9880c9a9748d49daeaa79adf3" translate="yes" xml:space="preserve">
          <source>List TARGET_OBJECTS in SOURCES target property.</source>
          <target state="translated">SOURCES targetプロパティにTARGET_OBJECTSをリストアップします。</target>
        </trans-unit>
        <trans-unit id="a025a8b217f304b78cb2f0fdd5f2c0720f013546" translate="yes" xml:space="preserve">
          <source>List additional properties to export for a target.</source>
          <target state="translated">ターゲットにエクスポートする追加のプロパティをリストアップします。</target>
        </trans-unit>
        <trans-unit id="c1abc7d41ba446ca12b616918bc7ded62ca0189d" translate="yes" xml:space="preserve">
          <source>List archive contents. The &lt;code&gt;&amp;lt;pathname&amp;gt;...&lt;/code&gt; argument could be used to list only selected files or directories.</source>
          <target state="translated">アーカイブの内容を一覧表示します。 &lt;code&gt;&amp;lt;pathname&amp;gt;...&lt;/code&gt; 引数リストのみ、選択したファイルまたはディレクトリに使用することができます。</target>
        </trans-unit>
        <trans-unit id="6b537b87099043cc63ef054045ade58c2f8c6ca2" translate="yes" xml:space="preserve">
          <source>List commands with help available and exit.</source>
          <target state="translated">ヘルプが利用可能なコマンドをリストアップして終了します。</target>
        </trans-unit>
        <trans-unit id="ec8be6cdc3f4b8e0deb5cfb4a1c67709509e3570" translate="yes" xml:space="preserve">
          <source>List help manuals available and exit.</source>
          <target state="translated">利用可能なヘルプマニュアルをリストアップして終了します。</target>
        </trans-unit>
        <trans-unit id="d2aaa4dc59293f80eead68f2dee3a02a6bd1f441" translate="yes" xml:space="preserve">
          <source>List modules with help available and exit.</source>
          <target state="translated">ヘルプが利用可能なモジュールをリストアップして終了します。</target>
        </trans-unit>
        <trans-unit id="a09c50f043c7cc560e4b93dcf230360cd50c4b9c" translate="yes" xml:space="preserve">
          <source>List non-advanced cached variables.</source>
          <target state="translated">キャッシュされていない変数をリストアップします。</target>
        </trans-unit>
        <trans-unit id="fbba8e27d2c1e7f3d5ed08725e9cf83a607fdc49" translate="yes" xml:space="preserve">
          <source>List of &lt;code&gt;Key=Value&lt;/code&gt; records to be set per target as target properties &lt;code&gt;VS_GLOBAL_&amp;lt;variable&amp;gt;&lt;/code&gt; with &lt;code&gt;variable=Key&lt;/code&gt; and value &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;variable=Key&lt;/code&gt; とvalue &lt;code&gt;Value&lt;/code&gt; を持つターゲットプロパティ &lt;code&gt;VS_GLOBAL_&amp;lt;variable&amp;gt;&lt;/code&gt; としてターゲットごとに設定される &lt;code&gt;Key=Value&lt;/code&gt; レコードのリスト。</target>
        </trans-unit>
        <trans-unit id="915df2f87fff454b88d546d3ebff01f1a089458f" translate="yes" xml:space="preserve">
          <source>List of C features known to this version of CMake.</source>
          <target state="translated">このバージョンのCMakeで知られているCの機能の一覧です。</target>
        </trans-unit>
        <trans-unit id="a9cb1eebec9a08b3ce31ea034a369ba0289994b2" translate="yes" xml:space="preserve">
          <source>List of C++ features known to this version of CMake.</source>
          <target state="translated">CMake のこのバージョンで知られている C++機能のリスト。</target>
        </trans-unit>
        <trans-unit id="134e92ada5709426f1cea34a5c25490c0bc22cf0" translate="yes" xml:space="preserve">
          <source>List of CMake scripts to execute after CPack has installed the files to be packaged into a staging directory and before producing the package(s) from those files. See also &lt;a href=&quot;#variable:CPACK_INSTALL_SCRIPTS&quot; id=&quot;index-0-variable:CPACK_INSTALL_SCRIPTS&quot;&gt;&lt;code&gt;CPACK_INSTALL_SCRIPTS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#variable:CPACK_POST_BUILD_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_POST_BUILD_SCRIPTS&quot;&gt;&lt;code&gt;CPACK_POST_BUILD_SCRIPTS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">CPackがパッケージ化するファイルをステージングディレクトリにインストールした後、それらのファイルからパッケージを作成する前に実行するCMakeスクリプトのリスト。&lt;a href=&quot;#variable:CPACK_INSTALL_SCRIPTS&quot; id=&quot;index-0-variable:CPACK_INSTALL_SCRIPTS&quot;&gt; &lt;code&gt;CPACK_INSTALL_SCRIPTS&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#variable:CPACK_POST_BUILD_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_POST_BUILD_SCRIPTS&quot;&gt; &lt;code&gt;CPACK_POST_BUILD_SCRIPTS&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="b927f6b89abdb56b0ec03be555fe13b067cb6f9a" translate="yes" xml:space="preserve">
          <source>List of CMake scripts to execute after CPack has produced the resultant packages and before copying them back to the build directory. See also &lt;a href=&quot;#variable:CPACK_INSTALL_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_INSTALL_SCRIPTS&quot;&gt;&lt;code&gt;CPACK_INSTALL_SCRIPTS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CPACK_PRE_BUILD_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_PRE_BUILD_SCRIPTS&quot;&gt;&lt;code&gt;CPACK_PRE_BUILD_SCRIPTS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#variable:CPACK_PACKAGE_FILES&quot; id=&quot;index-0-variable:CPACK_PACKAGE_FILES&quot;&gt;&lt;code&gt;CPACK_PACKAGE_FILES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">CPackが結果のパッケージを生成した後、それらをビルドディレクトリにコピーして戻す前に実行するCMakeスクリプトのリスト。&lt;a href=&quot;#variable:CPACK_INSTALL_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_INSTALL_SCRIPTS&quot;&gt; &lt;code&gt;CPACK_INSTALL_SCRIPTS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#variable:CPACK_PRE_BUILD_SCRIPTS&quot; id=&quot;index-1-variable:CPACK_PRE_BUILD_SCRIPTS&quot;&gt; &lt;code&gt;CPACK_PRE_BUILD_SCRIPTS&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#variable:CPACK_PACKAGE_FILES&quot; id=&quot;index-0-variable:CPACK_PACKAGE_FILES&quot;&gt; &lt;code&gt;CPACK_PACKAGE_FILES&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="ebeb870d8d6a741199511c8afa6997886bd1f7bd" translate="yes" xml:space="preserve">
          <source>List of CPack generators to use. If not specified, CPack will create a set of options following the naming pattern &lt;a href=&quot;#variable:CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&quot; id=&quot;index-0-variable:CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&quot;&gt;&lt;code&gt;CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&lt;/code&gt;&lt;/a&gt; (e.g. &lt;code&gt;CPACK_BINARY_NSIS&lt;/code&gt;) allowing the user to enable/disable individual generators. If the &lt;code&gt;-G&lt;/code&gt; option is given on the &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-4-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; command line, it will override this variable and any &lt;code&gt;CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&lt;/code&gt; options.</source>
          <target state="translated">使用するCPackジェネレーターのリスト。指定されていない場合、CPackは、ユーザーが個々のジェネレーターを有効/無効にできるようにする命名パターン&lt;a href=&quot;#variable:CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&quot; id=&quot;index-0-variable:CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&quot;&gt; &lt;code&gt;CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;CPACK_BINARY_NSIS&lt;/code&gt; など）に従って一連のオプションを作成します。場合は &lt;code&gt;-G&lt;/code&gt; オプションが与えられているに&lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-4-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; の&lt;/a&gt;コマンドラインは、この変数と任意のオーバーライドします &lt;code&gt;CPACK_BINARY_&amp;lt;GENNAME&amp;gt;&lt;/code&gt; オプションを。</target>
        </trans-unit>
        <trans-unit id="f5e63eec28c4bad3cecd4eef7b93d40da1dd80f0" translate="yes" xml:space="preserve">
          <source>List of CUDA features known to this version of CMake.</source>
          <target state="translated">このバージョンのCMakeで知られているCUDA機能の一覧です。</target>
        </trans-unit>
        <trans-unit id="c1ce195e071f38f585a1192c5903ddb7b679d85a" translate="yes" xml:space="preserve">
          <source>List of absolute paths of all files currently on the stack of file inclusion, with the bottom-most file first and the currently processed file (that is, &lt;code&gt;current_list_file&lt;/code&gt;) last.</source>
          <target state="translated">現在ファイルインクルードのスタックにあるすべてのファイルの絶対パスのリスト。一番下のファイルが最初で、現在処理されているファイル（つまり、 &lt;code&gt;current_list_file&lt;/code&gt; ）が最後です。</target>
        </trans-unit>
        <trans-unit id="6fd671b1ceed778c01ed034278f2055d8993d58f" translate="yes" xml:space="preserve">
          <source>List of additional directories to be searched for imported .proto files.</source>
          <target state="translated">インポートされた.protoファイルを検索するための追加のディレクトリのリスト。</target>
        </trans-unit>
        <trans-unit id="c10ae89d5d7a6cb4871964ad645e45d92a10bb0f" translate="yes" xml:space="preserve">
          <source>List of additional directories to search for dependencies. On Linux platforms, these directories are searched if the dependency is not found in any of the other usual paths. If it is found in such a directory, a warning is issued, because it means that the file is incomplete (it does not list all of the directories that contain its dependencies). On Windows platforms, these directories are searched if the dependency is not found in any of the other search paths, but no warning is issued, because searching other paths is a normal part of Windows dependency resolution. On Apple platforms, this argument has no effect.</source>
          <target state="translated">依存関係を検索するための追加ディレクトリのリスト。Linux プラットフォームでは、依存関係が他の通常のパスのどれにも見つからない場合、これらのディレクトリが検索されます。このようなディレクトリで見つかった場合は、ファイルが不完全であることを意味するため、警告が表示されます (依存関係を含むすべてのディレクトリをリストアップしているわけではありません)。Windows プラットフォームでは、他の検索パスのどれにも依存関係が見つからない場合、これらのディレクトリが検索されますが、他のパスの検索は Windows の依存関係解決の通常の部分であるため、警告は出ません。Apple プラットフォームでは、この引数は何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="1dc4569891b36fef8b6d93bc0ad9e73cc2459551" translate="yes" xml:space="preserve">
          <source>List of additional options to pass to the compiler.</source>
          <target state="translated">コンパイラに渡す追加オプションのリスト。</target>
        </trans-unit>
        <trans-unit id="6f28890a8812a2d74e3437708bc18ae8eb848d9b" translate="yes" xml:space="preserve">
          <source>List of all source files which are relevant for setting the &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; properties (including &lt;code&gt;.cs&lt;/code&gt;, &lt;code&gt;.resx&lt;/code&gt; and &lt;code&gt;.Designer.cs&lt;/code&gt; extensions).</source>
          <target state="translated">&lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; プロパティの設定に関連するすべてのソースファイルのリスト（ &lt;code&gt;.cs&lt;/code&gt; 、 &lt;code&gt;.resx&lt;/code&gt; 、 &lt;code&gt;.Designer.cs&lt;/code&gt; 拡張子を含む）。</target>
        </trans-unit>
        <trans-unit id="0d7f0489b33c1aaa23ffb3dabbf745313bc7c84d" translate="yes" xml:space="preserve">
          <source>List of all source files which are relevant for setting the &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; properties (including &lt;code&gt;.cs&lt;/code&gt;, &lt;code&gt;.resx&lt;/code&gt;, &lt;code&gt;.settings&lt;/code&gt; and &lt;code&gt;.Designer.cs&lt;/code&gt; extensions).</source>
          <target state="translated">&lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; プロパティの設定に関連するすべてのソースファイルのリスト（ &lt;code&gt;.cs&lt;/code&gt; 、 &lt;code&gt;.resx&lt;/code&gt; 、 &lt;code&gt;.settings&lt;/code&gt; 、 &lt;code&gt;.Designer.cs&lt;/code&gt; 拡張子を含む）。</target>
        </trans-unit>
        <trans-unit id="5132d66809ea5e79e4b772bef7578b957e31b14e" translate="yes" xml:space="preserve">
          <source>List of all source files which are relevant for setting the &lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; properties (including &lt;code&gt;.cs&lt;/code&gt;, &lt;code&gt;.xaml&lt;/code&gt;, and &lt;code&gt;.xaml.cs&lt;/code&gt; extensions).</source>
          <target state="translated">&lt;code&gt;VS_CSHARP_&amp;lt;tagname&amp;gt;&lt;/code&gt; プロパティの設定に関連するすべてのソースファイルのリスト（ &lt;code&gt;.cs&lt;/code&gt; 、 &lt;code&gt;.xaml&lt;/code&gt; 、および &lt;code&gt;.xaml.cs&lt;/code&gt; 拡張子を含む）。</target>
        </trans-unit>
        <trans-unit id="7ff26866cfbea9e91258582fd8af4cf6e10bb2fa" translate="yes" xml:space="preserve">
          <source>List of architectures to generate device code for.</source>
          <target state="translated">デバイスコードを生成するアーキテクチャの一覧です。</target>
        </trans-unit>
        <trans-unit id="e88c45bc1851bd78ba66ec0646eaa510ec364553" translate="yes" xml:space="preserve">
          <source>List of cache variables available in the current directory.</source>
          <target state="translated">カレントディレクトリで利用可能なキャッシュ変数のリスト。</target>
        </trans-unit>
        <trans-unit id="8c2aa33f8853a72274e522af0c187d0e27ec3f2e" translate="yes" xml:space="preserve">
          <source>List of command names.</source>
          <target state="translated">コマンド名の一覧です。</target>
        </trans-unit>
        <trans-unit id="195342bce7ade901a916858e8e538cae3bb39814" translate="yes" xml:space="preserve">
          <source>List of desktop links to create. Each desktop link requires a corresponding start menu shortcut as created by &lt;a href=&quot;#variable:CPACK_PACKAGE_EXECUTABLES&quot; id=&quot;index-0-variable:CPACK_PACKAGE_EXECUTABLES&quot;&gt;&lt;code&gt;CPACK_PACKAGE_EXECUTABLES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作成するデスクトップリンクのリスト。各デスクトップリンクには、&lt;a href=&quot;#variable:CPACK_PACKAGE_EXECUTABLES&quot; id=&quot;index-0-variable:CPACK_PACKAGE_EXECUTABLES&quot;&gt; &lt;code&gt;CPACK_PACKAGE_EXECUTABLES&lt;/code&gt; &lt;/a&gt;によって作成された対応するスタートメニューショートカットが必要です。</target>
        </trans-unit>
        <trans-unit id="50067f05db2343c467e1356119fbd2d6bc0b2308" translate="yes" xml:space="preserve">
          <source>List of direct link dependencies.</source>
          <target state="translated">ダイレクトリンクの依存関係のリスト。</target>
        </trans-unit>
        <trans-unit id="adb417d50f7ac59698590014e9a49cefe69cdd46" translate="yes" xml:space="preserve">
          <source>List of directories to use for the link step of shared library, module and executable targets.</source>
          <target state="translated">共有ライブラリ、モジュール、実行可能ターゲットのリンクステップに使用するディレクトリのリストです。</target>
        </trans-unit>
        <trans-unit id="c31d069636aa94d8e23d4c7610e109c56467745c" translate="yes" xml:space="preserve">
          <source>List of executable files to read for dependencies. These are executables that are typically created with &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, but they do not have to be created by CMake. On Apple platforms, the paths to these files determine the value of &lt;code&gt;@executable_path&lt;/code&gt; when recursively resolving the libraries. Specifying any kind of library (&lt;code&gt;STATIC&lt;/code&gt;, &lt;code&gt;MODULE&lt;/code&gt;, or &lt;code&gt;SHARED&lt;/code&gt;) here will result in undefined behavior.</source>
          <target state="translated">依存関係を読み取るために読み取る実行可能ファイルのリスト。これらは通常&lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;で作成される実行可能ファイルですが、CMakeで作成する必要はありません。Appleプラットフォームでは、これらのファイルへのパスによって、ライブラリを再帰的に解決するときに &lt;code&gt;@executable_path&lt;/code&gt; の値が決まります。ここで任意の種類のライブラリ（ &lt;code&gt;STATIC&lt;/code&gt; 、 &lt;code&gt;MODULE&lt;/code&gt; 、または &lt;code&gt;SHARED&lt;/code&gt; ）を指定すると、未定義の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="7e9956d2b2cc8b766abcb6054400c39a490f402d" translate="yes" xml:space="preserve">
          <source>List of features known to the C compiler</source>
          <target state="translated">Cコンパイラで知られている機能の一覧</target>
        </trans-unit>
        <trans-unit id="d538651b170b1224ef3f6c4993cbfc990e613466" translate="yes" xml:space="preserve">
          <source>List of features known to the C++ compiler</source>
          <target state="translated">C++コンパイラで知られている機能のリスト</target>
        </trans-unit>
        <trans-unit id="a29b36947e0173d7331688d7e60ec92883f40ddf" translate="yes" xml:space="preserve">
          <source>List of features known to the CUDA compiler</source>
          <target state="translated">CUDAコンパイラで知られている機能の一覧</target>
        </trans-unit>
        <trans-unit id="6cfb9370da805cbbf35f87fd0fae202e1f563767" translate="yes" xml:space="preserve">
          <source>List of features which are disabled during the CMake run.</source>
          <target state="translated">CMake の実行中に無効化される機能の一覧です。</target>
        </trans-unit>
        <trans-unit id="96006cfd7ef5e512f99dd9909a27ac6094dbc39d" translate="yes" xml:space="preserve">
          <source>List of features which are disabled during the CMake run. By default it contains the names of all packages which were not found. This is determined using the &lt;code&gt;&amp;lt;NAME&amp;gt;_FOUND&lt;/code&gt; variables. Packages which are searched &lt;code&gt;QUIET&lt;/code&gt; are not listed. A project can add its own features to this list. This property is used by the macros in &lt;code&gt;FeatureSummary.cmake&lt;/code&gt;.</source>
          <target state="translated">CMakeの実行中に無効になる機能のリスト。デフォルトでは、見つからなかったすべてのパッケージの名前が含まれています。これは、 &lt;code&gt;&amp;lt;NAME&amp;gt;_FOUND&lt;/code&gt; 変数を使用して決定されます。 &lt;code&gt;QUIET&lt;/code&gt; で検索されたパッケージはリストされません。プロジェクトはこのリストに独自の機能を追加できます。このプロパティは、 &lt;code&gt;FeatureSummary.cmake&lt;/code&gt; のマクロによって使用されます。</target>
        </trans-unit>
        <trans-unit id="c70444e2e6956567714faa86689cfc0debfde384" translate="yes" xml:space="preserve">
          <source>List of features which are enabled during the CMake run.</source>
          <target state="translated">CMake の実行中に有効になっている機能のリストです。</target>
        </trans-unit>
        <trans-unit id="4e1d7e880ed735b92e2f32efa64118ef827f031e" translate="yes" xml:space="preserve">
          <source>List of features which are enabled during the CMake run. By default it contains the names of all packages which were found. This is determined using the &lt;code&gt;&amp;lt;NAME&amp;gt;_FOUND&lt;/code&gt; variables. Packages which are searched &lt;code&gt;QUIET&lt;/code&gt; are not listed. A project can add its own features to this list. This property is used by the macros in &lt;code&gt;FeatureSummary.cmake&lt;/code&gt;.</source>
          <target state="translated">CMakeの実行中に有効になる機能のリスト。デフォルトでは、見つかったすべてのパッケージの名前が含まれています。これは、 &lt;code&gt;&amp;lt;NAME&amp;gt;_FOUND&lt;/code&gt; 変数を使用して決定されます。 &lt;code&gt;QUIET&lt;/code&gt; で検索されたパッケージはリストされません。プロジェクトはこのリストに独自の機能を追加できます。このプロパティは、 &lt;code&gt;FeatureSummary.cmake&lt;/code&gt; のマクロによって使用されます。</target>
        </trans-unit>
        <trans-unit id="4a7f1e9da8df69f074f8e124e9ae7140e19d657c" translate="yes" xml:space="preserve">
          <source>List of file names.</source>
          <target state="translated">ファイル名の一覧です。</target>
        </trans-unit>
        <trans-unit id="a3cfcdc6c343c24fbe87ba8aca9cdda4b1cd1a77" translate="yes" xml:space="preserve">
          <source>List of files in the source tree that will be stripped. Starting with CMake 2.6.0, &lt;code&gt;CPACK_SOURCE_STRIP_FILES&lt;/code&gt; will be a boolean variable which enables stripping of all files (a list of files evaluates to &lt;code&gt;TRUE&lt;/code&gt; in CMake, so this change is compatible).</source>
          <target state="translated">削除されるソースツリー内のファイルのリスト。CMake 2.6.0以降、 &lt;code&gt;CPACK_SOURCE_STRIP_FILES&lt;/code&gt; はブール変数になり、すべてのファイルを削除できるようになります（ファイルのリストはCMakeで &lt;code&gt;TRUE&lt;/code&gt; と評価されるため、この変更には互換性があります）。</target>
        </trans-unit>
        <trans-unit id="0713f0e66444a60b68d57eb1329d3610a93120c4" translate="yes" xml:space="preserve">
          <source>List of files required to run the test.</source>
          <target state="translated">テストの実行に必要なファイルの一覧です。</target>
        </trans-unit>
        <trans-unit id="5d281409a91fbae42c6a5d40afbf23296d870059" translate="yes" xml:space="preserve">
          <source>List of files required to run the test. The filenames are relative to the test &lt;a href=&quot;working_directory#prop_test:WORKING_DIRECTORY&quot; id=&quot;index-0-prop_test:WORKING_DIRECTORY&quot;&gt;&lt;code&gt;WORKING_DIRECTORY&lt;/code&gt;&lt;/a&gt; unless an absolute path is specified.</source>
          <target state="translated">テストの実行に必要なファイルのリスト。絶対パスが指定されていない限り、ファイル名はテスト&lt;a href=&quot;working_directory#prop_test:WORKING_DIRECTORY&quot; id=&quot;index-0-prop_test:WORKING_DIRECTORY&quot;&gt; &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; に&lt;/a&gt;関連しています。</target>
        </trans-unit>
        <trans-unit id="6f0a4464c42be55e78ee694af53c7cb45f10190c" translate="yes" xml:space="preserve">
          <source>List of files to be stripped. Starting with CMake 2.6.0, &lt;code&gt;CPACK_STRIP_FILES&lt;/code&gt; will be a boolean variable which enables stripping of all files (a list of files evaluates to &lt;code&gt;TRUE&lt;/code&gt; in CMake, so this change is compatible).</source>
          <target state="translated">削除するファイルのリスト。CMake 2.6.0以降、 &lt;code&gt;CPACK_STRIP_FILES&lt;/code&gt; はブール変数になり、すべてのファイルの削除が可能になります（ファイルのリストはCMakeで &lt;code&gt;TRUE&lt;/code&gt; と評価されるため、この変更には互換性があります）。</target>
        </trans-unit>
        <trans-unit id="50e719397ab892b587649543d2b80df31640a748" translate="yes" xml:space="preserve">
          <source>List of files which have been installed using an &lt;code&gt;ABSOLUTE DESTINATION&lt;/code&gt; path.</source>
          <target state="translated">&lt;code&gt;ABSOLUTE DESTINATION&lt;/code&gt; パスを使用してインストールされたファイルのリスト。</target>
        </trans-unit>
        <trans-unit id="e4ead512df46822a131f20422edf3867142d694e" translate="yes" xml:space="preserve">
          <source>List of four values that specify what project to install. The four values are: Build directory, Project Name, Project Component, Directory. If omitted, CPack will build an installer that installs everything.</source>
          <target state="translated">インストールするプロジェクトを指定する4つの値のリストです。4つの値は以下の通りです。ビルドディレクトリ、プロジェクト名、プロジェクトコンポーネント、ディレクトリです。省略した場合、CPackはすべてをインストールするインストーラをビルドします。</target>
        </trans-unit>
        <trans-unit id="5afe2616a886cb197524ef8c90d4402e744ed06c" translate="yes" xml:space="preserve">
          <source>List of generators used for the source packages. As with &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-8-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt;, if this is not specified then CPack will create a set of options (e.g. &lt;code&gt;CPACK_SOURCE_ZIP&lt;/code&gt;) allowing users to select which packages will be generated.</source>
          <target state="translated">ソースパッケージに使用されるジェネレーターのリスト。&lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-8-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; &lt;/a&gt;と同様に、これが指定されていない場合、CPackはユーザーが生成するパッケージを選択できるようにするオプションのセット（ &lt;code&gt;CPACK_SOURCE_ZIP&lt;/code&gt; など）を作成します。</target>
        </trans-unit>
        <trans-unit id="efad7d5a007ff906b77a881264cfc9ba71a330e0" translate="yes" xml:space="preserve">
          <source>List of header files to precompile.</source>
          <target state="translated">プリコンパイルするヘッダファイルのリスト。</target>
        </trans-unit>
        <trans-unit id="5a81164f2d731d66ce810f6c2e5f4090d022a8d8" translate="yes" xml:space="preserve">
          <source>List of instruction set architectures to generate code for.</source>
          <target state="translated">コードを生成する命令セットアーキテクチャのリスト。</target>
        </trans-unit>
        <trans-unit id="92759b8e3ff6cff83b2ee1110b8f32c767f70ded" translate="yes" xml:space="preserve">
          <source>List of interface header files to precompile into consuming targets.</source>
          <target state="translated">コンシューマターゲットにプリコンパイルするためのインターフェイスヘッダファイルのリスト。</target>
        </trans-unit>
        <trans-unit id="b58c5b7942a4d3e614b21fac34466c0251db3058" translate="yes" xml:space="preserve">
          <source>List of interface options to pass to uic.</source>
          <target state="translated">uic に渡すインターフェースオプションのリスト。</target>
        </trans-unit>
        <trans-unit id="66f8d7e4959cd55fc4db905f1f6aa0dfe92ba9d0" translate="yes" xml:space="preserve">
          <source>List of interface sources to compile into consuming targets.</source>
          <target state="translated">コンシューマターゲットにコンパイルするインターフェースソースのリスト。</target>
        </trans-unit>
        <trans-unit id="a263d67d7dcf4130eb0596168022f4d29edfb2d3" translate="yes" xml:space="preserve">
          <source>List of libraries when using &lt;code&gt;curl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;curl&lt;/code&gt; を使用する場合のライブラリのリスト。</target>
        </trans-unit>
        <trans-unit id="60f173df2a5792ed4de974358e0da4848736dfcf" translate="yes" xml:space="preserve">
          <source>List of libraries when using ALSA.</source>
          <target state="translated">ALSAを使用する場合のライブラリの一覧です。</target>
        </trans-unit>
        <trans-unit id="fc4ce994d1bc8fec54c702e6f23b819acbab5f07" translate="yes" xml:space="preserve">
          <source>List of library files to read for dependencies. These are libraries that are typically created with &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library(SHARED)&lt;/code&gt;&lt;/a&gt;, but they do not have to be created by CMake. Specifying &lt;code&gt;STATIC&lt;/code&gt; libraries, &lt;code&gt;MODULE&lt;/code&gt; libraries, or executables here will result in undefined behavior.</source>
          <target state="translated">依存関係を読み取るために読み取るライブラリファイルのリスト。これらは通常&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library(SHARED)&lt;/code&gt; &lt;/a&gt;で作成されるライブラリですが、CMakeで作成する必要はありません。ここで &lt;code&gt;STATIC&lt;/code&gt; ライブラリ、 &lt;code&gt;MODULE&lt;/code&gt; ライブラリ、または実行可能ファイルを指定すると、動作が未定義になります。</target>
        </trans-unit>
        <trans-unit id="15664c885f9dfd394c9b8bb343a372f80a038d23" translate="yes" xml:space="preserve">
          <source>List of linker search directories.</source>
          <target state="translated">リンカー検索ディレクトリの一覧です。</target>
        </trans-unit>
        <trans-unit id="724c1280740ddf3a03a3def89967f3f10a08859a" translate="yes" xml:space="preserve">
          <source>List of loadable module files to read for dependencies. These are modules that are typically created with &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library(MODULE)&lt;/code&gt;&lt;/a&gt;, but they do not have to be created by CMake. They are typically used by calling &lt;code&gt;dlopen()&lt;/code&gt; at runtime rather than linked at link time with &lt;code&gt;ld -l&lt;/code&gt;. Specifying &lt;code&gt;STATIC&lt;/code&gt; libraries, &lt;code&gt;SHARED&lt;/code&gt; libraries, or executables here will result in undefined behavior.</source>
          <target state="translated">依存関係を読み取るために読み取るロード可能なモジュールファイルのリスト。これらは通常&lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library(MODULE)&lt;/code&gt; &lt;/a&gt;で作成されるモジュールですが、CMakeで作成する必要はありません。これらは通常、リンク時に &lt;code&gt;ld -l&lt;/code&gt; でリンクされるのではなく、実行時に &lt;code&gt;dlopen()&lt;/code&gt; を呼び出すことによって使用されます。ここで &lt;code&gt;STATIC&lt;/code&gt; ライブラリ、 &lt;code&gt;SHARED&lt;/code&gt; ライブラリ、または実行可能ファイルを指定すると、未定義の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="d99e96e7d3acd4bd1f740bc1d75b7fffdbc36158" translate="yes" xml:space="preserve">
          <source>List of macro commands available in the current directory.</source>
          <target state="translated">カレントディレクトリで利用可能なマクロコマンドのリスト。</target>
        </trans-unit>
        <trans-unit id="6727d2c7040e8c86fa279088a0a53d645aae2692" translate="yes" xml:space="preserve">
          <source>List of natures to add to the generated Eclipse project file.</source>
          <target state="translated">生成されたEclipseプロジェクトファイルに追加する性質のリスト。</target>
        </trans-unit>
        <trans-unit id="7bd23c607b6bfd80bb9168a873f1db33c16ceb7d" translate="yes" xml:space="preserve">
          <source>List of node JSON objects with members:</source>
          <target state="translated">メンバーを持つノードJSONオブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="aa6369ac2ae9eb0d2ebb6f2b84232f2595a1a60c" translate="yes" xml:space="preserve">
          <source>List of objects resulting from build of &lt;code&gt;objLib&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;objLib&lt;/code&gt; のビルドから生成されたオブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="156f578524088af067c3096f5686c575e51da96c" translate="yes" xml:space="preserve">
          <source>List of options to pass to the compiler.</source>
          <target state="translated">コンパイラに渡すオプションのリスト。</target>
        </trans-unit>
        <trans-unit id="4c32c951d57fc2b9ed86770cdc48deec6b6231fc" translate="yes" xml:space="preserve">
          <source>List of options to use for the link step of shared library, module and executable targets as well as the device link step.</source>
          <target state="translated">共有ライブラリ、モジュール、実行可能ターゲット、およびデバイスリンクステップのリンクステップに使用するオプションのリストです。</target>
        </trans-unit>
        <trans-unit id="b3fe610acdff893b7d82e7ed1c248064bc2ae447" translate="yes" xml:space="preserve">
          <source>List of options to use for the link step of shared library, module and executable targets as well as the device link step. Targets that are static libraries need to use the &lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt;&lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">共有ライブラリ、モジュール、実行可能ターゲットのリンクステップ、およびデバイスのリンクステップに使用するオプションのリスト。静的ライブラリであるターゲットは、&lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt; &lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt; &lt;/a&gt;ターゲットプロパティを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="706fa0ec2243e87f5502ced66237d826b2b35f77" translate="yes" xml:space="preserve">
          <source>List of options to use for the link step of shared library, module and executable targets.</source>
          <target state="translated">共有ライブラリ、モジュール、実行可能ターゲットのリンクステップに使用するオプションのリストです。</target>
        </trans-unit>
        <trans-unit id="a1bc657056b0306d31aa2f77305080e6fde0247c" translate="yes" xml:space="preserve">
          <source>List of options to use for the link step of shared library, module and executable targets. Targets that are static libraries need to use the &lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt;&lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">共有ライブラリ、モジュール、および実行可能ターゲットのリンク手順に使用するオプションのリスト。静的ライブラリであるターゲットは、&lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt; &lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt; &lt;/a&gt;ターゲットプロパティを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ecab3c53449208064d5c57b5c19e1bca174fcb62" translate="yes" xml:space="preserve">
          <source>List of package files created in the staging directory, with each file provided as a full absolute path. This variable is populated by CPack just before invoking the post-build scripts listed in &lt;a href=&quot;#variable:CPACK_POST_BUILD_SCRIPTS&quot; id=&quot;index-2-variable:CPACK_POST_BUILD_SCRIPTS&quot;&gt;&lt;code&gt;CPACK_POST_BUILD_SCRIPTS&lt;/code&gt;&lt;/a&gt;. It is the preferred way for the post-build scripts to know the set of package files to operate on. Projects should not try to set this variable themselves.</source>
          <target state="translated">ステージングディレクトリに作成されたパッケージファイルのリスト。各ファイルは完全な絶対パスとして提供されます。この変数は、&lt;a href=&quot;#variable:CPACK_POST_BUILD_SCRIPTS&quot; id=&quot;index-2-variable:CPACK_POST_BUILD_SCRIPTS&quot;&gt; &lt;code&gt;CPACK_POST_BUILD_SCRIPTS&lt;/code&gt; に&lt;/a&gt;リストされているビルド後のスクリプトを呼び出す直前にCPackによって入力されます。ビルド後のスクリプトが操作するパッケージファイルのセットを知るための推奨される方法です。プロジェクトは、この変数を自分で設定しようとしないでください。</target>
        </trans-unit>
        <trans-unit id="09189c7c5e83232bbc96061bc18973a20d85ac92" translate="yes" xml:space="preserve">
          <source>List of packages which were found during the CMake run.</source>
          <target state="translated">CMake の実行中に見つかったパッケージのリスト。</target>
        </trans-unit>
        <trans-unit id="15e4378c3f55ae7ad3e541e106cdea93ea0d8e2c" translate="yes" xml:space="preserve">
          <source>List of packages which were found during the CMake run. Whether a package has been found is determined using the &amp;lt;NAME&amp;gt;_FOUND variables.</source>
          <target state="translated">CMakeの実行中に検出されたパッケージのリスト。パッケージが見つかったかどうかは、&amp;lt;NAME&amp;gt; _FOUND変数を使用して決定されます。</target>
        </trans-unit>
        <trans-unit id="2a62ab053dbde5d0483b69d6422032c9dfc01047" translate="yes" xml:space="preserve">
          <source>List of packages which were not found during the CMake run.</source>
          <target state="translated">CMake の実行中に見つからなかったパッケージのリスト。</target>
        </trans-unit>
        <trans-unit id="7ad56d03ca659d64c948892f4638e6f63ea023cd" translate="yes" xml:space="preserve">
          <source>List of packages which were not found during the CMake run. Whether a package has been found is determined using the &amp;lt;NAME&amp;gt;_FOUND variables.</source>
          <target state="translated">CMakeの実行中に見つからなかったパッケージのリスト。パッケージが見つかったかどうかは、&amp;lt;NAME&amp;gt; _FOUND変数を使用して決定されます。</target>
        </trans-unit>
        <trans-unit id="35a5949965d44961947fb77f9fab11454d8295bc" translate="yes" xml:space="preserve">
          <source>List of paths and/or URL(s) of the external project&amp;rsquo;s source. When more than one URL is given, they are tried in turn until one succeeds. A URL may be an ordinary path in the local file system (in which case it must be the only URL provided) or any downloadable URL supported by the &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(DOWNLOAD)&lt;/code&gt;&lt;/a&gt; command. A local filesystem path may refer to either an existing directory or to an archive file, whereas a URL is expected to point to a file which can be treated as an archive. When an archive is used, it will be unpacked automatically unless the &lt;code&gt;DOWNLOAD_NO_EXTRACT&lt;/code&gt; option is set to prevent it. The archive type is determined by inspecting the actual content rather than using logic based on the file extension.</source>
          <target state="translated">外部プロジェクトのソースのパスまたはURL、あるいはその両方のリスト。複数のURLが指定されている場合は、成功するまで順番に試行されます。 URLは、ローカルファイルシステムの通常のパス（この場合、指定された唯一のURLである必要があります）または&lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(DOWNLOAD)&lt;/code&gt; &lt;/a&gt;コマンドでサポートされているダウンロード可能なURLのいずれかです。ローカルファイルシステムのパスは、既存のディレクトリまたはアーカイブファイルを参照できますが、URLはアーカイブとして処理できるファイルを指すことが期待されています。アーカイブを使用すると、 &lt;code&gt;DOWNLOAD_NO_EXTRACT&lt;/code&gt; オプションを設定してアーカイブを防止しない限り、アーカイブは自動的に解凍されます。アーカイブタイプは、ファイル拡張子に基づくロジックを使用するのではなく、実際のコンテンツを検査することによって決定されます。</target>
        </trans-unit>
        <trans-unit id="bc09ccc7063616ef48146c6d7f1f700f1503c46e" translate="yes" xml:space="preserve">
          <source>List of post-exclude regexes through which to filter the names of resolved dependencies.</source>
          <target state="translated">解決された依存関係の名前をフィルタリングするための除外後正規表現のリスト。</target>
        </trans-unit>
        <trans-unit id="5cbee37b2adb438656cd912858e8afc1628e1405" translate="yes" xml:space="preserve">
          <source>List of post-include regexes through which to filter the names of resolved dependencies.</source>
          <target state="translated">解決された依存関係の名前をフィルタリングするためのポストインクルード正規表現のリスト。</target>
        </trans-unit>
        <trans-unit id="303c8171c2eab70cdb2828b9883eac473a7e3bba" translate="yes" xml:space="preserve">
          <source>List of pre-exclude regexes through which to filter the names of not-yet-resolved dependencies.</source>
          <target state="translated">未解決の依存関係の名前をフィルタリングするための事前除外正規表現のリスト。</target>
        </trans-unit>
        <trans-unit id="03d068258fa9524873e35a7becd4638540439d85" translate="yes" xml:space="preserve">
          <source>List of pre-include regexes through which to filter the names of not-yet-resolved dependencies.</source>
          <target state="translated">未解決の依存関係の名前をフィルタリングするためのプリインクルード正規表現のリスト。</target>
        </trans-unit>
        <trans-unit id="32fbba8eea6a9d64aebf4adf04c146b6ab2114c5" translate="yes" xml:space="preserve">
          <source>List of preprocessor include file search directories.</source>
          <target state="translated">プリプロセッサのインクルードファイル検索ディレクトリのリスト。</target>
        </trans-unit>
        <trans-unit id="4f2c2e49f97c7b9b103cc78239f4827a08abc923" translate="yes" xml:space="preserve">
          <source>List of public compile definitions requirements for a library.</source>
          <target state="translated">ライブラリのための公開コンパイル定義要件のリスト。</target>
        </trans-unit>
        <trans-unit id="abbf5a006c48a969d63cf22e42edda848b8919d5" translate="yes" xml:space="preserve">
          <source>List of public compile features requirements for a library.</source>
          <target state="translated">ライブラリに必要な公開コンパイル機能の一覧です。</target>
        </trans-unit>
        <trans-unit id="f9ddffcd4f5ac6147760ef492101c2f5f2020a3c" translate="yes" xml:space="preserve">
          <source>List of public compile options requirements for a library.</source>
          <target state="translated">ライブラリのための公開コンパイルオプションの要件のリスト。</target>
        </trans-unit>
        <trans-unit id="4632e5092b336901b5cb0b8270efac3d64595e65" translate="yes" xml:space="preserve">
          <source>List of public include directories requirements for a library.</source>
          <target state="translated">公共のリストには、図書館のためのディレクトリの要件が含まれています。</target>
        </trans-unit>
        <trans-unit id="4542f5265cc9dd34c29cf2d58c17345454ab90ab" translate="yes" xml:space="preserve">
          <source>List of public link directories requirements for a library.</source>
          <target state="translated">図書館に必要なパブリックリンクディレクトリの一覧です。</target>
        </trans-unit>
        <trans-unit id="2c5e8448bbb546cff1e35a7a3c76ad521b1be376" translate="yes" xml:space="preserve">
          <source>List of public link options requirements for a library.</source>
          <target state="translated">図書館に必要なパブリックリンクオプションの要件一覧。</target>
        </trans-unit>
        <trans-unit id="239ec1e7a37b77cb65f214857eeb55a7ff756bd4" translate="yes" xml:space="preserve">
          <source>List of public system include directories for a library.</source>
          <target state="translated">公共システムのリストには、図書館のディレクトリが含まれています。</target>
        </trans-unit>
        <trans-unit id="d482272d0fe7d73f0536bb20a937a6045b867b81" translate="yes" xml:space="preserve">
          <source>List of requested components</source>
          <target state="translated">要求されたコンポーネントのリスト</target>
        </trans-unit>
        <trans-unit id="b55411f7b6d30fc8bc2c85028f036978342ad347" translate="yes" xml:space="preserve">
          <source>List of sources for the library. Files with extension &lt;code&gt;.i&lt;/code&gt; will be identified as sources for the &lt;code&gt;SWIG&lt;/code&gt; tool. Other files will be handled in the standard way. This behavior can be overridden by specifying the variable &lt;code&gt;SWIG_SOURCE_FILE_EXTENSIONS&lt;/code&gt;.</source>
          <target state="translated">ライブラリのソースのリスト。拡張子が &lt;code&gt;.i&lt;/code&gt; のファイルは、 &lt;code&gt;SWIG&lt;/code&gt; ツールのソースとして識別されます。その他のファイルは標準的な方法で処理されます。この動作は、変数 &lt;code&gt;SWIG_SOURCE_FILE_EXTENSIONS&lt;/code&gt; を指定することでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="ed191a1f700c2874db3c075e170cc1b914b0c849" translate="yes" xml:space="preserve">
          <source>List of sources for the library. Files with extension &lt;code&gt;.i&lt;/code&gt; will be identified as sources for the &lt;code&gt;SWIG&lt;/code&gt; tool. Other files will be handled in the standard way. This behavior can be overriden by specifying the variable &lt;code&gt;SWIG_SOURCE_FILE_EXTENSIONS&lt;/code&gt;.</source>
          <target state="translated">ライブラリのソースのリスト。拡張子が &lt;code&gt;.i&lt;/code&gt; のファイルは、 &lt;code&gt;SWIG&lt;/code&gt; ツールのソースとして識別されます。他のファイルは標準的な方法で処理されます。この動作は、変数 &lt;code&gt;SWIG_SOURCE_FILE_EXTENSIONS&lt;/code&gt; を指定することでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="21d7b65443d58bf8d68229134c5a3274b05de640" translate="yes" xml:space="preserve">
          <source>List of sources specified for a target.</source>
          <target state="translated">ターゲットに指定されたソースのリスト。</target>
        </trans-unit>
        <trans-unit id="d77c6cea16889183a1a66824a7d987aa2fa1b74b" translate="yes" xml:space="preserve">
          <source>List of tests.</source>
          <target state="translated">テストの一覧です。</target>
        </trans-unit>
        <trans-unit id="fa84e733e68012cfdffe915d8657ca30c62bb803" translate="yes" xml:space="preserve">
          <source>List of the FLTK libraries found</source>
          <target state="translated">見つかったFLTKライブラリの一覧</target>
        </trans-unit>
        <trans-unit id="490084205605bc1d5317caf1a072c2c992174e8d" translate="yes" xml:space="preserve">
          <source>List of variables defined in the current directory.</source>
          <target state="translated">カレントディレクトリで定義されている変数のリスト。</target>
        </trans-unit>
        <trans-unit id="7c3d3b8acf32d921346c9fa15ccc3e0af5f493f8" translate="yes" xml:space="preserve">
          <source>List of variables that the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command source file signature must propagate into the test project in order to target the same platform as the host project.</source>
          <target state="translated">ホストプロジェクトと同じプラットフォームをターゲットにするために、&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt;コマンドのソースファイルシグネチャがテストプロジェクトに伝播する必要がある変数のリスト。</target>
        </trans-unit>
        <trans-unit id="2136f9decb402dc033169190742a9590a2e8171a" translate="yes" xml:space="preserve">
          <source>List operations.</source>
          <target state="translated">リスト操作を行います。</target>
        </trans-unit>
        <trans-unit id="52249135d6a5917c8cb8e8f1762ae75a001ee804" translate="yes" xml:space="preserve">
          <source>List policies with help available and exit.</source>
          <target state="translated">利用可能なヘルプと終了を使用してポリシーを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="e087b78036348487783e10639c165d85d7369504" translate="yes" xml:space="preserve">
          <source>List properties with help available and exit.</source>
          <target state="translated">ヘルプが利用可能なプロパティをリストアップして終了します。</target>
        </trans-unit>
        <trans-unit id="094ec0170f9291a9538b5cdbd09479ec209be775" translate="yes" xml:space="preserve">
          <source>List public interface libraries for a library.</source>
          <target state="translated">ライブラリのパブリック・インターフェース・ライブラリをリストアップします。</target>
        </trans-unit>
        <trans-unit id="e55a1825f7ab0756a6c9cfb6107ada508a93ea86" translate="yes" xml:space="preserve">
          <source>List public interface libraries for a shared library or executable.</source>
          <target state="translated">共有ライブラリまたは実行ファイルのパブリック・インターフェース・ライブラリを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="51a831556002c054eaec09a9d7cbb5115c4ccb6f" translate="yes" xml:space="preserve">
          <source>List symbols to mangle automatically with C preprocessor definitions:</source>
          <target state="translated">Cプリプロセッサの定義で自動的にマングルするシンボルをリストアップします。</target>
        </trans-unit>
        <trans-unit id="02df771d534f50e0ddeeec6134b9551690844c5e" translate="yes" xml:space="preserve">
          <source>List variables with help available and exit.</source>
          <target state="translated">ヘルプが利用可能な変数をリストアップして終了します。</target>
        </trans-unit>
        <trans-unit id="765f52025a84eecdfb7232eeeceb364593df2d25" translate="yes" xml:space="preserve">
          <source>List where the first element is the test command and the remaining elements are the command arguments.</source>
          <target state="translated">最初の要素がテストコマンドで、残りの要素がコマンド引数のリストです。</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="1b00d733e1dd02d87f6710920168803a1c27d027" translate="yes" xml:space="preserve">
          <source>Lists are meant for simple use cases such as a list of source files and should not be used for complex data processing tasks. Most commands that construct lists do not escape &lt;code&gt;;&lt;/code&gt; characters in list elements, thus flattening nested lists:</source>
          <target state="translated">リストは、ソースファイルのリストなどの単純な使用例のためのものであり、複雑なデータ処理タスクには使用しないでください。リストを構成するほとんどのコマンドはエスケープしません &lt;code&gt;;&lt;/code&gt; リスト要素の文字、つまりネストされたリストをフラット化します：</target>
        </trans-unit>
        <trans-unit id="0b3b55f5ca9fdf6e28c60add4fea4cd1f9c8fa36" translate="yes" xml:space="preserve">
          <source>Lists each of the executables and associated text label to be used to create Start Menu shortcuts. For example, setting this to the list &lt;code&gt;ccmake;CMake&lt;/code&gt; will create a shortcut named &amp;ldquo;CMake&amp;rdquo; that will execute the installed executable &lt;code&gt;ccmake&lt;/code&gt;. Not all CPack generators use it (at least NSIS, WIX and OSXX11 do).</source>
          <target state="translated">スタートメニューのショートカットの作成に使用される各実行可能ファイルと関連するテキストラベルを一覧表示します。たとえば、これをリスト &lt;code&gt;ccmake;CMake&lt;/code&gt; に設定すると、インストールされた実行可能ファイル &lt;code&gt;ccmake&lt;/code&gt; を実行する「CMake」という名前のショートカットが作成されます。すべてのCPackジェネレーターがそれを使用するわけではありません（少なくともNSIS、WIX、およびOSXX11は使用します）。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
