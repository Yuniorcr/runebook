<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="codeception">
    <body>
      <group id="codeception">
        <trans-unit id="895b88363f8896b33b0faa666f6dc25a5de04c27" translate="yes" xml:space="preserve">
          <source>Erases directory contents</source>
          <target state="translated">ディレクトリの内容を消去します。</target>
        </trans-unit>
        <trans-unit id="333efd1af50518e07e7959bc5187f67c99f123e5" translate="yes" xml:space="preserve">
          <source>Erases directory contents on the FTP/SFTP server</source>
          <target state="translated">FTP/SFTP サーバー上のディレクトリの内容を消去します。</target>
        </trans-unit>
        <trans-unit id="753c5002c6b54759d98204a8260973033b1ae296" translate="yes" xml:space="preserve">
          <source>Error Reporting</source>
          <target state="translated">エラー報告</target>
        </trans-unit>
        <trans-unit id="323fa2c335ca3ff3070290fec54a0326671e3a29" translate="yes" xml:space="preserve">
          <source>Evaluates a PHPUnit\Framework\Constraint matcher object.</source>
          <target state="translated">PHPUnitFramework\Constraint matcher オブジェクトを評価します。</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="7809f67466b7c5777087400059cce94f07db0e19" translate="yes" xml:space="preserve">
          <source>Every method that expects some parameters to be checked against values in the database (&lt;code&gt;see...()&lt;/code&gt;, &lt;code&gt;dontSee...()&lt;/code&gt;, &lt;code&gt;grab...()&lt;/code&gt;) can accept instance of &lt;a href=&quot;https://www.doctrine-project.org/api/collections/latest/Doctrine/Common/Collections/Criteria.html&quot;&gt;\Doctrine\Common\Collections\Criteria&lt;/a&gt; for more flexibility, e.g.:</source>
          <target state="translated">いくつかのパラメータは、データベース内の値と照合されることを想定してすべての方法（ &lt;code&gt;see...()&lt;/code&gt; 、 &lt;code&gt;dontSee...()&lt;/code&gt; 、 &lt;code&gt;grab...()&lt;/code&gt; ）のインスタンス受け入れることができます&lt;a href=&quot;https://www.doctrine-project.org/api/collections/latest/Doctrine/Common/Collections/Criteria.html&quot;&gt;\教義\共通\コレクション\基準の&lt;/a&gt;多くのため柔軟性、例：</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="1ac706b12e60fc2f6bfd1155ed87e02f48c03b35" translate="yes" xml:space="preserve">
          <source>Example #1 (&lt;code&gt;functional.suite.yml&lt;/code&gt;)</source>
          <target state="translated">例1（ &lt;code&gt;functional.suite.yml&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ca36d18db4bfa000f3d5562842c56493622d15e3" translate="yes" xml:space="preserve">
          <source>Example #2 (&lt;code&gt;functional.suite.yml&lt;/code&gt;)</source>
          <target state="translated">例2（ &lt;code&gt;functional.suite.yml&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="dde0b126776651801c1257bb713f0308e69c35f3" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;acceptance.suite.yml&lt;/code&gt;)</source>
          <target state="translated">例（ &lt;code&gt;acceptance.suite.yml&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2b560afc7172f76db612b415bcff94ecc8f216a7" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;functional.suite.yml&lt;/code&gt;)</source>
          <target state="translated">例（ &lt;code&gt;functional.suite.yml&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e6daaa3ec4c74a6bc17e462eaad839b9f3d84568" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;functional.suite.yml&lt;/code&gt;) - Symfony 2.x Directory Structure</source>
          <target state="translated">例（ &lt;code&gt;functional.suite.yml&lt;/code&gt; ）-symfony 2.xのディレクトリ構造</target>
        </trans-unit>
        <trans-unit id="b59d3338cd36f5463b2d5d1f4fd7362a5b7eb33e" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;functional.suite.yml&lt;/code&gt;) - Symfony 3 Directory Structure</source>
          <target state="translated">例（ &lt;code&gt;functional.suite.yml&lt;/code&gt; ）-symfony 3のディレクトリ構造</target>
        </trans-unit>
        <trans-unit id="d338353da288abb5e73004fbbc6353971697d982" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;functional.suite.yml&lt;/code&gt;) - Symfony 4 Directory Structure</source>
          <target state="translated">例（ &lt;code&gt;functional.suite.yml&lt;/code&gt; ）-symfony 4のディレクトリ構造</target>
        </trans-unit>
        <trans-unit id="aaa4330b25f6033ff16ca5f3ae95f537f5dc2642" translate="yes" xml:space="preserve">
          <source>Example (&lt;code&gt;unit.suite.yml&lt;/code&gt;)</source>
          <target state="translated">例（ &lt;code&gt;unit.suite.yml&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0cacae12eed9647dc6dae0a697a71a6c56e5f4ea" translate="yes" xml:space="preserve">
          <source>Example (AWS SQS)</source>
          <target state="translated">例(AWS SQS</target>
        </trans-unit>
        <trans-unit id="c1168e2c48636a0e743019bed07295ea0ac92571" translate="yes" xml:space="preserve">
          <source>Example (FTP)</source>
          <target state="translated">例(FTP</target>
        </trans-unit>
        <trans-unit id="640fde29804ecf0e421118d7660fc892a9524a87" translate="yes" xml:space="preserve">
          <source>Example (Iron.io)</source>
          <target state="translated">例(Iron.io</target>
        </trans-unit>
        <trans-unit id="c14a45c13a8132b115528c58dcf91bf0dfdeee0f" translate="yes" xml:space="preserve">
          <source>Example (SFTP)</source>
          <target state="translated">例 (SFTP)</target>
        </trans-unit>
        <trans-unit id="0b2672c82271da2f1eebb5a4fa949bc5fff81b15" translate="yes" xml:space="preserve">
          <source>Example (beanstalkd)</source>
          <target state="translated">例(ビーンストークD</target>
        </trans-unit>
        <trans-unit id="2e36310382d1c14486fc12b2dd21569eb9914c9f" translate="yes" xml:space="preserve">
          <source>Example AWS SQS running on Amazon EC2 instance</source>
          <target state="translated">Amazon EC2インスタンス上でのAWS SQSの実行例</target>
        </trans-unit>
        <trans-unit id="08eef833fe7a47e95e499024a5e9efff8b048c18" translate="yes" xml:space="preserve">
          <source>Example AWS SQS using profile credentials</source>
          <target state="translated">プロファイル資格情報を利用したAWS SQSの例</target>
        </trans-unit>
        <trans-unit id="a1dea63f476633db063439f14a75a9b7e45d7b59" translate="yes" xml:space="preserve">
          <source>Example Annotation</source>
          <target state="translated">アノテーション例</target>
        </trans-unit>
        <trans-unit id="d67ef1078955a79a7e7d3c49d89d4578b300ae45" translate="yes" xml:space="preserve">
          <source>Example with Sqlite</source>
          <target state="translated">Sqliteを使った例</target>
        </trans-unit>
        <trans-unit id="e565ca966747f52d66cf18857d11da7bbc70c988" translate="yes" xml:space="preserve">
          <source>Example with multi-databases</source>
          <target state="translated">複数のデータベースを使用した例</target>
        </trans-unit>
        <trans-unit id="490f84dfd776dd20e3ce0a032e10a7ad2f614673" translate="yes" xml:space="preserve">
          <source>Example with multi-dumps</source>
          <target state="translated">マルチダンプを使用した例</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="4facc4ec9fb2e93395c2124763cb637f8cb454ff" translate="yes" xml:space="preserve">
          <source>Example: Using md5 for a file contents</source>
          <target state="translated">例.ファイルの内容にmd5を使用する</target>
        </trans-unit>
        <trans-unit id="7756d86a81ae3b9bf91da76c4d92e99d7d67ebe0" translate="yes" xml:space="preserve">
          <source>Example: Using md5 hash key</source>
          <target state="translated">例 md5ハッシュキーの使用</target>
        </trans-unit>
        <trans-unit id="4c45273a9ca5cd6dc25d0988fe7c5a6cbbca9e62" translate="yes" xml:space="preserve">
          <source>Example: Using sha256 hash</source>
          <target state="translated">例 sha256 ハッシュの使用</target>
        </trans-unit>
        <trans-unit id="fcc81e042958c8e425b0070abb27a743d15f67c8" translate="yes" xml:space="preserve">
          <source>Example: load parameters from .env files (Laravel):</source>
          <target state="translated">例:.envファイル(Laravel)からパラメータをロードします。</target>
        </trans-unit>
        <trans-unit id="7a4a6f03a21572574f4cb986de70c47c61bdeda8" translate="yes" xml:space="preserve">
          <source>Example: load parameters from YAML file (Symfony):</source>
          <target state="translated">例:YAMLファイル(Symfony)からパラメータをロードします。</target>
        </trans-unit>
        <trans-unit id="8800701434f3b3c004592baca29256d0c002cf10" translate="yes" xml:space="preserve">
          <source>Example: load parameters from php file (Yii)</source>
          <target state="translated">例:php ファイルからパラメータを読み込む (Yii)</target>
        </trans-unit>
        <trans-unit id="479e72f301a1765bb7a00ba5de42fb145628d7cc" translate="yes" xml:space="preserve">
          <source>Example: load parameters from the environment:</source>
          <target state="translated">例:環境からパラメータをロードします。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="fab21b09d19911aff3ae61afac9d5dea2a3bb6c8" translate="yes" xml:space="preserve">
          <source>Execute this command in an empty folder to install Robo and Robo-paracept :</source>
          <target state="translated">空のフォルダにこのコマンドを実行して、ロボとロボパラセプトをインストールします。</target>
        </trans-unit>
        <trans-unit id="5e17cca4aaf6a0946feab949a5496c8655826380" translate="yes" xml:space="preserve">
          <source>Executes JavaScript and waits up to $timeout seconds for it to return true.</source>
          <target state="translated">JavaScriptを実行し、それが真を返すのを$timeout秒まで待ちます。</target>
        </trans-unit>
        <trans-unit id="19699c00c703600422f464c1e001d8e047b18794" translate="yes" xml:space="preserve">
          <source>Executes a shell command. Fails If exit code is &amp;gt; 0. You can disable this by setting second parameter to false</source>
          <target state="translated">シェルコマンドを実行します。終了コードが0より大きい場合は失敗します。これを無効にするには、2番目のパラメーターをfalseに設定します。</target>
        </trans-unit>
        <trans-unit id="f465c0f2e6bd3bf8bc9f52b12cd697038f482358" translate="yes" xml:space="preserve">
          <source>Executes a shell command. Fails if exit code is &amp;gt; 0. You can disable this by passing &lt;code&gt;false&lt;/code&gt; as second argument</source>
          <target state="translated">シェルコマンドを実行します。終了コードが0より大きい場合は失敗します。2番目の引数として &lt;code&gt;false&lt;/code&gt; を渡すことにより、これを無効にできます。</target>
        </trans-unit>
        <trans-unit id="47bf826fefbfe2a32e111b5d9ae0ee3015f3cd41" translate="yes" xml:space="preserve">
          <source>Executes asynchronous JavaScript. A callback should be executed by JavaScript to exit from a script. Callback is passed as a last element in &lt;code&gt;arguments&lt;/code&gt; array. Additional arguments can be passed as array in second parameter.</source>
          <target state="translated">非同期JavaScriptを実行します。スクリプトを終了するには、JavaScriptでコールバックを実行する必要があります。コールバックは、 &lt;code&gt;arguments&lt;/code&gt; 配列の最後の要素として渡されます。追加の引数は、2番目のパラメーターで配列として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="62e1111801481e6106201e33b6204a680f8442d7" translate="yes" xml:space="preserve">
          <source>Executes custom JavaScript.</source>
          <target state="translated">カスタムJavaScriptを実行します。</target>
        </trans-unit>
        <trans-unit id="394450b7c2614c55e57dc5c3bf2c222c26dae262" translate="yes" xml:space="preserve">
          <source>Executes tests.</source>
          <target state="translated">テストを実行します。</target>
        </trans-unit>
        <trans-unit id="3dd77165b430e70bb2e8468d601275f32b7d392b" translate="yes" xml:space="preserve">
          <source>Executes the given regular expression against the current URI and returns the first capturing group. If no parameters are provided, the full URI is returned.</source>
          <target state="translated">現在の URI に対して与えられた正規表現を実行し、最初のキャプチャグループを返します。パラメータが与えられていない場合、完全なURIが返されます。</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="11d8a56c60dbdf691b7319329004e9ed235c8527" translate="yes" xml:space="preserve">
          <source>Export:</source>
          <target state="translated">Export:</target>
        </trans-unit>
        <trans-unit id="5bc5322d7692a23a3f2b1582799a212c508a0823" translate="yes" xml:space="preserve">
          <source>Extending a Module</source>
          <target state="translated">モジュールの拡張</target>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="f12eae7cb9c6d1e069cd68a7eb6f2b49141a2f0d" translate="yes" xml:space="preserve">
          <source>Extensions can also be enabled per suite inside suite configs (like &lt;code&gt;acceptance.suite.yml&lt;/code&gt;) and for a specific environment.</source>
          <target state="translated">拡張機能は、スイート構成内のスイートごとに（ &lt;code&gt;acceptance.suite.yml&lt;/code&gt; など）、特定の環境で有効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="b206e04bdb1a94ec880e7c1d716390abe6bb7295" translate="yes" xml:space="preserve">
          <source>External URL&amp;rsquo;s</source>
          <target state="translated">外部URL</target>
        </trans-unit>
        <trans-unit id="075be0eab826f4c0495eef7e0fd6a4f8df6c8a03" translate="yes" xml:space="preserve">
          <source>External URLs</source>
          <target state="translated">外部URL</target>
        </trans-unit>
        <trans-unit id="acb28212fba0272ee990cebd571ebe09b463312e" translate="yes" xml:space="preserve">
          <source>FTP</source>
          <target state="translated">FTP</target>
        </trans-unit>
        <trans-unit id="0780a545e2c123fb6b5ead204e72492fbeaf927b" translate="yes" xml:space="preserve">
          <source>FTP: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">FTP：&lt;strong&gt;安定&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="763d2acebdd01f92876117874cc183330606560e" translate="yes" xml:space="preserve">
          <source>FTP::amInPath</source>
          <target state="translated">FTP::amInPath</target>
        </trans-unit>
        <trans-unit id="f69786cecf9764c0ed47825df522258b8feaedf2" translate="yes" xml:space="preserve">
          <source>FTP::cleanDir</source>
          <target state="translated">FTP::cleanDir</target>
        </trans-unit>
        <trans-unit id="e67d6e335c13253c2470db1a5b15cf3bfa3cd2f4" translate="yes" xml:space="preserve">
          <source>FTP::copyDir</source>
          <target state="translated">FTP::copyDir</target>
        </trans-unit>
        <trans-unit id="b437036215031459bb02a7e9921bf676b263d2f1" translate="yes" xml:space="preserve">
          <source>FTP::deleteDir</source>
          <target state="translated">FTP::deleteDir</target>
        </trans-unit>
        <trans-unit id="cacd92e09af10fb9628796e9bfb855ac1fb23385" translate="yes" xml:space="preserve">
          <source>FTP::deleteFile</source>
          <target state="translated">FTP::deleteFile</target>
        </trans-unit>
        <trans-unit id="16b9535ed2c3198c2dba229b82d4148e1232ef45" translate="yes" xml:space="preserve">
          <source>FTP::deleteThisFile</source>
          <target state="translated">FTP::deleteThisFile</target>
        </trans-unit>
        <trans-unit id="0f1ef7419b869330e4fb6ed187a2fd41335cae62" translate="yes" xml:space="preserve">
          <source>FTP::dontSeeFileFound</source>
          <target state="translated">FTP::dontSeeFileFound</target>
        </trans-unit>
        <trans-unit id="ba42e2e9bb9240e8c0a091f3c8ab3b28873635d2" translate="yes" xml:space="preserve">
          <source>FTP::dontSeeFileFoundMatches</source>
          <target state="translated">FTP::dontSeeFileFoundMatches</target>
        </trans-unit>
        <trans-unit id="945a3f2122cb30eaeccf934560674351d17204f1" translate="yes" xml:space="preserve">
          <source>FTP::dontSeeInThisFile</source>
          <target state="translated">FTP::dontSeeInThisFile</target>
        </trans-unit>
        <trans-unit id="be34c30f3daa884b1e0f8fbba821e8a402de5329" translate="yes" xml:space="preserve">
          <source>FTP::grabDirectory</source>
          <target state="translated">FTP::grabDirectory</target>
        </trans-unit>
        <trans-unit id="8ff0401bedbabb50a6ebe4b6754ef6d0bdde1cbf" translate="yes" xml:space="preserve">
          <source>FTP::grabFileCount</source>
          <target state="translated">FTP::grabFileCount</target>
        </trans-unit>
        <trans-unit id="5443fc6023825060cded150375b6c5a6b269158d" translate="yes" xml:space="preserve">
          <source>FTP::grabFileList</source>
          <target state="translated">FTP::grabFileList</target>
        </trans-unit>
        <trans-unit id="497f2b23c65c07f0cdf22bdf60410f243ac3c05f" translate="yes" xml:space="preserve">
          <source>FTP::grabFileModified</source>
          <target state="translated">FTP::grabFileModified</target>
        </trans-unit>
        <trans-unit id="52a76bb4caebff5814b0422ddd70028cc1d49b5b" translate="yes" xml:space="preserve">
          <source>FTP::grabFileSize</source>
          <target state="translated">FTP::grabFileSize</target>
        </trans-unit>
        <trans-unit id="5e9336fcd75c19178ad3ef4e6ce8dc15b58f3248" translate="yes" xml:space="preserve">
          <source>FTP::loginAs</source>
          <target state="translated">FTP::loginAs</target>
        </trans-unit>
        <trans-unit id="ccf9d1dac6865a35fe0a6f91d37135e2587caabb" translate="yes" xml:space="preserve">
          <source>FTP::makeDir</source>
          <target state="translated">FTP::makeDir</target>
        </trans-unit>
        <trans-unit id="5d2746b2edebb31072cb64b1a8d564462a7581a4" translate="yes" xml:space="preserve">
          <source>FTP::openFile</source>
          <target state="translated">FTP::openFile</target>
        </trans-unit>
        <trans-unit id="67dc18a29b094dbf311f6128ec4fa5a010dd6ec9" translate="yes" xml:space="preserve">
          <source>FTP::renameDir</source>
          <target state="translated">FTP::renameDir</target>
        </trans-unit>
        <trans-unit id="c12b54f9e2899225a3b8a5ee2f2df1c5dfa4ae3d" translate="yes" xml:space="preserve">
          <source>FTP::renameFile</source>
          <target state="translated">FTP::renameFile</target>
        </trans-unit>
        <trans-unit id="b6eac16057b6224bb8cd675667ef5734781731c8" translate="yes" xml:space="preserve">
          <source>FTP::seeFileContentsEqual</source>
          <target state="translated">FTP::seeFileContentsEqual</target>
        </trans-unit>
        <trans-unit id="ac7ee026044a84a05e7b4ae3cdc074a6abcd1da0" translate="yes" xml:space="preserve">
          <source>FTP::seeFileFound</source>
          <target state="translated">FTP::seeFileFound</target>
        </trans-unit>
        <trans-unit id="8683507823ad57516abcd7b8f8bba0f1dacadaa9" translate="yes" xml:space="preserve">
          <source>FTP::seeFileFoundMatches</source>
          <target state="translated">FTP::seeFileFoundMatches</target>
        </trans-unit>
        <trans-unit id="c7425aad09dec72d574cb97877fe4579ae3fe7c8" translate="yes" xml:space="preserve">
          <source>FTP::seeInThisFile</source>
          <target state="translated">FTP::seeInThisFile</target>
        </trans-unit>
        <trans-unit id="019d3cb7d2ff9f5684239bc774d45922ec84e3af" translate="yes" xml:space="preserve">
          <source>FTP::seeNumberNewLines</source>
          <target state="translated">FTP::seeNumberNewLines</target>
        </trans-unit>
        <trans-unit id="3497e57e55f1b742565441d13ddb64421a06d1c5" translate="yes" xml:space="preserve">
          <source>FTP::seeThisFileMatches</source>
          <target state="translated">FTP::seeThisFileMatches</target>
        </trans-unit>
        <trans-unit id="162ba51e059ba16d1a3496b1c19658d8398ad742" translate="yes" xml:space="preserve">
          <source>FTP::writeToFile</source>
          <target state="translated">FTP::writeToFile</target>
        </trans-unit>
        <trans-unit id="554cb5a51897141c3169906c3466a647ac7ce853" translate="yes" xml:space="preserve">
          <source>Factory Definitions are described in official &lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;Factory Muffin Documentation&lt;/a&gt;</source>
          <target state="translated">ファクトリー定義は、公式の&lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;Factory Muffin Documentationに&lt;/a&gt;記載されています</target>
        </trans-unit>
        <trans-unit id="f5f951f253d58436dfe41cb509ce528b416d9b97" translate="yes" xml:space="preserve">
          <source>Failed assertion output</source>
          <target state="translated">アサーション出力の失敗</target>
        </trans-unit>
        <trans-unit id="d75512402e48918a03fb9a2ae5359b3b619d7019" translate="yes" xml:space="preserve">
          <source>Fails a test with the given message.</source>
          <target state="translated">与えられたメッセージでのテストに失敗します。</target>
        </trans-unit>
        <trans-unit id="d69fe276be9e0475ef22e216e227cfed39c67063" translate="yes" xml:space="preserve">
          <source>Fails if no such user found.</source>
          <target state="translated">そのようなユーザが見つからなかった場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="f85899041a197b3427182db31a6607f9d7b3a2bf" translate="yes" xml:space="preserve">
          <source>Fails if record for given criteria can't be found,</source>
          <target state="translated">指定した条件のレコードが見つからない場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="f4d7f96f8edd012fe6a749403e9aa6b22bfc116c" translate="yes" xml:space="preserve">
          <source>Fails if such user was found.</source>
          <target state="translated">そのようなユーザが見つかった場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="5a1c72fb7b40218e0e152c98cfdfa1363d326031" translate="yes" xml:space="preserve">
          <source>Fails the test with message.</source>
          <target state="translated">メッセージでテストに失敗します。</target>
        </trans-unit>
        <trans-unit id="8db6a2f1d3b7e19e518ffa8979d7ad15359af460" translate="yes" xml:space="preserve">
          <source>Fast</source>
          <target state="translated">Fast</target>
        </trans-unit>
        <trans-unit id="ade67746c4c8ba1d8277d290e54ad674434baa7a" translate="yes" xml:space="preserve">
          <source>Fast and accurate, but no debug functionality &amp;mdash; perfect for CI</source>
          <target state="translated">高速かつ正確ですが、デバッグ機能はありません&amp;mdash; CIに最適です</target>
        </trans-unit>
        <trans-unit id="9b6b9c0219a32363d1ceccf00a75eeaba2161591" translate="yes" xml:space="preserve">
          <source>Faster than &lt;code&gt;Xdebug&lt;/code&gt; but inaccurate</source>
          <target state="translated">&lt;code&gt;Xdebug&lt;/code&gt; より高速ですが不正確です</target>
        </trans-unit>
        <trans-unit id="2b3404f40b34761b89de85d7ee30dfae589ad444" translate="yes" xml:space="preserve">
          <source>Feature file is written in Gherkin format. Codeception can generate a feature file for you. We will assume that we will use scenarios in feature files for acceptance tests, so feature files to be placed in &lt;code&gt;acceptance&lt;/code&gt; suite directory:</source>
          <target state="translated">特徴ファイルはガーキン形式で書かれています。Codeceptionは、機能ファイルを生成できます。受け入れテストのために機能ファイルのシナリオを使用することを想定しているため、機能ファイルは &lt;code&gt;acceptance&lt;/code&gt; スイートディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="76143c14f50ce8bc4ce9b0b14df54348ba122a19" translate="yes" xml:space="preserve">
          <source>Fetches a single column value from a database. Provide table name, desired column and criteria.</source>
          <target state="translated">データベースから単一の列の値を取得します。テーブル名、希望する列、および基準を指定します。</target>
        </trans-unit>
        <trans-unit id="e45a66467e25022582831c207b317fcf5c5c55c1" translate="yes" xml:space="preserve">
          <source>Fetches all values from the column in database. Provide table name, desired column and criteria.</source>
          <target state="translated">データベース内の列からすべての値を取得します。テーブル名、希望する列、および基準を指定します。</target>
        </trans-unit>
        <trans-unit id="98f165ab9e795c7b2017db195a96297ae6cd8acd" translate="yes" xml:space="preserve">
          <source>Field names ending in &amp;ldquo;[]&amp;rdquo; must be passed without the trailing square bracket characters, and must contain an array for its value. This allows submitting multiple values with the same name, consider:</source>
          <target state="translated">「[]」で終わるフィールド名は、末尾の角括弧文字なしで渡す必要があり、その値の配列を含める必要があります。これにより、同じ名前の複数の値を送信できるようになります。以下を検討してください。</target>
        </trans-unit>
        <trans-unit id="c5678e243263579b0accd1d9e85f7b94fef56809" translate="yes" xml:space="preserve">
          <source>Field names ending in &lt;code&gt;[]&lt;/code&gt; must be passed without the trailing square bracket characters, and must contain an array for its value. This allows submitting multiple values with the same name, consider:</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; で終わるフィールド名は、末尾の角括弧文字なしで渡す必要があり、その値の配列を含める必要があります。これにより、同じ名前の複数の値を送信できるようになります。以下を検討してください。</target>
        </trans-unit>
        <trans-unit id="46e6be06ad1ceb613f1e218c96c13110a5e5f3a1" translate="yes" xml:space="preserve">
          <source>Fields that are not provided will be filled by their values from the page, or from any previous calls to &lt;code&gt;fillField()&lt;/code&gt;, &lt;code&gt;selectOption()&lt;/code&gt; etc. You don&amp;rsquo;t need to click the &amp;lsquo;Submit&amp;rsquo; button afterwards. This command itself triggers the request to form&amp;rsquo;s action.</source>
          <target state="translated">提供されていないフィールドは、ページ、または &lt;code&gt;fillField()&lt;/code&gt; 、 &lt;code&gt;selectOption()&lt;/code&gt; などの以前の呼び出しからの値で埋められます。後で[送信]ボタンをクリックする必要はありません。このコマンド自体がフォームのアクションへのリクエストをトリガーします。</target>
        </trans-unit>
        <trans-unit id="c2c3b1d4661539040b4bd604f59f74d32cd59506" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;init_autoloader&lt;/code&gt; in project&amp;rsquo;s root is required by Zend Framework 2. Uses &lt;code&gt;tests/application.config.php&lt;/code&gt; config file by default.</source>
          <target state="translated">Zend Framework 2では、プロジェクトのルートにある &lt;code&gt;init_autoloader&lt;/code&gt; ファイルが必要です。デフォルトでは、 &lt;code&gt;tests/application.config.php&lt;/code&gt; 設定ファイルを使用します。</target>
        </trans-unit>
        <trans-unit id="092fe85f5c2e62269fa44ec1fcbf190e92f16564" translate="yes" xml:space="preserve">
          <source>Filesystem</source>
          <target state="translated">Filesystem</target>
        </trans-unit>
        <trans-unit id="cab473e50b279a33f94cdab66842ec7e950bb42a" translate="yes" xml:space="preserve">
          <source>Filesystem::amInPath</source>
          <target state="translated">Filesystem::amInPath</target>
        </trans-unit>
        <trans-unit id="f6cf2d8810b62ac31d84c18c7e53642e7c724ebe" translate="yes" xml:space="preserve">
          <source>Filesystem::cleanDir</source>
          <target state="translated">Filesystem::cleanDir</target>
        </trans-unit>
        <trans-unit id="7aca0da4d657ab32d86ddd49223881ff7be36e4c" translate="yes" xml:space="preserve">
          <source>Filesystem::copyDir</source>
          <target state="translated">Filesystem::copyDir</target>
        </trans-unit>
        <trans-unit id="519bebf2465b9d64c1a4f44f0894ca157f89c2b5" translate="yes" xml:space="preserve">
          <source>Filesystem::deleteDir</source>
          <target state="translated">Filesystem::deleteDir</target>
        </trans-unit>
        <trans-unit id="ffd88e13f63910df163462f672961a558a787d5d" translate="yes" xml:space="preserve">
          <source>Filesystem::deleteFile</source>
          <target state="translated">Filesystem::deleteFile</target>
        </trans-unit>
        <trans-unit id="16efeee7ddd218774c54ec26caf6aa9a8903e0c9" translate="yes" xml:space="preserve">
          <source>Filesystem::deleteThisFile</source>
          <target state="translated">Filesystem::deleteThisFile</target>
        </trans-unit>
        <trans-unit id="ffe3044a455058606458cf0f4dbffef49dcc7cff" translate="yes" xml:space="preserve">
          <source>Filesystem::dontSeeFileFound</source>
          <target state="translated">Filesystem::dontSeeFileFound</target>
        </trans-unit>
        <trans-unit id="c198b7ad029a133084b03829dcf16227bf8add7c" translate="yes" xml:space="preserve">
          <source>Filesystem::dontSeeInThisFile</source>
          <target state="translated">Filesystem::dontSeeInThisFile</target>
        </trans-unit>
        <trans-unit id="7617e5f9bf90e9f8d1a240197a188d51930cd5dd" translate="yes" xml:space="preserve">
          <source>Filesystem::openFile</source>
          <target state="translated">Filesystem::openFile</target>
        </trans-unit>
        <trans-unit id="57f60d8ff5ddab2207f9b030d57456c465b00029" translate="yes" xml:space="preserve">
          <source>Filesystem::seeFileContentsEqual</source>
          <target state="translated">Filesystem::seeFileContentsEqual</target>
        </trans-unit>
        <trans-unit id="94f660f4b3aab1254145f25832523a6bd0010006" translate="yes" xml:space="preserve">
          <source>Filesystem::seeFileFound</source>
          <target state="translated">Filesystem::seeFileFound</target>
        </trans-unit>
        <trans-unit id="d38485ca9a1fb5a5e0f1a69cfb029bbfcba67ea3" translate="yes" xml:space="preserve">
          <source>Filesystem::seeInThisFile</source>
          <target state="translated">Filesystem::seeInThisFile</target>
        </trans-unit>
        <trans-unit id="926fbcc9e5d2a68e6b844bce00d1286394017a99" translate="yes" xml:space="preserve">
          <source>Filesystem::seeNumberNewLines</source>
          <target state="translated">Filesystem::seeNumberNewLines</target>
        </trans-unit>
        <trans-unit id="d01df88d6be122dcc469483a558db6055b3d7101" translate="yes" xml:space="preserve">
          <source>Filesystem::seeThisFileMatches</source>
          <target state="translated">Filesystem::seeThisFileMatches</target>
        </trans-unit>
        <trans-unit id="ab96b56074bc725c928dfdf609ad67aefc876867" translate="yes" xml:space="preserve">
          <source>Filesystem::writeToFile</source>
          <target state="translated">Filesystem::writeToFile</target>
        </trans-unit>
        <trans-unit id="54be8c599f372cd32305a3f8c504a0deee805b54" translate="yes" xml:space="preserve">
          <source>Fills a text field or textarea with the given string.</source>
          <target state="translated">与えられた文字列でテキストフィールドまたはテキストエリアを埋めます。</target>
        </trans-unit>
        <trans-unit id="70f8c2dd3f5be9de3f1a2a07995f2362c00bea22" translate="yes" xml:space="preserve">
          <source>Finds and returns attribute of element. Element is matched by either CSS or XPath</source>
          <target state="translated">要素の属性を検索して返します。要素はCSSまたはXPathのいずれかでマッチします。</target>
        </trans-unit>
        <trans-unit id="9122e357a5173a20c90a36c465d58aa08e806847" translate="yes" xml:space="preserve">
          <source>Finds and returns text contents of element. Element is matched by either CSS or XPath</source>
          <target state="translated">要素のテキスト内容を検索して返します。要素はCSSまたはXPathのいずれかでマッチします。</target>
        </trans-unit>
        <trans-unit id="48d394546793042e34746aa2bf6554731fb7ce4b" translate="yes" xml:space="preserve">
          <source>Finds and returns the text contents of the given element. If a fuzzy locator is used, the element is found using CSS, XPath, and by matching the full page source by regular expression.</source>
          <target state="translated">指定された要素のテキスト内容を検索して返します。ファジーロケータが使用されている場合は、CSS、XPath、正規表現によるフルページソースのマッチングを使用して要素を見つけます。</target>
        </trans-unit>
        <trans-unit id="0ccca32b78d33c35c7923be3c4f949ad10e67ccb" translate="yes" xml:space="preserve">
          <source>Finds element by it&amp;rsquo;s attribute(s)</source>
          <target state="translated">属性によって要素を検索します</target>
        </trans-unit>
        <trans-unit id="d7006d8eafa79b47ace4849c5b156dccb6a8ab65" translate="yes" xml:space="preserve">
          <source>Finds the value for the given form field. If a fuzzy locator is used, the field is found by field name, CSS, and XPath.</source>
          <target state="translated">指定されたフォームフィールドの値を見つけます。ファジーロケータが使用されている場合は、フィールド名、CSS、および XPath によってフィールドが検索されます。</target>
        </trans-unit>
        <trans-unit id="5312b60e7bef58933d42ef55bf84839d905822ce" translate="yes" xml:space="preserve">
          <source>First, you need to install the browser itself: Chrome and/or Firefox.</source>
          <target state="translated">まず、ブラウザ自体をインストールする必要があります。Chromeおよび/またはFirefoxです。</target>
        </trans-unit>
        <trans-unit id="93a9d4b62c49df4936d5f701755ab05d3a9187a5" translate="yes" xml:space="preserve">
          <source>Fixtures</source>
          <target state="translated">Fixtures</target>
        </trans-unit>
        <trans-unit id="d03caec7905be5d872d1e6ee7aa67a6e288564bf" translate="yes" xml:space="preserve">
          <source>Fixtures::add()</source>
          <target state="translated">Fixtures::add()</target>
        </trans-unit>
        <trans-unit id="641fd0a935bd46193ae38bdd566fe2695b033b82" translate="yes" xml:space="preserve">
          <source>Fixtures::cleanup()</source>
          <target state="translated">Fixtures::cleanup()</target>
        </trans-unit>
        <trans-unit id="9b6eb2c19b3bfe0030ff27eb56cdb27a1837a09f" translate="yes" xml:space="preserve">
          <source>Fixtures::exists()</source>
          <target state="translated">Fixtures::exists()</target>
        </trans-unit>
        <trans-unit id="67b625eed4a4b1f29acf5409fdc953ab8718a9fd" translate="yes" xml:space="preserve">
          <source>Fixtures::get()</source>
          <target state="translated">Fixtures::get()</target>
        </trans-unit>
        <trans-unit id="8165a9d7bab70ebfa6a3233f9bc83af1e5144733" translate="yes" xml:space="preserve">
          <source>Flushes all Memcached data.</source>
          <target state="translated">すべてのMemcachedデータをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="be0a1b4d97c32af3b91b7967717fb373f7bcab90" translate="yes" xml:space="preserve">
          <source>Flushes changes to database and performs &lt;code&gt;findOneBy()&lt;/code&gt; call for current repository.</source>
          <target state="translated">データベースへの変更をフラッシュし、現在のリポジトリに対して &lt;code&gt;findOneBy()&lt;/code&gt; 呼び出しを実行します。</target>
        </trans-unit>
        <trans-unit id="57280625a9cc73a8a9e4e9dd2e54ea6330efb03c" translate="yes" xml:space="preserve">
          <source>Flushes changes to database, and executes a query with parameters defined in an array. You can use entity associations to build complex queries.</source>
          <target state="translated">データベースへの変更をフラッシュし、配列で定義されたパラメータを使用してクエリを実行します。エンティティアソシエーションを使用して複雑なクエリを構築することができます。</target>
        </trans-unit>
        <trans-unit id="e95f12a4e8063cd6a5b285fae3c278c974b363e6" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;modules/webdriver#ChromeDriver&quot;&gt;Installation Instructions&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;modules/webdriver#ChromeDriver&quot;&gt;インストール手順に&lt;/a&gt;従う</target>
        </trans-unit>
        <trans-unit id="cafb2a3b56a193c5b48cb8d0e830cad6e088983d" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;modules/webdriver#PhantomJS&quot;&gt;Installation Instructions&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;modules/webdriver#PhantomJS&quot;&gt;インストール手順に&lt;/a&gt;従う</target>
        </trans-unit>
        <trans-unit id="45371d561d59e5e0a9bdeab6baf8e6666f24836d" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;modules/webdriver#Selenium&quot;&gt;Installation Instructions&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;modules/webdriver#Selenium&quot;&gt;インストール手順に&lt;/a&gt;従う</target>
        </trans-unit>
        <trans-unit id="481c318404040fb15c698b9f43a242b10bccbbd3" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://www.doctrine-project.org/projects/doctrine-orm/en/latest/reference/association-mapping.html#many-to-one-unidirectional&quot;&gt;ManyToOne&lt;/a&gt; the format is slightly different:</source>
          <target state="translated">&lt;a href=&quot;https://www.doctrine-project.org/projects/doctrine-orm/en/latest/reference/association-mapping.html#many-to-one-unidirectional&quot;&gt;ManyToOne&lt;/a&gt;フォーマットが若干異なります。</target>
        </trans-unit>
        <trans-unit id="4280792c6c5e17768bc1a1dcbdd22e8b94e507d0" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;.feature&lt;/code&gt;-files (Gherkin) use tags:</source>
          <target state="translated">以下のための &lt;code&gt;.feature&lt;/code&gt; -files（ガーキン）の使用タグ：</target>
        </trans-unit>
        <trans-unit id="e295f51e9efc0ec694ded19e4550dd77fc31b416" translate="yes" xml:space="preserve">
          <source>For Cept files, use pseudo-annotations in comments:</source>
          <target state="translated">Ceptファイルの場合は、コメントに疑似注釈を使用してください。</target>
        </trans-unit>
        <trans-unit id="3679c66aa2d496751c4577b6f1c425f0dd1170f4" translate="yes" xml:space="preserve">
          <source>For Cept you should use simple comments:</source>
          <target state="translated">Ceptの場合はシンプルなコメントを使うべきです。</target>
        </trans-unit>
        <trans-unit id="4ea84be8b35918f924471a4e8f29495407e15f4d" translate="yes" xml:space="preserve">
          <source>For MySQL:</source>
          <target state="translated">MySQLの場合。</target>
        </trans-unit>
        <trans-unit id="35cfe20c4c0d4ecf103a67b74e54ad2834d433f6" translate="yes" xml:space="preserve">
          <source>For PostgreSQL (using pg_restore)</source>
          <target state="translated">PostgreSQLの場合(pg_restoreを使用</target>
        </trans-unit>
        <trans-unit id="149646e072711a72d9af219565f1d2b2b4ced72e" translate="yes" xml:space="preserve">
          <source>For SFTP, add &lt;a href=&quot;http://phpseclib.sourceforge.net/&quot;&gt;phpseclib&lt;/a&gt; to require list.</source>
          <target state="translated">SFTPの場合、&lt;a href=&quot;http://phpseclib.sourceforge.net/&quot;&gt;phpseclib&lt;/a&gt;を追加してリストを要求します。</target>
        </trans-unit>
        <trans-unit id="6e8c0f38a4456eae29843dc013f8fd1310b4d511" translate="yes" xml:space="preserve">
          <source>For Test and Cest files you can use the &lt;code&gt;@group&lt;/code&gt; annotation to add a test to a group.</source>
          <target state="translated">テストファイルとCestファイルの場合、 &lt;code&gt;@group&lt;/code&gt; アノテーションを使用してグループにテストを追加できます。</target>
        </trans-unit>
        <trans-unit id="c92d9ed29c4c601f88a69b431c4c9d56b8b1334b" translate="yes" xml:space="preserve">
          <source>For acceptance and functional testing, we will not only need to have common actions being reused across different tests, we should have buttons, links and form fields being reused as well. For those cases we need to implement the &lt;a href=&quot;http://docs.seleniumhq.org/docs/06_test_design_considerations.jsp#page-object-design-pattern&quot;&gt;PageObject pattern&lt;/a&gt;, which is widely used by test automation engineers. The PageObject pattern represents a web page as a class and the DOM elements on that page as its properties, and some basic interactions as its methods. PageObjects are very important when you are developing a flexible architecture of your tests. Do not hard-code complex CSS or XPath locators in your tests but rather move them into PageObject classes.</source>
          <target state="translated">受け入れテストと機能テストでは、さまざまなテストで共通のアクションを再利用する必要があるだけでなく、ボタン、リンク、フォームフィールドも再利用する必要があります。これらの場合、テスト自動化エンジニアが広く使用している&lt;a href=&quot;http://docs.seleniumhq.org/docs/06_test_design_considerations.jsp#page-object-design-pattern&quot;&gt;PageObjectパターン&lt;/a&gt;を実装する必要があります。PageObjectパターンは、Webページをクラスとして表し、そのページのDOM要素をプロパティとして表し、いくつかの基本的な相互作用をメソッドとして表します。テストの柔軟なアーキテクチャを開発する場合、PageObjectsは非常に重要です。テストで複雑なCSSまたはXPathロケーターをハードコードせず、PageObjectクラスに移動します。</target>
        </trans-unit>
        <trans-unit id="1c92d39462887a2a9d58873c9d96191843596852" translate="yes" xml:space="preserve">
          <source>For acceptance and functional testing, we will not only need to have common actions being reused across different tests, we should have buttons, links and form fields being reused as well. For those cases we need to implement the &lt;a href=&quot;https://www.selenium.dev/documentation/en/guidelines_and_recommendations/page_object_models/&quot;&gt;PageObject pattern&lt;/a&gt;, which is widely used by test automation engineers. The PageObject pattern represents a web page as a class and the DOM elements on that page as its properties, and some basic interactions as its methods. PageObjects are very important when you are developing a flexible architecture of your acceptance or functional tests. Do not hard-code complex CSS or XPath locators in your tests but rather move them into PageObject classes.</source>
          <target state="translated">受け入れと機能テストでは、さまざまなテストで共通のアクションを再利用する必要があるだけでなく、ボタン、リンク、フォームフィールドも再利用する必要があります。そのような場合、テスト自動化エンジニアによって広く使用されている&lt;a href=&quot;https://www.selenium.dev/documentation/en/guidelines_and_recommendations/page_object_models/&quot;&gt;PageObjectパターン&lt;/a&gt;を実装する必要があります。PageObjectパターンは、Webページをクラスとして表し、そのページのDOM要素をそのプロパティとして表し、いくつかの基本的な相互作用をそのメソッドとして表します。PageObjectsは、受け入れテストまたは機能テストの柔軟なアーキテクチャを開発する場合に非常に重要です。テストで複雑なCSSまたはXPathロケーターをハードコーディングするのではなく、それらをPageObjectクラスに移動します。</target>
        </trans-unit>
        <trans-unit id="077cc1eacd96c5851ea96885059b24ca7961fd9b" translate="yes" xml:space="preserve">
          <source>For acceptance testing you can use &lt;code&gt;codeception/codeception&lt;/code&gt; docker image as base.</source>
          <target state="translated">受け入れテストでは、 &lt;code&gt;codeception/codeception&lt;/code&gt; Dockerイメージをベースとして使用できます。</target>
        </trans-unit>
        <trans-unit id="a67ff4bd5998190ae01744baebbe99f29bc4edb3" translate="yes" xml:space="preserve">
          <source>For acceptance testing you can use &lt;code&gt;codeception/codeception&lt;/code&gt; docker image as base. See example below:</source>
          <target state="translated">受け入れテストでは、 &lt;code&gt;codeception/codeception&lt;/code&gt; dockerイメージをベースとして使用できます。以下の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="a0a3403d3583d0ae44f13946592552b9115dd010" translate="yes" xml:space="preserve">
          <source>For bash and zsh shells, you can use auto-completion for your Codeception projects by executing the following in your shell (or add it to your .bashrc/.zshrc):</source>
          <target state="translated">bash や zsh シェルでは、以下をシェル内で実行することで Codeception プロジェクトの自動補完を利用することができます (または .bashrc/.zshrc に追加してください)。</target>
        </trans-unit>
        <trans-unit id="34f221c46187c51146f04cb4c3771175eb7a67cc" translate="yes" xml:space="preserve">
          <source>For cases where you need to run tests with different configurations you can define different config environments. The most typical use cases are running acceptance tests in different browsers, or running database tests using different database engines.</source>
          <target state="translated">異なる設定でテストを実行する必要がある場合には、異なる設定環境を定義することができます。最も典型的なユースケースは、異なるブラウザで受入テストを実行したり、異なるデータベースエンジンを使用してデータベーステストを実行したりすることです。</target>
        </trans-unit>
        <trans-unit id="cfa7483cae0e310c58dddda3b5608b8b90b01261" translate="yes" xml:space="preserve">
          <source>For checking the raw source code, use &lt;code&gt;seeInSource()&lt;/code&gt;.</source>
          <target state="translated">未加工のソースコードを確認するには、 &lt;code&gt;seeInSource()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="a7874f2ecd0a275e4a05a746714af84b2c8ff7e0" translate="yes" xml:space="preserve">
          <source>For common authorization patterns use one of the following methods:</source>
          <target state="translated">一般的な認証パターンについては、以下のいずれかの方法を使用します。</target>
        </trans-unit>
        <trans-unit id="6ba63985735fc148d46fac8878b7fe1b04328346" translate="yes" xml:space="preserve">
          <source>For example, given the following HTML:</source>
          <target state="translated">例えば、以下のようなHTMLを与えられたとします。</target>
        </trans-unit>
        <trans-unit id="ac59b3ddb06620b2460953250c22c1ba238be353" translate="yes" xml:space="preserve">
          <source>For example, given this sample &amp;ldquo;Sign Up&amp;rdquo; form:</source>
          <target state="translated">たとえば、次のサンプル「サインアップ」フォームがあるとします。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="fe57cfd9cc14d8271629d807c13fda750c0d3cd2" translate="yes" xml:space="preserve">
          <source>For functional tests, you emulate a web request (&lt;code&gt;$_GET&lt;/code&gt; and &lt;code&gt;$_POST&lt;/code&gt; variables) which returns the HTML response. Inside a test, you can make assertions about the response, and you can check if the data was successfully stored in the database.</source>
          <target state="translated">機能テストの場合、HTML応答を返すWeb要求（ &lt;code&gt;$_GET&lt;/code&gt; および &lt;code&gt;$_POST&lt;/code&gt; 変数）をエミュレートします。テスト内では、応答についてアサーションを作成し、データがデータベースに正常に格納されたかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="e854f3fea0403303a7c1e1d7f6948331ed249de6" translate="yes" xml:space="preserve">
          <source>For functional tests, your application needs to be structured in order to run in a test environment. Codeception provides connectors to all popular PHP frameworks.</source>
          <target state="translated">機能テストでは、アプリケーションをテスト環境で実行するために構造化する必要があります。Codeceptionは、すべての一般的なPHPフレームワークへのコネクタを提供しています。</target>
        </trans-unit>
        <trans-unit id="54c2e38e16cc69967552919600054e0f3be33db7" translate="yes" xml:space="preserve">
          <source>For functional tests, your application needs to be structured in order to run in a test environment. Codeception provides connectors to several popular PHP frameworks. You can also write your own.</source>
          <target state="translated">機能テストでは、アプリケーションをテスト環境で実行するために構造化する必要があります。Codeception は、いくつかの一般的な PHP フレームワークへのコネクタを提供しています。また、独自のものを書くこともできます。</target>
        </trans-unit>
        <trans-unit id="f73fa4507187473b88aad3ba89c8240d9e465ca7" translate="yes" xml:space="preserve">
          <source>For further information please refer to the &lt;a href=&quot;https://phpunit.readthedocs.io/en/latest/configuration.html&quot;&gt;PHPUnit configuration docs&lt;/a&gt;</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://phpunit.readthedocs.io/en/latest/configuration.html&quot;&gt;PHPUnit構成ドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="34ba33f0e66aec4abd030e4b1f55287193ed75e6" translate="yes" xml:space="preserve">
          <source>For instance, &lt;a href=&quot;https://www.browserstack.com/automate/capabilities&quot;&gt;&lt;strong&gt;BrowserStack&lt;/strong&gt; cloud service&lt;/a&gt; may require a test name to be set in capabilities. This is how it can be done via &lt;code&gt;_capabilities&lt;/code&gt; method from &lt;code&gt;Helper\Acceptance&lt;/code&gt;:</source>
          <target state="translated">たとえば、&lt;a href=&quot;https://www.browserstack.com/automate/capabilities&quot;&gt;&lt;strong&gt;BrowserStack&lt;/strong&gt;クラウドサービスで&lt;/a&gt;は、機能にテスト名を設定する必要がある場合があります。これは、 &lt;code&gt;Helper\Acceptance&lt;/code&gt; &lt;code&gt;_capabilities&lt;/code&gt; メソッドを使用して行う方法です。</target>
        </trans-unit>
        <trans-unit id="3cf030e817000ddf81895ee97cccde4d3f7027bd" translate="yes" xml:space="preserve">
          <source>For instance, the Laravel5 module has an ORM part which contains database actions. You can enable the PhpBrowser module for testing and Laravel + ORM for connecting to the database and checking the data.</source>
          <target state="translated">例えば、Laravel5モジュールにはデータベースのアクションを含むORMの部分があります。PhpBrowserモジュールをテスト用に、Laravel+ORMをデータベースに接続してデータをチェックするために有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="d42fda0615fb6c998497cc27225abadc0e9fc0b4" translate="yes" xml:space="preserve">
          <source>For instance, to test CRUD we want 4 methods to be implemented and all next tests should start at &lt;code&gt;/task&lt;/code&gt; page:</source>
          <target state="translated">たとえば、CRUDをテストするには、4つのメソッドを実装する必要があり、次のテストはすべて &lt;code&gt;/task&lt;/code&gt; ページで開始する必要があります。</target>
        </trans-unit>
        <trans-unit id="ae8a607eb667051d85442e8c9aae76714c5d0e70" translate="yes" xml:space="preserve">
          <source>For more options see &lt;a href=&quot;modules/webdriver#performOn&quot;&gt;&lt;code&gt;performOn()&lt;/code&gt; reference&lt;/a&gt;.</source>
          <target state="translated">その他のオプションについては、&lt;a href=&quot;modules/webdriver#performOn&quot;&gt; &lt;code&gt;performOn()&lt;/code&gt; リファレンスを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="873056bf13d39ab95932b56e07a9c10d42de2fad" translate="yes" xml:space="preserve">
          <source>For multi-select elements, or to check values of multiple elements with the same name, an array may be passed:</source>
          <target state="translated">複数の要素を選択した場合や、同じ名前の複数の要素の値をチェックしたい場合は、配列を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="3a3b71d610d85d49fad862cd712d9dbb0271b416" translate="yes" xml:space="preserve">
          <source>For optional parameters, you should set default values. The &lt;code&gt;$config&lt;/code&gt; property is used to define optional parameters as well as their values. In the WebDriver module we use the default Selenium Server address and port.</source>
          <target state="translated">オプションのパラメーターについては、デフォルト値を設定する必要があります。 &lt;code&gt;$config&lt;/code&gt; プロパティは、オプションのパラメータだけでなく、それらの値を定義するために使用されます。WebDriverモジュールでは、デフォルトのSelenium Serverのアドレスとポートを使用します。</target>
        </trans-unit>
        <trans-unit id="0c2b3270f81d8efef9bfe83f07e50b9f2cf3091f" translate="yes" xml:space="preserve">
          <source>For this case we have a stand-alone project &lt;a href=&quot;https://github.com/Codeception/Specify&quot;&gt;Specify&lt;/a&gt; (which is included in the phar package) for writing specifications inside unit tests:</source>
          <target state="translated">この場合、単体テスト内で仕様を作成するためのスタンドアロンプ​​ロジェクト&lt;a href=&quot;https://github.com/Codeception/Specify&quot;&gt;Specify&lt;/a&gt;（pharパッケージに含まれています）があります。</target>
        </trans-unit>
        <trans-unit id="2804d9f16a38553f8238529c90d66e7d7426c150" translate="yes" xml:space="preserve">
          <source>Formats</source>
          <target state="translated">Formats</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="e77c86f29410406ccc7be23aa74e3143a35dfdc0" translate="yes" xml:space="preserve">
          <source>Framework modules also contain additional methods to access framework internals. For instance, Laravel5, Phalcon, and Yii2 modules have a &lt;code&gt;seeRecord&lt;/code&gt; method which uses the ActiveRecord layer to check that a record exists in the database.</source>
          <target state="translated">フレームワークモジュールには、フレームワークの内部にアクセスするための追加のメソッドも含まれています。たとえば、Laravel5、Phalcon、およびYii2モジュールには、データベースにレコードが存在することを確認するためにActiveRecordレイヤーを使用する &lt;code&gt;seeRecord&lt;/code&gt; メソッドがあります。</target>
        </trans-unit>
        <trans-unit id="230e839b4b298fa52bedbb4f73f7a3b720691150" translate="yes" xml:space="preserve">
          <source>From a user&amp;rsquo;s perspective, a form consists of fields which should be filled in, and then a submit button clicked:</source>
          <target state="translated">ユーザーの観点からすると、フォームは入力する必要のあるフィールドで構成され、送信ボタンがクリックされます。</target>
        </trans-unit>
        <trans-unit id="c23e371a0ebdc14e69250d4558deb51f38f28e90" translate="yes" xml:space="preserve">
          <source>From the developer&amp;rsquo;s perspective, submitting a form is just sending a valid POST request to the server. Sometimes it&amp;rsquo;s easier to fill in all of the fields at once and send the form without clicking a &amp;lsquo;Submit&amp;rsquo; button. A similar scenario can be rewritten with only one command:</source>
          <target state="translated">開発者の観点からは、フォームの送信は、有効なPOSTリクエストをサーバーに送信するだけです。すべてのフィールドに一度に入力して、「送信」ボタンをクリックせずにフォームを送信する方が簡単な場合があります。同様のシナリオは、1つのコマンドだけで書き直すことができます。</target>
        </trans-unit>
        <trans-unit id="9eaae7c2f954f888a61cb3b5d70a29942e6dd2f8" translate="yes" xml:space="preserve">
          <source>Full reference:</source>
          <target state="translated">完全に参照してください。</target>
        </trans-unit>
        <trans-unit id="dc9f6f603ab3ba9e205909d78198a6738617fe1a" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;sq&lt;/code&gt; generates sequence, the only parameter it takes, is id. You can get back to previously generated sequence using that id:</source>
          <target state="translated">関数 &lt;code&gt;sq&lt;/code&gt; はシーケンスを生成します。このパラメーターが取る唯一のパラメーターはidです。そのIDを使用して、以前に生成されたシーケンスに戻ることができます。</target>
        </trans-unit>
        <trans-unit id="dc8cc17fb9092b97f58b24c8584410fc2ce9317e" translate="yes" xml:space="preserve">
          <source>Functional Tests</source>
          <target state="translated">機能テスト</target>
        </trans-unit>
        <trans-unit id="51d813224c56b3851422593a485a03c3c95c745d" translate="yes" xml:space="preserve">
          <source>Functional tests are great if you are using powerful frameworks. By using functional tests you can access and manipulate their internal state. This makes your tests shorter and faster. In other cases, if you don&amp;rsquo;t use frameworks there is no practical reason to write functional tests. If you are using a framework other than the ones listed here, create a module for it and share it with the community.</source>
          <target state="translated">強力なフレームワークを使用している場合、機能テストは優れています。機能テストを使用すると、内部状態にアクセスして操作できます。これにより、テストがより短く、より速くなります。他の場合では、フレームワークを使用しない場合、機能テストを作成する実用的な理由はありません。ここにリストされているもの以外のフレームワークを使用している場合は、そのためのモジュールを作成し、コミュニティーと共有してください。</target>
        </trans-unit>
        <trans-unit id="a3d2ac90d205628e88b977671f545d4d5f18b48a" translate="yes" xml:space="preserve">
          <source>Functional tests are usually much faster than acceptance tests. But functional tests are less stable as they run Codeception and the application in one environment. If your application was not designed to run in long lived processes (e.g. if you use the &lt;code&gt;exit&lt;/code&gt; operator or global variables), then functional tests are probably not for you.</source>
          <target state="translated">通常、機能テストは受け入れテストよりもはるかに高速です。ただし、Codeceptionとアプリケーションを1つの環境で実行するため、機能テストの安定性は低くなります。アプリケーションが長期間のプロセスで実行するように設計されていない場合（たとえば、 &lt;code&gt;exit&lt;/code&gt; 演算子またはグローバル変数を使用する場合）、機能テストはおそらく適していません。</target>
        </trans-unit>
        <trans-unit id="d72d7693f9c6a84a94483dfe2ca7226a8faa9844" translate="yes" xml:space="preserve">
          <source>Functional tests are written in the same manner as &lt;a href=&quot;03-acceptancetests&quot;&gt;Acceptance Tests&lt;/a&gt; with the &lt;code&gt;PhpBrowser&lt;/code&gt; module enabled. All framework modules and the &lt;code&gt;PhpBrowser&lt;/code&gt; module share the same methods and the same engine.</source>
          <target state="translated">機能テストは、 &lt;code&gt;PhpBrowser&lt;/code&gt; モジュールを有効にした&lt;a href=&quot;03-acceptancetests&quot;&gt;受け入れテスト&lt;/a&gt;と同じ方法で記述されます。すべてのフレームワークモジュールと &lt;code&gt;PhpBrowser&lt;/code&gt; モジュールは、同じメソッドと同じエンジンを共有します。</target>
        </trans-unit>
        <trans-unit id="7ee5ba06f318a8dcffdfa92dd82f841cf66634eb" translate="yes" xml:space="preserve">
          <source>Functional tests cannot access external URL&amp;rsquo;s, just URL&amp;rsquo;s within your project. You can use Guzzle to open external URL&amp;rsquo;s.</source>
          <target state="translated">機能テストは外部URLにアクセスできません。プロジェクト内のURLだけにアクセスできます。Guzzleを使用して外部URLを開くことができます。</target>
        </trans-unit>
        <trans-unit id="d7fda9d4f53130cc854d11205dfa4df2b2fdfd97" translate="yes" xml:space="preserve">
          <source>Functional tests cannot access external URLs, just URLs within your project. You can use PhpBrowser to open external URLs.</source>
          <target state="translated">機能テストは外部URLにアクセスすることができません。PhpBrowser を使用して外部 URL を開くことができます。</target>
        </trans-unit>
        <trans-unit id="9904f8afaae3670e64e62940d714a243ced340bf" translate="yes" xml:space="preserve">
          <source>GeckoDriver</source>
          <target state="translated">GeckoDriver</target>
        </trans-unit>
        <trans-unit id="dc0f2e0e9b3e59990dec30a0ac81c70cc4f019cf" translate="yes" xml:space="preserve">
          <source>GenerateCept</source>
          <target state="translated">GenerateCept</target>
        </trans-unit>
        <trans-unit id="ee1f6396ad85edee909bfb6c4bcf6a95475de60d" translate="yes" xml:space="preserve">
          <source>GenerateCest</source>
          <target state="translated">GenerateCest</target>
        </trans-unit>
        <trans-unit id="2e780b624e3dcc3cbb676c84d7487a91a5de2ae5" translate="yes" xml:space="preserve">
          <source>GenerateEnvironment</source>
          <target state="translated">GenerateEnvironment</target>
        </trans-unit>
        <trans-unit id="55cd58ec496bcafbf58506dda6e6b6532042aefd" translate="yes" xml:space="preserve">
          <source>GenerateFeature</source>
          <target state="translated">GenerateFeature</target>
        </trans-unit>
        <trans-unit id="196f9fd11c8f6645b46c5d9c811c719260c06108" translate="yes" xml:space="preserve">
          <source>GenerateGroup</source>
          <target state="translated">GenerateGroup</target>
        </trans-unit>
        <trans-unit id="3e829afe203cf22b4063d313407b333d6b0149e2" translate="yes" xml:space="preserve">
          <source>GenerateHelper</source>
          <target state="translated">GenerateHelper</target>
        </trans-unit>
        <trans-unit id="2448e38fa0d8bc7b440530199706912f01087cff" translate="yes" xml:space="preserve">
          <source>GeneratePageObject</source>
          <target state="translated">GeneratePageObject</target>
        </trans-unit>
        <trans-unit id="8487977ca1daf437931942eeaa221d6ae3f641df" translate="yes" xml:space="preserve">
          <source>GenerateScenarios</source>
          <target state="translated">GenerateScenarios</target>
        </trans-unit>
        <trans-unit id="118a641a787953219a9895146709b3a5a003448c" translate="yes" xml:space="preserve">
          <source>GenerateSnapshot</source>
          <target state="translated">GenerateSnapshot</target>
        </trans-unit>
        <trans-unit id="175bb6e896c3b79289657048fabf5c28053af113" translate="yes" xml:space="preserve">
          <source>GenerateStepObject</source>
          <target state="translated">GenerateStepObject</target>
        </trans-unit>
        <trans-unit id="fc85a0f9024f036a90f617879cb102ce48e321e9" translate="yes" xml:space="preserve">
          <source>GenerateSuite</source>
          <target state="translated">GenerateSuite</target>
        </trans-unit>
        <trans-unit id="37a3c70af70896b775ac323695d46b4501ee732a" translate="yes" xml:space="preserve">
          <source>GenerateTest</source>
          <target state="translated">GenerateTest</target>
        </trans-unit>
        <trans-unit id="9dd86cb202e4108ea6a3d2ab9681507e4b03fb27" translate="yes" xml:space="preserve">
          <source>Generated template will look like this:</source>
          <target state="translated">生成されたテンプレートは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="e5fa869705cae9fd309004f72d2cea7318b49458" translate="yes" xml:space="preserve">
          <source>Generates Actor classes (initially Guy classes) from suite configs. Starting from Codeception 2.0 actor classes are auto-generated. Use this command to generate them manually.</source>
          <target state="translated">スイート設定からアクタークラス(初期値はガイクラス)を生成します。Codeception 2.0 以降、アクタークラスは自動生成されます。このコマンドを使って手動で生成します。</target>
        </trans-unit>
        <trans-unit id="2b58bada7715cf8b992b1f6b2564a2f697755269" translate="yes" xml:space="preserve">
          <source>Generates Cept (scenario-driven test) file:</source>
          <target state="translated">Cept(シナリオ駆動型テスト)ファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="cf2586fb34fd0caa90a7642368e489612574b21e" translate="yes" xml:space="preserve">
          <source>Generates Cest (scenario-driven object-oriented test) file:</source>
          <target state="translated">Cest(シナリオ駆動型オブジェクト指向テスト)ファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="5e6a017a288ddff9427bcede3a6d8a0a40f58b87" translate="yes" xml:space="preserve">
          <source>Generates Feature file (in Gherkin):</source>
          <target state="translated">フィーチャーファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="9ac9a4a75323298178cc9eb88d100f717dd818e4" translate="yes" xml:space="preserve">
          <source>Generates PageObject. Can be generated either globally, or just for one suite. If PageObject is generated globally it will act as UIMap, without any logic in it.</source>
          <target state="translated">ページオブジェクトを生成します。グローバルに生成することも、一つのスイートに対してだけ生成することもできます。PageObject がグローバルに生成された場合は、それは UIMap として動作しますが、その中には何のロジックもありません。</target>
        </trans-unit>
        <trans-unit id="59156ddea8e47a1711a7de06c5b69f44bd76ca45" translate="yes" xml:space="preserve">
          <source>Generates Snapshot. Snapshot can be used to test dynamical data. If suite name is provided, an actor class will be included into placeholder</source>
          <target state="translated">スナップショットを生成します。スナップショットは、動的なデータをテストするために使用することができます。スイート名が指定された場合、アクタークラスがプレースホルダ</target>
        </trans-unit>
        <trans-unit id="442ff84b6d759ec3c5f4f980e432b1974b53a256" translate="yes" xml:space="preserve">
          <source>Generates StepObject class. You will be asked for steps you want to implement.</source>
          <target state="translated">StepObjectクラスを生成します。実装したいステップを聞かれます。</target>
        </trans-unit>
        <trans-unit id="7817eb3a531929e4c91565de65f5196016b3465e" translate="yes" xml:space="preserve">
          <source>Generates a record instance.</source>
          <target state="translated">レコードインスタンスを生成します。</target>
        </trans-unit>
        <trans-unit id="09d40da35f3f8563d002244e6c0160d039637e30" translate="yes" xml:space="preserve">
          <source>Generates and saves a record multiple times.</source>
          <target state="translated">レコードを複数回生成して保存します。</target>
        </trans-unit>
        <trans-unit id="a7e3518f67f13058efacd02ee01b50d76a755a76" translate="yes" xml:space="preserve">
          <source>Generates and saves a record,.</source>
          <target state="translated">レコードを生成して保存します。</target>
        </trans-unit>
        <trans-unit id="4f9eb322db2b5a5bc4d035ae86eba5aa7a5b67a3" translate="yes" xml:space="preserve">
          <source>Generates code snippets for matched feature files in a suite. Code snippets are expected to be implemented in Actor or PageObjects</source>
          <target state="translated">スイート内のマッチしたフィーチャファイルのコードスニペットを生成します。コードスニペットは Actor あるいは PageObjects で実装されていることが期待されます。</target>
        </trans-unit>
        <trans-unit id="9405beebdd6faa6cf76e76f8e00470234923fe8d" translate="yes" xml:space="preserve">
          <source>Generates empty environment configuration file into envs dir:</source>
          <target state="translated">空の環境設定ファイルをenvsディレクトリに生成します。</target>
        </trans-unit>
        <trans-unit id="8abb45ca00fa04d939fcc0dbd91ecd9bed3a668f" translate="yes" xml:space="preserve">
          <source>Generates skeleton for Unit Test that extends &lt;code&gt;Codeception\TestCase\Test&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Codeception\TestCase\Test&lt;/code&gt; を拡張する単体テストのスケルトンを生成します。</target>
        </trans-unit>
        <trans-unit id="4e909d2aecb2e69572aee8636e0fda3b37288013" translate="yes" xml:space="preserve">
          <source>Generates user-friendly text scenarios from scenario-driven tests (Cest, Cept).</source>
          <target state="translated">シナリオ駆動型テスト(Cest、Cept)からユーザーフレンドリーなテキストシナリオを生成します。</target>
        </trans-unit>
        <trans-unit id="15c3313d2ab7dec9bd9c193b95de1a2621ebe2dd" translate="yes" xml:space="preserve">
          <source>Generation rules can be defined in a factories file. You will need to create &lt;code&gt;factories.php&lt;/code&gt; (it is recommended to store it in &lt;code&gt;_support&lt;/code&gt; dir) Follow &lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;FactoryMuffin documentation&lt;/a&gt; to set valid rules. Random data provided by &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; library.</source>
          <target state="translated">生成ルールは、factoriesファイルで定義できます。 &lt;code&gt;factories.php&lt;/code&gt; を作成する必要があります（ &lt;code&gt;_support&lt;/code&gt; dir に保存することをお勧めし&lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;ます&lt;/a&gt;）FactoryMuffinのドキュメントに従って有効なルールを設定してください。&lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt;ライブラリによって提供されるランダムデータ。</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="8bd4b37103eed7282897baad2200ced9d032fcef" translate="yes" xml:space="preserve">
          <source>Get all enabled modules</source>
          <target state="translated">すべての有効なモジュールを取得</target>
        </trans-unit>
        <trans-unit id="712996f7fd919e4fb57d2af134553cd5ffd998aa" translate="yes" xml:space="preserve">
          <source>Get another module by its name:</source>
          <target state="translated">別のモジュールをその名前で取得します。</target>
        </trans-unit>
        <trans-unit id="25bd54b4f707257cf58e03749be5d271d3aad2b3" translate="yes" xml:space="preserve">
          <source>Get config values or specific config item.</source>
          <target state="translated">設定値や特定の設定項目を取得します。</target>
        </trans-unit>
        <trans-unit id="a1949d9149f66aa72d522586d591d09ecc392eb7" translate="yes" xml:space="preserve">
          <source>Get service $serviceName and add it to the lists of persistent services. If $isPermanent then service becomes persistent between tests</source>
          <target state="translated">サービス $serviceName を取得し、永続的なサービスのリストに追加します。isPermanent の場合、サービスはテスト間で永続化されます。</target>
        </trans-unit>
        <trans-unit id="2ec731b33b8ca2924da6ce64be89446c74f3851a" translate="yes" xml:space="preserve">
          <source>Gets a component from Yii container. Throws exception if component is not available</source>
          <target state="translated">Yii コンテナからコンポーネントを取得します。コンポーネントが利用できない場合は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="f22c29ad5770ba0303e7797998ae5163c8dcb7b3" translate="yes" xml:space="preserve">
          <source>Gets a component from the Yii container. Throws an exception if the component is not available</source>
          <target state="translated">Yii コンテナからコンポーネントを取得します。コンポーネントが利用できない場合は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="1d645fea276f55fbb46a3d2a4037938d6f18f99d" translate="yes" xml:space="preserve">
          <source>Gets a fixture by name. Returns a Fixture instance. If a fixture is an instance of &lt;code&gt;\yii\test\BaseActiveFixture&lt;/code&gt; a second parameter can be used to return a specific model:</source>
          <target state="translated">名前でフィクスチャを取得します。Fixtureインスタンスを返します。フィクスチャーが &lt;code&gt;\yii\test\BaseActiveFixture&lt;/code&gt; インスタンスである場合、2番目のパラメーターを使用して特定のモデルを返すことができます。</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">はじめに</target>
        </trans-unit>
        <trans-unit id="780483cc1f6d59df26ad28d7d8c2a351a2ebfc46" translate="yes" xml:space="preserve">
          <source>Gherkin</source>
          <target state="translated">Gherkin</target>
        </trans-unit>
        <trans-unit id="c42e703505f6b7ea1619de93c8de53117127325f" translate="yes" xml:space="preserve">
          <source>Gherkin scenarios and features can contain tags marked with &lt;code&gt;@&lt;/code&gt;. Tags are equal to groups in Codeception. This way if you define a feature with &lt;code&gt;@important&lt;/code&gt; tag, you can execute it inside &lt;code&gt;important&lt;/code&gt; group by running:</source>
          <target state="translated">Gherkinのシナリオと機能には、 &lt;code&gt;@&lt;/code&gt; でマークされたタグを含めることができます。タグはCodeceptionのグループと同じです。このように、 &lt;code&gt;@important&lt;/code&gt; タグで機能を定義した場合、次のコマンドを実行することで、 &lt;code&gt;important&lt;/code&gt; グループ内で機能を実行できます。</target>
        </trans-unit>
        <trans-unit id="a045696569e961274c1f469453654f0a7cd9e620" translate="yes" xml:space="preserve">
          <source>GherkinSnippets</source>
          <target state="translated">GherkinSnippets</target>
        </trans-unit>
        <trans-unit id="0035ab42ac10b598787a458c38c2fc1f4982c720" translate="yes" xml:space="preserve">
          <source>GherkinSteps</source>
          <target state="translated">GherkinSteps</target>
        </trans-unit>
        <trans-unit id="9a9b09d909186a1ea088b925aea4172596fea7db" translate="yes" xml:space="preserve">
          <source>GitLab</source>
          <target state="translated">GitLab</target>
        </trans-unit>
        <trans-unit id="3393c86c82f15f0a36806efa76cea62ba99b9058" translate="yes" xml:space="preserve">
          <source>Given a docker command similar to:</source>
          <target state="translated">と似たようなdockerコマンドを与えます。</target>
        </trans-unit>
        <trans-unit id="2b173721985fd05f1b95fbdd97500d9fd4455ef0" translate="yes" xml:space="preserve">
          <source>Global Bootstrap</source>
          <target state="translated">グローバルブートストラップ</target>
        </trans-unit>
        <trans-unit id="602d92b2e14ac385c7289a85d36ef682a9e44c22" translate="yes" xml:space="preserve">
          <source>Global Configuration</source>
          <target state="translated">グローバル設定</target>
        </trans-unit>
        <trans-unit id="c7d29a9da7ed07dece46126737d5e37085de0a5f" translate="yes" xml:space="preserve">
          <source>Grabber method for returning file/folders count in directory</source>
          <target state="translated">ディレクトリ内のファイル/フォルダ数を返すグラバーメソッド</target>
        </trans-unit>
        <trans-unit id="e5d03438c7a7c2d31514c6d9360b4cab38c7c0ba" translate="yes" xml:space="preserve">
          <source>Grabber method for returning file/folders listing in an array</source>
          <target state="translated">配列内のファイル/フォルダの一覧を返すグラバーメソッド</target>
        </trans-unit>
        <trans-unit id="d514d15aa894d863bff8a11e4a0f863a156b0231" translate="yes" xml:space="preserve">
          <source>Grabber method to get the current number of messages on the queue/tube (pending/ready)</source>
          <target state="translated">キュー/チューブ上の現在のメッセージ数を取得するグラバーメソッド (pending/ready)</target>
        </trans-unit>
        <trans-unit id="677dc868a8f0c7a796370eaae26d827f73cd633b" translate="yes" xml:space="preserve">
          <source>Grabber method to get the list of queues/tubes on the server</source>
          <target state="translated">サーバ上のキュー/チューブのリストを取得するグラバーメソッド</target>
        </trans-unit>
        <trans-unit id="83a2bf4c40c57436af2729886eaca3836484a090" translate="yes" xml:space="preserve">
          <source>Grabber method to get the total number of messages on the queue/tube</source>
          <target state="translated">キュー/チューブ上のメッセージの総数を取得するグラバーメソッド</target>
        </trans-unit>
        <trans-unit id="c5a4e40f10297bf2408d42ed0a1edd531458fb02" translate="yes" xml:space="preserve">
          <source>Grabber method to return current working directory</source>
          <target state="translated">現在の作業ディレクトリを返すグラバーメソッド</target>
        </trans-unit>
        <trans-unit id="1373dc85057b1b6cabe7b9e2b48863e05b8c42ce" translate="yes" xml:space="preserve">
          <source>Grabber method to return file size</source>
          <target state="translated">ファイルサイズを返すグラバーメソッド</target>
        </trans-unit>
        <trans-unit id="e109afd0dd30240c10cf22635a671e6b8e3cc199" translate="yes" xml:space="preserve">
          <source>Grabber method to return last modified timestamp</source>
          <target state="translated">最後に修正されたタイムスタンプを返すグラバーメソッド</target>
        </trans-unit>
        <trans-unit id="ecccd585cb761ae8c732001b1132af2ef2b279e9" translate="yes" xml:space="preserve">
          <source>Grabbers</source>
          <target state="translated">Grabbers</target>
        </trans-unit>
        <trans-unit id="1c137f14dd35adddd95a50b45e58e5e56164fa5e" translate="yes" xml:space="preserve">
          <source>Grabbers allow you to get a single value from the current page with commands:</source>
          <target state="translated">グラバーでは、現在のページからコマンドで1つの値を取得することができます。</target>
        </trans-unit>
        <trans-unit id="e45f847f7f729ff176548ecefc598f5fe9de7cfc" translate="yes" xml:space="preserve">
          <source>Grabs a cookie value. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; in array passed as last argument.</source>
          <target state="translated">cookie値を取得します。 &lt;code&gt;domain&lt;/code&gt; 、最後の引数として渡された配列の &lt;code&gt;path&lt;/code&gt; などの追加のCookieパラメータを設定できます。</target>
        </trans-unit>
        <trans-unit id="e4f98e1b905b96ca527f15e50dc4fa636130c6af" translate="yes" xml:space="preserve">
          <source>Grabs a cookie value. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; in array passed as last argument. If the cookie is set by an ajax request (XMLHttpRequest), there might be some delay caused by the browser, so try &lt;code&gt;$I-&amp;gt;wait(0.1)&lt;/code&gt;.</source>
          <target state="translated">Cookieの値を取得します。 &lt;code&gt;domain&lt;/code&gt; 、最後の引数として渡された配列の &lt;code&gt;path&lt;/code&gt; など、追加のCookieパラメータを設定できます。Cookieがajaxリクエスト（XMLHttpRequest）によって設定されている場合、ブラウザが原因で遅延が発生する可能性があるため、 &lt;code&gt;$I-&amp;gt;wait(0.1)&lt;/code&gt; 試してください。</target>
        </trans-unit>
        <trans-unit id="9e06421095962455d5d34f735a98760703b6cae0" translate="yes" xml:space="preserve">
          <source>Grabs a data from collection</source>
          <target state="translated">コレクションからデータを取得</target>
        </trans-unit>
        <trans-unit id="48a623dadfc604eb30e8e40209bb7d91c1d5ad54" translate="yes" xml:space="preserve">
          <source>Grabs a service from Symfony DIC container. Recommended to use for unit testing.</source>
          <target state="translated">symfonyのDICコンテナからサービスを取得します。ユニットテストに使うことをおすすめします。</target>
        </trans-unit>
        <trans-unit id="4a590e73cec9e8c4c951cc8e17cfa9a93fedba3a" translate="yes" xml:space="preserve">
          <source>Grabs a service from ZF2 container. Recommended to use for unit testing.</source>
          <target state="translated">ZF2コンテナからサービスを取得します。ユニットテストに使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f9fce2c1f105fead8404a1c35f6c671734d086bf" translate="yes" xml:space="preserve">
          <source>Grabs a service from the Symfony dependency injection container (DIC). In &amp;ldquo;test&amp;rdquo; environment, Symfony uses a special &lt;code&gt;test.service_container&lt;/code&gt;, see https://symfony.com/doc/current/testing.html#accessing-the-container Services that aren&amp;rsquo;t injected somewhere into your app, need to be defined as &lt;code&gt;public&lt;/code&gt; to be accessible by Codeception.</source>
          <target state="translated">Symfony依存性注入コンテナ（DIC）からサービスを取得します。「テスト」環境では、Symfonyは特別な &lt;code&gt;test.service_container&lt;/code&gt; を使用します。https：//symfony.com/doc/current/testing.html#accessing-the-containerを参照してください。アプリのどこかに注入されていないサービスは、Codeceptionがアクセスできる &lt;code&gt;public&lt;/code&gt; として定義されています。</target>
        </trans-unit>
        <trans-unit id="00a14c29e8243df68228d6623b1cf8fc6e3b6e70" translate="yes" xml:space="preserve">
          <source>Grabs current page source code.</source>
          <target state="translated">現在のページのソースコードを取得します。</target>
        </trans-unit>
        <trans-unit id="12b28dd7da3541b2b447b4a9f5cbd1923804565b" translate="yes" xml:space="preserve">
          <source>Grabs either the text content, or attribute values, of nodes matched by $cssOrXpath and returns them as an array.</source>
          <target state="translated">cssOrXpath でマッチしたノードのテキスト内容あるいは属性値のいずれかを取得し、それらを配列として返します。</target>
        </trans-unit>
        <trans-unit id="3112d56e80e3ff324bf9c20821e979946ecc65f9" translate="yes" xml:space="preserve">
          <source>Grabs the documents count from a collection</source>
          <target state="translated">コレクションからドキュメントの数を取得します</target>
        </trans-unit>
        <trans-unit id="7906a243946c700ecd6fb3c2f997a15c1fa20cbe" translate="yes" xml:space="preserve">
          <source>Grabs the value of the given attribute value from the given element. Fails if element is not found.</source>
          <target state="translated">与えられた要素から与えられた属性値の値を取得します。要素が見つからない場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="ea965f7c8c60aa39e2ec7e0efb646a5c07eb6b19" translate="yes" xml:space="preserve">
          <source>Grabs value from APC(u) by key.</source>
          <target state="translated">APC(u)の値をキーで取得します。</target>
        </trans-unit>
        <trans-unit id="452dfb820725b06fcf08f3061caf8473dc52a51b" translate="yes" xml:space="preserve">
          <source>Grabs value from memcached by key.</source>
          <target state="translated">memcachedの値をキーで取得します。</target>
        </trans-unit>
        <trans-unit id="889172ca62b7702bb5f9d09aded81336cc583360" translate="yes" xml:space="preserve">
          <source>Great for debugging, but too slow when collecting coverage</source>
          <target state="translated">デバッグには最適だが、カバレッジの収集には時間がかかりすぎる</target>
        </trans-unit>
        <trans-unit id="503d96d5ebb58b1a639868bffd411d7d5f0bf12b" translate="yes" xml:space="preserve">
          <source>Group Files</source>
          <target state="translated">グループファイル</target>
        </trans-unit>
        <trans-unit id="1110b90dcfd4efa5108ee6fe11215110f0e8f396" translate="yes" xml:space="preserve">
          <source>Group Objects</source>
          <target state="translated">グループ オブジェクト</target>
        </trans-unit>
        <trans-unit id="1b5b3e83469262bdc56a69edd159a8373d421ce6" translate="yes" xml:space="preserve">
          <source>Group Objects are extensions listening for the events of tests belonging to a specific group. When a test is added to a group:</source>
          <target state="translated">グループオブジェクトは、特定のグループに属するテストのイベントをリッスンする拡張機能です。テストがグループに追加されると</target>
        </trans-unit>
        <trans-unit id="490c479fe1a2f63c719904efad9cbf6642825a29" translate="yes" xml:space="preserve">
          <source>GroupObjects can also be used to update the module configuration before running a test. For instance, for &lt;code&gt;nocleanup&lt;/code&gt; group we prevent Doctrine2 module from wrapping test into transaction:</source>
          <target state="translated">GroupObjectsを使用して、テストを実行する前にモジュール構成を更新することもできます。例えば、 &lt;code&gt;nocleanup&lt;/code&gt; グループの場合、Doctrine2モジュールがテストをトランザクションにラップするのを防ぎます：</target>
        </trans-unit>
        <trans-unit id="ae9629f4ebb82c6331c0809fa9a0e54b00e578e6" translate="yes" xml:space="preserve">
          <source>Groups</source>
          <target state="translated">Groups</target>
        </trans-unit>
        <trans-unit id="5f3a6a95a5cd4dab412f4d65715ebcccf69fadf3" translate="yes" xml:space="preserve">
          <source>Groups can be defined in global or suite configuration files. Tests for groups can be specified as an array of file names or directories containing them:</source>
          <target state="translated">グループは、グローバル設定ファイルまたはスイート設定ファイルで定義できます。グループのテストは、ファイル名の配列またはそれらを含むディレクトリとして指定することができます。</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="5d105737ec88ec89afd98cdc6915e9f6e252c011" translate="yes" xml:space="preserve">
          <source>Guzzle + Symfony BrowserKit</source>
          <target state="translated">Guzzle+Symfony BrowserKit</target>
        </trans-unit>
        <trans-unit id="7a5595985553c0eee14d8aa7f26cf5251fd44098" translate="yes" xml:space="preserve">
          <source>HINT: This module can be used with &lt;a href=&quot;https://github.com/mongofill/mongofill&quot;&gt;Mongofill&lt;/a&gt; library which is Mongo client written in PHP without extension.</source>
          <target state="translated">ヒント：このモジュールは、拡張機能なしでPHPで記述されたMongoクライアントである&lt;a href=&quot;https://github.com/mongofill/mongofill&quot;&gt;Mongofill&lt;/a&gt;ライブラリで使用できます。</target>
        </trans-unit>
        <trans-unit id="fd7a3bde0e51769aa54ac2082b5416a40c12e967" translate="yes" xml:space="preserve">
          <source>HOOK to be executed when config changes with &lt;code&gt;_reconfigure&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_reconfigure&lt;/code&gt; で configが変更されたときに実行されるHOOK 。</target>
        </trans-unit>
        <trans-unit id="9e0605768edcc41bd747813217479829f55d14cc" translate="yes" xml:space="preserve">
          <source>HTML Reports</source>
          <target state="translated">HTMLレポート</target>
        </trans-unit>
        <trans-unit id="227df43d13dcae2e9d126e4994c8d11625b92054" translate="yes" xml:space="preserve">
          <source>HTML report generation can at times take a little more time than the default 30 second timeout. Or maybe you want to alter SSL settings (verify_peer, for example) To alter the way c3 sends it&amp;rsquo;s service requests to your webserver (be it a local or a remote one), you can use the &lt;code&gt;remote_context_options&lt;/code&gt; key in &lt;code&gt;coverage&lt;/code&gt; settings.</source>
          <target state="translated">HTMLレポートの生成には、デフォルトの30秒のタイムアウトよりも少し時間がかかる場合があります。または、SSL設定（verify_peerなど）を変更したい場合があります。c3がサービスリクエストをWebサーバーに送信する方法（ローカルまたはリモート）を変更するには、 &lt;code&gt;coverage&lt;/code&gt; 設定で &lt;code&gt;remote_context_options&lt;/code&gt; キーを使用できます。</target>
        </trans-unit>
        <trans-unit id="89efe2c38c15de0678741b4c213873467e5c4c00" translate="yes" xml:space="preserve">
          <source>Handles and checks exception called inside callback function. Either exception class name or exception instance should be provided.</source>
          <target state="translated">コールバック関数内で呼び出された例外を処理し、チェックします。例外クラス名または例外インスタンスのいずれかを指定します。</target>
        </trans-unit>
        <trans-unit id="02ce23d3a5af583936f06e1b841cf8b84b3cb596" translate="yes" xml:space="preserve">
          <source>Handles and checks throwables (Exceptions/Errors) called inside the callback function. Either throwable class name or throwable instance should be provided.</source>
          <target state="translated">コールバック関数内で呼び出された throwable (Exceptions/Error)を処理し、チェックします。throwable クラス名または throwable インスタンスのいずれかを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="eeb5d04a23bfa9da8ac0874047a99da1935bca3d" translate="yes" xml:space="preserve">
          <source>Headers, Cookies, Sessions</source>
          <target state="translated">ヘッダ、クッキー、セッション</target>
        </trans-unit>
        <trans-unit id="e1b9317c83fab7ba93f4867cc6c1ca38210766dd" translate="yes" xml:space="preserve">
          <source>Headless Selenium in Docker</source>
          <target state="translated">DockerでのヘッドレスSelenium</target>
        </trans-unit>
        <trans-unit id="3c9b3433e6f225e4ae00ef2041d44d91bfbf7113" translate="yes" xml:space="preserve">
          <source>Helpers</source>
          <target state="translated">Helpers</target>
        </trans-unit>
        <trans-unit id="b40956a3e6d21b2b4918e977fd6c0688c44efa3f" translate="yes" xml:space="preserve">
          <source>Here are global options you can change inside configuration:</source>
          <target state="translated">ここでは、設定の中で変更できるグローバルオプションを紹介します。</target>
        </trans-unit>
        <trans-unit id="7695b2dcac5e85b2ff0de262068039e2a2e918b9" translate="yes" xml:space="preserve">
          <source>Here are the events and event classes. The events are listed in the order in which they happen during execution. All listed events are available as constants in &lt;code&gt;Codeception\Events&lt;/code&gt; class.</source>
          <target state="translated">ここにイベントとイベントクラスがあります。イベントは、実行中に発生する順序でリストされています。リストされているすべてのイベントは、 &lt;code&gt;Codeception\Events&lt;/code&gt; クラスの定数として使用できます。</target>
        </trans-unit>
        <trans-unit id="f18961b4076a1de65beaa3eb3077ab7557ed0411" translate="yes" xml:space="preserve">
          <source>Here is the list of possible filters:</source>
          <target state="translated">ここでは、可能なフィルターの一覧です。</target>
        </trans-unit>
        <trans-unit id="ab818eb857f1d76575e858d9ddbda95e82489a9d" translate="yes" xml:space="preserve">
          <source>Here we also use word &lt;strong&gt;And&lt;/strong&gt; to extend the Given and not to repeat it in each line.</source>
          <target state="translated">ここでは、&lt;strong&gt;And&lt;/strong&gt;を使用して、Givenを拡張し、各行で繰り返さないようにしています。</target>
        </trans-unit>
        <trans-unit id="24f6f5ceb0f22377c877086a1a1c40207bbc2fc8" translate="yes" xml:space="preserve">
          <source>Hiding Sensitive Data</source>
          <target state="translated">機密データの隠蔽</target>
        </trans-unit>
        <trans-unit id="b1a5954a483f8f8b0207385095f74aeb409b3f80" translate="yes" xml:space="preserve">
          <source>High</source>
          <target state="translated">High</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="689231f76da018f6b4903ebe583284eada9989a1" translate="yes" xml:space="preserve">
          <source>How does your client, manager, tester, or any other non-technical person know your website is working? By opening the browser, accessing the site, clicking on links, filling in the forms, and actually seeing the content on a web page. They have no idea of the programming language, framework, database, web-server, or why the application did (or did not) behave as expected.</source>
          <target state="translated">クライアント、マネージャー、テスター、またはその他の非技術者は、どのようにしてあなたのウェブサイトが機能していることを知っていますか?ブラウザを開いたり、サイトにアクセスしたり、リンクをクリックしたり、フォームに入力したり、ウェブページのコンテンツを実際に見たりすることによってです。彼らは、プログラミング言語、フレームワーク、データベース、ウェブサーバ、またはなぜアプリケーションが期待通りの動作をしたのか(またはしなかったのか)について何も考えていません。</target>
        </trans-unit>
        <trans-unit id="100cb0b9b76cf128bd36c57de623e9519f3f1a9c" translate="yes" xml:space="preserve">
          <source>How it Works</source>
          <target state="translated">どのように機能するか</target>
        </trans-unit>
        <trans-unit id="387902260cb3397f856a32b5ffe10d5bcee0a24b" translate="yes" xml:space="preserve">
          <source>How parallel processes will be executed?</source>
          <target state="translated">並列処理はどのように実行されるのか?</target>
        </trans-unit>
        <trans-unit id="3b249af3cc31064db6623f6b42a9fa76b8437a60" translate="yes" xml:space="preserve">
          <source>How parallel processes won&amp;rsquo;t affect each other?</source>
          <target state="translated">並列処理は互いにどのように影響しませんか？</target>
        </trans-unit>
        <trans-unit id="b98235238b42317e814677825d7f3620a393ad41" translate="yes" xml:space="preserve">
          <source>How should I split my tests across parallel processes?</source>
          <target state="translated">並列プロセスにまたがってテストを分割するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="0b7437aa06310154346b33d1a9318ee01520d2a4" translate="yes" xml:space="preserve">
          <source>However, Dependency Injection is not limited to this. It allows you to &lt;strong&gt;inject any class&lt;/strong&gt;, which can be constructed with arguments known to Codeception.</source>
          <target state="translated">ただし、Dependency Injectionはこれに限定されません。これにより、Codeceptionに既知の引数を使用して構築できる&lt;strong&gt;任意のクラス&lt;/strong&gt;を&lt;strong&gt;注入&lt;/strong&gt;できます。</target>
        </trans-unit>
        <trans-unit id="f035e60f9d5c406224f0d8aa2bfca72b2581b89e" translate="yes" xml:space="preserve">
          <source>However, implementing all actions for reuse in a single actor class may lead to breaking the &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;Single Responsibility Principle&lt;/a&gt;.</source>
          <target state="translated">ただし、単一のアクタークラスで再利用するすべてのアクションを実装すると、&lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;単一の責任の原則が&lt;/a&gt;破られる可能性があります。</target>
        </trans-unit>
        <trans-unit id="8adfb00f01b51b9ffb8c1f8a25adf4d035e90f7d" translate="yes" xml:space="preserve">
          <source>However, in WebDriver configuration changes can&amp;rsquo;t be applied that easily. For instance, if you change the browser you need to close the current browser session and start a new one. For that WebDriver module provides &lt;code&gt;_restart&lt;/code&gt; method which takes an array with config and restarts the browser.</source>
          <target state="translated">ただし、WebDriverの構成変更はそれほど簡単には適用できません。たとえば、ブラウザを変更した場合、現在のブラウザセッションを閉じて、新しいセッションを開始する必要があります。そのため、WebDriverモジュールは &lt;code&gt;_restart&lt;/code&gt; メソッドを提供します。このメソッドは、configで配列を取得し、ブラウザーを再起動します。</target>
        </trans-unit>
        <trans-unit id="52c9d50a23589e9a152cb2d2516d2d2bc8b4af70" translate="yes" xml:space="preserve">
          <source>However, it should be noted that PhantomJS is not a real browser, so the behavior and output in real browsers may differ from PhantomJS. And the most important: &lt;strong&gt;PhantomJS is not maintained&lt;/strong&gt; anymore. So use it at your own risk.</source>
          <target state="translated">ただし、PhantomJSは実際のブラウザではないため、実際のブラウザでの動作や出力はPhantomJSと異なる場合があることに注意してください。そして最も重要なのは、&lt;strong&gt;PhantomJSが&lt;/strong&gt;もう&lt;strong&gt;メンテナンスされてい&lt;/strong&gt;ないことです。したがって、自己責任で使用してください。</target>
        </trans-unit>
        <trans-unit id="67a0654eac740adb40c2b3015ca83476f15f9627" translate="yes" xml:space="preserve">
          <source>However, when loading a framework module (e.g. &lt;a href=&quot;symfony&quot;&gt;Symfony&lt;/a&gt;) like this, it would lead to a conflict: When you call &lt;code&gt;$I-&amp;gt;amOnPage()&lt;/code&gt;, Codeception wouldn&amp;rsquo;t know if you want to access the page using WebDriver&amp;rsquo;s &lt;code&gt;amOnPage()&lt;/code&gt;, or Symfony&amp;rsquo;s &lt;code&gt;amOnPage()&lt;/code&gt;. That&amp;rsquo;s why possibly conflicting modules are separated into &amp;ldquo;parts&amp;rdquo;. Here&amp;rsquo;s how to load just the &amp;ldquo;services&amp;rdquo; part from e.g. Symfony:</source>
          <target state="translated">ただし、このようなフレームワークモジュール（&lt;a href=&quot;symfony&quot;&gt;Symfonyなど&lt;/a&gt;）をロードすると、競合が発生します。 &lt;code&gt;$I-&amp;gt;amOnPage()&lt;/code&gt; を呼び出すと、CodeceptionはWebDriverの &lt;code&gt;amOnPage()&lt;/code&gt; を使用してページにアクセスするかどうかを認識しません。またはSymfonyの &lt;code&gt;amOnPage()&lt;/code&gt; 。そのため、競合する可能性のあるモジュールが「パーツ」に分割されます。Symfonyなどから「サービス」部分だけをロードする方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1b78276b14c1666fe46774d5c299e3b7cd97b74e" translate="yes" xml:space="preserve">
          <source>HttpCode::getDescription()</source>
          <target state="translated">HttpCode::getDescription()</target>
        </trans-unit>
        <trans-unit id="16f48492b9dd86833885fc4c19cbf9573910b7d0" translate="yes" xml:space="preserve">
          <source>If $key already exists:</source>
          <target state="translated">すでに$keyが存在する場合。</target>
        </trans-unit>
        <trans-unit id="8c5eee88a3ec20baa65dd8a37aaffd9045fd9ada" translate="yes" xml:space="preserve">
          <source>If a class is in a &lt;code&gt;Codeception\Extension&lt;/code&gt; namespace you can skip it and provide only a shortname. So Recorder extension can be started like this:</source>
          <target state="translated">クラスが &lt;code&gt;Codeception\Extension&lt;/code&gt; 名前空間にある場合は、クラスをスキップして、短い名前のみを指定できます。したがって、レコーダー拡張機能は次のように開始できます。</target>
        </trans-unit>
        <trans-unit id="5857b707915b71c0d684ef95b21b092e549ff4ff" translate="yes" xml:space="preserve">
          <source>If a field is sent to this function that does &lt;em&gt;not&lt;/em&gt; exist on the page, it will silently be added to the HTTP request. This is helpful for testing some types of forms, but be aware that you will &lt;em&gt;not&lt;/em&gt; get an exception like you would if you called &lt;code&gt;fillField()&lt;/code&gt; or &lt;code&gt;selectOption()&lt;/code&gt; with a missing field.</source>
          <target state="translated">ページに存在し&lt;em&gt;ない&lt;/em&gt;フィールドがこの関数に送信されると、HTTPリクエストに暗黙的に追加されます。これは、一部のタイプのフォームをテストするのに役立ちますが、フィールドが欠落している &lt;code&gt;fillField()&lt;/code&gt; または &lt;code&gt;selectOption()&lt;/code&gt; を呼び出した場合のように例外が発生し&lt;em&gt;ない&lt;/em&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="18d59c6525218de9a9585b5e2dbdeb1f1028fcea" translate="yes" xml:space="preserve">
          <source>If a file &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; exists in the root of the git repository, GitLab will run a pipeline each time you push to the gitlab server. The file configures the docker image that will be called. Below is a sample which loads a php7 docker image, clones your files, installs composer dependencies, runs the built-in php webserver and finally runs codeception:</source>
          <target state="translated">ファイル &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; がgitリポジトリのルートに存在する場合、GitLabはgitlabサーバーにpushするたびにパイプラインを実行します。このファイルは、呼び出されるDockerイメージを構成します。以下は、php7 Dockerイメージをロードし、ファイルのクローンを作成し、composer依存関係をインストールし、組み込みのphpウェブサーバーを実行し、最後にcodeceptionを実行するサンプルです。</target>
        </trans-unit>
        <trans-unit id="85ef7aef411f65b78085f9eb85a440408eec4005" translate="yes" xml:space="preserve">
          <source>If a group of scenarios have the same initial steps we can define a &lt;em&gt;Background&lt;/em&gt; section to be used prior to those steps being run. This allows us to avoid repeating our steps across multiple scenarios. Let&amp;rsquo;s say that for the dashboard feature we always need to be logged in as administrator.</source>
          <target state="translated">シナリオのグループに同じ初期ステップがある場合、それらのステップが実行される前に使用される&lt;em&gt;バックグラウンド&lt;/em&gt;セクションを定義できます。これにより、複数のシナリオで手順を繰り返す必要がなくなります。ダッシュボード機能では、常に管理者としてログインする必要があるとしましょう。</target>
        </trans-unit>
        <trans-unit id="ecf4cc1ca2ce0831783cc4714b8a20bf6722ad82" translate="yes" xml:space="preserve">
          <source>If a group of scenarios have the same initial steps, let&amp;rsquo;s that for dashboard we always need to be logged in as administrator. We can use &lt;em&gt;Background&lt;/em&gt; section to do the required preparations and not to repeat same steps across scenarios.</source>
          <target state="translated">シナリオのグループに同じ初期ステップがある場合、ダッシュボードの場合は常に管理者としてログインする必要があります。&lt;em&gt;背景&lt;/em&gt;セクションを使用して、必要な準備を行い、シナリオ間で同じ手順を繰り返さないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="ba9c01d5e2fa494fd90e2b6b77a2965bb2a7b923" translate="yes" xml:space="preserve">
          <source>If accessing modules doesn&amp;rsquo;t provide enough flexibility, you can extend a module inside a Helper class:</source>
          <target state="translated">モジュールにアクセスしても十分な柔軟性が得られない場合は、ヘルパークラス内のモジュールを拡張できます。</target>
        </trans-unit>
        <trans-unit id="aae5809ec59e0c5e96f9133f9a350f7a1effc2e4" translate="yes" xml:space="preserve">
          <source>If criteria is just a &lt;code&gt;-&amp;gt;where(...)&lt;/code&gt; construct, you can pass just expression without criteria wrapper:</source>
          <target state="translated">基準が単なる &lt;code&gt;-&amp;gt;where(...)&lt;/code&gt; 構文である場合、基準ラッパーなしで式のみを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="e9129c5ddccd4ff2a1496ef1f66ba86f1d8497f9" translate="yes" xml:space="preserve">
          <source>If ever needed, the diff output can also be omitted by calling &lt;code&gt;shouldShowDiffOnFail(false)&lt;/code&gt;.</source>
          <target state="translated">必要に応じて、 &lt;code&gt;shouldShowDiffOnFail(false)&lt;/code&gt; を呼び出してdiff出力を省略することもできます。</target>
        </trans-unit>
        <trans-unit id="9de49610878213fa5f5dbe719fc2049ca3fad810" translate="yes" xml:space="preserve">
          <source>If method invoked, it will immediately throw an exception.</source>
          <target state="translated">メソッドが呼び出された場合は、すぐに例外をスローします。</target>
        </trans-unit>
        <trans-unit id="411073bfeb70e233546fac8e57259cfede35c284" translate="yes" xml:space="preserve">
          <source>If no framework is used with Doctrine you should provide the &lt;code&gt;connection_callback&lt;/code&gt; option with a valid callback to a function which returns an &lt;code&gt;EntityManager&lt;/code&gt; instance.</source>
          <target state="translated">Doctrineでフレームワークが使用されていない場合は、 &lt;code&gt;EntityManager&lt;/code&gt; インスタンスを返す関数への有効なコールバックを含む &lt;code&gt;connection_callback&lt;/code&gt; オプションを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="a150629e125fee676f88d003d02e759756038919" translate="yes" xml:space="preserve">
          <source>If nothing found, check if locator looks like a CSS selector. If so, run it.</source>
          <target state="translated">何も見つからなければ、locator が CSS セレクタのように見えるかどうかを確認してください。そうであれば、実行してみてください。</target>
        </trans-unit>
        <trans-unit id="8d191edeeb2f7528441cdddb03fa5eac3b5231f5" translate="yes" xml:space="preserve">
          <source>If nothing found, check if locator looks like an XPath expression. If so, run it.</source>
          <target state="translated">何も見つからなければ、locator が XPath 式のように見えるかどうかをチェックします。そうであれば、実行してください。</target>
        </trans-unit>
        <trans-unit id="5ebc7e925c0aa68c05761a07bab683ada90cf9b7" translate="yes" xml:space="preserve">
          <source>If test fails stores last shown page in &amp;lsquo;output&amp;rsquo; dir.</source>
          <target state="translated">テストが失敗した場合、最後に表示されたページを「出力」ディレクトリに保存します。</target>
        </trans-unit>
        <trans-unit id="b73e33e38f5677387b957050c9350858656be5c7" translate="yes" xml:space="preserve">
          <source>If the database clean-up takes too long, you can follow a different strategy: create new data for each test. This way, the only problem you might face is duplication of data records. &lt;a href=&quot;modules/sequence&quot;&gt;Sequence&lt;/a&gt; was created to solve this. It provides the &lt;code&gt;sq()&lt;/code&gt; function which generates unique suffixes for creating data in tests.</source>
          <target state="translated">データベースのクリーンアップに時間がかかりすぎる場合は、テストごとに新しいデータを作成するという別の戦略に従うことができます。このようにして、直面する可能性のある唯一の問題は、データレコードの重複です。これを解決するために&lt;a href=&quot;modules/sequence&quot;&gt;シーケンス&lt;/a&gt;が作成されました。テストでデータを作成するための一意のサフィックスを生成する &lt;code&gt;sq()&lt;/code&gt; 関数を提供します。</target>
        </trans-unit>
        <trans-unit id="db3d9f0611b14e95eee3d0fb6dad1dcfd5523544" translate="yes" xml:space="preserve">
          <source>If the email is sent by a Symfony Console Command, Codeception cannot detect it yet.</source>
          <target state="translated">symfony コンソールコマンドによってメールが送信された場合、Codeception はまだそれを検出できません。</target>
        </trans-unit>
        <trans-unit id="e558211e02f7f12d3521e1b4aa23e0f73088a917" translate="yes" xml:space="preserve">
          <source>If the entity has relations, they can be populated too. In case of &lt;a href=&quot;https://www.doctrine-project.org/projects/doctrine-orm/en/latest/reference/association-mapping.html#one-to-many-bidirectional&quot;&gt;OneToMany&lt;/a&gt; the following format is expected:</source>
          <target state="translated">エンティティにリレーションがある場合は、それらにもデータを入力できます。&lt;a href=&quot;https://www.doctrine-project.org/projects/doctrine-orm/en/latest/reference/association-mapping.html#one-to-many-bidirectional&quot;&gt;OneToMany&lt;/a&gt;の場合、次の形式が想定されます。</target>
        </trans-unit>
        <trans-unit id="d457838d1a0963f3a2c3d196cf58eef93bfdd206" translate="yes" xml:space="preserve">
          <source>If the locator is an array, it should have a single element, with the key signifying the locator type (&lt;code&gt;id&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;xpath&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, or &lt;code&gt;class&lt;/code&gt;) and the value being the locator itself. This is called a &amp;ldquo;strict&amp;rdquo; locator. Examples:</source>
          <target state="translated">ロケーターが配列の場合、ロケーターのタイプ（ &lt;code&gt;id&lt;/code&gt; 、 &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;css&lt;/code&gt; 、 &lt;code&gt;xpath&lt;/code&gt; 、 &lt;code&gt;link&lt;/code&gt; 、または &lt;code&gt;class&lt;/code&gt; ）を示すキーとロケーター自体である値を持つ単一の要素が必要です。これは「厳密な」ロケーターと呼ばれます。例：</target>
        </trans-unit>
        <trans-unit id="36c5f90086eb9dddcececa89eb88a3c48cca3913" translate="yes" xml:space="preserve">
          <source>If the number is less or greater it will later be checked in verify() and also throw an exception.</source>
          <target state="translated">数値が小さいか大きい場合は、後に verify()でチェックされ、例外もスローされます。</target>
        </trans-unit>
        <trans-unit id="5d6d7aef900c1ee6138235141e8005d201629c79" translate="yes" xml:space="preserve">
          <source>If the number of invocations is 0 it will throw an exception in verify.</source>
          <target state="translated">呼び出し回数が 0 の場合は verify で例外をスローします。</target>
        </trans-unit>
        <trans-unit id="c558302abc28711bf56d8a94046d01e51ee02c30" translate="yes" xml:space="preserve">
          <source>If the window has no name, match it by switching to next active tab using &lt;code&gt;switchToNextTab&lt;/code&gt; method.</source>
          <target state="translated">ウィンドウに名前がない場合は、 &lt;code&gt;switchToNextTab&lt;/code&gt; メソッドを使用して次のアクティブなタブに切り替えて、ウィンドウを一致させます。</target>
        </trans-unit>
        <trans-unit id="7d67f666a1e1ac8d6b8841e8f3ec1974a18bb428" translate="yes" xml:space="preserve">
          <source>If we expect a JSON response to be received we can check its structure with &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JSONPath&lt;/a&gt;. It looks and sounds like XPath but is designed to work with JSON data, however we can convert JSON into XML and use XPath to validate the structure. Both approaches are valid and can be used in the REST module:</source>
          <target state="translated">JSON応答の受信を期待している場合は、&lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JSONPathを&lt;/a&gt;使用してその構造を確認できます。XPathのように見え、聞こえますが、JSONデータで動作するように設計されていますが、JSONをXMLに変換し、XPathを使用して構造を検証できます。どちらの方法も有効であり、RESTモジュールで使用できます。</target>
        </trans-unit>
        <trans-unit id="3881ab1f69bdc89a19b849af3539116a02493f92" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;#docker&quot;&gt;Docker&lt;/a&gt; containers you can launch multiple Codeception containers for different groups:</source>
          <target state="translated">&lt;a href=&quot;#docker&quot;&gt;Docker&lt;/a&gt;コンテナーを使用している場合は、さまざまなグループに対して複数のCodeceptionコンテナーを起動できます。</target>
        </trans-unit>
        <trans-unit id="f0465d8194aa74d3ba25bfd2a5f08b89d2d1497a" translate="yes" xml:space="preserve">
          <source>If you are using Symfony with Doctrine, you don&amp;rsquo;t need to enable Symfony itself but just Doctrine2:</source>
          <target state="translated">SymfonyをDoctrineで使用している場合、Symfony自体を有効にする必要はありませんが、Doctrine2を有効にするだけです：</target>
        </trans-unit>
        <trans-unit id="7abfa9c29c338522aead6b9784ac936f766c74bd" translate="yes" xml:space="preserve">
          <source>If you decided to run your features with Codeception, we recommend to start with symlinking your &lt;code&gt;features&lt;/code&gt; directory into one of the test suites:</source>
          <target state="translated">Codeceptionで機能を実行する場合は、 &lt;code&gt;features&lt;/code&gt; ディレクトリをテストスイートの1つにシンボリックリンクすることから始めることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2fb402415cc9ee9ff40a4a3f6c02574b7bd7bdad" translate="yes" xml:space="preserve">
          <source>If you do pass &lt;code&gt;$expectedErrorMessage&lt;/code&gt;, this method checks if the actual error message for a key contains &lt;code&gt;$expectedErrorMessage&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$expectedErrorMessage&lt;/code&gt; 渡した場合、このメソッドは、キーの実際のエラーメッセージに &lt;code&gt;$expectedErrorMessage&lt;/code&gt; が含まれているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="859ba535756cfaa7c12f8310fc359a8a4be5d8d5" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t know what exact element you need to wait for, you can simply pause execution with using &lt;code&gt;$I-&amp;gt;wait()&lt;/code&gt;</source>
          <target state="translated">待機する必要がある正確な要素がわからない場合は、 &lt;code&gt;$I-&amp;gt;wait()&lt;/code&gt; を使用して実行を一時停止できます。</target>
        </trans-unit>
        <trans-unit id="69f987e0a67f8f8aac9026671318c1f5e7a12432" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t use Symfony or Zend Framework, you need to specify a callback function to retrieve the Entity Manager:</source>
          <target state="translated">SymfonyまたはZend Frameworkを使用しない場合は、エンティティマネージャーを取得するためのコールバック関数を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="df68c4a5309c7ab863c3b7943356f698117618a1" translate="yes" xml:space="preserve">
          <source>If you have &lt;code&gt;Step\Admin&lt;/code&gt; class which defines only admin steps, it is a good idea to use it as context for all features containing with &amp;ldquo;As an admin&amp;rdquo;. In this case &amp;ldquo;admin&amp;rdquo; is a role and we can configure it to use additional context.</source>
          <target state="translated">管理ステップのみを定義する &lt;code&gt;Step\Admin&lt;/code&gt; クラスがある場合、「管理者として」を含むすべての機能のコンテキストとして使用することをお勧めします。この場合、「admin」はロールであり、追加のコンテキストを使用するように設定できます。</target>
        </trans-unit>
        <trans-unit id="180f14a9f15ad16e6c37acb60826ea12c234e173" translate="yes" xml:space="preserve">
          <source>If you have a complex interaction scenario, you may use several step objects in one test. If you feel like adding too many actions into your Actor class (which is AcceptanceTester in this case) consider moving some of them into separate StepObjects.</source>
          <target state="translated">複雑なインタラクションのシナリオがある場合、1つのテストでいくつかのステップオブジェクトを使うかもしれません。Actor クラス (この例では AcceptanceTester)にアクションを追加したいと感じたら、それらのいくつかを別の StepObject に移動することを検討してください。</target>
        </trans-unit>
        <trans-unit id="65171f4ccd4ab61049717b6a17b2e1685f540aea" translate="yes" xml:space="preserve">
          <source>If you have several projects with Codeception tests, you can use a single &lt;code&gt;codecept&lt;/code&gt; file to run all of your tests. You can pass the &lt;code&gt;-c&lt;/code&gt; option to any Codeception command (except &lt;code&gt;bootstrap&lt;/code&gt;), to execute Codeception in another directory:</source>
          <target state="translated">Codeceptionテストを含む複数のプロジェクトがある場合、単一の &lt;code&gt;codecept&lt;/code&gt; ファイルを使用してすべてのテストを実行できます。あなたは渡すことができ &lt;code&gt;-c&lt;/code&gt; （除く任意のCodeceptionコマンドのオプション &lt;code&gt;bootstrap&lt;/code&gt; 別のディレクトリにCodeceptionを実行するために、）：</target>
        </trans-unit>
        <trans-unit id="c693a084c73d075fd92bd8dc093832cd4ff6553b" translate="yes" xml:space="preserve">
          <source>If you like the concept of Behavior Driven Development or prefer to keep test scenarios in human readable format, Codeception allows you to write and execute scenarios in Gherkin. Feature files is just another test format inside Codeception, so it can be combined with Cept and Cest files inside the same suite. Steps definitions of your scenarios can use all the power of Codeception modules, PageObjects, and StepObjects.</source>
          <target state="translated">挙動駆動開発のコンセプトが好きな方や、テストシナリオを人間が読める形式にしたい方は、Codeceptionを使うとGherkinでシナリオを書いて実行することができます。フィーチャーファイルは、Codeceptionの中のもう一つのテストフォーマットなので、同じスイート内でCeptファイルやCestファイルと組み合わせることができます。シナリオのステップ定義では、Codeceptionモジュール、PageObjects、StepObjectsの全ての機能を利用することができます。</target>
        </trans-unit>
        <trans-unit id="b6e7c70a3d2627f0e418c6e3927f447e584dbe0a" translate="yes" xml:space="preserve">
          <source>If you need to authorize a user for each test, you can do so by submitting the login form at the beginning of every test. Running those steps takes time, and in the case of Selenium tests (which are slow by themselves) that time loss can become significant.</source>
          <target state="translated">各テストのためにユーザーを認証する必要がある場合、すべてのテストの最初にログインフォームを提出することで認証することができます。これらのステップを実行するには時間がかかり、Seleniumテストの場合は(それ自体が遅い)時間のロスが大きくなることがあります。</target>
        </trans-unit>
        <trans-unit id="0cb14d25f74e3b265089d031ae7556c6b00fbe4b" translate="yes" xml:space="preserve">
          <source>If you need to fill in sensitive data (like passwords) and hide it in logs, you can pass instance &lt;code&gt;\Codeception\Step\Argument\PasswordArgument&lt;/code&gt; with the data which needs to be hidden.</source>
          <target state="translated">機密データ（パスワードなど）を入力してログで非表示にする必要がある場合は、インスタンス &lt;code&gt;\Codeception\Step\Argument\PasswordArgument&lt;/code&gt; に、非表示にする必要のあるデータを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="6fe16abe3f057dfee1e0a04807a82dc258d10690" translate="yes" xml:space="preserve">
          <source>If you only need some parts of a conflicted module to be loaded, refer to the next section.</source>
          <target state="translated">競合するモジュールの一部だけをロードする必要がある場合は、次のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="0cedf0347054d7c88e7070424c133f172b198fde" translate="yes" xml:space="preserve">
          <source>If you prefer, you may also pass a string for the locator. This is called a &amp;ldquo;fuzzy&amp;rdquo; locator. In this case, Codeception uses a a variety of heuristics (depending on the exact method called) to determine what element you&amp;rsquo;re referring to. For example, here&amp;rsquo;s the heuristic used for the &lt;code&gt;submitForm&lt;/code&gt; method:</source>
          <target state="translated">必要に応じて、ロケーターの文字列を渡すこともできます。これは「ファジー」ロケーターと呼ばれます。この場合、Codeceptionはさまざまなヒューリスティック（呼び出されたメソッドによって異なります）を使用して、参照している要素を判別します。たとえば、 &lt;code&gt;submitForm&lt;/code&gt; メソッドに使用されるヒューリスティックは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="279267bc6a3f6ee2c605df063c556ccbfab0cbd3" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;robo&lt;/code&gt;, you can see the respective commands:</source>
          <target state="translated">&lt;code&gt;robo&lt;/code&gt; を実行すると、それぞれのコマンドが表示されます。</target>
        </trans-unit>
        <trans-unit id="1a52f32a635dee2be1deb38d5a3ea41907d2d14d" translate="yes" xml:space="preserve">
          <source>If you run your application via Webserver (Apache, Nginx, PHP WebServer) you don&amp;rsquo;t have a direct access to tested code, so collecting coverage becomes a non-trivial task. The same goes for scripts that are tested on different nodes. To get access to this code you need &lt;code&gt;xdebug&lt;/code&gt; installed with &lt;code&gt;remote_enable&lt;/code&gt; option turned on. Codeception also requires a little spy to interact with your application. As your application runs standalone, without even knowing it is being tested, a small file should be included in order to collect coverage info.</source>
          <target state="translated">Webサーバー（Apache、Nginx、PHP Webサーバー）を介してアプリケーションを実行する場合、テスト済みのコードに直接アクセスできないため、カバレッジの収集は重要な作業になります。異なるノードでテストされるスクリプトについても同様です。このコードにアクセスするには、 &lt;code&gt;remote_enable&lt;/code&gt; オプションをオンにして &lt;code&gt;xdebug&lt;/code&gt; をインストールする必要があります。Codeceptionには、アプリケーションと対話するための小さなスパイも必要です。アプリケーションはスタンドアロンで実行されるため、テストされていることを知らなくても、カバレッジ情報を収集するために小さなファイルを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="2bc48e2560bf2a432ba10e7249a50626bc945be8" translate="yes" xml:space="preserve">
          <source>If you specify which object you need for a test, Codeception will try to create it using the dependency injection container. In the case of a PageObject you should declare a class as a parameter for a test method:</source>
          <target state="translated">テストに必要なオブジェクトを指定すると、Codeceptionは依存性注入コンテナを使ってそれを作成しようとします。PageObjectの場合は、テストメソッドのパラメータとしてクラスを宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="66e61c8e819d339248e6c4780268b5ee71175f6c" translate="yes" xml:space="preserve">
          <source>If you started project as &lt;code&gt;codecept init acceptance&lt;/code&gt; in Codeception &amp;gt;= 3.0 they should be already enabled in config</source>
          <target state="translated">Codeception&amp;gt; = 3.0で &lt;code&gt;codecept init acceptance&lt;/code&gt; としてプロジェクトを開始した場合は、configですでに有効になっているはずです。</target>
        </trans-unit>
        <trans-unit id="2ad202a2bf2a896e64392f1738fcd7b97cdf34ba" translate="yes" xml:space="preserve">
          <source>If you started project as &lt;code&gt;codecept init acceptance&lt;/code&gt; they should be already enabled in config</source>
          <target state="translated">&lt;code&gt;codecept init acceptance&lt;/code&gt; としてプロジェクトを開始した場合、それらは設定ですでに有効になっているはずです</target>
        </trans-unit>
        <trans-unit id="9de16e3db643ab103aca377fb2be4db0f405ebd7" translate="yes" xml:space="preserve">
          <source>If you use Codeception installed using composer, install this module with the following command:</source>
          <target state="translated">composerを使用してインストールしたCodeceptionを使用している場合は、以下のコマンドでこのモジュールをインストールしてください。</target>
        </trans-unit>
        <trans-unit id="fc99a669dbcd3be99ca43bac9df2763a701050b1" translate="yes" xml:space="preserve">
          <source>If you use JSON notation please keep in mind that all string keys and values should be enclosed in double quotes (`&quot;`) according to JSON standard.</source>
          <target state="translated">JSON記法を使用する場合は、JSONの標準に従って、すべての文字列のキーと値をダブルクォーテーション(`&quot;`)で囲むことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b548846f220c4ec9f7493e5d0bb2ab1bfa0d958a" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;Symfony&lt;/code&gt; module, here is how you can access the Symfony container:</source>
          <target state="translated">&lt;code&gt;Symfony&lt;/code&gt; モジュールを使用する場合、Symfonyコンテナーにアクセスする方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d37e17a106f1b0f05b428eab87244877ae286b25" translate="yes" xml:space="preserve">
          <source>If you want to activate the Command globally, because you are using more then one &lt;code&gt;codeception.yml&lt;/code&gt; file, you have to register your command in the &lt;code&gt;codeception.dist.yml&lt;/code&gt; in the root folder of your project.</source>
          <target state="translated">コマンドをグローバルにアクティブ化する場合は、複数の &lt;code&gt;codeception.yml&lt;/code&gt; ファイルを使用しているため、プロジェクトのルートフォルダーにある &lt;code&gt;codeception.dist.yml&lt;/code&gt; にコマンドを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="a0a5079a37b256be1193f120a3ef9dcbed152ff8" translate="yes" xml:space="preserve">
          <source>If you want to assert that there is a form error message for a specific key but don&amp;rsquo;t care about the actual error message you can omit &lt;code&gt;$expectedErrorMessage&lt;/code&gt;.</source>
          <target state="translated">特定のキーのフォームエラーメッセージがあることを表明したいが、実際のエラーメッセージは気にしない場合は、 &lt;code&gt;$expectedErrorMessage&lt;/code&gt; を省略できます。</target>
        </trans-unit>
        <trans-unit id="088b3fa6d95ff0c65f0f492874107dc99e8b10d7" translate="yes" xml:space="preserve">
          <source>If you want to automate splitting tests by parallel processes, and executing them using PHP script you should use Robo task runner to do that.</source>
          <target state="translated">並列プロセスでテストを分割し、PHPスクリプトを使って実行することを自動化したい場合は、Roboタスクランナーを使うと良いでしょう。</target>
        </trans-unit>
        <trans-unit id="cbaf6083b5015903cc0eea1e9b0868b51549b39c" translate="yes" xml:space="preserve">
          <source>If you want to check message or exception code, you can pass them with exception instance:</source>
          <target state="translated">メッセージや例外コードを確認したい場合は、例外インスタンスで渡すことができます。</target>
        </trans-unit>
        <trans-unit id="448994a03c78e0d5a4e0b77a2c538d2a5b4e46b5" translate="yes" xml:space="preserve">
          <source>If you want to check message or throwable code, you can pass them with throwable instance:</source>
          <target state="translated">メッセージやスロー可能なコードをチェックしたい場合は、スロー可能なインスタンスで渡すことができます。</target>
        </trans-unit>
        <trans-unit id="21a3df2751b418d149c31248e660a347d442305a" translate="yes" xml:space="preserve">
          <source>If you want to check that a table record was created use &lt;a href=&quot;modules/db#haveInDatabase&quot;&gt;&lt;code&gt;seeInDatabase&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">テーブルレコードが作成されたことを確認する場合は、&lt;a href=&quot;modules/db#haveInDatabase&quot;&gt; &lt;code&gt;seeInDatabase&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="8702536465175a8bfdac1df8d75b977b9c26d749" translate="yes" xml:space="preserve">
          <source>If you want to create a special database record for one test, you can use &lt;a href=&quot;modules/db#haveInDatabase&quot;&gt;&lt;code&gt;haveInDatabase&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Db&lt;/code&gt; module:</source>
          <target state="translated">1つのテストに対して特別なデータベースレコードを作成する場合は、 &lt;code&gt;Db&lt;/code&gt; モジュールの&lt;a href=&quot;modules/db#haveInDatabase&quot;&gt; &lt;code&gt;haveInDatabase&lt;/code&gt; &lt;/a&gt;メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="8afe87a96b8adee23bc5a585674686f68bb5ea54" translate="yes" xml:space="preserve">
          <source>If you want to get a class-like structure for your Cepts, you can use the Cest format instead of plain PHP. It is very simple and is fully compatible with Cept scenarios. It means that if you feel that your test is long enough and you want to split it, you can easily move it into classes.</source>
          <target state="translated">Ceptsのクラスのような構造を得たい場合は、プレーンなPHPではなくCest形式を使うことができます。これは非常にシンプルで、Ceptのシナリオと完全に互換性があります。つまり、テストが長くて分割したいと感じた場合、簡単にクラスに移動させることができます。</target>
        </trans-unit>
        <trans-unit id="86f52500e37e1994462c6e9b9afe0b8bd3d248b8" translate="yes" xml:space="preserve">
          <source>If you want to reconfigure a module at runtime, you can use the &lt;code&gt;_reconfigure&lt;/code&gt; method of the module. You may call it from a helper class and pass in all the fields you want to change.</source>
          <target state="translated">実行時にモジュールを再構成する場合は、モジュールの &lt;code&gt;_reconfigure&lt;/code&gt; メソッドを使用できます。ヘルパークラスから呼び出して、変更するすべてのフィールドを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="d052b3e3eb5912fb53ff1048e33eb0aa77c4e569" translate="yes" xml:space="preserve">
          <source>If you want to run a specific suite from the application you can execute:</source>
          <target state="translated">アプリケーションから特定のスイートを実行したい場合は、実行することができます。</target>
        </trans-unit>
        <trans-unit id="a2d4af9df065ef8f15a8f592ce85f2787da28a17" translate="yes" xml:space="preserve">
          <source>If you want to run tests locally just use preinstalled &lt;code&gt;taskCodecept&lt;/code&gt; task of Robo to define Codeception commands and put them inside &lt;code&gt;parallelExec&lt;/code&gt;.</source>
          <target state="translated">ローカルでテストを実行したい場合は、Roboのプリインストールされた &lt;code&gt;taskCodecept&lt;/code&gt; タスクを使用してCodeceptionコマンドを定義し、それらを &lt;code&gt;parallelExec&lt;/code&gt; 内に配置します。</target>
        </trans-unit>
        <trans-unit id="b462735f904a335bafac9257365f2e5889b1eda7" translate="yes" xml:space="preserve">
          <source>If you want to use ORM for integration testing only, you should enable the framework module with only the &lt;code&gt;ORM&lt;/code&gt; part enabled:</source>
          <target state="translated">ORMを統合テストのみに使用する場合は、 &lt;code&gt;ORM&lt;/code&gt; パーツのみを有効にしてフレームワークモジュールを有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="07b5dba95ced48ad14f6bf2943a55a8c1214b96e" translate="yes" xml:space="preserve">
          <source>If you want to use ORM to work with data inside acceptance tests, you should also include only the ORM part of a module. Please note that inside acceptance tests, web applications work inside a webserver, so any test data can&amp;rsquo;t be cleaned up by rolling back transactions. You will need to disable cleaning up, and use the &lt;code&gt;Db&lt;/code&gt; module to clean the database up between tests. Here is a sample config:</source>
          <target state="translated">ORMを使用して受け入れテスト内のデータを操作する場合は、モジュールのORM部分のみを含める必要もあります。受け入れテストの内部では、WebアプリケーションはWebサーバー内で動作するため、トランザクションをロールバックしてテストデータをクリーンアップすることはできません。クリーンアップを無効にし、 &lt;code&gt;Db&lt;/code&gt; モジュールを使用して、テスト間でデータベースをクリーンアップする必要があります。これはサンプル設定です：</target>
        </trans-unit>
        <trans-unit id="6b0b38658ae1d158a1a11126b98e027b0fba1347" translate="yes" xml:space="preserve">
          <source>If you want to use it as default reporter enable it in &lt;code&gt;codeception.yml&lt;/code&gt;.</source>
          <target state="translated">デフォルトのレポーターとして使用したい場合は、 &lt;code&gt;codeception.yml&lt;/code&gt; で有効にしてください。</target>
        </trans-unit>
        <trans-unit id="304ec828ed495c2d8d6547454cf2b1a4d839d2ce" translate="yes" xml:space="preserve">
          <source>If you write your scenario-driven tests in the Cest format (which is the recommended approach), you can bypass the manual creation of a PageObject and delegate this task to Codeception. If you specify which object you need for a test, Codeception will try to create it using the dependency injection container. In the case of a PageObject you should declare a class as a parameter for a test method:</source>
          <target state="translated">シナリオ駆動型のテストを Cest 形式で書いている場合(これが推奨されています)、手動で PageObject を作成する必要はなく、このタスクを Codeception に委任することができます。テストに必要なオブジェクトを指定すると、Codeception は依存性注入コンテナを使ってそれを作成しようとします。PageObjectの場合は、テストメソッドのパラメータとしてクラスを宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="25b8ea08c457e4211ac8f39ecd58158a99b2f91a" translate="yes" xml:space="preserve">
          <source>If your app performs a redirect after sending the email, you need to suppress this using REST Module&amp;rsquo;s &lt;a href=&quot;rest#stopFollowingRedirects&quot;&gt;stopFollowingRedirects&lt;/a&gt;</source>
          <target state="translated">メールの送信後にアプリがリダイレクトを実行する場合は、RESTモジュールの&lt;a href=&quot;rest#stopFollowingRedirects&quot;&gt;stopFollowingRedirects&lt;/a&gt;を使用してこれを抑制する必要があります</target>
        </trans-unit>
        <trans-unit id="9dd16419945d487192ac6937f1c22d747175cf29" translate="yes" xml:space="preserve">
          <source>If your module relies on other model you can generate them both. To create a related module you can use either &lt;code&gt;factory&lt;/code&gt; or &lt;code&gt;entity&lt;/code&gt; prefix, depending on ORM you use.</source>
          <target state="translated">モジュールが他のモデルに依存している場合は、両方を生成できます。関連モジュールを作成するには、使用するORMに応じて、 &lt;code&gt;factory&lt;/code&gt; プレフィックスまたは &lt;code&gt;entity&lt;/code&gt; プレフィックスを使用できます。</target>
        </trans-unit>
        <trans-unit id="937c56de80f761b7da3cc419a0b19d17f2944b8b" translate="yes" xml:space="preserve">
          <source>If your page triggers an ajax request, you can perform it manually. This action sends a GET ajax request with specified params.</source>
          <target state="translated">ページがajaxリクエストをトリガーする場合は、手動で実行することができます。このアクションは、指定されたパラメータでGET ajaxリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="32bb28f86836c4afa90e9a6d23957add3a296118" translate="yes" xml:space="preserve">
          <source>If your page triggers an ajax request, you can perform it manually. This action sends a POST ajax request with specified params. Additional params can be passed as array.</source>
          <target state="translated">ページがajaxリクエストをトリガーする場合、手動で実行することができます。このアクションは指定されたパラメータでPOST ajaxリクエストを送信します。追加のパラメータは配列として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="da927b37a67d0e4dd6597cb9025feed8b8f6c26d" translate="yes" xml:space="preserve">
          <source>If your page triggers an ajax request, you can perform it manually. This action sends an ajax request with specified method and params.</source>
          <target state="translated">ページがajaxリクエストをトリガーする場合は、手動で実行することができます。このアクションは指定されたメソッドとパラメータでajaxリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="bfa1b936b9b60a82d757b950ac68f6e50dd5e269" translate="yes" xml:space="preserve">
          <source>If your project consists of several applications (frontend, admin, api) or you are using the Symfony framework with its bundles, you may be interested in having all tests for all applications (bundles) executed in one runner. In this case you will get one report that covers the whole project.</source>
          <target state="translated">プロジェクトがいくつかのアプリケーション (フロントエンド、admin、api)で構成されている場合、もしくはバンドルの symfony フレームワークを利用している場合、1つのランナーですべてのアプリケーション (バンドル)のためのすべてのテストを実行することに興味があるかもしれません。この場合、プロジェクト全体をカバーする1つのレポートが得られます。</target>
        </trans-unit>
        <trans-unit id="4086c52026a85ae06ae56c5284ce3662ccb80cf2" translate="yes" xml:space="preserve">
          <source>If your remote server is accessed through a shared mount, or a mounted folder (IE: Docker Volumes), you can still get merged coverage details. Use the &lt;code&gt;work_dir&lt;/code&gt; option to specify the work directory. When CodeCoverage runs, Codeception will update any path that matches the &lt;code&gt;work_dir&lt;/code&gt; option to match the local current project directory.</source>
          <target state="translated">リモートサーバーが共有マウントまたはマウントされたフォルダー（IE：Dockerボリューム）を介してアクセスされる場合でも、マージされたカバレッジの詳細を取得できます。 &lt;code&gt;work_dir&lt;/code&gt; オプションを使用して、作業ディレクトリを指定します。CodeCoverageが実行されると、Codeceptionは、 &lt;code&gt;work_dir&lt;/code&gt; オプションに一致するすべてのパスを更新して、ローカルの現在のプロジェクトディレクトリに一致させます。</target>
        </trans-unit>
        <trans-unit id="3eb9ee050a22a12995729bdec7f3e2318e945dbe" translate="yes" xml:space="preserve">
          <source>If your site is available only locally or via VPN you should use a tunnel app. In this case add &lt;code&gt;browserstack.local&lt;/code&gt; capability and set it to true.</source>
          <target state="translated">サイトがローカルまたはVPN経由でのみ利用できる場合は、トンネルアプリを使用する必要があります。この場合、 &lt;code&gt;browserstack.local&lt;/code&gt; 機能を追加して、trueに設定します。</target>
        </trans-unit>
        <trans-unit id="53dbecdaf80f95a17779a4516798a1730aebb15b" translate="yes" xml:space="preserve">
          <source>Imagine that by clicking checkbox you trigger ajax request which updates user settings. We emulate that click by running this ajax request manually.</source>
          <target state="translated">チェックボックスをクリックすることで、ユーザーの設定を更新するajaxリクエストをトリガーすることを想像してください。私たちは、このajaxリクエストを手動で実行することで、そのクリックをエミュレートします。</target>
        </trans-unit>
        <trans-unit id="ee58032a88d852223bb4e790fc599d66e68139ab" translate="yes" xml:space="preserve">
          <source>In 3rd argument you can set number a seconds to wait for element to appear</source>
          <target state="translated">第3引数では、要素が表示されるまでの待ち時間を秒数で指定します。</target>
        </trans-unit>
        <trans-unit id="594b0fda33097a504c89a1b50cf77cfdca824f65" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_before&lt;/code&gt; and &lt;code&gt;_after&lt;/code&gt; methods you can use common setups and teardowns for the tests in the class.</source>
          <target state="translated">で &lt;code&gt;_before&lt;/code&gt; と &lt;code&gt;_after&lt;/code&gt; メソッドは、クラス内のテストのための一般的なセットアップとティアダウンを使用することができます。</target>
        </trans-unit>
        <trans-unit id="5e736eccc647fee76e597fe774858b7d0c8da08b" translate="yes" xml:space="preserve">
          <source>In Cest format you don&amp;rsquo;t have native support for test doubles so it&amp;rsquo;s recommended to include a trait &lt;code&gt;\Codeception\Test\Feature\Stub&lt;/code&gt; to enable mocks inside a test. Alternatively, install and enable &lt;a href=&quot;https://github.com/Codeception/MockeryModule&quot;&gt;Mockery module&lt;/a&gt;.</source>
          <target state="translated">Cest形式では、テストダブルスをネイティブでサポートしていないため、テスト内でモックを有効にするために、特性 &lt;code&gt;\Codeception\Test\Feature\Stub&lt;/code&gt; を含めることをお勧めします。または、&lt;a href=&quot;https://github.com/Codeception/MockeryModule&quot;&gt;Mockeryモジュールを&lt;/a&gt;インストールして有効にします。</target>
        </trans-unit>
        <trans-unit id="725fab6251d6dfedc130ffc7da0fb3dfd892750d" translate="yes" xml:space="preserve">
          <source>In Codeception you can combine tests written in Gherkin format with tests written in Cept/Cest/Test formats. This way you can keep your feature files compact with minimal set of scenarios, and write regular tests to cover all cases.</source>
          <target state="translated">Codeception では、Gherkin フォーマットで書かれたテストと Cept/Cest/Test フォーマットで書かれたテストを組み合わせることができます。このようにして、最小限のシナリオで機能ファイルをコンパクトに保ち、すべてのケースをカバーするための定期的なテストを書くことができます。</target>
        </trans-unit>
        <trans-unit id="f88efd10d1aac3f311aa365a23d338a338461893" translate="yes" xml:space="preserve">
          <source>In acceptance or functional test you can save page screenshot or html snapshot.</source>
          <target state="translated">受け入れテストや機能テストでは、ページのスクリーンショットやhtmlのスナップショットを保存することができます。</target>
        </trans-unit>
        <trans-unit id="dfc32adf3fd10eb0542c568decb7a8c9394bff29" translate="yes" xml:space="preserve">
          <source>In acceptance tests, your tests are interacting with the application through a web server. This means that the test and the application work with the same database. You should provide the same credentials in the Db module that your application uses, then you can access the database for assertions (&lt;code&gt;seeInDatabase&lt;/code&gt; actions) and to perform automatic clean-ups.</source>
          <target state="translated">受け入れテストでは、テストはWebサーバーを介してアプリケーションと対話します。つまり、テストとアプリケーションは同じデータベースで機能します。アプリケーションが使用するのと同じ資格情報をDbモジュールで提供する必要があります。その後、データベースにアクセスしてアサーション（ &lt;code&gt;seeInDatabase&lt;/code&gt; アクション）を行い、自動クリーンアップを実行できます。</target>
        </trans-unit>
        <trans-unit id="314e4d7c870bc424933d30d862fcbfcbfbfd0fbe" translate="yes" xml:space="preserve">
          <source>In addition to the standard test formats (Cept, Cest, Unit, Gherkin) you can implement your own format classes to customise your test execution. Specify these in your suite configuration:</source>
          <target state="translated">標準のテストフォーマット (Cept,Cest,Unit,Gherkin)に加えて、独自のフォーマットクラスを実装してテストの実行をカスタマイズすることができます。これらはスイートの設定で指定します。</target>
        </trans-unit>
        <trans-unit id="024396dbc1e81f7862c8ad976be34845a2fd701a" translate="yes" xml:space="preserve">
          <source>In both examples you should not be worried about the data persistence between tests. The Doctrine2 and Laravel5 modules will clean up the created data at the end of a test. This is done by wrapping each test in a transaction and rolling it back afterwards.</source>
          <target state="translated">どちらの例でも、テスト間のデータの永続性を心配する必要はありません。Doctrine2 と Laravel5 モジュールはテストの最後に作成されたデータをクリーンアップします。これは各テストをトランザクションでラップし、その後にロールバックすることで行われます。</target>
        </trans-unit>
        <trans-unit id="277c24173be2a8c5912355edb2a7a3021c614b9a" translate="yes" xml:space="preserve">
          <source>In case of &lt;code&gt;parallelExec&lt;/code&gt; task we recommend to save results as JUnit XML, which can be merged and plugged into Continuous Integration server.</source>
          <target state="translated">&lt;code&gt;parallelExec&lt;/code&gt; タスクの場合は、JUnit XMLとして結果を保存することをお勧めします。これは、マージしてContinuous Integrationサーバーにプラグインできます。</target>
        </trans-unit>
        <trans-unit id="0b0a5528d38413b179131fb08d8cd29eb1b8ce63" translate="yes" xml:space="preserve">
          <source>In case scenarios represent the same logic but differ on data, we can use &lt;em&gt;Scenario Outline&lt;/em&gt; to provide different examples for the same behavior. Scenario outline is just like a basic scenario with some values replaced with placeholders, which are filled from a table. Each set of values is executed as a different test.</source>
          <target state="translated">シナリオが同じロジックを表すがデータが異なる場合は、&lt;em&gt;シナリオ概要&lt;/em&gt;を使用して、同じ動作の異なる例を提供できます。シナリオの概要は、いくつかの値がプレースホルダーに置き換えられた基本的なシナリオと同じで、テーブルから入力されます。値の各セットは、異なるテストとして実行されます。</target>
        </trans-unit>
        <trans-unit id="76e03aa809bc96ad8105337f151c2f0be8750f38" translate="yes" xml:space="preserve">
          <source>In case you don&amp;rsquo;t use containers you can isolate processes by starting different web servers and databases per each test process.</source>
          <target state="translated">コンテナーを使用しない場合は、テストプロセスごとに異なるWebサーバーとデータベースを起動することで、プロセスを分離できます。</target>
        </trans-unit>
        <trans-unit id="9f7451a076cbe01bc330510183b081f8faaff73c" translate="yes" xml:space="preserve">
          <source>In case you don&amp;rsquo;t want to write long XML strings, consider using &lt;a href=&quot;reference/xmlbuilder&quot;&gt;XmlBuilder&lt;/a&gt; class. It will help you to build complex XMLs in jQuery-like style. In the next example we will use &lt;code&gt;XmlBuilder&lt;/code&gt; instead of regular XML.</source>
          <target state="translated">長いXML文字列を記述したくない場合は、&lt;a href=&quot;reference/xmlbuilder&quot;&gt;XmlBuilder&lt;/a&gt;クラスの使用を検討してください。jQueryのようなスタイルで複雑なXMLを構築するのに役立ちます。次の例では、通常のXMLの代わりに &lt;code&gt;XmlBuilder&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="58f1ac8865a2e0d410dfbe1d8017d748a22c08b3" translate="yes" xml:space="preserve">
          <source>In case you need to configure low-level HTTP fields, that&amp;rsquo;s done on the PHPBrowser level. Check the example below for details.</source>
          <target state="translated">低レベルのHTTPフィールドを構成する必要がある場合、それはPHPBrowserレベルで行われます。詳細については、以下の例を確認してください。</target>
        </trans-unit>
        <trans-unit id="b81c46f832a5af85228a7a7857546a1452178bd5" translate="yes" xml:space="preserve">
          <source>In case you need to use a module which depends on a conflicted one, specify it as a dependent module in the configuration. You may want to use &lt;code&gt;WebDriver&lt;/code&gt; with the &lt;code&gt;REST&lt;/code&gt; module which interacts with a server through &lt;code&gt;PhpBrowser&lt;/code&gt;. In this case your config should look like this:</source>
          <target state="translated">競合するモジュールに依存するモジュールを使用する必要がある場合は、構成で依存モジュールとして指定してください。 &lt;code&gt;PhpBrowser&lt;/code&gt; を介してサーバーと対話する &lt;code&gt;REST&lt;/code&gt; モジュールで &lt;code&gt;WebDriver&lt;/code&gt; を使用することができます。この場合、設定は次のようになります。</target>
        </trans-unit>
        <trans-unit id="119a848c332d442498cf56296131822fb70083cc" translate="yes" xml:space="preserve">
          <source>In case your ORM expects a related record itself (Doctrine) then you should use &lt;code&gt;entity&lt;/code&gt; prefix:</source>
          <target state="translated">ORMが関連するレコード自体（Doctrine）を予期している場合は、 &lt;code&gt;entity&lt;/code&gt; プレフィックスを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="760e0a3517b28cb58bf897baafd381c86ce36178" translate="yes" xml:space="preserve">
          <source>In case your ORM expects an Id of a related record (Eloquent) to be set use &lt;code&gt;factory&lt;/code&gt; prefix:</source>
          <target state="translated">ORMが関連レコード（Eloquent）のIDが設定されることを期待している場合は、次の &lt;code&gt;factory&lt;/code&gt; プレフィックスを使用します。</target>
        </trans-unit>
        <trans-unit id="1597885f2c681d967b06277344719765190a557d" translate="yes" xml:space="preserve">
          <source>In case your REST API works with XML format you can use similar methods to test its data and structure. There is &lt;code&gt;seeXmlResponseIncludes&lt;/code&gt; method to match inclusion of XML parts in response, and &lt;code&gt;seeXmlResponseMatchesXpath&lt;/code&gt; to validate its structure.</source>
          <target state="translated">REST APIがXML形式で動作する場合、同様のメソッドを使用して、そのデータと構造をテストできます。ある &lt;code&gt;seeXmlResponseIncludes&lt;/code&gt; の応答のXML部品の包含を一致させる方法、及び &lt;code&gt;seeXmlResponseMatchesXpath&lt;/code&gt; その構造を検証するためには。</target>
        </trans-unit>
        <trans-unit id="03ff2ae97524f2c14c0d867f697a82cb183b67fa" translate="yes" xml:space="preserve">
          <source>In cases you want to use data from database inside your factory definitions you can define them in Helper. For instance, if you use Doctrine, this allows you to access &lt;code&gt;EntityManager&lt;/code&gt; inside a definition.</source>
          <target state="translated">ファクトリー定義内のデータベースからのデータを使用したい場合は、ヘルパーで定義できます。たとえば、Doctrineを使用する場合、これにより定義内の &lt;code&gt;EntityManager&lt;/code&gt; にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="e2394b4cd8579620a73325720edb01289ea42011" translate="yes" xml:space="preserve">
          <source>In functional testing, unlike running the application the traditional way, the PHP application does not stop after it has finished processing a request. Since all requests are run in one memory container, they are not isolated. So &lt;strong&gt;if you see that your tests are mysteriously failing when they shouldn&amp;rsquo;t - try to execute a single test.&lt;/strong&gt; This will show if the tests were failing because they weren&amp;rsquo;t isolated during the run. Keep your memory clean, avoid memory leaks and clean global and static variables.</source>
          <target state="translated">機能テストでは、アプリケーションを従来の方法で実行するのとは異なり、PHPアプリケーションはリクエストの処理が終了した後も停止しません。すべてのリクエストは1つのメモリコンテナで実行されるため、分離されません。その&lt;strong&gt;ため、テストを実行してはならないのに不思議なことに失敗する場合は、1つのテストを実行してみてください。&lt;/strong&gt;これは、実行中に分離されなかったためにテストが失敗したかどうかを示します。メモリをクリーンに保ち、メモリリークを回避し、グローバル変数とスタティック変数をクリーンにします。</target>
        </trans-unit>
        <trans-unit id="1b6367eb8d1b191f2afc914aacb9d5fc325646f2" translate="yes" xml:space="preserve">
          <source>In most cases tests don&amp;rsquo;t guarantee that the application works 100% as it is supposed to. You can&amp;rsquo;t predict all possible scenarios and exceptional situations for complex apps, but with tests you can cover the most important parts of your app and at least be sure they work as predicted.</source>
          <target state="translated">ほとんどの場合、テストはアプリケーションが想定どおりに100％動作することを保証しません。複雑なアプリのすべての可能なシナリオと例外的な状況を予測することはできませんが、テストを使用すると、アプリの最も重要な部分をカバーし、少なくともそれらが予測どおりに機能することを確認できます。</target>
        </trans-unit>
        <trans-unit id="8417a1c884a42ec3615d3677e596c919959d9122" translate="yes" xml:space="preserve">
          <source>In order to have your database populated with data you need a raw SQL dump. Simply put the dump in the &lt;code&gt;tests/_data&lt;/code&gt; directory (by default) and specify the path in the config. The next time after the database is cleared, all your data will be restored from the dump. Don&amp;rsquo;t forget to include &lt;code&gt;CREATE TABLE&lt;/code&gt; statements in the dump.</source>
          <target state="translated">データベースにデータを入力するには、生のSQLダンプが必要です。ダンプを &lt;code&gt;tests/_data&lt;/code&gt; ディレクトリ（デフォルト）に配置し、構成でパスを指定するだけです。次回データベースがクリアされた後、すべてのデータがダンプから復元されます。ダンプに &lt;code&gt;CREATE TABLE&lt;/code&gt; ステートメントを含めることを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="0bc097f67594e95de03e3c3ba316b75ca06c34ef" translate="yes" xml:space="preserve">
          <source>In order to have your database populated with data you need a valid js file with data (of the same style which can be fed up to mongo binary) File can be generated by RockMongo export command You can also use directory, generated by</source>
          <target state="translated">データベースにデータを入力するには、データを含む有効なjsファイルが必要です(mongoバイナリに供給できる同じスタイルのファイル)。 ファイルはRockMongoのエクスポートコマンドで生成できます。</target>
        </trans-unit>
        <trans-unit id="61207f1fc70660fa5ae2f3bdf9634f3f7a60d911" translate="yes" xml:space="preserve">
          <source>In order to make auto-wiring work, you will need to implement the &lt;code&gt;_inject()&lt;/code&gt; method with the list of desired arguments. It is important to specify the type of arguments, so Codeception can guess which objects are expected to be received. The &lt;code&gt;_inject()&lt;/code&gt; will only be invoked once, just after creation of the TestCase object (either Cest or Test). Dependency Injection will also work in a similar manner for Helper and Actor classes.</source>
          <target state="translated">自動配線を機能させるには、必要な引数のリストを使用して &lt;code&gt;_inject()&lt;/code&gt; メソッドを実装する必要があります。引数のタイプを指定することが重要です。これにより、Codeceptionはどのオブジェクトが受信されると予想されるかを推測できます。 &lt;code&gt;_inject()&lt;/code&gt; ばかりのTestCaseオブジェクト（CESTまたはテストのいずれか）を作成した後、一度呼び出されます。Dependency InjectionもHelperクラスとActorクラスで同様に機能します。</target>
        </trans-unit>
        <trans-unit id="ad8a294daa024219e1267427d707cede2ec356e3" translate="yes" xml:space="preserve">
          <source>In order to test the contents of a specific file stored on any remote FTP/SFTP system this module downloads a temporary file to the local system. The temporary directory is defined by default as</source>
          <target state="translated">リモート FTP/SFTP システムに保存されている特定のファイルの内容をテストするために、このモジュールはローカル システムに一時ファイルをダウンロードします。一時ディレクトリは、デフォルトでは</target>
        </trans-unit>
        <trans-unit id="9fc819bb7a5a23e8b4249ba5cad35849f3d6ce39" translate="yes" xml:space="preserve">
          <source>In simple terms we set the &lt;code&gt;$_REQUEST&lt;/code&gt;, &lt;code&gt;$_GET&lt;/code&gt; and &lt;code&gt;$_POST&lt;/code&gt; variables and then we execute the application from a test. This may be valuable, as functional tests are faster and provide detailed stack traces on failures.</source>
          <target state="translated">簡単に言えば、 &lt;code&gt;$_REQUEST&lt;/code&gt; 、 &lt;code&gt;$_GET&lt;/code&gt; 、および &lt;code&gt;$_POST&lt;/code&gt; 変数を設定してから、テストからアプリケーションを実行します。機能テストはより高速で、障害時に詳細なスタックトレースを提供するため、これは価値があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="d04fa50184e8bab72b12588bcf473eca20afdf0e" translate="yes" xml:space="preserve">
          <source>In tests, you can use a StepObject by instantiating &lt;code&gt;Step\Acceptance\Admin&lt;/code&gt; instead of &lt;code&gt;AcceptanceTester&lt;/code&gt;:</source>
          <target state="translated">テストでは、 &lt;code&gt;AcceptanceTester&lt;/code&gt; の代わりに &lt;code&gt;Step\Acceptance\Admin&lt;/code&gt; インスタンス化して、StepObjectを使用できます。</target>
        </trans-unit>
        <trans-unit id="7ef104ee0c9546e02c06d52885b09a3789cbb3b4" translate="yes" xml:space="preserve">
          <source>In that file you can specify just the options you wish to override:</source>
          <target state="translated">このファイルでは、上書きしたいオプションだけを指定することができます。</target>
        </trans-unit>
        <trans-unit id="a3fc39e6050b456ddd0a79ffc98105ca7e490cb3" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;PhpBrowser&lt;/code&gt; you can test the page contents. In most cases, you just need to check that the required text or element is on the page.</source>
          <target state="translated">で &lt;code&gt;PhpBrowser&lt;/code&gt; 、ページの内容をテストすることができます。ほとんどの場合、必要なテキストまたは要素がページ上にあることを確認するだけです。</target>
        </trans-unit>
        <trans-unit id="5f721b0874414b2962d92f537928eba672663abc" translate="yes" xml:space="preserve">
          <source>In the extension, you can access the currently passed options via the &lt;code&gt;options&lt;/code&gt; property. You also can access the global configuration via the &lt;code&gt;\Codeception\Configuration::config()&lt;/code&gt; method. If you want to have custom options for your extension, you can pass them in the &lt;code&gt;codeception.yml&lt;/code&gt; file:</source>
          <target state="translated">拡張機能では、 &lt;code&gt;options&lt;/code&gt; プロパティを介して、現在渡されているオプションにアクセスできます。 &lt;code&gt;\Codeception\Configuration::config()&lt;/code&gt; メソッドを使用してグローバル設定にアクセスすることもできます。拡張機能にカスタムオプションを設定する場合は、それらを &lt;code&gt;codeception.yml&lt;/code&gt; ファイルで渡すことができます。</target>
        </trans-unit>
        <trans-unit id="1403eae0bc95c9d95d8f19e40b48439eab3b2744" translate="yes" xml:space="preserve">
          <source>In the module configuration use the format &lt;code&gt;key&lt;/code&gt;:&lt;code&gt;secret&lt;/code&gt;@hub.testingbot.com&amp;rsquo; for &lt;code&gt;host&lt;/code&gt;</source>
          <target state="translated">モジュールの設定で、フォーマット &lt;code&gt;key&lt;/code&gt; 使用します： &lt;code&gt;host&lt;/code&gt; &lt;code&gt;secret&lt;/code&gt; @ hub.testingbot.com '</target>
        </trans-unit>
        <trans-unit id="7f680ccba9bc101fb5e778555768e56d6ffa9184" translate="yes" xml:space="preserve">
          <source>In the module configuration use the format &lt;code&gt;username&lt;/code&gt;:&lt;code&gt;access_key&lt;/code&gt;@hub.browserstack.com&amp;rsquo; for &lt;code&gt;host&lt;/code&gt;</source>
          <target state="translated">モジュール構成では、 &lt;code&gt;host&lt;/code&gt; &lt;code&gt;username&lt;/code&gt; ： &lt;code&gt;access_key&lt;/code&gt; @ hub.browserstack.com 'の形式を使用します</target>
        </trans-unit>
        <trans-unit id="128f34a5faeb8ff8497c725ccfbc0cc36128ad84" translate="yes" xml:space="preserve">
          <source>In the module configuration use the format &lt;code&gt;username&lt;/code&gt;:&lt;code&gt;access_key&lt;/code&gt;@ondemand.saucelabs.com&amp;rsquo; for &lt;code&gt;host&lt;/code&gt;</source>
          <target state="translated">モジュール構成では、 &lt;code&gt;host&lt;/code&gt; &lt;code&gt;username&lt;/code&gt; ： &lt;code&gt;access_key&lt;/code&gt; @ ondemand.saucelabs.com 'の形式を使用します</target>
        </trans-unit>
        <trans-unit id="1a41c102594eca24555416213df21059a2280015" translate="yes" xml:space="preserve">
          <source>In this case configuration will be changed instantly. In next example we change root URL for PhpBrowser to point to the admin area, so next &lt;code&gt;amOnPage('/')&lt;/code&gt; will open &lt;code&gt;/admin/&lt;/code&gt; page.</source>
          <target state="translated">この場合、構成は即座に変更されます。次の例では、PhpBrowserのルートURLを管理領域を指すように変更するため、次の &lt;code&gt;amOnPage('/')&lt;/code&gt; は &lt;code&gt;/admin/&lt;/code&gt; ページを開きます。</target>
        </trans-unit>
        <trans-unit id="59212e1d404472b9a2dc97b30ab6109fd64a2a14" translate="yes" xml:space="preserve">
          <source>In this case remote Code Coverage results won&amp;rsquo;t be merged with local ones, if this option is enabled. Merging is possible only in case a remote and local files have the same path. But in case of running tests on a remote server we are not sure of it.</source>
          <target state="translated">この場合、このオプションが有効になっていると、リモートのコードカバレッジの結果はローカルの結果とマージされません。マージは、リモートファイルとローカルファイルのパスが同じ場合にのみ可能です。しかし、リモートサーバーでテストを実行する場合は、確信が持てません。</target>
        </trans-unit>
        <trans-unit id="d1b84c0b8ef50b84916cfb8fc9d7b1dd96f1b311" translate="yes" xml:space="preserve">
          <source>In this case you can define factories from a Helper class with &lt;code&gt;_define&lt;/code&gt; method.</source>
          <target state="translated">この場合、 &lt;code&gt;_define&lt;/code&gt; メソッドを使用して、ヘルパークラスからファクトリを定義できます。</target>
        </trans-unit>
        <trans-unit id="28d5b9f09b9a9f77adfeedca91abdbf38d223065" translate="yes" xml:space="preserve">
          <source>In this case you can match that record contains fields with data types you expected. The list of possible data types:</source>
          <target state="translated">この場合、レコードには期待したデータ型のフィールドが含まれていることがわかります。可能なデータ型のリストです。</target>
        </trans-unit>
        <trans-unit id="4fca86eda23ebcef51d19f6119b7f4a78671d4f3" translate="yes" xml:space="preserve">
          <source>In this case you can use the methods from the Doctrine2 module, while Doctrine itself uses the Symfony module to establish connections to the database. In this case a test might look like:</source>
          <target state="translated">この場合、Doctrine2 モジュールのメソッドを使うことができますが、Doctrine 自体は Symfony モジュールを使ってデータベースへの接続を確立します。この場合のテストは次のようになります。</target>
        </trans-unit>
        <trans-unit id="ed59577b25662579219e32c153ff25cf9fa3e7da" translate="yes" xml:space="preserve">
          <source>In this case, bootstrap script will be executed before the Codeception is initialized. Bootstrap script should be located in current working directory or by an absolute path.</source>
          <target state="translated">この場合、Codeceptionが初期化される前にブートストラップスクリプトが実行されます。ブートストラップスクリプトは、現在の作業ディレクトリにあるか、絶対パスで指定してください。</target>
        </trans-unit>
        <trans-unit id="774a357bf505c61ee03b71fa971c97a7b2a87ea3" translate="yes" xml:space="preserve">
          <source>In this case, please ensure that &lt;code&gt;\Helper\Acceptance&lt;/code&gt; is loaded before WebDriver so new capabilities could be applied.</source>
          <target state="translated">この場合、新しい機能を適用できるように、 &lt;code&gt;\Helper\Acceptance&lt;/code&gt; がWebDriverの前に読み込まれていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="11204b3d4213020f4c613cd25fc5849d51d7052f" translate="yes" xml:space="preserve">
          <source>In this case, we are waiting for the &amp;lsquo;agree&amp;rsquo; button to appear and then click it. If it didn&amp;rsquo;t appear after 30 seconds, the test will fail. There are other &lt;code&gt;wait&lt;/code&gt; methods you may use, like &lt;a href=&quot;modules/webdriver#waitForText&quot;&gt;waitForText&lt;/a&gt;, &lt;a href=&quot;modules/webdriver#waitForElementVisible&quot;&gt;waitForElementVisible&lt;/a&gt; and others.</source>
          <target state="translated">この場合、「同意する」ボタンが表示されるのを待ってからクリックします。30秒経っても表示されなかった場合、テストは失敗します。&lt;a href=&quot;modules/webdriver#waitForText&quot;&gt;waitForText&lt;/a&gt;、&lt;a href=&quot;modules/webdriver#waitForElementVisible&quot;&gt;waitForElementVisible&lt;/a&gt;など、使用できる他の &lt;code&gt;wait&lt;/code&gt; メソッドがあります。</target>
        </trans-unit>
        <trans-unit id="ac673d1d8798c0b6d965b7ecc1973cc9ab5de334" translate="yes" xml:space="preserve">
          <source>In this case, we performed, or &amp;lsquo;did&amp;rsquo;, some actions in the second window with the &lt;code&gt;does&lt;/code&gt; method on a friend object.</source>
          <target state="translated">この場合、フレンドオブジェクトの &lt;code&gt;does&lt;/code&gt; メソッドを使用して、2番目のウィンドウでいくつかのアクションを実行、つまり「did」しました。</target>
        </trans-unit>
        <trans-unit id="0528556a528ac7b281d9be1e398ebaaa9dc498e8" translate="yes" xml:space="preserve">
          <source>In this chapter we will cover some techniques and options that you can use to improve your testing experience and keep your project better organized.</source>
          <target state="translated">この章では、テストの経験を向上させ、プロジェクトをより良い状態に保つためのテクニックやオプションについて説明します。</target>
        </trans-unit>
        <trans-unit id="407cb83b841aee54c4a47e03c557484f8278d510" translate="yes" xml:space="preserve">
          <source>In this chapter we will explain how you can extend and customize the file structure and test execution routines.</source>
          <target state="translated">この章では、ファイル構造とテスト実行ルーチンを拡張してカスタマイズする方法を説明します。</target>
        </trans-unit>
        <trans-unit id="4f93809955f22efc017476d7eac9285f12298460" translate="yes" xml:space="preserve">
          <source>In this configuration file you can enable/disable and reconfigure modules for your needs. When you change the configuration, the actor classes are rebuilt automatically. If the actor classes are not created or updated as you expect, try to generate them manually with the &lt;code&gt;build&lt;/code&gt; command:</source>
          <target state="translated">この構成ファイルでは、必要に応じてモジュールを有効化/無効化および再構成できます。構成を変更すると、アクタークラスが自動的に再構築されます。アクタークラスが期待どおりに作成または更新されない場合は、 &lt;code&gt;build&lt;/code&gt; コマンドを使用して手動で生成を試みます。</target>
        </trans-unit>
        <trans-unit id="fc9e83800dcb8dd08c0ea76b4574dd9c91aa9cb2" translate="yes" xml:space="preserve">
          <source>In this example factories are loaded from &lt;code&gt;tests/_support/factories&lt;/code&gt; directory. Please note that this directory is relative from the codeception.yml file (so for Yii2 it would be codeception/_support/factories). You should create this directory manually and create PHP files in it with factories definitions following &lt;a href=&quot;https://github.com/thephpleague/factory-muffin#usage&quot;&gt;official documentation&lt;/a&gt;.</source>
          <target state="translated">この例では、ファクトリーは &lt;code&gt;tests/_support/factories&lt;/code&gt; ディレクトリーからロードされます。このディレクトリはcodeception.ymlファイルからの相対であることに注意してください（Yii2の場合はcodeception / _support / factoriesになります）。このディレクトリを手動で作成し、&lt;a href=&quot;https://github.com/thephpleague/factory-muffin#usage&quot;&gt;公式ドキュメント&lt;/a&gt;に従ってファクトリー定義を含むPHPファイルを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="2bf200994f2d2fe3c2483aa226bdb6f61dd7b8f4" translate="yes" xml:space="preserve">
          <source>In this example we use the API of the &lt;a href=&quot;https://github.com/facebook/php-webdriver&quot;&gt;facebook/php-webdriver&lt;/a&gt; library, a Selenium WebDriver client the module is build on. You can also access the &lt;code&gt;webDriver&lt;/code&gt; property of a module to get access to the &lt;code&gt;Facebook\WebDriver\RemoteWebDriver&lt;/code&gt; instance for direct Selenium interaction.</source>
          <target state="translated">この例では、モジュールが構築されているSelenium WebDriverクライアントである&lt;a href=&quot;https://github.com/facebook/php-webdriver&quot;&gt;facebook / php-webdriver&lt;/a&gt;ライブラリのAPIを使用します。モジュールの &lt;code&gt;webDriver&lt;/code&gt; プロパティにアクセスして、Seleniumと直接対話するための &lt;code&gt;Facebook\WebDriver\RemoteWebDriver&lt;/code&gt; インスタンスにアクセスすることもできます。</target>
        </trans-unit>
        <trans-unit id="4217ce00d6c6702e9adc56a8cc27dcf7a8dc48aa" translate="yes" xml:space="preserve">
          <source>In this example we will wait up to 60 seconds for all jQuery AJAX requests to finish.</source>
          <target state="translated">この例では、すべてのjQuery AJAXリクエストが終了するまで最大60秒待ちます。</target>
        </trans-unit>
        <trans-unit id="b44233b041df4daba01d582eef98b59798297df2" translate="yes" xml:space="preserve">
          <source>In this helper you can replace the parent&amp;rsquo;s methods with your own implementation. You can also replace the &lt;code&gt;_before&lt;/code&gt; and &lt;code&gt;_after&lt;/code&gt; hooks, which might be an option when you need to customize starting and stopping of a testing session.</source>
          <target state="translated">このヘルパーでは、親のメソッドを独自の実装に置き換えることができます。また、置き換えることができ &lt;code&gt;_before&lt;/code&gt; と &lt;code&gt;_after&lt;/code&gt; あなたが起動し、テストセッションの停止をカスタマイズする必要がある場合にオプションであるかもしれないフックを、。</target>
        </trans-unit>
        <trans-unit id="c8d564a362dcff50be70698afe7f35a9b062c519" translate="yes" xml:space="preserve">
          <source>In your helpers you can use these assertions:</source>
          <target state="translated">ヘルパーでは、これらのアサーションを使うことができます。</target>
        </trans-unit>
        <trans-unit id="aabe007ac57bad4f629530925f92a8ebdefab4db" translate="yes" xml:space="preserve">
          <source>Include and exclude options can be redefined for each suite in corresponding config files.</source>
          <target state="translated">含めるオプションと除外するオプションは、対応する設定ファイルでスイートごとに再定義することができます。</target>
        </trans-unit>
        <trans-unit id="19682bdb9185a5fa9d763d414d0443d3a0bc2456" translate="yes" xml:space="preserve">
          <source>Init</source>
          <target state="translated">Init</target>
        </trans-unit>
        <trans-unit id="bfafb979f6da0d205f18ee39931fe696ee6207ea" translate="yes" xml:space="preserve">
          <source>Initializes basic RoboFile in the root of your project</source>
          <target state="translated">プロジェクトのルートにある基本的なロボファイルを初期化します。</target>
        </trans-unit>
        <trans-unit id="622a4cac2919719782d2ad2d0dfb92c19d998254" translate="yes" xml:space="preserve">
          <source>Inject an actor class via constructor and implement &lt;code&gt;fetchData&lt;/code&gt; method which should return a data set from a test.</source>
          <target state="translated">コンストラクターを介してアクタークラスを &lt;code&gt;fetchData&lt;/code&gt; し、テストからデータセットを返すfetchDataメソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="11d4c4cd02c35ffc233b7c91a3c60d982597ad58" translate="yes" xml:space="preserve">
          <source>Inserts a record into the database.</source>
          <target state="translated">データベースにレコードを挿入します。</target>
        </trans-unit>
        <trans-unit id="e0d578354341665a76f1cdee8be98240142ae644" translate="yes" xml:space="preserve">
          <source>Inserts an SQL record into a database. This record will be erased after the test.</source>
          <target state="translated">SQLレコードをデータベースに挿入します。このレコードはテスト後に消去されます。</target>
        </trans-unit>
        <trans-unit id="72fdb9a796d33d5c1c813f0f32932523b4ab5a50" translate="yes" xml:space="preserve">
          <source>Inserts data into collection</source>
          <target state="translated">データをコレクションに挿入</target>
        </trans-unit>
        <trans-unit id="bf9d7c4b25f4525ecfa82c05452fe557bf68cd94" translate="yes" xml:space="preserve">
          <source>Inserts record into the database.</source>
          <target state="translated">データベースにレコードを挿入します。</target>
        </trans-unit>
        <trans-unit id="fd53e8fe1f254a0ee71e4814107c89b1828772e7" translate="yes" xml:space="preserve">
          <source>Inserts record into the database. If you pass the name of a database table as the first argument, this method returns an integer ID. You can also pass the class name of an Eloquent model, in that case this method returns an Eloquent model.</source>
          <target state="translated">データベースにレコードを挿入します。第一引数にデータベース・テーブル名を渡すと、このメソッドは整数のIDを返します。また、Eloquentモデルのクラス名を渡すこともできますが、その場合、このメソッドはEloquentモデルを返します。</target>
        </trans-unit>
        <trans-unit id="9fb50475842b7074c483005ecf83b1486cd3a59c" translate="yes" xml:space="preserve">
          <source>Inside &lt;code&gt;@depends&lt;/code&gt; block you should use test signature. Execute your feature with &lt;code&gt;dry-run&lt;/code&gt; to see signatures for all scenarios in it. By marking tests with &lt;code&gt;@depends&lt;/code&gt; you ensure that this test won&amp;rsquo;t be executed before the test it depends on.</source>
          <target state="translated">&lt;code&gt;@depends&lt;/code&gt; ブロック内では、テスト署名を使用する必要があります。機能を &lt;code&gt;dry-run&lt;/code&gt; 演習で実行して、その中のすべてのシナリオのシグネチャを確認します。テストを &lt;code&gt;@depends&lt;/code&gt; でマークすることにより、依存するテストの前にこのテストが実行されないようにします。</target>
        </trans-unit>
        <trans-unit id="8c15093cd017bb72c227ca783141dbdef1f19900" translate="yes" xml:space="preserve">
          <source>Inside Container</source>
          <target state="translated">コンテナ内</target>
        </trans-unit>
        <trans-unit id="a53c40802c9e5c88d820767ea2313e6dbe079cc8" translate="yes" xml:space="preserve">
          <source>Inside Interactive Pause you can use the entire power of the PHP interpreter: variables, functions, etc. You can access the result of the last executed command in a variable called &lt;code&gt;$result&lt;/code&gt;.</source>
          <target state="translated">Interactive Pause内では、変数、関数など、PHPインタープリターのすべての機能を使用できます。最後に実行されたコマンドの結果には、 &lt;code&gt;$result&lt;/code&gt; という変数でアクセスできます。</target>
        </trans-unit>
        <trans-unit id="d8d82bffcc7dae461e0b71a8c0cdf787f096b0ed" translate="yes" xml:space="preserve">
          <source>Inside a class:</source>
          <target state="translated">クラスの中で</target>
        </trans-unit>
        <trans-unit id="583a6034891802b0ae581b183d72006db4d8f88e" translate="yes" xml:space="preserve">
          <source>Inside a test you can inject the snapshot class and call &lt;code&gt;assert&lt;/code&gt; method on it:</source>
          <target state="translated">テスト内では、スナップショットクラスを挿入して、それに対して &lt;code&gt;assert&lt;/code&gt; メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="2fe9a419f6b67bc563c29714651d79ac8ca40d8f" translate="yes" xml:space="preserve">
          <source>Inside acceptance or functional test you can save page screenshot or html snapshot to check the page you are working on.</source>
          <target state="translated">受け入れや機能テストの内部では、ページのスクリーンショットやhtmlのスナップショットを保存して、作業中のページを確認することができます。</target>
        </trans-unit>
        <trans-unit id="d1c0086d7ed7be4abc81747104998521742d1667" translate="yes" xml:space="preserve">
          <source>Inside interactive pause you can use all power of PHP interpreter. Use variables, functions, etc. Result of the last executed command (usually a grabber) is saved to &lt;code&gt;$result&lt;/code&gt; variable, so you can use it in next commands.</source>
          <target state="translated">インタラクティブポーズ内では、PHPインタープリターのすべての機能を使用できます。変数、関数などを使用します。最後に実行されたコマンド（通常はグラバー）の &lt;code&gt;$result&lt;/code&gt; は$ result変数に保存されるため、次のコマンドで使用できます。</target>
        </trans-unit>
        <trans-unit id="4f63dca28db6bebcf2543e28b738ea87a2aa58f2" translate="yes" xml:space="preserve">
          <source>Inside unit tests (&lt;code&gt;Codeception\Test\Unit&lt;/code&gt;) it is recommended to use alternative API:</source>
          <target state="translated">単体テスト（ &lt;code&gt;Codeception\Test\Unit&lt;/code&gt; ）の内部では、代替APIを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="648519f39aef66a37fb025a486d833f81fc0c901" translate="yes" xml:space="preserve">
          <source>Inside your test you may change application state; however these changes will be lost when doing a request if you have enabled &lt;code&gt;recreateApplication&lt;/code&gt;.</source>
          <target state="translated">テスト内でアプリケーションの状態を変更できます。ただし、 &lt;code&gt;recreateApplication&lt;/code&gt; を有効にした場合、リクエストを実行するとこれらの変更は失われます。</target>
        </trans-unit>
        <trans-unit id="12429794c27b944d31769d05733588745c3c1999" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt;をインストールします。</target>
        </trans-unit>
        <trans-unit id="946fc7acd317e95cb9443e71495995e24a228ef5" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriver&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriver&lt;/a&gt;をインストールします。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="997f80042aa0501edb2cb70e8782a87d2c012049" translate="yes" xml:space="preserve">
          <source>Installation Templates</source>
          <target state="translated">インストールテンプレート</target>
        </trans-unit>
        <trans-unit id="f435db1e97a10cd1799bc237f609e281de8f7642" translate="yes" xml:space="preserve">
          <source>Instantiates a class instance by running constructor with all methods replaced with dummies, except one. Parameters for constructor passed as second argument Properties and methods can be set in third argument. Even protected and private properties can be set.</source>
          <target state="translated">1つを除くすべてのメソッドをダミーに置き換えた状態でコンストラクタを実行することで、クラスのインスタンスをインスタンス化します。第2引数にコンストラクタのパラメータを渡す 第3引数にプロパティやメソッドを設定できる。protectedプロパティやprivateプロパティも設定できます。</target>
        </trans-unit>
        <trans-unit id="79d8645d9b6631ee9b102ae10eed14d0040b6132" translate="yes" xml:space="preserve">
          <source>Instantiates a class instance by running constructor with all methods replaced with dummies. Parameters for constructor passed as second argument Properties and methods can be set in third argument. Even protected and private properties can be set.</source>
          <target state="translated">すべてのメソッドをダミーに置き換えてコンストラクタを実行することで、クラスのインスタンスをインスタンス化します。第2引数にコンストラクタのパラメータを渡す 第3引数にプロパティやメソッドを設定できる。protectedプロパティやprivateプロパティも設定できます。</target>
        </trans-unit>
        <trans-unit id="3df3d313f72d76a0ba493e0d327b0d8847feb188" translate="yes" xml:space="preserve">
          <source>Instantiates a class instance by running constructor. Parameters for constructor passed as second argument Properties and methods can be set in third argument. Even protected and private properties can be set.</source>
          <target state="translated">コンストラクタを実行してクラスのインスタンスを作成します。第2引数にコンストラクタのパラメータを渡す 第3引数にプロパティやメソッドを設定できる。protectedプロパティやprivateプロパティも設定できます。</target>
        </trans-unit>
        <trans-unit id="6932e3ca78052e69b5b028c17a03d7eb4cd244fc" translate="yes" xml:space="preserve">
          <source>Instantiates a class without executing a constructor. Properties and methods can be set as a second parameter. Even protected and private properties can be set.</source>
          <target state="translated">コンストラクタを実行せずにクラスをインスタンス化します。プロパティやメソッドは、2番目のパラメータとして設定することができます。protectedプロパティやprivateプロパティも設定できます。</target>
        </trans-unit>
        <trans-unit id="3c4f3ae0f232481843b6705373a0950410feb959" translate="yes" xml:space="preserve">
          <source>Instantiates class having all methods replaced with dummies except one. Constructor is not triggered. Properties and methods can be replaced. Even protected and private properties can be set.</source>
          <target state="translated">1つを除くすべてのメソッドをダミーに置き換えたクラスをインスタンス化します。コンストラクタはトリガされません。プロパティとメソッドを置き換えることができます。protectedプロパティやprivateプロパティも設定できます。</target>
        </trans-unit>
        <trans-unit id="4d0212fc8633e8dbe302082c040da1739010f97f" translate="yes" xml:space="preserve">
          <source>Instantiates class having all methods replaced with dummies. Constructor is not triggered. Properties and methods can be set as a second parameter. Even protected and private properties can be set.</source>
          <target state="translated">すべてのメソッドをダミーに置き換えたクラスをインスタンス化します。コンストラクタはトリガされません。プロパティとメソッドは、2 番目のパラメータとして設定することができます。protectedプロパティやprivateプロパティも設定できます。</target>
        </trans-unit>
        <trans-unit id="036a5d47efaf84af91b96bca27d0e3394108b032" translate="yes" xml:space="preserve">
          <source>Integration Tests</source>
          <target state="translated">統合テスト</target>
        </trans-unit>
        <trans-unit id="7d2151dd44eac36d73e554afb31143324a7d4532" translate="yes" xml:space="preserve">
          <source>Interacting with the Framework</source>
          <target state="translated">フレームワークとの相互作用</target>
        </trans-unit>
        <trans-unit id="ee9863dabdf00611ce9612b8d2853c80323b736f" translate="yes" xml:space="preserve">
          <source>Interactive Pause</source>
          <target state="translated">インタラクティブポーズ</target>
        </trans-unit>
        <trans-unit id="d5b3b5b173ef836611afcb6c37df10a14b41e054" translate="yes" xml:space="preserve">
          <source>Interactive Pause requires &lt;a href=&quot;https://hoa-project.net/&quot;&gt;&lt;code&gt;hoa/console&lt;/code&gt;&lt;/a&gt; which is not installed by default. To install it, run:</source>
          <target state="translated">インタラクティブ一時停止には、デフォルトでインストールされていない&lt;a href=&quot;https://hoa-project.net/&quot;&gt; &lt;code&gt;hoa/console&lt;/code&gt; &lt;/a&gt;が必要です。インストールするには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="b9296b00b868a262391483018a17c0a164e81269" translate="yes" xml:space="preserve">
          <source>Invalidate previously cached routes.</source>
          <target state="translated">以前にキャッシュされたルートを無効にします。</target>
        </trans-unit>
        <trans-unit id="dd846a82737ee0e3c63501bd4687e8b10b9c2ac8" translate="yes" xml:space="preserve">
          <source>Invalidate the current session.</source>
          <target state="translated">現在のセッションを無効にします。</target>
        </trans-unit>
        <trans-unit id="8649384b7310ce555b0e313e707ed422fd17567a" translate="yes" xml:space="preserve">
          <source>Iron.io</source>
          <target state="translated">Iron.io</target>
        </trans-unit>
        <trans-unit id="fff3860a201690b13385c70d4494c339fb146484" translate="yes" xml:space="preserve">
          <source>Iron.io: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">Iron.io：&lt;strong&gt;安定&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42380fe9aebb4f162330f70a985a76cdc24b2dc8" translate="yes" xml:space="preserve">
          <source>IronMQ: iron-io/iron_mq</source>
          <target state="translated">IronMQ:iron-io/iron_mq</target>
        </trans-unit>
        <trans-unit id="65dafbf7dbd1539d277dbdd60679aee02ce9387a" translate="yes" xml:space="preserve">
          <source>It allows to reuse business rules inside assertion methods:</source>
          <target state="translated">アサーション・メソッド内でビジネス・ルールを再利用することができます。</target>
        </trans-unit>
        <trans-unit id="7cdc6547b46d9835ee5e61febc95def83a3870b5" translate="yes" xml:space="preserve">
          <source>It can be called a &lt;em&gt;BDD&lt;/em&gt; (Behavior Driven Development) framework. All Codeception tests are written in a descriptive manner. Just by looking at the test body, you can clearly understand what is being tested and how it is performed. Even complex tests with many assertions are written in a simple PHP Domain-Specific Language (&lt;em&gt;DSL&lt;/em&gt;).</source>
          <target state="translated">&lt;em&gt;BDD&lt;/em&gt;（Behavior Driven Development）フレームワークと呼ぶことができます。すべてのCodeceptionテストは、説明的な方法で記述されています。試験体を見るだけで、何が試験され、どのように実施されているかを明確に理解できます。多くのアサーションを含む複雑なテストでさえ、単純なPHPドメイン固有言語（&lt;em&gt;DSL&lt;/em&gt;）で書かれています。</target>
        </trans-unit>
        <trans-unit id="efa31cb0c4b4b295dc93325fb748f98ac07a25ab" translate="yes" xml:space="preserve">
          <source>It can operate with different entities: the web page can be loaded with the PhpBrowser module, the database assertion uses the Db module, and file state can be checked with the Filesystem module.</source>
          <target state="translated">WebページはPhpBrowserモジュールでロードし、データベースのアサーションはDbモジュールを使用し、ファイルの状態はFilesystemモジュールでチェックすることができます。</target>
        </trans-unit>
        <trans-unit id="b9e60182ba324b1ff5f304697c0692641bae4872" translate="yes" xml:space="preserve">
          <source>It can operate with different entities: the web page can be loaded with the PhpBrowser module, the database assertion uses the Db module, and the file state can be checked with the Filesystem module.</source>
          <target state="translated">WebページはPhpBrowserモジュールで読み込み、データベースのアサーションはDbモジュールを使用し、ファイルの状態はFilesystemモジュールでチェックすることができます。</target>
        </trans-unit>
        <trans-unit id="712e9450cf2d6967cc178242580e43bb1656a071" translate="yes" xml:space="preserve">
          <source>It creates a new &lt;code&gt;ExampleTest&lt;/code&gt; file located in the &lt;code&gt;tests/unit&lt;/code&gt; directory.</source>
          <target state="translated">これは、 &lt;code&gt;tests/unit&lt;/code&gt; ディレクトリにある新しい &lt;code&gt;ExampleTest&lt;/code&gt; ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="e2513a1f5abec7485adf1709d971905d0692461f" translate="yes" xml:space="preserve">
          <source>It initializes the Yii framework in a test environment and provides actions for functional testing.</source>
          <target state="translated">Yii フレームワークをテスト環境で初期化し、機能テストのためのアクションを提供します。</target>
        </trans-unit>
        <trans-unit id="1a0a00b4cbe841349b65749bf2aab6be5165e388" translate="yes" xml:space="preserve">
          <source>It is common to think that BDD scenario is equal to test. But it&amp;rsquo;s actually not. Not every test should be described as a feature. Not every test is written to test real business value. For instance, regression tests or negative scenario tests are not bringing any value to business. Business analysts don&amp;rsquo;t care about scenario reproducing bug #13, or what error message is displayed when user tries to enter wrong password on login screen. Writing all the tests inside a feature files creates informational overflow.</source>
          <target state="translated">BDDシナリオはテストに等しいと考えるのが一般的です。しかし、実際にはそうではありません。すべてのテストを機能として説明する必要はありません。すべてのテストが実際のビジネス価値をテストするように作成されているわけではありません。たとえば、回帰テストや否定的なシナリオテストは、ビジネスに価値をもたらしません。ビジネスアナリストは、バグ＃13を再現するシナリオや、ユーザーがログイン画面で間違ったパスワードを入力しようとしたときに表示されるエラーメッセージを気にしません。機能ファイル内にすべてのテストを書き込むと、情報のオーバーフローが発生します。</target>
        </trans-unit>
        <trans-unit id="870e997813da386bbdbc389f981a0a7181e865c6" translate="yes" xml:space="preserve">
          <source>It is easy to add more custom services. For instance to use Redis you just simple add this lines:</source>
          <target state="translated">カスタムサービスを追加するのは簡単です。例えば、Redisを使用するには、以下の行を追加するだけです。</target>
        </trans-unit>
        <trans-unit id="bd5b5feb218f52165bc2833bf70f0d670348af4e" translate="yes" xml:space="preserve">
          <source>It is expected that you will populate it with the UI locators of a page it represents. Locators can be added as public properties:</source>
          <target state="translated">これには、それが表すページの UI ロケータを入力することが期待されています。ロケータはパブリックプロパティとして追加することができます。</target>
        </trans-unit>
        <trans-unit id="3eba16bb7df5e1f1ae4e3afdfbedba4f5cbb9fe9" translate="yes" xml:space="preserve">
          <source>It is highly recommended to use Continuous Integration system in development. Codeception is easy to install and run in any CI systems. However, each of them has their differences you should take into account. You can use different reporters to provide output in format expected by CI system.</source>
          <target state="translated">開発で継続的インテグレーションシステムを利用することを強くお勧めします。Codeceptionは、どのCIシステムにも簡単にインストールして実行することができます。しかし、それぞれのCIシステムには注意すべき違いがあります。CIシステムが期待するフォーマットで出力するために、異なるレポーターを使用することができます。</target>
        </trans-unit>
        <trans-unit id="b995e3bae3e292f3dd4c169be4d49add343e2c0b" translate="yes" xml:space="preserve">
          <source>It is important to understand that SmartWait works only with a specific locators:</source>
          <target state="translated">SmartWaitは特定のロケータのみで動作することを理解しておくことが重要です。</target>
        </trans-unit>
        <trans-unit id="c97522499093c3104c457cbfdad773231fccf1bd" translate="yes" xml:space="preserve">
          <source>It is not recommended to use this command on a regular basis. If Codeception lacks important Guzzle Client methods, implement them and submit patches.</source>
          <target state="translated">このコマンドを定期的に使用することは推奨されていません。Codeceptionに重要なGuzzleクライアントのメソッドが欠けている場合は、それらを実装してパッチを提出してください。</target>
        </trans-unit>
        <trans-unit id="79a1de0e282c2b91771e20557ca4e19ca687e1e8" translate="yes" xml:space="preserve">
          <source>It is possible to wait for elements pragmatically. If a test uses element which is not on a page yet, Codeception will wait for few extra seconds before failing. This feature is based on &lt;a href=&quot;http://www.seleniumhq.org/docs/04_webdriver_advanced.jsp#implicit-waits&quot;&gt;Implicit Wait&lt;/a&gt; of Selenium. Codeception enables implicit wait only when searching for a specific element and disables in all other cases. Thus, the performance of a test is not affected.</source>
          <target state="translated">要素を実際的に待つことは可能です。テストがまだページ上にない要素を使用している場合、Codeceptionは失敗するまでに数秒待機します。この機能は、Seleniumの&lt;a href=&quot;http://www.seleniumhq.org/docs/04_webdriver_advanced.jsp#implicit-waits&quot;&gt;Implicit Wait&lt;/a&gt;に基づいています。Codeceptionは、特定の要素を検索する場合にのみ暗黙的な待機を有効にし、それ以外の場合は無効にします。したがって、テストのパフォーマンスは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="2454e1dc9f94abdb91beb718bdaca05a5b1c7aa8" translate="yes" xml:space="preserve">
          <source>It is pretty common for API tests to not only validate the received data but to check the structure of the response. Response data is not usually considered to be consistent, and may change on each request, however the JSON/XML structure should be kept the same for an API version. In order to check response structure the REST module has some useful methods.</source>
          <target state="translated">API テストでは、受信したデータを検証するだけでなく、レスポンスの構造をチェックするのが一般的です。レスポンスデータは通常一貫性があるとは考えられず、リクエストごとに変更されるかもしれませんが、JSON/XML の構造は API のバージョンでは同じに保たれるべきです。レスポンスの構造をチェックするために、REST モジュールには便利なメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="eab9a12f0ac9a5101d4f5c37440e55baef4a86b3" translate="yes" xml:space="preserve">
          <source>It is recommended to have the next plugins installed:</source>
          <target state="translated">次のプラグインをインストールしておくことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6e6ee6e1ef45c1a434b67e2021889cf20b295fae" translate="yes" xml:space="preserve">
          <source>It is recommended to put widely used actions inside an Actor class. A good example is the &lt;code&gt;login&lt;/code&gt; action which would probably be actively involved in acceptance or functional testing:</source>
          <target state="translated">広く使用されているアクションをActorクラス内に置くことをお勧めします。良い例は、おそらく受け入れまたは機能テストに積極的に関与する &lt;code&gt;login&lt;/code&gt; アクションです。</target>
        </trans-unit>
        <trans-unit id="434a719d3ed8a66424e80f13656a16a4d703cbaa" translate="yes" xml:space="preserve">
          <source>It is recommended to use page objects for acceptance testing only</source>
          <target state="translated">受け入れテストのためだけにページオブジェクトを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d47d2447ec80dbf093e2607ba216f9b6baa2de55" translate="yes" xml:space="preserve">
          <source>It makes no difference what (if any) CMS or framework is used on the site. You can even test sites created with different languages, like Java, .NET, etc. It&amp;rsquo;s always a good idea to add tests to your website. At least you will be sure that site features work after the latest changes were made.</source>
          <target state="translated">サイトで使用されているCMSまたはフレームワーク（存在する場合）に違いはありません。Java、.NETなどの異なる言語で作成されたサイトをテストすることもできます。ウェブサイトにテストを追加することは常に良い考えです。少なくとも、最新の変更が行われた後は、サイトの機能が確実に機能するようになります。</target>
        </trans-unit>
        <trans-unit id="41306a6419fcad5fda529bdf8cfdf5dcf4d2e4d9" translate="yes" xml:space="preserve">
          <source>It should be mentioned that Cloud Testing services are not free. You should investigate their pricing models and choose one that fits your needs. They also may work painfully slowly if ping times between the local server and the cloud is too high. This may lead to random failures in acceptance tests.</source>
          <target state="translated">クラウドテストサービスは無料ではないことに注意が必要です。価格モデルを調べて、自分のニーズに合ったものを選ぶべきです。また、ローカルサーバとクラウド間のping時間が高すぎると、痛いほど遅く動作することがあります。これは、受け入れテストでランダムに失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="2c55bd279f3cbee30faa4ab9bbd828863e718b58" translate="yes" xml:space="preserve">
          <source>It will be called &lt;code&gt;CreateUserCest.php&lt;/code&gt;. We need to implement a public method for each test. Let&amp;rsquo;s make &lt;code&gt;createUserViaAPI&lt;/code&gt; to test creation of a user via the REST API.</source>
          <target state="translated">これは &lt;code&gt;CreateUserCest.php&lt;/code&gt; と呼ばれます。テストごとにパブリックメソッドを実装する必要があります。REST APIを介してユーザーの作成をテストする &lt;code&gt;createUserViaAPI&lt;/code&gt; を作成してみましょう。</target>
        </trans-unit>
        <trans-unit id="02728554126e785a221754a30be4888278cd1378" translate="yes" xml:space="preserve">
          <source>It will be placed into &lt;code&gt;tests/acceptance&lt;/code&gt; directory.</source>
          <target state="translated">これは、 &lt;code&gt;tests/acceptance&lt;/code&gt; ディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="12af7f1cc9604887119cc1305c71d1094eef9223" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to merge multiple environments into a single configuration by separating them with a comma:</source>
          <target state="translated">複数の環境をコンマで区切って、1つの構成にマージすることもできます。</target>
        </trans-unit>
        <trans-unit id="df6d2ba9090fcf251619bfae95a5a6de7a765bc9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s hard to write a complete test at once. You will need to try different commands with different arguments before you find a correct path.</source>
          <target state="translated">完全なテストを一度に書くのは難しい。正しいパスを見つける前に、異なる引数で異なるコマンドを試す必要があります。</target>
        </trans-unit>
        <trans-unit id="97c7b0f550e1e8aa9c58fbab1092e7731e7f3cf4" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s never been easier to setup local and remote code coverage. Just one config and one additional file to include! &lt;strong&gt;With Codeception you can easily generate CodeCoverage reports for your Selenium tests&lt;/strong&gt; (or other acceptance or api tests). Mixing reports for &lt;code&gt;acceptance&lt;/code&gt;, &lt;code&gt;functional&lt;/code&gt;, and &lt;code&gt;unit&lt;/code&gt; suites provides you with the most complete information on which parts of your applications are tested and which are not.</source>
          <target state="translated">ローカルとリモートのコードカバレッジを簡単に設定できるようになりました。1つの構成と1つの追加ファイルを含めるだけです！&lt;strong&gt;Codeceptionを使用すると、Seleniumテスト&lt;/strong&gt;（または他の受け入れテストやAPIテスト）の&lt;strong&gt;CodeCoverageレポートを簡単に生成できます&lt;/strong&gt;。 &lt;code&gt;acceptance&lt;/code&gt; 、 &lt;code&gt;functional&lt;/code&gt; 、 &lt;code&gt;unit&lt;/code&gt; スイートのレポートを混合すると、アプリケーションのどの部分がテストされ、どの部分がテストされていないかに関する最も完全な情報が得られます。</target>
        </trans-unit>
        <trans-unit id="e70a8dcb09cfc7c5464d29ab238ddc852bd726d1" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible that you will need to access internal data or functions from other modules. For example, for your module you might need to access the responses or internal actions of other modules.</source>
          <target state="translated">他のモジュールから内部データまたは関数にアクセスする必要がある可能性があります。たとえば、モジュールの場合、他のモジュールの応答または内部アクションにアクセスする必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="18c379f4d783bddf69c4f93744cbc2e44a8a898e" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to override the cookie domain set by Codeception during code coverage. Typical case for that is when you have several subdomains that your acceptance tests are visiting, e.g. &lt;code&gt;mysite.com&lt;/code&gt; and &lt;code&gt;admin.mysite.com&lt;/code&gt;. By default, Codeception will run code coverage only for the domain set in the url of the &lt;code&gt;WebDriver/url&lt;/code&gt; (or &lt;code&gt;c3_url&lt;/code&gt; if defined), thus leaving out other subdomains from code coverage. To avoid that and to include all relevant subdomains in code covereage, it&amp;rsquo;s advised to set &lt;code&gt;.mysite.com&lt;/code&gt; as the cookie domain option:</source>
          <target state="translated">コードカバレッジ中にCodeceptionによって設定されたCookieドメインをオーバーライドすることが可能です。その典型的なケースは、受け入れテストがアクセスしているいくつかのサブドメインがある場合です（例： &lt;code&gt;mysite.com&lt;/code&gt; および &lt;code&gt;admin.mysite.com&lt;/code&gt; )。デフォルトでは、Codeceptionは &lt;code&gt;WebDriver/url&lt;/code&gt; （または定義されている場合は &lt;code&gt;c3_url&lt;/code&gt; ）のurlで設定されたドメインに対してのみコードカバレッジを実行するため、他のサブドメインはコードカバレッジから除外されます。これを回避し、コードカバージに関連するすべてのサブドメインを含めるには、 &lt;code&gt;.mysite.com&lt;/code&gt; をcookieドメインオプションとして設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0a17cbf789b98066e0893cc7a3f7df549a8a99cd" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s up to you to decide whether to use &lt;code&gt;XmlBuilder&lt;/code&gt; or plain XML. &lt;code&gt;XmlBuilder&lt;/code&gt; will return XML string as well.</source>
          <target state="translated">&lt;code&gt;XmlBuilder&lt;/code&gt; を使用するかプレーンXML を使用するかは、ユーザーが決定します。 &lt;code&gt;XmlBuilder&lt;/code&gt; はXML文字列も返します。</target>
        </trans-unit>
        <trans-unit id="ae996f4926172992e41f7ff4c6fd15bfd1a07a32" translate="yes" xml:space="preserve">
          <source>JSON Structure Validation</source>
          <target state="translated">JSON 構造体の検証</target>
        </trans-unit>
        <trans-unit id="3c64683c1678baa0abddae89a309ec4ab85e6462" translate="yes" xml:space="preserve">
          <source>JSON:</source>
          <target state="translated">JSON:</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="a2feefe9afbc3d0f6fec53c2b390d4515e363675" translate="yes" xml:space="preserve">
          <source>Jenkins</source>
          <target state="translated">Jenkins</target>
        </trans-unit>
        <trans-unit id="631d7f60ddebfcd7b3daccfa3282a4123e737f27" translate="yes" xml:space="preserve">
          <source>Jenkins should locate &lt;code&gt;report.html&lt;/code&gt; at &lt;code&gt;tests/_output/&lt;/code&gt;. Now Jenkins will display HTML reports for each build.</source>
          <target state="translated">Jenkinsは、 &lt;code&gt;tests/_output/&lt;/code&gt; で &lt;code&gt;report.html&lt;/code&gt; を見つける必要があります。これで、JenkinsはビルドごとにHTMLレポートを表示します。</target>
        </trans-unit>
        <trans-unit id="6980297998b1f854e915b2a256707673832b0d42" translate="yes" xml:space="preserve">
          <source>Json - actions for validating Json responses (no Xml responses)</source>
          <target state="translated">Json-Json レスポンスを検証するためのアクション (Xml レスポンスなし)</target>
        </trans-unit>
        <trans-unit id="d6893f5ee9a4008dec3a12b20d94cdefd0cd65a3" translate="yes" xml:space="preserve">
          <source>JsonType is used by REST module in &lt;code&gt;seeResponseMatchesJsonType&lt;/code&gt; and &lt;code&gt;dontSeeResponseMatchesJsonType&lt;/code&gt; methods.</source>
          <target state="translated">JsonTypeは、休止モジュールによって使用さ &lt;code&gt;seeResponseMatchesJsonType&lt;/code&gt; と &lt;code&gt;dontSeeResponseMatchesJsonType&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="192c72e841afd1b98437ba5b31c8f015ab79b4ef" translate="yes" xml:space="preserve">
          <source>JsonType matches JSON structures against templates. You can specify the type of fields in JSON or add additional validation rules.</source>
          <target state="translated">JsonType は、JSON 構造体をテンプレートに対してマッチさせます。JSON内のフィールドのタイプを指定したり、追加の検証ルールを追加したりすることができます。</target>
        </trans-unit>
        <trans-unit id="94cc2f6703562b60f42a7b718497cf8d4bc705bc" translate="yes" xml:space="preserve">
          <source>JsonType::__construct()</source>
          <target state="translated">JsonType::__construct()</target>
        </trans-unit>
        <trans-unit id="7273e7faefc50128dd1771de692825774306cf00" translate="yes" xml:space="preserve">
          <source>JsonType::addCustomFilter()</source>
          <target state="translated">JsonType::addCustomFilter()</target>
        </trans-unit>
        <trans-unit id="5d46b01ee4301422864447659ab175e95a128133" translate="yes" xml:space="preserve">
          <source>JsonType::cleanCustomFilters()</source>
          <target state="translated">JsonType::cleanCustomFilters()</target>
        </trans-unit>
        <trans-unit id="02d8ee76d00a88e2bd420672c37fcd9f557abfa4" translate="yes" xml:space="preserve">
          <source>JsonType::matchFilter()</source>
          <target state="translated">JsonType::matchFilter()</target>
        </trans-unit>
        <trans-unit id="deb7809ac902a34c7349f58c7b4e5cbe37a589f3" translate="yes" xml:space="preserve">
          <source>JsonType::matches()</source>
          <target state="translated">JsonType::matches()</target>
        </trans-unit>
        <trans-unit id="5fe54e82e2bad95bb7456dd66958bc913196a4de" translate="yes" xml:space="preserve">
          <source>JsonType::typeComparison()</source>
          <target state="translated">JsonType::typeComparison()</target>
        </trans-unit>
        <trans-unit id="5a03d392c81eb2a2eb5fc6458b6008b323c2b4eb" translate="yes" xml:space="preserve">
          <source>Key-value data in Doctrine-style annotation syntax:</source>
          <target state="translated">Doctrineスタイルの注釈構文のキー値データ。</target>
        </trans-unit>
        <trans-unit id="324176bb854dabab33b8829912a40f3c59fbdb0d" translate="yes" xml:space="preserve">
          <source>Laravel5</source>
          <target state="translated">Laravel5</target>
        </trans-unit>
        <trans-unit id="da469a3ada6bff3d3cd961bb4be5587970ada913" translate="yes" xml:space="preserve">
          <source>Laravel5 module provides the method &lt;code&gt;have&lt;/code&gt; which uses the &lt;a href=&quot;https://laravel.com/docs/5.8/database-testing#generating-factories&quot;&gt;factory&lt;/a&gt; method to generate models with fake data.</source>
          <target state="translated">Laravel5モジュールは、&lt;a href=&quot;https://laravel.com/docs/5.8/database-testing#generating-factories&quot;&gt;ファクトリー&lt;/a&gt;メソッドを使用して、偽のデータを持つモデルを生成するメソッド &lt;code&gt;have&lt;/code&gt; を提供します。</target>
        </trans-unit>
        <trans-unit id="4053dafb22042b3fd4ef61351f1939b17800c904" translate="yes" xml:space="preserve">
          <source>Laravel5::_findElements</source>
          <target state="translated">Laravel5::_findElements</target>
        </trans-unit>
        <trans-unit id="330482a31e0c1caaac3d073c284e94068f9f1314" translate="yes" xml:space="preserve">
          <source>Laravel5::_getResponseContent</source>
          <target state="translated">Laravel5::_getResponseContent</target>
        </trans-unit>
        <trans-unit id="f1c70bb7c06fe461b9e84a8502c6d287d89b0a5b" translate="yes" xml:space="preserve">
          <source>Laravel5::_loadPage</source>
          <target state="translated">Laravel5::_loadPage</target>
        </trans-unit>
        <trans-unit id="d5e4774233e88804cc4d8f8ce81d19640dd5708a" translate="yes" xml:space="preserve">
          <source>Laravel5::_request</source>
          <target state="translated">Laravel5::_request</target>
        </trans-unit>
        <trans-unit id="1bb99bebf21e9e433c2a6c0bdbdd3026f2b2d1a5" translate="yes" xml:space="preserve">
          <source>Laravel5::_savePageSource</source>
          <target state="translated">Laravel5::_savePageSource</target>
        </trans-unit>
        <trans-unit id="b2c59ece3c20dfdb6cdfacfb14d0df6b104b9f61" translate="yes" xml:space="preserve">
          <source>Laravel5::amHttpAuthenticated</source>
          <target state="translated">Laravel5::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="87412cdb52b02eda4eb4851f2ad73c85756209c8" translate="yes" xml:space="preserve">
          <source>Laravel5::amLoggedAs</source>
          <target state="translated">Laravel5::amLoggedAs</target>
        </trans-unit>
        <trans-unit id="2bc3e34eaa3656c170121a5d6450918fd0ec5523" translate="yes" xml:space="preserve">
          <source>Laravel5::amOnAction</source>
          <target state="translated">Laravel5::amOnAction</target>
        </trans-unit>
        <trans-unit id="c41f1982ae4a1bbc82f2859fd0d8d3f63a69c278" translate="yes" xml:space="preserve">
          <source>Laravel5::amOnPage</source>
          <target state="translated">Laravel5::amOnPage</target>
        </trans-unit>
        <trans-unit id="7bc66c27bcaab3c8a319681952e2fe1d47bb340e" translate="yes" xml:space="preserve">
          <source>Laravel5::amOnRoute</source>
          <target state="translated">Laravel5::amOnRoute</target>
        </trans-unit>
        <trans-unit id="6fd9031f60cd89af9402545791d38ad7e1c51a5a" translate="yes" xml:space="preserve">
          <source>Laravel5::attachFile</source>
          <target state="translated">Laravel5::attachFile</target>
        </trans-unit>
        <trans-unit id="5a52a8cc8f0d35d3e60b27781088c8ac69999dff" translate="yes" xml:space="preserve">
          <source>Laravel5::callArtisan</source>
          <target state="translated">Laravel5::callArtisan</target>
        </trans-unit>
        <trans-unit id="311877d18975aabfd2a121d6dc408bc376661b80" translate="yes" xml:space="preserve">
          <source>Laravel5::checkOption</source>
          <target state="translated">Laravel5::checkOption</target>
        </trans-unit>
        <trans-unit id="f47497d700055c1afe07879f8cfc9070a9eed805" translate="yes" xml:space="preserve">
          <source>Laravel5::clearApplicationHandlers</source>
          <target state="translated">Laravel5::clearApplicationHandlers</target>
        </trans-unit>
        <trans-unit id="26a8bd83de1b992f92dfbc6d16e7525a99361ea4" translate="yes" xml:space="preserve">
          <source>Laravel5::click</source>
          <target state="translated">Laravel5::click</target>
        </trans-unit>
        <trans-unit id="7638da6f2ac8494d79b1303782e471950f71d305" translate="yes" xml:space="preserve">
          <source>Laravel5::deleteHeader</source>
          <target state="translated">Laravel5::deleteHeader</target>
        </trans-unit>
        <trans-unit id="dd7bae0df6a859f150486726baf68e9c4b7b6d6c" translate="yes" xml:space="preserve">
          <source>Laravel5::disableEvents</source>
          <target state="translated">Laravel5::disableEvents</target>
        </trans-unit>
        <trans-unit id="c0bf3e5172ac300064026c8840865f29c9661e9f" translate="yes" xml:space="preserve">
          <source>Laravel5::disableExceptionHandling</source>
          <target state="translated">Laravel5::disableExceptionHandling</target>
        </trans-unit>
        <trans-unit id="53d8ef01f13850d799b8e646b5da1037afdf15c9" translate="yes" xml:space="preserve">
          <source>Laravel5::disableMiddleware</source>
          <target state="translated">Laravel5::disableMiddleware</target>
        </trans-unit>
        <trans-unit id="c679ffaeec915e5b39a2172b77f9e78ec1b7813f" translate="yes" xml:space="preserve">
          <source>Laravel5::disableModelEvents</source>
          <target state="translated">Laravel5::disableModelEvents</target>
        </trans-unit>
        <trans-unit id="a9dffecf5535c840a5cccbce480e6d4a5ff5b55a" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSee</source>
          <target state="translated">Laravel5::dontSee</target>
        </trans-unit>
        <trans-unit id="751912fe1e7c1dea56543b6e58ca469382dd4d52" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeAuthentication</source>
          <target state="translated">Laravel5::dontSeeAuthentication</target>
        </trans-unit>
        <trans-unit id="5b4e19a450724d33f16d2decb31c27aa37765533" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeCheckboxIsChecked</source>
          <target state="translated">Laravel5::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="c024612a710c4d8e0a415707300c88ee0fe0c96b" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeCookie</source>
          <target state="translated">Laravel5::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="1b414526de78fa4016f08d7d7e36eb91b2e55bf2" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeCurrentUrlEquals</source>
          <target state="translated">Laravel5::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="72eaee48f5ad6529d9b94126c4849af91ad66b10" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeCurrentUrlMatches</source>
          <target state="translated">Laravel5::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="3baa4a75c869f7ce791abbfa4d45f9050c653a61" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeElement</source>
          <target state="translated">Laravel5::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="c245d0a621bbb4f45e962674bc5453991e40faee" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeEventTriggered</source>
          <target state="translated">Laravel5::dontSeeEventTriggered</target>
        </trans-unit>
        <trans-unit id="085000e9d01ce8aff4aef55e60ad297e34f0ce3a" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeFormErrors</source>
          <target state="translated">Laravel5::dontSeeFormErrors</target>
        </trans-unit>
        <trans-unit id="804f15673b82cc3f1c04941181a68660edd78ed5" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeInCurrentUrl</source>
          <target state="translated">Laravel5::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="0700b2bcb2bf4b86c0d54dc933f859b61c768e65" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeInField</source>
          <target state="translated">Laravel5::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="0e1413b5f665a183922a4fe2ea4cb3692e64f368" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeInFormFields</source>
          <target state="translated">Laravel5::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="150454a0aff786d58943b122bc2c15480f073780" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeInSource</source>
          <target state="translated">Laravel5::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="2d68cc7d7b6848e9b63ba6573989e56183217d00" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeInTitle</source>
          <target state="translated">Laravel5::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="19ae34473934e93cb37b84c8798cac434ba35e0a" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeLink</source>
          <target state="translated">Laravel5::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="1d806ae515e99c775b928dfe0c8f3fbaa761b77b" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeOptionIsSelected</source>
          <target state="translated">Laravel5::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="97f6c8a13a05af1e1c1be50e796535026534aad1" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeRecord</source>
          <target state="translated">Laravel5::dontSeeRecord</target>
        </trans-unit>
        <trans-unit id="9f6222699148a33a76e449ba73a83df4246a7881" translate="yes" xml:space="preserve">
          <source>Laravel5::dontSeeResponseCodeIs</source>
          <target state="translated">Laravel5::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="6ed973e9990d4d2ac3984c9389845529927b4dc8" translate="yes" xml:space="preserve">
          <source>Laravel5::enableExceptionHandling</source>
          <target state="translated">Laravel5::enableExceptionHandling</target>
        </trans-unit>
        <trans-unit id="486336949b3e68fe1d8de4e6f73a79b15f78a4be" translate="yes" xml:space="preserve">
          <source>Laravel5::fillField</source>
          <target state="translated">Laravel5::fillField</target>
        </trans-unit>
        <trans-unit id="2edf05660089edd5b289ceabfe6935ea8535b4d4" translate="yes" xml:space="preserve">
          <source>Laravel5::getApplication</source>
          <target state="translated">Laravel5::getApplication</target>
        </trans-unit>
        <trans-unit id="2fdce61205c957676df97d0abde26660a3cfe6d8" translate="yes" xml:space="preserve">
          <source>Laravel5::grabAttributeFrom</source>
          <target state="translated">Laravel5::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="e074e2b9cc147cb84ece3efc536c4b32ba81ba96" translate="yes" xml:space="preserve">
          <source>Laravel5::grabCookie</source>
          <target state="translated">Laravel5::grabCookie</target>
        </trans-unit>
        <trans-unit id="d5874ccede3cbe3b8570bb13b66dfa9fc60f82ea" translate="yes" xml:space="preserve">
          <source>Laravel5::grabFromCurrentUrl</source>
          <target state="translated">Laravel5::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="c9e5c60240d71c6cbce7c9a1a46ed140bb74315d" translate="yes" xml:space="preserve">
          <source>Laravel5::grabMultiple</source>
          <target state="translated">Laravel5::grabMultiple</target>
        </trans-unit>
        <trans-unit id="7e82040468ec8cd74923584b7cee770c0300d125" translate="yes" xml:space="preserve">
          <source>Laravel5::grabNumRecords</source>
          <target state="translated">Laravel5::grabNumRecords</target>
        </trans-unit>
        <trans-unit id="65279806e6a57ed1094e2b8f7ca89ee5a6187069" translate="yes" xml:space="preserve">
          <source>Laravel5::grabPageSource</source>
          <target state="translated">Laravel5::grabPageSource</target>
        </trans-unit>
        <trans-unit id="34e0000e936ccfa3aff0771d165be0ab0ebc9c25" translate="yes" xml:space="preserve">
          <source>Laravel5::grabRecord</source>
          <target state="translated">Laravel5::grabRecord</target>
        </trans-unit>
        <trans-unit id="f2b71778cc826be21680395dcd4ffa87f92c09da" translate="yes" xml:space="preserve">
          <source>Laravel5::grabService</source>
          <target state="translated">Laravel5::grabService</target>
        </trans-unit>
        <trans-unit id="be5ce9b909295d8c4c385c9958ac32fa64f280cc" translate="yes" xml:space="preserve">
          <source>Laravel5::grabTextFrom</source>
          <target state="translated">Laravel5::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="875a56ef8e4042fbb168bfd29f3835c9b3690141" translate="yes" xml:space="preserve">
          <source>Laravel5::grabValueFrom</source>
          <target state="translated">Laravel5::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="8e0848cadd6a07745ed1a0319d91f2fed62481bb" translate="yes" xml:space="preserve">
          <source>Laravel5::have</source>
          <target state="translated">Laravel5::have</target>
        </trans-unit>
        <trans-unit id="13aa798daac07c9f54c765b0de51c7606906fe17" translate="yes" xml:space="preserve">
          <source>Laravel5::haveApplicationHandler</source>
          <target state="translated">Laravel5::haveApplicationHandler</target>
        </trans-unit>
        <trans-unit id="9b748033693a493559317cad10e7c4aa0493139e" translate="yes" xml:space="preserve">
          <source>Laravel5::haveBinding</source>
          <target state="translated">Laravel5::haveBinding</target>
        </trans-unit>
        <trans-unit id="04b6414e7f35e85e5fb9ce78ea58f95b5478057c" translate="yes" xml:space="preserve">
          <source>Laravel5::haveContextualBinding</source>
          <target state="translated">Laravel5::haveContextualBinding</target>
        </trans-unit>
        <trans-unit id="591b3bf942dd81ef4eed283150bbc18319d34d84" translate="yes" xml:space="preserve">
          <source>Laravel5::haveHttpHeader</source>
          <target state="translated">Laravel5::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="97f5022fd0561f21911fcb44a1fcb97d806832c3" translate="yes" xml:space="preserve">
          <source>Laravel5::haveInstance</source>
          <target state="translated">Laravel5::haveInstance</target>
        </trans-unit>
        <trans-unit id="4550db16f6b01ab9a299a201e85769519c1baf81" translate="yes" xml:space="preserve">
          <source>Laravel5::haveMultiple</source>
          <target state="translated">Laravel5::haveMultiple</target>
        </trans-unit>
        <trans-unit id="7d93621eba2f953a01f343a0ad527d43a8dd1936" translate="yes" xml:space="preserve">
          <source>Laravel5::haveRecord</source>
          <target state="translated">Laravel5::haveRecord</target>
        </trans-unit>
        <trans-unit id="1fa651024261da803906fcb5a83f2db4718c5ea2" translate="yes" xml:space="preserve">
          <source>Laravel5::haveSingleton</source>
          <target state="translated">Laravel5::haveSingleton</target>
        </trans-unit>
        <trans-unit id="fbc1dd2a6511c315f91794aed95a698846b9f614" translate="yes" xml:space="preserve">
          <source>Laravel5::logout</source>
          <target state="translated">Laravel5::logout</target>
        </trans-unit>
        <trans-unit id="3ca3723bb6b23b2c749425e37077c88eb24bff37" translate="yes" xml:space="preserve">
          <source>Laravel5::make</source>
          <target state="translated">Laravel5::make</target>
        </trans-unit>
        <trans-unit id="9f81cf872ae636c1f406350314c5f1782e91c6df" translate="yes" xml:space="preserve">
          <source>Laravel5::makeHtmlSnapshot</source>
          <target state="translated">Laravel5::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="847a1d47cd04c532564c4ca9c609d036453c9703" translate="yes" xml:space="preserve">
          <source>Laravel5::makeMultiple</source>
          <target state="translated">Laravel5::makeMultiple</target>
        </trans-unit>
        <trans-unit id="8fce0f18cc38ea2e81ea3c767ae40177bffaee25" translate="yes" xml:space="preserve">
          <source>Laravel5::moveBack</source>
          <target state="translated">Laravel5::moveBack</target>
        </trans-unit>
        <trans-unit id="618d2be8572e3ac0115079d8537a34372ae13af6" translate="yes" xml:space="preserve">
          <source>Laravel5::resetCookie</source>
          <target state="translated">Laravel5::resetCookie</target>
        </trans-unit>
        <trans-unit id="f303c3cbac7a00f340d4305ec1c8f7a2f8087e86" translate="yes" xml:space="preserve">
          <source>Laravel5::see</source>
          <target state="translated">Laravel5::see</target>
        </trans-unit>
        <trans-unit id="151e9de88a312d9fa322e4717d9b61c7c5df0ec5" translate="yes" xml:space="preserve">
          <source>Laravel5::seeAuthentication</source>
          <target state="translated">Laravel5::seeAuthentication</target>
        </trans-unit>
        <trans-unit id="86f221100cd9f996d2e5b4ff36b1e4f2fb6e71e3" translate="yes" xml:space="preserve">
          <source>Laravel5::seeCheckboxIsChecked</source>
          <target state="translated">Laravel5::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="cb3937f66016021f1f343f9aeab87b10c654bf66" translate="yes" xml:space="preserve">
          <source>Laravel5::seeCookie</source>
          <target state="translated">Laravel5::seeCookie</target>
        </trans-unit>
        <trans-unit id="a8b391dd13801b662fcb9afb58dc296e4905055f" translate="yes" xml:space="preserve">
          <source>Laravel5::seeCurrentActionIs</source>
          <target state="translated">Laravel5::seeCurrentActionIs</target>
        </trans-unit>
        <trans-unit id="c242b5e98fc31e9eea67f4b2e4f602c525ce3918" translate="yes" xml:space="preserve">
          <source>Laravel5::seeCurrentRouteIs</source>
          <target state="translated">Laravel5::seeCurrentRouteIs</target>
        </trans-unit>
        <trans-unit id="f95fb93f7fab13617c9338217b68eea5290455b5" translate="yes" xml:space="preserve">
          <source>Laravel5::seeCurrentUrlEquals</source>
          <target state="translated">Laravel5::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="71379f7aec423fc153432dbff143052665007c26" translate="yes" xml:space="preserve">
          <source>Laravel5::seeCurrentUrlMatches</source>
          <target state="translated">Laravel5::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="bceaa65e6f455efd4aefca4427b0d733018c8630" translate="yes" xml:space="preserve">
          <source>Laravel5::seeElement</source>
          <target state="translated">Laravel5::seeElement</target>
        </trans-unit>
        <trans-unit id="c0402a68389376965c74d4f78528ee3e0d947f95" translate="yes" xml:space="preserve">
          <source>Laravel5::seeEventTriggered</source>
          <target state="translated">Laravel5::seeEventTriggered</target>
        </trans-unit>
        <trans-unit id="5f20cdef3a9427889b9161c20fe6e285177a90a6" translate="yes" xml:space="preserve">
          <source>Laravel5::seeFormErrorMessage</source>
          <target state="translated">Laravel5::seeFormErrorMessage</target>
        </trans-unit>
        <trans-unit id="74645df912a785829f34383c841a8c872db6895d" translate="yes" xml:space="preserve">
          <source>Laravel5::seeFormErrorMessages</source>
          <target state="translated">Laravel5::seeFormErrorMessages</target>
        </trans-unit>
        <trans-unit id="0e409f7a260d63a77b35c9fc163f1574374af744" translate="yes" xml:space="preserve">
          <source>Laravel5::seeFormHasErrors</source>
          <target state="translated">Laravel5::seeFormHasErrors</target>
        </trans-unit>
        <trans-unit id="1d47cda124da0f2ca7dd56390b8d38aa9aaa7f36" translate="yes" xml:space="preserve">
          <source>Laravel5::seeInCurrentUrl</source>
          <target state="translated">Laravel5::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="ae884ec6098189a139b84e7c470590bb4f2cea06" translate="yes" xml:space="preserve">
          <source>Laravel5::seeInField</source>
          <target state="translated">Laravel5::seeInField</target>
        </trans-unit>
        <trans-unit id="cd2e61695ad2fc1b73811dd3ae7b4a90bb01adc7" translate="yes" xml:space="preserve">
          <source>Laravel5::seeInFormFields</source>
          <target state="translated">Laravel5::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="dc1166daa637561b6082b35354d51fa7ee7fb8b0" translate="yes" xml:space="preserve">
          <source>Laravel5::seeInSession</source>
          <target state="translated">Laravel5::seeInSession</target>
        </trans-unit>
        <trans-unit id="1bb762464aeff548f701d6e8b49ea11ad4e0b757" translate="yes" xml:space="preserve">
          <source>Laravel5::seeInSource</source>
          <target state="translated">Laravel5::seeInSource</target>
        </trans-unit>
        <trans-unit id="49d9612f571ccc810dba8dacb992325972247b6d" translate="yes" xml:space="preserve">
          <source>Laravel5::seeInTitle</source>
          <target state="translated">Laravel5::seeInTitle</target>
        </trans-unit>
        <trans-unit id="5ce66f24acbc5de43dcea83dc1824599a5f70f41" translate="yes" xml:space="preserve">
          <source>Laravel5::seeLink</source>
          <target state="translated">Laravel5::seeLink</target>
        </trans-unit>
        <trans-unit id="7f4e33cfa742df44fcd04d75658aa2f41e402066" translate="yes" xml:space="preserve">
          <source>Laravel5::seeNumRecords</source>
          <target state="translated">Laravel5::seeNumRecords</target>
        </trans-unit>
        <trans-unit id="3e754d6cc470aa2b120e7a194a71e15768e9f8a6" translate="yes" xml:space="preserve">
          <source>Laravel5::seeNumberOfElements</source>
          <target state="translated">Laravel5::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="86638892b5e9b263506d866020b3b97070bfd65e" translate="yes" xml:space="preserve">
          <source>Laravel5::seeOptionIsSelected</source>
          <target state="translated">Laravel5::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="1a9d1ad2765a0e0990f9be21703a0c2eba88e6a8" translate="yes" xml:space="preserve">
          <source>Laravel5::seePageNotFound</source>
          <target state="translated">Laravel5::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="c1de3d60aed09876cc05b384b9bb940960f79191" translate="yes" xml:space="preserve">
          <source>Laravel5::seeRecord</source>
          <target state="translated">Laravel5::seeRecord</target>
        </trans-unit>
        <trans-unit id="4f24fb6d6859062314596f4516d50a6e45450cf0" translate="yes" xml:space="preserve">
          <source>Laravel5::seeResponseCodeIs</source>
          <target state="translated">Laravel5::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="4d80a79ae04859dbfa4a2ff811526ad9f8e37220" translate="yes" xml:space="preserve">
          <source>Laravel5::seeResponseCodeIsBetween</source>
          <target state="translated">Laravel5::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="6b34375f35d30ab40b81c29873662f7e30509bb7" translate="yes" xml:space="preserve">
          <source>Laravel5::seeResponseCodeIsClientError</source>
          <target state="translated">Laravel5::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="2330361ddda6a948992f9d9c8dcf706a06dfa57e" translate="yes" xml:space="preserve">
          <source>Laravel5::seeResponseCodeIsRedirection</source>
          <target state="translated">Laravel5::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="96e98c3cda296dcbb13060af309632eea55056f6" translate="yes" xml:space="preserve">
          <source>Laravel5::seeResponseCodeIsServerError</source>
          <target state="translated">Laravel5::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="2333be0ebb91bceea1181b9ebd3539c5a7d33655" translate="yes" xml:space="preserve">
          <source>Laravel5::seeResponseCodeIsSuccessful</source>
          <target state="translated">Laravel5::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="771535d74dfb839cfbf262b7b7b323795404db5b" translate="yes" xml:space="preserve">
          <source>Laravel5::seeSessionHasValues</source>
          <target state="translated">Laravel5::seeSessionHasValues</target>
        </trans-unit>
        <trans-unit id="be2656c26b817308121ad34d9eeadc3f7d99ea1e" translate="yes" xml:space="preserve">
          <source>Laravel5::selectOption</source>
          <target state="translated">Laravel5::selectOption</target>
        </trans-unit>
        <trans-unit id="569903273c35d4ac56559c56a026e25d3bf210ba" translate="yes" xml:space="preserve">
          <source>Laravel5::sendAjaxGetRequest</source>
          <target state="translated">Laravel5::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="ebd20ac2cb03c184d8ae106adba37cdc0c45df99" translate="yes" xml:space="preserve">
          <source>Laravel5::sendAjaxPostRequest</source>
          <target state="translated">Laravel5::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="0a355f78c0c1490b5cab17c7b2f3c85b02a49fe9" translate="yes" xml:space="preserve">
          <source>Laravel5::sendAjaxRequest</source>
          <target state="translated">Laravel5::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="1cd943cea77e4b4ec18e5250fa26a7e1b31fe610" translate="yes" xml:space="preserve">
          <source>Laravel5::setApplication</source>
          <target state="translated">Laravel5::setApplication</target>
        </trans-unit>
        <trans-unit id="43fa2739b4f31535c1030559c57ffe36f7cd98b5" translate="yes" xml:space="preserve">
          <source>Laravel5::setCookie</source>
          <target state="translated">Laravel5::setCookie</target>
        </trans-unit>
        <trans-unit id="ecfc1fdcc79b4ca426e06910ea062c29ccdb71db" translate="yes" xml:space="preserve">
          <source>Laravel5::submitForm</source>
          <target state="translated">Laravel5::submitForm</target>
        </trans-unit>
        <trans-unit id="60077c264cc49d53e08f3c1e1493cb952a9cc971" translate="yes" xml:space="preserve">
          <source>Laravel5::switchToIframe</source>
          <target state="translated">Laravel5::switchToIframe</target>
        </trans-unit>
        <trans-unit id="1687f1a03a30d34de668306f686e627b8431dffb" translate="yes" xml:space="preserve">
          <source>Laravel5::uncheckOption</source>
          <target state="translated">Laravel5::uncheckOption</target>
        </trans-unit>
        <trans-unit id="3fe0a0ccf95cfdf33814e428e0b0f635c64055dd" translate="yes" xml:space="preserve">
          <source>Launch ChromeDriver: &lt;code&gt;chromedriver --url-base=/wd/hub&lt;/code&gt;</source>
          <target state="translated">ChromeDriverを起動します： &lt;code&gt;chromedriver --url-base=/wd/hub&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18f8121d3662ff8c225d855bf3a445f6d8a2dcf5" translate="yes" xml:space="preserve">
          <source>Launch GeckoDriver: &lt;code&gt;geckodriver&lt;/code&gt;</source>
          <target state="translated">GeckoDriverを起動します： &lt;code&gt;geckodriver&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f356a61bddfde6d1a8b6b88010fe89cd9193e78" translate="yes" xml:space="preserve">
          <source>Launch Selenium Server before executing tests.</source>
          <target state="translated">テストを実行する前に Selenium Server を起動します。</target>
        </trans-unit>
        <trans-unit id="f83ada8433da4eeaf587e1eb3f4f606bb064e614" translate="yes" xml:space="preserve">
          <source>Launch the Selenium Server: &lt;code&gt;java -jar selenium-server-standalone-3.xx.xxx.jar&lt;/code&gt;. To locate Chromedriver binary use &lt;code&gt;-Dwebdriver.chrome.driver=./chromedriver&lt;/code&gt; option. For Geckodriver use &lt;code&gt;-Dwebdriver.gecko.driver=./geckodriver&lt;/code&gt;.</source>
          <target state="translated">Selenium Serverを起動します： &lt;code&gt;java -jar selenium-server-standalone-3.xx.xxx.jar&lt;/code&gt; 。Chromedriverバイナリを見つけるには、 &lt;code&gt;-Dwebdriver.chrome.driver=./chromedriver&lt;/code&gt; オプションを使用します。Geckodriverの場合は、 &lt;code&gt;-Dwebdriver.gecko.driver=./geckodriver&lt;/code&gt; geckodriverを使用します。</target>
        </trans-unit>
        <trans-unit id="d4a62777066c43777f63a85a31a6eb5c86c3181d" translate="yes" xml:space="preserve">
          <source>Learn more about the &lt;a href=&quot;07-advancedusage#Cest-Classes&quot;&gt;Cest format&lt;/a&gt; in the Advanced Testing section.</source>
          <target state="translated">高度なテストのセクションで&lt;a href=&quot;07-advancedusage#Cest-Classes&quot;&gt;Cest形式の&lt;/a&gt;詳細をご覧ください。</target>
        </trans-unit>
        <trans-unit id="33c3e4edfbfa5d0d273e9625f93869d4f1ade519" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s check that list of categories on a page is the same it was before.</source>
          <target state="translated">ページ上のカテゴリのリストが以前と同じであることを確認しましょう。</target>
        </trans-unit>
        <trans-unit id="e202766efad640072521358323e929ac4d9ac53e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s configure &lt;code&gt;SOAP&lt;/code&gt; module to be used with &lt;code&gt;PhpBrowser&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;PhpBrowser&lt;/code&gt; で使用する &lt;code&gt;SOAP&lt;/code&gt; モジュールを構成しましょう。</target>
        </trans-unit>
        <trans-unit id="02ca92d4b7041a809f31d9c2b0c906481f2c6e94" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s define a &lt;code&gt;login&lt;/code&gt; method in this class:</source>
          <target state="translated">このクラスで &lt;code&gt;login&lt;/code&gt; メソッドを定義しましょう：</target>
        </trans-unit>
        <trans-unit id="30a85c5b5b51d02abea1f794f79ef5fbeb123882" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s demonstrate the usage of environments for the browsers case.</source>
          <target state="translated">ブラウザーの場合の環境の使用法を示しましょう。</target>
        </trans-unit>
        <trans-unit id="b1b028d38c91b82d9cc73771f195fb15a44004f2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s get some detailed output:</source>
          <target state="translated">いくつかの詳細な出力を取得しましょう：</target>
        </trans-unit>
        <trans-unit id="878407c24b4ad3df71c3d2f821345cb63eb673b9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s imagine that we are writing a module that reconnects to a database. It&amp;rsquo;s supposed to use the dbh connection value from the Db module.</source>
          <target state="translated">データベースに再接続するモジュールを書いているとしましょう。Dbモジュールからのdbh接続値を使用することになっています。</target>
        </trans-unit>
        <trans-unit id="16a884ab05ad7ad9d68bac6f3a1fbdd1aa7fa81f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s improve our BDD suite by using the advanced features of Gherkin language.</source>
          <target state="translated">Gherkin言語の高度な機能を使用して、BDDスイートを改善しましょう。</target>
        </trans-unit>
        <trans-unit id="9ee851729b001b743193167717b10c515b46c754" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s improve the code of our &lt;code&gt;login&lt;/code&gt; method, executing the form submission only once and restoring the session from cookies for each subsequent login function call:</source>
          <target state="translated">&lt;code&gt;login&lt;/code&gt; メソッドのコードを改善して、フォーム送信を1回だけ実行し、後続の各ログイン関数呼び出しのcookieからセッションを復元します。</target>
        </trans-unit>
        <trans-unit id="8f0ffc470824de31171320d257b5b8cd6d4caf34" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s learn some more about Gherkin format and then we will see how to execute it with Codeception:</source>
          <target state="translated">Gherkinフォーマットについてさらに学びましょう。それから、Codeceptionでそれを実行する方法を見ていきます。</target>
        </trans-unit>
        <trans-unit id="1eafe26f753ec96409a02e207527114a8c69d1d2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at the following test:</source>
          <target state="translated">次のテストを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="32ca15d1c64f1f899f7541427e4f512e0464c04d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s prepare group files:</source>
          <target state="translated">グループファイルを準備しましょう：</target>
        </trans-unit>
        <trans-unit id="2532f9ad3321989b48caedaf4363d71008d8212a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s review those three testing types in reverse order.</source>
          <target state="translated">これら3つのテストタイプを逆の順序で確認してみましょう。</target>
        </trans-unit>
        <trans-unit id="7e8062c25cbd4a1a71098e9eb58cfeaec0ce6bf0" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say the first test you would want to run, would be signing in. In order to write such a test, we still require basic knowledge of PHP and HTML:</source>
          <target state="translated">サインインする最初のテストを実行するとします。このようなテストを作成するには、PHPとHTMLの基本的な知識が必要です。</target>
        </trans-unit>
        <trans-unit id="5f03f512314bd10426deedc5b593bc58c03d9e15" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we want to specify credentials for a cloud testing service. We have loaded &lt;code&gt;SAUCE_USER&lt;/code&gt; and &lt;code&gt;SAUCE_KEY&lt;/code&gt; variables from environment, and now we are passing their values into config of &lt;code&gt;WebDriver&lt;/code&gt;:</source>
          <target state="translated">クラウドテストサービスの認証情報を指定するとします。私たちは、ロードされている &lt;code&gt;SAUCE_USER&lt;/code&gt; と &lt;code&gt;SAUCE_KEY&lt;/code&gt; 環境からの変数を、そして今、私たちはの設定にその値を渡してい &lt;code&gt;WebDriver&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c65638df2fca932fae09c70d8f66a75542c5fc7f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see how common problems of acceptance testing can be solved with Codeception.</source>
          <target state="translated">Codeceptionを使用して、受け入れテストの一般的な問題をどのように解決できるかを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="73f23286f561d2dea2e877e49ac43a10e2a5478c" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see how you can do some database testing:</source>
          <target state="translated">データベーステストを実行する方法を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="39340c9002ba0d7eeffaf8cbfdfd364118e48c0f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see what the test consist of.</source>
          <target state="translated">テストが何で構成されているか見てみましょう。</target>
        </trans-unit>
        <trans-unit id="996f45115e736fe5c7198d0eab0fc6147fb548f7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s submit this sample form inside the Codeception test:</source>
          <target state="translated">Codeceptionテスト内でこのサンプルフォームを送信してみましょう。</target>
        </trans-unit>
        <trans-unit id="2c50b40f39bbd729c6e1aa258f7210efbcfdfb33" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a look at Codeception&amp;rsquo;s architecture. We&amp;rsquo;ll assume that you have already &lt;a href=&quot;https://codeception.com/install&quot;&gt;installed&lt;/a&gt; it and bootstrapped your first test suites. Codeception has generated three of them: unit, functional, and acceptance. They are well described in the &lt;a href=&quot;01-introduction&quot;&gt;previous chapter&lt;/a&gt;. Inside your &lt;strong&gt;/tests&lt;/strong&gt; folder you will have three &lt;code&gt;.yml&lt;/code&gt; config files and three directories with names corresponding to these suites: &lt;code&gt;unit&lt;/code&gt;, &lt;code&gt;functional&lt;/code&gt;, &lt;code&gt;acceptance&lt;/code&gt;. Suites are independent groups of tests with a common purpose.</source>
          <target state="translated">Codeceptionのアーキテクチャを見てみましょう。すでに&lt;a href=&quot;https://codeception.com/install&quot;&gt;インストールし&lt;/a&gt;ており、最初のテストスイートをブートストラップしているものとします。Codeceptionはそれらの3つを生成しました：ユニット、機能、および受け入れ。これらについては、&lt;a href=&quot;01-introduction&quot;&gt;前の章で詳しく&lt;/a&gt;説明しています。あなたの内部&lt;strong&gt;/テスト&lt;/strong&gt;あなたのフォルダは3つのになります &lt;code&gt;.yml&lt;/code&gt; ：設定ファイルとこれらのスイートに対応する名前を持つ3つのディレクトリ &lt;code&gt;unit&lt;/code&gt; 、 &lt;code&gt;functional&lt;/code&gt; 、 &lt;code&gt;acceptance&lt;/code&gt; 。スイートは、共通の目的を持つ独立したテストグループです。</target>
        </trans-unit>
        <trans-unit id="cf1901f6a374681643a18ebdea252a5b60817065" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try to execute tests from the second group:</source>
          <target state="translated">2番目のグループのテストを実行してみましょう。</target>
        </trans-unit>
        <trans-unit id="ae752dd4dc22f5f0596e3dadd9c8d6da26121a61" translate="yes" xml:space="preserve">
          <source>Lets create an Admin StepObject with the generator:</source>
          <target state="translated">ジェネレーターを使ってAdmin StepObjectを作成してみましょう。</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">MITライセンスに基づいてライセンスされています。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="5f0b926a535bbbed3953351face2e36e095aee00" translate="yes" xml:space="preserve">
          <source>List of actions can be pragmatically build using &lt;code&gt;Codeception\Util\ActionSequence&lt;/code&gt;:</source>
          <target state="translated">アクションのリストは、 &lt;code&gt;Codeception\Util\ActionSequence&lt;/code&gt; を使用して実用的に構築できます。</target>
        </trans-unit>
        <trans-unit id="e527ddf44648f7621a1ac14417065b4df05f0a66" translate="yes" xml:space="preserve">
          <source>List of actions can be pragmatically built using &lt;code&gt;Codeception\Util\ActionSequence&lt;/code&gt;:</source>
          <target state="translated">アクションのリストは、 &lt;code&gt;Codeception\Util\ActionSequence&lt;/code&gt; を使用して実用的に構築できます。</target>
        </trans-unit>
        <trans-unit id="74b191783c55328e54df8c2b70eade29739ba980" translate="yes" xml:space="preserve">
          <source>List of available step decorators:</source>
          <target state="translated">使用可能なステップデコレーターの一覧です。</target>
        </trans-unit>
        <trans-unit id="4dbd5d2f07e3c8ccf5ce9acad2ee45bfd7f7e693" translate="yes" xml:space="preserve">
          <source>Load config:</source>
          <target state="translated">設定をロードします。</target>
        </trans-unit>
        <trans-unit id="bcce856098cd66b85fa284dd8c7a85e9ae4aa780" translate="yes" xml:space="preserve">
          <source>Load the mapped file for a namespace prefix and relative class.</source>
          <target state="translated">名前空間の接頭辞と相対クラスのマッピングファイルをロードします。</target>
        </trans-unit>
        <trans-unit id="5f3db34c40d5cf04dc215769df3cf89a83136a1c" translate="yes" xml:space="preserve">
          <source>Loading Parts from other Modules</source>
          <target state="translated">他のモジュールからのパーツの読み込み</target>
        </trans-unit>
        <trans-unit id="61f2e33d8c9ef57a710758fbf4a00c8a64ad685d" translate="yes" xml:space="preserve">
          <source>Loads cookies from a saved snapshot. Allows to reuse same session across tests without additional login.</source>
          <target state="translated">保存されたスナップショットからクッキーを読み込みます。追加のログインなしでテスト全体で同じセッションを再利用できるようにします。</target>
        </trans-unit>
        <trans-unit id="31f70f1bae0fc9316e1cb495f8e29fd4209ae37c" translate="yes" xml:space="preserve">
          <source>Loads current RemoteWebDriver instance as a session</source>
          <target state="translated">現在のRemoteWebDriverインスタンスをセッションとして読み込みます</target>
        </trans-unit>
        <trans-unit id="cbb3e8c118803eed60c20f01b6ad6a6164edb1a9" translate="yes" xml:space="preserve">
          <source>Loads fixtures. Fixture can be specified as a fully qualified class name, an instance, or an array of class names/instances.</source>
          <target state="translated">フィクスチャをロードします。フィクスチャは、完全修飾されたクラス名、インスタンス、あるいはクラス名/インスタンスの配列として指定することができます。</target>
        </trans-unit>
        <trans-unit id="be5604880931157f453bb6c2229f7e79a29b99bf" translate="yes" xml:space="preserve">
          <source>Local CodeCoverage</source>
          <target state="translated">ローカルコードカバレッジ</target>
        </trans-unit>
        <trans-unit id="e1aa85e217b4f350529024f7047d09a2ac38ca32" translate="yes" xml:space="preserve">
          <source>Local Server</source>
          <target state="translated">ローカルサーバ</target>
        </trans-unit>
        <trans-unit id="31cb8df70795dc6975e8b7fedac942719c8f7c62" translate="yes" xml:space="preserve">
          <source>Local Setup</source>
          <target state="translated">ローカル設定</target>
        </trans-unit>
        <trans-unit id="260489f91ae2259463a2e16a4e6a6151de9881ff" translate="yes" xml:space="preserve">
          <source>Local Testing</source>
          <target state="translated">ローカルテスト</target>
        </trans-unit>
        <trans-unit id="e93141d83b8039749e1ed013e1831599e1264246" translate="yes" xml:space="preserve">
          <source>Locally</source>
          <target state="translated">Locally</target>
        </trans-unit>
        <trans-unit id="c06d249a6048853b5ea7f16010949a28901741ca" translate="yes" xml:space="preserve">
          <source>Locates a clickable element.</source>
          <target state="translated">クリック可能な要素を探します。</target>
        </trans-unit>
        <trans-unit id="22d7bbcb7a5e0a3d08178fb18f1ca7a2d9096828" translate="yes" xml:space="preserve">
          <source>Locates an element containing a text inside. Either CSS or XPath locator can be passed, however they will be converted to XPath.</source>
          <target state="translated">内部にテキストを含む要素を探します。CSSまたはXPathロケータを渡すことができますが、それらはXPathに変換されます。</target>
        </trans-unit>
        <trans-unit id="f658fa3d3422f55a3a504083b14b204e671c9bd2" translate="yes" xml:space="preserve">
          <source>Locates element at position. Either CSS or XPath locator can be passed as locator, position is an integer. If a negative value is provided, counting starts from the last element. First element has index 1</source>
          <target state="translated">要素の位置を指定します。ロケータにはCSSかXPathのどちらかを渡すことができます。負の値を指定した場合は、最後の要素からカウントを開始します。最初の要素はインデックス 1</target>
        </trans-unit>
        <trans-unit id="aa85eb7a0f28d7c6874f0a0369ea4c83750b0adf" translate="yes" xml:space="preserve">
          <source>Locates element using available Codeception locator types:</source>
          <target state="translated">利用可能な Codeception ロケータタイプを使用して要素を検索します。</target>
        </trans-unit>
        <trans-unit id="ee3726c35dc9be31d48a01271cf3cdc589ad14e3" translate="yes" xml:space="preserve">
          <source>Locates first element of group elements. Either CSS or XPath locator can be passed as locator, Equal to &lt;code&gt;Locator::elementAt($locator, 1)&lt;/code&gt;</source>
          <target state="translated">グループ要素の最初の要素を見つけます。CSSまたはXPathロケーターのいずれかをロケーターとして渡すことができます &lt;code&gt;Locator::elementAt($locator, 1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b6baac89f5dfcb3c5a3c73d674640aef4d19090" translate="yes" xml:space="preserve">
          <source>Locates last element of group elements. Either CSS or XPath locator can be passed as locator, Equal to &lt;code&gt;Locator::elementAt($locator, -1)&lt;/code&gt;</source>
          <target state="translated">グループ要素の最後の要素を見つけます。CSSまたはXPathロケーターのどちらかをロケーターとして渡すことができます &lt;code&gt;Locator::elementAt($locator, -1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62665d7c3d6cf04792e337332587e03f16094f05" translate="yes" xml:space="preserve">
          <source>Locating Elements</source>
          <target state="translated">要素の配置</target>
        </trans-unit>
        <trans-unit id="9aa2a27df26d5d7d3412a8db6e1a20d3015ce012" translate="yes" xml:space="preserve">
          <source>Locator::combine()</source>
          <target state="translated">Locator::combine()</target>
        </trans-unit>
        <trans-unit id="a3af3fd103cea9434c885a08b36af3fad9764fe7" translate="yes" xml:space="preserve">
          <source>Locator::contains()</source>
          <target state="translated">Locator::contains()</target>
        </trans-unit>
        <trans-unit id="ddd0ddcc56dde41fa9dbc58e83ea295f166ab745" translate="yes" xml:space="preserve">
          <source>Locator::elementAt()</source>
          <target state="translated">Locator::elementAt()</target>
        </trans-unit>
        <trans-unit id="2e4c52adbc26bd81fc1e41f76ea86a8acea8a35e" translate="yes" xml:space="preserve">
          <source>Locator::find()</source>
          <target state="translated">Locator::find()</target>
        </trans-unit>
        <trans-unit id="ea67e41c6222c19f209c4dea91563e4ca65ec17b" translate="yes" xml:space="preserve">
          <source>Locator::firstElement()</source>
          <target state="translated">Locator::firstElement()</target>
        </trans-unit>
        <trans-unit id="ae9db508eab9fbebfb8a7477ff5b309f9d32b234" translate="yes" xml:space="preserve">
          <source>Locator::href()</source>
          <target state="translated">Locator::href()</target>
        </trans-unit>
        <trans-unit id="adf1f079e490f04e53a72ec470d8b98bb911cc76" translate="yes" xml:space="preserve">
          <source>Locator::humanReadableString()</source>
          <target state="translated">Locator::humanReadableString()</target>
        </trans-unit>
        <trans-unit id="cd6441827b0d485b3fa28c8c7c47969e27d671b2" translate="yes" xml:space="preserve">
          <source>Locator::isCSS()</source>
          <target state="translated">Locator::isCSS()</target>
        </trans-unit>
        <trans-unit id="511e9bb5a5916b2cf80ac913c831bb8303ba5549" translate="yes" xml:space="preserve">
          <source>Locator::isClass()</source>
          <target state="translated">Locator::isClass()</target>
        </trans-unit>
        <trans-unit id="48f1461580610cda9bfbe4854c79de35c8f5d756" translate="yes" xml:space="preserve">
          <source>Locator::isID()</source>
          <target state="translated">Locator::isID()</target>
        </trans-unit>
        <trans-unit id="d4299abd39d0c9090352d332c898040eaae7277c" translate="yes" xml:space="preserve">
          <source>Locator::isPrecise()</source>
          <target state="translated">Locator::isPrecise()</target>
        </trans-unit>
        <trans-unit id="a9b703444cb8f026126d2d02e55fd64903808db7" translate="yes" xml:space="preserve">
          <source>Locator::isXPath()</source>
          <target state="translated">Locator::isXPath()</target>
        </trans-unit>
        <trans-unit id="5afc0d269ce1ce697d4721f420a9ef968b20fe65" translate="yes" xml:space="preserve">
          <source>Locator::lastElement()</source>
          <target state="translated">Locator::lastElement()</target>
        </trans-unit>
        <trans-unit id="04dd2cbc459270e702a7e22161d4e5ab6c2d3234" translate="yes" xml:space="preserve">
          <source>Locator::option()</source>
          <target state="translated">Locator::option()</target>
        </trans-unit>
        <trans-unit id="745bc3675f8438841d553609975bb6dbc77c384f" translate="yes" xml:space="preserve">
          <source>Locator::tabIndex()</source>
          <target state="translated">Locator::tabIndex()</target>
        </trans-unit>
        <trans-unit id="267e22a922d3f822cf065e40b7224edd1c824844" translate="yes" xml:space="preserve">
          <source>Locator::toXPath()</source>
          <target state="translated">Locator::toXPath()</target>
        </trans-unit>
        <trans-unit id="4e5a2893bdcc7d239c1db72e4c4ffbe4bea73174" translate="yes" xml:space="preserve">
          <source>Login</source>
          <target state="translated">Login</target>
        </trans-unit>
        <trans-unit id="172bcde8b42b97f2b032693196ff59002a0a0c4d" translate="yes" xml:space="preserve">
          <source>Logout user.</source>
          <target state="translated">ログアウトしたユーザー。</target>
        </trans-unit>
        <trans-unit id="53175b2a8d1b033f3db0420d2b1a8986898a95fc" translate="yes" xml:space="preserve">
          <source>Long Strings</source>
          <target state="translated">ロングストリングス</target>
        </trans-unit>
        <trans-unit id="a124947cbd2d1d92b47e027274c3269ff0c7a84b" translate="yes" xml:space="preserve">
          <source>Low</source>
          <target state="translated">Low</target>
        </trans-unit>
        <trans-unit id="c24d8c91e4b993634644200b6481f270026cebeb" translate="yes" xml:space="preserve">
          <source>Low-level API method. If Codeception commands are not enough, this allows you to use Selenium WebDriver methods directly:</source>
          <target state="translated">低レベルのAPIメソッド。Codeceptionコマンドだけでは物足りない場合、これを使うことでSelenium WebDriverのメソッドを直接使うことができます。</target>
        </trans-unit>
        <trans-unit id="858635bce7bc92bcf12444faa8732054d71c0dca" translate="yes" xml:space="preserve">
          <source>Low-level API method. If Codeception commands are not enough, use &lt;a href=&quot;http://guzzlephp.org/&quot;&gt;Guzzle HTTP Client&lt;/a&gt; methods directly</source>
          <target state="translated">低レベルAPIメソッド。Codeceptionコマンドでは不十分な場合は、&lt;a href=&quot;http://guzzlephp.org/&quot;&gt;Guzzle HTTPクライアント&lt;/a&gt;メソッドを直接使用してください</target>
        </trans-unit>
        <trans-unit id="8f674c15ca6409df4015589962b141d5ca0ca649" translate="yes" xml:space="preserve">
          <source>Lumen</source>
          <target state="translated">Lumen</target>
        </trans-unit>
        <trans-unit id="daa6ccfdb38357af8fae0708c8d6f95903c74632" translate="yes" xml:space="preserve">
          <source>Lumen::_findElements</source>
          <target state="translated">Lumen::_findElements</target>
        </trans-unit>
        <trans-unit id="f45eeaa41a7f8f7bbf8f8873649e28c5be3a64ef" translate="yes" xml:space="preserve">
          <source>Lumen::_getResponseContent</source>
          <target state="translated">Lumen::_getResponseContent</target>
        </trans-unit>
        <trans-unit id="69d6f29c7a01f8db1484415ed4f2e8928383194d" translate="yes" xml:space="preserve">
          <source>Lumen::_loadPage</source>
          <target state="translated">Lumen::_loadPage</target>
        </trans-unit>
        <trans-unit id="d10b313e7c5e0060302d84c049bbe6c2a39fb096" translate="yes" xml:space="preserve">
          <source>Lumen::_request</source>
          <target state="translated">Lumen::_request</target>
        </trans-unit>
        <trans-unit id="61e6ffe798c9bea033822fa893b1bebe12f679d9" translate="yes" xml:space="preserve">
          <source>Lumen::_savePageSource</source>
          <target state="translated">Lumen::_savePageSource</target>
        </trans-unit>
        <trans-unit id="8de2ff763ff5448c3f83bdb080793aa0c4f99977" translate="yes" xml:space="preserve">
          <source>Lumen::amHttpAuthenticated</source>
          <target state="translated">Lumen::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="20a53d84ef0538979f1aceb87cde838769d1a7ca" translate="yes" xml:space="preserve">
          <source>Lumen::amLoggedAs</source>
          <target state="translated">Lumen::amLoggedAs</target>
        </trans-unit>
        <trans-unit id="78a736555c4e83ddde13f1cfc6ea2a3bd73cb1b0" translate="yes" xml:space="preserve">
          <source>Lumen::amOnPage</source>
          <target state="translated">Lumen::amOnPage</target>
        </trans-unit>
        <trans-unit id="15bb008d57c1cd27c0e3cf023cf76b13ffb1a0df" translate="yes" xml:space="preserve">
          <source>Lumen::amOnRoute</source>
          <target state="translated">Lumen::amOnRoute</target>
        </trans-unit>
        <trans-unit id="ed88b6e9cfe31a661a2e0ee29375736235cc99a1" translate="yes" xml:space="preserve">
          <source>Lumen::attachFile</source>
          <target state="translated">Lumen::attachFile</target>
        </trans-unit>
        <trans-unit id="f2c2b16f2e53850aeb63d2fe2154381547310d12" translate="yes" xml:space="preserve">
          <source>Lumen::checkOption</source>
          <target state="translated">Lumen::checkOption</target>
        </trans-unit>
        <trans-unit id="a072fcfad2075c9df38131a4363ee9047720d3ab" translate="yes" xml:space="preserve">
          <source>Lumen::clearApplicationHandlers</source>
          <target state="translated">Lumen::clearApplicationHandlers</target>
        </trans-unit>
        <trans-unit id="8fdb33db14bea2b1ed7f0ad36efc1ed08dd53c0b" translate="yes" xml:space="preserve">
          <source>Lumen::click</source>
          <target state="translated">Lumen::click</target>
        </trans-unit>
        <trans-unit id="8328f5ca6884db066f44a38e33a25496931b753e" translate="yes" xml:space="preserve">
          <source>Lumen::deleteHeader</source>
          <target state="translated">Lumen::deleteHeader</target>
        </trans-unit>
        <trans-unit id="6c4ed12b23783e1fdd5d3a7355ebc8935684e3fb" translate="yes" xml:space="preserve">
          <source>Lumen::dontSee</source>
          <target state="translated">Lumen::dontSee</target>
        </trans-unit>
        <trans-unit id="8705cc45e7c2fdabb7eabbcfe6ea66c5c780db43" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeAuthentication</source>
          <target state="translated">Lumen::dontSeeAuthentication</target>
        </trans-unit>
        <trans-unit id="46d8007e36959107a8773b5c6ce81ffaa4e2dff4" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeCheckboxIsChecked</source>
          <target state="translated">Lumen::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="bb1e6742e6decc34558ec30f80e22757b6088e89" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeCookie</source>
          <target state="translated">Lumen::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="6b51fb3b31eb7df6ab1c55ded2ad9a0aff72fced" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeCurrentUrlEquals</source>
          <target state="translated">Lumen::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="d4e09da7a8f4009183006a3e23f8538ca61e8b60" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeCurrentUrlMatches</source>
          <target state="translated">Lumen::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="34672dacae06196fafd810f23f577cd622da0f02" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeElement</source>
          <target state="translated">Lumen::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="06ff445aeeaaaf83db1750c6cd64b028eb1dfcb7" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeInCurrentUrl</source>
          <target state="translated">Lumen::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="3ecb82c9b324c0e7f1f06809295c23882c413cb7" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeInField</source>
          <target state="translated">Lumen::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="5f2daa0029dcd667a48efde7d5c1aead03a58af2" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeInFormFields</source>
          <target state="translated">Lumen::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="629911a911d8327e0f3de4e489ba95c5e0d47f1a" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeInSource</source>
          <target state="translated">Lumen::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="47e63e3b4e764ed759d9b05a69c02217b5d3db7d" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeInTitle</source>
          <target state="translated">Lumen::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="7096e67a8cf3232361e25de2cf665f322e2b2783" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeLink</source>
          <target state="translated">Lumen::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="96ae264eacd9f331bf2e9f62e300a093c00cda1e" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeOptionIsSelected</source>
          <target state="translated">Lumen::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="a552d0bf0eb046cb0ccbb7dad360361080306407" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeRecord</source>
          <target state="translated">Lumen::dontSeeRecord</target>
        </trans-unit>
        <trans-unit id="4514b362f2224de433cd10b728a516aad0e2e513" translate="yes" xml:space="preserve">
          <source>Lumen::dontSeeResponseCodeIs</source>
          <target state="translated">Lumen::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="bda9d9c360f3dfee674b64d88e7786a6f8510ec8" translate="yes" xml:space="preserve">
          <source>Lumen::fillField</source>
          <target state="translated">Lumen::fillField</target>
        </trans-unit>
        <trans-unit id="bbe8789cd656c06cf34e8bbd6a51e5f3ae5b6fbc" translate="yes" xml:space="preserve">
          <source>Lumen::getApplication</source>
          <target state="translated">Lumen::getApplication</target>
        </trans-unit>
        <trans-unit id="0c46be9bbc6cf894c3ca8b0271d90ec730933ccd" translate="yes" xml:space="preserve">
          <source>Lumen::grabAttributeFrom</source>
          <target state="translated">Lumen::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="28c1a2b1dfabc423a313ff1087bf7cf3c9ef6c52" translate="yes" xml:space="preserve">
          <source>Lumen::grabCookie</source>
          <target state="translated">Lumen::grabCookie</target>
        </trans-unit>
        <trans-unit id="799b08f1e514636b980a7e3893ce131f192237f2" translate="yes" xml:space="preserve">
          <source>Lumen::grabFromCurrentUrl</source>
          <target state="translated">Lumen::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="9f9efcb4cbe2e450cedc33bf2e8857f9ca5e4634" translate="yes" xml:space="preserve">
          <source>Lumen::grabMultiple</source>
          <target state="translated">Lumen::grabMultiple</target>
        </trans-unit>
        <trans-unit id="186ad7f2c6271969801e48c354f43e2958959533" translate="yes" xml:space="preserve">
          <source>Lumen::grabPageSource</source>
          <target state="translated">Lumen::grabPageSource</target>
        </trans-unit>
        <trans-unit id="6212d2403a67bc015b1db9de45daacdd0eaf2c34" translate="yes" xml:space="preserve">
          <source>Lumen::grabRecord</source>
          <target state="translated">Lumen::grabRecord</target>
        </trans-unit>
        <trans-unit id="67227bed59e7a4fb5f9ff77819043695e327042f" translate="yes" xml:space="preserve">
          <source>Lumen::grabService</source>
          <target state="translated">Lumen::grabService</target>
        </trans-unit>
        <trans-unit id="962b85c7f5381bba8134c1f4dd5fee2ed65e6b70" translate="yes" xml:space="preserve">
          <source>Lumen::grabTextFrom</source>
          <target state="translated">Lumen::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="3af6e4cb81c95b5356f508047bc64eef52b3fa80" translate="yes" xml:space="preserve">
          <source>Lumen::grabValueFrom</source>
          <target state="translated">Lumen::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="884e22f8ed1bd84d9f36b5e5b1b4c7f990da55b2" translate="yes" xml:space="preserve">
          <source>Lumen::have</source>
          <target state="translated">Lumen::have</target>
        </trans-unit>
        <trans-unit id="ec37214ab317966afe51bacb57941a8ea9f17bb5" translate="yes" xml:space="preserve">
          <source>Lumen::haveApplicationHandler</source>
          <target state="translated">Lumen::haveApplicationHandler</target>
        </trans-unit>
        <trans-unit id="829609c5a6fdbe8f5a0aece8b4c63357750262cb" translate="yes" xml:space="preserve">
          <source>Lumen::haveBinding</source>
          <target state="translated">Lumen::haveBinding</target>
        </trans-unit>
        <trans-unit id="614d583d64b0d3d38123c68c711dfa9a1449f128" translate="yes" xml:space="preserve">
          <source>Lumen::haveContextualBinding</source>
          <target state="translated">Lumen::haveContextualBinding</target>
        </trans-unit>
        <trans-unit id="cea45f56534a9c856eb098b006dc3796aff8f2a1" translate="yes" xml:space="preserve">
          <source>Lumen::haveHttpHeader</source>
          <target state="translated">Lumen::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="b336b58ccf189a5adcf06bbe730b21ace0c064d8" translate="yes" xml:space="preserve">
          <source>Lumen::haveInstance</source>
          <target state="translated">Lumen::haveInstance</target>
        </trans-unit>
        <trans-unit id="10a4b6da485f6ff77ecd0ae1492c9763e13f77ca" translate="yes" xml:space="preserve">
          <source>Lumen::haveMultiple</source>
          <target state="translated">Lumen::haveMultiple</target>
        </trans-unit>
        <trans-unit id="60da85780b6965805c9c1bf0cd56c22f76e02726" translate="yes" xml:space="preserve">
          <source>Lumen::haveRecord</source>
          <target state="translated">Lumen::haveRecord</target>
        </trans-unit>
        <trans-unit id="916fb7f08276528573f55340adc495f14144990d" translate="yes" xml:space="preserve">
          <source>Lumen::haveSingleton</source>
          <target state="translated">Lumen::haveSingleton</target>
        </trans-unit>
        <trans-unit id="9906c0c198ff312008d13be1d4ba68dbc25e2167" translate="yes" xml:space="preserve">
          <source>Lumen::make</source>
          <target state="translated">Lumen::make</target>
        </trans-unit>
        <trans-unit id="e4fc1805c9a9040911b13533b656e496659e4ba1" translate="yes" xml:space="preserve">
          <source>Lumen::makeHtmlSnapshot</source>
          <target state="translated">Lumen::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="baafbf50f9887a7ee169d7af2c11ce19b89f064c" translate="yes" xml:space="preserve">
          <source>Lumen::makeMultiple</source>
          <target state="translated">Lumen::makeMultiple</target>
        </trans-unit>
        <trans-unit id="4ee1b9788fc04b47484fdf597f06b09b5b2721f0" translate="yes" xml:space="preserve">
          <source>Lumen::moveBack</source>
          <target state="translated">Lumen::moveBack</target>
        </trans-unit>
        <trans-unit id="6be2de74f48fd6a6b8c2723ba873cc661f129232" translate="yes" xml:space="preserve">
          <source>Lumen::resetCookie</source>
          <target state="translated">Lumen::resetCookie</target>
        </trans-unit>
        <trans-unit id="8db510af21ff6bb2454cc1444ed7fbad0bb22239" translate="yes" xml:space="preserve">
          <source>Lumen::see</source>
          <target state="translated">Lumen::see</target>
        </trans-unit>
        <trans-unit id="b3f6793986a60c77d5ee69f505d4f51ac7770560" translate="yes" xml:space="preserve">
          <source>Lumen::seeAuthentication</source>
          <target state="translated">Lumen::seeAuthentication</target>
        </trans-unit>
        <trans-unit id="95ebb36aae122b7e34f257bdb9510ece693bc397" translate="yes" xml:space="preserve">
          <source>Lumen::seeCheckboxIsChecked</source>
          <target state="translated">Lumen::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="53213b23e0a00945f0596f016fef2efd3564ea05" translate="yes" xml:space="preserve">
          <source>Lumen::seeCookie</source>
          <target state="translated">Lumen::seeCookie</target>
        </trans-unit>
        <trans-unit id="99072a98953d8a5600674541e6b00af22bfddfe5" translate="yes" xml:space="preserve">
          <source>Lumen::seeCurrentUrlEquals</source>
          <target state="translated">Lumen::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="5688f69b112b478026919b42d40b43670391a760" translate="yes" xml:space="preserve">
          <source>Lumen::seeCurrentUrlMatches</source>
          <target state="translated">Lumen::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="1168a6ed2fb2edfca1f50ec340489dab2ec00059" translate="yes" xml:space="preserve">
          <source>Lumen::seeElement</source>
          <target state="translated">Lumen::seeElement</target>
        </trans-unit>
        <trans-unit id="3e3f7561a25d18e9d34d26d3293b9d4ac7b3f2c8" translate="yes" xml:space="preserve">
          <source>Lumen::seeInCurrentUrl</source>
          <target state="translated">Lumen::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="6e857c00f183d0b474e030194ac2d13ac6c74594" translate="yes" xml:space="preserve">
          <source>Lumen::seeInField</source>
          <target state="translated">Lumen::seeInField</target>
        </trans-unit>
        <trans-unit id="6f56ed48dc807d2fbd064ff56761e871bc9a9c2a" translate="yes" xml:space="preserve">
          <source>Lumen::seeInFormFields</source>
          <target state="translated">Lumen::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="d67851e75a748111eee88b65f40c171ef45724b8" translate="yes" xml:space="preserve">
          <source>Lumen::seeInSource</source>
          <target state="translated">Lumen::seeInSource</target>
        </trans-unit>
        <trans-unit id="e752bb1191cbadab17d8038b3bf13d3d814b45cf" translate="yes" xml:space="preserve">
          <source>Lumen::seeInTitle</source>
          <target state="translated">Lumen::seeInTitle</target>
        </trans-unit>
        <trans-unit id="7b4e09f8efbdba08f27cbf3ca44611b6ea461c59" translate="yes" xml:space="preserve">
          <source>Lumen::seeLink</source>
          <target state="translated">Lumen::seeLink</target>
        </trans-unit>
        <trans-unit id="028e11491d0f5d6cd657b6911554314130b1bace" translate="yes" xml:space="preserve">
          <source>Lumen::seeNumberOfElements</source>
          <target state="translated">Lumen::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="8c866b2d8780cfe4cdbd8051e2f38b7472c1384d" translate="yes" xml:space="preserve">
          <source>Lumen::seeOptionIsSelected</source>
          <target state="translated">Lumen::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="edbbc28feb0db4e0840017f94d46186ea9ec5ae7" translate="yes" xml:space="preserve">
          <source>Lumen::seePageNotFound</source>
          <target state="translated">Lumen::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="d77348ed710d2b79d60d4d119b5be15223c87522" translate="yes" xml:space="preserve">
          <source>Lumen::seeRecord</source>
          <target state="translated">Lumen::seeRecord</target>
        </trans-unit>
        <trans-unit id="aa521c06c9a50949e1840b573152d74d155384f4" translate="yes" xml:space="preserve">
          <source>Lumen::seeResponseCodeIs</source>
          <target state="translated">Lumen::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="07f09861aa3c0078b9a6ba4b14af13552a91a1a0" translate="yes" xml:space="preserve">
          <source>Lumen::seeResponseCodeIsBetween</source>
          <target state="translated">Lumen::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="db9ab3e251d0bf793c8c486835fe27fbc52c677f" translate="yes" xml:space="preserve">
          <source>Lumen::seeResponseCodeIsClientError</source>
          <target state="translated">Lumen::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="9e6d23af8327418dce4711ad58ef712c00f246f9" translate="yes" xml:space="preserve">
          <source>Lumen::seeResponseCodeIsRedirection</source>
          <target state="translated">Lumen::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="bdbfdce91bea6915ba8ce19e487a128488195273" translate="yes" xml:space="preserve">
          <source>Lumen::seeResponseCodeIsServerError</source>
          <target state="translated">Lumen::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="afa72022cbbe8df65e22184397a274c227c64a8a" translate="yes" xml:space="preserve">
          <source>Lumen::seeResponseCodeIsSuccessful</source>
          <target state="translated">Lumen::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="5e3a30099f0ad45717d1f6714a2b399f007d46ac" translate="yes" xml:space="preserve">
          <source>Lumen::selectOption</source>
          <target state="translated">Lumen::selectOption</target>
        </trans-unit>
        <trans-unit id="cabebe9a8d3c8140b596e38d1d46964e89db1189" translate="yes" xml:space="preserve">
          <source>Lumen::sendAjaxGetRequest</source>
          <target state="translated">Lumen::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="ee1dfa0ffa001113875ce18d4a97f9ccbf60fda7" translate="yes" xml:space="preserve">
          <source>Lumen::sendAjaxPostRequest</source>
          <target state="translated">Lumen::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="87b3b76e0406549af597ccdf2f2aab73d7d3cad1" translate="yes" xml:space="preserve">
          <source>Lumen::sendAjaxRequest</source>
          <target state="translated">Lumen::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="9a9d1a2ec7fa39581a094284d8a45b01c3a21798" translate="yes" xml:space="preserve">
          <source>Lumen::setApplication</source>
          <target state="translated">Lumen::setApplication</target>
        </trans-unit>
        <trans-unit id="1acf4c517db83d363d94457ba0f931abaaa19613" translate="yes" xml:space="preserve">
          <source>Lumen::setCookie</source>
          <target state="translated">Lumen::setCookie</target>
        </trans-unit>
        <trans-unit id="fb22acc17eb9b49ac76a0decb9be90ea4fb43531" translate="yes" xml:space="preserve">
          <source>Lumen::submitForm</source>
          <target state="translated">Lumen::submitForm</target>
        </trans-unit>
        <trans-unit id="9e8e644a74d7453b4ff2d6bb10fc883e2a05cb45" translate="yes" xml:space="preserve">
          <source>Lumen::switchToIframe</source>
          <target state="translated">Lumen::switchToIframe</target>
        </trans-unit>
        <trans-unit id="3f54d889e204da7c70921f957821e9b9c09deed6" translate="yes" xml:space="preserve">
          <source>Lumen::uncheckOption</source>
          <target state="translated">Lumen::uncheckOption</target>
        </trans-unit>
        <trans-unit id="d5dfd2210a663cb5d40f4002e7f1fb421deef719" translate="yes" xml:space="preserve">
          <source>MS SQL</source>
          <target state="translated">エムエスエル</target>
        </trans-unit>
        <trans-unit id="dc443ae96796cb3f64f34581c3d48acccc7a2749" translate="yes" xml:space="preserve">
          <source>MSSQL: &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-sqlsrv.connection.php&quot;&gt;PDO_SQLSRV DSN&lt;/a&gt;</source>
          <target state="translated">MSSQL：&lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-sqlsrv.connection.php&quot;&gt;PDO_SQLSRV DSN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16ee8d47f8db3ea09d0daa25b686fe0380e605a4" translate="yes" xml:space="preserve">
          <source>Maintainer: &lt;strong&gt;Jan-Henk Gerritsen&lt;/strong&gt;</source>
          <target state="translated">メンテナー：&lt;strong&gt;Jan-Henk Gerritsen&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f02882f292bb6533ea72375cdf4afb660d4feeff" translate="yes" xml:space="preserve">
          <source>Maintainer: &lt;strong&gt;Naktibalda&lt;/strong&gt;</source>
          <target state="translated">メンテナ：&lt;strong&gt;ナクティバルダ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c27a57b7ca346bdb652b1016f45a7f2d83281c1b" translate="yes" xml:space="preserve">
          <source>Maintainer: &lt;strong&gt;Ruud Boon&lt;/strong&gt;</source>
          <target state="translated">メンテナ：&lt;strong&gt;ルードブーン&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6a72707112f3df867a437ace51cd9b11789d51c" translate="yes" xml:space="preserve">
          <source>Maintainer: &lt;strong&gt;Serghei Iakovlev&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;メンテナー&lt;/strong&gt;：&lt;strong&gt;セルゲイ・ヤコブレフ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ae6f4e69a2c3f7615f9e5018bd7f2354c608332" translate="yes" xml:space="preserve">
          <source>Maintainer: &lt;strong&gt;davert&lt;/strong&gt;</source>
          <target state="translated">メンテナ：&lt;strong&gt;davert&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22e6d079a2d4b2cf235edb1e723ae5fddec5fe4c" translate="yes" xml:space="preserve">
          <source>Maintainer: &lt;strong&gt;judgedim&lt;/strong&gt;, &lt;strong&gt;davert&lt;/strong&gt;</source>
          <target state="translated">メンテナ：&lt;strong&gt;裁判官&lt;/strong&gt;、&lt;strong&gt;ダバート&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d71fbb4423ab6789dd4699d1365bd441d04513f" translate="yes" xml:space="preserve">
          <source>Maintainer: &lt;strong&gt;samdark&lt;/strong&gt; Stability: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">メンテナ：&lt;strong&gt;samdark&lt;/strong&gt;安定性：&lt;strong&gt;安定&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68b5935cce7aa35a801cee62440cba5886b71319" translate="yes" xml:space="preserve">
          <source>Make sure events did not fire during the test.</source>
          <target state="translated">テスト中にイベントが発火しなかったことを確認してください。</target>
        </trans-unit>
        <trans-unit id="7b041d126b59f5ca7da1353145ba1f8a9f1366de" translate="yes" xml:space="preserve">
          <source>Make sure events fired during the test.</source>
          <target state="translated">テスト中にイベントが発生したことを確認してください。</target>
        </trans-unit>
        <trans-unit id="cd6f92952026e060d8c6b1cf42d7bfa156d075ef" translate="yes" xml:space="preserve">
          <source>Make sure you are connected to the right database.</source>
          <target state="translated">正しいデータベースに接続されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="a98f47db05db84b8cce14c11e1f56c2d0cf1e941" translate="yes" xml:space="preserve">
          <source>Mandatory parameters should be defined in the &lt;code&gt;$requiredFields&lt;/code&gt; property of the class. Here is how it is done in the Db module:</source>
          <target state="translated">必須パラメーターは、クラスの &lt;code&gt;$requiredFields&lt;/code&gt; プロパティで定義する必要があります。以下は、Dbモジュールでの実行方法です。</target>
        </trans-unit>
        <trans-unit id="c34512c9670de7b347c5f6152c372bb1972d677a" translate="yes" xml:space="preserve">
          <source>Manually closes current WebDriver session.</source>
          <target state="translated">現在の WebDriver セッションを手動で閉じます。</target>
        </trans-unit>
        <trans-unit id="17369caaf474e083cba600c54a98d4aaaede7dc6" translate="yes" xml:space="preserve">
          <source>Manually starts a new browser session.</source>
          <target state="translated">新しいブラウザセッションを手動で開始します。</target>
        </trans-unit>
        <trans-unit id="2132bc0217df0083829bd5af1c8cda645c5958d0" translate="yes" xml:space="preserve">
          <source>Mark the test as incomplete.</source>
          <target state="translated">テストを不完全なものとしてマークします。</target>
        </trans-unit>
        <trans-unit id="83ed6d56f7728552db3140c3a477f5a154676f63" translate="yes" xml:space="preserve">
          <source>Mark the test as skipped.</source>
          <target state="translated">テストをスキップしたものとしてマークを付けます。</target>
        </trans-unit>
        <trans-unit id="ff5ecd89fc66cfc31b9029cfd775680576057ca4" translate="yes" xml:space="preserve">
          <source>Matches option by text:</source>
          <target state="translated">テキストでオプションにマッチします。</target>
        </trans-unit>
        <trans-unit id="a46e5902eb86d80c8de00992acf4d4a958b16e84" translate="yes" xml:space="preserve">
          <source>Matches the &lt;em&gt;a&lt;/em&gt; element with given URL</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;要素を指定されたURLに一致させます</target>
        </trans-unit>
        <trans-unit id="115392562e38651615fe3ecfeed8dacf44fb2cf6" translate="yes" xml:space="preserve">
          <source>Matches the element with given tab index</source>
          <target state="translated">指定されたタブインデックスを持つ要素にマッチします。</target>
        </trans-unit>
        <trans-unit id="437fb02b269688c970fa927864fad58319a3b415" translate="yes" xml:space="preserve">
          <source>Maximizes the current window.</source>
          <target state="translated">現在のウィンドウを最大化します。</target>
        </trans-unit>
        <trans-unit id="64500881157360c917e7b8ad84810e9acfa5db17" translate="yes" xml:space="preserve">
          <source>Memcache</source>
          <target state="translated">Memcache</target>
        </trans-unit>
        <trans-unit id="ac219a7ff305a4d3e1927dd65947d09433a0314d" translate="yes" xml:space="preserve">
          <source>Memcache::clearMemcache</source>
          <target state="translated">Memcache::clearMemcache</target>
        </trans-unit>
        <trans-unit id="a9cc93ead2b5cd106e4b4e8f6baa48754f7b1dd3" translate="yes" xml:space="preserve">
          <source>Memcache::dontSeeInMemcached</source>
          <target state="translated">Memcache::dontSeeInMemcached</target>
        </trans-unit>
        <trans-unit id="93e3f413983e888ea3c69ca5db12b9aead63e4c3" translate="yes" xml:space="preserve">
          <source>Memcache::grabValueFromMemcached</source>
          <target state="translated">Memcache::grabValueFromMemcached</target>
        </trans-unit>
        <trans-unit id="8f1befc3b53789d3dcb5fe84660c29e9ffa722b5" translate="yes" xml:space="preserve">
          <source>Memcache::haveInMemcached</source>
          <target state="translated">Memcache::haveInMemcached</target>
        </trans-unit>
        <trans-unit id="97686b40c551bbc66f377bd30011a29b2095c987" translate="yes" xml:space="preserve">
          <source>Memcache::seeInMemcached</source>
          <target state="translated">Memcache::seeInMemcached</target>
        </trans-unit>
        <trans-unit id="0c2875c0c7bf9893f7e371c8109185342a232691" translate="yes" xml:space="preserve">
          <source>Methods of actor classes are generally taken from &lt;a href=&quot;06-modulesandhelpers&quot;&gt;Codeception Modules&lt;/a&gt;. Each module provides predefined actions for different testing purposes, and they can be combined to fit the testing environment. Codeception tries to solve 90% of possible testing issues in its modules, so you don&amp;rsquo;t have to reinvent the wheel. We think that you can spend more time on writing tests and less on writing support code to make those tests run. By default, AcceptanceTester relies on PhpBrowser module, which is set in the &lt;code&gt;tests/acceptance.suite.yml&lt;/code&gt; configuration file:</source>
          <target state="translated">アクタークラスのメソッドは、通常、&lt;a href=&quot;06-modulesandhelpers&quot;&gt;Codeceptionモジュール&lt;/a&gt;から取得されます。各モジュールは、さまざまなテスト目的のために事前定義されたアクションを提供し、それらを組み合わせてテスト環境に適合させることができます。Codeceptionは、モジュールで発生する可能性のあるテストの問題の90％を解決しようとするため、車輪の再発明を行う必要はありません。テストの作成により多くの時間を費やすことができ、それらのテストを実行するためのサポートコードの作成に費やす時間を減らすことができると思います。デフォルトでは、AcceptanceTesterがに設定されているPhpBrowserモジュールに依存している &lt;code&gt;tests/acceptance.suite.yml&lt;/code&gt; 設定ファイル：</target>
        </trans-unit>
        <trans-unit id="047c71e54a6f42a414a9e35fb89c87c3aac291bb" translate="yes" xml:space="preserve">
          <source>Mezzio</source>
          <target state="translated">Mezzio</target>
        </trans-unit>
        <trans-unit id="85ff480b34fdf454198fed37e302dc918edc88b8" translate="yes" xml:space="preserve">
          <source>Migrating From Behat</source>
          <target state="translated">ベチャットからの移行</target>
        </trans-unit>
        <trans-unit id="0b343a4820deeb7617ad3f4aee07b0701bd77fd0" translate="yes" xml:space="preserve">
          <source>Mixing string and boolean values for a checkbox&amp;rsquo;s value is not supported and may produce unexpected results.</source>
          <target state="translated">チェックボックスの値に文字列とブール値を混在させることはサポートされておらず、予期しない結果が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="4731741185e28601ad735cc472790cff5b345cd9" translate="yes" xml:space="preserve">
          <source>Mocks</source>
          <target state="translated">Mocks</target>
        </trans-unit>
        <trans-unit id="b9775b7f1c16e8baa133c10672bde89c4394eb57" translate="yes" xml:space="preserve">
          <source>Mocks the repository.</source>
          <target state="translated">リポジトリをモックします。</target>
        </trans-unit>
        <trans-unit id="f08bdadcd0ae95a37915c2148a2cdd63d2a970f2" translate="yes" xml:space="preserve">
          <source>Modify your &lt;code&gt;acceptance.suite.yml&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;acceptance.suite.yml&lt;/code&gt; ファイルを変更します。</target>
        </trans-unit>
        <trans-unit id="130c9982c613ccdc0e1d00bd0f82ef184cbe9b33" translate="yes" xml:space="preserve">
          <source>Module Conflicts</source>
          <target state="translated">モジュールの競合</target>
        </trans-unit>
        <trans-unit id="cf84af39c3c4ec408005a1e929743177d36fa5be" translate="yes" xml:space="preserve">
          <source>Module Parts</source>
          <target state="translated">モジュール部品</target>
        </trans-unit>
        <trans-unit id="7b8d3dd50bd2ff5721d6e359adebaa7cb12a6a36" translate="yes" xml:space="preserve">
          <source>Module constructor.</source>
          <target state="translated">モジュールのコンストラクタです。</target>
        </trans-unit>
        <trans-unit id="06d1a1c07cddd3ac3e6c36bcfdf5fff126e50da7" translate="yes" xml:space="preserve">
          <source>Module for testing REST WebService.</source>
          <target state="translated">REST WebServiceをテストするためのモジュールです。</target>
        </trans-unit>
        <trans-unit id="35d2c4c08aadcce2d60871a6c2e6a6b1c6879500" translate="yes" xml:space="preserve">
          <source>Module for testing SOAP WSDL web services. Send requests and check if response matches the pattern.</source>
          <target state="translated">SOAP WSDL ウェブサービスをテストするためのモジュール。リクエストを送信し、レスポンスがパターンにマッチするかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="509ec727336c457fc64e3e60670f6709f1f22628" translate="yes" xml:space="preserve">
          <source>Module for testing local filesystem. Fork it to extend the module for FTP, Amazon S3, others.</source>
          <target state="translated">ローカルファイルシステムをテストするためのモジュール。ForkしてFTPやAmazon S3などのモジュールを拡張する。</target>
        </trans-unit>
        <trans-unit id="1f5b50b3a383324837c3a01c5fea0e52a1244438" translate="yes" xml:space="preserve">
          <source>Module was developed to test Codeception itself.</source>
          <target state="translated">モジュールは、Codeceptionそのものをテストするために開発されました。</target>
        </trans-unit>
        <trans-unit id="f616c54dc7be2de485005451f9e7c50232b841ec" translate="yes" xml:space="preserve">
          <source>Module: AMQP</source>
          <target state="translated">モジュール。AMQP</target>
        </trans-unit>
        <trans-unit id="cb3dae745b3b69b1617f70be1993604fdfae91ca" translate="yes" xml:space="preserve">
          <source>Module: Apc</source>
          <target state="translated">モジュール Apc</target>
        </trans-unit>
        <trans-unit id="7abd173ef289c25abc1c80c3de678b0efac8d2bb" translate="yes" xml:space="preserve">
          <source>Module: Asserts</source>
          <target state="translated">モジュール。アサート</target>
        </trans-unit>
        <trans-unit id="4d863127bde0ae4c776fa54e6468cb1a9e2565f5" translate="yes" xml:space="preserve">
          <source>Module: Cli</source>
          <target state="translated">モジュール。クリ</target>
        </trans-unit>
        <trans-unit id="eda430cdffe7a2185bf59b1f7633c215acce1846" translate="yes" xml:space="preserve">
          <source>Module: DataFactory</source>
          <target state="translated">モジュールを使用しています。DataFactory</target>
        </trans-unit>
        <trans-unit id="47c4443915c62c97c5318ca099790c3e2231a4b6" translate="yes" xml:space="preserve">
          <source>Module: Db</source>
          <target state="translated">モジュールです。Db</target>
        </trans-unit>
        <trans-unit id="628bd49ca6da38ac4da6b25544c93efd24fa0e91" translate="yes" xml:space="preserve">
          <source>Module: Doctrine2</source>
          <target state="translated">モジュール。教義2</target>
        </trans-unit>
        <trans-unit id="badf1745d39c4063197076fbcd14d27b7b2d07d1" translate="yes" xml:space="preserve">
          <source>Module: FTP</source>
          <target state="translated">モジュール。FTP</target>
        </trans-unit>
        <trans-unit id="4497d25c43fcfc7d455a4a09a01c845646cce560" translate="yes" xml:space="preserve">
          <source>Module: Filesystem</source>
          <target state="translated">モジュール。ファイルシステム</target>
        </trans-unit>
        <trans-unit id="f80326be30436f5048743333f5743184026626d5" translate="yes" xml:space="preserve">
          <source>Module: Laravel5</source>
          <target state="translated">モジュールです。Laravel5</target>
        </trans-unit>
        <trans-unit id="5ba7526e3455c8379da753102425a3f8a220aaf0" translate="yes" xml:space="preserve">
          <source>Module: Lumen</source>
          <target state="translated">モジュール。ルーメン</target>
        </trans-unit>
        <trans-unit id="524ee585ed36a9e76d2629075092ee40f1c029ce" translate="yes" xml:space="preserve">
          <source>Module: Memcache</source>
          <target state="translated">モジュールを使用しています。Memcache</target>
        </trans-unit>
        <trans-unit id="8ffe98b9a665a36ef42f27ccf46f4a871b05e74d" translate="yes" xml:space="preserve">
          <source>Module: MongoDb</source>
          <target state="translated">モジュール。MongoDb</target>
        </trans-unit>
        <trans-unit id="0d34b7e0024e1ee83678731d9b77716f9411e580" translate="yes" xml:space="preserve">
          <source>Module: Phalcon</source>
          <target state="translated">モジュール ファルコン</target>
        </trans-unit>
        <trans-unit id="1ee9f40c9199ff79a3988bccf08f6555f27ddd22" translate="yes" xml:space="preserve">
          <source>Module: PhpBrowser</source>
          <target state="translated">モジュールです。PhpBrowser</target>
        </trans-unit>
        <trans-unit id="83dc02f5f25122c49904256cc16926746638a6af" translate="yes" xml:space="preserve">
          <source>Module: Queue</source>
          <target state="translated">モジュール:キュー</target>
        </trans-unit>
        <trans-unit id="2f4ba4625b6700fa763f9d41c64f8decbadcf688" translate="yes" xml:space="preserve">
          <source>Module: REST</source>
          <target state="translated">モジュール。REST</target>
        </trans-unit>
        <trans-unit id="6a4874aded8178d436d1f358666d6865743d5008" translate="yes" xml:space="preserve">
          <source>Module: Redis</source>
          <target state="translated">モジュール。Redis</target>
        </trans-unit>
        <trans-unit id="2889bd92f612a878528d76529a5d23884aa80b2b" translate="yes" xml:space="preserve">
          <source>Module: SOAP</source>
          <target state="translated">モジュール。SOAP</target>
        </trans-unit>
        <trans-unit id="76f726d2aca29bec86dacbdc24f7396747f09887" translate="yes" xml:space="preserve">
          <source>Module: Sequence</source>
          <target state="translated">モジュール シーケンス</target>
        </trans-unit>
        <trans-unit id="fd403d3d80bfaefce5e2a3790ad892b1c754977b" translate="yes" xml:space="preserve">
          <source>Module: Symfony</source>
          <target state="translated">モジュール。symfony</target>
        </trans-unit>
        <trans-unit id="1ed76689b146c9744b3c5c247e8007aecd67b61c" translate="yes" xml:space="preserve">
          <source>Module: WebDriver</source>
          <target state="translated">モジュールを使用しています。WebDriver</target>
        </trans-unit>
        <trans-unit id="581e1ef08c16cf6a47b00fe5e083ca32d450a366" translate="yes" xml:space="preserve">
          <source>Module: Yii2</source>
          <target state="translated">モジュール Yii2</target>
        </trans-unit>
        <trans-unit id="04b2f5593049b9136003806018d78a75e9b51156" translate="yes" xml:space="preserve">
          <source>Module: ZF2</source>
          <target state="translated">モジュール。ZF2</target>
        </trans-unit>
        <trans-unit id="71c41b1c73f2e3f67c5dbc8c720c1fa834f39fd0" translate="yes" xml:space="preserve">
          <source>Module: ZendExpressive</source>
          <target state="translated">モジュールを使用しています。ZendExpressive</target>
        </trans-unit>
        <trans-unit id="c1998e128d8dff6aec5a1da372e4befa9520b785" translate="yes" xml:space="preserve">
          <source>Modules And Helpers</source>
          <target state="translated">モジュールとヘルパー</target>
        </trans-unit>
        <trans-unit id="f7e57640588fc755027f1d92c940dc6470f0f2fa" translate="yes" xml:space="preserve">
          <source>Modules and Helpers</source>
          <target state="translated">モジュールとヘルパー</target>
        </trans-unit>
        <trans-unit id="a75077f495e0039a6ceaf22fe25ae5bb24f1232e" translate="yes" xml:space="preserve">
          <source>Modules and Helpers can be configured from the suite configuration file, or globally from &lt;code&gt;codeception.yml&lt;/code&gt;.</source>
          <target state="translated">モジュールとヘルパーは、スイート構成ファイルから、または &lt;code&gt;codeception.yml&lt;/code&gt; からグローバルに構成できます。</target>
        </trans-unit>
        <trans-unit id="cabbb9f79cafbd6ed66206a394261d34ec3a0e38" translate="yes" xml:space="preserve">
          <source>Modules are attached to Actor classes in the suite config. For example, in &lt;code&gt;tests/acceptance.suite.yml&lt;/code&gt; we should see:</source>
          <target state="translated">モジュールはスイート構成のActorクラスに添付されます。たとえば、 &lt;code&gt;tests/acceptance.suite.yml&lt;/code&gt; には次のように表示されます。</target>
        </trans-unit>
        <trans-unit id="951d557eb5921eedb73e97eb10b2f9005d9b79d2" translate="yes" xml:space="preserve">
          <source>Modules are attached to the Actor classes in the suite configuration. For example, in &lt;code&gt;tests/functional.suite.yml&lt;/code&gt; we should see:</source>
          <target state="translated">モジュールはスイート構成のActorクラスにアタッチされます。たとえば、 &lt;code&gt;tests/functional.suite.yml&lt;/code&gt; では次のようになります。</target>
        </trans-unit>
        <trans-unit id="21c713e95d97e1298afbe9098779fc8413427bfa" translate="yes" xml:space="preserve">
          <source>Modules are the real power of Codeception. They are used to emulate multiple inheritances for Actor classes (UnitTester, FunctionalTester, AcceptanceTester, etc). Codeception provides modules to emulate web requests, access data, interact with popular PHP libraries, etc. If the bundled modules are not enough for you that&amp;rsquo;s OK, you are free to write your own! Use Helpers (custom modules) for everything that Codeception can&amp;rsquo;t do out of the box. Helpers also can be used to extend the functionality of the original modules.</source>
          <target state="translated">モジュールはCodeceptionの真の力です。これらは、Actorクラス（UnitTester、FunctionalTester、AcceptanceTesterなど）の複数の継承をエミュレートするために使用されます。Codeceptionは、Web要求をエミュレートするモジュール、データにアクセスするモジュール、一般的なPHPライブラリと対話するモジュールなどを提供します。バンドルされたモジュールでは不十分な場合は、自由に独自のモジュールを作成できます。Codeceptionがそのままでは実行できないすべてのことについて、ヘルパー（カスタムモジュール）を使用します。ヘルパーを使用して、元のモジュールの機能を拡張することもできます。</target>
        </trans-unit>
        <trans-unit id="a409a0fb554c6414889264247b0ae9807a5c0225" translate="yes" xml:space="preserve">
          <source>Modules can be dynamically configured from environment variables. Parameter storage should be specified in the global &lt;code&gt;codeception.yml&lt;/code&gt; configuration inside the &lt;code&gt;params&lt;/code&gt; section. Parameters can be loaded from environment vars, from yaml (Symfony format), .env (Laravel format), ini, or php files.</source>
          <target state="translated">モジュールは、環境変数から動的に構成できます。パラメーターストレージは、 &lt;code&gt;params&lt;/code&gt; セクション内のグローバル &lt;code&gt;codeception.yml&lt;/code&gt; 設定で指定する必要があります。パラメータは、環境変数、yaml（Symfony形式）、. env（Laravel形式）、ini、またはphpファイルからロードできます。</target>
        </trans-unit>
        <trans-unit id="1294b9c3613a0f91069737c6559e983542d5c9e2" translate="yes" xml:space="preserve">
          <source>Modules can interact with each other through the &lt;code&gt;getModule&lt;/code&gt; method. Please note that this method will throw an exception if the required module was not loaded.</source>
          <target state="translated">モジュールは、 &lt;code&gt;getModule&lt;/code&gt; メソッドを介して相互に対話できます。必要なモジュールがロードされなかった場合、このメソッドは例外をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6dfc0ba31b9b81610ef3a8ea5bfa32dc94870ec7" translate="yes" xml:space="preserve">
          <source>Modules for all of these frameworks share the same interface, and thus your tests are not bound to any one of them. This is a sample functional test:</source>
          <target state="translated">これらすべてのフレームワークのモジュールは同じインターフェイスを共有しているので、あなたのテストはそれらのどれにも縛られません。これは機能テストのサンプルです。</target>
        </trans-unit>
        <trans-unit id="1c720720bf61cc8799a8d9c20f97e53f18a30b10" translate="yes" xml:space="preserve">
          <source>Modules may also contain methods that are exposed for use in helper classes. Those methods start with a &lt;code&gt;_&lt;/code&gt; prefix and are not available in Actor classes, so can be accessed only from modules and extensions.</source>
          <target state="translated">モジュールには、ヘルパークラスで使用するために公開されているメソッドも含まれます。これらのメソッドは &lt;code&gt;_&lt;/code&gt; プレフィックスで始まり、Actorクラスでは使用できないため、モジュールおよび拡張機能からのみアクセスできます。</target>
        </trans-unit>
        <trans-unit id="3e3da17e23bc3d2eee7dda4f99cf32c7325dfed0" translate="yes" xml:space="preserve">
          <source>Modules may conflict with one another. If a module implements &lt;code&gt;Codeception\Lib\Interfaces\ConflictsWithModule&lt;/code&gt;, it might declare a conflict rule to be used with other modules. For instance, WebDriver conflicts with all modules implementing the &lt;code&gt;Codeception\Lib\Interfaces\Web&lt;/code&gt; interface.</source>
          <target state="translated">モジュールは互いに競合する可能性があります。モジュールが &lt;code&gt;Codeception\Lib\Interfaces\ConflictsWithModule&lt;/code&gt; 実装する場合、他のモジュールで使用される競合ルールを宣言する可能性があります。たとえば、WebDriverは、 &lt;code&gt;Codeception\Lib\Interfaces\Web&lt;/code&gt; インターフェイスを実装するすべてのモジュールと競合します。</target>
        </trans-unit>
        <trans-unit id="4ec35c80c5cbacb8cf51e50a14ba5632cbe10904" translate="yes" xml:space="preserve">
          <source>Modules with &lt;em&gt;Parts&lt;/em&gt; section in their reference can be partially loaded. This way, the &lt;code&gt;$I&lt;/code&gt; object will have actions belonging to only a specific part of that module. Partially loaded modules can be also used to avoid module conflicts.</source>
          <target state="translated">参照に&lt;em&gt;パーツ&lt;/em&gt;セクションがあるモジュールは、部分的にロードできます。このようにして、 &lt;code&gt;$I&lt;/code&gt; オブジェクトは、そのモジュールの特定の部分のみに属するアクションを持ちます。部分的にロードされたモジュールを使用して、モジュールの競合を回避することもできます。</target>
        </trans-unit>
        <trans-unit id="2896316fa0c062a983b07427dc56d02397f82ac3" translate="yes" xml:space="preserve">
          <source>MongoDb</source>
          <target state="translated">MongoDb</target>
        </trans-unit>
        <trans-unit id="1ff8bde2a656c9c96b79ddb3d2be8440e200a1f0" translate="yes" xml:space="preserve">
          <source>MongoDb::dontSeeInCollection</source>
          <target state="translated">MongoDb::dontSeeInCollection</target>
        </trans-unit>
        <trans-unit id="f8fddd677ae1957d9fa05aebf57213082e8c1e18" translate="yes" xml:space="preserve">
          <source>MongoDb::grabCollectionCount</source>
          <target state="translated">MongoDb::grabCollectionCount</target>
        </trans-unit>
        <trans-unit id="98fb47248d76caaf989102350234bbe810ed770d" translate="yes" xml:space="preserve">
          <source>MongoDb::grabFromCollection</source>
          <target state="translated">MongoDb::grabFromCollection</target>
        </trans-unit>
        <trans-unit id="9f029d5bcf1ba00324fb11e8f5f82d1093c37b42" translate="yes" xml:space="preserve">
          <source>MongoDb::haveInCollection</source>
          <target state="translated">MongoDb::haveInCollection</target>
        </trans-unit>
        <trans-unit id="fb975c64a60c39dae6738f710c4fac98c30d717c" translate="yes" xml:space="preserve">
          <source>MongoDb::seeElementIsArray</source>
          <target state="translated">MongoDb::seeElementIsArray</target>
        </trans-unit>
        <trans-unit id="3d0e2820587f6cce7e042b2d6959e0e4a0dbf62b" translate="yes" xml:space="preserve">
          <source>MongoDb::seeElementIsObject</source>
          <target state="translated">MongoDb::seeElementIsObject</target>
        </trans-unit>
        <trans-unit id="277134e1236fd83f818c84b2bf1dab9f0c95930f" translate="yes" xml:space="preserve">
          <source>MongoDb::seeInCollection</source>
          <target state="translated">MongoDb::seeInCollection</target>
        </trans-unit>
        <trans-unit id="1058138eb4773b3504aeaa05c02ddc9ae4be351a" translate="yes" xml:space="preserve">
          <source>MongoDb::seeNumElementsInCollection</source>
          <target state="translated">MongoDb::seeNumElementsInCollection</target>
        </trans-unit>
        <trans-unit id="c4cb29f1afa2fc726e1a65b1aafe90b9e236d079" translate="yes" xml:space="preserve">
          <source>MongoDb::useDatabase</source>
          <target state="translated">MongoDb::useDatabase</target>
        </trans-unit>
        <trans-unit id="e2bce340ef173f46728a1aedab7cd364caabfc12" translate="yes" xml:space="preserve">
          <source>More detailed check can be applied if you need to validate the type of fields in a response. You can do that by using with a &lt;a href=&quot;modules/rest#seeResponseMatchesJsonType&quot;&gt;seeResponseMatchesJsonType&lt;/a&gt; action in which you define the structure of JSON response.</source>
          <target state="translated">応答のフィールドのタイプを検証する必要がある場合は、より詳細なチェックを適用できます。JSON応答の構造を定義する&lt;a href=&quot;modules/rest#seeResponseMatchesJsonType&quot;&gt;seeResponseMatchesJsonType&lt;/a&gt;アクションで使用することにより、これを行うことができます。</target>
        </trans-unit>
        <trans-unit id="326a67ab57873cb3c8fcb9be9fe5de9c15a2c7d0" translate="yes" xml:space="preserve">
          <source>More details on configuration can be learned from Codeception&amp;rsquo;s &lt;a href=&quot;https://github.com/Codeception/Codeception/blob/3.0/.travis.yml&quot;&gt;&lt;code&gt;.travis.yml&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">設定の詳細については、Codeceptionの&lt;a href=&quot;https://github.com/Codeception/Codeception/blob/3.0/.travis.yml&quot;&gt; &lt;code&gt;.travis.yml&lt;/code&gt; &lt;/a&gt;から学習できます。</target>
        </trans-unit>
        <trans-unit id="044f7c0912f7394c29cd1d5a322f680f642cfe4f" translate="yes" xml:space="preserve">
          <source>Moreover, Codeception can resolve dependencies recursively (when &lt;code&gt;A&lt;/code&gt; depends on &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;B&lt;/code&gt; depends on &lt;code&gt;C&lt;/code&gt; etc.) and handle parameters of primitive types with default values (like &lt;code&gt;$param = 'default'&lt;/code&gt;). Of course, you are not allowed to have &lt;em&gt;cyclic dependencies&lt;/em&gt;.</source>
          <target state="translated">（ときにまた、Codeception再帰的依存関係を解決することができ &lt;code&gt;A&lt;/code&gt; 依存する &lt;code&gt;B&lt;/code&gt; 、及び &lt;code&gt;B&lt;/code&gt; が依存する &lt;code&gt;C&lt;/code&gt; 等）や（などのデフォルト値を持つプリミティブ型のハンドルパラメータ &lt;code&gt;$param = 'default'&lt;/code&gt; ）。もちろん、&lt;em&gt;依存関係&lt;/em&gt;を&lt;em&gt;循環さ&lt;/em&gt;せることはできません。</target>
        </trans-unit>
        <trans-unit id="ab92a0c37f94f5115b7536e446625a8afe0405c7" translate="yes" xml:space="preserve">
          <source>Most methods in this module that operate on a DOM element (e.g. &lt;code&gt;click&lt;/code&gt;) accept a locator as the first argument, which can be either a string or an array.</source>
          <target state="translated">DOM要素（ &lt;code&gt;click&lt;/code&gt; など）を操作するこのモジュールのほとんどのメソッドは、ロケーターを最初の引数として受け入れます。これは文字列または配列のいずれかです。</target>
        </trans-unit>
        <trans-unit id="359fb902fa90643544a781bb8171ed73f7fe393a" translate="yes" xml:space="preserve">
          <source>Move mouse over the first element matched by the given locator. If the first parameter null then the page is used. If the second and third parameters are given, then the mouse is moved to an offset of the element&amp;rsquo;s top-left corner. Otherwise, the mouse is moved to the center of the element.</source>
          <target state="translated">指定されたロケーターに一致する最初の要素の上にマウスを移動します。最初のパラメーターがnullの場合、ページが使用されます。2番目と3番目のパラメーターが指定されている場合、マウスは要素の左上隅のオフセットに移動します。それ以外の場合、マウスは要素の中心に移動します。</target>
        </trans-unit>
        <trans-unit id="ca68dfbe864c67e3b8b7aca5649ab08d458fd59c" translate="yes" xml:space="preserve">
          <source>Move to the middle of the given element matched by the given locator. Extra shift, calculated from the top-left corner of the element, can be set by passing $offsetX and $offsetY parameters.</source>
          <target state="translated">指定したロケータにマッチした要素の中央に移動します。パラメータ $offsetX と $offsetY を渡すことで、要素の左上隅から計算される余分なシフトを設定することができます。</target>
        </trans-unit>
        <trans-unit id="107f3d47621071eea57f6c74b3f4169eb5ee8493" translate="yes" xml:space="preserve">
          <source>Moves back in history.</source>
          <target state="translated">歴史を遡って移動する。</target>
        </trans-unit>
        <trans-unit id="ed501c098aecc69e21cc2aa722070cde605bef5c" translate="yes" xml:space="preserve">
          <source>Moves forward in history.</source>
          <target state="translated">歴史の中で前進する。</target>
        </trans-unit>
        <trans-unit id="f791d73cb2fefd38cf0892cd98dd47e9d40cc22b" translate="yes" xml:space="preserve">
          <source>Multi Session Testing</source>
          <target state="translated">マルチセッションテスト</target>
        </trans-unit>
        <trans-unit id="d4be6c28b6b75e631bb7bb38952c6b12556d1d8a" translate="yes" xml:space="preserve">
          <source>Multi session testing is disabled by default. To enable it, add &lt;code&gt;\Codeception\Lib\Actor\Shared\Friend&lt;/code&gt; into &lt;code&gt;AcceptancTester&lt;/code&gt;.</source>
          <target state="translated">マルチセッションテストはデフォルトで無効になっています。これを有効にするには、 &lt;code&gt;\Codeception\Lib\Actor\Shared\Friend&lt;/code&gt; を &lt;code&gt;AcceptancTester&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="1e1f184198576dffbd3f1070fe2fc6438d614fb2" translate="yes" xml:space="preserve">
          <source>Multi session testing is disabled by default. To enable it, add &lt;code&gt;\Codeception\Lib\Actor\Shared\Friend&lt;/code&gt; into &lt;code&gt;AcceptanceTester&lt;/code&gt;.</source>
          <target state="translated">マルチセッションテストはデフォルトで無効になっています。これを有効にするには、 &lt;code&gt;\Codeception\Lib\Actor\Shared\Friend&lt;/code&gt; を &lt;code&gt;AcceptanceTester&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
        <trans-unit id="2185902d7a0054ab9bb692188d2c296d7ba686e6" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-mysql.connection.php&quot;&gt;PDO_MYSQL DSN&lt;/a&gt;</source>
          <target state="translated">MySQL：&lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-mysql.connection.php&quot;&gt;PDO_MYSQL DSN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3eabeaa7cd4d7977954e599907d218a371ffce4" translate="yes" xml:space="preserve">
          <source>Name your assertions like this:</source>
          <target state="translated">こんな感じで主張に名前を付けてください。</target>
        </trans-unit>
        <trans-unit id="be09a63bd1995e99cd22064cdc39a4bae464033d" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
          <target state="translated">Namespaces</target>
        </trans-unit>
        <trans-unit id="4aadb437fde8265ab9f9f1aa19fdec1cc5fcb947" translate="yes" xml:space="preserve">
          <source>New generation Selenium WebDriver module.</source>
          <target state="translated">新世代のSelenium WebDriverモジュール。</target>
        </trans-unit>
        <trans-unit id="c9baa45f194d3a361aabaf53522b9a5e3715c991" translate="yes" xml:space="preserve">
          <source>Next, we will describe this feature by writing examples for it</source>
          <target state="translated">次に、この機能について例を書いて説明します。</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="b7a24a46b9c023ff24a1847952b914cff81be9bf" translate="yes" xml:space="preserve">
          <source>Note on parameters</source>
          <target state="translated">パラメータに関する注意事項</target>
        </trans-unit>
        <trans-unit id="1716c606ad89d96bf03a603e1fb1350a52edd87c" translate="yes" xml:space="preserve">
          <source>Note that &amp;ldquo;2&amp;rdquo; will be the submitted value for the &amp;ldquo;plan&amp;rdquo; field, as it is the selected option.</source>
          <target state="translated">「2」は選択されたオプションであるため、「計画」フィールドの送信値になります。</target>
        </trans-unit>
        <trans-unit id="5009b4fb9995e79e0f6ead1197608e625dd05307" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;$em-&amp;gt;persist()&lt;/code&gt;, &lt;code&gt;$em-&amp;gt;refresh()&lt;/code&gt;, and &lt;code&gt;$em-&amp;gt;flush()&lt;/code&gt; are called every time.</source>
          <target state="translated">&lt;code&gt;$em-&amp;gt;persist()&lt;/code&gt; 、 &lt;code&gt;$em-&amp;gt;refresh()&lt;/code&gt; 、および &lt;code&gt;$em-&amp;gt;flush()&lt;/code&gt; が毎回呼び出されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4d0e5558a89699ed774ff94cea86999206e2e166" translate="yes" xml:space="preserve">
          <source>Note that if the locator matches a button of type &lt;code&gt;submit&lt;/code&gt;, the form will be submitted.</source>
          <target state="translated">ロケーターが &lt;code&gt;submit&lt;/code&gt; タイプのボタンと一致する場合、フォームが送信されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1d40e89f22ee13a27c3c4b07b9abc4fdbfae3e13" translate="yes" xml:space="preserve">
          <source>Note that key is ignored, because actual field name is part of criteria and/or expression.</source>
          <target state="translated">実際のフィールド名は基準や式の一部であるため、キーは無視されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5cd64dc81a7cebe198c2cfed009cc9c084835217" translate="yes" xml:space="preserve">
          <source>Note that session restoration only works for &lt;code&gt;WebDriver&lt;/code&gt; modules (modules implementing &lt;code&gt;Codeception\Lib\Interfaces\SessionSnapshot&lt;/code&gt;).</source>
          <target state="translated">セッションの復元は、 &lt;code&gt;WebDriver&lt;/code&gt; モジュール（ &lt;code&gt;Codeception\Lib\Interfaces\SessionSnapshot&lt;/code&gt; 実装するモジュール）でのみ機能することに注意してください。</target>
        </trans-unit>
        <trans-unit id="39fee9ef88a547ab7c11b85bc4d6f841a8c93c66" translate="yes" xml:space="preserve">
          <source>Note that the search is done after stripping all HTML tags from the body, so &lt;code&gt;$I-&amp;gt;dontSee('strong')&lt;/code&gt; will fail on strings like:</source>
          <target state="translated">本文からすべてのHTMLタグを取り除いた後で検索が行われるため、 &lt;code&gt;$I-&amp;gt;dontSee('strong')&lt;/code&gt; は次のような文字列では失敗します。</target>
        </trans-unit>
        <trans-unit id="033138ca10f279ff27427582aae3ac41fdac05d1" translate="yes" xml:space="preserve">
          <source>Note that the search is done after stripping all HTML tags from the body, so &lt;code&gt;$I-&amp;gt;see('strong')&lt;/code&gt; will return true for strings like:</source>
          <target state="translated">本文からすべてのHTMLタグを取り除いた後に検索が実行されるため、 &lt;code&gt;$I-&amp;gt;see('strong')&lt;/code&gt; は次のような文字列に対してtrueを返します。</target>
        </trans-unit>
        <trans-unit id="ba1e9fa3ec0210d80884f38ebefc08dd94fcc470" translate="yes" xml:space="preserve">
          <source>Note that with the &lt;code&gt;-use-vendor-bin&lt;/code&gt; option, your commands will be completed using the Codeception binary located in your project&amp;rsquo;s root. Without the option, it will use whatever Codeception binary you originally used to generate the completion script (&amp;lsquo;codecept location&amp;rsquo; in the above examples)</source>
          <target state="translated">することを注意 &lt;code&gt;-use-vendor-bin&lt;/code&gt; オプション、あなたのコマンドは、プロジェクトのルートにあるCodeceptionバイナリを使用して完了します。オプションがない場合、完了スクリプトの生成に最初に使用したすべてのCodeceptionバイナリ（上記の例では「codeceptの場所」）が使用されます。</target>
        </trans-unit>
        <trans-unit id="c185cf09cc16465933e28448cf2a93569469bfd0" translate="yes" xml:space="preserve">
          <source>Note: if you need to load fixtures before a test (probably before the cleanup transaction is started; &lt;code&gt;cleanup&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt; by default), you can specify the fixtures in the &lt;code&gt;_fixtures()&lt;/code&gt; method of a test case</source>
          <target state="translated">注：テストの前（おそらくクリーンアップトランザクションが開始される前、クリーン &lt;code&gt;cleanup&lt;/code&gt; オプションはデフォルトで &lt;code&gt;true&lt;/code&gt; ）にフィクスチャをロードする必要がある場合は、テストケースの &lt;code&gt;_fixtures()&lt;/code&gt; メソッドでフィクスチャを指定できます。</target>
        </trans-unit>
        <trans-unit id="bff6409e329fdcf65e1db4613e1ca0fc42ccdab1" translate="yes" xml:space="preserve">
          <source>Note: if you need to load fixtures before the test (probably before the cleanup transaction is started; &lt;code&gt;cleanup&lt;/code&gt; options is &lt;code&gt;true&lt;/code&gt; by default), you can specify fixtures with _fixtures method of a testcase</source>
          <target state="translated">注：テスト前にフィクスチャをロードする必要がある場合（おそらくクリーンアップトランザクションが開始される前。 &lt;code&gt;cleanup&lt;/code&gt; オプションはデフォルトで &lt;code&gt;true&lt;/code&gt; です）、テストケースの_fixturesメソッドでフィクスチャを指定できます。</target>
        </trans-unit>
        <trans-unit id="1d3adc43a4d61b299900ba59801b0a95477b1029" translate="yes" xml:space="preserve">
          <source>Note: services part and Doctrine integration is not compatible with ZF3 yet</source>
          <target state="translated">注意:サービス部分と Doctrine の統合はまだ ZF3 と互換性がありません。</target>
        </trans-unit>
        <trans-unit id="c6fa8e171cee84893f178a317ceaa02009c77fbe" translate="yes" xml:space="preserve">
          <source>Now for all builds we will see results trend graph that shows us percentage of passing and failing tests. We also will see a &lt;strong&gt;Latest Test Result&lt;/strong&gt; link which will lead to to the page where all executed tests and their stats listed in a table.</source>
          <target state="translated">これで、すべてのビルドについて、成功したテストと失敗したテストの割合を示す結果トレンドグラフが表示されます。また、実行されたすべてのテストとその統計が表に一覧表示されるページにつながる[ &lt;strong&gt;最新のテスト結果]&lt;/strong&gt;リンクも表示されます。</target>
        </trans-unit>
        <trans-unit id="34b8d4716f6f20d14d6a14c3a07263de806f4ab8" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s update our build step to generate xml:</source>
          <target state="translated">次に、ビルドステップを更新してxmlを生成します。</target>
        </trans-unit>
        <trans-unit id="5a52e46d37b72e7567b15dda58549aa5c5c778d3" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve written some acceptance tests, functional tests are almost the same, with one major difference: Functional tests don&amp;rsquo;t require a web server.</source>
          <target state="translated">いくつかの受け入れテストを作成したので、機能テストはほとんど同じですが、1つの大きな違いがあります。機能テストはWebサーバーを必要としません。</target>
        </trans-unit>
        <trans-unit id="48743a37b5043bbe03306984fd0922a4a3b4beb1" translate="yes" xml:space="preserve">
          <source>Now the Admin group class will listen for all events of tests that belong to the &lt;code&gt;admin&lt;/code&gt; group.</source>
          <target state="translated">これで、Adminグループクラスは、 &lt;code&gt;admin&lt;/code&gt; グループに属するテストのすべてのイベントをリッスンします。</target>
        </trans-unit>
        <trans-unit id="23498e9e361a942fe08cfe37154a3e497344550f" translate="yes" xml:space="preserve">
          <source>Now we have group files. We should update &lt;code&gt;codeception.yml&lt;/code&gt; to load generated group files. In our case we have groups: &lt;em&gt;paracept_1&lt;/em&gt;, &lt;em&gt;paracept_2&lt;/em&gt;, &lt;em&gt;paracept_3&lt;/em&gt;, &lt;em&gt;paracept_4&lt;/em&gt;, &lt;em&gt;paracept_5&lt;/em&gt;.</source>
          <target state="translated">これでグループファイルが作成されました。 &lt;code&gt;codeception.yml&lt;/code&gt; を更新して、生成されたグループファイルをロードする必要があります。私たちの場合、グループがあります：&lt;em&gt;paracept_1&lt;/em&gt;、&lt;em&gt;paracept_2&lt;/em&gt;、&lt;em&gt;paracept_3&lt;/em&gt;、&lt;em&gt;paracept_4&lt;/em&gt;、&lt;em&gt;paracept_5&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2499c608cc2ac71ab9925f7f60ac443e4b2c1c00" translate="yes" xml:space="preserve">
          <source>Now we need HTML Publisher plugin configured to display generated HTML files. It should be added as post-build action similar way we did it for XML reports.</source>
          <target state="translated">ここで、生成されたHTMLファイルを表示するように設定されたHTML Publisherプラグインが必要になります。これは、XMLレポートのために行ったのと同じように、ビルド後のアクションとして追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="8c20a5d06d33b8fd6f8470800bdc3e29122b08f2" translate="yes" xml:space="preserve">
          <source>Now we should specify path to PHPUnit style XML reports. In case of standard Codeception setup we should specify &lt;code&gt;tests/_output/*.xml&lt;/code&gt; as a pattern for matching resulted XMLs. Now we save the project and rebuild it.</source>
          <target state="translated">次に、PHPUnitスタイルのXMLレポートへのパスを指定します。標準のCodeceptionセットアップの場合、一致する結果の &lt;code&gt;tests/_output/*.xml&lt;/code&gt; のパターンとして、tests / _output / *。xmlを指定する必要があります。次に、プロジェクトを保存して再構築します。</target>
        </trans-unit>
        <trans-unit id="32210ed2958806216111b84d8a4c8168d7668e0c" translate="yes" xml:space="preserve">
          <source>Now you can execute all the commands of a corresponding Actor class and see the results immediately.</source>
          <target state="translated">これで、対応するActorクラスのすべてのコマンドを実行して、その結果をすぐに見ることができるようになりました。</target>
        </trans-unit>
        <trans-unit id="de168129a2452431944a7937bb0f70145f97e3ad" translate="yes" xml:space="preserve">
          <source>Now you can use the &lt;code&gt;login&lt;/code&gt; method inside your tests:</source>
          <target state="translated">これで、テスト内で &lt;code&gt;login&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="445fabc21ae84300e74fbbb08e859b691a5b98c6" translate="yes" xml:space="preserve">
          <source>Now, we can execute :</source>
          <target state="translated">これで実行できるようになりました。</target>
        </trans-unit>
        <trans-unit id="e2b940cbde775aa4606664d11827007e3ea18128" translate="yes" xml:space="preserve">
          <source>ORM - only include the database methods of this module:</source>
          <target state="translated">ORM-このモジュールのデータベースメソッドのみを含む。</target>
        </trans-unit>
        <trans-unit id="db3d7ae1bd2523e41be3e51270dc6fcb47ce8b6c" translate="yes" xml:space="preserve">
          <source>ORM modules</source>
          <target state="translated">ORMモジュール</target>
        </trans-unit>
        <trans-unit id="de8aa86286dbb8eb74d2748c7b6d4486d0458203" translate="yes" xml:space="preserve">
          <source>OS</source>
          <target state="translated">OS</target>
        </trans-unit>
        <trans-unit id="193b219ee7660af1bdbce07caa6b5f8704909c27" translate="yes" xml:space="preserve">
          <source>Old style sequences:</source>
          <target state="translated">オールドスタイルのシーケンス。</target>
        </trans-unit>
        <trans-unit id="c635d9b851792342857840a765804db4a70fb33b" translate="yes" xml:space="preserve">
          <source>On Fly Bootstrap</source>
          <target state="translated">オンフライブートストラップ</target>
        </trans-unit>
        <trans-unit id="2492e8ab37bbde43d85adbd2732b73f2c605c3fe" translate="yes" xml:space="preserve">
          <source>On each failure, the snapshot of the last shown page will be stored in the &lt;code&gt;tests/_output&lt;/code&gt; directory. PhpBrowser will store the HTML code and WebDriver will save a screenshot of the page.</source>
          <target state="translated">失敗するたびに、最後に表示されたページのスナップショットが &lt;code&gt;tests/_output&lt;/code&gt; ディレクトリに保存されます。PhpBrowserはHTMLコードを保存し、WebDriverはページのスクリーンショットを保存します。</target>
        </trans-unit>
        <trans-unit id="01c769517226e5f398a42ad96e051e5112840bfb" translate="yes" xml:space="preserve">
          <source>On initiation of this modules you are automatically logged into the server using the specified config options or defaulted to anonymous user if not provided.</source>
          <target state="translated">このモジュールを起動すると、指定された設定オプションを使用して自動的にサーバにログインします。</target>
        </trans-unit>
        <trans-unit id="1a7884bf6803a12c6c2da02887756e51b138a8b8" translate="yes" xml:space="preserve">
          <source>On the first run, data will be obtained via &lt;code&gt;fetchData&lt;/code&gt; method and saved to &lt;code&gt;tests/_data&lt;/code&gt; directory in json format. On next execution the obtained data will be compared with previously saved snapshot.</source>
          <target state="translated">最初の実行時に、データは &lt;code&gt;fetchData&lt;/code&gt; メソッドを介して取得され、json形式で &lt;code&gt;tests/_data&lt;/code&gt; ディレクトリに保存されます。次回の実行時に、取得したデータは以前に保存したスナップショットと比較されます。</target>
        </trans-unit>
        <trans-unit id="c0fde8c1bd36c785ae6d3aa905f4cbbb7f9cfc2c" translate="yes" xml:space="preserve">
          <source>Once configured, it can create records with ease:</source>
          <target state="translated">一度設定してしまえば、簡単にレコードを作成することができます。</target>
        </trans-unit>
        <trans-unit id="c9396d3d5449e1e0e2c431790a4ce226df4dc73c" translate="yes" xml:space="preserve">
          <source>Once each of your applications (bundles) has its own namespace and different Helper or Actor classes, you can execute all the tests in a single runner. Run the Codeception tests as usual, using the meta-config we created earlier:</source>
          <target state="translated">それぞれのアプリケーション(バンドル)が独自の名前空間を持ち、異なる Helper クラスや Actor クラスを持つようになれば、1 つのランナーですべてのテストを実行することができます。先ほど作成した meta-config を使って、いつものように Codeception テストを実行してください。</target>
        </trans-unit>
        <trans-unit id="af021e8e2f7e31249bbdbf57cf033b46fb0d3748" translate="yes" xml:space="preserve">
          <source>Once loaded, parameter variables can be used as module configuration values. Use a variable name wrapped with &lt;code&gt;%&lt;/code&gt; as a placeholder and it will be replaced by its value.</source>
          <target state="translated">ロードされると、パラメーター変数をモジュール構成値として使用できます。 &lt;code&gt;%&lt;/code&gt; でラップされた変数名をプレースホルダーとして使用すると、その値に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="19636e4b97627c58c1026557b93fdf92a53d2a6a" translate="yes" xml:space="preserve">
          <source>Once we have configured our new testing suite, we can create the first sample test:</source>
          <target state="translated">新しいテストスイートを設定したら、最初のサンプルテストを作成することができます。</target>
        </trans-unit>
        <trans-unit id="28f1861e116addd30f9c01a7d6f41d3af5016a9b" translate="yes" xml:space="preserve">
          <source>Once you execute your first build you should see detailed report inside TeamCity interface:</source>
          <target state="translated">最初のビルドを実行すると、TeamCity インターフェースの中に詳細なレポートが表示されるはずです。</target>
        </trans-unit>
        <trans-unit id="8740d0e6618f6abd61e30e1856a5de5a5819d812" translate="yes" xml:space="preserve">
          <source>Once you get testing suite up and running you are interested in running your tests regularly. If you ensure that tests are running on every code change or at least once a day you can be sure that no regression is introduced. This allows to keep you system stable. But developers are not so passionate about running all tests manually, they also can forget to execute tests before pushing code to production&amp;hellip; The solution is simple, test execution should be automated. Instead of running them locally it is better to have dedicated server responsible for running tests for a team. This way we can ensure that everyone&amp;rsquo;s tests executed, which commit made a regression in codebase, and that we can deploy only once tests pass.</source>
          <target state="translated">テストスイートを起動して実行したら、定期的にテストを実行することに関心があります。すべてのコード変更で、または少なくとも1日に1回テストが実行されていることを確認すると、リグレッションが発生しないことを確認できます。これにより、システムを安定させることができます。しかし、開発者はすべてのテストを手動で実行することにそれほど熱心ではなく、コードを本番環境にプッシュする前にテストを実行することを忘れることもあります&amp;hellip;ソリューションはシンプルで、テストの実行は自動化されるべきです。ローカルで実行する代わりに、チームのテストの実行を担当する専用サーバーを用意することをお勧めします。このようにして、コミットによりコードベースでリグレッションが発生したすべてのテストが実行され、テストに合格した場合にのみデプロイできることを確認できます。</target>
        </trans-unit>
        <trans-unit id="dd806f66717e5f7b3266fea84a92c4c06c00b794" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve implemented a simple extension class, you can require it in &lt;code&gt;tests/_bootstrap.php&lt;/code&gt;, load it with Composer&amp;rsquo;s autoloader defined in &lt;code&gt;composer.json&lt;/code&gt;, or store the class inside &lt;code&gt;tests/_support&lt;/code&gt;dir.</source>
          <target state="translated">単純な拡張クラスを実装したら、 &lt;code&gt;tests/_bootstrap.php&lt;/code&gt; でそれを要求したり、 &lt;code&gt;composer.json&lt;/code&gt; で定義されたComposerのオートローダーでロードしたり、 &lt;code&gt;tests/_support&lt;/code&gt; dir 内にクラスを保存したりできます。</target>
        </trans-unit>
        <trans-unit id="9f3f6a6d1d30eea503b463add6b805f6361d176c" translate="yes" xml:space="preserve">
          <source>One Runner for Multiple Applications</source>
          <target state="translated">複数のアプリケーションに対応するワンランナー</target>
        </trans-unit>
        <trans-unit id="a9a842f9b1570abfabda8f558c98dc94930f29f6" translate="yes" xml:space="preserve">
          <source>One of the common issues with functional tests is the use of PHP functions that deal with headers, sessions and cookies. As you may already know, the &lt;code&gt;header&lt;/code&gt; function triggers an error if it is executed after PHP has already output something. In functional tests we run the application multiple times, thus we will get lots of irrelevant errors in the result.</source>
          <target state="translated">機能テストの一般的な問題の1つは、ヘッダー、セッション、Cookieを処理するPHP関数の使用です。すでにご存じかもしれませんが、 &lt;code&gt;header&lt;/code&gt; 関数は、PHPがすでに何かを出力した後で実行されるとエラーをトリガーします。機能テストでは、アプリケーションを複数回実行するため、結果には多くの無関係なエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="87845b4a5501b5b0b6ac40ecf54e9c52dbd77009" translate="yes" xml:space="preserve">
          <source>One of the criticism for testing with Gherkin was that only technical team were aware of how the test scenario is executed. This could have lead to false-positive tests. Developers could have used empty steps for scenarios (or irrelevant ones) and produced invalid tests for valid scenarios. Codeception brings communication to a next level, everyone in a team can understand what happens on a lower (technical) level. Scenario expanding to substeps shows the actual test execution process. Anyone in a team can read the output, and invest their efforts into improving the test suite.</source>
          <target state="translated">Gherkinを使ったテストに対する批判の一つに、テストシナリオがどのように実行されるかを技術チームだけが知っているというものがありました。これは、偽陽性テストにつながる可能性がありました。開発者は、シナリオに空のステップ(または無関係なもの)を使用して、有効なシナリオに対して無効なテストを行っていた可能性があります。コード・セプションは、コミュニケーションを次のレベルに引き上げ、チームの誰もが低い(技術的な)レベルで何が起こっているのかを理解できるようにします。サブステップに拡張されたシナリオは、実際のテスト実行プロセスを示しています。チームの誰もが出力を読むことができ、テストスイートを改善するための努力を投資することができます。</target>
        </trans-unit>
        <trans-unit id="fd227bf06ab8cb4eafef603cfb42ee32e50b974e" translate="yes" xml:space="preserve">
          <source>One of the main advantages of Codeception is that you don&amp;rsquo;t have to decide on just &lt;em&gt;one&lt;/em&gt; type of testing. You can have all three! And chances are, that you will (sooner or later) need all three. That&amp;rsquo;s why Codeception consists of three so-called &amp;ldquo;suites&amp;rdquo;: A &amp;ldquo;unit suite&amp;rdquo; for all unit tests, a &amp;ldquo;functional suite&amp;rdquo; for all functional tests, and an &amp;ldquo;acceptance suite&amp;rdquo; for all acceptance tests.</source>
          <target state="translated">Codeceptionの主な利点の1つは、&lt;em&gt;1&lt;/em&gt;種類のテストだけを決定する必要がないことです。あなたは3つすべてを持つことができます！そして可能性は、あなたが（遅かれ早かれ）3つすべてを必要とするであろうということです。そのため、Codeceptionは3つのいわゆる「スイート」で構成されています。すべての単体テストの「ユニットスイート」、すべての機能テストの「機能スイート」、すべての受け入れテストの「受け入れスイート」です。</target>
        </trans-unit>
        <trans-unit id="ffd54855e308ea8ed78e6d0225c18b2fab2e2386" translate="yes" xml:space="preserve">
          <source>One of the main advantages of Codeception is that you don&amp;rsquo;t have to decide on just &lt;em&gt;one&lt;/em&gt; type of testing. You should have all three! And chances are, that you will (sooner or later) need all three. That&amp;rsquo;s why Codeception consists of three so-called &amp;ldquo;suites&amp;rdquo;: A &amp;ldquo;unit suite&amp;rdquo; for all unit tests, a &amp;ldquo;functional suite&amp;rdquo; for all functional tests, and an &amp;ldquo;acceptance suite&amp;rdquo; for all acceptance tests.</source>
          <target state="translated">Codeceptionの主な利点の1つは、&lt;em&gt;1つの&lt;/em&gt;タイプのテストだけを決定する必要がないことです。あなたは3つすべてを持っている必要があります！そして、（遅かれ早かれ）3つすべてが必要になる可能性があります。そのため、Codeceptionは、すべてのユニットテスト用の「ユニットスイート」、すべての機能テスト用の「機能スイート」、およびすべての受け入れテスト用の「受け入れスイート」の3つのいわゆる「スイート」で構成されています。</target>
        </trans-unit>
        <trans-unit id="822b7e08920b2d42e8e930ff52d610987c687bda" translate="yes" xml:space="preserve">
          <source>One of the main concepts of Codeception is representation of tests as actions of a person. We have a UnitTester, who executes functions and tests the code. We also have a FunctionalTester, a qualified tester, who tests the application as a whole, with knowledge of its internals. Lastly we have an AcceptanceTester, a user who works with our application through an interface that we provide.</source>
          <target state="translated">コードセプションの主なコンセプトの一つは、テストを人の行動として表現することです。私たちには、関数を実行してコードをテストするユニットテスターがいます。また、内部の知識を持ち、アプリケーション全体をテストする資格を持ったテスターであるFunctionalTesterもいます。最後に、当社が提供するインターフェースを介して当社のアプリケーションで作業するユーザーであるアクセプタンステスターがいます。</target>
        </trans-unit>
        <trans-unit id="738ec6e88b120c3df2591b6fea37a60cee840c5c" translate="yes" xml:space="preserve">
          <source>Only field &lt;em&gt;names&lt;/em&gt; may be used, not CSS/XPath selectors nor field labels</source>
          <target state="translated">CSS / XPathセレクターやフィールドラベルではなく、フィールド&lt;em&gt;名&lt;/em&gt;のみを使用できます</target>
        </trans-unit>
        <trans-unit id="7f34eb093b569b808bf1363314a8ee43bf458aaa" translate="yes" xml:space="preserve">
          <source>Only works with PhpBrowser Example Config:</source>
          <target state="translated">PhpBrowser Example Configでのみ動作します。</target>
        </trans-unit>
        <trans-unit id="8530d7d38c3b08716f156a4fe3735c8aad5f52ff" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;RoboFile.php&lt;/code&gt; to edit it</source>
          <target state="translated">&lt;code&gt;RoboFile.php&lt;/code&gt; を開いて編集します</target>
        </trans-unit>
        <trans-unit id="4569f44c1a8218a07ae647acbe40205a84f551f0" translate="yes" xml:space="preserve">
          <source>Open web page at the given absolute URL and sets its hostname as the base host.</source>
          <target state="translated">与えられた絶対URLでWebページを開き、そのホスト名をベースホストに設定します。</target>
        </trans-unit>
        <trans-unit id="fbe9c0cb0650dc43316aa15fa8149c12ef5fadeb" translate="yes" xml:space="preserve">
          <source>Opens a file (downloads from the remote FTP/SFTP system to a tmp directory for processing) and stores it&amp;rsquo;s content.</source>
          <target state="translated">ファイルを開き（リモートFTP / SFTPシステムからtmpディレクトリにダウンロードして処理する）、そのコンテンツを保存します。</target>
        </trans-unit>
        <trans-unit id="871ea5555e7fcb27a4984efbaef070e422bec4b5" translate="yes" xml:space="preserve">
          <source>Opens a file and stores it&amp;rsquo;s content.</source>
          <target state="translated">ファイルを開き、その内容を保存します。</target>
        </trans-unit>
        <trans-unit id="8b4634dcf29856b6e7e723f883a24ec53fc53446" translate="yes" xml:space="preserve">
          <source>Opens a new browser tab (wherever it is possible) and switches to it.</source>
          <target state="translated">新しいブラウザタブを開き(可能な限り)、そのタブに切り替えます。</target>
        </trans-unit>
        <trans-unit id="6e3a0318d31ad570c81b5821aecd3a8df9791266" translate="yes" xml:space="preserve">
          <source>Opens a new browser tab and switches to it.</source>
          <target state="translated">新しいブラウザタブを開いて切り替えます。</target>
        </trans-unit>
        <trans-unit id="4b17b70395d78e1b6f489375fa66246c7c03c166" translate="yes" xml:space="preserve">
          <source>Opens a page with arbitrary request parameters. Useful for testing multi-step forms on a specific step.</source>
          <target state="translated">任意のリクエストパラメータを持つページを開きます。特定のステップでのマルチステップフォームのテストに便利です。</target>
        </trans-unit>
        <trans-unit id="859d658017c51f78bd877699ce2341bef0e11624" translate="yes" xml:space="preserve">
          <source>Opens the page for the given relative URI or route.</source>
          <target state="translated">指定された相対URIまたはルートのページを開きます。</target>
        </trans-unit>
        <trans-unit id="d01375ebf27cc04a778d78bfc50581ff09a904cd" translate="yes" xml:space="preserve">
          <source>Opens the page for the given relative URI.</source>
          <target state="translated">指定された相対URIのページを開きます。</target>
        </trans-unit>
        <trans-unit id="348cbf9b40502a784c85fef922baf0589b9424b0" translate="yes" xml:space="preserve">
          <source>Opens web page by action name</source>
          <target state="translated">アクション名でWebページを開く</target>
        </trans-unit>
        <trans-unit id="1c14f4e7eb4f325d3bb9eae1d60bf41a263f0384" translate="yes" xml:space="preserve">
          <source>Opens web page using route name and parameters.</source>
          <target state="translated">ルート名とパラメータを使用したWebページを開きます。</target>
        </trans-unit>
        <trans-unit id="bdf6bd7e880a4a736d0948a66e4a89c9c2e6d893" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;code&gt;seeElementInDOM&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;seeElementInDOM&lt;/code&gt; の反対。</target>
        </trans-unit>
        <trans-unit id="b777b1cd132d688dd46cd988eaf36d9e7f9cb4e0" translate="yes" xml:space="preserve">
          <source>Opposite to &lt;code&gt;seeBinaryResponseEquals&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;seeBinaryResponseEquals&lt;/code&gt; の反対</target>
        </trans-unit>
        <trans-unit id="c5d6f62c6d61a460e2a3f98ebf834c0da4d00b57" translate="yes" xml:space="preserve">
          <source>Opposite to &lt;code&gt;seeResponseMatchesJsonType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;seeResponseMatchesJsonType&lt;/code&gt; の反対。</target>
        </trans-unit>
        <trans-unit id="34936c5e29c69ddf1d7cc5508fac71f1417dc982" translate="yes" xml:space="preserve">
          <source>Opposite to &lt;code&gt;seeSoapResponseContainsStructure&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;seeSoapResponseContainsStructure&lt;/code&gt; の反対</target>
        </trans-unit>
        <trans-unit id="0713bfc9e0b4186d5469fe59a84416713dbd408c" translate="yes" xml:space="preserve">
          <source>Opposite to seeResponseContainsJson</source>
          <target state="translated">seeResponseContainsJson の反対側</target>
        </trans-unit>
        <trans-unit id="8dc0ca7d030e874eb6c7d00e0851321becfec211" translate="yes" xml:space="preserve">
          <source>Opposite to seeResponseJsonMatchesJsonPath</source>
          <target state="translated">seeResponseJsonMatchesJsonPathの反対側</target>
        </trans-unit>
        <trans-unit id="d573bbfd69a89cfb97e8fd0d3b7ee393f4202861" translate="yes" xml:space="preserve">
          <source>Opposite to seeResponseJsonMatchesXpath</source>
          <target state="translated">seeResponseJsonMatchesXpathの反対側</target>
        </trans-unit>
        <trans-unit id="63ee95736a1f30c3d890b7d771bbb08a9aceff53" translate="yes" xml:space="preserve">
          <source>Optional and mandatory parameters can be accessed through the &lt;code&gt;$config&lt;/code&gt; property. Use &lt;code&gt;$this-&amp;gt;config['parameter']&lt;/code&gt; to get its value.</source>
          <target state="translated">オプションおよび必須パラメーターには、 &lt;code&gt;$config&lt;/code&gt; プロパティーを介してアクセスできます。使用し &lt;code&gt;$this-&amp;gt;config['parameter']&lt;/code&gt; の値を取得します。</target>
        </trans-unit>
        <trans-unit id="82186ffa3451e32c5971aac10bd0fbcb32a4962f" translate="yes" xml:space="preserve">
          <source>Or provide an associative array for the second argument to specifically define which selection method should be used:</source>
          <target state="translated">あるいは、第二引数に連想配列を指定して、 どの選択方法を使用するかを具体的に定義します。</target>
        </trans-unit>
        <trans-unit id="b13f3146bc3a7f62da09199ac82923fd939d9bc3" translate="yes" xml:space="preserve">
          <source>Or simply run the whole set of unit tests with:</source>
          <target state="translated">あるいは、ユニットテストの全セットを実行するだけです。</target>
        </trans-unit>
        <trans-unit id="cbfd9c0342ea40fe4ac75aa275358f5c55ec173d" translate="yes" xml:space="preserve">
          <source>Or use native Selenium functions to get access to all opened windows:</source>
          <target state="translated">または、ネイティブのSelenium関数を使用して、開いているすべてのウィンドウにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="8a1681e612a2025087b703fdf1f8f617e506b053" translate="yes" xml:space="preserve">
          <source>Oracle</source>
          <target state="translated">Oracle</target>
        </trans-unit>
        <trans-unit id="dbec6f8e8af6e56f4dd06cd55030eb1ec462b9e5" translate="yes" xml:space="preserve">
          <source>Oracle: &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-oci.connection.php&quot;&gt;PDO_OCI DSN&lt;/a&gt;</source>
          <target state="translated">Oracle：&lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-oci.connection.php&quot;&gt;PDO_OCI DSN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f07fddc901011fa8c4931fbdeb8407e823293a60" translate="yes" xml:space="preserve">
          <source>Other types: $value items will be appended to its value</source>
          <target state="translated">その他のタイプ:$value の項目は、その値に追加されます。</target>
        </trans-unit>
        <trans-unit id="344955358e51fff72a55a33ceaf8d4d958d1d6e9" translate="yes" xml:space="preserve">
          <source>Override config values:</source>
          <target state="translated">設定値を上書きします。</target>
        </trans-unit>
        <trans-unit id="4dec244bc13bc832e538061ae125b5c0b7d69402" translate="yes" xml:space="preserve">
          <source>Override this class to create customized setup.</source>
          <target state="translated">このクラスをオーバーライドして、カスタマイズされた設定を作成します。</target>
        </trans-unit>
        <trans-unit id="c853e87a185f835bfcb6bc4370d903833fd2d32a" translate="yes" xml:space="preserve">
          <source>PDO dsn elements for the supported drivers:</source>
          <target state="translated">サポートされているドライバのPDO dsn要素。</target>
        </trans-unit>
        <trans-unit id="71b69b4450076ad05a90a29dba4aa98e28a76ee0" translate="yes" xml:space="preserve">
          <source>PHP Framework (Routing, Controllers, etc.)</source>
          <target state="translated">PHP フレームワーク (ルーティング、コントローラなど)</target>
        </trans-unit>
        <trans-unit id="7c97b4e56c6d64efaacd1fb079ad43579de66706" translate="yes" xml:space="preserve">
          <source>PHP with &lt;a href=&quot;https://php.net/manual/book.curl.php&quot;&gt;cURL extension&lt;/a&gt;</source>
          <target state="translated">PHPと&lt;a href=&quot;https://php.net/manual/book.curl.php&quot;&gt;cURL拡張&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28bd1991c93d79132130ade814e2ca3e7be714ae" translate="yes" xml:space="preserve">
          <source>PHPUnit tests are first-class citizens in test suites. Whenever you need to write and execute unit tests, you don&amp;rsquo;t need to install PHPUnit separately, but use Codeception directly to execute them. Some nice features can be added to common unit tests by integrating Codeception modules. For most unit and integration testing, PHPUnit tests are enough. They run fast, and are easy to maintain.</source>
          <target state="translated">PHPUnitテストは、テストスイートの第一級市民です。単体テストを作成して実行する必要がある場合は、PHPUnitを個別にインストールする必要はありませんが、Codeceptionを直接使用して実行します。Codeceptionモジュールを統合することにより、いくつかの優れた機能を一般的な単体テストに追加できます。ほとんどのユニットおよび統合テストでは、PHPUnitテストで十分です。実行速度が速く、保守が容易です。</target>
        </trans-unit>
        <trans-unit id="c0d3610557d578dda66ec451acf1e511846f37f5" translate="yes" xml:space="preserve">
          <source>Page in browser (Chrome, Firefox, or PhpBrowser)</source>
          <target state="translated">ブラウザ(Chrome、Firefox、PhpBrowser)のページ</target>
        </trans-unit>
        <trans-unit id="fe415b842b489c5dc99b009a2f7b5f1df5988e12" translate="yes" xml:space="preserve">
          <source>PageObjects</source>
          <target state="translated">PageObjects</target>
        </trans-unit>
        <trans-unit id="6601f4e97a668d54d5d17ac20ba42721ee89d81e" translate="yes" xml:space="preserve">
          <source>Pair this with seeInFormFields for quick testing magic.</source>
          <target state="translated">これを seeInFormFields と組み合わせて、素早くテストできる魔法のようにします。</target>
        </trans-unit>
        <trans-unit id="5b473fa33d9a87cad37aae94a71e98902ec106be" translate="yes" xml:space="preserve">
          <source>Pair this with submitForm for quick testing magic.</source>
          <target state="translated">これをsubmitFormと組み合わせて、素早くテストを行うことができます。</target>
        </trans-unit>
        <trans-unit id="2b338af39aea20defe562c404d22d384da1fb4d9" translate="yes" xml:space="preserve">
          <source>Parallel Execution</source>
          <target state="translated">並列実行</target>
        </trans-unit>
        <trans-unit id="0b34f2bb3b9a5eaccb5fd1add1878063ebefe1cd" translate="yes" xml:space="preserve">
          <source>Parallel Test Execution consists of 3 steps:</source>
          <target state="translated">並列テストの実行は3つのステップで構成されています。</target>
        </trans-unit>
        <trans-unit id="71488f3f62762ee78dcb4650dc9a9c87d5ed5355" translate="yes" xml:space="preserve">
          <source>Parameter can be passed either as XmlBuilder, DOMDocument, DOMNode, XML string, or array (if no attributes).</source>
          <target state="translated">パラメータは、XmlBuilder、DOMDocument、DOMNode、XML 文字列、または配列 (属性がない場合)のいずれかで渡すことができます。</target>
        </trans-unit>
        <trans-unit id="c9836d13cae6044e0d330899d6ec166d2b0967c0" translate="yes" xml:space="preserve">
          <source>Parameter values can be set to arrays for multiple input fields of the same name, or multi-select combo boxes. For checkboxes, you can use either the string value or boolean &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; which will be replaced by the checkbox&amp;rsquo;s value in the DOM.</source>
          <target state="translated">パラメータ値は、同じ名前の複数の入力フィールドの配列、または複数選択のコンボボックスに設定できます。チェックボックスの場合、文字列値またはブール値の &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; のいずれかを使用できます。これは、DOMのチェックボックスの値に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="0ecf9264fc8df621705108bb255974f67af7c2ac" translate="yes" xml:space="preserve">
          <source>Parameter values must be set to arrays for multiple input fields of the same name, or multi-select combo boxes. For checkboxes, either the string value can be used, or boolean values which will be replaced by the checkbox&amp;rsquo;s value in the DOM.</source>
          <target state="translated">パラメータ値は、同じ名前の複数の入力フィールドの配列、または複数選択のコンボボックスに設定する必要があります。チェックボックスの場合、文字列値を使用するか、DOMのチェックボックスの値で置き換えられるブール値を使用できます。</target>
        </trans-unit>
        <trans-unit id="bb20837bdb12116fef34714454b61d8b045d2b7b" translate="yes" xml:space="preserve">
          <source>Parameters are also useful to provide connection credentials for the &lt;code&gt;Db&lt;/code&gt; module (taken from Laravel&amp;rsquo;s .env files):</source>
          <target state="translated">パラメータは、 &lt;code&gt;Db&lt;/code&gt; モジュール（Laravelの.envファイルから取得）の接続資格情報を提供する場合にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="61dad3245a3df449deb9e9fc49d06171ff14c248" translate="yes" xml:space="preserve">
          <source>Parameters can be also passed in non-regex strings using &amp;ldquo;:&amp;rdquo; params placeholder.</source>
          <target state="translated">パラメータは、 &quot;：&quot; paramsプレースホルダーを使用して、正規表現以外の文字列で渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="3de1563e7b818cfded0c4a774e4e2d3c01b4a03e" translate="yes" xml:space="preserve">
          <source>Parameters can be passed either as DOMDocument, DOMNode, XML string, or array (if no attributes).</source>
          <target state="translated">パラメータは DOMDocument、DOMNode、XML 文字列、配列 (属性がない場合)のいずれかで渡すことができます。</target>
        </trans-unit>
        <trans-unit id="e374280917e63835731fd8e1962821b9f55cf329" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">Parts</target>
        </trans-unit>
        <trans-unit id="1c29496c0ae759c3354f1171f196cff228a8bcd0" translate="yes" xml:space="preserve">
          <source>Pass the copied seed into &lt;code&gt;--seed&lt;/code&gt; option:</source>
          <target state="translated">コピーしたシードを &lt;code&gt;--seed&lt;/code&gt; オプションに渡します。</target>
        </trans-unit>
        <trans-unit id="a84c1baf8e9324ea35417efdfec50d4b3ee55573" translate="yes" xml:space="preserve">
          <source>Perform a click on a link or a button, given by a locator. If a fuzzy locator is given, the page will be searched for a button, link, or image matching the locator string. For buttons, the &amp;ldquo;value&amp;rdquo; attribute, &amp;ldquo;name&amp;rdquo; attribute, and inner text are searched. For links, the link text is searched. For images, the &amp;ldquo;alt&amp;rdquo; attribute and inner text of any parent links are searched.</source>
          <target state="translated">ロケータによって指定されたリンクまたはボタンをクリックします。あいまいなロケーターが指定された場合、ロケーター文字列に一致するボタン、リンク、または画像がページで検索されます。ボタンの場合、「値」属性、「名前」属性、および内部テキストが検索されます。リンクの場合、リンクテキストが検索されます。画像の場合、「alt」属性と親リンクの内部テキストが検索されます。</target>
        </trans-unit>
        <trans-unit id="79517a2bda86e74958d9cbef9a40e671a1880bfd" translate="yes" xml:space="preserve">
          <source>Performs $em-&amp;gt;clear():</source>
          <target state="translated">$ em-&amp;gt; clear（）を実行します：</target>
        </trans-unit>
        <trans-unit id="2bdce350768687e9068e2bcf99387620e996e221" translate="yes" xml:space="preserve">
          <source>Performs $em-&amp;gt;flush();</source>
          <target state="translated">$ em-&amp;gt; flush（）;を実行します。</target>
        </trans-unit>
        <trans-unit id="d82d75be93bc9783533cb1164da27f8ca2f096ca" translate="yes" xml:space="preserve">
          <source>Performs $em-&amp;gt;refresh() on every passed entity:</source>
          <target state="translated">渡されたすべてのエンティティに対して$ em-&amp;gt; refresh（）を実行します。</target>
        </trans-unit>
        <trans-unit id="9f61634a4425fd77b0f0773273c1a27f54c49910" translate="yes" xml:space="preserve">
          <source>Performs a cleanup by flushing all values after each test run.</source>
          <target state="translated">各テスト実行後にすべての値をフラッシュしてクリーンアップを実行します。</target>
        </trans-unit>
        <trans-unit id="269d9e4aa1cb56f9847a4abf8b67b1ff0812c58a" translate="yes" xml:space="preserve">
          <source>Performs a double-click on an element matched by CSS or XPath.</source>
          <target state="translated">CSS または XPath でマッチした要素をダブルクリックします。</target>
        </trans-unit>
        <trans-unit id="cf323c9f71f661fda889fb05f2595d1702a3e7be" translate="yes" xml:space="preserve">
          <source>Performs a simple mouse drag-and-drop operation.</source>
          <target state="translated">簡単なマウスのドラッグ&amp;ドロップ操作を実行します。</target>
        </trans-unit>
        <trans-unit id="838b51bcc85fd01f1a4d614588829b75b2eb25b1" translate="yes" xml:space="preserve">
          <source>Performs click with the left mouse button on an element. If the first parameter &lt;code&gt;null&lt;/code&gt; then the offset is relative to the actual mouse position. If the second and third parameters are given, then the mouse is moved to an offset of the element&amp;rsquo;s top-left corner. Otherwise, the mouse is moved to the center of the element.</source>
          <target state="translated">要素をマウスの左ボタンでクリックします。最初のパラメーターが &lt;code&gt;null&lt;/code&gt; の場合、オフセットは実際のマウス位置を基準にしています。2番目と3番目のパラメーターが指定されている場合、マウスは要素の左上隅のオフセットに移動します。それ以外の場合、マウスは要素の中心に移動します。</target>
        </trans-unit>
        <trans-unit id="8c301ddcbe48abf77066100f9edfed836b71bd97" translate="yes" xml:space="preserve">
          <source>Performs contextual click with the right mouse button on an element. If the first parameter &lt;code&gt;null&lt;/code&gt; then the offset is relative to the actual mouse position. If the second and third parameters are given, then the mouse is moved to an offset of the element&amp;rsquo;s top-left corner. Otherwise, the mouse is moved to the center of the element.</source>
          <target state="translated">要素上でマウスの右ボタンを使用してコンテキストクリックを実行します。最初のパラメーターが &lt;code&gt;null&lt;/code&gt; の場合、オフセットは実際のマウス位置を基準にしています。2番目と3番目のパラメーターが指定されている場合、マウスは要素の左上隅のオフセットに移動します。それ以外の場合、マウスは要素の中心に移動します。</target>
        </trans-unit>
        <trans-unit id="1499c081bd22816ee0eefccade5960b8e22b5e63" translate="yes" xml:space="preserve">
          <source>Persists a record into the repository. This method creates an entity, and sets its properties directly (via reflection). Setters of the entity won&amp;rsquo;t be executed, but you can create almost any entity and save it to the database. If the entity has a constructor, for optional parameters the default value will be used and for non-optional parameters the given fields (with a matching name) will be passed when calling the constructor before the properties get set directly (via reflection).</source>
          <target state="translated">レコードをリポジトリに永続化します。このメソッドはエンティティを作成し、そのプロパティを直接（リフレクションを介して）設定します。エンティティのセッターは実行されませんが、ほとんどすべてのエンティティを作成してデータベースに保存できます。エンティティにコンストラクターがある場合、オプションのパラメーターの場合はデフォルト値が使用され、オプションでないパラメーターの場合は、プロパティが直接（リフレクションを介して）設定される前にコンストラクターを呼び出すときに、指定されたフィールド（名前が一致する）が渡されます。</target>
        </trans-unit>
        <trans-unit id="9d9f473468082a18fb1c9199e1c16db7cf4d49cd" translate="yes" xml:space="preserve">
          <source>Persists record into repository. This method creates an entity, and sets its properties directly (via reflection). Setters of entity won&amp;rsquo;t be executed, but you can create almost any entity and save it to database. Returns id using &lt;code&gt;getId&lt;/code&gt; of newly created entity.</source>
          <target state="translated">レコードをリポジトリに永続化します。このメソッドはエンティティを作成し、そのプロパティを直接（リフレクションを介して）設定します。エンティティのセッターは実行されませんが、ほぼすべてのエンティティを作成してデータベースに保存できます。新しく作成されたエンティティの &lt;code&gt;getId&lt;/code&gt; を使用してIDを返します。</target>
        </trans-unit>
        <trans-unit id="af1fa602711ccfe2f7f4502c89ad41e789aa3dc9" translate="yes" xml:space="preserve">
          <source>Phalcon</source>
          <target state="translated">Phalcon</target>
        </trans-unit>
        <trans-unit id="04940b0f6206ccc594e8359d0ea64be48454a7d8" translate="yes" xml:space="preserve">
          <source>Phalcon 4</source>
          <target state="translated">ファルコン4</target>
        </trans-unit>
        <trans-unit id="2f583d43dacbd7fd736c30640703ddcf729b1547" translate="yes" xml:space="preserve">
          <source>Phalcon4</source>
          <target state="translated">Phalcon4</target>
        </trans-unit>
        <trans-unit id="ac5585075012d3db87e158c18fc6fd209c4a6b8a" translate="yes" xml:space="preserve">
          <source>Phalcon::_findElements</source>
          <target state="translated">Phalcon::_findElements</target>
        </trans-unit>
        <trans-unit id="fa50b62251d8c340aa353d093b6a0840f6b439e9" translate="yes" xml:space="preserve">
          <source>Phalcon::_getResponseContent</source>
          <target state="translated">Phalcon::_getResponseContent</target>
        </trans-unit>
        <trans-unit id="60a4d8d8962fa8702a68c487c0d1f7b68734d544" translate="yes" xml:space="preserve">
          <source>Phalcon::_loadPage</source>
          <target state="translated">Phalcon::_loadPage</target>
        </trans-unit>
        <trans-unit id="e006494a7cf371bc3066a3ef460dd4638967c52c" translate="yes" xml:space="preserve">
          <source>Phalcon::_request</source>
          <target state="translated">Phalcon::_request</target>
        </trans-unit>
        <trans-unit id="a28a7c9b6e480f13ff6407f1d40f009f9c5fbdee" translate="yes" xml:space="preserve">
          <source>Phalcon::_savePageSource</source>
          <target state="translated">Phalcon::_savePageSource</target>
        </trans-unit>
        <trans-unit id="7a8b2c875d7ece6b2bec7409ae2334d771e99a0a" translate="yes" xml:space="preserve">
          <source>Phalcon::addServiceToContainer</source>
          <target state="translated">Phalcon::addServiceToContainer</target>
        </trans-unit>
        <trans-unit id="cb8e3d47d1193144c44283eab7ca97c51f7f7563" translate="yes" xml:space="preserve">
          <source>Phalcon::amHttpAuthenticated</source>
          <target state="translated">Phalcon::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="10aedd8418556f0b6e675debdc7975e6567baebf" translate="yes" xml:space="preserve">
          <source>Phalcon::amOnPage</source>
          <target state="translated">Phalcon::amOnPage</target>
        </trans-unit>
        <trans-unit id="0be14b3b87b21e5e9c6ea3a9e5de25c6b2f76694" translate="yes" xml:space="preserve">
          <source>Phalcon::amOnRoute</source>
          <target state="translated">Phalcon::amOnRoute</target>
        </trans-unit>
        <trans-unit id="00a31c86331a70b249470e16798915f92c8ceff1" translate="yes" xml:space="preserve">
          <source>Phalcon::attachFile</source>
          <target state="translated">Phalcon::attachFile</target>
        </trans-unit>
        <trans-unit id="0fc100aa0a2a20dda752ff3e914c2b063c43d1b8" translate="yes" xml:space="preserve">
          <source>Phalcon::checkOption</source>
          <target state="translated">Phalcon::checkOption</target>
        </trans-unit>
        <trans-unit id="2312dc835fe470aa52bdf663b4c4fbe2962a0e2c" translate="yes" xml:space="preserve">
          <source>Phalcon::click</source>
          <target state="translated">Phalcon::click</target>
        </trans-unit>
        <trans-unit id="1f01c1549300716afc19e7b77a2aa1d0107637c1" translate="yes" xml:space="preserve">
          <source>Phalcon::deleteHeader</source>
          <target state="translated">Phalcon::deleteHeader</target>
        </trans-unit>
        <trans-unit id="96e5f48a3ce87a9b063bf9eb64fd95b0970ce193" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSee</source>
          <target state="translated">Phalcon::dontSee</target>
        </trans-unit>
        <trans-unit id="c77357bbe1ad6c82de82acc35d60ac428b7fcfb2" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeCheckboxIsChecked</source>
          <target state="translated">Phalcon::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="090a67dca948c51b88a421804407b9000f45db10" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeCookie</source>
          <target state="translated">Phalcon::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="751aa5eebe2a0f4764701309aee92d84af6e9fcd" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeCurrentUrlEquals</source>
          <target state="translated">Phalcon::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="bed4c025c6a94b016fa7214f882a01f4e0668098" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeCurrentUrlMatches</source>
          <target state="translated">Phalcon::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="8812a0b56bf4b8c0a69fd009973384c46d8d6ccf" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeElement</source>
          <target state="translated">Phalcon::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="fbf85d2ddb64027617f2692adfbff81539891b63" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeInCurrentUrl</source>
          <target state="translated">Phalcon::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="7067dc079ae511ae7ce919caab1acb5a5d0ba8fa" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeInField</source>
          <target state="translated">Phalcon::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="95dd9503b0fed1defa6d9d782a3f47dcbcce881a" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeInFormFields</source>
          <target state="translated">Phalcon::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="76e65e1ece806c15ffda0a0bce05112ab72a472e" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeInSource</source>
          <target state="translated">Phalcon::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="b846e0c0d7e5b16ff995bd474223183faa07e132" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeInTitle</source>
          <target state="translated">Phalcon::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="968d3f78563e1324a8702cbf71fecbdeac5554e7" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeLink</source>
          <target state="translated">Phalcon::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="6227dd98e2072e90544b8f232f5a2ab13f3edb74" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeOptionIsSelected</source>
          <target state="translated">Phalcon::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="f40196a6aa4969b3cfa466526cf044d5f3657634" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeRecord</source>
          <target state="translated">Phalcon::dontSeeRecord</target>
        </trans-unit>
        <trans-unit id="b93b67ad85b4d1539f783fa8dd0d08d5b45336b6" translate="yes" xml:space="preserve">
          <source>Phalcon::dontSeeResponseCodeIs</source>
          <target state="translated">Phalcon::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="0f87e181f32ed7176d6bd9d4eaa19b0a4da0912f" translate="yes" xml:space="preserve">
          <source>Phalcon::fillField</source>
          <target state="translated">Phalcon::fillField</target>
        </trans-unit>
        <trans-unit id="0dae92f5d84a847eba6cbfe9004b89ab31619bc8" translate="yes" xml:space="preserve">
          <source>Phalcon::getApplication</source>
          <target state="translated">Phalcon::getApplication</target>
        </trans-unit>
        <trans-unit id="f40466ec6b593c1b32ef642a5fc628cbbdd549ae" translate="yes" xml:space="preserve">
          <source>Phalcon::grabAttributeFrom</source>
          <target state="translated">Phalcon::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="898a8aea62c7d21051652252593f09b6f70eb458" translate="yes" xml:space="preserve">
          <source>Phalcon::grabCookie</source>
          <target state="translated">Phalcon::grabCookie</target>
        </trans-unit>
        <trans-unit id="bf816711c5fb9d0159f0b108afedc4ccf559cd03" translate="yes" xml:space="preserve">
          <source>Phalcon::grabFromCurrentUrl</source>
          <target state="translated">Phalcon::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="09f29a1ecdd4ec696aff78ce00847cb0c4bb0703" translate="yes" xml:space="preserve">
          <source>Phalcon::grabMultiple</source>
          <target state="translated">Phalcon::grabMultiple</target>
        </trans-unit>
        <trans-unit id="913379f0bda676cd8fc983a48f0e136f2f063629" translate="yes" xml:space="preserve">
          <source>Phalcon::grabPageSource</source>
          <target state="translated">Phalcon::grabPageSource</target>
        </trans-unit>
        <trans-unit id="ce53d3a46a01ed8f127ed6ec699492df9ce17e17" translate="yes" xml:space="preserve">
          <source>Phalcon::grabRecord</source>
          <target state="translated">Phalcon::grabRecord</target>
        </trans-unit>
        <trans-unit id="12e3f74d54308af118dc0fbdea22c4d3820275c5" translate="yes" xml:space="preserve">
          <source>Phalcon::grabServiceFromContainer</source>
          <target state="translated">Phalcon::grabServiceFromContainer</target>
        </trans-unit>
        <trans-unit id="e484e29422663cd0b4cf87c0a128c340f0973a29" translate="yes" xml:space="preserve">
          <source>Phalcon::grabTextFrom</source>
          <target state="translated">Phalcon::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="ad47f832a81cd4e31189c2a9f9b9b4b1dee9bb31" translate="yes" xml:space="preserve">
          <source>Phalcon::grabValueFrom</source>
          <target state="translated">Phalcon::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="874192ce7adce9f3008a011ed41e67e659344c1b" translate="yes" xml:space="preserve">
          <source>Phalcon::haveHttpHeader</source>
          <target state="translated">Phalcon::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="6e1ee25c9f5cc4c002e9dba53122ec6472abf51a" translate="yes" xml:space="preserve">
          <source>Phalcon::haveInSession</source>
          <target state="translated">Phalcon::haveInSession</target>
        </trans-unit>
        <trans-unit id="ec12b34b59bec766bb3c478c06444a1dd66dcee9" translate="yes" xml:space="preserve">
          <source>Phalcon::haveRecord</source>
          <target state="translated">Phalcon::haveRecord</target>
        </trans-unit>
        <trans-unit id="22a9122ba06dd02a2b1ff16482920b17cf140a64" translate="yes" xml:space="preserve">
          <source>Phalcon::makeHtmlSnapshot</source>
          <target state="translated">Phalcon::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="b5be9a5094ff772f93d03486dd46d19b1fa678fb" translate="yes" xml:space="preserve">
          <source>Phalcon::moveBack</source>
          <target state="translated">Phalcon::moveBack</target>
        </trans-unit>
        <trans-unit id="a6a4897568a8f99a846cddf9fad075f725f9011e" translate="yes" xml:space="preserve">
          <source>Phalcon::resetCookie</source>
          <target state="translated">Phalcon::resetCookie</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
