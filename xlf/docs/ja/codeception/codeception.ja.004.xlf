<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="codeception">
    <body>
      <group id="codeception">
        <trans-unit id="f77cb4e413994dc0142d32b58f3361ed6be377ce" translate="yes" xml:space="preserve">
          <source>Phalcon::see</source>
          <target state="translated">Phalcon::see</target>
        </trans-unit>
        <trans-unit id="a134876725e2cb1d998ccf7414158522e2679bca" translate="yes" xml:space="preserve">
          <source>Phalcon::seeCheckboxIsChecked</source>
          <target state="translated">Phalcon::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="827b11a79f78e18f07c49f44bae7e3983cbd79db" translate="yes" xml:space="preserve">
          <source>Phalcon::seeCookie</source>
          <target state="translated">Phalcon::seeCookie</target>
        </trans-unit>
        <trans-unit id="f946d7b1aeca7a775e2dbca7c7ee1a5cf54d8c7c" translate="yes" xml:space="preserve">
          <source>Phalcon::seeCurrentRouteIs</source>
          <target state="translated">Phalcon::seeCurrentRouteIs</target>
        </trans-unit>
        <trans-unit id="634af2a85dca2577afa722b6558a08c5fed1014b" translate="yes" xml:space="preserve">
          <source>Phalcon::seeCurrentUrlEquals</source>
          <target state="translated">Phalcon::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="396dc072ff57a65d5d3eeaddee9ae21d46892b1a" translate="yes" xml:space="preserve">
          <source>Phalcon::seeCurrentUrlMatches</source>
          <target state="translated">Phalcon::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="0d9d04dd474348d580fbc55568d2fa619d455d24" translate="yes" xml:space="preserve">
          <source>Phalcon::seeElement</source>
          <target state="translated">Phalcon::seeElement</target>
        </trans-unit>
        <trans-unit id="7871b5e66e710368582632828dfef69d45d6cd45" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInCurrentUrl</source>
          <target state="translated">Phalcon::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="3fcb871bae002de60df83ac8e9ae7279fa946901" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInField</source>
          <target state="translated">Phalcon::seeInField</target>
        </trans-unit>
        <trans-unit id="71a0cc31801d5468786e63c38d084c70d3d16223" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInFormFields</source>
          <target state="translated">Phalcon::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="0911436d3feecf437d9fc3b72daf263078889c36" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInSession</source>
          <target state="translated">Phalcon::seeInSession</target>
        </trans-unit>
        <trans-unit id="28c4e99c4dd988752aecea5d03e378aa65ac4eff" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInSource</source>
          <target state="translated">Phalcon::seeInSource</target>
        </trans-unit>
        <trans-unit id="4ebb45f07266e834738f6fbed33c6530053d1c99" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInTitle</source>
          <target state="translated">Phalcon::seeInTitle</target>
        </trans-unit>
        <trans-unit id="0a04a32ca20a1dc567ed5336fd7d5d1f04c359b3" translate="yes" xml:space="preserve">
          <source>Phalcon::seeLink</source>
          <target state="translated">Phalcon::seeLink</target>
        </trans-unit>
        <trans-unit id="31c33eb477c62a179d1712ec9d562ee6dff18e46" translate="yes" xml:space="preserve">
          <source>Phalcon::seeNumberOfElements</source>
          <target state="translated">Phalcon::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="0750fc3d249f2c6c3af7c5f1ee56a61b70bc5b85" translate="yes" xml:space="preserve">
          <source>Phalcon::seeNumberOfRecords</source>
          <target state="translated">Phalcon::seeNumberOfRecords</target>
        </trans-unit>
        <trans-unit id="65c62fe64a1aacd7beb8a25066ec5f612b10941d" translate="yes" xml:space="preserve">
          <source>Phalcon::seeOptionIsSelected</source>
          <target state="translated">Phalcon::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="f509f2f336fad96ed4cfdb558c12fffa87c71334" translate="yes" xml:space="preserve">
          <source>Phalcon::seePageNotFound</source>
          <target state="translated">Phalcon::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="81247a6f829be73c6d6fa8e943339e32687bfb6f" translate="yes" xml:space="preserve">
          <source>Phalcon::seeRecord</source>
          <target state="translated">Phalcon::seeRecord</target>
        </trans-unit>
        <trans-unit id="a8ceac312670b7ef61d69c4bdf631091914d9b65" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIs</source>
          <target state="translated">Phalcon::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="06581b01e1ad414728dbac3bad018a02eefbcf55" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIsBetween</source>
          <target state="translated">Phalcon::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="73488f19c333db016f8f0017368036bd839c2f4b" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIsClientError</source>
          <target state="translated">Phalcon::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="165dcf4b63adeb55dc0f541d0e799a79118d1ff0" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIsRedirection</source>
          <target state="translated">Phalcon::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="154686f13c639faf637d5c62bf5fd2553ff74ccc" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIsServerError</source>
          <target state="translated">Phalcon::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="e5eedb8ccd148dbaa0823c287f9003172b1ae3f8" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIsSuccessful</source>
          <target state="translated">Phalcon::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="32b4c8c9bde9155865114419b505cc8caeb34aec" translate="yes" xml:space="preserve">
          <source>Phalcon::seeSessionHasValues</source>
          <target state="translated">Phalcon::seeSessionHasValues</target>
        </trans-unit>
        <trans-unit id="d07e5a541afae1f600fd9b2f716bc80284d020f2" translate="yes" xml:space="preserve">
          <source>Phalcon::selectOption</source>
          <target state="translated">Phalcon::selectOption</target>
        </trans-unit>
        <trans-unit id="ee85ffcde6d43ff5754ce2e9ce211bfd00f5c205" translate="yes" xml:space="preserve">
          <source>Phalcon::sendAjaxGetRequest</source>
          <target state="translated">Phalcon::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="cd23d4e7222e84d6e7ff5354e22fd7dda1a11dba" translate="yes" xml:space="preserve">
          <source>Phalcon::sendAjaxPostRequest</source>
          <target state="translated">Phalcon::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="eed684ca4725d0dc67fb5e032800a9569b25c2a3" translate="yes" xml:space="preserve">
          <source>Phalcon::sendAjaxRequest</source>
          <target state="translated">Phalcon::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="bd3f2696ae7c0f89dfe868fb8e024cc1252dd5e3" translate="yes" xml:space="preserve">
          <source>Phalcon::setCookie</source>
          <target state="translated">Phalcon::setCookie</target>
        </trans-unit>
        <trans-unit id="ec7dfd3a8f383f5e1c318f1a21c1642dcbedac5a" translate="yes" xml:space="preserve">
          <source>Phalcon::submitForm</source>
          <target state="translated">Phalcon::submitForm</target>
        </trans-unit>
        <trans-unit id="4dcfe01fe4cc600066ac0abb36d90133527f8c8f" translate="yes" xml:space="preserve">
          <source>Phalcon::switchToIframe</source>
          <target state="translated">Phalcon::switchToIframe</target>
        </trans-unit>
        <trans-unit id="c2315d9142838a2636cddd771d524d2656197fbe" translate="yes" xml:space="preserve">
          <source>Phalcon::uncheckOption</source>
          <target state="translated">Phalcon::uncheckOption</target>
        </trans-unit>
        <trans-unit id="b8bed22cf1b3b99982548247f8ec5e6aed1e273b" translate="yes" xml:space="preserve">
          <source>PhantomJS</source>
          <target state="translated">PhantomJS</target>
        </trans-unit>
        <trans-unit id="937ca26ff674098153540d64d1830389a149b49b" translate="yes" xml:space="preserve">
          <source>PhantomJS is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Headless_browser&quot;&gt;headless browser&lt;/a&gt; alternative to Selenium Server that implements &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol&quot;&gt;the WebDriver protocol&lt;/a&gt;. It allows you to run Selenium tests on a server without a GUI installed.</source>
          <target state="translated">PhantomJSは&lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol&quot;&gt;、WebDriverプロトコル&lt;/a&gt;を実装するSelenium Serverに代わる&lt;a href=&quot;https://en.wikipedia.org/wiki/Headless_browser&quot;&gt;ヘッドレスブラウザ&lt;/a&gt;です。GUIがインストールされていないサーバーでSeleniumテストを実行できます。</target>
        </trans-unit>
        <trans-unit id="b1b05da55236a9a5de9117128dcb4752ac2a8073" translate="yes" xml:space="preserve">
          <source>PhantomJS is a customized WebKit-based &lt;a href=&quot;https://en.wikipedia.org/wiki/Headless_browser&quot;&gt;headless browser&lt;/a&gt; built for programmatic usage only. It doesn&amp;rsquo;t display a browser window and doesn&amp;rsquo;t require GUI (display server) to be installed. This makes PhantomJS highly popular for Continuous Integration systems. PhantomJS needs only one binary with no extra dependencies which make it the simplest WebDriver tool to install.</source>
          <target state="translated">PhantomJSは、プログラムでの使用のみを目的として構築された、カスタマイズされたWebKitベースの&lt;a href=&quot;https://en.wikipedia.org/wiki/Headless_browser&quot;&gt;ヘッドレスブラウザーです&lt;/a&gt;。ブラウザウィンドウを表示せず、GUI（表示サーバー）をインストールする必要もありません。これにより、PhantomJSは継続的インテグレーションシステムで非常に人気があります。PhantomJSに必要なバイナリは1つだけであり、追加の依存関係がないため、インストールが最も簡単なWebDriverツールになります。</target>
        </trans-unit>
        <trans-unit id="974f1bc570ad2f763e90863f28f698da274fbe45" translate="yes" xml:space="preserve">
          <source>PhpBrowser</source>
          <target state="translated">PhpBrowser</target>
        </trans-unit>
        <trans-unit id="c3a3402d0b86e8796785e2a45f12198000b231be" translate="yes" xml:space="preserve">
          <source>PhpBrowser::_findElements</source>
          <target state="translated">PhpBrowser::_findElements</target>
        </trans-unit>
        <trans-unit id="da3449c463ee92588408d4c5b739500dfd478c7d" translate="yes" xml:space="preserve">
          <source>PhpBrowser::_getResponseContent</source>
          <target state="translated">PhpBrowser::_getResponseContent</target>
        </trans-unit>
        <trans-unit id="3ba4c9913ce27a35131617f4e9738518ff49e5af" translate="yes" xml:space="preserve">
          <source>PhpBrowser::_loadPage</source>
          <target state="translated">PhpBrowser::_loadPage</target>
        </trans-unit>
        <trans-unit id="4f97a9cbafc80f10a4ff6600075620d9827a0604" translate="yes" xml:space="preserve">
          <source>PhpBrowser::_request</source>
          <target state="translated">PhpBrowser::_request</target>
        </trans-unit>
        <trans-unit id="131b676bc1afb030bf023432d77666640e84fe38" translate="yes" xml:space="preserve">
          <source>PhpBrowser::_savePageSource</source>
          <target state="translated">PhpBrowser::_savePageSource</target>
        </trans-unit>
        <trans-unit id="b7f86e92bff9fd25fedb1aa4cfde359e610d7b14" translate="yes" xml:space="preserve">
          <source>PhpBrowser::amHttpAuthenticated</source>
          <target state="translated">PhpBrowser::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="bdd3e2c7947a24cbb9f9436393b3f3692c6ab3c1" translate="yes" xml:space="preserve">
          <source>PhpBrowser::amOnPage</source>
          <target state="translated">PhpBrowser::amOnPage</target>
        </trans-unit>
        <trans-unit id="6ab8bc0d365ddc7ec6caf0b2ecd3f637d53321dd" translate="yes" xml:space="preserve">
          <source>PhpBrowser::amOnSubdomain</source>
          <target state="translated">PhpBrowser::amOnSubdomain</target>
        </trans-unit>
        <trans-unit id="21b5c241c799dd869cb8fef2622211e2962a2abb" translate="yes" xml:space="preserve">
          <source>PhpBrowser::amOnUrl</source>
          <target state="translated">PhpBrowser::amOnUrl</target>
        </trans-unit>
        <trans-unit id="bf2b945b2d93d763fec3c98cd45e8eae28718053" translate="yes" xml:space="preserve">
          <source>PhpBrowser::attachFile</source>
          <target state="translated">PhpBrowser::attachFile</target>
        </trans-unit>
        <trans-unit id="ba63265125c3f6f6790bd95004181b3d8e13b097" translate="yes" xml:space="preserve">
          <source>PhpBrowser::checkOption</source>
          <target state="translated">PhpBrowser::checkOption</target>
        </trans-unit>
        <trans-unit id="35b5abd73f49087d3632acf149fe451da600a4b2" translate="yes" xml:space="preserve">
          <source>PhpBrowser::click</source>
          <target state="translated">PhpBrowser::click</target>
        </trans-unit>
        <trans-unit id="02e1c935edf23fd7848ec0fabbfd91d34b430954" translate="yes" xml:space="preserve">
          <source>PhpBrowser::deleteHeader</source>
          <target state="translated">PhpBrowser::deleteHeader</target>
        </trans-unit>
        <trans-unit id="00dd8b2ebcc388c4e0684cd4c48cf6def4e43d5b" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSee</source>
          <target state="translated">PhpBrowser::dontSee</target>
        </trans-unit>
        <trans-unit id="5ffd7540df9ce92b35933e1e0b8c7f4c45f8c82c" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeCheckboxIsChecked</source>
          <target state="translated">PhpBrowser::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="ed1e9d8a6d3504adf8a77b65770337dba5650ccd" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeCookie</source>
          <target state="translated">PhpBrowser::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="c8ef60a71714daf839b45d680a13bccfdaa374e1" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeCurrentUrlEquals</source>
          <target state="translated">PhpBrowser::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="fb0b6fb531f6a7f3d517b0f85ff1c337f7b88fcc" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeCurrentUrlMatches</source>
          <target state="translated">PhpBrowser::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="d08e91bd1648552eb208f0ab8d8cebc9a42cfe04" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeElement</source>
          <target state="translated">PhpBrowser::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="66c5f515282bfeb1002a72c2479a500cb5536cb2" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeInCurrentUrl</source>
          <target state="translated">PhpBrowser::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="0887bc36f6866657bc934dc8123f2850b3acbec0" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeInField</source>
          <target state="translated">PhpBrowser::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="8cc1697d350b8d73fdad60847c0ae3ca85b58f68" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeInFormFields</source>
          <target state="translated">PhpBrowser::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="ed847cb4c0b2acb5591ac04e4680cd91c0e92aa2" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeInSource</source>
          <target state="translated">PhpBrowser::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="410bf42306d65482b477f50c9d722e29a44212c5" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeInTitle</source>
          <target state="translated">PhpBrowser::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="587f2232701d28732a65a739d6f919ce3eafb489" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeLink</source>
          <target state="translated">PhpBrowser::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="55524d6570d0035d2b91d2bf88d5b64271b55993" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeOptionIsSelected</source>
          <target state="translated">PhpBrowser::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="d948922dcba181377993a0ce0687589b5fab1499" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeResponseCodeIs</source>
          <target state="translated">PhpBrowser::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="aff61207126d14ce338ca925e64280d1b3516567" translate="yes" xml:space="preserve">
          <source>PhpBrowser::executeInGuzzle</source>
          <target state="translated">PhpBrowser::executeInGuzzle</target>
        </trans-unit>
        <trans-unit id="2cf79a1210251db3f40ddd25aa3121610fad73c7" translate="yes" xml:space="preserve">
          <source>PhpBrowser::fillField</source>
          <target state="translated">PhpBrowser::fillField</target>
        </trans-unit>
        <trans-unit id="3cf4bd52f2ed060583b5def7d847c8b0c4e0274f" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabAttributeFrom</source>
          <target state="translated">PhpBrowser::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="5acfe1b9159cda17546845a198ba5bcec48d7d07" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabCookie</source>
          <target state="translated">PhpBrowser::grabCookie</target>
        </trans-unit>
        <trans-unit id="70cfbb6379f9993218bd67dcabb6386201c35ec0" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabFromCurrentUrl</source>
          <target state="translated">PhpBrowser::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="3a153242c5c05cf9e20b54d259456b256d9404ba" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabMultiple</source>
          <target state="translated">PhpBrowser::grabMultiple</target>
        </trans-unit>
        <trans-unit id="49463c89782b400c2f224bd460ea9458c6f5cbf9" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabPageSource</source>
          <target state="translated">PhpBrowser::grabPageSource</target>
        </trans-unit>
        <trans-unit id="9d332a4fff0732302b6ba47cc255e36943d1304f" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabTextFrom</source>
          <target state="translated">PhpBrowser::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="042f68edb3d67ea36768954bc9221acccc8a334f" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabValueFrom</source>
          <target state="translated">PhpBrowser::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="61bf1232ae84f9d034eef18ffddd1262aa2bf3a9" translate="yes" xml:space="preserve">
          <source>PhpBrowser::haveHttpHeader</source>
          <target state="translated">PhpBrowser::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="478677aafccbe03c0451c4058c1057bad3d00d35" translate="yes" xml:space="preserve">
          <source>PhpBrowser::makeHtmlSnapshot</source>
          <target state="translated">PhpBrowser::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="5dcf0b125e080d85d5ca2be6cd9f31c62b76d47d" translate="yes" xml:space="preserve">
          <source>PhpBrowser::moveBack</source>
          <target state="translated">PhpBrowser::moveBack</target>
        </trans-unit>
        <trans-unit id="8d9c4c21f442f4e68e3631aa1f39cd303217380a" translate="yes" xml:space="preserve">
          <source>PhpBrowser::resetCookie</source>
          <target state="translated">PhpBrowser::resetCookie</target>
        </trans-unit>
        <trans-unit id="5e19ce1d2df38c2e1a5fd4288cfc2bc4ffdd118f" translate="yes" xml:space="preserve">
          <source>PhpBrowser::see</source>
          <target state="translated">PhpBrowser::see</target>
        </trans-unit>
        <trans-unit id="ff1f9f4f1552792288248ec45c79aaf74d11b760" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeCheckboxIsChecked</source>
          <target state="translated">PhpBrowser::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="b3a25b3aa92b42a73578c39afa8105bba2526ea8" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeCookie</source>
          <target state="translated">PhpBrowser::seeCookie</target>
        </trans-unit>
        <trans-unit id="d4d34eef822a6533e8514484c77a8656582ee0ed" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeCurrentUrlEquals</source>
          <target state="translated">PhpBrowser::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="de3a21a324c4568ef28f4d12fca6c14eac7de3d5" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeCurrentUrlMatches</source>
          <target state="translated">PhpBrowser::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="fdce6657390cf9a264a548186da1ff66c4e29105" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeElement</source>
          <target state="translated">PhpBrowser::seeElement</target>
        </trans-unit>
        <trans-unit id="80693e3e530826b690bc2696f481cac5e40e1da7" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeInCurrentUrl</source>
          <target state="translated">PhpBrowser::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="f34a325c6276e1ccf7f284d8344e11dbfec0d91f" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeInField</source>
          <target state="translated">PhpBrowser::seeInField</target>
        </trans-unit>
        <trans-unit id="fd1da1574e80c150bcb66008ba1c98b9767a515d" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeInFormFields</source>
          <target state="translated">PhpBrowser::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="1709dbea4347e0382211d808108e445cac62fd0b" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeInSource</source>
          <target state="translated">PhpBrowser::seeInSource</target>
        </trans-unit>
        <trans-unit id="b39ac2595ad27ad88887d42f38d0824f742f1e68" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeInTitle</source>
          <target state="translated">PhpBrowser::seeInTitle</target>
        </trans-unit>
        <trans-unit id="dcaaa2c0c86a0c01da97f3cfb26b309abac730f1" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeLink</source>
          <target state="translated">PhpBrowser::seeLink</target>
        </trans-unit>
        <trans-unit id="5c459e96e1aa0e09a96060e6fe20f5f42011a06b" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeNumberOfElements</source>
          <target state="translated">PhpBrowser::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="85d90070f7bf2e690bc2c8405346d471ee19a237" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeOptionIsSelected</source>
          <target state="translated">PhpBrowser::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="8d9cf6f1697bbd21c85212e72621974edb13d461" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seePageNotFound</source>
          <target state="translated">PhpBrowser::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="908d2f99eb3c13bb7f795b4b948ef2cb67497d64" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIs</source>
          <target state="translated">PhpBrowser::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="1b718ce10986b47740644bcac5728260b18e39ea" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIsBetween</source>
          <target state="translated">PhpBrowser::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="cd1c30a06b069c4d03c59fc104abf31457356125" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIsClientError</source>
          <target state="translated">PhpBrowser::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="70ffd8cabd6b8ddcea0b2e513a19417874c6bfdf" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIsRedirection</source>
          <target state="translated">PhpBrowser::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="f9b130253216cded39c8e3c130db879ec4d07f6c" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIsServerError</source>
          <target state="translated">PhpBrowser::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="d4e513d50d87392bec02a3ce39544de8e75447c7" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIsSuccessful</source>
          <target state="translated">PhpBrowser::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="376a8813e3275d37e3e28b5beb4a2ba974857d41" translate="yes" xml:space="preserve">
          <source>PhpBrowser::selectOption</source>
          <target state="translated">PhpBrowser::selectOption</target>
        </trans-unit>
        <trans-unit id="cecf6fcee44f23f32ba4f13c6d3947166790c057" translate="yes" xml:space="preserve">
          <source>PhpBrowser::sendAjaxGetRequest</source>
          <target state="translated">PhpBrowser::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="df1c4f7bd86fd9d8a17c4e4bc9f634d6b95b142c" translate="yes" xml:space="preserve">
          <source>PhpBrowser::sendAjaxPostRequest</source>
          <target state="translated">PhpBrowser::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="47f9e38a4bfd0308e7fc7a9d5d75eb03aa6b1970" translate="yes" xml:space="preserve">
          <source>PhpBrowser::sendAjaxRequest</source>
          <target state="translated">PhpBrowser::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="704ef3cf5ed97ada4ff91f5c427036cacc4f796c" translate="yes" xml:space="preserve">
          <source>PhpBrowser::setCookie</source>
          <target state="translated">PhpBrowser::setCookie</target>
        </trans-unit>
        <trans-unit id="eaf2e2c4ea94d7101a8f443d404d3f1de511b8f9" translate="yes" xml:space="preserve">
          <source>PhpBrowser::setHeader</source>
          <target state="translated">PhpBrowser::setHeader</target>
        </trans-unit>
        <trans-unit id="41750f91fa6fabb9c84e310190d8fea6f8cbfdc6" translate="yes" xml:space="preserve">
          <source>PhpBrowser::submitForm</source>
          <target state="translated">PhpBrowser::submitForm</target>
        </trans-unit>
        <trans-unit id="7451c9aac453ee81a75d16aac74054328aafdd13" translate="yes" xml:space="preserve">
          <source>PhpBrowser::switchToIframe</source>
          <target state="translated">PhpBrowser::switchToIframe</target>
        </trans-unit>
        <trans-unit id="2d542a3c05be611e553ce374914448a0e3ceeccf" translate="yes" xml:space="preserve">
          <source>PhpBrowser::uncheckOption</source>
          <target state="translated">PhpBrowser::uncheckOption</target>
        </trans-unit>
        <trans-unit id="51c6eb01fa5c3ab7311e79bb799debeca215a459" translate="yes" xml:space="preserve">
          <source>Phundament App with Codeception</source>
          <target state="translated">コードプションを使ったファンダメントアプリ</target>
        </trans-unit>
        <trans-unit id="66f56bcd9f46b69936d2b23a1a3881e1763ffaa6" translate="yes" xml:space="preserve">
          <source>Place the &lt;code&gt;codeception.yml&lt;/code&gt; file into the root folder of your project and specify the paths to the other &lt;code&gt;codeception.yml&lt;/code&gt; configurations that you want to include:</source>
          <target state="translated">&lt;code&gt;codeception.yml&lt;/code&gt; ファイルをプロジェクトのルートフォルダーに配置し、含める他の &lt;code&gt;codeception.yml&lt;/code&gt; 構成へのパスを指定します。</target>
        </trans-unit>
        <trans-unit id="ce4bd6efa70664b4f23131fddba55200cc8b1479" translate="yes" xml:space="preserve">
          <source>Please keep in mind that all string keys and values must be enclosed in double quotes (`&quot;`).</source>
          <target state="translated">すべての文字列のキーと値は二重引用符(`&quot;`)で囲まなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="426012b26f73fa8f886f3eac3605a2ca408b6968" translate="yes" xml:space="preserve">
          <source>Please make sure you have &lt;code&gt;docker&lt;/code&gt; or &lt;a href=&quot;https://www.docker.com/products/docker-toolbox&quot;&gt;Docker Toolbox&lt;/a&gt; installed. Docker experience is required as well.</source>
          <target state="translated">&lt;code&gt;docker&lt;/code&gt; または&lt;a href=&quot;https://www.docker.com/products/docker-toolbox&quot;&gt;Docker Toolboxが&lt;/a&gt;インストールされていることを確認してください。Dockerの経験も必要です。</target>
        </trans-unit>
        <trans-unit id="95b08ef9de6be82e74b981d89b38d6f901af469d" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;:num1&lt;/code&gt; placeholder can be used for strings and numbers (may contain currency sign). In current case &lt;code&gt;:num1&lt;/code&gt; matches &lt;code&gt;$600&lt;/code&gt; and &lt;code&gt;$num1&lt;/code&gt; is assigned to be 600. If you need to receive exact string, wrap the value into quotes: &lt;code&gt;&quot;600$&quot;&lt;/code&gt;</source>
          <target state="translated">ので、予めご了承ください &lt;code&gt;:num1&lt;/code&gt; プレースホルダは文字列と数値（通貨記号が含まれていてもよい）のために使用することができます。現在のケースでは、 &lt;code&gt;:num1&lt;/code&gt; は &lt;code&gt;$600&lt;/code&gt; 一致し、 &lt;code&gt;$num1&lt;/code&gt; は600に割り当てられます。正確な文字列を受け取る必要がある場合は、値を引用符で囲みます： &lt;code&gt;&quot;600$&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="032fd37f6f74d66a21747e2f3b7ddbd202843968" translate="yes" xml:space="preserve">
          <source>Please note that actions executed in a browser will behave differently. For instance, &lt;code&gt;seeElement&lt;/code&gt; won&amp;rsquo;t just check that the element exists on a page, but it will also check that element is actually visible to the user:</source>
          <target state="translated">ブラウザで実行されるアクションは異なる動作をすることに注意してください。たとえば、 &lt;code&gt;seeElement&lt;/code&gt; は要素がページに存在することを確認するだけでなく、要素が実際にユーザーに表示されることも確認します。</target>
        </trans-unit>
        <trans-unit id="5a02c0723265991c59afb714f87c93cae9f7edc9" translate="yes" xml:space="preserve">
          <source>Please note that methods with a &lt;code&gt;_&lt;/code&gt; prefix are not added to the Actor class. This allows them to be defined as public but used only for internal purposes.</source>
          <target state="translated">接頭辞が &lt;code&gt;_&lt;/code&gt; のメソッドはActorクラスに追加されないことに注意してください。これにより、それらをパブリックとして定義できますが、内部目的でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="7d87ab341fddb1e30a7af18e9de29eabce48a078" translate="yes" xml:space="preserve">
          <source>Please note that regular expressions should start and end with &lt;code&gt;/&lt;/code&gt; char. Regex is also used to match parameters and pass them as arguments into methods.</source>
          <target state="translated">正規表現は &lt;code&gt;/&lt;/code&gt; charで開始および終了する必要があることに注意してください。正規表現は、パラメータを照合し、引数をメソッドに渡すためにも使用されます。</target>
        </trans-unit>
        <trans-unit id="ea1af53c40eb776c4f03e6dd51dfdb8a8e9efce3" translate="yes" xml:space="preserve">
          <source>Please note, that PHP SoapServer::handle method sends additional headers. This may trigger warning: &amp;ldquo;Cannot modify header information&amp;rdquo; If you use PHP SoapServer with framework, try to block call to this method in testing environment.</source>
          <target state="translated">PHP SoapServer :: handleメソッドは追加のヘッダーを送信することに注意してください。これにより、「ヘッダー情報を変更できません」という警告がトリガーされる場合があります。フレームワークでPHP SoapServerを使用している場合は、テスト環境でこのメソッドの呼び出しをブロックしてみてください。</target>
        </trans-unit>
        <trans-unit id="8275492ac0a3c2832df28795861639083447018a" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://github.com/Codeception/Codeception/blob/2.3/tests/data/register_command/examples/MyCustomCommand.php&quot;&gt;complete example&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Codeception/Codeception/blob/2.3/tests/data/register_command/examples/MyCustomCommand.php&quot;&gt;完全な例を&lt;/a&gt;ご覧ください</target>
        </trans-unit>
        <trans-unit id="6369f53931f47032c045754e0c1618a7353f314b" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://github.com/Codeception/Codeception/blob/4.0/tests/data/register_command/examples/MyCustomCommand.php&quot;&gt;complete example&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Codeception/Codeception/blob/4.0/tests/data/register_command/examples/MyCustomCommand.php&quot;&gt;完全な例を&lt;/a&gt;ご覧ください</target>
        </trans-unit>
        <trans-unit id="f06761b98f536045f9f9c98da4e1c3208e0b96d0" translate="yes" xml:space="preserve">
          <source>Please, follow installation instructions described in a &lt;a href=&quot;https://github.com/Codeception/c3&quot;&gt;readme file&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Codeception/c3&quot;&gt;readmeファイルに&lt;/a&gt;記載されているインストール手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="d55892d44f597a354d922174c6a9a5732529b9e8" translate="yes" xml:space="preserve">
          <source>Popular frameworks like Laravel, Yii, and Phalcon include an ActiveRecord data layer by default. Because of this tight integration, you just need to enable the framework module, and use its configuration for database access.</source>
          <target state="translated">Laravel、Yii、Phalconのような人気のあるフレームワークには、デフォルトでActiveRecordデータレイヤーが含まれています。このように緊密に統合されているため、フレームワークモジュールを有効にして、その設定をデータベースにアクセスするために使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="509d72cda9aebd9b6f1ff49e0924407abc6b2b86" translate="yes" xml:space="preserve">
          <source>Populating Database:</source>
          <target state="translated">データベースの人口化。</target>
        </trans-unit>
        <trans-unit id="bf96d350be2ca7a76b1a13c8f8591bff15a1c441" translate="yes" xml:space="preserve">
          <source>Populator</source>
          <target state="translated">Populator</target>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="translated">PostgreSQL</target>
        </trans-unit>
        <trans-unit id="60bf3b5311954ecfe76b7c42b580c83fc11274d2" translate="yes" xml:space="preserve">
          <source>PostgreSQL: &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-pgsql.connection.php&quot;&gt;PDO_PGSQL DSN&lt;/a&gt;</source>
          <target state="translated">PostgreSQL：&lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-pgsql.connection.php&quot;&gt;PDO_PGSQL DSN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f3919c8c797fff42367cf5284ec210187b708b7" translate="yes" xml:space="preserve">
          <source>Prepare SOAP header. Receives header name and parameters as array.</source>
          <target state="translated">SOAPヘッダを準備します。ヘッダ名とパラメータを配列で受け取る。</target>
        </trans-unit>
        <trans-unit id="b04b12f3c94d2f45d23fa12e85482c95b217ce95" translate="yes" xml:space="preserve">
          <source>Prepare methods can invoke all methods of a module, as well as hidden API methods (starting with &lt;code&gt;_&lt;/code&gt;). Use them to customize the module setup for a specific test.</source>
          <target state="translated">Prepareメソッドは、モジュールのすべてのメソッドと非表示のAPIメソッド（ &lt;code&gt;_&lt;/code&gt; で始まる）を呼び出すことができます。それらを使用して、特定のテストのモジュール設定をカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="f1d07a615206f55a493b776045f4a48dd3048dcb" translate="yes" xml:space="preserve">
          <source>Preparing Jenkins</source>
          <target state="translated">ジェンキンスの準備</target>
        </trans-unit>
        <trans-unit id="ad146eca1017b16c08a08997ef95f2a365d24b90" translate="yes" xml:space="preserve">
          <source>Preparing Robo</source>
          <target state="translated">ロボの準備</target>
        </trans-unit>
        <trans-unit id="973fd3a3d3afc5fb130f41a8d4fadeb1321c6ee5" translate="yes" xml:space="preserve">
          <source>Preparing Robo and Robo-paracept</source>
          <target state="translated">ロボとロボパラの準備</target>
        </trans-unit>
        <trans-unit id="d8081ad76c0bebe520c90d802a1f7055d47c2ffd" translate="yes" xml:space="preserve">
          <source>Preparing data for testing is a very creative, although boring, task. If you create a record, you need to fill in all the fields of the model. It is much easier to use &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; for this task, which is more effective to set up data generation rules for models. Such a set of rules is called &lt;em&gt;factories&lt;/em&gt; and are provided by the &lt;a href=&quot;modules/datafactory&quot;&gt;DataFactory&lt;/a&gt; module.</source>
          <target state="translated">テスト用のデータの準備は非常に創造的ですが、退屈な作業です。レコードを作成する場合は、モデルのすべてのフィールドに入力する必要があります。このタスクでは&lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt;を使用する方がはるかに簡単です。これは、モデルのデータ生成ルールを設定するのにより効果的です。このようなルールのセットは&lt;em&gt;ファクトリー&lt;/em&gt;と呼ばれ、&lt;a href=&quot;modules/datafactory&quot;&gt;DataFactory&lt;/a&gt;モジュールによって提供されます。</target>
        </trans-unit>
        <trans-unit id="b5af004ca967d765127d7bb81be5b726d2804db7" translate="yes" xml:space="preserve">
          <source>Presses the given key on the given element. To specify a character and modifier (e.g.</source>
          <target state="translated">指定された要素で指定されたキーを押します。文字と修飾子を指定するには(例えば</target>
        </trans-unit>
        <trans-unit id="9d87b4fd2ec61f1efdbe4eafa4ecd19b32c06e70" translate="yes" xml:space="preserve">
          <source>Presses the given key on the given element. To specify a character and modifier (e.g. ctrl, alt, shift, meta), pass an array for $char with the modifier as the first element and the character as the second. For special keys use key constants from WebDriverKeys class.</source>
          <target state="translated">指定した要素で指定したキーを押します。文字と修飾子 (例えば ctrl,alt,shift,meta)を指定するには、修飾子を最初の要素、文字を 2 番目の要素として $char に配列を渡します。特別なキーを指定するには、WebDriverKeys クラスのキー定数を使用します。</target>
        </trans-unit>
        <trans-unit id="014259b7679f309d9af69408e9564f4f79f9a1d6" translate="yes" xml:space="preserve">
          <source>Prevents automatic redirects to be followed by the client</source>
          <target state="translated">クライアントからの自動リダイレクトを防ぐ</target>
        </trans-unit>
        <trans-unit id="0241eee5e634f6767797beda253c063cfa03b2ae" translate="yes" xml:space="preserve">
          <source>Print a message to console.</source>
          <target state="translated">コンソールにメッセージを印刷します。</target>
        </trans-unit>
        <trans-unit id="d0b6fcad4e873a7d525a45ee221223b8c87cfed8" translate="yes" xml:space="preserve">
          <source>Print a successful message</source>
          <target state="translated">成功したメッセージを印刷する</target>
        </trans-unit>
        <trans-unit id="c3d56b78038232c6fc47cdb186a43261517203dc" translate="yes" xml:space="preserve">
          <source>Print debug message to the screen.</source>
          <target state="translated">デバッグメッセージを画面に表示します。</target>
        </trans-unit>
        <trans-unit id="3d8541448bc2d2d536e3f77b836dd39220221af7" translate="yes" xml:space="preserve">
          <source>Print debug message with a title</source>
          <target state="translated">デバッグメッセージをタイトル付きで表示する</target>
        </trans-unit>
        <trans-unit id="c6f62c0920ecca1403f14b049845e8382e744744" translate="yes" xml:space="preserve">
          <source>Print error message</source>
          <target state="translated">エラーメッセージを印刷する</target>
        </trans-unit>
        <trans-unit id="5d626ecd6b197412a003f1081c44b163ba67769e" translate="yes" xml:space="preserve">
          <source>Print info message</source>
          <target state="translated">印刷情報メッセージ</target>
        </trans-unit>
        <trans-unit id="14b99272e608a38d962553aa4d47656dc329aa0a" translate="yes" xml:space="preserve">
          <source>Print out latest Selenium Logs in debug mode</source>
          <target state="translated">デバッグモードで最新のSeleniumログを印刷する</target>
        </trans-unit>
        <trans-unit id="8b2f45978c8337b3d624e728313f352e9bacf16d" translate="yes" xml:space="preserve">
          <source>Print warning message</source>
          <target state="translated">警告メッセージの印刷</target>
        </trans-unit>
        <trans-unit id="8ddd89024172da5fca1e9d3325a8bfcad4a10916" translate="yes" xml:space="preserve">
          <source>Prints all steps from all Gherkin contexts for a specific suite</source>
          <target state="translated">特定のスイートのすべてのGherkinコンテキストからすべてのステップを印刷します。</target>
        </trans-unit>
        <trans-unit id="31a8c39c967fed38f796c23043a91d686fe253f0" translate="yes" xml:space="preserve">
          <source>Prints information when running in debug mode. String, array, or object can be provided as argument.</source>
          <target state="translated">デバッグモードで実行しているときに情報を表示します。引数には文字列、配列、オブジェクトを指定できます。</target>
        </trans-unit>
        <trans-unit id="351f56a6fefd5127c90506d3e91990f1d7631787" translate="yes" xml:space="preserve">
          <source>Properties:</source>
          <target state="translated">Properties:</target>
        </trans-unit>
        <trans-unit id="a2651b39a3f13a9c2d30b19cd36cfc30224ccf2f" translate="yes" xml:space="preserve">
          <source>Provide a path to SQL file in &lt;code&gt;dump&lt;/code&gt; config option:</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; オプションでSQLファイルへのパスを指定します。</target>
        </trans-unit>
        <trans-unit id="edc0d213e7818bfec737b673e8d02bb634229bc1" translate="yes" xml:space="preserve">
          <source>Provide an array for the second argument to select multiple options:</source>
          <target state="translated">複数のオプションを選択するために、第2引数に配列を指定します。</target>
        </trans-unit>
        <trans-unit id="4b6c4397bddeafdead1a1ed82a5f7ace7d34be44" translate="yes" xml:space="preserve">
          <source>Provides access the Laravel application object.</source>
          <target state="translated">Laravelアプリケーションオブジェクトへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="46a917a3207791217899cf4f8a80f45808b84bf1" translate="yes" xml:space="preserve">
          <source>Provides access the Lumen application object.</source>
          <target state="translated">ルーメンアプリケーションオブジェクトへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="0b1868f5b3cfd953176f6ae57233248db35b5943" translate="yes" xml:space="preserve">
          <source>Provides access the Phalcon application object.</source>
          <target state="translated">Phalcon アプリケーション・オブジェクトへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="6ae22c161ea98cdfc51e0fe5643ee1613027f054" translate="yes" xml:space="preserve">
          <source>Public API</source>
          <target state="translated">パブリックAPI</target>
        </trans-unit>
        <trans-unit id="5bd4a403c067082197eab0007df1ac6f56c5045e" translate="yes" xml:space="preserve">
          <source>Public Properties</source>
          <target state="translated">公共のプロパティ</target>
        </trans-unit>
        <trans-unit id="bda7c9c564e76ce35029ad11228afd5afb7a8d82" translate="yes" xml:space="preserve">
          <source>Public methods of this class start with &lt;code&gt;_&lt;/code&gt; prefix in order to ignore them in actor classes. Module contains &lt;strong&gt;HOOKS&lt;/strong&gt; which allow to handle test execution routine.</source>
          <target state="translated">このクラスのパブリックメソッドは、アクタークラスでそれらを無視するために、 &lt;code&gt;_&lt;/code&gt; プレフィックスで始まります。モジュールには、テスト実行ルーチンを処理できる&lt;strong&gt;フック&lt;/strong&gt;が含まれています。</target>
        </trans-unit>
        <trans-unit id="731f5a13ee4b7151be375610b4d4b9c8c4010aa9" translate="yes" xml:space="preserve">
          <source>Public methods prefixed by `_` are treated as hidden and won't be added to your Actor class.</source>
          <target state="translated">で始まるパブリックメソッドは隠されたものとして扱われ、アクタークラスには追加されません。</target>
        </trans-unit>
        <trans-unit id="a74d1b758f29e95164f15294ff997a5fefaf6672" translate="yes" xml:space="preserve">
          <source>Public properties</source>
          <target state="translated">公共性の高い物件</target>
        </trans-unit>
        <trans-unit id="95f879a5a4da20c3d178c44acea8c12c522ea663" translate="yes" xml:space="preserve">
          <source>Purge a specific queue defined in config.</source>
          <target state="translated">config で定義された特定のキューをパージします。</target>
        </trans-unit>
        <trans-unit id="06647b56fee1dd5b3357be6d337502222d8e7b88" translate="yes" xml:space="preserve">
          <source>Purge all queues defined in config.</source>
          <target state="translated">config で定義されているキューをすべてパージします。</target>
        </trans-unit>
        <trans-unit id="84f2680d95df677767ad2a02ced7ab510413fa2f" translate="yes" xml:space="preserve">
          <source>QAs</source>
          <target state="translated">QAs</target>
        </trans-unit>
        <trans-unit id="eec149e55424ec5471c9d15b1338db0a00818250" translate="yes" xml:space="preserve">
          <source>Query generation</source>
          <target state="translated">クエリの生成</target>
        </trans-unit>
        <trans-unit id="d325fcd919384f395c02751e03d2cd0288b98cca" translate="yes" xml:space="preserve">
          <source>Queue</source>
          <target state="translated">Queue</target>
        </trans-unit>
        <trans-unit id="aa0943c8dc0f9b9946fd26f354c84a2ccd25c79a" translate="yes" xml:space="preserve">
          <source>Queue::addMessageToQueue</source>
          <target state="translated">Queue::addMessageToQueue</target>
        </trans-unit>
        <trans-unit id="d3e53e543b1d925a148d92d2711da148187a29d3" translate="yes" xml:space="preserve">
          <source>Queue::clearQueue</source>
          <target state="translated">Queue::clearQueue</target>
        </trans-unit>
        <trans-unit id="d2f7015259a77a4836ce8c44c5be67ef07055d9d" translate="yes" xml:space="preserve">
          <source>Queue::dontSeeEmptyQueue</source>
          <target state="translated">Queue::dontSeeEmptyQueue</target>
        </trans-unit>
        <trans-unit id="206dc3287ac6efcb73feaaf45f929c84eb056853" translate="yes" xml:space="preserve">
          <source>Queue::dontSeeQueueExists</source>
          <target state="translated">Queue::dontSeeQueueExists</target>
        </trans-unit>
        <trans-unit id="b2e7bf7945ee29bb6fb67390cc271367ecc5a285" translate="yes" xml:space="preserve">
          <source>Queue::dontSeeQueueHasCurrentCount</source>
          <target state="translated">Queue::dontSeeQueueHasCurrentCount</target>
        </trans-unit>
        <trans-unit id="d60f6343685e8ef5046922368e617b5dadaa1fe6" translate="yes" xml:space="preserve">
          <source>Queue::dontSeeQueueHasTotalCount</source>
          <target state="translated">Queue::dontSeeQueueHasTotalCount</target>
        </trans-unit>
        <trans-unit id="f478182539719cd985575e0a85914a0fb3ab8a1b" translate="yes" xml:space="preserve">
          <source>Queue::grabQueueCurrentCount</source>
          <target state="translated">Queue::grabQueueCurrentCount</target>
        </trans-unit>
        <trans-unit id="df8c56fb7effc5d4aeba4e79758305cafaca1183" translate="yes" xml:space="preserve">
          <source>Queue::grabQueueTotalCount</source>
          <target state="translated">Queue::grabQueueTotalCount</target>
        </trans-unit>
        <trans-unit id="83ec9b25d27a17ab0942e3020da0e15b987fdba2" translate="yes" xml:space="preserve">
          <source>Queue::grabQueues</source>
          <target state="translated">Queue::grabQueues</target>
        </trans-unit>
        <trans-unit id="c509d4193aa8b8d799c96029b54f92e3792ac33a" translate="yes" xml:space="preserve">
          <source>Queue::seeEmptyQueue</source>
          <target state="translated">Queue::seeEmptyQueue</target>
        </trans-unit>
        <trans-unit id="8e3da549b1de04ba1901634f66dcdc9ff44f6502" translate="yes" xml:space="preserve">
          <source>Queue::seeQueueExists</source>
          <target state="translated">Queue::seeQueueExists</target>
        </trans-unit>
        <trans-unit id="29c156e29e8460cf68d2c2ec2d4600aa2a8f0b6f" translate="yes" xml:space="preserve">
          <source>Queue::seeQueueHasCurrentCount</source>
          <target state="translated">Queue::seeQueueHasCurrentCount</target>
        </trans-unit>
        <trans-unit id="ee96762d399a2a1b513445d943a402410beb0287" translate="yes" xml:space="preserve">
          <source>Queue::seeQueueHasTotalCount</source>
          <target state="translated">Queue::seeQueueHasTotalCount</target>
        </trans-unit>
        <trans-unit id="cbaaa18133a5ea571bba33bebe1a8cc7e93344f9" translate="yes" xml:space="preserve">
          <source>REST</source>
          <target state="translated">REST</target>
        </trans-unit>
        <trans-unit id="cec9f3739c3e2f0e0437a3141590dfba60bb4e1b" translate="yes" xml:space="preserve">
          <source>REST API</source>
          <target state="translated">REST API</target>
        </trans-unit>
        <trans-unit id="d59f56172046bbea35356e5e3635a0f058b1a991" translate="yes" xml:space="preserve">
          <source>REST API tests</source>
          <target state="translated">REST API テスト</target>
        </trans-unit>
        <trans-unit id="74ac9b462e37c63b081b5c2233a021ea57e90c58" translate="yes" xml:space="preserve">
          <source>REST::amAWSAuthenticated</source>
          <target state="translated">REST::amAWSAuthenticated</target>
        </trans-unit>
        <trans-unit id="c01708dc1c4ddc9cf39227eee3a851edfebcd7b5" translate="yes" xml:space="preserve">
          <source>REST::amBearerAuthenticated</source>
          <target state="translated">REST::amBearerAuthenticated</target>
        </trans-unit>
        <trans-unit id="a3d43d9c81a6ae3c927773937dd872140af8afd4" translate="yes" xml:space="preserve">
          <source>REST::amDigestAuthenticated</source>
          <target state="translated">REST::amDigestAuthenticated</target>
        </trans-unit>
        <trans-unit id="45ef2607cc4a0f99505f3de3969d4cbf2fcd4495" translate="yes" xml:space="preserve">
          <source>REST::amHttpAuthenticated</source>
          <target state="translated">REST::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="618d2c143c85ed5ffdee2074f737063cd7f993e5" translate="yes" xml:space="preserve">
          <source>REST::amNTLMAuthenticated</source>
          <target state="translated">REST::amNTLMAuthenticated</target>
        </trans-unit>
        <trans-unit id="063d63a0ca8c460b13788956f7e65b1c88d47426" translate="yes" xml:space="preserve">
          <source>REST::deleteHeader</source>
          <target state="translated">REST::deleteHeader</target>
        </trans-unit>
        <trans-unit id="cab88014f15a08f52859bf6ce5441d9adf9459e0" translate="yes" xml:space="preserve">
          <source>REST::dontSeeBinaryResponseEquals</source>
          <target state="translated">REST::dontSeeBinaryResponseEquals</target>
        </trans-unit>
        <trans-unit id="7eda7ed703e2b48455a93bdd440f19cd6b606f9f" translate="yes" xml:space="preserve">
          <source>REST::dontSeeHttpHeader</source>
          <target state="translated">REST::dontSeeHttpHeader</target>
        </trans-unit>
        <trans-unit id="455c63250abd840d92d763c51d1cc85f050573de" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseCodeIs</source>
          <target state="translated">REST::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="30ec4a10f0f2b6625130e822903bab47283ee74c" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseContains</source>
          <target state="translated">REST::dontSeeResponseContains</target>
        </trans-unit>
        <trans-unit id="1c3a4b381ee82d7c0ee64878ed3ab23b52dc0e2d" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseContainsJson</source>
          <target state="translated">REST::dontSeeResponseContainsJson</target>
        </trans-unit>
        <trans-unit id="d518acb316eed33e87f44ba4ffb70f2d668c25d2" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseJsonMatchesJsonPath</source>
          <target state="translated">REST::dontSeeResponseJsonMatchesJsonPath</target>
        </trans-unit>
        <trans-unit id="513ac2b18924fb103a9218e6e802692331dbd5f3" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseJsonMatchesXpath</source>
          <target state="translated">REST::dontSeeResponseJsonMatchesXpath</target>
        </trans-unit>
        <trans-unit id="26c00d1ba26af8548ffd7adb733c4bf65073c7c5" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseMatchesJsonType</source>
          <target state="translated">REST::dontSeeResponseMatchesJsonType</target>
        </trans-unit>
        <trans-unit id="42c50ea7827149170e3e06a60018ba65f9690644" translate="yes" xml:space="preserve">
          <source>REST::dontSeeXmlResponseEquals</source>
          <target state="translated">REST::dontSeeXmlResponseEquals</target>
        </trans-unit>
        <trans-unit id="b850328172097363efbec2cf8935b8904c4ead13" translate="yes" xml:space="preserve">
          <source>REST::dontSeeXmlResponseIncludes</source>
          <target state="translated">REST::dontSeeXmlResponseIncludes</target>
        </trans-unit>
        <trans-unit id="7bbd59e4366af340d20d2f8f1e25c030e147a214" translate="yes" xml:space="preserve">
          <source>REST::dontSeeXmlResponseMatchesXpath</source>
          <target state="translated">REST::dontSeeXmlResponseMatchesXpath</target>
        </trans-unit>
        <trans-unit id="ebdb927886374c1ee3d3393cd0c7e8e74ed7d444" translate="yes" xml:space="preserve">
          <source>REST::grabAttributeFromXmlElement</source>
          <target state="translated">REST::grabAttributeFromXmlElement</target>
        </trans-unit>
        <trans-unit id="1f0e8d1573fe9624a5ed1d8daefa3acd7107abef" translate="yes" xml:space="preserve">
          <source>REST::grabDataFromResponseByJsonPath</source>
          <target state="translated">REST::grabDataFromResponseByJsonPath</target>
        </trans-unit>
        <trans-unit id="0a155df6d91ede0f2ac2192810011ec0348489a5" translate="yes" xml:space="preserve">
          <source>REST::grabHttpHeader</source>
          <target state="translated">REST::grabHttpHeader</target>
        </trans-unit>
        <trans-unit id="f54147f345232b35f51776d5523002b2bec95acf" translate="yes" xml:space="preserve">
          <source>REST::grabResponse</source>
          <target state="translated">REST::grabResponse</target>
        </trans-unit>
        <trans-unit id="44edba163d4760b7ca98bfdbfd5093a2d47862c7" translate="yes" xml:space="preserve">
          <source>REST::grabTextContentFromXmlElement</source>
          <target state="translated">REST::grabTextContentFromXmlElement</target>
        </trans-unit>
        <trans-unit id="d23d4393301362559acd0609006b3a69b076d7c1" translate="yes" xml:space="preserve">
          <source>REST::haveHttpHeader</source>
          <target state="translated">REST::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="1508dffa5b33152ff5b9b94b90f95fab32f8c883" translate="yes" xml:space="preserve">
          <source>REST::seeBinaryResponseEquals</source>
          <target state="translated">REST::seeBinaryResponseEquals</target>
        </trans-unit>
        <trans-unit id="a24de3d2791c9c52416d453f78811ac7dc3ff385" translate="yes" xml:space="preserve">
          <source>REST::seeHttpHeader</source>
          <target state="translated">REST::seeHttpHeader</target>
        </trans-unit>
        <trans-unit id="97545eb674fce3a933c4ac1ba0ecfd5256c8f042" translate="yes" xml:space="preserve">
          <source>REST::seeHttpHeaderOnce</source>
          <target state="translated">REST::seeHttpHeaderOnce</target>
        </trans-unit>
        <trans-unit id="6247059f04cadd0e71e5fece747db940f986332b" translate="yes" xml:space="preserve">
          <source>REST::seeResponseCodeIs</source>
          <target state="translated">REST::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="99b56096fc06a2e039c503f155166665391bcf6c" translate="yes" xml:space="preserve">
          <source>REST::seeResponseCodeIsClientError</source>
          <target state="translated">REST::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="dcb67fdb912175ce7ac7c87d21543cb8a2e2dbd5" translate="yes" xml:space="preserve">
          <source>REST::seeResponseCodeIsRedirection</source>
          <target state="translated">REST::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="e0381bba3603f7b69386b3c26d928168cfd81abd" translate="yes" xml:space="preserve">
          <source>REST::seeResponseCodeIsServerError</source>
          <target state="translated">REST::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="64189ef82c26b6465ce3d8c81bc5beebf1e2bf4a" translate="yes" xml:space="preserve">
          <source>REST::seeResponseCodeIsSuccessful</source>
          <target state="translated">REST::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="adb25d5dbbcaef2e4ed4490dbd21c644e1614536" translate="yes" xml:space="preserve">
          <source>REST::seeResponseContains</source>
          <target state="translated">REST::seeResponseContains</target>
        </trans-unit>
        <trans-unit id="be9bb4231a9deb71f4b5ea4e3ef4e9b7de15b24e" translate="yes" xml:space="preserve">
          <source>REST::seeResponseContainsJson</source>
          <target state="translated">REST::seeResponseContainsJson</target>
        </trans-unit>
        <trans-unit id="9b4f5f58389e7af65063310a5ce3b89babf3c610" translate="yes" xml:space="preserve">
          <source>REST::seeResponseEquals</source>
          <target state="translated">REST::seeResponseEquals</target>
        </trans-unit>
        <trans-unit id="41ee46426de2948f89518e1c6f1206f5edf51d43" translate="yes" xml:space="preserve">
          <source>REST::seeResponseIsJson</source>
          <target state="translated">REST::seeResponseIsJson</target>
        </trans-unit>
        <trans-unit id="78fb4a7f7dd6947ea2cbb89908dc67584bd2259b" translate="yes" xml:space="preserve">
          <source>REST::seeResponseIsXml</source>
          <target state="translated">REST::seeResponseIsXml</target>
        </trans-unit>
        <trans-unit id="a55a2a4eb3b9137ef5a3f926053c2e1835c50923" translate="yes" xml:space="preserve">
          <source>REST::seeResponseJsonMatchesJsonPath</source>
          <target state="translated">REST::seeResponseJsonMatchesJsonPath</target>
        </trans-unit>
        <trans-unit id="110624c6e9d28143ec90f077bbd840b49d63c9b8" translate="yes" xml:space="preserve">
          <source>REST::seeResponseJsonMatchesXpath</source>
          <target state="translated">REST::seeResponseJsonMatchesXpath</target>
        </trans-unit>
        <trans-unit id="02603c58d9c5e900f04a8677237723be6a9a29fe" translate="yes" xml:space="preserve">
          <source>REST::seeResponseMatchesJsonType</source>
          <target state="translated">REST::seeResponseMatchesJsonType</target>
        </trans-unit>
        <trans-unit id="7281173ab5fd6ab979eae1c4c55e1c7c2c9efb3a" translate="yes" xml:space="preserve">
          <source>REST::seeXmlResponseEquals</source>
          <target state="translated">REST::seeXmlResponseEquals</target>
        </trans-unit>
        <trans-unit id="6f3594a08f6f202c62581dc4d18dd935eff5048f" translate="yes" xml:space="preserve">
          <source>REST::seeXmlResponseIncludes</source>
          <target state="translated">REST::seeXmlResponseIncludes</target>
        </trans-unit>
        <trans-unit id="c1173ded23025700356f359454ee1bb5d49d0cd6" translate="yes" xml:space="preserve">
          <source>REST::seeXmlResponseMatchesXpath</source>
          <target state="translated">REST::seeXmlResponseMatchesXpath</target>
        </trans-unit>
        <trans-unit id="892a4b2aa4d8a8a91892e909227173ec1a04e0fd" translate="yes" xml:space="preserve">
          <source>REST::sendDELETE</source>
          <target state="translated">REST::sendDELETE</target>
        </trans-unit>
        <trans-unit id="ec3d73f1d7b01196fcae5a9d38c3714fd1c1d6f6" translate="yes" xml:space="preserve">
          <source>REST::sendGET</source>
          <target state="translated">REST::sendGET</target>
        </trans-unit>
        <trans-unit id="4abea603d78855c3ef3834faab3f2e55e320d283" translate="yes" xml:space="preserve">
          <source>REST::sendHEAD</source>
          <target state="translated">REST::sendHEAD</target>
        </trans-unit>
        <trans-unit id="518cf02952db98869879f51548df416a63db0076" translate="yes" xml:space="preserve">
          <source>REST::sendLINK</source>
          <target state="translated">REST::sendLINK</target>
        </trans-unit>
        <trans-unit id="a0a801c147692a75a78779685d51adaef7e030ce" translate="yes" xml:space="preserve">
          <source>REST::sendOPTIONS</source>
          <target state="translated">REST::sendOPTIONS</target>
        </trans-unit>
        <trans-unit id="afe1cd8d993a047d8f7d0a05814d2a824585113d" translate="yes" xml:space="preserve">
          <source>REST::sendPATCH</source>
          <target state="translated">REST::sendPATCH</target>
        </trans-unit>
        <trans-unit id="cd9802887ab4ced333dba65b6d9d65dc7a137c8e" translate="yes" xml:space="preserve">
          <source>REST::sendPOST</source>
          <target state="translated">REST::sendPOST</target>
        </trans-unit>
        <trans-unit id="ac8daad6f7f4b2939076099103faa2008a4f4c8c" translate="yes" xml:space="preserve">
          <source>REST::sendPUT</source>
          <target state="translated">REST::sendPUT</target>
        </trans-unit>
        <trans-unit id="7cdcaed3b6231f98758b75553e384c94dbede17b" translate="yes" xml:space="preserve">
          <source>REST::sendUNLINK</source>
          <target state="translated">REST::sendUNLINK</target>
        </trans-unit>
        <trans-unit id="765376897bb27456d5cb234d9740e49f15434d7e" translate="yes" xml:space="preserve">
          <source>REST::startFollowingRedirects</source>
          <target state="translated">REST::startFollowingRedirects</target>
        </trans-unit>
        <trans-unit id="e2325a5886e2e2c9d61ecd0668c8e7245c9bbce3" translate="yes" xml:space="preserve">
          <source>REST::stopFollowingRedirects</source>
          <target state="translated">REST::stopFollowingRedirects</target>
        </trans-unit>
        <trans-unit id="7400316e8239a985cfaf24fe80463f85ec2611e5" translate="yes" xml:space="preserve">
          <source>Read HTTP response headers</source>
          <target state="translated">HTTP レスポンスヘッダの読み込み</target>
        </trans-unit>
        <trans-unit id="7dcc3cb03a6ad398e91ac9a81dda068b6b820182" translate="yes" xml:space="preserve">
          <source>Really basic class to store data in global array and use it in Cests/Tests.</source>
          <target state="translated">グローバル配列にデータを格納し、Cests/Testsで使用するための非常に基本的なクラスです。</target>
        </trans-unit>
        <trans-unit id="a0289326259babcf56a858a764ab81231f6f901b" translate="yes" xml:space="preserve">
          <source>Reboot client&amp;rsquo;s kernel. Can be used to manually reboot kernel when &amp;lsquo;rebootable_client&amp;rsquo; =&amp;gt; false</source>
          <target state="translated">クライアントのカーネルを再起動します。'rebootable_client' =&amp;gt; falseの場合、カーネルを手動で再起動するために使用できます</target>
        </trans-unit>
        <trans-unit id="38d35a0d49828aa346840a2c4b753f20011e7f59" translate="yes" xml:space="preserve">
          <source>Recursively cleans &lt;code&gt;output&lt;/code&gt; directory and generated code.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; ディレクトリと生成されたコードを再帰的にクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="24071b57a13027c01339027dcccb98218f052a8f" translate="yes" xml:space="preserve">
          <source>Redis</source>
          <target state="translated">Redis</target>
        </trans-unit>
        <trans-unit id="70131d5fc5115bbb01974eb8fea4b1eb08a52e55" translate="yes" xml:space="preserve">
          <source>Redis::cleanup</source>
          <target state="translated">Redis::cleanup</target>
        </trans-unit>
        <trans-unit id="1c8054dd782fb303ba48811c45d44a9fb65cb0e6" translate="yes" xml:space="preserve">
          <source>Redis::dontSeeInRedis</source>
          <target state="translated">Redis::dontSeeInRedis</target>
        </trans-unit>
        <trans-unit id="ac4981ea372e74da3eb45d3610acbdddf77a06f8" translate="yes" xml:space="preserve">
          <source>Redis::dontSeeRedisKeyContains</source>
          <target state="translated">Redis::dontSeeRedisKeyContains</target>
        </trans-unit>
        <trans-unit id="0b6d13bab3cf79ac1ff83853f9298dde730d0aa3" translate="yes" xml:space="preserve">
          <source>Redis::grabFromRedis</source>
          <target state="translated">Redis::grabFromRedis</target>
        </trans-unit>
        <trans-unit id="99a28f12dd41b23d1aa05c98bb540cdd4f5bcfa3" translate="yes" xml:space="preserve">
          <source>Redis::haveInRedis</source>
          <target state="translated">Redis::haveInRedis</target>
        </trans-unit>
        <trans-unit id="823ca9ae8f22bd225e166ee90ab695b79a63aed4" translate="yes" xml:space="preserve">
          <source>Redis::seeInRedis</source>
          <target state="translated">Redis::seeInRedis</target>
        </trans-unit>
        <trans-unit id="97785d6344ad088b18ed8f8bcd24718ce782e9b1" translate="yes" xml:space="preserve">
          <source>Redis::seeRedisKeyContains</source>
          <target state="translated">Redis::seeRedisKeyContains</target>
        </trans-unit>
        <trans-unit id="8c78f95ffe3fb8cdf8058d9567d582938f3557c3" translate="yes" xml:space="preserve">
          <source>Redis::sendCommandToRedis</source>
          <target state="translated">Redis::sendCommandToRedis</target>
        </trans-unit>
        <trans-unit id="5fbd1d572fc8ab29a4336534baff8dae2e49050c" translate="yes" xml:space="preserve">
          <source>Reference: Codeception\InitTemplate</source>
          <target state="translated">参考にしてみてください。CodeceptionInitTemplate</target>
        </trans-unit>
        <trans-unit id="5c6467c8e0e7fdd5aef0bb6faf9757aac165abea" translate="yes" xml:space="preserve">
          <source>Reference: Codeception\Module</source>
          <target state="translated">参考にしてみてください。CodeceptionModule</target>
        </trans-unit>
        <trans-unit id="dac9a2761445539eeba908e2a1367b0438d50bba" translate="yes" xml:space="preserve">
          <source>Reference: Codeception\Stub</source>
          <target state="translated">参考にしてください。Codeception</target>
        </trans-unit>
        <trans-unit id="b9653992d1ed5a7c913f7c85aca4902d1eb61c20" translate="yes" xml:space="preserve">
          <source>Reference: Configuration</source>
          <target state="translated">リファレンスを参照してください。コンフィギュレーション</target>
        </trans-unit>
        <trans-unit id="2b786d32f44a6cf2bd1cc45f9d2c0eddc2c0aeef" translate="yes" xml:space="preserve">
          <source>Reference: Console Commands</source>
          <target state="translated">参照してください。コンソールコマンド</target>
        </trans-unit>
        <trans-unit id="8a8c2f15815c0ece90623789601538cc827d1808" translate="yes" xml:space="preserve">
          <source>Reference: Mocks</source>
          <target state="translated">参考にしてください。モック</target>
        </trans-unit>
        <trans-unit id="203092bc2133ea054f1450ec93e8f2a2499f2907" translate="yes" xml:space="preserve">
          <source>Reference: Shorthand Functions</source>
          <target state="translated">参考にしてください。速記関数</target>
        </trans-unit>
        <trans-unit id="ef3da6c3ba1d7722879d23858eab1166cf2865ca" translate="yes" xml:space="preserve">
          <source>Register a handler than can be used to modify the Laravel application object after it is initialized. The Laravel application object will be passed as an argument to the handler.</source>
          <target state="translated">Laravelアプリケーションオブジェクトが初期化された後に、Laravelアプリケーションオブジェクトを修正するために使用できるハンドラを登録します。Laravelアプリケーションオブジェクトはハンドラの引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="2e7c058a3d7a8f14617f47f2333bc9664ee295e5" translate="yes" xml:space="preserve">
          <source>Registers a service in the services container and resolve it. This record will be erased after the test. Recommended to use for unit testing.</source>
          <target state="translated">サービスコンテナにサービスを登録して解決します。このレコードはテスト後に消去されます。ユニットテストでの使用を推奨します。</target>
        </trans-unit>
        <trans-unit id="5da4262ce6d4d8a5db1418d86fb149c134fe21d9" translate="yes" xml:space="preserve">
          <source>Related Models Generators</source>
          <target state="translated">関連機種 ジェネレータ</target>
        </trans-unit>
        <trans-unit id="5dba85dc7a5c64bb786526ef873834a3626e2aa5" translate="yes" xml:space="preserve">
          <source>Reloads the current page.</source>
          <target state="translated">現在のページをリロードします。</target>
        </trans-unit>
        <trans-unit id="9f0cdc8307ad8715aaeb9ea0b256f32c8c6899d3" translate="yes" xml:space="preserve">
          <source>Remote CodeCoverage</source>
          <target state="translated">リモートコードカバレッジ</target>
        </trans-unit>
        <trans-unit id="3c5bc18bddb7d6f938b91daed9eebfa9959dcabd" translate="yes" xml:space="preserve">
          <source>Remote Context Options</source>
          <target state="translated">リモートコンテキストオプション</target>
        </trans-unit>
        <trans-unit id="bdfebd1d5489d5611c43603bb8c29af3515a720c" translate="yes" xml:space="preserve">
          <source>Remote Server</source>
          <target state="translated">リモートサーバー</target>
        </trans-unit>
        <trans-unit id="7efc1002fc93525fadb8e1e095b96e34524e793b" translate="yes" xml:space="preserve">
          <source>Remove service $serviceName from the lists of persistent services.</source>
          <target state="translated">永続的なサービスのリストからサービス $serviceName を削除します。</target>
        </trans-unit>
        <trans-unit id="1654140f87858604cf4821b254e59f7cff8d1e60" translate="yes" xml:space="preserve">
          <source>Removes all custom filters</source>
          <target state="translated">すべてのカスタムフィルタを削除</target>
        </trans-unit>
        <trans-unit id="6c343206779e332adea65acb70b2368d3eee0cad" translate="yes" xml:space="preserve">
          <source>Rename/Move directory on the FTP/SFTP server</source>
          <target state="translated">FTP/SFTPサーバ上のディレクトリの名前変更/移動</target>
        </trans-unit>
        <trans-unit id="d43b703cc8be8ada67ceae75dbdd04376e0cf21e" translate="yes" xml:space="preserve">
          <source>Rename/Move file on the FTP/SFTP server</source>
          <target state="translated">FTP/SFTPサーバ上のファイルの名前変更/移動</target>
        </trans-unit>
        <trans-unit id="d2e15ec833661da7ba5cedcdee55f64f184405a3" translate="yes" xml:space="preserve">
          <source>Replaces properties of current stub</source>
          <target state="translated">現在のスタブのプロパティを置き換える</target>
        </trans-unit>
        <trans-unit id="88bc3fe3daddee139809d036f18b985fbe165957" translate="yes" xml:space="preserve">
          <source>Reports</source>
          <target state="translated">Reports</target>
        </trans-unit>
        <trans-unit id="0d5a0b87ca2865a9283cc0282d69b7e4cafae3a6" translate="yes" xml:space="preserve">
          <source>Required to have &lt;code&gt;envs&lt;/code&gt; path to be specified in &lt;code&gt;codeception.yml&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;envs&lt;/code&gt; で指定する &lt;code&gt;codeception.yml&lt;/code&gt; パスが必要です</target>
        </trans-unit>
        <trans-unit id="65f1457df8cab83e682d2399497114217b972d77" translate="yes" xml:space="preserve">
          <source>Requirements and code can change rapidly, and unit tests should be updated every time to fit the requirements. The better you understand the testing scenario, the faster you can update it for new behavior.</source>
          <target state="translated">要件やコードは急速に変化する可能性があり、ユニットテストは要件に合わせて毎回更新する必要があります。テストのシナリオをよりよく理解すればするほど、新しい動作のために素早く更新することができます。</target>
        </trans-unit>
        <trans-unit id="98a9350d5145b5f5ceb6634e242f5b8ec0104d25" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;user&lt;/code&gt; component to be enabled and configured.</source>
          <target state="translated">&lt;code&gt;user&lt;/code&gt; コンポーネントを有効にして構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="ea093d704736984c5c2521e37b07844698aabbee" translate="yes" xml:space="preserve">
          <source>Requires module container (to provide access between modules of suite) and config.</source>
          <target state="translated">モジュールコンテナ (スイートのモジュール間のアクセスを提供する)と config が必要です。</target>
        </trans-unit>
        <trans-unit id="e382ea35c2c1826b16ca394f0154ae025c79226a" translate="yes" xml:space="preserve">
          <source>Requires of api function name and parameters. Parameters can be passed either as DOMDocument, DOMNode, XML string, or array (if no attributes).</source>
          <target state="translated">api 関数名とパラメータが必要です。パラメータは DOMDocument、DOMNode、XML 文字列、配列 (属性がない場合)のいずれかを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="5e9e6aa063a766e59de2ae0ef4d30597d45d069e" translate="yes" xml:space="preserve">
          <source>Requires the &lt;code&gt;user&lt;/code&gt; component to be enabled and configured.</source>
          <target state="translated">必要です &lt;code&gt;user&lt;/code&gt; 有効にして設定するコンポーネントを。</target>
        </trans-unit>
        <trans-unit id="0c4a1b632df46ce11c281b43941a3d5b5a00c15c" translate="yes" xml:space="preserve">
          <source>Resize the current window.</source>
          <target state="translated">現在のウィンドウのサイズを変更します。</target>
        </trans-unit>
        <trans-unit id="fae8e27abc6757aaadef233e5740a5972c3cd3f7" translate="yes" xml:space="preserve">
          <source>Resolves the service based on its configuration from Phalcon&amp;rsquo;s DI container Recommended to use for unit testing.</source>
          <target state="translated">PhalconのDIコンテナーからの構成に基づいてサービスを解決します。ユニットテストでの使用が推奨されます。</target>
        </trans-unit>
        <trans-unit id="2550b1dcad75d54944624facc01b8b305b252bca" translate="yes" xml:space="preserve">
          <source>Responsibility</source>
          <target state="translated">Responsibility</target>
        </trans-unit>
        <trans-unit id="b735d319c8b8f2783966dbcb8da6be6a60ff1038" translate="yes" xml:space="preserve">
          <source>Restarts a web browser. Can be used with &lt;code&gt;_reconfigure&lt;/code&gt; to open browser with different configuration</source>
          <target state="translated">Webブラウザを再起動します。 &lt;code&gt;_reconfigure&lt;/code&gt; と共に使用して、異なる構成でブラウザーを開くことができます</target>
        </trans-unit>
        <trans-unit id="308c20f6e42bc9d32a0a6778682cbd4146b3b64f" translate="yes" xml:space="preserve">
          <source>Result, Printer</source>
          <target state="translated">結果、プリンタ</target>
        </trans-unit>
        <trans-unit id="f1b2494ab135447d0e48a42b6f83dd48402b87de" translate="yes" xml:space="preserve">
          <source>Retries are disabled by default. To enable them you should add retry step decorators to suite config:</source>
          <target state="translated">リトライはデフォルトでは無効になっています。これを有効にするには、スイートの設定にリトライステップデコレータを追加しなければなりません。</target>
        </trans-unit>
        <trans-unit id="804f5e9a52be12b112ed42e9e08fc6a30aac055a" translate="yes" xml:space="preserve">
          <source>Retrieves a record from the database</source>
          <target state="translated">データベースからレコードを取得します</target>
        </trans-unit>
        <trans-unit id="da8349a067fdd31dcfd00732322c1f047517e17f" translate="yes" xml:space="preserve">
          <source>Retrieves number of records from database You can pass the name of a database table or the class name of an Eloquent model as the first argument.</source>
          <target state="translated">データベースからレコード数を取得します データベーステーブル名またはEloquentモデルのクラス名を第1引数に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="47621ad26b240c01b64e40432883c5013af05506" translate="yes" xml:space="preserve">
          <source>Retrieves record from database</source>
          <target state="translated">データベースからレコードを取得します。</target>
        </trans-unit>
        <trans-unit id="fcf3ad478ca2e52d08d1913576a635b673d0041a" translate="yes" xml:space="preserve">
          <source>Retrieves record from database If you pass the name of a database table as the first argument, this method returns an array. You can also pass the class name of an Eloquent model, in that case this method returns an Eloquent model.</source>
          <target state="translated">データベースからレコードを取得する 第一引数にデータベーステーブル名を渡すと、このメソッドは配列を返します。また、Eloquent モデルのクラス名を渡すこともできますが、その場合、このメソッドは Eloquent モデルを返します。</target>
        </trans-unit>
        <trans-unit id="9f5cd8a2e8807d73efa02c844bfbca9fe552b283" translate="yes" xml:space="preserve">
          <source>Retry</source>
          <target state="translated">Retry</target>
        </trans-unit>
        <trans-unit id="0c114cfd48b5bd355896ec273eda01e44c90598f" translate="yes" xml:space="preserve">
          <source>Retry can be configured via &lt;code&gt;$I-&amp;gt;retry()&lt;/code&gt; command, where you can set number of retries and initial interval: interval will be doubled on each unsuccessful execution.</source>
          <target state="translated">&lt;code&gt;$I-&amp;gt;retry()&lt;/code&gt; コマンドを使用して再試行を構成できます。ここで、再試行の回数と初期間隔を設定できます。失敗した実行ごとに間隔が2倍になります。</target>
        </trans-unit>
        <trans-unit id="4d9e1e67f393a4241e354a9d74e84e445d1fd47d" translate="yes" xml:space="preserve">
          <source>Return an instance of a class from the IoC Container.</source>
          <target state="translated">IoCコンテナからクラスのインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="e56ddd4c20d2036134b3840bd0419298c5cb4cac" translate="yes" xml:space="preserve">
          <source>Return an instance of a class from the Laravel service container. (https://laravel.com/docs/master/container)</source>
          <target state="translated">Laravelサービスコンテナからクラスのインスタンスを返します。(https://laravel.com/docs/master/container)</target>
        </trans-unit>
        <trans-unit id="db8f2b6863bfe751915385956efbf9a01f62695d" translate="yes" xml:space="preserve">
          <source>Returns URL of a host.</source>
          <target state="translated">ホストのURLを返します。</target>
        </trans-unit>
        <trans-unit id="ff8c4b194762d14eefa4e6bbc105efc2b01936c9" translate="yes" xml:space="preserve">
          <source>Returns a list of regex patterns for recognized domain names</source>
          <target state="translated">認識されたドメイン名の正規表現パターンのリストを返します</target>
        </trans-unit>
        <trans-unit id="06d886ad4af1d76db8d164905f973b800a8c9456" translate="yes" xml:space="preserve">
          <source>Returns a module name for a Module, a class name for Helper</source>
          <target state="translated">モジュールのモジュール名、Helperのクラス名を返します。</target>
        </trans-unit>
        <trans-unit id="5fced89db115ff39de5da90c5ab6e997d0da8991" translate="yes" xml:space="preserve">
          <source>Returns absolute path to data directory (&lt;code&gt;tests/_data&lt;/code&gt;)</source>
          <target state="translated">データディレクトリへの絶対パスを返します（ &lt;code&gt;tests/_data&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c37a1e04d9eb8030f7ad06c48d2fce670a916666" translate="yes" xml:space="preserve">
          <source>Returns absolute path to output directory (&lt;code&gt;tests/_output&lt;/code&gt;)</source>
          <target state="translated">出力ディレクトリへの絶対パスを返します（ &lt;code&gt;tests/_output&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d94eeaf68642edcb1a1c28074b999e3055595dd9" translate="yes" xml:space="preserve">
          <source>Returns absolute path to the root directory (where &lt;code&gt;codeception.yml&lt;/code&gt; is located)</source>
          <target state="translated">ルートディレクトリ（ &lt;code&gt;codeception.yml&lt;/code&gt; がある場所）への絶対パスを返します。</target>
        </trans-unit>
        <trans-unit id="fb3ef8bff7f479a158e4ce33271fb4018835f473" translate="yes" xml:space="preserve">
          <source>Returns all loaded fixtures. Array of fixture instances</source>
          <target state="translated">ロードされたすべてのフィクスチャを返します。フィクスチャインスタンスの配列</target>
        </trans-unit>
        <trans-unit id="8db3ea59aebd75b22cf656019549e4da52871986" translate="yes" xml:space="preserve">
          <source>Returns an instance of created user without creating a record in database.</source>
          <target state="translated">データベースにレコードを作成せずに作成したユーザーのインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="dcf9e5ad41937db317ece798bf6673375af26cc4" translate="yes" xml:space="preserve">
          <source>Returns an instance of created user.</source>
          <target state="translated">作成されたユーザーのインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="d279d07fb22cf538b5add9ed51d79581bfd76fe4" translate="yes" xml:space="preserve">
          <source>Returns array of all sent email messages. Each message implements &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; interface. Useful to perform additional checks using &lt;code&gt;Asserts&lt;/code&gt; module:</source>
          <target state="translated">送信されたすべての電子メールメッセージの配列を返します。各メッセージは &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; インターフェースを実装しています。 &lt;code&gt;Asserts&lt;/code&gt; モジュールを使用して追加のチェックを実行するのに便利です：</target>
        </trans-unit>
        <trans-unit id="b80e531cd3ca238d6a6c26186b71a33403c3fdd1" translate="yes" xml:space="preserve">
          <source>Returns array of all sent email messages. Each message implements the &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; interface. Useful to perform additional checks using the &lt;code&gt;Asserts&lt;/code&gt; module:</source>
          <target state="translated">送信されたすべての電子メールメッセージの配列を返します。各メッセージは &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; インターフェースを実装します。 &lt;code&gt;Asserts&lt;/code&gt; モジュールを使用して追加のチェックを実行するのに便利です。</target>
        </trans-unit>
        <trans-unit id="c83f51bbf84cdb990d0380df70265a90d7c0fd55" translate="yes" xml:space="preserve">
          <source>Returns content of the last response Use it in Helpers when you want to retrieve response of request performed by another module.</source>
          <target state="translated">最後のレスポンスの内容を返します。 他のモジュールが実行したリクエストのレスポンスを取得したい場合にヘルパーで使用します。</target>
        </trans-unit>
        <trans-unit id="40b57844bc3b3b8054d3303f949d6437385bc5a5" translate="yes" xml:space="preserve">
          <source>Returns current WebDriver session for saving</source>
          <target state="translated">保存するための現在の WebDriver セッションを返します</target>
        </trans-unit>
        <trans-unit id="f9017dab7feca8add002f063e5e0997c0f6dac91" translate="yes" xml:space="preserve">
          <source>Returns current response so that it can be used in next scenario steps.</source>
          <target state="translated">次のシナリオステップで使用できるように、現在のレスポンスを返します。</target>
        </trans-unit>
        <trans-unit id="67dcd5bda56e954467eb5ba0141a2fb1719619cd" translate="yes" xml:space="preserve">
          <source>Returns data from the current JSON response using &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JSONPath&lt;/a&gt; as selector. JsonPath is XPath equivalent for querying Json structures. Try your JsonPath expressions &lt;a href=&quot;http://jsonpath.curiousconcept.com/&quot;&gt;online&lt;/a&gt;. Even for a single value an array is returned.</source>
          <target state="translated">&lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JSONPath&lt;/a&gt;をセレクターとして使用して、現在のJSON応答からデータを返します。 JsonPathは、Json構造のクエリに相当するXPathです。 JsonPath式を&lt;a href=&quot;http://jsonpath.curiousconcept.com/&quot;&gt;オンラインで&lt;/a&gt;試してください。単一の値の場合でも、配列が返されます。</target>
        </trans-unit>
        <trans-unit id="50b5d884b0cce6fea0b033b50d0d24c03ee5289f" translate="yes" xml:space="preserve">
          <source>Returns last sent email:</source>
          <target state="translated">最後に送信したメールを返します。</target>
        </trans-unit>
        <trans-unit id="3204dd0909e5ffc1a1d3acb5ec35539187d56883" translate="yes" xml:space="preserve">
          <source>Returns string with HTTP code and its description</source>
          <target state="translated">HTTP コードとその説明を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="1bb6722f9f3c13e372d813e172c4384489e38d33" translate="yes" xml:space="preserve">
          <source>Returns the last sent email:</source>
          <target state="translated">最後に送信したメールを返します。</target>
        </trans-unit>
        <trans-unit id="0cf040af2c07506a1298fbf4c859325c9c3e941f" translate="yes" xml:space="preserve">
          <source>Returns the number of rows in a database</source>
          <target state="translated">データベースの行数を返します。</target>
        </trans-unit>
        <trans-unit id="1b377c7794eb3bfc3fc696185a12b39dee46d4c6" translate="yes" xml:space="preserve">
          <source>Returns the output from latest command</source>
          <target state="translated">最新のコマンドの出力を返します。</target>
        </trans-unit>
        <trans-unit id="46d8cf46b8a39460ca00df9fb6ffb1845b02f768" translate="yes" xml:space="preserve">
          <source>Returns the primary key of the newly created entity. The primary key value is extracted using Reflection API. If the primary key is composite, an array of values is returned.</source>
          <target state="translated">新規作成したエンティティの主キーを返します。主キーの値はReflection APIを用いて抽出されます。主キーが合成の場合は、値の配列を返します。</target>
        </trans-unit>
        <trans-unit id="afa0a747c52d936ed740b1688983c978f928bfcc" translate="yes" xml:space="preserve">
          <source>Returns the value of a given key</source>
          <target state="translated">指定したキーの値を返します</target>
        </trans-unit>
        <trans-unit id="420487b6c1d1959f86bd47c3eb74383f7c567572" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified header name</source>
          <target state="translated">指定したヘッダ名の値を返します。</target>
        </trans-unit>
        <trans-unit id="deb4013028bb9e2182b9a7800eba87649edc2c45" translate="yes" xml:space="preserve">
          <source>Reusing Test Code</source>
          <target state="translated">テストコードの再利用</target>
        </trans-unit>
        <trans-unit id="2e51b525c126ca5378c6902c699d01d22aa5d2cb" translate="yes" xml:space="preserve">
          <source>Reverts config changed by &lt;code&gt;_reconfigure&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_reconfigure&lt;/code&gt; によって変更された構成を元に戻します</target>
        </trans-unit>
        <trans-unit id="fcfcfa9648a8f46a311cd9262cfc9a5aec91359c" translate="yes" xml:space="preserve">
          <source>Robo</source>
          <target state="translated">Robo</target>
        </trans-unit>
        <trans-unit id="8ca46137171b0637a7e259d23112acf2cf5544ed" translate="yes" xml:space="preserve">
          <source>Robo has &lt;code&gt;ParallelExec&lt;/code&gt; task to spawn background processes.</source>
          <target state="translated">Roboには、バックグラウンドプロセスを生成する &lt;code&gt;ParallelExec&lt;/code&gt; タスクがあります。</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="1a3d7f7cb9d0e0c79e8eda4ec47ffd0d2fb07d59" translate="yes" xml:space="preserve">
          <source>Run &lt;a href=&quot;https://testingbot.com/support/other/tunnel&quot;&gt;TestingBot Tunnel&lt;/a&gt; if your site can&amp;rsquo;t be accessed from Internet</source>
          <target state="translated">インターネットからサイトにアクセスできない場合は、&lt;a href=&quot;https://testingbot.com/support/other/tunnel&quot;&gt;TestingBotトンネルを&lt;/a&gt;実行します</target>
        </trans-unit>
        <trans-unit id="127c17eb6297dc7a00676e8cc9b27eaf1f47d8ab" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;codecept build&lt;/code&gt; to recreate actions. New &lt;code&gt;retry*&lt;/code&gt; actions are available for tests. Keep in mind, that you can change retry policy dynamically for each test.</source>
          <target state="translated">&lt;code&gt;codecept build&lt;/code&gt; を実行してアクションを再作成します。テストでは、新しい &lt;code&gt;retry*&lt;/code&gt; アクションを使用できます。テストごとに動的に再試行ポリシーを変更できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="893d432e8d2cfd449fcbddc4600d70808aa1a6a7" translate="yes" xml:space="preserve">
          <source>Run PhantomJS in WebDriver mode: &lt;code&gt;phantomjs --webdriver=4444&lt;/code&gt;</source>
          <target state="translated">PhantomJSをWebDriverモードで実行します： &lt;code&gt;phantomjs --webdriver=4444&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f5bc935f0b9236d3dce444fbe9bf8703494fd38" translate="yes" xml:space="preserve">
          <source>Run Symfony console command, grab response and return as string. Recommended to use for integration or functional testing.</source>
          <target state="translated">symfonyのコンソールコマンドを実行し、レスポンスを取得して文字列として返す。統合もしくは機能テストに使うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a31d3a7e43704638b792a3a8f837375520d6f468" translate="yes" xml:space="preserve">
          <source>Run official Codeception image from DockerHub:</source>
          <target state="translated">DockerHubからCodeceptionの公式イメージを実行します。</target>
        </trans-unit>
        <trans-unit id="c2dabe0d1ec6c2dc53abdebfa0b5175ff236cc2f" translate="yes" xml:space="preserve">
          <source>Run suite</source>
          <target state="translated">実行スイート</target>
        </trans-unit>
        <trans-unit id="79d130c80ea3a3c4e817f10281a6e616289c457f" translate="yes" xml:space="preserve">
          <source>Run tests in real browsers using the W3C &lt;a href=&quot;https://www.w3.org/TR/webdriver/&quot;&gt;WebDriver protocol&lt;/a&gt;.</source>
          <target state="translated">W3C &lt;a href=&quot;https://www.w3.org/TR/webdriver/&quot;&gt;WebDriverプロトコル&lt;/a&gt;を使用して、実際のブラウザでテストを実行します。</target>
        </trans-unit>
        <trans-unit id="f34de89f998f6d6d56d24869aa38d737aed87a7e" translate="yes" xml:space="preserve">
          <source>Run with specific extension</source>
          <target state="translated">特定の拡張子で実行</target>
        </trans-unit>
        <trans-unit id="7ec9eede60ad8e8637510a86e616531533ada02f" translate="yes" xml:space="preserve">
          <source>Running Tests</source>
          <target state="translated">テストの実行</target>
        </trans-unit>
        <trans-unit id="95b3e2f62b81423684144192c2c8ea2dc74b43a4" translate="yes" xml:space="preserve">
          <source>Running from different folders</source>
          <target state="translated">異なるフォルダからの実行</target>
        </trans-unit>
        <trans-unit id="073697e8eef06b1064b0ed4434d34301870f3da4" translate="yes" xml:space="preserve">
          <source>Running tests from a project, by mounting the current path as a host-volume into the container. The &lt;strong&gt;default working directory in the container is &lt;code&gt;/project&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">現在のパスをホストボリュームとしてコンテナーにマウントすることにより、プロジェクトからテストを実行します。&lt;strong&gt;コンテナ &lt;code&gt;/project&lt;/code&gt; &lt;/strong&gt;の&lt;strong&gt;デフォルトの作業ディレクトリは&lt;/strong&gt;&lt;strong&gt;/ project&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="222cad2bd37e45b5f33d5d967590f4b613622bfd" translate="yes" xml:space="preserve">
          <source>Runtime Configuration</source>
          <target state="translated">ランタイム設定</target>
        </trans-unit>
        <trans-unit id="1dbe53a131007b4bd49153486ad86e9ed7127e10" translate="yes" xml:space="preserve">
          <source>Runtime Configuration of a Test</source>
          <target state="translated">テストのランタイム設定</target>
        </trans-unit>
        <trans-unit id="7d82e7043f2d167414bb42b0a8dee09eec1ec3ca" translate="yes" xml:space="preserve">
          <source>SFTP</source>
          <target state="translated">SFTP</target>
        </trans-unit>
        <trans-unit id="2034ddf88a147575fe84f6a77a3916dc856bbd69" translate="yes" xml:space="preserve">
          <source>SFTP: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">SFTP：&lt;strong&gt;安定&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d4012e4dab8287d12a2889789984334fc5c8763" translate="yes" xml:space="preserve">
          <source>SOAP</source>
          <target state="translated">SOAP</target>
        </trans-unit>
        <trans-unit id="87c9a29d3df78eb31b27df74b9c16d7b10d01d8c" translate="yes" xml:space="preserve">
          <source>SOAP API</source>
          <target state="translated">SOAP AP API</target>
        </trans-unit>
        <trans-unit id="962d69945e516c9c8035faa5c69a12da1672b228" translate="yes" xml:space="preserve">
          <source>SOAP request may contain application specific information, like authentication or payment. This information is provided with SOAP header inside the &lt;code&gt;&amp;lt;soap:Header&amp;gt;&lt;/code&gt; element of XML request. In case you need to submit such header, you can use &lt;code&gt;haveSoapHeader&lt;/code&gt; action. For example, next line of code</source>
          <target state="translated">SOAPリクエストには、認証や支払いなどのアプリケーション固有の情報が含まれる場合があります。この情報は、XMLリクエストの &lt;code&gt;&amp;lt;soap:Header&amp;gt;&lt;/code&gt; 要素内のSOAPヘッダーで提供されます。このようなヘッダーを送信する必要がある場合は、 &lt;code&gt;haveSoapHeader&lt;/code&gt; アクションを使用できます。たとえば、次のコード行</target>
        </trans-unit>
        <trans-unit id="4a7c1a54e7f6271dfa65a6c0612283e1aeabfc9f" translate="yes" xml:space="preserve">
          <source>SOAP web services are usually more complex. You will need PHP &lt;a href=&quot;https://php.net/manual/en/soap.installation.php&quot;&gt;configured with SOAP support&lt;/a&gt;. Good knowledge of XML is required too. &lt;code&gt;SOAP&lt;/code&gt; module uses specially formatted POST request to connect to WSDL web services. Codeception uses &lt;code&gt;PhpBrowser&lt;/code&gt; or one of framework modules to perform interactions. If you choose using a framework module, SOAP will automatically connect to the underlying framework. That may improve the speed of a test execution and will provide you with more detailed stack traces.</source>
          <target state="translated">SOAP Webサービスは通常、より複雑です。&lt;a href=&quot;https://php.net/manual/en/soap.installation.php&quot;&gt;SOAPサポートで構成された&lt;/a&gt; PHPが必要です。XMLについての十分な知識も必要です。 &lt;code&gt;SOAP&lt;/code&gt; モジュールは、特別にフォーマットされたPOST要求を使用して、WSDL Webサービスに接続します。Codeceptionは、 &lt;code&gt;PhpBrowser&lt;/code&gt; またはフレームワークモジュールの1つを使用して対話を実行します。フレームワークモジュールの使用を選択した場合、SOAPは自動的に基礎となるフレームワークに接続します。これにより、テストの実行速度が向上し、より詳細なスタックトレースが提供されます。</target>
        </trans-unit>
        <trans-unit id="5e7626e5b21c04e1dbd440bcd9c34317efcf616a" translate="yes" xml:space="preserve">
          <source>SOAP::dontSeeSoapResponseContainsStructure</source>
          <target state="translated">SOAP::dontSeeSoapResponseContainsStructure</target>
        </trans-unit>
        <trans-unit id="129713de9ba7e9bcc9fd5757757a74d789552f42" translate="yes" xml:space="preserve">
          <source>SOAP::dontSeeSoapResponseContainsXPath</source>
          <target state="translated">SOAP::dontSeeSoapResponseContainsXPath</target>
        </trans-unit>
        <trans-unit id="6bf131da4f24d170644f98611fd1df67ed6e00a3" translate="yes" xml:space="preserve">
          <source>SOAP::dontSeeSoapResponseEquals</source>
          <target state="translated">SOAP::dontSeeSoapResponseEquals</target>
        </trans-unit>
        <trans-unit id="d41495c4fe888f10a7f8e2a88622c135aaf1b2f9" translate="yes" xml:space="preserve">
          <source>SOAP::dontSeeSoapResponseIncludes</source>
          <target state="translated">SOAP::dontSeeSoapResponseIncludes</target>
        </trans-unit>
        <trans-unit id="6ce2fd540a5709e7653cf32f731d936733fcdbab" translate="yes" xml:space="preserve">
          <source>SOAP::grabAttributeFrom</source>
          <target state="translated">SOAP::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="28738b15d5e690b60f2ebde5e0112fd74ca53aab" translate="yes" xml:space="preserve">
          <source>SOAP::grabTextContentFrom</source>
          <target state="translated">SOAP::grabTextContentFrom</target>
        </trans-unit>
        <trans-unit id="b0853eade6b398deea2d90340c746b4373764cee" translate="yes" xml:space="preserve">
          <source>SOAP::haveSoapHeader</source>
          <target state="translated">SOAP::haveSoapHeader</target>
        </trans-unit>
        <trans-unit id="71ee8f5563b4007ff83e87e21d2f0e154101cce1" translate="yes" xml:space="preserve">
          <source>SOAP::seeSoapResponseCodeIs</source>
          <target state="translated">SOAP::seeSoapResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="d038716d3f9b933885e91c6423996445b5cace75" translate="yes" xml:space="preserve">
          <source>SOAP::seeSoapResponseContainsStructure</source>
          <target state="translated">SOAP::seeSoapResponseContainsStructure</target>
        </trans-unit>
        <trans-unit id="26dc13d9b91aa82fe3bf382089dfc69d3e400da4" translate="yes" xml:space="preserve">
          <source>SOAP::seeSoapResponseContainsXPath</source>
          <target state="translated">SOAP::seeSoapResponseContainsXPath</target>
        </trans-unit>
        <trans-unit id="d5a238dead993a222382fb5a314e80975a38c702" translate="yes" xml:space="preserve">
          <source>SOAP::seeSoapResponseEquals</source>
          <target state="translated">SOAP::seeSoapResponseEquals</target>
        </trans-unit>
        <trans-unit id="c27d711731f690730a6b87ef70e204dd48405864" translate="yes" xml:space="preserve">
          <source>SOAP::seeSoapResponseIncludes</source>
          <target state="translated">SOAP::seeSoapResponseIncludes</target>
        </trans-unit>
        <trans-unit id="3f177034fb3a5c732236fd05e04fe19b1750e1d5" translate="yes" xml:space="preserve">
          <source>SOAP::sendSoapRequest</source>
          <target state="translated">SOAP::sendSoapRequest</target>
        </trans-unit>
        <trans-unit id="cee73788e9d0b54043608dea97e18cfd69adfbfa" translate="yes" xml:space="preserve">
          <source>SOAPAction - replace SOAPAction HTTP header (Set to &amp;lsquo;&amp;rsquo; to SOAP 1.2)</source>
          <target state="translated">SOAPAction-SOAPAction HTTPヘッダーを置き換えます（ ''に設定してSOAP 1.2に）</target>
        </trans-unit>
        <trans-unit id="6dabef06555a74f22570765f748ec12add66fcc6" translate="yes" xml:space="preserve">
          <source>SQL data dump</source>
          <target state="translated">エスエルデータダンプ</target>
        </trans-unit>
        <trans-unit id="56074ab04bfb6ddff0d654a87ae2f322ed01d570" translate="yes" xml:space="preserve">
          <source>SQLite (i.e. just one file)</source>
          <target state="translated">SQLite</target>
        </trans-unit>
        <trans-unit id="ee383b7b1861de1ac0054459deaecfbaa1724df1" translate="yes" xml:space="preserve">
          <source>SQLite: &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-sqlite.connection.php&quot;&gt;PDO_SQLITE DSN&lt;/a&gt;</source>
          <target state="translated">SQLite：&lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-sqlite.connection.php&quot;&gt;PDO_SQLITE DSN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6365ea350254b45c6b5e85fbcc5b527e5c06756" translate="yes" xml:space="preserve">
          <source>SQLite: &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-sqlite.connection.php&quot;&gt;PDO_SQLITE DSN&lt;/a&gt; - use &lt;em&gt;relative&lt;/em&gt; path from the project root</source>
          <target state="translated">SQLite：&lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-sqlite.connection.php&quot;&gt;PDO_SQLITEDSN-&lt;/a&gt;プロジェクトルートからの&lt;em&gt;相対&lt;/em&gt;パスを使用</target>
        </trans-unit>
        <trans-unit id="db772e92846c669773701839a17f56147935ec8e" translate="yes" xml:space="preserve">
          <source>Sample Scenario</source>
          <target state="translated">サンプルシナリオ</target>
        </trans-unit>
        <trans-unit id="08fe0942507cfea4198223d0c740a4445c27ca01" translate="yes" xml:space="preserve">
          <source>Sample acceptance test</source>
          <target state="translated">サンプル受入試験</target>
        </trans-unit>
        <trans-unit id="6e998264f7d127a451749d82f13cda6bb64ba856" translate="yes" xml:space="preserve">
          <source>Sample bootstrap (&lt;code&gt;app/config/bootstrap.php&lt;/code&gt;):</source>
          <target state="translated">ブートストラップのサンプル（ &lt;code&gt;app/config/bootstrap.php&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="0b210fb88429673759e8137662c7f61474bd7dc8" translate="yes" xml:space="preserve">
          <source>Sample functional test</source>
          <target state="translated">サンプル機能テスト</target>
        </trans-unit>
        <trans-unit id="c04bb59ca2d45c09c11f79d058be55c9d627e5db" translate="yes" xml:space="preserve">
          <source>Sample integration test</source>
          <target state="translated">統合テストのサンプル</target>
        </trans-unit>
        <trans-unit id="013bfd20d5a21fd2c3d0eed3c9b347644f4d5bba" translate="yes" xml:space="preserve">
          <source>SauceLabs</source>
          <target state="translated">SauceLabs</target>
        </trans-unit>
        <trans-unit id="141b4d28e2de94bfb4d707c26641ab701acbb1bf" translate="yes" xml:space="preserve">
          <source>Saves HTML source of a page to a file</source>
          <target state="translated">ページのHTMLソースをファイルに保存する</target>
        </trans-unit>
        <trans-unit id="2e79b804c6e9f3a3a8dee4afe8dfc9000dbab43d" translate="yes" xml:space="preserve">
          <source>Saves contents to file</source>
          <target state="translated">内容をファイルに保存</target>
        </trans-unit>
        <trans-unit id="effc5b2f1dd1aa5684af6f3ad4b65cd2c3460093" translate="yes" xml:space="preserve">
          <source>Saves contents to tmp file and uploads the FTP/SFTP system. Overwrites current file on server if exists.</source>
          <target state="translated">内容をtmpファイルに保存し、FTP/SFTPシステムにアップロードします。サーバ上に現在のファイルがあれば上書きします。</target>
        </trans-unit>
        <trans-unit id="395ab3ce01d6cba1b1c65753fc428c491caca8a6" translate="yes" xml:space="preserve">
          <source>Saves current cookies into named snapshot in order to restore them in other tests This is useful to save session state between tests. For example, if user needs log in to site for each test this scenario can be executed once while other tests can just restore saved cookies.</source>
          <target state="translated">他のテストで復元するために、現在のクッキーを名前のついたスナップショットに保存します これは、テスト間のセッション状態を保存するのに便利です。例えば、各テストでユーザーがサイトにログインする必要がある場合、このシナリオは一度実行され、他のテストでは保存されたクッキーを復元することができます。</target>
        </trans-unit>
        <trans-unit id="53d518e4bc362da4e5fcc8335a378e0b0bc00323" translate="yes" xml:space="preserve">
          <source>Saves current page&amp;rsquo;s HTML into a temprary file. Use this method in debug mode within an interactive pause to get a source code of current page.</source>
          <target state="translated">現在のページのHTMLを一時ファイルに保存します。現在のページのソースコードを取得するには、インタラクティブポーズ内のデバッグモードでこのメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="49c615b500b02a2288ff578e37f3ed78baca7039" translate="yes" xml:space="preserve">
          <source>Saves page source of to a file</source>
          <target state="translated">ページのソースをファイルに保存</target>
        </trans-unit>
        <trans-unit id="17e07cb1fa3e92fef9abbf6adfd6e6db4fb32016" translate="yes" xml:space="preserve">
          <source>Saves screenshot of current page to a file</source>
          <target state="translated">現在のページのスクリーンショットをファイルに保存する</target>
        </trans-unit>
        <trans-unit id="376ce3241cbeebec6b69e45ca7209ba981341f1a" translate="yes" xml:space="preserve">
          <source>Scenario Driven Testing</source>
          <target state="translated">ドリブンテストシナリオ</target>
        </trans-unit>
        <trans-unit id="2dd4a83d012acd714fbd600cfb9847611783fea3" translate="yes" xml:space="preserve">
          <source>Scenarios</source>
          <target state="translated">Scenarios</target>
        </trans-unit>
        <trans-unit id="34c1918b2a4b9612d701de55207d79e2d08b7a2b" translate="yes" xml:space="preserve">
          <source>Scenarios are live examples of feature usage. Inside a feature file it should be written inside a &lt;em&gt;Feature&lt;/em&gt; block. Each scenario should contain its title:</source>
          <target state="translated">シナリオは、機能の使用に関する実際の例です。機能ファイル内では、&lt;em&gt;Feature&lt;/em&gt;ブロック内に書き込む必要があります。各シナリオにはタイトルが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="0f1e7edea1e62bf8f0750b5063b3924d3112bc6e" translate="yes" xml:space="preserve">
          <source>Scenarios are written in step-by-step manner using Given-When-Then approach. At start, scenario should describe its context with &lt;strong&gt;Given&lt;/strong&gt; keyword:</source>
          <target state="translated">シナリオは、Given-When-Thenアプローチを使用して段階的に記述されます。最初に、シナリオは&lt;strong&gt;与えられた&lt;/strong&gt;キーワードでそのコンテキストを説明する必要があります：</target>
        </trans-unit>
        <trans-unit id="09c0fd05aa148422ab4cc48ecaa31dc0d5240007" translate="yes" xml:space="preserve">
          <source>Scenarios can become more descriptive when you represent repeating data as tables. Instead of writing several steps &amp;ldquo;I have product with :num1 $ price in my cart&amp;rdquo; we can have one step with multiple values in it.</source>
          <target state="translated">繰り返しデータをテーブルとして表すと、シナリオがよりわかりやすくなります。「カートに：num1 $の価格の商品があります」といういくつかのステップを書く代わりに、1つのステップに複数の値を含めることができます。</target>
        </trans-unit>
        <trans-unit id="8bd24e925951178be4ac3e8d414befeadbd6a24a" translate="yes" xml:space="preserve">
          <source>Scope of the test</source>
          <target state="translated">試験範囲</target>
        </trans-unit>
        <trans-unit id="47377fabb6379138a1f85a8eeb42cf5a0faa76cb" translate="yes" xml:space="preserve">
          <source>See -&amp;gt;sendAjaxPostRequest for examples.</source>
          <target state="translated">例については、-&amp;gt; sendAjaxPostRequestを参照してください。</target>
        </trans-unit>
        <trans-unit id="3e46a520107bd298488db2a1e76a92fb86815c9d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#saveSessionSnapshot&quot;&gt;saveSessionSnapshot&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#saveSessionSnapshot&quot;&gt;saveSessionSnapshotを&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="43b159bf9d6c5e567e566d765cec13fbd154843f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;modules/webdriver&quot;&gt;WebDriver Module&lt;/a&gt; for details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;modules/webdriver&quot;&gt;WebDriverモジュール&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="bf530574f6996768728fcffe080a60b4a515ed12" translate="yes" xml:space="preserve">
          <source>See a reference for &lt;a href=&quot;reference/stub&quot;&gt;static Stub API&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;reference/stub&quot;&gt;静的スタブAPIの&lt;/a&gt;リファレンスをご覧ください</target>
        </trans-unit>
        <trans-unit id="f78a0fd348a8c3c088143e2d60763a7eba0ae02e" translate="yes" xml:space="preserve">
          <source>See complete reference</source>
          <target state="translated">完全なリファレンスを参照してください。</target>
        </trans-unit>
        <trans-unit id="e50f5d76c6b4b7c5bf7237c978c5ca1450881707" translate="yes" xml:space="preserve">
          <source>See module reference to more configuration options</source>
          <target state="translated">設定オプションの詳細については、モジュールリファレンスを参照してください。</target>
        </trans-unit>
        <trans-unit id="7ab9e1ba790fe004137566addf7c37273cf25542" translate="yes" xml:space="preserve">
          <source>See source</source>
          <target state="translated">ソースを参照してください。</target>
        </trans-unit>
        <trans-unit id="090912c1d8249702a943a89dea57bebd2acee63b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;modules/db#SQL-data-dump&quot;&gt;Db module reference&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;modules/db#SQL-data-dump&quot;&gt;DBモジュールリファレンス&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="b6f53208d2610aa5f6b97dc30d062fb9b97f99cd" translate="yes" xml:space="preserve">
          <source>See the full reference</source>
          <target state="translated">完全なリファレンスを参照してください。</target>
        </trans-unit>
        <trans-unit id="9205d253c01ada319d310fd9426bacb08e15b1e6" translate="yes" xml:space="preserve">
          <source>See the module &lt;a href=&quot;modules/db&quot;&gt;reference&lt;/a&gt; for other methods you can use for database testing.</source>
          <target state="translated">データベースのテストに使用できる他の方法については、モジュール&lt;a href=&quot;modules/db&quot;&gt;リファレンス&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="80c71ed2293ef0e507751220ae61d087697366b2" translate="yes" xml:space="preserve">
          <source>Selects a single entity from repository. It builds query based on array of parameters. You can use entity associations to build complex queries.</source>
          <target state="translated">リポジトリから単一のエンティティを選択します。パラメータの配列に基づいてクエリを構築します。エンティティの関連付けを使用して複雑なクエリを構築することができます。</target>
        </trans-unit>
        <trans-unit id="b9233e63ab8b52e0a20ad8a02a628e6370cf572c" translate="yes" xml:space="preserve">
          <source>Selects an option in a select tag or in radio button group.</source>
          <target state="translated">セレクトタグやラジオボタングループのオプションを選択します。</target>
        </trans-unit>
        <trans-unit id="7cab12f0f694d3e94ecbb1a6d02de55b627e3ef7" translate="yes" xml:space="preserve">
          <source>Selects entities from repository. It builds query based on array of parameters. You can use entity associations to build complex queries.</source>
          <target state="translated">リポジトリからエンティティを選択します。パラメータの配列に基づいてクエリを構築します。エンティティの関連付けを使用して複雑なクエリを構築することができます。</target>
        </trans-unit>
        <trans-unit id="588d879472d20fa74aa9e752ec9bfd9566d5b038" translate="yes" xml:space="preserve">
          <source>Selects field value from repository. It builds query based on array of parameters. You can use entity associations to build complex queries.</source>
          <target state="translated">リポジトリからフィールド値を選択します。パラメータの配列に基づいてクエリを構築します。エンティティの関連付けを使用して複雑なクエリを構築することができます。</target>
        </trans-unit>
        <trans-unit id="d9feeabbe750108faaaa0b62198ff56913461830" translate="yes" xml:space="preserve">
          <source>Selenium</source>
          <target state="translated">Selenium</target>
        </trans-unit>
        <trans-unit id="04877e810e0418d437508dd632db4c976857a99b" translate="yes" xml:space="preserve">
          <source>Selenium Server</source>
          <target state="translated">セレンサーバー</target>
        </trans-unit>
        <trans-unit id="301f1a3b0d8e9a464a699ae0f9108d99dc065db4" translate="yes" xml:space="preserve">
          <source>Selenium Standalone Server, Chrome or Firefox</source>
          <target state="translated">Seleniumスタンドアロンサーバー、ChromeまたはFirefox</target>
        </trans-unit>
        <trans-unit id="99ac8a05d216a7974637c8d289a8e967d9b95fa5" translate="yes" xml:space="preserve">
          <source>Selenium for browser testing</source>
          <target state="translated">ブラウザテストのためのSelenium</target>
        </trans-unit>
        <trans-unit id="6f492a8e4c43e593f946e186e9f1024aa659066c" translate="yes" xml:space="preserve">
          <source>SelfUpdate</source>
          <target state="translated">SelfUpdate</target>
        </trans-unit>
        <trans-unit id="ae8b951455a74309fdb7c303a929eb9f3abb5bd8" translate="yes" xml:space="preserve">
          <source>Send custom request to a backend using method, uri, parameters, etc. Use it in Helpers to create special request actions, like accessing API Returns a string with response body.</source>
          <target state="translated">メソッド、uri、パラメータなどを使用してバックエンドにカスタムリクエストを送信します。APIへのアクセスなど、特別なリクエストアクションを作成するためにヘルパーで使用します。 レスポンスボディと一緒に文字列を返します。</target>
        </trans-unit>
        <trans-unit id="1c4c7ef8c26940e00bd80194775755322a85992c" translate="yes" xml:space="preserve">
          <source>Sending Requests</source>
          <target state="translated">リクエストの送信</target>
        </trans-unit>
        <trans-unit id="a2ad2980263378eb33d3e76b42cb6ee4fa9db9ac" translate="yes" xml:space="preserve">
          <source>Sends DELETE request to given uri.</source>
          <target state="translated">指定された URI に DELETE リクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="ca79214dad67de72c06dfa856eaa87ec0832be03" translate="yes" xml:space="preserve">
          <source>Sends LINK request to given uri.</source>
          <target state="translated">指定したURIにLINKリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="f60727a63d4d656e5d8cb6ef9b3e3a4354331faf" translate="yes" xml:space="preserve">
          <source>Sends PATCH request to given uri.</source>
          <target state="translated">指定したURIにPATCHリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="347edd0c3090a824d9b026d398bea8664026fce6" translate="yes" xml:space="preserve">
          <source>Sends PUT request to given uri.</source>
          <target state="translated">指定されたURIにPUTリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="37f1a4e04303fdcc8b84dedcb24a3e155d29d6ff" translate="yes" xml:space="preserve">
          <source>Sends UNLINK request to given uri.</source>
          <target state="translated">指定されたURIにUNLINKリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="ceff07e74460b6263e0fa2d7a0b324cbbd22f70c" translate="yes" xml:space="preserve">
          <source>Sends a GET request to given uri.</source>
          <target state="translated">指定されたuriにGETリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="3eb032e2962eadbb21bd638169376a0d18a40a22" translate="yes" xml:space="preserve">
          <source>Sends a HEAD request to given uri.</source>
          <target state="translated">与えられたURIにHEADリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="df724a0af1c45db02453ab5c8595e5783685aa0f" translate="yes" xml:space="preserve">
          <source>Sends a POST request to given uri. Parameters and files can be provided separately.</source>
          <target state="translated">指定されたuriにPOSTリクエストを送信します。パラメータとファイルは別々に指定することができます。</target>
        </trans-unit>
        <trans-unit id="dff8ab2387ee3796df4b419b54990e8d51b7a09c" translate="yes" xml:space="preserve">
          <source>Sends a command directly to the Redis driver. See documentation at https://github.com/nrk/predis Every argument that follows the $command name will be passed to it.</source>
          <target state="translated">Redis ドライバに直接コマンドを送信します。https://github.com/nrk/predis のドキュメントを参照してください。 $command 名に続くすべての引数がそれに渡されます。</target>
        </trans-unit>
        <trans-unit id="79c46c4e53ae7c4079c4d1e8d5c0cef26c11a09b" translate="yes" xml:space="preserve">
          <source>Sends an OPTIONS request to given uri.</source>
          <target state="translated">指定されたURIにOPTIONSリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="39d3d07b651a9436e8f9a521c4577e4fb2e3ad3c" translate="yes" xml:space="preserve">
          <source>Sends an ajax GET request with the passed parameters. See &lt;code&gt;sendAjaxPostRequest()&lt;/code&gt;</source>
          <target state="translated">渡されたパラメーターを使用してajaxGETリクエストを送信します。 &lt;code&gt;sendAjaxPostRequest()&lt;/code&gt; を参照してください</target>
        </trans-unit>
        <trans-unit id="2e6400d6cf6d09cc3c1f533aa0925d76a959b510" translate="yes" xml:space="preserve">
          <source>Sends an ajax POST request with the passed parameters. The appropriate HTTP header is added automatically: &lt;code&gt;X-Requested-With: XMLHttpRequest&lt;/code&gt; Example:</source>
          <target state="translated">渡されたパラメーターを使用してajaxPOSTリクエストを送信します。適切なHTTPヘッダーが自動的に追加されます： &lt;code&gt;X-Requested-With: XMLHttpRequest&lt;/code&gt; 例：</target>
        </trans-unit>
        <trans-unit id="cf54136f9698f1fa9a9e9569852ada1dd3fe2263" translate="yes" xml:space="preserve">
          <source>Sends an ajax request, using the passed HTTP method. See &lt;code&gt;sendAjaxPostRequest()&lt;/code&gt; Example:</source>
          <target state="translated">渡されたHTTPメソッドを使用してajaxリクエストを送信します。 &lt;code&gt;sendAjaxPostRequest()&lt;/code&gt; を参照してください。例：</target>
        </trans-unit>
        <trans-unit id="51bef1be3be23fd93cee280aefd3f5fa3c7ced7a" translate="yes" xml:space="preserve">
          <source>Sends message to exchange by sending exchange name, message and (optionally) a routing key</source>
          <target state="translated">Exchange 名、メッセージ、および (オプションで)ルーティングキーを送信することで、メッセージを Exchange に送信します。</target>
        </trans-unit>
        <trans-unit id="87e0575afc2681ad0b1a333bacf3989906276740" translate="yes" xml:space="preserve">
          <source>Sends message to queue</source>
          <target state="translated">メッセージをキューに送信</target>
        </trans-unit>
        <trans-unit id="5c8f4e0e1a2281faf562976c2410f76c3d8fbc95" translate="yes" xml:space="preserve">
          <source>Sequence</source>
          <target state="translated">Sequence</target>
        </trans-unit>
        <trans-unit id="90fcde4119a8fe8ed8794911a7382f5a137bc356" translate="yes" xml:space="preserve">
          <source>Sequence solves data cleanup issue in alternative way. Instead cleaning up the database between tests, you can use generated unique names, that should not conflict. When you create article on a site, for instance, you can assign it a unique name and then check it.</source>
          <target state="translated">シーケンスは、データのクリーンアップの問題を別の方法で解決します。テストの間にデータベースをクリーンアップする代わりに、競合しないように生成された一意の名前を使用することができます。例えば、あるサイトで記事を作成するときに、ユニークな名前を割り当ててチェックすることができます。</target>
        </trans-unit>
        <trans-unit id="c7d3be125ebceeda65591467039dacbe61a69dcb" translate="yes" xml:space="preserve">
          <source>Session Snapshot</source>
          <target state="translated">セッションのスナップショット</target>
        </trans-unit>
        <trans-unit id="12c29e5d3f5f29f7c6b24b20d21a955578937311" translate="yes" xml:space="preserve">
          <source>Set of useful functions for using CSS and XPath locators. Please check them before writing complex functional or acceptance tests.</source>
          <target state="translated">CSSやXPathのロケータを利用する際に便利な機能のセットです。複雑な機能テストや受入テストを書く前にチェックしてみてください。</target>
        </trans-unit>
        <trans-unit id="1104cfe1f60dfc5c18d2a644b14aaf086d0343f3" translate="yes" xml:space="preserve">
          <source>Set the authenticated user for the next request. This will not persist between multiple requests.</source>
          <target state="translated">次のリクエストの認証済みユーザを設定します。これは複数のリクエスト間では持続しません。</target>
        </trans-unit>
        <trans-unit id="49b838a3c85f40abb4c411864a8909f4eb33a8a7" translate="yes" xml:space="preserve">
          <source>Set the currently logged in user for the application. Takes either an object that implements the User interface or an array of credentials.</source>
          <target state="translated">アプリケーションに現在ログインしているユーザーを設定します。ユーザーインターフェイスを実装したオブジェクトか、資格情報の配列のいずれかを受け取ります。</target>
        </trans-unit>
        <trans-unit id="7639a35e90198d099bc983dcac55a35b47f560aa" translate="yes" xml:space="preserve">
          <source>Sets HTTP header valid for all next requests. Use &lt;code&gt;deleteHeader&lt;/code&gt; to unset it</source>
          <target state="translated">次のすべてのリクエストに有効なHTTPヘッダーを設定します。 &lt;code&gt;deleteHeader&lt;/code&gt; を使用して設定を解除します</target>
        </trans-unit>
        <trans-unit id="e3eeebaccc4b0c4add076f9634708d47d733660d" translate="yes" xml:space="preserve">
          <source>Sets SERVER parameter valid for all next requests.</source>
          <target state="translated">次のすべてのリクエストで有効な SERVER パラメータを設定します。</target>
        </trans-unit>
        <trans-unit id="91faf491d2203600d59e23ea977554adec70bb60" translate="yes" xml:space="preserve">
          <source>Sets SERVER parameters valid for all next requests. this will remove old ones.</source>
          <target state="translated">次のすべてのリクエストで有効な SERVER パラメータを設定します。</target>
        </trans-unit>
        <trans-unit id="597a9ca396fae4724dce72b3fd0c6952009a2c94" translate="yes" xml:space="preserve">
          <source>Sets a HTTP header to be used for all subsequent requests. Use &lt;a href=&quot;#deleteHeader&quot;&gt;&lt;code&gt;deleteHeader&lt;/code&gt;&lt;/a&gt; to unset it.</source>
          <target state="translated">後続のすべてのリクエストに使用されるHTTPヘッダーを設定します。&lt;a href=&quot;#deleteHeader&quot;&gt; &lt;code&gt;deleteHeader&lt;/code&gt; &lt;/a&gt;を使用して設定を解除します。</target>
        </trans-unit>
        <trans-unit id="402883674060ba8864dc58924a48f129d30bf242" translate="yes" xml:space="preserve">
          <source>Sets a cookie and, if validation is enabled, signs it.</source>
          <target state="translated">クッキーを設定し、検証が有効な場合は署名します。</target>
        </trans-unit>
        <trans-unit id="573c118a80d8f370fd35a3d3c2edcec15470985b" translate="yes" xml:space="preserve">
          <source>Sets a cookie with the given name and value. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;expires&lt;/code&gt;, &lt;code&gt;secure&lt;/code&gt; in array passed as last argument.</source>
          <target state="translated">指定された名前と値でCookieを設定します。最後の引数として渡された配列で、 &lt;code&gt;domain&lt;/code&gt; 、 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;expires&lt;/code&gt; 、 &lt;code&gt;secure&lt;/code&gt; などの追加のcookieパラメータを設定できます。</target>
        </trans-unit>
        <trans-unit id="dd7d6b15cc7ef927300da0954fbcfc5be6d1c44e" translate="yes" xml:space="preserve">
          <source>Sets attribute for current node</source>
          <target state="translated">現在のノードの属性を設定します。</target>
        </trans-unit>
        <trans-unit id="dc3a6d2eeef4598b2b5fd630abb3e63725cb1da0" translate="yes" xml:space="preserve">
          <source>Sets the HTTP header to the passed value - which is used on subsequent HTTP requests through PhpBrowser.</source>
          <target state="translated">HTTPヘッダーに渡された値を設定します-これは、PhpBrowserを介した後続のHTTPリクエストで使用されます。</target>
        </trans-unit>
        <trans-unit id="51220d9fc9621db92c9de33cb6f0e6b7688dcffb" translate="yes" xml:space="preserve">
          <source>Sets value to session. Use for authorization.</source>
          <target state="translated">値をセッションに設定します。認証に使用します。</target>
        </trans-unit>
        <trans-unit id="555ea2ea3969328e93670753d8ba351713dea8a8" translate="yes" xml:space="preserve">
          <source>Shared Memory</source>
          <target state="translated">共有メモリ</target>
        </trans-unit>
        <trans-unit id="07d76b2f86536fb300e9ef506b43ea2e14d96aa1" translate="yes" xml:space="preserve">
          <source>Shell auto-completion</source>
          <target state="translated">シェルオートコンプリート</target>
        </trans-unit>
        <trans-unit id="7a7413c5c23a498ce483add168678ef9051bdb7d" translate="yes" xml:space="preserve">
          <source>Short text message to an amount of chars</source>
          <target state="translated">文字数に応じた短いテキストメッセージ</target>
        </trans-unit>
        <trans-unit id="b3bede16abeb1197e82d62bea94cf6fba40a8b34" translate="yes" xml:space="preserve">
          <source>Shorthand Functions</source>
          <target state="translated">速記関数</target>
        </trans-unit>
        <trans-unit id="50b15a891c74ea8e954c5d3c5a40568c25b57e6a" translate="yes" xml:space="preserve">
          <source>Shorthand functions can be used in your Codeception tests or helpers.</source>
          <target state="translated">速記関数は、Codeceptionのテストやヘルパーで使用することができます。</target>
        </trans-unit>
        <trans-unit id="8b925f56e8d5f1a8a617038357e4d861d851f85b" translate="yes" xml:space="preserve">
          <source>Shows step by step execution process for scenario driven tests without actually running them.</source>
          <target state="translated">シナリオ駆動型テストの実行プロセスを、実際に実行せずにステップバイステップで表示します。</target>
        </trans-unit>
        <trans-unit id="5b772b7bfd0a43273fb7c5f49a6c16d837261f35" translate="yes" xml:space="preserve">
          <source>Shuffle</source>
          <target state="translated">Shuffle</target>
        </trans-unit>
        <trans-unit id="2950a4d8ba1d4de2b68b49f849fb136b3ace9a3d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;amOnPage&lt;/code&gt; but accepts a route as first argument and params as second</source>
          <target state="translated">&lt;code&gt;amOnPage&lt;/code&gt; に似ていますが、最初の引数としてルートを受け入れ、2番目の引数としてパラメータを受け入れます</target>
        </trans-unit>
        <trans-unit id="a6d921f4460e6a415868076301684375c9125d7c" translate="yes" xml:space="preserve">
          <source>Similar to amOnPage but accepts route as first argument and params as second</source>
          <target state="translated">amOnPage に似ていますが、第一引数に route、第二引数に params を指定します。</target>
        </trans-unit>
        <trans-unit id="e3eecc56094f425f086710a5eb799c96f36c6587" translate="yes" xml:space="preserve">
          <source>Since Codeception 3.0 you can have some actions to fail silently, if they are errored. Let&amp;rsquo;s say, you open a page and some times there is a popup which should be closed. We may try to hit the &amp;ldquo;close&amp;rdquo; button but if this action fails (no popup on page) we just continue the test.</source>
          <target state="translated">Codeception 3.0以降、エラーが発生した場合、サイレントに失敗するアクションがいくつかあります。たとえば、ページを開いたときに、閉じる必要のあるポップアップが表示される場合があります。「閉じる」ボタンを押そうとするかもしれませんが、このアクションが失敗した場合（ページにポップアップが表示されない場合）、テストを続行します。</target>
        </trans-unit>
        <trans-unit id="ab9cab8f5e698e7915932c4cd17233c2000e8ad1" translate="yes" xml:space="preserve">
          <source>Since Codeception 3.0 you can have some actions to fail silently, is they are errored. Let&amp;rsquo;s say, you open a page and some times there is a popup which should be closed. We may try to hit the &amp;ldquo;close&amp;rdquo; button but if this action fails (no popup on page) we just continue the test.</source>
          <target state="translated">Codeception 3.0以降、いくつかのアクションをサイレントに失敗させることができますが、エラーになります。たとえば、ページを開いたときに、閉じなければならないポップアップがある場合があります。「閉じる」ボタンを押すこともできますが、このアクションが失敗した場合（ページにポップアップが表示されない場合）は、テストを続行します。</target>
        </trans-unit>
        <trans-unit id="ae5969b9ea58c658ff5ffd5c43755452fb1b5c3d" translate="yes" xml:space="preserve">
          <source>Since Codeception 3.0 you can pause execution in any point and enter interactive shell where you will be able to try commands in action. All you need to do is to &lt;strong&gt;call &lt;code&gt;$I-&amp;gt;pause()&lt;/code&gt; in debug mode&lt;/strong&gt;.</source>
          <target state="translated">Codeception 3.0以降では、任意の時点で実行を一時停止し、コマンドの動作を試すことができるインタラクティブシェルに入ることができます。必要なことは&lt;strong&gt;、デバッグモードで&lt;/strong&gt;&lt;strong&gt; &lt;code&gt;$I-&amp;gt;pause()&lt;/code&gt; &lt;/strong&gt;を&lt;strong&gt;呼び出す&lt;/strong&gt;ことだけ&lt;strong&gt;です&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="f758c77de116d7c8a094fff2f6a4f4094a29282a" translate="yes" xml:space="preserve">
          <source>Since Codeception 3.0 you can pause the execution at any point and enter an interactive shell where you will be able to try different commands in action. All you need to do is &lt;strong&gt;call &lt;code&gt;$I-&amp;gt;pause()&lt;/code&gt;&lt;/strong&gt; somewhere in your test, then run the test in &lt;a href=&quot;#Debugging&quot;&gt;debug mode&lt;/a&gt;.</source>
          <target state="translated">Codeception 3.0以降、いつでも実行を一時停止して、さまざまなコマンドを実際に試すことができるインタラクティブシェルに入ることができます。テストのどこかで&lt;strong&gt; &lt;code&gt;$I-&amp;gt;pause()&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt;呼び出して&lt;/strong&gt;から、&lt;a href=&quot;#Debugging&quot;&gt;デバッグモードで&lt;/a&gt;テストを実行するだけです。</target>
        </trans-unit>
        <trans-unit id="f8f23969796a8e27d07d105064c08f15d2aef996" translate="yes" xml:space="preserve">
          <source>Since PhantomJS doesn&amp;rsquo;t give you any visual feedback, it&amp;rsquo;s probably a good idea to install &lt;a href=&quot;https://codeception.com/extensions#CodeceptionExtensionRecorder&quot;&gt;Codeception\Extension\Recorder&lt;/a&gt; which gives you screenshots of how PhantomJS &amp;ldquo;sees&amp;rdquo; your pages.</source>
          <target state="translated">PhantomJSは視覚的なフィードバックを提供しないため、PhantomJSがページを「見る」方法のスクリーンショットを提供する&lt;a href=&quot;https://codeception.com/extensions#CodeceptionExtensionRecorder&quot;&gt;Codeception \ Extension \ Recorder&lt;/a&gt;をインストールすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5481db0182e9f2efb8de941ea139eb16ac0fd13e" translate="yes" xml:space="preserve">
          <source>Since version 2.1.9 it&amp;rsquo;s possible to use LIKE in a condition, as shown here:</source>
          <target state="translated">バージョン2.1.9以降、次のように条件でLIKEを使用することが可能です。</target>
        </trans-unit>
        <trans-unit id="b379be1830569ee21fa4d95d5c5bd48d8ca2b0be" translate="yes" xml:space="preserve">
          <source>Single Login</source>
          <target state="translated">シングルログイン</target>
        </trans-unit>
        <trans-unit id="ae2f41032448cb092b14ef2c1c78acaaf664842a" translate="yes" xml:space="preserve">
          <source>Single PHP class</source>
          <target state="translated">単一の PHP クラス</target>
        </trans-unit>
        <trans-unit id="7e6f34aa922f01a54d7c4c961303ef2e47b713c8" translate="yes" xml:space="preserve">
          <source>Skipped fields will be filled by their values from the page. You don&amp;rsquo;t need to click the &amp;lsquo;Submit&amp;rsquo; button afterwards. This command itself triggers the request to form&amp;rsquo;s action.</source>
          <target state="translated">スキップされたフィールドは、ページの値で埋められます。後で[送信]ボタンをクリックする必要はありません。このコマンド自体がフォームのアクションへのリクエストをトリガーします。</target>
        </trans-unit>
        <trans-unit id="33dcec9ce454235dcdfdd0776c274259bd8ee8d6" translate="yes" xml:space="preserve">
          <source>Slow</source>
          <target state="translated">Slow</target>
        </trans-unit>
        <trans-unit id="c5cad87bd00c6e7984876cefb0f1643d6574a8dc" translate="yes" xml:space="preserve">
          <source>SmartWait</source>
          <target state="translated">SmartWait</target>
        </trans-unit>
        <trans-unit id="aa8daa0f9310afde38e99f94181eaeff3c4ea863" translate="yes" xml:space="preserve">
          <source>SmartWait can be enabled by setting &lt;code&gt;wait&lt;/code&gt; option in WebDriver config. It expects the number of seconds to wait. Example:</source>
          <target state="translated">SmartWaitは、WebDriver構成の &lt;code&gt;wait&lt;/code&gt; オプションを設定することで有効にできます。待機する秒数を想定しています。例：</target>
        </trans-unit>
        <trans-unit id="4fc6ced7712f6b9a6a2de553b8159613f4660c2f" translate="yes" xml:space="preserve">
          <source>Some adblockers might restrict it.</source>
          <target state="translated">一部のアドブロッカーはそれを制限する可能性があります。</target>
        </trans-unit>
        <trans-unit id="ab48d0a30772ed11c42227d5f29a40a0b053294f" translate="yes" xml:space="preserve">
          <source>Some environments are hard to be reproduced manually, testing Internet Explorer 6-8 on Windows XP may be a hard thing, especially if you don&amp;rsquo;t have Windows XP installed. This is where Cloud Testing services come to help you. Services such as &lt;a href=&quot;https://saucelabs.com&quot;&gt;SauceLabs&lt;/a&gt;, &lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; and &lt;a href=&quot;modules/webdriver#Cloud-Testing&quot;&gt;others&lt;/a&gt; can create virtual machines on demand and set up Selenium Server and the desired browser. Tests are executed on a remote machine in a cloud, to access local files cloud testing services provide a special application called &lt;strong&gt;Tunnel&lt;/strong&gt;. Tunnel operates on a secured protocol and allows browsers executed in a cloud to connect to a local web server.</source>
          <target state="translated">一部の環境は手動で再現することが難しいため、特にWindows XPがインストールされていない場合は、Windows XPでInternet Explorer 6〜8をテストするのが難しい場合があります。ここでCloud Testingサービスが役立ちます。以下のようなサービス&lt;a href=&quot;https://saucelabs.com&quot;&gt;SauceLabs&lt;/a&gt;、&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt;と&lt;a href=&quot;modules/webdriver#Cloud-Testing&quot;&gt;他の人が&lt;/a&gt;セレンServerと希望ブラウザアップ需要とセットで仮想マシンを作成することができます。テストはクラウド内のリモートマシンで実行され、ローカルファイルにアクセスします。クラウドテストサービスは、&lt;strong&gt;Tunnel&lt;/strong&gt;と呼ばれる特別なアプリケーションを提供します。トンネルは安全なプロトコルで動作し、クラウドで実行されているブラウザーがローカルWebサーバーに接続できるようにします。</target>
        </trans-unit>
        <trans-unit id="90f45c5dff92fe13266010f43a04abb91902db6b" translate="yes" xml:space="preserve">
          <source>Some frameworks (e.g. Symfony) create field names in the form of an &amp;ldquo;array&amp;rdquo;: &lt;code&gt;&amp;lt;input type=&quot;text&quot; name=&quot;form[task]&quot;&amp;gt;&lt;/code&gt; In this case you need to pass the fields like this:</source>
          <target state="translated">一部のフレームワーク（Symfonyなど）は、「配列」の形式でフィールド名を作成します。 &lt;code&gt;&amp;lt;input type=&quot;text&quot; name=&quot;form[task]&quot;&amp;gt;&lt;/code&gt; この場合、次のようにフィールドを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="7311146f3a604c03553cb611040ade6fa2db40db" translate="yes" xml:space="preserve">
          <source>Some modules are bundled with PHAR files.</source>
          <target state="translated">モジュールの中にはPHARファイルがバンドルされているものもあります。</target>
        </trans-unit>
        <trans-unit id="ca07dfd47a86463d9d3fd78301abb3edc9c186e5" translate="yes" xml:space="preserve">
          <source>Sometimes it is needed to set custom configuration for a specific test only. For &lt;a href=&quot;07-advancedusage#Cest-Classes&quot;&gt;Cest&lt;/a&gt; and &lt;a href=&quot;05-unittests&quot;&gt;Test\Unit&lt;/a&gt; formats you can use &lt;code&gt;@prepare&lt;/code&gt; annotation which can execute the code before other hooks are executed. This allows &lt;code&gt;@prepare&lt;/code&gt; to change the module configuration in runtime. &lt;code&gt;@prepare&lt;/code&gt; uses &lt;a href=&quot;07-advancedusage#Dependency-Injection&quot;&gt;dependency injection&lt;/a&gt; to automatically inject required modules into a method.</source>
          <target state="translated">特定のテストのみにカスタム構成を設定する必要がある場合があります。&lt;a href=&quot;07-advancedusage#Cest-Classes&quot;&gt;CEST&lt;/a&gt;と&lt;a href=&quot;05-unittests&quot;&gt;テスト\ユニット&lt;/a&gt;は、使用できるフォーマット &lt;code&gt;@prepare&lt;/code&gt; 他のフックが実行される前にコードを実行することができ、注釈を。これにより、 &lt;code&gt;@prepare&lt;/code&gt; は実行時にモジュール構成を変更できます。 &lt;code&gt;@prepare&lt;/code&gt; は、&lt;a href=&quot;07-advancedusage#Dependency-Injection&quot;&gt;依存性注入&lt;/a&gt;を使用して、必要なモジュールをメソッドに自動的に注入します。</target>
        </trans-unit>
        <trans-unit id="dfa9e9b54c47122a87532a7dd4facf37f68bd1d2" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to change the test behavior in real time. For instance, the behavior of the same test may differ in Firefox and in Chrome. In runtime we can retrieve the current environment name, test name, or list of enabled modules by calling the &lt;code&gt;$scenario-&amp;gt;current()&lt;/code&gt; method.</source>
          <target state="translated">テストの動作をリアルタイムで変更する必要がある場合があります。たとえば、FirefoxとChromeでは同じテストの動作が異なる場合があります。ランタイムでは、 &lt;code&gt;$scenario-&amp;gt;current()&lt;/code&gt; メソッドを呼び出すことにより、現在の環境名、テスト名、または有効なモジュールのリストを取得できます。</target>
        </trans-unit>
        <trans-unit id="0049c72fd415d236a8fa18176ab4ac9af9383f47" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to close a webpage before the end of the test. For such cases, you may use &lt;code&gt;leave()&lt;/code&gt;. You can also specify roles for a friend:</source>
          <target state="translated">テストが終了する前にWebページを閉じたい場合があります。そのような場合は、 &lt;code&gt;leave()&lt;/code&gt; を使用できます。友達のロールを指定することもできます：</target>
        </trans-unit>
        <trans-unit id="22a35fbebff47762d94faae1d7babdf97b0736bf" translate="yes" xml:space="preserve">
          <source>Source code</source>
          <target state="translated">ソースコード</target>
        </trans-unit>
        <trans-unit id="c9552e72c842f6053993f592eac944047eff7c40" translate="yes" xml:space="preserve">
          <source>Special module for using asserts in your tests.</source>
          <target state="translated">テストでアサートを使用するための特別なモジュール。</target>
        </trans-unit>
        <trans-unit id="a477d8dab7ef5cc90c58a41d06ca3494aeba078f" translate="yes" xml:space="preserve">
          <source>Specify</source>
          <target state="translated">Specify</target>
        </trans-unit>
        <trans-unit id="7e214906efa9005f9068828228f83bdbf9f9ec3f" translate="yes" xml:space="preserve">
          <source>Specify the database to use</source>
          <target state="translated">使用するデータベースを指定します。</target>
        </trans-unit>
        <trans-unit id="2d2cb022bc3d26bd1407c4aa787d5e46e1ad4c3b" translate="yes" xml:space="preserve">
          <source>Speed</source>
          <target state="translated">Speed</target>
        </trans-unit>
        <trans-unit id="b1cbc3e1af008b4451d9672fe1061d17df91e4d2" translate="yes" xml:space="preserve">
          <source>Stability:</source>
          <target state="translated">Stability:</target>
        </trans-unit>
        <trans-unit id="7f73baa437c1ef537c65a9547012cebcd3a73e64" translate="yes" xml:space="preserve">
          <source>Stability: &lt;strong&gt;alpha&lt;/strong&gt;</source>
          <target state="translated">安定性：&lt;strong&gt;アルファ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5698961251fe94f248d26f4094690d3b1cc9774c" translate="yes" xml:space="preserve">
          <source>Stability: &lt;strong&gt;beta&lt;/strong&gt;</source>
          <target state="translated">安定性：&lt;strong&gt;ベータ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d26d8a99076343468dee2ff163374df9c5738ee1" translate="yes" xml:space="preserve">
          <source>Stability: &lt;strong&gt;dev&lt;/strong&gt;</source>
          <target state="translated">安定性：&lt;strong&gt;開発&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d520fdb60f2940df181ecd2ca88ae1a963a9cce" translate="yes" xml:space="preserve">
          <source>Stability: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">安定性：&lt;strong&gt;安定&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fbc014247a90e3e9471cd43027f6ed1dd5022323" translate="yes" xml:space="preserve">
          <source>Standard Modules</source>
          <target state="translated">標準モジュール</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="2063d785491108691ccb36d110abed817fc6284d" translate="yes" xml:space="preserve">
          <source>Status: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">ステータス：&lt;strong&gt;安定&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc416e1088e4bf094dfc9abe0210e0288f5a169e" translate="yes" xml:space="preserve">
          <source>Step</source>
          <target state="translated">Step</target>
        </trans-unit>
        <trans-unit id="5584016d7115afdb5f56fd9859bdbd8cc9718f50" translate="yes" xml:space="preserve">
          <source>Step 1: Split Tests</source>
          <target state="translated">ステップ1:分割テスト</target>
        </trans-unit>
        <trans-unit id="83bebc922d56371d3ad97c1ceeef4405f8bcfded" translate="yes" xml:space="preserve">
          <source>Step 2: Running Tests</source>
          <target state="translated">ステップ2:テストの実行</target>
        </trans-unit>
        <trans-unit id="467f15ffd9ebe2d5a62f9c3316e2542e71a3210b" translate="yes" xml:space="preserve">
          <source>Step 3: Merge Results</source>
          <target state="translated">ステップ3:結果のマージ</target>
        </trans-unit>
        <trans-unit id="e6cac27ed66314ec5d56b0555d8e981c05765914" translate="yes" xml:space="preserve">
          <source>Step Decorators</source>
          <target state="translated">ステップデコレーター</target>
        </trans-unit>
        <trans-unit id="baa48047d0504ed625a6534181f9614799002447" translate="yes" xml:space="preserve">
          <source>Step Definitions</source>
          <target state="translated">ステップの定義</target>
        </trans-unit>
        <trans-unit id="bb55848dbd5f98c85df579f900b4b5d573025f1a" translate="yes" xml:space="preserve">
          <source>Step decorators are used to implement conditional assertions. When enabled, conditional assertions take all method prefixed by &lt;code&gt;see&lt;/code&gt; or &lt;code&gt;dontSee&lt;/code&gt; and introduce new steps prefixed with &lt;code&gt;canSee&lt;/code&gt; and &lt;code&gt;cantSee&lt;/code&gt;. Contrary to standard assertions those assertions won&amp;rsquo;t stop test on failure. This is done by wrapping action into try/catch blocks.</source>
          <target state="translated">ステップデコレータは、条件付きアサーションを実装するために使用されます。有効にすると、条件付きアサーションは、 &lt;code&gt;see&lt;/code&gt; または &lt;code&gt;dontSee&lt;/code&gt; で始まるすべてのメソッドを取り、 &lt;code&gt;canSee&lt;/code&gt; および &lt;code&gt;cantSee&lt;/code&gt; で始まる新しいステップを導入します。標準のアサーションとは異なり、これらのアサーションは失敗時にテストを停止しません。これは、try / catchブロックにアクションをラップすることで行われます。</target>
        </trans-unit>
        <trans-unit id="db1c527b753201709b9a00b6383f9f6972b99edf" translate="yes" xml:space="preserve">
          <source>Step decorators can be added to suite config inside &lt;code&gt;steps&lt;/code&gt; block:</source>
          <target state="translated">ステップデコレータは、 &lt;code&gt;steps&lt;/code&gt; ブロック内のスイート構成に追加できます。</target>
        </trans-unit>
        <trans-unit id="75e194e12be1b99d59492faf0825cca7b452a389" translate="yes" xml:space="preserve">
          <source>StepObject can be instantiated automatically when used inside the Cest format:</source>
          <target state="translated">StepObjectは、Cestフォーマットの中で使用する場合、自動的にインスタンス化することができます。</target>
        </trans-unit>
        <trans-unit id="86e2b082d0e8bc6a146b47345920ce9fdfb156da" translate="yes" xml:space="preserve">
          <source>StepObjects</source>
          <target state="translated">StepObjects</target>
        </trans-unit>
        <trans-unit id="4f647b5747b293c4740d61c3817bf54ea9ca42eb" translate="yes" xml:space="preserve">
          <source>StepObjects are great if you need some common functionality for a group of tests. Let&amp;rsquo;s say you are going to test an admin area of a site. You probably won&amp;rsquo;t need the same actions from the admin area while testing the front end, so it&amp;rsquo;s a good idea to move these admin-specific tests into their own class. We call such a classes StepObjects.</source>
          <target state="translated">StepObjectsは、テストのグループに共通の機能が必要な場合に最適です。サイトの管理領域をテストするとします。フロントエンドのテスト中に管理領域から同じアクションを実行する必要はおそらくないので、これらの管理固有のテストを独自のクラスに移動することをお勧めします。このようなクラスをStepObjectsと呼びます。</target>
        </trans-unit>
        <trans-unit id="9e4ea3e701cc787084c48c674751270a8df05736" translate="yes" xml:space="preserve">
          <source>Steps are defined in Context files. Default context is an actor class, i.e. for acceptance testing suite default context is &lt;code&gt;AcceptanceTester&lt;/code&gt; class. However, you can define steps in any classes and include them as contexts. It is useful to define steps in StepObject and PageObject classes.</source>
          <target state="translated">ステップはコンテキストファイルで定義されます。デフォルトコンテキストはアクタークラスです。つまり、受け入れテストスイートのデフォルトコンテキストは &lt;code&gt;AcceptanceTester&lt;/code&gt; クラスです。ただし、任意のクラスでステップを定義し、それらをコンテキストとして含めることができます。StepObjectクラスとPageObjectクラスでステップを定義すると便利です。</target>
        </trans-unit>
        <trans-unit id="5c3d982a812b295d5b49a02e530108fc6a746a77" translate="yes" xml:space="preserve">
          <source>Steps can also be matched with regex expressions. This way we can make more flexible steps</source>
          <target state="translated">また、ステップは正規表現と一致させることもできます。このようにして、より柔軟なステップを作ることができます。</target>
        </trans-unit>
        <trans-unit id="43a1f02f811190703678e0cc1d87fa782f0048bd" translate="yes" xml:space="preserve">
          <source>Steps in background are defined the same way as in scenarios.</source>
          <target state="translated">背景のステップは、シナリオと同じように定義されています。</target>
        </trans-unit>
        <trans-unit id="f9f57686acc22df516f6fe01ba7f18acd99a1841" translate="yes" xml:space="preserve">
          <source>Stores an item &lt;code&gt;$value&lt;/code&gt; with &lt;code&gt;$key&lt;/code&gt; on the APC(u).</source>
          <target state="translated">APC（u）の &lt;code&gt;$key&lt;/code&gt; を持つアイテム &lt;code&gt;$value&lt;/code&gt; を格納します。</target>
        </trans-unit>
        <trans-unit id="5f912038a03d9d87434351f8ea98f8053de48586" translate="yes" xml:space="preserve">
          <source>Stores an item &lt;code&gt;$value&lt;/code&gt; with &lt;code&gt;$key&lt;/code&gt; on the Memcached server.</source>
          <target state="translated">Memcachedサーバー上の &lt;code&gt;$key&lt;/code&gt; を持つアイテム &lt;code&gt;$value&lt;/code&gt; を格納します。</target>
        </trans-unit>
        <trans-unit id="89264093eedac2573e3a15a086000440bb83d0cc" translate="yes" xml:space="preserve">
          <source>Strict Locator</source>
          <target state="translated">厳格なロケータ</target>
        </trans-unit>
        <trans-unit id="b1202647435df2841ab6052497b12a2c7b470565" translate="yes" xml:space="preserve">
          <source>Strings: its value will be overwritten with $value</source>
          <target state="translated">文字列:その値は $value で上書きされます。</target>
        </trans-unit>
        <trans-unit id="5344b9208082b393c5f94da59a357949604fc9d6" translate="yes" xml:space="preserve">
          <source>Stubbing a method call to return a list of values in the specified order.</source>
          <target state="translated">指定した順番で値のリストを返すメソッド呼び出しをスタブ化します。</target>
        </trans-unit>
        <trans-unit id="3107408a50c756bdc03dcf7d5aed6d74eb0c9e3e" translate="yes" xml:space="preserve">
          <source>Stubs</source>
          <target state="translated">Stubs</target>
        </trans-unit>
        <trans-unit id="243394d0155c31adcea7d3d4d191d2fd6d1dcb03" translate="yes" xml:space="preserve">
          <source>Stubs can also be created using static methods from &lt;code&gt;Codeception\Stub&lt;/code&gt; class. In this</source>
          <target state="translated">&lt;code&gt;Codeception\Stub&lt;/code&gt; クラスの静的メソッドを使用してスタブを作成することもできます。これで</target>
        </trans-unit>
        <trans-unit id="390b2d50519e50c0a7c83d6c89de08aebd773a8d" translate="yes" xml:space="preserve">
          <source>Stubs can be created with a static methods of &lt;code&gt;Codeception\Stub&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Codeception\Stub&lt;/code&gt; 静的メソッドを使用してスタブを作成できます。</target>
        </trans-unit>
        <trans-unit id="a6958aa2c93904bceab6ea7532c2f548dcbcbf3e" translate="yes" xml:space="preserve">
          <source>Submits request to endpoint.</source>
          <target state="translated">エンドポイントにリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="7474e42f9d0a163b4975357f7a773f2977b1c004" translate="yes" xml:space="preserve">
          <source>Submits the given form on the page, optionally with the given form values. Give the form fields values as an array. Note that hidden fields can&amp;rsquo;t be accessed.</source>
          <target state="translated">ページに指定されたフォームを送信します。オプションで、指定されたフォーム値を送信します。フォームフィールドの値を配列として指定します。非表示フィールドにはアクセスできないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="200484f0fc61d5da64facb469035e4d047290a34" translate="yes" xml:space="preserve">
          <source>Submits the given form on the page, with the given form values. Pass the form field&amp;rsquo;s values as an array in the second parameter.</source>
          <target state="translated">フォームの値を指定して、ページのフォームを送信します。フォームフィールドの値を2番目のパラメータで配列として渡します。</target>
        </trans-unit>
        <trans-unit id="5ebde4c2b10e6ace16338f84a54f868d47c06a9e" translate="yes" xml:space="preserve">
          <source>Such talks should produce written stories. There should be an actor that doing some things, the feature that should be fulfilled within the story and the result achieved.</source>
          <target state="translated">そのような話は、書かれた物語を生み出すものでなければならない。何かをする役者がいて、その役者が物語の中で満たすべき特徴と、その結果があるはずです。</target>
        </trans-unit>
        <trans-unit id="d9f630b97d2e6dc01d291ee0d66d09b3de62c5e2" translate="yes" xml:space="preserve">
          <source>Suite Bootstrap</source>
          <target state="translated">スイートブートストラップ</target>
        </trans-unit>
        <trans-unit id="3bdbdbaf2772c561a79d8c0079ce87ea45d56845" translate="yes" xml:space="preserve">
          <source>Suite Configuration</source>
          <target state="translated">スイートの構成</target>
        </trans-unit>
        <trans-unit id="2b246b23873f987c00a1dcad653b7457dfd1a8ee" translate="yes" xml:space="preserve">
          <source>Suite, Result, Settings</source>
          <target state="translated">スイート、結果、設定</target>
        </trans-unit>
        <trans-unit id="509b0c94b2034e962690fbc25d569daa626c21da" translate="yes" xml:space="preserve">
          <source>Suite, Settings</source>
          <target state="translated">スイート、設定</target>
        </trans-unit>
        <trans-unit id="b4e883d3f0f5d4d2d3dc7cab459e21a804c8b259" translate="yes" xml:space="preserve">
          <source>Suites</source>
          <target state="translated">Suites</target>
        </trans-unit>
        <trans-unit id="ccb0f62197d93ae3c79e26289a42e401c010124a" translate="yes" xml:space="preserve">
          <source>Supported and tested FTP types are:</source>
          <target state="translated">サポートされ、テストされたFTPの種類は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="93ee94ed984d27d6d3e470925ea6048f3466e20d" translate="yes" xml:space="preserve">
          <source>Supported and tested databases are:</source>
          <target state="translated">サポートされ、テストされたデータベースは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="c8dd111a9740e47a7a16dc7c88b6e675ede5be59" translate="yes" xml:space="preserve">
          <source>Supported and tested queue types are:</source>
          <target state="translated">サポートされ、テストされているキューの種類は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="c8dde8628d32517131f252a8c0c04d9237915dc2" translate="yes" xml:space="preserve">
          <source>Supported operators: &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;like&lt;/code&gt;.</source>
          <target state="translated">サポートされている演算子： &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;!=&lt;/code&gt; 、 &lt;code&gt;like&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3e72aed0af6318d72dd40dfd00a7e6e09acc7a5" translate="yes" xml:space="preserve">
          <source>Switch to another frame on the page.</source>
          <target state="translated">ページ内の別のフレームに切り替えます。</target>
        </trans-unit>
        <trans-unit id="73941b798e950fb3f1fc891fdfd483de457a1355" translate="yes" xml:space="preserve">
          <source>Switch to another iframe on the page.</source>
          <target state="translated">ページ内の別のiframeに切り替えます。</target>
        </trans-unit>
        <trans-unit id="14a664c9a64204eea0378a3b6aaa43d88c5c000f" translate="yes" xml:space="preserve">
          <source>Switch to another window identified by name.</source>
          <target state="translated">名前で識別される別のウィンドウに切り替えます。</target>
        </trans-unit>
        <trans-unit id="de8390ce90c8374dc6ad7a245ff0f103b9228ff2" translate="yes" xml:space="preserve">
          <source>Switch to iframe or frame on the page.</source>
          <target state="translated">ページ内のiframeやフレームに切り替えます。</target>
        </trans-unit>
        <trans-unit id="9c43ffa6720ada1f1f6731369eac2d923171ffaf" translate="yes" xml:space="preserve">
          <source>Switches to next browser tab. An offset can be specified.</source>
          <target state="translated">次のブラウザタブに移動します。オフセットを指定できます。</target>
        </trans-unit>
        <trans-unit id="390439ace1e752c36359813dc176064e33c86282" translate="yes" xml:space="preserve">
          <source>Switches to previous browser tab. An offset can be specified.</source>
          <target state="translated">前のブラウザタブに移動します。オフセットを指定できます。</target>
        </trans-unit>
        <trans-unit id="d1c19bea4e2a2e0b334586da45d1990f4121ffec" translate="yes" xml:space="preserve">
          <source>Symfony</source>
          <target state="translated">Symfony</target>
        </trans-unit>
        <trans-unit id="91968eab09193fa9ec7265604ad9a827409ef797" translate="yes" xml:space="preserve">
          <source>Symfony 2.x</source>
          <target state="translated">シンボル 2.x</target>
        </trans-unit>
        <trans-unit id="cea1498713815f07289ff18f121f2c87639d6179" translate="yes" xml:space="preserve">
          <source>Symfony 3.x</source>
          <target state="translated">シンボル 3.x</target>
        </trans-unit>
        <trans-unit id="eceb3e22da12ffbc691fe5205773bf12857c913b" translate="yes" xml:space="preserve">
          <source>Symfony 4.x</source>
          <target state="translated">symfony 4.x</target>
        </trans-unit>
        <trans-unit id="d9743911a95aec0b6c1e5f8eba4a15a36b9b9790" translate="yes" xml:space="preserve">
          <source>Symfony::_findElements</source>
          <target state="translated">Symfony::_findElements</target>
        </trans-unit>
        <trans-unit id="509983cde3b7d438a65230da7560efa5667217c9" translate="yes" xml:space="preserve">
          <source>Symfony::_getResponseContent</source>
          <target state="translated">Symfony::_getResponseContent</target>
        </trans-unit>
        <trans-unit id="5dca501155ff6aba8a0e30f052d66e0e04003f4c" translate="yes" xml:space="preserve">
          <source>Symfony::_loadPage</source>
          <target state="translated">Symfony::_loadPage</target>
        </trans-unit>
        <trans-unit id="d73d7c6f824239ea13e03c2df108775d2be27683" translate="yes" xml:space="preserve">
          <source>Symfony::_request</source>
          <target state="translated">Symfony::_request</target>
        </trans-unit>
        <trans-unit id="2ccae628f7587b3119b6d96b2f0da84cd847ab38" translate="yes" xml:space="preserve">
          <source>Symfony::_savePageSource</source>
          <target state="translated">Symfony::_savePageSource</target>
        </trans-unit>
        <trans-unit id="735519f679c2fb6f5cc14eb6721a5ae2a5961039" translate="yes" xml:space="preserve">
          <source>Symfony::amHttpAuthenticated</source>
          <target state="translated">Symfony::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="8b19918aecf5a8a95be893716b64016b40579bb9" translate="yes" xml:space="preserve">
          <source>Symfony::amOnPage</source>
          <target state="translated">Symfony::amOnPage</target>
        </trans-unit>
        <trans-unit id="15b64072cfd9ca87bee7622a4322441e2b8b183c" translate="yes" xml:space="preserve">
          <source>Symfony::amOnRoute</source>
          <target state="translated">Symfony::amOnRoute</target>
        </trans-unit>
        <trans-unit id="7bdb9afb6a072cc5ba3f887c721c9fd195bd8b65" translate="yes" xml:space="preserve">
          <source>Symfony::attachFile</source>
          <target state="translated">Symfony::attachFile</target>
        </trans-unit>
        <trans-unit id="9a918577ca3d3b14ee3a4f39673c1e71b59ee16a" translate="yes" xml:space="preserve">
          <source>Symfony::checkOption</source>
          <target state="translated">Symfony::checkOption</target>
        </trans-unit>
        <trans-unit id="aa4dea019a799040bec92fc4149bfbf47e79aaf3" translate="yes" xml:space="preserve">
          <source>Symfony::click</source>
          <target state="translated">Symfony::click</target>
        </trans-unit>
        <trans-unit id="917427efe31f644ad1333c5e14e20b4c6702ceda" translate="yes" xml:space="preserve">
          <source>Symfony::deleteHeader</source>
          <target state="translated">Symfony::deleteHeader</target>
        </trans-unit>
        <trans-unit id="6c8de5e6f13e4d7213aa9240a865128868f4ffd1" translate="yes" xml:space="preserve">
          <source>Symfony::dontSee</source>
          <target state="translated">Symfony::dontSee</target>
        </trans-unit>
        <trans-unit id="3d601ed0b026f10668fe7725452351f67eef9341" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCheckboxIsChecked</source>
          <target state="translated">Symfony::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="8c50f64936270dbebb7f38ac66fdd410b2a81657" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCookie</source>
          <target state="translated">Symfony::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="06046c88c7d51e1591665e3aae2bcc06968fb321" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCurrentUrlEquals</source>
          <target state="translated">Symfony::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="e7001319339b18893c21a191a03213f778246679" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCurrentUrlMatches</source>
          <target state="translated">Symfony::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="e280352e9ac8d10f2b5e5b2d86b6dc14127eb93e" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeElement</source>
          <target state="translated">Symfony::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="b033bbaed09a56a6cbe995d656b759ad3da1edf5" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeEmailIsSent</source>
          <target state="translated">Symfony::dontSeeEmailIsSent</target>
        </trans-unit>
        <trans-unit id="e3c45e55eeb462f95b6ea93e2a15132df0611d32" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInCurrentUrl</source>
          <target state="translated">Symfony::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="507fab0fad12121a37f2f4dc2de17b5874694d1a" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInField</source>
          <target state="translated">Symfony::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="450d2adaab7c9563950f7df17973eff06faf4901" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInFormFields</source>
          <target state="translated">Symfony::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="90bf4f31d4dff0233e283ef76971a62db120d012" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInSource</source>
          <target state="translated">Symfony::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="c90ad23d97ce562a8b62cd8b3987c6fbd765d92d" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInTitle</source>
          <target state="translated">Symfony::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="9a4c2b0b9aeff2b8cc83c34645278b80e0c897ee" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeLink</source>
          <target state="translated">Symfony::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="d5b15367977606afdc91d6ec63e800f37d448421" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeOptionIsSelected</source>
          <target state="translated">Symfony::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="a86dbf6e685059e677afb8519fd3b7551f7e9f18" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeResponseCodeIs</source>
          <target state="translated">Symfony::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="69b32167c508ab62f3799a1f103c587fdaa80c2b" translate="yes" xml:space="preserve">
          <source>Symfony::fillField</source>
          <target state="translated">Symfony::fillField</target>
        </trans-unit>
        <trans-unit id="79588a817177c07f3ff587d3bb64ad65f61b456c" translate="yes" xml:space="preserve">
          <source>Symfony::grabAttributeFrom</source>
          <target state="translated">Symfony::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="3b82ec1a9ff35c4017ac732e19fee33db6750c16" translate="yes" xml:space="preserve">
          <source>Symfony::grabCookie</source>
          <target state="translated">Symfony::grabCookie</target>
        </trans-unit>
        <trans-unit id="c98d72e99b5b1d1932db868d919bf09a0a9c3ac9" translate="yes" xml:space="preserve">
          <source>Symfony::grabFromCurrentUrl</source>
          <target state="translated">Symfony::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="c3021acdfba3268e7b7d7797e5755492d4005a85" translate="yes" xml:space="preserve">
          <source>Symfony::grabMultiple</source>
          <target state="translated">Symfony::grabMultiple</target>
        </trans-unit>
        <trans-unit id="a30c317c1261e25499232b2ced82dc0a24c7d687" translate="yes" xml:space="preserve">
          <source>Symfony::grabPageSource</source>
          <target state="translated">Symfony::grabPageSource</target>
        </trans-unit>
        <trans-unit id="0b1abe54f38370c2efd288f3f52b797d004be520" translate="yes" xml:space="preserve">
          <source>Symfony::grabService</source>
          <target state="translated">Symfony::grabService</target>
        </trans-unit>
        <trans-unit id="e1286fb4267691f658851b04ff6e5c8f6dbbc3e7" translate="yes" xml:space="preserve">
          <source>Symfony::grabTextFrom</source>
          <target state="translated">Symfony::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="b0a821a16652a9e453aa875f934f0ab885d82393" translate="yes" xml:space="preserve">
          <source>Symfony::grabValueFrom</source>
          <target state="translated">Symfony::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="50975d7a67465914f4b8d65b7b5f9eedc2395dda" translate="yes" xml:space="preserve">
          <source>Symfony::haveHttpHeader</source>
          <target state="translated">Symfony::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="7b09f2fa3989ffcfcd60000af7200313dd5c760f" translate="yes" xml:space="preserve">
          <source>Symfony::invalidateCachedRouter</source>
          <target state="translated">Symfony::invalidateCachedRouter</target>
        </trans-unit>
        <trans-unit id="416d26370dde325d054ee477f47a3a742948cf7a" translate="yes" xml:space="preserve">
          <source>Symfony::makeHtmlSnapshot</source>
          <target state="translated">Symfony::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="a2a5a514bc99edad52e2dfdb1c6f95c905ab9fb6" translate="yes" xml:space="preserve">
          <source>Symfony::moveBack</source>
          <target state="translated">Symfony::moveBack</target>
        </trans-unit>
        <trans-unit id="f7df864f59ea47c518de28ff6f41cdf5a7887d94" translate="yes" xml:space="preserve">
          <source>Symfony::onReconfigure</source>
          <target state="translated">Symfony::onReconfigure</target>
        </trans-unit>
        <trans-unit id="5e65c0cc4f7057e5682773144a95a4b6d2c3fb59" translate="yes" xml:space="preserve">
          <source>Symfony::persistService</source>
          <target state="translated">Symfony::persistService</target>
        </trans-unit>
        <trans-unit id="54608976cc587e4220e71bb8d6e960d978b738ad" translate="yes" xml:space="preserve">
          <source>Symfony::rebootClientKernel</source>
          <target state="translated">Symfony::rebootClientKernel</target>
        </trans-unit>
        <trans-unit id="480f2103746b5b9376e9a042b6c5a9779c087902" translate="yes" xml:space="preserve">
          <source>Symfony::resetCookie</source>
          <target state="translated">Symfony::resetCookie</target>
        </trans-unit>
        <trans-unit id="60e199cce570d70502985d778b6052c11865e402" translate="yes" xml:space="preserve">
          <source>Symfony::see</source>
          <target state="translated">Symfony::see</target>
        </trans-unit>
        <trans-unit id="cf113686237f78c672a4b5142b2e7514aa43bc43" translate="yes" xml:space="preserve">
          <source>Symfony::seeCheckboxIsChecked</source>
          <target state="translated">Symfony::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="6b55ba46e9702923dab2f66d38abc2521fe26abc" translate="yes" xml:space="preserve">
          <source>Symfony::seeCookie</source>
          <target state="translated">Symfony::seeCookie</target>
        </trans-unit>
        <trans-unit id="1ff1127970839d2933181bc1a7e83d8ba9f4fad8" translate="yes" xml:space="preserve">
          <source>Symfony::seeCurrentRouteIs</source>
          <target state="translated">Symfony::seeCurrentRouteIs</target>
        </trans-unit>
        <trans-unit id="eeb148b36edd33d6bb6c61195992673ea8a11a7a" translate="yes" xml:space="preserve">
          <source>Symfony::seeCurrentUrlEquals</source>
          <target state="translated">Symfony::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="d77d75d2fa51e1f0d10bfbaf40962d8fc900b983" translate="yes" xml:space="preserve">
          <source>Symfony::seeCurrentUrlMatches</source>
          <target state="translated">Symfony::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="99bc41c841fd9ff64ba7fc38c1fd392659edc891" translate="yes" xml:space="preserve">
          <source>Symfony::seeElement</source>
          <target state="translated">Symfony::seeElement</target>
        </trans-unit>
        <trans-unit id="754de82979b3606ade7c1fdaa266af03898145dc" translate="yes" xml:space="preserve">
          <source>Symfony::seeEmailIsSent</source>
          <target state="translated">Symfony::seeEmailIsSent</target>
        </trans-unit>
        <trans-unit id="991217b63a2cbcd98bc30a1395b9e266725f2d36" translate="yes" xml:space="preserve">
          <source>Symfony::seeInCurrentRoute</source>
          <target state="translated">Symfony::seeInCurrentRoute</target>
        </trans-unit>
        <trans-unit id="5ba4fe8d8abe8e857caf0abed3efe21a1c5b00c6" translate="yes" xml:space="preserve">
          <source>Symfony::seeInCurrentUrl</source>
          <target state="translated">Symfony::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="0081eb44ca122d2dbbc860d0e8092545fad10fa0" translate="yes" xml:space="preserve">
          <source>Symfony::seeInField</source>
          <target state="translated">Symfony::seeInField</target>
        </trans-unit>
        <trans-unit id="50b94a2a298a8294741c797431d0e50211b7ed8b" translate="yes" xml:space="preserve">
          <source>Symfony::seeInFormFields</source>
          <target state="translated">Symfony::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="96297d7ac206fa18e6780936fa9bd9034d996654" translate="yes" xml:space="preserve">
          <source>Symfony::seeInSource</source>
          <target state="translated">Symfony::seeInSource</target>
        </trans-unit>
        <trans-unit id="90574edd84ccf8e66c71bad0b4f398dc3fc1e8dd" translate="yes" xml:space="preserve">
          <source>Symfony::seeInTitle</source>
          <target state="translated">Symfony::seeInTitle</target>
        </trans-unit>
        <trans-unit id="4c6089bc6fef20ba7bbf36f96fb96b9b0bc661c9" translate="yes" xml:space="preserve">
          <source>Symfony::seeLink</source>
          <target state="translated">Symfony::seeLink</target>
        </trans-unit>
        <trans-unit id="f83dc33d5d9b2e11049aed7fbfb7044a3cb87726" translate="yes" xml:space="preserve">
          <source>Symfony::seeNumberOfElements</source>
          <target state="translated">Symfony::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="4aaecb46863f0a6a00ba1460a69b95fbe0a739f0" translate="yes" xml:space="preserve">
          <source>Symfony::seeOptionIsSelected</source>
          <target state="translated">Symfony::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="0df79e1f3fbed5002d9019989325336a47a4e406" translate="yes" xml:space="preserve">
          <source>Symfony::seePageNotFound</source>
          <target state="translated">Symfony::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="e3eabb75fafc75ea34b1dba77824d1d97fdb65d9" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIs</source>
          <target state="translated">Symfony::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="c2dfb0ebb8e2a9a18ad5a36e49aa23a05f2fe256" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsBetween</source>
          <target state="translated">Symfony::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="a01c8bd200657ed4c7704ffdf023e8b196f28a9b" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsClientError</source>
          <target state="translated">Symfony::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="c374fdc25d1281b11ad901a3f90bfac9763ada17" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsRedirection</source>
          <target state="translated">Symfony::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="cfd03bb69e640262a012f92d8eb1ccce91d9135a" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsServerError</source>
          <target state="translated">Symfony::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="d469bb2afb9acc579da8d217f5789e8354d6ffd6" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsSuccessful</source>
          <target state="translated">Symfony::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="7bb84fa6e74bcbfc026d707ec16c36b001008296" translate="yes" xml:space="preserve">
          <source>Symfony::selectOption</source>
          <target state="translated">Symfony::selectOption</target>
        </trans-unit>
        <trans-unit id="096989d2c56f3e5096e7f923412f27b07ebbdba9" translate="yes" xml:space="preserve">
          <source>Symfony::sendAjaxGetRequest</source>
          <target state="translated">Symfony::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="7b1bc8c66c67435928977c7bfc81ee3f824bd1e8" translate="yes" xml:space="preserve">
          <source>Symfony::sendAjaxPostRequest</source>
          <target state="translated">Symfony::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="b60876a334e5b1742e5b7086e607e476e566de78" translate="yes" xml:space="preserve">
          <source>Symfony::sendAjaxRequest</source>
          <target state="translated">Symfony::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="00ea752f31efcd687d613b09f0fc0d1fd735cf06" translate="yes" xml:space="preserve">
          <source>Symfony::setCookie</source>
          <target state="translated">Symfony::setCookie</target>
        </trans-unit>
        <trans-unit id="8c676dbddfa08013ecaa1c6ab8b5960410f36f1c" translate="yes" xml:space="preserve">
          <source>Symfony::submitForm</source>
          <target state="translated">Symfony::submitForm</target>
        </trans-unit>
        <trans-unit id="c07379236a73021b80a0dcd66a377b438598db60" translate="yes" xml:space="preserve">
          <source>Symfony::switchToIframe</source>
          <target state="translated">Symfony::switchToIframe</target>
        </trans-unit>
        <trans-unit id="b4a6a7150984941409bee6fb7d371a8da640d4c1" translate="yes" xml:space="preserve">
          <source>Symfony::uncheckOption</source>
          <target state="translated">Symfony::uncheckOption</target>
        </trans-unit>
        <trans-unit id="a89dc82ebddc0de32b4842408d2edd753c110cdf" translate="yes" xml:space="preserve">
          <source>Symfony::unpersistService</source>
          <target state="translated">Symfony::unpersistService</target>
        </trans-unit>
        <trans-unit id="8652f6cf8392638c00eff2da783b240d56a727ce" translate="yes" xml:space="preserve">
          <source>System requirements</source>
          <target state="translated">システム要件</target>
        </trans-unit>
        <trans-unit id="4ad91a8e6898f7c0e6ca3483612717ed385045a5" translate="yes" xml:space="preserve">
          <source>Tab is opened by using &lt;code&gt;window.open&lt;/code&gt; javascript in a browser. Please note, that adblock can restrict creating such tabs.</source>
          <target state="translated">ブラウザで &lt;code&gt;window.open&lt;/code&gt; javascript を使用してタブを開きます。adblockはそのようなタブの作成を制限できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="cee951cc48adee200735cdf816b919e66cd9f69f" translate="yes" xml:space="preserve">
          <source>Tables is a recommended ways to pass arrays into test scenarios. Inside a step definition data is stored in argument passed as &lt;code&gt;\Behat\Gherkin\Node\TableNode&lt;/code&gt; instance.</source>
          <target state="translated">テーブルは、配列をテストシナリオに渡すための推奨される方法です。ステップの定義データは、 &lt;code&gt;\Behat\Gherkin\Node\TableNode&lt;/code&gt; インスタンスとして渡される引数に格納されます。</target>
        </trans-unit>
        <trans-unit id="1efa71619d15a19a43b3d9877337ae315f174228" translate="yes" xml:space="preserve">
          <source>Tag should be placed before &lt;em&gt;Scenario:&lt;/em&gt; or before &lt;em&gt;Feature:&lt;/em&gt; keyword. In the last case all scenarios of that feature will be added to corresponding group.</source>
          <target state="translated">タグは、&lt;em&gt;シナリオ：&lt;/em&gt;または&lt;em&gt;フィーチャー：&lt;/em&gt;キーワードの前に配置する必要があります。最後のケースでは、その機能のすべてのシナリオが対応するグループに追加されます。</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="d5b2f61461a42fb8dae779420be4afa2c24d86b7" translate="yes" xml:space="preserve">
          <source>Take a look at the complete reference for the module you are using. Most of its methods are common to all modules but some of them are unique.</source>
          <target state="translated">使用しているモジュールの完全なリファレンスを見てください。ほとんどのメソッドはすべてのモジュールに共通していますが、中には独自のものもあります。</target>
        </trans-unit>
        <trans-unit id="4b744c6e6d08455ba63f9116b0d60e6119603afb" translate="yes" xml:space="preserve">
          <source>Takes a screenshot of the current window and saves it to &lt;code&gt;tests/_output/debug&lt;/code&gt;.</source>
          <target state="translated">現在のウィンドウのスクリーンショットを &lt;code&gt;tests/_output/debug&lt;/code&gt; それをtests / _output / debugに保存します。</target>
        </trans-unit>
        <trans-unit id="21bf264104ccf1ee9a751dd6a1ec49488b05d014" translate="yes" xml:space="preserve">
          <source>Takes last message from queue.</source>
          <target state="translated">キューから最後のメッセージを取得します。</target>
        </trans-unit>
        <trans-unit id="97e2c49d8ad7ce6be7c38c13a8d3088860040897" translate="yes" xml:space="preserve">
          <source>Taking Data From Responses</source>
          <target state="translated">回答からデータを取る</target>
        </trans-unit>
        <trans-unit id="2dff8fe74ec98d7eb09063b17888c6e507e27a38" translate="yes" xml:space="preserve">
          <source>Tasks from &lt;code&gt;\Codeception\Task\SplitTestsByGroups&lt;/code&gt; will generate non-intersecting group files. You can either split your tests by files or by single tests:</source>
          <target state="translated">&lt;code&gt;\Codeception\Task\SplitTestsByGroups&lt;/code&gt; からのタスクは、交差しないグループファイルを生成します。テストはファイルまたは単一のテストで分割できます。</target>
        </trans-unit>
        <trans-unit id="451fbcaefbafe7d5187ef9326b56eb70d48e5075" translate="yes" xml:space="preserve">
          <source>TeamCity</source>
          <target state="translated">TeamCity</target>
        </trans-unit>
        <trans-unit id="40af9dda4a3fcad13508b0a246d0092c7d75cf3f" translate="yes" xml:space="preserve">
          <source>TeamCity is a hosted solution from JetBrains. The setup of it can be a bit tricky as TeamCity uses its own reporter format for parsing test results. PHPUnit since version 5.x has integrated support for this format, so does Codeception. What we need to do is to configure Codeception to use custom reporter. By default there is &lt;code&gt;--report&lt;/code&gt; option which provides an alternative output. You can change the reporter class in &lt;code&gt;codeception.yml&lt;/code&gt; configuration:</source>
          <target state="translated">TeamCityは、JetBrainsがホストするソリューションです。TeamCityがテスト結果の解析に独自のレポーター形式を使用するため、セットアップは少し難しいかもしれません。バージョン5.x以降のPHPUnitには、このフォーマットのサポートが統合されているため、Codeceptionもサポートされています。カスタムレポーターを使用するようにCodeceptionを構成する必要があります。デフォルトでは、代替出力を提供する &lt;code&gt;--report&lt;/code&gt; オプションがあります。 &lt;code&gt;codeception.yml&lt;/code&gt; 構成でレポータークラスを変更できます。</target>
        </trans-unit>
        <trans-unit id="88eb893fdf5343a75775cf81d7fe42d986b0043c" translate="yes" xml:space="preserve">
          <source>Template class should be placed in &lt;code&gt;Codeception\Template&lt;/code&gt; namespace so Codeception could locate them by class name</source>
          <target state="translated">テンプレートクラスは、 &lt;code&gt;Codeception\Template&lt;/code&gt; 名前空間に配置して、Codeceptionがクラス名でテンプレートを見つけられるようにする必要があります</target>
        </trans-unit>
        <trans-unit id="a756846f9f9a8e6a39a42f213cb2548ddd69ea75" translate="yes" xml:space="preserve">
          <source>Templates should be inherited from &lt;a href=&quot;reference/inittemplate&quot;&gt;&lt;code&gt;Codeception\InitTemplate&lt;/code&gt;&lt;/a&gt; class and implement &lt;code&gt;setup&lt;/code&gt; method.</source>
          <target state="translated">テンプレートは、&lt;a href=&quot;reference/inittemplate&quot;&gt; &lt;code&gt;Codeception\InitTemplate&lt;/code&gt; &lt;/a&gt;クラスから継承し、 &lt;code&gt;setup&lt;/code&gt; メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="8ca46ef63a3cf34638b522cfdf607fca7e78d4c0" translate="yes" xml:space="preserve">
          <source>Test Doubles</source>
          <target state="translated">テストダブルス</target>
        </trans-unit>
        <trans-unit id="d119d7754b071bba2ad701ae807bfa56d8b814e0" translate="yes" xml:space="preserve">
          <source>Test execution speed</source>
          <target state="translated">テスト実行速度</target>
        </trans-unit>
        <trans-unit id="93950f31b035ff3f4d9e8d4a3225bb9c0758a21a" translate="yes" xml:space="preserve">
          <source>Test paths</source>
          <target state="translated">テストパス</target>
        </trans-unit>
        <trans-unit id="130f654168b48cbd0ff45d5f280b69cda73cc472" translate="yes" xml:space="preserve">
          <source>Test, Fail</source>
          <target state="translated">テスト、失敗</target>
        </trans-unit>
        <trans-unit id="5e8d8d7e39b3bd93b30e481bec832940a763b23a" translate="yes" xml:space="preserve">
          <source>Testing Behavior</source>
          <target state="translated">テスト行動</target>
        </trans-unit>
        <trans-unit id="a734405a434e29a3b02877164d21ac5c54274720" translate="yes" xml:space="preserve">
          <source>Testing Database</source>
          <target state="translated">データベースのテスト</target>
        </trans-unit>
        <trans-unit id="ff45b77fe10e2dd711a9e43bb4234be53d5865d4" translate="yes" xml:space="preserve">
          <source>Testing Dynamic Data with Snapshots</source>
          <target state="translated">スナップショットによる動的データのテスト</target>
        </trans-unit>
        <trans-unit id="e1d7e15db2216c186d41e4b13db2b435e9f138c6" translate="yes" xml:space="preserve">
          <source>Testing JSON Responses</source>
          <target state="translated">JSON レスポンスのテスト</target>
        </trans-unit>
        <trans-unit id="6ae35769401a134e41bbb7ad4ce533d4108ce2ec" translate="yes" xml:space="preserve">
          <source>Testing WebServices</source>
          <target state="translated">ウェブサービスのテスト</target>
        </trans-unit>
        <trans-unit id="a5416feee882c0a2908950ba5af9d9dbc1877058" translate="yes" xml:space="preserve">
          <source>Testing XML Responses</source>
          <target state="translated">XML レスポンスのテスト</target>
        </trans-unit>
        <trans-unit id="35abc73469ec8d80139a800976754ffc4cad771e" translate="yes" xml:space="preserve">
          <source>Testing computer needs access to project&amp;rsquo;s PHP files</source>
          <target state="translated">テスト用コンピューターはプロジェクトのPHPファイルにアクセスする必要があります</target>
        </trans-unit>
        <trans-unit id="bc4273b3f2bc1be9624546df03b63a13c80eb0f2" translate="yes" xml:space="preserve">
          <source>Testing pieces of code before coupling them together is highly important as well. This way, you can be sure that some deeply hidden feature still works, even if it was not covered by functional or acceptance tests. This also shows care in producing stable and testable code.</source>
          <target state="translated">コードの断片を結合する前にテストすることも非常に重要です。そうすれば、機能テストや受け入れテストでカバーされていなくても、深く隠された機能がまだ動作していることを確認できます。これは、安定したテスト可能なコードを作成する上での注意点でもあります。</target>
        </trans-unit>
        <trans-unit id="cdda78e21defd9350a869ccc1e6fc06c5e69b4a8" translate="yes" xml:space="preserve">
          <source>Testing with a selection of remote/local queueing services, including Amazon&amp;rsquo;s SQS service Iron.io service and beanstalkd service.</source>
          <target state="translated">AmazonのSQSサービスIron.ioサービスおよびbeanstalkdサービスを含む、選択したリモート/ローカルキューイングサービスを使用したテスト。</target>
        </trans-unit>
        <trans-unit id="3ada2358a0771d2fb106fe5467eb5dd50e9b17d5" translate="yes" xml:space="preserve">
          <source>TestingBot</source>
          <target state="translated">TestingBot</target>
        </trans-unit>
        <trans-unit id="990f816b4d99142b5e3785d909cb2712aa4b68f3" translate="yes" xml:space="preserve">
          <source>Tests can be started with the &lt;code&gt;run&lt;/code&gt; command:</source>
          <target state="translated">テストは &lt;code&gt;run&lt;/code&gt; コマンドで開始できます：</target>
        </trans-unit>
        <trans-unit id="090def76668fd15c89e3d14b13f9a1efcdc7935c" translate="yes" xml:space="preserve">
          <source>Tests should not affect each other. That&amp;rsquo;s a rule of thumb. When tests interact with a database, they may change the data inside it, which would eventually lead to data inconsistency. A test may try to insert a record that has already been inserted, or retrieve a deleted record. To avoid test failures, the database should be brought back to its initial state before each test. Codeception has different methods and approaches to get your data cleaned.</source>
          <target state="translated">テストは互いに影響を与えてはなりません。それは経験則です。テストがデータベースとやり取りすると、データベース内のデータが変更される可能性があり、最終的にはデータの不整合が発生します。テストでは、すでに挿入されているレコードを挿入したり、削除されたレコードを取得したりできます。テストの失敗を回避するには、各テストの前にデータベースを初期状態に戻す必要があります。Codeceptionには、データをクリーンアップするためのさまざまな方法とアプローチがあります。</target>
        </trans-unit>
        <trans-unit id="b5eb29aef6674e7a9336098909cb7847b0a0059d" translate="yes" xml:space="preserve">
          <source>Tests vs Features</source>
          <target state="translated">テストと機能</target>
        </trans-unit>
        <trans-unit id="dd6ffc46d87c458cfbfffd6ce1a69784193070c1" translate="yes" xml:space="preserve">
          <source>Tests will be randomly reordered on each run. When tests executed in shuffle mode a seed value will be printed. Copy this seed value from output to be able to rerun tests in the same order.</source>
          <target state="translated">テストは各実行時にランダムに並び替えられます。シャッフルモードでテストを実行すると、シード値が出力されます。同じ順番でテストを再実行できるように、出力からこのシード値をコピーしてください。</target>
        </trans-unit>
        <trans-unit id="30b6fda3137a3460993392b5a9a737ff4fbd4b84" translate="yes" xml:space="preserve">
          <source>Text values inside a scenarios can be set inside a &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; block:</source>
          <target state="translated">シナリオ内のテキスト値は、 &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; ブロック内に設定できます。</target>
        </trans-unit>
        <trans-unit id="5913f2111b151fc90ac5d83371dc2d8a80819096" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s a pretty simple yet powerful class to build XML structures in jQuery-like style. With no XML line actually written! Uses DOM extension to manipulate XML data.</source>
          <target state="translated">これは、jQueryのようなスタイルでXML構造を構築するための非常にシンプルでありながら強力なクラスです。実際にはXML行は記述されていません！DOM拡張を使用してXMLデータを操作します。</target>
        </trans-unit>
        <trans-unit id="a2f6d0b0434bdbe20fcedcf90c5a7a9d9e5e8cbb" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s ok for now. But what files should be present in final coverage report? Pass an array of files or directory to include/exclude sections. The path ending with &amp;lsquo;*&amp;rsquo; matches the directory. Also you can use &amp;lsquo;*&amp;rsquo; mask in a file name, i.e. &lt;code&gt;app/models/*Model.php&lt;/code&gt; to match all models.</source>
          <target state="translated">それは今のところ大丈夫です。しかし、最終的なカバレッジレポートにはどのファイルを含める必要がありますか？セクションを含める/除外するファイルまたはディレクトリの配列を渡します。「*」で終わるパスはディレクトリと一致します。また、ファイル名に「*」マスクを使用することもできます。つまり、 &lt;code&gt;app/models/*Model.php&lt;/code&gt; はすべてのモデルに一致します。</target>
        </trans-unit>
        <trans-unit id="a0116a67c55276460a7a6390c0bc9c6578426e9e" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why it&amp;rsquo;s pretty important not just to cover your application with unit tests, but make unit tests self-explanatory. We do this for scenario-driven acceptance and functional tests, and we should do this for unit and integration tests as well.</source>
          <target state="translated">そのため、アプリケーションを単体テストでカバーするだけでなく、単体テストを自明にすることが非常に重要です。これは、シナリオ主導の受け入れテストと機能テストのために行い、単体テストと統合テストについても行う必要があります。</target>
        </trans-unit>
        <trans-unit id="d02c17b23cfcb64797eb91636dc0cd0131d8a62f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;modules/laravel5&quot;&gt;Laravel5&lt;/a&gt; module is included and requires no configuration:</source>
          <target state="translated">&lt;a href=&quot;modules/laravel5&quot;&gt;Laravel5の&lt;/a&gt;モジュールが含まれており、構成は必要ありません。</target>
        </trans-unit>
        <trans-unit id="2d03cea65b987f495690d17cc1a6ac552d8236e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$I&lt;/code&gt; object is used to write all interactions. The methods of the &lt;code&gt;$I&lt;/code&gt; object are taken from the &lt;a href=&quot;modules/phpbrowser&quot;&gt;PhpBrowser Module&lt;/a&gt;. We will briefly describe them here:</source>
          <target state="translated">&lt;code&gt;$I&lt;/code&gt; オブジェクトは、すべての相互作用を記述するために使用されます。 &lt;code&gt;$I&lt;/code&gt; オブジェクトのメソッドは、&lt;a href=&quot;modules/phpbrowser&quot;&gt;PhpBrowser Module&lt;/a&gt;から取得されます。ここではそれらについて簡単に説明します。</target>
        </trans-unit>
        <trans-unit id="80fad0e1c2444075fe8788924f6a343c4313b3b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$button&lt;/code&gt; parameter can be either a string, an array or an instance of Facebook\WebDriver\WebDriverBy. When it is a string, the button will be found by its &amp;ldquo;name&amp;rdquo; attribute. If $button is an array then it will be treated as a strict selector and a WebDriverBy will be used verbatim.</source>
          <target state="translated">&lt;code&gt;$button&lt;/code&gt; パラメータには、文字列、配列やFacebook \ webdriverを\ WebDriverByのインスタンスのいずれかになります。文字列の場合、ボタンは「name」属性で検索されます。$ buttonが配列の場合は、厳密なセレクターとして扱われ、WebDriverByがそのまま使用されます。</target>
        </trans-unit>
        <trans-unit id="ca019882edfe805759f8fe378b0a106de12c3a13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Phalcon4&lt;/code&gt; module requires creating a bootstrap file which returns an instance of &lt;code&gt;\Phalcon\Mvc\Application&lt;/code&gt;. To start writing functional tests with Phalcon support you should enable the &lt;code&gt;Phalcon4&lt;/code&gt; module and provide the path to this bootstrap file:</source>
          <target state="translated">&lt;code&gt;Phalcon4&lt;/code&gt; のモジュールのインスタンスを返しブートストラップファイルの作成が必要 &lt;code&gt;\Phalcon\Mvc\Application&lt;/code&gt; 。Phalconサポートを使用して機能テストの作成を開始するには、 &lt;code&gt;Phalcon4&lt;/code&gt; モジュールを有効にして、このブートストラップファイルへのパスを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="d101be0a31514ba9d0139abf89ed1f532f6264a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Phalcon&lt;/code&gt; module requires creating a bootstrap file which returns an instance of &lt;code&gt;\Phalcon\Mvc\Application&lt;/code&gt;. To start writing functional tests with Phalcon support you should enable the &lt;code&gt;Phalcon&lt;/code&gt; module and provide the path to this bootstrap file:</source>
          <target state="translated">&lt;code&gt;Phalcon&lt;/code&gt; のモジュールのインスタンスを返しブートストラップファイルの作成が必要 &lt;code&gt;\Phalcon\Mvc\Application&lt;/code&gt; 。Phalconをサポートする機能テストの作成を開始するには、 &lt;code&gt;Phalcon&lt;/code&gt; モジュールを有効にして、このブートストラップファイルへのパスを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f9c82bd681bf2ba14cac13c287a15caacf6eda76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dump.sql&lt;/code&gt; may contain multiline statements.</source>
          <target state="translated">&lt;code&gt;dump.sql&lt;/code&gt; は、複数行のステートメントが含まれていてもよいです。</target>
        </trans-unit>
        <trans-unit id="0da3040d459bb304f41b18489d440f5678e7a412" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loginAsAdmin&lt;/code&gt; method may be implemented like this:</source>
          <target state="translated">&lt;code&gt;loginAsAdmin&lt;/code&gt; の方法は次のように実施することができます。</target>
        </trans-unit>
        <trans-unit id="dcaf1a47dfdd0480040453f9dbd4957a8f2db944" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;submitForm&lt;/code&gt; is not emulating a user&amp;rsquo;s actions, but it&amp;rsquo;s quite useful in situations when the form is not formatted properly, for example, to discover that labels aren&amp;rsquo;t set or that fields have unclean names or badly written IDs, or the form is sent by a JavaScript call.</source>
          <target state="translated">&lt;code&gt;submitForm&lt;/code&gt; は、ユーザーの行動をエミュレートされていませんが、フォームはラベルが設定されていないことを発見するために、例えば、適切にフォーマットされていない場合には、状況で非常に便利なのですか、そのフィールドが汚れ名またはひどく書かれたIDを持っている、またはフォームが送信されますJavaScript呼び出しによって。</target>
        </trans-unit>
        <trans-unit id="469d52838ef14c3e85c078ea1e9836394855313c" translate="yes" xml:space="preserve">
          <source>The AcceptanceTester class has its methods defined in modules. Let&amp;rsquo;s see what&amp;rsquo;s inside the &lt;code&gt;AcceptanceTester&lt;/code&gt; class, which is located inside the &lt;code&gt;tests/_support&lt;/code&gt; directory:</source>
          <target state="translated">AcceptanceTesterクラスのメソッドはモジュールで定義されています。 &lt;code&gt;tests/_support&lt;/code&gt; ディレクトリ内にある &lt;code&gt;AcceptanceTester&lt;/code&gt; クラスの内容を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="14076581f15781dc3f5752ce914253f05f18a096" translate="yes" xml:space="preserve">
          <source>The Codeception Syntax</source>
          <target state="translated">コード・セプション構文</target>
        </trans-unit>
        <trans-unit id="4c9cf372efed695dfa1ac77431128854cc62b872" translate="yes" xml:space="preserve">
          <source>The Codeception framework was developed to actually make testing fun. It allows writing unit, functional, integration, and acceptance tests in a single, coherent style.</source>
          <target state="translated">Codeception フレームワークは、テストを実際に楽しくするために開発されました。これにより、ユニットテスト、機能テスト、統合テスト、受け入れテストを単一の首尾一貫したスタイルで書くことができます。</target>
        </trans-unit>
        <trans-unit id="3f1db379ca4e5ab377b8e0b68da65d0a7266f99c" translate="yes" xml:space="preserve">
          <source>The Db module provides actions to create and verify data inside a database.</source>
          <target state="translated">Dbモジュールは、データベース内のデータを作成して検証するためのアクションを提供します。</target>
        </trans-unit>
        <trans-unit id="5ae9a3d0c63f31cec582eace764c0fdd830fbfc9" translate="yes" xml:space="preserve">
          <source>The FunctionalTester class has its methods defined in modules. Actually, it doesn&amp;rsquo;t contain any of them, but rather acts as a proxy. It knows which module executes this action and passes parameters into it. To make your IDE see all of the FunctionalTester methods, you should run the &lt;code&gt;codecept build&lt;/code&gt; command. It generates method signatures from enabled modules and saves them into a trait which is included in an actor. In the current example, the &lt;code&gt;tests/support/_generated/FunctionalTesterActions.php&lt;/code&gt; file will be generated. By default, Codeception automatically rebuilds the Actions trait on each change of the suite configuration.</source>
          <target state="translated">FunctionalTesterクラスには、モジュールで定義されたメソッドがあります。実際には、それらは含まれていませんが、プロキシとして機能します。どのモジュールがこのアクションを実行するかを認識し、それにパラメーターを渡します。 IDEにすべてのFunctionalTesterメソッドを表示するには、 &lt;code&gt;codecept build&lt;/code&gt; コマンドを実行する必要があります。有効なモジュールからメソッドシグネチャを生成し、アクターに含まれる特性に保存します。現在の例では、 &lt;code&gt;tests/support/_generated/FunctionalTesterActions.php&lt;/code&gt; ファイルが生成されます。デフォルトでは、Codeceptionはスイート構成が変更されるたびにActions特性を自動的に再構築します。</target>
        </trans-unit>
        <trans-unit id="74b4bc8b2231ed4cd79853566bcfb0c8d17a18b7" translate="yes" xml:space="preserve">
          <source>The REST module has parts for &lt;code&gt;Xml&lt;/code&gt; and &lt;code&gt;Json&lt;/code&gt; in the same way. If you are testing a REST service with only JSON responses, you can enable just the JSON part of this module:</source>
          <target state="translated">RESTモジュールには、同じように &lt;code&gt;Xml&lt;/code&gt; と &lt;code&gt;Json&lt;/code&gt; のパーツがあります。JSON応答のみを使用してRESTサービスをテストする場合は、このモジュールのJSON部分のみを有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="89b43090a03addcfa3a2f0c9edeedd173474354d" translate="yes" xml:space="preserve">
          <source>The REST module will connect to &lt;code&gt;PhpBrowser&lt;/code&gt; according to this configuration. Depending on the web service we may deal with XML or JSON responses. Codeception handles both data formats well, however If you don&amp;rsquo;t need one of them, you can explicitly specify that the JSON or XML parts of the module will be used:</source>
          <target state="translated">RESTモジュールは、この構成に従って &lt;code&gt;PhpBrowser&lt;/code&gt; に接続します。Webサービスによっては、XMLまたはJSON応答を処理する場合があります。Codeceptionは両方のデータ形式を適切に処理しますが、どちらかが不要な場合は、モジュールのJSONまたはXML部分を使用することを明示的に指定できます。</target>
        </trans-unit>
        <trans-unit id="bf2306978465f7282232abd014cc2130ff0c19d6" translate="yes" xml:space="preserve">
          <source>The REST web service is accessed via HTTP with standard methods: &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;. They allow users to receive and manipulate entities from the service. Accessing a WebService requires an HTTP client, so for using it you need the module &lt;code&gt;PhpBrowser&lt;/code&gt; or one of framework modules set up. For example, we can use the &lt;code&gt;Symfony&lt;/code&gt; module for Symfony2 applications in order to ignore web server and test web service internally.</source>
          <target state="translated">REST Webサービスには、HTTP経由で標準メソッド &lt;code&gt;GET&lt;/code&gt; 、 &lt;code&gt;POST&lt;/code&gt; 、 &lt;code&gt;PUT&lt;/code&gt; 、 &lt;code&gt;DELETE&lt;/code&gt; を使用してアクセスします。これにより、ユーザーはサービスからエンティティを受信して​​操作できます。WebServiceにアクセスするにはHTTPクライアントが必要なので、それを使用するには、モジュール &lt;code&gt;PhpBrowser&lt;/code&gt; またはいずれかのフレームワークモジュールを設定する必要があります。たとえば、Symfony2アプリケーションの &lt;code&gt;Symfony&lt;/code&gt; モジュールを使用して、Webサーバーを無視し、内部でWebサービスをテストできます。</target>
        </trans-unit>
        <trans-unit id="9dd546d857d4f80626f18c81b65aed931bad9a2c" translate="yes" xml:space="preserve">
          <source>The application bootstrap file must return Application object but not call its handle() method.</source>
          <target state="translated">アプリケーションブートストラップファイルは、アプリケーションオブジェクトを返さなければなりませんが、そのhandle()メソッドを呼び出してはいけません。</target>
        </trans-unit>
        <trans-unit id="cdbb71f85933e9d57e8686b8ea476480331f6f61" translate="yes" xml:space="preserve">
          <source>The assertion performed by &lt;code&gt;assertData&lt;/code&gt; will not display the typical diff output from &lt;code&gt;assertEquals&lt;/code&gt; or any customized failed assertion. To have the diff displayed when running tests, you can call the snapshot method &lt;code&gt;shouldShowDiffOnFail&lt;/code&gt;:</source>
          <target state="translated">行われるアサーション &lt;code&gt;assertData&lt;/code&gt; はより一般的な差分出力は表示されません &lt;code&gt;assertEquals&lt;/code&gt; または任意のカスタマイズされた失敗したアサーション。テストの実行時に差分を表示するには、スナップショットメソッド &lt;code&gt;shouldShowDiffOnFail&lt;/code&gt; を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="61bfbb37959ea3f416a5baef476bcf0039456795" translate="yes" xml:space="preserve">
          <source>The basic codecoverage can be collected for functional and unit tests. If you performed configuration steps from above, you are ready to go. All you need is to execute codeception with &lt;code&gt;--coverage&lt;/code&gt; option.</source>
          <target state="translated">基本的なコードカバレッジは、機能テストと単体テストのために収集できます。上記の構成手順を実行した場合は、準備ができています。必要なのは、 &lt;code&gt;--coverage&lt;/code&gt; オプションを使用してcodeceptionを実行することだけです。</target>
        </trans-unit>
        <trans-unit id="28ece1b1e7a3c720b16e7064930ec959c102b1dc" translate="yes" xml:space="preserve">
          <source>The concept of groups was taken from PHPUnit and behave in the same way.</source>
          <target state="translated">グループの概念は PHPUnit から取ったもので、同じように振る舞います。</target>
        </trans-unit>
        <trans-unit id="6c3ead64e40e15abc87b5e2e1014525786e7ebe0" translate="yes" xml:space="preserve">
          <source>The configuration is merged in the order given. This way you can easily create multiple combinations of your environment configurations.</source>
          <target state="translated">設定は、与えられた順番でマージされます。このようにして、環境設定の複数の組み合わせを簡単に作成することができます。</target>
        </trans-unit>
        <trans-unit id="d8e6b0f108606f2b4f390d62ef87b1c8488b825c" translate="yes" xml:space="preserve">
          <source>The configuration settings depending on which queueing service is being used, all the options are listed here. Refer to the configuration examples below to identify the configuration options required for your chosen service.</source>
          <target state="translated">どのキューイングサービスを使用しているかに応じて設定する設定は、ここではすべてのオプションをリストアップしています。以下の設定例を参照して、選択したサービスに必要な設定オプションを確認してください。</target>
        </trans-unit>
        <trans-unit id="160b63f91d59bbb525034e6032da9ec174391c22" translate="yes" xml:space="preserve">
          <source>The delimiter, a semi-colon in this case, must be on the same line as the last statement:</source>
          <target state="translated">区切り文字(この場合はセミコロン)は、最後の文と同じ行になければなりません。</target>
        </trans-unit>
        <trans-unit id="3b7857336896929be3221056cffefc086a5a5a2d" translate="yes" xml:space="preserve">
          <source>The dependency injection container can construct any object that requires any known class type. For instance, &lt;code&gt;Page\Login&lt;/code&gt; required &lt;code&gt;AcceptanceTester&lt;/code&gt;, and so it was injected into &lt;code&gt;Page\Login&lt;/code&gt; constructor, and PageObject was created and passed into method arguments. You should explicitly specify the types of required objects for Codeception to know what objects should be created for a test. Dependency Injection will be described in the next chapter.</source>
          <target state="translated">依存関係注入コンテナは、既知のクラスタイプを必要とするオブジェクトを構築できます。たとえば、 &lt;code&gt;Page\Login&lt;/code&gt; は &lt;code&gt;AcceptanceTester&lt;/code&gt; が必要だったため、 &lt;code&gt;Page\Login&lt;/code&gt; コンストラクターに注入され、PageObjectが作成されてメソッド引数に渡されました。テスト用に作成する必要があるオブジェクトを知るために、Codeceptionに必要なオブジェクトのタイプを明示的に指定する必要があります。依存性注入については、次の章で説明します。</target>
        </trans-unit>
        <trans-unit id="20d7af16b862e9c4caadf9ec15d402071748e6d2" translate="yes" xml:space="preserve">
          <source>The desired environments can be specified with the &lt;code&gt;@env&lt;/code&gt; annotation for tests in Test and Cest formats:</source>
          <target state="translated">TestおよびCest形式のテストの &lt;code&gt;@env&lt;/code&gt; アノテーションを使用して、必要な環境を指定できます。</target>
        </trans-unit>
        <trans-unit id="67694283c04aa5e36ce58ff5430e83cd0ed7374a" translate="yes" xml:space="preserve">
          <source>The environment configuration files are merged into the main configuration before the suite configuration is merged.</source>
          <target state="translated">環境設定ファイルは、スイート設定をマージする前にメイン設定にマージされます。</target>
        </trans-unit>
        <trans-unit id="b9e1b1d5c065546796217490286ec090ba49c7b8" translate="yes" xml:space="preserve">
          <source>The execution of the test is stopped at this point, and a console is shown where you can try all available commands &amp;ldquo;live&amp;rdquo;. This can be very useful when you write functional, acceptance, or api test.</source>
          <target state="translated">この時点でテストの実行が停止し、使用可能なすべてのコマンドを「ライブ」で試すことができるコンソールが表示されます。これは、機能テスト、受け入れテスト、またはAPIテストを作成するときに非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="349ce04c3614e552c27f7544285d993113dfb1e2" translate="yes" xml:space="preserve">
          <source>The extension class itself is inherited from &lt;code&gt;Codeception\Extension&lt;/code&gt;:</source>
          <target state="translated">拡張クラス自体は、 &lt;code&gt;Codeception\Extension&lt;/code&gt; から継承されます。</target>
        </trans-unit>
        <trans-unit id="3b6d76725b4fbb3cc04c6829b018f0d3517c48f6" translate="yes" xml:space="preserve">
          <source>The following configurations are required for this module:</source>
          <target state="translated">このモジュールには以下の構成が必要です。</target>
        </trans-unit>
        <trans-unit id="9ec3be11fb36d1d27ff1f7e9106db4862cc1eb1e" translate="yes" xml:space="preserve">
          <source>The following dependencies are needed for the listed queue servers:</source>
          <target state="translated">リストアップされたキューサーバには、以下の依存関係が必要です。</target>
        </trans-unit>
        <trans-unit id="6e2bd750df8312438935592586a88e5ee697498c" translate="yes" xml:space="preserve">
          <source>The generated file will look like this:</source>
          <target state="translated">生成されたファイルは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="3535805f6cce054bd2b79c81720a6c301fc92062" translate="yes" xml:space="preserve">
          <source>The host and port parameter can be redefined in the suite configuration. Values are set in the &lt;code&gt;modules:config&lt;/code&gt; section of the configuration file.</source>
          <target state="translated">hostおよびportパラメーターは、スイート構成で再定義できます。値は、構成ファイルの &lt;code&gt;modules:config&lt;/code&gt; セクションで設定されます。</target>
        </trans-unit>
        <trans-unit id="9eddec099cd7a02f9d769f7e737e83c903f6dfa4" translate="yes" xml:space="preserve">
          <source>The idea behind testing is not new. You can&amp;rsquo;t sleep well if you are not confident that your last commit didn&amp;rsquo;t take down the whole application. Having your application covered with tests gives you more trust in the stability of your application. That&amp;rsquo;s all.</source>
          <target state="translated">テストの背後にある考え方は新しいものではありません。最後のコミットでアプリケーション全体が停止されなかったと確信できないと、よく眠ることができません。アプリケーションをテストでカバーすると、アプリケーションの安定性に対する信頼が高まります。それで全部です。</target>
        </trans-unit>
        <trans-unit id="996c7574ad48e1d2447f138442e5ace9e50b4d9d" translate="yes" xml:space="preserve">
          <source>The idea of story BDD can be narrowed to:</source>
          <target state="translated">ストーリーBDDという発想で絞ることができます。</target>
        </trans-unit>
        <trans-unit id="337078e5cc63fe2f12544058bef34792704bd227" translate="yes" xml:space="preserve">
          <source>The last line of the previous example verified that the response contained the provided string. However we shouldn&amp;rsquo;t rely on it, as depending on content formatting we can receive different results with the same data. What we actually need is to check that the response can be parsed and it contains some of the values we expect. In the case of JSON we can use the &lt;code&gt;seeResponseContainsJson&lt;/code&gt; method</source>
          <target state="translated">前の例の最後の行では、提供された文字列が応答に含まれていることを確認しました。ただし、コンテンツのフォーマットによっては同じデータで異なる結果を受け取る可能性があるため、これに依存するべきではありません。実際に必要なのは、応答が解析可能であり、期待される値の一部が含まれていることを確認することです。JSONの場合、 &lt;code&gt;seeResponseContainsJson&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="7a41dd1561e9731ea595e4775e0f7365cdaaef3b" translate="yes" xml:space="preserve">
          <source>The module uses the Symfony Profiler to provide additional information and assertions.</source>
          <target state="translated">このモジュールは追加の情報とアサーションを提供するために symfony Profiler を使います。</target>
        </trans-unit>
        <trans-unit id="e995d5099f03622d17485bee26f6b115a7076b60" translate="yes" xml:space="preserve">
          <source>The modules won&amp;rsquo;t conflict as actions with the same names won&amp;rsquo;t be loaded.</source>
          <target state="translated">同じ名前のアクションはロードされないため、モジュールは競合しません。</target>
        </trans-unit>
        <trans-unit id="59fb33a6dc474303894360f2893c8891610f127b" translate="yes" xml:space="preserve">
          <source>The more complicated your domain is the more explicit your tests should be. With &lt;a href=&quot;https://github.com/Codeception/DomainAssert&quot;&gt;DomainAssert&lt;/a&gt; library you can easily create custom assertion methods for unit and integration tests.</source>
          <target state="translated">ドメインが複雑になるほど、テストはより明確になります。&lt;a href=&quot;https://github.com/Codeception/DomainAssert&quot;&gt;DomainAssertの&lt;/a&gt;ライブラリあなたは簡単にユニットテストと統合テスト用のカスタムアサーションメソッドを作成することができます。</target>
        </trans-unit>
        <trans-unit id="b4d6a20f1b3bf05dc10c7cd3892623bfb0b3874e" translate="yes" xml:space="preserve">
          <source>The most important function of this module is cleaning database before each test. To have your database properly cleaned you should configure it to access the database.</source>
          <target state="translated">このモジュールの最も重要な機能は、各テストの前にデータベースをクリーニングすることです。データベースを適切にクリーニングするためには、データベースにアクセスするように設定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="588bfb6f28aae5a6ad7de748a5a7ac537f36b691" translate="yes" xml:space="preserve">
          <source>The most important function of this module is to clean a database before each test. This module also provides actions to perform checks in a database, e.g. &lt;a href=&quot;db#seeInDatabase&quot;&gt;seeInDatabase()&lt;/a&gt;</source>
          <target state="translated">このモジュールの最も重要な機能は、各テストの前にデータベースをクリーンアップすることです。このモジュールは、データベースでチェックを実行するアクションも提供します（例：&lt;a href=&quot;db#seeInDatabase&quot;&gt;seeInDatabase（））&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6504e6309073c0a2daf28c3c3b0a0924455bba6e" translate="yes" xml:space="preserve">
          <source>The most important part is the &lt;code&gt;_generated\AcceptanceTesterActions&lt;/code&gt; trait, which is used as a proxy for enabled modules. It knows which module executes which action and passes parameters into it. This trait was created by running &lt;code&gt;codecept build&lt;/code&gt; and is regenerated each time module or configuration changes.</source>
          <target state="translated">最も重要な部分は、有効なモジュールのプロキシとして使用される &lt;code&gt;_generated\AcceptanceTesterActions&lt;/code&gt; トレイトです。どのモジュールがどのアクションを実行するかを認識し、それにパラメーターを渡します。この特性は、 &lt;code&gt;codecept build&lt;/code&gt; を実行することによって作成され、モジュールまたは構成が変更されるたびに再生成されます。</target>
        </trans-unit>
        <trans-unit id="6ab0e59b176f02323ad4cfcb488b984e85ec23fa" translate="yes" xml:space="preserve">
          <source>The most useful method for this is &lt;code&gt;see()&lt;/code&gt;:</source>
          <target state="translated">このための最も有用なメソッドは、 &lt;code&gt;see()&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="858923fa5cf5369ecb2afbc8db5c69cf656baa75" translate="yes" xml:space="preserve">
          <source>The names of these files are used as environments names (e.g. &lt;code&gt;chrome.yml&lt;/code&gt; or &lt;code&gt;chrome.dist.yml&lt;/code&gt; for an environment named &lt;code&gt;chrome&lt;/code&gt;). You can generate a new file with this environment configuration by using the &lt;code&gt;generate:environment&lt;/code&gt; command:</source>
          <target state="translated">これらのファイルの名前は環境名として使用されます（例： &lt;code&gt;chrome&lt;/code&gt; という名前の環境では &lt;code&gt;chrome.yml&lt;/code&gt; または &lt;code&gt;chrome.dist.yml&lt;/code&gt; ）。この環境設定で新しいファイルを生成するには、 &lt;code&gt;generate:environment&lt;/code&gt; コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="aec06f3ad2dbbb0477616434418fa5e8505f3c91" translate="yes" xml:space="preserve">
          <source>The next time you start the suite without setting one of these values, an exception will be thrown.</source>
          <target state="translated">次回、これらの値のいずれかを設定せずにスイートを起動すると、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="51ca1d160b9927685689edb66db004fde440b993" translate="yes" xml:space="preserve">
          <source>The passed in configuration is accessible via the &lt;code&gt;config&lt;/code&gt; property: &lt;code&gt;$this-&amp;gt;config['param']&lt;/code&gt;.</source>
          <target state="translated">渡された構成には、 &lt;code&gt;config&lt;/code&gt; プロパティ &lt;code&gt;$this-&amp;gt;config['param']&lt;/code&gt; 介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="20f4d8b4411eea8a68703b845b5d27c59c927e98" translate="yes" xml:space="preserve">
          <source>The real action in a test happens only when a request is sent. Before a request you may provide additional http headers which will be used in a next request to set authorization or expected content format.</source>
          <target state="translated">テストにおける実際のアクションはリクエストが送信されたときにのみ発生します。リクエストの前に、認証や期待されるコンテンツのフォーマットを設定するために、 次のリクエストで使用される追加の http ヘッダを提供することができます。</target>
        </trans-unit>
        <trans-unit id="3ef1e561f5c8a3b3e01dae3070397cef53891509" translate="yes" xml:space="preserve">
          <source>The recommended approach is to configure a &lt;code&gt;populator&lt;/code&gt;, an external command to load a dump. Command parameters like host, username, password, database can be obtained from the config and inserted into placeholders:</source>
          <target state="translated">推奨されるアプローチは、ダンプをロードする外部コマンドである &lt;code&gt;populator&lt;/code&gt; を構成することです。ホスト、ユーザー名、パスワード、データベースなどのコマンドパラメーターは、構成から取得してプレースホルダーに挿入できます。</target>
        </trans-unit>
        <trans-unit id="ba91d76613788bb5d0a0f55e3a15949fbe38f03d" translate="yes" xml:space="preserve">
          <source>The required information is provided by &lt;a href=&quot;https://github.com/sebastianbergmann/php-code-coverage&quot;&gt;SebastianBergmann\CodeCoverage&lt;/a&gt;, and you can use any of the supported drivers.</source>
          <target state="translated">必要な情報は&lt;a href=&quot;https://github.com/sebastianbergmann/php-code-coverage&quot;&gt;SebastianBergmann \ CodeCoverage&lt;/a&gt;によって提供され、サポートされている任意のドライバーを使用できます。</target>
        </trans-unit>
        <trans-unit id="6c64b2f1acd18a0d2ff15ad16ed710f72b78b619" translate="yes" xml:space="preserve">
          <source>The same can be done for all public properties of an enabled module. Accessible properties are listed in the module reference.</source>
          <target state="translated">有効化されたモジュールのすべてのパブリック・プロパティについても同じことができます。アクセス可能なプロパティは、モジュール参照に記載されています。</target>
        </trans-unit>
        <trans-unit id="a2dcffd4e8eeefa8336c1129d2b375c8301a5062" translate="yes" xml:space="preserve">
          <source>The same way as above, a StepObject can be instantiated automatically by the Dependency Injection Container when used inside the Cest format:</source>
          <target state="translated">上記と同様に、Cest形式の内部で使用すると、依存性インジェクションコンテナによってStepObjectを自動的にインスタンス化することができます。</target>
        </trans-unit>
        <trans-unit id="ace9b99ff6d91220727c102feda43458324989dd" translate="yes" xml:space="preserve">
          <source>The same way we tested a web site, Codeception allows you to test web services. They are very hard to test manually, so it&amp;rsquo;s a really good idea to automate web service testing. We have SOAP and REST as standards, which are represented in corresponding modules, which we will cover in this chapter.</source>
          <target state="translated">Webサイトをテストしたのと同じ方法で、Codeceptionを使用してWebサービスをテストできます。手動でテストするのは非常に難しいため、Webサービスのテストを自動化することは非常に良い考えです。標準としてSOAPとRESTがあり、これらは対応するモジュールで表されます。これについては、この章で説明します。</target>
        </trans-unit>
        <trans-unit id="e729532af7b21d8eee9bea27a747688cb0032343" translate="yes" xml:space="preserve">
          <source>The same way you can receive request parameters and headers.</source>
          <target state="translated">リクエストパラメータとヘッダーを受け取る方法は同じです。</target>
        </trans-unit>
        <trans-unit id="a33d02ff1f25b4b25ac847f2e6b6b840547327df" translate="yes" xml:space="preserve">
          <source>The second parameter is a context (CSS or XPath locator) to narrow the search.</source>
          <target state="translated">2番目のパラメータは、検索を絞り込むためのコンテキスト(CSSまたはXPathロケータ)です。</target>
        </trans-unit>
        <trans-unit id="e13f314950e7cf595a3dec7c53c3957357ec2b94" translate="yes" xml:space="preserve">
          <source>The sessionStorage is copied to the new tab (contrary to a tab that was manually opened by the user)</source>
          <target state="translated">sessionStorageは新しいタブにコピーされます(ユーザーが手動で開いたタブとは逆です)。</target>
        </trans-unit>
        <trans-unit id="2fab86c235f21482acbeb01cd9d17fcf33111c4b" translate="yes" xml:space="preserve">
          <source>The snapshot file will be stored without encoding it to json format, and with the &lt;code&gt;.html&lt;/code&gt; extension.</source>
          <target state="translated">スナップショットファイルは、json形式にエンコードせずに、拡張子が &lt;code&gt;.html&lt;/code&gt; で保存されます。</target>
        </trans-unit>
        <trans-unit id="948bedc7ccb85fbbba4b999ce11602d237b995c3" translate="yes" xml:space="preserve">
          <source>The solution is to pass an array value:</source>
          <target state="translated">解決策は、配列の値を渡すことです。</target>
        </trans-unit>
        <trans-unit id="c9ab02c2a7c5489f53cbdc3d9b12ac6687d51fa7" translate="yes" xml:space="preserve">
          <source>The tab is opened with JavaScript&amp;rsquo;s &lt;code&gt;window.open()&lt;/code&gt;, which means:</source>
          <target state="translated">タブはJavaScriptの &lt;code&gt;window.open()&lt;/code&gt; で開かれます。これは、次のことを意味します。</target>
        </trans-unit>
        <trans-unit id="d8c860625bd621199d0c2c863a4ce486f4bbe926" translate="yes" xml:space="preserve">
          <source>The tests will be executed 3 times, each time in a different browser.</source>
          <target state="translated">テストは3回、毎回異なるブラウザで実行されます。</target>
        </trans-unit>
        <trans-unit id="9d32ff5aa50b60d820eddb51eeb2ae9b606279b3" translate="yes" xml:space="preserve">
          <source>The ubiquitous language is always referred as &lt;em&gt;common&lt;/em&gt; language. That is it&amp;rsquo;s main benefit. It is not a couple of our business specification&amp;rsquo;s words, and not a couple of developer&amp;rsquo;s technical terms. It is a common words and terms that can be understood by people for whom we are building the software and should be understood by developers. Establishing correct communication between this two groups people is vital for building successful project that will fit the domain and fulfill all business needs.</source>
          <target state="translated">ユビキタス言語は常に&lt;em&gt;共通&lt;/em&gt;言語と呼ばれます。それが主なメリットです。これは、ビジネス仕様の言葉ではなく、開発者の技術用語でもありません。これは、ソフトウェアを構築している人が理解できる一般的な言葉であり、開発者も理解する必要があります。この2つのグループの人々の間で正しいコミュニケーションを確立することは、ドメインに適合し、すべてのビジネスニーズを満たすプロジェクトを成功させるために不可欠です。</target>
        </trans-unit>
        <trans-unit id="a80008ff6c733f11e6469c9a08bd0f5c97d4a222" translate="yes" xml:space="preserve">
          <source>The window can only be identified by name. If the $name parameter is blank, the parent window will be used.</source>
          <target state="translated">ウィンドウは名前でしか識別できません。name パラメータが空白の場合は、親ウィンドウが使用されます。</target>
        </trans-unit>
        <trans-unit id="00da132e72d6727ab03613c23a7d08a83466f5d1" translate="yes" xml:space="preserve">
          <source>Then add &lt;code&gt;\Codeception\Lib\Actor\Shared\Retry&lt;/code&gt; trait into &lt;code&gt;AcceptanceTester&lt;/code&gt; class:</source>
          <target state="translated">次に、 &lt;code&gt;\Codeception\Lib\Actor\Shared\Retry&lt;/code&gt; トレイトを &lt;code&gt;AcceptanceTester&lt;/code&gt; クラスに追加します。</target>
        </trans-unit>
        <trans-unit id="e0d4cfcb24360d49e4a1b2661f1c846147ee2ec3" translate="yes" xml:space="preserve">
          <source>Then define a class which implements the LoaderInterface</source>
          <target state="translated">次に、LoaderInterface を実装したクラスを定義します。</target>
        </trans-unit>
        <trans-unit id="2ffe3dff2f375fc5cead814eb2285a8ccb6b0cbc" translate="yes" xml:space="preserve">
          <source>Then rebuild actors with &lt;code&gt;codecept build&lt;/code&gt; command.</source>
          <target state="translated">次に、 &lt;code&gt;codecept build&lt;/code&gt; コマンドでアクターを再ビルドします。</target>
        </trans-unit>
        <trans-unit id="cb722a71e4b98d8f3100e93b9756f42bfa540358" translate="yes" xml:space="preserve">
          <source>Then we can start the very first job and check the execution progress. If tests fail we will see that in console:</source>
          <target state="translated">そうすれば、最初のジョブを開始して実行の進捗状況を確認することができます。テストが失敗した場合はコンソールに表示されます。</target>
        </trans-unit>
        <trans-unit id="e62a6b451e37cc0c74463af04183ff70c66a1ed9" translate="yes" xml:space="preserve">
          <source>Then you will need to implement all step definitions. Run &lt;code&gt;gherkin:snippets&lt;/code&gt; to generate stubs for them. By default it is recommended to place step definitions into actor class (Tester) and use its methods for steps implementation.</source>
          <target state="translated">次に、すべてのステップ定義を実装する必要があります。 &lt;code&gt;gherkin:snippets&lt;/code&gt; を実行して、それらのスタブを生成します。デフォルトでは、ステップ定義をアクタークラス（テスター）に配置し、そのメソッドをステップの実装に使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="02b1cd6d904308987f14d8e62416ab69347dd621" translate="yes" xml:space="preserve">
          <source>There are also modules for &lt;a href=&quot;modules/mongodb&quot;&gt;MongoDb&lt;/a&gt;, &lt;a href=&quot;modules/redis&quot;&gt;Redis&lt;/a&gt;, and &lt;a href=&quot;modules/memcache&quot;&gt;Memcache&lt;/a&gt; which behave in a similar manner.</source>
          <target state="translated">同様の動作をする&lt;a href=&quot;modules/mongodb&quot;&gt;MongoDb&lt;/a&gt;、&lt;a href=&quot;modules/redis&quot;&gt;Redis&lt;/a&gt;、および&lt;a href=&quot;modules/memcache&quot;&gt;Memcacheの&lt;/a&gt;モジュールもあります。</target>
        </trans-unit>
        <trans-unit id="e8ceecb197db31d09a1a69441f836b7b66b98014" translate="yes" xml:space="preserve">
          <source>There are lots of ways to create reusable and readable tests. Group common actions together and move them to an Actor class or StepObjects. Move CSS and XPath locators into PageObjects. Write your custom actions and assertions in Helpers. Scenario-driven tests should not contain anything more complex than &lt;code&gt;$I-&amp;gt;doSomething&lt;/code&gt; commands. Following this approach will allow you to keep your tests clean, readable, stable and make them easy to maintain.</source>
          <target state="translated">再利用可能で読み取り可能なテストを作成する方法はたくさんあります。共通のアクションをグループ化し、それらをActorクラスまたはStepObjectsに移動します。CSSおよびXPathロケーターをPageObjectsに移動します。カスタムアクションとアサーションをヘルパーに記述します。シナリオ駆動型テストには、 &lt;code&gt;$I-&amp;gt;doSomething&lt;/code&gt; コマンドよりも複雑なものを含めないでください。このアプローチに従うことで、テストをクリーンで読みやすく安定した状態に保ち、保守を容易にすることができます。</target>
        </trans-unit>
        <trans-unit id="948afae0228a52f6e532a20e39fb5ec72d31a3da" translate="yes" xml:space="preserve">
          <source>There are many Continuous Integration Servers out there. We will try to list basic steps to setup Codeception tests with them. If your CI system is not mentioned, you can get the idea by analogy. Please also help us to extend this guide by adding instructions for different CIs.</source>
          <target state="translated">継続的インテグレーションサーバはたくさんあります。それらを使ってCodeceptionテストをセットアップするための基本的な手順を列挙してみます。もしあなたのCIシステムが言及されていない場合は、類推することでアイデアを得ることができます。また、異なる CI の説明を追加することで、このガイドを拡張するのにもご協力ください。</target>
        </trans-unit>
        <trans-unit id="369472f273f527dca68dd0c625dc610a948c7536" translate="yes" xml:space="preserve">
          <source>There are plenty of useful Codeception commands:</source>
          <target state="translated">便利なコードセプションコマンドがたくさんあります。</target>
        </trans-unit>
        <trans-unit id="07c4fcc1941869fa1d336706faca8c05b4e60d6c" translate="yes" xml:space="preserve">
          <source>There are plenty of ways to test your application. The most popular paradigm is &lt;a href=&quot;https://en.wikipedia.org/wiki/Unit_testing&quot;&gt;Unit Testing&lt;/a&gt;. For web applications, testing just the controller and/or the model doesn&amp;rsquo;t prove that your application is working. To test the behavior of your application as a whole, you should write functional or acceptance tests.</source>
          <target state="translated">アプリケーションをテストする方法はたくさんあります。最も一般的なパラダイムは&lt;a href=&quot;https://en.wikipedia.org/wiki/Unit_testing&quot;&gt;ユニットテスト&lt;/a&gt;です。Webアプリケーションの場合、コントローラーやモデルのみをテストしても、アプリケーションが機能していることは証明されません。アプリケーション全体の動作をテストするには、機能テストまたは受け入れテストを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="472475cb2784568d51ba67ed63be1d7f41e92407" translate="yes" xml:space="preserve">
          <source>There are pretty many assertions you can use inside tests. The most common are:</source>
          <target state="translated">テストの内部で使用できるアサーションはかなり多くあります。最も一般的なものは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="00f2d74b591d01448a0dd51fdbcee6a29ff8f06c" translate="yes" xml:space="preserve">
          <source>There are several ways to execute a bunch of tests. You can run tests from a specific directory:</source>
          <target state="translated">テストの束を実行する方法はいくつかあります。特定のディレクトリからテストを実行することができます。</target>
        </trans-unit>
        <trans-unit id="5d943ab0fd5690899e5d940d2d46a201be6307ac" translate="yes" xml:space="preserve">
          <source>There are two approaches to achieve parallelization. We can use &lt;a href=&quot;https://docker.com&quot;&gt;Docker&lt;/a&gt; and run each process inside isolated containers, and have those containers executed simultaneously.</source>
          <target state="translated">並列化を実現するには、2つの方法があります。&lt;a href=&quot;https://docker.com&quot;&gt;Docker&lt;/a&gt;を使用して各プロセスを分離されたコンテナー内で実行し、それらのコンテナーを同時に実行することができます。</target>
        </trans-unit>
        <trans-unit id="32a279542017eb7e85407192396510526b48e76d" translate="yes" xml:space="preserve">
          <source>There are two ways of loading the dump into your database:</source>
          <target state="translated">ダンプをデータベースに読み込む方法は2つあります。</target>
        </trans-unit>
        <trans-unit id="13476efc2e8fda368c4d0571d6b63e0dd8766eeb" translate="yes" xml:space="preserve">
          <source>There is a shortcut if you don&amp;rsquo;t need that complex filters:</source>
          <target state="translated">複雑なフィルターが必要ない場合は、ショートカットがあります。</target>
        </trans-unit>
        <trans-unit id="1997a50dea00caded9841a9dd879fcaa74d60af1" translate="yes" xml:space="preserve">
          <source>There is a special class &lt;a href=&quot;reference/locator&quot;&gt;&lt;code&gt;Codeception\Util\Locator&lt;/code&gt;&lt;/a&gt; which may help you to generate complex XPath locators. For instance, it can easily allow you to click an element on the last row of a table:</source>
          <target state="translated">複雑なXPathロケーターの生成に役立つ特別なクラス&lt;a href=&quot;reference/locator&quot;&gt; &lt;code&gt;Codeception\Util\Locator&lt;/code&gt; &lt;/a&gt;があります。たとえば、テーブルの最後の行の要素をクリックするのは簡単です。</target>
        </trans-unit>
        <trans-unit id="7fc661f9a3fd7478638b5d55b21698e460482654" translate="yes" xml:space="preserve">
          <source>There is a way to get it tested as well. Codeception allows you take a snapshot of a data on first run and compare with on next executions. This principle is so general that it can work for testing APIs, items on a web page, etc.</source>
          <target state="translated">テストする方法もあります。Codeceptionでは、最初の実行時にデータのスナップショットを取り、次の実行時に比較することができます。この原理は非常に一般的なもので、APIやWebページ上の項目などをテストするために機能します。</target>
        </trans-unit>
        <trans-unit id="a90cd0048e529fab2b4a176229c2367958ccbc11" translate="yes" xml:space="preserve">
          <source>There is the &lt;code&gt;WebDriver&lt;/code&gt; module for acceptance testing, modules for all popular PHP frameworks, &lt;code&gt;PHPBrowser&lt;/code&gt; to emulate browser execution, &lt;code&gt;REST&lt;/code&gt; for testing APIs, and more. Modules are considered to be the most valuable part of Codeception. They are constantly improving to provide the best testing experience, and be flexible to satisfy everyone&amp;rsquo;s needs.</source>
          <target state="translated">受け入れテスト用の &lt;code&gt;WebDriver&lt;/code&gt; モジュール、すべての一般的なPHPフレームワーク用のモジュール、ブラウザー実行をエミュレートする &lt;code&gt;PHPBrowser&lt;/code&gt; 、APIをテストするための &lt;code&gt;REST&lt;/code&gt; などがあります。モジュールはCodeceptionの最も価値のある部分であると考えられています。彼らは常に最高のテスト体験を提供するために改善しており、すべての人のニーズを満たすために柔軟性があります。</target>
        </trans-unit>
        <trans-unit id="e6462daf1fc696a68d8590c28de11488adca6f27" translate="yes" xml:space="preserve">
          <source>There may be some confusion between &lt;code&gt;test.start&lt;/code&gt;/&lt;code&gt;test.before&lt;/code&gt; and &lt;code&gt;test.after&lt;/code&gt;/&lt;code&gt;test.end&lt;/code&gt;. The start and end events are triggered by PHPUnit, but the before and after events are triggered by Codeception. Thus, when you are using classical PHPUnit tests (extended from &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt;), the before/after events won&amp;rsquo;t be triggered for them. During the &lt;code&gt;test.before&lt;/code&gt; event you can mark a test as skipped or incomplete, which is not possible in &lt;code&gt;test.start&lt;/code&gt;. You can learn more from &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Subscriber&quot;&gt;Codeception internal event listeners&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;test.start&lt;/code&gt; / &lt;code&gt;test.before&lt;/code&gt; と &lt;code&gt;test.after&lt;/code&gt; / &lt;code&gt;test.end&lt;/code&gt; の間には混乱があるかもしれません。startおよびendイベントはPHPUnitによってトリガーされますが、beforeおよびafterイベントはCodeceptionによってトリガーされます。したがって、古典的なPHPUnitテスト（ &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; から拡張）を使用している場合、それらの前/後イベントはトリガーされません。 &lt;code&gt;test.before&lt;/code&gt; イベントでは、テストをスキップまたは不完全としてマークできますが、test.startでは &lt;code&gt;test.start&lt;/code&gt; です。&lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Subscriber&quot;&gt;Codeceptionの内部イベントリスナー&lt;/a&gt;から詳細を学ぶことができます。</target>
        </trans-unit>
        <trans-unit id="a81e853d7a9b168acecc48455a1ff63296d05eee" translate="yes" xml:space="preserve">
          <source>There may be some confusion between &lt;code&gt;test.start&lt;/code&gt;/&lt;code&gt;test.before&lt;/code&gt; and &lt;code&gt;test.after&lt;/code&gt;/&lt;code&gt;test.end&lt;/code&gt;. The start and end events are triggered by PHPUnit, but the before and after events are triggered by Codeception. Thus, when you are using classical PHPUnit tests (extended from &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt;), the before/after events won&amp;rsquo;t be triggered for them. During the &lt;code&gt;test.before&lt;/code&gt; event you can mark a test as skipped or incomplete, which is not possible in &lt;code&gt;test.start&lt;/code&gt;. You can learn more from &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/4.0/src/Codeception/Subscriber&quot;&gt;Codeception internal event listeners&lt;/a&gt;.</source>
          <target state="translated">間にいくつかの混乱があるかもしれません &lt;code&gt;test.start&lt;/code&gt; / &lt;code&gt;test.before&lt;/code&gt; と &lt;code&gt;test.after&lt;/code&gt; / &lt;code&gt;test.end&lt;/code&gt; 。開始イベントと終了イベントはPHPUnitによってトリガーされますが、前後のイベントはCodeceptionによってトリガーされます。したがって、従来のPHPUnitテスト（ &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; から拡張）を使用している場合、before / afterイベントはそれらに対してトリガーされません。 &lt;code&gt;test.before&lt;/code&gt; イベント中に、テストをスキップまたは不完全としてマークできます。これは、 &lt;code&gt;test.start&lt;/code&gt; では不可能です。&lt;a href=&quot;https://github.com/Codeception/Codeception/tree/4.0/src/Codeception/Subscriber&quot;&gt;Codeceptionの内部イベントリスナー&lt;/a&gt;から詳細を学ぶことができます。</target>
        </trans-unit>
        <trans-unit id="73071f5f12a33665b9c6270260df1ef6a856767c" translate="yes" xml:space="preserve">
          <source>Therefore we can open a web page with &lt;code&gt;amOnPage&lt;/code&gt; method:</source>
          <target state="translated">したがって、 &lt;code&gt;amOnPage&lt;/code&gt; メソッドを使用してWebページを開くことができます。</target>
        </trans-unit>
        <trans-unit id="82163692f5484c9372d19b4f27a04f2f2fb77978" translate="yes" xml:space="preserve">
          <source>These commands retrieve data that can be used in the test. Imagine your site generates a password for every user and you want to check that the user can log into the site using this password:</source>
          <target state="translated">これらのコマンドは、テストで使用できるデータを取得します。あなたのサイトがユーザーごとにパスワードを生成し、そのユーザーがこのパスワードを使ってサイトにログインできるかどうかをチェックしたいと想像してみてください。</target>
        </trans-unit>
        <trans-unit id="24d15de04291dd413c8a05973420337df01f1494" translate="yes" xml:space="preserve">
          <source>These generated scenarios will be stored in your &lt;code&gt;_data&lt;/code&gt; directory in text files.</source>
          <target state="translated">これらの生成されたシナリオは、 &lt;code&gt;_data&lt;/code&gt; ディレクトリのテキストファイルに保存されます。</target>
        </trans-unit>
        <trans-unit id="0774cc902ef4ce66db8cbad58f8febff0e7aa11f" translate="yes" xml:space="preserve">
          <source>They allow you to create and check data by model name and field names in the model. Here is the example in Laravel:</source>
          <target state="translated">これらを利用することで、モデル名やモデル内のフィールド名でデータを作成したり、チェックしたりすることができるようになります。Laravelでの例です。</target>
        </trans-unit>
        <trans-unit id="76f390a589bab7443a684c400b3d7b3082db3649" translate="yes" xml:space="preserve">
          <source>They can be executed with &lt;code&gt;init&lt;/code&gt; command:</source>
          <target state="translated">これらは &lt;code&gt;init&lt;/code&gt; コマンドで実行できます：</target>
        </trans-unit>
        <trans-unit id="a5ed0dcebd9d71bf8f45fedb2d8c9f3c1606d399" translate="yes" xml:space="preserve">
          <source>This behavior can be configured using &lt;code&gt;prefix&lt;/code&gt; config param.</source>
          <target state="translated">この動作は、 &lt;code&gt;prefix&lt;/code&gt; config param を使用して構成できます。</target>
        </trans-unit>
        <trans-unit id="2562ae3470339d22f1ca1a94fa02ccedffa99152" translate="yes" xml:space="preserve">
          <source>This call will be translated to XML:</source>
          <target state="translated">この呼び出しはXMLに変換されます。</target>
        </trans-unit>
        <trans-unit id="d2566254f8fd4bf8388607d53a1ab72971f40c28" translate="yes" xml:space="preserve">
          <source>This can useful in acceptance tests where entity can become invalid due to external (relative to entity manager used in tests) changes.</source>
          <target state="translated">これは、外部の(テストで使用されるエンティティマネージャとの相対的な)変更によってエンティティが無効になる可能性がある受入れテストで有用です。</target>
        </trans-unit>
        <trans-unit id="7ea6bb095fc07017185e68ddca02d954305057e2" translate="yes" xml:space="preserve">
          <source>This chapter summarizes all of the notices on clean-ups from the previous chapters and suggests the best strategies of how to choose data storage backends.</source>
          <target state="translated">この章では、これまでの章でのクリーンアップに関する注意事項をすべてまとめ、データストレージのバックエンドの選び方の最適な戦略を提案しています。</target>
        </trans-unit>
        <trans-unit id="4a55f9839526115f62df8726508be2b0e15bdbb2" translate="yes" xml:space="preserve">
          <source>This class provides various helper methods for building customized setup</source>
          <target state="translated">このクラスは、カスタマイズされたセットアップを構築するための様々なヘルパーメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="e3c12b99176548123a6b63641df01c5ebfbd9a75" translate="yes" xml:space="preserve">
          <source>This command will run all tests for all suites, displaying the steps, and building HTML and XML reports. Reports will be stored in the &lt;code&gt;tests/_output/&lt;/code&gt; directory.</source>
          <target state="translated">このコマンドは、すべてのスイートのすべてのテストを実行し、ステップを表示し、HTMLおよびXMLレポートを作成します。レポートは、 &lt;code&gt;tests/_output/&lt;/code&gt; ディレクトリに保存されます。</target>
        </trans-unit>
        <trans-unit id="d7be05543f79125a5ea1bea9cbae2d3481a6ca78" translate="yes" xml:space="preserve">
          <source>This configuration will allow you to send GET/POST requests to the server&amp;rsquo;s APIs while working with a site through a browser.</source>
          <target state="translated">この構成により、ブラウザーを介してサイトを操作しながら、GET / POST要求をサーバーのAPIに送信できます。</target>
        </trans-unit>
        <trans-unit id="b557f4ff2559596f55be870cd6d8eef4eec0bfb2" translate="yes" xml:space="preserve">
          <source>This creates a stub class for Entity\User repository with redefined method findByUsername, which will always return the NULL value.</source>
          <target state="translated">これは、常にNULL値を返すメソッドfindByUsernameを再定義したEntityのEntityUserリポジトリ用のスタブクラスを作成します。</target>
        </trans-unit>
        <trans-unit id="6c9f8e48c0ed4e80468843d1c38ca38666ca2099" translate="yes" xml:space="preserve">
          <source>This does not save it in the database. Use &lt;code&gt;have&lt;/code&gt; for that.</source>
          <target state="translated">これはデータベースに保存しません。そのために &lt;code&gt;have&lt;/code&gt; ています。</target>
        </trans-unit>
        <trans-unit id="057701e3a2b6f21a4fb0038366ab1905d1a037ef" translate="yes" xml:space="preserve">
          <source>This example uses jQuery to get a value and assigns that value to a PHP variable:</source>
          <target state="translated">この例では、jQuery を使用して値を取得し、その値を PHP 変数に代入しています。</target>
        </trans-unit>
        <trans-unit id="246a635a48cb95a3bce81663f1b8d53beecb3e68" translate="yes" xml:space="preserve">
          <source>This file is called &lt;code&gt;c3.php&lt;/code&gt; and is &lt;a href=&quot;https://github.com/Codeception/c3&quot;&gt;available on GitHub&lt;/a&gt;. &lt;code&gt;c3.php&lt;/code&gt; should be downloaded and included in your application at the very first line from controller. By sending special headers Codeception will command your application when to start codecoverage collection and when to stop it. After the suite is finished, a report will be stored and Codeception will grab it from your application.</source>
          <target state="translated">このファイルは &lt;code&gt;c3.php&lt;/code&gt; と呼ば&lt;a href=&quot;https://github.com/Codeception/c3&quot;&gt;れ、GitHub&lt;/a&gt;で入手できます。 &lt;code&gt;c3.php&lt;/code&gt; をダウンロードして、コントローラーの最初の行でアプリケーションに含める必要があります。特別なヘッダーを送信することにより、Codeceptionは、コードカバレッジコレクションをいつ開始し、いつ停止するかをアプリケーションに命令します。スイートが終了すると、レポートが保存され、Codeceptionがアプリケーションからレポートを取得します。</target>
        </trans-unit>
        <trans-unit id="49b09c9e5fb91c62f7cdbdf4bf6f078ade3f6a16" translate="yes" xml:space="preserve">
          <source>This format can be recommended for testing domain and database interactions.</source>
          <target state="translated">このフォーマットは、ドメインとデータベースの相互作用をテストするために推奨することができます。</target>
        </trans-unit>
        <trans-unit id="8eb295109235313c3f5625f0698eeb17125e4b1b" translate="yes" xml:space="preserve">
          <source>This function creates the CSRF Cookie.</source>
          <target state="translated">この関数は、CSRFクッキーを作成します。</target>
        </trans-unit>
        <trans-unit id="32183d667b14ff14be987c32b566271f824b1813" translate="yes" xml:space="preserve">
          <source>This function works well when paired with &lt;code&gt;seeInFormFields()&lt;/code&gt; for quickly testing CRUD interfaces and form validation logic.</source>
          <target state="translated">この関数は、 &lt;code&gt;seeInFormFields()&lt;/code&gt; と組み合わせて使用すると、CRUDインターフェイスとフォーム検証ロジックをすばやくテストできます。</target>
        </trans-unit>
        <trans-unit id="495b938c5a8cc32705c7e23b6057bbf8c080d24a" translate="yes" xml:space="preserve">
          <source>This is an alias of method &lt;code&gt;exchange_declare&lt;/code&gt; of &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt; のメソッド &lt;code&gt;exchange_declare&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="5b293208874e3c0d80fe2723114fe5f18380cb1c" translate="yes" xml:space="preserve">
          <source>This is an alias of method &lt;code&gt;queue_bind&lt;/code&gt; of &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt; のメソッド &lt;code&gt;queue_bind&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="f5171e975dee5ef1fb48a96c99cb2f80f1b91c4d" translate="yes" xml:space="preserve">
          <source>This is an alias of method &lt;code&gt;queue_declare&lt;/code&gt; of &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt;.</source>
          <target state="translated">これは、メソッドの別名である &lt;code&gt;queue_declare&lt;/code&gt; の &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd5bbeffbed7dd1c52439fd1376c3c9e0d5ffc3e" translate="yes" xml:space="preserve">
          <source>This is how filters can be used:</source>
          <target state="translated">フィルターはこんな感じで使えます。</target>
        </trans-unit>
        <trans-unit id="b0402caf503b4cbd24124dcde64edefafd3cece0" translate="yes" xml:space="preserve">
          <source>This is how it can be implemented:</source>
          <target state="translated">このように実装することができます。</target>
        </trans-unit>
        <trans-unit id="b4fc848e78da33625b5580ea2409fe5cafeb572e" translate="yes" xml:space="preserve">
          <source>This is how we described the initial conditions. Next, we perform some action. We use &lt;strong&gt;When&lt;/strong&gt; keyword for it:</source>
          <target state="translated">このようにして初期条件を説明しました。次に、いくつかのアクションを実行します。&lt;strong&gt;When&lt;/strong&gt;キーワードを使用します：</target>
        </trans-unit>
        <trans-unit id="f6ffaad365e864d942ee46a2d35b59e306253915" translate="yes" xml:space="preserve">
          <source>This is the fastest way to run acceptance tests since it doesn&amp;rsquo;t require running an actual browser. We use a PHP web scraper, which acts like a browser: It sends a request, then receives and parses the response. Codeception uses &lt;a href=&quot;http://guzzlephp.org&quot;&gt;Guzzle&lt;/a&gt; and &lt;a href=&quot;https://symfony.com/doc/current/components/browser_kit.html&quot;&gt;Symfony BrowserKit&lt;/a&gt; to interact with HTML web pages.</source>
          <target state="translated">これは、実際のブラウザを実行する必要がないため、受け入れテストを実行する最も速い方法です。ブラウザーのように機能するPHP Webスクレーパーを使用します。これは、要求を送信してから、応答を受信して​​解析します。Codeceptionは、&lt;a href=&quot;http://guzzlephp.org&quot;&gt;Guzzle&lt;/a&gt;と&lt;a href=&quot;https://symfony.com/doc/current/components/browser_kit.html&quot;&gt;Symfony BrowserKit&lt;/a&gt;を使用してHTML Webページと対話します。</target>
        </trans-unit>
        <trans-unit id="fce4fecb6b48de5521d1ddf535a0faa006bd9a79" translate="yes" xml:space="preserve">
          <source>This is the output we should see:</source>
          <target state="translated">これが見るべき出力です。</target>
        </trans-unit>
        <trans-unit id="1b361a3161b245d853aa983e3dac2f8ec83371f7" translate="yes" xml:space="preserve">
          <source>This is what acceptance tests are doing. They cover scenarios from a user&amp;rsquo;s perspective. With acceptance tests, you can be confident that users, following all the defined scenarios, won&amp;rsquo;t get errors.</source>
          <target state="translated">これは、受け入れテストが行​​っていることです。ユーザーの視点からシナリオをカバーします。受け入れテストを使用すると、定義されたすべてのシナリオに従って、ユーザーがエラーを取得しないことを確信できます。</target>
        </trans-unit>
        <trans-unit id="6338a72041b6fb03c87f65b6a424b858a7f82791" translate="yes" xml:space="preserve">
          <source>This looks very similar to acceptance tests. The behavior is the same, however, the test is executed inside PHP without launching a browser.</source>
          <target state="translated">これは受け入れテストと非常に似ています。挙動は同じですが、テストはブラウザを起動せずにPHP内部で実行されます。</target>
        </trans-unit>
        <trans-unit id="cb96d9daf026e724efeda6ce933ce2c148abd7c2" translate="yes" xml:space="preserve">
          <source>This method &lt;strong&gt;require &lt;a href=&quot;https://github.com/FlowCommunications/JSONPath/&quot;&gt;&lt;code&gt;flow/jsonpath&lt;/code&gt; &amp;gt; 0.2&lt;/a&gt; library to be installed&lt;/strong&gt;.</source>
          <target state="translated">この方法で&lt;strong&gt;は、&lt;a href=&quot;https://github.com/FlowCommunications/JSONPath/&quot;&gt; &lt;code&gt;flow/jsonpath&lt;/code&gt; &amp;gt; 0.2&lt;/a&gt;ライブラリをインストールする必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c9c021824f22f3fe95a360e22673323a84367805" translate="yes" xml:space="preserve">
          <source>This method also accepts instances as first argument, which is useful when the entity constructor has some arguments:</source>
          <target state="translated">このメソッドはインスタンスを第一引数として受け入れることもでき、エンティティのコンストラクタに引数がある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="110308f691941d293ac018261ead62136a901e05" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;seeFormErrorMessage&lt;/code&gt; for each entry in the &lt;code&gt;$bindings&lt;/code&gt; array.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;$bindings&lt;/code&gt; 配列の各エントリに対して &lt;code&gt;seeFormErrorMessage&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="fd0cd624f54cc162ce556f85f072cf92e289fcc3" translate="yes" xml:space="preserve">
          <source>This method is deprecated in favor of &lt;code&gt;haveInRepository()&lt;/code&gt;. Its functionality is exactly the same.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;haveInRepository()&lt;/code&gt; を優先して非推奨になりました。その機能はまったく同じです。</target>
        </trans-unit>
        <trans-unit id="52aa391eadb529c93fe132d71226f5ce6f76ae42" translate="yes" xml:space="preserve">
          <source>This method recursively checks if one array can be found inside of another.</source>
          <target state="translated">このメソッドは、ある配列が別の配列の内部にあるかどうかを再帰的にチェックします。</target>
        </trans-unit>
        <trans-unit id="0804e6c5f11d806de1e7b655a976b7c5aabdc9d7" translate="yes" xml:space="preserve">
          <source>This method requires &lt;a href=&quot;https://github.com/doctrine/data-fixtures&quot;&gt;&lt;code&gt;doctrine/data-fixtures&lt;/code&gt;&lt;/a&gt; to be installed.</source>
          <target state="translated">この方法では、&lt;a href=&quot;https://github.com/doctrine/data-fixtures&quot;&gt; &lt;code&gt;doctrine/data-fixtures&lt;/code&gt; &lt;/a&gt;をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="eb96e8417663e16e7597977373004701d4d6743f" translate="yes" xml:space="preserve">
          <source>This module allows to use &lt;a href=&quot;http://www.yiiframework.com/doc-2.0/guide-test-fixtures.html&quot;&gt;fixtures&lt;/a&gt; inside a test. There are two options for that. Fixtures can be loaded using &lt;a href=&quot;#haveFixtures&quot;&gt;haveFixtures&lt;/a&gt; method inside a test:</source>
          <target state="translated">このモジュールでは、テスト内で&lt;a href=&quot;http://www.yiiframework.com/doc-2.0/guide-test-fixtures.html&quot;&gt;フィクスチャ&lt;/a&gt;を使用できます。これには2つのオプションがあります。フィクスチャは、テスト内で&lt;a href=&quot;#haveFixtures&quot;&gt;haveFixtures&lt;/a&gt;メソッドを使用してロードできます。</target>
        </trans-unit>
        <trans-unit id="53c3f52556a578fce3612207a85f72d8e0282346" translate="yes" xml:space="preserve">
          <source>This module allows to use &lt;a href=&quot;http://www.yiiframework.com/doc-2.0/guide-test-fixtures.html&quot;&gt;fixtures&lt;/a&gt; inside a test. There are two ways to do that. Fixtures can either be loaded with the &lt;a href=&quot;#haveFixtures&quot;&gt;haveFixtures&lt;/a&gt; method inside a test:</source>
          <target state="translated">このモジュールを使用すると、テスト内で&lt;a href=&quot;http://www.yiiframework.com/doc-2.0/guide-test-fixtures.html&quot;&gt;フィクスチャ&lt;/a&gt;を使用できます。これを行うには2つの方法があります。フィクスチャは、テスト内で&lt;a href=&quot;#haveFixtures&quot;&gt;haveFixtures&lt;/a&gt;メソッドを使用してロードできます。</target>
        </trans-unit>
        <trans-unit id="c90f7fa194225ba17f4522998ad16560b99a5a8a" translate="yes" xml:space="preserve">
          <source>This module allows you to run functional tests for Laravel 5.1+ It should &lt;strong&gt;not&lt;/strong&gt; be used for acceptance tests. See the Acceptance tests section below for more details.</source>
          <target state="translated">このモジュールを使用すると、Laravel 5.1以降の機能テストを実行できます。受け入れテストには使用し&lt;strong&gt;ない&lt;/strong&gt;でください。詳細については、以下の「受け入れテスト」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="957bf78db9e6d069f3d57213a8e904ae66c852ad" translate="yes" xml:space="preserve">
          <source>This module allows you to run functional tests for Lumen. Please try it and leave your feedback.</source>
          <target state="translated">このモジュールでは、Lumenの機能テストを実行することができます。ぜひ試してみて、フィードバックを残してください。</target>
        </trans-unit>
        <trans-unit id="0de4c2ad6020d6ceaf623325ad385b206ae1735b" translate="yes" xml:space="preserve">
          <source>This module allows you to run tests inside Mezzio.</source>
          <target state="translated">このモジュールでは、Mezzio の内部でテストを実行することができます。</target>
        </trans-unit>
        <trans-unit id="4c24d68c5f6de783c2653cf03e3d662f1a49c791" translate="yes" xml:space="preserve">
          <source>This module allows you to run tests inside Zend Expressive.</source>
          <target state="translated">このモジュールは、Zend Expressive の内部でテストを実行するためのものです。</target>
        </trans-unit>
        <trans-unit id="ddd2daf4dd2e29845e9feaa3b174017a09a5024d" translate="yes" xml:space="preserve">
          <source>This module allows you to run tests inside Zend Framework 2 and Zend Framework 3.</source>
          <target state="translated">このモジュールは、Zend Framework 2 および Zend Framework 3 の内部でテストを実行するためのものです。</target>
        </trans-unit>
        <trans-unit id="7da51d1f6a27f80f156d500307e8b8ff6cbe158f" translate="yes" xml:space="preserve">
          <source>This module can be used either with frameworks or PHPBrowser. If a framework module is connected, the testing will occur in the application directly. Otherwise, a PHPBrowser should be specified as a dependency to send requests and receive responses from a server.</source>
          <target state="translated">このモジュールは、フレームワークでも PHPBrowser でも使用できます。フレームワークモジュールが接続されている場合、テストはアプリケーション内で直接行われます。そうでない場合は、PHPBrowser を依存関係として指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="d1e59e02d28118f25a4c5733ff476cab505e6359" translate="yes" xml:space="preserve">
          <source>This module can be used either with frameworks or PHPBrowser. It tries to guess the framework is is attached to. If a endpoint is a full url then it uses PHPBrowser.</source>
          <target state="translated">このモジュールは、フレームワークや PHPBrowser と一緒に使うことができます。これは、フレームワークがどのフレームワークにアタッチされているかを推測しようとします。エンドポイントがフルURLの場合は、PHPBrowserを使用します。</target>
        </trans-unit>
        <trans-unit id="01b6861b61d4dd266067c530cd2b44386e139e81" translate="yes" xml:space="preserve">
          <source>This module extends the Filesystem module, file contents methods are inherited from this module.</source>
          <target state="translated">このモジュールは Filesystem モジュールを拡張したもので、ファイルコンテンツのメソッドはこのモジュールから継承されます。</target>
        </trans-unit>
        <trans-unit id="139d3bc6bb3e566d29065536eeff8494e74880c8" translate="yes" xml:space="preserve">
          <source>This module has no actions, but introduces a function &lt;code&gt;sq&lt;/code&gt; for generating unique sequences within test and &lt;code&gt;sqs&lt;/code&gt; for generating unique sequences across suite.</source>
          <target state="translated">このモジュールにはアクションはありませんが、テスト内で一意のシーケンスを生成する関数 &lt;code&gt;sq&lt;/code&gt; と、スイート全体で一意のシーケンスを生成する &lt;code&gt;sqs&lt;/code&gt; が導入されています。</target>
        </trans-unit>
        <trans-unit id="5822de9385b70f7ad64a65b2766bb78c103debcd" translate="yes" xml:space="preserve">
          <source>This module interacts with message broker software that implements the Advanced Message Queuing Protocol (AMQP) standard. For example, RabbitMQ (tested).</source>
          <target state="translated">このモジュールは、Advanced Message Queuing Protocol (AMQP)標準を実装したメッセージブローカソフトウェアと相互作用します。例えば、RabbitMQ (テスト済み)。</target>
        </trans-unit>
        <trans-unit id="734c8cbb8bb4370d60a6a5a3ec560bfb1201e2a2" translate="yes" xml:space="preserve">
          <source>This module interacts with the &lt;a href=&quot;https://php.net/manual/en/intro.apcu.php&quot;&gt;Alternative PHP Cache (APC)&lt;/a&gt; using either &lt;em&gt;APCu&lt;/em&gt; or &lt;em&gt;APC&lt;/em&gt; extension.</source>
          <target state="translated">このモジュールは、&lt;em&gt;APCu&lt;/em&gt;または&lt;em&gt;APC&lt;/em&gt;拡張機能を使用して、&lt;a href=&quot;https://php.net/manual/en/intro.apcu.php&quot;&gt;Alternative PHP Cache（APC）&lt;/a&gt;と対話します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6228f0f67bd8dafeee4a86b471394c11cac0c584" translate="yes" xml:space="preserve">
          <source>This module provide to use native URL formats of Yii2 for all codeception commands that use url for work. This commands allows input like:</source>
          <target state="translated">このモジュールは、URL を使用するすべてのコマンドに Yii2 のネイティブ URL フォーマットを使用できるようにします。このコマンドでは、以下のような入力が可能です。</target>
        </trans-unit>
        <trans-unit id="d75af1e665552a77886079ea4bf52247d856b81b" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.phalcon.io/&quot;&gt;Phalcon framework&lt;/a&gt; (3.x). Please try it and leave your feedback.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;http://www.phalcon.io/&quot;&gt;Phalconフレームワーク&lt;/a&gt;（3.x）との統合を提供します。それを試して、フィードバックを残してください。</target>
        </trans-unit>
        <trans-unit id="12598a3da0f400c00c96331e34db7aff3b46951e" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.phalcon.io/&quot;&gt;Phalcon framework&lt;/a&gt; (4.x). Please try it and leave your feedback.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;http://www.phalcon.io/&quot;&gt;Phalconフレームワーク&lt;/a&gt;（4.x）との統合を提供します。それを試して、フィードバックを残してください。</target>
        </trans-unit>
        <trans-unit id="9ab00b93aea5f6c6748c007540ef8f721d33c018" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.phalconphp.com/&quot;&gt;Phalcon framework&lt;/a&gt; (3.x). Please try it and leave your feedback.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;http://www.phalconphp.com/&quot;&gt;Phalconフレームワーク&lt;/a&gt;（3.x）との統合を提供します。それを試して、あなたのフィードバックを残してください。</target>
        </trans-unit>
        <trans-unit id="58b732fcc105c570464bcfafcb1179af6edb9236" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.yiiframework.com/&quot;&gt;Yii framework&lt;/a&gt; (2.0).</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;http://www.yiiframework.com/&quot;&gt;Yiiフレームワーク&lt;/a&gt;（2.0）との統合を提供します。</target>
        </trans-unit>
        <trans-unit id="22b0d8f16c9800fa9bd1320b58e4a9ae38c70546" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.yiiframework.com/&quot;&gt;Yii framework&lt;/a&gt; (2.0). It initializes Yii framework in test environment and provides actions for functional testing.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;http://www.yiiframework.com/&quot;&gt;Yiiフレームワーク&lt;/a&gt;（2.0）との統合を提供します。テスト環境でYiiフレームワークを初期化し、機能テストのアクションを提供します。</target>
        </trans-unit>
        <trans-unit id="51ff6a6542176305f51b72dc5f666da50eaf774e" translate="yes" xml:space="preserve">
          <source>This module requires PHPBrowser or any of Framework modules enabled.</source>
          <target state="translated">このモジュールを使用するには、PHPBrowser あるいはいずれかの Framework モジュールが有効になっている必要があります。</target>
        </trans-unit>
        <trans-unit id="235b20eeb79f677f1f160bf500cf4c29c7657567" translate="yes" xml:space="preserve">
          <source>This module requires packages installed:</source>
          <target state="translated">このモジュールはパッケージのインストールが必要です。</target>
        </trans-unit>
        <trans-unit id="5f7edb2d62976775f866e047aa9b5f8f6c2452fb" translate="yes" xml:space="preserve">
          <source>This module uses Symfony Crawler and HttpKernel to emulate requests and test response.</source>
          <target state="translated">このモジュールはリクエストとテストレスポンスをエミュレートするために symfony Crawler と HttpKernel を利用します。</target>
        </trans-unit>
        <trans-unit id="423832627d674a589f37c12eae22bcf8e2f1a813" translate="yes" xml:space="preserve">
          <source>This module uses the &lt;a href=&quot;https://github.com/nrk/predis&quot;&gt;Predis&lt;/a&gt; library to interact with a Redis server.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;https://github.com/nrk/predis&quot;&gt;Predis&lt;/a&gt;ライブラリを使用してRedisサーバーと対話します。</target>
        </trans-unit>
        <trans-unit id="a0fd00372ca4c26d9ab0a9d7912f99f51e053627" translate="yes" xml:space="preserve">
          <source>This module was bundled with Codeception 2 and 3, but since version 4 it is necessary to install it separately.</source>
          <target state="translated">このモジュールはCodeception 2と3に同梱されていましたが、バージョン4からは別途インストールが必要です。</target>
        </trans-unit>
        <trans-unit id="e0664053b5bc98dbfe6cb4eea31868ac4d9aba26" translate="yes" xml:space="preserve">
          <source>This runs in the context of the &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/master/lib/remote/RemoteWebDriver.php&quot;&gt;RemoteWebDriver class&lt;/a&gt;. Try not to use this command on a regular basis. If Codeception lacks a feature you need, please implement it and submit a patch.</source>
          <target state="translated">これは、&lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/master/lib/remote/RemoteWebDriver.php&quot;&gt;RemoteWebDriverクラスの&lt;/a&gt;コンテキストで実行されます。このコマンドを定期的に使用しないようにしてください。Codeceptionに必要な機能がない場合は、実装してパッチを送信してください。</target>
        </trans-unit>
        <trans-unit id="4ba1c18f1d9523fcdaf10be16e39238de3d20587" translate="yes" xml:space="preserve">
          <source>This runs in the context of the &lt;a href=&quot;https://github.com/php-webdriver/php-webdriver/blob/master/lib/remote/RemoteWebDriver.php&quot;&gt;RemoteWebDriver class&lt;/a&gt;. Try not to use this command on a regular basis. If Codeception lacks a feature you need, please implement it and submit a patch.</source>
          <target state="translated">これは、&lt;a href=&quot;https://github.com/php-webdriver/php-webdriver/blob/master/lib/remote/RemoteWebDriver.php&quot;&gt;RemoteWebDriverクラスの&lt;/a&gt;コンテキストで実行されます。このコマンドを定期的に使用しないようにしてください。Codeceptionに必要な機能がない場合は、それを実装してパッチを送信してください。</target>
        </trans-unit>
        <trans-unit id="81a486ea96a0402cad1e365e369584e6274761ee" translate="yes" xml:space="preserve">
          <source>This scenario can probably be read by non-technical people. If you just remove all special chars like braces, arrows and &lt;code&gt;$&lt;/code&gt;, this test transforms into plain English text:</source>
          <target state="translated">このシナリオは、技術者以外の人でも読むことができます。中括弧、矢印、 &lt;code&gt;$&lt;/code&gt; などの特殊文字をすべて削除すると、このテストはプレーンな英語のテキストに変換されます。</target>
        </trans-unit>
        <trans-unit id="622f0218840627aae58a1a095010f4347ab33fd0" translate="yes" xml:space="preserve">
          <source>This section details what you can expect when using this module.</source>
          <target state="translated">このセクションでは、このモジュールを使用する際に期待できることを詳細に説明します。</target>
        </trans-unit>
        <trans-unit id="0c8b2b964b204e94c332273f403cfbff48cf346e" translate="yes" xml:space="preserve">
          <source>This simple test can be extended to a complete scenario of site usage, therefore, by emulating the user&amp;rsquo;s actions, you can test any of your websites.</source>
          <target state="translated">この単純なテストは、サイト使用の完全なシナリオに拡張できるため、ユーザーのアクションをエミュレートすることにより、任意のWebサイトをテストできます。</target>
        </trans-unit>
        <trans-unit id="d2f3924667ab167c40d910fe86995985910da2d9" translate="yes" xml:space="preserve">
          <source>This string is passed as a standard PHP string parameter</source>
          <target state="translated">この文字列は、標準の PHP 文字列パラメータとして渡されます。</target>
        </trans-unit>
        <trans-unit id="0afa514aeb64eecf2071d61020b2a004c904f61b" translate="yes" xml:space="preserve">
          <source>This template can be fulfilled by setting actor and goals:</source>
          <target state="translated">このテンプレートは、アクターとゴールを設定することで満たすことができます。</target>
        </trans-unit>
        <trans-unit id="13f45325506b1fbe8984315416b8d7e60faa5c91" translate="yes" xml:space="preserve">
          <source>This test will trigger the following events:</source>
          <target state="translated">このテストでは、以下のイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="b775b15223a3b54fdcfc2ce55d6d16e91dd4254f" translate="yes" xml:space="preserve">
          <source>This test, running with the PhpBrowser module in debug mode, will print something like this:</source>
          <target state="translated">このテストは、PhpBrowserモジュールをデバッグモードで実行すると、以下のように表示されます。</target>
        </trans-unit>
        <trans-unit id="ad760ce0824beb2eaace8f7a6bac97ce08ee4652" translate="yes" xml:space="preserve">
          <source>This way PageObjects, Helpers and StepObjects can become contexts as well. But more preferable to include context classes by their tags or roles.</source>
          <target state="translated">このようにして、PageObject,Helpers,StepObjectも同様にコンテキストになることができます。しかし、タグや役割によってコンテキストクラスを含めるのがより好ましいです。</target>
        </trans-unit>
        <trans-unit id="deb9e7bd23d8d365307f720238040e7fbe5b2658" translate="yes" xml:space="preserve">
          <source>This way feature file runs just the same as any other Codeception test. Substeps give us detailed information of how the scenario is being executed.</source>
          <target state="translated">このようにして、フィーチャーファイルは他のCodeceptionテストと同じように実行されます。サブステップでは、シナリオがどのように実行されているかの詳細な情報を得ることができます。</target>
        </trans-unit>
        <trans-unit id="027a270497ebd9e458f131fd1ba22e658c2fba47" translate="yes" xml:space="preserve">
          <source>This way if you try to use two modules sharing the same conflicted interface you will get an exception.</source>
          <target state="translated">これにより、同じ競合するインターフェースを共有する2つのモジュールを使おうとすると例外が発生します。</target>
        </trans-unit>
        <trans-unit id="2b5a48f9bf9bf3efcb3bcd2967ba4035378e130e" translate="yes" xml:space="preserve">
          <source>This way no web actions will be added to &lt;code&gt;$I&lt;/code&gt; object.</source>
          <target state="translated">この方法では、 &lt;code&gt;$I&lt;/code&gt; オブジェクトにWebアクションは追加されません。</target>
        </trans-unit>
        <trans-unit id="a87c1f16ef6b4ea22e67e7f3d4f999bf4fd0beab" translate="yes" xml:space="preserve">
          <source>This way you can easily control which tests will be executed for each environment.</source>
          <target state="translated">このようにして、環境ごとにどのテストを実行するかを簡単に制御することができます。</target>
        </trans-unit>
        <trans-unit id="f07dcba5fbb38030b083c2635dc8efc2b045d2b9" translate="yes" xml:space="preserve">
          <source>This will bootstrap a new project with the &lt;code&gt;namespace: frontend&lt;/code&gt; parameter in the &lt;code&gt;codeception.yml&lt;/code&gt; file. Helpers will be in the &lt;code&gt;frontend\Codeception\Module&lt;/code&gt; namespace and Actor classes will be in the &lt;code&gt;frontend&lt;/code&gt; namespace.</source>
          <target state="translated">これにより、 &lt;code&gt;codeception.yml&lt;/code&gt; ファイルの &lt;code&gt;namespace: frontend&lt;/code&gt; パラメータを使用して新しいプロジェクトがブートストラップされます。ヘルパーは &lt;code&gt;frontend\Codeception\Module&lt;/code&gt; 名前空間にあり、Actorクラスは &lt;code&gt;frontend&lt;/code&gt; 名前空間にあります。</target>
        </trans-unit>
        <trans-unit id="23fd01a30506cfcd283ea232d5f32763ac506075" translate="yes" xml:space="preserve">
          <source>This will create a &lt;code&gt;Login&lt;/code&gt; class in &lt;code&gt;tests/_support/Page/Acceptance&lt;/code&gt;. The basic PageObject is nothing more than an empty class with a few stubs.</source>
          <target state="translated">これにより、 &lt;code&gt;tests/_support/Page/Acceptance&lt;/code&gt; に &lt;code&gt;Login&lt;/code&gt; クラスが作成されます。基本的なPageObjectは、いくつかのスタブを持つ空のクラスにすぎません。</target>
        </trans-unit>
        <trans-unit id="f5b8c24db209c7830ed1230b7637c32d0e74971f" translate="yes" xml:space="preserve">
          <source>This will create a &lt;code&gt;Login&lt;/code&gt; class in &lt;code&gt;tests/_support/Page&lt;/code&gt;. The basic PageObject is nothing more than an empty class with a few stubs. It is expected that you will populate it with the UI locators of a page it represents and then those locators will be used on a page. Locators are represented with public static properties:</source>
          <target state="translated">これにより、 &lt;code&gt;tests/_support/Page&lt;/code&gt; に &lt;code&gt;Login&lt;/code&gt; クラスが作成されます。基本的なPageObjectは、いくつかのスタブを持つ空のクラスに過ぎません。それが表すページのUIロケーターを設定し、それらのロケーターがページで使用されることが期待されます。ロケーターはパブリック静的プロパティで表されます。</target>
        </trans-unit>
        <trans-unit id="4743b1c845bc3887da6e5ec946fef9a61908bd00" translate="yes" xml:space="preserve">
          <source>This will generate &lt;code&gt;SigninCest.php&lt;/code&gt; file inside &lt;code&gt;tests/acceptance&lt;/code&gt; directory. Let&amp;rsquo;s open it:</source>
          <target state="translated">これにより、 &lt;code&gt;tests/acceptance&lt;/code&gt; ディレクトリ内に &lt;code&gt;SigninCest.php&lt;/code&gt; ファイルが生成されます。開けましょう：</target>
        </trans-unit>
        <trans-unit id="06aa388826cd7f270bedaabdbed12ac912ce1fee" translate="yes" xml:space="preserve">
          <source>This will generate a class in &lt;code&gt;/tests/_support/Step/Acceptance/Admin.php&lt;/code&gt; similar to this:</source>
          <target state="translated">これにより、 &lt;code&gt;/tests/_support/Step/Acceptance/Admin.php&lt;/code&gt; に次のようなクラスが生成されます。</target>
        </trans-unit>
        <trans-unit id="ee0b965e3c484b969f2a8d219e9e1aa1e7e472be" translate="yes" xml:space="preserve">
          <source>This will launch the test suites for all three applications and merge the reports from all of them. This is very useful when you run your tests on a Continuous Integration server and you want to get a single report in JUnit and HTML format. The code coverage report will be merged too.</source>
          <target state="translated">これは、3 つのアプリケーションすべてのテストスイートを起動し、それらすべてのレポートをマージします。これは、継続的インテグレーションサーバー上でテストを実行していて、JUnit と HTML 形式の単一のレポートを取得したい場合に非常に便利です。コードカバレッジレポートもマージされます。</target>
        </trans-unit>
        <trans-unit id="26f29ed4a76ddd6b2b7b55e790156dfa78250a31" translate="yes" xml:space="preserve">
          <source>This will load all context from the given path and prefix it with the given namespace.</source>
          <target state="translated">これは、指定されたパスからすべてのコンテキストをロードし、指定された名前空間にプレフィックスを付けます。</target>
        </trans-unit>
        <trans-unit id="17e838bd4586037a45ebbf4c584b119f9cd1d99d" translate="yes" xml:space="preserve">
          <source>This will load all found &lt;code&gt;p*&lt;/code&gt; files in &lt;code&gt;tests/_data&lt;/code&gt; as groups. Group names will be as follows p1,p2,&amp;hellip;,pN.</source>
          <target state="translated">これにより、 &lt;code&gt;tests/_data&lt;/code&gt; で見つかったすべての &lt;code&gt;p*&lt;/code&gt; ファイルがグループとしてロードされます。グループ名は、p1、p2、&amp;hellip;、pNのようになります。</target>
        </trans-unit>
        <trans-unit id="ae716a947bff519afe13002d98d4fb2bb86d5ace" translate="yes" xml:space="preserve">
          <source>This will match any word (passed in double quotes) or a number passed:</source>
          <target state="translated">これは、任意の単語(二重引用符で渡されたもの)または数字にマッチします。</target>
        </trans-unit>
        <trans-unit id="641effe51b09108081714c5a068477e2590e9837" translate="yes" xml:space="preserve">
          <source>This will produce code templates for all undefined steps in all feature files of this suite. Our next step will be to define those steps and transforming feature-file into valid test.</source>
          <target state="translated">これは、このスイートのすべての機能ファイルの未定義のステップのためのコードテンプレートを生成します。次のステップは、これらのステップを定義し、機能ファイルを有効なテストに変換することです。</target>
        </trans-unit>
        <trans-unit id="938a9ea9193e97cd6f04c2d475133ccf1b3184fe" translate="yes" xml:space="preserve">
          <source>This will produce this XML</source>
          <target state="translated">これにより、以下のXMLが生成されます。</target>
        </trans-unit>
        <trans-unit id="e790594cbb4a8f4105931fadec1cd0c498025ead" translate="yes" xml:space="preserve">
          <source>This will search for &lt;code&gt;Title&lt;/code&gt; text in either &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;h2&lt;/code&gt;, or &lt;code&gt;h3&lt;/code&gt; tag. You can also combine CSS selector with XPath locator:</source>
          <target state="translated">これにより、 &lt;code&gt;h1&lt;/code&gt; 、 &lt;code&gt;h2&lt;/code&gt; 、または &lt;code&gt;h3&lt;/code&gt; タグのいずれかで &lt;code&gt;Title&lt;/code&gt; テキストが検索されます。CSSセレクターとXPathロケーターを組み合わせることもできます。</target>
        </trans-unit>
        <trans-unit id="ea7adadb567b53fb1acf2d8ed8e9ab6fa33fccd1" translate="yes" xml:space="preserve">
          <source>This will use static method of &lt;code&gt;MyDb::createEntityManager()&lt;/code&gt; to establish the Entity Manager.</source>
          <target state="translated">これは、 &lt;code&gt;MyDb::createEntityManager()&lt;/code&gt; 静的メソッドを使用してエンティティマネージャーを確立します。</target>
        </trans-unit>
        <trans-unit id="10ae9682118c2a034d8f59916b1e1e4c9cd3fc00" translate="yes" xml:space="preserve">
          <source>This works recursively, so you can create deep structures in a single call.</source>
          <target state="translated">これは再帰的に動作するので、1回の呼び出しで深い構造を作成することができます。</target>
        </trans-unit>
        <trans-unit id="b861e49cfd57b05207e848d0a974bfd07aa93702" translate="yes" xml:space="preserve">
          <source>Those methods can be used to create custom commands like &lt;code&gt;$I-&amp;gt;startBrowser()&lt;/code&gt; or used in &lt;a href=&quot;06-modulesandhelpers#Hooks&quot;&gt;before/after&lt;/a&gt; hooks.</source>
          <target state="translated">これらのメソッドを使用して、 &lt;code&gt;$I-&amp;gt;startBrowser()&lt;/code&gt; などのカスタムコマンドを作成したり、&lt;a href=&quot;06-modulesandhelpers#Hooks&quot;&gt;before / after&lt;/a&gt;フックで使用したりできます。</target>
        </trans-unit>
        <trans-unit id="f979403e41a98dd8efe49fab5e0a21e6f718d34b" translate="yes" xml:space="preserve">
          <source>Those properties and methods are expected to be used in Helper classes:</source>
          <target state="translated">これらのプロパティやメソッドは、Helperクラスで使用されることが期待されています。</target>
        </trans-unit>
        <trans-unit id="9839039fd7148a5312dd4c7518324e38509c6c04" translate="yes" xml:space="preserve">
          <source>Throw an &lt;code&gt;ElementNotFound&lt;/code&gt; exception.</source>
          <target state="translated">&lt;code&gt;ElementNotFound&lt;/code&gt; 例外をスローします。</target>
        </trans-unit>
        <trans-unit id="f160ed7a99c266b070fe0b07fa7b8c6a186663a7" translate="yes" xml:space="preserve">
          <source>Ticks a checkbox. For radio buttons, use the &lt;code&gt;selectOption&lt;/code&gt; method instead.</source>
          <target state="translated">チェックボックスをチェックします。ラジオボタンの場合は、代わりに &lt;code&gt;selectOption&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="40b3a3c2e4163e7e9bb1d0e0406714d453267427" translate="yes" xml:space="preserve">
          <source>To access UnitTester methods you can use the &lt;code&gt;UnitTester&lt;/code&gt; property in a test.</source>
          <target state="translated">UnitTesterメソッドにアクセスするには、テストで &lt;code&gt;UnitTester&lt;/code&gt; プロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="d857a0440472c8a0633d87bd2c563e619dec14f4" translate="yes" xml:space="preserve">
          <source>To authorize requests to external resources, usually provider requires you to authorize using headers. Additional headers can be set before request using &lt;code&gt;haveHttpHeader&lt;/code&gt; command:</source>
          <target state="translated">外部リソースへのリクエストを承認するには、通常、プロバイダーはヘッダーを使用して承認する必要があります。 &lt;code&gt;haveHttpHeader&lt;/code&gt; コマンドを使用して、リクエストの前に追加のヘッダーを設定できます。</target>
        </trans-unit>
        <trans-unit id="ea7fa5cf1b1616ec0c52f41ea8d4e724ed2cc4a6" translate="yes" xml:space="preserve">
          <source>To avoid confusion, &lt;strong&gt;Framework modules, PhpBrowser, and WebDriver&lt;/strong&gt; can&amp;rsquo;t be used together. For instance, the &lt;code&gt;amOnPage&lt;/code&gt; method exists in all those modules, and you should not try to guess which module will actually execute it. If you are doing acceptance testing, set up either WebDriver or PHPBrowser but do not set both up at the same time. If you are doing functional testing, enable only one of the framework modules.</source>
          <target state="translated">混乱を避けるために、&lt;strong&gt;Frameworkモジュール、PhpBrowser、およびWebDriver&lt;/strong&gt;を一緒に使用することはできません。たとえば、 &lt;code&gt;amOnPage&lt;/code&gt; メソッドはこれらすべてのモジュールに存在するため、どのモジュールが実際にそれを実行するかを推測しないでください。受け入れテストを行う場合は、WebDriverまたはPHPBrowserのいずれかをセットアップしますが、両方を同時にセットアップしないでください。機能テストを行う場合は、フレームワークモジュールの1つだけを有効にします。</target>
        </trans-unit>
        <trans-unit id="997f66b0cb3c029f0eb8bd20e4d4cc693dc8b3dc" translate="yes" xml:space="preserve">
          <source>To avoid naming conflicts between Actor classes and Helper classes, they should be separated into namespaces. To create test suites with namespaces you can add &lt;code&gt;--namespace&lt;/code&gt; option to the bootstrap command:</source>
          <target state="translated">アクタークラスとヘルパークラス間の名前の競合を回避するには、名前空間に分離する必要があります。名前空間を使用してテストスイートを作成するには、bootstrapコマンドに &lt;code&gt;--namespace&lt;/code&gt; オプションを追加します。</target>
        </trans-unit>
        <trans-unit id="6f1d408afe2aeb5a1a5bb3d4113f8c30c742a05b" translate="yes" xml:space="preserve">
          <source>To change module configuration for a specific group of tests use &lt;a href=&quot;08-customization#Group-Objects&quot;&gt;GroupObjects&lt;/a&gt;.</source>
          <target state="translated">特定のテストグループのモジュール構成を変更するには、&lt;a href=&quot;08-customization#Group-Objects&quot;&gt;GroupObjectsを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="56acb72d9c9d56e9f3d6db688507db5ef2557319" translate="yes" xml:space="preserve">
          <source>To check that an element hasn&amp;rsquo;t been assigned any one of many values, an array can be passed as the value:</source>
          <target state="translated">要素が多くの値のいずれにも割り当てられていないことを確認するには、配列を値として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="e619b478a656cd19f5cf11f09795233bc0238830" translate="yes" xml:space="preserve">
          <source>To combine &lt;code&gt;waitForElement&lt;/code&gt; with actions inside that element you can use the &lt;a href=&quot;modules/webdriver#performOn&quot;&gt;performOn&lt;/a&gt; method. Let&amp;rsquo;s see how you can perform some actions inside an HTML popup:</source>
          <target state="translated">&lt;code&gt;waitForElement&lt;/code&gt; をその要素内のアクションと組み合わせるには、&lt;a href=&quot;modules/webdriver#performOn&quot;&gt;performOn&lt;/a&gt;メソッドを使用できます。HTMLポップアップ内でいくつかのアクションを実行する方法を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="4058a630bb8bf89172a2629e3079b9dd3752500c" translate="yes" xml:space="preserve">
          <source>To conclude, we need:</source>
          <target state="translated">結論から言うと、必要なのは</target>
        </trans-unit>
        <trans-unit id="889fe4826fe7db5a5284186358d3a3de61a0b949" translate="yes" xml:space="preserve">
          <source>To connect to &lt;code&gt;c3&lt;/code&gt; Codeception uses url config from PhpBrowser or WebDriver module. But URL of index with &lt;code&gt;c3.php&lt;/code&gt; included can be specified explicitly with &lt;code&gt;c3_url&lt;/code&gt; parameter defined:</source>
          <target state="translated">&lt;code&gt;c3&lt;/code&gt; に接続するには、CodeceptionはPhpBrowserまたはWebDriverモジュールのURL構成を使用します。ただし、 &lt;code&gt;c3.php&lt;/code&gt; が含まれるインデックスのURLは、 &lt;code&gt;c3_url&lt;/code&gt; パラメータを定義して明示的に指定できます。</target>
        </trans-unit>
        <trans-unit id="d9c60b9ee14eba56f1ef58e73586c9bbfc1e7c20" translate="yes" xml:space="preserve">
          <source>To control browsers Selenium Server uses official tools maintained by browser vendors, like &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver&quot;&gt;ChromeDriver&lt;/a&gt; for Chrome or &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt; for Firefox. This makes Selenium quite heavy to install, as it requires Java, browsers, Chrome or GeckoDriver and GUI (display server) to run browsers in.</source>
          <target state="translated">制御ブラウザにセレンサーバーは次のように、ブラウザベンダーによって維持、公式のツールを使用しています&lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver&quot;&gt;ChromeDriver&lt;/a&gt;クロムまたはのため&lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt; Firefox用。ブラウザを実行するには、Java、ブラウザ、ChromeまたはGeckoDriver、およびGUI（ディスプレイサーバー）が必要であるため、Seleniumのインストールは非常に重くなります。</target>
        </trans-unit>
        <trans-unit id="9717eaa1eb3c5738c49ac41848ea0614f838dcbe" translate="yes" xml:space="preserve">
          <source>To control the browsers you need to use a program or a service to start/stop browser sessions. In the next section, we will overview the most popular solutions.</source>
          <target state="translated">ブラウザを制御するには、プログラムやサービスを使用してブラウザセッションを開始/停止する必要があります。次のセクションでは、最も一般的なソリューションを概観します。</target>
        </trans-unit>
        <trans-unit id="dee33c58459561431cb09d2a886e06e8d6d2a39a" translate="yes" xml:space="preserve">
          <source>To create a project in directory different from the current one, just provide its path as a parameter:</source>
          <target state="translated">現在のディレクトリとは異なるディレクトリにプロジェクトを作成するには、そのパスをパラメータとして指定するだけです。</target>
        </trans-unit>
        <trans-unit id="90125501d5b026c2824bb36dc4f1cfc5594af8b6" translate="yes" xml:space="preserve">
          <source>To create one command to rule them all we can define new public method &lt;code&gt;parallelAll&lt;/code&gt; and execute all commands. We will save the result of &lt;code&gt;parallelRun&lt;/code&gt; and use it for our final exit code:</source>
          <target state="translated">それらをすべてルール化する1つのコマンドを作成するには、新しいパブリックメソッド &lt;code&gt;parallelAll&lt;/code&gt; を定義して、すべてのコマンドを実行します。 &lt;code&gt;parallelRun&lt;/code&gt; の結果を保存し、それを最終的な終了コードに使用します。</target>
        </trans-unit>
        <trans-unit id="34a1f099569ed3a77dcbb6bdf479654753026f94" translate="yes" xml:space="preserve">
          <source>To create or update data you can use other common methods:</source>
          <target state="translated">データを作成または更新するには、他の一般的な方法を使用することができます。</target>
        </trans-unit>
        <trans-unit id="6ebf325d5ca25c6a0118e5b8237de27ba8725136" translate="yes" xml:space="preserve">
          <source>To declare expectations for mocks use &lt;code&gt;Codeception\Stub\Expected&lt;/code&gt; class:</source>
          <target state="translated">モックへの期待を宣言するには、 &lt;code&gt;Codeception\Stub\Expected&lt;/code&gt; クラスを使用します。</target>
        </trans-unit>
        <trans-unit id="100f9d0d9dcc5581a01d67d43f50340128111be9" translate="yes" xml:space="preserve">
          <source>To display additional information, use the &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;debugSection&lt;/code&gt; methods of the module. Here is an example of how it works for PhpBrowser:</source>
          <target state="translated">追加情報を表示するには、モジュールの &lt;code&gt;debug&lt;/code&gt; および &lt;code&gt;debugSection&lt;/code&gt; メソッドを使用します。PhpBrowserでの動作例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="db068ee171235a0ed610a01bf6b0b96f31a7a940" translate="yes" xml:space="preserve">
          <source>To enable code coverage put these lines in the global configuration file &lt;code&gt;codeception.yml&lt;/code&gt;:</source>
          <target state="translated">コードカバレッジを有効にするには、これらの行をグローバル構成ファイル &lt;code&gt;codeception.yml&lt;/code&gt; に配置します。</target>
        </trans-unit>
        <trans-unit id="ae863a9dea090403facd86e09f82b802323dd059" translate="yes" xml:space="preserve">
          <source>To enable extension dynamically, execute the &lt;code&gt;run&lt;/code&gt; command with &lt;code&gt;--ext&lt;/code&gt; option. Provide a class name as a parameter:</source>
          <target state="translated">拡張機能を動的に有効にするには、 &lt;code&gt;--ext&lt;/code&gt; オプションを指定して &lt;code&gt;run&lt;/code&gt; コマンドを実行します。クラス名をパラメーターとして指定します。</target>
        </trans-unit>
        <trans-unit id="4d94ddbbd397ff36c359a72d66b6979f6ea0bfa8" translate="yes" xml:space="preserve">
          <source>To enable the database functionality in unit tests, make sure the &lt;code&gt;Db&lt;/code&gt; module is included in the &lt;code&gt;unit.suite.yml&lt;/code&gt; configuration file. The database will be cleaned and populated after each test, the same way it happens for acceptance and functional tests. If that&amp;rsquo;s not your required behavior, change the settings of the &lt;code&gt;Db&lt;/code&gt; module for the current suite. See &lt;a href=&quot;modules/db&quot;&gt;Db Module&lt;/a&gt;</source>
          <target state="translated">単体テストでデータベース機能を有効にするには、 &lt;code&gt;Db&lt;/code&gt; モジュールが &lt;code&gt;unit.suite.yml&lt;/code&gt; 構成ファイルに含まれていることを確認してください。データベースは、受け入れテストと機能テストで発生するのと同じ方法で、各テスト後にクリーンアップされてデータが入力されます。それが必要な動作でない場合は、現在のスイートの &lt;code&gt;Db&lt;/code&gt; モジュールの設定を変更してください。&lt;a href=&quot;modules/db&quot;&gt;DBモジュールを&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="ba1b898d5e07a174e289632c55ed03a345ffc57a" translate="yes" xml:space="preserve">
          <source>To ensure database dump is loaded before all tests add &lt;code&gt;populate: true&lt;/code&gt;. To clean current database and reload dump between tests use &lt;code&gt;cleanup: true&lt;/code&gt;.</source>
          <target state="translated">すべてのテストの前にデータベースダンプが読み込まれるようにするには、 &lt;code&gt;populate: true&lt;/code&gt; 追加します。現在のデータベースをクリーン &lt;code&gt;cleanup: true&lt;/code&gt; 、テスト間でダンプをリロードするには、cleanup：trueを使用します。</target>
        </trans-unit>
        <trans-unit id="1cf87a678cfb9aefe0247bb9798133ae1162b72c" translate="yes" xml:space="preserve">
          <source>To execute a group of tests that are not stored in the same directory, you can organize them in &lt;a href=&quot;07-advancedusage#Groups&quot;&gt;groups&lt;/a&gt;.</source>
          <target state="translated">同じディレクトリに保存されていないテストのグループを実行するには、それらを&lt;a href=&quot;07-advancedusage#Groups&quot;&gt;グループに&lt;/a&gt;編成します。</target>
        </trans-unit>
        <trans-unit id="3804f4ea343d7a6b630c14100b07519b6e7721ed" translate="yes" xml:space="preserve">
          <source>To execute a test in a browser we need to change the suite configuration to use &lt;strong&gt;WebDriver&lt;/strong&gt; instead of &lt;code&gt;PhpBrowser&lt;/code&gt;.</source>
          <target state="translated">ブラウザでテストを実行するには、スイートの構成を変更して、 &lt;code&gt;PhpBrowser&lt;/code&gt; の代わりに&lt;strong&gt;WebDriver&lt;/strong&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="73809fbaec4f5814dc726fb6c1399c8a7a13b385" translate="yes" xml:space="preserve">
          <source>To find out which parts each module has, look at the &amp;ldquo;Parts&amp;rdquo; header on the module&amp;rsquo;s page.</source>
          <target state="translated">各モジュールに含まれるパーツを確認するには、モジュールのページの「パーツ」ヘッダーを確認してください。</target>
        </trans-unit>
        <trans-unit id="5e54abd8d0278dfa29aba8d09f81533c817fafc4" translate="yes" xml:space="preserve">
          <source>To generate JUnit XML output, you can provide the &lt;code&gt;--xml&lt;/code&gt; option, and &lt;code&gt;--html&lt;/code&gt; for HTML report.</source>
          <target state="translated">JUnit XML出力を生成するには、 &lt;code&gt;--html&lt;/code&gt; オプションと--htmlオプションをHTMLレポートに &lt;code&gt;--xml&lt;/code&gt; できます。</target>
        </trans-unit>
        <trans-unit id="d6e993a6ddad35b25700377e04bd31f00c71406c" translate="yes" xml:space="preserve">
          <source>To generate a clover xml report or a tasty html report append also &lt;code&gt;--coverage-xml&lt;/code&gt; and &lt;code&gt;--coverage-html&lt;/code&gt; options.</source>
          <target state="translated">クローバーxmlレポートまたはおいしいhtmlレポートを生成するには、 &lt;code&gt;--coverage-xml&lt;/code&gt; および &lt;code&gt;--coverage-html&lt;/code&gt; オプションも追加します。</target>
        </trans-unit>
        <trans-unit id="b58fb91019c0be55bc10d6d24f38a991e787bdd5" translate="yes" xml:space="preserve">
          <source>To get more details on steps executed you can generate HTML report and use Jenkins to display them.</source>
          <target state="translated">実行されたステップの詳細を取得するには、HTMLレポートを生成し、Jenkinsを使用して表示することができます。</target>
        </trans-unit>
        <trans-unit id="c77b77ebd882a05e19bc1efb4cb38db37c77e357" translate="yes" xml:space="preserve">
          <source>To init tests in specific folder use &lt;code&gt;--path&lt;/code&gt; option:</source>
          <target state="translated">特定のフォルダーでテストを開始するには、 &lt;code&gt;--path&lt;/code&gt; オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="17267dc3ce70f4fd9e214b13f5bc70b87cd6dccb" translate="yes" xml:space="preserve">
          <source>To limit tests run to a single class, add a second argument. Provide a local path to the test class, from the suite directory:</source>
          <target state="translated">テストの実行を単一のクラスに制限するには、第二引数を追加します。スイートディレクトリからテストクラスへのローカルパスを指定します。</target>
        </trans-unit>
        <trans-unit id="bc8144a9117a2721cea959d1ebd8b234a8a47835" translate="yes" xml:space="preserve">
          <source>To list all defined steps run &lt;code&gt;gherkin:steps&lt;/code&gt; command:</source>
          <target state="translated">定義されているすべてのステップを一覧表示するには、 &lt;code&gt;gherkin:steps&lt;/code&gt; コマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="dbb575e632c05d82c2f07f40c1ee5db90373201f" translate="yes" xml:space="preserve">
          <source>To make testing more effective we assumed that we are using one of the ActiveRecord frameworks like Laravel, Yii, or Phalcon so we are able to dynamically create records in database with &lt;code&gt;haveRecord&lt;/code&gt; method. After that we are opening browser and testing our web pages to see that after selecting those products we really see the price was calculated correctly.</source>
          <target state="translated">テストをより効果的にするために、Laravel、Yii、またはPhalconなどのActiveRecordフレームワークの1つを使用し、 &lt;code&gt;haveRecord&lt;/code&gt; メソッドを使用してデータベースに動的にレコードを作成できると想定しました。その後、ブラウザーを開いてWebページをテストし、これらの製品を選択した後、価格が正しく計算されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="470d8d820699eb1c803996a50d88fe6a734dd690" translate="yes" xml:space="preserve">
          <source>To match fields by their labels, you should write a &lt;code&gt;for&lt;/code&gt; attribute in the &lt;code&gt;label&lt;/code&gt; tag.</source>
          <target state="translated">ラベルでフィールドを照合するには、 &lt;code&gt;label&lt;/code&gt; タグに &lt;code&gt;for&lt;/code&gt; 属性を記述します。</target>
        </trans-unit>
        <trans-unit id="33221cfc5f658c97f88c23cd00776d51193438e3" translate="yes" xml:space="preserve">
          <source>To match steps from a feature file to PHP code we use annotation which are added to class methods. By default Codeception expects that all methods marked with &lt;code&gt;@Given&lt;/code&gt;, &lt;code&gt;@When&lt;/code&gt;, &lt;code&gt;@Then&lt;/code&gt; annotation. Each annotation should contain a step string.</source>
          <target state="translated">機能ファイルのステップをPHPコードに一致させるために、クラスメソッドに追加された注釈を使用します。デフォルトでは、 &lt;code&gt;@When&lt;/code&gt; は &lt;code&gt;@Then&lt;/code&gt; &lt;code&gt;@Given&lt;/code&gt; 、@When、@Thenアノテーションでマークされたすべてのメソッドを想定しています。各注釈には、ステップ文字列を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="9e993c9c65ffa2b5a900d06a772172f2d87c6830" translate="yes" xml:space="preserve">
          <source>To parse SQL Db file, it should follow this specification:</source>
          <target state="translated">SQL Dbファイルを解析するには、この仕様に従う必要があります。</target>
        </trans-unit>
        <trans-unit id="632d6aa56501a42a690f3b6c811a696daf5918a6" translate="yes" xml:space="preserve">
          <source>To perform Symfony integration you just need to include the Symfony module into your test suite. If you also use Doctrine2, don&amp;rsquo;t forget to include it too. To make the Doctrine2 module connect using the &lt;code&gt;doctrine&lt;/code&gt; service from Symfony, you should specify the Symfony module as a dependency for Doctrine2:</source>
          <target state="translated">Symfony統合を実行するには、Symfonyモジュールをテストスイートに含める必要があります。Doctrine2も使用している場合は、それも含めることを忘れないでください。Symfony の &lt;code&gt;doctrine&lt;/code&gt; サービスを使用してDoctrine2モジュールを接続するには、Doctrine2 の依存関係としてSymfonyモジュールを指定する必要があります：</target>
        </trans-unit>
        <trans-unit id="79fe4dcf2ee453f4315d30a265ea7b8dc23e1b86" translate="yes" xml:space="preserve">
          <source>To prepare application and tests to be executed inside containers you will need to use &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt; to run multiple containers and connect them together.</source>
          <target state="translated">コンテナー内で実行されるアプリケーションとテストを準備するには、&lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt;を使用して複数のコンテナーを実行し、それらを接続する必要があります。</target>
        </trans-unit>
        <trans-unit id="03a6d72b8d7563d4dfdb0a982ea8835805c9ca03" translate="yes" xml:space="preserve">
          <source>To prepare environment for testing you can execute custom PHP script before all tests or just before a specific suite. This way you can initialize autoloader, check availability of a website, etc.</source>
          <target state="translated">テストのための環境を準備するには、すべてのテストの前に、あるいは特定のスイートの直前にカスタムPHPスクリプトを実行することができます。この方法では、オートローダーを初期化したり、 ウェブサイトの可用性をチェックしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="f0794fb81f886121facfcb48571b3e5a9295580a" translate="yes" xml:space="preserve">
          <source>To proceed you should create Factories helper via &lt;code&gt;generate:helper&lt;/code&gt; command and enable it:</source>
          <target state="translated">続行するには、 &lt;code&gt;generate:helper&lt;/code&gt; コマンドを使用してファクトリヘルパーを作成し、有効化する必要があります。</target>
        </trans-unit>
        <trans-unit id="0a8d8931a926d8bbd27503164c07b684627a8e5f" translate="yes" xml:space="preserve">
          <source>To provide the same configuration template for your development team, you can create a &lt;code&gt;codeception.dist.yml&lt;/code&gt; config file, which will be loaded before &lt;code&gt;codeception.yml&lt;/code&gt;. The dist config provides shared options, while local &lt;code&gt;codeception.yml&lt;/code&gt; files override them on a per-installation basis. Therefore, &lt;code&gt;codeception.yml&lt;/code&gt; should be ignored by your VCS system.</source>
          <target state="translated">開発チームのために同じ設定テンプレートを提供するには、作成することができ &lt;code&gt;codeception.dist.yml&lt;/code&gt; 前にロードされる設定ファイル、 &lt;code&gt;codeception.yml&lt;/code&gt; を。dist構成は共有オプションを提供しますが、ローカルの &lt;code&gt;codeception.yml&lt;/code&gt; ファイルはインストールごとにそれらをオーバーライドします。したがって、VCSシステムでは &lt;code&gt;codeception.yml&lt;/code&gt; を無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="e84b5eae92294962f94930f73f2f30a9603ff183" translate="yes" xml:space="preserve">
          <source>To receive detailed output, tests can be executed with the &lt;code&gt;--debug&lt;/code&gt; option. You may print any information inside a test using the &lt;code&gt;codecept_debug&lt;/code&gt; function.</source>
          <target state="translated">詳細な出力を受け取るには、 &lt;code&gt;--debug&lt;/code&gt; オプションを使用してテストを実行できます。 &lt;code&gt;codecept_debug&lt;/code&gt; 関数を使用して、テスト内の情報を印刷できます。</target>
        </trans-unit>
        <trans-unit id="de461cdaa42bf6f383c2ecbbe3821b8ee2bcbc07" translate="yes" xml:space="preserve">
          <source>To replace method provide it&amp;rsquo;s name as a key in second parameter and it&amp;rsquo;s return value or callback function as parameter</source>
          <target state="translated">メソッドを置き換えるには、2番目のパラメーターのキーとしての名前と、パラメーターとしての戻り値またはコールバック関数を指定します</target>
        </trans-unit>
        <trans-unit id="2eca21f4f82adf77f4ef7642972cfb2c816b445b" translate="yes" xml:space="preserve">
          <source>To replace method provide it&amp;rsquo;s name as a key in third parameter and it&amp;rsquo;s return value or callback function as parameter</source>
          <target state="translated">メソッドを置き換えるには、3番目のパラメーターのキーとして名前を指定し、パラメーターとして戻り値またはコールバック関数を指定します</target>
        </trans-unit>
        <trans-unit id="98df62a49987ec4672cfb9a443372304754e7717" translate="yes" xml:space="preserve">
          <source>To run Selenium Server you need &lt;a href=&quot;https://www.java.com/&quot;&gt;Java&lt;/a&gt; as well as Chrome or Firefox browser installed.</source>
          <target state="translated">Selenium Serverを実行するには、&lt;a href=&quot;https://www.java.com/&quot;&gt;Java&lt;/a&gt;とChromeまたはFirefoxブラウザーをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="99b952b2eea5453fc78da996c7c5ae7a46db2ed4" translate="yes" xml:space="preserve">
          <source>To run a script for a specific suite, place it into the suite directory and add to suite config:</source>
          <target state="translated">特定のスイートのスクリプトを実行するには、スイートディレクトリに置き、スイートの設定に追加します。</target>
        </trans-unit>
        <trans-unit id="798ec5a586cb9bb7ac58ad5d823482c7ddc4fda9" translate="yes" xml:space="preserve">
          <source>To run a specific test only in Chrome browser, you can call &lt;code&gt;_reconfigure&lt;/code&gt; from WebDriver module for a test itself using &lt;code&gt;@prepare&lt;/code&gt;.</source>
          <target state="translated">Chromeブラウザーでのみ特定のテストを実行するには、 &lt;code&gt;@prepare&lt;/code&gt; を使用してテスト自体のWebDriverモジュールから &lt;code&gt;_reconfigure&lt;/code&gt; を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="6f320120c8499834be6249da01e33bf3d9c7c070" translate="yes" xml:space="preserve">
          <source>To run bootstrap script before all suites place it in &lt;code&gt;tests&lt;/code&gt; directory (absolute paths supported as well). Then set a &lt;code&gt;bootstrap&lt;/code&gt; config key in &lt;code&gt;codeception.yml&lt;/code&gt;:</source>
          <target state="translated">すべてのスイートが &lt;code&gt;tests&lt;/code&gt; ディレクトリに配置する前にブートストラップスクリプトを実行するには（絶対パスもサポートされています）。次に、 &lt;code&gt;codeception.yml&lt;/code&gt; で &lt;code&gt;bootstrap&lt;/code&gt; キーを設定します。</target>
        </trans-unit>
        <trans-unit id="17cc90197cc0e558828a590ee727166639b41b32" translate="yes" xml:space="preserve">
          <source>To run more tests create a public method for each of them. Include &lt;code&gt;AcceptanceTester&lt;/code&gt; object as &lt;code&gt;$I&lt;/code&gt; as a method parameter and use the same &lt;code&gt;$I-&amp;gt;&lt;/code&gt; API you&amp;rsquo;ve seen before. If your tests share common setup actions put them into &lt;code&gt;_before&lt;/code&gt; method.</source>
          <target state="translated">さらに多くのテストを実行するには、それぞれのパブリックメソッドを作成します。 &lt;code&gt;AcceptanceTester&lt;/code&gt; オブジェクトをメソッドパラメータとして &lt;code&gt;$I&lt;/code&gt; として含め、以前に見たのと同じ &lt;code&gt;$I-&amp;gt;&lt;/code&gt; APIを使用します。テストで共通のセットアップアクションを共有する場合は、それらを &lt;code&gt;_before&lt;/code&gt; メソッドに配置します。</target>
        </trans-unit>
        <trans-unit id="388606433286bc42fc537e55852b9fdc30fd2182" translate="yes" xml:space="preserve">
          <source>To run tests in Chrome browser you may connect to ChromeDriver directly, without using Selenium Server.</source>
          <target state="translated">Chromeブラウザでテストを実行するには、Selenium Serverを使用せずにChromeDriverに直接接続することができます。</target>
        </trans-unit>
        <trans-unit id="58797ceb80e56ac553bcf24f68cb048ac009642e" translate="yes" xml:space="preserve">
          <source>To run tests in Chrome/Chromium you may connect to ChromeDriver directly, without using Selenium Server.</source>
          <target state="translated">Chrome/Chromiumでテストを実行するには、Selenium Serverを使用せずにChromeDriverに直接接続することができます。</target>
        </trans-unit>
        <trans-unit id="0b7c8e2c36e650b5842b655fdc677aab76a741c0" translate="yes" xml:space="preserve">
          <source>To run tests in Chrome/Chromium, you need to install &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriver&lt;/a&gt;.</source>
          <target state="translated">Chrome / Chromiumでテストを実行するには、&lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriver&lt;/a&gt;をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="bd49b4e42bebfb5b0c6e1947890d7ce2ced627c2" translate="yes" xml:space="preserve">
          <source>To run tests in Firefox you may connect to GeckoDriver directly, without using Selenium Server.</source>
          <target state="translated">Firefox でテストを実行するには、Selenium Server を使用せずに GeckoDriver に直接接続することができます。</target>
        </trans-unit>
        <trans-unit id="d3df780f47a1c7783e99d0cf7c23f3a1a9f23da1" translate="yes" xml:space="preserve">
          <source>To run the tests in all 3 browsers, list all the environments:</source>
          <target state="translated">3つのブラウザすべてでテストを実行するには、すべての環境をリストアップします。</target>
        </trans-unit>
        <trans-unit id="bb9f9f83210547a29daaf66a5b1190449765c10b" translate="yes" xml:space="preserve">
          <source>To see all the available options, run the following command:</source>
          <target state="translated">利用可能なすべてのオプションを確認するには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="3607e9e895f6823464f743176d1e56515dc0c407" translate="yes" xml:space="preserve">
          <source>To try commands without running a single test you can launch interactive console:</source>
          <target state="translated">単一のテストを実行せずにコマンドを試すには、対話型コンソールを起動することができます。</target>
        </trans-unit>
        <trans-unit id="d8e4ffb6e9de99dcb9840b21d25c3fcff1215992" translate="yes" xml:space="preserve">
          <source>To update a snapshot with a new data run tests in &lt;code&gt;--debug&lt;/code&gt; mode.</source>
          <target state="translated">新しいデータでスナップショットを更新するには、 &lt;code&gt;--debug&lt;/code&gt; モードでテストを実行します。</target>
        </trans-unit>
        <trans-unit id="3e7bad8751f759a85d15c645b386acef9ceb7c99" translate="yes" xml:space="preserve">
          <source>To use Chrome, install &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriver&lt;/a&gt;. To use Firefox, install &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt;.</source>
          <target state="translated">Chromeを使用するには、&lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriverを&lt;/a&gt;インストールします。Firefoxを使用するには、&lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriverを&lt;/a&gt;インストールします。</target>
        </trans-unit>
        <trans-unit id="806ebd7b51c1ba92a34077a69d3b86ae893e72cd" translate="yes" xml:space="preserve">
          <source>To use Firefox, install &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt;. If you want to use both, consider setting up a dedicated &lt;a href=&quot;../07-advancedusage#Environments&quot;&gt;Codeception environment&lt;/a&gt; for each.</source>
          <target state="translated">Firefoxを使用するには、&lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriverを&lt;/a&gt;インストールします。両方を使用する場合は、それぞれに専用の&lt;a href=&quot;../07-advancedusage#Environments&quot;&gt;Codeception環境&lt;/a&gt;を設定することを検討してください。</target>
        </trans-unit>
        <trans-unit id="9c06a377d6b094601a6e07f57dc613cc667689e0" translate="yes" xml:space="preserve">
          <source>To use special chars in Header Key use HTML Character Entities: Example: Header with underscore - &amp;lsquo;Client_Id&amp;rsquo; should be represented as - &amp;lsquo;Client_Id&amp;rsquo; or &amp;lsquo;Client_Id&amp;rsquo;</source>
          <target state="translated">ヘッダーキーで特殊文字を使用するには、HTML文字エンティティを使用します。例：アンダースコア付きのヘッダー-「Client_Id」は、「Client_Id」または「Client_Id」として表す必要があります</target>
        </trans-unit>
        <trans-unit id="6ced7ef2807720acf926345c72cefb9cee87ff46" translate="yes" xml:space="preserve">
          <source>To use the Doctrine2 Module in acceptance tests, set up your &lt;code&gt;acceptance.suite.yml&lt;/code&gt; like this:</source>
          <target state="translated">受け入れテストでDoctrine2モジュールを使用するには、 &lt;code&gt;acceptance.suite.yml&lt;/code&gt; を次のように設定します。</target>
        </trans-unit>
        <trans-unit id="ef117c20e4a675667cac9d0787e1d09be36bdc74" translate="yes" xml:space="preserve">
          <source>To use this module with Composer you need &lt;em&gt;&quot;php-amqplib/php-amqplib&quot;: &quot;~2.4&quot;&lt;/em&gt; package.</source>
          <target state="translated">このモジュールをComposerで使用するには、&lt;em&gt;「php-amqplib / php-amqplib」：「〜2.4」&lt;/em&gt;パッケージが必要です。</target>
        </trans-unit>
        <trans-unit id="b60bce65685c3347e271f1b66c68750c9a5f06f7" translate="yes" xml:space="preserve">
          <source>Transforms strict locator, \Facebook\WebDriver\WebDriverBy into a string represenation</source>
          <target state="translated">strict locator,˶ˆ꒳ˆ˵ ˶ˆ꒳ˆ˵ )</target>
        </trans-unit>
        <trans-unit id="101f3741d8524f88095e386945c54326e8d904b4" translate="yes" xml:space="preserve">
          <source>Traverses to parent</source>
          <target state="translated">親へのトラバース</target>
        </trans-unit>
        <trans-unit id="6ac3dc47355ca9d12a788e3a61d412eb752cf76e" translate="yes" xml:space="preserve">
          <source>Traverses to parent with $name</source>
          <target state="translated">name を持つ親へのトラバース</target>
        </trans-unit>
        <trans-unit id="b418c6739c7c1ad0864642ef766933e54096f710" translate="yes" xml:space="preserve">
          <source>Travis CI is popular service CI with good GitHub integration. Codeception is self-tested with Travis CI. There nothing special about configuration. Just add to the bottom line of travis configuration:</source>
          <target state="translated">Travis CIはGitHubとの連携が良いと評判のサービスCIです。CodeceptionはTravis CIでセルフテストされています。設定に関しては特別なことは何もありません。Travisの設定の一番下の行に追加するだけです。</target>
        </trans-unit>
        <trans-unit id="964727c168089a045439cac900375d0f513ace0f" translate="yes" xml:space="preserve">
          <source>Travis doesn&amp;rsquo;t provide visualization for XML or HTML reports so you can&amp;rsquo;t view reports in format any different than console output. However, Codeception produces nice console output with detailed error reports.</source>
          <target state="translated">TravisはXMLまたはHTMLレポートの視覚化を提供しないため、コンソール出力とは異なる形式でレポートを表示することはできません。ただし、Codeceptionは詳細なエラーレポートを含む優れたコンソール出力を生成します。</target>
        </trans-unit>
        <trans-unit id="318d69ee32677736aa58edcba1771fdb587d930c" translate="yes" xml:space="preserve">
          <source>TravisCI</source>
          <target state="translated">TravisCI</target>
        </trans-unit>
        <trans-unit id="089b6f034200d1fb8ee514e56def286e46325e79" translate="yes" xml:space="preserve">
          <source>Triggered by</source>
          <target state="translated">によってトリガーされた</target>
        </trans-unit>
        <trans-unit id="c41ebe83bed402fa9c25d413dd00b111da4d91d9" translate="yes" xml:space="preserve">
          <source>Try to execute test commands in run-time. You may try commands before writing the test.</source>
          <target state="translated">ランタイムでテストコマンドを実行してみる テストを書く前にコマンドを試してみてください。</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="c12db084084adfb30a4cae99ab64377dce6931a7" translate="yes" xml:space="preserve">
          <source>Ubiquitous Language</source>
          <target state="translated">ユビキタスげんご</target>
        </trans-unit>
        <trans-unit id="2cef0574f5f47b0e045384e0b7c4ef0a0f4cc932" translate="yes" xml:space="preserve">
          <source>Under the hood, Codeception uses Symfony&amp;rsquo;s &lt;a href=&quot;https://symfony.com/doc/current/components/browser_kit.html&quot;&gt;BrowserKit&lt;/a&gt; to &amp;ldquo;send&amp;rdquo; requests to your app. So there&amp;rsquo;s no real HTTP request made, but rather a BrowserKit &lt;a href=&quot;https://github.com/symfony/browser-kit/blob/master/Request.php&quot;&gt;Request object&lt;/a&gt; with the required properties is passed to your framework&amp;rsquo;s (font-)controller.</source>
          <target state="translated">内部的には、CodeceptionはSymfonyの&lt;a href=&quot;https://symfony.com/doc/current/components/browser_kit.html&quot;&gt;BrowserKit&lt;/a&gt;を使用してアプリにリクエストを「送信」します。したがって、実際のHTTP要求は行われず、必要なプロパティを持つBrowserKit &lt;a href=&quot;https://github.com/symfony/browser-kit/blob/master/Request.php&quot;&gt;Requestオブジェクト&lt;/a&gt;がフレームワークの（フォント）コントローラーに渡されます。</target>
        </trans-unit>
        <trans-unit id="8e802de522ed181b680166c0cf2b1bfb340ea46e" translate="yes" xml:space="preserve">
          <source>Unit &amp;amp; Integration Tests</source>
          <target state="translated">ユニット＆統合テスト</target>
        </trans-unit>
        <trans-unit id="438d23452047f4defac8e18aecae37372fcea335" translate="yes" xml:space="preserve">
          <source>Unit Testing</source>
          <target state="translated">ユニットテスト</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">ユニットテスト</target>
        </trans-unit>
        <trans-unit id="69c9113ad75da6e23f23a276dff26e75c7de4dc5" translate="yes" xml:space="preserve">
          <source>Unit tests</source>
          <target state="translated">ユニットテスト</target>
        </trans-unit>
        <trans-unit id="093a6f59d989ca219c6df29d2f717dc0911e257a" translate="yes" xml:space="preserve">
          <source>Unit tests are focused around a single component of an application. All external dependencies for components should be replaced with test doubles.</source>
          <target state="translated">ユニットテストは、アプリケーションの単一のコンポーネントに焦点を当てています。コンポーネントのためのすべての外部依存関係は、テストダブルスで置き換えられなければなりません。</target>
        </trans-unit>
        <trans-unit id="79d8ccf694b57cc40db97182ed89c3723fa178fc" translate="yes" xml:space="preserve">
          <source>Unlike unit tests integration tests doesn&amp;rsquo;t require the code to be executed in isolation. That allows us to use database and other components inside a tests. To improve the testing experience modules can be used as in functional testing.</source>
          <target state="translated">単体テストとは異なり、統合テストでは、コードを個別に実行する必要はありません。これにより、テスト内でデータベースやその他のコンポーネントを使用できます。テストエクスペリエンスを向上させるために、機能テストと同様にモジュールを使用できます。</target>
        </trans-unit>
        <trans-unit id="1c4bd6b731511260187edb0ff454a6385cdfb786" translate="yes" xml:space="preserve">
          <source>Unselect an option in the given select box.</source>
          <target state="translated">指定されたセレクトボックス内のオプションの選択を解除します。</target>
        </trans-unit>
        <trans-unit id="7c481ebe53fffafd89d12a9c690edf2fd7fa1529" translate="yes" xml:space="preserve">
          <source>Unsets cookie with the given name. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; in array passed as last argument.</source>
          <target state="translated">指定された名前のCookieの設定を解除します。 &lt;code&gt;domain&lt;/code&gt; 、最後の引数として渡された配列の &lt;code&gt;path&lt;/code&gt; などの追加のCookieパラメータを設定できます。</target>
        </trans-unit>
        <trans-unit id="ed417b7548a070c53e2447ebd3a2c62b605cbc2c" translate="yes" xml:space="preserve">
          <source>Unticks a checkbox.</source>
          <target state="translated">チェックボックスのチェックを解除します。</target>
        </trans-unit>
        <trans-unit id="d961c1bff4cf85c6a8926638334035036c37cedf" translate="yes" xml:space="preserve">
          <source>Update an SQL record into a database.</source>
          <target state="translated">SQLレコードをデータベースに更新します。</target>
        </trans-unit>
        <trans-unit id="0afb34e6814e67d2abbef01e654b09e4ca91b72d" translate="yes" xml:space="preserve">
          <source>Uri of currently opened page.</source>
          <target state="translated">現在開いているページのウリ。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">使用例。</target>
        </trans-unit>
        <trans-unit id="2c0479bd4e810153542fd7b994858839c8e3b6a3" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;-use-vendor-bin&lt;/code&gt; is optional. This option will work for most Codeception projects, where Codeception is located in your &lt;code&gt;vendor/bin&lt;/code&gt; folder. But in case you are using a global Codeception installation for example, you wouldn&amp;rsquo;t use this option.</source>
          <target state="translated">&lt;code&gt;-use-vendor-bin&lt;/code&gt; の使用はオプションです。このオプションは、Codeceptionが &lt;code&gt;vendor/bin&lt;/code&gt; フォルダーにあるほとんどのCodeceptionプロジェクトで機能します。ただし、たとえばグローバルなCodeceptionインストールを使用している場合は、このオプションを使用しません。</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="64c1b824ca2650767bd47c3981870317f3986b9d" translate="yes" xml:space="preserve">
          <source>Use 3rd parameter to pass in custom &lt;code&gt;OutputInterface&lt;/code&gt;</source>
          <target state="translated">3番目のパラメーターを使用してカスタム &lt;code&gt;OutputInterface&lt;/code&gt; を渡す</target>
        </trans-unit>
        <trans-unit id="ea76dd730931b0d28b89e1879d0ff390c608aed5" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;module parameters&lt;/a&gt; to set the database credentials from environment variables or from application configuration files.</source>
          <target state="translated">&lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;モジュールパラメータ&lt;/a&gt;を使用して、環境変数またはアプリケーション構成ファイルからデータベース資格情報を設定します。</target>
        </trans-unit>
        <trans-unit id="8f17ad0a09d5bd4e7ede03bbab7690f19923257b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Lib/Generator&quot;&gt;Codeception generators&lt;/a&gt; to create other support classes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Lib/Generator&quot;&gt;Codeceptionジェネレーター&lt;/a&gt;を使用して、他のサポートクラスを作成します。</target>
        </trans-unit>
        <trans-unit id="aa8713fa1dff2df9dbc86417ee5051118d9b5246" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/4.0/src/Codeception/Lib/Generator&quot;&gt;Codeception generators&lt;/a&gt; to create other support classes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Codeception/Codeception/tree/4.0/src/Codeception/Lib/Generator&quot;&gt;Codeceptionジェネレーター&lt;/a&gt;を使用して、他のサポートクラスを作成します。</target>
        </trans-unit>
        <trans-unit id="7f5fd178280c408178b73de22118aeb3247946b9" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;modules/zf2&quot;&gt;the ZF2 module&lt;/a&gt; to run functional tests inside Zend Framework 2:</source>
          <target state="translated">&lt;a href=&quot;modules/zf2&quot;&gt;ZF2モジュール&lt;/a&gt;を使用して、 Zend Framework 2内で機能テストを実行します。</target>
        </trans-unit>
        <trans-unit id="427c9493a6d4b23580b9c6ab4db6eab72d2ed6f2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;\Codeception\Util\Xml::build()&lt;/code&gt; to create XmlBuilder instance.</source>
          <target state="translated">使用 &lt;code&gt;\Codeception\Util\Xml::build()&lt;/code&gt; XmlBuilderインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="97827f3f50242ca9ae282f3fd03834d57add2d26" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;createDirectoryFor&lt;/code&gt;, &lt;code&gt;createEmptyDirectory&lt;/code&gt; methods to create directories</source>
          <target state="translated">使用 &lt;code&gt;createDirectoryFor&lt;/code&gt; 、 &lt;code&gt;createEmptyDirectory&lt;/code&gt; ディレクトリを作成する方法</target>
        </trans-unit>
        <trans-unit id="c09e353912b0029ce897a5e31497b33ba357ee8c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;createHelper&lt;/code&gt;, &lt;code&gt;createActor&lt;/code&gt; methods to create helpers and actors.</source>
          <target state="translated">使用 &lt;code&gt;createHelper&lt;/code&gt; 、 &lt;code&gt;createActor&lt;/code&gt; のヘルパーや俳優を作成するための方法。</target>
        </trans-unit>
        <trans-unit id="7843ecea53860c09514a940d6c48bf5554801a89" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sendSoapRequest&lt;/code&gt; method to define the body of your request.</source>
          <target state="translated">使用 &lt;code&gt;sendSoapRequest&lt;/code&gt; のリクエストのボディを定義するための方法。</target>
        </trans-unit>
        <trans-unit id="b218af2f5bb8c27317a38e525e728eb392c4e6a1" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to create a model. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravelのモデルファクトリを使用してモデルを作成します。Laravel 5.1以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="7b12d404c7eeab51ca99fd927956583228852621" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to create multiple models. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravelのモデルファクトリを使用して複数のモデルを作成します。Laravel 5.1以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="342d185470b1587e8cf4b294b51d8780265e8329" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to create multiple models. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">Laravelのモデルファクトリを使用して複数のモデルを作成します。Lumen 5.1以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="ebf0625a741ab3e73c9ba5178a08a97036353639" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to make a model instance. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravelのモデルファクトリを使用して、モデルインスタンスを作成します。Laravel 5.1以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="73f275b2b14d20bd2b3109f98b2e23e597f5748e" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to make multiple model instances. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravelのモデルファクトリを使用して、複数のモデルインスタンスを作成します。Laravel 5.1以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="015b34f64fae6e607e867f495c0744b3f30b9f13" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to make multiple model instances. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">Laravelのモデルファクトリを使用して、複数のモデルインスタンスを作成します。Lumen 5.1以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="0465b0c50dfe6c7d8972a5b914a263aa279bab36" translate="yes" xml:space="preserve">
          <source>Use Lumen&amp;rsquo;s model factory to create a model. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">Lumenのモデルファクトリを使用してモデルを作成します。Lumen 5.1以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="ccb60369b26233d201b8e50d5332338571574b9b" translate="yes" xml:space="preserve">
          <source>Use Lumen&amp;rsquo;s model factory to make a model instance. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">Lumenのモデルファクトリを使用してモデルインスタンスを作成します。Lumen 5.1以降でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="77511f54cfe4f011fe04bd56b660d4623773432b" translate="yes" xml:space="preserve">
          <source>Use StepObjects when you have multiple areas of applications or multiple roles.</source>
          <target state="translated">アプリケーションの領域が複数ある場合や、複数の役割がある場合には、StepObjectsを使用します。</target>
        </trans-unit>
        <trans-unit id="339889acfb48328c8fe4fdfa480caa4a7402239d" translate="yes" xml:space="preserve">
          <source>Use `\Codeception\Util\Xml::build()` to create XmlBuilder instance.</source>
          <target state="translated">XmlBuilderのインスタンスを作成するには、`\CodeceptionUtilXml::build()`を使用します。</target>
        </trans-unit>
        <trans-unit id="d92c395228305ffcecdf6dc55917319aa1b87b9c" translate="yes" xml:space="preserve">
          <source>Use actor classes to set common actions which can be used accross a suite.</source>
          <target state="translated">アクタクラスを使用して、スイート全体で使用できる共通のアクションを設定します。</target>
        </trans-unit>
        <trans-unit id="6c46596bf9954744ffd424fc4503dca0baf68d9f" translate="yes" xml:space="preserve">
          <source>Use it in Helpers or GroupObject or Extension classes:</source>
          <target state="translated">ヘルパーやグループオブジェクト、拡張クラスで使用します。</target>
        </trans-unit>
        <trans-unit id="4a2f73c017ebeda5cf163c6db1b1432ffe00ac2b" translate="yes" xml:space="preserve">
          <source>Use methods like &lt;code&gt;say&lt;/code&gt;, &lt;code&gt;saySuccess&lt;/code&gt;, &lt;code&gt;sayWarning&lt;/code&gt;, &lt;code&gt;sayError&lt;/code&gt;, &lt;code&gt;ask&lt;/code&gt;, to interact with a user.</source>
          <target state="translated">&lt;code&gt;say&lt;/code&gt; 、 &lt;code&gt;saySuccess&lt;/code&gt; 、 &lt;code&gt;sayWarning&lt;/code&gt; 、 &lt;code&gt;sayError&lt;/code&gt; 、 &lt;code&gt;ask&lt;/code&gt; のようなメソッドを使用して、ユーザーと対話します。</target>
        </trans-unit>
        <trans-unit id="26a207af94a6c3abe22a94cf6c19c79623319aaf" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;params&lt;/code&gt; section of the global configuration file &lt;code&gt;codeception.yml&lt;/code&gt; to specify how to load them. You can specify several sources for parameters to be loaded from.</source>
          <target state="translated">それらをロードする方法を指定するには、グローバル設定ファイル &lt;code&gt;codeception.yml&lt;/code&gt; の &lt;code&gt;params&lt;/code&gt; セクションを使用します。ロードするパラメータのソースをいくつか指定できます。</target>
        </trans-unit>
        <trans-unit id="eabbc525e5028e36507476d1373362514ff3dc71" translate="yes" xml:space="preserve">
          <source>Use the below configuration to allow coverage mergers.</source>
          <target state="translated">以下の設定を使用して、カバレッジ合併を可能にします。</target>
        </trans-unit>
        <trans-unit id="ce04b8cde9b8e2a386af3e1bb65f290f61fe8f2e" translate="yes" xml:space="preserve">
          <source>Use this method to check XML of valid structure is returned. This method does not use schema for validation. This method does not require path from root to match the structure.</source>
          <target state="translated">このメソッドを使用して、有効な構造体のXMLが返されるかどうかをチェックします。このメソッドは検証にスキーマを使用しません。このメソッドは、構造体にマッチするルートからのパスを必要としません。</target>
        </trans-unit>
        <trans-unit id="3d0af43ff9579e2a10e4c820b5944b13fef975aa" translate="yes" xml:space="preserve">
          <source>Use to perform web acceptance tests with non-javascript browser.</source>
          <target state="translated">JavaScript以外のブラウザでWeb受入テストを行う場合に使用します。</target>
        </trans-unit>
        <trans-unit id="9d2950f71f19352163cf1fc111135a72c362c73e" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;http://guzzlephp.org/&quot;&gt;Guzzle&lt;/a&gt; to interact with your application over CURL. Module works over CURL and requires &lt;strong&gt;PHP CURL extension&lt;/strong&gt; to be enabled.</source>
          <target state="translated">&lt;a href=&quot;http://guzzlephp.org/&quot;&gt;Guzzle&lt;/a&gt;を使用して、CURL経由でアプリケーションとやり取りします。モジュールはCURLで動作し、&lt;strong&gt;PHP CURL拡張&lt;/strong&gt;を有効にする必要があり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="49a17468af0c2fc4b98867473ab4de4a50c232b6" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;config/container.php&lt;/code&gt; file by default.</source>
          <target state="translated">デフォルトでは &lt;code&gt;config/container.php&lt;/code&gt; ファイルを使用します。</target>
        </trans-unit>
        <trans-unit id="53604b949befccb2ce697597647fae371aefdae5" translate="yes" xml:space="preserve">
          <source>Using Codeception Docker image</source>
          <target state="translated">Codeception Dockerのイメージを使う</target>
        </trans-unit>
        <trans-unit id="a82c49537bdd8af32ececbfce0d931d4c7952545" translate="yes" xml:space="preserve">
          <source>Using Inside Framework</source>
          <target state="translated">インサイドフレームワークの使用</target>
        </trans-unit>
        <trans-unit id="8b74d8a06cce7b65888ba4e8c7818fe0688bd9a8" translate="yes" xml:space="preserve">
          <source>Using Modules</source>
          <target state="translated">モジュールの使用</target>
        </trans-unit>
        <trans-unit id="edd561d8b75ac9103b45a7fea602ea861769b973" translate="yes" xml:space="preserve">
          <source>Using id param inside prefix:</source>
          <target state="translated">接頭辞の中でidパラメータを使用しています。</target>
        </trans-unit>
        <trans-unit id="9fd56293bce41aa2f336f882b719322f97000fa9" translate="yes" xml:space="preserve">
          <source>Using regular expressions, you can even run many different test methods from the same directory or class. For example, this will execute all acceptance tests from the &lt;code&gt;backend&lt;/code&gt; dir beginning with the word &amp;ldquo;login&amp;rdquo;:</source>
          <target state="translated">正規表現を使用すると、同じディレクトリまたはクラスからさまざまなテストメソッドを実行することもできます。たとえば、これは「login」という単語で始まる &lt;code&gt;backend&lt;/code&gt; ディレクトリからすべての受け入れテストを実行します。</target>
        </trans-unit>
        <trans-unit id="0d8f0980bee57007ff331ed1717e3eafde48959f" translate="yes" xml:space="preserve">
          <source>Usually, as soon as any assertion fails, further assertions of this test will be skipped. Sometimes you don&amp;rsquo;t want this - maybe you have a long-running test and you want it to run to the end. In this case, you can use conditional assertions. Each &lt;code&gt;see&lt;/code&gt; method has a corresponding &lt;code&gt;canSee&lt;/code&gt; method, and &lt;code&gt;dontSee&lt;/code&gt; has a &lt;code&gt;cantSee&lt;/code&gt; method:</source>
          <target state="translated">通常、アサーションが失敗するとすぐに、このテストのそれ以上のアサーションはスキップされます。たまに、これを望まない場合があります。おそらく、長時間実行されるテストがあり、最後まで実行したい場合があります。この場合、条件付きアサーションを使用できます。各 &lt;code&gt;see&lt;/code&gt; メソッドには対応する &lt;code&gt;canSee&lt;/code&gt; メソッドがあり、 &lt;code&gt;dontSee&lt;/code&gt; には &lt;code&gt;cantSee&lt;/code&gt; メソッドがあります。</target>
        </trans-unit>
        <trans-unit id="2b3847359f8c907cdc41efd5dd7b2019aeffe9ae" translate="yes" xml:space="preserve">
          <source>Util Class: Autoload</source>
          <target state="translated">Util クラス。オートロード</target>
        </trans-unit>
        <trans-unit id="1efa2bcc7a492c0e99c457748e377ea1cf59ed38" translate="yes" xml:space="preserve">
          <source>Util Class: Fixtures</source>
          <target state="translated">利用クラス。器具</target>
        </trans-unit>
        <trans-unit id="557be4d90699fd937e7e6b156960541daec7b455" translate="yes" xml:space="preserve">
          <source>Util Class: HttpCode</source>
          <target state="translated">Util クラス。HttpCode</target>
        </trans-unit>
        <trans-unit id="66be33d34c9b2b0749977134996bfbcf1e44cea3" translate="yes" xml:space="preserve">
          <source>Util Class: JsonType</source>
          <target state="translated">Util クラスです。JsonType</target>
        </trans-unit>
        <trans-unit id="42286bd888541d407d94f8dc5165f0680e083244" translate="yes" xml:space="preserve">
          <source>Util Class: Locator</source>
          <target state="translated">Util クラス。ロケータ</target>
        </trans-unit>
        <trans-unit id="8f89904bb314cd5d8d0f309a1c3307ebe92ad86c" translate="yes" xml:space="preserve">
          <source>Util Class: XmlBuilder</source>
          <target state="translated">Util クラスです。XmlBuilder</target>
        </trans-unit>
        <trans-unit id="a9495c1eb40c0d8ee262c68c204eefb2c15744a2" translate="yes" xml:space="preserve">
          <source>Validate JSON structures</source>
          <target state="translated">JSON 構造体の検証</target>
        </trans-unit>
        <trans-unit id="8bb82da3a52d668c56c1f544fe8b2a816d883e4b" translate="yes" xml:space="preserve">
          <source>Validates and prints Codeception config. Use it do debug Yaml configs</source>
          <target state="translated">Codeceptionの設定を検証して表示します。これを使ってYamlの設定をデバッグします。</target>
        </trans-unit>
        <trans-unit id="b9ee614409f809fdd0214192be30356291c015c9" translate="yes" xml:space="preserve">
          <source>Validates current config for required fields and required packages.</source>
          <target state="translated">必須フィールドと必須パッケージの現在の設定を検証します。</target>
        </trans-unit>
        <trans-unit id="962aee5c9adbe4ad1b2cd98fed700b4073e03347" translate="yes" xml:space="preserve">
          <source>Validating Data JSON Responses</source>
          <target state="translated">データ JSON レスポンスの検証</target>
        </trans-unit>
        <trans-unit id="172c0b33f1a892e80af1523ad3f16ab63c0bbb75" translate="yes" xml:space="preserve">
          <source>Variable names are being taken from config and DSN which has a &lt;code&gt;keyword=value&lt;/code&gt; format, so you should expect to have a variable named as the keyword with the full value inside it.</source>
          <target state="translated">変数名は、config &lt;code&gt;keyword=value&lt;/code&gt; DSNから取得されます。これは、keyword = valueの形式であるため、キーワードとして名前が付けられた変数に、完全な値が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="42a926a04a5ee86f7e230a7e3a6330aa4f0dbe5f" translate="yes" xml:space="preserve">
          <source>Verbosity modes:</source>
          <target state="translated">冗長モード。</target>
        </trans-unit>
        <trans-unit id="34dbd5c4c8a64801891d960b57133767c3104fe7" translate="yes" xml:space="preserve">
          <source>Wait</source>
          <target state="translated">Wait</target>
        </trans-unit>
        <trans-unit id="2b5b11e8530c71484f706e91f77fbd5465fc7b0c" translate="yes" xml:space="preserve">
          <source>Wait and Act</source>
          <target state="translated">待機と行動</target>
        </trans-unit>
        <trans-unit id="9b83705efd4960cd9723d3f58a955ea8e6255767" translate="yes" xml:space="preserve">
          <source>Wait for $timeout seconds.</source>
          <target state="translated">タイムアウトの秒数を待ちます。</target>
        </trans-unit>
        <trans-unit id="d4acd5d8867fc97d7a5c138d0b0eed4100c8a330" translate="yes" xml:space="preserve">
          <source>Waits for element and runs a sequence of actions inside its context. Actions can be defined with array, callback, or &lt;code&gt;Codeception\Util\ActionSequence&lt;/code&gt; instance.</source>
          <target state="translated">要素を待機し、そのコンテキスト内で一連のアクションを実行します。アクションは、配列、コールバック、または &lt;code&gt;Codeception\Util\ActionSequence&lt;/code&gt; インスタンスで定義できます。</target>
        </trans-unit>
        <trans-unit id="052ce80219d5e5d1863b7e16a0e5b24faf1628db" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for an element to appear on the page. If the element doesn&amp;rsquo;t appear, a timeout exception is thrown.</source>
          <target state="translated">要素がページに表示されるまで最大$ timeout秒待機します。要素が表示されない場合は、タイムアウト例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="7166b40763dcca7df03b806ec68de9862470f667" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to be clickable. If element doesn&amp;rsquo;t become clickable, a timeout exception is thrown.</source>
          <target state="translated">指定された要素がクリック可能になるまで、最大$ timeout秒待機します。要素がクリック可能にならない場合、タイムアウト例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="a75b7f53ad4c0021f596671919a05566cafab59c" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to be visible on the page. If element doesn&amp;rsquo;t appear, a timeout exception is thrown.</source>
          <target state="translated">指定された要素がページに表示されるまで最大$ timeout秒待機します。要素が表示されない場合は、タイムアウト例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="7ea81dc72a0289cac2d92c622bc6e5447009f3eb" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to become invisible. If element stays visible, a timeout exception is thrown.</source>
          <target state="translated">指定した要素が見えなくなるまで $timeout 秒まで待ちます。要素が表示されたままの場合、タイムアウト例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="638800b34a2aa2c22d25bda1b9d9d287712a8b2b" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to change. Element &amp;ldquo;change&amp;rdquo; is determined by a callback function which is called repeatedly until the return value evaluates to true.</source>
          <target state="translated">指定された要素が変更されるまで最大$ timeout秒待機します。要素の「変更」は、戻り値がtrueと評価されるまで繰り返し呼び出されるコールバック関数によって決定されます。</target>
        </trans-unit>
        <trans-unit id="4522e2bf6c2b32c62e65115a165edc86fd643338" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given string to appear on the page.</source>
          <target state="translated">指定した文字列がページに表示されるのを$timeout秒まで待ちます。</target>
        </trans-unit>
        <trans-unit id="c292ecff522efe9defa16b9c8a1b9521ff69da18" translate="yes" xml:space="preserve">
          <source>Warning. Using PHAR file and composer in the same project can cause unexpected errors.</source>
          <target state="translated">警告。同じプロジェクトでPHARファイルとコンポーザーを使用すると、予期せぬエラーが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="746f1a7e0c9a5843efa70bf48435ef8cc9ecbe40" translate="yes" xml:space="preserve">
          <source>We also have other useful commands to perform checks. Please note that they all start with the &lt;code&gt;see&lt;/code&gt; prefix:</source>
          <target state="translated">チェックを実行するための他の便利なコマンドもあります。これらはすべて、 &lt;code&gt;see&lt;/code&gt; プレフィックスで始まることに注意してください。</target>
        </trans-unit>
        <trans-unit id="08a4e6b1466883421ce109dcac434f4dd6c747b9" translate="yes" xml:space="preserve">
          <source>We are using &lt;code&gt;Codeception\Util\Xml&lt;/code&gt; class which allows us to build XML structures in a clean manner. The &lt;code&gt;toXml&lt;/code&gt; method may accept a string or array and returns \DOMDocument instance. If your XML contains attributes and so can&amp;rsquo;t be represented as a PHP array you can create XML using the &lt;a href=&quot;reference/xmlbuilder&quot;&gt;XmlBuilder&lt;/a&gt; class. We will take a look at it a bit more in next section.</source>
          <target state="translated">私たちは、きれいな方法でXML構造を構築できるようにする &lt;code&gt;Codeception\Util\Xml&lt;/code&gt; クラスを使用しています。 &lt;code&gt;toXml&lt;/code&gt; の方法は、文字列または配列を返す\のDOMDocumentインスタンスを受け入れることができます。XMLに属性が含まれているためにPHP配列として表現できない場合は、&lt;a href=&quot;reference/xmlbuilder&quot;&gt;XmlBuilder&lt;/a&gt;クラスを使用してXMLを作成できます。次のセクションで、もう少し詳しく見ていきます。</target>
        </trans-unit>
        <trans-unit id="b8d0a302cb7dfcf3c10f18822cf57ad1698f6bb5" translate="yes" xml:space="preserve">
          <source>We can click links to open web pages:</source>
          <target state="translated">リンクをクリックしてウェブページを開くことができます。</target>
        </trans-unit>
        <trans-unit id="ecaf768c6d4fc9557d651a87e8eaaa21e650dd3e" translate="yes" xml:space="preserve">
          <source>We can define different databases for different processes. This can be done using &lt;a href=&quot;07-advancedusage#Environments&quot;&gt;Environments&lt;/a&gt;. Let&amp;rsquo;s define 5 new environments in &lt;code&gt;acceptance.suite.yml&lt;/code&gt;:</source>
          <target state="translated">プロセスごとに異なるデータベースを定義できます。これは、&lt;a href=&quot;07-advancedusage#Environments&quot;&gt;環境&lt;/a&gt;を使用して行うことができます。さんが5つの新しい環境を定義してみましょう &lt;code&gt;acceptance.suite.yml&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7e85f65f65e534f3089143c188e991fea85242eb" translate="yes" xml:space="preserve">
          <source>We can dry-run (or run) our feature file to see that Given/When/Then are expanded with substeps:</source>
          <target state="translated">フィーチャファイルをドライラン(または実行)して、Given/When/Thenがサブステップで展開されていることを確認することができます。</target>
        </trans-unit>
        <trans-unit id="b35049e326c23be497c8e28700899bfc4cb92b0d" translate="yes" xml:space="preserve">
          <source>We can submit forms as well:</source>
          <target state="translated">フォームの提出も可能です。</target>
        </trans-unit>
        <trans-unit id="066fa4ab7752275e2612f8301d16d5c6662650d0" translate="yes" xml:space="preserve">
          <source>We can test this scenario by executing it in dry-run mode. In this mode test won&amp;rsquo;t be executed (actually, we didn&amp;rsquo;t define any step for it, so it won&amp;rsquo;t be executed in any case).</source>
          <target state="translated">このシナリオは、模擬モードで実行することでテストできます。このモードでは、テストは実行されません（実際には、ステップは定義されていないため、どのような場合でも実行されません）。</target>
        </trans-unit>
        <trans-unit id="ef0a8409eb1de1caec49d10c582cb0298eb47036" translate="yes" xml:space="preserve">
          <source>We can try to write such simple story:</source>
          <target state="translated">そんな簡単な話を書いてみる。</target>
        </trans-unit>
        <trans-unit id="25000bbf6ae0063dcc6aabfc7ecea74c2f32dd44" translate="yes" xml:space="preserve">
          <source>We can use HTTP code constants from &lt;code&gt;Codeception\Util\HttpCode&lt;/code&gt; instead of numeric values to check response code in &lt;code&gt;seeResponseCodeIs&lt;/code&gt; and &lt;code&gt;dontSeeResponseCodeIs&lt;/code&gt; methods.</source>
          <target state="translated">私たちは、からHTTPコード定数を使用することができます &lt;code&gt;Codeception\Util\HttpCode&lt;/code&gt; に応答コードをチェックする代わりに、数値 &lt;code&gt;seeResponseCodeIs&lt;/code&gt; と &lt;code&gt;dontSeeResponseCodeIs&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="2460b44966389092f2bd975a1d07a0525c60cd19" translate="yes" xml:space="preserve">
          <source>We have &lt;code&gt;_before&lt;/code&gt; and &lt;code&gt;_after&lt;/code&gt; methods to run some common actions before and after a test. And we have a placeholder action &lt;code&gt;tryToTest&lt;/code&gt; which we need to implement. If we try to test a signin process it&amp;rsquo;s a good start to test a successful signin. Let&amp;rsquo;s rename this method to &lt;code&gt;signInSuccessfully&lt;/code&gt;.</source>
          <target state="translated">我々は持っている &lt;code&gt;_before&lt;/code&gt; と &lt;code&gt;_after&lt;/code&gt; 試験前後のいくつかの一般的なアクションを実行するための方法を。そして、実装する必要のあるプレースホルダーアクション &lt;code&gt;tryToTest&lt;/code&gt; があります。サインインプロセスをテストする場合は、サインインの成功をテストするための良いスタートです。このメソッドの名前を &lt;code&gt;signInSuccessfully&lt;/code&gt; に変更しましょう。</target>
        </trans-unit>
        <trans-unit id="015400e5ef6f87e5cb4bd1c52ec09af1e7d3704e" translate="yes" xml:space="preserve">
          <source>We have already demonstrated this in a previous example where we accessed the Entity Manager from a Doctrine2 module:</source>
          <target state="translated">前の例では Doctrine2 モジュールから Entity Manager にアクセスしてみました。</target>
        </trans-unit>
        <trans-unit id="228bf32f37a287c9d1fec382bb668954ac560904" translate="yes" xml:space="preserve">
          <source>We have taken a look into the Codeception structure. Most of the things you need were already generated by the &lt;code&gt;bootstrap&lt;/code&gt; command. After you have reviewed the basic concepts and configurations, you can start writing your first scenario.</source>
          <target state="translated">Codeceptionの構造を調べました。必要なもののほとんどは、すでに &lt;code&gt;bootstrap&lt;/code&gt; コマンドによって生成されています。基本的な概念と構成を確認したら、最初のシナリオの作成を開始できます。</target>
        </trans-unit>
        <trans-unit id="335e28c45160c43b5710d51a34a79750d36189b4" translate="yes" xml:space="preserve">
          <source>We included the Laravel5 module the same way we did for functional testing. Let&amp;rsquo;s see how we can use it for integration tests:</source>
          <target state="translated">機能テストの場合と同じ方法でLaravel5モジュールを含めました。それを統合テストに使用する方法を見てみましょう：</target>
        </trans-unit>
        <trans-unit id="95a235ca436c2bbb3678abb93635f3fdefcc5021" translate="yes" xml:space="preserve">
          <source>We need to add some new lines to &lt;code&gt;acceptance.suite.yml&lt;/code&gt;:</source>
          <target state="translated">私たちは、にいくつかの新しい行を追加する必要があり &lt;code&gt;acceptance.suite.yml&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="851c8ee512612a9b7a90b1fcc84ab03f47ba7d91" translate="yes" xml:space="preserve">
          <source>We need to define build steps. The most simple setup may look like this:</source>
          <target state="translated">ビルドステップを定義する必要があります。最もシンプルな設定は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="c6a434b7a6c5e1d2283f47e5c2af8f92734ef731" translate="yes" xml:space="preserve">
          <source>We need to specify the &lt;code&gt;url&lt;/code&gt; parameter in the acceptance suite config:</source>
          <target state="translated">アクセプタンススイート構成で &lt;code&gt;url&lt;/code&gt; パラメータを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="9f791ef4254ae107df656e2433ecd82a612e4b1a" translate="yes" xml:space="preserve">
          <source>We prepared a sample config with codeception, web server, database, and selenium with Chrome to be executed together.</source>
          <target state="translated">コードプション、ウェブサーバ、データベース、セレンをChromeと一緒に実行するサンプル設定を用意しました。</target>
        </trans-unit>
        <trans-unit id="4899b6be6f25a9d1e4c9bbae4264a5bcf05a33f7" translate="yes" xml:space="preserve">
          <source>We propose to perform those steps using a task runner. In this guide we will use &lt;a href=&quot;http://robo.li&quot;&gt;&lt;strong&gt;Robo&lt;/strong&gt;&lt;/a&gt; task runner. It is a modern PHP task runner that is very easy to use. It uses &lt;a href=&quot;https://symfony.com/doc/current/components/process.html&quot;&gt;Symfony Process&lt;/a&gt; to spawn background and parallel processes. Just what we need for the step 2! What about steps 1 and 3? We have created robo &lt;a href=&quot;https://github.com/Codeception/robo-paracept&quot;&gt;tasks&lt;/a&gt; for splitting tests into groups and merging resulting JUnit XML reports.</source>
          <target state="translated">タスクランナーを使用してこれらの手順を実行することをお勧めします。このガイドでは、&lt;a href=&quot;http://robo.li&quot;&gt;&lt;strong&gt;Robo&lt;/strong&gt;&lt;/a&gt;タスクランナーを使用します。非常に使いやすい最新のPHPタスクランナーです。&lt;a href=&quot;https://symfony.com/doc/current/components/process.html&quot;&gt;Symfonyプロセス&lt;/a&gt;を使用して、バックグラウンドプロセスと並列プロセスを生成します。ステップ2に必要なものだけです。ステップ1と3はどうですか？私たちは、ロボ作成した&lt;a href=&quot;https://github.com/Codeception/robo-paracept&quot;&gt;タスク&lt;/a&gt;のグループに分割テストのためにとJUnit XMLレポートを結果としてマージします。</target>
        </trans-unit>
        <trans-unit id="021ed2ff3be23aafe143a76f36569602110dc6f0" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;params&lt;/a&gt; to provide authorization credentials.</source>
          <target state="translated">承認資格情報を提供するために&lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;params&lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7e715b7d3c62535db72a1d05c9fee9c0c03a2ebb" translate="yes" xml:space="preserve">
          <source>We should see a step-by-step report on the performed actions:</source>
          <target state="translated">私たちは、実行されたアクションのステップバイステップのレポートを見るべきです。</target>
        </trans-unit>
        <trans-unit id="c991be81acea56ac976a79ae61660a24204cbc2b" translate="yes" xml:space="preserve">
          <source>We should start by creating a test with the next command:</source>
          <target state="translated">まずは次のコマンドでテストを作成してみましょう。</target>
        </trans-unit>
        <trans-unit id="11b28ad8a3030bf3aa2742e21119881003659230" translate="yes" xml:space="preserve">
          <source>We will assume that all actions starting with &lt;code&gt;am&lt;/code&gt; and &lt;code&gt;have&lt;/code&gt; describe the initial environment. The &lt;code&gt;amOnPage&lt;/code&gt; action sets the starting point of a test to the &lt;code&gt;/login&lt;/code&gt; page.</source>
          <target state="translated">&lt;code&gt;am&lt;/code&gt; で始まるすべてのアクションが想定され、初期環境 &lt;code&gt;have&lt;/code&gt; 記述されています。 &lt;code&gt;amOnPage&lt;/code&gt; のアクションはへのテストの開始ポイント設定 &lt;code&gt;/login&lt;/code&gt; ページを。</target>
        </trans-unit>
        <trans-unit id="fe408f86092303c584e7e38c939926d337e610f6" translate="yes" xml:space="preserve">
          <source>We will put all the api tests there.</source>
          <target state="translated">そこに全てのAPIテストを置いておきます。</target>
        </trans-unit>
        <trans-unit id="e066930bd9bba98fa8a61e6dae0a402c24830666" translate="yes" xml:space="preserve">
          <source>We will start writing our first acceptance tests with PhpBrowser.</source>
          <target state="translated">PhpBrowserを使って、最初の受け入れテストを書き始めます。</target>
        </trans-unit>
        <trans-unit id="964fdf4a0607fa55a48cbb0b9fff2e31bb2043f3" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll assume that we have a &amp;lsquo;login&amp;rsquo; page where we get authenticated by providing a username and password. Then we are sent to a user page, where we see the text &lt;code&gt;Hello, %username%&lt;/code&gt;. Let&amp;rsquo;s look at how this scenario is written in Codeception:</source>
          <target state="translated">ユーザー名とパスワードを入力して認証を受ける「ログイン」ページがあると想定します。次に、ユーザーページに送信され、ここに &lt;code&gt;Hello, %username%&lt;/code&gt; というテキストが表示されます。このシナリオがCodeceptionでどのように書かれているか見てみましょう：</target>
        </trans-unit>
        <trans-unit id="07e6ae07934ea1fa6988b1c869172b3f91e03b3d" translate="yes" xml:space="preserve">
          <source>Web Services</source>
          <target state="translated">ウェブサービス</target>
        </trans-unit>
        <trans-unit id="bda2d68e20711107d45980e7009b8c2207fc908c" translate="yes" xml:space="preserve">
          <source>WebDriver</source>
          <target state="translated">WebDriver</target>
        </trans-unit>
        <trans-unit id="0694e89f039781417567e7972d88ce4e0d2a879e" translate="yes" xml:space="preserve">
          <source>WebDriver module provides advanced methods for the browser session, however, they can only be used from Helpers.</source>
          <target state="translated">WebDriverモジュールはブラウザセッションのための高度なメソッドを提供しますが、それらはヘルパーからのみ使用することができます。</target>
        </trans-unit>
        <trans-unit id="1679a3f1c38a9516b243a2cda8db5d96053b153d" translate="yes" xml:space="preserve">
          <source>WebDriver module returns &lt;code&gt;Facebook\WebDriver\Remote\RemoteWebElement&lt;/code&gt; instances PhpBrowser and Framework modules return &lt;code&gt;Symfony\Component\DomCrawler\Crawler&lt;/code&gt; instances</source>
          <target state="translated">WebDriverモジュールが &lt;code&gt;Facebook\WebDriver\Remote\RemoteWebElement&lt;/code&gt; インスタンスを返すPhpBrowserおよびFrameworkモジュールが &lt;code&gt;Symfony\Component\DomCrawler\Crawler&lt;/code&gt; インスタンスを返す</target>
        </trans-unit>
        <trans-unit id="a314b5bc5779810b413145040a4500fb4f600869" translate="yes" xml:space="preserve">
          <source>WebDriver::_backupSession</source>
          <target state="translated">WebDriver::_backupSession</target>
        </trans-unit>
        <trans-unit id="fb93a23623f2a8af4cbd4032cc5df307c499f2cd" translate="yes" xml:space="preserve">
          <source>WebDriver::_capabilities</source>
          <target state="translated">WebDriver::_capabilities</target>
        </trans-unit>
        <trans-unit id="48040cbc91d093a0d233efee43d3329ccee19844" translate="yes" xml:space="preserve">
          <source>WebDriver::_closeSession</source>
          <target state="translated">WebDriver::_closeSession</target>
        </trans-unit>
        <trans-unit id="0297d85d7f215534bc6c5131cc58158a2e11941c" translate="yes" xml:space="preserve">
          <source>WebDriver::_findClickable</source>
          <target state="translated">WebDriver::_findClickable</target>
        </trans-unit>
        <trans-unit id="5f3393839a56bcebb5c1580647e9f6ceb707a88c" translate="yes" xml:space="preserve">
          <source>WebDriver::_findElements</source>
          <target state="translated">WebDriver::_findElements</target>
        </trans-unit>
        <trans-unit id="c457a48ab4c35826401cae3c38f64456a1199a35" translate="yes" xml:space="preserve">
          <source>WebDriver::_getCurrentUri</source>
          <target state="translated">WebDriver::_getCurrentUri</target>
        </trans-unit>
        <trans-unit id="79efeeafef6bd6dbf99aaad7ed4e7ab68dcd4b83" translate="yes" xml:space="preserve">
          <source>WebDriver::_getUrl</source>
          <target state="translated">WebDriver::_getUrl</target>
        </trans-unit>
        <trans-unit id="6b2afaaa774d5aacf79d9010a6af12b241567ab4" translate="yes" xml:space="preserve">
          <source>WebDriver::_initializeSession</source>
          <target state="translated">WebDriver::_initializeSession</target>
        </trans-unit>
        <trans-unit id="19c5c43d9312244287e1449dcff3be2ff856d346" translate="yes" xml:space="preserve">
          <source>WebDriver::_loadSession</source>
          <target state="translated">WebDriver::_loadSession</target>
        </trans-unit>
        <trans-unit id="686eb748c19dd9126f0416286c5f1a934e49d52b" translate="yes" xml:space="preserve">
          <source>WebDriver::_restart</source>
          <target state="translated">WebDriver::_restart</target>
        </trans-unit>
        <trans-unit id="839d65c8dae1ef76a6e64992c0637b34e68a4fdc" translate="yes" xml:space="preserve">
          <source>WebDriver::_savePageSource</source>
          <target state="translated">WebDriver::_savePageSource</target>
        </trans-unit>
        <trans-unit id="d23193135f8cc8242eeff77137f5221200307783" translate="yes" xml:space="preserve">
          <source>WebDriver::_saveScreenshot</source>
          <target state="translated">WebDriver::_saveScreenshot</target>
        </trans-unit>
        <trans-unit id="008d864b851a5f934db75e257ec873d4759c2f9c" translate="yes" xml:space="preserve">
          <source>WebDriver::acceptPopup</source>
          <target state="translated">WebDriver::acceptPopup</target>
        </trans-unit>
        <trans-unit id="d003d0f16e9f5b94b36906a3578e71d329c0d69e" translate="yes" xml:space="preserve">
          <source>WebDriver::amOnPage</source>
          <target state="translated">WebDriver::amOnPage</target>
        </trans-unit>
        <trans-unit id="81e7d2dd66dea4c2f42e9f2c38c7b99b70a6f938" translate="yes" xml:space="preserve">
          <source>WebDriver::amOnSubdomain</source>
          <target state="translated">WebDriver::amOnSubdomain</target>
        </trans-unit>
        <trans-unit id="9fd8fe0f0ec9cc7cadf85604df217c53d328e9fc" translate="yes" xml:space="preserve">
          <source>WebDriver::amOnUrl</source>
          <target state="translated">WebDriver::amOnUrl</target>
        </trans-unit>
        <trans-unit id="50d164521b2aeaec38abc7c0997d9eccdee55f5b" translate="yes" xml:space="preserve">
          <source>WebDriver::appendField</source>
          <target state="translated">WebDriver::appendField</target>
        </trans-unit>
        <trans-unit id="678f72b79cf04e8ffef718e61be16926ac59f415" translate="yes" xml:space="preserve">
          <source>WebDriver::attachFile</source>
          <target state="translated">WebDriver::attachFile</target>
        </trans-unit>
        <trans-unit id="bc59e14cabf993ec2f9918e4518bb137f7cd1876" translate="yes" xml:space="preserve">
          <source>WebDriver::cancelPopup</source>
          <target state="translated">WebDriver::cancelPopup</target>
        </trans-unit>
        <trans-unit id="199e459b4d61ea7921c24d58fe131c0d6efc645c" translate="yes" xml:space="preserve">
          <source>WebDriver::checkOption</source>
          <target state="translated">WebDriver::checkOption</target>
        </trans-unit>
        <trans-unit id="c716de3e5b0c5b5b659d6d9cb216c62562e04bd2" translate="yes" xml:space="preserve">
          <source>WebDriver::clearField</source>
          <target state="translated">WebDriver::clearField</target>
        </trans-unit>
        <trans-unit id="36cad5609be0127eec8d60b50bf1b5451ce5e3b2" translate="yes" xml:space="preserve">
          <source>WebDriver::click</source>
          <target state="translated">WebDriver::click</target>
        </trans-unit>
        <trans-unit id="a0466133d340a040163480e443f3c44f9991730c" translate="yes" xml:space="preserve">
          <source>WebDriver::clickWithLeftButton</source>
          <target state="translated">WebDriver::clickWithLeftButton</target>
        </trans-unit>
        <trans-unit id="91f72d22e895d407d8d5ff738fcc76b2475a4c2f" translate="yes" xml:space="preserve">
          <source>WebDriver::clickWithRightButton</source>
          <target state="translated">WebDriver::clickWithRightButton</target>
        </trans-unit>
        <trans-unit id="fe1879011f4e647dbb819ca4b6edd014bbbbd2e9" translate="yes" xml:space="preserve">
          <source>WebDriver::closeTab</source>
          <target state="translated">WebDriver::closeTab</target>
        </trans-unit>
        <trans-unit id="4fc506908eb99949cfa3e84605f1fa4d9430e459" translate="yes" xml:space="preserve">
          <source>WebDriver::debugWebDriverLogs</source>
          <target state="translated">WebDriver::debugWebDriverLogs</target>
        </trans-unit>
        <trans-unit id="c883ec628fe2ab6d2a3c24e7756cb146b28f977e" translate="yes" xml:space="preserve">
          <source>WebDriver::deleteSessionSnapshot</source>
          <target state="translated">WebDriver::deleteSessionSnapshot</target>
        </trans-unit>
        <trans-unit id="f5c6177f6063e4edb07cded27f3471f244a8c29f" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSee</source>
          <target state="translated">WebDriver::dontSee</target>
        </trans-unit>
        <trans-unit id="b7c5b438b55cbeee8df6ef0079c58d8b43b53383" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCheckboxIsChecked</source>
          <target state="translated">WebDriver::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="58581affed8ad73f8e411a4f93122a5bd79cbda3" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCookie</source>
          <target state="translated">WebDriver::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="5689d787dcf379b07a364e99030a71aea8581b3e" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCurrentUrlEquals</source>
          <target state="translated">WebDriver::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="3739886ef8ff8ae198c6e2267ecb5f11796be8fe" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCurrentUrlMatches</source>
          <target state="translated">WebDriver::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="8c399e2909e4562684c671ec5eb5266e5fa94ffb" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeElement</source>
          <target state="translated">WebDriver::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="bc93ef6f759dab0a6c0d996c1fcc7ea1cd9e9819" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeElementInDOM</source>
          <target state="translated">WebDriver::dontSeeElementInDOM</target>
        </trans-unit>
        <trans-unit id="a56b1d04971cc466dfb5c81f22d50e20d0211ed1" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInCurrentUrl</source>
          <target state="translated">WebDriver::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="f710c95e319335cc377b06f6c2dd4ed07105ecd4" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInField</source>
          <target state="translated">WebDriver::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="8da638e4806e5b3465ddb73cb50aaf754bdc8673" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInFormFields</source>
          <target state="translated">WebDriver::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="28347c0638ced47689db9fa78d81ddf7d60b065a" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInPageSource</source>
          <target state="translated">WebDriver::dontSeeInPageSource</target>
        </trans-unit>
        <trans-unit id="4c0327bb29bde774e7377285b1ebf5fbec3d4bac" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInPopup</source>
          <target state="translated">WebDriver::dontSeeInPopup</target>
        </trans-unit>
        <trans-unit id="bcaa5815c7fcfc9d25499cddade40330de4b897e" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInSource</source>
          <target state="translated">WebDriver::dontSeeInSource</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
