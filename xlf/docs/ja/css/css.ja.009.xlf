<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="css">
    <body>
      <group id="css">
        <trans-unit id="43f43afcaa6bb04be469a0fc09d4b90c270ca2f7" translate="yes" xml:space="preserve">
          <source>Image combined with text</source>
          <target state="translated">テキストと組み合わせた画像</target>
        </trans-unit>
        <trans-unit id="22c278182b51bde8caa3d0d141592082e7af354b" translate="yes" xml:space="preserve">
          <source>Image fragments</source>
          <target state="translated">画像の断片</target>
        </trans-unit>
        <trans-unit id="b6081c354449ae71a72ab350483b8c4630f71f2c" translate="yes" xml:space="preserve">
          <source>Image gallery</source>
          <target state="translated">イメージギャラリー</target>
        </trans-unit>
        <trans-unit id="337a7827990a4e72f47079b050a082c3a0599aec" translate="yes" xml:space="preserve">
          <source>Image reference to use for the border.</source>
          <target state="translated">ボーダーに使用する画像参照。</target>
        </trans-unit>
        <trans-unit id="cd3b3065a2df42e1f5c530cfcf7e7f4a68a90119" translate="yes" xml:space="preserve">
          <source>Image reference to use for the mask border.</source>
          <target state="translated">マスクの境界線に使用する画像参照。</target>
        </trans-unit>
        <trans-unit id="6ae89c7f31fe68afd0052be4204a1384141e4bde" translate="yes" xml:space="preserve">
          <source>Image types</source>
          <target state="translated">画像の種類</target>
        </trans-unit>
        <trans-unit id="2fd660279df3199785c259f28542d3e12b02c341" translate="yes" xml:space="preserve">
          <source>Image-related data types: &lt;a href=&quot;image&quot;&gt;&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;gradient&quot;&gt;&lt;code&gt;&amp;lt;gradient&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">画像関連のデータ型：&lt;a href=&quot;image&quot;&gt; &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;gradient&quot;&gt; &lt;code&gt;&amp;lt;gradient&amp;gt;&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0055626d70a90252608a1bac09469afe74f0589" translate="yes" xml:space="preserve">
          <source>Image-related functions:</source>
          <target state="translated">イメージ関連機能。</target>
        </trans-unit>
        <trans-unit id="31c80169f2acd92562e3c959ee46303fbe32fc19" translate="yes" xml:space="preserve">
          <source>Image-related functions: &lt;a href=&quot;linear-gradient&quot;&gt;&lt;code&gt;linear-gradient()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;radial-gradient&quot;&gt;&lt;code&gt;radial-gradient()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;repeating-linear-gradient&quot;&gt;&lt;code&gt;repeating-linear-gradient()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;repeating-radial-gradient&quot;&gt;&lt;code&gt;repeating-radial-gradient()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;element()&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">画像関連関数：&lt;a href=&quot;linear-gradient&quot;&gt; &lt;code&gt;linear-gradient()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;radial-gradient&quot;&gt; &lt;code&gt;radial-gradient()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;repeating-linear-gradient&quot;&gt; &lt;code&gt;repeating-linear-gradient()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;repeating-radial-gradient&quot;&gt; &lt;code&gt;repeating-radial-gradient()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;element()&quot;&gt; &lt;code&gt;element()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="0642b3a749073fb598afe8da6e135e0022eb08f1" translate="yes" xml:space="preserve">
          <source>Images and element attributes</source>
          <target state="translated">画像と要素の属性</target>
        </trans-unit>
        <trans-unit id="1b389912ce30ed8eb43619c4a37fb692a39489fc" translate="yes" xml:space="preserve">
          <source>Images with &lt;em&gt;intrinsic dimensions&lt;/em&gt; (a natural size), like a JPEG, PNG, or other &lt;a href=&quot;https://en.wikipedia.org/wiki/Raster_graphics&quot;&gt;raster format&lt;/a&gt;.</source>
          <target state="translated">有する画像&lt;em&gt;固有寸法&lt;/em&gt; JPEG、PNG、または他の同様の（天然のサイズ）、&lt;a href=&quot;https://en.wikipedia.org/wiki/Raster_graphics&quot;&gt;ラスタ形式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1e3b40f82c43b451955388227907a1edcac57cc7" translate="yes" xml:space="preserve">
          <source>Images with &lt;em&gt;multiple intrinsic dimensions&lt;/em&gt;, existing in multiple versions inside a single file, like some .ico formats. (In this case, the intrinsic dimensions will be those of the image largest in area and the aspect ratio most similar to the containing box.)</source>
          <target state="translated">いくつかの.ico形式のように、単一のファイル内の複数のバージョンに存在する、&lt;em&gt;複数の固有の寸法&lt;/em&gt;を持つ画像。（この場合、固有の寸法は、領域が最大で、アスペクト比が含まれるボックスに最も近い画像の寸法になります。）</target>
        </trans-unit>
        <trans-unit id="4b628a0fc6a9e1d5f41120b2738a5653b7deb729" translate="yes" xml:space="preserve">
          <source>Images with &lt;em&gt;neither intrinsic dimensions, nor an intrinsic aspect ratio&lt;/em&gt;, like a CSS gradient.</source>
          <target state="translated">CSSグラデーションのように、&lt;em&gt;固有の寸法も固有のアスペクト比もない&lt;/em&gt;画像。</target>
        </trans-unit>
        <trans-unit id="318d36ae9d6c6f3bdb09df6cf228159edecb4f33" translate="yes" xml:space="preserve">
          <source>Images with no intrinsic dimensions but with &lt;em&gt;an intrinsic aspect ratio&lt;/em&gt; between its width and height, like an SVG or other &lt;a href=&quot;https://en.wikipedia.org/wiki/Vector_graphics&quot;&gt;vector format&lt;/a&gt;.</source>
          <target state="translated">固有の寸法はないが、SVGまたは他の&lt;a href=&quot;https://en.wikipedia.org/wiki/Vector_graphics&quot;&gt;ベクトル形式の&lt;/a&gt;ように、幅と高さの間に&lt;em&gt;固有のアスペクト比&lt;/em&gt;がある画像。</target>
        </trans-unit>
        <trans-unit id="fdc0d8927166935729f6df6dd954ee54f0823464" translate="yes" xml:space="preserve">
          <source>Impact on web developers</source>
          <target state="translated">ウェブ開発者への影響</target>
        </trans-unit>
        <trans-unit id="136ea7f5e3019a4ffe3fb9b8e8cb7350035bd35d" translate="yes" xml:space="preserve">
          <source>Implement a pin-to-bottom scrolling element using scroll anchoring</source>
          <target state="translated">スクロール アンカリングを使用したピンから下へのスクロール要素の実装</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="3bd452896133ede07f5d2b54fbbd4b9ddbf60e79" translate="yes" xml:space="preserve">
          <source>Implemented as an alias for for &lt;code&gt;-moz-device-pixel-ratio&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-moz-device-pixel-ratio&lt;/code&gt; のエイリアスとして実装されます。</target>
        </trans-unit>
        <trans-unit id="40ce8a5e137482a85a63821cf4d7b571e107a6cf" translate="yes" xml:space="preserve">
          <source>Implemented as an alias for for &lt;code&gt;max--moz-device-pixel-ratio&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max--moz-device-pixel-ratio&lt;/code&gt; のエイリアスとして実装されています。</target>
        </trans-unit>
        <trans-unit id="be2485819e9ed84579ef93185e81188295006724" translate="yes" xml:space="preserve">
          <source>Implemented as an alias for for &lt;code&gt;min--moz-device-pixel-ratio&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;min--moz-device-pixel-ratio&lt;/code&gt; のエイリアスとして実装されています。</target>
        </trans-unit>
        <trans-unit id="3fbc556882f0619a55468eaf42a495204f22c5ab" translate="yes" xml:space="preserve">
          <source>Implementing image sprites in CSS</source>
          <target state="translated">CSSに画像スプライトを実装する</target>
        </trans-unit>
        <trans-unit id="f17a523b4dd09629200c63379446725b6055c380" translate="yes" xml:space="preserve">
          <source>Implicit Grid lines from named areas</source>
          <target state="translated">指定された領域からの暗黙のグリッド線</target>
        </trans-unit>
        <trans-unit id="9b457abbb70d22bd366275d756b949a40abbaf05" translate="yes" xml:space="preserve">
          <source>Implicit definition.</source>
          <target state="translated">暗黙の定義。</target>
        </trans-unit>
        <trans-unit id="a353686c0928b9da20ee92b711e6c7c094262668" translate="yes" xml:space="preserve">
          <source>Implicit definition; allows 4-digit Unicode escaped characters.</source>
          <target state="translated">暗黙の定義。4桁のUnicodeエスケープ文字を許可します。</target>
        </trans-unit>
        <trans-unit id="020a0c6286d1962f2d8dc812e47646bdd6953b21" translate="yes" xml:space="preserve">
          <source>Implicit grid areas from named lines</source>
          <target state="translated">名前付きラインからの暗黙のグリッド領域</target>
        </trans-unit>
        <trans-unit id="f0458df90581813377e1da5ffc07d541fc076bda" translate="yes" xml:space="preserve">
          <source>Importance</source>
          <target state="translated">Importance</target>
        </trans-unit>
        <trans-unit id="d6d17215dd64f3f9eb2f23ecdcae867aae8dd6e2" translate="yes" xml:space="preserve">
          <source>Important concepts when working on the main axis</source>
          <target state="translated">主軸に取り組む際の重要な考え方</target>
        </trans-unit>
        <trans-unit id="dd9e30a1df312f79a3ffc42ad747144f0d0d1a46" translate="yes" xml:space="preserve">
          <source>Important methods</source>
          <target state="translated">重要な方法</target>
        </trans-unit>
        <trans-unit id="4f3f86753c3eda01d7cab7c5988a1122724f0558" translate="yes" xml:space="preserve">
          <source>Importantly, certain characters which would otherwise be invalid can be escaped with a backslash. These include double quotes when used inside a double-quoted string, single quotes when used inside a single-quoted string, and the backslash itself. For example, &lt;code&gt;\\&lt;/code&gt; will create a single backslash.</source>
          <target state="translated">重要なことに、そうでなければ無効になる特定の文字は、バックスラッシュでエスケープできます。これらには、二重引用符付き文字列内で使用される場合の二重引用符、単一引用符付き文字列内で使用される場合の単一引用符、およびバックスラッシュ自体が含まれます。たとえば、 &lt;code&gt;\\&lt;/code&gt; は単一のバックスラッシュを作成します。</target>
        </trans-unit>
        <trans-unit id="5ef9ee0df285167d0393cb029e6750cd169faf97" translate="yes" xml:space="preserve">
          <source>Imported rules must precede all other types of rules, except &lt;a href=&quot;@charset&quot;&gt;&lt;code&gt;@charset&lt;/code&gt;&lt;/a&gt; rules; as it is not a &lt;a href=&quot;syntax#nested_statements&quot;&gt;nested statement&lt;/a&gt;, &lt;code&gt;@import&lt;/code&gt; cannot be used inside &lt;a href=&quot;at-rule#Conditional_Group_Rules&quot;&gt;conditional group at-rules&lt;/a&gt;.</source>
          <target state="translated">インポートされたルールは、&lt;a href=&quot;@charset&quot;&gt; &lt;code&gt;@charset&lt;/code&gt; &lt;/a&gt;ルールを除く他のすべてのタイプのルールに先行する必要があります。&lt;a href=&quot;syntax#nested_statements&quot;&gt;ネストされたステートメント&lt;/a&gt;ではないため、 &lt;code&gt;@import&lt;/code&gt; を&lt;a href=&quot;at-rule#Conditional_Group_Rules&quot;&gt;条件付きグループのat-rules&lt;/a&gt;内で使用することはできません。</target>
        </trans-unit>
        <trans-unit id="2a769ca451e8d7e956d884c3e18a5d55429bfc21" translate="yes" xml:space="preserve">
          <source>Importing CSS rules</source>
          <target state="translated">CSSルールのインポート</target>
        </trans-unit>
        <trans-unit id="ead6ef052738a1befd91897d8740a976b236dca2" translate="yes" xml:space="preserve">
          <source>Importing CSS rules conditionally</source>
          <target state="translated">条件付きでCSSルールをインポートする</target>
        </trans-unit>
        <trans-unit id="601ff8a1e99540ac9f69386c607e351d4a820ed6" translate="yes" xml:space="preserve">
          <source>Improving compatibility with older browsers</source>
          <target state="translated">古いブラウザとの互換性を高める</target>
        </trans-unit>
        <trans-unit id="eb37490f4b4422ce977d65884e5b68ed897c4149" translate="yes" xml:space="preserve">
          <source>In 3D space, rotations have three degrees of liberty, which together describe a single axis of rotation. The axis of rotation is defined by an [x, y, z] vector and pass by the origin (as defined by the &lt;a href=&quot;../transform-origin&quot;&gt;&lt;code&gt;transform-origin&lt;/code&gt;&lt;/a&gt; property). If, as specified, the vector is not &lt;em&gt;normalized&lt;/em&gt; (i.e., if the sum of the square of its three coordinates is not 1), the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; will normalize it internally. A non-normalizable vector, such as the null vector, [0, 0, 0], will cause the rotation to be ignored, but without invaliding the whole CSS property.</source>
          <target state="translated">3D空間では、回転には3つの自由度があり、1つの回転軸を一緒に表します。回転軸は[x、y、z]ベクトルで定義され、原点を通過します（&lt;a href=&quot;../transform-origin&quot;&gt; &lt;code&gt;transform-origin&lt;/code&gt; &lt;/a&gt;プロパティで定義）。指定したように、ベクトルが&lt;em&gt;正規化&lt;/em&gt;されていない場合（つまり、3つの座標の2乗の合計が1でない&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;場合&lt;/a&gt;）、ユーザーエージェントは内部的に正規化します。 nullベクトル[0、0、0]などの正規化不可能なベクトルは、CSSプロパティ全体を無効にすることなく、回転を無視させます。</target>
        </trans-unit>
        <trans-unit id="60058c00f3d729c93718e637649c788d1ae9d608" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1584285&quot;&gt;bug 1584285&lt;/a&gt; the &lt;code&gt;layout.css.scroll-anchoring.suppressions.enabled&lt;/code&gt; flag was added to Firefox Nightly in order to allow the disabling of these triggers.</source>
          <target state="translated">では&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1584285&quot;&gt;バグ1584285 &lt;/a&gt; &lt;code&gt;layout.css.scroll-anchoring.suppressions.enabled&lt;/code&gt; フラグは、これらのトリガーの無効化を可能にするためにFirefoxのナイトリーに追加されました。</target>
        </trans-unit>
        <trans-unit id="a30e72229a33d1551be2302ac2f7cc14eb2babba" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTML5&quot;&gt;HTML5&lt;/a&gt;, known &lt;a href=&quot;https://html.spec.whatwg.org/#foreign-elements&quot;&gt;foreign elements&lt;/a&gt; will automatically be assigned namespaces. This means that HTML elements will act as though they are in the XHTML namespace (&lt;code&gt;http://www.w3.org/1999/xhtml&lt;/code&gt;), even if there is no &lt;code&gt;xmlns&lt;/code&gt; attribute anywhere in the document, and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt;&amp;lt;svg&amp;gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math&quot;&gt;&amp;lt;math&amp;gt;&lt;/a&gt; elements will be assigned their proper namespaces (&lt;code&gt;http://www.w3.org/2000/svg&lt;/code&gt; and &lt;code&gt;http://www.w3.org/1998/Math/MathML&lt;/code&gt;).</source>
          <target state="translated">では&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTML5&quot;&gt;HTML5&lt;/a&gt;、知られている&lt;a href=&quot;https://html.spec.whatwg.org/#foreign-elements&quot;&gt;外国人の要素が&lt;/a&gt;自動的に名前空間が割り当てられます。 HTML要素は、彼らがXHTML名前空間（にいるかのように行動することを、この手段 &lt;code&gt;http://www.w3.org/1999/xhtml&lt;/code&gt; ）何があっても、 &lt;code&gt;xmlns&lt;/code&gt; 、文書内のどこ属性ず、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt;&amp;lt;SVG&amp;gt;&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math&quot;&gt;&amp;lt; math&amp;gt;&lt;/a&gt;要素には適切な名前空間が割り当てられます（ &lt;code&gt;http://www.w3.org/2000/svg&lt;/code&gt; および &lt;code&gt;http://www.w3.org/1998/Math/MathML&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="877dffe68dcc6507b642b1fa95f86bb786ef2a0b" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTML5&quot;&gt;HTML5&lt;/a&gt;, known &lt;a href=&quot;https://html.spec.whatwg.org/#foreign-elements&quot;&gt;foreign elements&lt;/a&gt; will be automatically be assigned namespaces. This means that HTML elements will act as though they are in the XHTML namespace (&lt;code&gt;http://www.w3.org/1999/xhtml&lt;/code&gt;), even if there is no &lt;code&gt;xmlns&lt;/code&gt; attribute anywhere in the document, and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt;&amp;lt;svg&amp;gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math&quot;&gt;&amp;lt;math&amp;gt;&lt;/a&gt; elements will be assigned their proper namespaces (&lt;code&gt;http://www.w3.org/2000/svg&lt;/code&gt; and &lt;code&gt;http://www.w3.org/1998/Math/MathML&lt;/code&gt;).</source>
          <target state="translated">では&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTML5&quot;&gt;HTML5&lt;/a&gt;、知られている&lt;a href=&quot;https://html.spec.whatwg.org/#foreign-elements&quot;&gt;外国人の要素が&lt;/a&gt;自動的に割り当てられた名前空間になります。HTML要素は、彼らがXHTML名前空間（にいるかのように行動することを、この手段 &lt;code&gt;http://www.w3.org/1999/xhtml&lt;/code&gt; ）何があっても、 &lt;code&gt;xmlns&lt;/code&gt; 、文書内のどこ属性ず、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt;&amp;lt;SVG&amp;gt;&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math&quot;&gt;&amp;lt; math&amp;gt;&lt;/a&gt;要素には適切な名前空間が割り当てられます（ &lt;code&gt;http://www.w3.org/2000/svg&lt;/code&gt; および &lt;code&gt;http://www.w3.org/1998/Math/MathML&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d354c41279b3de6edd6d07f8b2737b1c342403b4" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;, a &lt;strong&gt;replaced element&lt;/strong&gt; is an element whose representation is outside the scope of CSS; they're external objects whose representation is independent of the CSS formatting model.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;、&lt;strong&gt;置換要素は&lt;/strong&gt;、その表現CSSの範囲外である元素です。これらは、CSSフォーマットモデルから独立した表現を持つ外部オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="72e458a1ba637c9e2db7410d5056b350ac1f05fe" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;, use the &lt;a href=&quot;@media&quot;&gt;&lt;code&gt;@media&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;at-rule&quot;&gt;at-rule&lt;/a&gt; to conditionally apply part of a style sheet based on the result of a media query. Use &lt;a href=&quot;@import&quot;&gt;&lt;code&gt;@import&lt;/code&gt;&lt;/a&gt; to conditionally apply an entire style sheet.</source>
          <target state="translated">では&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;、使用&lt;a href=&quot;@media&quot;&gt; &lt;code&gt;@media&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;at-rule&quot;&gt;で、ルールを&lt;/a&gt;条件付きでメディアクエリの結果に基づいて、スタイルシートの一部を適用します。&lt;a href=&quot;@import&quot;&gt; &lt;code&gt;@import&lt;/code&gt; &lt;/a&gt;を使用して、スタイルシート全体を条件付きで適用します。</target>
        </trans-unit>
        <trans-unit id="ace2ab649cc86e828e2596313a3f73a6f2bb59b0" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot;&gt;HTML&lt;/a&gt;, media queries can be applied to various elements:</source>
          <target state="translated">では&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot;&gt;HTML&lt;/a&gt;、メディアクエリは、さまざまな要素に適用することができます。</target>
        </trans-unit>
        <trans-unit id="d33862ea9ca59e279f7b5c197f1ebab5545aefb3" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScript&lt;/a&gt;, you can use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia&quot;&gt;&lt;code&gt;Window.matchMedia()&lt;/code&gt;&lt;/a&gt; method to test the window against a media query. You can also use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/addListener&quot;&gt;&lt;code&gt;MediaQueryList.addListener()&lt;/code&gt;&lt;/a&gt; to be notified whenever the state of a query changes. With this functionality, your site or app can respond to changes in the device configuration, orientation, or state.</source>
          <target state="translated">で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScriptの&lt;/a&gt;は、使用することができます&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia&quot;&gt; &lt;code&gt;Window.matchMedia()&lt;/code&gt; &lt;/a&gt;メディアクエリーに対してウィンドウをテストする方法を。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/addListener&quot;&gt; &lt;code&gt;MediaQueryList.addListener()&lt;/code&gt; &lt;/a&gt;を使用して、クエリの状態が変化するたびに通知を受けることもできます。この機能により、サイトまたはアプリは、デバイスの構成、向き、または状態の変化に対応できます。</target>
        </trans-unit>
        <trans-unit id="da0de4cf5dfd1f6c019cdc821b155c8ba1c20185" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;forced colors mode&lt;/em&gt; (detectable with the &lt;a href=&quot;@media/forced-colors&quot;&gt;forced-colors&lt;/a&gt; media query), most colors are restricted into a user- and browser-defined palette. These system colors are exposed by the following keywords, which can be used to ensure that the rest of the page integrates well with the restricted palette. These values may also be used in other contexts, but are not widely supported by browsers.</source>
          <target state="translated">で&lt;em&gt;強制色モード&lt;/em&gt;（検出可能と&lt;a href=&quot;@media/forced-colors&quot;&gt;強制色の&lt;/a&gt;メディアクエリ）、ほとんどの色がUSER-とブラウザに定義されたパレットに制限されています。これらのシステムカラーは、ページの残りの部分が制限されたパレットとうまく統合されるようにするために使用できる次のキーワードによって公開されます。これらの値は他のコンテキストでも使用できますが、ブラウザでは広くサポートされていません。</target>
        </trans-unit>
        <trans-unit id="79dfb5b11044ebd5b2e61a6f525d822d084edb50" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;relative&lt;/em&gt;&lt;em&gt; positioning&lt;/em&gt;, triggered by the value &lt;code&gt;relative&lt;/code&gt; of the &lt;a href=&quot;position&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; property, the boxes are drawn with an offset defined by the &lt;a href=&quot;top&quot;&gt;&lt;code&gt;top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;bottom&quot;&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;left&quot;&gt;&lt;code&gt;left&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;right&quot;&gt;&lt;code&gt;right&lt;/code&gt;&lt;/a&gt; CSS properties.</source>
          <target state="translated">で&lt;em&gt;相対&lt;/em&gt;&lt;em&gt;位置&lt;/em&gt;値によってトリガ、 &lt;code&gt;relative&lt;/code&gt; の&lt;a href=&quot;position&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;プロパティ、ボックスはオフセットによって定義さで描かれている&lt;a href=&quot;top&quot;&gt; &lt;code&gt;top&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;bottom&quot;&gt; &lt;code&gt;bottom&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;left&quot;&gt; &lt;code&gt;left&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;right&quot;&gt; &lt;code&gt;right&lt;/code&gt; &lt;/a&gt; CSS特性。</target>
        </trans-unit>
        <trans-unit id="a159af38771ca727aacf9a2b03d4e58148d6f332" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;static positioning&lt;/em&gt;, triggered by the value &lt;code&gt;static&lt;/code&gt; of the &lt;a href=&quot;position&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; property, the boxes are drawn at the exact position defined by the normal flow layout.</source>
          <target state="translated">&lt;em&gt;静的測位&lt;/em&gt;値によってトリガ、 &lt;code&gt;static&lt;/code&gt; の&lt;a href=&quot;position&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;プロパティ、ボックスは通常のフローレイアウトによって定義された正確な位置に描かれています。</target>
        </trans-unit>
        <trans-unit id="2677e9a7a490f6d16d6f466aa23ed34b9a41a050" translate="yes" xml:space="preserve">
          <source>In Android 9+: Settings &amp;gt; Accessibility &amp;gt; Remove animations.</source>
          <target state="translated">Android 9以降の場合：[設定]&amp;gt; [ユーザー補助]&amp;gt; [アニメーションを削除]。</target>
        </trans-unit>
        <trans-unit id="bed2f9ee98a29addc81c6dd7441b38e2d5ff6251" translate="yes" xml:space="preserve">
          <source>In CSS (and most computer graphics), the origin &lt;code&gt;(0, 0)&lt;/code&gt; represents the&lt;em&gt; top-left&lt;/em&gt; corner of any element. Positive coordinates are down and to the right of the origin, while negative ones are up and to the left. Thus, a point that's 2 units to the right and 5 units down would be &lt;code&gt;(2, 5)&lt;/code&gt;, while a point 3 units to the left and 12 units up would be &lt;code&gt;(-3, -12)&lt;/code&gt;.</source>
          <target state="translated">CSS（およびほとんどのコンピューターグラフィックス）では、原点 &lt;code&gt;(0, 0)&lt;/code&gt; は要素の&lt;em&gt;左上&lt;/em&gt;隅を表します。正の座標は原点の右下にあり、負の座標は左上にあります。したがって、右のダウン5つの単位に2台の視点は次のようになり &lt;code&gt;(2, 5)&lt;/code&gt; ポイント左に3つの単位と12単位までのようになりながら、 &lt;code&gt;(-3, -12)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0ca90fdba9bcf26ff25b4a0079d4ac821ee9f05" translate="yes" xml:space="preserve">
          <source>In CSS Level 1, the &lt;code&gt;url()&lt;/code&gt; functional notation described only true URLs. In CSS Level 2, the definition of &lt;code&gt;url()&lt;/code&gt; was extended to describe any URI, including URNs. CSS Values and Units Level 3 returned to the narrower, initial definition. Now, &lt;code&gt;url()&lt;/code&gt; denotes only true &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;s.</source>
          <target state="translated">CSSレベル1では、 &lt;code&gt;url()&lt;/code&gt; 関数表記は真のURLのみを記述していました。CSSレベル2では、 &lt;code&gt;url()&lt;/code&gt; の定義が拡張され、URNを含む任意のURIを記述しました。CSS値と単位レベル3は、より狭い初期定義に戻りました。現在、 &lt;code&gt;url()&lt;/code&gt; は真の &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; のみを示します。</target>
        </trans-unit>
        <trans-unit id="dbfbaf9da20d5a865aa32662977ce2d948cb07e0" translate="yes" xml:space="preserve">
          <source>In CSS Level 1, the &lt;code&gt;url()&lt;/code&gt; functional notation described only true URLs. In CSS Level 2, the definition of &lt;code&gt;url()&lt;/code&gt; was extended to describe any URI, whether a URL or a URN. Confusingly, this meant that &lt;code&gt;url()&lt;/code&gt; could be used to create a &lt;code&gt;&amp;lt;uri&amp;gt;&lt;/code&gt; CSS data type. This change was not only awkward but, debatably, unnecessary, since URNs are almost never used in actual CSS. To alleviate the confusion, CSS Level 3 returned to the narrower, initial definition. Now, &lt;code&gt;url()&lt;/code&gt; denotes only true &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;s.</source>
          <target state="translated">CSSレベル1では、 &lt;code&gt;url()&lt;/code&gt; 関数表記は真のURLのみを記述していました。 CSSレベル2では、 &lt;code&gt;url()&lt;/code&gt; の定義が拡張され、URLとURNのどちらのURIでも記述できるようになりました。紛らわしいことに、これは &lt;code&gt;url()&lt;/code&gt; を使用して &lt;code&gt;&amp;lt;uri&amp;gt;&lt;/code&gt; CSSデータ型を作成できることを意味しました。 URNは実際のCSSではほとんど使用されないため、この変更は厄介なだけでなく、不必要に不必要でした。混乱を緩和するために、CSSレベル3はより狭い、最初の定義に戻りました。現在、 &lt;code&gt;url()&lt;/code&gt; は真の &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; のみを示しています。</target>
        </trans-unit>
        <trans-unit id="f514c7d425616892680019a6946e89c713a7cc18" translate="yes" xml:space="preserve">
          <source>In CSS The &lt;strong&gt;Visual Formatting Model&lt;/strong&gt; describes how user agents take the document tree, and process and display it for visual media. This includes &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/continuous_media&quot;&gt;continuous media&lt;/a&gt; such as a computer screen and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/paged_media&quot;&gt;paged media&lt;/a&gt; such as a book or document printed by browser print functions. Most of the information applies equally to continuous and paged media.</source>
          <target state="translated">CSSの&lt;strong&gt;ビジュアルフォーマットモデル&lt;/strong&gt;は、ユーザーエージェントがドキュメントツリーを取得し、それを処理してビジュアルメディアに表示する方法を記述します。これには、コンピュータ画面などの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/continuous_media&quot;&gt;連続メディア&lt;/a&gt;や、ブラウザの印刷機能によって印刷される本やドキュメントなどの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/paged_media&quot;&gt;ページメディアが&lt;/a&gt;含まれます。ほとんどの情報は、連続メディアとページメディアに等しく適用されます。</target>
        </trans-unit>
        <trans-unit id="20a68d20fe8c7be1291b15018b8049a2263fd388" translate="yes" xml:space="preserve">
          <source>In CSS when using a selector list, if any of the selectors are invalid then the whole list is deemed invalid. When using &lt;code&gt;:is()&lt;/code&gt; or &lt;code&gt;:where()&amp;nbsp;&lt;/code&gt;instead of the whole list of selectors being deemed invalid if one fails to parse, the incorrect or unsupported selector will be ignored and the others used.</source>
          <target state="translated">CSSでセレクターリストを使用する場合、セレクターのいずれかが無効であると、リスト全体が無効と見なされます。使用する場合 &lt;code&gt;:is()&lt;/code&gt; 又は &lt;code&gt;:where()&amp;nbsp;&lt;/code&gt; 一方が解析に失敗した場合に代わりのセレクタのリスト全体が無効とされ、誤ったまたはサポートされていないセレクタは無視され、他のものを使用します。</target>
        </trans-unit>
        <trans-unit id="a607ebd720cd31c70488065832f556e502e0fc3b" translate="yes" xml:space="preserve">
          <source>In CSS, &lt;code&gt;::after&lt;/code&gt; creates a &lt;a href=&quot;pseudo-elements&quot;&gt;pseudo-element&lt;/a&gt; that is the last child of the selected element. It is often used to add cosmetic content to an element with the &lt;a href=&quot;content&quot;&gt;&lt;code&gt;content&lt;/code&gt;&lt;/a&gt; property. It is inline by default.</source>
          <target state="translated">CSSでは、 &lt;code&gt;::after&lt;/code&gt; は、選択された要素の最後の子である&lt;a href=&quot;pseudo-elements&quot;&gt;疑似要素&lt;/a&gt;を作成します。多くの場合、これは&lt;a href=&quot;content&quot;&gt; &lt;code&gt;content&lt;/code&gt; &lt;/a&gt;プロパティを持つ要素に化粧品コンテンツを追加するために使用されます。デフォルトではインラインです。</target>
        </trans-unit>
        <trans-unit id="6fcfc3b2e2fd2b79a1fa2bab5b9edda0ddeaa0e5" translate="yes" xml:space="preserve">
          <source>In CSS, &lt;code&gt;::before&lt;/code&gt; creates a &lt;a href=&quot;pseudo-elements&quot;&gt;pseudo-element&lt;/a&gt; that is the first child of the selected element. It is often used to add cosmetic content to an element with the &lt;a href=&quot;content&quot;&gt;&lt;code&gt;content&lt;/code&gt;&lt;/a&gt; property. It is inline by default.</source>
          <target state="translated">CSSでは、 &lt;code&gt;::before&lt;/code&gt; は、選択された要素の最初の子である&lt;a href=&quot;pseudo-elements&quot;&gt;疑似要素&lt;/a&gt;を作成します。多くの場合、&lt;a href=&quot;content&quot;&gt; &lt;code&gt;content&lt;/code&gt; &lt;/a&gt;プロパティを使用して要素に化粧品のコンテンツを追加するために使用されます。デフォルトではインラインです。</target>
        </trans-unit>
        <trans-unit id="442c0e7b6758b3f6f3cb5cefe2a7a7307db15d4a" translate="yes" xml:space="preserve">
          <source>In CSS, &lt;strong&gt;inheritance&lt;/strong&gt; controls what happens when no value is specified for a property on an element.</source>
          <target state="translated">CSSでは、&lt;strong&gt;継承&lt;/strong&gt;は、要素のプロパティに値が指定されていない場合に何が起こるかを制御します。</target>
        </trans-unit>
        <trans-unit id="ae016ebad623cdbec22bff6c82a3be0856f26d16" translate="yes" xml:space="preserve">
          <source>In CSS, &lt;strong&gt;inheritance&lt;/strong&gt; controls what happens when no value is specified for a property on an element. Refer to &lt;a href=&quot;css_reference&quot;&gt;any CSS property&lt;/a&gt; definition to see whether a specific property inherits by default (&quot;Inherited: yes&quot;) or not (&quot;Inherited: no&quot;).</source>
          <target state="translated">CSSでは、&lt;strong&gt;継承&lt;/strong&gt;により、要素のプロパティに値が指定されていない場合の動作が制御されます。参照してください&lt;a href=&quot;css_reference&quot;&gt;任意のCSSプロパティ&lt;/a&gt;（「継承：いいえ」）かどうか：デフォルトでは、特定のプロパティを継承するかどうか（「はい継承」）を参照しないように定義。</target>
        </trans-unit>
        <trans-unit id="19717bb890c227c9a707ad1f0fbd812a07ba6de0" translate="yes" xml:space="preserve">
          <source>In CSS, a box may be laid out according to three positioning schemes &amp;mdash; &lt;strong&gt;normal flow&lt;/strong&gt;, &lt;strong&gt;floats&lt;/strong&gt;, or &lt;strong&gt;absolute positioning&lt;/strong&gt;.</source>
          <target state="translated">CSSでは、ボックスは3つの配置スキーム（&lt;strong&gt;通常のフロー&lt;/strong&gt;、&lt;strong&gt;フロート&lt;/strong&gt;、または&lt;strong&gt;絶対配置）&lt;/strong&gt;に従ってレイアウトできます。</target>
        </trans-unit>
        <trans-unit id="1ed53b26132a6967b2fd714950219706ef064b19" translate="yes" xml:space="preserve">
          <source>In CSS, a few characters can appear on their own, like the slash ('&lt;code&gt;/&lt;/code&gt;') or the comma ('&lt;code&gt;,&lt;/code&gt;'), and are used in a property definition to separate its parts. The comma is often used to separate values in enumerations, or parameters in mathematical-like functions; the slash often separates parts of the value that are semantically different, but have a common syntax. Typically, the slash is used in shorthand properties; to separate component that are of the same type, but belong to different properties.</source>
          <target state="translated">CSSでは、スラッシュ（ ' &lt;code&gt;/&lt;/code&gt; '）やコンマ（ ' &lt;code&gt;,&lt;/code&gt; '）のように、いくつかの文字が単独で表示され、プロパティ定義でその部分を区切るために使用されます。カンマは、列挙の値、または数学のような関数のパラメーターを区切るためによく使用されます。スラッシュは、意味的に異なる値の部分を区切ることがよくありますが、構文は共通です。通常、スラッシュは省略プロパティで使用されます。同じタイプで異なるプロパティに属するコンポーネントを分離するため。</target>
        </trans-unit>
        <trans-unit id="e2d7c377f282ca0a689ac7cc269be132249dde56" translate="yes" xml:space="preserve">
          <source>In CSS, both italic and oblique are applied to text using the &lt;a href=&quot;../font-style&quot;&gt;&lt;code&gt;font-style&lt;/code&gt;&lt;/a&gt; property. Also note the introduction of &lt;code&gt;font-synthesis: none;&lt;/code&gt;&amp;mdash;which will prevent browsers from accidentally applying the variation axis and a synthesized italic. This can be used to prevent faux-bolding as well.</source>
          <target state="translated">CSSでは、斜体と斜体の両方が&lt;a href=&quot;../font-style&quot;&gt; &lt;code&gt;font-style&lt;/code&gt; &lt;/a&gt;プロパティを使用してテキストに適用されます。 &lt;code&gt;font-synthesis: none;&lt;/code&gt; 導入にも注意してください。-これにより、ブラウザーがバリエーション軸と合成された斜体を誤って適用するのを防ぎます。これは、偽の太字を防ぐためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="28b641c883f19c4d7adacdb79e5b565585622a0a" translate="yes" xml:space="preserve">
          <source>In CSS, gradients aren't colors but &lt;a href=&quot;css_images&quot;&gt;images&lt;/a&gt;.</source>
          <target state="translated">CSSでは、グラデーションは色ではなく&lt;a href=&quot;css_images&quot;&gt;画像&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e11e9c069aa4f7583e42cc546716ace8c471b282" translate="yes" xml:space="preserve">
          <source>In CSS, the normal flow includes block-level formatting of block boxes, inline-level formatting of inline boxes, and also includes relative and sticky positioning of block-level and inline-level boxes.</source>
          <target state="translated">CSSでは、通常の流れとして、ブロックボックスのブロックレベルの書式設定、インラインボックスのインラインレベルの書式設定のほか、ブロックレベルとインラインレベルのボックスの相対的な位置合わせやスティッキーな位置合わせなどがあります。</target>
        </trans-unit>
        <trans-unit id="056cb3fc41f3fd2367ebd0ff2f83d24d3a80a2ab" translate="yes" xml:space="preserve">
          <source>In Chrome 18 to 19, the &lt;code&gt;saturate()&lt;/code&gt; function only takes integers instead of decimal or percentage values. From Chrome 20, this bug is fixed.</source>
          <target state="translated">Chrome 18から19では、 &lt;code&gt;saturate()&lt;/code&gt; 関数は、小数値やパーセント値ではなく整数のみを受け取ります。Chrome 20以降、このバグは修正されました。</target>
        </trans-unit>
        <trans-unit id="5b5402a15f1a5cd605fed8afa476d2d53327f32d" translate="yes" xml:space="preserve">
          <source>In Dutch (&lt;code&gt;nl&lt;/code&gt;), the &lt;code&gt;ij&lt;/code&gt; digraph becomes &lt;code&gt;IJ&lt;/code&gt;, even with &lt;code&gt;text-transform: capitalize&lt;/code&gt;, which only puts the first letter of a word in uppercase.</source>
          <target state="translated">オランダ語（ &lt;code&gt;nl&lt;/code&gt; ）では、 &lt;code&gt;text-transform: capitalize&lt;/code&gt; ても、 &lt;code&gt;ij&lt;/code&gt; ダイグラフは &lt;code&gt;IJ&lt;/code&gt; になり、単語の最初の文字のみが大文字になります。</target>
        </trans-unit>
        <trans-unit id="1e5724118fc705676ac5d111d32a483bdf983365" translate="yes" xml:space="preserve">
          <source>In Edge, hovering over an element and then scrolling up or down without moving the pointer will leave the element in the &lt;code&gt;:hover&lt;/code&gt; state until the pointer is moved. See &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5381673/&quot;&gt;bug 5381673&lt;/a&gt;.</source>
          <target state="translated">Edgeでは、要素にカーソルを合わせ、ポインタを動かさずに上下にスクロールすると、ポインタが動かされるまで要素は &lt;code&gt;:hover&lt;/code&gt; 状態のままになります。&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5381673/&quot;&gt;バグ5381673を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5b95285a3bb9466411e684d5cb739002b067dde7" translate="yes" xml:space="preserve">
          <source>In Edge, hovering over an element and then scrolling up or down without moving the pointer will leave the element in the &lt;code&gt;:hover&lt;/code&gt; state until the pointer is moved. See &lt;a href=&quot;https://developer.microsoft.com/microsoft-edge/platform/issues/5381673/&quot;&gt;bug 5381673&lt;/a&gt;.</source>
          <target state="translated">Edgeでは、要素にカーソルを合わせてから、ポインターを移動せずに上下にスクロールすると、ポインターが移動するまで要素は &lt;code&gt;:hover&lt;/code&gt; 状態のままになります。&lt;a href=&quot;https://developer.microsoft.com/microsoft-edge/platform/issues/5381673/&quot;&gt;バグ5381673を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="97ad32ef01e6d6b973fef9bea50d7ff1f5ea59ee" translate="yes" xml:space="preserve">
          <source>In Firefox 59, the property was limited to usage in chrome code only (See &lt;a href=&quot;https://bugzil.la/1417200&quot;&gt;bug 1417200&lt;/a&gt;).</source>
          <target state="translated">Firefox 59では、このプロパティは&lt;a href=&quot;https://bugzil.la/1417200&quot;&gt;Chrome&lt;/a&gt;コードでの使用のみに制限されていました（バグ1417200を参照）。</target>
        </trans-unit>
        <trans-unit id="a431314804a34d74792b5a64bb43ef6be5426e16" translate="yes" xml:space="preserve">
          <source>In Firefox 60, the property was removed completely (See &lt;a href=&quot;https://bugzil.la/1429723&quot;&gt;bug 1429723&lt;/a&gt;).</source>
          <target state="translated">Firefox 60では、このプロパティは完全に削除されました（&lt;a href=&quot;https://bugzil.la/1429723&quot;&gt;バグ1429723を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="4bf59383f1cec73255a9a575ad27402c7e6da368" translate="yes" xml:space="preserve">
          <source>In Firefox &lt;code&gt;about:config&lt;/code&gt;: Add a number preference called &lt;code&gt;ui.prefersReducedMotion&lt;/code&gt; and set its value to &lt;code&gt;1&lt;/code&gt;. Changes to this preference take effect immediately.</source>
          <target state="translated">Firefoxの &lt;code&gt;about:config&lt;/code&gt; ： &lt;code&gt;ui.prefersReducedMotion&lt;/code&gt; という番号設定を追加し、その値を &lt;code&gt;1&lt;/code&gt; に設定します。この設定の変更はすぐに有効になります。</target>
        </trans-unit>
        <trans-unit id="9b5cc917fc571755b18ddb73f4e2fbfd2557423c" translate="yes" xml:space="preserve">
          <source>In Firefox, the internal stylesheet rule looks like this:</source>
          <target state="translated">Firefoxでは、内部のスタイルシートルールはこのようになっています。</target>
        </trans-unit>
        <trans-unit id="a0b43ed2ee148cd07e125a389b0668feac556930" translate="yes" xml:space="preserve">
          <source>In Flow and Out of Flow</source>
          <target state="translated">インフローとアウトオブフロー</target>
        </trans-unit>
        <trans-unit id="4da209a03f4c0109b83eca97e0e5d96c12291e7b" translate="yes" xml:space="preserve">
          <source>In GTK/GNOME: GNOME Tweaks &amp;gt; General tab (or Appearance, depending on version) &amp;gt; Animations is turned off.</source>
          <target state="translated">GTK / GNOMEの場合：GNOME Tweaks&amp;gt; Generalタブ（またはバージョンによっては外観）&amp;gt; Animationsがオフになっています。</target>
        </trans-unit>
        <trans-unit id="05daa321394d596baa5b1be66f28f172f13612e1" translate="yes" xml:space="preserve">
          <source>In Gecko (Firefox) the limit of the cursor size is 128&amp;times;128px. Larger cursor images are ignored. However, you should limit yourself to the size 32&amp;times;32 for maximum compatibility with operating systems and platforms.</source>
          <target state="translated">Gecko（Firefox）では、カーソルサイズの制限は128x128pxです。大きいカーソル画像は無視されます。ただし、オペレーティングシステムとプラットフォームとの互換性を最大にするには、サイズを32x32に制限する必要があります。</target>
        </trans-unit>
        <trans-unit id="c4d953850927a160d788bf46abc404a819576bdc" translate="yes" xml:space="preserve">
          <source>In German (&lt;code&gt;de&lt;/code&gt;), the &lt;code&gt;&amp;szlig;&lt;/code&gt; becomes &lt;code&gt;SS&lt;/code&gt; in uppercase.</source>
          <target state="translated">ドイツ語（IN &lt;code&gt;de&lt;/code&gt; ）、 &lt;code&gt;&amp;szlig;&lt;/code&gt; なる &lt;code&gt;SS&lt;/code&gt; 大文字。</target>
        </trans-unit>
        <trans-unit id="80781c40c3f8967b190b0d89539fd63e02763523" translate="yes" xml:space="preserve">
          <source>In German (de), the &lt;code&gt;&amp;szlig;&lt;/code&gt; becomes &lt;code&gt;SS&lt;/code&gt; in uppercase.</source>
          <target state="translated">ドイツ（DE）において、 &lt;code&gt;&amp;szlig;&lt;/code&gt; なる &lt;code&gt;SS&lt;/code&gt; 大文字。</target>
        </trans-unit>
        <trans-unit id="f5313375116f718aa419ddb4bc6535bce0923b6e" translate="yes" xml:space="preserve">
          <source>In German (de), the &lt;code&gt;&amp;szlig;&lt;/code&gt; may become &lt;code&gt;ẞ&lt;/code&gt; (U+1E9E) in uppercase.</source>
          <target state="translated">ドイツ語（de）では、 &lt;code&gt;&amp;szlig;&lt;/code&gt; は大文字で &lt;code&gt;ẞ&lt;/code&gt; （U + 1E9E）になる場合があります。</target>
        </trans-unit>
        <trans-unit id="e37391e5d15cc3b54765120217c0b5653aa4f07d" translate="yes" xml:space="preserve">
          <source>In Greek (&lt;code&gt;el&lt;/code&gt;), the lowercase sigma character has two forms: &lt;code&gt;&amp;sigma;&lt;/code&gt; and &lt;code&gt;&amp;sigmaf;&lt;/code&gt;. &lt;code&gt;&amp;sigmaf;&lt;/code&gt; is used only when sigma terminates a word. When applying &lt;code&gt;text-transform: lowercase&lt;/code&gt; to an uppercase sigma (&lt;code&gt;&amp;Sigma;&lt;/code&gt;), the browser needs to choose the right lowercase form based on context.</source>
          <target state="translated">ギリシャ語（ &lt;code&gt;el&lt;/code&gt; ）では、小文字のシグマ文字には &lt;code&gt;&amp;sigma;&lt;/code&gt; と &lt;code&gt;&amp;sigmaf;&lt;/code&gt; の 2つの形式があります。 &lt;code&gt;&amp;sigmaf;&lt;/code&gt; は、sigmaが単語を終了する場合にのみ使用されます。 &lt;code&gt;text-transform: lowercase&lt;/code&gt; を大文字のシグマ（ &lt;code&gt;&amp;Sigma;&lt;/code&gt; ）に適用する場合、ブラウザーはコンテキストに基づいて正しい小文字のフォームを選択する必要があります。</target>
        </trans-unit>
        <trans-unit id="25eeee60a49c8ca059739c2da1de51cfddbe7e6a" translate="yes" xml:space="preserve">
          <source>In Greek (&lt;code&gt;el&lt;/code&gt;), vowels lose their accent when the whole word is in uppercase (&lt;code&gt;ά&lt;/code&gt;/&lt;code&gt;&amp;Alpha;&lt;/code&gt;), except for the disjunctive eta (&lt;code&gt;ή&lt;/code&gt;/&lt;code&gt;Ή&lt;/code&gt;). Also, diphthongs with an accent on the first vowel lose the accent and gain a diaeresis on the second vowel (&lt;code&gt;ά&amp;iota;&lt;/code&gt;/&lt;code&gt;&amp;Alpha;Ϊ&lt;/code&gt;).</source>
          <target state="translated">ギリシャ語（で &lt;code&gt;el&lt;/code&gt; 単語全体が（大文字であるとき）、母音は、彼らのアクセントを失う &lt;code&gt;ά&lt;/code&gt; / &lt;code&gt;&amp;Alpha;&lt;/code&gt; 選言ETA（を除いて、） &lt;code&gt;ή&lt;/code&gt; / &lt;code&gt;Ή&lt;/code&gt; ）。また、最初の母音にアクセントがある二母音はアクセントを失い、2番目の母音に &lt;code&gt;ά&amp;iota;&lt;/code&gt; ます（ά&amp;iota; / &lt;code&gt;&amp;Alpha;Ϊ&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1161334729a96a24f422f6ffc8f969d8d7188dcc" translate="yes" xml:space="preserve">
          <source>In Greek (el), vowels lose their accent when the whole word is in uppercase (&lt;code&gt;ά&lt;/code&gt;/&lt;code&gt;&amp;Alpha;&lt;/code&gt;), except for the disjunctive eta (&lt;code&gt;ή&lt;/code&gt;/&lt;code&gt;Ή&lt;/code&gt;). Also, diphthongs with an accent on the first vowel lose the accent and gain a diacritic on the second vowel (&lt;code&gt;ά&amp;iota;&lt;/code&gt;/&lt;code&gt;&amp;Alpha;Ϊ&lt;/code&gt;).</source>
          <target state="translated">単語全体が（大文字であるとき、ギリシャ語（EL）では、母音は、彼らのアクセントを失う &lt;code&gt;ά&lt;/code&gt; / &lt;code&gt;&amp;Alpha;&lt;/code&gt; 選言ETA（を除いて、） &lt;code&gt;ή&lt;/code&gt; / &lt;code&gt;Ή&lt;/code&gt; ）。また、最初の母音にアクセントを持つ &lt;code&gt;ά&amp;iota;&lt;/code&gt; 母音はアクセントを失い、2番目の母音に発音区別符号を付けます（ά&amp;iota; / &lt;code&gt;&amp;Alpha;Ϊ&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b6f95d9cdcb8870525b34d88afcb6e8aba98ae1f" translate="yes" xml:space="preserve">
          <source>In IE 7 and IE 8 of Internet Explorer, this property always behaved like &lt;code&gt;background-clip: padding&lt;/code&gt; when &lt;code&gt;overflow&lt;/code&gt; was &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;auto&lt;/code&gt;, or &lt;code&gt;scroll&lt;/code&gt;.</source>
          <target state="translated">Internet ExplorerのIE 7およびIE 8では、このプロパティは常に &lt;code&gt;background-clip: padding&lt;/code&gt; ように動作しました： &lt;code&gt;overflow&lt;/code&gt; が &lt;code&gt;hidden&lt;/code&gt; 、 &lt;code&gt;auto&lt;/code&gt; 、または &lt;code&gt;scroll&lt;/code&gt; 場合のパディング。</target>
        </trans-unit>
        <trans-unit id="51a95a951b6c2f0353cd1e98ce4685df836b48f9" translate="yes" xml:space="preserve">
          <source>In IE 7 and IE 9 of Internet Explorer, it always behaved like &lt;code&gt;background-clip: padding&lt;/code&gt; if &lt;code&gt;overflow: hidden | auto | scroll&lt;/code&gt;</source>
          <target state="translated">Internet ExplorerのIE 7およびIE 9では、常に &lt;code&gt;background-clip: padding&lt;/code&gt; ように動作しました： &lt;code&gt;overflow: hidden | auto | scroll&lt;/code&gt; 場合のパディング：非表示| 自動| スクロール</target>
        </trans-unit>
        <trans-unit id="67757997fb463ce21b9a08ccfe91630ab4e2b137" translate="yes" xml:space="preserve">
          <source>In IE 7 and IE 9 of Internet Explorer, it always behaved like &lt;code&gt;background-clip: padding&lt;/code&gt; if &lt;code&gt;overflow: hidden | auto | scroll&lt;/code&gt;.</source>
          <target state="translated">Internet ExplorerのIE 7およびIE 9では、常に &lt;code&gt;background-clip: padding&lt;/code&gt; ように動作しました： &lt;code&gt;overflow: hidden | auto | scroll&lt;/code&gt; 場合のパディング：非表示| 自動| スクロールします。</target>
        </trans-unit>
        <trans-unit id="e40895f43f8daf804c7969752ab1482748b26b0b" translate="yes" xml:space="preserve">
          <source>In IE 7 and before, Internet explorer was behaving as if &lt;code&gt;background-origin: border-box&lt;/code&gt; was set. In Internet Explorer 8, as if &lt;code&gt;background-origin: padding-box&lt;/code&gt;, the regular default value, was set.</source>
          <target state="translated">IE 7以前では、Internet Explorerは &lt;code&gt;background-origin: border-box&lt;/code&gt; が設定されているかのように動作していました。Internet Explorer 8では、通常のデフォルト値である &lt;code&gt;background-origin: padding-box&lt;/code&gt; が設定されたかのように設定されました。</target>
        </trans-unit>
        <trans-unit id="d2cf37abe85810e9faef65ab4ebb25e5d6540427" translate="yes" xml:space="preserve">
          <source>In Internet Explorer 10 and 11, a &lt;code&gt;min-height&lt;/code&gt; declaration on a column-direction flex container doesn't apply to the container's flex items. See &lt;a href=&quot;https://github.com/philipwalton/flexbugs#3-min-height-on-a-column-flex-container-wont-apply-to-its-flex-items&quot;&gt;Flexbug #3&lt;/a&gt; for more info.</source>
          <target state="translated">Internet Explorer 10および11では、列方向のflexコンテナーの &lt;code&gt;min-height&lt;/code&gt; 宣言は、コンテナーのflexアイテムには適用されません。詳細については、&lt;a href=&quot;https://github.com/philipwalton/flexbugs#3-min-height-on-a-column-flex-container-wont-apply-to-its-flex-items&quot;&gt;Flexbug＃3&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f55daac39a2970b2c39578f77b898fef333b3280" translate="yes" xml:space="preserve">
          <source>In Internet Explorer 10 and 11, if column flex items have &lt;code&gt;align-items: center;&lt;/code&gt; set on them and their content is too large, then they will overflow the bounds of their container. See &lt;a href=&quot;https://github.com/philipwalton/flexbugs#2-column-flex-items-set-to-align-itemscenter-overflow-their-container&quot;&gt;Flexbug #2&lt;/a&gt;.</source>
          <target state="translated">Internet Explorer 10および11では、列フレックス項目に &lt;code&gt;align-items: center;&lt;/code&gt; それらに設定し、それらのコンテンツが大きすぎる場合、それらはコンテナの境界をオーバーフローします。&lt;a href=&quot;https://github.com/philipwalton/flexbugs#2-column-flex-items-set-to-align-itemscenter-overflow-their-container&quot;&gt;Flexbug＃2を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3ca2a0643faed0c66b2a02b33c7717c48cd3e1f9" translate="yes" xml:space="preserve">
          <source>In Internet Explorer 11, when &lt;code&gt;cursor&lt;/code&gt; is applied to an element and this element is underneath an open &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; menu and the user hovers over a &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; menu item that's on top of said element, the cursor for said element will be displayed rather than the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt;'s normal cursor. See &lt;a href=&quot;https://developer.microsoft.com/microsoft-edge/platform/issues/817822/&quot;&gt;bug 817822&lt;/a&gt;.</source>
          <target state="translated">Internet Explorer 11では、 &lt;code&gt;cursor&lt;/code&gt; が要素に適用され、この要素が開いている&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/select&quot;&gt; &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; &lt;/a&gt;メニューの下にあり、ユーザーがその要素の上にある&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/select&quot;&gt; &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; &lt;/a&gt;メニュー項目にカーソルを合わせると、その要素のカーソルが表示されます。より&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/select&quot;&gt; &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; &lt;/a&gt;の通常カーソルを。&lt;a href=&quot;https://developer.microsoft.com/microsoft-edge/platform/issues/817822/&quot;&gt;バグ817822を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d2e4fe5e1b8fd396a4c6c71bd62711557d80446d" translate="yes" xml:space="preserve">
          <source>In Internet Explorer 8 (IE8) the &lt;code&gt;-ms-accelerator&lt;/code&gt; attribute is an extension to CSS, and can be used as a synonym for &lt;code&gt;accelerator&lt;/code&gt;in IE8 Standards mode.</source>
          <target state="translated">Internet Explorer 8（IE8）では、 &lt;code&gt;-ms-accelerator&lt;/code&gt; 属性はCSSの拡張機能であり、IE8標準モードの &lt;code&gt;accelerator&lt;/code&gt; 同義語として使用できます。</target>
        </trans-unit>
        <trans-unit id="2df433c8083862097360e82c796919d3d0ced1fe" translate="yes" xml:space="preserve">
          <source>In Internet Explorer 8 and 9, there is a bug where a computed &lt;code&gt;background-color&lt;/code&gt; of &lt;code&gt;transparent&lt;/code&gt; causes &lt;code&gt;click&lt;/code&gt; events to not get fired on overlaid elements.</source>
          <target state="translated">Internet Explorer 8および9では、 &lt;code&gt;transparent&lt;/code&gt; 計算された &lt;code&gt;background-color&lt;/code&gt; が原因で &lt;code&gt;click&lt;/code&gt; イベントがオーバーレイされた要素で発生しないというバグがあります。</target>
        </trans-unit>
        <trans-unit id="7a7f51c05a37e9d741c8d5578d57f985bea9d9e9" translate="yes" xml:space="preserve">
          <source>In Internet Explorer 8 to Internet Explorer 11, hovering over an element and then scrolling up or down without moving the pointer will leave the element in the &lt;code&gt;:hover&lt;/code&gt; state until the pointer is moved. See &lt;a href=&quot;https://connect.microsoft.com/IE/feedbackdetail/view/926665&quot;&gt;bug 926665&lt;/a&gt;.</source>
          <target state="translated">Internet Explorer 8からInternet Explorer 11では、要素にカーソルを合わせ、ポインターを移動せずに上下にスクロールすると、ポインターが移動するまで要素は &lt;code&gt;:hover&lt;/code&gt; 状態のままになります。&lt;a href=&quot;https://connect.microsoft.com/IE/feedbackdetail/view/926665&quot;&gt;バグ926665を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3b213fccd0f4caed60146a9e4a6a51d90eb7ff8f" translate="yes" xml:space="preserve">
          <source>In Internet Explorer 8, if an element is inserted dynamically by clicking on a link the first-child style isn't applied until the link loses focus.</source>
          <target state="translated">Internet Explorer 8 では、リンクをクリックして要素が動的に挿入された場合、リンクがフォーカスを失うまで最初の子スタイルが適用されません。</target>
        </trans-unit>
        <trans-unit id="0afbddb0da61299da8ea9fd752c5b7a754eaba44" translate="yes" xml:space="preserve">
          <source>In Internet Explorer 8, if an element is inserted dynamically by clicking on a link, then the &lt;code&gt;:first-child&lt;/code&gt; style isn't applied until the link loses focus.</source>
          <target state="translated">Internet Explorer 8では、リンクをクリックして要素が動的に挿入された場合、リンクがフォーカスを失うまで、 &lt;code&gt;:first-child&lt;/code&gt; スタイルは適用されません。</target>
        </trans-unit>
        <trans-unit id="05967c6ec64c704a4b566b8a8f0cb566235add51" translate="yes" xml:space="preserve">
          <source>In Internet Explorer 9 (and possibly earlier), if a &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/table&quot;&gt;&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;&lt;/a&gt; has a parent with a non-&lt;code&gt;auto&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/overflow-x&quot;&gt;&lt;code&gt;overflow-x&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: auto;&lt;/code&gt;, the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/table&quot;&gt;&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;&lt;/a&gt; has enough content to horizontally overflow its parent, and there are &lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/:hover&quot;&gt;&lt;code&gt;:hover&lt;/code&gt;&lt;/a&gt; styles set on elements within the table, then hovering over said elements will cause the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/table&quot;&gt;&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;&lt;/a&gt;'s height to increase. See &lt;a href=&quot;http://jsbin.com/diwiqe&quot;&gt;a live demo that triggers the bug&lt;/a&gt;. One workaround for the bug is to set &lt;code&gt;min-height: 0%;&lt;/code&gt; (the &lt;code&gt;%&lt;/code&gt; unit must be specified, since unitless and &lt;code&gt;px&lt;/code&gt; don't work) on the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;'s parent element.</source>
          <target state="translated">Internet Explorer 9（およびおそらく以前のバージョン）では、&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/table&quot;&gt; &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; に&lt;/a&gt;非 &lt;code&gt;auto&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;親がある場合、&lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/overflow-x&quot;&gt; &lt;code&gt;overflow-x&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: auto;&lt;/code&gt; 、&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/table&quot;&gt; &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; に&lt;/a&gt;はその親を水平方向にオーバーフローするのに十分なコンテンツがあり、テーブル内の要素に設定された&lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/:hover&quot;&gt; &lt;code&gt;:hover&lt;/code&gt; &lt;/a&gt;スタイルがあり、その要素にカーソルを合わせると&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/table&quot;&gt; &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; &lt;/a&gt;の高さが増加します。&lt;a href=&quot;http://jsbin.com/diwiqe&quot;&gt;バグを引き起こすライブデモを&lt;/a&gt;ご覧ください。バグの1つの回避策は、 &lt;code&gt;min-height: 0%;&lt;/code&gt; （単位なしと &lt;code&gt;px&lt;/code&gt; は機能しないため、 &lt;code&gt;%&lt;/code&gt; 単位を指定する必要があります） &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; の親要素。</target>
        </trans-unit>
        <trans-unit id="484ff8b237fefbdf48168820dad70d4c17858d54" translate="yes" xml:space="preserve">
          <source>In Internet Explorer versions before 7, when both &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt; are specified, the element position is overconstrained and the &lt;code&gt;top&lt;/code&gt; property has precedence; the computed value of &lt;code&gt;bottom&lt;/code&gt; is set to &lt;code&gt;-top&lt;/code&gt;, while its specified value is ignored.</source>
          <target state="translated">Internet Explorerバージョン7より前では、 &lt;code&gt;top&lt;/code&gt; と &lt;code&gt;bottom&lt;/code&gt; 両方が指定されている場合、要素の位置が過剰に制約され、 &lt;code&gt;top&lt;/code&gt; プロパティが優先されます。計算された &lt;code&gt;bottom&lt;/code&gt; 値は &lt;code&gt;-top&lt;/code&gt; に設定されますが、指定された値は無視されます。</target>
        </trans-unit>
        <trans-unit id="5552baeb462251e401fa11da8815de9b5d7c96ce" translate="yes" xml:space="preserve">
          <source>In Internet Explorer, fixed positioning doesn't work if the document is in &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ie/ms531140(v=vs.85).aspx&quot;&gt;quirks mode&lt;/a&gt;.</source>
          <target state="translated">Internet Explorerでは、ドキュメントが&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ie/ms531140(v=vs.85).aspx&quot;&gt;互換モードの&lt;/a&gt;場合、固定配置は機能しません。</target>
        </trans-unit>
        <trans-unit id="05ccae8f4dabaeb5fb2e5abd908f560b0167915a" translate="yes" xml:space="preserve">
          <source>In Internet Explorer, fixed positioning doesn't work if the document is in &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Quirks_Mode_and_Standards_Mode&quot;&gt;quirks mode&lt;/a&gt;.</source>
          <target state="translated">Internet Explorerでは、ドキュメントが&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Quirks_Mode_and_Standards_Mode&quot;&gt;癖モードの&lt;/a&gt;場合、固定位置は機能しません。</target>
        </trans-unit>
        <trans-unit id="33b74c02473edf32df500c42443b75f6eb6fffd8" translate="yes" xml:space="preserve">
          <source>In JavaScript, &lt;code&gt;@media&lt;/code&gt; can be accessed via the CSS object model interface &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSMediaRule&quot;&gt;&lt;code&gt;CSSMediaRule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JavaScriptでは、 &lt;code&gt;@media&lt;/code&gt; は、 CSSオブジェクトモデルインタフェースを介してアクセスすることができる&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSMediaRule&quot;&gt; &lt;code&gt;CSSMediaRule&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41b502521dacc3e640822ad4a5b89c14755b6204" translate="yes" xml:space="preserve">
          <source>In JavaScript, &lt;code&gt;@supports&lt;/code&gt; can be accessed via the CSS object model interface &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSSupportsRule&quot;&gt;&lt;code&gt;CSSSupportsRule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JavaScriptでは、 &lt;code&gt;@supports&lt;/code&gt; はCSSオブジェクトモデルインターフェイス&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSSupportsRule&quot;&gt; &lt;code&gt;CSSSupportsRule&lt;/code&gt; を&lt;/a&gt;介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="b967f74f1f64e5d34ce52bb42551b67e4feb9360" translate="yes" xml:space="preserve">
          <source>In Media Queries Level 3, the &lt;code&gt;&amp;lt;ratio&amp;gt;&lt;/code&gt; data type consisted of a strictly positive &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;&lt;/a&gt; followed by a forward slash ('/', Unicode &lt;code&gt;U+002F SOLIDUS&lt;/code&gt;) and a second strictly positive &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;&lt;/a&gt;. Spaces before and after the slash are optional. The first number represents the width, while the second represents the height.</source>
          <target state="translated">メディアクエリレベル3では、 &lt;code&gt;&amp;lt;ratio&amp;gt;&lt;/code&gt; データ型は、厳密に正の&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt; と、&lt;/a&gt;それに続くスラッシュ（ '/'、Unicode &lt;code&gt;U+002F SOLIDUS&lt;/code&gt; ）、および2番目の厳密に正の&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt; で構成されていました&lt;/a&gt;。スラッシュの前後のスペースはオプションです。最初の数字は幅を表し、2番目の数字は高さを表します。</target>
        </trans-unit>
        <trans-unit id="20706841123976adeaa337e6f0cdd2d66bb686b0" translate="yes" xml:space="preserve">
          <source>In Media Queries Level 4 this can be written as:</source>
          <target state="translated">Media Queries Level 4では、これは次のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="9abe86ffb3d187d3f36a25151eb13fd74968986a" translate="yes" xml:space="preserve">
          <source>In Media Queries Level 4, the &amp;lt;ratio&amp;gt; date type is updated to consist of a strictly positive &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; followed by a forward slash ('/', Unicode &lt;code&gt;U+002F SOLIDUS&lt;/code&gt;) and a second strictly positive &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt;. In addition a single &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; as a value is allowable.</source>
          <target state="translated">メディアクエリレベル4では、&amp;lt;ratio&amp;gt;日付型が更新され、厳密に正の&lt;a href=&quot;number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; と&lt;/a&gt;それに続くスラッシュ（ '/'、Unicode &lt;code&gt;U+002F SOLIDUS&lt;/code&gt; ）、および2番目の厳密に正の&lt;a href=&quot;number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; で構成され&lt;/a&gt;ます。さらに、値として単一の&lt;a href=&quot;number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="4ed0905507fbddc8ffca6b6b6c5df98f3ecd58fc" translate="yes" xml:space="preserve">
          <source>In Mozilla applications like Firefox, the &lt;code&gt;-moz-border-bottom-colors&lt;/code&gt; CSS property sets a list of colors for the bottom border.</source>
          <target state="translated">FirefoxなどのMozillaアプリケーションでは、 &lt;code&gt;-moz-border-bottom-colors&lt;/code&gt; CSSプロパティが下枠の色のリストを設定します。</target>
        </trans-unit>
        <trans-unit id="d646e6c522d83bd260b320e439da9b3cc06cc15a" translate="yes" xml:space="preserve">
          <source>In Mozilla applications like Firefox, the &lt;code&gt;-moz-border-left-colors&lt;/code&gt; CSS property sets a list of colors for the left border.</source>
          <target state="translated">FirefoxなどのMozillaアプリケーションでは、 &lt;code&gt;-moz-border-left-colors&lt;/code&gt; CSSプロパティは、左ボーダーの色のリストを設定します。</target>
        </trans-unit>
        <trans-unit id="6cb61c6d68200a673e9a68a5c66d151ac435518a" translate="yes" xml:space="preserve">
          <source>In Mozilla applications like Firefox, the &lt;code&gt;-moz-border-right-colors&lt;/code&gt; CSS property sets a list of colors for the right border.</source>
          <target state="translated">FirefoxなどのMozillaアプリケーションでは、 &lt;code&gt;-moz-border-right-colors&lt;/code&gt; CSSプロパティは、右の境界線の色のリストを設定します。</target>
        </trans-unit>
        <trans-unit id="cc3f1daf690a70ea8e9b00ddf364285a9841bfae" translate="yes" xml:space="preserve">
          <source>In Mozilla applications like Firefox, the &lt;code&gt;-moz-border-top-colors&lt;/code&gt; CSS property sets a list of colors for the top border.</source>
          <target state="translated">FirefoxなどのMozillaアプリケーションでは、 &lt;code&gt;-moz-border-top-colors&lt;/code&gt; CSSプロパティが上部の境界線の色のリストを設定します。</target>
        </trans-unit>
        <trans-unit id="e15eb265a585a306161d6a278772e00ff0fedc96" translate="yes" xml:space="preserve">
          <source>In Mozilla applications like Firefox, the &lt;code&gt;-moz-outline-radius&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property can be used to give an element's &lt;a href=&quot;outline&quot;&gt;&lt;code&gt;outline&lt;/code&gt;&lt;/a&gt; rounded corners.</source>
          <target state="translated">FirefoxなどのMozillaアプリケーションでは、 &lt;code&gt;-moz-outline-radius&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSSの&lt;/a&gt;プロパティは、要素の与えるために使用することができる&lt;a href=&quot;outline&quot;&gt; &lt;code&gt;outline&lt;/code&gt; &lt;/a&gt;丸みを帯びた角を。</target>
        </trans-unit>
        <trans-unit id="885c957d4087dcd7f1465cdfc698b1559ce3983f" translate="yes" xml:space="preserve">
          <source>In Mozilla applications like Firefox, the &lt;code&gt;-moz-outline-radius&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;&lt;a href=&quot;shorthand_properties&quot;&gt;shorthand property&lt;/a&gt; can be used to give an element's &lt;a href=&quot;outline&quot;&gt;&lt;code&gt;outline&lt;/code&gt;&lt;/a&gt; rounded corners.</source>
          <target state="translated">FirefoxなどのMozillaアプリケーションでは、 &lt;code&gt;-moz-outline-radius&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;&lt;a href=&quot;shorthand_properties&quot;&gt;省略形プロパティ&lt;/a&gt;を使用して、要素の&lt;a href=&quot;outline&quot;&gt; &lt;code&gt;outline&lt;/code&gt; &lt;/a&gt;丸みを帯びた角にすることができます。</target>
        </trans-unit>
        <trans-unit id="71425c57b965e2e6fb351245088392c523711399" translate="yes" xml:space="preserve">
          <source>In Mozilla applications, &lt;code&gt;-moz-user-input&lt;/code&gt; determines if an element will accept user input.</source>
          <target state="translated">Mozillaアプリケーションでは、 &lt;code&gt;-moz-user-input&lt;/code&gt; は、要素がユーザー入力を受け入れるかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="8a2560592288d08ecaf1be3f739350eb1a6946d7" translate="yes" xml:space="preserve">
          <source>In Mozilla applications, the &lt;code&gt;-moz-outline-radius-bottomleft&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property can be used to round the bottom-left corner of an element's &lt;a href=&quot;outline&quot;&gt;&lt;code&gt;outline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Mozillaアプリケーションでは、 &lt;code&gt;-moz-outline-radius-bottomleft&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;プロパティを使用して、要素の&lt;a href=&quot;outline&quot;&gt; &lt;code&gt;outline&lt;/code&gt; &lt;/a&gt;左下隅を丸めることができます。</target>
        </trans-unit>
        <trans-unit id="a63edcd216cb0f3a24e70a7f95e9f920333f2746" translate="yes" xml:space="preserve">
          <source>In Mozilla applications, the &lt;code&gt;-moz-outline-radius-bottomright&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property can be used to round the bottom-right corner of an element's &lt;a href=&quot;outline&quot;&gt;&lt;code&gt;outline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Mozillaアプリケーションでは、 &lt;code&gt;-moz-outline-radius-bottomright&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;プロパティを使用して、要素の&lt;a href=&quot;outline&quot;&gt; &lt;code&gt;outline&lt;/code&gt; &lt;/a&gt;右下隅を丸めることができます。</target>
        </trans-unit>
        <trans-unit id="060ba422b3cff44130f96db124630bf50ff56a5f" translate="yes" xml:space="preserve">
          <source>In Mozilla applications, the &lt;code&gt;-moz-outline-radius-topleft&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property can be used to round the top-left corner of an element's &lt;a href=&quot;outline&quot;&gt;&lt;code&gt;outline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Mozillaアプリケーションでは、 &lt;code&gt;-moz-outline-radius-topleft&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;プロパティを使用して、要素の&lt;a href=&quot;outline&quot;&gt; &lt;code&gt;outline&lt;/code&gt; &lt;/a&gt;左上隅を丸めることができます。</target>
        </trans-unit>
        <trans-unit id="bfb4218fd0048be14ea792e8eff51732da40d3f9" translate="yes" xml:space="preserve">
          <source>In Mozilla applications, the &lt;code&gt;-moz-outline-radius-topright&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; property can be used to round the top-right corner of an element's &lt;a href=&quot;outline&quot;&gt;&lt;code&gt;outline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Mozillaアプリケーションでは、 &lt;code&gt;-moz-outline-radius-topright&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;プロパティを使用して、要素の&lt;a href=&quot;outline&quot;&gt; &lt;code&gt;outline&lt;/code&gt; &lt;/a&gt;右上隅を丸めることができます。</target>
        </trans-unit>
        <trans-unit id="9e60be4b0bbd8eac8ed2a5dd87b95f9fa3d28a1f" translate="yes" xml:space="preserve">
          <source>In Opera prior to version 11.60, replaced elements with &lt;code&gt;border-radius&lt;/code&gt; will not have rounded corners.</source>
          <target state="translated">バージョン11.60より前のOperaでは、 &lt;code&gt;border-radius&lt;/code&gt; で置き換えられた要素は角が丸くなりません。</target>
        </trans-unit>
        <trans-unit id="f18ee7716836d9bd1ff739d118760a6d818ae662" translate="yes" xml:space="preserve">
          <source>In Opera, &lt;code&gt;visibility: collapse&lt;/code&gt; works on table elements, but doesn't hide a &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/tfoot&quot;&gt;&lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt;&lt;/a&gt; if it is adjacent to a visible &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/tbody&quot;&gt;&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Operaでは、 &lt;code&gt;visibility: collapse&lt;/code&gt; はテーブル要素で機能しますが、可視の&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/tbody&quot;&gt; &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; に&lt;/a&gt;隣接している場合は&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/tfoot&quot;&gt; &lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt; を&lt;/a&gt;非表示にしません。</target>
        </trans-unit>
        <trans-unit id="378aff0da81e4cfa2370e3961449bec3e145ab6b" translate="yes" xml:space="preserve">
          <source>In SVG, when text is scaled up or down, browsers calculate the final size of the text (which is determined by the specified font size and the applied scale) and request a font of that computed size from the platform's font system. But if you request a font size of, say, 9 with a scale of 140%, the resulting font size of 12.6 doesn't explicitly exist in the font system, so the browser rounds the font size to 12 instead. This results in stair-step scaling of text.</source>
          <target state="translated">SVG では、テキストが拡大縮小されると、ブラウザはテキストの最終的なサイズを計算し (これは指定されたフォントサイズと適用されたスケールによって決定されます)、その計算されたサイズのフォントをプラットフォームのフォントシステムに要求します。しかし、フォントサイズが例えば 9、縮尺が 140% の場合、結果として 12.6 というフォントサイズはフォントシステムには明示的に存在しないため、ブラウザはフォントサイズを 12 に丸めてしまいます。そのため、ブラウザは代わりにフォントサイズを 12 に丸めてしまいます。これは、テキストを階段状に拡大縮小することになります。</target>
        </trans-unit>
        <trans-unit id="7a5b6c9c3ddb63355c6e6325240ec48bf56f8f9e" translate="yes" xml:space="preserve">
          <source>In Safari, &lt;code&gt;:in-range&lt;/code&gt; matched disabled and read-only inputs (see &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=156530&quot;&gt;bug 156530&lt;/a&gt;). It was later changed to only match enabled read-write inputs.</source>
          <target state="translated">Safariでは、 &lt;code&gt;:in-range&lt;/code&gt; は無効で読み取り専用の入力に一致していました（&lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=156530&quot;&gt;バグ156530を&lt;/a&gt;参照）。その後、有効な読み取り/書き込み入力のみに一致するように変更されました。</target>
        </trans-unit>
        <trans-unit id="fcb6b5a359473b18255067807792a00b21d4088d" translate="yes" xml:space="preserve">
          <source>In Safari, &lt;code&gt;:in-range&lt;/code&gt; matched disabled and read-only inputs (see &lt;a href=&quot;https://webkit.org/b/156530&quot;&gt;bug 156530&lt;/a&gt;). It was later changed to only match enabled read-write inputs.</source>
          <target state="translated">Safariでは、 &lt;code&gt;:in-range&lt;/code&gt; が無効で読み取り専用の入力に一致していました（&lt;a href=&quot;https://webkit.org/b/156530&quot;&gt;バグ156530を&lt;/a&gt;参照）。その後、有効な読み取り/書き込み入力のみに一致するように変更されました。</target>
        </trans-unit>
        <trans-unit id="5306832d0149aed08ed29106b74a9e0cb93186cf" translate="yes" xml:space="preserve">
          <source>In Safari, any shadows that do not explicitly specify a color are transparent.</source>
          <target state="translated">Safariでは、色を明示的に指定していない影はすべて透明になります。</target>
        </trans-unit>
        <trans-unit id="307666c8efda7abd1115a9021ac303c9eff997a8" translate="yes" xml:space="preserve">
          <source>In Spring of 2017, we saw for the first time a major specification like Grid being shipped into browsers almost simultaneously, and we now have CSS Grid Layout support in the public versions of Firefox, Chrome, Opera, Safari and Edge. However, while evergreen browsers mean that many of us are going to see the majority of users having Grid Layout support very quickly, there are also old or non-supporting browsers to contend with. In this guide we will walk through a variety of strategies for support.</source>
          <target state="translated">2017年の春、私たちは初めてGridのような主要な仕様がほぼ同時にブラウザに出荷されるのを目の当たりにし、現在ではFirefox、Chrome、Opera、Safari、EdgeのパブリックバージョンでCSS Grid Layoutがサポートされています。しかし、エバーグリーンなブラウザは、大多数のユーザーがすぐに Grid Layout をサポートすることを意味しますが、古いブラウザやサポートしていないブラウザも存在します。このガイドでは、サポートのための様々な戦略を紹介します。</target>
        </trans-unit>
        <trans-unit id="7eb88804a8039d51fa93d6df93f81c16c8f47c43" translate="yes" xml:space="preserve">
          <source>In Turkic languages, like Turkish (&lt;code&gt;tr&lt;/code&gt;), Azerbaijani (&lt;code&gt;az&lt;/code&gt;), Crimean Tatar (&lt;code&gt;crh&lt;/code&gt;), Volga Tatar (&lt;code&gt;tt&lt;/code&gt;), and Bashkir (&lt;code&gt;ba&lt;/code&gt;), there are two kinds of &lt;code&gt;i&lt;/code&gt;, with and without the dot, and two case pairings: &lt;code&gt;i&lt;/code&gt;/&lt;code&gt;İ&lt;/code&gt; and &lt;code&gt;ı&lt;/code&gt;/&lt;code&gt;I&lt;/code&gt;.</source>
          <target state="translated">トルコ語（ &lt;code&gt;tr&lt;/code&gt; ）、アゼルバイジャン語（ &lt;code&gt;az&lt;/code&gt; ）、クリミアタタール語（ &lt;code&gt;crh&lt;/code&gt; ）、ヴォルガタタール語（ &lt;code&gt;tt&lt;/code&gt; ）、バシキール語（ &lt;code&gt;ba&lt;/code&gt; ）などのトルコ語では、ドットの有無にかかわらず2種類の &lt;code&gt;i&lt;/code&gt; と、2つの大文字と小文字のペアがあります。 ： &lt;code&gt;i&lt;/code&gt; / &lt;code&gt;İ&lt;/code&gt; と &lt;code&gt;ı&lt;/code&gt; / &lt;code&gt;I&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e07882c5b9ed633ee66c66f648bec121f5908e8" translate="yes" xml:space="preserve">
          <source>In Turkic languages, such as Turkish (tr), Azerbaijani (az), Crimean Tatar (crh), Volga Tatar (tt), and Bashkir (ba), there are two kinds of &lt;code&gt;i&lt;/code&gt; (one with the dot, one without) and two case pairings: &lt;code&gt;i&lt;/code&gt;/&lt;code&gt;İ&lt;/code&gt; and &lt;code&gt;ı&lt;/code&gt;/&lt;code&gt;I&lt;/code&gt;.</source>
          <target state="translated">トルコ語（tr）、アゼルバイジャン語（az）、クリミアタタール語（crh）、ヴォルガタタール語（tt）、バシキール語（ba）などのトルコ語では、2種類の &lt;code&gt;i&lt;/code&gt; （1つはドットあり、1 つはなし）と2ケースのペア： &lt;code&gt;i&lt;/code&gt; / &lt;code&gt;İ&lt;/code&gt; と &lt;code&gt;ı&lt;/code&gt; / &lt;code&gt;I&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6c7a2412a0a1aa9cc5f6aae5873eaf552e8df4e" translate="yes" xml:space="preserve">
          <source>In Windows 10: Settings &amp;gt; Ease of Access &amp;gt; Display &amp;gt; Show animations in Windows.</source>
          <target state="translated">Windows 10の場合：[設定]&amp;gt; [コンピューターの簡単操作]&amp;gt; [表示]&amp;gt; [Windowsでアニメーションを表示する]。</target>
        </trans-unit>
        <trans-unit id="e5ff5456a639a7081972d39678f7f27efce7756f" translate="yes" xml:space="preserve">
          <source>In Windows 7: Control Panel &amp;gt; Ease of Access &amp;gt; Make the computer easier to see &amp;gt; Turn off all unnecessary animations (when possible).</source>
          <target state="translated">Windows 7の場合：コントロールパネル&amp;gt;コンピューターの簡単操作&amp;gt;コンピューターを見やすくする&amp;gt;不要なアニメーションをすべてオフにします（可能な場合）。</target>
        </trans-unit>
        <trans-unit id="69958fd1c3b69f1c0f338798b33a3ff69719f5b3" translate="yes" xml:space="preserve">
          <source>In Windows Internet Explorer 8 the &lt;code&gt;-ms-scrollbar-track-color&lt;/code&gt; attribute is an extension to CSS, and can be used as a synonym for &lt;code&gt;scrollbar-track-color&lt;/code&gt; in IE8 Standards Mode.</source>
          <target state="translated">Windows Internet Explorer 8では、 &lt;code&gt;-ms-scrollbar-track-color&lt;/code&gt; 属性はCSSの拡張機能であり、IE8標準モードでscrollbar &lt;code&gt;scrollbar-track-color&lt;/code&gt; 同義語として使用できます。</target>
        </trans-unit>
        <trans-unit id="0f31170eaf9943a358b50719fa5092e663e634ca" translate="yes" xml:space="preserve">
          <source>In Windows Internet Explorer 8, the &lt;code&gt;-ms-filter&lt;/code&gt; attribute is an extension to CSS, and can be used as a synonym for &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; in IE8 Standards mode. When you use &lt;code&gt;-ms-filter&lt;/code&gt;, enclose the progid in single quotes (&lt;code&gt;'&lt;/code&gt;) or double quotes (&lt;code&gt;&quot;&lt;/code&gt;). Use commas (&lt;code&gt;,&lt;/code&gt;) to separate multiple values, as shown in the Examples section.</source>
          <target state="translated">Windows Internet Explorer 8では、 &lt;code&gt;-ms-filter&lt;/code&gt; 属性はCSSの拡張機能であり、IE8標準モードの&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt;同義語として使用できます。 &lt;code&gt;-ms-filter&lt;/code&gt; を使用する場合は、progidを一重引用符（ &lt;code&gt;'&lt;/code&gt; ）または二重引用符（ &lt;code&gt;&quot;&lt;/code&gt; ）で囲みます。例のセクションに示すように、コンマ（ &lt;code&gt;,&lt;/code&gt; ）を使用して複数の値を区切ります。</target>
        </trans-unit>
        <trans-unit id="35b7c3f352b6397e4e90d142d673cabe1cf765c5" translate="yes" xml:space="preserve">
          <source>In Windows Internet Explorer 8, the &lt;code&gt;-ms-scrollbar-3dlight-color&lt;/code&gt; attribute is an extension to CSS, and can be used as a synonym for &lt;code&gt;scrollbar-3dlight-color&lt;/code&gt; in IE8 Standards Mode.</source>
          <target state="translated">Windows Internet Explorer 8では、 &lt;code&gt;-ms-scrollbar-3dlight-color&lt;/code&gt; 属性はCSSの拡張機能であり、IE8標準モードで &lt;code&gt;scrollbar-3dlight-color&lt;/code&gt; の同義語として使用できます。</target>
        </trans-unit>
        <trans-unit id="0b66eda0c654d57de8d6aaa815a5f5b5a64cf189" translate="yes" xml:space="preserve">
          <source>In Windows Internet Explorer 8, the &lt;code&gt;-ms-scrollbar-arrow-color&lt;/code&gt; property is an extension to CSS, and can be used as a synonym for &lt;code&gt;scrollbar-arrow-color&lt;/code&gt; in IE8 Standards Mode.</source>
          <target state="translated">Windows Internet Explorer 8では、 &lt;code&gt;-ms-scrollbar-arrow-color&lt;/code&gt; プロパティはCSSの拡張機能であり、IE8標準モードでscrollbar &lt;code&gt;scrollbar-arrow-color&lt;/code&gt; 同義語として使用できます。</target>
        </trans-unit>
        <trans-unit id="d6386ff2f9ec2596b5a346de5b0aa54743aaea73" translate="yes" xml:space="preserve">
          <source>In a block formatting context, each box's left outer edge touches the left edge of the containing block (for right-to-left formatting, right edges touch).&amp;rdquo; - 9.4.1</source>
          <target state="translated">ブロックの書式設定のコンテキストでは、各ボックスの左外側の端が、含まれているブロックの左端に接しています（右から左への書式設定の場合、右端が接します）。」-9.4.1</target>
        </trans-unit>
        <trans-unit id="822afc5b8b0beb496d526c9b4e63d71471696efe" translate="yes" xml:space="preserve">
          <source>In a future version of the specification it would be useful to be able to have overflow columns in continuous media display in the block direction, therefore allowing the reader to scroll down to view the next set of columns.</source>
          <target state="translated">仕様の将来のバージョンでは、ブロック方向の連続メディア表示でオーバーフロー列を持つことができると便利であり、そのため読者は次の列のセットを表示するためにスクロールダウンすることができます。</target>
        </trans-unit>
        <trans-unit id="4197746f7227d316c0adaa8b80f93492394b7c1b" translate="yes" xml:space="preserve">
          <source>In a horizontal &lt;code&gt;writing-mode&lt;/code&gt; this CSS would apply &lt;code&gt;5px&lt;/code&gt; of padding to the top of the box and 10px of padding to the bottom:</source>
          <target state="translated">横書き &lt;code&gt;writing-mode&lt;/code&gt; このCSSはボックスの上部に &lt;code&gt;5px&lt;/code&gt; のパディングを適用し、下部に10pxのパディングを適用します。</target>
        </trans-unit>
        <trans-unit id="656b133dd8458a3650465de6b12b90286674723b" translate="yes" xml:space="preserve">
          <source>In a horizontal writing mode this CSS would apply a 5px margin to the top of the box and a 10px margin to the bottom.</source>
          <target state="translated">横書きの場合、このCSSはボックスの上部に5pxのマージンを、下部に10pxのマージンを適用します。</target>
        </trans-unit>
        <trans-unit id="d607845f37f742a85401853979ab9393246a94fa" translate="yes" xml:space="preserve">
          <source>In a later article in this series &amp;mdash; Aligning items in a flex container &amp;mdash; we will take a thorough look at how the Box Alignment properties apply to flex items.</source>
          <target state="translated">このシリーズの後半の記事（フレックスコンテナーでのアイテムの配置）では、ボックスの配置プロパティがフレックスアイテムにどのように適用されるかを詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="bbf2e85693e8aec91204957ec72bc7f29ad8896a" translate="yes" xml:space="preserve">
          <source>In a later guide in this series, I&amp;rsquo;ll be taking a proper look at Box Alignment and how it works in Grid Layout. For now, here is a comparison between simple examples of flexbox and grid.</source>
          <target state="translated">このシリーズの後半のガイドでは、ボックスの配置とそれがグリッドレイアウトでどのように機能するかについて適切に説明します。ここでは、フレックスボックスとグリッドの簡単な例を比較します。</target>
        </trans-unit>
        <trans-unit id="80a7d45c10e0cdfb82016353c40883e972db80c3" translate="yes" xml:space="preserve">
          <source>In a multi-column block, content is automatically flowed from one column into the next as needed. All HTML, CSS and DOM functionality is supported within columns, as are editing and printing.</source>
          <target state="translated">マルチカラムブロックでは、コンテンツは必要に応じて1つのカラムから次のカラムへと自動的に流れていきます。HTML、CSS、DOM の機能はすべてカラム内でサポートされており、編集や印刷も可能です。</target>
        </trans-unit>
        <trans-unit id="8bef0e09d052fbac433a11734b9709be46aac90f" translate="yes" xml:space="preserve">
          <source>In a perfect world of browser support, the reason you'd choose to use flexbox is because you want to lay a collection of items out in one direction or another. As you lay out your items you want to control the dimensions of the items in that one dimension, or control the spacing between items. These are the uses that flexbox was designed for. You can read more about the difference between flexbox and CSS Grid Layout in &lt;a href=&quot;relationship_of_flexbox_to_other_layout_methods&quot;&gt;Relationship of Flexbox to other layout methods&lt;/a&gt;, where we discuss how flexbox fits into the overall picture of CSS Layout.</source>
          <target state="translated">ブラウザーサポートの完全な世界では、フレックスボックスを使用する理由は、アイテムのコレクションを一方向または別の方向に配置するためです。アイテムをレイアウトするときに、その1つの次元のアイテムの寸法を制御したり、アイテム間の間隔を制御したりします。これらはflexboxが設計された用途です。フレックスボックスとCSSグリッドレイアウトの違いについて詳しく&lt;a href=&quot;relationship_of_flexbox_to_other_layout_methods&quot;&gt;は、フレックスボックスと他のレイアウトメソッドの関係をご覧ください。フレックスボックス&lt;/a&gt;がCSSレイアウトの全体像にどのように適合するかについて説明しています。</target>
        </trans-unit>
        <trans-unit id="3bc363e411abf5898e98aa3066d1e303f5821452" translate="yes" xml:space="preserve">
          <source>In a radial gradient, the colors transition from the center of an ellipse, outward, in all directions. With conic gradients, the colors transition as as if spun around the center of a circle, starting at the top and going clockwise. Similar to radial gradients, you can position the center of the gradient. Similar to linear gradients, you can change the gradient angle.</source>
          <target state="translated">放射状グラデーションでは、 色は楕円の中心から外側に向かって全方向に変化します。円錐形グラデーションでは、色は円の中心を中心に回転しているかのように、上から時計回りに移動していきます。放射状グラデーションと同様に、グラデーションの中心を指定できます。線形グラデーションと同様に、グラデーションの角度を変えることができます。</target>
        </trans-unit>
        <trans-unit id="fd88678f50419c35ed43f5fa7d02d34b1b9ff59b" translate="yes" xml:space="preserve">
          <source>In a vertical writing mode then would lay out horizontally.</source>
          <target state="translated">縦書きモードでは、その後、水平にレイアウトされます。</target>
        </trans-unit>
        <trans-unit id="e01d0995c06fd484c061943f9d14c2923ea966d8" translate="yes" xml:space="preserve">
          <source>In absolutely-positioned layouts, the keyword behaved like &lt;code&gt;start&lt;/code&gt; on &lt;em&gt;replaced&lt;/em&gt; absolutely-positioned boxes, and as &lt;code&gt;stretch&lt;/code&gt; on &lt;em&gt;all other&lt;/em&gt; absolutely-positioned boxes.</source>
          <target state="translated">絶対配置レイアウトでは、キーワードは、&lt;em&gt;置換された&lt;/em&gt;絶対配置ボックスで &lt;code&gt;start&lt;/code&gt; するように動作し&lt;em&gt;、他のすべての&lt;/em&gt;絶対配置ボックスで &lt;code&gt;stretch&lt;/code&gt; れ&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a853b42f7047cd8efc1d9fd42ac9942a10ab3acb" translate="yes" xml:space="preserve">
          <source>In absolutely-positioned layouts, the keyword behaves like &lt;code&gt;start&lt;/code&gt; on &lt;em&gt;replaced&lt;/em&gt; absolutely-positioned boxes, and as &lt;code&gt;stretch&lt;/code&gt; on &lt;em&gt;all other&lt;/em&gt; absolutely-positioned boxes.</source>
          <target state="translated">絶対配置のレイアウトでは、キーワードは、&lt;em&gt;置換された&lt;/em&gt;絶対配置のボックスで &lt;code&gt;start&lt;/code&gt; するように動作し&lt;em&gt;、他のすべての&lt;/em&gt;絶対配置のボックスで &lt;code&gt;stretch&lt;/code&gt; し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="320d28f497aadcc5b422e2819000cb122757a814" translate="yes" xml:space="preserve">
          <source>In action</source>
          <target state="translated">アクション</target>
        </trans-unit>
        <trans-unit id="99ccd076d667b23c66d3b7ff8e88a1dbf19b6265" translate="yes" xml:space="preserve">
          <source>In addition to asking the browser if it supports a feature, you can test for the opposite by adding in the &lt;code&gt;not&lt;/code&gt; keyword:</source>
          <target state="translated">ブラウザに機能がサポートされているかどうかを尋ねるだけで &lt;code&gt;not&lt;/code&gt; 、notキーワードを追加することで、反対のことをテストできます。</target>
        </trans-unit>
        <trans-unit id="7e2b3b85c2777074ed353d28ccaad585e03552d3" translate="yes" xml:space="preserve">
          <source>In addition to broad feature sets like ligatures or lining figures (numerals that line up evenly as opposed to 'oldstyle', which look more like lower-case letters), there are also very specific ones such as stylistic sets (which might include several specific variants of glyphs meant to be used together), alternates (which might be one or more variants of the letter 'a'), or even language-specific alterations for East Asian languages. In the latter case, these alterations are actually necessary to properly express the language, so they go beyond the more stylistic preference of most other OpenType features.</source>
          <target state="translated">合字や裏付き数字(小文字のように見える「oldstyle」とは対照的に均等に並ぶ数字)のような大まかな機能セットに加えて、スタイルセット(一緒に使用されることを意図した複数の特定のグリフの変種を含む可能性がある)やオルタネート(文字「a」の1つまたは複数の変種である可能性がある)、さらには東アジア言語のための言語固有の変更など、非常に特殊な機能セットもあります。後者の場合、これらの変更は言語を適切に表現するために実際に必要なものであるため、他のほとんどの OpenType 機能の様式的な好みを超えたものとなります。</target>
        </trans-unit>
        <trans-unit id="5c046329ebae0600c208c979e6a52c6d5c1ed816" translate="yes" xml:space="preserve">
          <source>In addition to displaying documents, using the correct writing mode for the language, writing modes can be used creatively within documents that are otherwise &lt;code&gt;ltr&lt;/code&gt;. In this next example I have a grid layout with a set of links down one side. I&amp;rsquo;ve used writing modes to turn these on their side in the column track:</source>
          <target state="translated">ドキュメントを表示することに加えて、言語に適した書き込みモードを使用して、それ以外の場合は &lt;code&gt;ltr&lt;/code&gt; であるドキュメント内で書き込みモードを独創的に使用できます。この次の例では、片側に一連のリンクがあるグリッドレイアウトがあります。私は書き込みモードを使用して、列トラックでこれらを横向きにしました。</target>
        </trans-unit>
        <trans-unit id="2eb52c7a147952d2ea4ebc5d701ded0862a99155" translate="yes" xml:space="preserve">
          <source>In addition to indicating that the element is not the target of mouse events, the value &lt;code&gt;none&lt;/code&gt; instructs the mouse event to go &quot;through&quot; the element and target whatever is &quot;underneath&quot; that element instead.</source>
          <target state="translated">エレメントがマウスイベントのターゲットではないことを示すことに加えて、値 &lt;code&gt;none&lt;/code&gt; は、マウスイベントにエレメントを「通過」し、代わりにそのエレメントの「下」にあるものをターゲットにするよう指示します。</target>
        </trans-unit>
        <trans-unit id="5bf44ab4ad19d427e2bb824a8bf2d56e8c1dd7f3" translate="yes" xml:space="preserve">
          <source>In addition to indicating that the element is not the target of pointer events, the value &lt;code&gt;none&lt;/code&gt; instructs the pointer event to go &quot;through&quot; the element and target whatever is &quot;underneath&quot; that element instead.</source>
          <target state="translated">要素がポインタイベントのターゲットではないことを示すことに加えて、値 &lt;code&gt;none&lt;/code&gt; は、ポインタイベントに要素を「通過」し、代わりにその要素の「下」にあるものをターゲットにするように指示します。</target>
        </trans-unit>
        <trans-unit id="be630f48e3eded015a335adacc65ce23fb35aa71" translate="yes" xml:space="preserve">
          <source>In addition to reversing the order in which flex items are visually displayed, you can target individual items and change where they appear in the visual order with the &lt;a href=&quot;../order&quot;&gt;&lt;code&gt;order&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">flexアイテムが視覚的に表示される順序を逆にすることに加えて、個々のアイテムをターゲットにして、&lt;a href=&quot;../order&quot;&gt; &lt;code&gt;order&lt;/code&gt; &lt;/a&gt;プロパティを使用して視覚的な順序でそれらが表示される場所を変更できます。</target>
        </trans-unit>
        <trans-unit id="69bed036b9ed9fb8feb32cdffea98e085029dd61" translate="yes" xml:space="preserve">
          <source>In addition to specifying the start and end lines by number, you can specify a start line and then the number of tracks you would like the area to span.</source>
          <target state="translated">開始線と終了線を番号で指定するだけでなく、開始線を指定してから、エリアをまたいでほしいトラックの数を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="91e7bad3ceceb6ed4734a03860420f1dc2c38825" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;auto&lt;/code&gt; keyword, you can use the &lt;code&gt;content&lt;/code&gt; keyword as the &lt;code&gt;flex-basis&lt;/code&gt;. This will result in the &lt;code&gt;flex-basis&lt;/code&gt; being taken from the content size even if there is a width set on the item. This is a newer keyword and has less browser support, however you can always get the same effect by using &lt;code&gt;auto&lt;/code&gt; as the flex-basis and ensuring that your item does not have a width set, in order that it will be auto-sized.</source>
          <target state="translated">&lt;code&gt;auto&lt;/code&gt; キーワードに加えて、 &lt;code&gt;content&lt;/code&gt; キーワードを &lt;code&gt;flex-basis&lt;/code&gt; として使用できます。これにより、アイテムに幅が設定されている場合でも、 &lt;code&gt;flex-basis&lt;/code&gt; がコンテンツサイズから取得されます。これは新しいキーワードであり、ブラウザのサポートは少ないですが、フレックスベースとして &lt;code&gt;auto&lt;/code&gt; を使用し、アイテムに幅が設定されていないことを確認することで、常に同じ効果を得ることができます。</target>
        </trans-unit>
        <trans-unit id="14f790608a5d177bdb1e57350f47d8ef2740d924" translate="yes" xml:space="preserve">
          <source>In addition to the CSS Display Specification Level 3, further specifications define the behavior of various values of display.</source>
          <target state="translated">CSS表示仕様レベル3に加えて、さらなる仕様では、表示の様々な値の動作を定義しています。</target>
        </trans-unit>
        <trans-unit id="a1678978059f12992cde93376cd6a35525d7a413" translate="yes" xml:space="preserve">
          <source>In addition to the ability to place items accurately onto a created grid, the CSS Grid Layout specification contains rules that control what happens when you create a grid and do not place some or all of the child items. You can see auto-placement in action in the simplest of ways by creating a grid on a set of items. If you give the items no placement information they will position themselves on the grid, one in each grid cell.</source>
          <target state="translated">作成したグリッド上にアイテムを正確に配置する機能に加えて、CSS のグリッド レイアウト仕様には、グリッドを作成したときに子アイテムの一部またはすべてを配置しなかった場合の動作を制御するルールが含まれています。項目のセットにグリッドを作成することで、最も簡単な方法で自動配置を確認することができます。アイテムに配置情報を与えない場合、アイテムはグリッド上の各セルに1つずつ配置されます。</target>
        </trans-unit>
        <trans-unit id="3e875f9f2e7b58dd63cd2e253d8894f9aa514d85" translate="yes" xml:space="preserve">
          <source>In addition to the above, browser support for these properties is a little patchy. The compatibility data charts on the individual property pages here on MDN can help you see which browsers support which features. In most cases, the fallback to breaks not being controlled is something you can live with, with suboptimal breaking being untidy rather than a disaster to your layout.</source>
          <target state="translated">上記に加えて、これらのプロパティのブラウザのサポートは少しばらつきがあります。MDN の個々のプロパティページにある互換性データのチャートを見れば、どのブラウザがどの機能をサポートしているかを知ることができます。ほとんどの場合、コントロールされていない改行のフォールバックは、レイアウトを壊すというよりは、最適な改行ではなく不潔な改行になってしまうので、それに耐えられるものです。</target>
        </trans-unit>
        <trans-unit id="744f18547c59c3767a5cac8545b868e079b2f366" translate="yes" xml:space="preserve">
          <source>In addition to the one-dimensional versus two-dimensional distinction, there is another way to decide if you should use flexbox or grid for a layout. Flexbox works from the content out. An ideal use case for flexbox is when you have a set of items and want to space them out evenly in a container. You let the size of the content decide how much individual space each item takes up. If the items wrap onto a new line, they will work out their spacing based on their size and the available space &lt;em&gt;on that line&lt;/em&gt;.</source>
          <target state="translated">1次元と2次元の違いに加えて、レイアウトにフレックスボックスとグリッドのどちらを使用するかを決定する別の方法があります。Flexboxはコンテンツから機能します。flexboxの理想的な使用例は、アイテムのセットがあり、それらをコンテナー内で均等に配置したい場合です。コンテンツのサイズによって、各アイテムが占める個々のスペースの量を決定します。アイテムが新しい行に折り返される場合、サイズと&lt;em&gt;その行で&lt;/em&gt;利用可能なスペース&lt;em&gt;に&lt;/em&gt;基づいて、スペースが調整&lt;em&gt;されます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0f979152fa9b5dc91470c8c5e675188982914c67" translate="yes" xml:space="preserve">
          <source>In addition to the pre-defined keywords that are part of the specification for a property, all CSS properties accept the CSS-wide property values &lt;a href=&quot;initial&quot;&gt;&lt;code&gt;initial&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;inherit&quot;&gt;&lt;code&gt;inherit&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;unset&quot;&gt;&lt;code&gt;unset&lt;/code&gt;&lt;/a&gt;, which explicitly specify defaulting behaviors.</source>
          <target state="translated">プロパティの仕様の一部である事前定義されたキーワードに加えて、すべてのCSSプロパティは、デフォルトの動作を明示的に指定するCSS全体のプロパティ値&lt;a href=&quot;initial&quot;&gt; &lt;code&gt;initial&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;inherit&quot;&gt; &lt;code&gt;inherit&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;unset&quot;&gt; &lt;code&gt;unset&lt;/code&gt; &lt;/a&gt;を受け入れます。</target>
        </trans-unit>
        <trans-unit id="2c80cf93c72b0c70f71a87d2de58cb2d976bd1b4" translate="yes" xml:space="preserve">
          <source>In addition to the root element of our document (the &lt;code&gt;html&lt;/code&gt; element) ,a new</source>
          <target state="translated">ドキュメントのルート要素（ &lt;code&gt;html&lt;/code&gt; 要素）に加えて、新しい</target>
        </trans-unit>
        <trans-unit id="08cf428cc3e141afe7410156afc8fcd107bcd315" translate="yes" xml:space="preserve">
          <source>In addition to the rules existing in CSS2.1, new levels of CSS further describe the behaviour of block and inline boxes. The &lt;a href=&quot;../display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; property defines how a box and any boxes inside it behave. In the CSS Display Model Level 3, we can learn more about how the &lt;code&gt;display&lt;/code&gt; property changes the behaviour of boxes and the boxes they generate.</source>
          <target state="translated">CSS2.1に存在するルールに加えて、新しいレベルのCSSは、ブロックボックスとインラインボックスの動作をさらに記述します。&lt;a href=&quot;../display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt;プロパティは、ボックスと任意のボックスがそれが振る舞う内部でどのように定義します。CSSディスプレイモデルレベル3では、 &lt;code&gt;display&lt;/code&gt; プロパティがボックスの動作とボックスが生成するボックスをどのように変更するかについて詳しく知ることができます。</target>
        </trans-unit>
        <trans-unit id="31cb455cbd34c42c8df68471be1833da1a54f00d" translate="yes" xml:space="preserve">
          <source>In addition to the rules existing in CSS2.1, new levels of CSS further describes the behaviour of block and inline boxes. The &lt;code&gt;display&lt;/code&gt; property defines how a box, and any boxes inside it behaves. In the CSS Display Model Level 3 we can learn more about how the display property changes the behaviour of boxes and the boxes they generate.</source>
          <target state="translated">CSS2.1に存在するルールに加えて、CSSの新しいレベルでは、ブロックボックスとインラインボックスの動作がさらに説明されています。 &lt;code&gt;display&lt;/code&gt; ボックス、および任意のボックスがその動作の内部でどのようにプロパティが定義されています。CSS Display Model Level 3では、displayプロパティがボックスの動作とボックスが生成するボックスをどのように変更するかについて詳しく知ることができます。</target>
        </trans-unit>
        <trans-unit id="2244d26d271165b749eaa008fa2cbf33d92cf95e" translate="yes" xml:space="preserve">
          <source>In addition to these mapped properties there are some additional shorthand properties made possible by being able to address block and inline dimensions. These have no mapping to physical properties, aside from the &lt;a href=&quot;../inset&quot;&gt;&lt;code&gt;inset&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">これらのマップされたプロパティに加えて、ブロックおよびインラインディメンションをアドレス指定できるようにすることで可能になるいくつかの追加の省略形プロパティがあります。これらには、&lt;a href=&quot;../inset&quot;&gt; &lt;code&gt;inset&lt;/code&gt; &lt;/a&gt;プロパティを除いて、物理プロパティへのマッピングはありません。</target>
        </trans-unit>
        <trans-unit id="69996fa2865ae5903316b531297a942b8582f2db" translate="yes" xml:space="preserve">
          <source>In addition to these mapped properties there are some additional shorthand properties made possible by being able to address block and inline dimensions. These have no mapping to physical properties.</source>
          <target state="translated">これらのマッピングされたプロパティに加えて、ブロックやインラインのディメンションを指定できることで可能になった、いくつかの追加の短縮プロパティがあります。これらは物理的なプロパティへのマッピングはありません。</target>
        </trans-unit>
        <trans-unit id="b75653b185f655aab64be6a4a830f23d9efcd458" translate="yes" xml:space="preserve">
          <source>In addition, even for the above styles, you won't be able to change the transparency between unvisited and visited links, as you otherwise would be able to using &lt;code&gt;&lt;a href=&quot;color_value#rgba()&quot;&gt;rgba()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;color_value#hsla()&quot;&gt;hsla()&lt;/a&gt;&lt;/code&gt;, or the &lt;code&gt;&lt;a href=&quot;color_value#transparent&quot;&gt;transparent&lt;/a&gt;&lt;/code&gt; keyword.</source>
          <target state="translated">また、上記のスタイルでも、 &lt;code&gt;&lt;a href=&quot;color_value#rgba()&quot;&gt;rgba()&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;color_value#hsla()&quot;&gt;hsla()&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;color_value#transparent&quot;&gt;transparent&lt;/a&gt;&lt;/code&gt; キーワードを使用できるため、未訪問のリンクと訪問済みのリンクの間の透明度を変更することはできません。</target>
        </trans-unit>
        <trans-unit id="b46f8cb972ac7b76947fd0e2204077db774e93af" translate="yes" xml:space="preserve">
          <source>In addition, feature queries cannot test for &lt;em&gt;partial implementations&lt;/em&gt;. A good example of this is the &lt;code&gt;gap&lt;/code&gt; property. All browsers that support CSS Grid support &lt;code&gt;gap&lt;/code&gt; in CSS Grid, however only Firefox supports &lt;code&gt;gap&lt;/code&gt; in Flexbox. If you test for the &lt;code&gt;gap&lt;/code&gt; property, because you want to use it in Flexbox, you will get a positive response even though it is not implemented.</source>
          <target state="translated">さらに、機能クエリは&lt;em&gt;部分的な実装を&lt;/em&gt;テストできません。この良い例は、 &lt;code&gt;gap&lt;/code&gt; プロパティです。CSSグリッドをサポートするすべてのブラウザはCSSグリッドの &lt;code&gt;gap&lt;/code&gt; をサポートしますが、FirefoxのみがFlexboxの &lt;code&gt;gap&lt;/code&gt; をサポートします。 &lt;code&gt;gap&lt;/code&gt; プロパティをテストする場合、Flexboxで使用するため、実装されていなくても肯定的な応答が得られます。</target>
        </trans-unit>
        <trans-unit id="51eab06649ee467014f6a6ba073acd25b4fbe3ed" translate="yes" xml:space="preserve">
          <source>In addition, the references for specific values of display explain how these formatting contexts work in terms of box layout.</source>
          <target state="translated">さらに、表示の特定の値に関する参照は、ボックスレイアウトの観点から、これらの書式設定コンテキストがどのように機能するかを説明しています。</target>
        </trans-unit>
        <trans-unit id="f938310c979fffe8f203f94192e7d9eb807ce977" translate="yes" xml:space="preserve">
          <source>In addition, unlike custom properties, which cannot be used outside of declarations, the &lt;code&gt;env()&lt;/code&gt; function can be used in place of any part of a property value, or any part of a descriptor (e.g. in &lt;a href=&quot;@media&quot;&gt;Media query rules&lt;/a&gt;). As the spec evolves, it may also be usable in other places such as selectors.</source>
          <target state="translated">さらに、宣言の外部では使用できないカスタムプロパティとは異なり、 &lt;code&gt;env()&lt;/code&gt; 関数は、プロパティ値の任意の部分、または記述子の任意の部分の代わりに使用できます（&lt;a href=&quot;@media&quot;&gt;メディアクエリルールなど&lt;/a&gt;）。スペックが進化するにつれて、セレクターなどの他の場所でも使用できるようになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="cda9fab168d9befbbcff3cde33569c1f48305bf5" translate="yes" xml:space="preserve">
          <source>In addition, you can find detailed explanations of the layout models that certain values enable elsewhere on MDN:</source>
          <target state="translated">また、特定の値が有効にするレイアウトモデルの詳細な説明は、MDNの他の場所で見ることができます。</target>
        </trans-unit>
        <trans-unit id="ea17f2db46fdcff64347e110a9a5f7ae5285ba3f" translate="yes" xml:space="preserve">
          <source>In addition:</source>
          <target state="translated">おまけに</target>
        </trans-unit>
        <trans-unit id="cf572b88ccf9e58e3f1aa49c2ed9cddb9bfb5743" translate="yes" xml:space="preserve">
          <source>In all of these examples I have been working in English, which is a left-to-right language. This means that our start lines are top and left of our grid when thinking in physical directions.</source>
          <target state="translated">これらの例では、私は左から右への言語である英語で仕事をしてきました。つまり、物理的な方向で考えるときに、私たちのスタートラインはグリッドの上と左になります。</target>
        </trans-unit>
        <trans-unit id="dd48b6671917bca188cc6c86712a56e6013913ac" translate="yes" xml:space="preserve">
          <source>In all other cases no interpolation occurs.</source>
          <target state="translated">それ以外の場合は補間は行われません。</target>
        </trans-unit>
        <trans-unit id="20fb3fe23686db3ecb2d619e0eb6c6b242584382" translate="yes" xml:space="preserve">
          <source>In an &lt;code&gt;&amp;lt;input type='text'&amp;gt;&lt;/code&gt; element styled with &lt;code&gt;text-align: right&lt;/code&gt;, if the clear button is shown, it will clip off the right edge of the text value of the &lt;code&gt;&amp;lt;input type='text'&amp;gt;&lt;/code&gt; element. A workaround is to hide the clear button using &lt;code&gt;display: none&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;text-align: right&lt;/code&gt; でスタイル設定された &lt;code&gt;&amp;lt;input type='text'&amp;gt;&lt;/code&gt; 要素で、クリアボタンが表示されている場合、 &lt;code&gt;&amp;lt;input type='text'&amp;gt;&lt;/code&gt; 要素のテキスト値の右端が切り取られます。回避策は、 &lt;code&gt;display: none&lt;/code&gt; を使用してクリアボタンを非表示にすることです。</target>
        </trans-unit>
        <trans-unit id="439edbed9decacfd1bebe3f4494e1b45c015f9b6" translate="yes" xml:space="preserve">
          <source>In an HTML editor, if a double-click or context-click occurred in sub-elements, the highest ancestor with this value will be selected.</source>
          <target state="translated">HTML エディタでは、サブエレメントでダブルクリックやコンテキストクリックが発生した場合、この値を持つ最も高い祖先が選択されます。</target>
        </trans-unit>
        <trans-unit id="19a3bbce77163651d7ee09975ecbfeb0fd61000f" translate="yes" xml:space="preserve">
          <source>In an SVG, the viewport is the visible area of the SVG image. You can set any height and width on an SVG, but the whole image might not be visible. The area that is visible is called the viewport. The size of the viewport can be definited using the width and height attributes of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt;&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">SVGでは、ビューポートはSVG画像の可視領域です。SVGには任意の高さと幅を設定できますが、画像全体が表示されない場合があります。表示される領域はビューポートと呼ばれます。ビューポートのサイズは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt; &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の幅と高さの属性を使用して定義できます。</target>
        </trans-unit>
        <trans-unit id="c19ca877dcf62e20f81aa718ee7daae51ebbcac9" translate="yes" xml:space="preserve">
          <source>In animations and &lt;a href=&quot;css_images/using_css_gradients&quot;&gt;gradients&lt;/a&gt;, &lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt; values are interpolated on each of their red, green, and blue components. Each component is interpolated as a real, floating-point number. Note that interpolation of colors happens in the &lt;a href=&quot;https://www.gimp.org/docs/plug-in/appendix-alpha.html&quot;&gt;alpha-premultiplied sRGBA color space&lt;/a&gt; to prevent unexpected gray colors from appearing. In animations, the interpolation's speed is determined by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/single-transition-timing-function&quot;&gt;timing function&lt;/a&gt;.</source>
          <target state="translated">アニメーションと&lt;a href=&quot;css_images/using_css_gradients&quot;&gt;グラデーションでは&lt;/a&gt;、 &lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt; 値は、赤、緑、青の各コンポーネントで補間されます。各コンポーネントは、実数の浮動小数点数として補間されます。予期しない灰色が表示されないようにするために、&lt;a href=&quot;https://www.gimp.org/docs/plug-in/appendix-alpha.html&quot;&gt;アルファが事前に乗算されたsRGBA色空間&lt;/a&gt;で色の補間が行われます。アニメーションでは、補間の速度は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/single-transition-timing-function&quot;&gt;タイミング関数&lt;/a&gt;によって決定されます。</target>
        </trans-unit>
        <trans-unit id="701c53c6262571e81753c6dc58e9cba0f2ae07bf" translate="yes" xml:space="preserve">
          <source>In block-level layouts, it aligns an item inside its containing block on the inline axis.</source>
          <target state="translated">ブロックレベルのレイアウトでは、それを含むブロック内のアイテムをインライン軸上に整列させます。</target>
        </trans-unit>
        <trans-unit id="35819adfbeeaea066010f86aff00ab304fcedad0" translate="yes" xml:space="preserve">
          <source>In block-level layouts, it aligns the items inside their containing block on the inline axis.</source>
          <target state="translated">ブロックレベルのレイアウトでは、そのブロック内のアイテムをインライン軸上に配置します。</target>
        </trans-unit>
        <trans-unit id="8f16fe2511ee90dafd5a1e407fe24b0a692b9c3b" translate="yes" xml:space="preserve">
          <source>In block-level layouts, the keyword is a synonym of &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">ブロックレベルのレイアウトでは、キーワードは &lt;code&gt;start&lt;/code&gt; の同義語です。</target>
        </trans-unit>
        <trans-unit id="26a299e382b8448c7a752f1a4bf54709bb82360d" translate="yes" xml:space="preserve">
          <source>In both cases the start edge of the cross axis is at the top of the flex container and the end edge at the bottom, as both languages have a horizontal writing mode.</source>
          <target state="translated">どちらの場合も、どちらの言語も横書きモードを持っているため、クロス軸の開始端はフレックスコンテナの上部にあり、終了端は下部にあります。</target>
        </trans-unit>
        <trans-unit id="627dbd65374ee80a9610cde91fc745e27899e16c" translate="yes" xml:space="preserve">
          <source>In both examples, the gradient is written twice: the first is the CSS Images Level 3 method of repeating the color for each stop and the second example is the CSS Images Level 4 multiple color stop method of including two color-stop-lengths in a linear-color-stop declaration.</source>
          <target state="translated">いずれの例でも、グラデーションは2回記述されており、1回目の例では各ストップごとに色を繰り返すCSS Images Level 3の方法、2回目の例ではリニアカラーストップ宣言に2つのカラーストップ長を含むCSS Images Level 4のマルチカラーストップの方法を使用しています。</target>
        </trans-unit>
        <trans-unit id="8e78324a91fecc0943c2c48d0ae112e84a56bdf5" translate="yes" xml:space="preserve">
          <source>In browsers that do not support masonry, regular grid auto-placement will be used instead.</source>
          <target state="translated">石積みをサポートしていないブラウザでは、代わりに通常のグリッドの自動配置が使用されます。</target>
        </trans-unit>
        <trans-unit id="6a56fdac7dd1cebd3be24f995c230f163005d10f" translate="yes" xml:space="preserve">
          <source>In case of equality, the &lt;a href=&quot;specificity&quot;&gt;specificity&lt;/a&gt; of a value is considered to choose one or the other.</source>
          <target state="translated">等しい場合、値の&lt;a href=&quot;specificity&quot;&gt;特異性&lt;/a&gt;はどちらか一方を選択すると見なされます。</target>
        </trans-unit>
        <trans-unit id="4ada1826d99f923bb087fefa93d349bfeaaeabad" translate="yes" xml:space="preserve">
          <source>In cases where a fragment identifier points to a portion of the document, readers may become confused about which part of the document they're supposed to be reading. By styling the target of a URI, reader confusion can be reduced or eliminated.</source>
          <target state="translated">フラグメント識別子が文書の一部分を指している場合、読者は文書のどの部分を読もうとしているのか混乱してしまうかもしれません。URI のターゲットをスタイリングすることで、読者の混乱を軽減したり、排除したりすることができます。</target>
        </trans-unit>
        <trans-unit id="a23d2aac1bb989f8632b4ce35beb0755129211c1" translate="yes" xml:space="preserve">
          <source>In comparison, a data type that is a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;, such as a string value of the &lt;a href=&quot;content&quot;&gt;&lt;code&gt;content&lt;/code&gt;&lt;/a&gt; property, must be quoted:</source>
          <target state="translated">比較すると、&lt;a href=&quot;content&quot;&gt; &lt;code&gt;content&lt;/code&gt; &lt;/a&gt;プロパティの文字列値など、&lt;a href=&quot;string&quot;&gt; &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; &lt;/a&gt;であるデータ型は引用符で囲む必要があります。</target>
        </trans-unit>
        <trans-unit id="8822ee8e3c2ebb232b8be0a9babe46236ee7a02d" translate="yes" xml:space="preserve">
          <source>In comparison, the grid version always has three column tracks. The tracks themselves will grow and shrink, but there are always three since we asked for three when defining our grid.</source>
          <target state="translated">それに比べて、グリッド版では常に3つの列のトラックがあります。トラック自体は大きくなったり小さくなったりしますが、グリッドを定義する際に3つのトラックを指定したので、常に3つのトラックがあります。</target>
        </trans-unit>
        <trans-unit id="570b102e12f5617e5aa83f4339d4eb010102df73" translate="yes" xml:space="preserve">
          <source>In continuous media, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;viewport&lt;/a&gt; is the viewing area of the browser window. User agents can change the layout of the page when the viewport size changes &amp;mdash; for example, if you resize your window, or change the orientation of a mobile device.</source>
          <target state="translated">連続メディアでは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;ビューポート&lt;/a&gt;はブラウザウィンドウの表示領域です。ユーザーエージェントは、ビューポートのサイズが変更されたときにページのレイアウトを変更できます。たとえば、ウィンドウのサイズを変更したり、モバイルデバイスの向きを変更したりします。</target>
        </trans-unit>
        <trans-unit id="a8bff5d41de2a92f7170015e9723fc1ecca75443" translate="yes" xml:space="preserve">
          <source>In each case, we show what the source image looks like rendered in a 150x150 box, and provide a link to the SVG source.</source>
          <target state="translated">それぞれのケースで、150x150のボックスでレンダリングされたソース画像がどのように見えるかを示し、SVGソースへのリンクを提供します。</target>
        </trans-unit>
        <trans-unit id="aac5e0bde5582fa02279478b3d8303ebee135b93" translate="yes" xml:space="preserve">
          <source>In earlier versions of the &lt;code&gt;font-stretch&lt;/code&gt; specification, the property accepts only the nine keyword values.</source>
          <target state="translated">&lt;code&gt;font-stretch&lt;/code&gt; 仕様の以前のバージョンでは、プロパティは9つのキーワード値のみを受け入れます。</target>
        </trans-unit>
        <trans-unit id="90f819a00a14e6b245d16ec2afdf72e73458d1e7" translate="yes" xml:space="preserve">
          <source>In earlier versions of the &lt;code&gt;font-stretch&lt;/code&gt; specification, the property accepts only the nine keyword values. CSS Fonts Level 4 extends the syntax to accept a &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; value as well. This enables variable fonts to offer something more like a continuum of character widths. For TrueType or OpenType variable fonts, the &quot;wdth&quot; variation is used to implement varying widths.</source>
          <target state="translated">&lt;code&gt;font-stretch&lt;/code&gt; 仕様の以前のバージョンでは、このプロパティは9つのキーワード値のみを受け入れます。CSS Fonts Level 4は、構文を拡張して、 &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; 値も受け入れるようにします。これにより、可変フォントは文字幅の連続のようなものを提供できるようになります。TrueTypeまたはOpenType可変フォントの場合、「wdth」バリエーションは、さまざまな幅を実装するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8f1521de2eb98f5349d7def135482bed50108914" translate="yes" xml:space="preserve">
          <source>In earlier versions of the &lt;code&gt;font-weight&lt;/code&gt; specification, the property accepts only keyword values and the numeric values 100, 200, 300, 400, 500, 600, 700, 800, and 900. CSS Fonts Level 4 extends the syntax to accept any number between 1 and 1000. This enables variable fonts to provide a much finer-grained range of font weights. Note that this is not yet supported by all browsers.</source>
          <target state="translated">&lt;code&gt;font-weight&lt;/code&gt; 仕様の以前のバージョンでは、このプロパティはキーワード値と100、200、300、400、500、600、700、800、900の数値のみを受け入れます。CSSFonts Level 4は構文を拡張して任意の数値を受け入れます1から1000の間です。これにより、可変フォントは、フォントの太さの範囲をはるかに細かくすることができます。これはまだすべてのブラウザでサポートされているわけではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="d3cc039220fdefc3e929b861017c4a169fbe8093" translate="yes" xml:space="preserve">
          <source>In earlier versions of the &lt;code&gt;font-weight&lt;/code&gt; specification, the property accepts only keyword values and the numeric values 100, 200, 300, 400, 500, 600, 700, 800, and 900; non-variable fonts can only really make use of these set values, although fine-grained values (e.g. 451) will be translated to one of these values for non-variable fonts using the &lt;a href=&quot;#Fallback_weights&quot;&gt;Fallback weights&lt;/a&gt; system.</source>
          <target state="translated">&lt;code&gt;font-weight&lt;/code&gt; 仕様の以前のバージョンでは、プロパティはキーワード値と数値100、200、300、400、500、600、700、800、および900のみを受け入れます。非可変フォントはこれらの設定値のみを実際に使用できますが、細粒度の値（451など）は、&lt;a href=&quot;#Fallback_weights&quot;&gt;フォールバックウェイト&lt;/a&gt;システムを使用して非可変フォントのこれらの値の1つに変換されます。</target>
        </trans-unit>
        <trans-unit id="ca5b069f768e2b39abbb798d9b1f468cd3b569e4" translate="yes" xml:space="preserve">
          <source>In earlier versions of the &lt;code&gt;font-weight&lt;/code&gt; specification, the property accepts only keyword values and the numeric values 100, 200, 300, 400, 500, 600, 700, 800, and 900; non-variable fonts can only really make use of these set values, although fine-grained values (e.g. 451) will be translated to one of these values for non-variable fonts.</source>
          <target state="translated">&lt;code&gt;font-weight&lt;/code&gt; 仕様の以前のバージョンでは、プロパティはキーワード値と数値100、200、300、400、500、600、700、800、および900のみを受け入れます。非可変フォントは、これらの設定値のみを実際に使用できますが、細粒度の値（451など）は、非可変フォントのこれらの値の1つに変換されます。</target>
        </trans-unit>
        <trans-unit id="5953970c41ca5f633defc1b9da5f0c91c35f3e2c" translate="yes" xml:space="preserve">
          <source>In eventual supporting browsers, the &lt;code&gt;:blank&lt;/code&gt; pseudo-class will enable developers to highlight in some way input controls that are not required, but still have no content filled in, perhaps as a reminder to users.</source>
          <target state="translated">最終的にサポートされるブラウザーでは、 &lt;code&gt;:blank&lt;/code&gt; 疑似クラスにより、開発者は、おそらくユーザーへのリマインダーとして、必要ではないがコンテンツが入力されていない入力コントロールを何らかの方法で強調表示できるようになります。</target>
        </trans-unit>
        <trans-unit id="f1ea47a51b0dbd995252884124bb680f309b40b1" translate="yes" xml:space="preserve">
          <source>In flexbox layouts, this keyword has no meaning as this property is &lt;em&gt;ignored.&lt;/em&gt;</source>
          <target state="translated">フレックスボックスレイアウトでは、このプロパティは&lt;em&gt;無視さ&lt;/em&gt;れるため、このキーワードには意味がありません&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="83ef9a793fa5b50c40d9e8a4b9cbd47e993ade96" translate="yes" xml:space="preserve">
          <source>In flexbox layouts, this property is &lt;em&gt;ignored&lt;/em&gt; (&lt;a href=&quot;css_box_alignment/box_alignment_in_flexbox&quot;&gt;more&lt;/a&gt; about alignment in Flexbox)</source>
          <target state="translated">フレキシボックスのレイアウトでは、このプロパティがされて&lt;em&gt;無視さ&lt;/em&gt;（&lt;a href=&quot;css_box_alignment/box_alignment_in_flexbox&quot;&gt;より&lt;/a&gt;フレキシボックスのアライメントについて）</target>
        </trans-unit>
        <trans-unit id="0f28a44916671359e4586275afed632f310fb167" translate="yes" xml:space="preserve">
          <source>In forced colors mode, the values of the following properties are treated as if they have no author-level values specified. That is, user-specified values (if any) or browser-specified values are used instead.</source>
          <target state="translated">強制色モードでは、以下のプロパティの値は、オーサレベルの値が指定されていないかのように扱われます。つまり、ユーザが指定した値(あれば)またはブラウザが指定した値が代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="62d436f738efee2e075eccc0f7fd83734b07f846" translate="yes" xml:space="preserve">
          <source>In formal CSS syntax, data types are denoted by a keyword placed between the inequality signs &quot;&lt;code&gt;&amp;lt;&lt;/code&gt;&quot; and &quot;&lt;code&gt;&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">正式なCSS構文では、データ型は不等記号「 &lt;code&gt;&amp;lt;&lt;/code&gt; 」と「 &lt;code&gt;&amp;gt;&lt;/code&gt; 」の間に配置されたキーワードで示されます。</target>
        </trans-unit>
        <trans-unit id="7c78c0cb0eddf793f4122fccb9a00ad7cb16a7da" translate="yes" xml:space="preserve">
          <source>In formal syntax, data types are denoted by a keyword placed between the inequality signs &quot;&amp;lt;&quot; and &quot;&amp;gt;&quot;.</source>
          <target state="translated">形式的な構文では、データ型は不等号「&amp;lt;」と「&amp;gt;」の間に置かれたキーワードによって示されます。</target>
        </trans-unit>
        <trans-unit id="160e478f14b6d24175aca6998e2eb0bc9a4c24a7" translate="yes" xml:space="preserve">
          <source>In fragmented media, once a fragment (for example a page) is filled with columns, the columns will move to a new page and fill that up with columns. In continuous media, columns will overflow in the inline direction. On the web this means that you will get a horizontal scrollbar.</source>
          <target state="translated">フラグメント化されたメディアでは、フラグメント(例えばページ)がカラムで埋め尽くされると、カラムは新しいページに移動し、そのページをカラムで埋めます。連続したメディアでは、カラムはインライン方向にオーバーフローします。ウェブ上では、これは水平方向のスクロールバーが表示されることを意味します。</target>
        </trans-unit>
        <trans-unit id="87e9056c2b206cd9248d3207f0bfebd454cea773" translate="yes" xml:space="preserve">
          <source>In full screen mode, the viewport is the device screen, the window is the browser window, which can be as big as viewport or smaller, and the document is the website, which can be much taller or wider than the viewport. The viewport is basically the part of the document that is currently visible.</source>
          <target state="translated">フルスクリーンモードでは、ビューポートはデバイスの画面、ウィンドウはブラウザのウィンドウで、ビューポートと同じくらいの大きさになったり、小さくなったりしますが、ドキュメントはウェブサイトで、ビューポートよりもはるかに背が高くなったり、広くなったりします。ビューポートとは、基本的にはドキュメントの現在表示されている部分のことです。</target>
        </trans-unit>
        <trans-unit id="4a96d7b3a7aea1f5aee0bcb31ca5e0422c3c536f" translate="yes" xml:space="preserve">
          <source>In general, for a requested angle of 14 degrees or greater, larger angles are prefered; otherwise, smaller angles are preferred (see the spec's &lt;a href=&quot;https://drafts.csswg.org/css-fonts-4/#font-matching-algorithm&quot;&gt;font matching section&lt;/a&gt; for the precise algorithm).</source>
          <target state="translated">一般に、要求された角度が14度以上の場合、より大きな角度が推奨されます。それ以外の場合は、角度を小さくすることが推奨されます（正確なアルゴリズムについては、仕様の&lt;a href=&quot;https://drafts.csswg.org/css-fonts-4/#font-matching-algorithm&quot;&gt;フォントマッチングのセクション&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="faf305d8f4b75c9f3277e35e04297e3b66586611" translate="yes" xml:space="preserve">
          <source>In general:</source>
          <target state="translated">一般的には</target>
        </trans-unit>
        <trans-unit id="235862adf1c0905968addd047f638ceaeab13e2b" translate="yes" xml:space="preserve">
          <source>In grid layouts, it aligns an item inside its grid area on the inline axis (&lt;a href=&quot;css_box_alignment/box_alignment_in_grid_layout&quot;&gt;more&lt;/a&gt; about alignment in grid layouts)</source>
          <target state="translated">グリッドレイアウトで、それはインライン軸上のグリッド領域内のアイテムを整列させる（&lt;a href=&quot;css_box_alignment/box_alignment_in_grid_layout&quot;&gt;より&lt;/a&gt;グリッドレイアウト内の位置合わせについて）</target>
        </trans-unit>
        <trans-unit id="c1000a9a2d8ad7132a72dee322a658058d0134b7" translate="yes" xml:space="preserve">
          <source>In grid layouts, it aligns the items inside their grid areas on the inline axis (&lt;a href=&quot;css_box_alignment/box_alignment_in_grid_layout&quot;&gt;more&lt;/a&gt; about alignment in grid layouts)</source>
          <target state="translated">グリッドレイアウトでは、（インライン軸上でのグリッド領域内の項目を整列させる&lt;a href=&quot;css_box_alignment/box_alignment_in_grid_layout&quot;&gt;複数&lt;/a&gt;のグリッドレイアウト内の位置合わせについて）</target>
        </trans-unit>
        <trans-unit id="5263e9f74458ab1eef81d089ebf289bae34bf06d" translate="yes" xml:space="preserve">
          <source>In grid layouts, this keyword leads to a behavior similar to the one of &lt;code&gt;stretch&lt;/code&gt;, except for boxes with an aspect ratio or an intrinsic sizes where it behaves like &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">グリッドレイアウトでは、このキーワードは、アスペクト比のあるボックスや &lt;code&gt;start&lt;/code&gt; のように動作する固有のサイズを除いて、 &lt;code&gt;stretch&lt;/code&gt; のそれと同様の動作になります。</target>
        </trans-unit>
        <trans-unit id="93e2fafd974277555f26943911ad44c399f62353" translate="yes" xml:space="preserve">
          <source>In grid properties it is relative to the inline size of the grid container in column tracks and to the block size of the grid container for row tracks. Otherwise it is relative to the available inline size or block size of the laid out box depending on the writing mode.</source>
          <target state="translated">グリッドプロパティでは、列トラックのグリッドコンテナのインラインサイズと、行トラックのグリッドコンテナのブロックサイズを相対的に指定します。それ以外の場合は、書き込みモードに応じて、レイアウトされたボックスの利用可能なインラインサイズまたはブロックサイズからの相対値となります。</target>
        </trans-unit>
        <trans-unit id="2e2a9214c05615ba00b4f491c443e2e6a93771e0" translate="yes" xml:space="preserve">
          <source>In iOS: Settings &amp;gt; General &amp;gt; Accessibility &amp;gt; Reduce Motion.</source>
          <target state="translated">iOSの場合：[設定]&amp;gt; [一般]&amp;gt; [ユーザー補助]&amp;gt; [モーションを減らす]。</target>
        </trans-unit>
        <trans-unit id="9e3b6993ce2317ef8b30cedd90fab07e2ecfc02d" translate="yes" xml:space="preserve">
          <source>In including an iframe, the visual viewport is the size of the inner width and height of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; of the parent document. You can set any height and width on an iframe, but the whole document may not be visible.</source>
          <target state="translated">iframeを含める場合、ビジュアルビューポートは、親ドキュメントの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;の内側の幅と高さのサイズです。iframeには任意の高さと幅を設定できますが、ドキュメント全体が表示されない場合があります。</target>
        </trans-unit>
        <trans-unit id="11d379d30c3e74eb7acb6c229fba48bc30d9e7bb" translate="yes" xml:space="preserve">
          <source>In macOS: System Preferences &amp;gt; Accessibility &amp;gt; Display &amp;gt; Reduce motion.</source>
          <target state="translated">macOSの場合：[システム環境設定]&amp;gt; [ユーザー補助]&amp;gt; [表示]&amp;gt; [モーションを減らす]。</target>
        </trans-unit>
        <trans-unit id="821c5084ca337243035578194e03467f6c7e6caa" translate="yes" xml:space="preserve">
          <source>In many browsers, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea&quot;&gt;&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;&lt;/a&gt; elements are resizable by default. You may override this behavior with the &lt;code&gt;resize&lt;/code&gt; property.</source>
          <target state="translated">多くのブラウザでは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea&quot;&gt; &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; &lt;/a&gt;要素はデフォルトでサイズ変更可能です。この動作は &lt;code&gt;resize&lt;/code&gt; プロパティでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="ab46a0322c8d47aafde27a47b35608b9195e98af" translate="yes" xml:space="preserve">
          <source>In most cases you will also want to set &lt;a href=&quot;overflow&quot;&gt;&lt;code&gt;overflow&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;hidden&lt;/code&gt;, otherwise the contents won't be clipped but an ellipsis will still be shown after the specified number of lines.</source>
          <target state="translated">ほとんどの場合、&lt;a href=&quot;overflow&quot;&gt; &lt;code&gt;overflow&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;hidden&lt;/code&gt; に設定することもできます。そうしないと、コンテンツはクリップされませんが、指定された行数の後に省略記号が表示されます。</target>
        </trans-unit>
        <trans-unit id="bc2d288a9f39ff1b64356465fca53bdc8ba89156" translate="yes" xml:space="preserve">
          <source>In most cases, flow layout works as you would expect it to when changing the writing mode of the document or parts of the document. This can be used to properly typeset vertical languages or for creative reasons. CSS is making this easier by way of introducing logical properties and values so that when working in a vertical writing mode sizing can be based on element's inline and block size. This will be useful when creating components which can work in different writing-modes.</source>
          <target state="translated">ほとんどの場合、フローレイアウトは、文書や文書の一部の書き込みモードを変更すると、期待通りに動作します。これは、縦書きの言語を適切に組版するために、あるいは創造的な理由で使用することができます。CSSでは、論理的なプロパティと値を導入することで、縦書きモードで作業する際に、要素のインラインとブロックのサイズに基づいてサイジングを行うことができるようにすることで、これをより簡単にしています。これは、異なるライティング・モードで動作するコンポーネントを作成する際に便利です。</target>
        </trans-unit>
        <trans-unit id="3bef99e1a0b0a957ab5e44eda6dc1aff8ecb35c9" translate="yes" xml:space="preserve">
          <source>In moving to CSS we often spoke about CSS for layout enabling a separation of content and markup and presentation. The ultimate aim being that we could create a semantic and well structured document, then apply CSS to create the layout we desired. Sites such as the &lt;a href=&quot;http://www.csszengarden.com/&quot;&gt;CSS Zen Garden&lt;/a&gt; showcased this ability. The &lt;a href=&quot;http://www.csszengarden.com/&quot;&gt;CSS Zen Garden&lt;/a&gt; challenged us to take identical markup and create a unique design using CSS.</source>
          <target state="translated">CSSへの移行では、コンテンツとマークアップおよびプレゼンテーションの分離を可能にするレイアウトのCSSについてよく話しました。最終的な目的は、セマンティックで適切に構造化されたドキュメントを作成し、CSSを適用して目的のレイアウトを作成することです。&lt;a href=&quot;http://www.csszengarden.com/&quot;&gt;CSS Zen Garden&lt;/a&gt;などのサイトがこの機能を紹介しました。&lt;a href=&quot;http://www.csszengarden.com/&quot;&gt;CSS禅ガーデンは&lt;/a&gt;、同一のマークアップを取得し、CSSを使用したユニークなデザインを作成するために私達に挑戦しました。</target>
        </trans-unit>
        <trans-unit id="0f67738df700792c315e20a62e212007d1a70eab" translate="yes" xml:space="preserve">
          <source>In moving to CSS we often spoke about CSS for layout enabling a separation of content and markup and presentation. The ultimate aim being that we could create a semantic and well structured document, then apply CSS to create the layout we desired. Sites such as the &lt;a href=&quot;http://www.csszengarden.com/&quot;&gt;CSS Zen Garden&lt;/a&gt; showcased this ability. The CSS Zen Garden challenged us to take identical markup and create a unique design using CSS.</source>
          <target state="translated">CSSに移行する際に、コンテンツとマークアップおよびプレゼンテーションの分離を可能にするレイアウト用のCSSについてよく話しました。最終的な目的は、セマンティックで適切に構造化されたドキュメントを作成し、CSSを適用して目的のレイアウトを作成できるようにすることです。&lt;a href=&quot;http://www.csszengarden.com/&quot;&gt;CSS Zen Garden&lt;/a&gt;などのサイトは、この機能を紹介しました。CSS Zen Gardenは、同じマークアップを取り、CSSを使用して独自のデザインを作成するように私たちに挑戦しました。</target>
        </trans-unit>
        <trans-unit id="815a54f3c3d216995b4a7fe9ee3323dfd4b8f1b9" translate="yes" xml:space="preserve">
          <source>In multi-column layout the alignment container is the content box of the multicol container. The alignment subject is the column box. The properties which apply to multi-column layouts are detailed below.</source>
          <target state="translated">マルチカラムレイアウトでは、整列コンテナはマルチカラムコンテナのコンテンツボックスです。アラインメントサブジェクトは、カラムボックスです。複数列レイアウトに適用されるプロパティを以下に詳述します。</target>
        </trans-unit>
        <trans-unit id="cba2bdeb13f441f19f7ad76edbbb040c277cb28d" translate="yes" xml:space="preserve">
          <source>In normal flow, &lt;strong&gt;inline&lt;/strong&gt; elements display in the inline direction, that is in the direction words are displayed in a sentence according to the &lt;a href=&quot;css_writing_modes&quot;&gt;Writing Mode&lt;/a&gt; of the document. &lt;strong&gt;Block&lt;/strong&gt; elements display one after the other, as paragraphs do in the Writing Mode of that document. In English therefore, inline elements display one after the other, starting on the left, and block elements start at the top and move down the page.</source>
          <target state="translated">通常のフローでは、&lt;strong&gt;インライン&lt;/strong&gt;要素はインライン方向に表示されます。つまり、ドキュメントの&lt;a href=&quot;css_writing_modes&quot;&gt;ライティングモード&lt;/a&gt;に従って、単語が文に表示される方向に表示されます。&lt;strong&gt;ブロック&lt;/strong&gt;要素は、そのドキュメントの書き込みモードの段落と同様に、次々に表示されます。したがって、英語では、インライン要素は左から順に表示され、ブロック要素は上から開始してページの下に移動します。</target>
        </trans-unit>
        <trans-unit id="33b241f9b47c32be3ad86e3dff16fe926bd8bba9" translate="yes" xml:space="preserve">
          <source>In order for &lt;code&gt;overflow&lt;/code&gt; to have an effect, the block-level container must have either a set height (&lt;code&gt;height&lt;/code&gt; or &lt;code&gt;max-height&lt;/code&gt;) or &lt;code&gt;white-space&lt;/code&gt; set to &lt;code&gt;nowrap&lt;/code&gt;.</source>
          <target state="translated">ために &lt;code&gt;overflow&lt;/code&gt; 効果を有するため、ブロックレベルのコンテナは、設定された高さ（どちらか有していなければならない &lt;code&gt;height&lt;/code&gt; 又は &lt;code&gt;max-height&lt;/code&gt; ）または &lt;code&gt;white-space&lt;/code&gt; にセット &lt;code&gt;nowrap&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bc67cd685a5647dbccf91218e3f47a5aaacaba1" translate="yes" xml:space="preserve">
          <source>In order to avoid this and get some indentation, there are really only three options available to browser implementors.</source>
          <target state="translated">これを回避してインデントを得るためには、ブラウザの実装者が利用できる選択肢は本当に3つしかありません。</target>
        </trans-unit>
        <trans-unit id="e674677bd8087556acbbdc338b8d029b99e4a1a8" translate="yes" xml:space="preserve">
          <source>In order to calculate the em equivalent for any pixel value required, you can use this formula:</source>
          <target state="translated">必要とされる任意のピクセル値に対するEM等価値を計算するためには、この式を使用することができます。</target>
        </trans-unit>
        <trans-unit id="e796f07b739733e028929493890852e5ac039f94" translate="yes" xml:space="preserve">
          <source>In order to make the layout neater I can use multiple &lt;code&gt;.&lt;/code&gt; characters. As long as there is no white space between the full stops it will be counted as one cell. For a complex layout there is a benefit to having the rows and columns neatly aligned. It means that you can actually see, right there in the CSS, what this layout looks like.</source>
          <target state="translated">レイアウトをすっきりさせるために、複数を使用できます &lt;code&gt;.&lt;/code&gt; 文字。フルストップの間に空白がない限り、1つのセルとしてカウントされます。複雑なレイアウトの場合は、行と列をきちんと揃えることに利点があります。つまり、CSSでこのレイアウトがどのように見えるかを実際に確認できます。</target>
        </trans-unit>
        <trans-unit id="c9c2ee5e717806c3ca5da0a46bb0fe8b93ab388f" translate="yes" xml:space="preserve">
          <source>In order to understand why this is the case, and more importantly how to avoid the problem altogether, it's necessary to examine the details of list construction.</source>
          <target state="translated">なぜこのようなことが起こるのか、そしてより重要なことは、この問題を完全に回避する方法を理解するためには、リストの構築の詳細を検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="7a7a9c533fbcb20e7940affe7ba6b2f6f0a297ab" translate="yes" xml:space="preserve">
          <source>In order to use variable fonts on your operating system, you need to make sure that it is up to date. For example Linux OSes need the latest Linux Freetype version, and macOS prior to 10.13 does not support variable fonts. If your operating system is not up to date, you will not be able to use variable fonts in web pages or the Firefox Developer Tools.</source>
          <target state="translated">お使いのOSでバリアブルフォントを使用するには、OSが最新のものであることを確認する必要があります。例えば、Linux OSはLinux Freetypeの最新バージョンが必要で、10.13以前のmacOSはバリアブルフォントをサポートしていません。オペレーティングシステムが最新でないと、WebページやFirefox Developer Toolsでバリアブルフォントを使用することができません。</target>
        </trans-unit>
        <trans-unit id="78fc8b3d4273a107ef3febe9f1c1ad43a7ee28ec" translate="yes" xml:space="preserve">
          <source>In order to work out how much space there is available to lay out flex items, the browser needs to know how big the item is to start with. How is this worked out for items that don&amp;rsquo;t have a width or a height applied using an absolute length unit?</source>
          <target state="translated">フレックスアイテムのレイアウトに使用できるスペースの量を計算するために、ブラウザーはアイテムがどのくらいの大きさから始まるかを知る必要があります。これは、絶対的な長さの単位を使用して適用された幅または高さを持たないアイテムに対してどのように機能しますか？</target>
        </trans-unit>
        <trans-unit id="aa8b1af179297e4e069678645cc6253200edaa3e" translate="yes" xml:space="preserve">
          <source>In other words, this allows a custom element, or anything within that custom element's shadow DOM, to apply different styles based on its position within the outer DOM or classes/attributes applied to ancestor elements.</source>
          <target state="translated">言い換えれば、これにより、カスタム要素やそのカスタム要素のシャドウ DOM 内のものは、外部 DOM 内の位置や、祖先の要素に適用されたクラス/属性に基づいて、異なるスタイルを適用することができます。</target>
        </trans-unit>
        <trans-unit id="546eb5da7f7ca7309b47cfd26096baf5dddfefe9" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;basic_shapes&quot;&gt;Guide to Basic Shapes&lt;/a&gt; we explore each of the possible Basic Shapes and how to create them.</source>
          <target state="translated">当社では&lt;a href=&quot;basic_shapes&quot;&gt;基本図形へのガイド&lt;/a&gt;たちは、可能な基本図形のそれぞれを調査し、それらをどのように作成します。</target>
        </trans-unit>
        <trans-unit id="655e44b1236ca04d2821a3d073a5362998897cb7" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://mdn.github.io/css-examples/overscroll-behavior/&quot;&gt;overscroll-behavior example&lt;/a&gt; (see the &lt;a href=&quot;https://github.com/mdn/css-examples/tree/master/overscroll-behavior&quot;&gt;source code&lt;/a&gt; also), we present a full-page list of fake contacts, and a dialog box containing a chat window.</source>
          <target state="translated">当社では&lt;a href=&quot;https://mdn.github.io/css-examples/overscroll-behavior/&quot;&gt;オーバースクロール行動の例&lt;/a&gt;（参照&lt;a href=&quot;https://github.com/mdn/css-examples/tree/master/overscroll-behavior&quot;&gt;ソースコードを&lt;/a&gt;も）、我々は偽の連絡先のフルページのリスト、およびチャットウィンドウを含むダイアログボックスを提示します。</target>
        </trans-unit>
        <trans-unit id="feb7915d89dc5c0ac4667486f685f66c5fcbdabd" translate="yes" xml:space="preserve">
          <source>In our example each of the areas spans multiple grid cells and we achieve this by repeating the name of that grid area multiple times with white space between. You can add extra white space in order to keep your columns neatly lined up in the value of &lt;code&gt;grid-template-areas&lt;/code&gt;. You can see that I have done this in order that the &lt;code&gt;hd&lt;/code&gt; and &lt;code&gt;ft&lt;/code&gt; line up with &lt;code&gt;main&lt;/code&gt;.</source>
          <target state="translated">この例では、各領域が複数のグリッドセルにまたがっており、その間に空白を入れてそのグリッド領域の名前を複数回繰り返すことでこれを実現しています。列を &lt;code&gt;grid-template-areas&lt;/code&gt; の値にきちんと揃えるために、余分な空白を追加できます。 &lt;code&gt;hd&lt;/code&gt; と &lt;code&gt;ft&lt;/code&gt; が &lt;code&gt;main&lt;/code&gt; と一致するように、これを実行したことがわかります。</target>
        </trans-unit>
        <trans-unit id="6ecd8d34c8b18fc87a5e2a65029b72e721fb2cac" translate="yes" xml:space="preserve">
          <source>In our initial example with &lt;code&gt;display: flex&lt;/code&gt; on the container, the items display as a row and all line up at the start of the container. This is due to the initial value of &lt;code&gt;justify-content&lt;/code&gt; being &lt;code&gt;flex-start&lt;/code&gt;. Any available space is placed at the end of the items.</source>
          <target state="translated">&lt;code&gt;display: flex&lt;/code&gt; をコンテナーに設定した最初の例では、アイテムは行として表示され、すべてコンテナーの先頭に並んでいます。これは、 &lt;code&gt;justify-content&lt;/code&gt; の初期値が &lt;code&gt;flex-start&lt;/code&gt; であるためです。利用可能なスペースはアイテムの最後に配置されます。</target>
        </trans-unit>
        <trans-unit id="972b1f6fe5ad06ab71ac12e25b912fae3971103b" translate="yes" xml:space="preserve">
          <source>In our simple &lt;a href=&quot;https://mdn.github.io/css-examples/overscroll-behavior/overscroll-behavior-x&quot;&gt;overscroll-behavior-x example&lt;/a&gt; (see &lt;a href=&quot;https://github.com/mdn/css-examples/blob/master/overscroll-behavior/overscroll-behavior-x.html&quot;&gt;source code&lt;/a&gt; also), we have two block-level boxes, one inside the other. The outer box has a large &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; set on it so the page will scroll horizontally. The inner box has a small width (and &lt;a href=&quot;height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt;) set on it so it sits comforably inside the viewport, but its content is given a large &lt;code&gt;width&lt;/code&gt; so it will scroll horizontally.</source>
          <target state="translated">単純な&lt;a href=&quot;https://mdn.github.io/css-examples/overscroll-behavior/overscroll-behavior-x&quot;&gt;overscroll-behavior-xの例&lt;/a&gt;（&lt;a href=&quot;https://github.com/mdn/css-examples/blob/master/overscroll-behavior/overscroll-behavior-x.html&quot;&gt;ソースコード&lt;/a&gt;も参照）では、2つのブロックレベルのボックスがあり、一方が他方の中にあります。外側のボックスには大きな&lt;a href=&quot;width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;設定されているため、ページは水平方向にスクロールします。内側のボックスには小さな幅（および&lt;a href=&quot;height&quot;&gt; &lt;code&gt;height&lt;/code&gt; &lt;/a&gt;）が設定されているため、ビューポートの内側に快適に収まりますが、そのコンテンツには大きな &lt;code&gt;width&lt;/code&gt; が与えられ、水平方向にスクロールします。</target>
        </trans-unit>
        <trans-unit id="17bafec10322c5b78938f961b98dc5cfb21b43d6" translate="yes" xml:space="preserve">
          <source>In particular, &lt;a href=&quot;background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt; is ignored.</source>
          <target state="translated">特に、&lt;a href=&quot;background-image&quot;&gt; &lt;code&gt;background-image&lt;/code&gt; &lt;/a&gt;は無視されます。</target>
        </trans-unit>
        <trans-unit id="1d52796a76d8424d1b835222dcd795bfcb0f04ec" translate="yes" xml:space="preserve">
          <source>In particular, when using &lt;code&gt;column-fill: auto&lt;/code&gt; to fill columns sequentially, Chrome will only consult this property if the multicol container has a size in the block dimension (e.g., height in a horizontal writing mode). Firefox will always consult this property, therefore filling the first column with all of the content in cases where there is no size.</source>
          <target state="translated">特に、 &lt;code&gt;column-fill: auto&lt;/code&gt; を使用して列を順番に入力する場合、Chromeは、multicolコンテナのサイズがブロックサイズ（水平書き込みモードでの高さなど）の場合にのみ、このプロパティを参照します。Firefoxは常にこのプロパティを参照するため、サイズがない場合は最初の列にすべてのコンテンツを入力します。</target>
        </trans-unit>
        <trans-unit id="76e972da140a961323cf754d7926092c64302898" translate="yes" xml:space="preserve">
          <source>In practical use, the &lt;code&gt;pixelated&lt;/code&gt; and &lt;code&gt;crisp-edges&lt;/code&gt; rules can be combined to provide some fallback for each other. (Just prepend the actual rules with the fallback.) The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API&quot;&gt;Canvas API&lt;/a&gt; can provide a &lt;a href=&quot;http://phrogz.net/tmp/canvas_image_zoom.html&quot;&gt;fallback solution for &lt;code&gt;pixelated&lt;/code&gt;&lt;/a&gt; through manual image data manipulation or with &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled&quot;&gt;imageSmoothingEnabled&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">実際の使用では、 &lt;code&gt;pixelated&lt;/code&gt; &lt;code&gt;crisp-edges&lt;/code&gt; と鮮明なエッジのルールを組み合わせて、相互にフォールバックを提供できます。（実際のルールの前に&lt;a href=&quot;http://phrogz.net/tmp/canvas_image_zoom.html&quot;&gt;フォールバック&lt;/a&gt;を &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled&quot;&gt;imageSmoothingEnabled&lt;/a&gt;&lt;/code&gt; するだけです。）&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API&quot;&gt;Canvas API&lt;/a&gt;は、手動の画像データ操作またはimageSmoothingEnabledを使用して &lt;code&gt;pixelated&lt;/code&gt; するためのフォールバックソリューションを提供できます。</target>
        </trans-unit>
        <trans-unit id="a3e964a6b4af21bcbe5652865a972979698bec26" translate="yes" xml:space="preserve">
          <source>In practice the shrinking behaviour does tend to give you reasonable results. You don&amp;rsquo;t usually want your content to disappear completely or for boxes to get smaller than their minimum content, so the above rules make sense in terms of sensible behaviour for content that needs to be shrunk in order to fit into a container.</source>
          <target state="translated">実際には、収縮動作は妥当な結果をもたらす傾向があります。通常、コンテンツを完全に非表示にしたり、ボックスを最小コンテンツよりも小さくしたりしたくないので、上記のルールは、コンテナーに収まるように縮小する必要があるコンテンツの賢明な動作に関して意味があります。</target>
        </trans-unit>
        <trans-unit id="8c11c06f78fe3f759320749e6b4a8043fd547a84" translate="yes" xml:space="preserve">
          <source>In previous guides we&amp;rsquo;ve looked at placing items by the lines created by defining grid tracks and also how to place items using named template areas. In this guide we are going to look at how these two things work together when we use named lines. Line naming is incredibly useful, but some of the more baffling looking grid syntax comes from this combination of names and track sizes. Once you work through some examples it should become clearer and easier to work with.</source>
          <target state="translated">以前のガイドでは、グリッドトラックを定義して作成された線でアイテムを配置する方法と、名前付きテンプレート領域を使用してアイテムを配置する方法について説明しました。このガイドでは、名前付き行を使用する場合にこれら2つがどのように連携するかを見ていきます。行の命名は非常に便利ですが、より不可解に見えるグリッド構文のいくつかは、名前とトラックサイズのこの組み合わせから来ています。いくつかの例を試してみると、作業がより明確で簡単になるはずです。</target>
        </trans-unit>
        <trans-unit id="9d127d2697bfe9ab7be9c786bd85c4f24b4fdcd7" translate="yes" xml:space="preserve">
          <source>In rare scenarios, if you're using nested link elements and the element being matched is different from the link whose presence in history is being tested, the element will be rendered as if the link were unvisited, as well.</source>
          <target state="translated">まれなシナリオとして、入れ子になったリンク要素を使用していて、マッチされる要素が履歴の存在がテストされているリンクとは異なる場合、要素はリンクが訪問されていないかのようにレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="59c94a0ffaf543fef5726cc5849aebaa44a3aaf4" translate="yes" xml:space="preserve">
          <source>In reality we also often use Flexbox for jobs that might be better done by Grid Layout, as a fallback for Grid, and also in order to get alignment capabilities. This is something that may well change once Box Alignment is implemented in Block Layout. In this guide I look at some of the typical things you might use flexbox for today.</source>
          <target state="translated">実際には、Grid Layout で行った方が良い作業や、Grid の代替として、またアライメント機能を得るために Flexbox を使用することもよくあります。これは、Box Alignment が Block Layout に実装された後に変更される可能性があります。このガイドでは、今日のFlexboxの典型的な使用方法をいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="c79d93d6ab63d3f0da43423583854d534e964565" translate="yes" xml:space="preserve">
          <source>In recent Windows versions (e.g., 10), if accent colors are enabled in window titlebars, this is 1. Otherwise it's 0.</source>
          <target state="translated">最近のWindowsのバージョン(例えば10)では、ウィンドウのタイトルバーでアクセントカラーが有効になっている場合、これは1になります。 それ以外の場合は0になります。</target>
        </trans-unit>
        <trans-unit id="98356aff25319b150cbf15166b7e05d60b3fe92c" translate="yes" xml:space="preserve">
          <source>In some cases these behaviors are not desirable. You can use &lt;code&gt;overscroll-behavior&lt;/code&gt; to get rid of unwanted scroll chaining and the browser's Facebook/Twitter app-inspired &quot;pull to refresh&quot;-type behavior.</source>
          <target state="translated">場合によっては、これらの動作は望ましくありません。 &lt;code&gt;overscroll-behavior&lt;/code&gt; を使用して、不要なスクロールチェーンや、ブラウザーのFacebook / Twitterアプリに触発された「pulltorefresh」タイプの動作を取り除くことができます。</target>
        </trans-unit>
        <trans-unit id="0d0a4822a0f4f0e70ffefecb0d8b3b58f5b2862b" translate="yes" xml:space="preserve">
          <source>In some cases these behaviors are not desirable. you can use &lt;code&gt;overscroll-behavior&lt;/code&gt; to get rid of unwanted scroll chaining and the browser's Facebook/Twitter app-inspired &quot;pull to refresh&quot;-type behavior.</source>
          <target state="translated">場合によっては、これらの動作は望ましくありません。 &lt;code&gt;overscroll-behavior&lt;/code&gt; を使用して、不要なスクロールチェーンと、ブラウザーのFacebook / Twitterアプリにヒントを得た「プルトゥリフレッシュ」タイプの動作を取り除くことができます。</target>
        </trans-unit>
        <trans-unit id="22ea5096d8162c98ffca057c4340c413e777fa12" translate="yes" xml:space="preserve">
          <source>In some cases you could happily use either layout method, but as you become confident with both you will find each one suiting different layout needs, and you will end up with both methods in your CSS. There is rarely a right or wrong answer.</source>
          <target state="translated">場合によっては、どちらのレイアウト方法を使っても構いませんが、両方のレイアウト方法を使いこなせるようになると、それぞれが異なるレイアウトのニーズに適していることがわかり、最終的には両方の方法を使うことになります。正しい答えや間違った答えはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="c7141f6e5b6db63bb657ba0194ef796c35ebe297" translate="yes" xml:space="preserve">
          <source>In some cases, the visual formatting algorithm needs to add supplementary boxes. Because CSS selectors cannot style or name these boxes, they are called &lt;em&gt;anonymous boxes&lt;/em&gt;.</source>
          <target state="translated">場合によっては、視覚的なフォーマットアルゴリズムで補助ボックスを追加する必要があります。CSSセレクターはこれらのボックスのスタイルや名前を付けることができないため、&lt;em&gt;匿名ボックス&lt;/em&gt;と呼ば&lt;em&gt;れ&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="a5f67b6c533ef6e46bf5be2fd66df1ead1904ee7" translate="yes" xml:space="preserve">
          <source>In some environments, an equivalent bidirectional resize cursor is shown. For example, &lt;code&gt;n-resize&lt;/code&gt; and &lt;code&gt;s-resize&lt;/code&gt; are the same as &lt;code&gt;ns-resize&lt;/code&gt;.</source>
          <target state="translated">一部の環境では、同等の双方向サイズ変更カーソルが表示されます。たとえば、 &lt;code&gt;n-resize&lt;/code&gt; と &lt;code&gt;s-resize&lt;/code&gt; は &lt;code&gt;ns-resize&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="a37c5148d3538d64077ec20f371bb2332a508e27" translate="yes" xml:space="preserve">
          <source>In specifications, block boxes, block-level boxes, and block containers are all referred to as &lt;strong&gt;block boxes&lt;/strong&gt; in certain places. These things are somewhat different and the term block box should only be used if there is no ambiguity.</source>
          <target state="translated">仕様では、ブロックボックス、ブロックレベルボックス、およびブロックコンテナはすべて、特定の場所で&lt;strong&gt;ブロックボックス&lt;/strong&gt;と呼ばれます。これらは多少異なり、ブロックボックスという用語はあいまいさがない場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="184bacc96e77ecd25debbec8e986516a912a68e8" translate="yes" xml:space="preserve">
          <source>In static position of absolutely-positioned layouts, the keyword behaves as &lt;code&gt;stretch&lt;/code&gt;.</source>
          <target state="translated">絶対配置レイアウトの静的位置では、キーワードは &lt;code&gt;stretch&lt;/code&gt; として動作します。</target>
        </trans-unit>
        <trans-unit id="fd86dab69095a456e4783b222bc7eb24f8747ca0" translate="yes" xml:space="preserve">
          <source>In such a scenario, in order to use a typeface for typical use on a site for body copy you would need at least four files: regular, italic, bold, and bold italic. If you wanted to add more weights, like a lighter one for captions or a heavier one for extra emphasis, that would mean several more files. This results in more HTTP requests, and more data being downloaded (usually around 20k or more per file).</source>
          <target state="translated">このようなシナリオでは、サイトで一般的に使用される書体をボディコピーに使用するためには、レギュラー、イタリック、ボールド、ボールドイタリックの4つのファイルが少なくとも必要になります。キャプションには軽いものを、強調のためには重いものを、といったように、より多くのウェイトを追加したい場合は、さらにいくつかのファイルが必要になります。その結果、HTTPリクエストが多くなり、ダウンロードされるデータも多くなります(通常は1ファイルあたり約20k以上)。</target>
        </trans-unit>
        <trans-unit id="ec6a62285f67e2d7161b800ebd3c834d396ca9bd" translate="yes" xml:space="preserve">
          <source>In summary:</source>
          <target state="translated">要約すると</target>
        </trans-unit>
        <trans-unit id="58fe6afac4b0c54dd6862e02fb0bff767ab18a56" translate="yes" xml:space="preserve">
          <source>In table cell layouts, this keyword has no meaning as this property is &lt;em&gt;ignored&lt;/em&gt;.</source>
          <target state="translated">テーブルセルレイアウトでは、このプロパティは&lt;em&gt;無視さ&lt;/em&gt;れるため、このキーワードには意味がありません。</target>
        </trans-unit>
        <trans-unit id="eceaf9ffe4699da43dad29f2d4afb1b1137d02ad" translate="yes" xml:space="preserve">
          <source>In table cell layouts, this property is &lt;em&gt;ignored&lt;/em&gt; (&lt;a href=&quot;css_box_alignment/box_alignment_in_block_abspos_tables&quot;&gt;more&lt;/a&gt; about alignment in block, absolute positioned and table layout)</source>
          <target state="translated">表のセルのレイアウトでは、このプロパティは&lt;em&gt;無視&lt;/em&gt;（&lt;a href=&quot;css_box_alignment/box_alignment_in_block_abspos_tables&quot;&gt;複数&lt;/a&gt;ブロックに位置合わせについて、絶対配置とテーブルのレイアウト）</target>
        </trans-unit>
        <trans-unit id="80acf15a586cb8009da2b8e956975625d370671b" translate="yes" xml:space="preserve">
          <source>In table layout, you have access to the &lt;a href=&quot;../vertical-align&quot;&gt;&lt;code&gt;vertical-align&lt;/code&gt;&lt;/a&gt; property to align the contents of a cell inside that cell.</source>
          <target state="translated">テーブルレイアウトでは、&lt;a href=&quot;../vertical-align&quot;&gt; &lt;code&gt;vertical-align&lt;/code&gt; &lt;/a&gt;プロパティにアクセスして、セル内のセルのコンテンツを配置できます。</target>
        </trans-unit>
        <trans-unit id="42c8a19b2c15640e434cc6b0418d62e8a8bdf631" translate="yes" xml:space="preserve">
          <source>In terms of how these new values help to clarify CSS layout, we can take a look at a couple of values in the table that might seem less familiar. The two-value &lt;code&gt;display: block flow-root&lt;/code&gt; maps to a fairly recent single value; &lt;code&gt;display: flow-root&lt;/code&gt;. This value's only purpose is to create a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context&quot;&gt;Block Formatting Context&lt;/a&gt; (BFC). A BFC ensures that everything inside your box stays inside it, and things from outside the box cannot intrude into it. The most obvious use-case for creating a new BFC is to contain floats, and avoid the need for clearfix hacks.</source>
          <target state="translated">これらの新しい値がCSSレイアウトを明確にするのにどのように役立つかという観点から、あまり馴染みがないように見えるかもしれない表のいくつかの値を見ることができます。 2つの値の &lt;code&gt;display: block flow-root&lt;/code&gt; は、かなり最近の単一の値にマップされます。 &lt;code&gt;display: flow-root&lt;/code&gt; 。この値の唯一の目的は、新しい&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context&quot;&gt;ブロックフォーマットコンテキスト&lt;/a&gt;（BFC）を作成することです。 BFCは、ボックス内のすべてのものがボックス内に留まり、ボックス外からのものがボックスに侵入しないようにします。新しいBFCを作成するための最も明白な使用例は、フロートを含め、clearfixハックの必要性を回避することです。</target>
        </trans-unit>
        <trans-unit id="353e6bdc18ad24d6d8ae1d1fcaa926596ef45662" translate="yes" xml:space="preserve">
          <source>In terms of line-based positioning of items, the gap acts as if the line has gained extra width. Anything starting at that line starts after the gap and you cannot address the gap or place anything into it. If you want gutters that act more like regular tracks you can of course define a track for the purpose instead.</source>
          <target state="translated">ラインベースのアイテムの配置という点では、ギャップは、あたかもラインの幅が増えたかのように作用します。そのラインから始まるものはすべてギャップの後から始まるので、ギャップをアドレスしたり、ギャップの中に何かを配置したりすることはできません。通常のトラックのように動作する溝が欲しい場合は、もちろんその代わりにトラックを定義することができます。</target>
        </trans-unit>
        <trans-unit id="025bbb06ad8e82e302e5705dac4c75a82e6a141e" translate="yes" xml:space="preserve">
          <source>In terms of stacking contexts, DIV #1 and DIV #3 are simply assimilated into the root element, and the resulting hierarchy is the following:</source>
          <target state="translated">スタッキングコンテキストの観点からは、div #1とdiv #3は単純にルート要素に同化されており、結果としての階層は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="25fe61c56dcfe62ee9d8eea3a0e76c9ed83aa852" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;basic_concepts_of_flexbox&quot;&gt;Basic concepts of flexbox&lt;/a&gt; article, I explained that flexbox is &lt;strong&gt;writing mode aware&lt;/strong&gt;. Writing modes are fully detailed in the CSS &lt;a href=&quot;https://www.w3.org/TR/css-writing-modes-3/&quot;&gt;Writing Modes specification&lt;/a&gt;, which details how CSS supports the various different writing modes that exist internationally. We need to be aware of how this will impact our flex layouts as writing mode changes the direction that blocks are laid out in our document. Understanding &lt;strong&gt;block&lt;/strong&gt; and &lt;strong&gt;inline&lt;/strong&gt; directions is key to new layout methods.</source>
          <target state="translated">&lt;a href=&quot;basic_concepts_of_flexbox&quot;&gt;フレックスボックス&lt;/a&gt;の基本概念の記事で、フレックスボックスは&lt;strong&gt;書き込みモードに対応&lt;/strong&gt;していることを説明&lt;strong&gt;しました&lt;/strong&gt;。書き込みモードの詳細については、CSSの&lt;a href=&quot;https://www.w3.org/TR/css-writing-modes-3/&quot;&gt;書き込みモードの仕様&lt;/a&gt;をご覧ください。CSSが国際的に存在するさまざまな書き込みモードをどのようにサポートしているかが詳しく説明されています。書き込みモードによってブロックがドキュメントに配置される方向を変更するため、これがフレックスレイアウトにどのように影響するかを認識する必要があります。&lt;strong&gt;ブロック&lt;/strong&gt;と&lt;strong&gt;インラインの&lt;/strong&gt;方向を理解することは、新しいレイアウト方法の鍵となります。</target>
        </trans-unit>
        <trans-unit id="07ebc4cbf7b7ec9c8371444b58a60156d63ff2bc" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;basic_concepts_of_grid_layout&quot;&gt;article covering the basic concepts of grid layout&lt;/a&gt;, we started to look at how to position items on a grid using line numbers. In this article we will fully explore how this fundamental feature of the specification works.</source>
          <target state="translated">で&lt;a href=&quot;basic_concepts_of_grid_layout&quot;&gt;グリッドレイアウトの基本的な概念をカバーする記事&lt;/a&gt;、我々は行番号を使用して、グリッド上の位置項目にどのように見始めました。この記事では、この仕様の基本的な機能がどのように機能するかを詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="ead29de3cc6401e8b44858b9149cb3c2a76216c8" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;block_and_inline_layout_in_normal_flow&quot;&gt;previous guide&lt;/a&gt; I explained block and inline layout in normal flow. All elements that are in flow, will be laid out using this method.</source>
          <target state="translated">&lt;a href=&quot;block_and_inline_layout_in_normal_flow&quot;&gt;前ガイド&lt;/a&gt; Iは、通常の流れのブロックとインラインのレイアウトを説明します。フロー中のすべての要素は、このメソッドを使用してレイアウトされます。</target>
        </trans-unit>
        <trans-unit id="8feb1cbe8814ec4e19f5d2a43e993e883f394163" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-media&quot;&gt;media&lt;/a&gt;&lt;/code&gt; attribute, they define the media to which a linked resource (typically CSS) should be applied.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt; &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-media&quot;&gt;media&lt;/a&gt;&lt;/code&gt; 属性、彼らはリンク先のリソース（通常はCSS）を適用すべきメディアを定義します。</target>
        </trans-unit>
        <trans-unit id="2df3cd51a6783673dceb2b325c42a34c86a4aff7" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source&quot;&gt;&lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source#attr-media&quot;&gt;media&lt;/a&gt;&lt;/code&gt; attribute, they define the media to which that source should be applied. (This is only valid inside &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture&quot;&gt;&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.)</source>
          <target state="translated">で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source&quot;&gt; &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source#attr-media&quot;&gt;media&lt;/a&gt;&lt;/code&gt; 属性、彼らはそのソースを適用すべきメディアを定義します。（これは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture&quot;&gt; &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; &lt;/a&gt;要素内でのみ有効です。）</target>
        </trans-unit>
        <trans-unit id="f783bf7d1d6da6cb40f80b7969bef523dfc3acef" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style#attr-media&quot;&gt;media&lt;/a&gt;&lt;/code&gt; attribute, they define the media to which the style should be applied.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style#attr-media&quot;&gt;media&lt;/a&gt;&lt;/code&gt; 属性、彼らはスタイルが適用すべきメディアを定義します。</target>
        </trans-unit>
        <trans-unit id="22059d3e23365089e9c88cbb1517209bc0592f31" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;line-based_placement_with_css_grid&quot;&gt;previous guide&lt;/a&gt; we looked at grid lines, and how to position items against those lines. When you use CSS Grid Layout you always have lines, and this can be a straightforward way to place items on your grid. However, there is an alternate method to use for positioning items on the grid which you can use alone or in combination with line-based placement. This method involves placing our items using named template areas, and we will find out exactly how this method works. You will see very quickly why we sometimes call this the ascii-art method of grid layout!</source>
          <target state="translated">で&lt;a href=&quot;line-based_placement_with_css_grid&quot;&gt;、前のガイド&lt;/a&gt;たちは、グリッド線を見て、どのようにこれらの行に対する項目を配置します。 CSSグリッドレイアウトを使用すると、常に線が表示されます。これは、グリッドにアイテムを配置する簡単な方法です。ただし、グリッド上にアイテムを配置するために使用する代替方法があり、これを単独で、または行ベースの配置と組み合わせて使用​​できます。この方法では、名前付きテンプレート領域を使用してアイテムを配置します。この方法がどのように機能するかを正確に確認します。これをグリッドレイアウトのASCIIアート手法と呼ぶことがある理由がすぐにわかります。</target>
        </trans-unit>
        <trans-unit id="4f7e828fe38de6a16622e681e5e96b9544638c12" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;absolute positioning scheme&lt;/em&gt;, boxes are entirely removed from the flow and don't interact with it at all. They are positioned relative to their &lt;a href=&quot;all_about_the_containing_block&quot;&gt;containing block&lt;/a&gt; using the &lt;a href=&quot;top&quot;&gt;&lt;code&gt;top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;bottom&quot;&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;left&quot;&gt;&lt;code&gt;left&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;right&quot;&gt;&lt;code&gt;right&lt;/code&gt;&lt;/a&gt; CSS properties.</source>
          <target state="translated">で&lt;em&gt;、絶対位置決め方式で&lt;/em&gt;、ボックスは完全に流れから削除され、すべてでそれと相互作用しません。それらは、&lt;a href=&quot;top&quot;&gt; &lt;code&gt;top&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;bottom&quot;&gt; &lt;code&gt;bottom&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;left&quot;&gt; &lt;code&gt;left&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;right&quot;&gt; &lt;code&gt;right&lt;/code&gt; &lt;/a&gt; CSSプロパティを使用して、それら&lt;a href=&quot;all_about_the_containing_block&quot;&gt;を含むブロック&lt;/a&gt;に対して相対的に配置されます。</target>
        </trans-unit>
        <trans-unit id="9f929defd15fe16fa976a6d5265c381b553af0c1" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;float positioning scheme&lt;/em&gt;, specific boxes (called &lt;em&gt;floating boxes&lt;/em&gt; or simply &lt;em&gt;floats)&lt;/em&gt; are positioned at the beginning, or end of the current line. This leads to the property that text (and more generally anything within the normal flow) flows along the edge of the floating boxes, except if told differently by the &lt;a href=&quot;clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt; CSS property.</source>
          <target state="translated">&lt;em&gt;フロート測位方式&lt;/em&gt;、特定ボックス（と呼ばれる&lt;em&gt;フローティングボックス&lt;/em&gt;または単に&lt;em&gt;浮かぶ）&lt;/em&gt;開始、または現在の行の末尾に配置されています。テキスト（より一般的には通常のフロー内の何かが）によって異なり告げた場合を除き、浮動ボックスの端に沿って流れることを財産にこれがリード&lt;a href=&quot;clear&quot;&gt; &lt;code&gt;clear&lt;/code&gt; &lt;/a&gt; CSSプロパティ。</target>
        </trans-unit>
        <trans-unit id="13d605f829339e72924971b0196722cd52fab2c7" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;normal flow&lt;/em&gt;, boxes are laid out one after the other. In a block formatting context, they are laid out vertically; in an inline formatting context, they are laid out horizontally. The normal flow is triggered when the CSS &lt;a href=&quot;position&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; is set to the value &lt;code&gt;static&lt;/code&gt; or &lt;code&gt;relative&lt;/code&gt;, and if the CSS &lt;a href=&quot;float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; is set to the value &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">では&lt;em&gt;通常の流れ&lt;/em&gt;、箱が次々にレイアウトされています。ブロックフォーマットのコンテキストでは、これらは垂直に配置されます。インラインフォーマットのコンテキストでは、それらは水平に配置されます。 CSSの&lt;a href=&quot;position&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;static&lt;/code&gt; または &lt;code&gt;relative&lt;/code&gt; の値に設定されている場合、およびCSS &lt;a href=&quot;float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;の値が &lt;code&gt;none&lt;/code&gt; に設定されている場合、通常のフローがトリガーされます。</target>
        </trans-unit>
        <trans-unit id="a0f6d0bb2f16342d6d31c41067044c8a275be6a3" translate="yes" xml:space="preserve">
          <source>In the CSS specifications, values that can be defined by the web developer, like keyframe animations, font-family names, or grid areas are listed as a &lt;a href=&quot;custom-ident&quot;&gt;&lt;code&gt;&amp;lt;custom-ident&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;string&quot;&gt;&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;, or both.</source>
          <target state="translated">CSS仕様では、キーフレームアニメーション、フォントファミリ名、グリッド領域など、Web開発者が定義できる値は、&lt;a href=&quot;custom-ident&quot;&gt; &lt;code&gt;&amp;lt;custom-ident&amp;gt;&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;string&quot;&gt; &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; &lt;/a&gt;、またはその両方としてリストされています。</target>
        </trans-unit>
        <trans-unit id="4e9e96f189c21e3f0b8d2e5868087060b705b9a8" translate="yes" xml:space="preserve">
          <source>In the CSS we are in effect defining a completely separate &lt;a href=&quot;../@font-face&quot;&gt;&lt;code&gt;@font-face&lt;/code&gt;&lt;/a&gt; that only includes a single character in it, meaning that only this character will be styled with this font. We could also have done this by wrapping the ampersand in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; and applying a different font just to that, but that is an extra element and rule set.</source>
          <target state="translated">CSSでは、事実上、単一の文字のみを含む完全に別個の&lt;a href=&quot;../@font-face&quot;&gt; &lt;code&gt;@font-face&lt;/code&gt; &lt;/a&gt;を定義しています。つまり、この文字のみがこのフォントでスタイル設定されます。アンパサンドを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;でラップし、それに別のフォントを適用することでこれを行うこともできますが、これは追加の要素とルールセットです。</target>
        </trans-unit>
        <trans-unit id="6f1f33580a522274caf0be5613b029078eb707f9" translate="yes" xml:space="preserve">
          <source>In the CSS we first include the following rules:</source>
          <target state="translated">CSSでは、まず以下のようなルールを入れます。</target>
        </trans-unit>
        <trans-unit id="897fe2b1f584608d2b852c32c2a832bbfa40daa0" translate="yes" xml:space="preserve">
          <source>In the CSS we have an animation that uses a transform to rotate the rectangle infinitely. &lt;code&gt;transform-box: fill-box&lt;/code&gt; is used to make the the &lt;code&gt;transform-origin&lt;/code&gt; the center of the bounding box, so the rectangle spins in place. Without it, the transform origin is the center of the SVG canvas, and so you get a very different effect.</source>
          <target state="translated">CSSには、変換を使用して長方形を無限に回転させるアニメーションがあります。 &lt;code&gt;transform-box: fill-box&lt;/code&gt; は、 &lt;code&gt;transform-origin&lt;/code&gt; をバウンディングボックスの中心にするために使用されるため、長方形は所定の位置で回転します。これがないと、変換の原点がSVGキャンバスの中心になるため、非常に異なる効果が得られます。</target>
        </trans-unit>
        <trans-unit id="f47eca4f6e2b138703d034401c4db872c3704594" translate="yes" xml:space="preserve">
          <source>In the CSS, you can see that we are in effect defining a completely separate &lt;a href=&quot;../@font-face&quot;&gt;&lt;code&gt;@font-face&lt;/code&gt;&lt;/a&gt; that only includes a single character in it, meaning that only this character will be styled with this font. We could also have done this by wrapping the ampersand in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; and applying a different font just to that, but that is an extra element and rule set.</source>
          <target state="translated">CSSでは、1つの文字のみを含む完全に分離した&lt;a href=&quot;../@font-face&quot;&gt; &lt;code&gt;@font-face&lt;/code&gt; &lt;/a&gt;を実際に定義していることがわかります。つまり、この文字のみがこのフォントでスタイル設定されます。アンパサンドを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;で囲み、別のフォントをそれに適用することでこれを行うこともできますが、これは追加の要素とルールセットです。</target>
        </trans-unit>
        <trans-unit id="3c40b54d1bf7c7ba6921106eb34a4779dee7f885" translate="yes" xml:space="preserve">
          <source>In the Cartesian coordinate system, a two-dimensional point is described using two values: an x coordinate (abscissa) and a y coordinate (ordinate). This is represented by the vector notation &lt;code&gt;(x, y)&lt;/code&gt;.</source>
          <target state="translated">デカルト座標系では、2次元の点は、x座標（横座標）とy座標（縦座標）の2つの値を使用して記述されます。これは、ベクトル表記 &lt;code&gt;(x, y)&lt;/code&gt; 表されます。</target>
        </trans-unit>
        <trans-unit id="7b6927a55d0a6eef87b327d1b5e63930cdde5247" translate="yes" xml:space="preserve">
          <source>In the Level 3 Overflow specification we have some properties which can help improve the way content looks in an overflow situation.</source>
          <target state="translated">レベル 3 オーバーフロー仕様では、オーバーフロー状況でのコンテンツの見え方を改善するのに役立つプロパティがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="b8d747087d6fc352923bd1c008d49889e4f51644" translate="yes" xml:space="preserve">
          <source>In the above example I have both used the image as the value of &lt;a href=&quot;../shape-outside&quot;&gt;&lt;code&gt;shape-outside&lt;/code&gt;&lt;/a&gt; and also added it to the page. Many demos do this as it helps to show the shape we are following, however the &lt;code&gt;shape-outside&lt;/code&gt; property is not related to the image that is displayed on the page and so you do not need to display an image to use an image to create a shape.</source>
          <target state="translated">上記の例では、画像を&lt;a href=&quot;../shape-outside&quot;&gt; &lt;code&gt;shape-outside&lt;/code&gt; の&lt;/a&gt;値として使用し、ページに追加しました。多くのデモは、これが私たちがフォローしている形状を示すのに役立つのでこれを行いますが、 &lt;code&gt;shape-outside&lt;/code&gt; プロパティはページに表示される画像とは関係がないため、画像を使用して画像を作成する必要はありません。形状。</target>
        </trans-unit>
        <trans-unit id="9eee9fe99eb3fc12b3d04b19eff164205da45811" translate="yes" xml:space="preserve">
          <source>In the above example the content is wrapped in paragraph &lt;code&gt;p&lt;/code&gt; tags with default styling. Therefore, there is a margin above each paragraph. You can see how this margin causes the first line of text to be pushed down. This is because a multicol container creates a new Block Formatting Context (BFC) which means margins on child elements do not collapse with any margin on the container.</source>
          <target state="translated">上記の例では、コンテンツはデフォルトのスタイルで段落 &lt;code&gt;p&lt;/code&gt; タグでラップされています。したがって、各段落の上にマージンがあります。このマージンにより、テキストの最初の行が押し下げられることがわかります。これは、マルチコロンコンテナーが新しいブロックフォーマットコンテキスト（BFC）を作成するためです。これは、子要素のマージンがコンテナーのマージンで折りたたまれないことを意味します。</target>
        </trans-unit>
        <trans-unit id="ab0f488303b77542ba9f89ffeca8c719cf3a75ec" translate="yes" xml:space="preserve">
          <source>In the above example, the width will be at least 80px, but will be wider if the the viewport is more than 800px wide, or an em is more than 20px wide. In other words, the min-width is 80px. Think of the max() value as providing the minimum value a property can have, realizing this, at first, sounds conter-intuitive.</source>
          <target state="translated">上記の例では、最低でも80pxの幅になりますが、ビューポートの幅が800px以上の場合や、emの幅が20px以上の場合は幅が広くなります。つまり、min-widthは80pxになります。max()の値は、プロパティが持つことができる最小値を提供するものだと考えてください。</target>
        </trans-unit>
        <trans-unit id="8daa85283de2bcfc4946f9b5c6a3798bcb780447" translate="yes" xml:space="preserve">
          <source>In the above example, the width will be at most 80px, at least 10px wide, but 4ems wide if an em is currently between 2.5p and 20px wide.</source>
          <target state="translated">上記の例では、横幅はせいぜい80px、最低でも10pxになりますが、現在2.5pと20pxの間にあるemの場合は4emsの横幅になります。</target>
        </trans-unit>
        <trans-unit id="708d8b2a13f9876dea42c20b436f1e574e6890dc" translate="yes" xml:space="preserve">
          <source>In the above example, the width will be at most 80px, but will be narrower if the the viewport is less than 800px wide, or an em is less than 20px wide. In other words, the max-width is 80px. Think of the min() value as providing the maximum value a property can have.</source>
          <target state="translated">上記の例では、最大80pxの幅になりますが、ビューポートの幅が800px以下の場合や、emの幅が20px以下の場合は、幅が狭くなります。つまり、最大幅は80pxになります。min()の値は、プロパティが持つことができる最大値を提供していると考えてください。</target>
        </trans-unit>
        <trans-unit id="ba8660c7a86570dacef1d7ca60d1b58659be5641" translate="yes" xml:space="preserve">
          <source>In the above examples I specified every end row and column line, in order to demonstrate the properties, however in practice if an item only spans one track you can omit the &lt;code&gt;grid-column-end&lt;/code&gt; or &lt;code&gt;grid-row-end&lt;/code&gt; value. Grid defaults to spanning one track. This means that our initial, long-hand, example would look like this:</source>
          <target state="translated">上記の例では、プロパティを示すためにすべての終了行と列行を指定しましたが、実際には、項目が1つのトラックのみにまたがる場合は、 &lt;code&gt;grid-column-end&lt;/code&gt; または &lt;code&gt;grid-row-end&lt;/code&gt; の値を省略できます。グリッドはデフォルトで1つのトラックにまたがっています。つまり、最初の長い形式の例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="042d9ef28f5bd935357cfbe332e04738d0ec5647" translate="yes" xml:space="preserve">
          <source>In the above interactive examples, &lt;code&gt;&lt;a href=&quot;../perspective&quot;&gt;perspective: 550px;&lt;/a&gt;&lt;/code&gt; (to create a 3D space) and &lt;code&gt;&lt;a href=&quot;../transform-style&quot;&gt;transform-style: preserve-3d;&lt;/a&gt;&lt;/code&gt; (so the children, the 6 sides of the cube, are also positioned in the 3D space), have been set on the cube.</source>
          <target state="translated">上記のインタラクティブな例では、 &lt;code&gt;&lt;a href=&quot;../perspective&quot;&gt;perspective: 550px;&lt;/a&gt;&lt;/code&gt; （3D空間を作成するため）および &lt;code&gt;&lt;a href=&quot;../transform-style&quot;&gt;transform-style: preserve-3d;&lt;/a&gt;&lt;/code&gt; （したがって、立方体の6つの側面である子も3D空間に配置されます）、立方体に設定されています。</target>
        </trans-unit>
        <trans-unit id="f9e6f5ac25f8bb245a5f9c4da513857da4117fdd" translate="yes" xml:space="preserve">
          <source>In the above scenario, it doesn't matter that IE11 doesn't support feature queries or CSS Grid &amp;mdash; it would get the floated version anyway, which is then overwritten by browsers that do support grid.</source>
          <target state="translated">上記のシナリオでは、IE11が機能クエリまたはCSSグリッドをサポートしていないことは問題ではありません。いずれにせよ、浮動バージョンを取得し、グリッドをサポートするブラウザーによって上書きされます。</target>
        </trans-unit>
        <trans-unit id="75d1f0cedf04b48880ecf1981535ecd2dc46aee5" translate="yes" xml:space="preserve">
          <source>In the absolute positioning model (which also includes fixed positioning), a box is removed from the normal flow entirely and assigned a position with respect to a containing block (which is the viewport in the case of fixed positioning).</source>
          <target state="translated">絶対位置決めモデル(固定位置決めも含む)では、ボックスは通常の流れから完全に取り除かれ、含有ブロック(固定位置決めの場合にはビューポートである)に関して位置が割り当てられる。</target>
        </trans-unit>
        <trans-unit id="300031c2ac05e904b0ba610f420c1635d71cff7b" translate="yes" xml:space="preserve">
          <source>In the article &lt;a href=&quot;aligning_items_in_a_flex_container&quot;&gt;Aligning Items in a Flex Container&lt;/a&gt; we will explore these properties in more depth, in order to have a better understanding of how they work. These simple examples however will be useful in the majority of use cases.</source>
          <target state="translated">記事「&lt;a href=&quot;aligning_items_in_a_flex_container&quot;&gt;フレックスコンテナー内のアイテムの&lt;/a&gt;整列」では、これらのプロパティがどのように機能するかをより深く理解するために、これらのプロパティについてさらに詳しく説明します。ただし、これらの簡単な例は、ほとんどのユースケースで役立ちます。</target>
        </trans-unit>
        <trans-unit id="2f0af30ecdfe3cc8c62efe61539b01aeeac14e26" translate="yes" xml:space="preserve">
          <source>In the below example I have a grid container of 500 pixels by 500 pixels. I have defined 3 row and column tracks each of 100 pixels with a 10 pixel gutter. This means that there is space inside the grid container both in the block and inline directions.</source>
          <target state="translated">以下の例では、500ピクセル×500ピクセルのグリッドコンテナがあります。このとき、3つの行と列のトラックをそれぞれ100ピクセル、10ピクセルのガターで定義しました。これは、ブロック方向とインライン方向の両方でグリッドコンテナ内にスペースがあることを意味します。</target>
        </trans-unit>
        <trans-unit id="1f7044c7ef3778a51b7dc01c78765c3857118ed1" translate="yes" xml:space="preserve">
          <source>In the below example I have a wrapper containing four child items. Item three is absolutely positioned and also placed on the grid using line-based placement. The grid container has &lt;code&gt;position: relative&lt;/code&gt; and so becomes the positioning context of this item.</source>
          <target state="translated">以下の例では、4つの子アイテムを含むラッパーがあります。アイテム3は絶対配置され、ラインベースの配置を使用してグリッドに配置されます。グリッドコンテナーには &lt;code&gt;position: relative&lt;/code&gt; ため、このアイテムの配置コンテキストになります。</target>
        </trans-unit>
        <trans-unit id="03e03f2702d23ccdb42815e9313f02761bd7d8fa" translate="yes" xml:space="preserve">
          <source>In the below example I have created a circle on an item with a width of 100 pixels, plus a margin of 20 pixels. This gives a total width for the reference box of 140 pixels. I have given a value of 50% for the shape-radius value which means that our radius is 70px. I have then set the position value to 30%.</source>
          <target state="translated">以下の例では、幅100ピクセルのアイテムに20ピクセルのマージンを加えた円を作成しています。これにより、参照ボックスの合計幅は140ピクセルになります。シェイプ半径の値に50%の値を指定したので、半径は70pxになります。次に、位置の値を30%に設定しました。</target>
        </trans-unit>
        <trans-unit id="98c9c55a4ec9466c0f54ea5f7b9c641987d49574" translate="yes" xml:space="preserve">
          <source>In the below example I have set &lt;code&gt;scroll-padding&lt;/code&gt; to 40 pixels. When we snap to the start of the second and third sections, the scrolling stops 40 pixels away from the start of the section. Try changing the &lt;code&gt;scroll-padding&lt;/code&gt; value to see how this changes the distance.</source>
          <target state="translated">以下の例では、 &lt;code&gt;scroll-padding&lt;/code&gt; を40ピクセルに設定しています。2番目と3番目のセクションの先頭にスナップすると、スクロールはセクションの先頭から40ピクセル離れたところで停止します。変更してみてください &lt;code&gt;scroll-padding&lt;/code&gt; 、これは距離がどのように変化するかを見るために価値を。</target>
        </trans-unit>
        <trans-unit id="54ca724dd91411e70b1027a699d2e8b9cf09caee" translate="yes" xml:space="preserve">
          <source>In the below example I have used the &lt;code&gt;inset-block-start&lt;/code&gt; and &lt;code&gt;inset-inline-end&lt;/code&gt; properties to position the blue box using absolute positioning inside the area with the grey dotted border, which has &lt;code&gt;position: relative&lt;/code&gt;. Change the &lt;code&gt;writing-mode&lt;/code&gt; property to &lt;code&gt;vertical-rl&lt;/code&gt;, or add &lt;code&gt;direction: rtl&lt;/code&gt;, and see how the flow relative box stays with the text direction.</source>
          <target state="translated">以下の例では私が使用している &lt;code&gt;inset-block-start&lt;/code&gt; と &lt;code&gt;inset-inline-end&lt;/code&gt; 有する灰色点線の境界線を有する領域、内部絶対配置を使用して青色のボックス位置決めするプロパティを &lt;code&gt;position: relative&lt;/code&gt; 。 &lt;code&gt;writing-mode&lt;/code&gt; プロパティを &lt;code&gt;vertical-rl&lt;/code&gt; に変更するか、 &lt;code&gt;direction: rtl&lt;/code&gt; 追加します：rtl。フローの相対ボックスがテキストの方向にどのように留まるかを確認します。</target>
        </trans-unit>
        <trans-unit id="44ebcf646bd61d807f23cb421d19ccbe9495832d" translate="yes" xml:space="preserve">
          <source>In the below example we use &lt;code&gt;grid-auto-rows&lt;/code&gt; to ensure that tracks created in the implicit grid are 200 pixels tall.</source>
          <target state="translated">以下の例では、 &lt;code&gt;grid-auto-rows&lt;/code&gt; を使用して、暗黙的なグリッドで作成されたトラックの高さが200ピクセルになるようにします。</target>
        </trans-unit>
        <trans-unit id="cbd2059798ba7cd0f388334eab07e47933e0f631" translate="yes" xml:space="preserve">
          <source>In the below example we use the &lt;code&gt;column-count&lt;/code&gt; property to create three columns on the &lt;code&gt;.container&lt;/code&gt; element. The content, including the children of &lt;code&gt;.container&lt;/code&gt; is then split between the three columns.</source>
          <target state="translated">以下の例では、 &lt;code&gt;column-count&lt;/code&gt; プロパティを使用して、 &lt;code&gt;.container&lt;/code&gt; 要素に3つの列を作成します。 &lt;code&gt;.container&lt;/code&gt; の子を含むコンテンツは、3つの列に分割されます。</target>
        </trans-unit>
        <trans-unit id="5f5f7c3a1417adea9e046222ec98da196fe6392d" translate="yes" xml:space="preserve">
          <source>In the below example we use the &lt;code&gt;column-width&lt;/code&gt; property with a value of 200px. We get as many 200 pixel columns as will fit the container, with the extra space shared equally.</source>
          <target state="translated">以下の例では、200pxの値で &lt;code&gt;column-width&lt;/code&gt; プロパティを使用しています。コンテナーに適合するだけの200ピクセル列を取得し、追加のスペースを均等に共有します。</target>
        </trans-unit>
        <trans-unit id="da9cab1c335e8fdb1506e88e36409178b9e549db" translate="yes" xml:space="preserve">
          <source>In the below example, a grid layout uses the &lt;code&gt;gap&lt;/code&gt; shorthand to set a &lt;code&gt;10px&lt;/code&gt; gap between row tracks, and a &lt;code&gt;2em&lt;/code&gt; gap between column tracks.</source>
          <target state="translated">以下の例では、グリッドレイアウトは &lt;code&gt;gap&lt;/code&gt; ショートハンドを使用して、行トラック間に &lt;code&gt;10px&lt;/code&gt; のギャップを設定し、列トラック間に &lt;code&gt;2em&lt;/code&gt; のギャップを設定します。</target>
        </trans-unit>
        <trans-unit id="f0be7ea63031833852c901096aac12d62812bbe0" translate="yes" xml:space="preserve">
          <source>In the below example, we are creating an inline flex container with the legacy keyword inline-flex.</source>
          <target state="translated">以下の例では、レガシーキーワード inline-flex を使用してインラインフレックスコンテナを作成しています。</target>
        </trans-unit>
        <trans-unit id="2fa3f8b4895ca4a4eb5c56f45a89d141f0d01dea" translate="yes" xml:space="preserve">
          <source>In the below image I have placed the grid with &lt;code&gt;align-content&lt;/code&gt;, with a value of &lt;code&gt;start&lt;/code&gt; alongside the grid when &lt;code&gt;align-content&lt;/code&gt; has a value of &lt;code&gt;space-between&lt;/code&gt;. You can see how items 1 and 2, which span two row tracks have taken on extra height as they gain the additional space added to the gap between those two tracks:</source>
          <target state="translated">以下の画像では、 &lt;code&gt;align-content&lt;/code&gt; の値が &lt;code&gt;space-between&lt;/code&gt; の場合、グリッドの横に &lt;code&gt;start&lt;/code&gt; の値を指定して、 &lt;code&gt;align-content&lt;/code&gt; でグリッドを配置しています。 2つの列のトラックにまたがるアイテム1と2が、これらの2つのトラック間のギャップに追加された追加のスペースを取得するときに、どのように余分な高さになったかを確認できます。</target>
        </trans-unit>
        <trans-unit id="e06ad82f67263f4901d26cc9f326206253392e3e" translate="yes" xml:space="preserve">
          <source>In the below live example we display the items at their natural size and by using &lt;code&gt;justify-content: space-between&lt;/code&gt; make equal amounts of space between the items. You can change how the space is distributed using the &lt;code&gt;space-around&lt;/code&gt; value, or where supported, &lt;code&gt;space-evenly&lt;/code&gt;. You could also use &lt;code&gt;flex-start&lt;/code&gt; to place the space at the end of the items, &lt;code&gt;flex-end&lt;/code&gt; to place it before them, or &lt;code&gt;center&lt;/code&gt; to centre the navigation items.</source>
          <target state="translated">以下のライブの例では、アイテムを自然なサイズで表示し、 &lt;code&gt;justify-content: space-between&lt;/code&gt; を使用してアイテム間に等量のスペースを作成します。 &lt;code&gt;space-around&lt;/code&gt; の値、またはサポートされている場合は &lt;code&gt;space-evenly&lt;/code&gt; を使用して、スペースの配分方法を変更できます。また、使用することができ &lt;code&gt;flex-start&lt;/code&gt; 、項目の末尾にスペースを配置するために &lt;code&gt;flex-end&lt;/code&gt; 彼らの前にそれを置くために、または &lt;code&gt;center&lt;/code&gt; ナビゲーション項目を中心に。</target>
        </trans-unit>
        <trans-unit id="d672770297b3c90c770f6b0612c45bfb9607cc2c" translate="yes" xml:space="preserve">
          <source>In the case of &lt;code&gt;-ms-ime-align: after&lt;/code&gt;, an IME might adjust the candidate window and keyboard input behavior to provide a better user experience, such as using a horizontal candidate list and allowing some keys to be sent to the app for suggestion list navigation.</source>
          <target state="translated">以下の場合には &lt;code&gt;-ms-ime-align: after&lt;/code&gt; 、IMEは、水平候補リストを使用して、いくつかのキーは、提案のためのアプリケーションに送信されることを可能にするように、よりよいユーザ体験を提供するために、候補ウィンドウとキーボード入力動作を調整するかもしれませんリストナビゲーション。</target>
        </trans-unit>
        <trans-unit id="880c600f2ebfa8c1c1e2c66c372ba59606157f20" translate="yes" xml:space="preserve">
          <source>In the cases where it is impossible or impractical to determine the measure of the &amp;ldquo;0&amp;rdquo; glyph, it must be assumed to be 0.5em wide by 1em tall.</source>
          <target state="translated">「0」のグリフの測度を決定することが不可能または非現実的である場合、幅0.5em、高さ1emであると想定する必要があります。</target>
        </trans-unit>
        <trans-unit id="e9788e82a8144e96ac175026c66f94fc43948a3b" translate="yes" xml:space="preserve">
          <source>In the coordinate systems used by web technologies, convention dictates that the horizontal offset is called the &lt;em&gt;x-coordinate&lt;/em&gt;, where a negative value indicates a position to the left of the origin and a positive value is to the right of the origin. The &lt;em&gt;y-coordinate&lt;/em&gt; specifies the vertical offset, with a negative value being above the origin and a positive value being below the origin.</source>
          <target state="translated">Webテクノロジーで使用される座標系では、慣例により、水平オフセットは&lt;em&gt;x座標&lt;/em&gt;と呼ばれ、負の値は原点の左側の位置を示し、正の値は原点の右側を示します。&lt;em&gt;y座標&lt;/em&gt;の負の値が原点上にある正の値は原点より下であると、垂直オフセットを指定します。</target>
        </trans-unit>
        <trans-unit id="64439c0ecd4c6520a6a910c34f4a727915cad4b9" translate="yes" xml:space="preserve">
          <source>In the current level 1 specification there are only two allowable values for &lt;code&gt;column-span&lt;/code&gt;. The value &lt;code&gt;none&lt;/code&gt; is the initial value and means the item does not span, remaining within a column. The value &lt;code&gt;all&lt;/code&gt; means the item spans all of the columns. You cannot cause an item to span two out of three columns for example.</source>
          <target state="translated">現在のレベル1仕様では、 &lt;code&gt;column-span&lt;/code&gt; に使用できる値は2つだけです。値 &lt;code&gt;none&lt;/code&gt; は初期値であり、項目がスパンされず、列内に残っていることを意味します。値 &lt;code&gt;all&lt;/code&gt; は、項目がすべての列にわたることを意味します。たとえば、項目を3列のうち2列にまたがることはできません。</target>
        </trans-unit>
        <trans-unit id="dc7d7873ee31e6e3c48d2dbbfecf398c5ca76c6c" translate="yes" xml:space="preserve">
          <source>In the current specification, we would edit the above nested grid example to change the track definition of &lt;code&gt;grid-template-columns: repeat(3, 1fr)&lt;/code&gt;, to &lt;code&gt;grid-template-columns: subgrid&lt;/code&gt;. The nested grid will then use the parent grid tracks to layout items.</source>
          <target state="translated">現在の仕様では、我々はトラック定義変更するには、上記のネストされたグリッドの例を編集します &lt;code&gt;grid-template-columns: repeat(3, 1fr)&lt;/code&gt; に、 &lt;code&gt;grid-template-columns: subgrid&lt;/code&gt; 。ネストされたグリッドは、親グリッドトラックを使用してアイテムをレイアウトします。</target>
        </trans-unit>
        <trans-unit id="e398e18850820d83310e37ba64490fc07571a6b0" translate="yes" xml:space="preserve">
          <source>In the end, we can see that none of the browsers mentioned in this article is right or wrong about how they lay out lists. They use different default styles, and that's where the problems creep in. By making sure you style both the left padding and left margin of lists, you can find much greater cross-browser consistency in your list indentation.</source>
          <target state="translated">結局のところ、この記事で言及したブラウザのどれもがリストのレイアウト方法について正しいか間違っていることがわかります。それぞれ異なるデフォルトのスタイルを使用しており、そこに問題が忍び込んできます。リストの左パディングと左マージンの両方にスタイルを設定することで、リストのインデントの際にブラウザ間の一貫性を高めることができます。</target>
        </trans-unit>
        <trans-unit id="46f54639e3f551d90f8aebe2b1c7354da65a7106" translate="yes" xml:space="preserve">
          <source>In the example above, the text &lt;a href=&quot;color&quot;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;#411&lt;/code&gt;, is so dark that it's difficult to read given the &lt;code&gt;black&lt;/code&gt;&lt;a href=&quot;background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt;. Depending on the browser, its configuration, and the device on which the example is being viewed, the browser may opt to remove the black background or change the text color in order to improve contrast and make the text more legible.</source>
          <target state="translated">テキスト、上記の例では&lt;a href=&quot;color&quot;&gt; &lt;code&gt;color&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;#411&lt;/code&gt; 、それは所定の読み取りに難しいほど暗い &lt;code&gt;black&lt;/code&gt; &lt;a href=&quot;background-color&quot;&gt; &lt;code&gt;background-color&lt;/code&gt; &lt;/a&gt;。ブラウザー、その構成、およびサンプルが表示されているデバイスによっては、ブラウザーは黒の背景を削除するか、テキストの色を変更して、コントラストを改善し、テキストを読みやすくする場合があります。</target>
        </trans-unit>
        <trans-unit id="d4ccbff938633706387f6ddd6912e37e3e0a608b" translate="yes" xml:space="preserve">
          <source>In the example already shown, you can see how writing mode changes the direction in which items place themselves onto the grid. Items will, by default, place themselves along the Inline axis then move onto a new row. However, that inline axis may not always run from left to right.</source>
          <target state="translated">すでに示した例では、書き込みモードがアイテムをグリッド上に配置する方向をどのように変化させるかを見ることができます。デフォルトでは、アイテムはインライン軸に沿って配置され、新しい行に移動します。しかし、そのインライン軸は必ずしも左から右へと動くとは限りません。</target>
        </trans-unit>
        <trans-unit id="b1103502619976f299aa04868c6610ab1b397b87" translate="yes" xml:space="preserve">
          <source>In the example below I am using a similar image to the initial example, however in this image the background of the star is not fully transparent, it has a 20% opacity as created in my graphics programme. If I set &lt;code&gt;shape-image-threshold&lt;/code&gt; to &lt;code&gt;0.3&lt;/code&gt; then I see the shape, if I set it to something smaller than &lt;code&gt;0.2&lt;/code&gt; I do not get the shape.</source>
          <target state="translated">以下の例では、最初の例と同様の画像を使用していますが、この画像では星の背景が完全に透明ではなく、グラフィックスプログラムで作成された20％の不透明度があります。 &lt;code&gt;shape-image-threshold&lt;/code&gt; を &lt;code&gt;0.3&lt;/code&gt; に設定すると形状が表示され、 &lt;code&gt;0.2&lt;/code&gt; 未満に設定すると形状が取得されません。</target>
        </trans-unit>
        <trans-unit id="477c531f80610b6aa5bc3e39ae7727f3342c9aa3" translate="yes" xml:space="preserve">
          <source>In the example below I have a grid layout with nine &lt;code&gt;1fr&lt;/code&gt; column tracks and four rows that are a minimum of 100px tall.</source>
          <target state="translated">以下の例では、9つの &lt;code&gt;1fr&lt;/code&gt; 列トラックと最低100pxの高さの4つの行を持つグリッドレイアウトがあります。</target>
        </trans-unit>
        <trans-unit id="593e017b6b7c0eacc18ab5ceee5444a72111725d" translate="yes" xml:space="preserve">
          <source>In the example below I have created a shape for text to follow using the &lt;code&gt;polygon()&lt;/code&gt;, you can change any of the values to see how the shape is changed.</source>
          <target state="translated">以下の例では、 &lt;code&gt;polygon()&lt;/code&gt; を使用して従うテキストの形状を作成しました。値を変更して、形状がどのように変化するかを確認できます。</target>
        </trans-unit>
        <trans-unit id="34312e5f2e98fb8ae9a0e88cb776234d908dd79c" translate="yes" xml:space="preserve">
          <source>In the example below I have created two boxes and added different sized margins to each edge. I have added an extra container with a border in order to make the margin more obvious to see.</source>
          <target state="translated">下の例では、2 つのボックスを作成し、それぞれの端に異なるサイズの余白を追加しました。余白をよりわかりやすくするために、ボーダーの付いた余分なコンテナを追加しました。</target>
        </trans-unit>
        <trans-unit id="95654e184176d21fbdcf53511aad98ee4d47356e" translate="yes" xml:space="preserve">
          <source>In the example below I have two boxes &amp;mdash; the first has the box floated with &lt;code&gt;float: left&lt;/code&gt;, the second with &lt;code&gt;float: inline-start&lt;/code&gt;. If you change the &lt;code&gt;writing-mode&lt;/code&gt; to &lt;code&gt;vertical-rl&lt;/code&gt; or the &lt;code&gt;direction&lt;/code&gt; to &lt;code&gt;rtl&lt;/code&gt; you will see that the left-floated box always sticks to the left, whereas the &lt;code&gt;inline-start&lt;/code&gt;-floated item follows the &lt;code&gt;direction&lt;/code&gt; and &lt;code&gt;writing-mode&lt;/code&gt;.</source>
          <target state="translated">以下の例では、2つのボックスがあります。最初のボックスには &lt;code&gt;float: left&lt;/code&gt; でフロートされたボックスがあり、2番目のボックスは &lt;code&gt;float: inline-start&lt;/code&gt; でフロートされています。あなたが変更した場合は &lt;code&gt;writing-mode&lt;/code&gt; する &lt;code&gt;vertical-rl&lt;/code&gt; または &lt;code&gt;direction&lt;/code&gt; にする &lt;code&gt;rtl&lt;/code&gt; あなたが表示されます、左に左浮かべボックスは常にスティックその一方、 &lt;code&gt;inline-start&lt;/code&gt; -floated項目は以下の &lt;code&gt;direction&lt;/code&gt; と &lt;code&gt;writing-mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75219be434d76ec0ca4936f20b880c25dc99dcd1" translate="yes" xml:space="preserve">
          <source>In the example below I have two boxes, one of which is using physical padding properties and the other logical padding properties. With a &lt;code&gt;writing-mode&lt;/code&gt; of &lt;code&gt;horizontal-tb&lt;/code&gt;, both boxes should appear the same.</source>
          <target state="translated">以下の例では、2つのボックスがあり、1つは物理パディングプロパティと他の論理パディングプロパティを使用しています。 &lt;code&gt;writing-mode&lt;/code&gt; の &lt;code&gt;horizontal-tb&lt;/code&gt; 、両方のボックスには、同じように表示されます。</target>
        </trans-unit>
        <trans-unit id="132099ac1a26fb85bd5b4774b7fad2d01edfea1b" translate="yes" xml:space="preserve">
          <source>In the example below we have a floated item inside a container. The float is contained by the bordered box, which wraps it and the text alongside. If you remove the line &lt;code&gt;display: flow-root&lt;/code&gt; then the float will poke out of the bottom of the box. If you are using Firefox you can replace it with the newer &lt;code&gt;display: block flow-root&lt;/code&gt;, which will achieve the same as the single &lt;code&gt;flow-root&lt;/code&gt; value.</source>
          <target state="translated">以下の例では、コンテナ内にフロートされたアイテムがあります。フロートは、それとテキストを一緒にラップする境界ボックスに含まれています。 line &lt;code&gt;display: flow-root&lt;/code&gt; を削除すると、フロートがボックスの下部から突き出ます。 Firefoxを使用している場合は、Firefoxを新しい &lt;code&gt;display: block flow-root&lt;/code&gt; に置き換えることができます。これにより、単一の &lt;code&gt;flow-root&lt;/code&gt; 値と同じようになります。</target>
        </trans-unit>
        <trans-unit id="ade9fac5d6ccfe3034657e770d8dc1cae4cf94ee" translate="yes" xml:space="preserve">
          <source>In the example below we have added a &lt;code&gt;shape-margin&lt;/code&gt; to a basic shape. Change the margin to push the text further away from the path the shape would take by default.</source>
          <target state="translated">以下の例では、基本的な形状に形状 &lt;code&gt;shape-margin&lt;/code&gt; を追加しています。マージンを変更して、デフォルトでシェイプが取るパスからテキストをさらに遠ざけます。</target>
        </trans-unit>
        <trans-unit id="33026d8bab067e8d2a5636083180b4467ba52589" translate="yes" xml:space="preserve">
          <source>In the example below we have an &lt;code&gt;inset()&lt;/code&gt; shape used to pull content over the floated element. Change the offset values to see how the shape changes.</source>
          <target state="translated">以下の例では、フロート要素の上にコンテンツをプルするために使用される &lt;code&gt;inset()&lt;/code&gt; シェイプがあります。オフセット値を変更して、形状がどのように変化するかを確認します。</target>
        </trans-unit>
        <trans-unit id="c652e79ee709d3906a520f2a7bda48f0d9c6a75d" translate="yes" xml:space="preserve">
          <source>In the example below we have used a &lt;code&gt;min-height&lt;/code&gt; query to check the height before applying the column properties.</source>
          <target state="translated">以下の例では、 &lt;code&gt;min-height&lt;/code&gt; クエリを使用して、列のプロパティを適用する前に高さを確認しています。</target>
        </trans-unit>
        <trans-unit id="a0c532f29b779d48711b45394f66f479a527ed48" translate="yes" xml:space="preserve">
          <source>In the example below you can change the value &lt;code&gt;border-box&lt;/code&gt; to any of the other allowed values to see how the shape moves closer or further away from the box.</source>
          <target state="translated">以下の例では、値 &lt;code&gt;border-box&lt;/code&gt; を他の許可された値のいずれかに変更して、形状がボックスにどのように近づいたり遠ざかったりするかを確認できます。</target>
        </trans-unit>
        <trans-unit id="5dc42da6b95fa8bff1abfb4e31da1ae484b04273" translate="yes" xml:space="preserve">
          <source>In the example below you can see how the text now follows the line created by the border. Change the border size and the content follows it.</source>
          <target state="translated">下の例では、テキストが境界線によって作られた行に沿って表示されるようになったことがわかります。境界線のサイズを変更すると、内容が境界線に沿って表示されます。</target>
        </trans-unit>
        <trans-unit id="914bee6510933c52cccf208ee1a1a7d562a558b9" translate="yes" xml:space="preserve">
          <source>In the example below, elements #1 through #4 are positioned elements. Element #5 is static, and so is drawn below the other four elements, even though it comes later in the HTML markup.</source>
          <target state="translated">下の例では、要素 #1 から #4 は配置された要素です。要素#5は静的なので、HTMLのマークアップでは後から来ているにもかかわらず、他の4つの要素の下に描画されています。</target>
        </trans-unit>
        <trans-unit id="b9369a1201d51d08289155303f00232cb5e10df6" translate="yes" xml:space="preserve">
          <source>In the example below, the h2 element is set to &lt;code&gt;column-span: all&lt;/code&gt; and spans all of the columns.</source>
          <target state="translated">以下の例では、h2要素は &lt;code&gt;column-span: all&lt;/code&gt; 設定され、すべての列にまたがっています。</target>
        </trans-unit>
        <trans-unit id="dc7496e48926463801ef244134127e6702eb72ac" translate="yes" xml:space="preserve">
          <source>In the example below, the paragraphs have a top margin of &lt;code&gt;20px&lt;/code&gt; and a bottom margin of &lt;code&gt;40px&lt;/code&gt;. The size of the margin between the paragraphs is &lt;code&gt;40px&lt;/code&gt; as the smaller top margin on the second paragraph has collapsed with the larger bottom margin of the first.</source>
          <target state="translated">以下の例では、段落の上部マージンは &lt;code&gt;20px&lt;/code&gt; 、下部マージンは &lt;code&gt;40px&lt;/code&gt; です。段落間のマージンのサイズは &lt;code&gt;40px&lt;/code&gt; です。これは、2番目の段落の小さい上部マージンが最初の段落の大きい下部マージンと折りたたまれているためです。</target>
        </trans-unit>
        <trans-unit id="a4e1f578a2c273d75cfd46ae4d4d7c8137627bec" translate="yes" xml:space="preserve">
          <source>In the example below, the value of &lt;code&gt;justify-content&lt;/code&gt; is &lt;code&gt;space-between&lt;/code&gt;. The available space after displaying the items is distributed between the items. The left and right item line up flush with the start and end.</source>
          <target state="translated">以下の例では、 &lt;code&gt;justify-content&lt;/code&gt; の値は &lt;code&gt;space-between&lt;/code&gt; です。アイテムを表示した後の使用可能なスペースは、アイテム間に配分されます。左と右のアイテムは、開始と終了に揃っています。</target>
        </trans-unit>
        <trans-unit id="435c5dff50cefc4cef6c1d6bb199e83edf19dc62" translate="yes" xml:space="preserve">
          <source>In the example below, we are using the &lt;code&gt;orphans&lt;/code&gt; property to control the number of lines left at the bottom of a column. You can change that value to see the effect on the breaking of the content.</source>
          <target state="translated">以下の例では、 &lt;code&gt;orphans&lt;/code&gt; プロパティを使用して、列の下部に残る行数を制御しています。その値を変更して、コンテンツの分割への影響を確認できます。</target>
        </trans-unit>
        <trans-unit id="389fa1e25801f00230a450147bc99ac26c878f12" translate="yes" xml:space="preserve">
          <source>In the example below, we have a circular purple item which is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; with a height, width, and background colour. The &lt;code&gt;border-radius&lt;/code&gt; property has been used to create a circle by setting &lt;code&gt;border-radius: 50%&lt;/code&gt;. As the element has a margin, you can see that the content is flowing around the circular shape and the margin applied to it.</source>
          <target state="translated">以下の例では、高さ、幅、背景色を持つ&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;である円形の紫色のアイテムがあります。 &lt;code&gt;border-radius&lt;/code&gt; プロパティが設定して円を作成するために使用されている &lt;code&gt;border-radius: 50%&lt;/code&gt; 。要素にマージンがあるので、コンテンツが円形の周りを流れており、それにマージンが適用されていることがわかります。</target>
        </trans-unit>
        <trans-unit id="fff07caba5205ccebb84c77d806c1e63a6335418" translate="yes" xml:space="preserve">
          <source>In the example below, we have a floated element inside a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with a border applied. The content of that &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; has floated alongside the floated element. As the content of the float is taller than the content alongside it, the border of the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; now runs through the float. As explained in the &lt;a href=&quot;in_flow_and_out_of_flow&quot;&gt;guide to in-flow and out of flow elements&lt;/a&gt;, the float has been taken out of flow so the background and border of the div only contain the content and not the float.</source>
          <target state="translated">以下の例では、境界線が適用された &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 内にfloat要素があります。その &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; のコンテンツは、float要素と一緒にfloatされています。フロートのコンテンツはその横のコンテンツよりも高いため、 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; の境界線がフロートを通過するようになりました。&lt;a href=&quot;in_flow_and_out_of_flow&quot;&gt;流入要素と流出要素&lt;/a&gt;のガイドで説明されているように、フロートはフローから削除されているため、divの背景と境界にはコンテンツのみが含まれ、フロートは含まれません。</target>
        </trans-unit>
        <trans-unit id="38f130bac936ac35235b254ca436983752f1b353" translate="yes" xml:space="preserve">
          <source>In the example below, we have a floated element inside a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with a border applied. The content of that &lt;code&gt;div&lt;/code&gt; has floated alongside the floated element. As the content of the float is taller than the content alongside it, the border of the div now runs through the float. As explained in the &lt;a href=&quot;in_flow_and_out_of_flow&quot;&gt;guide to in-flow and out of flow elements&lt;/a&gt;, the float has been taken out of flo so the background and border of the div only contain the content and not the float.</source>
          <target state="translated">以下の例では、ボーダーが適用された &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 内にフロート要素があります。その &lt;code&gt;div&lt;/code&gt; のコンテンツは、floated要素とともにフロートしました。フロートのコンテンツは横のコンテンツよりも高いため、divの境界線はフロートを通過します。&lt;a href=&quot;in_flow_and_out_of_flow&quot;&gt;流入要素と流出要素&lt;/a&gt;のガイドで説明したように、フロートはフロートから取り出されているため、divの背景と境界にはコンテンツのみが含まれ、フロートは含まれていません。</target>
        </trans-unit>
        <trans-unit id="c107768ba9702cccab007a82eaafb3f40dbffd21" translate="yes" xml:space="preserve">
          <source>In the example below, we have applied break-inside to the figure element to prevent the caption from becoming separated from the image.</source>
          <target state="translated">下の例では、キャプションが画像から分離してしまうのを防ぐために、図の要素にブレークインサイドを適用しています。</target>
        </trans-unit>
        <trans-unit id="bdb98a6cc0426954c7368bd442296f7bd84ff6a8" translate="yes" xml:space="preserve">
          <source>In the examples above we have used images or a visible element to define the shape, meaning that you can see the shape on the page. Instead, you might simply want to cause some text to flow along a non-rectangular invisible line. You can do this with Shapes, however you will still need a floated item, which you can then make invisible. That could be a redundant element inserted into the document, an empty &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; perhaps, but our preference is to use generated content. This means we can keep things used for styling inside the CSS.</source>
          <target state="translated">上記の例では、画像または可視エレメントを使用して形状を定義しています。つまり、ページ上で形状を確認できます。代わりに、一部のテキストを長方形以外の非表示の線に沿って流したい場合があります。Shapesでこれを行うことができますが、フロートアイテムが必要になり、非表示にすることができます。これは、ドキュメントに挿入された冗長要素、おそらく空の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;である可能性がありますが、生成されたコンテンツを使用することをお勧めします。これは、CSS内でスタイル設定に使用されるものを保持できることを意味します。</target>
        </trans-unit>
        <trans-unit id="0a3445c5f72a7cf65ef57c9a6b03705d026a2e54" translate="yes" xml:space="preserve">
          <source>In the final guide in this series we will see &lt;a href=&quot;handling_content_breaks_in_multicol&quot;&gt;how Multicol works with the Fragmentation spec &lt;/a&gt;to give us control over how content breaks between columns.</source>
          <target state="translated">このシリーズの最後のガイドでは&lt;a href=&quot;handling_content_breaks_in_multicol&quot;&gt;、MulticolがFragmentation仕様&lt;/a&gt;と連携して、コンテンツが列間でどのように分割されるかを制御する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="402d8147a751e9d6c29f136cdd4c7ed868e71254" translate="yes" xml:space="preserve">
          <source>In the first above example, the width will be at least 400px, but will be wider if the the viewport is more than 2000px wide (in which case 1vw would be 20px, so 20vw would be 400px). Think of the &lt;code&gt;max()&lt;/code&gt; value as providing the &lt;em&gt;minimum&lt;/em&gt; value a property can have.</source>
          <target state="translated">上記の最初の例では、幅は少なくとも400pxになりますが、ビューポートの幅が2000pxを超えると、幅が広くなります（この場合、1vwは20pxになるため、20vwは400pxになります）。 &lt;code&gt;max()&lt;/code&gt; 値は、プロパティが持つことができる&lt;em&gt;最小&lt;/em&gt;値を提供するものと考えてください。</target>
        </trans-unit>
        <trans-unit id="7fa862e3f12fd822667ad6fdfb6edc8e6d08249e" translate="yes" xml:space="preserve">
          <source>In the first above example, the width will be at most 200px, but will be smaller if the viewport is less than 400px wide (in which case 1vw would be 4px, so 50vw would be 200px). In other words, the maximum width is 200px. Think of the &lt;code&gt;min()&lt;/code&gt; value as providing the &lt;em&gt;maximum&lt;/em&gt; value a property can have.</source>
          <target state="translated">上記の最初の例では、幅は最大で200pxになりますが、ビューポートの幅が400px未満の場合は小さくなります（この場合、1vwは4pxになるため、50vwは200pxになります）。つまり、最大幅は200pxです。 &lt;code&gt;min()&lt;/code&gt; 値は、プロパティが持つことができる&lt;em&gt;最大&lt;/em&gt;値を提供するものと考えてください。</target>
        </trans-unit>
        <trans-unit id="a9ec705a06544e468ecaa1ec94a0ac77bddbf117" translate="yes" xml:space="preserve">
          <source>In the first example above, the lime goes from the 0% mark, which is implied, to the 20% mark, transitions from lime to red over the next 10% of the width of the gradient, reach solid red at the 30% mark, and staying solid red up until 45% through the gradient, where it fades to cyan, being fully cyan for 15% of the gradient, and so on.</source>
          <target state="translated">上記の最初の例では、ライムは暗示されている0%マークから20%マークまで進み、グラデーションの幅の次の10%の間にライムから赤へと変化し、30%マークで赤の固体に到達し、グラデーションの45%まで赤の固体のままであり、そこでシアンにフェードアウトし、グラデーションの15%の間は完全にシアン色になり、その後も続く。</target>
        </trans-unit>
        <trans-unit id="f3432b14b360205e5f7a1e98c561dd64dab2c97c" translate="yes" xml:space="preserve">
          <source>In the first example, which uses flexbox, I have a container with three items inside. The wrapper &lt;a href=&quot;../min-height&quot;&gt;&lt;code&gt;min-height&lt;/code&gt;&lt;/a&gt; is set, so it defines the height of the flex container. I have set &lt;a href=&quot;../align-items&quot;&gt;&lt;code&gt;align-items&lt;/code&gt;&lt;/a&gt; on the flex container to &lt;code&gt;flex-end&lt;/code&gt; so the items will line up at the end of the flex container. I have also set the &lt;a href=&quot;../align-self&quot;&gt;&lt;code&gt;align-self&lt;/code&gt;&lt;/a&gt; property on &lt;code&gt;box1&lt;/code&gt; so it will override the default and stretch to the height of the container and on &lt;code&gt;box2&lt;/code&gt; so it aligns to the start of the flex container.</source>
          <target state="translated">flexboxを使用する最初の例では、内部に3つのアイテムを持つコンテナーがあります。ラッパーの&lt;a href=&quot;../min-height&quot;&gt; &lt;code&gt;min-height&lt;/code&gt; &lt;/a&gt;が設定されているため、フレックスコンテナーの高さを定義します。私が設定している&lt;a href=&quot;../align-items&quot;&gt; &lt;code&gt;align-items&lt;/code&gt; &lt;/a&gt;にフレックスコンテナ上の &lt;code&gt;flex-end&lt;/code&gt; の項目がフレックスコンテナの最後に並ぶますので。私はまた、設定した&lt;a href=&quot;../align-self&quot;&gt; &lt;code&gt;align-self&lt;/code&gt; &lt;/a&gt;のプロパティを &lt;code&gt;box1&lt;/code&gt; それは、コンテナの高さにし、上のデフォルトとストレッチを上書きしますので &lt;code&gt;box2&lt;/code&gt; それはフレックスコンテナの先頭に揃えるようにします。</target>
        </trans-unit>
        <trans-unit id="4b4db2f6f783020c55642ed08da7e67acd0ff674" translate="yes" xml:space="preserve">
          <source>In the float model, a box is first laid out according to the normal flow, then taken out of the flow and positioned, typically to the left or right. Content may flow along the side of a float.</source>
          <target state="translated">フロートモデルでは、ボックスは、まず通常の流れに従ってレイアウトされ、その後、流れから取り出され、典型的には左または右に配置される。コンテンツは、フロートの側面に沿って流れてもよい。</target>
        </trans-unit>
        <trans-unit id="c72b83154889f6d107a6bb5ca2398c3ca75257e1" translate="yes" xml:space="preserve">
          <source>In the following example I am placing the first two items on our three column track grid, using the &lt;a href=&quot;../grid-column-start&quot;&gt;&lt;code&gt;grid-column-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../grid-column-end&quot;&gt;&lt;code&gt;grid-column-end&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../grid-row-start&quot;&gt;&lt;code&gt;grid-row-start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../grid-row-end&quot;&gt;&lt;code&gt;grid-row-end&lt;/code&gt;&lt;/a&gt; properties. Working from left to right, the first item is placed against column line 1, and spans to column line 4, which in our case is the far-right line on the grid. It begins at row line 1 and ends at row line 3, therefore spanning two row tracks.</source>
          <target state="translated">次の例では、&lt;a href=&quot;../grid-column-start&quot;&gt; &lt;code&gt;grid-column-start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../grid-column-end&quot;&gt; &lt;code&gt;grid-column-end&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../grid-row-start&quot;&gt; &lt;code&gt;grid-row-start&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../grid-row-end&quot;&gt; &lt;code&gt;grid-row-end&lt;/code&gt; &lt;/a&gt;プロパティを使用して、最初の2つのアイテムを3列のトラックグリッドに配置しています。左から右に作業すると、最初の項目は列行1に対して配置され、列行4にまたがります。この場合、グリッドの一番右の行です。行1から始まり、行3で終わるため、2つの行トラックにまたがります。</target>
        </trans-unit>
        <trans-unit id="0c9c1c7215875666c55031180f0e7cccfa45b3e2" translate="yes" xml:space="preserve">
          <source>In the following example I have a heading, paragraph, a list and a final paragraph which contains a &lt;code&gt;strong&lt;/code&gt; element. The heading and paragraphs are block level, the &lt;code&gt;strong&lt;/code&gt; element inline. The list is displayed using flexbox to arrange the items into a row, however it too is participating in block and inline layout - the container has an outside &lt;code&gt;display&lt;/code&gt; type of &lt;code&gt;block&lt;/code&gt;.</source>
          <target state="translated">次の例では、見出し、段落、リスト、そして &lt;code&gt;strong&lt;/code&gt; 要素を含む最後の段落があります。見出しと段落はブロックレベルであり、 &lt;code&gt;strong&lt;/code&gt; 要素がインラインで表示されます。リストは、フレックスボックスを使用して項目を行に配置して表示されますが、これもブロックおよびインラインレイアウトに参加してい &lt;code&gt;block&lt;/code&gt; 。コンテナには、外側の &lt;code&gt;display&lt;/code&gt; タイプのブロックがあります。</target>
        </trans-unit>
        <trans-unit id="bb9166e9691dae65338c7eb1b6a7ad2a1a0012db" translate="yes" xml:space="preserve">
          <source>In the following example I have an image floated left. I have then applied the &lt;code&gt;shape-outside&lt;/code&gt; property to it with a value of &lt;code&gt;circle(50%)&lt;/code&gt;. The result is that the content now curves around the circular shape rather than following the rectangle created by the box of the image.</source>
          <target state="translated">次の例では、画像を左に浮かせています。次に、 &lt;code&gt;circle(50%)&lt;/code&gt; の値で &lt;code&gt;shape-outside&lt;/code&gt; プロパティを適用しました。その結果、コンテンツは、画像のボックスによって作成された長方形に従うのではなく、円形の周りを曲がります。</target>
        </trans-unit>
        <trans-unit id="98df973196e4e092d94f62000b05f45ff7fda7f3" translate="yes" xml:space="preserve">
          <source>In the following example a container has been set to &lt;code&gt;display: flex&lt;/code&gt;, which means that the three child items become flex items. The value of &lt;code&gt;justify-content&lt;/code&gt; has been set to &lt;code&gt;space-between&lt;/code&gt; in order to space the items out evenly on the main axis. An equal amount of space is placed between each item with the left and right items being flush with the edges of the flex container. You can also see that the items are stretching on the cross axis, due to the default value of &lt;code&gt;align-items&lt;/code&gt; being &lt;code&gt;stretch&lt;/code&gt;. The items stretch to the height of the flex container, making them each appear as tall as the tallest item.</source>
          <target state="translated">次の例では、コンテナが &lt;code&gt;display: flex&lt;/code&gt; ように設定されています。flexは、3つの子アイテムがflexアイテムになることを意味します。 &lt;code&gt;justify-content&lt;/code&gt; の値は、主軸上でアイテムを均等に配置するために、スペース &lt;code&gt;space-between&lt;/code&gt; で設定されています。各アイテム間に等量のスペースが配置され、左右のアイテムがフレックスコンテナーの端と面一になります。 &lt;code&gt;align-items&lt;/code&gt; のデフォルト値が &lt;code&gt;stretch&lt;/code&gt; であるため、アイテムが交差軸で伸びていることもわかります。アイテムはフレックスコンテナーの高さまで伸び、それぞれが最も高いアイテムと同じ高さで表示されます。</target>
        </trans-unit>
        <trans-unit id="39f55d3e3d87c5387e101555b1001e0891585e6c" translate="yes" xml:space="preserve">
          <source>In the following example the &lt;a href=&quot;column-count&quot;&gt;&lt;code&gt;column-count&lt;/code&gt;&lt;/a&gt; property has been applied to the element with a class of container. As the value of &lt;code&gt;column-count&lt;/code&gt; is &lt;code&gt;3&lt;/code&gt;, the content is arranged into 3 columns of equal size.</source>
          <target state="translated">次の例では、&lt;a href=&quot;column-count&quot;&gt; &lt;code&gt;column-count&lt;/code&gt; &lt;/a&gt;プロパティがコンテナのクラスを持つ要素に適用されています。値と &lt;code&gt;column-count&lt;/code&gt; ある &lt;code&gt;3&lt;/code&gt; 、コンテンツは、等しいサイズの3列に配置されています。</target>
        </trans-unit>
        <trans-unit id="0c5fbcd7f3c6ca2c5a16a95e58be35c50335c0d2" translate="yes" xml:space="preserve">
          <source>In the following example we have a container that contains an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; spanning all columns (achieved using &lt;code&gt;column-span: all&lt;/code&gt;) and a series of &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;s and paragraphs laid out in multiple columns using &lt;code&gt;column-width: 200px&lt;/code&gt;.</source>
          <target state="translated">次の例では、すべての列にまたがる &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; （ &lt;code&gt;column-span: all&lt;/code&gt; を使用して実現）と、 &lt;code&gt;column-width: 200px&lt;/code&gt; を使用して複数の列に配置された一連の &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; と段落を含むコンテナーがあります。</target>
        </trans-unit>
        <trans-unit id="8a9c7a8bb0fdba07524fd54e7b5813e01a075c9d" translate="yes" xml:space="preserve">
          <source>In the following example we have a container that contains an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; spanning all columns (achieved using &lt;code&gt;column-span: all&lt;/code&gt;) and a series of paragraphs laid out in multiple columns using &lt;code&gt;column-width: 200px&lt;/code&gt;. We also have a &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; containing an image and a caption.</source>
          <target state="translated">次の例では、すべての列にまたがる &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; （ &lt;code&gt;column-span: all&lt;/code&gt; を使用して実現）と、 &lt;code&gt;column-width: 200px&lt;/code&gt; を使用して複数の列に配置された一連の段落を含むコンテナーがあります。画像とキャプションを含む &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; もあります。</target>
        </trans-unit>
        <trans-unit id="58038b1abd530ff0c2207d9aa5b529efddd51d51" translate="yes" xml:space="preserve">
          <source>In the following example we have a simple 2 x 2 grid layout. Initially the grid container has &lt;code&gt;&lt;a href=&quot;justify-items&quot;&gt;justify-items&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;align-items&quot;&gt;align-items&lt;/a&gt;&lt;/code&gt; values of &lt;code&gt;stretch&lt;/code&gt; &amp;mdash; the defaults &amp;mdash; which causes the grid items to stretch across the entire width of their cells.</source>
          <target state="translated">次の例では、単純な2 x2グリッドレイアウトがあります。最初、グリッドコンテナには、 &lt;code&gt;stretch&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;justify-items&quot;&gt;justify-items&lt;/a&gt;&lt;/code&gt; 値と &lt;code&gt;&lt;a href=&quot;align-items&quot;&gt;align-items&lt;/a&gt;&lt;/code&gt; 値（デフォルト）があります。これにより、グリッドアイテムはセルの幅全体に広がります。</target>
        </trans-unit>
        <trans-unit id="73251624a897590eccb1e623145a8c3034ae5c4a" translate="yes" xml:space="preserve">
          <source>In the following example we have a simple 2 x 2 grid layout. Initially the grid container is given a &lt;code&gt;justify-items&lt;/code&gt; value of &lt;code&gt;stretch&lt;/code&gt; &amp;mdash; the default &amp;mdash; which causes the grid items to stretch across the entire width of their cells.</source>
          <target state="translated">次の例では、単純な2 x2グリッドレイアウトがあります。最初に、グリッドコンテナには &lt;code&gt;stretch&lt;/code&gt; の &lt;code&gt;justify-items&lt;/code&gt; 値（デフォルト）が与えられます。これにより、グリッドアイテムはセルの幅全体に広がります。</target>
        </trans-unit>
        <trans-unit id="f33e4fd47ddf67be70c2dee90087c881d0d8bc76" translate="yes" xml:space="preserve">
          <source>In the following example we have a simple 2 x 2 grid layout. Initially the grid container is given a &lt;code&gt;justify-items&lt;/code&gt; value of &lt;code&gt;stretch&lt;/code&gt; (the default), which causes the grid items to stretch across the entire width of their cells.</source>
          <target state="translated">次の例では、単純な2 x2グリッドレイアウトがあります。最初に、グリッドコンテナには &lt;code&gt;stretch&lt;/code&gt; の &lt;code&gt;justify-items&lt;/code&gt; 値（デフォルト）が与えられます。これにより、グリッドアイテムはセルの幅全体に広がります。</target>
        </trans-unit>
        <trans-unit id="5f2e8f28a0d905f5f451c02e03d191652af09d47" translate="yes" xml:space="preserve">
          <source>In the following example we have three inline boxes created by a paragraph with a strong element inside it.</source>
          <target state="translated">次の例では、その中に強力な要素を持つ段落によって作成された3つのインラインボックスがあります。</target>
        </trans-unit>
        <trans-unit id="97d95466508eec13093a8b4c24493dba0d277d47" translate="yes" xml:space="preserve">
          <source>In the following example, I have four grid areas within my grid. I can use the &lt;a href=&quot;../align-items&quot;&gt;&lt;code&gt;align-items&lt;/code&gt;&lt;/a&gt; property on the grid container, to align the items using one of the following values:</source>
          <target state="translated">次の例では、グリッド内に4つのグリッド領域があります。グリッドコンテナーの&lt;a href=&quot;../align-items&quot;&gt; &lt;code&gt;align-items&lt;/code&gt; &lt;/a&gt;プロパティを使用して、次のいずれかの値を使用して項目を配置できます。</target>
        </trans-unit>
        <trans-unit id="7056de60841151d095062abbcd5bb07fc3f15382" translate="yes" xml:space="preserve">
          <source>In the following example, span elements (normally displayed as inline elements) are set to &lt;code&gt;display: block&lt;/code&gt; and so break onto new lines and expand to fill their container in the inline dimension.</source>
          <target state="translated">次の例では、span要素（通常はインライン要素として表示されます）が &lt;code&gt;display: block&lt;/code&gt; 設定されているため、新しい行に分割し、展開してインラインディメンションのコンテナーを埋めます。</target>
        </trans-unit>
        <trans-unit id="b7e81194bfc9d7eed0fe6651a5e9343c292ba36c" translate="yes" xml:space="preserve">
          <source>In the following example, the height of line box in each paragraph is rounded up to the step unit. The line box in &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; does not fit into one step unit and thus occupies two, but it is still centered within the two step unit.</source>
          <target state="translated">次の例では、各段落のラインボックスの高さがステップ単位に切り上げられています。 &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; のラインボックスは1つのステップ単位に収まらないため、2つを占めますが、それでも2つのステップ単位の中央に配置されます。</target>
        </trans-unit>
        <trans-unit id="e48bdf65135557788bd549818de29bd862970ed8" translate="yes" xml:space="preserve">
          <source>In the following example, the layers' stacking order is rearranged using &lt;code&gt;z-index&lt;/code&gt;. The &lt;code&gt;z-index&lt;/code&gt; of element #5 has no effect since it is not a positioned element.</source>
          <target state="translated">次の例では、レイヤーのスタック順序が &lt;code&gt;z-index&lt;/code&gt; を使用して再配置されています。要素＃5の &lt;code&gt;z-index&lt;/code&gt; は、配置された要素ではないため、効果がありません。</target>
        </trans-unit>
        <trans-unit id="dd9255258b5bfb95c3cad5f1d7a36d344a24b570" translate="yes" xml:space="preserve">
          <source>In the following example, the line boxes following the floated &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; are shortened to wrap around the float. The background of the box runs behind the float, as the floated item has been taken out of flow.</source>
          <target state="translated">次の例では、float &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; に続くラインボックスは、floatをラップするように短縮されています。フロートされたアイテムが流れから取り出されたため、ボックスの背景はフロートの後ろにあります。</target>
        </trans-unit>
        <trans-unit id="ff40524fd9054adc2b3ee64a232968e9b95511d1" translate="yes" xml:space="preserve">
          <source>In the following example, there are five links that point to elements in the same document. Selecting the &quot;First&quot; link, for example, will cause &lt;code&gt;&amp;lt;h1 id=&quot;one&quot;&amp;gt;&lt;/code&gt; to become the target element. Note that the document may jump to a new scroll position, since target elements are placed on the top of the browser window if possible.</source>
          <target state="translated">次の例では、同じドキュメント内の要素を指す5つのリンクがあります。たとえば、「最初の」リンクを選択すると、 &lt;code&gt;&amp;lt;h1 id=&quot;one&quot;&amp;gt;&lt;/code&gt; がターゲット要素になります。可能であればターゲット要素がブラウザウィンドウの上部に配置されるため、ドキュメントが新しいスクロール位置にジャンプする場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9aac888049c715958675c455bc87a6f6db461978" translate="yes" xml:space="preserve">
          <source>In the following example, we have a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with two background images set on it &amp;mdash; a Firefox logo on top of a linear gradient. Below it we have a provided a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; menu that allows you to change the &lt;code&gt;background-blend-mode&lt;/code&gt; applied to the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, allowing you to compare the different blend mode effects.</source>
          <target state="translated">次の例では、2つの背景画像が設定された &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; があります&amp;mdash;線形グラデーションの上にFirefoxのロゴがあります。その下には、 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; に適用される &lt;code&gt;background-blend-mode&lt;/code&gt; を変更できる &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; メニューが用意されており、さまざまなブレンドモードの効果を比較できます。</target>
        </trans-unit>
        <trans-unit id="6a2fa1bb74c123c10f87a70fe0bf7313fdecaec6" translate="yes" xml:space="preserve">
          <source>In the following example, we have three &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; elements nested in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section&quot;&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;&lt;/a&gt; elements. Each &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; is given the same &lt;a href=&quot;offset-path&quot;&gt;&lt;code&gt;offset-path&lt;/code&gt;&lt;/a&gt; (a horizontal line 200 pixels long) and animated to move along it. The three are then given different &lt;a href=&quot;background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;offset-anchor&lt;/code&gt; values.</source>
          <target state="translated">次の例では、3つの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;要素が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section&quot;&gt; &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; &lt;/a&gt;要素にネストされています。各 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; には同じ&lt;a href=&quot;offset-path&quot;&gt; &lt;code&gt;offset-path&lt;/code&gt; &lt;/a&gt;（長さ200ピクセルの水平線）が与えられ、それに沿って移動するようにアニメーション化されます。次に、3つに異なる&lt;a href=&quot;background-color&quot;&gt; &lt;code&gt;background-color&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;offset-anchor&lt;/code&gt; 値が与えられます。</target>
        </trans-unit>
        <trans-unit id="43c9c4d16d17c77c861673134b6fa47a065f15b9" translate="yes" xml:space="preserve">
          <source>In the following example, we have three inline boxes created by a paragraph with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong&quot;&gt;&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;&lt;/a&gt; element inside it.</source>
          <target state="translated">次の例では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong&quot;&gt; &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を含む段落によって作成された3つのインラインボックスがあります。</target>
        </trans-unit>
        <trans-unit id="2255de9ff1b87394edc348b1f6bcfd93394b9cfe" translate="yes" xml:space="preserve">
          <source>In the following examples I am working with &lt;a href=&quot;../flex-direction&quot;&gt;&lt;code&gt;flex-direction&lt;/code&gt;&lt;/a&gt; set to row, therefore the size of items will always come from their width. We will be calculating the positive and negative free space created by comparing the total width of all the items with the container width. You could equally try out each example with &lt;code&gt;flex-direction: column&lt;/code&gt;. The main axis would then be the column, and you would then need to compare the height of the items and that of the container they are in to work out the positive and negative free space.</source>
          <target state="translated">次の例では、&lt;a href=&quot;../flex-direction&quot;&gt; &lt;code&gt;flex-direction&lt;/code&gt; &lt;/a&gt;を行に設定して作業しているため、アイテムのサイズは常に幅から取得されます。すべてのアイテムの合計幅をコンテナの幅と比較することによって作成される正と負の空きスペースを計算します。 &lt;code&gt;flex-direction: column&lt;/code&gt; して、各例を同様に試すことができます。次に、主軸が列となり、正と負の空きスペースを計算するために、アイテムの高さとそれらが置かれているコンテナーの高さを比較する必要があります。</target>
        </trans-unit>
        <trans-unit id="092d50cb66ecb4c6d736fe2dabbfaa287ac3adcb" translate="yes" xml:space="preserve">
          <source>In the following live example I have a flex container with three child elements. One of these flex items has two elements nested inside it, which would not ordinarily participate in flex layout. Flex layout only applies to the direct children of a flex container.</source>
          <target state="translated">次のライブ・サンプルでは、3 つの子要素を持つフレックス・コンテナを使用しています。これらのフレックスアイテムのうちの1つは、通常はフレックスレイアウトに参加しない2つの要素を内部に入れ子にしています。フレックス・レイアウトはフレックス・コンテナの直接の子要素にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="aee3ec61f4f5be2ec4476ec4c7e342f6adaffb3e" translate="yes" xml:space="preserve">
          <source>In the following live example I have a non-wrapped flex container. The third item has more content than the others yet is set to &lt;code&gt;visibility: collapse&lt;/code&gt; and therefore the flex container is retaining a &lt;em&gt;strut&lt;/em&gt; of the height required to display this item. If you remove &lt;code&gt;visibility: collapse&lt;/code&gt; from the CSS or change the value to &lt;code&gt;visible&lt;/code&gt;, you will see the item disappear and the space redistribute between non-collapsed items; the height of the flex container should not change.</source>
          <target state="translated">次のライブの例では、ラップされていないflexコンテナーがあります。 3番目の項目には他の項目よりも多くのコンテンツが含まれていますが、 &lt;code&gt;visibility: collapse&lt;/code&gt; 設定されています。折りたたむため、フレックスコンテナーはこの項目を表示するために必要な高さの&lt;em&gt;支柱&lt;/em&gt;を保持しています。 &lt;code&gt;visibility: collapse&lt;/code&gt; を削除する場合： CSSから折りたたむか、値を &lt;code&gt;visible&lt;/code&gt; に変更すると、アイテムが非表示になり、折りたたまれていないアイテム間にスペースが再配分されます。フレックスコンテナーの高さは変更しないでください。</target>
        </trans-unit>
        <trans-unit id="a25b116fc0289a523680d38e9f59aa7ccd4634b5" translate="yes" xml:space="preserve">
          <source>In the following live example the first item has a &lt;code&gt;flex-shrink&lt;/code&gt; factor of 1, the second &lt;code&gt;0&lt;/code&gt; (so it won&amp;rsquo;t shrink at all), and the third &lt;code&gt;4&lt;/code&gt;. The third item therefore shrinks more rapidly than the first. Play around with the different values &amp;mdash; as for &lt;code&gt;flex-grow&lt;/code&gt; you can use decimals or larger numbers here. Choose whatever makes most sense to you.</source>
          <target state="translated">次の実際の例では、最初の項目の &lt;code&gt;flex-shrink&lt;/code&gt; 係数は1、2 番目の項目は &lt;code&gt;0&lt;/code&gt; （まったく収縮しない）、3番目の項目は &lt;code&gt;4&lt;/code&gt; です。したがって、3番目の項目は最初の項目よりも速く収縮します。さまざまな値を試してみてください&amp;mdash; &lt;code&gt;flex-grow&lt;/code&gt; の場合は、ここで小数またはより大きな数値を使用できます。あなたにとって最も意味のあるものを選択してください。</target>
        </trans-unit>
        <trans-unit id="e3fc697cb9eee14b1453006fddbe4686ded4eb29" translate="yes" xml:space="preserve">
          <source>In the following live example, I have floated two blocks and then set &lt;code&gt;display: flex&lt;/code&gt; on the container. The items are now flex items, which means they stretch to equal height. Any float behaviour does not apply.</source>
          <target state="translated">次のライブの例では、2つのブロックをフロートしてから、 &lt;code&gt;display: flex&lt;/code&gt; を設定しています。アイテムがフレックスアイテムになりました。つまり、同じ高さに伸びます。フロートの動作は適用されません。</target>
        </trans-unit>
        <trans-unit id="6954ad952493aa4e25639ea39362c8f364f453c4" translate="yes" xml:space="preserve">
          <source>In the future we may not need to make a container a flex container just to centre a single item, as the Box Alignment properties will ultimately be implemented in Block layout. For now however, if you need to properly centre one thing inside another, flexbox is the way to do it. As in the above example, make a container into a flex container, and then use either &lt;code&gt;align-items&lt;/code&gt; on the parent element or target the flex item itself with &lt;code&gt;align-self&lt;/code&gt;.</source>
          <target state="translated">Box Alignmentプロパティは最終的にブロックレイアウトで実装されるため、将来、単一のアイテムを中央に配置するためだけにコンテナーをフレックスコンテナーにする必要はなくなる可能性があります。ただし、今のところ、あるものを別のものの中央に正しく配置する必要がある場合は、フレックスボックスを使用してください。上記の例のように、コンテナーをフレックスコンテナーにしてから、親要素で &lt;code&gt;align-items&lt;/code&gt; を使用するか、 &lt;code&gt;align-self&lt;/code&gt; でフレックスアイテム自体をターゲットにします。</target>
        </trans-unit>
        <trans-unit id="099297ecd7d24a9a06f0111f6c24ccf13e80cdb7" translate="yes" xml:space="preserve">
          <source>In the future, the &lt;code&gt;url()&lt;/code&gt; function may support specifying a modifier, an identifier or a functional notation, which alters the meaning of the URL string.This is not supported and not fully defined in the specification.</source>
          <target state="translated">将来的には、 &lt;code&gt;url()&lt;/code&gt; 関数は、URL文字列の意味を変更する修飾子、識別子、または関数表記の指定をサポートする可能性があります。これはサポートされておらず、仕様で完全に定義されていません。</target>
        </trans-unit>
        <trans-unit id="d7f514b8a9143ecc2063c50c73ee3cbd0f423441" translate="yes" xml:space="preserve">
          <source>In the guide to &lt;a href=&quot;flow_layout_and_writing_modes&quot;&gt;Writing Modes and Flow Layout&lt;/a&gt;, we looked at the newer properties of &lt;code&gt;block-size&lt;/code&gt; and &lt;code&gt;inline-size&lt;/code&gt; which make more sense when working with different writing modes than tying our layout to the physical dimensions of the screen. The Level 3 Overflow Module also includes flow relative properties for overflow - &lt;code&gt;&lt;a href=&quot;../@media/overflow-block&quot;&gt;overflow-block&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../@media/overflow-inline&quot;&gt;overflow-inline&lt;/a&gt;&lt;/code&gt;. These correspond to &lt;code&gt;overflow-x&lt;/code&gt; and &lt;code&gt;overflow-y&lt;/code&gt; but the mapping depends on the writing mode of the document.</source>
          <target state="translated">&lt;a href=&quot;flow_layout_and_writing_modes&quot;&gt;書き込みモードとフローレイアウト&lt;/a&gt;のガイドでは、 &lt;code&gt;block-size&lt;/code&gt; と &lt;code&gt;inline-size&lt;/code&gt; サイズの新しいプロパティについて説明しました。これらのプロパティは、レイアウトを画面の物理的な寸法に結び付けるよりも、さまざまな書き込みモードで作業する場合に役立ちます。レベル3オーバーフローモジュールには、オーバーフロー- &lt;code&gt;&lt;a href=&quot;../@media/overflow-block&quot;&gt;overflow-block&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;../@media/overflow-inline&quot;&gt;overflow-inline&lt;/a&gt;&lt;/code&gt; フロー関連プロパティも含まれています。これらは &lt;code&gt;overflow-x&lt;/code&gt; および &lt;code&gt;overflow-y&lt;/code&gt; に対応しますが、マッピングはドキュメントの書き込みモードに依存します。</target>
        </trans-unit>
        <trans-unit id="fabfe67a8a86952dee02c663d877dd8dd08af5de" translate="yes" xml:space="preserve">
          <source>In the image below, for instance, the examples on the left do not use kerning, while the ones on the right do:</source>
          <target state="translated">例えば、下の画像では、左の例はカーニングを使用していませんが、右の例はカーニングを使用しています。</target>
        </trans-unit>
        <trans-unit id="d952a98f5dfb68a5fe3bee072f3f02100d1a3505" translate="yes" xml:space="preserve">
          <source>In the image, you can see that two items have wrapped onto a new line. These items are sharing the available space and not lining up underneath the items above. This is because when you wrap flex items, each new row (or column when working by column) becomes a new flex container. Space distribution happens across the row.</source>
          <target state="translated">画像では、2つのアイテムが新しいラインに巻き付いているのがわかります。これらのアイテムは利用可能なスペースを共有しており、上のアイテムの下には並んでいません。これは、フレックス アイテムをラッピングすると、新しい行 (または列で作業する場合は列)がそれぞれ新しいフレックス コンテナになるためです。スペースの配分は行全体で行われます。</target>
        </trans-unit>
        <trans-unit id="26fc04ed8af5ee55d31cb10d7ee271b362ff2c47" translate="yes" xml:space="preserve">
          <source>In the image, you can see that two items have wrapped onto a new line. These items are sharing the available space and not lining up underneath the items above. This is because when you wrap flex items, each new row (or column when working by column) is an independent flex line in the flex container. Space distribution happens across the flex line.</source>
          <target state="translated">画像では、2つのアイテムが新しいラインに巻き付いているのがわかります。これらのアイテムは利用可能なスペースを共有しており、上のアイテムの下には並んでいません。これは、フレックス アイテムをラッピングすると、フレックス コンテナ内の各新しい行 (または列で作業する場合は列)が独立したフレックス ラインになるためです。スペースの配分はフレックスライン全体で行われます。</target>
        </trans-unit>
        <trans-unit id="290eef8fb28992e843777a1c08a01127a29be57a" translate="yes" xml:space="preserve">
          <source>In the implemented syntax, the two comma-separated images are declared first, followed by a comma and required percent value. Omitting the comma or percent invalidates the value. The percent is the opacity of the first declared image. The included percentage is subtracted from 100%, with the difference being the opacity of the second image.</source>
          <target state="translated">実装された構文では、カンマで区切られた2つの画像が最初に宣言され、その後にカンマと必須のパーセンテージ値が続きます。カンマやパーセントを省略すると値が無効になります。パーセントは、最初に宣言された画像の不透明度です。含むパーセンテージは 100% から減算され、その差が 2 番目の画像の不透明度となります。</target>
        </trans-unit>
        <trans-unit id="9af008855f8fbf20ff37be1c029a5dc698cef2a1" translate="yes" xml:space="preserve">
          <source>In the last example, the sum of both percentages is not 100%, and therefore both images include their respective opacities.</source>
          <target state="translated">最後の例では、両方のパーセンテージの合計が100%ではないため、両方の画像にそれぞれの不透明度が含まれています。</target>
        </trans-unit>
        <trans-unit id="23486f30e44a850ae97a5669cd064ee04fabdd4c" translate="yes" xml:space="preserve">
          <source>In the left-to-right list items &amp;mdash; those with &lt;code&gt;dir=&quot;ltr&quot;&lt;/code&gt; set on the element itself or inheriting the directionality from an ancestor or default value for the page &amp;mdash; the image will be used as-is. List items with &lt;code&gt;dir=&quot;rtl&quot;&lt;/code&gt; set on the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; or inheriting the right-to-left directionality from an ancestor, such as documents set to Arabic or Hebrew, will have the bullet display on the right, horizontally flippled, as if &lt;code&gt;transform: scalex(-1)&lt;/code&gt; had been set. The text will also be displayed left-to-right.</source>
          <target state="translated">左から右のリストアイテム（要素自体に &lt;code&gt;dir=&quot;ltr&quot;&lt;/code&gt; が設定されているアイテム、またはページの祖先またはデフォルト値から方向性を継承しているアイテム）では、画像はそのまま使用されます。 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; に &lt;code&gt;dir=&quot;rtl&quot;&lt;/code&gt; が設定されているか、アラビア語やヘブライ語に設定されているドキュメントなど、祖先から右から左への方向性を継承しているリストアイテムでは、右側に箇条書きが表示され、水平方向に反転します。 &lt;code&gt;transform: scalex(-1)&lt;/code&gt; が設定されていました。テキストも左から右に表示されます。</target>
        </trans-unit>
        <trans-unit id="dab5642e4f51019fbb1e55bf540191f4c2e7e142" translate="yes" xml:space="preserve">
          <source>In the live code example below I have items laid out using Flexbox. By changing which item has the class &lt;code&gt;active&lt;/code&gt; assigned to it in the HTML, you can change which item displays first and therefore becomes full width at the top of the layout, with the other items displaying below it.</source>
          <target state="translated">以下のライブコード例では、Flexboxを使用してアイテムをレイアウトしています。HTMLで &lt;code&gt;active&lt;/code&gt; クラスが割り当てられているアイテムを変更すると、最初に表示されるアイテムを変更できるため、レイアウトの上部で全幅になり、その下に他のアイテムが表示されます。</target>
        </trans-unit>
        <trans-unit id="c05b9d199e6d3c3626af3c16ef2d036bcab9872f" translate="yes" xml:space="preserve">
          <source>In the live example below I have added a focus style in order that as you tab from link to link you can see which is highlighted. If you change the order using &lt;code&gt;flex-direction&lt;/code&gt; you can see how the tab order continues to follow the order that the items are listed in the source.</source>
          <target state="translated">以下のライブの例では、リンクからリンクにタブで移動すると、どちらが強調表示されているかを確認できるように、フォーカススタイルを追加しました。 &lt;code&gt;flex-direction&lt;/code&gt; を使用して順序を変更すると、ソースにリストされている項目の順序に従ってタブオーダーがどのように続くかを確認できます。</target>
        </trans-unit>
        <trans-unit id="f4ab10a7f257be62661e031bff67ee293e3eb39a" translate="yes" xml:space="preserve">
          <source>In the live example below I have set the Writing Mode to &lt;code&gt;horizontal-tb&lt;/code&gt;. Change it to &lt;code&gt;vertical-rl&lt;/code&gt; and you will see that the first example &amp;mdash; which uses &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; &amp;mdash; remains the same size in each dimension, despite the text becoming vertical. The second example &amp;mdash; which uses &lt;code&gt;inline-size&lt;/code&gt; and &lt;code&gt;block-size&lt;/code&gt; &amp;mdash; will follow the text direction as if the entire block has rotated.</source>
          <target state="translated">以下のライブの例では、書き込みモードを &lt;code&gt;horizontal-tb&lt;/code&gt; 設定しています。それを &lt;code&gt;vertical-rl&lt;/code&gt; に変更すると、テキストが垂直になっても、 &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; を使用する最初の例は各次元で同じサイズのままです。 2番目の例（ &lt;code&gt;inline-size&lt;/code&gt; と &lt;code&gt;block-size&lt;/code&gt; を使用）は、ブロック全体が回転したかのようにテキスト方向に従います。</target>
        </trans-unit>
        <trans-unit id="9255335d6547c17fb53a42e099f9699e6f877b0e" translate="yes" xml:space="preserve">
          <source>In the live example below for instance I have two paragraph elements that contain a string of text. The first paragraph has a width of &lt;code&gt;min-content&lt;/code&gt;. In a browser that supports this keyword you should be able to see that the text has taken all of the soft wrapping opportunities available to it, becoming as small as it can be without overflowing. This then, is the &lt;code&gt;min-content&lt;/code&gt; size of that string. Essentially, the longest word in the string is dictating the size.</source>
          <target state="translated">たとえば以下のライブの例では、テキストの文字列を含む2つの段落要素があります。最初の段落の幅は &lt;code&gt;min-content&lt;/code&gt; です。このキーワードをサポートするブラウザでは、テキストが利用可能なすべてのソフトラッピングの機会を利用して、オーバーフローすることなく可能な限り小さくなったことがわかります。これは、その文字列の &lt;code&gt;min-content&lt;/code&gt; サイズです。基本的に、文字列内の最も長い単語がサイズを決定します。</target>
        </trans-unit>
        <trans-unit id="cbe0578e868834de2803e27df1531ba8bfe603e4" translate="yes" xml:space="preserve">
          <source>In the live example below try changing &lt;code&gt;flex: auto&lt;/code&gt; to &lt;code&gt;flex: 1&lt;/code&gt;. This is the shorthand for &lt;code&gt;flex: 1 1 0&lt;/code&gt; and causes all of the items become the same width, as they are working from a flex-basis of 0 allowing all of the space to be distributed evenly.</source>
          <target state="translated">以下のライブの例では、 &lt;code&gt;flex: auto&lt;/code&gt; を &lt;code&gt;flex: 1&lt;/code&gt; 変更してみてください。これは &lt;code&gt;flex: 1 1 0&lt;/code&gt; の省略形であり、すべてのアイテムが同じ幅になるため、それらは0のフレックス基準から機能しているため、すべてのスペースが均等に分散されます。</target>
        </trans-unit>
        <trans-unit id="93ad6e0c50bd71863f070d61d4bca7421736cb5e" translate="yes" xml:space="preserve">
          <source>In the live example below try changing the first value to one of the allowable values for &lt;code&gt;flex-direction&lt;/code&gt; - &lt;code&gt;row&lt;/code&gt;, &lt;code&gt;row-reverse&lt;/code&gt;, &lt;code&gt;column&lt;/code&gt; or &lt;code&gt;column-reverse&lt;/code&gt;, and also change the second to &lt;code&gt;wrap&lt;/code&gt; and &lt;code&gt;nowrap&lt;/code&gt;.</source>
          <target state="translated">以下の実際の例では、最初の値を &lt;code&gt;flex-direction&lt;/code&gt; - &lt;code&gt;row&lt;/code&gt; 、 &lt;code&gt;row-reverse&lt;/code&gt; 、 &lt;code&gt;column&lt;/code&gt; 、または &lt;code&gt;column-reverse&lt;/code&gt; の許容値のいずれかに変更し、2番目の値を &lt;code&gt;wrap&lt;/code&gt; および &lt;code&gt;nowrap&lt;/code&gt; に変更してみてください。</target>
        </trans-unit>
        <trans-unit id="16dae158bffff224106262746f0d0fcc88c16edf" translate="yes" xml:space="preserve">
          <source>In the live example below you can see our media object. I have used the alignment properties to align the items on the cross axis to &lt;code&gt;flex-start&lt;/code&gt;, and then set the &lt;code&gt;.content&lt;/code&gt; flex item to &lt;code&gt;flex: 1&lt;/code&gt;. As with our column layout card pattern above, using &lt;code&gt;flex: 1&lt;/code&gt; means this part of the card can grow.</source>
          <target state="translated">以下のライブの例では、メディアオブジェクトを確認できます。私は配置プロパティを使用して、クロス軸上の項目を &lt;code&gt;flex-start&lt;/code&gt; に配置し、次に &lt;code&gt;.content&lt;/code&gt; flex項目を &lt;code&gt;flex: 1&lt;/code&gt; 。上記の列レイアウトカードパターンと同様に、 &lt;code&gt;flex: 1&lt;/code&gt; を使用すると、カードのこの部分を拡大できます。</target>
        </trans-unit>
        <trans-unit id="f9c19460d1f4c7e4fdf22b0b177370d1fa36e897" translate="yes" xml:space="preserve">
          <source>In the live example below, the flex container has a height of 400 pixels, which is more than needed to display our items. The value of &lt;code&gt;align-content&lt;/code&gt; is &lt;code&gt;space-between&lt;/code&gt;, which means that the available space is shared out &lt;em&gt;between&lt;/em&gt; the flex lines, which are placed flush with the start and end of the container on the cross axis.</source>
          <target state="translated">以下のライブの例では、フレックスコンテナーの高さは400ピクセルで、アイテムを表示するのに必要以上の高さです。 &lt;code&gt;align-content&lt;/code&gt; の値は &lt;code&gt;space-between&lt;/code&gt; です。これは、使用可能なスペースが、クロス軸上でコンテナーの開始と終了と同じ高さに配置されるフレックスライン&lt;em&gt;間&lt;/em&gt;で共有されることを意味します。</target>
        </trans-unit>
        <trans-unit id="de72aa481a11341fa849fe0ad912a6a89ed01688" translate="yes" xml:space="preserve">
          <source>In the live example below, the value of &lt;code&gt;align-items&lt;/code&gt; is &lt;code&gt;stretch&lt;/code&gt;. Try the other values and see how all of the items align against each other in the flex container.</source>
          <target state="translated">以下のライブの例では、 &lt;code&gt;align-items&lt;/code&gt; の値は &lt;code&gt;stretch&lt;/code&gt; です。他の値を試して、すべての項目がフレックスコンテナー内で互いにどのように揃っているかを確認してください。</target>
        </trans-unit>
        <trans-unit id="e7dbae096f6a48b717d996edc8b77c8a7dbcfcdd" translate="yes" xml:space="preserve">
          <source>In the live example you can play with increasing or decreasing the size of the circle by changing the size of the radius, moving the circle around with the position value, or setting a reference box as we did for &lt;code&gt;inset()&lt;/code&gt;.</source>
          <target state="translated">ライブの例では、半径のサイズを変更したり、位置の値で円を移動したり、 &lt;code&gt;inset()&lt;/code&gt; で行ったように参照ボックスを設定したりすることで、円のサイズを増減できます。</target>
        </trans-unit>
        <trans-unit id="a69f077a50a8b4ba0f18cffd5902642889439327" translate="yes" xml:space="preserve">
          <source>In the most basic cases, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot;&gt;HTML&lt;/a&gt; pages can be considered two-dimensional, because text, images, and other elements are arranged on the page without overlapping. In this case, there is a single rendering flow, and all elements are aware of the space taken by others. The &lt;a href=&quot;../z-index&quot;&gt;&lt;code&gt;z-index&lt;/code&gt;&lt;/a&gt; attribute lets you adjust the order of the layering of objects when rendering content.</source>
          <target state="translated">最も基本的なケースでは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot;&gt;HTML&lt;/a&gt;ページは2次元と見なすことができます。これは、テキスト、イメージ、およびその他の要素が重なり合うことなくページ上に配置されるためです。この場合、単一のレンダリングフローがあり、すべての要素が他の要素が占めるスペースを認識しています。&lt;a href=&quot;../z-index&quot;&gt; &lt;code&gt;z-index&lt;/code&gt; &lt;/a&gt;属性を使用すると、コンテンツをレンダリングするオブジェクトのレイヤーの順序を調整することができます。</target>
        </trans-unit>
        <trans-unit id="4a1553c6b29e44ba9e3cf40fa7f07f3ce15e2e81" translate="yes" xml:space="preserve">
          <source>In the new syntax the inline flex container would be created using two values, inline for the outer display type, and flex for the inner display type.</source>
          <target state="translated">新しい構文では、外側の表示タイプには inline、内側の表示タイプには flex の 2 つの値を使用して、インライン・フレックス・コンテナが作成されます。</target>
        </trans-unit>
        <trans-unit id="1ad572e0bec9e210a733b8fc55518843969ffc3e" translate="yes" xml:space="preserve">
          <source>In the next guide you will learn &lt;a href=&quot;handling_overflow_in_multicol&quot;&gt;how multicol handles overflow&lt;/a&gt;, both within columns and where there are more columns than will fit the container.</source>
          <target state="translated">次のガイドでは、&lt;a href=&quot;handling_overflow_in_multicol&quot;&gt;multicolが&lt;/a&gt;列内でオーバーフローを処理する方法と、コンテナーに収まるよりも多くの列がある場所の両方について学習します。</target>
        </trans-unit>
        <trans-unit id="d0b040c34fb21d744af8e84794daee27ccbdd29f" translate="yes" xml:space="preserve">
          <source>In the next live example I have three items in a flex container; I&amp;rsquo;ve given each a width of 200 pixels, and the container is 500 pixels wide. With &lt;code&gt;flex-shrink&lt;/code&gt; set to &lt;code&gt;0&lt;/code&gt; the items are not allowed to shrink and so they overflow the box.</source>
          <target state="translated">次のライブの例では、フレックスコンテナーに3つのアイテムがあります。それぞれに200ピクセルの幅を指定し、コンテナの幅は500ピクセルです。 &lt;code&gt;flex-shrink&lt;/code&gt; セットに &lt;code&gt;0&lt;/code&gt; アイテムは、ボックスを縮小し、オーバーフロー、彼らはそうすることはできません。</target>
        </trans-unit>
        <trans-unit id="15de18ad2c56f01b034aef435ca8f054cf14763a" translate="yes" xml:space="preserve">
          <source>In the past, a typeface would be produced as a number of individual fonts, and each font would represent one specific width/weight/style combination. So you would have separate files for 'Roboto Regular', 'Roboto Bold', and 'Roboto Bold Italic' &amp;mdash; meaning that you could end up with 20 or 30 different font files to represent a complete typeface (it could be several times that for a large typeface that has different widths as well).</source>
          <target state="translated">以前は、書体はいくつかの個別のフォントとして生成され、各フォントは特定の1つの幅/太さ/スタイルの組み合わせを表していました。したがって、「Roboto Regular」、「Roboto Bold」、および「Roboto Bold Italic」の個別のファイルがあり、完全な書体を表すために20または30の異なるフォントファイルが作成される可能性があります（幅も異なる大きな書体）。</target>
        </trans-unit>
        <trans-unit id="6c5a70b8682135d7d500c528eb8bc2a783415e68" translate="yes" xml:space="preserve">
          <source>In the previous example, we've already seen the &lt;code&gt;and&lt;/code&gt; operator used to group a media &lt;em&gt;type&lt;/em&gt; with a media &lt;em&gt;feature&lt;/em&gt;. The &lt;code&gt;and&lt;/code&gt; operator can also combine multiple media features into a single media query. The &lt;code&gt;not&lt;/code&gt; operator, meanwhile, negates a media query, basically reversing its normal meaning. The &lt;code&gt;only&lt;/code&gt; operator prevents older browsers from applying the styles.</source>
          <target state="translated">前の例では、メディア&lt;em&gt;タイプ&lt;/em&gt;とメディア&lt;em&gt;機能&lt;/em&gt;をグループ化するために使用される &lt;code&gt;and&lt;/code&gt; 演算子をすでに確認しました。 &lt;code&gt;and&lt;/code&gt; また、オペレータは、単一のメディアクエリに複数のメディア機能を組み合わせることができます。 &lt;code&gt;not&lt;/code&gt; オペレータは、一方で、基本的にその通常の意味を逆に、メディアクエリを否定します。 &lt;code&gt;only&lt;/code&gt; オペレータは、スタイルを適用するから古いブラウザを防ぎます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f54aaf5c1f5791f450a5eda896d09a4d47e064ea" translate="yes" xml:space="preserve">
          <source>In the previous part of this article, &lt;a href=&quot;../../understanding_z-index/adding_z-index&quot;&gt;Using z-index&lt;/a&gt;, the rendering order of certain elements is influenced by their &lt;code&gt;z-index&lt;/code&gt; value. This occurs because these elements have special properties which cause them to form a &lt;em&gt;stacking context&lt;/em&gt;.</source>
          <target state="translated">この記事の前の部分である&lt;a href=&quot;../../understanding_z-index/adding_z-index&quot;&gt;z-indexの使用で&lt;/a&gt;は、特定の要素のレンダリング順序はそれらの &lt;code&gt;z-index&lt;/code&gt; 値によって影響を受けます。これは、これらの要素に&lt;em&gt;スタックコンテキスト&lt;/em&gt;を形成させる特別なプロパティがあるためです。</target>
        </trans-unit>
        <trans-unit id="e6276aeba284a21db9fd559582f0b6c81fd84c15" translate="yes" xml:space="preserve">
          <source>In the previous part of this article, &lt;a href=&quot;adding_z-index&quot;&gt;Using z-index&lt;/a&gt;, the rendering order of certain elements is influenced by their &lt;code&gt;z-index&lt;/code&gt; value. This occurs because these elements have special properties which cause them to form a &lt;em&gt;stacking context&lt;/em&gt;.</source>
          <target state="translated">この記事の前の部分である「&lt;a href=&quot;adding_z-index&quot;&gt;z-indexの使用&lt;/a&gt;」では、特定の要素のレンダリング順序は、それらの &lt;code&gt;z-index&lt;/code&gt; 値の影響を受けます。これは、これらの要素に特別なプロパティがあり、&lt;em&gt;スタッキングコンテキスト&lt;/em&gt;を形成するために発生し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="298c1440011be7fcdc1903def8750068922231c6" translate="yes" xml:space="preserve">
          <source>In the rare cases where width is overconstrained (i.e., when all of &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;margin-left&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, the content area, and &lt;code&gt;margin-right&lt;/code&gt; are defined), &lt;code&gt;margin-left&lt;/code&gt; is ignored, and will have the same calculated value as if the &lt;code&gt;auto&lt;/code&gt; value was specified.</source>
          <target state="translated">幅が過剰に制限されているまれなケース（つまり、 &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;margin-left&lt;/code&gt; 、 &lt;code&gt;border&lt;/code&gt; 、 &lt;code&gt;padding&lt;/code&gt; 、コンテンツ領域、および &lt;code&gt;margin-right&lt;/code&gt; のすべてが定義されている場合）では、 &lt;code&gt;margin-left&lt;/code&gt; は無視され、と同じ計算値になります場合は &lt;code&gt;auto&lt;/code&gt; 値が指定されました。</target>
        </trans-unit>
        <trans-unit id="b10380a91b23a0766d57e3e9940d0195da5d1aea" translate="yes" xml:space="preserve">
          <source>In the same way as &lt;code&gt;flex-grow&lt;/code&gt;, you can give flex-items different &lt;code&gt;flex-shrink&lt;/code&gt; factors. This can help change the default behaviour if, for example, you want an item to shrink more or less rapidly than its siblings or not shrink at all.</source>
          <target state="translated">&lt;code&gt;flex-grow&lt;/code&gt; と同じように、flex-itemに異なる &lt;code&gt;flex-shrink&lt;/code&gt; 係数を与えることができます。これは、たとえば、アイテムが兄弟よりも速くまたは遅く収縮したい場合や、まったく収縮しない場合に、デフォルトの動作を変更するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="4ac930cc01816801e88080be55a76d1e969c343c" translate="yes" xml:space="preserve">
          <source>In the same way that changing the value of &lt;code&gt;flex-direction&lt;/code&gt; does not change the order in which items are navigated to, changing this value does not change paint order. It is a visual reversal of the items only.</source>
          <target state="translated">&lt;code&gt;flex-direction&lt;/code&gt; の値を変更してもアイテムへの移動順序が変更されないのと同じように、この値を変更してもペイントの順序は変更されません。それはアイテムのみの視覚的な反転です。</target>
        </trans-unit>
        <trans-unit id="dd53ff0375dfe3a848b4bcf6a3ae358fc389473b" translate="yes" xml:space="preserve">
          <source>In the second example, the second color stop for each color is at the same location as the first color stop for the adjacent color, creating a striped effect.</source>
          <target state="translated">第2の例では、各色の第2の色止めが、隣接する色の第1の色止めと同じ位置にあり、ストライプ状の効果が得られる。</target>
        </trans-unit>
        <trans-unit id="7fdaf157d4234540dcc73994953caa29f02576a8" translate="yes" xml:space="preserve">
          <source>In the second example, we specify the end row line we want the item to finish at and then set the start line as &lt;code&gt;span 3&lt;/code&gt;. This means the item will need to span upwards from the specified row line. The area will start at line 4 and span 3 lines to line 1.</source>
          <target state="translated">2番目の例では、アイテムを終了させる行の最終行を指定し、開始行を &lt;code&gt;span 3&lt;/code&gt; 設定します。これは、アイテムが指定された行ラインから上方に広がる必要があることを意味します。エリアは4行目から始まり、3行から1行目まで続きます。</target>
        </trans-unit>
        <trans-unit id="c71253f46044c0e7d14975f3f1f4249d43032f5d" translate="yes" xml:space="preserve">
          <source>In the simplest case, two images are faded between each other. To do that, only one of the images needs to have a percentage, the other one will be faded accordingly. For example, a value of 0% defined for the first image yields only the second image, while 100% yields only the first. A 25% value renders the first image at 25% and the second at 75%. The 75% value is the inverse, showing the first image at 75% and the second at 25%.</source>
          <target state="translated">最も単純なケースでは、2つの画像が互いにフェードされます。そのためには、画像のうちの1枚だけにパーセンテージを設定する必要があり、もう1枚はそれに応じてフェードされます。例えば、1枚目の画像に0%の値を指定した場合、2枚目の画像のみがフェードされ、100%の値を指定した場合は1枚目の画像のみがフェードされます。25%の値を指定すると、1枚目の画像は25%で、2枚目の画像は75%で表示されます。75%の値はその逆で、1枚目の画像は75%、2枚目の画像は25%で表示されます。</target>
        </trans-unit>
        <trans-unit id="c185bec0bf06a3aa13cbe977bdb11794fc682789" translate="yes" xml:space="preserve">
          <source>In the text with a vertical &lt;code&gt;&lt;a href=&quot;writing-mode&quot;&gt;writing-mode&lt;/a&gt;&lt;/code&gt; set, we can then use values of &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt; to make the underline appear on the left or right of the text as required.</source>
          <target state="translated">縦 &lt;code&gt;&lt;a href=&quot;writing-mode&quot;&gt;writing-mode&lt;/a&gt;&lt;/code&gt; 設定されたテキストでは、 &lt;code&gt;left&lt;/code&gt; または &lt;code&gt;right&lt;/code&gt; 値を使用して、必要に応じてテキストの左または右に下線を表示できます。</target>
        </trans-unit>
        <trans-unit id="429c132b5a240a1fe584534ef94a564c2b27a8a4" translate="yes" xml:space="preserve">
          <source>In the two-value syntax, the first value represents the horizontal repetition behavior and the second value represents the vertical behavior. Here is an explanation of how each option works for either direction:</source>
          <target state="translated">2値構文では、最初の値は水平方向の繰り返し動作を表し、2番目の値は垂直方向の動作を表します。ここでは、各オプションがどちらの方向にもどのように動作するかを説明します。</target>
        </trans-unit>
        <trans-unit id="c4d7d69e98f9f5fac059683b6f987bee4a6bfcaa" translate="yes" xml:space="preserve">
          <source>In the visual formatting model, each element in the document tree generates zero or more boxes according to the box model. The layout of these boxes is governed by:</source>
          <target state="translated">視覚的書式設定モデルでは、文書ツリーの各要素は、モデルに応じてゼロ以上のボックスを生成します。これらのボックスのレイアウトは、次のようにして制御されます。</target>
        </trans-unit>
        <trans-unit id="b1c1e39988743448f81127c10aa85b64c828f85c" translate="yes" xml:space="preserve">
          <source>In the working draft of the Level 2 Grid specification there is a feature called &lt;em&gt;subgrid&lt;/em&gt;, which would let us create nested grids that use the track definition of the parent grid.</source>
          <target state="translated">レベル2グリッド仕様のワーキングドラフトには、&lt;em&gt;サブグリッド&lt;/em&gt;と呼ばれる機能があります。これにより、親グリッドのトラック定義を使用するネストされたグリッドを作成できます。</target>
        </trans-unit>
        <trans-unit id="1dbf959c3b8c657ace3d915449997fdc997852eb" translate="yes" xml:space="preserve">
          <source>In these guides, I have already touched on an important feature of grid layout: the support for different writing modes that is built into the specification. For this guide, we will look at this feature of grid and other modern layout methods, learning a little about writing modes and logical vs. physical properties as we do so.</source>
          <target state="translated">これらのガイドでは、グリッドレイアウトの重要な機能である、仕様に組み込まれた異なる書き込みモードのサポートについて触れてきました。このガイドでは、グリッドやその他の最新のレイアウト方法のこの機能を見ていき、書き込みモードや論理的なプロパティと物理的なプロパティについて少しずつ学んでいきます。</target>
        </trans-unit>
        <trans-unit id="7d5e24e0ccb459d232b453d7662e12bfd14a990d" translate="yes" xml:space="preserve">
          <source>In this article we have had a very quick look through the Grid Layout Specification. Have a play with the code examples, and then move onto &lt;a href=&quot;relationship_of_grid_layout&quot;&gt;the next part of this guide where we will really start to dig into the detail of CSS Grid Layout&lt;/a&gt;.</source>
          <target state="translated">この記事では、グリッドレイアウト仕様を非常に簡単に説明しました。コード例&lt;a href=&quot;relationship_of_grid_layout&quot;&gt;を試してから、このガイドの次の部分に進んで、CSSグリッドレイアウトの詳細を掘り下げ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ee2d1755aa3e53a8c361a46090ad5787f2b79d53" translate="yes" xml:space="preserve">
          <source>In this article we will take a look at how Flexbox fits in with all the other CSS modules. We&amp;rsquo;ll find out which specifications you also need to take notice of if you want to learn flexbox, and find out why flexbox is different to some other modules.</source>
          <target state="translated">この記事では、Flexboxが他のすべてのCSSモジュールとどのように適合するかを見ていきます。フレックスボックスを学びたい場合に注意する必要のある仕様と、フレックスボックスが他のいくつかのモジュールと異なる理由を見つけます。</target>
        </trans-unit>
        <trans-unit id="6899ed51218a9709118c3c45e173766c1f0ba34f" translate="yes" xml:space="preserve">
          <source>In this article, we consider questions that might arise related to compatibility across browsers and versions of browsers when adding support for scroll-snap to your web site or app.</source>
          <target state="translated">この記事では、Web サイトやアプリにスクロールスナップのサポートを追加する際に、ブラウザやブラウザのバージョン間の互換性に関連して発生する可能性のある疑問について考察します。</target>
        </trans-unit>
        <trans-unit id="806b82362c952195fc17b42b9a51cb9fa51e8eb0" translate="yes" xml:space="preserve">
          <source>In this beginner's learning article we go through all the basic fundamentals of text/font styling in detail, including setting font weight, family and style, font shorthand, text alignment and other effects, and line and letter spacing.</source>
          <target state="translated">この初心者向けの学習記事では、フォントの太さ、ファミリ、スタイル、フォントの速記法、テキストの整列やその他の効果、行や文字の間隔の設定など、テキスト/フォントのスタイリングの基本的な基礎を詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="de98041c867702f8e697ecf112eb1cd3d2b3fc58" translate="yes" xml:space="preserve">
          <source>In this case the &lt;code&gt;flex-basis&lt;/code&gt; value is &lt;code&gt;auto&lt;/code&gt; and the items don&amp;rsquo;t have a width set, and so are auto-sized. This means that flexbox is looking at the &lt;code&gt;max-content&lt;/code&gt; size of the items. After laying the items out we have some positive free space in the flex container, shown in this image as the hatched area:</source>
          <target state="translated">この場合、 &lt;code&gt;flex-basis&lt;/code&gt; 値は &lt;code&gt;auto&lt;/code&gt; で、アイテムには幅が設定されていないため、自動サイズ設定されます。これは、フレックスボックスがアイテムの &lt;code&gt;max-content&lt;/code&gt; サイズを見ていることを意味します。アイテムを配置した後、次の画像のハッチング領域に示すように、フレックスコンテナーに正の空きスペースがあります。</target>
        </trans-unit>
        <trans-unit id="937c1981d1460efff25568b34d9c00ba02b795c5" translate="yes" xml:space="preserve">
          <source>In this case the gradient lines are 300px, 230px, and 300px long.</source>
          <target state="translated">この場合、グラデーションラインは300px、230px、長さ300pxです。</target>
        </trans-unit>
        <trans-unit id="736ae764cd69dc03945633b96e49c9764f9f0747" translate="yes" xml:space="preserve">
          <source>In this case the nested grid has no relationship to the parent. As you can see in the example it has not inherited the &lt;a href=&quot;../grid-gap&quot;&gt;&lt;code&gt;grid-gap&lt;/code&gt;&lt;/a&gt; of the parent and the lines in the nested grid do not align to the lines in the parent grid.</source>
          <target state="translated">この場合、ネストされたグリッドは親との関係がありません。例からわかるように、親の&lt;a href=&quot;../grid-gap&quot;&gt; &lt;code&gt;grid-gap&lt;/code&gt; &lt;/a&gt;は継承されておらず、ネストされたグリッドの線は親グリッドの線に整列していません。</target>
        </trans-unit>
        <trans-unit id="ee3abeeefcb696e519075ddfb065ea8f0e21fa6a" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;@stylistic(alternates)&lt;/code&gt; will show all the alternate characters for either font). Applying this to just the word 'My' alters the way the 'M' renders, and applying &lt;code&gt;@styleset(alt-a)&lt;/code&gt; only changes the lower case 'a'.</source>
          <target state="translated">この場合、 &lt;code&gt;@stylistic(alternates)&lt;/code&gt; は、いずれかのフォントのすべての代替文字を表示します）。これを「My」という単語だけに適用すると、「M」のレンダリング方法が変更され、 &lt;code&gt;@styleset(alt-a)&lt;/code&gt; を適用すると、小文字の「a」のみが変更されます。</target>
        </trans-unit>
        <trans-unit id="cfb3359b2f15de06b821981f5c5a1ef62c9ffe31" translate="yes" xml:space="preserve">
          <source>In this case, declarations inside &lt;code&gt;li&lt;/code&gt; and &lt;code&gt;.specific&lt;/code&gt; rules should apply. No declaration is marked as &lt;code&gt;!important&lt;/code&gt;, so the precedence order is author style sheets before user style sheets or user-agent stylesheet.</source>
          <target state="translated">この場合、 &lt;code&gt;li&lt;/code&gt; 内の宣言と &lt;code&gt;.specific&lt;/code&gt; ルールが適用されます。宣言が &lt;code&gt;!important&lt;/code&gt; としてマークされていないため、優先順位は、ユーザースタイルシートまたはユーザーエージェントスタイルシートの前の作成者スタイルシートです。</target>
        </trans-unit>
        <trans-unit id="7e37a1a816cc7f4288f6c617f4216a22cfc3b1d3" translate="yes" xml:space="preserve">
          <source>In this case, the results of &lt;code&gt;var(--test)&lt;/code&gt; are:</source>
          <target state="translated">この場合、 &lt;code&gt;var(--test)&lt;/code&gt; ）の結果は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c77516e387c9dadcedb44d5dbc60bce55d4029d7" translate="yes" xml:space="preserve">
          <source>In this case, the width is specified as auto in the CSS, so the 100px width specified in the SVG is selected, per rule 3. The height is set at 125px in the CSS, so that is selected per rule 1.</source>
          <target state="translated">この場合、CSSでは横幅がautoに指定されているので、ルール3の通り、SVGで指定されている横幅100pxが選択されています。高さはCSSで125pxと指定されているので、ルール1の通り選択されています。</target>
        </trans-unit>
        <trans-unit id="210f8c20d26cced7d1e7ea17e50916c648dedc9e" translate="yes" xml:space="preserve">
          <source>In this case, we use the width of the image specified in the CSS set at 150px, so rule 1 is applied. The intrinsic 3:4 aspect ratio then determines the height for the &lt;code&gt;auto&lt;/code&gt; case.</source>
          <target state="translated">この場合、150pxに設定されたCSSで指定された画像の幅を使用するため、ルール1が適用されます。次に、固有の3：4アスペクト比が &lt;code&gt;auto&lt;/code&gt; ケースの高さを決定します。</target>
        </trans-unit>
        <trans-unit id="f5310054937895cf86546219af6d059cabad1f60" translate="yes" xml:space="preserve">
          <source>In this case, we've overridden the height of the image in the CSS to be 150px, so rule 1 is applied. The intrinsic 3:4 aspect ratio then determines the width for the &lt;code&gt;auto&lt;/code&gt; case.</source>
          <target state="translated">この場合、CSSで画像の高さを150pxにオーバーライドしているため、ルール1が適用されます。次に、固有の3：4アスペクト比により、 &lt;code&gt;auto&lt;/code&gt; ケースのます。</target>
        </trans-unit>
        <trans-unit id="3a1b0e469704cb714f6a5623f9e9209eaa7a4c09" translate="yes" xml:space="preserve">
          <source>In this case, you could set certain styles in your global CSS file as !important, thus overriding inline styles set directly on elements.</source>
          <target state="translated">この場合、グローバルCSSファイル内の特定のスタイルを「重要」に設定することで、要素に直接設定されたインラインスタイルを上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="8d781426217c2387e7f6e906360a0d586be31724" translate="yes" xml:space="preserve">
          <source>In this case, you could set certain styles in your global CSS file as important, thus overriding inline styles set directly on elements.</source>
          <target state="translated">この場合、グローバル CSS ファイル内の特定のスタイルを重要なものとして設定することで、要素に直接設定されているインラインスタイルを上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="0af7ccdfcb6559b3bf98f5ad87a4e49c0cd3c15c" translate="yes" xml:space="preserve">
          <source>In this demo we define a very simple trivial custom element:</source>
          <target state="translated">このデモでは、非常にシンプルなカスタム要素を定義しています。</target>
        </trans-unit>
        <trans-unit id="8a3d01d8151705cf72b677d3ceee2a78647157f7" translate="yes" xml:space="preserve">
          <source>In this demo we have two block-level boxes, one inside the other. The outer box has a large &lt;a href=&quot;height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt; set on it so the page will scroll vertically. The inner box has a small &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; (and &lt;code&gt;height&lt;/code&gt;) set on it so it sits comforably inside the viewport, but its content is given a large &lt;code&gt;height&lt;/code&gt; so it will also scroll vertically.</source>
          <target state="translated">このデモでは、2つのブロックレベルボックスがあり、一方が他方の中にあります。外箱には大きな&lt;a href=&quot;height&quot;&gt; &lt;code&gt;height&lt;/code&gt; &lt;/a&gt;設定されているため、ページは垂直方向にスクロールします。内側のボックスには、&lt;a href=&quot;width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;（および &lt;code&gt;height&lt;/code&gt; ）が小さいため、ビューポート内に快適に収まりますが、内容物の &lt;code&gt;height&lt;/code&gt; が大きいため、垂直方向にもスクロールします。</target>
        </trans-unit>
        <trans-unit id="b001dd303f44b6a647853244269c047165b7b5c6" translate="yes" xml:space="preserve">
          <source>In this demo we have two block-level boxes, one inside the other. The outer box has a large &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; set on it so the page will scroll horizontally. The inner box has a small width (and &lt;a href=&quot;height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt;) set on it so it sits comforably inside the viewport, but its content is given a large width so it will also scroll horizontally.</source>
          <target state="translated">このデモでは、2つのブロックレベルボックスがあり、一方が他方の中にあります。外箱には&lt;a href=&quot;width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;設定されているため、ページは水平方向にスクロールします。内側のボックスには、ビューポート内に快適に収まるように幅（および&lt;a href=&quot;height&quot;&gt; &lt;code&gt;height&lt;/code&gt; &lt;/a&gt;）が小さく設定されていますが、内容には幅が広いため、水平方向にもスクロールします。</target>
        </trans-unit>
        <trans-unit id="45397822e66207fd90cf6afff12f8c4039bd46eb" translate="yes" xml:space="preserve">
          <source>In this demo we use a simple template with three slots:</source>
          <target state="translated">このデモでは、3つのスロットを持つシンプルなテンプレートを使用しています。</target>
        </trans-unit>
        <trans-unit id="7a6291bed1a9ab32a58598bb9ff834d1f5b897b9" translate="yes" xml:space="preserve">
          <source>In this document we define the model and introduce some of the related terms and concepts, linking to more specific pages on MDN for further details.</source>
          <target state="translated">このドキュメントでは、モデルを定義し、関連する用語や概念をいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="fe1fd37daa0b6455d12ca6ad918e18c56ad8dfb5" translate="yes" xml:space="preserve">
          <source>In this example I am using the &lt;a href=&quot;grid-gap&quot;&gt;&lt;code&gt;grid-gap&lt;/code&gt;&lt;/a&gt; property in addition to &lt;a href=&quot;gap&quot;&gt;&lt;code&gt;gap&lt;/code&gt;&lt;/a&gt;. The gap properties were originally prefixed with &lt;code&gt;grid-&lt;/code&gt; in the Grid Layout specification and some browsers only support these prefixed versions.</source>
          <target state="translated">この例では、私が使用している&lt;a href=&quot;grid-gap&quot;&gt; &lt;code&gt;grid-gap&lt;/code&gt; &lt;/a&gt;に加えて、プロパティ&lt;a href=&quot;gap&quot;&gt; &lt;code&gt;gap&lt;/code&gt; &lt;/a&gt;。ギャッププロパティには、最初は &lt;code&gt;grid-&lt;/code&gt; グリッドレイアウト仕様 grid-がましたが、一部のブラウザーはこれらのプレフィックス付きバージョンのみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ab33cc8f883f39b02630231ec713a1fb9f6b8af1" translate="yes" xml:space="preserve">
          <source>In this example I have a &lt;code&gt;div&lt;/code&gt;, and then two paragraphs. I&amp;rsquo;ve added a background colour to the paragraphs, and then floated the &lt;code&gt;div&lt;/code&gt; left. The &lt;code&gt;div&lt;/code&gt; is now out of flow.</source>
          <target state="translated">この例では、 &lt;code&gt;div&lt;/code&gt; と2つの段落があります。段落に背景色を追加し、 &lt;code&gt;div&lt;/code&gt; を左にフロートしました。 &lt;code&gt;div&lt;/code&gt; が流れの外になりました。</target>
        </trans-unit>
        <trans-unit id="c388f1b57cc0300303f4815e29dcd514c60b82a0" translate="yes" xml:space="preserve">
          <source>In this example I have added an extra div with a class of &lt;code&gt;overlay&lt;/code&gt;. We have named areas created using the &lt;code&gt;grid-area&lt;/code&gt; property, then a layout created in &lt;code&gt;grid-template-areas&lt;/code&gt;. The area names are:</source>
          <target state="translated">この例では、 &lt;code&gt;overlay&lt;/code&gt; クラスを持つdivを追加しました。 &lt;code&gt;grid-area&lt;/code&gt; プロパティを使用して作成されたエリアに名前を付け、次に &lt;code&gt;grid-template-areas&lt;/code&gt; で作成されたレイアウトに名前を付けました。エリア名は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="00d7a6e6cb9021c32a21d567ca50da277e34d653" translate="yes" xml:space="preserve">
          <source>In this example I have created a series of inflexible boxes, with both &lt;code&gt;flex-grow&lt;/code&gt; and &lt;code&gt;flex-shrink&lt;/code&gt; set to &lt;code&gt;0&lt;/code&gt;. Here we can see how the first item &amp;mdash; which has an explicit width of 150 pixels set as the main size &amp;mdash; takes a &lt;code&gt;flex-basis&lt;/code&gt; of &lt;code&gt;150px&lt;/code&gt;, whereas the other two items have no width and so are sized according to their content width.</source>
          <target state="translated">この例では、 &lt;code&gt;flex-grow&lt;/code&gt; と &lt;code&gt;flex-shrink&lt;/code&gt; の両方を &lt;code&gt;0&lt;/code&gt; に設定して、一連の柔軟性のないボックスを作成しました。ここでは、最初のアイテム（メインサイズとして150ピクセルの明示的な幅が設定されて &lt;code&gt;flex-basis&lt;/code&gt; が &lt;code&gt;150px&lt;/code&gt; のフレックス基準をどのように取るかを確認できます。一方、他の2つのアイテムには幅がないため、コンテンツの幅に応じてサイズが調整されます。</target>
        </trans-unit>
        <trans-unit id="412fe06e90ef07f3a8c45d67a7f9f474e02dd569" translate="yes" xml:space="preserve">
          <source>In this example I have used grid to lay out a set of boxes that contain links. I have used the line-based placement properties to position box 1 on the second row of the grid. Visually it now appears as the fourth item in the list. However, if I tab from link to link the tab order still begins with box 1, as it comes first in the source.</source>
          <target state="translated">この例では、グリッドを使用して、リンクを含むボックスのセットをレイアウトしています。ラインベースの配置プロパティを使用して、ボックス 1 をグリッドの 2 行目に配置しました。これで、視覚的にはリストの 4 番目の項目として表示されるようになりました。しかし、リンクからリンクにタブを移動すると、タブの順序はボックス 1 から始まり、ソースではボックス 1 が最初になります。</target>
        </trans-unit>
        <trans-unit id="1902a41f08bb720c50d57bb90ac200a6e48005de" translate="yes" xml:space="preserve">
          <source>In this example every positioned element creates its own stacking context, because of their positioning and z-index values. The hierarchy of stacking contexts is organized as follows:</source>
          <target state="translated">この例では、すべての配置された要素は、その配置と z-index の値により、独自のスタッキング・コンテキストを作成します。スタッキングコンテキストの階層は以下のように構成されています。</target>
        </trans-unit>
        <trans-unit id="ac6b6cac80147f85cb84a6e58baf6c9d7e8b6af4" translate="yes" xml:space="preserve">
          <source>In this example the &lt;code&gt;h2&lt;/code&gt; elements inside the sidebar might be different colors. For example, if one of them were the child of a div matched by the rule ...</source>
          <target state="translated">この例では、サイドバー内の &lt;code&gt;h2&lt;/code&gt; 要素の色が異なる場合があります。たとえば、それらの1つがルールに一致するdivの子であった場合...</target>
        </trans-unit>
        <trans-unit id="318e75b04c53a617abe943386be32df8d8400862" translate="yes" xml:space="preserve">
          <source>In this example the &lt;code&gt;montserrat-regular.woff2&lt;/code&gt; font file will neither be preloaded nor downloaded if the user prefers reduced data, in this case the &quot;&lt;a href=&quot;https://css-tricks.com/snippets/css/system-font-stack/&quot;&gt;system font stack&lt;/a&gt;&quot; will serve as the fallback font:</source>
          <target state="translated">この例では、ユーザーがデータの削減を &lt;code&gt;montserrat-regular.woff2&lt;/code&gt; 場合、montserrat-regular.woff2フォントファイルはプリロードもダウンロードもされません。この場合、「&lt;a href=&quot;https://css-tricks.com/snippets/css/system-font-stack/&quot;&gt;システムフォントスタック&lt;/a&gt;」が代替フォントとして機能します。</target>
        </trans-unit>
        <trans-unit id="063e13fd7e98a47847078727baf87949e460b45a" translate="yes" xml:space="preserve">
          <source>In this example the outer &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; has a 2-pixel red border and a width of 300px. However it also has &lt;code&gt;display: contents&lt;/code&gt; specified therefore this &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will not be rendered, the border and width will no longer apply, and the child element will be displayed as if the parent had never existed.</source>
          <target state="translated">この例では、外側の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;に2ピクセルの赤い境界線と300pxの幅があります。ただし、 &lt;code&gt;display: contents&lt;/code&gt; もあります。コンテンツが指定されているため、この &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; はレンダリングされず、境界線と幅は適用されなくなり、子要素は親が存在しなかったかのように表示されます。</target>
        </trans-unit>
        <trans-unit id="f2339f722a93ad17b557f00f1cc9071be7fdc80b" translate="yes" xml:space="preserve">
          <source>In this example the parent box has been given &lt;code&gt;display: flow-root&lt;/code&gt; and so establishes a new BFC and contains the floated item.</source>
          <target state="translated">この例では、親ボックスに &lt;code&gt;display: flow-root&lt;/code&gt; が指定されているため、新しいBFCが確立され、フロートされたアイテムが含まれます。</target>
        </trans-unit>
        <trans-unit id="29b67c1002c50aacac315139c57d95668d10d0e8" translate="yes" xml:space="preserve">
          <source>In this example the style for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; element specifies that the animation should take 3 seconds to execute from start to finish, using the &lt;a href=&quot;../animation-duration&quot;&gt;&lt;code&gt;animation-duration&lt;/code&gt;&lt;/a&gt; property, and that the name of the &lt;a href=&quot;../@keyframes&quot;&gt;&lt;code&gt;@keyframes&lt;/code&gt;&lt;/a&gt; at-rule defining the keyframes for the animation sequence is named &amp;ldquo;slidein&amp;rdquo;.</source>
          <target state="translated">この例では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のスタイルは、&lt;a href=&quot;../animation-duration&quot;&gt; &lt;code&gt;animation-duration&lt;/code&gt; &lt;/a&gt;プロパティを使用して、アニメーションの開始から終了まで3秒かかること、および&lt;a href=&quot;../@keyframes&quot;&gt; &lt;code&gt;@keyframes&lt;/code&gt; &lt;/a&gt; at-ruleの名前がアニメーションのキーフレームを定義することを指定していますシーケンスの名前は「スライドイン」です。</target>
        </trans-unit>
        <trans-unit id="2aff50b17c523aaea156692482aec3cbbec6ecca" translate="yes" xml:space="preserve">
          <source>In this example two of the items span two tracks, and the masonry items work around them.</source>
          <target state="translated">この例では、アイテムのうち2つが2つのトラックにまたがっており、石積みのアイテムはその周りで作業しています。</target>
        </trans-unit>
        <trans-unit id="53dd3f7786387eb3a60090e064e9ea13616b56e2" translate="yes" xml:space="preserve">
          <source>In this example using Grid Layout, there is extra space in the grid container after laying out the fixed width tracks on the inline (main) axis. This space is distributed using &lt;a href=&quot;justify-content&quot;&gt;&lt;code&gt;justify-content&lt;/code&gt;&lt;/a&gt;. On the block (cross) axis the alignment of the items inside their grid areas is controlled with &lt;a href=&quot;align-items&quot;&gt;&lt;code&gt;align-items&lt;/code&gt;&lt;/a&gt;. The first item overrides the &lt;code&gt;align-items&lt;/code&gt; value set on the group by setting &lt;a href=&quot;align-self&quot;&gt;&lt;code&gt;align-self&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;center&lt;/code&gt;.</source>
          <target state="translated">グリッドレイアウトを使用したこの例では、インライン（メイン）軸に固定幅のトラックをレイアウトした後、グリッドコンテナーに余分なスペースがあります。このスペースは、&lt;a href=&quot;justify-content&quot;&gt; &lt;code&gt;justify-content&lt;/code&gt; &lt;/a&gt;を使用して配布されます。ブロック（クロス）軸では、グリッド領域内のアイテムの配置は&lt;a href=&quot;align-items&quot;&gt; &lt;code&gt;align-items&lt;/code&gt; で&lt;/a&gt;制御されます。最初の項目は、&lt;a href=&quot;align-self&quot;&gt; &lt;code&gt;align-self&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;center&lt;/code&gt; に設定することにより、グループに設定された &lt;code&gt;align-items&lt;/code&gt; 値をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="1c9c9ab9029359316172493ce4648e51684251bc" translate="yes" xml:space="preserve">
          <source>In this example using grid layout, there is extra space in the grid container after laying out the fixed width tracks on the inline (main) axis. This space is distributed using &lt;code&gt;justify-content&lt;/code&gt;. On the block (cross) axis the alignment of the items inside their grid areas is controlled with &lt;code&gt;align-items&lt;/code&gt;. The first item overrides the &lt;code&gt;align-items&lt;/code&gt; value set on the group by setting &lt;code&gt;align-self&lt;/code&gt; to &lt;code&gt;center&lt;/code&gt;.</source>
          <target state="translated">グリッドレイアウトを使用したこの例では、インライン（メイン）軸に固定幅のトラックをレイアウトした後、グリッドコンテナーに余分なスペースがあります。このスペースは、 &lt;code&gt;justify-content&lt;/code&gt; を使用して配布されます。ブロック（クロス）軸では、グリッド領域内のアイテムの配置は &lt;code&gt;align-items&lt;/code&gt; で制御されます。最初の項目は、 &lt;code&gt;align-self&lt;/code&gt; を &lt;code&gt;center&lt;/code&gt; に設定することにより、グループに設定された &lt;code&gt;align-items&lt;/code&gt; 値をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="64d35d2904e678ec413e8c5afd8048fe6e1a4492" translate="yes" xml:space="preserve">
          <source>In this example we create a simple HTML containing a single &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; element, including an ampersand, that we want to style with a different font. To make it obvious, we will use a sans-serif font, &lt;em&gt;Helvetica&lt;/em&gt;, for the text, and a serif font, &lt;em&gt;Times New Roman&lt;/em&gt;, for the ampersand.</source>
          <target state="translated">この例では、アンパサンドを含む単一の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を含む単純なHTMLを作成し、別のフォントでスタイルを設定します。わかりやすくするために、テキストにはサンセリフフォントの&lt;em&gt;Helvetica&lt;/em&gt;を使用し、アンパサンドにはセリフフォントの&lt;em&gt;Times&lt;/em&gt; NewRomanを使用します。</target>
        </trans-unit>
        <trans-unit id="9b7a0b896518da2b8d13212aaa6b5b20bc626929" translate="yes" xml:space="preserve">
          <source>In this example we have a 3D cube created using transforms. The parent container of the cube faces has &lt;code&gt;transform-style: preserve-3d&lt;/code&gt; set on it by default, so it is transformed in the 3D space and you can see it as intended.</source>
          <target state="translated">この例では、変換を使用して作成された3Dキューブがあります。立方体の面の親コンテナには、デフォルトで &lt;code&gt;transform-style: preserve-3d&lt;/code&gt; 設定されているため、3D空間で変換され、意図したとおりに表示されます。</target>
        </trans-unit>
        <trans-unit id="eb0ef9572f60f8fad26e4a8d393795da021a1024" translate="yes" xml:space="preserve">
          <source>In this example we have a simple SVG embedded using an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">この例では、 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 要素を使用して埋め込まれた簡単なSVGがあります。</target>
        </trans-unit>
        <trans-unit id="d1ecfba8dac936602cce226f0a525c452bce4e46" translate="yes" xml:space="preserve">
          <source>In this example we have a simple custom element &amp;mdash; &lt;code&gt;&amp;lt;context-span&amp;gt;&lt;/code&gt; &amp;mdash; that you can wrap around text:</source>
          <target state="translated">この例では、テキストを折り返すことができる単純なカスタム要素（ &lt;code&gt;&amp;lt;context-span&amp;gt;&lt;/code&gt; )があります。</target>
        </trans-unit>
        <trans-unit id="5086bf2e8fee505199cf31f90e429e298ad0b765" translate="yes" xml:space="preserve">
          <source>In this example we have a simple responsive example that makes use of &lt;code&gt;&lt;a href=&quot;min&quot;&gt;min()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;max&quot;&gt;max()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;clamp()&lt;/code&gt; for some of the sizes.</source>
          <target state="translated">この例では、いくつかのサイズに &lt;code&gt;&lt;a href=&quot;min&quot;&gt;min()&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;max&quot;&gt;max()&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;clamp()&lt;/code&gt; を使用する単純なレスポンシブな例があります。</target>
        </trans-unit>
        <trans-unit id="4c5007a2742dcb67cbad9056a0ead6e86c6bbd6d" translate="yes" xml:space="preserve">
          <source>In this example we have an SVG:</source>
          <target state="translated">この例ではSVGがあります。</target>
        </trans-unit>
        <trans-unit id="dab70300010aee53a1d4aeb5a285bbc1ed68e55d" translate="yes" xml:space="preserve">
          <source>In this example we have chosen to use a thin scrollbar, with a green track and purple thumb.</source>
          <target state="translated">この例では、緑のトラックと紫の親指が付いた薄いスクロールバーを使用しています。</target>
        </trans-unit>
        <trans-unit id="e321dd6fc76fdd3d916a04863838184fca34ad00" translate="yes" xml:space="preserve">
          <source>In this example we have two block-level container elements, each one with three inline children. Below that, we have a select menu that allows you to apply different &lt;code&gt;display&lt;/code&gt; values to the containers, allowing you to compare and contrast how the different values affect the element's layout, and that of their children.</source>
          <target state="translated">この例では、2つのブロックレベルのコンテナ要素があり、それぞれに3つのインライン子があります。その下には、コンテナにさまざまな &lt;code&gt;display&lt;/code&gt; 値を適用できる選択メニューがあり、さまざまな値が要素のレイアウトとその子のレイアウトにどのように影響するかを比較対照できます。</target>
        </trans-unit>
        <trans-unit id="96086764a687183c55b4b4875c7b333111f32351" translate="yes" xml:space="preserve">
          <source>In this example we provide a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and a text input. Entering a valid color into the input causes the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; to adopt that color, allowing you to test our color values.</source>
          <target state="translated">この例では、 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; とテキスト入力を提供します。入力に有効な色を入力すると、 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; がその色を採用し、色の値をテストできるようになります。</target>
        </trans-unit>
        <trans-unit id="379403c97cc8e424f9336400862399d161f54dd3" translate="yes" xml:space="preserve">
          <source>In this example we set both the paragraphs to have a thick underline. In the horizontal text we use &lt;code&gt;text-underline-position: under;&lt;/code&gt; to put the underline below all the descenders.</source>
          <target state="translated">この例では、両方の段落に太い下線を付けるように設定しています。水平方向のテキストでは、 &lt;code&gt;text-underline-position: under;&lt;/code&gt; を使用します。すべてのディセンダーの下に下線を付けます。</target>
        </trans-unit>
        <trans-unit id="c5e6cea9552a55843d2bcb32da6155d171d79902" translate="yes" xml:space="preserve">
          <source>In this example we will create a simple to-do list using pseudo-elements. This method can often be used to add small touches to the UI and improve user experience.</source>
          <target state="translated">この例では、疑似要素を使用してシンプルな To-do リストを作成します。この方法は、UIに小さなタッチを追加し、ユーザーエクスペリエンスを向上させるためによく使用されます。</target>
        </trans-unit>
        <trans-unit id="31880c4d320c154db5778ca098a663d1482b665d" translate="yes" xml:space="preserve">
          <source>In this example we will use the &lt;code&gt;::first-letter&lt;/code&gt; pseudo-element to create a simple drop cap effect on the first letter of the paragraph coming right after the &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;::first-letter&lt;/code&gt; 疑似要素を使用して、 &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; の直後にある段落の最初の文字に単純なドロップキャップ効果を作成します。</target>
        </trans-unit>
        <trans-unit id="4966570cdbc010afeaabd62a3edf8831b78125f0" translate="yes" xml:space="preserve">
          <source>In this example, I have a containing div with a class of wrapper and, inside are five child elements.</source>
          <target state="translated">この例では、ラッパーのクラスを含む div があり、その中に 5 つの子要素があります。</target>
        </trans-unit>
        <trans-unit id="332d826deccc38ea19f8d394c578d1b426fdfca4" translate="yes" xml:space="preserve">
          <source>In this example, I have a containing div with a class of wrapper, inside are five child elements.</source>
          <target state="translated">この例では、ラッパーのクラスを含む div があり、その中に 5 つの子要素があります。</target>
        </trans-unit>
        <trans-unit id="b9b8a6f28068fd8cc89e6b9f40b74d6698c5e66a" translate="yes" xml:space="preserve">
          <source>In this example, a 2px black border is added around the progress bar.</source>
          <target state="translated">この例では、プログレスバーの周りに2pxの黒枠が追加されています。</target>
        </trans-unit>
        <trans-unit id="f6d5a1d99a9ff05027bff2fcc91f4ce68340e5d6" translate="yes" xml:space="preserve">
          <source>In this example, a box is shown which uses a &lt;a href=&quot;background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt; and a translucent &lt;a href=&quot;linear-gradient()&quot;&gt;&lt;code&gt;linear-gradient()&lt;/code&gt;&lt;/a&gt; function atop a black background color to have a dark blue gradient behind medium red text. For whatever reason, this is the desired appearance in any rendering environment, including on paper, so we also use &lt;code&gt;color-adjust: exact&lt;/code&gt; to tell the browser not to make color or style adjustments to the box when rendering it.</source>
          <target state="translated">この例では、黒い背景色の上に&lt;a href=&quot;background-image&quot;&gt; &lt;code&gt;background-image&lt;/code&gt; &lt;/a&gt;と半透明の&lt;a href=&quot;linear-gradient()&quot;&gt; &lt;code&gt;linear-gradient()&lt;/code&gt; &lt;/a&gt;関数を使用して、中程度の赤いテキストの後ろに濃い青のグラデーションを付けるボックスが表示されています。何らかの理由で、これは紙の上を含むすべてのレンダリング環境で必要な外観であるため、 &lt;code&gt;color-adjust: exact&lt;/code&gt; 使用して、レンダリング時にボックスの色やスタイルを調整しないようにブラウザに指示します。</target>
        </trans-unit>
        <trans-unit id="9a3800ffbd92cd431dd0dcff37309e09a2714a31" translate="yes" xml:space="preserve">
          <source>In this example, a video has a box shadow when it is displayed in the floating window.</source>
          <target state="translated">この例では、動画がフローティングウィンドウに表示されたときにボックスシャドウが表示されています。</target>
        </trans-unit>
        <trans-unit id="3b0397d42b42957ec7a2420f0d3d40eef5111f16" translate="yes" xml:space="preserve">
          <source>In this example, at the &lt;code&gt;50%&lt;/code&gt; keyframe, the value used is &lt;code&gt;top: 10px&lt;/code&gt; and all other values at this keyframe are ignored.</source>
          <target state="translated">この例では、 &lt;code&gt;50%&lt;/code&gt; キーフレームで使用される値は &lt;code&gt;top: 10px&lt;/code&gt; あり、このキーフレームの他のすべての値は無視されます。</target>
        </trans-unit>
        <trans-unit id="503f4e85e964ea5c2b260c3ed46f3e08a66cfe7b" translate="yes" xml:space="preserve">
          <source>In this example, at the &lt;code&gt;50%&lt;/code&gt; keyframe, the values used are &lt;code&gt;top: 10px&lt;/code&gt; and &lt;code&gt;left: 20px&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;50%&lt;/code&gt; のキーフレームで、使用される値は &lt;code&gt;top: 10px&lt;/code&gt; 、 &lt;code&gt;left: 20px&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0ac654a9756e0a155ec887105861fff09614bc62" translate="yes" xml:space="preserve">
          <source>In this example, each list item is matched with a different value of &lt;code&gt;background-repeat&lt;/code&gt;.</source>
          <target state="translated">この例では、各リストアイテムは &lt;code&gt;background-repeat&lt;/code&gt; の異なる値と照合されます。</target>
        </trans-unit>
        <trans-unit id="6433b992d7d1108103c00e92970700484eef1f77" translate="yes" xml:space="preserve">
          <source>In this example, eventual supporting browsers should highlight any flagged grammatical errors with the styles shown.</source>
          <target state="translated">この例では、最終的にサポートされるブラウザでは、フラグの立った文法エラーがあれば、表示されているスタイルで強調表示する必要があります。</target>
        </trans-unit>
        <trans-unit id="0dc5fef9e7ed1373b4681520b62a589f2835ea89" translate="yes" xml:space="preserve">
          <source>In this example, eventual supporting browsers should highlight any flagged spelling errors with the styles shown.</source>
          <target state="translated">この例では、最終的にサポートしているブラウザでは、スペルミスのフラグが立っている場合は、表示されているスタイルで強調表示する必要があります。</target>
        </trans-unit>
        <trans-unit id="8170fac6b3f8eef0234230ec0d1e6df57b6c472c" translate="yes" xml:space="preserve">
          <source>In this example, every positioned element creates its own stacking context, because of their positioning and &lt;code&gt;z-index&lt;/code&gt; values. The hierarchy of stacking contexts is organized as follows:</source>
          <target state="translated">この例では、配置されたすべての要素は、配置と &lt;code&gt;z-index&lt;/code&gt; 値のために、独自のスタッキングコンテキストを作成します。スタッキングコンテキストの階層は、次のように構成されています。</target>
        </trans-unit>
        <trans-unit id="efd6aa8f70a0fbf4eb859ebc68fa8452a6df8fb3" translate="yes" xml:space="preserve">
          <source>In this example, the &quot;child&quot; will be either 150 pixels wide or the width of the &quot;parent,&quot; whichever is smaller.</source>
          <target state="translated">この例では、「子」の幅は150ピクセルか「親」の幅のどちらか小さい方になります。</target>
        </trans-unit>
        <trans-unit id="d02a88ffb4dc21f397cef8436db853f12a4977a8" translate="yes" xml:space="preserve">
          <source>In this example, the &quot;child&quot; will be either 150 pixels wide or the width of the &quot;parent,&quot; whichever is smaller:</source>
          <target state="translated">この例では、「子」の幅は150ピクセルか「親」の幅のどちらか小さい方になります。</target>
        </trans-unit>
        <trans-unit id="bd83de097f457aca4617d547609c0852083229a0" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;:focus-visible&lt;/code&gt; selector uses the UA's behavior to determine when to match. Compare what happens when you click on the different controls with a mouse, versus when you tab through them using a keyboard. Note the difference in behavior from elements styled with &lt;code&gt;:focus&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;:focus-visible&lt;/code&gt; セレクターはUAの動作を使用して、いつ照合するかを決定します。マウスを使用してさまざまなコントロールをクリックした場合と、キーボードを使用してタブを移動した場合を比較してください。 &lt;code&gt;:focus&lt;/code&gt; でスタイル設定された要素との動作の違いに注意してください。</target>
        </trans-unit>
        <trans-unit id="b44feeccda260a2ec4520fda513e2f8b9b1ccb11" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;:lang()&lt;/code&gt; pseudo-class is used to match the parents of quote elements (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q&quot;&gt;&lt;code&gt;&amp;lt;q&amp;gt;&lt;/code&gt;&lt;/a&gt;) using &lt;a href=&quot;child_selectors&quot;&gt;child combinators&lt;/a&gt;. Note that this doesn't illustrate the only way to do this, and that the best method to use depends on the type of document. Also note that &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Unicode&quot;&gt;Unicode&lt;/a&gt; values are used to specify some of the special quote characters.</source>
          <target state="translated">この例では、 &lt;code&gt;:lang()&lt;/code&gt; 疑似クラスを使用して、&lt;a href=&quot;child_selectors&quot;&gt;子コンビ&lt;/a&gt;ネーターを使用してquote要素（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q&quot;&gt; &lt;code&gt;&amp;lt;q&amp;gt;&lt;/code&gt; &lt;/a&gt;）の親を照合しています。これはこれを行う唯一の方法を示しているわけではなく、使用する最適な方法はドキュメントのタイプによって異なることに注意してください。また、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Unicode&quot;&gt;Unicode&lt;/a&gt;値は、いくつかの特殊な引用文字を指定するために使用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="67b84670575007b19965bbed12d24ced7044daf6" translate="yes" xml:space="preserve">
          <source>In this example, the backdrop style used when a video is shifted to full-screen mode is configured to be a grey-blue color rather than the black it defaults to in most browsers.</source>
          <target state="translated">この例では、動画をフルスクリーン モードに移行したときに使用される背景スタイルを、ほとんどのブラウザでデフォルトの黒ではなくグレーブルーに設定しています。</target>
        </trans-unit>
        <trans-unit id="b73f327fe88485b0f2b0ff724d20a02bf48762d8" translate="yes" xml:space="preserve">
          <source>In this example, the browser will display an image as generated content before the content of the element with the class of &lt;code&gt;help&lt;/code&gt;. The image displayed will be a WebP image, if WebP is supported. If not, the SVG example will be shown. If SVG is not supported, the GIF version will display.</source>
          <target state="translated">この例では、ブラウザは、 &lt;code&gt;help&lt;/code&gt; のクラスを持つ要素のコンテンツの前に、生成されたコンテンツとして画像を表示します。WebPがサポートされている場合、表示される画像はWebP画像になります。そうでない場合は、SVGの例が表示されます。SVGがサポートされていない場合は、GIFバージョンが表示されます。</target>
        </trans-unit>
        <trans-unit id="ca2197961de2034ce3a0acd9c847a7df7743ee0d" translate="yes" xml:space="preserve">
          <source>In this example, the color of a button is changed depending on whether or not the document is in full-screen mode. This is done without needing to specifically apply style changes using JavaScript.</source>
          <target state="translated">この例では、ドキュメントがフルスクリーンモードになっているかどうかでボタンの色が変わります。これは、JavaScript を使用してスタイルの変更を特別に適用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="e8341c52ecddd124038b8604cfb60f51198b3a52" translate="yes" xml:space="preserve">
          <source>In this example, the form will receive special coloring styles when either text input receives focus.</source>
          <target state="translated">この例では、どちらかのテキスト入力がフォーカスを受けたときに、フォームは特別なカラーリングスタイルを受け取ります。</target>
        </trans-unit>
        <trans-unit id="52daa9f0b6c22fa9e5bbfda478480ec5f25ee560" translate="yes" xml:space="preserve">
          <source>In this example, the heading is made to span across all the columns of the article.</source>
          <target state="translated">この例では、見出しが記事のすべての列にまたがるように作られています。</target>
        </trans-unit>
        <trans-unit id="0e87d69d07c9c894c3034361bd808a593fb08c03" translate="yes" xml:space="preserve">
          <source>In this example, the logo will be 300px wide unless the viewport narrows below 600px, at which point it will shrink as the viewport shrinks, always being 50% of the width of the viewport.</source>
          <target state="translated">この例では、ビューポートが600px以下に狭くならない限り、ロゴの幅は300pxになります。</target>
        </trans-unit>
        <trans-unit id="19067ce1f6eacc110bbdb0b34166b958fa154550" translate="yes" xml:space="preserve">
          <source>In this example, the logo will be at least 300px wide, but wider if the viewport grows above 600px, at which point it will grow as the viewport grows, always being 50% of the width of the viewport.</source>
          <target state="translated">この例では、ロゴの幅は最低でも300pxですが、ビューポートが600px以上になると広くなります。</target>
        </trans-unit>
        <trans-unit id="0426cb39d665012728355062616ab1b2be607897" translate="yes" xml:space="preserve">
          <source>In this example, the logo will be at least &lt;code&gt;100px&lt;/code&gt; wide on any viewport narrower than &lt;code&gt;400px&lt;/code&gt;, &lt;code&gt;300px&lt;/code&gt; on all viewports wider than &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;200px&lt;/code&gt;, and &lt;code&gt;40%&lt;/code&gt; of the width of the viewport on any viewport in between</source>
          <target state="translated">この例では、ロゴは、少なくともあろう &lt;code&gt;100px&lt;/code&gt; により任意のビューポート上の狭い幅の広い &lt;code&gt;400px&lt;/code&gt; 、 &lt;code&gt;300px&lt;/code&gt; よりも広いすべてのビューポート上の &lt;code&gt;1&lt;/code&gt; 、 &lt;code&gt;200px&lt;/code&gt; の、および &lt;code&gt;40%&lt;/code&gt; の間の任意のビューポート上のビューポートの幅の</target>
        </trans-unit>
        <trans-unit id="bb05e2a3b5e7b79857fbb8ccc5703c7095cabe0e" translate="yes" xml:space="preserve">
          <source>In this example, the paragraph is statically positioned, so its containing block is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section&quot;&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;&lt;/a&gt; because it's the nearest ancestor that is a block container.</source>
          <target state="translated">この例では、段落は静的に配置されているため、ブロックコンテナーである最も近い祖先であるため、その包含ブロックは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section&quot;&gt; &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="358e779fd1295cdbaaaa0e6445f5216451a0da40" translate="yes" xml:space="preserve">
          <source>In this example, the paragraph's &lt;code&gt;position&lt;/code&gt; is &lt;code&gt;absolute&lt;/code&gt;, so its containing block is &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;, which is the nearest ancestor with a &lt;a href=&quot;transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; property that isn't &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">この例では、段落の &lt;code&gt;position&lt;/code&gt; は &lt;code&gt;absolute&lt;/code&gt; 。したがって、その包含ブロックは &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; です。これは、 &lt;code&gt;none&lt;/code&gt; ではない&lt;a href=&quot;transform&quot;&gt; &lt;code&gt;transform&lt;/code&gt; &lt;/a&gt;プロパティを持つ最も近い祖先です。</target>
        </trans-unit>
        <trans-unit id="fda72dc80a09c48db182ec86df3ba5126b8b0dc2" translate="yes" xml:space="preserve">
          <source>In this example, the paragraph's &lt;code&gt;position&lt;/code&gt; is &lt;code&gt;fixed&lt;/code&gt;, so its containing block is the initial containing block (on screens, the viewport). Thus, the paragraph's dimensions change based on the size of the browser window.</source>
          <target state="translated">この例では、段落の &lt;code&gt;position&lt;/code&gt; は &lt;code&gt;fixed&lt;/code&gt; なので、その包含ブロックは最初の包含ブロックです（画面ではビューポート）。したがって、段落の寸法は、ブラウザウィンドウのサイズに基づいて変化します。</target>
        </trans-unit>
        <trans-unit id="966d1502185e5b18f50460f7008842c0c85d6b23" translate="yes" xml:space="preserve">
          <source>In this example, the paragraph's containing block is &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; because the latter's &lt;code&gt;position&lt;/code&gt; is &lt;code&gt;absolute&lt;/code&gt;. The paragraph's percentage values are affected by the &lt;code&gt;padding&lt;/code&gt; of its containing block, though if the containing block's &lt;a href=&quot;box-sizing&quot;&gt;&lt;code&gt;box-sizing&lt;/code&gt;&lt;/a&gt; value were &lt;code&gt;border-box&lt;/code&gt; this would not be the case.</source>
          <target state="translated">この例では、段落の包含ブロックは &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; です。これは、後者の &lt;code&gt;position&lt;/code&gt; が &lt;code&gt;absolute&lt;/code&gt; です。段落のパーセンテージ値は、含まれているブロックの &lt;code&gt;padding&lt;/code&gt; の影響を受けますが、含まれているブロックの&lt;a href=&quot;box-sizing&quot;&gt; &lt;code&gt;box-sizing&lt;/code&gt; &lt;/a&gt;値が &lt;code&gt;border-box&lt;/code&gt; の場合はそうではありません。</target>
        </trans-unit>
        <trans-unit id="f0758459123b42520a114217ed622ed76c466616" translate="yes" xml:space="preserve">
          <source>In this example, the paragraph's containing block is &lt;code&gt;&amp;lt;section&lt;/code&gt;&amp;gt; because the latter's &lt;code&gt;position&lt;/code&gt; is &lt;code&gt;absolute&lt;/code&gt;. The paragraph's percentage values are affected by the padding of its containing block, though if the containing block's &lt;a href=&quot;box-sizing&quot;&gt;&lt;code&gt;box-sizing&lt;/code&gt;&lt;/a&gt; value were &lt;code&gt;border-box&lt;/code&gt; this would not be the case.</source>
          <target state="translated">この例では、段落の包含ブロックは &lt;code&gt;&amp;lt;section&lt;/code&gt; &amp;gt;です。後者の &lt;code&gt;position&lt;/code&gt; は &lt;code&gt;absolute&lt;/code&gt; です。段落のパーセンテージ値は、その包含ブロックのパディングの影響を受けますが、包含ブロックの&lt;a href=&quot;box-sizing&quot;&gt; &lt;code&gt;box-sizing&lt;/code&gt; &lt;/a&gt;値が &lt;code&gt;border-box&lt;/code&gt; の場合は当てはまりません。</target>
        </trans-unit>
        <trans-unit id="d04614e47b588fffc2fab82160f3f6a9deb11c78" translate="yes" xml:space="preserve">
          <source>In this example, the paragraph's containing block is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; element, because &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; is not a block container (because of &lt;code&gt;display: inline&lt;/code&gt;) and doesn&amp;rsquo;t establish a formatting context.</source>
          <target state="translated">この例では、段落を含むブロックは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;/a&gt;要素です。これは、 &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; がブロックコンテナではなく（ &lt;code&gt;display: inline&lt;/code&gt; ため）、フォーマットコンテキストを確立しないためです。</target>
        </trans-unit>
        <trans-unit id="f6fee04ab283dff0d4d2d7022c28ed42a91cea7d" translate="yes" xml:space="preserve">
          <source>In this example, the paragraph's containing block is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt;element, because &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; is not a block container (because of &lt;code&gt;display: inline&lt;/code&gt;) and doesn&amp;rsquo;t establish a formatting context.</source>
          <target state="translated">この例では、段落の包含ブロックは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;/a&gt;要素です。これは、 &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; が（ &lt;code&gt;display: inline&lt;/code&gt; ため）ブロックコンテナーではなく、フォーマットコンテキストを確立しないためです。</target>
        </trans-unit>
        <trans-unit id="00395bb5a0aad2ed5d0d93720d17446961477403" translate="yes" xml:space="preserve">
          <source>In this example, the same text (the opening sentences from &lt;a href=&quot;https://en.wikipedia.org/wiki/Herman%20Melville&quot;&gt;Herman Melville's&lt;/a&gt; novel &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Moby-Dick&quot;&gt;Moby-Dick&lt;/a&gt;&lt;/em&gt;) is presented in both the &lt;code&gt;horizontal-tb&lt;/code&gt; and &lt;code&gt;vertical-rl&lt;/code&gt; writing modes.</source>
          <target state="translated">この例では、同じテキスト（&lt;a href=&quot;https://en.wikipedia.org/wiki/Herman%20Melville&quot;&gt;Herman Melvilleの&lt;/a&gt;小説&lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Moby-Dick&quot;&gt;Moby-Dick&lt;/a&gt;&lt;/em&gt;の冒頭の文）が、 &lt;code&gt;horizontal-tb&lt;/code&gt; と &lt;code&gt;vertical-rl&lt;/code&gt; の両方の書き込みモードで表示されています。</target>
        </trans-unit>
        <trans-unit id="fc257e33a740fd90225680b0dd9f6c9ce4df0661" translate="yes" xml:space="preserve">
          <source>In this example, the user's local copy of &quot;Helvetica Neue Bold&quot; is used; if the user does not have that font installed (two different names are tried), then the downloadable font named &quot;MgOpenModernaBold.ttf&quot; is used instead:</source>
          <target state="translated">この例では、ユーザのローカルコピーである「Helvetica Neue Bold」が使用されます。そのフォントがインストールされていない場合(2つの異なる名前を試してみました)、代わりに「MgOpenModernaBold.ttf」という名前のダウンロード可能なフォントが使用されます。</target>
        </trans-unit>
        <trans-unit id="df11141f7222ee2c627ba0090c90d2fbc47dce1f" translate="yes" xml:space="preserve">
          <source>In this example, the words &amp;ldquo;outer inner outer&amp;rdquo; are all displayed at 16px (assuming that the browser's &lt;code&gt;font-size&lt;/code&gt; has been left at the default value of 10px).</source>
          <target state="translated">この例では、「outer innerouter」という単語はすべて16pxで表示されます（ブラウザーの &lt;code&gt;font-size&lt;/code&gt; がデフォルト値の10pxのままであると想定しています）。</target>
        </trans-unit>
        <trans-unit id="9b8ce626cc2282855c9a1b23f66e4e42cd674533" translate="yes" xml:space="preserve">
          <source>In this example, the words &amp;ldquo;outer inner outer&amp;rdquo; are all displayed at 16px (assuming that the browser's font-size has been left at the default value of 16px).</source>
          <target state="translated">この例では、「outer inner outer」という単語はすべて16pxで表示されています（ブラウザーのfont-sizeがデフォルト値の16pxのままであると想定しています）。</target>
        </trans-unit>
        <trans-unit id="295218d390251d7633be0ef73d699cd7d3e84cde" translate="yes" xml:space="preserve">
          <source>In this example, there are three colored squares. Two are floated left, and one is floated right. Note that the second &quot;left&quot; square is placed to the right of the first. Additional squares would continue to stack to the right, until they filled the containing box, after which they would wrap to the next line.</source>
          <target state="translated">この例では、3 つの色の正方形があります。2つのマスは左に、1つは右に配置されています。2つ目の「左」のマスは1つ目のマスの右に配置されていることに注意してください。追加のマスはボックスの中に入るまで右に積み上げられ、次の行へと進みます。</target>
        </trans-unit>
        <trans-unit id="a28d8af3c68a1c92be8dd4fbaee92947feb9a524" translate="yes" xml:space="preserve">
          <source>In this example, three backgrounds are stacked: the Firefox logo, an image of bubbles, and a &lt;a href=&quot;../linear-gradient&quot;&gt;linear gradient&lt;/a&gt;:</source>
          <target state="translated">この例では、Firefoxのロゴ、泡の画像、&lt;a href=&quot;../linear-gradient&quot;&gt;線形グラデーションの&lt;/a&gt; 3つの背景が重なっています。</target>
        </trans-unit>
        <trans-unit id="5b612631dd720f9df9f69703fdb146edab4d97d6" translate="yes" xml:space="preserve">
          <source>In this example, three flex items are aligned on the main axis using &lt;a href=&quot;../justify-content&quot;&gt;&lt;code&gt;justify-content&lt;/code&gt;&lt;/a&gt; and on the cross axis using &lt;a href=&quot;../align-items&quot;&gt;&lt;code&gt;align-items&lt;/code&gt;&lt;/a&gt;. The first item overrides the &lt;code&gt;align-items&lt;/code&gt; values set on the group by setting &lt;a href=&quot;../align-self&quot;&gt;&lt;code&gt;align-self&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;center&lt;/code&gt;.</source>
          <target state="translated">この例では、3つのflexアイテムが&lt;a href=&quot;../justify-content&quot;&gt; &lt;code&gt;justify-content&lt;/code&gt; &lt;/a&gt;を使用して主軸に配置され、&lt;a href=&quot;../align-items&quot;&gt; &lt;code&gt;align-items&lt;/code&gt; &lt;/a&gt;を使用して交差軸に配置されます。最初の項目は、&lt;a href=&quot;../align-self&quot;&gt; &lt;code&gt;align-self&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;center&lt;/code&gt; に設定することにより、グループに設定された &lt;code&gt;align-items&lt;/code&gt; 値をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="ede25712a221e9f3e81c4741468a909668b1354a" translate="yes" xml:space="preserve">
          <source>In this example, three flex items are aligned on the main axis using &lt;code&gt;justify-content&lt;/code&gt; and on the Cross Axis using &lt;code&gt;align-items&lt;/code&gt;. The first item overrides the &lt;code&gt;align-items&lt;/code&gt; set on the group by setting &lt;code&gt;align-self&lt;/code&gt; to &lt;code&gt;center&lt;/code&gt;.</source>
          <target state="translated">この例では、3つのフレックスアイテムが &lt;code&gt;justify-content&lt;/code&gt; を使用して主軸に配置され、 &lt;code&gt;align-items&lt;/code&gt; を使用して交差軸に配置されます。最初の項目は、 &lt;code&gt;align-self&lt;/code&gt; を &lt;code&gt;center&lt;/code&gt; に設定することにより、グループに設定された &lt;code&gt;align-items&lt;/code&gt; をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="73cef6b867595ea0f2428f53018a77520d67621d" translate="yes" xml:space="preserve">
          <source>In this example, two boxes are created. One is positioned normally on the page, without being translated at all. The second is altered by applying perspective to create a 3D space, then moved towards the user.</source>
          <target state="translated">この例では、2つのボックスが作成されています。1つは、翻訳されることなく、ページ上に普通に配置されています。2つ目は、遠近法を適用して3D空間を作り、ユーザーに向かって移動させています。</target>
        </trans-unit>
        <trans-unit id="7ea023ee7b8a6bcc414e564c11ef78be2503a625" translate="yes" xml:space="preserve">
          <source>In this example, we have columns containing an image and some text which are balanced. The image cannot break and so goes into the first column and the other columns fill with equal amounts of text.</source>
          <target state="translated">この例では、画像とテキストを含む列がバランスよく配置されています。画像は折れないので最初の列に入り、他の列は同量のテキストで埋められます。</target>
        </trans-unit>
        <trans-unit id="f13528eb72dedf1bba4d0df52bf2b3f5f578cc9b" translate="yes" xml:space="preserve">
          <source>In this example, we include three shadows: an inset shadow, a regular drop shadow, and a 2px shadow that creates a border effect (we could have used an &lt;a href=&quot;outline&quot;&gt;&lt;code&gt;outline&lt;/code&gt;&lt;/a&gt; instead for that third shadow).</source>
          <target state="translated">この例では、3つのシャドウを含めます。インセットシャドウ、通常のドロップシャドウ、および境界効果を作成する2pxシャドウです（3番目のシャドウの代わりに&lt;a href=&quot;outline&quot;&gt; &lt;code&gt;outline&lt;/code&gt; &lt;/a&gt;を使用することもできます）。</target>
        </trans-unit>
        <trans-unit id="683301eeb245d585649d4be3a3ee006aa90dc5b4" translate="yes" xml:space="preserve">
          <source>In this example, we use structures like this, which include extra &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;s to generate content on; we'll use these to provide indicators of valid/invalid data:</source>
          <target state="translated">この例では、このような構造を使用します。これには、コンテンツを生成するための追加の &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; が含まれます。これらを使用して、有効/無効なデータのインジケーターを提供します。</target>
        </trans-unit>
        <trans-unit id="92b247df6056180dabadfba97684c24ee8e83d0a" translate="yes" xml:space="preserve">
          <source>In this example, we use the &lt;a href=&quot;@keyframes&quot;&gt;@keyframes&lt;/a&gt; at-rule to animate a clip path between two polygons. Note that both polygons have the same number of vertices, which is necessary for this type of animation to work.</source>
          <target state="translated">この例では、&lt;a href=&quot;@keyframes&quot;&gt;@ keyframes&lt;/a&gt; at-rule を使用して、2つのポリゴン間のクリップパスをアニメーション化します。両方のポリゴンに同じ数の頂点があることに注意してください。これは、このタイプのアニメーションが機能するために必要です。</target>
        </trans-unit>
        <trans-unit id="777f3175810329d16cd033d78fbd41134f7ba6c2" translate="yes" xml:space="preserve">
          <source>In this example, we will apply a diamond pattern to an element's borders. The source for the border image is a &quot;.png&quot; file of 81 by 81 pixels, with three diamonds going vertically and horizontally:</source>
          <target state="translated">この例では、要素の境界線にダイヤモンドパターンを適用します。境界線の画像のソースは、81 x 81ピクセルの「.png」ファイルで、3つのダイヤモンドが縦と横に配置されています。</target>
        </trans-unit>
        <trans-unit id="7a04deca6ccf92f3977eaec49feb1e4bd24cc607" translate="yes" xml:space="preserve">
          <source>In this example, we will mask an element's border with a diamond pattern. The source for the mask is a &quot;.png&quot; file of 90 by 90 pixels, with three diamonds going vertically and horizontally:</source>
          <target state="translated">この例では、要素の境界線をダイヤモンドパターンでマスクします。マスクのソースは、90×90ピクセルの「.png」ファイルで、3つのダイヤモンドが縦と横に配置されています。</target>
        </trans-unit>
        <trans-unit id="19f409b642b700a7741d515aa25cefb2eeb6a7a7" translate="yes" xml:space="preserve">
          <source>In this examples, the viewport has an aspect ratio of 3::4, and is, but default, 400 by 300 units, with a unit generally being a CSS pixel.</source>
          <target state="translated">この例では、ビューポートは、3::4のアスペクト比を有し、しかしながらデフォルトでは、400×300の単位であり、単位は一般的にCSSピクセルである。</target>
        </trans-unit>
        <trans-unit id="b124c77f342aef6fd7cc0b2dda62beaf76c60318" translate="yes" xml:space="preserve">
          <source>In this final example, we mix absolute sized tracks with fraction units. The first track is 500 pixels, so the fixed width is taken away from the available space. The remaining space is divided into three and assigned in proportion to the two flexible tracks.</source>
          <target state="translated">この最後の例では、絶対サイズのトラックと分数単位のトラックを混ぜています。最初のトラックは500ピクセルなので、固定幅が空いているスペースを奪っています。残りのスペースは3つに分割され、2つのフレキシブルトラックに比例して割り当てられます。</target>
        </trans-unit>
        <trans-unit id="f31e33f0565a7a509743c876477d20c30f66238e" translate="yes" xml:space="preserve">
          <source>In this first example, I am using flexbox to lay out a set of boxes. I have five child items in my container, and I have given the flex properties values so that they can grow and shrink from a flex-basis of 150 pixels.</source>
          <target state="translated">この最初の例では、flexbox を使用してボックスのセットをレイアウトしています。コンテナには 5 つの子アイテムがあり、フレックス・プロパティの値を与えて、150 ピクセルのフレックス・ベースから成長したり縮小したりできるようにしています。</target>
        </trans-unit>
        <trans-unit id="2ef7c49d17356103c7444c86fc675c00aa420cac" translate="yes" xml:space="preserve">
          <source>In this first example, I am using flexbox to lay out a set of boxes. I have five child items in my container, and I have given the flex properties values so that they can grow and shrink from a flex-basis of 200 pixels.</source>
          <target state="translated">この最初の例では、flexbox を使用してボックスのセットをレイアウトしています。コンテナには 5 つの子アイテムがあり、フレックス・プロパティの値を与えて、200 ピクセルのフレックス・ベースから成長したり縮小したりできるようにしています。</target>
        </trans-unit>
        <trans-unit id="f49c9edcd7ca34953a32c078aa06a5189be93756" translate="yes" xml:space="preserve">
          <source>In this first example, the paragraph with a class of secret is set to &lt;code&gt;display: none&lt;/code&gt;; the box and any content is now not rendered.</source>
          <target state="translated">この最初の例では、秘密クラスの段落が &lt;code&gt;display: none&lt;/code&gt; されるように設定されています。ボックスとコンテンツはレンダリングされなくなりました。</target>
        </trans-unit>
        <trans-unit id="d2e642bc433d4b469dfd9c5fc854ff21ee02c332" translate="yes" xml:space="preserve">
          <source>In this first example, we have three animation names set, but only one duration and iteration count. In this case all three animations are given the same duration and iteration count:</source>
          <target state="translated">この最初の例では、3つのアニメーション名が設定されていますが、持続時間と反復回数は1つだけです。この場合、3つのアニメーションはすべて同じ持続時間と反復回数が与えられます。</target>
        </trans-unit>
        <trans-unit id="b4b36ed6a0cf82c9b632e114b0b915e676377322" translate="yes" xml:space="preserve">
          <source>In this guide we have covered the ways to take an element out of flow in order to achieve some very specific types of positioning. In the next guide we will look at a related issue, that of creating a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context&quot;&gt;Block Formatting Context&lt;/a&gt;, in &lt;a href=&quot;formatting_contexts_explained&quot;&gt;Formatting Contexts Explained&lt;/a&gt;.</source>
          <target state="translated">このガイドでは、非常に特殊なタイプの配置を実現するために、要素をフローから除外する方法について説明しました。次のガイドでは、&lt;a href=&quot;formatting_contexts_explained&quot;&gt;フォーマットのコンテキストの説明&lt;/a&gt;で、関連する問題、つまり&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context&quot;&gt;ブロックのフォーマットコンテキストの&lt;/a&gt;作成について説明します。</target>
        </trans-unit>
        <trans-unit id="7fe79173b650cf6b15eaec92005b75ac0e5f6a6e" translate="yes" xml:space="preserve">
          <source>In this guide we have looked at how elements display in normal flow, as block and inline elements. Due to the default behaviour of these elements, an HTML document with no CSS styling at all, will display in a readable way. By understanding how normal flow works you will find layout easier, as you understand the starting point for making changes to how elements are displayed.</source>
          <target state="translated">このガイドでは、ブロック要素とインライン要素として、通常のフローで要素がどのように表示されるかを見てきました。これらの要素のデフォルトの動作により、CSS のスタイリングが全くない HTML 文書は、読みやすい形で表示されます。通常のフローがどのように機能するかを理解することで、要素の表示方法を変更するための出発点を理解し、レイアウトを容易にすることができるようになります。</target>
        </trans-unit>
        <trans-unit id="560c7a80ac2b41b30443dc7f5d74375643fdb99d" translate="yes" xml:space="preserve">
          <source>In this guide we look at how multicol deals with overflow, both inside the column boxes and in situations where there is more content than will fit into the container.</source>
          <target state="translated">このガイドでは、multicol がどのようにオーバーフローを処理するかについて、カラムボックスの内部と、コンテナに収まる以上の内容がある場合の両方で見ていきます。</target>
        </trans-unit>
        <trans-unit id="9fa5834c0c36159dc4caa85e9c661a30c7034b10" translate="yes" xml:space="preserve">
          <source>In this guide we look at how to make elements span across columns inside the multicol container and how to control how the columns are filled.</source>
          <target state="translated">このガイドでは、multicol コンテナ内の列にまたがって要素を配置する方法と、列の埋め方を制御する方法を見ていきます。</target>
        </trans-unit>
        <trans-unit id="ec81815788cdee36d0f63eb9f5a3de9611332cbf" translate="yes" xml:space="preserve">
          <source>In this guide we will be exploring the three properties that are applied to flex items, which enable us to control the size and flexibility of the items along the main axis &amp;mdash; &lt;a href=&quot;../flex-grow&quot;&gt;&lt;code&gt;flex-grow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../flex-shrink&quot;&gt;&lt;code&gt;flex-shrink&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../flex-basis&quot;&gt;&lt;code&gt;flex-basis&lt;/code&gt;&lt;/a&gt;. Fully understanding how these properties work with growing and shrinking items is the real key to mastering flexbox.</source>
          <target state="translated">このガイドでは、フレックスアイテムに適用される3つのプロパティについて説明します。これにより、主軸に沿ったアイテムのサイズと柔軟性を制御できます&amp;mdash; &lt;a href=&quot;../flex-grow&quot;&gt; &lt;code&gt;flex-grow&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../flex-shrink&quot;&gt; &lt;code&gt;flex-shrink&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../flex-basis&quot;&gt; &lt;code&gt;flex-basis&lt;/code&gt; &lt;/a&gt;。これらのプロパティがアイテムの拡大と縮小でどのように機能するかを完全に理解することは、フレックスボックスを習得するための真の鍵です。</target>
        </trans-unit>
        <trans-unit id="12eb90f1f2c4331abba2086bc3189f09e2b6956d" translate="yes" xml:space="preserve">
          <source>In this guide we will be working in English and therefore a horizontal writing mode. However everything described should work in the same way if your document is in a vertical writing mode.</source>
          <target state="translated">このガイドでは、英語での作業となりますので、横書きでの作業となります。しかし、文書が縦書きの場合でも、ここで説明したことはすべて同じように動作するはずです。</target>
        </trans-unit>
        <trans-unit id="7f190d19ff3b5dcb8edef3ce7639c3510d940c9a" translate="yes" xml:space="preserve">
          <source>In this guide we will explain the flow-relative mappings between physical dimension properties and logical properties used for sizing elements on our pages.</source>
          <target state="translated">このガイドでは、ページ上の要素のサイジングに使用される物理ディメンジョンプロパティと論理プロパティの間のフロー関係のマッピングについて説明します。</target>
        </trans-unit>
        <trans-unit id="8cd5400f2805da7d3a64aaf3cb577389c4279dd5" translate="yes" xml:space="preserve">
          <source>In this guide we will explore the basics of how Block and Inline elements behave when they are part of the normal flow.</source>
          <target state="translated">このガイドでは、ブロック要素とインライン要素が通常のフローの一部である場合にどのように振る舞うかの基本を探ります。</target>
        </trans-unit>
        <trans-unit id="b71d4177d3df1f5adbf75061c043edf60ae73820" translate="yes" xml:space="preserve">
          <source>In this guide we will take a look at how we can create a shape from an image file with an alpha channel or even from a CSS Gradient. This is a very flexible way to create shapes. Rather than drawing a path with a complex polygon in CSS, you can create the shape in a graphics program and then use the path created by the pixels less opaque than a threshold value.</source>
          <target state="translated">このガイドでは、アルファチャンネルを持つ画像ファイルやCSSグラデーションからシェイプを作成する方法を見ていきます。これは非常に柔軟にシェイプを作成する方法です。CSSで複雑なポリゴンでパスを描くのではなく、グラフィックプログラムで図形を作成し、しきい値よりも不透明度の低いピクセルで作成したパスを使用することができます。</target>
        </trans-unit>
        <trans-unit id="bf7243405852652880321cc5f32d9cd015253a87" translate="yes" xml:space="preserve">
          <source>In this guide we will take a look at some of the common use cases for flexbox &amp;mdash; those places where it makes more sense than another layout method.</source>
          <target state="translated">このガイドでは、フレックスボックスの一般的な使用例のいくつかを見ていきます。これらの場所は、他のレイアウト方法よりも理にかなっています。</target>
        </trans-unit>
        <trans-unit id="c369434f0cbb80c77f28d00e5adb6638a40866d4" translate="yes" xml:space="preserve">
          <source>In this guide we've learned the basic use of Multiple-column Layout. In the next guide, we will look at how much we can &lt;a href=&quot;styling_columns&quot;&gt;style the columns themselves&lt;/a&gt;.</source>
          <target state="translated">このガイドでは、複数列レイアウトの基本的な使い方を学びました。次のガイドでは&lt;a href=&quot;styling_columns&quot;&gt;、列自体のスタイル&lt;/a&gt;をどの程度設定できるかについて説明します。</target>
        </trans-unit>
        <trans-unit id="0ef1b082c06d1b359d3ad8dfa4f7cdc4f7f34001" translate="yes" xml:space="preserve">
          <source>In this guide, we have looked at how elements display in normal flow, as block and inline elements. Due to the default behaviour of these elements, an HTML document with no CSS styling at all, will display in a readable way. By understanding how normal flow works you will find layout easier, as you understand the starting point for making changes to how elements are displayed.</source>
          <target state="translated">このガイドでは、ブロック要素とインライン要素として、通常のフローで要素がどのように表示されるかを見てきました。これらの要素のデフォルトの動作により、CSS のスタイリングが全くない HTML 文書は、読みやすい形で表示されます。通常のフローがどのように機能するかを理解することで、要素の表示方法を変更するための出発点を理解し、レイアウトを容易にすることができるようになります。</target>
        </trans-unit>
        <trans-unit id="b084a1661072a060b83c6fe748fbe80cb49e4e55" translate="yes" xml:space="preserve">
          <source>In this guide, we have looked in more detail at the Block and Inline formatting contexts and the important subject of creating a Block Formatting Context (</source>
          <target state="translated">このガイドでは、ブロックとインラインの書式設定コンテキストと、ブロック書式設定コンテキスト (</target>
        </trans-unit>
        <trans-unit id="b9a344eb966000bef9975c0cfdcf33c878c957c3" translate="yes" xml:space="preserve">
          <source>In this guide, we have looked in more detail at the block and Inline formatting contexts and the important subject of creating a block formatting context (</source>
          <target state="translated">このガイドでは、ブロックとインラインのフォーマットコンテキストと、ブロックフォーマットコンテキストを作成するという重要なテーマについて詳しく見てきました (</target>
        </trans-unit>
        <trans-unit id="4507f6a7e119c69d437ac9dfd5029baa286287cf" translate="yes" xml:space="preserve">
          <source>In this guide, we will be working in English and therefore a horizontal writing mode. However, everything described should work in the same way if your document is in a vertical writing mode.</source>
          <target state="translated">このガイドでは、英語での作業となりますので、横書きモードでの作業となります。しかし、文書が縦書きの場合でも、ここで説明したことはすべて同じように動作するはずです。</target>
        </trans-unit>
        <trans-unit id="341b700b70af92161c37f30048cbf6ddddb10ba4" translate="yes" xml:space="preserve">
          <source>In this guide, we will explore the basics of how Block and Inline elements behave when they are part of the normal flow.</source>
          <target state="translated">このガイドでは、ブロック要素とインライン要素が通常のフローの一部である場合にどのように振る舞うのか、その基本を探っていきます。</target>
        </trans-unit>
        <trans-unit id="295f3d16213c352127fba2632f534b21d11af80d" translate="yes" xml:space="preserve">
          <source>In this initial example we have used the old specification alongside the current specification in order to make scroll snapping work in all browsers which support some form of scroll snapping.</source>
          <target state="translated">この最初の例では、スクロール・スナッピングをサポートしているすべてのブラウザでスクロール・スナッピングが動作するようにするために、現在の仕様に加えて古い仕様を使用しています。</target>
        </trans-unit>
        <trans-unit id="82dcbb106dee9f92969534de1b8a3007960ea5bd" translate="yes" xml:space="preserve">
          <source>In this last example you can see that DIV #2 and DIV #4 are not siblings, because they belong to different parents in the HTML elements' hierarchy. Even so, stacking of DIV #4 with respect of DIV #2 can be controlled through z-index. It happens that, since DIV #1 and DIV #3 are not assigned any z-index value, they do not create a stacking context. This means that all their content, including DIV #2 and DIV #4, belongs to the same root stacking context.</source>
          <target state="translated">この最後の例では、DIV #2とDIV #4が兄弟ではないことがわかります。それでも、DIV #2に対するDIV #4の重ね方は、z-indexで制御することができます。DIV #1とDIV #3にはz-indexの値が割り当てられていないため、スタッキングコンテキストが作成されません。つまり、DIV #2とDIV #4を含むすべてのコンテンツは、同じルートのスタッキングコンテキストに属していることになります。</target>
        </trans-unit>
        <trans-unit id="894ad065b880efb046399e4c581281e023d2cbfa" translate="yes" xml:space="preserve">
          <source>In this layout I am displaying the &lt;code&gt;nav&lt;/code&gt; in the left column, alongside the &lt;code&gt;content&lt;/code&gt;. In the right column we have the &lt;code&gt;sidebar&lt;/code&gt; and underneath it the advertisements (&lt;code&gt;ad&lt;/code&gt;). The &lt;code&gt;footer&lt;/code&gt; now spans right across the bottom of the layout. I then use a flexbox to display the navigation as a column.</source>
          <target state="translated">このレイアウトでは、左側の列に &lt;code&gt;content&lt;/code&gt; とともに &lt;code&gt;nav&lt;/code&gt; を表示しています。右側の列には &lt;code&gt;sidebar&lt;/code&gt; あり、その下に広告（ &lt;code&gt;ad&lt;/code&gt; ）があります。これで、 &lt;code&gt;footer&lt;/code&gt; がレイアウトの下部にまたがっています。次に、フレックスボックスを使用して、ナビゲーションを列として表示します。</target>
        </trans-unit>
        <trans-unit id="8046361e162f8162328099254c9f3f90b369b465" translate="yes" xml:space="preserve">
          <source>In this live example, I have flex items arranged simply into a row with the basic flex values, and the class &lt;code&gt;push&lt;/code&gt; has &lt;code&gt;margin-left: auto&lt;/code&gt;. You can try removing this, or adding the class to another item to see how it works.</source>
          <target state="translated">このライブの例では、フレックス項目を基本的なフレックス値を持つ行に単純に配置しており、クラス &lt;code&gt;push&lt;/code&gt; は &lt;code&gt;margin-left: auto&lt;/code&gt; ます。これを削除するか、クラスを別のアイテムに追加して、どのように機能するかを確認できます。</target>
        </trans-unit>
        <trans-unit id="addbdbfa597bf4397a880f55afc7ee17461debaa" translate="yes" xml:space="preserve">
          <source>In this next example I am creating a grid with twelve equal width columns. Before defining the 1fr size of the column track I am also defining a line name of &lt;code&gt;[col-start]&lt;/code&gt;. This means that we will end up with a grid that has 12 column lines all named &lt;code&gt;col-start&lt;/code&gt; before a &lt;code&gt;1fr&lt;/code&gt; width column.</source>
          <target state="translated">この次の例では、12本の同じ幅の列を持つグリッドを作成しています。列トラックの1frサイズを定義する前に、 &lt;code&gt;[col-start]&lt;/code&gt; の行名も定義しています。これは、 &lt;code&gt;1fr&lt;/code&gt; 幅の列の前に、すべて &lt;code&gt;col-start&lt;/code&gt; という名前の12本の列線があるグリッドになることを意味します。</target>
        </trans-unit>
        <trans-unit id="61ca2180fd3ba56a4f137be4481eff630b8a4004" translate="yes" xml:space="preserve">
          <source>In this next example I am using a radial gradient with an ellipse, once again using a transparent part of the gradient to create the shape.</source>
          <target state="translated">次の例では、放射状のグラデーションを楕円と一緒に使用しています。</target>
        </trans-unit>
        <trans-unit id="50c428c107ed972dc1ac3c79b4dd54c29982843f" translate="yes" xml:space="preserve">
          <source>In this next example I have created a 5px dotted rule with a color of rebeccapurple, using the longhand values.</source>
          <target state="translated">次の例では、ロングハンド値を使用して、5pxの点線罫線を作成しました。</target>
        </trans-unit>
        <trans-unit id="84f382cb59109f14176648fc3e38c1b8e7dcd683" translate="yes" xml:space="preserve">
          <source>In this next example I have created a grid with three row tracks of 200 pixels height. I am auto-placing by column and the columns created will be a column width of 300 pixels, then a column width of 100 pixels until there are enough column tracks to hold all of the items.</source>
          <target state="translated">次の例では、高さ200ピクセルの3つの行トラックを持つグリッドを作成しました。私は列ごとに自動配置していますが、作成された列は300ピクセルの列幅になり、その後、すべてのアイテムを保持するのに十分な列トラックがあるまで、100ピクセルの列幅になります。</target>
        </trans-unit>
        <trans-unit id="6d58b7d65ac546b399afad6d9a6369a39d2e05b3" translate="yes" xml:space="preserve">
          <source>In this next example I have flipped the layout we were working with by working from the right and bottom of our grid when placing the items.</source>
          <target state="translated">次の例では、アイテムを配置する際にグリッドの右と下から作業することで、レイアウトを反転させています。</target>
        </trans-unit>
        <trans-unit id="8c3c940264e268d6c31f9d0d0421f196b27ca1d4" translate="yes" xml:space="preserve">
          <source>In this next example I have items laid out with &lt;code&gt;flex-direction: row-reverse&lt;/code&gt; and &lt;code&gt;justify-content: flex-end&lt;/code&gt;. In a left to right language the items all line up on the left. Try changing &lt;code&gt;flex-direction: row-reverse&lt;/code&gt; to &lt;code&gt;flex-direction: row&lt;/code&gt;. You will see that the items now move to the right hand side.</source>
          <target state="translated">この次の例では、 &lt;code&gt;flex-direction: row-reverse&lt;/code&gt; および &lt;code&gt;justify-content: flex-end&lt;/code&gt; レイアウトされたアイテムがあります。左から右の言語では、項目はすべて左側に並んでいます。 &lt;code&gt;flex-direction: row-reverse&lt;/code&gt; を &lt;code&gt;flex-direction: row&lt;/code&gt; 変更してみてください。アイテムが右側に移動することがわかります。</target>
        </trans-unit>
        <trans-unit id="c7176a19349b289924a8d561434823becf5e83be" translate="yes" xml:space="preserve">
          <source>In this next example I have used generated content and floated this content, giving it a background image of a linear gradient. I am using that same value as the value of &lt;a href=&quot;../shape-outside&quot;&gt;&lt;code&gt;shape-outside&lt;/code&gt;&lt;/a&gt;. The linear gradient goes from purple to transparent, so by changing the value of &lt;a href=&quot;../shape-image-threshold&quot;&gt;&lt;code&gt;shape-image-threshold&lt;/code&gt;&lt;/a&gt; I can decide how transparent the pixels need to be that create my shape. You can play with that value in the example below to see how the diagonal line will move across the shape depending on that value.</source>
          <target state="translated">この次の例では、生成されたコンテンツを使用し、このコンテンツをフロートさせて、線形グラデーションの背景画像を与えました。私は&lt;a href=&quot;../shape-outside&quot;&gt; &lt;code&gt;shape-outside&lt;/code&gt; の&lt;/a&gt;値と同じ値を使用しています。線形グラデーションは紫から透明に変化するため、&lt;a href=&quot;../shape-image-threshold&quot;&gt; &lt;code&gt;shape-image-threshold&lt;/code&gt; の&lt;/a&gt;値を変更することで、ピクセルをどの程度透明にして形状を作成するかを決定できます。以下の例でその値を試して、その値に応じて対角線が形状を横切ってどのように移動するかを確認できます。</target>
        </trans-unit>
        <trans-unit id="9ef0b60b4ce51d12bccf1dd0dd58eaaeb0bf7a19" translate="yes" xml:space="preserve">
          <source>In this next example we have a very wide rule of 40px and a 10px gap. The rule displays under the content of the columns. In order to make space on both sides of the rule, the gap would need to be increased to be larger than 40px.</source>
          <target state="translated">次の例では、40pxの非常に幅の広いルールと10pxのギャップがあります。このルールはカラムの内容の下に表示されます。ルールの両側にスペースを確保するためには、ギャップを40pxよりも大きくする必要があります。</target>
        </trans-unit>
        <trans-unit id="38b59d890e7f4e3765ec4193e94861b8a5cff7e3" translate="yes" xml:space="preserve">
          <source>In this next example we use &lt;code&gt;column-width&lt;/code&gt; of 200px and &lt;code&gt;column-count&lt;/code&gt; of 2. Even if there is space for more than two columns, we get two. If there is not enough space for two columns of 200px, however, we get one.</source>
          <target state="translated">次の例では、200pxの &lt;code&gt;column-width&lt;/code&gt; と2の &lt;code&gt;column-count&lt;/code&gt; を使用します。3 つ以上の列にスペースがある場合でも、2つになります。ただし、200pxの2つの列に十分なスペースがない場合は、1つを取得します。</target>
        </trans-unit>
        <trans-unit id="4f42d4d64c1b28b794e56de37696221800d17844" translate="yes" xml:space="preserve">
          <source>In this next example, I am using alignment to align items inside a grid that is set to &lt;code&gt;writing-mode: vertical-lr&lt;/code&gt;. The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; properties work in exactly the same way that they do in the default writing mode, and remain logical in a way that using left and right, top and bottom to align items would not do. This occurs once we've flipped the grid onto the side, like this:</source>
          <target state="translated">次の例では、alignmentを使用して、 &lt;code&gt;writing-mode: vertical-lr&lt;/code&gt; 設定されているグリッド内のアイテムを整列しています。 &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 、彼らは書き込みモードデフォルトで行うことと全く同じ方法で、プロパティの作業、および整列項目に左右、上下を使用することはしないだろうという方法で、論理残ります。これは、次のようにグリッドを横に反転すると発生します。</target>
        </trans-unit>
        <trans-unit id="6435f01bf3294973dceb380e2ad6fb153badcdd3" translate="yes" xml:space="preserve">
          <source>In this next example, I am using the &lt;code&gt;align-self&lt;/code&gt; property, to demonstrate the different alignment values. The first area, is showing the default behavior of &lt;code&gt;align-self&lt;/code&gt;, which is to stretch. The second item, has an &lt;code&gt;align-self&lt;/code&gt; value of &lt;code&gt;start&lt;/code&gt;, the third &lt;code&gt;end&lt;/code&gt; and the fourth &lt;code&gt;center&lt;/code&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;align-self&lt;/code&gt; プロパティを使用して、さまざまな配置値を示します。最初の領域は、ストレッチするという &lt;code&gt;align-self&lt;/code&gt; のデフォルトの動作を示しています。2番目の項目には、 &lt;code&gt;align-self&lt;/code&gt; 値として &lt;code&gt;start&lt;/code&gt; 、3番目の &lt;code&gt;end&lt;/code&gt; 、4番目の &lt;code&gt;center&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="450ec4b74d7ec30835341870892187b70349cf41" translate="yes" xml:space="preserve">
          <source>In this next example, I create the same layout using Grid. This time we have three &lt;code&gt;1fr&lt;/code&gt; column tracks. We do not need to set anything on the items themselves; they will lay themselves out one into each cell of the created grid. As you can see they stay in a strict grid, lining up in rows and columns. With five items, we get a gap on the end of row two.</source>
          <target state="translated">次の例では、グリッドを使用して同じレイアウトを作成します。今回は3つの &lt;code&gt;1fr&lt;/code&gt; カラムトラックがあります。アイテム自体に何も設定する必要はありません。作成されたグリッドの各セルに1つずつ配置されます。ご覧のように、それらは厳密なグリッドにとどまり、行と列に並んでいます。5つのアイテムがあるため、2行目の最後にギャップが生じます。</target>
        </trans-unit>
        <trans-unit id="2d86041f429ab39cc1d54ca1412fb533b6c2c23b" translate="yes" xml:space="preserve">
          <source>In this next example, I have a grid which is in the default &lt;code&gt;ltr&lt;/code&gt; direction. I have positioned three items using line-based placement.</source>
          <target state="translated">この次の例では、デフォルトの &lt;code&gt;ltr&lt;/code&gt; 方向にあるグリッドがあります。行ベースの配置を使用して3つのアイテムを配置しました。</target>
        </trans-unit>
        <trans-unit id="76fe79de294799d84a377ed9f0bd87108d4e5530" translate="yes" xml:space="preserve">
          <source>In this next example, I have a set of floated cards. I have given the cards a &lt;a href=&quot;../width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;, in order to &lt;a href=&quot;../float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; them. To create gaps between the cards, I use a &lt;a href=&quot;../margin&quot;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt; on the items, and then a negative margin on the container:</source>
          <target state="translated">次の例では、フロートカードのセットがあります。カードを&lt;a href=&quot;../float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;ように、カードに&lt;a href=&quot;../width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;を与えました。カード間にギャップを作るために、アイテムに&lt;a href=&quot;../margin&quot;&gt; &lt;code&gt;margin&lt;/code&gt; &lt;/a&gt;を使用し、次にコンテナーに負のマージンを使用します。</target>
        </trans-unit>
        <trans-unit id="8a41af96fa439594a9c9a2f227cd2e749f6b63f9" translate="yes" xml:space="preserve">
          <source>In this next example, I have given item 1 a left margin of &lt;code&gt;auto&lt;/code&gt;. You can see how the content is now pushed over to the right side of the area, as the auto margin takes up remaining space, after room for the content of that item has been assigned:</source>
          <target state="translated">次の例では、アイテム1に &lt;code&gt;auto&lt;/code&gt; の左マージンを与えています。自動マージンが残りのスペースを占めるため、そのアイテムのコンテンツのスペースが割り当てられた後、コンテンツがどのようにエリアの右側にプッシュされるかを確認できます。</target>
        </trans-unit>
        <trans-unit id="b0f30ed07e3cd3c843396e46c62fbe2a02a25efb" translate="yes" xml:space="preserve">
          <source>In this next example, I have used the &lt;code&gt;auto-fill&lt;/code&gt; keyword in place of an integer in the repeat notation and set the track listing to 200 pixels. This means that grid will create as many 200 pixels column tracks as will fit in the container.</source>
          <target state="translated">次の例では、繰り返し表記で整数の代わりに &lt;code&gt;auto-fill&lt;/code&gt; キーワードを使用して、トラックリストを200ピクセルに設定しました。これは、グリッドがコンテナーに収まる最大200ピクセルの列トラックを作成することを意味します。</target>
        </trans-unit>
        <trans-unit id="a2982be72f345f765fed413ddc83804876ee1a78" translate="yes" xml:space="preserve">
          <source>In this next example, we are forcing a column break before an &lt;code&gt;h2&lt;/code&gt; element.</source>
          <target state="translated">この次の例では、 &lt;code&gt;h2&lt;/code&gt; 要素の前に列の区切りを強制しています。</target>
        </trans-unit>
        <trans-unit id="652ad4cb93ddfd0600d6d3e03a2888739cf6e8c6" translate="yes" xml:space="preserve">
          <source>In this next example, we create a definition with a &lt;code&gt;2fr&lt;/code&gt; track then two &lt;code&gt;1fr&lt;/code&gt; tracks. The available space is split into four. Two parts are given to the first track and one part each to the next two tracks.</source>
          <target state="translated">次の例では、 &lt;code&gt;2fr&lt;/code&gt; トラックと2つの &lt;code&gt;1fr&lt;/code&gt; トラックの定義を作成します。利用可能なスペースは4つに分かれています。最初のトラックには2つのパートが与えられ、次の2つのトラックにはそれぞれ1つのパートが与えられます。</target>
        </trans-unit>
        <trans-unit id="024e9bf3836151e6e4ed4624c52d548406522b62" translate="yes" xml:space="preserve">
          <source>In this next example, we have an image with a fully transparent area, and we are using an image as the URL value for &lt;code&gt;shape-outside&lt;/code&gt;. The shape is created around the opaque area &amp;mdash; the image of the balloon.</source>
          <target state="translated">次の例では、完全に透明な領域を持つ画像があり、 &lt;code&gt;shape-outside&lt;/code&gt; の URL値として画像を使用しています。シェイプは不透明な領域（バルーンのイメージ）の周りに作成されます。</target>
        </trans-unit>
        <trans-unit id="a28e814ceebfac81c29dcbeb9d6fa5abc42215c4" translate="yes" xml:space="preserve">
          <source>In this next example, we use generated content to insert an element with height and width of 150px. We can then use Basic Shapes, Box Values or even the Alpha Channel of an image to create a shape for the text to wrap around.</source>
          <target state="translated">次の例では、生成されたコンテンツを使用して、高さと幅が 150px の要素を挿入します。次に、基本的な図形、ボックス値、または画像のアルファチャンネルを使用して、テキストが回り込むための図形を作成することができます。</target>
        </trans-unit>
        <trans-unit id="cc1cc1033f6ec4105d2b88f1d9d6a23e1af2ba4a" translate="yes" xml:space="preserve">
          <source>In this next live example the child elements have been floated, and then their container has had &lt;code&gt;display: flex&lt;/code&gt; added. If you remove &lt;code&gt;display: flex&lt;/code&gt;, you should see that the &lt;code&gt;.box&lt;/code&gt; element collapses as we have no clearing applied. This demonstrates that the float is happening. Re-apply &lt;code&gt;display: flex&lt;/code&gt; and the collapsing does not happen. This is because the items no longer have a float applied, as they have been transformed into flex items.</source>
          <target state="translated">この次のライブの例では、子要素がフロートされ、そのコンテナに &lt;code&gt;display: flex&lt;/code&gt; 追加されました。 &lt;code&gt;display: flex&lt;/code&gt; を削除すると、クリアが適用されていないため、 &lt;code&gt;.box&lt;/code&gt; 要素が折りたたまれていることがわかります。これは、フロートが発生していることを示しています。 &lt;code&gt;display: flex&lt;/code&gt; 再適用：フレックスし、折りたたみは発生しません。これは、フレックスアイテムに変換されたため、アイテムにフロートが適用されなくなったためです。</target>
        </trans-unit>
        <trans-unit id="df9917d9090b46b26b776cd3f47fb9058e7fbcf2" translate="yes" xml:space="preserve">
          <source>In this next live example, the flex container has &lt;code&gt;align-items: flex-start&lt;/code&gt;, which means the items are all aligned to the start of the cross axis. I have targeted the first item using a &lt;code&gt;first-child&lt;/code&gt; selector and set that item to &lt;code&gt;align-items: stretch&lt;/code&gt;; another item has been selected using its class of &lt;code&gt;selected&lt;/code&gt; and given &lt;code&gt;align-self: center&lt;/code&gt;. You can change the value of &lt;code&gt;align-items&lt;/code&gt; or change the values of &lt;code&gt;align-self&lt;/code&gt; on the individual items to see how this works.</source>
          <target state="translated">次のライブの例では、フレックスコンテナーに &lt;code&gt;align-items: flex-start&lt;/code&gt; があります。これは、項目がすべて交差軸の始点に配置されることを意味します。 &lt;code&gt;first-child&lt;/code&gt; セレクターを使用して最初のアイテムをターゲットにし、そのアイテムを &lt;code&gt;align-items: stretch&lt;/code&gt; 設定しました。別のアイテムが &lt;code&gt;selected&lt;/code&gt; 、指定 &lt;code&gt;align-self: center&lt;/code&gt; れたalign-self：centerのクラスを使用して選択されています。あなたは、の値を変更することができます &lt;code&gt;align-items&lt;/code&gt; や値に変更 &lt;code&gt;align-self&lt;/code&gt; どのようにこの作品を見て、個々のアイテム。</target>
        </trans-unit>
        <trans-unit id="18bd47fefb52d47feef75768dff1133341a98008" translate="yes" xml:space="preserve">
          <source>In this next live example, the flex container has &lt;code&gt;align-items: flex-start&lt;/code&gt;, which means the items are all aligned to the start of the cross axis. I have targeted the first item using a &lt;code&gt;first-child&lt;/code&gt; selector and set that item to &lt;code&gt;align-self: stretch&lt;/code&gt;; another item has been selected using its class of &lt;code&gt;selected&lt;/code&gt; and given &lt;code&gt;align-self: center&lt;/code&gt;. You can change the value of &lt;code&gt;align-items&lt;/code&gt; or change the values of &lt;code&gt;align-self&lt;/code&gt; on the individual items to see how this works.</source>
          <target state="translated">この次のライブの例では、フレックスコンテナに &lt;code&gt;align-items: flex-start&lt;/code&gt; があります。これは、アイテムがすべて交差軸の始点に位置合わせされていることを意味します。 &lt;code&gt;first-child&lt;/code&gt; セレクターを使用して最初のアイテムをターゲットにし、そのアイテムを &lt;code&gt;align-self: stretch&lt;/code&gt; 設定しました：stretch ;他の項目は、そのクラス使用して、選択された &lt;code&gt;selected&lt;/code&gt; 所与の &lt;code&gt;align-self: center&lt;/code&gt; 。あなたは、の値を変更することができます &lt;code&gt;align-items&lt;/code&gt; や値に変更 &lt;code&gt;align-self&lt;/code&gt; どのようにこの作品を見て、個々のアイテム。</target>
        </trans-unit>
        <trans-unit id="e25e4cff8bc1de15a7b6a4d9f9db4052bf34ad22" translate="yes" xml:space="preserve">
          <source>In this second example, the heading is inside an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/a&gt; element, yet still spans the content as expected.</source>
          <target state="translated">この2番目の例では、見出しは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt; &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; &lt;/a&gt;要素内にありますが、期待どおりにコンテンツにまたがっています。</target>
        </trans-unit>
        <trans-unit id="00d95b80d739ad38b15e1a3fdeb90791ffa94270" translate="yes" xml:space="preserve">
          <source>In this second example, we have three values set on all three properties. In this case each animation is run with the corresponding values in the same position on each property, so for example &lt;code&gt;fadeInOut&lt;/code&gt; has a duration of 2.5s and an iteration count of 2, etc.</source>
          <target state="translated">この2番目の例では、3つのプロパティすべてに3つの値が設定されています。この場合、各アニメーションは、各プロパティの同じ位置にある対応する値で実行されるため、たとえば &lt;code&gt;fadeInOut&lt;/code&gt; の持続時間は2.5秒、反復回数は2などです。</target>
        </trans-unit>
        <trans-unit id="6624c485007896db525d492a296809c5e3526552" translate="yes" xml:space="preserve">
          <source>In this section we'll demonstrate the five registered axes defined with examples and the corresponding CSS. Where possible, both the standard and lower-level syntax are included. The lower-level syntax (&lt;a href=&quot;../font-variation-settings&quot;&gt;&lt;code&gt;font-variation-settings&lt;/code&gt;&lt;/a&gt;) was the first mechanism implemented in order to test the early implementations of variable font support, and is necessary to utilize new or custom axes beyond the five registered ones. However, the W3C&amp;rsquo;s intent was for this syntax not to be used when other attributes are available. Therefore wherever possible, the appropriate property should be used, with the lower-level syntax of &lt;code&gt;font-variation-settings&lt;/code&gt; only being used to set values or axes not available otherwise.</source>
          <target state="translated">このセクションでは、例と対応するCSSで定義された5つの登録された軸を示します。可能な場合は、標準構文と下位レベルの構文の両方が含まれています。下位レベルの構文（&lt;a href=&quot;../font-variation-settings&quot;&gt; &lt;code&gt;font-variation-settings&lt;/code&gt; &lt;/a&gt;）は、可変フォントサポートの初期の実装をテストするために実装された最初のメカニズムであり、5つの登録済みの軸を超える新しい軸またはカスタム軸を利用するために必要です。ただし、W3Cの意図は、他の属性が使用可能な場合はこの構文を使用しないことです。したがって、可能な場合は常に適切なプロパティを使用する必要があります &lt;code&gt;font-variation-settings&lt;/code&gt; の下位レベルの構文は、値または軸を設定するためにのみ使用され、それ以外では使用できません。</target>
        </trans-unit>
        <trans-unit id="7643a56f4d1bf32ce6e36a0cfa039989c44fb487" translate="yes" xml:space="preserve">
          <source>In this simple example, we demonstrate that using the &lt;code&gt;:scope&lt;/code&gt; pseudo-class from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/matches&quot;&gt;&lt;code&gt;Element.matches()&lt;/code&gt;&lt;/a&gt; method matches the element on which it's called.</source>
          <target state="translated">この簡単な例では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/matches&quot;&gt; &lt;code&gt;Element.matches()&lt;/code&gt; &lt;/a&gt;メソッドの &lt;code&gt;:scope&lt;/code&gt; 疑似クラスを使用すると、それが呼び出される要素と一致することを示します。</target>
        </trans-unit>
        <trans-unit id="cb5270cde51b1b7c90a7293f0f1fae6909d66d23" translate="yes" xml:space="preserve">
          <source>In this situation, the content should visibly overflow into the next column, rather than be clipped by the column box. You can see an example of this below, with an image of the expected rendering as, at the time of writing, browsers deal with this differently.</source>
          <target state="translated">この状況では、コンテンツはカラムボックスによって切り取られるのではなく、次のカラムへと目に見えてオーバーフローするはずです。この例は、この記事を書いている時点では、ブラウザによって対応が異なるため、レンダリングのイメージと一緒に以下で見ることができます。</target>
        </trans-unit>
        <trans-unit id="01b09cd8d07d40f892d63bbb366a7721f2170959" translate="yes" xml:space="preserve">
          <source>In this somewhat-contrived example, we have two articles that each contain a section, an aside, and a footer. They differ by the classes used to mark the child elements.</source>
          <target state="translated">このやや矛盾した例では、セクション、脇、フッターを含む2つの記事があります。これらの記事は、子要素をマークするために使われるクラスによって異なります。</target>
        </trans-unit>
        <trans-unit id="72973ef63e6a9ff00825c45420d00819b46d36c2" translate="yes" xml:space="preserve">
          <source>In this third case, there are three animations specified, but only two durations and interation counts. In such cases where there are not enough values to give a separate value to each animation, the values cycle from start to finish. So for example, fadeInOut gets a duration of 2.5s and moveLeft300px gets a duration of 5s. We&amp;rsquo;ve now got to the end of the available duration values, so we start from the beginning again &amp;mdash; bounce therefore gets a duration of 2.5s. The iteration counts (and any other property values you specify) will be assigned in the same way.</source>
          <target state="translated">この3番目のケースでは、3つのアニメーションが指定されていますが、期間とインタラクション数は2つだけです。各アニメーションに個別の値を与えるのに十分な値がない場合、値は最初から最後まで循環します。たとえば、fadeInOutの持続時間は2.5秒、moveLeft300pxの持続時間は5秒です。利用可能な期間の値の終わりに達したので、最初からやり直します-したがって、バウンスは2.5秒の期間を取得します。反復回数（および指定したその他のプロパティ値）も同じ方法で割り当てられます。</target>
        </trans-unit>
        <trans-unit id="59a2d1bc7c62343a667a62664e380127d01fe25c" translate="yes" xml:space="preserve">
          <source>In this third case, there are three animations specified, but only two durations and iteration counts. In such cases where there are not enough values to give a separate value to each animation, the values cycle from start to finish. So for example, fadeInOut gets a duration of 2.5s and moveLeft300px gets a duration of 5s. We&amp;rsquo;ve now got to the end of the available duration values, so we start from the beginning again &amp;mdash; bounce therefore gets a duration of 2.5s. The iteration counts (and any other property values you specify) will be assigned in the same way.</source>
          <target state="translated">この3番目のケースでは、3つのアニメーションが指定されていますが、期間と反復回数は2つだけです。各アニメーションに個別の値を与えるのに十分な値がない場合、値は最初から最後まで循環します。したがって、たとえば、fadeInOutのデュレーションは2.5秒、moveLeft300pxのデュレーションは5秒です。これで、使用可能な期間の値の最後に到達したので、最初からやり直します。したがって、バウンスの期間は2.5秒になります。反復回数（および指定したその他のプロパティ値）も同じ方法で割り当てられます。</target>
        </trans-unit>
        <trans-unit id="2558fd823931a54dbf0a6e55ef3f9f9b05daeb01" translate="yes" xml:space="preserve">
          <source>In typography, a &lt;em&gt;widow&lt;/em&gt; is the last line of a paragraph that appears alone at the top of a page. (The paragraph is continued from a prior page.)</source>
          <target state="translated">タイポグラフィでは、&lt;em&gt;未亡人&lt;/em&gt;はページの上部に単独で表示される段落の最後の行です。（段落は前のページから続きます。）</target>
        </trans-unit>
        <trans-unit id="57356f30745af0f8d99353ba3973ba7d71d35d87" translate="yes" xml:space="preserve">
          <source>In typography, an &lt;em&gt;orphan&lt;/em&gt; is the first line of a paragraph that appears alone at the bottom of a page. (The paragraph continues on a following page.)</source>
          <target state="translated">タイポグラフィでは、&lt;em&gt;孤児&lt;/em&gt;とは、ページの下部に単独で表示される段落の最初の行です。（段落は次のページに続きます。）</target>
        </trans-unit>
        <trans-unit id="68cd75b2b2f445b4c9905c56614f1058452470e0" translate="yes" xml:space="preserve">
          <source>In use, &lt;code&gt;flex-shrink&lt;/code&gt; is used alongside the other flex properties &lt;a href=&quot;flex-grow&quot;&gt;&lt;code&gt;flex-grow&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;flex-basis&quot;&gt;&lt;code&gt;flex-basis&lt;/code&gt;&lt;/a&gt;, and normally defined using the &lt;a href=&quot;flex&quot;&gt;&lt;code&gt;flex&lt;/code&gt;&lt;/a&gt; shorthand.</source>
          <target state="translated">使用中、 &lt;code&gt;flex-shrink&lt;/code&gt; は、他のflexプロパティ&lt;a href=&quot;flex-grow&quot;&gt; &lt;code&gt;flex-grow&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;flex-basis&quot;&gt; &lt;code&gt;flex-basis&lt;/code&gt; &lt;/a&gt;と一緒に使用され、通常は&lt;a href=&quot;flex&quot;&gt; &lt;code&gt;flex&lt;/code&gt; の&lt;/a&gt;省略形を使用して定義されます。</target>
        </trans-unit>
        <trans-unit id="a1295125878ef2e3696c6d7a9913982915a23505" translate="yes" xml:space="preserve">
          <source>In use, flex-grow is used alongside the other flex properties &lt;a href=&quot;flex-shrink&quot;&gt;&lt;code&gt;flex-shrink&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;flex-basis&quot;&gt;&lt;code&gt;flex-basis&lt;/code&gt;&lt;/a&gt;, and normally defined using the &lt;a href=&quot;flex&quot;&gt;&lt;code&gt;flex&lt;/code&gt;&lt;/a&gt; shorthand to ensure all values are set.</source>
          <target state="translated">使用中、flex-growは他のflexプロパティ&lt;a href=&quot;flex-shrink&quot;&gt; &lt;code&gt;flex-shrink&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;flex-basis&quot;&gt; &lt;code&gt;flex-basis&lt;/code&gt; &lt;/a&gt;と一緒に使用され、通常はすべての値が設定されていることを確認するために&lt;a href=&quot;flex&quot;&gt; &lt;code&gt;flex&lt;/code&gt; &lt;/a&gt;短縮形を使用して定義されます。</target>
        </trans-unit>
        <trans-unit id="e4a629f4456cd1b3f3422b572f5e8f5978be5bf6" translate="yes" xml:space="preserve">
          <source>In user stylesheets, &lt;code&gt;revert&lt;/code&gt; rolls back the cascade and resets the property to the default value established by the user-agent stylesheet.</source>
          <target state="translated">ユーザースタイルシートでは、 &lt;code&gt;revert&lt;/code&gt; はカスケードをロールバックし、プロパティをユーザーエージェントスタイルシートによって確立されたデフォルト値にリセットします。</target>
        </trans-unit>
        <trans-unit id="68377b80ba8bfb68806ed369db4e328abe103006" translate="yes" xml:space="preserve">
          <source>In vertical layout, text lines are rotated 90&amp;deg; clockwise. Images are not rotated, but tables are. Box layout in vertical orientations is exactly analogous to layout in the horizontal orientation: width, height, top, bottom, right, and left do not rotate with the text.</source>
          <target state="translated">垂直レイアウトでは、テキスト行は時計回りに90度回転します。画像は回転しませんが、テーブルは回転します。垂直方向のボックスレイアウトは、水平方向のレイアウトとまったく同じです。幅、高さ、上、下、右、左はテキストと共に回転しません。</target>
        </trans-unit>
        <trans-unit id="f12aabf30c3d809090191dde68b2d0d96217924c" translate="yes" xml:space="preserve">
          <source>In vertical writing-modes, this keyword forces the line to be placed on the &lt;em&gt;left&lt;/em&gt; side of the text. In horizontal writing-modes, it is a synonym of &lt;code&gt;under&lt;/code&gt;.</source>
          <target state="translated">縦書きモードでは、このキーワードは行をテキストの&lt;em&gt;左側に&lt;/em&gt;配置します。横書きモードでは、それは &lt;code&gt;under&lt;/code&gt; の同義語です。</target>
        </trans-unit>
        <trans-unit id="5df5480fc9a3cd8df5cf523f4865d4069f3e6da6" translate="yes" xml:space="preserve">
          <source>In vertical writing-modes, this keyword forces the line to be placed on the &lt;em&gt;right&lt;/em&gt; side of the text. In horizontal writing-modes, it is a synonym of &lt;code&gt;under&lt;/code&gt;.</source>
          <target state="translated">縦書きモードでは、このキーワードにより、行がテキストの&lt;em&gt;右側に&lt;/em&gt;配置されます。横書きモードでは、それは &lt;code&gt;under&lt;/code&gt; の同義語です。</target>
        </trans-unit>
        <trans-unit id="6d68d98e7c75afd61a627f9009b0121168ba678d" translate="yes" xml:space="preserve">
          <source>Inactive window border.</source>
          <target state="translated">非アクティブなウィンドウの境界線。</target>
        </trans-unit>
        <trans-unit id="a5813b4444dc1ad919c3de626ebee7feed7784a9" translate="yes" xml:space="preserve">
          <source>Inactive window caption. Should be used with the &lt;code&gt;InactiveCaptionText&lt;/code&gt; foreground color.</source>
          <target state="translated">非アクティブなウィンドウキャプション。 &lt;code&gt;InactiveCaptionText&lt;/code&gt; の前景色で使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8089934e3733c88ac43f87dabb6ec967b17cd302" translate="yes" xml:space="preserve">
          <source>InactiveBorder</source>
          <target state="translated">InactiveBorder</target>
        </trans-unit>
        <trans-unit id="1cf6c7454a5d75134c833f285e60fd42cb8b53a2" translate="yes" xml:space="preserve">
          <source>InactiveCaption</source>
          <target state="translated">InactiveCaption</target>
        </trans-unit>
        <trans-unit id="818983c6c3bd9ae531425923d7d5fd8b144880d4" translate="yes" xml:space="preserve">
          <source>InactiveCaptionText</source>
          <target state="translated">InactiveCaptionText</target>
        </trans-unit>
        <trans-unit id="79a0469d56bc9db66aaeb7ea407a1f6066a46182" translate="yes" xml:space="preserve">
          <source>Inches</source>
          <target state="translated">Inches</target>
        </trans-unit>
        <trans-unit id="c6aac808c0fe6cf21264c2eae13373e7440d5e53" translate="yes" xml:space="preserve">
          <source>Included in the CSS standard are several functions that achieve predefined effects. You can also reference an SVG filter with a URL to an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter&quot;&gt;SVG filter element&lt;/a&gt;.</source>
          <target state="translated">CSS標準には、事前定義された効果を実現するいくつかの関数が含まれています。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter&quot;&gt;SVGフィルター要素&lt;/a&gt;へのURLを使用してSVGフィルターを参照することもできます。</target>
        </trans-unit>
        <trans-unit id="d228f54932c8256b79584f8f94658ef024845c19" translate="yes" xml:space="preserve">
          <source>Includes pauses at both the 0% and 100% marks, effectively adding a step during the animation iteration.</source>
          <target state="translated">0%マークと100%マークの両方で一時停止を含み、アニメーションの反復中に効果的にステップを追加します。</target>
        </trans-unit>
        <trans-unit id="b85655606c29084210e57549b12ffa3aba0c5bec" translate="yes" xml:space="preserve">
          <source>Includes pauses at both the 0% and 100% marks, effectively adding a step during the transition time.</source>
          <target state="translated">0%マークと100%マークの両方で一時停止を含み、トランジションタイムの間に効果的にステップを追加します。</target>
        </trans-unit>
        <trans-unit id="cd3c3a5240fd9c1b5943662f3e39aaacd6293c66" translate="yes" xml:space="preserve">
          <source>Including a custom property as a fallback, as seen in the second example above, is the correct way to provide more than one fallback. The technique has been seen to cause performance issues as it takes more time to parse through the variables.</source>
          <target state="translated">上の 2 番目の例で見られるように、フォールバックとしてカスタムプロパティを含めることは、複数のフォールバックを提供する正しい方法です。この手法は、変数をパースするのに時間がかかるため、パフォーマンスの問題が発生することがわかっています。</target>
        </trans-unit>
        <trans-unit id="1c780f2b742f9bcb2c847ab31e6e0f50a758bdd2" translate="yes" xml:space="preserve">
          <source>Including an id as part of an attribute selector instead of as an id selector gives it the same specificity as a class. Both selectors above now have the same weight. In a specificity tie, the last rule defined wins.</source>
          <target state="translated">id セレクタとしてではなく、属性セレクタの一部として id を含めることで、クラスと同じ特異性が得られます。上記のセレクタは両方とも同じ重みを持つようになりました。特異性が同数の場合は、最後に定義されたルールが勝ちます。</target>
        </trans-unit>
        <trans-unit id="fd0c217bfb6ea4be2c8fd5ef4aa8bbe7717d5817" translate="yes" xml:space="preserve">
          <source>Increases or decreases the image's contrast.</source>
          <target state="translated">画像のコントラストを上げたり下げたりします。</target>
        </trans-unit>
        <trans-unit id="f4479ea9015763b988ec9c037d09c7af9129dcff" translate="yes" xml:space="preserve">
          <source>Incrementing named counters</source>
          <target state="translated">名前付きカウンタのインクリメント</target>
        </trans-unit>
        <trans-unit id="20e888817533e00da62ae38d09764b77ce9f7434" translate="yes" xml:space="preserve">
          <source>Indentation affects the first line of the block container as well as each line after a &lt;em&gt;forced line break&lt;/em&gt;, but does not affect lines after a &lt;em&gt;soft wrap break&lt;/em&gt;.</source>
          <target state="translated">インデントは、&lt;em&gt;強制改行&lt;/em&gt;後のブロックコンテナーの最初の行と各行に影響しますが、&lt;em&gt;ソフトラップブレーク&lt;/em&gt;後の行には影響しません。</target>
        </trans-unit>
        <trans-unit id="093bf9ec6dd856df64bcfd74b77986603f15a122" translate="yes" xml:space="preserve">
          <source>Indentation is a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; of the containing block's width.</source>
          <target state="translated">インデントは、包含ブロックの幅の&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="30b44b23c3d597c381e474b494b2972b81af9d59" translate="yes" xml:space="preserve">
          <source>Indentation is specified as an absolute &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt;. Negative values are allowed. See &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; values for possible units.</source>
          <target state="translated">インデントは、絶対的な&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;として指定されます。負の値を使用できます。可能な単位については、&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; の&lt;/a&gt;値を参照してください。</target>
        </trans-unit>
        <trans-unit id="9fd2f19eefd456f70d1414221221bcdeb9e87aca" translate="yes" xml:space="preserve">
          <source>Indenting It Twice</source>
          <target state="translated">インデントを二重にする</target>
        </trans-unit>
        <trans-unit id="4c9e80176636f1fc59d0db073de76672587d23fa" translate="yes" xml:space="preserve">
          <source>Independent formatting contexts</source>
          <target state="translated">独立した書式設定コンテキスト</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="91ef53c4f9517bb3c703e7f413fb0ba43d954064" translate="yes" xml:space="preserve">
          <source>Index of standard pseudo-classes</source>
          <target state="translated">標準擬似クラスのインデックス</target>
        </trans-unit>
        <trans-unit id="f6204307052013e66ad5d83ee92b09aad581a70d" translate="yes" xml:space="preserve">
          <source>Index of standard pseudo-elements</source>
          <target state="translated">標準擬似要素のインデックス</target>
        </trans-unit>
        <trans-unit id="84a0c33fd26b877b3c88e9990f4c17f8d1ab926b" translate="yes" xml:space="preserve">
          <source>Indicates automatic sizing, based on the flex item&amp;rsquo;s content.</source>
          <target state="translated">フレックスアイテムのコンテンツに基づいて、自動サイズ変更を示します。</target>
        </trans-unit>
        <trans-unit id="9da4f1511994777820f621dd071a9726d189267a" translate="yes" xml:space="preserve">
          <source>Indicates that a bold typeface may be synthesized if needed.</source>
          <target state="translated">必要に応じて太字の書体を合成してもよいことを示す。</target>
        </trans-unit>
        <trans-unit id="06b7e02e457885aff182a02497b250067b0fce96" translate="yes" xml:space="preserve">
          <source>Indicates that all containment rules are applied to the element. This is equivalent to &lt;code&gt;contain: size layout style paint&lt;/code&gt;.</source>
          <target state="translated">すべての包含ルールが要素に適用されることを示します。これは、以下を &lt;code&gt;contain: size layout style paint&lt;/code&gt; と同等です：サイズレイアウトスタイルペイント。</target>
        </trans-unit>
        <trans-unit id="a795ae58a4e74d9ce298b6c7fd2aaa6b94f8d2cb" translate="yes" xml:space="preserve">
          <source>Indicates that all containment rules except &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; are applied to the element. This is equivalent to &lt;code&gt;contain: layout paint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; と &lt;code&gt;style&lt;/code&gt; を除くすべての包含ルールが要素に適用されることを示します。これは &lt;code&gt;contain: layout paint&lt;/code&gt; と同等です：layoutpaint。</target>
        </trans-unit>
        <trans-unit id="b762805422363ef9b5572f7f7130608e86400eea" translate="yes" xml:space="preserve">
          <source>Indicates that all containment rules except &lt;code&gt;style&lt;/code&gt; are applied to the element. This is equivalent to &lt;code&gt;contain: size layout paint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;style&lt;/code&gt; を除くすべての包含ルールが要素に適用されることを示します。これは &lt;code&gt;contain: size layout paint&lt;/code&gt; と同等です：size layoutpaint。</target>
        </trans-unit>
        <trans-unit id="6ad4208a44b4fcf08762676713c51991bdb741f8" translate="yes" xml:space="preserve">
          <source>Indicates that all containment rules except size are applied to the element. This is equivalent to &lt;code&gt;contain: layout style paint&lt;/code&gt;.</source>
          <target state="translated">サイズを除くすべての包含ルールが要素に適用されることを示します。これは以下を &lt;code&gt;contain: layout style paint&lt;/code&gt; と同等です：レイアウトスタイルペイント。</target>
        </trans-unit>
        <trans-unit id="ae1511c22d6c8ef47b741153b68c38ebdeb0f395" translate="yes" xml:space="preserve">
          <source>Indicates that an italic typeface may be synthesized if needed.</source>
          <target state="translated">必要に応じてイタリック体を合成してもよいことを示す。</target>
        </trans-unit>
        <trans-unit id="76c967548165c52b6714b82006908a02a0eec5ce" translate="yes" xml:space="preserve">
          <source>Indicates that descendants of the element don't display outside its bounds. If an element is off-screen or otherwise not visible, its descendants are also guaranteed to not be visible.</source>
          <target state="translated">要素の子孫がその範囲外に表示されないことを示します。要素が画面外などで表示されていない場合、その子孫も表示されないことが保証されます。</target>
        </trans-unit>
        <trans-unit id="ab9f1e963520f5776eca9c2518b9432d5eb7ce11" translate="yes" xml:space="preserve">
          <source>Indicates that descendants of the element don't display outside its bounds. If the containing box is offscreen, the browser does not need to paint its contained elements &amp;mdash; these must also be offscreen as they are contained completely by that box. And if a descendant overflows the containing element's bounds, then that descendant will be clipped to the containing element's border-box.</source>
          <target state="translated">要素の子孫がその境界の外に表示されないことを示します。含まれているボックスが画面外にある場合、ブラウザは含まれている要素をペイントする必要はありません。これらも、そのボックスに完全に含まれているため、画面外にある必要があります。また、子孫が含まれている要素の境界を超えた場合、その子孫は含まれている要素の境界ボックスにクリップされます。</target>
        </trans-unit>
        <trans-unit id="a5112ef89e511f7ea1df44a289c8dc5aa35d2fe3" translate="yes" xml:space="preserve">
          <source>Indicates that forced colors mode is active. The browser provides the color palette to authors through the &lt;a href=&quot;../color_value#System_Colors&quot;&gt;CSS system color&lt;/a&gt; keywords and, if appropriate, it triggers the appropriate value of &lt;code&gt;&lt;a href=&quot;prefers-color-scheme&quot;&gt;prefers-color-scheme&lt;/a&gt;&lt;/code&gt; so that authors can adapt the page.</source>
          <target state="translated">強制カラーモードがアクティブであることを示します。ブラウザは、&lt;a href=&quot;../color_value#System_Colors&quot;&gt;CSSシステムのcolor&lt;/a&gt;キーワードを介して作成者にカラーパレットを提供し、必要に応じて、 &lt;code&gt;&lt;a href=&quot;prefers-color-scheme&quot;&gt;prefers-color-scheme&lt;/a&gt;&lt;/code&gt; 適切な値をトリガーして、作成者がページを適応できるようにします。</target>
        </trans-unit>
        <trans-unit id="b9992dd4ebf40c2133057f97bed4903e88f20514" translate="yes" xml:space="preserve">
          <source>Indicates that hyphenation is not limited based on the number of consecutive hyphenated lines. In the flow above the consecutive hyphenated lines limit would be an infinitely large positive number.</source>
          <target state="translated">ハイフネーションが連続するハイフネーション行の数に基づいて制限されていないことを示す。上記のフローでは、連続するハイフネーション行数の制限は無限に大きい正の数となる。</target>
        </trans-unit>
        <trans-unit id="fce2380a3e316508bd6ae6abc7c0b4bc64455f31" translate="yes" xml:space="preserve">
          <source>Indicates that neither bold nor italic typeface may be synthesized.</source>
          <target state="translated">太字もイタリックも合成できないことを示す。</target>
        </trans-unit>
        <trans-unit id="7af515e5ff5e0048ca2802888ef41138e63bd912" translate="yes" xml:space="preserve">
          <source>Indicates that no perspective transform is to be applied.</source>
          <target state="translated">透視変換が適用されないことを示します。</target>
        </trans-unit>
        <trans-unit id="04ef9fb75a3714493eee24701fb447034362686f" translate="yes" xml:space="preserve">
          <source>Indicates that nothing outside the element may affect its internal layout and vice versa.</source>
          <target state="translated">要素の外部には何もなくても内部レイアウトに影響を与えないことを示します。</target>
        </trans-unit>
        <trans-unit id="0d87d74e4af4b0f82017bad2520c93e6278d23bd" translate="yes" xml:space="preserve">
          <source>Indicates that the author expects to animate or change something about the element&amp;rsquo;s contents in the near future.</source>
          <target state="translated">作成者が近いうちに要素のコンテンツについて何かをアニメーション化または変更することを期待していることを示します。</target>
        </trans-unit>
        <trans-unit id="3d21f995e0e60859e2e4e5d259a4e2d08a471ac6" translate="yes" xml:space="preserve">
          <source>Indicates that the author expects to animate or change the property with the given name on the element in the near future. If the property given is a shorthand, it indicates the expectation for all the longhands the shorthand expands to. It cannot be one of the following values: &lt;code&gt;unset&lt;/code&gt;, &lt;code&gt;initial&lt;/code&gt;, &lt;code&gt;inherit&lt;/code&gt;, &lt;code&gt;will-change&lt;/code&gt;, &lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;scroll-position&lt;/code&gt;, or &lt;code&gt;contents&lt;/code&gt;. The spec doesn't define the behavior of particular value, but it is common for &lt;code&gt;transform&lt;/code&gt; to be a compositing layer hint. &lt;a href=&quot;https://github.com/operasoftware/devopera/pull/330&quot;&gt;Chrome currently takes two actions&lt;/a&gt;, given particular CSS property idents: establish a new compositing layer or a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/stacking_context&quot;&gt;stacking context&lt;/a&gt;.</source>
          <target state="translated">近い将来、作成者が要素の特定の名前のプロパティをアニメーション化または変更することを期待していることを示します。与えられたプロパティが速記である場合、それは速記が展開するすべての速記の期待を示します。 &lt;code&gt;unset&lt;/code&gt; 、 &lt;code&gt;initial&lt;/code&gt; 、 &lt;code&gt;inherit&lt;/code&gt; 、 &lt;code&gt;will-change&lt;/code&gt; 、 &lt;code&gt;auto&lt;/code&gt; 、 &lt;code&gt;scroll-position&lt;/code&gt; 、または &lt;code&gt;contents&lt;/code&gt; のいずれかの値にすることはできません。仕様は特定の値の動作を定義していませんが、 &lt;code&gt;transform&lt;/code&gt; が合成レイヤーのヒントであることが一般的です。&lt;a href=&quot;https://github.com/operasoftware/devopera/pull/330&quot;&gt;Chromeは現在&lt;/a&gt;、特定のCSSプロパティIDを指定して、2つのアクションを実行します。新しい合成レイヤーを確立するか、新しい&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/stacking_context&quot;&gt;スタッキングコンテキスト&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="376a6b6761a1236cbc5ca78b950ad38728dc3262" translate="yes" xml:space="preserve">
          <source>Indicates that the author expects to animate or change the scroll position of the element in the near future.</source>
          <target state="translated">作者が近い将来、要素のスクロール位置をアニメーション化したり変更したりすることを期待していることを示します。</target>
        </trans-unit>
        <trans-unit id="d85757f4706dbef331f1e9ad56eef357581956ff" translate="yes" xml:space="preserve">
          <source>Indicates that the children of the element are lying in the plane of the element itself.</source>
          <target state="translated">要素の子が要素自体の平面に横たわっていることを示す。</target>
        </trans-unit>
        <trans-unit id="8657d0e7e94e8a29012df19a8b56b51588223ebf" translate="yes" xml:space="preserve">
          <source>Indicates that the children of the element should be positioned in the 3D-space.</source>
          <target state="translated">要素の子が3D空間に配置されるべきであることを示します。</target>
        </trans-unit>
        <trans-unit id="900e692bdd75bdd19e0e08f1766c6b02f6a35ab7" translate="yes" xml:space="preserve">
          <source>Indicates that the element can be sized without the need to examine its descendants for size changes.</source>
          <target state="translated">子孫のサイズ変更を調べる必要なく、要素のサイズを変更できることを示します。</target>
        </trans-unit>
        <trans-unit id="ddc8e8101d3567c62a1087579d7df98bc54a09fc" translate="yes" xml:space="preserve">
          <source>Indicates that the element can be sized without the need to examine its descendants' sizes.</source>
          <target state="translated">要素の子孫のサイズを調べる必要がなく、その要素のサイズを決めることができることを示す。</target>
        </trans-unit>
        <trans-unit id="c9afdaadca5f930e0afcb841e7c0b0e523049632" translate="yes" xml:space="preserve">
          <source>Indicates that the motion of the content after the contact is picked up &lt;em&gt;may&lt;/em&gt; be adjusted if the content would normally stop &quot;close enough&quot; to a snap-point. This implies that it is possible for the content zoom factor to end up between snap-points.</source>
          <target state="translated">コンテンツが通常スナップポイントに「十分に近い」位置で停止する場合、連絡先をピックアップした後のコンテンツの動きを調整&lt;em&gt;できる&lt;/em&gt;ことを示します。これは、コンテンツのズーム率がスナップポイント間で終わる可能性があることを意味します。</target>
        </trans-unit>
        <trans-unit id="b7248b1f2ea440b2a27159e8f685d427450ccbae" translate="yes" xml:space="preserve">
          <source>Indicates that the motion of the content after the contact is picked up is &lt;em&gt;always&lt;/em&gt; adjusted so that it lands on a snap-point. The snap-point that is selected is the one that is closest to where the content zoom factor would normally stop.</source>
          <target state="translated">連絡先がピックアップされた後のコンテンツの動きが&lt;em&gt;常に&lt;/em&gt;調整され、スナップポイントに着地することを示します。選択されるスナップポイントは、コンテンツのズーム係数が通常停止する場所に最も近いものです。</target>
        </trans-unit>
        <trans-unit id="d94ae74d78a0d8167beb4e4910395de4a20161b6" translate="yes" xml:space="preserve">
          <source>Indicates that the subsequent styling rules will be applied when the system is placed in high contrast mode with a black-on-white color variation.</source>
          <target state="translated">システムが黒と白のカラーバリエーションでハイコントラストモードに置かれたときに、その後のスタイリングルールが適用されることを示します。</target>
        </trans-unit>
        <trans-unit id="8fa0837a7b17822f6fc62fe841ad4c975a17baef" translate="yes" xml:space="preserve">
          <source>Indicates that the subsequent styling rules will be applied when the system is placed in high contrast mode with a white-on-black color variation.</source>
          <target state="translated">システムが白と黒のカラーバリエーションでハイコントラストモードに置かれたときに、後続のスタイリングルールが適用されることを示します。</target>
        </trans-unit>
        <trans-unit id="5f33e7aedbb6a523ec537d9ae4879bcfc5f48fcf" translate="yes" xml:space="preserve">
          <source>Indicates that the subsequent styling rules will be applied when the system is placed in high contrast mode with any color variation.</source>
          <target state="translated">システムを高コントラストモードにしたときに、色の変化がある場合に、後続のスタイリングルールが適用されることを示します。</target>
        </trans-unit>
        <trans-unit id="95ff9899c62377575c0a87b3629798d0f3bf743a" translate="yes" xml:space="preserve">
          <source>Indicates that the user has made no preference known to the system.</source>
          <target state="translated">ユーザーがシステムに優先順位を知らされていないことを示します。</target>
        </trans-unit>
        <trans-unit id="e70b1b75b6d335127c51b5bdc8b9d08e0b162261" translate="yes" xml:space="preserve">
          <source>Indicates that the user has made no preference known to the system. This keyword value evaluates as false in a Boolean context.</source>
          <target state="translated">ユーザがシステムに優先順位を知らせていないことを示します。このキーワードの値は、ブール値のコンテキストでは false として評価されます。</target>
        </trans-unit>
        <trans-unit id="183da7c1e68bb6840a5f5a613e56cf8d503cf46e" translate="yes" xml:space="preserve">
          <source>Indicates that the user has made no preference known to the system. This keyword value evaluates as false in the boolean context.</source>
          <target state="translated">ユーザがシステムに優先順位を知らせていないことを示します。このキーワードの値は、ブーリアンコンテキストでは false として評価されます。</target>
        </trans-unit>
        <trans-unit id="7270ae5c64d8b671f0eacae4dc03a17f9feadf46" translate="yes" xml:space="preserve">
          <source>Indicates that there is no explicit grid. Any columns will be implicitly generated and their size will be determined by the &lt;a href=&quot;grid-auto-columns&quot;&gt;&lt;code&gt;grid-auto-columns&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">明示的なグリッドがないことを示します。すべての列は暗黙的に生成され、そのサイズは&lt;a href=&quot;grid-auto-columns&quot;&gt; &lt;code&gt;grid-auto-columns&lt;/code&gt; &lt;/a&gt;プロパティによって決定されます。</target>
        </trans-unit>
        <trans-unit id="3d89eebac074d682543c3627b699da456522eb43" translate="yes" xml:space="preserve">
          <source>Indicates that user has expressed the preference for lightweight alternate content.</source>
          <target state="translated">ユーザーが軽量な代替コンテンツを希望していることを示します。</target>
        </trans-unit>
        <trans-unit id="a7a91cd8435ede3e8f76dbd5898cb0f985c0bbf4" translate="yes" xml:space="preserve">
          <source>Indicates that user has notified the system that they prefer an interface that has a dark theme.</source>
          <target state="translated">ユーザーが暗いテーマのインターフェイスを好むことをシステムに通知したことを示します。</target>
        </trans-unit>
        <trans-unit id="3abaeb70169d405bae91d8c968ecb4f705b8eaf2" translate="yes" xml:space="preserve">
          <source>Indicates that user has notified the system that they prefer an interface that has a higher level of contrast.</source>
          <target state="translated">ユーザーが、よりコントラストの高いインターフェイスを好むことをシステムに通知したことを示します。</target>
        </trans-unit>
        <trans-unit id="6eda3bf85f635dca0cb9385b0d10bab47f63a775" translate="yes" xml:space="preserve">
          <source>Indicates that user has notified the system that they prefer an interface that has a light theme, or has not expressed an active preference.</source>
          <target state="translated">ユーザーがライトテーマのインターフェイスを好むことをシステムに通知したか、または積極的な好みを表明していないことを示します。</target>
        </trans-unit>
        <trans-unit id="c8f87aad9054f0b06d846554f5dac1db8a74145c" translate="yes" xml:space="preserve">
          <source>Indicates that user has notified the system that they prefer an interface that has a lower level of contrast.</source>
          <target state="translated">ユーザーが、コントラストの低いインターフェイスを好むことをシステムに通知したことを示します。</target>
        </trans-unit>
        <trans-unit id="8e9c9dd712a6bc67161319559b764237e6c1df1f" translate="yes" xml:space="preserve">
          <source>Indicates that user has notified the system that they prefer an interface that minimizes the amount of movement or animation, preferably to the point where all non-essential movement is removed.</source>
          <target state="translated">ユーザーが、動きやアニメーションの量を最小限に抑えたインターフェースを好むことをシステムに通知したことを示します。</target>
        </trans-unit>
        <trans-unit id="2cb6d269796cb31ad5738cc6f0704c6c2409cf1e" translate="yes" xml:space="preserve">
          <source>Indicates that user has notified the system that they prefer an interface that minimizes the amount of transparent or translucent layer effects.</source>
          <target state="translated">ユーザーが、透明または半透明のレイヤー効果を最小限に抑えるインターフェイスを好むことをシステムに通知したことを示します。</target>
        </trans-unit>
        <trans-unit id="4a1400f9656dfe7c598c6bee08f5387376763416" translate="yes" xml:space="preserve">
          <source>Indicates that user has notified the system that they prefer an interface that removes or replaces the types of motion-based animation that trigger discomfort for those with vestibular motion disorders.</source>
          <target state="translated">前庭運動障害者の不快感の引き金となるモーションベースのアニメーションの種類を削除したり置き換えたりするインターフェイスを希望することをユーザーがシステムに通知したことを示します。</target>
        </trans-unit>
        <trans-unit id="599b3405595517238644e81150c0148e6c603549" translate="yes" xml:space="preserve">
          <source>Indicates that, for properties that can have effects on more than just an element and its descendants, those effects don't escape the containing element.</source>
          <target state="translated">要素とその子孫だけではなく、複数の要素に影響を与えることができるプロパティについては、それらの影響が含まれる要素をエスケープしないことを示します。</target>
        </trans-unit>
        <trans-unit id="15c92c5555f0892d00957fc455dec81bc93379ee" translate="yes" xml:space="preserve">
          <source>Indicates that, for properties that can have effects on more than just an element and its descendants, those effects don't escape the containing element. Note that this value is marked &quot;at-risk&quot; in the spec and may not be supported everywhere.</source>
          <target state="translated">要素とその子孫だけでなく、複数の要素に影響を与えることができるプロパティの場合、それらの影響が含まれる要素をエスケープしないことを示します。この値は仕様では &quot;at-risk &quot;とマークされており、すべての場所でサポートされているわけではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="eac8d93f17aa617efa9f7d24e607782a7a610b3a" translate="yes" xml:space="preserve">
          <source>Indicates the applicable CSS properties &lt;em&gt;will not&lt;/em&gt; be adjusted when the system is in high contrast mode.</source>
          <target state="translated">システムがハイコントラストモードのときに、該当するCSSプロパティ&lt;em&gt;が&lt;/em&gt;調整&lt;em&gt;されない&lt;/em&gt;ことを示します。</target>
        </trans-unit>
        <trans-unit id="184dbe0e24e2a9d65b78e649559a50b605bcc0bf" translate="yes" xml:space="preserve">
          <source>Indicates the applicable CSS properties &lt;em&gt;will&lt;/em&gt; be adjusted as expected when the system is in high contrast mode.</source>
          <target state="translated">システムがハイコントラストモードのときに、該当するCSSプロパティ&lt;em&gt;が&lt;/em&gt;期待どおりに調整されることを示します。</target>
        </trans-unit>
        <trans-unit id="14946a92dd72a9ab17ac591a0616c5060511fd0b" translate="yes" xml:space="preserve">
          <source>Indicates the element renders as normal, with no containment applied.</source>
          <target state="translated">要素が通常通りにレンダリングされていることを示します。</target>
        </trans-unit>
        <trans-unit id="c936a53222ff1ddf11f85c45d07e632fcb291642" translate="yes" xml:space="preserve">
          <source>Indicates the maximum number of successive hyphenated lines.</source>
          <target state="translated">ハイフンで区切られた連続した行の最大数を示す。</target>
        </trans-unit>
        <trans-unit id="7fa6b5b51639cebe6128a3c2add3611ab1953e9c" translate="yes" xml:space="preserve">
          <source>Indicates the optimal column width. The actual column width may differ from the specified value: it may be wider when necessary to fill available space, and narrower when the available space is too small. The value must be strictly positive or the declaration is invalid. Percentage values are also invalid.</source>
          <target state="translated">最適な列幅を示します。実際の列の幅は指定された値とは異なる場合があります:利用可能なスペースを埋めるために必要な場合は幅を広くし、利用可能なスペースが小さすぎる場合は幅を狭くすることがあります。値は厳密に正の値でなければならず、その宣言は無効です。パーセンテージ値も無効です。</target>
        </trans-unit>
        <trans-unit id="05d5510b9160aed74036ac6bf28168bd54e9b7a6" translate="yes" xml:space="preserve">
          <source>Indicates the position of the abscissa of the &lt;em&gt;vanishing point&lt;/em&gt;. It can have one of the following values:</source>
          <target state="translated">&lt;em&gt;消失点の&lt;/em&gt;横座標の位置を示します。次のいずれかの値をとることができます。</target>
        </trans-unit>
        <trans-unit id="c395f7eef46e27f01c39a344102bab6b2ff826ef" translate="yes" xml:space="preserve">
          <source>Indicates the position of the ordinate of the &lt;em&gt;vanishing point&lt;/em&gt;. It can have one of the following values:</source>
          <target state="translated">&lt;em&gt;消失点の&lt;/em&gt;縦座標の位置を示します。次のいずれかの値をとることができます。</target>
        </trans-unit>
        <trans-unit id="bf58ded585db7cbb7a4bf94cf9e9c01a48849060" translate="yes" xml:space="preserve">
          <source>Indicates the size of the reflection.</source>
          <target state="translated">反射の大きさを示します。</target>
        </trans-unit>
        <trans-unit id="1003d6bea2a485076df105e8657082f84cb14697" translate="yes" xml:space="preserve">
          <source>Indicating Overflow</source>
          <target state="translated">オーバーフローの表示</target>
        </trans-unit>
        <trans-unit id="fd460920298c8557b897209822f333dc6c296947" translate="yes" xml:space="preserve">
          <source>Indicating logical values for the 4-value shorthand syntax</source>
          <target state="translated">4値速記構文の論理値の表示</target>
        </trans-unit>
        <trans-unit id="77ae426b4e83a554425f4e94862fc66af1e0aa4d" translate="yes" xml:space="preserve">
          <source>Indicating valid and invalid form fields</source>
          <target state="translated">有効なフォームフィールドと無効なフォームフィールドの表示</target>
        </trans-unit>
        <trans-unit id="5bec20640c9694f178e5683ed6cd18a081ca056a" translate="yes" xml:space="preserve">
          <source>InfoBackground</source>
          <target state="translated">InfoBackground</target>
        </trans-unit>
        <trans-unit id="b5f27876abf2ea4ddad97e38037e93d99fafefba" translate="yes" xml:space="preserve">
          <source>InfoText</source>
          <target state="translated">InfoText</target>
        </trans-unit>
        <trans-unit id="923b241351b311e9b28837ac45a9093fd4ed8849" translate="yes" xml:space="preserve">
          <source>Informal definition of &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;ms&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; と &lt;code&gt;ms&lt;/code&gt; の非公式な定義。</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="e0f6d0f76e29d8b06e53fd7c1b8d5dc359ab53ab" translate="yes" xml:space="preserve">
          <source>Inheritance is always from the parent element in the document tree, even when the parent element is not the containing block.</source>
          <target state="translated">継承は、親要素が含まれるブロックではない場合でも、ドキュメントツリー内の親要素から常に継承されます。</target>
        </trans-unit>
        <trans-unit id="25a8f8f6cea5b4f9438b2acefee0a32946cb19bf" translate="yes" xml:space="preserve">
          <source>Inheritance of CSS Variables</source>
          <target state="translated">CSS変数の継承</target>
        </trans-unit>
        <trans-unit id="283b99e4b181f4beac781a60d24db67a4fba3f0f" translate="yes" xml:space="preserve">
          <source>Inheritance of custom properties</source>
          <target state="translated">カスタムプロパティの継承</target>
        </trans-unit>
        <trans-unit id="58823af05ebe1ba3ff034e5ec492dcbd5b2f86cc" translate="yes" xml:space="preserve">
          <source>Inherited</source>
          <target state="translated">Inherited</target>
        </trans-unit>
        <trans-unit id="7951150c36a5b0078509be63ec158d0a10f3f90a" translate="yes" xml:space="preserve">
          <source>Inherited properties</source>
          <target state="translated">継承されたプロパティ</target>
        </trans-unit>
        <trans-unit id="77cd3f14829b11dee5420e5b5e5777cc5a714a44" translate="yes" xml:space="preserve">
          <source>Inherited value</source>
          <target state="translated">継承値</target>
        </trans-unit>
        <trans-unit id="035932ce61bd03f6681a2dfbb742b6af7b651dcc" translate="yes" xml:space="preserve">
          <source>Initial Definition</source>
          <target state="translated">初期定義</target>
        </trans-unit>
        <trans-unit id="2d26fae0aedb317af83d87ca1df3865ec1154118" translate="yes" xml:space="preserve">
          <source>Initial SVG definition.</source>
          <target state="translated">SVG の初期定義。</target>
        </trans-unit>
        <trans-unit id="9e915d7086e42ba7ad8fb470ce6fd37be732353b" translate="yes" xml:space="preserve">
          <source>Initial definition</source>
          <target state="translated">初期定義</target>
        </trans-unit>
        <trans-unit id="25f9a77cf783f16036629e79a731b48c703cdd57" translate="yes" xml:space="preserve">
          <source>Initial definition (applies to SVG elements only).</source>
          <target state="translated">初期定義(SVG要素のみに適用)。</target>
        </trans-unit>
        <trans-unit id="be21f42d3ed27ed84c0f128489c282b6dc7f7347" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;a href=&quot;basic_concepts_of_grid_layout#Subgrid&quot;&gt;subgrids&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;basic_concepts_of_grid_layout#Subgrid&quot;&gt;サブグリッドの&lt;/a&gt;初期定義。</target>
        </trans-unit>
        <trans-unit id="bcdb1848d9a7677764c345d6cdeb081e3fc56993" translate="yes" xml:space="preserve">
          <source>Initial definition of image.</source>
          <target state="translated">画像の初期定義。</target>
        </trans-unit>
        <trans-unit id="43f35102ff369a7b5b49091d60b363261ae0153f" translate="yes" xml:space="preserve">
          <source>Initial definition under &quot;length units&quot;</source>
          <target state="translated">長さの単位」での初期定義</target>
        </trans-unit>
        <trans-unit id="40f14a9f5c25314a9bd140e8078d6763887c11a2" translate="yes" xml:space="preserve">
          <source>Initial definition, but without the associated semantics.</source>
          <target state="translated">初期定義ですが、関連するセマンティクスはありません。</target>
        </trans-unit>
        <trans-unit id="be24ed67a94593fc3cd4c6e53624d888aa659ee2" translate="yes" xml:space="preserve">
          <source>Initial definition, using the one-colon syntax</source>
          <target state="translated">1コロン構文を使用した初期定義</target>
        </trans-unit>
        <trans-unit id="74002d7e78de203b29aeda48d3f886aec4698673" translate="yes" xml:space="preserve">
          <source>Initial definition, using the one-colon syntax.</source>
          <target state="translated">1 コロン構文を使用した初期定義。</target>
        </trans-unit>
        <trans-unit id="1996078361460df53a1d2f9e9930c7c26d7f873c" translate="yes" xml:space="preserve">
          <source>Initial definition.</source>
          <target state="translated">初期定義。</target>
        </trans-unit>
        <trans-unit id="975bf7141a91d3278ea71022c906bc08dfca1acd" translate="yes" xml:space="preserve">
          <source>Initial definition. Also defines &lt;code&gt;-webkit-user-select&lt;/code&gt; as a deprecated alias of &lt;code&gt;user-select&lt;/code&gt;.</source>
          <target state="translated">初期定義。また、 &lt;code&gt;-webkit-user-select&lt;/code&gt; を、非推奨の &lt;code&gt;user-select&lt;/code&gt; のエイリアスとして定義します。</target>
        </trans-unit>
        <trans-unit id="c881fe0a09349713c32f429bd8895f5e7a934a99" translate="yes" xml:space="preserve">
          <source>Initial definition. Basic values: &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;block&lt;/code&gt;, &lt;code&gt;inline&lt;/code&gt; and &lt;code&gt;list-item&lt;/code&gt;.</source>
          <target state="translated">初期定義。基本値： &lt;code&gt;none&lt;/code&gt; 、 &lt;code&gt;block&lt;/code&gt; 、 &lt;code&gt;inline&lt;/code&gt; および &lt;code&gt;list-item&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b00e221ec42d16a3691742b1d94b2f3055dc8fc" translate="yes" xml:space="preserve">
          <source>Initial definition. Basic values: &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;block&lt;/code&gt;, &lt;code&gt;inline&lt;/code&gt;, and &lt;code&gt;list-item&lt;/code&gt;.</source>
          <target state="translated">初期定義。基本値： &lt;code&gt;none&lt;/code&gt; 、 &lt;code&gt;block&lt;/code&gt; 、 &lt;code&gt;inline&lt;/code&gt; 、および &lt;code&gt;list-item&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="820f9617dae68b20d995506d46f6cd36ecf7165f" translate="yes" xml:space="preserve">
          <source>Initial definition. Before this, there was no explicitly defined &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; data type. Images could only be defined using the &lt;code&gt;url()&lt;/code&gt; functional notation.</source>
          <target state="translated">初期定義。これまでは、明示的に定義された &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; データ型はありませんでした。画像は、 &lt;code&gt;url()&lt;/code&gt; 関数表記を使用してのみ定義できます。</target>
        </trans-unit>
        <trans-unit id="0e5e02957a963cbf342e1ec02bd394976b39e866" translate="yes" xml:space="preserve">
          <source>Initial definition. Extends the CSS 2.1 &lt;a href=&quot;page-break-after&quot;&gt;&lt;code&gt;page-break-after&lt;/code&gt;&lt;/a&gt; property to handle both page and column breaks.</source>
          <target state="translated">初期定義。CSS 2.1の&lt;a href=&quot;page-break-after&quot;&gt; &lt;code&gt;page-break-after&lt;/code&gt; &lt;/a&gt;プロパティを拡張して、改ページと改ページの両方を処理します。</target>
        </trans-unit>
        <trans-unit id="11bfc68ae6c8c49814fdb235700ad53880c4f8e9" translate="yes" xml:space="preserve">
          <source>Initial definition. Extends the CSS 2.1 &lt;a href=&quot;page-break-before&quot;&gt;&lt;code&gt;page-break-before&lt;/code&gt;&lt;/a&gt; property to handle both page and column breaks.</source>
          <target state="translated">初期定義。CSS 2.1の&lt;a href=&quot;page-break-before&quot;&gt; &lt;code&gt;page-break-before&lt;/code&gt; &lt;/a&gt;プロパティを拡張して、改ページと改ページの両方を処理します。</target>
        </trans-unit>
        <trans-unit id="8265e9e013bec7297a2f42d5d894e5dd3e263062" translate="yes" xml:space="preserve">
          <source>Initial definition. Implicit definition of the &lt;code&gt;em&lt;/code&gt;, &lt;code&gt;pt&lt;/code&gt;, &lt;code&gt;pc&lt;/code&gt;, and &lt;code&gt;px&lt;/code&gt; units.</source>
          <target state="translated">初期定義。 &lt;code&gt;em&lt;/code&gt; 、 &lt;code&gt;pt&lt;/code&gt; 、 &lt;code&gt;pc&lt;/code&gt; 、および &lt;code&gt;px&lt;/code&gt; ユニットの暗黙的な定義。</target>
        </trans-unit>
        <trans-unit id="d41db0dc231852b17d289f05356651e798841a6e" translate="yes" xml:space="preserve">
          <source>Initial definition. Includes 16 basic color keywords.</source>
          <target state="translated">初期定義。基本色のキーワード16個を含む。</target>
        </trans-unit>
        <trans-unit id="53c9c50b1d1b45d614c8c72e019e636f3b7e42dc" translate="yes" xml:space="preserve">
          <source>Initial definition. Makes &lt;code&gt;ime-mode&lt;/code&gt; officially obsolete.</source>
          <target state="translated">初期定義。作り &lt;code&gt;ime-mode&lt;/code&gt; 正式に廃止されました。</target>
        </trans-unit>
        <trans-unit id="0114813b18510cc9f46a860ff2206ec5c42488e5" translate="yes" xml:space="preserve">
          <source>Initial definition. The &lt;a href=&quot;text-decoration&quot;&gt;&lt;code&gt;text-decoration&lt;/code&gt;&lt;/a&gt; property is now a shorthand to define multiple related properties.</source>
          <target state="translated">初期定義。&lt;a href=&quot;text-decoration&quot;&gt; &lt;code&gt;text-decoration&lt;/code&gt; &lt;/a&gt;プロパティが複数の関連プロパティを定義するための速記です。</target>
        </trans-unit>
        <trans-unit id="a5fad50e663339eb69b33c7176d0d59f7ff329be" translate="yes" xml:space="preserve">
          <source>Initial definition. The value must be nonnegative.</source>
          <target state="translated">初期定義。値は非負でなければなりません。</target>
        </trans-unit>
        <trans-unit id="e74dc34a4e35801a72521fe3dc94d638863f8374" translate="yes" xml:space="preserve">
          <source>Initial defintion</source>
          <target state="translated">初期定義</target>
        </trans-unit>
        <trans-unit id="585ca2462f2ae0b7d0d57fb6f5fb89e35c466e8a" translate="yes" xml:space="preserve">
          <source>Initial documentation</source>
          <target state="translated">初期ドキュメント</target>
        </trans-unit>
        <trans-unit id="b05c468492e894bf720cb26fc99830351a2cef87" translate="yes" xml:space="preserve">
          <source>Initial specification</source>
          <target state="translated">初期仕様</target>
        </trans-unit>
        <trans-unit id="b02ab27206424d25f0694d50b2db52af850703cc" translate="yes" xml:space="preserve">
          <source>Initial specification of longhand sub-properties of &lt;a href=&quot;background-position&quot;&gt;&lt;code&gt;background-position&lt;/code&gt;&lt;/a&gt; to match longstanding implementations.</source>
          <target state="translated">長年の実装に一致する&lt;a href=&quot;background-position&quot;&gt; &lt;code&gt;background-position&lt;/code&gt; &lt;/a&gt;のロングハンドサブプロパティの初期仕様。</target>
        </trans-unit>
        <trans-unit id="8f03130f43d80f7b832367da10284552d03021e1" translate="yes" xml:space="preserve">
          <source>Initial specification.</source>
          <target state="translated">初期仕様。</target>
        </trans-unit>
        <trans-unit id="5d15320e0b2f39af3533c8f07c8726c865ff1a13" translate="yes" xml:space="preserve">
          <source>Initial standardization</source>
          <target state="translated">初期標準化</target>
        </trans-unit>
        <trans-unit id="fcb1ddc45496d5bd9bbb1d0e3e24a58c56f33281" translate="yes" xml:space="preserve">
          <source>Initial value</source>
          <target state="translated">初期値</target>
        </trans-unit>
        <trans-unit id="b179b79771c41d76bb6255c3a2fd0a5b15cbf225" translate="yes" xml:space="preserve">
          <source>Initial value. Automatic page breaks (neither forced nor forbidden).</source>
          <target state="translated">初期値。自動改ページ(強制でも禁止でもない)。</target>
        </trans-unit>
        <trans-unit id="5b867e672228b2c0f472a9b14bf9670674172756" translate="yes" xml:space="preserve">
          <source>Initial value. Indicates that zooming is unaffected by any defined snap-points. After the contact is picked up, the content will continue to move with inertia.</source>
          <target state="translated">初期値。ズームが定義されたスナップポイントの影響を受けないことを示します。コンタクトがピックアップされた後、コンテンツは慣性で移動し続けます。</target>
        </trans-unit>
        <trans-unit id="22a3d43a8a94d8aeee1d2bde07e6371306d822f9" translate="yes" xml:space="preserve">
          <source>Initial value. Panning locks to the primary axis of motion.</source>
          <target state="translated">初期値。パンニングは第一の運動軸にロックされます。</target>
        </trans-unit>
        <trans-unit id="3179d2fa68826ec064ce85a0914dcc94f043ba28" translate="yes" xml:space="preserve">
          <source>Initial value. The IME may align the candidate window in any manner.</source>
          <target state="translated">初期値。IMEは、候補ウィンドウを任意の方法で整列させることができます。</target>
        </trans-unit>
        <trans-unit id="c698ce2899083b5c6d74d782ba14dc3a672b594e" translate="yes" xml:space="preserve">
          <source>Initial value. The nearest scrollable parent element begins scrolling when the user hits a scroll limit during any manipulation. No bounce effect is shown.</source>
          <target state="translated">初期値。ユーザが任意の操作中にスクロール限界に達した場合、最も近いスクロール可能な親要素がスクロールを開始します。バウンス効果は表示されません。</target>
        </trans-unit>
        <trans-unit id="d7690a0dd7eb88a67c01543c6f75e8b40a394009" translate="yes" xml:space="preserve">
          <source>Initial versions had bugs on Windows and Linux that broke &lt;a href=&quot;http://crbug.com/114719&quot;&gt;font substitition&lt;/a&gt;, &lt;a href=&quot;http://crbug.com/51973&quot;&gt;small-caps&lt;/a&gt;, &lt;a href=&quot;http://crbug.com/55458&quot;&gt;letter-spacing&lt;/a&gt; or caused &lt;a href=&quot;http://crbug.com/149548&quot;&gt;text to overlap&lt;/a&gt;.</source>
          <target state="translated">初期バージョンにはWindowsとLinuxでバグがあり、&lt;a href=&quot;http://crbug.com/114719&quot;&gt;フォントの置換&lt;/a&gt;、&lt;a href=&quot;http://crbug.com/51973&quot;&gt;スモールキャップス&lt;/a&gt;、&lt;a href=&quot;http://crbug.com/55458&quot;&gt;文字間隔の変更、&lt;/a&gt;または&lt;a href=&quot;http://crbug.com/149548&quot;&gt;テキストのオーバーラップが&lt;/a&gt;発生していました。</target>
        </trans-unit>
        <trans-unit id="d8503593afff2ce7ab9f28538618cc5674ca1103" translate="yes" xml:space="preserve">
          <source>Initial versions had bugs on Windows and Linux that broke &lt;a href=&quot;https://crbug.com/114719&quot;&gt;font substitition&lt;/a&gt;, &lt;a href=&quot;https://crbug.com/51973&quot;&gt;small-caps&lt;/a&gt;, &lt;a href=&quot;https://crbug.com/55458&quot;&gt;letter-spacing&lt;/a&gt; or caused &lt;a href=&quot;https://crbug.com/149548&quot;&gt;text to overlap&lt;/a&gt;.</source>
          <target state="translated">初期バージョンには、WindowsとLinuxにバグがあり、&lt;a href=&quot;https://crbug.com/114719&quot;&gt;フォントの置換&lt;/a&gt;、&lt;a href=&quot;https://crbug.com/51973&quot;&gt;スモールキャップス&lt;/a&gt;、&lt;a href=&quot;https://crbug.com/55458&quot;&gt;文字間隔、&lt;/a&gt;または&lt;a href=&quot;https://crbug.com/149548&quot;&gt;テキストのオーバーラップが&lt;/a&gt;発生していました。</target>
        </trans-unit>
        <trans-unit id="57e4f0872386e0adfedf8727302cceaaec297e53" translate="yes" xml:space="preserve">
          <source>Initially a part of &lt;a href=&quot;css_columns&quot;&gt;Multi-column Layout&lt;/a&gt;, the definition of &lt;code&gt;column-gap&lt;/code&gt; has been broadened to include multiple layout methods. Now specified in &lt;a href=&quot;css_box_alignment&quot;&gt;Box Alignment&lt;/a&gt;, it may be used in Multi-column, Flexible Box, and Grid layouts.</source>
          <target state="translated">最初は&lt;a href=&quot;css_columns&quot;&gt;複数列レイアウトの&lt;/a&gt;一部でしたが、 &lt;code&gt;column-gap&lt;/code&gt; 定義が拡張され、複数のレイアウトメソッドが含まれるようになりました。現在、&lt;a href=&quot;css_box_alignment&quot;&gt;ボックスの配置&lt;/a&gt;で指定されており、複数列、フレキシブルボックス、グリッドのレイアウトで使用できます。</target>
        </trans-unit>
        <trans-unit id="7f819f0fdd7faae6988dc89ff48c21b40d5b3007" translate="yes" xml:space="preserve">
          <source>Initially defined in CSS2, the &lt;code&gt;display&lt;/code&gt; property is extended in the &lt;a href=&quot;https://www.w3.org/TR/css-display-3/&quot;&gt;CSS Display Module Level 3&lt;/a&gt;. In addition, some of the terminologies around the display have been updated and clarified in the years since CSS2.</source>
          <target state="translated">CSS2で最初に定義された &lt;code&gt;display&lt;/code&gt; プロパティは、&lt;a href=&quot;https://www.w3.org/TR/css-display-3/&quot;&gt;CSS Display Module Level3で&lt;/a&gt;拡張されています。さらに、CSS2以降、ディスプレイに関するいくつかの用語が更新され、明確になりました。</target>
        </trans-unit>
        <trans-unit id="9ef4d6238de3ab9e8afea7755189c1b37ce62606" translate="yes" xml:space="preserve">
          <source>Initially, Android supported only &lt;code&gt;-webkit-&lt;/code&gt; prefixed values for gradients (such as &lt;code&gt;-webkit-linear-gradient()&lt;/code&gt;). Later, support for unprefixed values was added.</source>
          <target state="translated">最初は、Android はグラデーションの &lt;code&gt;-webkit-&lt;/code&gt; 接頭辞付きの値（ &lt;code&gt;-webkit-linear-gradient()&lt;/code&gt; など）のみをサポートしていました。その後、接頭辞なしの値のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="5afb06ad5cff85e7aab9df2741bbe1e500a4c851" translate="yes" xml:space="preserve">
          <source>Initially, Safari supported only &lt;code&gt;-webkit-&lt;/code&gt; prefixed values for gradients (such as &lt;code&gt;-webkit-linear-gradient()&lt;/code&gt;). Later, support for unprefixed values was added.</source>
          <target state="translated">当初、Safariは、グラデーションの &lt;code&gt;-webkit-&lt;/code&gt; 接頭辞付きの値（ &lt;code&gt;-webkit-linear-gradient()&lt;/code&gt; など）のみをサポートしていました。その後、接頭辞なしの値のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="4182789e6b08cacc7ea8522616b671011bdfaf6d" translate="yes" xml:space="preserve">
          <source>Ink overflow and scrollable overflow</source>
          <target state="translated">インクのオーバーフローとスクロール可能なオーバーフロー</target>
        </trans-unit>
        <trans-unit id="f055d0330dcd4f8001e2f0f635457d549e9f013c" translate="yes" xml:space="preserve">
          <source>Inline box fragments</source>
          <target state="translated">インラインボックスフラグメント</target>
        </trans-unit>
        <trans-unit id="137e1b8d6c6f75683116fe1f1fea9b6f42354c9f" translate="yes" xml:space="preserve">
          <source>Inline dimension</source>
          <target state="translated">インライン寸法</target>
        </trans-unit>
        <trans-unit id="65a228b7147b9d8893c482dc6a5436ee38235915" translate="yes" xml:space="preserve">
          <source>Inline elements</source>
          <target state="translated">インライン要素</target>
        </trans-unit>
        <trans-unit id="189209b5b5c0f80ace73914d798e8e289f685f21" translate="yes" xml:space="preserve">
          <source>Inline elements display one after the other in the direction that sentences run in that particular writing mode. While we don&amp;rsquo;t tend to think of inline elements as having a box, as with everything in CSS they do. These inline boxes are arranged one after the other. If there is not enough space in the containing block for all of the boxes a box can break onto a new line. The lines created are known as line boxes.</source>
          <target state="translated">インライン要素は、その特定の書き込みモードで文が実行される方向に次々に表示されます。CSSのすべての要素のように、インライン要素をボックスがあると考えることはあまりありませんが、これらのインラインボックスは次々に配置されます。すべてのボックスの収容ブロックに十分なスペースがない場合、ボックスは新しい行に分割できます。作成された線は、線ボックスと呼ばれます。</target>
        </trans-unit>
        <trans-unit id="20843c01ad0d057ce0fe075fea74d61732633b79" translate="yes" xml:space="preserve">
          <source>Inline flow content can flow on all sides of the exclusion.</source>
          <target state="translated">インラインフローのコンテンツは、排除の四方八方に流れる可能性があります。</target>
        </trans-unit>
        <trans-unit id="69eeba21eb1d72d396cbd8c1b775dc045bc6dc2c" translate="yes" xml:space="preserve">
          <source>Inline flow content can only wrap on top and bottom of the exclusion and must leave empty the areas to the start and end edges of the exclusion box.</source>
          <target state="translated">インラインフロー内容は、除外の上と下にのみ折り返すことができ、除外ボックスの開始と終了の端までの領域は空にしておく必要があります。</target>
        </trans-unit>
        <trans-unit id="2128f1864e27a46db7ace35ab572513a1fb52d82" translate="yes" xml:space="preserve">
          <source>Inline flow content can wrap after the end edge of the exclusion area but must leave empty the area before the start edge of the exclusion area.</source>
          <target state="translated">インラインフロー内容は、除外領域の終了端の後に折り返すことができますが、除外領域の開始端の前の領域は空にしておく必要があります。</target>
        </trans-unit>
        <trans-unit id="66b27e6e016c561d706617b44a135f54dcd6f487" translate="yes" xml:space="preserve">
          <source>Inline flow content can wrap on the side of the exclusion with the largest available space for the given line, and must leave empty the other side of the exclusion.</source>
          <target state="translated">インラインフローコンテンツは、指定された行に対して最大の利用可能スペースを持つ除外の側で折り返すことができ、除外の反対側は空にしておく必要があります。</target>
        </trans-unit>
        <trans-unit id="87a509c4e2ce1661312286b0c6871e538f6dbe43" translate="yes" xml:space="preserve">
          <source>Inline flow content can wrap on the start edge of the exclusion area but must leave empty the area after the end edge of the exclusion area.</source>
          <target state="translated">インラインフロー内容は、除外領域の開始端で折り返すことができますが、除外領域の終了端の後の領域は空にしておく必要があります。</target>
        </trans-unit>
        <trans-unit id="4263a4b56c6dd5421989e6606d82b8984365dcb4" translate="yes" xml:space="preserve">
          <source>Inline formatting contexts</source>
          <target state="translated">インラインの書式設定コンテキスト</target>
        </trans-unit>
        <trans-unit id="c7f473cd7de116c37a1857b8ead84e3f0bc86fe6" translate="yes" xml:space="preserve">
          <source>Inline formatting contexts exist inside other formatting contexts and can be thought of as the context of a paragraph. The paragraph creates an inline formatting context inside which such things as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong&quot;&gt;&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; elements are used on text.</source>
          <target state="translated">インラインフォーマットコンテキストは、他のフォーマットコンテキスト内に存在し、段落のコンテキストと考えることができます。この段落は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong&quot;&gt; &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;要素などがテキストで使用されるインラインフォーマットコンテキストを作成します。</target>
        </trans-unit>
        <trans-unit id="da86e7e07ef125ab7771aae6787d426ed6424d34" translate="yes" xml:space="preserve">
          <source>Inline formatting contexts exist inside other formatting contexts and can be thought of as the context of a paragraph. The paragraph creates an inline formatting context inside which such things as &lt;code&gt;strong&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, or &lt;code&gt;span&lt;/code&gt; elements are used on text.</source>
          <target state="translated">インライン書式設定コンテキストは他の書式設定コンテキスト内に存在し、段落のコンテキストと考えることができます。段落は、テキスト内で &lt;code&gt;strong&lt;/code&gt; 、 &lt;code&gt;a&lt;/code&gt; 、または &lt;code&gt;span&lt;/code&gt; 要素などが使用されるインライン書式設定コンテキストを作成します。</target>
        </trans-unit>
        <trans-unit id="f386eab51dee9de6029b4b6151fe84bed24ca95c" translate="yes" xml:space="preserve">
          <source>Inline layout mode</source>
          <target state="translated">インラインレイアウトモード</target>
        </trans-unit>
        <trans-unit id="ab5a70452dbadf33e1d51d91e88905850bf3fbbf" translate="yes" xml:space="preserve">
          <source>Inline styles added to an element (e.g., &lt;code&gt;style=&quot;font-weight: bold;&quot;&lt;/code&gt;) always overwrite any styles in external stylesheets, and thus can be thought of as having the highest specificity.</source>
          <target state="translated">要素に追加されたインラインスタイル（例： &lt;code&gt;style=&quot;font-weight: bold;&quot;&lt;/code&gt; ）は、常に外部スタイルシートのスタイルを上書きするため、最も具体性が高いと考えることができます。</target>
        </trans-unit>
        <trans-unit id="dd29783f5b6e9b0fddfced518bfe6f412b88e6db" translate="yes" xml:space="preserve">
          <source>Inline-Axis Overflow</source>
          <target state="translated">インライン軸オーバーフロー</target>
        </trans-unit>
        <trans-unit id="e8a9ca7c35cc02b13a7f4de74002ce244eb679c9" translate="yes" xml:space="preserve">
          <source>Inline-level and block-level boxes</source>
          <target state="translated">インラインレベルとブロックレベルのボックス</target>
        </trans-unit>
        <trans-unit id="a7dbe78d2335a5d5bd4daf2aa3a1210c1150efce" translate="yes" xml:space="preserve">
          <source>Inline-level elements and inline boxes</source>
          <target state="translated">インラインレベルの要素とインラインボックス</target>
        </trans-unit>
        <trans-unit id="992f014d4ba6df78f03b431f2889ec23bd37a7ef" translate="yes" xml:space="preserve">
          <source>Inline-level elements generate &lt;em&gt;inline-level boxes&lt;/em&gt; that are defined as boxes participating to an &lt;a href=&quot;inline_formatting_context&quot;&gt;inline formatting context&lt;/a&gt;. &lt;em&gt;Inline boxes&lt;/em&gt; are both inline-level boxes and boxes, whose contents participate in their container's inline formatting context. This is the case, for example, for all non-replaced boxes with &lt;code&gt;display:inline&lt;/code&gt;. Inline-level boxes, whose contents do not participate in an inline formatting context, are called &lt;em&gt;atomic inline-level boxes&lt;/em&gt;. These boxes, generated by replaced inline-level elements or by elements with a calculated &lt;a href=&quot;display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; value of &lt;code&gt;inline-block&lt;/code&gt; or &lt;code&gt;inline-table&lt;/code&gt;, are never split into several boxes, as is possible with inline boxes.</source>
          <target state="translated">インラインレベルの要素は、&lt;a href=&quot;inline_formatting_context&quot;&gt;インラインフォーマットコンテキストに&lt;/a&gt;参加するボックスとして定義される&lt;em&gt;インラインレベルのボックス&lt;/em&gt;を生成します。&lt;em&gt;インラインボックス&lt;/em&gt;は、インラインレベルのボックスとボックスの両方であり、その内容はコンテナーのインラインフォーマットコンテキストに参加します。これは、たとえば、 &lt;code&gt;display:inline&lt;/code&gt; を持つすべての非置換ボックスの場合です。インラインレベルのボックスは、その内容がインラインの書式設定コンテキストに含まれていないため、&lt;em&gt;アトミックインラインレベルのボックス&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。これらのボックスは、置き換えられたインラインレベルの要素、または計算された&lt;a href=&quot;display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt;値 &lt;code&gt;inline-block&lt;/code&gt; または &lt;code&gt;inline-table&lt;/code&gt; を持つ要素によって生成されます。、インラインボックスで可能なように、複数のボックスに分割されることはありません。</target>
        </trans-unit>
        <trans-unit id="8deed4efac89dc1076983f50d9dda54976214d59" translate="yes" xml:space="preserve">
          <source>Inside</source>
          <target state="translated">Inside</target>
        </trans-unit>
        <trans-unit id="f6c75dc74d1bbc1afebd3b7c8e613f09e5bb437d" translate="yes" xml:space="preserve">
          <source>Inside our grid container I have four child elements. If we do not place these on to the grid in any way they will lay out according to the auto-placement rules, one item in each of the first four cells. If you use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/How_to/Examine_grid_layouts&quot;&gt;Firefox Grid Highlighter&lt;/a&gt; you can see how the grid has defined columns and rows.</source>
          <target state="translated">グリッドコンテナー内には、4つの子要素があります。これらをグリッドに配置しない場合、自動配置ルールに従ってレイアウトされます。最初の4つのセルのそれぞれに1つのアイテムが配置されます。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/How_to/Examine_grid_layouts&quot;&gt;Firefoxグリッドハイライター&lt;/a&gt;を使用すると、グリッドで列と行がどのように定義されているかを確認できます。</target>
        </trans-unit>
        <trans-unit id="4cf53f917bc6c943f97fe8c8417827d5c5892429" translate="yes" xml:space="preserve">
          <source>Inside the element's constructor, we create &lt;code&gt;style&lt;/code&gt; and &lt;code&gt;span&lt;/code&gt; elements, fill the &lt;code&gt;span&lt;/code&gt; with the content of the custom element, and fill the &lt;code&gt;style&lt;/code&gt; element with some CSS rules:</source>
          <target state="translated">要素のコンストラクター内で、 &lt;code&gt;style&lt;/code&gt; 要素と &lt;code&gt;span&lt;/code&gt; 要素を作成し、カスタム要素のコンテンツで &lt;code&gt;span&lt;/code&gt; を入力し、いくつかのCSSルールで &lt;code&gt;style&lt;/code&gt; 要素を入力します。</target>
        </trans-unit>
        <trans-unit id="ea8c1b4ec60d1501f436e24ae27534df043d761b" translate="yes" xml:space="preserve">
          <source>Instead of ignoring the &lt;code&gt;-webkit-text-size-adjust&lt;/code&gt; property, a bug prevents desktop Chrome users from zooming in or out. The bug was fixed after Chrome 26.</source>
          <target state="translated">&lt;code&gt;-webkit-text-size-adjust&lt;/code&gt; プロパティを無視する代わりに、バグにより、デスクトップChromeユーザーがズームインまたはズームアウトできなくなります。このバグはChrome 26以降に修正されました。</target>
        </trans-unit>
        <trans-unit id="79ba06e50637ef05b0e949f2065fadc5ce7b9530" translate="yes" xml:space="preserve">
          <source>Instead of ignoring the &lt;code&gt;-webkit-text-size-adjust&lt;/code&gt; property, a bug prevents desktop Safari users from zooming in or out. The bug was fixed after Safari 5.</source>
          <target state="translated">&lt;code&gt;-webkit-text-size-adjust&lt;/code&gt; プロパティを無視する代わりに、バグによりデスクトップのSafariユーザーがズームインまたはズームアウトできなくなります。このバグはSafari 5以降に修正されました。</target>
        </trans-unit>
        <trans-unit id="6ea8523d947c511ee5277a9ec99bfa7d7e03c921" translate="yes" xml:space="preserve">
          <source>Instead we can target item 4 and separate it from the first three items by giving it a &lt;code&gt;margin-left&lt;/code&gt; value of &lt;code&gt;auto&lt;/code&gt;. Auto margins will take up all of the space that they can in their axis &amp;mdash; it is how centering a block with margin auto left and right works. Each side tries to take as much space as it can, and so the block is pushed into the middle.</source>
          <target state="translated">代わりに、項目4をターゲットにして、 &lt;code&gt;margin-left&lt;/code&gt; に &lt;code&gt;auto&lt;/code&gt; の値を指定することで、最初の3つの項目から分離できます。自動マージンは、軸内で可能なすべてのスペースを占有します。これは、マージンの自動左および右でブロックを中央揃えする方法です。両側ができるだけ多くのスペースを取ろうとするため、ブロックは中央に押し込まれます。</target>
        </trans-unit>
        <trans-unit id="724b5422dc05c791b8cf0befd732972c0409722e" translate="yes" xml:space="preserve">
          <source>Integers</source>
          <target state="translated">Integers</target>
        </trans-unit>
        <trans-unit id="c20b8f147e0e4af5f8712f07daf88693461e01fc" translate="yes" xml:space="preserve">
          <source>Intended for paged material and documents viewed on a screen in print preview mode. (Please see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Paged_Media&quot;&gt;paged media&lt;/a&gt; for information about formatting issues that are specific to these formats.)</source>
          <target state="translated">印刷プレビューモードで画面に表示されるページ素材とドキュメントを対象としています。（これらのフォーマットに固有のフォーマットの問題については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Paged_Media&quot;&gt;ページングされたメディア&lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="7947754bf7c28941dd485b71c6cbc0b62229193f" translate="yes" xml:space="preserve">
          <source>Intended for speech synthesizers.</source>
          <target state="translated">音声シンセサイザー用。</target>
        </trans-unit>
        <trans-unit id="03f6dfea05d7992a6a6b94442d68470a85a5139d" translate="yes" xml:space="preserve">
          <source>Intended mainly for internal use and by themes. Disables scrolling of XML root elements, &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, and &lt;code&gt; &amp;lt;body&amp;gt;&lt;/code&gt; with the keyboard's arrow keys and the mouse wheel.</source>
          <target state="translated">主に内部使用とテーマを対象としています。キーボードの矢印キーとマウスホイールによるXMLルート要素、 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 、および &lt;code&gt; &amp;lt;body&amp;gt;&lt;/code&gt; のスクロールを無効にします。</target>
        </trans-unit>
        <trans-unit id="09310508c2262ec61d2c7e926f4eee93241e0f8b" translate="yes" xml:space="preserve">
          <source>Intended primarily for screens.</source>
          <target state="translated">主にスクリーン用です。</target>
        </trans-unit>
        <trans-unit id="fc9225a1693f44637be7aea70d7fcc2c5840704d" translate="yes" xml:space="preserve">
          <source>Internal</source>
          <target state="translated">Internal</target>
        </trans-unit>
        <trans-unit id="a54cd2e7a39890cc97a46dfdef5f1c663b4f9138" translate="yes" xml:space="preserve">
          <source>Internal &lt;code&gt;table-*&lt;/code&gt; elements don't have margins, use &lt;a href=&quot;border-spacing&quot;&gt;&lt;code&gt;border-spacing&lt;/code&gt;&lt;/a&gt; instead</source>
          <target state="translated">内部 &lt;code&gt;table-*&lt;/code&gt; 要素にはマージンがありません。代わりに&lt;a href=&quot;border-spacing&quot;&gt; &lt;code&gt;border-spacing&lt;/code&gt; を&lt;/a&gt;使用してください</target>
        </trans-unit>
        <trans-unit id="2ad3027815ff4095d4b2780dac90af3ce52df565" translate="yes" xml:space="preserve">
          <source>Internal mapping of width and height</source>
          <target state="translated">幅と高さの内部マッピング</target>
        </trans-unit>
        <trans-unit id="76d5733b82b9b85e7c7c9538c8b1cbf395dc743e" translate="yes" xml:space="preserve">
          <source>Internet Explorer</source>
          <target state="translated">インターネットエクスプローラ</target>
        </trans-unit>
        <trans-unit id="c41136655b3f6611881379e8221c0db44ed5aff6" translate="yes" xml:space="preserve">
          <source>Internet Explorer 10 and 11 consider a unitless value in the &lt;code&gt;flex-basis&lt;/code&gt; part to be syntactically invalid (and will thus be ignored). A workaround is to always include a unit in the &lt;code&gt;flex-basis&lt;/code&gt; part of the &lt;code&gt;flex&lt;/code&gt; shorthand value. See &lt;a href=&quot;https://github.com/philipwalton/flexbugs#4-flex-shorthand-declarations-with-unitless-flex-basis-values-are-ignored&quot;&gt;Flexbug #4&lt;/a&gt; for more info.</source>
          <target state="translated">Internet Explorer 10および11では、 &lt;code&gt;flex-basis&lt;/code&gt; パーツの単位のない値は構文的に無効であると見なされます（したがって無視されます）。回避策は、 &lt;code&gt;flex&lt;/code&gt; ショートハンド値のフレックス &lt;code&gt;flex-basis&lt;/code&gt; 部分に常に単位を含めることです。詳細については、&lt;a href=&quot;https://github.com/philipwalton/flexbugs#4-flex-shorthand-declarations-with-unitless-flex-basis-values-are-ignored&quot;&gt;Flexbug＃4&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="14333adc1ad1f074da5baadeeb93cadfe6fcb18a" translate="yes" xml:space="preserve">
          <source>Internet Explorer 10 and 11 have the property &lt;code&gt;-ms-grid-column-align&lt;/code&gt;, which acts in a similar way to &lt;code&gt;justify-self&lt;/code&gt;.</source>
          <target state="translated">Internet Explorer 10および11には、プロパティ &lt;code&gt;-ms-grid-column-align&lt;/code&gt; があります。これは、 &lt;code&gt;justify-self&lt;/code&gt; と同じように機能します。</target>
        </trans-unit>
        <trans-unit id="150e72e74195a2d1e0a0888bc43d6d0cfdabeadf" translate="yes" xml:space="preserve">
          <source>Internet Explorer 10 and 11 have the property &lt;code&gt;-ms-grid-row-align&lt;/code&gt;, which acts in a similar way to &lt;code&gt;align-self&lt;/code&gt;.</source>
          <target state="translated">Internet Explorer 10および11には、プロパティ &lt;code&gt;-ms-grid-row-align&lt;/code&gt; があります。これは、 &lt;code&gt;align-self&lt;/code&gt; と同じように機能します。</target>
        </trans-unit>
        <trans-unit id="095d998cf217ecc1c467b7e664bf1558a574b8dd" translate="yes" xml:space="preserve">
          <source>Internet Explorer 10 and 11 ignore uses of &lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/calc&quot;&gt;&lt;code&gt;calc()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;flex-basis&lt;/code&gt; part of the &lt;code&gt;flex&lt;/code&gt; syntax. This can be worked around by using the longhand properties instead of the shorthand. See &lt;a href=&quot;https://github.com/philipwalton/flexbugs#8-flex-basis-doesnt-support-calc&quot;&gt;Flexbug #8&lt;/a&gt; for more info.</source>
          <target state="translated">Internet Explorerの10と11は、用途の無視&lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/calc&quot;&gt; &lt;code&gt;calc()&lt;/code&gt; &lt;/a&gt;で &lt;code&gt;flex-basis&lt;/code&gt; の一部 &lt;code&gt;flex&lt;/code&gt; 構文を。これは、省略形の代わりに長い形式のプロパティを使用することで回避できます。詳細については、&lt;a href=&quot;https://github.com/philipwalton/flexbugs#8-flex-basis-doesnt-support-calc&quot;&gt;Flexbug＃8&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6621016b55329b0778a3d157c3ef97bf7d9a278f" translate="yes" xml:space="preserve">
          <source>Internet Explorer 10 uses &lt;code&gt;0&lt;/code&gt; instead of &lt;code&gt;1&lt;/code&gt; as the initial value for the &lt;code&gt;flex-shrink&lt;/code&gt; property. A workaround is to always set an explicit value for &lt;code&gt;flex-shrink&lt;/code&gt;. See &lt;a href=&quot;https://github.com/philipwalton/flexbugs#6-the-default-flex-value-has-changed&quot;&gt;Flexbug #6&lt;/a&gt; for more info.</source>
          <target state="translated">Internet Explorer 10は、 &lt;code&gt;flex-shrink&lt;/code&gt; プロパティの初期値として &lt;code&gt;1&lt;/code&gt; ではなく &lt;code&gt;0&lt;/code&gt; を使用します。回避策は、 &lt;code&gt;flex-shrink&lt;/code&gt; に常に明示的な値を設定することです。詳細については、&lt;a href=&quot;https://github.com/philipwalton/flexbugs#6-the-default-flex-value-has-changed&quot;&gt;Flexbug＃6&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4882dffca9570cc206d6fe5b67e34d8f1c7db5a2" translate="yes" xml:space="preserve">
          <source>Internet Explorer 10, which implemented the &lt;code&gt;display: flexbox&lt;/code&gt; version of the specification with the &lt;code&gt;-ms-&lt;/code&gt; prefix.</source>
          <target state="translated">&lt;code&gt;-ms-&lt;/code&gt; 接頭辞が付いた仕様の &lt;code&gt;display: flexbox&lt;/code&gt; バージョンのdisplay：を実装したInternet Explorer 10 。</target>
        </trans-unit>
        <trans-unit id="7816182258d900b70c821a021fa841c35c51e8e7" translate="yes" xml:space="preserve">
          <source>Internet Explorer 11 considers a unitless value in the &lt;code&gt;flex-basis&lt;/code&gt; part to be syntactically invalid (and will thus be ignored). A workaround is to always include a unit in the &lt;code&gt;flex-basis&lt;/code&gt; part of the &lt;code&gt;flex&lt;/code&gt; shorthand value. See &lt;a href=&quot;https://github.com/philipwalton/flexbugs#4-flex-shorthand-declarations-with-unitless-flex-basis-values-are-ignored&quot;&gt;Flexbug #4&lt;/a&gt; for more info.</source>
          <target state="translated">Internet Explorer 11は、 &lt;code&gt;flex-basis&lt;/code&gt; パーツの単位のない値を構文的に無効であると見なします（したがって無視されます）。回避策は、 &lt;code&gt;flex&lt;/code&gt; ショートハンド値のフレックス &lt;code&gt;flex-basis&lt;/code&gt; 部分に常に単位を含めることです。詳細については、&lt;a href=&quot;https://github.com/philipwalton/flexbugs#4-flex-shorthand-declarations-with-unitless-flex-basis-values-are-ignored&quot;&gt;Flexbug＃4&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8ffdc003c062aa1a1ecca859f0c511a4362a5f9a" translate="yes" xml:space="preserve">
          <source>Internet Explorer 11 ignores uses of &lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/calc&quot;&gt;&lt;code&gt;calc()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;flex-basis&lt;/code&gt; part of the &lt;code&gt;flex&lt;/code&gt; syntax. This can be worked around by using the longhand properties instead of the shorthand. See &lt;a href=&quot;https://github.com/philipwalton/flexbugs#8-flex-basis-doesnt-support-calc&quot;&gt;Flexbug #8&lt;/a&gt; for more info.</source>
          <target state="translated">インターネットエクスプローラの11無視が使用する&lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/calc&quot;&gt; &lt;code&gt;calc()&lt;/code&gt; &lt;/a&gt;で &lt;code&gt;flex-basis&lt;/code&gt; の一部 &lt;code&gt;flex&lt;/code&gt; 構文。これは、省略形の代わりに長い形式のプロパティを使用することで回避できます。詳細については、&lt;a href=&quot;https://github.com/philipwalton/flexbugs#8-flex-basis-doesnt-support-calc&quot;&gt;Flexbug＃8&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="cc1932c946261fb9be93823c86cac93f1fb4ff01" translate="yes" xml:space="preserve">
          <source>Internet Explorer 4 to 9 implemented a non-standard &lt;code&gt;filter&lt;/code&gt; property. The syntax was completely different from this one and is not documented here.</source>
          <target state="translated">Internet Explorer 4から9は、非標準の &lt;code&gt;filter&lt;/code&gt; プロパティを実装しました。構文はこれとは完全に異なり、ここでは説明しません。</target>
        </trans-unit>
        <trans-unit id="e566e6c77293e613e703bec89c33e0667e55df07" translate="yes" xml:space="preserve">
          <source>Internet Explorer 5.5 or later supports a proprietary &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms533014(VS.85,loband).aspx&quot;&gt;Matrix Filter&lt;/a&gt; which can be used to achieve a similar effect.</source>
          <target state="translated">Internet Explorer 5.5以降は、同様の効果を達成するために使用できる独自の&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms533014(VS.85,loband).aspx&quot;&gt;マトリックスフィルター&lt;/a&gt;をサポートしています。</target>
        </trans-unit>
        <trans-unit id="d291604cf86ab705de40a90d2c834d430f2850b1" translate="yes" xml:space="preserve">
          <source>Internet Explorer 5.5 through 9.0 supported gradients via a proprietary filter: &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/-ms-filter#Gradient&quot;&gt;-ms-filter: progid:DXImageTransform.Microsoft.Gradient()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Internet Explorer 5.5から9.0は、独自のフィルターを介してグラデーションをサポートしました： &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/-ms-filter#Gradient&quot;&gt;-ms-filter: progid:DXImageTransform.Microsoft.Gradient()&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d00d9dd5f66259287a276d783b6b26b2dd46aa7" translate="yes" xml:space="preserve">
          <source>Internet Explorer 7 doesn't update &lt;code&gt;:first-child&lt;/code&gt; styles when elements are added dynamically.</source>
          <target state="translated">Internet Explorer 7は、要素が動的に追加されるときに &lt;code&gt;:first-child&lt;/code&gt; スタイルを更新しません。</target>
        </trans-unit>
        <trans-unit id="a387d2282d34c7d1618fc0d7201321a7658de79d" translate="yes" xml:space="preserve">
          <source>Internet Explorer 7 doesn't update the style correctly when an element is dynamically placed before an element that matched the selector.</source>
          <target state="translated">Internet Explorer 7で、セレクタにマッチした要素の前に動的に要素が配置されると、スタイルが正しく更新されないという問題がありました。</target>
        </trans-unit>
        <trans-unit id="ba237dc7b1b4815ec223b26e8609a284f986db07" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8 and later support gray color keywords spelled with an &lt;em&gt;e&lt;/em&gt; (&lt;code&gt;grey&lt;/code&gt;, &lt;code&gt;darkgrey&lt;/code&gt;, &lt;code&gt;darkslategrey&lt;/code&gt;, &lt;code&gt;dimgrey&lt;/code&gt;, &lt;code&gt;lightgrey&lt;/code&gt;, and &lt;code&gt;lightslategrey&lt;/code&gt;). Internet Explorer 3 to Internet Explorer 7 only support the keywords spelled with &lt;em&gt;a&lt;/em&gt; (&lt;code&gt;gray&lt;/code&gt;, &lt;code&gt;darkgray&lt;/code&gt;, &lt;code&gt;darkslategray&lt;/code&gt;, &lt;code&gt;dimgray&lt;/code&gt;, &lt;code&gt;lightgray&lt;/code&gt;, and &lt;code&gt;lightslategray&lt;/code&gt;).</source>
          <target state="translated">Internet Explorer 8以降では、&lt;em&gt;eが&lt;/em&gt;付いた灰色のキーワード（ &lt;code&gt;grey&lt;/code&gt; 、 &lt;code&gt;darkgrey&lt;/code&gt; 、 &lt;code&gt;darkslategrey&lt;/code&gt; 、 &lt;code&gt;dimgrey&lt;/code&gt; 、 &lt;code&gt;lightgrey&lt;/code&gt; 、 &lt;code&gt;lightslategrey&lt;/code&gt; ）がサポートされています。Internet Explorer 7のようにInternet Explorer 3キーワードのみをサポートするには、とスペル（ &lt;code&gt;gray&lt;/code&gt; 、 &lt;code&gt;darkgray&lt;/code&gt; 、 &lt;code&gt;darkslategray&lt;/code&gt; 、 &lt;code&gt;dimgray&lt;/code&gt; 、 &lt;code&gt;lightgray&lt;/code&gt; 、及び &lt;code&gt;lightslategray&lt;/code&gt; ）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0061cc24b45fc654aa7d6a84aa52c571836d4213" translate="yes" xml:space="preserve">
          <source>Internet Explorer 9 and later support an old draft values: &lt;code&gt;inline&lt;/code&gt; (equivalent of having &lt;code&gt;display: inline&lt;/code&gt; on the ruby), and &lt;code&gt;above&lt;/code&gt; (synonym of the modern &lt;code&gt;over&lt;/code&gt;).</source>
          <target state="translated">Internet Explorer 9以降は古いドラフト値をサポートしています： &lt;code&gt;inline&lt;/code&gt; （ルビに &lt;code&gt;display: inline&lt;/code&gt; で表示するのと同等：インライン）、およびそれ &lt;code&gt;above&lt;/code&gt; （現代の &lt;code&gt;over&lt;/code&gt; 同義語）。</target>
        </trans-unit>
        <trans-unit id="0616c092898dbe7ae78fec0871873ffdbca9ad51" translate="yes" xml:space="preserve">
          <source>Internet Explorer 9 and later supports an earlier draft of CSS Ruby with non-standard values for this property: &lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;distribute-letter&lt;/code&gt;, &lt;code&gt;distribute-space&lt;/code&gt;, and &lt;code&gt;line-edge&lt;/code&gt;.</source>
          <target state="translated">Internet Explorer 9以降は、このプロパティの非標準の値であるCSS Rubyの以前のドラフトをサポートします： &lt;code&gt;auto&lt;/code&gt; 、 &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;center&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;distribute-letter&lt;/code&gt; 、 &lt;code&gt;distribute-space&lt;/code&gt; 、および &lt;code&gt;line-edge&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ab108ae28952ba3bef468b4fe2817252c91b795" translate="yes" xml:space="preserve">
          <source>Internet Explorer 9 supports 2D but not 3D transforms. In version 9, mixing 2D and 3D transform functions invalidates the entire property.</source>
          <target state="translated">Internet Explorer 9 は 2D 変換をサポートしていますが、3D 変換はサポートしていません。バージョン 9 では、2D と 3D の変換関数を混在させると、プロパティ全体が無効になります。</target>
        </trans-unit>
        <trans-unit id="487af5e8b667f554d2afffdd44f6ea38f29eccdc" translate="yes" xml:space="preserve">
          <source>Internet Explorer 9.0 or earlier has no support for 3D transforms. Mixing 3D and 2D transform functions, such as &lt;code&gt;-ms-transform:rotate(10deg) translateZ(0);&lt;/code&gt;, will prevent the entire property from being applied.</source>
          <target state="translated">Internet Explorer 9.0以前は、3D変換をサポートしていません。 &lt;code&gt;-ms-transform:rotate(10deg) translateZ(0);&lt;/code&gt; などの3D変換機能と2D変換機能の混合translateZ（0）; 、プロパティ全体が適用されないようにします。</target>
        </trans-unit>
        <trans-unit id="b956a017b2b83a815d64253bb17a30a44ce91ee9" translate="yes" xml:space="preserve">
          <source>Internet Explorer and Microsoft Edge use these pseudo-elements to style other parts of a range input:</source>
          <target state="translated">Internet ExplorerやMicrosoft Edgeでは、これらの擬似要素を使用して、範囲入力の他の部分のスタイルを設定しています。</target>
        </trans-unit>
        <trans-unit id="e7d8b966e73b7a1cbfc5b7b79c04884aeb2c13d3" translate="yes" xml:space="preserve">
          <source>Internet Explorer does not recognize &lt;code&gt;:disabled&lt;/code&gt; on the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/fieldset&quot;&gt;&lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">Internet Explorerは、&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/fieldset&quot;&gt; &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;:disabled&lt;/code&gt; を認識しません。</target>
        </trans-unit>
        <trans-unit id="23c96ce22bf9a21055bd4a969d43012686f848a6" translate="yes" xml:space="preserve">
          <source>Internet Explorer does not support the global values &lt;code&gt;initial&lt;/code&gt; and &lt;code&gt;unset&lt;/code&gt;.</source>
          <target state="translated">Internet Explorerは、 &lt;code&gt;initial&lt;/code&gt; 値と &lt;code&gt;unset&lt;/code&gt; グローバル値をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="91f370ac229045927a7bdb72388a5c51bddbd31a" translate="yes" xml:space="preserve">
          <source>Internet Explorer doesn't support &lt;code&gt;visibility: initial&lt;/code&gt;.</source>
          <target state="translated">Internet Explorerは &lt;code&gt;visibility: initial&lt;/code&gt; サポートしていません：初期。</target>
        </trans-unit>
        <trans-unit id="45ea687e8a3f5a60bc5a42a5eab724abc8ab4ed2" translate="yes" xml:space="preserve">
          <source>Internet Explorer has no support.</source>
          <target state="translated">Internet Explorerはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="c5f8c7865e42f1f649bdfe3988d2d87f7ad11101" translate="yes" xml:space="preserve">
          <source>Internet Explorer implements an older version of the specification.</source>
          <target state="translated">Internet Explorerは古いバージョンの仕様を実装しています。</target>
        </trans-unit>
        <trans-unit id="2d31f010bc67031ad3d938f2ce6fc47d86d8b274" translate="yes" xml:space="preserve">
          <source>Internet Explorer only supports clip paths defined by &lt;code&gt;url()&lt;/code&gt;.</source>
          <target state="translated">Internet Explorerは、 &lt;code&gt;url()&lt;/code&gt; で定義されたクリップパスのみをサポートします。</target>
        </trans-unit>
        <trans-unit id="f9cac2de5d3a7e0d4d1f8cabb71b2fd16e05d16d" translate="yes" xml:space="preserve">
          <source>Internet Explorer supports an earlier draft of CSS Scroll Snap without axis values.</source>
          <target state="translated">Internet Explorerは、軸の値がないCSSスクロールスナップの以前のドラフトをサポートしています。</target>
        </trans-unit>
        <trans-unit id="9ea032e08a3c100790ae6fb6a247d72625459bbb" translate="yes" xml:space="preserve">
          <source>Internet Explorer treats all unknown elements (such as custom elements) as the same element type.</source>
          <target state="translated">Internet Explorer では、未知の要素(カスタム要素など)はすべて同じ要素タイプとして扱われます。</target>
        </trans-unit>
        <trans-unit id="0ae1a09f1a487e37bd7d948ff3009a1cd0fd031f" translate="yes" xml:space="preserve">
          <source>Internet Explorer's implementation differs from the specification.</source>
          <target state="translated">Internet Explorerの実装は仕様と異なります。</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="26cd1fe9380ea9565de1c2bd864a8690b0d56346" translate="yes" xml:space="preserve">
          <source>Interpolation Hints / Gradient Midpoints</source>
          <target state="translated">補間のヒント/グラデーションの中間点</target>
        </trans-unit>
        <trans-unit id="3313fcf85704e25c9cf47d7f97eb4c1ae29fccfb" translate="yes" xml:space="preserve">
          <source>Interpolation of basic shapes</source>
          <target state="translated">基本形状の補間</target>
        </trans-unit>
        <trans-unit id="4a4a8d5d6c8fb0d81c46467beee99205c026b923" translate="yes" xml:space="preserve">
          <source>Interpolation of blend modes</source>
          <target state="translated">ブレンドモードの補間</target>
        </trans-unit>
        <trans-unit id="9b21711488363d652f10dd903450b89ea21cb58f" translate="yes" xml:space="preserve">
          <source>Interprets the counter symbols as digits in a &lt;a href=&quot;https://en.wikipedia.org/wiki/Positional_notation&quot;&gt;place-value numbering system&lt;/a&gt;. The numeric system is similar to the &lt;code&gt;alphabetic&lt;/code&gt; system, described above. The main difference is that in the &lt;code&gt;alphabetic&lt;/code&gt; system, the first counter symbol given in the &lt;code&gt;symbols&lt;/code&gt; descriptor is interpreted as &lt;code&gt;1&lt;/code&gt;, the next as &lt;code&gt;2&lt;/code&gt;, and so on. However, in the numeric system, the first counter symbol is interpreted as 0, the next as &lt;code&gt;1&lt;/code&gt;, then &lt;code&gt;2&lt;/code&gt;, and so on.</source>
          <target state="translated">カウンタ&lt;a href=&quot;https://en.wikipedia.org/wiki/Positional_notation&quot;&gt;値&lt;/a&gt;を、場所の値の番号付けシステムで数字として解釈します。数値システムは、上記の &lt;code&gt;alphabetic&lt;/code&gt; システムに似ています。主な違いは、 &lt;code&gt;alphabetic&lt;/code&gt; システムでは、 &lt;code&gt;symbols&lt;/code&gt; 記述子で指定された最初のカウンターシンボルが &lt;code&gt;1&lt;/code&gt; として解釈され、次のカウンターシンボルが &lt;code&gt;2&lt;/code&gt; として解釈されるということです。しかし、数値システムでは、第1のカウンタシンボルは次のように、0と解釈され &lt;code&gt;1&lt;/code&gt; 、次いで &lt;code&gt;2&lt;/code&gt; 、及び上ので。</target>
        </trans-unit>
        <trans-unit id="2646800f360d39d6c765db16777b558d99b6c535" translate="yes" xml:space="preserve">
          <source>Interprets the specified symbols as digits, to an alphabetic numbering system. If the characters &lt;code&gt;&quot;a&quot;&lt;/code&gt; to &lt;code&gt;&quot;z&quot;&lt;/code&gt; are specified as symbols in a counter style, with the &lt;code&gt;alphabetic&lt;/code&gt; system, then the first 26 counter representations will be &lt;code&gt;&quot;a&quot;&lt;/code&gt;, &lt;code&gt;&quot;b&quot;&lt;/code&gt; upto &lt;code&gt;&quot;z&quot;&lt;/code&gt;. Until this point, the behavior is the same as that of the &lt;code&gt;symbolic&lt;/code&gt; system, described above. However, after &lt;code&gt;&quot;z&quot;&lt;/code&gt;, it will continue as &lt;code&gt;&quot;aa&quot;&lt;/code&gt;, &lt;code&gt;&quot;ab&quot;&lt;/code&gt;, &lt;code&gt;&quot;ac&quot;&lt;/code&gt;&amp;hellip;</source>
          <target state="translated">指定された記号を数字として解釈し、アルファベットの番号方式を使用します。文字場合は &lt;code&gt;&quot;a&quot;&lt;/code&gt; と &lt;code&gt;&quot;z&quot;&lt;/code&gt; で、カウンタスタイル内のシンボルとして指定される &lt;code&gt;alphabetic&lt;/code&gt; システムは、最初の26個のカウンタ表現になります &lt;code&gt;&quot;a&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;b&quot;&lt;/code&gt; 点で最大 &lt;code&gt;&quot;z&quot;&lt;/code&gt; 。この時点まで、動作は上記の &lt;code&gt;symbolic&lt;/code&gt; システムの動作と同じです。ただし、 &lt;code&gt;&quot;z&quot;&lt;/code&gt; 後は &lt;code&gt;&quot;aa&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;ab&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;ac&quot;&lt;/code&gt; &amp;hellip; と続きます。</target>
        </trans-unit>
        <trans-unit id="221ad5d9cf460323dd5acb798b113cea81f557b7" translate="yes" xml:space="preserve">
          <source>Intrinsic dimensions and proportions</source>
          <target state="translated">本質的な寸法と比率</target>
        </trans-unit>
        <trans-unit id="5fda894242cdc9c8cc6f32bd3d9329030a51f8b0" translate="yes" xml:space="preserve">
          <source>Intrinsic dimensions of contained images.</source>
          <target state="translated">含まれている画像の本質的な寸法。</target>
        </trans-unit>
        <trans-unit id="5b3737cdc2139c258e86478caed3206a02bbcd9d" translate="yes" xml:space="preserve">
          <source>Intrinsic sizes</source>
          <target state="translated">本質的なサイズ</target>
        </trans-unit>
        <trans-unit id="8808878638b7a85cab416e884165e84f5a9d3ada" translate="yes" xml:space="preserve">
          <source>Introduced in Media Queries Level 4 is a new range syntax that allows for less verbose media queries when testing for any feature accepting a range, as shown in the below examples:</source>
          <target state="translated">Media Queries Level 4 で導入された新しい範囲構文は、以下の例に示すように、範囲を受け入れる機能のテストを行う際に、より冗長なメディア・クエリを使用しないようにします。</target>
        </trans-unit>
        <trans-unit id="79d05ec8623d000fba628c9049cb82f583559884" translate="yes" xml:space="preserve">
          <source>Introduces &lt;code&gt;&amp;lt;alpha-value&amp;gt;&lt;/code&gt; along with &lt;code&gt;rgba()&lt;/code&gt; and &lt;code&gt;hsla()&lt;/code&gt; functional notations.</source>
          <target state="translated">&lt;code&gt;rgba()&lt;/code&gt; および &lt;code&gt;hsla()&lt;/code&gt; 関数表記とともに &lt;code&gt;&amp;lt;alpha-value&amp;gt;&lt;/code&gt; を導入します。</target>
        </trans-unit>
        <trans-unit id="e1e07fa10fad1b352d112ceac5798bf70e971804" translate="yes" xml:space="preserve">
          <source>Introduces media queries, their syntax, and the operators and media features which are used to construct media query expressions.</source>
          <target state="translated">メディアクエリ、その構文、メディアクエリ式を構築するために使用される演算子とメディア機能を紹介します。</target>
        </trans-unit>
        <trans-unit id="68f2446ddae1b7372b7e6dc2ad9b8e439bdcc880" translate="yes" xml:space="preserve">
          <source>Introduces no content, but increments (decrements) the level of nesting for quotes.</source>
          <target state="translated">コンテンツは導入しませんが、引用符の入れ子のレベルをインクリメント(デクリメント)します。</target>
        </trans-unit>
        <trans-unit id="a4230f93f3f3f8dabe3a331312f68b7ad8096169" translate="yes" xml:space="preserve">
          <source>Introduces the two-colon syntax.</source>
          <target state="translated">2コロン構文を紹介します。</target>
        </trans-unit>
        <trans-unit id="f407486c3e584e24e0f52f16f83af2584f16358e" translate="yes" xml:space="preserve">
          <source>Introducing the 'variation axis'</source>
          <target state="translated">バリエーション軸」の導入</target>
        </trans-unit>
        <trans-unit id="2f5ea559188b8b08d3d440077d6463782eaf8450" translate="yes" xml:space="preserve">
          <source>Introducing the CSS Cascade</source>
          <target state="translated">CSS カスケードの導入</target>
        </trans-unit>
        <trans-unit id="c54e0676abaa94b45eca1c4ec2ebbdf6403a5638" translate="yes" xml:space="preserve">
          <source>Introducing the CSS cascade</source>
          <target state="translated">CSS カスケードの導入</target>
        </trans-unit>
        <trans-unit id="92d630fd64c3c5569d32d352d4ee24c220afcce4" translate="yes" xml:space="preserve">
          <source>Introduction of the two-colon syntax.</source>
          <target state="translated">2コロン構文の紹介です。</target>
        </trans-unit>
        <trans-unit id="bdfb59c3fb4ec235a8d1c890364e3b5cf699a52e" translate="yes" xml:space="preserve">
          <source>Introduction of the two-colon syntax. Definition of edge-case behavior, such as in list items or with specific languages (e.g., the Dutch digraph &lt;code&gt;IJ&lt;/code&gt;).</source>
          <target state="translated">2コロン構文の紹介。リストアイテムや特定の言語（オランダ語のダイグラフ &lt;code&gt;IJ&lt;/code&gt; など）でのエッジケースの動作の定義。</target>
        </trans-unit>
        <trans-unit id="4728729396b3663b15be8176cb333e8c5b09acb7" translate="yes" xml:space="preserve">
          <source>Introduction to CSS: Values and Units</source>
          <target state="translated">CSSの紹介です。値と単位</target>
        </trans-unit>
        <trans-unit id="a05c4cbb95ffd40d728dda6336b3897cb1584dfb" translate="yes" xml:space="preserve">
          <source>Introduction to formatting contexts</source>
          <target state="translated">フォーマットのコンテキストの紹介</target>
        </trans-unit>
        <trans-unit id="ed43b023af3daf6ee0fd859bdc447a0ce743839f" translate="yes" xml:space="preserve">
          <source>Introduction to subgrid</source>
          <target state="translated">サブグリッドの紹介</target>
        </trans-unit>
        <trans-unit id="540de705c451e5a143ce64dc3925c197ac80722b" translate="yes" xml:space="preserve">
          <source>Introduction to the CSS basic box model</source>
          <target state="translated">CSSの基本的なボックスモデルの紹介</target>
        </trans-unit>
        <trans-unit id="98cda1e821e0ff23cd78a3fbca95288d5467f19d" translate="yes" xml:space="preserve">
          <source>Introduction to the CSS box model</source>
          <target state="translated">CSSボックスモデルの紹介</target>
        </trans-unit>
        <trans-unit id="847c0b04f044aa4be68f460985c3a2ab786fa505" translate="yes" xml:space="preserve">
          <source>Introduction to the Fragmentation specification and how to control where column content breaks.</source>
          <target state="translated">フラグメンテーションの仕様と、カラムの内容がどこで途切れるかを制御する方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="fd08feece82c1b19c4f6ec2ae0985029dbad2483" translate="yes" xml:space="preserve">
          <source>Invalid dimensions</source>
          <target state="translated">無効な寸法</target>
        </trans-unit>
        <trans-unit id="37c1de3465e9abe2f8935a87ce3d15cc5b5e2538" translate="yes" xml:space="preserve">
          <source>Invalid frequency values</source>
          <target state="translated">無効な周波数値</target>
        </trans-unit>
        <trans-unit id="a907c978cf02025a436cb2ded88edec7baf34ca7" translate="yes" xml:space="preserve">
          <source>Invalid identifiers</source>
          <target state="translated">無効な識別子</target>
        </trans-unit>
        <trans-unit id="9fd4a0c0f6df1a64ed4270d83aab58edf3120409" translate="yes" xml:space="preserve">
          <source>Invalid images</source>
          <target state="translated">無効な画像</target>
        </trans-unit>
        <trans-unit id="e7224dbf7a2e4167347bd7696de923a9e215ea73" translate="yes" xml:space="preserve">
          <source>Invalid integers</source>
          <target state="translated">無効化された整数</target>
        </trans-unit>
        <trans-unit id="77c1cc16611704a59399549cb81acf508886e300" translate="yes" xml:space="preserve">
          <source>Invalid numbers</source>
          <target state="translated">無効な数字</target>
        </trans-unit>
        <trans-unit id="c89f9414099d84de1a80596af7c7bfccfd85f40b" translate="yes" xml:space="preserve">
          <source>Invalid percentage values</source>
          <target state="translated">無効なパーセンテージ値</target>
        </trans-unit>
        <trans-unit id="2d96f6050348594c975250e374fd4b94505e9f85" translate="yes" xml:space="preserve">
          <source>Invalid percentages</source>
          <target state="translated">無効なパーセンテージ</target>
        </trans-unit>
        <trans-unit id="7d56a40a15debda68b04c4906b9fa1bd9ec0dd14" translate="yes" xml:space="preserve">
          <source>Invalid positions</source>
          <target state="translated">無効な位置</target>
        </trans-unit>
        <trans-unit id="0dc485d1120ba3f1dad6f199c2266aaabe1ba7ef" translate="yes" xml:space="preserve">
          <source>Invalid resolutions</source>
          <target state="translated">無効な決議</target>
        </trans-unit>
        <trans-unit id="85f30696d7c8aa573f7cfbe56486376cc3f8fa5f" translate="yes" xml:space="preserve">
          <source>Invalid times</source>
          <target state="translated">無効な時間</target>
        </trans-unit>
        <trans-unit id="1ce475219883b98f3f6db1ffcb60e1e6df328af7" translate="yes" xml:space="preserve">
          <source>Inverting a query's meaning</source>
          <target state="translated">クエリの意味を反転させる</target>
        </trans-unit>
        <trans-unit id="20e71f49714a3ca3f4fc6a48777a29bbf8a47b43" translate="yes" xml:space="preserve">
          <source>Inverts the colors of the image.</source>
          <target state="translated">画像の色を反転させます。</target>
        </trans-unit>
        <trans-unit id="80035022ac880d2b9619ebceb62f930d2d26a003" translate="yes" xml:space="preserve">
          <source>Inverts the samples in the input image. The value of &lt;code&gt;amount&lt;/code&gt; defines the proportion of the conversion. A value of &lt;code&gt;100%&lt;/code&gt; is completely inverted. A value of &lt;code&gt;0%&lt;/code&gt; leaves the input unchanged. Values between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt; are linear multipliers on the effect. The lacuna value for interpolation is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">入力画像のサンプルを反転します。 &lt;code&gt;amount&lt;/code&gt; の値は、変換の比率を定義します。 &lt;code&gt;100%&lt;/code&gt; の値は完全に反転します。値が &lt;code&gt;0%&lt;/code&gt; の場合、入力は変更されません。 &lt;code&gt;0%&lt;/code&gt; から &lt;code&gt;100%&lt;/code&gt; の値は、エフェクトの線形乗数です。補間のラクナ値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f076661ae0a0f3a9cd7cae05efeba4582fa7f592" translate="yes" xml:space="preserve">
          <source>Inverts which lines are indented. All lines &lt;em&gt;except&lt;/em&gt; the first line will be indented.</source>
          <target state="translated">インデントされている行を反転します。最初の行を&lt;em&gt;除く&lt;/em&gt;すべての行がインデントされます。</target>
        </trans-unit>
        <trans-unit id="6f8712aeb00ec4ca126d4e47d72f74dae20b861a" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;flex-basis&lt;/code&gt; a length unit, but not zero? If so this is the size of the item.</source>
          <target state="translated">ある &lt;code&gt;flex-basis&lt;/code&gt; 長さの単位ではなく、ゼロ？もしそうなら、これはアイテムのサイズです。</target>
        </trans-unit>
        <trans-unit id="dcab060a56967efd26a14507b91cc969bd9c6244" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;flex-basis&lt;/code&gt; set to &lt;code&gt;0&lt;/code&gt;? if so then the item size is not taken into consideration for the space-sharing calculation.</source>
          <target state="translated">&lt;code&gt;flex-basis&lt;/code&gt; は &lt;code&gt;0&lt;/code&gt; に設定されていますか？その場合、アイテムサイズはスペース共有の計算に考慮されません。</target>
        </trans-unit>
        <trans-unit id="b642d741ad1e21de6ef544672912461852d2994f" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;flex-basis&lt;/code&gt; set to &lt;code&gt;auto&lt;/code&gt; or &lt;code&gt;content&lt;/code&gt; (in a supporting browser)? If so, the size is based on the item size.</source>
          <target state="translated">&lt;code&gt;flex-basis&lt;/code&gt; は &lt;code&gt;auto&lt;/code&gt; または &lt;code&gt;content&lt;/code&gt; （サポートするブラウザーで）に設定されていますか？その場合、サイズはアイテムのサイズに基づきます。</target>
        </trans-unit>
        <trans-unit id="a2c8f7a2f7c847101c6c5ab5d7a30c782bce0865" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;flex-basis&lt;/code&gt; set to &lt;code&gt;auto&lt;/code&gt;, and does the item have a width set? If so, the size will be based on that width.</source>
          <target state="translated">ある &lt;code&gt;flex-basis&lt;/code&gt; にセット &lt;code&gt;auto&lt;/code&gt; 、アイテムは幅セットがありますか？その場合、サイズはその幅に基づきます。</target>
        </trans-unit>
        <trans-unit id="2cb8e4d245eb8f5457b601b8a11ec4cdc65305d8" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the abscissa of the translating vector.</source>
          <target state="translated">ある&lt;a href=&quot;../length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;../percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;並進ベクトルの横軸を表します。</target>
        </trans-unit>
        <trans-unit id="f6123f331384088ac70dda641da10fd3ccd5d4f7" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the abscissa of the translating vector. A percentage value refers to the width of the reference box defined by the &lt;a href=&quot;../transform-box&quot;&gt;&lt;code&gt;transform-box&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">ある&lt;a href=&quot;../length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;../percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;並進ベクトルの横軸を表します。パーセンテージ値は、&lt;a href=&quot;../transform-box&quot;&gt; &lt;code&gt;transform-box&lt;/code&gt; &lt;/a&gt;プロパティで定義された参照ボックスの幅を指します。</target>
        </trans-unit>
        <trans-unit id="21774222895296de4b74f93599f65a6c50eed34f" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the ordinate of the translating vector.</source>
          <target state="translated">ある&lt;a href=&quot;../length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;../percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;並進ベクトルの縦軸を表します。</target>
        </trans-unit>
        <trans-unit id="59eac5f4a03a2c969ca3c2680c906b8d10eb77af" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the abscissa (x-coordinate) of the translating vector.</source>
          <target state="translated">ある&lt;a href=&quot;../length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;並進ベクトルの横軸（x座標）を表します。</target>
        </trans-unit>
        <trans-unit id="2f2dd62b7aef2e03706eae5582c9889226a62400" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the abscissa of the translating vector.</source>
          <target state="translated">ある&lt;a href=&quot;../length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;翻訳ベクトルの横軸を表します。</target>
        </trans-unit>
        <trans-unit id="b8f428d29a9a7eecbce525027704bab292583f21" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the distance from the user to the z=0 plane. If it is 0 or a negative value, no perspective transform is applied.</source>
          <target state="translated">ある&lt;a href=&quot;../length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt; z = 0の平面へのユーザからの距離を表すが。0または負の値の場合、透視変換は適用されません。</target>
        </trans-unit>
        <trans-unit id="10d52ed0aa02ff48bbc1aed892c169b98e5d83b5" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the ordinate of the translating vector (or y-coordinate). If unspecified, its default value is &lt;code&gt;0&lt;/code&gt;. For example, &lt;code&gt;translate(2)&lt;/code&gt; is equivalent to &lt;code&gt;translate(2, 0)&lt;/code&gt;.</source>
          <target state="translated">ある&lt;a href=&quot;../length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;並進ベクトル（またはy座標）の縦軸を表します。指定しない場合、デフォルト値は &lt;code&gt;0&lt;/code&gt; です。たとえば、 &lt;code&gt;translate(2)&lt;/code&gt; は &lt;code&gt;translate(2, 0)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="fd82818df278e295dbbca9fc8c8b10fd7b79a22a" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the ordinate of the translating vector.</source>
          <target state="translated">ある&lt;a href=&quot;../length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;翻訳ベクトルの座標を表します。</target>
        </trans-unit>
        <trans-unit id="0be02a459d2445cfed0b8ee048f629b8391d08ec" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the z component of the translating vector. It can't be a &lt;a href=&quot;../percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; value; in that case the property containing the transform is considered invalid.</source>
          <target state="translated">ある&lt;a href=&quot;../length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;並進ベクトルのZ成分を表します。&lt;a href=&quot;../percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;値にすることはできません。その場合、変換を含むプロパティは無効と見なされます。</target>
        </trans-unit>
        <trans-unit id="46518f1d49a382369d3f15e598b0a0618b3d7d2a" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; describing the x-coordinate of the vector denoting the axis of rotation which could between 0 and 1.</source>
          <target state="translated">ある&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;説明する回転軸を示すベクトルのx座標れる可能性0と1の間です。</target>
        </trans-unit>
        <trans-unit id="f18504912f967a02ab14c3a122f1aa48ec1f1c1a" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; describing the y-coordinate of the vector denoting the axis of rotation which could between 0 and 1.</source>
          <target state="translated">ある&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;説明する回転軸を示すベクトルのy座標が0と1の間でした。</target>
        </trans-unit>
        <trans-unit id="f3ebd9bc90b0aaabae3ec154bd1f98c27f4656b5" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; describing the z-coordinate of the vector denoting the axis of rotation which could between 0 and 1.</source>
          <target state="translated">ある&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;説明する回転軸を示すベクトルのz座標が0と1の間でした。</target>
        </trans-unit>
        <trans-unit id="54db5aec3a6e38961ff92d78e8977de080b25a2d" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the abscissa of the scaling vector.</source>
          <target state="translated">ある&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;スケーリングベクトルの横軸を表すが。</target>
        </trans-unit>
        <trans-unit id="de14ba04e260117d61c0196ba2786b8bef443e0d" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the ordinate of the scaling vector.</source>
          <target state="translated">ある&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;スケーリングベクトルの座標を表すが。</target>
        </trans-unit>
        <trans-unit id="4fc9f23d210bc09a77ad135d68fec748c094a488" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the scaling factor to apply on the abscissa of each point of the element.</source>
          <target state="translated">ある&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の各点の横座標に適用するスケーリングファクタを表すが。</target>
        </trans-unit>
        <trans-unit id="1078a18a1b404b133d38192af690f4341b37b9ff" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the scaling factor to apply on the ordinate of each point of the element.</source>
          <target state="translated">ある&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の各点の縦座標に適用するスケーリングファクタを表すが。</target>
        </trans-unit>
        <trans-unit id="8a143cc2b20a9c8fa4169889c2c02bf31a7ce0e0" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the scaling factor to apply on the z-coordinate of each point of the element.</source>
          <target state="translated">ある&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;に適用するスケーリングファクタを表す要素の各点のz座標。</target>
        </trans-unit>
        <trans-unit id="2051ad1ee05ca01d276270c9971acead9fed6b78" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the z-component of the scaling vector.</source>
          <target state="translated">ある&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;スケーリングベクトルのz成分を表すが。</target>
        </trans-unit>
        <trans-unit id="e9e3f834b735c5627e9e489598d5f9484a0e9a6e" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;color_value&quot;&gt;&lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">ある&lt;a href=&quot;color_value&quot;&gt; &lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt; &lt;/a&gt;値。</target>
        </trans-unit>
        <trans-unit id="5a557dc64afa7db353a642704c58b54f918e279a" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; (and never a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; which would make the statement invalid) describing how far from the user eye the z=0 origin is set.</source>
          <target state="translated">ユーザーの目からz = 0原点が設定されている距離を説明する&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;（およびステートメントを無効にする&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;にはなりません）です。</target>
        </trans-unit>
        <trans-unit id="7ca95a0f939c5a48f1816aa4353300b944ee122a" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; denoting a radius to use for the border in each corner of the border. It is used only in the one-value syntax.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;境界線の各コーナーでは境界線に使用する半径を表します。1値構文でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="21fa2049d363dbe5c3f11b5199abd17f0d69c822" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; denoting a radius to use for the border in the bottom-left corner of the element's box. It is used only in the four-value syntax.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のボックスの左下隅に境界線に使用する半径を表します。4値構文でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="0ce5753cadf6ef379883d15a065ed091ca9121d4" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; denoting a radius to use for the border in the bottom-right corner of the element's box. It is used only in the three- and four-value syntaxes.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のボックスの右下隅にボーダーに使用する半径を表します。3値および4値の構文でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="4ae396a5c6f05dd5fa8cab111ceb7f845f66b2fd" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; denoting a radius to use for the border in the top-left and bottom-right corners of the element's box. It is used only in the two-value syntax.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のボックスの左上と右下の角にある境界線に使用する半径を表します。2値構文でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="e4caa4048207f7740db5fedce950b593096add23" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; denoting a radius to use for the border in the top-left corner of the element's box. It is used only in the three- and four-value syntaxes.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のボックスの左上隅に境界線に使用する半径を表します。3値および4値の構文でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="59761a9c1fa2ec26169927e844b70c5a16769d3f" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; denoting a radius to use for the border in the top-right and bottom-left corners of the element's box. It is used only in the two- and three-value syntaxes.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のボックスの右上と左下隅に境界線に使用する半径を表します。2値および3値の構文でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="fc50f86b993c71c65cd68b2d481bd0c273637041" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; denoting a radius to use for the border in the top-right corner of the element's box. It is used only in the four-value syntax.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のボックスの右上隅にある境界線に使用する半径を表します。4値構文でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="c1133edbcef4a857aa4a139220084022eab03de4" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; describing how far from the left edge of the box the origin of the transform is set.</source>
          <target state="translated">変換の原点がボックスの左端からどれだけ離れているかを示す&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="6d512df6ca36a365d56ff03a8fa067095ae86810" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; describing how far from the top edge of the box the origin of the transform is set.</source>
          <target state="translated">変換の原点がボックスの上端からどれだけ離れているかを示す&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="13e981a7061a156ce02ca031dce78a8bf771a1bd" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or one of the three keywords, &lt;code&gt;thin&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, or &lt;code&gt;thick&lt;/code&gt;. See &lt;a href=&quot;border-width&quot;&gt;&lt;code&gt;border-width&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;または3つのキーワードの一つ、 &lt;code&gt;thin&lt;/code&gt; 、 &lt;code&gt;medium&lt;/code&gt; 、または &lt;code&gt;thick&lt;/code&gt; 。詳細については、&lt;a href=&quot;border-width&quot;&gt; &lt;code&gt;border-width&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ffcdb1799798c25e09be34b57c6ad0a6a4404ee3" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the offset for the bottom of the rectangle relative to the top border of the element's box.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のボックスの上の国境に長方形の相対の下のオフセットを表します。</target>
        </trans-unit>
        <trans-unit id="a7fc4d22b774e51f02966f9cceaf3aa61597b415" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the offset for the left of the rectangle relative to the left border of the element's box.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のボックスの左端に長方形の相対的な左のオフセットを表します。</target>
        </trans-unit>
        <trans-unit id="fe4dc6942f2e06493aced1146f522f32a114184c" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the offset for the right of the rectangle relative to the left border of the element's box.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のボックスの左端に長方形の相対的な権利のためのオフセットを表します。</target>
        </trans-unit>
        <trans-unit id="22eea78c2bb7efb6df9349c177263609905e5771" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the offset for the top of the rectangle relative to the top border of the element's box.</source>
          <target state="translated">ある&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のボックスの上の国境に長方形の相対的なトップのオフセットを表します。</target>
        </trans-unit>
        <trans-unit id="3b3bd1a099c391acea57f4d2628fb2fea31fcec8" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt; denoting the character encoding to be used. It must be the name of a web-safe character encoding defined in the &lt;a href=&quot;http://www.iana.org/assignments/character-sets&quot;&gt;IANA-registry&lt;/a&gt;, and must be double-quoted, following exactly one space character (U+0020), and immediately terminated with a semicolon. If several names are associated with an encoding, only the one marked with &lt;em&gt;preferred&lt;/em&gt; must be used.</source>
          <target state="translated">ある&lt;a href=&quot;string&quot;&gt; &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; &lt;/a&gt;に使用する文字エンコーディングを表すが。これは、&lt;a href=&quot;http://www.iana.org/assignments/character-sets&quot;&gt;IANA-registry&lt;/a&gt;で定義されているWebセーフ文字エンコードの名前である必要があり、正確に1つのスペース文字（U + 0020）に続いて二重引用符で囲み、セミコロンですぐに終了する必要があります。エンコーディングに複数の名前が関連付けられている場合は、&lt;em&gt;preferredで&lt;/em&gt;マークされた名前のみを&lt;em&gt;使用する&lt;/em&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="49bff2c1134da4e8c1660a49c74cd555762fde3e" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;url&quot;&gt;&lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the location of the resource to import. The URL may be absolute or relative. Note that the URL for a Mozilla package need not actually specify a file; it can just specify the package name and part, and the appropriate file is chosen automatically (e.g. &lt;code&gt;chrome://communicator/skin/&lt;/code&gt;). &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Tutorial/The_Chrome_URL&quot;&gt;See here&lt;/a&gt; for more information.</source>
          <target state="translated">ある&lt;a href=&quot;string&quot;&gt; &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;url&quot;&gt; &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; &lt;/a&gt;輸入へのリソースの位置を表します。URLは絶対URLでも相対URLでもかまいません。MozillaパッケージのURLは、実際にファイルを指定する必要はないことに注意してください。パッケージ名とパーツを指定するだけで、適切なファイルが自動的に選択されます（例： &lt;code&gt;chrome://communicator/skin/&lt;/code&gt; ）。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Tutorial/The_Chrome_URL&quot;&gt;詳細については、こちら&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="286495b2290d6e9e8c1644a6b0f8b35db8be50f7" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;url&quot;&gt;&lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the location of the resource to import. The URL may be absolute or relative. Note that the URL for a Mozilla package need not actually specify a file; it can just specify the package name and part, and the appropriate file is chosen automatically (e.g. &lt;strong&gt;chrome://communicator/skin/&lt;/strong&gt;). &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Tutorial/The_Chrome_URL&quot;&gt;See here&lt;/a&gt; for more information.</source>
          <target state="translated">ある&lt;a href=&quot;string&quot;&gt; &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;url&quot;&gt; &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; &lt;/a&gt;輸入へのリソースの位置を表します。URLは絶対または相対のいずれでもかまいません。MozillaパッケージのURLは実際にファイルを指定する必要がないことに注意してください。パッケージ名とパーツを指定するだけで、適切なファイルが自動的に選択されます（例：&lt;strong&gt;chrome：// communicator / skin /&lt;/strong&gt;）。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Tutorial/The_Chrome_URL&quot;&gt;詳細については、こちら&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="a06546fba781a193a9184b5d09f68ce8cc3be3e7" translate="yes" xml:space="preserve">
          <source>Is a &lt;a href=&quot;time&quot;&gt;&lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt;&lt;/a&gt; denoting the amount of time the transition from the old value of a property to the new value should take. A time of &lt;code&gt;0s&lt;/code&gt; indicates that no transition will happen, that is the switch between the two states will be instantaneous. A negative value for the time renders the declaration invalid.</source>
          <target state="translated">ある&lt;a href=&quot;time&quot;&gt; &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; &lt;/a&gt;新しい値にプロパティの古い値からの遷移が取るべき時間の量を表します。時間 &lt;code&gt;0s&lt;/code&gt; は、遷移が発生しないことを示します。つまり、2つの状態の切り替えが瞬間的に行われます。時間に負の値を指定すると、宣言が無効になります。</target>
        </trans-unit>
        <trans-unit id="1d111fe65724885c909f7b0a8f0ae92e5c12e68c" translate="yes" xml:space="preserve">
          <source>Is a comma-separated list of &lt;a href=&quot;media_queries/using_media_queries&quot;&gt;media queries&lt;/a&gt; conditioning the application of the CSS rules defined in the linked URL. If the browser does not support any these queries, it does not load the linked resource.</source>
          <target state="translated">リンクされたURLで定義されたCSSルールの適用を条件付ける&lt;a href=&quot;media_queries/using_media_queries&quot;&gt;メディアクエリの&lt;/a&gt;カンマ区切りのリストです。ブラウザがこれらのクエリをサポートしていない場合、リンクされたリソースは読み込まれません。</target>
        </trans-unit>
        <trans-unit id="ad57bbcf68cf5ec61e863fee9f67f7f040c5f4e7" translate="yes" xml:space="preserve">
          <source>Is a functional notation that defines a size range greater than or equal to &lt;em&gt;min&lt;/em&gt; and less than or equal to &lt;em&gt;max&lt;/em&gt;. If &lt;em&gt;max&lt;/em&gt; is smaller than &lt;em&gt;min&lt;/em&gt;, then &lt;em&gt;max&lt;/em&gt; is ignored and the function is treated as &lt;em&gt;min&lt;/em&gt;. As a maximum, a &lt;code&gt;&amp;lt;flex&amp;gt;&lt;/code&gt; value sets the track&amp;rsquo;s flex factor. As a minimum, it is treated as zero (or minimal content, if the grid container is sized under a minimal content constraint).</source>
          <target state="translated">&lt;em&gt;min&lt;/em&gt;以上で&lt;em&gt;max&lt;/em&gt;以下のサイズ範囲を定義する関数表記です。場合は&lt;em&gt;、最大が&lt;/em&gt;より小さい&lt;em&gt;分&lt;/em&gt;、その後、&lt;em&gt;最大は&lt;/em&gt;無視され、関数は次のように扱われる&lt;em&gt;分&lt;/em&gt;。最大として、 &lt;code&gt;&amp;lt;flex&amp;gt;&lt;/code&gt; 値はトラックのフレックスファクターを設定します。最低でも、ゼロとして扱われます（または、グリッドコンテナーが最小のコンテンツ制約の下でサイズ設定されている場合は、最小のコンテンツ）。</target>
        </trans-unit>
        <trans-unit id="120fe4eaa575766461b10fa15bed9c507d9e8e09" translate="yes" xml:space="preserve">
          <source>Is a functional notation that defines a size range greater than or equal to &lt;em&gt;min&lt;/em&gt; and less than or equal to &lt;em&gt;max&lt;/em&gt;. If &lt;em&gt;max&lt;/em&gt; is smaller than &lt;em&gt;min&lt;/em&gt;, then &lt;em&gt;max&lt;/em&gt; is ignored and the function is treated as &lt;em&gt;min&lt;/em&gt;. As a maximum, a &lt;code&gt;&amp;lt;flex&amp;gt;&lt;/code&gt; value sets the track&amp;rsquo;s flex factor. It is invalid as a minimum.</source>
          <target state="translated">&lt;em&gt;min&lt;/em&gt;以上で&lt;em&gt;max&lt;/em&gt;以下のサイズ範囲を定義する関数表記です。場合は&lt;em&gt;、最大が&lt;/em&gt;より小さい&lt;em&gt;分&lt;/em&gt;、その後、&lt;em&gt;最大は&lt;/em&gt;無視され、関数は次のように扱われる&lt;em&gt;分&lt;/em&gt;。最大として、 &lt;code&gt;&amp;lt;flex&amp;gt;&lt;/code&gt; 値はトラックのフレックスファクターを設定します。最低でも無効です。</target>
        </trans-unit>
        <trans-unit id="e789b4f30f6cb491da7145ca43ecab8095585058" translate="yes" xml:space="preserve">
          <source>Is a functional notation that defines a size range, greater than or equal to &lt;em&gt;min&lt;/em&gt;, and less than or equal to &lt;em&gt;max&lt;/em&gt;. If &lt;em&gt;max&lt;/em&gt; is smaller than &lt;em&gt;min&lt;/em&gt;, then &lt;em&gt;max&lt;/em&gt; is ignored and the function is treated as &lt;em&gt;min&lt;/em&gt;. As a maximum, a &lt;code&gt;&amp;lt;flex&amp;gt;&lt;/code&gt; value sets the track&amp;rsquo;s flex factor. It is invalid as a minimum.</source>
          <target state="translated">&lt;em&gt;min&lt;/em&gt;以上で&lt;em&gt;max&lt;/em&gt;以下のサイズ範囲を定義する関数表記です。場合は&lt;em&gt;、最大が&lt;/em&gt;より小さい&lt;em&gt;分&lt;/em&gt;、その後、&lt;em&gt;最大は&lt;/em&gt;無視され、関数は次のように扱われる&lt;em&gt;分&lt;/em&gt;。最大として、 &lt;code&gt;&amp;lt;flex&amp;gt;&lt;/code&gt; 値はトラックのフレックスファクターを設定します。最低でも無効です。</target>
        </trans-unit>
        <trans-unit id="20a6526f9695b4d2cd33a95647961ea00fc20a60" translate="yes" xml:space="preserve">
          <source>Is a keyword defined by &lt;a href=&quot;border-style&quot;&gt;&lt;code&gt;border-style&lt;/code&gt;&lt;/a&gt; describing the style of the rule. The styling must be interpreted as in the collapsing border model.</source>
          <target state="translated">ルールのスタイルを説明する&lt;a href=&quot;border-style&quot;&gt; &lt;code&gt;border-style&lt;/code&gt; で&lt;/a&gt;定義されたキーワードです。スタイリングは、折りたたみボーダーモデルと同様に解釈する必要があります。</target>
        </trans-unit>
        <trans-unit id="d5e1e202ac4d459c1cf6a41182bc3b4098c1f030" translate="yes" xml:space="preserve">
          <source>Is a keyword defined by &lt;a href=&quot;border-width&quot;&gt;&lt;code&gt;border-width&lt;/code&gt;&lt;/a&gt; describing the width of the rule. It may be either a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or one of the &lt;code&gt;thin&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, or &lt;code&gt;thick&lt;/code&gt; keywords.</source>
          <target state="translated">ルールの幅を表す&lt;a href=&quot;border-width&quot;&gt; &lt;code&gt;border-width&lt;/code&gt; &lt;/a&gt;によって定義されるキーワードです。これは、いずれであってもよい&lt;a href=&quot;length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;の一方または &lt;code&gt;thin&lt;/code&gt; 、 &lt;code&gt;medium&lt;/code&gt; 、又は &lt;code&gt;thick&lt;/code&gt; キーワード。</target>
        </trans-unit>
        <trans-unit id="e72b3f4cd7ee0738bf1123e15c4efcf90dfc8ac2" translate="yes" xml:space="preserve">
          <source>Is a keyword denoting the absence of images.</source>
          <target state="translated">画像がないことを表すキーワードです。</target>
        </trans-unit>
        <trans-unit id="d34e88a3a947617a3f900d7976651df64c447855" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating if it the function is &lt;a href=&quot;https://en.wikipedia.org/wiki/Left-continuous#Directional_and_semi-continuity&quot;&gt;left- or right-continuous&lt;/a&gt;:</source>
          <target state="translated">それが関数であるかどうかを示すキーワードである&lt;a href=&quot;https://en.wikipedia.org/wiki/Left-continuous#Directional_and_semi-continuity&quot;&gt;左または右連続は&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3abf6c9e2e39a5e5fdc908ab6dae1b641b8c4ab3" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the associated mask image is a luminance mask, i.e., that its &lt;a href=&quot;https://en.wikipedia.org/wiki/Luminance_%28relative%29&quot;&gt;relative luminance&lt;/a&gt; values must be used when applying it.</source>
          <target state="translated">関連するマスクイメージが輝度マスクであることを示すキーワードです。つまり、適用するときにその&lt;a href=&quot;https://en.wikipedia.org/wiki/Luminance_%28relative%29&quot;&gt;相対輝度&lt;/a&gt;値を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="460aaa8b49b03ce6ab6f604df48de1fa7335049d" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the associated mask image is an alpha mask, i.e., that its &lt;a href=&quot;https://en.wikipedia.org/wiki/Alpha_compositing&quot;&gt;alpha channel&lt;/a&gt; values must be used when applying it.</source>
          <target state="translated">関連するマスクイメージがアルファマスクであること、つまり、適用するときにその&lt;a href=&quot;https://en.wikipedia.org/wiki/Alpha_compositing&quot;&gt;アルファチャネル&lt;/a&gt;値を使用する必要があることを示すキーワードです。</target>
        </trans-unit>
        <trans-unit id="f3cc5ff706e3dc2b747ba85f0ceb2346c3c51b6d" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the element is &lt;em&gt;not&lt;/em&gt; moved down to clear past floating elements.</source>
          <target state="translated">要素が下に移動して過去の浮動要素をクリアし&lt;em&gt;ない&lt;/em&gt;ことを示すキーワードです。</target>
        </trans-unit>
        <trans-unit id="114951bc0d777052ff4853d68c78ade87b73a02d" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the element is moved down to clear floats on &lt;em&gt;end side of its containing block&lt;/em&gt;, that is the &lt;em&gt;right&lt;/em&gt; floats on ltr scripts and the &lt;em&gt;left&lt;/em&gt; floats on rtl scripts.</source>
          <target state="translated">要素が上の明確な山車まで下降していることを示すキーワードである&lt;em&gt;それを含むブロックの端部側&lt;/em&gt;で、&lt;em&gt;右側&lt;/em&gt; LTRのスクリプトとの山車&lt;em&gt;左&lt;/em&gt; RTLスクリプトの山車が。</target>
        </trans-unit>
        <trans-unit id="407cc57f0482f7370e01363868c3fa8564b116b8" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the element is moved down to clear floats on &lt;em&gt;start side of its containing block&lt;/em&gt;, that is the &lt;em&gt;left&lt;/em&gt; floats on ltr scripts and the &lt;em&gt;right&lt;/em&gt; floats on rtl scripts.</source>
          <target state="translated">要素が上の明確な山車まで下降していることを示すキーワードである&lt;em&gt;それを含むブロックの開始側&lt;/em&gt;で、&lt;em&gt;左側&lt;/em&gt; LTRスクリプトとの山車&lt;em&gt;右&lt;/em&gt; RTLスクリプトの山車が。</target>
        </trans-unit>
        <trans-unit id="19a22e5cc7afadf00816d9f79df2c1b4281c1262" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the element is moved down to clear past &lt;em&gt;both&lt;/em&gt; left and right floats.</source>
          <target state="translated">要素が下に移動して、左右&lt;em&gt;両方の&lt;/em&gt;フロートをクリアすることを示すキーワードです。</target>
        </trans-unit>
        <trans-unit id="c30e2e76c487e1c819dbf594c29b86a7310bc219" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the element is moved down to clear past &lt;em&gt;left&lt;/em&gt; floats.</source>
          <target state="translated">要素が下に移動して、過去の&lt;em&gt;左&lt;/em&gt;フロートをクリアすることを示すキーワードです。</target>
        </trans-unit>
        <trans-unit id="c33563b848d7237ce8a6cc397dfd628bac6543c4" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the element is moved down to clear past &lt;em&gt;right&lt;/em&gt; floats.</source>
          <target state="translated">要素を下に移動して、過去の&lt;em&gt;右&lt;/em&gt;フロートをクリアすることを示すキーワードです。</target>
        </trans-unit>
        <trans-unit id="a07bd44de3e0e8f206276d2eb47056a01a83a93f" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the extra space will be distributed between the elements of the ruby, and around it.</source>
          <target state="translated">ルビーの要素間やその周りに余分なスペースが分散されることを示すキーワードです。</target>
        </trans-unit>
        <trans-unit id="0610afe926af0312a716667dd8c4c8fec1f75b13" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the extra space will be distributed between the elements of the ruby.</source>
          <target state="translated">ルビーの要素間に余分なスペースが分散されることを示すキーワードです。</target>
        </trans-unit>
        <trans-unit id="b6595710d37ffd930deb661e441de44d9d73d448" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the property contributes nothing to the grid item&amp;rsquo;s placement, indicating auto-placement or a default span of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">プロパティがグリッドアイテムの配置に影響しないことを示すキーワードであり、自動配置またはデフォルトのスパン &lt;code&gt;1&lt;/code&gt; を示します。</target>
        </trans-unit>
        <trans-unit id="bc67f67ee78b0a4ab3d5a073848868e7a1ce3db3" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the property contributes nothing to the grid item&amp;rsquo;s placement, indicating auto-placement, an automatic span, or a default span of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">プロパティがグリッドアイテムの配置に影響しないことを示すキーワードで、自動配置、自動スパン、またはデフォルトのスパン &lt;code&gt;1&lt;/code&gt; を示します。</target>
        </trans-unit>
        <trans-unit id="b0b8be4d7bd60b8d6c26ac2837b21fb32eb159f4" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the ruby has to be placed between the different characters.</source>
          <target state="translated">ルビが異なる文字の間に配置されていることを示すキーワードです。</target>
        </trans-unit>
        <trans-unit id="86d4f3851cc4152c830cde3e5587a8bd7d946e4c" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the ruby has to be placed over the main text for horizontal scripts and right to it for vertical scripts.</source>
          <target state="translated">ルビは、横書きの場合は本文の上に、縦書きの場合は右に配置することを示すキーワードです。</target>
        </trans-unit>
        <trans-unit id="68c59da3a0f8d1b928a2ee02e9b1485c5af9d6a5" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the ruby has to be placed under the main text for horizontal scripts and left to it for vertical scripts.</source>
          <target state="translated">ルビは、横書きのスクリプトでは本文の下に、縦書きのスクリプトではその下に配置されなければならないことを示すキーワードです。</target>
        </trans-unit>
        <trans-unit id="bfbb6216fd67bac1b8e6981f8ef95bda410d2627" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the ruby will be aligned at the middle of the base text.</source>
          <target state="translated">ルビがベーステキストの中央に揃うことを示すキーワード。</target>
        </trans-unit>
        <trans-unit id="f07f04e24f1e10d98164064d4e83d477607b13dc" translate="yes" xml:space="preserve">
          <source>Is a keyword indicating that the ruby will be aligned with the start of the base text.</source>
          <target state="translated">ルビがベーステキストの先頭に揃うことを示すキーワード。</target>
        </trans-unit>
        <trans-unit id="561b4115d3680871d66d7c3d06bf0c929be56693" translate="yes" xml:space="preserve">
          <source>Is a keyword meaning that there is no explicit grid. Any columns will be implicitly generated and their size will be determined by the &lt;a href=&quot;grid-auto-columns&quot;&gt;&lt;code&gt;grid-auto-columns&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">明示的なグリッドがないことを意味するキーワードです。列は暗黙的に生成され、そのサイズは&lt;a href=&quot;grid-auto-columns&quot;&gt; &lt;code&gt;grid-auto-columns&lt;/code&gt; &lt;/a&gt;プロパティによって決定されます。</target>
        </trans-unit>
        <trans-unit id="bab374224af3353a4d8d3907335e894a22fae28c" translate="yes" xml:space="preserve">
          <source>Is a keyword meaning that there is no explicit grid. Any rows will be implicitly generated and their size will be determined by the &lt;a href=&quot;grid-auto-rows&quot;&gt;&lt;code&gt;grid-auto-rows&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">明示的なグリッドがないことを意味するキーワードです。行は暗黙的に生成され、そのサイズは&lt;a href=&quot;grid-auto-rows&quot;&gt; &lt;code&gt;grid-auto-rows&lt;/code&gt; &lt;/a&gt;プロパティによって決定されます。</target>
        </trans-unit>
        <trans-unit id="e25ac411bcf3317eb776d1dc3a38bd3315f263db" translate="yes" xml:space="preserve">
          <source>Is a keyword representing either the type of the attribute's value, or its unit, as in HTML some attributes have implicit units. If the use of &lt;code&gt;&amp;lt;type-or-unit&amp;gt;&lt;/code&gt; as a value for the given attribute is invalid, the &lt;code&gt;attr()&lt;/code&gt; expression will be invalid too. If omitted, it defaults to &lt;code&gt;string&lt;/code&gt;. The list of valid values are:</source>
          <target state="translated">属性値のタイプまたはその単位を表すキーワードです。HTMLでは一部の属性に暗黙の単位があります。指定した属性の値として &lt;code&gt;&amp;lt;type-or-unit&amp;gt;&lt;/code&gt; の使用が無効な場合、 &lt;code&gt;attr()&lt;/code&gt; 式も無効になります。省略した場合のデフォルトは &lt;code&gt;string&lt;/code&gt; です。有効な値のリストは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="bfa33a418965c088b85166e03324297d0ca1f518" translate="yes" xml:space="preserve">
          <source>Is a keyword representing the largest maximal content contribution of the grid items occupying the grid track.</source>
          <target state="translated">グリッドトラックを占有しているグリッドアイテムの中で、最大のコンテンツ貢献度を表すキーワードです。</target>
        </trans-unit>
        <trans-unit id="cb26610cb210d230dd0c08b0ff8e3ea4bae4cf5d" translate="yes" xml:space="preserve">
          <source>Is a keyword representing the largest minimal content contribution of the grid items occupying the grid track.</source>
          <target state="translated">グリッドトラックを占めるグリッドアイテムの中で、最大の最小コンテンツ貢献度を表すキーワードです。</target>
        </trans-unit>
        <trans-unit id="797235e54af49dbd28484e8f696c1af3d43a27a3" translate="yes" xml:space="preserve">
          <source>Is a keyword specifying that the auto-placement algorithm places items, by filling each column in turn, adding new columns as necessary.</source>
          <target state="translated">自動配置アルゴリズムがアイテムを配置する際に、各列を順番に埋めていき、必要に応じて新しい列を追加していくことを指定するキーワードです。</target>
        </trans-unit>
        <trans-unit id="76408cc0571ff85e4248bca88af0688864ea31be" translate="yes" xml:space="preserve">
          <source>Is a keyword specifying that the auto-placement algorithm places items, by filling each row in turn, adding new rows as necessary. If neither &lt;code&gt;row&lt;/code&gt; nor &lt;code&gt;column&lt;/code&gt; is provided, &lt;code&gt;row&lt;/code&gt; is assumed.</source>
          <target state="translated">自動配置アルゴリズムがアイテムを配置することを指定するキーワードです。各行を順番に埋め、必要に応じて新しい行を追加します。 &lt;code&gt;row&lt;/code&gt; も &lt;code&gt;column&lt;/code&gt; も指定されていない場合、 &lt;code&gt;row&lt;/code&gt; が想定されます。</target>
        </trans-unit>
        <trans-unit id="dfe7f56d1933b10fc64a91a2758f59c35acf3f15" translate="yes" xml:space="preserve">
          <source>Is a keyword specifying that the auto-placement algorithm uses a &amp;ldquo;dense&amp;rdquo; packing algorithm, which attempts to fill in holes earlier in the grid, if smaller items come up later. This may cause items to appear out-of-order, when doing so would fill in holes left by larger items.</source>
          <target state="translated">自動配置アルゴリズムが「密な」パッキングアルゴリズムを使用することを指定するキーワードです。これは、小さいアイテムが後で発生した場合にグリッドの早い段階で穴を埋めようとします。これにより、アイテムの順序が乱れる場合があります。そうすると、大きなアイテムによって残された穴が埋められます。</target>
        </trans-unit>
        <trans-unit id="c94726b509a187a96238a5b78ec249cc68fc7005" translate="yes" xml:space="preserve">
          <source>Is a keyword that converts all characters to lowercase.</source>
          <target state="translated">すべての文字を小文字に変換するキーワードです。</target>
        </trans-unit>
        <trans-unit id="0d5410fdaf8d9277fb2fab6eccc9747d5fe10a00" translate="yes" xml:space="preserve">
          <source>Is a keyword that converts all characters to uppercase.</source>
          <target state="translated">すべての文字を大文字に変換するキーワードです。</target>
        </trans-unit>
        <trans-unit id="5cb25ba4e0cae1c491d0f55950d62a51f1c3cd8d" translate="yes" xml:space="preserve">
          <source>Is a keyword that converts the first &lt;em&gt;letter&lt;/em&gt; of each word to uppercase. Other characters remain unchanged (they retain their original case as written in the element's text). A letter is defined as a character that is part of Unicode's Letter or Number general categories ; thus, any punctuation marks or symbols at the beginning of a word are ignored.</source>
          <target state="translated">各単語の最初の&lt;em&gt;文字&lt;/em&gt;を大文字に変換するキーワードです。他の文字は変更されません（要素のテキストに記述されている元の大文字と小文字が保持されます）。文字は、Unicodeの文字または数字の一般カテゴリの一部である文字として定義されます。したがって、単語の先頭にある句読点や記号は無視されます。</target>
        </trans-unit>
        <trans-unit id="c9e55746b5a95baeb0d8127ec283391f8e91be4e" translate="yes" xml:space="preserve">
          <source>Is a keyword that forces the writing of a character &amp;mdash; mainly ideograms and Latin scripts &amp;mdash; inside a square, allowing them to be aligned in the usual East Asian scripts (like Chinese or Japanese).</source>
          <target state="translated">文字（主に表意文字とラテン文字）を正方形の中に強制的に書き込み、通常の東アジア文字（中国語や日本語など）に揃えることができるキーワードです。</target>
        </trans-unit>
        <trans-unit id="f2c855f87cfb38863b632809738cdf5d0b99f7c0" translate="yes" xml:space="preserve">
          <source>Is a keyword that is identical to maximal content if it's a maximum. As a minimum it represents the largest minimum size (as specified by &lt;a href=&quot;min-width&quot;&gt;&lt;code&gt;min-width&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;min-height&quot;&gt;&lt;code&gt;min-height&lt;/code&gt;&lt;/a&gt;) of the grid items occupying the grid track.</source>
          <target state="translated">最大の場合、最大のコンテンツと同一のキーワードです。最小値は、グリッドトラックを占めるグリッドアイテムの最大最小サイズ（&lt;a href=&quot;min-width&quot;&gt; &lt;code&gt;min-width&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;min-height&quot;&gt; &lt;code&gt;min-height&lt;/code&gt; で指定&lt;/a&gt;）を表します。</target>
        </trans-unit>
        <trans-unit id="56ae719dda10bba3e085a0b20c5cafd50ef75fad" translate="yes" xml:space="preserve">
          <source>Is a keyword that prevents the case of all characters from being changed.</source>
          <target state="translated">すべての文字の大文字小文字を変更しないようにするキーワードです。</target>
        </trans-unit>
        <trans-unit id="ee98174de78d55f7de137a0ad5c49e70ed8fdb6a" translate="yes" xml:space="preserve">
          <source>Is a keyword that sets all three longhand properties to &lt;code&gt;none&lt;/code&gt;, meaning there is no explicit grid. There are no named grid areas. Rows and columns will be implicitly generated; their size will be determined by the &lt;a href=&quot;grid-auto-rows&quot;&gt;&lt;code&gt;grid-auto-rows&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;grid-auto-columns&quot;&gt;&lt;code&gt;grid-auto-columns&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">3つのロングハンドプロパティすべてを &lt;code&gt;none&lt;/code&gt; に設定するキーワードです。つまり、明示的なグリッドはありません。名前付きのグリッド領域はありません。行と列は暗黙的に生成されます。それらのサイズは、&lt;a href=&quot;grid-auto-rows&quot;&gt; &lt;code&gt;grid-auto-rows&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;grid-auto-columns&quot;&gt; &lt;code&gt;grid-auto-columns&lt;/code&gt; &lt;/a&gt;プロパティによって決定されます。</target>
        </trans-unit>
        <trans-unit id="2dca3ae15cdebc0b3afb691bef8acff76451f2e8" translate="yes" xml:space="preserve">
          <source>Is a non-negative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; value relative to the block size of the grid container. If the block size of the grid container is indefinite, the percentage value is treated like &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">グリッドコンテナーのブロックサイズに対して負でない&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;値です。グリッドコンテナーのブロックサイズが不明確な場合、パーセンテージ値は &lt;code&gt;auto&lt;/code&gt; のように扱われます。</target>
        </trans-unit>
        <trans-unit id="9028971555f7aa60f91a89128a2827e816a12d02" translate="yes" xml:space="preserve">
          <source>Is a non-negative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; value relative to the inline size of the grid container. If the size of the grid container depends on the size of its tracks, then the percentage must be treated as &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">グリッドコンテナーのインラインサイズに対して負でない&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;値です。グリッドコンテナーのサイズがそのトラックのサイズに依存する場合、パーセンテージは &lt;code&gt;auto&lt;/code&gt; として扱う必要があります。</target>
        </trans-unit>
        <trans-unit id="dc2c50fa749cf2f5d76f21abaedfde80a80acbc5" translate="yes" xml:space="preserve">
          <source>Is a non-negative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; value, relative to the block size of the grid container. If the size of the grid container depends on the size of its tracks, then the percentage must be treated as &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">グリッドコンテナーのブロックサイズを基準にした、負でない&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;値です。グリッドコンテナーのサイズがそのトラックのサイズに依存する場合、パーセンテージは &lt;code&gt;auto&lt;/code&gt; として扱う必要があります。</target>
        </trans-unit>
        <trans-unit id="fd11e5207e57e89ba6492db66b6b4aded874f039" translate="yes" xml:space="preserve">
          <source>Is a non-negative dimension with the unit &lt;code&gt;fr&lt;/code&gt; specifying the track&amp;rsquo;s flex factor. Each &lt;code&gt;&amp;lt;flex&amp;gt;&lt;/code&gt;-sized track takes a share of the remaining space in proportion to its flex factor.</source>
          <target state="translated">単位 &lt;code&gt;fr&lt;/code&gt; がトラックのフレックスファクターを指定する非負の次元です。各 &lt;code&gt;&amp;lt;flex&amp;gt;&lt;/code&gt; サイズのトラックは、フレックスファクターに比例して残りのスペースを占有します。</target>
        </trans-unit>
        <trans-unit id="8a97abbdd5f8b3e698764bf4db7f2db19198761d" translate="yes" xml:space="preserve">
          <source>Is a non-negative dimension with the unit &lt;code&gt;fr&lt;/code&gt; specifying the track&amp;rsquo;s flex factor. Each &lt;code&gt;&amp;lt;flex&amp;gt;&lt;/code&gt;-sized track takes a share of the remaining space in proportion to its flex factor. When appearing outside a &lt;code&gt;minmax()&lt;/code&gt; notation, it implies an automatic minimum (i.e. &lt;code&gt;minmax(auto, &amp;lt;flex&amp;gt;)&lt;/code&gt;).</source>
          <target state="translated">単位 &lt;code&gt;fr&lt;/code&gt; がトラックのフレックスファクターを指定する非負の次元です。各 &lt;code&gt;&amp;lt;flex&amp;gt;&lt;/code&gt; サイズのトラックは、フレックスファクターに比例して残りのスペースを占有します。 &lt;code&gt;minmax()&lt;/code&gt; 表記の外に現れる場合、それは自動的な最小値（つまり &lt;code&gt;minmax(auto, &amp;lt;flex&amp;gt;)&lt;/code&gt; ）を意味します。</target>
        </trans-unit>
        <trans-unit id="eaa03c2c089e69390574009bc29af693a329322f" translate="yes" xml:space="preserve">
          <source>Is a non-negative length.</source>
          <target state="translated">負ではない長さです。</target>
        </trans-unit>
        <trans-unit id="9230471c89460fbc268e8a93abe1379ab71dabed" translate="yes" xml:space="preserve">
          <source>Is a strictly positive &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;&lt;/a&gt; describing the ideal number of columns into which the content of the element will be flowed. If the &lt;a href=&quot;column-width&quot;&gt;&lt;code&gt;column-width&lt;/code&gt;&lt;/a&gt; is also set to a non-&lt;code&gt;auto&lt;/code&gt; value, it merely indicates the maximum allowed number of columns.</source>
          <target state="translated">要素のコンテンツがフローされる列の理想的な数を説明する厳密に正の&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt; &lt;/a&gt;です。&lt;a href=&quot;column-width&quot;&gt; &lt;code&gt;column-width&lt;/code&gt; &lt;/a&gt;も &lt;code&gt;auto&lt;/code&gt; 以外の値に設定されている場合は、列の最大許容数を示すだけです。</target>
        </trans-unit>
        <trans-unit id="50a624bd11d22f881dcf34f8a22eb687692639ed" translate="yes" xml:space="preserve">
          <source>Is a strictly positive &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;&lt;/a&gt;, representing the amount of equidistant intervals composing the stepping function.</source>
          <target state="translated">厳密に正の&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt; &lt;/a&gt;であり、ステッピング関数を構成する等間隔の間隔の量を表します。</target>
        </trans-unit>
        <trans-unit id="1dff28b30f47bb1dbe2c5a253787a8faa9ae9b79" translate="yes" xml:space="preserve">
          <source>Is a strictly positive &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;&lt;/a&gt;, representing the amount of equidistant treads composing the stepping function.</source>
          <target state="translated">厳密に正の&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt; &lt;/a&gt;で、ステッピング関数を構成する等距離の踏み板の量を表します。</target>
        </trans-unit>
        <trans-unit id="be8627c55f2448ca1c41fd8ba2d719b6dbfbd9d8" translate="yes" xml:space="preserve">
          <source>Is a synonym for &lt;code&gt;khmer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;khmer&lt;/code&gt; 同義語です</target>
        </trans-unit>
        <trans-unit id="5c2cf2da35dc3e2375b1a32c6c6ca2c5549e6665" translate="yes" xml:space="preserve">
          <source>Is an &lt;a href=&quot;../angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the angle of the rotation. A positive angle denotes a clockwise rotation, a negative angle a counter-clockwise one.</source>
          <target state="translated">ある&lt;a href=&quot;../angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;回転の角度を表すが。正の角度は時計回りの回転を示し、負の角度は反時計回りの回転を示します。</target>
        </trans-unit>
        <trans-unit id="f192728f7df26e7f34dbbebf6b07630139b32dd2" translate="yes" xml:space="preserve">
          <source>Is an &lt;a href=&quot;../angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the angle to use to distort the element along the abscissa.</source>
          <target state="translated">ある&lt;a href=&quot;../angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;横軸に沿った要素を歪めるために使用する角度を表すが。</target>
        </trans-unit>
        <trans-unit id="a4a53a1d585e2bba3116c84390a7e8d6cf2bd15b" translate="yes" xml:space="preserve">
          <source>Is an &lt;a href=&quot;../angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the angle to use to distort the element along the ordinate.</source>
          <target state="translated">ある&lt;a href=&quot;../angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;縦軸に沿って要素を歪めるために使用する角度を表すが。</target>
        </trans-unit>
        <trans-unit id="d9b7b161a573169f5e888cf6444ea1c67fec8a4d" translate="yes" xml:space="preserve">
          <source>Is an &lt;a href=&quot;../angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the angle to use to distort the element along the ordinate. If not defined, its default value is &lt;code&gt;0&lt;/code&gt;, resulting in a purely horizontal skewing.</source>
          <target state="translated">ある&lt;a href=&quot;../angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;縦軸に沿って要素を歪めるために使用する角度を表すが。定義されていない場合、デフォルト値は &lt;code&gt;0&lt;/code&gt; であり、純粋に水平方向の傾斜になります。</target>
        </trans-unit>
        <trans-unit id="b763207f34d4a38b1bf8bab9d680f9749bce400e" translate="yes" xml:space="preserve">
          <source>Is an &lt;a href=&quot;../angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the angle to use to distort the element along the x-axis (or abscissa).</source>
          <target state="translated">ある&lt;a href=&quot;../angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;角度を表すが、x軸に沿った要素を歪めるために使用する（又は横座標）。</target>
        </trans-unit>
        <trans-unit id="f0f4628b64c6c69f2590685b346d77a305650ebe" translate="yes" xml:space="preserve">
          <source>Is an &lt;a href=&quot;../angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the angle to use to distort the element along the y-axis (or ordinate). If not defined, its default value is &lt;code&gt;0&lt;/code&gt;, resulting in a purely horizontal skewing.</source>
          <target state="translated">ある&lt;a href=&quot;../angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt; y軸（または縦）に沿って素子を歪ませるために使用する角度を表すが。定義されていない場合、デフォルト値は &lt;code&gt;0&lt;/code&gt; であり、純粋に水平方向のスキューになります。</target>
        </trans-unit>
        <trans-unit id="ef158b6bfc74d62c9975496c875330103ea870de" translate="yes" xml:space="preserve">
          <source>Is an &lt;a href=&quot;image&quot;&gt;&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt;&lt;/a&gt; denoting the image to display. There can be several of them, separated by commas, as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_multiple_backgrounds&quot;&gt;multiple backgrounds&lt;/a&gt; are supported.</source>
          <target state="translated">ある&lt;a href=&quot;image&quot;&gt; &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; &lt;/a&gt;表示する画像を表すが。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_multiple_backgrounds&quot;&gt;複数の背景&lt;/a&gt;がサポートされているため、コンマで区切って複数存在することができます。</target>
        </trans-unit>
        <trans-unit id="8179d2327d68c1eb00a5f6029249135809fcf242" translate="yes" xml:space="preserve">
          <source>Is an &lt;a href=&quot;image&quot;&gt;&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt;&lt;/a&gt; denoting the image to display. There can be several of them, separated by commas, as &lt;a href=&quot;multiple_backgrounds&quot;&gt;multiple backgrounds&lt;/a&gt; are supported.</source>
          <target state="translated">ある&lt;a href=&quot;image&quot;&gt; &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; &lt;/a&gt;表示する画像を表すが。&lt;a href=&quot;multiple_backgrounds&quot;&gt;複数の背景&lt;/a&gt;がサポートされているので、カンマで区切っていくつか表示できます。</target>
        </trans-unit>
        <trans-unit id="6588799b28ebce2484f0d8dfcd9458d120b61396" translate="yes" xml:space="preserve">
          <source>Is any available input mechanism a pointing device, and if so, how accurate is it?</source>
          <target state="translated">利用可能な入力機構はポインティングデバイスなのか、またその場合、どの程度の精度があるのか?</target>
        </trans-unit>
        <trans-unit id="5f6a7b2bf4afd549dea268d4a134ca693035821c" translate="yes" xml:space="preserve">
          <source>Is either a &lt;a href=&quot;@supports#Syntax&quot;&gt;&lt;code&gt;&amp;lt;supports-condition&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;syntax#CSS_declarations&quot;&gt;&lt;code&gt;&amp;lt;declaration&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;@supports#Syntax&quot;&gt; &lt;code&gt;&amp;lt;supports-condition&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;syntax#CSS_declarations&quot;&gt; &lt;code&gt;&amp;lt;declaration&amp;gt;&lt;/code&gt; の&lt;/a&gt;いずれかです。</target>
        </trans-unit>
        <trans-unit id="969954b7cccc1b71f17f4b5c0bcb8bc32f3c8eac" translate="yes" xml:space="preserve">
          <source>Is it a CORS issue?</source>
          <target state="translated">CORSの問題かな?</target>
        </trans-unit>
        <trans-unit id="a967a72b1fdaa992f4826524b96c3ea51db32699" translate="yes" xml:space="preserve">
          <source>Is it safe to use CSS grids for my layout?</source>
          <target state="translated">私のレイアウトにCSSのグリッドを使用しても安全ですか?</target>
        </trans-unit>
        <trans-unit id="1ceaa92a802c58fbc9e995c53fe681fc43734b79" translate="yes" xml:space="preserve">
          <source>Is one of the &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, or &lt;code&gt;center&lt;/code&gt; keyword describing the corresponding offset.</source>
          <target state="translated">一つであり &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;top&lt;/code&gt; 、 &lt;code&gt;bottom&lt;/code&gt; 、または &lt;code&gt;center&lt;/code&gt; キーワードは対応するオフセットを記述する。</target>
        </trans-unit>
        <trans-unit id="fb2f14fda905660cc1bcf7484ae8ccd4863fcf21" translate="yes" xml:space="preserve">
          <source>Is one of the &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, or &lt;code&gt;center&lt;/code&gt; keyword describing how far from the left edge of the box the origin of the transform is set.</source>
          <target state="translated">変換の原点がボックスの左端からどれだけ離れているかを示す &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、または &lt;code&gt;center&lt;/code&gt; キーワードのいずれかです。</target>
        </trans-unit>
        <trans-unit id="94469d73ee5983305f97b12c18ea5e57ecca0b58" translate="yes" xml:space="preserve">
          <source>Is one of the &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, or &lt;code&gt;center&lt;/code&gt; keyword describing how far from the top edge of the box the origin of the transform is set.</source>
          <target state="translated">トランスフォームの原点がボックスの上端からどれだけ離れているかを示す &lt;code&gt;top&lt;/code&gt; 、 &lt;code&gt;bottom&lt;/code&gt; 、または &lt;code&gt;center&lt;/code&gt; キーワードのいずれかです。</target>
        </trans-unit>
        <trans-unit id="fe4bdafd5b1e10460b4d4ab525eab19d0eaf52f0" translate="yes" xml:space="preserve">
          <source>Is the name of an attribute on the HTML element referenced in the CSS.</source>
          <target state="translated">CSSで参照されるHTML要素上の属性名です。</target>
        </trans-unit>
        <trans-unit id="d0c0ff04de8fe38db9e59acf91b08b5aa8a40fbf" translate="yes" xml:space="preserve">
          <source>Is the primary input mechanism a pointing device, and if so, how accurate is it?</source>
          <target state="translated">第一次入力機構はポインティングデバイスなのか、その場合の精度は?</target>
        </trans-unit>
        <trans-unit id="fef6f203817e58c01d740706770af34f2b0429a0" translate="yes" xml:space="preserve">
          <source>Is the user agent or underlying OS inverting colors?</source>
          <target state="translated">ユーザーエージェントや基盤となるOSが色を反転させているのでしょうか?</target>
        </trans-unit>
        <trans-unit id="6adf2779058bb9c161faf2ec3b7f9bccfe5abeea" translate="yes" xml:space="preserve">
          <source>Is the width of the gutter separating the grid lines, relative to the dimension of the element.</source>
          <target state="translated">グリッド線を区切る溝の幅は、要素の寸法に対する相対的なものです。</target>
        </trans-unit>
        <trans-unit id="3f8f4bf6a50d484d4bc5ac290cb2d992a4460163" translate="yes" xml:space="preserve">
          <source>Is the width of the gutter separating the grid lines.</source>
          <target state="translated">グリッドラインを区切る溝の幅です。</target>
        </trans-unit>
        <trans-unit id="6cebcee0bcfce45687e5ed59d49f9b1f51373f32" translate="yes" xml:space="preserve">
          <source>Is the width of the gutter separating the rows. &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; values are relative to the dimension of the element.</source>
          <target state="translated">行を区切る側溝の幅です。&lt;a href=&quot;percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; の&lt;/a&gt;値は、要素の寸法を基準にしています。</target>
        </trans-unit>
        <trans-unit id="c1b412c4acc9d41416229834f90a70526e25431b" translate="yes" xml:space="preserve">
          <source>Is used when you need the marker representations to be of a minimum length. For example if you want the counters to start at 01 and go through 02, 03, 04 etc, then the pad descriptor is to be used. For representations larger than the specified pad value, the marker is constructed as normal.</source>
          <target state="translated">マーカー表現を最小の長さにする必要がある場合に使用します。例えば、カウンタが01から始まり、02、03、04などを通過するようにしたい場合は、パッド記述子を使用します。指定したパッド値よりも大きな値の表現の場合は、マーカは通常通りに作成されます。</target>
        </trans-unit>
        <trans-unit id="515e555fa0f8d3876c8f1c3dd55a25589700cea7" translate="yes" xml:space="preserve">
          <source>It allows specifying the coordinates of the cursor's hotspot, which will be clamped to the boundaries of the cursor image. If none are specified, the coordinates of the hotspot are read from the file itself (for CUR and XBM files) or are set to the top left corner of the image. An example of the CSS3 syntax is:</source>
          <target state="translated">カーソル画像の境界にクランプされるカーソルのホットスポットの座標を指定することができます。何も指定されていない場合、ホットスポットの座標はファイル自体から読み込まれるか(CURとXBMファイルの場合)、画像の左上隅に設定されます。CSS3の構文の例は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="a8f67a5d51a5498cd40c9e6bf502b722b402573c" translate="yes" xml:space="preserve">
          <source>It also truncates any margins collapsed with such a margin.</source>
          <target state="translated">また、そのような余白で折りたたまれた余白は切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="813689606e35d77191acd7d293d36db47eb9b971" translate="yes" xml:space="preserve">
          <source>It can also be used as laid out box size for &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;min-width&quot;&gt;&lt;code&gt;min-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;min-height&quot;&gt;&lt;code&gt;min-height&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;max-width&quot;&gt;&lt;code&gt;max-width&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;max-height&quot;&gt;&lt;code&gt;max-height&lt;/code&gt;&lt;/a&gt;, where the maximum size refers to the maximum content size and the minimum size to the minimum content size.</source>
          <target state="translated">&lt;a href=&quot;width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;height&quot;&gt; &lt;code&gt;height&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;min-width&quot;&gt; &lt;code&gt;min-width&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;min-height&quot;&gt; &lt;code&gt;min-height&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;max-width&quot;&gt; &lt;code&gt;max-width&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;max-height&quot;&gt; &lt;code&gt;max-height&lt;/code&gt; の&lt;/a&gt;レイアウトボックスサイズとして使用することもできます。最大サイズは最大コンテンツサイズを、最小サイズは最小コンテンツサイズを指します。 。</target>
        </trans-unit>
        <trans-unit id="118de703ae3641614e46f520fd6dfe21fd0e7987" translate="yes" xml:space="preserve">
          <source>It can be read as the &lt;em&gt;An+B&lt;/em&gt;th element of a list.</source>
          <target state="translated">これは、リストの&lt;em&gt;An + B&lt;/em&gt;番目の要素として読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="d3afb4575d2643064cd8dcd35052b348fc0e334a" translate="yes" xml:space="preserve">
          <source>It corresponds to the &lt;a href=&quot;margin-top&quot;&gt;&lt;code&gt;margin-top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-right&quot;&gt;&lt;code&gt;margin-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-bottom&quot;&gt;&lt;code&gt;margin-bottom&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;margin-left&quot;&gt;&lt;code&gt;margin-left&lt;/code&gt;&lt;/a&gt; property depending on the values defined for &lt;a href=&quot;writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;text-orientation&quot;&gt;&lt;code&gt;text-orientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;writing-mode&quot;&gt; &lt;code&gt;writing-mode&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;direction&quot;&gt; &lt;code&gt;direction&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;text-orientation&quot;&gt; &lt;code&gt;text-orientation&lt;/code&gt; に&lt;/a&gt;定義された値に応じて、&lt;a href=&quot;margin-top&quot;&gt; &lt;code&gt;margin-top&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;margin-right&quot;&gt; &lt;code&gt;margin-right&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;margin-bottom&quot;&gt; &lt;code&gt;margin-bottom&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;margin-left&quot;&gt; &lt;code&gt;margin-left&lt;/code&gt; &lt;/a&gt;プロパティに対応します。</target>
        </trans-unit>
        <trans-unit id="d8ee23fa96a555c293d1542b83047ae79bbd1356" translate="yes" xml:space="preserve">
          <source>It could be helpful in ensuring users see each section of the scroller and don't accidentally zip past them. However it could be problematic in making the scrolling experience slower if the user is looking for a particular section.</source>
          <target state="translated">これは、ユーザーがスクロールバーの各セクションを見て、誤って通過してしまわないようにするのに役立つかもしれません。しかし、ユーザーが特定のセクションを探している場合、スクロールの速度が遅くなるという問題があります。</target>
        </trans-unit>
        <trans-unit id="ffb03def436d2e0a47de2de8fe869726b2a9acc8" translate="yes" xml:space="preserve">
          <source>It does not apply</source>
          <target state="translated">該当しない</target>
        </trans-unit>
        <trans-unit id="17564c859b261d9d28762c76b7909e8709aa9c99" translate="yes" xml:space="preserve">
          <source>It first filters all the rules from the different sources to keep only the rules that apply to a given element. That means rules whose selector matches the given element and which are part of an appropriate &lt;code&gt;media&lt;/code&gt; at-rule.</source>
          <target state="translated">まず、さまざまなソースからのすべてのルールをフィルタリングして、特定の要素に適用されるルールのみを保持します。つまり、セレクターが指定された要素と一致し、適切な &lt;code&gt;media&lt;/code&gt; のルールの一部であるルールを意味します。</target>
        </trans-unit>
        <trans-unit id="c90f6829f2a89da52276ca3facd7cbf434c05d37" translate="yes" xml:space="preserve">
          <source>It first filters all the rules from the different sources to keep only the rules that apply to a given element. That means rules whose selector matches the given element and which are part of an appropriate media at-rule.</source>
          <target state="translated">それは最初に異なるソースからのすべてのルールをフィルタリングして、与えられた要素に適用されるルールだけを保持します。これは、セレクタが与えられた要素にマッチし、適切なメディアルールの一部であるルールを意味します。</target>
        </trans-unit>
        <trans-unit id="4b9ad82addee7771b6d793da7c0754b0309ece0c" translate="yes" xml:space="preserve">
          <source>It is a &lt;a href=&quot;shorthand_properties&quot;&gt;shorthand property&lt;/a&gt; that sets both the &lt;a href=&quot;column-width&quot;&gt;&lt;code&gt;column-width&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;column-count&quot;&gt;&lt;code&gt;column-count&lt;/code&gt;&lt;/a&gt; properties in a single, convenient declaration. As with all shorthand properties, any omitted sub-values will be set to their &lt;a href=&quot;initial_value&quot;&gt;initial value&lt;/a&gt;.</source>
          <target state="translated">これは、単一の便利な宣言で&lt;a href=&quot;column-width&quot;&gt; &lt;code&gt;column-width&lt;/code&gt; &lt;/a&gt;プロパティと&lt;a href=&quot;column-count&quot;&gt; &lt;code&gt;column-count&lt;/code&gt; &lt;/a&gt;プロパティの両方を設定する&lt;a href=&quot;shorthand_properties&quot;&gt;省略プロパティ&lt;/a&gt;です。すべての省略プロパティと同様に、省略されたサブ値はすべて&lt;a href=&quot;initial_value&quot;&gt;初期値に&lt;/a&gt;設定されます。</target>
        </trans-unit>
        <trans-unit id="88420ab8e9964decb11e267dc0af69b7ac4bd84a" translate="yes" xml:space="preserve">
          <source>It is a &lt;a href=&quot;shorthand_properties&quot;&gt;shorthand property&lt;/a&gt; that sets the individual &lt;code&gt;column-rule-*&lt;/code&gt; properties in a single, convenient declaration: &lt;a href=&quot;column-rule-width&quot;&gt;&lt;code&gt;column-rule-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;column-rule-style&quot;&gt;&lt;code&gt;column-rule-style&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;column-rule-color&quot;&gt;&lt;code&gt;column-rule-color&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;column-rule-width&quot;&gt; &lt;code&gt;column-rule-width&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;column-rule-style&quot;&gt; &lt;code&gt;column-rule-style&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;column-rule-color&quot;&gt; &lt;code&gt;column-rule-color&lt;/code&gt; の&lt;/a&gt;単一の便利な宣言で個々の &lt;code&gt;column-rule-*&lt;/code&gt; &lt;a href=&quot;shorthand_properties&quot;&gt;プロパティ&lt;/a&gt;を設定する省略プロパティです。</target>
        </trans-unit>
        <trans-unit id="afb3148159143e6b80b8581ab5021729ae199532" translate="yes" xml:space="preserve">
          <source>It is a pain having to write another rule to achieve this, and it is also not very flexible. Instead, &lt;code&gt;margin-trim&lt;/code&gt; could fix it:</source>
          <target state="translated">これを達成するために別のルールを作成しなければならないのは面倒であり、柔軟性もあまりありません。代わりに、 &lt;code&gt;margin-trim&lt;/code&gt; で修正できます。</target>
        </trans-unit>
        <trans-unit id="1f4171d368aa24ccdab3f516bb4a6afed5fa5174" translate="yes" xml:space="preserve">
          <source>It is also possible to create a masonry layout with items loading into rows.</source>
          <target state="translated">列にアイテムを読み込ませて石積みのレイアウトを作ることも可能です。</target>
        </trans-unit>
        <trans-unit id="979ee4b431ed11ea7e60ab3a3add3233527e3597" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;inline flex&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inline flex&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="8c1a9eebf213a43577303ae60bd236b23ec8745a" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;inline flow-root&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inline flow-root&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="9603703a2c56cdcca2ca77adbf8a95cba324c520" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;inline grid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inline grid&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="cabf88927d0d3f57df7767d8847463cf5c87033d" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;inline table&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inline table&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="5328ae63871ade250fc5fac23b73291d8ef267f9" translate="yes" xml:space="preserve">
          <source>It is even possible to apply several transformations in a row:</source>
          <target state="translated">複数の変換を一列に並べて適用することも可能です。</target>
        </trans-unit>
        <trans-unit id="e3d394f7e75d591aa7633fe6bbfae1bf7d9bb7d0" translate="yes" xml:space="preserve">
          <source>It is important to ensure that the contrast ratio between the background color and the color of the text placed over it is high enough that people experiencing low vision conditions will be able to read the content of the page.</source>
          <target state="translated">背景色とその上に配置された文字の色のコントラスト比が、弱視の人がページの内容を読むことができる程度に高くなるようにすることが重要です。</target>
        </trans-unit>
        <trans-unit id="86cef34adf890f4bf6f4008f58aedf6383ec8f05" translate="yes" xml:space="preserve">
          <source>It is important to ensure that the contrast ratio between the color of the placeholder text and the background of the input is high enough that people experiencing low vision conditions will be able to read it while also making sure there is enough of a difference between the placeholder text and input text color that users do not mistake the placeholder for inputed data.</source>
          <target state="translated">プレースホルダテキストの色と入力の背景とのコントラスト比が、弱視の人でも読めるように十分に高くなるようにすることが重要です。</target>
        </trans-unit>
        <trans-unit id="650392f280ed4de9eb9c61598437536d4f77b7df" translate="yes" xml:space="preserve">
          <source>It is important to ensure that the contrast ratio between the color of the text and the background the text is placed over is high enough that people experiencing low vision conditions will be able to read the content of the page.</source>
          <target state="translated">テキストの色とテキストが置かれている背景のコントラスト比が、弱視の人がページの内容を読むことができる程度に高くなるようにすることが重要です。</target>
        </trans-unit>
        <trans-unit id="52aea370a0f1203372f535b6dd9497d72031b16a" translate="yes" xml:space="preserve">
          <source>It is important to ensure that the contrast ratio between the color of the text, the background the text is placed over, and the text decoration line is high enough that people experiencing low vision conditions will be able to read the content of the page. Color contrast ratio is determined by comparing the luminosity of the text and background color values.</source>
          <target state="translated">テキストの色、テキストが置かれている背景、テキストの装飾線の間のコントラスト比が、弱視の人がページの内容を読むことができるように十分に高いことが重要です。色のコントラスト比は、テキストの輝度と背景の色の値を比較して決定されます。</target>
        </trans-unit>
        <trans-unit id="7fea00c4be9cdeb4d0ee8cf33274bc501cec5059" translate="yes" xml:space="preserve">
          <source>It is important to note that DIV #4, DIV #5 and DIV #6 are children of DIV #3, so stacking of those elements is completely resolved within DIV#3. Once stacking and rendering within DIV #3 is completed, the whole DIV #3 element is passed for stacking in the root element with respect to its sibling's DIV.</source>
          <target state="translated">ここで重要なことは、DIV #4,DIV #5,DIV #6はDIV #3の子要素であることに注意してください。DIV #3内でのスタッキングとレンダリングが完了すると、DIV #3要素全体が、その兄弟のDIVを基準としたルート要素内でのスタッキングのために渡されます。</target>
        </trans-unit>
        <trans-unit id="a029c6ce4c3def49c393c4a509a795eda1e16ada" translate="yes" xml:space="preserve">
          <source>It is important to note that even if a ruleset characterized by a group of selectors is a kind of shorthand replacing rulesets with a single selector each, this doesn't apply to the validity of the ruleset itself.</source>
          <target state="translated">セレクタのグループによって特徴づけられるルールセットが、ルールセットをそれぞれ単一のセレクタで置き換える一種の速記法であったとしても、これはルールセット自体の有効性には適用されないことに注意が必要です。</target>
        </trans-unit>
        <trans-unit id="e4279d20189c4063933508ed5277bf85239ca96f" translate="yes" xml:space="preserve">
          <source>It is important to note that the notions of a block-level box and block container box are disjointed. The first, describes how the box behaves with its parents and sibling. The second, how it interacts with its descendants. Some block-level boxes, like tables, aren't block container boxes. Reciprocally, some block container boxes, like non-replaced inline blocks and non-replaced table cells, aren't block-level boxes.</source>
          <target state="translated">ブロックレベルの箱とブロックコンテナの箱の概念はバラバラであることに注意してください。前者は、そのボックスが親や兄弟とどのように振る舞うかを記述します。2つ目は、その子孫とどのように相互作用するかを記述します。テーブルのようなブロックレベルのボックスの中には、ブロックコンテナボックスではないものもあります。逆に、非置換インラインブロックや非置換テーブルセルのようなブロックコンテナボックスは、ブロックレベルのボックスではありません。</target>
        </trans-unit>
        <trans-unit id="8f6954b8a497a9f53801b1e408d1ab96b727b368" translate="yes" xml:space="preserve">
          <source>It is often convenient to use the shorthand property &lt;a href=&quot;animation&quot;&gt;&lt;code&gt;animation&lt;/code&gt;&lt;/a&gt; to set all animation properties at once.</source>
          <target state="translated">多くの場合、すべてのアニメーションプロパティを一度に設定するには、プロパティの簡略&lt;a href=&quot;animation&quot;&gt; &lt;code&gt;animation&lt;/code&gt; &lt;/a&gt;を使用すると便利です。</target>
        </trans-unit>
        <trans-unit id="c922f74a60a17b02799597847ce590ee381a62fd" translate="yes" xml:space="preserve">
          <source>It is often convenient to use the shorthand property &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt; to set &lt;code&gt;font-size&lt;/code&gt; and other font related properties all at once.</source>
          <target state="translated">多くの場合、簡略プロパティ&lt;a href=&quot;font&quot;&gt; &lt;code&gt;font&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;font-size&lt;/code&gt; と他のフォント関連プロパティを一度に設定すると便利です。</target>
        </trans-unit>
        <trans-unit id="7a3a4943431b94775af13df3ac83163287edfd4c" translate="yes" xml:space="preserve">
          <source>It is often more convenient to set &lt;code&gt;line-height&lt;/code&gt; by using the &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt; shorthand as shown above, but this requires the &lt;code&gt;font-family&lt;/code&gt; property to be specified as well.</source>
          <target state="translated">上記のように&lt;a href=&quot;font&quot;&gt; &lt;code&gt;font&lt;/code&gt; &lt;/a&gt;短縮形を使用して &lt;code&gt;line-height&lt;/code&gt; さを設定する方が便利な場合がよくありますが、これには &lt;code&gt;font-family&lt;/code&gt; プロパティも指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="ca011518fc1843f80c57ad00cb5fcd9fa9a3e479" translate="yes" xml:space="preserve">
          <source>It is often more convenient to use the shorthand &lt;a href=&quot;list-style&quot;&gt;&lt;code&gt;list-style&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">多くの場合、省略&lt;a href=&quot;list-style&quot;&gt; &lt;code&gt;list-style&lt;/code&gt; &lt;/a&gt;を使用する方が便利です。</target>
        </trans-unit>
        <trans-unit id="b2ba376f86926ef6792f5a49c460bf5bd28ceb59" translate="yes" xml:space="preserve">
          <source>It is often more convenient to use the shorthand property &lt;a href=&quot;outline&quot;&gt;&lt;code&gt;outline&lt;/code&gt;&lt;/a&gt; when defining the appearance of an outline.</source>
          <target state="translated">&lt;a href=&quot;outline&quot;&gt; &lt;code&gt;outline&lt;/code&gt; &lt;/a&gt;の外観を定義するときは、略記プロパティのアウトラインを使用する方が便利です。</target>
        </trans-unit>
        <trans-unit id="098889f15dbdc47268f027a89465498ea0c7fb8d" translate="yes" xml:space="preserve">
          <source>It is permitted to nest &lt;code&gt;calc()&lt;/code&gt; functions, in which case the inner ones are treated as simple parentheses.</source>
          <target state="translated">&lt;code&gt;calc()&lt;/code&gt; 関数をネストすることができます。その場合、内側の関数は単純な括弧として扱われます。</target>
        </trans-unit>
        <trans-unit id="5ae2ab2f7ee3778a0fea94029dd3e4c4fd6f5687" translate="yes" xml:space="preserve">
          <source>It is permitted to nest &lt;code&gt;max()&lt;/code&gt; and &lt;code&gt;min()&lt;/code&gt; functions as expression values, in which case the inner ones are treated as simple parentheses. The expressions are full math expressions, so you can use direct addition, subtraction, multiplication and division without using the calc() function itself.</source>
          <target state="translated">&lt;code&gt;max()&lt;/code&gt; 関数と &lt;code&gt;min()&lt;/code&gt; 関数を式の値としてネストすることが許可されています。その場合、内側の関数は単純な括弧として扱われます。式は完全な数式であるため、calc（）関数自体を使用せずに直接加算、減算、乗算、および除算を使用できます。</target>
        </trans-unit>
        <trans-unit id="af08fb9d837dc66e6587ae7871f1fde75895191d" translate="yes" xml:space="preserve">
          <source>It is permitted to nest &lt;code&gt;max()&lt;/code&gt; and other &lt;code&gt;min()&lt;/code&gt; functions as expression values. The expressions are full math expressions, so you can use direct addition, subtraction, multiplication and division without using the &lt;code&gt;calc()&lt;/code&gt; function itself.</source>
          <target state="translated">&lt;code&gt;max()&lt;/code&gt; およびその他の &lt;code&gt;min()&lt;/code&gt; 関数を式の値としてネストすることが許可されています。式は完全な数式であるため、 &lt;code&gt;calc()&lt;/code&gt; 関数自体を使用せずに、直接加算、減算、乗算、除算を使用できます。</target>
        </trans-unit>
        <trans-unit id="86a54951cd863959f5ec24e18319b24423b27c7c" translate="yes" xml:space="preserve">
          <source>It is permitted to nest &lt;code&gt;max()&lt;/code&gt; and other &lt;code&gt;min()&lt;/code&gt; functions as expression values. The expressions are full math expressions, so you can use direct addition, subtraction, multiplication and division without using the calc() function itself.</source>
          <target state="translated">&lt;code&gt;max()&lt;/code&gt; および他の &lt;code&gt;min()&lt;/code&gt; 関数を式の値としてネストすることが許可されています。式は完全な数式であるため、calc（）関数自体を使用せずに直接加算、減算、乗算、および除算を使用できます。</target>
        </trans-unit>
        <trans-unit id="74f958df13442b091f882dc7dcb027474b5aadaf" translate="yes" xml:space="preserve">
          <source>It is permitted to nest &lt;code&gt;min()&lt;/code&gt; and other &lt;code&gt;max()&lt;/code&gt; functions as expression values. The expressions are full math expressions, so you can use direct addition, subtraction, multiplication and division without using the calc() function itself.</source>
          <target state="translated">&lt;code&gt;min()&lt;/code&gt; および他の &lt;code&gt;max()&lt;/code&gt; 関数を式の値としてネストすることができます。式は完全な数式であるため、calc（）関数自体を使用せずに直接加算、減算、乗算、および除算を使用できます。</target>
        </trans-unit>
        <trans-unit id="f9cd5ca29335392f52ea633feacf6bcc4c2af340" translate="yes" xml:space="preserve">
          <source>It is possible to use the &lt;a href=&quot;::-ms-ticks-after&quot;&gt;&lt;code&gt;::-ms-ticks-after&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;::-ms-ticks-before&quot;&gt;&lt;code&gt;::-ms-ticks-before&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;::-ms-track&lt;/code&gt; pseudo-elements together. To do so would create three sets of tick marks, but the best user experience is one set. To remove tick marks altogether, set the &lt;a href=&quot;color&quot;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;transparent&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;::-ms-ticks-after&quot;&gt; &lt;code&gt;::-ms-ticks-after&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;::-ms-ticks-before&quot;&gt; &lt;code&gt;::-ms-ticks-before&lt;/code&gt; &lt;/a&gt;、および &lt;code&gt;::-ms-track&lt;/code&gt; 疑似要素を一緒に使用することが可能です。これを行うと、3セットの目盛りが作成されますが、最高のユーザーエクスペリエンスは1セットです。目盛りを完全に削除するには、&lt;a href=&quot;color&quot;&gt; &lt;code&gt;color&lt;/code&gt; &lt;/a&gt;プロパティを &lt;code&gt;transparent&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="7983bed093cd371cfa5e05d5a2a11defbd8b758a" translate="yes" xml:space="preserve">
          <source>It is possible to use the &lt;a href=&quot;::-ms-ticks-after&quot;&gt;&lt;code&gt;::-ms-ticks-after&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;::-ms-ticks-before&lt;/code&gt;, and &lt;a href=&quot;::-ms-track&quot;&gt;&lt;code&gt;::-ms-track&lt;/code&gt;&lt;/a&gt; pseudo-elements together. To do so would create three sets of tick marks, but the best user experience is one set. To remove tick marks altogether, set the &lt;a href=&quot;color&quot;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;transparent&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;::-ms-ticks-after&quot;&gt; &lt;code&gt;::-ms-ticks-after&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;::-ms-ticks-before&lt;/code&gt; 、および&lt;a href=&quot;::-ms-track&quot;&gt; &lt;code&gt;::-ms-track&lt;/code&gt; &lt;/a&gt;疑似要素を一緒に使用することが可能です。これを行うと、3セットの目盛りが作成されますが、最高のユーザーエクスペリエンスは1セットです。目盛りを完全に削除するには、&lt;a href=&quot;color&quot;&gt; &lt;code&gt;color&lt;/code&gt; &lt;/a&gt;プロパティを &lt;code&gt;transparent&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="1ef15ebfef8ce9d9be3f3000c372cf600e3f77dd" translate="yes" xml:space="preserve">
          <source>It is possible to use the &lt;code&gt;::-ms-ticks-after&lt;/code&gt;, &lt;a href=&quot;::-ms-ticks-before&quot;&gt;&lt;code&gt;::-ms-ticks-before&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;::-ms-track&quot;&gt;&lt;code&gt;::-ms-track&lt;/code&gt;&lt;/a&gt; pseudo-elements together. To do so would create three sets of tick marks, but the best user experience is one set. To remove tick marks altogether, set the &lt;a href=&quot;color&quot;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;transparent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;::-ms-ticks-after&lt;/code&gt; 、&lt;a href=&quot;::-ms-ticks-before&quot;&gt; &lt;code&gt;::-ms-ticks-before&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;::-ms-track&quot;&gt; &lt;code&gt;::-ms-track&lt;/code&gt; &lt;/a&gt;疑似要素を一緒に使用することが可能です。これを行うと、3セットの目盛りが作成されますが、最高のユーザーエクスペリエンスは1セットです。目盛りを完全に削除するには、&lt;a href=&quot;color&quot;&gt; &lt;code&gt;color&lt;/code&gt; &lt;/a&gt;プロパティを &lt;code&gt;transparent&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="abead7b8c69283ba494a3a3a5a531f196c47a069" translate="yes" xml:space="preserve">
          <source>It is this distribution of positive free space and removal of negative free space that we need to understand in order to understand the flex properties.</source>
          <target state="translated">フレックス特性を理解するために理解しなければならないのは、この正の自由空間の分布と負の自由空間の除去です。</target>
        </trans-unit>
        <trans-unit id="4725ff1feb3be7d4f3a8aba8b6a42293fce09da4" translate="yes" xml:space="preserve">
          <source>It is this requirement that the gap properties, once implemented, will solve for us. Proper gaps only happen on the inside edges of items.</source>
          <target state="translated">ギャッププロパティが実装されれば、この要件を解決することができます。適切なギャップは、アイテムの内側の端にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="2f506744ff44025c710ab225271364589747c4ac" translate="yes" xml:space="preserve">
          <source>It is worth noting that we might want to change the writing mode of our document for reasons other than publishing content in a language that uses a different writing mode. See &lt;a href=&quot;https://24ways.org/2016/css-writing-modes/&quot;&gt;this article&lt;/a&gt; for a full description of writing modes and ways to use them, both for content in other languages and for creative reasons.</source>
          <target state="translated">異なる書き込みモードを使用する言語でコンテンツを公開する以外の理由で、ドキュメントの書き込みモードを変更する場合があることに注意してください。他の言語のコンテンツとクリエイティブな理由の両方で、ライティングモードとその使用方法の詳細については、&lt;a href=&quot;https://24ways.org/2016/css-writing-modes/&quot;&gt;この記事&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e928076804ef99476aff9c7a4017c66753e3c5d0" translate="yes" xml:space="preserve">
          <source>It is worth noting that you do not have to use grid in an &lt;em&gt;all or nothing&lt;/em&gt; way. You could start by simply enhancing elements in your design with grid, that could otherwise display using an older method. Overwriting of legacy methods with grid layout works surprisingly well, due to the way grid interacts with these other methods.</source>
          <target state="translated">グリッドを&lt;em&gt;全か無かの&lt;/em&gt;方法で使用する必要がないことは注目に値します。まず、グリッドでデザインの要素を拡張することから始めます。そうでなければ、古い方法を使用して表示できます。グリッドが他のメソッドと相互作用する方法により、従来のメソッドをグリッドレイアウトで上書きすると、驚くほどうまく機能します。</target>
        </trans-unit>
        <trans-unit id="e3168d9914dd51d6f02471534c957a66be4d359a" translate="yes" xml:space="preserve">
          <source>It is worth noting, that using these space distribution values may cause items on your grid to become larger. If an item spans more than one grid track, as further space is added between the tracks, that item needs to become large to absorb the space. We&amp;rsquo;re always working in a strict grid. Therefore, if you decide to use these values, ensure that the content of your tracks can cope with the extra space, or that you have used alignment properties on the items, to cause them to move to the start rather than stretch.</source>
          <target state="translated">これらの空間分布値を使用すると、グリッド上のアイテムが大きくなる可能性があることに注意してください。アイテムが複数のグリッドトラックにまたがっている場合、トラック間にスペースが追加されると、そのアイテムはスペースを吸収するために大きくする必要があります。私たちは常に厳密なグリッドで作業しています。したがって、これらの値を使用する場合は、トラックのコンテンツが余分なスペースに対処できること、またはアイテムの配置プロパティを使用して、ストレッチではなく最初に移動することを確認してください。</target>
        </trans-unit>
        <trans-unit id="861d158c478bf362597e1fe541eb0b9dd9f71e75" translate="yes" xml:space="preserve">
          <source>It may be appropriate to include &lt;code&gt;will-change&lt;/code&gt; in your style sheet for an application that does page flips on key presses like an album or a slide deck presentation where the pages are large and complex. This will let browser prepare the transition ahead of time and allow for snappy transitions between the pages as soon as the key is pressed. But use caution with the &lt;code&gt;will-change&lt;/code&gt; property directly in stylesheets. It may cause the browser to keep the optimization in memory for much longer than it is needed.</source>
          <target state="translated">アルバムやスライドデッキのプレゼンテーションなど、ページが大きく複雑なキーを押すとページめくりを行うアプリケーションの場合は、スタイルシートに &lt;code&gt;will-change&lt;/code&gt; を含めることが適切な場合があります。これにより、ブラウザは事前にトランジションを準備し、キーが押されるとすぐにページ間の迅速なトランジションが可能になります。ただし、スタイルシートで直接 &lt;code&gt;will-change&lt;/code&gt; プロパティに注意してください。これにより、ブラウザが必要以上に長い間メモリに最適化を保持する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a666ce9ede14dedf34747b996e12352a3da6923c" translate="yes" xml:space="preserve">
          <source>It may be that you come up with your own use cases for auto-placement or any other part of grid layout. If you do, raise them as issues or add to an existing issue that could solve your use case. This will help to make future versions of the specification better.</source>
          <target state="translated">自動配置やグリッドレイアウトの他の部分について、独自のユースケースを思いつくことがあるかもしれません。その場合は、それらを課題として提起するか、あるいは既存の課題に追加して、ユースケースを解決できるようにしてください。これは将来のバージョンの仕様をより良いものにするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="10ad06e5105e168e6d369b6647a7622bb674ab14" translate="yes" xml:space="preserve">
          <source>It may however be appropriate to include &lt;code&gt;will-change&lt;/code&gt; in your style sheet for an application that does page flips on key presses like an album or a slide deck presentation where the pages are large and complex. This will let browser prepare the transition ahead of time and allow for snappy transitions between the pages as soon as the key is pressed.</source>
          <target state="translated">ただし、ページが大きくて複雑なアルバムやスライドデッキのプレゼンテーションのように、キーを押すとページがめくられるアプリケーションのスタイルシートに &lt;code&gt;will-change&lt;/code&gt; を含めるのが適切な場合があります。これにより、ブラウザーは事前にトランジションを準備し、キーが押されるとすぐにページ間のスムーズなトランジションが可能になります。</target>
        </trans-unit>
        <trans-unit id="754c455e725ceb2f5d7692966e0b9d6e1e1574ae" translate="yes" xml:space="preserve">
          <source>It may not be obvious as to why the focus indicator is appearing and disappearing if a person is using mixed forms of input. For users with cognitive concerns, or who are less technologically literate, this lack of consistent behavior for interactive elements may be confusing.</source>
          <target state="translated">人が混在した形式の入力を使用している場合、フォーカスインジケータが表示されたり消えたりする理由は明らかではないかもしれません。認知的な懸念のあるユーザーや技術的なリテラシーの低いユーザーにとっては、インタラクティブ要素の一貫した動作の欠如は、混乱を招くかもしれません。</target>
        </trans-unit>
        <trans-unit id="e51dc1fd54878d559ca2d0953b13ec41297fe32d" translate="yes" xml:space="preserve">
          <source>It modifies the abscissa of each element point by a constant factor, except when the scale factor is 1, in which case the function is the identity transform. The scaling is not isotropic, and the angles of the element are not conserved. &lt;code&gt;scaleX(-1)&lt;/code&gt; defines an &lt;a href=&quot;http://en.wikipedia.org/wiki/Axial_symmetry&quot;&gt;axial symmetry&lt;/a&gt;, with a vertical axis passing through the origin (as specified by the &lt;a href=&quot;../transform-origin&quot;&gt;&lt;code&gt;transform-origin&lt;/code&gt;&lt;/a&gt; property).</source>
          <target state="translated">スケールファクターが1の場合を除いて、各要素ポイントの横座標を定数ファクターで変更します。この場合、関数は恒等変換です。スケーリングは等方性ではなく、要素の角度は保存されません。 &lt;code&gt;scaleX(-1)&lt;/code&gt; は、（&lt;a href=&quot;../transform-origin&quot;&gt; &lt;code&gt;transform-origin&lt;/code&gt; &lt;/a&gt;プロパティで指定された）原点を通る垂直軸を持つ&lt;a href=&quot;http://en.wikipedia.org/wiki/Axial_symmetry&quot;&gt;軸対称を&lt;/a&gt;定義します。</target>
        </trans-unit>
        <trans-unit id="fe8279e45e6b4f02f7bd5d06a7bc3dae62ff5bd1" translate="yes" xml:space="preserve">
          <source>It modifies the ordinate of each element point by a constant factor, except when the scale factor is 1, in which case the function is the identity transform. The scaling is not isotropic, and the angles of the element are not conserved. &lt;code&gt;scaleY(-1)&lt;/code&gt; defines an &lt;a href=&quot;http://en.wikipedia.org/wiki/Axial_symmetry&quot;&gt;axial symmetry&lt;/a&gt;, with a horizontal axis passing through the origin (as specified by the &lt;a href=&quot;../transform-origin&quot;&gt;&lt;code&gt;transform-origin&lt;/code&gt;&lt;/a&gt; property).</source>
          <target state="translated">スケールファクターが1の場合（関数が恒等変換の場合）を除き、各要素ポイントの縦座標を定数ファクターで変更します。スケーリングは等方性ではなく、要素の角度は保存されません。 &lt;code&gt;scaleY(-1)&lt;/code&gt; は、（&lt;a href=&quot;../transform-origin&quot;&gt; &lt;code&gt;transform-origin&lt;/code&gt; &lt;/a&gt;プロパティで指定された）原点を通過する水平軸で&lt;a href=&quot;http://en.wikipedia.org/wiki/Axial_symmetry&quot;&gt;軸対称を&lt;/a&gt;定義します。</target>
        </trans-unit>
        <trans-unit id="d7ec26f20e3240e9d26a8b992ae6432bcebc20f1" translate="yes" xml:space="preserve">
          <source>It must not contain a &lt;code&gt;symbols&lt;/code&gt; or &lt;code&gt;additive-symbols&lt;/code&gt; descriptor, or else the counter style rule is invalid. If one more more counter styles defenitions form a cycle with their extends values, the browser will treat all the participating counter styles as extending from the decimal style.</source>
          <target state="translated">&lt;code&gt;symbols&lt;/code&gt; または &lt;code&gt;additive-symbols&lt;/code&gt; 記述子を含めることはできません。そうでない場合、カウンタースタイルルールが無効になります。もう1つのカウンタスタイル定義がその拡張値でサイクルを形成する場合、ブラウザは、参加しているすべてのカウンタスタイルを小数スタイルから拡張したものとして扱います。</target>
        </trans-unit>
        <trans-unit id="5ff6d11223ce92670e04dacb8ef6619d129fb922" translate="yes" xml:space="preserve">
          <source>It only works in combination with the &lt;a href=&quot;display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; property set to &lt;code&gt;-webkit-box&lt;/code&gt; or &lt;code&gt;-webkit-inline-box&lt;/code&gt; and the &lt;a href=&quot;-webkit-box-orient&quot;&gt;&lt;code&gt;-webkit-box-orient&lt;/code&gt;&lt;/a&gt; property set to &lt;code&gt;vertical&lt;/code&gt;.</source>
          <target state="translated">これはのみとの組み合わせで動作する&lt;a href=&quot;display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt;のプロパティセット &lt;code&gt;-webkit-box&lt;/code&gt; または &lt;code&gt;-webkit-inline-box&lt;/code&gt; と&lt;a href=&quot;-webkit-box-orient&quot;&gt; &lt;code&gt;-webkit-box-orient&lt;/code&gt; &lt;/a&gt;へのプロパティセット &lt;code&gt;vertical&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c03476b0802d34f25440078ad06f1b3c9a498df1" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-border-after&quot;&gt;&lt;code&gt;-webkit-border-after&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-border-start&quot;&gt;&lt;code&gt;-webkit-border-start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-border-end&quot;&gt;&lt;code&gt;-webkit-border-end&lt;/code&gt;&lt;/a&gt;, which define the other borders of the element.</source>
          <target state="translated">それに関し&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-border-after&quot;&gt; &lt;code&gt;-webkit-border-after&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-border-start&quot;&gt; &lt;code&gt;-webkit-border-start&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-border-end&quot;&gt; &lt;code&gt;-webkit-border-end&lt;/code&gt; &lt;/a&gt;要素の他の境界を画定します。</target>
        </trans-unit>
        <trans-unit id="3f5ff530afff2759b1e915810c10c96b2ebf35b8" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;inset-block-end&quot;&gt;&lt;code&gt;inset-block-end&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;inset-inline-start&quot;&gt;&lt;code&gt;inset-inline-start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;inset-inline-end&quot;&gt;&lt;code&gt;inset-inline-end&lt;/code&gt;&lt;/a&gt;, which define the other offsets of the element.</source>
          <target state="translated">これは、要素の他のオフセットを定義する&lt;a href=&quot;inset-block-end&quot;&gt; &lt;code&gt;inset-block-end&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;inset-inline-start&quot;&gt; &lt;code&gt;inset-inline-start&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;inset-inline-end&quot;&gt; &lt;code&gt;inset-inline-end&lt;/code&gt; &lt;/a&gt;に関連しています。</target>
        </trans-unit>
        <trans-unit id="c9dfcf8749cf08633f6a559e50d8a169eebdbc09" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;inset-block-start&quot;&gt;&lt;code&gt;inset-block-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;inset-block-end&quot;&gt;&lt;code&gt;inset-block-end&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;inset-inline-end&quot;&gt;&lt;code&gt;inset-inline-end&lt;/code&gt;&lt;/a&gt;, which define the other insets of the element.</source>
          <target state="translated">これは、要素の他のインセットを定義する、&lt;a href=&quot;inset-block-start&quot;&gt; &lt;code&gt;inset-block-start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;inset-block-end&quot;&gt; &lt;code&gt;inset-block-end&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;inset-inline-end&quot;&gt; &lt;code&gt;inset-inline-end&lt;/code&gt; &lt;/a&gt;に関連しています。</target>
        </trans-unit>
        <trans-unit id="164b198c69d948b5527cfb9ff517fec35e85522f" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;inset-block-start&quot;&gt;&lt;code&gt;inset-block-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;inset-block-end&quot;&gt;&lt;code&gt;inset-block-end&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;inset-inline-start&quot;&gt;&lt;code&gt;inset-inline-start&lt;/code&gt;&lt;/a&gt;, which define the other offsets of the element.</source>
          <target state="translated">これは、要素の他のオフセットを定義する&lt;a href=&quot;inset-block-start&quot;&gt; &lt;code&gt;inset-block-start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;inset-block-end&quot;&gt; &lt;code&gt;inset-block-end&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;inset-inline-start&quot;&gt; &lt;code&gt;inset-inline-start&lt;/code&gt; &lt;/a&gt;に関連しています。</target>
        </trans-unit>
        <trans-unit id="4e38d06cdb423745d6a84a4eae31e9328f12e2f0" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;inset-block-start&quot;&gt;&lt;code&gt;inset-block-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;inset-inline-start&quot;&gt;&lt;code&gt;inset-inline-start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;inset-inline-end&quot;&gt;&lt;code&gt;inset-inline-end&lt;/code&gt;&lt;/a&gt;, which define the other offsets of the element.</source>
          <target state="translated">これは、要素の他のオフセットを定義する&lt;a href=&quot;inset-block-start&quot;&gt; &lt;code&gt;inset-block-start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;inset-inline-start&quot;&gt; &lt;code&gt;inset-inline-start&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;inset-inline-end&quot;&gt; &lt;code&gt;inset-inline-end&lt;/code&gt; &lt;/a&gt;に関連しています。</target>
        </trans-unit>
        <trans-unit id="1be44e6f6fdd6d6b5bc11f36ca85e039287b30c6" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;margin-block-end&quot;&gt;&lt;code&gt;margin-block-end&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-inline-start&quot;&gt;&lt;code&gt;margin-inline-start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;margin-inline-end&quot;&gt;&lt;code&gt;margin-inline-end&lt;/code&gt;&lt;/a&gt;, which define the other margins of the element.</source>
          <target state="translated">これは、要素の他のマージンを定義する&lt;a href=&quot;margin-block-end&quot;&gt; &lt;code&gt;margin-block-end&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;margin-inline-start&quot;&gt; &lt;code&gt;margin-inline-start&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;margin-inline-end&quot;&gt; &lt;code&gt;margin-inline-end&lt;/code&gt; &lt;/a&gt;に関連しています。</target>
        </trans-unit>
        <trans-unit id="4d12f3496fdff02548f56e39c9a152bb71d6d2c9" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;margin-block-start&quot;&gt;&lt;code&gt;margin-block-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-block-end&quot;&gt;&lt;code&gt;margin-block-end&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;margin-inline-end&quot;&gt;&lt;code&gt;margin-inline-end&lt;/code&gt;&lt;/a&gt;, which define the other margins of the element.</source>
          <target state="translated">それに関する&lt;a href=&quot;margin-block-start&quot;&gt; &lt;code&gt;margin-block-start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;margin-block-end&quot;&gt; &lt;code&gt;margin-block-end&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;margin-inline-end&quot;&gt; &lt;code&gt;margin-inline-end&lt;/code&gt; &lt;/a&gt;要素の他の余白を定義します。</target>
        </trans-unit>
        <trans-unit id="d4547aadda72c3caf31b49ea7cd318c742cf36f5" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;margin-block-start&quot;&gt;&lt;code&gt;margin-block-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-block-end&quot;&gt;&lt;code&gt;margin-block-end&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;margin-inline-start&quot;&gt;&lt;code&gt;margin-inline-start&lt;/code&gt;&lt;/a&gt;, which define the other margins of the element.</source>
          <target state="translated">これは、要素の他のマージンを定義する&lt;a href=&quot;margin-block-start&quot;&gt; &lt;code&gt;margin-block-start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;margin-block-end&quot;&gt; &lt;code&gt;margin-block-end&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;margin-inline-start&quot;&gt; &lt;code&gt;margin-inline-start&lt;/code&gt; &lt;/a&gt;に関連しています。</target>
        </trans-unit>
        <trans-unit id="d1c80ecbfeebfc1fbe307467990c2907c4857d61" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;margin-block-start&quot;&gt;&lt;code&gt;margin-block-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-inline-start&quot;&gt;&lt;code&gt;margin-inline-start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;margin-inline-end&quot;&gt;&lt;code&gt;margin-inline-end&lt;/code&gt;&lt;/a&gt;, which define the other margins of the element.</source>
          <target state="translated">これは、要素の他のマージンを定義する&lt;a href=&quot;margin-block-start&quot;&gt; &lt;code&gt;margin-block-start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;margin-inline-start&quot;&gt; &lt;code&gt;margin-inline-start&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;margin-inline-end&quot;&gt; &lt;code&gt;margin-inline-end&lt;/code&gt; &lt;/a&gt;に関連しています。</target>
        </trans-unit>
        <trans-unit id="f9532d7526f31cd1ddf21abd9e36cd397b05f3f4" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;padding-block-end&quot;&gt;&lt;code&gt;padding-block-end&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-inline-start&quot;&gt;&lt;code&gt;padding-inline-start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;padding-inline-end&quot;&gt;&lt;code&gt;padding-inline-end&lt;/code&gt;&lt;/a&gt;, which define the other paddings of the element.</source>
          <target state="translated">これは、要素の他の&lt;a href=&quot;padding-inline-end&quot;&gt; &lt;code&gt;padding-inline-end&lt;/code&gt; &lt;/a&gt;を定義する&lt;a href=&quot;padding-block-end&quot;&gt; &lt;code&gt;padding-block-end&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;padding-inline-start&quot;&gt; &lt;code&gt;padding-inline-start&lt;/code&gt; &lt;/a&gt;、およびpadding-inline-endに関連しています。</target>
        </trans-unit>
        <trans-unit id="7f9e11f61b66854c37cb037683874ad659614532" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;padding-block-start&quot;&gt;&lt;code&gt;padding-block-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-block-end&quot;&gt;&lt;code&gt;padding-block-end&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;padding-inline-end&quot;&gt;&lt;code&gt;padding-inline-end&lt;/code&gt;&lt;/a&gt;, which define the other paddings of the element.</source>
          <target state="translated">これは、要素の他の&lt;a href=&quot;padding-inline-end&quot;&gt; &lt;code&gt;padding-inline-end&lt;/code&gt; &lt;/a&gt;を定義する&lt;a href=&quot;padding-block-start&quot;&gt; &lt;code&gt;padding-block-start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;padding-block-end&quot;&gt; &lt;code&gt;padding-block-end&lt;/code&gt; &lt;/a&gt;、およびpadding-inline-endに関連しています。</target>
        </trans-unit>
        <trans-unit id="f1e1a3456c5526118424a14cf8e98eedd5a7f3cf" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;padding-block-start&quot;&gt;&lt;code&gt;padding-block-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-block-end&quot;&gt;&lt;code&gt;padding-block-end&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;padding-inline-start&quot;&gt;&lt;code&gt;padding-inline-start&lt;/code&gt;&lt;/a&gt;, which define the other paddings of the element.</source>
          <target state="translated">これは、要素の他の&lt;a href=&quot;padding-inline-start&quot;&gt; &lt;code&gt;padding-inline-start&lt;/code&gt; &lt;/a&gt;を定義する&lt;a href=&quot;padding-block-start&quot;&gt; &lt;code&gt;padding-block-start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;padding-block-end&quot;&gt; &lt;code&gt;padding-block-end&lt;/code&gt; &lt;/a&gt;、およびpadding-inline-startに関連しています。</target>
        </trans-unit>
        <trans-unit id="e2c7100141d46ba2b98e182efe6b2e5f6c830118" translate="yes" xml:space="preserve">
          <source>It relates to &lt;a href=&quot;padding-block-start&quot;&gt;&lt;code&gt;padding-block-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-inline-start&quot;&gt;&lt;code&gt;padding-inline-start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;padding-inline-end&quot;&gt;&lt;code&gt;padding-inline-end&lt;/code&gt;&lt;/a&gt;, which define the other paddings of the element.</source>
          <target state="translated">これは、要素の他の&lt;a href=&quot;padding-inline-end&quot;&gt; &lt;code&gt;padding-inline-end&lt;/code&gt; &lt;/a&gt;を定義する&lt;a href=&quot;padding-block-start&quot;&gt; &lt;code&gt;padding-block-start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;padding-inline-start&quot;&gt; &lt;code&gt;padding-inline-start&lt;/code&gt; &lt;/a&gt;、およびpadding-inline-endに関連しています。</target>
        </trans-unit>
        <trans-unit id="5a582436c2add46403634ec6c64ced1ea8aae869" translate="yes" xml:space="preserve">
          <source>It should be noted that at this point there is no way in the &lt;code&gt;@font-face&lt;/code&gt; declaration to 'map' a specific point on the variation axis of a variable font to the keyword &lt;code&gt;bold&lt;/code&gt; (or any other keyword). This can generally be resolved fairly easily, but does require an extra step in writing your CSS:</source>
          <target state="translated">この時点では、 &lt;code&gt;@font-face&lt;/code&gt; 宣言では、可変フォントのバリエーション軸上の特定のポイントを &lt;code&gt;bold&lt;/code&gt; のキーワード（またはその他のキーワード）に「マップ」する方法はありません。これは一般的にかなり簡単に解決できますが、CSSを記述する際に追加の手順が必要です。</target>
        </trans-unit>
        <trans-unit id="deb03b8fd1fd04f3e6579ec3ae8b1f0413c0653c" translate="yes" xml:space="preserve">
          <source>It should be noted that when we define a grid we define the grid tracks, not the lines. Grid then gives us numbered lines to use when positioning items. In our three column, two row grid we have four column lines.</source>
          <target state="translated">グリッドを定義する際には、ラインではなくグリッドトラックを定義することに注意してください。グリッドは、アイテムを配置する際に使用する番号付きのラインを提供してくれます。3列2行のグリッドでは、4列のラインがあります。</target>
        </trans-unit>
        <trans-unit id="e9db0053a121b40302b61d189d087aae57a59a0a" translate="yes" xml:space="preserve">
          <source>It should be remembered that the original implementation of CSS Grid Layout happened in Internet Explorer 10. This early specification did not contain all of the properties and values that the up-to-date specification has. There are also substantial differences between what shipped in IE10 and the current specification, even where the properties and values appear the same. This early implementation is also the version of Grid Layout implemented in Edge up to version 15.</source>
          <target state="translated">CSS Grid Layout の最初の実装は Internet Explorer 10 で行われたことを覚えておいてください。この初期の仕様には、最新の仕様に含まれるすべてのプロパティや値が含まれていませんでした。また、プロパティや値が同じように見えても、IE10 に搭載されていたものと現在の仕様とではかなりの違いがあります。この初期の実装は、Edgeでバージョン15まで実装されていたGrid Layoutのバージョンでもあります。</target>
        </trans-unit>
        <trans-unit id="74811481532fd6a13eba8c3e342bedb0e4a67f8a" translate="yes" xml:space="preserve">
          <source>It's actually possible to change the definitions and orientations of these coordinate systems using CSS properties such as &lt;a href=&quot;../transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;. However, we'll only talk about the standard coordinate system for now.</source>
          <target state="translated">&lt;a href=&quot;../transform&quot;&gt; &lt;code&gt;transform&lt;/code&gt; &lt;/a&gt;などのCSSプロパティを使用して、これらの座標系の定義と向きを変更することが実際に可能です。ただし、ここでは標準座標系についてのみ説明します。</target>
        </trans-unit>
        <trans-unit id="d488b5000639fd7316a3a176955e54c5ce0f62bf" translate="yes" xml:space="preserve">
          <source>It's also possible to create styles that are specific to a particular fragment of the document. This is done using the same identifying value that is found in the URI. Thus, to add a border to the &lt;code&gt;#example&lt;/code&gt; fragment, we would write:</source>
          <target state="translated">ドキュメントの特定のフラグメントに固有のスタイルを作成することもできます。これは、URIにあるのと同じ識別値を使用して行われます。したがって、 &lt;code&gt;#example&lt;/code&gt; フラグメントに境界線を追加するには、次のように記述します。</target>
        </trans-unit>
        <trans-unit id="778ced7e100024e59bbff71b9951492c5d8a1a00" translate="yes" xml:space="preserve">
          <source>It's common to use both &lt;code&gt;url()&lt;/code&gt; and &lt;code&gt;local()&lt;/code&gt; together, so that the user's installed copy of the font is used if available, falling back to downloading a copy of the font if it's not found on the user's device.</source>
          <target state="translated">&lt;code&gt;url()&lt;/code&gt; と &lt;code&gt;local()&lt;/code&gt; の両方を一緒に使用するのが一般的であるため、ユーザーがインストールしたフォントのコピーが利用可能な場合はそれが使用され、ユーザーのデバイスに見つからない場合はフォントのコピーのダウンロードにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="d5174cfe086bb0ef2381ce51d59feba61dd65884" translate="yes" xml:space="preserve">
          <source>It's worth mentioning that if your background-size is equal to the container size for a given axis, then a &lt;em&gt;percentage&lt;/em&gt; position for that axis will have no effect because the &quot;container-image difference&quot; will be zero. You will need to offset using absolute values.</source>
          <target state="translated">背景サイズが特定の軸のコンテナサイズと等しい場合、「コンテナと画像の差」がゼロになるため、その軸の&lt;em&gt;パーセンテージ&lt;/em&gt;位置は効果がないことに注意してください。絶対値を使用してオフセットする必要があります。</target>
        </trans-unit>
        <trans-unit id="4a5d13a17ba0bd17ee454c31c5eb0e356b0ffe00" translate="yes" xml:space="preserve">
          <source>It's worth noting that the sizing algorithm only cares about the image's dimensions and proportions, or lack thereof. An SVG image with fixed dimensions will be treated just like a raster image of the same size.</source>
          <target state="translated">特筆すべき点は、サイジングアルゴリズムが画像の寸法とプロポーション、あるいはその不足を気にするだけであるということです。寸法が固定された SVG 画像は、同じサイズのラスター画像と同じように扱われます。</target>
        </trans-unit>
        <trans-unit id="1616e2e5405e69c4e3914c67c644a9bd3ac00956" translate="yes" xml:space="preserve">
          <source>Italic</source>
          <target state="translated">Italic</target>
        </trans-unit>
        <trans-unit id="6193919fada173889258c366ee9f05b45a02b56f" translate="yes" xml:space="preserve">
          <source>Item 1 starts at column line 1, spanning one track.</source>
          <target state="translated">項目1は、1つのトラックにまたがって、1列目の行から始まります。</target>
        </trans-unit>
        <trans-unit id="69c1379e29c5cf81e8d8dbebd55e973616ce9076" translate="yes" xml:space="preserve">
          <source>Item 2 starts at column line -1, spanning to -3.</source>
          <target state="translated">項目 2 は、-1 行目の -1 から始まり、-3 まで続きます。</target>
        </trans-unit>
        <trans-unit id="e0d64c95efec2b97500f63caf51793d107ed9c5d" translate="yes" xml:space="preserve">
          <source>Item 3 starts at column line 1, spanning to column line 3.</source>
          <target state="translated">項目3は1列目から始まり、3列目にまたがっています。</target>
        </trans-unit>
        <trans-unit id="f0baf7bf76071340662fc3a8ddf55cbb96ba432c" translate="yes" xml:space="preserve">
          <source>Item placement</source>
          <target state="translated">項目の配置</target>
        </trans-unit>
        <trans-unit id="1afe57172a69a9c9f58bf1ce5efb03968d44b339" translate="yes" xml:space="preserve">
          <source>Item(s) selected in a control. Should be used with the &lt;code&gt;HighlightText&lt;/code&gt; foreground color.</source>
          <target state="translated">コントロールで選択されたアイテム。 &lt;code&gt;HighlightText&lt;/code&gt; の前景色で使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ace402f116db3c7e0506af982724bebf61a69db7" translate="yes" xml:space="preserve">
          <source>Items are placed by filling each column in turn, adding new columns as necessary.</source>
          <target state="translated">各カラムを順番に埋めていき、必要に応じて新しいカラムを追加していくことで、項目を配置していきます。</target>
        </trans-unit>
        <trans-unit id="f79ac83fe70a83c7d3969fe09733cc472ddda7dd" translate="yes" xml:space="preserve">
          <source>Items are placed by filling each row in turn, adding new rows as necessary. If neither &lt;code&gt;row&lt;/code&gt; nor &lt;code&gt;column&lt;/code&gt; is provided, &lt;code&gt;row&lt;/code&gt; is assumed.</source>
          <target state="translated">アイテムは、各行を順番に埋め、必要に応じて新しい行を追加することによって配置されます。 &lt;code&gt;row&lt;/code&gt; も &lt;code&gt;column&lt;/code&gt; も指定されていない場合、 &lt;code&gt;row&lt;/code&gt; が想定されます。</target>
        </trans-unit>
        <trans-unit id="95f3463db439be16bcf35fbeb57cd5199a421a56" translate="yes" xml:space="preserve">
          <source>Items can span one or more cells both by row or by column, and this creates a &lt;em&gt;grid area&lt;/em&gt;. Grid areas must be rectangular &amp;ndash; it isn&amp;rsquo;t possible to create an L-shaped area for example. The highlighted grid area spans two row and two column tracks.</source>
          <target state="translated">項目は、行または列の両方で1つ以上のセルにまたがることができ、これにより&lt;em&gt;グリッド領域&lt;/em&gt;が作成されます。グリッド領域は長方形である必要があります。たとえば、L字型の領域を作成することはできません。ハイライトされたグリッド領域は、2つの行と2つの列のトラックにまたがっています。</target>
        </trans-unit>
        <trans-unit id="c94875c0c64e45033ad39f0e808bd4d5288c4e10" translate="yes" xml:space="preserve">
          <source>Items can&amp;rsquo;t grow with no positive free space, and they won&amp;rsquo;t shrink unless there is negative free space.</source>
          <target state="translated">アイテムは、正の空き領域がないと拡大できず、負の空き領域がない限り縮小されません。</target>
        </trans-unit>
        <trans-unit id="a4ba382b1b84432fa758356c7ec189086b67f379" translate="yes" xml:space="preserve">
          <source>Items display in a row (the &lt;code&gt;flex-direction&lt;/code&gt; property's default is &lt;code&gt;row&lt;/code&gt;).</source>
          <target state="translated">アイテムは行に表示されます（ &lt;code&gt;flex-direction&lt;/code&gt; プロパティのデフォルトは &lt;code&gt;row&lt;/code&gt; です）。</target>
        </trans-unit>
        <trans-unit id="1c319797f909216c8fd293f96edf8d1ccb02e13e" translate="yes" xml:space="preserve">
          <source>Items will be placed one after the other in the grid axis.</source>
          <target state="translated">アイテムはグリッド軸上に次々と配置されていきます。</target>
        </trans-unit>
        <trans-unit id="ad22e02a9ad915e33b7990867696e958fab3ae75" translate="yes" xml:space="preserve">
          <source>Items will then wrap in the container. In the next example I have ten items all with a &lt;code&gt;flex-basis&lt;/code&gt; of &lt;code&gt;160px&lt;/code&gt; and the ability to grow and shrink. Once the first row gets to a point where there is not enough space to place another 160 pixel item, a new flex line is created for the items and so on until all of the items are placed. As the items can grow, they will expand larger than 160 px in order to fill each row completely. If there is only one item on the final line it will stretch to fill the entire line.</source>
          <target state="translated">その後、アイテムはコンテナにラップされます。次の例では、10個のアイテムがあり、すべて &lt;code&gt;160px&lt;/code&gt; の &lt;code&gt;flex-basis&lt;/code&gt; で、拡大および縮小する機能があります。最初の行が別の160ピクセルのアイテムを配置するのに十分なスペースがないポイントに達すると、新しいフレックスラインがアイテムに対して作成され、すべてのアイテムが配置されるまで続きます。アイテムは大きくなる可能性があるため、各行を完全に埋めるために160ピクセルより大きく拡大されます。最終行に項目が1つしかない場合は、行全体に拡大されます。</target>
        </trans-unit>
        <trans-unit id="83cfbb3cc55fce7b610e022a8a189ee61487125c" translate="yes" xml:space="preserve">
          <source>Items with an intrinsic aspect ratio</source>
          <target state="translated">本質的なアスペクト比を有するもの</target>
        </trans-unit>
        <trans-unit id="cf158c7c5120290558384c0232fedb46a29504f9" translate="yes" xml:space="preserve">
          <source>Items with placement properties</source>
          <target state="translated">配置プロパティを持つ項目</target>
        </trans-unit>
        <trans-unit id="d543537dea8ff3af10fea7f19650559597728f82" translate="yes" xml:space="preserve">
          <source>Its extension to HTML elements, though present in early drafts of CSS Basic User Interface Module Level 3, has been pushed to its &lt;a href=&quot;http://wiki.csswg.org/spec/css4-ui#pointer-events&quot;&gt;level 4&lt;/a&gt;.</source>
          <target state="translated">HTML要素への拡張は、CSS Basic User Interface Module Level 3の初期ドラフトに存在しますが、その&lt;a href=&quot;http://wiki.csswg.org/spec/css4-ui#pointer-events&quot;&gt;レベル4に&lt;/a&gt;プッシュされました。</target>
        </trans-unit>
        <trans-unit id="99a7b47ce384431ae1eb227b6ba4f9591177fbbb" translate="yes" xml:space="preserve">
          <source>Its value is a prioritized, comma-separated list of external references or locally-installed font face names. When a font is needed the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; iterates over the set of references listed using the first one it can successfully activate. Fonts containing invalid data or local font faces that are not found are ignored and the user agent loads the next font in the list.</source>
          <target state="translated">その値は、優先順位付けされた、コンマ区切りの外部参照またはローカルにインストールされたフォントフェース名のリストです。フォントが必要な場合、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;ユーザーエージェント&lt;/a&gt;は、正常にアクティブ化できる最初の参照を使用して、リストされた参照のセットを繰り返し処理します。無効なデータを含むフォントまたは見つからないローカルフォントフェースは無視され、ユーザーエージェントはリスト内の次のフォントをロードします。</target>
        </trans-unit>
        <trans-unit id="58668e7669fd564d99db5d581fcdb6a5618440b5" translate="yes" xml:space="preserve">
          <source>J</source>
          <target state="translated">J</target>
        </trans-unit>
        <trans-unit id="c1c8382a5664e15c09760b19e31b37639ac40495" translate="yes" xml:space="preserve">
          <source>JIS X 0208:1978</source>
          <target state="translated">JIS X 0208:1978</target>
        </trans-unit>
        <trans-unit id="9d6b48d7b1f75208832a33a757f4ffcc9bfc959b" translate="yes" xml:space="preserve">
          <source>JIS X 0208:1983</source>
          <target state="translated">JIS X 0208:1983</target>
        </trans-unit>
        <trans-unit id="1bb1ea7e6913d3475331965d5020085a59262c58" translate="yes" xml:space="preserve">
          <source>JIS X 0208:1990</source>
          <target state="translated">JIS X 0208:1990</target>
        </trans-unit>
        <trans-unit id="349541f40c3238d7cfaba2197fe7584ab8cb21ca" translate="yes" xml:space="preserve">
          <source>JIS X 0213:2004</source>
          <target state="translated">JIS X 0213:2004</target>
        </trans-unit>
        <trans-unit id="bf67b2dfa7452eeeba2d99ea18fbc82a08a6af72" translate="yes" xml:space="preserve">
          <source>JIS-B4</source>
          <target state="translated">JIS-B4</target>
        </trans-unit>
        <trans-unit id="4d5b1d7fd1ebf7056b5fe370c6d90fad94177661" translate="yes" xml:space="preserve">
          <source>JIS-B5</source>
          <target state="translated">JIS-B5</target>
        </trans-unit>
        <trans-unit id="9239c22d1d1c990ca8c206cb408b345a3ec8114c" translate="yes" xml:space="preserve">
          <source>Japanese</source>
          <target state="translated">Japanese</target>
        </trans-unit>
        <trans-unit id="cabd6fe8d763c51a9fbf7324f044e6ffa1963889" translate="yes" xml:space="preserve">
          <source>Japanese formal numbering to be used in legal or financial document.</source>
          <target state="translated">法律文書や金融文書で使用される日本語の正式なナンバリング。</target>
        </trans-unit>
        <trans-unit id="703c69600e070ab1081de5959051c3beb1b0c2f4" translate="yes" xml:space="preserve">
          <source>Japanese informal numbering</source>
          <target state="translated">ばんごう</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="33fc64beda12d84ba20564feed9804f42d9249da" translate="yes" xml:space="preserve">
          <source>JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent&quot;&gt;&lt;code&gt;AnimationEvent&lt;/code&gt;&lt;/a&gt; API</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent&quot;&gt; &lt;code&gt;AnimationEvent&lt;/code&gt; &lt;/a&gt; API</target>
        </trans-unit>
        <trans-unit id="ebe94f498f1cdb99b4e5ebe4411c03d1682c1c24" translate="yes" xml:space="preserve">
          <source>JavaScript Content</source>
          <target state="translated">JavaScriptの内容</target>
        </trans-unit>
        <trans-unit id="c15ca41ff2b0ccf6512cfe528d1cc181cf599b14" translate="yes" xml:space="preserve">
          <source>JavaScript can access the &lt;code&gt;@keyframes&lt;/code&gt; at-rule with the CSS object model interface &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSKeyframesRule&quot;&gt;&lt;code&gt;CSSKeyframesRule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JavaScriptは、CSSオブジェクトモデルインターフェース&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSKeyframesRule&quot;&gt; &lt;code&gt;CSSKeyframesRule&lt;/code&gt; で&lt;/a&gt; &lt;code&gt;@keyframes&lt;/code&gt; at-ruleにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="0a62b40b41ce0d42df8ba4b0874263a7aa928401" translate="yes" xml:space="preserve">
          <source>JavaScript content</source>
          <target state="translated">JavaScriptの内容</target>
        </trans-unit>
        <trans-unit id="bcf021b49cd8e796288272017b01657d2e5cc8dc" translate="yes" xml:space="preserve">
          <source>JavaScript examples</source>
          <target state="translated">JavaScriptの例</target>
        </trans-unit>
        <trans-unit id="e4815d242f65f22a5033f376d11aa19ade048914" translate="yes" xml:space="preserve">
          <source>Just for the sake of completeness, here&amp;rsquo;s the HTML that displays the page content, including the list into which the script inserts information about the received events:</source>
          <target state="translated">完全を期すために、スクリプトが受信したイベントに関する情報を挿入するリストを含む、ページコンテンツを表示するHTMLを次に示します。</target>
        </trans-unit>
        <trans-unit id="c7c4942f73b35f684c1bc282f462d7decb78ec94" translate="yes" xml:space="preserve">
          <source>Just like linear gradients, you can also stack radial gradients. The first specified is on top, the last on the bottom.</source>
          <target state="translated">線形グラデーションと同じように、放射状グラデーションを重ねることもできます。最初に指定したものが上に、最後に指定したものが下になります。</target>
        </trans-unit>
        <trans-unit id="536d2746f7f2f88df35515a9cd5e44cb1582b9ca" translate="yes" xml:space="preserve">
          <source>Justify</source>
          <target state="translated">Justify</target>
        </trans-unit>
        <trans-unit id="323bd53c811584ccea8cf8e9d3bcdc1ce9505648" translate="yes" xml:space="preserve">
          <source>Justifying Items on the Inline Axis</source>
          <target state="translated">インライン軸上でアイテムを正当化する</target>
        </trans-unit>
        <trans-unit id="5d16a900be850c7547843204f3d1512ae653f4e4" translate="yes" xml:space="preserve">
          <source>Justifying the grid tracks on the inline axis</source>
          <target state="translated">インライン軸上のグリッドトラックの正当化</target>
        </trans-unit>
        <trans-unit id="9f9a1b50bc7b997f6d378c4e08fe8258618f306b" translate="yes" xml:space="preserve">
          <source>Justifying the grid tracks on the row axis</source>
          <target state="translated">行軸上のグリッドトラックを正当化する</target>
        </trans-unit>
        <trans-unit id="09aa4863c5a1ad71eef6cc9ed0c8a5c3dc725193" translate="yes" xml:space="preserve">
          <source>Justifying the last line</source>
          <target state="translated">最後の一行を正当化する</target>
        </trans-unit>
        <trans-unit id="3130a1430df90f7ad2b8cef85a5471d0e92f3969" translate="yes" xml:space="preserve">
          <source>Juxtaposition</source>
          <target state="translated">Juxtaposition</target>
        </trans-unit>
        <trans-unit id="a7ee38bb7be4fc44198cb2685d9601dcf2b9f569" translate="yes" xml:space="preserve">
          <source>K</source>
          <target state="translated">K</target>
        </trans-unit>
        <trans-unit id="71a83ecbca7899b8918875156d3985b381572c43" translate="yes" xml:space="preserve">
          <source>Keep in mind that once you set &lt;code&gt;align-items:&amp;nbsp;start&lt;/code&gt;, the height of each child &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will be determined by the contents of the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. This is in contrast to omitting &lt;code&gt;&lt;a href=&quot;../align-items&quot;&gt;align-items&lt;/a&gt;&lt;/code&gt; completely, in which case the height of each &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; stretches to fill its grid area.</source>
          <target state="translated">あなたが設定されたらことを覚えておいてください &lt;code&gt;align-items:&amp;nbsp;start&lt;/code&gt; 、それぞれの子の高さ &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 内容によって決定される &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 。これは、 &lt;code&gt;&lt;a href=&quot;../align-items&quot;&gt;align-items&lt;/a&gt;&lt;/code&gt; を完全に省略するのとは対照的です。この場合、各 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; の高さは、グリッド領域を埋めるために伸びます。</target>
        </trans-unit>
        <trans-unit id="6a7628f58199c7079042a94c19241b733dd76ee0" translate="yes" xml:space="preserve">
          <source>Keep in mind that once you set &lt;code&gt;align-self:&amp;nbsp;start&lt;/code&gt;, the height of each child &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will be determined by the contents of the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. This is in contrast to omitting &lt;code&gt;&lt;a href=&quot;../align-self&quot;&gt;align-self&lt;/a&gt;&lt;/code&gt; completely, in which case the height of each &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; stretches to fill its grid area.</source>
          <target state="translated">あなたが設定されたらことを覚えておいてください &lt;code&gt;align-self:&amp;nbsp;start&lt;/code&gt; 、それぞれの子の高さ &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 内容によって決定される &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 。これは、 &lt;code&gt;&lt;a href=&quot;../align-self&quot;&gt;align-self&lt;/a&gt;&lt;/code&gt; を完全に省略した場合とは対照的です。この場合、各 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; の高さは、グリッド領域を埋めるように伸びます。</target>
        </trans-unit>
        <trans-unit id="9b8bea35eefc1e714b1a6555fcb100dafbc9b8ea" translate="yes" xml:space="preserve">
          <source>Keep in mind that these are custom properties, not actual variables like you might find in other programming languages. The value is computed where it is needed, not stored for use in other rules. For instance, you cannot set a property for an element and expect to retrieve it in a sibling's descendant's rule. The property is only set for the matching selector and its descendants, like any normal CSS.</source>
          <target state="translated">これらはカスタムプロパティであり、他のプログラミング言語で見られるような実際の変数ではないことに注意してください。値は必要な場所で計算され、他のルールで使用するために保存されるものではありません。例えば、ある要素にプロパティを設定して、兄弟の子孫のルールでそれを取得することはできません。プロパティが設定されるのは、通常のCSSのように、マッチするセレクタとその子孫に対してのみです。</target>
        </trans-unit>
        <trans-unit id="872ff031b74d9cb7727f9c46fa5e2e6669228229" translate="yes" xml:space="preserve">
          <source>Keep in mind, when the &lt;a href=&quot;../../order&quot;&gt;&lt;code&gt;order&lt;/code&gt;&lt;/a&gt; property alters rendering from the &quot;order of appearance in the HTML&quot; within &lt;a href=&quot;../../flex&quot;&gt;&lt;code&gt;flex&lt;/code&gt;&lt;/a&gt; containers, it similarly affects the order for stacking context.</source>
          <target state="translated">&lt;a href=&quot;../../order&quot;&gt; &lt;code&gt;order&lt;/code&gt; &lt;/a&gt;プロパティが&lt;a href=&quot;../../flex&quot;&gt; &lt;code&gt;flex&lt;/code&gt; &lt;/a&gt;コンテナ内の「HTMLでの出現順序」からレンダリングを変更する場合、同様にスタッキングコンテキストの順序に影響することに注意してください。</target>
        </trans-unit>
        <trans-unit id="9377caf1b267b856d3e0a623ba188f721348dcdf" translate="yes" xml:space="preserve">
          <source>Kerning</source>
          <target state="translated">Kerning</target>
        </trans-unit>
        <trans-unit id="e094be9c115702e9e6bd6183639f6738aaf8f5dc" translate="yes" xml:space="preserve">
          <source>Kerning (&lt;a href=&quot;../font-kerning&quot;&gt;&lt;code&gt;font-kerning&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">カーニング（&lt;a href=&quot;../font-kerning&quot;&gt; &lt;code&gt;font-kerning&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="610e7d4afcb0ce4e34e1229014d83237eab3a05b" translate="yes" xml:space="preserve">
          <source>Key Concepts and Terminology</source>
          <target state="translated">キーコンセプトと用語</target>
        </trans-unit>
        <trans-unit id="d99a5fad781343a4ebc41c9fd0646ca593604548" translate="yes" xml:space="preserve">
          <source>Key concepts and terminology</source>
          <target state="translated">キーコンセプトと用語</target>
        </trans-unit>
        <trans-unit id="a3926e039fd753c472f6e172496fda0574369261" translate="yes" xml:space="preserve">
          <source>Keyword</source>
          <target state="translated">Keyword</target>
        </trans-unit>
        <trans-unit id="a8619cd742f973918239ca10ea6bb7210df3762b" translate="yes" xml:space="preserve">
          <source>Keyword color values</source>
          <target state="translated">キーワードの色の値</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
