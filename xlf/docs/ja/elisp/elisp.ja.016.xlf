<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="49f9de5cdd026d53e82afe5f7a540af01f423517" translate="yes" xml:space="preserve">
          <source>The value of a &lt;code&gt;while&lt;/code&gt; form is always &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; フォームの値は常に &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9912c1305dfe708608a449f833a2f31f708f2dbf" translate="yes" xml:space="preserve">
          <source>The value of a hook variable should be a list of functions. You can manipulate that list using the normal Lisp facilities, but the modular way is to use the functions &lt;code&gt;add-hook&lt;/code&gt; and &lt;code&gt;remove-hook&lt;/code&gt;, defined below. They take care to handle some unusual situations and avoid problems.</source>
          <target state="translated">フック変数の値は、関数のリストである必要があります。そのリストは通常​​のLisp機能を使用して操作できますが、モジュラー方式では、以下に定義する関数 &lt;code&gt;add-hook&lt;/code&gt; および &lt;code&gt;remove-hook&lt;/code&gt; を使用します。彼らはいくつかの異常な状況を処理し、問題を回避するように注意を払います。</target>
        </trans-unit>
        <trans-unit id="c0ed2587fe635b2d9e79d3541e6cc504fd9eebb9" translate="yes" xml:space="preserve">
          <source>The value of point in each displayed buffer is saved and restored if &lt;code&gt;edebug-save-displayed-buffer-points&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;edebug-save-displayed-buffer-points&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、表示された各バッファのポイントの値が保存および復元されます。</target>
        </trans-unit>
        <trans-unit id="0652902dbda00a1f1b8c6d489b8db651b1b2521c" translate="yes" xml:space="preserve">
          <source>The value of point is a number no less than 1, and no greater than the buffer size plus 1. If narrowing is in effect (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;), then point is constrained to fall within the accessible portion of the buffer (possibly at one end of it).</source>
          <target state="translated">ポイントの値は、1以上、バッファサイズに1を加えた数以下です。ナローイングが有効な場合（&lt;a href=&quot;narrowing#Narrowing&quot;&gt;ナ&lt;/a&gt;ローイングを参照）、ポイントはバッファのアクセス可能な部分（おそらく一方の端）内に収まるように制約されます。それの）。</target>
        </trans-unit>
        <trans-unit id="c649d29a460c292a996b1cc1a21ea82f922077f2" translate="yes" xml:space="preserve">
          <source>The value of such an element denotes the side of the existing window where the new window shall be located. Valid values are &lt;code&gt;below&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;above&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;. The default is &lt;code&gt;below&lt;/code&gt;. The &lt;code&gt;window-atom&lt;/code&gt; parameter of the new window is set to this value.</source>
          <target state="translated">このような要素の値は、新しいウィンドウが配置される既存のウィンドウの側面を示します。有効な値は、 &lt;code&gt;below&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;above&lt;/code&gt; 、 &lt;code&gt;left&lt;/code&gt; です。デフォルトは &lt;code&gt;below&lt;/code&gt; です。新しいウィンドウの &lt;code&gt;window-atom&lt;/code&gt; パラメーターはこの値に設定されます。</target>
        </trans-unit>
        <trans-unit id="3bee44a93e7dbfe8f5da10b43e59eebc67ba3be4" translate="yes" xml:space="preserve">
          <source>The value of such an element specifies an existing window the new window shall be combined with. If it specifies an internal window, all children of that window become part of the atomic window too. If no window is specified, the new window becomes a sibling of the selected window. The &lt;code&gt;window-atom&lt;/code&gt; parameter of the existing window is set to &lt;code&gt;main&lt;/code&gt; provided that window is live and its &lt;code&gt;window-atom&lt;/code&gt; parameter was not already set.</source>
          <target state="translated">このような要素の値は、新しいウィンドウを組み合わせる既存のウィンドウを指定します。内部ウィンドウを指定している場合、そのウィンドウのすべての子もアトミックウィンドウの一部になります。ウィンドウが指定されていない場合、新しいウィンドウは選択したウィンドウの兄弟になります。ウィンドウがライブであり、その &lt;code&gt;window-atom&lt;/code&gt; パラメーターがまだ設定されていない場合、既存のウィンドウの &lt;code&gt;window-atom&lt;/code&gt; パラメーターは &lt;code&gt;main&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="36dca9fc8ccdca39123615ba9dd441f1ea0709cd" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;:mime-charset&lt;/code&gt; property is also defined as an alias for the coding system.</source>
          <target state="translated">&lt;code&gt;:mime-charset&lt;/code&gt; プロパティの値は、コーディングシステムのエイリアスとしても定義されます。</target>
        </trans-unit>
        <trans-unit id="683fca4c2cdec479bdd8c0d4b67ec7a0cb22ccb8" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;:width&lt;/code&gt;, &lt;code&gt;:align-to&lt;/code&gt;, &lt;code&gt;:height&lt;/code&gt;, and &lt;code&gt;:ascent&lt;/code&gt; properties can be a special kind of expression that is evaluated during redisplay. The result of the evaluation is used as an absolute number of pixels.</source>
          <target state="translated">&lt;code&gt;:width&lt;/code&gt; 、 &lt;code&gt;:align-to&lt;/code&gt; 、 &lt;code&gt;:height&lt;/code&gt; 、および &lt;code&gt;:ascent&lt;/code&gt; プロパティの値は、再表示中に評価される特別な種類の式にすることができます。評価の結果は、絶対ピクセル数として使用されます。</target>
        </trans-unit>
        <trans-unit id="b5883233bcfdece07654ec3fc2db74080cba9898" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;setq&lt;/code&gt; form is the value of the last &lt;var&gt;form&lt;/var&gt;.</source>
          <target state="translated">値 &lt;code&gt;setq&lt;/code&gt; フォームは、最後の値である &lt;var&gt;form&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c20effc01d2e40edc2a51c8522b1818bc27ec613" translate="yes" xml:space="preserve">
          <source>The value of the &lt;var&gt;key-regexp&lt;/var&gt; argument specifies what part of each record is the sort key. The &lt;var&gt;key-regexp&lt;/var&gt; could match the whole record, or only a part. In the latter case, the rest of the record has no effect on the sorted order of records, but it is carried along when the record moves to its new position.</source>
          <target state="translated">&lt;var&gt;key-regexp&lt;/var&gt; 引数の値は、各レコードのどの部分がソートキーであるかを指定します。 &lt;var&gt;key-regexp&lt;/var&gt; レコード全体、または一部のみに一致することができます。後者の場合、レコードの残りの部分はレコードの並べ替え順序に影響を与えませんが、レコードが新しい位置に移動したときに運ばれます。</target>
        </trans-unit>
        <trans-unit id="61f439d56d48d0b8c0f5d67dbcbbd53e2a928133" translate="yes" xml:space="preserve">
          <source>The value of the &lt;var&gt;record-regexp&lt;/var&gt; argument specifies how to divide the buffer into sort records. At the end of each record, a search is done for this regular expression, and the text that matches it is taken as the next record. For example, the regular expression &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;record-regexp&lt;/var&gt; 引数の値は、バッファーをソートレコードに分割する方法を指定します。各レコードの最後で、この正規表現の検索が実行され、それに一致するテキストが次のレコードとして取得されます。たとえば、正規表現 '</target>
        </trans-unit>
        <trans-unit id="39ba2b3d88e32ebb4217d6fb97a97f51cd7ad773" translate="yes" xml:space="preserve">
          <source>The value of the last form in &lt;var&gt;body&lt;/var&gt; is returned, unless the argument &lt;var&gt;quit-function&lt;/var&gt; is specified. In that case, it is called with two arguments: the window showing the buffer and the result of &lt;var&gt;body&lt;/var&gt;. The final return value is then whatever &lt;var&gt;quit-function&lt;/var&gt; returns.</source>
          <target state="translated">引数 &lt;var&gt;quit-function&lt;/var&gt; が指定されていない限り、 &lt;var&gt;body&lt;/var&gt; の最後の形式の値が返されます。その場合、2つの引数で呼び出されます。バッファを表示するウィンドウと &lt;var&gt;body&lt;/var&gt; の結果です。最終的な戻り値は、 &lt;var&gt;quit-function&lt;/var&gt; が返すものです。</target>
        </trans-unit>
        <trans-unit id="e78b740538539c7c406d38d214ecf64e0a9c548f" translate="yes" xml:space="preserve">
          <source>The value of the last form in &lt;var&gt;body&lt;/var&gt; is returned.</source>
          <target state="translated">&lt;var&gt;body&lt;/var&gt; の最後のフォームの値が返されます。</target>
        </trans-unit>
        <trans-unit id="5503ca30040ea0d8a2bf36ebd8b2d6d451adef8e" translate="yes" xml:space="preserve">
          <source>The value of the optional argument &lt;var&gt;require-match&lt;/var&gt; determines how the user may exit the minibuffer:</source>
          <target state="translated">オプションの引数 &lt;var&gt;require-match&lt;/var&gt; の値は、ユーザーがミニバッファーを終了する方法を決定します。</target>
        </trans-unit>
        <trans-unit id="91cb6366ae526fcd118c1c7987633bf5fb25c0aa" translate="yes" xml:space="preserve">
          <source>The value of this abnormal hook should be a list of functions, which are used to compute a completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) for completing the text at point. It can be used by major modes to provide mode-specific completion tables (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">この異常なフックの値は、ポイントでテキストを完了するための完了テーブル（&lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;基本的な完了を&lt;/a&gt;参照）を計算するために使用される関数のリストである必要があります。メジャーモードで使用して、モード固有の完了テーブルを提供できます（&lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;メジャーモードの規則を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="1f63a8b7cc8d9cea6e125635c39e1ca62c26e1ba" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the (mode-specific) abbreviation table of the current buffer. It can also be a list of such tables.</source>
          <target state="translated">この buffer-local 変数の値は、現在のバッファの(モード固有の)略語テーブルです。また、そのようなテーブルのリストにすることもできます。</target>
        </trans-unit>
        <trans-unit id="ffb436c64e5dfdae7baf41af2904d33b30ffad65" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the default directory for the current buffer. It should be an absolute directory name; it may start with &amp;lsquo;</source>
          <target state="translated">このbuffer-local変数の値は、現在のバッファーのデフォルトのディレクトリーです。絶対ディレクトリ名である必要があります。'で始まる場合があります</target>
        </trans-unit>
        <trans-unit id="911b12790a3948cec2a227be07bf8d24f3677dcc" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the length of the current buffer, when it was last read in, saved, or auto-saved. This is used to detect a substantial decrease in size, and turn off auto-saving in response.</source>
          <target state="translated">このバッファローカル変数の値は、最後に読み込まれた時、保存された時、または自動保存された時の現在のバッファの長さです。これは、サイズの大幅な減少を検出し、それに応じて自動保存をオフにするために使用されます。</target>
        </trans-unit>
        <trans-unit id="0fd2598f40c31f5cad837711cfca8950d8dcbaeb" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the list of saved former marks of the current buffer, most recent first.</source>
          <target state="translated">このバッファローカル変数の値は、現在のバッファに保存されている元マークのリストで、直近のものが最初になります。</target>
        </trans-unit>
        <trans-unit id="34c1d5bd1b00a5f68781fa93debb24f2ea06a228" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the spacing between tab stops used for displaying tab characters in Emacs buffers. The value is in units of columns, and the default is 8. Note that this feature is completely independent of the user-settable tab stops used by the command &lt;code&gt;tab-to-tab-stop&lt;/code&gt;. See &lt;a href=&quot;indent-tabs#Indent-Tabs&quot;&gt;Indent Tabs&lt;/a&gt;.</source>
          <target state="translated">このbuffer-local変数の値は、Emacsバッファーでタブ文字を表示するために使用されるタブストップ間の間隔です。値は列の単位であり、デフォルトは8です。この機能は、コマンド &lt;code&gt;tab-to-tab-stop&lt;/code&gt; で使用されるユーザー設定可能なタブストップとは完全に独立していることに注意してください。&lt;a href=&quot;indent-tabs#Indent-Tabs&quot;&gt;インデントタブを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="519d26f1c87601f1ce760feed44524edd2e01ae9" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable should be a function (of no arguments) to be called after self-inserting a character from the table &lt;code&gt;auto-fill-chars&lt;/code&gt;, see below. It may be &lt;code&gt;nil&lt;/code&gt;, in which case nothing special is done in that case.</source>
          <target state="translated">このバッファローカル変数の値は、テーブル &lt;code&gt;auto-fill-chars&lt;/code&gt; から文字を自己挿入した後に呼び出される（引数のない）関数である必要があります。以下を参照してください。それはかもしれ &lt;code&gt;nil&lt;/code&gt; の何も特別なが、その場合に行われる場合には、。</target>
        </trans-unit>
        <trans-unit id="caea4537a082e3806e14a0dedfb084a8ccdecf75" translate="yes" xml:space="preserve">
          <source>The value of this obsolete variable should be a list of functions that accept a single string argument and return another string. The default &lt;code&gt;filter-buffer-substring&lt;/code&gt; function passes the buffer substring to the first function in this list, and the return value of each function is passed to the next function. The return value of the last function is passed to &lt;code&gt;filter-buffer-substring-functions&lt;/code&gt;.</source>
          <target state="translated">この廃止された変数の値は、単一の文字列引数を受け入れ、別の文字列を返す関数のリストである必要があります。デフォルトの &lt;code&gt;filter-buffer-substring&lt;/code&gt; 関数は、バッファーサブストリングをこのリストの最初の関数に渡し、各関数の戻り値は次の関数に渡されます。最後の関数の戻り値は、 &lt;code&gt;filter-buffer-substring-functions&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="14a333d5db25651595647364a355fb887be56865" translate="yes" xml:space="preserve">
          <source>The value of this option can be also a list of frame parameters. In that case, implied resizing is inhibited for the change of a parameter that appears in this list. Parameters currently handled by this option are &lt;code&gt;font&lt;/code&gt;, &lt;code&gt;font-backend&lt;/code&gt;, &lt;code&gt;internal-border-width&lt;/code&gt;, &lt;code&gt;menu-bar-lines&lt;/code&gt; and &lt;code&gt;tool-bar-lines&lt;/code&gt;.</source>
          <target state="translated">このオプションの値は、フレームパラメータのリストにすることもできます。その場合、このリストに表示されるパラメーターの変更に対して、暗黙のサイズ変更は禁止されます。このオプションで現在処理されているパラメーターは、 &lt;code&gt;font&lt;/code&gt; 、 &lt;code&gt;font-backend&lt;/code&gt; 、 &lt;code&gt;internal-border-width&lt;/code&gt; 、 &lt;code&gt;menu-bar-lines&lt;/code&gt; 、 &lt;code&gt;tool-bar-lines&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3e83ed5cb4d5f62c69d5bf2a02a4d3115ea77186" translate="yes" xml:space="preserve">
          <source>The value of this option is an alist mapping conditions to display actions. Each condition may be either a regular expression matching a buffer name or a function that takes two arguments: a buffer name and the &lt;var&gt;action&lt;/var&gt; argument passed to &lt;code&gt;display-buffer&lt;/code&gt;. If either the name of the buffer passed to &lt;code&gt;display-buffer&lt;/code&gt; matches a regular expression in this alist, or the function specified by a condition returns non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;display-buffer&lt;/code&gt; uses the corresponding display action to display the buffer.</source>
          <target state="translated">このオプションの値は、アクションを表示するためのリストマッピング条件です。各条件は、バッファー名に一致する正規表現、またはバッファー名と &lt;code&gt;display-buffer&lt;/code&gt; に渡される &lt;var&gt;action&lt;/var&gt; 引数の2つの引数を取る関数のいずれかです。 &lt;code&gt;display-buffer&lt;/code&gt; bufferに渡されたバッファーの名前がこのリストの正規表現と一致するか、条件で指定された関数がnon &lt;code&gt;display-buffer&lt;/code&gt; &lt;code&gt;nil&lt;/code&gt; を返す場合、display-bufferは対応する表示アクションを使用してバッファーを表示します。</target>
        </trans-unit>
        <trans-unit id="f7f0d552de7fde481ea8ba3d348287bb76ef6370" translate="yes" xml:space="preserve">
          <source>The value of this option should be a display action. This option can be used to define a standard display action for calls to &lt;code&gt;display-buffer&lt;/code&gt;.</source>
          <target state="translated">このオプションの値は、表示アクションである必要があります。このオプションを使用して、 &lt;code&gt;display-buffer&lt;/code&gt; の呼び出しに対する標準の表示アクションを定義できます。</target>
        </trans-unit>
        <trans-unit id="1982bc460b3acf20b72b5d8f8e0b8f69732c0b5a" translate="yes" xml:space="preserve">
          <source>The value of this parameter is a cons cell whose &lt;small&gt;CAR&lt;/small&gt; and &lt;small&gt;CDR&lt;/small&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specify the minimum values (in columns) for the left and right margin of this window (see &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;. When present, Emacs will use these values instead of the actual margin widths for determining whether a window can be split or shrunk horizontally.</source>
          <target state="translated">このパラメーターの値はconsセルであり、&lt;small&gt;CAR&lt;/small&gt;と&lt;small&gt;CDR&lt;/small&gt;は、 &lt;code&gt;nil&lt;/code&gt; でない場合、このウィンドウの左右のマージンの最小値（列単位）を指定します（&lt;a href=&quot;display-margins#Display-Margins&quot;&gt;マージンの表示を&lt;/a&gt;参照してください。存在する場合、Emacsは代わりにこれらの値を使用しますウィンドウを水平方向に分割または縮小できるかどうかを判断するための実際のマージン幅。</target>
        </trans-unit>
        <trans-unit id="73135c98ff9d5f3b757d7d2d8c8c54929aa02856" translate="yes" xml:space="preserve">
          <source>The value of this property, &lt;var&gt;help&lt;/var&gt;, specifies a help-echo string to display while the mouse is on that item. This is displayed in the same way as &lt;code&gt;help-echo&lt;/code&gt; text properties (see &lt;a href=&quot;special-properties#Help-display&quot;&gt;Help display&lt;/a&gt;). Note that this must be a constant string, unlike the &lt;code&gt;help-echo&lt;/code&gt; property for text and overlays.</source>
          <target state="translated">このプロパティの値 &lt;var&gt;help&lt;/var&gt; は、マウスがそのアイテム上にあるときに表示するヘルプエコー文字列を指定します。これは、 &lt;code&gt;help-echo&lt;/code&gt; テキストプロパティと同じ方法で表示されます（&lt;a href=&quot;special-properties#Help-display&quot;&gt;ヘルプ表示を&lt;/a&gt;参照）。テキストやオーバーレイの &lt;code&gt;help-echo&lt;/code&gt; プロパティとは異なり、これは定数文字列でなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="12db18bf704f645ea58921e288a12705f317f668" translate="yes" xml:space="preserve">
          <source>The value of this user option is a symbol that specifies the style Emacs should use for single quotes in the wording of help and messages. If the option&amp;rsquo;s value is &lt;code&gt;curve&lt;/code&gt;, the style is</source>
          <target state="translated">このユーザーオプションの値は、ヘルプとメッセージの文言でEmacsが一重引用符に使用するスタイルを指定する記号です。オプションの値が &lt;code&gt;curve&lt;/code&gt; の場合、スタイルは</target>
        </trans-unit>
        <trans-unit id="a39d636df5f5c9f6eeef4e7d617080a5753f3330" translate="yes" xml:space="preserve">
          <source>The value of this variable determines the major mode of the initial</source>
          <target state="translated">この変数の値は、初期値のメジャーモードを決定します。</target>
        </trans-unit>
        <trans-unit id="ec9a110c01c8c7ed80a2b14875b7fd93b17a23df" translate="yes" xml:space="preserve">
          <source>The value of this variable indicates the time at which Emacs was built. It uses the style of &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;), or is &lt;code&gt;nil&lt;/code&gt; if the information is not available.</source>
          <target state="translated">この変数の値は、Emacsがビルドされた時刻を示します。 &lt;code&gt;current-time&lt;/code&gt; スタイルを使用するか（&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;時刻を&lt;/a&gt;参照）、情報が利用できない場合は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7126b5bb562715f119a074a9fb6f9539c652ed90" translate="yes" xml:space="preserve">
          <source>The value of this variable is &lt;code&gt;t&lt;/code&gt; once the command line has been processed.</source>
          <target state="translated">コマンドラインが処理されると、この変数の値は &lt;code&gt;t&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="d734191b39f03642c9ca10157d8d93befc682dbb" translate="yes" xml:space="preserve">
          <source>The value of this variable is a buffer position (an integer or a marker) for &lt;code&gt;expand-abbrev&lt;/code&gt; to use as the start of the next abbrev to be expanded. The value can also be &lt;code&gt;nil&lt;/code&gt;, which means to use the word before point instead. &lt;code&gt;abbrev-start-location&lt;/code&gt; is set to &lt;code&gt;nil&lt;/code&gt; each time &lt;code&gt;expand-abbrev&lt;/code&gt; is called. This variable is also set by &lt;code&gt;abbrev-prefix-mark&lt;/code&gt;.</source>
          <target state="translated">この変数の値は、 &lt;code&gt;expand-abbrev&lt;/code&gt; が次に展開される略語の開始として使用するためのバッファー位置（整数またはマーカー）です。値は &lt;code&gt;nil&lt;/code&gt; にすることもできます。これは、代わりにポイントの前の単語を使用することを意味します。 &lt;code&gt;abbrev-start-location&lt;/code&gt; は、 &lt;code&gt;expand-abbrev&lt;/code&gt; が呼び出されるたびに &lt;code&gt;nil&lt;/code&gt; に設定されます。この変数は、 &lt;code&gt;abbrev-prefix-mark&lt;/code&gt; によっても設定されます。</target>
        </trans-unit>
        <trans-unit id="1fa6cf030fdf3d942d3466e8d2a76742bda4ab1b" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) that specifies, for each character, its Unicode &lt;code&gt;General_Category&lt;/code&gt; property as a symbol.</source>
          <target state="translated">この変数の値は、文字ごとに &lt;code&gt;General_Category&lt;/code&gt; プロパティをシンボルとして指定するchar-table（&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tablesを&lt;/a&gt;参照）です。</target>
        </trans-unit>
        <trans-unit id="7ba7ac5d05f8bee892363deea964b1380bb266d1" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies the width of each character in columns that it will occupy on the screen.</source>
          <target state="translated">この変数の値は、画面上で占有する列の各文字の幅を指定する文字表です。</target>
        </trans-unit>
        <trans-unit id="fb2925010bd994bd500ca39b6e263f1a4fbc0618" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies, for each character, a symbol whose name is the script to which the character belongs, according to the Unicode Standard classification of the Unicode code space into script-specific blocks. This char-table has a single extra slot whose value is the list of all script symbols.</source>
          <target state="translated">この変数の値は、各文字について、Unicodeコード空間のUnicode標準のスクリプト固有のブロックへの分類に従って、その名前がその文字が属するスクリプトであるシンボルを指定する文字テーブルです。この文字テーブルには、すべてのスクリプトシンボルのリストが値となる1つの余分なスロットがあります。</target>
        </trans-unit>
        <trans-unit id="62e38dcba10ebd10ed021a19971e4e68aec9afdc" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies, for each character, whether it is printable or not. That is, if evaluating &lt;code&gt;(aref printable-chars char)&lt;/code&gt; results in &lt;code&gt;t&lt;/code&gt;, the character is printable, and if it results in &lt;code&gt;nil&lt;/code&gt;, it is not.</source>
          <target state="translated">この変数の値は、文字ごとに、印刷可能かどうかを指定するchar-tableです。つまり、 &lt;code&gt;(aref printable-chars char)&lt;/code&gt; を評価した結果が &lt;code&gt;t&lt;/code&gt; の場合、文字は印刷可能であり、結果が &lt;code&gt;nil&lt;/code&gt; の場合、そうではありません。</target>
        </trans-unit>
        <trans-unit id="d185fa900c5b6d5d5843afc08b4f7ca02fa56927" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table which defines glyphless characters and how they are displayed. Each entry must be one of the following display methods:</source>
          <target state="translated">この変数の値は、グリフレス文字とその表示方法を定義する文字テーブルです。各エントリは、以下の表示方法のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="16053fd945be0355c0afa6bafe1716c51992d3ce" translate="yes" xml:space="preserve">
          <source>The value of this variable is a full keymap used by Electric Command Future mode. The functions in this map allow you to edit commands you have not yet thought about executing.</source>
          <target state="translated">この変数の値は、エレクトリックコマンドフューチャーモードで使用するフルキーマップです。このマップ内の機能を使用することで、まだ実行しようと思っていないコマンドを編集することができます。</target>
        </trans-unit>
        <trans-unit id="bc9b16dd544b211e330b1ab8935748a5b2ce4d61" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that &lt;code&gt;expand-abbrev&lt;/code&gt; will call with no arguments to do the expansion. The function can do anything it wants before and after performing the expansion. It should return the abbrev symbol if expansion took place.</source>
          <target state="translated">この変数の値は、 &lt;code&gt;expand-abbrev&lt;/code&gt; が引数なしで呼び出して展開を行う関数です。この関数は、展開の実行の前後に、必要なことをすべて実行できます。拡張が行われた場合は、略語記号を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="895242d99288a5e7484baa95b5a0b6635e384c18" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that &lt;code&gt;filter-buffer-substring&lt;/code&gt; will call to do the actual work. The function receives three arguments, the same as those of &lt;code&gt;filter-buffer-substring&lt;/code&gt;, which it should treat as per the documentation of that function. It should return the filtered text (and optionally delete the source text).</source>
          <target state="translated">この変数の値は、 &lt;code&gt;filter-buffer-substring&lt;/code&gt; が実際の作業を行うために呼び出す関数です。この関数は、 &lt;code&gt;filter-buffer-substring&lt;/code&gt; と同じ3つの引数を受け取ります。これらの引数は、その関数のドキュメントに従って処理する必要があります。フィルタリングされたテキストを返す必要があります（オプションでソーステキストを削除します）。</target>
        </trans-unit>
        <trans-unit id="fbbbbaa436e4df5bde4fbe1ba9b2858aa0e0c766" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that can be used by &lt;code&gt;indent-region&lt;/code&gt; as a short cut. It should take two arguments, the start and end of the region. You should design the function so that it will produce the same results as indenting the lines of the region one by one, but presumably faster.</source>
          <target state="translated">この変数の値は、 &lt;code&gt;indent-region&lt;/code&gt; ショートカットとして使用できる関数です。リージョンの開始と終了の2つの引数を取る必要があります。領域の線を1つずつインデントするのと同じ結果が得られるように関数を設計する必要がありますが、おそらくより高速です。</target>
        </trans-unit>
        <trans-unit id="f3821bf85d9aeff1378d29948aa261bfa194d593" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of ImageMagick image types which Emacs may attempt to render using ImageMagick. Each list element should be one of the symbols in the list returned by &lt;code&gt;imagemagick-types&lt;/code&gt;, or an equivalent string. Alternatively, a value of &lt;code&gt;t&lt;/code&gt; enables ImageMagick for all possible image types. Regardless of the value of this variable, &lt;code&gt;imagemagick-types-inhibit&lt;/code&gt; (see below) takes precedence.</source>
          <target state="translated">この変数の値は、EmacsがImageMagickを使用してレンダリングしようとする可能性のあるImageMagick画像タイプのリストです。各リスト要素は、 &lt;code&gt;imagemagick-types&lt;/code&gt; によって返されるリスト内のシンボルの1つ、または同等の文字列である必要があります。あるいは、 &lt;code&gt;t&lt;/code&gt; の値は、考えられるすべての画像タイプに対してImageMagickを有効にします。この変数の値に関係なく、 &lt;code&gt;imagemagick-types-inhibit&lt;/code&gt; （以下を参照）が優先されます。</target>
        </trans-unit>
        <trans-unit id="9de9333a1769c5c462265b3d8bd79b1d5ee87d05" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of all minor mode commands.</source>
          <target state="translated">この変数の値は、すべてのマイナーモードコマンドのリストです。</target>
        </trans-unit>
        <trans-unit id="47a8ae72a588c611af4dd474d9a9965282c852e9" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of completion style (symbols) to use for performing completion. A &lt;em&gt;completion style&lt;/em&gt; is a set of rules for generating completions. Each symbol occurring this list must have a corresponding entry in &lt;code&gt;completion-styles-alist&lt;/code&gt;.</source>
          <target state="translated">この変数の値は、完了を実行するために使用する完了スタイル（シンボル）のリストです。&lt;em&gt;完成スタイルは&lt;/em&gt;生成補完するためのルールのセットです。このリストにある各シンボルには、 &lt;code&gt;completion-styles-alist&lt;/code&gt; に対応するエントリが必要です。</target>
        </trans-unit>
        <trans-unit id="29a32af46e4eeadb6fb35baac6ed9c6739f1c9f8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of directories to search for programs to run in subprocesses. Each element is either the name of a directory (i.e., a string), or &lt;code&gt;nil&lt;/code&gt;, which stands for the default directory (which is the value of &lt;code&gt;default-directory&lt;/code&gt;). See &lt;a href=&quot;locating-files#Locating-Files&quot;&gt;executable-find&lt;/a&gt;, for the details of this search.</source>
          <target state="translated">この変数の値は、サブプロセスで実行するプログラムを検索するためのディレクトリのリストです。各要素は、ディレクトリの名前（つまり、文字列）、またはデフォルトディレクトリ（ &lt;code&gt;default-directory&lt;/code&gt; の値）を表す &lt;code&gt;nil&lt;/code&gt; のいずれかです。この検索の詳細については、&lt;a href=&quot;locating-files#Locating-Files&quot;&gt;executable-findを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4f32a4eab842de190c1e695fd9e2152827b42fc2" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of directories to search when loading files with &lt;code&gt;load&lt;/code&gt;. Each element is a string (which must be a directory) or &lt;code&gt;nil&lt;/code&gt; (which stands for the current working directory).</source>
          <target state="translated">この変数の値は、 &lt;code&gt;load&lt;/code&gt; を使用してファイルをロードするときに検索するディレクトリのリストです。各要素は、文字列（ディレクトリである必要があります）または &lt;code&gt;nil&lt;/code&gt; （現在の作業ディレクトリを表します）です。</target>
        </trans-unit>
        <trans-unit id="253b1f7802a872862cd35b4dffcb6775c54311a8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of elements of the form &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;abbrev-table&lt;/var&gt;)&lt;/code&gt; where &lt;var&gt;mode&lt;/var&gt; is the name of a variable: if the variable is bound to a non-&lt;code&gt;nil&lt;/code&gt; value, then the &lt;var&gt;abbrev-table&lt;/var&gt; is active, otherwise it is ignored. &lt;var&gt;abbrev-table&lt;/var&gt; can also be a list of abbrev tables.</source>
          <target state="translated">この変数の値は、フォームの要素のリストである &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;abbrev-table&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;mode&lt;/var&gt; 変数の名前である：変数は非にバインドされている場合 &lt;code&gt;nil&lt;/code&gt; 値を、次に &lt;var&gt;abbrev-table&lt;/var&gt; そうでなければ、アクティブであります無視されます。 &lt;var&gt;abbrev-table&lt;/var&gt; は、abbrevテーブルのリストにすることもできます。</target>
        </trans-unit>
        <trans-unit id="40d59ecb84f610c7ca9b936f63f0ac181287b46b" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of event types that serve as alternative help characters. These events are handled just like the event specified by &lt;code&gt;help-char&lt;/code&gt;.</source>
          <target state="translated">この変数の値は、代替ヘルプ文字として機能するイベントタイプのリストです。これらのイベントは、 &lt;code&gt;help-char&lt;/code&gt; で指定されたイベントと同じように処理されます。</target>
        </trans-unit>
        <trans-unit id="6ddcbef14446d78cc4e1ee3e9fae5bc0b58251c5" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called after a file is visited. The file&amp;rsquo;s local-variables specification (if any) will have been processed before the hooks are run. The buffer visiting the file is current when the hook functions are run.</source>
          <target state="translated">この変数の値は、ファイルにアクセスした後に呼び出される関数のリストです。ファイルのローカル変数の指定（存在する場合）は、フックが実行される前に処理されます。フック関数が実行されると、ファイルにアクセスするバッファーは最新です。</target>
        </trans-unit>
        <trans-unit id="4a37504953ca04fe3adf8b140d470266df3deb66" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called before writing out a buffer to its visited file. If one of them returns non-&lt;code&gt;nil&lt;/code&gt;, the file is considered already written and the rest of the functions are not called, nor is the usual code for writing the file executed.</source>
          <target state="translated">この変数の値は、アクセスしたファイルにバッファーを書き込む前に呼び出される関数のリストです。それらの1つが &lt;code&gt;nil&lt;/code&gt; 返す場合、ファイルはすでに書き込まれていると見なされ、残りの関数は呼び出されず、ファイルを書き込むための通常のコードも実行されません。</target>
        </trans-unit>
        <trans-unit id="fb6acbc82868d45944f82b4791b7635aef8fde9d" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called when &lt;code&gt;find-file&lt;/code&gt; or &lt;code&gt;find-file-noselect&lt;/code&gt; is passed a nonexistent file name. &lt;code&gt;find-file-noselect&lt;/code&gt; calls these functions as soon as it detects a nonexistent file. It calls them in the order of the list, until one of them returns non-&lt;code&gt;nil&lt;/code&gt;. &lt;code&gt;buffer-file-name&lt;/code&gt; is already set up.</source>
          <target state="translated">この変数の値は、 &lt;code&gt;find-file&lt;/code&gt; または &lt;code&gt;find-file-noselect&lt;/code&gt; に存在しないファイル名が渡されたときに呼び出される関数のリストです。 &lt;code&gt;find-file-noselect&lt;/code&gt; は、存在しないファイルを検出するとすぐにこれらの関数を呼び出します。それらの1つが &lt;code&gt;nil&lt;/code&gt; 返すまで、リストの順序でそれらを呼び出します。 &lt;code&gt;buffer-file-name&lt;/code&gt; はすでに設定されています。</target>
        </trans-unit>
        <trans-unit id="ce64d0031359699b8cfafc51d537afbdf1484ede" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of symbols that are the features loaded in the current Emacs session. Each symbol was put in this list with a call to &lt;code&gt;provide&lt;/code&gt;. The order of the elements in the &lt;code&gt;features&lt;/code&gt; list is not significant.</source>
          <target state="translated">この変数の値は、現在のEmacsセッションでロードされた機能であるシンボルのリストです。各シンボルは、を &lt;code&gt;provide&lt;/code&gt; 呼び出しでこのリストに入れられました。 &lt;code&gt;features&lt;/code&gt; リスト内の要素の順序は重要ではありません。</target>
        </trans-unit>
        <trans-unit id="63e64601fef9cafb97c46d2990222c9f7f4311c8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of the keywords to highlight. Lisp programs should not set this variable directly. Normally, the value is automatically set by Font Lock mode, using the &lt;var&gt;keywords&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;. The value can also be altered using the functions &lt;code&gt;font-lock-add-keywords&lt;/code&gt; and &lt;code&gt;font-lock-remove-keywords&lt;/code&gt; (see &lt;a href=&quot;customizing-keywords#Customizing-Keywords&quot;&gt;Customizing Keywords&lt;/a&gt;).</source>
          <target state="translated">この変数の値は、強調表示するキーワードのリストです。Lispプログラムはこの変数を直接設定すべきではありません。通常、値は &lt;code&gt;font-lock-defaults&lt;/code&gt; の &lt;var&gt;keywords&lt;/var&gt; 要素を使用して、FontLockモードによって自動的に設定されます。値は、関数 &lt;code&gt;font-lock-add-keywords&lt;/code&gt; および &lt;code&gt;font-lock-remove-keywords&lt;/code&gt; を使用して変更することもできます（&lt;a href=&quot;customizing-keywords#Customizing-Keywords&quot;&gt;キーワードのカスタマイズを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="133759324957b9672c4b0b1c0d11bac955ea2da2" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of the values returned by all the expressions that were read, evaluated, and printed from buffers (including the minibuffer) by the standard Emacs commands which do this. (Note that this does &lt;em&gt;not&lt;/em&gt; include evaluation in</source>
          <target state="translated">この変数の値は、これを行う標準のEmacsコマンドによってバッファー（ミニバッファーを含む）から読み取られ、評価され、出力されたすべての式によって返される値のリストです。（これには、の評価&lt;em&gt;は&lt;/em&gt;含まれ&lt;em&gt;ない&lt;/em&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f54e2eed25b0db677a48a0649bd0311f6852f604" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of themes loaded into Emacs. Each theme is represented by a Lisp symbol (the theme name). The default value of this variable is a list containing two dummy themes: &lt;code&gt;(user changed)&lt;/code&gt;. The &lt;code&gt;changed&lt;/code&gt; theme stores settings made before any Custom themes are applied (e.g., variables set outside of Customize). The &lt;code&gt;user&lt;/code&gt; theme stores settings the user has customized and saved. Any additional themes declared with the &lt;code&gt;deftheme&lt;/code&gt; macro are added to the front of this list.</source>
          <target state="translated">この変数の値は、Emacsにロードされたテーマのリストです。各テーマは、Lispシンボル（テーマ名）で表されます。この変数のデフォルト値は、2つのダミーテーマを含むリストです:( &lt;code&gt;(user changed)&lt;/code&gt; 。 &lt;code&gt;changed&lt;/code&gt; 任意のカスタムテーマの前に作られたテーマ・ストアの設定が適用されている（例えば、変数のカスタマイズの設定外）。 &lt;code&gt;user&lt;/code&gt; テーマ店舗の設定、ユーザーがカスタマイズして保存されています。 &lt;code&gt;deftheme&lt;/code&gt; マクロで宣言された追加のテーマは、このリストの先頭に追加されます。</target>
        </trans-unit>
        <trans-unit id="124d3c23221104c7409d74944cb02f2b99b0114e" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of warnings to be displayed after the current command has finished. Each element must be a list</source>
          <target state="translated">この変数の値は、現在のコマンドが終了した後に表示される警告のリストです。各要素はリスト</target>
        </trans-unit>
        <trans-unit id="89d3ec324274c4cfefe0acf837435da3f85f3c47" translate="yes" xml:space="preserve">
          <source>The value of this variable is a local keymap for characters following the Help key,</source>
          <target state="translated">この変数の値は、ヘルプキーに続く文字のローカルキーマップです。</target>
        </trans-unit>
        <trans-unit id="aa3a6a128eaffd7a416313e23382dec1addead25" translate="yes" xml:space="preserve">
          <source>The value of this variable is a mode line construct that controls the contents of the mode-line. It is always buffer-local in all buffers.</source>
          <target state="translated">この変数の値は、モードラインの内容を制御するモードライン構成体です。これは、すべてのバッファにおいて常にバッファローカルです。</target>
        </trans-unit>
        <trans-unit id="25cd23c85bbb1ee221f951d01edffe0cd1ce0147" translate="yes" xml:space="preserve">
          <source>The value of this variable is a nonnegative integer that controls whether Emacs signals a range error when a large integer would be calculated. Integers with absolute values less than 2**&lt;var&gt;n&lt;/var&gt;, where &lt;var&gt;n&lt;/var&gt; is this variable&amp;rsquo;s value, do not signal a range error. Attempts to create larger integers typically signal a range error, although there might be no signal if a larger integer can be created cheaply. Setting this variable to a large number can be costly if a computation creates huge integers.</source>
          <target state="translated">この変数の値は、大きな整数が計算されるときにEmacsが範囲エラーを通知するかどうかを制御する非負の整数です。絶対値未満の2 **と整数 &lt;var&gt;n&lt;/var&gt; は、 &lt;var&gt;n&lt;/var&gt; はこの変数の値では、範囲のエラーを通知しません。より大きな整数を作成しようとすると、通常、範囲エラーが通知されますが、より大きな整数を安価に作成できる場合は、信号が送信されない可能性があります。計算によって巨大な整数が作成される場合、この変数を大きな数値に設定するとコストがかかる可能性があります。</target>
        </trans-unit>
        <trans-unit id="b0a0e6475857d62888333d14d74963c15033a16f" translate="yes" xml:space="preserve">
          <source>The value of this variable is a string, the name of a directory that contains programs that come with GNU Emacs and are intended for Emacs to invoke. The program &lt;code&gt;movemail&lt;/code&gt; is an example of such a program; Rmail uses it to fetch new mail from an inbox.</source>
          <target state="translated">この変数の値は文字列であり、GNU Emacsに付属し、Emacsが呼び出すことを目的としたプログラムを含むディレクトリの名前です。プログラム &lt;code&gt;movemail&lt;/code&gt; はそのようなプログラムの例です。Rmailはこれを使用して、受信ボックスから新しいメールをフェッチします。</target>
        </trans-unit>
        <trans-unit id="cfb572f9bc2f44e32d32a8a2cdf630179f422cca" translate="yes" xml:space="preserve">
          <source>The value of this variable is a symbol indicating the type of operating system Emacs is running on. The possible values are:</source>
          <target state="translated">この変数の値は、Emacs が動作しているオペレーティングシステムの種類を示すシンボルです。可能な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="8002c2c1eaf55d7b7ae8a209355f0464c509a693" translate="yes" xml:space="preserve">
          <source>The value of this variable is a symbol that specifies the style Emacs should use for single quotes in the wording of help and messages. If the variable&amp;rsquo;s value is &lt;code&gt;curve&lt;/code&gt;, the style is</source>
          <target state="translated">この変数の値は、ヘルプとメッセージの文言でEmacsが一重引用符に使用するスタイルを指定する記号です。変数の値が &lt;code&gt;curve&lt;/code&gt; の場合、スタイルは</target>
        </trans-unit>
        <trans-unit id="2bdd79099d412978e3bbbe37242d52feb2a029ee" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist of package archives recognized by the Emacs package manager.</source>
          <target state="translated">この変数の値は、Emacs パッケージマネージャが認識するパッケージアーカイブの一覧です。</target>
        </trans-unit>
        <trans-unit id="c06b37baadabba3c87ddc88b38f5d0fd1b8c18ac" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist that associates the names of loaded library files with the names of the functions and variables they defined, as well as the features they provided or required.</source>
          <target state="translated">この変数の値は、読み込まれたライブラリファイルの名前と、それらが定義した関数や変数の名前、そしてそれらが提供した機能や必要とした機能を関連付けたリストです。</target>
        </trans-unit>
        <trans-unit id="81c720fde775ca08c6d96c03b1485dbda6b71c77" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist whose elements have the form &lt;code&gt;(&lt;var&gt;face&lt;/var&gt; . &lt;var&gt;remapping&lt;/var&gt;)&lt;/code&gt;. This causes Emacs to display any text having the face &lt;var&gt;face&lt;/var&gt; with &lt;var&gt;remapping&lt;/var&gt;, rather than the ordinary definition of &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">この変数の値は、その要素の形態を有する連想リストである &lt;code&gt;(&lt;var&gt;face&lt;/var&gt; . &lt;var&gt;remapping&lt;/var&gt;)&lt;/code&gt; 。これは、Emacsが顔有する任意のテキストを表示させる &lt;var&gt;face&lt;/var&gt; と &lt;var&gt;remapping&lt;/var&gt; ではなく、通常の定義よりも、 &lt;var&gt;face&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2f18cf20c9a3c4ca8706679eb65fe735172405b" translate="yes" xml:space="preserve">
          <source>The value of this variable is not guaranteed to be accurate except while processing &lt;code&gt;frame-title-format&lt;/code&gt; or &lt;code&gt;icon-title-format&lt;/code&gt;.</source>
          <target state="translated">この変数の値は、 &lt;code&gt;frame-title-format&lt;/code&gt; または &lt;code&gt;icon-title-format&lt;/code&gt; を処理している場合を除いて、正確であることが保証されていません。</target>
        </trans-unit>
        <trans-unit id="933998c144085b4faa6ba67abba92172b97c7da6" translate="yes" xml:space="preserve">
          <source>The value of this variable is the buffer for which &lt;code&gt;abbrev-start-location&lt;/code&gt; has been set. Trying to expand an abbrev in any other buffer clears &lt;code&gt;abbrev-start-location&lt;/code&gt;. This variable is set by &lt;code&gt;abbrev-prefix-mark&lt;/code&gt;.</source>
          <target state="translated">この変数の値は、 &lt;code&gt;abbrev-start-location&lt;/code&gt; が設定されているバッファーです。他のバッファで略語を展開しようとすると、 &lt;code&gt;abbrev-start-location&lt;/code&gt; がクリアされます。この変数は、 &lt;code&gt;abbrev-prefix-mark&lt;/code&gt; によって設定されます。</target>
        </trans-unit>
        <trans-unit id="8abb5c97c277797f521989347c2e42ed6365ddf0" translate="yes" xml:space="preserve">
          <source>The value of this variable is the completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) used for completion in the minibuffer. This is the global variable that contains what &lt;code&gt;completing-read&lt;/code&gt; passes to &lt;code&gt;try-completion&lt;/code&gt;. It is used by minibuffer completion commands such as &lt;code&gt;minibuffer-complete-word&lt;/code&gt;.</source>
          <target state="translated">この変数の値は、ミニバッファーでの完了に使用される完了テーブル（「&lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;基本的な完了&lt;/a&gt;」を参照）です。これは、completeing &lt;code&gt;completing-read&lt;/code&gt; が &lt;code&gt;try-completion&lt;/code&gt; に渡すものを含むグローバル変数です。これは、 &lt;code&gt;minibuffer-complete-word&lt;/code&gt; などのミニバッファー完了コマンドによって使用されます。</target>
        </trans-unit>
        <trans-unit id="96328791cd147154e17de70ea41f23cfbbba1087" translate="yes" xml:space="preserve">
          <source>The value of this variable is the default output stream&amp;mdash;the stream that print functions use when the &lt;var&gt;stream&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;. The default is &lt;code&gt;t&lt;/code&gt;, meaning display in the echo area.</source>
          <target state="translated">この変数の値は、デフォルトの出力ストリームです。つまり、 &lt;var&gt;stream&lt;/var&gt; 引数が &lt;code&gt;nil&lt;/code&gt; の場合にprint関数が使用するストリームです。デフォルトは &lt;code&gt;t&lt;/code&gt; で、エコー領域に表示することを意味します。</target>
        </trans-unit>
        <trans-unit id="ae0831846c75f4a338c383d0f402cd3358232b5d" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function called to insert an entry at point, including its terminating newline. The function should accept two arguments, &lt;var&gt;id&lt;/var&gt; and &lt;var&gt;contents&lt;/var&gt;, having the same meanings as in &lt;code&gt;tabulated-list-entries&lt;/code&gt;. The default value is a function which inserts an entry in a straightforward way; a mode which uses Tabulated List mode in a more complex way can specify another function.</source>
          <target state="translated">この変数の値は、終了改行を含め、ポイントにエントリを挿入するために呼び出される関数です。この関数は、 &lt;code&gt;tabulated-list-entries&lt;/code&gt; と同じ意味を持つ2つの引数 &lt;var&gt;id&lt;/var&gt; と &lt;var&gt;contents&lt;/var&gt; を受け入れる必要があります。デフォルト値は、簡単な方法でエントリを挿入する関数です。より複雑な方法で表形式リストモードを使用するモードでは、別の関数を指定できます。</target>
        </trans-unit>
        <trans-unit id="7eb19205eadf49f07947146594a55f4d23efc62f" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function to call to invoke the debugger. Its value must be a function of any number of arguments, or, more typically, the name of a function. This function should invoke some kind of debugger. The default value of the variable is &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">この変数の値は、デバッガーを呼び出すために呼び出す関数です。その値は、任意の数の引数の関数、またはより一般的には関数の名前である必要があります。この関数は、ある種のデバッガーを呼び出す必要があります。変数のデフォルト値は &lt;code&gt;debug&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2e04c4a7f8af8a9ebc7bdd81f634adf0304f9ff3" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function to use to revert this buffer. It should be a function with two optional arguments to do the work of reverting. The two optional arguments, &lt;var&gt;ignore-auto&lt;/var&gt; and &lt;var&gt;noconfirm&lt;/var&gt;, are the arguments that &lt;code&gt;revert-buffer&lt;/code&gt; received.</source>
          <target state="translated">この変数の値は、このバッファーを元に戻すために使用する関数です。これは、元に戻す作業を行うための2つのオプションの引数を持つ関数である必要があります。2つのオプションの引数、 &lt;var&gt;ignore-auto&lt;/var&gt; と &lt;var&gt;noconfirm&lt;/var&gt; は、 &lt;code&gt;revert-buffer&lt;/code&gt; が受け取った引数です。</target>
        </trans-unit>
        <trans-unit id="dccef0d640ff834b4588b6b92c1b4f8ea1188ab5" translate="yes" xml:space="preserve">
          <source>The value of this variable is the greatest &amp;ldquo;small&amp;rdquo; integer that Emacs Lisp can handle. Typical values are 2**29 - 1 on 32-bit and 2**61 - 1 on 64-bit platforms.</source>
          <target state="translated">この変数の値は、EmacsLispが処理できる最大の「小さな」整数です。一般的な値は、32ビットプラットフォームでは2 ** 29-1、64ビットプラットフォームでは2 ** 61-1です。</target>
        </trans-unit>
        <trans-unit id="31d2e828cbc40f3144bc61afc08c98328c1ac5de" translate="yes" xml:space="preserve">
          <source>The value of this variable is the help character&amp;mdash;the character that Emacs recognizes as meaning Help. By default, its value is 8, which stands for</source>
          <target state="translated">この変数の値はヘルプ文字、つまりEmacsがヘルプを意味すると認識する文字です。デフォルトでは、その値は8で、これは</target>
        </trans-unit>
        <trans-unit id="861876551f6ac7a8725b6a32b02dca6d5191372b" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of command-line arguments passed to Emacs.</source>
          <target state="translated">この変数の値は、Emacsに渡されるコマンドライン引数のリストです。</target>
        </trans-unit>
        <trans-unit id="e1d06ef5c8374bd750485c57abb50eaf06daf7d7" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of command-line arguments that have not yet been processed.</source>
          <target state="translated">この変数の値は、まだ処理されていないコマンドライン引数のリストです。</target>
        </trans-unit>
        <trans-unit id="8621be2dbb39d088c193d4800a069de83beb18d9" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of properties to remove from inserted text. Its default value contains properties that might lead to annoying results, such as causing the text to respond to the mouse or specifying key bindings. It takes effect after &lt;code&gt;yank-handled-properties&lt;/code&gt;.</source>
          <target state="translated">この変数の値は、挿入されたテキストから削除するプロパティのリストです。デフォルト値には、テキストをマウスに応答させたり、キーバインディングを指定したりするなど、迷惑な結果につながる可能性のあるプロパティが含まれています。 &lt;code&gt;yank-handled-properties&lt;/code&gt; の後に有効になります。</target>
        </trans-unit>
        <trans-unit id="8d9925e5d0a28171f82d357e771493164bc09d3e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum depth of nesting of parentheses and brackets when printed. Any list or vector at a depth exceeding this limit is abbreviated with an ellipsis. A value of &lt;code&gt;nil&lt;/code&gt; (which is the default) means no limit.</source>
          <target state="translated">この変数の値は、印刷時の括弧と括弧の入れ子の最大深さです。この制限を超える深さのリストまたはベクトルは、省略記号で省略されます。値が &lt;code&gt;nil&lt;/code&gt; （デフォルト）制限を意味しません。</target>
        </trans-unit>
        <trans-unit id="eb378354f5b1934a365311626daef8c8f15e3726" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum length to which the kill ring can grow, before elements are thrown away at the end. The default value for &lt;code&gt;kill-ring-max&lt;/code&gt; is 60.</source>
          <target state="translated">この変数の値は、要素が最後に破棄される前に、キルリングが成長できる最大の長さです。 &lt;code&gt;kill-ring-max&lt;/code&gt; のデフォルト値は60です。</target>
        </trans-unit>
        <trans-unit id="d9a8a3bd5402f6a796285f30ee6bc93592d72acc" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum number of elements to print in any list, vector or bool-vector. If an object being printed has more than this many elements, it is abbreviated with an ellipsis.</source>
          <target state="translated">この変数の値は、リスト、ベクトル、またはbool-vectorで印刷する要素の最大数です。印刷されるオブジェクトがこの数以上の要素を持つ場合は、省略記号で省略されます。</target>
        </trans-unit>
        <trans-unit id="7b37d57abfb4a2f074e6037b361dac854df3ffa8" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum size of &lt;code&gt;mark-ring&lt;/code&gt;. If more marks than this are pushed onto the &lt;code&gt;mark-ring&lt;/code&gt;, &lt;code&gt;push-mark&lt;/code&gt; discards an old mark when it adds a new one.</source>
          <target state="translated">この変数の値は、 &lt;code&gt;mark-ring&lt;/code&gt; 最大サイズです。これより多くのマークが &lt;code&gt;mark-ring&lt;/code&gt; に &lt;code&gt;push-mark&lt;/code&gt; された場合、プッシュマークは新しいマークを追加するときに古いマークを破棄します。</target>
        </trans-unit>
        <trans-unit id="48773690fdc08336034aef99b22ec4fc2a9b5c64" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of bytes of pure storage allocated so far. Typically, in a dumped Emacs, this number is very close to the total amount of pure storage available&amp;mdash;if it were not, we would preallocate less.</source>
          <target state="translated">この変数の値は、これまでに割り当てられたピュアストレージのバイト数です。通常、ダンプされたEmacsでは、この数は利用可能な純粋なストレージの合計量に非常に近くなります。そうでない場合は、事前に割り当てる量が少なくなります。</target>
        </trans-unit>
        <trans-unit id="2c86f658454ce161d8f58c6e376a24f5f8cf79cd" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of bytes of storage that must be allocated for Lisp objects after one garbage collection in order to trigger another garbage collection. You can use the result returned by &lt;code&gt;garbage-collect&lt;/code&gt; to get an information about size of the particular object type; space allocated to the contents of buffers does not count.</source>
          <target state="translated">この変数の値は、別のガベージコレクションをトリガーするために、あるガベージコレクションの後にLispオブジェクトに割り当てる必要のあるストレージのバイト数です。 &lt;code&gt;garbage-collect&lt;/code&gt; によって返された結果を使用して、特定のオブジェクトタイプのサイズに関する情報を取得できます。バッファの内容に割り当てられたスペースはカウントされません。</target>
        </trans-unit>
        <trans-unit id="150ad9877598c36bf3cee9f020560f46415fcc2e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of lines of continuity to retain when scrolling by full screens. For example, &lt;code&gt;scroll-up&lt;/code&gt; with an argument of &lt;code&gt;nil&lt;/code&gt; scrolls so that this many lines at the bottom of the window appear instead at the top. The default value is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">この変数の値は、全画面でスクロールするときに保持する連続線の数です。例えば、 &lt;code&gt;scroll-up&lt;/code&gt; の引数で &lt;code&gt;nil&lt;/code&gt; のスクロールは、ウィンドウの下部に、この行数は、上部に代わりに表示されるように。デフォルト値は &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4d8917920114f6f4a89a92a84fe6cd7179f01520" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of newest versions to keep when a new numbered backup is made. The newly made backup is included in the count. The default value is 2.</source>
          <target state="translated">この変数の値は、新しい番号のバックアップが作成されたときに保持する最新バージョンの数です。新しく作成されたバックアップはカウントに含まれます。デフォルト値は2です。</target>
        </trans-unit>
        <trans-unit id="3fda003729cd66ceee7578e564a338758839795b" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of oldest versions to keep when a new numbered backup is made. The default value is 2.</source>
          <target state="translated">この変数の値は、新しい番号のバックアップが作成されたときに保持する最古のバージョンの数です。デフォルト値は2です。</target>
        </trans-unit>
        <trans-unit id="0178a3a721a41f19d88414a6b7b93fafcc92109e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of seconds of idle time that should cause auto-saving. Each time the user pauses for this long, Emacs does auto-saving for all buffers in which that is enabled. (If the current buffer is large, the specified timeout is multiplied by a factor that increases as the size increases; for a million-byte buffer, the factor is almost 4.)</source>
          <target state="translated">この変数の値は、オートセーブが発生するアイドル時間の秒数です。ユーザがこの時間停止するたびに、Emacs はこの時間が有効になっているすべてのバッファに対して自動セーブを行います。(現在のバッファが大きい場合、指定されたタイムアウトにはサイズが大きくなるにつれて増加する係数が乗算されます。100万バイトのバッファの場合、この係数はほぼ4になります)</target>
        </trans-unit>
        <trans-unit id="fdf8e548c75801c18e4f5fe5fdd7423692172485" translate="yes" xml:space="preserve">
          <source>The value of this variable is the numerically least &amp;ldquo;small&amp;rdquo; integer that Emacs Lisp can handle. It is negative. Typical values are -2**29 on 32-bit and -2**61 on 64-bit platforms.</source>
          <target state="translated">この変数の値は、EmacsLispが処理できる数値的に最小の「小さい」整数です。マイナスです。一般的な値は、32ビットプラットフォームでは-2 ** 29、64ビットプラットフォームでは-2 ** 61です。</target>
        </trans-unit>
        <trans-unit id="b63628af4530d5ce2d1423179f1adbff69a076e4" translate="yes" xml:space="preserve">
          <source>The value of this variable is the raw prefix argument for the &lt;em&gt;next&lt;/em&gt; editing command. Commands such as &lt;code&gt;universal-argument&lt;/code&gt; that specify prefix arguments for the following command work by setting this variable.</source>
          <target state="translated">この変数の値は、&lt;em&gt;次の&lt;/em&gt;編集コマンドの生のプレフィックス引数です。次のコマンドのプレフィックス引数を指定する &lt;code&gt;universal-argument&lt;/code&gt; などのコマンドは、この変数を設定することで機能します。</target>
        </trans-unit>
        <trans-unit id="8bd5505e14516c641a0fb607026db3f9d627e426" translate="yes" xml:space="preserve">
          <source>The value of this variable is the standard display table, which is used when Emacs is displaying a buffer in a window with neither a window display table nor a buffer display table defined, or when Emacs is outputting text to the standard output or error streams. Although its default is typically &lt;code&gt;nil&lt;/code&gt;, in an interactive session if the terminal cannot display curved quotes, its default maps curved quotes to ASCII approximations. See &lt;a href=&quot;text-quoting-style#Text-Quoting-Style&quot;&gt;Text Quoting Style&lt;/a&gt;.</source>
          <target state="translated">この変数の値は標準表示テーブルであり、Emacsがウィンドウ表示テーブルもバッファー表示テーブルも定義されていないウィンドウにバッファーを表示している場合、またはEmacsが標準出力またはエラーストリームにテキストを出力している場合に使用されます。デフォルトは通常 &lt;code&gt;nil&lt;/code&gt; ですが、対話型セッションで端末が曲線引用符を表示できない場合、デフォルトは曲線引用符をASCII近似にマップします。&lt;a href=&quot;text-quoting-style#Text-Quoting-Style&quot;&gt;テキスト引用スタイルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="59e3ab4b6c002115ffa6a12ef7488eb1000fce9d" translate="yes" xml:space="preserve">
          <source>The value of this variable is the version of Emacs being run. It is a string such as &lt;code&gt;&quot;26.1&quot;&lt;/code&gt;. A value with three numeric components, such as &lt;code&gt;&quot;26.0.91&quot;&lt;/code&gt;, indicates an unreleased test version. (Prior to Emacs 26.1, the string includes an extra final component with the integer that is now stored in &lt;code&gt;emacs-build-number&lt;/code&gt;; e.g., &lt;code&gt;&quot;25.1.1&quot;&lt;/code&gt;.)</source>
          <target state="translated">この変数の値は、実行されているEmacsのバージョンです。 &lt;code&gt;&quot;26.1&quot;&lt;/code&gt; などの文字列です。 &lt;code&gt;&quot;26.0.91&quot;&lt;/code&gt; などの3つの数値コンポーネントを含む値は、リリースされていないテストバージョンを示します。（Emacs 26.1より前は、文字列には、現在 &lt;code&gt;emacs-build-number&lt;/code&gt; に格納されている整数の追加の最終コンポーネントが含まれています。例： &lt;code&gt;&quot;25.1.1&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="13d6c3bf692d7cebd430e9a540f492e27af06ad8" translate="yes" xml:space="preserve">
          <source>The value of this variable lists the ImageMagick image types which should never be rendered using ImageMagick, regardless of the value of &lt;code&gt;imagemagick-enabled-types&lt;/code&gt;. A value of &lt;code&gt;t&lt;/code&gt; disables ImageMagick entirely.</source>
          <target state="translated">この変数の値は、 &lt;code&gt;imagemagick-enabled-types&lt;/code&gt; の値に関係なく、ImageMagickを使用してレンダリングしてはならないImageMagick画像タイプをリストします。 &lt;code&gt;t&lt;/code&gt; の値は、ImageMagickを完全に無効にします。</target>
        </trans-unit>
        <trans-unit id="303b235b615311f7ea255c195980f3dd06aa14e0" translate="yes" xml:space="preserve">
          <source>The value of this variable must be a function, which is called by &lt;code&gt;completing-read&lt;/code&gt; to actually do its work. It should accept the same arguments as &lt;code&gt;completing-read&lt;/code&gt;. This can be bound to a different function to completely override the normal behavior of &lt;code&gt;completing-read&lt;/code&gt;.</source>
          <target state="translated">この変数の値は関数である必要があります。この関数は、実際に作業を行うために、 &lt;code&gt;completing-read&lt;/code&gt; によって呼び出されます。 &lt;code&gt;completing-read&lt;/code&gt; と同じ引数を受け入れる必要があります-読み取り。これを別の関数にバインドして、complete &lt;code&gt;completing-read&lt;/code&gt; 通常の動作を完全にオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="1226f2429f46bf033e925f781cf8b85d8cb67680" translate="yes" xml:space="preserve">
          <source>The value of this variable names an Emacs Lisp file where the autoload calls should go. The default value is</source>
          <target state="translated">この変数の値は、オートロードの呼び出しが行われるEmacs Lispファイルの名前を指定します。デフォルト値は</target>
        </trans-unit>
        <trans-unit id="40d83e7def34305b8fc50d910e7c289b690bac09" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a display action, which is treated with the highest priority by &lt;code&gt;display-buffer&lt;/code&gt;. The default value is an empty display action, i.e., &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt;.</source>
          <target state="translated">この変数の値は、 &lt;code&gt;display-buffer&lt;/code&gt; によって最高の優先度で処理される表示アクションである必要があります。デフォルト値は、空の表示アクション、つまり &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="de683728d88c65383b1fb0a4d4c0e143b0d98fe0" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function (of no arguments) to be called whenever a character with close parenthesis syntax is inserted. The value of &lt;code&gt;blink-paren-function&lt;/code&gt; may be &lt;code&gt;nil&lt;/code&gt;, in which case nothing is done.</source>
          <target state="translated">この変数の値は、括弧が閉じた構文の文字が挿入されるたびに呼び出される（引数のない）関数である必要があります。 &lt;code&gt;blink-paren-function&lt;/code&gt; の値は &lt;code&gt;nil&lt;/code&gt; の場合があり、その場合は何も実行されません。</target>
        </trans-unit>
        <trans-unit id="b2dc1fa5f1a2fdb6c4c6717f7f894d9f186ffcae" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function of two arguments: a process and the list of windows displaying the process&amp;rsquo;s buffer. When the function is called, the process&amp;rsquo;s buffer is the current buffer. The function should return a cons cell &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; that describes the dimensions of the logical process window to be passed via a call to &lt;code&gt;set-process-window-size&lt;/code&gt;. The function can also return &lt;code&gt;nil&lt;/code&gt;, in which case Emacs will not call &lt;code&gt;set-process-window-size&lt;/code&gt; for this process.</source>
          <target state="translated">この変数の値は、プロセスとプロセスのバッファを表示するウィンドウのリストの2つの引数の関数である必要があります。関数が呼び出されると、プロセスのバッファーが現在のバッファーになります。関数はコンスセルを返すべきである &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; へのコールを介して渡される論理プロセス・ウィンドウの大きさを説明 &lt;code&gt;set-process-window-size&lt;/code&gt; 。この関数は &lt;code&gt;nil&lt;/code&gt; を返すこともできます。その場合、Emacsはこのプロセスに対して &lt;code&gt;set-process-window-size&lt;/code&gt; を呼び出しません。</target>
        </trans-unit>
        <trans-unit id="18ecc20cfb79cb28cfc3c0f86e79cb037503ab21" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function. When the user invokes a disabled command interactively, this function is called instead of the disabled command. It can use &lt;code&gt;this-command-keys&lt;/code&gt; to determine what the user typed to run the command, and thus find the command itself.</source>
          <target state="translated">この変数の値は関数である必要があります。ユーザーが無効化されたコマンドを対話的に呼び出すと、無効化されたコマンドの代わりにこの関数が呼び出されます。それは使用することができ &lt;code&gt;this-command-keys&lt;/code&gt; ユーザーがコマンドを実行するために入力した内容を決定するため、コマンド自身を見つけます。</target>
        </trans-unit>
        <trans-unit id="440fd6f3fe4086cfcbed381053251b8ba6bd3e2e" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a string whose syntax is a Lisp comment.</source>
          <target state="translated">この変数の値は、構文がLispコメントである文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a518e7693499305932b085da27f9bb3f7b0a936b" translate="yes" xml:space="preserve">
          <source>The value of this variable should be either &lt;code&gt;nil&lt;/code&gt; or a fraction &lt;var&gt;f&lt;/var&gt; between 0 and 1. If it is a fraction, that specifies where on the screen to put point when scrolling down. More precisely, when a window scrolls down because point is above the window start, the new start position is chosen to put point &lt;var&gt;f&lt;/var&gt; part of the window height from the top. The larger &lt;var&gt;f&lt;/var&gt;, the more aggressive the scrolling.</source>
          <target state="translated">この変数の値は、 &lt;code&gt;nil&lt;/code&gt; または0から1までの分数 &lt;var&gt;f&lt;/var&gt; のいずれかである必要があります。分数の場合は、下にスクロールするときに画面上のどこにポイントを置くかを指定します。より正確には、ポイントがウィンドウの開始点より上にあるためにウィンドウが下にスクロールすると、新しい開始位置が選択され、ポイント &lt;var&gt;f&lt;/var&gt; がウィンドウの高さの一部に上から配置されます。 &lt;var&gt;f&lt;/var&gt; が大きいほど、スクロールはより積極的になります。</target>
        </trans-unit>
        <trans-unit id="da9ab538210ad97f321250c6838047d4466efc1a" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies a function to call to check whether a buffer needs reverting. The default value only handles buffers that are visiting files, by checking their modification time. Buffers that are not visiting files require a custom function of one optional argument &lt;var&gt;noconfirm&lt;/var&gt;. The function should return non-&lt;code&gt;nil&lt;/code&gt; if the buffer should be reverted. The buffer is current when this function is called.</source>
          <target state="translated">この変数の値は、バッファーを元に戻す必要があるかどうかを確認するために呼び出す関数を指定します。デフォルト値は、変更時間をチェックすることにより、ファイルにアクセスしているバッファーのみを処理します。ファイルにアクセスしていないバッファには、1つのオプションの引数 &lt;var&gt;noconfirm&lt;/var&gt; のカスタム関数が必要です。バッファを元に戻す必要がある場合、関数は非 &lt;code&gt;nil&lt;/code&gt; を返す必要があります。この関数が呼び出されたとき、バッファーは最新です。</target>
        </trans-unit>
        <trans-unit id="12dca8a93c0036a1980e2e69ff462cb1ac961e17" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies how often to do auto-saving, in terms of number of input events. Each time this many additional input events are read, Emacs does auto-saving for all buffers in which that is enabled. Setting this to zero disables autosaving based on the number of characters typed.</source>
          <target state="translated">この変数の値は、オートセーブを行う頻度を入力イベント数で指定します。これだけの追加入力イベントが読み込まれるたびに、Emacs は、それが有効になっているすべてのバッファに対して自動保存を行います。これをゼロに設定すると、入力された文字数に基づく自動保存を無効にします。</target>
        </trans-unit>
        <trans-unit id="2ee4257ee2662122b633a4b0cbe9a66ce225a38e" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the amount of consing before a garbage collection occurs, as a fraction of the current heap size. This criterion and &lt;code&gt;gc-cons-threshold&lt;/code&gt; apply in parallel, and garbage collection occurs only when both criteria are satisfied.</source>
          <target state="translated">この変数の値は、現在のヒープサイズの一部として、ガベージコレクションが発生する前のconsingの量を指定します。この基準と &lt;code&gt;gc-cons-threshold&lt;/code&gt; は並行して適用され、ガベージコレクションは両方の基準が満たされた場合にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="e15c226f38ff49c3333b1e006ff2cc624b6b04dc" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the current sort key for the Tabulated List buffer. If it is &lt;code&gt;nil&lt;/code&gt;, no sorting is done. Otherwise, it should have the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;flip&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;name&lt;/var&gt; is a string matching one of the column names in &lt;code&gt;tabulated-list-format&lt;/code&gt;, and &lt;var&gt;flip&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means to invert the sort order.</source>
          <target state="translated">この変数の値は、表形式リスト・バッファーの現在のソート・キーを指定します。 &lt;code&gt;nil&lt;/code&gt; の場合、ソートは行われません。それ以外の場合は、 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;flip&lt;/var&gt;)&lt;/code&gt; 形式にする必要があります。ここで、 &lt;var&gt;name&lt;/var&gt; は &lt;code&gt;tabulated-list-format&lt;/code&gt; の列名の1つに一致する文字列であり、 &lt;var&gt;flip&lt;/var&gt; は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、ソート順を逆にすることを意味します。</target>
        </trans-unit>
        <trans-unit id="c4af1068f1e05dee5d6fefee8b641be1f2c78d71" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the function to use to insert the updated contents when reverting this buffer. The function receives two arguments: first the file name to use; second, &lt;code&gt;t&lt;/code&gt; if the user has asked to read the auto-save file.</source>
          <target state="translated">この変数の値は、このバッファーを元に戻すときに更新された内容を挿入するために使用する関数を指定します。この関数は2つの引数を受け取ります。最初に使用するファイル名。二、 &lt;code&gt;t&lt;/code&gt; ユーザーは自動保存ファイルを読むために求めている場合。</target>
        </trans-unit>
        <trans-unit id="d7f7bfe65157559bbddd1955ea91ebf264d68077" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the maximum length for all history lists that don&amp;rsquo;t specify their own maximum lengths. If the value is &lt;code&gt;t&lt;/code&gt;, that means there is no maximum (don&amp;rsquo;t delete old elements). If a history list variable&amp;rsquo;s symbol has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;history-length&lt;/code&gt; property, it overrides this variable for that particular history list.</source>
          <target state="translated">この変数の値は、独自の最大長を指定しないすべての履歴リストの最大長を指定します。値が &lt;code&gt;t&lt;/code&gt; の場合、最大値がないことを意味します（古い要素を削除しないでください）。履歴リスト変数のシンボルに &lt;code&gt;nil&lt;/code&gt; 以外の &lt;code&gt;history-length&lt;/code&gt; プロパティがある場合、その特定の履歴リストのこの変数をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="57d3c0b7a901e93cfaa40fe9b9de672f0e622cf4" translate="yes" xml:space="preserve">
          <source>The value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, is the current glyph table. It takes effect only on character terminals; on graphical displays, all glyphs are displayed literally. The glyph table should be a vector whose &lt;var&gt;g&lt;/var&gt;th element specifies how to display glyph code &lt;var&gt;g&lt;/var&gt;, where &lt;var&gt;g&lt;/var&gt; is the glyph code for a glyph whose face is unspecified. Each element should be one of the following:</source>
          <target state="translated">この変数の値は、 &lt;code&gt;nil&lt;/code&gt; でない場合、現在のグリフテーブルです。キャラクター端末でのみ有効です。グラフィックディスプレイでは、すべてのグリフが文字通り表示されます。グリフテーブルは、 &lt;var&gt;g&lt;/var&gt; 番目の要素がグリフコード &lt;var&gt;g&lt;/var&gt; の表示方法を指定するベクトルである必要があります。ここで、 &lt;var&gt;g&lt;/var&gt; は、面が指定されていないグリフのグリフコードです。各要素は次のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="ce482bcd0ec534adb705f36979bc396efd3afe84" translate="yes" xml:space="preserve">
          <source>The value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, should be a function. This function is called, with no arguments, after &lt;code&gt;write-region&lt;/code&gt; has completed.</source>
          <target state="translated">この変数の値は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、関数である必要があります。この関数は、 &lt;code&gt;write-region&lt;/code&gt; が完了した後、引数なしで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4bc5385973eb55e5a5f4212d89cd8023b5d45cc8" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;call-process&lt;/code&gt; (unless you told it not to wait) indicates the reason for process termination. A number gives the exit status of the subprocess; 0 means success, and any other value means failure. If the process terminated with a signal, &lt;code&gt;call-process&lt;/code&gt; returns a string describing the signal. If you told &lt;code&gt;call-process&lt;/code&gt; not to wait, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;call-process&lt;/code&gt; によって返される値（待機しないように指示した場合を除く）は、プロセスが終了する理由を示します。番号は、サブプロセスの終了ステータスを示します。0は成功を意味し、その他の値は失敗を意味します。プロセスがシグナルで終了した場合、 &lt;code&gt;call-process&lt;/code&gt; はシグナルを説明する文字列を返します。 &lt;code&gt;call-process&lt;/code&gt; に待機しないように指示した場合、 &lt;code&gt;nil&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="f96085924dfd5d71ffa529190dd3a22501712287" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;garbage-collect&lt;/code&gt; describes the amount of memory used by Lisp data, broken down by data type. By contrast, the function &lt;code&gt;memory-limit&lt;/code&gt; provides information on the total amount of memory Emacs is currently using.</source>
          <target state="translated">&lt;code&gt;garbage-collect&lt;/code&gt; によって返される値は、Lispデータによって使用されるメモリの量をデータ型ごとに分類して記述します。対照的に、関数 &lt;code&gt;memory-limit&lt;/code&gt; は、Emacsが現在使用しているメモリの総量に関する情報を提供します。</target>
        </trans-unit>
        <trans-unit id="31e7a32e779b109733b4aa450e495a30fb5d2ec6" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;parse-partial-sexp&lt;/code&gt; (a Lisp primitive for indentation and nesting computation) when it parses up to the beginning of this line.</source>
          <target state="translated">この行の先頭まで解析するときに、 &lt;code&gt;parse-partial-sexp&lt;/code&gt; （インデントおよびネスト計算用のLispプリミティブ）によって返される値。</target>
        </trans-unit>
        <trans-unit id="22d588379a0688ed195ba832770bfcb90fc7a1a1" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;save-excursion&lt;/code&gt; is the result of the last form in &lt;var&gt;body&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if no body forms were given.</source>
          <target state="translated">返される値 &lt;code&gt;save-excursion&lt;/code&gt; の最後のフォームの結果である &lt;var&gt;body&lt;/var&gt; 、または &lt;code&gt;nil&lt;/code&gt; を何体の形が与えられなかった場合。</target>
        </trans-unit>
        <trans-unit id="e0452bed199b14aafda21c04a93f979b209faa96" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;save-restriction&lt;/code&gt; is that returned by the last form in &lt;var&gt;body&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if no body forms were given.</source>
          <target state="translated">&lt;code&gt;save-restriction&lt;/code&gt; によって返される値は、 &lt;var&gt;body&lt;/var&gt; の最後のフォームによって返される値、またはbodyフォームが指定されていない場合は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c74d3864bf57e201710c0f494d7941abdf62bf83" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;window-state-get&lt;/code&gt; can be used in the same session to make a clone of a window in another window. It can be also written to disk and read back in another session. In either case, use the following function to restore the state of the window.</source>
          <target state="translated">&lt;code&gt;window-state-get&lt;/code&gt; によって返される値を同じセッションで使用して、別のウィンドウにウィンドウのクローンを作成できます。ディスクに書き込んで、別のセッションで読み戻すこともできます。いずれの場合も、次の関数を使用してウィンドウの状態を復元します。</target>
        </trans-unit>
        <trans-unit id="7596c5c7cfff59135fc00ba0034aff9d324568ff" translate="yes" xml:space="preserve">
          <source>The value returned by the function is a vector of the form &lt;code&gt;[&lt;var&gt;name&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;pixel-size&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt;
&lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt;
&lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt;. Here&amp;rsquo;s the description of each components of this vector:</source>
          <target state="translated">関数によって返される値は、 &lt;code&gt;[&lt;var&gt;name&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;pixel-size&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt; の形式のベクトルです。このベクトルの各コンポーネントの説明は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7f1af6cd4e0db0a9010ab9bcf0a730b7bc413d9b" translate="yes" xml:space="preserve">
          <source>The value returned by the function is a vector of the form &lt;code&gt;[&lt;var&gt;opened-name&lt;/var&gt; &lt;var&gt;full-name&lt;/var&gt; &lt;var&gt;size&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;
&lt;var&gt;baseline-offset&lt;/var&gt; &lt;var&gt;relative-compose&lt;/var&gt; &lt;var&gt;default-ascent&lt;/var&gt;
&lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt;
&lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt;. Here&amp;rsquo;s the description of each components of this vector:</source>
          <target state="translated">関数によって返される値は、次の形式のベクトルである &lt;code&gt;[&lt;var&gt;opened-name&lt;/var&gt; &lt;var&gt;full-name&lt;/var&gt; &lt;var&gt;size&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;baseline-offset&lt;/var&gt; &lt;var&gt;relative-compose&lt;/var&gt; &lt;var&gt;default-ascent&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt; 。このベクトルの各コンポーネントの説明は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d45b07b4efd10701d924481455a5da20eaaa3618" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">返される値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d0a7f39be3f9da493d01e7c44973c0716de188f5" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;columns&lt;/var&gt;.</source>
          <target state="translated">返される値は &lt;var&gt;columns&lt;/var&gt; です。</target>
        </trans-unit>
        <trans-unit id="975f3a289665270f4ba1e59734e35f87c9928129" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;marker&lt;/var&gt;.</source>
          <target state="translated">返される値は &lt;var&gt;marker&lt;/var&gt; です。</target>
        </trans-unit>
        <trans-unit id="73a439c0a0e9878cfb0da4ec67a1717f7e4a93a8" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;variable&lt;/var&gt;.</source>
          <target state="translated">返される値は &lt;var&gt;variable&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="dec60e5c6fc38f40ce6cf94f56c02b10791c1e22" translate="yes" xml:space="preserve">
          <source>The value returned is always &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">返される値は常に &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="47d0638c890cedd458d1d1403d1e7e0313168cb6" translate="yes" xml:space="preserve">
          <source>The value returned is the screen line number point has moved to, relative to the top line of the window.</source>
          <target state="translated">返される値は、ウィンドウの最上行を基準にして、ポイントが移動した画面の行番号です。</target>
        </trans-unit>
        <trans-unit id="b2ccc57b2f309a480d2e7f6a52e01939c829850f" translate="yes" xml:space="preserve">
          <source>The value should be a cons cell of the form &lt;code&gt;(&lt;var&gt;input-coding&lt;/var&gt;
. &lt;var&gt;output-coding&lt;/var&gt;)&lt;/code&gt;. Here &lt;var&gt;input-coding&lt;/var&gt; applies to input from the subprocess, and &lt;var&gt;output-coding&lt;/var&gt; applies to output to it.</source>
          <target state="translated">値は、フォームのコンス・セルであるべきである &lt;code&gt;(&lt;var&gt;input-coding&lt;/var&gt; . &lt;var&gt;output-coding&lt;/var&gt;)&lt;/code&gt; 。ここで、 &lt;var&gt;input-coding&lt;/var&gt; はサブプロセスからの入力に適用され、 &lt;var&gt;output-coding&lt;/var&gt; はサブプロセスへの出力に適用されます。</target>
        </trans-unit>
        <trans-unit id="afa4a6e9d7cbd4770933f00e367e5337ede28bad" translate="yes" xml:space="preserve">
          <source>The value should be a function for &lt;em&gt;annotating&lt;/em&gt; completions. The function should take one argument, &lt;var&gt;string&lt;/var&gt;, which is a possible completion. It should return a string, which is displayed after the completion &lt;var&gt;string&lt;/var&gt; in the</source>
          <target state="translated">値は、完了に&lt;em&gt;注釈&lt;/em&gt;を&lt;em&gt;付ける&lt;/em&gt;ための関数である必要があります。関数は1つの引数、 &lt;var&gt;string&lt;/var&gt; を取る必要があります。これは可能な補完です。これは、完了後に表示される文字列、返す必要があります &lt;var&gt;string&lt;/var&gt; 内を</target>
        </trans-unit>
        <trans-unit id="c201901c0018b0c92d92e65e50c18f3c1c34c052" translate="yes" xml:space="preserve">
          <source>The value should be a function for sorting completions, when &lt;code&gt;completion-cycle-threshold&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the user is cycling through completion alternatives. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="translated">値は、 &lt;code&gt;completion-cycle-threshold&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外であり、ユーザーが完了の選択肢を循環している場合に、完了をソートするための関数である必要があります。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;完了オプション&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="22ba0d62cbcc1ae0208dc24b05830349e9976f9d" translate="yes" xml:space="preserve">
          <source>The value should be a function for sorting completions. The function should take one argument, a list of completion strings, and return a sorted list of completion strings. It is allowed to alter the input list destructively.</source>
          <target state="translated">値は、補完文字列をソートするための関数でなければなりません。この関数は1つの引数である補完文字列のリストを取り、ソートされた補完文字列のリストを返します。入力リストを破壊的に変更してもよい。</target>
        </trans-unit>
        <trans-unit id="e101dd6c8e98ecc490ae874e5dcfb9d80b45d061" translate="yes" xml:space="preserve">
          <source>The value should be a function that takes no arguments and returns a frame, or &lt;code&gt;nil&lt;/code&gt; if no frame could be created. The default value is a function that creates a frame using the parameters specified by &lt;code&gt;pop-up-frame-alist&lt;/code&gt; (see below).</source>
          <target state="translated">値は、引数を取らずにフレームを返す関数である必要があります。フレームを作成できなかった場合は &lt;code&gt;nil&lt;/code&gt; である必要があります。デフォルト値は、 &lt;code&gt;pop-up-frame-alist&lt;/code&gt; で指定されたパラメーターを使用してフレームを作成する関数です（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="b2200b61001be6b8b42c0f192f2e1441d6be0fba" translate="yes" xml:space="preserve">
          <source>The value should be a function to add annotations in the completions buffer. This function must accept one argument, a completion, and should either return &lt;code&gt;nil&lt;/code&gt; or a string to be displayed next to the completion.</source>
          <target state="translated">値は、補完バッファーに注釈を追加する関数である必要があります。この関数は、1つの引数、補完を受け入れる必要があり、補完の横に表示される &lt;code&gt;nil&lt;/code&gt; または文字列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="faa61fa6487d98c4ad45fdb4f4dd02ad923d60a5" translate="yes" xml:space="preserve">
          <source>The value should be a function to run after performing completion. The function should accept two arguments, &lt;var&gt;string&lt;/var&gt; and &lt;var&gt;status&lt;/var&gt;, where &lt;var&gt;string&lt;/var&gt; is the text to which the field was completed, and &lt;var&gt;status&lt;/var&gt; indicates what kind of operation happened: &lt;code&gt;finished&lt;/code&gt; if text is now complete, &lt;code&gt;sole&lt;/code&gt; if the text cannot be further completed but completion is not finished, or &lt;code&gt;exact&lt;/code&gt; if the text is a valid completion but may be further completed.</source>
          <target state="translated">値は、完了を実行した後に実行する関数である必要があります。関数は、 &lt;var&gt;string&lt;/var&gt; と &lt;var&gt;status&lt;/var&gt; の2つの引数を受け入れる必要があります。ここで、 &lt;var&gt;string&lt;/var&gt; はフィールドが完了したテキストであり、 &lt;var&gt;status&lt;/var&gt; は、発生した操作の種類を示します。テキストが &lt;code&gt;finished&lt;/code&gt; 場合は終了し、テキストをさらに完了できないが完了した場合は &lt;code&gt;sole&lt;/code&gt; です。終了していないか、テキストが有効な完了であるがさらに完了している可能性がある場合は &lt;code&gt;exact&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9b7ebbfe345be5a867dbde46e6a2761a575df403" translate="yes" xml:space="preserve">
          <source>The value should be a list of completion styles (symbols).</source>
          <target state="translated">値は、補完スタイル(シンボル)のリストでなければなりません。</target>
        </trans-unit>
        <trans-unit id="925758dfea64d9dd86f0a3bf26a2bd82f0f1f147" translate="yes" xml:space="preserve">
          <source>The value should be a predicate that completion candidates need to satisfy.</source>
          <target state="translated">値は、補完候補が満たす必要がある述語でなければならない。</target>
        </trans-unit>
        <trans-unit id="5cb79d51602bd8eb1cf7a88ebf99635042f65726" translate="yes" xml:space="preserve">
          <source>The value should be a symbol describing what kind of text the completion function is trying to complete. If the symbol matches one of the keys in &lt;code&gt;completion-category-overrides&lt;/code&gt;, the usual completion behavior is overridden. See &lt;a href=&quot;completion-variables#Completion-Variables&quot;&gt;Completion Variables&lt;/a&gt;.</source>
          <target state="translated">値は、完了関数が完了しようとしているテキストの種類を説明する記号である必要があります。シンボルが &lt;code&gt;completion-category-overrides&lt;/code&gt; のキーの1つと一致する場合、通常の完了動作がオーバーライドされます。&lt;a href=&quot;completion-variables#Completion-Variables&quot;&gt;完了変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="12bf4f6f2a54e741e94637b75c4db474bd81d15b" translate="yes" xml:space="preserve">
          <source>The value should be a value for &lt;code&gt;completion-cycle-threshold&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="translated">値は、 &lt;code&gt;completion-cycle-threshold&lt;/code&gt; の値である必要があります（の「&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;完了オプション」&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="0ff26f2d74e7f80625e6dcbebeacb661b2c0a9f8" translate="yes" xml:space="preserve">
          <source>The value should be an alist of elements &lt;code&gt;(&lt;var&gt;prop&lt;/var&gt;
. &lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt;. Each alist element is handled in order. The inserted text is scanned for stretches of text having text properties &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;prop&lt;/var&gt;; for each such stretch, &lt;var&gt;fun&lt;/var&gt; is called with three arguments: the value of the property, and the start and end positions of the text.</source>
          <target state="translated">値は、要素の連想リストでなければなりません &lt;code&gt;(&lt;var&gt;prop&lt;/var&gt; . &lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt; 。各alist要素は順番に処理されます。挿入されたテキストは、 &lt;var&gt;prop&lt;/var&gt; に &lt;code&gt;eq&lt;/code&gt; のテキストプロパティを持つテキストのストレッチをスキャンされます。そのようなストレッチごとに、 &lt;var&gt;fun&lt;/var&gt; は、プロパティの値、およびテキストの開始位置と終了位置の3つの引数で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0feffcbb3119f336531a6fd74cbbff440dba66ac" translate="yes" xml:space="preserve">
          <source>The value specifies a direction which, together with a &lt;code&gt;window&lt;/code&gt; entry, allows &lt;code&gt;display-buffer-in-direction&lt;/code&gt; to determine the location of the window to display the buffer.</source>
          <target state="translated">この値は、 &lt;code&gt;window&lt;/code&gt; エントリとともに、 &lt;code&gt;display-buffer-in-direction&lt;/code&gt; がバッファを表示するウィンドウの場所を決定できるようにする方向を指定します。</target>
        </trans-unit>
        <trans-unit id="611611e171be434468ec675dea405dd5312d8f63" translate="yes" xml:space="preserve">
          <source>The value specifies a function for determining safe file-local values for the named variable. See &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">この値は、名前付き変数の安全なファイルローカル値を決定するための関数を指定します。&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;ファイルローカル変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ea946c727c16f4c700d3a131807aa1fa7ac26e10" translate="yes" xml:space="preserve">
          <source>The value specifies a minimum height of the window used, in lines. If a window is not or cannot be made as high as specified by this entry, the window is not considered for use. The only client of this entry is presently &lt;code&gt;display-buffer-below-selected&lt;/code&gt;.</source>
          <target state="translated">この値は、使用されるウィンドウの最小の高さを行で指定します。ウィンドウがこのエントリで指定された高さにしないか、高くできない場合、そのウィンドウは使用の対象とは見なされません。このエントリの唯一のクライアントは、現在 &lt;code&gt;display-buffer-below-selected&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e878f22a9e22e5e6ae516631fd4b2f22c80a65af" translate="yes" xml:space="preserve">
          <source>The value specifies a window that is in some way related to the window chosen by &lt;code&gt;display-buffer&lt;/code&gt;. This entry is currently used by &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; to indicate the window on whose side the new window shall be created. It is also used by &lt;code&gt;display-buffer-in-direction&lt;/code&gt; to specify the reference window on whose side the resulting window shall appear.</source>
          <target state="translated">この値は、 &lt;code&gt;display-buffer&lt;/code&gt; によって選択されたウィンドウに何らかの形で関連するウィンドウを指定します。このエントリは現在、 &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; によって使用され、新しいウィンドウが作成される側のウィンドウを示します。また、 &lt;code&gt;display-buffer-in-direction&lt;/code&gt; によって使用され、結果のウィンドウが表示される側の参照ウィンドウを指定します。</target>
        </trans-unit>
        <trans-unit id="a230a1b00acb88265aaebae444183845a0a12075" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of frame parameters to give a new frame, if one is created. &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; is its one and only addressee.</source>
          <target state="translated">この値は、新しいフレームが作成された場合にそれを与えるためのフレームパラメータのリストを指定します。 &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; は、その唯一の宛先です。</target>
        </trans-unit>
        <trans-unit id="712354d6ecb588545e689e9cf4e0f436a0db7e70" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of frame parameters to use when the buffer is displayed on a child frame. This entry is used only by &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt;.</source>
          <target state="translated">この値は、バッファが子フレームに表示されるときに使用するフレームパラメータのリストを指定します。このエントリは、 &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt; でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="cc8a52f49cd1e2b71d0412b55ac293683a602f45" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of window parameters to give the chosen window. All action functions that choose a window should process this entry.</source>
          <target state="translated">値は、選択されたウィンドウを与えるウィンドウパラメータのリストを指定します。ウィンドウを選択するすべてのアクション関数はこのエントリを処理しなければなりません。</target>
        </trans-unit>
        <trans-unit id="cebae73a089b0cf31db115ca79a05a8ad5a3d9f1" translate="yes" xml:space="preserve">
          <source>The value specifies options for a command.</source>
          <target state="translated">値はコマンドのオプションを指定します。</target>
        </trans-unit>
        <trans-unit id="70a0d168bab1f71658353f8a2d881540c5b9b497" translate="yes" xml:space="preserve">
          <source>The value specifies the parent frame to be used when the buffer is displayed on a child frame. This entry is used only by &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt;.</source>
          <target state="translated">この値は、バッファが子フレームに表示されるときに使用される親フレームを指定します。このエントリは、 &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt; でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="0c548691ebd219b442c5f2af316d1d293d80adbd" translate="yes" xml:space="preserve">
          <source>The value specifies the set of frames to search for a window that can be reused because it already displays the buffer. It can be set as follows:</source>
          <target state="translated">値は、すでにバッファを表示しているので再利用できるウィンドウを検索するフレームのセットを指定します。以下のように設定できます。</target>
        </trans-unit>
        <trans-unit id="af34abd1ebb5fd7575ea1f5e82855c70ca1ac344" translate="yes" xml:space="preserve">
          <source>The value specifies whether and how to adjust the height of the chosen window and can be one of the following:</source>
          <target state="translated">この値は、選択したウィンドウの高さを調整するかどうか、またどのように調整するかを指定するもので、以下のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="505bb1f9ff0dba8805de9df77265d82a7c2cdafa" translate="yes" xml:space="preserve">
          <source>The value stores the documentation string of the named face. This is set automatically by &lt;code&gt;defface&lt;/code&gt;. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</source>
          <target state="translated">値には、指定された面のドキュメント文字列が格納されます。これは &lt;code&gt;defface&lt;/code&gt; によって自動的に設定されます。&lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;面の定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a55d35705528885818f514326dd9b25fb751d4f9" translate="yes" xml:space="preserve">
          <source>The value string normally has text properties that correspond to the faces, keymaps, etc., that the mode line would have. Any character for which no &lt;code&gt;face&lt;/code&gt; property is specified by &lt;var&gt;format&lt;/var&gt; gets a default value determined by &lt;var&gt;face&lt;/var&gt;. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, that stands for either &lt;code&gt;mode-line&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is selected, otherwise &lt;code&gt;mode-line-inactive&lt;/code&gt;. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, that stands for the default face. If &lt;var&gt;face&lt;/var&gt; is an integer, the value returned by this function will have no text properties.</source>
          <target state="translated">値の文字列には通常、モードラインが持つ面やキーマップなどに対応するテキストプロパティがあります。 &lt;var&gt;format&lt;/var&gt; によって &lt;code&gt;face&lt;/code&gt; プロパティが指定されていない文字はすべて、 &lt;var&gt;face&lt;/var&gt; によって決定されるデフォルト値を取得します。場合は &lt;var&gt;face&lt;/var&gt; ある &lt;code&gt;t&lt;/code&gt; は、そのいずれかを表し &lt;code&gt;mode-line&lt;/code&gt; ならば &lt;var&gt;window&lt;/var&gt; 選択され、それ以外の &lt;code&gt;mode-line-inactive&lt;/code&gt; 。場合は &lt;var&gt;face&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; または省略し、それはデフォルトの顔の略です。 &lt;var&gt;face&lt;/var&gt; が整数の場合、この関数によって返される値にはテキストプロパティがありません。</target>
        </trans-unit>
        <trans-unit id="3591dd575c16a1fb94691cd3cca981235d32b6ff" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;background&lt;/var&gt;, should be a string specifying the image background color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the PBM that is 0. The default is the frame&amp;rsquo;s background color.</source>
          <target state="translated">値 &lt;var&gt;background&lt;/var&gt; は、画像の背景色を指定する文字列、またはデフォルトの色の場合は &lt;code&gt;nil&lt;/code&gt; である必要があります。この色は、0であるPBMの各ピクセルに使用されます。デフォルトはフレームの背景色です。</target>
        </trans-unit>
        <trans-unit id="458f07b42dc208884ff2ff5ab13f9b69732605ef" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;background&lt;/var&gt;, should be a string specifying the image background color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the XBM that is 0. The default is the frame&amp;rsquo;s background color.</source>
          <target state="translated">値 &lt;var&gt;background&lt;/var&gt; は、画像の背景色を指定する文字列、またはデフォルトの色の場合は &lt;code&gt;nil&lt;/code&gt; である必要があります。この色は、0であるXBMの各ピクセルに使用されます。デフォルトはフレームの背景色です。</target>
        </trans-unit>
        <trans-unit id="83fa724b0ab7a36133791af18f6967d44343acd2" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;data&lt;/var&gt;, specifies the contents of the image. There are three formats you can use for &lt;var&gt;data&lt;/var&gt;:</source>
          <target state="translated">値 &lt;var&gt;data&lt;/var&gt; は、画像の内容を指定します。 &lt;var&gt;data&lt;/var&gt; 使用できる形式は3つあります。</target>
        </trans-unit>
        <trans-unit id="7b521a7e9b651d09dfd41d51b4e01b49ec76cdfe" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;foreground&lt;/var&gt;, should be a string specifying the image foreground color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the PBM that is 1. The default is the frame&amp;rsquo;s foreground color.</source>
          <target state="translated">値 &lt;var&gt;foreground&lt;/var&gt; は、画像の前景色を指定する文字列、またはデフォルトの色の場合は &lt;code&gt;nil&lt;/code&gt; である必要があります。この色は、1であるPBMの各ピクセルに使用されます。デフォルトはフレームの前景色です。</target>
        </trans-unit>
        <trans-unit id="dc6e9bbff6399dd6222c56642a86367c8cc843d6" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;foreground&lt;/var&gt;, should be a string specifying the image foreground color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the XBM that is 1. The default is the frame&amp;rsquo;s foreground color.</source>
          <target state="translated">値 &lt;var&gt;foreground&lt;/var&gt; は、画像の前景色を指定する文字列、またはデフォルトの色の場合は &lt;code&gt;nil&lt;/code&gt; である必要があります。この色は、XBMの1である各ピクセルに使用されます。デフォルトはフレームの前景色です。</target>
        </trans-unit>
        <trans-unit id="eb345c174c35c0159b93a1f9149ad3d4e1130275" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;height&lt;/var&gt;, specifies the height of the image, in pixels.</source>
          <target state="translated">値は、 &lt;var&gt;height&lt;/var&gt; 、ピクセル単位で、画像の高さを指定します。</target>
        </trans-unit>
        <trans-unit id="b9ea6d3dec735a3a948c97af424b63f71478e6cb" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;symbols&lt;/var&gt;, should be an alist whose elements have the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;color&lt;/var&gt;)&lt;/code&gt;. In each element, &lt;var&gt;name&lt;/var&gt; is the name of a color as it appears in the image file, and &lt;var&gt;color&lt;/var&gt; specifies the actual color to use for displaying that name.</source>
          <target state="translated">値は、 &lt;var&gt;symbols&lt;/var&gt; 、その要素の形態を有する連想リストであるべきである &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;color&lt;/var&gt;)&lt;/code&gt; 。各要素には、 &lt;var&gt;name&lt;/var&gt; 、それは、画像ファイルに表示される色の名前で、 &lt;var&gt;color&lt;/var&gt; その名前を表示するために使用する実際の色を指定します。</target>
        </trans-unit>
        <trans-unit id="dcde525351a6f12a8b348e73f3817e78fee629b1" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;type&lt;/var&gt;, should be a symbol specifying the type of the image data, as found in &lt;code&gt;image-format-suffixes&lt;/code&gt;. This is used when the image does not have an associated file name, to provide a hint to ImageMagick to help it detect the image type.</source>
          <target state="translated">値 &lt;var&gt;type&lt;/var&gt; で見られるような、画像データの種類を特定するシンボルであるべき &lt;code&gt;image-format-suffixes&lt;/code&gt; 。これは、画像にファイル名が関連付けられていない場合に使用され、ImageMagickに画像タイプの検出に役立つヒントを提供します。</target>
        </trans-unit>
        <trans-unit id="531d38e8be68abb161b4857aa037531d56c07b0d" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;weak&lt;/var&gt;, must be one of &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;key-or-value&lt;/code&gt;, &lt;code&gt;key-and-value&lt;/code&gt;, or &lt;code&gt;t&lt;/code&gt; which is an alias for &lt;code&gt;key-and-value&lt;/code&gt;. If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key&lt;/code&gt; then the hash table does not prevent its keys from being collected as garbage (if they are not referenced anywhere else); if a particular key does get collected, the corresponding association is removed from the hash table.</source>
          <target state="translated">値 &lt;var&gt;weak&lt;/var&gt; は、 &lt;code&gt;nil&lt;/code&gt; 、 &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;value&lt;/code&gt; 、 &lt;code&gt;key-or-value&lt;/code&gt; 、 &lt;code&gt;key-and-value&lt;/code&gt; 、または &lt;code&gt;key-and-value&lt;/code&gt; のエイリアスである &lt;code&gt;t&lt;/code&gt; のいずれかである必要があります。場合は &lt;var&gt;weak&lt;/var&gt; ある &lt;code&gt;key&lt;/code&gt; （それらはどこにも参照されていない場合）、ハッシュテーブルは、ゴミとして収集されることから、その鍵を防ぐことはできません。特定のキーが収集されると、対応する関連付けがハッシュテーブルから削除されます。</target>
        </trans-unit>
        <trans-unit id="fa76d4528e5ae6cb4684c0da77a8308d0cb82b94" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;width&lt;/var&gt;, specifies the width of the image, in pixels.</source>
          <target state="translated">値は、 &lt;var&gt;width&lt;/var&gt; 、ピクセル単位で、画像の幅を指定します。</target>
        </trans-unit>
        <trans-unit id="be1644837474a9fe39ca523e6b28004356025b7a" translate="yes" xml:space="preserve">
          <source>The value, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the maximum minibuffer history length for the named history list variable. See &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、名前付き履歴リスト変数のミニバッファー履歴の最大長を指定します。&lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;ミニバッファ履歴を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f7dd81aa41d587c809be779d8678d7703a9d070c" translate="yes" xml:space="preserve">
          <source>The value, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the number of extra slots in the named char-table type. See &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、指定されたchar-tableタイプの追加スロットの数を指定します。&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tablesを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7d157992c080feaba61c3f9992a35160809e8293" translate="yes" xml:space="preserve">
          <source>The values in &lt;var&gt;delta&lt;/var&gt; can be negative to subtract values instead.</source>
          <target state="translated">&lt;var&gt;delta&lt;/var&gt; の値は、代わりに値を減算するために負にすることができます。</target>
        </trans-unit>
        <trans-unit id="25bd5003a5bfd3ff9957bc21c007d9f2e961478c" translate="yes" xml:space="preserve">
          <source>The values must be known and written in advance.</source>
          <target state="translated">値を事前に把握して書いておく必要があります。</target>
        </trans-unit>
        <trans-unit id="e5da79067043a3cf400b4585327d4bc12a8d8220" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;modiff&lt;/code&gt; and &lt;code&gt;overlay_modiff&lt;/code&gt;, respectively, after the last complete redisplay. If their current values match &lt;code&gt;modiff&lt;/code&gt; or &lt;code&gt;overlay_modiff&lt;/code&gt;, that means &lt;code&gt;beg_unchanged&lt;/code&gt; and &lt;code&gt;end_unchanged&lt;/code&gt; contain no useful information.</source>
          <target state="translated">最後に完全に再表示された後の、それぞれ &lt;code&gt;modiff&lt;/code&gt; と &lt;code&gt;overlay_modiff&lt;/code&gt; の値。現在の値が &lt;code&gt;modiff&lt;/code&gt; または &lt;code&gt;overlay_modiff&lt;/code&gt; と一致する場合、 &lt;code&gt;beg_unchanged&lt;/code&gt; および &lt;code&gt;end_unchanged&lt;/code&gt; には有用な情報が含まれていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="ed47fccd292efe605a4c56a267c480abd538960b" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted.</source>
          <target state="translated">ここで指定された値は、 &lt;var&gt;keep-margins&lt;/var&gt; 引数を &lt;code&gt;nil&lt;/code&gt; にするか省略して、 &lt;var&gt;window&lt;/var&gt; で &lt;code&gt;set-window-buffer&lt;/code&gt; （「&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;バッファーと&lt;/a&gt;ウィンドウ」を参照）を呼び出すことにより、後でオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="ffdbbe9270c4e6a0880d799e803e12a916413aa7" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted. However, if the optional fifth argument &lt;var&gt;persistent&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the other arguments are processed successfully, the values specified here unconditionally survive subsequent invocations of &lt;code&gt;set-window-buffer&lt;/code&gt;.</source>
          <target state="translated">ここで指定された値は、 &lt;var&gt;keep-margins&lt;/var&gt; 引数を &lt;code&gt;nil&lt;/code&gt; にするか省略して、 &lt;var&gt;window&lt;/var&gt; で &lt;code&gt;set-window-buffer&lt;/code&gt; （「&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;バッファーと&lt;/a&gt;ウィンドウ」を参照）を呼び出すことにより、後でオーバーライドできます。ただし、オプションの5番目の引数 &lt;var&gt;persistent&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外で、他の引数が正常に処理された場合、ここで指定された値は、後続の &lt;code&gt;set-window-buffer&lt;/code&gt; の呼び出しに無条件で存続します。</target>
        </trans-unit>
        <trans-unit id="9f20937a44fbec35b55cf8ad483755599c4f4983" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted. However, if the optional fifth argument &lt;var&gt;persistent&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the other arguments are processed successfully, the values specified here unconditionally survive subsequent invocations of &lt;code&gt;set-window-buffer&lt;/code&gt;. This can be used to permanently turn off fringes in the minibuffer window, consult the description of &lt;code&gt;set-window-scroll-bars&lt;/code&gt; for an example (see &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Scroll Bars&lt;/a&gt;).</source>
          <target state="translated">ここで指定された値は、 &lt;var&gt;keep-margins&lt;/var&gt; 引数を &lt;code&gt;nil&lt;/code&gt; にするか省略して、 &lt;var&gt;window&lt;/var&gt; で &lt;code&gt;set-window-buffer&lt;/code&gt; （「&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;バッファーと&lt;/a&gt;ウィンドウ」を参照）を呼び出すことにより、後でオーバーライドできます。ただし、オプションの5番目の引数 &lt;var&gt;persistent&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外で、他の引数が正常に処理された場合、ここで指定された値は、後続の &lt;code&gt;set-window-buffer&lt;/code&gt; の呼び出しに無条件で存続します。これは、ミニバッファウィンドウのフリンジを永続的にオフにするために使用できます。例については、 &lt;code&gt;set-window-scroll-bars&lt;/code&gt; の説明を参照してください（&lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;スクロールバーを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="9d0a64001addcf5c84bd11eeecbbe2a812972b09" translate="yes" xml:space="preserve">
          <source>The values you can use, to specify either of these pointer shapes, are defined in the file</source>
          <target state="translated">これらのポインタ形状のいずれかを指定するために使用できる値は、ファイル</target>
        </trans-unit>
        <trans-unit id="70c4d9624135a1d02ee3a53311a97032dd279c56" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;&lt;var&gt;command&lt;/var&gt;-alternatives&lt;/code&gt; should contain an alist with alternative implementations of &lt;var&gt;command&lt;/var&gt;. Until this variable is set, &lt;code&gt;define-alternatives&lt;/code&gt; has no effect.</source>
          <target state="translated">変数 &lt;code&gt;&lt;var&gt;command&lt;/var&gt;-alternatives&lt;/code&gt; alternativesには、 &lt;var&gt;command&lt;/var&gt; の代替実装を含むリストが含まれている必要があります。この変数が設定されるまで、 &lt;code&gt;define-alternatives&lt;/code&gt; は効果がありません。</target>
        </trans-unit>
        <trans-unit id="edfb1c8edeea6bfd958815e01d5a1cbf976013b7" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;backup-by-copying&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, says to use the second method, which is to copy the original file and overwrite it with the new buffer contents. The variable &lt;code&gt;file-precious-flag&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, also has this effect (as a sideline of its main significance). See &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt;.</source>
          <target state="translated">変数 &lt;code&gt;backup-by-copying&lt;/code&gt; は、 &lt;code&gt;nil&lt;/code&gt; でない場合、元のファイルをコピーして新しいバッファーの内容で上書きする2番目の方法を使用することを示します。変数 &lt;code&gt;file-precious-flag&lt;/code&gt; は、 &lt;code&gt;nil&lt;/code&gt; でない場合も、この効果があります（その主な意味の副次的なものとして）。&lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;バッファの保存を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="784cb7a1b10dca75362ea63cc44adc63b202f651" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;display-buffer-overriding-action&lt;/code&gt;.</source>
          <target state="translated">変数 &lt;code&gt;display-buffer-overriding-action&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da7252e1b84fd0839fae971325637e2c2419366d" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;face-remapping-alist&lt;/code&gt; is used for buffer-local or global changes in the appearance of a face. For instance, it is used to implement the &lt;code&gt;text-scale-adjust&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Scale.html#Text-Scale&quot;&gt;Text Scale&lt;/a&gt; in</source>
          <target state="translated">変数 &lt;code&gt;face-remapping-alist&lt;/code&gt; は、顔の外観のバッファローカルまたはグローバル変更に使用されます。たとえば、 &lt;code&gt;text-scale-adjust&lt;/code&gt; コマンドを実装するために使用されます（の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Scale.html#Text-Scale&quot;&gt;テキストスケール&lt;/a&gt;を参照）</target>
        </trans-unit>
        <trans-unit id="e34c858c384be3019173ab7142614489d00972d3" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;file-name-coding-system&lt;/code&gt; specifies the coding system to use for encoding file names. Emacs encodes file names using that coding system for all file operations. If &lt;code&gt;file-name-coding-system&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, Emacs uses a default coding system determined by the selected language environment. In the default language environment, any non-</source>
          <target state="translated">変数 &lt;code&gt;file-name-coding-system&lt;/code&gt; は、ファイル名のエンコードに使用するコーディングシステムを指定します。Emacsは、すべてのファイル操作でそのコーディングシステムを使用してファイル名をエンコードします。場合は &lt;code&gt;file-name-coding-system&lt;/code&gt; ある &lt;code&gt;nil&lt;/code&gt; 、Emacsは、選択されている言語環境で決まるデフォルトのコーディングシステムを使用しています。デフォルトの言語環境では、</target>
        </trans-unit>
        <trans-unit id="f0a2a7962865afd977c9962e346463309608747d" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;file-name-handler-alist&lt;/code&gt; holds a list of handlers, together with regular expressions that determine when to apply each handler. Each element has this form:</source>
          <target state="translated">変数 &lt;code&gt;file-name-handler-alist&lt;/code&gt; は、ハンドラーのリストと、各ハンドラーをいつ適用するかを決定する正規表現を保持します。各要素の形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="31a91e3271c754112418809b5d918df00d438cdc" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;inhibit-point-motion-hooks&lt;/code&gt; by default inhibits running the &lt;code&gt;point-left&lt;/code&gt; and &lt;code&gt;point-entered&lt;/code&gt; hooks, see &lt;a href=&quot;#Inhibit-point-motion-hooks&quot;&gt;Inhibit point motion hooks&lt;/a&gt;.</source>
          <target state="translated">変数 &lt;code&gt;inhibit-point-motion-hooks&lt;/code&gt; は、デフォルトで、 &lt;code&gt;point-left&lt;/code&gt; フックと &lt;code&gt;point-entered&lt;/code&gt; フックの実行を&lt;a href=&quot;#Inhibit-point-motion-hooks&quot;&gt;禁止し&lt;/a&gt;ます。ポイントモーションフックの禁止を参照してください。</target>
        </trans-unit>
        <trans-unit id="80d2dd14eab302d61ea77d5bcf3d662baf312644" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;kill-ring&lt;/code&gt; holds the kill ring contents, in the form of a list of strings. The most recent kill is always at the front of the list.</source>
          <target state="translated">変数 &lt;code&gt;kill-ring&lt;/code&gt; は、文字列のリストの形式で、キルリングの内容を保持します。最新のキルは常にリストの先頭にあります。</target>
        </trans-unit>
        <trans-unit id="1af116daf2ff92fc810afa12d7b3276cfcb4e1cd" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;max-mini-window-height&lt;/code&gt;, which specifies the maximum height for resizing minibuffer windows, also applies to the echo area (which is really a special use of the minibuffer window; see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;).</source>
          <target state="translated">変数 &lt;code&gt;max-mini-window-height&lt;/code&gt; ミニバッファウィンドウのサイズを変更するための最大の高さを指定し、また、（参照;本当にミニバッファ・ウィンドウの特殊な使用であるエコー領域に適用される&lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;ミニバッファのWindowsを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="97a8e64d6a49b6e2b383ab7b9d91e1b975482616" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;overriding-local-map&lt;/code&gt; is normally ignored when determining the menu bar contents. That is, the menu bar is computed from the keymaps that would be active if &lt;code&gt;overriding-local-map&lt;/code&gt; were &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;.</source>
          <target state="translated">メニューバーの内容を決定するとき、変数 &lt;code&gt;overriding-local-map&lt;/code&gt; は通常無視されます。つまり、メニューバーは、overriding &lt;code&gt;overriding-local-map&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; の場合にアクティブになるキーマップから計算されます。&lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;アクティブキーマップを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f7a4850b24d3c2ac6ae8142c3ffc8f37ad0d3a10" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;paragraph-separate&lt;/code&gt; controls how to distinguish paragraphs. See &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Standard Regexps&lt;/a&gt;.</source>
          <target state="translated">変数 &lt;code&gt;paragraph-separate&lt;/code&gt; は、段落を区別する方法を制御します。&lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;標準正規表現を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d4e5e030204bb60690092b5c001a6c2d2385a3dc" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;selection-coding-system&lt;/code&gt; specifies how to encode selections for the window system. See &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;.</source>
          <target state="translated">変数 &lt;code&gt;selection-coding-system&lt;/code&gt; は、ウィンドウシステムの選択をエンコードする方法を指定します。&lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;ウィンドウシステムの選択を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="005a4747db2da8eb60b4c4d70cc7430741bf77b2" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;use-dialog-box&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Dialog-Boxes.html#Dialog-Boxes&quot;&gt;Dialog Boxes&lt;/a&gt; in</source>
          <target state="translated">変数 &lt;code&gt;use-dialog-box&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; - nilです。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Dialog-Boxes.html#Dialog-Boxes&quot;&gt;ダイアログボックス&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="81d9e1a111c06c72dd5fe05bcdd79e7bb53745fd" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;vc-mode&lt;/code&gt;, buffer-local in each buffer, records whether the buffer&amp;rsquo;s visited file is maintained with version control, and, if so, which kind. Its value is a string that appears in the mode line, or &lt;code&gt;nil&lt;/code&gt; for no version control.</source>
          <target state="translated">各バッファーの変数 &lt;code&gt;vc-mode&lt;/code&gt; 、buffer-localは、バッファーの訪問済みファイルがバージョン管理で維持されているかどうか、維持されている場合はどの種類であるかを記録します。その値は、モード行に表示される文字列、またはバージョン管理がない場合は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3f4edf43932306ed36279cea1dd13405c1358ef5" translate="yes" xml:space="preserve">
          <source>The variable in overall control of the mode line is &lt;code&gt;mode-line-format&lt;/code&gt;.</source>
          <target state="translated">モードラインの全体的な制御における変数は、 &lt;code&gt;mode-line-format&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="506280d27c3a453af25eaf83b2e22ba4756bde25" translate="yes" xml:space="preserve">
          <source>The variable is a normal hook (see &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;).</source>
          <target state="translated">変数はノーマルフック（参照である&lt;a href=&quot;hooks#Hooks&quot;&gt;フックを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bd9d0d131cd223849d83a9a897d9082204faab10" translate="yes" xml:space="preserve">
          <source>The variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">変数は常に現在の端末に対してローカルであり、バッファローカルにすることはできません。&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;複数の端末を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="afffab14c74c322c6258e66827462e1a16d2b8ec" translate="yes" xml:space="preserve">
          <source>The variable is always local to the current terminal, and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">変数は常に現在の端末に対してローカルであり、バッファローカルにすることはできません。&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;複数の端末を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1b97401b6a596ccc158402fffb09944fd2fd36e2" translate="yes" xml:space="preserve">
          <source>The variable is intended for internal use and is defined in C code. (Emacs code contributed before 2018 may follow other conventions, which are being phased out.)</source>
          <target state="translated">この変数は内部使用を目的としており、Cコードで定義されています。(2018年以前に投稿されたEmacsコードは、段階的に廃止されつつある他の規約に従うかもしれません)。</target>
        </trans-unit>
        <trans-unit id="cb202781764a3574f77a5a340b243172f7492fda" translate="yes" xml:space="preserve">
          <source>The variable is intended for internal use and is defined in the file</source>
          <target state="translated">この変数は内部での使用を意図しており、ファイル</target>
        </trans-unit>
        <trans-unit id="41f80727e5413f13677ccab0cafcbdb5331c71cc" translate="yes" xml:space="preserve">
          <source>The variable is needed because in some cases a function reads an event and then decides not to use it. Storing the event in this variable causes it to be processed normally, by the command loop or by the functions to read command input.</source>
          <target state="translated">この変数が必要なのは、関数がイベントを読み込んだ後、それを使用しないことを決定する場合があるからです。この変数にイベントを格納すると、コマンドループやコマンド入力を読み込む関数によって、イベントが正常に処理されるようになります。</target>
        </trans-unit>
        <trans-unit id="3150be7b7ac09c6a1f548c75f40f74c6a1f6ef59" translate="yes" xml:space="preserve">
          <source>The variable which directly controls search-based fontification is &lt;code&gt;font-lock-keywords&lt;/code&gt;, which is typically specified via the &lt;var&gt;keywords&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;.</source>
          <target state="translated">検索ベースの &lt;code&gt;font-lock-keywords&lt;/code&gt; を直接制御する変数はfont-lock-keywordsであり、これは通常、 &lt;code&gt;font-lock-defaults&lt;/code&gt; の &lt;var&gt;keywords&lt;/var&gt; 要素を介して指定されます。</target>
        </trans-unit>
        <trans-unit id="4c5b07c9b1876282e7d1f551953a370749b40a01" translate="yes" xml:space="preserve">
          <source>The variable&amp;rsquo;s normal value is &lt;code&gt;nil&lt;/code&gt;, which means to handle each warning separately.</source>
          <target state="translated">変数の通常の値は &lt;code&gt;nil&lt;/code&gt; です。これは、各警告を個別に処理することを意味します。</target>
        </trans-unit>
        <trans-unit id="c95ce49750efde5fed6afd86875120cb2d79d29e" translate="yes" xml:space="preserve">
          <source>The variable&amp;rsquo;s ordinary binding, which is not associated with any specific buffer, is called the &lt;em&gt;default binding&lt;/em&gt;. In most cases, this is the global binding.</source>
          <target state="translated">特定のバッファに関連付けられていない変数の通常のバインディングは、&lt;em&gt;デフォルトバインディング&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。ほとんどの場合、これはグローバルバインディングです。</target>
        </trans-unit>
        <trans-unit id="0002578a86e49c7b26b7d6dae1705110ffa7f565" translate="yes" xml:space="preserve">
          <source>The variables &lt;code&gt;last-command&lt;/code&gt;, &lt;code&gt;this-command&lt;/code&gt;, &lt;code&gt;last-command-event&lt;/code&gt;, &lt;code&gt;last-input-event&lt;/code&gt;, &lt;code&gt;last-event-frame&lt;/code&gt;, &lt;code&gt;last-nonmenu-event&lt;/code&gt;, and &lt;code&gt;track-mouse&lt;/code&gt;. Commands in Edebug do not affect these variables outside of Edebug.</source>
          <target state="translated">変数 &lt;code&gt;last-command&lt;/code&gt; 、 &lt;code&gt;this-command&lt;/code&gt; 、 &lt;code&gt;last-command-event&lt;/code&gt; 、 &lt;code&gt;last-input-event&lt;/code&gt; 、 &lt;code&gt;last-event-frame&lt;/code&gt; 、 &lt;code&gt;last-nonmenu-event&lt;/code&gt; 、および &lt;code&gt;track-mouse&lt;/code&gt; 。Edebugのコマンドは、Edebug以外のこれらの変数には影響しません。</target>
        </trans-unit>
        <trans-unit id="ec74bb4b14cd4ddba613a9beb2bc907924ad1fd7" translate="yes" xml:space="preserve">
          <source>The variables &lt;code&gt;overlay-arrow-position&lt;/code&gt; and &lt;code&gt;overlay-arrow-string&lt;/code&gt; are saved and restored, so you can safely invoke Edebug from the recursive edit elsewhere in the same buffer.</source>
          <target state="translated">変数 &lt;code&gt;overlay-arrow-position&lt;/code&gt; と &lt;code&gt;overlay-arrow-string&lt;/code&gt; は保存および復元されるため、同じバッファー内の他の場所で再帰編集からEdebugを安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="12dd85f0af26cb40d63289524c75ea79f44a055c" translate="yes" xml:space="preserve">
          <source>The variables and subgroups of a group are stored in the &lt;code&gt;custom-group&lt;/code&gt; property of the group&amp;rsquo;s symbol. See &lt;a href=&quot;symbol-plists#Symbol-Plists&quot;&gt;Symbol Plists&lt;/a&gt;. The value of that property is a list of pairs whose &lt;code&gt;car&lt;/code&gt; is the variable or subgroup symbol and the &lt;code&gt;cdr&lt;/code&gt; is either &lt;code&gt;custom-variable&lt;/code&gt; or &lt;code&gt;custom-group&lt;/code&gt;.</source>
          <target state="translated">グループの変数とサブグループは、グループのシンボルの &lt;code&gt;custom-group&lt;/code&gt; プロパティに格納されます。&lt;a href=&quot;symbol-plists#Symbol-Plists&quot;&gt;シンボルリストを&lt;/a&gt;参照してください。そのプロパティの値は、そのペアのリストである &lt;code&gt;car&lt;/code&gt; の変数またはサブグループシンボルであり、 &lt;code&gt;cdr&lt;/code&gt; どちらかである &lt;code&gt;custom-variable&lt;/code&gt; または &lt;code&gt;custom-group&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ad60ac6e02db9591e6f7dda4a2e131b2f72ea7a" translate="yes" xml:space="preserve">
          <source>The variables whose names end in &amp;lsquo;</source>
          <target state="translated">名前が 'で終わる変数</target>
        </trans-unit>
        <trans-unit id="bab9f851db4965f0aa949afaf727a84dac3bbdef" translate="yes" xml:space="preserve">
          <source>The various forms in &lt;code&gt;rx&lt;/code&gt; regexps are described below. The shorthand &lt;var&gt;rx&lt;/var&gt; represents any &lt;code&gt;rx&lt;/code&gt; form, and &lt;var&gt;rx&lt;/var&gt;&amp;hellip; means zero or more &lt;code&gt;rx&lt;/code&gt; forms. Where the corresponding string regexp syntax is given, &lt;var&gt;A&lt;/var&gt;, &lt;var&gt;B&lt;/var&gt;, &amp;hellip; are string regexp subexpressions.</source>
          <target state="translated">で様々な形 &lt;code&gt;rx&lt;/code&gt; 正規表現は以下の通りです。省略形の &lt;var&gt;rx&lt;/var&gt; は任意の &lt;code&gt;rx&lt;/code&gt; 形式を表し、 &lt;var&gt;rx&lt;/var&gt; &amp;hellip;は0個以上の &lt;code&gt;rx&lt;/code&gt; 形式を意味します。対応する文字列正規表現構文が指定されている場合、 &lt;var&gt;A&lt;/var&gt; 、 &lt;var&gt;B&lt;/var&gt; 、&amp;hellip;は文字列正規表現の部分式です。</target>
        </trans-unit>
        <trans-unit id="3fb4271848a99a415f5fac5439780d5440f9b920" translate="yes" xml:space="preserve">
          <source>The vast majority of buffer changing primitives will call &lt;code&gt;before-change-functions&lt;/code&gt; and &lt;code&gt;after-change-functions&lt;/code&gt; in balanced pairs, once for each change, where the arguments to these hooks exactly delimit the change being made. Yet, hook functions should not rely on this always being the case, because some complex primitives call &lt;code&gt;before-change-functions&lt;/code&gt; once before making changes, and then call &lt;code&gt;after-change-functions&lt;/code&gt; zero or more times, depending on how many individual changes the primitive is making. When that happens, the arguments to &lt;code&gt;before-change-functions&lt;/code&gt; will enclose a region in which the individual changes are made, but won&amp;rsquo;t necessarily be the minimal such region, and the arguments to each successive call of &lt;code&gt;after-change-functions&lt;/code&gt; will then delimit the part of text being changed exactly. In general, we advise using either the before- or the after-change hook, but not both.</source>
          <target state="translated">バッファ変更プリミティブの大部分は、変更ごとに1回、バランスの取れたペアで &lt;code&gt;before-change-functions&lt;/code&gt; と &lt;code&gt;after-change-functions&lt;/code&gt; 関数を呼び出します。これらのフックへの引数は、行われる変更を正確に区切ります。ただし、一部の複雑なプリミティブは、変更を加える前に変更前 &lt;code&gt;before-change-functions&lt;/code&gt; 1回呼び出して &lt;code&gt;after-change-functions&lt;/code&gt; 、プリミティブを変更する個人の数に応じて変更後関数を0回以上呼び出すため、フック関数は常にこれに依存するべきではありません。作っています。その場合、 &lt;code&gt;before-change-functions&lt;/code&gt; への引数は、個々の変更が行われる領域を囲みますが、必ずしもそのような最小の領域であるとは限りません。 &lt;code&gt;after-change-functions&lt;/code&gt; を連続して呼び出すたびに、変更されるテキストの部分が正確に区切られます。一般に、変更前または変更後のフックのいずれかを使用することをお勧めしますが、両方を使用することはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="01527b8d037e3db74e702be995e76aba34c55c3a" translate="yes" xml:space="preserve">
          <source>The vector of Lisp objects referenced by the byte code. These include symbols used as function names and variable names.</source>
          <target state="translated">バイトコードで参照されるLispオブジェクトのベクトル。これらには、関数名や変数名として使用されるシンボルが含まれます。</target>
        </trans-unit>
        <trans-unit id="c3778db41acf0d35db1dc61c9cf1b4b3b4f8a61d" translate="yes" xml:space="preserve">
          <source>The vendor name. For example, &amp;lsquo;</source>
          <target state="translated">ベンダー名。例えば、 '</target>
        </trans-unit>
        <trans-unit id="3336772c213085c20a832b2612cfbefdb3b13ec1" translate="yes" xml:space="preserve">
          <source>The version number comes from the &amp;lsquo;</source>
          <target state="translated">バージョン番号は 'から来ています</target>
        </trans-unit>
        <trans-unit id="81a17dbb44063c857219c81f3cd4198fa63eea70" translate="yes" xml:space="preserve">
          <source>The vertical scroll position is measured in units of the normal line height, which is the height of the default font. Thus, if the value is .5, that means the window contents will be scrolled up half the normal line height. If it is 3.3, that means the window contents are scrolled up somewhat over three times the normal line height.</source>
          <target state="translated">垂直スクロールの位置は、デフォルトのフォントの高さである通常の行の高さの単位で測定されます。したがって、値が 0.5 の場合、それはウィンドウの内容が通常の行の高さの半分までスクロールされることを意味します。3.3 の場合は、ウィンドウの内容が通常の行の高さの 3 倍以上にスクロールされることを意味します。</target>
        </trans-unit>
        <trans-unit id="bc4829014d1d53e420832706fbc8210addcc9ffd" translate="yes" xml:space="preserve">
          <source>The very first thing this function does is run the normal hook &lt;code&gt;change-major-mode-hook&lt;/code&gt; (see below).</source>
          <target state="translated">この関数が最初に行うことは、通常のフック &lt;code&gt;change-major-mode-hook&lt;/code&gt; を実行することです（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="2a386d0814fb0c47f95262bcd9a80770783517ae" translate="yes" xml:space="preserve">
          <source>The virtual memory size of the process, measured in kilobytes.</source>
          <target state="translated">プロセスの仮想メモリサイズをキロバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="d546af21745b05bf5bc7bae48a02537d10b7c151" translate="yes" xml:space="preserve">
          <source>The visibility status of a frame is also available as a frame parameter. You can read or change it as such. See &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Management Parameters&lt;/a&gt;. The user can also iconify and deiconify frames with the window manager. This happens below the level at which Emacs can exert any control, but Emacs does provide events that you can use to keep track of such changes. See &lt;a href=&quot;misc-events#Misc-Events&quot;&gt;Misc Events&lt;/a&gt;.</source>
          <target state="translated">フレームの可視性ステータスは、フレームパラメータとしても利用できます。あなたはそれをそのように読んだり変更したりすることができます。&lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;管理パラメータを&lt;/a&gt;参照してください。ユーザーは、ウィンドウマネージャーを使用してフレームをアイコン化およびアイコン化解除することもできます。これは、Emacsが任意の制御を実行できるレベルより下で発生しますが、Emacsは、そのような変更を追跡するために使用できるイベントを提供します。&lt;a href=&quot;misc-events#Misc-Events&quot;&gt;その他のイベントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="50e098ac168a10d2d4a1e79562ce0e334e8bd88a" translate="yes" xml:space="preserve">
          <source>The visited file name, obtained with the &lt;code&gt;buffer-file-name&lt;/code&gt; function. See &lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Buffer File Name&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;buffer-file-name&lt;/code&gt; 関数で取得された訪問先ファイル名。&lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;バッファファイル名を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5f85520dd16c49b22fafbad49ad07147a119591b" translate="yes" xml:space="preserve">
          <source>The visual effect of an overlay is the same as of the corresponding text property (see &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;). However, due to a different implementation, overlays generally don&amp;rsquo;t scale well (many operations take a time that is proportional to the number of overlays in the buffer). If you need to affect the visual appearance of many portions in the buffer, we recommend using text properties.</source>
          <target state="translated">オーバーレイの視覚効果は、（参照対応するテキストプロパティのと同じである&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;テキストプロパティ&lt;/a&gt;）。ただし、実装が異なるため、オーバーレイは一般に適切にスケーリングされません（多くの操作には、バッファー内のオーバーレイの数に比例する時間がかかります）。バッファ内の多くの部分の外観に影響を与える必要がある場合は、テキストプロパティを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d5ca138eae9cfe76bef0e2c59914224c9bdc3031" translate="yes" xml:space="preserve">
          <source>The wait functions are designed to wait for a certain amount of time to pass or until there is input. For example, you may wish to pause in the middle of a computation to allow the user time to view the display. &lt;code&gt;sit-for&lt;/code&gt; pauses and updates the screen, and returns immediately if input comes in, while &lt;code&gt;sleep-for&lt;/code&gt; pauses without updating the screen.</source>
          <target state="translated">待機機能は、一定時間経過するか、入力があるまで待機するように設計されています。たとえば、計算の途中で一時停止して、ユーザーが表示を表示できるようにすることができます。 &lt;code&gt;sit-for&lt;/code&gt; は画面を一時停止して更新し、入力が入るとすぐに戻りますが、 &lt;code&gt;sleep-for&lt;/code&gt; は画面を更新せずに一時停止します。</target>
        </trans-unit>
        <trans-unit id="192ef2dfd536e9e70dc893e0e89a1431107ac5ac" translate="yes" xml:space="preserve">
          <source>The way to correct this is to use an uninterned symbol instead of &lt;code&gt;max&lt;/code&gt; (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;). The uninterned symbol can be bound and referred to just like any other symbol, but since it is created by &lt;code&gt;for&lt;/code&gt;, we know that it cannot already appear in the user&amp;rsquo;s program. Since it is not interned, there is no way the user can put it into the program later. It will never appear anywhere except where put by &lt;code&gt;for&lt;/code&gt;. Here is a definition of &lt;code&gt;for&lt;/code&gt; that works this way:</source>
          <target state="translated">これを修正する方法は、 &lt;code&gt;max&lt;/code&gt; の代わりにインターンされていないシンボルを使用することです（&lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;シンボルの作成を&lt;/a&gt;参照）。インターンされていないシンボルは、他のシンボルと同じようにバインドして参照できますが、 &lt;code&gt;for&lt;/code&gt; によって作成されているため、ユーザーのプログラムにまだ表示されていないことがわかります。それはインターンされていないので、ユーザーが後でプログラムに入れる方法はありません。 &lt;code&gt;for&lt;/code&gt; によって配置された場所を除いて、どこにも表示されません。このように機能する &lt;code&gt;for&lt;/code&gt; の定義は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="66b4cae96d1e2c0bcd9a52b36cee9d786ca97469" translate="yes" xml:space="preserve">
          <source>The way to declare new customization groups is with &lt;code&gt;defgroup&lt;/code&gt;.</source>
          <target state="translated">新しいカスタマイズグループを宣言する方法は、 &lt;code&gt;defgroup&lt;/code&gt; を使用することです。</target>
        </trans-unit>
        <trans-unit id="db0b6d7df13b1e2fdfc4c27e9f22fde31dbc569b" translate="yes" xml:space="preserve">
          <source>The way to display something in the margins is to specify it in a margin display specification in the &lt;code&gt;display&lt;/code&gt; property of some text. This is a replacing display specification, meaning that the text you put it on does not get displayed; the margin display appears, but that text does not.</source>
          <target state="translated">余白に何かを表示する方法は、テキストの &lt;code&gt;display&lt;/code&gt; プロパティの余白表示仕様でそれを指定することです。これは置き換え用の表示仕様です。つまり、配置したテキストは表示されません。余白の表示は表示されますが、そのテキストは表示されません。</target>
        </trans-unit>
        <trans-unit id="1737239af08f996045b6fcb09811eee72ac3f86e" translate="yes" xml:space="preserve">
          <source>The way to do this is to specify the faces in the text with the special text property &lt;code&gt;font-lock-face&lt;/code&gt; (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;). When Font Lock mode is enabled, this property controls the display, just like the &lt;code&gt;face&lt;/code&gt; property. When Font Lock mode is disabled, &lt;code&gt;font-lock-face&lt;/code&gt; has no effect on the display.</source>
          <target state="translated">これを行う方法は、特別なテキストプロパティ &lt;code&gt;font-lock-face&lt;/code&gt; を使用してテキスト内の面を指定することです（&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;特別なプロパティを&lt;/a&gt;参照）。フォントロックモードが有効になっている場合、このプロパティは、 &lt;code&gt;face&lt;/code&gt; プロパティと同様に、表示を制御します。フォントロックモードが無効になっている場合、 &lt;code&gt;font-lock-face&lt;/code&gt; はディスプレイに影響を与えません。</target>
        </trans-unit>
        <trans-unit id="129aacdb8825813ce33bdb7106847a380bb1f4e6" translate="yes" xml:space="preserve">
          <source>The way to rebind a key is to change its entry in a keymap. If you change a binding in the global keymap, the change is effective in all buffers (though it has no direct effect in buffers that shadow the global binding with a local one). If you change the current buffer&amp;rsquo;s local map, that usually affects all buffers using the same major mode. The &lt;code&gt;global-set-key&lt;/code&gt; and &lt;code&gt;local-set-key&lt;/code&gt; functions are convenient interfaces for these operations (see &lt;a href=&quot;key-binding-commands#Key-Binding-Commands&quot;&gt;Key Binding Commands&lt;/a&gt;). You can also use &lt;code&gt;define-key&lt;/code&gt;, a more general function; then you must explicitly specify the map to change.</source>
          <target state="translated">キーを再バインドする方法は、キーマップのエントリを変更することです。グローバルキーマップでバインディングを変更すると、その変更はすべてのバッファーで有効になります（ただし、グローバルバインディングとローカルバインディングをシャドウするバッファーでは直接的な影響はありません）。現在のバッファのローカルマップを変更すると、通常、同じメジャーモードを使用するすべてのバッファに影響します。 &lt;code&gt;global-set-key&lt;/code&gt; と &lt;code&gt;local-set-key&lt;/code&gt; の機能は、これらの操作のための便利なインターフェース（参照されている&lt;a href=&quot;key-binding-commands#Key-Binding-Commands&quot;&gt;キーは、コマンドバインディング&lt;/a&gt;）。より一般的な関数である &lt;code&gt;define-key&lt;/code&gt; を使用することもできます。次に、変更するマップを明示的に指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="fe05ab0a232a34266b1e0d8cdfc6c737d45d841d" translate="yes" xml:space="preserve">
          <source>The way you control explicit selective display is by replacing a newline (control-j) with a carriage return (control-m). The text that was formerly a line following that newline is now hidden. Strictly speaking, it is temporarily no longer a line at all, since only newlines can separate lines; it is now part of the previous line.</source>
          <target state="translated">明示的な選択表示を制御する方法は、改行 (control-j)をキャリッジリターン (control-m)に置き換えることです。以前は改行の後にある行であったテキストが隠されるようになります。厳密に言えば、改行だけが行を区切ることができるので、それは一時的に行ではなくなり、前の行の一部となります。</target>
        </trans-unit>
        <trans-unit id="892bdef3fcc8380be601ff3b96fc9536e8469a69" translate="yes" xml:space="preserve">
          <source>The weakness of a hash table specifies whether the presence of a key or value in the hash table preserves it from garbage collection.</source>
          <target state="translated">ハッシュテーブルの弱点は、ハッシュテーブルのキーまたは値の存在がガベージコレクションからそれを保存するかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="d6cc12223fc5458a08353a47288b23382be4b087" translate="yes" xml:space="preserve">
          <source>The widgets can specify predicates to say whether an inline value matches the widget with the &lt;code&gt;:match-inline&lt;/code&gt; element.</source>
          <target state="translated">ウィジェットは、インライン値がウィジェットと &lt;code&gt;:match-inline&lt;/code&gt; 要素と一致するかどうかを示す述語を指定できます。</target>
        </trans-unit>
        <trans-unit id="ed69a293e691b205905c7d5e0a4347f1d87f0d5a" translate="yes" xml:space="preserve">
          <source>The width (in pixels) of lines drawn, and outlines around solid shapes.</source>
          <target state="translated">描かれた線の幅(ピクセル単位)と、実線の周りのアウトライン。</target>
        </trans-unit>
        <trans-unit id="4a1892ba0d0e173378f79f3ed678b5d7efba8a0a" translate="yes" xml:space="preserve">
          <source>The width (thickness) reserved for the bottom divider (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;) of any window on the frame, in pixels. A value of zero means to not draw bottom dividers.</source>
          <target state="translated">フレーム上の任意のウィンドウの下部の仕切り（&lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;ウィンドウの&lt;/a&gt;仕切りを参照）用に予約されている幅（厚さ）（ピクセル単位）。ゼロの値は、下部の仕切りを描画しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="558fa961e0191929dec1ba6cbf01d57c94178289" translate="yes" xml:space="preserve">
          <source>The width (thickness) reserved for the right divider (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;) of any window on the frame, in pixels. A value of zero means to not draw right dividers.</source>
          <target state="translated">フレーム上の任意のウィンドウの右側の仕切り（&lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;ウィンドウの&lt;/a&gt;仕切りを参照）用に予約されている幅（厚さ）（ピクセル単位）。ゼロの値は、右の仕切りを描画しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="90bb0e3cf3541f9772a18bad6f13e8fc7599b3c5" translate="yes" xml:space="preserve">
          <source>The width in pixels of the frame&amp;rsquo;s internal border (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">フレームの内部境界のピクセル単位の幅（&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;フレームジオメトリを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c0695b58e941a86963af8bdaa7c318bb86722ff6" translate="yes" xml:space="preserve">
          <source>The width in pixels of the frame&amp;rsquo;s outer border (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">フレームの外側の境界のピクセル単位の幅（&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;フレームジオメトリを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="1ad9450ad829c4af084ca6d6f4dff95662763c56" translate="yes" xml:space="preserve">
          <source>The width of the internal border of &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; の内側の境界線の幅。</target>
        </trans-unit>
        <trans-unit id="ae93b55fd23229e2027f0ffca79696be32b880e1" translate="yes" xml:space="preserve">
          <source>The width of the outer border of &lt;var&gt;frame&lt;/var&gt;. The value is meaningful for non-GTK+ X builds only.</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; の外側の境界線の幅。この値は、GTK + X以外のビルドでのみ意味があります。</target>
        </trans-unit>
        <trans-unit id="007bb5c61439f12d2ef2a7267ef1975e048fd3b0" translate="yes" xml:space="preserve">
          <source>The width of this window&amp;rsquo;s vertical scroll bar and the height of this window&amp;rsquo;s horizontal scroll bar, in pixels.</source>
          <target state="translated">このウィンドウの垂直スクロールバーの幅とこのウィンドウの水平スクロールバーの高さ（ピクセル単位）。</target>
        </trans-unit>
        <trans-unit id="e829b9ac7b5a75b53a82013fdf3f85cf151e76f0" translate="yes" xml:space="preserve">
          <source>The width of vertical scroll bars, in pixels, or &lt;code&gt;nil&lt;/code&gt; meaning to use the default width.</source>
          <target state="translated">垂直スクロールバーの幅（ピクセル単位）、またはデフォルトの幅を使用することを意味する &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e03654807eef2aa62c363739ba25e938310fc1e8" translate="yes" xml:space="preserve">
          <source>The width, in pixels, of the font&amp;rsquo;s space character.</source>
          <target state="translated">フォントのスペース文字の幅（ピクセル単位）。</target>
        </trans-unit>
        <trans-unit id="1dbdff9d4f8aba85601189bb83369c69cf6d80bf" translate="yes" xml:space="preserve">
          <source>The widths of the left and right margins in this window. A value of zero means no margin.</source>
          <target state="translated">このウィンドウの左右の余白の幅。値が0の場合は余白がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="667e71608920d91a6815b335a2f78b9d18827f03" translate="yes" xml:space="preserve">
          <source>The window &lt;var&gt;window&lt;/var&gt; is used for obtaining parameters such as the width, the horizontal scrolling, and the display table. But &lt;code&gt;vertical-motion&lt;/code&gt; always operates on the current buffer, even if &lt;var&gt;window&lt;/var&gt; currently displays some other buffer.</source>
          <target state="translated">ウィンドウ &lt;var&gt;window&lt;/var&gt; は、幅、水平スクロール、表示テーブルなどのパラメータを取得するために使用されます。ただし、 &lt;var&gt;window&lt;/var&gt; 現在他のバッファが表示されている場合でも、 &lt;code&gt;vertical-motion&lt;/code&gt; 常に現在のバッファで動作します。</target>
        </trans-unit>
        <trans-unit id="d2decde8be6ffd87e4a5ac1b11957bbacc1f4066" translate="yes" xml:space="preserve">
          <source>The window &lt;var&gt;window&lt;/var&gt; serves only to specify which display table to use. &lt;code&gt;compute-motion&lt;/code&gt; always operates on the current buffer, regardless of what buffer is displayed in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">ウィンドウ &lt;var&gt;window&lt;/var&gt; は、使用する表示テーブルを指定するためだけに使用されます。 &lt;code&gt;compute-motion&lt;/code&gt; は、 &lt;var&gt;window&lt;/var&gt; 表示されているバッファーに関係なく、常に現在のバッファーで動作します。</target>
        </trans-unit>
        <trans-unit id="4f4813f65c74fdebbc7e8be16faa5ab31e765ada" translate="yes" xml:space="preserve">
          <source>The window configuration is not restored on error or quit, but the outside selected window &lt;em&gt;is&lt;/em&gt; reselected even on error or quit in case a &lt;code&gt;save-excursion&lt;/code&gt; is active. If the value of &lt;code&gt;edebug-save-windows&lt;/code&gt; is a list, only the listed windows are saved and restored.</source>
          <target state="translated">ウィンドウ構成はエラーまたは終了時に復元されませんが、 &lt;code&gt;save-excursion&lt;/code&gt; がアクティブな場合、エラーまたは終了時にも外側の選択されたウィンドウ&lt;em&gt;が&lt;/em&gt;再選択されます。 &lt;code&gt;edebug-save-windows&lt;/code&gt; の値がリストの場合、リストされたウィンドウのみが保存および復元されます。</target>
        </trans-unit>
        <trans-unit id="b5e36cb2e5250fc2fc73614846caeb741168fe8f" translate="yes" xml:space="preserve">
          <source>The window in which the click occurred.</source>
          <target state="translated">クリックが発生したウィンドウ。</target>
        </trans-unit>
        <trans-unit id="43ba63357161599c3c6d640f071701fc41817fb8" translate="yes" xml:space="preserve">
          <source>The window point is established when a window is first created; it is initialized from the buffer&amp;rsquo;s point, or from the window point of another window opened on the buffer if such a window exists.</source>
          <target state="translated">ウィンドウポイントは、ウィンドウが最初に作成されたときに確立されます。バッファのポイントから、またはそのようなウィンドウが存在する場合はバッファで開かれた別のウィンドウのウィンドウポイントから初期化されます。</target>
        </trans-unit>
        <trans-unit id="21cd1704c6bc80f89122014e2efafdcc999cb781" translate="yes" xml:space="preserve">
          <source>The window specified by any &lt;code&gt;previous-window&lt;/code&gt;&lt;var&gt;alist&lt;/var&gt; entry, provided it is not the selected window.</source>
          <target state="translated">選択されたウィンドウでない場合、 &lt;code&gt;previous-window&lt;/code&gt; &lt;var&gt;alist&lt;/var&gt; エントリによって指定されたウィンドウ。</target>
        </trans-unit>
        <trans-unit id="7c5d6bab6152c63ed0eedf9b7490dea6279bde8a" translate="yes" xml:space="preserve">
          <source>The window start and horizontal scrolling of the source code buffer are not restored, however, so that the display remains coherent within Edebug.</source>
          <target state="translated">ただし、ソースコードバッファのウィンドウ開始と水平スクロールは復元されないので、Edebug内での表示は一貫性を保ったままです。</target>
        </trans-unit>
        <trans-unit id="8a0992f4eeaaa8c898270f6ac1c10aae2c8bdf2d" translate="yes" xml:space="preserve">
          <source>The window whose scroll bar was clicked on.</source>
          <target state="translated">スクロールバーがクリックされたウィンドウ。</target>
        </trans-unit>
        <trans-unit id="176c003d1370db2fba484fc39d7e42b225a06af7" translate="yes" xml:space="preserve">
          <source>The window&amp;rsquo;s display table, or &lt;code&gt;nil&lt;/code&gt; if none is specified for it.</source>
          <target state="translated">ウィンドウの表示テーブル。何も指定されていない場合は &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d89efc64e6b638f0411a533ab926dc8cf4b43c89" translate="yes" xml:space="preserve">
          <source>The window-relative vertical position of the line containing &lt;code&gt;window_end_pos&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;window_end_pos&lt;/code&gt; を含む行のウィンドウ相対垂直位置。</target>
        </trans-unit>
        <trans-unit id="ddc0c25dcfde1cf013980df2ede9f5f487a12559" translate="yes" xml:space="preserve">
          <source>The window-relative vertical position of the line showing the cursor as of the last redisplay that finished.</source>
          <target state="translated">最後の再表示が終了した時点でのカーソルを表示している行のウィンドウ相対的な垂直位置。</target>
        </trans-unit>
        <trans-unit id="19d78d69ed62dbe0c081baecf64bf39c74beb8b5" translate="yes" xml:space="preserve">
          <source>The windows in each frame are organized into a &lt;em&gt;window tree&lt;/em&gt;. See &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;. The leaf nodes of each window tree are live windows&amp;mdash;the ones actually displaying buffers. The internal nodes of the window tree are &lt;em&gt;internal windows&lt;/em&gt;, which are not live.</source>
          <target state="translated">各フレームのウィンドウは、&lt;em&gt;ウィンドウツリーに&lt;/em&gt;編成されてい&lt;em&gt;ます&lt;/em&gt;。&lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windowsとフレームを&lt;/a&gt;参照してください。各ウィンドウツリーのリーフノードはライブウィンドウであり、実際にバッファを表示します。ウィンドウツリーの内部ノードは&lt;em&gt;内部ウィンドウ&lt;/em&gt;であり、ライブではありません。</target>
        </trans-unit>
        <trans-unit id="7ba5625ecf4e266603282ffe15318affa3471aef" translate="yes" xml:space="preserve">
          <source>The word &lt;em&gt;process&lt;/em&gt; usually means a running program. Emacs itself runs in a process of this sort. However, in Emacs Lisp, a process is a Lisp object that designates a subprocess created by the Emacs process. Programs such as shells, GDB, ftp, and compilers, running in subprocesses of Emacs, extend the capabilities of Emacs. An Emacs subprocess takes textual input from Emacs and returns textual output to Emacs for further manipulation. Emacs can also send signals to the subprocess.</source>
          <target state="translated">&lt;em&gt;プロセス&lt;/em&gt;という言葉は通常、実行中のプログラムを意味します。Emacs自体はこの種のプロセスで実行されます。ただし、Emacs Lispでは、プロセスはEmacsプロセスによって作成されたサブプロセスを指定するLispオブジェクトです。Emacsのサブプロセスで実行されるシェル、GDB、ftp、コンパイラーなどのプログラムは、Emacsの機能を拡張します。Emacsサブプロセスは、Emacsからテキスト入力を受け取り、さらに操作するためにテキスト出力をEmacsに返します。Emacsはサブプロセスにシグナルを送信することもできます。</target>
        </trans-unit>
        <trans-unit id="5e33feb1b485d5b35c342b63e6368aaa73a16a60" translate="yes" xml:space="preserve">
          <source>The year, an integer typically greater than 1900.</source>
          <target state="translated">年、通常は1900より大きい整数。</target>
        </trans-unit>
        <trans-unit id="5d422c4871acb4daa515b96859ddb6313519114b" translate="yes" xml:space="preserve">
          <source>Then find the actual matching close parenthesis by typing</source>
          <target state="translated">次に、以下のように入力して、実際に一致する閉じた括弧を見つけます。</target>
        </trans-unit>
        <trans-unit id="25258eb9508f9f8c3143dbf1060b1f5a03a4190b" translate="yes" xml:space="preserve">
          <source>Then this function returns a list of directories which contains first the directory in which &lt;var&gt;image&lt;/var&gt; was found, followed by the value of &lt;code&gt;load-path&lt;/code&gt;. If &lt;var&gt;path&lt;/var&gt; is given, it is used instead of &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">次に、この関数は、最初に &lt;var&gt;image&lt;/var&gt; が見つかったディレクトリを含み、次に &lt;code&gt;load-path&lt;/code&gt; の値を含むディレクトリのリストを返します。 &lt;var&gt;path&lt;/var&gt; が指定されている場合は、 &lt;code&gt;load-path&lt;/code&gt; の代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="894cb389eb05f2c7493a2ac1931a6e04315bf08c" translate="yes" xml:space="preserve">
          <source>Then, if &lt;var&gt;condition&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; when tested, the &lt;code&gt;cond&lt;/code&gt; form returns the value of &lt;var&gt;condition&lt;/var&gt;.</source>
          <target state="translated">次に、テスト時に &lt;var&gt;condition&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;cond&lt;/code&gt; フォームは &lt;var&gt;condition&lt;/var&gt; の値を返します。</target>
        </trans-unit>
        <trans-unit id="8caa84a6ee4a8ad260f9327c1877dc18fce75afb" translate="yes" xml:space="preserve">
          <source>Then, the font specifications for all but Chinese GB2312 characters have &amp;lsquo;</source>
          <target state="translated">次に、中国語のGB2312文字を除くすべてのフォント仕様には 'があります。</target>
        </trans-unit>
        <trans-unit id="17ee68a49f1c9ee78f81e68f9f744bfe141c4a21" translate="yes" xml:space="preserve">
          <source>Then, whenever &lt;code&gt;my-mode-map&lt;/code&gt; is active, if the user types</source>
          <target state="translated">次に、 &lt;code&gt;my-mode-map&lt;/code&gt; がアクティブなときはいつでも、ユーザーが次のように入力すると</target>
        </trans-unit>
        <trans-unit id="5b544e6d0a81a1f1983dd0e6865daf009408806b" translate="yes" xml:space="preserve">
          <source>There are a couple of ways in which a variable could be modified (or at least appear to be modified) without triggering a watchpoint.</source>
          <target state="translated">ウォッチポイントをトリガーせずに変数を変更する(あるいは少なくとも変更されているように見える)方法がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="4810fd34e613503da7a7271cade94d5170cbacb6" translate="yes" xml:space="preserve">
          <source>There are a number of commands devoted to the editing and recall of previous commands. The commands &lt;code&gt;repeat-complex-command&lt;/code&gt;, and &lt;code&gt;list-command-history&lt;/code&gt; are described in the user manual (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repetition.html#Repetition&quot;&gt;Repetition&lt;/a&gt; in</source>
          <target state="translated">以前のコマンドの編集と呼び出しに専念するコマンドがいくつかあります。コマンド &lt;code&gt;repeat-complex-command&lt;/code&gt; および &lt;code&gt;list-command-history&lt;/code&gt; は、ユーザーマニュアルで説明されています（の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repetition.html#Repetition&quot;&gt;繰り返し&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="7b011f7007d94c5c72274e3c8d4d061190ed0bc1" translate="yes" xml:space="preserve">
          <source>There are also some bool-vector set operation functions, described below:</source>
          <target state="translated">また、後述するbool-vectorのセット操作関数もあります。</target>
        </trans-unit>
        <trans-unit id="8bd13201286cd465fcc15dcd843023e25d6a951c" translate="yes" xml:space="preserve">
          <source>There are conventions for writing minor modes just as there are for major modes (see &lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Major Modes&lt;/a&gt;). These conventions are described below. The easiest way to follow them is to use the macro &lt;code&gt;define-minor-mode&lt;/code&gt;. See &lt;a href=&quot;defining-minor-modes#Defining-Minor-Modes&quot;&gt;Defining Minor Modes&lt;/a&gt;.</source>
          <target state="translated">メジャーモード（参照のためにそこにいるだけのようにマイナーモードを書くための規則があります。&lt;a href=&quot;major-modes#Major-Modes&quot;&gt;メジャーモード&lt;/a&gt;）。これらの規則については、以下で説明します。それらに従う最も簡単な方法は、マクロ &lt;code&gt;define-minor-mode&lt;/code&gt; を使用することです。&lt;a href=&quot;defining-minor-modes#Defining-Minor-Modes&quot;&gt;マイナーモードの定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6f5a57538b1c42c6bebc04336094d61e86ca1b21" translate="yes" xml:space="preserve">
          <source>There are currently three forms of Lisp timestamps, each of which represents a number of seconds:</source>
          <target state="translated">現在、Lisp のタイムスタンプには 3 つの形式があり、それぞれが秒数を表しています。</target>
        </trans-unit>
        <trans-unit id="56dfc4fc368a465162c56454477eaa5687676ab1" translate="yes" xml:space="preserve">
          <source>There are four functions to convert floating-point numbers to integers; they differ in how they round. All accept an argument &lt;var&gt;number&lt;/var&gt; and an optional argument &lt;var&gt;divisor&lt;/var&gt;. Both arguments may be integers or floating-point numbers. &lt;var&gt;divisor&lt;/var&gt; may also be &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;divisor&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, these functions convert &lt;var&gt;number&lt;/var&gt; to an integer, or return it unchanged if it already is an integer. If &lt;var&gt;divisor&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, they divide &lt;var&gt;number&lt;/var&gt; by &lt;var&gt;divisor&lt;/var&gt; and convert the result to an integer. If &lt;var&gt;divisor&lt;/var&gt; is zero (whether integer or floating point), Emacs signals an &lt;code&gt;arith-error&lt;/code&gt; error.</source>
          <target state="translated">浮動小数点数を整数に変換する関数は4つあります。丸め方が異なります。すべて、引数 &lt;var&gt;number&lt;/var&gt; とオプションの引数 &lt;var&gt;divisor&lt;/var&gt; 受け入れます。両方の引数は整数または浮動小数点数です。 &lt;var&gt;divisor&lt;/var&gt; も &lt;code&gt;nil&lt;/code&gt; の場合があります。場合は &lt;var&gt;divisor&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; または省略し、これらの関数は変換 &lt;var&gt;number&lt;/var&gt; 整数に、あるいはそれがすでに整数である場合はそのままそれを返します。 &lt;var&gt;divisor&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、除数で &lt;var&gt;number&lt;/var&gt; を &lt;var&gt;divisor&lt;/var&gt; し、結果を整数に変換します。 &lt;var&gt;divisor&lt;/var&gt; 場合がゼロ（整数または浮動小数点）の場合、Emacsは &lt;code&gt;arith-error&lt;/code&gt; エラーを通知します。</target>
        </trans-unit>
        <trans-unit id="d5eb98c61d7180e170b72be2864914198310f83f" translate="yes" xml:space="preserve">
          <source>There are four ways to specify text properties for text in the mode line:</source>
          <target state="translated">モードラインでテキストのプロパティを指定する方法は4つあります。</target>
        </trans-unit>
        <trans-unit id="a9440ba34e5f80f815e1dc28e60b578e2e89b21b" translate="yes" xml:space="preserve">
          <source>There are many other, more specialized, maps than these; in particular those associated with major and minor modes. The minibuffer uses several keymaps (see &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Completion Commands&lt;/a&gt;). For more details on keymaps, see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;.</source>
          <target state="translated">これら以外にも、より専門的なマップがたくさんあります。特にメジャーモードとマイナーモードに関連するもの。ミニバッファはいくつかのキーマップを使用します（&lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;完了コマンドを&lt;/a&gt;参照）。キーマップの詳細については、「キーマップ」を参照して&lt;a href=&quot;keymaps#Keymaps&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="070b832c129cab1c873dac5bab08fc0bc798e588" translate="yes" xml:space="preserve">
          <source>There are many separate minibuffer history lists, used for different kinds of inputs. It&amp;rsquo;s the Lisp programmer&amp;rsquo;s job to specify the right history list for each use of the minibuffer.</source>
          <target state="translated">さまざまな種類の入力に使用される、多数の個別のミニバッファ履歴リストがあります。ミニバッファの使用ごとに適切な履歴リストを指定するのはLispプログラマの仕事です。</target>
        </trans-unit>
        <trans-unit id="c0f9785866adf2557a41519a5ff551bf39a1bb80" translate="yes" xml:space="preserve">
          <source>There are no</source>
          <target state="translated">はありません。</target>
        </trans-unit>
        <trans-unit id="efbe79c18c70e6b3a0b9604c044c9cef2637dd78" translate="yes" xml:space="preserve">
          <source>There are other properties defined for the regions of text in a button, but these are not generally interesting for typical uses.</source>
          <target state="translated">ボタン内のテキストの領域に対して定義されたプロパティは他にもありますが、これらは一般的な用途では一般的には興味深いものではありません。</target>
        </trans-unit>
        <trans-unit id="65617bc57347ff83b82a4dafdbca7965d572ddf3" translate="yes" xml:space="preserve">
          <source>There are other special conventions for the text in documentation strings&amp;mdash;for instance, you can refer to functions, variables, and sections of this manual. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Documentation-Tips&quot;&gt;Documentation Tips&lt;/a&gt;, for details.</source>
          <target state="translated">ドキュメント文字列のテキストには、他にも特別な規則があります。たとえば、このマニュアルの関数、変数、およびセクションを参照できます。詳細については、&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Documentation-Tips&quot;&gt;ドキュメントのヒント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="bc70e5c922e2e49cfaf793fd3312e885eaf9157f" translate="yes" xml:space="preserve">
          <source>There are several alternatives you can use for &lt;var&gt;link-data&lt;/var&gt;:</source>
          <target state="translated">&lt;var&gt;link-data&lt;/var&gt; 使用できるいくつかの選択肢があります。</target>
        </trans-unit>
        <trans-unit id="347f46b30b75f43e3e329a51b4f9f141a980e45a" translate="yes" xml:space="preserve">
          <source>There are several functions that take an existing completion table and return a modified version. &lt;code&gt;completion-table-case-fold&lt;/code&gt; returns a case-insensitive table. &lt;code&gt;completion-table-in-turn&lt;/code&gt; and &lt;code&gt;completion-table-merge&lt;/code&gt; combine multiple input tables in different ways. &lt;code&gt;completion-table-subvert&lt;/code&gt; alters a table to use a different initial prefix. &lt;code&gt;completion-table-with-quoting&lt;/code&gt; returns a table suitable for operating on quoted text. &lt;code&gt;completion-table-with-predicate&lt;/code&gt; filters a table with a predicate function. &lt;code&gt;completion-table-with-terminator&lt;/code&gt; adds a terminating string.</source>
          <target state="translated">既存の完了テーブルを受け取り、変更されたバージョンを返す関数がいくつかあります。 &lt;code&gt;completion-table-case-fold&lt;/code&gt; は、大文字と小文字を区別しないテーブルを返します。 &lt;code&gt;completion-table-in-turn&lt;/code&gt; と &lt;code&gt;completion-table-merge&lt;/code&gt; は、複数の入力テーブルをさまざまな方法で組み合わせます。 &lt;code&gt;completion-table-subvert&lt;/code&gt; は、異なる初期プレフィックスを使用するようにテーブルを変更します。 &lt;code&gt;completion-table-with-quoting&lt;/code&gt; は、引用されたテキストの操作に適したテーブルを返します。 &lt;code&gt;completion-table-with-predicate&lt;/code&gt; は、述語関数を使用してテーブルをフィルタリングします。 &lt;code&gt;completion-table-with-terminator&lt;/code&gt; は、終了文字列を追加します。</target>
        </trans-unit>
        <trans-unit id="c3c283f44ca32e55d1aeaa6c8ba479ebaa377c9c" translate="yes" xml:space="preserve">
          <source>There are several other variable name conventions; here is a complete list:</source>
          <target state="translated">他にもいくつかの変数名の規則があります。</target>
        </trans-unit>
        <trans-unit id="4bb1239b76f76c5a9f69f8e0a5f058db3c2c4c76" translate="yes" xml:space="preserve">
          <source>There are several variables that control how Font Lock mode highlights text. But major modes should not set any of these variables directly. Instead, they should set &lt;code&gt;font-lock-defaults&lt;/code&gt; as a buffer-local variable. The value assigned to this variable is used, if and when Font Lock mode is enabled, to set all the other variables.</source>
          <target state="translated">フォントロックモードでテキストを強調表示する方法を制御する変数がいくつかあります。ただし、メジャーモードでは、これらの変数を直接設定しないでください。代わりに、 &lt;code&gt;font-lock-defaults&lt;/code&gt; をバッファローカル変数として設定する必要があります。この変数に割り当てられた値は、フォントロックモードが有効になっている場合に、他のすべての変数を設定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="3520ae182a02058f69edf04f15fb6488c0fe5433" translate="yes" xml:space="preserve">
          <source>There are several ways to explicitly specify a larger line height, either by specifying an absolute height for the display line, or by specifying vertical space. However, no matter what you specify, the actual line height can never be less than the default.</source>
          <target state="translated">行の高さを明示的に大きく指定するには、表示行の絶対的な高さを指定する方法と、垂直方向のスペースを指定する方法があります。しかし、どのように指定しても、実際の行の高さがデフォルトより低くなることはありません。</target>
        </trans-unit>
        <trans-unit id="81af9e15a9ba4c2165debde033a9a2d4638a848d" translate="yes" xml:space="preserve">
          <source>There are several ways to find and investigate problems in an Emacs Lisp program.</source>
          <target state="translated">Emacs Lisp プログラムの問題を見つけて調査する方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="d3bcae2f3fa55ef2219d610a3700030045063687" translate="yes" xml:space="preserve">
          <source>There are situations in Lisp where you need to refer to the symbol itself rather than the value of that symbol. One such case is when temporarily overriding the value of a variable, which in Lisp is done with &lt;code&gt;let&lt;/code&gt;. In C sources, this is done by defining a corresponding, constant symbol, and using &lt;code&gt;specbind&lt;/code&gt;. By convention, &lt;code&gt;Qmy_lisp_variable&lt;/code&gt; corresponds to &lt;code&gt;Vmy_lisp_variable&lt;/code&gt;; to define it, use the &lt;code&gt;DEFSYM&lt;/code&gt; macro. i.e.</source>
          <target state="translated">Lispには、そのシンボルの値ではなく、シンボル自体を参照する必要がある状況があります。そのようなケースの1つは、変数の値を一時的にオーバーライドする場合です。これは、Lispでは &lt;code&gt;let&lt;/code&gt; を使用して実行されます。 Cソースでは、これは、対応する定数シンボルを定義し、 &lt;code&gt;specbind&lt;/code&gt; を使用することによって行われます。慣例により、 &lt;code&gt;Qmy_lisp_variable&lt;/code&gt; はVmy_lisp_variableに対応し &lt;code&gt;Vmy_lisp_variable&lt;/code&gt; 。それを定義するには、 &lt;code&gt;DEFSYM&lt;/code&gt; マクロを使用します。すなわち</target>
        </trans-unit>
        <trans-unit id="e4e5b0d0a58dbcdc60ba12438edd47d4ac5481c8" translate="yes" xml:space="preserve">
          <source>There are some file types where it is not appropriate to scan the file contents for a mode specifier. For example, a tar archive may happen to contain, near the end of the file, a member file that has a local variables section specifying a mode for that particular file. This should not be applied to the containing tar file. Similarly, a tiff image file might just happen to contain a first line that seems to match the &amp;lsquo;</source>
          <target state="translated">モード指定子のファイル内容をスキャンすることが適切でないファイルタイプがいくつかあります。たとえば、tarアーカイブには、ファイルの終わり近くに、その特定のファイルのモードを指定するローカル変数セクションを持つメンバーファイルが含まれている場合があります。これは、含まれているtarファイルには適用しないでください。同様に、tiff画像ファイルには 'に一致するように見える最初の行が含まれている可能性があります</target>
        </trans-unit>
        <trans-unit id="6ef12d2e37d1f84f04c09af5a59fb08332be34fe" translate="yes" xml:space="preserve">
          <source>There are some function definitions that &amp;lsquo;</source>
          <target state="translated">'いくつかの関数定義があります</target>
        </trans-unit>
        <trans-unit id="b1fc61b0494cd0a88f92c4b058e0e7bfd5a21e24" translate="yes" xml:space="preserve">
          <source>There are special functions for producing a human-readable textual description of a character for the sake of messages. See &lt;a href=&quot;describing-characters#Describing-Characters&quot;&gt;Describing Characters&lt;/a&gt;.</source>
          <target state="translated">メッセージのために文字の人間が読めるテキスト記述を生成するための特別な機能があります。&lt;a href=&quot;describing-characters#Describing-Characters&quot;&gt;文字の説明を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1e43a50b1dd052eabdd8e042e065f2a2ed9e7998" translate="yes" xml:space="preserve">
          <source>There are three kinds of basic values:</source>
          <target state="translated">基本的な価値観は3種類あります。</target>
        </trans-unit>
        <trans-unit id="b0735adb37bfc41b867b231242a40734a3b00756" translate="yes" xml:space="preserve">
          <source>There are three possibilities for the argument &lt;var&gt;arg-descriptor&lt;/var&gt;:</source>
          <target state="translated">引数 &lt;var&gt;arg-descriptor&lt;/var&gt; には3つの可能性があります。</target>
        </trans-unit>
        <trans-unit id="4623fb4685bbf4280a4e141ad3eab869c9975673" translate="yes" xml:space="preserve">
          <source>There are three primitives that create a new subprocess in which to run a program. One of them, &lt;code&gt;make-process&lt;/code&gt;, creates an asynchronous process and returns a process object (see &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Asynchronous Processes&lt;/a&gt;). The other two, &lt;code&gt;call-process&lt;/code&gt; and &lt;code&gt;call-process-region&lt;/code&gt;, create a synchronous process and do not return a process object (see &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Synchronous Processes&lt;/a&gt;). There are various higher-level functions that make use of these primitives to run particular types of process.</source>
          <target state="translated">プログラムを実行するための新しいサブプロセスを作成する3つのプリミティブがあります。それらの1つである &lt;code&gt;make-process&lt;/code&gt; は、非同期プロセスを作成し、プロセスオブジェクトを返します（&lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;非同期プロセスを&lt;/a&gt;参照）。他の2つである &lt;code&gt;call-process&lt;/code&gt; と &lt;code&gt;call-process-region&lt;/code&gt; は、同期プロセスを作成し、プロセスオブジェクトを返しません（&lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;同期プロセスを&lt;/a&gt;参照）。これらのプリミティブを使用して特定のタイプのプロセスを実行する、さまざまな高レベルの関数があります。</target>
        </trans-unit>
        <trans-unit id="b6ce9698a02eeafb78037fc69ac4b447502a2398" translate="yes" xml:space="preserve">
          <source>There are three ways to do rehighlighting of multiline constructs:</source>
          <target state="translated">多行構成の再光化を行うには、3つの方法があります。</target>
        </trans-unit>
        <trans-unit id="b5ae132907f4eaeb3b141a67fe192bab8554dd75" translate="yes" xml:space="preserve">
          <source>There are three ways to ensure correct identification of multiline constructs:</source>
          <target state="translated">多行構造体を正しく識別するためには、3つの方法があります。</target>
        </trans-unit>
        <trans-unit id="02b99159f172f34b42581153a35c9d9f6509e368" translate="yes" xml:space="preserve">
          <source>There are two classes of terminals: &lt;em&gt;text terminals&lt;/em&gt; and &lt;em&gt;graphical terminals&lt;/em&gt;. Text terminals are non-graphics-capable displays, including &lt;code&gt;xterm&lt;/code&gt; and other terminal emulators. On a text terminal, each Emacs frame occupies the terminal&amp;rsquo;s entire screen; although you can create additional frames and switch between them, the terminal only shows one frame at a time. Graphical terminals, on the other hand, are managed by graphical display systems such as the X Window System, which allow Emacs to show multiple frames simultaneously on the same display.</source>
          <target state="translated">There are two classes of terminals: &lt;em&gt;text terminals&lt;/em&gt; and &lt;em&gt;graphical terminals&lt;/em&gt;. Text terminals are non-graphics-capable displays, including &lt;code&gt;xterm&lt;/code&gt; and other terminal emulators. On a text terminal, each Emacs frame occupies the terminal&amp;rsquo;s entire screen; although you can create additional frames and switch between them, the terminal only shows one frame at a time. Graphical terminals, on the other hand, are managed by graphical display systems such as the X Window System, which allow Emacs to show multiple frames simultaneously on the same display.</target>
        </trans-unit>
        <trans-unit id="d56673e36ac18f4a7201d660191225c3ed023071" translate="yes" xml:space="preserve">
          <source>There are two convenience functions for defining tool bar items, as follows.</source>
          <target state="translated">ツールバーの項目を定義するための便利な機能は以下の2つです。</target>
        </trans-unit>
        <trans-unit id="6713d06d362550d2fbd6bf74a5f0fde6d2bcd0fb" translate="yes" xml:space="preserve">
          <source>There are two different methods for specifying directory local variables: by putting them in a special file, or by defining a &lt;em&gt;project class&lt;/em&gt; for that directory.</source>
          <target state="translated">There are two different methods for specifying directory local variables: by putting them in a special file, or by defining a &lt;em&gt;project class&lt;/em&gt; for that directory.</target>
        </trans-unit>
        <trans-unit id="7518b8878262b7af1f08215d0d225f13a54d4a54" translate="yes" xml:space="preserve">
          <source>There are two general categories of types in Emacs Lisp: those having to do with Lisp programming, and those having to do with editing. The former exist in many Lisp implementations, in one form or another. The latter are unique to Emacs Lisp.</source>
          <target state="translated">Emacs Lisp の型には、Lisp プログラミングに関係する型と、編集に関係する型の 2 つの一般的なカテゴリがあります。前者は多くのLisp実装に何らかの形で存在しています。後者は Emacs Lisp 独自のものです。</target>
        </trans-unit>
        <trans-unit id="7780ab4bb2fd4b095c1c281e2009b2a706663d9a" translate="yes" xml:space="preserve">
          <source>There are two kinds of input you can get from the keyboard: ordinary keys, and function keys. Ordinary keys correspond to (possibly modified) characters; the events they generate are represented in Lisp as characters. The event type of a &lt;em&gt;character event&lt;/em&gt; is the character itself (an integer), which might have some modifier bits set; see &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;.</source>
          <target state="translated">There are two kinds of input you can get from the keyboard: ordinary keys, and function keys. Ordinary keys correspond to (possibly modified) characters; the events they generate are represented in Lisp as characters. The event type of a &lt;em&gt;character event&lt;/em&gt; is the character itself (an integer), which might have some modifier bits set; see &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="39cd2bac89b7a8134e344d2a81de8082d54c9694" translate="yes" xml:space="preserve">
          <source>There are two representations of the prefix argument: &lt;em&gt;raw&lt;/em&gt; and &lt;em&gt;numeric&lt;/em&gt;. The editor command loop uses the raw representation internally, and so do the Lisp variables that store the information, but commands can request either representation.</source>
          <target state="translated">There are two representations of the prefix argument: &lt;em&gt;raw&lt;/em&gt; and &lt;em&gt;numeric&lt;/em&gt;. The editor command loop uses the raw representation internally, and so do the Lisp variables that store the information, but commands can request either representation.</target>
        </trans-unit>
        <trans-unit id="6bb6034776c4d0f21194c1e0588414124c802332" translate="yes" xml:space="preserve">
          <source>There are two text representations for non-</source>
          <target state="translated">非</target>
        </trans-unit>
        <trans-unit id="fae1a698eafa5dc42066049ce21dee7258f1165c" translate="yes" xml:space="preserve">
          <source>There are two ways that Emacs can make a backup file:</source>
          <target state="translated">Emacsでバックアップファイルを作成する方法は2つあります。</target>
        </trans-unit>
        <trans-unit id="e05d7168854ad68f1c0b5577b7d65f713b450bc4" translate="yes" xml:space="preserve">
          <source>There are two ways to drag an entire child frame with the mouse: The &lt;code&gt;drag-with-mode-line&lt;/code&gt; parameter, if non-&lt;code&gt;nil&lt;/code&gt;, allows to drag a frame without minibuffer window (see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;) via the mode line area of its bottommost window. The &lt;code&gt;drag-with-header-line&lt;/code&gt; parameter, if non-&lt;code&gt;nil&lt;/code&gt;, allows to drag the frame via the header line area of its topmost window.</source>
          <target state="translated">There are two ways to drag an entire child frame with the mouse: The &lt;code&gt;drag-with-mode-line&lt;/code&gt; parameter, if non- &lt;code&gt;nil&lt;/code&gt; , allows to drag a frame without minibuffer window (see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;) via the mode line area of its bottommost window. The &lt;code&gt;drag-with-header-line&lt;/code&gt; parameter, if non- &lt;code&gt;nil&lt;/code&gt; , allows to drag the frame via the header line area of its topmost window.</target>
        </trans-unit>
        <trans-unit id="febd79069dcce3d171b21ec2da044e27843c284f" translate="yes" xml:space="preserve">
          <source>There are two ways to get out of Emacs: you can kill the Emacs job, which exits permanently, or you can suspend it, which permits you to reenter the Emacs process later. (In a graphical environment, you can of course simply switch to another application without doing anything special to Emacs, then switch back to Emacs when you want.)</source>
          <target state="translated">Emacs を抜けるには 2 つの方法があります。Emacs ジョブを kill して永久に終了する方法と、Emacs ジョブを一時停止して、後で Emacs プロセスに再入室できるようにする方法です。(グラフィカルな環境では、もちろん、Emacs に特別なことをしなくても、他のアプリケーションに切り替えて、好きなときに Emacs に戻すことができます)。</target>
        </trans-unit>
        <trans-unit id="91babbeb975fdf773c24f538fb1cfc649a409b06" translate="yes" xml:space="preserve">
          <source>There are two ways to set up an autoloaded function: by calling &lt;code&gt;autoload&lt;/code&gt;, and by writing a &amp;ldquo;magic&amp;rdquo; comment in the source before the real definition. &lt;code&gt;autoload&lt;/code&gt; is the low-level primitive for autoloading; any Lisp program can call &lt;code&gt;autoload&lt;/code&gt; at any time. Magic comments are the most convenient way to make a function autoload, for packages installed along with Emacs. These comments do nothing on their own, but they serve as a guide for the command &lt;code&gt;update-file-autoloads&lt;/code&gt;, which constructs calls to &lt;code&gt;autoload&lt;/code&gt; and arranges to execute them when Emacs is built.</source>
          <target state="translated">There are two ways to set up an autoloaded function: by calling &lt;code&gt;autoload&lt;/code&gt; , and by writing a &amp;ldquo;magic&amp;rdquo; comment in the source before the real definition. &lt;code&gt;autoload&lt;/code&gt; is the low-level primitive for autoloading; any Lisp program can call &lt;code&gt;autoload&lt;/code&gt; at any time. Magic comments are the most convenient way to make a function autoload, for packages installed along with Emacs. These comments do nothing on their own, but they serve as a guide for the command &lt;code&gt;update-file-autoloads&lt;/code&gt; , which constructs calls to &lt;code&gt;autoload&lt;/code&gt; and arranges to execute them when Emacs is built.</target>
        </trans-unit>
        <trans-unit id="b5a24f5d6edcb58050debdd5416633f2a78ff230" translate="yes" xml:space="preserve">
          <source>There are various defaults for how to blink each type of cursor, if the type is not mentioned as an &lt;var&gt;on-state&lt;/var&gt; here. Changes in this variable do not take effect immediately, only when you specify the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</source>
          <target state="translated">There are various defaults for how to blink each type of cursor, if the type is not mentioned as an &lt;var&gt;on-state&lt;/var&gt; here. Changes in this variable do not take effect immediately, only when you specify the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</target>
        </trans-unit>
        <trans-unit id="fa4758fd3e7817469e8d029cea8975d505254e6e" translate="yes" xml:space="preserve">
          <source>There are, however, a few exceptions: it is ok to use a limited set of expressions such as &lt;code&gt;(point)&lt;/code&gt;, &lt;code&gt;(mark)&lt;/code&gt;, &lt;code&gt;(region-beginning)&lt;/code&gt;, and &lt;code&gt;(region-end)&lt;/code&gt;, because Emacs recognizes them specially and puts the expression (rather than its value) into the command history. To see whether the expression you wrote is one of these exceptions, run the command, then examine &lt;code&gt;(car command-history)&lt;/code&gt;.</source>
          <target state="translated">There are, however, a few exceptions: it is ok to use a limited set of expressions such as &lt;code&gt;(point)&lt;/code&gt; , &lt;code&gt;(mark)&lt;/code&gt; , &lt;code&gt;(region-beginning)&lt;/code&gt; , and &lt;code&gt;(region-end)&lt;/code&gt; , because Emacs recognizes them specially and puts the expression (rather than its value) into the command history. To see whether the expression you wrote is one of these exceptions, run the command, then examine &lt;code&gt;(car command-history)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e9c7cb18529ed6dcc3960b26faa66bf4ad86d08" translate="yes" xml:space="preserve">
          <source>There are, in general, many buffers in an Emacs session. At any time, one of them is designated the &lt;em&gt;current buffer&lt;/em&gt;&amp;mdash;the buffer in which most editing takes place. Most of the primitives for examining or changing text operate implicitly on the current buffer (see &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;).</source>
          <target state="translated">There are, in general, many buffers in an Emacs session. At any time, one of them is designated the &lt;em&gt;current buffer&lt;/em&gt;&amp;mdash;the buffer in which most editing takes place. Most of the primitives for examining or changing text operate implicitly on the current buffer (see &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="ca315d80cf52d85dc191f8a4e11596e3728e557e" translate="yes" xml:space="preserve">
          <source>There can be at most one active notification at any given time. An active notification must be removed by calling &lt;code&gt;w32-notification-close&lt;/code&gt; before a new one can be shown.</source>
          <target state="translated">There can be at most one active notification at any given time. An active notification must be removed by calling &lt;code&gt;w32-notification-close&lt;/code&gt; before a new one can be shown.</target>
        </trans-unit>
        <trans-unit id="652594e6285d683eae8a6b2aac6731460c3a8258" translate="yes" xml:space="preserve">
          <source>There is a name parallel between GnuTLS MAC and digest algorithms but they are separate things internally and should not be mixed.</source>
          <target state="translated">GnuTLS MACとダイジェストアルゴリズムの間には名前の並列性がありますが、これらは内部的には別のものであり、混合すべきではありません。</target>
        </trans-unit>
        <trans-unit id="e2aa5cf61b46410aac7def0b532cc1292ff7a176" translate="yes" xml:space="preserve">
          <source>There is also a separate global mark ring, but that is used only in a few particular user-level commands, and is not relevant to Lisp programming. So we do not describe it here.</source>
          <target state="translated">また、別のグローバルマークリングもありますが、これはいくつかの特定のユーザレベルのコマンドでのみ使用され、Lispプログラミングには関係ありません。そのため、ここでは説明しません。</target>
        </trans-unit>
        <trans-unit id="5a1a9835b2deb5ae2be8528a446fb5a8f8bfc3a8" translate="yes" xml:space="preserve">
          <source>There is an anomalous case where newly inserted text at &lt;var&gt;pos&lt;/var&gt; would not inherit the &lt;code&gt;field&lt;/code&gt; property from either side. This happens if the previous character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not rear-sticky, and the following character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not front-sticky. In this case, &lt;var&gt;pos&lt;/var&gt; belongs to neither the preceding field nor the following field; the field functions treat it as belonging to an empty field whose beginning and end are both at &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">There is an anomalous case where newly inserted text at &lt;var&gt;pos&lt;/var&gt; would not inherit the &lt;code&gt;field&lt;/code&gt; property from either side. This happens if the previous character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not rear-sticky, and the following character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not front-sticky. In this case, &lt;var&gt;pos&lt;/var&gt; belongs to neither the preceding field nor the following field; the field functions treat it as belonging to an empty field whose beginning and end are both at &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="99608075f31379d3731857fc93b7b4b2ed2139ed" translate="yes" xml:space="preserve">
          <source>There is another wrinkle: because floating-point arithmetic is not exact, it is often a bad idea to check for equality of floating-point values. Usually it is better to test for approximate equality. Here&amp;rsquo;s a function to do this:</source>
          <target state="translated">There is another wrinkle: because floating-point arithmetic is not exact, it is often a bad idea to check for equality of floating-point values. Usually it is better to test for approximate equality. Here&amp;rsquo;s a function to do this:</target>
        </trans-unit>
        <trans-unit id="4c243b81e8c9962816c02c71e3fa1f5cc7d86fbe" translate="yes" xml:space="preserve">
          <source>There is just one situation where you should specify a string for an &lt;var&gt;initial&lt;/var&gt; argument. This is when you specify a cons cell for the &lt;var&gt;history&lt;/var&gt; argument. See &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;.</source>
          <target state="translated">There is just one situation where you should specify a string for an &lt;var&gt;initial&lt;/var&gt; argument. This is when you specify a cons cell for the &lt;var&gt;history&lt;/var&gt; argument. See &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a125144ca4e988b17612eceb6ec0c03776798e3a" translate="yes" xml:space="preserve">
          <source>There is no argument to specify the length of the char-table, because all char-tables have room for any valid character code as an index.</source>
          <target state="translated">すべての文字テーブルには、インデックスとして有効な文字コードを任意に入れる余地があるため、文字テーブルの長さを指定する引数はありません。</target>
        </trans-unit>
        <trans-unit id="370afa4bae6026ef7ed6e7018648381f30f86233" translate="yes" xml:space="preserve">
          <source>There is no limit on the number of iterations that may occur. The loop will continue until either &lt;var&gt;condition&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt; or until an error or &lt;code&gt;throw&lt;/code&gt; jumps out of it (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;).</source>
          <target state="translated">There is no limit on the number of iterations that may occur. The loop will continue until either &lt;var&gt;condition&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt; or until an error or &lt;code&gt;throw&lt;/code&gt; jumps out of it (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="2001784aa80f2afa0294b2cfd6bb448a06d77ba1" translate="yes" xml:space="preserve">
          <source>There is no primitive for creating terminal objects. Emacs creates them as needed, such as when you call &lt;code&gt;make-frame-on-display&lt;/code&gt; (described below).</source>
          <target state="translated">There is no primitive for creating terminal objects. Emacs creates them as needed, such as when you call &lt;code&gt;make-frame-on-display&lt;/code&gt; (described below).</target>
        </trans-unit>
        <trans-unit id="ea7a53ff8f70c9f430428c9728e618d3bde5ce69" translate="yes" xml:space="preserve">
          <source>There is no special function to access default values in a char-table. To do that, use &lt;code&gt;char-table-range&lt;/code&gt; (see below).</source>
          <target state="translated">There is no special function to access default values in a char-table. To do that, use &lt;code&gt;char-table-range&lt;/code&gt; (see below).</target>
        </trans-unit>
        <trans-unit id="a5fad7ed1e8c3ad9f09e3903d9b1c444ed47bb43" translate="yes" xml:space="preserve">
          <source>There is no way to have required arguments following optional ones&amp;mdash;it would not make sense. To see why this must be so, suppose that &lt;code&gt;c&lt;/code&gt; in the example were optional and &lt;code&gt;d&lt;/code&gt; were required. Suppose three actual arguments are given; which variable would the third argument be for? Would it be used for the &lt;var&gt;c&lt;/var&gt;, or for &lt;var&gt;d&lt;/var&gt;? One can argue for both possibilities. Similarly, it makes no sense to have any more arguments (either required or optional) after a &lt;code&gt;&amp;amp;rest&lt;/code&gt; argument.</source>
          <target state="translated">There is no way to have required arguments following optional ones&amp;mdash;it would not make sense. To see why this must be so, suppose that &lt;code&gt;c&lt;/code&gt; in the example were optional and &lt;code&gt;d&lt;/code&gt; were required. Suppose three actual arguments are given; which variable would the third argument be for? Would it be used for the &lt;var&gt;c&lt;/var&gt; , or for &lt;var&gt;d&lt;/var&gt; ? One can argue for both possibilities. Similarly, it makes no sense to have any more arguments (either required or optional) after a &lt;code&gt;&amp;amp;rest&lt;/code&gt; argument.</target>
        </trans-unit>
        <trans-unit id="c3e4e82ed3441b855ea25aedc8368e992146a44d" translate="yes" xml:space="preserve">
          <source>There is no way to share structure between two hash tables, the way two alists can share a common tail.</source>
          <target state="translated">2つのハッシュテーブル間で構造を共有する方法はありません。</target>
        </trans-unit>
        <trans-unit id="8e7bc00f4cbe042c39601255bf67d8ad682c7e42" translate="yes" xml:space="preserve">
          <source>There is no way to specify two different buttons with different actions.</source>
          <target state="translated">アクションの異なる2つのボタンを指定する方法はありません。</target>
        </trans-unit>
        <trans-unit id="61dd589ffa94add83c99de7478c67bd1bb20c561" translate="yes" xml:space="preserve">
          <source>There is one exception: if the value of &lt;var&gt;symbol&lt;/var&gt; is a string, it is displayed verbatim: the &lt;code&gt;%&lt;/code&gt;-constructs are not recognized.</source>
          <target state="translated">There is one exception: if the value of &lt;var&gt;symbol&lt;/var&gt; is a string, it is displayed verbatim: the &lt;code&gt;%&lt;/code&gt; -constructs are not recognized.</target>
        </trans-unit>
        <trans-unit id="bc8d78c4efd733708bc3daa467d344b184d4f9d7" translate="yes" xml:space="preserve">
          <source>There should be no newlines in any of these strings.</source>
          <target state="translated">これらの文字列には改行があってはいけません。</target>
        </trans-unit>
        <trans-unit id="236a32def63c3e13f6b88accb492b3b35fcd5746" translate="yes" xml:space="preserve">
          <source>Therefore,</source>
          <target state="translated">Therefore,</target>
        </trans-unit>
        <trans-unit id="4a5ccb0d8538fcc42f2c57dd7658bc1aa97f78f2" translate="yes" xml:space="preserve">
          <source>Therefore, avoid binding a variable more than once in a single &lt;code&gt;let&lt;/code&gt; form.</source>
          <target state="translated">Therefore, avoid binding a variable more than once in a single &lt;code&gt;let&lt;/code&gt; form.</target>
        </trans-unit>
        <trans-unit id="3f0c4931ff9ec7321b627fb38158d861e1342e80" translate="yes" xml:space="preserve">
          <source>Therefore, we recommend that your module functions check for nonlocal exit conditions and recover from them, using the functions described below.</source>
          <target state="translated">そのため、お使いのモジュールの関数で非局所的な終了条件をチェックし、以下の関数を使用して復旧することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="acdd2f9e8b919a1eaea822bd88c17593f336892c" translate="yes" xml:space="preserve">
          <source>Therefore, with an asynchronous subprocess, if at all possible, use a coding system which determines both the character code conversion and the end of line conversion&amp;mdash;that is, one like &lt;code&gt;latin-1-unix&lt;/code&gt;, rather than &lt;code&gt;undecided&lt;/code&gt; or &lt;code&gt;latin-1&lt;/code&gt;.</source>
          <target state="translated">Therefore, with an asynchronous subprocess, if at all possible, use a coding system which determines both the character code conversion and the end of line conversion&amp;mdash;that is, one like &lt;code&gt;latin-1-unix&lt;/code&gt; , rather than &lt;code&gt;undecided&lt;/code&gt; or &lt;code&gt;latin-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75c7cc98cf6082a937f2f125bb7ef9641a0a7f04" translate="yes" xml:space="preserve">
          <source>Therefore, you must define an Edebug specification for each macro that Edebug will encounter, to explain the format of calls to that macro. To do this, add a &lt;code&gt;debug&lt;/code&gt; declaration to the macro definition. Here is a simple example that shows the specification for the &lt;code&gt;for&lt;/code&gt; example macro (see &lt;a href=&quot;argument-evaluation#Argument-Evaluation&quot;&gt;Argument Evaluation&lt;/a&gt;).</source>
          <target state="translated">Therefore, you must define an Edebug specification for each macro that Edebug will encounter, to explain the format of calls to that macro. To do this, add a &lt;code&gt;debug&lt;/code&gt; declaration to the macro definition. Here is a simple example that shows the specification for the &lt;code&gt;for&lt;/code&gt; example macro (see &lt;a href=&quot;argument-evaluation#Argument-Evaluation&quot;&gt;Argument Evaluation&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="49ef1a726d3cde715758037bc20ad098d7916e7d" translate="yes" xml:space="preserve">
          <source>Therefore, you should avoid side effects in computation of the macro expansion, unless you really know what you are doing.</source>
          <target state="translated">そのため、本当に何をしているのか分からない限り、マクロ展開の計算での副作用は避けた方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="2acdaf6815658bc6863a95aee2b071c2d08ae394" translate="yes" xml:space="preserve">
          <source>These &lt;em&gt;adjustments&lt;/em&gt; of point that ended up in the middle of invisible text can be disabled by setting &lt;code&gt;disable-point-adjustment&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value. See &lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;Adjusting Point&lt;/a&gt;.</source>
          <target state="translated">These &lt;em&gt;adjustments&lt;/em&gt; of point that ended up in the middle of invisible text can be disabled by setting &lt;code&gt;disable-point-adjustment&lt;/code&gt; to a non- &lt;code&gt;nil&lt;/code&gt; value. See &lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;Adjusting Point&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a8564c8c52bb26dff06c342dbcb38aa25ab8d1b9" translate="yes" xml:space="preserve">
          <source>These Edebug commands let you view aspects of the buffer and window status as they were before entry to Edebug. The outside window configuration is the collection of windows and contents that were in effect outside of Edebug.</source>
          <target state="translated">これらの Edebug コマンドを使用すると、バッファやウィンドウの状態の側面を Edebug に入る前の状態で見ることができます。外部ウィンドウ設定は、Edebug の外部で有効になっていたウィンドウとコンテンツの集合体です。</target>
        </trans-unit>
        <trans-unit id="6453b0933bfa540398285ce050210e845ff2ceb3" translate="yes" xml:space="preserve">
          <source>These add a new node encapsulating &lt;var&gt;data&lt;/var&gt;, adding it to &lt;var&gt;ewoc&lt;/var&gt; before or after &lt;var&gt;node&lt;/var&gt;, respectively.</source>
          <target state="translated">These add a new node encapsulating &lt;var&gt;data&lt;/var&gt; , adding it to &lt;var&gt;ewoc&lt;/var&gt; before or after &lt;var&gt;node&lt;/var&gt; , respectively.</target>
        </trans-unit>
        <trans-unit id="cceb809aac53f3844ad4768044a343487be9a561" translate="yes" xml:space="preserve">
          <source>These add a new node encapsulating &lt;var&gt;data&lt;/var&gt;, putting it, respectively, at the beginning or end of &lt;var&gt;ewoc&lt;/var&gt;&amp;rsquo;s chain of nodes.</source>
          <target state="translated">These add a new node encapsulating &lt;var&gt;data&lt;/var&gt; , putting it, respectively, at the beginning or end of &lt;var&gt;ewoc&lt;/var&gt; &amp;rsquo;s chain of nodes.</target>
        </trans-unit>
        <trans-unit id="9ab0fb39b092432c876efaa650e2a9f9b04d1bbe" translate="yes" xml:space="preserve">
          <source>These additional functions are useful for creating and operating on network connections. Note that they are supported only on some systems.</source>
          <target state="translated">これらの追加機能は、ネットワーク接続の作成や操作に便利です。一部のシステムでのみサポートされていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2c532782eb32e3923cdfc2475afae8a2de94759f" translate="yes" xml:space="preserve">
          <source>These all match the empty string, but only in specific places.</source>
          <target state="translated">これらはすべて空の文字列にマッチしますが、特定の場所でのみマッチします。</target>
        </trans-unit>
        <trans-unit id="f41713a72eb6ace454547fa2e43e197443fe335c" translate="yes" xml:space="preserve">
          <source>These are &lt;em&gt;non-greedy&lt;/em&gt; variants of the operators &amp;lsquo;</source>
          <target state="translated">These are &lt;em&gt;non-greedy&lt;/em&gt; variants of the operators &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="05a64b60dec8513fc7fc45aa9b2b7f8fcbfea952" translate="yes" xml:space="preserve">
          <source>These are commands and functions for locating and operating on buttons in an Emacs buffer.</source>
          <target state="translated">Emacsバッファ内のボタンの位置を特定して操作するためのコマンドや関数です。</target>
        </trans-unit>
        <trans-unit id="a25be8cdc54fda5fa4fb98a074855d8423e41aea" translate="yes" xml:space="preserve">
          <source>These are functions for getting and setting properties of buttons. Often these are used by a button&amp;rsquo;s invocation function to determine what to do.</source>
          <target state="translated">These are functions for getting and setting properties of buttons. Often these are used by a button&amp;rsquo;s invocation function to determine what to do.</target>
        </trans-unit>
        <trans-unit id="d1b514a069d836860d7af7a1feabca32dc715f0b" translate="yes" xml:space="preserve">
          <source>These are handled by &lt;code&gt;serial-process-configure&lt;/code&gt;, which is called by &lt;code&gt;make-serial-process&lt;/code&gt;.</source>
          <target state="translated">These are handled by &lt;code&gt;serial-process-configure&lt;/code&gt; , which is called by &lt;code&gt;make-serial-process&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43e0a28142decb2dd4f625cb10b5b79d2323f33c" translate="yes" xml:space="preserve">
          <source>These are not all the keymaps you would see in actuality.</source>
          <target state="translated">これらは実際に見るようなキーマップばかりではありません。</target>
        </trans-unit>
        <trans-unit id="bea269feb73538722101398f683861482dfa4553" translate="yes" xml:space="preserve">
          <source>These are the actual column and row coordinate numbers of the glyph under the &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; position. If &lt;var&gt;x&lt;/var&gt; lies beyond the last column of actual text on its line, &lt;var&gt;col&lt;/var&gt; is reported by adding fictional extra columns that have the default character width. Row 0 is taken to be the header line if the window has one, or Row 1 if the window also has the tab line, or the topmost row of the text area otherwise. Column 0 is taken to be the leftmost column of the text area for clicks on a window text area, or the leftmost mode line or header line column for clicks there. For clicks on fringes or vertical borders, these have no meaningful data. For clicks on margins, &lt;var&gt;col&lt;/var&gt; is measured from the left edge of the margin area and &lt;var&gt;row&lt;/var&gt; is measured from the top of the margin area.</source>
          <target state="translated">These are the actual column and row coordinate numbers of the glyph under the &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; position. If &lt;var&gt;x&lt;/var&gt; lies beyond the last column of actual text on its line, &lt;var&gt;col&lt;/var&gt; is reported by adding fictional extra columns that have the default character width. Row 0 is taken to be the header line if the window has one, or Row 1 if the window also has the tab line, or the topmost row of the text area otherwise. Column 0 is taken to be the leftmost column of the text area for clicks on a window text area, or the leftmost mode line or header line column for clicks there. For clicks on fringes or vertical borders, these have no meaningful data. For clicks on margins, &lt;var&gt;col&lt;/var&gt; is measured from the left edge of the margin area and &lt;var&gt;row&lt;/var&gt; is measured from the top of the margin area.</target>
        </trans-unit>
        <trans-unit id="b6710b3c7596b8062fe07c6ef077774336111b3b" translate="yes" xml:space="preserve">
          <source>These are the basic trigonometric functions, with argument &lt;var&gt;arg&lt;/var&gt; measured in radians.</source>
          <target state="translated">These are the basic trigonometric functions, with argument &lt;var&gt;arg&lt;/var&gt; measured in radians.</target>
        </trans-unit>
        <trans-unit id="3156ee651cfae432e445cac09c15634298d44340" translate="yes" xml:space="preserve">
          <source>These are the pixel coordinates of the click, relative to the top left corner of &lt;var&gt;object&lt;/var&gt;, which is &lt;code&gt;(0 . 0)&lt;/code&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, which stands for a buffer, the coordinates are relative to the top left corner of the character glyph clicked on.</source>
          <target state="translated">These are the pixel coordinates of the click, relative to the top left corner of &lt;var&gt;object&lt;/var&gt; , which is &lt;code&gt;(0 . 0)&lt;/code&gt; . If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , which stands for a buffer, the coordinates are relative to the top left corner of the character glyph clicked on.</target>
        </trans-unit>
        <trans-unit id="44037f1bfc96fc4c3fcece5a2260c354838848ef" translate="yes" xml:space="preserve">
          <source>These are the pixel width and height of &lt;var&gt;object&lt;/var&gt; or, if this is &lt;code&gt;nil&lt;/code&gt;, those of the character glyph clicked on.</source>
          <target state="translated">These are the pixel width and height of &lt;var&gt;object&lt;/var&gt; or, if this is &lt;code&gt;nil&lt;/code&gt; , those of the character glyph clicked on.</target>
        </trans-unit>
        <trans-unit id="aaa95e66e38549b3b4cfab7bd5de76818d93641c" translate="yes" xml:space="preserve">
          <source>These are the primitive functions for searching through the text in a buffer. They are meant for use in programs, but you may call them interactively. If you do so, they prompt for the search string; the arguments &lt;var&gt;limit&lt;/var&gt; and &lt;var&gt;noerror&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;repeat&lt;/var&gt; is 1. For more details on interactive searching, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Search.html#Search&quot;&gt;Searching and Replacement&lt;/a&gt; in</source>
          <target state="translated">These are the primitive functions for searching through the text in a buffer. They are meant for use in programs, but you may call them interactively. If you do so, they prompt for the search string; the arguments &lt;var&gt;limit&lt;/var&gt; and &lt;var&gt;noerror&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt; , and &lt;var&gt;repeat&lt;/var&gt; is 1. For more details on interactive searching, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Search.html#Search&quot;&gt;Searching and Replacement&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="a8f6ecbf809bb173225aa25ef24cd83076b55357" translate="yes" xml:space="preserve">
          <source>These are the values for &lt;code&gt;print-length&lt;/code&gt; and &lt;code&gt;print-level&lt;/code&gt; used by &lt;code&gt;eval-expression&lt;/code&gt;, and thus, indirectly, by many interactive evaluation commands (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</source>
          <target state="translated">These are the values for &lt;code&gt;print-length&lt;/code&gt; and &lt;code&gt;print-level&lt;/code&gt; used by &lt;code&gt;eval-expression&lt;/code&gt; , and thus, indirectly, by many interactive evaluation commands (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="16da5f24988d3dc8397faf47e6b65dae11be9561" translate="yes" xml:space="preserve">
          <source>These commands find the file that ought to contain a function&amp;rsquo;s definition using &lt;code&gt;locate-library&lt;/code&gt;; if that finds no file, they expand the definition file name relative to the directory of the file that contains the &lt;code&gt;declare-function&lt;/code&gt; call.</source>
          <target state="translated">These commands find the file that ought to contain a function&amp;rsquo;s definition using &lt;code&gt;locate-library&lt;/code&gt; ; if that finds no file, they expand the definition file name relative to the directory of the file that contains the &lt;code&gt;declare-function&lt;/code&gt; call.</target>
        </trans-unit>
        <trans-unit id="9610813d55354bbe4e5030f270dfa5ba887ef1c1" translate="yes" xml:space="preserve">
          <source>These commands may fail to work as expected in case of nonlocal exit, as that can bypass the temporary breakpoint where you expected the program to stop.</source>
          <target state="translated">これらのコマンドは、プログラムが停止すると予想していた一時的なブレークポイントを迂回することができるため、非ローカル終了の場合には期待通りに動作しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="652e15cb81b20860fa9afbd7456c6600d4924dc7" translate="yes" xml:space="preserve">
          <source>These commands, primarily for interactive use, act based on the indentation in the text.</source>
          <target state="translated">これらのコマンドは、主に対話的に使用するためのもので、テキストのインデントに基づいて動作します。</target>
        </trans-unit>
        <trans-unit id="9afc92acf428ab9dda92d38a5fa15921e29d7751" translate="yes" xml:space="preserve">
          <source>These constants are fundamentally different from the constants defined using the &lt;code&gt;defconst&lt;/code&gt; special form (see &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Defining Variables&lt;/a&gt;). A &lt;code&gt;defconst&lt;/code&gt; form serves to inform human readers that you do not intend to change the value of a variable, but Emacs does not raise an error if you actually change it.</source>
          <target state="translated">These constants are fundamentally different from the constants defined using the &lt;code&gt;defconst&lt;/code&gt; special form (see &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Defining Variables&lt;/a&gt;). A &lt;code&gt;defconst&lt;/code&gt; form serves to inform human readers that you do not intend to change the value of a variable, but Emacs does not raise an error if you actually change it.</target>
        </trans-unit>
        <trans-unit id="f9e556f07147f8ec31bdf6d5c6a298d8b46cf7c9" translate="yes" xml:space="preserve">
          <source>These definitions also act as guides for programming tools. For example, the</source>
          <target state="translated">これらの定義は、プログラミングツールのガイドとしても機能します。例えば</target>
        </trans-unit>
        <trans-unit id="8a8338c7500ec00a26cdd8a7454fff6a72f07f61" translate="yes" xml:space="preserve">
          <source>These escape sequences may also be used in strings. See &lt;a href=&quot;non_002dascii-in-strings#Non_002dASCII-in-Strings&quot;&gt;Non-ASCII in Strings&lt;/a&gt;.</source>
          <target state="translated">These escape sequences may also be used in strings. See &lt;a href=&quot;non_002dascii-in-strings#Non_002dASCII-in-Strings&quot;&gt;Non-ASCII in Strings&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1fe77a489c5367bea12d3ad180626352917c22f7" translate="yes" xml:space="preserve">
          <source>These events are generated when the Emacs process receives the signals &lt;code&gt;SIGUSR1&lt;/code&gt; and &lt;code&gt;SIGUSR2&lt;/code&gt;. They contain no additional data because signals do not carry additional information. They can be useful for debugging (see &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;).</source>
          <target state="translated">These events are generated when the Emacs process receives the signals &lt;code&gt;SIGUSR1&lt;/code&gt; and &lt;code&gt;SIGUSR2&lt;/code&gt; . They contain no additional data because signals do not carry additional information. They can be useful for debugging (see &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="4ed1d20ada108250ff1fdf53243d88eb2ca0e4bb" translate="yes" xml:space="preserve">
          <source>These examples show typical uses of &lt;code&gt;error&lt;/code&gt;:</source>
          <target state="translated">These examples show typical uses of &lt;code&gt;error&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7371eee8b69413ed2418406d7a6e8607e5619fd4" translate="yes" xml:space="preserve">
          <source>These facilities provide information about which version of Emacs is in use.</source>
          <target state="translated">これらの機能は、使用中のEmacsのバージョンに関する情報を提供します。</target>
        </trans-unit>
        <trans-unit id="5307fb7809a0088f52c378521717d0b834ea65f4" translate="yes" xml:space="preserve">
          <source>These features permit you to write code to be evaluated during compilation of a program.</source>
          <target state="translated">これらの機能により、プログラムのコンパイル中に評価されるコードを書くことができます。</target>
        </trans-unit>
        <trans-unit id="64695ab218480c1570234a3c90fd0da8fa46b8eb" translate="yes" xml:space="preserve">
          <source>These fields are only used in an indirect buffer, or in a buffer that is the base of an indirect buffer. Each holds a marker that records &lt;code&gt;pt&lt;/code&gt;, &lt;code&gt;begv&lt;/code&gt;, and &lt;code&gt;zv&lt;/code&gt; respectively, for this buffer when the buffer is not current.</source>
          <target state="translated">These fields are only used in an indirect buffer, or in a buffer that is the base of an indirect buffer. Each holds a marker that records &lt;code&gt;pt&lt;/code&gt; , &lt;code&gt;begv&lt;/code&gt; , and &lt;code&gt;zv&lt;/code&gt; respectively, for this buffer when the buffer is not current.</target>
        </trans-unit>
        <trans-unit id="32273c814e3a6d721ce29c67960251f2a5c93194" translate="yes" xml:space="preserve">
          <source>These fields count the number of buffer-modification events performed in this buffer. &lt;code&gt;modiff&lt;/code&gt; is incremented after each buffer-modification event, and is never otherwise changed; &lt;code&gt;save_modiff&lt;/code&gt; contains the value of &lt;code&gt;modiff&lt;/code&gt; the last time the buffer was visited or saved; &lt;code&gt;chars_modiff&lt;/code&gt; counts only modifications to the characters in the buffer, ignoring all other kinds of changes (such as text properties); and &lt;code&gt;overlay_modiff&lt;/code&gt; counts only modifications to the buffer&amp;rsquo;s overlays.</source>
          <target state="translated">These fields count the number of buffer-modification events performed in this buffer. &lt;code&gt;modiff&lt;/code&gt; is incremented after each buffer-modification event, and is never otherwise changed; &lt;code&gt;save_modiff&lt;/code&gt; contains the value of &lt;code&gt;modiff&lt;/code&gt; the last time the buffer was visited or saved; &lt;code&gt;chars_modiff&lt;/code&gt; counts only modifications to the characters in the buffer, ignoring all other kinds of changes (such as text properties); and &lt;code&gt;overlay_modiff&lt;/code&gt; counts only modifications to the buffer&amp;rsquo;s overlays.</target>
        </trans-unit>
        <trans-unit id="6844a9a43b79ccec05a390c8b25f33aea98210e1" translate="yes" xml:space="preserve">
          <source>These fields hold, respectively, a list of overlays that end at or before the current overlay center, and a list of overlays that end after the current overlay center. See &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;. &lt;code&gt;overlays_before&lt;/code&gt; is sorted in order of decreasing end position, and &lt;code&gt;overlays_after&lt;/code&gt; is sorted in order of increasing beginning position.</source>
          <target state="translated">These fields hold, respectively, a list of overlays that end at or before the current overlay center, and a list of overlays that end after the current overlay center. See &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;. &lt;code&gt;overlays_before&lt;/code&gt; is sorted in order of decreasing end position, and &lt;code&gt;overlays_after&lt;/code&gt; is sorted in order of increasing beginning position.</target>
        </trans-unit>
        <trans-unit id="41d5d75a953e2e4c59e81e7694f747e4614197bb" translate="yes" xml:space="preserve">
          <source>These fields store the buffer&amp;rsquo;s local keymap (see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;), abbrev table (see &lt;a href=&quot;abbrev-tables#Abbrev-Tables&quot;&gt;Abbrev Tables&lt;/a&gt;), syntax table (see &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;), category table (see &lt;a href=&quot;categories#Categories&quot;&gt;Categories&lt;/a&gt;), and display table (see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</source>
          <target state="translated">These fields store the buffer&amp;rsquo;s local keymap (see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;), abbrev table (see &lt;a href=&quot;abbrev-tables#Abbrev-Tables&quot;&gt;Abbrev Tables&lt;/a&gt;), syntax table (see &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;), category table (see &lt;a href=&quot;categories#Categories&quot;&gt;Categories&lt;/a&gt;), and display table (see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="caefee5d23d6c6c86af8afeee33d761f23111f61" translate="yes" xml:space="preserve">
          <source>These fields store the conversion tables for converting text to lower case, upper case, and for canonicalizing text for case-fold search. See &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;.</source>
          <target state="translated">These fields store the conversion tables for converting text to lower case, upper case, and for canonicalizing text for case-fold search. See &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7356bdab197c4b307f4273606b00e5f3504341eb" translate="yes" xml:space="preserve">
          <source>These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have the additional prefix &lt;code&gt;buffer-&lt;/code&gt; and have underscores replaced with dashes. For instance, &lt;code&gt;undo_list&lt;/code&gt; stores the value of &lt;code&gt;buffer-undo-list&lt;/code&gt;.</source>
          <target state="translated">These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have the additional prefix &lt;code&gt;buffer-&lt;/code&gt; and have underscores replaced with dashes. For instance, &lt;code&gt;undo_list&lt;/code&gt; stores the value of &lt;code&gt;buffer-undo-list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c066cf74888d99cf9151237fbea57958b8cb93e2" translate="yes" xml:space="preserve">
          <source>These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have underscores replaced with dashes. For instance, &lt;code&gt;mode_line_format&lt;/code&gt; stores the value of &lt;code&gt;mode-line-format&lt;/code&gt;.</source>
          <target state="translated">These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have underscores replaced with dashes. For instance, &lt;code&gt;mode_line_format&lt;/code&gt; stores the value of &lt;code&gt;mode-line-format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb8146d57fbe325b7f14b432b9d92bc60b3cfeea" translate="yes" xml:space="preserve">
          <source>These frame parameters control the use of fonts and colors.</source>
          <target state="translated">これらのフレームパラメータは、フォントと色の使用を制御します。</target>
        </trans-unit>
        <trans-unit id="75cd82a0c0e58c25cdc9b6bacbe21efea6ec7f69" translate="yes" xml:space="preserve">
          <source>These frame parameters enable or disable various parts of the frame, or control their sizes.</source>
          <target state="translated">これらのフレームパラメータは、フレームの様々な部分を有効または無効にしたり、サイズを制御したりします。</target>
        </trans-unit>
        <trans-unit id="d255f11855dcf4a52f043d8501aaa97f70e52f62" translate="yes" xml:space="preserve">
          <source>These frame parameters give the most basic information about the frame. &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; are meaningful on all terminals.</source>
          <target state="translated">These frame parameters give the most basic information about the frame. &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; are meaningful on all terminals.</target>
        </trans-unit>
        <trans-unit id="6c680cf74be3c7198bef700334e34054ecd3a7e0" translate="yes" xml:space="preserve">
          <source>These frame parameters, meaningful on all kinds of terminals, deal with which buffers have been, or should, be displayed in the frame.</source>
          <target state="translated">これらのフレームパラメータは、あらゆる種類の端末で意味のあるもので、どのバッファがフレームに表示されているか、あるいは表示されるべきかを扱います。</target>
        </trans-unit>
        <trans-unit id="6c15e83c2865f543ed1b272587e6e144469be662" translate="yes" xml:space="preserve">
          <source>These functions accept a display (either a frame or the name of a terminal) as an optional argument. We hope in the future to make Emacs support different colors on different text terminals; then this argument will specify which terminal to operate on (the default being the selected frame&amp;rsquo;s terminal; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;). At present, though, the &lt;var&gt;frame&lt;/var&gt; argument has no effect.</source>
          <target state="translated">These functions accept a display (either a frame or the name of a terminal) as an optional argument. We hope in the future to make Emacs support different colors on different text terminals; then this argument will specify which terminal to operate on (the default being the selected frame&amp;rsquo;s terminal; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;). At present, though, the &lt;var&gt;frame&lt;/var&gt; argument has no effect.</target>
        </trans-unit>
        <trans-unit id="91e12a819cc188763f60c0b340292fb53a08ac26" translate="yes" xml:space="preserve">
          <source>These functions access and select minibuffer windows, test whether they are active and control how they get resized.</source>
          <target state="translated">これらの関数は、ミニバッファウィンドウへのアクセスや選択、アクティブかどうかのテスト、サイズ変更の方法の制御などを行います。</target>
        </trans-unit>
        <trans-unit id="121a5761d8b20b0742174be73c6b20355bf2397e" translate="yes" xml:space="preserve">
          <source>These functions access the minibuffer prompt and contents.</source>
          <target state="translated">これらの関数は、ミニバッファのプロンプトと内容にアクセスします。</target>
        </trans-unit>
        <trans-unit id="8471e7b0600804b60a50e9b8512731d75d72de26" translate="yes" xml:space="preserve">
          <source>These functions and variables deal with recursive minibuffers (see &lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;Recursive Editing&lt;/a&gt;):</source>
          <target state="translated">These functions and variables deal with recursive minibuffers (see &lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;Recursive Editing&lt;/a&gt;):</target>
        </trans-unit>
        <trans-unit id="0553c0ae5b9ff8a094605fff6f3203bf3cf7f9a6" translate="yes" xml:space="preserve">
          <source>These functions and variables give information about the total amount of memory allocation that Emacs has done, broken down by data type. Note the difference between these and the values returned by &lt;code&gt;garbage-collect&lt;/code&gt;; those count objects that currently exist, but these count the number or size of all allocations, including those for objects that have since been freed.</source>
          <target state="translated">These functions and variables give information about the total amount of memory allocation that Emacs has done, broken down by data type. Note the difference between these and the values returned by &lt;code&gt;garbage-collect&lt;/code&gt; ; those count objects that currently exist, but these count the number or size of all allocations, including those for objects that have since been freed.</target>
        </trans-unit>
        <trans-unit id="6fc606e7b511561a87e15edff497fda623372a9b" translate="yes" xml:space="preserve">
          <source>These functions and variables provide access to the kill ring at a lower level, but are still convenient for use in Lisp programs, because they take care of interaction with window system selections (see &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;).</source>
          <target state="translated">These functions and variables provide access to the kill ring at a lower level, but are still convenient for use in Lisp programs, because they take care of interaction with window system selections (see &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="57edc7f3b602347790883112e32461c39a8b215d" translate="yes" xml:space="preserve">
          <source>These functions are called with no arguments. They can access the command-line argument under consideration through the variable &lt;code&gt;argi&lt;/code&gt;, which is bound temporarily at this point. The remaining arguments (not including the current one) are in the variable &lt;code&gt;command-line-args-left&lt;/code&gt;.</source>
          <target state="translated">These functions are called with no arguments. They can access the command-line argument under consideration through the variable &lt;code&gt;argi&lt;/code&gt; , which is bound temporarily at this point. The remaining arguments (not including the current one) are in the variable &lt;code&gt;command-line-args-left&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97f83cee255103144d520b839f7f8062dbf43bf9" translate="yes" xml:space="preserve">
          <source>These functions are useful for decoding scroll bar events.</source>
          <target state="translated">これらの関数は、スクロールバーのイベントをデコードするのに便利です。</target>
        </trans-unit>
        <trans-unit id="c8f58ab0f0faf7770a13f5fb5b71914974523873" translate="yes" xml:space="preserve">
          <source>These functions compute a position list given particular buffer position or screen position. You can access the data in this position list with the functions described above.</source>
          <target state="translated">これらの関数は、特定のバッファ位置や画面位置を与えられた位置リストを計算します。この位置リストのデータには、上記の関数を使ってアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="22c7dfe3c796bddf45291a7df571d895a905f8ec" translate="yes" xml:space="preserve">
          <source>These functions convert events, key sequences, or characters to textual descriptions. These descriptions are useful for including arbitrary text characters or key sequences in messages, because they convert non-printing and whitespace characters to sequences of printing characters. The description of a non-whitespace printing character is the character itself.</source>
          <target state="translated">これらの関数は、イベント、キーシーケンス、または文字をテキスト記述に変換します。これらの記述は、非印刷文字やホワイトスペース文字を印刷文字のシーケンスに変換するので、任意のテキスト文字やキーシーケンスをメッセージに含めるのに便利です。非空白印刷文字の記述は、その文字そのものです。</target>
        </trans-unit>
        <trans-unit id="32854e57fd4225961eb6f7a796377d636a1707d5" translate="yes" xml:space="preserve">
          <source>These functions convert the set string to multibyte if the buffer is multibyte, and they convert it to unibyte if the buffer is unibyte, as the search functions do (see &lt;a href=&quot;searching-and-matching#Searching-and-Matching&quot;&gt;Searching and Matching&lt;/a&gt;).</source>
          <target state="translated">These functions convert the set string to multibyte if the buffer is multibyte, and they convert it to unibyte if the buffer is unibyte, as the search functions do (see &lt;a href=&quot;searching-and-matching#Searching-and-Matching&quot;&gt;Searching and Matching&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="bde16a6327954ca3dc2ee15e2e43d1b54fb616d9" translate="yes" xml:space="preserve">
          <source>These functions convert time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;) to Lisp timestamps, or into calendrical information and vice versa.</source>
          <target state="translated">These functions convert time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;) to Lisp timestamps, or into calendrical information and vice versa.</target>
        </trans-unit>
        <trans-unit id="a82b07d93809f41e92feaab96902ece14f6ca96b" translate="yes" xml:space="preserve">
          <source>These functions convert time values to text in a string, and vice versa. Time values include &lt;code&gt;nil&lt;/code&gt;, numbers, and Lisp timestamps (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">These functions convert time values to text in a string, and vice versa. Time values include &lt;code&gt;nil&lt;/code&gt; , numbers, and Lisp timestamps (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="893a001c0a39bd95a9eed9a404de87e4453643d2" translate="yes" xml:space="preserve">
          <source>These functions copy text characters from strings and buffers along with their properties. The inserted characters have exactly the same properties as the characters they were copied from. By contrast, characters specified as separate arguments, not part of a string or buffer, inherit their text properties from the neighboring text.</source>
          <target state="translated">これらの関数は、文字列やバッファからテキスト文字をプロパティとともにコピーします。挿入された文字は、コピー元の文字と全く同じプロパティを持ちます。対照的に、文字列やバッファの一部ではなく別の引数として指定された文字は、隣接するテキストからそのテキストプロパティを継承します。</target>
        </trans-unit>
        <trans-unit id="12996c12645dffe62b5b718b306e09838a845251" translate="yes" xml:space="preserve">
          <source>These functions count each character according to the number of columns it occupies on the screen. This means control characters count as occupying 2 or 4 columns, depending upon the value of &lt;code&gt;ctl-arrow&lt;/code&gt;, and tabs count as occupying a number of columns that depends on the value of &lt;code&gt;tab-width&lt;/code&gt; and on the column where the tab begins. See &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;.</source>
          <target state="translated">These functions count each character according to the number of columns it occupies on the screen. This means control characters count as occupying 2 or 4 columns, depending upon the value of &lt;code&gt;ctl-arrow&lt;/code&gt; , and tabs count as occupying a number of columns that depends on the value of &lt;code&gt;tab-width&lt;/code&gt; and on the column where the tab begins. See &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5587cca0f32b361e7619386323dd5952fc38156a" translate="yes" xml:space="preserve">
          <source>These functions do not modify the strings that are passed to them as arguments.</source>
          <target state="translated">これらの関数は、引数として渡された文字列を変更しません。</target>
        </trans-unit>
        <trans-unit id="0db9562b1b3d1a26285c73f9d1f5a2bc76ccbea1" translate="yes" xml:space="preserve">
          <source>These functions do not move point; instead, they return a position (or &lt;code&gt;nil&lt;/code&gt;). Remember that a position is always between two characters; the position returned by these functions is between two characters with different properties.</source>
          <target state="translated">These functions do not move point; instead, they return a position (or &lt;code&gt;nil&lt;/code&gt; ). Remember that a position is always between two characters; the position returned by these functions is between two characters with different properties.</target>
        </trans-unit>
        <trans-unit id="3480b687890db37e25d8679a8fb2aa1513692262" translate="yes" xml:space="preserve">
          <source>These functions handle both strings and buffers. Keep in mind that positions in a string start from 0, whereas positions in a buffer start from 1. Passing a buffer other than the current buffer may be slow.</source>
          <target state="translated">これらの関数は文字列とバッファの両方を扱います。文字列の位置は 0 から始まり、バッファの位置は 1 から始まることに注意してください。 現在のバッファ以外のバッファを渡すのは遅いかもしれません。</target>
        </trans-unit>
        <trans-unit id="0bb3307e88dba10f0e4bca2c9c929691f427fc25" translate="yes" xml:space="preserve">
          <source>These functions let you read and change the parameter values of a frame.</source>
          <target state="translated">これらの関数は、フレームのパラメータ値を読み込んだり、変更したりすることができます。</target>
        </trans-unit>
        <trans-unit id="c6d0e6907567470f2b32ecff3c3b392fd450cfb8" translate="yes" xml:space="preserve">
          <source>These functions move point based on a count of characters. &lt;code&gt;goto-char&lt;/code&gt; is the fundamental primitive; the other functions use that.</source>
          <target state="translated">These functions move point based on a count of characters. &lt;code&gt;goto-char&lt;/code&gt; is the fundamental primitive; the other functions use that.</target>
        </trans-unit>
        <trans-unit id="ab2d1d99ce04f193040231a1c2648552979f7f3c" translate="yes" xml:space="preserve">
          <source>These functions must take care when using &lt;code&gt;window-end&lt;/code&gt; (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;); if you need an up-to-date value, you must use the &lt;var&gt;update&lt;/var&gt; argument to ensure you get it.</source>
          <target state="translated">These functions must take care when using &lt;code&gt;window-end&lt;/code&gt; (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;); if you need an up-to-date value, you must use the &lt;var&gt;update&lt;/var&gt; argument to ensure you get it.</target>
        </trans-unit>
        <trans-unit id="3599ddd0ccc7c1bb59af0d7739752be6bff46ebb" translate="yes" xml:space="preserve">
          <source>These functions obtain additional information about the window system in use where Emacs shows the specified &lt;var&gt;display&lt;/var&gt;. (Their names begin with &lt;code&gt;x-&lt;/code&gt; for historical reasons.)</source>
          <target state="translated">These functions obtain additional information about the window system in use where Emacs shows the specified &lt;var&gt;display&lt;/var&gt; . (Their names begin with &lt;code&gt;x-&lt;/code&gt; for historical reasons.)</target>
        </trans-unit>
        <trans-unit id="147b8d3bc6d563d67f966133e2f695c2f4abb602" translate="yes" xml:space="preserve">
          <source>These functions operate on regular expressions.</source>
          <target state="translated">これらの関数は正規表現で動作します。</target>
        </trans-unit>
        <trans-unit id="e69cc7c761fefbaaa6ca87ea52d54171150d39f1" translate="yes" xml:space="preserve">
          <source>These functions perform calendrical computations using time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;). As with any time value, a value of &lt;code&gt;nil&lt;/code&gt; for any of their time-value arguments stands for the current system time, and a single number stands for the number of seconds since the epoch.</source>
          <target state="translated">These functions perform calendrical computations using time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;). As with any time value, a value of &lt;code&gt;nil&lt;/code&gt; for any of their time-value arguments stands for the current system time, and a single number stands for the number of seconds since the epoch.</target>
        </trans-unit>
        <trans-unit id="3faf858a56995dbf1b0c10b1e20365c9dbd2ca0e" translate="yes" xml:space="preserve">
          <source>These functions provide a way to determine which color names are valid, and what they look like. In some cases, the value depends on the &lt;em&gt;selected frame&lt;/em&gt;, as described below; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;, for the meaning of the term &amp;ldquo;selected frame&amp;rdquo;.</source>
          <target state="translated">These functions provide a way to determine which color names are valid, and what they look like. In some cases, the value depends on the &lt;em&gt;selected frame&lt;/em&gt;, as described below; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;, for the meaning of the term &amp;ldquo;selected frame&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="e4a65d15c1a9ebd9e09a4df510c5e9378c690d84" translate="yes" xml:space="preserve">
          <source>These functions read and set the properties of an overlay:</source>
          <target state="translated">これらの関数は、オーバーレイのプロパティを読み込んだり設定したりします。</target>
        </trans-unit>
        <trans-unit id="607cbb4ce5975ddb134e1cf42345aca20205753f" translate="yes" xml:space="preserve">
          <source>These functions return the default height and width of a character in &lt;var&gt;frame&lt;/var&gt;, measured in pixels. Together, these values establish the size of the default font on &lt;var&gt;frame&lt;/var&gt;. The values depend on the choice of font for &lt;var&gt;frame&lt;/var&gt;, see &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Font and Color Parameters&lt;/a&gt;.</source>
          <target state="translated">These functions return the default height and width of a character in &lt;var&gt;frame&lt;/var&gt; , measured in pixels. Together, these values establish the size of the default font on &lt;var&gt;frame&lt;/var&gt; . The values depend on the choice of font for &lt;var&gt;frame&lt;/var&gt; , see &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Font and Color Parameters&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="09a64473d43e2d708e1c38b96ec8cf37fc09d875" translate="yes" xml:space="preserve">
          <source>These functions return the foreground color (or background color, respectively) of face &lt;var&gt;face&lt;/var&gt;, as a string. If the color is unspecified, they return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">These functions return the foreground color (or background color, respectively) of face &lt;var&gt;face&lt;/var&gt; , as a string. If the color is unspecified, they return &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b636fdb808fc2c3c957e28785d6a35d90f659dad" translate="yes" xml:space="preserve">
          <source>These functions return the height and width of the text area of &lt;var&gt;frame&lt;/var&gt;, measured in units of the default font height and width of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). These functions are plain shorthands for writing &lt;code&gt;(frame-parameter frame 'height)&lt;/code&gt; and &lt;code&gt;(frame-parameter frame 'width)&lt;/code&gt;.</source>
          <target state="translated">これらの関数は、デフォルトのフォントの高さと &lt;var&gt;frame&lt;/var&gt; 幅の単位で測定された、 &lt;var&gt;frame&lt;/var&gt; のテキスト領域の高さと幅を返します（&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;フレームフォントを&lt;/a&gt;参照）。これらの関数は、 &lt;code&gt;(frame-parameter frame 'width)&lt;/code&gt; &lt;code&gt;(frame-parameter frame 'height)&lt;/code&gt; および（frame-parameter frame 'width）を記述するための単純な省略形です。</target>
        </trans-unit>
        <trans-unit id="d115313b39c99bf9a73e868edab4210be5dfd0f0" translate="yes" xml:space="preserve">
          <source>These functions return the inner width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">これらの関数は、 &lt;var&gt;frame&lt;/var&gt; 内側の幅と高さをピクセル単位で返します。</target>
        </trans-unit>
        <trans-unit id="65317fceab04a5393a4610411e7d919c58166f8a" translate="yes" xml:space="preserve">
          <source>These functions return the native width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">これらの関数は、 &lt;var&gt;frame&lt;/var&gt; ネイティブの幅と高さをピクセル単位で返します。</target>
        </trans-unit>
        <trans-unit id="e5df50bad22f793708058c5c3f72feb1556e5127" translate="yes" xml:space="preserve">
          <source>These functions return the outer width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">これらの関数は、 &lt;var&gt;frame&lt;/var&gt; 外側の幅と高さをピクセル単位で返します。</target>
        </trans-unit>
        <trans-unit id="d38fe85c22ca89727598b0326e70dba74667d37d" translate="yes" xml:space="preserve">
          <source>These functions return the width and height of the text area of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">これらの関数は、 &lt;var&gt;frame&lt;/var&gt; のテキスト領域の幅と高さをピクセル単位で返します。</target>
        </trans-unit>
        <trans-unit id="5a1289dbdd5c9e8a4981cd1858d16f383b2575b6" translate="yes" xml:space="preserve">
          <source>These functions scan text to determine where screen lines break, and thus take time proportional to the distance scanned.</source>
          <target state="translated">これらの機能は、テキストをスキャンして画面の改行位置を決定するため、スキャンした距離に比例した時間がかかります。</target>
        </trans-unit>
        <trans-unit id="32c7206d08128117007e8bcd42d2f606dcff371d" translate="yes" xml:space="preserve">
          <source>These functions take a mouse position list as argument, and return various parts of it:</source>
          <target state="translated">これらの関数は、マウスの位置リストを引数に取り、その中の様々な部分を返します。</target>
        </trans-unit>
        <trans-unit id="e6a7353e1fe65b73c3cb43570c87e9dc028c7932" translate="yes" xml:space="preserve">
          <source>These functions test for permission to access a file for reading, writing, or execution. Unless explicitly stated otherwise, they follow symbolic links. See &lt;a href=&quot;kinds-of-files#Kinds-of-Files&quot;&gt;Kinds of Files&lt;/a&gt;.</source>
          <target state="translated">これらの関数は、読み取り、書き込み、または実行のためにファイルにアクセスするためのアクセス許可をテストします。特に明記されていない限り、これらはシンボリックリンクをたどります。&lt;a href=&quot;kinds-of-files#Kinds-of-Files&quot;&gt;ファイルの種類を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0c38f568a6c8f77175070f3ca62775f408c9dfb6" translate="yes" xml:space="preserve">
          <source>These functions, and one macro, provide convenient ways to modify a list which is stored in a variable.</source>
          <target state="translated">これらの関数と1つのマクロは、変数に格納されているリストを修正する便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="f3821e4594e2f12e52ea2fed5751cf5bb0734c0c" translate="yes" xml:space="preserve">
          <source>These have the attributes indicated by their names (e.g., &lt;code&gt;bold&lt;/code&gt; has a bold &lt;code&gt;:weight&lt;/code&gt; attribute), with all other attributes unspecified (and so given by &lt;code&gt;default&lt;/code&gt;).</source>
          <target state="translated">これらには、名前で示される属性があり（たとえば、 &lt;code&gt;bold&lt;/code&gt; には太字の &lt;code&gt;:weight&lt;/code&gt; 属性があります）、他のすべての属性は指定されていません（したがって、 &lt;code&gt;default&lt;/code&gt; 指定されています）。</target>
        </trans-unit>
        <trans-unit id="e47e777be261258dca54be3fbba695fcf02c9d58" translate="yes" xml:space="preserve">
          <source>These have the same meanings as the face attributes of the same name. See &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Face Attributes&lt;/a&gt;. &lt;code&gt;:family&lt;/code&gt; and &lt;code&gt;:foundry&lt;/code&gt; are strings, while the other three are symbols. As example values, &lt;code&gt;:slant&lt;/code&gt; may be &lt;code&gt;italic&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt; may be &lt;code&gt;bold&lt;/code&gt; and &lt;code&gt;:width&lt;/code&gt; may be &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">これらは、同じ名前の顔の属性と同じ意味を持っています。&lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;顔の属性を&lt;/a&gt;参照してください。 &lt;code&gt;:family&lt;/code&gt; と &lt;code&gt;:foundry&lt;/code&gt; は文字列であり、他の3つは記号です。値の例として、 &lt;code&gt;:slant&lt;/code&gt; は &lt;code&gt;italic&lt;/code&gt; 、 &lt;code&gt;:weight&lt;/code&gt; は &lt;code&gt;bold&lt;/code&gt; 、 &lt;code&gt;:width&lt;/code&gt; は &lt;code&gt;normal&lt;/code&gt; 場合があります。</target>
        </trans-unit>
        <trans-unit id="3fe0bcdf4e749c72aab0c293540927291ac1aa2d" translate="yes" xml:space="preserve">
          <source>These hook variables let you arrange to take notice of changes in buffers (or in a particular buffer, if you make them buffer-local). See also &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;, for how to detect changes to specific parts of the text.</source>
          <target state="translated">これらのフック変数を使用すると、バッファー（または、バッファーローカルにする場合は特定のバッファー）の変更に注意を向けることができます。テキストの特定の部分への変更を検出する方法については、「&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;特別なプロパティ&lt;/a&gt;」も参照してください。</target>
        </trans-unit>
        <trans-unit id="b3722c7720a390976cdaddd26a76da19ca95a48a" translate="yes" xml:space="preserve">
          <source>These keymaps control various areas of the mode line. See &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Mode Line Format&lt;/a&gt;.</source>
          <target state="translated">これらのキーマップは、モードラインのさまざまな領域を制御します。&lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;モードラインフォーマットを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d6e2c6883adbcf22c3241682e727075a42dfe00e" translate="yes" xml:space="preserve">
          <source>These keymaps display the main, top-level menus in the menu bar. Some of them contain sub-menus. For example, the Edit menu contains &lt;code&gt;menu-bar-search-menu&lt;/code&gt;, etc. See &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;.</source>
          <target state="translated">これらのキーマップは、メニューバーにメインのトップレベルメニューを表示します。それらのいくつかにはサブメニューが含まれています。たとえば、[編集]メニューには &lt;code&gt;menu-bar-search-menu&lt;/code&gt; などが含まれています。&lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;メニューバーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e1b24d17104d2a599a62ef2eba9d12e47d4c600d" translate="yes" xml:space="preserve">
          <source>These keys correspond to common</source>
          <target state="translated">これらのキーは、一般的な</target>
        </trans-unit>
        <trans-unit id="4c47cdbac4a7f662759169877670d03eab27b377" translate="yes" xml:space="preserve">
          <source>These kinds of event are generated by moving a mouse wheel. The &lt;var&gt;position&lt;/var&gt; element is a mouse position list (see &lt;a href=&quot;click-events#Click-Events&quot;&gt;Click Events&lt;/a&gt;), specifying the position of the mouse cursor when the event occurred.</source>
          <target state="translated">この種のイベントは、マウスホイールを動かすことによって生成されます。 &lt;var&gt;position&lt;/var&gt; 要素は、（参照マウス位置のリストである&lt;a href=&quot;click-events#Click-Events&quot;&gt;イベントをクリックして&lt;/a&gt;イベントが発生したときに、マウスカーソルの位置を指定して、）。</target>
        </trans-unit>
        <trans-unit id="327aa77a271ae0747539593d4f1f1061887141f4" translate="yes" xml:space="preserve">
          <source>These macros all expect three arguments:</source>
          <target state="translated">これらのマクロはすべて3つの引数を想定しています。</target>
        </trans-unit>
        <trans-unit id="661bb57259287c5d9e6a9cf26af06d46adf0c8f2" translate="yes" xml:space="preserve">
          <source>These mapping functions do not allow char-tables because a char-table is a sparse array whose nominal range of indices is very large. To map over a char-table in a way that deals properly with its sparse nature, use the function &lt;code&gt;map-char-table&lt;/code&gt; (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;).</source>
          <target state="translated">これらのマッピング関数では、char-tableはスパース配列であり、インデックスの公称範囲が非常に広いため、char-tableは使用できません。スパースな性質を適切に処理する方法で &lt;code&gt;map-char-table&lt;/code&gt; するには、関数map-char-tableを使用します（&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tablesを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="889061821013abb0e636cc7d94dfee19f317076e" translate="yes" xml:space="preserve">
          <source>These mathematical functions allow integers as well as floating-point numbers as arguments.</source>
          <target state="translated">これらの数学関数は、引数として浮動小数点数だけでなく、整数も可能です。</target>
        </trans-unit>
        <trans-unit id="0f431d7e8f6682cc5d52bc8367b56e6ab2917c79" translate="yes" xml:space="preserve">
          <source>These move point to the previous or next, respectively, &lt;var&gt;arg&lt;/var&gt;th node in &lt;var&gt;ewoc&lt;/var&gt;. &lt;code&gt;ewoc-goto-prev&lt;/code&gt; does not move if it is already at the first node or if &lt;var&gt;ewoc&lt;/var&gt; is empty, whereas &lt;code&gt;ewoc-goto-next&lt;/code&gt; moves past the last node, returning &lt;code&gt;nil&lt;/code&gt;. Excepting this special case, these functions return the node moved to.</source>
          <target state="translated">これらの移動ポイントは、それぞれ &lt;var&gt;ewoc&lt;/var&gt; の前または次の &lt;var&gt;arg&lt;/var&gt; 番目のノードになります。 &lt;code&gt;ewoc-goto-prev&lt;/code&gt; は、すでに最初のノードにある場合、または &lt;var&gt;ewoc&lt;/var&gt; が空の場合は移動しませんが、 &lt;code&gt;ewoc-goto-next&lt;/code&gt; は最後のノードを超えて移動し、 &lt;code&gt;nil&lt;/code&gt; を返します。この特別な場合を除いて、これらの関数は移動先のノードを返します。</target>
        </trans-unit>
        <trans-unit id="ca83389bce48c8c68a57c8b12e41b5c8416c3707" translate="yes" xml:space="preserve">
          <source>These narrow classifications are grouped into a hierarchy of wider classes called &lt;em&gt;error conditions&lt;/em&gt;, identified by &lt;em&gt;condition names&lt;/em&gt;. The narrowest such classes belong to the error symbols themselves: each error symbol is also a condition name. There are also condition names for more extensive classes, up to the condition name &lt;code&gt;error&lt;/code&gt; which takes in all kinds of errors (but not &lt;code&gt;quit&lt;/code&gt;). Thus, each error has one or more condition names: &lt;code&gt;error&lt;/code&gt;, the error symbol if that is distinct from &lt;code&gt;error&lt;/code&gt;, and perhaps some intermediate classifications.</source>
          <target state="translated">これらの狭い分類は、&lt;em&gt;エラー条件&lt;/em&gt;と呼ばれるより広いクラスの階層にグループ化され、&lt;em&gt;条件名&lt;/em&gt;で識別され&lt;em&gt;ます&lt;/em&gt;。このような最も狭いクラスは、エラーシンボル自体に属します。各エラーシンボルは、条件名でもあります。あらゆる種類の &lt;code&gt;error&lt;/code&gt; を取り込む（ただし、 &lt;code&gt;quit&lt;/code&gt; ない）条件名エラーまで、より広範なクラスの条件名もあります。 ：このように、各エラーは、一つ以上の条件名有する &lt;code&gt;error&lt;/code&gt; ことが異なっている場合、エラーシンボルを &lt;code&gt;error&lt;/code&gt; 、そしておそらくいくつかの中間体の分類。</target>
        </trans-unit>
        <trans-unit id="014e4a097c82195bde9b7c25fe9dd9bf73df7a55" translate="yes" xml:space="preserve">
          <source>These normal hooks are run, respectively, when the mark becomes active and when it becomes inactive. The hook &lt;code&gt;activate-mark-hook&lt;/code&gt; is also run at the end of the command loop if the mark is active and it is possible that the region may have changed.</source>
          <target state="translated">これらの通常のフックは、マークがアクティブになったときと非アクティブになったときにそれぞれ実行されます。マークがアクティブであり、領域が変更されている可能性がある場合、フックの &lt;code&gt;activate-mark-hook&lt;/code&gt; もコマンドループの最後で実行されます。</target>
        </trans-unit>
        <trans-unit id="2e9f87ff7e3198e668f10966de785d119907aade" translate="yes" xml:space="preserve">
          <source>These options affect the behavior of Edebug:</source>
          <target state="translated">これらのオプションはEdebugの動作に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="a4f845e8272f1ee4ffc16d323f1859daa1283172" translate="yes" xml:space="preserve">
          <source>These overrides are useful when you want to make some text unaffected by the reordering algorithm, and instead directly control the display order. But they can also be used for malicious purposes, known as &lt;em&gt;phishing&lt;/em&gt;. Specifically, a URL on a Web page or a link in an email message can be manipulated to make its visual appearance unrecognizable, or similar to some popular benign location, while the real location, interpreted by a browser in the logical order, is very different.</source>
          <target state="translated">これらのオーバーライドは、一部のテキストを並べ替えアルゴリズムの影響を受けずに、代わりに表示順序を直接制御する場合に役立ちます。ただし、&lt;em&gt;フィッシング&lt;/em&gt;と呼ばれる悪意のある目的で使用することもできます。具体的には、WebページのURLまたは電子メールメッセージのリンクを操作して、視覚的な外観を認識できないようにするか、一般的な良性の場所に似せることができますが、ブラウザによって論理的な順序で解釈される実際の場所は大きく異なります。 。</target>
        </trans-unit>
        <trans-unit id="095c879a0e1c874617dc77661a08cd7ebf30f266" translate="yes" xml:space="preserve">
          <source>These parameters are mostly useful for child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) that come without window manager decorations. If necessary, they can be used for undecorated top-level frames as well.</source>
          <target state="translated">これらのパラメータは、子フレーム（参照のために主に役立ちます&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子供フレームを&lt;/a&gt;ウィンドウマネージャの装飾なしで来ます）。必要に応じて、装飾されていないトップレベルフレームにも使用できます。</target>
        </trans-unit>
        <trans-unit id="153ef778c6b97967d9f2ce43fda7f854e08c56ba" translate="yes" xml:space="preserve">
          <source>These parameters are used internally for implementing side windows (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;).</source>
          <target state="translated">これらのパラメータは、サイドウィンドウを実装するために内部的に使用されている（参照&lt;a href=&quot;side-windows#Side-Windows&quot;&gt;サイドのWindowsを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7903a938448c17a3c92a1961733615528e815829" translate="yes" xml:space="preserve">
          <source>These parameters supply forms of interactions between different frames.</source>
          <target state="translated">これらのパラメータは、異なるフレーム間の相互作用の形態を提供します。</target>
        </trans-unit>
        <trans-unit id="604caa6b860829abeb4d2d5ad8b8d6949bef07a0" translate="yes" xml:space="preserve">
          <source>These problems will never happen in normal circumstances with installed Emacs files. But they are quite likely to happen with Lisp files that you are changing. The easiest way to prevent these problems is to reload the new compiled file immediately after each recompilation.</source>
          <target state="translated">これらの問題は、通常の状況では、インストールされたEmacsファイルでは決して起こりません。しかし、変更しているLispファイルでは、これらの問題が発生する可能性が非常に高いです。これらの問題を防ぐ最も簡単な方法は、再コンパイルのたびに新しいコンパイル済みファイルをすぐにリロードすることです。</target>
        </trans-unit>
        <trans-unit id="74497c2b387c074f0b80666e13f53d25f241ac27" translate="yes" xml:space="preserve">
          <source>These properties are obsolete; please use &lt;code&gt;cursor-sensor-functions&lt;/code&gt; instead.</source>
          <target state="translated">これらのプロパティは廃止されました。代わりに &lt;code&gt;cursor-sensor-functions&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="6cc7c4e05f99db3539d2f04a9d301a520f52d552" translate="yes" xml:space="preserve">
          <source>These properties are used to record a customizable variable&amp;rsquo;s standard value, saved value, customized-but-unsaved value, and themed values. Do not set them directly; they are managed by &lt;code&gt;defcustom&lt;/code&gt; and related functions. See &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;.</source>
          <target state="translated">これらのプロパティは、カスタマイズ可能な変数の標準値、保存された値、カスタマイズされたが保存されていない値、およびテーマ値を記録するために使用されます。それらを直接設定しないでください。それらは &lt;code&gt;defcustom&lt;/code&gt; および関連する関数によって管理されます。&lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;変数の定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="68a5f034c7853205bde56ac0e877bed5c54aae41" translate="yes" xml:space="preserve">
          <source>These properties are used to record a face&amp;rsquo;s standard, saved, customized, and themed face specs. Do not set them directly; they are managed by &lt;code&gt;defface&lt;/code&gt; and related functions. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</source>
          <target state="translated">これらのプロパティは、顔の標準、保存、カスタマイズ、およびテーマ化された顔の仕様を記録するために使用されます。それらを直接設定しないでください。それらは &lt;code&gt;defface&lt;/code&gt; および関連する関数によって管理されます。&lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;面の定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1cf87969ab79defe053b28ccbfbf4fba573ae8e3" translate="yes" xml:space="preserve">
          <source>These render &lt;code&gt;cl-case&lt;/code&gt; unsuitable for strings or compound data structures (e.g., lists or vectors). (&lt;code&gt;cond&lt;/code&gt; doesn&amp;rsquo;t have these limitations, but it has others, see above.)</source>
          <target state="translated">これらは、 &lt;code&gt;cl-case&lt;/code&gt; を文字列または複合データ構造（リストやベクトルなど）に不適切にします。（ &lt;code&gt;cond&lt;/code&gt; にはこれらの制限はありませんが、他の制限があります。上記を参照してください。）</target>
        </trans-unit>
        <trans-unit id="317f88dc617e3083b4efda6c5e9c655c9f5b336a" translate="yes" xml:space="preserve">
          <source>These results make sense because the binary codes for control-_ and control-W are 11111 and 10111, respectively.</source>
          <target state="translated">これらの結果は、control-_とcontrol-Wのバイナリコードがそれぞれ111111と10111であるため、意味がある。</target>
        </trans-unit>
        <trans-unit id="ad489d015d653d05e2a1ccfa8abb77e06f2f8a64" translate="yes" xml:space="preserve">
          <source>These results make sense, because the binary code for &amp;lsquo;</source>
          <target state="translated">'のバイナリコードは</target>
        </trans-unit>
        <trans-unit id="a4c4dda550da1b321a6d80128f1268ee7812b202" translate="yes" xml:space="preserve">
          <source>These return, respectively, the previous node and the next node of &lt;var&gt;node&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt;.</source>
          <target state="translated">これらはそれぞれ、 &lt;var&gt;ewoc&lt;/var&gt; のノードの前のノードと次の &lt;var&gt;node&lt;/var&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="739a145c115b98a28b37f057c49f7f8134102375" translate="yes" xml:space="preserve">
          <source>These search functions convert the regular expression to multibyte if the buffer is multibyte; they convert the regular expression to unibyte if the buffer is unibyte. See &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;.</source>
          <target state="translated">これらの検索関数は、バッファがマルチバイトの場合、正規表現をマルチバイトに変換します。バッファがユニバイトの場合、正規表現をユニバイトに変換します。&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;テキスト表現を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cad6f6a80c908d9567b01aa919faa1349448d0c5" translate="yes" xml:space="preserve">
          <source>These search functions convert the search string to multibyte if the buffer is multibyte; they convert the search string to unibyte if the buffer is unibyte. See &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;.</source>
          <target state="translated">これらの検索関数は、バッファがマルチバイトの場合、検索文字列をマルチバイトに変換します。バッファがユニバイトの場合、検索文字列をユニバイトに変換します。&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;テキスト表現を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bd2b14d5ec156e1364acc616d89bab67278f031d" translate="yes" xml:space="preserve">
          <source>These sequences which start with backslash are also known as &lt;em&gt;escape sequences&lt;/em&gt;, because backslash plays the role of an escape character; this has nothing to do with the character</source>
          <target state="translated">バックスラッシュで始まるこれらのシーケンスは、バックスラッシュがエスケープ文字の役割を果たすため、&lt;em&gt;エスケープシーケンス&lt;/em&gt;とも呼ばれます。これはキャラクターとは何の関係もありません</target>
        </trans-unit>
        <trans-unit id="456dfa373a289f0f0b4deebb6c8a4d3795bcf6cb" translate="yes" xml:space="preserve">
          <source>These set the &lt;code&gt;:foreground&lt;/code&gt; attribute (or &lt;code&gt;:background&lt;/code&gt; attribute, respectively) of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;color&lt;/var&gt;.</source>
          <target state="translated">これらは、 &lt;var&gt;face&lt;/var&gt; の &lt;code&gt;:foreground&lt;/code&gt; 属性（または &lt;code&gt;:background&lt;/code&gt; 属性）を &lt;var&gt;color&lt;/var&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="4361dc475638198651233d489b0c06358bc64f73" translate="yes" xml:space="preserve">
          <source>These specify the text to display before and after a button. Each can be:</source>
          <target state="translated">ボタンの前後に表示するテキストを指定します。それぞれを指定することができます。</target>
        </trans-unit>
        <trans-unit id="aae1e62c125521a40620f94052f6c91a214adc3a" translate="yes" xml:space="preserve">
          <source>These text properties affect the behavior of the fill commands. They are used for representing formatted text. See &lt;a href=&quot;filling#Filling&quot;&gt;Filling&lt;/a&gt;, and &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">これらのテキストプロパティは、塗りつぶしコマンドの動作に影響します。これらは、フォーマットされたテキストを表すために使用されます。&lt;a href=&quot;filling#Filling&quot;&gt;塗りつぶし&lt;/a&gt;、および&lt;a href=&quot;margins#Margins&quot;&gt;マージンを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f87d3b575a3c7c8a91b4b2214f3ee45679d4e508" translate="yes" xml:space="preserve">
          <source>These types are the first-class citizens of an internal type system. Since the tag space is limited, all other types are the subtypes of &lt;code&gt;Lisp_Vectorlike&lt;/code&gt;. Vector subtypes are enumerated by &lt;code&gt;enum pvec_type&lt;/code&gt;, and nearly all complex objects like windows, buffers, frames, and processes fall into this category.</source>
          <target state="translated">これらの型は、内部型システムの第一級市民です。タグスペースが限られているので、他のすべてのタイプは &lt;code&gt;Lisp_Vectorlike&lt;/code&gt; のサブタイプです。ベクトルサブタイプは列挙型 &lt;code&gt;enum pvec_type&lt;/code&gt; によって列挙され、ウィンドウ、バッファー、フレーム、プロセスなどのほぼすべての複雑なオブジェクトがこのカテゴリに分類されます。</target>
        </trans-unit>
        <trans-unit id="45b8c3a592e7f6abf7e293e1c03ad1586a17177b" translate="yes" xml:space="preserve">
          <source>These variables affect newly created frames. They do not normally affect existing frames; however, if you set the mouse color of a frame, that also installs the current value of those two variables. See &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Font and Color Parameters&lt;/a&gt;.</source>
          <target state="translated">これらの変数は、新しく作成されたフレームに影響します。通常、既存のフレームには影響しません。ただし、フレームのマウスの色を設定すると、これら2つの変数の現在の値もインストールされます。&lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;フォントと色のパラメータを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c3bd982161583df9a64b8b6e96576aac88da7ce8" translate="yes" xml:space="preserve">
          <source>These variables are used by users to control what happens when a Lisp program reports a warning.</source>
          <target state="translated">これらの変数は、Lisp プログラムが警告を報告したときに何が起こるかを制御するためにユーザが使用します。</target>
        </trans-unit>
        <trans-unit id="1db6b1b9fba288780dcd3afa212e5cf3e56eb6c2" translate="yes" xml:space="preserve">
          <source>These variables are used for detecting and reporting circular and shared structure:</source>
          <target state="translated">これらの変数は、循環構造と共有構造を検出して報告するために使用されます。</target>
        </trans-unit>
        <trans-unit id="105e44643481b52f29feb563c36e254820e60447" translate="yes" xml:space="preserve">
          <source>These variables control details of how the echo area works.</source>
          <target state="translated">これらの変数は、エコー領域がどのように動作するかの詳細を制御します。</target>
        </trans-unit>
        <trans-unit id="8264858250c0b5c5b182cf58fd1f9b100b7739a2" translate="yes" xml:space="preserve">
          <source>They occupy one-fourth the space of a vector of the same elements.</source>
          <target state="translated">それらは同じ要素のベクトルの1/4の空間を占めます。</target>
        </trans-unit>
        <trans-unit id="96fd86992c2d294dc7c966a9cc379303e0e5acd0" translate="yes" xml:space="preserve">
          <source>Things you should think about when you define a variable.</source>
          <target state="translated">変数を定義するときに考えるべきこと</target>
        </trans-unit>
        <trans-unit id="85f58635e7a6031c4a0dd6f3081e83750aac35d0" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;cond&lt;/code&gt; expression returns &lt;code&gt;foo&lt;/code&gt; if the value of &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;hack&lt;/code&gt;, and returns the string &lt;code&gt;&quot;default&quot;&lt;/code&gt; otherwise.</source>
          <target state="translated">この &lt;code&gt;cond&lt;/code&gt; 式は、 &lt;code&gt;a&lt;/code&gt; の値が &lt;code&gt;hack&lt;/code&gt; の場合は &lt;code&gt;foo&lt;/code&gt; を返し、それ以外の場合は文字列 &lt;code&gt;&quot;default&quot;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b703be92a7238d219e5c1003ffb23f6cb975b30b" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns non-nil if there is a fake header at &lt;var&gt;pos&lt;/var&gt;. A fake header is used if &lt;code&gt;tabulated-list-use-header-line&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; to put the column names at the beginning of the buffer. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;pos&lt;/var&gt; defaults to &lt;code&gt;point-min&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;defsubst&lt;/code&gt; は、 &lt;var&gt;pos&lt;/var&gt; に偽のヘッダーがある場合、nil以外を返します。 &lt;code&gt;tabulated-list-use-header-line&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、偽のヘッダーが使用され、列名がバッファーの先頭に配置されます。省略または &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;var&gt;pos&lt;/var&gt; はデフォルトで &lt;code&gt;point-min&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="48176d2024c8007a4ac5be85e04bd56a7171720e" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns the ID object from &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if that is a list) or from the list returned by &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if it is a function). If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;pos&lt;/var&gt; defaults to point.</source>
          <target state="translated">この &lt;code&gt;defsubst&lt;/code&gt; は、 &lt;code&gt;tabulated-list-entries&lt;/code&gt; （リストの場合）または &lt;code&gt;tabulated-list-entries&lt;/code&gt; （関数の場合）によって返されるリストからIDオブジェクトを返します。省略または &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;var&gt;pos&lt;/var&gt; はデフォルトでpointになります。</target>
        </trans-unit>
        <trans-unit id="cb3d98858d13b8b6d93ec3bd144c3be22d5c1298" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns the entry object from &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if that is a list) or from the list returned by &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if it is a function). This will be a vector for the ID at &lt;var&gt;pos&lt;/var&gt;. If there is no entry at &lt;var&gt;pos&lt;/var&gt;, then the function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;defsubst&lt;/code&gt; は、 &lt;code&gt;tabulated-list-entries&lt;/code&gt; （リストの場合）または &lt;code&gt;tabulated-list-entries&lt;/code&gt; （関数の場合）によって返されるリストからエントリオブジェクトを返します。これは、 &lt;var&gt;pos&lt;/var&gt; のIDのベクトルになります。 &lt;var&gt;pos&lt;/var&gt; にエントリがない場合、関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1ec261da340db358d40d23007d994d2a60279eb6" translate="yes" xml:space="preserve">
          <source>This API has mandatory and optional parts.</source>
          <target state="translated">このAPIには必須部分とオプション部分があります。</target>
        </trans-unit>
        <trans-unit id="b7609c40d243bed2533715ddbd3d688727dca73c" translate="yes" xml:space="preserve">
          <source>This abnormal hook exists for the benefit of packages like</source>
          <target state="translated">この異常なフックは</target>
        </trans-unit>
        <trans-unit id="58753480194a35a20eca9121e273f8370cbd4c6b" translate="yes" xml:space="preserve">
          <source>This abnormal hook is a list of functions to call when Emacs needs to display a tooltip. Each function is called with a single argument &lt;var&gt;event&lt;/var&gt; which is a copy of the last mouse movement event. If a function on this list actually displays the tooltip, it should return non-&lt;code&gt;nil&lt;/code&gt;, and then the rest of the functions will not be called. The default value of this variable is a single function &lt;code&gt;tooltip-help-tips&lt;/code&gt;.</source>
          <target state="translated">この異常なフックは、Emacsがツールチップを表示する必要があるときに呼び出す関数のリストです。各関数は、最後のマウス移動イベントのコピーである単一の引数 &lt;var&gt;event&lt;/var&gt; で呼び出されます。このリストの関数が実際にツールチップを表示する場合、 &lt;code&gt;nil&lt;/code&gt; 以外を返す必要があります。そうしないと、残りの関数は呼び出されません。この変数のデフォルト値は、単一の関数 &lt;code&gt;tooltip-help-tips&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="79fc999f2d6f734a8d2f583e4c9251e7567de0ff" translate="yes" xml:space="preserve">
          <source>This abnormal hook is run after loading a file. Each function in the hook is called with a single argument, the absolute filename of the file that was just loaded.</source>
          <target state="translated">この異常なフックは、ファイルをロードした後に実行されます。フック内の各関数は、読み込まれたばかりのファイルの絶対ファイル名という単一の引数で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9e18cb58ef8cb625a4bc43d899fbc09ba5220975" translate="yes" xml:space="preserve">
          <source>This abnormal hook is run by the syntax parsing code prior to calling &lt;code&gt;syntax-propertize-function&lt;/code&gt;. Its role is to help locate safe starting and ending buffer positions for passing to &lt;code&gt;syntax-propertize-function&lt;/code&gt;. For example, a major mode can add a function to this hook to identify multi-line syntactic constructs, and ensure that the boundaries do not fall in the middle of one.</source>
          <target state="translated">この異常なフックは、 &lt;code&gt;syntax-propertize-function&lt;/code&gt; を呼び出す前に構文解析コードによって実行されます。その役割は、 &lt;code&gt;syntax-propertize-function&lt;/code&gt; に渡すための安全な開始バッファー位置と終了バッファー位置を見つけるのに役立つことです。たとえば、メジャーモードでは、このフックに関数を追加して、複数行の構文構造を識別し、境界が境界の中央に収まらないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="d6f96d5f610333f2d917ab647cc390f66c9defed" translate="yes" xml:space="preserve">
          <source>This abnormal hook permits a derived mode to supply a password for the underlying command interpreter without prompting the user.</source>
          <target state="translated">この異常なフックは、派生モードがユーザにプロンプトを出さずに、基礎となるコマンドインタプリタのパスワードを提供することを可能にします。</target>
        </trans-unit>
        <trans-unit id="6f123b63749113b196200986d7076efd408e9046" translate="yes" xml:space="preserve">
          <source>This acts like a call to &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; (see &lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;Obsolete Functions&lt;/a&gt;); &lt;var&gt;signature&lt;/var&gt; specifies the correct argument list for calling the function or macro, and &lt;var&gt;when&lt;/var&gt; should be a string indicating when the old argument list was first made obsolete.</source>
          <target state="translated">これは、 &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; の呼び出しのように&lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;機能し&lt;/a&gt;ます（廃止された関数を参照）。 &lt;var&gt;signature&lt;/var&gt; 関数やマクロを呼び出すための正しい引数リストを指定し、 &lt;var&gt;when&lt;/var&gt; 古い引数リストが最初に廃止されたかを示す文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3efa63614ced0a11b3c72a7ee627168a41a3f6a6" translate="yes" xml:space="preserve">
          <source>This adds &lt;code&gt;comint&lt;/code&gt; to the global &lt;code&gt;features&lt;/code&gt; list, so that &lt;code&gt;(require 'comint)&lt;/code&gt; will henceforth know that nothing needs to be done.</source>
          <target state="translated">これにより、 &lt;code&gt;comint&lt;/code&gt; がグローバル &lt;code&gt;features&lt;/code&gt; リストに追加されるため、 &lt;code&gt;(require 'comint)&lt;/code&gt; は、今後何もする必要がないことを認識します。</target>
        </trans-unit>
        <trans-unit id="43afc452dbf0605822321a1093e4e4cd228c755d" translate="yes" xml:space="preserve">
          <source>This adds a shadow rectangle around the image. The value, &lt;var&gt;relief&lt;/var&gt;, specifies the width of the shadow lines, in pixels. If &lt;var&gt;relief&lt;/var&gt; is negative, shadows are drawn so that the image appears as a pressed button; otherwise, it appears as an unpressed button.</source>
          <target state="translated">これにより、画像の周囲に影の長方形が追加されます。値 &lt;var&gt;relief&lt;/var&gt; は、シャドウラインの幅をピクセル単位で指定します。 &lt;var&gt;relief&lt;/var&gt; が負の場合、画像が押されたボタンとして表示されるように影が描画されます。それ以外の場合は、押されていないボタンとして表示されます。</target>
        </trans-unit>
        <trans-unit id="1a801bffd8f04ef31dc913229d1561a41fc7042e" translate="yes" xml:space="preserve">
          <source>This alist contains connection criteria and their assigned profile names. The function &lt;code&gt;connection-local-set-profiles&lt;/code&gt; updates this list.</source>
          <target state="translated">このリストには、接続基準とそれに割り当てられたプロファイル名が含まれています。関数 &lt;code&gt;connection-local-set-profiles&lt;/code&gt; は、このリストを更新します。</target>
        </trans-unit>
        <trans-unit id="4f4502b00e41d7ca380ee4cfc50445848b782901" translate="yes" xml:space="preserve">
          <source>This alist holds directory names, their assigned class names, and modification times of the associated directory local variables file (if there is one). The function &lt;code&gt;dir-locals-set-directory-class&lt;/code&gt; updates this list.</source>
          <target state="translated">このリストには、ディレクトリ名、割り当てられたクラス名、および関連付けられたディレクトリローカル変数ファイル（存在する場合）の変更時刻が保持されます。関数 &lt;code&gt;dir-locals-set-directory-class&lt;/code&gt; は、このリストを更新します。</target>
        </trans-unit>
        <trans-unit id="a8ab290d6f51f915395187d421755332681e880d" translate="yes" xml:space="preserve">
          <source>This alist holds the class symbols and the associated variable settings. It is updated by &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt;.</source>
          <target state="translated">このリストは、クラスシンボルと関連する変数設定を保持します。これは、 &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt; によって更新されます。</target>
        </trans-unit>
        <trans-unit id="bc82ba461075944d297062d4c28cc81706a37309" translate="yes" xml:space="preserve">
          <source>This alist holds the connection profile symbols and the associated variable settings. It is updated by &lt;code&gt;connection-local-set-profile-variables&lt;/code&gt;.</source>
          <target state="translated">このリストは、接続プロファイルシンボルと関連する変数設定を保持します。これは、 &lt;code&gt;connection-local-set-profile-variables&lt;/code&gt; によって更新されます。</target>
        </trans-unit>
        <trans-unit id="8171e356e7dd4f8499ba5a1da391cc53d0f4bd00" translate="yes" xml:space="preserve">
          <source>This alist provides a mapping for the versions of Emacs that are associated with versions of a package listed in the &lt;code&gt;:package-version&lt;/code&gt; keyword. Its elements are:</source>
          <target state="translated">このリストは、 &lt;code&gt;:package-version&lt;/code&gt; キーワードにリストされているパッケージのバージョンに関連付けられているEmacsのバージョンのマッピングを提供します。その要素は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="06592cb7cf21d4fcaa0dee8cb5604b4348587185" translate="yes" xml:space="preserve">
          <source>This allows you to add more methods, distinguished by &lt;var&gt;string&lt;/var&gt;, for the same specializers and qualifiers.</source>
          <target state="translated">これにより、同じスペシャライザーと修飾子に対して、 &lt;var&gt;string&lt;/var&gt; で区別されるメソッドをさらに追加できます。</target>
        </trans-unit>
        <trans-unit id="c16f689854eb14d66c247d3bf3249725e2f016e1" translate="yes" xml:space="preserve">
          <source>This allows you to request an exact string match or search when calling a function that wants a regular expression.</source>
          <target state="translated">これにより、正規表現を必要とする関数を呼び出す際に、正確な文字列の一致や検索を要求することができます。</target>
        </trans-unit>
        <trans-unit id="47fb6ce0a178b4dc9378256a543571c1df9a44d5" translate="yes" xml:space="preserve">
          <source>This alternative can match any Lisp value, but if the user chooses this alternative, that selects the value &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">この代替案は任意のLisp値に一致する可能性がありますが、ユーザーがこの代替案を選択すると、値 &lt;var&gt;value&lt;/var&gt; が選択されます。</target>
        </trans-unit>
        <trans-unit id="112333b5519a3aed32902f3bc5970788aac3b12d" translate="yes" xml:space="preserve">
          <source>This appears in the customization buffer as a checklist, so that each of &lt;var&gt;types&lt;/var&gt; may have either one corresponding element or none. It is not possible to specify two different elements that match the same one of &lt;var&gt;types&lt;/var&gt;. For example, &lt;code&gt;(set integer symbol)&lt;/code&gt; allows one integer and/or one symbol in the list; it does not allow multiple integers or multiple symbols. As a result, it is rare to use nonspecific types such as &lt;code&gt;integer&lt;/code&gt; in a &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">これはカスタマイズバッファにチェックリストとして表示されるため、各 &lt;var&gt;types&lt;/var&gt; は対応する要素が1つある場合とない場合があります。同じ &lt;var&gt;types&lt;/var&gt; 1つに一致する2つの異なる要素を指定することはできません。たとえば、 &lt;code&gt;(set integer symbol)&lt;/code&gt; は、リスト内で1つの整数および/または1つのシンボルを許可します。複数の整数または複数の記号は使用できません。結果として、次のような非特異的なタイプを使用することはまれである &lt;code&gt;integer&lt;/code&gt; で &lt;code&gt;set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b36ce3a8c3a8ed5189ac8face0c668655a5e5f4c" translate="yes" xml:space="preserve">
          <source>This associates an image map of &lt;em&gt;hot spots&lt;/em&gt; with this image.</source>
          <target state="translated">これにより、&lt;em&gt;ホットスポットの&lt;/em&gt;イメージマップがこの画像に関連付けられます。</target>
        </trans-unit>
        <trans-unit id="03693e568733886d4ead4bbfaae6a08b9fdd7df3" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run &lt;em&gt;instead&lt;/em&gt; of the primary method. The most specific of such methods will be run before any other method. Such methods normally use &lt;code&gt;cl-call-next-method&lt;/code&gt;, described below, to invoke the other auxiliary or primary methods.</source>
          <target state="translated">この補助メソッドは、プライマリメソッドの&lt;em&gt;代わり&lt;/em&gt;に実行されます。このようなメソッドの中で最も具体的なものは、他のメソッドよりも先に実行されます。このようなメソッドは通常、以下で説明する &lt;code&gt;cl-call-next-method&lt;/code&gt; を使用して、他の補助メソッドまたはプライマリメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="db147a312f33833d2fd860cd24397cb31dbf000a" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run after the primary method. More accurately, all such methods will run after the primary, in the most-specific-last order.</source>
          <target state="translated">この補助メソッドは、プライマリ・メソッドの後に実行されます。より正確には、このようなすべてのメソッドがプライマリの後に、最も特異的な最後の順番で実行されます。</target>
        </trans-unit>
        <trans-unit id="055c47046a5c43dada4f7a4d408ec55ea04beec6" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run before the primary method. More accurately, all the &lt;code&gt;:before&lt;/code&gt; methods will run before the primary, in the most-specific-first order.</source>
          <target state="translated">この補助メソッドは、プライマリメソッドの前に実行されます。より正確には、すべての &lt;code&gt;:before&lt;/code&gt; メソッドは、最も具体的な最初の順序で、プライマリの前に実行されます。</target>
        </trans-unit>
        <trans-unit id="bee7bb3a89efc2fe0ae6cd1401c2134693f080dd" translate="yes" xml:space="preserve">
          <source>This behaves correctly whether or not &lt;code&gt;foo-mode&lt;/code&gt; was already enabled, since the &lt;code&gt;foo-mode&lt;/code&gt; mode command unconditionally enables the minor mode when it is called from Lisp with no argument. Disabling a minor mode in a mode hook is a little uglier:</source>
          <target state="translated">&lt;code&gt;foo-mode&lt;/code&gt; modeコマンドは、引数なしでLispから呼び出されたときにマイナーモードを無条件に有効にするため、これは &lt;code&gt;foo-mode&lt;/code&gt; がすでに有効になっているかどうかに関係なく正しく動作します。モードフックでマイナーモードを無効にするのは少し醜いです：</target>
        </trans-unit>
        <trans-unit id="39ca8e6d40bb48a402fdef66a4a6b1b4a21a323e" translate="yes" xml:space="preserve">
          <source>This behaves like &lt;code&gt;scroll-down&lt;/code&gt;, except that if the selected window cannot be scrolled any further and the value of the variable &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, it tries to move to the beginning of the buffer instead. If point is already there, it signals an error.</source>
          <target state="translated">これは &lt;code&gt;scroll-down&lt;/code&gt; ように動作しますが、選択したウィンドウをそれ以上スクロールできず、変数 &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; の値が &lt;code&gt;t&lt;/code&gt; の場合、代わりにバッファーの先頭に移動しようとします。ポイントがすでに存在する場合は、エラーを通知します。</target>
        </trans-unit>
        <trans-unit id="7f36ad1f78e72aecbe8b2c0b04e86ce649b99772" translate="yes" xml:space="preserve">
          <source>This behaves like &lt;code&gt;scroll-up&lt;/code&gt;, except that if the selected window cannot be scrolled any further and the value of the variable &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, it tries to move to the end of the buffer instead. If point is already there, it signals an error.</source>
          <target state="translated">これは &lt;code&gt;scroll-up&lt;/code&gt; ように動作しますが、選択したウィンドウをそれ以上スクロールできず、変数 &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; の値が &lt;code&gt;t&lt;/code&gt; の場合、代わりにバッファーの最後に移動しようとします。ポイントがすでに存在する場合は、エラーを通知します。</target>
        </trans-unit>
        <trans-unit id="1ac98d0eafcb4e384476c40a7a906cd36426c915" translate="yes" xml:space="preserve">
          <source>This behavior is system-dependent; e.g., punctuation and whitespace are never ignored on Cygwin, regardless of locale.</source>
          <target state="translated">この動作はシステムに依存します。例えば、ロケールに関係なく、Cygwinでは句読点や空白が無視されることはありません。</target>
        </trans-unit>
        <trans-unit id="854a75c9a12be07e055ae41e6e28be84d26fe4fb" translate="yes" xml:space="preserve">
          <source>This buffer-local variable contains the mode line information on process status in modes used for communicating with subprocesses. It is displayed immediately following the major mode name, with no intervening space. For example, its value in the</source>
          <target state="translated">このバッファローカル変数は、サブプロセスとの通信に使用されるモードのプロセス状態に関するモード行の情報を含みます。メジャーモード名の直後に表示され、間にスペースを入れずに表示されます。例えば</target>
        </trans-unit>
        <trans-unit id="26971293cec1b62350ce5f2ec93656e3fec17bfe" translate="yes" xml:space="preserve">
          <source>This buffer-local variable contains the name of the file being visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if it is not visiting a file. It is a permanent local variable, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;.</source>
          <target state="translated">このバッファローカル変数には、現在のバッファでアクセスされているファイルの名前が含まれます。ファイルにアクセスしていない場合は &lt;code&gt;nil&lt;/code&gt; が含まれます。これは永続的なローカル変数であり、 &lt;code&gt;kill-all-local-variables&lt;/code&gt; の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="9b4f48a9402ce9021fdac6a00491950abfac8906" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how control characters are displayed. If it is non-&lt;code&gt;nil&lt;/code&gt;, they are displayed as a caret followed by the character: &amp;lsquo;</source>
          <target state="translated">このバッファローカル変数は、制御文字の表示方法を制御します。それが非であれば &lt;code&gt;nil&lt;/code&gt; を、彼らは文字が続くキャレットのように表示されます。 '</target>
        </trans-unit>
        <trans-unit id="b82206ceced11bfe56f1845c4f3c481cd88baf44" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the buffer boundaries and window scrolling are indicated in the window fringes.</source>
          <target state="translated">このバッファローカル変数は、バッファの境界とウィンドウのスクロールがウィンドウの縁でどのように表示されるかを制御します。</target>
        </trans-unit>
        <trans-unit id="d47a47cdae3010d7867a8d17862f4b478496c7b9" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the cursor looks in a selected window showing the buffer. If its value is &lt;code&gt;t&lt;/code&gt;, that means to use the cursor specified by the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter. Otherwise, the value should be one of the cursor types listed above, and it overrides the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</source>
          <target state="translated">このバッファローカル変数は、バッファを表示している選択されたウィンドウでのカーソルの外観を制御します。その値が &lt;code&gt;t&lt;/code&gt; の場合、それは、 &lt;code&gt;cursor-type&lt;/code&gt; typeframeパラメーターで指定されたカーソルを使用することを意味します。それ以外の場合、値は上記のカーソルタイプのいずれかである必要があり、カーソルタイプのフレームパラメータを上書きし &lt;code&gt;cursor-type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1ca4aa7c82d737697dd8d0d960d00652e403afa" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the cursor looks in a window that is not selected. It supports the same values as the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter; also, &lt;code&gt;nil&lt;/code&gt; means don&amp;rsquo;t display a cursor in nonselected windows, and &lt;code&gt;t&lt;/code&gt; (the default) means use a standard modification of the usual cursor type (solid box becomes hollow box, and bar becomes a narrower bar).</source>
          <target state="translated">このバッファローカル変数は、選択されていないウィンドウでのカーソルの外観を制御します。 &lt;code&gt;cursor-type&lt;/code&gt; フレームパラメータと同じ値をサポートします。また、 &lt;code&gt;nil&lt;/code&gt; は、選択されていないウィンドウにカーソルを表示しないことを意味し、 &lt;code&gt;t&lt;/code&gt; （デフォルト）は、通常のカーソルタイプの標準的な変更を使用することを意味します（中実のボックスは中空のボックスになり、バーはより狭いバーになります）。</target>
        </trans-unit>
        <trans-unit id="0dd7b89ebde5a492e44d747fc9dd3f1d69d5200e" translate="yes" xml:space="preserve">
          <source>This buffer-local variable determines whether searches should ignore case. If the variable is &lt;code&gt;nil&lt;/code&gt; they do not ignore case; otherwise (and by default) they do ignore case.</source>
          <target state="translated">このバッファローカル変数は、検索で大文字と小文字を区別するかどうかを決定します。変数が &lt;code&gt;nil&lt;/code&gt; の場合、大文字と小文字は区別されません。それ以外の場合（およびデフォルトで）、大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="a8e930f5d382fe096fe2bc1869a2652b42c52937" translate="yes" xml:space="preserve">
          <source>This buffer-local variable enables selective display. This means that lines, or portions of lines, may be made hidden.</source>
          <target state="translated">このバッファローカル変数は、選択的表示を可能にします。これは、行または行の一部を非表示にすることができることを意味します。</target>
        </trans-unit>
        <trans-unit id="6ba2f1b5a0e175e95a9ac3488fc6f3ef00d32ac1" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the &amp;ldquo;pretty&amp;rdquo; name of the current buffer&amp;rsquo;s major mode. Each major mode should set this variable so that the mode name will appear in the mode line. The value does not have to be a string, but can use any of the data types valid in a mode-line construct (see &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;). To compute the string that will identify the mode name in the mode line, use &lt;code&gt;format-mode-line&lt;/code&gt; (see &lt;a href=&quot;emulating-mode-line#Emulating-Mode-Line&quot;&gt;Emulating Mode Line&lt;/a&gt;).</source>
          <target state="translated">このバッファローカル変数は、現在のバッファのメジャーモードの「きれいな」名前を保持します。各メジャーモードは、モード名がモード行に表示されるようにこの変数を設定する必要があります。値は文字列である必要はありませんが、モードライン構造で有効な任意のデータ型を使用できます（&lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;モードラインデータを&lt;/a&gt;参照）。モードラインのモード名を識別する文字列を計算するには、 &lt;code&gt;format-mode-line&lt;/code&gt; を使用します（「&lt;a href=&quot;emulating-mode-line#Emulating-Mode-Line&quot;&gt;モードラインのエミュレート」を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="4e124125cb63da0d14822f14f50cd5c731f1bc04" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the abbreviated truename of the file visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if no file is visited. It is a permanent local, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;. See &lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt;, and &lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;abbreviate-file-name&lt;/a&gt;.</source>
          <target state="translated">このバッファローカル変数は、現在のバッファでアクセスされたファイルの省略されたtrue名を保持し、ファイルがアクセスされていない場合は &lt;code&gt;nil&lt;/code&gt; を保持します。これは永続的なローカルであり、 &lt;code&gt;kill-all-local-variables&lt;/code&gt; の影響を受けません。&lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt;およびabscribe &lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;-file-nameを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9b844703a84e21272992606a4863c03e4e7e789d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the alist of file-local variable settings. Each element of the alist is of the form &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;var&lt;/var&gt; is a symbol of the local variable and &lt;var&gt;value&lt;/var&gt; is its value. When Emacs visits a file, it first collects all the file-local variables into this alist, and then the &lt;code&gt;hack-local-variables&lt;/code&gt; function applies them one by one.</source>
          <target state="translated">このバッファローカル変数は、ファイルローカル変数設定のリストを保持します。連想リストの各要素は次の形式である &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;var&lt;/var&gt; はローカル変数のシンボルであり、 &lt;var&gt;value&lt;/var&gt; その値です。Emacsがファイルにアクセスすると、最初にすべてのファイルローカル変数をこのリストに収集し、次に &lt;code&gt;hack-local-variables&lt;/code&gt; 関数がそれらを1つずつ適用します。</target>
        </trans-unit>
        <trans-unit id="5fc5aab80adcb832f12f4a45e3b6e909ebe80df5" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the file number and directory device number of the file visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if no file or a nonexistent file is visited. It is a permanent local, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;.</source>
          <target state="translated">このバッファローカル変数は、現在のバッファでアクセスされたファイルのファイル番号とディレクトリデバイス番号を保持します。ファイルがないか存在しないファイルがアクセスされた場合は &lt;code&gt;nil&lt;/code&gt; を保持します。これは永続的なローカルであり、 &lt;code&gt;kill-all-local-variables&lt;/code&gt; の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="a451d75ee2557e01f0400b09d2af9045e48761c6" translate="yes" xml:space="preserve">
          <source>This buffer-local variable is either &lt;code&gt;nil&lt;/code&gt; or a function for Font Lock mode to call to determine the region to scan and fontify.</source>
          <target state="translated">このバッファローカル変数は、 &lt;code&gt;nil&lt;/code&gt; またはフォントロックモードがスキャンおよびフォント化する領域を決定するために呼び出す関数のいずれかです。</target>
        </trans-unit>
        <trans-unit id="c4881b1a5764ec2cc333276f7885b261fa887500" translate="yes" xml:space="preserve">
          <source>This buffer-local variable is the name of the file used for auto-saving the current buffer. It is &lt;code&gt;nil&lt;/code&gt; if the buffer should not be auto-saved.</source>
          <target state="translated">このバッファローカル変数は、現在のバッファを自動保存するために使用されるファイルの名前です。バッファを自動保存しない場合は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="92e1c1c14e58f4755d743d128bbd4758cf2daf8e" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the coding system used for saving the buffer and for writing part of the buffer with &lt;code&gt;write-region&lt;/code&gt;. If the text to be written cannot be safely encoded using the coding system specified by this variable, these operations select an alternative encoding by calling the function &lt;code&gt;select-safe-coding-system&lt;/code&gt; (see &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;User-Chosen Coding Systems&lt;/a&gt;). If selecting a different encoding requires to ask the user to specify a coding system, &lt;code&gt;buffer-file-coding-system&lt;/code&gt; is updated to the newly selected coding system.</source>
          <target state="translated">このバッファローカル変数は、バッファを保存し、 &lt;code&gt;write-region&lt;/code&gt; を使用してバッファの一部を書き込むために使用されるコーディングシステムを記録します。この変数で指定されたコーディングシステムを使用して、書き込むテキストを安全にエンコードできない場合、これらの操作は、関数 &lt;code&gt;select-safe-coding-system&lt;/code&gt; を呼び出して代替エンコードを選択します（&lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;ユーザーが選択したコーディングシステムを&lt;/a&gt;参照）。別のエンコーディングを選択するためにユーザーにコーディングシステムを指定するように求める必要がある場合、 &lt;code&gt;buffer-file-coding-system&lt;/code&gt; は新しく選択されたコーディングシステムに更新されます。</target>
        </trans-unit>
        <trans-unit id="17efdfc6682eda1e0603a92ff93b7b0758219f13" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the number of times a buffer has been displayed in a window. It is incremented each time &lt;code&gt;set-window-buffer&lt;/code&gt; is called for the buffer.</source>
          <target state="translated">このバッファローカル変数は、ウィンドウにバッファが表示された回数を記録します。これは、 &lt;code&gt;set-window-buffer&lt;/code&gt; がバッファーに対して呼び出されるたびに増分されます。</target>
        </trans-unit>
        <trans-unit id="490c47d457b534b7dc5f22d93a13a9aa33bae8cf" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the time at which a buffer was last displayed in a window. The value is &lt;code&gt;nil&lt;/code&gt; if the buffer has never been displayed. It is updated each time &lt;code&gt;set-window-buffer&lt;/code&gt; is called for the buffer, with the value returned by &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">このバッファローカル変数は、バッファが最後にウィンドウに表示された時刻を記録します。バッファが表示されたことがない場合、値は &lt;code&gt;nil&lt;/code&gt; です。これは、 &lt;code&gt;set-window-buffer&lt;/code&gt; がバッファーに対して呼び出されるたびに更新され、 &lt;code&gt;current-time&lt;/code&gt; によって返される値になります（&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;時刻を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="a8f2327684accfcd211b2b72beee01fea76508f1" translate="yes" xml:space="preserve">
          <source>This buffer-local variable says whether this buffer&amp;rsquo;s file has been backed up on account of this buffer. If it is non-&lt;code&gt;nil&lt;/code&gt;, the backup file has been written. Otherwise, the file should be backed up when it is next saved (if backups are enabled). This is a permanent local; &lt;code&gt;kill-all-local-variables&lt;/code&gt; does not alter it.</source>
          <target state="translated">このバッファローカル変数は、このバッファのファイルがこのバッファのためにバックアップされているかどうかを示します。 &lt;code&gt;nil&lt;/code&gt; 以外の場合は、バックアップファイルが書き込まれています。それ以外の場合は、次に保存するときにファイルをバックアップする必要があります（バックアップが有効になっている場合）。これは恒久的なローカルです。 &lt;code&gt;kill-all-local-variables&lt;/code&gt; はそれを変更しません。</target>
        </trans-unit>
        <trans-unit id="a6afe8a14ae8e8b156dda8ff2db27360c5718f45" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies a string to display in a buffer listing where the visited file name would go, for buffers that don&amp;rsquo;t have a visited file name. Dired buffers use this variable.</source>
          <target state="translated">このbuffer-local変数は、訪問済みファイル名を持たないバッファーの場合に、訪問済みファイル名が移動するバッファー・リストに表示する文字列を指定します。Diredバッファはこの変数を使用します。</target>
        </trans-unit>
        <trans-unit id="33f15a604b26fdc36df67e09f9ee034fbd85e8f8" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the entries displayed in the Tabulated List buffer. Its value should be either a list, or a function.</source>
          <target state="translated">このバッファローカル変数は、表形式リストバッファに表示されるエントリを指定します。その値はリストか関数のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="1f21c98e32a9f3b76b68fe2c0ec081e8dc6806ef" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the format of the Tabulated List data. Its value should be a vector. Each element of the vector represents a data column, and should be a list &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;
&lt;var&gt;width&lt;/var&gt; &lt;var&gt;sort&lt;/var&gt;)&lt;/code&gt;, where</source>
          <target state="translated">このバッファローカル変数は、表形式リストデータの形式を指定します。その値はベクトルである必要があります。ベクトルの各要素はデータ列を表し、リスト &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;width&lt;/var&gt; &lt;var&gt;sort&lt;/var&gt;)&lt;/code&gt; である必要があります。ここで</target>
        </trans-unit>
        <trans-unit id="7d93991750b7ab5c35f32d42a2ffeee9b4c05c0b" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the mapping from logical fringe indicators to the actual bitmaps displayed in the window fringes. The value is an alist of elements &lt;code&gt;(&lt;var&gt;indicator&lt;/var&gt;
. &lt;var&gt;bitmaps&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;indicator&lt;/var&gt; specifies a logical indicator type and &lt;var&gt;bitmaps&lt;/var&gt; specifies the fringe bitmaps to use for that indicator.</source>
          <target state="translated">このバッファローカル変数は、論理フリンジインジケータからウィンドウフリンジに表示される実際のビットマップへのマッピングを指定します。値は、要素の連想リストである &lt;code&gt;(&lt;var&gt;indicator&lt;/var&gt; . &lt;var&gt;bitmaps&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;indicator&lt;/var&gt; 論理的インジケータの種類と指定 &lt;var&gt;bitmaps&lt;/var&gt; そのインジケータに使用するフリンジビットマップを指定します。</target>
        </trans-unit>
        <trans-unit id="95f79b46eda8b35210d2e89e82a7e8d8ef12856c" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the maximum width of filled lines. Its value should be an integer, which is a number of columns. All the filling, justification, and centering commands are affected by this variable, including Auto Fill mode (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;).</source>
          <target state="translated">このバッファローカル変数は、塗りつぶされた行の最大幅を指定します。その値は、列の数である整数である必要があります。すべての充填、正当化、センタリングコマンドが自動Fillモード（参照を含め、この変数に影響される&lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;自動充填&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f8f2592db81aaca5fc86b5802b4f2f8b03f39872" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies whether the buffer is read-only. The buffer is read-only if this variable is non-&lt;code&gt;nil&lt;/code&gt;. However, characters that have the &lt;code&gt;inhibit-read-only&lt;/code&gt; text property can still be modified. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;inhibit-read-only&lt;/a&gt;.</source>
          <target state="translated">このbuffer-local変数は、バッファーが読み取り専用かどうかを指定します。この変数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、バッファーは読み取り専用です。ただし、 &lt;code&gt;inhibit-read-only&lt;/code&gt; テキスト禁止プロパティを持つ文字は引き続き変更できます。&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;読み取り専用の禁止を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ba4e4c7bb2e6beb986d7edbdf9f9f73ca6bc6ef6" translate="yes" xml:space="preserve">
          <source>This buffer-local variable&amp;rsquo;s value is the undo list of the current buffer. A value of &lt;code&gt;t&lt;/code&gt; disables the recording of undo information.</source>
          <target state="translated">このバッファローカル変数の値は、現在のバッファの元に戻すリストです。 &lt;code&gt;t&lt;/code&gt; の値は、取り消し情報の記録を無効にします。</target>
        </trans-unit>
        <trans-unit id="0e00182350e8c8a67e59796df018436e5b1d317d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a string of text that appears at the beginning of normal text lines and should be disregarded when filling them. Any line that fails to start with the fill prefix is considered the start of a paragraph; so is any line that starts with the fill prefix followed by additional whitespace. Lines that start with the fill prefix but no additional whitespace are ordinary text lines that can be filled together. The resulting filled lines also start with the fill prefix.</source>
          <target state="translated">このバッファローカル変数は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、通常のテキスト行の先頭に表示されるテキストの文字列を指定します。これらの行を埋めるときは無視する必要があります。塗りつぶしプレフィックスで始まらない行は、段落の始まりと見なされます。塗りつぶしプレフィックスで始まり、その後に追加の空白が続く行も同様です。塗りつぶしプレフィックスで始まり、追加の空白がない行は、一緒に塗りつぶすことができる通常のテキスト行です。結果の塗りつぶされた行も、塗りつぶしプレフィックスで始まります。</target>
        </trans-unit>
        <trans-unit id="1f12b832fb97ab9906c39f3f82fb2c33f026453d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable, if set to a non-&lt;code&gt;nil&lt;/code&gt; value, makes &lt;code&gt;save-buffer&lt;/code&gt; behave as if the buffer were visiting its file literally, i.e., without conversions of any kind. The command &lt;code&gt;find-file-literally&lt;/code&gt; sets this variable&amp;rsquo;s local value, but other equivalent functions and commands can do that as well, e.g., to avoid automatic addition of a newline at the end of the file. This variable is permanent local, so it is unaffected by changes of major modes.</source>
          <target state="translated">このバッファローカル変数を &lt;code&gt;nil&lt;/code&gt; 以外の値に設定すると、 &lt;code&gt;save-buffer&lt;/code&gt; は、バッファが文字通りファイルにアクセスしているかのように動作します。つまり、いかなる種類の変換も行われません。コマンド &lt;code&gt;find-file-literally&lt;/code&gt; は文字通りこの変数のローカル値を設定しますが、他の同等の関数やコマンドも同様に設定できます。たとえば、ファイルの最後に改行が自動的に追加されないようにします。この変数は永続的なローカルであるため、メジャーモードの変更による影響を受けません。</target>
        </trans-unit>
        <trans-unit id="cf2cad6b6d3bf4768a93f4a38fbba84aa555a104" translate="yes" xml:space="preserve">
          <source>This built-in variable is the keymap used as the minibuffer local keymap in the function &lt;code&gt;read-no-blanks-input&lt;/code&gt;. By default, it makes the following bindings, in addition to those of &lt;code&gt;minibuffer-local-map&lt;/code&gt;:</source>
          <target state="translated">この組み込み変数は、関数 &lt;code&gt;read-no-blanks-input&lt;/code&gt; でミニバッファーローカルキーマップとして使用されるキーマップです。デフォルトでは、 &lt;code&gt;minibuffer-local-map&lt;/code&gt; のバインディングに加えて、次のバインディングが作成されます。</target>
        </trans-unit>
        <trans-unit id="8723bd0b8c12c1c24f9d8e83b7ed5a4f8794b456" translate="yes" xml:space="preserve">
          <source>This call evaluates the body of the lambda expression with the variable &lt;code&gt;a&lt;/code&gt; bound to 1, &lt;code&gt;b&lt;/code&gt; bound to 2, and &lt;code&gt;c&lt;/code&gt; bound to 3. Evaluation of the body adds these three numbers, producing the result 6; therefore, this call to the function returns the value 6.</source>
          <target state="translated">この呼び出しは、変数 &lt;code&gt;a&lt;/code&gt; が1にバインドされたラムダ式の本体を評価します &lt;code&gt;b&lt;/code&gt; バインドされ bが2にバインドされ、 &lt;code&gt;c&lt;/code&gt; が3にバインドされ評価します。本体の評価はこれらの3つの数値を加算し、結果6を生成します。したがって、この関数の呼び出しは値6を返します。</target>
        </trans-unit>
        <trans-unit id="7df938cb4e7a1af5452ae3a2da0110e086da7423" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;map-function&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and updates those nodes for which &lt;var&gt;map-function&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;map-function&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;ewoc&lt;/var&gt; の各データ要素に対して &lt;var&gt;map-function&lt;/var&gt; が呼び出され、map-functionがnon &lt;var&gt;map-function&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; を返すノードが更新されます。任意の &lt;var&gt;args&lt;/var&gt; は &lt;var&gt;map-function&lt;/var&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="ff5d6fa36d5b7de2c29bc06421c8c4fedddf5293" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;predicate&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and deletes those nodes for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;predicate&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;ewoc&lt;/var&gt; の各データ要素の &lt;var&gt;predicate&lt;/var&gt; が呼び出され、 &lt;var&gt;predicate&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; を返すノードが削除されます。任意の &lt;var&gt;args&lt;/var&gt; は &lt;var&gt;predicate&lt;/var&gt; 渡されます。</target>
        </trans-unit>
        <trans-unit id="fa0b9b67826a22ee95d4084d49aa21ce9290fa0f" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;predicate&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and returns a list of those elements for which &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. The elements in the list are ordered as in the buffer. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;predicate&lt;/var&gt;.</source>
          <target state="translated">この呼び出しは、 &lt;var&gt;predicate&lt;/var&gt; 内の各データ要素のため &lt;var&gt;ewoc&lt;/var&gt; とのためのそれらの要素のリストを返す &lt;var&gt;predicate&lt;/var&gt; 戻り非 &lt;code&gt;nil&lt;/code&gt; を。リスト内の要素は、バッファー内と同じように順序付けられます。すべての &lt;var&gt;args&lt;/var&gt; は &lt;var&gt;predicate&lt;/var&gt; 渡されます。</target>
        </trans-unit>
        <trans-unit id="c6f9cae052c0af057cc1d5f011d50e57b115567c" translate="yes" xml:space="preserve">
          <source>This calls the &lt;code&gt;get_environment&lt;/code&gt; function using the pointer provided in the &lt;code&gt;runtime&lt;/code&gt; structure to retrieve a pointer to the</source>
          <target state="translated">これは、 &lt;code&gt;runtime&lt;/code&gt; 構造で提供されるポインターを使用して &lt;code&gt;get_environment&lt;/code&gt; 関数を呼び出し、</target>
        </trans-unit>
        <trans-unit id="d702da8b738c83c40c883dea2c26bc538f85c010" translate="yes" xml:space="preserve">
          <source>This can be counterintuitive, in particular if &lt;var&gt;W4&lt;/var&gt; were used for displaying a buffer only temporarily (see &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Temporary Displays&lt;/a&gt;), and you want to continue working with the initial layout.</source>
          <target state="translated">これは、特に &lt;var&gt;W4&lt;/var&gt; の場合、直感に反する可能性があります。がバッファの一時的な表示にのみ使用され（&lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;一時的な表示を&lt;/a&gt;参照）、初期レイアウトでの作業を継続したいあります。</target>
        </trans-unit>
        <trans-unit id="7a4f216c24b473c3700bc04233588051f1f3d763" translate="yes" xml:space="preserve">
          <source>This can be customized by changing the map &lt;code&gt;Helper-help-map&lt;/code&gt;.</source>
          <target state="translated">これは、マップを変更することでカスタマイズできます &lt;code&gt;Helper-help-map&lt;/code&gt; をます。</target>
        </trans-unit>
        <trans-unit id="a9fec3408eb874f74534306e5560ffc4364f881e" translate="yes" xml:space="preserve">
          <source>This can only be used for functions, and tells the compiler to use &lt;var&gt;expander&lt;/var&gt; as an optimization function. When encountering a call to the function, of the form &lt;code&gt;(&lt;var&gt;function&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt;, the macro expander will call &lt;var&gt;expander&lt;/var&gt; with that form as well as with &lt;var&gt;args&lt;/var&gt;&amp;hellip;, and &lt;var&gt;expander&lt;/var&gt; can either return a new expression to use instead of the function call, or it can return just the form unchanged, to indicate that the function call should be left alone. &lt;var&gt;expander&lt;/var&gt; can be a symbol, or it can be a form &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; in which case &lt;var&gt;arg&lt;/var&gt; will hold the original function call expression, and the (unevaluated) arguments to the function can be accessed using the function&amp;rsquo;s formal arguments.</source>
          <target state="translated">これは関数にのみ使用でき、コンパイラーに最適化関数として &lt;var&gt;expander&lt;/var&gt; を使用するように指示します。フォームの関数の呼び出し、遭遇した場合には &lt;code&gt;(&lt;var&gt;function&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 、マクロエクスパンダは呼び出します &lt;var&gt;expander&lt;/var&gt; そのフォームと同様に &lt;var&gt;args&lt;/var&gt; ...、と &lt;var&gt;expander&lt;/var&gt; いずれかの関数呼び出しの代わりに使用する新しい表現を返すことができ、または関数呼び出しをそのままにしておく必要があることを示すために、フォームだけを変更せずに返すことができます。 &lt;var&gt;expander&lt;/var&gt; はシンボルにすることも、フォーム &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;arg&lt;/var&gt; ） &lt;var&gt;body&lt;/var&gt; ）にすることもできます）にこの場合、 &lt;var&gt;arg&lt;/var&gt; は元の関数呼び出し式を保持し、関数の（評価されていない）引数には、関数の仮引数を使用してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="d76e4e8676364aca2a2925eb23ab9724d9ecdea6" translate="yes" xml:space="preserve">
          <source>This cancels the requested action for &lt;var&gt;timer&lt;/var&gt;, which should be a timer&amp;mdash;usually, one previously returned by &lt;code&gt;run-at-time&lt;/code&gt; or &lt;code&gt;run-with-idle-timer&lt;/code&gt;. This cancels the effect of that call to one of these functions; the arrival of the specified time will not cause anything special to happen.</source>
          <target state="translated">これにより、タイマーに対して要求されたアクションがキャンセルされます。これは &lt;var&gt;timer&lt;/var&gt; である必要があります。通常は、以前に &lt;code&gt;run-at-time&lt;/code&gt; または &lt;code&gt;run-with-idle-timer&lt;/code&gt; 。これにより、これらの関数の1つへの呼び出しの効果がキャンセルされます。指定された時間に到着しても、特別なことは何も起こりません。</target>
        </trans-unit>
        <trans-unit id="e94ed11b42bb2c5d6e6ccb611120710d2777672d" translate="yes" xml:space="preserve">
          <source>This chapter covers the special issues relating to characters and how they are stored in strings and buffers.</source>
          <target state="translated">この章では、文字に関する特別な問題と、文字列やバッファにどのように格納されるかについて説明します。</target>
        </trans-unit>
        <trans-unit id="5e6dc1c0b855c30b55cd1ad2a42304656c13efd2" translate="yes" xml:space="preserve">
          <source>This chapter describes a number of features related to the display that Emacs presents to the user.</source>
          <target state="translated">この章では、Emacs がユーザーに提示する表示に関する多くの機能について説明します。</target>
        </trans-unit>
        <trans-unit id="f9d44ec4230e8c98e3b0d70421a47d7d9f465cfe" translate="yes" xml:space="preserve">
          <source>This chapter describes how the runnable Emacs executable is dumped with the preloaded Lisp libraries in it, how storage is allocated, and some internal aspects of GNU Emacs that may be of interest to C programmers.</source>
          <target state="translated">この章では、実行可能な Emacs の実行ファイルがプリロードされた Lisp ライブラリと共にどのようにダンプされるか、ストレージがどのように割り当てられるか、そして C 言語のプログラマーが興味を持ちそうな GNU Emacs の内部的な側面について説明します。</target>
        </trans-unit>
        <trans-unit id="624fde145402f8d6d3fe708e7379facc34f635dc" translate="yes" xml:space="preserve">
          <source>This chapter describes how to write both major and minor modes, how to indicate them in the mode line, and how they run hooks supplied by the user. For related topics such as keymaps and syntax tables, see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;, and &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;.</source>
          <target state="translated">この章では、メジャーモードとマイナーモードの両方を作成する方法、モード行でそれらを示す方法、およびユーザーが指定したフックを実行する方法について説明します。そのようなキーマップや構文テーブルなどの関連トピックについては、&lt;a href=&quot;keymaps#Keymaps&quot;&gt;キーマップを&lt;/a&gt;、そして&lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;構文テーブル&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a73f07a25208a8d5d49ebc9c53e00d0e6c83fb7" translate="yes" xml:space="preserve">
          <source>This chapter describes the Emacs Lisp functions and variables to find, create, view, save, and otherwise work with files and directories. A few other file-related functions are described in &lt;a href=&quot;buffers#Buffers&quot;&gt;Buffers&lt;/a&gt;, and those related to backups and auto-saving are described in &lt;a href=&quot;backups-and-auto_002dsaving#Backups-and-Auto_002dSaving&quot;&gt;Backups and Auto-Saving&lt;/a&gt;.</source>
          <target state="translated">この章では、ファイルやディレクトリを検索、作成、表示、保存、その他の方法で操作するためのEmacsLisp関数と変数について説明します。他のいくつかのファイル関連の機能は&lt;a href=&quot;buffers#Buffers&quot;&gt;バッファ&lt;/a&gt;で説明されており、バックアップと自動保存に関連する機能はで説明されています。&lt;a href=&quot;backups-and-auto_002dsaving#Backups-and-Auto_002dSaving&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7545c843ef69f6c82fc1ea31eff1598a7ea2b3fe" translate="yes" xml:space="preserve">
          <source>This chapter describes the Lisp functions for reading and printing. It also describes &lt;em&gt;streams&lt;/em&gt;, which specify where to get the text (if reading) or where to put it (if printing).</source>
          <target state="translated">この章では、読み取りと印刷のためのLisp関数について説明します。また、説明します&lt;em&gt;&lt;/em&gt;、テキストを取得する場所（読み取りの場合）またはテキストを配置する場所（印刷の場合）を指定する&lt;em&gt;ストリーム&lt;/em&gt;&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="22f7ace6e4e685bb92ce56087226787d9be96ca9" translate="yes" xml:space="preserve">
          <source>This chapter describes the functions and variables related to Emacs windows. See &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;, for how windows are assigned an area of screen available for Emacs to use. See &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;, for information on how text is displayed in windows.</source>
          <target state="translated">この章では、Emacsウィンドウに関連する関数と変数について説明します。Emacsが使用できる画面領域をウィンドウに割り当てる方法については、&lt;a href=&quot;frames#Frames&quot;&gt;フレームを&lt;/a&gt;参照してください。見る&lt;a href=&quot;display#Display&quot;&gt;&lt;/a&gt;ウィンドウでのテキストの表示方法については、表示」を。</target>
        </trans-unit>
        <trans-unit id="d3459b2e5b0998d91d15863048a7a8c8ef91b8b9" translate="yes" xml:space="preserve">
          <source>This chapter describes the functions that deal with the text in a buffer. Most examine, insert, or delete text in the current buffer, often operating at point or on text adjacent to point. Many are interactive. All the functions that change the text provide for undoing the changes (see &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;).</source>
          <target state="translated">この章では、バッファ内のテキストを処理する関数について説明します。ほとんどの場合、現在のバッファ内のテキストを調べ、挿入、または削除します。多くの場合、ポイントまたはポイントに隣接するテキストで動作します。多くはインタラクティブです。テキストを変更するすべての関数は、変更を元に戻すために提供されます（を参照）&lt;a href=&quot;undo#Undo&quot;&gt;元に戻すを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0ce20f2b5347d828084fd6cba60b6ec5ee82ff2b" translate="yes" xml:space="preserve">
          <source>This chapter describes the purpose, printed representation, and read syntax of each of the standard types in GNU Emacs Lisp. Details on how to use these types can be found in later chapters.</source>
          <target state="translated">この章では、GNU Emacs Lisp の各標準型の目的、印刷表現、読み込み構文について説明します。これらの型の使い方の詳細は、後の章で説明します。</target>
        </trans-unit>
        <trans-unit id="86f185ef4f486aa57761ecc92952412adc8958cf" translate="yes" xml:space="preserve">
          <source>This chapter is about starting and getting out of Emacs, access to values in the operating system environment, and terminal input, output.</source>
          <target state="translated">この章では、Emacsの起動と抜け出し、OS環境での値へのアクセス、端末の入力、出力について説明します。</target>
        </trans-unit>
        <trans-unit id="00f4501f6e1912e4ba9feed5929100e344d32bfb" translate="yes" xml:space="preserve">
          <source>This class is used for backslash in TeX mode.</source>
          <target state="translated">TeX モードのバックスラッシュに使用されるクラスです。</target>
        </trans-unit>
        <trans-unit id="80d3a7c8c29e5451d6afbe84d9e7d4cd1c702c79" translate="yes" xml:space="preserve">
          <source>This code character is meaningful only at the beginning of the interactive string, and it does not look for a prompt or a newline. It is a single, isolated character.</source>
          <target state="translated">このコード文字は対話的な文字列の先頭でのみ意味を持ち、プロンプトや改行を探しません。これは単一の孤立した文字です。</target>
        </trans-unit>
        <trans-unit id="65e11c6537eb3dae64d6ce18fb017a203438b2e0" translate="yes" xml:space="preserve">
          <source>This code letter computes an argument without reading any input. Therefore, it does not use a prompt string, and any prompt string you supply is ignored.</source>
          <target state="translated">このコードレターは、入力を読み込まずに引数を計算します。したがって、プロンプト文字列を使用せず、与えられたプロンプト文字列は無視されます。</target>
        </trans-unit>
        <trans-unit id="48852d1aa23644651ff3c065e69dbc3dadaaa7f7" translate="yes" xml:space="preserve">
          <source>This command &lt;em&gt;suspends&lt;/em&gt; a frame. For GUI frames, it calls &lt;code&gt;iconify-frame&lt;/code&gt; (see &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;); for frames on text terminals, it calls either &lt;code&gt;suspend-emacs&lt;/code&gt; or &lt;code&gt;suspend-tty&lt;/code&gt;, depending on whether the frame is displayed on the controlling terminal device or not.</source>
          <target state="translated">このコマンド&lt;em&gt;は&lt;/em&gt;フレームを&lt;em&gt;一時停止&lt;/em&gt;します。GUIフレームの場合、 &lt;code&gt;iconify-frame&lt;/code&gt; を呼び出します（&lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;フレームの可視性を&lt;/a&gt;参照）。テキスト端末のフレームの場合、 &lt;code&gt;suspend-emacs&lt;/code&gt; または &lt;code&gt;suspend-tty&lt;/code&gt; 場合、フレームが制御端末デバイスに表示されているかどうかに応じて、suspend-ttyの。</target>
        </trans-unit>
        <trans-unit id="cf23ed7494ffe60a0c253320c71f24adff27e634" translate="yes" xml:space="preserve">
          <source>This command activates input method &lt;var&gt;input-method&lt;/var&gt; for the current buffer. It also sets &lt;code&gt;default-input-method&lt;/code&gt; to &lt;var&gt;input-method&lt;/var&gt;. If &lt;var&gt;input-method&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this command deactivates any input method for the current buffer.</source>
          <target state="translated">このコマンドは、現在のバッファの入力方式 &lt;var&gt;input-method&lt;/var&gt; をアクティブにします。また、 &lt;code&gt;default-input-method&lt;/code&gt; を &lt;var&gt;input-method&lt;/var&gt; に設定します。場合は &lt;var&gt;input-method&lt;/var&gt; あります &lt;code&gt;nil&lt;/code&gt; の、このコマンドは現在のバッファーのすべての入力メソッドを非アクティブにします。</target>
        </trans-unit>
        <trans-unit id="59686f85758b5b8941bc715cb7ba63e9cd1610c4" translate="yes" xml:space="preserve">
          <source>This command adds a local rule to adjust the indentation of the current line.</source>
          <target state="translated">このコマンドは、現在の行のインデントを調整するローカルルールを追加します。</target>
        </trans-unit>
        <trans-unit id="0a7e7476526cfeca449ad69638788acc4bdbbf40" translate="yes" xml:space="preserve">
          <source>This command adds to the numeric argument for the next command. The argument &lt;var&gt;arg&lt;/var&gt; is the raw prefix argument as it was before this command; its value is negated to form the new prefix argument. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">このコマンドは、次のコマンドの数値引数に追加されます。引数 &lt;var&gt;arg&lt;/var&gt; は、このコマンドの前と同じように、生のプレフィックス引数です。その値は否定され、新しいプレフィックス引数が形成されます。自分が何をしているかを理解していない限り、このコマンドを自分で呼び出さないでください。</target>
        </trans-unit>
        <trans-unit id="74d9295bb5207f902c4cd8cbf762fbfceb95af5c" translate="yes" xml:space="preserve">
          <source>This command adds to the prefix argument for the following command. The argument &lt;var&gt;arg&lt;/var&gt; is the raw prefix argument as it was before this command; it is used to compute the updated prefix argument. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">このコマンドは、次のコマンドのプレフィックス引数に追加されます。議論 &lt;var&gt;arg&lt;/var&gt; は、このコマンドの前と同じように、生のプレフィックス引数です。更新されたプレフィックス引数を計算するために使用されます。自分が何をしているかを理解していない限り、このコマンドを自分で呼び出さないでください。</target>
        </trans-unit>
        <trans-unit id="8459d4f1dc04b4b16629ae0b5ecd274964f50c86" translate="yes" xml:space="preserve">
          <source>This command adjusts the height or width of &lt;var&gt;window&lt;/var&gt; to fit the text in it. It returns non-&lt;code&gt;nil&lt;/code&gt; if it was able to resize &lt;var&gt;window&lt;/var&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. Otherwise, it should be a live window.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;window&lt;/var&gt; 高さまたは幅をテキストに合わせて調整します。これは、非返し &lt;code&gt;nil&lt;/code&gt; を、サイズを変更することができた場合は &lt;var&gt;window&lt;/var&gt; 、および &lt;code&gt;nil&lt;/code&gt; をそう。 &lt;var&gt;window&lt;/var&gt; が省略または &lt;code&gt;nil&lt;/code&gt; の場合選択ウィンドウには、デフォルト。それ以外の場合は、ライブウィンドウである必要があります。</target>
        </trans-unit>
        <trans-unit id="fc6cbfe7ed2009b0dfc3f99d4b4705910652bf0b" translate="yes" xml:space="preserve">
          <source>This command adjusts the size of &lt;var&gt;frame&lt;/var&gt; to display the contents of its buffer exactly. &lt;var&gt;frame&lt;/var&gt; can be any live frame and defaults to the selected one. Fitting is done only if &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window is live. The arguments &lt;var&gt;max-height&lt;/var&gt;, &lt;var&gt;min-height&lt;/var&gt;, &lt;var&gt;max-width&lt;/var&gt; and &lt;var&gt;min-width&lt;/var&gt; specify bounds on the new total size of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window. &lt;var&gt;min-height&lt;/var&gt; and &lt;var&gt;min-width&lt;/var&gt; default to the values of &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt; respectively.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;frame&lt;/var&gt; のサイズを調整して、バッファの内容を正確に表示します。 &lt;var&gt;frame&lt;/var&gt; は任意のライブフレームにすることができ、デフォルトでは選択したフレームになります。フィッティングは、次の場合にのみ行われます。 &lt;var&gt;frame&lt;/var&gt; のルートウィンドウがライブであるます。引数 &lt;var&gt;max-height&lt;/var&gt; 、 &lt;var&gt;min-height&lt;/var&gt; 、 &lt;var&gt;max-width&lt;/var&gt; 、および &lt;var&gt;min-width&lt;/var&gt; は、 &lt;var&gt;frame&lt;/var&gt; のルートウィンドウの新しい合計サイズの境界を指定します。 &lt;var&gt;min-height&lt;/var&gt; および &lt;var&gt;min-width&lt;/var&gt; のデフォルトは、 &lt;code&gt;window-min-height&lt;/code&gt; および &lt;code&gt;window-min-width&lt;/code&gt; の値です。それぞれです。</target>
        </trans-unit>
        <trans-unit id="895e3a435b8ba1aa97bf7a257523d9f6c68329fe" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間の領域の行をアルファベット順にソートします。場合は &lt;var&gt;reverse&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; の、ソートは逆の順序です。</target>
        </trans-unit>
        <trans-unit id="60f35140e02216a14272042d6f3929f833c1de8b" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts pages in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間の領域のページをアルファベット順にソートします。場合は &lt;var&gt;reverse&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; の、ソートは逆の順序です。</target>
        </trans-unit>
        <trans-unit id="9f89794b064275d0088c3098df7ee2268f906465" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts paragraphs in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間の領域の段落をアルファベット順にソートします。場合は &lt;var&gt;reverse&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; の、ソートは逆の順序です。</target>
        </trans-unit>
        <trans-unit id="79bfff435d9a71b3c4b3fcf53e51bf55b8df9cd1" translate="yes" xml:space="preserve">
          <source>This command attempts to display &lt;var&gt;buffer-or-name&lt;/var&gt; in the selected window and make it the current buffer. It is often used interactively (as the binding of</source>
          <target state="translated">このコマンドは、 &lt;var&gt;buffer-or-name&lt;/var&gt; を表示しようとしますは、選択したウィンドウにし、それを現在のバッファーに。多くの場合、インタラクティブに使用されます（のバインディングとして</target>
        </trans-unit>
        <trans-unit id="18c4dcc1fd6c826172f3688906808481d8c1f7dd" translate="yes" xml:space="preserve">
          <source>This command attempts to reduce &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s height as much as possible while still showing its full buffer, but no less than &lt;code&gt;window-min-height&lt;/code&gt; lines. The return value is non-&lt;code&gt;nil&lt;/code&gt; if the window was resized, and &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. Otherwise, it should be a live window.</source>
          <target state="translated">このコマンドは削減を試みます &lt;var&gt;window&lt;/var&gt; バッファ全体を表示しながら、ウィンドウの高さを可能な限り低くますが、 &lt;code&gt;window-min-height&lt;/code&gt; 行以上です。戻り値は非である &lt;code&gt;nil&lt;/code&gt; のウィンドウのサイズが変更された場合、および &lt;code&gt;nil&lt;/code&gt; をそう。場合は &lt;var&gt;window&lt;/var&gt; 省略されるかされ &lt;code&gt;nil&lt;/code&gt; の選択ウィンドウには、デフォルト。それ以外の場合は、ライブウィンドウである必要があります。</target>
        </trans-unit>
        <trans-unit id="673eea01d7b257fd44b99b6857c537ccd6403f61" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;auto-fill-function&lt;/code&gt; whenever that is non-&lt;code&gt;nil&lt;/code&gt; and the character inserted is in the table &lt;code&gt;auto-fill-chars&lt;/code&gt; (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;).</source>
          <target state="translated">このコマンドは、呼び出しを &lt;code&gt;auto-fill-function&lt;/code&gt; それが非でいつでも &lt;code&gt;nil&lt;/code&gt; と挿入された文字がテーブルにある &lt;code&gt;auto-fill-chars&lt;/code&gt; （参照&lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;自動充填&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5b985c1d8b84f28c1da6a78f8b2cc53f577963f3" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;fit-window-to-buffer&lt;/code&gt; (see above) to do its work.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; （上記を参照）を呼び出して作業を行います。</target>
        </trans-unit>
        <trans-unit id="cc22573318be888f2063d86700554c0f9921604d" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;self-insert-command&lt;/code&gt; to insert newlines, which may subsequently break the preceding line by calling &lt;code&gt;auto-fill-function&lt;/code&gt; (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;). Typically what &lt;code&gt;auto-fill-function&lt;/code&gt; does is insert a newline; thus, the overall result in this case is to insert two newlines at different places: one at point, and another earlier in the line. &lt;code&gt;newline&lt;/code&gt; does not auto-fill if &lt;var&gt;number-of-newlines&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;self-insert-command&lt;/code&gt; を呼び出して改行を挿入します。その後、 &lt;code&gt;auto-fill-function&lt;/code&gt; を呼び出すことにより、前の行を中断する場合があります（を参照）。&lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;自動入力を&lt;/a&gt;）。通常、 &lt;code&gt;auto-fill-function&lt;/code&gt; が行うことは、改行を挿入することです。したがって、この場合の全体的な結果は、異なる場所に2つの改行を挿入することです。1つはポイントに、もう1つはラインの前に挿入します。 &lt;code&gt;newline&lt;/code&gt; &lt;var&gt;number-of-newlines&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、改行は自動入力されません。</target>
        </trans-unit>
        <trans-unit id="fc574e591e4e2eec7f3e45ad0bd6498afe6e7893" translate="yes" xml:space="preserve">
          <source>This command calls the function in &lt;code&gt;indent-line-function&lt;/code&gt; to indent the current line in a way appropriate for the current major mode.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;indent-line-function&lt;/code&gt; の関数を呼び出して、現在のメジャーモードに適した方法で現在の行をインデントします。</target>
        </trans-unit>
        <trans-unit id="45a74130ea5b5379fa9ef34261d143fcb80a3127" translate="yes" xml:space="preserve">
          <source>This command calls the hook &lt;code&gt;kill-emacs-hook&lt;/code&gt;, then exits the Emacs process and kills it.</source>
          <target state="translated">このコマンドはフック &lt;code&gt;kill-emacs-hook&lt;/code&gt; を呼び出し、Emacsプロセスを終了して強制終了します。</target>
        </trans-unit>
        <trans-unit id="8c6bb4abf55581a597f716344ee1d4b7e918ce59" translate="yes" xml:space="preserve">
          <source>This command closes the most recently opened (and not yet closed) block.</source>
          <target state="translated">このコマンドは、最近開いた(まだ閉じていない)ブロックを閉じます。</target>
        </trans-unit>
        <trans-unit id="756594fc50a4d9741af05602545285aac38ae0e4" translate="yes" xml:space="preserve">
          <source>This command considers a region of text as a single paragraph and fills it. If the region was made up of many paragraphs, the blank lines between paragraphs are removed. This function justifies as well as filling when &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、テキストの領域を1つの段落と見なし、それを埋めます。領域が多数の段落で構成されている場合、段落間の空白行は削除されます。この関数は、 &lt;var&gt;justify&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合に、正当化と入力を行います。</target>
        </trans-unit>
        <trans-unit id="54f154b03560bc91944f1f7809150311fbbf935c" translate="yes" xml:space="preserve">
          <source>This command copies the directory named &lt;var&gt;dirname&lt;/var&gt; to &lt;var&gt;newname&lt;/var&gt;. If &lt;var&gt;newname&lt;/var&gt; is a directory name, &lt;var&gt;dirname&lt;/var&gt; will be copied to a subdirectory there. See &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;dirname&lt;/var&gt; という名前のディレクトリを &lt;var&gt;newname&lt;/var&gt; にコピーします。 &lt;var&gt;newname&lt;/var&gt; 場合がディレクトリ名の、 &lt;var&gt;dirname&lt;/var&gt; はそこのサブディレクトリにコピーされます。&lt;a href=&quot;directory-names#Directory-Names&quot;&gt;ディレクトリ名を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5b2aa6b0f84b36f024a16d1780fb3b2f8164a4d1" translate="yes" xml:space="preserve">
          <source>This command copies the file &lt;var&gt;oldname&lt;/var&gt; to &lt;var&gt;newname&lt;/var&gt;. An error is signaled if &lt;var&gt;oldname&lt;/var&gt; is not a regular file. If &lt;var&gt;newname&lt;/var&gt; names a directory, it copies &lt;var&gt;oldname&lt;/var&gt; into that directory, preserving its final name component.</source>
          <target state="translated">このコマンドは、ファイル &lt;var&gt;oldname&lt;/var&gt; を &lt;var&gt;newname&lt;/var&gt; にコピーします。 &lt;var&gt;oldname&lt;/var&gt; の場合、エラーが通知されますが通常のファイルでないます。場合 &lt;var&gt;newname&lt;/var&gt; の名前のディレクトリに、コピーが &lt;var&gt;oldname&lt;/var&gt; その最終的な名前コンポーネントを維持し、そのディレクトリに。</target>
        </trans-unit>
        <trans-unit id="c8ad2b5b41ccfb8b2f38182e2df30fc1c4b30c1a" translate="yes" xml:space="preserve">
          <source>This command creates a directory named &lt;var&gt;dirname&lt;/var&gt;. If &lt;var&gt;parents&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, as is always the case in an interactive call, that means to create the parent directories first, if they don&amp;rsquo;t already exist. &lt;code&gt;mkdir&lt;/code&gt; is an alias for this.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;dirname&lt;/var&gt; という名前のディレクトリを作成します。 &lt;var&gt;parents&lt;/var&gt; がそうでない場合 &lt;code&gt;nil&lt;/code&gt; の彼らはまだ存在しない場合、など、手段は、第1の親ディレクトリを作成すること、対話型の呼び出しで常にそうです。 &lt;code&gt;mkdir&lt;/code&gt; はこのエイリアスです。</target>
        </trans-unit>
        <trans-unit id="038aa561e9d82f4d260ddd912eb64042b635bf8c" translate="yes" xml:space="preserve">
          <source>This command creates an empty file named &lt;var&gt;filename&lt;/var&gt;. As &lt;code&gt;make-directory&lt;/code&gt;, this command creates parent directories if &lt;var&gt;parents&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; already exists, this command signals an error.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;filename&lt;/var&gt; という名前の空のファイルを作成します。 &lt;code&gt;make-directory&lt;/code&gt; として、このコマンドは、 &lt;var&gt;parents&lt;/var&gt; が非の場合、親ディレクトリを作成します。 &lt;code&gt;nil&lt;/code&gt; 以外の。場合は &lt;var&gt;filename&lt;/var&gt; すでに存在している、このコマンドはエラーを通知します。</target>
        </trans-unit>
        <trans-unit id="a1d4315801ce6d3f5b31ce1276e9ab8688821d79" translate="yes" xml:space="preserve">
          <source>This command decodes the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt;. To make explicit decoding useful, the text before decoding ought to be a sequence of byte values, but both multibyte and unibyte buffers are acceptable (in the multibyte case, the raw byte values should be represented as eight-bit characters). Normally, the decoded text replaces the original text in the buffer, but the optional argument &lt;var&gt;destination&lt;/var&gt; can change that. If &lt;var&gt;destination&lt;/var&gt; is a buffer, the decoded text is inserted in that buffer after point (point does not move); if it is &lt;code&gt;t&lt;/code&gt;, the command returns the decoded text as a multibyte string without inserting it.</source>
          <target state="translated">このコマンドは、コーディングシステム &lt;var&gt;coding-system&lt;/var&gt; に従って、テキストを &lt;var&gt;start&lt;/var&gt; から &lt;var&gt;end&lt;/var&gt; までデコードします。明示的なデコードを有効にするには、デコード前のテキストをバイト値のシーケンスにする必要がありますが、マルチバイトバッファーとユニバイトバッファーの両方を使用できます（マルチバイトの場合、生のバイト値は8ビット文字で表す必要があります）。通常、デコードされたテキストはバッファ内の元のテキストを置き換えますが、オプションの引数の &lt;var&gt;destination&lt;/var&gt; はそれを変更できます。場合 &lt;var&gt;destination&lt;/var&gt; バッファされ、デコードされたテキストは、ポイントの後、そのバッファに挿入される（ポイントが移動しません）。そうである場合 &lt;code&gt;t&lt;/code&gt; 、コマンドは、それを挿入することなく、マルチバイト文字列としてデコードテキストを返します。</target>
        </trans-unit>
        <trans-unit id="32f4777175150fdcbe2a1a23643a82fc5a4ba066" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters backward, changing tabs into spaces. When the next character to be deleted is a tab, it is first replaced with the proper number of spaces to preserve alignment and then one of those spaces is deleted instead of the tab. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the command saves the deleted characters in the kill ring.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;count&lt;/var&gt; 文字を逆方向に削除し、タブをスペースに変更します。次に削除される文字がタブの場合、配置を維持するために最初に適切な数のスペースに置き換えられ、次にタブの代わりにそれらのスペースの1つが削除されます。 &lt;var&gt;killp&lt;/var&gt; の場合非で &lt;code&gt;nil&lt;/code&gt; の場合、コマンドはキルリングで削除した文字を保存します。</target>
        </trans-unit>
        <trans-unit id="22ea8b0a20dedb9172859d6df974ea27ab76d8a9" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters directly after point, or before point if &lt;var&gt;count&lt;/var&gt; is negative. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it saves the deleted characters in the kill ring.</source>
          <target state="translated">このコマンドは、ポイントの直後、または &lt;var&gt;count&lt;/var&gt; が負の場合はポイントの前の &lt;var&gt;count&lt;/var&gt; 文字を削除します。 &lt;var&gt;killp&lt;/var&gt; の場合が &lt;code&gt;nil&lt;/code&gt; 、削除された文字をキルリングに保存します。</target>
        </trans-unit>
        <trans-unit id="1e29c9a0fbb23fca667005f572af80f1ee10ffe4" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters directly before point, or after point if &lt;var&gt;count&lt;/var&gt; is negative. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it saves the deleted characters in the kill ring.</source>
          <target state="translated">このコマンドは、ポイントの直前、または &lt;var&gt;count&lt;/var&gt; が負の場合はポイントの後の &lt;var&gt;count&lt;/var&gt; 文字を削除します。 &lt;var&gt;killp&lt;/var&gt; の場合が &lt;code&gt;nil&lt;/code&gt; 、削除された文字をキルリングに保存します。</target>
        </trans-unit>
        <trans-unit id="ca7108ce8a70186ad1084ad0d0dc8c98134c3c53" translate="yes" xml:space="preserve">
          <source>This command deletes all frames on &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s terminal, except &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; uses another frame&amp;rsquo;s minibuffer, that minibuffer frame is left untouched. The argument &lt;var&gt;frame&lt;/var&gt; must specify a live frame and defaults to the selected frame. Internally, this command works by calling &lt;code&gt;delete-frame&lt;/code&gt; with &lt;var&gt;force&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; for all frames that shall be deleted.</source>
          <target state="translated">このコマンドは、上のすべてのフレームを削除 &lt;var&gt;frame&lt;/var&gt; を除いて、の端末を &lt;var&gt;frame&lt;/var&gt; 。 &lt;var&gt;frame&lt;/var&gt; が別のフレームのミニバッファを使用している場合、そのミニバッファフレームは変更されません。引数 &lt;var&gt;frame&lt;/var&gt; はライブフレームを指定する必要があり、デフォルトでは選択されたフレームになります。内部的には、このコマンドは &lt;code&gt;delete-frame&lt;/code&gt; を &lt;var&gt;force&lt;/var&gt; 的に呼び出すことで機能します &lt;code&gt;nil&lt;/code&gt; を削除するものとするすべてのフレームのために。</target>
        </trans-unit>
        <trans-unit id="a801baba837fbae2db848bbcdf043c44b92a62ee" translate="yes" xml:space="preserve">
          <source>This command deletes the directory named &lt;var&gt;dirname&lt;/var&gt;. The function &lt;code&gt;delete-file&lt;/code&gt; does not work for files that are directories; you must use &lt;code&gt;delete-directory&lt;/code&gt; for them. If &lt;var&gt;recursive&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and the directory contains any files, &lt;code&gt;delete-directory&lt;/code&gt; signals an error. If recursive is non-&lt;code&gt;nil&lt;/code&gt;, there is no error merely because the directory or its files are deleted by some other process before &lt;code&gt;delete-directory&lt;/code&gt; gets to them.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;dirname&lt;/var&gt; という名前のディレクトリを削除します。関数 &lt;code&gt;delete-file&lt;/code&gt; は、ディレクトリであるファイルに対しては機能しません。それらには &lt;code&gt;delete-directory&lt;/code&gt; を使用する必要があります。場合は &lt;var&gt;recursive&lt;/var&gt; あり &lt;code&gt;nil&lt;/code&gt; 、およびディレクトリは任意のファイルが、含まれている &lt;code&gt;delete-directory&lt;/code&gt; 信号エラーを。 recursiveが &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;delete-directory&lt;/code&gt; がそれらに到達する前に、ディレクトリまたはそのファイルが他のプロセスによって削除されたという理由だけでエラーは発生しません。</target>
        </trans-unit>
        <trans-unit id="b6a1626313c1e8a44d5e1bf542d0077364da6eff" translate="yes" xml:space="preserve">
          <source>This command deletes the file &lt;var&gt;filename&lt;/var&gt;. If the file has multiple names, it continues to exist under the other names. If &lt;var&gt;filename&lt;/var&gt; is a symbolic link, &lt;code&gt;delete-file&lt;/code&gt; deletes only the symbolic link and not its target.</source>
          <target state="translated">このコマンドは、ファイルファイル &lt;var&gt;filename&lt;/var&gt; 削除します。ファイルに複数の名前がある場合、他の名前で引き続き存在します。 &lt;var&gt;filename&lt;/var&gt; 場合がシンボリックリンクの、 &lt;code&gt;delete-file&lt;/code&gt; はシンボリックリンクのみを削除し、そのターゲットは削除しません。</target>
        </trans-unit>
        <trans-unit id="a94a016d509b74c3bce4b176ef112169da75d61e" translate="yes" xml:space="preserve">
          <source>This command deletes the text between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer, and returns &lt;code&gt;nil&lt;/code&gt;. If point was inside the deleted region, its value afterward is &lt;var&gt;start&lt;/var&gt;. Otherwise, point relocates with the surrounding text, as markers do.</source>
          <target state="translated">このコマンドは、現在のバッファの &lt;var&gt;start&lt;/var&gt; 位置と &lt;var&gt;end&lt;/var&gt; 位置の間のテキストを削除し、 &lt;code&gt;nil&lt;/code&gt; を返します。ポイントが削除された領域内にあった場合、その後の値は &lt;var&gt;start&lt;/var&gt; です。それ以外の場合、マーカーと同様に、ポイントは周囲のテキストとともに再配置されます。</target>
        </trans-unit>
        <trans-unit id="cca5913b83b419877e4d8ab720ce6c7df7f9acdb" translate="yes" xml:space="preserve">
          <source>This command deletes whitespace characters after the last non-whitespace character in each line in the region.</source>
          <target state="translated">このコマンドは、リージョン内の各行の最後の空白以外の文字の後にある空白文字を削除します。</target>
        </trans-unit>
        <trans-unit id="dddaa17447520ba09b411289d6048689899f464d" translate="yes" xml:space="preserve">
          <source>This command displays a description of the contents of the current buffer&amp;rsquo;s case table.</source>
          <target state="translated">このコマンドは、現在のバッファのケーステーブルの内容の説明を表示します。</target>
        </trans-unit>
        <trans-unit id="7c346a82a085542926f91f7935abc73545129526" translate="yes" xml:space="preserve">
          <source>This command displays a description of the current display table in a help buffer.</source>
          <target state="translated">このコマンドは、現在の表示テーブルの説明をヘルプバッファに表示します。</target>
        </trans-unit>
        <trans-unit id="683746dd8591743f5682ffbbc29ba3b571485977" translate="yes" xml:space="preserve">
          <source>This command displays a list of characters in the character set &lt;var&gt;charset&lt;/var&gt;.</source>
          <target state="translated">このコマンドは、文字セット &lt;var&gt;charset&lt;/var&gt; 内の文字のリストを表示します。</target>
        </trans-unit>
        <trans-unit id="3a0ecda5eade2dd5d8e8952f216dbbf48cc36d7a" translate="yes" xml:space="preserve">
          <source>This command displays a listing of all living processes. In addition, it finally deletes any process whose status was &amp;lsquo;</source>
          <target state="translated">このコマンドは、すべての生きているプロセスのリストを表示します。さらに、ステータスが 'であったプロセスを最終的に削除します</target>
        </trans-unit>
        <trans-unit id="8d52c25e9d936625f4ddc58e3711cc9e74f3a430" translate="yes" xml:space="preserve">
          <source>This command displays the contents of the syntax table of &lt;var&gt;buffer&lt;/var&gt; (by default, the current buffer) in a help buffer.</source>
          <target state="translated">このコマンドは、ヘルプバッファ内の &lt;var&gt;buffer&lt;/var&gt; （デフォルトでは現在のバッファ）の構文テーブルの内容を表示します。</target>
        </trans-unit>
        <trans-unit id="f078da243cd24929fce755d874cfbebed7ee19c0" translate="yes" xml:space="preserve">
          <source>This command displays the disassembled code for &lt;var&gt;object&lt;/var&gt;. In interactive use, or if &lt;var&gt;buffer-or-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, the output goes in a buffer named</source>
          <target state="translated">このコマンドは、 &lt;var&gt;object&lt;/var&gt; の逆アセンブルされたコードを表示します。インタラクティブに使用する場合、または &lt;var&gt;buffer-or-name&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; または省略されている場合、出力は次の名前のバッファーに送られます。</target>
        </trans-unit>
        <trans-unit id="2762876090466956700e42ae9e7b100c9424e047" translate="yes" xml:space="preserve">
          <source>This command displays the documentation of the current buffer&amp;rsquo;s major mode and minor modes. It uses the &lt;code&gt;documentation&lt;/code&gt; function to retrieve the documentation strings of the major and minor mode commands (see &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Accessing Documentation&lt;/a&gt;).</source>
          <target state="translated">このコマンドは、現在のバッファのメジャーモードとマイナーモードのドキュメントを表示します。これは、使用する &lt;code&gt;documentation&lt;/code&gt; （参照メジャーとマイナーモードコマンドの説明文字列を取得する関数を&lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;アクセスするドキュメントを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="906a9d0a67ebfe25157f280b4d00f819df007911" translate="yes" xml:space="preserve">
          <source>This command displays the frequency count data for each line of the current definition.</source>
          <target state="translated">このコマンドは、現在の定義の各行の周波数カウントデータを表示します。</target>
        </trans-unit>
        <trans-unit id="1e3b49c3a1c9795b93c5c5418a1c0d3eff8cf69e" translate="yes" xml:space="preserve">
          <source>This command displays the previous buffer in &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;window&lt;/var&gt; should be a live window or &lt;code&gt;nil&lt;/code&gt; (meaning the selected window). If the optional argument &lt;var&gt;bury-or-kill&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means that the buffer currently shown in &lt;var&gt;window&lt;/var&gt; is about to be buried or killed and consequently should not be switched to in future invocations of this command.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;window&lt;/var&gt; 前のバッファを表示します。引数 &lt;var&gt;window&lt;/var&gt; は、ライブウィンドウまたは &lt;code&gt;nil&lt;/code&gt; （選択したウィンドウを意味する）である必要があります。オプションの引数 &lt;var&gt;bury-or-kill&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、これは、現在 &lt;var&gt;window&lt;/var&gt; 表示されているバッファーが埋め込まれるか強制終了されるため、このコマンドの今後の呼び出しで切り替えるべきではないことを意味します。</target>
        </trans-unit>
        <trans-unit id="16105a84850f7950a0920c4e78ab171286e4f734" translate="yes" xml:space="preserve">
          <source>This command displays the rules that are used to indent the current line.</source>
          <target state="translated">このコマンドは、現在の行のインデントに使用されるルールを表示します。</target>
        </trans-unit>
        <trans-unit id="6b7280ebc9500d23d64f114ba464e9b849225f10" translate="yes" xml:space="preserve">
          <source>This command displays what is contained in register &lt;var&gt;reg&lt;/var&gt;.</source>
          <target state="translated">このコマンドは、レジスタ &lt;var&gt;reg&lt;/var&gt; に含まれているものを表示します。</target>
        </trans-unit>
        <trans-unit id="8dde6d022e9a211cc45bb6e82118d5f40d92a727" translate="yes" xml:space="preserve">
          <source>This command does not follow symbolic links. If &lt;var&gt;filename&lt;/var&gt; is a symbolic link, this command renames the symbolic link, not the file it points to. If &lt;var&gt;newname&lt;/var&gt; is a symbolic link, its directory entry is replaced, not the directory entry it points to.</source>
          <target state="translated">このコマンドはシンボリックリンクをたどりません。 &lt;var&gt;filename&lt;/var&gt; がシンボリックリンクの場合、このコマンドは、それが指すファイルではなく、シンボリックリンクの名前を変更します。 &lt;var&gt;newname&lt;/var&gt; 場合シンボリックリンクで、そのディレクトリエントリは、それが指すないディレクトリエントリを置き換えています。</target>
        </trans-unit>
        <trans-unit id="8b72b7c4c4fbff1834710fd64352ed0aad18bb23" translate="yes" xml:space="preserve">
          <source>This command does not run the hook &lt;code&gt;post-self-insert-hook&lt;/code&gt; unless called interactively or &lt;var&gt;interactive&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;interactive&lt;/var&gt; 呼び出されるか、インタラクティブが非 &lt;code&gt;nil&lt;/code&gt; でない限り、フック &lt;code&gt;post-self-insert-hook&lt;/code&gt; を実行しません。</target>
        </trans-unit>
        <trans-unit id="9ceb0e4da10375df635738b622ce9b4a706e8b83" translate="yes" xml:space="preserve">
          <source>This command does nothing if &lt;var&gt;filename&lt;/var&gt; and &lt;var&gt;newname&lt;/var&gt; are the same directory entry, i.e., if they refer to the same parent directory and give the same name within that directory. Otherwise, if &lt;var&gt;filename&lt;/var&gt; and &lt;var&gt;newname&lt;/var&gt; name the same file, this command does nothing on POSIX-conforming systems, and removes &lt;var&gt;filename&lt;/var&gt; on some non-POSIX systems.</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; と &lt;var&gt;newname&lt;/var&gt; が同じディレクトリエントリである場合、つまり、それらが同じ親ディレクトリを参照し、そのディレクトリ内で同じ名前を付けている場合、このコマンドは何も実行しません。それ以外の場合、 &lt;var&gt;filename&lt;/var&gt; と &lt;var&gt;newname&lt;/var&gt; が同じファイルに名前を付けると、このコマンドはPOSIX準拠のシステムでは何も実行せず、一部の非POSIXシステムでは &lt;var&gt;filename&lt;/var&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="215a1477f2c72075a1ef839f3f35a9c187a95e3b" translate="yes" xml:space="preserve">
          <source>This command does nothing if the window is already too short to display all of its buffer, or if any of the buffer is scrolled off-screen, or if the window is the only live window in its frame.</source>
          <target state="translated">このコマンドは、ウィンドウがすでに短すぎてバッファのすべてを表示できない場合や、バッファの一部が画面外にスクロールされている場合、ウィンドウがフレーム内で唯一のライブウィンドウである場合には何もしません。</target>
        </trans-unit>
        <trans-unit id="966b0ed68ad81002249062c92710838398fcfe4a" translate="yes" xml:space="preserve">
          <source>This command enables recording undo information for buffer &lt;var&gt;buffer-or-name&lt;/var&gt;, so that subsequent changes can be undone. If no argument is supplied, then the current buffer is used. This function does nothing if undo recording is already enabled in the buffer. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このコマンドを使用すると、バッファ &lt;var&gt;buffer-or-name&lt;/var&gt; の取り消し情報を記録できるため、後続の変更を取り消すことができます。引数が指定されていない場合は、現在のバッファーが使用されます。バッファで元に戻す記録がすでに有効になっている場合、この関数は何もしません。 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5a82ddcac78077fdf6491a021c70da5be6b883bc" translate="yes" xml:space="preserve">
          <source>This command encodes the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt;. Normally, the encoded text replaces the original text in the buffer, but the optional argument &lt;var&gt;destination&lt;/var&gt; can change that. If &lt;var&gt;destination&lt;/var&gt; is a buffer, the encoded text is inserted in that buffer after point (point does not move); if it is &lt;code&gt;t&lt;/code&gt;, the command returns the encoded text as a unibyte string without inserting it.</source>
          <target state="translated">このコマンドは、コーディングシステム &lt;var&gt;coding-system&lt;/var&gt; に従って、テキストを &lt;var&gt;start&lt;/var&gt; から &lt;var&gt;end&lt;/var&gt; までエンコードします。通常、エンコードされたテキストはバッファ内の元のテキストを置き換えますが、オプションの引数の &lt;var&gt;destination&lt;/var&gt; はそれを変更できます。場合 &lt;var&gt;destination&lt;/var&gt; バッファされ、エンコードされたテキストは、ポイントの後にそのバッファに挿入される（ポイントが移動しません）。そうである場合 &lt;code&gt;t&lt;/code&gt; 、コマンドは、それを挿入することなく、ユニバイト文字列として符号化されたテキストを返します。</target>
        </trans-unit>
        <trans-unit id="ef5406097f423d50f3e4cf92882d1c513ab70d87" translate="yes" xml:space="preserve">
          <source>This command erases the editable contents of the minibuffer (that is, everything except the prompt), if a minibuffer is current. Otherwise, it erases the entire current buffer.</source>
          <target state="translated">このコマンドは、ミニバッファがカレントであれば、ミニバッファの編集可能な内容(つまり、プロンプト以外のすべての内容)を消去します。そうでない場合は、現在のバッファ全体を消去します。</target>
        </trans-unit>
        <trans-unit id="6f45f70a9223f5d68b032e25b623e5f92da9b0d3" translate="yes" xml:space="preserve">
          <source>This command exits the active minibuffer after inserting the last character typed on the keyboard (found in &lt;code&gt;last-command-event&lt;/code&gt;; see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;).</source>
          <target state="translated">このコマンドは、キーボードで最後に入力した文字を挿入した後、アクティブなミニバッファーを終了します（ &lt;code&gt;last-command-event&lt;/code&gt; にあります。&lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;コマンドループ情報を&lt;/a&gt;参照してください）。</target>
        </trans-unit>
        <trans-unit id="56bee02febe888f30922da274fbb0924fce22169" translate="yes" xml:space="preserve">
          <source>This command exits the active minibuffer. It is normally bound to keys in minibuffer local keymaps.</source>
          <target state="translated">このコマンドはアクティブなミニバッファを終了する。通常は、ミニバッファローカルキーマップのキーにバインドされます。</target>
        </trans-unit>
        <trans-unit id="9960e68dba13beeea2d45213224bda3bc09c78cb" translate="yes" xml:space="preserve">
          <source>This command expands the abbrev before point, if any. If point does not follow an abbrev, this command does nothing. To do the expansion, it calls the function that is the value of the &lt;code&gt;abbrev-expand-function&lt;/code&gt; variable, with no arguments, and returns whatever that function does.</source>
          <target state="translated">このコマンドは、ポイントの前に略語がある場合はそれを展開します。ポイントが略語に従わない場合、このコマンドは何もしません。拡張を行うために、引数なしで &lt;code&gt;abbrev-expand-function&lt;/code&gt; 変数の値である関数を呼び出し、その関数が行うことは何でも返します。</target>
        </trans-unit>
        <trans-unit id="78ee150b79a2f4408d7171f2996a0806c6f522bc" translate="yes" xml:space="preserve">
          <source>This command fills each of the paragraphs in the region from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. It justifies as well if &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、領域内の各段落を &lt;var&gt;start&lt;/var&gt; から &lt;var&gt;end&lt;/var&gt; 埋めます。 &lt;var&gt;justify&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; でない場合も、正当化されます。</target>
        </trans-unit>
        <trans-unit id="0b3e65ed2b1a543af31c994850fab42cc5f6ca5a" translate="yes" xml:space="preserve">
          <source>This command fills each paragraph in the region according to its individual fill prefix. Thus, if the lines of a paragraph were indented with spaces, the filled paragraph will remain indented in the same fashion.</source>
          <target state="translated">このコマンドは、領域内の各段落をその個別の塗りつぶし接頭辞に従って塗りつぶします。したがって、段落の行がスペースでインデントされていた場合、塗りつぶされた段落も同じようにインデントされたままになります。</target>
        </trans-unit>
        <trans-unit id="0bec39ae3f928d4a3feaac0b7e8a0b32dca18131" translate="yes" xml:space="preserve">
          <source>This command fills the paragraph at or after point. If &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, each line is justified as well. It uses the ordinary paragraph motion commands to find paragraph boundaries. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Paragraphs&lt;/a&gt; in</source>
          <target state="translated">このコマンドは、ポイント以降の段落を埋めます。 &lt;var&gt;justify&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、各行も同様に位置揃えされます。通常の段落モーションコマンドを使用して、段落の境界を見つけます。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;段落&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="2acc7ffa982f60daf275e8c14e7552f325a34ebe" translate="yes" xml:space="preserve">
          <source>This command finds the file &lt;var&gt;file&lt;/var&gt;, converting it according to format &lt;var&gt;format&lt;/var&gt;. It also makes &lt;var&gt;format&lt;/var&gt; the default if the buffer is saved later.</source>
          <target state="translated">このコマンドは、ファイル &lt;var&gt;file&lt;/var&gt; 検索し、フォーマット &lt;var&gt;format&lt;/var&gt; に従って変換します。また、バッファが後で保存される場合は、 &lt;var&gt;format&lt;/var&gt; がデフォルトになります。</target>
        </trans-unit>
        <trans-unit id="496a4488eb4e6d86a049f91696897547b2057806" translate="yes" xml:space="preserve">
          <source>This command finds the precise file name for library &lt;var&gt;library&lt;/var&gt;. It searches for the library in the same way &lt;code&gt;load&lt;/code&gt; does, and the argument &lt;var&gt;nosuffix&lt;/var&gt; has the same meaning as in &lt;code&gt;load&lt;/code&gt;: don&amp;rsquo;t add suffixes &amp;lsquo;</source>
          <target state="translated">このコマンドは、ライブラリ &lt;var&gt;library&lt;/var&gt; 正確なファイル名を検索します。 &lt;code&gt;load&lt;/code&gt; と同じ方法でライブラリを検索し、引数 &lt;var&gt;nosuffix&lt;/var&gt; は &lt;code&gt;load&lt;/code&gt; と同じ意味を持ちます。接尾辞を追加しないでください。</target>
        </trans-unit>
        <trans-unit id="7088c7eb415b5eeea76627a8dbd42f70950ab725" translate="yes" xml:space="preserve">
          <source>This command indents each nonblank line starting between &lt;var&gt;start&lt;/var&gt; (inclusive) and &lt;var&gt;end&lt;/var&gt; (exclusive). If &lt;var&gt;to-column&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;indent-region&lt;/code&gt; indents each nonblank line by calling the current mode&amp;rsquo;s indentation function, the value of &lt;code&gt;indent-line-function&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;start&lt;/var&gt; （包括的）と &lt;var&gt;end&lt;/var&gt; （排他的）の間で始まる空白以外の各行をインデントします。 &lt;var&gt;to-column&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;indent-region&lt;/code&gt; は、現在のモードのインデント関数である &lt;code&gt;indent-line-function&lt;/code&gt; の値を呼び出すことにより、空白以外の各行をインデントします。</target>
        </trans-unit>
        <trans-unit id="5a9dc457190e631972e795830f311f13a8cd116d" translate="yes" xml:space="preserve">
          <source>This command indents the current line like the previous nonblank line, by calling &lt;code&gt;indent-relative&lt;/code&gt; with &lt;code&gt;t&lt;/code&gt; as the &lt;var&gt;first-only&lt;/var&gt; argument. The return value is unpredictable.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;t&lt;/code&gt; を &lt;var&gt;first-only&lt;/var&gt; 引数として &lt;code&gt;indent-relative&lt;/code&gt; を呼び出すことにより、前の空白でない行と同じように現在の行をインデントします。戻り値は予測できません。</target>
        </trans-unit>
        <trans-unit id="990ea483ed9c77e9c4b7e9d0a04803fc31bdbeb3" translate="yes" xml:space="preserve">
          <source>This command indents to the left margin if that is not zero. See &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">このコマンドは、左マージンがゼロでない場合、左マージンにインデントします。&lt;a href=&quot;margins#Margins&quot;&gt;マージンを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b299a297e353537b61beb782c88c67e04c9405d5" translate="yes" xml:space="preserve">
          <source>This command inserts &lt;var&gt;count&lt;/var&gt; instances of &lt;var&gt;character&lt;/var&gt; into the current buffer before point. The argument &lt;var&gt;count&lt;/var&gt; must be an integer, and &lt;var&gt;character&lt;/var&gt; must be a character.</source>
          <target state="translated">このコマンドは、ポイントの前に現在のバッファに &lt;var&gt;character&lt;/var&gt; &lt;var&gt;count&lt;/var&gt; インスタンスを挿入します。引数の &lt;var&gt;count&lt;/var&gt; は整数で、 &lt;var&gt;character&lt;/var&gt; は文字である必要があります。</target>
        </trans-unit>
        <trans-unit id="3c0b68d54ca5426fce25a0ace8e5b8bf44050795" translate="yes" xml:space="preserve">
          <source>This command inserts before point the text at the front of the kill ring. It sets the mark at the beginning of that text, using &lt;code&gt;push-mark&lt;/code&gt; (see &lt;a href=&quot;the-mark#The-Mark&quot;&gt;The Mark&lt;/a&gt;), and puts point at the end.</source>
          <target state="translated">このコマンドは、キルリングの前にテキストをポイントする前に挿入します。これは、使用して、そのテキストの先頭にマークを設定する &lt;code&gt;push-mark&lt;/code&gt; （参照&lt;a href=&quot;the-mark#The-Mark&quot;&gt;マーク&lt;/a&gt;）、およびプットは終わりを指します。</target>
        </trans-unit>
        <trans-unit id="00cb850812ecd2a392a86a27a8e2ac9630649afe" translate="yes" xml:space="preserve">
          <source>This command inserts contents of register &lt;var&gt;reg&lt;/var&gt; into the current buffer.</source>
          <target state="translated">このコマンドは、レジスタ &lt;var&gt;reg&lt;/var&gt; の内容を現在のバッファに挿入します。</target>
        </trans-unit>
        <trans-unit id="b5823cba999dd07db3971854e8b20896e5e06742" translate="yes" xml:space="preserve">
          <source>This command inserts newlines into the current buffer before point. If &lt;var&gt;number-of-newlines&lt;/var&gt; is supplied, that many newline characters are inserted. In an interactive call, &lt;var&gt;number-of-newlines&lt;/var&gt; is the numeric prefix argument.</source>
          <target state="translated">このコマンドは、ポイントの前に現在のバッファに改行を挿入します。場合 &lt;var&gt;number-of-newlines&lt;/var&gt; 供給され、その多くの改行文字が挿入されています。対話型呼び出しでは、 &lt;var&gt;number-of-newlines&lt;/var&gt; は数値プレフィックス引数です。</target>
        </trans-unit>
        <trans-unit id="10d91e2db2ec210a0ecc91241ecef7992c6f3ac3" translate="yes" xml:space="preserve">
          <source>This command inserts spaces between the words of the current line so that the line ends exactly at &lt;code&gt;fill-column&lt;/code&gt;. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、現在の行の単語の間にスペースを挿入して、行が正確に &lt;code&gt;fill-column&lt;/code&gt; で終了するようにします。 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6b0cd33fa3471773723d5fc01a50786b892b7a90" translate="yes" xml:space="preserve">
          <source>This command inserts spaces or tabs before point, up to the next tab stop column defined by &lt;code&gt;tab-stop-list&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、ポイントの前に、 &lt;code&gt;tab-stop-list&lt;/code&gt; で定義された次のタブストップ列までスペースまたはタブを挿入します。</target>
        </trans-unit>
        <trans-unit id="135878bb1fa11119f45ff9a414a7db8bfe0c0784" translate="yes" xml:space="preserve">
          <source>This command inserts the character &lt;var&gt;char&lt;/var&gt; (the last character typed); it does so &lt;var&gt;count&lt;/var&gt; times, before point, and returns &lt;code&gt;nil&lt;/code&gt;. Most printing characters are bound to this command. In routine use, &lt;code&gt;self-insert-command&lt;/code&gt; is the most frequently called function in Emacs, but programs rarely use it except to install it on a keymap.</source>
          <target state="translated">このコマンドは、文字 &lt;var&gt;char&lt;/var&gt; （最後に入力された文字）を挿入します。それはそうない &lt;var&gt;count&lt;/var&gt; ポイントの前に、時間を、戻りは &lt;code&gt;nil&lt;/code&gt; を。ほとんどの印刷文字はこのコマンドにバインドされています。日常的に使用する場合、 &lt;code&gt;self-insert-command&lt;/code&gt; はEmacsで最も頻繁に呼び出される関数ですが、プログラムはキーマップにインストールする場合を除いて、ほとんど使用しません。</target>
        </trans-unit>
        <trans-unit id="9626d7b3e3b091a37ee5ebbf01c44cecd8ac2fd6" translate="yes" xml:space="preserve">
          <source>This command inserts the contents of file &lt;var&gt;file&lt;/var&gt;, converting it according to format &lt;var&gt;format&lt;/var&gt;. If &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are non-&lt;code&gt;nil&lt;/code&gt;, they specify which part of the file to read, as in &lt;code&gt;insert-file-contents&lt;/code&gt; (see &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;Reading from Files&lt;/a&gt;).</source>
          <target state="translated">このコマンドは、ファイル &lt;var&gt;file&lt;/var&gt; の内容を挿入し、フォーマット &lt;var&gt;format&lt;/var&gt; に従って変換します。場合 &lt;var&gt;beg&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; の、彼らは同様に、読み取るために、ファイルのどの部分を指定し &lt;code&gt;insert-file-contents&lt;/code&gt; （参照&lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;ファイルからの読み込み&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="da7021fdc034c60b00dcf1ab5f2bc90527eb6799" translate="yes" xml:space="preserve">
          <source>This command inserts the entire accessible contents of &lt;var&gt;from-buffer-or-name&lt;/var&gt; (which must exist) into the current buffer after point. It leaves the mark after the inserted text. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;from-buffer-or-name&lt;/var&gt; （存在する必要があります）のアクセス可能なコンテンツ全体を、ポイントの後に現在のバッファーに挿入します。挿入されたテキストの後にマークを残します。値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="88e1677d378687ba4ac004484580576a9429d773" translate="yes" xml:space="preserve">
          <source>This command inserts whitespace at point, extending to the same column as the next &lt;em&gt;indent point&lt;/em&gt; of the previous nonblank line. An indent point is a non-whitespace character following whitespace. The next indent point is the first one at a column greater than the current column of point. For example, if point is underneath and to the left of the first non-blank character of a line of text, it moves to that column by inserting whitespace.</source>
          <target state="translated">このコマンドは、ポイントに空白を挿入し、前の非空白行の次の&lt;em&gt;インデントポイント&lt;/em&gt;と同じ列に拡張します。インデントポイントは、空白に続く非空白文字です。次のインデントポイントは、ポイントの現在の列よりも大きい列の最初のインデントポイントです。たとえば、ポイントがテキスト行の最初の空白以外の文字の下と左にある場合、空白を挿入してその列に移動します。</target>
        </trans-unit>
        <trans-unit id="9595ecd60bd448bf2daea0ea991b68b101ac3102" translate="yes" xml:space="preserve">
          <source>This command is identical to &lt;code&gt;word-search-backward&lt;/code&gt;, except that the beginning or the end of &lt;var&gt;string&lt;/var&gt; need not match a word boundary, unless &lt;var&gt;string&lt;/var&gt; begins or ends in whitespace.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;string&lt;/var&gt; が空白で開始または終了しない限り、 &lt;var&gt;string&lt;/var&gt; 最初または最後が単語の境界と一致する必要がないことを除いて、 &lt;code&gt;word-search-backward&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="58d41366864bbff2a5b943d6b2e3fe42436c078a" translate="yes" xml:space="preserve">
          <source>This command is identical to &lt;code&gt;word-search-forward&lt;/code&gt;, except that the beginning or the end of &lt;var&gt;string&lt;/var&gt; need not match a word boundary, unless &lt;var&gt;string&lt;/var&gt; begins or ends in whitespace. For instance, searching for &amp;lsquo;</source>
          <target state="translated">このコマンドは、 &lt;var&gt;string&lt;/var&gt; が空白で開始または終了しない限り、 &lt;var&gt;string&lt;/var&gt; 先頭または末尾が単語の境界と一致する必要がないことを除いて、 &lt;code&gt;word-search-forward&lt;/code&gt; と同じです。たとえば、 'を検索します</target>
        </trans-unit>
        <trans-unit id="ed953efc17ba150660976b3a7ae8e39f29a1f27a" translate="yes" xml:space="preserve">
          <source>This command is like &lt;code&gt;down-list&lt;/code&gt; but it also pays attention to nesting of tokens other than parentheses, such as &lt;code&gt;begin...end&lt;/code&gt;.</source>
          <target state="translated">このコマンドは &lt;code&gt;down-list&lt;/code&gt; 似ていますが、 &lt;code&gt;begin...end&lt;/code&gt; などの括弧以外のトークンのネストにも注意を払います。</target>
        </trans-unit>
        <trans-unit id="90fafcf0ce43e375742f52a0d7669e6be587582c" translate="yes" xml:space="preserve">
          <source>This command loads the file &lt;var&gt;filename&lt;/var&gt;. If &lt;var&gt;filename&lt;/var&gt; is a relative file name, then the current default directory is assumed. This command does not use &lt;code&gt;load-path&lt;/code&gt;, and does not append suffixes. However, it does look for compressed versions (if Auto Compression Mode is enabled). Use this command if you wish to specify precisely the file name to load.</source>
          <target state="translated">このコマンドは、ファイルファイル &lt;var&gt;filename&lt;/var&gt; ロードします。場合は &lt;var&gt;filename&lt;/var&gt; 相対ファイル名で、現在のデフォルト・ディレクトリが想定されます。このコマンドは &lt;code&gt;load-path&lt;/code&gt; を使用せず、サフィックスを追加しません。ただし、圧縮バージョンは検索されます（自動圧縮モードが有効になっている場合）。ロードするファイル名を正確に指定する場合は、このコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="f2935f28ba5712dfbbb71ecbcf2657b64610540c" translate="yes" xml:space="preserve">
          <source>This command loads the library named &lt;var&gt;library&lt;/var&gt;. It is equivalent to &lt;code&gt;load&lt;/code&gt;, except for the way it reads its argument interactively. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Libraries.html#Lisp-Libraries&quot;&gt;Lisp Libraries&lt;/a&gt; in</source>
          <target state="translated">このコマンドは、libraryという名前の &lt;var&gt;library&lt;/var&gt; ロードします。引数をインタラクティブに読み取る方法を除いて、 &lt;code&gt;load&lt;/code&gt; と同等です。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Libraries.html#Lisp-Libraries&quot;&gt;Lispライブラリ&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="cef39c045e00a0f5acb130f922e0ab1680aa3f4f" translate="yes" xml:space="preserve">
          <source>This command makes &lt;var&gt;buffer-or-name&lt;/var&gt; appear in some window, without selecting the window or making the buffer current. The argument &lt;var&gt;buffer-or-name&lt;/var&gt; must be a buffer or the name of an existing buffer. The return value is the window chosen to display the buffer, or &lt;code&gt;nil&lt;/code&gt; if no suitable window was found.</source>
          <target state="translated">このコマンドは、ウィンドウを選択したり、バッファを最新にしたりせずに、バッファまたは &lt;var&gt;buffer-or-name&lt;/var&gt; を一部のウィンドウに表示します。引数 &lt;var&gt;buffer-or-name&lt;/var&gt; は、バッファーまたは既存のバッファーの名前である必要があります。戻り値は、バッファを表示するために選択されたウィンドウです。適切なウィンドウが見つからなかった場合は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="230b6284a7b0d716c80f10b4addf825eacbaeb1a" translate="yes" xml:space="preserve">
          <source>This command makes a symbolic link to &lt;var&gt;target&lt;/var&gt;, named &lt;var&gt;linkname&lt;/var&gt;. This is like the shell command &amp;lsquo;</source>
          <target state="translated">このコマンドは、 &lt;var&gt;linkname&lt;/var&gt; という名前の &lt;var&gt;target&lt;/var&gt; へのシンボリックリンクを作成します。これはシェルコマンドのようなものです '</target>
        </trans-unit>
        <trans-unit id="1289d6efb469369728dd95ac27321e796c44ac18" translate="yes" xml:space="preserve">
          <source>This command marks the buffer as modified, since it does not (as far as Emacs knows) match the contents of &lt;var&gt;filename&lt;/var&gt;, even if it matched the former visited file. It also renames the buffer to correspond to the new file name, unless the new name is already in use.</source>
          <target state="translated">このコマンドは、以前にアクセスしたファイルと一致したとしても、（Emacsが知る限り） &lt;var&gt;filename&lt;/var&gt; の内容と一致しないため、バッファーを変更済みとしてマークします。また、新しい名前がすでに使用されていない限り、新しいファイル名に対応するようにバッファの名前を変更します。</target>
        </trans-unit>
        <trans-unit id="3045463093bc030acf63701d5fa42bd3099cd946" translate="yes" xml:space="preserve">
          <source>This command marks the current buffer as unmodified, and not needing to be saved. If &lt;var&gt;arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it marks the buffer as modified, so that it will be saved at the next suitable occasion. Interactively, &lt;var&gt;arg&lt;/var&gt; is the prefix argument.</source>
          <target state="translated">このコマンドは、現在のバッファを変更されていないものとしてマークし、保存する必要はありません。場合 &lt;var&gt;arg&lt;/var&gt; が非で &lt;code&gt;nil&lt;/code&gt; のそれは、次の適切な機会に保存されるように、修正され、それはバッファをマーク。インタラクティブに、 &lt;var&gt;arg&lt;/var&gt; はプレフィックス引数です。</target>
        </trans-unit>
        <trans-unit id="83dce7265fe49cc7961dc06b31c244e25c921259" translate="yes" xml:space="preserve">
          <source>This command marks the current location of point as the beginning of an abbrev. The next call to &lt;code&gt;expand-abbrev&lt;/code&gt; will use the text from here to point (where it is then) as the abbrev to expand, rather than using the previous word as usual.</source>
          <target state="translated">このコマンドは、ポイントの現在の場所を略語の始まりとしてマークします。次の &lt;code&gt;expand-abbrev&lt;/code&gt; の呼び出しでは、前の単語を通常どおりに使用するのではなく、ここからポイント（その時点）までのテキストを展開する略語として使用します。</target>
        </trans-unit>
        <trans-unit id="e6b4c7abace5f19e4e74417132ebc0b612ae42f7" translate="yes" xml:space="preserve">
          <source>This command moves point backward &lt;var&gt;arg&lt;/var&gt; lines and then to the first nonblank character on that line. It returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;arg&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 1.</source>
          <target state="translated">このコマンドは、ポイントを後方の &lt;var&gt;arg&lt;/var&gt; 行に移動してから、その行の最初の空白以外の文字に移動します。 &lt;code&gt;nil&lt;/code&gt; を返します。場合は &lt;var&gt;arg&lt;/var&gt; が省略されるかされ &lt;code&gt;nil&lt;/code&gt; の1がデフォルト。</target>
        </trans-unit>
        <trans-unit id="72f9b5cc81ad8b1d9723183c58f4b81888dd722f" translate="yes" xml:space="preserve">
          <source>This command moves point forward &lt;var&gt;arg&lt;/var&gt; lines and then to the first nonblank character on that line. It returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;arg&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 1.</source>
          <target state="translated">このコマンドは、ポイントフォワード &lt;var&gt;arg&lt;/var&gt; 行を移動してから、その行の最初の非空白文字に移動します。 &lt;code&gt;nil&lt;/code&gt; を返します。場合は &lt;var&gt;arg&lt;/var&gt; が省略されるかされ &lt;code&gt;nil&lt;/code&gt; の1がデフォルト。</target>
        </trans-unit>
        <trans-unit id="54e975e6175492e7858c03b57a5e94deab998c6a" translate="yes" xml:space="preserve">
          <source>This command moves point to the first non-whitespace character in the current line (which is the line in which point is located). It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、ポイントを現在の行（ポイントが配置されている行）の最初の非空白文字に移動します。 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="16bea2b736885b9c1690ddce930c3c97f115aced" translate="yes" xml:space="preserve">
          <source>This command performs abbrev expansion if Abbrev mode is enabled and the inserted character does not have word-constituent syntax. (See &lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;Abbrevs&lt;/a&gt;, and &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;.) It is also responsible for calling &lt;code&gt;blink-paren-function&lt;/code&gt; when the inserted character has close parenthesis syntax (see &lt;a href=&quot;blinking#Blinking&quot;&gt;Blinking&lt;/a&gt;).</source>
          <target state="translated">このコマンドは、略語モードが有効で、挿入された文字に単語構成構文がない場合に、略語展開を実行します。（&lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;略語&lt;/a&gt;および&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;構文クラス表を&lt;/a&gt;参照してください。）挿入された文字の括弧が閉じている場合は、 &lt;code&gt;blink-paren-function&lt;/code&gt; を呼び出す必要もあります（&lt;a href=&quot;blinking#Blinking&quot;&gt;点滅を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="e69e1e968d5bd8894bf4aa234a5af4025b9c34ec" translate="yes" xml:space="preserve">
          <source>This command performs several complex steps to find a window to display in. These steps are described by means of &lt;em&gt;display actions&lt;/em&gt;, which have the form &lt;code&gt;(&lt;var&gt;functions&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt;. Here, &lt;var&gt;functions&lt;/var&gt; is either a single function or a list of functions, referred to as &amp;ldquo;action functions&amp;rdquo; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;); and &lt;var&gt;alist&lt;/var&gt; is an association list, referred to as &amp;ldquo;action alist&amp;rdquo; (see &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Buffer Display Action Alists&lt;/a&gt;). See &lt;a href=&quot;the-zen-of-buffer-display#The-Zen-of-Buffer-Display&quot;&gt;The Zen of Buffer Display&lt;/a&gt;, for samples of display actions.</source>
          <target state="translated">このコマンドは、表示するウィンドウを見つけるためのいくつかの複雑なステップを実行する。これらの工程は、によって記述されている&lt;em&gt;表示動作&lt;/em&gt;形態有し、 &lt;code&gt;(&lt;var&gt;functions&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; 。ここで、 &lt;var&gt;functions&lt;/var&gt; は、「アクション関数」と呼ばれる単一の関数または関数のリストのいずれかです（&lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;バッファ表示アクション関数を&lt;/a&gt;参照）。そして、 &lt;var&gt;alist&lt;/var&gt; 連想リストで、「アクションの連想リスト」（参照と呼ばれる&lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;バッファの表示アクション連想リストを&lt;/a&gt;）。表示アクションのサンプルについては、&lt;a href=&quot;the-zen-of-buffer-display#The-Zen-of-Buffer-Display&quot;&gt;Zen of BufferDisplayを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ac874fec4a2255555483d76cfda857b73f19b6f5" translate="yes" xml:space="preserve">
          <source>This command pops up a window displaying a help buffer containing a listing of all of the key bindings from both the local and global keymaps. It works by calling &lt;code&gt;describe-bindings&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、ローカルキーマップとグローバルキーマップの両方からのすべてのキーバインディングのリストを含むヘルプバッファを表示するウィンドウをポップアップします。これは、 &lt;code&gt;describe-bindings&lt;/code&gt; を呼び出すことによって機能します。</target>
        </trans-unit>
        <trans-unit id="5723fae69ad70eaec1a0c94cc1880e06995dbf6e" translate="yes" xml:space="preserve">
          <source>This command provides help for the current mode. It prompts the user in the minibuffer with the message &amp;lsquo;</source>
          <target state="translated">このコマンドは、現在のモードのヘルプを提供します。ミニバッファ内のユーザーにメッセージ 'を表示します</target>
        </trans-unit>
        <trans-unit id="3d5429dbf77aa466883c3c347ea5afc4d4ecb447" translate="yes" xml:space="preserve">
          <source>This command puts &lt;var&gt;buffer-or-name&lt;/var&gt; at the end of the buffer list, without changing the order of any of the other buffers on the list. This buffer therefore becomes the least desirable candidate for &lt;code&gt;other-buffer&lt;/code&gt; to return. The argument can be either a buffer itself or the name of one.</source>
          <target state="translated">このコマンドは、リスト上の他のバッファの順序を変更せずに、バッファリストの最後に &lt;var&gt;buffer-or-name&lt;/var&gt; を配置します。したがって、このバッファは、 &lt;code&gt;other-buffer&lt;/code&gt; が返すのに最も望ましくない候補になります。引数は、バッファー自体またはバッファーの名前のいずれかです。</target>
        </trans-unit>
        <trans-unit id="fc70666f0de62aefc6b885233548b561b4ad9a48" translate="yes" xml:space="preserve">
          <source>This command puts a &lt;code&gt;charset&lt;/code&gt; text property on the decoded text. The value of the property states the character set used to decode the original text.</source>
          <target state="translated">このコマンドは、デコードされたテキストに &lt;code&gt;charset&lt;/code&gt; テキストプロパティを設定します。プロパティの値は、元のテキストをデコードするために使用される文字セットを示します。</target>
        </trans-unit>
        <trans-unit id="6de88c91142fa60f7a754c756b7132dd95fde0b0" translate="yes" xml:space="preserve">
          <source>This command quits &lt;var&gt;window&lt;/var&gt; and buries its buffer. The argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. With prefix argument &lt;var&gt;kill&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt;, it kills the buffer instead of burying it. It calls the function &lt;code&gt;quit-restore-window&lt;/code&gt; described next to deal with the window and its buffer.</source>
          <target state="translated">このコマンドは &lt;var&gt;window&lt;/var&gt; を終了し、そのバッファを埋めます。引数 &lt;var&gt;window&lt;/var&gt; はライブウィンドウである必要があり、デフォルトでは選択されたウィンドウになります。接頭引数で &lt;var&gt;kill&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; をそれを埋め込むのではなく、バッファを殺し、。次に説明 &lt;code&gt;quit-restore-window&lt;/code&gt; 関数quit-restore-windowを呼び出して、ウィンドウとそのバッファを処理します。</target>
        </trans-unit>
        <trans-unit id="7784be5e054a212086b929e5c18f79147958b099" translate="yes" xml:space="preserve">
          <source>This command reads input and specifies a prefix argument for the following command. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">このコマンドは入力を読み取り、次のコマンドのプレフィックス引数を指定します。自分が何をしているかを理解していない限り、このコマンドを自分で呼び出さないでください。</target>
        </trans-unit>
        <trans-unit id="1591295b8cfc29c22db263b3bad15c3dee78fff3" translate="yes" xml:space="preserve">
          <source>This command reads the defun containing point, compiles it, and evaluates the result. If you use this on a defun that is actually a function definition, the effect is to install a compiled version of that function.</source>
          <target state="translated">このコマンドは、ポイントを含むdefunを読み込んでコンパイルし、その結果を評価します。実際には関数定義であるdefunでこれを使用した場合、その関数のコンパイル済みバージョンをインストールすることになります。</target>
        </trans-unit>
        <trans-unit id="ccfd5aea208043148d6cc8208a6715303f29ede5" translate="yes" xml:space="preserve">
          <source>This command recompiles every &amp;lsquo;</source>
          <target state="translated">このコマンドはすべての 'を再コンパイルします</target>
        </trans-unit>
        <trans-unit id="9751089f918672ad55bc34859638929401a63127" translate="yes" xml:space="preserve">
          <source>This command reindents the current line, inserts a newline at point, and then indents the new line (the one following the newline just inserted). It does indentation on both lines by calling &lt;code&gt;indent-according-to-mode&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、現在の行をインデントし、ポイントに改行を挿入してから、新しい行（挿入されたばかりの改行の次の行）をインデントします。 &lt;code&gt;indent-according-to-mode&lt;/code&gt; を呼び出すことにより、両方の行でインデントを実行します。</target>
        </trans-unit>
        <trans-unit id="674d87b8e0fd1f4a4a927563f934f31afe0923bb" translate="yes" xml:space="preserve">
          <source>This command renames the file &lt;var&gt;filename&lt;/var&gt; as &lt;var&gt;newname&lt;/var&gt;.</source>
          <target state="translated">このコマンドは、ファイル &lt;var&gt;filename&lt;/var&gt; の名前を &lt;var&gt;newname&lt;/var&gt; に変更します。</target>
        </trans-unit>
        <trans-unit id="33cf144a77ee4443b03cc309d47171aef5c0b36b" translate="yes" xml:space="preserve">
          <source>This command replaces &lt;var&gt;buffer-or-name&lt;/var&gt; with some other buffer, in all windows displaying it. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer, or the name of an existing buffer; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">このコマンドは、それを表示しているすべてのウィンドウで、 &lt;var&gt;buffer-or-name&lt;/var&gt; を他のバッファーに置き換えます。 &lt;var&gt;buffer-or-name&lt;/var&gt; は、バッファー、または既存のバッファーの名前である必要があります。省略または &lt;code&gt;nil&lt;/code&gt; の場合、デフォルトで現在のバッファになります。</target>
        </trans-unit>
        <trans-unit id="f0d050a5b45aa2c2f46e017a12604b72c2821556" translate="yes" xml:space="preserve">
          <source>This command replaces any spaces and tabs around point with a single space, or &lt;var&gt;n&lt;/var&gt; spaces if &lt;var&gt;n&lt;/var&gt; is specified. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、ポイントの周囲のスペースとタブを1つのスペース、または &lt;var&gt;n&lt;/var&gt; が指定されている場合はn &lt;var&gt;n&lt;/var&gt; スペースに置き換えます。 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e9518563dd9b2c45fb46443171d7c29cc191c74d" translate="yes" xml:space="preserve">
          <source>This command replaces the buffer text with the text of the visited file on disk. This action undoes all changes since the file was visited or saved.</source>
          <target state="translated">このコマンドは、バッファのテキストをディスク上の訪問したファイルのテキストに置き換えます。この操作は、ファイルが訪問または保存されてからのすべての変更を元に戻します。</target>
        </trans-unit>
        <trans-unit id="22808ff36144900f2e5e944e00da7f623fd4b3a9" translate="yes" xml:space="preserve">
          <source>This command replaces the just-yanked entry from the kill ring with a different entry from the kill ring.</source>
          <target state="translated">このコマンドは、キルリングからジャストヤンクされたエントリをキルリングから別のエントリに置き換えます。</target>
        </trans-unit>
        <trans-unit id="07ac52ca608a413584040db481dee6b468476618" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th more recent history element. The position in the history can go beyond the current position and invoke &amp;ldquo;future history&amp;rdquo; (see &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Text from Minibuffer&lt;/a&gt;).</source>
          <target state="translated">このコマンドは、ミニバッファーの内容を &lt;var&gt;n&lt;/var&gt; 番目に新しい履歴要素の値に置き換えます。履歴内の位置は、現在の位置を超えて「将来の履歴」を呼び出すことができます（&lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;ミニバッファーからのテキストを参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="13cd76f72c08b167d7fb003a1c860df5865ff580" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th next (newer) history element that completes the current contents of the minibuffer before the point.</source>
          <target state="translated">このコマンドは、ミニバッファーの内容を、ポイントの前にミニバッファーの現在の内容を完了する &lt;var&gt;n&lt;/var&gt; 番目の次の（新しい）履歴要素の値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="b3e0669734868d90d1fcc758500f408c04bc7dfd" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th next (newer) history element that matches &lt;var&gt;pattern&lt;/var&gt; (a regular expression).</source>
          <target state="translated">このコマンドは、ミニバッファーの内容を、 &lt;var&gt;pattern&lt;/var&gt; （正規表現）に一致する &lt;var&gt;n&lt;/var&gt; 番目の次の（新しい）履歴要素の値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="3b282fe8a23854b6e15eced034c6b71d3945b917" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element that completes the current contents of the minibuffer before the point.</source>
          <target state="translated">このコマンドは、ミニバッファーの内容を、ポイントの前にミニバッファーの現在の内容を完了する &lt;var&gt;n&lt;/var&gt; 番目の前の（古い）履歴要素の値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="497734350baee3d7a9cc50f04dce49e9cd162e22" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element that matches &lt;var&gt;pattern&lt;/var&gt; (a regular expression).</source>
          <target state="translated">このコマンドは、ミニバッファーの内容を、 &lt;var&gt;pattern&lt;/var&gt; （正規表現）に一致する &lt;var&gt;n&lt;/var&gt; 番目の前の（古い）履歴要素の値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="9f32df32b75fee1a1b696fe1b671ad61199effd0" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element.</source>
          <target state="translated">このコマンドは、ミニバッファーの内容を &lt;var&gt;n&lt;/var&gt; 番目の前の（古い）履歴要素の値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="638e9bd64e02db086d2bae52aaade55f7482e7f0" translate="yes" xml:space="preserve">
          <source>This command returns &lt;code&gt;t&lt;/code&gt; if there were no errors and &lt;code&gt;nil&lt;/code&gt; otherwise. When called interactively, it prompts for the file name.</source>
          <target state="translated">このコマンドは、エラーがなかった場合は &lt;code&gt;t&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。インタラクティブに呼び出されると、ファイル名の入力を求められます。</target>
        </trans-unit>
        <trans-unit id="10ca3b92e36af6ad1335e500f3c9780ba8e9a634" translate="yes" xml:space="preserve">
          <source>This command runs a garbage collection, and returns information on the amount of space in use. (Garbage collection can also occur spontaneously if you use more than &lt;code&gt;gc-cons-threshold&lt;/code&gt; bytes of Lisp data since the previous garbage collection.)</source>
          <target state="translated">このコマンドはガベージコレクションを実行し、使用中のスペースの量に関する情報を返します。（前回のガベージコレクション以降、 &lt;code&gt;gc-cons-threshold&lt;/code&gt; バイトを超えるLispデータを使用した場合にも、ガベージコレクションが自然に発生する可能性があります。）</target>
        </trans-unit>
        <trans-unit id="287189d05b8e5e37d32c497a6b1eee7be4d183d7" translate="yes" xml:space="preserve">
          <source>This command saves some modified file-visiting buffers. Normally it asks the user about each buffer. But if &lt;var&gt;save-silently-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it saves all the file-visiting buffers without querying the user.</source>
          <target state="translated">このコマンドは、いくつかの変更されたファイル訪問バッファーを保存します。通常、各バッファについてユーザーに尋ねます。ただし、 &lt;var&gt;save-silently-p&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、ユーザーにクエリを実行せずに、すべてのファイルアクセスバッファーを保存します。</target>
        </trans-unit>
        <trans-unit id="a65db190be7f6c671adcc98a7f3f5116e59141fd" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, but does so in a window other than the selected window. It may use another existing window or split a window; see &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;.</source>
          <target state="translated">このコマンドは、ファイル &lt;var&gt;filename&lt;/var&gt; にアクセスするバッファーを選択しますが、選択したウィンドウ以外のウィンドウで選択します。別の既存のウィンドウを使用するか、ウィンドウを分割する場合があります。&lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;バッファの切り替えを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="619c7615c5651d8ad33d34daff2f42c9a21daef4" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, like &lt;code&gt;find-file&lt;/code&gt;, but it marks the buffer as read-only. See &lt;a href=&quot;read-only-buffers#Read-Only-Buffers&quot;&gt;Read Only Buffers&lt;/a&gt;, for related functions and variables.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;find-file&lt;/code&gt; のように、ファイル &lt;var&gt;filename&lt;/var&gt; にアクセスするバッファーを選択しますが、バッファーを読み取り専用としてマークします。関連する関数と変数については、&lt;a href=&quot;read-only-buffers#Read-Only-Buffers&quot;&gt;読み取り専用バッファーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="37e929336c842c198502c93ddeffe557c6b40269" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, using an existing buffer if there is one, and otherwise creating a new buffer and reading the file into it. It also returns that buffer.</source>
          <target state="translated">このコマンドは、ファイル &lt;var&gt;filename&lt;/var&gt; にアクセスするバッファーを選択し、既存のバッファーがある場合はそれを使用します。それ以外の場合は、新しいバッファーを作成してファイルを読み込みます。また、そのバッファを返します。</target>
        </trans-unit>
        <trans-unit id="13ded09804e080074b521082674aed70b9290aa1" translate="yes" xml:space="preserve">
          <source>This command sets the value of the environment variable named &lt;var&gt;variable&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. &lt;var&gt;variable&lt;/var&gt; should be a string. Internally, Emacs Lisp can handle any string. However, normally &lt;var&gt;variable&lt;/var&gt; should be a valid shell identifier, that is, a sequence of letters, digits and underscores, starting with a letter or underscore. Otherwise, errors may occur if subprocesses of Emacs try to access the value of &lt;var&gt;variable&lt;/var&gt;. If &lt;var&gt;value&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; (or, interactively, with a prefix argument), &lt;code&gt;setenv&lt;/code&gt; removes &lt;var&gt;variable&lt;/var&gt; from the environment. Otherwise, &lt;var&gt;value&lt;/var&gt; should be a string.</source>
          <target state="translated">このコマンドは、という名前の環境変数の値に設定 &lt;var&gt;variable&lt;/var&gt; に &lt;var&gt;value&lt;/var&gt; 。 &lt;var&gt;variable&lt;/var&gt; は文字列である必要があります。内部的には、EmacsLispは任意の文字列を処理できます。ただし、通常、 &lt;var&gt;variable&lt;/var&gt; は有効なシェル識別子、つまり、文字またはアンダースコアで始まる文字、数字、およびアンダースコアのシーケンスである必要があります。そうしないと、Emacsのサブプロセスが &lt;var&gt;variable&lt;/var&gt; の値にアクセスしようとしたときにエラーが発生する可能性があります。 &lt;var&gt;value&lt;/var&gt; が省略されているか &lt;code&gt;nil&lt;/code&gt; の場合（または、対話的に、プレフィックス引数を使用して）、 &lt;code&gt;setenv&lt;/code&gt; は環境から &lt;var&gt;variable&lt;/var&gt; を削除します。それ以外の場合、 &lt;var&gt;value&lt;/var&gt; は文字列である必要があります。</target>
        </trans-unit>
        <trans-unit id="8fcaeef993ea25251e9368bd64870310e08df302" translate="yes" xml:space="preserve">
          <source>This command shows a list of &lt;em&gt;shadowed&lt;/em&gt; Emacs Lisp files. A shadowed file is one that will not normally be loaded, despite being in a directory on &lt;code&gt;load-path&lt;/code&gt;, due to the existence of another similarly-named file in a directory earlier on &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、&lt;em&gt;シャドウされた&lt;/em&gt;EmacsLispファイルのリストを表示します。影のファイルは、通常、上のディレクトリにあるにもかかわらず、ロードされません一つで &lt;code&gt;load-path&lt;/code&gt; に起因する以前のディレクトリ内の別の同じ名前のファイルが存在し、 &lt;code&gt;load-path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07f6c3981498b51aac23952451390d803e768897" translate="yes" xml:space="preserve">
          <source>This command sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them alphabetically by the &lt;var&gt;field&lt;/var&gt;th field of each line. Fields are separated by whitespace and numbered starting from 1. If &lt;var&gt;field&lt;/var&gt; is negative, sorting is by the -&lt;var&gt;field&lt;/var&gt;th field from the end of the line. This command is useful for sorting tables.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間の領域の行を並べ替え、各行の &lt;var&gt;field&lt;/var&gt; thフィールドでアルファベット順に比較します。フィールドは空白で区切られ、1から始まる番号が付けられます。 &lt;var&gt;field&lt;/var&gt; が負の場合、並べ替えは行の終わりから &lt;var&gt;field&lt;/var&gt; 番目のフィールドで行われます。このコマンドは、テーブルの並べ替えに役立ちます。</target>
        </trans-unit>
        <trans-unit id="3019d8e29e6476b8ff59ceed7b700968370b929b" translate="yes" xml:space="preserve">
          <source>This command sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them numerically by the &lt;var&gt;field&lt;/var&gt;th field of each line. Fields are separated by whitespace and numbered starting from 1. The specified field must contain a number in each line of the region. Numbers starting with 0 are treated as octal, and numbers starting with &amp;lsquo;</source>
          <target state="translated">このコマンドは、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間の領域の行を並べ替え、各行の &lt;var&gt;field&lt;/var&gt; thフィールドで数値的に比較します。フィールドは空白で区切られ、1から始まる番号が付けられます。指定されたフィールドには、領域の各行に番号が含まれている必要があります。0で始まる数字は8進数として扱われ、 'で始まる数字は8進数として扱われます。</target>
        </trans-unit>
        <trans-unit id="3f75fc7ca83d71510b5e60c2231077f6130bda3c" translate="yes" xml:space="preserve">
          <source>This command sorts the lines in the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them alphabetically by a certain range of columns. The column positions of &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; bound the range of columns to sort on.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;beg&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; の間の領域の行を並べ替え、特定の範囲の列でアルファベット順に比較します。 &lt;var&gt;beg&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; の列位置は、ソートする列の範囲を制限していました。</target>
        </trans-unit>
        <trans-unit id="57757a00ef15c31f9fc056499bcdca26426aeaa5" translate="yes" xml:space="preserve">
          <source>This command sorts the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; alphabetically as specified by &lt;var&gt;record-regexp&lt;/var&gt; and &lt;var&gt;key-regexp&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is a negative integer, then sorting is in reverse order.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;record-regexp&lt;/var&gt; および &lt;var&gt;key-regexp&lt;/var&gt; で指定されているように、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間の領域をアルファベット順にソートします。場合 &lt;var&gt;reverse&lt;/var&gt; 負の整数であり、次いで、ソーティングは逆の順序です。</target>
        </trans-unit>
        <trans-unit id="ba41cb2c6960acb24c793517b69fd12158f503c0" translate="yes" xml:space="preserve">
          <source>This command specifies &lt;var&gt;coding-system&lt;/var&gt; as the coding system to use for decoding keyboard input from &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means not to decode keyboard input. If &lt;var&gt;terminal&lt;/var&gt; is a frame, it means that frame&amp;rsquo;s terminal; if it is &lt;code&gt;nil&lt;/code&gt;, that means the currently selected frame&amp;rsquo;s terminal. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;terminal&lt;/var&gt; からのキーボード入力をデコードするために使用するコーディング &lt;var&gt;coding-system&lt;/var&gt; としてコーディングシステムを指定します。 &lt;var&gt;coding-system&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、それはキーボード入力をデコードしないことを意味します。 &lt;var&gt;terminal&lt;/var&gt; がフレームの場合、それはそのフレームの端末を意味します。 &lt;code&gt;nil&lt;/code&gt; の場合は、現在選択されているフレームの端末を意味します。&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;複数の端末を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0dc215892711b17131d8d46b78cbf66e212449eb" translate="yes" xml:space="preserve">
          <source>This command specifies &lt;var&gt;coding-system&lt;/var&gt; as the coding system to use for encoding terminal output from &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means not to encode terminal output. If &lt;var&gt;terminal&lt;/var&gt; is a frame, it means that frame&amp;rsquo;s terminal; if it is &lt;code&gt;nil&lt;/code&gt;, that means the currently selected frame&amp;rsquo;s terminal.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;terminal&lt;/var&gt; からの端末出力をエンコードするために使用するコーディング &lt;var&gt;coding-system&lt;/var&gt; としてコーディングシステムを指定します。 &lt;var&gt;coding-system&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、それは端末出力をエンコードしないことを意味します。 &lt;var&gt;terminal&lt;/var&gt; がフレームの場合、それはそのフレームの端末を意味します。 &lt;code&gt;nil&lt;/code&gt; の場合は、現在選択されているフレームの端末を意味します。</target>
        </trans-unit>
        <trans-unit id="31ef5d19b3155f5becd62fb28fc0818272b9cc71" translate="yes" xml:space="preserve">
          <source>This command swaps the states of the two live windows &lt;var&gt;window-1&lt;/var&gt; and &lt;var&gt;window-2&lt;/var&gt;. &lt;var&gt;window-1&lt;/var&gt; must specify a live window and defaults to the selected one. &lt;var&gt;window-2&lt;/var&gt; must specify a live window and defaults to the window following &lt;var&gt;window-1&lt;/var&gt; in the cyclic ordering of windows, excluding minibuffer windows and including live windows on all visible frames.</source>
          <target state="translated">このコマンドは、2つのライブウィンドウ &lt;var&gt;window-1&lt;/var&gt; と &lt;var&gt;window-2&lt;/var&gt; の状態を交換します。 &lt;var&gt;window-1&lt;/var&gt; はライブウィンドウを指定する必要があり、デフォルトでは選択されたウィンドウになります。 &lt;var&gt;window-2&lt;/var&gt; は、ライブウィンドウを指定する必要があり、デフォルトでは、ウィンドウの循環順序で &lt;var&gt;window-1&lt;/var&gt; に続くウィンドウになります。ただし、ミニバッファウィンドウは除外され、表示されているすべてのフレームにライブウィンドウが含まれます。</target>
        </trans-unit>
        <trans-unit id="38ad262b9ef6f144a88897489a62c92c0533d472" translate="yes" xml:space="preserve">
          <source>This command switches to the last buffer in the local buffer list of the selected frame. More precisely, it calls the function &lt;code&gt;switch-to-buffer&lt;/code&gt; (see &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;), to display the buffer returned by &lt;code&gt;last-buffer&lt;/code&gt; (see above), in the selected window.</source>
          <target state="translated">このコマンドは、選択したフレームのローカルバッファリストの最後のバッファに切り替わります。より正確には、関数 &lt;code&gt;switch-to-buffer&lt;/code&gt; （&lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffersを&lt;/a&gt;参照）を呼び出して、 &lt;code&gt;last-buffer&lt;/code&gt; （上記を参照）によって返されたバッファーを選択したウィンドウに表示します。</target>
        </trans-unit>
        <trans-unit id="cfb86fe983df33f50f05c06e7ced705595b9ec16" translate="yes" xml:space="preserve">
          <source>This command switches to the next buffer in &lt;var&gt;window&lt;/var&gt;, thus undoing the effect of the last &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; command in &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">このコマンドは、 &lt;var&gt;window&lt;/var&gt; 内の次のバッファーに切り替わり、ウィンドウ内の最後の &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; コマンドの効果を元に戻し &lt;var&gt;window&lt;/var&gt; 。引数 &lt;var&gt;window&lt;/var&gt; はライブウィンドウである必要があり、デフォルトでは選択されたウィンドウになります。</target>
        </trans-unit>
        <trans-unit id="d9ffcd53e229520bbe0937ce47720e3e3f705fc8" translate="yes" xml:space="preserve">
          <source>This command toggles side windows on the specified &lt;var&gt;frame&lt;/var&gt;. The optional argument &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">このコマンドは、指定された &lt;var&gt;frame&lt;/var&gt; サイドウィンドウを切り替えます。オプションの引数 &lt;var&gt;frame&lt;/var&gt; はライブフレームである必要があり、デフォルトでは選択されたフレームになります。</target>
        </trans-unit>
        <trans-unit id="bc39e2355c8315301a176946b4646d703991a6f2" translate="yes" xml:space="preserve">
          <source>This command tries to work out appropriate settings to produce your preferred style of indentation. Simply call the command while visiting a file that is indented with your style.</source>
          <target state="translated">このコマンドは、お好みのスタイルのインデントを作成するための適切な設定を試みます。自分のスタイルでインデントされているファイルにアクセスしているときにこのコマンドを呼び出すだけです。</target>
        </trans-unit>
        <trans-unit id="aec6ebd98eae587585dc1ea9fa515c8692ebbf2e" translate="yes" xml:space="preserve">
          <source>This command unloads the library that provided feature &lt;var&gt;feature&lt;/var&gt;. It undefines all functions, macros, and variables defined in that library with &lt;code&gt;defun&lt;/code&gt;, &lt;code&gt;defalias&lt;/code&gt;, &lt;code&gt;defsubst&lt;/code&gt;, &lt;code&gt;defmacro&lt;/code&gt;, &lt;code&gt;defconst&lt;/code&gt;, &lt;code&gt;defvar&lt;/code&gt;, and &lt;code&gt;defcustom&lt;/code&gt;. It then restores any autoloads formerly associated with those symbols. (Loading saves these in the &lt;code&gt;autoload&lt;/code&gt; property of the symbol.)</source>
          <target state="translated">このコマンドは、機能 &lt;var&gt;feature&lt;/var&gt; を提供したライブラリをアンロードします。そのライブラリで定義されているすべての関数、マクロ、および変数を、 &lt;code&gt;defun&lt;/code&gt; 、 &lt;code&gt;defalias&lt;/code&gt; 、 &lt;code&gt;defsubst&lt;/code&gt; 、 &lt;code&gt;defmacro&lt;/code&gt; 、 &lt;code&gt;defconst&lt;/code&gt; 、 &lt;code&gt;defvar&lt;/code&gt; 、および &lt;code&gt;defcustom&lt;/code&gt; で定義解除します。次に、以前はそれらのシンボルに関連付けられていた自動ロードを復元します。（ロードすると、これらはシンボルの &lt;code&gt;autoload&lt;/code&gt; プロパティに保存されます。）</target>
        </trans-unit>
        <trans-unit id="356e5adce275e326509a202c8c9b173cedf5f1de" translate="yes" xml:space="preserve">
          <source>This command uses the functions &lt;code&gt;posn-window&lt;/code&gt; and &lt;code&gt;posn-point&lt;/code&gt; to determine where the click occurred, and &lt;code&gt;dired-get-file-for-visit&lt;/code&gt; to determine which file to visit.</source>
          <target state="translated">このコマンドは、関数 &lt;code&gt;posn-window&lt;/code&gt; および &lt;code&gt;posn-point&lt;/code&gt; を使用してクリックが発生した場所を判別し、 &lt;code&gt;dired-get-file-for-visit&lt;/code&gt; を使用してアクセスするファイルを判別します。</target>
        </trans-unit>
        <trans-unit id="70fe8bc0bd2afe94a6c2200d117768d0b7bd40a2" translate="yes" xml:space="preserve">
          <source>This command visits &lt;var&gt;filename&lt;/var&gt;, like &lt;code&gt;find-file&lt;/code&gt; does, but it does not perform any format conversions (see &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;), character code conversions (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;), or end-of-line conversions (see &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;End of line conversion&lt;/a&gt;). The buffer visiting the file is made unibyte, and its major mode is Fundamental mode, regardless of the file name. File local variable specifications in the file (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;) are ignored, and automatic decompression and adding a newline at the end of the file due to &lt;code&gt;require-final-newline&lt;/code&gt; (see &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;require-final-newline&lt;/a&gt;) are also disabled.</source>
          <target state="translated">このコマンドは、訪問の &lt;var&gt;filename&lt;/var&gt; のように、 &lt;code&gt;find-file&lt;/code&gt; ありませんが、それは（参照任意のフォーマット変換を実行しない&lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;フォーマット変換を&lt;/a&gt;、文字コードの変換（参照）&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;コーディングシステム&lt;/a&gt;）、または行末変換は（参照&lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;線変換の終了&lt;/a&gt;）。ファイルにアクセスするバッファはユニバイトになり、そのメジャーモードはファイル名に関係なく基本モードです。ファイル内のファイルローカル変数の指定（&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;ファイルローカル変数を&lt;/a&gt;参照）は無視され、 &lt;code&gt;require-final-newline&lt;/code&gt; （&lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;require-final-newlineを&lt;/a&gt;参照）によるファイルの最後への自動解凍と改行の追加も無効になります。</target>
        </trans-unit>
        <trans-unit id="cc4dc7bbf64c1061c70eb1b72dd4950577a5fd5f" translate="yes" xml:space="preserve">
          <source>This command writes the current buffer contents into the file &lt;var&gt;file&lt;/var&gt; in a format based on &lt;var&gt;format&lt;/var&gt;, which is a list of format names. It constructs the actual format starting from &lt;var&gt;format&lt;/var&gt;, then appending any elements from the value of &lt;code&gt;buffer-file-format&lt;/code&gt; with a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;preserve&lt;/var&gt; flag (see above), if they are not already present in &lt;var&gt;format&lt;/var&gt;. It then updates &lt;code&gt;buffer-file-format&lt;/code&gt; with this format, making it the default for future saves. Except for the &lt;var&gt;format&lt;/var&gt; argument, this command is similar to &lt;code&gt;write-file&lt;/code&gt;. In particular, &lt;var&gt;confirm&lt;/var&gt; has the same meaning and interactive treatment as the corresponding argument to &lt;code&gt;write-file&lt;/code&gt;. See &lt;a href=&quot;saving-buffers#Definition-of-write_002dfile&quot;&gt;Definition of write-file&lt;/a&gt;.</source>
          <target state="translated">このコマンドは、ファイルに現在のバッファの内容を書き込み &lt;var&gt;file&lt;/var&gt; に基づいた形式で &lt;var&gt;format&lt;/var&gt; 形式名のリストです。それから出発して、実際のフォーマットを構築 &lt;var&gt;format&lt;/var&gt; その後の値から任意の要素を付加し、 &lt;code&gt;buffer-file-format&lt;/code&gt; 非有する &lt;code&gt;nil&lt;/code&gt; を &lt;var&gt;preserve&lt;/var&gt; 彼らは既に存在しない場合、（上記を参照）フラグを &lt;var&gt;format&lt;/var&gt; 。次に、 &lt;code&gt;buffer-file-format&lt;/code&gt; をこの形式で更新し、将来の保存のデフォルトにします。 &lt;var&gt;format&lt;/var&gt; 引数を除いて、このコマンドは &lt;code&gt;write-file&lt;/code&gt; に似ています。特に &lt;var&gt;confirm&lt;/var&gt; &lt;code&gt;write-file&lt;/code&gt; に対応する引数と同じ意味とインタラクティブな処理があります。&lt;a href=&quot;saving-buffers#Definition-of-write_002dfile&quot;&gt;書き込みファイルの定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="231ec5f5ccc3d6dde477ef14115ec1745ff1897f" translate="yes" xml:space="preserve">
          <source>This command, bound to</source>
          <target state="translated">このコマンドは</target>
        </trans-unit>
        <trans-unit id="1c3338397e232f86b2750514859093fc8810288c" translate="yes" xml:space="preserve">
          <source>This command, which is the default binding for</source>
          <target state="translated">このコマンドは</target>
        </trans-unit>
        <trans-unit id="b5a33db16e2d6add492eed0394d609b8c28b88b4" translate="yes" xml:space="preserve">
          <source>This completely replaces the old function with the new one. The old function can of course be recovered if you later call &lt;code&gt;remove-function&lt;/code&gt;.</source>
          <target state="translated">これにより、古い関数が新しい関数に完全に置き換えられます。もちろん、後で &lt;code&gt;remove-function&lt;/code&gt; を呼び出すと、古い関数を復元できます。</target>
        </trans-unit>
        <trans-unit id="c78019f6748a3a6dfca00bef66b7291ea1529488" translate="yes" xml:space="preserve">
          <source>This constant is the name of the file where Emacs expects to find the directory-local variables. The name of the file is</source>
          <target state="translated">この定数は、Emacsがディレクトリローカル変数を見つけることを期待するファイルの名前です。ファイル名は</target>
        </trans-unit>
        <trans-unit id="cb3b8895def2bfbb6c4dd8d0eb4984894e99c3df" translate="yes" xml:space="preserve">
          <source>This construct displays a message in the echo area temporarily, during the execution of &lt;var&gt;body&lt;/var&gt;. It displays &lt;var&gt;message&lt;/var&gt;, executes &lt;var&gt;body&lt;/var&gt;, then returns the value of the last body form while restoring the previous echo area contents.</source>
          <target state="translated">このコンストラクトは、 &lt;var&gt;body&lt;/var&gt; の実行中に、一時的にエコー領域にメッセージを表示します。これは、表示 &lt;var&gt;message&lt;/var&gt; 、実行の &lt;var&gt;body&lt;/var&gt; 前のエコー領域の内容を復元しながら、最後の本体フォームの値を返します。</target>
        </trans-unit>
        <trans-unit id="19e009e83502b67dc27aa2e568013fdd27a55bfb" translate="yes" xml:space="preserve">
          <source>This construct does not actually match an argument. The element following &lt;code&gt;:name&lt;/code&gt; should be a symbol; it is used as an additional name component for the definition. You can use this to add a unique, static component to the name of the definition. It may be used more than once.</source>
          <target state="translated">この構成は実際には引数と一致しません。 &lt;code&gt;:name&lt;/code&gt; に続く要素はシンボルである必要があります。定義の追加の名前コンポーネントとして使用されます。これを使用して、定義の名前に一意の静的コンポーネントを追加できます。複数回使用できます。</target>
        </trans-unit>
        <trans-unit id="48f87892a7b85d73b302dd7a6522316e48ec0085" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt; once for each element of &lt;var&gt;list&lt;/var&gt;, binding the variable &lt;var&gt;var&lt;/var&gt; locally to hold the current element. Then it returns the value of evaluating &lt;var&gt;result&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;result&lt;/var&gt; is omitted. For example, here is how you could use &lt;code&gt;dolist&lt;/code&gt; to define the &lt;code&gt;reverse&lt;/code&gt; function:</source>
          <target state="translated">このコンストラクトは、 &lt;var&gt;list&lt;/var&gt; 要素ごとに &lt;var&gt;body&lt;/var&gt; を1回実行し、変数 &lt;var&gt;var&lt;/var&gt; をローカルにバインドして現在の要素を保持します。そして、それは評価の値が返され &lt;var&gt;result&lt;/var&gt; 、または &lt;code&gt;nil&lt;/code&gt; を場合は &lt;var&gt;result&lt;/var&gt; 省略されているが。たとえば、 &lt;code&gt;dolist&lt;/code&gt; を使用して &lt;code&gt;reverse&lt;/code&gt; 関数を定義する方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5edeb3c65e633a355ce3aad85a8fef27095ea9cb" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt; once for each integer from 0 (inclusive) to &lt;var&gt;count&lt;/var&gt; (exclusive), binding the variable &lt;var&gt;var&lt;/var&gt; to the integer for the current iteration. Then it returns the value of evaluating &lt;var&gt;result&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;result&lt;/var&gt; is omitted. Use of &lt;var&gt;result&lt;/var&gt; is deprecated. Here is an example of using &lt;code&gt;dotimes&lt;/code&gt; to do something 100 times:</source>
          <target state="translated">この構造は、0（包括的）から &lt;var&gt;count&lt;/var&gt; （排他的）までの整数ごとに &lt;var&gt;body&lt;/var&gt; 1回実行し、変数 &lt;var&gt;var&lt;/var&gt; を現在の反復の整数にバインドします。そして、それは評価の値が返され &lt;var&gt;result&lt;/var&gt; 、または &lt;code&gt;nil&lt;/code&gt; を場合は &lt;var&gt;result&lt;/var&gt; 省略されているが。 &lt;var&gt;result&lt;/var&gt; 使用は非推奨です。これは、 &lt;code&gt;dotimes&lt;/code&gt; を使用して100回何かを行う例です。</target>
        </trans-unit>
        <trans-unit id="729255fd2a9e62ab0803f3c02c4b17ced59d0e9e" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt;, ignoring any errors that occur during its execution. If the execution is without error, &lt;code&gt;ignore-errors&lt;/code&gt; returns the value of the last form in &lt;var&gt;body&lt;/var&gt;; otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このコンストラクトは &lt;var&gt;body&lt;/var&gt; を実行し、実行中に発生するエラーを無視します。実行にエラーがない場合、 &lt;code&gt;ignore-errors&lt;/code&gt; は &lt;var&gt;body&lt;/var&gt; 最後のフォームの値を返します。それ以外の場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7fe97e88530edbe7ffd947ec1877e85b28490bc0" translate="yes" xml:space="preserve">
          <source>This construct runs the &lt;var&gt;body&lt;/var&gt; forms and returns the value of the last one&amp;mdash;but only if no input arrives. If any input arrives during the execution of the &lt;var&gt;body&lt;/var&gt; forms, it aborts them (working much like a quit). The &lt;code&gt;while-no-input&lt;/code&gt; form returns &lt;code&gt;nil&lt;/code&gt; if aborted by a real quit, and returns &lt;code&gt;t&lt;/code&gt; if aborted by arrival of other input.</source>
          <target state="translated">このコンストラクトは &lt;var&gt;body&lt;/var&gt; フォームを実行し、最後のフォームの値を返しますが、入力が到着しない場合に限ります。 &lt;var&gt;body&lt;/var&gt; フォームの実行中に入力が到着すると、それらを中止します（終了のように機能します）。 &lt;code&gt;while-no-input&lt;/code&gt; 形に戻り &lt;code&gt;nil&lt;/code&gt; 実によって中止された場合は終了し、戻るの &lt;code&gt;t&lt;/code&gt; 他の入力の到着によって中断された場合。</target>
        </trans-unit>
        <trans-unit id="5db1b36ddb8cefe12158ea887c23f8581f528854" translate="yes" xml:space="preserve">
          <source>This constructs and returns a new ewoc, with no nodes (and thus no data elements). &lt;var&gt;pretty-printer&lt;/var&gt; should be a function that takes one argument, a data element of the sort you plan to use in this ewoc, and inserts its textual description at point using &lt;code&gt;insert&lt;/code&gt; (and never &lt;code&gt;insert-before-markers&lt;/code&gt;, because that would interfere with the Ewoc package&amp;rsquo;s internal mechanisms).</source>
          <target state="translated">これにより、ノードがない（したがって、データ要素がない）新しいewocが作成されて返されます。 &lt;var&gt;pretty-printer&lt;/var&gt; 一つの引数、あなたがこのewocで使用する予定の種類のデータ要素を取り、使用の時点でそのテキストの記述を挿入機能である必要があり &lt;code&gt;insert&lt;/code&gt; （決して &lt;code&gt;insert-before-markers&lt;/code&gt; 、それが干渉するので、 Ewocパッケージの内部メカニズム）。</target>
        </trans-unit>
        <trans-unit id="441d920027c6093e76edc8e411782a53d6bb5e30" translate="yes" xml:space="preserve">
          <source>This controls the way Edebug treats macro arguments with no explicit Edebug specification. If it is &lt;code&gt;nil&lt;/code&gt; (the default), none of the arguments is instrumented for evaluation. Otherwise, all arguments are instrumented.</source>
          <target state="translated">これは、Edebugが明示的なEdebug指定なしでマクロ引数を処理する方法を制御します。それがある場合 &lt;code&gt;nil&lt;/code&gt; （デフォルト）、引数のどれも評価用にインストルメントされません。それ以外の場合は、すべての引数が計測されます。</target>
        </trans-unit>
        <trans-unit id="1a02ef040a510f44b26c35aeb75b50ba1b7bdde8" translate="yes" xml:space="preserve">
          <source>This convenience macro marks the function &lt;var&gt;obsolete-name&lt;/var&gt; obsolete and also defines it as an alias for the function &lt;var&gt;current-name&lt;/var&gt;. It is equivalent to the following:</source>
          <target state="translated">この便利なマクロは、関数 &lt;var&gt;obsolete-name&lt;/var&gt; を廃止としてマークし、関数 &lt;var&gt;current-name&lt;/var&gt; のエイリアスとしても定義します。これは、次と同等です。</target>
        </trans-unit>
        <trans-unit id="58832b1d25d27190f05819990c90bc4cfbcc3a90" translate="yes" xml:space="preserve">
          <source>This conversion applies only to characters, not to function keys or other input events; thus,</source>
          <target state="translated">この変換は文字にのみ適用され、ファンクションキーや他の入力イベントには適用されません。</target>
        </trans-unit>
        <trans-unit id="79546043fcba05c53c168bdc77fbb653585fc00b" translate="yes" xml:space="preserve">
          <source>This convert the unibyte character &lt;var&gt;char&lt;/var&gt; to a multibyte character, assuming &lt;var&gt;char&lt;/var&gt; is either</source>
          <target state="translated">これは、 &lt;var&gt;char&lt;/var&gt; が次のいずれかであると想定して、ユニバイト文字の &lt;var&gt;char&lt;/var&gt; をマルチバイト文字に変換します。</target>
        </trans-unit>
        <trans-unit id="cac58ff91ecd012d9aad90d0f0a1004caffe50f4" translate="yes" xml:space="preserve">
          <source>This converts the multibyte character &lt;var&gt;char&lt;/var&gt; to a unibyte character, and returns that character. If &lt;var&gt;char&lt;/var&gt; is neither</source>
          <target state="translated">これにより、マルチバイト文字の &lt;var&gt;char&lt;/var&gt; がユニバイト文字に変換され、その文字が返されます。 &lt;var&gt;char&lt;/var&gt; がどちらでもない場合</target>
        </trans-unit>
        <trans-unit id="6cd8dd35aa5e580db302a8a9ecc6bc6acb3d465f" translate="yes" xml:space="preserve">
          <source>This corresponds to &lt;code&gt;__attribute__&amp;nbsp;((__noinline__))&lt;/code&gt; attribute of GCC, which prevents the function from being considered for inlining. This might be needed, e.g., to countermand effects of link-time optimizations on stack-based variables.</source>
          <target state="translated">これは、GCCの &lt;code&gt;__attribute__&amp;nbsp;((__noinline__))&lt;/code&gt; 属性に対応し、関数がインライン化の対象と見なされないようにします。これは、たとえば、スタックベースの変数に対するリンク時間の最適化の影響を打ち消すために必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="65593ddaa7a83e6841f2adf0699dc9186e0f9090" translate="yes" xml:space="preserve">
          <source>This could be buffer-local to do something special for specific files. If you change it, you may need to change &lt;code&gt;backup-file-name-p&lt;/code&gt; and &lt;code&gt;file-name-sans-versions&lt;/code&gt; too.</source>
          <target state="translated">これは、特定のファイルに対して特別なことを行うためにバッファローカルである可能性があります。これを変更する場合は、 &lt;code&gt;backup-file-name-p&lt;/code&gt; および &lt;code&gt;file-name-sans-versions&lt;/code&gt; も変更する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="a566ed5cac8786dd67797d3a0d120ea76183719e" translate="yes" xml:space="preserve">
          <source>This could be implemented with multiple buffers (kept in sync when the user edits the text), or with narrowing (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;). But these alternatives might sometimes become tedious or prohibitively expensive, especially if each type of text requires expensive buffer-global operations in order to provide correct display and editing commands.</source>
          <target state="translated">これは、複数のバッファー（ユーザーがテキストを編集するときに同期が保たれる）または&lt;a href=&quot;narrowing#Narrowing&quot;&gt;ナ&lt;/a&gt;ローイング（ナローイングを参照）を使用して実装できます。ただし、これらの代替手段は、特に各タイプのテキストが正しい表示および編集コマンドを提供するために高価なバッファグローバル操作を必要とする場合、面倒または法外に高価になることがあります。</target>
        </trans-unit>
        <trans-unit id="f394b60e38b5599682704674137ba41a07c7b541" translate="yes" xml:space="preserve">
          <source>This creates an uninterned symbol named &lt;code&gt;max&lt;/code&gt; and puts it in the expansion instead of the usual interned symbol &lt;code&gt;max&lt;/code&gt; that appears in expressions ordinarily.</source>
          <target state="translated">これにより、 &lt;code&gt;max&lt;/code&gt; という名前の非インターンシンボルが作成され、通常の式に表示される通常のインターンシンボル &lt;code&gt;max&lt;/code&gt; の代わりに、展開に配置されます。</target>
        </trans-unit>
        <trans-unit id="7aeb8bdf71d865646040e73e725aecf3fd6800e0" translate="yes" xml:space="preserve">
          <source>This creates and returns a display table. The table initially has &lt;code&gt;nil&lt;/code&gt; in all elements.</source>
          <target state="translated">これにより、表示テーブルが作成されて返されます。テーブルには、最初はすべての要素が &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="776e4b68583132ebfa42a8a0e9f9b4feb850568e" translate="yes" xml:space="preserve">
          <source>This creates and returns an empty category table. In an empty category table, no categories have been allocated, and no characters belong to any categories.</source>
          <target state="translated">これは、空のカテゴリテーブルを作成して返します。空のカテゴリテーブルでは、カテゴリが割り当てられておらず、どのカテゴリにも文字が属していません。</target>
        </trans-unit>
        <trans-unit id="e1c8b5645bc9119e30c1142a0bf9ab49e40da845" translate="yes" xml:space="preserve">
          <source>This creates and returns an indirect buffer named &lt;var&gt;name&lt;/var&gt; whose base buffer is &lt;var&gt;base-buffer&lt;/var&gt;. The argument &lt;var&gt;base-buffer&lt;/var&gt; may be a live buffer or the name (a string) of an existing buffer. If &lt;var&gt;name&lt;/var&gt; is the name of an existing buffer, an error is signaled.</source>
          <target state="translated">これにより、ベースバッファが &lt;var&gt;base-buffer&lt;/var&gt; である &lt;var&gt;name&lt;/var&gt; という名前の間接バッファが作成されて返されます。引数 &lt;var&gt;base-buffer&lt;/var&gt; は、ライブバッファー、または既存のバッファーの名前（文字列）の場合があります。 &lt;var&gt;name&lt;/var&gt; が既存のバッファの名前である場合、エラーが通知されます。</target>
        </trans-unit>
        <trans-unit id="15b1ed7c7974555a78f9a8cdd2241db7107cd225" translate="yes" xml:space="preserve">
          <source>This creates and returns an xwidget object. If &lt;var&gt;buffer&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer. If &lt;var&gt;buffer&lt;/var&gt; names a buffer that doesn&amp;rsquo;t exist, it will be created. The &lt;var&gt;type&lt;/var&gt; identifies the type of the xwidget component, it can be one of the following:</source>
          <target state="translated">これにより、xwidgetオブジェクトが作成されて返されます。場合は &lt;var&gt;buffer&lt;/var&gt; 省略されるかされ &lt;code&gt;nil&lt;/code&gt; の現在のバッファがデフォルト。場合は &lt;var&gt;buffer&lt;/var&gt; 名が存在しないバッファ、それが作成されます。タイプはxwidgetコンポーネントの &lt;var&gt;type&lt;/var&gt; 識別します。次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="96eaebac0f2f915eb1298d8f003d34d0fc4b82d3" translate="yes" xml:space="preserve">
          <source>This customizable option holds the default frame parameters used for displaying tooltips. Any font and color parameters are ignored, and the corresponding attributes of the &lt;code&gt;tooltip&lt;/code&gt; face are used instead. If &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; parameters are included, they are used as absolute frame-relative coordinates where the tooltip should be shown. (Mouse-relative position of the tooltip can be customized using the variables described in &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</source>
          <target state="translated">このカスタマイズ可能なオプションは、ツールチップの表示に使用されるデフォルトのフレームパラメータを保持します。フォントと色のパラメータはすべて無視され、代わりに &lt;code&gt;tooltip&lt;/code&gt; 面の対応する属性が使用されます。場合 &lt;code&gt;left&lt;/code&gt; または &lt;code&gt;top&lt;/code&gt; パラメータが含まれ、それらは、ツールチップが表示されるべき絶対フレームに対する相対座標として使用されます。記載された変数でカスタマイズすることができるツールチップの（マウスの相対位置&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;ツールチップ&lt;/a&gt;での</target>
        </trans-unit>
        <trans-unit id="e32676621b26be88214ba41100c3be58060e2082" translate="yes" xml:space="preserve">
          <source>This customization type is similar to &lt;code&gt;alist&lt;/code&gt; (see above), except that (i) the information is stored as a property list, (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;), and (ii) &lt;var&gt;key-type&lt;/var&gt;, if omitted, defaults to &lt;code&gt;symbol&lt;/code&gt; rather than &lt;code&gt;sexp&lt;/code&gt;.</source>
          <target state="translated">このカスタマイズタイプは &lt;code&gt;alist&lt;/code&gt; （上記を参照）に似ていますが、（i）情報がプロパティリストとして保存され（&lt;a href=&quot;property-lists#Property-Lists&quot;&gt;プロパティリストを&lt;/a&gt;参照）、（ii） &lt;var&gt;key-type&lt;/var&gt; が省略されている場合、デフォルトで &lt;code&gt;sexp&lt;/code&gt; ではなく &lt;code&gt;symbol&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="61ef043faf532a08fb5accd37a8605a58e78e8e0" translate="yes" xml:space="preserve">
          <source>This defines a global toggle named &lt;var&gt;global-mode&lt;/var&gt; whose meaning is to enable or disable the buffer-local minor mode &lt;var&gt;mode&lt;/var&gt; in all buffers. It also executes the &lt;var&gt;body&lt;/var&gt; forms. To turn on the minor mode in a buffer, it uses the function &lt;var&gt;turn-on&lt;/var&gt;; to turn off the minor mode, it calls &lt;var&gt;mode&lt;/var&gt; with -1 as argument.</source>
          <target state="translated">これは、グローバル &lt;var&gt;global-mode&lt;/var&gt; という名前のグローバルトグルを定義します。その意味は、すべてのバッファーでバッファーローカルマイナーモード &lt;var&gt;mode&lt;/var&gt; を有効または無効にすることです。また、 &lt;var&gt;body&lt;/var&gt; フォームを実行します。バッファ内のマイナーモードをオンにするには、関数 &lt;var&gt;turn-on&lt;/var&gt; を使用します。マイナーモードをオフにするには、引数として-1を指定して &lt;var&gt;mode&lt;/var&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="f8af97490ad006efd7dedc92ffa9b688078ca86f" translate="yes" xml:space="preserve">
          <source>This defines a minor mode named &amp;ldquo;Hungry mode&amp;rdquo;, a command named &lt;code&gt;hungry-mode&lt;/code&gt; to toggle it, a variable named &lt;code&gt;hungry-mode&lt;/code&gt; which indicates whether the mode is enabled, and a variable named &lt;code&gt;hungry-mode-map&lt;/code&gt; which holds the keymap that is active when the mode is enabled. It initializes the keymap with a key binding for</source>
          <target state="translated">これは、「空腹モード」、というコマンドという名前のマイナーモードを定義 &lt;code&gt;hungry-mode&lt;/code&gt; を切り替えるには、名前の変数 &lt;code&gt;hungry-mode&lt;/code&gt; モードが有効になっているかどうかを示し、およびという名前の変数 &lt;code&gt;hungry-mode-map&lt;/code&gt; であるキーマップを保持していますモードが有効な場合にアクティブになります。のキーバインディングを使用してキーマップを初期化します</target>
        </trans-unit>
        <trans-unit id="25b921cab86c0a9d48be338a53d51fa2582ea497" translate="yes" xml:space="preserve">
          <source>This defines a single Lisp form which is evaluated after the mode hooks have run. It should not be quoted.</source>
          <target state="translated">これは、モードフックが実行された後に評価される単一のLispフォームを定義します。引用符で囲んではいけません。</target>
        </trans-unit>
        <trans-unit id="a9ccae35dc95201daddf035a3127e41baa5ade46" translate="yes" xml:space="preserve">
          <source>This defines four comment-delimiting sequences:</source>
          <target state="translated">これは、4つのコメント区切りシーケンスを定義しています。</target>
        </trans-unit>
        <trans-unit id="61c8f0ccafaa8d4d7b6ac3320bcf8e246b6593b9" translate="yes" xml:space="preserve">
          <source>This defines the customization option &lt;var&gt;global-mode&lt;/var&gt; (see &lt;a href=&quot;customization#Customization&quot;&gt;Customization&lt;/a&gt;), which can be toggled in the Customize interface to turn the minor mode on and off. As with &lt;code&gt;define-minor-mode&lt;/code&gt;, you should ensure that the &lt;code&gt;define-globalized-minor-mode&lt;/code&gt; form is evaluated each time Emacs starts, for example by providing a &lt;code&gt;:require&lt;/code&gt; keyword.</source>
          <target state="translated">これは、カスタマイズオプション &lt;var&gt;global-mode&lt;/var&gt; （&lt;a href=&quot;customization#Customization&quot;&gt;カスタマイズを&lt;/a&gt;参照）を定義します。これは、カスタマイズインターフェイスで切り替えて、マイナーモードのオンとオフを切り替えることができます。同じように &lt;code&gt;define-minor-mode&lt;/code&gt; 、あなたがいることを確認する必要があります &lt;code&gt;define-globalized-minor-mode&lt;/code&gt; フォームがたびに評価され、Emacsが提供することで、例えば、始まり &lt;code&gt;:require&lt;/code&gt; キーワードを。</target>
        </trans-unit>
        <trans-unit id="0654c2fe1757cc99313b9ee8d9bde98f4406d6ec" translate="yes" xml:space="preserve">
          <source>This deletes each node in &lt;var&gt;nodes&lt;/var&gt; from &lt;var&gt;ewoc&lt;/var&gt;.</source>
          <target state="translated">これは、各ノードを削除する &lt;var&gt;nodes&lt;/var&gt; から &lt;var&gt;ewoc&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="42d97322be035858edbad1a9d48f7b8d2178c424" translate="yes" xml:space="preserve">
          <source>This deletes the file named &lt;var&gt;filename&lt;/var&gt;, catching any error and returning &lt;code&gt;nil&lt;/code&gt; if an error occurs. (You can use the macro &lt;code&gt;ignore-errors&lt;/code&gt; for a simple case like this; see below.)</source>
          <target state="translated">これにより、 &lt;var&gt;filename&lt;/var&gt; という名前のファイルが削除され、エラーがキャッチされ、エラーが発生した場合は &lt;code&gt;nil&lt;/code&gt; が返されます。（このような単純なケースでは、マクロ &lt;code&gt;ignore-errors&lt;/code&gt; を使用できます。以下を参照してください。）</target>
        </trans-unit>
        <trans-unit id="40c2d1f86da44e947b5c2bd5c7621c71f7d4692c" translate="yes" xml:space="preserve">
          <source>This determines the node in &lt;var&gt;ewoc&lt;/var&gt; which contains point (or &lt;var&gt;pos&lt;/var&gt; if specified), and returns that node. If &lt;var&gt;ewoc&lt;/var&gt; has no nodes, it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;pos&lt;/var&gt; is before the first node, it returns the first node; if &lt;var&gt;pos&lt;/var&gt; is after the last node, it returns the last node. The optional third arg &lt;var&gt;guess&lt;/var&gt; should be a node that is likely to be near &lt;var&gt;pos&lt;/var&gt;; this doesn&amp;rsquo;t alter the result, but makes the function run faster.</source>
          <target state="translated">これにより、ポイント（または指定されている場合は &lt;var&gt;pos&lt;/var&gt; ）を含む &lt;var&gt;ewoc&lt;/var&gt; 内のノードが決定され、そのノードが返されます。 &lt;var&gt;ewoc&lt;/var&gt; にノードがない場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。 &lt;var&gt;pos&lt;/var&gt; が最初のノードの前にある場合、最初のノードを返します。 &lt;var&gt;pos&lt;/var&gt; が最後のノードの後に​​ある場合、最後のノードを返します。オプションの3番目の引数の &lt;var&gt;guess&lt;/var&gt; は、 &lt;var&gt;pos&lt;/var&gt; に近い可能性が高いノードである必要があります。これによって結果が変わることはありませんが、関数の実行が速くなります。</target>
        </trans-unit>
        <trans-unit id="19360270f62f12bc6a373a7cb78889f2c4a7b650" translate="yes" xml:space="preserve">
          <source>This differs from ordinary syntax such as this</source>
          <target state="translated">このような通常の構文とは異なります。</target>
        </trans-unit>
        <trans-unit id="7269a995a026e6157e1f1ebb99d0283d69ea4f8f" translate="yes" xml:space="preserve">
          <source>This display action specifies the fallback behavior for &lt;code&gt;display-buffer&lt;/code&gt; if no other display actions are given.</source>
          <target state="translated">この表示アクションは、他の表示アクションが指定されていない場合の &lt;code&gt;display-buffer&lt;/code&gt; のフォールバック動作を指定します。</target>
        </trans-unit>
        <trans-unit id="b8689d2faeec8c24b11323876ebe042c75f4be39" translate="yes" xml:space="preserve">
          <source>This display specification affects all the space characters within the text that has the specification. It displays all of these spaces &lt;var&gt;factor&lt;/var&gt; times as wide as normal. The element &lt;var&gt;factor&lt;/var&gt; should be an integer or float. Characters other than spaces are not affected at all; in particular, this has no effect on tab characters.</source>
          <target state="translated">この表示仕様は、仕様を持つテキスト内のすべてのスペース文字に影響します。これらのスペースはすべて、通常の &lt;var&gt;factor&lt;/var&gt; 倍の幅で表示されます。要素 &lt;var&gt;factor&lt;/var&gt; は整数または浮動小数点数である必要があります。スペース以外の文字はまったく影響を受けません。特に、これはタブ文字には影響しません。</target>
        </trans-unit>
        <trans-unit id="592cefd94a03b4739baef199b154e396c1ef073d" translate="yes" xml:space="preserve">
          <source>This display specification makes the text taller or shorter. Here are the possibilities for &lt;var&gt;height&lt;/var&gt;:</source>
          <target state="translated">この表示仕様により、テキストが高くなったり短くなったりします。 &lt;var&gt;height&lt;/var&gt; の可能性は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="36a3ea4223936b8a16479fbc53763ae4b8a71d99" translate="yes" xml:space="preserve">
          <source>This display specification on any character of a line of text causes the specified &lt;var&gt;bitmap&lt;/var&gt; be displayed in the left or right fringes for that line, instead of the characters that have the display specification. The optional &lt;var&gt;face&lt;/var&gt; specifies the face whose colors are to be used for the bitmap display. See &lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;Fringe Bitmaps&lt;/a&gt;, for the details.</source>
          <target state="translated">テキスト行の任意の文字に対するこの表示仕様により、指定された &lt;var&gt;bitmap&lt;/var&gt; は、表示仕様を持つ文字ではなく、その行の左または右のフリンジに表示されます。オプションの &lt;var&gt;face&lt;/var&gt; は、ビットマップ表示に使用される色の面を指定します。詳細については、&lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;フリンジビットマップを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="93cf65c9a0445a80ca8a8165521ce7ee2fd04b18" translate="yes" xml:space="preserve">
          <source>This does for the size parameters &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; what the &lt;code&gt;user-position&lt;/code&gt; parameter (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;user-position&lt;/a&gt;) does for the position parameters &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">これは、サイズパラメータの &lt;code&gt;height&lt;/code&gt; と &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;user-position&lt;/code&gt; パラメータ（&lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;user-positionを&lt;/a&gt;参照）が位置パラメータの &lt;code&gt;top&lt;/code&gt; と &lt;code&gt;left&lt;/code&gt; に対して行うことを行います。</target>
        </trans-unit>
        <trans-unit id="38712cb66f1b52401b8eeac29a5ad9b91c46b923" translate="yes" xml:space="preserve">
          <source>This does not depend on one of the libraries linked to Emacs.</source>
          <target state="translated">これはEmacsにリンクされているライブラリのいずれかに依存しません。</target>
        </trans-unit>
        <trans-unit id="13166b5b8bd0e09ebf367e7317f249e78ab03831" translate="yes" xml:space="preserve">
          <source>This either tries to split the window at the bottom of the frame or the frame&amp;rsquo;s root window, or to reuse an existing window at the bottom of the selected frame.</source>
          <target state="translated">これは、フレームの下部またはフレームのルートウィンドウでウィンドウを分割するか、選択したフレームの下部で既存のウィンドウを再利用しようとします。</target>
        </trans-unit>
        <trans-unit id="6508c390fad6127b900c1ed90f5801b40662d322" translate="yes" xml:space="preserve">
          <source>This element is a boundary. The elements between two boundaries are called a &lt;em&gt;change group&lt;/em&gt;; normally, each change group corresponds to one keyboard command, and undo commands normally undo an entire group as a unit.</source>
          <target state="translated">この要素は境界です。2つの境界の間の要素は、&lt;em&gt;変更グループ&lt;/em&gt;と呼ばれます。通常、各変更グループは1つのキーボードコマンドに対応し、元に戻すコマンドは通常、グループ全体を1つの単位として元に戻します。</target>
        </trans-unit>
        <trans-unit id="e54b773d4f02d66db9663356d9f794f2138e5279" translate="yes" xml:space="preserve">
          <source>This element of &lt;var&gt;spec&lt;/var&gt; doesn&amp;rsquo;t match any terminal; instead, it specifies defaults that apply to all terminals. This element, if used, must be the first element of &lt;var&gt;spec&lt;/var&gt;. Each of the following elements can override any or all of these defaults.</source>
          <target state="translated">&lt;var&gt;spec&lt;/var&gt; この要素はどの端末とも一致しません。代わりに、すべての端末に適用されるデフォルトを指定します。この要素を使用する場合は、 &lt;var&gt;spec&lt;/var&gt; 最初の要素にする必要があります。次の各要素は、これらのデフォルトのいずれかまたはすべてをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="307e77b079ef7349c14d6f5197aa13acf3da80fc" translate="yes" xml:space="preserve">
          <source>This element of &lt;var&gt;spec&lt;/var&gt; matches all terminals. Therefore, any subsequent elements of &lt;var&gt;spec&lt;/var&gt; are never used. Normally &lt;code&gt;t&lt;/code&gt; is used in the last (or only) element of &lt;var&gt;spec&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;spec&lt;/var&gt; この要素は、すべての端末に一致します。したがって、 &lt;var&gt;spec&lt;/var&gt; 後続の要素は使用されません。通常、 &lt;code&gt;t&lt;/code&gt; は &lt;var&gt;spec&lt;/var&gt; 最後の（または唯一の）要素で使用されます。</target>
        </trans-unit>
        <trans-unit id="f44b269dc35504667b8fd5dfc82cea359e827180" translate="yes" xml:space="preserve">
          <source>This entry is similar to the &lt;code&gt;window-height&lt;/code&gt; entry described before, but used to adjust the chosen window&amp;rsquo;s width instead. The value can be one of the following:</source>
          <target state="translated">このエントリは、前に説明した &lt;code&gt;window-height&lt;/code&gt; エントリに似ていますが、代わりに、選択したウィンドウの幅を調整するために使用されます。値は次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="44b7f094fb9e2b284f706f57d35c08d71bf8c5c3" translate="yes" xml:space="preserve">
          <source>This error can be handled through any of its condition names. This example handles &lt;code&gt;new-error&lt;/code&gt; and any other errors in the class &lt;code&gt;my-own-errors&lt;/code&gt;:</source>
          <target state="translated">このエラーは、その条件名のいずれかを介して処理できます。この例では &lt;code&gt;my-own-errors&lt;/code&gt; クラスの &lt;code&gt;new-error&lt;/code&gt; およびその他のエラーを処理します。</target>
        </trans-unit>
        <trans-unit id="720b7aaa94a82d01c4794fe20d63e61b139885dd" translate="yes" xml:space="preserve">
          <source>This error has several condition names: &lt;code&gt;new-error&lt;/code&gt;, the narrowest classification; &lt;code&gt;my-own-errors&lt;/code&gt;, which we imagine is a wider classification; and all the conditions of &lt;code&gt;my-own-errors&lt;/code&gt; which should include &lt;code&gt;error&lt;/code&gt;, which is the widest of all.</source>
          <target state="translated">このエラーにはいくつかの条件名があります &lt;code&gt;new-error&lt;/code&gt; 、最も狭い分類。 &lt;code&gt;my-own-errors&lt;/code&gt; たちが想像するmy-own-errorsは、より広い分類です。そして、すべての中で最も広い &lt;code&gt;error&lt;/code&gt; を含むべきである &lt;code&gt;my-own-errors&lt;/code&gt; すべての条件。</target>
        </trans-unit>
        <trans-unit id="46f76051817e74eb67edb4d63ff61ecd701e1276" translate="yes" xml:space="preserve">
          <source>This evaluates the arguments &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;(* 2 3)&lt;/code&gt;, and &lt;code&gt;(- 5
4)&lt;/code&gt; from left to right. Then it applies the lambda expression to the argument values 1, 6 and 1 to produce the value 8.</source>
          <target state="translated">これは、引数 &lt;code&gt;1&lt;/code&gt; 、 &lt;code&gt;(* 2 3)&lt;/code&gt; 、および &lt;code&gt;(- 5 4)&lt;/code&gt; を左から右に評価します。次に、ラムダ式を引数値1、6、および1に適用して、値8を生成します。</target>
        </trans-unit>
        <trans-unit id="69c1c748bf3cd5a287abc63381636360fa27e7db" translate="yes" xml:space="preserve">
          <source>This example affects only C mode proper. To add the same patterns to C mode &lt;em&gt;and&lt;/em&gt; all modes derived from it, do this instead:</source>
          <target state="translated">この例は、適切なCモードにのみ影響します。同じパターンをCモード&lt;em&gt;と&lt;/em&gt;それから派生したすべてのモードに追加するには、代わりに次のようにします。</target>
        </trans-unit>
        <trans-unit id="5384ed028486d0b91b0394b48e1cb533ea34ce58" translate="yes" xml:space="preserve">
          <source>This example can be extended to be a color selection widget (in other words, the &amp;ldquo;controller&amp;rdquo; part of the &amp;ldquo;model&amp;ndash;view&amp;ndash;controller&amp;rdquo; design paradigm) by defining commands to modify &lt;code&gt;colorcomp-data&lt;/code&gt; and to finish the selection process, and a keymap to tie it all together conveniently.</source>
          <target state="translated">この例は、 &lt;code&gt;colorcomp-data&lt;/code&gt; を変更して選択プロセスを終了するコマンドを定義することにより、色選択ウィジェット（つまり、「モデル-ビュー-コントローラー」設計パラダイムの「コントローラー」部分）に拡張できます。すべてを便利に結び付けるためのキーマップ。</target>
        </trans-unit>
        <trans-unit id="df08f64e57d04de8aaa9e8c787229bb4af344be9" translate="yes" xml:space="preserve">
          <source>This example creates a hash table whose keys are strings that are compared case-insensitively.</source>
          <target state="translated">この例では、キーが文字列であり、大文字小文字を区別せずに比較されるハッシュテーブルを作成します。</target>
        </trans-unit>
        <trans-unit id="f1a5216565ce67155ee836de4737ae2e0b658c35" translate="yes" xml:space="preserve">
          <source>This example creates a sparse keymap and makes a number of bindings in it:</source>
          <target state="translated">この例では、疎なキーマップを作成し、その中にいくつかのバインディングを作成します。</target>
        </trans-unit>
        <trans-unit id="c10cacdf2de04ef95f61acc180ccc22f0b05e92b" translate="yes" xml:space="preserve">
          <source>This example has a small bug: if the user types</source>
          <target state="translated">この例には小さなバグがあります。</target>
        </trans-unit>
        <trans-unit id="cbee9460ee0719dec38b54326085d108517447be" translate="yes" xml:space="preserve">
          <source>This example initializes the value of &lt;code&gt;bar&lt;/code&gt; to &lt;code&gt;23&lt;/code&gt;, and gives it a documentation string:</source>
          <target state="translated">この例では、 &lt;code&gt;bar&lt;/code&gt; の値を &lt;code&gt;23&lt;/code&gt; に初期化し、ドキュメント文字列を提供します。</target>
        </trans-unit>
        <trans-unit id="67e8773626193e784e2ea64066293bd3b65f7fb7" translate="yes" xml:space="preserve">
          <source>This example shows how &lt;code&gt;copy-alist&lt;/code&gt; makes it possible to change the associations of one copy without affecting the other:</source>
          <target state="translated">この例は、 &lt;code&gt;copy-alist&lt;/code&gt; が、他のコピーに影響を与えることなく、一方のコピーの関連付けを変更できるようにする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="960576953dddb4f1d23f0b9aa313e71228f26d76" translate="yes" xml:space="preserve">
          <source>This example shows how to convert the window-relative coordinates in the text area of a window into frame-relative coordinates:</source>
          <target state="translated">この例では、ウィンドウのテキストエリアのウィンドウ相対座標をフレーム相対座標に変換する方法を示します。</target>
        </trans-unit>
        <trans-unit id="0bed23725454106589c0f1789605a60658a8b116" translate="yes" xml:space="preserve">
          <source>This executes &lt;var&gt;body&lt;/var&gt; normally, except any buffer changes it makes do not trigger the calls to &lt;code&gt;before-change-functions&lt;/code&gt; and &lt;code&gt;after-change-functions&lt;/code&gt;. Instead there is a single call of each of these hooks for the region enclosed by &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, the parameters supplied to &lt;code&gt;after-change-functions&lt;/code&gt; reflecting the changes made to the size of the region by &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">これは &lt;var&gt;body&lt;/var&gt; 正常に実行しますが、バッファを変更しても、 &lt;code&gt;before-change-functions&lt;/code&gt; および &lt;code&gt;after-change-functions&lt;/code&gt; の呼び出しはトリガーされません。代わりに、 &lt;var&gt;beg&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; で囲まれた領域に対して、これらのフックのそれぞれが1回呼び出されます。パラメーターは、 &lt;var&gt;body&lt;/var&gt; によって領域のサイズに加えられた変更を反映して、変更 &lt;code&gt;after-change-functions&lt;/code&gt; 提供されます。</target>
        </trans-unit>
        <trans-unit id="97a99daef0e09aadad6a1edb95c2efaf5e43925d" translate="yes" xml:space="preserve">
          <source>This exists as a separate function so that you can redefine it to customize the naming convention for auto-save files. Be sure to change &lt;code&gt;auto-save-file-name-p&lt;/code&gt; in a corresponding way.</source>
          <target state="translated">これは別個の関数として存在するため、再定義して自動保存ファイルの命名規則をカスタマイズできます。必ず &lt;code&gt;auto-save-file-name-p&lt;/code&gt; を対応する方法で変更してください。</target>
        </trans-unit>
        <trans-unit id="83ac2665fcb7f52cf7b79acb847f017da9c9ded9" translate="yes" xml:space="preserve">
          <source>This extracts the data encapsulated by &lt;var&gt;node&lt;/var&gt; and returns it.</source>
          <target state="translated">これにより、 &lt;var&gt;node&lt;/var&gt; によってカプセル化されたデータが抽出され、返されます。</target>
        </trans-unit>
        <trans-unit id="30d143d6a1708406abec26b984fa5693fbea22dd" translate="yes" xml:space="preserve">
          <source>This feature has a drawback: if you delete, move, or alter the compiled file (such as by compiling a new version), Emacs may no longer be able to access the documentation string of previously-loaded functions or variables. Such a problem normally only occurs if you build Emacs yourself, and happen to edit and/or recompile the Lisp source files. To solve it, just reload each file after recompilation.</source>
          <target state="translated">この機能には欠点があります。コンパイルされたファイルを削除したり、移動したり、変更したりすると (新しいバージョンをコンパイルするなどして)、Emacs は以前にロードされた関数や変数のドキュメント文字列にアクセスできなくなることがあります。このような問題は通常、Emacsを自分でビルドしていて、たまたまLispソースファイルを編集したり再コンパイルしたりした場合にのみ発生します。この問題を解決するには、再コンパイル後に各ファイルをリロードするだけです。</target>
        </trans-unit>
        <trans-unit id="b1b235c150a1d977f48eb3bd46de4ada97a7551a" translate="yes" xml:space="preserve">
          <source>This feature is particularly useful for macro definitions, since the arguments written in a macro definition often do not correspond to the way users think of the parts of the macro call.</source>
          <target state="translated">マクロ定義で書かれた引数が、マクロ呼び出しの部分のユーザーの考え方と一致しないことがよくあるので、この機能は特にマクロ定義に便利です。</target>
        </trans-unit>
        <trans-unit id="05244ec22d7bb68a0e405d823ab136f1bab8c8f8" translate="yes" xml:space="preserve">
          <source>This feature is typically used to give word syntax to characters which normally have symbol syntax, and thus to simplify &lt;code&gt;imenu-generic-expression&lt;/code&gt; and speed up matching. For example, Fortran mode uses it this way:</source>
          <target state="translated">この機能は通常、通常は記号構文を持つ文字に単語構文を与えるために使用され、したがって &lt;code&gt;imenu-generic-expression&lt;/code&gt; を単純化し、マッチングを高速化します。たとえば、Fortranモードでは次のように使用します。</target>
        </trans-unit>
        <trans-unit id="1c756af06b78daa5071e0e816f76e8d18db82de0" translate="yes" xml:space="preserve">
          <source>This feature is used in the mode line and for other active text.</source>
          <target state="translated">この機能は、モードラインなどのアクティブテキストに使用されます。</target>
        </trans-unit>
        <trans-unit id="d0cc127f9ed89a0052cb078c44752f47ce7ae748" translate="yes" xml:space="preserve">
          <source>This field contains flags indicating that certain variables are local in this buffer. Such variables are declared in the C code using &lt;code&gt;DEFVAR_PER_BUFFER&lt;/code&gt;, and their buffer-local bindings are stored in fields in the buffer structure itself. (Some of these fields are described in this table.)</source>
          <target state="translated">このフィールドには、特定の変数がこのバッファー内でローカルであることを示すフラグが含まれています。このような変数は、 &lt;code&gt;DEFVAR_PER_BUFFER&lt;/code&gt; を使用してCコードで宣言され、それらのバッファーローカルバインディングは、バッファー構造自体のフィールドに格納されます。（これらのフィールドの一部は、この表で説明されています。）</target>
        </trans-unit>
        <trans-unit id="fdaffa88c0149b338fbb30614684d73e20ce7a4d" translate="yes" xml:space="preserve">
          <source>This field contains the value of &lt;code&gt;cursor_off_p&lt;/code&gt; as of the time of the last redisplay.</source>
          <target state="translated">このフィールドには、最後の再表示時の &lt;code&gt;cursor_off_p&lt;/code&gt; の値が含まれます。</target>
        </trans-unit>
        <trans-unit id="25df1e8281ce04573d0c7a47654f62f6ead766ae" translate="yes" xml:space="preserve">
          <source>This field holds the current overlay center position. See &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;.</source>
          <target state="translated">このフィールドは、現在のオーバーレイの中心位置を保持します。&lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;オーバーレイの管理を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="53fae5326fb6152954c070db1d8b82e97b1478f7" translate="yes" xml:space="preserve">
          <source>This field is non-zero if the cursor is physically on.</source>
          <target state="translated">このフィールドは、カーソルが物理的にオンになっている場合はゼロではありません。</target>
        </trans-unit>
        <trans-unit id="1d317714cd86b2e5c16957c75986c0b66b779bc1" translate="yes" xml:space="preserve">
          <source>This field is set to a non-zero value if &lt;code&gt;window_end_pos&lt;/code&gt; and &lt;code&gt;window_end_vpos&lt;/code&gt; are truly valid. This is zero if nontrivial redisplay is pre-empted, since in that case the display that &lt;code&gt;window_end_pos&lt;/code&gt; was computed for did not get onto the screen.</source>
          <target state="translated">&lt;code&gt;window_end_pos&lt;/code&gt; と &lt;code&gt;window_end_vpos&lt;/code&gt; が本当に有効な場合、このフィールドはゼロ以外の値に設定されます。重要な再表示がプリエンプトされた場合、 &lt;code&gt;window_end_pos&lt;/code&gt; が計算された表示が画面に表示されなかったため、これはゼロです。</target>
        </trans-unit>
        <trans-unit id="6b26cb64b7c663711e8795ccea986462e9c7367e" translate="yes" xml:space="preserve">
          <source>This flag causes any padding specified by the width to be inserted on the right rather than the left.</source>
          <target state="translated">このフラグは、幅で指定したパディングを左ではなく右に挿入します。</target>
        </trans-unit>
        <trans-unit id="5278a8a106127e8fc495b187df39a6337cc62e1b" translate="yes" xml:space="preserve">
          <source>This flag causes any padding specified by the width to consist of &amp;lsquo;</source>
          <target state="translated">このフラグにより​​、幅で指定されたパディングは 'で構成されます。</target>
        </trans-unit>
        <trans-unit id="5dd359a766179c85de84888aadbae58262df5709" translate="yes" xml:space="preserve">
          <source>This flag causes the substitution to be truncated on the left to the given width, if specified.</source>
          <target state="translated">このフラグは、指定された場合には、指定された幅で左に切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="4e61e85dae038fb0c3a44fdb662be1a054d209df" translate="yes" xml:space="preserve">
          <source>This flag causes the substitution to be truncated on the right to the given width, if specified.</source>
          <target state="translated">このフラグは、指定された場合には、指定された幅で右に切り捨てられるようにします。</target>
        </trans-unit>
        <trans-unit id="802456f2a422be0cbf38e1946b06bb9ed99ba1c4" translate="yes" xml:space="preserve">
          <source>This flag converts the substituted text to lower case (see &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;).</source>
          <target state="translated">このフラグは、置換されたテキストを小文字に変換します（&lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;大文字と小文字の変換を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c3743c5c43d5db77d585873a04220c975872ceeb" translate="yes" xml:space="preserve">
          <source>This flag converts the substituted text to upper case (see &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;).</source>
          <target state="translated">このフラグは、置換されたテキストを大文字に変換します（&lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;大文字と小文字の変換を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="def6909cec139f656b6eb03bda4bd9fcdf92962d" translate="yes" xml:space="preserve">
          <source>This flag indicates that narrowing has changed in the buffer. See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.</source>
          <target state="translated">このフラグは、バッファ内でナローイングが変更されたことを示します。&lt;a href=&quot;narrowing#Narrowing&quot;&gt;ナローイングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ea1149fc15f86d73e215992b24665aef4bf65888" translate="yes" xml:space="preserve">
          <source>This flag indicates that redisplay optimizations should not be used to display this buffer.</source>
          <target state="translated">このフラグは、このバッファを表示するために再表示最適化を使用すべきではないことを示します。</target>
        </trans-unit>
        <trans-unit id="3e34e60de1451f315119342439e2c2ea69a78715" translate="yes" xml:space="preserve">
          <source>This flag is &lt;code&gt;t&lt;/code&gt; while loading all of the basic functions for building Emacs initially (allowing those functions to be shareable and non-collectible). Dumping Emacs as an executable always writes &lt;code&gt;nil&lt;/code&gt; in this variable, regardless of the value it actually has before and after dumping.</source>
          <target state="translated">このフラグは、Emacsを最初に構築するためのすべての基本関数をロードしている間は &lt;code&gt;t&lt;/code&gt; です（これらの関数を共有および非収集できるようにします）。Emacsを実行可能ファイルとしてダンプすると、ダンプの前後の実際の値に関係なく、常にこの変数に &lt;code&gt;nil&lt;/code&gt; が書き込まれます。</target>
        </trans-unit>
        <trans-unit id="ba39cdb2bb11024ced7b8ee0a40f5f800d6c1008" translate="yes" xml:space="preserve">
          <source>This form affects the sorting order for combining applicable methods. Normally, when two methods are compared during combination, method arguments are examined left to right, and the first method whose argument specializer is more specific will come before the other one. The order defined by this form overrides that, and the arguments are examined according to their order in this form, and not left to right.</source>
          <target state="translated">この形式は、適用可能なメソッドを結合する際のソート順序に影響を与えます。通常、2つのメソッドが結合中に比較される場合、メソッドの引数は左から右に検査され、引数の特殊化がより具体的な最初のメソッドが他のメソッドよりも前に来ます。このフォームで定義された順序はそれを上書きし、引数は左から右へではなく、このフォームの順序に従って検査されます。</target>
        </trans-unit>
        <trans-unit id="e4fb70066384e0cceb907663b752d4b769967338" translate="yes" xml:space="preserve">
          <source>This form defines a method like &lt;code&gt;cl-defmethod&lt;/code&gt; does.</source>
          <target state="translated">このフォームは、 &lt;code&gt;cl-defmethod&lt;/code&gt; のようにメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="dc35ed413d87b4336d4e89f97b486782c7451f45" translate="yes" xml:space="preserve">
          <source>This form is rarely used and is now deprecated. Instead, you should write it as:</source>
          <target state="translated">この形式はほとんど使われておらず、現在は非推奨となっています。代わりに、次のように書くべきです。</target>
        </trans-unit>
        <trans-unit id="3cc0709efb5d18fcc8207dee6c21b0fb2f81ad06" translate="yes" xml:space="preserve">
          <source>This form marks &lt;var&gt;body&lt;/var&gt; to be evaluated at compile time but not when the compiled program is loaded. The result of evaluation by the compiler becomes a constant which appears in the compiled program. If you load the source file, rather than compiling it, &lt;var&gt;body&lt;/var&gt; is evaluated normally.</source>
          <target state="translated">このフォームは、コンパイル時に評価される &lt;var&gt;body&lt;/var&gt; をマークしますが、コンパイルされたプログラムがロードされるときはマークしません。コンパイラによる評価の結果は、コンパイルされたプログラムに表示される定数になります。ソースファイルをコンパイルするのではなくロードすると、 &lt;var&gt;body&lt;/var&gt; は正常に評価されます。</target>
        </trans-unit>
        <trans-unit id="5f5b9f825f6d02cc105c9167357458e31c828971" translate="yes" xml:space="preserve">
          <source>This form marks &lt;var&gt;body&lt;/var&gt; to be evaluated both when you compile the containing code and when you run it (whether compiled or not).</source>
          <target state="translated">このフォームは、含まれているコードをコンパイルするときと実行するとき（コンパイルされているかどうかに関係なく）の両方で評価される &lt;var&gt;body&lt;/var&gt; をマークします。</target>
        </trans-unit>
        <trans-unit id="4ef27658ff0fd12e7246ce32efccf1049fa02588" translate="yes" xml:space="preserve">
          <source>This frame parameter controls the way the cursor looks.</source>
          <target state="translated">このフレームパラメータは、カーソルの見え方を制御します。</target>
        </trans-unit>
        <trans-unit id="8a2c5f40810a1a8231285c1733ba11c594e6dc71" translate="yes" xml:space="preserve">
          <source>This function (un-)marks the height of window &lt;var&gt;window&lt;/var&gt; as preserved for future resize operations. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it (un-)marks the width of &lt;var&gt;window&lt;/var&gt; as preserved.</source>
          <target state="translated">この関数は、ウィンドウ &lt;var&gt;window&lt;/var&gt; の高さを、将来のサイズ変更操作のために保持されるように（非）マークします。 &lt;var&gt;window&lt;/var&gt; はライブウィンドウである必要があり、デフォルトでは選択したウィンドウになります。オプションの引数 &lt;var&gt;horizontal&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;var&gt;window&lt;/var&gt; の幅を保持済みとして（非）マークします。</target>
        </trans-unit>
        <trans-unit id="bcece730ecf0a8d569339f3baf4dfd3ec0f72dff" translate="yes" xml:space="preserve">
          <source>This function &lt;em&gt;warps the mouse&lt;/em&gt; to position &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; in frame &lt;var&gt;frame&lt;/var&gt;. The arguments &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are integers, giving the position in multiples of the default character size of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;) relative to the native position of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">この関数は、フレーム &lt;var&gt;frame&lt;/var&gt; 内の位置 &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; に&lt;em&gt;マウス&lt;/em&gt;を&lt;em&gt;ワープします&lt;/em&gt;。引数は &lt;var&gt;x&lt;/var&gt; はと &lt;var&gt;y&lt;/var&gt; は、デフォルトの文字サイズの倍数で位置を与え、整数であり、 &lt;var&gt;frame&lt;/var&gt; （参照&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;フレームのフォントを&lt;/a&gt;ネイティブ位置に対して） &lt;var&gt;frame&lt;/var&gt; （参照&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;フレームジオメトリを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="40f8f13963b860d49b39d37d44a140b524c4b400" translate="yes" xml:space="preserve">
          <source>This function aborts the command that requested the innermost recursive edit (including minibuffer input), by signaling &lt;code&gt;quit&lt;/code&gt; after exiting the recursive edit. Its definition is effectively &lt;code&gt;(throw 'exit t)&lt;/code&gt;. See &lt;a href=&quot;quitting#Quitting&quot;&gt;Quitting&lt;/a&gt;.</source>
          <target state="translated">この関数は、再帰編集を &lt;code&gt;quit&lt;/code&gt; 後に終了を通知することにより、最も内側の再帰編集（ミニバッファー入力を含む）を要求したコマンドを中止します。その定義は事実上 &lt;code&gt;(throw 'exit t)&lt;/code&gt; です。&lt;a href=&quot;quitting#Quitting&quot;&gt;終了を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c9ea6f9e8e69fd1bab46baef53c35082a8cfc602" translate="yes" xml:space="preserve">
          <source>This function accepts all the changes in the change group specified by &lt;var&gt;handle&lt;/var&gt;, making them final.</source>
          <target state="translated">この関数は、 &lt;var&gt;handle&lt;/var&gt; で指定された変更グループ内のすべての変更を受け入れ、それらを最終的なものにします。</target>
        </trans-unit>
        <trans-unit id="4bf8acf7f09114f2eeb6b01cc81a40eb393fbc16" translate="yes" xml:space="preserve">
          <source>This function accesses selections set up by Emacs or by other programs. It takes two optional arguments, &lt;var&gt;type&lt;/var&gt; and &lt;var&gt;data-type&lt;/var&gt;. The default for &lt;var&gt;type&lt;/var&gt;, the selection type, is &lt;code&gt;PRIMARY&lt;/code&gt;.</source>
          <target state="translated">この関数は、Emacsまたは他のプログラムによって設定された選択にアクセスします。 &lt;var&gt;type&lt;/var&gt; と &lt;var&gt;data-type&lt;/var&gt; の2つのオプションの引数を取ります。 &lt;var&gt;type&lt;/var&gt; のデフォルトである選択タイプは &lt;code&gt;PRIMARY&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1ed9d525857b861dc6984133623fd7ce8241ee1a" translate="yes" xml:space="preserve">
          <source>This function activates the change group that &lt;var&gt;handle&lt;/var&gt; designates.</source>
          <target state="translated">この機能は、 &lt;var&gt;handle&lt;/var&gt; 指定する変更グループをアクティブにします。</target>
        </trans-unit>
        <trans-unit id="07db88ac865436a1611a4b9e83f3964d1e4e650b" translate="yes" xml:space="preserve">
          <source>This function acts like &lt;code&gt;eq&lt;/code&gt; except when both arguments are numbers. It compares numbers by type and numeric value, so that &lt;code&gt;(eql 1.0 1)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, but &lt;code&gt;(eql 1.0 1.0)&lt;/code&gt; and &lt;code&gt;(eql 1 1)&lt;/code&gt; both return &lt;code&gt;t&lt;/code&gt;. This can be used to compare large integers as well as small ones.</source>
          <target state="translated">この関数は、両方の引数が数値である場合を除いて、 &lt;code&gt;eq&lt;/code&gt; のように機能します。タイプと数値で数値を比較するため、 &lt;code&gt;(eql 1.0 1)&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返しますが、 &lt;code&gt;(eql 1.0 1.0)&lt;/code&gt; と &lt;code&gt;(eql 1 1)&lt;/code&gt; は両方とも &lt;code&gt;t&lt;/code&gt; を返します。これは、大きい整数と小さい整数を比較するために使用できます。</target>
        </trans-unit>
        <trans-unit id="a9b2e93490bd346a5c929fa510651bda9b3be379" translate="yes" xml:space="preserve">
          <source>This function acts like &lt;code&gt;format&lt;/code&gt;, except it also converts any grave accents (</source>
          <target state="translated">この関数は、アクサングラーブも変換することを除いて、 &lt;code&gt;format&lt;/code&gt; ように機能します（</target>
        </trans-unit>
        <trans-unit id="46299dd4ffb3a1d1b9978c5603d1f8a982a7b271" translate="yes" xml:space="preserve">
          <source>This function acts on the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, adding the face &lt;var&gt;face&lt;/var&gt; to the &lt;code&gt;face&lt;/code&gt; text property. &lt;var&gt;face&lt;/var&gt; should be a valid value for the &lt;code&gt;face&lt;/code&gt; property (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;), such as a face name or an anonymous face (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;).</source>
          <target state="translated">この関数は、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間のテキストに作用し、 &lt;code&gt;face&lt;/code&gt; テキストプロパティに顔の &lt;var&gt;face&lt;/var&gt; を追加します。 &lt;var&gt;face&lt;/var&gt; は、facenameやanonymousface（&lt;a href=&quot;faces#Faces&quot;&gt;Facesを&lt;/a&gt;参照）など、 &lt;code&gt;face&lt;/code&gt; プロパティ（&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Propertiesを&lt;/a&gt;参照）の有効な値である必要があります。</target>
        </trans-unit>
        <trans-unit id="9add35bd8e77d7a770af37272de3cbd3c5d5a302" translate="yes" xml:space="preserve">
          <source>This function actually uses the minibuffer, but does not allow editing of the answer. The cursor moves to the minibuffer while the question is being asked.</source>
          <target state="translated">この関数は実際にミニバッファを使用しますが、回答の編集はできません。質問が行われている間、カーソルはミニバッファに移動します。</target>
        </trans-unit>
        <trans-unit id="3b7bb87451820fffacb0fab9bbfdf96cf4401834" translate="yes" xml:space="preserve">
          <source>This function adds &lt;var&gt;keymap&lt;/var&gt; as a &lt;em&gt;transient&lt;/em&gt; keymap, which takes precedence over other keymaps for one (or more) subsequent keys.</source>
          <target state="translated">この関数は、 &lt;var&gt;keymap&lt;/var&gt; を&lt;em&gt;一時的な&lt;/em&gt;キーマップとして追加します。これは、1つ（または複数）の後続のキーについて他のキーマップよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="4b526c5936ea25c138e70ca51a6efbc8affbb24b" translate="yes" xml:space="preserve">
          <source>This function adds &lt;var&gt;rules&lt;/var&gt; as indentation rules for the current buffer. These add to any mode-specific rules defined by the &lt;code&gt;smie-config&lt;/code&gt; option. To specify custom indentation rules for a specific file, add an entry to the file&amp;rsquo;s local variables of the form: &lt;code&gt;eval: (smie-config-local '(&lt;var&gt;rules&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">この関数は、現在のバッファーのインデント &lt;var&gt;rules&lt;/var&gt; としてルールを追加します。これらは、 &lt;code&gt;smie-config&lt;/code&gt; オプションで定義されたモード固有のルールに追加されます。特定のファイルのカスタムインデントルールを指定するには、次の形式のファイルのローカル変数にエントリを追加します &lt;code&gt;eval: (smie-config-local '(&lt;var&gt;rules&lt;/var&gt;))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97647ddbf1d6ec9209e109ed55b3f010c55f6dde" translate="yes" xml:space="preserve">
          <source>This function adds a new element &lt;var&gt;newelt&lt;/var&gt;, if it isn&amp;rsquo;t the empty string, to the history list stored in the variable &lt;var&gt;history-var&lt;/var&gt;, and returns the updated history list. It limits the list length to the value of &lt;var&gt;maxelt&lt;/var&gt; (if non-&lt;code&gt;nil&lt;/code&gt;) or &lt;code&gt;history-length&lt;/code&gt; (described below). The possible values of &lt;var&gt;maxelt&lt;/var&gt; have the same meaning as the values of &lt;code&gt;history-length&lt;/code&gt;. &lt;var&gt;history-var&lt;/var&gt; cannot refer to a lexical variable.</source>
          <target state="translated">この関数は、空の文字列でない場合は、変数 &lt;var&gt;history-var&lt;/var&gt; に格納されている履歴リストに新しい要素 &lt;var&gt;newelt&lt;/var&gt; を追加し、更新された履歴リストを返します。リストの長さを &lt;var&gt;maxelt&lt;/var&gt; （ &lt;code&gt;nil&lt;/code&gt; 以外の場合）または &lt;code&gt;history-length&lt;/code&gt; （以下で説明）の値に制限します。 &lt;var&gt;maxelt&lt;/var&gt; の可能な値は、 &lt;code&gt;history-length&lt;/code&gt; の値と同じ意味を持ちます。 &lt;var&gt;history-var&lt;/var&gt; は字句変数を参照できません。</target>
        </trans-unit>
        <trans-unit id="deb9f2a42b842ac50764e6f1bfd937d8064b5f72" translate="yes" xml:space="preserve">
          <source>This function adds an item to the tool bar by modifying &lt;code&gt;tool-bar-map&lt;/code&gt;. The image to use is defined by &lt;var&gt;icon&lt;/var&gt;, which is the base name of an XPM, XBM or PBM image file to be located by &lt;code&gt;find-image&lt;/code&gt;. Given a value &amp;lsquo;</source>
          <target state="translated">この関数は、 &lt;code&gt;tool-bar-map&lt;/code&gt; を変更することにより、ツールバーにアイテムを追加します。使用する画像は &lt;var&gt;icon&lt;/var&gt; で定義されます。アイコンは、 &lt;code&gt;find-image&lt;/code&gt; で検索するXPM、XBM、またはPBM画像ファイルのベース名です。与えられた値 '</target>
        </trans-unit>
        <trans-unit id="0ebca6721ed3fa98cfa9e5c46f15c3141bffd15b" translate="yes" xml:space="preserve">
          <source>This function adds highlighting &lt;var&gt;keywords&lt;/var&gt;, for the current buffer or for major mode &lt;var&gt;mode&lt;/var&gt;. The argument &lt;var&gt;keywords&lt;/var&gt; should be a list with the same format as the variable &lt;code&gt;font-lock-keywords&lt;/code&gt;.</source>
          <target state="translated">この関数は、現在のバッファまたはメジャーモード &lt;var&gt;mode&lt;/var&gt; 強調表示 &lt;var&gt;keywords&lt;/var&gt; 追加します。引数 &lt;var&gt;keywords&lt;/var&gt; は、変数 &lt;code&gt;font-lock-keywords&lt;/code&gt; と同じ形式のリストである必要があります。</target>
        </trans-unit>
        <trans-unit id="b70adf191cfc5d67153bf0fd00ff553ea1352179" translate="yes" xml:space="preserve">
          <source>This function adds its arguments together. When given no arguments, &lt;code&gt;+&lt;/code&gt; returns 0.</source>
          <target state="translated">この関数は、引数を一緒に追加します。引数が指定されていない場合、 &lt;code&gt;+&lt;/code&gt; は0を返します。</target>
        </trans-unit>
        <trans-unit id="803c0bc4e0ed515905b77def70944666207e64b0" translate="yes" xml:space="preserve">
          <source>This function adds or overrides text properties for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">この関数は、文字列またはバッファ &lt;var&gt;object&lt;/var&gt; &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間のテキストのテキストプロパティを追加またはオーバーライドします。 &lt;var&gt;object&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、デフォルトで現在のバッファになります。</target>
        </trans-unit>
        <trans-unit id="9989271b225e7f750e77b8c7c89508a4a1e0be74" translate="yes" xml:space="preserve">
          <source>This function adds the element &lt;var&gt;element&lt;/var&gt; to &lt;code&gt;buffer-invisibility-spec&lt;/code&gt;. If &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; was &lt;code&gt;t&lt;/code&gt;, it changes to a list, &lt;code&gt;(t)&lt;/code&gt;, so that text whose &lt;code&gt;invisible&lt;/code&gt; property is &lt;code&gt;t&lt;/code&gt; remains invisible.</source>
          <target state="translated">この関数は、要素 &lt;var&gt;element&lt;/var&gt; を &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; に追加します。場合は &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; した &lt;code&gt;t&lt;/code&gt; が、それは、リストに変更 &lt;code&gt;(t)&lt;/code&gt; を持つそのテキストので、 &lt;code&gt;invisible&lt;/code&gt; 財産である &lt;code&gt;t&lt;/code&gt; は目に見えないまま。</target>
        </trans-unit>
        <trans-unit id="c07b8ebb5627985d894e21ffca92d00b07480866" translate="yes" xml:space="preserve">
          <source>This function adds the face spec in &lt;var&gt;specs&lt;/var&gt; as relative remappings for face &lt;var&gt;face&lt;/var&gt; in the current buffer. The remaining arguments, &lt;var&gt;specs&lt;/var&gt;, should form either a list of face names, or a property list of attribute/value pairs.</source>
          <target state="translated">この機能は、顔仕様を追加 &lt;var&gt;specs&lt;/var&gt; 面に対する相対再マッピングとして &lt;var&gt;face&lt;/var&gt; 現在のバッファです。残りの引数 &lt;var&gt;specs&lt;/var&gt; は、面名のリスト、または属性と値のペアのプロパティリストのいずれかを形成する必要があります。</target>
        </trans-unit>
        <trans-unit id="d04052051735ae3e0e977a90a4d965a6d964ef68" translate="yes" xml:space="preserve">
          <source>This function adjusts the current buffer&amp;rsquo;s auto-save file name if the visited file name has changed. It also renames an existing auto-save file, if it was made in the current Emacs session. If the visited file name has not changed, this function does nothing.</source>
          <target state="translated">この関数は、アクセスしたファイル名が変更された場合に、現在のバッファの自動保存ファイル名を調整します。また、現在のEmacsセッションで作成された場合は、既存の自動保存ファイルの名前も変更します。訪問したファイル名が変更されていない場合、この関数は何もしません。</target>
        </trans-unit>
        <trans-unit id="5f57687a61ee8dd8b6bb5dd575ae468a268a7e81" translate="yes" xml:space="preserve">
          <source>This function adjusts the indentation at the beginning of the current line to the value specified by the variable &lt;code&gt;left-margin&lt;/code&gt;. (That may involve either inserting or deleting whitespace.) This function is value of &lt;code&gt;indent-line-function&lt;/code&gt; in Paragraph-Indent Text mode.</source>
          <target state="translated">この関数は、現在の行の先頭のインデントを変数 &lt;code&gt;left-margin&lt;/code&gt; で指定された値に調整します。（これには、空白の挿入または削除が含まれる場合があります。）この関数は、段落インデントテキストモードの &lt;code&gt;indent-line-function&lt;/code&gt; の値です。</target>
        </trans-unit>
        <trans-unit id="283b3120d2b1e5ecb8dfd7ac5ef6f6a005aee91f" translate="yes" xml:space="preserve">
          <source>This function allows Emacs to read pending output from processes. The output is given to their filter functions. If &lt;var&gt;process&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then this function does not return until some output has been received from &lt;var&gt;process&lt;/var&gt; or &lt;var&gt;process&lt;/var&gt; has closed the connection.</source>
          <target state="translated">この関数により、Emacsはプロセスからの保留中の出力を読み取ることができます。出力はそれらのフィルター関数に与えられます。場合は &lt;var&gt;process&lt;/var&gt; 非である &lt;code&gt;nil&lt;/code&gt; のいくつかの出力から受信されるまで、この関数は戻らない &lt;var&gt;process&lt;/var&gt; や &lt;var&gt;process&lt;/var&gt; 接続を閉じました。</target>
        </trans-unit>
        <trans-unit id="cf26ba184068b28fd0896ca94a81e5de77617765" translate="yes" xml:space="preserve">
          <source>This function allows you to arrange that Emacs will ask the user for confirmation before exiting or before killing a buffer that has &lt;var&gt;xwidget&lt;/var&gt; associated with it. If &lt;var&gt;flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, Emacs will query the user, otherwise it will not.</source>
          <target state="translated">この関数を使用すると、Emacsが終了する前、または &lt;var&gt;xwidget&lt;/var&gt; が関連付けられているバッファーを強制終了する前にユーザーに確認を求めるように調整できます。場合は &lt;var&gt;flag&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; に、Emacsはそれ以外の場合はしません、ユーザーを照会します。</target>
        </trans-unit>
        <trans-unit id="bf335bd121a8eca0c5f6759fc3858e78f1f657e4" translate="yes" xml:space="preserve">
          <source>This function also defines &lt;var&gt;face&lt;/var&gt; as a valid face name if it is not already one, and (re)calculates its attributes on existing frames.</source>
          <target state="translated">この関数は、 &lt;var&gt;face&lt;/var&gt; がまだ有効な顔名でない場合は、顔を有効な顔名として定義し、既存のフレームの属性を（再）計算します。</target>
        </trans-unit>
        <trans-unit id="37609ce54a5ff7f294bf84ea4de78cdf2ae18a2b" translate="yes" xml:space="preserve">
          <source>This function also forces an update of the menu bar and frame title.</source>
          <target state="translated">この機能は、メニューバーとフレームのタイトルも強制的に更新します。</target>
        </trans-unit>
        <trans-unit id="45bab2ec30f25c2982006b7a098ab0411cb5a640" translate="yes" xml:space="preserve">
          <source>This function also resets certain other information pertaining to the buffer: it sets the local keymap to &lt;code&gt;nil&lt;/code&gt;, the syntax table to the value of &lt;code&gt;(standard-syntax-table)&lt;/code&gt;, the case table to &lt;code&gt;(standard-case-table)&lt;/code&gt;, and the abbrev table to the value of &lt;code&gt;fundamental-mode-abbrev-table&lt;/code&gt;.</source>
          <target state="translated">この関数は、バッファーに関連する他の特定の情報もリセットします。ローカルキーマップを &lt;code&gt;nil&lt;/code&gt; に、構文テーブルを &lt;code&gt;(standard-syntax-table)&lt;/code&gt; の値に、caseテーブルを &lt;code&gt;(standard-case-table)&lt;/code&gt; に、そして略語を設定します。 tableを &lt;code&gt;fundamental-mode-abbrev-table&lt;/code&gt; の値に変換します。</target>
        </trans-unit>
        <trans-unit id="f470a37c4713be355f21bcf33f0e9306fad6c932" translate="yes" xml:space="preserve">
          <source>This function also sets &lt;var&gt;symbol&lt;/var&gt; as a variable, with the keymap as its value. But if &lt;var&gt;mapvar&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it sets &lt;var&gt;mapvar&lt;/var&gt; as a variable instead.</source>
          <target state="translated">この関数は、キーマップを値として、 &lt;var&gt;symbol&lt;/var&gt; を変数として設定します。ただし、 &lt;var&gt;mapvar&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、代わりに &lt;var&gt;mapvar&lt;/var&gt; を変数として設定します。</target>
        </trans-unit>
        <trans-unit id="2f67f09d25df27f6839ecb450a57eb93e2f6d8ae" translate="yes" xml:space="preserve">
          <source>This function also signals an error if the buffer is an indirect buffer. An indirect buffer always inherits the representation of its base buffer.</source>
          <target state="translated">この関数は、バッファが間接バッファである場合にもエラーを通知します。間接バッファは常にベースバッファの表現を継承します。</target>
        </trans-unit>
        <trans-unit id="bfa25a7a5563eb87e60e338899232ea47f96f2b2" translate="yes" xml:space="preserve">
          <source>This function alters part of the contents of the string &lt;var&gt;string&lt;/var&gt;, by storing &lt;var&gt;obj&lt;/var&gt; starting at index &lt;var&gt;idx&lt;/var&gt;. The argument &lt;var&gt;obj&lt;/var&gt; may be either a character or a (smaller) string.</source>
          <target state="translated">この関数は、インデックス &lt;var&gt;idx&lt;/var&gt; で始まる &lt;var&gt;obj&lt;/var&gt; を格納することにより、文字 &lt;var&gt;string&lt;/var&gt; 文字列の内容の一部を変更します。引数 &lt;var&gt;obj&lt;/var&gt; は、文字または（小さい）文字列のいずれかです。</target>
        </trans-unit>
        <trans-unit id="5f3b9f6d880286305d2f483406ba368f2e1181c2" translate="yes" xml:space="preserve">
          <source>This function alters the frame &lt;var&gt;frame&lt;/var&gt; based on the elements of &lt;var&gt;alist&lt;/var&gt;. Each element of &lt;var&gt;alist&lt;/var&gt; has the form &lt;code&gt;(&lt;var&gt;parm&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;parm&lt;/var&gt; is a symbol naming a parameter. If you don&amp;rsquo;t mention a parameter in &lt;var&gt;alist&lt;/var&gt;, its value doesn&amp;rsquo;t change. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">この関数は、 &lt;var&gt;alist&lt;/var&gt; の要素に基づいてフレーム &lt;var&gt;frame&lt;/var&gt; を変更します。各要素 &lt;var&gt;alist&lt;/var&gt; フォーム有する &lt;code&gt;(&lt;var&gt;parm&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;parm&lt;/var&gt; パラメータの命名シンボルです。 &lt;var&gt;alist&lt;/var&gt; でパラメータについて言及しない場合、その値は変更されません。 &lt;var&gt;frame&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、デフォルトで選択されたフレームになります。</target>
        </trans-unit>
        <trans-unit id="f1a3eb59953468bf3d67cbe0c4bab0730f9d16e5" translate="yes" xml:space="preserve">
          <source>This function alters the frame parameters of all existing frames according to &lt;var&gt;alist&lt;/var&gt;, then modifies &lt;code&gt;default-frame-alist&lt;/code&gt; (and, if necessary, &lt;code&gt;initial-frame-alist&lt;/code&gt;) to apply the same parameter values to frames that will be created henceforth.</source>
          <target state="translated">この関数は、既存のすべてのフレームのフレームパラメータを &lt;var&gt;alist&lt;/var&gt; に従って変更し、次に &lt;code&gt;default-frame-alist&lt;/code&gt; （および必要に応じて &lt;code&gt;initial-frame-alist&lt;/code&gt; ）を変更して、今後作成されるフレームに同じパラメータ値を適用します。</target>
        </trans-unit>
        <trans-unit id="55474dce8bede7fa41aaf8f090d61568d07cd19b" translate="yes" xml:space="preserve">
          <source>This function always returns &lt;code&gt;nil&lt;/code&gt;. The old syntax information in the table for this character is discarded.</source>
          <target state="translated">この関数は常に &lt;code&gt;nil&lt;/code&gt; を返します。この文字のテーブル内の古い構文情報は破棄されます。</target>
        </trans-unit>
        <trans-unit id="826a68e61e26d3dc2018817360ef52a0d95760b2" translate="yes" xml:space="preserve">
          <source>This function animates &lt;var&gt;image&lt;/var&gt;. The optional integer &lt;var&gt;index&lt;/var&gt; specifies the frame from which to start (default 0). The optional argument &lt;var&gt;limit&lt;/var&gt; controls the length of the animation. If omitted or &lt;code&gt;nil&lt;/code&gt;, the image animates once only; if &lt;code&gt;t&lt;/code&gt; it loops forever; if a number animation stops after that many seconds.</source>
          <target state="translated">この関数は &lt;var&gt;image&lt;/var&gt; アニメーション化します。オプションの整数 &lt;var&gt;index&lt;/var&gt; は、開始するフレームを指定します（デフォルトは0）。オプションの引数 &lt;var&gt;limit&lt;/var&gt; は、アニメーションの長さを制御します。省略または &lt;code&gt;nil&lt;/code&gt; の場合、画像は1回だけアニメーション化されます。もし &lt;code&gt;t&lt;/code&gt; はそれが永遠にループします。その数秒後に数字のアニメーションが停止した場合。</target>
        </trans-unit>
        <trans-unit id="0967994b7dbfe229674d04294e461f7c265e6b60" translate="yes" xml:space="preserve">
          <source>This function announces that &lt;var&gt;feature&lt;/var&gt; is now loaded, or being loaded, into the current Emacs session. This means that the facilities associated with &lt;var&gt;feature&lt;/var&gt; are or will be available for other Lisp programs.</source>
          <target state="translated">この関数は、 &lt;var&gt;feature&lt;/var&gt; が現在のEmacsセッションにロードされている、またはロードされていることを通知します。これは、機能に関連する &lt;var&gt;feature&lt;/var&gt; が他のLispプログラムで利用可能であるか利用可能になることを意味します。</target>
        </trans-unit>
        <trans-unit id="72f5b49aa6d8edb55e7989428323cef4e38a7981" translate="yes" xml:space="preserve">
          <source>This function appends the contents of the region delimited by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer to the end of file &lt;var&gt;filename&lt;/var&gt;. If that file does not exist, it is created. This function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、現在のバッファの &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; で区切られた領域の内容をファイルファイル &lt;var&gt;filename&lt;/var&gt; 終わりに追加します。そのファイルが存在しない場合は、作成されます。この関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7b4b6643bdc4c569692300a096eaa54226cc5318" translate="yes" xml:space="preserve">
          <source>This function appends the text &lt;var&gt;string&lt;/var&gt; to the first entry in the kill ring and makes the yanking pointer point to the combined entry. Normally &lt;var&gt;string&lt;/var&gt; goes at the end of the entry, but if &lt;var&gt;before-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it goes at the beginning. This function calls &lt;code&gt;kill-new&lt;/code&gt; as a subroutine, thus causing the values of &lt;code&gt;interprogram-cut-function&lt;/code&gt; and possibly &lt;code&gt;interprogram-paste-function&lt;/code&gt; (see below) to be invoked by extension.</source>
          <target state="translated">この関数は、キルリングの最初のエントリにテキスト &lt;var&gt;string&lt;/var&gt; を追加し、ヤンクポインタが結合されたエントリを指すようにします。通常、 &lt;var&gt;string&lt;/var&gt; はエントリの最後に配置されますが、 &lt;var&gt;before-p&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、最初に配置されます。この関数は、サブルーチンとして &lt;code&gt;kill-new&lt;/code&gt; を呼び出すため、 &lt;code&gt;interprogram-cut-function&lt;/code&gt; および場合によっては &lt;code&gt;interprogram-paste-function&lt;/code&gt; （以下を参照）の値が拡張機能によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4239bc8a7e12e62696801af1e048981138c6cec6" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; in turn (presumably for side effects), and returns &lt;var&gt;sequence&lt;/var&gt;.</source>
          <target state="translated">この関数は、適用される &lt;var&gt;function&lt;/var&gt; の各要素に &lt;var&gt;sequence&lt;/var&gt; （おそらく副作用のために）順に、及び返し &lt;var&gt;sequence&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d35ac6e9b6fd226737cb9705d3c9df454deb9e6" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt;, like &lt;code&gt;mapcar&lt;/code&gt;, but instead of collecting the results into a list, it returns a single list with all the elements of the results (which must be lists), by altering the results (using &lt;code&gt;nconc&lt;/code&gt;; see &lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;Rearrangement&lt;/a&gt;). Like with &lt;code&gt;mapcar&lt;/code&gt;, &lt;var&gt;sequence&lt;/var&gt; can be of any type except a char-table.</source>
          <target state="translated">この関数は、 &lt;code&gt;mapcar&lt;/code&gt; のように &lt;var&gt;sequence&lt;/var&gt; 各要素に &lt;var&gt;function&lt;/var&gt; を適用しますが、結果をリストに収集する代わりに、結果を変更することによって（ &lt;code&gt;nconc&lt;/code&gt; を使用して）、結果のすべての要素（リストである必要があります）を含む単一のリストを返します。&lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;再配置を&lt;/a&gt;参照してください）。 &lt;code&gt;mapcar&lt;/code&gt; と同様に、 &lt;var&gt;sequence&lt;/var&gt; はchar-table以外の任意のタイプにすることができます。</target>
        </trans-unit>
        <trans-unit id="b1c3772768e1cb0f5aa3ea648b08795849720d0c" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;spec&lt;/var&gt; as a face spec for &lt;code&gt;face&lt;/code&gt;. &lt;var&gt;spec&lt;/var&gt; should be a face spec, as described in the above documentation for &lt;code&gt;defface&lt;/code&gt;.</source>
          <target state="translated">この関数は、適用される &lt;var&gt;spec&lt;/var&gt; する顔スペックとして &lt;code&gt;face&lt;/code&gt; 。 &lt;var&gt;spec&lt;/var&gt; のための上記ドキュメントに記載されているように、顔の仕様であるべきである &lt;code&gt;defface&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1eb67707006b5a85fc68b00651580e8633b2915b" translate="yes" xml:space="preserve">
          <source>This function applies a translation table to the characters in the buffer between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;start&lt;/var&gt; 位置と &lt;var&gt;end&lt;/var&gt; 位置の間のバッファー内の文字に変換テーブルを適用します。</target>
        </trans-unit>
        <trans-unit id="de65326c220ae4ef4349c37201370510fd36aea5" translate="yes" xml:space="preserve">
          <source>This function arranges for &lt;var&gt;watch-function&lt;/var&gt; to be called whenever &lt;var&gt;symbol&lt;/var&gt; is modified. Modifications through aliases (see &lt;a href=&quot;variable-aliases#Variable-Aliases&quot;&gt;Variable Aliases&lt;/a&gt;) will have the same effect.</source>
          <target state="translated">この関数は、 &lt;var&gt;symbol&lt;/var&gt; が変更されるたびに &lt;var&gt;watch-function&lt;/var&gt; が呼び出されるように調整します。エイリアス（&lt;a href=&quot;variable-aliases#Variable-Aliases&quot;&gt;変数エイリアスを&lt;/a&gt;参照）による変更も同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="8e72ff71cadb59169a335198abe5d69882854f36" translate="yes" xml:space="preserve">
          <source>This function arranges for the debugger to be called whenever &lt;var&gt;variable&lt;/var&gt; is modified.</source>
          <target state="translated">この関数は、 &lt;var&gt;variable&lt;/var&gt; が変更されるたびにデバッガーが呼び出されるように調整します。</target>
        </trans-unit>
        <trans-unit id="acd470cf7d8172fe867cc56b5d3d629b62b83db0" translate="yes" xml:space="preserve">
          <source>This function asks the user a question, expecting input in the minibuffer. It returns &lt;code&gt;t&lt;/code&gt; if the user enters &amp;lsquo;</source>
          <target state="translated">この関数は、ミニバッファーへの入力を期待して、ユーザーに質問をします。ユーザーが 'を入力すると &lt;code&gt;t&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="c511618a8bcd18a156a4ebdec967bc65d5a89422" translate="yes" xml:space="preserve">
          <source>This function asks the user a question, expecting input in the minibuffer. It returns &lt;code&gt;t&lt;/code&gt; if the user types</source>
          <target state="translated">この関数は、ミニバッファーへの入力を期待して、ユーザーに質問をします。ユーザーが入力すると &lt;code&gt;t&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="a6a45e25fa7cc4f87747729f9c53ffa39831209f" translate="yes" xml:space="preserve">
          <source>This function asks the user a series of questions, reading a single-character answer in the echo area for each one.</source>
          <target state="translated">この関数は、ユーザに一連の質問を投げかけ、それぞれの質問に対してエコー領域で1文字の回答を読み上げます。</target>
        </trans-unit>
        <trans-unit id="1386738f8749573a53305a8dcc03715d2bc078f5" translate="yes" xml:space="preserve">
          <source>This function assigns &lt;var&gt;class&lt;/var&gt; to all the files in &lt;code&gt;directory&lt;/code&gt; and its subdirectories. Thereafter, all the variable settings specified for &lt;var&gt;class&lt;/var&gt; will be applied to any visited file in &lt;var&gt;directory&lt;/var&gt; and its children. &lt;var&gt;class&lt;/var&gt; must have been already defined by &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;directory&lt;/code&gt; とそのサブディレクトリ内のすべてのファイルに &lt;var&gt;class&lt;/var&gt; を割り当てます。その後、 &lt;var&gt;class&lt;/var&gt; 指定されたすべての変数設定が、 &lt;var&gt;directory&lt;/var&gt; 内のアクセスされたファイルとその子に適用されます。 &lt;var&gt;class&lt;/var&gt; は、 &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt; によってすでに定義されている必要があります。</target>
        </trans-unit>
        <trans-unit id="ded3336ee747552b9df4826ac4a5d24623ad4e04" translate="yes" xml:space="preserve">
          <source>This function assigns &lt;var&gt;profiles&lt;/var&gt;, which are symbols, to all remote connections identified by &lt;var&gt;criteria&lt;/var&gt;. &lt;var&gt;criteria&lt;/var&gt; is a plist identifying a connection and the application using this connection. Property names might be &lt;code&gt;:application&lt;/code&gt;, &lt;code&gt;:protocol&lt;/code&gt;, &lt;code&gt;:user&lt;/code&gt; and &lt;code&gt;:machine&lt;/code&gt;. The property value of &lt;code&gt;:application&lt;/code&gt; is a symbol, all other property values are strings. All properties are optional; if &lt;var&gt;criteria&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it always applies. Example:</source>
          <target state="translated">この関数は、シンボルである &lt;var&gt;profiles&lt;/var&gt; 、 &lt;var&gt;criteria&lt;/var&gt; によって識別されるすべてのリモート接続に割り当てます。 &lt;var&gt;criteria&lt;/var&gt; は、接続とこの接続を使用するアプリケーションを識別するplistです。プロパティ名は、 &lt;code&gt;:application&lt;/code&gt; 、 &lt;code&gt;:protocol&lt;/code&gt; 、 &lt;code&gt;:user&lt;/code&gt; 、および &lt;code&gt;:machine&lt;/code&gt; のようになります。 &lt;code&gt;:application&lt;/code&gt; のプロパティ値はシンボルであり、他のすべてのプロパティ値は文字列です。すべてのプロパティはオプションです。 &lt;var&gt;criteria&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、常に適用されます。例：</target>
        </trans-unit>
        <trans-unit id="439a567966bbada3620c5a871bbdbef0d06493b7" translate="yes" xml:space="preserve">
          <source>This function associates &lt;var&gt;sentinel&lt;/var&gt; with &lt;var&gt;process&lt;/var&gt;. If &lt;var&gt;sentinel&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the process will have the default sentinel, which inserts a message in the process&amp;rsquo;s buffer when the process status changes.</source>
          <target state="translated">この関数は、 &lt;var&gt;sentinel&lt;/var&gt; を &lt;var&gt;process&lt;/var&gt; 関連付けます。 &lt;var&gt;sentinel&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、プロセスにはデフォルトの番兵があり、プロセスのステータスが変更されると、プロセスのバッファにメッセージが挿入されます。</target>
        </trans-unit>
        <trans-unit id="1096a583f698faa4eb718e093160984efaf64843" translate="yes" xml:space="preserve">
          <source>This function associates the color name &lt;var&gt;name&lt;/var&gt; with color number &lt;var&gt;number&lt;/var&gt; on the terminal.</source>
          <target state="translated">この関数は、端末の色名 &lt;var&gt;name&lt;/var&gt; と色番号 &lt;var&gt;number&lt;/var&gt; を関連付けます。</target>
        </trans-unit>
        <trans-unit id="e3ae78a1f68bdfe0e4cbf3cc1cf7cc2b156acde5" translate="yes" xml:space="preserve">
          <source>This function attempts to give all windows on the selected frame approximately the same share of the screen area. Full-width or full-height windows are not given more space than other windows.</source>
          <target state="translated">この関数は、選択されたフレーム上のすべてのウィンドウに、画面領域のほぼ同じ割合を与えようとします。全幅または全高のウィンドウには、他のウィンドウよりも大きなスペースは与えられません。</target>
        </trans-unit>
        <trans-unit id="f3bcc3ee850866c0fffcaf099cde8903944e0c4c" translate="yes" xml:space="preserve">
          <source>This function attempts to keep point, markers, text properties, and overlays in the current buffer intact. One potential case where this behavior is useful is external code formatting programs: they typically write the reformatted text into a temporary buffer or file, and using &lt;code&gt;delete-region&lt;/code&gt; and &lt;code&gt;insert-buffer-substring&lt;/code&gt; would destroy these properties. However, the latter combination is typically faster (See &lt;a href=&quot;deletion#Deletion&quot;&gt;Deletion&lt;/a&gt;, and &lt;a href=&quot;insertion#Insertion&quot;&gt;Insertion&lt;/a&gt;).</source>
          <target state="translated">この関数は、現在のバッファ内のポイント、マーカー、テキストプロパティ、およびオーバーレイをそのまま維持しようとします。この動作が役立つ可能性のあるケースの1つは、外部コードフォーマットプログラムです。通常、再フォーマットされたテキストを一時バッファーまたはファイルに書き込み、 &lt;code&gt;delete-region&lt;/code&gt; および &lt;code&gt;insert-buffer-substring&lt;/code&gt; を使用するとこれらのプロパティが破棄されます。ただし、通常は後者の組み合わせの方が高速です（「&lt;a href=&quot;deletion#Deletion&quot;&gt;削除&lt;/a&gt;」および「&lt;a href=&quot;insertion#Insertion&quot;&gt;挿入&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="1911e07f9047017317f10d8f050384cab29aaa1f" translate="yes" xml:space="preserve">
          <source>This function attempts to make &lt;var&gt;window&lt;/var&gt; as large as possible, in both dimensions, without resizing its frame or deleting other windows. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">この関数は、フレームのサイズを変更したり、他のウィンドウを削除したりせずに、両方の次元で &lt;var&gt;window&lt;/var&gt; をできるだけ大きくしようとします。場合は &lt;var&gt;window&lt;/var&gt; 省略されるかされ &lt;code&gt;nil&lt;/code&gt; の選択ウィンドウには、デフォルト。</target>
        </trans-unit>
        <trans-unit id="35f2b233f1d585e694aa5dfcd78a197e11d4d89a" translate="yes" xml:space="preserve">
          <source>This function attempts to make &lt;var&gt;window&lt;/var&gt; as small as possible, in both dimensions, without deleting it or resizing its frame. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">この関数は、 &lt;var&gt;window&lt;/var&gt; を削除したりフレームのサイズを変更したりせずに、両方の次元でウィンドウをできるだけ小さくしようとします。場合は &lt;var&gt;window&lt;/var&gt; 省略されるかされ &lt;code&gt;nil&lt;/code&gt; の選択ウィンドウには、デフォルト。</target>
        </trans-unit>
        <trans-unit id="b23abdf7c6f489bc23826919a92070345aea0a72" translate="yes" xml:space="preserve">
          <source>This function auto-saves all buffers that need to be auto-saved. It saves all buffers for which auto-saving is enabled and that have been changed since the previous auto-save.</source>
          <target state="translated">自動保存が必要なすべてのバッファを自動保存します。自動保存が有効になっているバッファのうち、前回の自動保存以降に変更されたバッファをすべて保存します。</target>
        </trans-unit>
        <trans-unit id="fc85e4a1c9b182563a3f4a35ba0acde86dc4c46a" translate="yes" xml:space="preserve">
          <source>This function balances windows in a way that gives more space to full-width and/or full-height windows. If &lt;var&gt;window-or-frame&lt;/var&gt; specifies a frame, it balances all windows on that frame. If &lt;var&gt;window-or-frame&lt;/var&gt; specifies a window, it balances only that window and its siblings (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;).</source>
          <target state="translated">この関数は、全幅および/または全高のウィンドウにより多くのスペースを与える方法でウィンドウのバランスを取ります。 &lt;var&gt;window-or-frame&lt;/var&gt; がフレームを指定する場合、そのフレーム上のすべてのウィンドウのバランスを取ります。 &lt;var&gt;window-or-frame&lt;/var&gt; がウィンドウを指定する場合、そのウィンドウとその兄弟のみのバランスを取ります（「&lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;ウィンドウとフレーム&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="8d8d3ca16001bd519fbd308317ed1a8be178f437" translate="yes" xml:space="preserve">
          <source>This function beeps, or flashes the screen (see &lt;code&gt;visible-bell&lt;/code&gt; below). It also terminates any keyboard macro currently executing unless &lt;var&gt;do-not-terminate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、ビープ音を鳴らすか、画面を点滅させます（以下の &lt;code&gt;visible-bell&lt;/code&gt; 参照）。また、 &lt;var&gt;do-not-terminate&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外でない限り、現在実行中のキーボードマクロを終了します。</target>
        </trans-unit>
        <trans-unit id="3ff292221ef899ef612111410550ec5e84c130c7" translate="yes" xml:space="preserve">
          <source>This function behaves exactly like &lt;code&gt;error&lt;/code&gt;, except that it uses the error symbol &lt;code&gt;user-error&lt;/code&gt; rather than &lt;code&gt;error&lt;/code&gt;. As the name suggests, this is intended to report errors on the part of the user, rather than errors in the code itself. For example, if you try to use the command &lt;code&gt;Info-history-back&lt;/code&gt; (</source>
          <target state="translated">この関数は、 &lt;code&gt;user-error&lt;/code&gt; ではなくエラーシンボルuser-errorを使用することを除いて、 &lt;code&gt;error&lt;/code&gt; とまったく同じように動作し &lt;code&gt;error&lt;/code&gt; 。名前が示すように、これは、コード自体のエラーではなく、ユーザー側のエラーを報告することを目的としています。たとえば、コマンド &lt;code&gt;Info-history-back&lt;/code&gt; （</target>
        </trans-unit>
        <trans-unit id="0a3a5682f2af5897ff191aa1d0e3be9bede33499" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;custom-initialize-set&lt;/code&gt;, but it delays the actual initialization to the next Emacs start. This should be used in files that are preloaded (or for autoloaded variables), so that the initialization is done in the run-time context rather than the build-time context. This also has the side-effect that the (delayed) initialization is performed with the &lt;code&gt;:set&lt;/code&gt; function. See &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;.</source>
          <target state="translated">この関数は &lt;code&gt;custom-initialize-set&lt;/code&gt; のように動作しますが、実際の初期化を次のEmacsの開始まで遅らせます。これは、プリロードされたファイル（または自動ロードされた変数）で使用する必要があります。これにより、初期化はビルド時コンテキストではなくランタイムコンテキストで実行されます。これには、（遅延した）初期化が &lt;code&gt;:set&lt;/code&gt; 関数で実行されるという副作用もあります。&lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Emacsの構築を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="af96d322e164b004457b48bee402bcd096416332" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;equal&lt;/code&gt; in all cases but also requires that for two strings to be equal, they have the same text properties.</source>
          <target state="translated">この関数はすべての場合で &lt;code&gt;equal&lt;/code&gt; ように動作しますが、2つの文字列が等しいためには、それらが同じテキストプロパティを持っている必要もあります。</target>
        </trans-unit>
        <trans-unit id="ca3b72e7b43c7fc58841701418556d75f3cb6fc2" translate="yes" xml:space="preserve">
          <source>This function browses the specified &lt;var&gt;uri&lt;/var&gt; in the given &lt;var&gt;xwidget&lt;/var&gt;. The &lt;var&gt;uri&lt;/var&gt; is a string that specifies the name of a file or a URL.</source>
          <target state="translated">この関数は、指定された &lt;var&gt;xwidget&lt;/var&gt; で指定された &lt;var&gt;uri&lt;/var&gt; を参照します。 &lt;var&gt;uri&lt;/var&gt; 、ファイルやURLの名前を指定する文字列です。</target>
        </trans-unit>
        <trans-unit id="6565fe8d7642fc3de8b3c4b49600210dcbad04ac" translate="yes" xml:space="preserve">
          <source>This function builds a &lt;em&gt;prec2&lt;/em&gt; table from a table of precedences &lt;var&gt;precs&lt;/var&gt;. &lt;var&gt;precs&lt;/var&gt; should be a list, sorted by precedence (for example &lt;code&gt;&quot;+&quot;&lt;/code&gt; will come before &lt;code&gt;&quot;*&quot;&lt;/code&gt;), of elements of the form &lt;code&gt;(&lt;var&gt;assoc&lt;/var&gt; &lt;var&gt;op&lt;/var&gt; ...)&lt;/code&gt;, where each &lt;var&gt;op&lt;/var&gt; is a token that acts as an operator; &lt;var&gt;assoc&lt;/var&gt; is their associativity, which can be either &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;assoc&lt;/code&gt;, or &lt;code&gt;nonassoc&lt;/code&gt;. All operators in a given element share the same precedence level and associativity.</source>
          <target state="translated">この関数は、優先順位 &lt;var&gt;precs&lt;/var&gt; のテーブルから&lt;em&gt;prec2&lt;/em&gt;テーブルを作成します。 &lt;var&gt;precs&lt;/var&gt; は、形式 &lt;code&gt;(&lt;var&gt;assoc&lt;/var&gt; &lt;var&gt;op&lt;/var&gt; ...)&lt;/code&gt; &lt;var&gt;assoc&lt;/var&gt; &lt;var&gt;op&lt;/var&gt; ...）の要素の優先順位でソートされたリスト（たとえば、 &lt;code&gt;&quot;+&quot;&lt;/code&gt; は &lt;code&gt;&quot;*&quot;&lt;/code&gt; 前に来る）である必要があります。ここで、各 &lt;var&gt;op&lt;/var&gt; は演算子として機能するトークンです。 &lt;var&gt;assoc&lt;/var&gt; はそれらの結合性であり、 &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;assoc&lt;/code&gt; 、または &lt;code&gt;nonassoc&lt;/code&gt; のいずれかになります。特定の要素のすべての演算子は、同じ優先順位レベルと結合性を共有します。</target>
        </trans-unit>
        <trans-unit id="1b51bc6e106b8e23530ca082a5db223c3af4e0c4" translate="yes" xml:space="preserve">
          <source>This function byte-compiles the function definition of &lt;var&gt;symbol&lt;/var&gt;, replacing the previous definition with the compiled one. The function definition of &lt;var&gt;symbol&lt;/var&gt; must be the actual code for the function; &lt;code&gt;byte-compile&lt;/code&gt; does not handle function indirection. The return value is the byte-code function object which is the compiled definition of &lt;var&gt;symbol&lt;/var&gt; (see &lt;a href=&quot;byte_002dcode-objects#Byte_002dCode-Objects&quot;&gt;Byte-Code Objects&lt;/a&gt;).</source>
          <target state="translated">この関数は、 &lt;var&gt;symbol&lt;/var&gt; の関数定義をバイトコンパイルし、前の定義をコンパイルされたものに置き換えます。 &lt;var&gt;symbol&lt;/var&gt; の関数定義は、関数の実際のコードである必要があります。 &lt;code&gt;byte-compile&lt;/code&gt; は関数の間接参照を処理しません。戻り値は、 &lt;var&gt;symbol&lt;/var&gt; のコンパイル済み定義であるバイトコード関数オブジェクトです（&lt;a href=&quot;byte_002dcode-objects#Byte_002dCode-Objects&quot;&gt;バイトコードオブジェクトを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="58dbbedddc985589878e0d2af7300367367b6f41" translate="yes" xml:space="preserve">
          <source>This function calculates the dimensions of the largest empty rectangle that can be inscribed in the specified &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s text area. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">この関数は、指定された &lt;var&gt;window&lt;/var&gt; のテキスト領域に内接できる最大の空の長方形の寸法を計算します。 &lt;var&gt;window&lt;/var&gt; はライブウィンドウである必要があり、デフォルトでは選択したウィンドウになります。</target>
        </trans-unit>
        <trans-unit id="ba72cf6062793468aad230446fa4d17bf997509b" translate="yes" xml:space="preserve">
          <source>This function calculates the pixel dimensions of each line displayed in the specified &lt;var&gt;window&lt;/var&gt;. It does so by walking &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s current glyph matrix&amp;mdash;a matrix storing the glyph (see &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;) of each buffer character currently displayed in &lt;var&gt;window&lt;/var&gt;. If successful, it returns a list of cons pairs representing the x- and y-coordinates of the lower right corner of the last character of each line. Coordinates are measured in pixels from an origin (0, 0) at the top-left corner of &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">この関数は、指定された &lt;var&gt;window&lt;/var&gt; 表示される各線のピクセル寸法を計算します。これは、歩行によってそうする &lt;var&gt;window&lt;/var&gt; グリフを格納し、現在のグリフマトリックス・マトリックス（参照の&lt;a href=&quot;glyphs#Glyphs&quot;&gt;グリフを&lt;/a&gt;現在に表示される各バッファの文字の） &lt;var&gt;window&lt;/var&gt; 。成功すると、各行の最後の文字の右下隅のx座標とy座標を表すconsペアのリストが返されます。座標は、 &lt;var&gt;window&lt;/var&gt; 左上隅にある原点（0、0）からのピクセル単位で測定されます。 &lt;var&gt;window&lt;/var&gt; はライブウィンドウである必要があり、デフォルトでは選択したウィンドウになります。</target>
        </trans-unit>
        <trans-unit id="0e51c66274036d618c90f8effd48d6a002399b1b" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;describe-bindings&lt;/code&gt; to display a list of all the subcommands of the prefix key of the most recent key sequence. The prefix described consists of all but the last event of that key sequence. (The last event is, presumably, the help character.)</source>
          <target state="translated">この関数は &lt;code&gt;describe-bindings&lt;/code&gt; を呼び出して、最新のキーシーケンスのプレフィックスキーのすべてのサブコマンドのリストを表示します。説明されているプレフィックスは、そのキーシーケンスの最後のイベントを除くすべてで構成されます。（最後のイベントは、おそらくヘルプキャラクターです。）</target>
        </trans-unit>
        <trans-unit id="0c7434b528b427b395f4fd38e52b1e8a896cfd89" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;progress-reporter-update&lt;/code&gt;, so the first message is printed immediately.</source>
          <target state="translated">この関数は &lt;code&gt;progress-reporter-update&lt;/code&gt; を呼び出すため、最初のメッセージがすぐに出力されます。</target>
        </trans-unit>
        <trans-unit id="38848b0928341ad6ede5fe0568bd029f5b30515e" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; for cleaning up all windows currently displaying the buffer to be killed.</source>
          <target state="translated">この関数は、 &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; を呼び出して、強制終了するバッファーを現在表示しているすべてのウィンドウをクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="11724efe2ff0c491736a280c8b24b31aae6f66b1" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;function&lt;/var&gt; once for each of the associations in &lt;var&gt;table&lt;/var&gt;. The function &lt;var&gt;function&lt;/var&gt; should accept two arguments&amp;mdash;a &lt;var&gt;key&lt;/var&gt; listed in &lt;var&gt;table&lt;/var&gt;, and its associated &lt;var&gt;value&lt;/var&gt;. &lt;code&gt;maphash&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、呼び出す &lt;var&gt;function&lt;/var&gt; における団体ごとに一度 &lt;var&gt;table&lt;/var&gt; 。関数 &lt;var&gt;function&lt;/var&gt; は、 &lt;var&gt;table&lt;/var&gt; にリストされている &lt;var&gt;key&lt;/var&gt; とそれに関連する &lt;var&gt;value&lt;/var&gt; 2つの引数を受け入れる必要があります。 &lt;code&gt;maphash&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="333c365e2bcb3639c7a57e0c3d10f9d9eeb9ba2b" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;function&lt;/var&gt; once with each symbol in the obarray &lt;var&gt;obarray&lt;/var&gt;. Then it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;obarray&lt;/var&gt; is omitted, it defaults to the value of &lt;code&gt;obarray&lt;/code&gt;, the standard obarray for ordinary symbols.</source>
          <target state="translated">この関数は、呼び出す &lt;var&gt;function&lt;/var&gt; のobarrayの各シンボルで一度 &lt;var&gt;obarray&lt;/var&gt; 。次に、 &lt;code&gt;nil&lt;/code&gt; を返します。場合は &lt;var&gt;obarray&lt;/var&gt; の値に、そのデフォルトは省略されている &lt;code&gt;obarray&lt;/code&gt; 、通常のシンボルのための標準のオブジェクト配列。</target>
        </trans-unit>
        <trans-unit id="a9fa740195e686e04b2f695015c29cc303bed6f3" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;program&lt;/var&gt; and waits for it to finish.</source>
          <target state="translated">この関数は &lt;var&gt;program&lt;/var&gt; を呼び出し、プログラムが終了するのを待ちます。</target>
        </trans-unit>
        <trans-unit id="9f7663bce42615c5a1363320cf1b6553cdaa46f2" translate="yes" xml:space="preserve">
          <source>This function calls its argument &lt;var&gt;function&lt;/var&gt; for each element of &lt;var&gt;char-table&lt;/var&gt; that has a non-&lt;code&gt;nil&lt;/code&gt; value. The call to &lt;var&gt;function&lt;/var&gt; is with two arguments, a key and a value. The key is a possible &lt;var&gt;range&lt;/var&gt; argument for &lt;code&gt;char-table-range&lt;/code&gt;&amp;mdash;either a valid character or a cons cell &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt;, specifying a range of characters that share the same value. The value is what &lt;code&gt;(char-table-range &lt;var&gt;char-table&lt;/var&gt; &lt;var&gt;key&lt;/var&gt;)&lt;/code&gt; returns.</source>
          <target state="translated">この関数は、 &lt;code&gt;nil&lt;/code&gt; 以外の値を持つ &lt;var&gt;char-table&lt;/var&gt; の各要素に対して引数 &lt;var&gt;function&lt;/var&gt; を呼び出します。 &lt;var&gt;function&lt;/var&gt; の呼び出しには、キーと値の2つの引数があります。キーが可能である &lt;var&gt;range&lt;/var&gt; の引数 &lt;code&gt;char-table-range&lt;/code&gt; -either有効な文字またはコンス・セル &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;from&lt;/var&gt; 。 &lt;var&gt;to&lt;/var&gt; ）、同じ値を共有する文字の範囲を指定します。値は &lt;code&gt;(char-table-range &lt;var&gt;char-table&lt;/var&gt; &lt;var&gt;key&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;char-table&lt;/var&gt; &lt;var&gt;key&lt;/var&gt; ）が返すものです。</target>
        </trans-unit>
        <trans-unit id="e2d39d4245ea953b6c03bb7a74be65f2111faf98" translate="yes" xml:space="preserve">
          <source>This function calls the function &lt;var&gt;fun&lt;/var&gt; once for each live window, with the window as the argument.</source>
          <target state="translated">この関数は、ウィンドウを引数として、ライブウィンドウごとに関数 &lt;var&gt;fun&lt;/var&gt; を1回呼び出します。</target>
        </trans-unit>
        <trans-unit id="d9657b6203a8f764b5c56ebbfc825cb844478422" translate="yes" xml:space="preserve">
          <source>This function calls the function &lt;var&gt;predicate&lt;/var&gt; for each of the windows in the cyclic order of windows in turn, passing it the window as an argument. If the predicate returns non-&lt;code&gt;nil&lt;/code&gt; for any window, this function stops and returns that window. If no such window is found, the return value is &lt;var&gt;default&lt;/var&gt; (which defaults to &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">この関数は、ウィンドウの循環順序で各ウィンドウの関数 &lt;var&gt;predicate&lt;/var&gt; を順番に呼び出し、引数としてウィンドウを渡します。述語がいずれかのウィンドウに対して非 &lt;code&gt;nil&lt;/code&gt; を返す場合、この関数は停止してそのウィンドウを返します。そのようなウィンドウが見つからない場合、戻り値は &lt;var&gt;default&lt;/var&gt; （デフォルトは &lt;code&gt;nil&lt;/code&gt; です）。</target>
        </trans-unit>
        <trans-unit id="708c1309721b1c0f149f7d2312324af9348cb6d9" translate="yes" xml:space="preserve">
          <source>This function calls the interactively callable function &lt;var&gt;command&lt;/var&gt;, providing arguments according to its interactive calling specifications. It returns whatever &lt;var&gt;command&lt;/var&gt; returns.</source>
          <target state="translated">この関数は、インタラクティブに呼び出し可能な関数 &lt;var&gt;command&lt;/var&gt; 呼び出し、インタラクティブな呼び出し仕様に従って引数を提供します。 &lt;var&gt;command&lt;/var&gt; が返すものは何でも返します。</target>
        </trans-unit>
        <trans-unit id="6026201df119b1eaf16d1f1c6ef16e3d7bf43084" translate="yes" xml:space="preserve">
          <source>This function calls the specified &lt;var&gt;func&lt;/var&gt; passing it &lt;var&gt;nargs&lt;/var&gt; arguments from the array pointed to by &lt;var&gt;args&lt;/var&gt;. The argument &lt;var&gt;func&lt;/var&gt; can be a function symbol (e.g., returned by &lt;code&gt;intern&lt;/code&gt; described above), a module function returned by &lt;code&gt;make_function&lt;/code&gt; (see &lt;a href=&quot;module-functions#Module-Functions&quot;&gt;Module Functions&lt;/a&gt;), a subroutine written in C, etc. If &lt;var&gt;nargs&lt;/var&gt; is zero, &lt;var&gt;args&lt;/var&gt; can be a &lt;code&gt;NULL&lt;/code&gt; pointer.</source>
          <target state="translated">この関数は、指定された呼び出し、 &lt;var&gt;func&lt;/var&gt; 、それは渡す &lt;var&gt;nargs&lt;/var&gt; 配列から引数がで指される &lt;var&gt;args&lt;/var&gt; 。引数 &lt;var&gt;func&lt;/var&gt; は、関数シンボル（たとえば、上記の &lt;code&gt;intern&lt;/code&gt; によって返される）、 &lt;code&gt;make_function&lt;/code&gt; によって返されるモジュール関数（&lt;a href=&quot;module-functions#Module-Functions&quot;&gt;モジュール関数を&lt;/a&gt;参照）、Cで記述されたサブルーチンなどです &lt;var&gt;nargs&lt;/var&gt; がゼロの場合、 &lt;var&gt;args&lt;/var&gt; は &lt;code&gt;NULL&lt;/code&gt; ポインターにすることができます。</target>
        </trans-unit>
        <trans-unit id="c049f14e0b6666963e4ec8ce86792a24885b4cb6" translate="yes" xml:space="preserve">
          <source>This function can also be called interactively. In that case, it prints a message reporting the number of lines, words, and characters in the buffer, or in the region if the region is active.</source>
          <target state="translated">この関数は対話的に呼び出すこともできます。その場合、バッファ内の行数、単語数、文字数、あるいは領域がアクティブな場合は領域内の文字数を報告するメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="51c54bee55f87d0a2be16a8a5a2c9be8f612bfee" translate="yes" xml:space="preserve">
          <source>This function can be called before an amalgamating command. It removes the previous &lt;code&gt;undo-boundary&lt;/code&gt; if a series of such calls have been made.</source>
          <target state="translated">この関数は、マージコマンドの前に呼び出すことができます。このような一連の呼び出しが行われた場合、以前の &lt;code&gt;undo-boundary&lt;/code&gt; 削除されます。</target>
        </trans-unit>
        <trans-unit id="df4f49d21440d1153bf1036a702981a94f5196e8" translate="yes" xml:space="preserve">
          <source>This function can be used to initialize the local keymap of a major mode for which insertion of text is not desirable. But usually such a mode should be derived from &lt;code&gt;special-mode&lt;/code&gt; (see &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;Basic Major Modes&lt;/a&gt;); then its keymap will automatically inherit from &lt;code&gt;special-mode-map&lt;/code&gt;, which is already suppressed. Here is how &lt;code&gt;special-mode-map&lt;/code&gt; is defined:</source>
          <target state="translated">この関数は、テキストの挿入が望ましくないメジャーモードのローカルキーマップを初期化するために使用できます。ただし、通常、このようなモードは &lt;code&gt;special-mode&lt;/code&gt; から派生する必要があります（&lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;基本メジャーモードを&lt;/a&gt;参照）。その場合、そのキーマップは、すでに抑制されている &lt;code&gt;special-mode-map&lt;/code&gt; から自動的に継承されます。 &lt;code&gt;special-mode-map&lt;/code&gt; の定義方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="be74eec3452d11d0176e37ed21b512bdf1eb22c2" translate="yes" xml:space="preserve">
          <source>This function can be used to transpose stretches of text:</source>
          <target state="translated">この関数を使用して、テキストの伸張を転置することができます。</target>
        </trans-unit>
        <trans-unit id="197f6679cb3ca88b1a4655c88c49b28d088d5627" translate="yes" xml:space="preserve">
          <source>This function can be useful as an output stream when debugging. It writes &lt;var&gt;character&lt;/var&gt; to the standard error stream.</source>
          <target state="translated">この関数は、デバッグ時の出力ストリームとして役立ちます。標準エラーストリームに &lt;var&gt;character&lt;/var&gt; を書き込みます。</target>
        </trans-unit>
        <trans-unit id="c86ffcbcc5f0b36e1cefc4186607fc1c394c0fe9" translate="yes" xml:space="preserve">
          <source>This function can indicate there are no more sort records by leaving point at the end of the buffer.</source>
          <target state="translated">この関数は、バッファの末尾にポイントを残すことで、ソートレコードがなくなったことを示すことができます。</target>
        </trans-unit>
        <trans-unit id="d16e2d06844ba5f689f62688e4c3ba9cf1b79431" translate="yes" xml:space="preserve">
          <source>This function cancels and undoes all the changes in the change group specified by &lt;var&gt;handle&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;handle&lt;/var&gt; で指定された変更グループ内のすべての変更をキャンセルして元に戻します。</target>
        </trans-unit>
        <trans-unit id="85e6d5637ca515e9970407cc96b9ed5acbc70b91" translate="yes" xml:space="preserve">
          <source>This function cancels any narrowing in the current buffer, so that the entire contents are accessible. This is called &lt;em&gt;widening&lt;/em&gt;. It is equivalent to the following expression:</source>
          <target state="translated">この関数は、現在のバッファの絞り込みをキャンセルして、コンテンツ全体にアクセスできるようにします。これは&lt;em&gt;拡大&lt;/em&gt;と呼ばれます。これは、次の式と同等です。</target>
        </trans-unit>
        <trans-unit id="aca02809e6ca5d0f5704c010f281a569f37b9d26" translate="yes" xml:space="preserve">
          <source>This function cannot be used in an Emacs that was already dumped. This function is deprecated, and by default Emacs is built without &lt;code&gt;unexec&lt;/code&gt; support so this function is not available.</source>
          <target state="translated">この関数は、すでにダンプされているEmacsでは使用できません。この関数は非推奨であり、デフォルトではEmacsは &lt;code&gt;unexec&lt;/code&gt; サポートなしでビルドされているため、この関数は使用できません。</target>
        </trans-unit>
        <trans-unit id="d6862d9f011c28238585e423fb0003d9a3c85d4a" translate="yes" xml:space="preserve">
          <source>This function cannot tell whether the comments it traverses are embedded within a string. If they look like comments, it treats them as comments.</source>
          <target state="translated">この関数は、巡回するコメントが文字列の中に埋め込まれているかどうかを知ることはできません。コメントのように見える場合は、コメントとして扱います。</target>
        </trans-unit>
        <trans-unit id="bc06d29126920d369fe3dd2dbf2dd7f17e1b48fe" translate="yes" xml:space="preserve">
          <source>This function capitalizes &lt;var&gt;count&lt;/var&gt; words after point, moving point over as it does. To capitalize means to convert each word&amp;rsquo;s first character to upper case and convert the rest of each word to lower case. If &lt;var&gt;count&lt;/var&gt; is negative, the function capitalizes the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、ポイントごとに &lt;var&gt;count&lt;/var&gt; ワードを大文字にし、ポイントを移動します。大文字にするということは、各単語の最初の文字を大文字に変換し、各単語の残りの部分を小文字に変換することを意味します。場合は &lt;var&gt;count&lt;/var&gt; -マイナスで、この関数は大文字 &lt;var&gt;count&lt;/var&gt; 前の単語をが、ポイントは移動しません。値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9d4a014eb3c50b3c0c03861600f49c23114f2af5" translate="yes" xml:space="preserve">
          <source>This function capitalizes all words in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. To capitalize means to convert each word&amp;rsquo;s first character to upper case and convert the rest of each word to lower case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; で定義された領域内のすべての単語を大文字にします。大文字にするということは、各単語の最初の文字を大文字に変換し、各単語の残りの部分を小文字に変換することを意味します。関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1c0ebaf53d2d45563bdffeb5dd181592b579c85a" translate="yes" xml:space="preserve">
          <source>This function capitalizes strings or characters. If &lt;var&gt;string-or-char&lt;/var&gt; is a string, the function returns a new string whose contents are a copy of &lt;var&gt;string-or-char&lt;/var&gt; in which each word has been capitalized. This means that the first character of each word is converted to upper case, and the rest are converted to lower case.</source>
          <target state="translated">この関数は、文字列または文字を大文字にします。場合は &lt;var&gt;string-or-char&lt;/var&gt; 文字列で、この関数はその内容のコピーです新たな文字列を返す &lt;var&gt;string-or-char&lt;/var&gt; の各単語が大文字にされたし。これは、各単語の最初の文字が大文字に変換され、残りが小文字に変換されることを意味します。</target>
        </trans-unit>
        <trans-unit id="f44d2a9276aece55b507fe01ce5beb8c630be2ed" translate="yes" xml:space="preserve">
          <source>This function causes the browser widget specified by &lt;var&gt;xwidget&lt;/var&gt; to execute the specified JavaScript &lt;code&gt;script&lt;/code&gt;.</source>
          <target state="translated">この関数により、 &lt;var&gt;xwidget&lt;/var&gt; で指定されたブラウザウィジェットが指定されたJavaScript &lt;code&gt;script&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="8bad284717417a9939835167bd83a93fb9ec2309" translate="yes" xml:space="preserve">
          <source>This function changes the contents of the full keymap &lt;var&gt;keymap&lt;/var&gt; by remapping &lt;code&gt;self-insert-command&lt;/code&gt; to the command &lt;code&gt;undefined&lt;/code&gt; (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;). This has the effect of undefining all printing characters, thus making ordinary insertion of text impossible. &lt;code&gt;suppress-keymap&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この機能は、完全なキーマップの内容変更 &lt;var&gt;keymap&lt;/var&gt; 再マッピングすることにより &lt;code&gt;self-insert-command&lt;/code&gt; コマンドに &lt;code&gt;undefined&lt;/code&gt; （参照&lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;再マップコマンド&lt;/a&gt;）。これには、すべての印刷文字の定義を解除する効果があり、通常のテキストの挿入が不可能になります。 &lt;code&gt;suppress-keymap&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="36f2fbb5685a5ae009ff2b89267c15f544b6a5af" translate="yes" xml:space="preserve">
          <source>This function changes the finalizer of the &lt;code&gt;user-ptr&lt;/code&gt; object represented by &lt;var&gt;val&lt;/var&gt; to be &lt;var&gt;fin&lt;/var&gt;. If &lt;var&gt;fin&lt;/var&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, the &lt;code&gt;user-ptr&lt;/code&gt; object will have no finalizer.</source>
          <target state="translated">この関数は、ファイナライザの変化 &lt;code&gt;user-ptr&lt;/code&gt; オブジェクトにより表される &lt;var&gt;val&lt;/var&gt; ことが &lt;var&gt;fin&lt;/var&gt; 。場合は &lt;var&gt;fin&lt;/var&gt; ある &lt;code&gt;NULL&lt;/code&gt; のポインタ、 &lt;code&gt;user-ptr&lt;/code&gt; オブジェクトは、ファイナライザを持っていません。</target>
        </trans-unit>
        <trans-unit id="3823849d7c5498e0245942dc16f153ec79790970" translate="yes" xml:space="preserve">
          <source>This function changes the tabulated list entry at point, setting &lt;var&gt;col&lt;/var&gt; to &lt;var&gt;desc&lt;/var&gt;. &lt;var&gt;col&lt;/var&gt; is the column number to change, or the name of the column to change. &lt;var&gt;desc&lt;/var&gt; is the new column descriptor, which is inserted via &lt;code&gt;tabulated-list-print-col&lt;/code&gt;.</source>
          <target state="translated">この関数は、ある時点で表形式のリストエントリを変更し、 &lt;var&gt;col&lt;/var&gt; を &lt;var&gt;desc&lt;/var&gt; に設定します。 &lt;var&gt;col&lt;/var&gt; は、変更する列番号、または変更する列の名前です。 &lt;var&gt;desc&lt;/var&gt; は新しい列記述子であり、 &lt;code&gt;tabulated-list-print-col&lt;/code&gt; を介して挿入されます。</target>
        </trans-unit>
        <trans-unit id="e3d0a9295df703f0dbef307fa6311054894421f6" translate="yes" xml:space="preserve">
          <source>This function checks the file contents against the defined file formats, and converts the file contents if appropriate and also calls the functions in the list &lt;code&gt;after-insert-file-functions&lt;/code&gt;. See &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;. Normally, one of the functions in the &lt;code&gt;after-insert-file-functions&lt;/code&gt; list determines the coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;) used for decoding the file&amp;rsquo;s contents, including end-of-line conversion. However, if the file contains null bytes, it is by default visited without any code conversions. See &lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;inhibit-nul-byte-detection&lt;/a&gt;.</source>
          <target state="translated">この関数は、定義されたファイル形式に対してファイルの内容をチェックし、必要に応じてファイルの内容を変換し、リストの関数 &lt;code&gt;after-insert-file-functions&lt;/code&gt; も呼び出します。&lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;フォーマット変換を&lt;/a&gt;参照してください。通常、 &lt;code&gt;after-insert-file-functions&lt;/code&gt; リストの関数の1つが、行末変換を含むファイルの内容のデコードに使用されるコーディングシステム（&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;コーディングシステムを&lt;/a&gt;参照）を決定します。ただし、ファイルにnullバイトが含まれている場合、デフォルトではコード変換なしでアクセスされます。&lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;禁止-ヌルバイト-検出を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="88a96aa2697363d8add3552b2953ddbfffec23cb" translate="yes" xml:space="preserve">
          <source>This function checks the validity of &lt;var&gt;coding-system&lt;/var&gt;. If that is valid, it returns &lt;var&gt;coding-system&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the function return &lt;code&gt;nil&lt;/code&gt;. For any other values, it signals an error whose &lt;code&gt;error-symbol&lt;/code&gt; is &lt;code&gt;coding-system-error&lt;/code&gt; (see &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;signal&lt;/a&gt;).</source>
          <target state="translated">この関数は、 &lt;var&gt;coding-system&lt;/var&gt; 有効性をチェックします。それが有効な場合は、 &lt;var&gt;coding-system&lt;/var&gt; 返します。場合は &lt;var&gt;coding-system&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 、関数の戻り &lt;code&gt;nil&lt;/code&gt; 。その他の値の場合、 &lt;code&gt;error-symbol&lt;/code&gt; が &lt;code&gt;coding-system-error&lt;/code&gt; であるエラーを通知します（&lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;signalを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="ff9f73184b14d3789b4d1e6f4b8bbd07f7c61143" translate="yes" xml:space="preserve">
          <source>This function checks whether &lt;var&gt;feature&lt;/var&gt; is present in the current Emacs session (using &lt;code&gt;(featurep &lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt;; see below). The argument &lt;var&gt;feature&lt;/var&gt; must be a symbol.</source>
          <target state="translated">この関数は、 &lt;var&gt;feature&lt;/var&gt; が現在のEmacsセッションに存在するかどうかをチェックします &lt;code&gt;(featurep &lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt; を使用します。以下を参照してください）。引数 &lt;var&gt;feature&lt;/var&gt; はシンボルである必要があります。</target>
        </trans-unit>
        <trans-unit id="4be69b13bdf8b6481ccb7195ec5a30f577c71667" translate="yes" xml:space="preserve">
          <source>This function checks whether &lt;var&gt;sequence1&lt;/var&gt; and &lt;var&gt;sequence2&lt;/var&gt; contain the same elements, regardless of the order. If the optional argument &lt;var&gt;testfn&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">この関数は、順序に関係なく、 &lt;var&gt;sequence1&lt;/var&gt; と &lt;var&gt;sequence2&lt;/var&gt; に同じ要素が含まれているかどうかを確認します。オプションの引数 &lt;var&gt;testfn&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、デフォルトの &lt;code&gt;equal&lt;/code&gt; 代わりに使用する2つの引数の関数です。</target>
        </trans-unit>
        <trans-unit id="4b5e3ee47fca60568dceedb79a0f4165f46dfa07" translate="yes" xml:space="preserve">
          <source>This function checks whether a window &lt;var&gt;window&lt;/var&gt; occupies the frame relative coordinates &lt;var&gt;coordinates&lt;/var&gt;, and if so, which part of the window that is. &lt;var&gt;window&lt;/var&gt; should be a live window.</source>
          <target state="translated">この関数は、ウィンドウ &lt;var&gt;window&lt;/var&gt; がフレームの相対座標 &lt;var&gt;coordinates&lt;/var&gt; を占めているかどうかを確認し、占有している場合は、ウィンドウのどの部分を占めているかを確認します。 &lt;var&gt;window&lt;/var&gt; はライブウィンドウである必要があります。</target>
        </trans-unit>
        <trans-unit id="0093114ce08d1c87de3c8bea211bd8e8e8bafd88" translate="yes" xml:space="preserve">
          <source>This function checks whether coding systems in the list &lt;code&gt;coding-system-list&lt;/code&gt; can encode all the characters in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If all of the coding systems in the list can encode the specified text, the function returns &lt;code&gt;nil&lt;/code&gt;. If some coding systems cannot encode some of the characters, the value is an alist, each element of which has the form &lt;code&gt;(&lt;var&gt;coding-system1&lt;/var&gt; &lt;var&gt;pos1&lt;/var&gt; &lt;var&gt;pos2&lt;/var&gt; &amp;hellip;)&lt;/code&gt;, meaning that &lt;var&gt;coding-system1&lt;/var&gt; cannot encode characters at buffer positions &lt;var&gt;pos1&lt;/var&gt;, &lt;var&gt;pos2&lt;/var&gt;, &lt;small&gt;...&lt;/small&gt;.</source>
          <target state="translated">この関数は、リスト &lt;code&gt;coding-system-list&lt;/code&gt; のコーディングシステムが &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間の領域のすべての文字をエンコードできるかどうかをチェックします。リスト内のすべてのコーディングシステムが指定されたテキストをエンコードできる場合、関数は &lt;code&gt;nil&lt;/code&gt; を返します。一部のコーディングシステムが一部の文字をエンコードできない場合、値は &lt;code&gt;(&lt;var&gt;coding-system1&lt;/var&gt; &lt;var&gt;pos1&lt;/var&gt; &lt;var&gt;pos2&lt;/var&gt; &amp;hellip;)&lt;/code&gt; であり、その各要素の形式は（ &lt;var&gt;coding-system1&lt;/var&gt; pos1 &lt;var&gt;pos2&lt;/var&gt; &amp;hellip;）です。つまり、 &lt;var&gt;coding-system1&lt;/var&gt; はバッファ位置 &lt;var&gt;pos1&lt;/var&gt; 、 &lt;var&gt;pos2&lt;/var&gt; 、&lt;small&gt;..の&lt;/small&gt;文字をエンコードできません&lt;small&gt;。 。&lt;/small&gt;。</target>
        </trans-unit>
        <trans-unit id="48bbd385883b860f0fe733726275084cca5e4045" translate="yes" xml:space="preserve">
          <source>This function chooses a plausible coding system for decoding the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. This text should be a byte sequence, i.e., unibyte text or multibyte text with only</source>
          <target state="translated">この関数は、テキストを &lt;var&gt;start&lt;/var&gt; から &lt;var&gt;end&lt;/var&gt; までデコードするためのもっともらしいコーディングシステムを選択します。このテキストはバイトシーケンスである必要があります。つまり、ユニバイトテキストまたはマルチバイトテキストのみです。</target>
        </trans-unit>
        <trans-unit id="e92dd05af078b7c6619479f99c6915105c13d04f" translate="yes" xml:space="preserve">
          <source>This function clears all tags from the padding area in the current buffer.</source>
          <target state="translated">この関数は、現在のバッファ内のパディング領域からすべてのタグをクリアします。</target>
        </trans-unit>
        <trans-unit id="e08d77ace26a1da1b72f8e270ea9c88fc75a7c86" translate="yes" xml:space="preserve">
          <source>This function clears an image cache, removing all the images stored in it. If &lt;var&gt;filter&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it clears the cache for the selected frame. If &lt;var&gt;filter&lt;/var&gt; is a frame, it clears the cache for that frame. If &lt;var&gt;filter&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, all image caches are cleared. Otherwise, &lt;var&gt;filter&lt;/var&gt; is taken to be a file name, and all images associated with that file name are removed from all image caches.</source>
          <target state="translated">この関数は、画像キャッシュをクリアし、そこに保存されているすべての画像を削除します。 &lt;var&gt;filter&lt;/var&gt; が省略されているか、 &lt;code&gt;nil&lt;/code&gt; の場合、選択されたフレームのキャッシュがクリアされます。場合は &lt;var&gt;filter&lt;/var&gt; フレームであり、それはそのフレームのキャッシュをクリアします。 &lt;var&gt;filter&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合、すべての画像キャッシュがクリアされます。それ以外の場合、 &lt;var&gt;filter&lt;/var&gt; はファイル名と見なされ、そのファイル名に関連付けられているすべての画像がすべての画像キャッシュから削除されます。</target>
        </trans-unit>
        <trans-unit id="0bb1988a1dba8506377b988fafd01a77998e3685" translate="yes" xml:space="preserve">
          <source>This function clears and redisplays all visible frames.</source>
          <target state="translated">この関数は、表示されているすべてのフレームをクリアして再表示します。</target>
        </trans-unit>
        <trans-unit id="00c956077128ca0993717eb23d4d9f5416719f6b" translate="yes" xml:space="preserve">
          <source>This function clears and redisplays frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it redraws the selected frame.</source>
          <target state="translated">この関数は、フレーム &lt;var&gt;frame&lt;/var&gt; クリアして再表示します。 &lt;var&gt;frame&lt;/var&gt; が省略または &lt;code&gt;nil&lt;/code&gt; の場合、選択したフレームが再描画されます。</target>
        </trans-unit>
        <trans-unit id="bee3cb583a7c59bb273547bda2f8cbc5a79c8229" translate="yes" xml:space="preserve">
          <source>This function clears out the record of the last modification time of the file being visited by the current buffer. As a result, the next attempt to save this buffer will not complain of a discrepancy in file modification times.</source>
          <target state="translated">この関数は、現在のバッファが訪問しているファイルの最終更新時刻の記録をクリアします。その結果、次にこのバッファを保存しようとしたときに、ファイルの修正時刻の不一致が発生しても文句を言わないようになります。</target>
        </trans-unit>
        <trans-unit id="3060a69479b02be0e975b9582949ab1ac97d85c1" translate="yes" xml:space="preserve">
          <source>This function clears the pending nonlocal exit conditions and data from &lt;var&gt;env&lt;/var&gt;. After calling it, the module</source>
          <target state="translated">この関数は、保留中の非ローカル終了条件とデータを &lt;var&gt;env&lt;/var&gt; からクリアします。それを呼び出した後、モジュール</target>
        </trans-unit>
        <trans-unit id="8f7e5427bf38884b44e2e51ab2819c587f2b4009" translate="yes" xml:space="preserve">
          <source>This function clears the table of defined colors for a text terminal.</source>
          <target state="translated">この関数は、テキスト端末の定義された色のテーブルをクリアします。</target>
        </trans-unit>
        <trans-unit id="5c32281f9d21be19333ed3ff71d217ace70d4a19" translate="yes" xml:space="preserve">
          <source>This function closes a notification with identifier &lt;var&gt;id&lt;/var&gt;. &lt;var&gt;bus&lt;/var&gt; can be a string denoting a D-Bus connection, the default is &lt;code&gt;:session&lt;/code&gt;.</source>
          <target state="translated">この関数は、識別子 &lt;var&gt;id&lt;/var&gt; の通知を閉じます。 &lt;var&gt;bus&lt;/var&gt; は、D-Bus接続を示す文字列にすることができます。デフォルトは &lt;code&gt;:session&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9a745e063d28aa86713ef30ab5d0016b27d3e4da" translate="yes" xml:space="preserve">
          <source>This function closes the connection to display &lt;var&gt;display&lt;/var&gt;. Before you can do this, you must first delete all the frames that were open on that display (see &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;).</source>
          <target state="translated">この機能は、ディスプレイへの接続を閉じ &lt;var&gt;display&lt;/var&gt; 。これを行う前に、まずそのディスプレイで開いていたすべてのフレームを削除する必要があります（&lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;フレームの削除を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="3e0b6d0d98bf0d18b76cb8c96931febc86eb0283" translate="yes" xml:space="preserve">
          <source>This function collects applicable connection-local variables associated with &lt;var&gt;criteria&lt;/var&gt; in &lt;code&gt;connection-local-variables-alist&lt;/code&gt;, without applying them. Example:</source>
          <target state="translated">この関数は、 &lt;code&gt;connection-local-variables-alist&lt;/code&gt; の &lt;var&gt;criteria&lt;/var&gt; に関連付けられている、該当するconnection-local変数を、適用せずに収集します。例：</target>
        </trans-unit>
        <trans-unit id="a5f2cbb8b2da3d3c58cb447a71d60b0917ba7a4b" translate="yes" xml:space="preserve">
          <source>This function compares a specified part of &lt;var&gt;string1&lt;/var&gt; with a specified part of &lt;var&gt;string2&lt;/var&gt;. The specified part of &lt;var&gt;string1&lt;/var&gt; runs from index &lt;var&gt;start1&lt;/var&gt; (inclusive) up to index &lt;var&gt;end1&lt;/var&gt; (exclusive); &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;start1&lt;/var&gt; means the start of the string, while &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;end1&lt;/var&gt; means the length of the string. Likewise, the specified part of &lt;var&gt;string2&lt;/var&gt; runs from index &lt;var&gt;start2&lt;/var&gt; up to index &lt;var&gt;end2&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;string1&lt;/var&gt; の指定された部分を &lt;var&gt;string2&lt;/var&gt; の指定された部分と比較します。 &lt;var&gt;string1&lt;/var&gt; の指定された部分は、インデックス &lt;var&gt;start1&lt;/var&gt; （包括的）からインデックス &lt;var&gt;end1&lt;/var&gt; （排他的）まで実行されます。 &lt;code&gt;nil&lt;/code&gt; のための &lt;var&gt;start1&lt;/var&gt; 手段文字列の先頭、一方で &lt;code&gt;nil&lt;/code&gt; のため &lt;var&gt;end1&lt;/var&gt; 文字列の長さを意味します。同様に、指定した部分 &lt;var&gt;string2&lt;/var&gt; インデックスから実行が &lt;var&gt;start2&lt;/var&gt; インデックスまで &lt;var&gt;end2&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9aef49fc24cfd15fd641dc26e422b78872aaf3e" translate="yes" xml:space="preserve">
          <source>This function compares strings lexicographically, except it treats sequences of numerical characters as if they comprised a base-ten number, and then compares the numbers. So &amp;lsquo;</source>
          <target state="translated">この関数は、文字列を辞書式に比較します。ただし、数字のシーケンスを10進数で構成されているかのように扱い、数値を比較します。そう '</target>
        </trans-unit>
        <trans-unit id="9034e147ae2fe7be500b89dffbb10f53c4559803" translate="yes" xml:space="preserve">
          <source>This function compares two strings a character at a time. It scans both the strings at the same time to find the first pair of corresponding characters that do not match. If the lesser character of these two is the character from &lt;var&gt;string1&lt;/var&gt;, then &lt;var&gt;string1&lt;/var&gt; is less, and this function returns &lt;code&gt;t&lt;/code&gt;. If the lesser character is the one from &lt;var&gt;string2&lt;/var&gt;, then &lt;var&gt;string1&lt;/var&gt; is greater, and this function returns &lt;code&gt;nil&lt;/code&gt;. If the two strings match entirely, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、一度に2つの文字列を1文字ずつ比較します。両方の文字列を同時にスキャンして、一致しない対応する文字の最初のペアを見つけます。これら二つの小さい文字がから文字の場合は &lt;var&gt;string1&lt;/var&gt; 、その後、 &lt;var&gt;string1&lt;/var&gt; が少なく、この関数が返す &lt;code&gt;t&lt;/code&gt; 。小さい文字がから1であれば &lt;var&gt;string2&lt;/var&gt; のは、その後、 &lt;var&gt;string1&lt;/var&gt; が大きくなり、この関数が返すの &lt;code&gt;nil&lt;/code&gt; 。2つの文字列が完全に一致する場合、値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8c2f9fdbef44b9334df7df941797433fe0a9f929" translate="yes" xml:space="preserve">
          <source>This function compares two window configurations as regards the structure of windows, but ignores the values of point and the saved scrolling positions&amp;mdash;it can return &lt;code&gt;t&lt;/code&gt; even if those aspects differ.</source>
          <target state="translated">この関数は、ウィンドウの構造に関して2つのウィンドウ構成を比較しますが、ポイントの値と保存されたスクロール位置を無視します。これらの側面が異なっていても、 &lt;code&gt;t&lt;/code&gt; を返すことができます。</target>
        </trans-unit>
        <trans-unit id="5ec97384413e26b14db3042cb150998e759231c6" translate="yes" xml:space="preserve">
          <source>This function compares what &lt;var&gt;buffer&lt;/var&gt; (by default, the current-buffer) has recorded for the modification time of its visited file against the actual modification time of the file as recorded by the operating system. The two should be the same unless some other process has written the file since Emacs visited or saved it.</source>
          <target state="translated">この関数は、アクセスしたファイルの変更時間に対して記録された &lt;var&gt;buffer&lt;/var&gt; （デフォルトではcurrent-buffer）を、オペレーティングシステムによって記録されたファイルの実際の変更時間と比較します。Emacsがファイルにアクセスまたは保存してから他のプロセスがファイルを書き込んでいない限り、この2つは同じである必要があります。</target>
        </trans-unit>
        <trans-unit id="c83d94c6b4aed094cff30137ca18eeb913c13ac9" translate="yes" xml:space="preserve">
          <source>This function compiles a file of Lisp code named &lt;var&gt;filename&lt;/var&gt; into a file of byte-code. The output file&amp;rsquo;s name is made by changing the &amp;lsquo;</source>
          <target state="translated">この関数は、 &lt;var&gt;filename&lt;/var&gt; という名前のLispコードのファイルをバイトコードのファイルにコンパイルします。出力ファイルの名前は、 'を変更することによって作成されます</target>
        </trans-unit>
        <trans-unit id="9ff26f5c877255414616a98408a7c2311408a1aa" translate="yes" xml:space="preserve">
          <source>This function completely replaces the text property list for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">この関数は、文字列またはバッファ &lt;var&gt;object&lt;/var&gt; &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間のテキストのテキストプロパティリストを完全に置き換えます。 &lt;var&gt;object&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、デフォルトで現在のバッファになります。</target>
        </trans-unit>
        <trans-unit id="96e5dd8c088a37e664134a9b6d1058179d2a41ee" translate="yes" xml:space="preserve">
          <source>This function completes the file name &lt;var&gt;filename&lt;/var&gt; in directory &lt;var&gt;directory&lt;/var&gt;. It returns the longest prefix common to all file names in directory &lt;var&gt;directory&lt;/var&gt; that start with &lt;var&gt;filename&lt;/var&gt;. If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then it ignores possible completions that don&amp;rsquo;t satisfy &lt;var&gt;predicate&lt;/var&gt;, after calling that function with one argument, the expanded absolute file name.</source>
          <target state="translated">この関数は、ディレクトリ &lt;var&gt;directory&lt;/var&gt; 内のファイル名 &lt;var&gt;filename&lt;/var&gt; を完成させます。これは、 &lt;var&gt;filename&lt;/var&gt; で始まるディレクトリ &lt;var&gt;directory&lt;/var&gt; 内のすべてのファイル名に共通する最長のプレフィックスを返します。場合は &lt;var&gt;predicate&lt;/var&gt; 非である &lt;code&gt;nil&lt;/code&gt; のそれは満足していない可能な補完無視 &lt;var&gt;predicate&lt;/var&gt; 一つの引数、拡張された絶対ファイル名を指定してその関数を呼び出した後、。</target>
        </trans-unit>
        <trans-unit id="89697381d81d2b533d98ac549ea2fac24cad4a9b" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents as far as possible.</source>
          <target state="translated">この関数は、ミニバッファの内容を可能な限り補完します。</target>
        </trans-unit>
        <trans-unit id="f65e2c60aa526439854986136550b909686ed2ea" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents by at most a single word. Even if the minibuffer contents have only one completion, &lt;code&gt;minibuffer-complete-word&lt;/code&gt; does not add any characters beyond the first character that is not a word constituent. See &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;.</source>
          <target state="translated">この関数は、ミニバッファの内容を最大で1ワードで完了します。ミニバッファの内容に補完が1つしかない場合でも、 &lt;code&gt;minibuffer-complete-word&lt;/code&gt; は、単語の構成要素ではない最初の文字以外の文字を追加しません。&lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;構文表を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e5f99a4ea128fe021c030d5d486d31c0bc6723d4" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents, and exits if confirmation is not required, i.e., if &lt;code&gt;minibuffer-completion-confirm&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. If confirmation &lt;em&gt;is&lt;/em&gt; required, it is given by repeating this command immediately&amp;mdash;the command is programmed to work without confirmation when run twice in succession.</source>
          <target state="translated">この関数はミニバッファーの内容を完了し、確認が不要な場合、つまり &lt;code&gt;minibuffer-completion-confirm&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; の場合に終了します。確認&lt;em&gt;が&lt;/em&gt;必要な場合&lt;em&gt;は&lt;/em&gt;、このコマンドをすぐに繰り返すことで確認できます。このコマンドは、2回続けて実行すると、確認なしで機能するようにプログラムされています。</target>
        </trans-unit>
        <trans-unit id="b2a58d63f1c49b5bc24866684235f7841db04eba" translate="yes" xml:space="preserve">
          <source>This function completes the text in the current buffer between the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, using &lt;var&gt;collection&lt;/var&gt;. The argument &lt;var&gt;collection&lt;/var&gt; has the same meaning as in &lt;code&gt;try-completion&lt;/code&gt; (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;).</source>
          <target state="translated">この関数は、 &lt;var&gt;collection&lt;/var&gt; を使用して、現在のバッファー内の &lt;var&gt;start&lt;/var&gt; 位置と &lt;var&gt;end&lt;/var&gt; 位置の間のテキストを完成させます。引数 &lt;var&gt;collection&lt;/var&gt; は、 &lt;code&gt;try-completion&lt;/code&gt; の場合と同じ意味を持ちます（&lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;基本的な完了を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="0d1a5a3778131495c3c5ca116a07f78182f8f709" translate="yes" xml:space="preserve">
          <source>This function computes and sets &lt;code&gt;header-line-format&lt;/code&gt; for the Tabulated List buffer (see &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;Header Lines&lt;/a&gt;), and assigns a keymap to the header line to allow sorting entries by clicking on column headers.</source>
          <target state="translated">この関数は、表 &lt;code&gt;header-line-format&lt;/code&gt; リストバッファのheader-line-formatを計算して設定し（&lt;a href=&quot;header-lines#Header-Lines&quot;&gt;Header Linesを&lt;/a&gt;参照）、列ヘッダーをクリックしてエントリを並べ替えることができるように、ヘッダー行にキーマップを割り当てます。</target>
        </trans-unit>
        <trans-unit id="78c2d01ec980279b7b58d31009ca74eb586b1822" translate="yes" xml:space="preserve">
          <source>This function computes the file name for a new backup file for &lt;var&gt;filename&lt;/var&gt;. It may also propose certain existing backup files for deletion. &lt;code&gt;find-backup-file-name&lt;/code&gt; returns a list whose &lt;small&gt;CAR&lt;/small&gt; is the name for the new backup file and whose &lt;small&gt;CDR&lt;/small&gt; is a list of backup files whose deletion is proposed. The value can also be &lt;code&gt;nil&lt;/code&gt;, which means not to make a backup.</source>
          <target state="translated">この関数は、 &lt;var&gt;filename&lt;/var&gt; の新しいバックアップファイルのファイル名を計算します。また、削除する特定の既存のバックアップファイルを提案する場合もあります。 &lt;code&gt;find-backup-file-name&lt;/code&gt; は、&lt;small&gt;CAR&lt;/small&gt;が新しいバックアップファイルの名前であり、&lt;small&gt;CDR&lt;/small&gt;が削除が提案されているバックアップファイルのリストであるリストを返します。値は &lt;code&gt;nil&lt;/code&gt; にすることもできます。これは、バックアップを作成しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="15cfed84063ac5b06746e9180517a26ec66a11a3" translate="yes" xml:space="preserve">
          <source>This function concatenates &lt;var&gt;list-of-strings&lt;/var&gt; into a single string, quoting each string as necessary. It also sticks the &lt;var&gt;separator&lt;/var&gt; string between each pair of strings; if &lt;var&gt;separator&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to &lt;code&gt;&quot; &quot;&lt;/code&gt;. The return value is the resulting string.</source>
          <target state="translated">この関数 &lt;var&gt;list-of-strings&lt;/var&gt; を1つの文字列に連結し、必要に応じて各文字列を引用します。また、 &lt;var&gt;separator&lt;/var&gt; 列の各ペアの間にセパレータ文字列を貼り付けます。場合 &lt;var&gt;separator&lt;/var&gt; 省略されるかされて &lt;code&gt;nil&lt;/code&gt; に、デフォルト &lt;code&gt;&quot; &quot;&lt;/code&gt; 。戻り値は結果の文字列です。</target>
        </trans-unit>
        <trans-unit id="9fd9b3f2732fc488731684e8b7a04dcea87dd0c7" translate="yes" xml:space="preserve">
          <source>This function concatenates all its argument &lt;var&gt;bytes&lt;/var&gt; and makes the result a unibyte string.</source>
          <target state="translated">この関数は、すべての引数 &lt;var&gt;bytes&lt;/var&gt; を連結し、結果をユニバイト文字列にします。</target>
        </trans-unit>
        <trans-unit id="0f609cc62af27e58ae79537191c5454848740175" translate="yes" xml:space="preserve">
          <source>This function configures a serial port connection. Arguments are specified as keyword/argument pairs. Attributes that are not given are re-initialized from the process&amp;rsquo;s current configuration (available via the function &lt;code&gt;process-contact&lt;/code&gt;), or set to reasonable default values. The following arguments are defined:</source>
          <target state="translated">この関数は、シリアルポート接続を構成します。引数は、キーワード/引数のペアとして指定されます。指定されていない属性は、プロセスの現在の構成（関数 &lt;code&gt;process-contact&lt;/code&gt; を介して利用可能）から再初期化されるか、適切なデフォルト値に設定されます。次の引数が定義されています。</target>
        </trans-unit>
        <trans-unit id="ae1aa50ca602dad0456661afa9b0b54a5f48f045" translate="yes" xml:space="preserve">
          <source>This function considers only vertical scrolling. If &lt;var&gt;position&lt;/var&gt; is out of view only because &lt;var&gt;window&lt;/var&gt; has been scrolled horizontally, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; returns non-&lt;code&gt;nil&lt;/code&gt; anyway. See &lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;Horizontal Scrolling&lt;/a&gt;.</source>
          <target state="translated">この関数は、垂直スクロールのみを考慮します。 &lt;var&gt;window&lt;/var&gt; が水平方向にスクロールされたためだけに &lt;var&gt;position&lt;/var&gt; が表示されない場合、 &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; はとにかく &lt;code&gt;nil&lt;/code&gt; - nilを返します。&lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;水平スクロールを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cde355012f0c4eafa46f2543db211450f70a05d3" translate="yes" xml:space="preserve">
          <source>This function constrains &lt;var&gt;new-pos&lt;/var&gt; to the field that &lt;var&gt;old-pos&lt;/var&gt; belongs to&amp;mdash;in other words, it returns the position closest to &lt;var&gt;new-pos&lt;/var&gt; that is in the same field as &lt;var&gt;old-pos&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;new-pos&lt;/var&gt; を &lt;var&gt;old-pos&lt;/var&gt; が属するフィールドに制約します。つまり、 &lt;var&gt;old-pos&lt;/var&gt; と同じフィールドにある &lt;var&gt;new-pos&lt;/var&gt; に最も近い位置を返します。</target>
        </trans-unit>
        <trans-unit id="c035e2921cfe0f74be7de8b7fe58236fd3e77fcf" translate="yes" xml:space="preserve">
          <source>This function constructs a copy of &lt;var&gt;table&lt;/var&gt; and returns it. If &lt;var&gt;table&lt;/var&gt; is not supplied (or is &lt;code&gt;nil&lt;/code&gt;), it returns a copy of the standard category table. Otherwise, an error is signaled if &lt;var&gt;table&lt;/var&gt; is not a category table.</source>
          <target state="translated">この関数は、 &lt;var&gt;table&lt;/var&gt; コピーを作成して返します。 &lt;var&gt;table&lt;/var&gt; が指定されていない場合（または &lt;code&gt;nil&lt;/code&gt; の場合）、標準カテゴリテーブルのコピーが返されます。それ以外の場合、 &lt;var&gt;table&lt;/var&gt; がカテゴリテーブルでない場合は、エラーが通知されます。</target>
        </trans-unit>
        <trans-unit id="7f85e738f572dd42f45a76a6fb1310f9fd67cd0e" translate="yes" xml:space="preserve">
          <source>This function constructs a copy of &lt;var&gt;table&lt;/var&gt; and returns it. If &lt;var&gt;table&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it returns a copy of the standard syntax table. Otherwise, an error is signaled if &lt;var&gt;table&lt;/var&gt; is not a syntax table.</source>
          <target state="translated">この関数は、 &lt;var&gt;table&lt;/var&gt; コピーを作成して返します。 &lt;var&gt;table&lt;/var&gt; が省略または &lt;code&gt;nil&lt;/code&gt; の場合、標準構文テーブルのコピーを返します。それ以外の場合、 &lt;var&gt;table&lt;/var&gt; が構文テーブルでない場合はエラーが通知されます。</target>
        </trans-unit>
        <trans-unit id="b4c244f7aa08244e0deec64e00a96009dfa82c42" translate="yes" xml:space="preserve">
          <source>This function constructs and returns a byte-code function object with &lt;var&gt;elements&lt;/var&gt; as its elements.</source>
          <target state="translated">この関数は、 &lt;var&gt;elements&lt;/var&gt; を要素として持つバイトコード関数オブジェクトを作成して返します。</target>
        </trans-unit>
        <trans-unit id="874c9d04892ed512e0cb9599abc452937e886429" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;filename&lt;/var&gt; to an absolute file name. If &lt;var&gt;directory&lt;/var&gt; is supplied, it is the default directory to start with if &lt;var&gt;filename&lt;/var&gt; is relative and does not start with &amp;lsquo;</source>
          <target state="translated">この関数は、ファイル名を絶対ファイル名に変換し &lt;var&gt;filename&lt;/var&gt; 。場合は &lt;var&gt;directory&lt;/var&gt; 供給され、場合に開始するように、デフォルトのディレクトリで &lt;var&gt;filename&lt;/var&gt; 相対的であると'で始まりません</target>
        </trans-unit>
        <trans-unit id="c6f04cb2dcd8552a3a5f7e94e0e1f5fad1b2ccf9" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;string-or-char&lt;/var&gt;, which should be either a character or a string, to lower case.</source>
          <target state="translated">この関数は、文字または文字列である必要がある &lt;var&gt;string-or-char&lt;/var&gt; を小文字に変換します。</target>
        </trans-unit>
        <trans-unit id="0f989624fd0c758de426f10a05d50246e948f9a2" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;string-or-char&lt;/var&gt;, which should be either a character or a string, to upper case.</source>
          <target state="translated">この関数は、文字または文字列である必要がある &lt;var&gt;string-or-char&lt;/var&gt; を大文字に変換します。</target>
        </trans-unit>
        <trans-unit id="08deea44cd6426f83ec6d17a664425ce999fa824" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;time&lt;/var&gt; (or the current time, if &lt;var&gt;time&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;) to a string according to &lt;var&gt;format-string&lt;/var&gt;. The conversion uses the time zone rule &lt;var&gt;zone&lt;/var&gt;, which defaults to the current time zone rule. See &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Time Zone Rules&lt;/a&gt;. The argument &lt;var&gt;format-string&lt;/var&gt; may contain &amp;lsquo;</source>
          <target state="translated">この関数は、 &lt;var&gt;time&lt;/var&gt; （または &lt;var&gt;time&lt;/var&gt; が省略されているか &lt;code&gt;nil&lt;/code&gt; の場合は現在の時刻）を &lt;var&gt;format-string&lt;/var&gt; に従って文字列に変換します。変換では、タイムゾーンルール &lt;var&gt;zone&lt;/var&gt; 使用されます。デフォルトでは、現在のタイムゾーンルールが使用されます。&lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;タイムゾーンルールを&lt;/a&gt;参照してください。引数 &lt;var&gt;format-string&lt;/var&gt; には 'を含めることができます</target>
        </trans-unit>
        <trans-unit id="af54ecd47221b1061345a45468c6a95ba1e4a90a" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;time&lt;/var&gt; to a Lisp timestamp. It can act as the inverse of &lt;code&gt;decode-time&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;time&lt;/var&gt; をLispタイムスタンプに変換します。 &lt;code&gt;decode-time&lt;/code&gt; 逆数として機能します。</target>
        </trans-unit>
        <trans-unit id="9556989e13e1c87dd87a2475ba3e7fcedc6ef511" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;window&lt;/var&gt; into an atomic window. The specified &lt;var&gt;window&lt;/var&gt; must be an internal window. All this function does is to set the &lt;code&gt;window-atom&lt;/code&gt; parameter of each descendant of &lt;var&gt;window&lt;/var&gt; to &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;window&lt;/var&gt; をアトミックウィンドウに変換します。指定する &lt;var&gt;window&lt;/var&gt; は内部ウィンドウである必要があります。この関数が行うのは、 &lt;code&gt;window-atom&lt;/code&gt; の各子孫の &lt;var&gt;window&lt;/var&gt; -atomパラメーターを &lt;code&gt;t&lt;/code&gt; に設定することだけです。</target>
        </trans-unit>
        <trans-unit id="4394d3a4e8f2f4b04cb0e1e7a5b3b08994faeb8e" translate="yes" xml:space="preserve">
          <source>This function converts a byte of character data into a unibyte string. See &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;.</source>
          <target state="translated">この関数は、1バイトの文字データを1バイトの文字列に変換します。&lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;表現の変換を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e992f1f964d96bc49a9789e01d65667cbdb109b6" translate="yes" xml:space="preserve">
          <source>This function converts a list of modifier names and a basic event type to an event type which specifies all of them. The basic event type must be the last element of the list. For example,</source>
          <target state="translated">この関数は、修飾子名と基本イベント型のリストを、それらすべてを指定するイベント型に変換します。基本イベント型はリストの最後の要素でなければなりません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="fa293dfea4e94d45e0f4b45c62d0d21f401f60f1" translate="yes" xml:space="preserve">
          <source>This function converts a string into a list. See &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;.</source>
          <target state="translated">この関数は、文字列をリストに変換します。&lt;a href=&quot;building-lists#Building-Lists&quot;&gt;建物リストを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ba7cf90ea9020c057e351af979b4627a28943977" translate="yes" xml:space="preserve">
          <source>This function converts a string into a vector. See &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;Vector Functions&lt;/a&gt;.</source>
          <target state="translated">この関数は、文字列をベクトルに変換します。&lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;ベクトル関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="de39ac156148bc00d8eba5104462a121e553a0c8" translate="yes" xml:space="preserve">
          <source>This function converts a symbolic file mode specification in &lt;var&gt;modes&lt;/var&gt; into the equivalent integer. If the symbolic specification is based on an existing file, that file&amp;rsquo;s mode bits are taken from the optional argument &lt;var&gt;base-modes&lt;/var&gt;; if that argument is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 0, i.e., no access rights at all.</source>
          <target state="translated">この関数は、 &lt;var&gt;modes&lt;/var&gt; シンボリックファイルモード仕様を同等の整数に変換します。シンボリック仕様が既存のファイルに基づいている場合、そのファイルのモードビットはオプションの引数 &lt;var&gt;base-modes&lt;/var&gt; から取得されます。その引数が省略されているか &lt;code&gt;nil&lt;/code&gt; の場合、デフォルトで0になります。つまり、アクセス権はまったくありません。</target>
        </trans-unit>
        <trans-unit id="d030cf650429694dcbd23523e917ca3d9b38b644" translate="yes" xml:space="preserve">
          <source>This function converts a time value into a Lisp timestamp.</source>
          <target state="translated">この関数は、時間値をLispのタイムスタンプに変換します。</target>
        </trans-unit>
        <trans-unit id="b42ea5d4ccf2ef27bcafdca8857b96e0ec80b9ba" translate="yes" xml:space="preserve">
          <source>This function converts a time value into calendrical information. If you don&amp;rsquo;t specify &lt;var&gt;time&lt;/var&gt;, it decodes the current time, and similarly &lt;var&gt;zone&lt;/var&gt; defaults to the current time zone rule. See &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Time Zone Rules&lt;/a&gt;. The operating system limits the range of time and zone values.</source>
          <target state="translated">この関数は、時間値を暦情報に変換します。 &lt;var&gt;time&lt;/var&gt; 指定しない場合、現在の時刻がデコードされ、同様に &lt;var&gt;zone&lt;/var&gt; デフォルトは現在のタイムゾーンルールになります。&lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;タイムゾーンルールを&lt;/a&gt;参照してください。オペレーティングシステムは、時間とゾーンの値の範囲を制限します。</target>
        </trans-unit>
        <trans-unit id="2f969c70e3311439ebe20fadc0eaec66bb09a12b" translate="yes" xml:space="preserve">
          <source>This function converts a vector or a list into a string. See &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;.</source>
          <target state="translated">この関数は、ベクトルまたはリストを文字列に変換します。&lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;文字列の作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3e6336c33752f31d6b7b5c1c515a347a8aa0a924" translate="yes" xml:space="preserve">
          <source>This function converts all of the letters in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; to lower case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 定義された領域内のすべての文字を小文字に変換します。関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a9a4398a0eb5df16a14bbdabef0a9c25aa4c8dca" translate="yes" xml:space="preserve">
          <source>This function converts all of the letters in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; to upper case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 定義された領域内のすべての文字を大文字に変換します。関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e8e8fdf0444ef662f70cfc701373fe0e12fe9b20" translate="yes" xml:space="preserve">
          <source>This function converts its argument &lt;var&gt;seconds&lt;/var&gt; into a string of years, days, hours, etc., according to &lt;var&gt;format-string&lt;/var&gt;. The argument &lt;var&gt;format-string&lt;/var&gt; may contain &amp;lsquo;</source>
          <target state="translated">この関数は、 &lt;var&gt;format-string&lt;/var&gt; に従って、引数 &lt;var&gt;seconds&lt;/var&gt; を年、日、時間などの文字列に変換します。引数 &lt;var&gt;format-string&lt;/var&gt; には 'を含めることができます</target>
        </trans-unit>
        <trans-unit id="86a9053d2989039c47d4dcf75a4f96fffa040ae3" translate="yes" xml:space="preserve">
          <source>This function converts the &lt;var&gt;count&lt;/var&gt; words after point to all lower case, moving point over as it does. If &lt;var&gt;count&lt;/var&gt; is negative, it converts the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、ポイントの後の &lt;var&gt;count&lt;/var&gt; ワードをすべて小文字に変換し、ポイントを移動します。 &lt;var&gt;count&lt;/var&gt; が負の場合、 &lt;var&gt;count&lt;/var&gt; 前の単語を変換しますが、ポイントは移動しません。値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cac8af14fb95a5540d55eb853b73fc1a4069ee83" translate="yes" xml:space="preserve">
          <source>This function converts the &lt;var&gt;count&lt;/var&gt; words after point to all upper case, moving point over as it does. If &lt;var&gt;count&lt;/var&gt; is negative, it converts the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、ポイントの後の &lt;var&gt;count&lt;/var&gt; ワードをすべて大文字に変換し、ポイントを移動します。 &lt;var&gt;count&lt;/var&gt; が負の場合、 &lt;var&gt;count&lt;/var&gt; 前の単語を変換しますが、ポイントは移動しません。値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="062f3332d58edfbeada8443df59348c0b2e03c21" translate="yes" xml:space="preserve">
          <source>This function converts the Lisp representation of a network address to a string.</source>
          <target state="translated">この関数は、ネットワークアドレスの Lisp 表現を文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="359414babccfce31742287145cb81207c3f0a60a" translate="yes" xml:space="preserve">
          <source>This function converts the category set &lt;var&gt;category-set&lt;/var&gt; into a string containing the characters that designate the categories that are members of the set.</source>
          <target state="translated">この関数は、カテゴリセット &lt;var&gt;category-set&lt;/var&gt; を、セットのメンバーであるカテゴリを指定する文字を含む文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="222c0635402e22f63d2e19252b80a4006a515fdf" translate="yes" xml:space="preserve">
          <source>This function converts the region from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; from base 64 code into the corresponding decoded text. It returns the length of the decoded text.</source>
          <target state="translated">この関数は、領域を &lt;var&gt;beg&lt;/var&gt; から &lt;var&gt;end&lt;/var&gt; までbase64コードから対応するデコードされたテキストに変換します。デコードされたテキストの長さを返します。</target>
        </trans-unit>
        <trans-unit id="c5d4159748c6f5ed11333f8afa2f8e02a7c10cee" translate="yes" xml:space="preserve">
          <source>This function converts the region from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; into base 64 code. It returns the length of the encoded text. An error is signaled if a character in the region is multibyte, i.e., in a multibyte buffer the region must contain only characters from the charsets &lt;code&gt;ascii&lt;/code&gt;, &lt;code&gt;eight-bit-control&lt;/code&gt; and &lt;code&gt;eight-bit-graphic&lt;/code&gt;.</source>
          <target state="translated">この関数は、領域を &lt;var&gt;beg&lt;/var&gt; から &lt;var&gt;end&lt;/var&gt; までbase64コードに変換します。エンコードされたテキストの長さを返します。領域内の文字がマルチバイトの場合、つまり、マルチバイトバッファー内の領域には、文字セット &lt;code&gt;ascii&lt;/code&gt; 、 &lt;code&gt;eight-bit-control&lt;/code&gt; および &lt;code&gt;eight-bit-graphic&lt;/code&gt; の文字のみが含まれている必要がある場合、エラーが通知されます。</target>
        </trans-unit>
        <trans-unit id="27da589d75e12703d9b8345613fc7d8ec3e352e7" translate="yes" xml:space="preserve">
          <source>This function converts the sequence &lt;var&gt;sequence&lt;/var&gt; into a sequence of type &lt;var&gt;type&lt;/var&gt;. &lt;var&gt;type&lt;/var&gt; can be one of the following symbols: &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">この関数は、シーケンスシーケンスをタイプ &lt;var&gt;type&lt;/var&gt; の &lt;var&gt;sequence&lt;/var&gt; に変換します。 &lt;var&gt;type&lt;/var&gt; は、 &lt;code&gt;vector&lt;/code&gt; 、 &lt;code&gt;string&lt;/code&gt; 、または &lt;code&gt;list&lt;/code&gt; のいずれかの記号にすることができます。</target>
        </trans-unit>
        <trans-unit id="a450d2efa54e77616fbd5d26e99b08469e6ca74d" translate="yes" xml:space="preserve">
          <source>This function converts the string &lt;var&gt;string&lt;/var&gt; from base 64 code into the corresponding decoded text. It returns a unibyte string containing the decoded text.</source>
          <target state="translated">この関数は、文字 &lt;var&gt;string&lt;/var&gt; 文字列をbase64コードから対応するデコードされたテキストに変換します。デコードされたテキストを含むユニバイト文字列を返します。</target>
        </trans-unit>
        <trans-unit id="02598df53b09eaff6e4270202cb83707188dc533" translate="yes" xml:space="preserve">
          <source>This function converts the string &lt;var&gt;string&lt;/var&gt; into base 64 code. It returns a string containing the encoded text. As for &lt;code&gt;base64-encode-region&lt;/code&gt;, an error is signaled if a character in the string is multibyte.</source>
          <target state="translated">この関数は、文字 &lt;var&gt;string&lt;/var&gt; 文字列をbase64コードに変換します。エンコードされたテキストを含む文字列を返します。 &lt;code&gt;base64-encode-region&lt;/code&gt; 文字列内の文字がマルチバイトである場合、エラーを通知します。</target>
        </trans-unit>
        <trans-unit id="9b37cca380a96ff521cab51131ab757cfa6eae3e" translate="yes" xml:space="preserve">
          <source>This function converts the string or vector &lt;var&gt;key&lt;/var&gt; to a list of individual events, which you can put in &lt;code&gt;unread-command-events&lt;/code&gt;.</source>
          <target state="translated">この関数は、文字列またはベクトル &lt;var&gt;key&lt;/var&gt; を個々のイベントのリストに変換します。このリストは、 &lt;code&gt;unread-command-events&lt;/code&gt; に入れることができます。</target>
        </trans-unit>
        <trans-unit id="f001050e70298d6ec962a0626dbda0a35b830508" translate="yes" xml:space="preserve">
          <source>This function converts the text &lt;var&gt;keyseq-text&lt;/var&gt; (a string constant) into a key sequence (a string or vector constant). The contents of &lt;var&gt;keyseq-text&lt;/var&gt; should use the same syntax as in the buffer invoked by the</source>
          <target state="translated">この関数は、テキスト &lt;var&gt;keyseq-text&lt;/var&gt; （文字列定数）をキーシーケンス（文字列またはベクトル定数）に変換します。 &lt;var&gt;keyseq-text&lt;/var&gt; の内容は、によって呼び出されるバッファと同じ構文を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="fe2af2ee8e43bb67213200069f07caef5315b672" translate="yes" xml:space="preserve">
          <source>This function copies &lt;var&gt;string&lt;/var&gt; and searches it for matches for &lt;var&gt;regexp&lt;/var&gt;, and replaces them with &lt;var&gt;rep&lt;/var&gt;. It returns the modified copy. If &lt;var&gt;start&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the search for matches starts at that index in &lt;var&gt;string&lt;/var&gt;, and the returned value does not include the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt;. To get the whole transformed string, concatenate the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt; with the return value.</source>
          <target state="translated">This function copies &lt;var&gt;string&lt;/var&gt; and searches it for matches for &lt;var&gt;regexp&lt;/var&gt; , and replaces them with &lt;var&gt;rep&lt;/var&gt; . It returns the modified copy. If &lt;var&gt;start&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , the search for matches starts at that index in &lt;var&gt;string&lt;/var&gt; , and the returned value does not include the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt; . To get the whole transformed string, concatenate the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt; with the return value.</target>
        </trans-unit>
        <trans-unit id="51e5f325841e460853d8b05b54f5976696115725" translate="yes" xml:space="preserve">
          <source>This function copies file &lt;var&gt;filename&lt;/var&gt; to an ordinary non-magic file on the local machine, if it isn&amp;rsquo;t on the local machine already. Magic file names should handle the &lt;code&gt;file-local-copy&lt;/code&gt; operation if they refer to files on other machines. A magic file name that is used for other purposes than remote file access should not handle &lt;code&gt;file-local-copy&lt;/code&gt;; then this function will treat the file as local.</source>
          <target state="translated">This function copies file &lt;var&gt;filename&lt;/var&gt; to an ordinary non-magic file on the local machine, if it isn&amp;rsquo;t on the local machine already. Magic file names should handle the &lt;code&gt;file-local-copy&lt;/code&gt; operation if they refer to files on other machines. A magic file name that is used for other purposes than remote file access should not handle &lt;code&gt;file-local-copy&lt;/code&gt; ; then this function will treat the file as local.</target>
        </trans-unit>
        <trans-unit id="4d71eef7c1798851e7a2d2a53cf748479d7454c9" translate="yes" xml:space="preserve">
          <source>This function copies the sign of &lt;var&gt;x2&lt;/var&gt; to the value of &lt;var&gt;x1&lt;/var&gt;, and returns the result. &lt;var&gt;x1&lt;/var&gt; and &lt;var&gt;x2&lt;/var&gt; must be floating point.</source>
          <target state="translated">This function copies the sign of &lt;var&gt;x2&lt;/var&gt; to the value of &lt;var&gt;x1&lt;/var&gt; , and returns the result. &lt;var&gt;x1&lt;/var&gt; and &lt;var&gt;x2&lt;/var&gt; must be floating point.</target>
        </trans-unit>
        <trans-unit id="cdcd7718f4e0db41253c7648be016dfbe77d1427" translate="yes" xml:space="preserve">
          <source>This function creates a</source>
          <target state="translated">この関数は</target>
        </trans-unit>
        <trans-unit id="37af52e12ffb883947a0241d5e5fc903cdf887df" translate="yes" xml:space="preserve">
          <source>This function creates a bidirectional pipe which can be attached to a child process. This is useful with the &lt;code&gt;:stderr&lt;/code&gt; keyword of &lt;code&gt;make-process&lt;/code&gt;. The function returns a process object.</source>
          <target state="translated">This function creates a bidirectional pipe which can be attached to a child process. This is useful with the &lt;code&gt;:stderr&lt;/code&gt; keyword of &lt;code&gt;make-process&lt;/code&gt; . The function returns a process object.</target>
        </trans-unit>
        <trans-unit id="7cc3af8ffb20d8eaafcaa12e0ec7566fc8b04eb7" translate="yes" xml:space="preserve">
          <source>This function creates a buffer-local binding in the current buffer for &lt;var&gt;variable&lt;/var&gt; (a symbol). Other buffers are not affected. The value returned is &lt;var&gt;variable&lt;/var&gt;.</source>
          <target state="translated">This function creates a buffer-local binding in the current buffer for &lt;var&gt;variable&lt;/var&gt; (a symbol). Other buffers are not affected. The value returned is &lt;var&gt;variable&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="d7404d032182753fbb61946df90b9ddbd5442f67" translate="yes" xml:space="preserve">
          <source>This function creates a list of &lt;var&gt;length&lt;/var&gt; elements, in which each element is &lt;var&gt;object&lt;/var&gt;. Compare &lt;code&gt;make-list&lt;/code&gt; with &lt;code&gt;make-string&lt;/code&gt; (see &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;).</source>
          <target state="translated">This function creates a list of &lt;var&gt;length&lt;/var&gt; elements, in which each element is &lt;var&gt;object&lt;/var&gt; . Compare &lt;code&gt;make-list&lt;/code&gt; with &lt;code&gt;make-string&lt;/code&gt; (see &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="cadb41c353181fcd60943def05424f6e383348e1" translate="yes" xml:space="preserve">
          <source>This function creates a list of the possible completions of the current minibuffer contents. It works by calling &lt;code&gt;all-completions&lt;/code&gt; using the value of the variable &lt;code&gt;minibuffer-completion-table&lt;/code&gt; as the &lt;var&gt;collection&lt;/var&gt; argument, and the value of &lt;code&gt;minibuffer-completion-predicate&lt;/code&gt; as the &lt;var&gt;predicate&lt;/var&gt; argument. The list of completions is displayed as text in a buffer named</source>
          <target state="translated">This function creates a list of the possible completions of the current minibuffer contents. It works by calling &lt;code&gt;all-completions&lt;/code&gt; using the value of the variable &lt;code&gt;minibuffer-completion-table&lt;/code&gt; as the &lt;var&gt;collection&lt;/var&gt; argument, and the value of &lt;code&gt;minibuffer-completion-predicate&lt;/code&gt; as the &lt;var&gt;predicate&lt;/var&gt; argument. The list of completions is displayed as text in a buffer named</target>
        </trans-unit>
        <trans-unit id="65f946d0e00117b79a9e660edc9fec28d1d3ab61" translate="yes" xml:space="preserve">
          <source>This function creates a list with &lt;var&gt;objects&lt;/var&gt; as its elements. The resulting list is always &lt;code&gt;nil&lt;/code&gt;-terminated. If no &lt;var&gt;objects&lt;/var&gt; are given, the empty list is returned.</source>
          <target state="translated">This function creates a list with &lt;var&gt;objects&lt;/var&gt; as its elements. The resulting list is always &lt;code&gt;nil&lt;/code&gt; -terminated. If no &lt;var&gt;objects&lt;/var&gt; are given, the empty list is returned.</target>
        </trans-unit>
        <trans-unit id="416ae54fad353d6bf85c7f9a263a40780f8df4f6" translate="yes" xml:space="preserve">
          <source>This function creates a listing of all current key bindings, and displays it in a buffer named</source>
          <target state="translated">この関数は、現在のすべてのキーバインドのリストを作成し、それを</target>
        </trans-unit>
        <trans-unit id="2409b78bcbd59a3bc4cf9535cfe30274683154ed" translate="yes" xml:space="preserve">
          <source>This function creates a network connection or server and returns the process object that represents it. The arguments &lt;var&gt;args&lt;/var&gt; are a list of keyword/argument pairs. Omitting a keyword is always equivalent to specifying it with value &lt;code&gt;nil&lt;/code&gt;, except for &lt;code&gt;:coding&lt;/code&gt;, &lt;code&gt;:filter-multibyte&lt;/code&gt;, and &lt;code&gt;:reuseaddr&lt;/code&gt;. Here are the meaningful keywords (those corresponding to network options are listed in the following section):</source>
          <target state="translated">This function creates a network connection or server and returns the process object that represents it. The arguments &lt;var&gt;args&lt;/var&gt; are a list of keyword/argument pairs. Omitting a keyword is always equivalent to specifying it with value &lt;code&gt;nil&lt;/code&gt; , except for &lt;code&gt;:coding&lt;/code&gt; , &lt;code&gt;:filter-multibyte&lt;/code&gt; , and &lt;code&gt;:reuseaddr&lt;/code&gt; . Here are the meaningful keywords (those corresponding to network options are listed in the following section):</target>
        </trans-unit>
        <trans-unit id="482fbe7c2279d7b9dc41fe6cc6f0cd063ffbfb94" translate="yes" xml:space="preserve">
          <source>This function creates a new frame, and displays the buffer in that frame&amp;rsquo;s window. It actually performs the frame creation by calling the function specified in &lt;code&gt;pop-up-frame-function&lt;/code&gt; (see &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;Choosing Window Options&lt;/a&gt;). If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; entry, the associated value is added to the newly created frame&amp;rsquo;s parameters.</source>
          <target state="translated">This function creates a new frame, and displays the buffer in that frame&amp;rsquo;s window. It actually performs the frame creation by calling the function specified in &lt;code&gt;pop-up-frame-function&lt;/code&gt; (see &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;Choosing Window Options&lt;/a&gt;). If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; entry, the associated value is added to the newly created frame&amp;rsquo;s parameters.</target>
        </trans-unit>
        <trans-unit id="b52e15e1556c244566f6db3e6c32a0879f170e5c" translate="yes" xml:space="preserve">
          <source>This function creates a new hash table according to the specified arguments. The arguments should consist of alternating keywords (particular symbols recognized specially) and values corresponding to them.</source>
          <target state="translated">この関数は、指定された引数に従って新しいハッシュテーブルを作成します。引数は、キーワード(特別に認識されたシンボル)とそれに対応する値を交互に並べたものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="c80202af3d2806e8c78c020b4842a0574f1e38f4" translate="yes" xml:space="preserve">
          <source>This function creates a new live window next to the window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. That window is split, and reduced in size. The space is taken up by the new window, which is returned.</source>
          <target state="translated">This function creates a new live window next to the window &lt;var&gt;window&lt;/var&gt; . If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to the selected window. That window is split, and reduced in size. The space is taken up by the new window, which is returned.</target>
        </trans-unit>
        <trans-unit id="4d43f3e4ac040f6f2c7182f8c98940643d51ec8f" translate="yes" xml:space="preserve">
          <source>This function creates a new sequence whose elements are the elements of &lt;var&gt;sequence&lt;/var&gt;, but in reverse order. The original argument &lt;var&gt;sequence&lt;/var&gt; is &lt;em&gt;not&lt;/em&gt; altered. Note that char-tables cannot be reversed.</source>
          <target state="translated">This function creates a new sequence whose elements are the elements of &lt;var&gt;sequence&lt;/var&gt; , but in reverse order. The original argument &lt;var&gt;sequence&lt;/var&gt; is &lt;em&gt;not&lt;/em&gt; altered. Note that char-tables cannot be reversed.</target>
        </trans-unit>
        <trans-unit id="a99a5d28a1e9a727cd5fb40c95efa766b1b2aa25" translate="yes" xml:space="preserve">
          <source>This function creates a new syntax table. If &lt;var&gt;table&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the parent of the new syntax table is &lt;var&gt;table&lt;/var&gt;; otherwise, the parent is the standard syntax table.</source>
          <target state="translated">This function creates a new syntax table. If &lt;var&gt;table&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , the parent of the new syntax table is &lt;var&gt;table&lt;/var&gt; ; otherwise, the parent is the standard syntax table.</target>
        </trans-unit>
        <trans-unit id="4b98eeba141c882ae23d506b9f00793c85f94936" translate="yes" xml:space="preserve">
          <source>This function creates a process and a buffer. Arguments are specified as keyword/argument pairs. Here&amp;rsquo;s the list of the meaningful keywords, with the first two (&lt;var&gt;port&lt;/var&gt; and &lt;var&gt;speed&lt;/var&gt;) being mandatory:</source>
          <target state="translated">This function creates a process and a buffer. Arguments are specified as keyword/argument pairs. Here&amp;rsquo;s the list of the meaningful keywords, with the first two ( &lt;var&gt;port&lt;/var&gt; and &lt;var&gt;speed&lt;/var&gt; ) being mandatory:</target>
        </trans-unit>
        <trans-unit id="b994a272bc988cf1ef9636454ae9c2120b871697" translate="yes" xml:space="preserve">
          <source>This function creates a suitably named buffer for visiting &lt;var&gt;filename&lt;/var&gt;, and returns it. It uses &lt;var&gt;filename&lt;/var&gt; (sans directory) as the name if that name is free; otherwise, it appends a string such as &amp;lsquo;</source>
          <target state="translated">This function creates a suitably named buffer for visiting &lt;var&gt;filename&lt;/var&gt; , and returns it. It uses &lt;var&gt;filename&lt;/var&gt; (sans directory) as the name if that name is free; otherwise, it appends a string such as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="db055f24aacbb1ec4d973336ec030eeac91b694e" translate="yes" xml:space="preserve">
          <source>This function creates a temporary file and returns its name. Emacs creates the temporary file&amp;rsquo;s name by adding to &lt;var&gt;prefix&lt;/var&gt; some random characters that are different in each Emacs job. The result is guaranteed to be a newly created file, containing &lt;var&gt;text&lt;/var&gt; if that&amp;rsquo;s given as a string and empty otherwise. On MS-DOS, this function can truncate &lt;var&gt;prefix&lt;/var&gt; to fit into the 8+3 file-name limits. If &lt;var&gt;prefix&lt;/var&gt; is a relative file name, it is expanded against &lt;code&gt;temporary-file-directory&lt;/code&gt;.</source>
          <target state="translated">This function creates a temporary file and returns its name. Emacs creates the temporary file&amp;rsquo;s name by adding to &lt;var&gt;prefix&lt;/var&gt; some random characters that are different in each Emacs job. The result is guaranteed to be a newly created file, containing &lt;var&gt;text&lt;/var&gt; if that&amp;rsquo;s given as a string and empty otherwise. On MS-DOS, this function can truncate &lt;var&gt;prefix&lt;/var&gt; to fit into the 8+3 file-name limits. If &lt;var&gt;prefix&lt;/var&gt; is a relative file name, it is expanded against &lt;code&gt;temporary-file-directory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e9bdcc97c643032a97159919aa9b762f29eeebc" translate="yes" xml:space="preserve">
          <source>This function creates an Emacs string from C text string pointed by &lt;var&gt;str&lt;/var&gt; whose length in bytes, not including the terminating null byte, is &lt;var&gt;strlen&lt;/var&gt;. The original string in &lt;var&gt;str&lt;/var&gt; can be either an</source>
          <target state="translated">This function creates an Emacs string from C text string pointed by &lt;var&gt;str&lt;/var&gt; whose length in bytes, not including the terminating null byte, is &lt;var&gt;strlen&lt;/var&gt; . The original string in &lt;var&gt;str&lt;/var&gt; can be either an</target>
        </trans-unit>
        <trans-unit id="5959cc4559bb22d8ee089c861eb242b28919d891" translate="yes" xml:space="preserve">
          <source>This function creates and returns a &lt;code&gt;user-ptr&lt;/code&gt; object which wraps the C pointer &lt;var&gt;ptr&lt;/var&gt;. The finalizer function &lt;var&gt;fin&lt;/var&gt; can be a &lt;code&gt;NULL&lt;/code&gt; pointer (meaning no finalizer), or it can be a function of the following signature:</source>
          <target state="translated">This function creates and returns a &lt;code&gt;user-ptr&lt;/code&gt; object which wraps the C pointer &lt;var&gt;ptr&lt;/var&gt; . The finalizer function &lt;var&gt;fin&lt;/var&gt; can be a &lt;code&gt;NULL&lt;/code&gt; pointer (meaning no finalizer), or it can be a function of the following signature:</target>
        </trans-unit>
        <trans-unit id="59745ad21a235e214aeb13cca0a7040c616077db" translate="yes" xml:space="preserve">
          <source>This function creates and returns a bool-vector whose elements are the arguments, &lt;var&gt;objects&lt;/var&gt;.</source>
          <target state="translated">This function creates and returns a bool-vector whose elements are the arguments, &lt;var&gt;objects&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="449e9da9c82272e6b197c43a797ea855c453021b" translate="yes" xml:space="preserve">
          <source>This function creates and returns a copy of &lt;var&gt;table&lt;/var&gt;. Only the table itself is copied&amp;mdash;the keys and values are shared.</source>
          <target state="translated">This function creates and returns a copy of &lt;var&gt;table&lt;/var&gt; . Only the table itself is copied&amp;mdash;the keys and values are shared.</target>
        </trans-unit>
        <trans-unit id="1bb5f1c75cc6d716b9fc08892c8dea9f3bd4da73" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new frame on &lt;var&gt;display&lt;/var&gt;, taking the other frame parameters from the alist &lt;var&gt;parameters&lt;/var&gt;. &lt;var&gt;display&lt;/var&gt; should be the name of an X display (a string).</source>
          <target state="translated">This function creates and returns a new frame on &lt;var&gt;display&lt;/var&gt; , taking the other frame parameters from the alist &lt;var&gt;parameters&lt;/var&gt; . &lt;var&gt;display&lt;/var&gt; should be the name of an X display (a string).</target>
        </trans-unit>
        <trans-unit id="6b68440be7129d7734a8df8e6d73959684ac61ee" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new frame on &lt;var&gt;monitor&lt;/var&gt; located on &lt;var&gt;display&lt;/var&gt;, taking the other frame parameters from the alist &lt;var&gt;parameters&lt;/var&gt;. &lt;var&gt;monitor&lt;/var&gt; should be the name of the physical monitor, the same string as returned by the function &lt;code&gt;display-monitor-attributes-list&lt;/code&gt; in the attribute &lt;code&gt;name&lt;/code&gt;. &lt;var&gt;display&lt;/var&gt; should be the name of an X display (a string).</source>
          <target state="translated">This function creates and returns a new frame on &lt;var&gt;monitor&lt;/var&gt; located on &lt;var&gt;display&lt;/var&gt; , taking the other frame parameters from the alist &lt;var&gt;parameters&lt;/var&gt; . &lt;var&gt;monitor&lt;/var&gt; should be the name of the physical monitor, the same string as returned by the function &lt;code&gt;display-monitor-attributes-list&lt;/code&gt; in the attribute &lt;code&gt;name&lt;/code&gt; . &lt;var&gt;display&lt;/var&gt; should be the name of an X display (a string).</target>
        </trans-unit>
        <trans-unit id="bd23f063ac47b8196895f6fdefc217f968295d6f" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new frame, displaying the current buffer.</source>
          <target state="translated">この関数は、新しいフレームを作成し、現在のバッファを表示して返します。</target>
        </trans-unit>
        <trans-unit id="b8dd074487e687f8b06ba9d87275959b741345c5" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new full keymap. That keymap contains a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) with slots for all characters without modifiers. The new keymap initially binds all these characters to &lt;code&gt;nil&lt;/code&gt;, and does not bind any other kind of event. The argument &lt;var&gt;prompt&lt;/var&gt; specifies a prompt string, as in &lt;code&gt;make-sparse-keymap&lt;/code&gt;.</source>
          <target state="translated">This function creates and returns a new full keymap. That keymap contains a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) with slots for all characters without modifiers. The new keymap initially binds all these characters to &lt;code&gt;nil&lt;/code&gt; , and does not bind any other kind of event. The argument &lt;var&gt;prompt&lt;/var&gt; specifies a prompt string, as in &lt;code&gt;make-sparse-keymap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72f732f4400aef025baab876624e05b34a1eb403" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new indirect buffer that shares the current buffer&amp;rsquo;s base buffer and copies the rest of the current buffer&amp;rsquo;s attributes. (If the current buffer is not indirect, it is used as the base buffer.)</source>
          <target state="translated">This function creates and returns a new indirect buffer that shares the current buffer&amp;rsquo;s base buffer and copies the rest of the current buffer&amp;rsquo;s attributes. (If the current buffer is not indirect, it is used as the base buffer.)</target>
        </trans-unit>
        <trans-unit id="42708ab7c96a05d7b6b218bfbbde837d2da2f7ff" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new sparse keymap with no entries. (A sparse keymap is the kind of keymap you usually want.) The new keymap does not contain a char-table, unlike &lt;code&gt;make-keymap&lt;/code&gt;, and does not bind any events.</source>
          <target state="translated">This function creates and returns a new sparse keymap with no entries. (A sparse keymap is the kind of keymap you usually want.) The new keymap does not contain a char-table, unlike &lt;code&gt;make-keymap&lt;/code&gt; , and does not bind any events.</target>
        </trans-unit>
        <trans-unit id="4f0076ff846cc3a7e8e51b7b27c0b9c24a7c3563" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new, empty abbrev table&amp;mdash;an obarray containing no symbols. It is a vector filled with zeros. &lt;var&gt;props&lt;/var&gt; is a property list that is applied to the new table (see &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev Table Properties&lt;/a&gt;).</source>
          <target state="translated">This function creates and returns a new, empty abbrev table&amp;mdash;an obarray containing no symbols. It is a vector filled with zeros. &lt;var&gt;props&lt;/var&gt; is a property list that is applied to the new table (see &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev Table Properties&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="1df5c7389edfe93dda9f7dacb55305b12c2e78d3" translate="yes" xml:space="preserve">
          <source>This function creates and returns a progress reporter object, which you will use as an argument for the other functions listed below. The idea is to precompute as much data as possible to make progress reporting very fast.</source>
          <target state="translated">この関数は、以下の他の関数の引数として使用するプログレスレポーターオブジェクトを作成して返します。これは、可能な限り多くのデータを事前に計算して、進捗報告を非常に高速にすることを目的としています。</target>
        </trans-unit>
        <trans-unit id="44bde2354361088b7baee014dbddde380ffdace6" translate="yes" xml:space="preserve">
          <source>This function creates and returns a record whose type is &lt;var&gt;type&lt;/var&gt; and remaining slots are the rest of the arguments, &lt;var&gt;objects&lt;/var&gt;.</source>
          <target state="translated">This function creates and returns a record whose type is &lt;var&gt;type&lt;/var&gt; and remaining slots are the rest of the arguments, &lt;var&gt;objects&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c164be87f7b86348c909c873c4b54a87a9c318d9" translate="yes" xml:space="preserve">
          <source>This function creates and returns a transaction queue communicating with &lt;var&gt;process&lt;/var&gt;. The argument &lt;var&gt;process&lt;/var&gt; should be a subprocess capable of sending and receiving streams of bytes. It may be a child process, or it may be a TCP connection to a server, possibly on another machine.</source>
          <target state="translated">This function creates and returns a transaction queue communicating with &lt;var&gt;process&lt;/var&gt; . The argument &lt;var&gt;process&lt;/var&gt; should be a subprocess capable of sending and receiving streams of bytes. It may be a child process, or it may be a TCP connection to a server, possibly on another machine.</target>
        </trans-unit>
        <trans-unit id="7f39207dde0842d8665011cceaacad52846dee27" translate="yes" xml:space="preserve">
          <source>This function creates and returns a vector whose elements are the arguments, &lt;var&gt;objects&lt;/var&gt;.</source>
          <target state="translated">This function creates and returns a vector whose elements are the arguments, &lt;var&gt;objects&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="dd712963faf3dbecad84651e45747d02a561e877" translate="yes" xml:space="preserve">
          <source>This function creates and returns an image descriptor which uses the data in &lt;var&gt;file-or-data&lt;/var&gt;. &lt;var&gt;file-or-data&lt;/var&gt; can be a file name or a string containing the image data; &lt;var&gt;data-p&lt;/var&gt; should be &lt;code&gt;nil&lt;/code&gt; for the former case, non-&lt;code&gt;nil&lt;/code&gt; for the latter case.</source>
          <target state="translated">This function creates and returns an image descriptor which uses the data in &lt;var&gt;file-or-data&lt;/var&gt; . &lt;var&gt;file-or-data&lt;/var&gt; can be a file name or a string containing the image data; &lt;var&gt;data-p&lt;/var&gt; should be &lt;code&gt;nil&lt;/code&gt; for the former case, non- &lt;code&gt;nil&lt;/code&gt; for the latter case.</target>
        </trans-unit>
        <trans-unit id="9858d9377c82e05742bfd43c4f8df0f4077feca7" translate="yes" xml:space="preserve">
          <source>This function creates and returns an overlay that belongs to &lt;var&gt;buffer&lt;/var&gt; and ranges from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. Both &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; must specify buffer positions; they may be integers or markers. If &lt;var&gt;buffer&lt;/var&gt; is omitted, the overlay is created in the current buffer.</source>
          <target state="translated">This function creates and returns an overlay that belongs to &lt;var&gt;buffer&lt;/var&gt; and ranges from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; . Both &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; must specify buffer positions; they may be integers or markers. If &lt;var&gt;buffer&lt;/var&gt; is omitted, the overlay is created in the current buffer.</target>
        </trans-unit>
        <trans-unit id="8d40bb5f729f0ec136ded556de86c46dff5946e2" translate="yes" xml:space="preserve">
          <source>This function decodes a character that is assigned a &lt;var&gt;code-point&lt;/var&gt; in &lt;var&gt;charset&lt;/var&gt;, to the corresponding Emacs character, and returns it. If &lt;var&gt;charset&lt;/var&gt; doesn&amp;rsquo;t contain a character of that code point, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function decodes a character that is assigned a &lt;var&gt;code-point&lt;/var&gt; in &lt;var&gt;charset&lt;/var&gt; , to the corresponding Emacs character, and returns it. If &lt;var&gt;charset&lt;/var&gt; doesn&amp;rsquo;t contain a character of that code point, the value is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="538821c2ec3b053d4531ee8be389062c0ba1c1ad" translate="yes" xml:space="preserve">
          <source>This function decodes the text from &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; as if it were being read from file &lt;var&gt;filename&lt;/var&gt; using &lt;code&gt;insert-file-contents&lt;/code&gt; using the rest of the arguments provided.</source>
          <target state="translated">This function decodes the text from &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; as if it were being read from file &lt;var&gt;filename&lt;/var&gt; using &lt;code&gt;insert-file-contents&lt;/code&gt; using the rest of the arguments provided.</target>
        </trans-unit>
        <trans-unit id="22e6d9e456b19a94f642cdfd34b0dd0f4faeda6c" translate="yes" xml:space="preserve">
          <source>This function decodes the text in &lt;var&gt;string&lt;/var&gt; according to &lt;var&gt;coding-system&lt;/var&gt;. It returns a new string containing the decoded text, except when &lt;var&gt;nocopy&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, in which case the function may return &lt;var&gt;string&lt;/var&gt; itself if the decoding operation is trivial. To make explicit decoding useful, the contents of &lt;var&gt;string&lt;/var&gt; ought to be a unibyte string with a sequence of byte values, but a multibyte string is also acceptable (assuming it contains 8-bit bytes in their multibyte form).</source>
          <target state="translated">This function decodes the text in &lt;var&gt;string&lt;/var&gt; according to &lt;var&gt;coding-system&lt;/var&gt; . It returns a new string containing the decoded text, except when &lt;var&gt;nocopy&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , in which case the function may return &lt;var&gt;string&lt;/var&gt; itself if the decoding operation is trivial. To make explicit decoding useful, the contents of &lt;var&gt;string&lt;/var&gt; ought to be a unibyte string with a sequence of byte values, but a multibyte string is also acceptable (assuming it contains 8-bit bytes in their multibyte form).</target>
        </trans-unit>
        <trans-unit id="5e83fee11d671bf11c3a87c1c0178b36066c1cdd" translate="yes" xml:space="preserve">
          <source>This function decompresses the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, using built-in zlib decompression. The region should contain data that were compressed with gzip or zlib. On success, the function replaces the contents of the region with the decompressed data. If &lt;var&gt;allow-partial&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, then on failure, the function leaves the region unchanged and returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns the number of bytes that were not decompressed and replaces the region text by whatever data was successfully decompressed. This function can be called only in unibyte buffers.</source>
          <target state="translated">This function decompresses the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; , using built-in zlib decompression. The region should contain data that were compressed with gzip or zlib. On success, the function replaces the contents of the region with the decompressed data. If &lt;var&gt;allow-partial&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, then on failure, the function leaves the region unchanged and returns &lt;code&gt;nil&lt;/code&gt; . Otherwise, it returns the number of bytes that were not decompressed and replaces the region text by whatever data was successfully decompressed. This function can be called only in unibyte buffers.</target>
        </trans-unit>
        <trans-unit id="682d948e60a50841dfdf077715c174577e9b77df" translate="yes" xml:space="preserve">
          <source>This function defines &lt;var&gt;tabname&lt;/var&gt; (a symbol) as an abbrev table name, i.e., as a variable whose value is an abbrev table. It defines abbrevs in the table according to &lt;var&gt;definitions&lt;/var&gt;, a list of elements of the form &lt;code&gt;(&lt;var&gt;abbrevname&lt;/var&gt; &lt;var&gt;expansion&lt;/var&gt;
[&lt;var&gt;hook&lt;/var&gt;] [&lt;var&gt;props&lt;/var&gt;...])&lt;/code&gt;. These elements are passed as arguments to &lt;code&gt;define-abbrev&lt;/code&gt;.</source>
          <target state="translated">This function defines &lt;var&gt;tabname&lt;/var&gt; (a symbol) as an abbrev table name, i.e., as a variable whose value is an abbrev table. It defines abbrevs in the table according to &lt;var&gt;definitions&lt;/var&gt; , a list of elements of the form &lt;code&gt;(&lt;var&gt;abbrevname&lt;/var&gt; &lt;var&gt;expansion&lt;/var&gt; [&lt;var&gt;hook&lt;/var&gt;] [&lt;var&gt;props&lt;/var&gt;...])&lt;/code&gt; . These elements are passed as arguments to &lt;code&gt;define-abbrev&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8be0eaa29365b707bb70a17a0d18f0da96be246" translate="yes" xml:space="preserve">
          <source>This function defines a local menu bar item named &lt;var&gt;name&lt;/var&gt; to run Imenu.</source>
          <target state="translated">This function defines a local menu bar item named &lt;var&gt;name&lt;/var&gt; to run Imenu.</target>
        </trans-unit>
        <trans-unit id="8da443b3ec364a54e2db62282432b68dbf49350e" translate="yes" xml:space="preserve">
          <source>This function defines a new category, with name &lt;var&gt;char&lt;/var&gt; and documentation &lt;var&gt;docstring&lt;/var&gt;, for the category table &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">This function defines a new category, with name &lt;var&gt;char&lt;/var&gt; and documentation &lt;var&gt;docstring&lt;/var&gt; , for the category table &lt;var&gt;table&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7ff5c0ef6eb02f7bce89525055ee8dd5aa03ef07" translate="yes" xml:space="preserve">
          <source>This function defines a new fontset according to the specification string &lt;var&gt;fontset-spec&lt;/var&gt;. The string should have this format:</source>
          <target state="translated">This function defines a new fontset according to the specification string &lt;var&gt;fontset-spec&lt;/var&gt; . The string should have this format:</target>
        </trans-unit>
        <trans-unit id="9c1e9a6ef9bd8c074dbe00860a2a41554c575090" translate="yes" xml:space="preserve">
          <source>This function defines a new hash table test, named &lt;var&gt;name&lt;/var&gt;.</source>
          <target state="translated">This function defines a new hash table test, named &lt;var&gt;name&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="39212533675a840db9d62668367e2fda931a1093" translate="yes" xml:space="preserve">
          <source>This function defines a package. &lt;var&gt;name&lt;/var&gt; is the package name, a string. &lt;var&gt;version&lt;/var&gt; is the version, as a string of a form that can be understood by the function &lt;code&gt;version-to-list&lt;/code&gt;. &lt;var&gt;docstring&lt;/var&gt; is the brief description.</source>
          <target state="translated">This function defines a package. &lt;var&gt;name&lt;/var&gt; is the package name, a string. &lt;var&gt;version&lt;/var&gt; is the version, as a string of a form that can be understood by the function &lt;code&gt;version-to-list&lt;/code&gt; . &lt;var&gt;docstring&lt;/var&gt; is the brief description.</target>
        </trans-unit>
        <trans-unit id="06963c9c5d701c102ec9b7953ff482621977e302" translate="yes" xml:space="preserve">
          <source>This function defines a set of variable settings for the connection &lt;var&gt;profile&lt;/var&gt;, which is a symbol. You can later assign the connection profile to one or more remote connections, and Emacs will apply those variable settings to all process buffers for those connections. The list in &lt;var&gt;variables&lt;/var&gt; is an alist of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;. Example:</source>
          <target state="translated">This function defines a set of variable settings for the connection &lt;var&gt;profile&lt;/var&gt; , which is a symbol. You can later assign the connection profile to one or more remote connections, and Emacs will apply those variable settings to all process buffers for those connections. The list in &lt;var&gt;variables&lt;/var&gt; is an alist of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; . Example:</target>
        </trans-unit>
        <trans-unit id="9cf7c1c189dc1e1eeefde0ce2bbaea1a5f64ea87" translate="yes" xml:space="preserve">
          <source>This function defines a set of variable settings for the named &lt;var&gt;class&lt;/var&gt;, which is a symbol. You can later assign the class to one or more directories, and Emacs will apply those variable settings to all files in those directories. The list in &lt;var&gt;variables&lt;/var&gt; can be of one of the two forms: &lt;code&gt;(&lt;var&gt;major-mode&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; or &lt;code&gt;(&lt;var&gt;directory&lt;/var&gt; . &lt;var&gt;list&lt;/var&gt;)&lt;/code&gt;. With the first form, if the file&amp;rsquo;s buffer turns on a mode that is derived from &lt;var&gt;major-mode&lt;/var&gt;, then all the variables in the associated &lt;var&gt;alist&lt;/var&gt; are applied; &lt;var&gt;alist&lt;/var&gt; should be of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;. A special value &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;major-mode&lt;/var&gt; means the settings are applicable to any mode. In &lt;var&gt;alist&lt;/var&gt;, you can use a special &lt;var&gt;name&lt;/var&gt;: &lt;code&gt;subdirs&lt;/code&gt;. If the associated value is &lt;code&gt;nil&lt;/code&gt;, the alist is only applied to files in the relevant directory, not to those in any subdirectories.</source>
          <target state="translated">This function defines a set of variable settings for the named &lt;var&gt;class&lt;/var&gt; , which is a symbol. You can later assign the class to one or more directories, and Emacs will apply those variable settings to all files in those directories. The list in &lt;var&gt;variables&lt;/var&gt; can be of one of the two forms: &lt;code&gt;(&lt;var&gt;major-mode&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; or &lt;code&gt;(&lt;var&gt;directory&lt;/var&gt; . &lt;var&gt;list&lt;/var&gt;)&lt;/code&gt; . With the first form, if the file&amp;rsquo;s buffer turns on a mode that is derived from &lt;var&gt;major-mode&lt;/var&gt; , then all the variables in the associated &lt;var&gt;alist&lt;/var&gt; are applied; &lt;var&gt;alist&lt;/var&gt; should be of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; . A special value &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;major-mode&lt;/var&gt; means the settings are applicable to any mode. In &lt;var&gt;alist&lt;/var&gt; , you can use a special &lt;var&gt;name&lt;/var&gt; : &lt;code&gt;subdirs&lt;/code&gt; . If the associated value is &lt;code&gt;nil&lt;/code&gt; , the alist is only applied to files in the relevant directory, not to those in any subdirectories.</target>
        </trans-unit>
        <trans-unit id="faec04c194731266469903b852c6341ea36345c6" translate="yes" xml:space="preserve">
          <source>This function defines an abbrev named &lt;var&gt;name&lt;/var&gt;, in &lt;var&gt;abbrev-table&lt;/var&gt;, to expand to &lt;var&gt;expansion&lt;/var&gt; and call &lt;var&gt;hook&lt;/var&gt;, with properties &lt;var&gt;props&lt;/var&gt; (see &lt;a href=&quot;abbrev-properties#Abbrev-Properties&quot;&gt;Abbrev Properties&lt;/a&gt;). The return value is &lt;var&gt;name&lt;/var&gt;. The &lt;code&gt;:system&lt;/code&gt; property in &lt;var&gt;props&lt;/var&gt; is treated specially here: if it has the value &lt;code&gt;force&lt;/code&gt;, then it will overwrite an existing definition even for a non-system abbrev of the same name.</source>
          <target state="translated">This function defines an abbrev named &lt;var&gt;name&lt;/var&gt; , in &lt;var&gt;abbrev-table&lt;/var&gt; , to expand to &lt;var&gt;expansion&lt;/var&gt; and call &lt;var&gt;hook&lt;/var&gt; , with properties &lt;var&gt;props&lt;/var&gt; (see &lt;a href=&quot;abbrev-properties#Abbrev-Properties&quot;&gt;Abbrev Properties&lt;/a&gt;). The return value is &lt;var&gt;name&lt;/var&gt; . The &lt;code&gt;:system&lt;/code&gt; property in &lt;var&gt;props&lt;/var&gt; is treated specially here: if it has the value &lt;code&gt;force&lt;/code&gt; , then it will overwrite an existing definition even for a non-system abbrev of the same name.</target>
        </trans-unit>
        <trans-unit id="b64ce113e54cf1ca7b1a7a040f03e44f54061eee" translate="yes" xml:space="preserve">
          <source>This function defines the function (or macro) named &lt;var&gt;function&lt;/var&gt; so as to load automatically from &lt;var&gt;filename&lt;/var&gt;. The string &lt;var&gt;filename&lt;/var&gt; specifies the file to load to get the real definition of &lt;var&gt;function&lt;/var&gt;.</source>
          <target state="translated">This function defines the function (or macro) named &lt;var&gt;function&lt;/var&gt; so as to load automatically from &lt;var&gt;filename&lt;/var&gt; . The string &lt;var&gt;filename&lt;/var&gt; specifies the file to load to get the real definition of &lt;var&gt;function&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="d7839509e681231a82355725be2c1f90eb16c520" translate="yes" xml:space="preserve">
          <source>This function defines the symbol &lt;var&gt;bitmap&lt;/var&gt; as a new fringe bitmap, or replaces an existing bitmap with that name.</source>
          <target state="translated">This function defines the symbol &lt;var&gt;bitmap&lt;/var&gt; as a new fringe bitmap, or replaces an existing bitmap with that name.</target>
        </trans-unit>
        <trans-unit id="ba650ae4421a05ceff8ae8ab0d4e26a17faf9f78" translate="yes" xml:space="preserve">
          <source>This function defines the symbol &lt;var&gt;name&lt;/var&gt; as a function, with definition &lt;var&gt;definition&lt;/var&gt; (which can be any valid Lisp function). Its return value is &lt;em&gt;undefined&lt;/em&gt;.</source>
          <target state="translated">This function defines the symbol &lt;var&gt;name&lt;/var&gt; as a function, with definition &lt;var&gt;definition&lt;/var&gt; (which can be any valid Lisp function). Its return value is &lt;em&gt;undefined&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="241af73e43bbbcc9ae37914bf9768b12235dbcde" translate="yes" xml:space="preserve">
          <source>This function defines the symbol &lt;var&gt;new-alias&lt;/var&gt; as a variable alias for symbol &lt;var&gt;base-variable&lt;/var&gt;. This means that retrieving the value of &lt;var&gt;new-alias&lt;/var&gt; returns the value of &lt;var&gt;base-variable&lt;/var&gt;, and changing the value of &lt;var&gt;new-alias&lt;/var&gt; changes the value of &lt;var&gt;base-variable&lt;/var&gt;. The two aliased variable names always share the same value and the same bindings.</source>
          <target state="translated">This function defines the symbol &lt;var&gt;new-alias&lt;/var&gt; as a variable alias for symbol &lt;var&gt;base-variable&lt;/var&gt; . This means that retrieving the value of &lt;var&gt;new-alias&lt;/var&gt; returns the value of &lt;var&gt;base-variable&lt;/var&gt; , and changing the value of &lt;var&gt;new-alias&lt;/var&gt; changes the value of &lt;var&gt;base-variable&lt;/var&gt; . The two aliased variable names always share the same value and the same bindings.</target>
        </trans-unit>
        <trans-unit id="867f06138cc23b947830a31d334a9f8a4863a2cc" translate="yes" xml:space="preserve">
          <source>This function delays the initialization of &lt;var&gt;symbol&lt;/var&gt; to the next Emacs start. You normally use this function by specifying it as the &lt;code&gt;:initialize&lt;/code&gt; property of a customizable variable. (The argument &lt;var&gt;value&lt;/var&gt; is unused, and is provided only for compatibility with the form Custom expects.)</source>
          <target state="translated">This function delays the initialization of &lt;var&gt;symbol&lt;/var&gt; to the next Emacs start. You normally use this function by specifying it as the &lt;code&gt;:initialize&lt;/code&gt; property of a customizable variable. (The argument &lt;var&gt;value&lt;/var&gt; is unused, and is provided only for compatibility with the form Custom expects.)</target>
        </trans-unit>
        <trans-unit id="b7c68a096f47a2935f90baf033e208a99aee57df" translate="yes" xml:space="preserve">
          <source>This function deletes &lt;var&gt;overlay&lt;/var&gt;. The overlay continues to exist as a Lisp object, and its property list is unchanged, but it ceases to be attached to the buffer it belonged to, and ceases to have any effect on display.</source>
          <target state="translated">This function deletes &lt;var&gt;overlay&lt;/var&gt; . The overlay continues to exist as a Lisp object, and its property list is unchanged, but it ceases to be attached to the buffer it belonged to, and ceases to have any effect on display.</target>
        </trans-unit>
        <trans-unit id="4aa48bc253fff0c2b56e64bed71cf2fb2c06cde1" translate="yes" xml:space="preserve">
          <source>This function deletes &lt;var&gt;symbol&lt;/var&gt; from the obarray &lt;var&gt;obarray&lt;/var&gt;. If &lt;code&gt;symbol&lt;/code&gt; is not actually in the obarray, &lt;code&gt;unintern&lt;/code&gt; does nothing. If &lt;var&gt;obarray&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the current obarray is used.</source>
          <target state="translated">This function deletes &lt;var&gt;symbol&lt;/var&gt; from the obarray &lt;var&gt;obarray&lt;/var&gt; . If &lt;code&gt;symbol&lt;/code&gt; is not actually in the obarray, &lt;code&gt;unintern&lt;/code&gt; does nothing. If &lt;var&gt;obarray&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , the current obarray is used.</target>
        </trans-unit>
        <trans-unit id="3a986330f1b1a59991f2bfe835ef34608c545971" translate="yes" xml:space="preserve">
          <source>This function deletes a process, killing it with a &lt;code&gt;SIGKILL&lt;/code&gt; signal if the process was running a program. The argument may be a process, the name of a process, a buffer, or the name of a buffer. (A buffer or buffer-name stands for the process that &lt;code&gt;get-buffer-process&lt;/code&gt; returns.) Calling &lt;code&gt;delete-process&lt;/code&gt; on a running process terminates it, updates the process status, and runs the sentinel immediately. If the process has already terminated, calling &lt;code&gt;delete-process&lt;/code&gt; has no effect on its status, or on the running of its sentinel (which will happen sooner or later).</source>
          <target state="translated">This function deletes a process, killing it with a &lt;code&gt;SIGKILL&lt;/code&gt; signal if the process was running a program. The argument may be a process, the name of a process, a buffer, or the name of a buffer. (A buffer or buffer-name stands for the process that &lt;code&gt;get-buffer-process&lt;/code&gt; returns.) Calling &lt;code&gt;delete-process&lt;/code&gt; on a running process terminates it, updates the process status, and runs the sentinel immediately. If the process has already terminated, calling &lt;code&gt;delete-process&lt;/code&gt; has no effect on its status, or on the running of its sentinel (which will happen sooner or later).</target>
        </trans-unit>
        <trans-unit id="2eded1311b490a6b75dac56d658cb61752456359" translate="yes" xml:space="preserve">
          <source>This function deletes all frames on &lt;var&gt;terminal&lt;/var&gt; and frees the resources used by it. It runs the abnormal hook &lt;code&gt;delete-terminal-functions&lt;/code&gt;, passing &lt;var&gt;terminal&lt;/var&gt; as the argument to each function.</source>
          <target state="translated">This function deletes all frames on &lt;var&gt;terminal&lt;/var&gt; and frees the resources used by it. It runs the abnormal hook &lt;code&gt;delete-terminal-functions&lt;/code&gt; , passing &lt;var&gt;terminal&lt;/var&gt; as the argument to each function.</target>
        </trans-unit>
        <trans-unit id="a25141ce20c1fc18086d2295f1fe79e74e5b6ba5" translate="yes" xml:space="preserve">
          <source>This function deletes all spaces and tabs around point. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function deletes all spaces and tabs around point. It returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b22952b5cd905759352be377eb159eda8b9cd4d8" translate="yes" xml:space="preserve">
          <source>This function deletes all windows showing &lt;var&gt;buffer-or-name&lt;/var&gt;, by calling &lt;code&gt;delete-window&lt;/code&gt; on those windows. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer, or the name of a buffer; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer. If there are no windows showing the specified buffer, this function does nothing. If the specified buffer is a minibuffer, an error is signaled.</source>
          <target state="translated">This function deletes all windows showing &lt;var&gt;buffer-or-name&lt;/var&gt; , by calling &lt;code&gt;delete-window&lt;/code&gt; on those windows. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer, or the name of a buffer; if omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to the current buffer. If there are no windows showing the specified buffer, this function does nothing. If the specified buffer is a minibuffer, an error is signaled.</target>
        </trans-unit>
        <trans-unit id="c773fe6b85da4b8a00ead383daa3374cbaa03c2c" translate="yes" xml:space="preserve">
          <source>This function deletes blank lines surrounding point. If point is on a blank line with one or more blank lines before or after it, then all but one of them are deleted. If point is on an isolated blank line, then it is deleted. If point is on a nonblank line, the command deletes all blank lines immediately following it.</source>
          <target state="translated">この関数は、点を囲む空白行を削除します。点が空白線上にあり、その前後に1本以上の空白線がある場合は、そのうちの1本を除いてすべて削除されます。点が孤立した空白行上にある場合は、その点が削除されます。点が空白でない行上にある場合、その直後の空白行をすべて削除します。</target>
        </trans-unit>
        <trans-unit id="0c6de7e4c574d8678210e2591d235f5186a413b0" translate="yes" xml:space="preserve">
          <source>This function deletes from &lt;var&gt;alist&lt;/var&gt; all the elements whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;key&lt;/var&gt;, much as if you used &lt;code&gt;delq&lt;/code&gt; to delete each such element one by one. It returns the shortened alist, and often modifies the original list structure of &lt;var&gt;alist&lt;/var&gt;. For correct results, use the return value of &lt;code&gt;assq-delete-all&lt;/code&gt; rather than looking at the saved value of &lt;var&gt;alist&lt;/var&gt;.</source>
          <target state="translated">This function deletes from &lt;var&gt;alist&lt;/var&gt; all the elements whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;key&lt;/var&gt; , much as if you used &lt;code&gt;delq&lt;/code&gt; to delete each such element one by one. It returns the shortened alist, and often modifies the original list structure of &lt;var&gt;alist&lt;/var&gt; . For correct results, use the return value of &lt;code&gt;assq-delete-all&lt;/code&gt; rather than looking at the saved value of &lt;var&gt;alist&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a6a1f28ce3b286fe40eade16534850cf2cf7af7a" translate="yes" xml:space="preserve">
          <source>This function deletes from &lt;var&gt;alist&lt;/var&gt; all the elements whose &lt;small&gt;CDR&lt;/small&gt; is &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;value&lt;/var&gt;. It returns the shortened alist, and often modifies the original list structure of &lt;var&gt;alist&lt;/var&gt;. &lt;code&gt;rassq-delete-all&lt;/code&gt; is like &lt;code&gt;assq-delete-all&lt;/code&gt; except that it compares the &lt;small&gt;CDR&lt;/small&gt; of each &lt;var&gt;alist&lt;/var&gt; association instead of the &lt;small&gt;CAR&lt;/small&gt;.</source>
          <target state="translated">This function deletes from &lt;var&gt;alist&lt;/var&gt; all the elements whose &lt;small&gt;CDR&lt;/small&gt; is &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;value&lt;/var&gt; . It returns the shortened alist, and often modifies the original list structure of &lt;var&gt;alist&lt;/var&gt; . &lt;code&gt;rassq-delete-all&lt;/code&gt; is like &lt;code&gt;assq-delete-all&lt;/code&gt; except that it compares the &lt;small&gt;CDR&lt;/small&gt; of each &lt;var&gt;alist&lt;/var&gt; association instead of the &lt;small&gt;CAR&lt;/small&gt;.</target>
        </trans-unit>
        <trans-unit id="e44dae3ab7df97403d687733d2cb6d3d1b389c5c" translate="yes" xml:space="preserve">
          <source>This function deletes specified text properties from the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">This function deletes specified text properties from the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt; . If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , it defaults to the current buffer.</target>
        </trans-unit>
        <trans-unit id="ebc7f2fa4888b95603a55882f0d1923392a23c68" translate="yes" xml:space="preserve">
          <source>This function deletes the buffer-local binding (if any) for &lt;var&gt;variable&lt;/var&gt; (a symbol) in the current buffer. As a result, the default binding of &lt;var&gt;variable&lt;/var&gt; becomes visible in this buffer. This typically results in a change in the value of &lt;var&gt;variable&lt;/var&gt;, since the default value is usually different from the buffer-local value just eliminated.</source>
          <target state="translated">This function deletes the buffer-local binding (if any) for &lt;var&gt;variable&lt;/var&gt; (a symbol) in the current buffer. As a result, the default binding of &lt;var&gt;variable&lt;/var&gt; becomes visible in this buffer. This typically results in a change in the value of &lt;var&gt;variable&lt;/var&gt; , since the default value is usually different from the buffer-local value just eliminated.</target>
        </trans-unit>
        <trans-unit id="65e05e2e60149a6f5270fd4956d1873e4211cc50" translate="yes" xml:space="preserve">
          <source>This function deletes the current buffer&amp;rsquo;s auto-save file if &lt;code&gt;delete-auto-save-files&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. It is called every time a buffer is saved.</source>
          <target state="translated">This function deletes the current buffer&amp;rsquo;s auto-save file if &lt;code&gt;delete-auto-save-files&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; . It is called every time a buffer is saved.</target>
        </trans-unit>
        <trans-unit id="0cbd0b5a1d6b380094c3b28d4488f8f67e955d2a" translate="yes" xml:space="preserve">
          <source>This function deletes the entire text of the current buffer (&lt;em&gt;not&lt;/em&gt; just the accessible portion), leaving it empty. If the buffer is read-only, it signals a &lt;code&gt;buffer-read-only&lt;/code&gt; error; if some of the text in it is read-only, it signals a &lt;code&gt;text-read-only&lt;/code&gt; error. Otherwise, it deletes the text without asking for any confirmation. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function deletes the entire text of the current buffer (&lt;em&gt;not&lt;/em&gt; just the accessible portion), leaving it empty. If the buffer is read-only, it signals a &lt;code&gt;buffer-read-only&lt;/code&gt; error; if some of the text in it is read-only, it signals a &lt;code&gt;text-read-only&lt;/code&gt; error. Otherwise, it deletes the text without asking for any confirmation. It returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e81a8ff03ef50332d3121648c49bd9e21de8cf7" translate="yes" xml:space="preserve">
          <source>This function deletes the entry at point.</source>
          <target state="translated">この関数は、ポイントのエントリを削除します。</target>
        </trans-unit>
        <trans-unit id="ec9a54be0d0e87a03f1a074dbb499071099163c7" translate="yes" xml:space="preserve">
          <source>This function deletes the frame &lt;var&gt;frame&lt;/var&gt;. The argument &lt;var&gt;frame&lt;/var&gt; must specify a live frame (see below) and defaults to the selected frame.</source>
          <target state="translated">This function deletes the frame &lt;var&gt;frame&lt;/var&gt; . The argument &lt;var&gt;frame&lt;/var&gt; must specify a live frame (see below) and defaults to the selected frame.</target>
        </trans-unit>
        <trans-unit id="98a5914369bed1abd5b9ed6cfac8426cbfd99dcc" translate="yes" xml:space="preserve">
          <source>This function deletes the text between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer, and returns a string containing the text just deleted.</source>
          <target state="translated">This function deletes the text between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer, and returns a string containing the text just deleted.</target>
        </trans-unit>
        <trans-unit id="39e960078b366831bc92f73e84820f9fb8103b09" translate="yes" xml:space="preserve">
          <source>This function deletes the text of the field specified by &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">This function deletes the text of the field specified by &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="665c8fde5fba88ca75178c1492080f5a7f76f637" translate="yes" xml:space="preserve">
          <source>This function describes the category specifications in the current category table. It inserts the descriptions in a buffer, and then displays that buffer. If &lt;var&gt;buffer-or-name&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it describes the category table of that buffer instead.</source>
          <target state="translated">This function describes the category specifications in the current category table. It inserts the descriptions in a buffer, and then displays that buffer. If &lt;var&gt;buffer-or-name&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it describes the category table of that buffer instead.</target>
        </trans-unit>
        <trans-unit id="67c3cd512cd46b7af48452e079681adccc41c42b" translate="yes" xml:space="preserve">
          <source>This function destroys the fringe bitmap identified by &lt;var&gt;bitmap&lt;/var&gt;. If &lt;var&gt;bitmap&lt;/var&gt; identifies a standard fringe bitmap, it actually restores the standard definition of that bitmap, instead of eliminating it entirely.</source>
          <target state="translated">This function destroys the fringe bitmap identified by &lt;var&gt;bitmap&lt;/var&gt; . If &lt;var&gt;bitmap&lt;/var&gt; identifies a standard fringe bitmap, it actually restores the standard definition of that bitmap, instead of eliminating it entirely.</target>
        </trans-unit>
        <trans-unit id="f56fa1db79f32a161d110ca6c081fe480399104b" translate="yes" xml:space="preserve">
          <source>This function destructively removes all &lt;code&gt;equal&lt;/code&gt; duplicates from &lt;var&gt;list&lt;/var&gt;, stores the result in &lt;var&gt;list&lt;/var&gt; and returns it. Of several &lt;code&gt;equal&lt;/code&gt; occurrences of an element in &lt;var&gt;list&lt;/var&gt;, &lt;code&gt;delete-dups&lt;/code&gt; keeps the first one.</source>
          <target state="translated">This function destructively removes all &lt;code&gt;equal&lt;/code&gt; duplicates from &lt;var&gt;list&lt;/var&gt; , stores the result in &lt;var&gt;list&lt;/var&gt; and returns it. Of several &lt;code&gt;equal&lt;/code&gt; occurrences of an element in &lt;var&gt;list&lt;/var&gt; , &lt;code&gt;delete-dups&lt;/code&gt; keeps the first one.</target>
        </trans-unit>
        <trans-unit id="406e9fff52bcecf7604ddb22d61cc6cb033ff7ed" translate="yes" xml:space="preserve">
          <source>This function destructively removes all elements &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;object&lt;/var&gt; from &lt;var&gt;list&lt;/var&gt;, and returns the resulting list. The letter &amp;lsquo;</source>
          <target state="translated">This function destructively removes all elements &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;object&lt;/var&gt; from &lt;var&gt;list&lt;/var&gt; , and returns the resulting list. The letter &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="c9013590bfc668217366c5b1ef88adbd49027ea9" translate="yes" xml:space="preserve">
          <source>This function determines the responsible VC backend of the given &lt;var&gt;file&lt;/var&gt;. For example, if</source>
          <target state="translated">This function determines the responsible VC backend of the given &lt;var&gt;file&lt;/var&gt; . For example, if</target>
        </trans-unit>
        <trans-unit id="c1d5e60ae074c5c44688b8c62392a85d416e09a4" translate="yes" xml:space="preserve">
          <source>This function determines whether any command input is currently available to be read. It returns immediately, with value &lt;code&gt;t&lt;/code&gt; if there is available input, &lt;code&gt;nil&lt;/code&gt; otherwise. On rare occasions it may return &lt;code&gt;t&lt;/code&gt; when no input is available.</source>
          <target state="translated">This function determines whether any command input is currently available to be read. It returns immediately, with value &lt;code&gt;t&lt;/code&gt; if there is available input, &lt;code&gt;nil&lt;/code&gt; otherwise. On rare occasions it may return &lt;code&gt;t&lt;/code&gt; when no input is available.</target>
        </trans-unit>
        <trans-unit id="3c1599c3b0d99eeae3cc3db565bcb11a8c1beab1" translate="yes" xml:space="preserve">
          <source>This function determines whether the text in the current buffer directly following point matches the regular expression &lt;var&gt;regexp&lt;/var&gt;. &amp;ldquo;Directly following&amp;rdquo; means precisely that: the search is &amp;ldquo;anchored&amp;rdquo; and it can succeed only starting with the first character following point. The result is &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function determines whether the text in the current buffer directly following point matches the regular expression &lt;var&gt;regexp&lt;/var&gt; . &amp;ldquo;Directly following&amp;rdquo; means precisely that: the search is &amp;ldquo;anchored&amp;rdquo; and it can succeed only starting with the first character following point. The result is &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="de88f55cf8a58f44acce372c90bff63c4365aa54" translate="yes" xml:space="preserve">
          <source>This function disables the Custom theme named &lt;var&gt;theme&lt;/var&gt;. The theme remains loaded, so that a subsequent call to &lt;code&gt;enable-theme&lt;/code&gt; will re-enable it.</source>
          <target state="translated">This function disables the Custom theme named &lt;var&gt;theme&lt;/var&gt; . The theme remains loaded, so that a subsequent call to &lt;code&gt;enable-theme&lt;/code&gt; will re-enable it.</target>
        </trans-unit>
        <trans-unit id="aea34f686d675cce544698bbb38560ec6c6c78ff" translate="yes" xml:space="preserve">
          <source>This function discards text properties, regardless of the value of &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt;.</source>
          <target state="translated">This function discards text properties, regardless of the value of &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="691cab3ec10c362d521d557c4b4e94fe09bc5916" translate="yes" xml:space="preserve">
          <source>This function discards the contents of the terminal input buffer and cancels any keyboard macro that might be in the process of definition. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function discards the contents of the terminal input buffer and cancels any keyboard macro that might be in the process of definition. It returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07b2c8a19a13e83c6fda40ebea0c658d73ee59f8" translate="yes" xml:space="preserve">
          <source>This function discards the undo list of &lt;var&gt;buffer-or-name&lt;/var&gt;, and disables further recording of undo information. As a result, it is no longer possible to undo either previous changes or any subsequent changes. If the undo list of &lt;var&gt;buffer-or-name&lt;/var&gt; is already disabled, this function has no effect.</source>
          <target state="translated">This function discards the undo list of &lt;var&gt;buffer-or-name&lt;/var&gt; , and disables further recording of undo information. As a result, it is no longer possible to undo either previous changes or any subsequent changes. If the undo list of &lt;var&gt;buffer-or-name&lt;/var&gt; is already disabled, this function has no effect.</target>
        </trans-unit>
        <trans-unit id="07ffa70365a85a8ae67acf4c96ab6dde2d5f0414" translate="yes" xml:space="preserve">
          <source>This function displays &lt;var&gt;buffer&lt;/var&gt; in a side window of the selected frame. It returns the window used for displaying &lt;var&gt;buffer&lt;/var&gt;, &lt;code&gt;nil&lt;/code&gt; if no such window can be found or created.</source>
          <target state="translated">This function displays &lt;var&gt;buffer&lt;/var&gt; in a side window of the selected frame. It returns the window used for displaying &lt;var&gt;buffer&lt;/var&gt; , &lt;code&gt;nil&lt;/code&gt; if no such window can be found or created.</target>
        </trans-unit>
        <trans-unit id="5a772aa6b8557b1f80bbdf908ae27071d6f43d3b" translate="yes" xml:space="preserve">
          <source>This function displays &lt;var&gt;completions&lt;/var&gt; to the stream in &lt;code&gt;standard-output&lt;/code&gt;, usually a buffer. (See &lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;Read and Print&lt;/a&gt;, for more information about streams.) The argument &lt;var&gt;completions&lt;/var&gt; is normally a list of completions just returned by &lt;code&gt;all-completions&lt;/code&gt;, but it does not have to be. Each element may be a symbol or a string, either of which is simply printed. It can also be a list of two strings, which is printed as if the strings were concatenated. The first of the two strings is the actual completion, the second string serves as annotation.</source>
          <target state="translated">This function displays &lt;var&gt;completions&lt;/var&gt; to the stream in &lt;code&gt;standard-output&lt;/code&gt; , usually a buffer. (See &lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;Read and Print&lt;/a&gt;, for more information about streams.) The argument &lt;var&gt;completions&lt;/var&gt; is normally a list of completions just returned by &lt;code&gt;all-completions&lt;/code&gt; , but it does not have to be. Each element may be a symbol or a string, either of which is simply printed. It can also be a list of two strings, which is printed as if the strings were concatenated. The first of the two strings is the actual completion, the second string serves as annotation.</target>
        </trans-unit>
        <trans-unit id="11450a09c728eadb159e2447a6c4fda0feeec2eb" translate="yes" xml:space="preserve">
          <source>This function displays &lt;var&gt;string&lt;/var&gt; temporarily at the end of the minibuffer text, for a few seconds, or until the next input event arrives, whichever comes first. The variable &lt;code&gt;minibuffer-message-timeout&lt;/code&gt; specifies the number of seconds to wait in the absence of input. It defaults to 2. If &lt;var&gt;args&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the actual message is obtained by passing &lt;var&gt;string&lt;/var&gt; and &lt;var&gt;args&lt;/var&gt; through &lt;code&gt;format-message&lt;/code&gt;. See &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;.</source>
          <target state="translated">This function displays &lt;var&gt;string&lt;/var&gt; temporarily at the end of the minibuffer text, for a few seconds, or until the next input event arrives, whichever comes first. The variable &lt;code&gt;minibuffer-message-timeout&lt;/code&gt; specifies the number of seconds to wait in the absence of input. It defaults to 2. If &lt;var&gt;args&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , the actual message is obtained by passing &lt;var&gt;string&lt;/var&gt; and &lt;var&gt;args&lt;/var&gt; through &lt;code&gt;format-message&lt;/code&gt; . See &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cc762f98379dbaa6209ec962aa4c0277567eb184" translate="yes" xml:space="preserve">
          <source>This function displays a description of the display table &lt;var&gt;display-table&lt;/var&gt; in a help buffer.</source>
          <target state="translated">This function displays a description of the display table &lt;var&gt;display-table&lt;/var&gt; in a help buffer.</target>
        </trans-unit>
        <trans-unit id="a33c330efcbd0f5ca0a1d003af781424d22dd17d" translate="yes" xml:space="preserve">
          <source>This function displays a message in the echo area. &lt;var&gt;format-string&lt;/var&gt; is a format string, and &lt;var&gt;arguments&lt;/var&gt; are the objects for its format specifications, like in the &lt;code&gt;format-message&lt;/code&gt; function (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;). The resulting formatted string is displayed in the echo area; if it contains &lt;code&gt;face&lt;/code&gt; text properties, it is displayed with the specified faces (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;). The string is also added to the</source>
          <target state="translated">This function displays a message in the echo area. &lt;var&gt;format-string&lt;/var&gt; is a format string, and &lt;var&gt;arguments&lt;/var&gt; are the objects for its format specifications, like in the &lt;code&gt;format-message&lt;/code&gt; function (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;). The resulting formatted string is displayed in the echo area; if it contains &lt;code&gt;face&lt;/code&gt; text properties, it is displayed with the specified faces (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;). The string is also added to the</target>
        </trans-unit>
        <trans-unit id="6b5a575622ec61ff75b5256bbb4c2f74edbbc7f9" translate="yes" xml:space="preserve">
          <source>This function displays a message like &lt;code&gt;message&lt;/code&gt;, but may display it in a dialog box instead of the echo area. If this function is called in a command that was invoked using the mouse&amp;mdash;more precisely, if &lt;code&gt;last-nonmenu-event&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;) is either &lt;code&gt;nil&lt;/code&gt; or a list&amp;mdash;then it uses a dialog box or pop-up menu to display the message. Otherwise, it uses the echo area. (This is the same criterion that &lt;code&gt;y-or-n-p&lt;/code&gt; uses to make a similar decision; see &lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;Yes-or-No Queries&lt;/a&gt;.)</source>
          <target state="translated">This function displays a message like &lt;code&gt;message&lt;/code&gt; , but may display it in a dialog box instead of the echo area. If this function is called in a command that was invoked using the mouse&amp;mdash;more precisely, if &lt;code&gt;last-nonmenu-event&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;) is either &lt;code&gt;nil&lt;/code&gt; or a list&amp;mdash;then it uses a dialog box or pop-up menu to display the message. Otherwise, it uses the echo area. (This is the same criterion that &lt;code&gt;y-or-n-p&lt;/code&gt; uses to make a similar decision; see &lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;Yes-or-No Queries&lt;/a&gt;.)</target>
        </trans-unit>
        <trans-unit id="5c931333ca4f51446cc07248ea32a3c663c7ef7c" translate="yes" xml:space="preserve">
          <source>This function displays a message like &lt;code&gt;message&lt;/code&gt;, but uses a dialog box (or a pop-up menu) whenever that is possible. If it is impossible to use a dialog box or pop-up menu, because the terminal does not support them, then &lt;code&gt;message-box&lt;/code&gt; uses the echo area, like &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">This function displays a message like &lt;code&gt;message&lt;/code&gt; , but uses a dialog box (or a pop-up menu) whenever that is possible. If it is impossible to use a dialog box or pop-up menu, because the terminal does not support them, then &lt;code&gt;message-box&lt;/code&gt; uses the echo area, like &lt;code&gt;message&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47e1a294354a03c6ac03f0b5805c17606f8fb2e9" translate="yes" xml:space="preserve">
          <source>This function displays a pop-up dialog box and returns an indication of what selection the user makes. The argument &lt;var&gt;contents&lt;/var&gt; specifies the alternatives to offer; it has this format:</source>
          <target state="translated">This function displays a pop-up dialog box and returns an indication of what selection the user makes. The argument &lt;var&gt;contents&lt;/var&gt; specifies the alternatives to offer; it has this format:</target>
        </trans-unit>
        <trans-unit id="cd031b81f6a39bd76d9562d33ff43b232c1fff02" translate="yes" xml:space="preserve">
          <source>This function displays a pop-up menu and returns an indication of what selection the user makes.</source>
          <target state="translated">ポップアップメニューを表示し、ユーザがどのような選択をしたかを返します。</target>
        </trans-unit>
        <trans-unit id="edb4f050366b00dbaab26bb985b84d86d52c62a8" translate="yes" xml:space="preserve">
          <source>This function displays an MS-Windows tray notification as specified by &lt;var&gt;params&lt;/var&gt;. MS-Windows tray notifications are displayed in a balloon from an icon in the notification area of the taskbar.</source>
          <target state="translated">This function displays an MS-Windows tray notification as specified by &lt;var&gt;params&lt;/var&gt; . MS-Windows tray notifications are displayed in a balloon from an icon in the notification area of the taskbar.</target>
        </trans-unit>
        <trans-unit id="f6430d39bef5c137459f23c3bef79e96ac9e579a" translate="yes" xml:space="preserve">
          <source>This function displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; in a new frame. It uses the function &lt;code&gt;pop-to-buffer&lt;/code&gt; internally (see below).</source>
          <target state="translated">This function displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; in a new frame. It uses the function &lt;code&gt;pop-to-buffer&lt;/code&gt; internally (see below).</target>
        </trans-unit>
        <trans-unit id="1a5d1db9eb92ae20a9d5a6708abaf5f6264b1827" translate="yes" xml:space="preserve">
          <source>This function displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; in some window other than the selected window. It uses the function &lt;code&gt;pop-to-buffer&lt;/code&gt; internally (see below).</source>
          <target state="translated">This function displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; in some window other than the selected window. It uses the function &lt;code&gt;pop-to-buffer&lt;/code&gt; internally (see below).</target>
        </trans-unit>
        <trans-unit id="0c1df81bfd14534ee9db8acc6be778b68275428c" translate="yes" xml:space="preserve">
          <source>This function displays the message &lt;var&gt;message&lt;/var&gt;, which may be either a string or a buffer. If it is shorter than the maximum height of the echo area, as defined by &lt;code&gt;max-mini-window-height&lt;/code&gt;, it is displayed in the echo area, using &lt;code&gt;message&lt;/code&gt;. Otherwise, &lt;code&gt;display-buffer&lt;/code&gt; is used to show it in a pop-up buffer.</source>
          <target state="translated">This function displays the message &lt;var&gt;message&lt;/var&gt; , which may be either a string or a buffer. If it is shorter than the maximum height of the echo area, as defined by &lt;code&gt;max-mini-window-height&lt;/code&gt; , it is displayed in the echo area, using &lt;code&gt;message&lt;/code&gt; . Otherwise, &lt;code&gt;display-buffer&lt;/code&gt; is used to show it in a pop-up buffer.</target>
        </trans-unit>
        <trans-unit id="ff36aece885413f411780f8d5fb5966616c7fe43" translate="yes" xml:space="preserve">
          <source>This function displays warning or advisory messages in various peculiar cases, unless the optional argument &lt;var&gt;nowarn&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. For example, if it needs to create a buffer, and there is no file named &lt;var&gt;filename&lt;/var&gt;, it displays the message &amp;lsquo;</source>
          <target state="translated">This function displays warning or advisory messages in various peculiar cases, unless the optional argument &lt;var&gt;nowarn&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; . For example, if it needs to create a buffer, and there is no file named &lt;var&gt;filename&lt;/var&gt; , it displays the message &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="698bf35dab732d0a22abe1ca39f2769b26a9617c" translate="yes" xml:space="preserve">
          <source>This function does not always allocate a new string. Callers are advised not rely on the result being a new string nor on it being &lt;code&gt;eq&lt;/code&gt; to an existing string.</source>
          <target state="translated">This function does not always allocate a new string. Callers are advised not rely on the result being a new string nor on it being &lt;code&gt;eq&lt;/code&gt; to an existing string.</target>
        </trans-unit>
        <trans-unit id="74b2cb7015961f5df871ed278347a83d92987bbb" translate="yes" xml:space="preserve">
          <source>This function does not bind &lt;code&gt;undo-in-progress&lt;/code&gt;.</source>
          <target state="translated">This function does not bind &lt;code&gt;undo-in-progress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc36816e826444570c444dbabb85c0fb4d5e663d" translate="yes" xml:space="preserve">
          <source>This function does not compute the hash directly from the internal representation of &lt;var&gt;object&lt;/var&gt;&amp;rsquo;s text (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;). Instead, it encodes the text using a coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;), and computes the hash from that encoded text. If &lt;var&gt;object&lt;/var&gt; is a buffer, the coding system used is the one which would be chosen by default for writing the text into a file. If &lt;var&gt;object&lt;/var&gt; is a string, the user&amp;rsquo;s preferred coding system is used (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Recognize-Coding.html#Recognize-Coding&quot;&gt;Recognize Coding&lt;/a&gt; in</source>
          <target state="translated">This function does not compute the hash directly from the internal representation of &lt;var&gt;object&lt;/var&gt; &amp;rsquo;s text (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;). Instead, it encodes the text using a coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;), and computes the hash from that encoded text. If &lt;var&gt;object&lt;/var&gt; is a buffer, the coding system used is the one which would be chosen by default for writing the text into a file. If &lt;var&gt;object&lt;/var&gt; is a string, the user&amp;rsquo;s preferred coding system is used (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Recognize-Coding.html#Recognize-Coding&quot;&gt;Recognize Coding&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="2a9b7828342a57919a718cace81dfd3faa4f5c11" translate="yes" xml:space="preserve">
          <source>This function does not convert unibyte character codes 128 through 255 to multibyte characters, not even if the current buffer is a multibyte buffer. See &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;.</source>
          <target state="translated">This function does not convert unibyte character codes 128 through 255 to multibyte characters, not even if the current buffer is a multibyte buffer. See &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e489c43f6386b63034a5480b7fcd68835882f265" translate="yes" xml:space="preserve">
          <source>This function does not delete any of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;). If &lt;var&gt;frame&lt;/var&gt; is a child frame, it deletes &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s siblings only.</source>
          <target state="translated">この関数は、任意の削除されません &lt;var&gt;frame&lt;/var&gt; （参照の子フレームを&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子フレームを&lt;/a&gt;）。場合は &lt;var&gt;frame&lt;/var&gt; 子フレームである、それは削除 &lt;var&gt;frame&lt;/var&gt; のみの兄弟を。</target>
        </trans-unit>
        <trans-unit id="2777b714f040609dc0c2323e82f37a4dd64dd46c" translate="yes" xml:space="preserve">
          <source>This function does not display the buffer in any window, so the user cannot necessarily see the buffer. But Lisp programs will now operate on it.</source>
          <target state="translated">この関数はどのウィンドウにもバッファを表示しないので、ユーザは必ずしもバッファを見ることができません。しかし、Lispプログラムはこれで動作するようになりました。</target>
        </trans-unit>
        <trans-unit id="122bef82eeec1101e5c58958caafc9ca13f4a090" translate="yes" xml:space="preserve">
          <source>This function does not do a redisplay immediately; Emacs does that as it waits for input, or when the function &lt;code&gt;redisplay&lt;/code&gt; is called.</source>
          <target state="translated">この関数はすぐには再表示しません。Emacsは、入力を待つとき、または関数 &lt;code&gt;redisplay&lt;/code&gt; が呼び出されたときにそれを行います。</target>
        </trans-unit>
        <trans-unit id="0019543845c75e764794fc65b8e8ed110bc2a16f" translate="yes" xml:space="preserve">
          <source>This function does not expand environment variables. Only &lt;code&gt;substitute-in-file-name&lt;/code&gt; does that. See &lt;a href=&quot;file-name-expansion#Definition-of-substitute_002din_002dfile_002dname&quot;&gt;Definition of substitute-in-file-name&lt;/a&gt;.</source>
          <target state="translated">この関数は環境変数を展開しません。これを行うの &lt;code&gt;substitute-in-file-name&lt;/code&gt; のみです。&lt;a href=&quot;file-name-expansion#Definition-of-substitute_002din_002dfile_002dname&quot;&gt;ファイル名の置換の定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7f807e27bf2d141816a3e1413a9ea7f32af703aa" translate="yes" xml:space="preserve">
          <source>This function does not follow symbolic links.</source>
          <target state="translated">この機能はシンボリックリンクには追従しません。</target>
        </trans-unit>
        <trans-unit id="9b080dea42c33ee8f7092da141061fd032eaa75d" translate="yes" xml:space="preserve">
          <source>This function does not move point across a field boundary (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;) unless doing so would move beyond there to a different line; therefore, if &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or 1, and point starts at a field boundary, point does not move. To ignore field boundaries, bind &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">この関数は、フィールドを超えて別の線に移動しない限り、フィールドの境界を越えてポイントを移動しません（&lt;a href=&quot;fields#Fields&quot;&gt;フィールドを&lt;/a&gt;参照）。したがって、 &lt;var&gt;count&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; または1で、ポイントがフィールド境界から始まる場合、ポイントは移動しません。フィールドの境界を無視するには、 &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; を &lt;code&gt;t&lt;/code&gt; にバインドします。</target>
        </trans-unit>
        <trans-unit id="d7727a951cc8ae3ca2bd1aee843c49be7e3a2315" translate="yes" xml:space="preserve">
          <source>This function does not move point across a field boundary (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;) unless doing so would move beyond there to a different line; therefore, if &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or 1, and point starts at a field boundary, point does not move. To ignore field boundaries, either bind &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;, or use the &lt;code&gt;forward-line&lt;/code&gt; function instead. For instance, &lt;code&gt;(forward-line 0)&lt;/code&gt; does the same thing as &lt;code&gt;(beginning-of-line)&lt;/code&gt;, except that it ignores field boundaries.</source>
          <target state="translated">この関数は、フィールドを超えて別の線に移動しない限り、フィールドの境界を越えてポイントを移動しません（&lt;a href=&quot;fields#Fields&quot;&gt;フィールドを&lt;/a&gt;参照）。したがって、 &lt;var&gt;count&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; または1で、ポイントがフィールド境界から始まる場合、ポイントは移動しません。フィールド境界を無視するには、 &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; を &lt;code&gt;t&lt;/code&gt; にバインドするか、代わりに &lt;code&gt;forward-line&lt;/code&gt; 関数を使用します。たとえば、 &lt;code&gt;(forward-line 0)&lt;/code&gt; は、フィールドの境界を無視することを除いて、 &lt;code&gt;(beginning-of-line)&lt;/code&gt; と同じことを行います。</target>
        </trans-unit>
        <trans-unit id="8a376ab76b4268d72435943b41d27e0b10156847" translate="yes" xml:space="preserve">
          <source>This function does not move point, but it does update the match data. See &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;. If you need to test for a match without modifying the match data, use &lt;code&gt;looking-at-p&lt;/code&gt;, described below.</source>
          <target state="translated">この関数はポイントを移動しませんが、一致データを更新します。&lt;a href=&quot;match-data#Match-Data&quot;&gt;一致データを&lt;/a&gt;参照してください。一致データを変更せずに一致をテストする必要がある場合は、以下で説明する &lt;code&gt;looking-at-p&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="492e68f73768afc8c23b0ad306165934009086b0" translate="yes" xml:space="preserve">
          <source>This function does not return a window whose &lt;code&gt;no-other-window&lt;/code&gt; parameter is non-&lt;code&gt;nil&lt;/code&gt; (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;). If the nearest window&amp;rsquo;s &lt;code&gt;no-other-window&lt;/code&gt; parameter is non-&lt;code&gt;nil&lt;/code&gt;, this function tries to find another window in the indicated direction whose &lt;code&gt;no-other-window&lt;/code&gt; parameter is &lt;code&gt;nil&lt;/code&gt;. If the optional argument &lt;var&gt;ignore&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, a window may be returned even if its &lt;code&gt;no-other-window&lt;/code&gt; parameter is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;no-other-window&lt;/code&gt; パラメーターが &lt;code&gt;nil&lt;/code&gt; 以外のウィンドウを返しません（&lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;ウィンドウパラメーターを&lt;/a&gt;参照）。最も近いウィンドウの &lt;code&gt;no-other-window&lt;/code&gt; パラメーターがnon - &lt;code&gt;nil&lt;/code&gt; の場合、この関数は、 &lt;code&gt;no-other-window&lt;/code&gt; パラメーターが &lt;code&gt;nil&lt;/code&gt; である、指定された方向の別のウィンドウを見つけようとします。オプションの引数ならば &lt;var&gt;ignore&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; で、ウィンドウは、その場合でも、返されることがあり &lt;code&gt;no-other-window&lt;/code&gt; パラメータが非で &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14b153f585d42cbd613426c81cb7afb6ac6fc9f7" translate="yes" xml:space="preserve">
          <source>This function does not select a window that has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;no-other-window&lt;/code&gt; window parameter (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;), provided that &lt;code&gt;ignore-window-parameters&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;ignore-window-parameters&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;no-other-window&lt;/code&gt; ウィンドウパラメーター（&lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;ウィンドウパラメーターを&lt;/a&gt;参照）を持つウィンドウを選択しません。</target>
        </trans-unit>
        <trans-unit id="16ab22a6ff098e30bc2ba92a546ad39298b42d22" translate="yes" xml:space="preserve">
          <source>This function does not try to invoke file name handlers for &lt;var&gt;program&lt;/var&gt; or for the rest of &lt;var&gt;args&lt;/var&gt;. For that reason, if &lt;var&gt;program&lt;/var&gt; or any of &lt;var&gt;args&lt;/var&gt; use the remote-file syntax (see &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Magic File Names&lt;/a&gt;), they must be converted either to file names relative to &lt;code&gt;default-directory&lt;/code&gt;, or to names that identify the files locally on the remote host, by running them through &lt;code&gt;file-local-name&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;program&lt;/var&gt; または残りの &lt;var&gt;args&lt;/var&gt; ファイル名ハンドラーを呼び出そうとしません。そのため、 &lt;var&gt;program&lt;/var&gt; または &lt;var&gt;args&lt;/var&gt; いずれかがリモートファイル構文を使用する場合（&lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;マジックファイル名を&lt;/a&gt;参照）、 &lt;code&gt;default-directory&lt;/code&gt; 相対的なファイル名、またはリモートホスト上でローカルにファイルを識別する名前に変換する必要があります。 &lt;code&gt;file-local-name&lt;/code&gt; を介してそれらを実行することによって。</target>
        </trans-unit>
        <trans-unit id="ccb0c85871c767b3bbf133b5888bcb9fc7116fe6" translate="yes" xml:space="preserve">
          <source>This function does not work for dotted lists. Trying to copy a circular list may cause an infinite loop.</source>
          <target state="translated">この関数は点線リストに対しては動作しません。循環リストをコピーしようとすると、無限ループが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="5de19385bbfee97ee2b8a413b9ec9199004e5a9d" translate="yes" xml:space="preserve">
          <source>This function does the main work of reporting progress of your operation. It displays the message of &lt;var&gt;reporter&lt;/var&gt;, followed by progress percentage determined by &lt;var&gt;value&lt;/var&gt;. If percentage is zero, or close enough according to the &lt;var&gt;min-change&lt;/var&gt; and &lt;var&gt;min-time&lt;/var&gt; arguments, then it is omitted from the output.</source>
          <target state="translated">この機能は、操作の進行状況を報告する主な作業を行います。 &lt;var&gt;reporter&lt;/var&gt; のメッセージが表示され、その後に &lt;var&gt;value&lt;/var&gt; によって決定される進行率が表示されます。パーセンテージがゼロの場合、または &lt;var&gt;min-change&lt;/var&gt; 引数と &lt;var&gt;min-time&lt;/var&gt; 引数に従って十分に近い場合、出力から省略されます。</target>
        </trans-unit>
        <trans-unit id="95ac8c545353bf4f7c39dd8911b32f26aeff643c" translate="yes" xml:space="preserve">
          <source>This function dumps the current state of Emacs into a dump file &lt;var&gt;to-file&lt;/var&gt;, using the &lt;code&gt;pdump&lt;/code&gt; method. Normally, the dump file is called</source>
          <target state="translated">この関数は、 &lt;code&gt;pdump&lt;/code&gt; メソッドを使用して、Emacsの現在の状態をダンプファイル &lt;var&gt;to-file&lt;/var&gt; にダンプします。通常、ダンプファイルは呼び出されます</target>
        </trans-unit>
        <trans-unit id="7d810f9f7459e1475a856c2b26c05e40ac1f7f72" translate="yes" xml:space="preserve">
          <source>This function dumps the current state of Emacs into an executable file &lt;var&gt;to-file&lt;/var&gt;, using the &lt;code&gt;unexec&lt;/code&gt; method. It takes symbols from &lt;var&gt;from-file&lt;/var&gt; (this is normally the executable file</source>
          <target state="translated">この関数は、 &lt;code&gt;unexec&lt;/code&gt; メソッドを使用して、Emacsの現在の状態を実行可能ファイル &lt;var&gt;to-file&lt;/var&gt; にダンプします。 &lt;var&gt;from-file&lt;/var&gt; からシンボルを取得します（これは通常、実行可能ファイルです）</target>
        </trans-unit>
        <trans-unit id="69098c698a4fecf4761cc6c48ba667da003dec45" translate="yes" xml:space="preserve">
          <source>This function eliminates all the buffer-local variable bindings of the current buffer except for variables marked as permanent and local hook functions that have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;permanent-local-hook&lt;/code&gt; property (see &lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;Setting Hooks&lt;/a&gt;). As a result, the buffer will see the default values of most variables.</source>
          <target state="translated">この関数は、非 &lt;code&gt;nil&lt;/code&gt; の &lt;code&gt;permanent-local-hook&lt;/code&gt; プロパティを持つpermanentおよびlocalフック関数としてマークされた変数を除いて、現在のバッファーのすべてのbuffer-local変数バインディングを削除します（フックの&lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;設定を&lt;/a&gt;参照）。その結果、バッファにはほとんどの変数のデフォルト値が表示されます。</target>
        </trans-unit>
        <trans-unit id="9d1ea641996f33c976c8f457eb763e024f6b703b" translate="yes" xml:space="preserve">
          <source>This function empties out the table of events for &lt;code&gt;this-command-keys&lt;/code&gt; to return. Unless &lt;var&gt;keep-record&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it also empties the records that the function &lt;code&gt;recent-keys&lt;/code&gt; (see &lt;a href=&quot;recording-input#Recording-Input&quot;&gt;Recording Input&lt;/a&gt;) will subsequently return. This is useful after reading a password, to prevent the password from echoing inadvertently as part of the next command in certain cases.</source>
          <target state="translated">この関数は、 &lt;code&gt;this-command-keys&lt;/code&gt; が返すイベントのテーブルを空にします。 &lt;var&gt;keep-record&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外でない限り、関数の &lt;code&gt;recent-keys&lt;/code&gt; （&lt;a href=&quot;recording-input#Recording-Input&quot;&gt;Recording Inputを&lt;/a&gt;参照）が後で返すレコードも空にします。これは、パスワードを読み取った後、特定の場合に次のコマンドの一部としてパスワードが誤ってエコーするのを防ぐのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="89a04adf828d457bc23c46e14c9e1e98f1ac0633" translate="yes" xml:space="preserve">
          <source>This function empties out the value cell of &lt;var&gt;symbol&lt;/var&gt;, making the variable void. It returns &lt;var&gt;symbol&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;symbol&lt;/var&gt; の値セルを空にして、変数を無効にします。 &lt;var&gt;symbol&lt;/var&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="edce160802ec529bb459f552aa6bb57e8021a9f4" translate="yes" xml:space="preserve">
          <source>This function enables the Custom theme named &lt;var&gt;theme&lt;/var&gt;. It signals an error if no such theme has been loaded.</source>
          <target state="translated">この関数は、指定されたカスタムテーマができます &lt;var&gt;theme&lt;/var&gt; 。そのようなテーマがロードされていない場合は、エラーを通知します。</target>
        </trans-unit>
        <trans-unit id="2d91d6174e887c3ecc6dc6d7120673f8299f190e" translate="yes" xml:space="preserve">
          <source>This function encodes the text in &lt;var&gt;string&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt;. It returns a new string containing the encoded text, except when &lt;var&gt;nocopy&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, in which case the function may return &lt;var&gt;string&lt;/var&gt; itself if the encoding operation is trivial. The result of encoding is a unibyte string.</source>
          <target state="translated">この関数は、コーディングシステム &lt;var&gt;coding-system&lt;/var&gt; に従ってテキストを &lt;var&gt;string&lt;/var&gt; にエンコードします。 &lt;var&gt;nocopy&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合を除いて、エンコードされたテキストを含む新しい文字列を返します。この場合、エンコード操作が簡単であれば、関数は &lt;var&gt;string&lt;/var&gt; 自体を返すことがあります。エンコードの結果はユニバイト文字列です。</target>
        </trans-unit>
        <trans-unit id="a5935028ad6787f8c34a7f7c11d0dd8a9da3360b" translate="yes" xml:space="preserve">
          <source>This function enters an association for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;table&lt;/var&gt;, with value &lt;var&gt;value&lt;/var&gt;. If &lt;var&gt;key&lt;/var&gt; already has an association in &lt;var&gt;table&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt; replaces the old associated value.</source>
          <target state="translated">この関数は、値 &lt;var&gt;value&lt;/var&gt; を使用して &lt;var&gt;table&lt;/var&gt; に &lt;var&gt;key&lt;/var&gt; 関連付けを入力します。 &lt;var&gt;key&lt;/var&gt; すでに &lt;var&gt;table&lt;/var&gt; に関連付けられている場合、 &lt;var&gt;value&lt;/var&gt; は古い関連付けられた値を置き換えます。</target>
        </trans-unit>
        <trans-unit id="0c85aa44f391c1dcfc863bf0ced2e910ac9f3056" translate="yes" xml:space="preserve">
          <source>This function enters the debugger. It switches buffers to a buffer named</source>
          <target state="translated">この関数はデバッガに入ります。バッファを</target>
        </trans-unit>
        <trans-unit id="6ef4d3d71f55ff550219a7386a661d019026f07a" translate="yes" xml:space="preserve">
          <source>This function establishes the proper major mode and buffer-local variable bindings for the current buffer. It calls &lt;code&gt;set-auto-mode&lt;/code&gt; (see below). As of Emacs 26.1, it no longer runs &lt;code&gt;hack-local-variables&lt;/code&gt;, this now being done in &lt;code&gt;run-mode-hooks&lt;/code&gt; at the initialization of major modes (see &lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Mode Hooks&lt;/a&gt;).</source>
          <target state="translated">この関数は、現在のバッファーの適切なメジャーモードとバッファーローカル変数のバインディングを確立します。 &lt;code&gt;set-auto-mode&lt;/code&gt; を呼び出します（以下を参照）。Emacs 26.1以降、 &lt;code&gt;hack-local-variables&lt;/code&gt; を実行しなくなりました。これは、メジャーモードの初期化時に &lt;code&gt;run-mode-hooks&lt;/code&gt; で実行されるようになりました（&lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Mode Hooksを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="6bd2f57fb22f17edf842ae4c294afe5ead7208e4" translate="yes" xml:space="preserve">
          <source>This function evaluates the forms in the current buffer in the region defined by the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. It reads forms from the region and calls &lt;code&gt;eval&lt;/code&gt; on them until the end of the region is reached, or until an error is signaled and not handled.</source>
          <target state="translated">この関数は、 &lt;var&gt;start&lt;/var&gt; 位置と &lt;var&gt;end&lt;/var&gt; 位置で定義された領域の現在のバッファー内のフォームを評価します。リージョンからフォームを読み取り、リージョンの終わりに到達するまで、またはエラーが通知されて処理されなくなるまで、フォームに対して &lt;code&gt;eval&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="499319ea5101c7a9547f738fe64007844a28c37c" translate="yes" xml:space="preserve">
          <source>This function exchanges two nonoverlapping portions of the buffer (if they overlap, the function signals an error). Arguments &lt;var&gt;start1&lt;/var&gt; and &lt;var&gt;end1&lt;/var&gt; specify the bounds of one portion and arguments &lt;var&gt;start2&lt;/var&gt; and &lt;var&gt;end2&lt;/var&gt; specify the bounds of the other portion.</source>
          <target state="translated">この関数は、バッファーの重複しない2つの部分を交換します（重複する場合、関数はエラーを通知します）。引数 &lt;var&gt;start1&lt;/var&gt; と &lt;var&gt;end1&lt;/var&gt; は一方の部分の境界を指定し、引数 &lt;var&gt;start2&lt;/var&gt; と &lt;var&gt;end2&lt;/var&gt; はもう一方の部分の境界を指定します。</target>
        </trans-unit>
        <trans-unit id="2253d8c65af3867f826adf966d829eb7201fa13b" translate="yes" xml:space="preserve">
          <source>This function executes &lt;var&gt;command&lt;/var&gt; (a string) as a shell command, then returns the command&amp;rsquo;s output as a string.</source>
          <target state="translated">この関数は、 &lt;var&gt;command&lt;/var&gt; （文字列）をシェルコマンドとして実行し、コマンドの出力を文字列として返します。</target>
        </trans-unit>
        <trans-unit id="2c74139eb2be1f749bdd6863f6cfdaed6857d52b" translate="yes" xml:space="preserve">
          <source>This function executes &lt;var&gt;command&lt;/var&gt;. The argument &lt;var&gt;command&lt;/var&gt; must satisfy the &lt;code&gt;commandp&lt;/code&gt; predicate; i.e., it must be an interactively callable function or a keyboard macro.</source>
          <target state="translated">この関数は &lt;var&gt;command&lt;/var&gt; 実行します。引数 &lt;var&gt;command&lt;/var&gt; は、 &lt;code&gt;commandp&lt;/code&gt; 述語を満たす必要があります。つまり、インタラクティブに呼び出し可能な関数またはキーボードマクロである必要があります。</target>
        </trans-unit>
        <trans-unit id="c6a5607e8b9c48006dbd500a0f2bc228a7e15102" translate="yes" xml:space="preserve">
          <source>This function executes &lt;var&gt;kbdmacro&lt;/var&gt; as a sequence of events. If &lt;var&gt;kbdmacro&lt;/var&gt; is a string or vector, then the events in it are executed exactly as if they had been input by the user. The sequence is &lt;em&gt;not&lt;/em&gt; expected to be a single key sequence; normally a keyboard macro definition consists of several key sequences concatenated.</source>
          <target state="translated">この関数は、一連のイベントとして &lt;var&gt;kbdmacro&lt;/var&gt; を実行します。場合 &lt;var&gt;kbdmacro&lt;/var&gt; は、文字列やベクトルである彼らは、ユーザによって入力されたかのように、それでイベントが正確に実行されます。シーケンスは単一のキーシーケンスであると&lt;em&gt;は&lt;/em&gt;想定されて&lt;em&gt;いません&lt;/em&gt;。通常、キーボードマクロ定義は、連結されたいくつかのキーシーケンスで構成されます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
