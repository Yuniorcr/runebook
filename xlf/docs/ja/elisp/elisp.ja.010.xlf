<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="86bc094886fdeba60f289e032c68c8317ae4043d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;delete&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function deletes the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; after copying it, like &lt;code&gt;delete-and-extract-region&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;delete&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数は、 &lt;code&gt;delete-and-extract-region&lt;/code&gt; のように、テキストをコピーした後、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間のテキストを削除します。</target>
        </trans-unit>
        <trans-unit id="583bbbf5f052337915c912c6916ac7ea82f20788" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;depth&lt;/var&gt; is nonzero, treat the starting position as being &lt;var&gt;depth&lt;/var&gt; parentheses deep. The scanner moves forward or backward through the buffer until the depth changes to zero &lt;var&gt;count&lt;/var&gt; times. Hence, a positive value for &lt;var&gt;depth&lt;/var&gt; has the effect of moving out &lt;var&gt;depth&lt;/var&gt; levels of parenthesis from the starting position, while a negative &lt;var&gt;depth&lt;/var&gt; has the effect of moving deeper by &lt;var&gt;-depth&lt;/var&gt; levels of parenthesis.</source>
          <target state="translated">&lt;var&gt;depth&lt;/var&gt; がゼロ以外の場合は、開始位置を &lt;var&gt;depth&lt;/var&gt; 括弧の深さとして扱います。スキャナーは、深さがゼロ &lt;var&gt;count&lt;/var&gt; 時間に変わるまで、バッファー内を前後に移動します。したがって、正の値 &lt;var&gt;depth&lt;/var&gt; 転出の効果持つ &lt;var&gt;depth&lt;/var&gt; 負ながら、開始位置からの括弧のレベルを &lt;var&gt;depth&lt;/var&gt; により深く移動させる効果有し &lt;var&gt;-depth&lt;/var&gt; 括弧のレベル。</target>
        </trans-unit>
        <trans-unit id="e570710a94fca9498161ecc4ef84a4efd598a9fb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;device-name&lt;/var&gt; is a non-empty string identifying a network interface name (see &lt;code&gt;network-interface-list&lt;/code&gt;), only handle packets received on that interface. If &lt;var&gt;device-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (the default), handle packets received on any interface.</source>
          <target state="translated">&lt;var&gt;device-name&lt;/var&gt; がネットワークインターフェイス名を識別する空でない文字列である場合（ &lt;code&gt;network-interface-list&lt;/code&gt; を参照）、そのインターフェイスで受信したパケットのみを処理します。場合は &lt;var&gt;device-name&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; （デフォルト）、ハンドルのパケットは、任意のインターフェイス上で受信します。</target>
        </trans-unit>
        <trans-unit id="12f30a418a7e15703ff91629848e61377eccace2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;make-temp-file&lt;/code&gt; creates an empty directory instead of an empty file. It returns the file name, not the directory name, of that directory. See &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;var&gt;dir-flag&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; 、 &lt;code&gt;make-temp-file&lt;/code&gt; 代わりに空のファイルの空のディレクトリを作成します。そのディレクトリのディレクトリ名ではなく、ファイル名を返します。&lt;a href=&quot;directory-names#Directory-Names&quot;&gt;ディレクトリ名を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="382c60da8a13c8d050fbe0739934b6aa2ac57217" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;display-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, as it always is in interactive calls, that means to display the new buffer by calling &lt;code&gt;pop-to-buffer&lt;/code&gt;. If &lt;var&gt;norecord&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means not to put the new buffer to the front of the buffer list.</source>
          <target state="translated">場合は &lt;var&gt;display-flag&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; が、それはいつもの手段が呼び出して新しいバッファを表示すること、対話型の呼び出しであるとして、 &lt;code&gt;pop-to-buffer&lt;/code&gt; 。 &lt;var&gt;norecord&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、それは新しいバッファをバッファリストの先頭に配置しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="d1e8d3736b52fa94007796d9c1692ce665882dce" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;display&lt;/var&gt; is a list, each element should have the form &lt;code&gt;(&lt;var&gt;characteristic&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;&amp;hellip;)&lt;/code&gt;. Here &lt;var&gt;characteristic&lt;/var&gt; specifies a way of classifying terminals, and the &lt;var&gt;value&lt;/var&gt;s are possible classifications which &lt;var&gt;display&lt;/var&gt; should apply to. Here are the possible values of &lt;var&gt;characteristic&lt;/var&gt;:</source>
          <target state="translated">&lt;var&gt;display&lt;/var&gt; がリストの場合、各要素は &lt;code&gt;(&lt;var&gt;characteristic&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 形式である必要があります。ここで、 &lt;var&gt;characteristic&lt;/var&gt; は端子を分類する方法を指定し、 &lt;var&gt;value&lt;/var&gt; sは &lt;var&gt;display&lt;/var&gt; が適用される可能性のある分類です。 &lt;var&gt;characteristic&lt;/var&gt; の可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d174f427d4eaafddfb52beb9773287900f2dc3d1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;display&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;call-process&lt;/code&gt; redisplays the buffer as output is inserted. (However, if the coding system chosen for decoding output is &lt;code&gt;undecided&lt;/code&gt;, meaning deduce the encoding from the actual data, then redisplay sometimes cannot continue once non-</source>
          <target state="translated">場合 &lt;var&gt;display&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、次に &lt;code&gt;call-process&lt;/code&gt; 出力としてバッファを再表示挿入されています。（ただし、出力をデコードするために選択されたコーディングシステムが &lt;code&gt;undecided&lt;/code&gt; 場合、つまり実際のデータからエンコードを推測する場合は、再表示を続行できないことがあります。</target>
        </trans-unit>
        <trans-unit id="d4ea21d8c5c7d2d29c428ac36f3f90962e9c87ca" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;divisor&lt;/var&gt; is specified, this uses the kind of division operation that corresponds to &lt;code&gt;mod&lt;/code&gt;, rounding downward.</source>
          <target state="translated">&lt;var&gt;divisor&lt;/var&gt; が指定されている場合、これは &lt;code&gt;mod&lt;/code&gt; に対応する種類の除算演算を使用し、下に丸めます。</target>
        </trans-unit>
        <trans-unit id="bc479043ec0d2b18757e218cedb7c00e95ecd19e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;divisor&lt;/var&gt; is zero, &lt;code&gt;mod&lt;/code&gt; signals an &lt;code&gt;arith-error&lt;/code&gt; error if both arguments are integers, and returns a NaN otherwise.</source>
          <target state="translated">場合 &lt;var&gt;divisor&lt;/var&gt; ゼロである &lt;code&gt;mod&lt;/code&gt; 信号 &lt;code&gt;arith-error&lt;/code&gt; エラー両方の引数は整数であり、そうでない場合はNaNを返す場合。</target>
        </trans-unit>
        <trans-unit id="c178623deb0b8f95f251d48a76e84fefbf62e3e9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;do-all&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, or if the user option &lt;code&gt;apropos-do-all&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;apropos&lt;/code&gt; also shows key bindings for the functions that are found; it also shows &lt;em&gt;all&lt;/em&gt; interned symbols, not just meaningful ones (and it lists them in the return value as well).</source>
          <target state="translated">場合 &lt;var&gt;do-all&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; 、またはユーザーオプションの場合 &lt;code&gt;apropos-do-all&lt;/code&gt; 非で &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;apropos&lt;/code&gt; のも発見された機能のためのキーバインドを示しています。また、意味のあるシンボルだけでなく、&lt;em&gt;すべての&lt;/em&gt;インターンされたシンボルも表示されます（また、戻り値にもリストされます）。</target>
        </trans-unit>
        <trans-unit id="33ce637a0a2b19370799328e896cfce3437e0172" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;doc&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it becomes the function documentation of &lt;var&gt;name&lt;/var&gt;. Otherwise, any documentation provided by &lt;var&gt;definition&lt;/var&gt; is used.</source>
          <target state="translated">場合は &lt;var&gt;doc&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; に、それはの機能のドキュメントとなっ &lt;var&gt;name&lt;/var&gt; 。それ以外の場合は、 &lt;var&gt;definition&lt;/var&gt; によって提供されるドキュメントが使用されます。</target>
        </trans-unit>
        <trans-unit id="c4a82d22d8f8d771a79894593f0df6df2d7aee61" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dontroute-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the process can only send to hosts on the same network as the local host.</source>
          <target state="translated">場合 &lt;var&gt;dontroute-flag&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、プロセスは、ローカルホストと同じネットワーク上のホストに送信することができます。</target>
        </trans-unit>
        <trans-unit id="42ab5fc91f5dab9895db7481ee5983a4ac9c211e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;ellipsis&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string which will replace the end of &lt;var&gt;string&lt;/var&gt; (including any padding) if it extends beyond &lt;var&gt;width&lt;/var&gt;, unless the display width of &lt;var&gt;string&lt;/var&gt; is equal to or less than the display width of &lt;var&gt;ellipsis&lt;/var&gt;. If &lt;var&gt;ellipsis&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and not a string, it stands for the value of the variable &lt;code&gt;truncate-string-ellipsis&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;var&gt;ellipsis&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、それの端置換する文字列でなければならない &lt;var&gt;string&lt;/var&gt; が越えて延びている場合（パディングを含む）の &lt;var&gt;width&lt;/var&gt; の表示幅がない限り、 &lt;var&gt;string&lt;/var&gt; 等しいか、の表示幅よりも小さい &lt;var&gt;ellipsis&lt;/var&gt; 。場合は &lt;var&gt;ellipsis&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; ではなく、文字列、変数の値を示してい &lt;code&gt;truncate-string-ellipsis&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2826cdb06deaf308761e56a316ed73d9e5203aea" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;environment&lt;/var&gt; is provided, it specifies an alist of macro definitions that shadow the currently defined macros. Byte compilation uses this feature.</source>
          <target state="translated">&lt;var&gt;environment&lt;/var&gt; が提供されている場合は、現在定義されているマクロをシャドウするマクロ定義のリストを指定します。バイトコンパイルはこの機能を使用します。</target>
        </trans-unit>
        <trans-unit id="542f387e299daf7482746baebebaf49843ffc886" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;eop&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means do only left-justification if &lt;code&gt;current-justification&lt;/code&gt; specifies full justification. This is used for the last line of a paragraph; even if the paragraph as a whole is fully justified, the last line should not be.</source>
          <target state="translated">もし &lt;var&gt;eop&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; の場合の手段にのみ、正当化を残したかという、 &lt;code&gt;current-justification&lt;/code&gt; 両端揃えを指定します。これは、段落の最後の行に使用されます。段落全体が完全に正当化されている場合でも、最後の行は正当化されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="b767a472593eb9087c36efb1a2677ff134751d76" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;event&lt;/var&gt; is a click or button-down event, this returns the location of the event. If &lt;var&gt;event&lt;/var&gt; is a drag event, this returns the drag&amp;rsquo;s starting position.</source>
          <target state="translated">場合は &lt;var&gt;event&lt;/var&gt; クリックやボタンダウンイベントで、これは戻ってイベントの位置。場合は &lt;var&gt;event&lt;/var&gt; ドラッグイベントで、これは、ドラッグの開始位置を返します。</target>
        </trans-unit>
        <trans-unit id="3182d1cd085f5c5f9e4f0a7063ec64d91c4a544c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;event&lt;/var&gt; is a drag event, this returns the position where the user released the mouse button. If &lt;var&gt;event&lt;/var&gt; is a click or button-down event, the value is actually the starting position, which is the only position such events have.</source>
          <target state="translated">場合は &lt;var&gt;event&lt;/var&gt; ドラッグイベントで、これは、ユーザーがマウスボタンをリリースした位置を返します。場合は &lt;var&gt;event&lt;/var&gt; クリックやボタンダウンイベントで、値が実際にこのようなイベントが持っている唯一の位置で開始位置、です。</target>
        </trans-unit>
        <trans-unit id="3561dde7538812edf47c410dd61e2d20f114d954" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;exit-data&lt;/var&gt; is a string, its contents are stuffed into the terminal input buffer so that the shell (or whatever program next reads input) can read them.</source>
          <target state="translated">場合 &lt;var&gt;exit-data&lt;/var&gt; 文字列であるシェル（または次の入力を読み取り、どのようなプログラム）、それらを読み取ることができるように、その内容が端末入力バッファに詰め込まれています。</target>
        </trans-unit>
        <trans-unit id="05f37cadbb1d9d78268503daae0a0ec0a61c8159" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;exit-data&lt;/var&gt; is an integer, that is used as the exit status of the Emacs process. (This is useful primarily in batch operation; see &lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;Batch Mode&lt;/a&gt;.)</source>
          <target state="translated">場合 &lt;var&gt;exit-data&lt;/var&gt; Emacsプロセスの終了ステータスとして使用される整数です。（これは主にバッチ操作で役立ち&lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;ます&lt;/a&gt;。バッチモードを参照してください。）</target>
        </trans-unit>
        <trans-unit id="59385a764aea280257ae8a44bb876d196cf10076" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;exit-data&lt;/var&gt; is neither an integer nor a string, or is omitted, that means to use the (system-specific) exit status which indicates successful program termination.</source>
          <target state="translated">場合 &lt;var&gt;exit-data&lt;/var&gt; 整数でも文字列でもない、または省略され、その手段は、成功したプログラムの終了を示す（システム固有の）終了状態を使用します。</target>
        </trans-unit>
        <trans-unit id="6c659d5850809a6a575e252a2a77f0596847d686" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;face&lt;/var&gt; already has a default face spec, this macro does nothing.</source>
          <target state="translated">場合は &lt;var&gt;face&lt;/var&gt; すでにデフォルトの顔のスペックを持っている、このマクロは何もしません。</target>
        </trans-unit>
        <trans-unit id="94fed5cb65c7a9b4818db37905cdfffe7eb23fbd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;family&lt;/var&gt; is specified but not available, Emacs will try the other families given in &lt;var&gt;alternate-families&lt;/var&gt;, one by one, until it finds a family that does exist.</source>
          <target state="translated">場合は &lt;var&gt;family&lt;/var&gt; 指定されますが利用できないが、Emacsはで与えられた他の家族しようとする &lt;var&gt;alternate-families&lt;/var&gt; が存在しない家族を見つけるまで、一つずつ。</target>
        </trans-unit>
        <trans-unit id="d1a45b958c28835fb9698926a23f189506fbeaa6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;field&lt;/var&gt; is negative, sorting is by the -&lt;var&gt;field&lt;/var&gt;th field from the end of the line. This command is useful for sorting tables.</source>
          <target state="translated">&lt;var&gt;field&lt;/var&gt; が負の場合、ソートは行末から- &lt;var&gt;field&lt;/var&gt; thフィールドで行われます。このコマンドは、テーブルの並べ替えに役立ちます。</target>
        </trans-unit>
        <trans-unit id="566d542bf0d5e3db4f936d01f488aacec2657302" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file-handler&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then look for a file name handler for the current buffer&amp;rsquo;s &lt;code&gt;default-directory&lt;/code&gt;, and invoke that file name handler to make the process. If there is no such handler, proceed as if &lt;var&gt;file-handler&lt;/var&gt; were &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;var&gt;file-handler&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; の場合、現在のバッファのためにファイル名のハンドラを探し &lt;code&gt;default-directory&lt;/code&gt; 、およびプロセスを作るために、そのファイル名のハンドラを呼び出します。そのようなハンドラーがない場合は、 &lt;var&gt;file-handler&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; であるかのように続行します。</target>
        </trans-unit>
        <trans-unit id="3029954c3bea56e5ef19a69293e88d581a2b3d92" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file&lt;/var&gt; is a directory, changes for all files in that directory will be notified. This does not work recursively.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; がディレクトリの場合、そのディレクトリ内のすべてのファイルの変更が通知されます。これは再帰的には機能しません。</target>
        </trans-unit>
        <trans-unit id="2bad1c2c05300f5f775e1639c12dada6dd4ed103" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; does not contain either a directory name, or the suffix &lt;code&gt;.el&lt;/code&gt; or &lt;code&gt;.elc&lt;/code&gt;, this function insists on adding one of these suffixes, and it will not load from a file whose name is just &lt;var&gt;filename&lt;/var&gt; with no added suffix. (The variable &lt;code&gt;load-suffixes&lt;/code&gt; specifies the exact required suffixes.)</source>
          <target state="translated">場合は &lt;var&gt;filename&lt;/var&gt; ディレクトリ名、または接尾語のいずれかが含まれていない &lt;code&gt;.el&lt;/code&gt; や &lt;code&gt;.elc&lt;/code&gt; を、この機能は、これらの接尾辞の1を追加することを主張し、それは、名前だけで、ファイルからロードされない &lt;var&gt;filename&lt;/var&gt; 無添加接尾辞。（変数 &lt;code&gt;load-suffixes&lt;/code&gt; は、正確に必要なサフィックスを指定します。）</target>
        </trans-unit>
        <trans-unit id="f17ccd75236d0820b4feff180f7e0404537acbed" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; has additional names aside from &lt;var&gt;filename&lt;/var&gt;, it continues to have those names. In fact, adding the name &lt;var&gt;newname&lt;/var&gt; with &lt;code&gt;add-name-to-file&lt;/code&gt; and then deleting &lt;var&gt;filename&lt;/var&gt; has the same effect as renaming, aside from momentary intermediate states and treatment of errors, directories and symbolic links.</source>
          <target state="translated">場合は &lt;var&gt;filename&lt;/var&gt; 別に追加の名前を持つ &lt;var&gt;filename&lt;/var&gt; は、それらの名前を持ち続けています。実際、 &lt;code&gt;add-name-to-file&lt;/code&gt; を使用して名前 &lt;var&gt;newname&lt;/var&gt; を追加してからファイル &lt;var&gt;filename&lt;/var&gt; を削除すると、一時的な中間状態とエラー、ディレクトリ、およびシンボリックリンクの処理を除いて、名前の変更と同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="601974afa1a162f114a8f0d68223d4f6961c670d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or the empty string, that stands for &amp;ldquo;no visited file&amp;rdquo;. In this case, &lt;code&gt;set-visited-file-name&lt;/code&gt; marks the buffer as having no visited file, without changing the buffer&amp;rsquo;s modified flag.</source>
          <target state="translated">もし &lt;var&gt;filename&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; または「no訪問したファイル」の略で、空の文字列、。この場合、 &lt;code&gt;set-visited-file-name&lt;/code&gt; は、バッファーの変更済みフラグを変更せずに、バッファーに訪問済みファイルがないことを示します。</target>
        </trans-unit>
        <trans-unit id="7ae4783183417f463cd8a075cbb06e5ff1fa6eeb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is a directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;), &lt;code&gt;write-file&lt;/code&gt; uses the name of the visited file, in directory &lt;var&gt;filename&lt;/var&gt;. If the buffer is not visiting a file, it uses the buffer name instead.</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; がディレクトリ名の場合（&lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Namesを&lt;/a&gt;参照）、 &lt;code&gt;write-file&lt;/code&gt; は、ディレクトリ &lt;var&gt;filename&lt;/var&gt; 内のアクセスしたファイルの名前を使用します。バッファがファイルにアクセスしていない場合は、代わりにバッファ名を使用します。</target>
        </trans-unit>
        <trans-unit id="a01e16f24a067a0fb0043befb2b5119347bcb45b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is a non-empty string, this function changes the name of the file visited in the current buffer to &lt;var&gt;filename&lt;/var&gt;. (If the buffer had no visited file, this gives it one.) The &lt;em&gt;next time&lt;/em&gt; the buffer is saved it will go in the newly-specified file.</source>
          <target state="translated">場合は &lt;var&gt;filename&lt;/var&gt; 空でない文字列で、この関数は、現在のバッファで訪問したファイルの名前変更し &lt;var&gt;filename&lt;/var&gt; 。（バッファは何もファイルを訪問していた場合、これはそれを1つずつ与えない。）&lt;em&gt;次回&lt;/em&gt;のバッファは、それが新たに指定されたファイルに移動します保存されます。</target>
        </trans-unit>
        <trans-unit id="4acbb928ad7718634c30ddbc650bf49d7077a8c1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is a relative file name, such as</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; が、次のような相対ファイル名の場合</target>
        </trans-unit>
        <trans-unit id="ab7cf9a0ae4ba5c2776dd494921001dee3b006d8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is local, whether magic or not, this function does nothing and returns &lt;code&gt;nil&lt;/code&gt;. Otherwise it returns the file name of the local copy file.</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; がローカルの場合、マジックであるかどうかに関係なく、この関数は何もせず、 &lt;code&gt;nil&lt;/code&gt; を返します。それ以外の場合は、ローカルコピーファイルのファイル名を返します。</target>
        </trans-unit>
        <trans-unit id="bdcfa385b467a3758b0eaf7c8873a2a13cecce6c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fin&lt;/var&gt; is not a &lt;code&gt;NULL&lt;/code&gt; pointer, it will be called with the &lt;var&gt;ptr&lt;/var&gt; as the argument when the &lt;code&gt;user-ptr&lt;/code&gt; object is garbage-collected. Don&amp;rsquo;t run any expensive code in a finalizer, because GC must finish quickly to keep Emacs responsive.</source>
          <target state="translated">場合は &lt;var&gt;fin&lt;/var&gt; ない &lt;code&gt;NULL&lt;/code&gt; のポインタ、それはと呼ばれる &lt;var&gt;ptr&lt;/var&gt; を引数として &lt;code&gt;user-ptr&lt;/code&gt; オブジェクトがガベージコレクションです。Emacsの応答性を維持するには、GCを迅速に終了する必要があるため、ファイナライザーで高価なコードを実行しないでください。</target>
        </trans-unit>
        <trans-unit id="ff7b175c80093cc1a7c87a1db4ec4c5183f22789" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;firstonly&lt;/var&gt; is &lt;code&gt;non-ascii&lt;/code&gt;, then the value is a single vector representing the first key sequence found, rather than a list of all possible key sequences. If &lt;var&gt;firstonly&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then the value is the first key sequence, except that key sequences consisting entirely of</source>
          <target state="translated">場合 &lt;var&gt;firstonly&lt;/var&gt; がある &lt;code&gt;non-ascii&lt;/code&gt; 、その値は、最初のキー配列を表す単一のベクトルではなく、すべての可能なキー配列のリストよりも、発見しました。 &lt;var&gt;firstonly&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合、値は最初のキーシーケンスです。ただし、キーシーケンスは完全に</target>
        </trans-unit>
        <trans-unit id="a9c9a4ebd36d51532de9109ecf1ef74ffdcffcee" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fixedcase&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;replace-match&lt;/code&gt; uses the replacement text without case conversion; otherwise, it converts the replacement text depending upon the capitalization of the text to be replaced. If the original text is all upper case, this converts the replacement text to upper case. If all words of the original text are capitalized, this capitalizes all the words of the replacement text. If all the words are one-letter and they are all upper case, they are treated as capitalized words rather than all-upper-case words.</source>
          <target state="translated">場合 &lt;var&gt;fixedcase&lt;/var&gt; が非ある &lt;code&gt;nil&lt;/code&gt; 、その後 &lt;code&gt;replace-match&lt;/code&gt; ケース変換なし置換テキストを使用します。それ以外の場合は、置換するテキストの大文字に応じて置換テキストを変換します。元のテキストがすべて大文字の場合、これは置換テキストを大文字に変換します。元のテキストのすべての単語が大文字の場合、これは置換テキストのすべての単語を大文字にします。すべての単語が1文字で、すべて大文字の場合、すべて大文字の単語ではなく、大文字の単語として扱われます。</target>
        </trans-unit>
        <trans-unit id="2a40d1cb2516be8709248d56281f02652ac6d7e4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;flow&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs uses &lt;small&gt;XON/XOFF&lt;/small&gt; (</source>
          <target state="translated">場合 &lt;var&gt;flow&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; で、Emacsは使用&lt;small&gt;XON / XOFFを&lt;/small&gt;（</target>
        </trans-unit>
        <trans-unit id="635c63be0831a1ed757723114405aa6bd54fbaf8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;focus-frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, that cancels any existing redirection for &lt;var&gt;frame&lt;/var&gt;, which therefore once again receives its own events.</source>
          <target state="translated">場合 &lt;var&gt;focus-frame&lt;/var&gt; 省略されるかされた &lt;code&gt;nil&lt;/code&gt; 、つまり、の既存のリダイレクトキャンセル &lt;var&gt;frame&lt;/var&gt; 従って再び自身のイベントを受け取り、。</target>
        </trans-unit>
        <trans-unit id="8115dfd568aadd54bb88af1c3a50bd5b70843371" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;font&lt;/var&gt; is a font spec and the font spec does not specify &lt;var&gt;property&lt;/var&gt;, the return value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;font&lt;/var&gt; is a font object or font entity, the value for the &lt;var&gt;:script&lt;/var&gt; property may be a list of scripts supported by the font.</source>
          <target state="translated">場合は &lt;var&gt;font&lt;/var&gt; フォントの仕様と指定されていないフォントの仕様である &lt;var&gt;property&lt;/var&gt; 、戻り値は &lt;code&gt;nil&lt;/code&gt; 。場合は &lt;var&gt;font&lt;/var&gt; フォントオブジェクトやフォントの実体である、の値 &lt;var&gt;:script&lt;/var&gt; プロパティは、フォントでサポートされているスクリプトのリストかもしれません。</target>
        </trans-unit>
        <trans-unit id="db64fed9b323411c5eb65e89e464409b9f0d0e85" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fontname-regexp&lt;/var&gt; matches the font name that is about to be used, this says to choose a larger similar font according to the factor &lt;var&gt;scale-factor&lt;/var&gt;. You would use this feature to normalize the font size if certain fonts are bigger or smaller than their nominal heights and widths would suggest.</source>
          <target state="translated">場合は &lt;var&gt;fontname-regexp&lt;/var&gt; 使用されようとしているフォント名と一致し、これは因子に応じて、より大きな類似のフォントを選択すると言う &lt;var&gt;scale-factor&lt;/var&gt; 。特定のフォントが公称の高さと幅よりも大きいまたは小さい場合は、この機能を使用してフォントサイズを正規化します。</target>
        </trans-unit>
        <trans-unit id="e2966ac7cad9193bc97d279b647a6bfcb8f2ef3f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;for-call-interactively&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;commandp&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; only for objects that &lt;code&gt;call-interactively&lt;/code&gt; could call&amp;mdash;thus, not for keyboard macros.</source>
          <target state="translated">もし &lt;var&gt;for-call-interactively&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; の、その後、 &lt;code&gt;commandp&lt;/code&gt; を返しますが &lt;code&gt;t&lt;/code&gt; のみのオブジェクトの &lt;code&gt;call-interactively&lt;/code&gt; 呼び出す-ので可能性はなく、キーボードマクロのために。</target>
        </trans-unit>
        <trans-unit id="a3879501f40effed5dfc6a6e9c2f47f761a3fe35" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to fix the line&amp;rsquo;s indentation if that doesn&amp;rsquo;t match the left margin value.</source>
          <target state="translated">場合は &lt;var&gt;force&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; で、それはそれは左マージン値と一致しない場合の行のインデントを修正すると言います。</target>
        </trans-unit>
        <trans-unit id="afc5dde916e411b66706e2ecc6bab5d6fbd387bf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this command recompiles every &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;force&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、このコマンドは 'ごとに再コンパイルします</target>
        </trans-unit>
        <trans-unit id="e1306eaefee46fe549483b00767967f1bec09389" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;format-string&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or the empty string, &lt;code&gt;message&lt;/code&gt; clears the echo area; if the echo area has been expanded automatically, this brings it back to its normal size. If the minibuffer is active, this brings the minibuffer contents back onto the screen immediately.</source>
          <target state="translated">場合 &lt;var&gt;format-string&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; または空の文字列、 &lt;code&gt;message&lt;/code&gt; エコー領域をクリアします。エコー領域が自動的に拡張されている場合、これにより通常のサイズに戻ります。ミニバッファがアクティブな場合、これによりミニバッファの内容がすぐに画面に戻ります。</target>
        </trans-unit>
        <trans-unit id="34926853f3ae3a13c10cafcd6ea5fc9cab947853" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame-number&lt;/var&gt; is out of range, &lt;code&gt;backtrace-frame&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;frame-number&lt;/var&gt; が範囲外の場合、 &lt;code&gt;backtrace-frame&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="026b2b86d9f4214d5e7e3288181c07240948b829" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;buffer-predicate&lt;/code&gt; parameter, then &lt;code&gt;other-buffer&lt;/code&gt; uses that predicate to decide which buffers to consider. It calls the predicate once for each buffer, and if the value is &lt;code&gt;nil&lt;/code&gt;, that buffer is ignored. See &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Buffer Parameters&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;var&gt;frame&lt;/var&gt; 非がある &lt;code&gt;nil&lt;/code&gt; の &lt;code&gt;buffer-predicate&lt;/code&gt; のパラメータを、その後、 &lt;code&gt;other-buffer&lt;/code&gt; 述語を考慮したバッファを決定するという用途を。バッファごとに1回述語を呼び出し、値が &lt;code&gt;nil&lt;/code&gt; の場合、そのバッファは無視されます。&lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;バッファパラメータを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fe96a7f4fb23e15bbd04ceb9ff4687a306778bd9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has at least one side window, this command saves the state of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window in the &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s &lt;code&gt;window-state&lt;/code&gt; frame parameter and deletes all side windows on &lt;var&gt;frame&lt;/var&gt; afterwards.</source>
          <target state="translated">場合は &lt;var&gt;frame&lt;/var&gt; 少なくとも一つのサイドウィンドウを持って、このコマンドは、状態セーブ &lt;var&gt;frame&lt;/var&gt; 「でのルートウィンドウ &lt;var&gt;frame&lt;/var&gt; S」 &lt;code&gt;window-state&lt;/code&gt; フレームパラメータをして上のすべてのサイドウィンドウを削除し &lt;var&gt;frame&lt;/var&gt; 、その後。</target>
        </trans-unit>
        <trans-unit id="5f73160b9240e36ee07d2bed7f88dc75834bed9f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has no side windows, but does have a &lt;code&gt;window-state&lt;/code&gt; parameter, this command uses that parameter&amp;rsquo;s value to restore the side windows on &lt;var&gt;frame&lt;/var&gt; leaving &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s main window alone.</source>
          <target state="translated">場合は &lt;var&gt;frame&lt;/var&gt; 何のサイドウィンドウを持っていませんが、持っている &lt;code&gt;window-state&lt;/code&gt; パラメータの値は、上サイドウィンドウを復元することは、このコマンドの使用法を、パラメータを &lt;var&gt;frame&lt;/var&gt; 残し &lt;var&gt;frame&lt;/var&gt; 単体のメインウィンドウを。</target>
        </trans-unit>
        <trans-unit id="8195a57843d2cbe8d7e96776dd8503054a2428ca" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has no side windows, it returns &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window. Otherwise, it returns either an internal non-side window such that all other non-side windows on &lt;var&gt;frame&lt;/var&gt; descend from it, or the single live non-side window of &lt;var&gt;frame&lt;/var&gt;. Note that the main window of a frame cannot be deleted via &lt;code&gt;delete-window&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; にサイドウィンドウがない場合は、 &lt;var&gt;frame&lt;/var&gt; のルートウィンドウを返します。そうでなければ、それは返すのいずれかの内部非サイドウィンドウように上の他のすべての非側の窓 &lt;var&gt;frame&lt;/var&gt; それから派生し、または単一のライブ非側窓 &lt;var&gt;frame&lt;/var&gt; 。フレームのメインウィンドウは、 &lt;code&gt;delete-window&lt;/code&gt; を介して削除できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="367726c34a9b53c1f745c95df8caaf6d2fb4d85e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this function sets the default attributes for newly created frames. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function sets the attributes for all existing frames, as well as for newly created frames.</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合、この関数は新しく作成されたフレームのデフォルト属性を設定します。 &lt;var&gt;frame&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、この関数は、既存のすべてのフレームと、新しく作成されたフレームの属性を設定します。</target>
        </trans-unit>
        <trans-unit id="ca49ccfd45cbf005e0b3343c38212bce9dd98fbd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is a frame, this returns &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s local buffer list. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, the fundamental buffer list is used: the buffers appear in order of most recent display or selection, regardless of which frames they were displayed on.</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; がフレームの場合、これは &lt;var&gt;frame&lt;/var&gt; のローカルバッファリストを返します。場合は &lt;var&gt;frame&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; または省略し、基本バッファリストが使用されます。バッファは関係なく、彼らは上に表示されたフレームの、最新の表示や選択の順に表示されます。</target>
        </trans-unit>
        <trans-unit id="21526ce05c895c517d009c1e340b9297495ca30a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, that means the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;). If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this function returns the value of the specified attribute for newly-created frames (this is normally &lt;code&gt;unspecified&lt;/code&gt;, unless you have specified some value using &lt;code&gt;set-face-attribute&lt;/code&gt;; see below).</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; が省略または &lt;code&gt;nil&lt;/code&gt; の場合、それは選択されたフレームを意味します（&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;入力フォーカスを&lt;/a&gt;参照）。場合は &lt;var&gt;frame&lt;/var&gt; ある &lt;code&gt;t&lt;/code&gt; 、この関数は、（これは通常、新しく作成されたフレームの指定した属性の値を返す &lt;code&gt;unspecified&lt;/code&gt; 、あなたが使用して、いくつかの値を指定していない限り、 &lt;code&gt;set-face-attribute&lt;/code&gt; 、以下を参照します）。</target>
        </trans-unit>
        <trans-unit id="04c9f5dbdbf57056de20af216b6217e5a1008869" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is the selected frame, this makes &lt;var&gt;window&lt;/var&gt; the selected window.</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; が選択されたフレームである場合、これにより &lt;var&gt;window&lt;/var&gt; が選択されたウィンドウになります。</target>
        </trans-unit>
        <trans-unit id="b62a326d9c59337c9206f5c8cb417ff496177d7c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;from-fn&lt;/var&gt; is a function, it is called with two arguments, &lt;var&gt;begin&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, which specify the part of the buffer it should convert. It should convert the text by editing it in place. Since this can change the length of the text, &lt;var&gt;from-fn&lt;/var&gt; should return the modified end position.</source>
          <target state="translated">場合 &lt;var&gt;from-fn&lt;/var&gt; 関数であり、それは二つの引数、と呼ばれ &lt;var&gt;begin&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 、それはバッファの変換すべき部分を指定します、。その場で編集してテキストを変換する必要があります。これによりテキストの長さが変更される可能性があるため、 &lt;var&gt;from-fn&lt;/var&gt; は変更された終了位置を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="15031736989c5b527bdff961b4f960a9873281df" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;from-string&lt;/var&gt; contains upper-case letters, then &lt;code&gt;perform-replace&lt;/code&gt; binds &lt;code&gt;case-fold-search&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;, and it uses the &lt;var&gt;replacements&lt;/var&gt; without altering their case.</source>
          <target state="translated">場合 &lt;var&gt;from-string&lt;/var&gt; 大文字が含まれ、その後、 &lt;code&gt;perform-replace&lt;/code&gt; バインドの &lt;code&gt;case-fold-search&lt;/code&gt; に &lt;code&gt;nil&lt;/code&gt; に、それが使用する &lt;var&gt;replacements&lt;/var&gt; 自分のケースを変更することなく。</target>
        </trans-unit>
        <trans-unit id="b095f85199320ea0f381313e29fdf428be161d8f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt; are omitted, &lt;var&gt;var&lt;/var&gt; is bound to &lt;code&gt;nil&lt;/code&gt; before the loop begins, and the loop exits if &lt;var&gt;var&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; at the beginning of an iteration. Here is an example:</source>
          <target state="translated">場合 &lt;var&gt;from&lt;/var&gt; と &lt;var&gt;to&lt;/var&gt; 省略されている、 &lt;var&gt;var&lt;/var&gt; にバインドされている &lt;code&gt;nil&lt;/code&gt; の場合はループが始まる前に、ループを抜ける &lt;var&gt;var&lt;/var&gt; が非である &lt;code&gt;nil&lt;/code&gt; の反復の初めに。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="1749d4cb0d69ee3cfd7d906a44778e4c075c3f6e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;full-directory-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means the directory listing is expected to show the full contents of a directory. You should specify &lt;code&gt;t&lt;/code&gt; when &lt;var&gt;file&lt;/var&gt; is a directory and switches do not contain &amp;lsquo;</source>
          <target state="translated">場合は &lt;var&gt;full-directory-p&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; で、その手段は、ディレクトリリストは、ディレクトリの全内容を示すことが期待されます。 &lt;var&gt;file&lt;/var&gt; がディレクトリであり、スイッチに 'が含まれていない場合は、 &lt;code&gt;t&lt;/code&gt; を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="d66247893505a369ed4cb053e0b5c6f2f090957e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;full-name&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function returns the files&amp;rsquo; absolute file names. Otherwise, it returns the names relative to the specified directory.</source>
          <target state="translated">場合は &lt;var&gt;full-name&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; に、この関数はファイルの絶対ファイル名を返します。それ以外の場合は、指定されたディレクトリに関連する名前を返します。</target>
        </trans-unit>
        <trans-unit id="d49fa525b58a0d59a11a107ecb8b69695fb04221" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fun&lt;/var&gt; changes the window configuration by splitting or deleting windows, that does not alter the set of windows walked, which is determined prior to calling &lt;var&gt;fun&lt;/var&gt; for the first time.</source>
          <target state="translated">&lt;var&gt;fun&lt;/var&gt; がウィンドウを分割または削除することによってウィンドウ構成を変更する場合、それは、 &lt;var&gt;fun&lt;/var&gt; を初めて呼び出す前に決定される、ウォークされたウィンドウのセットを変更しません。</target>
        </trans-unit>
        <trans-unit id="3fe508d57bda90eaddaffa2325240754b59f9d43" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; already has a non-void function definition that is not an autoload object, this function does nothing and returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it constructs an autoload object (see &lt;a href=&quot;autoload-type#Autoload-Type&quot;&gt;Autoload Type&lt;/a&gt;), and stores it as the function definition for &lt;var&gt;function&lt;/var&gt;. The autoload object has this form:</source>
          <target state="translated">&lt;var&gt;function&lt;/var&gt; オートロードオブジェクトではない非void関数定義がすでにある場合、この関数は何もせず、 &lt;code&gt;nil&lt;/code&gt; を返します。それ以外の場合は、自動ロードオブジェクトを作成し（自動&lt;a href=&quot;autoload-type#Autoload-Type&quot;&gt;ロードタイプを&lt;/a&gt;参照）、関数の関数定義として保存し &lt;var&gt;function&lt;/var&gt; 。autoloadオブジェクトの形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="3518254475be6f5cca76bf3354fd0622d9edf816" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt; property &lt;code&gt;permanent-local-hook&lt;/code&gt;, then &lt;code&gt;kill-all-local-variables&lt;/code&gt; (or changing major modes) won&amp;rsquo;t delete it from the hook variable&amp;rsquo;s local value.</source>
          <target state="translated">場合 &lt;var&gt;function&lt;/var&gt; 非がある &lt;code&gt;nil&lt;/code&gt; プロパティ &lt;code&gt;permanent-local-hook&lt;/code&gt; 、そして &lt;code&gt;kill-all-local-variables&lt;/code&gt; （またはメジャーモードを変更する）フック変数のローカル値からは削除されません。</target>
        </trans-unit>
        <trans-unit id="c28743625f6ee6485550c2099ff72be5c7aec25b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is a byte-code function object, this immediately finishes loading the byte code of &lt;var&gt;function&lt;/var&gt; from its byte-compiled file, if it is not fully loaded already. Otherwise, it does nothing. It always returns &lt;var&gt;function&lt;/var&gt;.</source>
          <target state="translated">場合 &lt;var&gt;function&lt;/var&gt; 、バイトコード関数オブジェクトで、これはすぐのバイトコードのロード終了 &lt;var&gt;function&lt;/var&gt; 、それが完全にはまだロードされていない場合、そのバイトコンパイルされたファイルから。それ以外の場合は、何もしません。常に &lt;var&gt;function&lt;/var&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8c8dfe3909828e5bff9da4775e218962c70f106e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is a symbol, this function first looks for the &lt;code&gt;function-documentation&lt;/code&gt; property of that symbol; if that has a non-&lt;code&gt;nil&lt;/code&gt; value, the documentation comes from that value (if the value is not a string, it is evaluated).</source>
          <target state="translated">&lt;var&gt;function&lt;/var&gt; がシンボルの場合、この関数は最初にそのシンボルの &lt;code&gt;function-documentation&lt;/code&gt; プロパティを探します。それが非がある場合 &lt;code&gt;nil&lt;/code&gt; 値を、ドキュメントが（値は文字列でない場合、それが評価される）、その値から来ています。</target>
        </trans-unit>
        <trans-unit id="c552c00d2fb0acf113638f263536a85a69ccb679" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is already present in &lt;var&gt;hook&lt;/var&gt; (comparing using &lt;code&gt;equal&lt;/code&gt;), then &lt;code&gt;add-hook&lt;/code&gt; does not add it a second time.</source>
          <target state="translated">&lt;var&gt;function&lt;/var&gt; がすでに &lt;var&gt;hook&lt;/var&gt; 存在する場合（ &lt;code&gt;equal&lt;/code&gt; を使用して比較）、 &lt;code&gt;add-hook&lt;/code&gt; はそれを2回追加しません。</target>
        </trans-unit>
        <trans-unit id="d7df9fa48fe1587ad4057ede1a2ac2a660dbfefb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is not a symbol, or if it has no &lt;code&gt;function-documentation&lt;/code&gt; property, then &lt;code&gt;documentation&lt;/code&gt; extracts the documentation string from the actual function definition, reading it from a file if called for.</source>
          <target state="translated">場合 &lt;var&gt;function&lt;/var&gt; 、シンボルではないか、それは持っていない場合は &lt;code&gt;function-documentation&lt;/code&gt; プロパティを、そして &lt;code&gt;documentation&lt;/code&gt; ために呼び出された場合、ファイルからそれを読んで、実際の関数定義から説明文字列を抽出します。</target>
        </trans-unit>
        <trans-unit id="fcfb65a38e3f1e3c8d577272d09f4b1b738b8de8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is not interactive, then the combined function will inherit the interactive spec, if any, of the original function. Else, the combined function will be interactive and will use the interactive spec of &lt;var&gt;function&lt;/var&gt;. One exception: if the interactive spec of &lt;var&gt;function&lt;/var&gt; is a function (i.e., a &lt;code&gt;lambda&lt;/code&gt; expression or an &lt;code&gt;fbound&lt;/code&gt; symbol rather than an expression or a string), then the interactive spec of the combined function will be a call to that function with as sole argument the interactive spec of the original function. To interpret the spec received as argument, use &lt;code&gt;advice-eval-interactive-spec&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;function&lt;/var&gt; がインタラクティブでない場合、結合された関数は、元の関数のインタラクティブな仕様を継承します（存在する場合）。それ以外の場合、結合された関数はインタラクティブになり、 &lt;var&gt;function&lt;/var&gt; インタラクティブな仕様を使用します。 1つの例外： &lt;var&gt;function&lt;/var&gt; のインタラクティブな仕様が関数（つまり、式や文字列ではなく &lt;code&gt;lambda&lt;/code&gt; 式や &lt;code&gt;fbound&lt;/code&gt; シンボル）の場合、結合された関数のインタラクティブな仕様は、唯一の引数としてその関数を呼び出すことになります。元の関数のインタラクティブな仕様。受け取った仕様を引数として解釈するには、 &lt;code&gt;advice-eval-interactive-spec&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="32c4bd79d78007d309e09a0d0bec3ddb57209ca3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; was previously registered as a fontification function using &lt;code&gt;jit-lock-register&lt;/code&gt;, this function unregisters it.</source>
          <target state="translated">&lt;var&gt;function&lt;/var&gt; が以前に &lt;code&gt;jit-lock-register&lt;/code&gt; を使用してフォント化関数として登録されていた場合、この関数はそれを登録解除します。</target>
        </trans-unit>
        <trans-unit id="d031017db8498190d8da521cbc0271e5ff39cb8b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;greedy&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function extends the match backwards as far as possible, stopping when a single additional previous character cannot be part of a match for &lt;var&gt;regexp&lt;/var&gt;. When the match is extended, its starting position is allowed to occur before &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;greedy&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数は一致を可能な限り後方に拡張し、前の1文字を &lt;var&gt;regexp&lt;/var&gt; の一致に含めることができない場合に停止します。試合が延長されると、その開始位置は &lt;var&gt;limit&lt;/var&gt; 前に発生することが許可されます。</target>
        </trans-unit>
        <trans-unit id="de124be120a7804c2bc4dcb4bcdea91661a2b84c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;header&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the frame title for the box is &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;header&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、ボックスのフレームタイトルは 'です。</target>
        </trans-unit>
        <trans-unit id="7326d6e29ee45b9a104a4687a636f156545a9354" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;here&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it inserts the text in the buffer before point, and returns &lt;code&gt;nil&lt;/code&gt;. When this function is called interactively, it prints the same information in the echo area, but giving a prefix argument makes &lt;var&gt;here&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;var&gt;here&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; に、それはポイントの前に、バッファ内のテキストを挿入し、戻りは &lt;code&gt;nil&lt;/code&gt; を。この関数がインタラクティブに呼び出されると、エコー領域に同じ情報が出力されますが、プレフィックス引数を指定する &lt;var&gt;here&lt;/var&gt; 、ここでは非 &lt;code&gt;nil&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="c3486bcd8782ee56514593a504032686da70375f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;hook&lt;/var&gt; is a non-&lt;code&gt;nil&lt;/code&gt; symbol whose &lt;code&gt;no-self-insert&lt;/code&gt; property is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;hook&lt;/var&gt; can explicitly control whether to insert the self-inserting input character that triggered the expansion. If &lt;var&gt;hook&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt; in this case, that inhibits insertion of the character. By contrast, if &lt;var&gt;hook&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;expand-abbrev&lt;/code&gt; (or &lt;code&gt;abbrev-insert&lt;/code&gt;) also returns &lt;code&gt;nil&lt;/code&gt;, as if expansion had not really occurred.</source>
          <target state="translated">場合 &lt;var&gt;hook&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; そのシンボル &lt;code&gt;no-self-insert&lt;/code&gt; 性非ある &lt;code&gt;nil&lt;/code&gt; 、 &lt;var&gt;hook&lt;/var&gt; 明示的拡張を引き起こし自己挿入入力文字を挿入するかどうかを制御することができます。場合は &lt;var&gt;hook&lt;/var&gt; 非返す &lt;code&gt;nil&lt;/code&gt; をこの場合には、文字の阻害挿入います。対照的に、 &lt;var&gt;hook&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; を返す場合、 &lt;code&gt;expand-abbrev&lt;/code&gt; （または &lt;code&gt;abbrev-insert&lt;/code&gt; ）も、実際には展開が行われていないかのように &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d16533ab79378f58db6c05f66c73e9f5942168bb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;human&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the description is human-oriented. System abbrevs are listed and identified as such. Otherwise the description is a Lisp expression&amp;mdash;a call to &lt;code&gt;define-abbrev-table&lt;/code&gt; that would define &lt;var&gt;name&lt;/var&gt; as it is currently defined, but without the system abbrevs. (The mode or package using &lt;var&gt;name&lt;/var&gt; is supposed to add these to &lt;var&gt;name&lt;/var&gt; separately.)</source>
          <target state="translated">&lt;var&gt;human&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; でない場合、説明は人間指向です。システムの略語は、そのようにリストされ、識別されます。それ以外の場合、説明はLisp式です &lt;code&gt;define-abbrev-table&lt;/code&gt; 呼び出しで、現在定義されている &lt;var&gt;name&lt;/var&gt; を定義しますが、システムの略語はありません。（ &lt;var&gt;name&lt;/var&gt; を使用するモードまたはパッケージは、これらを &lt;var&gt;name&lt;/var&gt; に個別に追加することになっています。）</target>
        </trans-unit>
        <trans-unit id="4fb11bdd7919b821549c820e30bcdab23b65ddf8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;ignore-case&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, characters are converted to lower-case before comparing them.</source>
          <target state="translated">場合は &lt;var&gt;ignore-case&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; の文字は、それらを比較する前に、小文字に変換されます。</target>
        </trans-unit>
        <trans-unit id="ce81e7e8bde20e3f5a7bca91ea554bcf82c0643a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;image&lt;/var&gt; is a single image specification, Emacs draws the tool bar button in disabled state by applying an edge-detection algorithm to the image.</source>
          <target state="translated">&lt;var&gt;image&lt;/var&gt; が単一の画像仕様である場合、Emacsは画像にエッジ検出アルゴリズムを適用することにより、ツールバーボタンを無効状態で描画します。</target>
        </trans-unit>
        <trans-unit id="64d20b99c0a35bc94cf60fe36333713b6a3905c7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;include-cmds&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, complete key sequences in the result vector are interleaved with pseudo-events of the form &lt;code&gt;(nil . &lt;var&gt;COMMAND&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;COMMAND&lt;/var&gt; is the binding of the key sequence (see &lt;a href=&quot;command-overview#Command-Overview&quot;&gt;Command Overview&lt;/a&gt;).</source>
          <target state="translated">場合 &lt;var&gt;include-cmds&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、結果ベクトル内の完全なキー配列は、フォームの擬似イベントとインターリーブされる &lt;code&gt;(nil . &lt;var&gt;COMMAND&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;COMMAND&lt;/var&gt; キー配列の結合されている（参照&lt;a href=&quot;command-overview#Command-Overview&quot;&gt;コマンド概要&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0a309119a0c28d33dceec892ff301ac8dd27e404" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;inherit-input-method&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the current input method (if any) is employed to make it possible to enter a non-</source>
          <target state="translated">場合 &lt;var&gt;inherit-input-method&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、次に現在の入力方法は、（もしあれば）非を入力することを可能にするために使用されます</target>
        </trans-unit>
        <trans-unit id="5023a04034e117314618eace81f2f46d79b6c374" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;inherit&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, only attributes directly defined by &lt;var&gt;face&lt;/var&gt; are considered, so the return value may be &lt;code&gt;unspecified&lt;/code&gt;, or a relative value. If &lt;var&gt;inherit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;face&lt;/var&gt;&amp;rsquo;s definition of &lt;var&gt;attribute&lt;/var&gt; is merged with the faces specified by its &lt;code&gt;:inherit&lt;/code&gt; attribute; however the return value may still be &lt;code&gt;unspecified&lt;/code&gt; or relative. If &lt;var&gt;inherit&lt;/var&gt; is a face or a list of faces, then the result is further merged with that face (or faces), until it becomes specified and absolute.</source>
          <target state="translated">&lt;var&gt;inherit&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;var&gt;face&lt;/var&gt; によって直接定義された属性のみが考慮されるため、戻り値は &lt;code&gt;unspecified&lt;/code&gt; か、相対値である可能性があります。 &lt;var&gt;inherit&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;var&gt;face&lt;/var&gt; の &lt;var&gt;attribute&lt;/var&gt; の定義は、その &lt;code&gt;:inherit&lt;/code&gt; 属性で指定されたfaceとマージされます。ただし、戻り値は &lt;code&gt;unspecified&lt;/code&gt; または相対的である可能性があります。場合 &lt;var&gt;inherit&lt;/var&gt; 顔や顔のリストであり、それが指定され、絶対になるまで、結果はさらに、その面（または面）とマージされます。</target>
        </trans-unit>
        <trans-unit id="fc5a99940587624d5f8e88905e5e3ffbe83de8bf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;inherit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the inserted characters inherit sticky text properties from the two characters before and after the insertion point. See &lt;a href=&quot;sticky-properties#Sticky-Properties&quot;&gt;Sticky Properties&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;var&gt;inherit&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; に、挿入された文字が挿入ポイントの前と後の2つの文字から粘着性のテキストのプロパティを継承します。&lt;a href=&quot;sticky-properties#Sticky-Properties&quot;&gt;スティッキープロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bd6d2bf7276652257bfa2fcf702f1de6249212e0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;initial&lt;/var&gt; is a string, the minibuffer starts out containing the text of the string, with point at the end, when the user starts to edit the text. If the user simply types</source>
          <target state="translated">場合は &lt;var&gt;initial&lt;/var&gt; 文字列で、ミニバッファは、ユーザーが編集にテキストを開始すると、最後のポイントで、文字列のテキストを含むアウトを開始します。ユーザーが単に入力した場合</target>
        </trans-unit>
        <trans-unit id="8680d30b1fc65c2bd5d4cdd6205c1b439666973e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;interactive&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says &lt;var&gt;function&lt;/var&gt; can be called interactively. This lets completion in</source>
          <target state="translated">&lt;var&gt;interactive&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;var&gt;function&lt;/var&gt; はインタラクティブに呼び出すことができます。これにより、</target>
        </trans-unit>
        <trans-unit id="305323029dc5e36501ec002d854e6fa1bda89b72" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;iterator&lt;/var&gt; is suspended inside an &lt;code&gt;unwind-protect&lt;/code&gt;&amp;rsquo;s &lt;code&gt;bodyform&lt;/code&gt; and becomes unreachable, Emacs will eventually run unwind handlers after a garbage collection pass. (Note that &lt;code&gt;iter-yield&lt;/code&gt; is illegal inside an &lt;code&gt;unwind-protect&lt;/code&gt;&amp;rsquo;s &lt;code&gt;unwindforms&lt;/code&gt;.) To ensure that these handlers are run before then, use &lt;code&gt;iter-close&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;var&gt;iterator&lt;/var&gt; 内部で中断され &lt;code&gt;unwind-protect&lt;/code&gt; はの &lt;code&gt;bodyform&lt;/code&gt; と到達不能となり、Emacsは最終的にはガベージコレクションのパスの後にアンワインドハンドラを実行します。（ &lt;code&gt;unwind-protect&lt;/code&gt; の &lt;code&gt;unwindforms&lt;/code&gt; 内では &lt;code&gt;iter-yield&lt;/code&gt; は違法であることに注意してください。）これらのハンドラーがそれ以前に実行されるようにするには、 &lt;code&gt;iter-close&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="68adac69631bb6af71abb5acf2b791fb1a4f7a22" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;kbdmacro&lt;/var&gt; is a symbol, then its function definition is used in place of &lt;var&gt;kbdmacro&lt;/var&gt;. If that is another symbol, this process repeats. Eventually the result should be a string or vector. If the result is not a symbol, string, or vector, an error is signaled.</source>
          <target state="translated">場合 &lt;var&gt;kbdmacro&lt;/var&gt; はシンボルであり、その関数定義の代わりに使用されている &lt;var&gt;kbdmacro&lt;/var&gt; 。それが別のシンボルである場合、このプロセスが繰り返されます。最終的に、結果は文字列またはベクトルになります。結果が記号、文字列、またはベクトルでない場合は、エラーが通知されます。</target>
        </trans-unit>
        <trans-unit id="9801a6f8d4beefddfb578511212b729fa3e04a67" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keep-backup-version&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then true file version numbers understood as such by the file system are discarded from the return value, but backup version numbers are kept.</source>
          <target state="translated">場合 &lt;var&gt;keep-backup-version&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; では、ファイルシステムによってそのように理解される実際のファイルバージョン番号は戻り値から廃棄されるが、バックアップバージョン番号が保持されます。</target>
        </trans-unit>
        <trans-unit id="fd493bfae6974707467e8f4da94507ec95f258ad" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keep-mode-if-same&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function does not call the mode command if the buffer is already in the proper major mode. For instance, &lt;code&gt;set-visited-file-name&lt;/code&gt; sets this to &lt;code&gt;t&lt;/code&gt; to avoid killing buffer local variables that the user may have set.</source>
          <target state="translated">場合は &lt;var&gt;keep-mode-if-same&lt;/var&gt; 非である &lt;code&gt;nil&lt;/code&gt; のバッファが適切なメジャーモードにすでに存在する場合、この機能はモードコマンドを呼び出すことはありません。たとえば、 &lt;code&gt;set-visited-file-name&lt;/code&gt; はこれを &lt;code&gt;t&lt;/code&gt; に設定して、ユーザーが設定した可能性のあるバッファーローカル変数が強制終了されないようにします。</target>
        </trans-unit>
        <trans-unit id="2e5d6b64d5441408f2897b53ae6d730e7cd4bb9f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keepalive-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; for a stream connection, enable exchange of low-level keep-alive messages.</source>
          <target state="translated">ストリーム接続で &lt;var&gt;keepalive-flag&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; でない場合は、低レベルのキープアライブメッセージの交換を有効にします。</target>
        </trans-unit>
        <trans-unit id="d0e9336903c21276287d695af3704a99778e5015" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key-regexp&lt;/var&gt; is:</source>
          <target state="translated">&lt;var&gt;key-regexp&lt;/var&gt; が次の場合：</target>
        </trans-unit>
        <trans-unit id="a0b9b556380220ffb46b1c6fb65c0dc341cb6d60" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; contains a meta character (not a function key), that character is implicitly replaced by a two-character sequence: the value of &lt;code&gt;meta-prefix-char&lt;/code&gt;, followed by the corresponding non-meta character. Thus, the first example below is handled by conversion into the second example.</source>
          <target state="translated">&lt;var&gt;key&lt;/var&gt; にメタ文字（ファンクションキーではない）が含まれている場合、その文字は暗黙的に2文字のシーケンスに置き換えられます &lt;code&gt;meta-prefix-char&lt;/code&gt; 値の後に、対応する非メタ文字が続きます。したがって、以下の最初の例は、2番目の例への変換によって処理されます。</target>
        </trans-unit>
        <trans-unit id="38ecfb9f9e1a3501bfaf1c274b2980c7981abc98" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; is &lt;code&gt;[t]&lt;/code&gt;, this sets the default binding in &lt;var&gt;keymap&lt;/var&gt;. When an event has no binding of its own, the Emacs command loop uses the keymap&amp;rsquo;s default binding, if there is one.</source>
          <target state="translated">&lt;var&gt;key&lt;/var&gt; が &lt;code&gt;[t]&lt;/code&gt; の場合、これにより &lt;var&gt;keymap&lt;/var&gt; のデフォルトのバインディングが設定されます。イベントに独自のバインディングがない場合、Emacsコマンドループはキーマップのデフォルトのバインディングがあればそれを使用します。</target>
        </trans-unit>
        <trans-unit id="9d007ebbfe70936b9c16b4e47f3152c8a687dbe1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, the value is the complete status information for the connection, server, serial port, or pipe; that is, the list of keywords and values specified in &lt;code&gt;make-network-process&lt;/code&gt;, &lt;code&gt;make-serial-process&lt;/code&gt;, or &lt;code&gt;make-pipe-process&lt;/code&gt;, except that some of the values represent the current status instead of what you specified.</source>
          <target state="translated">場合は &lt;var&gt;key&lt;/var&gt; ある &lt;code&gt;t&lt;/code&gt; 、値は、接続、サーバー、シリアルポート、またはパイプのための完全なステータス情報です。つまり、 &lt;code&gt;make-network-process&lt;/code&gt; 、 &lt;code&gt;make-serial-process&lt;/code&gt; 、または &lt;code&gt;make-pipe-process&lt;/code&gt; で指定されたキーワードと値のリストです。ただし、一部の値は、指定したものではなく現在のステータスを表します。</target>
        </trans-unit>
        <trans-unit id="3eef88733b744d4d8ba22904057183486bf34f35" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; is a keyword, the function returns the value corresponding to that keyword.</source>
          <target state="translated">場合は &lt;var&gt;key&lt;/var&gt; キーワードで、機能はそのキーワードに対応する値を返します。</target>
        </trans-unit>
        <trans-unit id="1fe505c313fe10ccf51a3b1c4045e8bdd68ce758" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; starts with a mouse event (perhaps following a prefix event), the maps to be consulted are determined based on the event&amp;rsquo;s position. Otherwise, they are determined based on the value of point. However, you can override either of them by specifying &lt;var&gt;position&lt;/var&gt;. If &lt;var&gt;position&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be either a buffer position or an event position like the value of &lt;code&gt;event-start&lt;/code&gt;. Then the maps consulted are determined based on &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;key&lt;/var&gt; がマウスイベントで始まる場合（おそらくプレフィックスイベントの後に）、参照されるマップはイベントの位置に基づいて決定されます。それ以外の場合は、ポイントの値に基づいて決定されます。ただし、 &lt;var&gt;position&lt;/var&gt; を指定することで、どちらかをオーバーライドできます。場合 &lt;var&gt;position&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; は、バッファ位置または値のようなイベントの位置のいずれかでなければならない &lt;code&gt;event-start&lt;/code&gt; 。次に、参照されるマップが &lt;var&gt;position&lt;/var&gt; 基づいて決定されます。</target>
        </trans-unit>
        <trans-unit id="1ab7dbf10e805849d749f51d1bbad999b0122aec" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keymap&lt;/var&gt; has submaps (bindings for prefix keys), they too receive new parent keymaps that reflect what &lt;var&gt;parent&lt;/var&gt; specifies for those prefix keys.</source>
          <target state="translated">場合は &lt;var&gt;keymap&lt;/var&gt; サブマップ（プレフィックスキーのバインディングを）持っている、彼らはあまりにものを反映新しい親キーマップ受け取る &lt;var&gt;parent&lt;/var&gt; それらのプレフィックスキーの指定を。</target>
        </trans-unit>
        <trans-unit id="fccb678faab353122fa2e1f5a9ac1b9fe483270c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keymap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the maps used are the current active keymaps, disregarding &lt;code&gt;overriding-local-map&lt;/code&gt; (that is, pretending its value is &lt;code&gt;nil&lt;/code&gt;). If &lt;var&gt;keymap&lt;/var&gt; is a keymap, then the maps searched are &lt;var&gt;keymap&lt;/var&gt; and the global keymap. If &lt;var&gt;keymap&lt;/var&gt; is a list of keymaps, only those keymaps are searched.</source>
          <target state="translated">&lt;var&gt;keymap&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、使用されるマップは現在アクティブなキーマップであり、overriding &lt;code&gt;overriding-local-map&lt;/code&gt; は無視されます（つまり、その値が &lt;code&gt;nil&lt;/code&gt; であるかのように見せかけます）。 &lt;var&gt;keymap&lt;/var&gt; がキーマップの場合、検索される &lt;var&gt;keymap&lt;/var&gt; はキーマップとグローバルキーマップです。場合は &lt;var&gt;keymap&lt;/var&gt; キーマップのリストである、のみキーマップが検索されます。</target>
        </trans-unit>
        <trans-unit id="afef749f0ed8d9b7b5e44103ec3b6c41f83801a9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keymap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that keymap is the local keymap to use in the minibuffer. If &lt;var&gt;keymap&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the value of &lt;code&gt;minibuffer-local-map&lt;/code&gt; is used as the keymap. Specifying a keymap is the most important way to customize the minibuffer for various applications such as completion.</source>
          <target state="translated">&lt;var&gt;keymap&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、そのキーマップはミニバッファで使用するローカルキーマップです。場合に &lt;var&gt;keymap&lt;/var&gt; 省略されるかさ &lt;code&gt;nil&lt;/code&gt; の値 &lt;code&gt;minibuffer-local-map&lt;/code&gt; キーマップとして使用されます。キーマップの指定は、完了などのさまざまなアプリケーション用にミニバッファーをカスタマイズするための最も重要な方法です。</target>
        </trans-unit>
        <trans-unit id="f5b57269deb4b6580452d3f46f04e726e68c9f94" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;laxmatch&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it means there should be no error if there is no subexpression numbered &lt;var&gt;subexp&lt;/var&gt; in &lt;var&gt;matcher&lt;/var&gt;. Obviously, fontification of the subexpression numbered &lt;var&gt;subexp&lt;/var&gt; will not occur. However, fontification of other subexpressions (and other regexps) will continue. If &lt;var&gt;laxmatch&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and the specified subexpression is missing, then an error is signaled which terminates search-based fontification.</source>
          <target state="translated">場合 &lt;var&gt;laxmatch&lt;/var&gt; が非で &lt;code&gt;nil&lt;/code&gt; の、それは部分式の番号が存在しない場合はエラーがあってはならない意味 &lt;var&gt;subexp&lt;/var&gt; で &lt;var&gt;matcher&lt;/var&gt; 。明らかに、subexp番号が付けられた部分式の &lt;var&gt;subexp&lt;/var&gt; は行われません。ただし、他の部分式（および他の正規表現）のフォント化は続行されます。場合 &lt;var&gt;laxmatch&lt;/var&gt; がある &lt;code&gt;nil&lt;/code&gt; 、かつ指定された部分式が欠落している場合、エラーが検索ベースのフォント表示化を終了する信号が送られます。</target>
        </trans-unit>
        <trans-unit id="f2901c57b5d8694910a57307520ad3c26e7ccbbe" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;left&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and &lt;var&gt;inverse&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means that the y-pixel value returned for any line specifies the distance in pixels from the left edge of the last (leftmost) glyph of that line to the right edge (body edge if &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;) of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;left&lt;/var&gt; and &lt;var&gt;inverse&lt;/var&gt; are both non-&lt;code&gt;nil&lt;/code&gt;, the y-pixel value returned for any line specifies the distance in pixels from the left edge (body edge if &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;) of &lt;var&gt;window&lt;/var&gt; to the left edge of the last (leftmost) glyph of that line.</source>
          <target state="translated">場合 &lt;var&gt;left&lt;/var&gt; ある非 &lt;code&gt;nil&lt;/code&gt; と &lt;var&gt;inverse&lt;/var&gt; IS &lt;code&gt;nil&lt;/code&gt; 、任意の行に対して返さYピクセル値が右端（ボディエッジ場合に、その行の最後（一番左）グリフの左端からの距離（ピクセル単位）を指定していることを、この手段 &lt;var&gt;body&lt;/var&gt; は &lt;var&gt;window&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; ）です。場合 &lt;var&gt;left&lt;/var&gt; と &lt;var&gt;inverse&lt;/var&gt; 双方非ある &lt;code&gt;nil&lt;/code&gt; （IFボディエッジ、Y画素値が左端からの画素内の任意の行を指定するための距離を返した &lt;var&gt;body&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; ）の &lt;var&gt;window&lt;/var&gt; （左端）最後の左端その行のグリフ。</target>
        </trans-unit>
        <trans-unit id="be828177f3b6c4b6519507c07d4107040b780ade" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, it means to choose a new seed as if Emacs were restarting, typically from the system entropy. On systems lacking entropy pools, choose the seed from less-random volatile data such as the current time.</source>
          <target state="translated">&lt;var&gt;limit&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合、通常はシステムエントロピーから、Emacsが再起動しているかのように新しいシードを選択することを意味します。エントロピープールがないシステムでは、現在の時刻など、ランダム性の低い揮発性データからシードを選択します。</target>
        </trans-unit>
        <trans-unit id="5b68f1050fcbf8f573965d7b17ddf9c856e8812b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is a positive fixnum, the value is chosen to be nonnegative and less than &lt;var&gt;limit&lt;/var&gt;. Otherwise, the value might be any fixnum, i.e., any integer from &lt;code&gt;most-negative-fixnum&lt;/code&gt; through &lt;code&gt;most-positive-fixnum&lt;/code&gt; (see &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;Integer Basics&lt;/a&gt;).</source>
          <target state="translated">場合 &lt;var&gt;limit&lt;/var&gt; 正FIXNUMあり、値は非負とより小さくなるように選択される &lt;var&gt;limit&lt;/var&gt; 。それ以外の場合、値は任意のfixnum、つまり、 &lt;code&gt;most-negative-fixnum&lt;/code&gt; から &lt;code&gt;most-positive-fixnum&lt;/code&gt; までの任意の整数になります（&lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;整数の基本を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="417d75bb8b3a1c460180c3c7926ae36dac0d4145" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is a string, it means to choose a new seed based on the string&amp;rsquo;s contents.</source>
          <target state="translated">&lt;var&gt;limit&lt;/var&gt; が文字列の場合、文字列の内容に基づいて新しいシードを選択することを意味します。</target>
        </trans-unit>
        <trans-unit id="0492de86ea3be849e0f2da0effb3111a934e1754" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a buffer position; if the beginning of the field is before &lt;var&gt;limit&lt;/var&gt;, then &lt;var&gt;limit&lt;/var&gt; will be returned instead.</source>
          <target state="translated">&lt;var&gt;limit&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、それはバッファー位置です。フィールドの先頭が &lt;var&gt;limit&lt;/var&gt; の前にある場合、代わりに &lt;var&gt;limit&lt;/var&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="587785dff44f5e0f04e90e83cc8bb6b74173c381" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a buffer position; if the end of the field is after &lt;var&gt;limit&lt;/var&gt;, then &lt;var&gt;limit&lt;/var&gt; will be returned instead.</source>
          <target state="translated">&lt;var&gt;limit&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、それはバッファー位置です。フィールドの終わりが &lt;var&gt;limit&lt;/var&gt; の後にある場合、代わりに &lt;var&gt;limit&lt;/var&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="a89303d2068a0479a9c61c462ccd8dc0fefef1c2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it must be a position in the current buffer. It specifies the upper bound to the search. No match extending after that position is accepted. If &lt;var&gt;limit&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the end of the accessible portion of the buffer.</source>
          <target state="translated">&lt;var&gt;limit&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、現在のバッファ内の位置である必要があります。検索の上限を指定します。その位置の後に延長する一致は受け入れられません。あれば &lt;var&gt;limit&lt;/var&gt; 省略またはれる &lt;code&gt;nil&lt;/code&gt; バッファのアクセス可能な部分の端部には、デフォルト。</target>
        </trans-unit>
        <trans-unit id="355c20aed688261f90727f7234112f9681ff781f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it must be a position in the current buffer; it specifies the upper bound to the search. The match found must not extend after that position.</source>
          <target state="translated">&lt;var&gt;limit&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、現在のバッファー内の位置である必要があります。検索の上限を指定します。見つかった一致は、その位置の後に拡張してはなりません。</target>
        </trans-unit>
        <trans-unit id="9297be59454e1a754f06eef423b65713648dc0ea" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the scan ends at position &lt;var&gt;limit&lt;/var&gt;. If there is no property change before that point, &lt;code&gt;next-single-property-change&lt;/code&gt; returns &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">場合 &lt;var&gt;limit&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 位置に、次にスキャン終了 &lt;var&gt;limit&lt;/var&gt; 。その時点より前にプロパティの変更がない場合、 &lt;code&gt;next-single-property-change&lt;/code&gt; は &lt;var&gt;limit&lt;/var&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="9690710ef9da23b621d7dfa860746992d8f37deb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the scan ends at position &lt;var&gt;limit&lt;/var&gt;. If there is no property change before that point, this function returns &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">場合 &lt;var&gt;limit&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 位置に、次にスキャン終了 &lt;var&gt;limit&lt;/var&gt; 。その時点より前にプロパティの変更がない場合、この関数は &lt;var&gt;limit&lt;/var&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="76ec879549d2b357eaf032a4d1a0e5d120d2878c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is supplied (it must be a number or a marker), it specifies the maximum position in the buffer that point can be skipped to. Point will stop at or before &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;limit&lt;/var&gt; が指定されている場合（数値またはマーカーである必要があります）、ポイントをスキップできるバッファー内の最大位置を指定します。ポイントは &lt;var&gt;limit&lt;/var&gt; またはそれ以前に停止します。</target>
        </trans-unit>
        <trans-unit id="76a425c9b93feedd8259bab6b2fe5cdc7ac0c135" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;linger-arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, wait for successful transmission of all queued packets on the connection before it is deleted (see &lt;code&gt;delete-process&lt;/code&gt;). If &lt;var&gt;linger-arg&lt;/var&gt; is an integer, it specifies the maximum time in seconds to wait for queued packets to be sent before closing the connection. The default is &lt;code&gt;nil&lt;/code&gt;, which means to discard unsent queued packets when the process is deleted.</source>
          <target state="translated">&lt;var&gt;linger-arg&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、接続でキューに入れられたすべてのパケットが正常に送信されるのを待ってから削除します（ &lt;code&gt;delete-process&lt;/code&gt; を参照）。 &lt;var&gt;linger-arg&lt;/var&gt; が整数の場合、接続を閉じる前にキューに入れられたパケットが送信されるのを待つ最大時間を秒単位で指定します。デフォルトは &lt;code&gt;nil&lt;/code&gt; です。これは、プロセスが削除されたときに、未送信のキューに入れられたパケットを破棄することを意味します。</target>
        </trans-unit>
        <trans-unit id="d20324b9dfe0ad3135dd3cca84e3a639d94edf1c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;list&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt; or a cons cell, &lt;code&gt;safe-length&lt;/code&gt; returns 0.</source>
          <target state="translated">&lt;var&gt;list&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; またはconsセルでない場合、 &lt;code&gt;safe-length&lt;/code&gt; は0を返します。</target>
        </trans-unit>
        <trans-unit id="f21c3cb62cce40abd0a67cd9eafca1b0c8049e07" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;literal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;replacement&lt;/var&gt; is inserted exactly as it is, the only alterations being case changes as needed. If it is &lt;code&gt;nil&lt;/code&gt; (the default), then the character &amp;lsquo;</source>
          <target state="translated">場合 &lt;var&gt;literal&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、その後 &lt;var&gt;replacement&lt;/var&gt; 必要な唯一の変更は、ケースが変更され、それはまったく同じように挿入されています。それがある場合 &lt;code&gt;nil&lt;/code&gt; （デフォルト）の場合、文字'</target>
        </trans-unit>
        <trans-unit id="db6c136a27bb820796e874179ca984f900ddb4cc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;load&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this command loads the compiled file after compiling it. Interactively, &lt;var&gt;load&lt;/var&gt; is the prefix argument.</source>
          <target state="translated">&lt;var&gt;load&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、このコマンドはコンパイルされたファイルをコンパイル後にロードします。インタラクティブに、 &lt;var&gt;load&lt;/var&gt; はプレフィックス引数です。</target>
        </trans-unit>
        <trans-unit id="ea9440d9b5f4dd277725a72af24eaba7092d6a75" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;local&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to add &lt;var&gt;function&lt;/var&gt; to the buffer-local hook list instead of to the global hook list. This makes the hook buffer-local and adds &lt;code&gt;t&lt;/code&gt; to the buffer-local value. The latter acts as a flag to run the hook functions in the default value as well as in the local value.</source>
          <target state="translated">&lt;var&gt;local&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;var&gt;function&lt;/var&gt; をグローバルフックリストではなくバッファローカルフックリストに追加することを意味します。これにより、フックがバッファローカルになり、バッファローカル値に &lt;code&gt;t&lt;/code&gt; が追加されます。後者は、ローカル値だけでなくデフォルト値でもフック関数を実行するためのフラグとして機能します。</target>
        </trans-unit>
        <trans-unit id="a6cde464c5f6e3d1d68e588fb6c6d428cffda934" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;local&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to remove &lt;var&gt;function&lt;/var&gt; from the buffer-local hook list instead of from the global hook list.</source>
          <target state="translated">&lt;var&gt;local&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、グローバルフックリストからではなく、バッファローカルフックリストから &lt;var&gt;function&lt;/var&gt; を削除することを意味します。</target>
        </trans-unit>
        <trans-unit id="8d65aea389f65c19be6a6aafc97ff590a4cd1b41" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;loopfunc&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function that is called, without arguments, prior to each iteration of the macro. If &lt;var&gt;loopfunc&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;, then this stops execution of the macro.</source>
          <target state="translated">&lt;var&gt;loopfunc&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、マクロの各反復の前に、引数なしで呼び出される関数です。 &lt;var&gt;loopfunc&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; を返す場合、これはマクロの実行を停止します。</target>
        </trans-unit>
        <trans-unit id="5fe23c8bf6b4ebe541da711f4408c1aca504de8d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mask&lt;/var&gt; is &lt;code&gt;heuristic&lt;/code&gt; or &lt;code&gt;(heuristic &lt;var&gt;bg&lt;/var&gt;)&lt;/code&gt;, build a clipping mask for the image, so that the background of a frame is visible behind the image. If &lt;var&gt;bg&lt;/var&gt; is not specified, or if &lt;var&gt;bg&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, determine the background color of the image by looking at the four corners of the image, assuming the most frequently occurring color from the corners is the background color of the image. Otherwise, &lt;var&gt;bg&lt;/var&gt; must be a list &lt;code&gt;(&lt;var&gt;red&lt;/var&gt; &lt;var&gt;green&lt;/var&gt; &lt;var&gt;blue&lt;/var&gt;)&lt;/code&gt; specifying the color to assume for the background of the image.</source>
          <target state="translated">&lt;var&gt;mask&lt;/var&gt; が &lt;code&gt;heuristic&lt;/code&gt; または &lt;code&gt;(heuristic &lt;var&gt;bg&lt;/var&gt;)&lt;/code&gt; 場合は、画像のクリッピングマスクを作成して、フレームの背景が画像の背後に表示されるようにします。 &lt;var&gt;bg&lt;/var&gt; が指定されていない場合、または &lt;var&gt;bg&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合は、画像の四隅から最も頻繁に発生する色が画像の背景色であると想定して、画像の四隅を見て画像の背景色を決定します。それ以外の場合、 &lt;var&gt;bg&lt;/var&gt; は、画像の背景に使用する色を指定するリスト &lt;code&gt;(&lt;var&gt;red&lt;/var&gt; &lt;var&gt;green&lt;/var&gt; &lt;var&gt;blue&lt;/var&gt;)&lt;/code&gt; 必要があります。</target>
        </trans-unit>
        <trans-unit id="c2fbe70a6023303a1a1c54aca4b69ff1e60244b5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mask&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, remove a mask from the image, if it has one. Images in some formats include a mask which can be removed by specifying &lt;code&gt;:mask nil&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;mask&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、画像にマスクがある場合は、画像からマスクを削除します。一部の形式の画像には、 &lt;code&gt;:mask nil&lt;/code&gt; 指定して削除できるマスクが含まれています。</target>
        </trans-unit>
        <trans-unit id="29b3c63a62c16a62b20885f28c3a0f60d1f12ab1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;match-list&lt;/var&gt; refers to a buffer that doesn&amp;rsquo;t exist, you don&amp;rsquo;t get an error; that sets the match data in a meaningless but harmless way.</source>
          <target state="translated">&lt;var&gt;match-list&lt;/var&gt; が存在しないバッファを参照している場合、エラーは発生しません。これは、一致データを無意味ですが無害な方法で設定します。</target>
        </trans-unit>
        <trans-unit id="6b868964784012f301882061fadf2a9192150264" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;match-regexp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns only those file names that contain a match for that regular expression&amp;mdash;the other file names are excluded from the list. On case-insensitive filesystems, the regular expression matching is case-insensitive.</source>
          <target state="translated">場合 &lt;var&gt;match-regexp&lt;/var&gt; 非である &lt;code&gt;nil&lt;/code&gt; で、この関数は、リストから除外されている正規表現、他のファイル名に一致するものを含んでのみファイル名を返します。大文字と小文字を区別しないファイルシステムでは、正規表現の照合では大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="a945bf4fa1494c2e854b52dfe7655381799b677c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;message&lt;/var&gt; is a string, then the optional argument &lt;var&gt;buffer-name&lt;/var&gt; is the name of the buffer used to display it when a pop-up buffer is used, defaulting to</source>
          <target state="translated">&lt;var&gt;message&lt;/var&gt; が文字列の場合、オプションの引数 &lt;var&gt;buffer-name&lt;/var&gt; は、ポップアップバッファが使用されたときにメッセージを表示するために使用されるバッファの名前であり、デフォルトは</target>
        </trans-unit>
        <trans-unit id="760f0f6a2a1bc2d59cd6eae2a7e49da39f7cba81" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;message&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is displayed in the echo area while &lt;var&gt;string&lt;/var&gt; is displayed in the buffer. If it is &lt;code&gt;nil&lt;/code&gt;, a default message says to type &lt;var&gt;char&lt;/var&gt; to continue.</source>
          <target state="translated">&lt;var&gt;message&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、メッセージはエコー領域に表示され、 &lt;var&gt;string&lt;/var&gt; はバッファに表示されます。それがある場合 &lt;code&gt;nil&lt;/code&gt; 、デフォルトのメッセージが入力すると言う &lt;var&gt;char&lt;/var&gt; 継続します。</target>
        </trans-unit>
        <trans-unit id="ea7a25f7e7e8508103c16260b0a4d9e913d01385" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;min-value&lt;/var&gt; and &lt;var&gt;max-value&lt;/var&gt; are numbers, you can give the argument &lt;var&gt;current-value&lt;/var&gt; a numerical value specifying the initial progress; if omitted, this defaults to &lt;var&gt;min-value&lt;/var&gt;.</source>
          <target state="translated">場合は &lt;var&gt;min-value&lt;/var&gt; と &lt;var&gt;max-value&lt;/var&gt; 数値である、あなたは、引数を与えることができ &lt;var&gt;current-value&lt;/var&gt; 初期進展を指定する数値を、省略した場合、これはデフォルトで &lt;var&gt;min-value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb777f84764d51a3d01c9187dbee3b0316f62b83" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;minibuf&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, the cyclic ordering includes all minibuffer windows. If &lt;var&gt;minibuf&lt;/var&gt; is neither &lt;code&gt;t&lt;/code&gt; nor &lt;code&gt;nil&lt;/code&gt;, minibuffer windows are not included even if they are active.</source>
          <target state="translated">場合 &lt;var&gt;minibuf&lt;/var&gt; がある &lt;code&gt;t&lt;/code&gt; 、巡回順序は、すべてのミニバッファ・ウィンドウを含んでいます。 &lt;var&gt;minibuf&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; でも &lt;code&gt;nil&lt;/code&gt; でもない場合、ミニバッファウィンドウはアクティブであっても含まれません。</target>
        </trans-unit>
        <trans-unit id="76a2b331501df7f82f53a73ac549c9fe781c256d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mode&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function adds &lt;var&gt;keywords&lt;/var&gt; to &lt;code&gt;font-lock-keywords&lt;/code&gt; in the current buffer. This way of calling &lt;code&gt;font-lock-add-keywords&lt;/code&gt; is usually used in mode hook functions.</source>
          <target state="translated">&lt;var&gt;mode&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、この関数は現在のバッファーの &lt;code&gt;font-lock-keywords&lt;/code&gt; に &lt;var&gt;keywords&lt;/var&gt; を追加します。 &lt;code&gt;font-lock-add-keywords&lt;/code&gt; を呼び出すこの方法は、通常、モードフック関数で使用されます。</target>
        </trans-unit>
        <trans-unit id="358fff141b55cbcbbf4a72f5daf12d75a9590b09" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mode&lt;/var&gt; is a symbol which is a major mode command name, such as &lt;code&gt;c-mode&lt;/code&gt;, the effect is that enabling Font Lock mode in &lt;var&gt;mode&lt;/var&gt; will add &lt;var&gt;keywords&lt;/var&gt; to &lt;code&gt;font-lock-keywords&lt;/code&gt;. Calling with a non-&lt;code&gt;nil&lt;/code&gt; value of &lt;var&gt;mode&lt;/var&gt; is correct only in your</source>
          <target state="translated">&lt;var&gt;mode&lt;/var&gt; が &lt;code&gt;c-mode&lt;/code&gt; などのメジャーモードコマンド名であるシンボルである場合、その結果、modeでFont Lockモードを有効に &lt;var&gt;keywords&lt;/var&gt; と、 &lt;code&gt;font-lock-keywords&lt;/code&gt; にキーワードが追加され &lt;var&gt;mode&lt;/var&gt; 。 &lt;var&gt;mode&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 以外の値での呼び出しは、</target>
        </trans-unit>
        <trans-unit id="2554816ae984d23f35288cef825daf0cffbd1b77" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;multibyte&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, strings given to the process filter are multibyte, otherwise they are unibyte. The default is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;var&gt;multibyte&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; 、プロセスフィルタに与えられた文字列は、そうでない場合はユニバイトあり、マルチバイトです。デフォルトは &lt;code&gt;t&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9cd8ae8855810177e168ad382d0f1df3450d7ae5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;must-succeed&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, failure to open the connection terminates Emacs. Otherwise, it is an ordinary Lisp error.</source>
          <target state="translated">&lt;var&gt;must-succeed&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、接続を開かないとEmacsは終了します。それ以外の場合は、通常のLispエラーです。</target>
        </trans-unit>
        <trans-unit id="e5a85e125d6507b27a491ad49accf35437a93d01" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mustbenew&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;write-region&lt;/code&gt; asks for confirmation if &lt;var&gt;filename&lt;/var&gt; names an existing file. If &lt;var&gt;mustbenew&lt;/var&gt; is the symbol &lt;code&gt;excl&lt;/code&gt;, then &lt;code&gt;write-region&lt;/code&gt; does not ask for confirmation, but instead it signals an error &lt;code&gt;file-already-exists&lt;/code&gt; if the file already exists. Although &lt;code&gt;write-region&lt;/code&gt; normally follows a symbolic link and creates the pointed-to file if the symbolic link is dangling, it does not follow symbolic links if &lt;var&gt;mustbenew&lt;/var&gt; is &lt;code&gt;excl&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;var&gt;mustbenew&lt;/var&gt; が非で &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;write-region&lt;/code&gt; あれば確認のメッセージが表示されます &lt;var&gt;filename&lt;/var&gt; 名前を既存のファイル。場合 &lt;var&gt;mustbenew&lt;/var&gt; がシンボルである &lt;code&gt;excl&lt;/code&gt; 、その後、 &lt;code&gt;write-region&lt;/code&gt; 確認メッセージは表示されませんが、代わりにそれはエラー信号 &lt;code&gt;file-already-exists&lt;/code&gt; ファイルがすでに存在する場合。が、 &lt;code&gt;write-region&lt;/code&gt; 、通常、シンボリックリンクをたどり、シンボリックリンクがぶら下がっている場合尖った-にファイルを作成した場合、それはシンボリックリンクをたどりません &lt;var&gt;mustbenew&lt;/var&gt; がある &lt;code&gt;excl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3746e7a4b93c2f5e09997704bda110912ad41e91" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it puts point &lt;var&gt;n&lt;/var&gt; tenths of the way from the beginning of the accessible portion of the buffer. In an interactive call, &lt;var&gt;n&lt;/var&gt; is the numeric prefix argument, if provided; otherwise &lt;var&gt;n&lt;/var&gt; defaults to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、ポイント &lt;var&gt;n&lt;/var&gt; は、バッファのアクセス可能な部分の先頭から10分の1の位置に配置されます。対話型呼び出しでは、 &lt;var&gt;n&lt;/var&gt; は、提供されている場合、数値プレフィックス引数です。それ以外の場合、 &lt;var&gt;n&lt;/var&gt; はデフォルトで &lt;code&gt;nil&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="7fa5843f9731734f80c905de68bf6f57d9a02cd3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is zero, &lt;code&gt;nthcdr&lt;/code&gt; returns all of &lt;var&gt;list&lt;/var&gt;. If the length of &lt;var&gt;list&lt;/var&gt; is &lt;var&gt;n&lt;/var&gt; or less, &lt;code&gt;nthcdr&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;var&gt;n&lt;/var&gt; ゼロであり、 &lt;code&gt;nthcdr&lt;/code&gt; はすべてのリターン &lt;var&gt;list&lt;/var&gt; 。 &lt;var&gt;list&lt;/var&gt; の長さが &lt;var&gt;n&lt;/var&gt; 以下の場合、 &lt;code&gt;nthcdr&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f4b40ddbf15f1a1972220177b91db86c24e8d264" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is zero, indicating a request for the latest kill, &lt;code&gt;current-kill&lt;/code&gt; calls the value of &lt;code&gt;interprogram-paste-function&lt;/code&gt; (documented below) before consulting the kill ring. If that value is a function and calling it returns a string or a list of several strings, &lt;code&gt;current-kill&lt;/code&gt; pushes the strings onto the kill ring and returns the first string. It also sets the yanking pointer to point to the kill-ring entry of the first string returned by &lt;code&gt;interprogram-paste-function&lt;/code&gt;, regardless of the value of &lt;var&gt;do-not-move&lt;/var&gt;. Otherwise, &lt;code&gt;current-kill&lt;/code&gt; does not treat a zero value for &lt;var&gt;n&lt;/var&gt; specially: it returns the entry pointed at by the yanking pointer and does not move the yanking pointer.</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt; がゼロの場合、最新のkillの要求を示し、 &lt;code&gt;current-kill&lt;/code&gt; は、killリングを参照する前に、 &lt;code&gt;interprogram-paste-function&lt;/code&gt; （以下に説明）の値を呼び出します。その値が関数であり、それを呼び出すと文字列または複数の文字列のリストが返される場合、 &lt;code&gt;current-kill&lt;/code&gt; は文字列をキルリングにプッシュし、最初の文字列を返します。また、 &lt;var&gt;do-not-move&lt;/var&gt; の値に関係なく、interprogram &lt;code&gt;interprogram-paste-function&lt;/code&gt; によって返される最初の文字列のkill-ringエントリを指すようにヤンクポインタを設定します。それ以外の場合、 &lt;code&gt;current-kill&lt;/code&gt; は &lt;var&gt;n&lt;/var&gt; のゼロ値を処理しません 特に、ヤンクポインタが指すエントリを返し、ヤンクポインタは移動しません。</target>
        </trans-unit>
        <trans-unit id="c4a84c3df345bcac96cded9a268e2fd2a15b3b21" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function modifies the fontset of the selected frame or that of &lt;var&gt;frame&lt;/var&gt; if &lt;var&gt;frame&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、この関数は、選択したフレームのフォントセット、または &lt;var&gt;frame&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; でない場合は &lt;var&gt;frame&lt;/var&gt; のフォントセットを変更します。</target>
        </trans-unit>
        <trans-unit id="23df771eaf3bad31db2ac910d60c1121c8c471d3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this function modifies the default fontset, whose short name is &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合、この関数はデフォルトのフォントセットを変更します。その短い名前は 'です。</target>
        </trans-unit>
        <trans-unit id="0730e252581492ff86652eae61f09fd2092984ed" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it means to delete all overlays in the specified region. If &lt;var&gt;start&lt;/var&gt; and/or &lt;var&gt;end&lt;/var&gt; are omitted or &lt;code&gt;nil&lt;/code&gt;, that means the beginning and end of the buffer respectively. Therefore, &lt;code&gt;(remove-overlays)&lt;/code&gt; removes all the overlays in the current buffer.</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; が省略または &lt;code&gt;nil&lt;/code&gt; の場合、指定された領域内のすべてのオーバーレイを削除することを意味します。場合は &lt;var&gt;start&lt;/var&gt; および/または &lt;var&gt;end&lt;/var&gt; 省略したりしている &lt;code&gt;nil&lt;/code&gt; 、それはそれぞれのバッファの始まりと終わりを意味します。したがって、 &lt;code&gt;(remove-overlays)&lt;/code&gt; は、現在のバッファー内のすべてのオーバーレイを削除します。</target>
        </trans-unit>
        <trans-unit id="6af1bf26a6a0bc89c6b24efcee8567b5fd3a6e3d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;new-pos&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;constrain-to-field&lt;/code&gt; uses the value of point instead, and moves point to the resulting position in addition to returning that position.</source>
          <target state="translated">場合 &lt;var&gt;new-pos&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 、次に &lt;code&gt;constrain-to-field&lt;/code&gt; 代わりに、点の値を使用し、移動し、その位置を返すことに加えて、得られた位置を指します。</target>
        </trans-unit>
        <trans-unit id="9b5541e81cf359db0249d926f39f56051c6aaf6f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;newname&lt;/var&gt; exists, then it must be an empty directory if &lt;var&gt;oldname&lt;/var&gt; is a directory and a non-directory otherwise.</source>
          <target state="translated">場合 &lt;var&gt;newname&lt;/var&gt; 存在する場合、それは空のディレクトリでなければなりません &lt;var&gt;oldname&lt;/var&gt; そうでない場合は、ディレクトリおよび非ディレクトリです。</target>
        </trans-unit>
        <trans-unit id="70f0c76c07e217c62c33d733d989713df6e7203e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;newname&lt;/var&gt; is a symbolic link, its directory entry is replaced, not the directory entry it points to. If &lt;var&gt;oldname&lt;/var&gt; is a symbolic link, this function might or might not follow the link; it does not follow the link on GNU platforms. If &lt;var&gt;oldname&lt;/var&gt; is a directory, this function typically fails, although for the superuser on a few old-fashioned non-GNU platforms it can succeed and create a filesystem that is not tree-structured.</source>
          <target state="translated">場合 &lt;var&gt;newname&lt;/var&gt; シンボリックリンクで、そのディレクトリエントリは、それが指すないディレクトリエントリを置き換えています。 &lt;var&gt;oldname&lt;/var&gt; がシンボリックリンクの場合、この関数はリンクをたどるかどうかはわかりません。GNUプラットフォームのリンクをたどりません。 &lt;var&gt;oldname&lt;/var&gt; がディレクトリの場合、この関数は通常失敗しますが、いくつかの旧式の非GNUプラットフォームのスーパーユーザーの場合、成功してツリー構造ではないファイルシステムを作成できます。</target>
        </trans-unit>
        <trans-unit id="e5bad4da3538be0c529de47a9ba28d4ee862b7df" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;no-error&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and a suitable path can&amp;rsquo;t be found, don&amp;rsquo;t signal an error. Instead, return a list of directories as before, except that &lt;code&gt;nil&lt;/code&gt; appears in place of the image directory.</source>
          <target state="translated">場合 &lt;var&gt;no-error&lt;/var&gt; 非されていない &lt;code&gt;nil&lt;/code&gt; と適切な経路を見つけることができず、エラーを通知しません。代わりに、イメージディレクトリの代わりに &lt;code&gt;nil&lt;/code&gt; が表示されることを除いて、以前と同じようにディレクトリのリストを返します。</target>
        </trans-unit>
        <trans-unit id="36e771c9c8ea6812625c3ae824d4c85aff3882bf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;no-remap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, find the bindings for &lt;var&gt;other-command&lt;/var&gt; and treat them as though they are also bindings for &lt;var&gt;command&lt;/var&gt;. If &lt;var&gt;no-remap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, include the vector &lt;code&gt;[remap &lt;var&gt;other-command&lt;/var&gt;]&lt;/code&gt; in the list of possible key sequences, instead of finding those bindings.</source>
          <target state="translated">&lt;var&gt;no-remap&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;var&gt;other-command&lt;/var&gt; のバインディングを見つけて、それらが &lt;var&gt;command&lt;/var&gt; のバインディングでもあるかのように扱います。場合 &lt;var&gt;no-remap&lt;/var&gt; 非されていない &lt;code&gt;nil&lt;/code&gt; 、ベクターが挙げられる &lt;code&gt;[remap &lt;var&gt;other-command&lt;/var&gt;]&lt;/code&gt; 、可能なキーシーケンスのリストでの代わりに、それらのバインディングを見つけます。</target>
        </trans-unit>
        <trans-unit id="de293f24fde5a6bfad440f3302beb58e65ef06e1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;no-remap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, return the bindings for &lt;var&gt;other-command&lt;/var&gt; rather than &lt;var&gt;command&lt;/var&gt;. If &lt;var&gt;no-remap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, return the bindings for &lt;var&gt;command&lt;/var&gt;, ignoring the fact that it is remapped.</source>
          <target state="translated">場合は &lt;var&gt;no-remap&lt;/var&gt; ありません &lt;code&gt;nil&lt;/code&gt; 、のバインディングを返す &lt;var&gt;other-command&lt;/var&gt; ではなく &lt;var&gt;command&lt;/var&gt; 。 &lt;var&gt;no-remap&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;var&gt;command&lt;/var&gt; のバインディングを返し、再マップされるという事実を無視します。</target>
        </trans-unit>
        <trans-unit id="00e082503381f94a9d71d41842fc34eccabb510d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noauto&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says not to enable or disable Auto-Save mode. The mode remains enabled if it was enabled before.</source>
          <target state="translated">&lt;var&gt;noauto&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、自動保存モードを有効または無効にしないことを意味します。以前に有効にされていた場合、モードは有効のままです。</target>
        </trans-unit>
        <trans-unit id="b29af83687727fd1b589a3008542c14f5b548ea8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nodigits&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;suppress-keymap&lt;/code&gt; defines digits to run &lt;code&gt;digit-argument&lt;/code&gt;, and</source>
          <target state="translated">場合 &lt;var&gt;nodigits&lt;/var&gt; がある &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;suppress-keymap&lt;/code&gt; 定義桁が実行する &lt;code&gt;digit-argument&lt;/code&gt; 、そして</target>
        </trans-unit>
        <trans-unit id="d0a493315f909df0fe4aba7cda1b88945120716f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nodisp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;sit-for&lt;/code&gt; does not redisplay, but it still returns as soon as input is available (or when the timeout elapses).</source>
          <target state="translated">場合 &lt;var&gt;nodisp&lt;/var&gt; が非で &lt;code&gt;nil&lt;/code&gt; で、その後 &lt;code&gt;sit-for&lt;/code&gt; 再表示しませんが、入力が利用可能であるとして、それはまだ、すぐに返します（または時にタイムアウトが経過）。</target>
        </trans-unit>
        <trans-unit id="d5c2797052a29fc6fac6d9aca68e89cff39f4db3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noerror&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;word-search-forward&lt;/code&gt; signals an error if the search fails. If &lt;var&gt;noerror&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then it returns &lt;code&gt;nil&lt;/code&gt; instead of signaling an error. If &lt;var&gt;noerror&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor &lt;code&gt;t&lt;/code&gt;, it moves point to &lt;var&gt;limit&lt;/var&gt; (or the end of the accessible portion of the buffer) and returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;var&gt;noerror&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;word-search-forward&lt;/code&gt; 信号エラー検索が失敗した場合。 &lt;var&gt;noerror&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合、エラーを通知する代わりに &lt;code&gt;nil&lt;/code&gt; を返します。 &lt;var&gt;noerror&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; でも &lt;code&gt;t&lt;/code&gt; でもない場合、ポイントを &lt;var&gt;limit&lt;/var&gt; （またはバッファのアクセス可能な部分の終わり）に移動し、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b34901434cb924798166f7998a7c369b13aa3ff8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noerror&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that suppresses errors from actual loading of the file. In that case, &lt;code&gt;require&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; if loading the file fails. Normally, &lt;code&gt;require&lt;/code&gt; returns &lt;var&gt;feature&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;noerror&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、ファイルの実際のロードによるエラーが抑制されます。その場合、ファイルのロードが失敗した場合、 &lt;code&gt;require&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。通常、 &lt;code&gt;require&lt;/code&gt; 返す &lt;var&gt;feature&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb8a7c392a4b5b154111bf576d8db335aef254ae" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noescape&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that inhibits use of quoting characters in the output. (This argument is supported in Emacs versions 19 and later.)</source>
          <target state="translated">&lt;var&gt;noescape&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、出力での引用文字の使用が禁止されます。（この引数はEmacsバージョン19以降でサポートされています。）</target>
        </trans-unit>
        <trans-unit id="bac112f69fe2ae136cf186ae67923f75cd73b274" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noexclude&lt;/var&gt; is present and non-&lt;code&gt;nil&lt;/code&gt;, that disables the normal action of &lt;code&gt;yank-handled-properties&lt;/code&gt; and &lt;code&gt;yank-excluded-properties&lt;/code&gt; on the inserted string.</source>
          <target state="translated">&lt;var&gt;noexclude&lt;/var&gt; が存在し、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、挿入された文字列に対する &lt;code&gt;yank-excluded-properties&lt;/code&gt; handled &lt;code&gt;yank-handled-properties&lt;/code&gt; およびyank-excluded-propertiesの通常のアクションが無効になります。</target>
        </trans-unit>
        <trans-unit id="7eb19dbd4a4e2455ddba09e86ea3f445ea3b92cc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noforce&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;position&lt;/var&gt; would place point off screen at the next redisplay, then redisplay computes a new window-start position that works well with point, and thus &lt;var&gt;position&lt;/var&gt; is not used.</source>
          <target state="translated">&lt;var&gt;noforce&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外であり、 &lt;var&gt;position&lt;/var&gt; が次の再表示でポイントを画面外に配置する場合、redisplayはポイントで適切に機能する新しいウィンドウ開始位置を計算するため、 &lt;var&gt;position&lt;/var&gt; は使用されません。</target>
        </trans-unit>
        <trans-unit id="0ecca1827da80ecd5be14fb9fb2d0fbd4811a32f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noforce&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function does not recompile files that have an up-to-date &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;noforce&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数は最新のファイルを再コンパイルしません。</target>
        </trans-unit>
        <trans-unit id="78f3227e2803afeeafa3e87719ab498e6a18e8a6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noindirect&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;where-is-internal&lt;/code&gt; doesn&amp;rsquo;t look inside menu-items to find their commands. This makes it possible to search for a menu-item itself.</source>
          <target state="translated">&lt;var&gt;noindirect&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;where-is-internal&lt;/code&gt; はメニュー項目の内部を調べてコマンドを見つけません。これにより、メニュー項目自体を検索できます。</target>
        </trans-unit>
        <trans-unit id="26693b86f9e15c7345b1f99c962018c4276f22ce" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nomodes&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means don&amp;rsquo;t alter the buffer&amp;rsquo;s major mode, don&amp;rsquo;t process local variables specifications in the file, and don&amp;rsquo;t run &lt;code&gt;find-file-hook&lt;/code&gt;. This feature is used by &lt;code&gt;revert-buffer&lt;/code&gt; in some cases.</source>
          <target state="translated">&lt;var&gt;nomodes&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、つまり、バッファーのメジャーモードを変更したり、ファイル内のローカル変数の指定を処理したり、 &lt;code&gt;find-file-hook&lt;/code&gt; を実行したりしないでください。この機能は、場合によっては &lt;code&gt;revert-buffer&lt;/code&gt; によって使用されます。</target>
        </trans-unit>
        <trans-unit id="0d10ebd500fb3448c1a40d71edf4b908895de050" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nonstickiness&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means that the property &lt;var&gt;property&lt;/var&gt; is rear-nonsticky by default. Since all properties are front-nonsticky by default, this makes &lt;var&gt;property&lt;/var&gt; nonsticky in both directions by default.</source>
          <target state="translated">場合は &lt;var&gt;nonstickiness&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; で、プロパティのこの手段という &lt;var&gt;property&lt;/var&gt; 、デフォルトでは、リア・非粘着性です。すべてのプロパティはデフォルトで前面非粘着 &lt;var&gt;property&lt;/var&gt; 、これにより、デフォルトで両方向のプロパティが非粘着性になります。</target>
        </trans-unit>
        <trans-unit id="83892fe7706bb36fcc64573410d45dd2c22713cb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosort&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;directory-files&lt;/code&gt; does not sort the list, so you get the file names in no particular order. Use this if you want the utmost possible speed and don&amp;rsquo;t care what order the files are processed in. If the order of processing is visible to the user, then the user will probably be happier if you do sort the names.</source>
          <target state="translated">&lt;var&gt;nosort&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;directory-files&lt;/code&gt; はリストをソートしないため、ファイル名は特定の順序で取得されません。最大限の速度が必要で、ファイルが処理される順序を気にしない場合は、これを使用します。処理の順序がユーザーに表示される場合は、名前を並べ替えると、ユーザーはおそらく幸せになります。</target>
        </trans-unit>
        <trans-unit id="e9ba6185ce28fd5f39867dd3f5cda9873d3d87e2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosqueeze&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means do not change interior whitespace.</source>
          <target state="translated">&lt;var&gt;nosqueeze&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、内部の空白を変更しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="6598274c6486d7fe5670d764afd9c92143e9519e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosqueeze&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to leave whitespace other than line breaks untouched. If &lt;var&gt;squeeze-after&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a position in the region, and means don&amp;rsquo;t canonicalize spaces before that position.</source>
          <target state="translated">場合 &lt;var&gt;nosqueeze&lt;/var&gt; が非で &lt;code&gt;nil&lt;/code&gt; で、その手段は空白他の改行以外は手つかずのままにします。場合 &lt;var&gt;squeeze-after&lt;/var&gt; 非である &lt;code&gt;nil&lt;/code&gt; の、それは地域での位置を指定し、手段は、その位置の前にスペースを正規化しません。</target>
        </trans-unit>
        <trans-unit id="d6892e309bf8fcc44554b83a98e758b86dcaf968" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosqueeze&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to leave whitespace other than line breaks untouched. If &lt;var&gt;to-eop&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to keep filling to the end of the paragraph&amp;mdash;or the next hard newline, if &lt;code&gt;use-hard-newlines&lt;/code&gt; is enabled (see below).</source>
          <target state="translated">場合 &lt;var&gt;nosqueeze&lt;/var&gt; が非で &lt;code&gt;nil&lt;/code&gt; で、その手段は空白他の改行以外は手つかずのままにします。 &lt;var&gt;to-eop&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、段落の最後まで、または &lt;code&gt;use-hard-newlines&lt;/code&gt; が有効になっている場合は次のハード改行まで塗りつぶし続けることを意味します（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="e931aa8ba8f040aad8beafd66d9db46e9038ece6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;not-current&lt;/var&gt;, if point is in a region where we have a match, then skip past that and find the next instance instead.</source>
          <target state="translated">場合は &lt;var&gt;not-current&lt;/var&gt; ポイントは、我々は試合を持っている領域にある場合は、そのをスキップし、代わりに次のインスタンスを見つけます。</target>
        </trans-unit>
        <trans-unit id="ad5c7639ee10fd0fbdca8effe5c458cff315189c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noundo&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;subst-char-in-region&lt;/code&gt; does not record the change for undo and does not mark the buffer as modified. This was useful for controlling the old selective display feature (see &lt;a href=&quot;selective-display#Selective-Display&quot;&gt;Selective Display&lt;/a&gt;).</source>
          <target state="translated">場合 &lt;var&gt;noundo&lt;/var&gt; が非ある &lt;code&gt;nil&lt;/code&gt; 、次いで &lt;code&gt;subst-char-in-region&lt;/code&gt; 元に戻すための変更を記録しないと修正されたバッファにマークを付けません。これは、古い選択的表示機能を制御するのに役立ちました（&lt;a href=&quot;selective-display#Selective-Display&quot;&gt;選択的表示を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="a9014652f43b7f3736feab16399f1f869b549d21" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; are numbers with differing types or values, then they cannot be the same object and &lt;code&gt;eq&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. If they are fixnums with the same value, then they are the same object and &lt;code&gt;eq&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt;. If they were computed separately but happen to have the same value and the same non-fixnum numeric type, then they might or might not be the same object, and &lt;code&gt;eq&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; depending on whether the Lisp interpreter created one object or two.</source>
          <target state="translated">場合は &lt;var&gt;object1&lt;/var&gt; と &lt;var&gt;object2&lt;/var&gt; 異なるタイプまたは値が数値である場合、それらは同じ物とすることはできません &lt;code&gt;eq&lt;/code&gt; 戻り &lt;code&gt;nil&lt;/code&gt; 。それらが同じ値のfixnumである場合、それらは同じオブジェクトであり、 &lt;code&gt;eq&lt;/code&gt; は &lt;code&gt;t&lt;/code&gt; を返します。これらは個別に計算されたが、同じ値と同じ非FIXNUM数値型を持って起こるた場合、それらは、同じオブジェクト、およびではないかもしれない可能性がある &lt;code&gt;eq&lt;/code&gt; 返し &lt;code&gt;t&lt;/code&gt; または &lt;code&gt;nil&lt;/code&gt; のLispインタプリタが一つのオブジェクトまたは2を作成したかによって異なります。</target>
        </trans-unit>
        <trans-unit id="2af6f2a24faac9514358b8004f083d20948c6b84" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; are symbols with the same name, they are normally the same object&amp;mdash;but see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt; for exceptions. For other non-numeric types (e.g., lists, vectors, strings), two arguments with the same contents or elements are not necessarily &lt;code&gt;eq&lt;/code&gt; to each other: they are &lt;code&gt;eq&lt;/code&gt; only if they are the same object, meaning that a change in the contents of one will be reflected by the same change in the contents of the other.</source>
          <target state="translated">場合は &lt;var&gt;object1&lt;/var&gt; と &lt;var&gt;object2&lt;/var&gt; 同じ名前を持つシンボルであり、彼らは通常、同じオブジェクトが、ある参照&lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;シンボルの作成&lt;/a&gt;例外を。他の非数値タイプ（リスト、ベクトル、文字列など）の場合、同じ内容または要素を持つ2つの引数は、必ずしも互いに &lt;code&gt;eq&lt;/code&gt; である必要はありません。これらは、同じオブジェクトである場合にのみ &lt;code&gt;eq&lt;/code&gt; です。つまり、内容が変更されます。一方の内容は、もう一方の内容の同じ変更に反映されます。</target>
        </trans-unit>
        <trans-unit id="b1ee70c11cfc433529378d20ac72c39a1e8fea7d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object&lt;/var&gt; is a buffer, &lt;var&gt;pos&lt;/var&gt; is the position in the buffer.</source>
          <target state="translated">&lt;var&gt;object&lt;/var&gt; がバッファの場合、 &lt;var&gt;pos&lt;/var&gt; はバッファ内の位置です。</target>
        </trans-unit>
        <trans-unit id="0e27eb072bc84c5470eb495591cdba437e15fad2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object&lt;/var&gt; is a string (an overlay string or a string displayed with the &lt;code&gt;display&lt;/code&gt; property), &lt;var&gt;pos&lt;/var&gt; is the position in that string.</source>
          <target state="translated">場合 &lt;var&gt;object&lt;/var&gt; （オーバーレイ文字列または文字列を用いて表示される文字列で &lt;code&gt;display&lt;/code&gt; プロパティ）、 &lt;var&gt;pos&lt;/var&gt; その文字列内の位置です。</target>
        </trans-unit>
        <trans-unit id="38a61ea0980d18fce10e9b53b0321cf0fdd0800c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object&lt;/var&gt; is an overlay, that overlay has a &lt;code&gt;help-echo&lt;/code&gt; property, and &lt;var&gt;pos&lt;/var&gt; is the position in the overlay&amp;rsquo;s buffer.</source>
          <target state="translated">&lt;var&gt;object&lt;/var&gt; がオーバーレイの場合、そのオーバーレイには &lt;code&gt;help-echo&lt;/code&gt; プロパティがあり、 &lt;var&gt;pos&lt;/var&gt; はオーバーレイのバッファー内の位置です。</target>
        </trans-unit>
        <trans-unit id="d3a9907e2699fe2ba585907784b6a1667fe8494e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;old-pos&lt;/var&gt; is at the boundary of two fields, then the acceptable final positions depend on the argument &lt;var&gt;escape-from-edge&lt;/var&gt;. If &lt;var&gt;escape-from-edge&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;new-pos&lt;/var&gt; must be in the field whose &lt;code&gt;field&lt;/code&gt; property equals what new characters inserted at &lt;var&gt;old-pos&lt;/var&gt; would inherit. (This depends on the stickiness of the &lt;code&gt;field&lt;/code&gt; property for the characters before and after &lt;var&gt;old-pos&lt;/var&gt;.) If &lt;var&gt;escape-from-edge&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;new-pos&lt;/var&gt; can be anywhere in the two adjacent fields. Additionally, if two fields are separated by another field with the special value &lt;code&gt;boundary&lt;/code&gt;, then any point within this special field is also considered to be on the boundary.</source>
          <target state="translated">場合は &lt;var&gt;old-pos&lt;/var&gt; 二つのフィールドの境界にある、そして許容可能な最終位置は、引数に依存 &lt;var&gt;escape-from-edge&lt;/var&gt; 。場合は &lt;var&gt;escape-from-edge&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;var&gt;new-pos&lt;/var&gt; その場でなければなりません &lt;code&gt;field&lt;/code&gt; プロパティで挿入された新しい文字何等しい &lt;var&gt;old-pos&lt;/var&gt; 継承します。 （これは、 &lt;var&gt;old-pos&lt;/var&gt; の前後の文字の &lt;code&gt;field&lt;/code&gt; プロパティの粘着性によって異なります。） &lt;var&gt;escape-from-edge&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; でない場合、 &lt;var&gt;new-pos&lt;/var&gt; は2つの隣接するフィールドのどこにあってもかまいません。さらに、2つのフィールドが特別な値を持つ別のフィールドで区切られている場合 &lt;code&gt;boundary&lt;/code&gt; 場合、この特別なフィールド内の任意のポイントも境界上にあると見なされます。</target>
        </trans-unit>
        <trans-unit id="7b45ce06e8242468687d939a7db0ceab289b73f3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;oldmap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that changes the behavior of &lt;code&gt;substitute-key-definition&lt;/code&gt;: the bindings in &lt;var&gt;oldmap&lt;/var&gt; determine which keys to rebind. The rebindings still happen in &lt;var&gt;keymap&lt;/var&gt;, not in &lt;var&gt;oldmap&lt;/var&gt;. Thus, you can change one map under the control of the bindings in another. For example,</source>
          <target state="translated">&lt;var&gt;oldmap&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;substitute-key-definition&lt;/code&gt; の動作が変更されます &lt;var&gt;oldmap&lt;/var&gt; のバインディングによって、再バインドするキーが決まります。再バインドは、 &lt;var&gt;oldmap&lt;/var&gt; ではなく &lt;var&gt;keymap&lt;/var&gt; で引き続き発生します。したがって、別のバインディングの制御下で1つのマップを変更できます。例えば、</target>
        </trans-unit>
        <trans-unit id="2a6bdbd640045c08255f0d67a91e3c33581a9f85" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;omit-nulls&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the result contains null strings whenever there are two consecutive matches for &lt;var&gt;separators&lt;/var&gt;, or a match is adjacent to the beginning or end of &lt;var&gt;string&lt;/var&gt;. If &lt;var&gt;omit-nulls&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, these null strings are omitted from the result.</source>
          <target state="translated">場合は &lt;var&gt;omit-nulls&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; （または省略）、のための2試合連続がある時はいつでも、結果はNULL文字列が含まれている &lt;var&gt;separators&lt;/var&gt; 、または試合は、先頭または末尾のに隣接している &lt;var&gt;string&lt;/var&gt; 。 &lt;var&gt;omit-nulls&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合、これらのnull文字列は結果から省略されます。</target>
        </trans-unit>
        <trans-unit id="4aad24ed126b51cb92662abeec69efc832d15095" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;oobinline-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; for a stream connection, receive out-of-band data in the normal data stream. Otherwise, ignore out-of-band data.</source>
          <target state="translated">ストリーム接続で &lt;var&gt;oobinline-flag&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、通常のデータストリームで帯域外データを受信します。それ以外の場合は、帯域外データを無視します。</target>
        </trans-unit>
        <trans-unit id="37779651e9adbb5f6f48ea776433a34f31a2eb33" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;operation&lt;/var&gt; is &lt;code&gt;insert-file-contents&lt;/code&gt;, the argument corresponding to the target may be a cons cell of the form &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;buffer&lt;/var&gt;)&lt;/code&gt;. In that case, &lt;var&gt;filename&lt;/var&gt; is a file name to look up in &lt;code&gt;file-coding-system-alist&lt;/code&gt;, and &lt;var&gt;buffer&lt;/var&gt; is a buffer that contains the file&amp;rsquo;s contents (not yet decoded). If &lt;code&gt;file-coding-system-alist&lt;/code&gt; specifies a function to call for this file, and that function needs to examine the file&amp;rsquo;s contents (as it usually does), it should examine the contents of &lt;var&gt;buffer&lt;/var&gt; instead of reading the file.</source>
          <target state="translated">場合 &lt;var&gt;operation&lt;/var&gt; ある &lt;code&gt;insert-file-contents&lt;/code&gt; 、ターゲットに対応する引数は、フォームのコンス・セルであってもよい &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;buffer&lt;/var&gt;)&lt;/code&gt; 。その場合、 &lt;var&gt;filename&lt;/var&gt; は &lt;code&gt;file-coding-system-alist&lt;/code&gt; で検索するファイル名であり、 &lt;var&gt;buffer&lt;/var&gt; はファイルの内容（まだデコードされていない）を含むバッファーです。場合は &lt;code&gt;file-coding-system-alist&lt;/code&gt; （それが通常行うように）このファイルの呼び出しに指定機能、およびその機能は、ファイルの内容を検討する必要があり、それはの内容を調べる必要がある &lt;var&gt;buffer&lt;/var&gt; 代わりにファイルを読み込みます。</target>
        </trans-unit>
        <trans-unit id="d891618ccc439543f9deced17fd85e88a18cce65" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;param&lt;/var&gt; is present and non-&lt;code&gt;nil&lt;/code&gt;, it replaces &lt;var&gt;string&lt;/var&gt; (or the substring of &lt;var&gt;string&lt;/var&gt; being processed) as the object passed to &lt;var&gt;function&lt;/var&gt; (or &lt;code&gt;insert&lt;/code&gt;). For example, if &lt;var&gt;function&lt;/var&gt; is &lt;code&gt;yank-rectangle&lt;/code&gt;, &lt;var&gt;param&lt;/var&gt; should be a list of strings to insert as a rectangle.</source>
          <target state="translated">場合 &lt;var&gt;param&lt;/var&gt; は存在および非ある &lt;code&gt;nil&lt;/code&gt; 、それは置き換え &lt;var&gt;string&lt;/var&gt; （またはサブ &lt;var&gt;string&lt;/var&gt; に渡されるオブジェクトとして処理されている）を &lt;var&gt;function&lt;/var&gt; （または &lt;code&gt;insert&lt;/code&gt; ）。たとえば、 &lt;var&gt;function&lt;/var&gt; が &lt;code&gt;yank-rectangle&lt;/code&gt; の場合、 &lt;var&gt;param&lt;/var&gt; は長方形として挿入する文字列のリストである必要があります。</target>
        </trans-unit>
        <trans-unit id="d30e2c584d8dbc2a078ae811bcb4a57e2608707f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;mode-class&lt;/code&gt; symbol property, then &lt;code&gt;define-derived-mode&lt;/code&gt; sets the &lt;code&gt;mode-class&lt;/code&gt; property of &lt;var&gt;variant&lt;/var&gt; to the same value. This ensures, for example, that if &lt;var&gt;parent&lt;/var&gt; is a special mode, then &lt;var&gt;variant&lt;/var&gt; is also a special mode (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">場合 &lt;var&gt;parent&lt;/var&gt; 非有する &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;mode-class&lt;/code&gt; シンボルプロパティを、次に &lt;code&gt;define-derived-mode&lt;/code&gt; 設定 &lt;code&gt;mode-class&lt;/code&gt; のプロパティ &lt;var&gt;variant&lt;/var&gt; 同じ値に。これにより、たとえば、 &lt;var&gt;parent&lt;/var&gt; が特殊モードの場合、 &lt;var&gt;variant&lt;/var&gt; も特殊モードになります（&lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;メジャーモードの規則を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="7b1617578c1a56dedad969852c0b1d45b2ea11df" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pattern&lt;/var&gt; is written as a relative file name, it is interpreted relative to the current default directory. The file names returned are normally also relative to the current default directory. However, if &lt;var&gt;full&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, they are absolute.</source>
          <target state="translated">&lt;var&gt;pattern&lt;/var&gt; が相対ファイル名として記述されている場合、現在のデフォルトディレクトリを基準にして解釈されます。返されるファイル名は通常、現在のデフォルトディレクトリからも相対的です。ただし、 &lt;var&gt;full&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、それらは絶対的です。</target>
        </trans-unit>
        <trans-unit id="1c99972e410371a92d8f69b335df771151454562" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pattern&lt;/var&gt; is written as an absolute file name, the values are absolute also.</source>
          <target state="translated">&lt;var&gt;pattern&lt;/var&gt; が絶対ファイル名として記述されている場合、値も絶対です。</target>
        </trans-unit>
        <trans-unit id="fc49ec34b1436f43b3eeb5e7a55dc8182e6de5e6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;period&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the returned value includes the period that delimits the extension, and if &lt;var&gt;filename&lt;/var&gt; has no extension, the value is &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;var&gt;period&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; の場合、返される値は、拡張子を区切るピリオドを含み、そして場合 &lt;var&gt;filename&lt;/var&gt; 拡張子がない、値があります &lt;code&gt;&quot;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ed3a227cc989252164f90e310eca16feab9cb5c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pixels-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;lines&lt;/var&gt; specifies a number of pixels. In this case, the return value is &lt;var&gt;lines&lt;/var&gt;.</source>
          <target state="translated">場合 &lt;var&gt;pixels-p&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、 &lt;var&gt;lines&lt;/var&gt; 画素の数を指定します。この場合、戻り値は &lt;var&gt;lines&lt;/var&gt; です。</target>
        </trans-unit>
        <trans-unit id="784762c4516053ed35d7fc0595d15975dab5431a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the return value is rounded down to the nearest integer, if necessary. This means that if a column on the right of the text area is only partially visible, that column is not counted. It also means that the width of a window&amp;rsquo;s body can never exceed its total width as returned by &lt;code&gt;window-total-width&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;var&gt;pixelwise&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 必要であれば、戻り値は、最も近い整数に切り捨てされます。これは、テキスト領域の右側の列が部分的にしか表示されていない場合、その列はカウントされないことを意味します。また、 &lt;code&gt;window-total-width&lt;/code&gt; によって返されるように、ウィンドウの本体の幅がその合計幅を超えることは決してないことも意味します。</target>
        </trans-unit>
        <trans-unit id="c62e60e501a28aa524f768d674258822704eccc8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the return value is rounded down to the nearest integer, if necessary. This means that if a line at the bottom of the text area is only partially visible, that line is not counted. It also means that the height of a window&amp;rsquo;s body can never exceed its total height as returned by &lt;code&gt;window-total-height&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;var&gt;pixelwise&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 必要であれば、戻り値は、最も近い整数に切り捨てされます。これは、テキスト領域の下部にある行が部分的にしか表示されていない場合、その行はカウントされないことを意味します。また、 &lt;code&gt;window-total-height&lt;/code&gt; によって返されるように、ウィンドウの本体の高さがその全高を超えることは決してないことも意味します。</target>
        </trans-unit>
        <trans-unit id="4e57da36286b8cb1902091ef2218e3a32b743eac" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos-or-prop&lt;/var&gt; is a marker or number, this function returns a non-&lt;code&gt;nil&lt;/code&gt; value if the text at that position is currently invisible.</source>
          <target state="translated">場合は &lt;var&gt;pos-or-prop&lt;/var&gt; マーカーまたは番号で、この機能は非返す &lt;code&gt;nil&lt;/code&gt; その位置にテキストが現在見えない場合は、値を。</target>
        </trans-unit>
        <trans-unit id="b657c5c40081843536657ec55d6f3cad825161c2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos-or-prop&lt;/var&gt; is any other kind of Lisp object, that is taken to mean a possible value of the &lt;code&gt;invisible&lt;/code&gt; text or overlay property. In that case, this function returns a non-&lt;code&gt;nil&lt;/code&gt; value if that value would cause text to become invisible, based on the current value of &lt;code&gt;buffer-invisibility-spec&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;var&gt;pos-or-prop&lt;/var&gt; の可能な値を意味すると解釈されたLispオブジェクト、他の種類のある &lt;code&gt;invisible&lt;/code&gt; テキストまたはオーバーレイプロパティを。その場合、 &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; の現在の値に基づいて、その値によってテキストが非表示になる場合、この関数は &lt;code&gt;nil&lt;/code&gt; 以外の値を返します。</target>
        </trans-unit>
        <trans-unit id="5d64ca800dd9eb161d321e9a0d7374e76e593748" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos&lt;/var&gt; is at the beginning of its field, and &lt;var&gt;escape-from-edge&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the return value is always the beginning of the preceding field that &lt;em&gt;ends&lt;/em&gt; at &lt;var&gt;pos&lt;/var&gt;, regardless of the stickiness of the &lt;code&gt;field&lt;/code&gt; properties around &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">場合 &lt;var&gt;pos&lt;/var&gt; がそのフィールドの先頭であり、 &lt;var&gt;escape-from-edge&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; で、戻り値が常に先行するフィールドの先頭である&lt;em&gt;端部&lt;/em&gt;で &lt;var&gt;pos&lt;/var&gt; に関わらずの粘着性の &lt;code&gt;field&lt;/code&gt; の周囲特性 &lt;var&gt;pos&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="46417bbbf875d6256c94c47b965787bbed275199" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos&lt;/var&gt; is at the end of its field, and &lt;var&gt;escape-from-edge&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the return value is always the end of the following field that &lt;em&gt;begins&lt;/em&gt; at &lt;var&gt;pos&lt;/var&gt;, regardless of the stickiness of the &lt;code&gt;field&lt;/code&gt; properties around &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">場合 &lt;var&gt;pos&lt;/var&gt; がそのフィールドの末尾にあり、 &lt;var&gt;escape-from-edge&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; で、戻り値は常に次のフィールドの端で&lt;em&gt;始まり&lt;/em&gt;に &lt;var&gt;pos&lt;/var&gt; の粘着性に関係なく、 &lt;code&gt;field&lt;/code&gt; の周り特性 &lt;var&gt;pos&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="96a53e112df0ffde3b4c25dce291c3cce9686c57" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or a marker that points nowhere, then &lt;var&gt;marker&lt;/var&gt; is set to point nowhere.</source>
          <target state="translated">場合は &lt;var&gt;position&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; またはポイントはどこにも、そのマーカー &lt;var&gt;marker&lt;/var&gt; どこにもポイントに設定されていません。</target>
        </trans-unit>
        <trans-unit id="83c105bf919f3622f1dcd1a7fd5c58cceeef6513" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, it means to use the current mouse position (or the top-left corner of the frame if the mouse is not available on a text terminal). If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it means to precompute the key binding equivalents for the keymaps specified in &lt;var&gt;menu&lt;/var&gt;, without actually displaying or popping up the menu.</source>
          <target state="translated">&lt;var&gt;position&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合、現在のマウス位置（または、マウスがテキスト端末で使用できない場合はフレームの左上隅）を使用することを意味します。 &lt;var&gt;position&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、実際に &lt;var&gt;menu&lt;/var&gt; 表示またはポップアップすることなく、メニューで指定されたキーマップに相当するキーバインディングを事前に計算することを意味します。</target>
        </trans-unit>
        <trans-unit id="f3eeaf5e6367889ab92df1cab57056dd2fc164b3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is at the end of &lt;var&gt;object&lt;/var&gt;, both the &lt;small&gt;CAR&lt;/small&gt; and the &lt;small&gt;CDR&lt;/small&gt; of the value are &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;var&gt;position&lt;/var&gt; の端にある &lt;var&gt;object&lt;/var&gt; 、両方の&lt;small&gt;CAR&lt;/small&gt;および&lt;small&gt;CDR&lt;/small&gt;値は &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="faac8d599dce1586e227e803a02a728fc9b08789" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is visible, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;partially&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;; if &lt;var&gt;partially&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and the character following &lt;var&gt;position&lt;/var&gt; is fully visible, it returns a list of the form &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are the pixel coordinates relative to the top left corner of the window; otherwise it returns an extended list of the form &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt; &lt;var&gt;rtop&lt;/var&gt; &lt;var&gt;rbot&lt;/var&gt; &lt;var&gt;rowh&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;rtop&lt;/var&gt; and &lt;var&gt;rbot&lt;/var&gt; specify the number of off-window pixels at the top and bottom of the row at &lt;var&gt;position&lt;/var&gt;, &lt;var&gt;rowh&lt;/var&gt; specifies the visible height of that row, and &lt;var&gt;vpos&lt;/var&gt; specifies the vertical position (zero-based row number) of that row.</source>
          <target state="translated">場合 &lt;var&gt;position&lt;/var&gt; 表示され、 &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; 返す &lt;code&gt;t&lt;/code&gt; 場合 &lt;var&gt;partially&lt;/var&gt; で &lt;code&gt;nil&lt;/code&gt; 。場合 &lt;var&gt;partially&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、文字以下の &lt;var&gt;position&lt;/var&gt; 完全に表示され、それはフォームのリストを返し &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;x&lt;/var&gt; 及び &lt;var&gt;y&lt;/var&gt; 、ウィンドウの左上隅に対する相対画素座標であると、それ以外の場合は、フォームの拡張リストを返す &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt; &lt;var&gt;rtop&lt;/var&gt; &lt;var&gt;rbot&lt;/var&gt; &lt;var&gt;rowh&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;rtop&lt;/var&gt; と &lt;var&gt;rbot&lt;/var&gt; で行の上部と下部にオフウィンドウのピクセル数を指定する &lt;var&gt;position&lt;/var&gt; 、 &lt;var&gt;rowh&lt;/var&gt; 指定し、その行の可視高さ、及び &lt;var&gt;vpos&lt;/var&gt; その行の指定垂直位置（ゼロベースの行番号）。</target>
        </trans-unit>
        <trans-unit id="55cc33edc7be2cd9526c5a9533403095ca7c456a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and if &lt;var&gt;collection&lt;/var&gt; contains several strings that are equal to each other, as determined by &lt;code&gt;compare-strings&lt;/code&gt; according to &lt;code&gt;completion-ignore-case&lt;/code&gt;, then &lt;var&gt;predicate&lt;/var&gt; should accept either all or none of them. Otherwise, the return value of &lt;code&gt;test-completion&lt;/code&gt; is essentially unpredictable.</source>
          <target state="translated">場合 &lt;var&gt;predicate&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; とならば &lt;var&gt;collection&lt;/var&gt; 互いに等しい複数の文字列が含まれている、ことによって決定されるように &lt;code&gt;compare-strings&lt;/code&gt; に従って &lt;code&gt;completion-ignore-case&lt;/code&gt; 、次に &lt;var&gt;predicate&lt;/var&gt; すべてまたはそれらのどれも受け入れなければなりません。それ以外の場合、 &lt;code&gt;test-completion&lt;/code&gt; 戻り値は本質的に予測できません。</target>
        </trans-unit>
        <trans-unit id="bdb1cc039095ceac1bea80584a172b1f443cac21" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a function of one argument that decides which file names are acceptable completion alternatives. A file name is an acceptable value if &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt; for it.</source>
          <target state="translated">場合は &lt;var&gt;predicate&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; で、それはファイル名が許容補完代替手段があるかを決める1つの引数の関数を指定します。 &lt;var&gt;predicate&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外を返す場合、ファイル名は許容値です。</target>
        </trans-unit>
        <trans-unit id="8580e26c159c1afb13cde8e06fdd1a34d8e08cd5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prefix&lt;/var&gt; is given, it should be a prefix key sequence; then &lt;code&gt;accessible-keymaps&lt;/code&gt; includes only the submaps whose prefixes start with &lt;var&gt;prefix&lt;/var&gt;. These elements look just as they do in the value of &lt;code&gt;(accessible-keymaps)&lt;/code&gt;; the only difference is that some elements are omitted.</source>
          <target state="translated">&lt;var&gt;prefix&lt;/var&gt; を指定する場合は、プレフィックスキーシーケンスにする必要があります。その場合、 &lt;code&gt;accessible-keymaps&lt;/code&gt; には、プレフィックスがプレフィックスで始まるサブマップのみが含まれ &lt;var&gt;prefix&lt;/var&gt; 。これらの要素は、 &lt;code&gt;(accessible-keymaps)&lt;/code&gt; の値と同じように見えます。唯一の違いは、一部の要素が省略されていることです。</target>
        </trans-unit>
        <trans-unit id="a347999f1d1b713f4dd4865d93365fa337bb5c95" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prefix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a prefix key; then the listing includes only keys that start with &lt;var&gt;prefix&lt;/var&gt;.</source>
          <target state="translated">場合は &lt;var&gt;prefix&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; の、それはプレフィックスキーでなければなりません。その場合、リストには &lt;var&gt;prefix&lt;/var&gt; で始まるキーのみが含まれます。</target>
        </trans-unit>
        <trans-unit id="ca36dbd3bd6f556ea18734cb45b9bd8faaa32550" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;preserve&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to stop preserving the height/width of &lt;var&gt;window&lt;/var&gt;, lifting any respective restraint induced by a previous call of this function for &lt;var&gt;window&lt;/var&gt;. Calling &lt;code&gt;enlarge-window&lt;/code&gt;, &lt;code&gt;shrink-window&lt;/code&gt; or &lt;code&gt;fit-window-to-buffer&lt;/code&gt; with &lt;var&gt;window&lt;/var&gt; as argument may also remove the respective restraint.</source>
          <target state="translated">&lt;var&gt;preserve&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、これは &lt;var&gt;window&lt;/var&gt; 高さ/幅の保存を停止し、ウィンドウに対するこの関数の以前の呼び出しによって引き起こされたそれぞれの拘束を解除することを意味し &lt;var&gt;window&lt;/var&gt; 。呼び出し &lt;code&gt;enlarge-window&lt;/code&gt; 、 &lt;code&gt;shrink-window&lt;/code&gt; や &lt;code&gt;fit-window-to-buffer&lt;/code&gt; と &lt;var&gt;window&lt;/var&gt; 引数としても、それぞれの拘束を削除することができます。</target>
        </trans-unit>
        <trans-unit id="70b2755117f45760e422eb22c3d62e12c4e7c7a4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pretend&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs displays &lt;var&gt;height&lt;/var&gt; lines of output in &lt;var&gt;frame&lt;/var&gt;, but does not change its value for the actual height of the frame. This is only useful on text terminals. Using a smaller height than the terminal actually implements may be useful to reproduce behavior observed on a smaller screen, or if the terminal malfunctions when using its whole screen. Setting the frame height directly does not always work, because knowing the correct actual size may be necessary for correct cursor positioning on text terminals.</source>
          <target state="translated">場合 &lt;var&gt;pretend&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; で、Emacsは表示 &lt;var&gt;height&lt;/var&gt; で出力の行を &lt;var&gt;frame&lt;/var&gt; が、フレームの実際の高さのためにその値を変更しません。これは、テキスト端末でのみ役立ちます。端末が実際に実装するよりも低い高さを使用すると、小さな画面で観察された動作を再現したり、画面全体を使用したときに端末が誤動作したりする場合に役立つことがあります。テキスト端末でカーソルを正しく配置するには、正しい実際のサイズを知る必要がある場合があるため、フレームの高さを直接設定するとは限りません。</target>
        </trans-unit>
        <trans-unit id="798dab2980b4189ca407ba85b40f9a38bc88abfd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; does not have a buffer, &lt;code&gt;process-mark&lt;/code&gt; returns a marker that points nowhere.</source>
          <target state="translated">&lt;var&gt;process&lt;/var&gt; バッファがない場合、 &lt;code&gt;process-mark&lt;/code&gt; はどこも指さないマーカーを返します。</target>
        </trans-unit>
        <trans-unit id="440f703b88c0360d005a972e8afcd27c23624d36" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a datagram connection or server, this function returns its remote peer address.</source>
          <target state="translated">あれば &lt;var&gt;process&lt;/var&gt; データグラム接続又はサーバで、この関数は、リモートピアのアドレスを返します。</target>
        </trans-unit>
        <trans-unit id="b974ca55176bdcfc401335afa634c590cb8298b6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a datagram connection or server, this function sets its remote peer address to &lt;var&gt;address&lt;/var&gt;.</source>
          <target state="translated">あれば &lt;var&gt;process&lt;/var&gt; データグラム接続又はサーバで、この関数はにそのリモートピアのアドレスを設定する &lt;var&gt;address&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fb199d58887ed1728511057c2cf80aabcf45b87" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a non-blocking network stream that hasn&amp;rsquo;t been fully set up yet, then this function will block until that has happened. If given the optional &lt;var&gt;no-block&lt;/var&gt; parameter, this function will return &lt;code&gt;nil&lt;/code&gt; instead of blocking.</source>
          <target state="translated">場合は &lt;var&gt;process&lt;/var&gt; 完全にまだ設定されていない、非ブロッキングネットワークストリームであることが起こってしまうまで、この関数はブロックします。オプションの &lt;var&gt;no-block&lt;/var&gt; パラメーターを指定すると、この関数はブロッキングではなく &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="61ac6dbc8147a26153803b8153c37f8ee249df1c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a process, and the argument &lt;var&gt;just-this-one&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, only output from that process is handled, suspending output from other processes until some output has been received from that process or the timeout expires. If &lt;var&gt;just-this-one&lt;/var&gt; is an integer, also inhibit running timers. This feature is generally not recommended, but may be necessary for specific applications, such as speech synthesis.</source>
          <target state="translated">あれば &lt;var&gt;process&lt;/var&gt; プロセスであり、引数 &lt;var&gt;just-this-one&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、そのプロセスからの出力のみがいくつかの出力がそのプロセスから受信されたか、またはタイムアウトが期限切れになるまで、他のプロセスからの出力を一時停止、処理されます。場合 &lt;var&gt;just-this-one&lt;/var&gt; 整数であり、また、禁止タイマーを実行しています。この機能は一般的には推奨されませんが、音声合成などの特定のアプリケーションで必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="bb4c2d271cb8d5cf6b340e26056049f2b0cd468d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;program&lt;/var&gt; exits with a non-zero exit status, this function signals an error.</source>
          <target state="translated">&lt;var&gt;program&lt;/var&gt; がゼロ以外の終了ステータスで終了する場合、この関数はエラーを通知します。</target>
        </trans-unit>
        <trans-unit id="284b476ea5c6c02ef3e08ef66c25dfe87039466a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;program&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, Emacs opens a new pseudoterminal (pty) and associates its input and output with &lt;var&gt;buffer-or-name&lt;/var&gt;, without creating a subprocess. In that case, the remaining arguments &lt;var&gt;args&lt;/var&gt; are ignored.</source>
          <target state="translated">&lt;var&gt;program&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、Emacsは新しい疑似端末（pty）を開き、サブプロセスを作成せずに、その入力と出力を &lt;var&gt;buffer-or-name&lt;/var&gt; に関連付けます。その場合、残りの引数 &lt;var&gt;args&lt;/var&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="7a068c0ed13f4b12558a0ac454fd5ebc9a03b071" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prompt&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that becomes the overall prompt string for the keymap. The prompt string should be given for menu keymaps (see &lt;a href=&quot;defining-menus#Defining-Menus&quot;&gt;Defining Menus&lt;/a&gt;).</source>
          <target state="translated">&lt;var&gt;prompt&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、それがキーマップの全体的なプロンプト文字列になります。メニューキーマップのプロンプト文字列を指定する必要があります（&lt;a href=&quot;defining-menus#Defining-Menus&quot;&gt;メニューの定義を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b9183e502e9d5b4a77e58ff41346ba19cb0aa17f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prompt&lt;/var&gt; is supplied, it specifies a string for prompting the user. The prompt string is always displayed in the echo area, followed by a single &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;prompt&lt;/var&gt; が指定されている場合は、ユーザーにプロンプ​​トを表示するための文字列を指定します。プロンプト文字列は常にエコー領域に表示され、その後に1つの 'が続きます</target>
        </trans-unit>
        <trans-unit id="b8cdf2773a6fb1439f3a41376c8f7fe6ac57d8da" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;props&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the effect is to get rid of all properties from the specified range of text. Here&amp;rsquo;s an example:</source>
          <target state="translated">&lt;var&gt;props&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、指定された範囲のテキストからすべてのプロパティを削除する効果があります。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="8afb837ad0393bcd35f16b34e9e0d91dd9d41b2e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;query-flag&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it replaces all occurrences; otherwise, it asks the user what to do about each one.</source>
          <target state="translated">場合は &lt;var&gt;query-flag&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; の、それはすべての出現を置き換えます。それ以外の場合は、ユーザーにそれぞれについて何をすべきかを尋ねます。</target>
        </trans-unit>
        <trans-unit id="0d3207a5cfbb93826b7faedab3cdbc2f46ee5045" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;query-only&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it only lists processes whose query flag is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;Query Before Exit&lt;/a&gt;.</source>
          <target state="translated">If &lt;var&gt;query-only&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it only lists processes whose query flag is non- &lt;code&gt;nil&lt;/code&gt; . See &lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;Query Before Exit&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6890ef2b1573eed73e499d955a44c98846cafb19" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;quit-char&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the character to use for quitting. Normally this character is</source>
          <target state="translated">If &lt;var&gt;quit-char&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it specifies the character to use for quitting. Normally this character is</target>
        </trans-unit>
        <trans-unit id="a3a577714ad408acffc0d7cc1067326e87907443" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;read-function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function, which is used instead of &lt;code&gt;read&lt;/code&gt; to read expressions one by one. This function is called with one argument, the stream for reading input. You can also use the variable &lt;code&gt;load-read-function&lt;/code&gt; (see &lt;a href=&quot;how-programs-do-loading#Definition-of-load_002dread_002dfunction&quot;&gt;How Programs Do Loading&lt;/a&gt;) to specify this function, but it is more robust to use the &lt;var&gt;read-function&lt;/var&gt; argument.</source>
          <target state="translated">If &lt;var&gt;read-function&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it should be a function, which is used instead of &lt;code&gt;read&lt;/code&gt; to read expressions one by one. This function is called with one argument, the stream for reading input. You can also use the variable &lt;code&gt;load-read-function&lt;/code&gt; (see &lt;a href=&quot;how-programs-do-loading#Definition-of-load_002dread_002dfunction&quot;&gt;How Programs Do Loading&lt;/a&gt;) to specify this function, but it is more robust to use the &lt;var&gt;read-function&lt;/var&gt; argument.</target>
        </trans-unit>
        <trans-unit id="d3db26c2ae9afb5816606d7f0a78c1829b1ed42d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;read&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;default&lt;/var&gt; is also used as the input to &lt;code&gt;read&lt;/code&gt;, if the user enters empty input. If &lt;var&gt;default&lt;/var&gt; is a list of strings, the first string is used as the input. If &lt;var&gt;default&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, empty input results in an &lt;code&gt;end-of-file&lt;/code&gt; error. However, in the usual case (where &lt;var&gt;read&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;), &lt;code&gt;read-from-minibuffer&lt;/code&gt; ignores &lt;var&gt;default&lt;/var&gt; when the user enters empty input and returns an empty string, &lt;code&gt;&quot;&quot;&lt;/code&gt;. In this respect, it differs from all the other minibuffer input functions in this chapter.</source>
          <target state="translated">If &lt;var&gt;read&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then &lt;var&gt;default&lt;/var&gt; is also used as the input to &lt;code&gt;read&lt;/code&gt; , if the user enters empty input. If &lt;var&gt;default&lt;/var&gt; is a list of strings, the first string is used as the input. If &lt;var&gt;default&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , empty input results in an &lt;code&gt;end-of-file&lt;/code&gt; error. However, in the usual case (where &lt;var&gt;read&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; ), &lt;code&gt;read-from-minibuffer&lt;/code&gt; ignores &lt;var&gt;default&lt;/var&gt; when the user enters empty input and returns an empty string, &lt;code&gt;&quot;&quot;&lt;/code&gt; . In this respect, it differs from all the other minibuffer input functions in this chapter.</target>
        </trans-unit>
        <trans-unit id="5bad559afbcb968e474745ed42743ad8548140a8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;real-binding&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;item-string&lt;/var&gt; appears in the menu but cannot be selected.</source>
          <target state="translated">If &lt;var&gt;real-binding&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , then &lt;var&gt;item-string&lt;/var&gt; appears in the menu but cannot be selected.</target>
        </trans-unit>
        <trans-unit id="1a263509e902be80b222e3f22285ef1c3be84047" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;real-binding&lt;/var&gt; is a symbol and has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;menu-enable&lt;/code&gt; property, that property is an expression that controls whether the menu item is enabled. Every time the keymap is used to display a menu, Emacs evaluates the expression, and it enables the menu item only if the expression&amp;rsquo;s value is non-&lt;code&gt;nil&lt;/code&gt;. When a menu item is disabled, it is displayed in a fuzzy fashion, and cannot be selected.</source>
          <target state="translated">If &lt;var&gt;real-binding&lt;/var&gt; is a symbol and has a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;menu-enable&lt;/code&gt; property, that property is an expression that controls whether the menu item is enabled. Every time the keymap is used to display a menu, Emacs evaluates the expression, and it enables the menu item only if the expression&amp;rsquo;s value is non- &lt;code&gt;nil&lt;/code&gt; . When a menu item is disabled, it is displayed in a fuzzy fashion, and cannot be selected.</target>
        </trans-unit>
        <trans-unit id="29fba77baa5fe708b6e13bfc62e89f6007e228b0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;record-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then this command and its arguments are unconditionally added to the list &lt;code&gt;command-history&lt;/code&gt;. Otherwise, the command is added only if it uses the minibuffer to read an argument. See &lt;a href=&quot;command-history#Command-History&quot;&gt;Command History&lt;/a&gt;.</source>
          <target state="translated">If &lt;var&gt;record-flag&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then this command and its arguments are unconditionally added to the list &lt;code&gt;command-history&lt;/code&gt; . Otherwise, the command is added only if it uses the minibuffer to read an argument. See &lt;a href=&quot;command-history#Command-History&quot;&gt;Command History&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0b2c805c5f0aa1671bed4ef92a3890da3c1d0949" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;regexp-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;from-string&lt;/var&gt; is considered a regular expression; otherwise, it must match literally. If &lt;var&gt;delimited-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then only replacements surrounded by word boundaries are considered.</source>
          <target state="translated">If &lt;var&gt;regexp-flag&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then &lt;var&gt;from-string&lt;/var&gt; is considered a regular expression; otherwise, it must match literally. If &lt;var&gt;delimited-flag&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then only replacements surrounded by word boundaries are considered.</target>
        </trans-unit>
        <trans-unit id="cae4def785cb9497f8cd4e7881057bc29505c8c4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;registry&lt;/var&gt; is specified but not available, Emacs will try the other registries given in &lt;var&gt;alternate-registries&lt;/var&gt;, one by one, until it finds a registry that does exist.</source>
          <target state="translated">If &lt;var&gt;registry&lt;/var&gt; is specified but not available, Emacs will try the other registries given in &lt;var&gt;alternate-registries&lt;/var&gt; , one by one, until it finds a registry that does exist.</target>
        </trans-unit>
        <trans-unit id="26052509c06bed95c26314f9cccfbe9d4958b6f1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;rehash-size&lt;/var&gt; is an integer, it should be positive, and the hash table grows by adding approximately that much to the nominal size. If &lt;var&gt;rehash-size&lt;/var&gt; is floating point, it had better be greater than 1, and the hash table grows by multiplying the old size by approximately that number.</source>
          <target state="translated">If &lt;var&gt;rehash-size&lt;/var&gt; is an integer, it should be positive, and the hash table grows by adding approximately that much to the nominal size. If &lt;var&gt;rehash-size&lt;/var&gt; is floating point, it had better be greater than 1, and the hash table grows by multiplying the old size by approximately that number.</target>
        </trans-unit>
        <trans-unit id="f2aea6014682cd0fd1247472b57595db84c9d053" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;remote&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;code&gt;default-directory&lt;/code&gt; is a remote directory, &lt;var&gt;program&lt;/var&gt; is searched on the respective remote host.</source>
          <target state="translated">If &lt;var&gt;remote&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , and &lt;code&gt;default-directory&lt;/code&gt; is a remote directory, &lt;var&gt;program&lt;/var&gt; is searched on the respective remote host.</target>
        </trans-unit>
        <trans-unit id="dfe3cec663924e20b8e8887353bd47071e65adc6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;repeat-count&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be an integer. Then it specifies how many times to use each of the strings in the &lt;var&gt;replacements&lt;/var&gt; list before advancing cyclically to the next one.</source>
          <target state="translated">If &lt;var&gt;repeat-count&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it should be an integer. Then it specifies how many times to use each of the strings in the &lt;var&gt;replacements&lt;/var&gt; list before advancing cyclically to the next one.</target>
        </trans-unit>
        <trans-unit id="4ba4b93350562914b3611df9d32c00e0da009f40" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;repeat&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the timer runs just once, the first time Emacs remains idle for a long enough time. More often &lt;var&gt;repeat&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, which means to run the timer &lt;em&gt;each time&lt;/em&gt; Emacs remains idle for &lt;var&gt;secs&lt;/var&gt; seconds.</source>
          <target state="translated">If &lt;var&gt;repeat&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , the timer runs just once, the first time Emacs remains idle for a long enough time. More often &lt;var&gt;repeat&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , which means to run the timer &lt;em&gt;each time&lt;/em&gt; Emacs remains idle for &lt;var&gt;secs&lt;/var&gt; seconds.</target>
        </trans-unit>
        <trans-unit id="d67d19c85268ddcf560ad1dcebef1d1a4641647a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;replace&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;kill-new&lt;/code&gt; replaces the first element of the kill ring with &lt;var&gt;string&lt;/var&gt;, rather than pushing &lt;var&gt;string&lt;/var&gt; onto the kill ring.</source>
          <target state="translated">If &lt;var&gt;replace&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then &lt;code&gt;kill-new&lt;/code&gt; replaces the first element of the kill ring with &lt;var&gt;string&lt;/var&gt; , rather than pushing &lt;var&gt;string&lt;/var&gt; onto the kill ring.</target>
        </trans-unit>
        <trans-unit id="d4725e9067b58a8acd67ce0d63643d233b166952" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;replacements&lt;/var&gt; is a cons cell, &lt;code&gt;(&lt;var&gt;function&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;data&lt;/var&gt;)&lt;/code&gt;, this means to call &lt;var&gt;function&lt;/var&gt; after each match to get the replacement text. This function is called with two arguments: &lt;var&gt;data&lt;/var&gt;, and the number of replacements already made.</source>
          <target state="translated">If &lt;var&gt;replacements&lt;/var&gt; is a cons cell, &lt;code&gt;(&lt;var&gt;function&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;data&lt;/var&gt;)&lt;/code&gt; , this means to call &lt;var&gt;function&lt;/var&gt; after each match to get the replacement text. This function is called with two arguments: &lt;var&gt;data&lt;/var&gt; , and the number of replacements already made.</target>
        </trans-unit>
        <trans-unit id="e9b92e7de5ef3d0096eef07cab7e5acb3e5f3a02" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reseat&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, all markers on the &lt;var&gt;match-list&lt;/var&gt; list are reseated to point to nowhere.</source>
          <target state="translated">If &lt;var&gt;reseat&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , all markers on the &lt;var&gt;match-list&lt;/var&gt; list are reseated to point to nowhere.</target>
        </trans-unit>
        <trans-unit id="9e22a90f87ee4e0a28f0a43256bea55bceb44c30" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reseat&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, all markers on the &lt;var&gt;reuse&lt;/var&gt; list are reseated to point to nowhere.</source>
          <target state="translated">If &lt;var&gt;reseat&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , all markers on the &lt;var&gt;reuse&lt;/var&gt; list are reseated to point to nowhere.</target>
        </trans-unit>
        <trans-unit id="79faed9a6e8588e5f1f6d0061a7ceab47596f5f2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;restriction&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list of charsets to search. Alternatively, it can be a coding system, in which case the returned charset must be supported by that coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;).</source>
          <target state="translated">If &lt;var&gt;restriction&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it should be a list of charsets to search. Alternatively, it can be a coding system, in which case the returned charset must be supported by that coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="4e0a2593036d10955a73cdcc3a1bed33b3212e9a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reuse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list. In that case, &lt;code&gt;match-data&lt;/code&gt; stores the match data in &lt;var&gt;reuse&lt;/var&gt;. That is, &lt;var&gt;reuse&lt;/var&gt; is destructively modified. &lt;var&gt;reuse&lt;/var&gt; does not need to have the right length. If it is not long enough to contain the match data, it is extended. If it is too long, the length of &lt;var&gt;reuse&lt;/var&gt; stays the same, but the elements that were not used are set to &lt;code&gt;nil&lt;/code&gt;. The purpose of this feature is to reduce the need for garbage collection.</source>
          <target state="translated">If &lt;var&gt;reuse&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it should be a list. In that case, &lt;code&gt;match-data&lt;/code&gt; stores the match data in &lt;var&gt;reuse&lt;/var&gt; . That is, &lt;var&gt;reuse&lt;/var&gt; is destructively modified. &lt;var&gt;reuse&lt;/var&gt; does not need to have the right length. If it is not long enough to contain the match data, it is extended. If it is too long, the length of &lt;var&gt;reuse&lt;/var&gt; stays the same, but the elements that were not used are set to &lt;code&gt;nil&lt;/code&gt; . The purpose of this feature is to reduce the need for garbage collection.</target>
        </trans-unit>
        <trans-unit id="222679d354577d757ac22b3b1566dd77fc259235" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reuseaddr-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (the default) for a stream server process, allow this server to reuse a specific port number (see &lt;code&gt;:service&lt;/code&gt;), unless another process on this host is already listening on that port. If &lt;var&gt;reuseaddr-flag&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, there may be a period of time after the last use of that port (by any process on the host) where it is not possible to make a new server on that port.</source>
          <target state="translated">If &lt;var&gt;reuseaddr-flag&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; (the default) for a stream server process, allow this server to reuse a specific port number (see &lt;code&gt;:service&lt;/code&gt; ), unless another process on this host is already listening on that port. If &lt;var&gt;reuseaddr-flag&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , there may be a period of time after the last use of that port (by any process on the host) where it is not possible to make a new server on that port.</target>
        </trans-unit>
        <trans-unit id="ae9dd7142bb21c9c57e2950646994b2965287f32" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">If &lt;var&gt;reverse&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , the sort is in reverse order.</target>
        </trans-unit>
        <trans-unit id="622bc88ea182e257798f41748330ff7bc1b3830b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;rigid&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (interactively, with a prefix argument), then after this command indents a line or inserts a tab, it also rigidly indents the entire balanced expression which starts at the beginning of the current line, in order to reflect the new indentation. This argument is ignored if the command indents the region.</source>
          <target state="translated">If &lt;var&gt;rigid&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; (interactively, with a prefix argument), then after this command indents a line or inserts a tab, it also rigidly indents the entire balanced expression which starts at the beginning of the current line, in order to reflect the new indentation. This argument is ignored if the command indents the region.</target>
        </trans-unit>
        <trans-unit id="08f1cd4e99cfd160730c721b29ea4ba5b4a55e0d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;seconds&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, Emacs is considered idle while waiting for user input to arrive. Idle timers&amp;mdash;those created with &lt;code&gt;run-with-idle-timer&lt;/code&gt; (see &lt;a href=&quot;idle-timers#Idle-Timers&quot;&gt;Idle Timers&lt;/a&gt;)&amp;mdash;can run during this period. However, if &lt;var&gt;seconds&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the state of idleness remains unchanged. If Emacs is non-idle when &lt;code&gt;read-event&lt;/code&gt; is called, it remains non-idle throughout the operation of &lt;code&gt;read-event&lt;/code&gt;; if Emacs is idle (which can happen if the call happens inside an idle timer), it remains idle.</source>
          <target state="translated">If &lt;var&gt;seconds&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , Emacs is considered idle while waiting for user input to arrive. Idle timers&amp;mdash;those created with &lt;code&gt;run-with-idle-timer&lt;/code&gt; (see &lt;a href=&quot;idle-timers#Idle-Timers&quot;&gt;Idle Timers&lt;/a&gt;)&amp;mdash;can run during this period. However, if &lt;var&gt;seconds&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , the state of idleness remains unchanged. If Emacs is non-idle when &lt;code&gt;read-event&lt;/code&gt; is called, it remains non-idle throughout the operation of &lt;code&gt;read-event&lt;/code&gt; ; if Emacs is idle (which can happen if the call happens inside an idle timer), it remains idle.</target>
        </trans-unit>
        <trans-unit id="5642e33637174a8c339af0aa142ae8c3a71c46aa" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;seconds&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a number specifying the maximum time to wait for input, in seconds. If no input arrives within that time, &lt;code&gt;read-event&lt;/code&gt; stops waiting and returns &lt;code&gt;nil&lt;/code&gt;. A floating point &lt;var&gt;seconds&lt;/var&gt; means to wait for a fractional number of seconds. Some systems support only a whole number of seconds; on these systems, &lt;var&gt;seconds&lt;/var&gt; is rounded down. If &lt;var&gt;seconds&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-event&lt;/code&gt; waits as long as necessary for input to arrive.</source>
          <target state="translated">If &lt;var&gt;seconds&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it should be a number specifying the maximum time to wait for input, in seconds. If no input arrives within that time, &lt;code&gt;read-event&lt;/code&gt; stops waiting and returns &lt;code&gt;nil&lt;/code&gt; . A floating point &lt;var&gt;seconds&lt;/var&gt; means to wait for a fractional number of seconds. Some systems support only a whole number of seconds; on these systems, &lt;var&gt;seconds&lt;/var&gt; is rounded down. If &lt;var&gt;seconds&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;read-event&lt;/code&gt; waits as long as necessary for input to arrive.</target>
        </trans-unit>
        <trans-unit id="8386d9a4eefbe519440f3c3d975d045871d06db5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;separation&lt;/var&gt; is 0 and &lt;var&gt;to&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor numerically equal to &lt;var&gt;from&lt;/var&gt;, &lt;code&gt;number-sequence&lt;/code&gt; signals an error, since those arguments specify an infinite sequence.</source>
          <target state="translated">If &lt;var&gt;separation&lt;/var&gt; is 0 and &lt;var&gt;to&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor numerically equal to &lt;var&gt;from&lt;/var&gt; , &lt;code&gt;number-sequence&lt;/code&gt; signals an error, since those arguments specify an infinite sequence.</target>
        </trans-unit>
        <trans-unit id="6d92d4436bafe64db0b8bdba3d216bc11fa628fc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;separators&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the default is the value of &lt;code&gt;split-string-default-separators&lt;/code&gt; and the function behaves as if &lt;var&gt;omit-nulls&lt;/var&gt; were &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">If &lt;var&gt;separators&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the default is the value of &lt;code&gt;split-string-default-separators&lt;/code&gt; and the function behaves as if &lt;var&gt;omit-nulls&lt;/var&gt; were &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09d4f13d9281bb64e2677b4eac3ea8ecb6bf1ab5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;separators&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to &lt;code&gt;&quot;\\s-+&quot;&lt;/code&gt;, which is a regular expression that matches one or more characters with whitespace syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">If &lt;var&gt;separators&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to &lt;code&gt;&quot;\\s-+&quot;&lt;/code&gt; , which is a regular expression that matches one or more characters with whitespace syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="854fc5a8bf2a20bd3bff850b8a969c5717c1f0a2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;sequence&lt;/var&gt; is a list, &lt;code&gt;delete&lt;/code&gt; is to &lt;code&gt;delq&lt;/code&gt; as &lt;code&gt;member&lt;/code&gt; is to &lt;code&gt;memq&lt;/code&gt;: it uses &lt;code&gt;equal&lt;/code&gt; to compare elements with &lt;var&gt;object&lt;/var&gt;, like &lt;code&gt;member&lt;/code&gt;; when it finds an element that matches, it cuts the element out just as &lt;code&gt;delq&lt;/code&gt; would. As with &lt;code&gt;delq&lt;/code&gt;, you should typically use the return value by assigning it to the variable which held the original list.</source>
          <target state="translated">If &lt;var&gt;sequence&lt;/var&gt; is a list, &lt;code&gt;delete&lt;/code&gt; is to &lt;code&gt;delq&lt;/code&gt; as &lt;code&gt;member&lt;/code&gt; is to &lt;code&gt;memq&lt;/code&gt; : it uses &lt;code&gt;equal&lt;/code&gt; to compare elements with &lt;var&gt;object&lt;/var&gt; , like &lt;code&gt;member&lt;/code&gt; ; when it finds an element that matches, it cuts the element out just as &lt;code&gt;delq&lt;/code&gt; would. As with &lt;code&gt;delq&lt;/code&gt; , you should typically use the return value by assigning it to the variable which held the original list.</target>
        </trans-unit>
        <trans-unit id="f9659fb0feaec0514fe61e48c096bba52bcb7e4f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;sequence&lt;/var&gt; is empty, this function signals an error.</source>
          <target state="translated">If &lt;var&gt;sequence&lt;/var&gt; is empty, this function signals an error.</target>
        </trans-unit>
        <trans-unit id="a701d0e0b8bfabee07d5e74d36fccd0aaf23ff6d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;server-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, create a server. Otherwise, create a connection. For a stream type server, &lt;var&gt;server-flag&lt;/var&gt; may be an integer, which then specifies the length of the queue of pending connections to the server. The default queue length is 5.</source>
          <target state="translated">If &lt;var&gt;server-flag&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , create a server. Otherwise, create a connection. For a stream type server, &lt;var&gt;server-flag&lt;/var&gt; may be an integer, which then specifies the length of the queue of pending connections to the server. The default queue length is 5.</target>
        </trans-unit>
        <trans-unit id="6213d01563379e9136196a8c3dea906d973f8bea" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;set-minimum&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the new scroll amount becomes the lower bound for automatic scrolling; that is, automatic scrolling will not scroll a window to a column less than the value returned by this function. Interactive calls pass non-&lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;set-minimum&lt;/var&gt;.</source>
          <target state="translated">If &lt;var&gt;set-minimum&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , the new scroll amount becomes the lower bound for automatic scrolling; that is, automatic scrolling will not scroll a window to a column less than the value returned by this function. Interactive calls pass non- &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;set-minimum&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="cd51b1294a9e7a2e5ef38fe131e5f49b53ebe0de" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;side&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;, the new window is placed on the right of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;side&lt;/var&gt; is &lt;code&gt;left&lt;/code&gt;, the new window is placed on the left of &lt;var&gt;window&lt;/var&gt;. In both these cases, &lt;var&gt;size&lt;/var&gt; specifies a total window width, in columns.</source>
          <target state="translated">If &lt;var&gt;side&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt; , the new window is placed on the right of &lt;var&gt;window&lt;/var&gt; . If &lt;var&gt;side&lt;/var&gt; is &lt;code&gt;left&lt;/code&gt; , the new window is placed on the left of &lt;var&gt;window&lt;/var&gt; . In both these cases, &lt;var&gt;size&lt;/var&gt; specifies a total window width, in columns.</target>
        </trans-unit>
        <trans-unit id="1b71e5e555e2a363d30553ba727292f357281932" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;size&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function obeys the variables &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt; (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;). Thus, it signals an error if splitting would result in making a window smaller than those variables specify. However, a non-&lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;size&lt;/var&gt; causes those variables to be ignored; in that case, the smallest allowable window is considered to be one that has space for a text area one line tall and/or two columns wide.</source>
          <target state="translated">If &lt;var&gt;size&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , this function obeys the variables &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt; (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;). Thus, it signals an error if splitting would result in making a window smaller than those variables specify. However, a non- &lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;size&lt;/var&gt; causes those variables to be ignored; in that case, the smallest allowable window is considered to be one that has space for a text area one line tall and/or two columns wide.</target>
        </trans-unit>
        <trans-unit id="b633c9205c4f539145890a7ae6e749104bec146b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;spec-alist&lt;/var&gt; contains more than one association with the same &lt;var&gt;letter&lt;/var&gt;, the closest one to the start of the list is used.</source>
          <target state="translated">If &lt;var&gt;spec-alist&lt;/var&gt; contains more than one association with the same &lt;var&gt;letter&lt;/var&gt; , the closest one to the start of the list is used.</target>
        </trans-unit>
        <trans-unit id="ee5c4e886babc50191f48bbbcd6e8f7a70511d96" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;spec-alist&lt;/var&gt; contains more unique &lt;var&gt;letter&lt;/var&gt; keys than there are unique specification characters in &lt;var&gt;template&lt;/var&gt;, the unused keys are simply ignored.</source>
          <target state="translated">If &lt;var&gt;spec-alist&lt;/var&gt; contains more unique &lt;var&gt;letter&lt;/var&gt; keys than there are unique specification characters in &lt;var&gt;template&lt;/var&gt; , the unused keys are simply ignored.</target>
        </trans-unit>
        <trans-unit id="84f9a512be9e80fe9a56d88f0957df707399bdf9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;spec_version&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the server supports a specification prior to &amp;lsquo;</source>
          <target state="translated">If &lt;var&gt;spec_version&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , the server supports a specification prior to &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="af0dbbeb9d2f1be798ead1bbb9b5024e72bd988d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;start&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the command writes the entire buffer contents (&lt;em&gt;not&lt;/em&gt; just the accessible portion) to the file and ignores &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">If &lt;var&gt;start&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , then the command writes the entire buffer contents (&lt;em&gt;not&lt;/em&gt; just the accessible portion) to the file and ignores &lt;var&gt;end&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7e7cdef8a248c833f3e9f0975b11a5c6d1f54491" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;start&lt;/var&gt; is a string, then &lt;code&gt;write-region&lt;/code&gt; writes or appends that string, rather than text from the buffer. &lt;var&gt;end&lt;/var&gt; is ignored in this case.</source>
          <target state="translated">If &lt;var&gt;start&lt;/var&gt; is a string, then &lt;code&gt;write-region&lt;/code&gt; writes or appends that string, rather than text from the buffer. &lt;var&gt;end&lt;/var&gt; is ignored in this case.</target>
        </trans-unit>
        <trans-unit id="9f8b47e15ad68d0891e8c9b125e2797186ef0b5c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;start&lt;/var&gt; is supplied, then reading begins at index &lt;var&gt;start&lt;/var&gt; in the string (where the first character is at index 0). If you specify &lt;var&gt;end&lt;/var&gt;, then reading is forced to stop just before that index, as if the rest of the string were not there.</source>
          <target state="translated">If &lt;var&gt;start&lt;/var&gt; is supplied, then reading begins at index &lt;var&gt;start&lt;/var&gt; in the string (where the first character is at index 0). If you specify &lt;var&gt;end&lt;/var&gt; , then reading is forced to stop just before that index, as if the rest of the string were not there.</target>
        </trans-unit>
        <trans-unit id="1064524b7d7d3e8de9713f9ea7f70aea53abf953" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;state&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;start&lt;/var&gt; is assumed to be at the top level of parenthesis structure, such as the beginning of a function definition. Alternatively, you might wish to resume parsing in the middle of the structure. To do this, you must provide a &lt;var&gt;state&lt;/var&gt; argument that describes the initial status of parsing. The value returned by a previous call to &lt;code&gt;parse-partial-sexp&lt;/code&gt; will do nicely.</source>
          <target state="translated">If &lt;var&gt;state&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;start&lt;/var&gt; is assumed to be at the top level of parenthesis structure, such as the beginning of a function definition. Alternatively, you might wish to resume parsing in the middle of the structure. To do this, you must provide a &lt;var&gt;state&lt;/var&gt; argument that describes the initial status of parsing. The value returned by a previous call to &lt;code&gt;parse-partial-sexp&lt;/code&gt; will do nicely.</target>
        </trans-unit>
        <trans-unit id="1b1e965c41f20d0496aa0f65e56130346a4d517f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stderr&lt;/var&gt; is a buffer, Emacs will create a pipe process, the &lt;em&gt;standard error process&lt;/em&gt;. This process will have the default filter (see &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;), sentinel (see &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt;), and coding systems (see &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;Default Coding Systems&lt;/a&gt;). On the other hand, it will use &lt;var&gt;query-flag&lt;/var&gt; as its query-on-exit flag (see &lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;Query Before Exit&lt;/a&gt;). It will be associated with the &lt;var&gt;stderr&lt;/var&gt; buffer (see &lt;a href=&quot;process-buffers#Process-Buffers&quot;&gt;Process Buffers&lt;/a&gt;) and send its output (which is the standard error of the main process) there.</source>
          <target state="translated">If &lt;var&gt;stderr&lt;/var&gt; is a buffer, Emacs will create a pipe process, the &lt;em&gt;standard error process&lt;/em&gt;. This process will have the default filter (see &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;), sentinel (see &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt;), and coding systems (see &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;Default Coding Systems&lt;/a&gt;). On the other hand, it will use &lt;var&gt;query-flag&lt;/var&gt; as its query-on-exit flag (see &lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;Query Before Exit&lt;/a&gt;). It will be associated with the &lt;var&gt;stderr&lt;/var&gt; buffer (see &lt;a href=&quot;process-buffers#Process-Buffers&quot;&gt;Process Buffers&lt;/a&gt;) and send its output (which is the standard error of the main process) there.</target>
        </trans-unit>
        <trans-unit id="a5e62af174b242025e0fdb63aecdd440c285a2c7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stderr&lt;/var&gt; is a pipe process, Emacs will use it as standard error process for the new process.</source>
          <target state="translated">If &lt;var&gt;stderr&lt;/var&gt; is a pipe process, Emacs will use it as standard error process for the new process.</target>
        </trans-unit>
        <trans-unit id="ed5602c6572f68ec28cdd36515ff160efea43149" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stopped&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, start the network connection or server in the stopped state.</source>
          <target state="translated">If &lt;var&gt;stopped&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , start the network connection or server in the stopped state.</target>
        </trans-unit>
        <trans-unit id="a8f1e9ac512b8b8aa763432c8aa6436fd5cc736c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stopped&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, start the process in the stopped state. In the stopped state, a pipe process does not accept incoming data, but you can send outgoing data. The stopped state is set by &lt;code&gt;stop-process&lt;/code&gt; and cleared by &lt;code&gt;continue-process&lt;/code&gt; (see &lt;a href=&quot;signals-to-processes#Signals-to-Processes&quot;&gt;Signals to Processes&lt;/a&gt;).</source>
          <target state="translated">If &lt;var&gt;stopped&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , start the process in the stopped state. In the stopped state, a pipe process does not accept incoming data, but you can send outgoing data. The stopped state is set by &lt;code&gt;stop-process&lt;/code&gt; and cleared by &lt;code&gt;continue-process&lt;/code&gt; (see &lt;a href=&quot;signals-to-processes#Signals-to-Processes&quot;&gt;Signals to Processes&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="486bdcab2a6b255a0b57fc7fb8ae9ec92b88d963" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string-or-char&lt;/var&gt; is a string, this function capitalizes the initials of the words in &lt;var&gt;string-or-char&lt;/var&gt;, without altering any letters other than the initials. It returns a new string whose contents are a copy of &lt;var&gt;string-or-char&lt;/var&gt;, in which each word has had its initial letter converted to upper case.</source>
          <target state="translated">If &lt;var&gt;string-or-char&lt;/var&gt; is a string, this function capitalizes the initials of the words in &lt;var&gt;string-or-char&lt;/var&gt; , without altering any letters other than the initials. It returns a new string whose contents are a copy of &lt;var&gt;string-or-char&lt;/var&gt; , in which each word has had its initial letter converted to upper case.</target>
        </trans-unit>
        <trans-unit id="238dd0f09c59f6b49fbe1e9c6ba5d5c043f84e1f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; does not reach &lt;var&gt;width&lt;/var&gt;, then the result ends where &lt;var&gt;string&lt;/var&gt; ends. If one multi-column character in &lt;var&gt;string&lt;/var&gt; extends across the column &lt;var&gt;width&lt;/var&gt;, that character is not included in the result. Thus, the result can fall short of &lt;var&gt;width&lt;/var&gt; but cannot go beyond it.</source>
          <target state="translated">If &lt;var&gt;string&lt;/var&gt; does not reach &lt;var&gt;width&lt;/var&gt; , then the result ends where &lt;var&gt;string&lt;/var&gt; ends. If one multi-column character in &lt;var&gt;string&lt;/var&gt; extends across the column &lt;var&gt;width&lt;/var&gt; , that character is not included in the result. Thus, the result can fall short of &lt;var&gt;width&lt;/var&gt; but cannot go beyond it.</target>
        </trans-unit>
        <trans-unit id="b7faa9f933af4a311232e27474b1f916a7348050" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; is a multibyte string, this function returns &lt;var&gt;string&lt;/var&gt; itself. Otherwise, it returns a new string with the same bytes as &lt;var&gt;string&lt;/var&gt;, but treating each multibyte sequence as one character. This means that the value may have fewer characters than &lt;var&gt;string&lt;/var&gt; has. If a byte sequence in &lt;var&gt;string&lt;/var&gt; is invalid as a multibyte representation of a single character, each byte in the sequence is treated as a raw 8-bit byte. The newly-created string contains no text properties.</source>
          <target state="translated">If &lt;var&gt;string&lt;/var&gt; is a multibyte string, this function returns &lt;var&gt;string&lt;/var&gt; itself. Otherwise, it returns a new string with the same bytes as &lt;var&gt;string&lt;/var&gt; , but treating each multibyte sequence as one character. This means that the value may have fewer characters than &lt;var&gt;string&lt;/var&gt; has. If a byte sequence in &lt;var&gt;string&lt;/var&gt; is invalid as a multibyte representation of a single character, each byte in the sequence is treated as a raw 8-bit byte. The newly-created string contains no text properties.</target>
        </trans-unit>
        <trans-unit id="4b608a2f2f52718650c1a44a54ce290435148dc4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; is already a unibyte string, this function returns &lt;var&gt;string&lt;/var&gt; itself. Otherwise, it returns a new string with the same bytes as &lt;var&gt;string&lt;/var&gt;, but treating each byte as a separate character (so that the value may have more characters than &lt;var&gt;string&lt;/var&gt;); as an exception, each eight-bit character representing a raw byte is converted into a single byte. The newly-created string contains no text properties.</source>
          <target state="translated">If &lt;var&gt;string&lt;/var&gt; is already a unibyte string, this function returns &lt;var&gt;string&lt;/var&gt; itself. Otherwise, it returns a new string with the same bytes as &lt;var&gt;string&lt;/var&gt; , but treating each byte as a separate character (so that the value may have more characters than &lt;var&gt;string&lt;/var&gt; ); as an exception, each eight-bit character representing a raw byte is converted into a single byte. The newly-created string contains no text properties.</target>
        </trans-unit>
        <trans-unit id="cc1e8a34915dedfac1b19a6d45f70ebc384f6e81" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, its characters are sent to Emacs&amp;rsquo;s superior shell, to be read as terminal input. The characters in &lt;var&gt;string&lt;/var&gt; are not echoed by the superior shell; only the results appear.</source>
          <target state="translated">If &lt;var&gt;string&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , its characters are sent to Emacs&amp;rsquo;s superior shell, to be read as terminal input. The characters in &lt;var&gt;string&lt;/var&gt; are not echoed by the superior shell; only the results appear.</target>
        </trans-unit>
        <trans-unit id="38e099f5f28342bbc774d61a146dfdaae0efdaba" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;strings&lt;/var&gt; is the empty list, the return value is a regexp that never matches anything.</source>
          <target state="translated">If &lt;var&gt;strings&lt;/var&gt; is the empty list, the return value is a regexp that never matches anything.</target>
        </trans-unit>
        <trans-unit id="97e5f295c2cdf3fef7745bcc83f6d9310efe00b9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;subexp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to replace just subexpression number &lt;var&gt;subexp&lt;/var&gt; of the regexp that was matched, not the entire match. For example, after matching &amp;lsquo;</source>
          <target state="translated">If &lt;var&gt;subexp&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , that says to replace just subexpression number &lt;var&gt;subexp&lt;/var&gt; of the regexp that was matched, not the entire match. For example, after matching &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="17e6c14619a48c15c81a8a104a358917ec58b2f5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;subtype&lt;/var&gt; has the &lt;code&gt;char-table-extra-slots&lt;/code&gt; symbol property, that specifies the number of extra slots in the char-table. This should be an integer between 0 and 10; otherwise, &lt;code&gt;make-char-table&lt;/code&gt; raises an error. If &lt;var&gt;subtype&lt;/var&gt; has no &lt;code&gt;char-table-extra-slots&lt;/code&gt; symbol property (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;), the char-table has no extra slots.</source>
          <target state="translated">If &lt;var&gt;subtype&lt;/var&gt; has the &lt;code&gt;char-table-extra-slots&lt;/code&gt; symbol property, that specifies the number of extra slots in the char-table. This should be an integer between 0 and 10; otherwise, &lt;code&gt;make-char-table&lt;/code&gt; raises an error. If &lt;var&gt;subtype&lt;/var&gt; has no &lt;code&gt;char-table-extra-slots&lt;/code&gt; symbol property (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;), the char-table has no extra slots.</target>
        </trans-unit>
        <trans-unit id="e9e41abd138984c7d2eb029448da7b05b35bf5d3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;suffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;make-temp-file&lt;/code&gt; adds it at the end of the file name.</source>
          <target state="translated">If &lt;var&gt;suffix&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;make-temp-file&lt;/code&gt; adds it at the end of the file name.</target>
        </trans-unit>
        <trans-unit id="b0cb3b361bbbcfca5af1fce7182f5c264d301f0b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; has a buffer-local binding in the current buffer, &lt;code&gt;defvar&lt;/code&gt; acts on the default value, which is buffer-independent, rather than the buffer-local binding. It sets the default value if the default value is void. See &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</source>
          <target state="translated">If &lt;var&gt;symbol&lt;/var&gt; has a buffer-local binding in the current buffer, &lt;code&gt;defvar&lt;/code&gt; acts on the default value, which is buffer-independent, rather than the buffer-local binding. It sets the default value if the default value is void. See &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ef082f86ace32c0314e201d0be908b051f5492a3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; has a dynamic local binding, &lt;code&gt;makunbound&lt;/code&gt; voids the current binding, and this voidness lasts only as long as the local binding is in effect. Afterwards, the previously shadowed local or global binding is reexposed; then the variable will no longer be void, unless the reexposed binding is void too.</source>
          <target state="translated">If &lt;var&gt;symbol&lt;/var&gt; has a dynamic local binding, &lt;code&gt;makunbound&lt;/code&gt; voids the current binding, and this voidness lasts only as long as the local binding is in effect. Afterwards, the previously shadowed local or global binding is reexposed; then the variable will no longer be void, unless the reexposed binding is void too.</target>
        </trans-unit>
        <trans-unit id="0b4b053a21b46acafcc9fca3c5b527939c88adfd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is already lexically bound (e.g., if the &lt;code&gt;defvar&lt;/code&gt; form occurs in a &lt;code&gt;let&lt;/code&gt; form with lexical binding enabled), then &lt;code&gt;defvar&lt;/code&gt; sets the dynamic value. The lexical binding remains in effect until its binding construct exits. See &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;.</source>
          <target state="translated">If &lt;var&gt;symbol&lt;/var&gt; is already lexically bound (e.g., if the &lt;code&gt;defvar&lt;/code&gt; form occurs in a &lt;code&gt;let&lt;/code&gt; form with lexical binding enabled), then &lt;code&gt;defvar&lt;/code&gt; sets the dynamic value. The lexical binding remains in effect until its binding construct exits. See &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="02b9b71c4c64cf72e491274e76972257c5144331" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a symbol; then this macro defines &lt;var&gt;symbol&lt;/var&gt; as a function for popping up the menu (see &lt;a href=&quot;pop_002dup-menus#Pop_002dUp-Menus&quot;&gt;Pop-Up Menus&lt;/a&gt;), with &lt;var&gt;doc&lt;/var&gt; as its documentation string. &lt;var&gt;symbol&lt;/var&gt; should not be quoted.</source>
          <target state="translated">If &lt;var&gt;symbol&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it should be a symbol; then this macro defines &lt;var&gt;symbol&lt;/var&gt; as a function for popping up the menu (see &lt;a href=&quot;pop_002dup-menus#Pop_002dUp-Menus&quot;&gt;Pop-Up Menus&lt;/a&gt;), with &lt;var&gt;doc&lt;/var&gt; as its documentation string. &lt;var&gt;symbol&lt;/var&gt; should not be quoted.</target>
        </trans-unit>
        <trans-unit id="981ad96cac5032c5ebab6758c7ff3993a6216ce8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is not actually a symbol, a &lt;code&gt;wrong-type-argument&lt;/code&gt; error is signaled.</source>
          <target state="translated">If &lt;var&gt;symbol&lt;/var&gt; is not actually a symbol, a &lt;code&gt;wrong-type-argument&lt;/code&gt; error is signaled.</target>
        </trans-unit>
        <trans-unit id="ccbbbbbaec743c0719bb95b5ca9b992a3beee9f1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is part of a sequencing pattern &lt;var&gt;seqpat&lt;/var&gt; (e.g., by using &lt;code&gt;and&lt;/code&gt;, below), the binding is also available to the portion of &lt;var&gt;seqpat&lt;/var&gt; following the appearance of &lt;var&gt;symbol&lt;/var&gt;. This usage has some caveats, see &lt;a href=&quot;#pcase_002dsymbol_002dcaveats&quot;&gt;caveats&lt;/a&gt;.</source>
          <target state="translated">If &lt;var&gt;symbol&lt;/var&gt; is part of a sequencing pattern &lt;var&gt;seqpat&lt;/var&gt; (e.g., by using &lt;code&gt;and&lt;/code&gt; , below), the binding is also available to the portion of &lt;var&gt;seqpat&lt;/var&gt; following the appearance of &lt;var&gt;symbol&lt;/var&gt; . This usage has some caveats, see &lt;a href=&quot;#pcase_002dsymbol_002dcaveats&quot;&gt;caveats&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fcac716a2ce0d702099f5bd80357cf72ea94c32f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s definition is a byte-code function object, &lt;code&gt;byte-compile&lt;/code&gt; does nothing and returns &lt;code&gt;nil&lt;/code&gt;. It does not compile the symbol&amp;rsquo;s definition again, since the original (non-compiled) code has already been replaced in the symbol&amp;rsquo;s function cell by the byte-compiled code.</source>
          <target state="translated">If &lt;var&gt;symbol&lt;/var&gt; &amp;rsquo;s definition is a byte-code function object, &lt;code&gt;byte-compile&lt;/code&gt; does nothing and returns &lt;code&gt;nil&lt;/code&gt; . It does not compile the symbol&amp;rsquo;s definition again, since the original (non-compiled) code has already been replaced in the symbol&amp;rsquo;s function cell by the byte-compiled code.</target>
        </trans-unit>
        <trans-unit id="5f27a90dd8bffeddda02c9a0142776a45ffe4f38" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;syntax&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the return value is &lt;code&gt;nil&lt;/code&gt;. This is so that the expression</source>
          <target state="translated">If &lt;var&gt;syntax&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , the return value is &lt;code&gt;nil&lt;/code&gt; . This is so that the expression</target>
        </trans-unit>
        <trans-unit id="dc45e1d679498d8d5df720f51ef1aa38cdbd5542" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;syntaxes&lt;/var&gt; starts with &amp;lsquo;</source>
          <target state="translated">If &lt;var&gt;syntaxes&lt;/var&gt; starts with &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e2426d81f8b8ba08be26cbd86258aed2310c30a8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;target&lt;/var&gt; is a relative file name, the resulting symbolic link is interpreted relative to the directory containing the symbolic link. See &lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;Relative File Names&lt;/a&gt;.</source>
          <target state="translated">If &lt;var&gt;target&lt;/var&gt; is a relative file name, the resulting symbolic link is interpreted relative to the directory containing the symbolic link. See &lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;Relative File Names&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="eac7052b536752164e12dcf27b7eff2371525b90" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;template&lt;/var&gt; contains the same specification character more than once, then the same &lt;var&gt;replacement&lt;/var&gt; found in &lt;var&gt;spec-alist&lt;/var&gt; is used as a basis for all of that character&amp;rsquo;s substitutions.</source>
          <target state="translated">If &lt;var&gt;template&lt;/var&gt; contains the same specification character more than once, then the same &lt;var&gt;replacement&lt;/var&gt; found in &lt;var&gt;spec-alist&lt;/var&gt; is used as a basis for all of that character&amp;rsquo;s substitutions.</target>
        </trans-unit>
        <trans-unit id="bcaa3c59d1bd107d501986d7c09c4e8f2f0ecf78" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;terminal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame&amp;rsquo;s terminal. &lt;var&gt;terminal&lt;/var&gt; can also be a frame, meaning that frame&amp;rsquo;s terminal.</source>
          <target state="translated">If &lt;var&gt;terminal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to the selected frame&amp;rsquo;s terminal. &lt;var&gt;terminal&lt;/var&gt; can also be a frame, meaning that frame&amp;rsquo;s terminal.</target>
        </trans-unit>
        <trans-unit id="d820257dd4d95ef64be75ea9b9ab576f34b6841f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;text&lt;/var&gt; is a string, &lt;code&gt;make-temp-file&lt;/code&gt; inserts it in the file.</source>
          <target state="translated">If &lt;var&gt;text&lt;/var&gt; is a string, &lt;code&gt;make-temp-file&lt;/code&gt; inserts it in the file.</target>
        </trans-unit>
        <trans-unit id="47f916373b85444012892bbaa32e2ee85c921af1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;condition-wait&lt;/code&gt;, this returns the condition variable.</source>
          <target state="translated">If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;condition-wait&lt;/code&gt; , this returns the condition variable.</target>
        </trans-unit>
        <trans-unit id="67559f5e436fb644e7082eeec37b4136a62c6fce" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;mutex-lock&lt;/code&gt;, this returns the mutex.</source>
          <target state="translated">If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;mutex-lock&lt;/code&gt; , this returns the mutex.</target>
        </trans-unit>
        <trans-unit id="d148be74ea38df9497915eeb8e705ef9a145eb3f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;thread-join&lt;/code&gt;, this returns the thread for which it is waiting.</source>
          <target state="translated">If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;thread-join&lt;/code&gt; , this returns the thread for which it is waiting.</target>
        </trans-unit>
        <trans-unit id="5f7bc097b53fcf1da308ff7c97c2dcc898251390" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is the main thread, the signal is not propagated there. Instead, it is shown as message in the main thread.</source>
          <target state="translated">If &lt;var&gt;thread&lt;/var&gt; is the main thread, the signal is not propagated there. Instead, it is shown as message in the main thread.</target>
        </trans-unit>
        <trans-unit id="2587d4a2a4e9483d470c237279298811c9e7a8fc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; has higher precision than nanoseconds, then this function truncates it to nanosecond precision towards negative infinity. This function signals an error if &lt;var&gt;time&lt;/var&gt; (truncated to nanoseconds) cannot be represented by &lt;code&gt;struct timespec&lt;/code&gt;. For example, if &lt;code&gt;time_t&lt;/code&gt; is a 32-bit integer type, then a &lt;var&gt;time&lt;/var&gt; value of ten billion seconds would signal an error, but a &lt;var&gt;time&lt;/var&gt; value of 600 picoseconds would get truncated to zero.</source>
          <target state="translated">If &lt;var&gt;time&lt;/var&gt; has higher precision than nanoseconds, then this function truncates it to nanosecond precision towards negative infinity. This function signals an error if &lt;var&gt;time&lt;/var&gt; (truncated to nanoseconds) cannot be represented by &lt;code&gt;struct timespec&lt;/code&gt; . For example, if &lt;code&gt;time_t&lt;/code&gt; is a 32-bit integer type, then a &lt;var&gt;time&lt;/var&gt; value of ten billion seconds would signal an error, but a &lt;var&gt;time&lt;/var&gt; value of 600 picoseconds would get truncated to zero.</target>
        </trans-unit>
        <trans-unit id="fbf56cdaf0c7a03f2b2dfc154c9d986d9e169a52" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; is infinite or a NaN, this function signals an error. Otherwise, if &lt;var&gt;time&lt;/var&gt; cannot be represented exactly, conversion truncates it toward minus infinity. When &lt;var&gt;form&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, conversion is always exact so no truncation occurs, and the returned clock resolution is no less than that of &lt;var&gt;time&lt;/var&gt;. By way of contrast, &lt;code&gt;float-time&lt;/code&gt; can convert any Lisp time value without signaling an error, although the result might not be exact. See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;.</source>
          <target state="translated">If &lt;var&gt;time&lt;/var&gt; is infinite or a NaN, this function signals an error. Otherwise, if &lt;var&gt;time&lt;/var&gt; cannot be represented exactly, conversion truncates it toward minus infinity. When &lt;var&gt;form&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; , conversion is always exact so no truncation occurs, and the returned clock resolution is no less than that of &lt;var&gt;time&lt;/var&gt; . By way of contrast, &lt;code&gt;float-time&lt;/code&gt; can convert any Lisp time value without signaling an error, although the result might not be exact. See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3bf007ce5f322c4636ceb949ca3a999685c3b78c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor an integer flag returned by &lt;code&gt;visited-file-modtime&lt;/code&gt;, it should be a Lisp time value (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">If &lt;var&gt;time&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor an integer flag returned by &lt;code&gt;visited-file-modtime&lt;/code&gt; , it should be a Lisp time value (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="51ed1963d031e695fe67ebb2febf4852eab7b79e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then this function gives the new file the same last-modified time that the old one has. (This works on only some operating systems.) If setting the time gets an error, &lt;code&gt;copy-file&lt;/code&gt; signals a &lt;code&gt;file-date-error&lt;/code&gt; error. In an interactive call, a prefix argument specifies a non-&lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;time&lt;/var&gt;.</source>
          <target state="translated">If &lt;var&gt;time&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then this function gives the new file the same last-modified time that the old one has. (This works on only some operating systems.) If setting the time gets an error, &lt;code&gt;copy-file&lt;/code&gt; signals a &lt;code&gt;file-date-error&lt;/code&gt; error. In an interactive call, a prefix argument specifies a non- &lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;time&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="faea1fea326683eb4563aaf16a9ff19b6bc0c76c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;to-column&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be an integer specifying the number of columns of indentation; then this function gives each line exactly that much indentation, by either adding or deleting whitespace.</source>
          <target state="translated">If &lt;var&gt;to-column&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it should be an integer specifying the number of columns of indentation; then this function gives each line exactly that much indentation, by either adding or deleting whitespace.</target>
        </trans-unit>
        <trans-unit id="6f6fa639431eb645cc79363b3a76cb55f7941e29" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;to-fn&lt;/var&gt; is a function, it is called with three arguments: &lt;var&gt;begin&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, which specify the part of the buffer it should convert, and &lt;var&gt;buffer&lt;/var&gt;, which specifies which buffer. There are two ways it can do the conversion:</source>
          <target state="translated">If &lt;var&gt;to-fn&lt;/var&gt; is a function, it is called with three arguments: &lt;var&gt;begin&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; , which specify the part of the buffer it should convert, and &lt;var&gt;buffer&lt;/var&gt; , which specifies which buffer. There are two ways it can do the conversion:</target>
        </trans-unit>
        <trans-unit id="81fd781d39eec7ea3f46b072e42d9c27a2a64fee" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;to-fn&lt;/var&gt; is a string, it is a shell command; Emacs runs the command as a filter to perform the conversion.</source>
          <target state="translated">If &lt;var&gt;to-fn&lt;/var&gt; is a string, it is a shell command; Emacs runs the command as a filter to perform the conversion.</target>
        </trans-unit>
        <trans-unit id="e6bfd27da3325d8ff754d2a572396684f54008e8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;tty&lt;/var&gt; is already suspended, this function does nothing.</source>
          <target state="translated">If &lt;var&gt;tty&lt;/var&gt; is already suspended, this function does nothing.</target>
        </trans-unit>
        <trans-unit id="cee74f41416cc96f2a24289ecaaaa869a1e44796" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;tty&lt;/var&gt; specifies a terminal device used by Emacs, this function relinquishes the device and restores it to its prior state. Frames that used the device continue to exist, but are not updated and Emacs doesn&amp;rsquo;t read input from them. &lt;var&gt;tty&lt;/var&gt; can be a terminal object, a frame (meaning the terminal for that frame), or &lt;code&gt;nil&lt;/code&gt; (meaning the terminal for the selected frame). See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">If &lt;var&gt;tty&lt;/var&gt; specifies a terminal device used by Emacs, this function relinquishes the device and restores it to its prior state. Frames that used the device continue to exist, but are not updated and Emacs doesn&amp;rsquo;t read input from them. &lt;var&gt;tty&lt;/var&gt; can be a terminal object, a frame (meaning the terminal for that frame), or &lt;code&gt;nil&lt;/code&gt; (meaning the terminal for the selected frame). See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="866dc9dc6319fc85a323bd658b6535cb79305c35" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;uid&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it should be a number (a user-id) or a string (a login name). Then &lt;code&gt;user-full-name&lt;/code&gt; returns the full name corresponding to that user-id or login name. If you specify a user-id or login name that isn&amp;rsquo;t defined, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">If &lt;var&gt;uid&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then it should be a number (a user-id) or a string (a login name). Then &lt;code&gt;user-full-name&lt;/code&gt; returns the full name corresponding to that user-id or login name. If you specify a user-id or login name that isn&amp;rsquo;t defined, it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99a0d9fdada8443612f364827def2de927d53fd2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;undo&lt;/var&gt; is present and non-&lt;code&gt;nil&lt;/code&gt;, it is a function that will be called by &lt;code&gt;yank-pop&lt;/code&gt; to undo the insertion of the current object. It is called with two arguments, the start and end of the current region. &lt;var&gt;function&lt;/var&gt; can set &lt;code&gt;yank-undo-function&lt;/code&gt; to override the &lt;var&gt;undo&lt;/var&gt; value.</source>
          <target state="translated">If &lt;var&gt;undo&lt;/var&gt; is present and non- &lt;code&gt;nil&lt;/code&gt; , it is a function that will be called by &lt;code&gt;yank-pop&lt;/code&gt; to undo the insertion of the current object. It is called with two arguments, the start and end of the current region. &lt;var&gt;function&lt;/var&gt; can set &lt;code&gt;yank-undo-function&lt;/code&gt; to override the &lt;var&gt;undo&lt;/var&gt; value.</target>
        </trans-unit>
        <trans-unit id="c7fa8e08868183dc2249f0e3555b97870b32e09c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;update&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;window-end&lt;/code&gt; always returns an up-to-date value for where display ends, based on the current &lt;code&gt;window-start&lt;/code&gt; value. If a previously saved value of that position is still valid, &lt;code&gt;window-end&lt;/code&gt; returns that value; otherwise it computes the correct value by scanning the buffer text.</source>
          <target state="translated">If &lt;var&gt;update&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;window-end&lt;/code&gt; always returns an up-to-date value for where display ends, based on the current &lt;code&gt;window-start&lt;/code&gt; value. If a previously saved value of that position is still valid, &lt;code&gt;window-end&lt;/code&gt; returns that value; otherwise it computes the correct value by scanning the buffer text.</target>
        </trans-unit>
        <trans-unit id="83f961012b906889ca57a51ce9b30370f12471fe" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;use-external-socket&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; use any sockets passed to Emacs on invocation instead of allocating one. This is used by the Emacs server code to allow on-demand socket activation. If Emacs wasn&amp;rsquo;t passed a socket, this option is silently ignored.</source>
          <target state="translated">If &lt;var&gt;use-external-socket&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; use any sockets passed to Emacs on invocation instead of allocating one. This is used by the Emacs server code to allow on-demand socket activation. If Emacs wasn&amp;rsquo;t passed a socket, this option is silently ignored.</target>
        </trans-unit>
        <trans-unit id="6a7c7b9022969765745e412569e605585ab060b3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value1&lt;/var&gt; is a relative value for the face attribute &lt;var&gt;attribute&lt;/var&gt;, returns it merged with the underlying value &lt;var&gt;value2&lt;/var&gt;; otherwise, if &lt;var&gt;value1&lt;/var&gt; is an absolute value for the face attribute &lt;var&gt;attribute&lt;/var&gt;, returns &lt;var&gt;value1&lt;/var&gt; unchanged.</source>
          <target state="translated">If &lt;var&gt;value1&lt;/var&gt; is a relative value for the face attribute &lt;var&gt;attribute&lt;/var&gt; , returns it merged with the underlying value &lt;var&gt;value2&lt;/var&gt; ; otherwise, if &lt;var&gt;value1&lt;/var&gt; is an absolute value for the face attribute &lt;var&gt;attribute&lt;/var&gt; , returns &lt;var&gt;value1&lt;/var&gt; unchanged.</target>
        </trans-unit>
        <trans-unit id="1501c691e888db9ec6ebe0af2b4f6a762c79934d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value&lt;/var&gt; is specified, and &lt;var&gt;symbol&lt;/var&gt; is void (i.e., it has no dynamically bound value; see &lt;a href=&quot;void-variables#Void-Variables&quot;&gt;Void Variables&lt;/a&gt;), then &lt;var&gt;value&lt;/var&gt; is evaluated and &lt;var&gt;symbol&lt;/var&gt; is set to the result. But if &lt;var&gt;symbol&lt;/var&gt; is not void, &lt;var&gt;value&lt;/var&gt; is not evaluated, and &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value is left unchanged. If &lt;var&gt;value&lt;/var&gt; is omitted, the value of &lt;var&gt;symbol&lt;/var&gt; is not changed in any case.</source>
          <target state="translated">If &lt;var&gt;value&lt;/var&gt; is specified, and &lt;var&gt;symbol&lt;/var&gt; is void (i.e., it has no dynamically bound value; see &lt;a href=&quot;void-variables#Void-Variables&quot;&gt;Void Variables&lt;/a&gt;), then &lt;var&gt;value&lt;/var&gt; is evaluated and &lt;var&gt;symbol&lt;/var&gt; is set to the result. But if &lt;var&gt;symbol&lt;/var&gt; is not void, &lt;var&gt;value&lt;/var&gt; is not evaluated, and &lt;var&gt;symbol&lt;/var&gt; &amp;rsquo;s value is left unchanged. If &lt;var&gt;value&lt;/var&gt; is omitted, the value of &lt;var&gt;symbol&lt;/var&gt; is not changed in any case.</target>
        </trans-unit>
        <trans-unit id="081b95c700fe775f26956ab6db394efc7894ffdb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;var&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means no variable is bound. Then the error symbol and associated data are not available to the handler.</source>
          <target state="translated">If &lt;var&gt;var&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , that means no variable is bound. Then the error symbol and associated data are not available to the handler.</target>
        </trans-unit>
        <trans-unit id="6cf26c5d8c1fc1e03f7659c51c2167b19849253e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;variable&lt;/var&gt; does not have a default value, then calling this command will give it a default value of &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;variable&lt;/var&gt; already has a default value, that value remains unchanged. Subsequently calling &lt;code&gt;makunbound&lt;/code&gt; on &lt;var&gt;variable&lt;/var&gt; will result in a void buffer-local value and leave the default value unaffected.</source>
          <target state="translated">If &lt;var&gt;variable&lt;/var&gt; does not have a default value, then calling this command will give it a default value of &lt;code&gt;nil&lt;/code&gt; . If &lt;var&gt;variable&lt;/var&gt; already has a default value, that value remains unchanged. Subsequently calling &lt;code&gt;makunbound&lt;/code&gt; on &lt;var&gt;variable&lt;/var&gt; will result in a void buffer-local value and leave the default value unaffected.</target>
        </trans-unit>
        <trans-unit id="9680817196d72f27e9d13cbb6b1d48bfec334e08" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visible-ok&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;other-buffer&lt;/code&gt; avoids returning a buffer visible in any window on any visible frame, except as a last resort. If &lt;var&gt;visible-ok&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it does not matter whether a buffer is displayed somewhere or not.</source>
          <target state="translated">If &lt;var&gt;visible-ok&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;other-buffer&lt;/code&gt; avoids returning a buffer visible in any window on any visible frame, except as a last resort. If &lt;var&gt;visible-ok&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then it does not matter whether a buffer is displayed somewhere or not.</target>
        </trans-unit>
        <trans-unit id="6f11bdf42f1d530cd96bae1b60625343f5524e02" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visit&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then Emacs establishes an association between the buffer and the file: the buffer is then visiting that file. It also sets the last file modification time for the current buffer to &lt;var&gt;filename&lt;/var&gt;&amp;rsquo;s modtime, and marks the buffer as not modified. This feature is used by &lt;code&gt;save-buffer&lt;/code&gt;, but you probably should not use it yourself.</source>
          <target state="translated">If &lt;var&gt;visit&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; , then Emacs establishes an association between the buffer and the file: the buffer is then visiting that file. It also sets the last file modification time for the current buffer to &lt;var&gt;filename&lt;/var&gt; &amp;rsquo;s modtime, and marks the buffer as not modified. This feature is used by &lt;code&gt;save-buffer&lt;/code&gt; , but you probably should not use it yourself.</target>
        </trans-unit>
        <trans-unit id="246e4d1c6e6afb943ca327caf9e64f83136f20aa" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visit&lt;/var&gt; is a string, it specifies the file name to visit. This way, you can write the data to one file (&lt;var&gt;filename&lt;/var&gt;) while recording the buffer as visiting another file (&lt;var&gt;visit&lt;/var&gt;). The argument &lt;var&gt;visit&lt;/var&gt; is used in the echo area message and also for file locking; &lt;var&gt;visit&lt;/var&gt; is stored in &lt;code&gt;buffer-file-name&lt;/code&gt;. This feature is used to implement &lt;code&gt;file-precious-flag&lt;/code&gt;; don&amp;rsquo;t use it yourself unless you really know what you&amp;rsquo;re doing.</source>
          <target state="translated">If &lt;var&gt;visit&lt;/var&gt; is a string, it specifies the file name to visit. This way, you can write the data to one file ( &lt;var&gt;filename&lt;/var&gt; ) while recording the buffer as visiting another file ( &lt;var&gt;visit&lt;/var&gt; ). The argument &lt;var&gt;visit&lt;/var&gt; is used in the echo area message and also for file locking; &lt;var&gt;visit&lt;/var&gt; is stored in &lt;code&gt;buffer-file-name&lt;/code&gt; . This feature is used to implement &lt;code&gt;file-precious-flag&lt;/code&gt; ; don&amp;rsquo;t use it yourself unless you really know what you&amp;rsquo;re doing.</target>
        </trans-unit>
        <trans-unit id="6b4a4b3a70e1e0d0b1f3aa6c9e23277f30082674" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function additionally marks the buffer as unmodified and sets up various fields in the buffer so that it is visiting the file &lt;var&gt;filename&lt;/var&gt;: these include the buffer&amp;rsquo;s visited file name and its last save file modtime. This feature is used by &lt;code&gt;find-file-noselect&lt;/code&gt; and you probably should not use it yourself.</source>
          <target state="translated">If &lt;var&gt;visit&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , this function additionally marks the buffer as unmodified and sets up various fields in the buffer so that it is visiting the file &lt;var&gt;filename&lt;/var&gt; : these include the buffer&amp;rsquo;s visited file name and its last save file modtime. This feature is used by &lt;code&gt;find-file-noselect&lt;/code&gt; and you probably should not use it yourself.</target>
        </trans-unit>
        <trans-unit id="ec5dbce89952423fb67e0972aa3a58ef96e350a3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;warn&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then this function issues a warning if an auto-save file exists and is more recent than the visited file.</source>
          <target state="translated">If &lt;var&gt;warn&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then this function issues a warning if an auto-save file exists and is more recent than the visited file.</target>
        </trans-unit>
        <trans-unit id="b46d4acb4cf7b9dce319e3d320c437f4387c6047" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key-and-value&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt;, both the key and the value must be live in order to preserve the association. Thus, the hash table does not protect either keys or values from garbage collection; if either one is collected as garbage, that removes the association.</source>
          <target state="translated">If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key-and-value&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt; , both the key and the value must be live in order to preserve the association. Thus, the hash table does not protect either keys or values from garbage collection; if either one is collected as garbage, that removes the association.</target>
        </trans-unit>
        <trans-unit id="bc5451feb70a80d59c655a33edf898614731b08d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key-or-value&lt;/code&gt;, either the key or the value can preserve the association. Thus, associations are removed from the hash table when both their key and value would be collected as garbage (if not for references from weak hash tables).</source>
          <target state="translated">If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key-or-value&lt;/code&gt; , either the key or the value can preserve the association. Thus, associations are removed from the hash table when both their key and value would be collected as garbage (if not for references from weak hash tables).</target>
        </trans-unit>
        <trans-unit id="ae9e60e0603a0552eb11d49586c0ad595cdd8b54" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;value&lt;/code&gt;, then the hash table does not prevent values from being collected as garbage (if they are not referenced anywhere else); if a particular value does get collected, the corresponding association is removed from the hash table.</source>
          <target state="translated">If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;value&lt;/code&gt; , then the hash table does not prevent values from being collected as garbage (if they are not referenced anywhere else); if a particular value does get collected, the corresponding association is removed from the hash table.</target>
        </trans-unit>
        <trans-unit id="62cef1d954d6fb85b755e1ce780adbcbe0be9175" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;width&lt;/var&gt; is a number, it specifies that the space width should be &lt;var&gt;width&lt;/var&gt; times the normal character width. &lt;var&gt;width&lt;/var&gt; can also be a &lt;em&gt;pixel width&lt;/em&gt; specification (see &lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Pixel Specification&lt;/a&gt;).</source>
          <target state="translated">If &lt;var&gt;width&lt;/var&gt; is a number, it specifies that the space width should be &lt;var&gt;width&lt;/var&gt; times the normal character width. &lt;var&gt;width&lt;/var&gt; can also be a &lt;em&gt;pixel width&lt;/em&gt; specification (see &lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Pixel Specification&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="2a0f880b17579fea02ad371d9abc1dc449748a52" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wildcards&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, which is always true in an interactive call, then &lt;code&gt;find-file&lt;/code&gt; expands wildcard characters in &lt;var&gt;filename&lt;/var&gt; and visits all the matching files.</source>
          <target state="translated">If &lt;var&gt;wildcards&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , which is always true in an interactive call, then &lt;code&gt;find-file&lt;/code&gt; expands wildcard characters in &lt;var&gt;filename&lt;/var&gt; and visits all the matching files.</target>
        </trans-unit>
        <trans-unit id="07a4e63abbb85f3d495187a672b77ef3d46bf086" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , it defaults to the selected window.</target>
        </trans-unit>
        <trans-unit id="3b0662b3c0b907db7784baf8422c8523260adbe7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. If the window cannot be resized as demanded, an error is signaled.</source>
          <target state="translated">If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , it defaults to the selected window. If the window cannot be resized as demanded, an error is signaled.</target>
        </trans-unit>
        <trans-unit id="73895410117091f2036192e72faa26f5ae8a3696" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is &lt;em&gt;strongly dedicated&lt;/em&gt; to a buffer and &lt;var&gt;buffer-or-name&lt;/var&gt; does not specify that buffer, this function signals an error. See &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;.</source>
          <target state="translated">If &lt;var&gt;window&lt;/var&gt; is &lt;em&gt;strongly dedicated&lt;/em&gt; to a buffer and &lt;var&gt;buffer-or-name&lt;/var&gt; does not specify that buffer, this function signals an error. See &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="87cda5d75535ddbcabe4ce91eae66bc6b587dc3b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is a live window, the new window inherits various properties from it, including margins and scroll bars. If &lt;var&gt;window&lt;/var&gt; is an internal window, the new window inherits the properties of the window selected within &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame.</source>
          <target state="translated">場合は &lt;var&gt;window&lt;/var&gt; ライブウィンドウで、新しいウィンドウがマージンやスクロールバーを含め、そこからさまざまなプロパティを継承します。場合は &lt;var&gt;window&lt;/var&gt; 内部のウィンドウで、新しいウィンドウが内で選択ウィンドウのプロパティを継承 &lt;var&gt;window&lt;/var&gt; のフレームを。</target>
        </trans-unit>
        <trans-unit id="a7fd3640aa79ae6b142869e1fb11e2f5db2b31c5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is not large enough to accommodate a scroll bar of the desired dimension, this leaves the corresponding scroll bar unchanged.</source>
          <target state="translated">&lt;var&gt;window&lt;/var&gt; が目的のサイズのスクロールバーを収容するのに十分な大きさでない場合、対応するスクロールバーは変更されません。</target>
        </trans-unit>
        <trans-unit id="ddd6d6ca0b31575b80b1be34d6d03c61b740c27d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is not large enough to accommodate fringes of the desired width, this leaves the fringes of &lt;var&gt;window&lt;/var&gt; unchanged.</source>
          <target state="translated">場合 &lt;var&gt;window&lt;/var&gt; 、この葉の縞所望の幅の縞を収容するのに十分な大きさではない &lt;var&gt;window&lt;/var&gt; 変わらないが。</target>
        </trans-unit>
        <trans-unit id="c7d26a822d67cd3b20eb23d2c8d5237b866ae162" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is not large enough to accommodate margins of the desired width, this leaves the margins of &lt;var&gt;window&lt;/var&gt; unchanged.</source>
          <target state="translated">&lt;var&gt;window&lt;/var&gt; が目的の幅のマージンを収容するのに十分な大きさでない場合、これにより &lt;var&gt;window&lt;/var&gt; のマージンは変更されません。</target>
        </trans-unit>
        <trans-unit id="cbd6e55f0d32133d423f36ec54beceef4df93dda" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is part of a horizontal combination and the value of the option &lt;code&gt;fit-window-to-buffer-horizontally&lt;/code&gt; (see below) is non-&lt;code&gt;nil&lt;/code&gt;, this function adjusts &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s width. The new width of &lt;var&gt;window&lt;/var&gt; is calculated from the maximum length of its buffer&amp;rsquo;s lines that follow the current start position of &lt;var&gt;window&lt;/var&gt;. The optional argument &lt;var&gt;max-width&lt;/var&gt; specifies a maximum width and defaults to the width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. The optional argument &lt;var&gt;min-width&lt;/var&gt; specifies a minimum width and defaults to &lt;code&gt;window-min-width&lt;/code&gt;. Both &lt;var&gt;max-width&lt;/var&gt; and &lt;var&gt;min-width&lt;/var&gt; are specified in columns and include fringes, margins and scrollbars, if any.</source>
          <target state="translated">場合 &lt;var&gt;window&lt;/var&gt; 水平組合せおよびオプションの値の一部である &lt;code&gt;fit-window-to-buffer-horizontally&lt;/code&gt; （下記参照）である非 &lt;code&gt;nil&lt;/code&gt; 、この関数は調整 &lt;var&gt;window&lt;/var&gt; の幅。 &lt;var&gt;window&lt;/var&gt; の新しい幅は、ウィンドウの現在の開始位置に続くバッファの行の最大長から計算され &lt;var&gt;window&lt;/var&gt; 。オプションの引数 &lt;var&gt;max-width&lt;/var&gt; は最大幅を指定し、デフォルトは &lt;var&gt;window&lt;/var&gt; のフレームの幅です。オプションの引数 &lt;var&gt;min-width&lt;/var&gt; は最小幅を指定し、デフォルトは &lt;code&gt;window-min-width&lt;/code&gt; です。 &lt;var&gt;max-width&lt;/var&gt; と &lt;var&gt;min-width&lt;/var&gt; 幅の両方列で指定され、フリンジ、マージン、スクロールバーがあればそれも含まれます。</target>
        </trans-unit>
        <trans-unit id="dd4030d09853d72a6ad706951a4c09bc51fe8c7e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is part of a vertical combination, this function adjusts &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s height. The new height is calculated from the actual height of the accessible portion of its buffer. The optional argument &lt;var&gt;max-height&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the maximum total height that this function can give &lt;var&gt;window&lt;/var&gt;. The optional argument &lt;var&gt;min-height&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the minimum total height that it can give, which overrides the variable &lt;code&gt;window-min-height&lt;/code&gt;. Both &lt;var&gt;max-height&lt;/var&gt; and &lt;var&gt;min-height&lt;/var&gt; are specified in lines and include mode and header line and a bottom divider, if any.</source>
          <target state="translated">&lt;var&gt;window&lt;/var&gt; が垂直方向の組み合わせの一部である場合、この関数は &lt;var&gt;window&lt;/var&gt; の高さを調整します。新しい高さは、バッファのアクセス可能な部分の実際の高さから計算されます。オプションの引数 &lt;var&gt;max-height&lt;/var&gt; は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数が &lt;var&gt;window&lt;/var&gt; に与えることができる最大の合計高さを指定します。オプションの引数 &lt;var&gt;min-height&lt;/var&gt; は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、指定できる最小の合計高さを指定します。これは、変数 &lt;code&gt;window-min-height&lt;/code&gt; をオーバーライドします。両方の &lt;var&gt;max-height&lt;/var&gt; と &lt;var&gt;min-height&lt;/var&gt; あれば、行で指定されたモードとヘッダ行と下分割器が含まれます。</target>
        </trans-unit>
        <trans-unit id="2a4770ab34ce275d090f2c3f83f1fdd06899dedc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is selected, this simply does &lt;code&gt;goto-char&lt;/code&gt; in &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer.</source>
          <target state="translated">&lt;var&gt;window&lt;/var&gt; が選択されている場合、これは単に &lt;var&gt;window&lt;/var&gt; のバッファ内の &lt;code&gt;goto-char&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="7b1f3819de02532b271f42167ead365a3b2a4b01" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; shall be deleted, is the only window on its frame and there are other frames on that frame&amp;rsquo;s terminal, the value of the optional argument &lt;var&gt;bury-or-kill&lt;/var&gt; determines how to proceed with the window. If &lt;var&gt;bury-or-kill&lt;/var&gt; equals &lt;code&gt;kill&lt;/code&gt;, the frame is deleted unconditionally. Otherwise, the fate of the frame is determined by calling &lt;code&gt;frame-auto-hide-function&lt;/code&gt; (see below) with that frame as sole argument.</source>
          <target state="translated">場合は &lt;var&gt;window&lt;/var&gt; 削除されなければならない、そのフレーム上のウィンドウだけで、そのフレームの端末上の他のフレームがあり、オプションの引数の値が &lt;var&gt;bury-or-kill&lt;/var&gt; 窓を続行する方法を決定します。場合は &lt;var&gt;bury-or-kill&lt;/var&gt; イコール &lt;code&gt;kill&lt;/code&gt; 、フレームを無条件に削除されます。それ以外の場合、フレームの運命は、そのフレームを唯一の引数として &lt;code&gt;frame-auto-hide-function&lt;/code&gt; （以下を参照）を呼び出すことによって決定されます。</target>
        </trans-unit>
        <trans-unit id="b4a6963591d62872fac299ee519da1185778699d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is finite, then &lt;var&gt;s&lt;/var&gt; is a floating-point number between 0.5 (inclusive) and 1.0 (exclusive), &lt;var&gt;e&lt;/var&gt; is an integer, and &lt;var&gt;x&lt;/var&gt; = &lt;var&gt;s&lt;/var&gt; * 2**&lt;var&gt;e&lt;/var&gt;. If &lt;var&gt;x&lt;/var&gt; is zero or infinity, then &lt;var&gt;s&lt;/var&gt; is the same as &lt;var&gt;x&lt;/var&gt;. If &lt;var&gt;x&lt;/var&gt; is a NaN, then &lt;var&gt;s&lt;/var&gt; is also a NaN. If &lt;var&gt;x&lt;/var&gt; is zero, then &lt;var&gt;e&lt;/var&gt; is 0.</source>
          <target state="translated">場合 &lt;var&gt;x&lt;/var&gt; が有限で、その後 &lt;var&gt;s&lt;/var&gt; （含む）0.5および1.0（排他的）との間の浮動小数点数であり、 &lt;var&gt;e&lt;/var&gt; は整数であり &lt;var&gt;x&lt;/var&gt; = &lt;var&gt;s&lt;/var&gt; * 2 ** &lt;var&gt;e&lt;/var&gt; 。場合 &lt;var&gt;x&lt;/var&gt; ゼロ又は無限大であり、その後、 &lt;var&gt;s&lt;/var&gt; 同じである &lt;var&gt;x&lt;/var&gt; 。場合は &lt;var&gt;x&lt;/var&gt; NaNである場合、 &lt;var&gt;s&lt;/var&gt; また、NaNです。場合は &lt;var&gt;x&lt;/var&gt; ゼロである場合、 &lt;var&gt;e&lt;/var&gt; は0です。</target>
        </trans-unit>
        <trans-unit id="447e7b65c8b11485cc215c5eb0d80eeaf6769f7b" translate="yes" xml:space="preserve">
          <source>If ACLs are not supported or the file does not exist, then the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">ACLがサポートされていないか、ファイルが存在しない場合、戻り値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f5c1fbb91a50e63cb0b76b1c5d578b1789a7a55a" translate="yes" xml:space="preserve">
          <source>If Auto Compression mode is enabled, as it is by default, then if &lt;code&gt;load&lt;/code&gt; can not find a file, it searches for a compressed version of the file before trying other file names. It decompresses and loads it if it exists. It looks for compressed versions by appending each of the suffixes in &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; to the file name. The value of this variable must be a list of strings. Its standard value is &lt;code&gt;(&quot;.gz&quot;)&lt;/code&gt;.</source>
          <target state="translated">デフォルトで自動圧縮モードが有効になっている場合、 &lt;code&gt;load&lt;/code&gt; ファイルが見つからない場合は、他のファイル名を試す前に、ファイルの圧縮バージョンを検索します。存在する場合は、解凍してロードします。 &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; の各サフィックスをファイル名に追加することにより、圧縮バージョンを検索します。この変数の値は、文字列のリストである必要があります。その標準値は &lt;code&gt;(&quot;.gz&quot;)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="19e54c962f7dd79e1fc7867f5e3102aa865a73ca" translate="yes" xml:space="preserve">
          <source>If Edebug detects a syntax error while instrumenting, it leaves point at the erroneous code and signals an &lt;code&gt;invalid-read-syntax&lt;/code&gt; error. Example:</source>
          <target state="translated">Edebugがインストルメント中に構文エラーを検出すると、エラーのあるコードにポイントを残し、 &lt;code&gt;invalid-read-syntax&lt;/code&gt; エラーを通知します。例：</target>
        </trans-unit>
        <trans-unit id="3be47050736fff885a6116b32ea1daa64351b7ed" translate="yes" xml:space="preserve">
          <source>If Emacs exits due to signaling an error in batch mode, the exit status of the Emacs command is non-zero:</source>
          <target state="translated">バッチモードでエラーを通知してEmacsが終了した場合、Emacsコマンドの終了ステータスは0以外の値になります。</target>
        </trans-unit>
        <trans-unit id="e67a7deab72fd9417551a81812eaf2e9f7e5f914" translate="yes" xml:space="preserve">
          <source>If Emacs is built with GTK+ or Nextstep, the tool bar can only show one line, so this variable has no effect.</source>
          <target state="translated">EmacsがGTK+やNextstepでビルドされている場合、ツールバーは1行しか表示できないので、この変数は効果がありません。</target>
        </trans-unit>
        <trans-unit id="d56940dc3553b8f69d6b8d13681d9f5a7c74b029" translate="yes" xml:space="preserve">
          <source>If Emacs is idle, this function returns the length of time Emacs has been idle, using the same format as &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">Emacsがアイドル状態の場合、この関数は、 &lt;code&gt;current-time&lt;/code&gt; と同じ形式を使用して、Emacsがアイドル状態であった時間の長さを返します（&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;時刻を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="ec4add1da37cdefc247326ddd0e133ce9fba3efb" translate="yes" xml:space="preserve">
          <source>If SELinux is not supported or the file does not exist, then the return value is &lt;code&gt;(nil nil nil nil)&lt;/code&gt;.</source>
          <target state="translated">SELinuxがサポートされていないか、ファイルが存在しない場合、戻り値は &lt;code&gt;(nil nil nil nil)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ab14e08663cfa91c3db576b804543ef8f8a279b3" translate="yes" xml:space="preserve">
          <source>If Transient Mark mode is enabled or &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function deactivates the mark and runs the normal hook &lt;code&gt;deactivate-mark-hook&lt;/code&gt;. Otherwise, it does nothing.</source>
          <target state="translated">トランジェントマークモードが有効になっている場合、または &lt;var&gt;force&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 場合、この関数はマークを非アクティブ化し、通常のフック &lt;code&gt;deactivate-mark-hook&lt;/code&gt; を実行します。それ以外の場合は、何もしません。</target>
        </trans-unit>
        <trans-unit id="07d7f05b9ae25ab88e359a5dc53a4252b71ffe70" translate="yes" xml:space="preserve">
          <source>If Transient Mark mode is enabled, and &lt;code&gt;mark-even-if-inactive&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;mark&lt;/code&gt; signals an error if the mark is inactive. However, if &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;mark&lt;/code&gt; disregards inactivity of the mark, and returns the mark position (or &lt;code&gt;nil&lt;/code&gt;) anyway.</source>
          <target state="translated">暫定マーク（transient-mark）モードが有効、とされている場合は &lt;code&gt;mark-even-if-inactive&lt;/code&gt; で &lt;code&gt;nil&lt;/code&gt; に、 &lt;code&gt;mark&lt;/code&gt; マークがアクティブでない場合、エラーを通知します。ただし、 &lt;var&gt;force&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;mark&lt;/code&gt; はマークの非アクティブを無視し、とにかくマークの位置（または &lt;code&gt;nil&lt;/code&gt; ）を返します。</target>
        </trans-unit>
        <trans-unit id="4a86e0d976aa7cf58f838e55f71256266064bf71" translate="yes" xml:space="preserve">
          <source>If Transient Mark mode is enabled, certain editing commands that normally apply to text near point, apply instead to the region when the mark is active. This is the main motivation for using Transient Mark mode. (Another is that this enables highlighting of the region when the mark is active. See &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;.)</source>
          <target state="translated">トランジェントマークモードが有効になっている場合、通常はポイント付近のテキストに適用される特定の編集コマンドが、マークがアクティブなときに領域に適用されます。これが、トランジェントマークモードを使用する主な動機です。（もう1つは、マークがアクティブなときに領域を強調表示できるようにすることです。&lt;a href=&quot;display#Display&quot;&gt;表示を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="8605a51e352c5b5f1ad525364c97c770197a7dee" translate="yes" xml:space="preserve">
          <source>If a &amp;lsquo;</source>
          <target state="translated">もし '</target>
        </trans-unit>
        <trans-unit id="f143509ca8ee59240acfff6197c41217c9159e0c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;defcustom&lt;/code&gt; does not specify any &lt;code&gt;:group&lt;/code&gt;, the last group defined with &lt;code&gt;defgroup&lt;/code&gt; in the same file will be used. This way, most &lt;code&gt;defcustom&lt;/code&gt; do not need an explicit &lt;code&gt;:group&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defcustom&lt;/code&gt; で &lt;code&gt;:group&lt;/code&gt; が指定されていない場合、同じファイル内で &lt;code&gt;defgroup&lt;/code&gt; で定義された最後のグループが使用されます。このように、ほとんどの &lt;code&gt;defcustom&lt;/code&gt; は明示的な &lt;code&gt;:group&lt;/code&gt; を必要としません。</target>
        </trans-unit>
        <trans-unit id="0130db0b8b3db08d4951e056fcfc2b5ec763ea50" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;throw&lt;/code&gt; is executed during the execution of &lt;var&gt;body&lt;/var&gt;, specifying the same value &lt;var&gt;tag&lt;/var&gt;, the &lt;code&gt;catch&lt;/code&gt; form exits immediately; the value it returns is whatever was specified as the second argument of &lt;code&gt;throw&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;throw&lt;/code&gt; 実行中に実行され &lt;var&gt;body&lt;/var&gt; と同じ値を指定して、 &lt;var&gt;tag&lt;/var&gt; 、 &lt;code&gt;catch&lt;/code&gt; フォームはすぐに終了します。返される値は、 &lt;code&gt;throw&lt;/code&gt; の2番目の引数として指定されたものです。</target>
        </trans-unit>
        <trans-unit id="0706edfed7e00cc4d42f94bdd4da4bee79e492ca" translate="yes" xml:space="preserve">
          <source>If a &lt;var&gt;symbol&lt;/var&gt; is not buffer-local for the current buffer, and is not marked automatically buffer-local, &lt;code&gt;setq-default&lt;/code&gt; has the same effect as &lt;code&gt;setq&lt;/code&gt;. If &lt;var&gt;symbol&lt;/var&gt; is buffer-local for the current buffer, then this changes the value that other buffers will see (as long as they don&amp;rsquo;t have a buffer-local value), but not the value that the current buffer sees.</source>
          <target state="translated">場合 &lt;var&gt;symbol&lt;/var&gt; 、現在のバッファのバッファローカルではなく、バッファローカルに自動的にマークされていない、 &lt;code&gt;setq-default&lt;/code&gt; するのと同じ効果がある &lt;code&gt;setq&lt;/code&gt; 。場合 &lt;var&gt;symbol&lt;/var&gt; カレントバッファでバッファローカル、これは現在のバッファが見る値を、他のバッファが（長い彼らはバッファローカルな値を持っていないとされる）を参照することが値を変更しますが、ありません。</target>
        </trans-unit>
        <trans-unit id="6d09d11f96853cfc9168b5bb65e4e288953cb8a6" translate="yes" xml:space="preserve">
          <source>If a &lt;var&gt;tag&lt;/var&gt; has the form &lt;code&gt;(eval &lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt;, evaluate &lt;var&gt;expr&lt;/var&gt; with the variable &lt;code&gt;tag&lt;/code&gt; dynamically bound to the value of &lt;var&gt;form&lt;/var&gt;. A non-&lt;code&gt;nil&lt;/code&gt; result indicates a match.</source>
          <target state="translated">場合 &lt;var&gt;tag&lt;/var&gt; フォームを持っている &lt;code&gt;(eval &lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt; 、評価する &lt;var&gt;expr&lt;/var&gt; の変数と &lt;code&gt;tag&lt;/code&gt; を動的の値にバインドされた &lt;var&gt;form&lt;/var&gt; 。非 &lt;code&gt;nil&lt;/code&gt; 結果が一致を示しています。</target>
        </trans-unit>
        <trans-unit id="d64f9083808f39165ea317967b062c0b1c2aa875" translate="yes" xml:space="preserve">
          <source>If a backtrace frame starts with &amp;lsquo;</source>
          <target state="translated">バックトレースフレームが 'で始まる場合</target>
        </trans-unit>
        <trans-unit id="2bc2b27e155784dc9a258adf0bf0a8d412c0d63d" translate="yes" xml:space="preserve">
          <source>If a backup was made by renaming, the return value is a cons cell of the form (&lt;var&gt;modes&lt;/var&gt;&lt;var&gt;extra-alist&lt;/var&gt;&lt;var&gt;backupname&lt;/var&gt;), where &lt;var&gt;modes&lt;/var&gt; are the mode bits of the original file, as returned by &lt;code&gt;file-modes&lt;/code&gt; (see &lt;a href=&quot;testing-accessibility#Testing-Accessibility&quot;&gt;Testing Accessibility&lt;/a&gt;), &lt;var&gt;extra-alist&lt;/var&gt; is an alist describing the original file&amp;rsquo;s extended attributes, as returned by &lt;code&gt;file-extended-attributes&lt;/code&gt; (see &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;), and &lt;var&gt;backupname&lt;/var&gt; is the name of the backup.</source>
          <target state="translated">バックアップがリネームによって作られた場合、戻り値は、フォーム（のコンス・セルである &lt;var&gt;modes&lt;/var&gt; &lt;var&gt;extra-alist&lt;/var&gt; &lt;var&gt;backupname&lt;/var&gt; ）、 &lt;var&gt;modes&lt;/var&gt; によって返されるように、元のファイルのモードビットである &lt;code&gt;file-modes&lt;/code&gt; （参照&lt;a href=&quot;testing-accessibility#Testing-Accessibility&quot;&gt;試験アクセシビリティ&lt;/a&gt;）、 &lt;var&gt;extra-alist&lt;/var&gt; は、 &lt;code&gt;file-extended-attributes&lt;/code&gt; （&lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;拡張属性を&lt;/a&gt;参照）によって返される元のファイルの拡張属性を説明する &lt;var&gt;backupname&lt;/var&gt; あり、backupnameはバックアップの名前です。</target>
        </trans-unit>
        <trans-unit id="2c88897a720af47e907771ae913e7fc5603c0e89" translate="yes" xml:space="preserve">
          <source>If a buffer is &lt;em&gt;read-only&lt;/em&gt;, then you cannot change its contents, although you may change your view of the contents by scrolling and narrowing.</source>
          <target state="translated">バッファが&lt;em&gt;読み取り専用の&lt;/em&gt;場合、その内容を変更することはできませんが、スクロールおよび絞り込みによって内容の表示を変更することはできます。</target>
        </trans-unit>
        <trans-unit id="c470f9c5e67a1af9ac52b8a461ba9c4467bb7077" translate="yes" xml:space="preserve">
          <source>If a character has a &lt;code&gt;category&lt;/code&gt; property, we call it the &lt;em&gt;property category&lt;/em&gt; of the character. It should be a symbol. The properties of the symbol serve as defaults for the properties of the character.</source>
          <target state="translated">キャラクターに &lt;code&gt;category&lt;/code&gt; プロパティがある場合、それをキャラクターの&lt;em&gt;プロパティカテゴリ&lt;/em&gt;と呼び&lt;em&gt;ます&lt;/em&gt;。それはシンボルでなければなりません。シンボルのプロパティは、文字のプロパティのデフォルトとして機能します。</target>
        </trans-unit>
        <trans-unit id="5ab0e335265f6f91a6770f98adbf5ffcddb3bf12" translate="yes" xml:space="preserve">
          <source>If a character has a &lt;code&gt;category&lt;/code&gt; property, we call it the &lt;em&gt;property category&lt;/em&gt; of the character. It should be a symbol. The properties of this symbol serve as defaults for the properties of the character.</source>
          <target state="translated">キャラクターに &lt;code&gt;category&lt;/code&gt; プロパティがある場合、それをキャラクターの&lt;em&gt;プロパティカテゴリ&lt;/em&gt;と呼び&lt;em&gt;ます&lt;/em&gt;。それはシンボルでなければなりません。このシンボルのプロパティは、文字のプロパティのデフォルトとして機能します。</target>
        </trans-unit>
        <trans-unit id="a325bcfd7299a47799b677ecb3d032bd944fd5f7" translate="yes" xml:space="preserve">
          <source>If a character has a non-&lt;code&gt;nil&lt;/code&gt; entry in an active display table, the display table takes effect; in this case, Emacs does not consult &lt;code&gt;glyphless-char-display&lt;/code&gt; at all.</source>
          <target state="translated">キャラクターがアクティブな表示テーブルに &lt;code&gt;nil&lt;/code&gt; 以外のエントリを持っている場合、表示テーブルが有効になります。この場合、Emacsは &lt;code&gt;glyphless-char-display&lt;/code&gt; をまったく参照しません。</target>
        </trans-unit>
        <trans-unit id="6a2b8c4ce0a813f762458f74fdba3b2d22b1abe1" translate="yes" xml:space="preserve">
          <source>If a character has the property &lt;code&gt;modification-hooks&lt;/code&gt;, then its value should be a list of functions; modifying that character calls all of those functions before the actual modification. Each function receives two arguments: the beginning and end of the part of the buffer being modified. Note that if a particular modification hook function appears on several characters being modified by a single primitive, you can&amp;rsquo;t predict how many times the function will be called. Furthermore, insertion will not modify any existing character, so this hook will only be run when removing some characters, replacing them with others, or changing their text-properties.</source>
          <target state="translated">文字にプロパティ &lt;code&gt;modification-hooks&lt;/code&gt; がある場合、その値は関数のリストである必要があります。その文字を変更すると、実際の変更の前にこれらの関数がすべて呼び出されます。各関数は、変更されるバッファーの部分の開始と終了の2つの引数を受け取ります。特定の変更フック関数が単一のプリミティブによって変更されている複数の文字に表示される場合、関数が呼び出される回数を予測できないことに注意してください。さらに、挿入によって既存の文字が変更されることはないため、このフックは、一部の文字を削除する場合、他の文字に置き換える場合、またはテキストプロパティを変更する場合にのみ実行されます。</target>
        </trans-unit>
        <trans-unit id="cf6c171a09ab4b48f6f51b014c81c9b650ae5c4f" translate="yes" xml:space="preserve">
          <source>If a character has the property &lt;code&gt;read-only&lt;/code&gt;, then modifying that character is not allowed. Any command that would do so gets an error, &lt;code&gt;text-read-only&lt;/code&gt;. If the property value is a string, that string is used as the error message.</source>
          <target state="translated">文字のプロパティが &lt;code&gt;read-only&lt;/code&gt; 場合、その文字を変更することはできません。これを行うコマンドはすべて、 &lt;code&gt;text-read-only&lt;/code&gt; エラーを受け取ります。プロパティ値が文字列の場合、その文字列がエラーメッセージとして使用されます。</target>
        </trans-unit>
        <trans-unit id="5ff4a394e8b02fd937e03c0717ce827002675ca4" translate="yes" xml:space="preserve">
          <source>If a character&amp;rsquo;s &lt;code&gt;front-sticky&lt;/code&gt; property is &lt;code&gt;t&lt;/code&gt;, then all its properties are front-sticky. If the &lt;code&gt;front-sticky&lt;/code&gt; property is a list, then the sticky properties of the character are those whose names are in the list. For example, if a character has a &lt;code&gt;front-sticky&lt;/code&gt; property whose value is &lt;code&gt;(face read-only)&lt;/code&gt;, then insertion before the character can inherit its &lt;code&gt;face&lt;/code&gt; property and its &lt;code&gt;read-only&lt;/code&gt; property, but no others.</source>
          <target state="translated">キャラクターの &lt;code&gt;front-sticky&lt;/code&gt; プロパティが &lt;code&gt;t&lt;/code&gt; の場合、そのすべてのプロパティはfront-stickyです。場合は &lt;code&gt;front-sticky&lt;/code&gt; プロパティがリストされ、その後、文字の粘着性の性質は、その名のリストにあるものがあります。たとえば、文字の値が &lt;code&gt;(face read-only)&lt;/code&gt; である &lt;code&gt;front-sticky&lt;/code&gt; プロパティがある場合、文字の前に挿入すると、 &lt;code&gt;face&lt;/code&gt; プロパティと &lt;code&gt;read-only&lt;/code&gt; プロパティを継承できますが、それ以外は継承できません。</target>
        </trans-unit>
        <trans-unit id="cd39a6445b8e750c7f9dd57cb8ea29448e449653" translate="yes" xml:space="preserve">
          <source>If a command &lt;var&gt;other-command&lt;/var&gt; is remapped to &lt;var&gt;command&lt;/var&gt;:</source>
          <target state="translated">コマンド場合は &lt;var&gt;other-command&lt;/var&gt; に再マッピングされる &lt;var&gt;command&lt;/var&gt; ：</target>
        </trans-unit>
        <trans-unit id="ca799751386325886a8170a870fc3794daed593d" translate="yes" xml:space="preserve">
          <source>If a command ends with point inside or at the boundary of invisible text, the main editing loop relocates point to one of the two ends of the invisible text. Emacs chooses the direction of relocation so that it is the same as the overall movement direction of the command; if in doubt, it prefers a position where an inserted char would not inherit the &lt;code&gt;invisible&lt;/code&gt; property. Additionally, if the text is not replaced by an ellipsis and the command only moved within the invisible text, then point is moved one extra character so as to try and reflect the command&amp;rsquo;s movement by a visible movement of the cursor.</source>
          <target state="translated">コマンドが非表示のテキストの内側または境界でポイントで終了する場合、メインの編集ループはポイントを非表示のテキストの両端の1つに再配置します。Emacsは、コマンドの全体的な移動方向と同じになるように再配置の方向を選択します。疑わしい場合は、挿入されたcharが &lt;code&gt;invisible&lt;/code&gt; プロパティを継承しない位置を優先します。さらに、テキストが省略記号に置き換えられておらず、コマンドが非表示のテキスト内でのみ移動した場合、カーソルの表示された動きによってコマンドの動きを反映しようとするために、ポイントが1文字余分に移動されます。</target>
        </trans-unit>
        <trans-unit id="c02095386719e5b0d1fbf2aae78668af843d5ca3" translate="yes" xml:space="preserve">
          <source>If a command has multiple bindings, this function normally uses the first one it finds. You can specify one particular key binding by assigning an &lt;code&gt;:advertised-binding&lt;/code&gt; symbol property to the command, like this:</source>
          <target state="translated">コマンドに複数のバインディングがある場合、この関数は通常、最初に見つかったものを使用します。次のように、コマンドに &lt;code&gt;:advertised-binding&lt;/code&gt; symbolプロパティを割り当てることにより、1つの特定のキーバインディングを指定できます。</target>
        </trans-unit>
        <trans-unit id="5d1a39eb22ef81b7fb55d0807c90696ea2cfa0f7" translate="yes" xml:space="preserve">
          <source>If a command name has a property &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; that is non-&lt;code&gt;nil&lt;/code&gt;, then the command can use the minibuffer to read arguments even if it is invoked from the minibuffer. A command can also achieve this by binding &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; in the interactive declaration (see &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;). The minibuffer command &lt;code&gt;next-matching-history-element&lt;/code&gt; (normally</source>
          <target state="translated">コマンド名のプロパティ &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、コマンドは、ミニバッファーから呼び出された場合でも、ミニバッファーを使用して引数を読み取ることができます。コマンドは、インタラクティブ宣言で &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; を &lt;code&gt;t&lt;/code&gt; にバインドすることによってこれを実現することもできます（&lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;インタラクティブの使用を&lt;/a&gt;参照）。ミニバッファコマンド &lt;code&gt;next-matching-history-element&lt;/code&gt; （通常は</target>
        </trans-unit>
        <trans-unit id="6bb6a6576cb926daa3494c0908a08057d34148fb" translate="yes" xml:space="preserve">
          <source>If a connection from a process contains buffered data, &lt;code&gt;accept-process-output&lt;/code&gt; can return non-&lt;code&gt;nil&lt;/code&gt; even after the process has exited. Therefore, although the following loop:</source>
          <target state="translated">プロセスからの接続にバッファリングされたデータが含まれている場合、プロセスが終了した後でも、 &lt;code&gt;accept-process-output&lt;/code&gt; は非 &lt;code&gt;nil&lt;/code&gt; を返す可能性があります。したがって、次のループがあります。</target>
        </trans-unit>
        <trans-unit id="4caa731ac6b008d448f362c498f5481d5e11ec54" translate="yes" xml:space="preserve">
          <source>If a customization item has a type such as &lt;code&gt;hook&lt;/code&gt; or &lt;code&gt;alist&lt;/code&gt;, which supports &lt;code&gt;:options&lt;/code&gt;, you can add additional values to the list from outside the &lt;code&gt;defcustom&lt;/code&gt; declaration by calling &lt;code&gt;custom-add-frequent-value&lt;/code&gt;. For example, if you define a function &lt;code&gt;my-lisp-mode-initialization&lt;/code&gt; intended to be called from &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt;, you might want to add that to the list of reasonable values for &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt;, but not by editing its definition. You can do it thus:</source>
          <target state="translated">カスタマイズ項目に &lt;code&gt;:options&lt;/code&gt; をサポートする &lt;code&gt;hook&lt;/code&gt; や &lt;code&gt;alist&lt;/code&gt; などの型がある場合は、 &lt;code&gt;custom-add-frequent-value&lt;/code&gt; を呼び出すことにより、 &lt;code&gt;defcustom&lt;/code&gt; 宣言の外部からリストに値を追加できます。あなたは関数を定義する場合たとえば、 &lt;code&gt;my-lisp-mode-initialization&lt;/code&gt; から呼び出されることを意図 &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt; 、あなたはのための合理的な値のリストにそれを追加したい場合があります &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt; が、その定義を編集することによってではありません。あなたはこうしてそれをすることができます：</target>
        </trans-unit>
        <trans-unit id="6efb7988bcf68e6a2f95773375f6e046c871845c" translate="yes" xml:space="preserve">
          <source>If a daemon was requested, it calls &lt;code&gt;server-start&lt;/code&gt;. (On POSIX systems, if a background daemon was requested, it then detaches from the controlling terminal.) See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html#Emacs-Server&quot;&gt;Emacs Server&lt;/a&gt; in</source>
          <target state="translated">デーモンが要求された場合、デーモンは &lt;code&gt;server-start&lt;/code&gt; を呼び出します。（POSIXシステムでは、バックグラウンドデーモンが要求された場合、それは制御端末から切り離され&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html#Emacs-Server&quot;&gt;ます&lt;/a&gt;。）のEmacsサーバーを参照してください。</target>
        </trans-unit>
        <trans-unit id="0eec4f909bc2a2b8d762de836142aa6d9abdc05e" translate="yes" xml:space="preserve">
          <source>If a file has a &amp;lsquo;</source>
          <target state="translated">ファイルに 'がある場合</target>
        </trans-unit>
        <trans-unit id="f449b7603d80817180abb3dea84db94c1bc2d093" translate="yes" xml:space="preserve">
          <source>If a file name handler is invoked, it determines the program to run based on the first argument &lt;var&gt;program&lt;/var&gt;. For instance, suppose that a handler for remote files is invoked. Then the path that is used for searching for the program might be different from &lt;code&gt;exec-path&lt;/code&gt;.</source>
          <target state="translated">ファイル名ハンドラーが呼び出されると、最初の引数 &lt;var&gt;program&lt;/var&gt; 基づいて実行するプログラムが決定されます。たとえば、リモートファイルのハンドラーが呼び出されたとします。その場合、プログラムの検索に使用されるパスは、 &lt;code&gt;exec-path&lt;/code&gt; とは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="009f7589e473df75e8be2a540f5e95f30abe2214" translate="yes" xml:space="preserve">
          <source>If a file&amp;rsquo;s name is</source>
          <target state="translated">ファイルの名前が</target>
        </trans-unit>
        <trans-unit id="909ad20685056441977aa0878c59a154ccf3d576" translate="yes" xml:space="preserve">
          <source>If a file-local variable could specify an arbitrary function or Lisp expression that would be called later, visiting a file could take over your Emacs. Emacs protects against this by automatically setting only those file-local variables whose specified values are known to be safe. Other file-local variables are set only if the user agrees.</source>
          <target state="translated">ファイルローカル変数に任意の関数やLisp式が指定され、それが後で呼び出される可能性がある場合、ファイルを訪問するとEmacsが乗っ取られてしまう可能性があります。Emacsは、指定された値が安全であることがわかっているファイルローカル変数のみを自動的に設定することで、このような事態から保護します。その他のファイルローカル変数は、ユーザが同意した場合にのみ設定されます。</target>
        </trans-unit>
        <trans-unit id="b6da7e96e65ba0f36317067a20d84bd5da2d1d3d" translate="yes" xml:space="preserve">
          <source>If a frame has a non-&lt;code&gt;nil&lt;/code&gt; title, it appears in the window system&amp;rsquo;s title bar at the top of the frame, and also in the mode line of windows in that frame if &lt;code&gt;mode-line-frame-identification&lt;/code&gt; uses &amp;lsquo;</source>
          <target state="translated">フレームのタイトルが &lt;code&gt;nil&lt;/code&gt; 以外の場合、フレームの上部にあるウィンドウシステムのタイトルバーに表示され &lt;code&gt;mode-line-frame-identification&lt;/code&gt; が 'を使用している場合は、そのフレームのウィンドウのモード行にも表示されます。</target>
        </trans-unit>
        <trans-unit id="23e66a655fb8d036410d6e10616867d04de9b35f" translate="yes" xml:space="preserve">
          <source>If a frame has evaluated its arguments and called its function already, &lt;var&gt;evald&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; and &lt;var&gt;args&lt;/var&gt; is a list of values. &lt;var&gt;flags&lt;/var&gt; is a plist of properties of the current frame: currently, the only supported property is &lt;code&gt;:debug-on-exit&lt;/code&gt;, which is &lt;code&gt;t&lt;/code&gt; if the stack frame&amp;rsquo;s &lt;code&gt;debug-on-exit&lt;/code&gt; flag is set.</source>
          <target state="translated">フレームが引数を評価し、その関数をすでに呼び出している場合、 &lt;var&gt;evald&lt;/var&gt; は &lt;code&gt;t&lt;/code&gt; であり、 &lt;var&gt;args&lt;/var&gt; は値のリストです。 &lt;var&gt;flags&lt;/var&gt; は、現在のフレームのプロパティのplistです。現在、サポートされているプロパティは &lt;code&gt;:debug-on-exit&lt;/code&gt; のみです。これは、スタックフレームの &lt;code&gt;debug-on-exit&lt;/code&gt; フラグが設定されている場合は &lt;code&gt;t&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1d9e46c7c1be49972c908c4bcd8928513196de0b" translate="yes" xml:space="preserve">
          <source>If a frame has not evaluated its arguments yet or is a special form, &lt;var&gt;evald&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; and &lt;var&gt;args&lt;/var&gt; is a list of forms.</source>
          <target state="translated">フレームがまだ引数を評価していないか、特殊なフォームである場合、 &lt;var&gt;evald&lt;/var&gt; は &lt;code&gt;nil&lt;/code&gt; であり、 &lt;var&gt;args&lt;/var&gt; はフォームのリストです。</target>
        </trans-unit>
        <trans-unit id="8ad4d628235cb3816a950ab23fc8cbae997732d6" translate="yes" xml:space="preserve">
          <source>If a function in &lt;code&gt;emacs-save-session-functions&lt;/code&gt; returns non-&lt;code&gt;nil&lt;/code&gt;, Emacs tells the session manager to cancel the shutdown.</source>
          <target state="translated">で機能した場合 &lt;code&gt;emacs-save-session-functions&lt;/code&gt; を返す非 &lt;code&gt;nil&lt;/code&gt; の、Emacsはシャットダウンをキャンセルするセッションマネージャを伝えます。</target>
        </trans-unit>
        <trans-unit id="2a0938ebf0b2e6eda3af83386b59338c24d1a6ac" translate="yes" xml:space="preserve">
          <source>If a function in &lt;code&gt;write-file-functions&lt;/code&gt; returns non-&lt;code&gt;nil&lt;/code&gt;, it is responsible for making a backup file (if that is appropriate). To do so, execute the following code:</source>
          <target state="translated">で機能した場合 &lt;code&gt;write-file-functions&lt;/code&gt; 戻り非 &lt;code&gt;nil&lt;/code&gt; の、それは（それが適切である場合）バックアップファイルを作成するための責任があります。これを行うには、次のコードを実行します。</target>
        </trans-unit>
        <trans-unit id="45a2004aa694211fb63e30f8d45131d77ed77910" translate="yes" xml:space="preserve">
          <source>If a function name is underlined, that means Emacs knows where its source code is located. You can click with the mouse on that name, or move to it and type</source>
          <target state="translated">関数名に下線が引かれている場合、それは Emacs がソースコードの場所を知っていることを意味します。関数名の上でマウスをクリックするか、関数名の上に移動して</target>
        </trans-unit>
        <trans-unit id="bc9fb1fbe9e79ab7e7987eb4809776d1373f2542" translate="yes" xml:space="preserve">
          <source>If a given family is specified but does not exist, this variable specifies alternative font families to try. Each element should have this form:</source>
          <target state="translated">与えられたフォントファミリが指定されていても存在しない場合、この変数は、試すべき代替フォントファミリを指定します。各要素はこの形式を持つべきです。</target>
        </trans-unit>
        <trans-unit id="7163e535874a24fb9a92945549690ad69c9b9c91" translate="yes" xml:space="preserve">
          <source>If a group of consecutive characters have equal and non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;intangible&lt;/code&gt; properties, then you cannot place point between them. If you try to move point forward into the group, point actually moves to the end of the group. If you try to move point backward into the group, point actually moves to the start of the group.</source>
          <target state="translated">連続した文字のグループが同じと非がある場合は &lt;code&gt;nil&lt;/code&gt; の &lt;code&gt;intangible&lt;/code&gt; の性質を、あなたはそれらの間のポイントを配置することはできません。ポイントをグループ内で前方に移動しようとすると、ポイントは実際にはグループの最後に移動します。ポイントをグループ内に後方に移動しようとすると、ポイントは実際にはグループの先頭に移動します。</target>
        </trans-unit>
        <trans-unit id="4daee049e0d024cf26498e0b0e1e416e277242ec" translate="yes" xml:space="preserve">
          <source>If a hook variable has a non-&lt;code&gt;nil&lt;/code&gt; value, that value should be a list of functions. &lt;code&gt;run-hooks&lt;/code&gt; calls all the functions, one by one, with no arguments.</source>
          <target state="translated">フック変数の値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、その値は関数のリストである必要があります。 &lt;code&gt;run-hooks&lt;/code&gt; は、引数なしですべての関数を1つずつ呼び出します。</target>
        </trans-unit>
        <trans-unit id="fae7e2f6e8ad8c2b2c1155f361ef0b2395901d47" translate="yes" xml:space="preserve">
          <source>If a key is defined as a prefix in more than one active map, then its various definitions are in effect merged: the commands defined in the minor mode keymaps come first, followed by those in the local map&amp;rsquo;s prefix definition, and then by those from the global map.</source>
          <target state="translated">キーが複数のアクティブマップでプレフィックスとして定義されている場合、そのさまざまな定義が実際にマージされます。マイナーモードキーマップで定義されたコマンドが最初に来て、次にローカルマップのプレフィックス定義で定義されたコマンドが続き、次にグローバルマップ。</target>
        </trans-unit>
        <trans-unit id="3e325f3f0bffc2b381cfd7f40aec87ce62ca6bdd" translate="yes" xml:space="preserve">
          <source>If a list of display specifications includes more than one replacing display specification, the first overrides the rest. Replacing display specifications make most other display specifications irrelevant, since those don&amp;rsquo;t apply to the replacement.</source>
          <target state="translated">ディスプレイ仕様のリストに複数の置換ディスプレイ仕様が含まれている場合、最初のものが残りをオーバーライドします。ディスプレイ仕様を置き換えると、他のほとんどのディスプレイ仕様は置き換えに適用されないため、無関係になります。</target>
        </trans-unit>
        <trans-unit id="98c0cfaa42fee87c09b24c943a05698f58091bee" translate="yes" xml:space="preserve">
          <source>If a macro has a helper function to build its result, and that macro is used both locally and outside the package, then &lt;code&gt;eval-and-compile&lt;/code&gt; should be used to get the helper both when compiling and then later when running.</source>
          <target state="translated">マクロに結果を作成するためのヘルパー関数があり、そのマクロがローカルとパッケージの外部の両方で使用されている場合は、 &lt;code&gt;eval-and-compile&lt;/code&gt; を使用して、コンパイル時と後で実行時の両方でヘルパーを取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="71012494381897ae21b221e46898bd150769e458" translate="yes" xml:space="preserve">
          <source>If a macro has no Edebug specification, neither through a &lt;code&gt;debug&lt;/code&gt; declaration nor through a &lt;code&gt;def-edebug-spec&lt;/code&gt; call, the variable &lt;code&gt;edebug-eval-macro-args&lt;/code&gt; comes into play.</source>
          <target state="translated">マクロにEdebug仕様がない場合、 &lt;code&gt;debug&lt;/code&gt; 宣言でも &lt;code&gt;def-edebug-spec&lt;/code&gt; 呼び出しでも、変数 &lt;code&gt;edebug-eval-macro-args&lt;/code&gt; が機能します。</target>
        </trans-unit>
        <trans-unit id="548e6e96fe74dbbc73fe3dcae50bba962c7fd3f9" translate="yes" xml:space="preserve">
          <source>If a module needs to call Emacs functions, it should do so through the</source>
          <target state="translated">モジュールがEmacsの関数を呼び出す必要がある場合、それは</target>
        </trans-unit>
        <trans-unit id="438931f48764200c63d972c27896bd946ba67b5f" translate="yes" xml:space="preserve">
          <source>If a newline character has this property, it is a &amp;ldquo;hard&amp;rdquo; newline. The fill commands do not alter hard newlines and do not move words across them. However, this property takes effect only if the &lt;code&gt;use-hard-newlines&lt;/code&gt; minor mode is enabled. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;Hard and Soft Newlines&lt;/a&gt; in</source>
          <target state="translated">改行文字にこのプロパティがある場合、それは「ハード」な改行です。塗りつぶしコマンドは、改行を変更したり、改行を移動したりしません。ただし、このプロパティは、 &lt;code&gt;use-hard-newlines&lt;/code&gt; マイナーモードが有効になっている場合にのみ有効になります。参照&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;ハードとソフト改行&lt;/a&gt;で</target>
        </trans-unit>
        <trans-unit id="cf898f148459e4667a515d27fdc45dec6967774c" translate="yes" xml:space="preserve">
          <source>If a part of &lt;var&gt;body&lt;/var&gt; binds &lt;code&gt;inhibit-quit&lt;/code&gt; to non-&lt;code&gt;nil&lt;/code&gt;, arrival of input during those parts won&amp;rsquo;t cause an abort until the end of that part.</source>
          <target state="translated">&lt;var&gt;body&lt;/var&gt; 一部が &lt;code&gt;inhibit-quit&lt;/code&gt; をnon - &lt;code&gt;nil&lt;/code&gt; にバインドする場合、それらの部分の間に入力が到着しても、その部分が終了するまでアボートは発生しません。</target>
        </trans-unit>
        <trans-unit id="61692cd8db0d28fecba2475130992ccef1b3727c" translate="yes" xml:space="preserve">
          <source>If a particular grouping construct in the regular expression was never matched&amp;mdash;for instance, if it appears inside of an alternative that wasn&amp;rsquo;t used, or inside of a repetition that repeated zero times&amp;mdash;then the corresponding &amp;lsquo;</source>
          <target state="translated">正規表現の特定のグループ化構造が一致しなかった場合（たとえば、使用されなかった代替の内部、またはゼロ回繰り返された繰り返しの内部に表示された場合）、対応する '</target>
        </trans-unit>
        <trans-unit id="af4fe3395c8b45518750584483251291bcceffcb" translate="yes" xml:space="preserve">
          <source>If a problem occurs when you run the program, you can use the built-in Emacs Lisp debugger to suspend the Lisp evaluator, and examine and/or alter its internal state.</source>
          <target state="translated">プログラムの実行時に問題が発生した場合、内蔵の Emacs Lisp デバッガを使用して Lisp 評価器を一時停止し、その内部状態を調べたり変更したりすることができます。</target>
        </trans-unit>
        <trans-unit id="243106beefd7f4681b63a362a29ccf5e5ae51a7e" translate="yes" xml:space="preserve">
          <source>If a program attempts to change objects that should not be changed, the resulting behavior is undefined: the Lisp interpreter might signal an error, or it might crash or behave unpredictably in other ways.&lt;a href=&quot;#FOOT2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">プログラムが変更すべきでないオブジェクトを変更しようとすると、結果として生じる動作は定義されません。Lispインタプリタがエラーを通知したり、クラッシュしたり、他の方法で予期しない動作をしたりする可能性があります。&lt;a href=&quot;#FOOT2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c435d12951a941c540a76edf63e274f49c4fb461" translate="yes" xml:space="preserve">
          <source>If a program makes several text changes in the same area of the buffer, using the macro &lt;code&gt;combine-after-change-calls&lt;/code&gt; around that part of the program can make it run considerably faster when after-change hooks are in use. When the after-change hooks are ultimately called, the arguments specify a portion of the buffer including all of the changes made within the &lt;code&gt;combine-after-change-calls&lt;/code&gt; body.</source>
          <target state="translated">プログラムがバッファの同じ領域で複数のテキスト変更を行う場合、プログラムのその部分でマクロ &lt;code&gt;combine-after-change-calls&lt;/code&gt; を使用すると、変更後フックが使用されているときにプログラムを大幅に高速化できます。変更後のフックが最終的に呼び出されると、引数は、変更 &lt;code&gt;combine-after-change-calls&lt;/code&gt; の結合呼び出し本体内で行われたすべての変更を含むバッファーの一部を指定します。</target>
        </trans-unit>
        <trans-unit id="3d81a2b42f603297bebed05ca83ccda1b8a78048" translate="yes" xml:space="preserve">
          <source>If a specification fails to match at some point, this does not necessarily mean a syntax error will be signaled; instead, &lt;em&gt;backtracking&lt;/em&gt; will take place until all alternatives have been exhausted. Eventually every element of the argument list must be matched by some element in the specification, and every required element in the specification must match some argument.</source>
          <target state="translated">ある時点で仕様が一致しない場合、これは必ずしも構文エラーが通知されることを意味するわけではありません。代わりに、すべての選択肢がなくなるまで&lt;em&gt;バックトラック&lt;/em&gt;が実行されます。最終的に、引数リストのすべての要素は仕様の一部の要素と一致する必要があり、仕様のすべての必須要素は一部の引数と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="7ba26fa136b6d3f5f0d0bae4d89c52641ff643b4" translate="yes" xml:space="preserve">
          <source>If a subexpression of a backquote construct has no substitutions or splices, it acts like &lt;code&gt;quote&lt;/code&gt; in that it yields conses, vectors and strings that might be shared and should not be modified. See &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Self-Evaluating Forms&lt;/a&gt;.</source>
          <target state="translated">バッククォートコンストラクトの部分式に置換またはスプライスがない場合、共有される可能性があり、変更してはならないコンセ、ベクトル、および文字列を生成するという点で、 &lt;code&gt;quote&lt;/code&gt; ように機能します。&lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;自己評価フォームを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="514160586b0a8e80be8af506a6edc7f6e6ac6e26" translate="yes" xml:space="preserve">
          <source>If a symbol with the desired name is found, the reader uses that symbol. If the obarray does not contain a symbol with that name, the reader makes a new symbol and adds it to the obarray. Finding or adding a symbol with a certain name is called &lt;em&gt;interning&lt;/em&gt; it, and the symbol is then called an &lt;em&gt;interned symbol&lt;/em&gt;.</source>
          <target state="translated">目的の名前の記号が見つかった場合、リーダーはその記号を使用します。obarrayにその名前のシンボルが含まれていない場合、リーダーは新しいシンボルを作成し、それをobarrayに追加します。特定の名前のシンボルを検索または追加することを&lt;em&gt;インターン&lt;/em&gt;と呼び、そのシンボルを&lt;em&gt;インターンシンボル&lt;/em&gt;と呼びます。</target>
        </trans-unit>
        <trans-unit id="5792ba55fa583eab230c2719559e8b5d0ed2308f" translate="yes" xml:space="preserve">
          <source>If a syntactic problem is preventing Lisp from even reading the program, you can locate it using Lisp editing commands.</source>
          <target state="translated">構文上の問題でLispがプログラムを読むことすらできない場合は、Lispの編集コマンドを使ってその場所を特定することができます。</target>
        </trans-unit>
        <trans-unit id="bffb687fbdff53add60c8beb535d1c15fcec78ae" translate="yes" xml:space="preserve">
          <source>If a timer function calls functions that can change the match data, it should save and restore the match data. See &lt;a href=&quot;saving-match-data#Saving-Match-Data&quot;&gt;Saving Match Data&lt;/a&gt;.</source>
          <target state="translated">タイマー関数が一致データを変更できる関数を呼び出す場合、一致データを保存および復元する必要があります。&lt;a href=&quot;saving-match-data#Saving-Match-Data&quot;&gt;一致データの保存を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1a3dab018b18bf5dc87ccab46352179b2b3b307c" translate="yes" xml:space="preserve">
          <source>If a variable appears as an element of &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt;, the map specified by that element totally replaces any map specified for the same variable in &lt;code&gt;minor-mode-map-alist&lt;/code&gt;.</source>
          <target state="translated">変数が &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt; の要素として表示される場合、その要素によって指定されたマップは、 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; の同じ変数に指定されたマップを完全に置き換えます。</target>
        </trans-unit>
        <trans-unit id="02cb55f35f85cb2854d347ba342c503214f2b062" translate="yes" xml:space="preserve">
          <source>If a window&amp;rsquo;s pixel height is not an integral multiple of its frame&amp;rsquo;s default character height, the number of lines occupied by the window is rounded internally. This is done in a way such that, if the window is a parent window, the sum of the total heights of all its child windows internally equals the total height of their parent. This means that although two windows have the same pixel height, their internal total heights may differ by one line. This means also, that if window is vertically combined and has a next sibling, the topmost row of that sibling can be calculated as the sum of this window&amp;rsquo;s topmost row and total height (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;)</source>
          <target state="translated">ウィンドウのピクセルの高さがフレームのデフォルトの文字の高さの整数倍でない場合、ウィンドウが占める行数は内部で丸められます。これは、ウィンドウが親ウィンドウである場合、そのすべての子ウィンドウの合計の高さが内部的に親の合計の高さに等しくなるように行われます。つまり、2つのウィンドウのピクセルの高さは同じですが、内部の合計の高さは1行異なる場合があります。これは、ウィンドウが垂直方向に結合され、次の兄弟がある場合、その兄弟の最上行は、このウィンドウの最上行と全高の合計として計算できることも意味します（&lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;座標とウィンドウを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="ef0b95c50f0eef3857eb543b00e33c0bcde5709c" translate="yes" xml:space="preserve">
          <source>If a window&amp;rsquo;s pixel width is not an integral multiple of its frame&amp;rsquo;s character width, the number of lines occupied by the window is rounded internally. This is done in a way such that, if the window is a parent window, the sum of the total widths of all its children internally equals the total width of their parent. This means that although two windows have the same pixel width, their internal total widths may differ by one column. This means also, that if this window is horizontally combined and has a next sibling, the leftmost column of that sibling can be calculated as the sum of this window&amp;rsquo;s leftmost column and total width (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;). The optional argument &lt;var&gt;round&lt;/var&gt; behaves as it does for &lt;code&gt;window-total-height&lt;/code&gt;.</source>
          <target state="translated">ウィンドウのピクセル幅がフレームの文字幅の整数倍でない場合、ウィンドウが占める行数は内部で丸められます。これは、ウィンドウが親ウィンドウである場合、そのすべての子の合計幅が内部的に親の合計幅と等しくなるように行われます。つまり、2つのウィンドウのピクセル幅は同じですが、内部の合計幅は1列異なる場合があります。これは、このウィンドウが水平方向に結合され、次の兄弟がある場合、その兄弟の左端の列は、このウィンドウの左端の列と合計幅の合計として計算できることも意味します（&lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;座標とウィンドウを&lt;/a&gt;参照）。オプションの引数 &lt;var&gt;round&lt;/var&gt; は、 &lt;code&gt;window-total-height&lt;/code&gt; の場合と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="9f54ed66047ff25005c5a27d3c92a34578c06887" translate="yes" xml:space="preserve">
          <source>If actual arguments for the optional and rest variables are omitted, then they always default to &lt;code&gt;nil&lt;/code&gt;. There is no way for the function to distinguish between an explicit argument of &lt;code&gt;nil&lt;/code&gt; and an omitted argument. However, the body of the function is free to consider &lt;code&gt;nil&lt;/code&gt; an abbreviation for some other meaningful value. This is what &lt;code&gt;substring&lt;/code&gt; does; &lt;code&gt;nil&lt;/code&gt; as the third argument to &lt;code&gt;substring&lt;/code&gt; means to use the length of the string supplied.</source>
          <target state="translated">オプション変数とrest変数の実際の引数が省略されている場合、それらは常にデフォルトで &lt;code&gt;nil&lt;/code&gt; になります。関数が &lt;code&gt;nil&lt;/code&gt; の明示的な引数と省略された引数を区別する方法はありません。ただし、関数の本体では、他の意味のある値の省略形を &lt;code&gt;nil&lt;/code&gt; と見なすことができます。これは &lt;code&gt;substring&lt;/code&gt; が行うことです。 &lt;code&gt;substring&lt;/code&gt; の3番目の引数として &lt;code&gt;nil&lt;/code&gt; は、指定された文字列の長さを使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="4dd0b048a1ae42f26f486c26d115d7212b1fef97" translate="yes" xml:space="preserve">
          <source>If all of these functions return &lt;code&gt;nil&lt;/code&gt;, then the argument is treated as a file name to visit.</source>
          <target state="translated">これらの関数がすべて &lt;code&gt;nil&lt;/code&gt; を返す場合、引数はアクセスするファイル名として扱われます。</target>
        </trans-unit>
        <trans-unit id="80c524a9180c48af0283044015fb44d72905d3db" translate="yes" xml:space="preserve">
          <source>If all the &lt;var&gt;conditions&lt;/var&gt; turn out &lt;code&gt;nil&lt;/code&gt;, then the &lt;code&gt;or&lt;/code&gt; expression returns &lt;code&gt;nil&lt;/code&gt;. Just &lt;code&gt;(or)&lt;/code&gt;, with no &lt;var&gt;conditions&lt;/var&gt;, returns &lt;code&gt;nil&lt;/code&gt;, appropriate because all the &lt;var&gt;conditions&lt;/var&gt; turned out &lt;code&gt;nil&lt;/code&gt;. (Think about it; which one did not?)</source>
          <target state="translated">すべての &lt;var&gt;conditions&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; になった場合、 &lt;code&gt;or&lt;/code&gt; 式は &lt;code&gt;nil&lt;/code&gt; を返します。 &lt;var&gt;conditions&lt;/var&gt; なしのJust &lt;code&gt;(or)&lt;/code&gt; 、すべての &lt;var&gt;conditions&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; であることが判明したため、適切な &lt;code&gt;nil&lt;/code&gt; を返します。 （それについて考えてください;どれがしませんでしたか？）</target>
        </trans-unit>
        <trans-unit id="9d8206c2839ebaaa2594473d36a35256669c56e5" translate="yes" xml:space="preserve">
          <source>If all the &lt;var&gt;conditions&lt;/var&gt; turn out non-&lt;code&gt;nil&lt;/code&gt;, then the value of the last of them becomes the value of the &lt;code&gt;and&lt;/code&gt; form. Just &lt;code&gt;(and)&lt;/code&gt;, with no &lt;var&gt;conditions&lt;/var&gt;, returns &lt;code&gt;t&lt;/code&gt;, appropriate because all the &lt;var&gt;conditions&lt;/var&gt; turned out non-&lt;code&gt;nil&lt;/code&gt;. (Think about it; which one did not?)</source>
          <target state="translated">すべての &lt;var&gt;conditions&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外であることが判明した場合、最後の条件の値が &lt;code&gt;and&lt;/code&gt; 形式の値になります。 &lt;var&gt;conditions&lt;/var&gt; なしのJust &lt;code&gt;(and)&lt;/code&gt; は、すべての &lt;var&gt;conditions&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外であることが判明したため、適切な &lt;code&gt;t&lt;/code&gt; を返します。（それについて考えてください;どれがしませんでしたか？）</target>
        </trans-unit>
        <trans-unit id="d7d69013792720d185b2b66133b846cd99c6e339" translate="yes" xml:space="preserve">
          <source>If all the arguments are integers, the result is an integer, obtained by rounding the quotient towards zero after each division.</source>
          <target state="translated">すべての引数が整数の場合、結果は整数となり、各除算の後に商をゼロに丸めて得られます。</target>
        </trans-unit>
        <trans-unit id="a66d8e038907512ea75e34f80ae5aca0011c55e8" translate="yes" xml:space="preserve">
          <source>If all the characters in the range specified for &lt;code&gt;buffer-substring&lt;/code&gt; have a non-&lt;code&gt;nil&lt;/code&gt; value for this property, &lt;code&gt;buffer-substring&lt;/code&gt; does not call the &lt;code&gt;buffer-access-fontify-functions&lt;/code&gt; functions. It assumes these characters already have the right text properties, and just copies the properties they already have.</source>
          <target state="translated">&lt;code&gt;buffer-substring&lt;/code&gt; に指定された範囲内のすべての文字が、このプロパティに &lt;code&gt;nil&lt;/code&gt; 以外の値を持っている場合、 &lt;code&gt;buffer-substring&lt;/code&gt; は &lt;code&gt;buffer-access-fontify-functions&lt;/code&gt; 関数を呼び出しません。これらの文字はすでに適切なテキストプロパティを持っていると想定し、すでに持っているプロパティをコピーするだけです。</target>
        </trans-unit>
        <trans-unit id="74daf9e3ff4eb549cd541100a271641a4e2e3986" translate="yes" xml:space="preserve">
          <source>If an alist element matches &lt;var&gt;key&lt;/var&gt; by this criterion, then &lt;code&gt;assoc-default&lt;/code&gt; returns a value based on this element. If the element is a cons, then the value is the element&amp;rsquo;s &lt;small&gt;CDR&lt;/small&gt;. Otherwise, the return value is &lt;var&gt;default&lt;/var&gt;.</source>
          <target state="translated">alist要素がこの基準で &lt;var&gt;key&lt;/var&gt; 一致する場合、 &lt;code&gt;assoc-default&lt;/code&gt; はこの要素に基づいた値を返します。要素が短所の場合、値は要素の&lt;small&gt;CDR&lt;/small&gt;です。それ以外の場合、戻り値は &lt;var&gt;default&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bfdfc86e81d4db3fe90351ba0ef1fb79c3e2576" translate="yes" xml:space="preserve">
          <source>If an editor command sets this variable non-&lt;code&gt;nil&lt;/code&gt;, then the editor command loop deactivates the mark after the command returns (if Transient Mark mode is enabled). All the primitives that change the buffer set &lt;code&gt;deactivate-mark&lt;/code&gt;, to deactivate the mark when the command is finished. Setting this variable makes it buffer-local.</source>
          <target state="translated">エディタコマンドがこの変数を &lt;code&gt;nil&lt;/code&gt; 以外に設定すると、コマンドが戻った後、エディタコマンドループがマークを非アクティブにします（トランジェントマークモードが有効になっている場合）。コマンドの終了時にマークを非アクティブ化するために、バッファセット &lt;code&gt;deactivate-mark&lt;/code&gt; を変更するすべてのプリミティブ。この変数を設定すると、バッファローカルになります。</target>
        </trans-unit>
        <trans-unit id="4b945adb45e9f446f56407d3dc48a6722aedabb2" translate="yes" xml:space="preserve">
          <source>If an element of &lt;code&gt;auto-mode-alist&lt;/code&gt; has the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt;
&lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt;, then after calling &lt;var&gt;function&lt;/var&gt;, Emacs searches &lt;code&gt;auto-mode-alist&lt;/code&gt; again for a match against the portion of the file name that did not match before. This feature is useful for uncompression packages: an entry of the form &lt;code&gt;(&quot;\\.gz\\'&quot;
&lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt; can uncompress the file and then put the uncompressed file in the proper mode according to the name sans &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;auto-mode-alist&lt;/code&gt; の要素の形式が &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; &lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt; 場合、 &lt;var&gt;function&lt;/var&gt; を呼び出した後、Emacsは &lt;code&gt;auto-mode-alist&lt;/code&gt; を再度検索して、以前に一致しなかったファイル名の部分との一致を探します。この機能は、解凍パッケージに役立ちます &lt;code&gt;(&quot;\\.gz\\'&quot; &lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt; フォーム（ &quot;\\。gz \\ '&quot; function t）のエントリは、ファイルを解凍してから、名前sans'に従って非圧縮ファイルを適切なモードにすることができます。</target>
        </trans-unit>
        <trans-unit id="1fd0bc1acf76a530f3520b116420dfdd3224243b" translate="yes" xml:space="preserve">
          <source>If an element of &lt;code&gt;completion-ignored-extensions&lt;/code&gt; ends in a slash &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;completion-ignored-extensions&lt;/code&gt; 要素がスラッシュで終わる場合'</target>
        </trans-unit>
        <trans-unit id="f0bedb2e343491e22a55abc5e6b2edad751f20da" translate="yes" xml:space="preserve">
          <source>If an element of &lt;var&gt;display&lt;/var&gt; specifies more than one &lt;var&gt;value&lt;/var&gt; for a given &lt;var&gt;characteristic&lt;/var&gt;, any of those values is acceptable. If &lt;var&gt;display&lt;/var&gt; has more than one element, each element should specify a different &lt;var&gt;characteristic&lt;/var&gt;; then &lt;em&gt;each&lt;/em&gt; characteristic of the terminal must match one of the &lt;var&gt;value&lt;/var&gt;s specified for it in &lt;var&gt;display&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;display&lt;/var&gt; の要素が特定の &lt;var&gt;characteristic&lt;/var&gt; 複数の &lt;var&gt;value&lt;/var&gt; を指定している場合、それらの値のいずれも受け入れられます。 &lt;var&gt;display&lt;/var&gt; に複数の要素がある場合、各要素は異なる &lt;var&gt;characteristic&lt;/var&gt; を指定する必要があります。次に、端末の&lt;em&gt;各&lt;/em&gt;特性は、 &lt;var&gt;display&lt;/var&gt; 指定された &lt;var&gt;value&lt;/var&gt; の1つと一致する必要があります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0f85ef9bf7f78b5e45751f2cae294ae69e741d6" translate="yes" xml:space="preserve">
          <source>If an element of a keymap is a char-table, it counts as holding bindings for all character events with no modifier bits (see &lt;a href=&quot;other-char-bits#modifier-bits&quot;&gt;modifier bits&lt;/a&gt;): the element whose index is &lt;var&gt;c&lt;/var&gt; is the binding for the character &lt;var&gt;c&lt;/var&gt;. This is a compact way to record lots of bindings. A keymap with such a char-table is called a &lt;em&gt;full keymap&lt;/em&gt;. Other keymaps are called &lt;em&gt;sparse keymaps&lt;/em&gt;.</source>
          <target state="translated">キーマップの要素がchar-tableの場合、修飾子ビットのないすべての文字イベントのバインディングを保持していると見なされます（&lt;a href=&quot;other-char-bits#modifier-bits&quot;&gt;修飾子ビットを&lt;/a&gt;参照）。インデックスが &lt;var&gt;c&lt;/var&gt; の要素は、文字 &lt;var&gt;c&lt;/var&gt; のバインディングです。これは、多くのバインディングを記録するためのコンパクトな方法です。このようなchar-tableを持つキーマップは、&lt;em&gt;完全キーマップ&lt;/em&gt;と呼ばれます。他のキーマップは&lt;em&gt;スパースキーマップ&lt;/em&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="c9922dfd72e7c6301d3e7e3226411370e6e9e816" translate="yes" xml:space="preserve">
          <source>If an element of a keymap is itself a keymap, it counts as if this inner keymap were inlined in the outer keymap. This is used for multiple-inheritance, such as in &lt;code&gt;make-composed-keymap&lt;/code&gt;.</source>
          <target state="translated">キーマップの要素自体がキーマップである場合、この内側のキーマップが外側のキーマップにインライン化されているかのようにカウントされます。これは、 &lt;code&gt;make-composed-keymap&lt;/code&gt; などの多重継承に使用されます。</target>
        </trans-unit>
        <trans-unit id="794700a26b21d88036a1d6d6c1bb7a8042db8bd7" translate="yes" xml:space="preserve">
          <source>If an error (or other nonlocal exit) occurs inside the body of &lt;code&gt;atomic-change-group&lt;/code&gt;, it unmakes all the changes in that buffer that were during the execution of the body. This kind of change group has no effect on any other buffers&amp;mdash;any such changes remain.</source>
          <target state="translated">&lt;code&gt;atomic-change-group&lt;/code&gt; の本体内でエラー（または他の非ローカル出口）が発生した場合、本体の実行中に行われたそのバッファー内のすべての変更が取り消されます。この種の変更グループは、他のバッファには影響しません。そのような変更は残ります。</target>
        </trans-unit>
        <trans-unit id="b96d2db48a3e38faee5fded775347f9916a661df" translate="yes" xml:space="preserve">
          <source>If an error happens during execution of a filter function, it is caught automatically, so that it doesn&amp;rsquo;t stop the execution of whatever program was running when the filter function was started. However, if &lt;code&gt;debug-on-error&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, errors are not caught. This makes it possible to use the Lisp debugger to debug filter functions. See &lt;a href=&quot;debugger#Debugger&quot;&gt;Debugger&lt;/a&gt;.</source>
          <target state="translated">フィルタ機能の実行中にエラーが発生した場合、エラーは自動的にキャッチされるため、フィルタ機能の開始時に実行されていたプログラムの実行が停止することはありません。ただし、 &lt;code&gt;debug-on-error&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、エラーはキャッチされません。これにより、Lispデバッガーを使用してフィルター関数をデバッグすることが可能になります。&lt;a href=&quot;debugger#Debugger&quot;&gt;デバッガーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="16d5d6b6ed23920d3d7ce1f0ad21aad044d422f0" translate="yes" xml:space="preserve">
          <source>If an error happens during execution of a sentinel, it is caught automatically, so that it doesn&amp;rsquo;t stop the execution of whatever programs was running when the sentinel was started. However, if &lt;code&gt;debug-on-error&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, errors are not caught. This makes it possible to use the Lisp debugger to debug the sentinel. See &lt;a href=&quot;debugger#Debugger&quot;&gt;Debugger&lt;/a&gt;.</source>
          <target state="translated">センチネルの実行中にエラーが発生した場合、エラーは自動的にキャッチされるため、センチネルの開始時に実行されていたプログラムの実行は停止されません。ただし、 &lt;code&gt;debug-on-error&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、エラーはキャッチされません。これにより、Lispデバッガーを使用してセンチネルをデバッグすることが可能になります。&lt;a href=&quot;debugger#Debugger&quot;&gt;デバッガーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7576496955d9c8fe66999ffe6ac9638a3d4b0d14" translate="yes" xml:space="preserve">
          <source>If an error is handled by some &lt;code&gt;condition-case&lt;/code&gt; form, this ordinarily prevents the debugger from being run, even if &lt;code&gt;debug-on-error&lt;/code&gt; says this error should invoke the debugger.</source>
          <target state="translated">エラーが何らかの &lt;code&gt;condition-case&lt;/code&gt; 形式で処理される場合、 &lt;code&gt;debug-on-error&lt;/code&gt; がこのエラーがデバッガーを呼び出す必要があると言っていても、通常はデバッガーの実行を妨げます。</target>
        </trans-unit>
        <trans-unit id="bb1089078e8bda3d5179947460aa8b6a9afdccb9" translate="yes" xml:space="preserve">
          <source>If an error occurs during an evaluation from the evaluation list, the error message is displayed in a string as if it were the result. Therefore, expressions using variables that are not currently valid do not interrupt your debugging.</source>
          <target state="translated">評価リストからの評価中にエラーが発生した場合は、結果のように文字列で表示されます。そのため、現在有効ではない変数を使った式は、デバッグの邪魔になりません。</target>
        </trans-unit>
        <trans-unit id="cd204baa76eb198b8d26040a8681eac19d3a32a6" translate="yes" xml:space="preserve">
          <source>If an error was signaled, presumably the variable &lt;code&gt;debug-on-error&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. If &lt;code&gt;quit&lt;/code&gt; was signaled, then presumably the variable &lt;code&gt;debug-on-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">エラーが通知された場合、おそらく変数 &lt;code&gt;debug-on-error&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; 以外です。場合は &lt;code&gt;quit&lt;/code&gt; 合図し、その後、おそらく変数 &lt;code&gt;debug-on-quit&lt;/code&gt; 非で &lt;code&gt;nil&lt;/code&gt; に。</target>
        </trans-unit>
        <trans-unit id="0ac4638e34f448d2176b52875ef4f2ae48a1c64a" translate="yes" xml:space="preserve">
          <source>If an expression in your program produces a value containing circular list structure, you may get an error when Edebug attempts to print it.</source>
          <target state="translated">プログラム内の式が循環リスト構造を含む値を生成すると、Edebugがそれを印刷しようとするときにエラーが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="83e95e3593e5ba7d75e8a5f81e09496856f8762e" translate="yes" xml:space="preserve">
          <source>If an expression&amp;rsquo;s first symbol is that of a special form, the expression should follow the rules of that special form; otherwise, Emacs&amp;rsquo;s behavior is not well-defined (though it will not crash). For example, &lt;code&gt;((lambda (x) x . 3) 4)&lt;/code&gt; contains a subexpression that begins with &lt;code&gt;lambda&lt;/code&gt; but is not a well-formed &lt;code&gt;lambda&lt;/code&gt; expression, so Emacs may signal an error, or may return 3 or 4 or &lt;code&gt;nil&lt;/code&gt;, or may behave in other ways.</source>
          <target state="translated">式の最初の記号が特殊形式の記号である場合、式はその特殊形式の規則に従う必要があります。そうでなければ、Emacsの振る舞いは明確に定義されていません（クラッシュはしませんが）。たとえば、 &lt;code&gt;((lambda (x) x . 3) 4)&lt;/code&gt; x。3 ）4）には、 &lt;code&gt;lambda&lt;/code&gt; で始まる部分式が含まれていますが、整形式の &lt;code&gt;lambda&lt;/code&gt; 式ではないため、Emacsはエラーを通知したり、3、4、 &lt;code&gt;nil&lt;/code&gt; を返したり、他の方法で動作します。</target>
        </trans-unit>
        <trans-unit id="ef63e3482304164515199599167722e126821fc8" translate="yes" xml:space="preserve">
          <source>If an image in the image cache has not been displayed for a specified period of time, Emacs removes it from the cache and frees the associated memory.</source>
          <target state="translated">画像キャッシュ内の画像が指定された期間表示されなかった場合、Emacs はキャッシュから画像を削除し、関連するメモリを解放します。</target>
        </trans-unit>
        <trans-unit id="b0b9eb6f1ea605f94ee0744cdcce85dafd0092ee" translate="yes" xml:space="preserve">
          <source>If an input character is upper-case (or has the shift modifier) and has no key binding, but its lower-case equivalent has one, then &lt;code&gt;read-key-sequence&lt;/code&gt; converts the character to lower case. Note that &lt;code&gt;lookup-key&lt;/code&gt; does not perform case conversion in this way.</source>
          <target state="translated">入力文字が大文字であり（またはシフト修飾子があり）、キーバインディングがないが、それに相当する小文字にキーバインディングがある場合、 &lt;code&gt;read-key-sequence&lt;/code&gt; は文字を小文字に変換します。 &lt;code&gt;lookup-key&lt;/code&gt; は、この方法では大文字と小文字の変換を実行しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c978c7eeed0d2a8515ee8ca4aeb1040cc8a43019" translate="yes" xml:space="preserve">
          <source>If an overlay has a &lt;code&gt;category&lt;/code&gt; property, we call it the &lt;em&gt;category&lt;/em&gt; of the overlay. It should be a symbol. The properties of the symbol serve as defaults for the properties of the overlay.</source>
          <target state="translated">オーバーレイに &lt;code&gt;category&lt;/code&gt; プロパティがある場合、それをオーバーレイのカテゴリと呼び&lt;em&gt;ます&lt;/em&gt;。それはシンボルでなければなりません。シンボルのプロパティは、オーバーレイのプロパティのデフォルトとして機能します。</target>
        </trans-unit>
        <trans-unit id="c237ac180b9da966635d558c6b10abd0eea515bb" translate="yes" xml:space="preserve">
          <source>If an overlay has a &lt;code&gt;help-echo&lt;/code&gt; property, then when you move the mouse onto the text in the overlay, Emacs displays a help string in the echo area, or in the tooltip window. For details see &lt;a href=&quot;special-properties#Text-help_002decho&quot;&gt;Text help-echo&lt;/a&gt;.</source>
          <target state="translated">オーバーレイに &lt;code&gt;help-echo&lt;/code&gt; プロパティがある場合、オーバーレイ内のテキストにマウスを移動すると、Emacsはエコー領域またはツールチップウィンドウにヘルプ文字列を表示します。詳細については、&lt;a href=&quot;special-properties#Text-help_002decho&quot;&gt;テキストヘルプエコーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8e7059e05227dc5f1ff385e286e4aadac14a7bb0" translate="yes" xml:space="preserve">
          <source>If any buffers are auto-saved, &lt;code&gt;do-auto-save&lt;/code&gt; normally displays a message saying &amp;lsquo;</source>
          <target state="translated">バッファが自動保存されている場合、 &lt;code&gt;do-auto-save&lt;/code&gt; は通常、「」というメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="b398921f8b70f112936a79cd10e1c65e69b5289d" translate="yes" xml:space="preserve">
          <source>If any full-width windows are present, only those windows are considered. A minibuffer window is never a candidate. A dedicated window (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;) is never a candidate unless the optional argument &lt;var&gt;dedicated&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. The selected window is never returned, unless it is the only candidate. However, if the optional argument &lt;var&gt;not-selected&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns &lt;code&gt;nil&lt;/code&gt; in that case.</source>
          <target state="translated">全幅ウィンドウが存在する場合、それらのウィンドウのみが考慮されます。ミニバッファウィンドウが候補になることはありません。専用のウィンドウ（参照&lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;専用のWindowsは、&lt;/a&gt;オプションの引数がない限り）候補になることはありません &lt;var&gt;dedicated&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; で。選択したウィンドウが唯一の候補でない限り、返されることはありません。オプションの引数ただし、 &lt;var&gt;not-selected&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、この関数の戻りは &lt;code&gt;nil&lt;/code&gt; をその場合。</target>
        </trans-unit>
        <trans-unit id="f7ea12623a225de3a0805b08cfcbf1a9f944e06a" translate="yes" xml:space="preserve">
          <source>If any function in &lt;code&gt;write-region-annotate-functions&lt;/code&gt; returns with a different buffer current, Emacs calls &lt;code&gt;write-region-post-annotation-function&lt;/code&gt; more than once. Emacs calls it with the last buffer that was current, and again with the buffer before that, and so on back to the original buffer.</source>
          <target state="translated">&lt;code&gt;write-region-annotate-functions&lt;/code&gt; のいずれかの関数が異なるバッファ電流で戻る場合、Emacsは &lt;code&gt;write-region-post-annotation-function&lt;/code&gt; を複数回呼び出します。 Emacsはそれを現在の最後のバッファーで呼び出し、その前のバッファーで呼び出し、以下同様に元のバッファーに戻します。</target>
        </trans-unit>
        <trans-unit id="207735bef0d8ecc047235f0cdc4365432c0e909e" translate="yes" xml:space="preserve">
          <source>If any given attribute has not been specified during the preceding steps, Emacs applies the attribute of the &lt;code&gt;default&lt;/code&gt; face.</source>
          <target state="translated">前のステップで特定の属性が指定されていない場合、Emacsは &lt;code&gt;default&lt;/code&gt; 面の属性を適用します。</target>
        </trans-unit>
        <trans-unit id="8a4fd90c3d8ffc0107542304b0d34991bf68442f" translate="yes" xml:space="preserve">
          <source>If any of the &lt;var&gt;conditions&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt;, then the result of the &lt;code&gt;and&lt;/code&gt; must be &lt;code&gt;nil&lt;/code&gt; regardless of the remaining &lt;var&gt;conditions&lt;/var&gt;; so &lt;code&gt;and&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; right away, ignoring the remaining &lt;var&gt;conditions&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;conditions&lt;/var&gt; いずれかが &lt;code&gt;nil&lt;/code&gt; と評価された場合、残りの &lt;var&gt;conditions&lt;/var&gt; 関係なく、 &lt;code&gt;and&lt;/code&gt; の結果は &lt;code&gt;nil&lt;/code&gt; でなければなりません。したがって、残りの &lt;var&gt;conditions&lt;/var&gt; 無視して、すぐに &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;and&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="fdf1f839b81c56a0c15cfb77ed81ec0e32313b36" translate="yes" xml:space="preserve">
          <source>If any of the &lt;var&gt;conditions&lt;/var&gt; evaluates to a non-&lt;code&gt;nil&lt;/code&gt; value, then the result of the &lt;code&gt;or&lt;/code&gt; must be non-&lt;code&gt;nil&lt;/code&gt;; so &lt;code&gt;or&lt;/code&gt; returns right away, ignoring the remaining &lt;var&gt;conditions&lt;/var&gt;. The value it returns is the non-&lt;code&gt;nil&lt;/code&gt; value of the condition just evaluated.</source>
          <target state="translated">&lt;var&gt;conditions&lt;/var&gt; いずれかが非 &lt;code&gt;nil&lt;/code&gt; 値と評価された場合、 &lt;code&gt;or&lt;/code&gt; の結果は非 &lt;code&gt;nil&lt;/code&gt; でなければなりません。そう &lt;code&gt;or&lt;/code&gt; 残りの &lt;var&gt;conditions&lt;/var&gt; 無視して、すぐに戻ります。返される値は、評価されたばかりの条件の &lt;code&gt;nil&lt;/code&gt; 以外の値です。</target>
        </trans-unit>
        <trans-unit id="c49c4e3f88c006d5e147f8d6c7e243982a86546c" translate="yes" xml:space="preserve">
          <source>If any of the functions in this hook returns non-&lt;code&gt;nil&lt;/code&gt;, the file is considered already written and the rest are not called and neither are the functions in &lt;code&gt;write-file-functions&lt;/code&gt;.</source>
          <target state="translated">このフックの関数のいずれかが &lt;code&gt;nil&lt;/code&gt; 以外を返す場合、ファイルはすでに書き込まれていると見なされ、残りは呼び出されず、 &lt;code&gt;write-file-functions&lt;/code&gt; の関数も呼び出されません。</target>
        </trans-unit>
        <trans-unit id="01ea4c2d2042c831547f78252041f98a8f433fa9" translate="yes" xml:space="preserve">
          <source>If any of the specified values is zero, no window can be created on the corresponding side. &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; will not signal an error in that case, but will return &lt;code&gt;nil&lt;/code&gt;. If a specified value just forbids the creation of an additional side window, the most suitable window on that side is reused and may have its &lt;code&gt;window-slot&lt;/code&gt; parameter changed accordingly.</source>
          <target state="translated">指定された値のいずれかがゼロの場合、対応する側にウィンドウを作成できません。その場合、 &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; はエラーを通知しませんが、 &lt;code&gt;nil&lt;/code&gt; を返します。指定された値が追加のサイドウィンドウの作成を禁止している場合、そのサイドで最も適切なウィンドウが再利用され、それに応じて &lt;code&gt;window-slot&lt;/code&gt; パラメータが変更される場合があります。</target>
        </trans-unit>
        <trans-unit id="374b52ae64de7017caf47364121148c90657479f" translate="yes" xml:space="preserve">
          <source>If any other type of object is found, the events used so far in the lookup form a complete key, and the object is its binding, but the binding is not executable as a command.</source>
          <target state="translated">他のタイプのオブジェクトが見つかった場合、ルックアップでこれまでに使用されたイベントが完全なキーを形成し、オブジェクトはそのバインディングであるが、バインディングはコマンドとして実行可能ではない。</target>
        </trans-unit>
        <trans-unit id="1d8e8479db6971bdadb82163778c2d31bd749b04" translate="yes" xml:space="preserve">
          <source>If any text in the region already has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;face&lt;/code&gt; property, those face(s) are retained. This function sets the &lt;code&gt;face&lt;/code&gt; property to a list of faces, with &lt;var&gt;face&lt;/var&gt; as the first element (by default) and the pre-existing faces as the remaining elements. If the optional argument &lt;var&gt;appendp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;face&lt;/var&gt; is appended to the end of the list instead. Note that in a face list, the first occurring value for each attribute takes precedence.</source>
          <target state="translated">領域内のテキストにすでに &lt;code&gt;nil&lt;/code&gt; 以外の &lt;code&gt;face&lt;/code&gt; プロパティがある場合、それらのfaceは保持されます。この関数は、設定 &lt;code&gt;face&lt;/code&gt; と、顔のリストにプロパティを &lt;var&gt;face&lt;/var&gt; （デフォルト）最初の要素と残りの要素のような既存の顔として。オプションの引数 &lt;var&gt;appendp&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、代わりに &lt;var&gt;face&lt;/var&gt; がリストの最後に追加されます。フェイスリストでは、各属性の最初に出現する値が優先されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6f6bfe9f1061d8adf7f832f1826f0f50c0156163" translate="yes" xml:space="preserve">
          <source>If appropriate, it creates a graphical frame. As part of creating the graphical frame, it initializes the window system specified by &lt;code&gt;initial-frame-alist&lt;/code&gt; and &lt;code&gt;default-frame-alist&lt;/code&gt; (see &lt;a href=&quot;initial-parameters#Initial-Parameters&quot;&gt;Initial Parameters&lt;/a&gt;) for the graphical frame, by calling the &lt;code&gt;window-system-initialization&lt;/code&gt; function for that window system. This is not done in batch (noninteractive) or daemon mode.</source>
          <target state="translated">必要に応じて、グラフィカルフレームを作成します。グラフィカルフレームの作成の一部として、グラフィカルフレームの &lt;code&gt;initial-frame-alist&lt;/code&gt; および &lt;code&gt;default-frame-alist&lt;/code&gt; （&lt;a href=&quot;initial-parameters#Initial-Parameters&quot;&gt;初期パラメーターを&lt;/a&gt;参照）で指定されたウィンドウシステムを、そのウィンドウシステムの &lt;code&gt;window-system-initialization&lt;/code&gt; 関数を呼び出して初期化します。これは、バッチ（非対話型）モードまたはデーモンモードでは実行されません。</target>
        </trans-unit>
        <trans-unit id="0be5fcf223e7492c26c34f33aba4f7281833b444" translate="yes" xml:space="preserve">
          <source>If argument &lt;var&gt;preserve-uid-gid&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, we let the operating system decide the user and group ownership of the new file (this is usually set to the user running Emacs). If &lt;var&gt;preserve-uid-gid&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, we attempt to copy the user and group ownership of the file. This works only on some operating systems, and only if you have the correct permissions to do so.</source>
          <target state="translated">引数 &lt;var&gt;preserve-uid-gid&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、オペレーティングシステムに新しいファイルのユーザーとグループの所有権を決定させます（これは通常、Emacsを実行しているユーザーに設定されます）。場合は &lt;var&gt;preserve-uid-gid&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; に、我々はファイルのユーザーとグループの所有権をコピーしようとします。これは、一部のオペレーティングシステムでのみ機能し、適切な権限がある場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="b901b43ecef22f92e6dad567b955ac1454dffa56" translate="yes" xml:space="preserve">
          <source>If at garbage collection time the undo info for the current command exceeds this limit, Emacs discards the info and displays a warning. This is a last ditch limit to prevent memory overflow.</source>
          <target state="translated">ガベージコレクション時に現在のコマンドの undo 情報がこの制限を超えると、Emacs は情報を破棄して警告を表示します。これは、メモリオーバーフローを防ぐための最後の手段です。</target>
        </trans-unit>
        <trans-unit id="7a492759d0b9fd8e5bf98107c2695c5fae247780" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;:max-width&lt;/code&gt; and &lt;code&gt;:height&lt;/code&gt; are specified, but &lt;code&gt;:width&lt;/code&gt; is not, preserving the aspect ratio might require that width exceeds &lt;code&gt;:max-width&lt;/code&gt;. If this happens, scaling will use a smaller value for the height so as to preserve the aspect ratio while not exceeding &lt;code&gt;:max-width&lt;/code&gt;. Similarly when both &lt;code&gt;:max-height&lt;/code&gt; and &lt;code&gt;:width&lt;/code&gt; are specified, but &lt;code&gt;:height&lt;/code&gt; is not. For example, if you have a 200x100 image and specify that &lt;code&gt;:width&lt;/code&gt; should be 400 and &lt;code&gt;:max-height&lt;/code&gt; should be 150, you&amp;rsquo;ll end up with an image that is 300x150: Preserving the aspect ratio and not exceeding the &amp;ldquo;max&amp;rdquo; setting. This combination of parameters is a useful way of saying &amp;ldquo;display this image as large as possible, but no larger than the available display area&amp;rdquo;.</source>
          <target state="translated">両方の場合 &lt;code&gt;:max-width&lt;/code&gt; と &lt;code&gt;:height&lt;/code&gt; 指定されますが、 &lt;code&gt;:width&lt;/code&gt; ない、アスペクト比が幅を超えることが必要な場合があります保存 &lt;code&gt;:max-width&lt;/code&gt; 。これが発生した場合、スケーリングでは、 &lt;code&gt;:max-width&lt;/code&gt; を超えないようにアスペクト比を維持するために、高さの値を小さくします。同様に、 &lt;code&gt;:max-height&lt;/code&gt; と &lt;code&gt;:width&lt;/code&gt; の両方が指定されているが、 &lt;code&gt;:height&lt;/code&gt; が指定されていない場合。たとえば、200x100の画像があり、 &lt;code&gt;:width&lt;/code&gt; を400、 &lt;code&gt;:max-height&lt;/code&gt; を指定した場合150にする必要があります。最終的には、300x150の画像になります。アスペクト比を維持し、「最大」設定を超えないようにします。このパラメータの組み合わせは、「この画像をできるだけ大きく表示しますが、使用可能な表示領域より大きくしない」という便利な方法です。</target>
        </trans-unit>
        <trans-unit id="b0ee3f6c00c1b8ce8a38eb0b6b009d345cdf245e" translate="yes" xml:space="preserve">
          <source>If both &lt;var&gt;target&lt;/var&gt; and &lt;var&gt;linkname&lt;/var&gt; have remote file name syntax, and if both remote identifications are equal, the symbolic link points to the local file name part of &lt;var&gt;target&lt;/var&gt;.</source>
          <target state="translated">両方の場合は &lt;var&gt;target&lt;/var&gt; と &lt;var&gt;linkname&lt;/var&gt; リモートファイル名の構文を持ち、両方の遠隔識別が等しい場合、ローカルファイル名の一部にシンボリックリンク &lt;var&gt;target&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb151627cc061abee8d8bf5fa108eaf13699a0a3" translate="yes" xml:space="preserve">
          <source>If called from Lisp with a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;buffer&lt;/var&gt; argument, this function displays the documentation for that buffer&amp;rsquo;s major and minor modes, rather than those of the current buffer.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の &lt;var&gt;buffer&lt;/var&gt; 引数を使用してLispから呼び出された場合、この関数は、現在のバッファのドキュメントではなく、そのバッファのメジャーモードとマイナーモードのドキュメントを表示します。</target>
        </trans-unit>
        <trans-unit id="b78048003acdb1229558285b58cce83d7ed8a966" translate="yes" xml:space="preserve">
          <source>If called interactively with no prefix argument, this command invokes a transient mode for adjusting indentation rigidly. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Indentation-Commands.html#Indentation-Commands&quot;&gt;Indentation Commands&lt;/a&gt; in</source>
          <target state="translated">プレフィックス引数なしでインタラクティブに呼び出された場合、このコマンドはインデントを厳密に調整するための一時モードを呼び出します。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Indentation-Commands.html#Indentation-Commands&quot;&gt;インデントコマンド&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="a2f05e0f166dde8de0bcdfd83d874da97c808afc" translate="yes" xml:space="preserve">
          <source>If called interactively, this command prompts for &lt;var&gt;character&lt;/var&gt; using its Unicode name or its code point. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Inserting-Text.html#Inserting-Text&quot;&gt;Inserting Text&lt;/a&gt; in</source>
          <target state="translated">インタラクティブに呼び出された場合、このコマンドはUnicode名またはコードポイントを使用して &lt;var&gt;character&lt;/var&gt; 入力を求めます。参照&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Inserting-Text.html#Inserting-Text&quot;&gt;の挿入テキスト&lt;/a&gt;で</target>
        </trans-unit>
        <trans-unit id="bec58c9c6f7e1d78b7e04af503844fbe0b77e8d8" translate="yes" xml:space="preserve">
          <source>If called non-interactively, &lt;var&gt;mode&lt;/var&gt; must be an integer. Only the lowest 12 bits of the integer are used; on most systems, only the lowest 9 bits are meaningful. You can use the Lisp construct for octal numbers to enter &lt;var&gt;mode&lt;/var&gt;. For example,</source>
          <target state="translated">非対話的に呼び出される場合、 &lt;var&gt;mode&lt;/var&gt; は整数でなければなりません。整数の下位12ビットのみが使用されます。ほとんどのシステムでは、最下位9ビットのみが意味を持ちます。8進数のLisp構造を使用して &lt;var&gt;mode&lt;/var&gt; に入ることができます。例えば、</target>
        </trans-unit>
        <trans-unit id="697a3e2341919babe955a417091c1d61e468dd0f" translate="yes" xml:space="preserve">
          <source>If compiled with GnuTLS, Emacs offers built-in cryptographic support. Following the GnuTLS API terminology, the available tools are digests, MACs, symmetric ciphers, and AEAD ciphers.</source>
          <target state="translated">GnuTLS でコンパイルした場合、Emacs は組み込みの暗号化サポートを提供します。GnuTLS API の用語に従って、利用可能なツールには、ダイジェスト、MAC、対称暗号、および AEAD 暗号があります。</target>
        </trans-unit>
        <trans-unit id="0b4caab5499880569503f08e74d47fa52d4abb14" translate="yes" xml:space="preserve">
          <source>If consecutive characters have unequal non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;intangible&lt;/code&gt; properties, they belong to separate groups; each group is separately treated as described above.</source>
          <target state="translated">連続した文字が等しくない非がある場合は &lt;code&gt;nil&lt;/code&gt; の &lt;code&gt;intangible&lt;/code&gt; の性質を、彼らは別のグループに属しています。各グループは、上記のように個別に扱われます。</target>
        </trans-unit>
        <trans-unit id="8861219114987340fa0175b8d8040faddf5d79f9" translate="yes" xml:space="preserve">
          <source>If decoded text is inserted in some buffer, this command returns the length of the decoded text. If that buffer is a unibyte buffer (see &lt;a href=&quot;selecting-a-representation#Selecting-a-Representation&quot;&gt;Selecting a Representation&lt;/a&gt;), the internal representation of the decoded text (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;) is inserted into the buffer as individual bytes.</source>
          <target state="translated">デコードされたテキストがバッファに挿入されている場合、このコマンドはデコードされたテキストの長さを返します。そのバッファがユニバイトバッファの場合（&lt;a href=&quot;selecting-a-representation#Selecting-a-Representation&quot;&gt;表現の選択を&lt;/a&gt;参照）、デコードされたテキストの内部表現（&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;テキスト表現を&lt;/a&gt;参照）が個別のバイトとしてバッファに挿入されます。</target>
        </trans-unit>
        <trans-unit id="1868b5514617e7be689264a4de2fe369509204fb" translate="yes" xml:space="preserve">
          <source>If deleting the window would leave no more windows in the window tree (e.g., if it is the only live window in the frame) or all remaining windows on &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame are side windows (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;), an error is signaled. If &lt;var&gt;window&lt;/var&gt; is part of an atomic window (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;), this function tries to delete the root of that atomic window instead.</source>
          <target state="translated">ウィンドウを削除すると（それがフレーム内の唯一のライブウィンドウである場合、例えば）ウィンドウのツリーには複数のウィンドウを残さないだろうか、上に残っているすべてのウィンドウ場合は &lt;var&gt;window&lt;/var&gt; の枠は、側面の窓（参照される&lt;a href=&quot;side-windows#Side-Windows&quot;&gt;側のWindowsを&lt;/a&gt;）、エラーが通知されます。 &lt;var&gt;window&lt;/var&gt; がアトミックウィンドウの一部である場合（&lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windowsを&lt;/a&gt;参照）、この関数は代わりにそのアトミックウィンドウのルートを削除しようとします。</target>
        </trans-unit>
        <trans-unit id="17cc98f8b3f5bbd9f9adfc31e26ce49f0be6a385" translate="yes" xml:space="preserve">
          <source>If either of these functions is called in a command that was invoked using the mouse&amp;mdash;more precisely, if &lt;code&gt;last-nonmenu-event&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;) is either &lt;code&gt;nil&lt;/code&gt; or a list&amp;mdash;then it uses a dialog box or pop-up menu to ask the question. Otherwise, it uses keyboard input. You can force use either of the mouse or of keyboard input by binding &lt;code&gt;last-nonmenu-event&lt;/code&gt; to a suitable value around the call.</source>
          <target state="translated">これらの関数のいずれかがマウスを使用して呼び出されたコマンドで呼び出された場合、より正確には、 &lt;code&gt;last-nonmenu-event&lt;/code&gt; （&lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;コマンドループ情報を&lt;/a&gt;参照）が &lt;code&gt;nil&lt;/code&gt; またはlistの場合、ダイアログボックスまたはポップアップメニューを使用します。質問をします。それ以外の場合は、キーボード入力を使用します。 &lt;code&gt;last-nonmenu-event&lt;/code&gt; を呼び出しの周囲の適切な値にバインドすることにより、マウスまたはキーボード入力のいずれかを強制的に使用できます。</target>
        </trans-unit>
        <trans-unit id="45bf1b4255bac8c96c5cbfb0ef79309aaa2aa0fc" translate="yes" xml:space="preserve">
          <source>If encoded text is inserted in some buffer, this command returns the length of the encoded text.</source>
          <target state="translated">エンコードされたテキストが何らかのバッファに挿入されている場合、このコマンドはエンコードされたテキストの長さを返します。</target>
        </trans-unit>
        <trans-unit id="7cfcf382829c0a591a31d5f1858635938f636235" translate="yes" xml:space="preserve">
          <source>If every &lt;var&gt;condition&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt;, so that every clause fails, &lt;code&gt;cond&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">すべての &lt;var&gt;condition&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; と評価され、すべての句が失敗した場合、 &lt;code&gt;cond&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="16b308e442a51b045935b6909d71f2c02991dcac" translate="yes" xml:space="preserve">
          <source>If functions are defined programmatically (with &lt;code&gt;fset&lt;/code&gt; say), then &lt;code&gt;eval-and-compile&lt;/code&gt; can be used to have that done at compile-time as well as run-time, so calls to those functions are checked (and warnings about &amp;ldquo;not known to be defined&amp;rdquo; suppressed).</source>
          <target state="translated">関数がプログラムで定義されている場合（ &lt;code&gt;fset&lt;/code&gt; sayを使用）、 &lt;code&gt;eval-and-compile&lt;/code&gt; を使用して、実行時だけでなくコンパイル時にも実行できるため、これらの関数の呼び出しがチェックされます（および「定義される」抑制）。</target>
        </trans-unit>
        <trans-unit id="5c129c5231bb00580890ea0f7117085c0fa3bf61" translate="yes" xml:space="preserve">
          <source>If given, this should be the identifier of a previously defined gradient object.</source>
          <target state="translated">与えられた場合、これは以前に定義されたグラデーションオブジェクトの識別子でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7e6a51a5498996905b492caacc6859cb50ba7919" translate="yes" xml:space="preserve">
          <source>If image transforms are not supported, &lt;code&gt;:rotation&lt;/code&gt;, &lt;code&gt;:crop&lt;/code&gt;, &lt;code&gt;:width&lt;/code&gt;, &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:scale&lt;/code&gt;, &lt;code&gt;:max-width&lt;/code&gt; and &lt;code&gt;:max-height&lt;/code&gt; will only be usable through ImageMagick, if available (see &lt;a href=&quot;imagemagick-images#ImageMagick-Images&quot;&gt;ImageMagick Images&lt;/a&gt;).</source>
          <target state="translated">画像変換がサポートされていない場合、 &lt;code&gt;:rotation&lt;/code&gt; 、 &lt;code&gt;:crop&lt;/code&gt; 、 &lt;code&gt;:width&lt;/code&gt; 、 &lt;code&gt;:height&lt;/code&gt; 、 &lt;code&gt;:scale&lt;/code&gt; 、 &lt;code&gt;:max-width&lt;/code&gt; 、および &lt;code&gt;:max-height&lt;/code&gt; は、使用可能な場合、ImageMagickを介してのみ使用できます（&lt;a href=&quot;imagemagick-images#ImageMagick-Images&quot;&gt;ImageMagick Imagesを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="be1841000b7ca7ecd02fe657726d303725073556" translate="yes" xml:space="preserve">
          <source>If in doubt, use &lt;code&gt;any&lt;/code&gt;; the only known proper use of &lt;code&gt;interactive&lt;/code&gt; is if you need to decide whether to display a helpful message while a function is running.</source>
          <target state="translated">疑わしい場合は、 &lt;code&gt;any&lt;/code&gt; かを使用してください。 &lt;code&gt;interactive&lt;/code&gt; の唯一の既知の適切な使用法は、関数の実行中に役立つメッセージを表示するかどうかを決定する必要がある場合です。</target>
        </trans-unit>
        <trans-unit id="25d359ce61cf8c815d198212ff26252c75ac0564" translate="yes" xml:space="preserve">
          <source>If it doesn&amp;rsquo;t find a suitable window, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">適切なウィンドウが見つからない場合、この関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d663e9f71b40bc3b791ff1f7fbbfe0e96c637a33" translate="yes" xml:space="preserve">
          <source>If it is -1, that means auto-saving is temporarily shut off in this buffer due to a substantial decrease in size. Explicitly saving the buffer stores a positive value in this variable, thus reenabling auto-saving. Turning auto-save mode off or on also updates this variable, so that the substantial decrease in size is forgotten.</source>
          <target state="translated">これが -1 の場合、このバッファのサイズが大幅に減少したために、自動保存が一時的に停止されたことを意味します。バッファを明示的に保存すると、この変数に正の値が格納され、自動保存が有効になります。自動保存モードをオフまたはオンにすると、この変数も更新され、サイズの大幅な減少は忘れられます。</target>
        </trans-unit>
        <trans-unit id="c3fcc3cec543bf1340c5f3eed0b2d2edd23dc9d2" translate="yes" xml:space="preserve">
          <source>If it is -2, that means this buffer should disregard changes in buffer size; in particular, it should not shut off auto-saving temporarily due to changes in buffer size.</source>
          <target state="translated">これが-2の場合、このバッファはバッファサイズの変化を無視するべきであり、特にバッファサイズの変化によって一時的に自動保存を停止してはならないことを意味します。</target>
        </trans-unit>
        <trans-unit id="26f7b148788693e43d5b15be6a524986c17c9bdf" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;split-window-below&lt;/code&gt; adjusts point in each of the two windows to minimize redisplay. (This is useful on slow terminals.) It selects whichever window contains the screen line that point was previously on. Note that this only affects &lt;code&gt;split-window-below&lt;/code&gt;, not the lower-level &lt;code&gt;split-window&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;split-window-below&lt;/code&gt; は、再表示を最小限に抑えるために2つのウィンドウのそれぞれのポイントを調整します。（これは低速の端末で役立ちます。）ポイントが以前に表示されていた画面ラインが含まれているウィンドウを選択します。これは、下位レベルの &lt;code&gt;split-window&lt;/code&gt; 関数ではなく、 &lt;code&gt;split-window-below&lt;/code&gt; にのみ影響することに注意してください。</target>
        </trans-unit>
        <trans-unit id="75bb0c08c9579f4b67e1bdcee5654535bf0851c8" translate="yes" xml:space="preserve">
          <source>If it is impossible to move to column &lt;var&gt;column&lt;/var&gt; because that is in the middle of a multicolumn character such as a tab, point moves to the end of that character. However, if &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;column&lt;/var&gt; is in the middle of a tab, then &lt;code&gt;move-to-column&lt;/code&gt; either converts the tab into spaces (when &lt;code&gt;indent-tabs-mode&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;), or inserts enough spaces before it (otherwise), so that point can move precisely to column &lt;var&gt;column&lt;/var&gt;. Other multicolumn characters can cause anomalies despite &lt;var&gt;force&lt;/var&gt;, since there is no way to split them.</source>
          <target state="translated">タブなどの複数 &lt;var&gt;column&lt;/var&gt; 文字の途中で列列に移動できない場合、ポイントはその文字の末尾に移動します。ただし、 &lt;var&gt;force&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外で、 &lt;var&gt;column&lt;/var&gt; がタブの中央にある場合、 &lt;code&gt;move-to-column&lt;/code&gt; は、タブをスペースに変換するか（ &lt;code&gt;indent-tabs-mode&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; の場合）、その前に十分なスペースを挿入します（それ以外の場合）。 ）、そのポイントが正確に列 &lt;var&gt;column&lt;/var&gt; 移動できるようにします。他の複数列の文字は、それらを分割する方法がないため、 &lt;var&gt;force&lt;/var&gt; にもかかわらず異常を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="4c061e5992b432ab0822e64b7514d9bc023cedfe" translate="yes" xml:space="preserve">
          <source>If it is impossible to obtain the load average, this function signals an error. On some platforms, access to load averages requires installing Emacs as setuid or setgid so that it can read kernel information, and that usually isn&amp;rsquo;t advisable.</source>
          <target state="translated">負荷平均を取得できない場合、この関数はエラーを通知します。一部のプラットフォームでは、負荷平均にアクセスするには、Emacsをsetuidまたはsetgidとしてインストールして、カーネル情報を読み取れるようにする必要がありますが、通常はお勧めできません。</target>
        </trans-unit>
        <trans-unit id="7758a8649ab676d21a46b78499adca1ee262c836" translate="yes" xml:space="preserve">
          <source>If it is possible to move &lt;var&gt;count&lt;/var&gt; words, without being stopped prematurely by the buffer boundary or a field boundary, the value is &lt;code&gt;t&lt;/code&gt;. Otherwise, the return value is &lt;code&gt;nil&lt;/code&gt; and point stops at the buffer boundary or field boundary.</source>
          <target state="translated">バッファ境界またはフィールド境界によって途中で停止されることなく、 &lt;var&gt;count&lt;/var&gt; ワードを移動できる場合、値は &lt;code&gt;t&lt;/code&gt; です。それ以外の場合、戻り値は &lt;code&gt;nil&lt;/code&gt; であり、ポイントはバッファ境界またはフィールド境界で停止します。</target>
        </trans-unit>
        <trans-unit id="fd9b78d9850bcf0fff88ff5b620b111b6dc77cc2" translate="yes" xml:space="preserve">
          <source>If its value is &lt;code&gt;width-only&lt;/code&gt;, sizes are evened only if the reused window is on the left or right of the selected one and the selected window is wider than the reused one. If its value is &lt;code&gt;height-only&lt;/code&gt; sizes are evened only if the reused window is above or beneath the selected window and the selected window is higher than the reused one. Any other non-&lt;code&gt;nil&lt;/code&gt; value means to even sizes in any of these cases provided the selected window is larger than the reused one in the sense of their combination.</source>
          <target state="translated">値が &lt;code&gt;width-only&lt;/code&gt; のみの場合、再利用されたウィンドウが選択されたウィンドウの左側または右側にあり、選択されたウィンドウが再利用されたウィンドウよりも広い場合にのみ、サイズが均等になります。その値が &lt;code&gt;height-only&lt;/code&gt; のみの場合、サイズは、再利用されたウィンドウが選択されたウィンドウの上または下にあり、選択されたウィンドウが再利用されたウィンドウよりも高い場合にのみ均等になります。その他の &lt;code&gt;nil&lt;/code&gt; 以外の値は、選択されたウィンドウがそれらの組み合わせの意味で再利用されたウィンドウよりも大きい場合、これらのいずれの場合でもサイズを均等にすることを意味します。</target>
        </trans-unit>
        <trans-unit id="a382ec562741e63e7998a124cb803b1183dfef44" translate="yes" xml:space="preserve">
          <source>If loading the file succeeds but does not provide &lt;var&gt;feature&lt;/var&gt;, &lt;code&gt;require&lt;/code&gt; signals an error about the missing feature.</source>
          <target state="translated">ファイルをロードすることは成功しますが、提供していない場合は &lt;var&gt;feature&lt;/var&gt; 、 &lt;code&gt;require&lt;/code&gt; 信号に欠けている機能についてのエラーを。</target>
        </trans-unit>
        <trans-unit id="1c9993b616405d69a26202591fe2c37eafc12f84" translate="yes" xml:space="preserve">
          <source>If more than one frame is considered, the cyclic ordering is obtained by appending the orderings for those frames, in the same order as the list of all live frames (see &lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;Finding All Frames&lt;/a&gt;).</source>
          <target state="translated">複数のフレームが考慮される場合、循環順序は、すべてのライブフレームのリストと同じ順序で、それらのフレームの順序を追加することによって取得されます（&lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;すべてのフレームの検索を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="caf0360b452a602e7271a13c236426dd72800cb8" translate="yes" xml:space="preserve">
          <source>If more than one window qualifies as usable according to these rules, this function makes a choice in the following order of preference:</source>
          <target state="translated">これらの規則に従って複数のウィンドウが使用可能であると判断された場合、この関数は以下の優先順位で選択を行います。</target>
        </trans-unit>
        <trans-unit id="60ca5dbda750b8d340c893a8fd68059aff011a7b" translate="yes" xml:space="preserve">
          <source>If narrowing is in effect, &lt;var&gt;position&lt;/var&gt; still counts from the beginning of the buffer, but point cannot go outside the accessible portion. If &lt;var&gt;position&lt;/var&gt; is out of range, &lt;code&gt;goto-char&lt;/code&gt; moves point to the beginning or the end of the accessible portion.</source>
          <target state="translated">ナローイングが有効な場合でも、 &lt;var&gt;position&lt;/var&gt; はバッファの先頭からカウントされますが、ポイントはアクセス可能な部分の外側に移動できません。 &lt;var&gt;position&lt;/var&gt; が範囲外の場合、 &lt;code&gt;goto-char&lt;/code&gt; はポイントをアクセス可能な部分の最初または最後に移動します。</target>
        </trans-unit>
        <trans-unit id="4da11780726f2d02db95b81120b41418f94d288c" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;sequences&lt;/var&gt; are given, &lt;code&gt;nil&lt;/code&gt; is returned:</source>
          <target state="translated">&lt;var&gt;sequences&lt;/var&gt; が指定されていない場合、 &lt;code&gt;nil&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="afa63ffa83226e6d4d0087510463ec804351a8e2" translate="yes" xml:space="preserve">
          <source>If no alist element matches &lt;var&gt;key&lt;/var&gt;, &lt;code&gt;assoc-default&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;key&lt;/var&gt; に一致するalist要素がない場合、 &lt;code&gt;assoc-default&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="099527a76ee688c1972fba42fc2746eb0aa78de6" translate="yes" xml:space="preserve">
          <source>If no instrumented code is being executed when &lt;code&gt;edebug&lt;/code&gt; is called, that function calls &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;edebug&lt;/code&gt; が呼び出されたときにインストルメント化されたコードが実行されていない場合、その関数は &lt;code&gt;debug&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="3b7902d119289744c9c60b8e9ba8734e44d393c2" translate="yes" xml:space="preserve">
          <source>If no matching character or flags are needed, only one character (specifying the syntax class) is sufficient.</source>
          <target state="translated">一致する文字やフラグが必要ない場合は、1文字(構文クラスを指定する)だけで十分です。</target>
        </trans-unit>
        <trans-unit id="6635be92db6b49ff346c8530d9044f8cfebe5e76" translate="yes" xml:space="preserve">
          <source>If no return point is in effect with tag &lt;var&gt;tag&lt;/var&gt;, then a &lt;code&gt;no-catch&lt;/code&gt; error is signaled with data &lt;code&gt;(&lt;var&gt;tag&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">ノーリターンポイントがタグと有効でない場合 &lt;var&gt;tag&lt;/var&gt; は、 &lt;code&gt;no-catch&lt;/code&gt; エラーは、データとシグナリングされる &lt;code&gt;(&lt;var&gt;tag&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c623989ecb4b6aa623ded291c555cd7366aec465" translate="yes" xml:space="preserve">
          <source>If no sentinel function was specified for a process, it will use the default sentinel function, which inserts a message in the process&amp;rsquo;s buffer with the process name and the string describing the event.</source>
          <target state="translated">プロセスにセンチネル関数が指定されていない場合は、デフォルトのセンチネル関数が使用されます。この関数は、プロセス名とイベントを説明する文字列を含むメッセージをプロセスのバッファーに挿入します。</target>
        </trans-unit>
        <trans-unit id="fc7669396f72d8863e9cf2e15da6cad47eca550a" translate="yes" xml:space="preserve">
          <source>If no specific base offset is set for alignment, it is always relative to the left edge of the text area. For example, &amp;lsquo;</source>
          <target state="translated">位置合わせに特定のベースオフセットが設定されていない場合、それは常にテキスト領域の左端を基準にしています。例えば、 '</target>
        </trans-unit>
        <trans-unit id="2d6c0df365fb46197c73cec7c0435c48adc4054f" translate="yes" xml:space="preserve">
          <source>If no suitable buffer exists, the buffer</source>
          <target state="translated">適切なバッファが存在しない場合、バッファ</target>
        </trans-unit>
        <trans-unit id="92a082cb753749db0e7088ebfc66a0bc66e1e3da" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt; such an entry tells Emacs to preserve the size of the window chosen (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;). The value should be either &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt; to preserve the width of the window, &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; to preserve its height or &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; to preserve both, its width and its height. This entry should be processed only under certain conditions which are specified right after this list.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、そのようなエントリはEmacsに選択されたウィンドウのサイズを保持するように指示します（&lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;ウィンドウサイズの保持を&lt;/a&gt;参照）。値は、ウィンドウの幅を保持する場合は &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt; 、高さを保持する場合は &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; 、幅と高さの両方を保持する場合は &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; いずれかである必要があります。このエントリは、このリストの直後に指定されている特定の条件下でのみ処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="2df23b09dda1e396597f8ec06e758ffb6362d745" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug binds &lt;code&gt;print-circle&lt;/code&gt; to this value while printing results. The default value is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、Edebugは結果の印刷中に &lt;code&gt;print-circle&lt;/code&gt; をこの値にバインドします。デフォルト値は &lt;code&gt;t&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c8b4d06f0cea614db276930788a603afccf902aa" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug binds &lt;code&gt;print-length&lt;/code&gt; to this value while printing results. The default value is &lt;code&gt;50&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、Edebugは結果の印刷中に &lt;code&gt;print-length&lt;/code&gt; をこの値にバインドします。デフォルト値は &lt;code&gt;50&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ebac442e709eda708f773e90646194acc862b933" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug binds &lt;code&gt;print-level&lt;/code&gt; to this value while printing results. The default value is &lt;code&gt;50&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、Edebugは、結果の印刷中に印刷 &lt;code&gt;print-level&lt;/code&gt; をこの値にバインドします。デフォルト値は &lt;code&gt;50&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e5bbdc3e349ee9de9df4fff61c4ed3ebcd61f2ff" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug tests coverage of all expressions debugged. See &lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;Coverage Testing&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、Edebugはデバッグされたすべての式のカバレッジをテストします。&lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;カバレッジテストを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cf21ba8fe3d5a3afec7e5ab377e09959c68764d5" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug tries to remove any of its own instrumentation when showing the results of expressions. This is relevant when debugging macros where the results of expressions are themselves instrumented expressions. As a very artificial example, suppose that the example function &lt;code&gt;fac&lt;/code&gt; has been instrumented, and consider a macro of the form:</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、Edebugは、式の結果を表示するときに、独自のインストルメンテーションを削除しようとします。これは、式の結果自体がインストルメント化された式であるマクロをデバッグする場合に関係します。非常に人工的な例として、サンプル関数 &lt;code&gt;fac&lt;/code&gt; がインストルメント化されていると仮定し、次の形式のマクロを検討します。</target>
        </trans-unit>
        <trans-unit id="06f558a0db32f216e4552c38fae062a52450fbe2" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Emacs automatically lowers the frame when it is deselected. Some window managers do not allow this.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、Emacsは選択を解除すると自動的にフレームを下げます。一部のウィンドウマネージャーはこれを許可していません。</target>
        </trans-unit>
        <trans-unit id="d0f999f9fb0c1cb7b78d9f1e89393cdc199fe103" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Emacs automatically raises the frame when it is selected. Some window managers do not allow this.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、Emacsは選択されたときにフレームを自動的に上げます。一部のウィンドウマネージャーはこれを許可していません。</target>
        </trans-unit>
        <trans-unit id="9c3f60d0c9b1e0439fcfc255da11300a37a2873b" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, always ask for the server&amp;rsquo;s capabilities, even when doing a &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合は、'を実行する場合でも、常にサーバーの機能を要求します。</target>
        </trans-unit>
        <trans-unit id="8297a79a55a2079d3efa603d16f6eb1d0132e092" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, an expression to test for at every stop point. If the result is non-&lt;code&gt;nil&lt;/code&gt;, then break. Errors are ignored. See &lt;a href=&quot;global-break-condition#Global-Break-Condition&quot;&gt;Global Break Condition&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、すべての停止点でテストする式。結果が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、中断します。エラーは無視されます。&lt;a href=&quot;global-break-condition#Global-Break-Condition&quot;&gt;グローバルブレーク条件を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="86b7764a4b5a389fb150dcdc9c80efb20f92bc18" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, and &lt;code&gt;:return-value&lt;/code&gt; is also non-&lt;code&gt;nil&lt;/code&gt;, Emacs will warn if the connection isn&amp;rsquo;t encrypted. This is useful for protocols like</source>
          <target state="translated">非場合 &lt;code&gt;nil&lt;/code&gt; 、および &lt;code&gt;:return-value&lt;/code&gt; また、非である &lt;code&gt;nil&lt;/code&gt; の接続は暗号化されていない場合、Emacsは警告が表示されます。これは、次のようなプロトコルに役立ちます</target>
        </trans-unit>
        <trans-unit id="434f9fa211c26b9ea10b34c88422ffccf1a3d1fa" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, continue defining or executing any keyboard macro that is executing outside of Edebug. Use this with caution since it is not debugged. See &lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Edebug Execution Modes&lt;/a&gt;.</source>
          <target state="translated">非場合は &lt;code&gt;nil&lt;/code&gt; 、定義またはEdebugの外で実行される任意のキーボードマクロの実行を継続します。デバッグされないため、注意して使用してください。&lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Edebug実行モードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="09f55e7f1ed0753693dffc3dd3c1787fc1a815e1" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, do opportunistic</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; でない場合は、日和見を行います</target>
        </trans-unit>
        <trans-unit id="3c1e8b6c51588a7fe1f3ca87b947b981bc73afc8" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, such an entry tells &lt;code&gt;display-buffer&lt;/code&gt; to mark any window it creates as dedicated to its buffer (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;). It does that by calling &lt;code&gt;set-window-dedicated-p&lt;/code&gt; with the chosen window as first argument and the entry&amp;rsquo;s value as second.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、そのようなエントリは &lt;code&gt;display-buffer&lt;/code&gt; に、作成したウィンドウをそのバッファ専用としてマークするように指示します（&lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;専用ウィンドウを&lt;/a&gt;参照）。これは、選択したウィンドウを最初の引数として、エントリの値を2番目として &lt;code&gt;set-window-dedicated-p&lt;/code&gt; を呼び出すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="83842571f2da9dfd88127a81e7bd282c6bb11150" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, tell Xt to wait for the window manager to confirm geometry changes. Some window managers, including versions of Fvwm2 and KDE, fail to confirm, so Xt hangs. Set this to &lt;code&gt;nil&lt;/code&gt; to prevent hanging with those window managers.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合は、ウィンドウマネージャがジオメトリの変更を確認するのを待つようにXtに指示します。Fvwm2やKDEのバージョンを含む一部のウィンドウマネージャーは確認に失敗するため、Xtがハングします。これらのウィンドウマネージャーでハングしないようにするには、これを &lt;code&gt;nil&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="efd9a8e593ce9ad32fc830d9618b3acb28445443" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, that means number continuously across print calls. This affects the numbers printed for &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、それは印刷呼び出し全体で継続的に番号を付けることを意味します。これは、 'に出力される数値に影響します</target>
        </trans-unit>
        <trans-unit id="2a4541e8d7c469c57e74b63f08c2025c97e0882c" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、</target>
        </trans-unit>
        <trans-unit id="9be8f94664dd4525417ea58d6dc2ff472536e701" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the color for the background of scroll bars. It is equivalent to the &lt;code&gt;:background&lt;/code&gt; attribute of the &lt;code&gt;scroll-bar&lt;/code&gt; face.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、スクロールバーの背景の色。これは、 &lt;code&gt;scroll-bar&lt;/code&gt; 面の &lt;code&gt;:background&lt;/code&gt; 属性と同等です。</target>
        </trans-unit>
        <trans-unit id="a9ac4b1e76bdba2df8d1d561f666e5db1883fcc4" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the color for the foreground of scroll bars. It is equivalent to the &lt;code&gt;:foreground&lt;/code&gt; attribute of the &lt;code&gt;scroll-bar&lt;/code&gt; face.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、スクロールバーの前景の色。これは、 &lt;code&gt;scroll-bar&lt;/code&gt; 面の &lt;code&gt;:foreground&lt;/code&gt; 属性と同等です。</target>
        </trans-unit>
        <trans-unit id="adc6455ac3165478fddd2e57e3f43c6b9d048a35" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the default value of &lt;code&gt;print-circle&lt;/code&gt; for printing results in Edebug. See &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Output Variables&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;print-circle&lt;/code&gt; デフォルト値はEdebugになります。&lt;a href=&quot;output-variables#Output-Variables&quot;&gt;出力変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e96b1587470baab87f7e448864020eda5787b934" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the default value of &lt;code&gt;print-length&lt;/code&gt; for printing results in Edebug. See &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Output Variables&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;print-length&lt;/code&gt; デフォルト値はEdebugになります。&lt;a href=&quot;output-variables#Output-Variables&quot;&gt;出力変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4e6e7e87e1c8258c8084276530c822b9a8e24b00" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the default value of &lt;code&gt;print-level&lt;/code&gt; for printing results in Edebug. See &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Output Variables&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;print-level&lt;/code&gt; デフォルト値はEdebugになります。&lt;a href=&quot;output-variables#Output-Variables&quot;&gt;出力変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4dbca5f789d3b451ab7705325121fbfc1c24775e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame can be moved with the mouse by dragging the header line of its topmost window.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合は、最上部のウィンドウのヘッダー行をドラッグすることで、マウスでフレームを移動できます。</target>
        </trans-unit>
        <trans-unit id="8b4877f75b5365fe0a54e72c2c62ecb6c6d15e86" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame can be moved with the mouse by dragging the mode line of its bottommost window. Note that such a frame is not allowed to have its own minibuffer window.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合は、最下部のウィンドウのモードラインをドラッグして、マウスでフレームを移動できます。このようなフレームには、独自のミニバッファウィンドウを設定できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="318d4d00cdd54ad23fd3e065537a23cdde9e75e3" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame can be resized by dragging its internal borders, if present, with the mouse.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、フレームの内部境界線が存在する場合は、マウスでドラッグしてフレームのサイズを変更できます。</target>
        </trans-unit>
        <trans-unit id="a43ce41848c96c8ad14f6796e1d973d08c57fa8e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame is drawn to the screen without double buffering. Emacs normally attempts to use double buffering, where available, to reduce flicker. Set this property if you experience display bugs or pine for that retro, flicker-y feeling.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、フレームはダブルバッファリングなしで画面に描画されます。Emacsは通常、ちらつきを減らすために、可能な場合はダブルバッファリングを使用しようとします。レトロでちらつきのある感じでディスプレイのバグや松が発生した場合は、このプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="bc1ad98081e6e325221a3abe42d5ac8ed1f7c21f" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame is visible on all virtual desktops on systems with virtual desktops.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、フレームは仮想デスクトップを備えたシステム上のすべての仮想デスクトップに表示されます。</target>
        </trans-unit>
        <trans-unit id="b44601ecee8752e8c0f8056fa9e24dc94ac1ca89" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the greeting string returned by the host.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、ホストから返されるグリーティング文字列。</target>
        </trans-unit>
        <trans-unit id="40cc2de753b0ea772d8160c0c2ca7c1eca5fbf7e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the host&amp;rsquo;s capability string.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、ホストの機能文字列。</target>
        </trans-unit>
        <trans-unit id="913ca5bd1d8fdf1f8806857c3c6b7d729b5ba66a" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the named function prevents the &lt;code&gt;undo&lt;/code&gt; operation from being restricted to the active region, if &lt;code&gt;undo&lt;/code&gt; is invoked immediately after the function. See &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、関数の直後に &lt;code&gt;undo&lt;/code&gt; が呼び出されると、名前付き関数は &lt;code&gt;undo&lt;/code&gt; 操作がアクティブ領域に制限されないようにします。&lt;a href=&quot;undo#Undo&quot;&gt;元に戻すを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2d8e8f3e81bf8fc64ffd0106f328d6a269d4831b" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the side windows on the left and right of a frame occupy the frame&amp;rsquo;s full height. Otherwise, the side windows on the top and bottom of the frame occupy the frame&amp;rsquo;s full width.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、フレームの左右にあるサイドウィンドウがフレームの全高を占めます。それ以外の場合、フレームの上部と下部にあるサイドウィンドウがフレームの全幅を占めます。</target>
        </trans-unit>
        <trans-unit id="6849fc0b0f94a8fa335c8cd9a717ed71ba10be1a" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value is a function to generate prefix text for warnings. Programs can bind the variable to a suitable function. &lt;code&gt;display-warning&lt;/code&gt; calls this function with the warnings buffer current, and the function can insert text in it. That text becomes the beginning of the warning message.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、値は警告のプレフィックステキストを生成する関数です。プログラムは、変数を適切な関数にバインドできます。 &lt;code&gt;display-warning&lt;/code&gt; は、warnings buffer currentを使用してこの関数を呼び出し、関数はその中にテキストを挿入できます。そのテキストが警告メッセージの始まりになります。</target>
        </trans-unit>
        <trans-unit id="a73c2141d528d307e119504f64bddbdbc47d5931" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value of this variable is a function for &lt;code&gt;mouse-position&lt;/code&gt; to call. &lt;code&gt;mouse-position&lt;/code&gt; calls this function just before returning, with its normal return value as the sole argument, and it returns whatever this function returns to it.</source>
          <target state="translated">非場合は &lt;code&gt;nil&lt;/code&gt; 、この変数の値は関数である &lt;code&gt;mouse-position&lt;/code&gt; コールします。 &lt;code&gt;mouse-position&lt;/code&gt; は、通常の戻り値を唯一の引数として、戻る直前にこの関数を呼び出し、この関数が返すものは何でも返します。</target>
        </trans-unit>
        <trans-unit id="750c670af188e92079aa3e73ea73d571df6e4c56" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value should be a regular expression describing the end of a sentence, including the whitespace following the sentence. (All paragraph boundaries also end sentences, regardless.)</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、値は、文の後に続く空白を含め、文の終わりを説明する正規表現である必要があります。（すべての段落の境界も、関係なく文を終了します。）</target>
        </trans-unit>
        <trans-unit id="c36e160fc038d6c8fa570f7f15030f619d7679da" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value should look like this:</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、値は次のようになります。</target>
        </trans-unit>
        <trans-unit id="5dd5a98b9783da84f3c6b8a9cb9fa1c915208201" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value specifies the slot of the side window supposed to display the buffer. This entry is used only by &lt;code&gt;display-buffer-in-side-window&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、値はバッファを表示することになっているサイドウィンドウのスロットを指定します。このエントリは、 &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; によってのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="2761f772ea8c9a650bbb931af03989afe8eaeafc" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this buffer-local variable holds a regular expression that specifies what text can appear before the open-parenthesis that starts a defun. That is to say, a defun begins on a line that starts with a match for this regular expression, followed by a character with open-parenthesis syntax.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、このバッファローカル変数は、無効化を開始する開き括弧の前に表示できるテキストを指定する正規表現を保持します。つまり、defunは、この正規表現の一致で始まる行で始まり、その後に開き括弧構文の文字が続きます。</target>
        </trans-unit>
        <trans-unit id="e6476927ea753cd0c025802bf82f4bd899e70109" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this frame&amp;rsquo;s window is never split automatically.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、このフレームのウィンドウは自動的に分割されません。</target>
        </trans-unit>
        <trans-unit id="a4e5bffd8c4ad2619c77cd8c172745f3480ba234" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this frame&amp;rsquo;s window-system window is drawn without decorations, like the title, minimize/maximize boxes and external borders. This usually means that the window cannot be dragged, resized, iconified, maximized or deleted with the mouse. If &lt;code&gt;nil&lt;/code&gt;, the frame&amp;rsquo;s window is usually drawn with all the elements listed above unless their display has been suspended via window manager settings.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、このフレームのウィンドウシステムウィンドウは、タイトル、ボックスおよび外部境界線の最小化/最大化などの装飾なしで描画されます。これは通常、ウィンドウをマウスでドラッグ、サイズ変更、アイコン化、最大化、または削除できないことを意味します。 &lt;code&gt;nil&lt;/code&gt; の場合、ウィンドウマネージャーの設定で表示が一時停止されていない限り、フレームのウィンドウは通常、上記のすべての要素で描画されます。</target>
        </trans-unit>
        <trans-unit id="befe1b622137d81a8704e321ed93a4af1ba6f0ff" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this is a directory within which to look for the</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、これは検索するディレクトリです。</target>
        </trans-unit>
        <trans-unit id="29d9d4b33508048f3fc26e3bfc177f3409d73fc0" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that the frame does not want to receive input focus via explicit mouse clicks or when moving the mouse into it either via &lt;code&gt;focus-follows-mouse&lt;/code&gt; (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;) or &lt;code&gt;mouse-autoselect-window&lt;/code&gt; (see &lt;a href=&quot;mouse-window-auto_002dselection#Mouse-Window-Auto_002dselection&quot;&gt;Mouse Window Auto-selection&lt;/a&gt;). This may have the unwanted side-effect that a user cannot scroll a non-selected frame with the mouse. Some window managers may not honor this parameter.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、これは、フレームが明示的なマウスクリックを介して、または &lt;code&gt;focus-follows-mouse&lt;/code&gt; （&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;入力フォーカスを&lt;/a&gt;参照）または &lt;code&gt;mouse-autoselect-window&lt;/code&gt; （&lt;a href=&quot;mouse-window-auto_002dselection#Mouse-Window-Auto_002dselection&quot;&gt;マウスウィンドウを&lt;/a&gt;参照）を介してマウスをフレームに移動したときに、入力フォーカスを受け取りたくないことを意味します。自動選択）。これには、ユーザーが選択されていないフレームをマウスでスクロールできないという望ましくない副作用が発生する可能性があります。一部のウィンドウマネージャーは、このパラメーターを尊重しない場合があります。</target>
        </trans-unit>
        <trans-unit id="b7e95ea56bde9c36bccfc56c9be82022db509b49" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that the frame does not want to receive input focus when it is mapped (see &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;). Some window managers may not honor this parameter.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、これは、フレームがマップされたときに入力フォーカスを受け取りたくないことを意味します（&lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;フレームの可視性を&lt;/a&gt;参照）。一部のウィンドウマネージャーは、このパラメーターを尊重しない場合があります。</target>
        </trans-unit>
        <trans-unit id="08c2d3c2c49097a87f9798fe68b125db546bcce1" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that this frame is a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;), and this parameter specifies its parent frame. If &lt;code&gt;nil&lt;/code&gt;, this means that this frame is a normal, top-level frame.</source>
          <target state="translated">非場合は &lt;code&gt;nil&lt;/code&gt; に、このフレームは子フレームである。この手段は（参照&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;託児フレーム&lt;/a&gt;）、このパラメータは、親フレームを指定します。 &lt;code&gt;nil&lt;/code&gt; の場合、これはこのフレームが通常の最上位フレームであることを意味します。</target>
        </trans-unit>
        <trans-unit id="3dc5cecd5ae6adced229d7859e627328536d0fb9" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that this is an &lt;em&gt;override redirect&lt;/em&gt; frame&amp;mdash;a frame not handled by window managers under X. Override redirect frames have no window manager decorations, can be positioned and resized only via Emacs&amp;rsquo; positioning and resizing functions and are usually drawn on top of all other frames. Setting this parameter has no effect on MS-Windows.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、これはオーバーライドリダイレクトフレーム（Xではウィンドウマネージャーによって処理されないフレーム）であることを意味し&lt;em&gt;ます&lt;/em&gt;。オーバーライドリダイレクトフレームにはウィンドウマネージャーの装飾がなく、Emacsの配置およびサイズ変更機能を介してのみ配置およびサイズ変更できます。他のすべてのフレームの上に描画されます。このパラメータを設定しても、MS-Windowsには影響しません。</target>
        </trans-unit>
        <trans-unit id="da44bdfd5b24c8bfe0e4891fe8c73345cdb16849" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means the menu bar is external (not part of the native frame of &lt;var&gt;frame&lt;/var&gt;).</source>
          <target state="translated">非場合 &lt;code&gt;nil&lt;/code&gt; 、これはメニューバーが（ネイティブフレームの一部ではない外部にある意味 &lt;var&gt;frame&lt;/var&gt; ）。</target>
        </trans-unit>
        <trans-unit id="962a1a045ca85f14cf97fdf8ab31eea548b04b94" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means the tool bar is external (not part of the native frame of &lt;var&gt;frame&lt;/var&gt;).</source>
          <target state="translated">非場合 &lt;code&gt;nil&lt;/code&gt; 、これは、ツールバーが（ネイティブフレームの一部ではない外部にある意味 &lt;var&gt;frame&lt;/var&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4eac0859d84f0a05577356e8fbce498e280209b6" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this parameter specifies another frame whose deletion will automatically trigger the deletion of this frame. See &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、このパラメーターは、削除によってこのフレームの削除が自動的にトリガーされる別のフレームを指定します。&lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;フレームの削除を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="20ed41705ebeeda266d5dae4c9797dae4768c160" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this parameter specifies the frame whose windows will be scrolled whenever the mouse wheel is scrolled with the mouse pointer hovering over this frame, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Commands.html#Mouse-Commands&quot;&gt;Mouse Commands&lt;/a&gt; in</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、このパラメータは、マウスポインタをこのフレームに合わせてマウスホイールをスクロールするたびにウィンドウがスクロールされるフレームを指定します。の「&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Commands.html#Mouse-Commands&quot;&gt;マウスコマンド」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ea97d1dd955b4a93685dec6602c740f2fecdb06f" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property indicates that the case of the abbrev&amp;rsquo;s name is significant and should only match a text with the same pattern of capitalization. It also disables the code that modifies the capitalization of the expansion.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、このプロパティは、略語の名前の大文字と小文字が重要であり、同じ大文字のパターンのテキストにのみ一致する必要があることを示します。また、展開の大文字化を変更するコードを無効にします。</target>
        </trans-unit>
        <trans-unit id="3b0f23f2b6d5c910a35b595d44ea4ce68ff1dea0" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property is a regular expression that indicates how to extract the name of the abbrev before point, before looking it up in the table. When the regular expression matches before point, the abbrev name is expected to be in submatch 1. If this property is &lt;code&gt;nil&lt;/code&gt;, the default is to use &lt;code&gt;backward-word&lt;/code&gt; and &lt;code&gt;forward-word&lt;/code&gt; to find the name. This property allows the use of abbrevs whose name contains characters of non-word syntax.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、このプロパティは、テーブルで検索する前に、ポイントの前に略語の名前を抽出する方法を示す正規表現です。正規表現がpointの前に一致する場合、略語名はサブマッチ1にあると予想されます。このプロパティが &lt;code&gt;nil&lt;/code&gt; の場合、デフォルトでは、 &lt;code&gt;backward-word&lt;/code&gt; と &lt;code&gt;forward-word&lt;/code&gt; を使用して名前が検索されます。このプロパティを使用すると、名前に単語以外の構文の文字が含まれている略語を使用できます。</target>
        </trans-unit>
        <trans-unit id="da204cd82fccce49a73b14d713bb7c44d191f46e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property marks the abbrev as a system abbrev. Such abbrevs are not saved (see &lt;a href=&quot;abbrev-files#Abbrev-Files&quot;&gt;Abbrev Files&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、このプロパティは略語をシステム略語としてマークします。このような略語は保存されません（&lt;a href=&quot;abbrev-files#Abbrev-Files&quot;&gt;略語ファイルを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b7864d17274f58c7d7228812dc0a0690207352bc" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property should be a function of no arguments which returns &lt;code&gt;nil&lt;/code&gt; if the abbrev should not be used and &lt;code&gt;t&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、このプロパティは引数なしの関数である必要があり、略語を使用しない場合は &lt;code&gt;nil&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;t&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d52160aabd29ccf2ccf85f78b5eb3a00cb4614a4" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this should be a function that accepts the same arguments as &lt;code&gt;read-file-name&lt;/code&gt;. When &lt;code&gt;read-file-name&lt;/code&gt; is called, it calls this function with the supplied arguments instead of doing its usual work.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、これは &lt;code&gt;read-file-name&lt;/code&gt; と同じ引数を受け入れる関数である必要があります。ときに &lt;code&gt;read-file-name&lt;/code&gt; 呼ばれ、それは代わりに通常の作業を行うための指定された引数でこの関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="af404a683fbefe27acb5086d831aa82f029d298e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this specifies that the minor mode should be global rather than buffer-local. It defaults to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、これはマイナーモードがバッファローカルではなくグローバルであることを指定します。デフォルトは &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="62767a1386886516923d977b00950df7b261c6f7" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this specifies the named variable&amp;rsquo;s documentation string. This is set automatically by &lt;code&gt;defvar&lt;/code&gt; and related functions. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、これは名前付き変数のドキュメント文字列を指定します。これは、 &lt;code&gt;defvar&lt;/code&gt; および関連する関数によって自動的に設定されます。&lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;面の定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="20d0b6089b85f69d0a48b3636ebf1867a4b03293" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this tells the window manager to remove the frame&amp;rsquo;s icon from the taskbar associated with the frame&amp;rsquo;s display and inhibit switching to the frame&amp;rsquo;s window via the combination</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、これはウィンドウマネージャーに、フレームの表示に関連付けられたタスクバーからフレームのアイコンを削除し、組み合わせによるフレームのウィンドウへの切り替えを禁止するように指示します。</target>
        </trans-unit>
        <trans-unit id="c636a6cd5eb64c7cc32e0232081bb6526956cb5c" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable enables detection of circular and shared structure in printing. See &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、この変数は印刷時の円形および共有構造の検出を有効にします。&lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;円形オブジェクトを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4943f3537977953a83f606eb122772e31539c861" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable enables detection of uninterned symbols (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;) in printing. When this is enabled, uninterned symbols print with the prefix &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、この変数を使用すると、印刷時にインターンされていないシンボル（シンボルの&lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;作成を&lt;/a&gt;参照）を検出できます。これを有効にすると、インターンされていないシンボルは接頭辞 'で印刷されます</target>
        </trans-unit>
        <trans-unit id="e740af8f1d9afb1b33a754a87cc5c1a51f9a0cf2" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable enables the reading of circular and shared structures. See &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;. Its default value is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、この変数は循環構造と共有構造の読み取りを有効にします。&lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;円形オブジェクトを&lt;/a&gt;参照してください。デフォルト値は &lt;code&gt;t&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c43ef7f6cdbaf44d75a6a5e8be960c86f73a9314" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a function for finding the beginning of a defun. The function &lt;code&gt;beginning-of-defun&lt;/code&gt; calls this function instead of using its normal method, passing it its optional argument. If the argument is non-&lt;code&gt;nil&lt;/code&gt;, the function should move back by that many functions, like &lt;code&gt;beginning-of-defun&lt;/code&gt; does.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、この変数は、defunの開始を見つけるための関数を保持します。関数 &lt;code&gt;beginning-of-defun&lt;/code&gt; は、通常のメソッドを使用する代わりにこの関数を呼び出し、オプションの引数を渡します。引数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、関数は、 &lt;code&gt;beginning-of-defun&lt;/code&gt; のように、その数の関数だけ戻る必要があります。</target>
        </trans-unit>
        <trans-unit id="8ba48d5a1f651bee184dff9da83bc16ddb3d2bb6" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a function for finding the end of a defun. The function &lt;code&gt;end-of-defun&lt;/code&gt; calls this function instead of using its normal method.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、この変数は、defunの終わりを見つけるための関数を保持します。関数 &lt;code&gt;end-of-defun&lt;/code&gt; は、通常のメソッドを使用する代わりに、この関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a45561e07f2520c635c526032ab3106d071ec2d8" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a keymap to use instead of &lt;code&gt;overriding-local-map&lt;/code&gt;, the buffer&amp;rsquo;s local keymap, text property or overlay keymaps, and all the minor mode keymaps.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、この変数は、overriding &lt;code&gt;overriding-local-map&lt;/code&gt; 代わりに使用するキーマップ、バッファーのローカルキーマップ、テキストプロパティまたはオーバーレイキーマップ、およびすべてのマイナーモードキーマップを保持します。</target>
        </trans-unit>
        <trans-unit id="b0a3bbe8306a043ed80dc3d3269b0d063a9cdaf5" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a keymap to use instead of the buffer&amp;rsquo;s local keymap, any text property or overlay keymaps, and any minor mode keymaps. This keymap, if specified, overrides all other maps that would have been active, except for the current global map.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、この変数は、バッファのローカルキーマップ、テキストプロパティまたはオーバーレイキーマップ、およびマイナーモードキーマップの代わりに使用するキーマップを保持します。このキーマップは、指定されている場合、現在のグローバルマップを除いて、アクティブであった他のすべてのマップを上書きします。</target>
        </trans-unit>
        <trans-unit id="1106df1ab5132fac1dbae2e453ec2bd4a0ec3e6d" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable is a string that specifies a file or directory for Emacs to display after starting up, instead of the startup screen. If its value is a function, Emacs calls that function which must return a buffer which is then displayed. If its value is &lt;code&gt;t&lt;/code&gt;, Emacs displays the</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、この変数は、起動画面ではなく、起動後にEmacsが表示するファイルまたはディレクトリを指定する文字列です。その値が関数の場合、Emacsはその関数を呼び出します。この関数はバッファーを返さなければならず、その後表示されます。その値が &lt;code&gt;t&lt;/code&gt; の場合、Emacsは</target>
        </trans-unit>
        <trans-unit id="a7735c3b50e466c5346e5483a5cf6de45a740a3c" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable&amp;rsquo;s value should be a regular expression matching a line separates two paragraphs. The regular expression is always matched after a newline, so it is best to anchor it, i.e., begin it with a &lt;code&gt;&quot;^&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、この変数の値は、2つの段落を区切る行に一致する正規表現である必要があります。正規表現は常に改行の後に一致するため、アンカーする、つまり &lt;code&gt;&quot;^&quot;&lt;/code&gt; で始めるのが最善です。</target>
        </trans-unit>
        <trans-unit id="d8c483d93ec64f7cd1bb9d46db96b7a9b42b8cbd" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable&amp;rsquo;s value should be a regular expression matching a line that starts or separates two paragraphs. The regular expression is always matched after a newline, so it is best to anchor it, i.e., begin it with a &lt;code&gt;&quot;^&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合、この変数の値は、2つの段落を開始または区切る行に一致する正規表現である必要があります。正規表現は常に改行の後に一致するため、アンカーする、つまり &lt;code&gt;&quot;^&quot;&lt;/code&gt; で始めるのが最善です。</target>
        </trans-unit>
        <trans-unit id="280cbc03daf2bda778c4a01d6aeb7519dd501af4" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, try to make an asynchronous connection.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 以外の場合は、非同期接続を試みてください。</target>
        </trans-unit>
        <trans-unit id="61817df020a9cee36aafed5b8511a8145e9c9a55" translate="yes" xml:space="preserve">
          <source>If none of the alternatives will work, then &lt;var&gt;symbol&lt;/var&gt; is defined as &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">いずれの選択肢も機能しない場合、 &lt;var&gt;symbol&lt;/var&gt; は &lt;code&gt;nil&lt;/code&gt; として定義されます。</target>
        </trans-unit>
        <trans-unit id="ab210fcdba9cf2a292faa98b31540cd2272662ce" translate="yes" xml:space="preserve">
          <source>If not a string, &lt;var&gt;prompter&lt;/var&gt; should be a function of one argument (the next object to ask about) and should return the question text. If the value is a string, that is the question to ask the user. The function can also return &lt;code&gt;t&lt;/code&gt;, meaning do act on this object (and don&amp;rsquo;t ask the user), or &lt;code&gt;nil&lt;/code&gt;, meaning ignore this object (and don&amp;rsquo;t ask the user).</source>
          <target state="translated">文字列でない場合、 &lt;var&gt;prompter&lt;/var&gt; は1つの引数（次に質問するオブジェクト）の関数であり、質問テキストを返す必要があります。値が文字列の場合、それはユーザーに尋ねる質問です。この関数は、このオブジェクトに作用する（そしてユーザーに尋ねない）ことを意味する &lt;code&gt;t&lt;/code&gt; 、またはこのオブジェクトを無視する（そしてユーザーに尋ねない）ことを意味する &lt;code&gt;nil&lt;/code&gt; を返すこともできます。</target>
        </trans-unit>
        <trans-unit id="67a1d4c8683efa99c2168cdafc5e612006344baf" translate="yes" xml:space="preserve">
          <source>If not running in batch mode, it initializes the window system that the variable &lt;code&gt;initial-window-system&lt;/code&gt; specifies (see &lt;a href=&quot;window-systems#Window-Systems&quot;&gt;initial-window-system&lt;/a&gt;). The initialization function, &lt;code&gt;window-system-initialization&lt;/code&gt;, is a &lt;em&gt;generic function&lt;/em&gt; (see &lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;Generic Functions&lt;/a&gt;) whose actual implementation is different for each supported window system. If the value of &lt;code&gt;initial-window-system&lt;/code&gt; is &lt;var&gt;windowsystem&lt;/var&gt;, then the appropriate implementation of the initialization function is defined in the file</source>
          <target state="translated">バッチモードで実行されていない場合は、変数 &lt;code&gt;initial-window-system&lt;/code&gt; が指定するウィンドウシステムを初期化します（&lt;a href=&quot;window-systems#Window-Systems&quot;&gt;initial-window-systemを&lt;/a&gt;参照）。初期化関数 &lt;code&gt;window-system-initialization&lt;/code&gt; は、サポートされているウィンドウシステムごとに実際の実装が異なる&lt;em&gt;汎用関数&lt;/em&gt;（&lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;汎用関数を&lt;/a&gt;参照）です。 &lt;code&gt;initial-window-system&lt;/code&gt; の値が &lt;var&gt;windowsystem&lt;/var&gt; の場合、初期化関数の適切な実装がファイルで定義されています。</target>
        </trans-unit>
        <trans-unit id="bb9448622189047367a41ddeacab7b38408ac501" translate="yes" xml:space="preserve">
          <source>If omitted, &lt;var&gt;key-type&lt;/var&gt; and &lt;var&gt;value-type&lt;/var&gt; default to &lt;code&gt;sexp&lt;/code&gt;.</source>
          <target state="translated">省略した場合、 &lt;var&gt;key-type&lt;/var&gt; と &lt;var&gt;value-type&lt;/var&gt; のデフォルトは &lt;code&gt;sexp&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a7e71cebc3c66ab4082f201e462bbaf1ce7c0b68" translate="yes" xml:space="preserve">
          <source>If one end of the region is in the middle of a word, the part of the word within the region is treated as an entire word.</source>
          <target state="translated">領域の一端が単語の途中にある場合、その領域内の単語の部分は単語全体として扱われます。</target>
        </trans-unit>
        <trans-unit id="66a4039abe03c13c0561b28386a05539429258f2" translate="yes" xml:space="preserve">
          <source>If one of these events arrives in the middle of a key sequence&amp;mdash;that is, after a prefix key&amp;mdash;then Emacs reorders the events so that this event comes either before or after the multi-event key sequence, not within it.</source>
          <target state="translated">これらのイベントの1つがキーシーケンスの途中、つまりプレフィックスキーの後に到着した場合、Emacsはイベントを並べ替えて、このイベントがマルチイベントキーシーケンスの前または後に発生するようにします。</target>
        </trans-unit>
        <trans-unit id="70c820f28b6f81163a2fcd6aeeb0821735017d2c" translate="yes" xml:space="preserve">
          <source>If one of those coding systems can safely encode all the specified text, &lt;code&gt;select-safe-coding-system&lt;/code&gt; chooses it and returns it. Otherwise, it asks the user to choose from a list of coding systems which can encode all the text, and returns the user&amp;rsquo;s choice.</source>
          <target state="translated">それらのコーディングシステムの1つが指定されたすべてのテキストを安全にエンコードできる場合、 &lt;code&gt;select-safe-coding-system&lt;/code&gt; はそれを選択して返します。それ以外の場合は、すべてのテキストをエンコードできるコーディングシステムのリストから選択するようにユーザーに求め、ユーザーの選択を返します。</target>
        </trans-unit>
        <trans-unit id="ac28b562a40846fb95c93a8e31234c329ab78e48" translate="yes" xml:space="preserve">
          <source>If only one match exists and &lt;var&gt;filename&lt;/var&gt; matches it exactly, the function returns &lt;code&gt;t&lt;/code&gt;. The function returns &lt;code&gt;nil&lt;/code&gt; if directory &lt;var&gt;directory&lt;/var&gt; contains no name starting with &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">一致するものが1つだけ存在し、 &lt;var&gt;filename&lt;/var&gt; 一致する場合、関数は &lt;code&gt;t&lt;/code&gt; を返します。ディレクトリ &lt;var&gt;directory&lt;/var&gt; に &lt;var&gt;filename&lt;/var&gt; で始まる名前が含まれていない場合、関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="01df909390f239453c6a94e3d0fb276a63413958" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;var&gt;base64url&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then padding is optional, and the URL variant of base 64 encoding is used.</source>
          <target state="translated">オプションの引数 &lt;var&gt;base64url&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、パディングはオプションであり、base64エンコーディングのURLバリアントが使用されます。</target>
        </trans-unit>
        <trans-unit id="d861c286c60b784f7a1b3417fdf86a78bcec09ba" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;var&gt;buffer&lt;/var&gt; specifies a buffer, the decoded text is inserted in that buffer after point (point does not move). In this case, the return value is the length of the decoded text. If that buffer is a unibyte buffer, the internal representation of the decoded text is inserted into it as individual bytes.</source>
          <target state="translated">オプションの引数 &lt;var&gt;buffer&lt;/var&gt; がバッファーを指定する場合、デコードされたテキストはポイントの後にそのバッファーに挿入されます（ポイントは移動しません）。この場合、戻り値はデコードされたテキストの長さです。そのバッファがユニバイトバッファの場合、デコードされたテキストの内部表現が個々のバイトとして挿入されます。</target>
        </trans-unit>
        <trans-unit id="480ea6c814466472736a87d99b32421822788b2f" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;var&gt;style-variant-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to create bold, italic and bold-italic variants of the fontset as well. These variant fontsets do not have a short name, only a long one, which is made by altering &lt;var&gt;fontpattern&lt;/var&gt; to indicate the bold and/or italic status.</source>
          <target state="translated">オプションの引数 &lt;var&gt;style-variant-p&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、フォントセットの太字、斜体、太字-斜体のバリアントも作成することを意味します。これらのバリアントフォントセットには短い名前はなく、長い名前のみがあります。これは、 &lt;var&gt;fontpattern&lt;/var&gt; を変更して太字や斜体のステータスを示すことによって作成されます。</target>
        </trans-unit>
        <trans-unit id="22b0c570c8e94a4480bf1874391ca5f7bf4ec0af" translate="yes" xml:space="preserve">
          <source>If parts of the string have &lt;code&gt;face&lt;/code&gt; properties, they control display of the text just as they would text in the buffer. Any characters which have no &lt;code&gt;face&lt;/code&gt; properties are displayed, by default, in the face &lt;code&gt;mode-line&lt;/code&gt; or &lt;code&gt;mode-line-inactive&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;Standard Faces&lt;/a&gt; in</source>
          <target state="translated">文字列の一部に &lt;code&gt;face&lt;/code&gt; プロパティがある場合、それらはバッファ内のテキストと同じようにテキストの表示を制御します。 &lt;code&gt;face&lt;/code&gt; プロパティを持たない文字は、デフォルトで、面 &lt;code&gt;mode-line&lt;/code&gt; または &lt;code&gt;mode-line-inactive&lt;/code&gt; 表示されます（の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;標準面&lt;/a&gt;を参照）</target>
        </trans-unit>
        <trans-unit id="8bac572666fabef579b22818bbade7a65d83f51c" translate="yes" xml:space="preserve">
          <source>If passed a marker as its argument, &lt;code&gt;copy-marker&lt;/code&gt; returns a new marker that points to the same place and the same buffer as does &lt;var&gt;marker-or-integer&lt;/var&gt;. If passed an integer as its argument, &lt;code&gt;copy-marker&lt;/code&gt; returns a new marker that points to position &lt;var&gt;marker-or-integer&lt;/var&gt; in the current buffer.</source>
          <target state="translated">引数としてマーカーが渡された場合、 &lt;code&gt;copy-marker&lt;/code&gt; は、 &lt;var&gt;marker-or-integer&lt;/var&gt; と同じ場所と同じバッファーを指す新しいマーカーを返します。引数として整数が渡された場合、 &lt;code&gt;copy-marker&lt;/code&gt; は、現在のバッファー内の &lt;var&gt;marker-or-integer&lt;/var&gt; 位置を指す新しいマーカーを返します。</target>
        </trans-unit>
        <trans-unit id="dfe34896c40a35569875599278219978bfea436c" translate="yes" xml:space="preserve">
          <source>If point is in the middle of a word, the part of the word before point is ignored when moving forward. The rest is treated as an entire word.</source>
          <target state="translated">点が単語の途中にある場合は、前に進むときに点前の単語の部分は無視されます。残りの部分は単語全体として扱われます。</target>
        </trans-unit>
        <trans-unit id="3749fd862364fdb39215d6dc2b445a92a26ab2f8" translate="yes" xml:space="preserve">
          <source>If point was inside the deleted region, its value afterward is &lt;var&gt;start&lt;/var&gt;. Otherwise, point relocates with the surrounding text, as markers do.</source>
          <target state="translated">ポイントが削除された領域内にあった場合、その後の値は &lt;var&gt;start&lt;/var&gt; です。それ以外の場合、マーカーと同様に、ポイントは周囲のテキストとともに再配置されます。</target>
        </trans-unit>
        <trans-unit id="80e36e301d501f8216853561e1b67dadd77e8c14" translate="yes" xml:space="preserve">
          <source>If present, &lt;var&gt;doc&lt;/var&gt; should be the function&amp;rsquo;s documentation string (see &lt;a href=&quot;function-documentation#Function-Documentation&quot;&gt;Function Documentation&lt;/a&gt;); &lt;var&gt;declare&lt;/var&gt;, if present, should be a &lt;code&gt;declare&lt;/code&gt; form (see &lt;a href=&quot;declare-form#Declare-Form&quot;&gt;Declare Form&lt;/a&gt;) specifying the function&amp;rsquo;s metadata.</source>
          <target state="translated">存在する場合、 &lt;var&gt;doc&lt;/var&gt; 関数のドキュメンテーション文字列でなければなりません（参照&lt;a href=&quot;function-documentation#Function-Documentation&quot;&gt;関数ドキュメントを&lt;/a&gt;）。 &lt;var&gt;declare&lt;/var&gt; 、存在する場合、あるべき &lt;code&gt;declare&lt;/code&gt; （参照フォーム&lt;a href=&quot;declare-form#Declare-Form&quot;&gt;宣言フォーム&lt;/a&gt;機能のメタデータを指定します）。</target>
        </trans-unit>
        <trans-unit id="592fe49d913f982c1c614220519b3c486b6bc502" translate="yes" xml:space="preserve">
          <source>If provided, &lt;var&gt;stopped&lt;/var&gt; must be &lt;code&gt;nil&lt;/code&gt;; it is an error to use any non-&lt;code&gt;nil&lt;/code&gt; value. The &lt;code&gt;:stop&lt;/code&gt; key is ignored otherwise and is retained for compatibility with other process types such as pipe processes. Asynchronous subprocesses never start in the stopped state.</source>
          <target state="translated">提供されている場合、 &lt;var&gt;stopped&lt;/var&gt; は &lt;code&gt;nil&lt;/code&gt; である必要があります。 &lt;code&gt;nil&lt;/code&gt; 以外の値を使用するとエラーになります。 &lt;code&gt;:stop&lt;/code&gt; キーは、そうでなければ無視され、このようなパイプ・プロセスのような他のプロセス・タイプとの互換性のために保持されます。非同期サブプロセスが停止状態で開始されることはありません。</target>
        </trans-unit>
        <trans-unit id="dfcc614230ff099bc17d061b1a9cb77878a865a4" translate="yes" xml:space="preserve">
          <source>If provided, &lt;var&gt;subfeatures&lt;/var&gt; should be a list of symbols indicating a set of specific subfeatures provided by this version of &lt;var&gt;feature&lt;/var&gt;. You can test the presence of a subfeature using &lt;code&gt;featurep&lt;/code&gt;. The idea of subfeatures is that you use them when a package (which is one &lt;var&gt;feature&lt;/var&gt;) is complex enough to make it useful to give names to various parts or functionalities of the package, which might or might not be loaded, or might or might not be present in a given version. See &lt;a href=&quot;network-feature-testing#Network-Feature-Testing&quot;&gt;Network Feature Testing&lt;/a&gt;, for an example.</source>
          <target state="translated">提供される場合、 &lt;var&gt;subfeatures&lt;/var&gt; 機能は、このバージョンの &lt;var&gt;feature&lt;/var&gt; によって提供される特定のサブ機能のセットを示す記号のリストである必要があります。 &lt;code&gt;featurep&lt;/code&gt; を使用して、サブ機能の存在をテストできます。サブ機能の考え方は、パッケージ（1つの &lt;var&gt;feature&lt;/var&gt; ）が複雑で、パッケージのさまざまな部分や機能に名前を付けるのに役立つ場合に使用することです。名前は、読み込まれる場合と読み込まれない場合、または読み込まれない場合があります。特定のバージョンに存在する。例については、&lt;a href=&quot;network-feature-testing#Network-Feature-Testing&quot;&gt;ネットワーク機能のテストを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e2eabbe3fa4f2d35632affab0a43c6df27913857" translate="yes" xml:space="preserve">
          <source>If reading the file got an error because the file does not exist, but its directory does exist, the caller should pass a non-&lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;error&lt;/var&gt;. In that case, &lt;code&gt;after-find-file&lt;/code&gt; issues a warning: &amp;lsquo;</source>
          <target state="translated">ファイルが存在しないためにファイルの読み取りでエラーが発生したが、そのディレクトリは存在する場合、呼び出し元は &lt;var&gt;error&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 以外の値を渡す必要があります。その場合、 &lt;code&gt;after-find-file&lt;/code&gt; は警告を発行します： '</target>
        </trans-unit>
        <trans-unit id="554a84d46c1333835581ab6df680ffa7a31b4615" translate="yes" xml:space="preserve">
          <source>If repeated invocations of this command have already shown all buffers previously shown in &lt;var&gt;window&lt;/var&gt;, further invocations will show buffers from the buffer list of the frame &lt;var&gt;window&lt;/var&gt; appears on (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;).</source>
          <target state="translated">このコマンドを繰り返し呼び出すと、以前に &lt;var&gt;window&lt;/var&gt; に表示されていたすべてのバッファがすでに表示されている場合、さらに呼び出すと、フレーム &lt;var&gt;window&lt;/var&gt; バッファリストにあるバッファが表示されます（&lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;バッファリストを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="eea47e31caf682f7c71a68241a70e2c82326f87d" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;t&lt;/code&gt;, draw an arc in &lt;em&gt;positive angle direction&lt;/em&gt;. Otherwise, draw it in &lt;em&gt;negative angle direction&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; に設定すると、&lt;em&gt;正の角度方向に&lt;/em&gt;円弧を描きます。それ以外の場合は、&lt;em&gt;負の角度方向に&lt;/em&gt;描画します。</target>
        </trans-unit>
        <trans-unit id="1f172df4c7c3218d6e1f98dbbb15ba718462660a" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;t&lt;/code&gt;, draw an arc sweep greater than or equal to 180 degrees. Otherwise, draw an arc sweep smaller than or equal to 180 degrees.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; に設定すると、180度以上の円弧スイープを描画します。それ以外の場合は、180度以下の円弧スイープを描画します。</target>
        </trans-unit>
        <trans-unit id="67032af11735e17a37ddd89ff58864ae7c1ce3e1" translate="yes" xml:space="preserve">
          <source>If several sources (overlays and/or a text property) specify values for the &lt;code&gt;display&lt;/code&gt; property, only one of the values takes effect, following the rules of &lt;code&gt;get-char-property&lt;/code&gt;. See &lt;a href=&quot;examining-properties#Examining-Properties&quot;&gt;Examining Properties&lt;/a&gt;.</source>
          <target state="translated">複数のソース（オーバーレイやテキストプロパティ）が &lt;code&gt;display&lt;/code&gt; プロパティの値を指定している場合、 &lt;code&gt;get-char-property&lt;/code&gt; のルールに従って、値の1つだけが有効になります。&lt;a href=&quot;examining-properties#Examining-Properties&quot;&gt;プロパティの調査を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c074546b8fe6d7ca3e6f2e14f46644ca120fdf4a" translate="yes" xml:space="preserve">
          <source>If some Lisp object can&amp;rsquo;t be represented in JSON, the serialization functions will signal an error of type &lt;code&gt;wrong-type-argument&lt;/code&gt;. The parsing functions can also signal the following errors:</source>
          <target state="translated">一部のLispオブジェクトをJSONで表現できない場合、シリアル化関数はタイプ &lt;code&gt;wrong-type-argument&lt;/code&gt; のエラーを通知します。解析関数は、次のエラーを通知することもできます。</target>
        </trans-unit>
        <trans-unit id="8e5e3934a5d5e20d2331b5a62708ba9dc067be98" translate="yes" xml:space="preserve">
          <source>If some values are covered by more than one of the alternatives, customize will choose the first alternative that the value fits. This means you should always list the most specific types first, and the most general last. Here&amp;rsquo;s an example of proper usage:</source>
          <target state="translated">一部の値が複数の選択肢でカバーされている場合、customizeはその値が適合する最初の選択肢を選択します。つまり、常に最も具体的なタイプを最初にリストし、最も一般的なタイプを最後にリストする必要があります。適切な使用例を次に示します。</target>
        </trans-unit>
        <trans-unit id="9ef863607d02025ca88f613cd7f2998c82c1e3cb" translate="yes" xml:space="preserve">
          <source>If something special should be done if the user switches a buffer from this mode to any other major mode, this mode can set up a buffer-local value for &lt;code&gt;change-major-mode-hook&lt;/code&gt; (see &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;).</source>
          <target state="translated">ユーザーがバッファーをこのモードから他のメジャーモードに切り替えたときに何か特別なことを行う必要がある場合、このモードは &lt;code&gt;change-major-mode-hook&lt;/code&gt; のバッファーローカル値を設定できます（&lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;バッファーローカルの作成を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="06b14227a7f4c3fc1c01323854e38f7bd6895191" translate="yes" xml:space="preserve">
          <source>If splitting the selected window fails and there is a non-dedicated window below the selected one showing some other buffer, this function tries to use that window for showing &lt;var&gt;buffer&lt;/var&gt;.</source>
          <target state="translated">選択したウィンドウの分割に失敗し、選択したウィンドウの下に他のバッファを表示する非専用ウィンドウがある場合、この関数はそのウィンドウを使用して &lt;var&gt;buffer&lt;/var&gt; を表示しようとします。</target>
        </trans-unit>
        <trans-unit id="3171bd5912c72436fbbc18b56096ef42d8a41b5f" translate="yes" xml:space="preserve">
          <source>If started by the X session manager, it calls &lt;code&gt;emacs-session-restore&lt;/code&gt; passing it as argument the ID of the previous session. See &lt;a href=&quot;session-management#Session-Management&quot;&gt;Session Management&lt;/a&gt;.</source>
          <target state="translated">Xセッションマネージャーによって開始された場合、それは &lt;code&gt;emacs-session-restore&lt;/code&gt; を呼び出し、引数として前のセッションのIDを渡します。&lt;a href=&quot;session-management#Session-Management&quot;&gt;セッション管理を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a5c5d634f325e4f5dde5c41de6695d4c44baf93f" translate="yes" xml:space="preserve">
          <source>If started on a text terminal, it loads the terminal-specific Lisp library (see &lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;Terminal-Specific&lt;/a&gt;), and runs the hook &lt;code&gt;tty-setup-hook&lt;/code&gt;. This is not done in &lt;code&gt;--batch&lt;/code&gt; mode, nor if &lt;code&gt;term-file-prefix&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">テキスト端末上で起動した場合、それは（参照端末固有のLispライブラリをロードする&lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;端末固有の&lt;/a&gt;）、およびフック走る &lt;code&gt;tty-setup-hook&lt;/code&gt; 。これは、 &lt;code&gt;--batch&lt;/code&gt; モードでは実行されません。また、 &lt;code&gt;term-file-prefix&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; の場合も実行されません。</target>
        </trans-unit>
        <trans-unit id="29f4b9655356d4a0356d199cc4f7f41ac90dc783" translate="yes" xml:space="preserve">
          <source>If successful it returns a list of Lisp representations of network addresses, otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">成功した場合はネットワークアドレスのLisp表現のリストを返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="40c0fd421e87b00227c46aaa704ee2421a1c5407" translate="yes" xml:space="preserve">
          <source>If text has a &lt;code&gt;line-prefix&lt;/code&gt; property, the prefix it defines will be added at display time to the beginning of every non-continuation line. It may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;).</source>
          <target state="translated">テキストに &lt;code&gt;line-prefix&lt;/code&gt; プロパティがある場合、テキストが定義するプレフィックスは、表示時にすべての非継続行の先頭に追加されます。文字列または画像（「&lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;その他の表示仕様&lt;/a&gt;」を参照）、または &lt;code&gt;:width&lt;/code&gt; または &lt;code&gt;:align-to&lt;/code&gt; 表示プロパティ（「&lt;a href=&quot;specified-space#Specified-Space&quot;&gt;指定されたスペース&lt;/a&gt;」を参照）で指定された空白のストレッチの場合があります。</target>
        </trans-unit>
        <trans-unit id="44bc217d22059bdc283ced6839d350ff858ba4cd" translate="yes" xml:space="preserve">
          <source>If text has a &lt;code&gt;wrap-prefix&lt;/code&gt; property, the prefix it defines will be added at display time to the beginning of every continuation line due to text wrapping (so if lines are truncated, the wrap-prefix is never used). It may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;).</source>
          <target state="translated">テキストに &lt;code&gt;wrap-prefix&lt;/code&gt; プロパティがある場合、テキストの折り返しにより、テキストが定義するプレフィックスがすべての継続行の先頭に追加されます（したがって、行が切り捨てられた場合、wrap-prefixは使用されません）。文字列または画像（「&lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;その他の表示仕様&lt;/a&gt;」を参照）、または &lt;code&gt;:width&lt;/code&gt; または &lt;code&gt;:align-to&lt;/code&gt; 表示プロパティ（「&lt;a href=&quot;specified-space#Specified-Space&quot;&gt;指定されたスペース&lt;/a&gt;」を参照）で指定された空白のストレッチの場合があります。</target>
        </trans-unit>
        <trans-unit id="5d15fe92b153b20c4991e58ddab61aea1df96e7c" translate="yes" xml:space="preserve">
          <source>If text has a string as its &lt;code&gt;help-echo&lt;/code&gt; property, then when you move the mouse onto that text, Emacs displays that string in the echo area, or in the tooltip window (see &lt;a href=&quot;tooltips#Tooltips&quot;&gt;Tooltips&lt;/a&gt;), after passing it through &lt;code&gt;substitute-command-keys&lt;/code&gt;.</source>
          <target state="translated">テキストはそのように文字列がある場合は &lt;code&gt;help-echo&lt;/code&gt; エコーエリアで、またはツールチップウィンドウでプロパティを、そしてあなたがそのテキスト上にマウスを移動すると、Emacsが表示する文字列（参照&lt;a href=&quot;tooltips#Tooltips&quot;&gt;ツールチップを&lt;/a&gt;を通してそれを通過した後）、 &lt;code&gt;substitute-command-keys&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b184a99089048ed59983006ccef80734494848e0" translate="yes" xml:space="preserve">
          <source>If that frame has evaluated its arguments and called its function already, the return value is &lt;code&gt;(t &lt;var&gt;function&lt;/var&gt;
&lt;var&gt;arg-values&lt;/var&gt;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">そのフレームが引数を評価し、その関数をすでに呼び出している場合、戻り値は &lt;code&gt;(t &lt;var&gt;function&lt;/var&gt; &lt;var&gt;arg-values&lt;/var&gt;&amp;hellip;)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="847eb61278468d0df3be4da2323afe62799a6a4e" translate="yes" xml:space="preserve">
          <source>If that frame has not evaluated the arguments yet, or is a special form, the value is &lt;code&gt;(nil &lt;var&gt;function&lt;/var&gt; &lt;var&gt;arg-forms&lt;/var&gt;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">そのフレームがまだ引数を評価していない場合、または特殊な形式の場合、値は &lt;code&gt;(nil &lt;var&gt;function&lt;/var&gt; &lt;var&gt;arg-forms&lt;/var&gt;&amp;hellip;)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="translated">の場合は</target>
        </trans-unit>
        <trans-unit id="5e17af952a2c4573220ead681dd1e997a966e239" translate="yes" xml:space="preserve">
          <source>If the 1-minute load average is available, but the 5- or 15-minute averages are not, this function returns a shortened list containing the available averages.</source>
          <target state="translated">1 分間の負荷平均が利用可能で、5 分または 15 分間の平均が利用できない場合、この関数は、利用可能な平均を含む短縮されたリストを返します。</target>
        </trans-unit>
        <trans-unit id="97280f2e3281d934f6ea504750b20af163002078" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;defcustom&lt;/code&gt; form for &lt;var&gt;var&lt;/var&gt; has been evaluated prior to this &lt;code&gt;custom-set-variables&lt;/code&gt; call, &lt;var&gt;expression&lt;/var&gt; is immediately evaluated, and the variable&amp;rsquo;s value is set to the result. Otherwise, &lt;var&gt;expression&lt;/var&gt; is stored into the variable&amp;rsquo;s &lt;code&gt;saved-value&lt;/code&gt; property, to be evaluated when the relevant &lt;code&gt;defcustom&lt;/code&gt; is called (usually when the library defining that variable is loaded into Emacs).</source>
          <target state="translated">この &lt;code&gt;custom-set-variables&lt;/code&gt; 呼び出しの前に &lt;var&gt;var&lt;/var&gt; の &lt;code&gt;defcustom&lt;/code&gt; フォームが評価されている場合、 &lt;var&gt;expression&lt;/var&gt; はすぐに評価され、変数の値が結果に設定されます。それ以外の場合、 &lt;var&gt;expression&lt;/var&gt; は変数の &lt;code&gt;saved-value&lt;/code&gt; プロパティに格納され、関連する &lt;code&gt;defcustom&lt;/code&gt; が呼び出されたときに評価されます（通常、その変数を定義するライブラリがEmacsにロードされたとき）。</target>
        </trans-unit>
        <trans-unit id="f174fd011e0f1c8a4e31cac2931b13c453f23857" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;font-lock-multiline&lt;/code&gt; variable is set to &lt;code&gt;t&lt;/code&gt;, Font Lock will try to add the &lt;code&gt;font-lock-multiline&lt;/code&gt; property automatically on multiline constructs. This is not a universal solution, however, since it slows down Font Lock somewhat. It can miss some multiline constructs, or make the property larger or smaller than necessary.</source>
          <target state="translated">&lt;code&gt;font-lock-multiline&lt;/code&gt; 変数が &lt;code&gt;t&lt;/code&gt; に設定されている場合、FontLockは複数行の構成に &lt;code&gt;font-lock-multiline&lt;/code&gt; プロパティを自動的に追加しようとします。ただし、これはフォントロックの速度をいくらか遅くするため、普遍的な解決策ではありません。複数行の構成を見逃したり、プロパティを必要以上に大きくしたり小さくしたりする可能性があります。</target>
        </trans-unit>
        <trans-unit id="1790598c9ae458e0c35a5d4725099be9d0246fd4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;other-window&lt;/code&gt; parameter of the selected window is a function, and &lt;code&gt;ignore-window-parameters&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, that function will be called with the arguments &lt;var&gt;count&lt;/var&gt; and &lt;var&gt;all-frames&lt;/var&gt; instead of the normal operation of this function.</source>
          <target state="translated">選択したウィンドウの &lt;code&gt;other-window&lt;/code&gt; パラメータが関数であり、 &lt;code&gt;ignore-window-parameters&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、その関数は、この関数の通常の操作ではなく、引数 &lt;var&gt;count&lt;/var&gt; および &lt;var&gt;all-frames&lt;/var&gt; を使用して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="03b321af0c9e866eddae56c1656e85dcbc358fbe" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;window&lt;/code&gt; property is non-&lt;code&gt;nil&lt;/code&gt;, then the overlay applies only on that window.</source>
          <target state="translated">場合は &lt;code&gt;window&lt;/code&gt; プロパティが非で &lt;code&gt;nil&lt;/code&gt; の場合、オーバーレイは、そのウィンドウにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="97d3e8d43b35d39378da1c412e7a81cc5af262b9" translate="yes" xml:space="preserve">
          <source>If the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt; is &lt;code&gt;lambda&lt;/code&gt;, then the list is a lambda expression. This is presumed to be a function, and is treated as such (see above). In order to execute properly as a key binding, this function must be a command&amp;mdash;it must have an &lt;code&gt;interactive&lt;/code&gt; specification. See &lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;Defining Commands&lt;/a&gt;.</source>
          <target state="translated">場合&lt;small&gt;CAR&lt;/small&gt;の &lt;var&gt;list&lt;/var&gt; ある &lt;code&gt;lambda&lt;/code&gt; 、そのリストはラムダ式です。これは関数であると推定され、そのように扱われます（上記を参照）。キーバインディングとして適切に実行するには、この関数はコマンドである必要があります。 &lt;code&gt;interactive&lt;/code&gt; な仕様が必要です。&lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;コマンドの定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7154685a78e92985a36c6d7e12500a86e731c4fc" translate="yes" xml:space="preserve">
          <source>If the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt; is the symbol &lt;code&gt;keymap&lt;/code&gt;, then the list is a keymap, and is treated as a keymap (see above).</source>
          <target state="translated">&lt;var&gt;list&lt;/var&gt; の&lt;small&gt;CAR&lt;/small&gt;がシンボル &lt;code&gt;keymap&lt;/code&gt; である場合、リストはキーマップであり、キーマップとして扱われます（上記を参照）。</target>
        </trans-unit>
        <trans-unit id="fe289f9488db4ee1cd75cb0cd7b6108b6d71dc5c" translate="yes" xml:space="preserve">
          <source>If the &lt;small&gt;CDR&lt;/small&gt; of a list&amp;rsquo;s last cons cell is some value other than &lt;code&gt;nil&lt;/code&gt;, we call the structure a &lt;em&gt;dotted list&lt;/em&gt;, since its printed representation would use dotted pair notation (see &lt;a href=&quot;dotted-pair-notation#Dotted-Pair-Notation&quot;&gt;Dotted Pair Notation&lt;/a&gt;). There is one other possibility: some cons cell&amp;rsquo;s &lt;small&gt;CDR&lt;/small&gt; could point to one of the previous cons cells in the list. We call that structure a &lt;em&gt;circular list&lt;/em&gt;.</source>
          <target state="translated">場合は&lt;small&gt;CDR&lt;/small&gt;リストの最後のコンスセルのが以外の値である &lt;code&gt;nil&lt;/code&gt; に、我々は構造呼び出す&lt;em&gt;ドットリストを&lt;/em&gt;その印刷された表現が（参照ドット対記法を使用しているため、&lt;a href=&quot;dotted-pair-notation#Dotted-Pair-Notation&quot;&gt;ドット対記法を&lt;/a&gt;）。もう1つの可能性があります。一部のconsセルの&lt;small&gt;CDR&lt;/small&gt;が、リスト内の以前のconsセルの1つを指している可能性があります。その構造を&lt;em&gt;循環リスト&lt;/em&gt;と呼び&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="424e8198016ba0ccc4d18f9f610113713028987b" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;alist&lt;/var&gt; argument of that function (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) contains a &lt;code&gt;preserve-size&lt;/code&gt; entry, the size of the window produced by that function is preserved.</source>
          <target state="translated">場合は &lt;var&gt;alist&lt;/var&gt; その関数の引数が（参照&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;ウィンドウを選択する&lt;/a&gt;）が含まれて &lt;code&gt;preserve-size&lt;/code&gt; エントリーし、その関数によって生成ウィンドウのサイズが保存されています。</target>
        </trans-unit>
        <trans-unit id="c52639c39140e2bd123aed39bf8018dece7b3c48" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;doc-string&lt;/var&gt; argument is supplied, it specifies the documentation string for the variable (stored in the symbol&amp;rsquo;s &lt;code&gt;variable-documentation&lt;/code&gt; property). See &lt;a href=&quot;documentation#Documentation&quot;&gt;Documentation&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;var&gt;doc-string&lt;/var&gt; 引数が供給され、それは（シンボルの中に格納された変数のドキュメント文字列を指定する &lt;code&gt;variable-documentation&lt;/code&gt; プロパティを）。&lt;a href=&quot;documentation#Documentation&quot;&gt;ドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d01ce025c58e0693441c85648be2ceace369821d" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;docstring&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the documentation for &lt;var&gt;new-alias&lt;/var&gt;; otherwise, the alias gets the same documentation as &lt;var&gt;base-variable&lt;/var&gt; has, if any, unless &lt;var&gt;base-variable&lt;/var&gt; is itself an alias, in which case &lt;var&gt;new-alias&lt;/var&gt; gets the documentation of the variable at the end of the chain of aliases.</source>
          <target state="translated">&lt;var&gt;docstring&lt;/var&gt; 引数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;var&gt;new-alias&lt;/var&gt; のドキュメントを指定します。それ以外の場合、 &lt;var&gt;base-variable&lt;/var&gt; 自体がエイリアスである場合を除き、エイリアスはベース &lt;var&gt;base-variable&lt;/var&gt; と同じドキュメントを取得します。その場合、 &lt;var&gt;new-alias&lt;/var&gt; はエイリアスのチェーンの最後で変数のドキュメントを取得します。</target>
        </trans-unit>
        <trans-unit id="8abe3fc2fdc3412f9be8328b5b8da045f82402b4" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;file&lt;/var&gt; cannot be watched for some reason, this function signals a &lt;code&gt;file-notify-error&lt;/code&gt; error.</source>
          <target state="translated">何らかの理由で &lt;var&gt;file&lt;/var&gt; を監視できない場合、この関数は &lt;code&gt;file-notify-error&lt;/code&gt; エラーを通知します。</target>
        </trans-unit>
        <trans-unit id="d4664b8df5d4e7d3bdde95bfdbcdf58cf12a2663" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;find-file&lt;/var&gt; argument to &lt;code&gt;normal-mode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;normal-mode&lt;/code&gt; assumes that the &lt;code&gt;find-file&lt;/code&gt; function is calling it. In this case, it may process local variables in the &amp;lsquo;</source>
          <target state="translated">場合は &lt;var&gt;find-file&lt;/var&gt; への引数 &lt;code&gt;normal-mode&lt;/code&gt; 非で &lt;code&gt;nil&lt;/code&gt; に、 &lt;code&gt;normal-mode&lt;/code&gt; あることを前提と &lt;code&gt;find-file&lt;/code&gt; 関数は、それを呼び出しています。この場合、 '内のローカル変数を処理する可能性があります。</target>
        </trans-unit>
        <trans-unit id="544e0e4ec05ea04f153a1ffe2c205b4abdb7efdd" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;height&lt;/var&gt; value doesn&amp;rsquo;t fit the previous possibilities, it is a form. Emacs evaluates it to get the new height, with the symbol &lt;code&gt;height&lt;/code&gt; bound to the current specified font height.</source>
          <target state="translated">&lt;var&gt;height&lt;/var&gt; 値が前の可能性に適合しない場合、それはフォームです。Emacsはそれを評価して新しい高さを取得し、シンボルの &lt;code&gt;height&lt;/code&gt; さは現在指定されているフォントの高さにバインドされます。</target>
        </trans-unit>
        <trans-unit id="2ee2a9e2a05e9cbd4ebcabce4d98e573ce6b99f1" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;path&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that list of directories is used instead of &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;path&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;load-path&lt;/code&gt; の代わりにそのディレクトリのリストが使用されます。</target>
        </trans-unit>
        <trans-unit id="f9dbd115e2fe4851e1fd608ae59011205214448c" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;value&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, mark &lt;var&gt;option&lt;/var&gt; as automatically buffer-local; if the value is &lt;code&gt;permanent&lt;/code&gt;, also set &lt;var&gt;option&lt;/var&gt;s &lt;code&gt;permanent-local&lt;/code&gt; property to &lt;code&gt;t&lt;/code&gt;. See &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合、 &lt;var&gt;option&lt;/var&gt; を自動的にバッファローカルとしてマークします。値が &lt;code&gt;permanent&lt;/code&gt; である場合は、 &lt;var&gt;option&lt;/var&gt; の &lt;code&gt;permanent-local&lt;/code&gt; プロパティも &lt;code&gt;t&lt;/code&gt; に設定します。&lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Buffer-Localの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fc8ad90de57bbf124d088ff2c62b110c84781c3c" translate="yes" xml:space="preserve">
          <source>If the Emacs process&amp;rsquo;s user-id does not correspond to any known user (and provided &lt;code&gt;NAME&lt;/code&gt; is not set), the result is &lt;code&gt;&quot;unknown&quot;&lt;/code&gt;.</source>
          <target state="translated">EmacsプロセスのユーザーIDが既知のユーザーに対応していない場合（および &lt;code&gt;NAME&lt;/code&gt; が設定されていない場合）、結果は &lt;code&gt;&quot;unknown&quot;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="8b4e9cfb4b7ef208b80fee0e223a915694d643a8" translate="yes" xml:space="preserve">
          <source>If the action code is a string or vector, the</source>
          <target state="translated">アクションコードが文字列またはベクトルの場合は</target>
        </trans-unit>
        <trans-unit id="22a69351149b285cd95fc9520541a02ef12445d5" translate="yes" xml:space="preserve">
          <source>If the actual subdivision into intervals is meaningful, that means you can distinguish between a buffer that is just one interval with a certain property, and a buffer containing the same text subdivided into two intervals, both of which have that property.</source>
          <target state="translated">実際に間隔に細分化することに意味があるとすれば、それは、あるプロパティを持つ1つの間隔だけのバッファと、同じテキストを含むバッファを2つの間隔に細分化したもので、どちらもそのプロパティを持つものとを区別できることを意味しています。</target>
        </trans-unit>
        <trans-unit id="5a83c2ef9b2ea8b65afff88495273d99dca09042" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;binary&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the function returns the &lt;em&gt;text form&lt;/em&gt; of the hash, as an ordinary Lisp string. If &lt;var&gt;binary&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it returns the hash in &lt;em&gt;binary form&lt;/em&gt;, as a sequence of bytes stored in a unibyte string.</source>
          <target state="translated">引数 &lt;var&gt;binary&lt;/var&gt; が省略されているか、 &lt;code&gt;nil&lt;/code&gt; の場合、関数はハッシュの&lt;em&gt;テキスト形式&lt;/em&gt;を通常のLisp文字列として返します。場合 &lt;var&gt;binary&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、それはハッシュを返す&lt;em&gt;バイナリ形式&lt;/em&gt;ユニバイト文字列に格納されたバイトのシーケンスとして、。</target>
        </trans-unit>
        <trans-unit id="e10d049a8be15c0c954d31fb09186546a431b4fd" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;delay-question&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, delay sending this question until the process has finished replying to any previous questions. This produces more reliable results with some processes.</source>
          <target state="translated">引数 &lt;var&gt;delay-question&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、プロセスが前の質問への応答を終了するまで、この質問の送信を遅らせます。これにより、一部のプロセスでより信頼性の高い結果が得られます。</target>
        </trans-unit>
        <trans-unit id="fdab9ed15c636e7683dee919701455b2de68f386" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;help&lt;/var&gt; is given, it should be a list of this form:</source>
          <target state="translated">引数 &lt;var&gt;help&lt;/var&gt; が指定されている場合は、次の形式のリストである必要があります。</target>
        </trans-unit>
        <trans-unit id="7880971ad13cb4ee532d137f1832525ca323a437" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;inherit-input-method&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the minibuffer inherits the current input method (see &lt;a href=&quot;input-methods#Input-Methods&quot;&gt;Input Methods&lt;/a&gt;) and the setting of &lt;code&gt;enable-multibyte-characters&lt;/code&gt; (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;) from whichever buffer was current before entering the minibuffer.</source>
          <target state="translated">引数 &lt;var&gt;inherit-input-method&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、ミニバッファーは現在の入力メソッド（&lt;a href=&quot;input-methods#Input-Methods&quot;&gt;入力メソッドを&lt;/a&gt;参照）と &lt;code&gt;enable-multibyte-characters&lt;/code&gt; の設定（&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;テキスト表現を&lt;/a&gt;参照）を、ミニバッファーに入る前に現在のバッファーから継承します。</target>
        </trans-unit>
        <trans-unit id="79a597d61ae6fb37cd3c5f737528903c265a9607" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it must be a function of one argument, unless &lt;var&gt;collection&lt;/var&gt; is a hash table, in which case it should be a function of two arguments. It is used to test each possible match, and the match is accepted only if &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. The argument given to &lt;var&gt;predicate&lt;/var&gt; is either a string or a cons cell (the &lt;small&gt;CAR&lt;/small&gt; of which is a string) from the alist, or a symbol (&lt;em&gt;not&lt;/em&gt; a symbol name) from the obarray. If &lt;var&gt;collection&lt;/var&gt; is a hash table, &lt;var&gt;predicate&lt;/var&gt; is called with two arguments, the string key and the associated value.</source>
          <target state="translated">引数 &lt;var&gt;predicate&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;var&gt;collection&lt;/var&gt; がハッシュテーブルでない限り、1つの引数の関数である必要があります。ハッシュテーブルの場合は、2つの引数の関数である必要があります。これは、可能な各一致をテストするために使用され、 &lt;var&gt;predicate&lt;/var&gt; がnon- &lt;code&gt;nil&lt;/code&gt; を返す場合にのみ一致が受け入れられます。 &lt;var&gt;predicate&lt;/var&gt; 指定された引数は、リストからの文字列またはconsセル（&lt;small&gt;CAR&lt;/small&gt;は文字列）、またはobarrayからのシンボル（シンボル名で&lt;em&gt;はない&lt;/em&gt;）のいずれかです。 &lt;var&gt;collection&lt;/var&gt; がハッシュテーブルの場合、 &lt;var&gt;predicate&lt;/var&gt; は文字列キーと関連する値の2つの引数で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1e8ec49cd22906ec7c362708e48e45bccbf9fab6" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;replace&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it means to replace the contents of the buffer (actually, just the accessible portion) with the contents of the file. This is better than simply deleting the buffer contents and inserting the whole file, because (1) it preserves some marker positions and (2) it puts less data in the undo list.</source>
          <target state="translated">引数 &lt;var&gt;replace&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、バッファの内容（実際にはアクセス可能な部分のみ）をファイルの内容に置き換えることを意味します。これは、単にバッファの内容を削除してファイル全体を挿入するよりも優れています。これは、（1）いくつかのマーカー位置を保持し、（2）元に戻すリストに入れるデータが少なくなるためです。</target>
        </trans-unit>
        <trans-unit id="b9ce24fc8b5938e53493beb02dffd65685e0462c" translate="yes" xml:space="preserve">
          <source>If the argument is a string with text properties, the property list in the copy is itself a copy, not shared with the original&amp;rsquo;s property list. However, the actual values of the properties are shared. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">引数がテキストプロパティを持つ文字列の場合、コピー内のプロパティリスト自体がコピーであり、元のプロパティリストと共有されません。ただし、プロパティの実際の値は共有されます。&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;テキストのプロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f6769c6ffad1ce1803b2f5f120ff2fd6346460fe" translate="yes" xml:space="preserve">
          <source>If the attempt to make point visible (i.e., in a fully-visible screen line) fails, the display routines will disregard the requested window-start position and compute a new one anyway. Thus, for reliable results Lisp programs that call this function should always move point to be inside the window whose display starts at &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">ポイントを表示する（つまり、完全に表示される画面行で）試みが失敗した場合、表示ルーチンは要求されたウィンドウ開始位置を無視し、とにかく新しい位置を計算します。したがって、信頼できる結果を得るには、この関数を呼び出すLispプログラムは、常にポイントを移動して、表示が &lt;var&gt;position&lt;/var&gt; 始まるウィンドウ内に配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="53aa631615bd5530c64e36d6c02beaed78d34de9" translate="yes" xml:space="preserve">
          <source>If the autoloaded file fails to define the desired Lisp function or macro, then an error is signaled with data &lt;code&gt;&quot;Autoloading failed to
define function &lt;var&gt;function-name&lt;/var&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">自動ロードファイルが必要なLispの関数やマクロを定義するために失敗した場合は、エラーがデータで通知され &lt;code&gt;&quot;Autoloading failed to define function &lt;var&gt;function-name&lt;/var&gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="803922d41afa50bf9a9d9ac003f082cfe949a52b" translate="yes" xml:space="preserve">
          <source>If the base location starts with &amp;lsquo;</source>
          <target state="translated">ベースロケーションが 'で始まる場合</target>
        </trans-unit>
        <trans-unit id="b618cf6da3ee38d4f1100dca09e58dac2332f9d6" translate="yes" xml:space="preserve">
          <source>If the binding of a key sequence is a keymap, we call the key sequence a &lt;em&gt;prefix key&lt;/em&gt;. Otherwise, we call it a &lt;em&gt;complete key&lt;/em&gt; (because no more events can be added to it). If the binding is &lt;code&gt;nil&lt;/code&gt;, we call the key &lt;em&gt;undefined&lt;/em&gt;. Examples of prefix keys are</source>
          <target state="translated">キーシーケンスのバインディングがキーマップである場合、キーシーケンスを&lt;em&gt;プレフィックスキー&lt;/em&gt;と呼び&lt;em&gt;ます&lt;/em&gt;。それ以外の場合は、&lt;em&gt;完全なキー&lt;/em&gt;と呼び&lt;em&gt;ます&lt;/em&gt;（これ以上イベントを追加できないため）。バインディングが &lt;code&gt;nil&lt;/code&gt; の場合、キーを&lt;em&gt;undefined&lt;/em&gt;と呼びます。プレフィックスキーの例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b42b592b3eaf84b0272824c58a7b1c63f70a7137" translate="yes" xml:space="preserve">
          <source>If the buffer</source>
          <target state="translated">バッファが</target>
        </trans-unit>
        <trans-unit id="9fb23d2ab9e30a958cb01f3be9687521a1f2108c" translate="yes" xml:space="preserve">
          <source>If the buffer has no recorded last modification time, this function returns zero. This case occurs, for instance, if the buffer is not visiting a file or if the time has been explicitly cleared by &lt;code&gt;clear-visited-file-modtime&lt;/code&gt;. Note, however, that &lt;code&gt;visited-file-modtime&lt;/code&gt; returns a timestamp for some non-file buffers too. For instance, in a Dired buffer listing a directory, it returns the last modification time of that directory, as recorded by Dired.</source>
          <target state="translated">バッファに最終変更時刻が記録されていない場合、この関数はゼロを返します。このケースは、たとえば、バッファがファイルにアクセスしていない場合、または &lt;code&gt;clear-visited-file-modtime&lt;/code&gt; によって時刻が明示的にクリアされている場合に発生します。ただし、 &lt;code&gt;visited-file-modtime&lt;/code&gt; は、一部の非ファイルバッファのタイムスタンプも返すことに注意してください。たとえば、ディレクトリを一覧表示するDiredバッファでは、Diredによって記録された、そのディレクトリの最終変更時刻が返されます。</target>
        </trans-unit>
        <trans-unit id="3eb696d2b48fba3d8c9166772e7011af11a1be37" translate="yes" xml:space="preserve">
          <source>If the buffer is visiting a file and contains unsaved changes, &lt;code&gt;kill-buffer&lt;/code&gt; asks the user to confirm before the buffer is killed. It does this even if not called interactively. To prevent the request for confirmation, clear the modified flag before calling &lt;code&gt;kill-buffer&lt;/code&gt;. See &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Buffer Modification&lt;/a&gt;.</source>
          <target state="translated">バッファがファイルにアクセスしていて、保存されていない変更が含まれている場合、 &lt;code&gt;kill-buffer&lt;/code&gt; は、バッファが強制終了される前に確認するようにユーザーに要求します。インタラクティブに呼び出されなくても、これを行います。確認の要求を防ぐには、 &lt;code&gt;kill-buffer&lt;/code&gt; を呼び出す前に変更されたフラグをクリアします。&lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;バッファの変更を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b0bca82333b4ce5dd152ea39f5819e4f37d2eaa1" translate="yes" xml:space="preserve">
          <source>If the buffer is visiting a file that doesn&amp;rsquo;t exist, this function returns -1.</source>
          <target state="translated">バッファが存在しないファイルにアクセスしている場合、この関数は-1を返します。</target>
        </trans-unit>
        <trans-unit id="f6ab4ecbe64f576dadab98e97450e5f18510d5ba" translate="yes" xml:space="preserve">
          <source>If the buffer of a window of &lt;var&gt;configuration&lt;/var&gt; has been killed since &lt;var&gt;configuration&lt;/var&gt; was made, that window is, as a rule, removed from the restored configuration. However, if that window is the last window remaining in the restored configuration, another live buffer is shown in it.</source>
          <target state="translated">&lt;var&gt;configuration&lt;/var&gt; が行われた後に &lt;var&gt;configuration&lt;/var&gt; ウィンドウのバッファーが強制終了された場合、そのウィンドウは、原則として、復元された構成から削除されます。ただし、そのウィンドウが復元された構成に残っている最後のウィンドウである場合は、別のライブバッファーが表示されます。</target>
        </trans-unit>
        <trans-unit id="6e8f1242e15fde8f68946683c1fc5e14009fd4e5" translate="yes" xml:space="preserve">
          <source>If the buffer or text is read-only, &lt;code&gt;kill-region&lt;/code&gt; modifies the kill ring just the same, then signals an error without modifying the buffer. This is convenient because it lets the user use a series of kill commands to copy text from a read-only buffer into the kill ring.</source>
          <target state="translated">バッファまたはテキストが読み取り専用の場合、 &lt;code&gt;kill-region&lt;/code&gt; は同じようにkillリングを変更し、バッファを変更せずにエラーを通知します。これは、ユーザーが一連のkillコマンドを使用して、読み取り専用バッファーからkillリングにテキストをコピーできるため便利です。</target>
        </trans-unit>
        <trans-unit id="808f6a7fd9a07ae313e156bf9263fe4bfab2277b" translate="yes" xml:space="preserve">
          <source>If the buffer position &lt;var&gt;position&lt;/var&gt; is visible in window &lt;var&gt;window&lt;/var&gt;, this function returns the display coordinates of the upper/left corner of the glyph at &lt;var&gt;position&lt;/var&gt;. The return value is a cons of the X- and Y-coordinates of that corner, relative to an origin at (0, 0) of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s display. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;position&lt;/var&gt; is not visible in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">バッファ位置の &lt;var&gt;position&lt;/var&gt; がウィンドウ &lt;var&gt;window&lt;/var&gt; に表示されている場合、この関数は、 &lt;var&gt;position&lt;/var&gt; にあるグリフの左上隅の表示座標を返します。戻り値は、 &lt;var&gt;window&lt;/var&gt; の表示の（0、0）の原点を基準にした、そのコーナーのX座標とY座標の短所です。 &lt;var&gt;window&lt;/var&gt; &lt;var&gt;position&lt;/var&gt; が表示されていない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2c08f507628df4359197a1739c4f41981f186505" translate="yes" xml:space="preserve">
          <source>If the buffer size specified by &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; is large enough to hold the string&amp;rsquo;s text, the function stores in &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; the actual number of bytes copied to &lt;var&gt;buf&lt;/var&gt;, including the terminating null byte, and returns &lt;code&gt;true&lt;/code&gt;. If the buffer is too small, the function raises the &lt;code&gt;args-out-of-range&lt;/code&gt; error condition, stores the required number of bytes in &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt;, and returns &lt;code&gt;false&lt;/code&gt;. See &lt;a href=&quot;module-nonlocal#Module-Nonlocal&quot;&gt;Module Nonlocal&lt;/a&gt;, for how to handle pending error conditions.</source>
          <target state="translated">&lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; で指定されたバッファサイズが文字列のテキストを保持するのに十分な大きさである場合、関数は &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; に、終了nullバイトを含む &lt;var&gt;buf&lt;/var&gt; にコピーされた実際のバイト数を格納し、 &lt;code&gt;true&lt;/code&gt; を返します。バッファが小さすぎる場合、関数は &lt;code&gt;args-out-of-range&lt;/code&gt; エラー条件を発生させ、必要なバイト数を &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; に格納し、 &lt;code&gt;false&lt;/code&gt; を返します。保留中のエラー状態を処理する方法については、&lt;a href=&quot;module-nonlocal#Module-Nonlocal&quot;&gt;モジュール非ローカルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4096e8444dc3c6041bd288b8d8d22dfd6b4f8727" translate="yes" xml:space="preserve">
          <source>If the buffer that used to be current has been killed by the time of exit from &lt;code&gt;save-current-buffer&lt;/code&gt;, then it is not made current again, of course. Instead, whichever buffer was current just before exit remains current.</source>
          <target state="translated">もちろん、 &lt;code&gt;save-current-buffer&lt;/code&gt; を終了するまでに、以前は現在のバッファが強制終了されていた場合、そのバッファは再び現在のバッファになりません。代わりに、出口の直前に現在だったバッファーは現在のままです。</target>
        </trans-unit>
        <trans-unit id="c5684710e6f636642a1e22d212f2b9d103d05737" translate="yes" xml:space="preserve">
          <source>If the button has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;follow-link&lt;/code&gt; property, and &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt; is set, a quick</source>
          <target state="translated">ボタンに &lt;code&gt;nil&lt;/code&gt; 以外の &lt;code&gt;follow-link&lt;/code&gt; プロパティがあり、 &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt; が設定されている場合、クイック</target>
        </trans-unit>
        <trans-unit id="eccbf77d477d2a7c5de1862108f5baba2e869ed2" translate="yes" xml:space="preserve">
          <source>If the characters copied from &lt;var&gt;string&lt;/var&gt; have text properties, the properties are copied into the new string also. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">&lt;var&gt;string&lt;/var&gt; からコピーされた文字にテキストプロパティがある場合、プロパティは新しい文字列にもコピーされます。&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;テキストのプロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5b607989553c9dbdef0c41babb143b4033c4f93b" translate="yes" xml:space="preserve">
          <source>If the command asks for a prefix argument, it receives the value &lt;var&gt;prefix-argument&lt;/var&gt;. If &lt;code&gt;execute-extended-command&lt;/code&gt; is called interactively, the current raw prefix argument is used for &lt;var&gt;prefix-argument&lt;/var&gt;, and thus passed on to whatever command is run.</source>
          <target state="translated">コマンドがプレフィックス引数を要求すると、値 &lt;var&gt;prefix-argument&lt;/var&gt; を受け取ります。場合は &lt;code&gt;execute-extended-command&lt;/code&gt; 対話的に呼ばれ、現在の生の前置引数がために使用されている &lt;var&gt;prefix-argument&lt;/var&gt; ので、実行されているもののコマンドに渡さ。</target>
        </trans-unit>
        <trans-unit id="3fc92ac537a37267fa3d2ae35555184873591f1b" translate="yes" xml:space="preserve">
          <source>If the command is a keyboard macro (i.e., a string or vector), Emacs executes it using &lt;code&gt;execute-kbd-macro&lt;/code&gt; (see &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Keyboard Macros&lt;/a&gt;).</source>
          <target state="translated">コマンドがキーボードマクロ（つまり、文字列またはベクトル）の場合、Emacsは &lt;code&gt;execute-kbd-macro&lt;/code&gt; を使用してコマンドを実行し&lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;ます&lt;/a&gt;（キーボードマクロを参照）。</target>
        </trans-unit>
        <trans-unit id="3e7fee2389ae3316646e9192b70deb7670674b09" translate="yes" xml:space="preserve">
          <source>If the command was invoked through shift-translation, set the mark and activate the region temporarily, or extend an already active region, before the command is run. If the command was invoked without shift-translation, and the region is temporarily active, deactivate the region before the command is run. Special.</source>
          <target state="translated">シフト変換によってコマンドが呼び出された場合は、マークを設定して一時的に領域をアクティブにするか、既にアクティブな領域を拡張してからコマンドを実行します。シフト変換なしでコマンドが呼び出され、領域が一時的にアクティブになっている場合は、コマンドを実行する前に領域を非アクティブにします。特別なこと。</target>
        </trans-unit>
        <trans-unit id="6c83cfde2807ead6babd5c50dc52c4abfd86c927" translate="yes" xml:space="preserve">
          <source>If the condition is a function, &lt;var&gt;func&lt;/var&gt;, then a position &lt;var&gt;pos&lt;/var&gt; is inside a link if &lt;code&gt;(&lt;var&gt;func&lt;/var&gt; &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt; evaluates to non-&lt;code&gt;nil&lt;/code&gt;. The value returned by &lt;var&gt;func&lt;/var&gt; serves as the action code.</source>
          <target state="translated">条件が関数 &lt;var&gt;func&lt;/var&gt; の場合、 &lt;code&gt;(&lt;var&gt;func&lt;/var&gt; &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;func&lt;/var&gt; &lt;var&gt;pos&lt;/var&gt; ）がnon- &lt;code&gt;nil&lt;/code&gt; と評価された場合、位置 &lt;var&gt;pos&lt;/var&gt; はリンク内にあります。 &lt;var&gt;func&lt;/var&gt; によって返される値は、アクションコードとして機能します。</target>
        </trans-unit>
        <trans-unit id="2b611e5d0539f4653aead23fb1c79ba4aee87256" translate="yes" xml:space="preserve">
          <source>If the condition is the symbol &lt;code&gt;mouse-face&lt;/code&gt;, a position is inside a link if there is a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;mouse-face&lt;/code&gt; property at that position. The action code is always &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">条件がシンボル &lt;code&gt;mouse-face&lt;/code&gt; の場合、その位置に &lt;code&gt;nil&lt;/code&gt; 以外の &lt;code&gt;mouse-face&lt;/code&gt; プロパティがあると、その位置はリンク内にあります。アクションコードは常に &lt;code&gt;t&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="056e7702641ae931e2d243ed19a6e2197a02f48c" translate="yes" xml:space="preserve">
          <source>If the condition value is anything else, then the position is inside a link and the condition itself is the action code. Clearly, you should specify this kind of condition only when applying the condition via a text or property overlay on the link text (so that it does not apply to the entire buffer).</source>
          <target state="translated">条件値が他の何かであれば、位置はリンク内にあり、条件自体はアクションコードです。明らかに、この種の条件を指定すべきなのは、リンクテキスト上のテキストやプロパティのオーバーレイを介して条件を適用するときだけです(バッファ全体に適用されないように)。</target>
        </trans-unit>
        <trans-unit id="bf453ddf2c18b51f178d0aea4c9759763dbe2cac" translate="yes" xml:space="preserve">
          <source>If the connection &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;shell&lt;/code&gt;, this parameter will be interpreted as a format-spec string that will be executed to make the connection. The specs available are &amp;lsquo;</source>
          <target state="translated">接続 &lt;code&gt;type&lt;/code&gt; が &lt;code&gt;shell&lt;/code&gt; 場合、このパラメーターは、接続を確立するために実行されるformat-spec文字列として解釈されます。利用可能なスペックは '</target>
        </trans-unit>
        <trans-unit id="1b87022066cecde4b54384a04abbdd54e7dc31cd" translate="yes" xml:space="preserve">
          <source>If the content directory contains a file named</source>
          <target state="translated">コンテンツディレクトリに</target>
        </trans-unit>
        <trans-unit id="e45ae9eaeb69f38a1876754ce7a5029f59407d6b" translate="yes" xml:space="preserve">
          <source>If the crop area is outside or overlaps the edge of the image it will be reduced to exclude any areas outside of the image. This means it is not possible to use &lt;code&gt;:crop&lt;/code&gt; to increase the size of the image by entering large &lt;var&gt;width&lt;/var&gt; or &lt;var&gt;height&lt;/var&gt; values.</source>
          <target state="translated">トリミング領域が画像の外側にあるか、画像の端と重なっている場合は、画像の外側の領域を除外するように縮小されます。つまり、 &lt;code&gt;:crop&lt;/code&gt; を使用して、 &lt;var&gt;width&lt;/var&gt; や &lt;var&gt;height&lt;/var&gt; 値を大きくして画像のサイズを大きくすることはできません。</target>
        </trans-unit>
        <trans-unit id="070aacbb69df6bef77d26cbb42be7950af03d1a9" translate="yes" xml:space="preserve">
          <source>If the current Emacs session restored its state from a dump file, this function returns information about the dump file and the time it took to restore the Emacs state. The value is an alist &lt;code&gt;((dumped-with-pdumper&amp;nbsp;.&amp;nbsp;t)&amp;nbsp;(load-time&amp;nbsp;.&amp;nbsp;&lt;var&gt;time&lt;/var&gt;)&amp;nbsp;(dump-file-name&amp;nbsp;.&amp;nbsp;&lt;var&gt;file&lt;/var&gt;))&lt;/code&gt;, where &lt;var&gt;file&lt;/var&gt; is the name of the dump file, and &lt;var&gt;time&lt;/var&gt; is the time in seconds it took to restore the state from the dump file. If the current session was not restored from a dump file, the value is nil.</source>
          <target state="translated">現在のEmacsセッションがダンプファイルから状態を復元した場合、この関数はダンプファイルとEmacs状態の復元にかか​​った時間に関する情報を返します。値が連想リストである &lt;code&gt;((dumped-with-pdumper&amp;nbsp;.&amp;nbsp;t)&amp;nbsp;(load-time&amp;nbsp;.&amp;nbsp;&lt;var&gt;time&lt;/var&gt;)&amp;nbsp;(dump-file-name&amp;nbsp;.&amp;nbsp;&lt;var&gt;file&lt;/var&gt;))&lt;/code&gt; 、 &lt;var&gt;file&lt;/var&gt; ダンプ・ファイルの名前で、 &lt;var&gt;time&lt;/var&gt; 秒単位の時間ですダンプファイルから状態を復元するのにかかりました。現在のセッションがダンプファイルから復元されなかった場合、値はnilです。</target>
        </trans-unit>
        <trans-unit id="d0eeb02c99c9b3df4b9d379c927dc934adec3211" translate="yes" xml:space="preserve">
          <source>If the current buffer is not the same as the selected window&amp;rsquo;s buffer, &lt;code&gt;recursive-edit&lt;/code&gt; saves and restores the current buffer. Otherwise, if you switch buffers, the buffer you switched to is current after &lt;code&gt;recursive-edit&lt;/code&gt; returns.</source>
          <target state="translated">現在のバッファが選択したウィンドウのバッファと同じでない場合、 &lt;code&gt;recursive-edit&lt;/code&gt; は現在のバッファを保存および復元します。それ以外の場合、バッファーを切り替えると、 &lt;code&gt;recursive-edit&lt;/code&gt; が戻った後、切り替えたバッファーは最新のものになります。</target>
        </trans-unit>
        <trans-unit id="4e253d213ea596399bdda97ff0dc4b3561896f5b" translate="yes" xml:space="preserve">
          <source>If the debugger was entered due to a</source>
          <target state="translated">が原因でデバッガが入力された場合</target>
        </trans-unit>
        <trans-unit id="33b4631942887b90e212a97ab276b928655c23c0" translate="yes" xml:space="preserve">
          <source>If the default value is &lt;code&gt;nil&lt;/code&gt;, then whenever Emacs creates a new buffer via a command such as</source>
          <target state="translated">デフォルト値が &lt;code&gt;nil&lt;/code&gt; の場合、Emacsが次のようなコマンドを介して新しいバッファーを作成するたびに</target>
        </trans-unit>
        <trans-unit id="b7e870a26e6d4420e95bcef64f66010c99679503" translate="yes" xml:space="preserve">
          <source>If the display is not up to date, &lt;code&gt;window-line-height&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. In that case, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; may be used to obtain related information.</source>
          <target state="translated">表示が最新でない場合、 &lt;code&gt;window-line-height&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。その場合、 &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; を使用して関連情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="fc8a692ea2ab45dd7d66680b28759c6ef6c56a76" translate="yes" xml:space="preserve">
          <source>If the environment variable &lt;code&gt;EMACSLOADPATH&lt;/code&gt; is set, it modifies the above initialization procedure. Emacs initializes &lt;code&gt;load-path&lt;/code&gt; based on the value of the environment variable.</source>
          <target state="translated">環境変数 &lt;code&gt;EMACSLOADPATH&lt;/code&gt; が設定されている場合、上記の初期化手順が変更されます。Emacsは環境変数の値に基づいて &lt;code&gt;load-path&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="0b0792d3cb5a730ad75c8819fca45ba09bdd293d" translate="yes" xml:space="preserve">
          <source>If the error is not handled, the two arguments are used in printing the error message. Normally, this error message is provided by the &lt;code&gt;error-message&lt;/code&gt; property of &lt;var&gt;error-symbol&lt;/var&gt;. If &lt;var&gt;data&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this is followed by a colon and a comma separated list of the unevaluated elements of &lt;var&gt;data&lt;/var&gt;. For &lt;code&gt;error&lt;/code&gt;, the error message is the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;data&lt;/var&gt; (that must be a string). Subcategories of &lt;code&gt;file-error&lt;/code&gt; are handled specially.</source>
          <target state="translated">エラーが処理されない場合、2つの引数がエラーメッセージの出力に使用されます。通常、このエラーメッセージは、 &lt;var&gt;error-symbol&lt;/var&gt; の &lt;code&gt;error-message&lt;/code&gt; プロパティによって提供されます。 &lt;var&gt;data&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この後にコロンと、 &lt;var&gt;data&lt;/var&gt; 未評価要素のコンマ区切りリストが続きます。ための &lt;code&gt;error&lt;/code&gt; 、エラーメッセージは、&lt;small&gt;CAR&lt;/small&gt;の &lt;var&gt;data&lt;/var&gt; （つまり、文字列でなければなりません）。 &lt;code&gt;file-error&lt;/code&gt; サブカテゴリは特別に処理されます。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a1b1a1682bbb0c3c3979b868da534ea83fc519b4" translate="yes" xml:space="preserve">
          <source>If the event has modifiers, Emacs attempts to resolve them and return the code of the corresponding character. For example, if the user types</source>
          <target state="translated">イベントに修飾子がある場合、Emacs はそれを解決し、対応する文字のコードを返します。例えば、ユーザが</target>
        </trans-unit>
        <trans-unit id="225e4b6cef0a4ca594213b47905edc7ed2bc1eac" translate="yes" xml:space="preserve">
          <source>If the events are all characters and all can fit in a string, then &lt;code&gt;read-key-sequence&lt;/code&gt; returns a string (see &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;Strings of Events&lt;/a&gt;). Otherwise, it returns a vector, since a vector can hold all kinds of events&amp;mdash;characters, symbols, and lists. The elements of the string or vector are the events in the key sequence.</source>
          <target state="translated">イベントがすべて文字であり、すべてが文字列に収まる場合、 &lt;code&gt;read-key-sequence&lt;/code&gt; は文字列を返します（&lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;イベントの&lt;/a&gt;文字列を参照）。それ以外の場合、ベクターはすべての種類のイベント（文字、記号、リスト）を保持できるため、ベクターを返します。文字列またはベクトルの要素は、キーシーケンスのイベントです。</target>
        </trans-unit>
        <trans-unit id="ce369d4f903bbc523e37f3d49117138394797808" translate="yes" xml:space="preserve">
          <source>If the exact result needs expensive processing, the function will return &lt;code&gt;nil&lt;/code&gt; rather than an approximation. This is the default if the argument is omitted.</source>
          <target state="translated">正確な結果にコストのかかる処理が必要な場合、関数は近似値ではなく &lt;code&gt;nil&lt;/code&gt; を返します。引数を省略した場合のデフォルトです。</target>
        </trans-unit>
        <trans-unit id="6478f8f8f9e75aaedaa7f79c8530c973ef5dc68e" translate="yes" xml:space="preserve">
          <source>If the expression is a function call and the function has a &lt;code&gt;safe-local-eval-function&lt;/code&gt; property, the property value determines whether the expression is safe to evaluate. The property value can be a predicate to call to test the expression, a list of such predicates (it&amp;rsquo;s safe if any predicate succeeds), or &lt;code&gt;t&lt;/code&gt; (always safe provided the arguments are constant).</source>
          <target state="translated">式が関数呼び出しであり、関数に &lt;code&gt;safe-local-eval-function&lt;/code&gt; プロパティがある場合、プロパティ値によって、式が安全に評価できるかどうかが決まります。プロパティ値は、式をテストするために呼び出す述語、そのような述語のリスト（いずれかの述語が成功した場合は安全）、または &lt;code&gt;t&lt;/code&gt; （引数が定数であれば常に安全）にすることができます。</target>
        </trans-unit>
        <trans-unit id="246f0b794f5833994c3b4afba6bb00dea24847ff" translate="yes" xml:space="preserve">
          <source>If the feature is not present, then &lt;code&gt;require&lt;/code&gt; loads &lt;var&gt;filename&lt;/var&gt; with &lt;code&gt;load&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; is not supplied, then the name of the symbol &lt;var&gt;feature&lt;/var&gt; is used as the base file name to load. However, in this case, &lt;code&gt;require&lt;/code&gt; insists on finding &lt;var&gt;feature&lt;/var&gt; with an added &amp;lsquo;</source>
          <target state="translated">機能が存在しない場合は、load &lt;var&gt;filename&lt;/var&gt; と &lt;code&gt;load&lt;/code&gt; を &lt;code&gt;require&lt;/code&gt; します。 &lt;var&gt;filename&lt;/var&gt; が指定されていない場合は、シンボル &lt;var&gt;feature&lt;/var&gt; 名前がロードするベースファイル名として使用されます。ただし、この場合、「」が追加された &lt;var&gt;feature&lt;/var&gt; を見つけることを主張する &lt;code&gt;require&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b34ced467c1db9728611c7e825513efb68ab17e" translate="yes" xml:space="preserve">
          <source>If the file &lt;var&gt;filename&lt;/var&gt; is a symbolic link, this function does not follow it and instead returns its link target as a string. (The link target string is not necessarily the full absolute file name of the target; determining the full file name that the link points to is nontrivial, see below.)</source>
          <target state="translated">ファイル &lt;var&gt;filename&lt;/var&gt; がシンボリックリンクの場合、この関数はそれに従わず、代わりにリンクターゲットを文字列として返します。（リンクターゲット文字列は、必ずしもターゲットの完全な絶対ファイル名である必要はありません。リンクが指す完全なファイル名を決定することは重要です。以下を参照してください。）</target>
        </trans-unit>
        <trans-unit id="daa4cbc77776264f23c0b7180ce1cedea2df5b48" translate="yes" xml:space="preserve">
          <source>If the file &lt;var&gt;filename&lt;/var&gt; is not a symbolic link, or does not exist, or if there is trouble determining whether it is a symbolic link, &lt;code&gt;file-symlink-p&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">ファイル &lt;var&gt;filename&lt;/var&gt; がシンボリックリンクでないか、存在しない場合、またはシンボリックリンクであるかどうかを判断するのに問題がある場合、 &lt;code&gt;file-symlink-p&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9081835f33fcc13ee24a20a867687f9c01a96103" translate="yes" xml:space="preserve">
          <source>If the file does not exist, or if there was trouble determining whether the file exists, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">ファイルが存在しない場合、またはファイルが存在するかどうかの判別に問題があった場合、この関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6be3be1ef2fedd8fcb4152b1108b2cfb54d0fc98" translate="yes" xml:space="preserve">
          <source>If the file has a &amp;lsquo;</source>
          <target state="translated">ファイルに 'がある場合</target>
        </trans-unit>
        <trans-unit id="41388f1b4096e6fa4787336ec13211d44a826c00" translate="yes" xml:space="preserve">
          <source>If the first binding found is not a prefix definition (a keymap or a symbol defined as a keymap), all subsequent bindings from other minor modes are omitted, since they would be completely shadowed. Similarly, the list omits non-prefix bindings that follow prefix bindings.</source>
          <target state="translated">最初に見つかったバインディングがプレフィックス定義(キーマップやキーマップとして定義されたシンボル)でない場合、それに続く他のマイナーモードからのバインディングは、完全に影になってしまうため、すべて省略されます。同様に、プレフィックスバインディングに続くプレフィックス以外のバインディングもリストから除外されます。</target>
        </trans-unit>
        <trans-unit id="1269fe1c152616b5831220daaf4b88ca325ebbd9" translate="yes" xml:space="preserve">
          <source>If the first character of a &lt;code&gt;help-echo&lt;/code&gt; string has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; property, then it is displayed as-is by &lt;code&gt;show-help-function&lt;/code&gt;, without being passed through &lt;code&gt;substitute-command-keys&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;help-echo&lt;/code&gt; 文字列の最初の文字に &lt;code&gt;nil&lt;/code&gt; 以外の &lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; プロパティがある場合、 &lt;code&gt;substitute-command-keys&lt;/code&gt; を介さずに、 &lt;code&gt;show-help-function&lt;/code&gt; によってそのまま表示されます。</target>
        </trans-unit>
        <trans-unit id="0504a2b1bfe3f74f41527bbd85fbbaf1d767693d" translate="yes" xml:space="preserve">
          <source>If the first element of a list being evaluated is a Lisp function object, byte-code object or primitive function object, then that list is a &lt;em&gt;function call&lt;/em&gt;. For example, here is a call to the function &lt;code&gt;+&lt;/code&gt;:</source>
          <target state="translated">評価されるリストの最初の要素がLisp関数オブジェクト、バイトコードオブジェクト、またはプリミティブ関数オブジェクトである場合、そのリストは&lt;em&gt;関数呼び出し&lt;/em&gt;です。たとえば、これは関数 &lt;code&gt;+&lt;/code&gt; ：の呼び出しです。</target>
        </trans-unit>
        <trans-unit id="d4d3598834c24a7693a8fd21c29f55906c01fa05" translate="yes" xml:space="preserve">
          <source>If the first element of a list being evaluated is a macro object, then the list is a &lt;em&gt;macro call&lt;/em&gt;. When a macro call is evaluated, the elements of the rest of the list are &lt;em&gt;not&lt;/em&gt; initially evaluated. Instead, these elements themselves are used as the arguments of the macro. The macro definition computes a replacement form, called the &lt;em&gt;expansion&lt;/em&gt; of the macro, to be evaluated in place of the original form. The expansion may be any sort of form: a self-evaluating constant, a symbol, or a list. If the expansion is itself a macro call, this process of expansion repeats until some other sort of form results.</source>
          <target state="translated">評価されるリストの最初の要素がマクロオブジェクトである場合、リストは&lt;em&gt;マクロ呼び出し&lt;/em&gt;です。マクロ呼び出しが評価されるとき、リストの残りの要素は最初は評価され&lt;em&gt;ません&lt;/em&gt;。代わりに、これらの要素自体がマクロの引数として使用されます。マクロ定義は、元のフォームの代わりに評価される、マクロの&lt;em&gt;展開&lt;/em&gt;と呼ばれる置換フォームを計算します。展開は、自己評価定数、シンボル、またはリストなど、どのような形式でもかまいません。展開自体がマクロ呼び出しである場合、この展開プロセスは、他の種類のフォームが生成されるまで繰り返されます。</target>
        </trans-unit>
        <trans-unit id="6f7e00b69b17dbca10bf930ce17a6a8d2d2e1e94" translate="yes" xml:space="preserve">
          <source>If the first element of the list is a symbol then evaluation examines the symbol&amp;rsquo;s function cell, and uses its contents instead of the original symbol. If the contents are another symbol, this process, called &lt;em&gt;symbol function indirection&lt;/em&gt;, is repeated until it obtains a non-symbol. See &lt;a href=&quot;function-names#Function-Names&quot;&gt;Function Names&lt;/a&gt;, for more information about symbol function indirection.</source>
          <target state="translated">リストの最初の要素がシンボルである場合、評価はシンボルの関数セルを調べ、元のシンボルの代わりにその内容を使用します。内容が別のシンボルである場合、&lt;em&gt;シンボル関数の間接参照&lt;/em&gt;と呼ばれるこのプロセスは、非シンボルを取得するまで繰り返されます。シンボル関数の間接参照の詳細については、&lt;a href=&quot;function-names#Function-Names&quot;&gt;関数名を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ad92a627467e7834d807fa7b3dd6513ec66d6a69" translate="yes" xml:space="preserve">
          <source>If the flag has any other value, the completion function should return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">フラグに他の値がある場合、完了関数は &lt;code&gt;nil&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="4fb2ca720c18bb03a7cfb28e99d5e6859f339dce" translate="yes" xml:space="preserve">
          <source>If the forms in &lt;var&gt;body&lt;/var&gt; do not change the major mode in the output buffer, so that it is still Help mode at the end of their execution, then &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; makes this buffer read-only at the end, and also scans it for function and variable names to make them into clickable cross-references. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Docstring-hyperlinks&quot;&gt;Tips for Documentation Strings&lt;/a&gt;, in particular the item on hyperlinks in documentation strings, for more details.</source>
          <target state="translated">&lt;var&gt;body&lt;/var&gt; のフォームが出力バッファーのメジャーモードを変更せず、実行の終了時にヘルプモードのままである場合、 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; は、このバッファーを最後に読み取り専用にします。また、関数名と変数名をスキャンして、クリック可能な相互参照にします。詳細については、ドキュメント文字列の&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Docstring-hyperlinks&quot;&gt;ヒント&lt;/a&gt;、特にドキュメント文字列のハイパーリンクの項目を参照してください。</target>
        </trans-unit>
        <trans-unit id="34ae174f15000b5b4f1155077643095ccbcd1d70" translate="yes" xml:space="preserve">
          <source>If the fourth argument &lt;var&gt;stop-before&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, parsing stops when it comes to any character that starts a sexp. If &lt;var&gt;stop-comment&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, parsing stops after the start of an unnested comment. If &lt;var&gt;stop-comment&lt;/var&gt; is the symbol &lt;code&gt;syntax-table&lt;/code&gt;, parsing stops after the start of an unnested comment or a string, or after the end of an unnested comment or a string, whichever comes first.</source>
          <target state="translated">4番目の引数 &lt;var&gt;stop-before&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、sexpを開始する文字に関しては解析が停止します。 &lt;var&gt;stop-comment&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、ネストされていないコメントの開始後に解析が停止します。場合は &lt;var&gt;stop-comment&lt;/var&gt; シンボルである &lt;code&gt;syntax-table&lt;/code&gt; 、構文解析は、ネスト解除コメントや文字列の開始後、またはネスト解除コメントまたはいずれか早い方の文字列、終了後に停止します。</target>
        </trans-unit>
        <trans-unit id="dbfab4d630e281344c72bf5e9a98b187083a44b0" translate="yes" xml:space="preserve">
          <source>If the fourth element, &lt;var&gt;syntax-alist&lt;/var&gt;, is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list of cons cells of the form &lt;code&gt;(&lt;var&gt;char-or-string&lt;/var&gt;
. &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;. These are used to set up a syntax table for syntactic fontification; the resulting syntax table is stored in &lt;code&gt;font-lock-syntax-table&lt;/code&gt;. If &lt;var&gt;syntax-alist&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, syntactic fontification uses the syntax table returned by the &lt;code&gt;syntax-table&lt;/code&gt; function. See &lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;Syntax Table Functions&lt;/a&gt;.</source>
          <target state="translated">第4要素、場合 &lt;var&gt;syntax-alist&lt;/var&gt; 、非ある &lt;code&gt;nil&lt;/code&gt; 、それがフォームのコンス・セルのリストであるべきである &lt;code&gt;(&lt;var&gt;char-or-string&lt;/var&gt; . &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; 。これらは、構文フォント化のための構文テーブルを設定するために使用されます。結果の構文テーブルは &lt;code&gt;font-lock-syntax-table&lt;/code&gt; に格納されます。場合は &lt;var&gt;syntax-alist&lt;/var&gt; 省略されるかされて &lt;code&gt;nil&lt;/code&gt; を、構文上のフォント表示化はで返される構文テーブル使用 &lt;code&gt;syntax-table&lt;/code&gt; 機能を。&lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;構文テーブル関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ca26394f9acc0f72bb7c85a2233be0fd78bf02fd" translate="yes" xml:space="preserve">
          <source>If the frame from which &lt;var&gt;configuration&lt;/var&gt; was saved is dead, all this function does is to restore the value of the variable &lt;code&gt;minibuffer-scroll-window&lt;/code&gt; and to adjust the value returned by &lt;code&gt;minibuffer-selected-window&lt;/code&gt;. In this case, the function returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;configuration&lt;/var&gt; が保存されたフレームが停止している場合、この関数は、変数 &lt;code&gt;minibuffer-scroll-window&lt;/code&gt; の値を復元し、 &lt;code&gt;minibuffer-selected-window&lt;/code&gt; によって返される値を調整するだけです。この場合、関数は &lt;code&gt;nil&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;t&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="43e23c2c5c0fbaf03bfa45ab6610d5c3c070c4f5" translate="yes" xml:space="preserve">
          <source>If the frame name was specified explicitly when the frame was created, this parameter will be that name. If the frame wasn&amp;rsquo;t explicitly named, this parameter will be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">フレームの作成時にフレーム名が明示的に指定されている場合、このパラメーターはその名前になります。フレームに明示的に名前が付けられていない場合、このパラメーターは &lt;code&gt;nil&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b40b680f37eec91a65c8d822eaa97f36e3776ed1" translate="yes" xml:space="preserve">
          <source>If the function cell is void, the return value is &lt;code&gt;nil&lt;/code&gt;. To distinguish between a function cell that is void and one set to &lt;code&gt;nil&lt;/code&gt;, use &lt;code&gt;fboundp&lt;/code&gt; (see below).</source>
          <target state="translated">関数セルが無効の場合、戻り値は &lt;code&gt;nil&lt;/code&gt; です。voidの関数セルと &lt;code&gt;nil&lt;/code&gt; に設定された関数セルを区別するには、 &lt;code&gt;fboundp&lt;/code&gt; を使用します（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="b1124e09571d6a7b655a7b4df0e1722289f39b5b" translate="yes" xml:space="preserve">
          <source>If the function reads input itself, it can have the effect of altering the event that follows. For example, here&amp;rsquo;s how to define</source>
          <target state="translated">関数が入力自体を読み取る場合、後続のイベントを変更する効果があります。たとえば、定義する方法は次のとおりです</target>
        </trans-unit>
        <trans-unit id="b96a696d6b170dde1f2edcc76f25c109b66df8b6" translate="yes" xml:space="preserve">
          <source>If the height spec is a cons of the format shown, the numeric height is &lt;var&gt;ratio&lt;/var&gt; times the height of face &lt;var&gt;face&lt;/var&gt;. &lt;var&gt;ratio&lt;/var&gt; can be any type of number, or &lt;code&gt;nil&lt;/code&gt; which means a ratio of 1. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, it refers to the current face.</source>
          <target state="translated">高さの仕様が示されている形式の短所である場合、数値の高さは &lt;var&gt;ratio&lt;/var&gt; に面の高さを &lt;var&gt;face&lt;/var&gt; です。 &lt;var&gt;ratio&lt;/var&gt; 数値、または任意のタイプとすることができる &lt;code&gt;nil&lt;/code&gt; ならば1の比を意味する &lt;var&gt;face&lt;/var&gt; で &lt;code&gt;t&lt;/code&gt; は、それが現在の顔を指します。</target>
        </trans-unit>
        <trans-unit id="256c5fa77fea0edfc5bc4b36c843f4724d0484db" translate="yes" xml:space="preserve">
          <source>If the height spec is a cons of the format shown, the numeric height is &lt;var&gt;ratio&lt;/var&gt; times the height of the contents of the line.</source>
          <target state="translated">高さの仕様が示されている形式の短所である場合、数値の高さは &lt;var&gt;ratio&lt;/var&gt; に行の内容の高さを掛けたものです。</target>
        </trans-unit>
        <trans-unit id="d3170a24913f8e79e2fe1e2b1d247d7b1d093881" translate="yes" xml:space="preserve">
          <source>If the height spec is a float, &lt;var&gt;float&lt;/var&gt;, the numeric height value is &lt;var&gt;float&lt;/var&gt; times the frame&amp;rsquo;s default line height.</source>
          <target state="translated">高さの仕様がfloat、 &lt;var&gt;float&lt;/var&gt; の場合、高さの数値は &lt;var&gt;float&lt;/var&gt; にフレームのデフォルトの行の高さを掛けたものになります。</target>
        </trans-unit>
        <trans-unit id="360acc6136e529abcfe96a8d521d34c34dec43c2" translate="yes" xml:space="preserve">
          <source>If the height spec is a positive integer, the height value is that integer.</source>
          <target state="translated">高さの仕様が正の整数の場合、高さの値はその整数になります。</target>
        </trans-unit>
        <trans-unit id="98e412860a40fccd31b62cd34f4c1f036c5e60de" translate="yes" xml:space="preserve">
          <source>If the hook variable is buffer-local, the buffer-local variable will be used instead of the global variable. However, if the buffer-local variable contains the element &lt;code&gt;t&lt;/code&gt;, the global hook variable will be run as well.</source>
          <target state="translated">フック変数がbuffer-localの場合、グローバル変数の代わりにbuffer-local変数が使用されます。ただし、バッファローカル変数に要素 &lt;code&gt;t&lt;/code&gt; が含まれている場合は、グローバルフック変数も実行されます。</target>
        </trans-unit>
        <trans-unit id="9ce6481c7077ae75ab928e3ea2e9fe7899f54a10" translate="yes" xml:space="preserve">
          <source>If the hook variable&amp;rsquo;s name does not end with &amp;lsquo;</source>
          <target state="translated">フック変数の名前が 'で終わらない場合</target>
        </trans-unit>
        <trans-unit id="7194289d33f24df74509a84c551f2a7b847a6c3c" translate="yes" xml:space="preserve">
          <source>If the input method function calls &lt;code&gt;read-event&lt;/code&gt; or &lt;code&gt;read-key-sequence&lt;/code&gt;, it should bind &lt;code&gt;input-method-function&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; first, to prevent recursion.</source>
          <target state="translated">inputメソッド関数が &lt;code&gt;read-event&lt;/code&gt; または &lt;code&gt;read-key-sequence&lt;/code&gt; を呼び出す場合、再帰を防ぐために、最初に &lt;code&gt;input-method-function&lt;/code&gt; を &lt;code&gt;nil&lt;/code&gt; にバインドする必要があります。</target>
        </trans-unit>
        <trans-unit id="b92832948f818aa5efd59c2e9db8f1bbd9dfaf42" translate="yes" xml:space="preserve">
          <source>If the keyboard character value is in the range of 0 to 127, it can go in the string unchanged.</source>
          <target state="translated">キーボード文字の値が0~127の範囲内であれば、そのまま文字列の中に入ることができます。</target>
        </trans-unit>
        <trans-unit id="a78d52707568efb8cb99d72237791962edb1bb7d" translate="yes" xml:space="preserve">
          <source>If the last event came from a keyboard macro, the value is &lt;code&gt;macro&lt;/code&gt;.</source>
          <target state="translated">最後のイベントがキーボードマクロからのものである場合、値は &lt;code&gt;macro&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="db9de26b78dce76c9d7c2f665eaa2e2f3820a073" translate="yes" xml:space="preserve">
          <source>If the last line of the documentation string begins with the keyword &amp;lsquo;</source>
          <target state="translated">ドキュメント文字列の最後の行がキーワード 'で始まる場合</target>
        </trans-unit>
        <trans-unit id="29659fa361b130ec92b10faa358cc4b631fd3026" translate="yes" xml:space="preserve">
          <source>If the last redisplay of &lt;var&gt;window&lt;/var&gt; was preempted, and did not finish, Emacs does not know the position of the end of display in that window. In that case, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;window&lt;/var&gt; の最後の再表示が横取りされて終了しなかった場合、Emacsはそのウィンドウでの表示の終了位置を認識しません。その場合、この関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="593f83092bf8a9f2ef87711ac3044535d5c9c61a" translate="yes" xml:space="preserve">
          <source>If the last regular expression search found a match, this function returns the position of the start of the matching text or of a subexpression of it.</source>
          <target state="translated">最後の正規表現検索で一致した場合、この関数は、一致したテキストの開始位置またはその副式の位置を返します。</target>
        </trans-unit>
        <trans-unit id="a09d4605b1d9c1964692cc9c6b51d21e2e5fc180" translate="yes" xml:space="preserve">
          <source>If the last such operation was done against a string with &lt;code&gt;string-match&lt;/code&gt;, then you should pass the same string as the argument &lt;var&gt;in-string&lt;/var&gt;. After a buffer search or match, you should omit &lt;var&gt;in-string&lt;/var&gt; or pass &lt;code&gt;nil&lt;/code&gt; for it; but you should make sure that the current buffer when you call &lt;code&gt;match-string&lt;/code&gt; is the one in which you did the searching or matching. Failure to follow this advice will lead to incorrect results.</source>
          <target state="translated">このような最後の操作が &lt;code&gt;string-match&lt;/code&gt; の文字列に対して実行された場合は、文字列 &lt;var&gt;in-string&lt;/var&gt; の引数と同じ文字列を渡す必要があります。バッファ検索または一致後は、 &lt;var&gt;in-string&lt;/var&gt; を省略するか、 &lt;code&gt;nil&lt;/code&gt; を渡す必要があります。ただし、 &lt;code&gt;match-string&lt;/code&gt; を呼び出すときの現在のバッファーが、検索または照合を行ったバッファーであることを確認する必要があります。このアドバイスに従わないと、誤った結果につながります。</target>
        </trans-unit>
        <trans-unit id="e62a0d108f094251e8c76edc0426c34a0df15e77" translate="yes" xml:space="preserve">
          <source>If the length is not a multiple of 8, the printed representation shows extra elements, but these extras really make no difference. For instance, in the next example, the two bool-vectors are equal, because only the first 3 bits are used:</source>
          <target state="translated">長さが 8 の倍数でない場合、印刷された表現には余分な要素が表示されますが、これらの余分な要素は実際には何の違いもありません。例えば、次の例では、最初の3ビットだけが使用されているため、2つのbool-vectorは等しくなっています。</target>
        </trans-unit>
        <trans-unit id="e1a58687f298bfc5e14e06f12ac22bf3d01e6a0e" translate="yes" xml:space="preserve">
          <source>If the lower bound of a range is greater than its upper bound, the range is empty and represents no characters. Thus, &amp;lsquo;</source>
          <target state="translated">範囲の下限が上限よりも大きい場合、範囲は空であり、文字を表しません。したがって、 '</target>
        </trans-unit>
        <trans-unit id="23d26dae81faa69c7288d9d25473c5bab73ca975" translate="yes" xml:space="preserve">
          <source>If the macro is expanded just once, in compilation, then the object is constructed just once, during compilation. But in interpreted execution, the macro is expanded each time the macro call runs, and this means a new object is constructed each time.</source>
          <target state="translated">コンパイル中にマクロが一度だけ展開されると、コンパイル中に一度だけオブジェクトが構築されます。しかし、インタプリタ実行では、マクロ呼び出しが実行されるたびにマクロが展開され、その都度新しいオブジェクトが構築されることになります。</target>
        </trans-unit>
        <trans-unit id="bc125edda6b08303280445c68325d12ae377eac0" translate="yes" xml:space="preserve">
          <source>If the menu keymap contains a binding to a nested keymap, the nested keymap specifies a &lt;em&gt;submenu&lt;/em&gt;. There will be a menu item, labeled by the nested keymap&amp;rsquo;s item string, and clicking on this item automatically pops up the specified submenu. As a special exception, if the menu keymap contains a single nested keymap and no other menu items, the menu shows the contents of the nested keymap directly, not as a submenu.</source>
          <target state="translated">メニューキーマップにネストされたキーマップへのバインディングが含まれている場合、ネストされたキーマップは&lt;em&gt;サブメニューを&lt;/em&gt;指定します。ネストされたキーマップのアイテム文字列でラベル付けされたメニューアイテムがあり、このアイテムをクリックすると、指定されたサブメニューが自動的にポップアップ表示されます。特別な例外として、メニューキーマップにネストされたキーマップが1つ含まれ、他のメニュー項目が含まれていない場合、メニューには、サブメニューとしてではなく、ネストされたキーマップの内容が直接表示されます。</target>
        </trans-unit>
        <trans-unit id="4f7ebb7b6e6d5779c7c43bfe78217b03a694528d" translate="yes" xml:space="preserve">
          <source>If the minibuffer window is active, it is normally considered (so that this function returns &lt;code&gt;nil&lt;/code&gt;). However, if the optional argument &lt;var&gt;no-mini&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the minibuffer window is ignored even if active. The optional argument &lt;var&gt;all-frames&lt;/var&gt; has the same meaning as for &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">ミニバッファウィンドウがアクティブな場合、通常は考慮されます（したがって、この関数は &lt;code&gt;nil&lt;/code&gt; を返します）。ただし、オプションの引数 &lt;var&gt;no-mini&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、ミニバッファウィンドウはアクティブであっても無視されます。オプションの引数 &lt;var&gt;all-frames&lt;/var&gt; は、 &lt;code&gt;next-window&lt;/code&gt; の場合と同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="faf29a5efd78ebe45a2c9aa07cbed9ae9d00bde9" translate="yes" xml:space="preserve">
          <source>If the minor mode Abbrev mode is enabled, the buffer-local variable &lt;code&gt;abbrev-mode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and abbrevs are automatically expanded in the buffer. For the user-level commands for abbrevs, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Abbrevs.html#Abbrevs&quot;&gt;Abbrev Mode&lt;/a&gt; in</source>
          <target state="translated">マイナーモードの略語モードが有効になっている場合、バッファローカル変数 &lt;code&gt;abbrev-mode&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; 以外であり、略語はバッファ内で自動的に展開されます。略語のユーザーレベルのコマンドについては、の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Abbrevs.html#Abbrevs&quot;&gt;略語モード&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="de290dee00842dc125e13b1b3e24f4708ce7084f" translate="yes" xml:space="preserve">
          <source>If the mode command is called from Lisp (i.e., non-interactively), it should enable the mode if the argument is omitted or &lt;code&gt;nil&lt;/code&gt;; it should toggle the mode if the argument is the symbol &lt;code&gt;toggle&lt;/code&gt;; otherwise it should treat the argument in the same way as for an interactive call with a numeric prefix argument, as described above.</source>
          <target state="translated">modeコマンドがLispから呼び出された場合（つまり、非対話的に）、引数が省略されているか &lt;code&gt;nil&lt;/code&gt; の場合、モードを有効にする必要があります。引数がシンボル &lt;code&gt;toggle&lt;/code&gt; の場合、モードを切り替える必要があります。それ以外の場合は、上記のように、数値プレフィックス引数を使用した対話型呼び出しの場合と同じように引数を処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="bec430cf6e44ccde778d907c50c0e83848046d8c" translate="yes" xml:space="preserve">
          <source>If the mode handles a language that has a syntax for comments, it should set the variables that define the comment syntax. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Options-for-Comments.html#Options-for-Comments&quot;&gt;Options Controlling Comments&lt;/a&gt; in</source>
          <target state="translated">モードがコメントの構文を持つ言語を処理する場合、コメントの構文を定義する変数を設定する必要があります。&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Options-for-Comments.html#Options-for-Comments&quot;&gt;コメント&lt;/a&gt;を制御するオプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="766701d4c597749957ec20b1f96189d041bff034" translate="yes" xml:space="preserve">
          <source>If the multi-file package contains auxiliary data files (such as images), the package&amp;rsquo;s Lisp code can refer to these files via the variable &lt;code&gt;load-file-name&lt;/code&gt; (see &lt;a href=&quot;loading#Loading&quot;&gt;Loading&lt;/a&gt;). Here is an example:</source>
          <target state="translated">マルチファイルパッケージに補助データファイル（画像など）が含まれている場合、パッケージのLispコードは変数 &lt;code&gt;load-file-name&lt;/code&gt; を介してこれらのファイルを参照できます（&lt;a href=&quot;loading#Loading&quot;&gt;Loadingを&lt;/a&gt;参照）。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="d409ef26b553fc0018482eae4ed734f3c5c6a110" translate="yes" xml:space="preserve">
          <source>If the name of an item in the group starts with &lt;var&gt;prefix&lt;/var&gt;, and the customizable variable &lt;code&gt;custom-unlispify-remove-prefixes&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the item&amp;rsquo;s tag will omit &lt;var&gt;prefix&lt;/var&gt;. A group can have any number of prefixes.</source>
          <target state="translated">グループ内のアイテムの名前が &lt;var&gt;prefix&lt;/var&gt; で始まり、カスタマイズ可能な変数 &lt;code&gt;custom-unlispify-remove-prefixes&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、アイテムのタグは &lt;var&gt;prefix&lt;/var&gt; を省略します。グループには、任意の数のプレフィックスを付けることができます。</target>
        </trans-unit>
        <trans-unit id="70c90c2a423ece13756844b933ee2df670dd4b76" translate="yes" xml:space="preserve">
          <source>If the new auto-reverting is part of Emacs, you should mention it in the documentation string of &lt;code&gt;global-auto-revert-non-file-buffers&lt;/code&gt;.</source>
          <target state="translated">新しい自動復帰がEmacsの一部である場合は、 &lt;code&gt;global-auto-revert-non-file-buffers&lt;/code&gt; のドキュメント文字列にそのことを記載する必要があります。</target>
        </trans-unit>
        <trans-unit id="59618baebc74ea9b713a2434becf1bd9cef8f88b" translate="yes" xml:space="preserve">
          <source>If the object is a string, its text properties are copied into the output. The text properties of the &amp;lsquo;</source>
          <target state="translated">オブジェクトが文字列の場合、そのテキストプロパティが出力にコピーされます。'のテキストプロパティ</target>
        </trans-unit>
        <trans-unit id="bbf1c2ad722d60dcaedc7d580443b6a686265aa8" translate="yes" xml:space="preserve">
          <source>If the operating system doesn&amp;rsquo;t supply all the information necessary to compute the value, the unknown elements of the list are &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">オペレーティングシステムが値の計算に必要なすべての情報を提供しない場合、リストの不明な要素は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4134e96049215e44babeaf58a040a9486a384f27" translate="yes" xml:space="preserve">
          <source>If the option &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see below) is non-&lt;code&gt;nil&lt;/code&gt;, this function will try to resize the frame of &lt;var&gt;window&lt;/var&gt; to fit its contents by calling &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see below).</source>
          <target state="translated">オプション &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; （以下を参照）が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数は、 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; （以下を参照）を呼び出して、 &lt;var&gt;window&lt;/var&gt; のフレームをその内容に合うようにサイズ変更しようとします。</target>
        </trans-unit>
        <trans-unit id="7a1f7cafee4e439f83630c4e50184d68bca21388" translate="yes" xml:space="preserve">
          <source>If the option &lt;code&gt;load-prefer-newer&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then when searching suffixes, &lt;code&gt;load&lt;/code&gt; selects whichever version of a file (&amp;lsquo;</source>
          <target state="translated">オプション &lt;code&gt;load-prefer-newer&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、サフィックスを検索するときに、 &lt;code&gt;load&lt;/code&gt; はファイルのバージョンを選択します（ '</target>
        </trans-unit>
        <trans-unit id="6972526adbec033bedbd9f1472b039c3252b6c51" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;code&gt;keymaps&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a list of keymaps to search in. This argument is ignored if &lt;code&gt;position&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">オプションの引数の場合は &lt;code&gt;keymaps&lt;/code&gt; 非で &lt;code&gt;nil&lt;/code&gt; で、それはで検索するキーマップのリストを指定します。この引数は無視され &lt;code&gt;position&lt;/code&gt; 非で &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d13d6f2b54cc4e9294b60597b7417e40d2eac6e" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;absolute&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return edges relative to the native position of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. &lt;var&gt;absolute&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return coordinates relative to the origin (0, 0) of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s display. On non-graphical systems this argument has no effect.</source>
          <target state="translated">オプションの引数 &lt;var&gt;absolute&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、これは &lt;var&gt;window&lt;/var&gt; のフレームのネイティブ位置を基準にしたエッジを返すことを意味します。 &lt;var&gt;absolute&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; は、 &lt;var&gt;window&lt;/var&gt; の表示の原点（0、0）を基準にした座標を返すことを意味します。非グラフィカルシステムでは、この引数は効果がありません。</target>
        </trans-unit>
        <trans-unit id="942217ba0ceb902eab90c24638b8f068b8adc202" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;body&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return the edges corresponding to the total size of &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;body&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return the edges of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body (aka text area). If &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; must specify a live window.</source>
          <target state="translated">オプションの引数 &lt;var&gt;body&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、これは &lt;var&gt;window&lt;/var&gt; 合計サイズに対応するエッジを返すことを意味します。 &lt;var&gt;body&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; は、 &lt;var&gt;window&lt;/var&gt; の本体の端（別名テキスト領域）を返すことを意味します。 &lt;var&gt;body&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;var&gt;window&lt;/var&gt; はライブウィンドウを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="98a6a65e6e71ac598f7759ffc1aa4f0f17eb5099" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;check-timers&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then if no input is available, Emacs runs any timers which are ready. See &lt;a href=&quot;timers#Timers&quot;&gt;Timers&lt;/a&gt;.</source>
          <target state="translated">オプションの引数 &lt;var&gt;check-timers&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、入力が利用できない場合、Emacsは準備ができているタイマーを実行します。&lt;a href=&quot;timers#Timers&quot;&gt;タイマーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d8f788f6da02c6227cc5cf0441d2b91d40d5c360" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;discard-comments&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, any top-level comment is discarded. (This argument is obsolete and will be removed in future Emacs versions. To remove comments, use the &lt;code&gt;xml-remove-comments&lt;/code&gt; utility function on the data before you call the parsing function.)</source>
          <target state="translated">オプションの引数 &lt;var&gt;discard-comments&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、最上位のコメントはすべて破棄されます。 （この引数は廃止されており、将来のEmacsバージョンで削除される予定です。コメントを削除するには、解析関数を呼び出す前に、データに対して &lt;code&gt;xml-remove-comments&lt;/code&gt; ユーティリティ関数を使用してください。）</target>
        </trans-unit>
        <trans-unit id="b6ab51bf07649dfa9b96691b7fc43fbdf855ba00" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;first&lt;/var&gt; is an integer, it denotes the index (starting with 0) of the first line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s glyph matrix to be returned. Note that if &lt;var&gt;window&lt;/var&gt; has a header line, the line with index 0 is that header line. If &lt;var&gt;first&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the first line to be considered is determined by the value of the optional argument &lt;var&gt;body&lt;/var&gt;: If &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to start with the first line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body, skipping any header line, if present. Otherwise, this function will start with the first line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s glyph matrix, possibly the header line.</source>
          <target state="translated">オプションの引数 &lt;var&gt;first&lt;/var&gt; が整数の場合、返される &lt;var&gt;window&lt;/var&gt; のグリフ行列の最初の行のインデックス（0から始まる）を示します。 &lt;var&gt;window&lt;/var&gt; にヘッダー行がある場合、インデックス0の行がそのヘッダー行であることに注意してください。場合 &lt;var&gt;first&lt;/var&gt; である &lt;code&gt;nil&lt;/code&gt; 、考慮すべき最初の行は、オプション引数の値によって決定される &lt;var&gt;body&lt;/var&gt; ：場合 &lt;var&gt;body&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、この手段は、最初の行で開始する &lt;var&gt;window&lt;/var&gt; の本体は、存在する場合、任意のヘッダ行をスキップ。それ以外の場合、この関数は &lt;var&gt;window&lt;/var&gt; のグリフマトリックスの最初の行、場合によってはヘッダー行から始まります。</target>
        </trans-unit>
        <trans-unit id="2a8154d809b8ebbd9c4648ca1d0087a606bb47e2" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;fold-wildcards&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, consecutive wildcards in the XLFD are folded into one.</source>
          <target state="translated">オプションの引数 &lt;var&gt;fold-wildcards&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、XLFD内の連続するワイルドカードは1つに折りたたまれます。</target>
        </trans-unit>
        <trans-unit id="17803140fbecda3b457cb2f98fe20241b13198d0" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;force-same-window&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the selected window is not suitable for displaying the buffer, this function always signals an error when called non-interactively. In interactive use, if the selected window is a minibuffer window, this function will try to use some other window instead. If the selected window is strongly dedicated to its buffer, the option &lt;code&gt;switch-to-buffer-in-dedicated-window&lt;/code&gt; described next can be used to proceed.</source>
          <target state="translated">オプションの引数 &lt;var&gt;force-same-window&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外で、選択したウィンドウがバッファの表示に適していない場合、この関数は非対話的に呼び出されたときに常にエラーを通知します。インタラクティブな使用では、選択したウィンドウがミニバッファウィンドウの場合、この関数は代わりに他のウィンドウを使用しようとします。選択したウィンドウがそのバッファ専用である場合は、次に説明するオプションの &lt;code&gt;switch-to-buffer-in-dedicated-window&lt;/code&gt; を使用して続行できます。</target>
        </trans-unit>
        <trans-unit id="bf71899a17742651d2154bd40f20ac07da3c6d22" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;frame&lt;/var&gt; is specified, it returns the name of the font of &lt;var&gt;face&lt;/var&gt; for that frame. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the selected frame is used. In the latter case, if the optional third argument &lt;var&gt;character&lt;/var&gt; is supplied, it returns the font name used for &lt;var&gt;character&lt;/var&gt;.</source>
          <target state="translated">オプションの引数 &lt;var&gt;frame&lt;/var&gt; が指定されている場合、そのフレームの &lt;var&gt;face&lt;/var&gt; のフォントの名前を返します。場合 &lt;var&gt;frame&lt;/var&gt; 省略されるかされた &lt;code&gt;nil&lt;/code&gt; 、選択されたフレームが使用されます。後者の場合、オプションの3番目の引数 &lt;var&gt;character&lt;/var&gt; が指定されていると、 &lt;var&gt;character&lt;/var&gt; 使用されているフォント名が返されます。</target>
        </trans-unit>
        <trans-unit id="96eea2deb29fd0e9c6ac91753ac1f4c6f87dd7cb" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;frames&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this applies the font to the selected frame only. If &lt;var&gt;frames&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list of frames to act upon, or &lt;code&gt;t&lt;/code&gt; meaning all existing and all future graphical frames.</source>
          <target state="translated">オプションの引数 &lt;var&gt;frames&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、これは選択したフレームにのみフォントを適用します。 &lt;var&gt;frames&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、作用するフレームのリストであるか、 &lt;code&gt;t&lt;/code&gt; は既存および将来のすべてのグラフィカルフレームを意味します。</target>
        </trans-unit>
        <trans-unit id="66524ab75cc1a677566a8075645e69c22c49d84e" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;group&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function also checks that the file&amp;rsquo;s group would be unchanged.</source>
          <target state="translated">オプションの引数 &lt;var&gt;group&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数はファイルのグループが変更されないことも確認します。</target>
        </trans-unit>
        <trans-unit id="dc7b9b4167f6b13cb2f8aa1c39c6cc0cdb4b372d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;handle-mode&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then all this function does is return a symbol specifying the major mode, if the &amp;lsquo;</source>
          <target state="translated">オプションの引数 &lt;var&gt;handle-mode&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合、この関数が行うのは、メジャーモードを指定するシンボルを返すことだけです。</target>
        </trans-unit>
        <trans-unit id="efc9a5f2a0d3d044b40f95f8b635024abb54970f" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to return non-&lt;code&gt;nil&lt;/code&gt; if and only if &lt;var&gt;window&lt;/var&gt; is part of a horizontal combination.</source>
          <target state="translated">オプションの引数 &lt;var&gt;horizontal&lt;/var&gt; がnon- &lt;code&gt;nil&lt;/code&gt; の場合、これは、 &lt;var&gt;window&lt;/var&gt; がhorizo​​ntalの組み合わせの一部である場合にのみ、 &lt;code&gt;nil&lt;/code&gt; を返すことを意味します。</target>
        </trans-unit>
        <trans-unit id="83a9c8a93022a096b01708b60415f35cb89112fd" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;ignore&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it means to ignore minimum window sizes and fixed-size restrictions. If &lt;var&gt;ignore&lt;/var&gt; is &lt;code&gt;safe&lt;/code&gt;, this means windows can get as small as one line and/or two columns.</source>
          <target state="translated">オプションの引数 &lt;var&gt;ignore&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、最小ウィンドウサイズと固定サイズの制限を無視することを意味します。 &lt;var&gt;ignore&lt;/var&gt; も &lt;code&gt;safe&lt;/code&gt; 場合、これはウィンドウが1行または2列、あるいはその両方で小さくなる可能性があることを意味します。</target>
        </trans-unit>
        <trans-unit id="4f213acc0249fad89d41d85026c2365c2d829cc6" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;inhibit-capture-property&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;old-pos&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt; property of that name, then any field boundaries are ignored.</source>
          <target state="translated">オプションの引数の場合は &lt;var&gt;inhibit-capture-property&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; 、そして &lt;var&gt;old-pos&lt;/var&gt; 非がある &lt;code&gt;nil&lt;/code&gt; のその名前のプロパティを、その後、任意のフィールドの境界が無視されます。</target>
        </trans-unit>
        <trans-unit id="70a29817b0c4edcca5649ad869cb723c93bcbf44" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;keep-size&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this keeps the number of frame lines and columns fixed. (If non-&lt;code&gt;nil&lt;/code&gt;, the option &lt;code&gt;frame-inhibit-implied-resize&lt;/code&gt; described in the next section will override this.) If &lt;var&gt;keep-size&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (or with a prefix argument), it tries to keep the size of the display area of the current frame fixed by adjusting the number of lines and columns.</source>
          <target state="translated">オプションの引数 &lt;var&gt;keep-size&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、これによりフレームの行と列の数が固定されます。 （ &lt;code&gt;nil&lt;/code&gt; 以外の場合、次のセクションで説明 &lt;code&gt;frame-inhibit-implied-resize&lt;/code&gt; オプションframe-inhibit-implied-resizeがこれをオーバーライドします。） &lt;var&gt;keep-size&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合（またはプレフィックス引数付き）、ディスプレイのサイズを維持しようとします。行と列の数を調整することによって固定された現在のフレームの領域。</target>
        </trans-unit>
        <trans-unit id="de719d27f6f2cb678c19f026b7e92ec281747e6b" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;last&lt;/var&gt; is an integer, it denotes the index of the last line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s glyph matrix that shall be returned. If &lt;var&gt;last&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the last line to be considered is determined by the value of &lt;var&gt;body&lt;/var&gt;: If &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to use the last line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body, omitting &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s mode line, if present. Otherwise, this means to use the last line of &lt;var&gt;window&lt;/var&gt; which may be the mode line.</source>
          <target state="translated">オプションの引数 &lt;var&gt;last&lt;/var&gt; が整数の場合、返される &lt;var&gt;window&lt;/var&gt; のグリフマトリックスの最後の行のインデックスを示します。場合 &lt;var&gt;last&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 、考慮すべき最後の行は、の値によって決定される &lt;var&gt;body&lt;/var&gt; ：場合 &lt;var&gt;body&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、この手段は、最後の行を使用する &lt;var&gt;window&lt;/var&gt; の本体、省略 &lt;var&gt;window&lt;/var&gt; 「存在する場合、Sモードライン。それ以外の場合、これはモード行である可能性のある &lt;var&gt;window&lt;/var&gt; の最後の行を使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="12c83b7f9aace8c155bb219d0fd91503e17d0817" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;mini&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return the minibuffer window if and only if it is currently active. If &lt;var&gt;mini&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function may return the minibuffer window even when it&amp;rsquo;s not active. However, if &lt;var&gt;wrap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it always acts as if &lt;var&gt;mini&lt;/var&gt; were &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">オプションの引数 &lt;var&gt;mini&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、これは、ミニバッファウィンドウが現在アクティブである場合にのみ、ミニバッファウィンドウを返すことを意味します。 &lt;var&gt;mini&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数は、アクティブでない場合でもミニバッファウィンドウを返す場合があります。ただし、 &lt;var&gt;wrap&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;var&gt;mini&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; であるかのように常に機能します。</target>
        </trans-unit>
        <trans-unit id="5511462c9c4977d0cd83a29124933c790a0a0164" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;must-suffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;load&lt;/code&gt; insists that the file name used must end in either &amp;lsquo;</source>
          <target state="translated">オプションの引数 &lt;var&gt;must-suffix&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;load&lt;/code&gt; は、使用されるファイル名がいずれかの 'で終わる必要があることを要求します。</target>
        </trans-unit>
        <trans-unit id="6239f8f2206b6656204db08625818021608084ae" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;no-angles&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the angle brackets around function keys and event symbols are omitted; this is for compatibility with old versions of Emacs which didn&amp;rsquo;t use the brackets.</source>
          <target state="translated">オプションの引数 &lt;var&gt;no-angles&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、ファンクションキーとイベントシンボルを囲む山かっこは省略されます。これは、角かっこを使用しなかった古いバージョンのEmacsとの互換性のためです。</target>
        </trans-unit>
        <trans-unit id="541d4ba76979bfd5c88c5d5842f7e0fd1e0a1d50" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;no-pad&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then this function doesn&amp;rsquo;t generate the padding (&lt;code&gt;=&lt;/code&gt;).</source>
          <target state="translated">オプションの引数 &lt;var&gt;no-pad&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数はパディング（ &lt;code&gt;=&lt;/code&gt; ）を生成しません。</target>
        </trans-unit>
        <trans-unit id="f66a6b09ca7b976ee8eb89e6be2104be63ce1a76" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;no-pad&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then this function doesn&amp;rsquo;t generate the padding.</source>
          <target state="translated">オプションの引数 &lt;var&gt;no-pad&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数はパディングを生成しません。</target>
        </trans-unit>
        <trans-unit id="77d5b1707ea76a1dbdb066e84d247eab1870ba77" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;norecord&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function does not alter the list of most recently selected windows, nor the buffer list.</source>
          <target state="translated">オプションの引数 &lt;var&gt;norecord&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数は最近選択されたウィンドウのリストやバッファーリストを変更しません。</target>
        </trans-unit>
        <trans-unit id="a5326dfb605251ff6c0b5692abbc55c1aa47aa5e" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;nosuffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;load&lt;/code&gt; does not try the suffixes &amp;lsquo;</source>
          <target state="translated">オプションの引数の場合 &lt;var&gt;nosuffix&lt;/var&gt; が非で &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;load&lt;/code&gt; 「接尾辞を試していません</target>
        </trans-unit>
        <trans-unit id="a279dc204bfea65e494272f987280f42d5b4e3a8" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;old-name&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a file in the user&amp;rsquo;s home directory,</source>
          <target state="translated">オプションの引数 &lt;var&gt;old-name&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、ユーザーのホームディレクトリにあるファイルを指定します。</target>
        </trans-unit>
        <trans-unit id="b64c0af0469d5571e33c344081b577166c995bc0" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;only-in-line&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and constraining &lt;var&gt;new-pos&lt;/var&gt; in the usual way would move it to a different line, &lt;var&gt;new-pos&lt;/var&gt; is returned unconstrained. This used in commands that move by line, such as &lt;code&gt;next-line&lt;/code&gt; and &lt;code&gt;beginning-of-line&lt;/code&gt;, so that they respect field boundaries only in the case where they can still move to the right line.</source>
          <target state="translated">オプションの引数 &lt;var&gt;only-in-line&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外であり、通常の方法で &lt;var&gt;new-pos&lt;/var&gt; を制約すると別の行に移動する場合、 &lt;var&gt;new-pos&lt;/var&gt; は制約なしで返されます。これは、 &lt;code&gt;next-line&lt;/code&gt; や行の &lt;code&gt;beginning-of-line&lt;/code&gt; など、行ごとに移動するコマンドで使用されるため、正しい行に移動できる場合にのみフィールドの境界を尊重します。</target>
        </trans-unit>
        <trans-unit id="89a3540a2ddd227c3da7412945b6da99d10dfd7d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;only&lt;/var&gt; is &lt;code&gt;vertically&lt;/code&gt;, this function may resize the frame vertically only. If &lt;var&gt;only&lt;/var&gt; is &lt;code&gt;horizontally&lt;/code&gt;, it may resize the frame horizontally only.</source>
          <target state="translated">オプションの引数 &lt;var&gt;only&lt;/var&gt; が &lt;code&gt;vertically&lt;/code&gt; 場合、この関数はフレームのサイズを垂直方向にのみ変更できます。場合 &lt;var&gt;only&lt;/var&gt; ある &lt;code&gt;horizontally&lt;/code&gt; 、それは水平方向のみのフレームのサイズを変更することがあります。</target>
        </trans-unit>
        <trans-unit id="5a230cb235eaaab6d70d21c1cb8a38327fbdcb69" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return the coordinates in terms of the default character width and height of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;), rounded if necessary. &lt;var&gt;pixelwise&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return the coordinates in pixels. Note that the pixel specified by &lt;var&gt;right&lt;/var&gt; and &lt;var&gt;bottom&lt;/var&gt; is immediately outside of these edges. If &lt;var&gt;absolute&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;pixelwise&lt;/var&gt; is implicitly non-&lt;code&gt;nil&lt;/code&gt; too.</source>
          <target state="translated">オプションの引数が &lt;var&gt;pixelwise&lt;/var&gt; で &lt;code&gt;nil&lt;/code&gt; の場合、これは、 &lt;var&gt;window&lt;/var&gt; のフレームのデフォルトの文字幅と高さ（&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;フレームフォントを&lt;/a&gt;参照）で座標を返し、必要に応じて丸めることを意味します。 &lt;var&gt;pixelwise&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; ピクセルの座標を返すことを意味します。 &lt;var&gt;right&lt;/var&gt; と &lt;var&gt;bottom&lt;/var&gt; 指定されたピクセルは、これらのエッジのすぐ外側にあることに注意してください。 &lt;var&gt;absolute&lt;/var&gt; が非 &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;var&gt;pixelwise&lt;/var&gt; も暗黙的に非 &lt;code&gt;nil&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="67538d7d98419175426b128c36b0b3bebe8742df" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;delta&lt;/var&gt; is interpreted as pixels.</source>
          <target state="translated">オプションの引数 &lt;var&gt;pixelwise&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;var&gt;delta&lt;/var&gt; はピクセルとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="a9879bc9333880b25266af065a9218d798d982fc" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;delta&lt;/var&gt; will be interpreted as pixels.</source>
          <target state="translated">オプションの引数 &lt;var&gt;pixelwise&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;var&gt;delta&lt;/var&gt; はピクセルとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="e79461cf0df5f6b16759d099fcd618f8a17c7868" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns the body height of &lt;var&gt;window&lt;/var&gt; counted in pixels.</source>
          <target state="translated">オプションの引数 &lt;var&gt;pixelwise&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数はピクセル単位でカウントされた &lt;var&gt;window&lt;/var&gt; の本体の高さを返します。</target>
        </trans-unit>
        <trans-unit id="88be3cbbdc085160c9724bd37eb18c5ece2bd9f1" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns the body width of &lt;var&gt;window&lt;/var&gt; in units of pixels.</source>
          <target state="translated">オプションの引数 &lt;var&gt;pixelwise&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数は &lt;var&gt;window&lt;/var&gt; の本体幅をピクセル単位で返します。</target>
        </trans-unit>
        <trans-unit id="e2f9666d74b1c2d8541a5e786737c4a527467fd1" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;preserve-permissions&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function copies the file modes (or &amp;ldquo;permissions&amp;rdquo;) of &lt;var&gt;oldname&lt;/var&gt; to &lt;var&gt;newname&lt;/var&gt;, as well as the Access Control List and SELinux context (if any). See &lt;a href=&quot;information-about-files#Information-about-Files&quot;&gt;Information about Files&lt;/a&gt;.</source>
          <target state="translated">オプションの引数場合は &lt;var&gt;preserve-permissions&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; で、この機能をコピーファイルモード（または「アクセス権」）の &lt;var&gt;oldname&lt;/var&gt; に &lt;var&gt;newname&lt;/var&gt; のと同様に、アクセス制御リストとSELinuxコンテキスト（もしあれば）。&lt;a href=&quot;information-about-files#Information-about-Files&quot;&gt;ファイルに関する情報を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="029a3d44d3a297af4af150ff61d208892d560bbb" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;preserve-size&lt;/var&gt; of that function (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;) is non-&lt;code&gt;nil&lt;/code&gt;, the size established by that function is preserved.</source>
          <target state="translated">その関数のオプションの引数 &lt;var&gt;preserve-size&lt;/var&gt; （&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Windowsのサイズ変更を&lt;/a&gt;参照）が &lt;code&gt;nil&lt;/code&gt; 以外の場合、その関数によって確立されたサイズが保持されます。</target>
        </trans-unit>
        <trans-unit id="6e6bbdaef60dada357717568596197154dd7321c" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;preserve&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this means to preserve the current height/width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body. The height/width of &lt;var&gt;window&lt;/var&gt; will change only if Emacs has no better choice. Resizing a window whose height/width is preserved by this function never throws an error.</source>
          <target state="translated">オプションの引数 &lt;var&gt;preserve&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合、これは &lt;var&gt;window&lt;/var&gt; の本体の現在の高さ/幅を保持することを意味します。 &lt;var&gt;window&lt;/var&gt; の高さ/幅は、Emacsにこれ以上の選択肢がない場合にのみ変更されます。この関数によって高さ/幅が保持されているウィンドウのサイズを変更しても、エラーがスローされることはありません。</target>
        </trans-unit>
        <trans-unit id="89f5f499a676e24ccca2ae80726f4f232f2be90d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;prompt&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string to display in the echo area as a prompt. If &lt;var&gt;prompt&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or the string &amp;lsquo;</source>
          <target state="translated">オプションの引数 &lt;var&gt;prompt&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、エコー領域にプロンプ​​トとして表示する文字列である必要があります。 &lt;var&gt;prompt&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; または文字列の場合'</target>
        </trans-unit>
        <trans-unit id="d01db317320d26ca3e4ad5d1baa6aead22560513" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;rawfile&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;after-find-file&lt;/code&gt; is not called, and the &lt;code&gt;find-file-not-found-functions&lt;/code&gt; are not run in case of failure. What&amp;rsquo;s more, a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;rawfile&lt;/var&gt; value suppresses coding system conversion and format conversion.</source>
          <target state="translated">オプションの引数は、場合 &lt;var&gt;rawfile&lt;/var&gt; 以外で &lt;code&gt;nil&lt;/code&gt; 、その後、 &lt;code&gt;after-find-file&lt;/code&gt; 呼び出されず、かつ &lt;code&gt;find-file-not-found-functions&lt;/code&gt; 失敗した場合に実行されません。さらに、 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;rawfile&lt;/var&gt; 値は、コーディングシステムの変換とフォーマットの変換を抑制します。</target>
        </trans-unit>
        <trans-unit id="9dee660bbd61d9d3eb4ff8e4b9583cdaa1d22789" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;really-word&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it finds a word; otherwise, it finds a symbol (which includes both word characters and symbol constituent characters).</source>
          <target state="translated">オプションの引数 &lt;var&gt;really-word&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、単語が検索されます。それ以外の場合は、記号（単語文字と記号構成文字の両方を含む）を検索します。</target>
        </trans-unit>
        <trans-unit id="cb6c903ec4ea9d4de23615c3a0c722139cb94b36" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;remember-pos&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function looks for the &lt;var&gt;id&lt;/var&gt; element on the current line, if any, and tries to move to that entry after all the entries are (re)inserted.</source>
          <target state="translated">オプションの引数 &lt;var&gt;remember-pos&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数は現在の行の &lt;var&gt;id&lt;/var&gt; 要素を探し、すべてのエントリが（再）挿入された後、そのエントリに移動しようとします。</target>
        </trans-unit>
        <trans-unit id="c50ccd8c5be45306369670ca97b8346a0508bffa" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;round&lt;/var&gt; is &lt;code&gt;ceiling&lt;/code&gt;, this function returns the smallest integer larger than &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s pixel height divided by the character height of its frame; if it is &lt;code&gt;floor&lt;/code&gt;, it returns the largest integer smaller than said value; with any other &lt;var&gt;round&lt;/var&gt; it returns the internal value of &lt;var&gt;windows&lt;/var&gt;&amp;rsquo;s total height.</source>
          <target state="translated">オプションの引数 &lt;var&gt;round&lt;/var&gt; が &lt;code&gt;ceiling&lt;/code&gt; の場合、この関数は、 &lt;var&gt;window&lt;/var&gt; のピクセルの高さをフレームの文字の高さで割った値よりも大きい最小の整数を返します。 &lt;code&gt;floor&lt;/code&gt; 場合、上記の値よりも小さい最大の整数を返します。他の &lt;var&gt;round&lt;/var&gt; では、 &lt;var&gt;windows&lt;/var&gt; の全高の内部値を返します。</target>
        </trans-unit>
        <trans-unit id="5c0338135cc80796e1eb8d151c1e9949aeae7c3d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;sign&lt;/var&gt; is a negative number, it means to use the right or bottom edge of &lt;var&gt;window&lt;/var&gt; as reference position instead of &lt;code&gt;window-point&lt;/code&gt;. If &lt;var&gt;sign&lt;/var&gt; is a positive number, it means to use the left or top edge of &lt;var&gt;window&lt;/var&gt; as reference position.</source>
          <target state="translated">オプションの引数の場合は &lt;var&gt;sign&lt;/var&gt; 負の数であり、それは右または下縁を使用することを意味 &lt;var&gt;window&lt;/var&gt; 代わりに基準位置として &lt;code&gt;window-point&lt;/code&gt; 。 &lt;var&gt;sign&lt;/var&gt; が正の数の場合、 &lt;var&gt;window&lt;/var&gt; 左端または上端を参照位置として使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="2e74dce35aeb60451a6f89698126e1e40b28805c" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;strict&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then point must be in or next to the symbol or word&amp;mdash;if no symbol or word is there, the function returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, a nearby symbol or word on the same line is acceptable.</source>
          <target state="translated">オプションの引数 &lt;var&gt;strict&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、pointは記号または単語の中または隣にある必要があります。記号または単語がない場合、関数は &lt;code&gt;nil&lt;/code&gt; を返します。それ以外の場合は、同じ行にある近くの記号または単語を使用できます。</target>
        </trans-unit>
        <trans-unit id="85a078037bb47ea6da257269962f893fa95d36c4" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;substitute&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, Emacs calls the function &lt;code&gt;substitute-env-vars&lt;/code&gt; to expand any environment variables in &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">オプションの引数 &lt;var&gt;substitute&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、Emacsは関数 &lt;code&gt;substitute-env-vars&lt;/code&gt; を呼び出して、 &lt;var&gt;value&lt;/var&gt; 内の環境変数を展開します。</target>
        </trans-unit>
        <trans-unit id="048f128e5ceb4df9f865a4f7389308d38bf4767b" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;switch-buffer&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and completion is performed in the minibuffer, &lt;var&gt;function&lt;/var&gt; will be called with current buffer set to the buffer from which the minibuffer was entered.</source>
          <target state="translated">オプションの引数 &lt;var&gt;switch-buffer&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外で、ミニバッファーで完了が実行される場合、 &lt;var&gt;function&lt;/var&gt; は、現在のバッファーがミニバッファーが入力されたバッファーに設定された状態で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="08a4dd17345e143aedf66d1ce0a83721748bf1e6" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;trash&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the variable &lt;code&gt;delete-by-moving-to-trash&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this command moves the file into the system Trash instead of deleting it. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Misc-File-Ops.html#Misc-File-Ops&quot;&gt;Miscellaneous File Operations&lt;/a&gt; in</source>
          <target state="translated">オプションの引数 &lt;var&gt;trash&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;delete-by-moving-to-trash&lt;/code&gt; nilで、変数delete-by-moving-to-trashがnon - &lt;code&gt;nil&lt;/code&gt; の場合、このコマンドはファイルを削除するのではなく、システムのゴミ箱に移動します。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Misc-File-Ops.html#Misc-File-Ops&quot;&gt;その他のファイル操作&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="4c7d233a39cdc40ae2a87dce42cf20848095fce5" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;trim&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a regular expression to match text to trim from the beginning and end of each substring. If trimming makes the substring empty, it is treated as null.</source>
          <target state="translated">オプションの引数 &lt;var&gt;trim&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、各部分文字列の最初と最後からトリミングするテキストに一致する正規表現である必要があります。トリミングによって部分文字列が空になる場合、それはnullとして扱われます。</target>
        </trans-unit>
        <trans-unit id="0474de3e3cfb36597aeb20e585cfaab243a75642" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;update&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function will only erase or add entries that have changed since the last print. This is several times faster if most entries haven&amp;rsquo;t changed since the last time this function was called. The only difference in outcome is that tags placed via &lt;code&gt;tabulated-list-put-tag&lt;/code&gt; will not be removed from entries that haven&amp;rsquo;t changed (normally all tags are removed).</source>
          <target state="translated">オプションの引数 &lt;var&gt;update&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、この関数は最後の印刷以降に変更されたエントリのみを消去または追加します。この関数が最後に呼び出されてからほとんどのエントリが変更されていない場合、これは数倍高速です。結果の唯一の違いは、 &lt;code&gt;tabulated-list-put-tag&lt;/code&gt; を介して配置されたタグが、変更されていないエントリから削除されないことです（通常、すべてのタグが削除されます）。</target>
        </trans-unit>
        <trans-unit id="34ef184b831e0c920b50c5c6e19e0c8ea037c0fc" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;wrap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to wrap &lt;var&gt;direction&lt;/var&gt; around frame borders. For example, if &lt;var&gt;window&lt;/var&gt; is at the top of the frame and &lt;var&gt;direction&lt;/var&gt; is &lt;code&gt;above&lt;/code&gt;, then this function usually returns the frame&amp;rsquo;s minibuffer window if it&amp;rsquo;s active and a window at the bottom of the frame otherwise.</source>
          <target state="translated">オプションの引数 &lt;var&gt;wrap&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、これはフレームの境界の周りに &lt;var&gt;direction&lt;/var&gt; を折り返すことを意味します。たとえば、 &lt;var&gt;window&lt;/var&gt; がフレームの上部にあり、 &lt;var&gt;direction&lt;/var&gt; が &lt;code&gt;above&lt;/code&gt; 場合、この関数は通常、フレームがアクティブな場合はフレームのミニバッファウィンドウを返し、そうでない場合はフレームの下部にあるウィンドウを返します。</target>
        </trans-unit>
        <trans-unit id="8549d0f21d86c989d10e25c901126fd388809096" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;writable&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to not use markers for sampling positions like &lt;code&gt;window-point&lt;/code&gt; or &lt;code&gt;window-start&lt;/code&gt;. This argument should be non-&lt;code&gt;nil&lt;/code&gt; when the state will be written to disk and read back in another session.</source>
          <target state="translated">&lt;var&gt;writable&lt;/var&gt; オプションの引数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、これは、 &lt;code&gt;window-point&lt;/code&gt; や &lt;code&gt;window-start&lt;/code&gt; などのサンプリング位置にマーカーを使用しないことを意味します。状態がディスクに書き込まれ、別のセッションで読み戻される場合、この引数は &lt;code&gt;nil&lt;/code&gt; 以外である必要があります。</target>
        </trans-unit>
        <trans-unit id="ceb05d9193a1bc7f982112320813187e1c1876a3" translate="yes" xml:space="preserve">
          <source>If the optional arguments &lt;var&gt;reference-face&lt;/var&gt; and &lt;var&gt;frame&lt;/var&gt; are specified, the returned list includes only fonts that are the same size as &lt;var&gt;reference-face&lt;/var&gt; (a face name) currently is on the frame &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">オプションの引数 &lt;var&gt;reference-face&lt;/var&gt; および &lt;var&gt;frame&lt;/var&gt; が指定されている場合、返されるリストには、現在フレーム &lt;var&gt;frame&lt;/var&gt; &lt;var&gt;reference-face&lt;/var&gt; （面名）と同じサイズのフォントのみが含まれます。</target>
        </trans-unit>
        <trans-unit id="5277a2e4b2715d42fd68e395b8ef7fb55afa51fe" translate="yes" xml:space="preserve">
          <source>If the optional second argument &lt;var&gt;do-not-move&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;current-kill&lt;/code&gt; doesn&amp;rsquo;t alter the yanking pointer; it just returns the &lt;var&gt;n&lt;/var&gt;th kill, counting from the current yanking pointer.</source>
          <target state="translated">オプションの2番目の引数 &lt;var&gt;do-not-move&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;current-kill&lt;/code&gt; はヤンクポインタを変更しません。現在のヤンクポインタから数えて、 &lt;var&gt;n&lt;/var&gt; 番目のキルを返すだけです。</target>
        </trans-unit>
        <trans-unit id="0e51c40bdf5065b39b31e97f01fc136cf2c272d7" translate="yes" xml:space="preserve">
          <source>If the optional second argument &lt;var&gt;ignore&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string, a potential buffer name. It means to consider that potential buffer acceptable, if it is tried, even it is the name of an existing buffer (which would normally be rejected). Thus, if buffers named &amp;lsquo;</source>
          <target state="translated">オプションの2番目の引数 &lt;var&gt;ignore&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、文字列、潜在的なバッファ名である必要があります。これは、潜在的なバッファが試行された場合、それが既存のバッファの名前であっても（通常は拒否されます）、許容できると見なすことを意味します。したがって、 'という名前のバッファの場合</target>
        </trans-unit>
        <trans-unit id="21b56a00ec159b94529bf7aadfc94d111c5699b4" translate="yes" xml:space="preserve">
          <source>If the paragraph has as yet only one line, the function tests the validity of the prefix candidate just found. The function then returns the candidate if it&amp;rsquo;s valid, or a string of spaces otherwise. (see the description of &lt;code&gt;adaptive-fill-first-line-regexp&lt;/code&gt; below).</source>
          <target state="translated">段落にまだ1行しかない場合、関数は見つかったプレフィックス候補の有効性をテストします。次に、関数は、有効な場合は候補を返し、そうでない場合はスペースの文字列を返します。（以下の &lt;code&gt;adaptive-fill-first-line-regexp&lt;/code&gt; の説明を参照してください）。</target>
        </trans-unit>
        <trans-unit id="dfd81ad0f84ba2b0164d9238eabfac5d9cb05431" translate="yes" xml:space="preserve">
          <source>If the parameter&amp;rsquo;s value is a symbol, it specifies a number through the value of &lt;code&gt;tty-color-mode-alist&lt;/code&gt;, and the associated number is used instead.</source>
          <target state="translated">パラメータの値がシンボルの場合、 &lt;code&gt;tty-color-mode-alist&lt;/code&gt; の値を介して数値を指定し、代わりに関連する数値が使用されます。</target>
        </trans-unit>
        <trans-unit id="9893303f7ed34f18f99bb475aaec259e0d2ecbf2" translate="yes" xml:space="preserve">
          <source>If the part of &lt;var&gt;filename&lt;/var&gt; before the first slash is &amp;lsquo;</source>
          <target state="translated">最初のスラッシュの前の &lt;var&gt;filename&lt;/var&gt; の部分が 'の場合</target>
        </trans-unit>
        <trans-unit id="5f22cf6536ccc005c13385137d89081d1dc837e2" translate="yes" xml:space="preserve">
          <source>If the predicate is neither &lt;code&gt;t&lt;/code&gt; nor &lt;code&gt;nil&lt;/code&gt;, then it should be a function of no arguments. It will be called in each buffer to decide whether to offer to save that buffer. If it returns a non-&lt;code&gt;nil&lt;/code&gt; value in a certain buffer, that means do offer to save that buffer.</source>
          <target state="translated">述語が &lt;code&gt;t&lt;/code&gt; でも &lt;code&gt;nil&lt;/code&gt; でもない場合、それは引数なしの関数である必要があります。各バッファで呼び出され、そのバッファを保存するかどうかを決定します。特定のバッファで &lt;code&gt;nil&lt;/code&gt; 以外の値を返す場合、それはそのバッファを保存することを提案することを意味します。</target>
        </trans-unit>
        <trans-unit id="650d2ded902ef2d668e84d6c2d0f41e02a33671b" translate="yes" xml:space="preserve">
          <source>If the prefix key ends with a mouse event, Emacs handles the menu keymap by popping up a visible menu, so that the user can select a choice with the mouse. When the user clicks on a menu item, the event generated is whatever character or symbol has the binding that brought about that menu item. (A menu item may generate a series of events if the menu has multiple levels or comes from the menu bar.)</source>
          <target state="translated">接頭辞キーがマウスイベントで終わる場合、Emacs はメニューキーマップを処理して、ユーザーがマウスで選択できるように、目に見えるメニューをポップアップさせます。ユーザがメニュー項目をクリックすると、そのメニュー項目をもたらしたバインディングを持つ文字や記号のイベントが生成されます (1 つのメニュー項目が一連のイベントを生成することもあります)。(メニューが複数のレベルを持っていたり、メニューバーから来ている場合は、メニュー項目は一連のイベントを生成することができます)。</target>
        </trans-unit>
        <trans-unit id="57227ce473189ca647671661a371ca4ff2aa3d17" translate="yes" xml:space="preserve">
          <source>If the previous nonblank line has no indent points beyond the current column, this command does nothing.</source>
          <target state="translated">前の非空白行が現在の列を越えてインデントポイントを持たない場合、このコマンドは何もしません。</target>
        </trans-unit>
        <trans-unit id="3ff12eb1a5dce92c245dde7c64a07f76dd4a443b" translate="yes" xml:space="preserve">
          <source>If the previous nonblank line has no next indent point (i.e., none at a great enough column position), &lt;code&gt;indent-relative&lt;/code&gt; either does nothing (if &lt;var&gt;unindented-ok&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;) or calls &lt;code&gt;tab-to-tab-stop&lt;/code&gt;. Thus, if point is underneath and to the right of the last column of a short line of text, this command ordinarily moves point to the next tab stop by inserting whitespace.</source>
          <target state="translated">前の非空白行に次のインデントポイントがない場合（つまり、十分な列位置にない場合）、 &lt;code&gt;indent-relative&lt;/code&gt; は何もしないか（ &lt;var&gt;unindented-ok&lt;/var&gt; がnon- &lt;code&gt;nil&lt;/code&gt; の場合）、 &lt;code&gt;tab-to-tab-stop&lt;/code&gt; を呼び出します。したがって、ポイントが短いテキスト行の最後の列の下および右にある場合、このコマンドは通常、空白を挿入してポイントを次のタブストップに移動します。</target>
        </trans-unit>
        <trans-unit id="f4da0c6d9b4449d476585ee23e7db4cf7ce32c0b" translate="yes" xml:space="preserve">
          <source>If the problem is not simply an imbalance of parentheses, a useful technique is to try</source>
          <target state="translated">問題が単に括弧の不均衡ではない場合は、次のようなテクニックを試してみましょう。</target>
        </trans-unit>
        <trans-unit id="db8ed5464e72b8c476ff4ec16a10f0cd51524277" translate="yes" xml:space="preserve">
          <source>If the process has the &lt;code&gt;adjust-window-size-function&lt;/code&gt; property (see &lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;), its value overrides the global and buffer-local values of &lt;code&gt;window-adjust-process-window-size-function&lt;/code&gt;.</source>
          <target state="translated">プロセスに &lt;code&gt;adjust-window-size-function&lt;/code&gt; プロパティがある場合（&lt;a href=&quot;process-information#Process-Information&quot;&gt;プロセス情報を&lt;/a&gt;参照）、その値は &lt;code&gt;window-adjust-process-window-size-function&lt;/code&gt; のグローバル値とバッファローカル値を上書きします。</target>
        </trans-unit>
        <trans-unit id="deb072058be162ae286bf0b45dcb8683abfed0a3" translate="yes" xml:space="preserve">
          <source>If the process object represents a network, serial, or pipe connection, its status changes to &lt;code&gt;closed&lt;/code&gt;; otherwise, it changes to &lt;code&gt;signal&lt;/code&gt;, unless the process already exited. See &lt;a href=&quot;process-information#Process-Information&quot;&gt;process-status&lt;/a&gt;.</source>
          <target state="translated">プロセスオブジェクトがネットワーク、シリアル、またはパイプ接続を表す場合、そのステータスは &lt;code&gt;closed&lt;/code&gt; 変わります。それ以外の場合は、プロセスがすでに終了していない限り、 &lt;code&gt;signal&lt;/code&gt; に変わります。&lt;a href=&quot;process-information#Process-Information&quot;&gt;process-statusを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="45961f038e011d9c685fb46da83bdbfb5b85f171" translate="yes" xml:space="preserve">
          <source>If the process&amp;rsquo;s buffer is displayed in a window, your Lisp program may wish to tell the process the dimensions of that window, so that the process could adapt its output to those dimensions, much as it adapts to the screen dimensions. The following functions allow communicating this kind of information to processes; however, not all systems support the underlying functionality, so it is best to provide fallbacks, e.g., via command-line arguments or environment variables.</source>
          <target state="translated">プロセスのバッファがウィンドウに表示されている場合、Lispプログラムはプロセスにそのウィンドウのサイズを通知して、プロセスが画面のサイズに適応するのと同じように、出力をそれらのサイズに適応できるようにします。次の関数を使用すると、この種の情報をプロセスに伝達できます。ただし、すべてのシステムが基盤となる機能をサポートしているわけではないため、コマンドライン引数や環境変数などを介してフォールバックを提供するのが最善です。</target>
        </trans-unit>
        <trans-unit id="8cd7170a08590da16f5decc34d06ab10bce6a4b0" translate="yes" xml:space="preserve">
          <source>If the property is &lt;code&gt;nil&lt;/code&gt;, the character&amp;rsquo;s syntax is determined from the current syntax table in the usual way.</source>
          <target state="translated">プロパティが &lt;code&gt;nil&lt;/code&gt; の場合、文字の構文は通常の方法で現在の構文テーブルから決定されます。</target>
        </trans-unit>
        <trans-unit id="a8ff877c231716bcd85163a925d07773b1cd1a3a" translate="yes" xml:space="preserve">
          <source>If the property value is &lt;code&gt;t&lt;/code&gt;, the newline character has no effect on the displayed height of the line&amp;mdash;the visible contents alone determine the height. The &lt;code&gt;line-spacing&lt;/code&gt; property, described below, is also ignored in this case. This is useful for tiling small images (or image slices) without adding blank areas between the images.</source>
          <target state="translated">プロパティ値が &lt;code&gt;t&lt;/code&gt; の場合、改行文字は表示される行の高さに影響を与えません。表示されるコンテンツだけが高さを決定します。 &lt;code&gt;line-spacing&lt;/code&gt; 、後述のプロパティが、この場合にも無視されます。これは、画像間に空白領域を追加せずに小さな画像（または画像スライス）を並べて表示する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="9332afdec02fd82c547da6eae33cd85f1c4398ad" translate="yes" xml:space="preserve">
          <source>If the property value is a list of the form &lt;code&gt;(&lt;var&gt;height&lt;/var&gt;
&lt;var&gt;total&lt;/var&gt;)&lt;/code&gt;, that adds extra space &lt;em&gt;below&lt;/em&gt; the display line. First Emacs uses &lt;var&gt;height&lt;/var&gt; as a height spec to control extra space &lt;em&gt;above&lt;/em&gt; the line; then it adds enough space &lt;em&gt;below&lt;/em&gt; the line to bring the total line height up to &lt;var&gt;total&lt;/var&gt;. In this case, any value of &lt;code&gt;line-spacing&lt;/code&gt; property for the newline is ignored.</source>
          <target state="translated">プロパティ値がフォーム &lt;code&gt;(&lt;var&gt;height&lt;/var&gt; &lt;var&gt;total&lt;/var&gt;)&lt;/code&gt; リストである場合、表示行の&lt;em&gt;下に&lt;/em&gt;余分なスペースが追加されます。まずEmacsは使用する &lt;var&gt;height&lt;/var&gt; 余分なスペースを制御するために高スペックとして&lt;em&gt;、上記&lt;/em&gt;ライン。次に、線の&lt;em&gt;下に&lt;/em&gt;十分なスペースを追加して、線の高さの &lt;var&gt;total&lt;/var&gt; を合計にします。この場合、改行の &lt;code&gt;line-spacing&lt;/code&gt; プロパティの値はすべて無視されます。</target>
        </trans-unit>
        <trans-unit id="d11de86d9df45640319ada9503f7c6f26a6b6d39" translate="yes" xml:space="preserve">
          <source>If the property value is a syntax table, that table is used instead of the current buffer&amp;rsquo;s syntax table to determine the syntax for the underlying text character.</source>
          <target state="translated">プロパティ値が構文テーブルの場合、基になるテキスト文字の構文を決定するために、現在のバッファーの構文テーブルの代わりにそのテーブルが使用されます。</target>
        </trans-unit>
        <trans-unit id="864eb49d276a3277ab58bccd89b45a4672ea219c" translate="yes" xml:space="preserve">
          <source>If the property value isn&amp;rsquo;t &lt;code&gt;nil&lt;/code&gt;, isn&amp;rsquo;t a string, and doesn&amp;rsquo;t refer to text in a file, then it is evaluated as a Lisp expression to obtain a string.</source>
          <target state="translated">プロパティ値が &lt;code&gt;nil&lt;/code&gt; でなく、文字列でなく、ファイル内のテキストを参照していない場合、文字列を取得するためにLisp式として評価されます。</target>
        </trans-unit>
        <trans-unit id="38f97111526e39821c2939de43b1aba8774177fb" translate="yes" xml:space="preserve">
          <source>If the property value refers to a documentation string stored in the</source>
          <target state="translated">プロパティ値が</target>
        </trans-unit>
        <trans-unit id="6ac707385120af438b707d6888f43c296b9d96b5" translate="yes" xml:space="preserve">
          <source>If the reference window is internal, a reused window must share with it the edge specified by the &lt;code&gt;direction&lt;/code&gt; entry. Hence if, for example, the reference window is the frame&amp;rsquo;s root window and the value of the &lt;code&gt;direction&lt;/code&gt; entry is &lt;code&gt;left&lt;/code&gt;, a reused window must be on the left of the frame. This means that the left edge coordinate of the chosen window and that of the reference window are the same.</source>
          <target state="translated">参照ウィンドウが内部の場合、再利用されたウィンドウは、 &lt;code&gt;direction&lt;/code&gt; エントリで指定されたエッジを共有する必要があります。したがって、たとえば、参照ウィンドウがフレームのルートウィンドウであり、 &lt;code&gt;direction&lt;/code&gt; エントリの値が &lt;code&gt;left&lt;/code&gt; 場合、再利用されるウィンドウはフレームの左側にある必要があります。これは、選択したウィンドウの左端の座標と参照ウィンドウの左端の座標が同じであることを意味します。</target>
        </trans-unit>
        <trans-unit id="9f5b2b71a3d3948411e4d70107c5df0df5f1c0c4" translate="yes" xml:space="preserve">
          <source>If the reference window is live, the edge the chosen window will share with it is always the opposite of the one specified by the &lt;code&gt;direction&lt;/code&gt; entry. For example, if the value of the &lt;code&gt;direction&lt;/code&gt; entry is &lt;code&gt;left&lt;/code&gt;, the chosen window&amp;rsquo;s right edge coordinate (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;) will equal the reference window&amp;rsquo;s left edge coordinate.</source>
          <target state="translated">参照ウィンドウがライブの場合、選択したウィンドウが共有するエッジは、常に &lt;code&gt;direction&lt;/code&gt; エントリで指定されたエッジの反対になります。たとえば、 &lt;code&gt;direction&lt;/code&gt; エントリの値が &lt;code&gt;left&lt;/code&gt; 場合、選択したウィンドウの右端の座標（[&lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;座標と&lt;/a&gt;ウィンドウ]を参照）は、参照ウィンドウの左端の座標と等しくなります。</target>
        </trans-unit>
        <trans-unit id="de8210d397027ede8152086bfd375e22438b2494" translate="yes" xml:space="preserve">
          <source>If the region contains null bytes, the value is &lt;code&gt;no-conversion&lt;/code&gt;, even if the region contains text encoded in some coding system.</source>
          <target state="translated">領域にnullバイトが含まれている場合、その領域に何らかのコーディングシステムでエンコードされたテキストが含まれていても、値は &lt;code&gt;no-conversion&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0d6ba2dd5762a7f4a7ba3464533b3e64af4857d6" translate="yes" xml:space="preserve">
          <source>If the region contains only</source>
          <target state="translated">領域が</target>
        </trans-unit>
        <trans-unit id="da6ea29f28104a6e98fc44a5521cbaeb973455e6" translate="yes" xml:space="preserve">
          <source>If the region ends with a newline, that is ignored unless the optional third argument &lt;var&gt;count-final-newline&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">領域が改行で終わっている場合、オプションの3番目の引数 &lt;var&gt;count-final-newline&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外でない限り、それは無視されます。</target>
        </trans-unit>
        <trans-unit id="dd0c3591cf826a762edbb01a1829efc13aec39b6" translate="yes" xml:space="preserve">
          <source>If the register contains a rectangle, then the rectangle is inserted with its upper left corner at point. This means that text is inserted in the current line and underneath it on successive lines.</source>
          <target state="translated">レジスタに矩形が含まれている場合、その矩形は左上隅を点として挿入されます。これは、テキストが現在の行に挿入され、連続する行ではその下に挿入されることを意味します。</target>
        </trans-unit>
        <trans-unit id="5200a31714675a4baf5e8883a9477814cbe3c49a" translate="yes" xml:space="preserve">
          <source>If the register contains something other than saved text (a string) or a rectangle (a list), currently useless things happen. This may be changed in the future.</source>
          <target state="translated">レジスタに保存されたテキスト(文字列)や矩形(リスト)以外のものが含まれていると、現在のところ役に立たないことが起こります。これは将来的に変更されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="15587f2b6b239a89a7a50c6b82274c197ef4f9d8" translate="yes" xml:space="preserve">
          <source>If the ring is full, insertion removes the oldest element to make room for the new element.</source>
          <target state="translated">リングが一杯になった場合は、挿入によって最も古い要素が削除され、新しい要素が入る余地ができます。</target>
        </trans-unit>
        <trans-unit id="07d396c6040d9ac9a81e1564994516bdd4c6f009" translate="yes" xml:space="preserve">
          <source>If the ring is full, this function removes the newest element to make room for the inserted element.</source>
          <target state="translated">リングが一杯になった場合、この関数は最新の要素を削除して、挿入された要素のためのスペースを確保します。</target>
        </trans-unit>
        <trans-unit id="351123b37ff30f7d72eb53f1e662ced452ab9e5f" translate="yes" xml:space="preserve">
          <source>If the root window is live, &lt;var&gt;root&lt;/var&gt; is that window itself. Otherwise, &lt;var&gt;root&lt;/var&gt; is a list &lt;code&gt;(&lt;var&gt;dir&lt;/var&gt; &lt;var&gt;edges&lt;/var&gt; &lt;var&gt;w1&lt;/var&gt;
&lt;var&gt;w2&lt;/var&gt; ...)&lt;/code&gt; where &lt;var&gt;dir&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; for a horizontal combination and &lt;code&gt;t&lt;/code&gt; for a vertical combination, &lt;var&gt;edges&lt;/var&gt; gives the size and position of the combination, and the remaining elements are the child windows. Each child window may again be a window object (for a live window) or a list with the same format as above (for an internal window). The &lt;var&gt;edges&lt;/var&gt; element is a list &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;
&lt;var&gt;top&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt;, similar to the value returned by &lt;code&gt;window-edges&lt;/code&gt; (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;).</source>
          <target state="translated">ルートウィンドウがライブの場合、 &lt;var&gt;root&lt;/var&gt; はそのウィンドウ自体です。それ以外の場合、 &lt;var&gt;root&lt;/var&gt; はリスト &lt;code&gt;(&lt;var&gt;dir&lt;/var&gt; &lt;var&gt;edges&lt;/var&gt; &lt;var&gt;w1&lt;/var&gt; &lt;var&gt;w2&lt;/var&gt; ...)&lt;/code&gt; ここで、 &lt;var&gt;dir&lt;/var&gt; は水平方向の組み合わせの場合は &lt;code&gt;nil&lt;/code&gt; 、 &lt;code&gt;t&lt;/code&gt; は垂直方向の組み合わせの場合、 &lt;var&gt;edges&lt;/var&gt; は組み合わせのサイズと位置を示し、残りの要素は子ウィンドウです。各子ウィンドウは、ウィンドウオブジェクト（ライブウィンドウの場合）または上記と同じ形式のリスト（内部ウィンドウの場合）の場合があります。 &lt;var&gt;edges&lt;/var&gt; 要素がリストである &lt;code&gt;(&lt;var&gt;left&lt;/var&gt; &lt;var&gt;top&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt; 、 &lt;code&gt;window-edges&lt;/code&gt; によって返される値に似ています（&lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;CoordinatesとWindowsを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="75f2d2615cdf15afd6e2956e0f406addfc292e3f" translate="yes" xml:space="preserve">
          <source>If the same device is already used by another Emacs terminal, this function signals an error. If &lt;var&gt;tty&lt;/var&gt; is not suspended, this function does nothing.</source>
          <target state="translated">同じデバイスがすでに別のEmacs端末で使用されている場合、この関数はエラーを通知します。 &lt;var&gt;tty&lt;/var&gt; が中断されていない場合、この関数は何もしません。</target>
        </trans-unit>
        <trans-unit id="9f4664c6eaadcc29dcd11a7a83385d2fcd93ec2a" translate="yes" xml:space="preserve">
          <source>If the scan reaches the beginning or end of (the accessible part of) the buffer while in the middle of a parenthetical grouping, an error is signaled. If it reaches the beginning or end between groupings but before count is used up, &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">括弧で囲まれたグループ化の途中でスキャンがバッファ（のアクセス可能な部分）の最初または最後に到達すると、エラーが通知されます。グループ化の最初または最後に到達したが、カウントが &lt;code&gt;nil&lt;/code&gt; れる前に、nilが返されます。</target>
        </trans-unit>
        <trans-unit id="4acd2aff831c33301fe4a64be957276117c7148c" translate="yes" xml:space="preserve">
          <source>If the scan reaches the beginning or end of the accessible part of the buffer before it has scanned over &lt;var&gt;count&lt;/var&gt; parenthetical groupings, the return value is &lt;code&gt;nil&lt;/code&gt; if the depth at that point is zero; if the depth is non-zero, a &lt;code&gt;scan-error&lt;/code&gt; error is signaled.</source>
          <target state="translated">スキャンが括弧内のグループを &lt;var&gt;count&lt;/var&gt; オーバースキャンする前に、バッファーのアクセス可能な部分の最初または最後に到達した場合、そのポイントでの深さが &lt;code&gt;nil&lt;/code&gt; 場合、戻り値はnilです。深度がゼロ以外の場合、 &lt;code&gt;scan-error&lt;/code&gt; エラーが通知されます。</target>
        </trans-unit>
        <trans-unit id="b72b3d1bc43c12b4a85856c7dd6958ece6c9afb4" translate="yes" xml:space="preserve">
          <source>If the selected window already displays the specified buffer, it continues to do so, but another window is nonetheless found to display it as well.</source>
          <target state="translated">選択されたウィンドウがすでに指定されたバッファを表示している場合は、そのバッファを表示し続けますが、それにもかかわらず別のウィンドウが表示されていることがわかります。</target>
        </trans-unit>
        <trans-unit id="dceae8e1e44f45ff9d0c4b64f5bf61c85f4575b9" translate="yes" xml:space="preserve">
          <source>If the selected window cannot be scrolled any further, this function signals an error. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">選択したウィンドウをそれ以上スクロールできない場合、この関数はエラーを通知します。それ以外の場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e01943ee8ae40b424c8c87ce4dfa3f86b2e61d4c" translate="yes" xml:space="preserve">
          <source>If the server has a non-default filter, the connection process does not get a separate process buffer; otherwise, Emacs creates a new buffer for the purpose. The buffer name is the server&amp;rsquo;s buffer name or process name, concatenated with the client identification string.</source>
          <target state="translated">サーバーにデフォルト以外のフィルターがある場合、接続プロセスは個別のプロセスバッファーを取得しません。それ以外の場合、Emacsはその目的のために新しいバッファーを作成します。バッファー名は、サーバーのバッファー名またはプロセス名であり、クライアント識別文字列と連結されます。</target>
        </trans-unit>
        <trans-unit id="b444a41e96b7b5461f62ba6762f799de730d5fed" translate="yes" xml:space="preserve">
          <source>If the size of the runtime object passed to the module is smaller than what it expects, it means the module was compiled for an Emacs version newer (later) than the one which attempts to load it, i.e. the module might be incompatible with the Emacs binary.</source>
          <target state="translated">モジュールに渡されるランタイムオブジェクトのサイズが期待したサイズよりも小さい場合は、モジュールをロードしようとする Emacs のバージョンよりも新しい (後の)Emacs 用にコンパイルされていることを意味します。</target>
        </trans-unit>
        <trans-unit id="3125142d2b191df0f1c165cd14c13902b40256a6" translate="yes" xml:space="preserve">
          <source>If the specified buffer is already displayed in another window, in any frame on the current terminal, this switches to that window instead of creating a new frame. However, the selected window is never used for this.</source>
          <target state="translated">指定されたバッファが既に別のウィンドウで、現在の端末の任意のフレームに表示されている場合、これは新しいフレームを作成する代わりに、そのウィンドウに切り替えます。ただし、選択されたウィンドウがこのために使用されることはありません。</target>
        </trans-unit>
        <trans-unit id="368eb52100a670c323089c06cb84ffa26ffa5f61" translate="yes" xml:space="preserve">
          <source>If the specified file name matches more than one handler, the one whose match starts last in the file name gets precedence. This rule is chosen so that handlers for jobs such as uncompression are handled first, before handlers for jobs such as remote file access.</source>
          <target state="translated">指定されたファイル名が複数のハンドラにマッチした場合、ファイル名の最後にマッチしたハンドラが優先されます。このルールは、圧縮解除のようなジョブのハンドラが、リモートファイルアクセスのようなジョブのハンドラよりも先に処理されるように選択されています。</target>
        </trans-unit>
        <trans-unit id="47338737b3726ee5de9d6fe222ce94ab18a8e014" translate="yes" xml:space="preserve">
          <source>If the specified portions of the two strings match, the value is &lt;code&gt;t&lt;/code&gt;. Otherwise, the value is an integer which indicates how many leading characters agree, and which string is less. Its absolute value is one plus the number of characters that agree at the beginning of the two strings. The sign is negative if &lt;var&gt;string1&lt;/var&gt; (or its specified portion) is less.</source>
          <target state="translated">2つの文字列の指定された部分が一致する場合、値は &lt;code&gt;t&lt;/code&gt; です。それ以外の場合、値は、一致する先頭文字の数とそれより少ない文字列を示す整数です。その絶対値は、1に2つの文字列の先頭で一致する文字数を加えたものです。 &lt;var&gt;string1&lt;/var&gt; （またはその指定された部分）が小さい場合、符号は負になります。</target>
        </trans-unit>
        <trans-unit id="b72a9bc23284b1b084d3b464c5edfa5fdb086238" translate="yes" xml:space="preserve">
          <source>If the specified text includes raw bytes (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;), &lt;code&gt;select-safe-coding-system&lt;/code&gt; suggests &lt;code&gt;raw-text&lt;/code&gt; for its encoding.</source>
          <target state="translated">指定されたテキストに生のバイトが含まれている場合（&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;テキスト表現を&lt;/a&gt;参照）、 &lt;code&gt;select-safe-coding-system&lt;/code&gt; はそのエンコーディングに &lt;code&gt;raw-text&lt;/code&gt; を提案します。</target>
        </trans-unit>
        <trans-unit id="3744739d16eed63f1dd914249642ab3e23bd01ab" translate="yes" xml:space="preserve">
          <source>If the string &lt;var&gt;string&lt;/var&gt; does not contain control characters, you can do the same job in a more general way by creating (and then subsequently deleting) an overlay with a &lt;code&gt;before-string&lt;/code&gt; property. See &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;.</source>
          <target state="translated">文字 &lt;var&gt;string&lt;/var&gt; 文字列に制御文字が含まれていない場合は、 &lt;code&gt;before-string&lt;/code&gt; プロパティを使用してオーバーレイを作成（その後削除）することで、より一般的な方法で同じジョブを実行できます。&lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;オーバーレイプロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d944f5ccc1c2dcc8be92dff45d1a38a5f4016504" translate="yes" xml:space="preserve">
          <source>If the string or vector &lt;var&gt;key&lt;/var&gt; is not a valid key sequence according to the prefix keys specified in &lt;var&gt;keymap&lt;/var&gt;, it must be too long and have extra events at the end that do not fit into a single key sequence. Then the value is a number, the number of events at the front of &lt;var&gt;key&lt;/var&gt; that compose a complete key.</source>
          <target state="translated">文字列またはベクトル &lt;var&gt;key&lt;/var&gt; が、 &lt;var&gt;keymap&lt;/var&gt; で指定されたプレフィックスキーによる有効なキーシーケンスではない場合、長すぎて、単一のキーシーケンスに収まらない余分なイベントが最後にある必要があります。その場合、値は数値であり、完全な &lt;var&gt;key&lt;/var&gt; を構成するキーの前にあるイベントの数です。</target>
        </trans-unit>
        <trans-unit id="1e63534bbb115f7e096f3e5fe79eec8a69b6b872" translate="yes" xml:space="preserve">
          <source>If the subprocess writes to its standard error stream, by default the error output is also passed to the process filter function. If Emacs uses a pseudo-TTY (pty) for communication with the subprocess, then it is impossible to separate the standard output and standard error streams of the subprocess, because a pseudo-TTY has only one output channel. In that case, if you want to keep the output to those streams separate, you should redirect one of them to a file&amp;mdash;for example, by using an appropriate shell command via &lt;code&gt;start-process-shell-command&lt;/code&gt; or a similar function.</source>
          <target state="translated">サブプロセスが標準エラーストリームに書き込む場合、デフォルトでは、エラー出力もプロセスフィルター関数に渡されます。 Emacsがサブプロセスとの通信に疑似TTY（pty）を使用する場合、疑似TTYには出力チャネルが1つしかないため、サブプロセスの標準出力ストリームと標準エラーストリームを分離することはできません。その場合、これらのストリームへの出力を別々に保ちたい場合は、たとえば、 &lt;code&gt;start-process-shell-command&lt;/code&gt; または同様の関数を介して適切なシェルコマンドを使用して、それらの1つをファイルにリダイレクトする必要があります。</target>
        </trans-unit>
        <trans-unit id="18702f98124649c8759bfe76e277da2cdd4539dd" translate="yes" xml:space="preserve">
          <source>If the symbol has an Edebug specification, this &lt;em&gt;indirect specification&lt;/em&gt; should be either a list specification that is used in place of the symbol, or a function that is called to process the arguments. The specification may be defined with &lt;code&gt;def-edebug-spec&lt;/code&gt; just as for macros. See the &lt;code&gt;defun&lt;/code&gt; example.</source>
          <target state="translated">シンボルにEdebug仕様がある場合、この&lt;em&gt;間接仕様&lt;/em&gt;は、シンボルの代わりに使用されるリスト仕様、または引数を処理するために呼び出される関数のいずれかである必要があります。仕様は、マクロの場合と同様に &lt;code&gt;def-edebug-spec&lt;/code&gt; で定義できます。 &lt;code&gt;defun&lt;/code&gt; の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="374fdf8e2f867fb559b2ac4c3da7aad809207ef4" translate="yes" xml:space="preserve">
          <source>If the system can&amp;rsquo;t provide the requested information, or if &lt;var&gt;item&lt;/var&gt; is not one of those symbols, the value is &lt;code&gt;nil&lt;/code&gt;. All strings in the return value are decoded using &lt;code&gt;locale-coding-system&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Locales.html#Locales&quot;&gt;Locales&lt;/a&gt; in</source>
          <target state="translated">システムが要求された情報を提供できない場合、または &lt;var&gt;item&lt;/var&gt; がそれらのシンボルの1つでない場合、値は &lt;code&gt;nil&lt;/code&gt; です。戻り値のすべての文字列は、 &lt;code&gt;locale-coding-system&lt;/code&gt; を使用してデコードされます。の&lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Locales.html#Locales&quot;&gt;ロケール&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="058904110d90f3382409450e37c5d8142365664c" translate="yes" xml:space="preserve">
          <source>If the system doesn&amp;rsquo;t provide a way to determine the processor run time, &lt;code&gt;get-internal-run-time&lt;/code&gt; returns the same time as &lt;code&gt;current-time&lt;/code&gt;.</source>
          <target state="translated">システムがプロセッサの実行時間を決定する方法を提供しない場合、 &lt;code&gt;get-internal-run-time&lt;/code&gt; は &lt;code&gt;current-time&lt;/code&gt; と同じ時間を返します。</target>
        </trans-unit>
        <trans-unit id="434b5b0af97ab8d8dd5e8759dd47712f688d17c6" translate="yes" xml:space="preserve">
          <source>If the target of a symbolic links has remote file name syntax, &lt;code&gt;file-truename&lt;/code&gt; returns it quoted. See &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;Functions that Expand Filenames&lt;/a&gt;.</source>
          <target state="translated">シンボリックリンクのターゲットにリモートファイル名構文がある場合、 &lt;code&gt;file-truename&lt;/code&gt; は引用符で囲まれたファイル名を返します。&lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;ファイル名&lt;/a&gt;を展開する関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="5c00d5af3b2ed2919c1b3c4daeaaeb19caff9b66" translate="yes" xml:space="preserve">
          <source>If the text area of &lt;var&gt;frame&lt;/var&gt; measured in pixels is not a multiple of its default font size, the values returned by these functions are rounded down to the number of characters of the default font that fully fit into the text area.</source>
          <target state="translated">ピクセル単位で測定された &lt;var&gt;frame&lt;/var&gt; のテキスト領域がデフォルトのフォントサイズの倍数でない場合、これらの関数によって返される値は、テキスト領域に完全に収まるデフォルトのフォントの文字数に切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="8786be1522ac71c913570f53dec91d3853821ad2" translate="yes" xml:space="preserve">
          <source>If the text being copied has any text properties, these are copied into the string along with the characters they belong to. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;. However, overlays (see &lt;a href=&quot;overlays#Overlays&quot;&gt;Overlays&lt;/a&gt;) in the buffer and their properties are ignored, not copied.</source>
          <target state="translated">コピーされるテキストにテキストプロパティがある場合、それらはそれらが属する文字とともに文字列にコピーされます。&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;テキストのプロパティを&lt;/a&gt;参照してください。ただし、バッファ内のオーバーレイ（&lt;a href=&quot;overlays#Overlays&quot;&gt;オーバーレイを&lt;/a&gt;参照）とそのプロパティは無視され、コピーされません。</target>
        </trans-unit>
        <trans-unit id="7e0e1d506376880fbedc83b940ca88f8dbddc189" translate="yes" xml:space="preserve">
          <source>If the text comes from an overlay string via &lt;code&gt;before-string&lt;/code&gt; or &lt;code&gt;after-string&lt;/code&gt; properties (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;), or from a display string (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), and the string doesn&amp;rsquo;t contain a &lt;code&gt;face&lt;/code&gt; or &lt;code&gt;mouse-face&lt;/code&gt; property, or these properties leave some face attributes undefined, but the buffer text affected by the overlay/display property does define a face or those attributes, Emacs applies the face attributes of the &amp;ldquo;underlying&amp;rdquo; buffer text. Note that this is so even if the overlay or display string is displayed in the display margins (see &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;).</source>
          <target state="translated">テキストが &lt;code&gt;before-string&lt;/code&gt; または &lt;code&gt;after-string&lt;/code&gt; プロパティ（&lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;オーバーレイプロパティを&lt;/a&gt;参照）を介してオーバーレイ文字列から、または表示文字列（&lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;その他の表示仕様を&lt;/a&gt;参照）から取得され、文字列に &lt;code&gt;face&lt;/code&gt; または &lt;code&gt;mouse-face&lt;/code&gt; プロパティが含まれていない場合、または、これらのプロパティは一部の顔属性を未定義のままにしますが、overlay / displayプロパティの影響を受けるバッファテキストは顔またはそれらの属性を定義します。Emacsは「基礎となる」バッファテキストの顔属性を適用します。これは、オーバーレイまたは表示文字列が表示マージンに表示されている場合でも同じであることに注意してください（「&lt;a href=&quot;display-margins#Display-Margins&quot;&gt;表示マージン&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="a97f7657ea771f686cebbc0832dcd8543f3efd08" translate="yes" xml:space="preserve">
          <source>If the text consists of a special glyph, the glyph can specify a particular face. See &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;.</source>
          <target state="translated">テキストが特殊なグリフで構成されている場合、グリフは特定の面を指定できます。&lt;a href=&quot;glyphs#Glyphs&quot;&gt;グリフを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6ed1c5d19c45070f011fd3ad93563e85d39f4884" translate="yes" xml:space="preserve">
          <source>If the text contains a &lt;code&gt;face&lt;/code&gt; or &lt;code&gt;mouse-face&lt;/code&gt; property, Emacs applies the specified faces and face attributes. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;. (This is how Font Lock mode faces are applied. See &lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;Font Lock Mode&lt;/a&gt;.)</source>
          <target state="translated">テキストに &lt;code&gt;face&lt;/code&gt; または &lt;code&gt;mouse-face&lt;/code&gt; プロパティが含まれている場合、Emacsは指定されたfacesおよびface属性を適用します。&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;特別なプロパティを&lt;/a&gt;参照してください。（これは、フォントロックモードの面が適用される方法です。&lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;フォントロックモードを&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="188480b76f860986894ec660734475f5481a24b8" translate="yes" xml:space="preserve">
          <source>If the text contains no multibyte characters, the function returns the list &lt;code&gt;(undecided)&lt;/code&gt;.</source>
          <target state="translated">テキストにマルチバイト文字が含まれていない場合、関数はリスト &lt;code&gt;(undecided)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="c67ef61d0e798bd2ee21b733b0d87a814c416b58" translate="yes" xml:space="preserve">
          <source>If the text is to be read back into Lisp, then you should print with quoting characters to avoid ambiguity. Likewise, if the purpose is to describe a Lisp object clearly for a Lisp programmer. However, if the purpose of the output is to look nice for humans, then it is usually better to print without quoting.</source>
          <target state="translated">テキストをLispに読み返すことを目的としているのであれば、曖昧さを避けるために引用符をつけて印刷します。同様に、LispプログラマーのためにLispオブジェクトを明確に記述することが目的であれば、引用符をつけて出力するべきです。しかし、人間が見やすいように出力することが目的であれば、通常は引用符を使わずに出力した方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="a28c0597326f1c340e9d260f3f2992cc34aaeb88" translate="yes" xml:space="preserve">
          <source>If the text lies within an active region, Emacs highlights it using the &lt;code&gt;region&lt;/code&gt; face. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;Standard Faces&lt;/a&gt; in</source>
          <target state="translated">テキストがアクティブな領域内にある場合、Emacsは &lt;code&gt;region&lt;/code&gt; 面を使用してテキストを強調表示します。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;標準面&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="3152ab7e2009ef4b0ce7a2a65fc608a7c95eccd9" translate="yes" xml:space="preserve">
          <source>If the text lies within an overlay with a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;face&lt;/code&gt; property, Emacs applies the face(s) specified by that property. If the overlay has a &lt;code&gt;mouse-face&lt;/code&gt; property and the mouse is near enough to the overlay, Emacs applies the face or face attributes specified by the &lt;code&gt;mouse-face&lt;/code&gt; property instead. See &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;.</source>
          <target state="translated">テキストが &lt;code&gt;nil&lt;/code&gt; 以外の &lt;code&gt;face&lt;/code&gt; プロパティを持つオーバーレイ内にある場合、Emacsはそのプロパティで指定されたfaceを適用します。オーバーレイに &lt;code&gt;mouse-face&lt;/code&gt; プロパティがあり、マウスがオーバーレイに十分近い場合、Emacsは代わりに &lt;code&gt;mouse-face&lt;/code&gt; プロパティで指定されたfaceまたはface属性を適用します。&lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;オーバーレイプロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d8ea720c5ffd43b26e4511d204c3c42a1ebbf0ac" translate="yes" xml:space="preserve">
          <source>If the text lies within the mode line of the selected window, Emacs applies the &lt;code&gt;mode-line&lt;/code&gt; face. For the mode line of a non-selected window, Emacs applies the &lt;code&gt;mode-line-inactive&lt;/code&gt; face. For a header line, Emacs applies the &lt;code&gt;header-line&lt;/code&gt; face. For a tab line, Emacs applies the &lt;code&gt;tab-line&lt;/code&gt; face.</source>
          <target state="translated">テキストが選択したウィンドウのモードライン内にある場合、Emacsは &lt;code&gt;mode-line&lt;/code&gt; 面を適用します。選択されていないウィンドウのモードラインに対して、Emacsは &lt;code&gt;mode-line-inactive&lt;/code&gt; 面を適用します。ヘッダー行の場合、Emacsは &lt;code&gt;header-line&lt;/code&gt; 面を適用します。タブラインの場合、Emacsはタブライン面を適用し &lt;code&gt;tab-line&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f14408a8adf68c964ab66da93531e1a6dcf2ca7d" translate="yes" xml:space="preserve">
          <source>If the text property can&amp;rsquo;t be found, the function returns &lt;code&gt;nil&lt;/code&gt;. If it&amp;rsquo;s found, point is placed at the end of the region that has this text property match, and a &lt;code&gt;prop-match&lt;/code&gt; structure is returned.</source>
          <target state="translated">textプロパティが見つからない場合、関数は &lt;code&gt;nil&lt;/code&gt; を返します。見つかった場合、このテキストプロパティが一致する領域の最後にポイントが配置され、 &lt;code&gt;prop-match&lt;/code&gt; 構造が返されます。</target>
        </trans-unit>
        <trans-unit id="cf486874c81d1fe52f4ef78646fb3b9ced6f1ff2" translate="yes" xml:space="preserve">
          <source>If the third argument &lt;var&gt;target-depth&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, parsing stops if the depth in parentheses becomes equal to &lt;var&gt;target-depth&lt;/var&gt;. The depth starts at 0, or at whatever is given in &lt;var&gt;state&lt;/var&gt;.</source>
          <target state="translated">3番目の引数 &lt;var&gt;target-depth&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、括弧内の深さが &lt;var&gt;target-depth&lt;/var&gt; と等しくなると、解析は停止します。深さは0から、または &lt;var&gt;state&lt;/var&gt; で指定されたものから始まります。</target>
        </trans-unit>
        <trans-unit id="9d5ad229b8c2601e6354d21fe0f2c4a561753fd7" translate="yes" xml:space="preserve">
          <source>If the third element of the &lt;code&gt;quit-restore&lt;/code&gt; parameter is a list of buffer, window start (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;), and point (see &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;), and that buffer is still live, the buffer will be displayed, and start and point set accordingly. If, in addition, &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer was temporarily resized, this function will also try to restore the original height of &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;quit-restore&lt;/code&gt; パラメーターの3番目の要素がバッファー、ウィンドウ開始（&lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;ウィンドウの開始と終了を&lt;/a&gt;参照）、およびポイント（&lt;a href=&quot;window-point#Window-Point&quot;&gt;ウィンドウポイントを&lt;/a&gt;参照）のリストであり、そのバッファーがまだライブである場合、バッファーが表示され、開始とそれに応じて設定されたポイント。さらに、 &lt;var&gt;window&lt;/var&gt; のバッファのサイズが一時的に変更された場合、この関数は &lt;var&gt;window&lt;/var&gt; 元の高さを復元しようとします。</target>
        </trans-unit>
        <trans-unit id="08c08de732ef1903e040dc8cf4dec2533c0a2c93" translate="yes" xml:space="preserve">
          <source>If the thread exits, all the processes locked to it are unlocked.</source>
          <target state="translated">スレッドが終了すると、そのスレッドにロックされているすべてのプロセスがロック解除されます。</target>
        </trans-unit>
        <trans-unit id="9b71f206c2504ba9835d9d1903e089a08251f745" translate="yes" xml:space="preserve">
          <source>If the two objects are not &lt;code&gt;equal&lt;/code&gt;, the values returned by &lt;code&gt;sxhash-equal&lt;/code&gt; are usually different, but not always; once in a rare while, by luck, you will encounter two distinct-looking objects that give the same result from &lt;code&gt;sxhash-equal&lt;/code&gt;.</source>
          <target state="translated">2つのオブジェクトが &lt;code&gt;equal&lt;/code&gt; ない場合、 &lt;code&gt;sxhash-equal&lt;/code&gt; によって返される値は通常異なりますが、常にではありません。まれに、運が良ければ、 &lt;code&gt;sxhash-equal&lt;/code&gt; から同じ結果をもたらす2つの異なる外観のオブジェクトに遭遇することがあります。</target>
        </trans-unit>
        <trans-unit id="5fbd3cda5f7477844c9dcdbfc32e84643051e910" translate="yes" xml:space="preserve">
          <source>If the user chooses the first alternative in the choice, then the overall list has two elements and the second element is &lt;code&gt;t&lt;/code&gt;. If the user chooses the second alternative, then the overall list has three elements and the second and third must be strings.</source>
          <target state="translated">ユーザーが選択肢の最初の選択肢を選択した場合、リスト全体には2つの要素があり、2番目の要素は &lt;code&gt;t&lt;/code&gt; です。ユーザーが2番目の選択肢を選択した場合、リスト全体には3つの要素があり、2番目と3番目は文字列である必要があります。</target>
        </trans-unit>
        <trans-unit id="9fd4d775c63b1a97e06fd3e09efa71f518031662" translate="yes" xml:space="preserve">
          <source>If the user first types</source>
          <target state="translated">ユーザーが最初に</target>
        </trans-unit>
        <trans-unit id="ed418a913476cd3524c85ba5a1824a2ceeeef0aa" translate="yes" xml:space="preserve">
          <source>If the user gets rid of the dialog box without making a valid choice, for instance using the window manager, then this produces a quit and &lt;code&gt;x-popup-dialog&lt;/code&gt; does not return.</source>
          <target state="translated">たとえばウィンドウマネージャを使用して、ユーザーが有効な選択を行わずにダイアログボックスを削除すると、終了が生成され、 &lt;code&gt;x-popup-dialog&lt;/code&gt; は返されません。</target>
        </trans-unit>
        <trans-unit id="1c4d7a33c83c3a3d552119c04d724d503fdfe072" translate="yes" xml:space="preserve">
          <source>If the user gets rid of the menu without making a valid choice, for instance by clicking the mouse away from a valid choice or by typing</source>
          <target state="translated">ユーザーが有効な選択をせずにメニューを削除した場合、例えば有効な選択から離れた場所でマウスをクリックしたり</target>
        </trans-unit>
        <trans-unit id="ea4480620e10d170e62b5dd356b4e58bbdf1b518" translate="yes" xml:space="preserve">
          <source>If the user presses and releases the left mouse button over the same location, that generates a sequence of events like this:</source>
          <target state="translated">ユーザーが同じ場所でマウスの左ボタンを押したり離したりすると、このような一連のイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="219b7bca739acce06d6952536ce4a19ab3917e6a" translate="yes" xml:space="preserve">
          <source>If the user then types</source>
          <target state="translated">ユーザーが</target>
        </trans-unit>
        <trans-unit id="3ce549524a0375112651ee6807c161b6db6cdf00" translate="yes" xml:space="preserve">
          <source>If the user types</source>
          <target state="translated">ユーザーが</target>
        </trans-unit>
        <trans-unit id="a384ff5a54f414aff1846ff0c45074f478370490" translate="yes" xml:space="preserve">
          <source>If the user wants to completely control the look of the prompt, the most convenient way to do that is to specify the &lt;code&gt;default&lt;/code&gt; face at the end of all face lists. For instance:</source>
          <target state="translated">ユーザーがプロンプトの外観を完全に制御したい場合、それを行う最も便利な方法は、すべての面リストの最後に &lt;code&gt;default&lt;/code&gt; 面を指定することです。例えば：</target>
        </trans-unit>
        <trans-unit id="f0afc2a17ad86f3382250b68dcf2c4ea65c5e9a6" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;default&lt;/code&gt;, only print &lt;code&gt;charset&lt;/code&gt; text properties if there is an &amp;ldquo;unexpected&amp;rdquo; &lt;code&gt;charset&lt;/code&gt; property. For ascii characters, all charsets are considered &amp;ldquo;expected&amp;rdquo;. Otherwise, the expected &lt;code&gt;charset&lt;/code&gt; property of a character is given by &lt;code&gt;char-charset&lt;/code&gt;.</source>
          <target state="translated">値が &lt;code&gt;default&lt;/code&gt; 場合、「予期しない」 &lt;code&gt;charset&lt;/code&gt; プロパティがある場合にのみ &lt;code&gt;charset&lt;/code&gt; テキストプロパティを出力します。ASCII文字の場合、すべての文字セットは「予期される」と見なされます。それ以外の場合、 &lt;code&gt;charset&lt;/code&gt; の予想されるcharsetプロパティは &lt;code&gt;char-charset&lt;/code&gt; で指定されます。</target>
        </trans-unit>
        <trans-unit id="9ab3879e5145736dfbed3b20968831ce59dc17fb" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;grow-only&lt;/code&gt;, the tool bar expands automatically, but does not contract automatically. To contract the tool bar, the user has to redraw the frame by entering</source>
          <target state="translated">値が &lt;code&gt;grow-only&lt;/code&gt; の場合、ツールバーは自動的に拡大しますが、自動的には縮小しません。ツールバーを縮小するには、ユーザーは次のように入力してフレームを再描画する必要があります</target>
        </trans-unit>
        <trans-unit id="7cb68140441efc447477892703745ce3bcdf30fe" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;height&lt;/code&gt;, then only the window&amp;rsquo;s height is fixed; if the value is &lt;code&gt;width&lt;/code&gt;, then only the window&amp;rsquo;s width is fixed. Any other non-&lt;code&gt;nil&lt;/code&gt; value fixes both the width and the height.</source>
          <target state="translated">値が &lt;code&gt;height&lt;/code&gt; の場合、ウィンドウの高さのみが固定されます。値が &lt;code&gt;width&lt;/code&gt; の場合、ウィンドウの幅のみが固定されます。その他の &lt;code&gt;nil&lt;/code&gt; 以外の値は、幅と高さの両方を固定します。</target>
        </trans-unit>
        <trans-unit id="5bdc6e42a3b35b4cc7c1e6809e7ebf7a4ddd5c36" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt; (the default), then there is no limit.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; （デフォルト）の場合、制限はありません。</target>
        </trans-unit>
        <trans-unit id="c15eae920adf8ce0d2fec498eb508af66805c17a" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;charset&lt;/code&gt; text properties are never printed. If &lt;code&gt;t&lt;/code&gt;, they are always printed.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;charset&lt;/code&gt; テキストプロパティは出力されません。 &lt;code&gt;t&lt;/code&gt; の場合、それらは常に印刷されます。</target>
        </trans-unit>
        <trans-unit id="92b326569ebf15a4b7fb245bb0fdceba7a93dec6" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, Emacs does not remove images from the cache except when you explicitly clear it. This mode can be useful for debugging.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; の場合、明示的にクリアした場合を除いて、Emacsはキャッシュから画像を削除しません。このモードは、デバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="39a8877903cd7fa29b7cceab7cd75abec4a154c6" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, as it is by default, then the function &lt;code&gt;sentence-end&lt;/code&gt; constructs the regexp. That is why you should always call the function &lt;code&gt;sentence-end&lt;/code&gt; to obtain the regexp to be used to recognize the end of a sentence.</source>
          <target state="translated">デフォルトのように値が &lt;code&gt;nil&lt;/code&gt; の場合、関数 &lt;code&gt;sentence-end&lt;/code&gt; は正規表現を作成します。そのため、 &lt;code&gt;sentence-end&lt;/code&gt; を認識するために使用される正規表現を取得するには、常に関数sentence-endを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="468729e3a9700545eff7256bd812b75139abbdf7" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, that means use no stipple pattern.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; の場合、それは点描パターンを使用しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="36597fbd18928466d8e834377bf073ed7a691958" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, there is no short cut, and &lt;code&gt;indent-region&lt;/code&gt; actually works line by line.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; の場合、ショートカットはなく、 &lt;code&gt;indent-region&lt;/code&gt; 実際には1行ずつ機能します。</target>
        </trans-unit>
        <trans-unit id="700a7b58dc10a099d378778b3c8f172734efe6b0" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;no&lt;/code&gt;, then if the completion table fails to match the text at point, &lt;code&gt;completion-at-point&lt;/code&gt; moves on to the next function in &lt;code&gt;completion-at-point-functions&lt;/code&gt; instead of reporting a completion failure.</source>
          <target state="translated">値が &lt;code&gt;no&lt;/code&gt; の場合、完了テーブルがポイントのテキストと一致しない場合、 &lt;code&gt;completion-at-point&lt;/code&gt; は、完了の失敗を報告する代わりに、 &lt;code&gt;completion-at-point-functions&lt;/code&gt; の次の関数に移動します。</target>
        </trans-unit>
        <trans-unit id="4e41af7941c3971292e0e85b00bbeefc61e9670e" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;special&lt;/code&gt;, the named major mode is special. See &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;.</source>
          <target state="translated">値が &lt;code&gt;special&lt;/code&gt; 場合、指定されたメジャーモードは特殊です。&lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;メジャーモードの規則を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f672a47781029fb09f39975884574172889a7af7" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;t&lt;/code&gt;, these commands instead move point to the beginning or end of the buffer (depending on scrolling direction); only if point is already on that position do they signal an error.</source>
          <target state="translated">値が &lt;code&gt;t&lt;/code&gt; の場合、これらのコマンドは代わりに、ポイントをバッファーの先頭または末尾に移動します（スクロール方向によって異なります）。ポイントがすでにその位置にある場合にのみ、エラーを通知します。</target>
        </trans-unit>
        <trans-unit id="29d957785b808e7c19d9391f0a4be2c11d43d626" translate="yes" xml:space="preserve">
          <source>If the value is a function, &lt;code&gt;current-kill&lt;/code&gt; calls it to get the most recent kill. If the function returns a non-&lt;code&gt;nil&lt;/code&gt; value, then that value is used as the most recent kill. If it returns &lt;code&gt;nil&lt;/code&gt;, then the front of the kill ring is used.</source>
          <target state="translated">値が関数の場合、 &lt;code&gt;current-kill&lt;/code&gt; はそれを呼び出して、最新のkillを取得します。関数が &lt;code&gt;nil&lt;/code&gt; 以外の値を返す場合、その値が最新の強制終了として使用されます。 &lt;code&gt;nil&lt;/code&gt; を返す場合は、キルリングの前面が使用されます。</target>
        </trans-unit>
        <trans-unit id="2efa664ce25bc68241838829062a86b1d08a26ca" translate="yes" xml:space="preserve">
          <source>If the value is a function, &lt;code&gt;kill-new&lt;/code&gt; and &lt;code&gt;kill-append&lt;/code&gt; call it with the new first element of the kill ring as the argument.</source>
          <target state="translated">値が関数の場合、 &lt;code&gt;kill-new&lt;/code&gt; と &lt;code&gt;kill-append&lt;/code&gt; は、引数としてkillリングの新しい最初の要素を使用して呼び出します。</target>
        </trans-unit>
        <trans-unit id="5e905120e99d2f357f206cb76e224ddcd21994e5" translate="yes" xml:space="preserve">
          <source>If the value is a list, each list element corresponds to one entry, and should have the form &lt;code&gt;(&lt;var&gt;id&lt;/var&gt;&amp;nbsp;&lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt;, where</source>
          <target state="translated">値がリストの場合、各リスト要素は1つのエントリに対応し、次の形式である必要があります &lt;code&gt;(&lt;var&gt;id&lt;/var&gt;&amp;nbsp;&lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb730abde36feb6570e0edc644f20655f48ac985" translate="yes" xml:space="preserve">
          <source>If the value is a list, only the listed windows are saved and restored.</source>
          <target state="translated">値がリストの場合、リストされたウィンドウのみが保存され、復元されます。</target>
        </trans-unit>
        <trans-unit id="af878dd003d2bc2e6b758e24fbfb3309bd97c17e" translate="yes" xml:space="preserve">
          <source>If the value is an integer, it directly specifies the maximum image height and width, measured in pixels. If it is floating point, it specifies the maximum image height and width as a ratio to the frame height and width. If the value is non-numeric, there is no explicit limit on the size of images.</source>
          <target state="translated">値が整数の場合は、画像の最大高さと幅をピクセル単位で直接指定します。値が浮動小数点の場合は、最大画像の高さと幅をフレームの高さと幅に対する比率で指定します。値が非数値の場合、画像のサイズには明示的な制限はありません。</target>
        </trans-unit>
        <trans-unit id="33f437b405d89bf668073b5c7ce081a5a2c02dcd" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt; and not &lt;code&gt;t&lt;/code&gt;, Emacs adjusts point to keep the cursor at the same vertical position, even if the scrolling command didn&amp;rsquo;t move point off-window.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外で、 &lt;code&gt;t&lt;/code&gt; でない場合、Emacsは、スクロールコマンドがポイントをウィンドウの外に移動しなかった場合でも、カーソルを同じ垂直位置に保つようにポイントを調整します。</target>
        </trans-unit>
        <trans-unit id="2851cccc0e63a3f52ab08d7a9cb6c3e6a674388d" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; does not necessarily have to display the buffer and the caller is prepared to accept that. This entry is not intended for user customizations, since there is no guarantee that an arbitrary caller of &lt;code&gt;display-buffer&lt;/code&gt; will be able to handle the case that no window will display the buffer. &lt;code&gt;display-buffer-no-window&lt;/code&gt; is the only action function that cares about this entry.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の &lt;code&gt;display-buffer&lt;/code&gt; 、display-bufferは必ずしもバッファーを表示する必要はなく、呼び出し元はそれを受け入れる準備ができています。このエントリは、ユーザーのカスタマイズを目的としたものではありません。display &lt;code&gt;display-buffer&lt;/code&gt; 任意の呼び出し元が、ウィンドウにバッファが表示されない場合を処理できる保証がないためです。 &lt;code&gt;display-buffer-no-window&lt;/code&gt; は、このエントリを処理する唯一のアクション関数です。</target>
        </trans-unit>
        <trans-unit id="477bb7946100fa9a868977f2ca1fc8c26a6c6644" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is considered generally safe for evaluation. See &lt;a href=&quot;function-safety#Function-Safety&quot;&gt;Function Safety&lt;/a&gt;.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、名前付き関数は一般的に評価に安全であると見なされます。&lt;a href=&quot;function-safety#Function-Safety&quot;&gt;機能安全を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e16aff5bcb64ef95cfca3536ac2753af829bb27a" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is considered to be pure (see &lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;What Is a Function&lt;/a&gt;). Calls with constant arguments can be evaluated at compile time. This may shift run time errors to compile time. Not to be confused with pure storage (see &lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Pure Storage&lt;/a&gt;).</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、指定された関数は純粋であると見なされます（&lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;関数とはを&lt;/a&gt;参照）。定数引数を使用した呼び出しは、コンパイル時に評価できます。これにより、実行時エラーがコンパイル時にシフトする可能性があります。&lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;ピュアストレージ&lt;/a&gt;と混同しないでください（ピュアストレージを参照）。</target>
        </trans-unit>
        <trans-unit id="259729fa4406a0a6d0d70913ff740b5affcc6f9b" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is disabled as a command. See &lt;a href=&quot;disabling-commands#Disabling-Commands&quot;&gt;Disabling Commands&lt;/a&gt;.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、指定された関数はコマンドとして無効になります。&lt;a href=&quot;disabling-commands#Disabling-Commands&quot;&gt;コマンドの無効化を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7cb441f9be2c8cb05d790d297512b2da9a0fdd51" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is safe to call in file-local evaluation forms. See &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、名前付き関数はファイルローカル評価フォームで安全に呼び出すことができます。&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;ファイルローカル変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7090499177c1d5aa1c6ffaf8fc256cc9286d33ab" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function should not be deleted from the local value of a hook variable when changing major modes. See &lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;Setting Hooks&lt;/a&gt;.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、メジャーモードを変更するときに、名前付き関数をフック変数のローカル値から削除しないでください。&lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;フックの設定を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7bcd63797aa231c2fc8170dd790d6c1274593c68" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named variable is a buffer-local variable whose value should not be reset when changing major modes. See &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、名前付き変数はバッファローカル変数であり、メジャーモードを変更するときに値をリセットしないでください。&lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Buffer-Localの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="23ce86d21a94c261ce33a6155e01509d55aa1608" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named variable is considered risky as a file-local variable. See &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、名前付き変数はファイルローカル変数として危険であると見なされます。&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;ファイルローカル変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5e9f0af4d30295bb81b9dc7f9a19baa56bc6dd78" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, then comments are treated as whitespace by the functions in this section and by &lt;code&gt;forward-sexp&lt;/code&gt;, &lt;code&gt;scan-lists&lt;/code&gt; and &lt;code&gt;scan-sexps&lt;/code&gt;.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、コメントは、このセクションの関数、および &lt;code&gt;forward-sexp&lt;/code&gt; 、 &lt;code&gt;scan-lists&lt;/code&gt; 、および &lt;code&gt;scan-sexps&lt;/code&gt; によって空白として扱われます。</target>
        </trans-unit>
        <trans-unit id="9afa3015bea2a1daaa715c6ae2ba74ee7419f635" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, this signals that the selected window must not be used for displaying the buffer. All action functions that (re-)use an existing window should respect this entry.</source>
          <target state="translated">値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、これは、選択したウィンドウをバッファの表示に使用してはならないことを示します。既存のウィンドウを（再）使用するすべてのアクション関数は、このエントリを尊重する必要があります。</target>
        </trans-unit>
        <trans-unit id="ee5cc1ed2e593d6b233408babcfcb8e3035d9a94" translate="yes" xml:space="preserve">
          <source>If the value is zero or &lt;code&gt;nil&lt;/code&gt;, then auto-saving is not done as a result of idleness, only after a certain number of input events as specified by &lt;code&gt;auto-save-interval&lt;/code&gt;.</source>
          <target state="translated">値がゼロまたは &lt;code&gt;nil&lt;/code&gt; の場合、自動保存はアイドル状態の結果として実行されず、 &lt;code&gt;auto-save-interval&lt;/code&gt; で指定された特定の数の入力イベントの後でのみ実行されます。</target>
        </trans-unit>
        <trans-unit id="76f5d493cd82fcfb629f119ac8dbd7a3b97bad0c" translate="yes" xml:space="preserve">
          <source>If the value is zero, then command input is not echoed.</source>
          <target state="translated">値がゼロの場合、コマンド入力はエコーされません。</target>
        </trans-unit>
        <trans-unit id="060f0c2de95a83bc0ccb45f9abd9bb5bd7667b58" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;selective-display&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, then the character control-m marks the start of hidden text; the control-m, and the rest of the line following it, are not displayed. This is explicit selective display.</source>
          <target state="translated">&lt;code&gt;selective-display&lt;/code&gt; 値が &lt;code&gt;t&lt;/code&gt; の場合、文字control-mは非表示のテキストの開始を示します。control-mとそれに続く行の残りは表示されません。これは明示的な選択表示です。</target>
        </trans-unit>
        <trans-unit id="555139376ac09bc81e6c182a9608275dd0abd710" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;selective-display&lt;/code&gt; is a positive integer, then lines that start with more than that many columns of indentation are not displayed.</source>
          <target state="translated">&lt;code&gt;selective-display&lt;/code&gt; 値が正の整数の場合、それ以上の数のインデント列で始まる行は表示されません。</target>
        </trans-unit>
        <trans-unit id="68582a05aa95013824d3ad372c233549e62c49f2" translate="yes" xml:space="preserve">
          <source>If the value of &lt;var&gt;ascent&lt;/var&gt; is a non-negative number no greater than 100, it specifies that &lt;var&gt;ascent&lt;/var&gt; percent of the height of the space should be considered as the ascent of the space&amp;mdash;that is, the part above the baseline. The ascent may also be specified in pixel units with a &lt;em&gt;pixel ascent&lt;/em&gt; specification (see &lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Pixel Specification&lt;/a&gt;).</source>
          <target state="translated">&lt;var&gt;ascent&lt;/var&gt; の値が100以下の負でない数値である場合、スペースの高さの &lt;var&gt;ascent&lt;/var&gt; パーセントをスペースの上昇、つまりベースラインより上の部分と見なす必要があることを指定します。上昇は、&lt;em&gt;ピクセル上昇&lt;/em&gt;仕様のピクセル単位で指定することもできます（&lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;ピクセル仕様を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c67a95af34a0a2fbb8831a9466cb5e82ffc37289" translate="yes" xml:space="preserve">
          <source>If the value of &lt;var&gt;condition&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the clause fails, so the &lt;code&gt;cond&lt;/code&gt; moves on to the following clause, trying its &lt;var&gt;condition&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;condition&lt;/var&gt; の値が &lt;code&gt;nil&lt;/code&gt; の場合、句は失敗するため、 &lt;code&gt;cond&lt;/code&gt; は次の句に移動し、その &lt;var&gt;condition&lt;/var&gt; 試します。</target>
        </trans-unit>
        <trans-unit id="b26492df425382cda0433c05f8eee45418127a7d" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;disabled&lt;/code&gt; property is a string, the message saying the command is disabled includes that string. For example:</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; プロパティの値が文字列の場合、コマンドが無効であることを示すメッセージにはその文字列が含まれます。例えば：</target>
        </trans-unit>
        <trans-unit id="566ca9c0dbabe27b2c6fa5789311bef1cbda3a5f" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;help-echo&lt;/code&gt; property is a function, that function is called with three arguments, &lt;var&gt;window&lt;/var&gt;, &lt;var&gt;object&lt;/var&gt; and &lt;var&gt;pos&lt;/var&gt; and should return a help string or &lt;code&gt;nil&lt;/code&gt; for none. The first argument, &lt;var&gt;window&lt;/var&gt; is the window in which the help was found. The second, &lt;var&gt;object&lt;/var&gt;, is the buffer, overlay or string which had the &lt;code&gt;help-echo&lt;/code&gt; property. The &lt;var&gt;pos&lt;/var&gt; argument is as follows:</source>
          <target state="translated">&lt;code&gt;help-echo&lt;/code&gt; プロパティの値が関数の場合、その関数は3つの引数、 &lt;var&gt;window&lt;/var&gt; 、 &lt;var&gt;object&lt;/var&gt; 、 &lt;var&gt;pos&lt;/var&gt; で呼び出され、ヘルプ文字列または &lt;code&gt;nil&lt;/code&gt; を返す必要があります。最初の引数である &lt;var&gt;window&lt;/var&gt; は、ヘルプが見つかったウィンドウです。2番目の &lt;var&gt;object&lt;/var&gt; は、 &lt;code&gt;help-echo&lt;/code&gt; プロパティを持つバッファ、オーバーレイ、または文字列です。 &lt;var&gt;pos&lt;/var&gt; 引数は次のとおりです：</target>
        </trans-unit>
        <trans-unit id="272c984932838f6844b94c52070e171efba296f8" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;help-echo&lt;/code&gt; property is neither a function nor a string, it is evaluated to obtain a help string.</source>
          <target state="translated">&lt;code&gt;help-echo&lt;/code&gt; プロパティの値が関数でも文字列でもない場合は、ヘルプ文字列を取得するために評価されます。</target>
        </trans-unit>
        <trans-unit id="b8c377b2a9a4ca7febcecccc29dc18024a3f802e" translate="yes" xml:space="preserve">
          <source>If the value of the variable is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;save-buffer&lt;/code&gt; doesn&amp;rsquo;t add newlines at all. &lt;code&gt;nil&lt;/code&gt; is the default value, but a few major modes set it to &lt;code&gt;t&lt;/code&gt; in particular buffers.</source>
          <target state="translated">変数の値が &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;save-buffer&lt;/code&gt; は改行をまったく追加しません。 &lt;code&gt;nil&lt;/code&gt; がデフォルト値ですが、いくつかの主要なモードでは、特定のバッファーで &lt;code&gt;t&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="0ac5493d5a3cecee27b7d297a2e462236561533c" translate="yes" xml:space="preserve">
          <source>If the value of this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt; (the default), Emacs performs bidirectional reordering for display. The reordering affects buffer text, as well as display strings and overlay strings from text and overlay properties in the buffer (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;, and see &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;). If the value is &lt;code&gt;nil&lt;/code&gt;, Emacs does not perform bidirectional reordering in the buffer.</source>
          <target state="translated">このバッファローカル変数の値が &lt;code&gt;nil&lt;/code&gt; 以外（デフォルト）の場合、Emacsは表示のために双方向の並べ替えを実行します。並べ替えは、バッファテキストだけでなく、バ​​ッファ内のテキストおよびオーバーレイプロパティからの表示文字列およびオーバーレイ文字列にも影響します（&lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;オーバーレイプロパティ&lt;/a&gt;および&lt;a href=&quot;display-property#Display-Property&quot;&gt;表示プロパティ&lt;/a&gt;を参照）。値が &lt;code&gt;nil&lt;/code&gt; の場合、Emacsはバッファー内で双方向の並べ替えを実行しません。</target>
        </trans-unit>
        <trans-unit id="19cfe301d5b1c21b59d7667f67b9846e5cb99b66" translate="yes" xml:space="preserve">
          <source>If the value of this buffer-local variable is the symbol &lt;code&gt;right-to-left&lt;/code&gt; or &lt;code&gt;left-to-right&lt;/code&gt;, all paragraphs in the buffer are assumed to have that specified direction. Any other value is equivalent to &lt;code&gt;nil&lt;/code&gt; (the default), which means to determine the base direction of each paragraph from its contents.</source>
          <target state="translated">このバッファローカル変数の値が &lt;code&gt;right-to-left&lt;/code&gt; または &lt;code&gt;left-to-right&lt;/code&gt; から右の記号である場合、バッファ内のすべての段落はその指定された方向を持っていると見なされます。その他の値は &lt;code&gt;nil&lt;/code&gt; （デフォルト）と同等です。これは、各段落の基本方向をその内容から決定することを意味します。</target>
        </trans-unit>
        <trans-unit id="812fc63336994f949e3d3139adf98158b4eeeb2b" translate="yes" xml:space="preserve">
          <source>If the value of this option is non-&lt;code&gt;nil&lt;/code&gt;, Emacs resizes windows in units of pixels. This currently affects functions like &lt;code&gt;split-window&lt;/code&gt; (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;), &lt;code&gt;maximize-window&lt;/code&gt;, &lt;code&gt;minimize-window&lt;/code&gt;, &lt;code&gt;fit-window-to-buffer&lt;/code&gt;, &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; and &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; (all listed below).</source>
          <target state="translated">このオプションの値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、Emacsはウィンドウのサイズをピクセル単位で変更します。これは現在、 &lt;code&gt;split-window&lt;/code&gt; （ウィンドウの&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;分割を&lt;/a&gt;参照）、 &lt;code&gt;maximize-window&lt;/code&gt; 、 &lt;code&gt;minimize-window&lt;/code&gt; 、 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; 、 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; 、 &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; （以下にすべてリストされています）。</target>
        </trans-unit>
        <trans-unit id="5cf1bf75cb42bb084c10a3366213ff8870a2d138" translate="yes" xml:space="preserve">
          <source>If the value of this parameter is &lt;code&gt;nil&lt;/code&gt;, the frame&amp;rsquo;s position and size remain unaltered when the parent frame is resized, so the position and size ratios may change. If the value of this parameter is &lt;code&gt;t&lt;/code&gt;, Emacs will try to preserve the frame&amp;rsquo;s size and position ratios, hence the frame&amp;rsquo;s size and position relative to its parent frame may change.</source>
          <target state="translated">このパラメータの値が &lt;code&gt;nil&lt;/code&gt; の場合、親フレームのサイズが変更されてもフレームの位置とサイズは変更されないため、位置とサイズの比率が変わる可能性があります。このパラメーターの値が &lt;code&gt;t&lt;/code&gt; の場合、Emacsはフレームのサイズと位置の比率を維持しようとするため、親フレームに対するフレームのサイズと位置が変わる可能性があります。</target>
        </trans-unit>
        <trans-unit id="0510e819ccf0c675338a805bc0b404c4a3b6f7a9" translate="yes" xml:space="preserve">
          <source>If the value of this variable is &lt;code&gt;nil&lt;/code&gt;, standard functions that read from the minibuffer don&amp;rsquo;t add new elements to the history list. This lets Lisp programs explicitly manage input history by using &lt;code&gt;add-to-history&lt;/code&gt;. The default value is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">この変数の値が &lt;code&gt;nil&lt;/code&gt; の場合、ミニバッファーから読み取る標準関数は、履歴リストに新しい要素を追加しません。これにより、Lispプログラムは &lt;code&gt;add-to-history&lt;/code&gt; を使用して入力履歴を明示的に管理できます。デフォルト値は &lt;code&gt;t&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9f0defdc43585356036419fc3a095ddbc8793b32" translate="yes" xml:space="preserve">
          <source>If the value of this variable is &lt;code&gt;t&lt;/code&gt;, that means when adding a new history element, all previous identical elements are deleted.</source>
          <target state="translated">この変数の値が &lt;code&gt;t&lt;/code&gt; の場合、つまり、新しい履歴要素を追加すると、以前の同一の要素がすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="00e756b626fcfa2be38e0c2c66f51589b80680ba" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt; (the default), &lt;code&gt;split-window-below&lt;/code&gt; behaves as described above.</source>
          <target state="translated">この変数の値が &lt;code&gt;nil&lt;/code&gt; 以外（デフォルト）の場合、 &lt;code&gt;split-window-below&lt;/code&gt; は上記のように動作します。</target>
        </trans-unit>
        <trans-unit id="a59f8293a2949cc6a25118ff9b69aa66a58661cb" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; is allowed to split an existing window to make a new window for displaying in. This is the default.</source>
          <target state="translated">この変数の値が &lt;code&gt;nil&lt;/code&gt; 以外の &lt;code&gt;display-buffer&lt;/code&gt; 、display-bufferは既存のウィンドウを分割して、表示するための新しいウィンドウを作成できます。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="a9a51ed077c6bca22acf5bd2c879943a99f0bb0f" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs loads a terminal-specific initialization file as follows:</source>
          <target state="translated">この変数の値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、Emacsは次のように端末固有の初期化ファイルをロードします。</target>
        </trans-unit>
        <trans-unit id="9c4d11e131a1d859bb2af4f2e3fdec41460a90c4" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, Font Lock does not do syntactic fontification, only search-based fontification based on &lt;code&gt;font-lock-keywords&lt;/code&gt;. It is normally set by Font Lock mode based on the &lt;var&gt;keywords-only&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;. If the value is &lt;code&gt;nil&lt;/code&gt;, Font Lock will call &lt;code&gt;jit-lock-register&lt;/code&gt; (see &lt;a href=&quot;other-font-lock-variables#Other-Font-Lock-Variables&quot;&gt;Other Font Lock Variables&lt;/a&gt;) to set up for automatic refontification of buffer text following a modified line to reflect the new syntactic context due to the change.</source>
          <target state="translated">この変数の値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、Font Lockは構文的なフォント化を行わず、 &lt;code&gt;font-lock-keywords&lt;/code&gt; に基づく検索ベースのフォント化のみを行います。通常、 &lt;code&gt;font-lock-defaults&lt;/code&gt; の &lt;var&gt;keywords-only&lt;/var&gt; 要素に基づいてフォントロックモードで設定されます。値が &lt;code&gt;nil&lt;/code&gt; の場合、Font Lockは &lt;code&gt;jit-lock-register&lt;/code&gt; （&lt;a href=&quot;other-font-lock-variables#Other-Font-Lock-Variables&quot;&gt;その他のFont Lock変数を&lt;/a&gt;参照）を呼び出して、変更による新しい構文コンテキストを反映するように、変更された行に続くバッファテキストの自動再フォント化を設定します。</target>
        </trans-unit>
        <trans-unit id="2960c7a8febeec7d927a7af133e174629bbfb833" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, case is not considered significant in completion. Within &lt;code&gt;read-file-name&lt;/code&gt;, this variable is overridden by &lt;code&gt;read-file-name-completion-ignore-case&lt;/code&gt; (see &lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;Reading File Names&lt;/a&gt;); within &lt;code&gt;read-buffer&lt;/code&gt;, it is overridden by &lt;code&gt;read-buffer-completion-ignore-case&lt;/code&gt; (see &lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;High-Level Completion&lt;/a&gt;).</source>
          <target state="translated">この変数の値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、caseは完了時に重要であるとは見なされません。内で &lt;code&gt;read-file-name&lt;/code&gt; 、この変数がで上書きされ &lt;code&gt;read-file-name-completion-ignore-case&lt;/code&gt; （参照&lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;読書ファイル名を&lt;/a&gt;）。 &lt;code&gt;read-buffer&lt;/code&gt; 内では、 &lt;code&gt;read-buffer-completion-ignore-case&lt;/code&gt; によってオーバーライドされます（&lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;高レベルの完了を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d6c67d32ca611252d8fc5f1b5880098b768694a6" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a window object. When the function &lt;code&gt;scroll-other-window&lt;/code&gt; is called in the minibuffer, it scrolls this window (see &lt;a href=&quot;textual-scrolling#Textual-Scrolling&quot;&gt;Textual Scrolling&lt;/a&gt;).</source>
          <target state="translated">この変数の値が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、ウィンドウオブジェクトである必要があります。ミニバッファで関数 &lt;code&gt;scroll-other-window&lt;/code&gt; が呼び出されると、このウィンドウが&lt;a href=&quot;textual-scrolling#Textual-Scrolling&quot;&gt;スクロールされ&lt;/a&gt;ます（テキストのスクロールを参照）。</target>
        </trans-unit>
        <trans-unit id="9e95218ab547b22918b93cabf2b6d43c2fe537ca" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, that means &lt;code&gt;display-buffer&lt;/code&gt; may display buffers by making new frames. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この変数の値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;display-buffer&lt;/code&gt; は新しいフレームを作成することでバッファーを表示できることを意味します。デフォルトは &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="360c01786da313e8914310faac623782020e21b4" translate="yes" xml:space="preserve">
          <source>If the value specifies a function, that function is called with one argument&amp;mdash;the chosen window. The function is supposed to adjust the height of the window; its return value is ignored. Suitable functions are &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; and &lt;code&gt;fit-window-to-buffer&lt;/code&gt;, see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;.</source>
          <target state="translated">値が関数を指定している場合、その関数は1つの引数（選択されたウィンドウ）で呼び出されます。この関数は、ウィンドウの高さを調整することになっています。その戻り値は無視されます。適切な関数は、 &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; および &lt;code&gt;fit-window-to-buffer&lt;/code&gt; です&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;。Windowsのサイズ変更を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="57707f18f785ecc801b8f5afbc05fff4dced7d86" translate="yes" xml:space="preserve">
          <source>If the value specifies a function, that function is called with one argument&amp;mdash;the chosen window. The function is supposed to adjust the width of the window; its return value is ignored.</source>
          <target state="translated">値が関数を指定している場合、その関数は1つの引数（選択されたウィンドウ）で呼び出されます。この関数は、ウィンドウの幅を調整することになっています。その戻り値は無視されます。</target>
        </trans-unit>
        <trans-unit id="a79cda4b6734f4c8cd077b1e9f5396ef14b06321" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;auto-resize-tool-bars&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, Emacs wraps the internal tool bar when its width becomes too large for its frame. If and when Emacs (un-)wraps the internal tool bar, it by default keeps the outer height of the frame unchanged, so the native height of the frame (see below) will change instead. Emacs built with GTK+, on the other hand, never wraps the tool bar but may automatically increase the outer width of a frame in order to accommodate an overlong tool bar.</source>
          <target state="translated">変数 &lt;code&gt;auto-resize-tool-bars&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、Emacsは、幅がフレームに対して大きくなりすぎると、内部ツールバーをラップします。 Emacsが内部ツールバーを（アン）ラップする場合、デフォルトではフレームの外側の高さが変更されないため、代わりにフレームのネイティブの高さ（以下を参照）が変更されます。一方、GTK +で構築されたEmacsは、ツールバーをラップすることはありませんが、長すぎるツールバーに対応するために、フレームの外側の幅を自動的に増やす場合があります。</target>
        </trans-unit>
        <trans-unit id="c8070019cd13c6f9ef8f3dd737702a0064c04727" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;completion-ignore-case&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, completion ignores case when comparing the input against the possible matches. See &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;. In this mode of operation, &lt;var&gt;predicate&lt;/var&gt; must also ignore case, or you will get surprising results.</source>
          <target state="translated">変数 &lt;code&gt;completion-ignore-case&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、入力を一致する可能性のあるものと比較するときに、completionはcaseを無視します。&lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;基本的な完了を&lt;/a&gt;参照してください。この操作モードでは、 &lt;var&gt;predicate&lt;/var&gt; も大文字と小文字を区別する必要があります。そうしないと、驚くべき結果が得られます。</target>
        </trans-unit>
        <trans-unit id="42c1194e671d47a84f55790bd93d0d192ce44404" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the string that is returned includes whatever text properties were present in the minibuffer. Otherwise all the text properties are stripped when the value is returned.</source>
          <target state="translated">変数 &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、返される文字列には、ミニバッファーに存在していたテキストプロパティがすべて含まれます。それ以外の場合、値が返されるときにすべてのテキストプロパティが削除されます。</target>
        </trans-unit>
        <trans-unit id="0fd52c18b8e8730c692db14bdff9e0f641a8adfc" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;select-safe-coding-system-accept-default-p&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function taking a single argument. It is used in place of &lt;var&gt;accept-default-p&lt;/var&gt;, overriding any value supplied for this argument.</source>
          <target state="translated">変数 &lt;code&gt;select-safe-coding-system-accept-default-p&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、単一の引数を取る関数である必要があります。これは、 &lt;var&gt;accept-default-p&lt;/var&gt; の代わりに使用され、この引数に指定された値をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="ba30a6d68e9424f264d433cf2bc9e1d8da9ccbb1" translate="yes" xml:space="preserve">
          <source>If the variable is lexically bound, the value reported by &lt;code&gt;symbol-value&lt;/code&gt; is not necessarily the same as the variable&amp;rsquo;s lexical value, which is determined by the lexical environment rather than the symbol&amp;rsquo;s value cell. See &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;.</source>
          <target state="translated">変数が字句的にバインドされている場合、 &lt;code&gt;symbol-value&lt;/code&gt; によって報告される値は、記号の値セルではなく字句環境によって決定される変数の字句値と必ずしも同じではありません。&lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;変数スコープを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2cc97422846b390d66f71d3f440cd0096fde1d63" translate="yes" xml:space="preserve">
          <source>If the variable is terminal-local (see &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;), this function signals an error. Such variables cannot have buffer-local bindings as well.</source>
          <target state="translated">変数がターミナルローカルの場合（&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;複数のターミナルを&lt;/a&gt;参照）、この関数はエラーを通知します。このような変数は、バッファーローカルバインディングも持つことができません。</target>
        </trans-unit>
        <trans-unit id="5499f5ed3b50f30f4688e5c4db6fba581e67d1a2" translate="yes" xml:space="preserve">
          <source>If the variable&amp;rsquo;s name ends in &amp;lsquo;</source>
          <target state="translated">変数の名前が 'で終わる場合</target>
        </trans-unit>
        <trans-unit id="e9f61c12e5a938e87c2c68dc7d8b0cb42c3add87" translate="yes" xml:space="preserve">
          <source>If the variable&amp;rsquo;s value is &lt;code&gt;nil&lt;/code&gt; then there is no function to call.</source>
          <target state="translated">変数の値が &lt;code&gt;nil&lt;/code&gt; の場合、呼び出す関数はありません。</target>
        </trans-unit>
        <trans-unit id="da77a96697264f1d46e2cb1c7d972dbe27f731bf" translate="yes" xml:space="preserve">
          <source>If the vector does not include the port number, &lt;var&gt;p&lt;/var&gt;, or if &lt;var&gt;omit-port&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the result does not include the &lt;code&gt;:&lt;var&gt;p&lt;/var&gt;&lt;/code&gt; suffix.</source>
          <target state="translated">ベクトルにポート番号 &lt;var&gt;p&lt;/var&gt; が含まれていない場合、または &lt;var&gt;omit-port&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、結果には &lt;code&gt;:&lt;var&gt;p&lt;/var&gt;&lt;/code&gt; サフィックスが含まれません。</target>
        </trans-unit>
        <trans-unit id="025248ccceae386bc67ad5cd8e7c95dde75410bd" translate="yes" xml:space="preserve">
          <source>If the width is too small, &lt;code&gt;format&lt;/code&gt; does not truncate the object&amp;rsquo;s printed representation. Thus, you can use a width to specify a minimum spacing between columns with no risk of losing information. In the following two examples, &amp;lsquo;</source>
          <target state="translated">幅が小さすぎる場合、 &lt;code&gt;format&lt;/code&gt; はオブジェクトの印刷表現を切り捨てません。したがって、幅を使用して、情報を失うリスクなしに列間の最小間隔を指定できます。次の2つの例では、 '</target>
        </trans-unit>
        <trans-unit id="e88f1c383e1c6de576660f951c4c14f3986be3ba" translate="yes" xml:space="preserve">
          <source>If the window contains a row taller than the height of the window (for example in the presence of a large image), the scroll functions will adjust the window&amp;rsquo;s vertical scroll position to scroll the partially visible row. Lisp callers can disable this feature by binding the variable &lt;code&gt;auto-window-vscroll&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; (see &lt;a href=&quot;vertical-scrolling#Vertical-Scrolling&quot;&gt;Vertical Scrolling&lt;/a&gt;).</source>
          <target state="translated">ウィンドウにウィンドウの高さよりも高い行が含まれている場合（たとえば、大きな画像がある場合）、スクロール関数はウィンドウの垂直スクロール位置を調整して、部分的に表示されている行をスクロールします。Lispの呼び出し元は、変数 &lt;code&gt;auto-window-vscroll&lt;/code&gt; を &lt;code&gt;nil&lt;/code&gt; にバインドすることで、この機能を無効にできます（&lt;a href=&quot;vertical-scrolling#Vertical-Scrolling&quot;&gt;垂直スクロールを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="58da0ad987577d2d969ffa549fd2f1c2eb3eab39" translate="yes" xml:space="preserve">
          <source>If there are backups numbered 1, 2, 3, 5, and 7, and both of these variables have the value 2, then the backups numbered 1 and 2 are kept as old versions and those numbered 5 and 7 are kept as new versions; backup version 3 is excess. The function &lt;code&gt;find-backup-file-name&lt;/code&gt; (see &lt;a href=&quot;backup-names#Backup-Names&quot;&gt;Backup Names&lt;/a&gt;) is responsible for determining which backup versions to delete, but does not delete them itself.</source>
          <target state="translated">1、2、3、5、および7の番号のバックアップがあり、これらの変数の両方の値が2の場合、1と2の番号のバックアップは古いバージョンとして保持され、5と7の番号のバックアップは新しいバージョンとして保持されます。バックアップバージョン3が超過しています。関数 &lt;code&gt;find-backup-file-name&lt;/code&gt; （&lt;a href=&quot;backup-names#Backup-Names&quot;&gt;バックアップ名を&lt;/a&gt;参照）は、削除するバックアップバージョンを決定する役割を果たしますが、それ自体は削除しません。</target>
        </trans-unit>
        <trans-unit id="e6b4bfda96fbc609978591cef5622b754174446a" translate="yes" xml:space="preserve">
          <source>If there are two candidate windows of the same size, this function prefers the one that comes first in the cyclic ordering of windows, starting from the selected window.</source>
          <target state="translated">同じサイズの候補ウィンドウが2つある場合、この関数は、選択されたウィンドウから順に、周期的なウィンドウの順序で最初に来る方を優先します。</target>
        </trans-unit>
        <trans-unit id="7b7eb1941e0354d1c6f4238cc39982b2e0eea94d" translate="yes" xml:space="preserve">
          <source>If there is a dedicated window showing the buffer, and that window is the only one on its frame, this function also deletes that frame if it is not the only frame on the terminal.</source>
          <target state="translated">バッファを表示している専用のウィンドウがあり、そのウィンドウがそのフレーム上の唯一のウィンドウである場合、そのフレームが端末上の唯一のフレームでない場合、この関数はそのフレームも削除します。</target>
        </trans-unit>
        <trans-unit id="2ddb1fcae7a9d577f34c9ea1b850f472c8e9a139" translate="yes" xml:space="preserve">
          <source>If there is a fill prefix, &lt;code&gt;indent-region&lt;/code&gt; indents each line by making it start with the fill prefix.</source>
          <target state="translated">塗りつぶしプレフィックスがある場合、 &lt;code&gt;indent-region&lt;/code&gt; は、塗りつぶしプレフィックスで始まるようにして各行をインデントします。</target>
        </trans-unit>
        <trans-unit id="8e9e69163b0fbf6e36bd75fa2ef274e9f29d014e" translate="yes" xml:space="preserve">
          <source>If there is a fill prefix, and the second of the lines being joined starts with the prefix, then &lt;code&gt;delete-indentation&lt;/code&gt; deletes the fill prefix before joining the lines. See &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">塗りつぶしプレフィックスがあり、結合される2番目の行がプレフィックスで始まる場合、 &lt;code&gt;delete-indentation&lt;/code&gt; は、行を結合する前に塗りつぶしプレフィックスを削除します。&lt;a href=&quot;margins#Margins&quot;&gt;マージンを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="00c7be75182fe6893a2fc04a1937b3015736bb74" translate="yes" xml:space="preserve">
          <source>If there is a match, the value of &lt;code&gt;pcase&lt;/code&gt; is the value of the last of &lt;var&gt;body-forms&lt;/var&gt; in the successful clause. Otherwise, &lt;code&gt;pcase&lt;/code&gt; evaluates to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">一致するものがある場合、 &lt;code&gt;pcase&lt;/code&gt; の値は、successful句の最後の &lt;var&gt;body-forms&lt;/var&gt; の値です。それ以外の場合、 &lt;code&gt;pcase&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; と評価されます。</target>
        </trans-unit>
        <trans-unit id="239149c24e786c9e2489616d4cd84a2398b91519" translate="yes" xml:space="preserve">
          <source>If there is an image at the click location, this is the image object as returned by &lt;code&gt;find-image&lt;/code&gt; (see &lt;a href=&quot;defining-images#Defining-Images&quot;&gt;Defining Images&lt;/a&gt;); otherwise this is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">クリック位置に画像がある場合、これは &lt;code&gt;find-image&lt;/code&gt; によって返される画像オブジェクトです（画像の&lt;a href=&quot;defining-images#Defining-Images&quot;&gt;定義を&lt;/a&gt;参照）。それ以外の場合、これは &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="eea73d996587a876ca65a3ae23b074ee83114aeb" translate="yes" xml:space="preserve">
          <source>If there is more than one conversion, &lt;code&gt;write-region&lt;/code&gt; merges their annotations destructively into one sorted list. Later, when the text from the buffer is actually written to the file, it intermixes the specified annotations at the corresponding positions. All this takes place without modifying the buffer.</source>
          <target state="translated">複数の変換がある場合、 &lt;code&gt;write-region&lt;/code&gt; はそれらのアノテーションを1つのソートされたリストに破壊的にマージします。後で、バッファからのテキストが実際にファイルに書き込まれるときに、指定された注釈が対応する位置で混合されます。これはすべて、バッファを変更せずに行われます。</target>
        </trans-unit>
        <trans-unit id="bc71318b153defd40d75c8fb2df1691e14b3d63d" translate="yes" xml:space="preserve">
          <source>If there is no &lt;var&gt;prop&lt;/var&gt; property strictly speaking, but the character has a property category that is a symbol, then &lt;code&gt;get-text-property&lt;/code&gt; returns the &lt;var&gt;prop&lt;/var&gt; property of that symbol.</source>
          <target state="translated">厳密に言えば &lt;var&gt;prop&lt;/var&gt; プロパティがないが、文字にシンボルであるプロパティカテゴリがある場合、 &lt;code&gt;get-text-property&lt;/code&gt; はそのシンボルの &lt;var&gt;prop&lt;/var&gt; プロパティを返します。</target>
        </trans-unit>
        <trans-unit id="62df673db401de9102912271f958fe629ab77b49" translate="yes" xml:space="preserve">
          <source>If there is no applicable handler for the error, it terminates the current command and returns control to the editor command loop. (The command loop has an implicit handler for all kinds of errors.) The command loop&amp;rsquo;s handler uses the error symbol and associated data to print an error message. You can use the variable &lt;code&gt;command-error-function&lt;/code&gt; to control how this is done:</source>
          <target state="translated">エラーに適用できるハンドラーがない場合は、現在のコマンドを終了し、エディターのコマンドループに制御を戻します。 （コマンドループには、すべての種類のエラーに対する暗黙のハンドラーがあります。）コマンドループのハンドラーは、エラーシンボルと関連データを使用してエラーメッセージを出力します。変数 &lt;code&gt;command-error-function&lt;/code&gt; を使用して、これがどのように行われるかを制御できます。</target>
        </trans-unit>
        <trans-unit id="d13e9413b607a2a2de3ef7114c92fa2e573d925d" translate="yes" xml:space="preserve">
          <source>If there is no font that exactly matches all desired face attributes (&lt;code&gt;:width&lt;/code&gt;, &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt;, and &lt;code&gt;:slant&lt;/code&gt;), this variable specifies the order in which these attributes should be considered when selecting the closest matching font. The value should be a list containing those four attribute symbols, in order of decreasing importance. The default is &lt;code&gt;(:width :height :weight
:slant)&lt;/code&gt;.</source>
          <target state="translated">必要なすべての顔属性（ &lt;code&gt;:width&lt;/code&gt; 、 &lt;code&gt;:height&lt;/code&gt; 、 &lt;code&gt;:weight&lt;/code&gt; 、および &lt;code&gt;:slant&lt;/code&gt; ）に正確に一致するフォントがない場合、この変数は、最も一致するフォントを選択するときにこれらの属性を考慮する順序を指定します。値は、重要度の高い順に、これら4つの属性記号を含むリストである必要があります。デフォルトは &lt;code&gt;(:width :height :weight :slant)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cd34e79fd11cb89ebb18daa849151e90f2652afa" translate="yes" xml:space="preserve">
          <source>If there is no line corresponding to the specified &lt;var&gt;line&lt;/var&gt;, &lt;code&gt;window-line-height&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns a list &lt;code&gt;(&lt;var&gt;height&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt; &lt;var&gt;ypos&lt;/var&gt; &lt;var&gt;offbot&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;height&lt;/var&gt; is the height in pixels of the visible part of the line, &lt;var&gt;vpos&lt;/var&gt; and &lt;var&gt;ypos&lt;/var&gt; are the vertical position in lines and pixels of the line relative to the top of the first text line, and &lt;var&gt;offbot&lt;/var&gt; is the number of off-window pixels at the bottom of the text line. If there are off-window pixels at the top of the (first) text line, &lt;var&gt;ypos&lt;/var&gt; is negative.</source>
          <target state="translated">指定に対応する行が存在しない場合 &lt;var&gt;line&lt;/var&gt; 、 &lt;code&gt;window-line-height&lt;/code&gt; 返す &lt;code&gt;nil&lt;/code&gt; は。それ以外の場合は、リスト &lt;code&gt;(&lt;var&gt;height&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt; &lt;var&gt;ypos&lt;/var&gt; &lt;var&gt;offbot&lt;/var&gt;)&lt;/code&gt; を返します。ここで、 &lt;var&gt;height&lt;/var&gt; は線の表示部分のピクセル単位の高さ、 &lt;var&gt;vpos&lt;/var&gt; と &lt;var&gt;ypos&lt;/var&gt; は最初のテキストの上部に対する線と線のピクセル単位の垂直位置です。 line、 &lt;var&gt;offbot&lt;/var&gt; は、テキスト行の下部にあるウィンドウ外のピクセル数です。 （最初の）テキスト行の上部にウィンドウ外のピクセルがある場合、 &lt;var&gt;ypos&lt;/var&gt; は負です。</target>
        </trans-unit>
        <trans-unit id="58d49d5547a126f307c0ac2b901ef857396f1b2b" translate="yes" xml:space="preserve">
          <source>If there is no recent invocation of &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; that can be undone, this function tries to show a buffer from the buffer list of the frame &lt;var&gt;window&lt;/var&gt; appears on (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;).</source>
          <target state="translated">元に戻すことができる &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; の最近の呼び出しがない場合、この関数は、表示されるフレーム &lt;var&gt;window&lt;/var&gt; バッファリストからバッファを表示しようとします（&lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;バッファリストを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="9dd64eab7b6ffb8f7e5924983ab88700dd4b03cd" translate="yes" xml:space="preserve">
          <source>If there is no such window, this function tries to create a new window by splitting the selected one, and displays &lt;var&gt;buffer&lt;/var&gt; there. It will also try to adjust that window&amp;rsquo;s size provided &lt;var&gt;alist&lt;/var&gt; contains a suitable &lt;code&gt;window-height&lt;/code&gt; or &lt;code&gt;window-width&lt;/code&gt; entry, see above.</source>
          <target state="translated">そのようなウィンドウがない場合、この関数は選択されたウィンドウを分割して新しいウィンドウを作成しようとし、そこに &lt;var&gt;buffer&lt;/var&gt; を表示します。また、 &lt;var&gt;alist&lt;/var&gt; に適切な &lt;code&gt;window-height&lt;/code&gt; または &lt;code&gt;window-width&lt;/code&gt; エントリが含まれている場合は、ウィンドウのサイズを調整しようとします。上記を参照してください。</target>
        </trans-unit>
        <trans-unit id="078fd7bfdb217b2ab89e33373df21b9f10571d5f" translate="yes" xml:space="preserve">
          <source>If there is no window at that position, the return value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">その位置にウィンドウがない場合、戻り値は &lt;code&gt;nil&lt;/code&gt; です。場合は &lt;var&gt;frame&lt;/var&gt; 省略されるかされ &lt;code&gt;nil&lt;/code&gt; を選択したフレームがデフォルト。</target>
        </trans-unit>
        <trans-unit id="5dcb701415ed2df9a0a0875bc17e2ee8bca7d7e1" translate="yes" xml:space="preserve">
          <source>If there is no window at the specified position, the return value is &lt;code&gt;nil&lt;/code&gt; . Otherwise, the return value is one of the following:</source>
          <target state="translated">指定された位置にウィンドウがない場合、戻り値は &lt;code&gt;nil&lt;/code&gt; です。それ以外の場合、戻り値は次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="93b073a7aa145aa9caa6dda66c1ae5ec8fc7be99" translate="yes" xml:space="preserve">
          <source>If there is no window system support, this function does nothing.</source>
          <target state="translated">ウィンドウシステムがサポートされていない場合、この機能は何もしません。</target>
        </trans-unit>
        <trans-unit id="9913df0d9bdf18e69b5564a0b6970ac42b891192" translate="yes" xml:space="preserve">
          <source>If there was overflow in pure space (see &lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Pure Storage&lt;/a&gt;), and Emacs was dumped using the (now obsolete) &lt;code&gt;unexec&lt;/code&gt; method (see &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;), then &lt;code&gt;garbage-collect&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, because a real garbage collection cannot be done in that case.</source>
          <target state="translated">純粋な空間であっオーバーフローした場合（参照&lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;ピュアストレージ&lt;/a&gt;）、およびEmacsは（現在は廃止）を使用してダンプした &lt;code&gt;unexec&lt;/code&gt; 方法（参照&lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;ビルのEmacsを&lt;/a&gt;）、その後、 &lt;code&gt;garbage-collect&lt;/code&gt; リターンは &lt;code&gt;nil&lt;/code&gt; を実際のガベージコレクションが、その場合には行うことはできませんので、。</target>
        </trans-unit>
        <trans-unit id="2d00cfb9d4ff8180801f1e00b989d13809bdad99" translate="yes" xml:space="preserve">
          <source>If there was previously no binding for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;keymap&lt;/var&gt;, the new binding is added at the beginning of &lt;var&gt;keymap&lt;/var&gt;. The order of bindings in a keymap makes no difference for keyboard input, but it does matter for menu keymaps (see &lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;Menu Keymaps&lt;/a&gt;).</source>
          <target state="translated">以前に &lt;var&gt;keymap&lt;/var&gt; に &lt;var&gt;key&lt;/var&gt; のバインディングがなかった場合、新しいバインディングが &lt;var&gt;keymap&lt;/var&gt; の先頭に追加されます。キーマップでバインディングの順序は、キーボード入力の違いはありませんが、それは（参照メニューキーマップのための問題でない&lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;メニューキーマップを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bc26661694c756b8d17373d3511cb3072fe325ce" translate="yes" xml:space="preserve">
          <source>If these measures are not sufficient to prevent malfunction, a library can define an explicit unloader named &lt;code&gt;&lt;var&gt;feature&lt;/var&gt;-unload-function&lt;/code&gt;. If that symbol is defined as a function, &lt;code&gt;unload-feature&lt;/code&gt; calls it with no arguments before doing anything else. It can do whatever is appropriate to unload the library. If it returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;unload-feature&lt;/code&gt; proceeds to take the normal unload actions. Otherwise it considers the job to be done.</source>
          <target state="translated">これらの措置は、誤動作を防止するのに十分でない場合は、ライブラリーは、指定された明示的なアンローダ定義することができ &lt;code&gt;&lt;var&gt;feature&lt;/var&gt;-unload-function&lt;/code&gt; 。そのシンボルが関数として定義されている場合、 &lt;code&gt;unload-feature&lt;/code&gt; は、他の処理を行う前に、引数なしでシンボルを呼び出します。ライブラリをアンロードするために適切なことは何でもできます。 &lt;code&gt;nil&lt;/code&gt; が返された場合、 &lt;code&gt;unload-feature&lt;/code&gt; は通常のアンロードアクションを実行します。それ以外の場合は、ジョブが実行されたと見なします。</target>
        </trans-unit>
        <trans-unit id="f6e978456ddb3af8bdb29674f743e9d5dd150503" translate="yes" xml:space="preserve">
          <source>If these parameters include &lt;code&gt;(minibuffer . nil)&lt;/code&gt;, that indicates that the initial frame should have no minibuffer. In this case, Emacs creates a separate &lt;em&gt;minibuffer-only frame&lt;/em&gt; as well.</source>
          <target state="translated">これらのパラメータに &lt;code&gt;(minibuffer . nil)&lt;/code&gt; 含まれている場合、それは最初のフレームにミニバッファがないことを示します。この場合、Emacsは別の&lt;em&gt;ミニバッファーのみのフレーム&lt;/em&gt;も作成します。</target>
        </trans-unit>
        <trans-unit id="45a33a7d9575de222295306570ac344670f6cf04" translate="yes" xml:space="preserve">
          <source>If these settings affect the frame geometry and appearance, you&amp;rsquo;ll see the frame appear with the wrong ones and then change to the specified ones. If that bothers you, you can specify the same geometry and appearance with X resources; those do take effect before the frame is created. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;X Resources&lt;/a&gt; in</source>
          <target state="translated">これらの設定がフレームの形状と外観に影響を与える場合は、フレームが間違ったもので表示されてから、指定されたものに変更されます。それが気になる場合は、Xリソースで同じジオメトリと外観を指定できます。これらは、フレームが作成される前に有効になります。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;Xリソース&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="20b37a1a8d0ef1b02a68fec7c144c8fa31d612e3" translate="yes" xml:space="preserve">
          <source>If these two fields are not equal, a change in the status of the process needs to be reported, either by running the sentinel or by inserting a message in the process buffer.</source>
          <target state="translated">これら2つのフィールドが等しくない場合、プロセスの状態の変化は、センチネルを実行するか、プロセスバッファにメッセージを挿入することで報告される必要があります。</target>
        </trans-unit>
        <trans-unit id="9e4a278a7bb8c7d888ffd1bd92ec0c91aad99bbe" translate="yes" xml:space="preserve">
          <source>If these two values differ, each of them is called (if not &lt;code&gt;nil&lt;/code&gt;) with two arguments: the old value of point, and the new one.</source>
          <target state="translated">これらの2つの値が異なる場合、それぞれが（ &lt;code&gt;nil&lt;/code&gt; でない場合は）2つの引数（pointの古い値と新しい値）で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5bb514ff1bb5eb470a34a42dcf8fc1976c539473" translate="yes" xml:space="preserve">
          <source>If this attempts to move past the beginning or end of the buffer (or the limits of the accessible portion, when narrowing is in effect), it signals an error with error symbol &lt;code&gt;beginning-of-buffer&lt;/code&gt; or &lt;code&gt;end-of-buffer&lt;/code&gt;.</source>
          <target state="translated">これがバッファの開始または終了（またはナローイングが有効な場合はアクセス可能な部分の制限）を超えて移動しようとすると、エラーシンボル &lt;code&gt;beginning-of-buffer&lt;/code&gt; または &lt;code&gt;end-of-buffer&lt;/code&gt; でエラーを通知します。</target>
        </trans-unit>
        <trans-unit id="d89a8b26977d8b1cba2b979d344a05b8f10a0e1c" translate="yes" xml:space="preserve">
          <source>If this buffer local variable is non-&lt;code&gt;nil&lt;/code&gt;, a single character which usually terminates a comment doesn&amp;rsquo;t do so when that character is escaped. This is used in C and C++ Modes, where line comments starting with &amp;lsquo;</source>
          <target state="translated">このバッファローカル変数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、通常コメントを終了する単一の文字は、その文字がエスケープされたときに終了しません。これは、CおよびC ++モードで使用され、 'で始まる行コメント</target>
        </trans-unit>
        <trans-unit id="2a78281c6da18de26fb269a25c35ff41b470eed4" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs Lisp files and buffers are evaluated using lexical binding instead of dynamic binding. (However, special variables are still dynamically bound; see below.) If &lt;code&gt;nil&lt;/code&gt;, dynamic binding is used for all local variables. This variable is typically set for a whole Emacs Lisp file, as a file local variable (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;). Note that unlike other such variables, this one must be set in the first line of a file.</source>
          <target state="translated">このbuffer-local変数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、EmacsLispファイルとバッファーは動的バインディングの代わりに字句バインディングを使用して評価されます。（ただし、特殊変数は引き続き動的にバインドされます。以下を参照してください。） &lt;code&gt;nil&lt;/code&gt; の場合、すべてのローカル変数に動的バインディングが使用されます。この変数は通常、Emacs Lispファイル全体に対してファイルローカル変数として設定されます（&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;ファイルローカル変数を&lt;/a&gt;参照）。他のそのような変数とは異なり、これはファイルの最初の行に設定する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5fd544423344dffb99b915492fe4d50fbde43e7e" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, it defines a &lt;em&gt;line prefix&lt;/em&gt; which Emacs displays at the start of every non-continuation line. Its value may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;). The value is interpreted in the same way as a &lt;code&gt;display&lt;/code&gt; text property. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">このバッファローカル変数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、Emacsがすべての非継続行の先頭に表示する&lt;em&gt;行プレフィックス&lt;/em&gt;を定義します。その値は、文字列または画像（&lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;その他の表示仕様を&lt;/a&gt;参照）、または &lt;code&gt;:width&lt;/code&gt; または &lt;code&gt;:align-to&lt;/code&gt; 表示プロパティ（&lt;a href=&quot;specified-space#Specified-Space&quot;&gt;指定されたスペースを&lt;/a&gt;参照）で指定された空白のストレッチです。値は、 &lt;code&gt;display&lt;/code&gt; テキストプロパティと同じ方法で解釈されます。&lt;a href=&quot;display-property#Display-Property&quot;&gt;表示プロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7ed4e323befa87981b8acf726e4f3b6b4fee8d81" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, it defines a &lt;em&gt;wrap prefix&lt;/em&gt; which Emacs displays at the start of every continuation line. (If lines are truncated, &lt;code&gt;wrap-prefix&lt;/code&gt; is never used.) Its value may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;). The value is interpreted in the same way as a &lt;code&gt;display&lt;/code&gt; text property. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">このbuffer-local変数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、Emacsがすべての継続行の先頭に表示する&lt;em&gt;ラッププレフィックス&lt;/em&gt;を定義します。 （行が切り捨てられている場合、 &lt;code&gt;wrap-prefix&lt;/code&gt; は使用されません。）その値は、文字列または画像（&lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;その他の表示仕様を&lt;/a&gt;参照）、または &lt;code&gt;:width&lt;/code&gt; または &lt;code&gt;:align-to&lt;/code&gt; 表示プロパティで指定された空白のストレッチ（&lt;a href=&quot;specified-space#Specified-Space&quot;&gt;指定されたスペースを&lt;/a&gt;参照してください）。値は、 &lt;code&gt;display&lt;/code&gt; テキストプロパティと同じ方法で解釈されます。&lt;a href=&quot;display-property#Display-Property&quot;&gt;表示プロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5b2093e43127b528d7fa6ef0ef8cefd2e58a3d1e" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, lines that extend beyond the right edge of the window are truncated; otherwise, they are continued. As a special exception, the variable &lt;code&gt;truncate-partial-width-windows&lt;/code&gt; takes precedence in &lt;em&gt;partial-width&lt;/em&gt; windows (i.e., windows that do not occupy the entire frame width).</source>
          <target state="translated">このバッファローカル変数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、ウィンドウの右端を超えて延びる行は切り捨てられます。それ以外の場合は継続されます。特別な例外として、変数 &lt;code&gt;truncate-partial-width-windows&lt;/code&gt; は、&lt;em&gt;部分幅&lt;/em&gt;ウィンドウ（つまり、フレーム幅全体を占めないウィンドウ）で優先されます。</target>
        </trans-unit>
        <trans-unit id="432a86badb47f48e7893242df18107541092759f" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, the buffer will have its state saved in the desktop file at desktop save. If the value is a function, it is called at desktop save with argument &lt;var&gt;desktop-dirname&lt;/var&gt;, and its value is saved in the desktop file along with the state of the buffer for which it was called. When file names are returned as part of the auxiliary information, they should be formatted using the call</source>
          <target state="translated">このbuffer-local変数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、バッファーの状態はデスクトップ保存時にデスクトップファイルに保存されます。値が関数の場合、引数 &lt;var&gt;desktop-dirname&lt;/var&gt; を指定してデスクトップ保存時に呼び出され、その値は、呼び出されたバッファーの状態とともにデスクトップファイルに保存されます。補助情報の一部としてファイル名が返される場合は、呼び出しを使用してファイル名をフォーマットする必要があります</target>
        </trans-unit>
        <trans-unit id="aea1538287ef132a6f081b048de51ee7126dd3d0" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, the size of any window displaying the buffer cannot normally be changed. Deleting a window or changing the frame&amp;rsquo;s size may still change the window&amp;rsquo;s size, if there is no choice.</source>
          <target state="translated">このバッファローカル変数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、通常、バッファを表示するウィンドウのサイズは変更できません。選択の余地がない場合、ウィンドウを削除したり、フレームのサイズを変更したりすると、ウィンドウのサイズが変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="ca6416739929a65d7f2b8c3c029749537cabf4cd" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs displays &amp;lsquo;</source>
          <target state="translated">このバッファローカル変数が &lt;code&gt;nil&lt;/code&gt; 以外の場合、Emacsは 'を表示します</target>
        </trans-unit>
        <trans-unit id="f7b2357a9b265553c83c5f86a847eef1e6ada00f" translate="yes" xml:space="preserve">
          <source>If this command acts on the entire buffer (i.e., if called interactively with the mark inactive, or called from Lisp with &lt;var&gt;end&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt;), it also deletes all trailing lines at the end of the buffer if the variable &lt;code&gt;delete-trailing-lines&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このコマンドがバッファ全体に作用する場合（つまり、マークが非アクティブでインタラクティブに呼び出された場合、またはLispから &lt;var&gt;end&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; で呼び出された場合）、変数 &lt;code&gt;delete-trailing-lines&lt;/code&gt; がnonでない場合は、バッファの最後にあるすべての末尾行も削除されます。- &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10e05f72983ccd5f7221cc5bbedbc6e56e4772a2" translate="yes" xml:space="preserve">
          <source>If this date doesn&amp;rsquo;t exist (if you&amp;rsquo;re running this on January 31st, for instance), then the date will be shifted back until you get a valid date (which will be February 28th or 29th, depending).</source>
          <target state="translated">この日付が存在しない場合（たとえば、1月31日に実行している場合）、有効な日付（2月28日または29日に応じて）を取得するまで日付がシフトバックされます。</target>
        </trans-unit>
        <trans-unit id="6021a1625b26607bebed3ac67c79e7ec4507fa5a" translate="yes" xml:space="preserve">
          <source>If this flag is non-&lt;code&gt;nil&lt;/code&gt;, it says that the window has been scrolled explicitly by the Lisp program, and the value of the window&amp;rsquo;s &lt;code&gt;start&lt;/code&gt; was set for redisplay to honor. This affects what the next redisplay does if point is off the screen: instead of scrolling the window to show the text around point, it moves point to a location that is on the screen.</source>
          <target state="translated">このフラグが &lt;code&gt;nil&lt;/code&gt; 以外の場合は、ウィンドウがLispプログラムによって明示的にスクロールされており、ウィンドウの &lt;code&gt;start&lt;/code&gt; 値が再表示用に設定されていることを示しています。これは、ポイントが画面外にある場合の次の再表示の動作に影響します。ウィンドウをスクロールしてポイントの周囲のテキストを表示する代わりに、ポイントを画面上の場所に移動します。</target>
        </trans-unit>
        <trans-unit id="d6d906318560283537873b00d59001402d7d79d1" translate="yes" xml:space="preserve">
          <source>If this function chooses a window on another frame, it makes that frame visible and, unless &lt;var&gt;alist&lt;/var&gt; contains an &lt;code&gt;inhibit-switch-frame&lt;/code&gt; entry, raises that frame if necessary.</source>
          <target state="translated">この関数が別のフレームのウィンドウを選択すると、そのフレームが表示され、 &lt;var&gt;alist&lt;/var&gt; &lt;code&gt;inhibit-switch-frame&lt;/code&gt; エントリが含まれていない限り、必要に応じてそのフレームが表示されます。</target>
        </trans-unit>
        <trans-unit id="083f00a7a5dc646d622c67db6c142468e4d124a3" translate="yes" xml:space="preserve">
          <source>If this function finds a match, the index of the first character beyond the match is available as &lt;code&gt;(match-end 0)&lt;/code&gt;. See &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;.</source>
          <target state="translated">この関数が一致を見つけた場合、一致を超えた最初の文字のインデックスは &lt;code&gt;(match-end 0)&lt;/code&gt; として使用できます。&lt;a href=&quot;match-data#Match-Data&quot;&gt;一致データを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="00afe0829cdcf5109e09154bc5fa5ac61c0045b3" translate="yes" xml:space="preserve">
          <source>If this function is called more than once for the same &lt;var&gt;tabname&lt;/var&gt;, subsequent calls add the definitions in &lt;var&gt;definitions&lt;/var&gt; to &lt;var&gt;tabname&lt;/var&gt;, rather than overwriting the entire original contents. (A subsequent call only overrides abbrevs explicitly redefined or undefined in &lt;var&gt;definitions&lt;/var&gt;.)</source>
          <target state="translated">この関数が同じ &lt;var&gt;tabname&lt;/var&gt; に対して複数回呼び出された場合、後続の呼び出しは、元のコンテンツ全体を上書きするのではなく、定義内の &lt;var&gt;definitions&lt;/var&gt; を &lt;var&gt;tabname&lt;/var&gt; に追加します。（後続の呼び出しは、定義で明示的に再定義または未定義の略語のみをオーバーライドし &lt;var&gt;definitions&lt;/var&gt; 。）</target>
        </trans-unit>
        <trans-unit id="ce7c75305a7d83b0473e741f01d7a4f352cc4272" translate="yes" xml:space="preserve">
          <source>If this function reaches the end of the buffer (or of the accessible portion, if narrowing is in effect), it positions point there. No error is signaled.</source>
          <target state="translated">この関数は、バッファの終端(またはアクセス可能な部分、絞り込みが行われている場合)に到達した場合、そこにポイントを配置します。エラーは発生しません。</target>
        </trans-unit>
        <trans-unit id="869432596a2a5223e5603635258e0bd03b99e0ab" translate="yes" xml:space="preserve">
          <source>If this function returns &lt;code&gt;fail&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; will skip the execution of any further display actions and return &lt;code&gt;nil&lt;/code&gt; immediately. If this function returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; will continue with the next display action, if any.</source>
          <target state="translated">この関数が &lt;code&gt;fail&lt;/code&gt; を返す場合、 &lt;code&gt;display-buffer&lt;/code&gt; はそれ以上の表示アクションの実行をスキップし、すぐに &lt;code&gt;nil&lt;/code&gt; を返します。この関数が &lt;code&gt;nil&lt;/code&gt; を返す場合、 &lt;code&gt;display-buffer&lt;/code&gt; は次の表示アクション（存在する場合）を続行します。</target>
        </trans-unit>
        <trans-unit id="4cf9767642228285268994a6ab6915acdd90f010" translate="yes" xml:space="preserve">
          <source>If this function returns a vector, Emacs will decide, as part of the text encoding or decoding process, what eol conversion to use. For decoding, the end-of-line format of the text is auto-detected, and the eol conversion is set to match it (e.g., DOS-style CRLF format will imply &lt;code&gt;dos&lt;/code&gt; eol conversion). For encoding, the eol conversion is taken from the appropriate default coding system (e.g., default value of &lt;code&gt;buffer-file-coding-system&lt;/code&gt; for &lt;code&gt;buffer-file-coding-system&lt;/code&gt;), or from the default eol conversion appropriate for the underlying platform.</source>
          <target state="translated">この関数がベクトルを返す場合、Emacsはテキストのエンコードまたはデコードプロセスの一部として、使用するeol変換を決定します。デコードの場合、テキストの行末形式が自動検出され、eol変換がそれに一致するように設定されます（たとえば、DOSスタイルのCRLF形式は &lt;code&gt;dos&lt;/code&gt; eol変換を意味します）。エンコーディングの場合、eol変換は、適切なデフォルトのコーディングシステム（たとえば、 &lt;code&gt;buffer-file-coding-system&lt;/code&gt; の &lt;code&gt;buffer-file-coding-system&lt;/code&gt; のデフォルト値）から、または基盤となるプラットフォームに適したデフォルトのeol変換から取得されます。</target>
        </trans-unit>
        <trans-unit id="957e091db8006f7d5019b6610a727feaefde8377" translate="yes" xml:space="preserve">
          <source>If this is &lt;code&gt;above&lt;/code&gt;, the window-system will display the window that corresponds to the frame above all other window-system windows that do not have the &lt;code&gt;above&lt;/code&gt; property set. If this is &lt;code&gt;nil&lt;/code&gt;, the frame&amp;rsquo;s window is displayed below all windows that have the &lt;code&gt;above&lt;/code&gt; property set and above all windows that have the &lt;code&gt;below&lt;/code&gt; property set. If this is &lt;code&gt;below&lt;/code&gt;, the frame&amp;rsquo;s window is displayed below all windows that do not have the &lt;code&gt;below&lt;/code&gt; property set.</source>
          <target state="translated">これが &lt;code&gt;above&lt;/code&gt; 場合、window-systemは、 &lt;code&gt;above&lt;/code&gt; プロパティが設定されていない他のすべてのwindow-systemウィンドウの上にフレームに対応するウィンドウを表示します。これが &lt;code&gt;nil&lt;/code&gt; の場合、フレームのウィンドウは、 &lt;code&gt;above&lt;/code&gt; プロパティが設定されているすべてのウィンドウの &lt;code&gt;below&lt;/code&gt; 、および以下のプロパティが設定されているすべてのウィンドウの上に表示されます。これが &lt;code&gt;below&lt;/code&gt; 場合、フレームのウィンドウは、 &lt;code&gt;below&lt;/code&gt; プロパティが設定されていないすべてのウィンドウの下に表示されます。</target>
        </trans-unit>
        <trans-unit id="a1b52e2df3a9e454258b898cfd79cd310a2b4629" translate="yes" xml:space="preserve">
          <source>If this is &lt;code&gt;nil&lt;/code&gt;, minibuffer-only frames are never resized automatically.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; の場合、ミニバッファのみのフレームが自動的にサイズ変更されることはありません。</target>
        </trans-unit>
        <trans-unit id="1b97a488003cc5ca076256ac37cb97d8ce9b384b" translate="yes" xml:space="preserve">
          <source>If this is a cons cell with the symbol &lt;code&gt;text-pixels&lt;/code&gt; in its &lt;small&gt;CAR&lt;/small&gt;, the &lt;small&gt;CDR&lt;/small&gt; of that cell specifies the width of the frame&amp;rsquo;s text area in pixels.</source>
          <target state="translated">これが&lt;small&gt;CAR&lt;/small&gt;内にシンボル &lt;code&gt;text-pixels&lt;/code&gt; を持つconsセルである場合、そのセルの&lt;small&gt;CDR&lt;/small&gt;は、フレームのテキスト領域の幅をピクセル単位で指定します。&lt;small&gt;&lt;/small&gt;&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ceab50f0b43f6e3c6d961c1c4b3442015452d10b" translate="yes" xml:space="preserve">
          <source>If this is a function, that function is called with the minibuffer-only frame to be resized as sole argument. At the time this function is called, the buffer of the minibuffer window of that frame is the buffer whose contents will be shown the next time that window is redisplayed. The function is expected to fit the frame to the buffer in some appropriate way.</source>
          <target state="translated">これが関数の場合は、リサイズ対象のミニバッファのみのフレームを唯一の引数として、その関数が呼び出されます。この関数が呼び出された時点では、そのフレームのミニバッファウィンドウのバッファは、そのウィンドウが次回再表示されたときにその内容が表示されるバッファとなります。この関数は、何らかの適切な方法でフレームをバッファにフィットさせることが期待されます。</target>
        </trans-unit>
        <trans-unit id="ba58f7a102aacf78663d445e616b82cacc64e985" translate="yes" xml:space="preserve">
          <source>If this is a number, Emacs performs gamma correction which adjusts the brightness of all colors. The value should be the screen gamma of your display.</source>
          <target state="translated">これが数値の場合、Emacsは全色の明るさを調整するガンマ補正を行います。この値は、ディスプレイの画面のガンマ値でなければなりません。</target>
        </trans-unit>
        <trans-unit id="214dc66d885f284b40d9e4dd95560530b6fa7bad" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;fit-window-to-buffer&lt;/code&gt; can resize windows horizontally. If this is &lt;code&gt;nil&lt;/code&gt; (the default) &lt;code&gt;fit-window-to-buffer&lt;/code&gt; never resizes windows horizontally. If this is &lt;code&gt;only&lt;/code&gt;, it can resize windows horizontally only. Any other value means &lt;code&gt;fit-window-to-buffer&lt;/code&gt; can resize windows in both dimensions.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; はウィンドウのサイズを水平方向に変更できます。これが &lt;code&gt;nil&lt;/code&gt; （デフォルト）の場合、 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; はウィンドウのサイズを水平方向に変更しません。これが &lt;code&gt;only&lt;/code&gt; 場合、ウィンドウのサイズを水平方向にのみ変更できます。その他の値は、 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; が両方の次元でウィンドウのサイズを変更できることを意味します。</target>
        </trans-unit>
        <trans-unit id="68fad749eafc426bf4990d05bc7ff44d68a8f27b" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, Edebug saves and restores point in all displayed buffers.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; 以外の場合、Edebugは表示されているすべてのバッファにポイントを保存および復元します。</target>
        </trans-unit>
        <trans-unit id="c7d3e31eef250c7f036160920ec649b83cac0e19" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, Edebug saves and restores the window configuration. That takes some time, so if your program does not care what happens to the window configurations, it is better to set this variable to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; 以外の場合、Edebugはウィンドウ構成を保存および復元します。これには時間がかかるため、プログラムがウィンドウ構成に何が起こるかを気にしない場合は、この変数を &lt;code&gt;nil&lt;/code&gt; に設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="25397ea9796e92b2f97a1c9835eb561c55c0d2c6" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, Lisp programs and the Emacs user can use the mark even when it is inactive. This option affects the behavior of Transient Mark mode. When the option is non-&lt;code&gt;nil&lt;/code&gt;, deactivation of the mark turns off region highlighting, but commands that use the mark behave as if the mark were still active.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; でない場合、LispプログラムとEmacsユーザーは、マークが非アクティブの場合でもマークを使用できます。このオプションは、トランジェントマークモードの動作に影響します。オプションが &lt;code&gt;nil&lt;/code&gt; 以外の場合、マークを非アクティブにすると領域の強調表示がオフになりますが、マークを使用するコマンドは、マークがまだアクティブであるかのように動作します。</target>
        </trans-unit>
        <trans-unit id="32e5f481bd60270d4d523952079fe2b86a69f722" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, activation of the minibuffer raises the frame that the minibuffer window is in.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; 以外の場合、ミニバッファをアクティブにすると、ミニバッファウィンドウが表示されているフレームが発生します。</target>
        </trans-unit>
        <trans-unit id="4cd5343813932e73cf5340856c97ee940339918f" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, it specifies how Emacs should ring the bell. Its value should be a function of no arguments. If this is non-&lt;code&gt;nil&lt;/code&gt;, it takes precedence over the &lt;code&gt;visible-bell&lt;/code&gt; variable.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; でない場合は、Emacsがベルを鳴らす方法を指定します。その値は、引数なしの関数である必要があります。これが &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;visible-bell&lt;/code&gt; 変数よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="efc97046a89125b922e5821a3169617150b06d88" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, it suppresses the display of any truncation and continuation glyphs (see &lt;a href=&quot;truncation#Truncation&quot;&gt;Truncation&lt;/a&gt;) for all buffers displayed by this frame. This is useful to eliminate such glyphs when fitting a frame to its buffer via &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</source>
          <target state="translated">これが非であれば &lt;code&gt;nil&lt;/code&gt; に、それは（参照任意の切り捨てと継続グリフの表示を抑制&lt;a href=&quot;truncation#Truncation&quot;&gt;切り捨てを&lt;/a&gt;このフレームで表示されるすべてのバッファのため）。これは、 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; を介してフレームをそのバッファーにフィッティングするときにそのようなグリフを削除するのに役立ち&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;ます&lt;/a&gt;（ウィンドウのサイズ変更を参照）。</target>
        </trans-unit>
        <trans-unit id="15bc554b1227e9ff4e2721564b7c2b2775503828" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, its value specifies the current input method function.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; 以外の場合、その値は現在の入力方式の関数を指定します。</target>
        </trans-unit>
        <trans-unit id="d8ebd7b13853249094ed488c8f78e6577cc51264" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, lines exactly as wide as the window (not counting the final newline character) are not continued. Instead, when point is at the end of the line, the cursor appears in the right fringe.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; 以外の場合、ウィンドウとまったく同じ幅の行（最後の改行文字は数えません）は継続されません。代わりに、ポイントが行の終わりにある場合、カーソルは右フリンジに表示されます。</target>
        </trans-unit>
        <trans-unit id="e8990e9caa5c1237e7d8e51a9c922fecc23e5895" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, normal evaluation of defining forms such as &lt;code&gt;defun&lt;/code&gt; and &lt;code&gt;defmacro&lt;/code&gt; instruments them for Edebug. This applies to &lt;code&gt;eval-defun&lt;/code&gt;, &lt;code&gt;eval-region&lt;/code&gt;, &lt;code&gt;eval-buffer&lt;/code&gt;, and &lt;code&gt;eval-current-buffer&lt;/code&gt;.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; でない場合、 &lt;code&gt;defun&lt;/code&gt; や &lt;code&gt;defmacro&lt;/code&gt; などの定義フォームの通常の評価では、Edebug用にそれらが計測されます。これは、 &lt;code&gt;eval-defun&lt;/code&gt; 、 &lt;code&gt;eval-region&lt;/code&gt; 、 &lt;code&gt;eval-buffer&lt;/code&gt; 、および &lt;code&gt;eval-current-buffer&lt;/code&gt; に適用されます。</target>
        </trans-unit>
        <trans-unit id="9d6c08e8d8b954fd9b6294fd0ec73a15ae4084db" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, that means to print quoted forms using abbreviated reader syntax, e.g., &lt;code&gt;(quote foo)&lt;/code&gt; prints as &lt;code&gt;'foo&lt;/code&gt;, and &lt;code&gt;(function foo)&lt;/code&gt; as &lt;code&gt;#'foo&lt;/code&gt;. The default is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; 以外の場合は、省略されたリーダー構文を使用して引用符付きフォームを出力することを意味します。たとえば、 &lt;code&gt;(quote foo)&lt;/code&gt; は &lt;code&gt;'foo&lt;/code&gt; として出力し、 &lt;code&gt;(function foo)&lt;/code&gt; は &lt;code&gt;#'foo&lt;/code&gt; として出力します。デフォルトは &lt;code&gt;t&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0bd893cb621263d5a8aed807abb674c372296c4e" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the byte compiler generates compiled files that are set up for dynamic function loading.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; 以外の場合、バイトコンパイラは動的関数ロード用に設定されたコンパイル済みファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="f671cbf7a74fb9649d8457f3817e33c450312bf6" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the byte compiler generates compiled files that are set up for dynamic loading of documentation strings.</source>
          <target state="translated">これが &lt;code&gt;nil&lt;/code&gt; 以外の場合、バイトコンパイラは、ドキュメント文字列の動的ロード用に設定されたコンパイル済みファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="b07863475998c4a32689d25fb90d69b1da1bf839" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the commands &lt;code&gt;eval-defun&lt;/code&gt;, &lt;code&gt;eval-region&lt;/code&gt;, &lt;code&gt;eval-buffer&lt;/code&gt;, and &lt;code&gt;eval-current-buffer&lt;/code&gt; instrument all forms, even those that don&amp;rsquo;t define anything. This doesn&amp;rsquo;t apply to loading or evaluations in the minibuffer.</source>
          <target state="translated">If this is non- &lt;code&gt;nil&lt;/code&gt; , the commands &lt;code&gt;eval-defun&lt;/code&gt; , &lt;code&gt;eval-region&lt;/code&gt; , &lt;code&gt;eval-buffer&lt;/code&gt; , and &lt;code&gt;eval-current-buffer&lt;/code&gt; instrument all forms, even those that don&amp;rsquo;t define anything. This doesn&amp;rsquo;t apply to loading or evaluations in the minibuffer.</target>
        </trans-unit>
        <trans-unit id="44390378a6c86190f73e863e432a1f4ef3129c93" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the syntax scanning functions, like &lt;code&gt;forward-sexp&lt;/code&gt;, pay attention to &lt;code&gt;syntax-table&lt;/code&gt; text properties. Otherwise they use only the current syntax table.</source>
          <target state="translated">If this is non- &lt;code&gt;nil&lt;/code&gt; , the syntax scanning functions, like &lt;code&gt;forward-sexp&lt;/code&gt; , pay attention to &lt;code&gt;syntax-table&lt;/code&gt; text properties. Otherwise they use only the current syntax table.</target>
        </trans-unit>
        <trans-unit id="31979f380b3a283a11adf5b42adad210b4c1c1c0" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, then this frame is not eligible as candidate for the functions &lt;code&gt;next-frame&lt;/code&gt;, &lt;code&gt;previous-frame&lt;/code&gt; (see &lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;Finding All Frames&lt;/a&gt;) and &lt;code&gt;other-frame&lt;/code&gt;, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;Frame Commands&lt;/a&gt; in</source>
          <target state="translated">If this is non- &lt;code&gt;nil&lt;/code&gt; , then this frame is not eligible as candidate for the functions &lt;code&gt;next-frame&lt;/code&gt; , &lt;code&gt;previous-frame&lt;/code&gt; (see &lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;Finding All Frames&lt;/a&gt;) and &lt;code&gt;other-frame&lt;/code&gt; , see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;Frame Commands&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="7474f5eb32084fc7c649f56db83b1ebc853f111c" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, trace each function entry and exit. Tracing output is displayed in a buffer named</source>
          <target state="translated">If this is non- &lt;code&gt;nil&lt;/code&gt; , trace each function entry and exit. Tracing output is displayed in a buffer named</target>
        </trans-unit>
        <trans-unit id="966b0b23e2e6a979368c63d07ebeae90cd5c5031" translate="yes" xml:space="preserve">
          <source>If this is non-zero, killing Emacs while this process is still running does not ask for confirmation about killing the process.</source>
          <target state="translated">これが0以外の場合、このプロセスが実行されている間にEmacsを終了させても、プロセスの終了についての確認は求められません。</target>
        </trans-unit>
        <trans-unit id="d54a1a91cde2285cd5aaadb10fc1f42680cf6093" translate="yes" xml:space="preserve">
          <source>If this is specified, the value should be the customization group for this mode. (Not all major modes have one.) The command &lt;code&gt;customize-mode&lt;/code&gt; uses this. &lt;code&gt;define-derived-mode&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; automatically define the specified customization group.</source>
          <target state="translated">If this is specified, the value should be the customization group for this mode. (Not all major modes have one.) The command &lt;code&gt;customize-mode&lt;/code&gt; uses this. &lt;code&gt;define-derived-mode&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; automatically define the specified customization group.</target>
        </trans-unit>
        <trans-unit id="04620961e87f58784713e3322ba28ec85c00503d" translate="yes" xml:space="preserve">
          <source>If this mode is appropriate only for specially-prepared text produced by the mode itself (rather than by the user typing at the keyboard or by an external file), then the major mode command symbol should have a property named &lt;code&gt;mode-class&lt;/code&gt; with value &lt;code&gt;special&lt;/code&gt;, put on as follows:</source>
          <target state="translated">If this mode is appropriate only for specially-prepared text produced by the mode itself (rather than by the user typing at the keyboard or by an external file), then the major mode command symbol should have a property named &lt;code&gt;mode-class&lt;/code&gt; with value &lt;code&gt;special&lt;/code&gt; , put on as follows:</target>
        </trans-unit>
        <trans-unit id="e52d7d62fa08aa799be7c38c4bcea4fc9b87548a" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;nil&lt;/code&gt; (the default), &lt;code&gt;scroll-up-command&lt;/code&gt; and &lt;code&gt;scroll-down-command&lt;/code&gt; simply signal an error when no more scrolling is possible.</source>
          <target state="translated">If this option is &lt;code&gt;nil&lt;/code&gt; (the default), &lt;code&gt;scroll-up-command&lt;/code&gt; and &lt;code&gt;scroll-down-command&lt;/code&gt; simply signal an error when no more scrolling is possible.</target>
        </trans-unit>
        <trans-unit id="c72c6e58405043640334e93fb6f7182db318cd87" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;nil&lt;/code&gt; (the default), a frame&amp;rsquo;s text pixel size is usually rounded to a multiple of the current values of that frame&amp;rsquo;s &lt;code&gt;frame-char-height&lt;/code&gt; and &lt;code&gt;frame-char-width&lt;/code&gt; whenever the frame is resized. If this is non-&lt;code&gt;nil&lt;/code&gt;, no rounding occurs, hence frame sizes can increase/decrease by one pixel.</source>
          <target state="translated">If this option is &lt;code&gt;nil&lt;/code&gt; (the default), a frame&amp;rsquo;s text pixel size is usually rounded to a multiple of the current values of that frame&amp;rsquo;s &lt;code&gt;frame-char-height&lt;/code&gt; and &lt;code&gt;frame-char-width&lt;/code&gt; whenever the frame is resized. If this is non- &lt;code&gt;nil&lt;/code&gt; , no rounding occurs, hence frame sizes can increase/decrease by one pixel.</target>
        </trans-unit>
        <trans-unit id="54e6a84c9b36ca0d120b8c3a7c43d66826e7e66f" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;nil&lt;/code&gt;, changing a frame&amp;rsquo;s font, menu bar, tool bar, internal borders, fringes or scroll bars may resize its outer frame in order to keep the number of columns or lines of its text area unaltered. If this option is &lt;code&gt;t&lt;/code&gt;, no such resizing is done.</source>
          <target state="translated">If this option is &lt;code&gt;nil&lt;/code&gt; , changing a frame&amp;rsquo;s font, menu bar, tool bar, internal borders, fringes or scroll bars may resize its outer frame in order to keep the number of columns or lines of its text area unaltered. If this option is &lt;code&gt;t&lt;/code&gt; , no such resizing is done.</target>
        </trans-unit>
        <trans-unit id="bc3d02de48ee15116c952f577e906c1c9aa16a73" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;t&lt;/code&gt;, whenever a scrolling command moves point off-window, Emacs tries to adjust point to keep the cursor at its old vertical position in the window, rather than the window edge.</source>
          <target state="translated">If this option is &lt;code&gt;t&lt;/code&gt; , whenever a scrolling command moves point off-window, Emacs tries to adjust point to keep the cursor at its old vertical position in the window, rather than the window edge.</target>
        </trans-unit>
        <trans-unit id="c9c66e4f3c606fe9374e63f54b58084764036d09" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;fit-window-to-buffer&lt;/code&gt; can fit a frame to its buffer. A frame is fit if and only if its root window is a live window and this option is non-&lt;code&gt;nil&lt;/code&gt;. If this is &lt;code&gt;horizontally&lt;/code&gt;, frames are fit horizontally only. If this is &lt;code&gt;vertically&lt;/code&gt;, frames are fit vertically only. Any other non-&lt;code&gt;nil&lt;/code&gt; value means frames can be resized in both dimensions.</source>
          <target state="translated">If this option is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;fit-window-to-buffer&lt;/code&gt; can fit a frame to its buffer. A frame is fit if and only if its root window is a live window and this option is non- &lt;code&gt;nil&lt;/code&gt; . If this is &lt;code&gt;horizontally&lt;/code&gt; , frames are fit horizontally only. If this is &lt;code&gt;vertically&lt;/code&gt; , frames are fit vertically only. Any other non- &lt;code&gt;nil&lt;/code&gt; value means frames can be resized in both dimensions.</target>
        </trans-unit>
        <trans-unit id="5a164d6ee90c48aec0e7a278ea57b7f2b904c6c5" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;kill-region&lt;/code&gt; does not signal an error if the buffer or text is read-only. Instead, it simply returns, updating the kill ring but not changing the buffer.</source>
          <target state="translated">If this option is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;kill-region&lt;/code&gt; does not signal an error if the buffer or text is read-only. Instead, it simply returns, updating the kill ring but not changing the buffer.</target>
        </trans-unit>
        <trans-unit id="22125abcac48d44de59b6d6f7908442688ad4bf5" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, Emacs moves the mouse pointer to the frame selected by &lt;code&gt;select-frame-set-input-focus&lt;/code&gt;. That function is used by a number of commands like, for example, &lt;code&gt;other-frame&lt;/code&gt; and &lt;code&gt;pop-to-buffer&lt;/code&gt;.</source>
          <target state="translated">If this option is non- &lt;code&gt;nil&lt;/code&gt; , Emacs moves the mouse pointer to the frame selected by &lt;code&gt;select-frame-set-input-focus&lt;/code&gt; . That function is used by a number of commands like, for example, &lt;code&gt;other-frame&lt;/code&gt; and &lt;code&gt;pop-to-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6926437ee3cbc9261b34b88045a049cd4e85b2e" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, then rather than stopping at the first suffix that exists, &lt;code&gt;load&lt;/code&gt; tests them all, and uses whichever file is the newest.</source>
          <target state="translated">If this option is non- &lt;code&gt;nil&lt;/code&gt; , then rather than stopping at the first suffix that exists, &lt;code&gt;load&lt;/code&gt; tests them all, and uses whichever file is the newest.</target>
        </trans-unit>
        <trans-unit id="7938d876e61b6c7f68a93ccf5def31340f0740d4" translate="yes" xml:space="preserve">
          <source>If this parameter is a number, the bottom edge of the frame never appears below the bottom edge of its display or parent frame. Moreover, as many pixels of the frame as specified by that number will remain visible when the frame is moved against any of the remaining edges of its display or parent frame. Setting this parameter is useful to guard against dragging a child frame with a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;drag-with-mode-line&lt;/code&gt; parameter completely out of the area of its parent frame.</source>
          <target state="translated">If this parameter is a number, the bottom edge of the frame never appears below the bottom edge of its display or parent frame. Moreover, as many pixels of the frame as specified by that number will remain visible when the frame is moved against any of the remaining edges of its display or parent frame. Setting this parameter is useful to guard against dragging a child frame with a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;drag-with-mode-line&lt;/code&gt; parameter completely out of the area of its parent frame.</target>
        </trans-unit>
        <trans-unit id="4992c37fede8a3de36e28c682e030ea0ca3db304" translate="yes" xml:space="preserve">
          <source>If this parameter is a number, the top edge of the frame never appears above the top edge of its display or parent frame. Moreover, as many pixels of the frame as specified by that number will remain visible when the frame is moved against any of the remaining edges of its display or parent frame. Setting this parameter is useful to guard against dragging a child frame with a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;drag-with-header-line&lt;/code&gt; parameter completely out of the area of its parent frame.</source>
          <target state="translated">If this parameter is a number, the top edge of the frame never appears above the top edge of its display or parent frame. Moreover, as many pixels of the frame as specified by that number will remain visible when the frame is moved against any of the remaining edges of its display or parent frame. Setting this parameter is useful to guard against dragging a child frame with a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;drag-with-header-line&lt;/code&gt; parameter completely out of the area of its parent frame.</target>
        </trans-unit>
        <trans-unit id="10409beb3adb01bf40f542ff77e3e5110bb6c63e" translate="yes" xml:space="preserve">
          <source>If this property is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a keymap for a portion of the text. This keymap is used when the character after point is within the overlay, and takes precedence over most other keymaps. See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;.</source>
          <target state="translated">If this property is non- &lt;code&gt;nil&lt;/code&gt; , it specifies a keymap for a portion of the text. This keymap is used when the character after point is within the overlay, and takes precedence over most other keymaps. See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2d2b81550b31723ed604392c207f47173dad656f" translate="yes" xml:space="preserve">
          <source>If this property is non-&lt;code&gt;nil&lt;/code&gt;, the overlay is deleted automatically if it becomes empty (i.e., if its length becomes zero). If you give an empty overlay (see &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;empty overlay&lt;/a&gt;) a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;evaporate&lt;/code&gt; property, that deletes it immediately. Note that, unless an overlay has this property, it will not be deleted when the text between its starting and ending positions is deleted from the buffer.</source>
          <target state="translated">If this property is non- &lt;code&gt;nil&lt;/code&gt; , the overlay is deleted automatically if it becomes empty (i.e., if its length becomes zero). If you give an empty overlay (see &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;empty overlay&lt;/a&gt;) a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;evaporate&lt;/code&gt; property, that deletes it immediately. Note that, unless an overlay has this property, it will not be deleted when the text between its starting and ending positions is deleted from the buffer.</target>
        </trans-unit>
        <trans-unit id="10e35c6643ea67ea950c9d4d716db33c0599a8da" translate="yes" xml:space="preserve">
          <source>If this property is omitted, it defaults to 50.</source>
          <target state="translated">このプロパティを省略した場合、デフォルトは 50 です。</target>
        </trans-unit>
        <trans-unit id="b5a662f58b04bc1493160f98949460c71e1112e3" translate="yes" xml:space="preserve">
          <source>If this user option is set to &lt;code&gt;t&lt;/code&gt; (the default), then Emacs asks for confirmation before killing processes on exit. If it is &lt;code&gt;nil&lt;/code&gt;, Emacs kills processes without confirmation, i.e., the query flag of all processes is ignored.</source>
          <target state="translated">If this user option is set to &lt;code&gt;t&lt;/code&gt; (the default), then Emacs asks for confirmation before killing processes on exit. If it is &lt;code&gt;nil&lt;/code&gt; , Emacs kills processes without confirmation, i.e., the query flag of all processes is ignored.</target>
        </trans-unit>
        <trans-unit id="7f1aca46aaa1831df876a405f5ebfb2e74ca7800" translate="yes" xml:space="preserve">
          <source>If this variable has a non-&lt;code&gt;nil&lt;/code&gt; value (the default), running the command &lt;code&gt;eval-expression&lt;/code&gt; causes &lt;code&gt;debug-on-error&lt;/code&gt; to be temporarily bound to &lt;code&gt;t&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</source>
          <target state="translated">If this variable has a non- &lt;code&gt;nil&lt;/code&gt; value (the default), running the command &lt;code&gt;eval-expression&lt;/code&gt; causes &lt;code&gt;debug-on-error&lt;/code&gt; to be temporarily bound to &lt;code&gt;t&lt;/code&gt; . See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="dc406ae5e5fdc48715cf4643b78845c64944a962" translate="yes" xml:space="preserve">
          <source>If this variable has a non-&lt;code&gt;nil&lt;/code&gt; value, ISO-2022 escape sequences are ignored when detecting the encoding of a region or a string. The result is that no text is ever detected as encoded in some ISO-2022 encoding, and all escape sequences become visible in a buffer. &lt;strong&gt;Warning:&lt;/strong&gt;&lt;em&gt;Use this variable with extreme caution, because many files in the Emacs distribution use ISO-2022 encoding.&lt;/em&gt;</source>
          <target state="translated">If this variable has a non- &lt;code&gt;nil&lt;/code&gt; value, ISO-2022 escape sequences are ignored when detecting the encoding of a region or a string. The result is that no text is ever detected as encoded in some ISO-2022 encoding, and all escape sequences become visible in a buffer. &lt;strong&gt;Warning:&lt;/strong&gt;&lt;em&gt;Use this variable with extreme caution, because many files in the Emacs distribution use ISO-2022 encoding.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5da5197b312d51b191187d6196c20e10a6137205" translate="yes" xml:space="preserve">
          <source>If this variable has a non-&lt;code&gt;nil&lt;/code&gt; value, null bytes are ignored when detecting the encoding of a region or a string. This allows the encoding of text that contains null bytes to be correctly detected, such as Info files with Index nodes.</source>
          <target state="translated">If this variable has a non- &lt;code&gt;nil&lt;/code&gt; value, null bytes are ignored when detecting the encoding of a region or a string. This allows the encoding of text that contains null bytes to be correctly detected, such as Info files with Index nodes.</target>
        </trans-unit>
        <trans-unit id="c373b5c3a8de63fb3cea0bba1d0eb1e3d3ef7af5" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt; (the default), or it fails to match a filename, the backup is made in the original file&amp;rsquo;s directory.</source>
          <target state="translated">If this variable is &lt;code&gt;nil&lt;/code&gt; (the default), or it fails to match a filename, the backup is made in the original file&amp;rsquo;s directory.</target>
        </trans-unit>
        <trans-unit id="9b260f60b0da661c6386e4a8c57481caca5f924e" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt; and the initial minibuffer contents are empty, the user may have to explicitly fetch the next history element to access a default value. If the variable is non-&lt;code&gt;nil&lt;/code&gt;, the initial minibuffer contents are always non-empty and the user can always request a default value by immediately typing</source>
          <target state="translated">If this variable is &lt;code&gt;nil&lt;/code&gt; and the initial minibuffer contents are empty, the user may have to explicitly fetch the next history element to access a default value. If the variable is non- &lt;code&gt;nil&lt;/code&gt; , the initial minibuffer contents are always non-empty and the user can always request a default value by immediately typing</target>
        </trans-unit>
        <trans-unit id="4a377c85d375a1d05f2bc24d6a94706665f459b2" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;split-window&lt;/code&gt; can only split a window (denoted by &lt;var&gt;window&lt;/var&gt;) if &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s screen area is large enough to accommodate both itself and the new window.</source>
          <target state="translated">If this variable is &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;split-window&lt;/code&gt; can only split a window (denoted by &lt;var&gt;window&lt;/var&gt; ) if &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s screen area is large enough to accommodate both itself and the new window.</target>
        </trans-unit>
        <trans-unit id="e5efa0bdf46c1cfda3ed747418a3db73ea898921" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-buffer&lt;/code&gt; displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; at the position of that buffer&amp;rsquo;s &lt;code&gt;point&lt;/code&gt;. If this variable is &lt;code&gt;already-displayed&lt;/code&gt;, it tries to display the buffer at its previous position in the selected window, provided the buffer is currently displayed in some other window on any visible or iconified frame. If this variable is &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;switch-to-buffer&lt;/code&gt; unconditionally tries to display the buffer at its previous position in the selected window.</source>
          <target state="translated">If this variable is &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;switch-to-buffer&lt;/code&gt; displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; at the position of that buffer&amp;rsquo;s &lt;code&gt;point&lt;/code&gt; . If this variable is &lt;code&gt;already-displayed&lt;/code&gt; , it tries to display the buffer at its previous position in the selected window, provided the buffer is currently displayed in some other window on any visible or iconified frame. If this variable is &lt;code&gt;t&lt;/code&gt; , &lt;code&gt;switch-to-buffer&lt;/code&gt; unconditionally tries to display the buffer at its previous position in the selected window.</target>
        </trans-unit>
        <trans-unit id="21114982217e29f559b82573a3eccc2b154e4432" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; may switch to any buffer, including those already shown in other windows.</source>
          <target state="translated">If this variable is &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; may switch to any buffer, including those already shown in other windows.</target>
        </trans-unit>
        <trans-unit id="d8a3d004b6873a2a169b03d65608121fffb72f67" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, Emacs does not lock files.</source>
          <target state="translated">If this variable is &lt;code&gt;nil&lt;/code&gt; , Emacs does not lock files.</target>
        </trans-unit>
        <trans-unit id="89623922f044cdd08657525c28b20ee10211a651" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;blink-matching-open&lt;/code&gt; does nothing.</source>
          <target state="translated">If this variable is &lt;code&gt;nil&lt;/code&gt; , then &lt;code&gt;blink-matching-open&lt;/code&gt; does nothing.</target>
        </trans-unit>
        <trans-unit id="2cfb381e21594551805791d32d6d3364b07223cd" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;read-from-minibuffer&lt;/code&gt; and &lt;code&gt;read-string&lt;/code&gt; strip all text properties from the minibuffer input before returning it. However, &lt;code&gt;read-no-blanks-input&lt;/code&gt; (see below), as well as &lt;code&gt;read-minibuffer&lt;/code&gt; and related functions (see &lt;a href=&quot;object-from-minibuffer#Object-from-Minibuffer&quot;&gt;Reading Lisp Objects With the Minibuffer&lt;/a&gt;), and all functions that do minibuffer input with completion, discard text properties unconditionally, regardless of the value of this variable.</source>
          <target state="translated">If this variable is &lt;code&gt;nil&lt;/code&gt; , then &lt;code&gt;read-from-minibuffer&lt;/code&gt; and &lt;code&gt;read-string&lt;/code&gt; strip all text properties from the minibuffer input before returning it. However, &lt;code&gt;read-no-blanks-input&lt;/code&gt; (see below), as well as &lt;code&gt;read-minibuffer&lt;/code&gt; and related functions (see &lt;a href=&quot;object-from-minibuffer#Object-from-Minibuffer&quot;&gt;Reading Lisp Objects With the Minibuffer&lt;/a&gt;), and all functions that do minibuffer input with completion, discard text properties unconditionally, regardless of the value of this variable.</target>
        </trans-unit>
        <trans-unit id="b1d0a7e3669bd5769ff2e4ddd7ec40d799965cf0" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, this does not necessarily mean that any window showing the buffer can be resized in the desired direction. To determine that, use the function &lt;code&gt;window-resizable&lt;/code&gt;. See &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;.</source>
          <target state="translated">If this variable is &lt;code&gt;nil&lt;/code&gt; , this does not necessarily mean that any window showing the buffer can be resized in the desired direction. To determine that, use the function &lt;code&gt;window-resizable&lt;/code&gt; . See &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a14af0d500a6d6203f4039a676d4516a111cf6ae" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, you cannot invoke minibuffer commands when the minibuffer is active, not even if you switch to another window to do it.</source>
          <target state="translated">If this variable is &lt;code&gt;nil&lt;/code&gt; , you cannot invoke minibuffer commands when the minibuffer is active, not even if you switch to another window to do it.</target>
        </trans-unit>
        <trans-unit id="594867f6c30f7651767ce9e8c5f29e2d63c57c0c" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;split-window&lt;/code&gt; tries to resize all windows that are part of the same combination as &lt;var&gt;window&lt;/var&gt;, in order to accommodate the new window. In particular, this may allow &lt;code&gt;split-window&lt;/code&gt; to succeed even if &lt;var&gt;window&lt;/var&gt; is a fixed-size window or too small to ordinarily split. Furthermore, subsequently resizing or deleting &lt;var&gt;window&lt;/var&gt; may resize all other windows in its combination.</source>
          <target state="translated">If this variable is &lt;code&gt;t&lt;/code&gt; , &lt;code&gt;split-window&lt;/code&gt; tries to resize all windows that are part of the same combination as &lt;var&gt;window&lt;/var&gt; , in order to accommodate the new window. In particular, this may allow &lt;code&gt;split-window&lt;/code&gt; to succeed even if &lt;var&gt;window&lt;/var&gt; is a fixed-size window or too small to ordinarily split. Furthermore, subsequently resizing or deleting &lt;var&gt;window&lt;/var&gt; may resize all other windows in its combination.</target>
        </trans-unit>
        <trans-unit id="d1240ec35ce1119433c9ff4d706e7e07c1704aa2" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;t&lt;/code&gt;, then saving a file deletes excess backup versions silently. If it is &lt;code&gt;nil&lt;/code&gt;, that means to ask for confirmation before deleting excess backups. Otherwise, they are not deleted at all.</source>
          <target state="translated">If this variable is &lt;code&gt;t&lt;/code&gt; , then saving a file deletes excess backup versions silently. If it is &lt;code&gt;nil&lt;/code&gt; , that means to ask for confirmation before deleting excess backups. Otherwise, they are not deleted at all.</target>
        </trans-unit>
        <trans-unit id="20cf7005f85044b4fe10e90fbd2922b7f7fb99a9" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt; (the default), Emacs makes backups by copying in cases where renaming would change either the owner or the group of the file.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; (the default), Emacs makes backups by copying in cases where renaming would change either the owner or the group of the file.</target>
        </trans-unit>
        <trans-unit id="6ac994bc716560b0f970621acd4b471ce55be78a" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt; when a command returns to the command loop, then the command loop does not check for those text properties, and does not move point out of sequences that have them.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; when a command returns to the command loop, then the command loop does not check for those text properties, and does not move point out of sequences that have them.</target>
        </trans-unit>
        <trans-unit id="bace1650d13777be92f95887dd4d32eecfa88f81" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; and related functions call it with no arguments when their argument message is &lt;code&gt;nil&lt;/code&gt; or the empty string.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;message&lt;/code&gt; and related functions call it with no arguments when their argument message is &lt;code&gt;nil&lt;/code&gt; or the empty string.</target>
        </trans-unit>
        <trans-unit id="c1f25dcc5e8473bcf19e57671b5e742689784221" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-buffer&lt;/code&gt; ignores case when performing completion while reading the buffer name.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;read-buffer&lt;/code&gt; ignores case when performing completion while reading the buffer name.</target>
        </trans-unit>
        <trans-unit id="bbc01c87c2c736a01297e40708d9bc2eea75308d" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-file-name&lt;/code&gt; ignores case when performing completion.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;read-file-name&lt;/code&gt; ignores case when performing completion.</target>
        </trans-unit>
        <trans-unit id="e1af2e516e1731ec5691914fe684ea6870a2bd9b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;scan-sexps&lt;/code&gt; treats all non-</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;scan-sexps&lt;/code&gt; treats all non-</target>
        </trans-unit>
        <trans-unit id="2806dadd88bb70627d555c7ccdb2df2e87d6e884" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;sort-subr&lt;/code&gt; and the other buffer sorting functions ignore case when comparing strings.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;sort-subr&lt;/code&gt; and the other buffer sorting functions ignore case when comparing strings.</target>
        </trans-unit>
        <trans-unit id="6c25756dd86611671f3153436090287d38ed5950" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-buffer&lt;/code&gt; respects display actions specified by &lt;code&gt;display-buffer-overriding-action&lt;/code&gt;, &lt;code&gt;display-buffer-alist&lt;/code&gt; and other display related variables.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;switch-to-buffer&lt;/code&gt; respects display actions specified by &lt;code&gt;display-buffer-overriding-action&lt;/code&gt; , &lt;code&gt;display-buffer-alist&lt;/code&gt; and other display related variables.</target>
        </trans-unit>
        <trans-unit id="2d9323d5a2f41b361036ddb3df85eeaea1baaabe" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; will refrain from switching to certain buffers. The following values can be used:</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; will refrain from switching to certain buffers. The following values can be used:</target>
        </trans-unit>
        <trans-unit id="6f8b633c15af3635e4d6fb6a6c0f5084235f704f" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; calls it as a function to do the job of displaying a help buffer. The function gets one argument, which is the buffer it should display.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; calls it as a function to do the job of displaying a help buffer. The function gets one argument, which is the buffer it should display.</target>
        </trans-unit>
        <trans-unit id="b45139ff1fb7adc7b74e6d5409a3a5983efc470b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs always makes backup files by copying. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , Emacs always makes backup files by copying. The default is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d51063434f8bbb63a99074f83c5e64c82816980" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs auto-saves buffers in the files they are visiting. That is, the auto-save is done in the same file that you are editing. Normally, this variable is &lt;code&gt;nil&lt;/code&gt;, so auto-save files have distinct names that are created by &lt;code&gt;make-auto-save-file-name&lt;/code&gt;.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , Emacs auto-saves buffers in the files they are visiting. That is, the auto-save is done in the same file that you are editing. Normally, this variable is &lt;code&gt;nil&lt;/code&gt; , so auto-save files have distinct names that are created by &lt;code&gt;make-auto-save-file-name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="834c09bab1aa496311263cf0de3e2ca620518527" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs displays a message at the beginning and end of garbage collection. The default value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , Emacs displays a message at the beginning and end of garbage collection. The default value is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3633f89136bf7feadfc976095b51e28ac6f62fd" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs does not look up X resources, and X resources do not have any effect when creating new frames.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , Emacs does not look up X resources, and X resources do not have any effect when creating new frames.</target>
        </trans-unit>
        <trans-unit id="207397c1e70879d418a5aeb0b3721f4a98bea246" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs makes backups by copying for files with multiple names (hard links). The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , Emacs makes backups by copying for files with multiple names (hard links). The default is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4133361e941fb85b4b5864cbd4b84b18bec370a2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs will try to automatically select the window under the mouse pointer. The following values are meaningful:</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , Emacs will try to automatically select the window under the mouse pointer. The following values are meaningful:</target>
        </trans-unit>
        <trans-unit id="3f388d3d4bc61aef5a9232085d49b686ff163ff7" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, a period followed by just one space does not count as the end of a sentence, and the filling functions avoid breaking the line at such a place.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , a period followed by just one space does not count as the end of a sentence, and the filling functions avoid breaking the line at such a place.</target>
        </trans-unit>
        <trans-unit id="950d5268ecb65fd2680e60c1d248cc988f2f3806" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, a sentence can end without a period. This is used for languages like Thai, where sentences end with a double space but without a period.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , a sentence can end without a period. This is used for languages like Thai, where sentences end with a double space but without a period.</target>
        </trans-unit>
        <trans-unit id="d3d32a32adfb3aeef6215fd4bfb85130c2a123e8" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, all of the change hooks are disabled; none of them run. This affects all the hook variables described above in this section, as well as the hooks attached to certain special text properties (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;) and overlay properties (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;).</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , all of the change hooks are disabled; none of them run. This affects all the hook variables described above in this section, as well as the hooks attached to certain special text properties (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;) and overlay properties (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="2ffc9890d3b90ef1f3080654443150dd4bbab62b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, backups are inhibited. It records the result of testing &lt;code&gt;backup-enable-predicate&lt;/code&gt; on the visited file name. It can also coherently be used by other mechanisms that inhibit backups based on which file is visited. For example, VC sets this variable non-&lt;code&gt;nil&lt;/code&gt; to prevent making backups for files managed with a version control system.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , backups are inhibited. It records the result of testing &lt;code&gt;backup-enable-predicate&lt;/code&gt; on the visited file name. It can also coherently be used by other mechanisms that inhibit backups based on which file is visited. For example, VC sets this variable non- &lt;code&gt;nil&lt;/code&gt; to prevent making backups for files managed with a version control system.</target>
        </trans-unit>
        <trans-unit id="dbec36e38f19eeb11c146f8269324b7fdf70520f" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, buffers that are visiting files have auto-saving enabled by default. Otherwise, they do not.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , buffers that are visiting files have auto-saving enabled by default. Otherwise, they do not.</target>
        </trans-unit>
        <trans-unit id="025314b7262d14c39abfca6e9831f30272667c3e" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, calling &lt;code&gt;recenter&lt;/code&gt; with a &lt;code&gt;nil&lt;/code&gt;&lt;var&gt;count&lt;/var&gt; argument and non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;redisplay&lt;/var&gt; argument redraws the frame. The default value is &lt;code&gt;tty&lt;/code&gt;, which means only redraw the frame if it is a tty frame.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , calling &lt;code&gt;recenter&lt;/code&gt; with a &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;count&lt;/var&gt; argument and non- &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;redisplay&lt;/var&gt; argument redraws the frame. The default value is &lt;code&gt;tty&lt;/code&gt; , which means only redraw the frame if it is a tty frame.</target>
        </trans-unit>
        <trans-unit id="3494024f21dd122ec5225998d1cc7fc1f54d85a6" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, certain motion functions including &lt;code&gt;forward-word&lt;/code&gt;, &lt;code&gt;forward-sentence&lt;/code&gt;, and &lt;code&gt;forward-paragraph&lt;/code&gt; ignore field boundaries.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , certain motion functions including &lt;code&gt;forward-word&lt;/code&gt; , &lt;code&gt;forward-sentence&lt;/code&gt; , and &lt;code&gt;forward-paragraph&lt;/code&gt; ignore field boundaries.</target>
        </trans-unit>
        <trans-unit id="bd0f3e86b9ecff032bd540684c751ffd8dd5b909" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, commands defined with &lt;code&gt;make-help-screen&lt;/code&gt; display their &lt;var&gt;help-line&lt;/var&gt; strings in the echo area at first, and display the longer &lt;var&gt;help-text&lt;/var&gt; strings only if the user types the help character again.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , commands defined with &lt;code&gt;make-help-screen&lt;/code&gt; display their &lt;var&gt;help-line&lt;/var&gt; strings in the echo area at first, and display the longer &lt;var&gt;help-text&lt;/var&gt; strings only if the user types the help character again.</target>
        </trans-unit>
        <trans-unit id="9750f1edf74db0b608b6fccefea113c32bd8ce2e" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, control characters in strings are printed as backslash sequences by the print functions &lt;code&gt;prin1&lt;/code&gt; and &lt;code&gt;print&lt;/code&gt; that print with quoting. If this variable and &lt;code&gt;print-escape-newlines&lt;/code&gt; are both non-&lt;code&gt;nil&lt;/code&gt;, the latter takes precedences for newlines and formfeeds.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , control characters in strings are printed as backslash sequences by the print functions &lt;code&gt;prin1&lt;/code&gt; and &lt;code&gt;print&lt;/code&gt; that print with quoting. If this variable and &lt;code&gt;print-escape-newlines&lt;/code&gt; are both non- &lt;code&gt;nil&lt;/code&gt; , the latter takes precedences for newlines and formfeeds.</target>
        </trans-unit>
        <trans-unit id="0ebcf8ab557e661172fe9de6982d3f1cecc78d63" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, every stack frame of the backtrace is displayed as a list. This aims at improving the backtrace readability at the cost of special forms no longer being visually different from regular function calls.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , every stack frame of the backtrace is displayed as a list. This aims at improving the backtrace readability at the cost of special forms no longer being visually different from regular function calls.</target>
        </trans-unit>
        <trans-unit id="825abb330d17f730939fccaedf4a9b54362af1aa" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, face filters that specify attributes applied only when certain conditions are met will be deemed to match always.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , face filters that specify attributes applied only when certain conditions are met will be deemed to match always.</target>
        </trans-unit>
        <trans-unit id="73b99057e876adfddae006656294be7fad80418d" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, indentation functions can insert tabs as well as spaces. Otherwise, they insert only spaces. Setting this variable automatically makes it buffer-local in the current buffer.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , indentation functions can insert tabs as well as spaces. Otherwise, they insert only spaces. Setting this variable automatically makes it buffer-local in the current buffer.</target>
        </trans-unit>
        <trans-unit id="e475f46321e795ba81086b40cd4690ce691cace1" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it is used instead of &lt;code&gt;system-name&lt;/code&gt; for purposes of generating email addresses. For example, it is used when constructing the default value of &lt;code&gt;user-mail-address&lt;/code&gt;. See &lt;a href=&quot;user-identification#User-Identification&quot;&gt;User Identification&lt;/a&gt;.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it is used instead of &lt;code&gt;system-name&lt;/code&gt; for purposes of generating email addresses. For example, it is used when constructing the default value of &lt;code&gt;user-mail-address&lt;/code&gt; . See &lt;a href=&quot;user-identification#User-Identification&quot;&gt;User Identification&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4a72e135e2602c7ab3b2c6d5205e6df8a8c1f366" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it means that the user plans to use global abbrevs only. This tells the commands that define mode-specific abbrevs to define global ones instead. This variable does not alter the behavior of the functions in this section; it is examined by their callers.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it means that the user plans to use global abbrevs only. This tells the commands that define mode-specific abbrevs to define global ones instead. This variable does not alter the behavior of the functions in this section; it is examined by their callers.</target>
        </trans-unit>
        <trans-unit id="28a614e5388ec41951b4289105842e28d7c742aa" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it prevents Emacs from loading the default initialization library file. The default value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it prevents Emacs from loading the default initialization library file. The default value is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01405602d1f9c9c7910f4c21fb957b674e7f4e15" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it says to call the debugger before the next &lt;code&gt;eval&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt; or &lt;code&gt;funcall&lt;/code&gt;. Entering the debugger sets &lt;code&gt;debug-on-next-call&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it says to call the debugger before the next &lt;code&gt;eval&lt;/code&gt; , &lt;code&gt;apply&lt;/code&gt; or &lt;code&gt;funcall&lt;/code&gt; . Entering the debugger sets &lt;code&gt;debug-on-next-call&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="530af39356cdaa6611678480707bf74e936dfaf2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function of one argument, the text of a message to display in the echo area. This function will be called by &lt;code&gt;message&lt;/code&gt; and related functions. If the function returns &lt;code&gt;nil&lt;/code&gt;, the message is displayed in the echo area as usual. If this function returns a string, that string is displayed in the echo area instead of the original one. If this function returns other non-&lt;code&gt;nil&lt;/code&gt; values, that means the message was already handled, so &lt;code&gt;message&lt;/code&gt; will not display anything in the echo area. See also &lt;code&gt;clear-message-function&lt;/code&gt; that can be used to clear the message displayed by this function.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it should be a function of one argument, the text of a message to display in the echo area. This function will be called by &lt;code&gt;message&lt;/code&gt; and related functions. If the function returns &lt;code&gt;nil&lt;/code&gt; , the message is displayed in the echo area as usual. If this function returns a string, that string is displayed in the echo area instead of the original one. If this function returns other non- &lt;code&gt;nil&lt;/code&gt; values, that means the message was already handled, so &lt;code&gt;message&lt;/code&gt; will not display anything in the echo area. See also &lt;code&gt;clear-message-function&lt;/code&gt; that can be used to clear the message displayed by this function.</target>
        </trans-unit>
        <trans-unit id="e2ad2623c2c20ffd237a9f8ff4f6b25a14cd11ae" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function that is called with no arguments, to choose an enclosing range of text for refontification for the command</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it should be a function that is called with no arguments, to choose an enclosing range of text for refontification for the command</target>
        </trans-unit>
        <trans-unit id="5e34de40cdee34dbcbae19ce1c28736a9aabb232" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function to determine which face to use for a given syntactic element (a string or a comment).</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it should be a function to determine which face to use for a given syntactic element (a string or a comment).</target>
        </trans-unit>
        <trans-unit id="736539861dd446a2363faa03b08be25dfdb36758" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a regular expression that says how to search for whitespace. In that case, any group of spaces in a regular expression being searched for stands for use of this regular expression. However, spaces inside of constructs such as &amp;lsquo;</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it should be a regular expression that says how to search for whitespace. In that case, any group of spaces in a regular expression being searched for stands for use of this regular expression. However, spaces inside of constructs such as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="94da8319895436b58271d8d72a7d99fdf5bd1757" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string of characters that can end a sentence without following spaces.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it should be a string of characters that can end a sentence without following spaces.</target>
        </trans-unit>
        <trans-unit id="9e8a33451a4e0e6e7f790a3cc598efe8a089d8fa" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a function called to display help strings. These may be &lt;code&gt;help-echo&lt;/code&gt; properties, menu help strings (see &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;Simple Menu Items&lt;/a&gt;, see &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;Extended Menu Items&lt;/a&gt;), or tool bar help strings (see &lt;a href=&quot;tool-bar#Tool-Bar&quot;&gt;Tool Bar&lt;/a&gt;). The specified function is called with one argument, the help string to display, which is passed through &lt;code&gt;substitute-command-keys&lt;/code&gt; before being given to the function, unless the help string has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; property on its first character; see &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;. See the code of Tooltip mode (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it specifies a function called to display help strings. These may be &lt;code&gt;help-echo&lt;/code&gt; properties, menu help strings (see &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;Simple Menu Items&lt;/a&gt;, see &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;Extended Menu Items&lt;/a&gt;), or tool bar help strings (see &lt;a href=&quot;tool-bar#Tool-Bar&quot;&gt;Tool Bar&lt;/a&gt;). The specified function is called with one argument, the help string to display, which is passed through &lt;code&gt;substitute-command-keys&lt;/code&gt; before being given to the function, unless the help string has a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; property on its first character; see &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;. See the code of Tooltip mode (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="4287285430bf7978ba440dfcc104a76072b43a35" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the coding system to use for reading a file, or for input from a synchronous subprocess.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it specifies the coding system to use for reading a file, or for input from a synchronous subprocess.</target>
        </trans-unit>
        <trans-unit id="3c10b413e9e836ba3f5eb5e379ef529e4a062a92" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the initial execution mode for Edebug when it is first activated. Possible values are &lt;code&gt;step&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;go&lt;/code&gt;, &lt;code&gt;Go-nonstop&lt;/code&gt;, &lt;code&gt;trace&lt;/code&gt;, &lt;code&gt;Trace-fast&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, and &lt;code&gt;Continue-fast&lt;/code&gt;.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it specifies the initial execution mode for Edebug when it is first activated. Possible values are &lt;code&gt;step&lt;/code&gt; , &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;go&lt;/code&gt; , &lt;code&gt;Go-nonstop&lt;/code&gt; , &lt;code&gt;trace&lt;/code&gt; , &lt;code&gt;Trace-fast&lt;/code&gt; , &lt;code&gt;continue&lt;/code&gt; , and &lt;code&gt;Continue-fast&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="940530d5bdee4613d57b898314fac2eba6763217" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it tells &lt;code&gt;scroll-other-window&lt;/code&gt; which buffer&amp;rsquo;s window to scroll.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , it tells &lt;code&gt;scroll-other-window&lt;/code&gt; which buffer&amp;rsquo;s window to scroll.</target>
        </trans-unit>
        <trans-unit id="796d64fb0f974a198f156df00380fe8b383a4f59" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, its value is a form to evaluate whenever the character &lt;code&gt;help-char&lt;/code&gt; is read. If evaluating the form produces a string, that string is displayed.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , its value is a form to evaluate whenever the character &lt;code&gt;help-char&lt;/code&gt; is read. If evaluating the form produces a string, that string is displayed.</target>
        </trans-unit>
        <trans-unit id="4cd924a70c5a5420e03b4274b724474270d013cd" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, its value should be a function that finds the next definition to put in the buffer index, scanning backward in the buffer from point. It should return &lt;code&gt;nil&lt;/code&gt; if it doesn&amp;rsquo;t find another definition before point. Otherwise it should leave point at the place it finds a definition and return any non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , its value should be a function that finds the next definition to put in the buffer index, scanning backward in the buffer from point. It should return &lt;code&gt;nil&lt;/code&gt; if it doesn&amp;rsquo;t find another definition before point. Otherwise it should leave point at the place it finds a definition and return any non- &lt;code&gt;nil&lt;/code&gt; value.</target>
        </trans-unit>
        <trans-unit id="5966261c0c16f735efd5e99361f20e922539db62" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, its value should be a function to return the name for a definition, assuming point is in that definition as the &lt;code&gt;imenu-prev-index-position-function&lt;/code&gt; function would leave it.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , its value should be a function to return the name for a definition, assuming point is in that definition as the &lt;code&gt;imenu-prev-index-position-function&lt;/code&gt; function would leave it.</target>
        </trans-unit>
        <trans-unit id="1f013b1f0ed05ce1ab2df32aa0fef5d09e538287" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, some standard functions do not process window parameters. The functions currently affected by this are &lt;code&gt;split-window&lt;/code&gt;, &lt;code&gt;delete-window&lt;/code&gt;, &lt;code&gt;delete-other-windows&lt;/code&gt;, and &lt;code&gt;other-window&lt;/code&gt;.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , some standard functions do not process window parameters. The functions currently affected by this are &lt;code&gt;split-window&lt;/code&gt; , &lt;code&gt;delete-window&lt;/code&gt; , &lt;code&gt;delete-other-windows&lt;/code&gt; , and &lt;code&gt;other-window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03c7c4d79ccb4d42f80c3d18e6c04a8e755e29f2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the &lt;code&gt;line-move&lt;/code&gt;, &lt;code&gt;scroll-up&lt;/code&gt;, and &lt;code&gt;scroll-down&lt;/code&gt; functions will automatically modify the vertical scroll position to scroll through display rows that are taller than the height of the window, for example in the presence of large images.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , the &lt;code&gt;line-move&lt;/code&gt; , &lt;code&gt;scroll-up&lt;/code&gt; , and &lt;code&gt;scroll-down&lt;/code&gt; functions will automatically modify the vertical scroll position to scroll through display rows that are taller than the height of the window, for example in the presence of large images.</target>
        </trans-unit>
        <trans-unit id="5f51c12f5aa3e060488bafd691e3268772c08c8b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the completion commands automatically display a list of possible completions whenever nothing can be completed because the next character is not uniquely determined.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , the completion commands automatically display a list of possible completions whenever nothing can be completed because the next character is not uniquely determined.</target>
        </trans-unit>
        <trans-unit id="21443464bd01045a5e435e1de5bf762da34a42e1" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the filling functions do not delete newlines that have the &lt;code&gt;hard&lt;/code&gt; text property. These hard newlines act as paragraph separators. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;Hard and Soft Newlines&lt;/a&gt; in</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , the filling functions do not delete newlines that have the &lt;code&gt;hard&lt;/code&gt; text property. These hard newlines act as paragraph separators. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;Hard and Soft Newlines&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="679fbd7d9ffa305c2784992adda94271941edb90" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the function &lt;code&gt;yank-pop&lt;/code&gt; uses its value instead of &lt;code&gt;delete-region&lt;/code&gt; to delete the text inserted by the previous &lt;code&gt;yank&lt;/code&gt; or &lt;code&gt;yank-pop&lt;/code&gt; command. The value must be a function of two arguments, the start and end of the current region.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , the function &lt;code&gt;yank-pop&lt;/code&gt; uses its value instead of &lt;code&gt;delete-region&lt;/code&gt; to delete the text inserted by the previous &lt;code&gt;yank&lt;/code&gt; or &lt;code&gt;yank-pop&lt;/code&gt; command. The value must be a function of two arguments, the start and end of the current region.</target>
        </trans-unit>
        <trans-unit id="93a2434654ec45e739de56657a18ff8876d78ad0" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the prefixes specified by a group&amp;rsquo;s &lt;code&gt;:prefix&lt;/code&gt; keyword are omitted from tag names, whenever the user customizes the group.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , the prefixes specified by a group&amp;rsquo;s &lt;code&gt;:prefix&lt;/code&gt; keyword are omitted from tag names, whenever the user customizes the group.</target>
        </trans-unit>
        <trans-unit id="e5d159208606e32b48fc2d1b9aded69f5b4066fd" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the tool bar automatically resizes to show all defined tool bar items&amp;mdash;but not larger than a quarter of the frame&amp;rsquo;s height.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , the tool bar automatically resizes to show all defined tool bar items&amp;mdash;but not larger than a quarter of the frame&amp;rsquo;s height.</target>
        </trans-unit>
        <trans-unit id="13e280ca7f80fc8854be1c34c381f58c33201e02" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the value of &lt;code&gt;overriding-local-map&lt;/code&gt; or &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; can affect the display of the menu bar. The default value is &lt;code&gt;nil&lt;/code&gt;, so those map variables have no effect on the menu bar.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , the value of &lt;code&gt;overriding-local-map&lt;/code&gt; or &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; can affect the display of the menu bar. The default value is &lt;code&gt;nil&lt;/code&gt; , so those map variables have no effect on the menu bar.</target>
        </trans-unit>
        <trans-unit id="4124d763334c8a7421ef5e7e0065624fb83c8f7c" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;save-buffer&lt;/code&gt; protects against I/O errors while saving by writing the new file to a temporary name instead of the name it is supposed to have, and then renaming it to the intended name after it is clear there are no errors. This procedure prevents problems such as a lack of disk space from resulting in an invalid file.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , then &lt;code&gt;save-buffer&lt;/code&gt; protects against I/O errors while saving by writing the new file to a temporary name instead of the name it is supposed to have, and then renaming it to the intended name after it is clear there are no errors. This procedure prevents problems such as a lack of disk space from resulting in an invalid file.</target>
        </trans-unit>
        <trans-unit id="af993b034155d780baaff868c13c3f78dad09007" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs quits immediately, unless &lt;code&gt;inhibit-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. Typing</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , then Emacs quits immediately, unless &lt;code&gt;inhibit-quit&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; . Typing</target>
        </trans-unit>
        <trans-unit id="76218ba9f2ed8739a1159ea14cb27b16675a7947" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then multibyte non-</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , then multibyte non-</target>
        </trans-unit>
        <trans-unit id="347e0ea47aafb7add84c5d8c171d6c7c19355bd0" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then newline characters in strings are printed as &amp;lsquo;</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , then newline characters in strings are printed as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="6c347410c56038a6f8cb71013d4d57ee168183fc" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then read-only buffers and, depending on the actual value, some or all read-only characters may be modified. Read-only characters in a buffer are those that have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;read-only&lt;/code&gt; text property. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;, for more information about text properties.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , then read-only buffers and, depending on the actual value, some or all read-only characters may be modified. Read-only characters in a buffer are those that have a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;read-only&lt;/code&gt; text property. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;, for more information about text properties.</target>
        </trans-unit>
        <trans-unit id="0b2ed4fbebaf5d95d00f7d374e99d6b6f8a364f2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then the various &lt;code&gt;find-file&lt;/code&gt; commands check for wildcard characters and visit all the files that match them (when invoked interactively or when their &lt;var&gt;wildcards&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;). If this option is &lt;code&gt;nil&lt;/code&gt;, then the &lt;code&gt;find-file&lt;/code&gt; commands ignore their &lt;var&gt;wildcards&lt;/var&gt; argument and never treat wildcard characters specially.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , then the various &lt;code&gt;find-file&lt;/code&gt; commands check for wildcard characters and visit all the files that match them (when invoked interactively or when their &lt;var&gt;wildcards&lt;/var&gt; argument is non- &lt;code&gt;nil&lt;/code&gt; ). If this option is &lt;code&gt;nil&lt;/code&gt; , then the &lt;code&gt;find-file&lt;/code&gt; commands ignore their &lt;var&gt;wildcards&lt;/var&gt; argument and never treat wildcard characters specially.</target>
        </trans-unit>
        <trans-unit id="c78c42547923adcce6905297eaf8af608611acc0" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then unibyte non-</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , then unibyte non-</target>
        </trans-unit>
        <trans-unit id="6647182cae9f951d8aeda46add5a82e6ede0ce3e" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, tool bar items display in raised form when the mouse moves over them.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , tool bar items display in raised form when the mouse moves over them.</target>
        </trans-unit>
        <trans-unit id="8dfab937b0b83165d5343abdad293917abfa1c29" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, two words of different kind (e.g., English and CJK) will be separated with a space when concatenating one that is in the end of a line and the other that is in the beginning of the next line for filling.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , two words of different kind (e.g., English and CJK) will be separated with a space when concatenating one that is in the end of a line and the other that is in the beginning of the next line for filling.</target>
        </trans-unit>
        <trans-unit id="fa1c4b04a8d4d70822b089390ffdf01fa17e5734" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, when the undo info exceeds &lt;code&gt;undo-outer-limit&lt;/code&gt;, Emacs asks in the echo area whether to discard the info. The default value is &lt;code&gt;nil&lt;/code&gt;, which means to discard it automatically.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , when the undo info exceeds &lt;code&gt;undo-outer-limit&lt;/code&gt; , Emacs asks in the echo area whether to discard the info. The default value is &lt;code&gt;nil&lt;/code&gt; , which means to discard it automatically.</target>
        </trans-unit>
        <trans-unit id="fa5ff03c3e322d8d21fa31e2c5f3c569a8fff9a1" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, you can invoke commands (such as &lt;code&gt;find-file&lt;/code&gt;) that use minibuffers even while the minibuffer is active. Such invocation produces a recursive editing level for a new minibuffer. The outer-level minibuffer is invisible while you are editing the inner one.</source>
          <target state="translated">If this variable is non- &lt;code&gt;nil&lt;/code&gt; , you can invoke commands (such as &lt;code&gt;find-file&lt;/code&gt; ) that use minibuffers even while the minibuffer is active. Such invocation produces a recursive editing level for a new minibuffer. The outer-level minibuffer is invisible while you are editing the inner one.</target>
        </trans-unit>
        <trans-unit id="7987f4ed83976384243a666b286c2798956277e4" translate="yes" xml:space="preserve">
          <source>If this variable&amp;rsquo;s value is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;write-region&lt;/code&gt; uses the &lt;code&gt;fsync&lt;/code&gt; system call after writing a file. Although this slows Emacs down, it lessens the risk of data loss after power failure. If the value is &lt;code&gt;t&lt;/code&gt;, Emacs does not use &lt;code&gt;fsync&lt;/code&gt;. The default value is &lt;code&gt;nil&lt;/code&gt; when Emacs is interactive, and &lt;code&gt;t&lt;/code&gt; when Emacs runs in batch mode. See &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Files and Storage&lt;/a&gt;.</source>
          <target state="translated">If this variable&amp;rsquo;s value is &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;write-region&lt;/code&gt; uses the &lt;code&gt;fsync&lt;/code&gt; system call after writing a file. Although this slows Emacs down, it lessens the risk of data loss after power failure. If the value is &lt;code&gt;t&lt;/code&gt; , Emacs does not use &lt;code&gt;fsync&lt;/code&gt; . The default value is &lt;code&gt;nil&lt;/code&gt; when Emacs is interactive, and &lt;code&gt;t&lt;/code&gt; when Emacs runs in batch mode. See &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Files and Storage&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a8c9dc8dcf95bb83031625a9f5835f26578f929b" translate="yes" xml:space="preserve">
          <source>If this variable&amp;rsquo;s value is non-&lt;code&gt;nil&lt;/code&gt;, an open parenthesis in column 0 is considered to be the start of a defun. If it is &lt;code&gt;nil&lt;/code&gt;, an open parenthesis in column 0 has no special meaning. The default is &lt;code&gt;t&lt;/code&gt;. If a string literal happens to have a parenthesis in column 0, escape it with a backslash to avoid a false positive.</source>
          <target state="translated">If this variable&amp;rsquo;s value is non- &lt;code&gt;nil&lt;/code&gt; , an open parenthesis in column 0 is considered to be the start of a defun. If it is &lt;code&gt;nil&lt;/code&gt; , an open parenthesis in column 0 has no special meaning. The default is &lt;code&gt;t&lt;/code&gt; . If a string literal happens to have a parenthesis in column 0, escape it with a backslash to avoid a false positive.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
