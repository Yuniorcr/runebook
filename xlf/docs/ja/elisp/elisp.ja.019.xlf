<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="3cd342ba06c23a25d16fd236a7f966d0d056af1f" translate="yes" xml:space="preserve">
          <source>This variable controls the type of device used to communicate with asynchronous subprocesses. If it is non-&lt;code&gt;nil&lt;/code&gt;, then ptys are used, when available. Otherwise, pipes are used.</source>
          <target state="translated">この変数は、非同期サブプロセスとの通信に使用されるデバイスのタイプを制御します。 &lt;code&gt;nil&lt;/code&gt; 以外の場合は、使用可能な場合はptysが使用されます。それ以外の場合は、パイプが使用されます。</target>
        </trans-unit>
        <trans-unit id="08dab0e1be55eda47d60f04b66e72dbf4991257a" translate="yes" xml:space="preserve">
          <source>This variable controls the width of the block cursor displayed on extra-wide glyphs such as a tab or a stretch of white space. By default, the block cursor is only as wide as the font&amp;rsquo;s default character, and will not cover all of the width of the glyph under it if that glyph is extra-wide. A non-&lt;code&gt;nil&lt;/code&gt; value of this variable means draw the block cursor as wide as the glyph under it. The default value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この変数は、タブや空白のストレッチなどの非常に広いグリフに表示されるブロックカーソルの幅を制御します。デフォルトでは、ブロックカーソルの幅はフォントのデフォルト文字と同じであり、そのグリフが非常に広い場合、その下のグリフの幅全体をカバーすることはありません。非 &lt;code&gt;nil&lt;/code&gt; この可変手段の値は、その下のグリフと同じ幅のブロックカーソルを描きます。デフォルト値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d2c94643005270d2f6942ac824485b58fccd37c3" translate="yes" xml:space="preserve">
          <source>This variable controls where the cursor appears when a message is displayed in the echo area. If it is non-&lt;code&gt;nil&lt;/code&gt;, then the cursor appears at the end of the message. Otherwise, the cursor appears at point&amp;mdash;not in the echo area at all.</source>
          <target state="translated">この変数は、エコー領域にメッセージが表示されたときにカーソルが表示される場所を制御します。 &lt;code&gt;nil&lt;/code&gt; 以外の場合は、メッセージの最後にカーソルが表示されます。それ以外の場合、カーソルはエコー領域ではなくポイントに表示されます。</target>
        </trans-unit>
        <trans-unit id="78e7ca46765b59977f37436355a9173f0e329969" translate="yes" xml:space="preserve">
          <source>This variable controls whether Emacs redraws the entire screen after it has been suspended and resumed. Non-&lt;code&gt;nil&lt;/code&gt; means there is no need to redraw, &lt;code&gt;nil&lt;/code&gt; means redrawing is needed. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この変数は、Emacsが一時停止および再開された後に画面全体を再描画するかどうかを制御します。非 &lt;code&gt;nil&lt;/code&gt; は再描画の必要がないことを意味し、 &lt;code&gt;nil&lt;/code&gt; は再描画が必要であることを意味します。デフォルトは &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="95ed5a9c5b6a6c89551fc1e814afb457f4301833" translate="yes" xml:space="preserve">
          <source>This variable controls whether and where to put vertical scroll bars in all frames. The possible values are &lt;code&gt;nil&lt;/code&gt; for no scroll bars, &lt;code&gt;left&lt;/code&gt; to put scroll bars on the left and &lt;code&gt;right&lt;/code&gt; to put scroll bars on the right.</source>
          <target state="translated">この変数は、すべてのフレームに垂直スクロールバーを配置するかどうかと配置する場所を制御します。可能な値は、スクロールバーがない場合は &lt;code&gt;nil&lt;/code&gt; 、 &lt;code&gt;left&lt;/code&gt; にスクロールバーを配置する場合は左、 &lt;code&gt;right&lt;/code&gt; にスクロールバーを配置する場合は右です。</target>
        </trans-unit>
        <trans-unit id="7df164e792b3f011293c3807677c5d151cc496d6" translate="yes" xml:space="preserve">
          <source>This variable controls whether matching against the regular expressions in the value of &lt;code&gt;imenu-generic-expression&lt;/code&gt; is case-sensitive: &lt;code&gt;t&lt;/code&gt;, the default, means matching should ignore case.</source>
          <target state="translated">この変数は、 &lt;code&gt;imenu-generic-expression&lt;/code&gt; の値の正規表現との照合で大文字と小文字を区別するかどうかを制御します。デフォルトの &lt;code&gt;t&lt;/code&gt; は、照合で大文字と小文字を区別しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="d02e62e020640c94610e93821c553803a4840267" translate="yes" xml:space="preserve">
          <source>This variable controls whether overwrite mode is in effect. The value should be &lt;code&gt;overwrite-mode-textual&lt;/code&gt;, &lt;code&gt;overwrite-mode-binary&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt;. &lt;code&gt;overwrite-mode-textual&lt;/code&gt; specifies textual overwrite mode (treats newlines and tabs specially), and &lt;code&gt;overwrite-mode-binary&lt;/code&gt; specifies binary overwrite mode (treats newlines and tabs like any other characters).</source>
          <target state="translated">この変数は、上書きモードを有効にするかどうかを制御します。値は、 &lt;code&gt;overwrite-mode-textual&lt;/code&gt; 、 &lt;code&gt;overwrite-mode-binary&lt;/code&gt; 、または &lt;code&gt;nil&lt;/code&gt; である必要があります。 &lt;code&gt;overwrite-mode-textual&lt;/code&gt; はテキストの上書きモードを指定し（改行とタブを特別に扱います）、 &lt;code&gt;overwrite-mode-binary&lt;/code&gt; はバイナリの上書きモードを指定します（改行とタブを他の文字と同じように扱います）。</target>
        </trans-unit>
        <trans-unit id="71582013e38557cb3e57f0a7f2ea5f5ca1a89269" translate="yes" xml:space="preserve">
          <source>This variable controls whether splitting a window shall make a new parent window. The following values are recognized:</source>
          <target state="translated">この変数は、ウィンドウを分割して新しい親ウィンドウを作成するかどうかを制御します。以下の値が認識されます。</target>
        </trans-unit>
        <trans-unit id="5eb9cb044b76a0dc1c9f45e7078a6e99b97f7127" translate="yes" xml:space="preserve">
          <source>This variable controls whether to display horizontal scroll bars on all frames.</source>
          <target state="translated">この変数は、すべてのフレームに水平スクロールバーを表示するかどうかを制御します。</target>
        </trans-unit>
        <trans-unit id="a632ac8d482713a1abb64ffbcdfcbb77d0cb10ea" translate="yes" xml:space="preserve">
          <source>This variable controls whether to make a single non-numbered backup file or multiple numbered backups.</source>
          <target state="translated">この変数は、単一の非番号付きバックアップファイルを作成するか、複数の番号付きバックアップを作成するかを制御します。</target>
        </trans-unit>
        <trans-unit id="db956e2faef94ec73d2a29df9c5551af74d3a3ab" translate="yes" xml:space="preserve">
          <source>This variable controls whether to process file-local variables. The possible values are:</source>
          <target state="translated">この変数は、ファイルローカル変数を処理するかどうかを制御します。可能な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e955c53253b76738989360bbe0d5dea962526fe9" translate="yes" xml:space="preserve">
          <source>This variable controls which scalable fonts to use. A value of &lt;code&gt;nil&lt;/code&gt;, the default, means do not use scalable fonts. &lt;code&gt;t&lt;/code&gt; means to use any scalable font that seems appropriate for the text.</source>
          <target state="translated">この変数は、使用するスケーラブルフォントを制御します。デフォルトの &lt;code&gt;nil&lt;/code&gt; の値は、スケーラブルフォントを使用しないことを意味します。 &lt;code&gt;t&lt;/code&gt; は、テキストに適していると思われるスケーラブルなフォントを使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="2b112526a1bb4b41aeac91c7058d7c49be5a3fab" translate="yes" xml:space="preserve">
          <source>This variable defines all the supported input methods. Each element defines one input method, and should have the form:</source>
          <target state="translated">この変数は、サポートされているすべての入力メソッドを定義します。各要素は1つの入力メソッドを定義し、フォームを持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="5dcb928d3e7690e22825f5503358d051f545a004" translate="yes" xml:space="preserve">
          <source>This variable defines the limit on the total number of local variable bindings and &lt;code&gt;unwind-protect&lt;/code&gt; cleanups (see &lt;a href=&quot;cleanups#Cleanups&quot;&gt;Cleaning Up from Nonlocal Exits&lt;/a&gt;) that are allowed before Emacs signals an error (with data &lt;code&gt;&quot;Variable binding depth exceeds
max-specpdl-size&quot;&lt;/code&gt;).</source>
          <target state="translated">この変数は、Emacsがエラーを通知する前に許可されるローカル変数バインディングと &lt;code&gt;unwind-protect&lt;/code&gt; クリーンアップ（&lt;a href=&quot;cleanups#Cleanups&quot;&gt;非ローカル出口からのクリーンアップを&lt;/a&gt;参照）の総数の制限を定義します（データ &lt;code&gt;&quot;Variable binding depth exceeds max-specpdl-size&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="90c7b8613d0ea919fdf51054ed265d37e7c5583c" translate="yes" xml:space="preserve">
          <source>This variable defines the maximum depth allowed in calls to &lt;code&gt;eval&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt;, and &lt;code&gt;funcall&lt;/code&gt; before an error is signaled (with error message &lt;code&gt;&quot;Lisp nesting exceeds max-lisp-eval-depth&quot;&lt;/code&gt;).</source>
          <target state="translated">この変数は、エラーが通知される前に &lt;code&gt;eval&lt;/code&gt; 、 &lt;code&gt;apply&lt;/code&gt; 、 &lt;code&gt;funcall&lt;/code&gt; の呼び出しで許可される最大深度を定義します（エラーメッセージ &lt;code&gt;&quot;Lisp nesting exceeds max-lisp-eval-depth&quot;&lt;/code&gt; ます」）。</target>
        </trans-unit>
        <trans-unit id="90f7b79d53299023760247cd85be49bd9dc75aa5" translate="yes" xml:space="preserve">
          <source>This variable defines the tab stop columns used by &lt;code&gt;tab-to-tab-stop&lt;/code&gt;. It should be either &lt;code&gt;nil&lt;/code&gt;, or a list of increasing integers, which need not be evenly spaced. The list is implicitly extended to infinity through repetition of the interval between the last and penultimate elements (or &lt;code&gt;tab-width&lt;/code&gt; if the list has fewer than two elements). A value of &lt;code&gt;nil&lt;/code&gt; means a tab stop every &lt;code&gt;tab-width&lt;/code&gt; columns.</source>
          <target state="translated">この変数は、tab &lt;code&gt;tab-to-tab-stop&lt;/code&gt; 使用されるタブストップ列を定義します。 &lt;code&gt;nil&lt;/code&gt; 、または等間隔である必要のない増加する整数のリストのいずれかである必要があります。リストは、最後の要素と最後から2番目の要素の間の間隔（またはリストの要素が2つ未満の場合は &lt;code&gt;tab-width&lt;/code&gt; を繰り返すことにより、暗黙的に無限大に拡張されます。 &lt;code&gt;nil&lt;/code&gt; の値は、タブ &lt;code&gt;tab-width&lt;/code&gt; 列ごとにタブストップを意味します。</target>
        </trans-unit>
        <trans-unit id="469a95c0cf0383f02d3f41134c71a2730552315f" translate="yes" xml:space="preserve">
          <source>This variable determines how much time should elapse before command characters echo. Its value must be a number, and specifies the number of seconds to wait before echoing. If the user types a prefix key (such as</source>
          <target state="translated">この変数は、コマンド文字がエコーするまでの時間を決定します。この値は数値でなければならず、エコーするまでの待ち時間を秒数で指定します。ユーザがプレフィックスキーを入力した場合 (例えば</target>
        </trans-unit>
        <trans-unit id="4fd680cb90cefb4c53559f6e815614208c70e0f1" translate="yes" xml:space="preserve">
          <source>This variable determines whether &lt;code&gt;defun&lt;/code&gt; should make a copy of the function definition in pure storage. If it is non-&lt;code&gt;nil&lt;/code&gt;, then the function definition is copied into pure storage.</source>
          <target state="translated">この変数は、 &lt;code&gt;defun&lt;/code&gt; がピュアストレージに関数定義のコピーを作成するかどうかを決定します。それが非であれば &lt;code&gt;nil&lt;/code&gt; を、その関数の定義は、純粋なストレージにコピーされます。</target>
        </trans-unit>
        <trans-unit id="a9b3f4c2a441b23660570b29f6532cc9e1efcda6" translate="yes" xml:space="preserve">
          <source>This variable determines whether Emacs asks for confirmation before exiting the minibuffer; &lt;code&gt;completing-read&lt;/code&gt; binds this variable, and the function &lt;code&gt;minibuffer-complete-and-exit&lt;/code&gt; checks the value before exiting. If the value is &lt;code&gt;nil&lt;/code&gt;, confirmation is not required. If the value is &lt;code&gt;confirm&lt;/code&gt;, the user may exit with an input that is not a valid completion alternative, but Emacs asks for confirmation. If the value is &lt;code&gt;confirm-after-completion&lt;/code&gt;, the user may exit with an input that is not a valid completion alternative, but Emacs asks for confirmation if the user submitted the input right after any of the completion commands in &lt;code&gt;minibuffer-confirm-exit-commands&lt;/code&gt;.</source>
          <target state="translated">この変数は、Emacsがミニバッファーを終了する前に確認を求めるかどうかを決定します。 &lt;code&gt;minibuffer-complete-and-exit&lt;/code&gt; &lt;code&gt;completing-read&lt;/code&gt; はこの変数をバインドし、関数minibuffer-complete-and-exitは終了する前に値をチェックします。値が &lt;code&gt;nil&lt;/code&gt; の場合、確認は必要ありません。値が &lt;code&gt;confirm&lt;/code&gt; の場合、ユーザーは有効な補完の選択肢ではない入力で終了する可能性がありますが、Emacsは確認を求めます。値が &lt;code&gt;confirm-after-completion&lt;/code&gt; の場合、ユーザーは有効な完了の選択肢ではない入力で終了する可能性がありますが、Emacsは、ユーザーが &lt;code&gt;minibuffer-confirm-exit-commands&lt;/code&gt; 完了コマンドの直後に入力を送信したかどうかの確認を求めます。コマンド。</target>
        </trans-unit>
        <trans-unit id="0a786b1fd8466ab1fe094be0c082410ad1c7ed6a" translate="yes" xml:space="preserve">
          <source>This variable determines whether Emacs should flash the screen to represent a bell. Non-&lt;code&gt;nil&lt;/code&gt; means yes, &lt;code&gt;nil&lt;/code&gt; means no. This is effective on graphical displays, and on text terminals provided the terminal&amp;rsquo;s Termcap entry defines the visible bell capability (&amp;lsquo;</source>
          <target state="translated">この変数は、Emacsがベルを表すために画面をフラッシュするかどうかを決定します。非 &lt;code&gt;nil&lt;/code&gt; の手段をはいていない、 &lt;code&gt;nil&lt;/code&gt; の手段なし。これは、グラフィックディスプレイ、および端末のTermcapエントリが表示可能なベル機能を定義しているテキスト端末で効果的です（ '</target>
        </trans-unit>
        <trans-unit id="a591395fdfa218eef7172413d43a22630bda1ff1" translate="yes" xml:space="preserve">
          <source>This variable determines whether Emacs should quit when &lt;code&gt;quit-flag&lt;/code&gt; is set to a value other than &lt;code&gt;nil&lt;/code&gt;. If &lt;code&gt;inhibit-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;quit-flag&lt;/code&gt; has no special effect.</source>
          <target state="translated">この変数は、 &lt;code&gt;quit-flag&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の値に設定されている場合にEmacsを終了するかどうかを決定します。場合 &lt;code&gt;inhibit-quit&lt;/code&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、次いで &lt;code&gt;quit-flag&lt;/code&gt; 特別な効果を有していません。</target>
        </trans-unit>
        <trans-unit id="893f930fc46c884a3893f35797c61c21e39223ef" translate="yes" xml:space="preserve">
          <source>This variable determines whether files may be written out that do &lt;em&gt;not&lt;/em&gt; end with a newline. If the value of the variable is &lt;code&gt;t&lt;/code&gt;, then &lt;code&gt;save-buffer&lt;/code&gt; silently adds a newline at the end of the buffer whenever it does not already end in one. If the value is &lt;code&gt;visit&lt;/code&gt;, Emacs adds a missing newline just after it visits the file. If the value is &lt;code&gt;visit-save&lt;/code&gt;, Emacs adds a missing newline both on visiting and on saving. For any other non-&lt;code&gt;nil&lt;/code&gt; value, &lt;code&gt;save-buffer&lt;/code&gt; asks the user whether to add a newline each time the case arises.</source>
          <target state="translated">この変数は、改行で終わら&lt;em&gt;ない&lt;/em&gt;ファイルを書き出すことができるかどうかを決定します。変数の値が &lt;code&gt;t&lt;/code&gt; の場合、 &lt;code&gt;save-buffer&lt;/code&gt; は、バッファーの最後に改行がない場合は常に、バッファーの最後に改行をサイレントに追加します。値が &lt;code&gt;visit&lt;/code&gt; の場合、Emacsはファイルにアクセスした直後に欠落している改行を追加します。値が &lt;code&gt;visit-save&lt;/code&gt; の場合、Emacsは訪問時と保存時の両方で欠落している改行を追加します。その他の &lt;code&gt;nil&lt;/code&gt; 以外の値の場合、 &lt;code&gt;save-buffer&lt;/code&gt; は、ケースが発生するたびに改行を追加するかどうかをユーザーに尋ねます。</target>
        </trans-unit>
        <trans-unit id="e172255c5f5beddb870c65d32a0c64c4e7560b8b" translate="yes" xml:space="preserve">
          <source>This variable determines whether or not to make backup files. If it is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs creates a backup of each file when it is saved for the first time&amp;mdash;provided that &lt;code&gt;backup-inhibited&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; (see below).</source>
          <target state="translated">この変数は、バックアップファイルを作成するかどうかを決定します。それは非ある場合 &lt;code&gt;nil&lt;/code&gt; それは第1の時間提供したことのために保存された場合、Emacsは、各ファイルのバックアップを作成し &lt;code&gt;backup-inhibited&lt;/code&gt; ある &lt;code&gt;nil&lt;/code&gt; （下記参照します）。</target>
        </trans-unit>
        <trans-unit id="d0557efc37e8614c9df4ccd758ad183283699c70" translate="yes" xml:space="preserve">
          <source>This variable determines whether the debugger is called when &lt;code&gt;quit&lt;/code&gt; is signaled and not handled. If &lt;code&gt;debug-on-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the debugger is called whenever you quit (that is, type</source>
          <target state="translated">この変数は、 &lt;code&gt;quit&lt;/code&gt; が通知されて処理されないときにデバッガーが呼び出されるかどうかを決定します。場合は &lt;code&gt;debug-on-quit&lt;/code&gt; 非で &lt;code&gt;nil&lt;/code&gt; のあなたが終了したときに、デバッガが呼び出されたが、（それは、タイプです</target>
        </trans-unit>
        <trans-unit id="bac72ab8ca2d7af1e4899843968d1d08e03b798d" translate="yes" xml:space="preserve">
          <source>This variable determines whether the debugger is called when an error is signaled and not handled. If &lt;code&gt;debug-on-error&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, all kinds of errors call the debugger, except those listed in &lt;code&gt;debug-ignored-errors&lt;/code&gt; (see below). If it is &lt;code&gt;nil&lt;/code&gt;, none call the debugger.</source>
          <target state="translated">この変数は、エラーが通知されて処理されないときにデバッガーを呼び出すかどうかを決定します。場合は &lt;code&gt;debug-on-error&lt;/code&gt; ある &lt;code&gt;t&lt;/code&gt; 、エラーのすべての種類は、に記載されているものを除いて、デバッガを呼び出す &lt;code&gt;debug-ignored-errors&lt;/code&gt; （下記参照します）。 &lt;code&gt;nil&lt;/code&gt; の場合、デバッガーを呼び出すものはありません。</target>
        </trans-unit>
        <trans-unit id="cffccb915c87836e47c44ecb08b11f0fb475fd65" translate="yes" xml:space="preserve">
          <source>This variable determines whether the higher-level replacement functions should preserve case. If the variable is &lt;code&gt;nil&lt;/code&gt;, that means to use the replacement text verbatim. A non-&lt;code&gt;nil&lt;/code&gt; value means to convert the case of the replacement text according to the text being replaced.</source>
          <target state="translated">この変数は、上位レベルの置換関数で大文字と小文字を区別するかどうかを決定します。変数が &lt;code&gt;nil&lt;/code&gt; の場合、それは置換テキストを逐語的に使用することを意味します。非 &lt;code&gt;nil&lt;/code&gt; 置換されているテキストに応じて置換テキストの大文字と小文字を変換するための値を意味します。</target>
        </trans-unit>
        <trans-unit id="bcc4ce012d842154070d4da43d844b8f600202a4" translate="yes" xml:space="preserve">
          <source>This variable displays the buffer&amp;rsquo;s major and minor modes. Its default value also displays the recursive editing level, information on the process status, and whether narrowing is in effect.</source>
          <target state="translated">この変数は、バッファのメジャーモードとマイナーモードを表示します。デフォルト値には、再帰的な編集レベル、プロセスステータスに関する情報、および絞り込みが有効かどうかも表示されます。</target>
        </trans-unit>
        <trans-unit id="01dfec2e7126648b5e75cc691fb798cf60c163e9" translate="yes" xml:space="preserve">
          <source>This variable gives major modes a way to specify not to break a line at certain places. Its value should be a list of functions. Whenever filling considers breaking the line at a certain place in the buffer, it calls each of these functions with no arguments and with point located at that place. If any of the functions returns non-&lt;code&gt;nil&lt;/code&gt;, then the line won&amp;rsquo;t be broken there.</source>
          <target state="translated">この変数は、メジャーモードに特定の場所で線を壊さないように指定する方法を提供します。その値は関数のリストである必要があります。塗りつぶしがバッファ内の特定の場所で行を壊すことを検討するときはいつでも、引数なしで、その場所にあるポイントを使用して、これらの各関数を呼び出します。関数のいずれかが &lt;code&gt;nil&lt;/code&gt; 以外を返す場合、その行はそこで中断されません。</target>
        </trans-unit>
        <trans-unit id="c19ca7b3824dbf0d5ea6d173e4af5d21990d9b95" translate="yes" xml:space="preserve">
          <source>This variable has no effect on text-mode frames, since the text-mode cursor is drawn by the terminal out of Emacs&amp;rsquo;s control.</source>
          <target state="translated">テキストモードカーソルはEmacsの制御外で端末によって描画されるため、この変数はテキストモードフレームには影響しません。</target>
        </trans-unit>
        <trans-unit id="6457fcf88f857a96880e9cc70e03f9164c5c33c4" translate="yes" xml:space="preserve">
          <source>This variable holds a function to print help for a prefix key. The function is called when the user types a prefix key followed by the help character, and the help character has no binding after that prefix. The variable&amp;rsquo;s default value is &lt;code&gt;describe-prefix-bindings&lt;/code&gt;.</source>
          <target state="translated">この変数は、プレフィックスキーのヘルプを出力する関数を保持します。この関数は、ユーザーがプレフィックスキーの後にヘルプ文字を入力したときに呼び出され、ヘルプ文字にはそのプレフィックスの後にバインディングがありません。変数のデフォルト値は &lt;code&gt;describe-prefix-bindings&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8ad3f587330f30e2a8a998a4442a0dbd9fcda3c4" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap for special events. If an event type has a binding in this keymap, then it is special, and the binding for the event is run directly by &lt;code&gt;read-event&lt;/code&gt;. See &lt;a href=&quot;special-events#Special-Events&quot;&gt;Special Events&lt;/a&gt;.</source>
          <target state="translated">この変数は、特別なイベントのキーマップを保持します。イベントタイプのこのキーマップにバインディングがある場合、それは特別であり、イベントのバインディングは &lt;code&gt;read-event&lt;/code&gt; によって直接実行されます。&lt;a href=&quot;special-events#Special-Events&quot;&gt;特別イベントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="acdb9255d8d2ac1527090085d7cd0dcaafbc9b9e" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap similar to &lt;code&gt;input-decode-map&lt;/code&gt; except that it describes key sequences which should be translated to alternative interpretations that are usually preferred. It applies after &lt;code&gt;input-decode-map&lt;/code&gt; and before &lt;code&gt;key-translation-map&lt;/code&gt;.</source>
          <target state="translated">この変数は、通常優先される代替解釈に変換する必要があるキーシーケンスを記述することを除いて、 &lt;code&gt;input-decode-map&lt;/code&gt; と同様のキーマップを保持します。 &lt;code&gt;input-decode-map&lt;/code&gt; の後、 &lt;code&gt;key-translation-map&lt;/code&gt; の前に適用されます。</target>
        </trans-unit>
        <trans-unit id="a37ca85b72485a9401ac40435b9a83097a9637b7" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap that describes the character sequences sent by function keys on an ordinary character terminal.</source>
          <target state="translated">この変数は、通常の文字端末でファンクションキーによって送信される文字列を記述したキーマップを保持します。</target>
        </trans-unit>
        <trans-unit id="26eed1dd6f3bb036d68a21adce16e29025efd29e" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap that extends &lt;code&gt;query-replace-map&lt;/code&gt; by providing additional keybindings that are useful in multi-buffer replacements. The additional bindings are:</source>
          <target state="translated">この変数は、マルチバッファー置換に役立つ追加のキーバインディングを提供することにより、 &lt;code&gt;query-replace-map&lt;/code&gt; を拡張するキーマップを保持します。追加のバインディングは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="519c8bdd8ad460519783549c408e663b9e9f1b93" translate="yes" xml:space="preserve">
          <source>This variable holds a list of all variables of type &lt;code&gt;DEFVAR_BOOL&lt;/code&gt;.</source>
          <target state="translated">この変数は、タイプ &lt;code&gt;DEFVAR_BOOL&lt;/code&gt; のすべての変数のリストを保持します。</target>
        </trans-unit>
        <trans-unit id="f8883be969a765e6d09cf5ca1b75b7d3d50f0803" translate="yes" xml:space="preserve">
          <source>This variable holds a list of commands that cause Emacs to ask for confirmation before exiting the minibuffer, if the &lt;var&gt;require-match&lt;/var&gt; argument to &lt;code&gt;completing-read&lt;/code&gt; is &lt;code&gt;confirm-after-completion&lt;/code&gt;. The confirmation is requested if the user attempts to exit the minibuffer immediately after calling any command in this list.</source>
          <target state="translated">この変数は、complete &lt;code&gt;completing-read&lt;/code&gt; &lt;var&gt;require-match&lt;/var&gt; 引数が &lt;code&gt;confirm-after-completion&lt;/code&gt; である場合に、Emacsがミニバッファーを終了する前に確認を要求するようにするコマンドのリストを保持します。ユーザーがこのリストのコマンドを呼び出した直後にミニバッファーを終了しようとすると、確認が要求されます。</target>
        </trans-unit>
        <trans-unit id="4dd1042e2c01f4b8fa8b02392a9cab7b62f91950" translate="yes" xml:space="preserve">
          <source>This variable holds a list of events waiting to be read as command input. The events are used in the order they appear in the list, and removed one by one as they are used.</source>
          <target state="translated">この変数は、コマンド入力として読み込まれるのを待つイベントのリストを保持します。イベントはリストに表示された順に使用され、使用されるごとに一つずつ削除されます。</target>
        </trans-unit>
        <trans-unit id="c8b955a77f35fb09b5608537bbc29fbda392394f" translate="yes" xml:space="preserve">
          <source>This variable holds a list of expressions that are safe to evaluate when found in the &amp;lsquo;</source>
          <target state="translated">この変数は、 'で見つかったときに評価しても安全な式のリストを保持します。</target>
        </trans-unit>
        <trans-unit id="bd6bb60be08f69010d3276ce4955632b8da29bca" translate="yes" xml:space="preserve">
          <source>This variable holds a list of fake function keys for items to display at the end of the menu bar rather than in normal sequence. The default value is &lt;code&gt;(help-menu)&lt;/code&gt;; thus, the &amp;lsquo;</source>
          <target state="translated">この変数は、通常の順序ではなく、メニューバーの最後に表示するアイテムの偽のファンクションキーのリストを保持します。デフォルト値は &lt;code&gt;(help-menu)&lt;/code&gt; です。したがって、 '</target>
        </trans-unit>
        <trans-unit id="4d8e53c3f492a4feeb707a31a70018e618b50aea" translate="yes" xml:space="preserve">
          <source>This variable holds a list of files that should be reverted without query. The value is a list of regular expressions. If the visited file name matches one of these regular expressions, and the file has changed on disk but the buffer is not modified, then &lt;code&gt;revert-buffer&lt;/code&gt; reverts the file without asking the user for confirmation.</source>
          <target state="translated">この変数は、クエリなしで元に戻す必要があるファイルのリストを保持します。値は正規表現のリストです。訪問したファイル名がこれらの正規表現の1つと一致し、ファイルがディスク上で変更されたがバッファが変更されていない場合、 &lt;code&gt;revert-buffer&lt;/code&gt; はユーザーに確認を求めずにファイルを元に戻します。</target>
        </trans-unit>
        <trans-unit id="05f0e9a25b020fbdaf07864fbfca1659990b7ee9" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions for computing text properties. Before &lt;code&gt;buffer-substring&lt;/code&gt; copies the text and text properties for a portion of the buffer, it calls all the functions in this list. Each of the functions receives two arguments that specify the range of the buffer being accessed. (The buffer itself is always the current buffer.)</source>
          <target state="translated">この変数は、テキストプロパティを計算するための関数のリストを保持します。 &lt;code&gt;buffer-substring&lt;/code&gt; は、バッファの一部のテキストおよびテキストプロパティをコピーする前に、このリスト内のすべての関数を呼び出します。各関数は、アクセスされるバッファーの範囲を指定する2つの引数を受け取ります。（バッファー自体は常に現在のバッファーです。）</target>
        </trans-unit>
        <trans-unit id="39212b9fda9b331c0853ff560cd41550f9877e99" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions that Emacs should call before redisplaying a window with scrolling. Displaying a different buffer in a window and making a new window also call these functions.</source>
          <target state="translated">この変数は、スクロールを伴うウィンドウを再表示する前に Emacs が呼び出すべき関数のリストを保持します。ウィンドウ内に別のバッファを表示したり、新しいウィンドウを作成したりする場合も、これらの関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="cb3bc673165c3862f8f3b5f00bed0f9586bd5e48" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions that are called by Emacs redisplay as needed, just before doing redisplay. They are called even when Font Lock Mode isn&amp;rsquo;t enabled. When Font Lock Mode is enabled, this variable usually holds just one function, &lt;code&gt;jit-lock-function&lt;/code&gt;.</source>
          <target state="translated">この変数は、再表示を行う直前に、必要に応じてEmacs再表示によって呼び出される関数のリストを保持します。フォントロックモードが有効になっていない場合でも呼び出されます。フォントロックモードが有効になっている場合、この変数は通常、 &lt;code&gt;jit-lock-function&lt;/code&gt; という1つの関数のみを保持します。</target>
        </trans-unit>
        <trans-unit id="57ae90a775480403077f7b65b706fafab3e50565" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions that try to determine a coding system for a file based on its undecoded contents.</source>
          <target state="translated">この変数は、ファイルの未解読の内容に基づいてファイルのコーディングシステムを決定しようとする関数のリストを保持します。</target>
        </trans-unit>
        <trans-unit id="b0df7a29f56cb8c387d8d3a398285ded4a61ed8b" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions to call after Emacs modifies a buffer. Each function receives three arguments: the beginning and end of the region just changed, and the length of the text that existed before the change. All three arguments are integers. The buffer that has been changed is always the current buffer when the function is called.</source>
          <target state="translated">この変数には、Emacs がバッファを変更した後に呼び出す関数のリストが格納されます。各関数は3つの引数を受け取ります。変更された領域の開始と終了、変更前のテキストの長さです。3つの引数はすべて整数です。変更されたバッファは、関数が呼び出されたときには常に現在のバッファになります。</target>
        </trans-unit>
        <trans-unit id="72161f22138defda7e8b68a6f85e2c55d4627ebb" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions to call when Emacs is about to modify a buffer. Each function gets two arguments, the beginning and end of the region that is about to change, represented as integers. The buffer that is about to change is always the current buffer when the function is called.</source>
          <target state="translated">この変数は、Emacs がバッファを変更しようとしているときに呼び出す関数のリストを保持します。各関数は、変更しようとしている領域の開始と終了を整数で表した 2 つの引数を取得します。変更しようとしているバッファは、関数が呼び出されたときには常に現在のバッファになります。</target>
        </trans-unit>
        <trans-unit id="3c016e628b4a6507907ac2c4314536d83f87d5c9" translate="yes" xml:space="preserve">
          <source>This variable holds a list of handlers whose use is presently inhibited for a certain operation.</source>
          <target state="translated">この変数は、特定の操作に対して現在使用が禁止されているハンドラのリストを保持します。</target>
        </trans-unit>
        <trans-unit id="ea61d5937ac2a283fec1ab3e7face5cd37b6540a" translate="yes" xml:space="preserve">
          <source>This variable holds a list of hooks to be scanned before unloading a library, to remove functions defined in the library.</source>
          <target state="translated">この変数は、ライブラリをアンロードする前にスキャンするフックのリストを保持し、ライブラリで定義された関数を削除します。</target>
        </trans-unit>
        <trans-unit id="7a0b38af7c3d63375438c7111762565267f721a0" translate="yes" xml:space="preserve">
          <source>This variable holds a list of keymap alists to use for emulation modes. It is intended for modes or packages using multiple minor-mode keymaps. Each element is a keymap alist which has the same format and meaning as &lt;code&gt;minor-mode-map-alist&lt;/code&gt;, or a symbol with a variable binding which is such an alist. The active keymaps in each alist are used before &lt;code&gt;minor-mode-map-alist&lt;/code&gt; and &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt;.</source>
          <target state="translated">この変数は、エミュレーションモードに使用するキーマップリストのリストを保持します。これは、複数のマイナーモードキーマップを使用するモードまたはパッケージを対象としています。各要素は、 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; と同じ形式と意味を持つキーマップリスト、またはそのようなリストである変数バインディングを持つシンボルです。各リストのアクティブなキー &lt;code&gt;minor-mode-map-alist&lt;/code&gt; および &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt; overriding -map-alistの前に使用されます。</target>
        </trans-unit>
        <trans-unit id="fb2f272aee36e56653000a6360b6770eb64c46cb" translate="yes" xml:space="preserve">
          <source>This variable holds a list of variables that should not be given local values by files. Any value specified for one of these variables is completely ignored.</source>
          <target state="translated">この変数は、ファイルによってローカル値を与えてはならない変数のリストを保持します。これらの変数に指定された値は完全に無視されます。</target>
        </trans-unit>
        <trans-unit id="bc86c91af69c14fafcd027fed651f97ec5d6985b" translate="yes" xml:space="preserve">
          <source>This variable holds a marker that indicates where to display the overlay arrow. It should point at the beginning of a line. On a non-graphical display the arrow text appears at the beginning of that line, overlaying any text that would otherwise appear. Since the arrow is usually short, and the line usually begins with indentation, normally nothing significant is overwritten.</source>
          <target state="translated">この変数は、オーバーレイ矢印を表示する場所を示すマーカーを保持します。これは行頭を指している必要があります。グラフィカルでないディスプレイでは、矢印のテキストはその行の先頭に表示され、そうでなければ表示されるであろうすべてのテキストをオーバーレイします。矢印は通常短く、行は通常インデントで始まるので、通常は重要なものは何も上書きされません。</target>
        </trans-unit>
        <trans-unit id="9d61ea0c88eaa0a5e4b9f178d493594754669b2c" translate="yes" xml:space="preserve">
          <source>This variable holds a mode line construct that, by default, appears in the mode line just after the &lt;code&gt;which-func-mode&lt;/code&gt; minor mode if set, else after &lt;code&gt;mode-line-modes&lt;/code&gt;. The command &lt;code&gt;display-time&lt;/code&gt; sets &lt;code&gt;global-mode-string&lt;/code&gt; to refer to the variable &lt;code&gt;display-time-string&lt;/code&gt;, which holds a string containing the time and load information.</source>
          <target state="translated">この変数は、デフォルトで、 &lt;code&gt;which-func-mode&lt;/code&gt; マイナーモードの直後、そうでない場合は &lt;code&gt;mode-line-modes&lt;/code&gt; の後に表示されるモードライン構造を保持します。コマンド &lt;code&gt;display-time&lt;/code&gt; は、時間と負荷の情報を含む文字列を保持する変数 &lt;code&gt;display-time-string&lt;/code&gt; を参照するように &lt;code&gt;global-mode-string&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="fcba3becc0285d5958e5e08987d62cf7feaa8bf7" translate="yes" xml:space="preserve">
          <source>This variable holds a property list giving default values for text properties. Whenever a character does not specify a value for a property, neither directly, through a category symbol, or through &lt;code&gt;char-property-alias-alist&lt;/code&gt;, the value stored in this list is used instead. Here is an example:</source>
          <target state="translated">この変数は、テキストプロパティのデフォルト値を示すプロパティリストを保持します。文字がプロパティの値を直接、カテゴリシンボルを介して、または &lt;code&gt;char-property-alias-alist&lt;/code&gt; を介して指定しない場合は常に、このリストに格納されている値が代わりに使用されます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="6febb37570f0069143f80c3299aa0ae6dc1ea022" translate="yes" xml:space="preserve">
          <source>This variable holds a special keymap that defines the valid user responses for &lt;code&gt;perform-replace&lt;/code&gt; and the commands that use it, as well as &lt;code&gt;y-or-n-p&lt;/code&gt; and &lt;code&gt;map-y-or-n-p&lt;/code&gt;. This map is unusual in two ways:</source>
          <target state="translated">この変数は、 &lt;code&gt;perform-replace&lt;/code&gt; の有効なユーザー応答とそれを使用するコマンド、および &lt;code&gt;y-or-n-p&lt;/code&gt; と &lt;code&gt;map-y-or-n-p&lt;/code&gt; を定義する特別なキーマップを保持します。このマップは2つの点で珍しいです：</target>
        </trans-unit>
        <trans-unit id="e027cb271cc7816d0728efbc0b205739d6616ba6" translate="yes" xml:space="preserve">
          <source>This variable holds a string that says which character separates directories in a search path (as found in an environment variable). Its value is &lt;code&gt;&quot;:&quot;&lt;/code&gt; for Unix and GNU systems, and &lt;code&gt;&quot;;&quot;&lt;/code&gt; for MS systems.</source>
          <target state="translated">この変数は、（環境変数にあるように）検索パス内のディレクトリを区切る文字を示す文字列を保持します。その値は、UnixおよびGNUシステムの場合は &lt;code&gt;&quot;:&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;;&quot;&lt;/code&gt; MSシステム用。</target>
        </trans-unit>
        <trans-unit id="a5ce090ba1e37fd187314cd6eb4cbc03eea27056" translate="yes" xml:space="preserve">
          <source>This variable holds a vector used internally by printing to implement the &lt;code&gt;print-circle&lt;/code&gt; feature. You should not use it except to bind it to &lt;code&gt;nil&lt;/code&gt; when you bind &lt;code&gt;print-continuous-numbering&lt;/code&gt;.</source>
          <target state="translated">この変数は、 &lt;code&gt;print-circle&lt;/code&gt; 機能を実装するために印刷によって内部的に使用されるベクトルを保持します。 &lt;code&gt;print-continuous-numbering&lt;/code&gt; をバインドするときに &lt;code&gt;nil&lt;/code&gt; にバインドする場合を除いて、これを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="e8c8534f7c8274e8bf6f37c2fe9a42af806712e5" translate="yes" xml:space="preserve">
          <source>This variable holds an alist of frame parameters (see &lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;Frame Parameters&lt;/a&gt;), which is used by the function specified by &lt;code&gt;pop-up-frame-function&lt;/code&gt; to make a new frame. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この変数は、フレームパラメータ（参照の連想リストを保持&lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;フレームのパラメータ&lt;/a&gt;で指定された機能で使用される）、 &lt;code&gt;pop-up-frame-function&lt;/code&gt; 新しいフレームを作ることを。デフォルトは &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2bd0f19b72e06400232e027dac176fbbf7f56c2c" translate="yes" xml:space="preserve">
          <source>This variable holds an alist which defines the default rear-stickiness of various text properties. Each element has the form &lt;code&gt;(&lt;var&gt;property&lt;/var&gt; . &lt;var&gt;nonstickiness&lt;/var&gt;)&lt;/code&gt;, and it defines the stickiness of a particular text property, &lt;var&gt;property&lt;/var&gt;.</source>
          <target state="translated">この変数は、さまざまなテキストプロパティのデフォルトのリアスティッキネスを定義するリストを保持します。各要素は、フォーム有する &lt;code&gt;(&lt;var&gt;property&lt;/var&gt; . &lt;var&gt;nonstickiness&lt;/var&gt;)&lt;/code&gt; 、それが特定のテキストプロパティのべたつき定義 &lt;var&gt;property&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d7db826376c8067cacb3f63ed8e4b98a30275b6" translate="yes" xml:space="preserve">
          <source>This variable holds an alist which maps property names to a list of alternative property names. If a character does not specify a direct value for a property, the alternative property names are consulted in order; the first non-&lt;code&gt;nil&lt;/code&gt; value is used. This variable takes precedence over &lt;code&gt;default-text-properties&lt;/code&gt;, and &lt;code&gt;category&lt;/code&gt; properties take precedence over this variable.</source>
          <target state="translated">この変数は、プロパティ名を代替プロパティ名のリストにマップするリストを保持します。文字がプロパティの直接値を指定していない場合は、代替プロパティ名が順番に参照されます。最初の非 &lt;code&gt;nil&lt;/code&gt; 値が使用されます。この変数は &lt;code&gt;default-text-properties&lt;/code&gt; よりも優先され、 &lt;code&gt;category&lt;/code&gt; プロパティはこの変数よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="af2c67026fb0f574e04fc0b237633d78c6ce4340" translate="yes" xml:space="preserve">
          <source>This variable holds an association list whose elements specify how the mode line should indicate that a minor mode is active. Each element of the &lt;code&gt;minor-mode-alist&lt;/code&gt; should be a two-element list:</source>
          <target state="translated">この変数は、マイナーモードがアクティブであることをモード行が示す方法を要素で指定する関連付けリストを保持します。 &lt;code&gt;minor-mode-alist&lt;/code&gt; の各要素は、2要素のリストである必要があります。</target>
        </trans-unit>
        <trans-unit id="c2ef0f3af4d98038c101a6cf8a10b77abd695807" translate="yes" xml:space="preserve">
          <source>This variable holds the absolute file name of the user&amp;rsquo;s init file. If the actual init file loaded is a compiled file, such as</source>
          <target state="translated">この変数は、ユーザーのinitファイルの絶対ファイル名を保持します。ロードされた実際のinitファイルが次のようなコンパイル済みファイルである場合</target>
        </trans-unit>
        <trans-unit id="344e3ec7ab37cb172cdd1eced860a903d281793e" translate="yes" xml:space="preserve">
          <source>This variable holds the default input method for commands that choose an input method. Unlike &lt;code&gt;current-input-method&lt;/code&gt;, this variable is normally global.</source>
          <target state="translated">この変数は、入力方式を選択するコマンドのデフォルトの入力方式を保持します。 &lt;code&gt;current-input-method&lt;/code&gt; とは異なり、この変数は通常グローバルです。</target>
        </trans-unit>
        <trans-unit id="c18ab7020fe4b988f02d37bfa4ede4f52f31cc4f" translate="yes" xml:space="preserve">
          <source>This variable holds the default input stream&amp;mdash;the stream that &lt;code&gt;read&lt;/code&gt; uses when the &lt;var&gt;stream&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;. The default is &lt;code&gt;t&lt;/code&gt;, meaning use the minibuffer.</source>
          <target state="translated">この変数は、デフォルトの入力ストリーム（ &lt;var&gt;stream&lt;/var&gt; 引数が &lt;code&gt;nil&lt;/code&gt; の場合に &lt;code&gt;read&lt;/code&gt; が使用するストリーム）を保持します。デフォルトは &lt;code&gt;t&lt;/code&gt; で、ミニバッファーを使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="de7e4cb0ec2d8d47f0102bb97612d107a65d1c40" translate="yes" xml:space="preserve">
          <source>This variable holds the directory in which the Emacs executable was located when it was run, or &lt;code&gt;nil&lt;/code&gt; if that directory cannot be determined.</source>
          <target state="translated">この変数は、実行時にEmacs実行可能ファイルが配置されていたディレクトリを保持します。そのディレクトリを特定できない場合は &lt;code&gt;nil&lt;/code&gt; を保持します。</target>
        </trans-unit>
        <trans-unit id="c455202da051f3ef291d0eee22f8c132d61fc324" translate="yes" xml:space="preserve">
          <source>This variable holds the erase character that was selected in the system&amp;rsquo;s terminal driver, before Emacs was started.</source>
          <target state="translated">この変数は、Emacsが開始される前にシステムのターミナルドライバーで選択された消去文字を保持します。</target>
        </trans-unit>
        <trans-unit id="b114475c947fc394c0e8313bb8050389d142aae8" translate="yes" xml:space="preserve">
          <source>This variable holds the last input event read as part of a key sequence, not counting events resulting from mouse menus.</source>
          <target state="translated">この変数は、キーシーケンスの一部として読み込まれた最後の入力イベントを保持します。</target>
        </trans-unit>
        <trans-unit id="db576e55004516d9773f1a3a339c3d8e134cf2f8" translate="yes" xml:space="preserve">
          <source>This variable holds the list of environment variables Emacs inherited from its parent process when Emacs started.</source>
          <target state="translated">この変数は、Emacsが起動したときに親プロセスから引き継いだ環境変数のリストを保持します。</target>
        </trans-unit>
        <trans-unit id="1463352f694104f674d13094544ffbddd5ca61ef" translate="yes" xml:space="preserve">
          <source>This variable holds the list of killed text sequences, most recently killed first.</source>
          <target state="translated">この変数は、殺されたテキストシーケンスのリストを保持します。</target>
        </trans-unit>
        <trans-unit id="7f1502c6bf20a05a12fd6941180204001da754ef" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the Emacs default directory. It defaults to</source>
          <target state="translated">この変数はEmacsのデフォルトディレクトリの名前を保持します。デフォルトは</target>
        </trans-unit>
        <trans-unit id="23bb178224a3d419452e5059d88d71c25405975a" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory in which Emacs finds certain documentation and text files that come with Emacs.</source>
          <target state="translated">この変数は、EmacsがEmacsに付属するドキュメントやテキストファイルを見つけるディレクトリの名前を保持します。</target>
        </trans-unit>
        <trans-unit id="c9f0175743a7dfe6c220146fc87b9f51c89f1569" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory which should contain the file &lt;code&gt;&quot;DOC&quot;&lt;/code&gt; that contains documentation strings for built-in and preloaded functions and variables.</source>
          <target state="translated">この変数は、組み込みおよびプリロードされた関数と変数のドキュメント文字列を含むファイル &lt;code&gt;&quot;DOC&quot;&lt;/code&gt; を含むディレクトリの名前を保持します。</target>
        </trans-unit>
        <trans-unit id="77d539bc690d78b070e77ecc5d587508f7810036" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the input method now active in the current buffer. (It automatically becomes local in each buffer when set in any fashion.) It is &lt;code&gt;nil&lt;/code&gt; if no input method is active in the buffer now.</source>
          <target state="translated">この変数は、現在のバッファで現在アクティブになっている入力メソッドの名前を保持します。（何らかの方法で設定すると、各バッファーで自動的にローカルになります。）現在バッファーでアクティブな入力メソッドがない場合は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="51d42a153c502ad4ca8a2564f9ea1e4a88087a97" translate="yes" xml:space="preserve">
          <source>This variable holds the program name under which Emacs was invoked. The value is a string, and does not include a directory name.</source>
          <target state="translated">この変数は、Emacsが起動されたプログラム名を保持します。値は文字列で、ディレクトリ名は含まれません。</target>
        </trans-unit>
        <trans-unit id="cd30ea6e8a624b9b928d0444fa4de07fcf9d2be9" translate="yes" xml:space="preserve">
          <source>This variable holds the raw prefix argument for the &lt;em&gt;current&lt;/em&gt; command. Commands may examine it directly, but the usual method for accessing it is with &lt;code&gt;(interactive &quot;P&quot;)&lt;/code&gt;.</source>
          <target state="translated">この変数は、&lt;em&gt;現在の&lt;/em&gt;コマンドの生のプレフィックス引数を保持します。コマンドはそれを直接調べることができますが、それにアクセスするための通常の方法は &lt;code&gt;(interactive &quot;P&quot;)&lt;/code&gt; を使用することです。</target>
        </trans-unit>
        <trans-unit id="c2228b9f862753c70e303ec4badcaa1e473beca6" translate="yes" xml:space="preserve">
          <source>This variable holds the standard GNU configuration name for the hardware/software configuration of your system, as a string. For example, a typical value for a 64-bit GNU/Linux system is &amp;lsquo;</source>
          <target state="translated">This variable holds the standard GNU configuration name for the hardware/software configuration of your system, as a string. For example, a typical value for a 64-bit GNU/Linux system is &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="c419e4b6ad8620a603b0b2c42f92b1e629d65d10" translate="yes" xml:space="preserve">
          <source>This variable holds the string to display to call attention to a particular line, or &lt;code&gt;nil&lt;/code&gt; if the arrow feature is not in use. On a graphical display the contents of the string are ignored; instead a glyph is displayed in the fringe area to the left of the display area.</source>
          <target state="translated">This variable holds the string to display to call attention to a particular line, or &lt;code&gt;nil&lt;/code&gt; if the arrow feature is not in use. On a graphical display the contents of the string are ignored; instead a glyph is displayed in the fringe area to the left of the display area.</target>
        </trans-unit>
        <trans-unit id="81e67f6a532f93dac31cd045964834d6fdfed067" translate="yes" xml:space="preserve">
          <source>This variable holds the syntax table to use for fontification of comments and strings. It is normally set by Font Lock mode based on the &lt;var&gt;syntax-alist&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;. If this value is &lt;code&gt;nil&lt;/code&gt;, syntactic fontification uses the buffer&amp;rsquo;s syntax table (the value returned by the function &lt;code&gt;syntax-table&lt;/code&gt;; see &lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;Syntax Table Functions&lt;/a&gt;).</source>
          <target state="translated">This variable holds the syntax table to use for fontification of comments and strings. It is normally set by Font Lock mode based on the &lt;var&gt;syntax-alist&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt; . If this value is &lt;code&gt;nil&lt;/code&gt; , syntactic fontification uses the buffer&amp;rsquo;s syntax table (the value returned by the function &lt;code&gt;syntax-table&lt;/code&gt; ; see &lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;Syntax Table Functions&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="e15a7227d43de41555c9e1d25dc1664f812412f1" translate="yes" xml:space="preserve">
          <source>This variable holds the system-dependent value of the file-name extension of the module files. Its value is</source>
          <target state="translated">この変数は、モジュールファイルのファイル名拡張子のシステム依存値を保持します。その値は</target>
        </trans-unit>
        <trans-unit id="c2f9f6eb303cdf33dba48f246b5c950f6cf7a5a8" translate="yes" xml:space="preserve">
          <source>This variable holds the total number of input events received so far from the terminal&amp;mdash;not counting those generated by keyboard macros.</source>
          <target state="translated">This variable holds the total number of input events received so far from the terminal&amp;mdash;not counting those generated by keyboard macros.</target>
        </trans-unit>
        <trans-unit id="f6d2e595e4de0a9a555a6943813249af150ddc15" translate="yes" xml:space="preserve">
          <source>This variable holds the value of &lt;code&gt;window-system&lt;/code&gt; used for the first frame created by Emacs during startup. (When Emacs is invoked as a daemon, it does not create any initial frames, so &lt;code&gt;initial-window-system&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, except on MS-Windows, where it is still &lt;code&gt;w32&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html#Initial-Options&quot;&gt;daemon&lt;/a&gt; in</source>
          <target state="translated">This variable holds the value of &lt;code&gt;window-system&lt;/code&gt; used for the first frame created by Emacs during startup. (When Emacs is invoked as a daemon, it does not create any initial frames, so &lt;code&gt;initial-window-system&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; , except on MS-Windows, where it is still &lt;code&gt;w32&lt;/code&gt; . See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html#Initial-Options&quot;&gt;daemon&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="6659bea196a72c1ed60f39d4d02f3a69d7a3316b" translate="yes" xml:space="preserve">
          <source>This variable holds the value of the mode line construct that displays information about the language environment, buffer coding system, and current input method. See &lt;a href=&quot;non_002dascii-characters#Non_002dASCII-Characters&quot;&gt;Non-ASCII Characters&lt;/a&gt;.</source>
          <target state="translated">This variable holds the value of the mode line construct that displays information about the language environment, buffer coding system, and current input method. See &lt;a href=&quot;non_002dascii-characters#Non_002dASCII-Characters&quot;&gt;Non-ASCII Characters&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="865ab5f439f010d5038e5c2f6bd8d5328cf2eee0" translate="yes" xml:space="preserve">
          <source>This variable holds the value of the mode line construct that displays whether the current buffer is modified. Its default value displays &amp;lsquo;</source>
          <target state="translated">This variable holds the value of the mode line construct that displays whether the current buffer is modified. Its default value displays &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="bcbda22dd3d867b0b17321627e60172591c001fd" translate="yes" xml:space="preserve">
          <source>This variable identifies the buffer being displayed in the window. Its default value displays the buffer name, padded with spaces to at least 12 columns.</source>
          <target state="translated">この変数は、ウィンドウに表示されるバッファを識別します。デフォルト値はバッファ名を表示します。</target>
        </trans-unit>
        <trans-unit id="f18ef3fa8d1cc594172be55851eb657c47e6c250" translate="yes" xml:space="preserve">
          <source>This variable identifies the current frame. Its default value displays &lt;code&gt;&quot; &quot;&lt;/code&gt; if you are using a window system which can show multiple frames, or &lt;code&gt;&quot;-%F &quot;&lt;/code&gt; on an ordinary terminal which shows only one frame at a time.</source>
          <target state="translated">This variable identifies the current frame. Its default value displays &lt;code&gt;&quot; &quot;&lt;/code&gt; if you are using a window system which can show multiple frames, or &lt;code&gt;&quot;-%F &quot;&lt;/code&gt; on an ordinary terminal which shows only one frame at a time.</target>
        </trans-unit>
        <trans-unit id="ace1bdce23e62b3a59d6cb4caceefebf39a10b6f" translate="yes" xml:space="preserve">
          <source>This variable indicates the position in the buffer. Its default value displays the buffer percentage and, optionally, the buffer size, the line number and the column number.</source>
          <target state="translated">この変数はバッファ内の位置を示します。デフォルト値はバッファのパーセンテージと、オプションでバッファサイズ、行番号、列番号を表示します。</target>
        </trans-unit>
        <trans-unit id="671b82f00a9a8576ccf6f84946da4d3ff9fac8dc" translate="yes" xml:space="preserve">
          <source>This variable indicates whether a call of &lt;code&gt;process-file&lt;/code&gt; changes remote files.</source>
          <target state="translated">This variable indicates whether a call of &lt;code&gt;process-file&lt;/code&gt; changes remote files.</target>
        </trans-unit>
        <trans-unit id="c5ca8a1815d706760193424f27cfc780af9e0726" translate="yes" xml:space="preserve">
          <source>This variable is &lt;code&gt;t&lt;/code&gt; by default. Instead of customizing it to &lt;code&gt;nil&lt;/code&gt; and thus telling &lt;code&gt;display-buffer&lt;/code&gt; what not to do, it&amp;rsquo;s much better to list in &lt;code&gt;display-buffer-base-action&lt;/code&gt; the action functions it should try instead as, for example:</source>
          <target state="translated">This variable is &lt;code&gt;t&lt;/code&gt; by default. Instead of customizing it to &lt;code&gt;nil&lt;/code&gt; and thus telling &lt;code&gt;display-buffer&lt;/code&gt; what not to do, it&amp;rsquo;s much better to list in &lt;code&gt;display-buffer-base-action&lt;/code&gt; the action functions it should try instead as, for example:</target>
        </trans-unit>
        <trans-unit id="64d84c91e24c06852beaf523c2628b072cd44f30" translate="yes" xml:space="preserve">
          <source>This variable is &lt;code&gt;t&lt;/code&gt; if Emacs is nearly out of memory for Lisp objects, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This variable is &lt;code&gt;t&lt;/code&gt; if Emacs is nearly out of memory for Lisp objects, and &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="a29a7f36bac714cd1390c2bea5038a184550e3a2" translate="yes" xml:space="preserve">
          <source>This variable is a list of functions to be called for &lt;code&gt;interrupt-process&lt;/code&gt;. The arguments of the functions are the same as for &lt;code&gt;interrupt-process&lt;/code&gt;. These functions are called in the order of the list, until one of them returns non-&lt;code&gt;nil&lt;/code&gt;. The default function, which shall always be the last in this list, is &lt;code&gt;internal-default-interrupt-process&lt;/code&gt;.</source>
          <target state="translated">This variable is a list of functions to be called for &lt;code&gt;interrupt-process&lt;/code&gt; . The arguments of the functions are the same as for &lt;code&gt;interrupt-process&lt;/code&gt; . These functions are called in the order of the list, until one of them returns non- &lt;code&gt;nil&lt;/code&gt; . The default function, which shall always be the last in this list, is &lt;code&gt;internal-default-interrupt-process&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad928e450478c2ee2f972890b7f476fec9518899" translate="yes" xml:space="preserve">
          <source>This variable is a list of strings, each describing one environment variable. The functions &lt;code&gt;getenv&lt;/code&gt; and &lt;code&gt;setenv&lt;/code&gt; work by means of this variable.</source>
          <target state="translated">This variable is a list of strings, each describing one environment variable. The functions &lt;code&gt;getenv&lt;/code&gt; and &lt;code&gt;setenv&lt;/code&gt; work by means of this variable.</target>
        </trans-unit>
        <trans-unit id="019729030d7f528fa882520193abfe0636ac6ef2" translate="yes" xml:space="preserve">
          <source>This variable is a list of suffixes (strings) to try adding to the specified program file name. The list should include &lt;code&gt;&quot;&quot;&lt;/code&gt; if you want the name to be tried exactly as specified. The default value is system-dependent.</source>
          <target state="translated">This variable is a list of suffixes (strings) to try adding to the specified program file name. The list should include &lt;code&gt;&quot;&quot;&lt;/code&gt; if you want the name to be tried exactly as specified. The default value is system-dependent.</target>
        </trans-unit>
        <trans-unit id="71e6e9699e598953ad68f45834b68438c1678d93" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that Emacs runs after initializing a new text terminal. (This applies when Emacs starts up in non-windowed mode, and when making a tty &lt;code&gt;emacsclient&lt;/code&gt; connection.) The hook runs after loading your init file (if applicable) and the terminal-specific Lisp file, so you can use it to adjust the definitions made by that file.</source>
          <target state="translated">This variable is a normal hook that Emacs runs after initializing a new text terminal. (This applies when Emacs starts up in non-windowed mode, and when making a tty &lt;code&gt;emacsclient&lt;/code&gt; connection.) The hook runs after loading your init file (if applicable) and the terminal-specific Lisp file, so you can use it to adjust the definitions made by that file.</target>
        </trans-unit>
        <trans-unit id="cc94f282c9a33b6d17eb327be833789be53f4e80" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that Emacs runs before suspending.</source>
          <target state="translated">この変数は、Emacsがサスペンドする前に実行する通常のフックです。</target>
        </trans-unit>
        <trans-unit id="161804933a898b6ce3815d927143897231ca924e" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that Emacs runs on resuming after a suspension.</source>
          <target state="translated">この変数は、サスペンド後の再開時にEmacsが実行する通常のフックです。</target>
        </trans-unit>
        <trans-unit id="067a9793a37e5b13d1fa26a6240ed27801da0d83" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that is run whenever a buffer is changed that was previously in the unmodified state.</source>
          <target state="translated">この変数は、以前は変更されていない状態だったバッファが変更されるたびに実行される通常のフックです。</target>
        </trans-unit>
        <trans-unit id="dc8a1a6e522c3155d706b319dc60d360ef84bf69" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">This variable is a normal hook. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="055b47c6f182f3895741b93e0453e248a18dc3f4" translate="yes" xml:space="preserve">
          <source>This variable is also the threshold for motion of the mouse to count as a drag.</source>
          <target state="translated">この変数は、マウスの動きがドラッグとしてカウントされる閾値でもあります。</target>
        </trans-unit>
        <trans-unit id="0775e11bc47c6c9aa391629165fd13f07f7886a9" translate="yes" xml:space="preserve">
          <source>This variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">This variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2c1f7c6b398e0096b95fd38063ff445df4e85135" translate="yes" xml:space="preserve">
          <source>This variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;. It is used to implement incremental search mode.</source>
          <target state="translated">This variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;. It is used to implement incremental search mode.</target>
        </trans-unit>
        <trans-unit id="aff1906dcbd5538dbdd5f4b77127483d16fc81fd" translate="yes" xml:space="preserve">
          <source>This variable is an alist describing keymaps that may or may not be active according to the values of certain variables. Its elements look like this:</source>
          <target state="translated">この変数は、特定の変数の値によってアクティブになったり、ならなかったりするキーマップを記述したリストです。その要素は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="9bf8a251cb783050ddc345f638dd7b108ad2b16a" translate="yes" xml:space="preserve">
          <source>This variable is an alist mapping image types to file name extensions. Emacs uses this in conjunction with the &lt;code&gt;:format&lt;/code&gt; image property (see below) to give a hint to the ImageMagick library as to the type of an image. Each element has the form &lt;code&gt;(&lt;var&gt;type&lt;/var&gt;
&lt;var&gt;extension&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;type&lt;/var&gt; is a symbol specifying an image content-type, and &lt;var&gt;extension&lt;/var&gt; is a string that specifies the associated file name extension.</source>
          <target state="translated">This variable is an alist mapping image types to file name extensions. Emacs uses this in conjunction with the &lt;code&gt;:format&lt;/code&gt; image property (see below) to give a hint to the ImageMagick library as to the type of an image. Each element has the form &lt;code&gt;(&lt;var&gt;type&lt;/var&gt; &lt;var&gt;extension&lt;/var&gt;)&lt;/code&gt; , where &lt;var&gt;type&lt;/var&gt; is a symbol specifying an image content-type, and &lt;var&gt;extension&lt;/var&gt; is a string that specifies the associated file name extension.</target>
        </trans-unit>
        <trans-unit id="6c7441610c3a78b915a4e35eb1c09eb17fc914f8" translate="yes" xml:space="preserve">
          <source>This variable is an alist of elements of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; .
&lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt;. Normally, there is one element for each Emacs register that has been used.</source>
          <target state="translated">This variable is an alist of elements of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt; . Normally, there is one element for each Emacs register that has been used.</target>
        </trans-unit>
        <trans-unit id="c005dccb280eafc5942f145355e725dae803dbb5" translate="yes" xml:space="preserve">
          <source>This variable is an alist of syntax table modifiers to use while processing &lt;code&gt;imenu-generic-expression&lt;/code&gt;, to override the syntax table of the current buffer. Each element should have this form:</source>
          <target state="translated">This variable is an alist of syntax table modifiers to use while processing &lt;code&gt;imenu-generic-expression&lt;/code&gt; , to override the syntax table of the current buffer. Each element should have this form:</target>
        </trans-unit>
        <trans-unit id="667451d1cd5450086c893e0dd92a52214569dd62" translate="yes" xml:space="preserve">
          <source>This variable is an alist of text patterns and corresponding coding systems. Each element has the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt;
. &lt;var&gt;coding-system&lt;/var&gt;)&lt;/code&gt;; a file whose first few kilobytes match &lt;var&gt;regexp&lt;/var&gt; is decoded with &lt;var&gt;coding-system&lt;/var&gt; when its contents are read into a buffer. The settings in this alist take priority over &lt;code&gt;coding:&lt;/code&gt; tags in the files and the contents of &lt;code&gt;file-coding-system-alist&lt;/code&gt; (see below). The default value is set so that Emacs automatically recognizes mail files in Babyl format and reads them with no code conversions.</source>
          <target state="translated">This variable is an alist of text patterns and corresponding coding systems. Each element has the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;coding-system&lt;/var&gt;)&lt;/code&gt; ; a file whose first few kilobytes match &lt;var&gt;regexp&lt;/var&gt; is decoded with &lt;var&gt;coding-system&lt;/var&gt; when its contents are read into a buffer. The settings in this alist take priority over &lt;code&gt;coding:&lt;/code&gt; tags in the files and the contents of &lt;code&gt;file-coding-system-alist&lt;/code&gt; (see below). The default value is set so that Emacs automatically recognizes mail files in Babyl format and reads them with no code conversions.</target>
        </trans-unit>
        <trans-unit id="94a29e4805ccc22e16f51eeab593167416353c0a" translate="yes" xml:space="preserve">
          <source>This variable is an alist of user-defined command-line options and associated handler functions. By default it is empty, but you can add elements if you wish.</source>
          <target state="translated">この変数は、ユーザ定義のコマンドラインオプションと関連するハンドラ関数のリストです。デフォルトでは空ですが、必要に応じて要素を追加することができます。</target>
        </trans-unit>
        <trans-unit id="2cab6b86ef5216fa5fc8c63a4d0ac1605f26a69b" translate="yes" xml:space="preserve">
          <source>This variable is an alist specifying which coding systems to use for a subprocess, depending on which program is running in the subprocess. It works like &lt;code&gt;file-coding-system-alist&lt;/code&gt;, except that &lt;var&gt;pattern&lt;/var&gt; is matched against the program name used to start the subprocess. The coding system or systems specified in this alist are used to initialize the coding systems used for I/O to the subprocess, but you can specify other coding systems later using &lt;code&gt;set-process-coding-system&lt;/code&gt;.</source>
          <target state="translated">This variable is an alist specifying which coding systems to use for a subprocess, depending on which program is running in the subprocess. It works like &lt;code&gt;file-coding-system-alist&lt;/code&gt; , except that &lt;var&gt;pattern&lt;/var&gt; is matched against the program name used to start the subprocess. The coding system or systems specified in this alist are used to initialize the coding systems used for I/O to the subprocess, but you can specify other coding systems later using &lt;code&gt;set-process-coding-system&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="373e9dce11ae976d1e778d4eafe0d3a69feb2897" translate="yes" xml:space="preserve">
          <source>This variable is an alist specifying which parameters get saved by &lt;code&gt;current-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-get&lt;/code&gt;, and subsequently restored by &lt;code&gt;set-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-put&lt;/code&gt;. See &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;.</source>
          <target state="translated">This variable is an alist specifying which parameters get saved by &lt;code&gt;current-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-get&lt;/code&gt; , and subsequently restored by &lt;code&gt;set-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-put&lt;/code&gt; . See &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a3f81404dfac1fe44b53204c180b72eb7545faed" translate="yes" xml:space="preserve">
          <source>This variable is an alist that specifies the coding system to use for network streams. It works much like &lt;code&gt;file-coding-system-alist&lt;/code&gt;, with the difference that the &lt;var&gt;pattern&lt;/var&gt; in an element may be either a port number or a regular expression. If it is a regular expression, it is matched against the network service name used to open the network stream.</source>
          <target state="translated">This variable is an alist that specifies the coding system to use for network streams. It works much like &lt;code&gt;file-coding-system-alist&lt;/code&gt; , with the difference that the &lt;var&gt;pattern&lt;/var&gt; in an element may be either a port number or a regular expression. If it is a regular expression, it is matched against the network service name used to open the network stream.</target>
        </trans-unit>
        <trans-unit id="3a959be21ff862cf002f86cdcaf3a543f74ddbe6" translate="yes" xml:space="preserve">
          <source>This variable is an alist that specifies the coding systems to use for reading and writing particular files. Each element has the form &lt;code&gt;(&lt;var&gt;pattern&lt;/var&gt; . &lt;var&gt;coding&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;pattern&lt;/var&gt; is a regular expression that matches certain file names. The element applies to file names that match &lt;var&gt;pattern&lt;/var&gt;.</source>
          <target state="translated">This variable is an alist that specifies the coding systems to use for reading and writing particular files. Each element has the form &lt;code&gt;(&lt;var&gt;pattern&lt;/var&gt; . &lt;var&gt;coding&lt;/var&gt;)&lt;/code&gt; , where &lt;var&gt;pattern&lt;/var&gt; is a regular expression that matches certain file names. The element applies to file names that match &lt;var&gt;pattern&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a7972cb56630206ee640b4248a3ccc058f94097b" translate="yes" xml:space="preserve">
          <source>This variable is an alist that specifies the coding systems to use for reading and writing particular files. Its form is like that of &lt;code&gt;file-coding-system-alist&lt;/code&gt;, but, unlike the latter, this variable takes priority over any &lt;code&gt;coding:&lt;/code&gt; tags in the file.</source>
          <target state="translated">This variable is an alist that specifies the coding systems to use for reading and writing particular files. Its form is like that of &lt;code&gt;file-coding-system-alist&lt;/code&gt; , but, unlike the latter, this variable takes priority over any &lt;code&gt;coding:&lt;/code&gt; tags in the file.</target>
        </trans-unit>
        <trans-unit id="36c69cfbac56eab11877033b8b333faca3c9ecb2" translate="yes" xml:space="preserve">
          <source>This variable is an association list mapping terminal types to their aliases. For example, an element of the form &lt;code&gt;(&quot;vt102&quot;
. &quot;vt100&quot;)&lt;/code&gt; means to treat a terminal of type &amp;lsquo;</source>
          <target state="translated">This variable is an association list mapping terminal types to their aliases. For example, an element of the form &lt;code&gt;(&quot;vt102&quot; . &quot;vt100&quot;)&lt;/code&gt; means to treat a terminal of type &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="124f6da8225ba9005cd78976d832a6444e2d5930" translate="yes" xml:space="preserve">
          <source>This variable is an older variant of &lt;code&gt;scroll-conservatively&lt;/code&gt;. The difference is that if its value is &lt;var&gt;n&lt;/var&gt;, that permits scrolling only by precisely &lt;var&gt;n&lt;/var&gt; lines, not a smaller number. This feature does not work with &lt;code&gt;scroll-margin&lt;/code&gt;. The default value is zero.</source>
          <target state="translated">This variable is an older variant of &lt;code&gt;scroll-conservatively&lt;/code&gt; . The difference is that if its value is &lt;var&gt;n&lt;/var&gt; , that permits scrolling only by precisely &lt;var&gt;n&lt;/var&gt; lines, not a smaller number. This feature does not work with &lt;code&gt;scroll-margin&lt;/code&gt; . The default value is zero.</target>
        </trans-unit>
        <trans-unit id="4e34486b85511f4c0616559a5644a62aeb9440a2" translate="yes" xml:space="preserve">
          <source>This variable is another keymap used just like &lt;code&gt;input-decode-map&lt;/code&gt; to translate input events into other events. It differs from &lt;code&gt;input-decode-map&lt;/code&gt; in that it goes to work after &lt;code&gt;local-function-key-map&lt;/code&gt; is finished rather than before; it receives the results of translation by &lt;code&gt;local-function-key-map&lt;/code&gt;.</source>
          <target state="translated">This variable is another keymap used just like &lt;code&gt;input-decode-map&lt;/code&gt; to translate input events into other events. It differs from &lt;code&gt;input-decode-map&lt;/code&gt; in that it goes to work after &lt;code&gt;local-function-key-map&lt;/code&gt; is finished rather than before; it receives the results of translation by &lt;code&gt;local-function-key-map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5939ba0f237dde5ad4377992ce082070202f65ef" translate="yes" xml:space="preserve">
          <source>This variable is automatically buffer-local in all buffers; its value specifies the buffer&amp;rsquo;s display table. If it is &lt;code&gt;nil&lt;/code&gt;, there is no buffer display table.</source>
          <target state="translated">This variable is automatically buffer-local in all buffers; its value specifies the buffer&amp;rsquo;s display table. If it is &lt;code&gt;nil&lt;/code&gt; , there is no buffer display table.</target>
        </trans-unit>
        <trans-unit id="c215a418df69d5bc5e4d0af22dcea97a5d9a31d1" translate="yes" xml:space="preserve">
          <source>This variable is displayed at the end of the mode line.</source>
          <target state="translated">この変数は、モードラインの最後に表示されます。</target>
        </trans-unit>
        <trans-unit id="c848938c7b57cf6e780da020514fc4b9f3212981" translate="yes" xml:space="preserve">
          <source>This variable is displayed at the front of the mode line. By default, this construct is displayed right at the beginning of the mode line, except that if there is a memory-full message, it is displayed first.</source>
          <target state="translated">この変数はモード行の先頭に表示されます。デフォルトでは、この変数はモード行の先頭に表示されますが、メモリがいっぱいのメッセージがある場合は最初に表示されることを除いては、モード行の先頭に表示されます。</target>
        </trans-unit>
        <trans-unit id="0bc313dc0a92d8a91dc86fe9988d07a6ce0408fa" translate="yes" xml:space="preserve">
          <source>This variable is ignored if the buffer is already displayed in the selected window or never appeared in it before, or if &lt;code&gt;switch-to-buffer&lt;/code&gt; calls &lt;code&gt;pop-to-buffer&lt;/code&gt; to display the buffer.</source>
          <target state="translated">This variable is ignored if the buffer is already displayed in the selected window or never appeared in it before, or if &lt;code&gt;switch-to-buffer&lt;/code&gt; calls &lt;code&gt;pop-to-buffer&lt;/code&gt; to display the buffer.</target>
        </trans-unit>
        <trans-unit id="d35b4864af0de99a8d562e2ac965a573b15d48a2" translate="yes" xml:space="preserve">
          <source>This variable is ignored if the given &lt;var&gt;library&lt;/var&gt; is statically linked into Emacs.</source>
          <target state="translated">This variable is ignored if the given &lt;var&gt;library&lt;/var&gt; is statically linked into Emacs.</target>
        </trans-unit>
        <trans-unit id="797f256bf076b78b90391f0e757c3fdf9ac63473" translate="yes" xml:space="preserve">
          <source>This variable is non-&lt;code&gt;nil&lt;/code&gt; if Emacs is in the process of loading a file, and it is &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This variable is non- &lt;code&gt;nil&lt;/code&gt; if Emacs is in the process of loading a file, and it is &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="1eb3b35fd50500f504a0f75fdaa9b199fdad25b8" translate="yes" xml:space="preserve">
          <source>This variable is non-&lt;code&gt;nil&lt;/code&gt; if and only if a keyboard macro is being defined. A command can test this variable so as to behave differently while a macro is being defined. The value is &lt;code&gt;append&lt;/code&gt; while appending to the definition of an existing macro. The commands &lt;code&gt;start-kbd-macro&lt;/code&gt;, &lt;code&gt;kmacro-start-macro&lt;/code&gt; and &lt;code&gt;end-kbd-macro&lt;/code&gt; set this variable&amp;mdash;do not set it yourself.</source>
          <target state="translated">This variable is non- &lt;code&gt;nil&lt;/code&gt; if and only if a keyboard macro is being defined. A command can test this variable so as to behave differently while a macro is being defined. The value is &lt;code&gt;append&lt;/code&gt; while appending to the definition of an existing macro. The commands &lt;code&gt;start-kbd-macro&lt;/code&gt; , &lt;code&gt;kmacro-start-macro&lt;/code&gt; and &lt;code&gt;end-kbd-macro&lt;/code&gt; set this variable&amp;mdash;do not set it yourself.</target>
        </trans-unit>
        <trans-unit id="5afd9a3da466744d91ed051036855f1a242c35a6" translate="yes" xml:space="preserve">
          <source>This variable is non-&lt;code&gt;nil&lt;/code&gt; when Emacs is running in batch mode.</source>
          <target state="translated">This variable is non- &lt;code&gt;nil&lt;/code&gt; when Emacs is running in batch mode.</target>
        </trans-unit>
        <trans-unit id="b71c63bce963e4462ce41aa1c838705cd629a347" translate="yes" xml:space="preserve">
          <source>This variable is normally &lt;code&gt;nil&lt;/code&gt;, but the undo commands bind it to &lt;code&gt;t&lt;/code&gt;. This is so that various kinds of change hooks can tell when they&amp;rsquo;re being called for the sake of undoing.</source>
          <target state="translated">This variable is normally &lt;code&gt;nil&lt;/code&gt; , but the undo commands bind it to &lt;code&gt;t&lt;/code&gt; . This is so that various kinds of change hooks can tell when they&amp;rsquo;re being called for the sake of undoing.</target>
        </trans-unit>
        <trans-unit id="d9bc765189a8bb5b379197dc9ae2ed38f4623384" translate="yes" xml:space="preserve">
          <source>This variable is normally set through the &amp;ldquo;other&amp;rdquo; elements in &lt;code&gt;font-lock-defaults&lt;/code&gt;:</source>
          <target state="translated">This variable is normally set through the &amp;ldquo;other&amp;rdquo; elements in &lt;code&gt;font-lock-defaults&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="27b670d7942c08834e5aa9a9568085b3f2bf3382" translate="yes" xml:space="preserve">
          <source>This variable is not a normal hook, because each function is called with two arguments: the window, and its new display-start position. At the time of the call, the display-start position of the argument window is already set to its new value, and the buffer to be displayed in the window is set as the current buffer.</source>
          <target state="translated">この変数は通常のフックではなく、各関数はウィンドウとその新しい表示開始位置という2つの引数を持って呼び出されるので、通常のフックではありません。呼び出しの時点では、引数のウィンドウの表示開始位置は既にその新しい値に設定されており、ウィンドウに表示されるバッファは現在のバッファとして設定されています。</target>
        </trans-unit>
        <trans-unit id="376a0b2e857edf00ad857a5b0eb49dadd1cf62cb" translate="yes" xml:space="preserve">
          <source>This variable is obsolete and will be removed in future versions.</source>
          <target state="translated">この変数は廃止され、将来のバージョンでは削除される予定です。</target>
        </trans-unit>
        <trans-unit id="caef5e927198433683f631964ab6349e7678f98b" translate="yes" xml:space="preserve">
          <source>This variable is provided for backward compatibility only. It is obeyed by &lt;code&gt;display-buffer&lt;/code&gt; via a special mechanism in &lt;code&gt;display-buffer-fallback-action&lt;/code&gt;, which calls the action function &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) when the value of this option is non-&lt;code&gt;nil&lt;/code&gt;. It is not consulted by &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; itself, which the user may specify directly in &lt;code&gt;display-buffer-alist&lt;/code&gt; etc.</source>
          <target state="translated">This variable is provided for backward compatibility only. It is obeyed by &lt;code&gt;display-buffer&lt;/code&gt; via a special mechanism in &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; , which calls the action function &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) when the value of this option is non- &lt;code&gt;nil&lt;/code&gt; . It is not consulted by &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; itself, which the user may specify directly in &lt;code&gt;display-buffer-alist&lt;/code&gt; etc.</target>
        </trans-unit>
        <trans-unit id="fe6ba336d942b6fcea77dc52d3523412d56064ec" translate="yes" xml:space="preserve">
          <source>This variable is provided mainly for backward compatibility. It is obeyed by &lt;code&gt;display-buffer&lt;/code&gt; via a special mechanism in &lt;code&gt;display-buffer-fallback-action&lt;/code&gt;, which calls the action function &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) if the value is non-&lt;code&gt;nil&lt;/code&gt;. (This is done before attempting to split a window.) This variable is not consulted by &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; itself, which the user may specify directly in &lt;code&gt;display-buffer-alist&lt;/code&gt; etc.</source>
          <target state="translated">This variable is provided mainly for backward compatibility. It is obeyed by &lt;code&gt;display-buffer&lt;/code&gt; via a special mechanism in &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; , which calls the action function &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) if the value is non- &lt;code&gt;nil&lt;/code&gt; . (This is done before attempting to split a window.) This variable is not consulted by &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; itself, which the user may specify directly in &lt;code&gt;display-buffer-alist&lt;/code&gt; etc.</target>
        </trans-unit>
        <trans-unit id="93e1ba20cdb5f38185724217a17fe96e960eda25" translate="yes" xml:space="preserve">
          <source>This variable is set automatically by Emacs. Its value is &lt;code&gt;t&lt;/code&gt; when there are two or more frames (not counting minibuffer-only frames or invisible frames). The default value of &lt;code&gt;frame-title-format&lt;/code&gt; uses &lt;code&gt;multiple-frames&lt;/code&gt; so as to put the buffer name in the frame title only when there is more than one frame.</source>
          <target state="translated">This variable is set automatically by Emacs. Its value is &lt;code&gt;t&lt;/code&gt; when there are two or more frames (not counting minibuffer-only frames or invisible frames). The default value of &lt;code&gt;frame-title-format&lt;/code&gt; uses &lt;code&gt;multiple-frames&lt;/code&gt; so as to put the buffer name in the frame title only when there is more than one frame.</target>
        </trans-unit>
        <trans-unit id="0f6b0216548829286d841787d7fb6ac3ba4b4400" translate="yes" xml:space="preserve">
          <source>This variable is set by modes to specify how to fontify text in that mode. It automatically becomes buffer-local when set. If its value is &lt;code&gt;nil&lt;/code&gt;, Font Lock mode does no highlighting, and you can use the &amp;lsquo;</source>
          <target state="translated">This variable is set by modes to specify how to fontify text in that mode. It automatically becomes buffer-local when set. If its value is &lt;code&gt;nil&lt;/code&gt; , Font Lock mode does no highlighting, and you can use the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="03be4af58c3aec1ad32af06e6b698351482d7eec" translate="yes" xml:space="preserve">
          <source>This variable is set non-&lt;code&gt;nil&lt;/code&gt; by defining or altering any abbrevs (except system abbrevs). This serves as a flag for various Emacs commands to offer to save your abbrevs.</source>
          <target state="translated">This variable is set non- &lt;code&gt;nil&lt;/code&gt; by defining or altering any abbrevs (except system abbrevs). This serves as a flag for various Emacs commands to offer to save your abbrevs.</target>
        </trans-unit>
        <trans-unit id="ca27bbac57654ccf2415ebe2c70b3ea90647ce9e" translate="yes" xml:space="preserve">
          <source>This variable is set to the last input event that was read by the command loop as part of a command. The principal use of this variable is in &lt;code&gt;self-insert-command&lt;/code&gt;, which uses it to decide which character to insert.</source>
          <target state="translated">This variable is set to the last input event that was read by the command loop as part of a command. The principal use of this variable is in &lt;code&gt;self-insert-command&lt;/code&gt; , which uses it to decide which character to insert.</target>
        </trans-unit>
        <trans-unit id="f52560d9347e2a733b950594d1ee2bd1ee802fbb" translate="yes" xml:space="preserve">
          <source>This variable is set up by Emacs just like &lt;code&gt;last-command&lt;/code&gt;, but never altered by Lisp programs.</source>
          <target state="translated">This variable is set up by Emacs just like &lt;code&gt;last-command&lt;/code&gt; , but never altered by Lisp programs.</target>
        </trans-unit>
        <trans-unit id="76a29e52f85f2aa6242f6e4f58aafd9e372ad48e" translate="yes" xml:space="preserve">
          <source>This variable is significant only if &lt;code&gt;backup-by-copying&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, since copying is always used when that variable is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This variable is significant only if &lt;code&gt;backup-by-copying&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; , since copying is always used when that variable is non- &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02406f64c5cf3ddc50c8626b920a2fa095ddb8df" translate="yes" xml:space="preserve">
          <source>This variable is the definition of the most recently defined keyboard macro. Its value is a string or vector, or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This variable is the definition of the most recently defined keyboard macro. Its value is a string or vector, or &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50ab5da14852f23091c972692a46461ad3a9497e" translate="yes" xml:space="preserve">
          <source>This variable is the meta-prefix character code. It is used for translating a meta character to a two-character sequence so it can be looked up in a keymap. For useful results, the value should be a prefix event (see &lt;a href=&quot;prefix-keys#Prefix-Keys&quot;&gt;Prefix Keys&lt;/a&gt;). The default value is 27, which is the</source>
          <target state="translated">This variable is the meta-prefix character code. It is used for translating a meta character to a two-character sequence so it can be looked up in a keymap. For useful results, the value should be a prefix event (see &lt;a href=&quot;prefix-keys#Prefix-Keys&quot;&gt;Prefix Keys&lt;/a&gt;). The default value is 27, which is the</target>
        </trans-unit>
        <trans-unit id="376c5d142708b7d85e9e19b23ca69182f40d0fc1" translate="yes" xml:space="preserve">
          <source>This variable is the standard obarray for use by &lt;code&gt;intern&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt;.</source>
          <target state="translated">This variable is the standard obarray for use by &lt;code&gt;intern&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1039647cd38f8bfd4258dddb552926ab6a4a4ed9" translate="yes" xml:space="preserve">
          <source>This variable is used by &lt;code&gt;read-file-name&lt;/code&gt;, and thus, indirectly, by most commands reading file names. (This includes all commands that use the code letters &amp;lsquo;</source>
          <target state="translated">This variable is used by &lt;code&gt;read-file-name&lt;/code&gt; , and thus, indirectly, by most commands reading file names. (This includes all commands that use the code letters &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="aedb0bf79b146af9682aaaed6462ef9188293a47" translate="yes" xml:space="preserve">
          <source>This variable is used by passing it as an argument to the function &lt;code&gt;replace-match&lt;/code&gt;. See &lt;a href=&quot;replacing-match#Replacing-Match&quot;&gt;Replacing Match&lt;/a&gt;.</source>
          <target state="translated">This variable is used by passing it as an argument to the function &lt;code&gt;replace-match&lt;/code&gt; . See &lt;a href=&quot;replacing-match#Replacing-Match&quot;&gt;Replacing Match&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="66315d01aad0af584ac9d069327490c6bab486f4" translate="yes" xml:space="preserve">
          <source>This variable is used by the function &lt;code&gt;delete-auto-save-file-if-necessary&lt;/code&gt;. If it is non-&lt;code&gt;nil&lt;/code&gt;, Emacs deletes auto-save files when a true save is done (in the visited file). This saves disk space and unclutters your directory.</source>
          <target state="translated">This variable is used by the function &lt;code&gt;delete-auto-save-file-if-necessary&lt;/code&gt; . If it is non- &lt;code&gt;nil&lt;/code&gt; , Emacs deletes auto-save files when a true save is done (in the visited file). This saves disk space and unclutters your directory.</target>
        </trans-unit>
        <trans-unit id="62db85ef23e40c3a7577d5236a43bea3d0b01cf4" translate="yes" xml:space="preserve">
          <source>This variable is used in conjunction with the &lt;code&gt;minor-mode-alist&lt;/code&gt; to display the minor mode name in the mode line. It also determines whether the minor mode keymap is active, via &lt;code&gt;minor-mode-map-alist&lt;/code&gt; (see &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;). Individual commands or hooks can also check its value.</source>
          <target state="translated">This variable is used in conjunction with the &lt;code&gt;minor-mode-alist&lt;/code&gt; to display the minor mode name in the mode line. It also determines whether the minor mode keymap is active, via &lt;code&gt;minor-mode-map-alist&lt;/code&gt; (see &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;). Individual commands or hooks can also check its value.</target>
        </trans-unit>
        <trans-unit id="f10f1b7d43a13da55ece7c54f425ba94153de2b3" translate="yes" xml:space="preserve">
          <source>This variable is used to define the maximum size of image that Emacs will load. Emacs will refuse to load (and display) any image that is larger than this limit.</source>
          <target state="translated">この変数は、Emacs が読み込む画像の最大サイズを定義するために使用されます。Emacs は、この制限より大きい画像のロード (および表示)を拒否します。</target>
        </trans-unit>
        <trans-unit id="cb63013f442736c9ce6a071ed8662141a1cace92" translate="yes" xml:space="preserve">
          <source>This variable is used to identify &lt;code&gt;emacsclient&lt;/code&gt; frames.</source>
          <target state="translated">This variable is used to identify &lt;code&gt;emacsclient&lt;/code&gt; frames.</target>
        </trans-unit>
        <trans-unit id="e87edcba6da84a8bebb299509ddb8ae3703fd740" translate="yes" xml:space="preserve">
          <source>This variable is used to show whether &lt;code&gt;default-directory&lt;/code&gt; for the current buffer is remote.</source>
          <target state="translated">This variable is used to show whether &lt;code&gt;default-directory&lt;/code&gt; for the current buffer is remote.</target>
        </trans-unit>
        <trans-unit id="84409f176efb2c42d215233ff2fae5d51b9502e8" translate="yes" xml:space="preserve">
          <source>This variable is used to specify extra properties of the current completion command. It is intended to be let-bound by specialized completion commands. Its value should be a list of property and value pairs. The following properties are supported:</source>
          <target state="translated">この変数は、現在の補完コマンドの追加プロパティを指定するために使用されます。これは、特化した補完コマンドによってレットバウンドされることを意図しています。その値は、プロパティと値のペアのリストでなければなりません。以下のプロパティがサポートされています。</target>
        </trans-unit>
        <trans-unit id="c93b80661ff181348fe72f3b646d1db6a33626b1" translate="yes" xml:space="preserve">
          <source>This variable is useful for referring back to values of forms recently evaluated. It is generally a bad idea to print the value of &lt;code&gt;values&lt;/code&gt; itself, since this may be very long. Instead, examine particular elements, like this:</source>
          <target state="translated">This variable is useful for referring back to values of forms recently evaluated. It is generally a bad idea to print the value of &lt;code&gt;values&lt;/code&gt; itself, since this may be very long. Instead, examine particular elements, like this:</target>
        </trans-unit>
        <trans-unit id="436db1e43d4a73a88992fa12b3a5af3ca227c735" translate="yes" xml:space="preserve">
          <source>This variable keeps the main thread Emacs is running, or &lt;code&gt;nil&lt;/code&gt; if Emacs is compiled without thread support.</source>
          <target state="translated">This variable keeps the main thread Emacs is running, or &lt;code&gt;nil&lt;/code&gt; if Emacs is compiled without thread support.</target>
        </trans-unit>
        <trans-unit id="0d4cd53aa022f27698b2e0664ef69eb65bd377c2" translate="yes" xml:space="preserve">
          <source>This variable lets Lisp programs &amp;ldquo;press&amp;rdquo; the modifier keys on the keyboard. The value is a character. Only the modifiers of the character matter. Each time the user types a keyboard key, it is altered as if those modifier keys were held down. For instance, if you bind &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; to &lt;code&gt;?\C-\M-a&lt;/code&gt;, then all keyboard input characters typed during the scope of the binding will have the control and meta modifiers applied to them. The character &lt;code&gt;?\C-@&lt;/code&gt;, equivalent to the integer 0, does not count as a control character for this purpose, but as a character with no modifiers. Thus, setting &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; to zero cancels any modification.</source>
          <target state="translated">This variable lets Lisp programs &amp;ldquo;press&amp;rdquo; the modifier keys on the keyboard. The value is a character. Only the modifiers of the character matter. Each time the user types a keyboard key, it is altered as if those modifier keys were held down. For instance, if you bind &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; to &lt;code&gt;?\C-\M-a&lt;/code&gt; , then all keyboard input characters typed during the scope of the binding will have the control and meta modifiers applied to them. The character &lt;code&gt;?\C-@&lt;/code&gt; , equivalent to the integer 0, does not count as a control character for this purpose, but as a character with no modifiers. Thus, setting &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; to zero cancels any modification.</target>
        </trans-unit>
        <trans-unit id="01341c9aaa373d91702cb7e8ffda6a4c916f0625" translate="yes" xml:space="preserve">
          <source>This variable lets you specify alternative font registries to try, if a given registry is specified and doesn&amp;rsquo;t exist. Each element should have this form:</source>
          <target state="translated">This variable lets you specify alternative font registries to try, if a given registry is specified and doesn&amp;rsquo;t exist. Each element should have this form:</target>
        </trans-unit>
        <trans-unit id="d1c3d7e0c03db028ef7a807bfc918813c4fc5bca" translate="yes" xml:space="preserve">
          <source>This variable limits the effective value of &lt;code&gt;scroll-margin&lt;/code&gt; to a fraction of the current window line height. For example, if the current window has 20 lines and &lt;code&gt;maximum-scroll-margin&lt;/code&gt; is 0.1, then the scroll margins will never be larger than 2 lines, no matter how big &lt;code&gt;scroll-margin&lt;/code&gt; is.</source>
          <target state="translated">This variable limits the effective value of &lt;code&gt;scroll-margin&lt;/code&gt; to a fraction of the current window line height. For example, if the current window has 20 lines and &lt;code&gt;maximum-scroll-margin&lt;/code&gt; is 0.1, then the scroll margins will never be larger than 2 lines, no matter how big &lt;code&gt;scroll-margin&lt;/code&gt; is.</target>
        </trans-unit>
        <trans-unit id="4c7a4e958845ea40dde2dc0c25650bff2b222785" translate="yes" xml:space="preserve">
          <source>This variable names the function to be called to request the user to select a proper coding system for encoding text when the default coding system for an output operation cannot safely encode that text. The default value of this variable is &lt;code&gt;select-safe-coding-system&lt;/code&gt;. Emacs primitives that write text to files, such as &lt;code&gt;write-region&lt;/code&gt;, or send text to other processes, such as &lt;code&gt;process-send-region&lt;/code&gt;, normally call the value of this variable, unless &lt;code&gt;coding-system-for-write&lt;/code&gt; is bound to a non-&lt;code&gt;nil&lt;/code&gt; value (see &lt;a href=&quot;specifying-coding-systems#Specifying-Coding-Systems&quot;&gt;Specifying Coding Systems&lt;/a&gt;).</source>
          <target state="translated">This variable names the function to be called to request the user to select a proper coding system for encoding text when the default coding system for an output operation cannot safely encode that text. The default value of this variable is &lt;code&gt;select-safe-coding-system&lt;/code&gt; . Emacs primitives that write text to files, such as &lt;code&gt;write-region&lt;/code&gt; , or send text to other processes, such as &lt;code&gt;process-send-region&lt;/code&gt; , normally call the value of this variable, unless &lt;code&gt;coding-system-for-write&lt;/code&gt; is bound to a non- &lt;code&gt;nil&lt;/code&gt; value (see &lt;a href=&quot;specifying-coding-systems#Specifying-Coding-Systems&quot;&gt;Specifying Coding Systems&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c23531bf92c593cfc879e88f1976a1773f78275d" translate="yes" xml:space="preserve">
          <source>This variable provides a way of communicating killed text to other programs, when you are using a window system. Its value should be &lt;code&gt;nil&lt;/code&gt; or a function of one required argument.</source>
          <target state="translated">This variable provides a way of communicating killed text to other programs, when you are using a window system. Its value should be &lt;code&gt;nil&lt;/code&gt; or a function of one required argument.</target>
        </trans-unit>
        <trans-unit id="1e7e004520da68bebcdd98a02f42428be2f0ca64" translate="yes" xml:space="preserve">
          <source>This variable provides a way of transferring killed text from other programs, when you are using a window system. Its value should be &lt;code&gt;nil&lt;/code&gt; or a function of no arguments.</source>
          <target state="translated">This variable provides a way of transferring killed text from other programs, when you are using a window system. Its value should be &lt;code&gt;nil&lt;/code&gt; or a function of no arguments.</target>
        </trans-unit>
        <trans-unit id="030a51c56b05836f902d0059148131139d93e32f" translate="yes" xml:space="preserve">
          <source>This variable provides a way to override how the filling functions, such as &lt;code&gt;fill-region&lt;/code&gt; and &lt;code&gt;fill-paragraph&lt;/code&gt;, move forward to the next paragraph. Its value should be a function, which is called with a single argument &lt;var&gt;n&lt;/var&gt;, the number of paragraphs to move, and should return the difference between &lt;var&gt;n&lt;/var&gt; and the number of paragraphs actually moved. The default value of this variable is &lt;code&gt;forward-paragraph&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Paragraphs&lt;/a&gt; in</source>
          <target state="translated">This variable provides a way to override how the filling functions, such as &lt;code&gt;fill-region&lt;/code&gt; and &lt;code&gt;fill-paragraph&lt;/code&gt; , move forward to the next paragraph. Its value should be a function, which is called with a single argument &lt;var&gt;n&lt;/var&gt; , the number of paragraphs to move, and should return the difference between &lt;var&gt;n&lt;/var&gt; and the number of paragraphs actually moved. The default value of this variable is &lt;code&gt;forward-paragraph&lt;/code&gt; . See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Paragraphs&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="74277818ea9e0a2b5ede9f7b50a31147007f80c2" translate="yes" xml:space="preserve">
          <source>This variable provides a way to override the filling of paragraphs. If its value is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;fill-paragraph&lt;/code&gt; calls this function to do the work. If the function returns a non-&lt;code&gt;nil&lt;/code&gt; value, &lt;code&gt;fill-paragraph&lt;/code&gt; assumes the job is done, and immediately returns that value.</source>
          <target state="translated">This variable provides a way to override the filling of paragraphs. If its value is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;fill-paragraph&lt;/code&gt; calls this function to do the work. If the function returns a non- &lt;code&gt;nil&lt;/code&gt; value, &lt;code&gt;fill-paragraph&lt;/code&gt; assumes the job is done, and immediately returns that value.</target>
        </trans-unit>
        <trans-unit id="3800af661db458dc57b43e12e3912a9d79acd6e2" translate="yes" xml:space="preserve">
          <source>This variable provides another way to mark some variable values as safe. It is a list of cons cells &lt;code&gt;(&lt;var&gt;var&lt;/var&gt; . &lt;var&gt;val&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;var&lt;/var&gt; is a variable name and &lt;var&gt;val&lt;/var&gt; is a value which is safe for that variable.</source>
          <target state="translated">This variable provides another way to mark some variable values as safe. It is a list of cons cells &lt;code&gt;(&lt;var&gt;var&lt;/var&gt; . &lt;var&gt;val&lt;/var&gt;)&lt;/code&gt; , where &lt;var&gt;var&lt;/var&gt; is a variable name and &lt;var&gt;val&lt;/var&gt; is a value which is safe for that variable.</target>
        </trans-unit>
        <trans-unit id="e9a7fa839145e25eab7f151fb8df4a357ebe5d83" translate="yes" xml:space="preserve">
          <source>This variable records the debugging status of the current interactive command. Each time a command is called interactively, this variable is bound to &lt;code&gt;nil&lt;/code&gt;. The debugger can set this variable to leave information for future debugger invocations during the same command invocation.</source>
          <target state="translated">This variable records the debugging status of the current interactive command. Each time a command is called interactively, this variable is bound to &lt;code&gt;nil&lt;/code&gt; . The debugger can set this variable to leave information for future debugger invocations during the same command invocation.</target>
        </trans-unit>
        <trans-unit id="f873bc0862353ed3c8f1ba89acfe8e0c6ef90866" translate="yes" xml:space="preserve">
          <source>This variable records the last terminal input event read, whether as part of a command or explicitly by a Lisp program.</source>
          <target state="translated">この変数は、コマンドの一部として、あるいはLispプログラムによって明示的に読み込まれたかどうかに関わらず、最後に読み込まれた端末入力イベントを記録します。</target>
        </trans-unit>
        <trans-unit id="869dca2c2f9e7f7334d4386ab6d41a8e06254e7c" translate="yes" xml:space="preserve">
          <source>This variable records the name of the command now being executed by the editor command loop. Like &lt;code&gt;last-command&lt;/code&gt;, it is normally a symbol with a function definition.</source>
          <target state="translated">This variable records the name of the command now being executed by the editor command loop. Like &lt;code&gt;last-command&lt;/code&gt; , it is normally a symbol with a function definition.</target>
        </trans-unit>
        <trans-unit id="2d872a1f6d0665742d4676aabfb07f7d4c548912" translate="yes" xml:space="preserve">
          <source>This variable records the name of the previous command executed by the command loop (the one before the current command). Normally the value is a symbol with a function definition, but this is not guaranteed.</source>
          <target state="translated">この変数には、コマンドループで実行された直前のコマンド(現在のコマンドの前のコマンド)の名前が記録されます。通常、値は関数定義を持つシンボルですが、これは保証されていません。</target>
        </trans-unit>
        <trans-unit id="5918077a2c6da3ca401f27a49f212010561acad3" translate="yes" xml:space="preserve">
          <source>This variable records which frame the last input event was directed to. Usually this is the frame that was selected when the event was generated, but if that frame has redirected input focus to another frame, the value is the frame to which the event was redirected. See &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;.</source>
          <target state="translated">This variable records which frame the last input event was directed to. Usually this is the frame that was selected when the event was generated, but if that frame has redirected input focus to another frame, the value is the frame to which the event was redirected. See &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="838efdf98ab2d6a4103e8b325a314c7f102faafd" translate="yes" xml:space="preserve">
          <source>This variable says which user&amp;rsquo;s init files should be used by Emacs&amp;mdash;or &lt;code&gt;nil&lt;/code&gt; if none. &lt;code&gt;&quot;&quot;&lt;/code&gt; stands for the user who originally logged in. The value reflects command-line options such as &amp;lsquo;</source>
          <target state="translated">This variable says which user&amp;rsquo;s init files should be used by Emacs&amp;mdash;or &lt;code&gt;nil&lt;/code&gt; if none. &lt;code&gt;&quot;&quot;&lt;/code&gt; stands for the user who originally logged in. The value reflects command-line options such as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="b8cdae38282e80af0604a2e14d035922b435d21a" translate="yes" xml:space="preserve">
          <source>This variable specifies a function for creating a new frame, in order to make a new window for displaying a buffer. It is used by the &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; action function.</source>
          <target state="translated">This variable specifies a function for creating a new frame, in order to make a new window for displaying a buffer. It is used by the &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; action function.</target>
        </trans-unit>
        <trans-unit id="5e4442ca5c7969783e4ca5795f2afb7427dd11bd" translate="yes" xml:space="preserve">
          <source>This variable specifies a function for splitting a window, in order to make a new window for displaying a buffer. It is used by the &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; action function to actually split the window.</source>
          <target state="translated">This variable specifies a function for splitting a window, in order to make a new window for displaying a buffer. It is used by the &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; action function to actually split the window.</target>
        </trans-unit>
        <trans-unit id="65bbbcce82a2b180ed1f53c1c2a5225d601d52fe" translate="yes" xml:space="preserve">
          <source>This variable specifies a function that &lt;code&gt;perform-replace&lt;/code&gt; calls to search for the next regexp to replace. Its default value is &lt;code&gt;re-search-forward&lt;/code&gt;. Any other value should name a function of 3 arguments: the first 3 arguments of &lt;code&gt;re-search-forward&lt;/code&gt; (see &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;).</source>
          <target state="translated">This variable specifies a function that &lt;code&gt;perform-replace&lt;/code&gt; calls to search for the next regexp to replace. Its default value is &lt;code&gt;re-search-forward&lt;/code&gt; . Any other value should name a function of 3 arguments: the first 3 arguments of &lt;code&gt;re-search-forward&lt;/code&gt; (see &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="b5c4a8558378e7897087c9a8964f5db5818d45af" translate="yes" xml:space="preserve">
          <source>This variable specifies a function that &lt;code&gt;perform-replace&lt;/code&gt; calls to search for the next string to replace. Its default value is &lt;code&gt;search-forward&lt;/code&gt;. Any other value should name a function of 3 arguments: the first 3 arguments of &lt;code&gt;search-forward&lt;/code&gt; (see &lt;a href=&quot;string-search#String-Search&quot;&gt;String Search&lt;/a&gt;).</source>
          <target state="translated">This variable specifies a function that &lt;code&gt;perform-replace&lt;/code&gt; calls to search for the next string to replace. Its default value is &lt;code&gt;search-forward&lt;/code&gt; . Any other value should name a function of 3 arguments: the first 3 arguments of &lt;code&gt;search-forward&lt;/code&gt; (see &lt;a href=&quot;string-search#String-Search&quot;&gt;String Search&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="a45f554a4aa8212f2f21f28653b295cbf0e7b2bb" translate="yes" xml:space="preserve">
          <source>This variable specifies a list of directories for searching for bitmap files, for the &lt;code&gt;:stipple&lt;/code&gt; attribute.</source>
          <target state="translated">This variable specifies a list of directories for searching for bitmap files, for the &lt;code&gt;:stipple&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="8fba5ef4481ab8fcb184f7f33ecf0a7dd3cc3c3a" translate="yes" xml:space="preserve">
          <source>This variable specifies additional properties (other than &lt;code&gt;font-lock-face&lt;/code&gt;) that are being managed by Font Lock mode. It is used by &lt;code&gt;font-lock-default-unfontify-region&lt;/code&gt;, which normally only manages the &lt;code&gt;font-lock-face&lt;/code&gt; property. If you want Font Lock to manage other properties as well, you must specify them in a &lt;var&gt;facespec&lt;/var&gt; in &lt;code&gt;font-lock-keywords&lt;/code&gt; as well as add them to this list. See &lt;a href=&quot;search_002dbased-fontification#Search_002dbased-Fontification&quot;&gt;Search-based Fontification&lt;/a&gt;.</source>
          <target state="translated">This variable specifies additional properties (other than &lt;code&gt;font-lock-face&lt;/code&gt; ) that are being managed by Font Lock mode. It is used by &lt;code&gt;font-lock-default-unfontify-region&lt;/code&gt; , which normally only manages the &lt;code&gt;font-lock-face&lt;/code&gt; property. If you want Font Lock to manage other properties as well, you must specify them in a &lt;var&gt;facespec&lt;/var&gt; in &lt;code&gt;font-lock-keywords&lt;/code&gt; as well as add them to this list. See &lt;a href=&quot;search_002dbased-fontification#Search_002dbased-Fontification&quot;&gt;Search-based Fontification&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="58b32be0616add930abcc0229a185014687618a3" translate="yes" xml:space="preserve">
          <source>This variable specifies an alternate expression-reading function for &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;eval-region&lt;/code&gt; to use instead of &lt;code&gt;read&lt;/code&gt;. The function should accept one argument, just as &lt;code&gt;read&lt;/code&gt; does.</source>
          <target state="translated">This variable specifies an alternate expression-reading function for &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;eval-region&lt;/code&gt; to use instead of &lt;code&gt;read&lt;/code&gt; . The function should accept one argument, just as &lt;code&gt;read&lt;/code&gt; does.</target>
        </trans-unit>
        <trans-unit id="47afa05a6ca15744c12c8cfb9ead083a585c8508" translate="yes" xml:space="preserve">
          <source>This variable specifies an extra margin to add around tool bar items. The value is an integer, a number of pixels. The default is 4.</source>
          <target state="translated">この変数は、ツールバーのアイテムの周りに追加する余白を指定します。値は整数で、ピクセル数です。デフォルトは4です。</target>
        </trans-unit>
        <trans-unit id="28a60e86db17f840ccf892abf60a57ce5b31694a" translate="yes" xml:space="preserve">
          <source>This variable specifies errors which should not enter the debugger, regardless of the value of &lt;code&gt;debug-on-error&lt;/code&gt;. Its value is a list of error condition symbols and/or regular expressions. If the error has any of those condition symbols, or if the error message matches any of the regular expressions, then that error does not enter the debugger.</source>
          <target state="translated">This variable specifies errors which should not enter the debugger, regardless of the value of &lt;code&gt;debug-on-error&lt;/code&gt; . Its value is a list of error condition symbols and/or regular expressions. If the error has any of those condition symbols, or if the error message matches any of the regular expressions, then that error does not enter the debugger.</target>
        </trans-unit>
        <trans-unit id="610d2f60484605ad3b25ae4464f4129aa59413bb" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when a window buffer or size change occurred or the selected window or a frame&amp;rsquo;s selected window has changed. The value should be a list of functions that take one argument.</source>
          <target state="translated">This variable specifies functions called during redisplay when a window buffer or size change occurred or the selected window or a frame&amp;rsquo;s selected window has changed. The value should be a list of functions that take one argument.</target>
        </trans-unit>
        <trans-unit id="3d8e14aa00cc2e5390b451efdefaf901a24ade75" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when a window size change occurred. The value should be a list of functions that take one argument.</source>
          <target state="translated">この変数は、ウィンドウサイズの変更が発生した際の再表示時に呼び出される関数を指定します。値は1つの引数を取る関数のリストでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ce5feb8199a3d98702bebba8d8e3973ea691970e" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when either the buffer or the size of a window has changed. The value should be a list of functions that take no argument.</source>
          <target state="translated">この変数は、バッファまたはウィンドウのサイズが変更された場合の再表示時に呼び出される関数を指定します。値は引数を取らない関数のリストでなければなりません。</target>
        </trans-unit>
        <trans-unit id="7806002cf71bb7e163e4d092fb091325c48654cf" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when the selected window or a frame&amp;rsquo;s selected window has changed. The value should be a list of functions that take one argument.</source>
          <target state="translated">This variable specifies functions called during redisplay when the selected window or a frame&amp;rsquo;s selected window has changed. The value should be a list of functions that take one argument.</target>
        </trans-unit>
        <trans-unit id="f7833b0be19287045b397324f27aa2c7aab7bc4e" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when window buffers have changed. The value should be a list of functions that take one argument.</source>
          <target state="translated">この変数は、ウィンドウバッファが変更された場合の再表示時に呼び出される関数を指定します。値は1つの引数を取る関数のリストでなければなりません。</target>
        </trans-unit>
        <trans-unit id="9c60b198dea33a3125eb0199ee5d70f221776b30" translate="yes" xml:space="preserve">
          <source>This variable specifies how many lines to keep in the</source>
          <target state="translated">この変数は</target>
        </trans-unit>
        <trans-unit id="19eb12c9e520a401f4bc57afed37f4fb936151c2" translate="yes" xml:space="preserve">
          <source>This variable specifies how many of the newest backup versions to keep in the Dired command</source>
          <target state="translated">この変数は、Diredコマンドで保持する最新のバックアップバージョンの数を指定します。</target>
        </trans-unit>
        <trans-unit id="5df2b7a09afcd7fb1b1eb2e48b42fd361b595d3a" translate="yes" xml:space="preserve">
          <source>This variable specifies how to blink the cursor. Each element has the form &lt;code&gt;(&lt;var&gt;on-state&lt;/var&gt; . &lt;var&gt;off-state&lt;/var&gt;)&lt;/code&gt;. Whenever the cursor type equals &lt;var&gt;on-state&lt;/var&gt; (comparing using &lt;code&gt;equal&lt;/code&gt;), the corresponding &lt;var&gt;off-state&lt;/var&gt; specifies what the cursor looks like when it blinks off. Both &lt;var&gt;on-state&lt;/var&gt; and &lt;var&gt;off-state&lt;/var&gt; should be suitable values for the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</source>
          <target state="translated">この変数は、カーソルの点滅方法を指定します。各要素の形式は &lt;code&gt;(&lt;var&gt;on-state&lt;/var&gt; . &lt;var&gt;off-state&lt;/var&gt;)&lt;/code&gt; 。カーソルタイプが &lt;var&gt;on-state&lt;/var&gt; 等しい場合（ &lt;code&gt;equal&lt;/code&gt; を使用して比較）、対応する &lt;var&gt;off-state&lt;/var&gt; は、カーソルが点滅したときのカーソルの外観を指定します。 &lt;var&gt;on-state&lt;/var&gt; と &lt;var&gt;off-state&lt;/var&gt; 状態の両方が、 &lt;code&gt;cursor-type&lt;/code&gt; フレームパラメータに適した値である必要があります。</target>
        </trans-unit>
        <trans-unit id="a80bbc6a3b5bf0e978540d2a9ace58466f8031cd" translate="yes" xml:space="preserve">
          <source>This variable specifies how to compute a name for a frame when you have not explicitly specified one. The variable&amp;rsquo;s value is actually a mode line construct, just like &lt;code&gt;mode-line-format&lt;/code&gt;, except that the &amp;lsquo;</source>
          <target state="translated">この変数は、フレームの名前を明示的に指定していない場合に、その名前を計算する方法を指定します。変数の値は、実際には &lt;code&gt;mode-line-format&lt;/code&gt; と同じように、モードライン構造です。</target>
        </trans-unit>
        <trans-unit id="fc57b803d6d7feb0e149332857d8f86659f5aeeb" translate="yes" xml:space="preserve">
          <source>This variable specifies how to compute the name for an iconified frame, when you have not explicitly specified the frame title. This title appears in the icon itself.</source>
          <target state="translated">この変数は、フレームタイトルを明示的に指定していない場合に、アイコン化されたフレームの名前を計算する方法を指定します。このタイトルはアイコン自体に表示されます。</target>
        </trans-unit>
        <trans-unit id="6f21c5f703b1d42ea73e3ce7b2318d579f34230f" translate="yes" xml:space="preserve">
          <source>This variable specifies how to print floating-point numbers. The default is &lt;code&gt;nil&lt;/code&gt;, meaning use the shortest output that represents the number without losing information.</source>
          <target state="translated">この変数は、浮動小数点数の出力方法を指定します。デフォルトは &lt;code&gt;nil&lt;/code&gt; です。これは、情報を失うことなく、数値を表す最短の出力を使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="4d85ac68025c7374662b52e6041af9d632761223" translate="yes" xml:space="preserve">
          <source>This variable specifies major modes to use for scripts that specify a command interpreter in a &amp;lsquo;</source>
          <target state="translated">この変数は、コマンドインタープリターを 'で指定するスクリプトに使用する主要なモードを指定します。</target>
        </trans-unit>
        <trans-unit id="33a8cdb5288fc58856324af31431fd97f9dee42b" translate="yes" xml:space="preserve">
          <source>This variable specifies scaling for certain faces. Its value should be a list of elements of the form</source>
          <target state="translated">この変数は、特定の面のスケーリングを指定します。この値は、次のような形式の要素のリストでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ad0b684e7b13be16e65d9022dd3b6342565c5b43" translate="yes" xml:space="preserve">
          <source>This variable specifies special completion styles and other completion behaviors to use when completing certain types of text. Its value should be an alist with elements of the form &lt;code&gt;(&lt;var&gt;category&lt;/var&gt;
. &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;category&lt;/var&gt; is a symbol describing what is being completed; currently, the &lt;code&gt;buffer&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, and &lt;code&gt;unicode-name&lt;/code&gt; categories are defined, but others can be defined via specialized completion functions (see &lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;Programmed Completion&lt;/a&gt;). &lt;var&gt;alist&lt;/var&gt; is an association list describing how completion should behave for the corresponding category. The following alist keys are supported:</source>
          <target state="translated">この変数は、特定のタイプのテキストを完成させるときに使用する特別な完成スタイルおよびその他の完成動作を指定します。その値は、フォームの要素を持つ連想リストであるべきである &lt;code&gt;(&lt;var&gt;category&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; 。 &lt;var&gt;category&lt;/var&gt; は、何が完了しているのかを説明する記号です。現在、 &lt;code&gt;buffer&lt;/code&gt; 、 &lt;code&gt;file&lt;/code&gt; 、および &lt;code&gt;unicode-name&lt;/code&gt; カテゴリが定義されていますが、その他は特殊な完了関数を介して定義できます（&lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;プログラムされた完了を&lt;/a&gt;参照）。 &lt;var&gt;alist&lt;/var&gt; は、対応するカテゴリの完了がどのように動作するかを説明する関連付けリストです。次のリストキーがサポートされています。</target>
        </trans-unit>
        <trans-unit id="201fe48697604b97fbb6e28322917a0c5c6923fc" translate="yes" xml:space="preserve">
          <source>This variable specifies special text property handling conditions for yanked text. It takes effect after the text has been inserted (either normally, or via the &lt;code&gt;yank-handler&lt;/code&gt; property), and prior to &lt;code&gt;yank-excluded-properties&lt;/code&gt; taking effect.</source>
          <target state="translated">この変数は、ヤンクされたテキストの特別なテキストプロパティ処理条件を指定します。これは、テキストが挿入された後（通常、または &lt;code&gt;yank-handler&lt;/code&gt; プロパティを介して）、 &lt;code&gt;yank-excluded-properties&lt;/code&gt; が有効になる前に有効になります。</target>
        </trans-unit>
        <trans-unit id="9441cfaaf5b9a202d9dfacdc63307e6a8d043ca7" translate="yes" xml:space="preserve">
          <source>This variable specifies the application name that &lt;code&gt;x-get-resource&lt;/code&gt; should look up. The default value is &lt;code&gt;&quot;Emacs&quot;&lt;/code&gt;. You can examine X resources for other application names by binding this variable to some other string, around a call to &lt;code&gt;x-get-resource&lt;/code&gt;.</source>
          <target state="translated">この変数は、 &lt;code&gt;x-get-resource&lt;/code&gt; が検索するアプリケーション名を指定します。デフォルト値は &lt;code&gt;&quot;Emacs&quot;&lt;/code&gt; です。 &lt;code&gt;x-get-resource&lt;/code&gt; の呼び出しの前後で、この変数を他の文字列にバインドすることにより、他のアプリケーション名についてXリソースを調べることができます。</target>
        </trans-unit>
        <trans-unit id="dc683e48d553af20f144d383bf880d2a28d6ba52" translate="yes" xml:space="preserve">
          <source>This variable specifies the base left margin column. In Fundamental mode,</source>
          <target state="translated">この変数は、左マージンの基準となる列を指定します。ファンダメンタルモードでは</target>
        </trans-unit>
        <trans-unit id="1c8864e7cce633e7e1b197bed02481239c82db1f" translate="yes" xml:space="preserve">
          <source>This variable specifies the character to be used on GUI frames as an indication that the column is sorted in the ascending order.</source>
          <target state="translated">この変数は、カラムが昇順にソートされていることを示すために、GUIフレーム上で使用する文字を指定します。</target>
        </trans-unit>
        <trans-unit id="fa51bf5fffabf0f819d44b04889de7f6858728a3" translate="yes" xml:space="preserve">
          <source>This variable specifies the character to use to ask to see the next line of a menu. Its initial value is 32, the code for</source>
          <target state="translated">この変数は、メニューの次の行を表示するために使用する文字を指定します。初期値は32で</target>
        </trans-unit>
        <trans-unit id="be2aa08dfc092a1c6bf9ab20d5cbfc2f275f4ea5" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding system for saving the buffer (by overriding &lt;code&gt;buffer-file-coding-system&lt;/code&gt;). Note that it is not used for &lt;code&gt;write-region&lt;/code&gt;.</source>
          <target state="translated">この変数は、バッファーを保存するためのコーディングシステムを指定します（ &lt;code&gt;buffer-file-coding-system&lt;/code&gt; をオーバーライドすることにより）。 &lt;code&gt;write-region&lt;/code&gt; は使用されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="5ca4ad8129f5074b342b9b1d7e2613ffa381d9f1" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding system to use for decoding system error messages and&amp;mdash;on X Window system only&amp;mdash;keyboard input, for sending batch output to the standard output and error streams, for encoding the format argument to &lt;code&gt;format-time-string&lt;/code&gt;, and for decoding the return value of &lt;code&gt;format-time-string&lt;/code&gt;.</source>
          <target state="translated">この変数は、システムエラーメッセージのデコード、および（X Windowシステムの場合のみ）キーボード入力、標準出力およびエラーストリームへのバッチ出力の送信、 &lt;code&gt;format-time-string&lt;/code&gt; へのformat引数のエンコード、および &lt;code&gt;format-time-string&lt;/code&gt; の戻り値をデコードします。</target>
        </trans-unit>
        <trans-unit id="ed9b5319052f4785f314a8827aaf6892ed10d740" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding system to use when reading and writing selections or the clipboard. See &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;. The default is &lt;code&gt;compound-text-with-extensions&lt;/code&gt;, which converts to the text representation that X11 normally uses.</source>
          <target state="translated">この変数は、選択範囲またはクリップボードを読み書きするときに使用するコーディングシステムを指定します。&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;コーディングシステムを&lt;/a&gt;参照してください。デフォルトは &lt;code&gt;compound-text-with-extensions&lt;/code&gt; で、これはX11が通常使用するテキスト表現に変換されます。</target>
        </trans-unit>
        <trans-unit id="378b9a5d350f9a9ad8ee132e85190d8db4f5a38f" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding systems to use for subprocess (and network stream) input and output, when nothing else specifies what to do.</source>
          <target state="translated">この変数は、他に何をすべきかを指定していない場合に、サブプロセス(およびネットワークストリーム)の入出力に使用するコーディングシステムを指定します。</target>
        </trans-unit>
        <trans-unit id="d20f5fdfae6e9e29472d33941477bfbb49f9c979" translate="yes" xml:space="preserve">
          <source>This variable specifies the current buffer&amp;rsquo;s text representation. If it is non-&lt;code&gt;nil&lt;/code&gt;, the buffer contains multibyte text; otherwise, it contains unibyte encoded text or binary non-text data.</source>
          <target state="translated">この変数は、現在のバッファーのテキスト表現を指定します。それが非であれば &lt;code&gt;nil&lt;/code&gt; で、バッファはマルチバイト文字が含まれています。それ以外の場合は、ユニバイトでエンコードされたテキストまたはバイナリの非テキストデータが含まれます。</target>
        </trans-unit>
        <trans-unit id="5d3980a91c0b6581e0fe9f29071be798902ea992" translate="yes" xml:space="preserve">
          <source>This variable specifies the default radix for &lt;code&gt;sort-numeric-fields&lt;/code&gt; to parse numbers.</source>
          <target state="translated">この変数は、 &lt;code&gt;sort-numeric-fields&lt;/code&gt; を解析するためのsort-numeric-fieldsのデフォルトの基数を指定します。</target>
        </trans-unit>
        <trans-unit id="bfb2f574c8c4c28f9c49e5ab317eb6fdf3230549" translate="yes" xml:space="preserve">
          <source>This variable specifies the directory name for creating certain temporary files, which are likely to be small.</source>
          <target state="translated">この変数は、小さくなりがちな特定の一時ファイルを作成するためのディレクトリ名を指定します。</target>
        </trans-unit>
        <trans-unit id="a987d6d65258d6d9671e6bac8d806a9e1156dde3" translate="yes" xml:space="preserve">
          <source>This variable specifies the directory name for creating temporary files. Its value should be a directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;), but it is good for Lisp programs to cope if the value is a directory&amp;rsquo;s file name instead. Using the value as the second argument to &lt;code&gt;expand-file-name&lt;/code&gt; is a good way to achieve that.</source>
          <target state="translated">この変数は、一時ファイルを作成するためのディレクトリ名を指定します。その値は、（参照ディレクトリ名でなければなりません&lt;a href=&quot;directory-names#Directory-Names&quot;&gt;ディレクトリ名を&lt;/a&gt;）、それが価値ではなく、ディレクトリのファイル名である場合に対応するためのLispプログラムのために良いです。値を &lt;code&gt;expand-file-name&lt;/code&gt; の2番目の引数として使用することは、それを実現するための良い方法です。</target>
        </trans-unit>
        <trans-unit id="1611a6b6c3693c0e75493a5f0497cd5f97a908bb" translate="yes" xml:space="preserve">
          <source>This variable specifies the format for displaying the warning type in the warning message. The result of formatting the type this way gets included in the message under the control of the string in the entry in &lt;code&gt;warning-levels&lt;/code&gt;. The default value is &lt;code&gt;&quot; (%s)&quot;&lt;/code&gt;. If you bind it to &lt;code&gt;&quot;&quot;&lt;/code&gt; then the warning type won&amp;rsquo;t appear at all.</source>
          <target state="translated">この変数は、警告メッセージに警告タイプを表示するための形式を指定します。この方法で型をフォーマットした結果は、 &lt;code&gt;warning-levels&lt;/code&gt; エントリの文字列の制御下でメッセージに含まれます。デフォルト値は &lt;code&gt;&quot; (%s)&quot;&lt;/code&gt; です。 &lt;code&gt;&quot;&quot;&lt;/code&gt; バインドすると、警告タイプはまったく表示されません。</target>
        </trans-unit>
        <trans-unit id="547c7ec8698eaa3947afe33c14120014564c9731" translate="yes" xml:space="preserve">
          <source>This variable specifies the format to use for auto-saving. Its value is a list of format names, just like the value of &lt;code&gt;buffer-file-format&lt;/code&gt;; however, it is used instead of &lt;code&gt;buffer-file-format&lt;/code&gt; for writing auto-save files. If the value is &lt;code&gt;t&lt;/code&gt;, the default, auto-saving uses the same format as a regular save in the same buffer. This variable is always buffer-local in all buffers.</source>
          <target state="translated">この変数は、自動保存に使用する形式を指定します。その値は、 &lt;code&gt;buffer-file-format&lt;/code&gt; の値と同じように、フォーマット名のリストです。ただし、自動保存ファイルの書き込みには、 &lt;code&gt;buffer-file-format&lt;/code&gt; の代わりに使用されます。値が &lt;code&gt;t&lt;/code&gt; の場合、デフォルトの自動保存では、同じバッファーでの通常の保存と同じ形式が使用されます。この変数は、すべてのバッファーで常にバッファーローカルです。</target>
        </trans-unit>
        <trans-unit id="b4dc5b5723ce3a0a28294a22f224b01267f52812" translate="yes" xml:space="preserve">
          <source>This variable specifies the frame to use for the minibuffer window, by default. It does not affect existing frames. It is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">この変数は、デフォルトでミニバッファウィンドウに使用するフレームを指定します。既存のフレームには影響しません。これは常に現在の端末に対してローカルであり、バッファローカルにすることはできません。&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;複数の端末を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1207c49d1658e5cddb3ac60c96b0abae0f872d43" translate="yes" xml:space="preserve">
          <source>This variable specifies the function to use for &lt;code&gt;auto-fill-function&lt;/code&gt;, if and when Auto Fill is turned on. Major modes can set buffer-local values for this variable to alter how Auto Fill works.</source>
          <target state="translated">この変数は、 &lt;code&gt;auto-fill-function&lt;/code&gt; がオンになっている場合に、自動入力機能に使用する関数を指定します。メジャーモードでは、この変数のバッファローカル値を設定して、自動入力の動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="90cff5f29e4dc76d1ef32bcfb9a2d7a7e447091d" translate="yes" xml:space="preserve">
          <source>This variable specifies the function to use for creating a buffer index. The function should take no arguments, and return an index alist for the current buffer. It is called within &lt;code&gt;save-excursion&lt;/code&gt;, so where it leaves point makes no difference.</source>
          <target state="translated">この変数は、バッファインデックスの作成に使用する関数を指定します。この関数は引数を取らず、現在のバッファのインデックスリストを返す必要があります。これは &lt;code&gt;save-excursion&lt;/code&gt; 内で呼び出されるため、ポイントを離れる場所に違いはありません。</target>
        </trans-unit>
        <trans-unit id="bf7f6ea21193d6889f8633999c0158dad3dc1690" translate="yes" xml:space="preserve">
          <source>This variable specifies the height of the border drawn below the tool bar area. An integer specifies height as a number of pixels. If the value is one of &lt;code&gt;internal-border-width&lt;/code&gt; (the default) or &lt;code&gt;border-width&lt;/code&gt;, the tool bar border height corresponds to the corresponding frame parameter.</source>
          <target state="translated">この変数は、ツールバー領域の下に描画される境界線の高さを指定します。整数は、高さをピクセル数として指定します。値が &lt;code&gt;internal-border-width&lt;/code&gt; （デフォルト）または &lt;code&gt;border-width&lt;/code&gt; のいずれかである場合、ツールバーの境界線の高さは、対応するフレームパラメーターに対応します。</target>
        </trans-unit>
        <trans-unit id="47037cd622dfd389fb7e9867995dde974ec8a5ea" translate="yes" xml:space="preserve">
          <source>This variable specifies the height of the buffer&amp;rsquo;s horizontal scroll bar, measured in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the value specified by the frame.</source>
          <target state="translated">この変数は、バッファーの水平スクロールバーの高さをピクセル単位で指定します。 &lt;code&gt;nil&lt;/code&gt; の値は、フレームで指定された値を使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="c3f89f4773cf5ef9dea1171ba5c6d7fa4f6ea06a" translate="yes" xml:space="preserve">
          <source>This variable specifies the instance name that &lt;code&gt;x-get-resource&lt;/code&gt; should look up. The default value is the name Emacs was invoked with, or the value specified with the &amp;lsquo;</source>
          <target state="translated">この変数は、 &lt;code&gt;x-get-resource&lt;/code&gt; が検索するインスタンス名を指定します。デフォルト値は、Emacsが呼び出された名前、または 'で指定された値です。</target>
        </trans-unit>
        <trans-unit id="364a24b2a4de2644ca246fb33bd538fb74192345" translate="yes" xml:space="preserve">
          <source>This variable specifies the list of frame parameters that a newly created frame inherits from the currently selected frame. For each parameter (a symbol) that is an element in this list and has not been assigned earlier when processing &lt;code&gt;make-frame&lt;/code&gt;, the function sets the value of that parameter in the created frame to its value in the selected frame.</source>
          <target state="translated">この変数は、新しく作成されたフレームが現在選択されているフレームから継承するフレームパラメータのリストを指定します。このリストの要素であり、 &lt;code&gt;make-frame&lt;/code&gt; の処理時に以前に割り当てられていないパラメーター（シンボル）ごとに、関数は、作成されたフレーム内のそのパラメーターの値を、選択されたフレーム内の値に設定します。</target>
        </trans-unit>
        <trans-unit id="2d35dbd1f1cbbc9d29c269281b758b180f96fa72" translate="yes" xml:space="preserve">
          <source>This variable specifies the locale to use for formatting time values. Changing the locale can cause messages to appear according to the conventions of a different language. If the variable is &lt;code&gt;nil&lt;/code&gt;, the locale is specified by environment variables in the usual POSIX fashion.</source>
          <target state="translated">この変数は、時間値のフォーマットに使用するロケールを指定します。ロケールを変更すると、別の言語の規則に従ってメッセージが表示される可能性があります。変数が &lt;code&gt;nil&lt;/code&gt; の場合、ロケールは通常のPOSIX方式で環境変数によって指定されます。</target>
        </trans-unit>
        <trans-unit id="ce1d2d8005b7ca34344c47676b32308fd49696c7" translate="yes" xml:space="preserve">
          <source>This variable specifies the locale to use for generating system error messages. Changing the locale can cause messages to come out in a different language or in a different orthography. If the variable is &lt;code&gt;nil&lt;/code&gt;, the locale is specified by environment variables in the usual POSIX fashion.</source>
          <target state="translated">この変数は、システムエラーメッセージの生成に使用するロケールを指定します。ロケールを変更すると、メッセージが別の言語または別の表記法で出力される可能性があります。変数が &lt;code&gt;nil&lt;/code&gt; の場合、ロケールは通常のPOSIX方式で環境変数によって指定されます。</target>
        </trans-unit>
        <trans-unit id="b7fba5cc3b98b6d29065924f8a9d4075b8157911" translate="yes" xml:space="preserve">
          <source>This variable specifies the location of the horizontal scroll bar. The possible values are &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, which means to use the frame&amp;rsquo;s default, and &lt;code&gt;nil&lt;/code&gt; for no scroll bar.</source>
          <target state="translated">この変数は、水平スクロールバーの位置を指定します。可能な値は、フレームのデフォルトを使用することを意味する &lt;code&gt;bottom&lt;/code&gt; 、 &lt;code&gt;t&lt;/code&gt; 、およびスクロールバーがない場合は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ba2de9ee13d4031729d5a9ee43dc1e6311f3a892" translate="yes" xml:space="preserve">
          <source>This variable specifies the location of the vertical scroll bar. The possible values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, which means to use the frame&amp;rsquo;s default, and &lt;code&gt;nil&lt;/code&gt; for no scroll bar.</source>
          <target state="translated">この変数は、垂直スクロールバーの位置を指定します。可能な値は、フレームのデフォルトを使用することを意味する &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;t&lt;/code&gt; 、およびスクロールバーがない場合は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="69133e246175bfd5d0a22d3fe1be1c90479173b0" translate="yes" xml:space="preserve">
          <source>This variable specifies the mapping from logical cursor type to the actual fringe bitmaps displayed in the right fringe. The value is an alist where each element has the form &lt;code&gt;(&lt;var&gt;cursor-type&lt;/var&gt;
. &lt;var&gt;bitmap&lt;/var&gt;)&lt;/code&gt;, which means to use the fringe bitmap &lt;var&gt;bitmap&lt;/var&gt; to display cursors of type &lt;var&gt;cursor-type&lt;/var&gt;.</source>
          <target state="translated">この変数は、論理カーソルタイプから右フリンジに表示される実際のフリンジビットマップへのマッピングを指定します。値は、各要素がフォーム有する連想リストである &lt;code&gt;(&lt;var&gt;cursor-type&lt;/var&gt; . &lt;var&gt;bitmap&lt;/var&gt;)&lt;/code&gt; 、フリンジビットマップを使用することを意味し &lt;var&gt;bitmap&lt;/var&gt; 形のカーソルを表示する &lt;var&gt;cursor-type&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c7d7911f4543d366f94621589ef0f22a2e59600" translate="yes" xml:space="preserve">
          <source>This variable specifies the marker insertion type (see &lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;Marker Insertion Types&lt;/a&gt;) of &lt;code&gt;window-point&lt;/code&gt;. The default is &lt;code&gt;nil&lt;/code&gt;, so &lt;code&gt;window-point&lt;/code&gt; will stay behind text inserted there.</source>
          <target state="translated">この変数は、 &lt;code&gt;window-point&lt;/code&gt; のマーカー挿入タイプ（「&lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;マーカー挿入タイプ」を&lt;/a&gt;参照）を指定します。デフォルトは &lt;code&gt;nil&lt;/code&gt; であるため、 &lt;code&gt;window-point&lt;/code&gt; はそこに挿入されたテキストの後ろに留まります。</target>
        </trans-unit>
        <trans-unit id="d547fc7b3e5daf8682664f7559fc4888275252b9" translate="yes" xml:space="preserve">
          <source>This variable specifies the maximum distance to scan for a matching parenthesis before giving up.</source>
          <target state="translated">この変数は、一致する括弧をスキャンしてからあきらめるまでの最大距離を指定します。</target>
        </trans-unit>
        <trans-unit id="4331531e42e3cfd8b105fc413fe044b36cda9ed5" translate="yes" xml:space="preserve">
          <source>This variable specifies the minimum distance between the baseline and the underline, in pixels, when displaying underlined text.</source>
          <target state="translated">この変数は、下線付きテキストを表示する際のベースラインと下線の最小距離をピクセル単位で指定します。</target>
        </trans-unit>
        <trans-unit id="4ff2fab04b0a8a80990c4c2dc50157d5d0a5b14a" translate="yes" xml:space="preserve">
          <source>This variable specifies the mouse pointer style for void text areas. These include the areas after the end of a line or below the last line in the buffer. The default is to use the &lt;code&gt;arrow&lt;/code&gt; (non-text) pointer style.</source>
          <target state="translated">この変数は、無効なテキスト領域のマウスポインタスタイルを指定します。これらには、行の終わりの後、またはバッファー内の最後の行の下の領域が含まれます。デフォルトでは、 &lt;code&gt;arrow&lt;/code&gt; （テキスト以外）のポインタースタイルを使用します。</target>
        </trans-unit>
        <trans-unit id="647b68f79271fb9a2bb273613105f8130038a3a3" translate="yes" xml:space="preserve">
          <source>This variable specifies the number of seconds an image can remain in the cache without being displayed. When an image is not displayed for this length of time, Emacs removes it from the image cache.</source>
          <target state="translated">この変数は、画像が表示されずにキャッシュに残る秒数を指定します。この時間の間画像が表示されない場合、Emacs は画像キャッシュから画像を削除します。</target>
        </trans-unit>
        <trans-unit id="3717e00be82f4280534f560bb48fdc135830758d" translate="yes" xml:space="preserve">
          <source>This variable specifies the number of seconds to keep indicating the matching parenthesis. A fraction of a second often gives good results, but the default is 1, which works on all systems.</source>
          <target state="translated">この変数は、一致する括弧を表示し続ける秒数を指定します。秒の何分の一かを指定すると良い結果が得られることが多いですが、デフォルトは1で、これはすべてのシステムで動作します。</target>
        </trans-unit>
        <trans-unit id="39d953edf710709c0a768c11e2dad4fd17e0bedd" translate="yes" xml:space="preserve">
          <source>This variable specifies the pointer shape to use ordinarily in the Emacs frame, for the &lt;code&gt;text&lt;/code&gt; pointer style.</source>
          <target state="translated">この変数は、 &lt;code&gt;text&lt;/code&gt; ポインタスタイルのために、Emacsフレームで通常使用するポインタ形状を指定します。</target>
        </trans-unit>
        <trans-unit id="3acb782e30c855540af87af7dfd6791f80e3c377" translate="yes" xml:space="preserve">
          <source>This variable specifies the pointer shape to use when the mouse is over mouse-sensitive text.</source>
          <target state="translated">この変数は、マウスがマウスセンシティブなテキストの上にマウスを置いたときに使用するポインタの形状を指定します。</target>
        </trans-unit>
        <trans-unit id="78daca2ffa4db7218ae8fa29709b23bb9b58f78b" translate="yes" xml:space="preserve">
          <source>This variable specifies the shadow width for tool bar items. The value is an integer, a number of pixels. The default is 1.</source>
          <target state="translated">ツールバー項目の影の幅を指定します。値は整数で、ピクセル数です。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="02be399ab6eb5a97c78ec2b2537fe2b1697e3d85" translate="yes" xml:space="preserve">
          <source>This variable specifies the site-customization file to load before the user&amp;rsquo;s init file. Its normal value is &lt;code&gt;&quot;site-start&quot;&lt;/code&gt;. The only way you can change it with real effect is to do so before dumping Emacs.</source>
          <target state="translated">この変数は、ユーザーのinitファイルの前にロードするサイトカスタマイズファイルを指定します。通常の値は &lt;code&gt;&quot;site-start&quot;&lt;/code&gt; です。実際の効果で変更できる唯一の方法は、Emacsをダンプする前に変更することです。</target>
        </trans-unit>
        <trans-unit id="37d4e059ccdb3e6de1f300dc91e0dd83ce69c04a" translate="yes" xml:space="preserve">
          <source>This variable specifies the width of the buffer&amp;rsquo;s vertical scroll bars, measured in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the value specified by the frame.</source>
          <target state="translated">この変数は、バッファーの垂直スクロールバーの幅をピクセル単位で指定します。 &lt;code&gt;nil&lt;/code&gt; の値は、フレームで指定された値を使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="c2154eb8d82062df0ff1bc0af13a3b298023129e" translate="yes" xml:space="preserve">
          <source>This variable specifies the width of the left margin, in character cell (a.k.a. &amp;ldquo;column&amp;rdquo;) units. It is buffer-local in all buffers. A value of &lt;code&gt;nil&lt;/code&gt; means no left marginal area.</source>
          <target state="translated">この変数は、左マージンの幅を文字セル（別名「列」）単位で指定します。これは、すべてのバッファーでバッファーローカルです。 &lt;code&gt;nil&lt;/code&gt; の値は、左マージン領域がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="6dbf7925fed5e555d32215115c54c9040fc53829" translate="yes" xml:space="preserve">
          <source>This variable specifies the width of the right margin, in character cell units. It is buffer-local in all buffers. A value of &lt;code&gt;nil&lt;/code&gt; means no right marginal area.</source>
          <target state="translated">この変数は、右マージンの幅を文字セル単位で指定します。これは、すべてのバッファーでバッファーローカルです。 &lt;code&gt;nil&lt;/code&gt; の値は、右辺縁領域がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="a9f9625a4db9d9be5024c43270ebd62ab0007def" translate="yes" xml:space="preserve">
          <source>This variable specifies whether &lt;code&gt;split-window-sensibly&lt;/code&gt; is allowed to split the window placing the new window below. If it is an integer, that means to split only if the original window has at least that many lines. If it is &lt;code&gt;nil&lt;/code&gt;, that means not to split this way.</source>
          <target state="translated">この変数は、 &lt;code&gt;split-window-sensibly&lt;/code&gt; がウィンドウを分割して、新しいウィンドウを下に配置できるかどうかを指定します。整数の場合、元のウィンドウに少なくともその数の行がある場合にのみ分割することを意味します。 &lt;code&gt;nil&lt;/code&gt; の場合、このように分割しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="b41a83fecf2ea8718c1d075ec448219f4d5c2e06" translate="yes" xml:space="preserve">
          <source>This variable specifies whether &lt;code&gt;split-window-sensibly&lt;/code&gt; is allowed to split the window placing the new window to the right. If the value is an integer, that means to split only if the original window has at least that many columns. If the value is &lt;code&gt;nil&lt;/code&gt;, that means not to split this way.</source>
          <target state="translated">この変数は、 &lt;code&gt;split-window-sensibly&lt;/code&gt; でウィンドウを分割して、新しいウィンドウを右側に配置できるかどうかを指定します。値が整数の場合、元のウィンドウに少なくともその数の列がある場合にのみ分割することを意味します。値が &lt;code&gt;nil&lt;/code&gt; の場合、この方法で分割しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="d9bb07b24457bfa0b74b8767f09ff0c6316a8090" translate="yes" xml:space="preserve">
          <source>This variable specifies which kinds of &lt;code&gt;invisible&lt;/code&gt; properties actually make a character invisible. Setting this variable makes it buffer-local.</source>
          <target state="translated">種類この変数を指定 &lt;code&gt;invisible&lt;/code&gt; 性質は、実際に文字を不可視に。この変数を設定すると、バッファローカルになります。</target>
        </trans-unit>
        <trans-unit id="17c813cb9033d42c0b8cf5d747a7b6085a942dbc" translate="yes" xml:space="preserve">
          <source>This variable states the format of the visited file. More precisely, this is a list of the file format names that were decoded in the course of visiting the current buffer&amp;rsquo;s file. It is always buffer-local in all buffers.</source>
          <target state="translated">この変数は、訪問したファイルの形式を示します。より正確には、これは現在のバッファのファイルにアクセスする過程でデコードされたファイル形式名のリストです。すべてのバッファで常にバッファローカルです。</target>
        </trans-unit>
        <trans-unit id="da7cafbff2b38383440d584757fd82a9de8eba44" translate="yes" xml:space="preserve">
          <source>This variable stores a list of available completion styles. Each element in the list has the form</source>
          <target state="translated">この変数は、利用可能な補完スタイルのリストを格納します。リストの各要素は</target>
        </trans-unit>
        <trans-unit id="17f83d8de294ef2cecc9630aaa2beb375107806f" translate="yes" xml:space="preserve">
          <source>This variable stores the most recently executed command that was not part of an input event. This is the command &lt;code&gt;repeat&lt;/code&gt; will try to repeat, See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repeating.html#Repeating&quot;&gt;Repeating&lt;/a&gt; in</source>
          <target state="translated">この変数は、入力イベントの一部ではなかった最後に実行されたコマンドを格納します。これは、コマンドで &lt;code&gt;repeat&lt;/code&gt; 参照してください、リピートしようと&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repeating.html#Repeating&quot;&gt;繰り返し&lt;/a&gt;に</target>
        </trans-unit>
        <trans-unit id="a115d98ecd06b867ba0d6d5fb383d4bc9e081148" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value indicates which element of the kill ring is at the front of the ring for yanking. More precisely, the value is a tail of the value of &lt;code&gt;kill-ring&lt;/code&gt;, and its &lt;small&gt;CAR&lt;/small&gt; is the kill string that</source>
          <target state="translated">この変数の値は、キルリングのどの要素がヤンクのためにリングの前にあるかを示します。より正確には、値は &lt;code&gt;kill-ring&lt;/code&gt; の値のテールであり、その&lt;small&gt;CAR&lt;/small&gt;は次のようなkill文字列です。</target>
        </trans-unit>
        <trans-unit id="28b449eebc7d7edfda6a70d0dbffa98c0835bd0a" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a function to be called on certain occasions to decide whether a file should have backup files. The function receives one argument, an absolute file name to consider. If the function returns &lt;code&gt;nil&lt;/code&gt;, backups are disabled for that file. Otherwise, the other variables in this section say whether and how to make backups.</source>
          <target state="translated">この変数の値は、ファイルにバックアップファイルを含めるかどうかを決定するために特定の機会に呼び出される関数です。この関数は、考慮すべき絶対ファイル名という1つの引数を受け取ります。関数が &lt;code&gt;nil&lt;/code&gt; を返す場合、そのファイルのバックアップは無効になります。それ以外の場合、このセクションの他の変数は、バックアップを作成するかどうか、および作成する方法を示します。</target>
        </trans-unit>
        <trans-unit id="dc8b8ca7c391cc44d3a365f8f9dc794435dbf006" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a function to use for making backup file names. The function &lt;code&gt;make-backup-file-name&lt;/code&gt; calls it. See &lt;a href=&quot;backup-names#Backup-Names&quot;&gt;Naming Backup Files&lt;/a&gt;.</source>
          <target state="translated">この変数の値は、バックアップファイル名を作成するために使用する関数です。関数 &lt;code&gt;make-backup-file-name&lt;/code&gt; はそれを呼び出します。&lt;a href=&quot;backup-names#Backup-Names&quot;&gt;バックアップファイルの命名を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="893a2fc55e2e2153c2af5f0618b49c99f500ff40" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of functions for handling an unrecognized command-line argument. Each time the next argument to be processed has no special meaning, the functions in this list are called, in order of appearance, until one of them returns a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">この変数の値は、認識されないコマンドライン引数を処理するための関数のリストです。処理される次の引数に特別な意味がない場合は常に、このリスト内の関数は、いずれかが &lt;code&gt;nil&lt;/code&gt; 以外の値を返すまで、出現順に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="bc2e266e96128e3a14fb9923a805d9d2b37dcd1d" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of locations in which to search for image files. If an element is a string or a variable symbol whose value is a string, the string is taken to be the name of a directory to search. If an element is a variable symbol whose value is a list, that is taken to be a list of directories to search.</source>
          <target state="translated">この変数の値は、画像ファイルを検索する場所のリストです。要素が文字列または値が文字列である変数シンボルの場合、文字列は検索するディレクトリの名前と見なされます。要素が変数シンボルであり、その値がリストである場合、それは検索するディレクトリのリストと見なされます。</target>
        </trans-unit>
        <trans-unit id="d741a57be79a7cf4500ec42da9b736aabe51fab0" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of recent complex commands, each represented as a form to evaluate. It continues to accumulate all complex commands for the duration of the editing session, but when it reaches the maximum size (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;), the oldest elements are deleted as new ones are added.</source>
          <target state="translated">この変数の値は、最近の複雑なコマンドのリストであり、それぞれが評価するフォームとして表されます。編集セッションの間、すべての複雑なコマンドを蓄積し続けますが、最大サイズに達すると（&lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;ミニバッファー履歴を&lt;/a&gt;参照）、新しい要素が追加されると、最も古い要素が削除されます。</target>
        </trans-unit>
        <trans-unit id="5058e0ab7f62d94f45af0797e7839b3845294923" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of variables, each of which specifies the position of an overlay arrow. The variable &lt;code&gt;overlay-arrow-position&lt;/code&gt; has its normal meaning because it is on this list.</source>
          <target state="translated">この変数の値は変数のリストであり、各変数はオーバーレイ矢印の位置を指定します。変数 &lt;code&gt;overlay-arrow-position&lt;/code&gt; は、このリストにあるため、通常の意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="44a929b2e08b8f6aa70b439f4cd1fa6273927793" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist of filename patterns and backup directories. Each element looks like</source>
          <target state="translated">この変数の値は、ファイル名パターンとバックアップディレクトリのリストです。各要素は次のようになります</target>
        </trans-unit>
        <trans-unit id="7aacd20b1436c5de4bc8e223a38bdc9776f8de89" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist of parameter values used when creating an initial minibuffer-only frame (i.e., the minibuffer-only frame that Emacs creates if &lt;code&gt;initial-frame-alist&lt;/code&gt; specifies a frame with no minibuffer).</source>
          <target state="translated">この変数の値は、初期ミニバッファーのみのフレーム（つまり、 &lt;code&gt;initial-frame-alist&lt;/code&gt; がミニバッファーのないフレームを指定した場合にEmacsが作成するミニバッファーのみのフレーム）を作成するときに使用されるパラメーター値のリストです。</target>
        </trans-unit>
        <trans-unit id="b2c83351d05a84fa1f3bb0c43c7d6af151d1760a" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist of parameter values used when creating the initial frame. You can set this variable to specify the appearance of the initial frame without altering subsequent frames. Each element has the form:</source>
          <target state="translated">この変数の値は、初期フレームの作成時に使用されるパラメーター値のリストです。この変数を設定して、後続のフレームを変更せずに最初のフレームの外観を指定できます。各要素の形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cab3f21a743ebbf42fa83ec406c102cb55344245" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist with elements of the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; .  &lt;var&gt;function&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;regexp&lt;/var&gt; is a regular expression and &lt;var&gt;function&lt;/var&gt; is a function or &lt;code&gt;nil&lt;/code&gt;. After visiting a file, &lt;code&gt;set-auto-mode&lt;/code&gt; calls &lt;var&gt;function&lt;/var&gt; if the text at the beginning of the buffer matches &lt;var&gt;regexp&lt;/var&gt; and &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;; if &lt;var&gt;function&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;auto-mode-alist&lt;/code&gt; gets to decide the mode.</source>
          <target state="translated">この変数の値は、フォームの要素を持つ連想リストである &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;function&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;regexp&lt;/var&gt; 正規表現であり、 &lt;var&gt;function&lt;/var&gt; 、関数またはある &lt;code&gt;nil&lt;/code&gt; 。ファイルにアクセスした後、バッファの先頭のテキストが &lt;var&gt;regexp&lt;/var&gt; と一致し、 &lt;var&gt;function&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;set-auto-mode&lt;/code&gt; は &lt;var&gt;function&lt;/var&gt; 呼び出します。 &lt;var&gt;function&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;auto-mode-alist&lt;/code&gt; がモードを決定します。</target>
        </trans-unit>
        <trans-unit id="3f326fd22cbf929b5ae168b7956962ea68f9c7f7" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the function to be used by &lt;code&gt;indent-for-tab-command&lt;/code&gt;, and various other indentation commands, to indent the current line. It is usually assigned by the major mode; for instance, Lisp mode sets it to &lt;code&gt;lisp-indent-line&lt;/code&gt;, C mode sets it to &lt;code&gt;c-indent-line&lt;/code&gt;, and so on. The default value is &lt;code&gt;indent-relative&lt;/code&gt;. See &lt;a href=&quot;auto_002dindentation#Auto_002dIndentation&quot;&gt;Auto-Indentation&lt;/a&gt;.</source>
          <target state="translated">この変数の値は、現在の行をインデントする &lt;code&gt;indent-for-tab-command&lt;/code&gt; 、indent-for-tab-commandおよびその他のさまざまなインデントコマンドによって使用される関数です。通常、メジャーモードによって割り当てられます。たとえば、Lispモードはそれを &lt;code&gt;lisp-indent-line&lt;/code&gt; に設定し、Cモードはそれを &lt;code&gt;c-indent-line&lt;/code&gt; に設定します。デフォルト値は &lt;code&gt;indent-relative&lt;/code&gt; です。&lt;a href=&quot;auto_002dindentation#Auto_002dIndentation&quot;&gt;自動インデントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5b1717e39c9de4078e75fab7be060140bc30fa8d" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the number of key sequences processed so far in this Emacs session. This includes key sequences read from the terminal and key sequences read from keyboard macros being executed.</source>
          <target state="translated">この変数の値は、このEmacsセッションでこれまでに処理されたキーシーケンスの数です。これには、端末から読み取られたキーシーケンスと、実行中のキーボードマクロから読み取られたキーシーケンスが含まれます。</target>
        </trans-unit>
        <trans-unit id="68ad74c4f3dafbd6aefc18a3730afb39bc2299f0" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the output speed of the terminal, as far as Emacs knows. Setting this variable does not change the speed of actual data transmission, but the value is used for calculations such as padding.</source>
          <target state="translated">この変数の値は、Emacsが知る限り、端末の出力速度です。この変数を設定しても実際のデータ転送速度は変わりませんが、パディングなどの計算に使用されます。</target>
        </trans-unit>
        <trans-unit id="25a355f8c549766b983dc094b814383e58efa960" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the predicate that &lt;code&gt;completing-read&lt;/code&gt; passes to &lt;code&gt;try-completion&lt;/code&gt;. The variable is also used by the other minibuffer completion functions.</source>
          <target state="translated">この変数の値は、completeing &lt;code&gt;completing-read&lt;/code&gt; が &lt;code&gt;try-completion&lt;/code&gt; に渡される述語です。この変数は、他のミニバッファー補完関数でも使用されます。</target>
        </trans-unit>
        <trans-unit id="0366e444cde45f86f09a3bbed79660866c2f0b03" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the program to run to generate a directory listing for the function &lt;code&gt;insert-directory&lt;/code&gt;. It is ignored on systems which generate the listing with Lisp code.</source>
          <target state="translated">この変数の値は、関数 &lt;code&gt;insert-directory&lt;/code&gt; のディレクトリリストを生成するために実行するプログラムです。Lispコードでリストを生成するシステムでは無視されます。</target>
        </trans-unit>
        <trans-unit id="05ac9fc7fe9e7e22ea7861eab678db85ccb75987" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value should be an alist with one element for each system-specific keysym. Each element has the form &lt;code&gt;(&lt;var&gt;code&lt;/var&gt;
. &lt;var&gt;symbol&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;code&lt;/var&gt; is the numeric keysym code (not including the vendor-specific bit, -2**28), and &lt;var&gt;symbol&lt;/var&gt; is the name for the function key.</source>
          <target state="translated">この変数の値は、システム固有のkeysymごとに1つの要素を持つリストである必要があります。各要素は、フォーム有する &lt;code&gt;(&lt;var&gt;code&lt;/var&gt; . &lt;var&gt;symbol&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;code&lt;/var&gt; 数字キーシンボルコードである（ベンダー固有のビットを含まない、-2 ** 28）、および &lt;var&gt;symbol&lt;/var&gt; ファンクションキーの名前です。</target>
        </trans-unit>
        <trans-unit id="00d207a37cf68558f0ae1947fa541f4ac10e6b8f" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value specifies the maximum number of times to repeat calling a timer function in a row, when many previously scheduled calls were unavoidably delayed.</source>
          <target state="translated">この変数の値は、以前にスケジュールされた多くの呼び出しがやむを得ず遅延した場合に、タイマー関数の呼び出しを連続して繰り返す最大回数を指定します。</target>
        </trans-unit>
        <trans-unit id="e2832fa12a34cf1d4e0a14fa96a7eb9dc98670d0" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value specifies the style of justification to use for text that doesn&amp;rsquo;t specify a style with a text property. The possible values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, or &lt;code&gt;none&lt;/code&gt;. The default value is &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">この変数の値は、textプロパティでスタイルを指定しないテキストに使用する位置揃えのスタイルを指定します。可能な値は、 &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;full&lt;/code&gt; 、 &lt;code&gt;center&lt;/code&gt; 、また &lt;code&gt;none&lt;/code&gt; です。デフォルト値は &lt;code&gt;left&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ff2f4fbe63a94436db535b4b05b9f7b38cec3050" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt; in a particular buffer, tells &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; and &lt;code&gt;save-some-buffers&lt;/code&gt; to save this buffer (if it&amp;rsquo;s modified) without asking the user. The variable automatically becomes buffer-local when set for any reason.</source>
          <target state="translated">この変数は、特定のバッファーで &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; および &lt;code&gt;save-some-buffers&lt;/code&gt; に、ユーザーに確認せずにこのバッファーを保存するように指示します（変更されている場合）。何らかの理由で設定すると、変数は自動的にバッファローカルになります。</target>
        </trans-unit>
        <trans-unit id="dac46863aa288d219a8e7c62c0f8c133144fd14a" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt; in a particular buffer, tells &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; to offer to save that buffer, just as it offers to save file-visiting buffers. If &lt;code&gt;save-some-buffers&lt;/code&gt; is called with the second optional argument set to &lt;code&gt;t&lt;/code&gt;, it will also offer to save the buffer. Lastly, if this variable is set to the symbol &lt;code&gt;always&lt;/code&gt;, both &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; and &lt;code&gt;save-some-buffers&lt;/code&gt; will always offer to save. See &lt;a href=&quot;saving-buffers#Definition-of-save_002dsome_002dbuffers&quot;&gt;Definition of save-some-buffers&lt;/a&gt;. The variable &lt;code&gt;buffer-offer-save&lt;/code&gt; automatically becomes buffer-local when set for any reason. See &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</source>
          <target state="translated">この変数は、特定のバッファーで &lt;code&gt;nil&lt;/code&gt; でない場合、ファイル訪問バッファーの保存を提供するのと同じように、 &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; にそのバッファーの保存を提供するように指示します。場合は &lt;code&gt;save-some-buffers&lt;/code&gt; へのオプションの2番目の引数セットと呼ばれる &lt;code&gt;t&lt;/code&gt; 、それはまた、バッファを保存しようとします。最後に、この変数が &lt;code&gt;always&lt;/code&gt; シンボルに設定されている場合、 &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; と &lt;code&gt;save-some-buffers&lt;/code&gt; の両方が常に保存を提供します。&lt;a href=&quot;saving-buffers#Definition-of-save_002dsome_002dbuffers&quot;&gt;save-some-buffersの定義を&lt;/a&gt;参照してください。変数 &lt;code&gt;buffer-offer-save&lt;/code&gt; は、何らかの理由で設定されると、自動的にbuffer-localになります。&lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;バッファローカル変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="71b0adc72c4f43c008ef56251f584004a240f38e" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, causes &lt;code&gt;display-buffer&lt;/code&gt; to even window sizes whenever it reuses an existing window, and that window is adjacent to the selected one.</source>
          <target state="translated">この変数は、非場合は &lt;code&gt;nil&lt;/code&gt; 、せる &lt;code&gt;display-buffer&lt;/code&gt; 、それが既存のウィンドウを再利用するたびにもウィンドウサイズを、そのウィンドウが選択された一つに隣接しています。</target>
        </trans-unit>
        <trans-unit id="44260951edaebc7923ae2a34e5e6222d10e7b053" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, enables Transient Mark mode. In Transient Mark mode, every buffer-modifying primitive sets &lt;code&gt;deactivate-mark&lt;/code&gt;. As a consequence, most commands that modify the buffer also deactivate the mark.</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; でない場合、トランジェントマークモードを有効にします。トランジェントマークモードでは、すべてのバッファ変更プリミティブセットが &lt;code&gt;deactivate-mark&lt;/code&gt; になります。結果として、バッファを変更するほとんどのコマンドは、マークも非アクティブにします。</target>
        </trans-unit>
        <trans-unit id="81de96b0a50b5ec8926b2434801de8b58f91d03c" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, inhibits the startup screen. In that case, Emacs typically displays the</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; でない場合、起動画面を禁止します。その場合、Emacsは通常</target>
        </trans-unit>
        <trans-unit id="29394b9a6c26348ba3a0840f9e17074c7d8b78ed" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, is a list that specifies regular expressions for finding definitions for Imenu. Simple elements of &lt;code&gt;imenu-generic-expression&lt;/code&gt; look like this:</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、Imenuの定義を見つけるための正規表現を指定するリストです。 &lt;code&gt;imenu-generic-expression&lt;/code&gt; の単純な要素は次のようになります。</target>
        </trans-unit>
        <trans-unit id="69febab3127d1c990867cf5a06a84f24c63faf38" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, means to fill lines automatically within comments only. More precisely, this means that if a comment syntax was defined for the current buffer, then self-inserting a character outside of a comment will not call &lt;code&gt;auto-fill-function&lt;/code&gt;.</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; でない場合、コメント内でのみ自動的に行を埋めることを意味します。より正確には、これは、現在のバッファーにコメント構文が定義されている場合、コメントの外に文字を自己挿入しても &lt;code&gt;auto-fill-function&lt;/code&gt; 呼び出されないことを意味します。</target>
        </trans-unit>
        <trans-unit id="4c9c36d3064cde17874cb26e2bc8d25c8bf942fb" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, should be a string, which is treated as documentation to be inserted into the</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、文字列である必要があります。これは、に挿入されるドキュメントとして扱われます。</target>
        </trans-unit>
        <trans-unit id="a93a98bbc3986c45dac57d05f848ebecbbba3d70" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, should store a function for applying &lt;code&gt;syntax-table&lt;/code&gt; properties to a specified stretch of text. It is intended to be used by major modes to install a function which applies &lt;code&gt;syntax-table&lt;/code&gt; properties in some mode-appropriate way.</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、指定されたテキストの範囲に &lt;code&gt;syntax-table&lt;/code&gt; プロパティを適用するための関数を格納する必要があります。これは、主要なモードで使用され、モードに適した方法で &lt;code&gt;syntax-table&lt;/code&gt; プロパティを適用する関数をインストールすることを目的としています。</target>
        </trans-unit>
        <trans-unit id="76b7cefce0231098ecd5bcd17d59eb7fdb7ac572" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a function for reading buffer names. &lt;code&gt;read-buffer&lt;/code&gt; calls this function instead of doing its usual work, with the same arguments passed to &lt;code&gt;read-buffer&lt;/code&gt;.</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、バッファ名を読み取るための関数を指定します。 &lt;code&gt;read-buffer&lt;/code&gt; は、通常の作業を行う代わりにこの関数を呼び出し、同じ引数を &lt;code&gt;read-buffer&lt;/code&gt; に渡します。</target>
        </trans-unit>
        <trans-unit id="9ec5a7d27c1eecead5422d97b4733c20bd9e3484" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a function to use to handle errors that return control to the Emacs command loop. The function should take three arguments: &lt;var&gt;data&lt;/var&gt;, a list of the same form that &lt;code&gt;condition-case&lt;/code&gt; would bind to its variable; &lt;var&gt;context&lt;/var&gt;, a string describing the situation in which the error occurred, or (more often) &lt;code&gt;nil&lt;/code&gt;; and &lt;var&gt;caller&lt;/var&gt;, the Lisp function which called the primitive that signaled the error.</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、制御をEmacsコマンドループに戻すエラーを処理するために使用する関数を指定します。この関数は三つの引数取る必要があります： &lt;var&gt;data&lt;/var&gt; 、のと同じ形のリスト &lt;code&gt;condition-case&lt;/code&gt; その変数に結合するであろうし、 &lt;var&gt;context&lt;/var&gt; 、エラーが発生した状況を説明する文字列、または（より頻繁に） &lt;code&gt;nil&lt;/code&gt; ; そして &lt;var&gt;caller&lt;/var&gt; 、エラーを通知プリミティブと呼ばれるLispの機能。</target>
        </trans-unit>
        <trans-unit id="b9a0a58683d1cf19dd34cad61e9676296dd976ca" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the same behavior as &lt;code&gt;backup-by-copying-when-mismatch&lt;/code&gt;, but only for certain user-id and group-id values: namely, those less than or equal to a certain number. You set this variable to that number.</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;backup-by-copying-when-mismatch&lt;/code&gt; と同じ動作を指定しますが、特定のユーザーIDとグループIDの値、つまり特定の数以下の値に対してのみ指定します。この変数をその数に設定します。</target>
        </trans-unit>
        <trans-unit id="5f6a746698d95522f516d4e175ca6390e3cfa935" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the width of the left fringe in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the left fringe width from the window&amp;rsquo;s frame.</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、左フリンジの幅をピクセル単位で指定します。 &lt;code&gt;nil&lt;/code&gt; の値は、ウィンドウのフレームからの左フリンジ幅を使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="356cb002c64df66fecef3293a4c115bad25376cf" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the width of the right fringe in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the right fringe width from the window&amp;rsquo;s frame.</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、右フリンジの幅をピクセル単位で指定します。 &lt;code&gt;nil&lt;/code&gt; の値は、ウィンドウのフレームから右のフリンジ幅を使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="e9c73e97a3e79bcc6d33d68e1025d6274af6d54d" translate="yes" xml:space="preserve">
          <source>This variable, local in every buffer, specifies how to display the header line, for windows displaying the buffer. The format of the value is the same as for &lt;code&gt;mode-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;). It is normally &lt;code&gt;nil&lt;/code&gt;, so that ordinary buffers have no header line.</source>
          <target state="translated">この変数は、すべてのバッファーでローカルであり、バッファーを表示するウィンドウのヘッダー行を表示する方法を指定します。値の形式は、 &lt;code&gt;mode-line-format&lt;/code&gt; の場合と同じです（&lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Dataを&lt;/a&gt;参照）。通常は &lt;code&gt;nil&lt;/code&gt; であるため、通常のバッファにはヘッダー行がありません。</target>
        </trans-unit>
        <trans-unit id="7d93c24dd60cfdaa139c07413f57005f6064007b" translate="yes" xml:space="preserve">
          <source>This variable, when non-&lt;code&gt;nil&lt;/code&gt;, holds the indentation context for the sub-mode&amp;rsquo;s indentation engine provided by the superior major mode. The value should be a list of the form &lt;code&gt;(&lt;var&gt;first-column&lt;/var&gt; . &lt;var&gt;rest&lt;/var&gt;&lt;/code&gt;. The members of the list have the following meaning:</source>
          <target state="translated">この変数は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、上位メジャーモードによって提供されるサブモードのインデントエンジンのインデントコンテキストを保持します。値は、フォームのリストでなければなりません &lt;code&gt;(&lt;var&gt;first-column&lt;/var&gt; . &lt;var&gt;rest&lt;/var&gt;&lt;/code&gt; リストのメンバーは次のような意味を持っています。：</target>
        </trans-unit>
        <trans-unit id="b7189abae835d29da6383960806b6b5548521784" translate="yes" xml:space="preserve">
          <source>This way you can explicitly specify all aspects of the box. The value &lt;var&gt;width&lt;/var&gt; specifies the width of the lines to draw; it defaults to 1. A negative width -&lt;var&gt;n&lt;/var&gt; means to draw a line of width &lt;var&gt;n&lt;/var&gt; whose top and bottom parts occupy the space of the underlying text, thus avoiding any increase in the character height.</source>
          <target state="translated">このようにして、ボックスのすべての側面を明示的に指定できます。値 &lt;var&gt;width&lt;/var&gt; は、描画する線の幅を指定します。その1. Aのマイナス幅がデフォルト- &lt;var&gt;n&lt;/var&gt; は幅のラインを描くための手段 &lt;var&gt;n&lt;/var&gt; 上部と下部パーツので、文字の高さの増加を避け、基本となるテキストのスペースを占有します。</target>
        </trans-unit>
        <trans-unit id="d9a477f071d07508b96e42ce0279e953c7a59081" translate="yes" xml:space="preserve">
          <source>This way, the special value &lt;code&gt;nil&lt;/code&gt; is not treated like other symbols, and symbols are not treated like other Lisp expressions.</source>
          <target state="translated">このように、特別な値 &lt;code&gt;nil&lt;/code&gt; は他のシンボルのように扱われず、シンボルは他のLisp式のように扱われません。</target>
        </trans-unit>
        <trans-unit id="2dfb87f5811617605a6219af108230f85b2f65e3" translate="yes" xml:space="preserve">
          <source>This will block until this thread acquires &lt;var&gt;mutex&lt;/var&gt;, or until this thread is signaled using &lt;code&gt;thread-signal&lt;/code&gt;. If &lt;var&gt;mutex&lt;/var&gt; is already owned by this thread, this simply returns.</source>
          <target state="translated">これは、このスレッドが &lt;var&gt;mutex&lt;/var&gt; 取得するまで、またはこのスレッドが &lt;code&gt;thread-signal&lt;/code&gt; を使用して通知されるまでブロックされます。 &lt;var&gt;mutex&lt;/var&gt; がすでにこのスレッドによって所有されている場合、これは単に戻ります。</target>
        </trans-unit>
        <trans-unit id="4e4f051a810187de0f991c0ad754ba4546c36eca" translate="yes" xml:space="preserve">
          <source>This will cause the process&amp;rsquo;s output to be passed to &lt;code&gt;my-tracing-function&lt;/code&gt; before being passed to the original process filter. &lt;code&gt;my-tracing-function&lt;/code&gt; receives the same arguments as the original function. When you&amp;rsquo;re done with it, you can revert to the untraced behavior with:</source>
          <target state="translated">これにより、プロセスの出力が元のプロセスフィルターに渡される前に &lt;code&gt;my-tracing-function&lt;/code&gt; に渡されます。 &lt;code&gt;my-tracing-function&lt;/code&gt; は、元の関数と同じ引数を受け取ります。それが終わったら、次の方法でトレースされていない動作に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="5b4dc9c49dcad06de6342a899c3f5d137405b88d" translate="yes" xml:space="preserve">
          <source>This will generate an IV (Initialization Vector) of the specified length using the GnuTLS &lt;code&gt;GNUTLS_RND_NONCE&lt;/code&gt; generator and pass it to the function. This ensures that the IV is unpredictable and unlikely to be reused in the same session. The actual value of the IV is returned by the function as described below.</source>
          <target state="translated">これにより、GnuTLS &lt;code&gt;GNUTLS_RND_NONCE&lt;/code&gt; ジェネレーターを使用して指定された長さのIV（初期化ベクトル）が生成され、関数に渡されます。これにより、IVが予測不可能になり、同じセッションで再利用される可能性が低くなります。IVの実際の値は、以下に説明する関数によって返されます。</target>
        </trans-unit>
        <trans-unit id="a9a9c24a32da079d5ccc449519a4a85f6209bb0e" translate="yes" xml:space="preserve">
          <source>This will give a new frame full height after typing in it</source>
          <target state="translated">これは、入力した後に新しいフレームをフルハイトにします。</target>
        </trans-unit>
        <trans-unit id="900bf9b9596c5a6eb6a451eaa4e23722c6fd06e1" translate="yes" xml:space="preserve">
          <source>This will give you a list of all those URLs.</source>
          <target state="translated">これで、それらのURLの一覧が表示されます。</target>
        </trans-unit>
        <trans-unit id="160566e21dfbd4c02d91bb4dcfc5f49576d9dc4a" translate="yes" xml:space="preserve">
          <source>This will not only extract &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; but will additionally test that &lt;code&gt;my-list&lt;/code&gt; is a list containing exactly 3 elements and whose first element is the symbol &lt;code&gt;add&lt;/code&gt;. If any of those tests fail, &lt;code&gt;pcase&lt;/code&gt; will immediately return &lt;code&gt;nil&lt;/code&gt; without calling &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">これにより、 &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; が抽出されるだけでなく、 &lt;code&gt;my-list&lt;/code&gt; が正確に3つの要素を含み、最初の要素がシンボル &lt;code&gt;add&lt;/code&gt; であるリストであることがさらにテストされます。これらのテストのいずれかが失敗した場合、 &lt;code&gt;pcase&lt;/code&gt; は &lt;code&gt;message&lt;/code&gt; を呼び出さずにすぐに &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f19ac812850c506ef6806f98037a06ed420056d9" translate="yes" xml:space="preserve">
          <source>This will pick out all the bits that have no face properties, which will result in the list &amp;lsquo;</source>
          <target state="translated">これにより、面のプロパティを持たないすべてのビットが選択され、リストが作成されます。</target>
        </trans-unit>
        <trans-unit id="7a26b8094858b8581da56dc0cbee2d620a5e3979" translate="yes" xml:space="preserve">
          <source>This will pick out all the regions where &lt;code&gt;face&lt;/code&gt; is set to something, but this is split up into where the properties change, so the result here will be &amp;lsquo;</source>
          <target state="translated">これにより、 &lt;code&gt;face&lt;/code&gt; が何かに設定されているすべての領域が選択されますが、これはプロパティが変更される場所に分割されるため、ここでの結果は 'になります。</target>
        </trans-unit>
        <trans-unit id="daad30c58fe7378790b30fb0f086e9dd290fafe0" translate="yes" xml:space="preserve">
          <source>This will pick out all the words that use the &lt;code&gt;bold&lt;/code&gt; face.</source>
          <target state="translated">これにより、 &lt;code&gt;bold&lt;/code&gt; を使用するすべての単語が選択されます。</target>
        </trans-unit>
        <trans-unit id="f308a6f1f3e09b044ee5edae541ccb89d09e0ae1" translate="yes" xml:space="preserve">
          <source>This window&amp;rsquo;s combination limit, meaningful only for a parent window. If this is &lt;code&gt;t&lt;/code&gt;, then it is not allowed to delete this window and recombine its child windows with other siblings of this window.</source>
          <target state="translated">このウィンドウの組み合わせ制限。親ウィンドウにのみ意味があります。これが &lt;code&gt;t&lt;/code&gt; の場合、このウィンドウを削除して、その子ウィンドウをこのウィンドウの他の兄弟と再結合することはできません。</target>
        </trans-unit>
        <trans-unit id="9d971e58411e18d438570cc649a8eb36f0ec6c71" translate="yes" xml:space="preserve">
          <source>This works because &lt;code&gt;toggle-debug-on-error&lt;/code&gt; is defined as a command which toggles the variable &lt;code&gt;debug-on-error&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;toggle-debug-on-error&lt;/code&gt; が変数 &lt;code&gt;debug-on-error&lt;/code&gt; を切り替えるコマンドとして定義されているために機能します。</target>
        </trans-unit>
        <trans-unit id="817693394b86befd10ceb05ff052a7149c1da178" translate="yes" xml:space="preserve">
          <source>This works because later Emacs versions always &lt;em&gt;add&lt;/em&gt; members to the environment, never &lt;em&gt;remove&lt;/em&gt; any members, so the size can only grow with new Emacs releases. Given the version of Emacs, the module can use only the parts of the module</source>
          <target state="translated">これが機能するのは、それ以降のEmacsバージョンでは常にメンバーが環境に&lt;em&gt;追加さ&lt;/em&gt;れ、メンバーが&lt;em&gt;削除され&lt;/em&gt;ないため、サイズは新しいEmacsリリースでのみ大きくなる可能性があるためです。 Emacsのバージョンを考えると、モジュールはモジュールの一部しか使用できません</target>
        </trans-unit>
        <trans-unit id="44ff78eff6b3f3cbc3b63aa1a08744007c5eed93" translate="yes" xml:space="preserve">
          <source>This works just like &lt;code&gt;write-file-functions&lt;/code&gt;, but it is intended for hooks that pertain to the buffer&amp;rsquo;s contents, not to the particular visited file or its location, and can be used to create arbitrary save processes for buffers that aren&amp;rsquo;t visiting files at all. Such hooks are usually set up by major modes, as buffer-local bindings for this variable. This variable automatically becomes buffer-local whenever it is set; switching to a new major mode always resets this variable, but calling &lt;code&gt;set-visited-file-name&lt;/code&gt; does not.</source>
          <target state="translated">これは &lt;code&gt;write-file-functions&lt;/code&gt; と同じように機能しますが、特定の訪問済みファイルやその場所ではなく、バッファーの内容に関係するフックを対象としており、ファイルにアクセスしていないバッファーの任意の保存プロセスを作成するために使用できます。まったく。このようなフックは通常、この変数のバッファローカルバインディングとして、メジャーモードによって設定されます。この変数は、設定されるたびに自動的にバッファーローカルになります。新しいメジャーモードに切り替えると、常にこの変数がリセットされますが、 &lt;code&gt;set-visited-file-name&lt;/code&gt; を呼び出すとリセットされません。</target>
        </trans-unit>
        <trans-unit id="7aea3b4688113352cc4351e7c399bbe6a0038551" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;func-arity&lt;/code&gt;, but only for built-in functions and without symbol indirection. It signals an error for non-built-in functions. We recommend to use &lt;code&gt;func-arity&lt;/code&gt; instead.</source>
          <target state="translated">これは &lt;code&gt;func-arity&lt;/code&gt; のように機能しますが、組み込み関数に対してのみ、シンボルの間接参照はありません。組み込み関数以外の場合はエラーを通知します。代わりに &lt;code&gt;func-arity&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2222791c63562b777cf74014b1491b79d36a4a47" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;list&lt;/code&gt; except for the formatting of text in the Custom buffer. &lt;code&gt;list&lt;/code&gt; labels each element value with its tag; &lt;code&gt;group&lt;/code&gt; does not.</source>
          <target state="translated">これは、カスタムバッファ内のテキストのフォーマットを除いて、 &lt;code&gt;list&lt;/code&gt; ように機能します。 &lt;code&gt;list&lt;/code&gt; 各要素の値にそのタグでラベルを付けます。 &lt;code&gt;group&lt;/code&gt; はしません。</target>
        </trans-unit>
        <trans-unit id="4b607ec78848fecf526dafc21738c8f9a1d3ecf5" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;magic-mode-alist&lt;/code&gt;, except that it is handled only if &lt;code&gt;auto-mode-alist&lt;/code&gt; does not specify a mode for this file.</source>
          <target state="translated">これは &lt;code&gt;magic-mode-alist&lt;/code&gt; と同じように機能しますが、 &lt;code&gt;auto-mode-alist&lt;/code&gt; がこのファイルのモードを指定しない場合にのみ処理される点が異なります。</target>
        </trans-unit>
        <trans-unit id="42271ccc9f11ca5afafc41968821ce04459e7f5f" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;substring&lt;/code&gt; but discards all text properties from the value. Also, &lt;var&gt;start&lt;/var&gt; may be omitted or &lt;code&gt;nil&lt;/code&gt;, which is equivalent to 0. Thus, &lt;code&gt;(substring-no-properties&amp;nbsp;&lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; returns a copy of &lt;var&gt;string&lt;/var&gt;, with all text properties removed.</source>
          <target state="translated">これは &lt;code&gt;substring&lt;/code&gt; ように機能しますが、値からすべてのテキストプロパティを破棄します。また、 &lt;var&gt;start&lt;/var&gt; を省略したり、0に相当する &lt;code&gt;nil&lt;/code&gt; を指定したりすることもできます。したがって、 &lt;code&gt;(substring-no-properties&amp;nbsp;&lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; は、すべてのテキストプロパティが削除された &lt;var&gt;string&lt;/var&gt; コピーを返します。</target>
        </trans-unit>
        <trans-unit id="ed187f77f38a5b16068509086961c75b92666f79" translate="yes" xml:space="preserve">
          <source>This works much like &lt;code&gt;coding-system-for-read&lt;/code&gt;, except that it applies to output rather than input. It affects writing to files, as well as sending output to subprocesses and net connections. It also applies to encoding command-line arguments with which Emacs invokes subprocesses.</source>
          <target state="translated">これは、入力ではなく出力に適用されることを除いて、 &lt;code&gt;coding-system-for-read&lt;/code&gt; ほとんど同じように機能します。これは、ファイルへの書き込み、およびサブプロセスとネット接続への出力の送信に影響します。また、Emacsがサブプロセスを呼び出すコマンドライン引数のエンコードにも適用されます。</target>
        </trans-unit>
        <trans-unit id="59003b84c07559474d31fd804eb8f75a70284b77" translate="yes" xml:space="preserve">
          <source>Those functions also use backslash sequences for multibyte non-</source>
          <target state="translated">これらの関数は、マルチバイトでない場合にもバックスラッシュシーケンスを使用します。</target>
        </trans-unit>
        <trans-unit id="b95f15bef4206fcd326264dee199cb267ce225d6" translate="yes" xml:space="preserve">
          <source>Those functions also use backslash sequences for unibyte non-</source>
          <target state="translated">これらの関数は、ユニバイトでない場合もバックスラッシュシーケンスを使用します。</target>
        </trans-unit>
        <trans-unit id="5856f5777b6dc484b1eb665793fb948525751099" translate="yes" xml:space="preserve">
          <source>Though many windows may exist simultaneously, at any time one window is designated the &lt;em&gt;selected window&lt;/em&gt;. This is the window where the cursor is (usually) displayed when Emacs is ready for a command. The selected window usually displays the current buffer (see &lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;Current Buffer&lt;/a&gt;), but this is not necessarily the case.</source>
          <target state="translated">多くのウィンドウが同時に存在する場合がありますが、いつでも1つのウィンドウが&lt;em&gt;選択されたウィンドウ&lt;/em&gt;として指定さ&lt;em&gt;れます&lt;/em&gt;。これは、Emacsがコマンドの準備ができたときにカーソルが（通常）表示されるウィンドウです。選択されたウィンドウは、通常、現在のバッファ（参照表示&lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;現在のバッファの&lt;/a&gt;）が、これは必ずしもそうではありません。</target>
        </trans-unit>
        <trans-unit id="6ab521570bbcdbefcba29a6661b03914c0b32d52" translate="yes" xml:space="preserve">
          <source>Thread Type</source>
          <target state="translated">スレッドタイプ</target>
        </trans-unit>
        <trans-unit id="2d269b4a5c1f8bab25480b97386aa237fb44ff03" translate="yes" xml:space="preserve">
          <source>Thread objects have no read syntax. They print in hash notation, giving the name of the thread (if it has been given a name) or its address in core:</source>
          <target state="translated">スレッドオブジェクトは読み込み構文を持ちません。スレッドオブジェクトはハッシュ表記で表示され、スレッドの名前 (名前が与えられている場合)またはそのアドレスを core で指定します。</target>
        </trans-unit>
        <trans-unit id="bb12e8aaaecc434fd51e448fe7669bced1bdd107" translate="yes" xml:space="preserve">
          <source>Threads</source>
          <target state="translated">Threads</target>
        </trans-unit>
        <trans-unit id="8d53a0e9f60f19ac58e4e30827894f674de690b7" translate="yes" xml:space="preserve">
          <source>Threads can be created and waited for. A thread cannot be exited directly, but the current thread can be exited implicitly, and other threads can be signaled.</source>
          <target state="translated">スレッドを作成して待機させることができます。スレッドを直接終了させることはできませんが、現在のスレッドを暗黙的に終了させたり、他のスレッドにシグナルを送ることができます。</target>
        </trans-unit>
        <trans-unit id="4c401881f263de09614480a519f56aa18cabc74e" translate="yes" xml:space="preserve">
          <source>Throughout this chapter, &amp;ldquo;text&amp;rdquo; refers to the characters in the buffer, together with their properties (when relevant). Keep in mind that point is always between two characters, and the cursor appears on the character after point.</source>
          <target state="translated">この章全体を通して、「テキスト」とは、バッファ内の文字とそのプロパティ（関連する場合）を指します。ポイントは常に2文字の間にあり、カーソルはポイントの後に文字に表示されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4b8288563d76af911e25930716d0cac92968d4b5" translate="yes" xml:space="preserve">
          <source>Throughout this manual, the phrases &amp;ldquo;the Lisp reader&amp;rdquo; and &amp;ldquo;the Lisp printer&amp;rdquo; refer to those routines in Lisp that convert textual representations of Lisp objects into actual Lisp objects, and vice versa. See &lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;Printed Representation&lt;/a&gt;, for more details. You, the person reading this manual, are thought of as the programmer and are addressed as &amp;ldquo;you&amp;rdquo;. The user is the person who uses Lisp programs, including those you write.</source>
          <target state="translated">このマニュアル全体を通して、「Lispリーダー」および「Lispプリンター」という句は、Lispオブジェクトのテキスト表現を実際のLispオブジェクトに、またはその逆に変換するLispのルーチンを指します。詳細については、&lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;印刷表現を&lt;/a&gt;参照してください。このマニュアルを読んでいるあなたは、プログラマーと見なされ、「あなた」と呼ばれます。ユーザーは、あなたが書いたものも含めて、Lispプログラムを使用する人です。</target>
        </trans-unit>
        <trans-unit id="9d333b3edb2142ed227358d10eac5e32f293c1d8" translate="yes" xml:space="preserve">
          <source>Thus if &lt;var&gt;fontpattern&lt;/var&gt; is this,</source>
          <target state="translated">したがって、 &lt;var&gt;fontpattern&lt;/var&gt; がこれである場合、</target>
        </trans-unit>
        <trans-unit id="a2c87b537d1224b2a6ad61d086a4d629e1722be2" translate="yes" xml:space="preserve">
          <source>Thus, &amp;lsquo;</source>
          <target state="translated">したがって、 '</target>
        </trans-unit>
        <trans-unit id="3ac50cff3cdf79feac987887f115c6c4551c8556" translate="yes" xml:space="preserve">
          <source>Thus, a function in &lt;code&gt;write-region-annotate-functions&lt;/code&gt; can create a buffer, give this variable the local value of &lt;code&gt;kill-buffer&lt;/code&gt; in that buffer, set up the buffer with altered text, and make the buffer current. The buffer will be killed after &lt;code&gt;write-region&lt;/code&gt; is done.</source>
          <target state="translated">したがって、 &lt;code&gt;write-region-annotate-functions&lt;/code&gt; の関数は、バッファーを作成し、この変数にその &lt;code&gt;kill-buffer&lt;/code&gt; 内のkill-bufferのローカル値を与え、変更されたテキストでバッファーをセットアップし、バッファーを最新にすることができます。 &lt;code&gt;write-region&lt;/code&gt; が完了すると、バッファは強制終了されます。</target>
        </trans-unit>
        <trans-unit id="9cd7c0f20cc4962292b3c8c8d99ff59cb2ddb404" translate="yes" xml:space="preserve">
          <source>Thus, any valid height spec determines the height in pixels, one way or another. If the line contents&amp;rsquo; height is less than that, Emacs adds extra vertical space above the line to achieve the specified total height.</source>
          <target state="translated">したがって、有効な高さの仕様によって、高さがピクセル単位で決定されます。線の内容の高さがそれよりも低い場合、Emacsは線の上に垂直方向のスペースを追加して、指定された合計の高さを実現します。</target>
        </trans-unit>
        <trans-unit id="03ab585299ede210bc4090198332814b205ee5dc" translate="yes" xml:space="preserve">
          <source>Thus, if the command moved point back to an invisible range (with the usual stickiness), Emacs moves point back to the beginning of that range. If the command moved point forward into an invisible range, Emacs moves point forward to the first visible character that follows the invisible text and then forward one more character.</source>
          <target state="translated">したがって、コマンドが(通常の粘着性を持って)見えない範囲にポイントを戻すと、Emacs はその範囲の先頭にポイントを戻します。コマンドが不可視範囲にポイントを前進させた場合、Emacs は不可視テキストに続く最初の可視文字までポイントを前進させ、その後、さらに1文字前進させます。</target>
        </trans-unit>
        <trans-unit id="0b885fa081e5f6faf147ce71fc2eb228505921a4" translate="yes" xml:space="preserve">
          <source>Thus, if the original item was defined this way,</source>
          <target state="translated">したがって、元の項目がこのように定義されていた場合。</target>
        </trans-unit>
        <trans-unit id="141bd126a24d1137b98f80ec3bb8e786c1abf288" translate="yes" xml:space="preserve">
          <source>Thus, if you set &lt;code&gt;backup-by-copying-when-privileged-mismatch&lt;/code&gt; to 0, backup by copying is done for the superuser and group 0 only, when necessary to prevent a change in the owner of the file.</source>
          <target state="translated">したがって、 &lt;code&gt;backup-by-copying-when-privileged-mismatch&lt;/code&gt; を0に設定すると、ファイルの所有者の変更を防ぐために必要な場合に、コピーによるバックアップはスーパーユーザーとグループ0に対してのみ実行されます。</target>
        </trans-unit>
        <trans-unit id="eb0dbc223d80bf436cf99b6c0585d13e872fd662" translate="yes" xml:space="preserve">
          <source>Thus, the complete syntax for an argument list is as follows:</source>
          <target state="translated">したがって、引数リストの完全な構文は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="514aac49d5a6574eb2e045497dae93d9caaf5dbc" translate="yes" xml:space="preserve">
          <source>Thus, the function returns a non-&lt;code&gt;nil&lt;/code&gt; value if the file name ends with a &amp;lsquo;</source>
          <target state="translated">したがって、ファイル名が 'で終わる場合、関数は &lt;code&gt;nil&lt;/code&gt; 以外の値を返します。</target>
        </trans-unit>
        <trans-unit id="1c0bc68ad07460d16a6c86f2eaa3e27e454505a8" translate="yes" xml:space="preserve">
          <source>Thus, the symbol for the key</source>
          <target state="translated">したがって、キーのシンボル</target>
        </trans-unit>
        <trans-unit id="e6f6a15eeba5458c2cd39ecf32d429566249933e" translate="yes" xml:space="preserve">
          <source>Thus, to define a new method of key lookup, you need to specify both a function to compute the hash code from a key, and a function to compare two keys directly. The two functions should be consistent with each other: that is, two keys&amp;rsquo; hash codes should be the same if the keys compare as equal. Also, since the two functions can be called at any time (such as by the garbage collector), the functions should be free of side effects and should return quickly, and their behavior should depend on only on properties of the keys that do not change.</source>
          <target state="translated">したがって、キールックアップの新しい方法を定義するには、キーからハッシュコードを計算する関数と、2つのキーを直接比較する関数の両方を指定する必要があります。2つの関数は互いに一貫している必要があります。つまり、キーが等しいと比較される場合、2つのキーのハッシュコードは同じである必要があります。また、2つの関数はいつでも（ガベージコレクターなどによって）呼び出すことができるため、関数は副作用がなく、すぐに戻る必要があり、その動作は変更されないキーのプロパティのみに依存する必要があります。 。</target>
        </trans-unit>
        <trans-unit id="582a7c3d69fa69b60f2db20237cefec358cfad85" translate="yes" xml:space="preserve">
          <source>Time Calculations</source>
          <target state="translated">時間計算</target>
        </trans-unit>
        <trans-unit id="ec024476e8910d25ad39c9ff8458ef285476a847" translate="yes" xml:space="preserve">
          <source>Time Conversion</source>
          <target state="translated">時間変換</target>
        </trans-unit>
        <trans-unit id="44a7822891d1caaed18bfbde79f248fc78fb3fc0" translate="yes" xml:space="preserve">
          <source>Time Zone Rules</source>
          <target state="translated">タイムゾーンのルール</target>
        </trans-unit>
        <trans-unit id="677503965fb8fe8cd0f6c09959e0be5d258e9807" translate="yes" xml:space="preserve">
          <source>Time of Day</source>
          <target state="translated">時間帯</target>
        </trans-unit>
        <trans-unit id="ca3b3626cd602840bd2ccae454814427a6f70af2" translate="yes" xml:space="preserve">
          <source>Time spent by the process in the system (kernel) context, for processing system calls. The corresponding &lt;var&gt;value&lt;/var&gt; is a Lisp timestamp.</source>
          <target state="translated">システムコールを処理するために、システム（カーネル）コンテキストでプロセスが費やした時間。対応する &lt;var&gt;value&lt;/var&gt; はLispタイムスタンプです。</target>
        </trans-unit>
        <trans-unit id="baaeeba37e2ea7675f434f23ea6bcc350d2a5a33" translate="yes" xml:space="preserve">
          <source>Time spent by the process in the user context, for running the application&amp;rsquo;s code. The corresponding &lt;var&gt;value&lt;/var&gt; is a Lisp timestamp (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">アプリケーションのコードを実行するために、ユーザーコンテキストでプロセスが費やした時間。対応する &lt;var&gt;value&lt;/var&gt; はLispタイムスタンプです（&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;時刻を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="575376bef4c5fc7318a81bb14ff601241ffe1cbe" translate="yes" xml:space="preserve">
          <source>Time values can be converted to and from calendrical and other forms. Some of these conversions rely on operating system functions that limit the range of possible time values, and signal an error such as &amp;lsquo;</source>
          <target state="translated">時間値は、カレンダー形式やその他の形式との間で変換できます。これらの変換の一部は、可能な時間値の範囲を制限し、次のようなエラーを通知するオペレーティングシステム関数に依存しています。</target>
        </trans-unit>
        <trans-unit id="aa7e7755c39803e493e24923003524919122f3e5" translate="yes" xml:space="preserve">
          <source>Timer functions should also avoid calling functions that cause Emacs to wait, such as &lt;code&gt;sit-for&lt;/code&gt; (see &lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt;). This can lead to unpredictable effects, since other timers (or even the same timer) can run while waiting. If a timer function needs to perform an action after a certain time has elapsed, it can do this by scheduling a new timer.</source>
          <target state="translated">タイマー関数は、 &lt;code&gt;sit-for&lt;/code&gt; などのEmacsを待機させる関数の呼び出しも回避する必要があります（&lt;a href=&quot;waiting#Waiting&quot;&gt;待機を&lt;/a&gt;参照）。他のタイマー（または同じタイマー）が待機中に実行される可能性があるため、これは予測できない影響をもたらす可能性があります。タイマー機能が特定の時間が経過した後にアクションを実行する必要がある場合、新しいタイマーをスケジュールすることによってこれを実行できます。</target>
        </trans-unit>
        <trans-unit id="1b459f04ff70d0b0dda739bf607d8d33495315e0" translate="yes" xml:space="preserve">
          <source>Timers for Delayed Execution</source>
          <target state="translated">遅延実行用タイマー</target>
        </trans-unit>
        <trans-unit id="4cf1b54b003a59c279d1ba0b615a8a5f3459ca8c" translate="yes" xml:space="preserve">
          <source>Tips</source>
          <target state="translated">Tips</target>
        </trans-unit>
        <trans-unit id="ed9a57f848ca80c6e25752c6419f6e56c70f77f5" translate="yes" xml:space="preserve">
          <source>Tips for Defining Variables Robustly</source>
          <target state="translated">堅牢に変数を定義するためのヒント</target>
        </trans-unit>
        <trans-unit id="4175dfb6345a6ed8c49c58bdfd8f88fb7b64b67e" translate="yes" xml:space="preserve">
          <source>Tips for writing a minor mode.</source>
          <target state="translated">マイナーモードを書くコツ</target>
        </trans-unit>
        <trans-unit id="bdca972c5ffd1202222bd6267a51a55f1b7c6823" translate="yes" xml:space="preserve">
          <source>Title Bar</source>
          <target state="translated">タイトルバー</target>
        </trans-unit>
        <trans-unit id="792bab7e740af3866f1dd9c4450679179194ed82" translate="yes" xml:space="preserve">
          <source>To access (or alter) the elements in the time value, the &lt;code&gt;decoded-time-second&lt;/code&gt;, &lt;code&gt;decoded-time-minute&lt;/code&gt;, &lt;code&gt;decoded-time-hour&lt;/code&gt;, &lt;code&gt;decoded-time-day&lt;/code&gt;, &lt;code&gt;decoded-time-month&lt;/code&gt;, &lt;code&gt;decoded-time-year&lt;/code&gt;, &lt;code&gt;decoded-time-weekday&lt;/code&gt;, &lt;code&gt;decoded-time-dst&lt;/code&gt; and &lt;code&gt;decoded-time-zone&lt;/code&gt; accessors can be used.</source>
          <target state="translated">時間値の要素にアクセス（または変更）するには、 &lt;code&gt;decoded-time-second&lt;/code&gt; 、 &lt;code&gt;decoded-time-minute&lt;/code&gt; 、 &lt;code&gt;decoded-time-hour&lt;/code&gt; 、 &lt;code&gt;decoded-time-day&lt;/code&gt; 、 &lt;code&gt;decoded-time-month&lt;/code&gt; 、 &lt;code&gt;decoded-time-year&lt;/code&gt; 、 &lt;code&gt;decoded-time-weekday&lt;/code&gt; 、 &lt;code&gt;decoded-time-dst&lt;/code&gt; 、および &lt;code&gt;decoded-time-zone&lt;/code&gt; アクセサを使用できます。</target>
        </trans-unit>
        <trans-unit id="43dc195b9080250f519540998a2c5a8f5d041ac2" translate="yes" xml:space="preserve">
          <source>To access the contents of a mouse position list in the &lt;var&gt;position&lt;/var&gt; slot of a click event, you should typically use the functions documented in &lt;a href=&quot;accessing-mouse#Accessing-Mouse&quot;&gt;Accessing Mouse&lt;/a&gt;. The explicit format of the list depends on where the click occurred. For clicks in the text area, mode line, header line, tab line, or in the fringe or marginal areas, the mouse position list has the form</source>
          <target state="translated">クリックイベントの &lt;var&gt;position&lt;/var&gt; スロットにあるマウス位置リストの内容にアクセスするには、通常、「&lt;a href=&quot;accessing-mouse#Accessing-Mouse&quot;&gt;マウスへのアクセス」に&lt;/a&gt;記載されている機能を使用する必要があります。リストの明示的な形式は、クリックが発生した場所によって異なります。テキスト領域、モード行、ヘッダー行、タブ行、またはフリンジ領域またはマージナル領域でのクリックの場合、マウス位置リストは次の形式になります。</target>
        </trans-unit>
        <trans-unit id="235f6e020ed5d69d374e18e26adf50fdd8a9afa1" translate="yes" xml:space="preserve">
          <source>To add a customization for a second buffer one would then write:</source>
          <target state="translated">2 番目のバッファにカスタマイズを追加するには、次のように書きます。</target>
        </trans-unit>
        <trans-unit id="b53ee005115d4bc799a117e118afae627f87c915" translate="yes" xml:space="preserve">
          <source>To add an item to the menu bar, invent a fake function key of your own (let&amp;rsquo;s call it &lt;var&gt;key&lt;/var&gt;), and make a binding for the key sequence &lt;code&gt;[menu-bar &lt;var&gt;key&lt;/var&gt;]&lt;/code&gt;. Most often, the binding is a menu keymap, so that pressing a button on the menu bar item leads to another menu.</source>
          <target state="translated">メニューバーに項目を追加するには、あなた自身の偽のファンクションキーを（のは、それを呼びましょう考案 &lt;var&gt;key&lt;/var&gt; ）、およびキーシーケンスのために結合させる &lt;code&gt;[menu-bar &lt;var&gt;key&lt;/var&gt;]&lt;/code&gt; 。ほとんどの場合、バインディングはメニューキーマップであるため、メニューバー項目のボタンを押すと別のメニューが表示されます。</target>
        </trans-unit>
        <trans-unit id="cd9a1dafd9b8a49df125d2b55de23e028c238bb2" translate="yes" xml:space="preserve">
          <source>To allow its users to initiate JSONRPC contacts (notifications or requests) or reply to endpoint requests, the subclass must have an implementation of the &lt;code&gt;jsonrpc-connection-send&lt;/code&gt; method.</source>
          <target state="translated">ユーザーがJSONRPC連絡先（通知またはリクエスト）を開始したり、エンドポイントリクエストに返信したりできるようにするには、サブクラスに &lt;code&gt;jsonrpc-connection-send&lt;/code&gt; メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="55ca7463ded90201daa87e4d482f14eb3f606801" translate="yes" xml:space="preserve">
          <source>To automatically display a message in the echo area or in a pop-buffer, depending on its size, use &lt;code&gt;display-message-or-buffer&lt;/code&gt; (see below).</source>
          <target state="translated">サイズに応じて、エコー領域またはポップバッファにメッセージを自動的に表示するには、 &lt;code&gt;display-message-or-buffer&lt;/code&gt; を使用します（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="04b0e0265887990aa01de0d92bd3a351a40d12f1" translate="yes" xml:space="preserve">
          <source>To avoid conflict, cooperative conversions do not modify the buffer, but instead specify &lt;em&gt;annotations&lt;/em&gt;, a list of elements of the form &lt;code&gt;(&lt;var&gt;position&lt;/var&gt; . &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;, sorted in order of increasing &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">回避競合を、協調変換がバッファを変更しないが、代わりに指定する&lt;em&gt;注釈を&lt;/em&gt;、フォームの要素のリストを &lt;code&gt;(&lt;var&gt;position&lt;/var&gt; . &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; 、増加順にソート &lt;var&gt;position&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="d09fba6f6abb0ce78ff8127847eea2de7a0bba7d" translate="yes" xml:space="preserve">
          <source>To avoid conflicts with other type names, Lisp programs that define new types of records should normally use the naming conventions of the package where these record types are introduced for the names of the types. Note that the names of the types which could possibly conflict might not be known at the time the package defining a record type is loaded; they could be loaded at some future point in time.</source>
          <target state="translated">他の型名との衝突を避けるために、レコードの新しい型を定義する Lisp プログラムでは、通常、型名にはレコード型が導入されたパッケージの命名規則を使用しなければなりません。競合する可能性のある型の名前は、レコード型を定義しているパッケージがロードされた時点ではわからないかもしれないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e2a50b76a162337325e7276fa43ccd9804b2eb9e" translate="yes" xml:space="preserve">
          <source>To avoid confusion, we usually store the result of &lt;code&gt;nreverse&lt;/code&gt; back in the same variable which held the original list:</source>
          <target state="translated">混乱を避けるために、通常、 &lt;code&gt;nreverse&lt;/code&gt; の結果を元のリストを保持していたのと同じ変数に格納します。</target>
        </trans-unit>
        <trans-unit id="5b3904b394b86a2eacb65f3b29df5181abd20d8e" translate="yes" xml:space="preserve">
          <source>To avoid such problems, you should call &lt;code&gt;save-excursion&lt;/code&gt; only after setting the desired current buffer, as in the following example:</source>
          <target state="translated">このような問題を回避するには、次の例のように、目的の電流バッファを設定した後でのみ &lt;code&gt;save-excursion&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2228eb3abc6eabfc0c09c3dba568ac339a975006" translate="yes" xml:space="preserve">
          <source>To avoid that dragging moves a frame completely out of its parent&amp;rsquo;s native frame, something which might happen when the mouse cursor overshoots and makes the frame difficult to retrieve once the mouse button has been released, it is advisable to set the frame&amp;rsquo;s &lt;code&gt;top-visible&lt;/code&gt; or &lt;code&gt;bottom-visible&lt;/code&gt; parameter correspondingly.</source>
          <target state="translated">ドラッグするとフレームが親のネイティブフレームから完全に移動するのを防ぐために、マウスカーソルがオーバーシュートして、マウスボタンを離した後のフレームの取得が困難になる可能性があるため、フレームの &lt;code&gt;top-visible&lt;/code&gt; か、それに応じて &lt;code&gt;bottom-visible&lt;/code&gt; パラメータ。</target>
        </trans-unit>
        <trans-unit id="7280b19374f8217c16ade18f1e59c63667eb03e5" translate="yes" xml:space="preserve">
          <source>To avoid the issues mentioned above, or if the &lt;var&gt;dirname&lt;/var&gt; value might be &lt;code&gt;nil&lt;/code&gt; (for example, from an element of &lt;code&gt;load-path&lt;/code&gt;), use:</source>
          <target state="translated">上記の問題を回避するため、または &lt;var&gt;dirname&lt;/var&gt; 値が &lt;code&gt;nil&lt;/code&gt; である可能性がある場合（たとえば、 &lt;code&gt;load-path&lt;/code&gt; の要素から）、次を使用します。</target>
        </trans-unit>
        <trans-unit id="06b328352984f5866b5037561b1c5f12a0cc560f" translate="yes" xml:space="preserve">
          <source>To avoid these problems, &lt;strong&gt;don&amp;rsquo;t evaluate an argument expression while computing the macro expansion&lt;/strong&gt;. Instead, substitute the expression into the macro expansion, so that its value will be computed as part of executing the expansion. This is how the other examples in this chapter work.</source>
          <target state="translated">これらの問題を回避するために&lt;strong&gt;、マクロ展開の計算中に引数式を評価しない&lt;/strong&gt;で&lt;strong&gt;ください&lt;/strong&gt;。代わりに、式をマクロ展開に置き換えて、その値が展開の実行の一部として計算されるようにします。これは、この章の他の例がどのように機能するかです。</target>
        </trans-unit>
        <trans-unit id="151a4e1d6be0d40ecf6f500b522ca57880aee748" translate="yes" xml:space="preserve">
          <source>To avoid this, a character must first be converted into a string, using &lt;code&gt;string&lt;/code&gt; function, before being passed to one of the casing functions. Of course, no assumptions on the length of the result may be made.</source>
          <target state="translated">これを回避するには、文字 &lt;code&gt;string&lt;/code&gt; 関数を使用して文字を文字列に変換してから、ケーシング関数の1つに渡す必要があります。もちろん、結果の長さについての仮定はできません。</target>
        </trans-unit>
        <trans-unit id="c08d14ae870dedecf552e1f86aa6eea63bd9fd99" translate="yes" xml:space="preserve">
          <source>To catch a user signal, bind the corresponding event to an interactive command in the &lt;code&gt;special-event-map&lt;/code&gt; (see &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;). The command is called with no arguments, and the specific signal event is available in &lt;code&gt;last-input-event&lt;/code&gt; (see &lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;Event Input Misc&lt;/a&gt;. For example:</source>
          <target state="translated">ユーザーシグナルをキャッチするには、対応するイベントを &lt;code&gt;special-event-map&lt;/code&gt; のインタラクティブコマンドにバインドします（&lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;アクティブマップの制御を&lt;/a&gt;参照）。コマンドは引数なしで呼び出され、特定のシグナルイベントは &lt;code&gt;last-input-event&lt;/code&gt; で使用できます（&lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;イベント入力その他を&lt;/a&gt;参照してください。例：</target>
        </trans-unit>
        <trans-unit id="b60cc1ba860cf61e455af88cf8feaed4e8e7146b" translate="yes" xml:space="preserve">
          <source>To change the order or value of a specific frame&amp;rsquo;s buffer list, set that frame&amp;rsquo;s &lt;code&gt;buffer-list&lt;/code&gt; parameter with &lt;code&gt;modify-frame-parameters&lt;/code&gt; (see &lt;a href=&quot;parameter-access#Parameter-Access&quot;&gt;Parameter Access&lt;/a&gt;).</source>
          <target state="translated">特定のフレームのバッファリストの順序または値を変更するには、そのフレームの &lt;code&gt;buffer-list&lt;/code&gt; パラメータを &lt;code&gt;modify-frame-parameters&lt;/code&gt; で設定します（&lt;a href=&quot;parameter-access#Parameter-Access&quot;&gt;パラメータアクセスを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="48997c06dd2af5aa4bd2669c1f8ee166bf8f313c" translate="yes" xml:space="preserve">
          <source>To check for ImageMagick support, use the following:</source>
          <target state="translated">ImageMagickのサポートを確認するには、以下を使用します。</target>
        </trans-unit>
        <trans-unit id="2debbc20ba57a4693461659f109833cc9f2eef69" translate="yes" xml:space="preserve">
          <source>To clear out a string that contained a password, use &lt;code&gt;clear-string&lt;/code&gt;:</source>
          <target state="translated">パスワードを含む文字列をクリアするには、 &lt;code&gt;clear-string&lt;/code&gt; ：を使用します。</target>
        </trans-unit>
        <trans-unit id="826939281f100c5ead46cd93ab44c37cdfc70201" translate="yes" xml:space="preserve">
          <source>To clear the frequency count and coverage data for a definition, simply reinstrument it with &lt;code&gt;eval-defun&lt;/code&gt;.</source>
          <target state="translated">定義の頻度カウントとカバレッジデータをクリアするには、 &lt;code&gt;eval-defun&lt;/code&gt; で再計測するだけです。</target>
        </trans-unit>
        <trans-unit id="9ea85c9d57b9612ecf213929c1439272e19b49bc" translate="yes" xml:space="preserve">
          <source>To conserve memory, Emacs does not hold fixed-length 22-bit numbers that are codepoints of text characters within buffers and strings. Rather, Emacs uses a variable-length internal representation of characters, that stores each character as a sequence of 1 to 5 8-bit bytes, depending on the magnitude of its codepoint&lt;a href=&quot;#FOOT17&quot; name=&quot;DOCF17&quot;&gt;&lt;sup&gt;17&lt;/sup&gt;&lt;/a&gt;. For example, any</source>
          <target state="translated">メモリを節約するために、Emacsはバッファと文字列内のテキスト文字のコードポイントである固定長の22ビット数を保持しません。むしろ、Emacsは文字の可変長内部表現を使用し、コードポイント&lt;a href=&quot;#FOOT17&quot; name=&quot;DOCF17&quot;&gt;&lt;sup&gt;17の&lt;/sup&gt;&lt;/a&gt;大きさに応じて、各文字を1〜5個の8ビットバイトのシーケンスとして格納します。たとえば、</target>
        </trans-unit>
        <trans-unit id="62bee7c8192286adfd0c7acee5e1574b082e60da" translate="yes" xml:space="preserve">
          <source>To control output format more precisely, you can put a string in this variable. The string should hold a &amp;lsquo;</source>
          <target state="translated">出力形式をより正確に制御するために、この変数に文字列を入れることができます。文字列は 'を保持する必要があります</target>
        </trans-unit>
        <trans-unit id="ba9870e4247d169ea559ccaf09840adafed3981a" translate="yes" xml:space="preserve">
          <source>To control unpacking and packing, you write a &lt;em&gt;data layout specification&lt;/em&gt;, a special nested list describing named and typed &lt;em&gt;fields&lt;/em&gt;. This specification controls the length of each field to be processed, and how to pack or unpack it. We normally keep bindat specs in variables whose names end in &amp;lsquo;</source>
          <target state="translated">アンパックとパックを制御するには、&lt;em&gt;データレイアウト仕様&lt;/em&gt;を記述し&lt;em&gt;ます&lt;/em&gt;。これは、名前付き&lt;em&gt;フィールド&lt;/em&gt;と型付き&lt;em&gt;フィールド&lt;/em&gt;を説明する特別なネストされたリストです。この仕様は、処理される各フィールドの長さ、およびフィールドをパックまたはアンパックする方法を制御します。通常、名前が 'で終わる変数にbindat仕様を保持します</target>
        </trans-unit>
        <trans-unit id="0f9397e2a68037dd11d8ba74c654a18dd8898ef6" translate="yes" xml:space="preserve">
          <source>To convert a directory name to its abbreviation, use this function:</source>
          <target state="translated">ディレクトリ名を略語に変換するには、この関数を使用します。</target>
        </trans-unit>
        <trans-unit id="ec062d3d87c3e3508835c86383da0aff25d9dc46" translate="yes" xml:space="preserve">
          <source>To convert an integer to floating point, use the function &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">整数を浮動小数点に変換するには、関数 &lt;code&gt;float&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="bb0887b6e6ad7546bf3ba790c69350aac035c76f" translate="yes" xml:space="preserve">
          <source>To copy the contents of a file into a buffer, use the function &lt;code&gt;insert-file-contents&lt;/code&gt;. (Don&amp;rsquo;t use the command &lt;code&gt;insert-file&lt;/code&gt; in a Lisp program, as that sets the mark.)</source>
          <target state="translated">ファイルの内容をバッファにコピーするには、関数 &lt;code&gt;insert-file-contents&lt;/code&gt; を使用します。（マークを設定するため、Lispプログラムでコマンド &lt;code&gt;insert-file&lt;/code&gt; を使用しないでください。）</target>
        </trans-unit>
        <trans-unit id="133d24c64118311f91ce8dc247810f556ae14153" translate="yes" xml:space="preserve">
          <source>To create a new atomic window from an existing live window or to add a new window to an existing atomic window, the following buffer display action function (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) can be used:</source>
          <target state="translated">既存のライブウィンドウから新しい原子ウィンドウを作成したり、既存の原子ウィンドウに新しいウィンドウを追加するには、以下のバッファ表示アクション機能は、（参照&lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;バッファディスプレイアクション機能を&lt;/a&gt;使用することができます）：</target>
        </trans-unit>
        <trans-unit id="29ff3e80f60dfd08ff1b5590946bd89af0abab17" translate="yes" xml:space="preserve">
          <source>To create a new child frame or to convert a normal frame into a child frame, set that frame&amp;rsquo;s &lt;code&gt;parent-frame&lt;/code&gt; parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) to that of an already existing frame. The frame specified by that parameter will then be the frame&amp;rsquo;s parent frame as long as the parameter is not changed or reset. Technically, this makes the child frame&amp;rsquo;s window-system window a child window of the parent frame&amp;rsquo;s window-system window.</source>
          <target state="translated">新しい子フレームを作成するか、通常のフレームを子フレームに変換するには、そのフレームの &lt;code&gt;parent-frame&lt;/code&gt; パラメータ（&lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;フレームインタラクションパラメータを&lt;/a&gt;参照）を既存のフレームのパラメータに設定します。そのパラメータで指定されたフレームは、パラメータが変更またはリセットされない限り、フレームの親フレームになります。技術的には、これにより、子フレームのウィンドウシステムウィンドウが親フレームのウィンドウシステムウィンドウの子ウィンドウになります。</target>
        </trans-unit>
        <trans-unit id="ab5f54acfa8eddfb20c7033fd6db4713b5307cdb" translate="yes" xml:space="preserve">
          <source>To create a new frame, call the function &lt;code&gt;make-frame&lt;/code&gt;.</source>
          <target state="translated">新しいフレームを作成するには、関数 &lt;code&gt;make-frame&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="520e6d95fc677b710393ae409ecfe311056a233b" translate="yes" xml:space="preserve">
          <source>To deal with an excess close parenthesis, first go to the beginning of the file, then type</source>
          <target state="translated">過剰な閉じ括弧を処理するには、まずファイルの先頭に行き、次に</target>
        </trans-unit>
        <trans-unit id="adff80d0afc108dda2cc35897c7b315aedf5b28c" translate="yes" xml:space="preserve">
          <source>To debug a Lisp program with Edebug, you must first &lt;em&gt;instrument&lt;/em&gt; the Lisp code that you want to debug. A simple way to do this is to first move point into the definition of a function or macro and then do</source>
          <target state="translated">Edebugを使用してLispプログラムをデバッグするには、最初にデバッグするLispコードを&lt;em&gt;インストルメント化&lt;/em&gt;する必要があります。これを行う簡単な方法は、最初にポイントを関数またはマクロの定義に移動してから、</target>
        </trans-unit>
        <trans-unit id="915d1eaa14aa3e00e6bcaad57665857bb7499f4f" translate="yes" xml:space="preserve">
          <source>To debug an error that happens during loading of the init file, use the option &amp;lsquo;</source>
          <target state="translated">initファイルのロード中に発生するエラーをデバッグするには、オプション 'を使用します。</target>
        </trans-unit>
        <trans-unit id="3bdad9168cc7c8303d260876d234b4ac3a92a4ea" translate="yes" xml:space="preserve">
          <source>To define</source>
          <target state="translated">定義するには</target>
        </trans-unit>
        <trans-unit id="47b1b0291e0b6e36ef353b4609dc3200dd5e719a" translate="yes" xml:space="preserve">
          <source>To define a customizable variable, you should use &lt;code&gt;defcustom&lt;/code&gt; (which calls &lt;code&gt;defvar&lt;/code&gt; as a subroutine). See &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;.</source>
          <target state="translated">カスタマイズ可能な変数を定義するには、 &lt;code&gt;defcustom&lt;/code&gt; （ &lt;code&gt;defvar&lt;/code&gt; をサブルーチンとして呼び出す）を使用する必要があります。&lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;変数の定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="da089848c03f8ce3f8980943a85c2ada002c9db8" translate="yes" xml:space="preserve">
          <source>To define a kind of magic file name, you must supply a regular expression to define the class of names (all those that match the regular expression), plus a handler that implements all the primitive Emacs file operations for file names that match.</source>
          <target state="translated">マジックファイル名の種類を定義するには、名前のクラスを定義するための正規表現 (正規表現にマッチするすべてのもの)と、マッチするファイル名のためのすべての原始的な Emacs ファイル操作を実装するハンドラを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="be46e3ea1fad3493a5c2d659f71c451b37468aba" translate="yes" xml:space="preserve">
          <source>To define a real menu item which can be selected, the extended format binding looks like this:</source>
          <target state="translated">選択可能な実際のメニュー項目を定義するには、拡張フォーマットバインディングは次のようになります。</target>
        </trans-unit>
        <trans-unit id="242173ab3939d3e25ee7d06573de8c62f25e018d" translate="yes" xml:space="preserve">
          <source>To define items in some local map, bind &lt;code&gt;tool-bar-map&lt;/code&gt; with &lt;code&gt;let&lt;/code&gt; around calls of this function:</source>
          <target state="translated">いくつかのローカルマップでアイテムを定義するには、バインド &lt;code&gt;tool-bar-map&lt;/code&gt; で &lt;code&gt;let&lt;/code&gt; この関数の呼び出し周り：</target>
        </trans-unit>
        <trans-unit id="4b51a95034fae70a0f906d327a9971bc4d4ef1ce" translate="yes" xml:space="preserve">
          <source>To define system-specific X11 keysyms, set the variable &lt;code&gt;system-key-alist&lt;/code&gt;.</source>
          <target state="translated">システム固有のX11キーシムを定義するには、変数 &lt;code&gt;system-key-alist&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="73c67c5491a375c80d720438c106b29de8cdb852" translate="yes" xml:space="preserve">
          <source>To delete a group, move point into it and type</source>
          <target state="translated">グループを削除するには、ポイントを移動して</target>
        </trans-unit>
        <trans-unit id="8e96ef9ec0fc817e8f29201278b2f3e54af7b1ea" translate="yes" xml:space="preserve">
          <source>To describe the lexing rules of your language to SMIE, you need 2 functions, one to fetch the next token, and another to fetch the previous token. Those functions will usually first skip whitespace and comments and then look at the next chunk of text to see if it is a special token. If so it should skip the token and return a description of this token. Usually this is simply the string extracted from the buffer, but it can be anything you want. For example:</source>
          <target state="translated">言語の語彙規則をSMIEに記述するには、次のトークンを取得する関数と、前のトークンを取得する関数の2つの関数が必要です。これらの関数は通常、最初に空白とコメントをスキップして、次のテキストの塊を見て、それが特別なトークンであるかどうかを確認します。そうであれば、トークンをスキップして、そのトークンの説明を返します。通常、これは単にバッファから抽出した文字列ですが、何でも構いません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="4cb372b3c447b50febee755be839e76e33054af7" translate="yes" xml:space="preserve">
          <source>To determine whether a given subprocess actually got a pipe or a pty, use the function &lt;code&gt;process-tty-name&lt;/code&gt; (see &lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;).</source>
          <target state="translated">特定のサブプロセスが実際にパイプまたはptyを取得したかどうかを判別するには、関数 &lt;code&gt;process-tty-name&lt;/code&gt; を使用します（&lt;a href=&quot;process-information#Process-Information&quot;&gt;プロセス情報を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="7f0898334262efad40a7b01e832830958d6ea6b2" translate="yes" xml:space="preserve">
          <source>To disable the dynamic loading feature for a specific file, set this option to &lt;code&gt;nil&lt;/code&gt; in its header line (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;Local Variables in Files&lt;/a&gt; in</source>
          <target state="translated">特定のファイルの動的ロード機能を無効にするには、このオプション設定 &lt;code&gt;nil&lt;/code&gt; をそのヘッダ行に（参照&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;ファイル内のローカル変数&lt;/a&gt;では</target>
        </trans-unit>
        <trans-unit id="8d5e3874fad54b27ff6edfe7772adf4f6fbd2b49" translate="yes" xml:space="preserve">
          <source>To display a space of specified width and/or height, use a display specification of the form &lt;code&gt;(space . &lt;var&gt;props&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;props&lt;/var&gt; is a property list (a list of alternating properties and values). You can put this property on one or more consecutive characters; a space of the specified height and width is displayed in place of &lt;em&gt;all&lt;/em&gt; of those characters. These are the properties you can use in &lt;var&gt;props&lt;/var&gt; to specify the weight of the space:</source>
          <target state="translated">指定された幅や高さのスペースを表示するには、形式の表示仕様 &lt;code&gt;(space . &lt;var&gt;props&lt;/var&gt;)&lt;/code&gt; 使用します。ここで、 &lt;var&gt;props&lt;/var&gt; はプロパティリスト（交互のプロパティと値のリスト）です。このプロパティは、1つ以上の連続する文字に配置できます。これら&lt;em&gt;すべて&lt;/em&gt;の文字の代わりに、指定された高さと幅のスペースが表示されます。これらは、スペースの重みを指定するために &lt;var&gt;props&lt;/var&gt; 使用できるプロパティです。</target>
        </trans-unit>
        <trans-unit id="4ffc4ba1a6de109bae00ebf9c118c0264731234e" translate="yes" xml:space="preserve">
          <source>To display an embedded widget in a buffer, you must first create an xwidget object, and then use that object as the display specifier in a &lt;code&gt;display&lt;/code&gt; text or overlay property (see &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;).</source>
          <target state="translated">埋め込みウィジェットをバッファーに表示するには、最初にxwidgetオブジェクトを作成してから、そのオブジェクトを &lt;code&gt;display&lt;/code&gt; テキストまたはオーバーレイプロパティの表示指定子として使用する必要があります（「&lt;a href=&quot;display-property#Display-Property&quot;&gt;表示プロパティ&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="612e166b28872c3a8d06d7757780349cd9e9885d" translate="yes" xml:space="preserve">
          <source>To display an image in an Emacs buffer, you must first create an image descriptor, then use it as a display specifier in the &lt;code&gt;display&lt;/code&gt; property of text that is displayed (see &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;).</source>
          <target state="translated">Emacsバッファーに画像を表示するには、最初に画像記述子を作成してから、表示されるテキストの &lt;code&gt;display&lt;/code&gt; プロパティで表示指定子として使用する必要があります（&lt;a href=&quot;display-property#Display-Property&quot;&gt;Displayプロパティを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="a8ab40d8502bb236444d4c748c84422d49084ce2" translate="yes" xml:space="preserve">
          <source>To display something in the margin &lt;em&gt;in association with&lt;/em&gt; certain buffer text, without altering or preventing the display of that text, put a &lt;code&gt;before-string&lt;/code&gt; property on the text and put the margin display specification on the contents of the before-string.</source>
          <target state="translated">特定のバッファテキスト&lt;em&gt;に関連し&lt;/em&gt;てマージン&lt;em&gt;に&lt;/em&gt;何かを表示するには、そのテキストの表示を変更または妨げずに、テキストに &lt;code&gt;before-string&lt;/code&gt; プロパティを設定し、before-stringの内容にマージン表示仕様を配置します。</target>
        </trans-unit>
        <trans-unit id="2ac1a88bca0cfc132b292a9580511ca77f20d1c7" translate="yes" xml:space="preserve">
          <source>To distinguish the different types of processes, the &lt;code&gt;process-type&lt;/code&gt; function returns the symbol &lt;code&gt;network&lt;/code&gt; for a network connection or server, &lt;code&gt;serial&lt;/code&gt; for a serial port connection, &lt;code&gt;pipe&lt;/code&gt; for a pipe connection, or &lt;code&gt;real&lt;/code&gt; for a real subprocess.</source>
          <target state="translated">プロセスの異なるタイプを区別するために、 &lt;code&gt;process-type&lt;/code&gt; 関数は、シンボル返し &lt;code&gt;network&lt;/code&gt; 、ネットワーク接続又はサーバ用 &lt;code&gt;serial&lt;/code&gt; 、シリアルポート接続のため、 &lt;code&gt;pipe&lt;/code&gt; 配管接続用の、又は &lt;code&gt;real&lt;/code&gt; 本当のサブプロセスのために。</target>
        </trans-unit>
        <trans-unit id="05d5c1daa8d28f63fa48996b94da05d2812ba71a" translate="yes" xml:space="preserve">
          <source>To do this for one buffer, the one already current, simply write a call to &lt;code&gt;atomic-change-group&lt;/code&gt; around the code that makes the changes, like this:</source>
          <target state="translated">すでに最新の1つのバッファーに対してこれを行うには、次のように、変更を行うコードの周囲に &lt;code&gt;atomic-change-group&lt;/code&gt; の呼び出しを記述します。</target>
        </trans-unit>
        <trans-unit id="eb94ca63ae89215346ca01eaf463c0cfab2f34ae" translate="yes" xml:space="preserve">
          <source>To do this, write one or more &lt;em&gt;evaluation list groups&lt;/em&gt; in the evaluation list buffer. An evaluation list group consists of one or more Lisp expressions. Groups are separated by comment lines.</source>
          <target state="translated">これを行うには、評価リストバッファに1つ以上の&lt;em&gt;評価リストグループ&lt;/em&gt;を書き込みます。評価リストグループは、1つ以上のLisp式で構成されます。グループはコメント行で区切られます。</target>
        </trans-unit>
        <trans-unit id="6a44041b6bf383ffe5217b5f44c2750ab46451e4" translate="yes" xml:space="preserve">
          <source>To edit a particular file in unibyte representation, visit it using &lt;code&gt;find-file-literally&lt;/code&gt;. See &lt;a href=&quot;visiting-functions#Visiting-Functions&quot;&gt;Visiting Functions&lt;/a&gt;. You can convert a multibyte buffer to unibyte by saving it to a file, killing the buffer, and visiting the file again with &lt;code&gt;find-file-literally&lt;/code&gt;. Alternatively, you can use</source>
          <target state="translated">ユニバイト表現で特定のファイルを編集するには、 &lt;code&gt;find-file-literally&lt;/code&gt; を使用してそのファイルにアクセスします。&lt;a href=&quot;visiting-functions#Visiting-Functions&quot;&gt;訪問機能を&lt;/a&gt;参照してください。マルチバイトバッファをファイルに保存し、バッファを強制終了し、 &lt;code&gt;find-file-literally&lt;/code&gt; を使用してファイルに再度アクセスすることにより、マルチバイトバッファをユニバイトに変換できます。または、</target>
        </trans-unit>
        <trans-unit id="fe5e6c27a8f59ef290015d6ac8f824d9b7ff9b2e" translate="yes" xml:space="preserve">
          <source>To emulate Unicode-compliant collation on MS-Windows systems, bind &lt;code&gt;w32-collate-ignore-punctuation&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value, since the codeset part of the locale cannot be &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; on MS-Windows.</source>
          <target state="translated">MS-WindowsシステムでUnicode準拠の照合をエミュレートするには、ロケールのコードセット部分をMS-Windowsで &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; にすることはできないため、 &lt;code&gt;w32-collate-ignore-punctuation&lt;/code&gt; を &lt;code&gt;nil&lt;/code&gt; 以外の値にバインドします。</target>
        </trans-unit>
        <trans-unit id="bb22ac9aa97cf59701dbd87a30f14a83e31dc830" translate="yes" xml:space="preserve">
          <source>To enclose a complicated expression for the postfix operators &amp;lsquo;</source>
          <target state="translated">接尾辞演算子の複雑な式を囲むには '</target>
        </trans-unit>
        <trans-unit id="5bb9a33127055a186c9841f0be6edc07e148df56" translate="yes" xml:space="preserve">
          <source>To enclose a set of &amp;lsquo;</source>
          <target state="translated">'のセットを囲むには</target>
        </trans-unit>
        <trans-unit id="aad4f7e11ac2c1007d79990475b1ffc586453615" translate="yes" xml:space="preserve">
          <source>To ensure that the return value is always specified and absolute, use a value of &lt;code&gt;default&lt;/code&gt; for &lt;var&gt;inherit&lt;/var&gt;; this will resolve any unspecified or relative values by merging with the &lt;code&gt;default&lt;/code&gt; face (which is always completely specified).</source>
          <target state="translated">戻り値は常に指定と絶対の値が使用されていることを確認するには &lt;code&gt;default&lt;/code&gt; のための &lt;var&gt;inherit&lt;/var&gt; 。これにより、 &lt;code&gt;default&lt;/code&gt; 面（常に完全に指定されている）とマージすることにより、未指定または相対値が解決されます。</target>
        </trans-unit>
        <trans-unit id="e0c126d62e13c91e026ad9e86846f8ad4de3d634" translate="yes" xml:space="preserve">
          <source>To execute a command, Emacs first reads its arguments by calling &lt;code&gt;command-execute&lt;/code&gt; (see &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;). For commands written in Lisp, the &lt;code&gt;interactive&lt;/code&gt; specification says how to read the arguments. This may use the prefix argument (see &lt;a href=&quot;prefix-command-arguments#Prefix-Command-Arguments&quot;&gt;Prefix Command Arguments&lt;/a&gt;) or may read with prompting in the minibuffer (see &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;Minibuffers&lt;/a&gt;). For example, the command &lt;code&gt;find-file&lt;/code&gt; has an &lt;code&gt;interactive&lt;/code&gt; specification which says to read a file name using the minibuffer. The function body of &lt;code&gt;find-file&lt;/code&gt; does not use the minibuffer, so if you call &lt;code&gt;find-file&lt;/code&gt; as a function from Lisp code, you must supply the file name string as an ordinary Lisp function argument.</source>
          <target state="translated">コマンドを実行するために、Emacsは最初に &lt;code&gt;command-execute&lt;/code&gt; を呼び出して引数を読み取ります（&lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Callを&lt;/a&gt;参照）。Lispで書かれたコマンドの場合、 &lt;code&gt;interactive&lt;/code&gt; 仕様は引数の読み方を示しています。これは、前置引数を使用することができます（&lt;a href=&quot;prefix-command-arguments#Prefix-Command-Arguments&quot;&gt;プレフィックスコマンド引数&lt;/a&gt;）または（参照ミニバッファにプロンプトで読むことができる&lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;ミニバッファを&lt;/a&gt;）。たとえば、コマンド &lt;code&gt;find-file&lt;/code&gt; には、ミニバッファを使用してファイル名を読み取るように指示する &lt;code&gt;interactive&lt;/code&gt; な仕様があります。 &lt;code&gt;find-file&lt;/code&gt; の関数本体はミニバッファーを使用しないため、 &lt;code&gt;find-file&lt;/code&gt; を呼び出すと Lispコードの関数として、ファイル名の文字列を通常のLisp関数の引数として指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6566806b47a3aa9b7f3de92a2db0b971d64f96a5" translate="yes" xml:space="preserve">
          <source>To facilitate handling plists, this library makes liberal use of &lt;code&gt;cl-lib&lt;/code&gt; library (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/index.html#Top&quot;&gt;cl-lib&lt;/a&gt; in</source>
          <target state="translated">plistの処理を容易にするために、このライブラリは &lt;code&gt;cl-lib&lt;/code&gt; ライブラリを自由に使用します（の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/index.html#Top&quot;&gt;cl-lib&lt;/a&gt;を参照）</target>
        </trans-unit>
        <trans-unit id="943b21f8b9590e90a090aea3ca4bdaf4332a1e92" translate="yes" xml:space="preserve">
          <source>To facilitate support for window systems that support multiple selections, this function may also return a list of strings. In that case, the first string is used as the most recent kill, and all the other strings are pushed onto the kill ring, for easy access by &lt;code&gt;yank-pop&lt;/code&gt;.</source>
          <target state="translated">複数の選択をサポートするウィンドウシステムのサポートを容易にするために、この関数は文字列のリストを返す場合もあります。その場合、 &lt;code&gt;yank-pop&lt;/code&gt; で簡単にアクセスできるように、最初の文字列が最新のkillとして使用され、他のすべての文字列がkillリングにプッシュされます。</target>
        </trans-unit>
        <trans-unit id="c2d6ad27ab1b6fc479f12591a36ec3f7865428c9" translate="yes" xml:space="preserve">
          <source>To find multiline constructs reliably, you must either manually place the &lt;code&gt;font-lock-multiline&lt;/code&gt; property on the text before Font Lock mode looks at it, or use &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt;.</source>
          <target state="translated">複数行の構成を確実に見つけるには、フォントロックモードでテキストを確認する前に、テキストに &lt;code&gt;font-lock-multiline&lt;/code&gt; プロパティを手動で配置するか、 &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="736c0fcb8de5bb8353a063e5781898cc0450f96a" translate="yes" xml:space="preserve">
          <source>To find out where your breakpoints are, use the</source>
          <target state="translated">ブレークポイントがどこにあるかを調べるには</target>
        </trans-unit>
        <trans-unit id="f460081de818da04e5a9cff694d9ecde40a8ee4d" translate="yes" xml:space="preserve">
          <source>To find the file, &lt;code&gt;load&lt;/code&gt; first looks for a file named</source>
          <target state="translated">ファイルを見つけるために、 &lt;code&gt;load&lt;/code&gt; は最初にという名前のファイルを探します</target>
        </trans-unit>
        <trans-unit id="da338d47b276994da0478e188dcbe079feaf3afe" translate="yes" xml:space="preserve">
          <source>To force point to the end of the new output, no matter where it was previously, eliminate the variable &lt;code&gt;moving&lt;/code&gt; from the example and call &lt;code&gt;goto-char&lt;/code&gt; unconditionally. Note that this doesn&amp;rsquo;t necessarily move the window point. The default filter actually uses &lt;code&gt;insert-before-markers&lt;/code&gt; which moves all markers, including the window point. This may move unrelated markers, so it&amp;rsquo;s generally better to move the window point explicitly, or set its insertion type to &lt;code&gt;t&lt;/code&gt; (see &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;).</source>
          <target state="translated">ポイントを新しい出力の最後に強制するには、以前の場所に関係なく、例から &lt;code&gt;moving&lt;/code&gt; する変数を削除し、無条件に &lt;code&gt;goto-char&lt;/code&gt; を呼び出します。これは必ずしもウィンドウポイントを移動するわけではないことに注意してください。デフォルトのフィルターは、実際には、ウィンドウポイントを含むすべてのマーカーを移動する &lt;code&gt;insert-before-markers&lt;/code&gt; を使用します。これにより、無関係のマーカーが移動する可能性があるため、通常は、ウィンドウポイントを明示的に移動するか、挿入タイプを &lt;code&gt;t&lt;/code&gt; に設定することをお勧めします（&lt;a href=&quot;window-point#Window-Point&quot;&gt;ウィンドウポイントを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="4288c93e20156dd07221471369ed083de2003c77" translate="yes" xml:space="preserve">
          <source>To generate repeat events, successive mouse button presses must be at approximately the same screen position. The value of &lt;code&gt;double-click-fuzz&lt;/code&gt; specifies the maximum number of pixels the mouse may be moved (horizontally or vertically) between two successive clicks to make a double-click.</source>
          <target state="translated">繰り返しイベントを生成するには、マウスボタンを連続して押すのがほぼ同じ画面位置である必要があります。 &lt;code&gt;double-click-fuzz&lt;/code&gt; の値は、2回の連続クリックの間にマウスを（水平または垂直に）移動してダブルクリックできる最大ピクセル数を指定します。</target>
        </trans-unit>
        <trans-unit id="780f4821e6554fc54824a572b385fa0fc600c6df" translate="yes" xml:space="preserve">
          <source>To generate repeat events, the number of milliseconds between successive button presses must be less than the value of &lt;code&gt;double-click-time&lt;/code&gt;. Setting &lt;code&gt;double-click-time&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; disables multi-click detection entirely. Setting it to &lt;code&gt;t&lt;/code&gt; removes the time limit; Emacs then detects multi-clicks by position only.</source>
          <target state="translated">繰り返しイベントを生成するには、連続するボタンを押す間隔のミリ秒数が、 &lt;code&gt;double-click-time&lt;/code&gt; 値よりも小さくなければなりません。 &lt;code&gt;double-click-time&lt;/code&gt; を &lt;code&gt;nil&lt;/code&gt; に設定すると、マルチクリック検出が完全に無効になります。 &lt;code&gt;t&lt;/code&gt; に設定すると、制限時間が削除されます。その後、Emacsは位置のみでマルチクリックを検出します。</target>
        </trans-unit>
        <trans-unit id="19d088bf54b936cef160191c2cebeed8a1d1ed35" translate="yes" xml:space="preserve">
          <source>To handle a SIGUSR1 signal, define an interactive function, and bind it to the &lt;code&gt;signal usr1&lt;/code&gt; event sequence:</source>
          <target state="translated">SIGUSR1シグナルを処理するには、対話型関数を定義し、それを &lt;code&gt;signal usr1&lt;/code&gt; イベントシーケンスにバインドします。</target>
        </trans-unit>
        <trans-unit id="c32006c4ff4c766228037b6b2afe06d3f3a145af" translate="yes" xml:space="preserve">
          <source>To help debug programs, unrecognized &amp;lsquo;</source>
          <target state="translated">プログラムのデバッグを支援するために、認識されない '</target>
        </trans-unit>
        <trans-unit id="3849d18d8fabe966dd35742de30de88b9eae3d6b" translate="yes" xml:space="preserve">
          <source>To help describe one form, we sometimes show another form that produces identical results. The exact equivalence of two forms is indicated with &amp;lsquo;</source>
          <target state="translated">1つのフォームを説明するために、同じ結果を生成する別のフォームを表示する場合があります。2つの形式の正確な同等性は、 'で示されます。</target>
        </trans-unit>
        <trans-unit id="fe6c6111fdf3fec951dcd98ca0836d457ab405fa" translate="yes" xml:space="preserve">
          <source>To help understand specifications.</source>
          <target state="translated">仕様を理解しやすくするために</target>
        </trans-unit>
        <trans-unit id="e7576433676549c25899233eb67d4f87d1a704bb" translate="yes" xml:space="preserve">
          <source>To illustrate some of the above, suppose that you have the line:</source>
          <target state="translated">上記のいくつかを説明するために、ラインを持っているとします。</target>
        </trans-unit>
        <trans-unit id="d9955b25ef22660ce84067f31b4afc415a9b0964" translate="yes" xml:space="preserve">
          <source>To illustrate the difference between &lt;code&gt;file-chase-links&lt;/code&gt; and &lt;code&gt;file-truename&lt;/code&gt;, suppose that</source>
          <target state="translated">&lt;code&gt;file-chase-links&lt;/code&gt; と &lt;code&gt;file-truename&lt;/code&gt; の違いを説明するために、次のように仮定します。</target>
        </trans-unit>
        <trans-unit id="d22f5aae492a50a5ddf46999ea08278e96a32b03" translate="yes" xml:space="preserve">
          <source>To illustrate the effect of &lt;code&gt;window-combination-resize&lt;/code&gt;, consider the following frame layout.</source>
          <target state="translated">&lt;code&gt;window-combination-resize&lt;/code&gt; の効果を説明するために、次のフレームレイアウトを検討してください。</target>
        </trans-unit>
        <trans-unit id="090fd0dd48cab6913fa6cc0fdbb3061886ab5e87" translate="yes" xml:space="preserve">
          <source>To illustrate usage, here is a Lisp function that returns a list of the overlays that specify property &lt;var&gt;prop&lt;/var&gt; for the character at point:</source>
          <target state="translated">使用法を説明するために、ポイントの文字のプロパティ &lt;var&gt;prop&lt;/var&gt; を指定するオーバーレイのリストを返すLisp関数を次に示します。</target>
        </trans-unit>
        <trans-unit id="9aa3dbb1b5573770c3cda95ee5fd660e4b6f1d60" translate="yes" xml:space="preserve">
          <source>To indicate clickability, add the &lt;code&gt;mouse-face&lt;/code&gt; text property to the text of the link; then Emacs will highlight the link when the mouse moves over it. In addition, you should define a tooltip or echo area message, using the &lt;code&gt;help-echo&lt;/code&gt; text property. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;. For instance, here is how Dired indicates that file names are clickable:</source>
          <target state="translated">クリック可能性を示すには、 &lt;code&gt;mouse-face&lt;/code&gt; テキストプロパティをリンクのテキストに追加します。次に、マウスがリンク上を移動すると、Emacsはリンクを強調表示します。さらに、 &lt;code&gt;help-echo&lt;/code&gt; textプロパティを使用して、ツールチップまたはエコー領域メッセージを定義する必要があります。&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;特別なプロパティを&lt;/a&gt;参照してください。たとえば、Diredがファイル名をクリック可能であることを示す方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="3a1dbfb3a0e34748a91329934ecf56b22e833a24" translate="yes" xml:space="preserve">
          <source>To inspect or modify Edebug&amp;rsquo;s instrumentation before it is used, set this variable to a function which takes one argument, an instrumented top-level form, and returns either the same or a replacement form, which Edebug will then use as the final result of instrumentation.</source>
          <target state="translated">Edebugのインストルメンテーションを使用する前に検査または変更するには、この変数を、インストルメント化された最上位フォームである1つの引数を取り、同じフォームまたは置換フォームを返す関数に設定します。これは、Edebugがインストルメンテーションの最終結果として使用します。 。</target>
        </trans-unit>
        <trans-unit id="171f3d4271e887f0b4d6bc8015659001762bbfdf" translate="yes" xml:space="preserve">
          <source>To investigate a problem that happens in the middle of a program, one useful technique is to enter the debugger whenever a certain function is called. You can do this to the function in which the problem occurs, and then step through the function, or you can do this to a function called shortly before the problem, step quickly over the call to that function, and then step through its caller.</source>
          <target state="translated">プログラムの途中で発生した問題を調べるには、ある関数が呼ばれるたびにデバッガに入るのが便利なテクニックの 1 つです。問題が発生している関数に対してこれを行い、その関数をステップスルーすることもできますし、問題が発生する少し前に呼び出された関数に対してこれを行い、その関数の呼び出しを素早くステップオーバーして、その呼び出し元をステップスルーすることもできます。</target>
        </trans-unit>
        <trans-unit id="f9c5055a6610fc9a3afc3c681376560eea1c90af" translate="yes" xml:space="preserve">
          <source>To invoke a recursive editing level, call the function &lt;code&gt;recursive-edit&lt;/code&gt;. This function contains the command loop; it also contains a call to &lt;code&gt;catch&lt;/code&gt; with tag &lt;code&gt;exit&lt;/code&gt;, which makes it possible to exit the recursive editing level by throwing to &lt;code&gt;exit&lt;/code&gt; (see &lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;Catch and Throw&lt;/a&gt;). If you throw a value other than &lt;code&gt;t&lt;/code&gt;, then &lt;code&gt;recursive-edit&lt;/code&gt; returns normally to the function that called it. The command</source>
          <target state="translated">再帰編集レベルを呼び出すには、関数 &lt;code&gt;recursive-edit&lt;/code&gt; を呼び出します。この関数にはコマンドループが含まれています。また、タグ &lt;code&gt;exit&lt;/code&gt; を使用して &lt;code&gt;catch&lt;/code&gt; を呼び出す呼び出しも含まれています。これにより、exitにスローすることで再帰的な編集レベルを終了でき &lt;code&gt;exit&lt;/code&gt; （&lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;Catch and Throwを&lt;/a&gt;参照）。 &lt;code&gt;t&lt;/code&gt; 以外の値をスローすると、 &lt;code&gt;recursive-edit&lt;/code&gt; は通常それを呼び出した関数に戻ります。コマンド</target>
        </trans-unit>
        <trans-unit id="57679f9ec522a25d4f3a4eff83a4c6bab4a13c8e" translate="yes" xml:space="preserve">
          <source>To make</source>
          <target state="translated">作るために</target>
        </trans-unit>
        <trans-unit id="b28b8c078d49d61565091491fb61c804021a5b9f" translate="yes" xml:space="preserve">
          <source>To make Edebug properly instrument expressions that call macros, some extra care is needed. This subsection explains the details.</source>
          <target state="translated">マクロを呼び出す式をEdebugで適切にインストルメントするためには、いくつかの特別な注意が必要です。このサブセクションでは、その詳細を説明します。</target>
        </trans-unit>
        <trans-unit id="e110967bcc187afa87061918c1137868844ccda5" translate="yes" xml:space="preserve">
          <source>To make a buffer-local binding for an Emacs customization variable, use &lt;code&gt;make-local-variable&lt;/code&gt; in the major mode command, not &lt;code&gt;make-variable-buffer-local&lt;/code&gt;. The latter function would make the variable local to every buffer in which it is subsequently set, which would affect buffers that do not use this mode. It is undesirable for a mode to have such global effects. See &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</source>
          <target state="translated">Emacsカスタマイズ変数のバッファーローカルバインディングを作成するには、 &lt;code&gt;make-variable-buffer-local&lt;/code&gt; ではなく、メジャーモードコマンドで &lt;code&gt;make-local-variable&lt;/code&gt; を使用します。後者の関数は、変数を後で設定されるすべてのバッファーに対してローカルにします。これは、このモードを使用しないバッファーに影響します。モードがそのようなグローバルな効果を持つことは望ましくありません。&lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;バッファローカル変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="54b4d66a91658eb38ae8d3816f21e38f37d89312" translate="yes" xml:space="preserve">
          <source>To make a multibuffer change group, call &lt;code&gt;prepare-change-group&lt;/code&gt; once for each buffer you want to cover, then use &lt;code&gt;nconc&lt;/code&gt; to combine the returned values, like this:</source>
          <target state="translated">マルチバッファ変更グループを作成するには、カバーするバッファごとに &lt;code&gt;prepare-change-group&lt;/code&gt; を1回呼び出してから、 &lt;code&gt;nconc&lt;/code&gt; を使用して次のように戻り値を結合します。</target>
        </trans-unit>
        <trans-unit id="42dd4afbb0436d09e3eed3fd88ecae2967293889" translate="yes" xml:space="preserve">
          <source>To make just a few elements optional, followed by non-optional elements, use &lt;code&gt;[&amp;amp;optional &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;. To specify that several elements must all match or none, use &lt;code&gt;&amp;amp;optional
[&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;. See the &lt;code&gt;defun&lt;/code&gt; example.</source>
          <target state="translated">非オプションの要素、使用に続いて、わずか数の要素をオプションにするには &lt;code&gt;[&amp;amp;optional &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; 。複数の要素がすべて一致するか、まったく一致しないかを指定するには、 &lt;code&gt;&amp;amp;optional [&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; ます。 &lt;code&gt;defun&lt;/code&gt; の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="5d823ee2f72dacdbb4f2dba2de9e92b6f561495a" translate="yes" xml:space="preserve">
          <source>To make the filter force the process buffer to be visible whenever new text arrives, you could insert a line like the following just before the &lt;code&gt;with-current-buffer&lt;/code&gt; construct:</source>
          <target state="translated">新しいテキストが到着するたびにフィルターがプロセスバッファーを強制的に表示するようにするには、 &lt;code&gt;with-current-buffer&lt;/code&gt; コンストラクトの直前に次のような行を挿入します。</target>
        </trans-unit>
        <trans-unit id="cde27adc42d5ce2a917b7e5753117c5b2eb6d70d" translate="yes" xml:space="preserve">
          <source>To make the link clickable, bind</source>
          <target state="translated">リンクをクリックできるようにするには</target>
        </trans-unit>
        <trans-unit id="eebdd90143c4ee3d9ff5ef4a53378de662d0d3f1" translate="yes" xml:space="preserve">
          <source>To model this agnosticism, the &lt;code&gt;jsonrpc&lt;/code&gt; library uses objects of a &lt;code&gt;jsonrpc-connection&lt;/code&gt; class, which represent a connection to a remote JSON endpoint (for details on Emacs&amp;rsquo;s object system, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/eieio/index.html#Top&quot;&gt;EIEIO&lt;/a&gt; in</source>
          <target state="translated">この不可知論をモデル化するために、 &lt;code&gt;jsonrpc&lt;/code&gt; ライブラリはリモートJSONエンドポイントへの接続を表す &lt;code&gt;jsonrpc-connection&lt;/code&gt; クラスのオブジェクトを使用します（Emacsのオブジェクトシステムの詳細については、&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/eieio/index.html#Top&quot;&gt;EIEIO&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="69ee4e3a63fd1b81d7b8fceb19ec1049f1405ece" translate="yes" xml:space="preserve">
          <source>To move forward over all comments and whitespace following point, use &lt;code&gt;(forward-comment (buffer-size))&lt;/code&gt;. &lt;code&gt;(buffer-size)&lt;/code&gt; is a good argument to use, because the number of comments in the buffer cannot exceed that many.</source>
          <target state="translated">ポイントに続くすべてのコメントと空白を &lt;code&gt;(forward-comment (buffer-size))&lt;/code&gt; 、（forward-comment（buffer-size））を使用します。 &lt;code&gt;(buffer-size)&lt;/code&gt; は、バッファー内のコメントの数がその数を超えることはできないため、使用するのに適した引数です。</target>
        </trans-unit>
        <trans-unit id="3a64c88e283e2c164b1c2e9cd45b6b01b9a7ce69" translate="yes" xml:space="preserve">
          <source>To move point to the beginning of the buffer, write:</source>
          <target state="translated">バッファの先頭にポイントを移動するには、書き込みを行います。</target>
        </trans-unit>
        <trans-unit id="0a7d809abf99f50235c3ecafab33d06be35faaf2" translate="yes" xml:space="preserve">
          <source>To operate temporarily on another buffer, put the &lt;code&gt;set-buffer&lt;/code&gt; within a &lt;code&gt;save-current-buffer&lt;/code&gt; form. Here, as an example, is a simplified version of the command &lt;code&gt;append-to-buffer&lt;/code&gt;:</source>
          <target state="translated">別のバッファを一時的に操作するには、 &lt;code&gt;set-buffer&lt;/code&gt; を &lt;code&gt;save-current-buffer&lt;/code&gt; フォームに入れます。ここに、例として、コマンド &lt;code&gt;append-to-buffer&lt;/code&gt; の簡略化されたバージョンがあります。</target>
        </trans-unit>
        <trans-unit id="840d374dedfec04c1cd90fbe525bf0978f4444a0" translate="yes" xml:space="preserve">
          <source>To perform the actual binding:</source>
          <target state="translated">実際のバインディングを行うこと。</target>
        </trans-unit>
        <trans-unit id="644d37c71966a7999a7bcd75d495874fdf040fc1" translate="yes" xml:space="preserve">
          <source>To play sound using Emacs, use the function &lt;code&gt;play-sound&lt;/code&gt;. Only certain systems are supported; if you call &lt;code&gt;play-sound&lt;/code&gt; on a system which cannot really do the job, it gives an error.</source>
          <target state="translated">Emacsを使用してサウンドを再生するには、関数 &lt;code&gt;play-sound&lt;/code&gt; を使用します。特定のシステムのみがサポートされています。実際に仕事ができないシステムで &lt;code&gt;play-sound&lt;/code&gt; を呼び出すと、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="fd6aefb60a528939aa2c87de8c1c8c9781ea9512" translate="yes" xml:space="preserve">
          <source>To position the frame above or below a specific other frame use the function &lt;code&gt;frame-restack&lt;/code&gt; (see &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;Raising and Lowering&lt;/a&gt;).</source>
          <target state="translated">機能上または特定の他のフレームの使用下フレーム位置する &lt;code&gt;frame-restack&lt;/code&gt; （参照&lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;昇降します&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="438bfd54a1d9648a75ddbf6e0255651657c4562b" translate="yes" xml:space="preserve">
          <source>To present a consistent environment (see &lt;a href=&quot;intro-eval#Intro-Eval&quot;&gt;Intro Eval&lt;/a&gt;) to &lt;var&gt;body-forms&lt;/var&gt; (thus avoiding an evaluation error on match), if any of the sub-patterns let-binds a set of symbols, they &lt;em&gt;must&lt;/em&gt; all bind the same set of symbols.</source>
          <target state="translated">一貫した環境（&lt;a href=&quot;intro-eval#Intro-Eval&quot;&gt;イントロ評価を&lt;/a&gt;参照）を &lt;var&gt;body-forms&lt;/var&gt; 提示するには（したがって、一致時の評価エラーを回避するため）、サブパターンのいずれかがシンボルのセットをlet- bindする場合、それら&lt;em&gt;は&lt;/em&gt;すべて同じシンボルのセットをバインドする&lt;em&gt;必要があり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="a13738b26455ab39383ce4949493d6c3c45ea8a7" translate="yes" xml:space="preserve">
          <source>To prevent conflicts among different libraries running in the same Emacs, each Lisp program that uses &lt;code&gt;make-temp-file&lt;/code&gt; should have its own &lt;var&gt;prefix&lt;/var&gt;. The number added to the end of &lt;var&gt;prefix&lt;/var&gt; distinguishes between the same application running in different Emacs jobs. Additional added characters permit a large number of distinct names even in one Emacs job.</source>
          <target state="translated">同じEmacsで実行されている異なるライブラリ間の競合を防ぐために、 &lt;code&gt;make-temp-file&lt;/code&gt; を使用する各Lispプログラムには独自の &lt;var&gt;prefix&lt;/var&gt; 必要です。 &lt;var&gt;prefix&lt;/var&gt; の末尾に追加された番号は、異なるEmacsジョブで実行されている同じアプリケーションを区別します。追加された文字により、1つのEmacsジョブでも多数の異なる名前が許可されます。</target>
        </trans-unit>
        <trans-unit id="a8aa3b83dc8758c1842c778a847e228296a9a60d" translate="yes" xml:space="preserve">
          <source>To prevent the frame from disappearing completely from view, the variable &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; defines a lower opacity limit. If the value of the frame parameter is less than the value of this variable, Emacs uses the latter. By default, &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; is 20.</source>
          <target state="translated">フレームが完全に見えなくなるのを防ぐために、変数 &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; は不透明度の下限を定義します。フレームパラメータの値がこの変数の値よりも小さい場合、Emacsは後者を使用します。デフォルトでは、 &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; は20です。</target>
        </trans-unit>
        <trans-unit id="77cb35a44c69e8ef332d334e39083a29ea134122" translate="yes" xml:space="preserve">
          <source>To process input events in addition to checking whether the user wants to quit, use the following function, which is available since Emacs 27.1.</source>
          <target state="translated">ユーザが終了を希望しているかどうかの確認に加えて入力イベントを処理するには、Emacs 27.1 以降で利用可能な以下の関数を使用します。</target>
        </trans-unit>
        <trans-unit id="a3226813c7f19af25b5f4262861b3e27ad0d9e76" translate="yes" xml:space="preserve">
          <source>To produce a window configuration displaying multiple buffers (or different views of one and the same buffer) in one and the same display cycle, Lisp programmers will unavoidably have to write their own action functions. A few tricks listed below might help in this regard.</source>
          <target state="translated">1回の表示サイクルで複数のバッファ(または1つのバッファと同じバッファの異なるビュー)を表示するウィンドウ構成を作成するには、Lispプログラマはやむを得ず独自のアクション関数を書かなければなりません。この点では、以下のトリックが役立つかもしれません。</target>
        </trans-unit>
        <trans-unit id="c48bec204f9101905ceec67fe17a3a4024809876" translate="yes" xml:space="preserve">
          <source>To profile Emacs at the level of its C code, you can build it using the</source>
          <target state="translated">C コードのレベルで Emacs をプロファイル化するには</target>
        </trans-unit>
        <trans-unit id="f61369d2bd521bd23a19d33542ecfd86cf3a53cd" translate="yes" xml:space="preserve">
          <source>To put different properties on various parts of a string, you can construct each part with &lt;code&gt;propertize&lt;/code&gt; and then combine them with &lt;code&gt;concat&lt;/code&gt;:</source>
          <target state="translated">文字列のさまざまな部分に異なる特性を置くために、あなたが各パートを構築することができ &lt;code&gt;propertize&lt;/code&gt; し、その後でそれらを組み合わせて &lt;code&gt;concat&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e6208b4ca41ece824897f98f3082d113ccbb91c6" translate="yes" xml:space="preserve">
          <source>To read a password to pass to another program, you can use the function &lt;code&gt;read-passwd&lt;/code&gt;.</source>
          <target state="translated">パスワードを読み取って別のプログラムに渡すには、関数 &lt;code&gt;read-passwd&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="8cb9f4387c5f024af6136108f7794122d41c3c1f" translate="yes" xml:space="preserve">
          <source>To read user input of color names with completion, use &lt;code&gt;read-color&lt;/code&gt; (see &lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;read-color&lt;/a&gt;).</source>
          <target state="translated">補完して色名のユーザー入力を読み取るには、 &lt;code&gt;read-color&lt;/code&gt; を使用します（&lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;read-colorを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="212468440ed19612efe97b9dd5daacce36a0b01d" translate="yes" xml:space="preserve">
          <source>To record a matched substring for future reference with &amp;lsquo;</source>
          <target state="translated">'で将来参照するために一致した部分文字列を記録するには</target>
        </trans-unit>
        <trans-unit id="0bdd9cdabe498c9fa805f2b32f8896d98542b23f" translate="yes" xml:space="preserve">
          <source>To remove all text properties from certain text, use &lt;code&gt;set-text-properties&lt;/code&gt; and specify &lt;code&gt;nil&lt;/code&gt; for the new property list.</source>
          <target state="translated">特定のテキストからすべてのテキストプロパティを削除するには、 &lt;code&gt;set-text-properties&lt;/code&gt; を使用し、新しいプロパティリストに &lt;code&gt;nil&lt;/code&gt; を指定します。</target>
        </trans-unit>
        <trans-unit id="262aee16099c1d6f975de082cdad4bf0207b4131" translate="yes" xml:space="preserve">
          <source>To remove instrumentation from a definition, simply re-evaluate its definition in a way that does not instrument. There are two ways of evaluating forms that never instrument them: from a file with &lt;code&gt;load&lt;/code&gt;, and from the minibuffer with &lt;code&gt;eval-expression&lt;/code&gt; (</source>
          <target state="translated">定義からインストルメンテーションを削除するには、インストルメンテーションを行わない方法で定義を再評価するだけです。決して楽器それらのフォームを評価する2つの方法があります。で、ファイルから &lt;code&gt;load&lt;/code&gt; 、およびとミニバッファから &lt;code&gt;eval-expression&lt;/code&gt; （</target>
        </trans-unit>
        <trans-unit id="518b3a6ff4b1dd998472452e5862d09ea2071bec" translate="yes" xml:space="preserve">
          <source>To remove the notification and its icon from the taskbar, use the following function:</source>
          <target state="translated">タスクバーから通知とそのアイコンを削除するには、以下の機能を使用します。</target>
        </trans-unit>
        <trans-unit id="986e7ba4dae55e936ed49639ef1308a69784776e" translate="yes" xml:space="preserve">
          <source>To repeat only a few elements, use &lt;code&gt;[&amp;amp;rest &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;. To specify several elements that must all match on every repetition, use &lt;code&gt;&amp;amp;rest [&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;.</source>
          <target state="translated">いくつかの要素のみを繰り返すには、 &lt;code&gt;[&amp;amp;rest &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; ます。すべての繰り返しですべて一致する必要があるいくつかの要素を指定するには、 &lt;code&gt;&amp;amp;rest [&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="f37d0de2b374a7d3098277c92a2faad3f25e2d4c" translate="yes" xml:space="preserve">
          <source>To replace a buffer in all the windows that display it, use &lt;code&gt;replace-buffer-in-windows&lt;/code&gt;, See &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;.</source>
          <target state="translated">バッファを表示するすべてのウィンドウでバッファを置き換えるには、 &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; を使用&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;します&lt;/a&gt;。「バッファとウィンドウ」を参照してください。</target>
        </trans-unit>
        <trans-unit id="b71ced9d558b0dec657ab6166aa5589e85ee2ed8" translate="yes" xml:space="preserve">
          <source>To represent shared or circular structures within a complex of Lisp objects, you can use the reader constructs &amp;lsquo;</source>
          <target state="translated">Lispオブジェクトの複合体内の共有または循環構造を表すために、リーダー構造を使用できます。</target>
        </trans-unit>
        <trans-unit id="9ccbc7e730e6c305ddd9fa94c9a50e27baae42bd" translate="yes" xml:space="preserve">
          <source>To require the presence of a feature, call &lt;code&gt;require&lt;/code&gt; with the feature name as argument. &lt;code&gt;require&lt;/code&gt; looks in the global variable &lt;code&gt;features&lt;/code&gt; to see whether the desired feature has been provided already. If not, it loads the feature from the appropriate file. This file should call &lt;code&gt;provide&lt;/code&gt; at the top level to add the feature to &lt;code&gt;features&lt;/code&gt;; if it fails to do so, &lt;code&gt;require&lt;/code&gt; signals an error.</source>
          <target state="translated">機能の存在を &lt;code&gt;require&lt;/code&gt; するには、機能名を引数としてrequireを呼び出します。 &lt;code&gt;require&lt;/code&gt; は、グローバル変数 &lt;code&gt;features&lt;/code&gt; を調べて、目的の機能がすでに提供されているかどうかを確認します。そうでない場合は、適切なファイルから機能をロードします。このファイルは、機能を &lt;code&gt;features&lt;/code&gt; に追加 &lt;code&gt;provide&lt;/code&gt; に、トップレベルでprovideを呼び出す必要があります。そうしない場合は、 &lt;code&gt;require&lt;/code&gt; はエラーを通知します。</target>
        </trans-unit>
        <trans-unit id="b49c5ac92d06c25038dd0041f112cb2235ef45cb" translate="yes" xml:space="preserve">
          <source>To resize or move an undecorated child frame with the mouse, special frame parameters (see &lt;a href=&quot;mouse-dragging-parameters#Mouse-Dragging-Parameters&quot;&gt;Mouse Dragging Parameters&lt;/a&gt;) have to be used. The internal border of a child frame, if present, can be used to resize the frame with the mouse, provided that frame has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;drag-internal-border&lt;/code&gt; parameter. If set, the &lt;code&gt;snap-width&lt;/code&gt; parameter indicates the number of pixels where the frame &lt;em&gt;snaps&lt;/em&gt; at the respective edge or corner of its parent frame.</source>
          <target state="translated">装飾されていない子フレームをマウスでサイズ変更または移動するには、特別なフレームパラメータ（&lt;a href=&quot;mouse-dragging-parameters#Mouse-Dragging-Parameters&quot;&gt;マウスのドラッグパラメータを&lt;/a&gt;参照）を使用する必要があります。子フレームの内部境界線が存在する場合は、フレームに &lt;code&gt;nil&lt;/code&gt; 以外の &lt;code&gt;drag-internal-border&lt;/code&gt; パラメーターがある場合、マウスでフレームのサイズを変更できます。設定されている場合、 &lt;code&gt;snap-width&lt;/code&gt; パラメータは、フレームが親フレームのそれぞれのエッジまたはコーナーで&lt;em&gt;スナップする&lt;/em&gt;ピクセル数を示します。</target>
        </trans-unit>
        <trans-unit id="18a7f6aed1914a5b6307ab63f1dc2fc9de165b16" translate="yes" xml:space="preserve">
          <source>To restrict which files can trigger the evaluation, include a directory or an extension or both in &lt;var&gt;library&lt;/var&gt;. Only a file whose absolute true name (i.e., the name with all symbolic links chased out) matches all the given name components will match. In the following example,</source>
          <target state="translated">評価をトリガーできるファイルを制限するには、 &lt;var&gt;library&lt;/var&gt; ディレクトリまたは拡張子、あるいはその両方を含めます。絶対的な真の名前（つまり、すべてのシンボリックリンクが追い出された名前）が指定されたすべての名前コンポーネントと一致するファイルのみが一致します。次の例では、</target>
        </trans-unit>
        <trans-unit id="e5efed6dcee2953bf863d21107d285d0ef594649" translate="yes" xml:space="preserve">
          <source>To search for a user-specific configuration file, See &lt;a href=&quot;standard-file-names#Standard-File-Names&quot;&gt;Standard File Names&lt;/a&gt;, for the &lt;code&gt;locate-user-emacs-file&lt;/code&gt; function.</source>
          <target state="translated">ユーザー固有の構成ファイルを検索するには、 &lt;code&gt;locate-user-emacs-file&lt;/code&gt; 関数の「&lt;a href=&quot;standard-file-names#Standard-File-Names&quot;&gt;標準ファイル名&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="5cd663ab539881f4feaf727f97346e7999fc925c" translate="yes" xml:space="preserve">
          <source>To set up the link so that it obeys &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt;, you must either (1) apply a &lt;code&gt;follow-link&lt;/code&gt; text or overlay property to the link text, or (2) bind the &lt;code&gt;follow-link&lt;/code&gt; event to a keymap (which can be a major mode keymap or a local keymap specified via the &lt;code&gt;keymap&lt;/code&gt; text property). The value of the &lt;code&gt;follow-link&lt;/code&gt; property, or the binding for the &lt;code&gt;follow-link&lt;/code&gt; event, acts as a condition for the link action. This condition tells Emacs two things: the circumstances under which a</source>
          <target state="translated">リンクアップセットに従うように、 &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt; 、あなたはどちらか（1）を適用する必要があります &lt;code&gt;follow-link&lt;/code&gt; リンクテキスト、または（2）のバインドにテキストまたはオーバーレイプロパティを &lt;code&gt;follow-link&lt;/code&gt; にイベントキーマップ（メジャーモードキーマップまたは &lt;code&gt;keymap&lt;/code&gt; テキストプロパティで指定されたローカルキーマップの場合があります）。 &lt;code&gt;follow-link&lt;/code&gt; プロパティの値、または &lt;code&gt;follow-link&lt;/code&gt; イベントのバインディングは、リンクアクションの条件として機能します。この条件はEmacsに2つのことを伝えます：</target>
        </trans-unit>
        <trans-unit id="a806bd89d05e5ed99e180df488566decb6e80bdf" translate="yes" xml:space="preserve">
          <source>To specify a preference for showing an arbitrary buffer, users should customize &lt;code&gt;display-buffer-base-action&lt;/code&gt;. An example of how users who prefer working with multiple frames would do that was given in the previous subsection. &lt;code&gt;display-buffer-alist&lt;/code&gt; should be reserved for displaying specific buffers in a specific way.</source>
          <target state="translated">任意のバッファーを表示するための設定を指定するには、ユーザーは &lt;code&gt;display-buffer-base-action&lt;/code&gt; をカスタマイズする必要があります。複数のフレームでの作業を好むユーザーがそれを行う方法の例は、前のサブセクションで示しました。 &lt;code&gt;display-buffer-alist&lt;/code&gt; は、特定のバッファを特定の方法で表示するために予約する必要があります。</target>
        </trans-unit>
        <trans-unit id="31661002e5719518c1266de217cfbbc4e81acd41" translate="yes" xml:space="preserve">
          <source>To specify a relative time as a string, use numbers followed by units. For example:</source>
          <target state="translated">相対時間を文字列で指定するには、数字の後に単位を続けて使用します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="8e4cde9036cb2179b40c67210e0c1af5d8a06068" translate="yes" xml:space="preserve">
          <source>To specify optional arguments that may be omitted when a function is called, simply include the keyword &lt;code&gt;&amp;amp;optional&lt;/code&gt; before the optional arguments. To specify a list of zero or more extra arguments, include the keyword &lt;code&gt;&amp;amp;rest&lt;/code&gt; before one final argument.</source>
          <target state="translated">関数の呼び出し時に省略できるオプションの引数を指定するには、オプションの引数の前にキーワード &lt;code&gt;&amp;amp;optional&lt;/code&gt; を含めるだけです。0個以上の追加引数のリストを指定するには、最後の1つの引数の前にキーワード &lt;code&gt;&amp;amp;rest&lt;/code&gt; を含めます。</target>
        </trans-unit>
        <trans-unit id="2bbf15b6662b15fa335d60b1b3abc35346beaeb7" translate="yes" xml:space="preserve">
          <source>To sum up, it&amp;rsquo;s best to avoid side-effecting references to &lt;var&gt;symbol&lt;/var&gt; patterns entirely, not only in &lt;var&gt;boolean-expression&lt;/var&gt; (in &lt;code&gt;guard&lt;/code&gt;), but also in &lt;var&gt;expr&lt;/var&gt; (in &lt;code&gt;let&lt;/code&gt;) and &lt;var&gt;function&lt;/var&gt; (in &lt;code&gt;pred&lt;/code&gt; and &lt;code&gt;app&lt;/code&gt;).</source>
          <target state="translated">要約すると、 &lt;var&gt;boolean-expression&lt;/var&gt; （ &lt;code&gt;guard&lt;/code&gt; 内）だけでなく、 &lt;var&gt;expr&lt;/var&gt; （ &lt;code&gt;let&lt;/code&gt; 内）および &lt;var&gt;function&lt;/var&gt; （ &lt;code&gt;pred&lt;/code&gt; および &lt;code&gt;app&lt;/code&gt; 内）でも、 &lt;var&gt;symbol&lt;/var&gt; パターンへの副作用のある参照を完全に回避するのが最善です。</target>
        </trans-unit>
        <trans-unit id="eaa50c326ee36f629d6843a550096a8a4fb28140" translate="yes" xml:space="preserve">
          <source>To summarize, &lt;code&gt;load&lt;/code&gt; normally first tries the suffixes in the value of &lt;code&gt;(get-load-suffixes)&lt;/code&gt; and then those in &lt;code&gt;load-file-rep-suffixes&lt;/code&gt;. If &lt;var&gt;nosuffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it skips the former group, and if &lt;var&gt;must-suffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it skips the latter group.</source>
          <target state="translated">要約すると、 &lt;code&gt;load&lt;/code&gt; は通常、最初に &lt;code&gt;(get-load-suffixes)&lt;/code&gt; の値のサフィックスを試し、次に &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; のサフィックスを試します。場合 &lt;var&gt;nosuffix&lt;/var&gt; が非で &lt;code&gt;nil&lt;/code&gt; のは、前者のグループをスキップし、あれば &lt;var&gt;must-suffix&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; のは、後者のグループをスキップします。</target>
        </trans-unit>
        <trans-unit id="22c4f6949c89bada70cd6b6e7099ad9bd8af7b67" translate="yes" xml:space="preserve">
          <source>To summarize, when you click a button and then press it again right away, Emacs generates a down event and a click event for the first click, a double-down event when you press the button again, and finally either a double-click or a double-drag event.</source>
          <target state="translated">要約すると、ボタンをクリックしてすぐにもう一度押すと、Emacsは最初のクリック時にダウンイベントとクリックイベントを発生させ、もう一度押すとダブルダウンイベントを発生させ、最後にダブルクリックイベントかダブルドラッグイベントのどちらかを発生させます。</target>
        </trans-unit>
        <trans-unit id="0259b7bf163bae7c35ad46edb62016a8f2722fab" translate="yes" xml:space="preserve">
          <source>To support programs with &amp;lsquo;</source>
          <target state="translated">'でプログラムをサポートするには</target>
        </trans-unit>
        <trans-unit id="bb43ee21f37f25de0e7c358b02b65048d8082204" translate="yes" xml:space="preserve">
          <source>To support this multitude of characters and scripts, Emacs closely follows the &lt;em&gt;Unicode Standard&lt;/em&gt;. The Unicode Standard assigns a unique number, called a &lt;em&gt;codepoint&lt;/em&gt;, to each and every character. The range of codepoints defined by Unicode, or the Unicode &lt;em&gt;codespace&lt;/em&gt;, is &lt;code&gt;0..#x10FFFF&lt;/code&gt; (in hexadecimal notation), inclusive. Emacs extends this range with codepoints in the range &lt;code&gt;#x110000..#x3FFFFF&lt;/code&gt;, which it uses for representing characters that are not unified with Unicode and &lt;em&gt;raw 8-bit bytes&lt;/em&gt; that cannot be interpreted as characters. Thus, a character codepoint in Emacs is a 22-bit integer.</source>
          <target state="translated">この多数の文字とスクリプトをサポートするために、Emacsは&lt;em&gt;Unicode標準に&lt;/em&gt;厳密に従ってい&lt;em&gt;ます&lt;/em&gt;。Unicode標準では、&lt;em&gt;コードポイント&lt;/em&gt;と呼ばれる一意の番号がすべての文字に割り当てられます。UnicodeまたはUnicodeコード&lt;em&gt;スペース&lt;/em&gt;で定義されたコードポイントの範囲は、 &lt;code&gt;0..#x10FFFF&lt;/code&gt; （16進表記）です。Emacsは、この範囲を &lt;code&gt;#x110000..#x3FFFFF&lt;/code&gt; 範囲のコードポイントで拡張します。これは、Unicodeと統合されていない文字、および文字として解釈できない&lt;em&gt;生の8ビットバイト&lt;/em&gt;を表すために使用されます。したがって、Emacsの文字コードポイントは22ビット整数です。</target>
        </trans-unit>
        <trans-unit id="16458f1bebc24520bce10ea3f0c1902c0ee010b9" translate="yes" xml:space="preserve">
          <source>To test for the availability of a given network feature, use &lt;code&gt;featurep&lt;/code&gt; like this:</source>
          <target state="translated">特定のネットワーク機能の可用性をテストするには、 &lt;code&gt;featurep&lt;/code&gt; ようなfeaturepを使用します。</target>
        </trans-unit>
        <trans-unit id="75c4c410d0f0be17ecc87dce7c1e6fb544adff14" translate="yes" xml:space="preserve">
          <source>To test for the availability of a given network option, use &lt;code&gt;featurep&lt;/code&gt; like this:</source>
          <target state="translated">特定のネットワークオプションの可用性をテストするには、 &lt;code&gt;featurep&lt;/code&gt; ようなfeaturepを使用します。</target>
        </trans-unit>
        <trans-unit id="79622a3cda2b3ecf6d318ecb9e2c46b512eaa7c4" translate="yes" xml:space="preserve">
          <source>To test numbers for numerical equality, you should normally use &lt;code&gt;=&lt;/code&gt; instead of non-numeric comparison predicates like &lt;code&gt;eq&lt;/code&gt;, &lt;code&gt;eql&lt;/code&gt; and &lt;code&gt;equal&lt;/code&gt;. Distinct floating-point and large integer objects can be numerically equal. If you use &lt;code&gt;eq&lt;/code&gt; to compare them, you test whether they are the same &lt;em&gt;object&lt;/em&gt;; if you use &lt;code&gt;eql&lt;/code&gt; or &lt;code&gt;equal&lt;/code&gt;, you test whether their values are &lt;em&gt;indistinguishable&lt;/em&gt;. In contrast, &lt;code&gt;=&lt;/code&gt; uses numeric comparison, and sometimes returns &lt;code&gt;t&lt;/code&gt; when a non-numeric comparison would return &lt;code&gt;nil&lt;/code&gt; and vice versa. See &lt;a href=&quot;float-basics#Float-Basics&quot;&gt;Float Basics&lt;/a&gt;.</source>
          <target state="translated">数値が等しいかどうかをテストするには、通常、 &lt;code&gt;eq&lt;/code&gt; 、 &lt;code&gt;eql&lt;/code&gt; 、 &lt;code&gt;equal&lt;/code&gt; などの数値以外の比較述語の代わりに &lt;code&gt;=&lt;/code&gt; を使用する必要があります。別個の浮動小数点オブジェクトと大きな整数オブジェクトは、数値的に等しくすることができます。 &lt;code&gt;eq&lt;/code&gt; を使用してそれらを比較する場合は、それらが同じ&lt;em&gt;オブジェクトである&lt;/em&gt;かどうかをテストし&lt;em&gt;ます&lt;/em&gt;。 &lt;code&gt;eql&lt;/code&gt; または &lt;code&gt;equal&lt;/code&gt; を使用する場合は、それらの値が&lt;em&gt;区別できない&lt;/em&gt;かどうかをテストします。対照的に、 &lt;code&gt;=&lt;/code&gt; は数値比較を使用し、非数値比較が &lt;code&gt;nil&lt;/code&gt; を返す場合、またはその逆の場合に &lt;code&gt;t&lt;/code&gt; を返すことがあります。&lt;a href=&quot;float-basics#Float-Basics&quot;&gt;FloatBasicsを&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58c9724eaae0dddeafa1103e3839ab337720bf8a" translate="yes" xml:space="preserve">
          <source>To test the signal handler, you can make Emacs send a signal to itself:</source>
          <target state="translated">シグナルハンドラをテストするには、Emacs自身にシグナルを送らせることができます。</target>
        </trans-unit>
        <trans-unit id="d541fd2770557362118e5f6c07a70dded650d464" translate="yes" xml:space="preserve">
          <source>To undefine a function name, use &lt;code&gt;fmakunbound&lt;/code&gt;. See &lt;a href=&quot;function-cells#Function-Cells&quot;&gt;Function Cells&lt;/a&gt;.</source>
          <target state="translated">関数名の定義を解除するには、 &lt;code&gt;fmakunbound&lt;/code&gt; を使用します。&lt;a href=&quot;function-cells#Function-Cells&quot;&gt;関数セルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="da06ea0a734ee2c2a7864dbf4ddd97a92368e782" translate="yes" xml:space="preserve">
          <source>To understand how &lt;code&gt;sort-subr&lt;/code&gt; works, consider the whole accessible portion of the buffer as being divided into disjoint pieces called &lt;em&gt;sort records&lt;/em&gt;. The records may or may not be contiguous, but they must not overlap. A portion of each sort record (perhaps all of it) is designated as the sort key. Sorting rearranges the records in order by their sort keys.</source>
          <target state="translated">&lt;code&gt;sort-subr&lt;/code&gt; がどのように機能するかを理解するために、バッファーのアクセス可能な部分全体が、&lt;em&gt;ソートレコード&lt;/em&gt;と呼ばれる互いに素な部分に分割されていると考えてください。レコードは連続している場合と隣接していない場合がありますが、重複してはなりません。各ソートレコードの一部（おそらくすべて）がソートキーとして指定されます。並べ替えでは、レコードが並べ替えキーの順に並べ替えられます。</target>
        </trans-unit>
        <trans-unit id="2369e9a9d2001c0a7353eb74acfb8413016b4bf3" translate="yes" xml:space="preserve">
          <source>To understand how symbols are created in GNU Emacs Lisp, you must know how Lisp reads them. Lisp must ensure that it finds the same symbol every time it reads the same set of characters. Failure to do so would cause complete confusion.</source>
          <target state="translated">GNU Emacs Lispでシンボルがどのように生成されるかを理解するためには、Lispがどのようにシンボルを読み取るかを知っておく必要があります。Lispは、同じ文字を読むたびに同じ記号を見つけるようにしなければなりません。これを怠ると、完全に混乱してしまいます。</target>
        </trans-unit>
        <trans-unit id="6e55e6461cd675fc80b5fee01f1ae446554533bf" translate="yes" xml:space="preserve">
          <source>To understand how various functions work on integers, especially the bitwise operators (see &lt;a href=&quot;bitwise-operations#Bitwise-Operations&quot;&gt;Bitwise Operations&lt;/a&gt;), it is often helpful to view the numbers in their binary form.</source>
          <target state="translated">整数、特にビット演算子（参照でどのように機能するかをさまざまな機能を理解するために&lt;a href=&quot;bitwise-operations#Bitwise-Operations&quot;&gt;ビット演算を&lt;/a&gt;）、多くの場合、彼らのバイナリ形式で数字を表示すると便利です。</target>
        </trans-unit>
        <trans-unit id="fc079681c4b65e6d90dd1e389536549bc9a768a7" translate="yes" xml:space="preserve">
          <source>To undo the remapping of a command, remap it to &lt;code&gt;nil&lt;/code&gt;; e.g.,</source>
          <target state="translated">コマンドの再マッピングを元に戻すには、コマンドを &lt;code&gt;nil&lt;/code&gt; に再マッピングします。例えば、</target>
        </trans-unit>
        <trans-unit id="29530c6c2dd76c8f54f545055dd1fd60f3663441" translate="yes" xml:space="preserve">
          <source>To use XBM format, specify &lt;code&gt;xbm&lt;/code&gt; as the image type. This image format doesn&amp;rsquo;t require an external library, so images of this type are always supported.</source>
          <target state="translated">XBM形式を使用するには、画像タイプとして &lt;code&gt;xbm&lt;/code&gt; を指定します。この画像形式は外部ライブラリを必要としないため、このタイプの画像は常にサポートされています。</target>
        </trans-unit>
        <trans-unit id="c90e5b4b810c083c043fa42260d8d7b68463ffba" translate="yes" xml:space="preserve">
          <source>To use XPM format, specify &lt;code&gt;xpm&lt;/code&gt; as the image type. The additional image property &lt;code&gt;:color-symbols&lt;/code&gt; is also meaningful with the &lt;code&gt;xpm&lt;/code&gt; image type:</source>
          <target state="translated">XPM形式を使用するには、イメージタイプとして &lt;code&gt;xpm&lt;/code&gt; を指定します。追加の画像プロパティ &lt;code&gt;:color-symbols&lt;/code&gt; は、 &lt;code&gt;xpm&lt;/code&gt; 画像タイプでも意味があります。</target>
        </trans-unit>
        <trans-unit id="3c24abd143422a8b29a6b56bb2ea32cea6354b1c" translate="yes" xml:space="preserve">
          <source>To use a generator function, first call it normally, producing a &lt;em&gt;iterator&lt;/em&gt; object. An iterator is a specific instance of a generator. Then use &lt;code&gt;iter-next&lt;/code&gt; to retrieve values from this iterator. When there are no more values to pull from an iterator, &lt;code&gt;iter-next&lt;/code&gt; raises an &lt;code&gt;iter-end-of-sequence&lt;/code&gt; condition with the iterator&amp;rsquo;s final value.</source>
          <target state="translated">ジェネレーター関数を使用するには、最初に通常どおり呼び出して、&lt;em&gt;イテレーター&lt;/em&gt;オブジェクトを生成し&lt;em&gt;ます&lt;/em&gt;。イテレータは、ジェネレータの特定のインスタンスです。次に、 &lt;code&gt;iter-next&lt;/code&gt; を使用して、このイテレータから値を取得します。イテレータからプルする値がなくなると、 &lt;code&gt;iter-next&lt;/code&gt; は、イテレータの最終値を使用して &lt;code&gt;iter-end-of-sequence&lt;/code&gt; 条件を発生させます。</target>
        </trans-unit>
        <trans-unit id="ea4124b3da5c67731463ccf1b3e77511f2d6c4b3" translate="yes" xml:space="preserve">
          <source>To use the change group, you must &lt;em&gt;activate&lt;/em&gt; it. You must do this before making any changes in the text of &lt;var&gt;buffer&lt;/var&gt;.</source>
          <target state="translated">変更グループを使用するには、変更グループを&lt;em&gt;アクティブ化&lt;/em&gt;する必要があります。 &lt;var&gt;buffer&lt;/var&gt; のテキストに変更を加える前に、これを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="366f54e2165c598704a8f316a19a801859e54301" translate="yes" xml:space="preserve">
          <source>To use this feature, pass a function as the &lt;var&gt;collection&lt;/var&gt; argument to &lt;code&gt;completing-read&lt;/code&gt;. The function &lt;code&gt;completing-read&lt;/code&gt; arranges to pass your completion function along to &lt;code&gt;try-completion&lt;/code&gt;, &lt;code&gt;all-completions&lt;/code&gt;, and other basic completion functions, which will then let your function do all the work.</source>
          <target state="translated">この機能を使用するには、関数を &lt;var&gt;collection&lt;/var&gt; 引数として &lt;code&gt;completing-read&lt;/code&gt; に渡します。関数 &lt;code&gt;completing-read&lt;/code&gt; は、完了関数を &lt;code&gt;try-completion&lt;/code&gt; 、 &lt;code&gt;all-completions&lt;/code&gt; 、およびその他の基本的な完了関数に渡すように調整します。これにより、関数にすべての作業を実行させることができます。</target>
        </trans-unit>
        <trans-unit id="2630b830cf5b0fb707be5f7aed3659fadcd107a1" translate="yes" xml:space="preserve">
          <source>To verify that these functions really are declared where &lt;code&gt;declare-function&lt;/code&gt; says they are, use &lt;code&gt;check-declare-file&lt;/code&gt; to check all &lt;code&gt;declare-function&lt;/code&gt; calls in one source file, or use &lt;code&gt;check-declare-directory&lt;/code&gt; check all the files in and under a certain directory.</source>
          <target state="translated">これらの関数が &lt;code&gt;declare-function&lt;/code&gt; で指定されている場所で実際に宣言されていることを確認するには、 &lt;code&gt;check-declare-file&lt;/code&gt; を使用して1つのソースファイル内のすべての &lt;code&gt;declare-function&lt;/code&gt; 呼び出しを &lt;code&gt;check-declare-directory&lt;/code&gt; か、check-declare-directoryを使用して特定のファイル内およびその下のすべてのファイルをチェックしますディレクトリ。</target>
        </trans-unit>
        <trans-unit id="c4710a8005674ec4cd23bafc0b4ef95b67bdfe13" translate="yes" xml:space="preserve">
          <source>To write Lisp code that modifies the buffer without causing deactivation of the mark at the end of the command, bind &lt;code&gt;deactivate-mark&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; around the code that does the modification. For example:</source>
          <target state="translated">コマンドの最後でマークを非アクティブ化せずにバッファを変更するLispコードを作成するには、変更を行うコードの周囲で &lt;code&gt;deactivate-mark&lt;/code&gt; を &lt;code&gt;nil&lt;/code&gt; にバインドします。例えば：</target>
        </trans-unit>
        <trans-unit id="cd2f963109c7e2979bbf2eb19a4b013eb5c8a86d" translate="yes" xml:space="preserve">
          <source>To write a repeat-until loop, which will execute something on each iteration and then do the end-test, put the body followed by the end-test in a &lt;code&gt;progn&lt;/code&gt; as the first argument of &lt;code&gt;while&lt;/code&gt;, as shown here:</source>
          <target state="translated">反復までのループの各反復で何かを実行して、エンド・テストを行います書き込むには、体が中エンドテストに続いて置く &lt;code&gt;progn&lt;/code&gt; の最初の引数として、 &lt;code&gt;while&lt;/code&gt; ここに示すように、：</target>
        </trans-unit>
        <trans-unit id="1ae25fb46929690898f12d07fcafa4a05f668f8b" translate="yes" xml:space="preserve">
          <source>Together with &lt;code&gt;funcall&lt;/code&gt;, described below, this function provides a means for invoking any Lisp-callable Emacs function, provided that its name is a pure</source>
          <target state="translated">以下で説明する &lt;code&gt;funcall&lt;/code&gt; とともに、この関数は、その名前が純粋であるという条件で、Lisp呼び出し可能なEmacs関数を呼び出すための手段を提供します。</target>
        </trans-unit>
        <trans-unit id="6a4f61ffb13cdb137768f45464d2daf99cde6986" translate="yes" xml:space="preserve">
          <source>Together, the argument &lt;var&gt;writable&lt;/var&gt; and the variable &lt;code&gt;window-persistent-parameters&lt;/code&gt; specify which window parameters are saved by this function. See &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;.</source>
          <target state="translated">一緒に、 &lt;var&gt;writable&lt;/var&gt; 引数と変数 &lt;code&gt;window-persistent-parameters&lt;/code&gt; parametersは、この関数によって保存されるウィンドウパラメーターを指定します。&lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;ウィンドウパラメータを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7605fce452fda76551ca8d398b1c77bfc7a07642" translate="yes" xml:space="preserve">
          <source>Toggle &lt;code&gt;print-circle&lt;/code&gt; for the frame at point.</source>
          <target state="translated">ポイントでフレームの &lt;code&gt;print-circle&lt;/code&gt; を切り替えます。</target>
        </trans-unit>
        <trans-unit id="7c55ef57de1f86b340adc1ae9978aed2694c6f99" translate="yes" xml:space="preserve">
          <source>Toggle &lt;code&gt;print-gensym&lt;/code&gt; for the frame at point.</source>
          <target state="translated">ポイントのフレームの &lt;code&gt;print-gensym&lt;/code&gt; を切り替えます。</target>
        </trans-unit>
        <trans-unit id="9bb33058d124e0b4f5e2ec57ad52470200037bf6" translate="yes" xml:space="preserve">
          <source>Toggle the display of local variables of the current stack frame.</source>
          <target state="translated">現在のスタックフレームのローカル変数の表示を切り替えます。</target>
        </trans-unit>
        <trans-unit id="834b5ba59f87addb15585289c12709f144fa44fe" translate="yes" xml:space="preserve">
          <source>Toggle whether Edebug saves and restores the outside window configuration (&lt;code&gt;edebug-toggle-save-windows&lt;/code&gt;).</source>
          <target state="translated">Edebugが外部ウィンドウ構成を保存および復元するかどうかを切り替えます（ &lt;code&gt;edebug-toggle-save-windows&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c597b48773c11ca5b60e2e19b4de6ca7d28619e4" translate="yes" xml:space="preserve">
          <source>Toggle whether to disable the breakpoint near point (&lt;code&gt;edebug-toggle-disable-breakpoint&lt;/code&gt;). This command is mostly useful if the breakpoint is conditional and it would take some work to recreate the condition.</source>
          <target state="translated">ポイント付近のブレークポイントを無効にするかどうかを &lt;code&gt;edebug-toggle-disable-breakpoint&lt;/code&gt; （edebug-toggle-disable-breakpoint）。このコマンドは、ブレークポイントが条件付きであり、条件を再作成するのに多少の作業が必要な場合に最も役立ちます。</target>
        </trans-unit>
        <trans-unit id="8cdb0b32730b410b96d6ace4a6845b0d689513ad" translate="yes" xml:space="preserve">
          <source>Tool Bar</source>
          <target state="translated">ツールバー</target>
        </trans-unit>
        <trans-unit id="a30c5a75556e7266b6a7a7426676a7295fee6d4e" translate="yes" xml:space="preserve">
          <source>Tool bars</source>
          <target state="translated">ツールバー</target>
        </trans-unit>
        <trans-unit id="f9b2611afc5ea6219aed5d32674f355502583ebc" translate="yes" xml:space="preserve">
          <source>Tools and tips for debugging Lisp programs.</source>
          <target state="translated">Lispプログラムをデバッグするためのツールとヒント。</target>
        </trans-unit>
        <trans-unit id="3b0bb3d1bfe1457152fb66a5bb31635d4f18e66e" translate="yes" xml:space="preserve">
          <source>Tooltip Mode is a minor mode that enables display of tooltips. Turning off this mode causes the tooltips be displayed in the echo area. On text-mode (a.k.a. &amp;ldquo;TTY&amp;rdquo;) frames, tooltips are always displayed in the echo area.</source>
          <target state="translated">ツールチップモードは、ツールチップの表示を可能にするマイナーモードです。このモードをオフにすると、ツールチップがエコー領域に表示されます。テキストモード（別名「TTY」）フレームでは、ツールチップは常にエコー領域に表示されます。</target>
        </trans-unit>
        <trans-unit id="a70afb07bb2c328f7ecbd8aac33d2f8f158ba719" translate="yes" xml:space="preserve">
          <source>Tooltip display in Emacs.</source>
          <target state="translated">Emacsでのツールチップ表示。</target>
        </trans-unit>
        <trans-unit id="45a025dbf80367ecabf2143f1cd73cb481a93960" translate="yes" xml:space="preserve">
          <source>Tooltips</source>
          <target state="translated">Tooltips</target>
        </trans-unit>
        <trans-unit id="6131f75d59fc6314da7da55138ad69d66f13396d" translate="yes" xml:space="preserve">
          <source>Tooltips are displayed in special frames called tooltip frames, which have their own frame parameters (see &lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;Frame Parameters&lt;/a&gt;). Unlike other frames, the default parameters for tooltip frames are stored in a special variable.</source>
          <target state="translated">ツールチップは、独自のフレームパラメータを持つツールチップフレームと呼ばれる特別なフレームに表示されます（&lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;フレームパラメータを&lt;/a&gt;参照）。他のフレームとは異なり、ツールチップフレームのデフォルトパラメータは特別な変数に保存されます。</target>
        </trans-unit>
        <trans-unit id="cae0435c41e816c24f0838fdf4e76c044c8b4e00" translate="yes" xml:space="preserve">
          <source>Top</source>
          <target state="translated">Top</target>
        </trans-unit>
        <trans-unit id="4522bd3f0018af8e5af764927a8ad9045a9902bf" translate="yes" xml:space="preserve">
          <source>Total heap size, in &lt;var&gt;unit-size&lt;/var&gt; units.</source>
          <target state="translated">合計ヒープサイズ（ &lt;var&gt;unit-size&lt;/var&gt; 単位）。</target>
        </trans-unit>
        <trans-unit id="3b454aaf9f48c5b83a0068be2bee977587791c2e" translate="yes" xml:space="preserve">
          <source>Trace Buffer</source>
          <target state="translated">トレースバッファ</target>
        </trans-unit>
        <trans-unit id="1965e014d48fda9cda201912038356860300b1e4" translate="yes" xml:space="preserve">
          <source>Trace slow or fast, stopping briefly at each stop point, or at each breakpoint.</source>
          <target state="translated">各停止点、または各休憩点で短く停止しながら、ゆっくりまたは速くトレースします。</target>
        </trans-unit>
        <trans-unit id="f0221846a6146b35e28b360caa4f87ee111c61da" translate="yes" xml:space="preserve">
          <source>Trace: pause (normally one second) at each Edebug stop point (&lt;code&gt;edebug-trace-mode&lt;/code&gt;).</source>
          <target state="translated">トレース：各Edebug停止ポイント（ &lt;code&gt;edebug-trace-mode&lt;/code&gt; ）で一時停止（通常は1秒）します。</target>
        </trans-unit>
        <trans-unit id="fd5b66d78a9aaf43b4e20b383511da4abfe465e6" translate="yes" xml:space="preserve">
          <source>Trailing garbage following expression</source>
          <target state="translated">式に続く後続のガーベジ</target>
        </trans-unit>
        <trans-unit id="b73db9e59eef72b8f146fa16407441bdbe6661b9" translate="yes" xml:space="preserve">
          <source>Transaction Queues</source>
          <target state="translated">トランザクションテール</target>
        </trans-unit>
        <trans-unit id="9025315f1f26097cf9461da7a71d143959b8ada8" translate="yes" xml:space="preserve">
          <source>Transaction queues are implemented by means of a filter function. See &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;.</source>
          <target state="translated">トランザクションキューは、フィルター機能を使用して実装されます。&lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;フィルタ機能を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cc8e0d8b57a0330d7f87c52c4f7b798a0ffbf9fd" translate="yes" xml:space="preserve">
          <source>Transaction-based communication with subprocesses.</source>
          <target state="translated">サブプロセスとのトランザクションベースの通信。</target>
        </trans-unit>
        <trans-unit id="5358cdd26e65ec3d1c3846e60fc713ece9e8add2" translate="yes" xml:space="preserve">
          <source>Transferring focus from a child frame to an ancestor that is not its parent by clicking with the mouse in a visible part of that ancestor&amp;rsquo;s window may fail with some window-systems. You may have to click into the direct parent&amp;rsquo;s window-system window first.</source>
          <target state="translated">一部のウィンドウシステムでは、祖先のウィンドウの表示されている部分でマウスをクリックして、子フレームから親ではない祖先にフォーカスを転送できない場合があります。最初に、直接の親のウィンドウシステムウィンドウをクリックする必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="f74140f05c439601037d62694ac18544a05778f6" translate="yes" xml:space="preserve">
          <source>Transferring text to and from other X clients.</source>
          <target state="translated">他のXクライアントとの間でテキストを転送する。</target>
        </trans-unit>
        <trans-unit id="e00a921183307d4af50564690b4a2589a590ab0f" translate="yes" xml:space="preserve">
          <source>Translate &lt;var&gt;rx-expr&lt;/var&gt; to a string regexp which is returned. If &lt;var&gt;no-group&lt;/var&gt; is absent or nil, bracket the result in a non-capturing group, &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;rx-expr&lt;/var&gt; を返される文字列regexpに変換します。場合 &lt;var&gt;no-group&lt;/var&gt; '、存在しないか、またはゼロ、ブラケット非捕捉グループでの結果ではありません</target>
        </trans-unit>
        <trans-unit id="dec78bb5fcd9d91b9206fcdbcd067bc1dcd27453" translate="yes" xml:space="preserve">
          <source>Translate the &lt;var&gt;rx-expr&lt;/var&gt;s to a string regexp, as if they were the body of a &lt;code&gt;(seq &amp;hellip;)&lt;/code&gt; form. The &lt;code&gt;rx&lt;/code&gt; macro expands to a string constant, or, if &lt;code&gt;literal&lt;/code&gt; or &lt;code&gt;regexp&lt;/code&gt; forms are used, a Lisp expression that evaluates to a string.</source>
          <target state="translated">&lt;var&gt;rx-expr&lt;/var&gt; を &lt;code&gt;(seq &amp;hellip;)&lt;/code&gt; 形式の本体であるかのように文字列regexpに変換します。 &lt;code&gt;rx&lt;/code&gt; マクロ文字列定数に展開され、又は、場合 &lt;code&gt;literal&lt;/code&gt; または &lt;code&gt;regexp&lt;/code&gt; 形式が使用され、Lispの式その文字列に評価されます。</target>
        </trans-unit>
        <trans-unit id="939fecf7f46173f3030b9d459d3e82dd172f6277" translate="yes" xml:space="preserve">
          <source>Translation keymaps have the same structure as other keymaps, but are used differently: they specify translations to make while reading key sequences, rather than bindings for complete key sequences. As each key sequence is read, it is checked against each translation keymap. If one of the translation keymaps binds &lt;var&gt;k&lt;/var&gt; to a vector &lt;var&gt;v&lt;/var&gt;, then whenever &lt;var&gt;k&lt;/var&gt; appears as a sub-sequence &lt;em&gt;anywhere&lt;/em&gt; in a key sequence, that sub-sequence is replaced with the events in &lt;var&gt;v&lt;/var&gt;.</source>
          <target state="translated">Translation keymaps have the same structure as other keymaps, but are used differently: they specify translations to make while reading key sequences, rather than bindings for complete key sequences. As each key sequence is read, it is checked against each translation keymap. If one of the translation keymaps binds &lt;var&gt;k&lt;/var&gt; to a vector &lt;var&gt;v&lt;/var&gt; , then whenever &lt;var&gt;k&lt;/var&gt; appears as a sub-sequence &lt;em&gt;anywhere&lt;/em&gt; in a key sequence, that sub-sequence is replaced with the events in &lt;var&gt;v&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="44f128eb05a4342acee3e0ccfddac11b3f06bbdf" translate="yes" xml:space="preserve">
          <source>Translation keymaps take effect only after Emacs has decoded the keyboard input (via the input coding system specified by &lt;code&gt;keyboard-coding-system&lt;/code&gt;). See &lt;a href=&quot;terminal-i_002fo-encoding#Terminal-I_002fO-Encoding&quot;&gt;Terminal I/O Encoding&lt;/a&gt;.</source>
          <target state="translated">Translation keymaps take effect only after Emacs has decoded the keyboard input (via the input coding system specified by &lt;code&gt;keyboard-coding-system&lt;/code&gt; ). See &lt;a href=&quot;terminal-i_002fo-encoding#Terminal-I_002fO-Encoding&quot;&gt;Terminal I/O Encoding&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bde9fd0ecd53c93a87e48d5606241921a50aebf9" translate="yes" xml:space="preserve">
          <source>Translation of Characters</source>
          <target state="translated">文字の翻訳</target>
        </trans-unit>
        <trans-unit id="476faea9dbdcc537fe988fec82715790ec252000" translate="yes" xml:space="preserve">
          <source>Translation tables are used for conversion.</source>
          <target state="translated">変換には翻訳テーブルを使用します。</target>
        </trans-unit>
        <trans-unit id="77714c800f2a0d01cd00c46410503f6e7f5c222d" translate="yes" xml:space="preserve">
          <source>Transposition of Text</source>
          <target state="translated">テキストの転置</target>
        </trans-unit>
        <trans-unit id="57baf272fcdf7e6813d05a0d4525ee0ba9c934ad" translate="yes" xml:space="preserve">
          <source>Trapping Errors</source>
          <target state="translated">トラッピングエラー</target>
        </trans-unit>
        <trans-unit id="8432711a6287d81e6dc0107d33da390800119952" translate="yes" xml:space="preserve">
          <source>Trapping errors with Edebug.</source>
          <target state="translated">Edebugでエラーをトラップする。</target>
        </trans-unit>
        <trans-unit id="3f6e9a5cb83002b8d8e4f89b225b1358f0baee53" translate="yes" xml:space="preserve">
          <source>Treat each other with respect</source>
          <target state="translated">お互いを尊重して接する</target>
        </trans-unit>
        <trans-unit id="0d94209a1de787a06dc2b518db5a26e50a92924c" translate="yes" xml:space="preserve">
          <source>Treating a byte sequence as unibyte or multi.</source>
          <target state="translated">バイト列をユニバイトまたはマルチバイトとして扱う。</target>
        </trans-unit>
        <trans-unit id="f68bae276652515d4de24b004e58e392d961d7b9" translate="yes" xml:space="preserve">
          <source>Trig, exponential and logarithmic functions.</source>
          <target state="translated">三角関数、指数関数、対数関数。</target>
        </trans-unit>
        <trans-unit id="bae275226ca95f5a2e345e5ae0bf461938409bba" translate="yes" xml:space="preserve">
          <source>Truenames</source>
          <target state="translated">Truenames</target>
        </trans-unit>
        <trans-unit id="59f6a9fc2fffb15b78c0b81473cdfd56174958cf" translate="yes" xml:space="preserve">
          <source>Truncation</source>
          <target state="translated">Truncation</target>
        </trans-unit>
        <trans-unit id="4f4ba6582c51838bdd028085a979c4e9964d63d8" translate="yes" xml:space="preserve">
          <source>Trying this with the new, modified form above in a configuration that does not show</source>
          <target state="translated">が表示されない設定で、上記の新しい修正されたフォームでこれを試してみます。</target>
        </trans-unit>
        <trans-unit id="87a8b6ec68b23732e7a1115a2e3fe743debb751e" translate="yes" xml:space="preserve">
          <source>Two Lisp objects are the same, as keys, if they are equal according to &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">Two Lisp objects are the same, as keys, if they are equal according to &lt;code&gt;equal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e3b64e804122785994f06558cf886f5f08edf64" translate="yes" xml:space="preserve">
          <source>Two alternatives: renaming the old file or copying it.</source>
          <target state="translated">古いファイルの名前を変更するか、コピーするかの2つの選択肢があります。</target>
        </trans-unit>
        <trans-unit id="900115902bb3ee3eacd450cde6022ead295d4b57" translate="yes" xml:space="preserve">
          <source>Two dashed lines with a 3D raised appearance.</source>
          <target state="translated">2本の破線で立体的に盛り上がっています。</target>
        </trans-unit>
        <trans-unit id="078c40a10f9782638729ef5c4fa93a5a757baf2c" translate="yes" xml:space="preserve">
          <source>Two dashed lines with a 3D sunken appearance.</source>
          <target state="translated">2本の破線で立体的に沈み込んだ外観。</target>
        </trans-unit>
        <trans-unit id="276e80b5a218e2e63286157ede2fef9ed3f62b00" translate="yes" xml:space="preserve">
          <source>Two distinct markers are considered &lt;code&gt;equal&lt;/code&gt; (even though not &lt;code&gt;eq&lt;/code&gt;) to each other if they have the same position and buffer, or if they both point nowhere.</source>
          <target state="translated">Two distinct markers are considered &lt;code&gt;equal&lt;/code&gt; (even though not &lt;code&gt;eq&lt;/code&gt; ) to each other if they have the same position and buffer, or if they both point nowhere.</target>
        </trans-unit>
        <trans-unit id="d1f7d0d088985dc7d823ec171ca809b396c7a10a" translate="yes" xml:space="preserve">
          <source>Two events of the same type are equivalent where key bindings are concerned; thus, they always run the same command. That does not necessarily mean they do the same things, however, as some commands look at the whole event to decide what to do. For example, some commands use the location of a mouse event to decide where in the buffer to act.</source>
          <target state="translated">同じタイプの2つのイベントは、キーバインドに関しては等価です。しかし、コマンドによってはイベント全体を見て何をするかを決めるものもあるため、必ずしも同じ動作をするとは限りません。例えば、いくつかのコマンドは、マウスイベントの位置を使ってバッファのどこで何をするかを決定します。</target>
        </trans-unit>
        <trans-unit id="b4781945d76820f5582c1252f5928ec31da5e039" translate="yes" xml:space="preserve">
          <source>Two functions are specifically provided for adding elements to &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; and removing elements from it.</source>
          <target state="translated">Two functions are specifically provided for adding elements to &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; and removing elements from it.</target>
        </trans-unit>
        <trans-unit id="09c677640ac11fca59db4aeaf6a01fa851a98022" translate="yes" xml:space="preserve">
          <source>Two functions modify lists that are the values of variables.</source>
          <target state="translated">2つの関数は、変数の値であるリストを修正します。</target>
        </trans-unit>
        <trans-unit id="64b110ffe33ad523c38c09aea216906feb5f0461" translate="yes" xml:space="preserve">
          <source>Two lines with a 3D raised appearance.</source>
          <target state="translated">立体的に盛り上がった2本のライン。</target>
        </trans-unit>
        <trans-unit id="a2d7be84e660c9fc4b82fde08bacf6b24faadb5f" translate="yes" xml:space="preserve">
          <source>Two lines with a 3D sunken appearance.</source>
          <target state="translated">立体的な沈み込みのある2本のライン。</target>
        </trans-unit>
        <trans-unit id="c06e2850d5b49bddb3395c2341d9d3e3816b11e2" translate="yes" xml:space="preserve">
          <source>Two other action functions are described in their proper sections&amp;mdash;&lt;code&gt;display-buffer-in-side-window&lt;/code&gt; (see &lt;a href=&quot;displaying-buffers-in-side-windows#Displaying-Buffers-in-Side-Windows&quot;&gt;Displaying Buffers in Side Windows&lt;/a&gt;) and &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;).</source>
          <target state="translated">Two other action functions are described in their proper sections&amp;mdash; &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; (see &lt;a href=&quot;displaying-buffers-in-side-windows#Displaying-Buffers-in-Side-Windows&quot;&gt;Displaying Buffers in Side Windows&lt;/a&gt;) and &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="95a90e7310bb1b6e635f813931f512d86ab08031" translate="yes" xml:space="preserve">
          <source>Two other constructs likewise evaluate a series of forms but return different values:</source>
          <target state="translated">他の 2 つの構造体も同様に一連のフォームを評価しますが、異なる値を返します。</target>
        </trans-unit>
        <trans-unit id="bdd6d7f1d69bc7abceb42a042e581e1002b8ba55" translate="yes" xml:space="preserve">
          <source>Two special theme names are disallowed (using them causes an error): &lt;code&gt;user&lt;/code&gt; is a dummy theme that stores the user&amp;rsquo;s direct customization settings, and &lt;code&gt;changed&lt;/code&gt; is a dummy theme that stores changes made outside of the Customize system.</source>
          <target state="translated">Two special theme names are disallowed (using them causes an error): &lt;code&gt;user&lt;/code&gt; is a dummy theme that stores the user&amp;rsquo;s direct customization settings, and &lt;code&gt;changed&lt;/code&gt; is a dummy theme that stores changes made outside of the Customize system.</target>
        </trans-unit>
        <trans-unit id="f6b8d7a1f84068dcc928473f4bb4df2868788137" translate="yes" xml:space="preserve">
          <source>Two structures (see</source>
          <target state="translated">2つの構造(</target>
        </trans-unit>
        <trans-unit id="4c02ddd9ae4a5e67609618883fb3b0c4bbb927de" translate="yes" xml:space="preserve">
          <source>Two symbols to avoid are &lt;code&gt;t&lt;/code&gt;, which behaves like &lt;code&gt;_&lt;/code&gt; (above) and is deprecated, and &lt;code&gt;nil&lt;/code&gt;, which signals an error. Likewise, it makes no sense to bind keyword symbols (see &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;).</source>
          <target state="translated">Two symbols to avoid are &lt;code&gt;t&lt;/code&gt; , which behaves like &lt;code&gt;_&lt;/code&gt; (above) and is deprecated, and &lt;code&gt;nil&lt;/code&gt; , which signals an error. Likewise, it makes no sense to bind keyword symbols (see &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="16985e22324ae4be5cd933afda373600250e566f" translate="yes" xml:space="preserve">
          <source>Two variables, &lt;code&gt;kept-old-versions&lt;/code&gt; and &lt;code&gt;kept-new-versions&lt;/code&gt;, determine which backup versions should be kept. This function keeps those versions by excluding them from the &lt;small&gt;CDR&lt;/small&gt; of the value. See &lt;a href=&quot;numbered-backups#Numbered-Backups&quot;&gt;Numbered Backups&lt;/a&gt;.</source>
          <target state="translated">Two variables, &lt;code&gt;kept-old-versions&lt;/code&gt; and &lt;code&gt;kept-new-versions&lt;/code&gt; , determine which backup versions should be kept. This function keeps those versions by excluding them from the &lt;small&gt;CDR&lt;/small&gt; of the value. See &lt;a href=&quot;numbered-backups#Numbered-Backups&quot;&gt;Numbered Backups&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fd2d7ad2a3cce3a9b95cfd11a8bcd35c7023c0f3" translate="yes" xml:space="preserve">
          <source>Two ways a marker can relocate when you insert where it points.</source>
          <target state="translated">マーカーが指し示す場所に挿入すると、マーカーが再配置される2つの方法。</target>
        </trans-unit>
        <trans-unit id="a59d7b7ab83add791ccaa6844d61e665eb13b934" translate="yes" xml:space="preserve">
          <source>Type Descriptors</source>
          <target state="translated">タイプ記述子</target>
        </trans-unit>
        <trans-unit id="115fb513abcf93f79ab99094dfb28657b17a527a" translate="yes" xml:space="preserve">
          <source>Type Keywords</source>
          <target state="translated">キーワードを入力してください。</target>
        </trans-unit>
        <trans-unit id="871ed8af7087eb9d57bbb752007d4585dcd2cca0" translate="yes" xml:space="preserve">
          <source>Type Predicates</source>
          <target state="translated">型述語</target>
        </trans-unit>
        <trans-unit id="b6bbb849584fc733097de838d310739c3cdb7cd2" translate="yes" xml:space="preserve">
          <source>Type Predicates for Numbers</source>
          <target state="translated">数値の型述語</target>
        </trans-unit>
        <trans-unit id="048b7bb2912e3402740f919c5dfbbdfb7a4761cb" translate="yes" xml:space="preserve">
          <source>Type alias: &lt;strong&gt;emacs_limb_t&lt;/strong&gt;</source>
          <target state="translated">Type alias: &lt;strong&gt;emacs_limb_t&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2bca6250f5a4bae7d8d26caddc5f558438c3e69" translate="yes" xml:space="preserve">
          <source>Types found in all Lisp systems.</source>
          <target state="translated">すべてのLispシステムで見られる型。</target>
        </trans-unit>
        <trans-unit id="592fd9a1b2a71f0d04b169ff7f60f6f55ae838dd" translate="yes" xml:space="preserve">
          <source>Types specific to Emacs.</source>
          <target state="translated">Emacs特有の型。</target>
        </trans-unit>
        <trans-unit id="d0833b0f443685c0ed11621e61c9b07b86c24e54" translate="yes" xml:space="preserve">
          <source>Typical values for &lt;var&gt;path&lt;/var&gt; are &lt;code&gt;exec-path&lt;/code&gt; (see &lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;Subprocess Creation&lt;/a&gt;) when looking for executable programs, or &lt;code&gt;load-path&lt;/code&gt; (see &lt;a href=&quot;library-search#Library-Search&quot;&gt;Library Search&lt;/a&gt;) when looking for Lisp files. If &lt;var&gt;filename&lt;/var&gt; is absolute, &lt;var&gt;path&lt;/var&gt; has no effect, but the suffixes in &lt;var&gt;suffixes&lt;/var&gt; are still tried.</source>
          <target state="translated">Typical values for &lt;var&gt;path&lt;/var&gt; are &lt;code&gt;exec-path&lt;/code&gt; (see &lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;Subprocess Creation&lt;/a&gt;) when looking for executable programs, or &lt;code&gt;load-path&lt;/code&gt; (see &lt;a href=&quot;library-search#Library-Search&quot;&gt;Library Search&lt;/a&gt;) when looking for Lisp files. If &lt;var&gt;filename&lt;/var&gt; is absolute, &lt;var&gt;path&lt;/var&gt; has no effect, but the suffixes in &lt;var&gt;suffixes&lt;/var&gt; are still tried.</target>
        </trans-unit>
        <trans-unit id="f5458a15564f1c431c22949b2b4273c2314398c0" translate="yes" xml:space="preserve">
          <source>Typically grave accent and apostrophe in the format translate to matching curved quotes, e.g.,</source>
          <target state="translated">一般的に、この形式では、重度のアクセントとアポストロフィは、一致する湾曲した引用符、例えば、に変換されます。</target>
        </trans-unit>
        <trans-unit id="d914284cca0cf58ff03339bd63ddccef1dba0681" translate="yes" xml:space="preserve">
          <source>Typically, &lt;var&gt;body&lt;/var&gt; rewrites the invoked pattern to use more basic patterns. Although all patterns eventually reduce to core patterns, &lt;code&gt;body&lt;/code&gt; need not use core patterns straight away. The following example defines two patterns, named &lt;code&gt;less-than&lt;/code&gt; and &lt;code&gt;integer-less-than&lt;/code&gt;.</source>
          <target state="translated">Typically, &lt;var&gt;body&lt;/var&gt; rewrites the invoked pattern to use more basic patterns. Although all patterns eventually reduce to core patterns, &lt;code&gt;body&lt;/code&gt; need not use core patterns straight away. The following example defines two patterns, named &lt;code&gt;less-than&lt;/code&gt; and &lt;code&gt;integer-less-than&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f86e865bcb97dcef7ef8622e26dcb3c0900725b1" translate="yes" xml:space="preserve">
          <source>Typically, grave accents and apostrophes are treated specially in documentation strings and diagnostic messages, and translate to matching single quotation marks (also called &amp;ldquo;curved quotes&amp;rdquo;). For example, the documentation string</source>
          <target state="translated">Typically, grave accents and apostrophes are treated specially in documentation strings and diagnostic messages, and translate to matching single quotation marks (also called &amp;ldquo;curved quotes&amp;rdquo;). For example, the documentation string</target>
        </trans-unit>
        <trans-unit id="46ca480785d69ee167efc4e08e708904c7e9a5cd" translate="yes" xml:space="preserve">
          <source>Typically, the display routines run by &lt;code&gt;display-buffer&lt;/code&gt; will set the &lt;code&gt;quit-restore&lt;/code&gt; window parameter correctly. It&amp;rsquo;s also possible to set it manually, using the following code for displaying &lt;var&gt;buffer&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;:</source>
          <target state="translated">Typically, the display routines run by &lt;code&gt;display-buffer&lt;/code&gt; will set the &lt;code&gt;quit-restore&lt;/code&gt; window parameter correctly. It&amp;rsquo;s also possible to set it manually, using the following code for displaying &lt;var&gt;buffer&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="bc066e01c03d97313b8c0f88f2923124a6ca0222" translate="yes" xml:space="preserve">
          <source>Typically, when you invoke &lt;code&gt;delq&lt;/code&gt;, you should use the return value by assigning it to the variable which held the original list. The reason for this is explained below.</source>
          <target state="translated">Typically, when you invoke &lt;code&gt;delq&lt;/code&gt; , you should use the return value by assigning it to the variable which held the original list. The reason for this is explained below.</target>
        </trans-unit>
        <trans-unit id="68436902c83b43b911b94e78cef30b2a838179e9" translate="yes" xml:space="preserve">
          <source>Typically, you define an ewoc with &lt;code&gt;ewoc-create&lt;/code&gt;, and then pass the resulting ewoc structure to other functions in the Ewoc package to build nodes within it, and display it in the buffer. Once it is displayed in the buffer, other functions determine the correspondence between buffer positions and nodes, move point from one node&amp;rsquo;s textual representation to another, and so forth. See &lt;a href=&quot;abstract-display-functions#Abstract-Display-Functions&quot;&gt;Abstract Display Functions&lt;/a&gt;.</source>
          <target state="translated">Typically, you define an ewoc with &lt;code&gt;ewoc-create&lt;/code&gt; , and then pass the resulting ewoc structure to other functions in the Ewoc package to build nodes within it, and display it in the buffer. Once it is displayed in the buffer, other functions determine the correspondence between buffer positions and nodes, move point from one node&amp;rsquo;s textual representation to another, and so forth. See &lt;a href=&quot;abstract-display-functions#Abstract-Display-Functions&quot;&gt;Abstract Display Functions&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5614fd83d7c12176ea9d23d0a9a55af15cb1297f" translate="yes" xml:space="preserve">
          <source>Typing</source>
          <target state="translated">Typing</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="d5bbff0823236d5bac754929f8481e9cb4c8d098" translate="yes" xml:space="preserve">
          <source>U+&lt;var&gt;10ffff&lt;/var&gt;</source>
          <target state="translated">U+&lt;var&gt;10ffff&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="e91bef77f8609fb9bf50d4fbfdf4276ec072a927" translate="yes" xml:space="preserve">
          <source>UBA</source>
          <target state="translated">UBA</target>
        </trans-unit>
        <trans-unit id="d3fc3161813ba3f0de61150b594950ca9e11b667" translate="yes" xml:space="preserve">
          <source>UCD</source>
          <target state="translated">UCD</target>
        </trans-unit>
        <trans-unit id="8118daf9c86a705bf6c301c185dc8d3b5d7d605a" translate="yes" xml:space="preserve">
          <source>UDP network connections.</source>
          <target state="translated">UDP ネットワーク接続。</target>
        </trans-unit>
        <trans-unit id="d946adf52a4783929f122d341b29ac0fe188371c" translate="yes" xml:space="preserve">
          <source>UID</source>
          <target state="translated">UID</target>
        </trans-unit>
        <trans-unit id="11a66854c0ed7fd7fbaf5a561663c5dc867c9f19" translate="yes" xml:space="preserve">
          <source>UP</source>
          <target state="translated">UP</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="29d0b50fb5f46ed9e73d295c4368c7e33419a958" translate="yes" xml:space="preserve">
          <source>Undefined color</source>
          <target state="translated">未定義の色</target>
        </trans-unit>
        <trans-unit id="9ebb1b34bc4bd2e2a22ba2788411fe72f978b3d9" translate="yes" xml:space="preserve">
          <source>Under Emacs Lisp&amp;rsquo;s default dynamic scoping rule (see &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;), the value cell stores the variable&amp;rsquo;s current (local or global) value. Note that an unassigned value cell is &lt;em&gt;not&lt;/em&gt; the same as having &lt;code&gt;nil&lt;/code&gt; in the value cell. The symbol &lt;code&gt;nil&lt;/code&gt; is a Lisp object and can be the value of a variable, just as any other object can be; but it is still a value. If a variable is void, trying to evaluate the variable signals a &lt;code&gt;void-variable&lt;/code&gt; error, instead of returning a value.</source>
          <target state="translated">Under Emacs Lisp&amp;rsquo;s default dynamic scoping rule (see &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;), the value cell stores the variable&amp;rsquo;s current (local or global) value. Note that an unassigned value cell is &lt;em&gt;not&lt;/em&gt; the same as having &lt;code&gt;nil&lt;/code&gt; in the value cell. The symbol &lt;code&gt;nil&lt;/code&gt; is a Lisp object and can be the value of a variable, just as any other object can be; but it is still a value. If a variable is void, trying to evaluate the variable signals a &lt;code&gt;void-variable&lt;/code&gt; error, instead of returning a value.</target>
        </trans-unit>
        <trans-unit id="0ec307772aa57918876ae8b715b7f379621b832f" translate="yes" xml:space="preserve">
          <source>Under X, Emacs uses the Motif window manager hints to turn off decorations. Some window managers may not honor these hints.</source>
          <target state="translated">X では、Emacs は Motif ウィンドウマネージャのヒントを使って装飾をオフにしています。ウィンドウマネージャによっては、これらのヒントに従わない場合があります。</target>
        </trans-unit>
        <trans-unit id="ed8dca9e818d8bcbdcca4662863fb8e87cf60ce5" translate="yes" xml:space="preserve">
          <source>Under dynamic binding, this macro effectively makes &lt;code&gt;lambda&lt;/code&gt; forms self-quoting: evaluating a form whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;lambda&lt;/code&gt; yields the form itself:</source>
          <target state="translated">Under dynamic binding, this macro effectively makes &lt;code&gt;lambda&lt;/code&gt; forms self-quoting: evaluating a form whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;lambda&lt;/code&gt; yields the form itself:</target>
        </trans-unit>
        <trans-unit id="ba85f5add6b67e44d47f7751fb0f3c82778ea03f" translate="yes" xml:space="preserve">
          <source>Under some circumstances, a command can use a minibuffer even if there is an active minibuffer; such a minibuffer is called a &lt;em&gt;recursive minibuffer&lt;/em&gt;. The first minibuffer is named &amp;lsquo;</source>
          <target state="translated">Under some circumstances, a command can use a minibuffer even if there is an active minibuffer; such a minibuffer is called a &lt;em&gt;recursive minibuffer&lt;/em&gt;. The first minibuffer is named &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="11b91dc369c91068c73dea6e6dc80ebad323e8f7" translate="yes" xml:space="preserve">
          <source>Under some circumstances, if the number of images in the cache grows too large, the actual eviction delay may be shorter than this.</source>
          <target state="translated">いくつかの状況下では、キャッシュ内の画像の数が大きくなりすぎると、実際の退避遅延はこれよりも短くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="11eded0aaaba20c27a228c4aa613b3399f7491e9" translate="yes" xml:space="preserve">
          <source>Under the hood, there are two kinds of integers&amp;mdash;small integers, called &lt;em&gt;fixnums&lt;/em&gt;, and large integers, called &lt;em&gt;bignums&lt;/em&gt;.</source>
          <target state="translated">Under the hood, there are two kinds of integers&amp;mdash;small integers, called &lt;em&gt;fixnums&lt;/em&gt;, and large integers, called &lt;em&gt;bignums&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="c9739fdf443679c0e0ff4f5e723c1c33accba182" translate="yes" xml:space="preserve">
          <source>Under the optional lexical scoping rule, the value cell only holds the variable&amp;rsquo;s global value&amp;mdash;the value outside of any lexical binding construct. When a variable is lexically bound, the local value is determined by the lexical environment; hence, variables can have local values even if their symbols&amp;rsquo; value cells are unassigned.</source>
          <target state="translated">Under the optional lexical scoping rule, the value cell only holds the variable&amp;rsquo;s global value&amp;mdash;the value outside of any lexical binding construct. When a variable is lexically bound, the local value is determined by the lexical environment; hence, variables can have local values even if their symbols&amp;rsquo; value cells are unassigned.</target>
        </trans-unit>
        <trans-unit id="1a644237b01fa721b77c11c234b4a6fc40fe1486" translate="yes" xml:space="preserve">
          <source>Under very special circumstances, you may want to disable multibyte character support, for a specific buffer. When multibyte characters are disabled in a buffer, we call that &lt;em&gt;unibyte mode&lt;/em&gt;. In unibyte mode, each character in the buffer has a character code ranging from 0 through 255 (0377 octal); 0 through 127 (0177 octal) represent</source>
          <target state="translated">Under very special circumstances, you may want to disable multibyte character support, for a specific buffer. When multibyte characters are disabled in a buffer, we call that &lt;em&gt;unibyte mode&lt;/em&gt;. In unibyte mode, each character in the buffer has a character code ranging from 0 through 255 (0377 octal); 0 through 127 (0177 octal) represent</target>
        </trans-unit>
        <trans-unit id="b47a9ddd69070e836e8773962db03c7cf5ab2f52" translate="yes" xml:space="preserve">
          <source>Underline in color &lt;var&gt;color&lt;/var&gt;, a string specifying a color.</source>
          <target state="translated">Underline in color &lt;var&gt;color&lt;/var&gt; , a string specifying a color.</target>
        </trans-unit>
        <trans-unit id="816d0b4131241274c853cf7d9142c8a9aae7d264" translate="yes" xml:space="preserve">
          <source>Underline with the foreground color of the face.</source>
          <target state="translated">顔の前景色で下線を引く。</target>
        </trans-unit>
        <trans-unit id="39fc72124884d6573e4f9f89585f071ed0782696" translate="yes" xml:space="preserve">
          <source>Undo</source>
          <target state="translated">Undo</target>
        </trans-unit>
        <trans-unit id="281d39d3bc1033bb4c97a2b3ba9b214c5be68783" translate="yes" xml:space="preserve">
          <source>Undo all replacements and move back to the place where the first replacement was performed.</source>
          <target state="translated">すべての置換を元に戻し、最初の置換が行われた場所に移動します。</target>
        </trans-unit>
        <trans-unit id="7b894fcdc32b3ad81a6057bebf7ecb31dc5b3a0c" translate="yes" xml:space="preserve">
          <source>Undo last replacement and move back to the place where that replacement was performed.</source>
          <target state="translated">最後の交換を元に戻し、その交換が行われた場所に移動します。</target>
        </trans-unit>
        <trans-unit id="d2d0acddfb8713f6b7ec382e14a11ccf344c2f5d" translate="yes" xml:space="preserve">
          <source>Undoing changes to the text of a buffer.</source>
          <target state="translated">バッファのテキストの変更を元に戻す。</target>
        </trans-unit>
        <trans-unit id="e0bee459f00570042ea5b5eaadd4bbcfcbf90743" translate="yes" xml:space="preserve">
          <source>Unfortunately, this fix introduces another problem, described in the following section.</source>
          <target state="translated">残念ながら、この修正は次のセクションで説明する別の問題を導入しています。</target>
        </trans-unit>
        <trans-unit id="e31b09d65668ba63cf629464412a4848c6cd08d8" translate="yes" xml:space="preserve">
          <source>Unfortunately, this sometimes causes confusion, because some people tend to think in terms of the opposite convention: they imagine the window moving over text that remains in place, so that &amp;ldquo;down&amp;rdquo; commands take you to the end of the buffer. This convention is consistent with fact that such a command is bound to a key named</source>
          <target state="translated">Unfortunately, this sometimes causes confusion, because some people tend to think in terms of the opposite convention: they imagine the window moving over text that remains in place, so that &amp;ldquo;down&amp;rdquo; commands take you to the end of the buffer. This convention is consistent with fact that such a command is bound to a key named</target>
        </trans-unit>
        <trans-unit id="6d237f1ecdfe656324056d6b62508d4bf63e1755" translate="yes" xml:space="preserve">
          <source>Unless &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function only deletes the file if it was written by the current Emacs session since the last true save.</source>
          <target state="translated">Unless &lt;var&gt;force&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , this function only deletes the file if it was written by the current Emacs session since the last true save.</target>
        </trans-unit>
        <trans-unit id="5826c784a9257af0c0f1eb6514a59ac26452a236" translate="yes" xml:space="preserve">
          <source>Unless &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function refuses to make &lt;var&gt;frame&lt;/var&gt; invisible if all other frames are invisible.</source>
          <target state="translated">Unless &lt;var&gt;force&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , this function refuses to make &lt;var&gt;frame&lt;/var&gt; invisible if all other frames are invisible.</target>
        </trans-unit>
        <trans-unit id="ed50acf3c1d6d3ce1772be7e3dbd15d882d5dd0a" translate="yes" xml:space="preserve">
          <source>Unless &lt;var&gt;symbol&lt;/var&gt; is marked as risky (i.e., it has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;risky-local-variable&lt;/code&gt; property), all text properties specified in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value are ignored. This includes the text properties of strings in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value, as well as all &lt;code&gt;:eval&lt;/code&gt; and &lt;code&gt;:propertize&lt;/code&gt; forms in it. (The reason for this is security: non-risky variables could be set automatically from file variables without prompting the user.)</source>
          <target state="translated">Unless &lt;var&gt;symbol&lt;/var&gt; is marked as risky (i.e., it has a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;risky-local-variable&lt;/code&gt; property), all text properties specified in &lt;var&gt;symbol&lt;/var&gt; &amp;rsquo;s value are ignored. This includes the text properties of strings in &lt;var&gt;symbol&lt;/var&gt; &amp;rsquo;s value, as well as all &lt;code&gt;:eval&lt;/code&gt; and &lt;code&gt;:propertize&lt;/code&gt; forms in it. (The reason for this is security: non-risky variables could be set automatically from file variables without prompting the user.)</target>
        </trans-unit>
        <trans-unit id="c3f7337161f1704f9af17cc57bd41d608e24679e" translate="yes" xml:space="preserve">
          <source>Unless there is a very good reason to prefer &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;, it is usually preferable to mark operators as associative, using &lt;code&gt;assoc&lt;/code&gt;. For that reason &lt;code&gt;&quot;+&quot;&lt;/code&gt; and &lt;code&gt;&quot;*&quot;&lt;/code&gt; are defined above as &lt;code&gt;assoc&lt;/code&gt;, although the language defines them formally as left associative.</source>
          <target state="translated">Unless there is a very good reason to prefer &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt; , it is usually preferable to mark operators as associative, using &lt;code&gt;assoc&lt;/code&gt; . For that reason &lt;code&gt;&quot;+&quot;&lt;/code&gt; and &lt;code&gt;&quot;*&quot;&lt;/code&gt; are defined above as &lt;code&gt;assoc&lt;/code&gt; , although the language defines them formally as left associative.</target>
        </trans-unit>
        <trans-unit id="cd3fc851b5c5995784a99ba41df02359a405266e" translate="yes" xml:space="preserve">
          <source>Unless you start Emacs with the</source>
          <target state="translated">でEmacsを起動しない限り</target>
        </trans-unit>
        <trans-unit id="0d6a87b2e11856ded731eaa5449bda0617f91c77" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;mod&lt;/code&gt; permits floating-point arguments; it rounds the quotient downward (towards minus infinity) to an integer, and uses that quotient to compute the remainder.</source>
          <target state="translated">Unlike &lt;code&gt;%&lt;/code&gt; , &lt;code&gt;mod&lt;/code&gt; permits floating-point arguments; it rounds the quotient downward (towards minus infinity) to an integer, and uses that quotient to compute the remainder.</target>
        </trans-unit>
        <trans-unit id="d8bb808b59c029dcccf366b325ed96c4c8aa345d" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;format&lt;/code&gt;, which assigns specific meanings to a fixed set of specification characters, &lt;code&gt;format-spec&lt;/code&gt; accepts arbitrary specification characters and treats them all equally. For example:</source>
          <target state="translated">Unlike &lt;code&gt;format&lt;/code&gt; , which assigns specific meanings to a fixed set of specification characters, &lt;code&gt;format-spec&lt;/code&gt; accepts arbitrary specification characters and treats them all equally. For example:</target>
        </trans-unit>
        <trans-unit id="a6cf67239e5b30fc7b19173ff18498cd7ce1c68a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;functionp&lt;/code&gt;, the next three functions do &lt;em&gt;not&lt;/em&gt; treat a symbol as its function definition.</source>
          <target state="translated">Unlike &lt;code&gt;functionp&lt;/code&gt; , the next three functions do &lt;em&gt;not&lt;/em&gt; treat a symbol as its function definition.</target>
        </trans-unit>
        <trans-unit id="fbe5ba18622c8386029b3b94e1482dcf799ecf8e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;module-load&lt;/code&gt; doesn&amp;rsquo;t record the module in &lt;code&gt;load-history&lt;/code&gt;, doesn&amp;rsquo;t print any messages, and doesn&amp;rsquo;t protect against recursive loads. Most users should therefore use &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;load-file&lt;/code&gt;, &lt;code&gt;load-library&lt;/code&gt;, or &lt;code&gt;require&lt;/code&gt; instead of &lt;code&gt;module-load&lt;/code&gt;.</source>
          <target state="translated">Unlike &lt;code&gt;load&lt;/code&gt; , &lt;code&gt;module-load&lt;/code&gt; doesn&amp;rsquo;t record the module in &lt;code&gt;load-history&lt;/code&gt; , doesn&amp;rsquo;t print any messages, and doesn&amp;rsquo;t protect against recursive loads. Most users should therefore use &lt;code&gt;load&lt;/code&gt; , &lt;code&gt;load-file&lt;/code&gt; , &lt;code&gt;load-library&lt;/code&gt; , or &lt;code&gt;require&lt;/code&gt; instead of &lt;code&gt;module-load&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="050d0f6ebf1d3c5888f57236e32c18d5f3ebd92e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;pcase-let&lt;/code&gt;, but similarly to &lt;code&gt;let*&lt;/code&gt;, each &lt;var&gt;exp&lt;/var&gt; is matched against its corresponding &lt;var&gt;pattern&lt;/var&gt; before processing the next element of &lt;var&gt;bindings&lt;/var&gt;, so the variable bindings introduced in each one of the &lt;var&gt;bindings&lt;/var&gt; are available in the &lt;var&gt;exp&lt;/var&gt;s of the &lt;var&gt;bindings&lt;/var&gt; that follow it, additionally to being available in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">Unlike &lt;code&gt;pcase-let&lt;/code&gt; , but similarly to &lt;code&gt;let*&lt;/code&gt; , each &lt;var&gt;exp&lt;/var&gt; is matched against its corresponding &lt;var&gt;pattern&lt;/var&gt; before processing the next element of &lt;var&gt;bindings&lt;/var&gt; , so the variable bindings introduced in each one of the &lt;var&gt;bindings&lt;/var&gt; are available in the &lt;var&gt;exp&lt;/var&gt; s of the &lt;var&gt;bindings&lt;/var&gt; that follow it, additionally to being available in &lt;var&gt;body&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3bf0d69557efdc7fd270f0f047fffdb2efe2201b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;read-key-sequence&lt;/code&gt;, this function does not modify the specified events in ways that discard information (see &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Key Sequence Input&lt;/a&gt;). In particular, it does not convert letters to lower case and it does not change drag events to clicks.</source>
          <target state="translated">Unlike &lt;code&gt;read-key-sequence&lt;/code&gt; , this function does not modify the specified events in ways that discard information (see &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Key Sequence Input&lt;/a&gt;). In particular, it does not convert letters to lower case and it does not change drag events to clicks.</target>
        </trans-unit>
        <trans-unit id="40ee735c829abf5224229748444b930045adae65" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;window-body-width&lt;/code&gt;, this function accounts for the actual size of &lt;var&gt;face&lt;/var&gt;&amp;rsquo;s font, instead of working in units of the canonical character width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). It also accounts for space used by the continuation glyph, if &lt;var&gt;window&lt;/var&gt; lacks one or both of its fringes.</source>
          <target state="translated">Unlike &lt;code&gt;window-body-width&lt;/code&gt; , this function accounts for the actual size of &lt;var&gt;face&lt;/var&gt; &amp;rsquo;s font, instead of working in units of the canonical character width of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s frame (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). It also accounts for space used by the continuation glyph, if &lt;var&gt;window&lt;/var&gt; lacks one or both of its fringes.</target>
        </trans-unit>
        <trans-unit id="e59462d4b500be2d6de3f19f9797422c88586dfe" translate="yes" xml:space="preserve">
          <source>Unlike X windows, Emacs windows are &lt;em&gt;tiled&lt;/em&gt;; they never overlap within the area of the frame. When a window is created, resized, or deleted, the change in window space is taken from or given to the adjacent windows, so that the total area of the frame is unchanged.</source>
          <target state="translated">Unlike X windows, Emacs windows are &lt;em&gt;tiled&lt;/em&gt;; they never overlap within the area of the frame. When a window is created, resized, or deleted, the change in window space is taken from or given to the adjacent windows, so that the total area of the frame is unchanged.</target>
        </trans-unit>
        <trans-unit id="bfbfd1f29164e78b4210b38e600ffb42ab7d02bf" translate="yes" xml:space="preserve">
          <source>Unlike most minor modes, there is no &lt;code&gt;auto-save-mode&lt;/code&gt; variable. Auto Save mode is enabled if &lt;code&gt;buffer-auto-save-file-name&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;buffer-saved-size&lt;/code&gt; (see below) is non-zero.</source>
          <target state="translated">Unlike most minor modes, there is no &lt;code&gt;auto-save-mode&lt;/code&gt; variable. Auto Save mode is enabled if &lt;code&gt;buffer-auto-save-file-name&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;buffer-saved-size&lt;/code&gt; (see below) is non-zero.</target>
        </trans-unit>
        <trans-unit id="ae59e03f00d2a8a0d7adc3d6f352735a53eb1ba0" translate="yes" xml:space="preserve">
          <source>Unlike with other similar hooks, when Emacs calls these functions, &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; get bound to non-&lt;code&gt;nil&lt;/code&gt;. If the functions modify the buffer, you should consider binding this variable to non-&lt;code&gt;nil&lt;/code&gt; to prevent any buffer changes running the change hooks. Otherwise, you must be prepared for recursive calls. See &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;.</source>
          <target state="translated">Unlike with other similar hooks, when Emacs calls these functions, &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; get bound to non- &lt;code&gt;nil&lt;/code&gt; . If the functions modify the buffer, you should consider binding this variable to non- &lt;code&gt;nil&lt;/code&gt; to prevent any buffer changes running the change hooks. Otherwise, you must be prepared for recursive calls. See &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b0dd9a8036a712c8a1d9b9ebb330912c29faad7f" translate="yes" xml:space="preserve">
          <source>Unloading</source>
          <target state="translated">Unloading</target>
        </trans-unit>
        <trans-unit id="169daf44b90db9844104deace7c2d65b96ca84a7" translate="yes" xml:space="preserve">
          <source>Unpack/pack this field according to the type specification &lt;var&gt;type&lt;/var&gt;.</source>
          <target state="translated">Unpack/pack this field according to the type specification &lt;var&gt;type&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5944c4e306b00ce4acba6e0c05e4d28fb5eccbaf" translate="yes" xml:space="preserve">
          <source>Unset any breakpoints in the current form (&lt;code&gt;edebug-unset-breakpoints&lt;/code&gt;).</source>
          <target state="translated">Unset any breakpoints in the current form ( &lt;code&gt;edebug-unset-breakpoints&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="42357abaaff65af9bf691adce20cfa004bd2fbd6" translate="yes" xml:space="preserve">
          <source>Unset the breakpoint (if any) at the stop point at or after point (&lt;code&gt;edebug-unset-breakpoint&lt;/code&gt;).</source>
          <target state="translated">Unset the breakpoint (if any) at the stop point at or after point ( &lt;code&gt;edebug-unset-breakpoint&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1abd54e069ad62b6a851c7507133d2798043f0cc" translate="yes" xml:space="preserve">
          <source>Unsigned byte, with length 1.</source>
          <target state="translated">符号なしのバイトで、長さは1です。</target>
        </trans-unit>
        <trans-unit id="7a58f2c59f09e32940adaa60f399e8f16efaca5d" translate="yes" xml:space="preserve">
          <source>Unsigned integer in little endian order, with length 2, 3 and 4, respectively.</source>
          <target state="translated">リトルエンディアン順の符号なし整数で、長さはそれぞれ2、3、4です。</target>
        </trans-unit>
        <trans-unit id="efce86b9c675e2105ba635bfd05c044cd1416dfc" translate="yes" xml:space="preserve">
          <source>Unsigned integer in network byte order, with length 2.</source>
          <target state="translated">ネットワークバイト順の符号なし整数で、長さは2です。</target>
        </trans-unit>
        <trans-unit id="cdc58b621424ac5c9f159d2a34ccb08ff1c15724" translate="yes" xml:space="preserve">
          <source>Unsigned integer in network byte order, with length 3.</source>
          <target state="translated">ネットワークバイト順の符号なし整数で、長さは3です。</target>
        </trans-unit>
        <trans-unit id="fa42938e718c4e082432b53be6b2d37849b80c45" translate="yes" xml:space="preserve">
          <source>Unsigned integer in network byte order, with length 4. Note: These values may be limited by Emacs&amp;rsquo;s integer implementation limits.</source>
          <target state="translated">Unsigned integer in network byte order, with length 4. Note: These values may be limited by Emacs&amp;rsquo;s integer implementation limits.</target>
        </trans-unit>
        <trans-unit id="6de3a7bbeb0d0f3a3acd1346d1f7d9a305cda13c" translate="yes" xml:space="preserve">
          <source>Up to reordering, the resulting regexp of &lt;code&gt;regexp-opt&lt;/code&gt; is equivalent to but usually more efficient than that of a simplified version:</source>
          <target state="translated">Up to reordering, the resulting regexp of &lt;code&gt;regexp-opt&lt;/code&gt; is equivalent to but usually more efficient than that of a simplified version:</target>
        </trans-unit>
        <trans-unit id="8247becf9ac6653a02a39777ce74cbe014920503" translate="yes" xml:space="preserve">
          <source>Update the list of threads and their statuses.</source>
          <target state="translated">スレッドの一覧とステータスを更新します。</target>
        </trans-unit>
        <trans-unit id="0611993c1afe354549b1d86771c424e02f72189c" translate="yes" xml:space="preserve">
          <source>Upon reading, each object inside the parentheses becomes an element of the list. That is, a cons cell is made for each element. The &lt;small&gt;CAR&lt;/small&gt; slot of the cons cell holds the element, and its &lt;small&gt;CDR&lt;/small&gt; slot refers to the next cons cell of the list, which holds the next element in the list. The &lt;small&gt;CDR&lt;/small&gt; slot of the last cons cell is set to hold &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Upon reading, each object inside the parentheses becomes an element of the list. That is, a cons cell is made for each element. The &lt;small&gt;CAR&lt;/small&gt; slot of the cons cell holds the element, and its &lt;small&gt;CDR&lt;/small&gt; slot refers to the next cons cell of the list, which holds the next element in the list. The &lt;small&gt;CDR&lt;/small&gt; slot of the last cons cell is set to hold &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d144995a54b686ad33ed928d9139095bb3a1b891" translate="yes" xml:space="preserve">
          <source>Upper-case format sequences produce the units in addition to the numbers, lower-case formats produce only the numbers.</source>
          <target state="translated">大文字形式のシーケンスは数字に加えて単位を生成し、小文字形式は数字のみを生成します。</target>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Use</target>
        </trans-unit>
        <trans-unit id="dce40f834de5af3d15d079c90384193566a0f882" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;=&lt;/code&gt; before an object to label it for later reference; subsequently, you can use &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;#&lt;/code&gt; to refer the same object in another place. Here, &lt;var&gt;n&lt;/var&gt; is some integer. For example, here is how to make a list in which the first element recurs as the third element:</source>
          <target state="translated">Use &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;=&lt;/code&gt; before an object to label it for later reference; subsequently, you can use &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;#&lt;/code&gt; to refer the same object in another place. Here, &lt;var&gt;n&lt;/var&gt; is some integer. For example, here is how to make a list in which the first element recurs as the third element:</target>
        </trans-unit>
        <trans-unit id="ccffc72e351b0553a988e650238e8c1469d03ca7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;:group &lt;var&gt;group&lt;/var&gt;&lt;/code&gt; in &lt;var&gt;keyword-args&lt;/var&gt; to specify the custom group for the mode variable of the global minor mode.</source>
          <target state="translated">Use &lt;code&gt;:group &lt;var&gt;group&lt;/var&gt;&lt;/code&gt; in &lt;var&gt;keyword-args&lt;/var&gt; to specify the custom group for the mode variable of the global minor mode.</target>
        </trans-unit>
        <trans-unit id="7fd388e2d50e3c627cb73d3dd1f0e9147989998b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;aref&lt;/code&gt; (see &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;) to get the raw syntax descriptor of a character, e.g. &lt;code&gt;(aref&amp;nbsp;(syntax-table)&amp;nbsp;ch)&lt;/code&gt;.</source>
          <target state="translated">Use &lt;code&gt;aref&lt;/code&gt; (see &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;) to get the raw syntax descriptor of a character, e.g. &lt;code&gt;(aref&amp;nbsp;(syntax-table)&amp;nbsp;ch)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97f5bc88905c68246d63968fb55583b4c0401b5b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;nil&lt;/code&gt; as the first of the &lt;var&gt;debugger-args&lt;/var&gt; when you want to enter the debugger explicitly. The rest of the &lt;var&gt;debugger-args&lt;/var&gt; are printed on the top line of the buffer. You can use this feature to display messages&amp;mdash;for example, to remind yourself of the conditions under which &lt;code&gt;debug&lt;/code&gt; is called.</source>
          <target state="translated">Use &lt;code&gt;nil&lt;/code&gt; as the first of the &lt;var&gt;debugger-args&lt;/var&gt; when you want to enter the debugger explicitly. The rest of the &lt;var&gt;debugger-args&lt;/var&gt; are printed on the top line of the buffer. You can use this feature to display messages&amp;mdash;for example, to remind yourself of the conditions under which &lt;code&gt;debug&lt;/code&gt; is called.</target>
        </trans-unit>
        <trans-unit id="0956088b61a3b050e1ce95a50a000de591b2a084" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sleep-for&lt;/code&gt; when you wish to guarantee a delay.</source>
          <target state="translated">Use &lt;code&gt;sleep-for&lt;/code&gt; when you wish to guarantee a delay.</target>
        </trans-unit>
        <trans-unit id="95289ce6217988d0cb02f420011f6eb1c1819184" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;buffer&lt;/var&gt; as the process buffer.</source>
          <target state="translated">Use &lt;var&gt;buffer&lt;/var&gt; as the process buffer.</target>
        </trans-unit>
        <trans-unit id="b4d4613860b33fc7e36026b575b43d5abf76f8ad" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;buffer&lt;/var&gt; as the process buffer. If the value is &lt;code&gt;nil&lt;/code&gt;, the subprocess is not associated with any buffer.</source>
          <target state="translated">Use &lt;var&gt;buffer&lt;/var&gt; as the process buffer. If the value is &lt;code&gt;nil&lt;/code&gt; , the subprocess is not associated with any buffer.</target>
        </trans-unit>
        <trans-unit id="ae0796dcc8e3e6384925cf1d83afc1011c2029ac" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;coding&lt;/var&gt; as the coding system for this process. To specify different coding systems for decoding data from the connection and for encoding data sent to it, specify &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt; .
&lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt; for &lt;var&gt;coding&lt;/var&gt;.</source>
          <target state="translated">Use &lt;var&gt;coding&lt;/var&gt; as the coding system for this process. To specify different coding systems for decoding data from the connection and for encoding data sent to it, specify &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt; . &lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt; for &lt;var&gt;coding&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5de94f1a819715bbebc572fc610f1b1589d72d68" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;command&lt;/var&gt; as the command line of the process. The value should be a list starting with the program&amp;rsquo;s executable file name, followed by strings to give to the program as its arguments. If the first element of the list is &lt;code&gt;nil&lt;/code&gt;, Emacs opens a new pseudoterminal (pty) and associates its input and output with &lt;var&gt;buffer&lt;/var&gt;, without actually running any program; the rest of the list elements are ignored in that case.</source>
          <target state="translated">Use &lt;var&gt;command&lt;/var&gt; as the command line of the process. The value should be a list starting with the program&amp;rsquo;s executable file name, followed by strings to give to the program as its arguments. If the first element of the list is &lt;code&gt;nil&lt;/code&gt; , Emacs opens a new pseudoterminal (pty) and associates its input and output with &lt;var&gt;buffer&lt;/var&gt; , without actually running any program; the rest of the list elements are ignored in that case.</target>
        </trans-unit>
        <trans-unit id="18aee7a37cad775c5df86383a5963752bd15dbd0" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;criteria&lt;/var&gt; to match possible values. This is used only in &lt;code&gt;restricted-sexp&lt;/code&gt;.</source>
          <target state="translated">Use &lt;var&gt;criteria&lt;/var&gt; to match possible values. This is used only in &lt;code&gt;restricted-sexp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d6302eef993c5fd4313ae0b3049c27cc8e3bc78" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;doc&lt;/var&gt; as the documentation string for this value (or part of the value) that corresponds to this type. In order for this to work, you must specify a value for &lt;code&gt;:format&lt;/code&gt;, and use &amp;lsquo;</source>
          <target state="translated">Use &lt;var&gt;doc&lt;/var&gt; as the documentation string for this value (or part of the value) that corresponds to this type. In order for this to work, you must specify a value for &lt;code&gt;:format&lt;/code&gt; , and use &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="38a0a6267f5c5df6416398696c8987a607fb2de2" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;label&lt;/var&gt;, a string, instead of the item&amp;rsquo;s name, to label the item in customization menus and buffers. &lt;strong&gt;Don&amp;rsquo;t use a tag which is substantially different from the item&amp;rsquo;s real name; that would cause confusion.&lt;/strong&gt;</source>
          <target state="translated">Use &lt;var&gt;label&lt;/var&gt; , a string, instead of the item&amp;rsquo;s name, to label the item in customization menus and buffers. &lt;strong&gt;Don&amp;rsquo;t use a tag which is substantially different from the item&amp;rsquo;s real name; that would cause confusion.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a14e6a2fe2d56471b74b10a9d37a3f1cf80fff5" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;tag&lt;/var&gt; (a string) as the tag for the value (or part of the value) that corresponds to this type.</source>
          <target state="translated">Use &lt;var&gt;tag&lt;/var&gt; (a string) as the tag for the value (or part of the value) that corresponds to this type.</target>
        </trans-unit>
        <trans-unit id="37fb399c005854ea1a1f14512c0a9f758ca0982a" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;tag&lt;/var&gt; as the name of this alternative, for user communication purposes. This is useful for a type that appears inside of a &lt;code&gt;choice&lt;/code&gt;.</source>
          <target state="translated">Use &lt;var&gt;tag&lt;/var&gt; as the name of this alternative, for user communication purposes. This is useful for a type that appears inside of a &lt;code&gt;choice&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1a19b4f2d1b6bed331d284fa9f2181ea3e87908" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;tip&lt;/var&gt; as the tooltip for the notification. If &lt;var&gt;tip&lt;/var&gt; is a string, this is the text of a tooltip that will be shown when the mouse pointer hovers over the tray icon added by the notification. If &lt;var&gt;tip&lt;/var&gt; is not a string, or if this parameter is not specified, the default tooltip text is &amp;lsquo;</source>
          <target state="translated">通知のツール &lt;var&gt;tip&lt;/var&gt; としてtipを使用します。 &lt;var&gt;tip&lt;/var&gt; が文字列の場合、これは、通知によって追加されたトレイアイコンの上にマウスポインタを置いたときに表示されるツールチップのテキストです。場合は &lt;var&gt;tip&lt;/var&gt; 文字列でない場合、またはこのパラメータが指定されていない場合、デフォルトのツールチップのテキストは'</target>
        </trans-unit>
        <trans-unit id="fbca07f69bbb0a518ed4235913b478f281e538dc" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;type&lt;/var&gt; as the data type for this option. It specifies which values are legitimate, and how to display the value (see &lt;a href=&quot;customization-types#Customization-Types&quot;&gt;Customization Types&lt;/a&gt;). Every &lt;code&gt;defcustom&lt;/code&gt; should specify a value for this keyword.</source>
          <target state="translated">このオプションのデータ &lt;var&gt;type&lt;/var&gt; としてtypeを使用します。正当な値と、その値の表示方法を指定します（&lt;a href=&quot;customization-types#Customization-Types&quot;&gt;カスタマイズタイプを&lt;/a&gt;参照）。すべての &lt;code&gt;defcustom&lt;/code&gt; は、このキーワードの値を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8347ef3a24625aac52e35d187706fdf7865b09d9" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;variable&lt;/var&gt; (a symbol) as the history list, and assume that the initial history position is &lt;var&gt;startpos&lt;/var&gt; (a nonnegative integer).</source>
          <target state="translated">履歴リストとして &lt;var&gt;variable&lt;/var&gt; （シンボル）を使用し、初期履歴位置が &lt;var&gt;startpos&lt;/var&gt; （非負の整数）であると想定します。</target>
        </trans-unit>
        <trans-unit id="f9ea11ecb24ac51a9fd9a1426a3f575f2b9af5eb" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;variable&lt;/var&gt; (a symbol) as the history list.</source>
          <target state="translated">履歴リストとして &lt;var&gt;variable&lt;/var&gt; （シンボル）を使用します。</target>
        </trans-unit>
        <trans-unit id="56a94bf7f718cdf3377f1e36d09002168c3e86e8" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;(:propertize &lt;var&gt;elt&lt;/var&gt; &lt;var&gt;props&lt;/var&gt;&amp;hellip;)&lt;/code&gt; construct to give &lt;var&gt;elt&lt;/var&gt; a text property specified by &lt;var&gt;props&lt;/var&gt;.</source>
          <target state="translated">使用 &lt;code&gt;(:propertize &lt;var&gt;elt&lt;/var&gt; &lt;var&gt;props&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 与える構造を &lt;var&gt;elt&lt;/var&gt; で指定されたテキストのプロパティ &lt;var&gt;props&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="d327ac5f8db2005904ae2fe386ee6bf398215ced" translate="yes" xml:space="preserve">
          <source>Use a list containing &lt;code&gt;:eval &lt;var&gt;form&lt;/var&gt;&lt;/code&gt; in the mode line data structure, and make &lt;var&gt;form&lt;/var&gt; evaluate to a string that has a text property.</source>
          <target state="translated">含むリストを使用してください &lt;code&gt;:eval &lt;var&gt;form&lt;/var&gt;&lt;/code&gt; モード行のデータ構造で、かつメイク &lt;var&gt;form&lt;/var&gt; textプロパティを持つ文字列に評価されます。</target>
        </trans-unit>
        <trans-unit id="89e4e5ba0adc2e1f1eb81797d1aaf2efa1fc3014" translate="yes" xml:space="preserve">
          <source>Use of &lt;var&gt;initial&lt;/var&gt; is mostly deprecated; we recommend using a non-&lt;code&gt;nil&lt;/code&gt; value only in conjunction with specifying a cons cell for &lt;var&gt;history&lt;/var&gt;. See &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Initial Input&lt;/a&gt;.</source>
          <target state="translated">&lt;var&gt;initial&lt;/var&gt; 使用はほとんど非推奨です。 &lt;var&gt;history&lt;/var&gt; consセルを指定する場合にのみ、 &lt;code&gt;nil&lt;/code&gt; 以外の値を使用することをお勧めします。&lt;a href=&quot;initial-input#Initial-Input&quot;&gt;初期入力を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d29d21b34e96e2c562ed13312bc737a094a646d2" translate="yes" xml:space="preserve">
          <source>Use of a cons cell as the value for &lt;var&gt;initial&lt;/var&gt; arguments is deprecated.</source>
          <target state="translated">&lt;var&gt;initial&lt;/var&gt; 引数の値としてconsセルを使用することは非推奨です。</target>
        </trans-unit>
        <trans-unit id="9e43930964ad425cf199261b9f37fee68dd1457a" translate="yes" xml:space="preserve">
          <source>Use of encoding for terminal I/O.</source>
          <target state="translated">端末のI/Oにエンコードを使用しています。</target>
        </trans-unit>
        <trans-unit id="d270630ab107723a28dcfa4dcdbf3420a9e423fb" translate="yes" xml:space="preserve">
          <source>Use of the minibuffer reads input events, and that alters the values of variables such as &lt;code&gt;this-command&lt;/code&gt; and &lt;code&gt;last-command&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;). Your program should bind them around the code that uses the minibuffer, if you do not want that to change them.</source>
          <target state="translated">ミニバッファを使用すると、入力イベントが読み取られ、 &lt;code&gt;this-command&lt;/code&gt; や &lt;code&gt;last-command&lt;/code&gt; コマンドなどの変数の値が変更されます（&lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;コマンドループ情報を&lt;/a&gt;参照）。ミニバッファを変更したくない場合は、プログラムでミニバッファを使用するコードにバインドする必要があります。</target>
        </trans-unit>
        <trans-unit id="5347ff425a354417e9a1d6637d256e051dba9bee" translate="yes" xml:space="preserve">
          <source>Use overlays to highlight parts of the buffer.</source>
          <target state="translated">オーバーレイを使用してバッファの一部をハイライトします。</target>
        </trans-unit>
        <trans-unit id="fc53c16cff054002cb490fb1d90b039f3094274b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;:set&lt;/code&gt; function to initialize the variable, if it is already set or has been customized; otherwise, just use &lt;code&gt;set-default&lt;/code&gt;.</source>
          <target state="translated">変数がすでに設定されているかカスタマイズされている場合は、 &lt;code&gt;:set&lt;/code&gt; 関数を使用して変数を初期化します。それ以外の場合は、 &lt;code&gt;set-default&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="924756e5be9d1baf0a3599f7c292dd2e27c179ce" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt; hook similarly to extend the scan so that the scanned text never starts or ends in the middle of a multiline construct.</source>
          <target state="translated">使用 &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt; スキャンされたテキストが複数行構築の途中で開始したり終了ないことスキャンように拡張するために同様にフック。</target>
        </trans-unit>
        <trans-unit id="591db228b5d39738df1ff275555b37fe6f05e83c" translate="yes" xml:space="preserve">
          <source>Use the command</source>
          <target state="translated">コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="5ebe07c9360bde756d125a996dff0141df0191e1" translate="yes" xml:space="preserve">
          <source>Use the elements of &lt;var&gt;argument-list&lt;/var&gt; as the arguments of the type construct. For instance, &lt;code&gt;(const :args (foo))&lt;/code&gt; is equivalent to &lt;code&gt;(const foo)&lt;/code&gt;. You rarely need to write &lt;code&gt;:args&lt;/code&gt; explicitly, because normally the arguments are recognized automatically as whatever follows the last keyword-value pair.</source>
          <target state="translated">type構文の引数として &lt;var&gt;argument-list&lt;/var&gt; の要素を使用します。たとえば、 &lt;code&gt;(const :args (foo))&lt;/code&gt; は &lt;code&gt;(const foo)&lt;/code&gt; と同等です。通常、引数は最後のキーワードと値のペアに続くものとして自動的に認識されるため、 &lt;code&gt;:args&lt;/code&gt; を明示的に記述する必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="bcb154cf5a3a53ca3d408af20c24cb5e6ad4d8bc" translate="yes" xml:space="preserve">
          <source>Use the face &lt;var&gt;face&lt;/var&gt; (a face name or a list of face names) for button text displayed with &amp;lsquo;</source>
          <target state="translated">'で表示されるボタンテキストには、顔の &lt;var&gt;face&lt;/var&gt; （顔の名前または顔の名前のリスト）を使用します</target>
        </trans-unit>
        <trans-unit id="77283a6ddab4699e1e393d2d33775cd38ddabb0d" translate="yes" xml:space="preserve">
          <source>Use the string &lt;var&gt;name&lt;/var&gt; as the process name. As with &lt;code&gt;make-process&lt;/code&gt;, it is modified if necessary to make it unique.</source>
          <target state="translated">プロセス名として文字列 &lt;var&gt;name&lt;/var&gt; を使用します。 &lt;code&gt;make-process&lt;/code&gt; と同様に、必要に応じて変更して一意にします。</target>
        </trans-unit>
        <trans-unit id="f6bb25da68a52ad5e36645a8fc9c911e2d5c2b06" translate="yes" xml:space="preserve">
          <source>Use the string &lt;var&gt;name&lt;/var&gt; as the process name. It is modified if necessary to make it unique.</source>
          <target state="translated">プロセス名として文字列 &lt;var&gt;name&lt;/var&gt; を使用します。必要に応じて変更され、一意になります。</target>
        </trans-unit>
        <trans-unit id="8db9c19cb7d83234e6a5adedbe26edfea639a5a7" translate="yes" xml:space="preserve">
          <source>Use the string &lt;var&gt;name&lt;/var&gt; as the process name; if a process with this name already exists, then &lt;var&gt;name&lt;/var&gt; is modified (by appending &amp;lsquo;</source>
          <target state="translated">プロセス名として文字列 &lt;var&gt;name&lt;/var&gt; を使用します。この名前のプロセスがすでに存在する場合は、 &lt;var&gt;name&lt;/var&gt; が変更されます（ 'を追加することにより）</target>
        </trans-unit>
        <trans-unit id="43724c02820653276c4e926ae11aa9da78260343" translate="yes" xml:space="preserve">
          <source>Use the variable&amp;rsquo;s &lt;code&gt;:set&lt;/code&gt; function to initialize the variable, but do not reinitialize it if it is already non-void.</source>
          <target state="translated">変数の &lt;code&gt;:set&lt;/code&gt; 関数を使用して変数を初期化しますが、すでにvoidでない場合は、再初期化しないでください。</target>
        </trans-unit>
        <trans-unit id="32e078501df17012ea8d38101904d103fdf84f68" translate="yes" xml:space="preserve">
          <source>Use vectors instead of strings for key sequences, when you plan to use them for anything other than as arguments to &lt;code&gt;lookup-key&lt;/code&gt; and &lt;code&gt;define-key&lt;/code&gt;. For example, you can use &lt;code&gt;read-key-sequence-vector&lt;/code&gt; instead of &lt;code&gt;read-key-sequence&lt;/code&gt;, and &lt;code&gt;this-command-keys-vector&lt;/code&gt; instead of &lt;code&gt;this-command-keys&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lookup-key&lt;/code&gt; および &lt;code&gt;define-key&lt;/code&gt; の引数として以外の目的でベクトルを使用する場合は、キーシーケンスに文字列の代わりにベクトルを使用してください。たとえば、あなたが使用することができ &lt;code&gt;read-key-sequence-vector&lt;/code&gt; の代わりに、 &lt;code&gt;read-key-sequence&lt;/code&gt; 、および &lt;code&gt;this-command-keys-vector&lt;/code&gt; の代わりに、 &lt;code&gt;this-command-keys&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d437051055eedcc2ca89645536d3211050f05cd" translate="yes" xml:space="preserve">
          <source>Use vectors to write key sequence constants containing meta characters, even when passing them directly to &lt;code&gt;define-key&lt;/code&gt;.</source>
          <target state="translated">ベクトルを使用して、メタ文字を含むキーシーケンス定数を、 &lt;code&gt;define-key&lt;/code&gt; に直接渡す場合でも記述します。</target>
        </trans-unit>
        <trans-unit id="db3eece4ecc1dc6e264461d6ea4ffad9165b70f4" translate="yes" xml:space="preserve">
          <source>Used for different types of fringe cursors.</source>
          <target state="translated">異なるタイプのフリンジカーソルに使用されます。</target>
        </trans-unit>
        <trans-unit id="b538c7641de65de254e5145946df36d16687694a" translate="yes" xml:space="preserve">
          <source>Used for overlay arrows (see &lt;a href=&quot;overlay-arrow#Overlay-Arrow&quot;&gt;Overlay Arrow&lt;/a&gt;).</source>
          <target state="translated">オーバーレイの矢印に使用（参照&lt;a href=&quot;overlay-arrow#Overlay-Arrow&quot;&gt;オーバーレイアロー&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="abe7fe50c254613f17b49fa29988afb4159cdd9e" translate="yes" xml:space="preserve">
          <source>Used for truncation and continuation lines.</source>
          <target state="translated">切り捨て線や継続線に使用します。</target>
        </trans-unit>
        <trans-unit id="77f8f0d4453cf80de6dff56b7d9173f1602790f6" translate="yes" xml:space="preserve">
          <source>Used in keymaps to undefine keys. It calls &lt;code&gt;ding&lt;/code&gt;, but does not cause an error.</source>
          <target state="translated">キーを定義解除するためにキーマップで使用されます。 &lt;code&gt;ding&lt;/code&gt; を呼び出しますが、エラーは発生しません。</target>
        </trans-unit>
        <trans-unit id="6259ffefea40662abbcdbf789a1ab4e77db1cd41" translate="yes" xml:space="preserve">
          <source>Used only in one-line paragraphs, this regular expression acts as an additional check of the validity of the one available candidate fill prefix: the candidate must match this regular expression, or match &lt;code&gt;comment-start-skip&lt;/code&gt;. If it doesn&amp;rsquo;t, &lt;code&gt;fill-context-prefix&lt;/code&gt; replaces the candidate with a string of spaces of the same width as it.</source>
          <target state="translated">この正規表現は1行の段落でのみ使用され、使用可能な1つの候補フィルプレフィックスの有効性の追加チェックとして機能します。候補はこの正規表現と一致するか、 &lt;code&gt;comment-start-skip&lt;/code&gt; と一致する必要があります。そうでない場合、 &lt;code&gt;fill-context-prefix&lt;/code&gt; は、候補をそれと同じ幅のスペースの文字列に置き換えます。</target>
        </trans-unit>
        <trans-unit id="d7d4536b2c038c53d4bc30e470e42275f3c0eba8" translate="yes" xml:space="preserve">
          <source>Used to indicate buffer boundaries.</source>
          <target state="translated">バッファの境界を示すために使用します。</target>
        </trans-unit>
        <trans-unit id="af215d27954516e94b0fc99a63a8235a6bf5c96c" translate="yes" xml:space="preserve">
          <source>Used to indicate continued lines.</source>
          <target state="translated">連続したラインを表示するために使用します。</target>
        </trans-unit>
        <trans-unit id="4ba8160bf81bfb699940005e7f1da16ade203e5a" translate="yes" xml:space="preserve">
          <source>Used to indicate empty lines after the buffer end when &lt;code&gt;indicate-empty-lines&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">show &lt;code&gt;indicate-empty-lines&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合に、バッファー終了後の空の行を示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="8cffa0b7c31156b9dba3c8dad5ce97e043b0874c" translate="yes" xml:space="preserve">
          <source>Used to indicate truncated lines.</source>
          <target state="translated">切り捨てられた行を示すのに使用します。</target>
        </trans-unit>
        <trans-unit id="ff41ba79407155df83a875106517da53820bd804" translate="yes" xml:space="preserve">
          <source>Used when &lt;code&gt;indicate-buffer-boundaries&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;: &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; indicate a buffer boundary lying above or below the window edge; &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt; indicate the topmost and bottommost buffer text line; and &lt;code&gt;top-bottom&lt;/code&gt; indicates where there is just one line of text in the buffer.</source>
          <target state="translated">ときに使用される &lt;code&gt;indicate-buffer-boundaries&lt;/code&gt; 、非ある &lt;code&gt;nil&lt;/code&gt; ： &lt;code&gt;up&lt;/code&gt; と &lt;code&gt;down&lt;/code&gt; ウィンドウエッジ上または下のバッファ境界嘘を示します。 &lt;code&gt;top&lt;/code&gt; と &lt;code&gt;bottom&lt;/code&gt; は、最上部と最下部のバッファテキスト行を示します。そして &lt;code&gt;top-bottom&lt;/code&gt; バッファ内のテキストのちょうど一行がある場合を示しています。</target>
        </trans-unit>
        <trans-unit id="fca1c34ecbffa5469b5a1e0d47bb759b17462bcf" translate="yes" xml:space="preserve">
          <source>Used when the item is disabled and deselected.</source>
          <target state="translated">項目が無効化され、選択解除されている場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="aed513916b82a279df7cdecb65133e5f6fe7d296" translate="yes" xml:space="preserve">
          <source>Used when the item is disabled and selected.</source>
          <target state="translated">項目が無効化されて選択されている場合に使用します。</target>
        </trans-unit>
        <trans-unit id="f6403844c6cde23b98f83024612325ae4911a2a6" translate="yes" xml:space="preserve">
          <source>Used when the item is enabled and deselected.</source>
          <target state="translated">項目が有効になっている場合と、選択解除されている場合に使用します。</target>
        </trans-unit>
        <trans-unit id="124314249d1e4d88e4cacc25deaaa5077fe2391e" translate="yes" xml:space="preserve">
          <source>Used when the item is enabled and selected.</source>
          <target state="translated">項目を有効にして選択した場合に使用します。</target>
        </trans-unit>
        <trans-unit id="834a5fa19a43c628e3bddc071bf0ab0ee64a69f7" translate="yes" xml:space="preserve">
          <source>Used when turning Font Lock off to remove the fontification. Calls the function specified by &lt;code&gt;font-lock-unfontify-buffer-function&lt;/code&gt;.</source>
          <target state="translated">フォントロックをオフにしてフォント化を削除するときに使用します。 &lt;code&gt;font-lock-unfontify-buffer-function&lt;/code&gt; で指定された関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ec441e9bcf6082e0f12c028ed5408f4c649408df" translate="yes" xml:space="preserve">
          <source>Useful regexps for finding sentences, pages,...</source>
          <target state="translated">文章やページを探すのに便利な正規表現。</target>
        </trans-unit>
        <trans-unit id="52f4c119180f7fb6d994831c0aa80b1b6a041349" translate="yes" xml:space="preserve">
          <source>User Identification</source>
          <target state="translated">利用者識別</target>
        </trans-unit>
        <trans-unit id="5a7b6cb49093de47e45197faf6e8bbc9f056a153" translate="yes" xml:space="preserve">
          <source>User Option</source>
          <target state="translated">ユーザーオプション</target>
        </trans-unit>
        <trans-unit id="28410b3350e06e2fa0834b6176e4cb723f59e7b4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;abbrev-all-caps&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;abbrev-all-caps&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c45451d8667cdacc66dcb7f0e140a293f2fb3bf8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;abbrev-file-name&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;abbrev-file-name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60aa454e39d066188f3ff75cb2e9493dc35bc275" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-first-line-regexp&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;adaptive-fill-first-line-regexp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d694ff0e9c14523131210ba897964e19fd01df3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;adaptive-fill-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d96a6b8d06266741a89dee11401eefd36c906f8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-mode&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;adaptive-fill-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd5c48e6f2a40efd885a7618a979cc59191f6ed8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-regexp&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;adaptive-fill-regexp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0519fc23bdcce5847aea01f46c05e70db8068c52" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;after-save-hook&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;保存後フック&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4080f0497ae605a17b7190584d5ec5eab44a8dc9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-coding-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;auto-coding-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61975c3318294654e4c94d9ae0cf9748a82c50f6" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-coding-functions&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;自動コーディング機能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf59cb635bf51812802fec80c30da74401d09860" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-coding-regexp-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;auto-coding-regexp-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e9f634e0f06e18d0ed86c4e77f2073c2c29fe52" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-default&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;自動保存-デフォルト&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3dff66dd30cb605c076ac4b7974bbd03800d5e7d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-interval&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;自動保存間隔&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81fe1cba1aca838d9ffab4c92390d32941938180" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-list-file-prefix&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;auto-save-list-file-prefix&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d41eecb34f774743aa33d910bb2482bbe8d7b08d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-timeout&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;自動保存タイムアウト&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee44287d38d58aa51397e6b5f77d1e1ce9de482c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-visited-file-name&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;auto-save-visited-file-name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43c78be3ab642be9eaa09629ede811c760c6a138" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying-when-linked&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;リンク時のコピーによるバックアップ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5549944d7a5d28ea7a8f478850bc195b871f485" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying-when-mismatch&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;不一致時のコピーによるバックアップ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fb5dc7296fc13b00cc23d92851fbd86bd3daa0c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying-when-privileged-mismatch&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;privileged-mismatchの場合のコピーによるバックアップ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2bb38b721f2987be672b0e32883be2a89c3f5a3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;コピーによるバックアップ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="068ebf8f246d83e3287693a52b81ddf0df139288" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-directory-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;backup-directory-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7dd50b1792ca4c59e2de6a85c7ca152163979cf4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backward-delete-char-untabify-method&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;backward-delete-char-untabify-method&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0987b9376cf2fba178df47557cd44071b2eb9d08" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;baud-rate&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;ボーレート&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18a82c1ea00820f4a6aeef167526e2b576c3f55e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;before-save-hook&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;保存前フック&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54f40b17677608cda6fd1d1438fee7cb980f1033" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;bidi-paragraph-direction&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;bidi-paragraph-direction&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4a6f814c8c2b1865428cbda24dbf918afdd08b5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-cursor-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;blink-cursor-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="942ec96b08b66980d026d6e83ffcf2d1ec5ac5d1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-matching-delay&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;blink-matching-delay&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59f0be597b7dd3de8707aa48930bbc461a712b59" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-matching-paren-distance&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;blink-matching-paren-distance&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67a927bfb1e5a8be0cfec3ad5c591e9ce927dbfd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-matching-paren&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;blink-matching-paren&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71eaeb40dc971950168818607db8107cb4187c47" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;buffer-offer-save&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;buffer-offer-save&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d4a580632797b1bda9861a878dc05466615df30" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;byte-compile-dynamic-docstrings&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;byte-compile-dynamic-docstrings&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="debb05e40a6fa5093a02bba3803e975707c8293c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;case-fold-search&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;case-fold-search&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56715016a0005a087c8a35ad721614698a2b2419" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;case-replace&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;case-replace&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e58693ea6b4f3f236b558781b3a55bb24653a8a2" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;comment-auto-fill-only-comments&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;comment-auto-fill-only-comments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac64b79e5a59c1b8198d4fe48e0c34d0c5570018" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-auto-help&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;補完-オートヘルプ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a47db07e11abf1f50adb341656b449a12b4014e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-category-overrides&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;completion-category-overrides&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="019cb06c6610b9eaefe7708ae5720e9c61df03cb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-ignored-extensions&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;completion-ignored-extensions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa86f8a5833c3ce711530f7d6ef7e2e1c20b55bb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-styles&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;完了スタイル&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ca7d363a3f633e276a62a94a10da754812b9ab9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;confirm-kill-processes&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;confirm-kill-processes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b6d4698def969239e463ce8e42ae32f53cab7817" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;create-lockfiles&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;create-lockfiles&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77f653c4b6ca3c51c3cca338e9717ef5d8f8624d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;ctl-arrow&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;ctl-arrow&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39e31e0ab66d8a337176cad0fa35d47ee3fd7c01" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;cursor-in-non-selected-windows&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;cursor-in-non-selected-windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cb1fe87b665317df0d675bb75fe2ac38710def8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;cursor-type&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;カーソルタイプ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77bd2e9a6697fb282bd386990eb75fe48aebd7b5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;custom-unlispify-remove-prefixes&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;custom-unlispify-remove-prefixes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d70d4ba47d6348ece539fbd747dc36e46bc5cfec" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-ignored-errors&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;debug-ignored-errors&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="548882c7a49849867858ebf7746b18faa6000816" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-error&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;debug-on-error&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1848194d9301ab230c13dc307b370e0e76d24c28" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-event&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;debug-on-event&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0eed717db04ca79fbd57a3f401a695218a4c554f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-quit&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;debug-on-quit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7232a912da22413ed88cc62966ba07cc8752fdd0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-signal&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;debug-on-signal&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1baaa1bb2d209ad48121ae80943ac95b2d2468f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debugger-stack-frame-as-list&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;debugger-stack-frame-as-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d67c241963cac07a06266d63f47f294b34e5847" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;default-frame-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;default-frame-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dbebe0bea42dce97f53c087415df69731a795deb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;default-input-method&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;default-input-method&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="543b2906eb8b7a4acebccd293e7073a63569a08f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;default-justification&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;デフォルト-正当化&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="197c838a71c037d112684867e942dc7780ee661d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;defun-prompt-regexp&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;defun-prompt-regexp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac69d6bcdb703ebe65de4a21cc58a51dbaa0815e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;delete-auto-save-files&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;delete-auto-save-files&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="388af63f3b488811465b3062df76529e7b0dd296" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;delete-exited-processes&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;delete-exited-processes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a03740ce1a6df96f98f48614c03da0b736a18eb4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;delete-old-versions&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;delete-old-versions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff016dcf9a811096087bbba666af3917f8d2a8ee" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;dired-kept-versions&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;dired-kept-versions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8fa38053ad0888dad7f17f056754526f812fb7c1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;display-buffer-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;display-buffer-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cf586172da0be30837f695db0f1fcf6a803ee02" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;display-buffer-base-action&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;display-buffer-base-action&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c73a613d3529e7651d979c7e4a0099850441f928" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;display-mm-dimensions-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;display-mm-dimensions-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2980bfcf14802254ac335a74b4b2db6370f4cdee" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;double-click-fuzz&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;ダブルクリック-ファズ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="341f6df01a33fc02281615ffa6ee36224ecd01d7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;double-click-time&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;ダブルクリック時間&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="123762ef824474c41f1c0f4d1e3a2940b0d2d019" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;echo-keystrokes&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;エコーキーストローク&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3ef61939f118de9c19c891322a73c56a9929946" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-after-instrumentation-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-after-instrumentation-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7fc0e752e3d1beaaaccb8455b26f7b3e6a329154" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-all-defs&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-all-defs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb0d4b66353ae6c69fc4661f1289de0dd9b1b194" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-all-forms&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-all-forms&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c34e59ff5902febe9b95bd014c4342e32041acf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-behavior-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-behavior-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72ce7a9c1de8193687b4d371208fbc38e1233302" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-continue-kbd-macro&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-continue-kbd-macro&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dfd786966cf2a5c18a859ac996a5d19d7f4fb780" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-eval-macro-args&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-eval-macro-args&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6735a79edc4ae8c5f23236d37c93782fa99d8887" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-global-break-condition&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-global-break-condition&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe26f4b7c0b79567431d424c0fffb5f10f9283f1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-initial-mode&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-initial-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38cfbb1acf52f668fb58e70a6c3df4be9d4f3f92" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-new-definition-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-new-definition-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="692de54118fb891d07ae0f4985d43aca8240c00d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-on-error&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-on-error&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c12b0ad09144463d7cf0e0dd44e2830eb38b800" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-on-quit&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-on-quit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df81c24fdf2875bf92629e60520d6eaf968a71de" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-print-circle&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-print-circle&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0bca6364b556ead9206a512cf9865c5242983304" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-print-length&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-print-length&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5784fa9b4442a645004169046f8f0304378c6ccf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-print-level&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-print-level&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bce966e94cc5d17473dfc3fb637caf72fb7199db" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-save-displayed-buffer-points&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-save-displayed-buffer-points&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdac976c66e24961b4ddff9d6cb8460cb93cacb5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-save-windows&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-save-windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33837f4a4affd2fe34be38e8c4aaca84fe6c7232" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-setup-hook&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-setup-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce8d963e8463660c8b777b5b52c5856b95d9932a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-sit-for-seconds&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-sit-for-seconds&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="038959d942095d75d2e4f361297cdce77eb03df5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-sit-on-break&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-sit-on-break&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9dfa9a444494ac62f042daca8e31203b7f72cac" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-test-coverage&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-test-coverage&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="584b272777efaa57abcff8499652dfa418ae5fc9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-trace&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-trace&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2791b0ce480428c68fd2e24dc11b41dd85bb0836" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-unwrap-results&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;edebug-unwrap-results&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f9cd2f4e2d257196158387bed354c1b66e67c03" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;enable-local-eval&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;enable-local-eval&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71abbe6d97f0261108857870ec0a047dea8ff237" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;enable-local-variables&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;enable-local-variables&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a17823be327f79d2c722dffee8644b2ce5301d3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;enable-recursive-minibuffers&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;enable-recursive-minibuffers&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94e40a86fcdbcd7d22b05b03a23213843940c14e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;eval-expression-debug-on-error&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;eval-expression-debug-on-error&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="656244de2111b64747b02ab4cf26a9cc518da92d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;eval-expression-print-length&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;eval-expression-print-length&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11852a0e87a20c1096f0644dbc38fffc64868da4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;eval-expression-print-level&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;eval-expression-print-level&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ffc8ec6ecee44f93ff57a5499c51a6b9a84a05d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;even-window-sizes&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;even-window-sizes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46450ebf2cc5dd66d1315e675c8e67a4cd0f1993" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;exec-path&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;exec-path&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97b456163b050acacc1d377b86cdf0d53400aace" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;exec-suffixes&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;exec-サフィックス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3861d0808e25a889177909c888e3020027f9692a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;face-font-family-alternatives&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;face-font-family-alternatives&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4d2fd778814dc8bbf7b7318d5d34c015a2529ec" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;face-font-registry-alternatives&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;face-font-registry-alternatives&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5a1bd2a380815524fc65568aa6b01913c8f7e80" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;face-font-selection-order&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;face-font-selection-order&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="582368ed33dfd2e843f6049e190f685fd208f6ca" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;file-coding-system-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;file-coding-system-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59ed3f64b1f8ebefdf60592c3f3ec0a1c60f2f0b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;file-precious-flag&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;file-precious-flag&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="079a1c55a8e0aba2709f556603ba9156dfd38d6f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-column&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;fill-column&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dbc900155982949e130a936b1b85b78d3996a8fb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-individual-varying-indent&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;fill-individual-varying-indent&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="484ef66c2840584ab2d1ec87e7f4575b492f0fa9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-nobreak-predicate&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;fill-nobreak-predicate&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac221d5a8a96cd7f0777149ece8d090543237655" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-prefix&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;fill-prefix&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34e5b860aa2c643a982017a5ebc7a8694764cf9d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-separate-heterogeneous-words-with-space&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;fill-separate-heterogeneous-words-with-space&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f994b01781e67140eef2838152e3b79e8063d5ea" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;find-file-hook&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;find-file-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f2eee2502312c71ccd1f25552d84cad62c3ff10e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;find-file-wildcards&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;find-file-wildcards&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f786a7e0c9b0a709e86cd918f6fd8a81c7ddb08" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-frame-to-buffer-margins&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;fit-frame-to-buffer-margins&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9459b4e10392fbf7ae08150b2ab9839fb285818b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-frame-to-buffer-sizes&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;fit-frame-to-buffer-sizes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49f27d043403426bbcb0c42c88443cb657bd91b4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-frame-to-buffer&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;fit-frame-to-buffer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4810a1cb5472fc0c094cf0ef99331ad34866fcf3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-window-to-buffer-horizontally&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;fit-window-to-buffer-horizo​​ntally&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="322afabcf85694a7c8ac9bf4eb4832aacc2501da" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;focus-follows-mouse&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;focus-follows-mouse&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ff9d479a9c8993b0937c8435d198febce31f376" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;frame-auto-hide-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;frame-auto-hide-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9744b7fa5d91df7537cfb44c5b2f3a94dc6686c5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;frame-inhibit-implied-resize&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;frame-inhibit-implied-resize&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08ecf2f14805a04a4dd96f781b8ac10d22b89677" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;frame-resize-pixelwise&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;frame-resize-pixelwise&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f39c798fea2c6435a50a1cb0fdc648cba270803" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;garbage-collection-messages&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;garbage-collection-messages&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17a531e0c306e100a3962a7e05b567a373f14ecb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;gc-cons-percentage&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;gc-cons-percentage&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb157ce410eafa6a67e87afaba4c2fc5485da687" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;gc-cons-threshold&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;gc-cons-threshold&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30bad75ed48273e169c41ea96840ae0eb7ffa5a9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;glyphless-char-display-control&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;glyphless-char-display-control&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63e0a17e6aefe87e369ca7880810ac8649b175cf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;help-char&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;help-char&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8977384f31f8d0f3d5d46fc68c96f50dd1d4ad9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;help-event-list&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;help-event-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="165d6c2e081ca11cff49e6fb65c220d7c955c535" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;history-delete-duplicates&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;history-delete-duplicates&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55cf165385612cd4121eb3f50f945b4df2dd327e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;history-length&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;history-length&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0d27372f683802a4a4e72b3312d58fd1364bc67" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;horizontal-scroll-bar-mode&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;horizo​​ntal-scroll-bar-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eeec319582766a863b72eb767f46ba6ac4316bda" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;iconify-child-frame&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;iconify-child-frame&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c1b22b16c91c7126d42e1cf134d32fbbec481ec" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;image-load-path&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;image-load-path&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a6c6b047f7ca1cec00d7abc10155d2941513ff0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;imagemagick-enabled-types&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;imagemagick-enabled-types&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee56d5cd797f61829fdf983385a2f9701a2abe19" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;imagemagick-types-inhibit&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;imagemagick-types-inhibit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8c830199288cee63c3d58ae25523278267ab32b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;indent-tabs-mode&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;indent-tabs-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6bdcac469ff1b1d6819856fad89f48365208ff15" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;indicate-buffer-boundaries&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;indicate-buffer-boundaries&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="837acd4c4348a48941615e6b876ae12e9d4920f0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;indicate-empty-lines&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;showin-empty-lines&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ddd9c1a1f72ee9817c7c32c732aed967f392218" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-default-init&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;inhibito-default-init&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c07ee4d6cbaaef8d228b264b06692e5585e8a0fb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-eol-conversion&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;inhibito-eol-conversion&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab10a55ffed759066103340443e65b954e1960af" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-startup-echo-area-message&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;inhibit-startup-echo-area-message&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be628ed715e60502d42231888b4c7ca4620a8838" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-startup-screen&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;inhibit-startup-screen&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa2d025e15c4e51110800fc5901e83076b11b997" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-buffer-choice&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;initial-buffer-choice&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="293febdb54eb561e30ef3288cfc814fbc417e433" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-frame-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;initial-frame-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93302d21017c5104e5850f272e9e318d67c184c1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-major-mode&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;initial-major-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="074e13b8f4d8258a672514bee4c412708bb9d0f7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-scratch-message&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;initial-scratch-message&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="95c4066e90e17aa5eb769e379fd7e1caf45cfdda" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;insert-default-directory&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;insert-default-directory&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7f3ea4fb1875733b99668a0da9ee6c56244fb12" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kept-new-versions&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;keeped-new-versions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1898e46db12f091c72ed6975f33dc62df8a7874e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kept-old-versions&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;keeped-old-versions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="41e072b67a02f47751c787fc6d6172fb05e0aa1e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kill-emacs-query-functions&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;kill-emacs-query-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f644e2b33573cd4de36a63c99b9a3e8bdd4ef022" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kill-read-only-ok&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;kill-read-only-ok&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48ddeca8678f5ad171a611c9d0d8d23b0f17ca2a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kill-ring-max&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;kill-ring-max&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c847d6d0f149a1f240d0cf38375643a2ed401c31" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;left-margin&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;左マージン&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3298ddabdbc62bf7e05d97d6422eebff6be6ac45" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;load-prefer-newer&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;load-prefer-newer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3963a3eb14253ac0ccea60b221c1260d525f01dd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mail-host-address&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;mail-host-address&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f06fd63b93a8fa4fcf1e1082d8116fb99df55347" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;major-mode&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;メジャーモード&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fcebd7f372cd54dcf3d243db099cfbbde056d6fe" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;make-backup-file-name-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;make-backup-file-name-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37afdb68b7b57ad2fd4f950251ac180c069bd60f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;make-backup-files&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;make-backup-files&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b97ab1598e8545c434f69ce7312ade87f3bf54df" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mark-even-if-inactive&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;マーク-偶数-非アクティブ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29b548438ecc23999bb6af8e8cd5e3381527734d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mark-ring-max&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;mark-ring-max&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba640261d0635ced3f01b7cf76e99ff0ee821aef" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;max-lisp-eval-depth&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;max-lisp-eval-depth&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d70d60ad71a8596a7e00b971ff692df9e02b9bb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;max-mini-window-height&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;max-mini-window-height&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e100be4f93f5791cd49c58800512ff373fd93b4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;max-specpdl-size&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;max-specpdl-size&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b842b2ed6ef3bab321a961a302ac916290e80e6b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;maximum-scroll-margin&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;maximum-scroll-margin&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afe2bb33beb852c77e9b756a4eeb3758a1a3deae" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;message-log-max&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;message-log-max&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="648dfdd3beb7f82d417e28af5d4cb6bc1047219c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;meta-prefix-char&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;meta-prefix-char&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f7062214fbe519baf6a2b422a9089498c686612" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;minibuffer-auto-raise&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;minibuffer-auto-raise&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae608d5b35861b079b534bbfed4424d7e080aacd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;minibuffer-frame-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;minibuffer-frame-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="435307e8b87f1b7d420f2a031d6389c44d421d7b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mode-line-format&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;mode-line-format&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f01ec468ac8d0cec2fa49ed0ab5e1e3778ccfe95" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mode-line-percent-position&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;mode-line-percent-position&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="107d8e9642da4ab0c9f0ba9330a618be2787aba0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mouse-autoselect-window&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;mouse-autoselect-window&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b00f64fb4c1ba156cc9027add8f100fe21153b64" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;next-screen-context-lines&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;next-screen-context-lines&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a984c944e9211ac9e362f336ce2c95414abc4e0d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;no-redraw-on-reenter&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;再入力なし&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42cfe6a1ec84264664b7bb4f6516c2bca8120d2a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;only-global-abbrevs&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;only-global-abbrevs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9189f6cbb4af201ac8d9c3c832b90f38c1b818b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;open-paren-in-column-0-is-defun-start&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;open-paren-in-column-0-is-defun-start&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1b533afe7aa23d666b931ee348c84efc2ff2695" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;overflow-newline-into-fringe&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;overflow-newline-into-fringe&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4277c81cc256986b3e5fbcae86c78c3d7e81d101" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;package-archives&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;package-archives&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="abd3f45a2d6f1e46bdf412d5df4e1c9bb4151852" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;page-delimiter&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;ページ区切り文字&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c868cfc194bf8e2f63b0921a49cb365562f136ab" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;paragraph-separate&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;段落別&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9fe1dae9cc26592d3b04439f592c2d92226b29a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;paragraph-start&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;段落開始&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="215e019db282235c2f3291e6ab749c9615898555" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;parse-sexp-ignore-comments&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;parse-sexp-ignore-comments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ea235bbefe36faf62f02fd53105c489d9762d45" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-frame-alist&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;pop-up-frame-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fff3d4a073e1b0f2c3d480b174b469a6261fca0f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-frame-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;pop-up-frame-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1c4ea7edbd60b9bfcdc53c764cf88e6b72fbe91" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-frames&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;ポップアップフレーム&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="146fc74ea723498ebd2b91c166cc4fd730f4feb9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-windows&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;ポップアップウィンドウ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a5f0bbea5af962bc637e5721a1a67e4833ee0cc" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-buffer-completion-ignore-case&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;read-buffer-completion-ignore-case&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98fb75b07a5e3735455bf954c55376f8d390b26b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-buffer-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;read-buffer-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22d5089b62007482b5348fa86b16e7ac8154b33e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-file-name-completion-ignore-case&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;read-file-name-completion-ignore-case&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b415a87fe83a8a974b0729bb7b5bbd626af05de" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-regexp-defaults-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;read-regexp-defaults-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9b32c965d073876adcf0c5afd895de8c2bff4f1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;recenter-positions&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;recenter-positions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b9dae85338c4fd1cad1e36c317590539e44f777" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;recenter-redisplay&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;recenter-redisplay&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9dc9594acb063584b5168d2dc47449e01cefeff4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;remote-file-name-inhibit-cache&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;remote-file-name-inhibit-cache&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2202b433e382bc61f939ea30c615d522198fddb1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;require-final-newline&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;require-final-newline&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c1e4c32fd28670113589d36c283eaccd26f7959" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;resize-mini-frames&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;resize-mini-frames&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2b4da97e84b2053107eea0e3e322971222e9008" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;resize-mini-windows&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;resize-mini-windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4285a1385d7de52902a8aba6f4f1b36604df7970" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;revert-without-query&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;クエリなしで元に戻す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07269d8d5663468257f7d330f18554727864a5ac" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;ring-bell-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;ring-bell-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e869aab0065eea20bbd08c9d11b1bc8562582d81" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;safe-local-eval-forms&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;safe-local-eval-forms&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13a90cb7715959ebba083904ce2c1cd0dbd1a88c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;safe-local-variable-values&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;safe-local-variable-values&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b293bc47fee2108c9d1a1b6d50913c8c321f82a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;save-abbrevs&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;save-abbrevs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f69107dbd3903c8b02e3cd58d96bf1340d87a283" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scalable-fonts-allowed&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;scalable-fonts-allowed&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cdd4fc021be16dc348456acf0556a6199d99b0fd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-bar-mode&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;スクロールバーモード&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a628269f18dcce0eebf684334042e7c548235a16" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-conservatively&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;スクロール-控えめに&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab5e0522ea630c192cca09006fd2287f77df520b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-down-aggressively&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;スクロールダウン-積極的に&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9207ad18698d00baabac3dac3857a8e24a2b005b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-error-top-bottom&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;scroll-error-top-bottom&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4673c50748e2ffc639022e36426cb7fc04f51dbd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-margin&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;スクロールマージン&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24f3b5732086cd9ed909aab52296d30ba7c026ee" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-preserve-screen-position&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;scroll-preserve-screen-position&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="751af27c85e64122a8b18d15d25fdeaac5136a89" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-step&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;スクロールステップ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed80e549ad0063462daa02267106df62d69dba8c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-up-aggressively&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：上に&lt;strong&gt;スクロール-積極的に&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b721261228369f123dac405285b1b2ccce90f95e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;selection-coding-system&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;selection-coding-system&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5172be8c5a2198cededa723d7659c7ffafd1846" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;selective-display-ellipses&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;selective-display-ellipses&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9181a2d8ef519c53398451122675253216bc24f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end-double-space&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;sentence-end-double-space&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c82e39aa4d5dfe5f48821ea26be8c3c044acff1c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end-without-period&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;ピリオドなしの文末&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8af8bb3173b0b80e4e695ac8d858849a2546ec5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end-without-space&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;文末-スペースなし&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29a5fbf9a48439ece48a6a2af628e7df22bd1dae" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;文末&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a660e4a9ba6b509854a50125772c26d1d7131b04" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;server-after-make-frame-hook&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;server-after-make-frame-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f036be396cfee6b169535fa5d2f7b00d7c2dbe50" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;site-run-file&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;site-run-file&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b30ed7c6921d901f572bc75513d72c4a9e4d19d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;small-temporary-file-directory&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;small-temporary-file-directory&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="decfe30396e3a040072434ba95176d407cfd68a4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;smie-config&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;smie-config&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e80e4168dfd09e4d8585aa2c08d5e201649c6db" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sort-fold-case&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;sort-fold-case&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b6369c4f9fa4713c763b0c6bb4106994040a780" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sort-numeric-base&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;sort-numeric-base&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d04e59beff571d6768b99ddd1b26fcd0e5fd0b81" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-height-threshold&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;split-height-threshold&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9feb3596d3d8fadf098cd91902e8d2bff7d1f56" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-width-threshold&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;split-width-threshold&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39f61f71631d3a8fcda108d48a846a6430155101" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-window-keep-point&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;split-window-keep-point&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12ae0eb93d05094e6b130af385cad3b2e934e420" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-window-preferred-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;split-window-preferred-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="896ab34550a7492756e323bef2ff216fb8497103" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;switch-to-buffer-in-dedicated-window&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;専用ウィンドウ内のバッファに切り替え&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3798a9a233f35f6cde0cd69ea78cbd23c345a1b9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;switch-to-buffer-obey-display-actions&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;switch-to-buffer-obey-display-actions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a143024cb4b6228295e787e286c2c6267de0b7d6" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;switch-to-buffer-preserve-window-point&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;switch-to-buffer-preserve-window-point&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e68ec057fc0b9e3146c14ce7808504b31ff9a7db" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;switch-to-prev-buffer-skip&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;switch-to-prev-buffer-skip&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7839e796b54df17769fe69391454ca9db84d40a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tab-always-indent&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;tab-always-indent&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e652f8e5f07d16b1a40334c3bc7373d186d0de80" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tab-stop-list&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;tab-stop-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79d223b0d15d829694c113dd790eb3276d3f881b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tab-width&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;タブ幅&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52a26745bca4eb7bc5f2b5c7c5f72771e117b9b6" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tabulated-list-gui-sort-indicator-asc&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;tabulated-list-gui-sort-indicator-asc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6efdb80f3960f3082272ebb78968b22d0fc7357" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tabulated-list-gui-sort-indicator-desc&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;tabulated-list-gui-sort-indicator-desc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfb5cd49ebc3ad8078e8d8838e0362559e800df1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tabulated-list-tty-sort-indicator-asc&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;tabulated-list-tty-sort-indicator-asc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c97f196bfec167b4f18a4d093d9e198e3dc51542" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tabulated-list-tty-sort-indicator-desc&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;tabulated-list-tty-sort-indicator-desc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7ae21690300459c3b5e7bfca879d16189bcfaaf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;temp-buffer-max-height&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;temp-buffer-max-height&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fae0b229d78fabd9aa64607e2acd4cda493f6c29" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;temp-buffer-max-width&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;temp-buffer-max-width&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0bbd29a3cafe0aab90cd939d78b9a72d951ac7e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;temp-buffer-resize-mode&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;temp-buffer-resize-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80ac221c7a8fa6d33e76cdb4923156022cac0e2b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;temp-buffer-show-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;temp-buffer-show-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c6dbae4864415e056792bece71e17287a4bc3cf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;temporary-file-directory&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;一時ファイルディレクトリ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="158ff1d824dbf0cb8f872a727a5768694ba90c36" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;term-file-aliases&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;term-file-aliases&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f30eb96004f9bf4382b0a6ab5b624ece0c3d3201" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;term-file-prefix&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;term-file-prefix&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e398d9159d118db283fb9aec57fd618415718382" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;text-quoting-style&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;テキスト引用スタイル&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b300ae39b452fc803b0523327f30959605ebc0fe" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;three-step-help&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;3ステップヘルプ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b5c5c70a4a56ff9ab74ad77acffa2f11467f844" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;timer-max-repeats&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;timer-max-repeats&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2fc2a22a8e359b5ac0a4852ad4cfcff1bb7e601f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tooltip-frame-parameters&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;tooltip-frame-parameters&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d47ff3a2f50e36a97b4ad7cbc9408b6bd5fd7f97" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;transient-mark-mode&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;transient-mark-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9dd7936ee0951639bf0fd3e0effaa4496a105d2" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;truncate-lines&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;切り捨て行&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="072be005f3102f99e2a41226d54ad91c16668f32" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;truncate-partial-width-windows&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;truncate-partial-width-windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a3405291198f09371d3cb55d4e63e56bfeacf52" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;underline-minimum-offset&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;underline-minimum-offset&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40e4bfc8dfdb0e6a063c7aa9f58669568c3cef91" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;undo-ask-before-discard&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;undo-ask-before-discard&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11bafcfd995818dad19da4797a111aab176e3cdf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;undo-limit&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;元に戻す-制限&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3fa5f1b1aa067c429149e6db67333067b262f7db" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;undo-outer-limit&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;undo-outer-limit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74b2d3bae0a1cffb0386c84f322370bf9a8a9ab2" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;undo-strong-limit&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;undo-strong-limit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9912767bf86a847037ecaaa22fa1c2fea232e3b3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;user-mail-address&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;user-mail-address&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c96a62ba733c08a38da4667b78490e9f2ffda758" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;version-control&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;バージョン管理&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d3a9ce2bcdb48275ccdaa93d12c868d9bf33af7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;visible-bell&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;visible-bell&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18d36ee66aa82f89bb8eddb4f3290cb1f6720ddb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;void-text-area-pointer&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;void-text-area-pointer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f1e938519e13f216a3504489f3bb280dbb7c635" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;warning-minimum-level&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;警告-最小レベル&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d83b4b1937e016912ce72bc306f4c08856a7cad1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;warning-minimum-log-level&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;warning-minimum-log-level&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e928cc30beba638abb1c494ce1225cc5b3353089" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;warning-suppress-log-types&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;warning-suppress-log-types&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fba4d2f39ad852a4f3609d0684e4f62533ff2deb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;warning-suppress-types&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;warning-suppress-types&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53de0c555da42bc2fe8aa3e2f723c67952632ec7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-adjust-process-window-size-function&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;window-adjust-process-window-size-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b792d6805d6b6dd41d5b43ee69fa74b80b2d8e5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-combination-limit&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;window-combination-limit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="187fb24132852740b155c22b64a13a1a09b562a7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-combination-resize&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;window-combination-resize&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b7a7d3c4ceebe8b031bf8fe14986c101eae04cd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-min-height&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;window-min-height&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9164bb10b5ddf9f1bb0e79e8b11619648a12b2a7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-min-width&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;window-min-width&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2b3e88854df7a84c6ddcfdd1cb9c57b28fa4d31" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-resize-pixelwise&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;window-resize-pixelwise&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d89dec3a22b55b593c2e7750a2375300002483d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-sides-reversed&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;window-sides-reversed&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="615ed7728d91858ac0624a248aa03ccc5a31de1d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-sides-slots&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;window-sides-slots&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99bf091e7d31b65627a48aa97e3140fc9a4032dd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-sides-vertical&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;window-sides-vertical&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de4e17b6d7064f487c214da5878c69325d1038cb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;words-include-escapes&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;words-include-escapes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c45a675b2c67cc1d4bd06de53d8f87fd76a2534" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;x-bitmap-file-path&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;x-bitmap-file-path&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2dbe2dc654c85ab338898c68de51e878c4a440b1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;x-stretch-cursor&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;x-stretch-cursor&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8818578254b5734074b99780afe1fa82aa87ca73" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;yank-excluded-properties&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;yank-excluded-properties&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5ba98f6bdbb94daef0464f8ae60d624a645fe5d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;yank-handled-properties&lt;/strong&gt;</source>
          <target state="translated">ユーザーオプション：&lt;strong&gt;yank-handled-properties&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1de7235e5e18c45e9eee3f7459ead96aa520a838" translate="yes" xml:space="preserve">
          <source>User name corresponding to the process&amp;rsquo;s effective user ID, a string.</source>
          <target state="translated">プロセスの実効ユーザーIDに対応するユーザー名、文字列。</target>
        </trans-unit>
        <trans-unit id="7ea9da211f91ec53882d2cbfad3f68ea513110aa" translate="yes" xml:space="preserve">
          <source>User option descriptions have the same format, but &amp;lsquo;</source>
          <target state="translated">ユーザーオプションの説明は同じ形式ですが、 '</target>
        </trans-unit>
        <trans-unit id="924ea45dba9cfb737de93b201fb9138336e9f0d1" translate="yes" xml:space="preserve">
          <source>User-Chosen Coding Systems</source>
          <target state="translated">ユーザーが選ぶ符号化システム</target>
        </trans-unit>
        <trans-unit id="1e828498ee7c4a1a0818bba472ac957d278b44db" translate="yes" xml:space="preserve">
          <source>User-Level Deletion Commands</source>
          <target state="translated">ユーザーレベルの削除コマンド</target>
        </trans-unit>
        <trans-unit id="1dfe2708d6ba334c0751034b7ad614ba7d91f9dd" translate="yes" xml:space="preserve">
          <source>User-Level Insertion Commands</source>
          <target state="translated">ユーザーレベルの挿入コマンド</target>
        </trans-unit>
        <trans-unit id="fb5b174bf760eb8257b4356d98745298bae543fe" translate="yes" xml:space="preserve">
          <source>User-defined forms are allowed wherever arbitrary &lt;code&gt;rx&lt;/code&gt; expressions are expected; for example, in the body of a &lt;code&gt;zero-or-one&lt;/code&gt; form, but not inside &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;category&lt;/code&gt; forms. They are also allowed inside &lt;code&gt;not&lt;/code&gt; and &lt;code&gt;intersection&lt;/code&gt; forms.</source>
          <target state="translated">任意の &lt;code&gt;rx&lt;/code&gt; 式が必要な場合は常に、ユーザー定義の形式を使用できます。たとえば、 &lt;code&gt;zero-or-one&lt;/code&gt; フォームの本体にありますが、 &lt;code&gt;any&lt;/code&gt; フォームまたは &lt;code&gt;category&lt;/code&gt; フォームの内部にはありません。また、 &lt;code&gt;not&lt;/code&gt; および &lt;code&gt;intersection&lt;/code&gt; フォーム内でも許可されます。</target>
        </trans-unit>
        <trans-unit id="0914d12fede3ba9837cdc0fb8c03368b3883648f" translate="yes" xml:space="preserve">
          <source>User-level commands to delete text.</source>
          <target state="translated">テキストを削除するユーザーレベルのコマンド。</target>
        </trans-unit>
        <trans-unit id="760c2e5d6a2ed0b161891b3ed8da3b71c82542f7" translate="yes" xml:space="preserve">
          <source>User-level commands to insert text.</source>
          <target state="translated">テキストを挿入するユーザーレベルのコマンド。</target>
        </trans-unit>
        <trans-unit id="d8ad8ebea60071702ac3b98801544d46519b4e75" translate="yes" xml:space="preserve">
          <source>User-level facilities such as &lt;code&gt;save-some-buffers&lt;/code&gt; can save abbrevs in a file automatically, under the control of variables described here.</source>
          <target state="translated">&lt;code&gt;save-some-buffers&lt;/code&gt; などのユーザーレベルの機能は、ここで説明する変数の制御下で、略語をファイルに自動的に保存できます。</target>
        </trans-unit>
        <trans-unit id="016dcba589061035865effd67304a44827db53e0" translate="yes" xml:space="preserve">
          <source>Users of Emacs can customize variables and faces without writing Lisp code, by using the Customize interface. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Easy-Customization.html#Easy-Customization&quot;&gt;Easy Customization&lt;/a&gt; in</source>
          <target state="translated">Emacsのユーザーは、Customizeインターフェースを使用して、Lispコードを記述せずに変数と面をカスタマイズできます。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Easy-Customization.html#Easy-Customization&quot;&gt;簡単なカスタマイズ&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="073cb1a9f02790f1c382d66a5e165fbd879ed812" translate="yes" xml:space="preserve">
          <source>Users should not pose too many and too severe restrictions on how arbitrary buffers get displayed. Otherwise, they will risk to lose the characteristics of showing a buffer for a certain purpose. Suppose a Lisp program has been written to compare different versions of a buffer in two windows side-by-side. If the customization of &lt;code&gt;display-buffer-alist&lt;/code&gt; prescribes that any such buffer should be always shown in or below the selected window, the program will have a hard time to set up the desired window configuration via &lt;code&gt;display-buffer&lt;/code&gt;.</source>
          <target state="translated">ユーザーは、任意のバッファーの表示方法について、あまりにも多くの厳しい制限を課すべきではありません。そうしないと、特定の目的でバッファーを表示するという特性を失うリスクがあります。 Lispプログラムが、2つのウィンドウ内の異なるバージョンのバッファーを並べて比較するように作成されているとします。 &lt;code&gt;display-buffer-alist&lt;/code&gt; のカスタマイズで、そのようなバッファーを常に選択したウィンドウ内またはその下に表示するように規定されている場合、プログラムは &lt;code&gt;display-buffer&lt;/code&gt; を介して目的のウィンドウ構成をセットアップするのに苦労します。</target>
        </trans-unit>
        <trans-unit id="d3ff2b8805121b4b737f60e17ad2a4471c66f3a9" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;define-button-type&lt;/code&gt; to define default properties for buttons is not necessary&amp;mdash;buttons without any specified type use the built-in button-type &lt;code&gt;button&lt;/code&gt;&amp;mdash;but it is encouraged, since doing so usually makes the resulting code clearer and more efficient.</source>
          <target state="translated">使用して &lt;code&gt;define-button-type&lt;/code&gt; ボタンのデフォルトプロパティを定義することは、内蔵ボタン型のいずれかの指定された型を使用せずに、必要なボタン操作ではありません &lt;code&gt;button&lt;/code&gt; そうすることが、通常は結果のコードがより明確かつ効率的になりますので、それは、奨励される-ブタ。</target>
        </trans-unit>
        <trans-unit id="507877882630243a7ce7ff32f7d32c64ee159759" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;defvar&lt;/code&gt; without a value, it is possible to bind a variable dynamically just in one file, or in just one part of a file while still binding it lexically elsewhere. For example:</source>
          <target state="translated">値なしで &lt;code&gt;defvar&lt;/code&gt; を使用すると、変数を1つのファイルだけで動的にバインドしたり、ファイルの一部だけで動的にバインドしたりしながら、他の場所で字句的にバインドすることができます。例えば：</target>
        </trans-unit>
        <trans-unit id="7e80543e1e49de1a96e62663bd68adf904370039" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;format-alist&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format-alist&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="7ccb759ca3677aabfad1af8b10708463e0b51ad0" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;make-network-process&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make-network-process&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="db4348769ca897770226b71b32116b0169de0af5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;save-current-buffer&lt;/code&gt; or &lt;code&gt;with-current-buffer&lt;/code&gt;, as we did, correctly handles quitting, errors, and &lt;code&gt;throw&lt;/code&gt;, as well as ordinary evaluation.</source>
          <target state="translated">&lt;code&gt;save-current-buffer&lt;/code&gt; または &lt;code&gt;with-current-buffer&lt;/code&gt; を使用すると、通常の評価だけでなく、終了、エラー、 &lt;code&gt;throw&lt;/code&gt; 正しく処理されます。</target>
        </trans-unit>
        <trans-unit id="f7f934e347d52fbd65d974a6bf9703170eacea74" translate="yes" xml:space="preserve">
          <source>Using Edebug</source>
          <target state="translated">Edebugの使用</target>
        </trans-unit>
        <trans-unit id="4b15083f2f55228225f883511993852a1c781cc9" translate="yes" xml:space="preserve">
          <source>Using Lexical Binding</source>
          <target state="translated">語彙的バインディングの使用</target>
        </trans-unit>
        <trans-unit id="b03b6832c9a810aee38ef3d568c1355d93e602b9" translate="yes" xml:space="preserve">
          <source>Using Lists as Sets</source>
          <target state="translated">リストをセットとして使う</target>
        </trans-unit>
        <trans-unit id="62c447976c01d9a4f5d0e19fbea8379041fbd394" translate="yes" xml:space="preserve">
          <source>Using a reporter object as the &lt;var&gt;reporter-or-message&lt;/var&gt; argument is useful if you want to specify the optional arguments in &lt;var&gt;make-progress-reporter&lt;/var&gt;. For instance, you can write the previous example as follows:</source>
          <target state="translated">&lt;var&gt;make-progress-reporter&lt;/var&gt; でオプションの引数を指定する場合は、レポーターオブジェクトを &lt;var&gt;reporter-or-message&lt;/var&gt; 引数として使用すると便利です。たとえば、前の例を次のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="205f104bb020f38a62085e15c61ad67a762df080" translate="yes" xml:space="preserve">
          <source>Using an alist to specify conversions gives rise to some useful properties:</source>
          <target state="translated">変換を指定するためにalistを使用すると,いくつかの便利なプロパティが得られます。</target>
        </trans-unit>
        <trans-unit id="d5e5bba75e7cf96fcaa85285c5cd69704e0d3648" translate="yes" xml:space="preserve">
          <source>Using bindat to pack and unpack binary data.</source>
          <target state="translated">bindat を使ってバイナリデータをパックしたり解凍したりします。</target>
        </trans-unit>
        <trans-unit id="1802746be476744aea6b38f0de7463e8ec32dea5" translate="yes" xml:space="preserve">
          <source>Using command aliases in menu items.</source>
          <target state="translated">メニュー項目でコマンドエイリアスを使用する</target>
        </trans-unit>
        <trans-unit id="6feb767b97f9e00ed5b6b489effa8307a4645014" translate="yes" xml:space="preserve">
          <source>Using completion to read file names and shell commands.</source>
          <target state="translated">補完を使ってファイル名やシェルコマンドを読み取る</target>
        </trans-unit>
        <trans-unit id="bd870a5d90a07a6d28b538e446a4aac640e031cc" translate="yes" xml:space="preserve">
          <source>Using interactive</source>
          <target state="translated">対話型の使用</target>
        </trans-unit>
        <trans-unit id="afb897c6f70341e0c1fa71a2c50417e796c5ccf9" translate="yes" xml:space="preserve">
          <source>Using pcase patterns to extract subfields.</source>
          <target state="translated">pcaseパターンを使ってサブフィールドを抽出する</target>
        </trans-unit>
        <trans-unit id="b7f122774f1889c6feb365b1f55c6257fd361088" translate="yes" xml:space="preserve">
          <source>Using symbols in programs to stand for values.</source>
          <target state="translated">プログラムの中で記号を使って値を表す</target>
        </trans-unit>
        <trans-unit id="7b3fece2328c443bec9ec80fb28a0616ec779b0e" translate="yes" xml:space="preserve">
          <source>Using text properties in the mode line.</source>
          <target state="translated">モードラインでのテキストプロパティの使用</target>
        </trans-unit>
        <trans-unit id="4fb999282d5753b2cc18251ca1c23c3341ffbab5" translate="yes" xml:space="preserve">
          <source>Using text properties to make regions of text do something when you click on them.</source>
          <target state="translated">テキストのプロパティを使用して、テキストの領域をクリックしたときに何かをするようにします。</target>
        </trans-unit>
        <trans-unit id="f90be5f76d735c2d7a72679b0a07f29c0c1c2fa8" translate="yes" xml:space="preserve">
          <source>Using the &lt;var&gt;persistent&lt;/var&gt; argument of &lt;code&gt;set-window-scroll-bars&lt;/code&gt; and &lt;code&gt;set-window-fringes&lt;/code&gt; (see &lt;a href=&quot;fringe-size_002fpos#Fringe-Size_002fPos&quot;&gt;Fringe Size/Pos&lt;/a&gt;) you can reliably and permanently turn off scroll bars and/or fringes in any minibuffer window by adding the following snippet to your early init file (see &lt;a href=&quot;init-file#Init-File&quot;&gt;Init File&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;set-window-scroll-bars&lt;/code&gt; と &lt;code&gt;set-window-fringes&lt;/code&gt; の &lt;var&gt;persistent&lt;/var&gt; 引数（&lt;a href=&quot;fringe-size_002fpos#Fringe-Size_002fPos&quot;&gt;フリンジサイズ/位置を&lt;/a&gt;参照）を使用すると、次のスニペットをアーリーに追加することで、ミニバッファーウィンドウのスクロールバーやフリンジを確実かつ永続的にオフにできます。初期化ファイル（参照&lt;a href=&quot;init-file#Init-File&quot;&gt;初期化ファイルを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="845af645f6b5ea1d7ffb87dcb9e348ff5e3549a1" translate="yes" xml:space="preserve">
          <source>Using the Debugger</source>
          <target state="translated">デバッガの使用</target>
        </trans-unit>
        <trans-unit id="67d5f08a0f0cb5ef571645c16fd7a0663a9e7a84" translate="yes" xml:space="preserve">
          <source>Using the GNU Compiler Collection</source>
          <target state="translated">GNUコンパイラ・コレクションを使う</target>
        </trans-unit>
        <trans-unit id="a5798d72ad4fcb99b7225108b09ea92cb4ad8bcc" translate="yes" xml:space="preserve">
          <source>Using the first element in &lt;var&gt;coordinate-sets&lt;/var&gt;, draw a cubic B&amp;eacute;zier curve from the current point. If there are multiple coordinate sets, draw a polybezier. Each coordinate set is a list of the form &lt;code&gt;(&lt;var&gt;x1&lt;/var&gt; &lt;var&gt;y1&lt;/var&gt; &lt;var&gt;x2&lt;/var&gt; &lt;var&gt;y2&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;) is the curve&amp;rsquo;s end point. (&lt;var&gt;x1&lt;/var&gt;, &lt;var&gt;y1&lt;/var&gt;) and (&lt;var&gt;x2&lt;/var&gt;, &lt;var&gt;y2&lt;/var&gt;) are control points at the beginning and at the end, respectively.</source>
          <target state="translated">&lt;var&gt;coordinate-sets&lt;/var&gt; の最初の要素を使用して、現在のポイントから3次ベジェ曲線を描画します。複数の座標セットがある場合は、ポリベジエを描画します。各座標セットは、形式 &lt;code&gt;(&lt;var&gt;x1&lt;/var&gt; &lt;var&gt;y1&lt;/var&gt; &lt;var&gt;x2&lt;/var&gt; &lt;var&gt;y2&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; のリストです。ここで、（ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ）は曲線の終点です。 （ &lt;var&gt;x1&lt;/var&gt; 、 &lt;var&gt;y1&lt;/var&gt; ）と（ &lt;var&gt;x2&lt;/var&gt; 、 &lt;var&gt;y2&lt;/var&gt; ）は、それぞれ最初と最後の制御点です。</target>
        </trans-unit>
        <trans-unit id="8607cfbfe7607bcd97cb2731ef458e12b3b2fdd0" translate="yes" xml:space="preserve">
          <source>Using the first element in &lt;var&gt;coordinate-sets&lt;/var&gt;, draw a cubic B&amp;eacute;zier curve from the current point. If there are multiple coordinate sets, draw a polybezier. Each coordinate set is a list of the form &lt;code&gt;(&lt;var&gt;x2&lt;/var&gt; &lt;var&gt;y2&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;) is the curve&amp;rsquo;s end point and (&lt;var&gt;x2&lt;/var&gt;, &lt;var&gt;y2&lt;/var&gt;) is the corresponding control point. The first control point is the reflection of the second control point of the previous command relative to the current point, if that command was &lt;code&gt;curveto&lt;/code&gt; or &lt;code&gt;smooth-curveto&lt;/code&gt;. Otherwise the first control point coincides with the current point.</source>
          <target state="translated">&lt;var&gt;coordinate-sets&lt;/var&gt; の最初の要素を使用して、現在のポイントから3次ベジェ曲線を描画します。複数の座標セットがある場合は、ポリベジエを描画します。各座標セットは、 &lt;code&gt;(&lt;var&gt;x2&lt;/var&gt; &lt;var&gt;y2&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; の形式のリストです。ここで、（ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ）は曲線の終点であり、（ &lt;var&gt;x2&lt;/var&gt; 、 &lt;var&gt;y2&lt;/var&gt; ）は対応する制御点です。コマンドが &lt;code&gt;curveto&lt;/code&gt; または &lt;code&gt;smooth-curveto&lt;/code&gt; の場合、最初の制御点は、現在の点に対する前のコマンドの2番目の制御点の反映です。それ以外の場合、最初の制御点は現在の点と一致します。</target>
        </trans-unit>
        <trans-unit id="33c42fd0fe0681d5844e8882c20b96f73ac7ba77" translate="yes" xml:space="preserve">
          <source>Using the first element in &lt;var&gt;coordinate-sets&lt;/var&gt;, draw a quadratic B&amp;eacute;zier curve from the current point. If there are multiple coordinate sets, draw a polybezier. Each coordinate set is a list of the form &lt;code&gt;(&lt;var&gt;x1&lt;/var&gt; &lt;var&gt;y1&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;) is the curve&amp;rsquo;s end point and (&lt;var&gt;x1&lt;/var&gt;, &lt;var&gt;y1&lt;/var&gt;) is the control point.</source>
          <target state="translated">&lt;var&gt;coordinate-sets&lt;/var&gt; の最初の要素を使用して、現在の点から2次ベジェ曲線を描きます。複数の座標セットがある場合は、ポリベジエを描画します。各座標セットは、 &lt;code&gt;(&lt;var&gt;x1&lt;/var&gt; &lt;var&gt;y1&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; の形式のリストです。ここで、（ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ）は曲線の終点であり、（ &lt;var&gt;x1&lt;/var&gt; 、 &lt;var&gt;y1&lt;/var&gt; ）は制御点です。</target>
        </trans-unit>
        <trans-unit id="c19dd1f643d1da36df54f9fa72bb47b3c42164f2" translate="yes" xml:space="preserve">
          <source>Using the first element in &lt;var&gt;coordinate-sets&lt;/var&gt;, draw a quadratic B&amp;eacute;zier curve from the current point. If there are multiple coordinate sets, draw a polybezier. Each coordinate set is a list of the form &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;) is the curve&amp;rsquo;s end point. The control point is the reflection of the control point of the previous command relative to the current point, if that command was &lt;code&gt;quadratic-bezier-curveto&lt;/code&gt; or &lt;code&gt;smooth-quadratic-bezier-curveto&lt;/code&gt;. Otherwise the control point coincides with the current point.</source>
          <target state="translated">&lt;var&gt;coordinate-sets&lt;/var&gt; の最初の要素を使用して、現在の点から2次ベジェ曲線を描きます。複数の座標セットがある場合は、ポリベジエを描画します。各座標セットは、 &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; の形式のリストです。ここで、（ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ）は曲線の終点です。制御点は、そのコマンドが &lt;code&gt;quadratic-bezier-curveto&lt;/code&gt; または &lt;code&gt;smooth-quadratic-bezier-curveto&lt;/code&gt; であった場合、現在の点に対する前のコマンドの制御点の反映です。それ以外の場合、制御点は現在の点と一致します。</target>
        </trans-unit>
        <trans-unit id="78017e08e4c0da9c01bf13555ba41b7cf9c572df" translate="yes" xml:space="preserve">
          <source>Using the first element in &lt;var&gt;coordinate-sets&lt;/var&gt;, draw an elliptical arc from the current point. If there are multiple coordinate sets, draw a sequence of elliptical arcs. Each coordinate set is a list of the form &lt;code&gt;(&lt;var&gt;rx&lt;/var&gt; &lt;var&gt;ry&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;) is the end point of the ellipse, and (&lt;var&gt;rx&lt;/var&gt;, &lt;var&gt;ry&lt;/var&gt;) are its radii. Attributes may be appended to the list:</source>
          <target state="translated">&lt;var&gt;coordinate-sets&lt;/var&gt; の最初の要素を使用して、現在の点から楕円弧を描きます。複数の座標セットがある場合は、一連の楕円弧を描画します。各座標セットは、 &lt;code&gt;(&lt;var&gt;rx&lt;/var&gt; &lt;var&gt;ry&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; の形式のリストです。ここで、（ &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ）は楕円の終点であり、（ &lt;var&gt;rx&lt;/var&gt; 、 &lt;var&gt;ry&lt;/var&gt; ）はその半径です。属性はリストに追加できます：</target>
        </trans-unit>
        <trans-unit id="7be49b5e5c7a33e195d62a77829135efa43c037e" translate="yes" xml:space="preserve">
          <source>Using the minibuffer to read input.</source>
          <target state="translated">ミニバッファを使って入力を読み込んでいます。</target>
        </trans-unit>
        <trans-unit id="f7505ee25600083f29457ce4a7ee395181c7cf5d" translate="yes" xml:space="preserve">
          <source>Using the module</source>
          <target state="translated">モジュールを使用して</target>
        </trans-unit>
        <trans-unit id="8d768b22b5b81aa1c86e79689008416c960b7ad9" translate="yes" xml:space="preserve">
          <source>Using this option may require special privileges on some systems.</source>
          <target state="translated">このオプションを使用すると、システムによっては特別な権限が必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="b26d9004a1fd1e976a780d938c440fed4f12515f" translate="yes" xml:space="preserve">
          <source>Using this transport, the JSONRPC messages are encoded on the wire as plain text and prefaced by some basic HTTP-style enveloping headers, such as &amp;ldquo;Content-Length&amp;rdquo;.</source>
          <target state="translated">このトランスポートを使用して、JSONRPCメッセージはプレーンテキストとしてネットワーク上でエンコードされ、「Content-Length」などのいくつかの基本的なHTTPスタイルのエンベロープヘッダーが前に付けられます。</target>
        </trans-unit>
        <trans-unit id="2e3bbc57e7ecf30215f79db6fcfe7bca11189b47" translate="yes" xml:space="preserve">
          <source>Usual Display Conventions</source>
          <target state="translated">通常の表示方法</target>
        </trans-unit>
        <trans-unit id="ad5f0a9ee46915e3da4ecb9449eeff7d4c18cfa4" translate="yes" xml:space="preserve">
          <source>Usual PC monitors have a screen gamma of 2.2, so color values in Emacs, and in X windows generally, are calibrated to display properly on a monitor with that gamma value. If you specify 2.2 for &lt;code&gt;screen-gamma&lt;/code&gt;, that means no correction is needed. Other values request correction, designed to make the corrected colors appear on your screen the way they would have appeared without correction on an ordinary monitor with a gamma value of 2.2.</source>
          <target state="translated">通常のPCモニターの画面ガンマは2.2であるため、EmacsおよびXウィンドウのカラー値は、通常、そのガンマ値のモニターで正しく表示されるように調整されています。 &lt;code&gt;screen-gamma&lt;/code&gt; に2.2を指定した場合、それは修正が不要であることを意味します。他の値は修正を要求します。修正された色が、ガンマ値が2.2の通常のモニターで修正されていない場合と同じように画面に表示されるように設計されています。</target>
        </trans-unit>
        <trans-unit id="d8a9652e07fdba948c91b8e1799d7dc8298b8437" translate="yes" xml:space="preserve">
          <source>Usually it&amp;rsquo;s best to use &lt;code&gt;overriding-local-map&lt;/code&gt; as the expression for &lt;var&gt;keymap&lt;/var&gt;. Then &lt;code&gt;where-is-internal&lt;/code&gt; searches precisely the keymaps that are active. To search only the global map, pass the value &lt;code&gt;(keymap)&lt;/code&gt; (an empty keymap) as &lt;var&gt;keymap&lt;/var&gt;.</source>
          <target state="translated">通常、 &lt;var&gt;keymap&lt;/var&gt; の式として &lt;code&gt;overriding-local-map&lt;/code&gt; を使用するのが最善です。次に &lt;code&gt;where-is-internal&lt;/code&gt; は、アクティブなキーマップを正確に検索します。グローバルマップのみを検索するには、値 &lt;code&gt;(keymap)&lt;/code&gt; （空のキーマップ）を &lt;var&gt;keymap&lt;/var&gt; として渡します。</target>
        </trans-unit>
        <trans-unit id="6c82832b7dd765e152b9fc84537c6ced1bf62aef" translate="yes" xml:space="preserve">
          <source>Usually the value of &lt;code&gt;help-form&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. Then the help character has no special meaning at the level of command input, and it becomes part of a key sequence in the normal way. The standard key binding of</source>
          <target state="translated">通常、 &lt;code&gt;help-form&lt;/code&gt; の値は &lt;code&gt;nil&lt;/code&gt; です。その場合、ヘルプ文字はコマンド入力のレベルでは特別な意味を持たず、通常の方法でキーシーケンスの一部になります。の標準キーバインディング</target>
        </trans-unit>
        <trans-unit id="a385e6e4a6245a46630df8ddd8fd2679076ce468" translate="yes" xml:space="preserve">
          <source>Usually this function is called when the next input event arrives after displaying an echo-area message. The function is expected to clear the message displayed by its counterpart function specified by &lt;code&gt;set-message-function&lt;/code&gt;.</source>
          <target state="translated">通常、この関数は、エコー領域メッセージを表示した後、次の入力イベントが到着したときに呼び出されます。この関数は、 &lt;code&gt;set-message-function&lt;/code&gt; で指定された対応する関数によって表示されたメッセージをクリアすることが期待されています。</target>
        </trans-unit>
        <trans-unit id="f8f11570428f4529fd87952bdb9ba00c3da9a496" translate="yes" xml:space="preserve">
          <source>Usually, a function is implemented as a primitive because it is a fundamental part of Lisp (e.g., &lt;code&gt;car&lt;/code&gt;), or because it provides a low-level interface to operating system services, or because it needs to run fast. Unlike functions defined in Lisp, primitives can be modified or added only by changing the C sources and recompiling Emacs. See &lt;a href=&quot;writing-emacs-primitives#Writing-Emacs-Primitives&quot;&gt;Writing Emacs Primitives&lt;/a&gt;.</source>
          <target state="translated">通常、関数はLispの基本的な部分（たとえば、 &lt;code&gt;car&lt;/code&gt; ）であるため、オペレーティングシステムサービスへの低レベルのインターフェイスを提供するため、または高速で実行する必要があるため、プリミティブとして実装されます。Lispで定義されている関数とは異なり、プリミティブはCソースを変更してEmacsを再コンパイルすることによってのみ変更または追加できます。&lt;a href=&quot;writing-emacs-primitives#Writing-Emacs-Primitives&quot;&gt;Emacsプリミティブの記述を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8fbabc42b68953507e477df44ec250d700d7774e" translate="yes" xml:space="preserve">
          <source>Usually, child frames do not exhibit window manager decorations like a title bar or external borders (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;). When the child frame does not show a menu or tool bar, any other of the frame&amp;rsquo;s borders (see &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Layout Parameters&lt;/a&gt;) can be used instead of the external borders.</source>
          <target state="translated">通常、子フレームには、タイトルバーや外部境界線などのウィンドウマネージャーの装飾は表示されません（&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;フレームジオメトリを&lt;/a&gt;参照）。子フレームにメニューまたはツールバーが表示されない場合は、外部の境界線の代わりに、フレームの他の境界線（&lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;レイアウトパラメータを&lt;/a&gt;参照）を使用できます。</target>
        </trans-unit>
        <trans-unit id="9f387a3c3858f1e35ee5cdc8abd757df62aabda5" translate="yes" xml:space="preserve">
          <source>Usually, moving a parent frame moves along all its child frames and their descendants as well, keeping their relative positions unaltered. Note that the hook &lt;code&gt;move-frame-functions&lt;/code&gt; (see &lt;a href=&quot;frame-position#Frame-Position&quot;&gt;Frame Position&lt;/a&gt;) is run for a child frame only when the position of the child frame relative to its parent frame changes.</source>
          <target state="translated">通常、親フレームを移動すると、すべての子フレームとその子孫にも沿って移動し、相対位置は変更されません。フック &lt;code&gt;move-frame-functions&lt;/code&gt; （&lt;a href=&quot;frame-position#Frame-Position&quot;&gt;フレーム位置を&lt;/a&gt;参照）は、親フレームに対する子フレームの位置が変更された場合にのみ、子フレームに対して実行されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dc9c0beada3128b35482d65aae16abbbc5f26533" translate="yes" xml:space="preserve">
          <source>Usually, no horizontal scrolling is in effect; then the leftmost column is at the left edge of the window. In this state, scrolling to the right is meaningless, since there is no data to the left of the edge to be revealed by it; so this is not allowed. Scrolling to the left is allowed; it scrolls the first columns of text off the edge of the window and can reveal additional columns on the right that were truncated before. Once a window has a nonzero amount of leftward horizontal scrolling, you can scroll it back to the right, but only so far as to reduce the net horizontal scroll to zero. There is no limit to how far left you can scroll, but eventually all the text will disappear off the left edge.</source>
          <target state="translated">通常、横スクロールは行われておらず、一番左の列がウィンドウの左端にある状態です。この状態では、右へのスクロールはエッジの左側にはデータがないので意味がない。左へのスクロールは許可されています。これは、ウィンドウの端からテキストの最初の列をスクロールし、以前は切り捨てられていた右の追加の列を明らかにすることができます。ウィンドウの左方向への水平スクロールがゼロではない量になると、ウィンドウを右方向に戻すことができますが、水平スクロールの正味量がゼロになる程度までしかスクロールすることができません。どこまで左にスクロールできるかに制限はありませんが、最終的にはすべてのテキストが左端から消えてしまいます。</target>
        </trans-unit>
        <trans-unit id="ea62aa2fe86a457a72fe4de5203baf8fc2f210d4" translate="yes" xml:space="preserve">
          <source>Usually, the active keymaps are: (i) the keymap specified by the &lt;code&gt;keymap&lt;/code&gt; property, (ii) the keymaps of enabled minor modes, (iii) the current buffer&amp;rsquo;s local keymap, and (iv) the global keymap, in that order. Emacs searches for each input key sequence in all these keymaps.</source>
          <target state="translated">通常、アクティブなキーマップは、（i） &lt;code&gt;keymap&lt;/code&gt; プロパティで指定されたキーマップ、（ii）有効なマイナーモードのキーマップ、（iii）現在のバッファのローカルキーマップ、（iv）グローバルキーマップの順です。Emacsは、これらすべてのキーマップで各入力キーシーケンスを検索します。</target>
        </trans-unit>
        <trans-unit id="9b9fb838eb5fcdc300a49526342dda78379aacd1" translate="yes" xml:space="preserve">
          <source>Usually, the records are rearranged in order of ascending sort key. If the first argument to the &lt;code&gt;sort-subr&lt;/code&gt; function, &lt;var&gt;reverse&lt;/var&gt;, is non-&lt;code&gt;nil&lt;/code&gt;, the sort records are rearranged in order of descending sort key.</source>
          <target state="translated">通常、レコードはソートキーの昇順で並べ替えられます。 &lt;code&gt;sort-subr&lt;/code&gt; 関数の最初の引数 &lt;var&gt;reverse&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、ソートレコードはソートキーの降順で再配置されます。</target>
        </trans-unit>
        <trans-unit id="3b041849051a37134572bb487f95e27b79674028" translate="yes" xml:space="preserve">
          <source>Usually, this function returns the fill prefix, a string. However, before doing this, the function makes a final check (not specially mentioned in the following) that a line starting with this prefix wouldn&amp;rsquo;t look like the start of a paragraph. Should this happen, the function signals the anomaly by returning &lt;code&gt;nil&lt;/code&gt; instead.</source>
          <target state="translated">通常、この関数は塗りつぶしプレフィックスである文字列を返します。ただし、これを行う前に、関数は、このプレフィックスで始まる行が段落の先頭のように見えないことを最終チェックします（以下では特に言及しません）。これが発生した場合、関数は代わりに &lt;code&gt;nil&lt;/code&gt; を返すことによって異常を通知します。</target>
        </trans-unit>
        <trans-unit id="7fac3b4d5003c79523fe0f703a0c72bb5d7727dc" translate="yes" xml:space="preserve">
          <source>Utility functions:</source>
          <target state="translated">ユーティリティ機能。</target>
        </trans-unit>
        <trans-unit id="9303be7e663e13165b626f75ad7f1ef9bd96eba2" translate="yes" xml:space="preserve">
          <source>Valid RGB values are described in &lt;a href=&quot;color-names#Color-Names&quot;&gt;Color Names&lt;/a&gt;.</source>
          <target state="translated">有効なRGB値は、&lt;a href=&quot;color-names#Color-Names&quot;&gt;色の名前で&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="ea32ee2963c0ab05a7001c3313cbf39dcb651b15" translate="yes" xml:space="preserve">
          <source>Value is either 1 or 0, depending on whether &lt;code&gt;normal-erase-is-backspace-mode&lt;/code&gt; is turned on or off on this terminal. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/DEL-Does-Not-Delete.html#DEL-Does-Not-Delete&quot;&gt;DEL Does Not Delete&lt;/a&gt; in</source>
          <target state="translated">この端末で &lt;code&gt;normal-erase-is-backspace-mode&lt;/code&gt; がオンになっているかオフになっているかに応じて、値は1または0になります。参照&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/DEL-Does-Not-Delete.html#DEL-Does-Not-Delete&quot;&gt;DELん削除しない&lt;/a&gt;で</target>
        </trans-unit>
        <trans-unit id="27fec02551d2c7b23758814b159a5dd18c8d9bf7" translate="yes" xml:space="preserve">
          <source>Value is the integer unique ID of the notification that can be used to remove the notification using &lt;code&gt;w32-notification-close&lt;/code&gt;, described below. If the function fails, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">値は、以下で説明する &lt;code&gt;w32-notification-close&lt;/code&gt; を使用して通知を削除するために使用できる通知の整数の一意のIDです。関数が失敗した場合、戻り値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="97a0b0ead5d29482d2854affebf4ac2810d1dede" translate="yes" xml:space="preserve">
          <source>Value must be a function of a single argument, the &lt;code&gt;jsonrpc-process-connection&lt;/code&gt; object. The function is called after the underlying process object has been deleted (either deliberately by &lt;code&gt;jsonrpc-shutdown&lt;/code&gt;, or unexpectedly, because of some external cause).</source>
          <target state="translated">値は、単一の引数 &lt;code&gt;jsonrpc-process-connection&lt;/code&gt; オブジェクトの関数である必要があります。この関数は、基になるプロセスオブジェクトが削除された後に呼び出されます（ &lt;code&gt;jsonrpc-shutdown&lt;/code&gt; によって意図的に、または何らかの外部原因のために予期せずに）。</target>
        </trans-unit>
        <trans-unit id="10f70f2ede4a93ca4e2ea44b3cbb460825ad069b" translate="yes" xml:space="preserve">
          <source>Value must be a live process object or a function of no arguments producing one such object. If passed a process object, the object is expected to contain a pre-established connection; otherwise, the function is called immediately after the object is made.</source>
          <target state="translated">値は、ライブのプロセスオブジェクトか、そのようなオブジェクトを生成する引数のない関数でなければなりません。プロセスオブジェクトが渡された場合、そのオブジェクトには事前に確立された接続が含まれていることが期待されます。</target>
        </trans-unit>
        <trans-unit id="fb9f869922fac372b4eb1e810a4a38f0c49180dc" translate="yes" xml:space="preserve">
          <source>Value of the last field processed.</source>
          <target state="translated">最後に処理されたフィールドの値。</target>
        </trans-unit>
        <trans-unit id="8fd35ac25d6d0ab9b948eca26cb84bd76d2b9225" translate="yes" xml:space="preserve">
          <source>Values can be the symbols &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;when-mapped&lt;/code&gt;, or &lt;code&gt;not-useful&lt;/code&gt;. The function can also return &lt;code&gt;nil&lt;/code&gt; when the question is inapplicable to a certain kind of display.</source>
          <target state="translated">値は、 &lt;code&gt;always&lt;/code&gt; 、 &lt;code&gt;when-mapped&lt;/code&gt; 、または &lt;code&gt;not-useful&lt;/code&gt; シンボルにすることができます。この関数は、質問が特定の種類の表示に適用できない場合にも &lt;code&gt;nil&lt;/code&gt; を返すことができます。</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="7e50dbc760408fb500260afea8b047b38d0007e8" translate="yes" xml:space="preserve">
          <source>Variable Aliases</source>
          <target state="translated">変数の別名</target>
        </trans-unit>
        <trans-unit id="1e81fac2c7879f6589f4e7917936fbc714b78210" translate="yes" xml:space="preserve">
          <source>Variable aliases are convenient for replacing an old name for a variable with a new name. &lt;code&gt;make-obsolete-variable&lt;/code&gt; declares that the old name is obsolete and therefore that it may be removed at some stage in the future.</source>
          <target state="translated">変数エイリアスは、変数の古い名前を新しい名前に置き換えるのに便利です。 &lt;code&gt;make-obsolete-variable&lt;/code&gt; は、古い名前が廃止されたため、将来のある段階で削除される可能性があることを宣言します。</target>
        </trans-unit>
        <trans-unit id="5328b4a344a25829c6d43b1c8a757f75ced9250c" translate="yes" xml:space="preserve">
          <source>Variable values in effect only in one buffer.</source>
          <target state="translated">1つのバッファ内でのみ有効な変数値。</target>
        </trans-unit>
        <trans-unit id="64b77fd2c3194f1999e81482226ab5e74b0b4528" translate="yes" xml:space="preserve">
          <source>Variable values that exist only temporarily.</source>
          <target state="translated">一時的にしか存在しない変数値。</target>
        </trans-unit>
        <trans-unit id="6a0e70f15443599912e2ebe9fa29e3f5e7a88104" translate="yes" xml:space="preserve">
          <source>Variable values that exist permanently, everywhere.</source>
          <target state="translated">どこにでも恒久的に存在する変数値。</target>
        </trans-unit>
        <trans-unit id="f7a3501076850280c5cfc97caa779a34c98dbdd0" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrev-expand-function&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;abbrev-expand-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33808904c2fa1c9855605ab44950be7a4edd2970" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrev-minor-mode-table-alist&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;abbrev-minor-mode-table-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74183064d32636f4099cb1fd975697c3a4201c34" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrev-start-location-buffer&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;abbrev-start-location-buffer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f94f4c98db644fe81df061b14ddac64605eba34" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrev-start-location&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;abbrev-start-location&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47e94df2550463086bd3bb16c19b477072ef921e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrev-table-name-list&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;abbrev-table-name-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="016a31c3a2d4212df698cb095ea2509a574aa665" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrevs-changed&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;略語-変更&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1513d387d78c29996055b161f0a7afa8db403f4a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;activate-mark-hook&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;activate-mark-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="242dc639864126b7024c078ef93109fd927e5d3f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-change-functions&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;変更後の関数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b74a7c414ed36d6229dcfe78bc5f686c183d1832" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-change-major-mode-hook&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;変更後-メジャー-モード-フック&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1df72d09e159c3c938dfbf526d3cc5a1b98f49c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-focus-change-function&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;after-focus-change-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f2a28059dc38c6e6e1e674c0da6c7521120a093c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-init-hook&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;after-init-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8659e75230e10d890b526a96369c02b7a89c1b61" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-insert-file-functions&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;after-insert-file-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea92b9bf812aa138f462af09efa08b7346d3adbd" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-load-functions&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;後負荷関数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7090e66024352f23061910053c293e2194ac1953" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-make-frame-functions&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;after-make-frame-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f7075690f7f1ac5e0597adb68c7c9c357259a6d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-revert-hook&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;アフターリバートフック&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8fa557c5b5f530320075e9f06c8e20eee45aa6f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;ascii-case-table&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;ascii-case-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c0023efb5f53f4c2d08e17e0b9fdbaa3723bab6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-fill-chars&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;auto-fill-chars&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2bd1dbf30bcd5f5d23cf26f523eab2ad56bdeadc" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-fill-function&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;自動入力機能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="21da8ffa2dd9d317e33f938bea16a95d493fc54a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-mode-alist&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;auto-mode-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a3281bcc6d12d375b7e121e2be57203e790a022" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-raise-tool-bar-buttons&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;auto-raise-tool-bar-buttons&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45e8558758e110107557214d8b354cccbda7ea1d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-resize-tool-bars&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;auto-resize-tool-bars&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="025ec1f413272cddcd07c4a634c584beea58b8e3" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-save-hook&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;自動保存フック&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="171a642e185227a72766f2c35d638cb346363bff" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-save-list-file-name&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;auto-save-list-file-name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd0283f5e93ae7621381ad25ad6ff3b5999e2a89" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-window-vscroll&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;auto-window-vscroll&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f26775ebce6d195c0edbd9b246482a52fb91ca50" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;backup-enable-predicate&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;backup-enable-predicate&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ed1688ce62143c5c0d1c7ac505e1329f262fba2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;backup-inhibited&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;バックアップ禁止&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d04a4fa335fe7697599d15570860b1d73bc6b29c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;before-change-functions&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;変更前の関数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c33d44f6716dcffc0a75e506f670bb8953768510" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;before-hack-local-variables-hook&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;before-hack-local-variables-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="160c62b6e327e365b2a48fbcd1359366110d5d57" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;before-init-hook&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;before-init-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7a06fe895df569728125c2dcce6f1a11092ba22" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;before-make-frame-hook&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;before-make-frame-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26256f794e2e98edfbcf81376a5bbae7ef01eddf" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;before-revert-hook&lt;/strong&gt;</source>
          <target state="translated">変数：&lt;strong&gt;before-revert-hook&lt;/strong&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
