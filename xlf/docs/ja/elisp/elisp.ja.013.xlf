<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="a3cc802195680348f44cbb231be84a5dc54879b0" translate="yes" xml:space="preserve">
          <source>Quitting is normally inhibited within a filter function&amp;mdash;otherwise, the effect of typing</source>
          <target state="translated">終了は通常、フィルター関数内で禁止されています。それ以外の場合は、入力の効果</target>
        </trans-unit>
        <trans-unit id="bc4c3d62226322f769a0d6b8e7d498f28cdd2558" translate="yes" xml:space="preserve">
          <source>Quitting is normally inhibited within a sentinel&amp;mdash;otherwise, the effect of typing</source>
          <target state="translated">通常、センチネル内では終了が禁止されています。それ以外の場合は、入力の影響があります。</target>
        </trans-unit>
        <trans-unit id="e1567648fe08fe203926902f68e917e061f091c5" translate="yes" xml:space="preserve">
          <source>Quitting is suppressed when the first character is read, so that the user can enter a</source>
          <target state="translated">最初の文字が読み込まれた時点で終了が抑制されているので、ユーザーは</target>
        </trans-unit>
        <trans-unit id="db8553935753703e44d0db50c86241ee32525977" translate="yes" xml:space="preserve">
          <source>Quitting is suppressed while running &lt;code&gt;pre-command-hook&lt;/code&gt; and &lt;code&gt;post-command-hook&lt;/code&gt;. If an error happens while executing one of these hooks, it does not terminate execution of the hook; instead the error is silenced and the function in which the error occurred is removed from the hook.</source>
          <target state="translated">&lt;code&gt;pre-command-hook&lt;/code&gt; および &lt;code&gt;post-command-hook&lt;/code&gt; の実行中は、終了が抑制されます。これらのフックのいずれかの実行中にエラーが発生した場合、フックの実行は終了しません。代わりに、エラーは消音され、エラーが発生した関数がフックから削除されます。</target>
        </trans-unit>
        <trans-unit id="ce26abf6cced6dc5da82e3ef39e1e3c488338a57" translate="yes" xml:space="preserve">
          <source>Quitting with</source>
          <target state="translated">との辞め方</target>
        </trans-unit>
        <trans-unit id="aad69021798ac9c7a8f72e9e4922a37dd53d20d1" translate="yes" xml:space="preserve">
          <source>Quitting, which happens when the user types</source>
          <target state="translated">ユーザーが</target>
        </trans-unit>
        <trans-unit id="03863cc346cd3793bf9e796c80a4f6ef2e2965cc" translate="yes" xml:space="preserve">
          <source>Quotation marks in doc strings and messages.</source>
          <target state="translated">ドキュメントの文字列やメッセージの引用符。</target>
        </trans-unit>
        <trans-unit id="623a7bbaccb5003a271944bf9dfc226aa0556b8e" translate="yes" xml:space="preserve">
          <source>Quote &lt;var&gt;expression&lt;/var&gt; for &lt;code&gt;define-inline&lt;/code&gt;. This is similar to the backquote (see &lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;), but quotes code and accepts only &lt;code&gt;,&lt;/code&gt;, not &lt;code&gt;,@&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;define-inline&lt;/code&gt; の &lt;var&gt;expression&lt;/var&gt; を引用します。これは、バッククォート（参照に似ている&lt;a href=&quot;backquote#Backquote&quot;&gt;バッククォートを&lt;/a&gt;）が、コードを引用してのみ受け付け &lt;code&gt;,&lt;/code&gt; ではなく &lt;code&gt;,@&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b18a6a7386d835bea0db8b9de8ae5aa959884376" translate="yes" xml:space="preserve">
          <source>Quoted Character Input</source>
          <target state="translated">引用文字入力</target>
        </trans-unit>
        <trans-unit id="60fefb29eda0237f92306cb85899330ca8b230ee" translate="yes" xml:space="preserve">
          <source>Quoting</source>
          <target state="translated">Quoting</target>
        </trans-unit>
        <trans-unit id="3562341fab873b1822d16e4fbaaa3663fcde537b" translate="yes" xml:space="preserve">
          <source>Quoting an argument to pass it to a shell.</source>
          <target state="translated">引数を引用してシェルに渡す。</target>
        </trans-unit>
        <trans-unit id="28e84ac43a2982f9ba3610654beb2d38a4d3269f" translate="yes" xml:space="preserve">
          <source>Quoting from the &lt;a href=&quot;https://www.jsonrpc.org/&quot;&gt;spec&lt;/a&gt;, JSONRPC &quot;is transport agnostic in that the concepts can be used within the same process, over sockets, over http, or in many various message passing environments.&quot;</source>
          <target state="translated">&lt;a href=&quot;https://www.jsonrpc.org/&quot;&gt;仕様&lt;/a&gt;から引用すると、JSONRPCは「概念が同じプロセス内、ソケット、http、または多くのさまざまなメッセージパッシング環境で使用できるという点でトランスポートにとらわれません」。</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="8539465b4b77d88914ea1b6ec8416cacd2d6e50b" translate="yes" xml:space="preserve">
          <source>RCS</source>
          <target state="translated">RCS</target>
        </trans-unit>
        <trans-unit id="69e27356ef629022720d868ab0c0e3394775b6c1" translate="yes" xml:space="preserve">
          <source>README</source>
          <target state="translated">README</target>
        </trans-unit>
        <trans-unit id="025925def95adcf722d9932a3c97d4dfaeaeba91" translate="yes" xml:space="preserve">
          <source>RET</source>
          <target state="translated">RET</target>
        </trans-unit>
        <trans-unit id="8a19437cf6e2b60b4b46e624f271872eec3c1ebc" translate="yes" xml:space="preserve">
          <source>RGB:&lt;var&gt;r&lt;/var&gt;/&lt;var&gt;g&lt;/var&gt;/&lt;var&gt;b&lt;/var&gt;</source>
          <target state="translated">RGB:&lt;var&gt;r&lt;/var&gt;/&lt;var&gt;g&lt;/var&gt;/&lt;var&gt;b&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="e143f36c4ca9c5d3b842c3decf88bd45054f708a" translate="yes" xml:space="preserve">
          <source>RLM</source>
          <target state="translated">RLM</target>
        </trans-unit>
        <trans-unit id="c75dff3aa48cb2ccd5b96f81ad5690623ffbeffa" translate="yes" xml:space="preserve">
          <source>RLO</source>
          <target state="translated">RLO</target>
        </trans-unit>
        <trans-unit id="c3282cbbcba660116d62c007822229220838a1c6" translate="yes" xml:space="preserve">
          <source>RPC</source>
          <target state="translated">RPC</target>
        </trans-unit>
        <trans-unit id="2f774c620027d9b3f46cf93e730db791918057be" translate="yes" xml:space="preserve">
          <source>Race conditions</source>
          <target state="translated">レース条件</target>
        </trans-unit>
        <trans-unit id="1eb318b0c1df1f117a7c2182bc1a1788588c81b6" translate="yes" xml:space="preserve">
          <source>Raising, Lowering and Restacking Frames</source>
          <target state="translated">フレームの上げ下げと再設置</target>
        </trans-unit>
        <trans-unit id="6e01f14f32639648e312d2a56505cd54edc8c1c2" translate="yes" xml:space="preserve">
          <source>Raising, Lowering and Restacking Frames.</source>
          <target state="translated">フレームの上げ下げと再設置。</target>
        </trans-unit>
        <trans-unit id="a10d3322e2b68c994b24aa3423cd7b30f82409d9" translate="yes" xml:space="preserve">
          <source>Raising, lowering and restacking child frames (see &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;Raising and Lowering&lt;/a&gt;) or changing the &lt;code&gt;z-group&lt;/code&gt; (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;) of a child frame changes only the stacking order of child frames with the same parent.</source>
          <target state="translated">子フレームの上げ、下げ、および再スタック（「&lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;上げと下げ&lt;/a&gt;」を参照）または子フレームの &lt;code&gt;z-group&lt;/code&gt; 変更（「&lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;位置パラメーター&lt;/a&gt;」を参照）は、同じ親を持つ子フレームのスタック順序のみを変更します。</target>
        </trans-unit>
        <trans-unit id="3061bd379d8f3565753f638c056b711fd4433107" translate="yes" xml:space="preserve">
          <source>Random Numbers</source>
          <target state="translated">乱数</target>
        </trans-unit>
        <trans-unit id="4094eec702394711a22f1c46e59d79bdb670dc76" translate="yes" xml:space="preserve">
          <source>Rapid continue: move point to each breakpoint, but don&amp;rsquo;t pause (&lt;code&gt;edebug-Continue-fast-mode&lt;/code&gt;).</source>
          <target state="translated">迅速な続行：ポイントを各ブレークポイントに移動しますが、一時停止しないでください（ &lt;code&gt;edebug-Continue-fast-mode&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f80a0da928c5191b09527932e1b3665d86c38981" translate="yes" xml:space="preserve">
          <source>Rapid trace: update the display at each stop point, but don&amp;rsquo;t actually pause (&lt;code&gt;edebug-Trace-fast-mode&lt;/code&gt;).</source>
          <target state="translated">迅速なトレース：各停止ポイントで表示を更新しますが、実際には一時停止しません（ &lt;code&gt;edebug-Trace-fast-mode&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="dc2ca0f09d1e9b124ffa42aa636506f4eb25ef40" translate="yes" xml:space="preserve">
          <source>Rather than have a single &lt;em&gt;precs&lt;/em&gt; table to resolve conflicts, it is preferable to have several tables, so as to let the BNF part of the grammar specify relative precedences where possible.</source>
          <target state="translated">可能な場合は、文法のBNF部分で相対的な優先順位を指定できるように、競合を解決するために単一の&lt;em&gt;precs&lt;/em&gt;テーブルを&lt;em&gt;用意&lt;/em&gt;するのではなく、&lt;em&gt;複数の&lt;/em&gt;テーブルを用意することをお&lt;em&gt;勧めし&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="632a184d441b001355ec8aa3d8dcd9d5378a47bd" translate="yes" xml:space="preserve">
          <source>Rather than write your own indentation function from scratch, it is often preferable to try and reuse some existing ones or to rely on a generic indentation engine. There are sadly few such engines. The CC-mode indentation code (used with C, C++, Java, Awk and a few other such modes) has been made more generic over the years, so if your language seems somewhat similar to one of those languages, you might try to use that engine. Another one is SMIE which takes an approach in the spirit of Lisp sexps and adapts it to non-Lisp languages.</source>
          <target state="translated">独自のインデント関数を一から書くよりも、既存のインデント関数を再利用したり、汎用的なインデントエンジンに頼ったりする方が好ましい場合が多いです。残念ながら、そのようなエンジンはほとんどありません。CCモードのインデントコード(C,C++,Java,Awkや他のいくつかのモードで使われています)は、長年にわたってより汎用的になってきています。もう一つはSMIEで、これはLisp sexpsの精神に基づいたアプローチを取り、非Lisp言語に適応させています。</target>
        </trans-unit>
        <trans-unit id="a8d87149d8f5a1af0cf09889395338496e67e84b" translate="yes" xml:space="preserve">
          <source>Re-evaluating or reinstrumenting a definition removes all of its previous breakpoints.</source>
          <target state="translated">定義を再評価または再定義すると、それまでのすべてのブレークポイントが削除されます。</target>
        </trans-unit>
        <trans-unit id="f4809bfd618abf7fb36743709051ce01ea7c0acf" translate="yes" xml:space="preserve">
          <source>Read Syntax for Circular Objects</source>
          <target state="translated">円形オブジェクトの構文を読む</target>
        </trans-unit>
        <trans-unit id="6e9131d2136625bdddd14a8d07626169308db7f9" translate="yes" xml:space="preserve">
          <source>Read a Lisp expression in the minibuffer, evaluate it (with the relevant lexical environment, if applicable), and print the value in the echo area. The debugger alters certain important variables, and the current buffer, as part of its operation;</source>
          <target state="translated">ミニバッファ内の Lisp 式を読み込み、(該当する場合は関連する字句環境と一緒に)評価し、エコー領域に値を表示します。デバッガは、操作の一部として、特定の重要な変数と現在のバッファを変更します。</target>
        </trans-unit>
        <trans-unit id="03b3047f56d9714cee32cb7bab845f9c4676b585" translate="yes" xml:space="preserve">
          <source>Read and Print</source>
          <target state="translated">読み取りと印刷</target>
        </trans-unit>
        <trans-unit id="0fe8e273f1986af8d7aa325992727641b2a563a7" translate="yes" xml:space="preserve">
          <source>Read syntax for circular structure.</source>
          <target state="translated">環状構造の構文を読み取る。</target>
        </trans-unit>
        <trans-unit id="bc8344e206c5a28e5ae0119bee1d9e11cc61b01a" translate="yes" xml:space="preserve">
          <source>Read-Only Buffers</source>
          <target state="translated">読み取り専用バッファ</target>
        </trans-unit>
        <trans-unit id="d1fc7e74f48183a030fd4d666342671cab238066" translate="yes" xml:space="preserve">
          <source>Read-only buffers are used in two kinds of situations:</source>
          <target state="translated">読み取り専用バッファは2種類の状況で使用されます。</target>
        </trans-unit>
        <trans-unit id="d56b0baf5ce89558d80f2adb9825f07459a53040" translate="yes" xml:space="preserve">
          <source>Reading File Names</source>
          <target state="translated">ファイル名の読み取り</target>
        </trans-unit>
        <trans-unit id="c5f8f3d99c0def76915d970418c8be32c0d70dae" translate="yes" xml:space="preserve">
          <source>Reading Input</source>
          <target state="translated">読み取り入力</target>
        </trans-unit>
        <trans-unit id="48ff45329f2bdbb13e706f06342cc64ffd151d94" translate="yes" xml:space="preserve">
          <source>Reading Lisp Objects with the Minibuffer</source>
          <target state="translated">ミニバッファを使ったLispオブジェクトの読み込み</target>
        </trans-unit>
        <trans-unit id="fd5b6e981a2105db597113fe1759987687c81303" translate="yes" xml:space="preserve">
          <source>Reading One Event</source>
          <target state="translated">一つのイベントを読む</target>
        </trans-unit>
        <trans-unit id="f4408e56b25dde1d761da92de224451f3cd20e10" translate="yes" xml:space="preserve">
          <source>Reading Text Strings with the Minibuffer</source>
          <target state="translated">ミニバッファでのテキスト文字列の読み込み</target>
        </trans-unit>
        <trans-unit id="5fadc63a8660acc47c01d1b0d63b3f029bb57c1e" translate="yes" xml:space="preserve">
          <source>Reading a Password</source>
          <target state="translated">パスワードの読み取り</target>
        </trans-unit>
        <trans-unit id="20afc0acccc31baf55ccd7798b86410ccb015f4f" translate="yes" xml:space="preserve">
          <source>Reading a key sequence includes translating the events in various ways. See &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;.</source>
          <target state="translated">キーシーケンスの読み取りには、さまざまな方法でイベントを翻訳することが含まれます。&lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;翻訳キーマップを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bc2e6b116b040fff04e546c9b4433000b1c59c8b" translate="yes" xml:space="preserve">
          <source>Reading a password from the terminal.</source>
          <target state="translated">端末からパスワードを読み取る</target>
        </trans-unit>
        <trans-unit id="76ea718adbc7d1e1c74075e2621a2b5347301d95" translate="yes" xml:space="preserve">
          <source>Reading and Printing Lisp Objects</source>
          <target state="translated">Lisp オブジェクトの読み込みと印刷</target>
        </trans-unit>
        <trans-unit id="07c9c11d093e1c3cd6a5308e0ff50a4228adee70" translate="yes" xml:space="preserve">
          <source>Reading and printing are more or less inverse operations: printing the object that results from reading a given piece of text often produces the same text, and reading the text that results from printing an object usually produces a similar-looking object. For example, printing the symbol &lt;code&gt;foo&lt;/code&gt; produces the text &amp;lsquo;</source>
          <target state="translated">読み取りと印刷は多かれ少なかれ逆の操作です。特定のテキストを読み取った結果のオブジェクトを印刷すると同じテキストが生成されることが多く、オブジェクトを印刷した結果のテキストを読み取ると通常は似たようなオブジェクトが生成されます。たとえば、シンボル &lt;code&gt;foo&lt;/code&gt; を出力すると、テキスト 'が生成されます。</target>
        </trans-unit>
        <trans-unit id="576b8f76c2ef5406819848ab6d7bbb4f801f6878" translate="yes" xml:space="preserve">
          <source>Reading and writing the hash table contents.</source>
          <target state="translated">ハッシュテーブルの内容を読み書きします。</target>
        </trans-unit>
        <trans-unit id="3d79e2a061f6835e1839676065a4a6800e78670e" translate="yes" xml:space="preserve">
          <source>Reading files into Emacs buffers for editing.</source>
          <target state="translated">ファイルをEmacsのバッファに読み込んで編集する。</target>
        </trans-unit>
        <trans-unit id="520a7c8b57c879330c02497327e31b60a4d5224d" translate="yes" xml:space="preserve">
          <source>Reading files into buffers without visiting.</source>
          <target state="translated">訪問せずにバッファにファイルを読み込む</target>
        </trans-unit>
        <trans-unit id="3525f661fee5325e84abe461c42b34b4e7e9b853" translate="yes" xml:space="preserve">
          <source>Reading files of Lisp code into Lisp.</source>
          <target state="translated">LispコードのファイルをLispに読み込む。</target>
        </trans-unit>
        <trans-unit id="0e2977ccb013d907cc86d66fe042533c50421cd1" translate="yes" xml:space="preserve">
          <source>Reading from Files</source>
          <target state="translated">ファイルからの読み込み</target>
        </trans-unit>
        <trans-unit id="167751eb8773d45d2c26ad519f83f6240a6836ed" translate="yes" xml:space="preserve">
          <source>Reading pending standard error from a process running on a remote host is not possible this way.</source>
          <target state="translated">この方法では、リモートホスト上で実行されているプロセスから保留中の標準エラーを読み取ることはできません。</target>
        </trans-unit>
        <trans-unit id="f23106b618743952281c07f95a091b9d46c7dc72" translate="yes" xml:space="preserve">
          <source>Reading the file involves decoding the file&amp;rsquo;s contents (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;), including end-of-line conversion, and format conversion (see &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;). If &lt;var&gt;wildcards&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;find-file-noselect&lt;/code&gt; expands wildcard characters in &lt;var&gt;filename&lt;/var&gt; and visits all the matching files.</source>
          <target state="translated">ファイルを読むと、ファイルの内容（参照デコードする必要&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;コーディングシステム&lt;/a&gt;（参照行末変換、およびフォーマット変換を含む）を、&lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;フォーマット変換を&lt;/a&gt;）。場合は &lt;var&gt;wildcards&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;find-file-noselect&lt;/code&gt; ははでワイルドカード文字を展開し &lt;var&gt;filename&lt;/var&gt; と訪問一致するすべてのファイル。</target>
        </trans-unit>
        <trans-unit id="b72ad71a3990000f0310122822a86f03a7bf273a" translate="yes" xml:space="preserve">
          <source>Recall that scroll bar events have two integers forming a ratio, in place of a pair of x and y coordinates.</source>
          <target state="translated">スクロールバーイベントは、x 座標と y 座標のペアの代わりに、比率を形成する 2 つの整数を持つことを思い出してください。</target>
        </trans-unit>
        <trans-unit id="af2eed05d267c2a5c291c8c76894d03e2a088d09" translate="yes" xml:space="preserve">
          <source>Recall that the subexpressions of a regular expression are those expressions grouped with escaped parentheses, &amp;lsquo;</source>
          <target state="translated">正規表現の部分式は、エスケープされた括弧でグループ化された式であることを思い出してください。</target>
        </trans-unit>
        <trans-unit id="f34ce9ddf20ed467c90ef556e0d89f69e05e8299" translate="yes" xml:space="preserve">
          <source>Receive or send characters.</source>
          <target state="translated">文字を受信したり、送信したりします。</target>
        </trans-unit>
        <trans-unit id="862caf2d0b0f5160028589c7196b4d16de3b720d" translate="yes" xml:space="preserve">
          <source>Receiving Output from Processes</source>
          <target state="translated">プロセスからの出力を受け取る</target>
        </trans-unit>
        <trans-unit id="3067e7351c3c6f32894212c418cc5908ab3869e7" translate="yes" xml:space="preserve">
          <source>Reclaiming space for Lisp objects no longer used.</source>
          <target state="translated">使わなくなったLispオブジェクトのためのスペースを再利用します。</target>
        </trans-unit>
        <trans-unit id="5daf7be7fd8981e9573a10adb7536c74f3d4e8dd" translate="yes" xml:space="preserve">
          <source>Recombining Windows</source>
          <target state="translated">ウィンドウの再結合</target>
        </trans-unit>
        <trans-unit id="6574ca503104a44ee368161aa9c294ee0354949b" translate="yes" xml:space="preserve">
          <source>Record Functions</source>
          <target state="translated">レコード機能</target>
        </trans-unit>
        <trans-unit id="bdd640924608b8a67374799fb7038a8b1c5f61d7" translate="yes" xml:space="preserve">
          <source>Record Type</source>
          <target state="translated">レコードタイプ</target>
        </trans-unit>
        <trans-unit id="cbe36316a6c9a1832ef0d0ce74d4e55fffc1a2cf" translate="yes" xml:space="preserve">
          <source>Record the preloaded Lisp data in a &lt;em&gt;dump file&lt;/em&gt;. This method produces an additional data file which Emacs will load at startup. The produced dump file is usually called</source>
          <target state="translated">プリロードされたLispデータを&lt;em&gt;ダンプファイルに&lt;/em&gt;記録し&lt;em&gt;ます&lt;/em&gt;。このメソッドは、Emacsが起動時にロードする追加のデータファイルを生成します。生成されたダンプファイルは通常、</target>
        </trans-unit>
        <trans-unit id="287c4d35a319cba2c2d66e76038dce806323b9bd" translate="yes" xml:space="preserve">
          <source>Recording Input</source>
          <target state="translated">記録入力</target>
        </trans-unit>
        <trans-unit id="6f5292802cffe71c7680c764ca10109c80e5f777" translate="yes" xml:space="preserve">
          <source>Recording of undo information in a newly created buffer is normally enabled to start with; but if the buffer name starts with a space, the undo recording is initially disabled. You can explicitly enable or disable undo recording with the following two functions, or by setting &lt;code&gt;buffer-undo-list&lt;/code&gt; yourself.</source>
          <target state="translated">新しく作成されたバッファへの元に戻す情報の記録は、通常、最初から有効になっています。ただし、バッファー名がスペースで始まる場合、元に戻す記録は最初は無効になっています。次の2つの機能を使用するか、自分で &lt;code&gt;buffer-undo-list&lt;/code&gt; を設定することにより、元に戻す記録を明示的に有効または無効にできます。</target>
        </trans-unit>
        <trans-unit id="6a69a7c10f388afb57fed4cdd6c5ccb1cf9ff1d8" translate="yes" xml:space="preserve">
          <source>Recording previous minibuffer inputs so the user can reuse them.</source>
          <target state="translated">以前のミニバッファ入力を記録して、ユーザーが再利用できるようにします。</target>
        </trans-unit>
        <trans-unit id="9bd5b750794520ce0ebb27a6f6fe9c0b0a292174" translate="yes" xml:space="preserve">
          <source>Recording the status of all frames.</source>
          <target state="translated">全フレームの状態を記録します。</target>
        </trans-unit>
        <trans-unit id="346aabbabce32225a7fe3eb962f9083ccb9738b1" translate="yes" xml:space="preserve">
          <source>Recording the way a frame is subdivided.</source>
          <target state="translated">フレームの細分化の仕方を記録する。</target>
        </trans-unit>
        <trans-unit id="e51c55255be9007d473b3c04b4553c2a27d6f03b" translate="yes" xml:space="preserve">
          <source>Records</source>
          <target state="translated">Records</target>
        </trans-unit>
        <trans-unit id="bb573770f54950e854c384f499040fe647da8a29" translate="yes" xml:space="preserve">
          <source>Recursive Editing</source>
          <target state="translated">再帰的編集</target>
        </trans-unit>
        <trans-unit id="2d1ed5152a6ff162c3511d793dbc47aea4567652" translate="yes" xml:space="preserve">
          <source>Recursive Minibuffers</source>
          <target state="translated">再帰的ミニバッファー</target>
        </trans-unit>
        <trans-unit id="475955b1120782acb2e7905eaef965517bdc98d4" translate="yes" xml:space="preserve">
          <source>Recursive display specifications are not supported&amp;mdash;&lt;var&gt;string&lt;/var&gt;&amp;rsquo;s &lt;code&gt;display&lt;/code&gt; properties, if any, are not used.</source>
          <target state="translated">再帰的な表示仕様はサポートされていません&amp;mdash; &lt;var&gt;string&lt;/var&gt; の &lt;code&gt;display&lt;/code&gt; プロパティがある場合は使用されません。</target>
        </trans-unit>
        <trans-unit id="5103de3e1f115068ab56c49103b6a6c73b3b2ead" translate="yes" xml:space="preserve">
          <source>Recursive editing levels are also used when you type</source>
          <target state="translated">再帰的な編集レベルは、次のように入力したときにも使用されます。</target>
        </trans-unit>
        <trans-unit id="0fbb2175d19f56aa8f6d17bd1afb0da10da5bdc5" translate="yes" xml:space="preserve">
          <source>Recursive edits are useful in debugging. You can insert a call to &lt;code&gt;debug&lt;/code&gt; into a function definition as a sort of breakpoint, so that you can look around when the function gets there. &lt;code&gt;debug&lt;/code&gt; invokes a recursive edit but also provides the other features of the debugger.</source>
          <target state="translated">再帰的な編集はデバッグに役立ちます。 &lt;code&gt;debug&lt;/code&gt; 呼び出しを一種のブレークポイントとして関数定義に挿入して、関数がそこに到達したときに見回すことができます。 &lt;code&gt;debug&lt;/code&gt; は再帰的な編集を呼び出しますが、デバッガーの他の機能も提供します。</target>
        </trans-unit>
        <trans-unit id="6ec9b76a71b5580adfadbc56852dc8421053b6b0" translate="yes" xml:space="preserve">
          <source>Redefining a key in a keymap.</source>
          <target state="translated">キーマップのキーを再定義します。</target>
        </trans-unit>
        <trans-unit id="82627f7a3d49dce2fe6fd1303f5c72ddca15e911" translate="yes" xml:space="preserve">
          <source>Redisplay the most recently known expression result in the echo area (&lt;code&gt;edebug-previous-result&lt;/code&gt;).</source>
          <target state="translated">最新の既知の式の結果をエコー領域に再表示します（ &lt;code&gt;edebug-previous-result&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c59143945a522107dc421bf6a9ef4f51fb5fd8c2" translate="yes" xml:space="preserve">
          <source>Redisplay updates the window-start position (if you have not specified it explicitly since the previous redisplay)&amp;mdash;to make sure point appears on the screen. Nothing except redisplay automatically changes the window-start position; if you move point, do not expect the window-start position to change in response until after the next redisplay.</source>
          <target state="translated">再表示は、ウィンドウの開始位置を更新し（前回の再表示以降に明示的に指定していない場合）、ポイントが画面に表示されるようにします。再表示以外は、ウィンドウの開始位置を自動的に変更しません。ポイントを移動する場合は、次の再表示が完了するまで、ウィンドウの開始位置が応答して変化することを期待しないでください。</target>
        </trans-unit>
        <trans-unit id="97cea8d837fc9c1f491fa116bf188601e626d469" translate="yes" xml:space="preserve">
          <source>Refers to the default value.</source>
          <target state="translated">デフォルト値を参照します。</target>
        </trans-unit>
        <trans-unit id="da38cfbadc69baabd90696cfe1177628ed103fa8" translate="yes" xml:space="preserve">
          <source>Refers to the element for character &lt;var&gt;char&lt;/var&gt; (supposing &lt;var&gt;char&lt;/var&gt; is a valid character code).</source>
          <target state="translated">文字 &lt;var&gt;char&lt;/var&gt; の要素を参照します（ &lt;var&gt;char&lt;/var&gt; が有効な文字コードであると想定）。</target>
        </trans-unit>
        <trans-unit id="66746ea2cb040dd054c24510645b709548b4ea74" translate="yes" xml:space="preserve">
          <source>Refers to the whole range of character codes.</source>
          <target state="translated">文字コードの全範囲を参照します。</target>
        </trans-unit>
        <trans-unit id="3aded1a53827b5d8b14126fa19ef59c98ff255e0" translate="yes" xml:space="preserve">
          <source>Refreshing the Screen</source>
          <target state="translated">画面の更新</target>
        </trans-unit>
        <trans-unit id="243cc10fd6e26d84f61e981279d04350da107692" translate="yes" xml:space="preserve">
          <source>Refuse any match. Equivalent to &lt;code&gt;(or)&lt;/code&gt;. See &lt;a href=&quot;regexp-functions#regexp_002dunmatchable&quot;&gt;regexp-unmatchable&lt;/a&gt;.</source>
          <target state="translated">一致するものを拒否します。 &lt;code&gt;(or)&lt;/code&gt; 同等です。&lt;a href=&quot;regexp-functions#regexp_002dunmatchable&quot;&gt;regexp-unmatchableを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4ee1a06a7e5c788b749713b6f650149e8091d387" translate="yes" xml:space="preserve">
          <source>Regarding the advice&amp;rsquo;s &lt;em&gt;class&lt;/em&gt;, note that the new &lt;code&gt;:before&lt;/code&gt; is not quite equivalent to the old &lt;code&gt;before&lt;/code&gt;, because in the old advice you could modify the function&amp;rsquo;s arguments (e.g., with &lt;code&gt;ad-set-arg&lt;/code&gt;), and that would affect the argument values seen by the original function, whereas in the new &lt;code&gt;:before&lt;/code&gt;, modifying an argument via &lt;code&gt;setq&lt;/code&gt; in the advice has no effect on the arguments seen by the original function. When porting &lt;code&gt;before&lt;/code&gt; advice which relied on this behavior, you&amp;rsquo;ll need to turn it into new &lt;code&gt;:around&lt;/code&gt; or &lt;code&gt;:filter-args&lt;/code&gt; advice instead.</source>
          <target state="translated">アドバイスの&lt;em&gt;クラス&lt;/em&gt;に関しては、新しい &lt;code&gt;:before&lt;/code&gt; は古い &lt;code&gt;before&lt;/code&gt; とまったく同じではないことに注意してください。古いアドバイスでは、関数の引数を変更でき（たとえば、 &lt;code&gt;ad-set-arg&lt;/code&gt; を使用）、表示される引数の値に影響するためです。元の関数によるのに対し、新しい &lt;code&gt;:before&lt;/code&gt; では、アドバイスの &lt;code&gt;setq&lt;/code&gt; を介して引数を変更しても、元の関数で見られる引数には影響しません。この動作に依存 &lt;code&gt;before&lt;/code&gt; アドバイスの前に移植する場合は、代わりに新しい &lt;code&gt;:around&lt;/code&gt; または &lt;code&gt;:filter-args&lt;/code&gt; アドバイスに変換する必要があります。</target>
        </trans-unit>
        <trans-unit id="9184f4be2d849be998855feed1983132c7fac72e" translate="yes" xml:space="preserve">
          <source>Regardless of how this parameter was specified, functions reporting the value of this parameter like &lt;code&gt;frame-parameters&lt;/code&gt; always report the width of the frame&amp;rsquo;s text area in characters as an integer rounded, if necessary, to a multiple of the frame&amp;rsquo;s default character width. That value is also used by the desktop saving routines.</source>
          <target state="translated">このパラメーターの指定方法に関係なく、 &lt;code&gt;frame-parameters&lt;/code&gt; parametersのようにこのパラメーターの値を報告する関数は、常にフレームのテキスト領域の幅を、必要に応じてフレームのデフォルトの文字幅の倍数に丸められた整数として文字で報告します。この値は、デスクトップ保存ルーチンでも使用されます。</target>
        </trans-unit>
        <trans-unit id="7243ba2379bd1f3ba4e84c19d611718b1cf03ad1" translate="yes" xml:space="preserve">
          <source>Regardless of the value of &lt;var&gt;symbol&lt;/var&gt;, if &lt;var&gt;maps&lt;/var&gt; is a keymap, the menu is added to that keymap, as a top-level menu for the menu bar (see &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;). It can also be a list of keymaps, in which case the menu is added separately to each of those keymaps.</source>
          <target state="translated">かかわらずの値の &lt;var&gt;symbol&lt;/var&gt; 場合は、 &lt;var&gt;maps&lt;/var&gt; キーマップで、メニューはメニューバー（参照のためのトップレベルのメニューとして、そのキーマップに追加された&lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;メニューバーを&lt;/a&gt;）。キーマップのリストにすることもできます。その場合、メニューはそれらのキーマップのそれぞれに個別に追加されます。</target>
        </trans-unit>
        <trans-unit id="44dc0e6d0beba3391f2e5e02043cc8ab793b25ec" translate="yes" xml:space="preserve">
          <source>Region to Fontify after a Buffer Change</source>
          <target state="translated">バッファ変更後にフォント化する領域</target>
        </trans-unit>
        <trans-unit id="5f74dc0ddee9e7d6215d2c06c183491e3166b44f" translate="yes" xml:space="preserve">
          <source>Registers</source>
          <target state="translated">Registers</target>
        </trans-unit>
        <trans-unit id="ff54c44d52d99648d6de0dbc8357d39a820e3162" translate="yes" xml:space="preserve">
          <source>Regular Expression Functions</source>
          <target state="translated">正規表現関数</target>
        </trans-unit>
        <trans-unit id="96306be677c63b20918ab7e6e06a174857ad42c7" translate="yes" xml:space="preserve">
          <source>Regular Expression Searching</source>
          <target state="translated">正規表現検索</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">正規表現</target>
        </trans-unit>
        <trans-unit id="f842ac8456b804f9f051cb7c6386c36a9e434abe" translate="yes" xml:space="preserve">
          <source>Regular expression matching a successful</source>
          <target state="translated">成功したものにマッチする正規表現</target>
        </trans-unit>
        <trans-unit id="b36371d5c3d744cf56ed64a526ca9027133bc2de" translate="yes" xml:space="preserve">
          <source>Regular expression matching the end of a command, or the end of the command &lt;var&gt;capability-command&lt;/var&gt;. The latter defaults to the former.</source>
          <target state="translated">コマンドの終わり、またはコマンド &lt;var&gt;capability-command&lt;/var&gt; の終わりに一致する正規表現-command 。後者はデフォルトで前者になります。</target>
        </trans-unit>
        <trans-unit id="f0c3c42cbb945e204d5a3cb1ce810556ebc47cae" translate="yes" xml:space="preserve">
          <source>Regular expressions have a syntax in which a few characters are special constructs and the rest are &lt;em&gt;ordinary&lt;/em&gt;. An ordinary character is a simple regular expression that matches that character and nothing else. The special characters are &amp;lsquo;</source>
          <target state="translated">正規表現には、いくつかの文字が特殊な構造であり、残りが&lt;em&gt;通常の&lt;/em&gt;構文である構文があります。通常の文字は、その文字に一致する単純な正規表現であり、他には何もありません。特殊文字は '</target>
        </trans-unit>
        <trans-unit id="a0790edad37dc9bc262e0b370c146c0aa115691c" translate="yes" xml:space="preserve">
          <source>Relating windows to the frame they appear on.</source>
          <target state="translated">窓をフレームに関連付けること。</target>
        </trans-unit>
        <trans-unit id="0208da66245f1a017cade6baa30ef2ccfc13c36c" translate="yes" xml:space="preserve">
          <source>Relative character width. This should be one of the symbols &lt;code&gt;ultra-condensed&lt;/code&gt;, &lt;code&gt;extra-condensed&lt;/code&gt;, &lt;code&gt;condensed&lt;/code&gt;, &lt;code&gt;semi-condensed&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;semi-expanded&lt;/code&gt;, &lt;code&gt;expanded&lt;/code&gt;, &lt;code&gt;extra-expanded&lt;/code&gt;, or &lt;code&gt;ultra-expanded&lt;/code&gt;.</source>
          <target state="translated">相対的な文字幅。これは、 &lt;code&gt;ultra-condensed&lt;/code&gt; 、超 &lt;code&gt;extra-condensed&lt;/code&gt; 、 &lt;code&gt;condensed&lt;/code&gt; 、 &lt;code&gt;semi-condensed&lt;/code&gt; 、 &lt;code&gt;normal&lt;/code&gt; 、 &lt;code&gt;semi-expanded&lt;/code&gt; 、 &lt;code&gt;expanded&lt;/code&gt; 、 &lt;code&gt;ultra-expanded&lt;/code&gt; &lt;code&gt;extra-expanded&lt;/code&gt; 、または超拡張のいずれかの記号である必要があります。</target>
        </trans-unit>
        <trans-unit id="6b32b576c3443e390e9e316447bfc785f60faa8b" translate="yes" xml:space="preserve">
          <source>Release &lt;var&gt;mutex&lt;/var&gt;. If &lt;var&gt;mutex&lt;/var&gt; is not owned by this thread, this will signal an error.</source>
          <target state="translated">&lt;var&gt;mutex&lt;/var&gt; を解放します。 &lt;var&gt;mutex&lt;/var&gt; がこのスレッドによって所有されていない場合、これはエラーを通知します。</target>
        </trans-unit>
        <trans-unit id="e1cf2fd1fb083fe51a5e455c7c68e87d8aaf9fc7" translate="yes" xml:space="preserve">
          <source>Remapping Commands</source>
          <target state="translated">リマップコマンド</target>
        </trans-unit>
        <trans-unit id="547befb9dcb0e70e06a45396428605ff607501e2" translate="yes" xml:space="preserve">
          <source>Remapping faces to alternative definitions.</source>
          <target state="translated">別の定義への顔の再マッピング。</target>
        </trans-unit>
        <trans-unit id="53a9dc41de39a89bfb2c63799520f2411e1ca953" translate="yes" xml:space="preserve">
          <source>Remember that point is always between characters, and the cursor normally appears over the character following point. Therefore, the character returned by &lt;code&gt;following-char&lt;/code&gt; is the character the cursor is over.</source>
          <target state="translated">ポイントは常に文字の間にあり、カーソルは通常、ポイントに続く文字の上に表示されることに注意してください。したがって、 &lt;code&gt;following-char&lt;/code&gt; によって返される文字は、カーソルが置かれている文字です。</target>
        </trans-unit>
        <trans-unit id="d66a46736a98ac0dd4a9773b9907a1877a02c888" translate="yes" xml:space="preserve">
          <source>Remove &lt;var&gt;node&lt;/var&gt; from &lt;var&gt;dom&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;dom&lt;/var&gt; から &lt;var&gt;node&lt;/var&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="6df9cce6acb4992149ebdfbc63a8104b4705d011" translate="yes" xml:space="preserve">
          <source>Remove an object from &lt;var&gt;ring&lt;/var&gt;, and return that object. The argument &lt;var&gt;index&lt;/var&gt; specifies which item to remove; if it is &lt;code&gt;nil&lt;/code&gt;, that means to remove the oldest item. If &lt;var&gt;ring&lt;/var&gt; is empty, &lt;code&gt;ring-remove&lt;/code&gt; signals an error.</source>
          <target state="translated">&lt;var&gt;ring&lt;/var&gt; からオブジェクトを削除し、そのオブジェクトを返します。引数 &lt;var&gt;index&lt;/var&gt; は、削除するアイテムを指定します。 &lt;code&gt;nil&lt;/code&gt; の場合、最も古いアイテムを削除することを意味します。 &lt;var&gt;ring&lt;/var&gt; が空の場合、 &lt;code&gt;ring-remove&lt;/code&gt; はエラーを通知します。</target>
        </trans-unit>
        <trans-unit id="dbc7785ee2b91b1998dd6cc373e2581f7516a5a9" translate="yes" xml:space="preserve">
          <source>Remove the advice &lt;var&gt;function&lt;/var&gt; from the named function &lt;var&gt;symbol&lt;/var&gt;. &lt;var&gt;function&lt;/var&gt; can also be the &lt;code&gt;name&lt;/code&gt; of a piece of advice.</source>
          <target state="translated">名前付き関数 &lt;var&gt;symbol&lt;/var&gt; からアドバイス &lt;var&gt;function&lt;/var&gt; を削除します。 &lt;var&gt;function&lt;/var&gt; は、アドバイスの &lt;code&gt;name&lt;/code&gt; にすることもできます。</target>
        </trans-unit>
        <trans-unit id="196e7cf735144b51b1b5e1ce7891e986b5ddd0fe" translate="yes" xml:space="preserve">
          <source>Remove the element with identifier &lt;code&gt;id&lt;/code&gt; from the &lt;code&gt;svg&lt;/code&gt;.</source>
          <target state="translated">識別子 &lt;code&gt;id&lt;/code&gt; の要素を &lt;code&gt;svg&lt;/code&gt; から削除します。</target>
        </trans-unit>
        <trans-unit id="c01a3e6eeeab806d99abd03a2f6e6bbe01670fbe" translate="yes" xml:space="preserve">
          <source>Removes an existing file watch specified by its &lt;var&gt;descriptor&lt;/var&gt;. &lt;var&gt;descriptor&lt;/var&gt; should be an object returned by &lt;code&gt;file-notify-add-watch&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;descriptor&lt;/var&gt; 指定された既存のファイルウォッチを削除します。 &lt;var&gt;descriptor&lt;/var&gt; は、 &lt;code&gt;file-notify-add-watch&lt;/code&gt; によって返されるオブジェクトである必要があります。</target>
        </trans-unit>
        <trans-unit id="0f2de1a1f3be7c81f6a265ecaab96489e7b255cb" translate="yes" xml:space="preserve">
          <source>Removing a window from its frame.</source>
          <target state="translated">窓をフレームから取り外すこと。</target>
        </trans-unit>
        <trans-unit id="e44873db50363572788df07af1775a3d81c2cf93" translate="yes" xml:space="preserve">
          <source>Removing text from a buffer.</source>
          <target state="translated">バッファからテキストを削除します。</target>
        </trans-unit>
        <trans-unit id="e0ac28a0b3d433b5af58c57f037a0111af6948c2" translate="yes" xml:space="preserve">
          <source>Renaming files, changing permissions, etc.</source>
          <target state="translated">ファイル名の変更、パーミッションの変更など</target>
        </trans-unit>
        <trans-unit id="d352abc275e8aaceddb8eb4399fff1eb2ea7acbd" translate="yes" xml:space="preserve">
          <source>Reordering the elements in a list; combining lists.</source>
          <target state="translated">リスト内の要素を並べ替えたり、リストを結合したりします。</target>
        </trans-unit>
        <trans-unit id="733aad630ac49f5130728e8464f4395ffa4be7d7" translate="yes" xml:space="preserve">
          <source>Repeat Events</source>
          <target state="translated">リピートイベント</target>
        </trans-unit>
        <trans-unit id="42234f031484aab859df23a1d8723583a9c91007" translate="yes" xml:space="preserve">
          <source>Repeated Loading</source>
          <target state="translated">繰り返しの読み込み</target>
        </trans-unit>
        <trans-unit id="98bffc5586284a1786332e248e9d829b5c230b43" translate="yes" xml:space="preserve">
          <source>Repeating the example used for &lt;code&gt;macroexpand&lt;/code&gt; above with &lt;code&gt;macroexpand-all&lt;/code&gt;, we see that &lt;code&gt;macroexpand-all&lt;/code&gt;&lt;em&gt;does&lt;/em&gt; expand the embedded calls to &lt;code&gt;inc&lt;/code&gt;:</source>
          <target state="translated">上記の &lt;code&gt;macroexpand&lt;/code&gt; に使用された例を &lt;code&gt;macroexpand-all&lt;/code&gt; で繰り返すと、 &lt;code&gt;macroexpand-all&lt;/code&gt; &lt;em&gt;が&lt;/em&gt; &lt;code&gt;inc&lt;/code&gt; への埋め込み呼び出しを展開していることがわかります。</target>
        </trans-unit>
        <trans-unit id="711ba373a79d31376784182b72065d953222072d" translate="yes" xml:space="preserve">
          <source>Repetition</source>
          <target state="translated">Repetition</target>
        </trans-unit>
        <trans-unit id="a7cf7b25a703b308887c7f1d100c4326ef20ac46" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">Replace</target>
        </trans-unit>
        <trans-unit id="bfe8f04c0691129ba469548bdd50e2695937ab4a" translate="yes" xml:space="preserve">
          <source>Replace all the attributes of the node with a new key/value list.</source>
          <target state="translated">ノードのすべての属性を新しいキー/値リストに置き換えます。</target>
        </trans-unit>
        <trans-unit id="d64bf1e0817f4a87267fa2af970cde86ea5e6026" translate="yes" xml:space="preserve">
          <source>Replace the old file without confirmation if &lt;var&gt;ok-if-already-exists&lt;/var&gt; is any other value.</source>
          <target state="translated">&lt;var&gt;ok-if-already-exists&lt;/var&gt; が他の値である場合は、確認せずに古いファイルを置き換えます。</target>
        </trans-unit>
        <trans-unit id="4f2f769e6ff8a47975173781fa99be9649b3422b" translate="yes" xml:space="preserve">
          <source>Replace the specification with a single &amp;lsquo;</source>
          <target state="translated">仕様を単一の 'に置き換えます</target>
        </trans-unit>
        <trans-unit id="2a643f59581314f3fa60f77c5482a37d1c60d00d" translate="yes" xml:space="preserve">
          <source>Replace the specification with notation for a floating-point number, using either exponential notation or decimal-point notation. The exponential notation is used if the exponent would be less than -4 or greater than or equal to the precision (default: 6). By default, trailing zeros are removed from the fractional portion of the result and a decimal-point character appears only if it is followed by a digit.</source>
          <target state="translated">指数表記または小数点表記のいずれかを使用して、指定を浮動小数点数の表記に置き換えます。指数が-4以下、または精度以上の場合は、指数記法が使用されます(デフォルトは6)。既定では、結果の小数部分から末尾のゼロは削除され、小数点文字は桁が続く場合にのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="fcc04c0e1f06cdeaade71176ff4a5728ed4dc1d3" translate="yes" xml:space="preserve">
          <source>Replace the specification with the base-eight representation of an integer. Negative integers are formatted in a platform-dependent way. The object can also be a floating-point number that is formatted as an integer, dropping any fraction.</source>
          <target state="translated">指定を整数の 8 進数表現に置き換えます。負の整数は、プラットフォームに依存する方法でフォーマットされます。オブジェクトは、整数としてフォーマットされた浮動小数点数にすることもできます。</target>
        </trans-unit>
        <trans-unit id="ddec4a0303fb7405b6cfa96bb71c2c4cbe3de78d" translate="yes" xml:space="preserve">
          <source>Replace the specification with the base-sixteen representation of an integer. Negative integers are formatted in a platform-dependent way. &amp;lsquo;</source>
          <target state="translated">仕様を整数の16を底とする表現に置き換えます。負の整数は、プラットフォームに依存する方法でフォーマットされます。'</target>
        </trans-unit>
        <trans-unit id="be5ede05c5e36af20a8d9bb01fec0222c2a121ae" translate="yes" xml:space="preserve">
          <source>Replace the specification with the base-ten representation of a signed integer. The object can also be a floating-point number that is formatted as an integer, dropping any fraction.</source>
          <target state="translated">指定を符号付き整数のベーステン表現に置き換えます。オブジェクトは、整数としてフォーマットされた浮動小数点数にすることもできます。</target>
        </trans-unit>
        <trans-unit id="e0dc805cf6437ee437b4c3274dcde3d4e3436cbe" translate="yes" xml:space="preserve">
          <source>Replace the specification with the character which is the value given.</source>
          <target state="translated">指定された値が与えられた文字に置き換えてください。</target>
        </trans-unit>
        <trans-unit id="1550b00fc336c306eed95c7ebcda2fdbab23dce4" translate="yes" xml:space="preserve">
          <source>Replace the specification with the decimal-point notation for a floating-point number.</source>
          <target state="translated">仕様を浮動小数点数の小数点表記に置き換えてください。</target>
        </trans-unit>
        <trans-unit id="b1e9cff0cbef7e0ed7d5514047882c392768d3ee" translate="yes" xml:space="preserve">
          <source>Replace the specification with the exponential notation for a floating-point number.</source>
          <target state="translated">浮動小数点数の指数表記に仕様を置き換えてください。</target>
        </trans-unit>
        <trans-unit id="8c24ed092d2070ee20fbc96b64f7a93f66a84167" translate="yes" xml:space="preserve">
          <source>Replace the specification with the printed representation of the object, made with quoting (that is, using &lt;code&gt;prin1&lt;/code&gt;&amp;mdash;see &lt;a href=&quot;output-functions#Output-Functions&quot;&gt;Output Functions&lt;/a&gt;). Thus, strings are enclosed in &amp;lsquo;</source>
          <target state="translated">（使用、であるクォートで作られたオブジェクトの表示表現と仕様、交換 &lt;code&gt;prin1&lt;/code&gt; -see&lt;a href=&quot;output-functions#Output-Functions&quot;&gt;出力関数&lt;/a&gt;）。したがって、文字列は 'で囲まれます</target>
        </trans-unit>
        <trans-unit id="370402267dfe3242c165a51b100f9ed6f0ad423a" translate="yes" xml:space="preserve">
          <source>Replace the specification with the printed representation of the object, made without quoting (that is, using &lt;code&gt;princ&lt;/code&gt;, not &lt;code&gt;prin1&lt;/code&gt;&amp;mdash;see &lt;a href=&quot;output-functions#Output-Functions&quot;&gt;Output Functions&lt;/a&gt;). Thus, strings are represented by their contents alone, with no &amp;lsquo;</source>
          <target state="translated">（使用、である引用することなくなさオブジェクトの表示表現と仕様、交換 &lt;code&gt;princ&lt;/code&gt; 、ない &lt;code&gt;prin1&lt;/code&gt; -see&lt;a href=&quot;output-functions#Output-Functions&quot;&gt;出力関数&lt;/a&gt;）。したがって、文字列はその内容のみで表され、 'はありません。</target>
        </trans-unit>
        <trans-unit id="75deeadb8abd51b328daa4b5aefcef8a586399bd" translate="yes" xml:space="preserve">
          <source>Replacing Buffer Text</source>
          <target state="translated">バッファテキストの置き換え</target>
        </trans-unit>
        <trans-unit id="b9d8405533148d44c1a4dc4104dc32835596a1b7" translate="yes" xml:space="preserve">
          <source>Replacing a given character wherever it appears.</source>
          <target state="translated">表示されている文字を置換します。</target>
        </trans-unit>
        <trans-unit id="ec2cef4533c2d6b31aa3ab06eed904118e81a465" translate="yes" xml:space="preserve">
          <source>Replacing a substring that was matched.</source>
          <target state="translated">マッチした部分文字列を置換します。</target>
        </trans-unit>
        <trans-unit id="e6480d64e3469949cb1e463839479c7a358a5359" translate="yes" xml:space="preserve">
          <source>Replacing an element in a list.</source>
          <target state="translated">リスト内の要素を置換します。</target>
        </trans-unit>
        <trans-unit id="2097c06b575d38f5822abb2858cacf4382af5c37" translate="yes" xml:space="preserve">
          <source>Replacing part of the list backbone. This can be used to remove or add elements.</source>
          <target state="translated">リストのバックボーンの一部を置き換えます。これは、要素を削除したり、追加したりするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="6ab67e36e9ef6cd6d72b6fe8cfcfa5529f33e3dc" translate="yes" xml:space="preserve">
          <source>Replacing the Text that Matched</source>
          <target state="translated">マッチしたテキストを置き換える</target>
        </trans-unit>
        <trans-unit id="45bcbbf71f7925004eca76c4b5e2b72f96f6ac9b" translate="yes" xml:space="preserve">
          <source>Replacing the text of one buffer with the text of another buffer.</source>
          <target state="translated">あるバッファのテキストを別のバッファのテキストに置き換えます。</target>
        </trans-unit>
        <trans-unit id="5aface5653adfd367886934b6688662a61b1055b" translate="yes" xml:space="preserve">
          <source>Reporting Operation Progress</source>
          <target state="translated">操作の進捗状況を報告する</target>
        </trans-unit>
        <trans-unit id="b4d894d8eb40ccca77247e2a71929e40e0bf2cb9" translate="yes" xml:space="preserve">
          <source>Reporting Warnings</source>
          <target state="translated">警告の報告</target>
        </trans-unit>
        <trans-unit id="a51df0abbaade8c583020ba2a342365a636cac32" translate="yes" xml:space="preserve">
          <source>Representation and range of floating point.</source>
          <target state="translated">浮動小数点の表現と範囲。</target>
        </trans-unit>
        <trans-unit id="ed1be477bd6f7d44cfb57ed17c79cb5952007d53" translate="yes" xml:space="preserve">
          <source>Representation and range of integers.</source>
          <target state="translated">整数の表現と範囲。</target>
        </trans-unit>
        <trans-unit id="a54fea3d3c2fff302b3c452eb35fdd5feff88f04" translate="yes" xml:space="preserve">
          <source>Request confirmation if &lt;var&gt;ok-if-already-exists&lt;/var&gt; is a number.</source>
          <target state="translated">Request confirmation if &lt;var&gt;ok-if-already-exists&lt;/var&gt; is a number.</target>
        </trans-unit>
        <trans-unit id="b120c96c48ff1faf795affd9e67c9c3134a9789e" translate="yes" xml:space="preserve">
          <source>Requesting a particular coding system for a single file operation.</source>
          <target state="translated">1つのファイル操作のための特定のコーディングシステムを要求する。</target>
        </trans-unit>
        <trans-unit id="31ffd972632b0f8b7d9a4698f27b5351744291ac" translate="yes" xml:space="preserve">
          <source>Require special confirmation to execute &lt;var&gt;command&lt;/var&gt; from now on, and alter the user&amp;rsquo;s init file so that this will apply to future sessions.</source>
          <target state="translated">Require special confirmation to execute &lt;var&gt;command&lt;/var&gt; from now on, and alter the user&amp;rsquo;s init file so that this will apply to future sessions.</target>
        </trans-unit>
        <trans-unit id="80ba37ea133a922fda1409d60af72d74b2605305" translate="yes" xml:space="preserve">
          <source>Require the name of an existing object. An invalid name is not accepted; the commands to exit the minibuffer do not exit if the current input is not valid.</source>
          <target state="translated">既存のオブジェクトの名前を要求します。無効な名前は受け付けられません。現在の入力が有効でない場合、ミニバッファを終了するコマンドは終了しません。</target>
        </trans-unit>
        <trans-unit id="c350786f82c6e1a7dcd02f79ec968f729357c1fa" translate="yes" xml:space="preserve">
          <source>Resist the temptation to use error handling to transfer control from one part of the program to another; use &lt;code&gt;catch&lt;/code&gt; and &lt;code&gt;throw&lt;/code&gt; instead. See &lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;Catch and Throw&lt;/a&gt;.</source>
          <target state="translated">Resist the temptation to use error handling to transfer control from one part of the program to another; use &lt;code&gt;catch&lt;/code&gt; and &lt;code&gt;throw&lt;/code&gt; instead. See &lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;Catch and Throw&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="aaaf66c282070c49bdab295a432372d6d530e9ac" translate="yes" xml:space="preserve">
          <source>Resizing Windows</source>
          <target state="translated">Windowsのサイズ変更</target>
        </trans-unit>
        <trans-unit id="817f6d32d45791e684f36eedfcfbf9aabc013c92" translate="yes" xml:space="preserve">
          <source>Resource limits</source>
          <target state="translated">リソースの制限</target>
        </trans-unit>
        <trans-unit id="88d05891e1879d3b9a4aa9f7ebe36749dc054ee3" translate="yes" xml:space="preserve">
          <source>Resources are indexed by a combination of a &lt;em&gt;key&lt;/em&gt; and a &lt;em&gt;class&lt;/em&gt;. This function searches using a key of the form &amp;lsquo;</source>
          <target state="translated">Resources are indexed by a combination of a &lt;em&gt;key&lt;/em&gt; and a &lt;em&gt;class&lt;/em&gt;. This function searches using a key of the form &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="6ed197f0b4c9e8e75db7ae27ec6534cf84214d6a" translate="yes" xml:space="preserve">
          <source>Restricting editing to a portion of the buffer.</source>
          <target state="translated">バッファの一部に編集を制限する。</target>
        </trans-unit>
        <trans-unit id="c474a91ce1d9f469e70e082bc2f9858ba0f5deb2" translate="yes" xml:space="preserve">
          <source>Result: #1=(#1# y)</source>
          <target state="translated">結果です。#1=(#1#y)</target>
        </trans-unit>
        <trans-unit id="d67f99fc92dd3e6b052c3436ae9b05ca0b9dcd2d" translate="yes" xml:space="preserve">
          <source>Retrieve the next value from &lt;var&gt;iterator&lt;/var&gt;. If there are no more values to be generated (because &lt;var&gt;iterator&lt;/var&gt;&amp;rsquo;s generator function returned), &lt;code&gt;iter-next&lt;/code&gt; signals the &lt;code&gt;iter-end-of-sequence&lt;/code&gt; condition; the data value associated with this condition is the value with which &lt;var&gt;iterator&lt;/var&gt;&amp;rsquo;s generator function returned.</source>
          <target state="translated">Retrieve the next value from &lt;var&gt;iterator&lt;/var&gt; . If there are no more values to be generated (because &lt;var&gt;iterator&lt;/var&gt; &amp;rsquo;s generator function returned), &lt;code&gt;iter-next&lt;/code&gt; signals the &lt;code&gt;iter-end-of-sequence&lt;/code&gt; condition; the data value associated with this condition is the value with which &lt;var&gt;iterator&lt;/var&gt; &amp;rsquo;s generator function returned.</target>
        </trans-unit>
        <trans-unit id="9d759ee9eb1881530cf543a70f7b52019a0019ab" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;string&lt;/code&gt; if the end position of the scan returning &lt;var&gt;state&lt;/var&gt; is in a string, and &lt;code&gt;comment&lt;/code&gt; if it&amp;rsquo;s in a comment.</source>
          <target state="translated">Return &lt;code&gt;string&lt;/code&gt; if the end position of the scan returning &lt;var&gt;state&lt;/var&gt; is in a string, and &lt;code&gt;comment&lt;/code&gt; if it&amp;rsquo;s in a comment.</target>
        </trans-unit>
        <trans-unit id="7fcc50e3045ccda0b182ef933ad091acaa7f1478" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;button&lt;/var&gt; has button-type &lt;var&gt;type&lt;/var&gt;, or one of &lt;var&gt;type&lt;/var&gt;&amp;rsquo;s subtypes.</source>
          <target state="translated">Return &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;button&lt;/var&gt; has button-type &lt;var&gt;type&lt;/var&gt; , or one of &lt;var&gt;type&lt;/var&gt; &amp;rsquo;s subtypes.</target>
        </trans-unit>
        <trans-unit id="c969d3aa113ae9725dbad8e9dc472b8e35f1d3cd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a font object, font spec, or font entity. Otherwise, return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Return &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a font object, font spec, or font entity. Otherwise, return &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c70222abd3fd6defaa9ff3e9bd2820a05ccfa03" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;string&lt;/var&gt; is a multibyte string, &lt;code&gt;nil&lt;/code&gt; otherwise. This function also returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;string&lt;/var&gt; is some object other than a string.</source>
          <target state="translated">Return &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;string&lt;/var&gt; is a multibyte string, &lt;code&gt;nil&lt;/code&gt; otherwise. This function also returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;string&lt;/var&gt; is some object other than a string.</target>
        </trans-unit>
        <trans-unit id="26efa2cc0a944d724a7182f04611745f677d19c8" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;thread&lt;/var&gt; is alive, or &lt;code&gt;nil&lt;/code&gt; if it is not. A thread is alive as long as its function is still executing.</source>
          <target state="translated">Return &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;thread&lt;/var&gt; is alive, or &lt;code&gt;nil&lt;/code&gt; if it is not. A thread is alive as long as its function is still executing.</target>
        </trans-unit>
        <trans-unit id="d10bc9e34715ae487cab455ba26149a51a0fa61f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;t&lt;/code&gt; if button-type &lt;var&gt;type&lt;/var&gt; is a subtype of &lt;var&gt;supertype&lt;/var&gt;.</source>
          <target state="translated">Return &lt;code&gt;t&lt;/code&gt; if button-type &lt;var&gt;type&lt;/var&gt; is a subtype of &lt;var&gt;supertype&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="4960603def2b333c76b6cee9ebd637d0fda02de5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;t&lt;/code&gt; if every &lt;code&gt;t&lt;/code&gt; value in &lt;var&gt;a&lt;/var&gt; is also &lt;code&gt;t&lt;/code&gt; in &lt;var&gt;b&lt;/var&gt;, &lt;code&gt;nil&lt;/code&gt; otherwise. All arguments should be bool vectors of the same length.</source>
          <target state="translated">Return &lt;code&gt;t&lt;/code&gt; if every &lt;code&gt;t&lt;/code&gt; value in &lt;var&gt;a&lt;/var&gt; is also &lt;code&gt;t&lt;/code&gt; in &lt;var&gt;b&lt;/var&gt; , &lt;code&gt;nil&lt;/code&gt; otherwise. All arguments should be bool vectors of the same length.</target>
        </trans-unit>
        <trans-unit id="a029fe8486186c7e1c75616231f51958944e1b20" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;bitwise and&lt;/em&gt; of bool vectors &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt;. If optional argument &lt;var&gt;c&lt;/var&gt; is given, the result of this operation is stored into &lt;var&gt;c&lt;/var&gt;. All arguments should be bool vectors of the same length.</source>
          <target state="translated">Return &lt;em&gt;bitwise and&lt;/em&gt; of bool vectors &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; . If optional argument &lt;var&gt;c&lt;/var&gt; is given, the result of this operation is stored into &lt;var&gt;c&lt;/var&gt; . All arguments should be bool vectors of the same length.</target>
        </trans-unit>
        <trans-unit id="22dcf997d234a8251b020595a8e8fe7e640665eb" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;bitwise exclusive or&lt;/em&gt; of bool vectors &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt;. If optional argument &lt;var&gt;c&lt;/var&gt; is given, the result of this operation is stored into &lt;var&gt;c&lt;/var&gt;. All arguments should be bool vectors of the same length.</source>
          <target state="translated">Return &lt;em&gt;bitwise exclusive or&lt;/em&gt; of bool vectors &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; . If optional argument &lt;var&gt;c&lt;/var&gt; is given, the result of this operation is stored into &lt;var&gt;c&lt;/var&gt; . All arguments should be bool vectors of the same length.</target>
        </trans-unit>
        <trans-unit id="d0978405df8b99f81fa1f1db79b1ca991d5320c6" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;bitwise or&lt;/em&gt; of bool vectors &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt;. If optional argument &lt;var&gt;c&lt;/var&gt; is given, the result of this operation is stored into &lt;var&gt;c&lt;/var&gt;. All arguments should be bool vectors of the same length.</source>
          <target state="translated">Return &lt;em&gt;bitwise or&lt;/em&gt; of bool vectors &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; . If optional argument &lt;var&gt;c&lt;/var&gt; is given, the result of this operation is stored into &lt;var&gt;c&lt;/var&gt; . All arguments should be bool vectors of the same length.</target>
        </trans-unit>
        <trans-unit id="78e64e154365d4a36fe02545f77161113c09305b" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;set complement&lt;/em&gt; of bool vector &lt;var&gt;a&lt;/var&gt;. If optional argument &lt;var&gt;b&lt;/var&gt; is given, the result of this operation is stored into &lt;var&gt;b&lt;/var&gt;. All arguments should be bool vectors of the same length.</source>
          <target state="translated">Return &lt;em&gt;set complement&lt;/em&gt; of bool vector &lt;var&gt;a&lt;/var&gt; . If optional argument &lt;var&gt;b&lt;/var&gt; is given, the result of this operation is stored into &lt;var&gt;b&lt;/var&gt; . All arguments should be bool vectors of the same length.</target>
        </trans-unit>
        <trans-unit id="448a5ecf34f3d596881df4dd93411813ae639236" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;set difference&lt;/em&gt; of bool vectors &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt;. If optional argument &lt;var&gt;c&lt;/var&gt; is given, the result of this operation is stored into &lt;var&gt;c&lt;/var&gt;. All arguments should be bool vectors of the same length.</source>
          <target state="translated">Return &lt;em&gt;set difference&lt;/em&gt; of bool vectors &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; . If optional argument &lt;var&gt;c&lt;/var&gt; is given, the result of this operation is stored into &lt;var&gt;c&lt;/var&gt; . All arguments should be bool vectors of the same length.</target>
        </trans-unit>
        <trans-unit id="577df8858fb56b5d9e9a3919f645f2d18b3967dc" translate="yes" xml:space="preserve">
          <source>Return &lt;var&gt;button&lt;/var&gt;&amp;rsquo;s button-type.</source>
          <target state="translated">Return &lt;var&gt;button&lt;/var&gt; &amp;rsquo;s button-type.</target>
        </trans-unit>
        <trans-unit id="a80dc7ea5718a0d5f3a54ed4cac70804c03f18fe" translate="yes" xml:space="preserve">
          <source>Return &lt;var&gt;button&lt;/var&gt;&amp;rsquo;s text label.</source>
          <target state="translated">Return &lt;var&gt;button&lt;/var&gt; &amp;rsquo;s text label.</target>
        </trans-unit>
        <trans-unit id="67ee78c3f2e416bc795527a5a676ad6e5b530df1" translate="yes" xml:space="preserve">
          <source>Return a 12-element vector of month names (locale items &lt;code&gt;MON_1&lt;/code&gt; through &lt;code&gt;MON_12&lt;/code&gt;).</source>
          <target state="translated">Return a 12-element vector of month names (locale items &lt;code&gt;MON_1&lt;/code&gt; through &lt;code&gt;MON_12&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9350858b9d50eba2991511f5ba15e2db1166cd92" translate="yes" xml:space="preserve">
          <source>Return a 7-element vector of day names (locale items &lt;code&gt;DAY_1&lt;/code&gt; through &lt;code&gt;DAY_7&lt;/code&gt;);</source>
          <target state="translated">Return a 7-element vector of day names (locale items &lt;code&gt;DAY_1&lt;/code&gt; through &lt;code&gt;DAY_7&lt;/code&gt; );</target>
        </trans-unit>
        <trans-unit id="3333f10c19f87382b3345fdbb0b08c67bd433f3b" translate="yes" xml:space="preserve">
          <source>Return a &lt;em&gt;thunk&lt;/em&gt; for evaluating the &lt;var&gt;forms&lt;/var&gt;. A thunk is a closure (see &lt;a href=&quot;closures#Closures&quot;&gt;Closures&lt;/a&gt;) that inherits the lexical environment of the &lt;code&gt;thunk-delay&lt;/code&gt; call. Using this macro requires &lt;code&gt;lexical-binding&lt;/code&gt;.</source>
          <target state="translated">Return a &lt;em&gt;thunk&lt;/em&gt; for evaluating the &lt;var&gt;forms&lt;/var&gt; . A thunk is a closure (see &lt;a href=&quot;closures#Closures&quot;&gt;Closures&lt;/a&gt;) that inherits the lexical environment of the &lt;code&gt;thunk-delay&lt;/code&gt; call. Using this macro requires &lt;code&gt;lexical-binding&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af543b4ddffe2b38f723e19dd86e31084678dba8" translate="yes" xml:space="preserve">
          <source>Return a decoded time structure with only the given keywords filled out, leaving the rest &lt;code&gt;nil&lt;/code&gt;. For instance, to get a structure that represents &amp;ldquo;two months&amp;rdquo;, you could say:</source>
          <target state="translated">Return a decoded time structure with only the given keywords filled out, leaving the rest &lt;code&gt;nil&lt;/code&gt; . For instance, to get a structure that represents &amp;ldquo;two months&amp;rdquo;, you could say:</target>
        </trans-unit>
        <trans-unit id="8af6f68e8b50ae71f3e1965d97cd6ff368456665" translate="yes" xml:space="preserve">
          <source>Return a hash of &lt;var&gt;buffer-or-name&lt;/var&gt;. If &lt;code&gt;nil&lt;/code&gt;, this defaults to the current buffer. As opposed to &lt;code&gt;secure-hash&lt;/code&gt;, this function computes the hash based on the internal representation of the buffer, disregarding any coding systems. It&amp;rsquo;s therefore only useful when comparing two buffers running in the same Emacs, and is not guaranteed to return the same hash between different Emacs versions. It should be somewhat more efficient on larger buffers than &lt;code&gt;secure-hash&lt;/code&gt; is, and should not allocate more memory.</source>
          <target state="translated">Return a hash of &lt;var&gt;buffer-or-name&lt;/var&gt; . If &lt;code&gt;nil&lt;/code&gt; , this defaults to the current buffer. As opposed to &lt;code&gt;secure-hash&lt;/code&gt; , this function computes the hash based on the internal representation of the buffer, disregarding any coding systems. It&amp;rsquo;s therefore only useful when comparing two buffers running in the same Emacs, and is not guaranteed to return the same hash between different Emacs versions. It should be somewhat more efficient on larger buffers than &lt;code&gt;secure-hash&lt;/code&gt; is, and should not allocate more memory.</target>
        </trans-unit>
        <trans-unit id="c7a43f101a171e5b20f60d3a48baa8300839e67b" translate="yes" xml:space="preserve">
          <source>Return a lisp form describing the archive contents. The form is a list of &amp;rsquo;package-desc&amp;rsquo; structures (see</source>
          <target state="translated">Return a lisp form describing the archive contents. The form is a list of &amp;rsquo;package-desc&amp;rsquo; structures (see</target>
        </trans-unit>
        <trans-unit id="a0d637e746fdf21abdf0e0f624c6a864ae21020f" translate="yes" xml:space="preserve">
          <source>Return a list &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; of 2 integers, for the default paper size measured in millimeters (locale items &lt;code&gt;_NL_PAPER_WIDTH&lt;/code&gt; and &lt;code&gt;_NL_PAPER_HEIGHT&lt;/code&gt;).</source>
          <target state="translated">Return a list &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; of 2 integers, for the default paper size measured in millimeters (locale items &lt;code&gt;_NL_PAPER_WIDTH&lt;/code&gt; and &lt;code&gt;_NL_PAPER_HEIGHT&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7bc47c15832543c2be445ee5b409aead8c3dafa6" translate="yes" xml:space="preserve">
          <source>Return a list of all the live thread objects. A new list is returned by each invocation.</source>
          <target state="translated">すべてのライブスレッドオブジェクトのリストを返します。呼び出しごとに新しいリストが返されます。</target>
        </trans-unit>
        <trans-unit id="52ea91a8b61ffbcb3b8dcf9cad24548c6fa47570" translate="yes" xml:space="preserve">
          <source>Return a new bool-vector of &lt;var&gt;length&lt;/var&gt; elements, each one initialized to &lt;var&gt;initial&lt;/var&gt;.</source>
          <target state="translated">Return a new bool-vector of &lt;var&gt;length&lt;/var&gt; elements, each one initialized to &lt;var&gt;initial&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="0f957089f7f0446cc230481f495e40c385cae586" translate="yes" xml:space="preserve">
          <source>Return a new font spec using the specifications in &lt;var&gt;arguments&lt;/var&gt;, which should come in &lt;code&gt;property&lt;/code&gt;-&lt;code&gt;value&lt;/code&gt; pairs. The possible specifications are as follows:</source>
          <target state="translated">Return a new font spec using the specifications in &lt;var&gt;arguments&lt;/var&gt; , which should come in &lt;code&gt;property&lt;/code&gt; - &lt;code&gt;value&lt;/code&gt; pairs. The possible specifications are as follows:</target>
        </trans-unit>
        <trans-unit id="14b2726259933761f97dc67e964cb9c2bcb6c091" translate="yes" xml:space="preserve">
          <source>Return a newly-created char-table, with subtype &lt;var&gt;subtype&lt;/var&gt; (a symbol). Each element is initialized to &lt;var&gt;init&lt;/var&gt;, which defaults to &lt;code&gt;nil&lt;/code&gt;. You cannot alter the subtype of a char-table after the char-table is created.</source>
          <target state="translated">Return a newly-created char-table, with subtype &lt;var&gt;subtype&lt;/var&gt; (a symbol). Each element is initialized to &lt;var&gt;init&lt;/var&gt; , which defaults to &lt;code&gt;nil&lt;/code&gt; . You cannot alter the subtype of a char-table after the char-table is created.</target>
        </trans-unit>
        <trans-unit id="d40383deb69fce5631cd5a06a0419ded3389c02f" translate="yes" xml:space="preserve">
          <source>Return a value from the debugger. The value is computed by reading an expression with the minibuffer and evaluating it.</source>
          <target state="translated">デバッガから値を返します。値は、ミニバッファで式を読み込んで評価することで計算されます。</target>
        </trans-unit>
        <trans-unit id="9863b13f11c8aa797ba082ddceefb81725b9bf5e" translate="yes" xml:space="preserve">
          <source>Return all files under &lt;var&gt;directory&lt;/var&gt; whose names match &lt;var&gt;regexp&lt;/var&gt;. This function searches the specified &lt;var&gt;directory&lt;/var&gt; and its sub-directories, recursively, for files whose basenames (i.e., without the leading directories) match the specified &lt;var&gt;regexp&lt;/var&gt;, and returns a list of the absolute file names of the matching files (see &lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;absolute file names&lt;/a&gt;). The file names are returned in depth-first order, meaning that files in some sub-directory are returned before the files in its parent directory. In addition, matching files found in each subdirectory are sorted alphabetically by their basenames. By default, directories whose names match &lt;var&gt;regexp&lt;/var&gt; are omitted from the list, but if the optional argument &lt;var&gt;include-directories&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, they are included.</source>
          <target state="translated">Return all files under &lt;var&gt;directory&lt;/var&gt; whose names match &lt;var&gt;regexp&lt;/var&gt; . This function searches the specified &lt;var&gt;directory&lt;/var&gt; and its sub-directories, recursively, for files whose basenames (i.e., without the leading directories) match the specified &lt;var&gt;regexp&lt;/var&gt; , and returns a list of the absolute file names of the matching files (see &lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;absolute file names&lt;/a&gt;). The file names are returned in depth-first order, meaning that files in some sub-directory are returned before the files in its parent directory. In addition, matching files found in each subdirectory are sorted alphabetically by their basenames. By default, directories whose names match &lt;var&gt;regexp&lt;/var&gt; are omitted from the list, but if the optional argument &lt;var&gt;include-directories&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , they are included.</target>
        </trans-unit>
        <trans-unit id="4cccc6d8b95aa11fff3b8d59ac75d4d0b670942c" translate="yes" xml:space="preserve">
          <source>Return all nodes in &lt;var&gt;dom&lt;/var&gt; that are of type &lt;var&gt;tag&lt;/var&gt;. A typical use would be:</source>
          <target state="translated">Return all nodes in &lt;var&gt;dom&lt;/var&gt; that are of type &lt;var&gt;tag&lt;/var&gt; . A typical use would be:</target>
        </trans-unit>
        <trans-unit id="1cee67087ab18b7b76100f30bd3d6aa7c085f083" translate="yes" xml:space="preserve">
          <source>Return all nodes in &lt;var&gt;dom&lt;/var&gt; that have IDs that match &lt;var&gt;match&lt;/var&gt;, which is a regular expression.</source>
          <target state="translated">Return all nodes in &lt;var&gt;dom&lt;/var&gt; that have IDs that match &lt;var&gt;match&lt;/var&gt; , which is a regular expression.</target>
        </trans-unit>
        <trans-unit id="91a4055906841947b3716ba4bdf4f3f8fd8d3bc9" translate="yes" xml:space="preserve">
          <source>Return all nodes in &lt;var&gt;dom&lt;/var&gt; that have class names that match &lt;var&gt;match&lt;/var&gt;, which is a regular expression.</source>
          <target state="translated">Return all nodes in &lt;var&gt;dom&lt;/var&gt; that have class names that match &lt;var&gt;match&lt;/var&gt; , which is a regular expression.</target>
        </trans-unit>
        <trans-unit id="35676e640392dd6f36bbc12c45cf879b1bb8aeb1" translate="yes" xml:space="preserve">
          <source>Return all nodes in &lt;var&gt;dom&lt;/var&gt; that have styles that match &lt;var&gt;match&lt;/var&gt;, which is a regular expression.</source>
          <target state="translated">Return all nodes in &lt;var&gt;dom&lt;/var&gt; that have styles that match &lt;var&gt;match&lt;/var&gt; , which is a regular expression.</target>
        </trans-unit>
        <trans-unit id="12e283c6dc69337d344e18ed1c9f03b0cdbfce4f" translate="yes" xml:space="preserve">
          <source>Return all nodes in &lt;var&gt;dom&lt;/var&gt; where &lt;var&gt;predicate&lt;/var&gt; returns a non-&lt;code&gt;nil&lt;/code&gt; value. &lt;var&gt;predicate&lt;/var&gt; is called with the node to be tested as its parameter.</source>
          <target state="translated">Return all nodes in &lt;var&gt;dom&lt;/var&gt; where &lt;var&gt;predicate&lt;/var&gt; returns a non- &lt;code&gt;nil&lt;/code&gt; value. &lt;var&gt;predicate&lt;/var&gt; is called with the node to be tested as its parameter.</target>
        </trans-unit>
        <trans-unit id="6c912457826227b0c7dd5cadef9305699d802cab" translate="yes" xml:space="preserve">
          <source>Return all strings in &lt;var&gt;dom&lt;/var&gt;.</source>
          <target state="translated">Return all strings in &lt;var&gt;dom&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="df9ae5b9773b93dbac2d34d9539183c23a4161ab" translate="yes" xml:space="preserve">
          <source>Return all the children of the node.</source>
          <target state="translated">ノードのすべての子を返します。</target>
        </trans-unit>
        <trans-unit id="dd88c8b0042c771d1654744ee4789878f53b7274" translate="yes" xml:space="preserve">
          <source>Return all the non-string children of the node.</source>
          <target state="translated">ノードの文字列ではないすべての子を返します。</target>
        </trans-unit>
        <trans-unit id="45945aaed3cfdb3f0d74fefe98e5ed1ab911d69e" translate="yes" xml:space="preserve">
          <source>Return all the textual elements of the node as a concatenated string.</source>
          <target state="translated">ノードのすべてのテキスト要素を連結した文字列として返します。</target>
        </trans-unit>
        <trans-unit id="bbcae3f32d40f8ab230ddc546c8040cc887112da" translate="yes" xml:space="preserve">
          <source>Return all the textual elements of the node, as well as the textual elements of all the children of the node, recursively, as a concatenated string. This function also takes an optional separator to be inserted between the textual elements.</source>
          <target state="translated">ノードのすべてのテキスト要素と,そのノードのすべての子要素のテキスト要素を,連結された文字列として再帰的に返します.この関数は、テキスト要素の間に挿入されるオプションの区切り文字も取ります。</target>
        </trans-unit>
        <trans-unit id="75d7563a922e054e6e183c7ae33b5a50cf084c0e" translate="yes" xml:space="preserve">
          <source>Return information on the notification server, a list of strings. &lt;var&gt;bus&lt;/var&gt; can be a string denoting a D-Bus connection, the default is &lt;code&gt;:session&lt;/code&gt;. The returned list is &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;vendor&lt;/var&gt;
&lt;var&gt;version&lt;/var&gt; &lt;var&gt;spec-version&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">Return information on the notification server, a list of strings. &lt;var&gt;bus&lt;/var&gt; can be a string denoting a D-Bus connection, the default is &lt;code&gt;:session&lt;/code&gt; . The returned list is &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;vendor&lt;/var&gt; &lt;var&gt;version&lt;/var&gt; &lt;var&gt;spec-version&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb22ae5b86b7c27892e434b9647355713fbc9525" translate="yes" xml:space="preserve">
          <source>Return non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;advice&lt;/var&gt; is already in &lt;var&gt;function-def&lt;/var&gt;. Like for &lt;code&gt;remove-function&lt;/code&gt; above, instead of &lt;var&gt;advice&lt;/var&gt; being the actual function, it can also be the &lt;code&gt;name&lt;/code&gt; of the piece of advice.</source>
          <target state="translated">Return non- &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;advice&lt;/var&gt; is already in &lt;var&gt;function-def&lt;/var&gt; . Like for &lt;code&gt;remove-function&lt;/code&gt; above, instead of &lt;var&gt;advice&lt;/var&gt; being the actual function, it can also be the &lt;code&gt;name&lt;/code&gt; of the piece of advice.</target>
        </trans-unit>
        <trans-unit id="9c79f6eadda5c6bf1edbf52e1f3ac2892a37893c" translate="yes" xml:space="preserve">
          <source>Return non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is one of the two canonical boolean values: &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Return non- &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is one of the two canonical boolean values: &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b78442903da3c3a338977e6275d41e7672f01f9" translate="yes" xml:space="preserve">
          <source>Return non-&lt;code&gt;nil&lt;/code&gt; if the advice &lt;var&gt;function&lt;/var&gt; is already in the named function &lt;var&gt;symbol&lt;/var&gt;. &lt;var&gt;function&lt;/var&gt; can also be the &lt;code&gt;name&lt;/code&gt; of a piece of advice.</source>
          <target state="translated">Return non- &lt;code&gt;nil&lt;/code&gt; if the advice &lt;var&gt;function&lt;/var&gt; is already in the named function &lt;var&gt;symbol&lt;/var&gt; . &lt;var&gt;function&lt;/var&gt; can also be the &lt;code&gt;name&lt;/code&gt; of a piece of advice.</target>
        </trans-unit>
        <trans-unit id="e7774f5dc4fac47dba6d5d7c4910da583f39332a" translate="yes" xml:space="preserve">
          <source>Return non-&lt;code&gt;nil&lt;/code&gt; if the current token is &lt;em&gt;hanging&lt;/em&gt;. A token is &lt;em&gt;hanging&lt;/em&gt; if it is the last token on the line and if it is preceded by other tokens: a lone token on a line is not hanging.</source>
          <target state="translated">Return non- &lt;code&gt;nil&lt;/code&gt; if the current token is &lt;em&gt;hanging&lt;/em&gt;. A token is &lt;em&gt;hanging&lt;/em&gt; if it is the last token on the line and if it is preceded by other tokens: a lone token on a line is not hanging.</target>
        </trans-unit>
        <trans-unit id="749fdf20b039a6589727d385c01711993dfe65d7" translate="yes" xml:space="preserve">
          <source>Return non-&lt;code&gt;nil&lt;/code&gt; if the current token is the first on the line.</source>
          <target state="translated">Return non- &lt;code&gt;nil&lt;/code&gt; if the current token is the first on the line.</target>
        </trans-unit>
        <trans-unit id="21692945a976d2551625d2968080189f8378b625" translate="yes" xml:space="preserve">
          <source>Return non-&lt;code&gt;nil&lt;/code&gt; if the current token&amp;rsquo;s parent is actually a sibling. This is the case for example when the parent of a &lt;code&gt;&quot;,&quot;&lt;/code&gt; is just the previous &lt;code&gt;&quot;,&quot;&lt;/code&gt;.</source>
          <target state="translated">Return non- &lt;code&gt;nil&lt;/code&gt; if the current token&amp;rsquo;s parent is actually a sibling. This is the case for example when the parent of a &lt;code&gt;&quot;,&quot;&lt;/code&gt; is just the previous &lt;code&gt;&quot;,&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35d25d3e73f65253cd1e3eae099108919102b2fb" translate="yes" xml:space="preserve">
          <source>Return non-&lt;code&gt;nil&lt;/code&gt; if the current token&amp;rsquo;s parent is among &lt;var&gt;parents&lt;/var&gt;.</source>
          <target state="translated">Return non- &lt;code&gt;nil&lt;/code&gt; if the current token&amp;rsquo;s parent is among &lt;var&gt;parents&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7ac25114617a82f8dbbd908fe0ea16b1cbabe4c9" translate="yes" xml:space="preserve">
          <source>Return non-&lt;code&gt;nil&lt;/code&gt; if the next token is among &lt;var&gt;tokens&lt;/var&gt;.</source>
          <target state="translated">Return non- &lt;code&gt;nil&lt;/code&gt; if the next token is among &lt;var&gt;tokens&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2f8d3e2814d148e64a37ce29e28c26e57bb1afc6" translate="yes" xml:space="preserve">
          <source>Return non-&lt;code&gt;nil&lt;/code&gt; if the previous token is among &lt;var&gt;tokens&lt;/var&gt;.</source>
          <target state="translated">Return non- &lt;code&gt;nil&lt;/code&gt; if the previous token is among &lt;var&gt;tokens&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9930fe3783ba3641ea7e20c428fd271988ee2823" translate="yes" xml:space="preserve">
          <source>Return non-&lt;code&gt;nil&lt;/code&gt; if the value of &lt;var&gt;expression&lt;/var&gt; is already known.</source>
          <target state="translated">Return non- &lt;code&gt;nil&lt;/code&gt; if the value of &lt;var&gt;expression&lt;/var&gt; is already known.</target>
        </trans-unit>
        <trans-unit id="43814b61271727616edbfed177a8099c0f16e295" translate="yes" xml:space="preserve">
          <source>Return the &lt;em&gt;tag&lt;/em&gt; (also called &amp;ldquo;node name&amp;rdquo;) of the node.</source>
          <target state="translated">Return the &lt;em&gt;tag&lt;/em&gt; (also called &amp;ldquo;node name&amp;rdquo;) of the node.</target>
        </trans-unit>
        <trans-unit id="8481cb2be2eed2f2aec5002476ca21b615a95030" translate="yes" xml:space="preserve">
          <source>Return the &lt;var&gt;thing&lt;/var&gt; around or next to point, as a string.</source>
          <target state="translated">Return the &lt;var&gt;thing&lt;/var&gt; around or next to point, as a string.</target>
        </trans-unit>
        <trans-unit id="f5ed95fbe858de6955230e212b6f4df38604f77f" translate="yes" xml:space="preserve">
          <source>Return the actual row and column in &lt;var&gt;position&lt;/var&gt;, as a cons cell &lt;code&gt;(&lt;var&gt;col&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;row&lt;/var&gt;)&lt;/code&gt;. The values are the actual row and column numbers in the window given by &lt;var&gt;position&lt;/var&gt;. See &lt;a href=&quot;click-events#Click-Events&quot;&gt;Click Events&lt;/a&gt;, for details. The function returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;position&lt;/var&gt; does not include actual position values; in that case &lt;code&gt;posn-col-row&lt;/code&gt; can be used to get approximate values.</source>
          <target state="translated">Return the actual row and column in &lt;var&gt;position&lt;/var&gt; , as a cons cell &lt;code&gt;(&lt;var&gt;col&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;row&lt;/var&gt;)&lt;/code&gt; . The values are the actual row and column numbers in the window given by &lt;var&gt;position&lt;/var&gt; . See &lt;a href=&quot;click-events#Click-Events&quot;&gt;Click Events&lt;/a&gt;, for details. The function returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;position&lt;/var&gt; does not include actual position values; in that case &lt;code&gt;posn-col-row&lt;/code&gt; can be used to get approximate values.</target>
        </trans-unit>
        <trans-unit id="7dff552a1dad9cfba13c8cd97e5cb3b58293ed5b" translate="yes" xml:space="preserve">
          <source>Return the buffer position in &lt;var&gt;position&lt;/var&gt;. When the event occurred in the text area of the window, in a marginal area, or on a fringe, this is an integer specifying a buffer position. Otherwise, the value is undefined.</source>
          <target state="translated">Return the buffer position in &lt;var&gt;position&lt;/var&gt; . When the event occurred in the text area of the window, in a marginal area, or on a fringe, this is an integer specifying a buffer position. Otherwise, the value is undefined.</target>
        </trans-unit>
        <trans-unit id="27ad6ef17edb4d85d2fece6549d4dbf185bbcea6" translate="yes" xml:space="preserve">
          <source>Return the buffer position, in character units, corresponding to given &lt;var&gt;byte-position&lt;/var&gt; in the current buffer. If &lt;var&gt;byte-position&lt;/var&gt; is out of range, the value is &lt;code&gt;nil&lt;/code&gt;. In a multibyte buffer, an arbitrary value of &lt;var&gt;byte-position&lt;/var&gt; can be not at character boundary, but inside a multibyte sequence representing a single character; in this case, this function returns the buffer position of the character whose multibyte sequence includes &lt;var&gt;byte-position&lt;/var&gt;. In other words, the value does not change for all byte positions that belong to the same character.</source>
          <target state="translated">Return the buffer position, in character units, corresponding to given &lt;var&gt;byte-position&lt;/var&gt; in the current buffer. If &lt;var&gt;byte-position&lt;/var&gt; is out of range, the value is &lt;code&gt;nil&lt;/code&gt; . In a multibyte buffer, an arbitrary value of &lt;var&gt;byte-position&lt;/var&gt; can be not at character boundary, but inside a multibyte sequence representing a single character; in this case, this function returns the buffer position of the character whose multibyte sequence includes &lt;var&gt;byte-position&lt;/var&gt; . In other words, the value does not change for all byte positions that belong to the same character.</target>
        </trans-unit>
        <trans-unit id="7afab1094e5a0fff7b29de2dc1054c51d88f01ac" translate="yes" xml:space="preserve">
          <source>Return the button at position &lt;var&gt;pos&lt;/var&gt; in the current buffer, or &lt;code&gt;nil&lt;/code&gt;. If the button at &lt;var&gt;pos&lt;/var&gt; is a text property button, the return value is a marker pointing to &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">Return the button at position &lt;var&gt;pos&lt;/var&gt; in the current buffer, or &lt;code&gt;nil&lt;/code&gt; . If the button at &lt;var&gt;pos&lt;/var&gt; is a text property button, the return value is a marker pointing to &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="08ab8c2dcdedae851397afaff55bd02692fda3be" translate="yes" xml:space="preserve">
          <source>Return the character set as a string (locale item &lt;code&gt;CODESET&lt;/code&gt;).</source>
          <target state="translated">Return the character set as a string (locale item &lt;code&gt;CODESET&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0b70fe518e424a72c26a8f38f4e78b503365a5fd" translate="yes" xml:space="preserve">
          <source>Return the current thread.</source>
          <target state="translated">現在のスレッドを返します。</target>
        </trans-unit>
        <trans-unit id="5511c55fefeee9bb1c8ef388f062deda4b962893" translate="yes" xml:space="preserve">
          <source>Return the date of &lt;var&gt;ordinal&lt;/var&gt; in &lt;var&gt;year&lt;/var&gt; as a decoded time structure. For instance, the 120th day in 2004 is April 29th.</source>
          <target state="translated">Return the date of &lt;var&gt;ordinal&lt;/var&gt; in &lt;var&gt;year&lt;/var&gt; as a decoded time structure. For instance, the 120th day in 2004 is April 29th.</target>
        </trans-unit>
        <trans-unit id="df29a6cea2f5bf8f32552b2a28a40714f15215bd" translate="yes" xml:space="preserve">
          <source>Return the file. This will be the tarball for a multi-file package, or the single file for a simple package.</source>
          <target state="translated">ファイルを返します。複数ファイルのパッケージの場合は tarball、シンプルなパッケージの場合は単一ファイルとなります。</target>
        </trans-unit>
        <trans-unit id="da6466cedc5e98d3f8bc8446547c5b7c2b101bd4" translate="yes" xml:space="preserve">
          <source>Return the font object that is being used to display the character at position &lt;var&gt;position&lt;/var&gt; in the window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. If &lt;var&gt;string&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;position&lt;/var&gt; specifies a position in the current buffer; otherwise, &lt;var&gt;string&lt;/var&gt; should be a string, and &lt;var&gt;position&lt;/var&gt; specifies a position in that string.</source>
          <target state="translated">Return the font object that is being used to display the character at position &lt;var&gt;position&lt;/var&gt; in the window &lt;var&gt;window&lt;/var&gt; . If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , it defaults to the selected window. If &lt;var&gt;string&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;position&lt;/var&gt; specifies a position in the current buffer; otherwise, &lt;var&gt;string&lt;/var&gt; should be a string, and &lt;var&gt;position&lt;/var&gt; specifies a position in that string.</target>
        </trans-unit>
        <trans-unit id="32b14d68882151a0fde4123ac6a626d96600ec02" translate="yes" xml:space="preserve">
          <source>Return the image object in &lt;var&gt;position&lt;/var&gt;, either &lt;code&gt;nil&lt;/code&gt; (if there&amp;rsquo;s no image at &lt;var&gt;position&lt;/var&gt;), or an image spec &lt;code&gt;(image&amp;nbsp;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">Return the image object in &lt;var&gt;position&lt;/var&gt; , either &lt;code&gt;nil&lt;/code&gt; (if there&amp;rsquo;s no image at &lt;var&gt;position&lt;/var&gt; ), or an image spec &lt;code&gt;(image&amp;nbsp;&amp;hellip;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf9429abd773072db9140f722c6f504f354ed2b2" translate="yes" xml:space="preserve">
          <source>Return the image or string object described by &lt;var&gt;position&lt;/var&gt;, either &lt;code&gt;nil&lt;/code&gt; (which means &lt;var&gt;position&lt;/var&gt; describes buffer text), an image &lt;code&gt;(image&amp;nbsp;&amp;hellip;)&lt;/code&gt;, or a cons cell &lt;code&gt;(&lt;var&gt;string&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;string-pos&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">Return the image or string object described by &lt;var&gt;position&lt;/var&gt; , either &lt;code&gt;nil&lt;/code&gt; (which means &lt;var&gt;position&lt;/var&gt; describes buffer text), an image &lt;code&gt;(image&amp;nbsp;&amp;hellip;)&lt;/code&gt; , or a cons cell &lt;code&gt;(&lt;var&gt;string&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;string-pos&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="998293615ee7b880e4e4d81ae8a278e9ef954953" translate="yes" xml:space="preserve">
          <source>Return the key/value pair list of attributes of the node.</source>
          <target state="translated">ノードの属性のキーと値のペアのリストを返します。</target>
        </trans-unit>
        <trans-unit id="c90387729d07d81465ae3efcb8ccadcd10b2c23d" translate="yes" xml:space="preserve">
          <source>Return the long description of the package.</source>
          <target state="translated">パッケージの長い説明を返します。</target>
        </trans-unit>
        <trans-unit id="3394155dd4935b6f49ec88b96983ee569ea6dcad" translate="yes" xml:space="preserve">
          <source>Return the mutex associated with &lt;var&gt;cond&lt;/var&gt;. Note that the associated mutex cannot be changed.</source>
          <target state="translated">Return the mutex associated with &lt;var&gt;cond&lt;/var&gt; . Note that the associated mutex cannot be changed.</target>
        </trans-unit>
        <trans-unit id="da00a3b8325b0db6f435f2f705ecc4f9fe33bcef" translate="yes" xml:space="preserve">
          <source>Return the name of &lt;var&gt;cond&lt;/var&gt;, as passed to &lt;code&gt;make-condition-variable&lt;/code&gt;.</source>
          <target state="translated">Return the name of &lt;var&gt;cond&lt;/var&gt; , as passed to &lt;code&gt;make-condition-variable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="517ceee24533cc8162967ffefd08018e57eb8199" translate="yes" xml:space="preserve">
          <source>Return the name of &lt;var&gt;mutex&lt;/var&gt;, as specified to &lt;code&gt;make-mutex&lt;/code&gt;.</source>
          <target state="translated">Return the name of &lt;var&gt;mutex&lt;/var&gt; , as specified to &lt;code&gt;make-mutex&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa72610436d4e442d9c3c19e2fb8d333d332a69f" translate="yes" xml:space="preserve">
          <source>Return the name of &lt;var&gt;thread&lt;/var&gt;, as specified to &lt;code&gt;make-thread&lt;/code&gt;.</source>
          <target state="translated">Return the name of &lt;var&gt;thread&lt;/var&gt; , as specified to &lt;code&gt;make-thread&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91a4bb81ae4ed3c1810975d55beda106ff3f2b2c" translate="yes" xml:space="preserve">
          <source>Return the next button after (for &lt;code&gt;next-button&lt;/code&gt;) or before (for &lt;code&gt;previous-button&lt;/code&gt;) position &lt;var&gt;pos&lt;/var&gt; in the current buffer. If &lt;var&gt;count-current&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, count any button at &lt;var&gt;pos&lt;/var&gt; in the search, instead of starting at the next button.</source>
          <target state="translated">Return the next button after (for &lt;code&gt;next-button&lt;/code&gt; ) or before (for &lt;code&gt;previous-button&lt;/code&gt; ) position &lt;var&gt;pos&lt;/var&gt; in the current buffer. If &lt;var&gt;count-current&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , count any button at &lt;var&gt;pos&lt;/var&gt; in the search, instead of starting at the next button.</target>
        </trans-unit>
        <trans-unit id="45f6fdda6abd10a87def0d2bebb7c788cd08492a" translate="yes" xml:space="preserve">
          <source>Return the number of consecutive elements in &lt;var&gt;a&lt;/var&gt; equal &lt;var&gt;b&lt;/var&gt; starting at &lt;var&gt;i&lt;/var&gt;. &lt;code&gt;a&lt;/code&gt; is a bool vector, &lt;var&gt;b&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;i&lt;/var&gt; is an index into &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Return the number of consecutive elements in &lt;var&gt;a&lt;/var&gt; equal &lt;var&gt;b&lt;/var&gt; starting at &lt;var&gt;i&lt;/var&gt; . &lt;code&gt;a&lt;/code&gt; is a bool vector, &lt;var&gt;b&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; , and &lt;var&gt;i&lt;/var&gt; is an index into &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a9aae481e703108645548326f429bcc19dac322" translate="yes" xml:space="preserve">
          <source>Return the number of days in &lt;var&gt;month&lt;/var&gt; in &lt;var&gt;year&lt;/var&gt;. For instance, February 2020 has 29 days.</source>
          <target state="translated">Return the number of days in &lt;var&gt;month&lt;/var&gt; in &lt;var&gt;year&lt;/var&gt; . For instance, February 2020 has 29 days.</target>
        </trans-unit>
        <trans-unit id="73c17fec03d8c8bc23be1affc4fc14b62174bf94" translate="yes" xml:space="preserve">
          <source>Return the number of elements that are &lt;code&gt;t&lt;/code&gt; in bool vector &lt;var&gt;a&lt;/var&gt;.</source>
          <target state="translated">Return the number of elements that are &lt;code&gt;t&lt;/code&gt; in bool vector &lt;var&gt;a&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="b0a343012c09b4880277a5270dabe22fcdba6396" translate="yes" xml:space="preserve">
          <source>Return the object that &lt;var&gt;thread&lt;/var&gt; is waiting on. This function is primarily intended for debugging, and is given a &amp;ldquo;double hyphen&amp;rdquo; name to indicate that.</source>
          <target state="translated">Return the object that &lt;var&gt;thread&lt;/var&gt; is waiting on. This function is primarily intended for debugging, and is given a &amp;ldquo;double hyphen&amp;rdquo; name to indicate that.</target>
        </trans-unit>
        <trans-unit id="4e348e510457baf38c9c9b3f7ae9f3d47a43c7cf" translate="yes" xml:space="preserve">
          <source>Return the parent of &lt;var&gt;node&lt;/var&gt; in &lt;var&gt;dom&lt;/var&gt;.</source>
          <target state="translated">Return the parent of &lt;var&gt;node&lt;/var&gt; in &lt;var&gt;dom&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a1163d67fbe555ab351bb88e9e0e20faacead344" translate="yes" xml:space="preserve">
          <source>Return the pixel width and height of the object described by &lt;var&gt;position&lt;/var&gt;, as a cons cell &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; . &lt;var&gt;height&lt;/var&gt;)&lt;/code&gt;. If the &lt;var&gt;position&lt;/var&gt; describes a buffer position, return the size of the character at that position.</source>
          <target state="translated">Return the pixel width and height of the object described by &lt;var&gt;position&lt;/var&gt; , as a cons cell &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; . &lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; . If the &lt;var&gt;position&lt;/var&gt; describes a buffer position, return the size of the character at that position.</target>
        </trans-unit>
        <trans-unit id="ffe0cdd70af1cca2c4eb67febbc9790a655ecef5" translate="yes" xml:space="preserve">
          <source>Return the pixel-based x and y coordinates in &lt;var&gt;position&lt;/var&gt;, as a cons cell &lt;code&gt;(&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;. These coordinates are relative to the window given by &lt;code&gt;posn-window&lt;/code&gt;.</source>
          <target state="translated">Return the pixel-based x and y coordinates in &lt;var&gt;position&lt;/var&gt; , as a cons cell &lt;code&gt;(&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; . These coordinates are relative to the window given by &lt;code&gt;posn-window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60e36a2d05a56bae6a503607205ab40b79c7ffd8" translate="yes" xml:space="preserve">
          <source>Return the pixel-based x and y coordinates relative to the upper left corner of the object described by &lt;var&gt;position&lt;/var&gt;, as a cons cell &lt;code&gt;(&lt;var&gt;dx&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;dy&lt;/var&gt;)&lt;/code&gt;. If the &lt;var&gt;position&lt;/var&gt; describes buffer text, return the relative coordinates of the buffer-text character closest to that position.</source>
          <target state="translated">Return the pixel-based x and y coordinates relative to the upper left corner of the object described by &lt;var&gt;position&lt;/var&gt; , as a cons cell &lt;code&gt;(&lt;var&gt;dx&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;dy&lt;/var&gt;)&lt;/code&gt; . If the &lt;var&gt;position&lt;/var&gt; describes buffer text, return the relative coordinates of the buffer-text character closest to that position.</target>
        </trans-unit>
        <trans-unit id="7061ea94aabaa2416c01bc4562504861e05a4a97" translate="yes" xml:space="preserve">
          <source>Return the position at which &lt;var&gt;button&lt;/var&gt; ends.</source>
          <target state="translated">Return the position at which &lt;var&gt;button&lt;/var&gt; ends.</target>
        </trans-unit>
        <trans-unit id="73f7be2568522e0a72d19f9a5171c60606941a98" translate="yes" xml:space="preserve">
          <source>Return the position at which &lt;var&gt;button&lt;/var&gt; starts.</source>
          <target state="translated">Return the position at which &lt;var&gt;button&lt;/var&gt; starts.</target>
        </trans-unit>
        <trans-unit id="ba30edee2b028cdedcae74a30bb8c41e1aeee43b" translate="yes" xml:space="preserve">
          <source>Return the position that &lt;code&gt;(beginning-of-line &lt;var&gt;count&lt;/var&gt;)&lt;/code&gt; would move to.</source>
          <target state="translated">Return the position that &lt;code&gt;(beginning-of-line &lt;var&gt;count&lt;/var&gt;)&lt;/code&gt; would move to.</target>
        </trans-unit>
        <trans-unit id="c80e32f24ffb7459cc96301bc59d4055f827dbd1" translate="yes" xml:space="preserve">
          <source>Return the position that &lt;code&gt;(end-of-line &lt;var&gt;count&lt;/var&gt;)&lt;/code&gt; would move to.</source>
          <target state="translated">Return the position that &lt;code&gt;(end-of-line &lt;var&gt;count&lt;/var&gt;)&lt;/code&gt; would move to.</target>
        </trans-unit>
        <trans-unit id="ae265cac87b21d88120fb78dda6dac0ca3aefd51" translate="yes" xml:space="preserve">
          <source>Return the proper offset to align the current token with the parent. If non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;offset&lt;/var&gt; should be an integer giving an additional offset to apply.</source>
          <target state="translated">Return the proper offset to align the current token with the parent. If non- &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;offset&lt;/var&gt; should be an integer giving an additional offset to apply.</target>
        </trans-unit>
        <trans-unit id="89552da9266862205d7e7f5fb7c4925d461d9a07" translate="yes" xml:space="preserve">
          <source>Return the property &lt;var&gt;prop&lt;/var&gt; of &lt;var&gt;abbrev&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if the abbrev has no such property.</source>
          <target state="translated">Return the property &lt;var&gt;prop&lt;/var&gt; of &lt;var&gt;abbrev&lt;/var&gt; , or &lt;code&gt;nil&lt;/code&gt; if the abbrev has no such property.</target>
        </trans-unit>
        <trans-unit id="32d0d3abcafda0bbf4c9a4b65f4a9a373328e390" translate="yes" xml:space="preserve">
          <source>Return the property &lt;var&gt;prop&lt;/var&gt; of abbrev table &lt;var&gt;table&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;table&lt;/var&gt; has no such property.</source>
          <target state="translated">Return the property &lt;var&gt;prop&lt;/var&gt; of abbrev table &lt;var&gt;table&lt;/var&gt; , or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;table&lt;/var&gt; has no such property.</target>
        </trans-unit>
        <trans-unit id="d344f6d8435ea011645a6b7a066c7d4619f7d559" translate="yes" xml:space="preserve">
          <source>Return the signature for the file.</source>
          <target state="translated">ファイルの署名を返します。</target>
        </trans-unit>
        <trans-unit id="ecfab064a56207898b8124c4c36dc262030458f9" translate="yes" xml:space="preserve">
          <source>Return the string object described by &lt;var&gt;position&lt;/var&gt;, either &lt;code&gt;nil&lt;/code&gt; (which means &lt;var&gt;position&lt;/var&gt; describes buffer text), or a cons cell &lt;code&gt;(&lt;var&gt;string&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;string-pos&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">Return the string object described by &lt;var&gt;position&lt;/var&gt; , either &lt;code&gt;nil&lt;/code&gt; (which means &lt;var&gt;position&lt;/var&gt; describes buffer text), or a cons cell &lt;code&gt;(&lt;var&gt;string&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;string-pos&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="541dc26b2ad10002e35b631e4db49204eb4f539a" translate="yes" xml:space="preserve">
          <source>Return the thread to which &lt;var&gt;process&lt;/var&gt; is locked. If &lt;var&gt;process&lt;/var&gt; is unlocked, return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Return the thread to which &lt;var&gt;process&lt;/var&gt; is locked. If &lt;var&gt;process&lt;/var&gt; is unlocked, return &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c376d9b07558e05e3b0c714d72996292648b1e46" translate="yes" xml:space="preserve">
          <source>Return the timestamp in &lt;var&gt;position&lt;/var&gt;. This is the time at which the event occurred, in milliseconds.</source>
          <target state="translated">Return the timestamp in &lt;var&gt;position&lt;/var&gt; . This is the time at which the event occurred, in milliseconds.</target>
        </trans-unit>
        <trans-unit id="d4f2b9f35f57878969611520e75cb98a4e4b68d8" translate="yes" xml:space="preserve">
          <source>Return the value of &lt;var&gt;attribute&lt;/var&gt; in the node. A common usage would be:</source>
          <target state="translated">ノードの &lt;var&gt;attribute&lt;/var&gt; の値を返します。一般的な使用法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="76a2de8b2fc66bd3523d0021cc6d67125418cbdd" translate="yes" xml:space="preserve">
          <source>Return the value of &lt;var&gt;expression&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;expression&lt;/var&gt; の値を返します。</target>
        </trans-unit>
        <trans-unit id="b0ed816e8ba6b4dafcc1e61ed622102facc78777" translate="yes" xml:space="preserve">
          <source>Return the value of &lt;var&gt;property&lt;/var&gt; in &lt;var&gt;image&lt;/var&gt;. Properties can be set by using &lt;code&gt;setf&lt;/code&gt;. Setting a property to &lt;code&gt;nil&lt;/code&gt; will remove the property from the image.</source>
          <target state="translated">値を返します &lt;var&gt;property&lt;/var&gt; で &lt;var&gt;image&lt;/var&gt; 。プロパティは、 &lt;code&gt;setf&lt;/code&gt; を使用して設定できます。プロパティを &lt;code&gt;nil&lt;/code&gt; に設定すると、画像からプロパティが削除されます。</target>
        </trans-unit>
        <trans-unit id="a1a87bd6ed826d027d79425e68bb78320c28cc48" translate="yes" xml:space="preserve">
          <source>Return the width (thickness) in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s bottom divider. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. The return value is zero for the minibuffer window or a bottommost window on a minibuffer-less frame.</source>
          <target state="translated">&lt;var&gt;window&lt;/var&gt; の下部仕切りの幅（厚さ）をピクセル単位で返します。 &lt;var&gt;window&lt;/var&gt; はライブウィンドウである必要があり、デフォルトでは選択したウィンドウになります。ミニバッファウィンドウまたはミニバッファのないフレームの最下部のウィンドウの場合、戻り値はゼロです。</target>
        </trans-unit>
        <trans-unit id="07dff9057087adcc56ee63446323baa36b2da0ac" translate="yes" xml:space="preserve">
          <source>Return the width (thickness) in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s right divider. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. The return value is always zero for a rightmost window.</source>
          <target state="translated">&lt;var&gt;window&lt;/var&gt; の右仕切りの幅（厚さ）をピクセル単位で返します。 &lt;var&gt;window&lt;/var&gt; はライブウィンドウである必要があり、デフォルトでは選択したウィンドウになります。右端のウィンドウの戻り​​値は常にゼロです。</target>
        </trans-unit>
        <trans-unit id="9d1962cadbf1a20107f5c250bd3f03da052cd81b" translate="yes" xml:space="preserve">
          <source>Return the window area recorded in &lt;var&gt;position&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; when the event occurred in the text area of the window; otherwise, it is a symbol identifying the area in which the event occurred.</source>
          <target state="translated">&lt;var&gt;position&lt;/var&gt; 記録されたウィンドウ領域を返します。ウィンドウのテキスト領域でイベントが発生した場合は &lt;code&gt;nil&lt;/code&gt; を返します。それ以外の場合は、イベントが発生した領域を識別する記号です。</target>
        </trans-unit>
        <trans-unit id="985426041232947c5bed923c4ea9fed040fcbe12" translate="yes" xml:space="preserve">
          <source>Return the window that &lt;var&gt;position&lt;/var&gt; is in. If &lt;var&gt;position&lt;/var&gt; represents a location outside the frame where the event was initiated, return that frame instead.</source>
          <target state="translated">ことウィンドウ戻り &lt;var&gt;position&lt;/var&gt; にあるが。場合 &lt;var&gt;position&lt;/var&gt; 、イベントが開始されたフレーム外側位置を表し、代わりにそのフレームを返します。</target>
        </trans-unit>
        <trans-unit id="ead02eb694e824eb5a52793ad31f92a51b5b4631" translate="yes" xml:space="preserve">
          <source>Return to the top level editor command loop (&lt;code&gt;top-level&lt;/code&gt;). This exits all recursive editing levels, including all levels of Edebug activity. However, instrumented code protected with &lt;code&gt;unwind-protect&lt;/code&gt; or &lt;code&gt;condition-case&lt;/code&gt; forms may resume debugging.</source>
          <target state="translated">トップレベルエディタのコマンドループ（ &lt;code&gt;top-level&lt;/code&gt; ）に戻ります。これにより、すべてのレベルのEdebugアクティビティを含む、すべての再帰的な編集レベルが終了します。ただし、 &lt;code&gt;unwind-protect&lt;/code&gt; または &lt;code&gt;condition-case&lt;/code&gt; フォームで保護されたインストルメント化されたコードは、デバッグを再開する場合があります。</target>
        </trans-unit>
        <trans-unit id="5c7d6f87e6c7b4d2dd3cc77be0038fa0b661a856" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;form&lt;/var&gt; is a &lt;em&gt;safe&lt;/em&gt; Lisp expression, or returns a list that describes why it might be unsafe. The argument &lt;var&gt;unsafep-vars&lt;/var&gt; is a list of symbols known to have temporary bindings at this point; it is mainly used for internal recursive calls. The current buffer is an implicit argument, which provides a list of buffer-local bindings.</source>
          <target state="translated">&lt;var&gt;form&lt;/var&gt; が&lt;em&gt;安全な&lt;/em&gt;Lisp式である場合は &lt;code&gt;nil&lt;/code&gt; を返し、&lt;em&gt;安全&lt;/em&gt;でない理由を説明するリストを返します。引数 &lt;var&gt;unsafep-vars&lt;/var&gt; は、この時点で一時的なバインディングがあることがわかっているシンボルのリストです。これは主に内部再帰呼び出しに使用されます。現在のバッファは暗黙の引数であり、バッファとローカルのバインディングのリストを提供します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a4a14f7e07d41a5faee55f0d2f026bb86d7b57d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a symbol that names a character set, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;var&gt;object&lt;/var&gt; が文字セットに名前を付けるシンボルである場合は &lt;code&gt;t&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4fabe257ce75606d6c949db20e0896d4a2c7c967" translate="yes" xml:space="preserve">
          <source>Returns either the string shown in the echo area, or when a pop-up buffer is used, the window used to display it.</source>
          <target state="translated">エコー領域に表示されている文字列、またはポップアップバッファを使用している場合は、それを表示するために使用したウィンドウのいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="f8cf7e9fe624f841abd011e27016b23cd231882d" translate="yes" xml:space="preserve">
          <source>Returns the capabilities of the notification server, a list of symbols. &lt;var&gt;bus&lt;/var&gt; can be a string denoting a D-Bus connection, the default is &lt;code&gt;:session&lt;/code&gt;. The following capabilities can be expected:</source>
          <target state="translated">通知サーバーの機能、シンボルのリストを返します。 &lt;var&gt;bus&lt;/var&gt; は、D-Bus接続を示す文字列にすることができます。デフォルトは &lt;code&gt;:session&lt;/code&gt; です。次の機能が期待できます。</target>
        </trans-unit>
        <trans-unit id="bf911dbc08bb9c0bc72df822f3a98b1d7afe196f" translate="yes" xml:space="preserve">
          <source>Reverting</source>
          <target state="translated">Reverting</target>
        </trans-unit>
        <trans-unit id="3373e33f94f507be9bb182872bffdfc503337932" translate="yes" xml:space="preserve">
          <source>Reverting tries to preserve marker positions in the buffer by using the replacement feature of &lt;code&gt;insert-file-contents&lt;/code&gt;. If the buffer contents and the file contents are identical before the revert operation, reverting preserves all the markers. If they are not identical, reverting does change the buffer; in that case, it preserves the markers in the unchanged text (if any) at the beginning and end of the buffer. Preserving any additional markers would be problematical.</source>
          <target state="translated">元に戻すと、 &lt;code&gt;insert-file-contents&lt;/code&gt; の置換機能を使用して、バッファー内のマーカーの位置が保持されます。復帰操作の前にバッファの内容とファイルの内容が同一である場合、復帰するとすべてのマーカーが保持されます。それらが同一でない場合、元に戻すとバッファが変更されます。その場合、バッファの最初と最後にある変更されていないテキスト（存在する場合）のマーカーが保持されます。追加のマーカーを保持することは問題があります。</target>
        </trans-unit>
        <trans-unit id="73776d5b68dceec98acc490663799d4f99fa488c" translate="yes" xml:space="preserve">
          <source>Reworking the grammar to try and solve conflicts has its downsides, tho, because SMIE assumes that the grammar reflects the logical structure of the code, so it is preferable to keep the BNF closer to the intended abstract syntax tree.</source>
          <target state="translated">SMIEは文法がコードの論理構造を反映していると仮定しているので、BNFを意図した抽象構文ツリーに近づけておくことが望ましい。</target>
        </trans-unit>
        <trans-unit id="c68a8d4726d60be762b51a641362f58db5a22a3c" translate="yes" xml:space="preserve">
          <source>Rotate the image by 90 degrees clockwise (&lt;code&gt;image-rotate&lt;/code&gt;). A prefix means to rotate by 90 degrees counter-clockwise instead.</source>
          <target state="translated">画像を時計回りに90度回転します（ &lt;code&gt;image-rotate&lt;/code&gt; ）。接頭辞は、代わりに反時計回りに90度回転することを意味します。</target>
        </trans-unit>
        <trans-unit id="63cd1f2bbe16226880ce3b96429eda5364eb25e2" translate="yes" xml:space="preserve">
          <source>Round-Trip Specification</source>
          <target state="translated">ラウンドトリップ仕様</target>
        </trans-unit>
        <trans-unit id="019c35c69487e51daa93b6ca45e4fe43394d641e" translate="yes" xml:space="preserve">
          <source>Rounding Operations</source>
          <target state="translated">丸め操作</target>
        </trans-unit>
        <trans-unit id="4c2367a79f6dd9f384db915e3163fb47d998c60f" translate="yes" xml:space="preserve">
          <source>Rules for time zones and daylight saving time.</source>
          <target state="translated">時間帯とサマータイムのルール。</target>
        </trans-unit>
        <trans-unit id="5c98d4f3fbe4f30d1eb7d8e9af8f16b99a6492cb" translate="yes" xml:space="preserve">
          <source>Rules for writing regular expressions.</source>
          <target state="translated">正規表現の書き方のルール</target>
        </trans-unit>
        <trans-unit id="1849b56de48087c27b0309ae045c3b8dff44dc82" translate="yes" xml:space="preserve">
          <source>Run &lt;var&gt;body&lt;/var&gt; with &lt;var&gt;var&lt;/var&gt; bound to each value that &lt;var&gt;iterator&lt;/var&gt; produces.</source>
          <target state="translated">&lt;var&gt;iterator&lt;/var&gt; 生成する各値に &lt;var&gt;var&lt;/var&gt; をバインドして &lt;var&gt;body&lt;/var&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="04deb205be4a7ab8c325a7fc13efdadfbc458b8d" translate="yes" xml:space="preserve">
          <source>Run the program for one expression (&lt;code&gt;edebug-forward-sexp&lt;/code&gt;).</source>
          <target state="translated">1つの式（ &lt;code&gt;edebug-forward-sexp&lt;/code&gt; ）に対してプログラムを実行します。</target>
        </trans-unit>
        <trans-unit id="3d588dc7f25fd2a01f646bd7ca63e3be329d55e6" translate="yes" xml:space="preserve">
          <source>Run the program until the end of the containing sexp (&lt;code&gt;edebug-step-out&lt;/code&gt;).</source>
          <target state="translated">含まれているsexp（ &lt;code&gt;edebug-step-out&lt;/code&gt; ）が終了するまでプログラムを実行します。</target>
        </trans-unit>
        <trans-unit id="98c8157782ca6963670b75f2f6b7516671ace802" translate="yes" xml:space="preserve">
          <source>Run without an interactive terminal. See &lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;Batch Mode&lt;/a&gt;.</source>
          <target state="translated">インタラクティブ端末なしで実行します。&lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;バッチモードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="be5b6cb427fd68c18fa5ef41915bfe7ea392d74c" translate="yes" xml:space="preserve">
          <source>Running Emacs in an unfriendly environment.</source>
          <target state="translated">不親切な環境でEmacsを実行している。</target>
        </trans-unit>
        <trans-unit id="02db231fb5cb296bab91cd45fb2d56d9900e529b" translate="yes" xml:space="preserve">
          <source>Running Emacs without terminal interaction.</source>
          <target state="translated">端末とのやりとりなしでEmacsを実行します。</target>
        </trans-unit>
        <trans-unit id="cb19c3a26c8e0ca569cc71bbdc8cfc40fca3446a" translate="yes" xml:space="preserve">
          <source>Running Hooks</source>
          <target state="translated">ランニングフック</target>
        </trans-unit>
        <trans-unit id="5c4f806cf105786ce3d17cc253c6a9ea2dac3de6" translate="yes" xml:space="preserve">
          <source>Running a function when a variable is changed.</source>
          <target state="translated">変数が変更されたときに関数を実行する</target>
        </trans-unit>
        <trans-unit id="e5a402a1dd78dba64c6952ef1eb398898f18c09a" translate="yes" xml:space="preserve">
          <source>Running and communicating with subprocesses.</source>
          <target state="translated">サブプロセスの実行と通信</target>
        </trans-unit>
        <trans-unit id="d971566f87b102a960a790d9d248795b0d4e56a3" translate="yes" xml:space="preserve">
          <source>Running window change functions does not save and restore match data. Unless running &lt;code&gt;window-configuration-change-hook&lt;/code&gt; it does not save or restore the selected window or frame or the current buffer either.</source>
          <target state="translated">ウィンドウ変更機能を実行しても、一致データは保存および復元されません。 &lt;code&gt;window-configuration-change-hook&lt;/code&gt; を実行しない限り、選択したウィンドウやフレーム、または現在のバッファも保存または復元されません。</target>
        </trans-unit>
        <trans-unit id="ede813d7a36c01b56172920aa1f2bb327f73595d" translate="yes" xml:space="preserve">
          <source>Runs code when no longer reachable.</source>
          <target state="translated">到達できなくなったときにコードを実行します。</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="956da837f21f1162d031794cb53e38c348e5a2d9" translate="yes" xml:space="preserve">
          <source>S-</source>
          <target state="translated">S-</target>
        </trans-unit>
        <trans-unit id="090c3d63600fb0a56161730225850c055fd689b6" translate="yes" xml:space="preserve">
          <source>S-mouse-1</source>
          <target state="translated">S-mouse-1</target>
        </trans-unit>
        <trans-unit id="149b8de2b0282bcde23304b8948eaaf895a98809" translate="yes" xml:space="preserve">
          <source>SHIFT</source>
          <target state="translated">SHIFT</target>
        </trans-unit>
        <trans-unit id="431de839c3cfa8f3c21a44997868bec32d036c1f" translate="yes" xml:space="preserve">
          <source>SKIP</source>
          <target state="translated">SKIP</target>
        </trans-unit>
        <trans-unit id="745a31607dcecb9c3f083837516fc293998e5c06" translate="yes" xml:space="preserve">
          <source>SMIE Setup and Features</source>
          <target state="translated">SMIEの設定と機能</target>
        </trans-unit>
        <trans-unit id="a323aa84f785e027446756618551f38ccaf356e9" translate="yes" xml:space="preserve">
          <source>SMIE comes with a predefined lexical analyzer which uses syntax tables in the following way: any sequence of characters that have word or symbol syntax is considered a token, and so is any sequence of characters that have punctuation syntax. This default lexer is often a good starting point but is rarely actually correct for any given language. For example, it will consider &lt;code&gt;&quot;2,+3&quot;&lt;/code&gt; to be composed of 3 tokens: &lt;code&gt;&quot;2&quot;&lt;/code&gt;, &lt;code&gt;&quot;,+&quot;&lt;/code&gt;, and &lt;code&gt;&quot;3&quot;&lt;/code&gt;.</source>
          <target state="translated">SMIEには、次のように構文テーブルを使用する事前定義された字句解析プログラムが付属しています。単語または記号の構文を持つ文字のシーケンスはトークンと見なされ、句読点の構文を持つ文字のシーケンスもトークンと見なされます。このデフォルトのレクサーは、多くの場合、適切な開始点ですが、特定の言語に対して実際に正しいことはめったにありません。たとえば、 &lt;code&gt;&quot;2,+3&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;2&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;,+&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;3&quot;&lt;/code&gt; の3つのトークンで構成されていると見なされます。</target>
        </trans-unit>
        <trans-unit id="3ca28280fe8c9261318c79e00364b7c790d93607" translate="yes" xml:space="preserve">
          <source>SMIE indentation is based on the idea that indentation rules should be as local as possible. To this end, it relies on the idea of &lt;em&gt;virtual&lt;/em&gt; indentation, which is the indentation that a particular program point would have if it were at the beginning of a line. Of course, if that program point is indeed at the beginning of a line, its virtual indentation is its current indentation. But if not, then SMIE uses the indentation algorithm to compute the virtual indentation of that point. Now in practice, the virtual indentation of a program point does not have to be identical to the indentation it would have if we inserted a newline before it. To see how this works, the SMIE rule for indentation after a &lt;code&gt;{&lt;/code&gt; in C does not care whether the &lt;code&gt;{&lt;/code&gt; is standing on a line of its own or is at the end of the preceding line. Instead, these different cases are handled in the indentation rule that decides how to indent before a &lt;code&gt;{&lt;/code&gt;.</source>
          <target state="translated">SMIEインデントは、インデントルールを可能な限りローカルにする必要があるという考えに基づいています。この目的のために、それは&lt;em&gt;仮想&lt;/em&gt;インデントの概念に依存しています。これは、特定のプログラムポイントが行の先頭にある場合に持つインデントです。もちろん、そのプログラムポイントが実際に行の先頭にある場合、その仮想インデントは現在のインデントです。ただし、そうでない場合、SMIEはインデントアルゴリズムを使用してそのポイントの仮想インデントを計算します。実際には、プログラムポイントの仮想インデントは、その前に改行を挿入した場合のインデントと同じである必要はありません。これがどのように機能するかを確認するために、Cの &lt;code&gt;{&lt;/code&gt; の後のインデントのSMIEルールは、 &lt;code&gt;{&lt;/code&gt; は独自の行に立っているか、前の行の終わりにあります。代わりに、これらのさまざまなケースは、 &lt;code&gt;{&lt;/code&gt; の前にインデントする方法を決定するインデントルールで処理されます。</target>
        </trans-unit>
        <trans-unit id="647e9d9835804db4a04b47da3624a55498b44ee3" translate="yes" xml:space="preserve">
          <source>SMIE indentation rules are specified using a function that takes two arguments &lt;var&gt;method&lt;/var&gt; and &lt;var&gt;arg&lt;/var&gt; where the meaning of &lt;var&gt;arg&lt;/var&gt; and the expected return value depend on &lt;var&gt;method&lt;/var&gt;.</source>
          <target state="translated">SMIEのインデントルールは二つの引数を取る関数使用して指定されている &lt;var&gt;method&lt;/var&gt; と &lt;var&gt;arg&lt;/var&gt; の意味 &lt;var&gt;arg&lt;/var&gt; と期待戻り値が依存 &lt;var&gt;method&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="0eaf99aaddc1334477c4382e239b81d6039e92cb" translate="yes" xml:space="preserve">
          <source>SMIE is a package that provides a generic navigation and indentation engine. Based on a very simple parser using an operator precedence grammar, it lets major modes extend the sexp-based navigation of Lisp to non-Lisp languages as well as provide a simple to use but reliable auto-indentation.</source>
          <target state="translated">SMIE は汎用的なナビゲーションおよびインデントエンジンを提供するパッケージです。演算子の優先順位文法を使った非常にシンプルなパーサをベースにしており、主要なモードでは、Lispのsexpベースのナビゲーションを非Lisp言語にまで拡張することができ、シンプルでありながら信頼性の高い自動インデントを提供します。</target>
        </trans-unit>
        <trans-unit id="8cc32e3285358843e2bb18b22af60814435e8975" translate="yes" xml:space="preserve">
          <source>SMIE is meant to be a one-stop shop for structural navigation and various other features which rely on the syntactic structure of code, in particular automatic indentation. The main entry point is &lt;code&gt;smie-setup&lt;/code&gt; which is a function typically called while setting up a major mode.</source>
          <target state="translated">SMIEは、コードの構文構造、特に自動インデントに依存する構造ナビゲーションやその他のさまざまな機能のワンストップショップとなることを目的としています。主なエントリポイントは &lt;code&gt;smie-setup&lt;/code&gt; です。これは、メジャーモードのセットアップ中に通常呼び出される関数です。</target>
        </trans-unit>
        <trans-unit id="256fddfad4c5523da85ac4896b52a67dd5bba0b9" translate="yes" xml:space="preserve">
          <source>SMIE provides various functions designed specifically for use in the indentation rules function (several of those functions break if used in another context). These functions all start with the prefix &lt;code&gt;smie-rule-&lt;/code&gt;.</source>
          <target state="translated">SMIEは、イン​​デントルール関数で使用するために特別に設計されたさまざまな関数を提供します（これらの関数のいくつかは、別のコンテキストで使用すると機能しなくなります）。これらの関数はすべて、接頭辞 &lt;code&gt;smie-rule-&lt;/code&gt; で始まります。</target>
        </trans-unit>
        <trans-unit id="a55f21b5c19e3144a284b28c14e9cc99cbd1d0d8" translate="yes" xml:space="preserve">
          <source>SMIE setup and features.</source>
          <target state="translated">SMIEの設定と特徴。</target>
        </trans-unit>
        <trans-unit id="2c6d6f2cc4b7bb340e6ff2c84c64795d25a7ac6d" translate="yes" xml:space="preserve">
          <source>SMIE&amp;rsquo;s precedence grammars simply give to each token a pair of precedences: the left-precedence and the right-precedence. We say &lt;code&gt;T1 &amp;lt; T2&lt;/code&gt; if the right-precedence of token &lt;code&gt;T1&lt;/code&gt; is less than the left-precedence of token &lt;code&gt;T2&lt;/code&gt;. A good way to read this &lt;code&gt;&amp;lt;&lt;/code&gt; is as a kind of parenthesis: if we find &lt;code&gt;... T1 something
T2 ...&lt;/code&gt; then that should be parsed as &lt;code&gt;... T1 (something T2 ...&lt;/code&gt; rather than as &lt;code&gt;... T1 something) T2 ...&lt;/code&gt;. The latter interpretation would be the case if we had &lt;code&gt;T1 &amp;gt; T2&lt;/code&gt;. If we have &lt;code&gt;T1 = T2&lt;/code&gt;, it means that token T2 follows token T1 in the same syntactic construction, so typically we have &lt;code&gt;&quot;begin&quot; = &quot;end&quot;&lt;/code&gt;. Such pairs of precedences are sufficient to express left-associativity or right-associativity of infix operators, nesting of tokens like parentheses and many other cases.</source>
          <target state="translated">SMIEの優先順位文法は、各トークンに、左優先順位と右優先順位のペアの優先順位を与えるだけです。トークン &lt;code&gt;T1&lt;/code&gt; の右の優先順位がトークン &lt;code&gt;T2&lt;/code&gt; の左の優先順位よりも小さい場合、 &lt;code&gt;T1 &amp;lt; T2&lt;/code&gt; と言います。この &lt;code&gt;&amp;lt;&lt;/code&gt; を読む良い方法は、一種の括弧として &lt;code&gt;... T1 something T2 ...&lt;/code&gt; 見つかった場合、それは &lt;code&gt;... T1 (something T2 ...&lt;/code&gt; ではなく &lt;code&gt;... T1 something) T2 ...&lt;/code&gt; として解析する必要があります。 ）T2 ...。後者の解釈は、 &lt;code&gt;T1 &amp;gt; T2&lt;/code&gt; 場合に当てはまります。 &lt;code&gt;T1 = T2&lt;/code&gt; 場合、同じ構文構造でトークンT2がトークンT1の後に続くことを意味するため、通常は &lt;code&gt;&quot;begin&quot; = &quot;end&quot;&lt;/code&gt; 。このような優先順位のペアは、中置演算子の左結合性または右結合性、括弧などのトークンのネスト、およびその他の多くの場合を表すのに十分です。</target>
        </trans-unit>
        <trans-unit id="99a38b98676fcda1dfd44294dab30329f47cc385" translate="yes" xml:space="preserve">
          <source>SPC</source>
          <target state="translated">SPC</target>
        </trans-unit>
        <trans-unit id="885556121357469ce9848d64ab90e4501f8d2c2a" translate="yes" xml:space="preserve">
          <source>SPC .. ~</source>
          <target state="translated">SPC ...</target>
        </trans-unit>
        <trans-unit id="715dff4ef846b32148b5b183222e444dbb141e03" translate="yes" xml:space="preserve">
          <source>STARTTLS</source>
          <target state="translated">STARTTLS</target>
        </trans-unit>
        <trans-unit id="6782959cbdf71155c681defb244e1ba5e73a9bfd" translate="yes" xml:space="preserve">
          <source>SUID</source>
          <target state="translated">SUID</target>
        </trans-unit>
        <trans-unit id="5004e324326f126462b0e342642c89495c28712d" translate="yes" xml:space="preserve">
          <source>SUPER</source>
          <target state="translated">SUPER</target>
        </trans-unit>
        <trans-unit id="eb6ebb3446da9061ed43f4408820e25b32cac2f3" translate="yes" xml:space="preserve">
          <source>SVG (Scalable Vector Graphics) is an XML format for specifying images. If your Emacs build has SVG support, you can create and manipulate these images with the following functions from the</source>
          <target state="translated">SVG (Scalable Vector Graphics)は、画像を指定するための XML フォーマットです。Emacs ビルドが SVG をサポートしている場合、これらの画像は</target>
        </trans-unit>
        <trans-unit id="18ae68336084fd9129cbf51c4a376831f40b8822" translate="yes" xml:space="preserve">
          <source>SVG Images</source>
          <target state="translated">SVG画像</target>
        </trans-unit>
        <trans-unit id="0a7706c480bd8a72cba9bbc6eebb1849ab85193a" translate="yes" xml:space="preserve">
          <source>SVG Path Commands</source>
          <target state="translated">SVG パスコマンド</target>
        </trans-unit>
        <trans-unit id="9d50da2cbec96d67048ca4b7257681e9448b5bb0" translate="yes" xml:space="preserve">
          <source>Sample Indentation Rules</source>
          <target state="translated">インデントルールのサンプル</target>
        </trans-unit>
        <trans-unit id="c3d9e934d6505dce3393aafb0f1bf00fe0301326" translate="yes" xml:space="preserve">
          <source>Sample indentation rules.</source>
          <target state="translated">インデントルールのサンプル。</target>
        </trans-unit>
        <trans-unit id="a32a5271b843b4b247391cca71f69b213ed4a31d" translate="yes" xml:space="preserve">
          <source>Save all abbrev definitions (except system abbrevs), for all abbrev tables listed in &lt;code&gt;abbrev-table-name-list&lt;/code&gt;, in the file &lt;var&gt;filename&lt;/var&gt;, in the form of a Lisp program that when loaded will define the same abbrevs. Tables that do not have any abbrevs to save are omitted. If &lt;var&gt;filename&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, &lt;code&gt;abbrev-file-name&lt;/code&gt; is used. This function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;abbrev-table-name-list&lt;/code&gt; にリストされているすべての略語テーブルのすべての略語定義（システム略語を除く）を、ロード時に同じ略語を定義するLispプログラムの形式でファイルファイル &lt;var&gt;filename&lt;/var&gt; に保存します。保存する略語がないテーブルは省略されます。場合は &lt;var&gt;filename&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; を省略したり、 &lt;code&gt;abbrev-file-name&lt;/code&gt; 使用されています。この関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="906566053674235c7ca6449815fb7bc029627a81" translate="yes" xml:space="preserve">
          <source>Save for future sessions</source>
          <target state="translated">今後のセッションのために保存</target>
        </trans-unit>
        <trans-unit id="5a6f1d809431958820f1bb6b35ca3a6b85acd01f" translate="yes" xml:space="preserve">
          <source>Save the image to a file (&lt;code&gt;image-save&lt;/code&gt;).</source>
          <target state="translated">画像をファイルに保存します（ &lt;code&gt;image-save&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2843abea8cc36fe5ce310744abd0d4c1836ca1bc" translate="yes" xml:space="preserve">
          <source>Saving Abbrevs in Files</source>
          <target state="translated">ファイルへの略語の保存</target>
        </trans-unit>
        <trans-unit id="a469d4273a056edaa94987f2c1abc7a08c091e7e" translate="yes" xml:space="preserve">
          <source>Saving Buffers</source>
          <target state="translated">バッファの保存</target>
        </trans-unit>
        <trans-unit id="60fe255268c4f121d68121a93c6f0557f378d4ae" translate="yes" xml:space="preserve">
          <source>Saving a buffer runs several hooks. It also performs format conversion (see &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;). Note that these hooks, described below, are only run by &lt;code&gt;save-buffer&lt;/code&gt;, they are not run by other primitives and functions that write buffer text to files, and in particular auto-saving (see &lt;a href=&quot;auto_002dsaving#Auto_002dSaving&quot;&gt;Auto-Saving&lt;/a&gt;) doesn&amp;rsquo;t run these hooks.</source>
          <target state="translated">バッファを保存すると、いくつかのフックが実行されます。また、フォーマット変換（参照行う&lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;フォーマット変換を&lt;/a&gt;）。以下で説明するこれらのフックは、 &lt;code&gt;save-buffer&lt;/code&gt; によってのみ実行され、バッファテキストをファイルに書き込む他のプリミティブや関数によっては実行されません。特に、自動保存（&lt;a href=&quot;auto_002dsaving#Auto_002dSaving&quot;&gt;自動保存を&lt;/a&gt;参照）はこれらのフックを実行しません。 。</target>
        </trans-unit>
        <trans-unit id="be3e17bd1459a1ba4054a5352e3cefc4c93a5e84" translate="yes" xml:space="preserve">
          <source>Saving abbrevs in files.</source>
          <target state="translated">略語をファイルに保存する</target>
        </trans-unit>
        <trans-unit id="1bc0703806a683fd5fbf3591683ed1d7e6a40381" translate="yes" xml:space="preserve">
          <source>Saving and Restoring the Match Data</source>
          <target state="translated">マッチデータの保存と復元</target>
        </trans-unit>
        <trans-unit id="f2ab3c54e4086551a79715adae3432c327e6a581" translate="yes" xml:space="preserve">
          <source>Saving and restoring point in all buffers is expensive, since it requires selecting each window twice, so enable this only if you need it. See &lt;a href=&quot;edebug-display-update#Edebug-Display-Update&quot;&gt;Edebug Display Update&lt;/a&gt;.</source>
          <target state="translated">各ウィンドウを2回選択する必要があるため、すべてのバッファーでポイントを保存および復元するにはコストがかかるため、必要な場合にのみこれを有効にしてください。&lt;a href=&quot;edebug-display-update#Edebug-Display-Update&quot;&gt;Edebug DisplayUpdateを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ca3c165c40df3590832cb7bc3e1591aa01a0e9aa" translate="yes" xml:space="preserve">
          <source>Saving and restoring point in other buffers is necessary if you are debugging code that changes the point of a buffer that is displayed in a non-selected window. If Edebug or the user then selects the window, point in that buffer will move to the window&amp;rsquo;s value of point.</source>
          <target state="translated">選択されていないウィンドウに表示されるバッファのポイントを変更するコードをデバッグする場合は、他のバッファにポイントを保存して復元する必要があります。Edebugまたはユーザーがウィンドウを選択すると、そのバッファー内のポイントがウィンドウのポイントの値に移動します。</target>
        </trans-unit>
        <trans-unit id="4d3c6410b58729b88f45870d3e7c55b7e62fadd0" translate="yes" xml:space="preserve">
          <source>Saving and restoring state with X Session Management.</source>
          <target state="translated">X セッション管理による状態の保存と復元</target>
        </trans-unit>
        <trans-unit id="8671e243e41ead73c535d5d785c9920dae93887d" translate="yes" xml:space="preserve">
          <source>Saving and restoring the match data.</source>
          <target state="translated">マッチデータの保存と復元</target>
        </trans-unit>
        <trans-unit id="8763e229f4025af2badb37bbcbf9079ab6a88b1e" translate="yes" xml:space="preserve">
          <source>Saving and restoring the state of the screen.</source>
          <target state="translated">画面の状態を保存・復元します。</target>
        </trans-unit>
        <trans-unit id="5fbbbe153d34b466dcf42115a93630fb5a66e5ff" translate="yes" xml:space="preserve">
          <source>Saving histories of recent or all input events.</source>
          <target state="translated">最近の、またはすべての入力イベントの履歴を保存します。</target>
        </trans-unit>
        <trans-unit id="44ebeea4aad4da1f165425dc36057472f94c252a" translate="yes" xml:space="preserve">
          <source>Saving the state of all frames.</source>
          <target state="translated">全フレームの状態を保存します。</target>
        </trans-unit>
        <trans-unit id="0eb8e66aa03e8ad6035dc4d40f7c4c2b445df20e" translate="yes" xml:space="preserve">
          <source>Scan error</source>
          <target state="translated">スキャンエラー</target>
        </trans-unit>
        <trans-unit id="929097f91b2a40c4a26bd5374ffb1b337e01cf7d" translate="yes" xml:space="preserve">
          <source>Scanning Keymaps</source>
          <target state="translated">キーマップのスキャン</target>
        </trans-unit>
        <trans-unit id="86dfa70530f3f4ff86078663ba45163a130723eb" translate="yes" xml:space="preserve">
          <source>Scanning for Character Sets</source>
          <target state="translated">文字セットのスキャン</target>
        </trans-unit>
        <trans-unit id="08e633fdbabb8dde61dc208715c2816dccc7759c" translate="yes" xml:space="preserve">
          <source>Scanning ignores comments if &lt;code&gt;parse-sexp-ignore-comments&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parse-sexp-ignore-comments&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、スキャンはコメントを無視します。</target>
        </trans-unit>
        <trans-unit id="597816d0a720b7dba3f9d218c2951feb541ff473" translate="yes" xml:space="preserve">
          <source>Scoping Rules for Variable Bindings</source>
          <target state="translated">変数バインディングのスコープルール</target>
        </trans-unit>
        <trans-unit id="7efc743ee6de845d4a88d20ffbd2374e9ee253e5" translate="yes" xml:space="preserve">
          <source>Scroll Bars</source>
          <target state="translated">スクロールバー</target>
        </trans-unit>
        <trans-unit id="c1df02894357781da6103aa4f2c83dae1335a88b" translate="yes" xml:space="preserve">
          <source>Search and Replace</source>
          <target state="translated">検索と置換</target>
        </trans-unit>
        <trans-unit id="e2e904ac10fcdb3d34debb839009dc5b7812070f" translate="yes" xml:space="preserve">
          <source>Search failed</source>
          <target state="translated">検索失敗</target>
        </trans-unit>
        <trans-unit id="5c425c9ce211d9c7eaac8d86b2f8b6450d61e585" translate="yes" xml:space="preserve">
          <source>Search for an exact match.</source>
          <target state="translated">完全に一致するものを検索します。</target>
        </trans-unit>
        <trans-unit id="efdb36bb03ba1a660a667761e6fcd313f299f1d9" translate="yes" xml:space="preserve">
          <source>Search for the next region that has text property &lt;var&gt;prop&lt;/var&gt; set to &lt;var&gt;value&lt;/var&gt; according to &lt;var&gt;predicate&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;predicate&lt;/var&gt; に従ってテキストプロパティ &lt;var&gt;prop&lt;/var&gt; が &lt;var&gt;value&lt;/var&gt; に設定されている次のリージョンを検索します。</target>
        </trans-unit>
        <trans-unit id="c1f3f1591ee981b75eb947343e9b7bce3de4fd1c" translate="yes" xml:space="preserve">
          <source>Search-based Fontification</source>
          <target state="translated">検索ベースのフォント化</target>
        </trans-unit>
        <trans-unit id="a2cd9075af5e3df68a05a35833456bcafd5af4de" translate="yes" xml:space="preserve">
          <source>Searching POSIX-style for the longest match.</source>
          <target state="translated">POSIXスタイルで最長の一致を検索しています。</target>
        </trans-unit>
        <trans-unit id="938457a2a99271d197ccf9ad24de5047ce21b9ba" translate="yes" xml:space="preserve">
          <source>Searching and Case</source>
          <target state="translated">検索とケース</target>
        </trans-unit>
        <trans-unit id="648435398120e5c13afd825a03edfb8423920b87" translate="yes" xml:space="preserve">
          <source>Searching and Matching</source>
          <target state="translated">検索とマッチング</target>
        </trans-unit>
        <trans-unit id="240192b69b2585a53497c18ee0af9bc2392dc6f2" translate="yes" xml:space="preserve">
          <source>Searching buffers for strings or regexps.</source>
          <target state="translated">文字列や正規表現のバッファを検索します。</target>
        </trans-unit>
        <trans-unit id="9e3e6b5eaf1e69fbca4d75e7e4943770ccbfd0d7" translate="yes" xml:space="preserve">
          <source>Searching for Overlays</source>
          <target state="translated">オーバーレイの検索</target>
        </trans-unit>
        <trans-unit id="f8ff39ba712e61dbbacf3b17f005c9c90797c3ff" translate="yes" xml:space="preserve">
          <source>Searching for Strings</source>
          <target state="translated">弦楽器の検索</target>
        </trans-unit>
        <trans-unit id="87a17eda9542c5acaaebb765a6b20895c6adf422" translate="yes" xml:space="preserve">
          <source>Searching for a match for a regexp.</source>
          <target state="translated">正規表現に一致するものを検索しています。</target>
        </trans-unit>
        <trans-unit id="77e2b5af4a602f67d417c33ca4bc4af91fda4f7b" translate="yes" xml:space="preserve">
          <source>Searching for overlays.</source>
          <target state="translated">オーバーレイを探しています。</target>
        </trans-unit>
        <trans-unit id="1739c691f1389f4c3c564d3fd05558471ea68ea0" translate="yes" xml:space="preserve">
          <source>Searching for where a property changes value.</source>
          <target state="translated">プロパティの値が変わる場所を検索します。</target>
        </trans-unit>
        <trans-unit id="62e709d5958fe7e24e1201fcff7d2c4465829c9f" translate="yes" xml:space="preserve">
          <source>Searching the Active Keymaps</source>
          <target state="translated">アクティブなキーマップの検索</target>
        </trans-unit>
        <trans-unit id="402cc3b6686cd294cb10dd3f5bccbebd0edd8a9b" translate="yes" xml:space="preserve">
          <source>Security Considerations</source>
          <target state="translated">セキュリティへの配慮</target>
        </trans-unit>
        <trans-unit id="9a0a51de2abb76fdfd33fd85a5bb63cb0c7e94ee" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Accessing Documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;ドキュメントへのアクセスを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7b20b5e4a408c1a58f4912cc7e2d8f0f66418ce6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;accessing-documentation#describe_002dsymbols-example&quot;&gt;describe-symbols example&lt;/a&gt;, for an example of using &lt;code&gt;help-buffer&lt;/code&gt;, &lt;code&gt;with-help-window&lt;/code&gt;, and &lt;code&gt;help-setup-xref&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;help-buffer&lt;/code&gt; 、 &lt;code&gt;with-help-window&lt;/code&gt; 、および &lt;code&gt;help-setup-xref&lt;/code&gt; の使用例については、&lt;a href=&quot;accessing-documentation#describe_002dsymbols-example&quot;&gt;describe-symbolsの例を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="518c934442d09bbbe7dad581bff318c8ce633e22" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;Anonymous Functions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;匿名関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="70b7f47638681a3887c44d73bb1c1ab5f66fb312" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;arrayp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;array-functions#Array-Functions&quot;&gt;arraypを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="364a3876adc8ba735794b74d771ef66e59172ef9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;association-lists#Association-Lists&quot;&gt;Association Lists&lt;/a&gt;, for a further explanation of alists and for functions that work on alists. See &lt;a href=&quot;hash-tables#Hash-Tables&quot;&gt;Hash Tables&lt;/a&gt;, for another kind of lookup table, which is much faster for handling a large number of keys.</source>
          <target state="translated">アリストの詳細とアリストで機能する関数については、&lt;a href=&quot;association-lists#Association-Lists&quot;&gt;アソシエーションリストを&lt;/a&gt;参照してください。多数のキーを処理するのにはるかに高速な別の種類のルックアップテーブルについては、&lt;a href=&quot;hash-tables#Hash-Tables&quot;&gt;ハッシュテーブルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bfec8520e35fd42ed2d804f461524d23bfc32cf6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;auto-faces#Auto-Faces&quot;&gt;Automatic Face Assignment&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;auto-faces#Auto-Faces&quot;&gt;自動顔割り当てを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3ee2481cb839a100a90ef3f9fa5f1d09e76d58c3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;auto_002dsaving#Auto_002dSaving&quot;&gt;Auto-Saving&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;auto_002dsaving#Auto_002dSaving&quot;&gt;自動保存を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ec9e4044918b71025234b520baa2413f952b3792" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;autoload#Autoload&quot;&gt;自動ロードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="edac4a82b5c56395a6ac7c47c57171234a43709b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;backtraces#Backtraces&quot;&gt;Backtraces&lt;/a&gt;, for a description of backtraces and the commands which work on them.</source>
          <target state="translated">参照してください&lt;a href=&quot;backtraces#Backtraces&quot;&gt;バックトレース&lt;/a&gt;バックトレースの説明と、それらのコマンドの作業のために、。</target>
        </trans-unit>
        <trans-unit id="ee01bc247305b3240415c3dd4c2fd1170cc0c4cd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;basic-thread-functions#Basic-Thread-Functions&quot;&gt;threadp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;basic-thread-functions#Basic-Thread-Functions&quot;&gt;threadpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7f24a2d5e38d4d7ce9456024a0ee523a1533edfa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;basic-windows#Basic-Windows&quot;&gt;windowp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;basic-windows#Basic-Windows&quot;&gt;windowpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ee1cc5a05f5ee8bdbb840079bd4eefe0f5a5e1bb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;bool_002dvectors#Bool_002dVectors&quot;&gt;bool-vector-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;bool_002dvectors#Bool_002dVectors&quot;&gt;bool-vector-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ebdc452931bd31ee37ca90777a7e9948d95c92cc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;buffer-basics#Buffer-Basics&quot;&gt;bufferp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;buffer-basics#Buffer-Basics&quot;&gt;bufferpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2e618ffe5131ec2c9d32c88eff1df2caebd47cef" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;Buffer Contents&lt;/a&gt;, for the function &lt;code&gt;buffer-substring-no-properties&lt;/code&gt;, which copies text from the buffer but does not copy its properties.</source>
          <target state="translated">関数 &lt;code&gt;buffer-substring-no-properties&lt;/code&gt; については、&lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;バッファの内容を&lt;/a&gt;参照してください。この関数は、バッファからテキストをコピーしますが、そのプロパティはコピーしません。</target>
        </trans-unit>
        <trans-unit id="b3d621e3ea3a12a1239750e594f233fcae6dae67" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;, for related information. See &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;, for additional operating system status information pertaining to the terminal and the screen.</source>
          <target state="translated">関連情報については、&lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;BuildingEmacsを&lt;/a&gt;参照してください。端末と画面に関連する追加のオペレーティングシステムステータス情報については、&lt;a href=&quot;display#Display&quot;&gt;ディスプレイを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3944d361b59b4be2506b9ec39ac6d192c5df810b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;byte_002dcode-type#Byte_002dCode-Type&quot;&gt;byte-code-function-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;byte_002dcode-type#Byte_002dCode-Type&quot;&gt;byte-code-function-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cd4971e4bb3046cbb4a2aed0bd8f428ea920bf92" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;Calling Functions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;関数の呼び出しを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="60710553886aead6073c6b05858b9b1c79023ab8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;case-table-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;case-tables#Case-Tables&quot;&gt;case-table-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cfc8d7e974a742b4495b5b1c184d5e160e3d2e5a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;フックの変更を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="488a966c45e866881572153a8542b294820b715d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;, for the &lt;code&gt;set-file-modes&lt;/code&gt; function, which can be used to set these permissions.</source>
          <target state="translated">これらの権限を設定するために使用できる &lt;code&gt;set-file-modes&lt;/code&gt; 関数については、&lt;a href=&quot;changing-files#Changing-Files&quot;&gt;「ファイルの変更」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c373b8f66b71437ffb72d85db0c1f516fbf91564" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;, for special functions to operate on char-tables. Uses of char-tables include:</source>
          <target state="translated">char-tablesを操作するための特別な関数については、&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tablesを&lt;/a&gt;参照してください。 char-tablesの用途は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="396bf4b18badb825922259ebd758990655b2ba63" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tablesを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9fbca9413b9b039c9d587b90a6246415944c81a9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;char-table-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;char-table-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9f2da4019fca159bd3be3eaa0ffbf4862024ef74" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;Choosing Window Options&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;ウィンドウオプションの選択を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fb01ecd6edd6f782abddc404319fc81a63f89685" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;color-names#Color-Names&quot;&gt;Color Names&lt;/a&gt;, &lt;a href=&quot;text-terminal-colors#Text-Terminal-Colors&quot;&gt;Text Terminal Colors&lt;/a&gt;, for other functions to obtain information about displays.</source>
          <target state="translated">ディスプレイに関する情報を取得するその他の機能については、「&lt;a href=&quot;color-names#Color-Names&quot;&gt;色の名前」&lt;/a&gt;、「&lt;a href=&quot;text-terminal-colors#Text-Terminal-Colors&quot;&gt;テキスト端末の色&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="7d3824b66b0670b71cc683b92ea40790a70574c0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;command-overview#Command-Overview&quot;&gt;Command Overview&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;command-overview#Command-Overview&quot;&gt;コマンドの概要を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c909de41e8032b6d7b72d435972ce269a6360449" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;command_002dline-arguments#Command_002dLine-Arguments&quot;&gt;Command-Line Arguments&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;command_002dline-arguments#Command_002dLine-Arguments&quot;&gt;コマンドライン引数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c0319e26e2411eb47824b94445e6e1b600d2d28a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;condition-variables#Condition-Variables&quot;&gt;condition-variable-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;condition-variables#Condition-Variables&quot;&gt;condition-variable-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1aec66035f33002d9d51452c037266816641f5ab" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;定数変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dc387c472d92e947081940c55a4e668464964391" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Buffer-Localの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e77d7d839e11c830e29296ae02341ab26f4f6680" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;creating-frames#Creating-Frames&quot;&gt;Creating Frames&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;creating-frames#Creating-Frames&quot;&gt;フレームの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5b146a832278deada6e6676264c098fa9de02e47" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;creating-keymaps#Creating-Keymaps&quot;&gt;keymapp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;creating-keymaps#Creating-Keymaps&quot;&gt;keymappを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="94046ef59e5d247df6873f71fcbb8b8463ff7745" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;シンボルの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e6b1ac8e2d3483f6eae03a25a819d27fcd92e2a5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;フレームの削除を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a0050f789f527488f0c3100cae80d734b5d15528" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;frame-live-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;frame-live-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6ae7c50c9a75ce032be58ca2106d4324817dd17c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;window-live-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;window-live-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="19b0bb161db65be7a8c4f43b488b1278479b37ce" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;distinguish-interactive#Distinguish-Interactive&quot;&gt;Distinguish Interactive&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;distinguish-interactive#Distinguish-Interactive&quot;&gt;DistinguishInteractiveを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="507488f3252f2a1ca7d8bfe331150189cfae2efc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;documentation#Documentation&quot;&gt;Documentation&lt;/a&gt;, for functions that produce textual descriptions of text characters and general input events (&lt;code&gt;single-key-description&lt;/code&gt; and &lt;code&gt;text-char-description&lt;/code&gt;). These are used primarily for making help messages.</source>
          <target state="translated">テキスト文字および一般的な入力イベント（ &lt;code&gt;single-key-description&lt;/code&gt; および &lt;code&gt;text-char-description&lt;/code&gt; ）のテキスト記述を生成する関数については、「&lt;a href=&quot;documentation#Documentation&quot;&gt;ドキュメント&lt;/a&gt;」を参照してください。これらは主にヘルプメッセージを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c46cffeabac6b7e14565937560679349470ee03e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;echo-area-customization#Echo-Area-Customization&quot;&gt;Echo Area Customization&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;echo-area-customization#Echo-Area-Customization&quot;&gt;エコーエリアのカスタマイズを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b536c3708af680cd6bc871c99e4c642594189969" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;edebug-eval#Edebug-Eval&quot;&gt;Edebug Eval&lt;/a&gt;, for other evaluation functions available inside of Edebug.</source>
          <target state="translated">&lt;a href=&quot;edebug-eval#Edebug-Eval&quot;&gt;Edebug&lt;/a&gt;内で使用可能な他の評価関数については、EdebugEvalを参照してください。</target>
        </trans-unit>
        <trans-unit id="c06bd6b12dfb7efb4f4922c1b8f7aa9863e5a4af" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;errors#Errors&quot;&gt;Errors&lt;/a&gt;, for an explanation of how errors are generated and handled.</source>
          <target state="translated">&lt;a href=&quot;errors#Errors&quot;&gt;エラーの&lt;/a&gt;生成方法と処理方法の説明については、「エラー」を参照してください。</target>
        </trans-unit>
        <trans-unit id="8ae97f93433064cbb351d09c29849e1c4ef6e3b1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;eval#Eval&quot;&gt;Eval&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;eval#Eval&quot;&gt;Evalを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e6dcde9840af59c4e498ccc304dfc433a30a2eeb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;File Attributes&lt;/a&gt;, for the function &lt;code&gt;file-modes&lt;/code&gt;, which returns the permissions of a file.</source>
          <target state="translated">&lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;ファイル&lt;/a&gt;のパーミッションを返す関数 &lt;code&gt;file-modes&lt;/code&gt; については、ファイル属性を参照してください。</target>
        </trans-unit>
        <trans-unit id="bbb99f9239dabf1f98641f4e946bd38a6515ad18" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;ファイルローカル変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="180ade25d296c80c1575aaf2d3c113b9560cf830" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;フォーマット変換を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ebadbf58de7d689b92fe067d67ade5ab9c38bb3c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;frame-configurations#Frame-Configurations&quot;&gt;Frame Configurations&lt;/a&gt;, for a description of several functions related to frame configurations.</source>
          <target state="translated">&lt;a href=&quot;frame-configurations#Frame-Configurations&quot;&gt;フレーム構成&lt;/a&gt;に関連するいくつかの機能の説明については、フレーム構成を参照してください。</target>
        </trans-unit>
        <trans-unit id="82fae6ef5b9cc88a5b0855cbda509c19314eba1c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;frame-configurations#Frame-Configurations&quot;&gt;frame-configuration-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;frame-configurations#Frame-Configurations&quot;&gt;frame-configuration-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9efd408d67d63fb59921256426f435cd58fc1477" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;, for a description of the functions that work on frames.</source>
          <target state="translated">&lt;a href=&quot;frames#Frames&quot;&gt;フレーム&lt;/a&gt;で機能する関数の説明については、フレームを参照してください。</target>
        </trans-unit>
        <trans-unit id="5e0abc4b48096bbd4c786054feef6c71301abdd5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;frames#Frames&quot;&gt;framep&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;frames#Frames&quot;&gt;framepを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bb79aa141e94730b39fffa6733976ca3419e1070" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;Fringe Bitmaps&lt;/a&gt;, for a list of standard bitmap symbols and how to define your own. In addition, &lt;code&gt;nil&lt;/code&gt; represents the empty bitmap (i.e., an indicator that is not shown).</source>
          <target state="translated">標準のビットマップシンボルのリストと独自のビットマップシンボルを定義する方法については、&lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;フリンジビットマップを&lt;/a&gt;参照してください。さらに、 &lt;code&gt;nil&lt;/code&gt; は空のビットマップ（つまり、表示されていないインジケーター）を表します。</target>
        </trans-unit>
        <trans-unit id="88e8d1e2ea6eb64c9dfc7ccaaaffe00535b49f85" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;function-cells#Function-Cells&quot;&gt;subrp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;function-cells#Function-Cells&quot;&gt;subrpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="842829494c1fb6886abeb1d42588b06bb897ae95" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;function-indirection#Function-Indirection&quot;&gt;Function Indirection&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;function-indirection#Function-Indirection&quot;&gt;関数の間接&lt;/a&gt;参照を参照してください。</target>
        </trans-unit>
        <trans-unit id="d25941e6f49461665ef7e1c8b3ae460691c09566" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;function-keys#Function-Keys&quot;&gt;Function Keys&lt;/a&gt;, for more information about how to add modifiers to function keys.</source>
          <target state="translated">&lt;a href=&quot;function-keys#Function-Keys&quot;&gt;ファンクションキー&lt;/a&gt;に修飾子を追加する方法の詳細については、ファンクションキーを参照してください。</target>
        </trans-unit>
        <trans-unit id="1b9292c37b1ac7b58cf788013bcc3db1c8e1f135" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions#Functions&quot;&gt;functionp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions#Functions&quot;&gt;functionpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="51f4e0f79a5d20aedc6d3489fab5cf222ad6d8bf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions-for-key-lookup#Functions-for-Key-Lookup&quot;&gt;Functions for Key Lookup&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions-for-key-lookup#Functions-for-Key-Lookup&quot;&gt;キールックアップの機能を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8949cf27abc14466fc2cef80c3e1954e3eeffcce" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;Garbage Collection&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;ガベージコレクションを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a25dac8d6f5de23bd4393b78610bedea874e6cd1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;hash-tables#Hash-Tables&quot;&gt;Hash Tables&lt;/a&gt;, for more information about hash tables.</source>
          <target state="translated">&lt;a href=&quot;hash-tables#Hash-Tables&quot;&gt;ハッシュテーブルの&lt;/a&gt;詳細については、ハッシュテーブルを参照してください。</target>
        </trans-unit>
        <trans-unit id="4228373aa041bffa31dea2d69689c278adfe3d87" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.gnu.org/software/coreutils/manual/html_node/File-permissions.html#File-permissions&quot;&gt;File permissions&lt;/a&gt; in</source>
          <target state="translated">の&lt;a href=&quot;http://www.gnu.org/software/coreutils/manual/html_node/File-permissions.html#File-permissions&quot;&gt;ファイル権限&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="33140c72d087fddd36a1508f622f807def6f6a6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Styles.html#Completion-Styles&quot;&gt;Completion Styles&lt;/a&gt; in</source>
          <target state="translated">の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Styles.html#Completion-Styles&quot;&gt;完了スタイル&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="5d825bbe301239ea1f7829d83716ffb6bffc7a70" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Disabling.html#Disabling&quot;&gt;Disabling&lt;/a&gt; in</source>
          <target state="translated">での&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Disabling.html#Disabling&quot;&gt;無効化&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="5b3852bba2984f6e74d66b8d844b61fc0f1b82de" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Examples.html#Init-Examples&quot;&gt;Init File Examples&lt;/a&gt; in</source>
          <target state="translated">の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Examples.html#Init-Examples&quot;&gt;初期化ファイルの例&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="21733637899ceeaf77bc09250499cf60e2851c83" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Elapsed-Time.html#Elapsed-Time&quot;&gt;(libc)Elapsed Time&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Elapsed-Time.html#Elapsed-Time&quot;&gt;（libc）経過時間を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="02b29dba133a767f7e68dec0815a95bee4b1ee6a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html#Comment-Tips&quot;&gt;Comment Tips&lt;/a&gt;, for conventions for formatting comments.</source>
          <target state="translated">&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html#Comment-Tips&quot;&gt;コメントの&lt;/a&gt;書式設定の規則については、コメントのヒントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ae5d175468f961072b0ba8eee4f48c07cf021bc7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;init-file#Init-File&quot;&gt;Init File&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;init-file#Init-File&quot;&gt;Initファイルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="845243aaf58e9b233fd62b4747142b1ad107a899" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;入力フォーカスを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5144645b1e5be11309754584898c582fb39b244b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;insertion#Insertion&quot;&gt;Insertion&lt;/a&gt;, for the ordinary insertion functions which do not inherit.</source>
          <target state="translated">継承しない通常の挿入関数については、&lt;a href=&quot;insertion#Insertion&quot;&gt;挿入を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a357beee41ec27a06ef1b44e2f2ef4e4e7f0fa86" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;インタラクティブコールを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c1d78d351e26f5d7504acd07d75003afbc0c15c1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;commandp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;commandpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dfb44aaedc0b957b351e6463e1e2bc8357aaf35f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;, for information about creating keymaps, handling prefix keys, local as well as global keymaps, and changing key bindings.</source>
          <target state="translated">参照&lt;a href=&quot;keymaps#Keymaps&quot;&gt;キーマップ&lt;/a&gt;、キーマップの作成、プレフィックスキー、地元だけでなく、グローバルキーマップを取り扱い、およびキーバインディングの変更については、。</target>
        </trans-unit>
        <trans-unit id="2459c40f13e4efe17ee6e37f21c11f3cc39b978c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;keymaps-and-minor-modes#Keymaps-and-Minor-Modes&quot;&gt;Keymaps and Minor Modes&lt;/a&gt;, for more information about minor modes. See also &lt;code&gt;minor-mode-key-binding&lt;/code&gt; (see &lt;a href=&quot;functions-for-key-lookup#Functions-for-Key-Lookup&quot;&gt;Functions for Key Lookup&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;keymaps-and-minor-modes#Keymaps-and-Minor-Modes&quot;&gt;マイナーモードの&lt;/a&gt;詳細については、キーマップとマイナーモードを参照してください。 &lt;code&gt;minor-mode-key-binding&lt;/code&gt; も参照してください（&lt;a href=&quot;functions-for-key-lookup#Functions-for-Key-Lookup&quot;&gt;キールックアップの関数を参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a7ec4ecdfaaf7ab8faef9ff0d6a1facfeb208282" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;keymaps-and-minor-modes#Keymaps-and-Minor-Modes&quot;&gt;Keymaps and Minor Modes&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;keymaps-and-minor-modes#Keymaps-and-Minor-Modes&quot;&gt;キーマップとマイナーモードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="be3d578bff3292b0de125dac402efaa2ee6ff8b5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;Killing Buffers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;KillingBuffersを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4906ccc5a57e06dc0d24d6b00c44cbb7eb9cd36c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;killing-emacs#Killing-Emacs&quot;&gt;Killing Emacs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;killing-emacs#Killing-Emacs&quot;&gt;KillingEmacsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="63dcbe699960bab53a95cf823f58f161bb0179a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;lambda-expressions#Lambda-Expressions&quot;&gt;Lambda Expressions&lt;/a&gt;, for a more complete description of arguments modified by &lt;code&gt;&amp;amp;optional&lt;/code&gt; and &lt;code&gt;&amp;amp;rest&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;optional&lt;/code&gt; および &lt;code&gt;&amp;amp;rest&lt;/code&gt; によって変更された引数の詳細については、&lt;a href=&quot;lambda-expressions#Lambda-Expressions&quot;&gt;ラムダ式を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="be13a7782b9d1b41f200a7f4d529bded851308a8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;lazy-properties#Lazy-Properties&quot;&gt;Lazy Properties&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lazy-properties#Lazy-Properties&quot;&gt;レイジープロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ddfd897b79750b8273888efe043fff03b937aaf7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;lexical-binding#Lexical-Binding&quot;&gt;Lexical Binding&lt;/a&gt;, for an example of using a closure.</source>
          <target state="translated">クロージャの使用例については、&lt;a href=&quot;lexical-binding#Lexical-Binding&quot;&gt;LexicalBindingを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="719f012a205cba18097a278ffe5f836c8d6fe0e9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;list-elements#Definition-of-safe_002dlength&quot;&gt;Definition of safe-length&lt;/a&gt;, for the related function &lt;code&gt;safe-length&lt;/code&gt;.</source>
          <target state="translated">関連する関数 &lt;code&gt;safe-length&lt;/code&gt; については、&lt;a href=&quot;list-elements#Definition-of-safe_002dlength&quot;&gt;safe-lengthの定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="07bad34837b29c37f3d94be0190645390aa24b21" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;list_002drelated-predicates#List_002drelated-Predicates&quot;&gt;atom&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;list_002drelated-predicates#List_002drelated-Predicates&quot;&gt;アトムを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="afe2e93a2ba9353401720ddf51eeaa5f60b3132a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;list_002drelated-predicates#List_002drelated-Predicates&quot;&gt;consp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;list_002drelated-predicates#List_002drelated-Predicates&quot;&gt;conspを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ba2bbe7c0d8f6600f83b5cca8a607683ab498980" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;list_002drelated-predicates#List_002drelated-Predicates&quot;&gt;listp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;list_002drelated-predicates#List_002drelated-Predicates&quot;&gt;listpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a78d12c680718c70cb40a4fda00fa2c591b39b3b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;list_002drelated-predicates#List_002drelated-Predicates&quot;&gt;nlistp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;list_002drelated-predicates#List_002drelated-Predicates&quot;&gt;nlistpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a2984c8fe54f131c0cc40d792d364148170beb01" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;low_002dlevel-font#Low_002dLevel-Font&quot;&gt;Low-Level Font&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;low_002dlevel-font#Low_002dLevel-Font&quot;&gt;低レベルフォントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5d451da8b3942df0e0294216c2912a8f66c4b5f4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;macros#Macros&quot;&gt;Macros&lt;/a&gt;, for a complete description of Emacs Lisp macros.</source>
          <target state="translated">Emacs Lispマクロの完全な説明については、&lt;a href=&quot;macros#Macros&quot;&gt;マクロを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5599210861340d26d8cbf6070f5253b6e666ef41" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;Mapping Functions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;マッピング関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="40b89ad7ce5eb8263c2baf1501ec05b566a688ff" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;markers#Markers&quot;&gt;Markers&lt;/a&gt;, for information on how to test, create, copy, and move markers.</source>
          <target state="translated">&lt;a href=&quot;markers#Markers&quot;&gt;マーカー&lt;/a&gt;をテスト、作成、コピー、および移動する方法については、「マーカー」を参照してください。</target>
        </trans-unit>
        <trans-unit id="fdd043dad89b8428c30a218b62c08b3dd80cd672" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;メニューバーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2ed74a9f2f31c472e54603fe0a09d4152ce167bb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;minibuffer-misc#Minibuffer-Misc&quot;&gt;Minibuffer Misc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;minibuffer-misc#Minibuffer-Misc&quot;&gt;ミニバッファその他を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e979517da59f2c5906fb4d0acadcada240dc2d64" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Mode Hooks&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;モードフックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fa9665133d6cdf6131b56f7140d6f3baeb8a379b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;mouse-position#Mouse-Position&quot;&gt;Mouse Position&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mouse-position#Mouse-Position&quot;&gt;マウスの位置を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="28606f4b73f0741ecf1921dd87dbb5ac6638fac2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;multi_002dframe-images#Multi_002dFrame-Images&quot;&gt;Multi-Frame Images&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;multi_002dframe-images#Multi_002dFrame-Images&quot;&gt;マルチフレーム画像を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b787ec91a309584beca18ebf290a54f74729bf61" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;multiline-font-lock#Multiline-Font-Lock&quot;&gt;Multiline Font Lock&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;multiline-font-lock#Multiline-Font-Lock&quot;&gt;マルチラインフォントロックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="65ca77c709e64e487583ddba40508d113cae4658" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;複数の端末を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d31da85685dd63c41b5b3d2c9355624721ea346d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;mutexes#Mutexes&quot;&gt;mutexp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mutexes#Mutexes&quot;&gt;mutexpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3e27694349a6f40c18814e0402e96f6feba7b93b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;nil-and-t#nil-and-t&quot;&gt;booleanp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;nil-and-t#nil-and-t&quot;&gt;booleanpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b68d2bdc7331e6a61c2a9528f56c5e45c38293c0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numbers#Numbers&quot;&gt;Numbers&lt;/a&gt;, for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;numbers#Numbers&quot;&gt;数値を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f3482cc48715ec60e70a1e891f70b88a2da8f1f9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;other-font-lock-variables#Other-Font-Lock-Variables&quot;&gt;Other Font Lock Variables&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;other-font-lock-variables#Other-Font-Lock-Variables&quot;&gt;その他のフォントロック変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1f6222b0dcc01c6a07dff44cb90bd0960f25c4d5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;other-hash#Other-Hash&quot;&gt;hash-table-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;other-hash#Other-Hash&quot;&gt;hash-table-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6be2825771808dee64487532e90e935fbfeea541" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;overlays#Overlays&quot;&gt;Overlays&lt;/a&gt;, for information on how you can create and use overlays.</source>
          <target state="translated">&lt;a href=&quot;overlays#Overlays&quot;&gt;オーバーレイ&lt;/a&gt;を作成および使用する方法については、「オーバーレイ」を参照してください。</target>
        </trans-unit>
        <trans-unit id="8a8305ab7c97bf0dd0a953313661f09cdaf26f30" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;overlays#Overlays&quot;&gt;overlayp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;overlays#Overlays&quot;&gt;オーバーレイを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="13fb66fff0c1ceab1d3107ff5e6e4c5b98f10372" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;package-archives#Package-Archives&quot;&gt;Package Archives&lt;/a&gt;, for an explanation of how to add a single-file package to a package archive.</source>
          <target state="translated">単一ファイルパッケージをパッケージアーカイブに追加する方法の説明については、&lt;a href=&quot;package-archives#Package-Archives&quot;&gt;パッケージアーカイブを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b888d2e414a25c3846650e3f053b935ca4d9e1a7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;predicates-for-strings#Predicates-for-Strings&quot;&gt;char-or-string-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;predicates-for-strings#Predicates-for-Strings&quot;&gt;char-or-string-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="afd0d7cf28262c05c90063d1654ae50fc453b274" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;predicates-for-strings#Predicates-for-Strings&quot;&gt;string-or-null-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;predicates-for-strings#Predicates-for-Strings&quot;&gt;string-or-null-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="22421dcf161ae4dc2831ff34b7a3f44654c9eaf3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;predicates-for-strings#Predicates-for-Strings&quot;&gt;stringp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;predicates-for-strings#Predicates-for-Strings&quot;&gt;stringpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1c54686ebdb624234d4ec3891164b2d9600234d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;predicates-on-markers#Predicates-on-Markers&quot;&gt;integer-or-marker-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;predicates-on-markers#Predicates-on-Markers&quot;&gt;integer-or-marker-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cb637be16a85c88ceb6477d6e8232899d894650e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;predicates-on-markers#Predicates-on-Markers&quot;&gt;markerp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;predicates-on-markers#Predicates-on-Markers&quot;&gt;マーカーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7f7127873fd4f9386bda4016d9a5a0dccb50ac35" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;predicates-on-markers#Predicates-on-Markers&quot;&gt;number-or-marker-p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;predicates-on-markers#Predicates-on-Markers&quot;&gt;number-or-marker-pを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1f6b92dadf27cbfb68deea997c9c6f6f07d580a0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;predicates-on-numbers#Predicates-on-Numbers&quot;&gt;floatp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;predicates-on-numbers#Predicates-on-Numbers&quot;&gt;floatpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ffb5a38d3668cb62ef9649976cbd852f44ea1580" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;predicates-on-numbers#Predicates-on-Numbers&quot;&gt;integerp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;predicates-on-numbers#Predicates-on-Numbers&quot;&gt;integerpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="72a286f9bb85bfba1956aa240925785ccc04e0e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;predicates-on-numbers#Predicates-on-Numbers&quot;&gt;numberp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;predicates-on-numbers#Predicates-on-Numbers&quot;&gt;numberpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c0434ff96a3cdef63b51dc04c4645f8c4d838d61" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;predicates-on-numbers#Predicates-on-Numbers&quot;&gt;wholenump&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;predicates-on-numbers#Predicates-on-Numbers&quot;&gt;全体番号を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a61ef2cfe86b358b53b20f9c16555e44d12510e3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;process-information#Coding-systems-for-a-subprocess&quot;&gt;Process Information&lt;/a&gt;, in particular the description of the functions &lt;code&gt;process-coding-system&lt;/code&gt; and &lt;code&gt;set-process-coding-system&lt;/code&gt;, for how to examine or set the coding systems used for I/O to a subprocess.</source>
          <target state="translated">I / Oに使用されるコーディングシステムをサブプロセスに検査または設定する方法については、&lt;a href=&quot;process-information#Coding-systems-for-a-subprocess&quot;&gt;プロセス情報&lt;/a&gt;、特に関数 &lt;code&gt;process-coding-system&lt;/code&gt; および &lt;code&gt;set-process-coding-system&lt;/code&gt; の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="8873e4fea84d9d9fdc0a75019f7fafc5de92d302" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;processes#Processes&quot;&gt;Processes&lt;/a&gt;, for information about functions that create, delete, return information about, send input or signals to, and receive output from processes.</source>
          <target state="translated">&lt;a href=&quot;processes#Processes&quot;&gt;プロセス&lt;/a&gt;を作成、削除、情報を返し、入力またはシグナルをプロセスに送信し、プロセスから出力を受信する関数については、「プロセス」を参照してください。</target>
        </trans-unit>
        <trans-unit id="1e57f16f7db38f1da06acd1b476d987ca69158a7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;processes#Processes&quot;&gt;processp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processes#Processes&quot;&gt;processpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d0822c90b9f5ae745fd372370bd1eb4d593fa020" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;Programmed Completion&lt;/a&gt;, for detailed requirements when &lt;var&gt;collection&lt;/var&gt; is a function.</source>
          <target state="translated">&lt;var&gt;collection&lt;/var&gt; が機能である場合の詳細な要件については、&lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;プログラムされた完了を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="342619fa7694d0dbf1e1839cc5a2ad64398aa594" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Windowsの終了を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0fa278a16662aba116dad315ec4667497df2b953" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;Read and Print&lt;/a&gt;, for a description of functions related to streams, including parsing and printing functions.</source>
          <target state="translated">解析および印刷機能を含む、ストリームに関連する機能の説明については、「&lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;読み取りおよび印刷&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="1feb66515068feea1a87fe7c107101a08e7c4655" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;reading-one-event#Reading-One-Event&quot;&gt;Reading One Event&lt;/a&gt;, for an example of using &lt;code&gt;execute-kbd-macro&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;execute-kbd-macro&lt;/code&gt; の使用例については、「&lt;a href=&quot;reading-one-event#Reading-One-Event&quot;&gt;1つのイベントの読み取り&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="f7e90002d049b2fc76268242d6a11bc36e37025a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;record-type#Record-Type&quot;&gt;recordp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;record-type#Record-Type&quot;&gt;recordpを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="32886223c1c6d0e41ea453ef22039cf9b6cc3fb6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;records#Records&quot;&gt;Records&lt;/a&gt;, for functions that work with records.</source>
          <target state="translated">&lt;a href=&quot;records#Records&quot;&gt;レコード&lt;/a&gt;を操作する関数については、レコードを参照してください。</target>
        </trans-unit>
        <trans-unit id="c03f3a25c565025f9fa338165e3df11ffd4dace9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;region-to-refontify#Region-to-Refontify&quot;&gt;Region to Refontify&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;region-to-refontify#Region-to-Refontify&quot;&gt;再フォント化する地域を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cf36d2bcb44d9ac1bf3ed08f008233ee55ff8b50" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;replacing-match#Replacing-Match&quot;&gt;Replacing the Text that Matched&lt;/a&gt;, for a description of &lt;code&gt;replace-match&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;replace-match&lt;/code&gt; の説明については、&lt;a href=&quot;replacing-match#Replacing-Match&quot;&gt;一致したテキストの置換を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="17aee5621c21c8d401902af0ff4156e1fccfebe4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d321c56a955483a73245e0166a9c02beb7043a7f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;sequencep&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;sequencep&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="aa0d24238dec775d9f52f213a736e969d919095d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;sorting#Sorting&quot;&gt;Sorting&lt;/a&gt;, for more functions that perform sorting. See &lt;code&gt;documentation&lt;/code&gt; in &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Accessing Documentation&lt;/a&gt;, for a useful example of &lt;code&gt;sort&lt;/code&gt;.</source>
          <target state="translated">See &lt;a href=&quot;sorting#Sorting&quot;&gt;Sorting&lt;/a&gt;, for more functions that perform sorting. See &lt;code&gt;documentation&lt;/code&gt; in &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Accessing Documentation&lt;/a&gt;, for a useful example of &lt;code&gt;sort&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="962cb3f032d4500ea31d60bc3d61abece22c1b19" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;standard-errors#Standard-Errors&quot;&gt;Standard Errors&lt;/a&gt;, for a list of the main error symbols and their conditions.</source>
          <target state="translated">See &lt;a href=&quot;standard-errors#Standard-Errors&quot;&gt;Standard Errors&lt;/a&gt;, for a list of the main error symbols and their conditions.</target>
        </trans-unit>
        <trans-unit id="84aab3fef332a8de5e170835bc2e019a3ae896e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;standard-keymaps#Standard-Keymaps&quot;&gt;Standard Keymaps&lt;/a&gt;, for a list of some standard keymaps.</source>
          <target state="translated">See &lt;a href=&quot;standard-keymaps#Standard-Keymaps&quot;&gt;Standard Keymaps&lt;/a&gt;, for a list of some standard keymaps.</target>
        </trans-unit>
        <trans-unit id="9a03e98bcd37e72da0b3b9deceee27f5df95ba28" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;sticky-properties#Sticky-Properties&quot;&gt;Sticky Properties&lt;/a&gt;, for other insertion functions that inherit text properties from the nearby text in addition to inserting it. Whitespace inserted by indentation functions also inherits text properties.</source>
          <target state="translated">See &lt;a href=&quot;sticky-properties#Sticky-Properties&quot;&gt;Sticky Properties&lt;/a&gt;, for other insertion functions that inherit text properties from the nearby text in addition to inserting it. Whitespace inserted by indentation functions also inherits text properties.</target>
        </trans-unit>
        <trans-unit id="98509a53833c5fc83ffcc12fbd16ec6c56972517" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;strings-and-characters#Strings-and-Characters&quot;&gt;Strings and Characters&lt;/a&gt;, for functions that operate on strings.</source>
          <target state="translated">See &lt;a href=&quot;strings-and-characters#Strings-and-Characters&quot;&gt;Strings and Characters&lt;/a&gt;, for functions that operate on strings.</target>
        </trans-unit>
        <trans-unit id="99840c7e8ef94ab69f5f8ef75fe11f5404a44ea9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;Strings of Events&lt;/a&gt;, for special considerations for strings of keyboard character events.</source>
          <target state="translated">See &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;Strings of Events&lt;/a&gt;, for special considerations for strings of keyboard character events.</target>
        </trans-unit>
        <trans-unit id="8e0aab21fb1723d66a5474ff63479ad9a81bf3e8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;suspending-emacs#Suspending-Emacs&quot;&gt;Suspending Emacs&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;suspending-emacs#Suspending-Emacs&quot;&gt;Suspending Emacs&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="dc20dd0de6e24b172f693244be5844a45581a6bc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;symbols#Symbols&quot;&gt;symbolp&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;symbols#Symbols&quot;&gt;symbolp&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fa158d4b9a294575509fba6ee5eecb450f053c65" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;syntactic-font-lock#Syntactic-Font-Lock&quot;&gt;Syntactic Font Lock&lt;/a&gt;. See &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;Syntax Properties&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;syntactic-font-lock#Syntactic-Font-Lock&quot;&gt;Syntactic Font Lock&lt;/a&gt;. See &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;Syntax Properties&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="224f1a2a24f00fcffb63caf2bd00e32c0891a255" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;syntax-table-p&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;syntax-table-p&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="062733bc56fab784f98b6bb9c64f9e13dfb6094c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Temporary Displays&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Temporary Displays&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="753b8b5475f0209bac3ca6fb69dbc60ddcad8a0d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;Terminal-Specific&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;Terminal-Specific&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5cfe2579f6e2aeb6d81e8295eb8d7b032bbe59cf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;, for information about functions that display strings or copy them into buffers. See &lt;a href=&quot;character-type#Character-Type&quot;&gt;Character Type&lt;/a&gt;, and &lt;a href=&quot;string-type#String-Type&quot;&gt;String Type&lt;/a&gt;, for information about the syntax of characters and strings. See &lt;a href=&quot;non_002dascii-characters#Non_002dASCII-Characters&quot;&gt;Non-ASCII Characters&lt;/a&gt;, for functions to convert between text representations and to encode and decode character codes. Also, note that &lt;code&gt;length&lt;/code&gt; should &lt;em&gt;not&lt;/em&gt; be used for computing the width of a string on display; use &lt;code&gt;string-width&lt;/code&gt; (see &lt;a href=&quot;size-of-displayed-text#Size-of-Displayed-Text&quot;&gt;Size of Displayed Text&lt;/a&gt;) instead.</source>
          <target state="translated">See &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;, for information about functions that display strings or copy them into buffers. See &lt;a href=&quot;character-type#Character-Type&quot;&gt;Character Type&lt;/a&gt;, and &lt;a href=&quot;string-type#String-Type&quot;&gt;String Type&lt;/a&gt;, for information about the syntax of characters and strings. See &lt;a href=&quot;non_002dascii-characters#Non_002dASCII-Characters&quot;&gt;Non-ASCII Characters&lt;/a&gt;, for functions to convert between text representations and to encode and decode character codes. Also, note that &lt;code&gt;length&lt;/code&gt; should &lt;em&gt;not&lt;/em&gt; be used for computing the width of a string on display; use &lt;code&gt;string-width&lt;/code&gt; (see &lt;a href=&quot;size-of-displayed-text#Size-of-Displayed-Text&quot;&gt;Size of Displayed Text&lt;/a&gt;) instead.</target>
        </trans-unit>
        <trans-unit id="b296f69ee341163b7182568ba975c25e5304541d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;text-comparison#Text-Comparison&quot;&gt;Text Comparison&lt;/a&gt;, for functions that compare strings; some of them ignore case differences, or can optionally ignore case differences.</source>
          <target state="translated">See &lt;a href=&quot;text-comparison#Text-Comparison&quot;&gt;Text Comparison&lt;/a&gt;, for functions that compare strings; some of them ignore case differences, or can optionally ignore case differences.</target>
        </trans-unit>
        <trans-unit id="1962c887c918951daa0f438756a3c9491902b9bc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;the-mark#The-Mark&quot;&gt;The Mark&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;the-mark#The-Mark&quot;&gt;The Mark&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c70286c677883e44f7190e77754e2705c67b3360" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;, for functions to get the current time.</source>
          <target state="translated">See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;, for functions to get the current time.</target>
        </trans-unit>
        <trans-unit id="0224cff01837766f226bb42ceb4f8848cdd789a4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tips-for-defining#Tips-for-Defining&quot;&gt;Tips for Defining&lt;/a&gt;, for advice about how to write the code to set up the mode&amp;rsquo;s keymap variable.</source>
          <target state="translated">See &lt;a href=&quot;tips-for-defining#Tips-for-Defining&quot;&gt;Tips for Defining&lt;/a&gt;, for advice about how to write the code to set up the mode&amp;rsquo;s keymap variable.</target>
        </trans-unit>
        <trans-unit id="0f3d8f8f995047dbc5bbf869e9f68740084c541a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;, for mechanisms that translate event sequences at the level of &lt;code&gt;read-key-sequence&lt;/code&gt;.</source>
          <target state="translated">See &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;, for mechanisms that translate event sequences at the level of &lt;code&gt;read-key-sequence&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94ed3e2bf39e6b133ac7195dba20b491019e4cde" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;, for another way to signal an error if the current buffer is read-only.</source>
          <target state="translated">See &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;, for another way to signal an error if the current buffer is read-only.</target>
        </trans-unit>
        <trans-unit id="4fc521387f759bbd28ef0cc489e6f6c834fabdb9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fe272ca1c324b7c65b4d68b6ab04bb891b8b349d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;custom-variable-p&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;custom-variable-p&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ae9580dd3d5af1aec03bdad020d749c61e241457" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;vectors#Vectors&quot;&gt;Vectors&lt;/a&gt;, for functions that work with vectors.</source>
          <target state="translated">See &lt;a href=&quot;vectors#Vectors&quot;&gt;Vectors&lt;/a&gt;, for functions that work with vectors.</target>
        </trans-unit>
        <trans-unit id="3cef1a72151f6324a5e5863d4d64f0445201fae2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;vectors#Vectors&quot;&gt;vectorp&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;vectors#Vectors&quot;&gt;vectorp&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="62702112e978271b88fb66687b0ac43587026cc8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;visiting-functions#Visiting-Functions&quot;&gt;Visiting Functions&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;visiting-functions#Visiting-Functions&quot;&gt;Visiting Functions&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3663c824346a20a3cedbeb9a7135ba007cde1a7f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;window-configuration-p&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;window-configuration-p&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8c68db7c56373d29ab1c4bf43c3b9efe57e314d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9a70d6a3511c0d624fcc4c1b214a8e17b73e838b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;windows#Windows&quot;&gt;Windows&lt;/a&gt;, for a description of the functions that work on windows.</source>
          <target state="translated">See &lt;a href=&quot;windows#Windows&quot;&gt;Windows&lt;/a&gt;, for a description of the functions that work on windows.</target>
        </trans-unit>
        <trans-unit id="e78fed0fc84917cd4adcf99b81867f6ddad6f9ab" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;delq&lt;/code&gt;, in &lt;a href=&quot;sets-and-lists#Sets-And-Lists&quot;&gt;Sets And Lists&lt;/a&gt;, for another function that modifies cons cells.</source>
          <target state="translated">See &lt;code&gt;delq&lt;/code&gt; , in &lt;a href=&quot;sets-and-lists#Sets-And-Lists&quot;&gt;Sets And Lists&lt;/a&gt;, for another function that modifies cons cells.</target>
        </trans-unit>
        <trans-unit id="9d2e2f803497f85fd463c6953a14eadedd83629e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;documentation&lt;/code&gt; in &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Accessing Documentation&lt;/a&gt;, for a realistic example of using &lt;code&gt;commandp&lt;/code&gt;.</source>
          <target state="translated">See &lt;code&gt;documentation&lt;/code&gt; in &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Accessing Documentation&lt;/a&gt;, for a realistic example of using &lt;code&gt;commandp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="615519fd52dbaadc36bf6d2a20002c5d9c3393de" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;documentation&lt;/code&gt; in &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Accessing Documentation&lt;/a&gt;, for another example using &lt;code&gt;mapatoms&lt;/code&gt;.</source>
          <target state="translated">See &lt;code&gt;documentation&lt;/code&gt; in &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Accessing Documentation&lt;/a&gt;, for another example using &lt;code&gt;mapatoms&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cda0db5af95f7c07dfca531f5e2f76c101619b6" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;format&lt;/code&gt;, in &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;, for other ways to obtain the printed representation of a Lisp object as a string.</source>
          <target state="translated">See &lt;code&gt;format&lt;/code&gt; , in &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;, for other ways to obtain the printed representation of a Lisp object as a string.</target>
        </trans-unit>
        <trans-unit id="53972c6b7359f88a525166920a5f13adafa3e254" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;put&lt;/code&gt; for an example.</source>
          <target state="translated">See &lt;code&gt;put&lt;/code&gt; for an example.</target>
        </trans-unit>
        <trans-unit id="54d9bec00ef8afbf14d52ab43fb284642d2d44d7" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;read-regexp&lt;/code&gt; above for details of how these values are used.</source>
          <target state="translated">See &lt;code&gt;read-regexp&lt;/code&gt; above for details of how these values are used.</target>
        </trans-unit>
        <trans-unit id="6f8eff4758a0a7b45c20a1c17def64982c9d546a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;, for other hooks that are called when you change text in a buffer.</source>
          <target state="translated">See also &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;, for other hooks that are called when you change text in a buffer.</target>
        </trans-unit>
        <trans-unit id="71966c8c290b6c5982644033cb668788b4b90dfe" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;append&lt;/code&gt; in &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;, &lt;code&gt;concat&lt;/code&gt; in &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;, and &lt;code&gt;vconcat&lt;/code&gt; in &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;Vector Functions&lt;/a&gt;, for other ways to copy sequences.</source>
          <target state="translated">See also &lt;code&gt;append&lt;/code&gt; in &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;, &lt;code&gt;concat&lt;/code&gt; in &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;, and &lt;code&gt;vconcat&lt;/code&gt; in &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;Vector Functions&lt;/a&gt;, for other ways to copy sequences.</target>
        </trans-unit>
        <trans-unit id="7203e4cce52ccddf17ba22a90873987a61888250" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;defsubst&lt;/code&gt;, which defines a function like &lt;code&gt;defun&lt;/code&gt; and tells the Lisp compiler to perform inline expansion on it. See &lt;a href=&quot;inline-functions#Inline-Functions&quot;&gt;Inline Functions&lt;/a&gt;.</source>
          <target state="translated">See also &lt;code&gt;defsubst&lt;/code&gt; , which defines a function like &lt;code&gt;defun&lt;/code&gt; and tells the Lisp compiler to perform inline expansion on it. See &lt;a href=&quot;inline-functions#Inline-Functions&quot;&gt;Inline Functions&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a637ed86c3a6857bc74349c6dc07ed269034f21c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;delete-directory&lt;/code&gt; in &lt;a href=&quot;create_002fdelete-dirs#Create_002fDelete-Dirs&quot;&gt;Create/Delete Dirs&lt;/a&gt;.</source>
          <target state="translated">See also &lt;code&gt;delete-directory&lt;/code&gt; in &lt;a href=&quot;create_002fdelete-dirs#Create_002fDelete-Dirs&quot;&gt;Create/Delete Dirs&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5dcf7a784f4bb666a3998ca45f7765ccb183f2ea" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;file-nlinks&lt;/code&gt; in &lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;File Attributes&lt;/a&gt;.</source>
          <target state="translated">See also &lt;code&gt;file-nlinks&lt;/code&gt; in &lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;File Attributes&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="297227b7f86dc76c0385c4b7cbbcf777210a241d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;next-window&lt;/code&gt; and &lt;code&gt;previous-window&lt;/code&gt;, in &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;.</source>
          <target state="translated">See also &lt;code&gt;next-window&lt;/code&gt; and &lt;code&gt;previous-window&lt;/code&gt; , in &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0976cba06603d6856daf274834373a389726bd6f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;open-dribble-file&lt;/code&gt; in &lt;a href=&quot;recording-input#Recording-Input&quot;&gt;Recording Input&lt;/a&gt;.</source>
          <target state="translated">See also &lt;code&gt;open-dribble-file&lt;/code&gt; in &lt;a href=&quot;recording-input#Recording-Input&quot;&gt;Recording Input&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cbdf15657d3b6d06e2558ae395f6ed0768492c06" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;string-bytes&lt;/code&gt;, in &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;.</source>
          <target state="translated">See also &lt;code&gt;string-bytes&lt;/code&gt; , in &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9986904ad7866dcaf66bceaed9ac4e063c31f766" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;with-temp-buffer&lt;/code&gt; in &lt;a href=&quot;current-buffer#Definition-of-with_002dtemp_002dbuffer&quot;&gt;The Current Buffer&lt;/a&gt;.</source>
          <target state="translated">See also &lt;code&gt;with-temp-buffer&lt;/code&gt; in &lt;a href=&quot;current-buffer#Definition-of-with_002dtemp_002dbuffer&quot;&gt;The Current Buffer&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7bb971158dc8d8d2dc2fd7a1744ed5f671e955e1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;with-temp-file&lt;/code&gt; in &lt;a href=&quot;writing-to-files#Definition-of-with_002dtemp_002dfile&quot;&gt;Writing to Files&lt;/a&gt;.</source>
          <target state="translated">See also &lt;code&gt;with-temp-file&lt;/code&gt; in &lt;a href=&quot;writing-to-files#Definition-of-with_002dtemp_002dfile&quot;&gt;Writing to Files&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7df28c3640f5c53ad8a1aa78f72f5cbda97ec129" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;open-termscript&lt;/code&gt; function (see &lt;a href=&quot;terminal-output#Terminal-Output&quot;&gt;Terminal Output&lt;/a&gt;).</source>
          <target state="translated">See also the &lt;code&gt;open-termscript&lt;/code&gt; function (see &lt;a href=&quot;terminal-output#Terminal-Output&quot;&gt;Terminal Output&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="d79d69defc79a541e78dc09bc065c1b37635925a" translate="yes" xml:space="preserve">
          <source>See also the examples for &lt;code&gt;single-key-description&lt;/code&gt;, below.</source>
          <target state="translated">See also the examples for &lt;code&gt;single-key-description&lt;/code&gt; , below.</target>
        </trans-unit>
        <trans-unit id="8c5072b84ba971bddbd6290ba93dd0c159209015" translate="yes" xml:space="preserve">
          <source>See also the field feature (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;), which provides functions that are used by many cursor-motion commands.</source>
          <target state="translated">See also the field feature (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;), which provides functions that are used by many cursor-motion commands.</target>
        </trans-unit>
        <trans-unit id="896901e45d8140796f5f9e3efc14645f1da57413" translate="yes" xml:space="preserve">
          <source>See also the file locking mechanism in &lt;a href=&quot;file-locks#File-Locks&quot;&gt;File Locks&lt;/a&gt;.</source>
          <target state="translated">See also the file locking mechanism in &lt;a href=&quot;file-locks#File-Locks&quot;&gt;File Locks&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1f674bbb95ddc221f6e21e69b74da49b2c9b4e81" translate="yes" xml:space="preserve">
          <source>See also the function &lt;code&gt;add-to-list&lt;/code&gt;, in &lt;a href=&quot;list-variables#List-Variables&quot;&gt;List Variables&lt;/a&gt;, for a way to add an element to a list stored in a variable and used as a set.</source>
          <target state="translated">See also the function &lt;code&gt;add-to-list&lt;/code&gt; , in &lt;a href=&quot;list-variables#List-Variables&quot;&gt;List Variables&lt;/a&gt;, for a way to add an element to a list stored in a variable and used as a set.</target>
        </trans-unit>
        <trans-unit id="572a84c9bb2078ce71c563b68198dd2754d843c4" translate="yes" xml:space="preserve">
          <source>See also the function &lt;code&gt;compare-buffer-substrings&lt;/code&gt; in &lt;a href=&quot;comparing-text#Comparing-Text&quot;&gt;Comparing Text&lt;/a&gt;, for a way to compare text in buffers. The function &lt;code&gt;string-match&lt;/code&gt;, which matches a regular expression against a string, can be used for a kind of string comparison; see &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;.</source>
          <target state="translated">See also the function &lt;code&gt;compare-buffer-substrings&lt;/code&gt; in &lt;a href=&quot;comparing-text#Comparing-Text&quot;&gt;Comparing Text&lt;/a&gt;, for a way to compare text in buffers. The function &lt;code&gt;string-match&lt;/code&gt; , which matches a regular expression against a string, can be used for a kind of string comparison; see &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1b85e47917227a1a8f116fcb96fc9d9dcd32457a" translate="yes" xml:space="preserve">
          <source>See also the function &lt;code&gt;elt&lt;/code&gt;, in &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Sequence Functions&lt;/a&gt;.</source>
          <target state="translated">See also the function &lt;code&gt;elt&lt;/code&gt; , in &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Sequence Functions&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="17c94f3a5750b9a1d3c2e77249a713b42a83150a" translate="yes" xml:space="preserve">
          <source>See also the function &lt;code&gt;format&lt;/code&gt; in &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;.</source>
          <target state="translated">See also the function &lt;code&gt;format&lt;/code&gt; in &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="81d9e0c4041e8e8d85666543ec2d086cbc7b4c64" translate="yes" xml:space="preserve">
          <source>See also the function &lt;code&gt;get-buffer-create&lt;/code&gt; in &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;Creating Buffers&lt;/a&gt;.</source>
          <target state="translated">See also the function &lt;code&gt;get-buffer-create&lt;/code&gt; in &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;Creating Buffers&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f429b2bba2632c9ba67dc4a46c6a533f44dd7892" translate="yes" xml:space="preserve">
          <source>See also the function &lt;code&gt;get-char-property&lt;/code&gt; which checks both overlay properties and text properties for a given character. See &lt;a href=&quot;examining-properties#Examining-Properties&quot;&gt;Examining Properties&lt;/a&gt;.</source>
          <target state="translated">See also the function &lt;code&gt;get-char-property&lt;/code&gt; which checks both overlay properties and text properties for a given character. See &lt;a href=&quot;examining-properties#Examining-Properties&quot;&gt;Examining Properties&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c07deec7048ab867f18b5c0014babec158f12bcc" translate="yes" xml:space="preserve">
          <source>See also the function &lt;code&gt;indirect-function&lt;/code&gt;. See &lt;a href=&quot;function-indirection#Definition-of-indirect_002dfunction&quot;&gt;Definition of indirect-function&lt;/a&gt;.</source>
          <target state="translated">See also the function &lt;code&gt;indirect-function&lt;/code&gt; . See &lt;a href=&quot;function-indirection#Definition-of-indirect_002dfunction&quot;&gt;Definition of indirect-function&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f736a6c7e753ef25322f4488c4166f3a2dbcdba8" translate="yes" xml:space="preserve">
          <source>See also the function &lt;code&gt;set-visited-file-name&lt;/code&gt; (see &lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Buffer File Name&lt;/a&gt;).</source>
          <target state="translated">See also the function &lt;code&gt;set-visited-file-name&lt;/code&gt; (see &lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Buffer File Name&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="2eb37cbffa380ff02e57df82961713943b68fa6b" translate="yes" xml:space="preserve">
          <source>See also the functions &lt;code&gt;read-coding-system&lt;/code&gt; and &lt;code&gt;read-non-nil-coding-system&lt;/code&gt;, in &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;User-Chosen Coding Systems&lt;/a&gt;, and &lt;code&gt;read-input-method-name&lt;/code&gt;, in &lt;a href=&quot;input-methods#Input-Methods&quot;&gt;Input Methods&lt;/a&gt;.</source>
          <target state="translated">See also the functions &lt;code&gt;read-coding-system&lt;/code&gt; and &lt;code&gt;read-non-nil-coding-system&lt;/code&gt; , in &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;User-Chosen Coding Systems&lt;/a&gt;, and &lt;code&gt;read-input-method-name&lt;/code&gt; , in &lt;a href=&quot;input-methods#Input-Methods&quot;&gt;Input Methods&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6b1a38d3b5388355fdfac4676d5813d4a03acaf6" translate="yes" xml:space="preserve">
          <source>See the related function &lt;code&gt;generate-new-buffer&lt;/code&gt; in &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;Creating Buffers&lt;/a&gt;.</source>
          <target state="translated">See the related function &lt;code&gt;generate-new-buffer&lt;/code&gt; in &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;Creating Buffers&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4081cdcec2e6941841e913dbe076c35316127959" translate="yes" xml:space="preserve">
          <source>Select among Command Alternatives</source>
          <target state="translated">コマンドの選択肢の中から選択</target>
        </trans-unit>
        <trans-unit id="f0233e1f1d857eaa620ca23e19ea8211affd5160" translate="yes" xml:space="preserve">
          <source>Select among command alternatives.</source>
          <target state="translated">コマンドの選択肢から選択します。</target>
        </trans-unit>
        <trans-unit id="9c3e5c7a98306588c64257a7252bcceea266b3ac" translate="yes" xml:space="preserve">
          <source>Select the window mentioned in the first mouse event in the key sequence that invoked this command. Special.</source>
          <target state="translated">このコマンドを呼び出したキーシーケンスの最初のマウスイベントで言及されたウィンドウを選択します。特別なこと。</target>
        </trans-unit>
        <trans-unit id="6de878736785d7ef8e9255890d71d25e9a6c3468" translate="yes" xml:space="preserve">
          <source>Selecting Windows</source>
          <target state="translated">Windowsの選択</target>
        </trans-unit>
        <trans-unit id="dfb028aef8f4c68d1672154e39d0130ed37a2d90" translate="yes" xml:space="preserve">
          <source>Selecting a Representation</source>
          <target state="translated">表現の選択</target>
        </trans-unit>
        <trans-unit id="8c5d9be29ba6586b735131839faa725c6ce183c5" translate="yes" xml:space="preserve">
          <source>Selecting a frame can also change focus redirections. Selecting frame &lt;code&gt;bar&lt;/code&gt;, when &lt;code&gt;foo&lt;/code&gt; had been selected, changes any redirections pointing to &lt;code&gt;foo&lt;/code&gt; so that they point to &lt;code&gt;bar&lt;/code&gt; instead. This allows focus redirection to work properly when the user switches from one frame to another using &lt;code&gt;select-window&lt;/code&gt;.</source>
          <target state="translated">Selecting a frame can also change focus redirections. Selecting frame &lt;code&gt;bar&lt;/code&gt; , when &lt;code&gt;foo&lt;/code&gt; had been selected, changes any redirections pointing to &lt;code&gt;foo&lt;/code&gt; so that they point to &lt;code&gt;bar&lt;/code&gt; instead. This allows focus redirection to work properly when the user switches from one frame to another using &lt;code&gt;select-window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="491155026e37ae0b1face788a45d3f6bb303f1fa" translate="yes" xml:space="preserve">
          <source>Selecting a simple element has the effect of moving to position &lt;var&gt;index-position&lt;/var&gt; in the buffer. Special elements look like this:</source>
          <target state="translated">Selecting a simple element has the effect of moving to position &lt;var&gt;index-position&lt;/var&gt; in the buffer. Special elements look like this:</target>
        </trans-unit>
        <trans-unit id="0f6a8e416184c352684d641d30356c8fdeff922e" translate="yes" xml:space="preserve">
          <source>Selecting a special element performs:</source>
          <target state="translated">特殊な要素を選択すると実行されます。</target>
        </trans-unit>
        <trans-unit id="a560de5fd856bd0f7f7c2c3e48ab01b2c5176ca7" translate="yes" xml:space="preserve">
          <source>Selecting a window sets the value of point in its buffer from the window&amp;rsquo;s value of point. Conversely, deselecting a window sets the window&amp;rsquo;s value of point from that of the buffer. Thus, when you switch between windows that display a given buffer, the point value for the selected window is in effect in the buffer, while the point values for the other windows are stored in those windows.</source>
          <target state="translated">Selecting a window sets the value of point in its buffer from the window&amp;rsquo;s value of point. Conversely, deselecting a window sets the window&amp;rsquo;s value of point from that of the buffer. Thus, when you switch between windows that display a given buffer, the point value for the selected window is in effect in the buffer, while the point values for the other windows are stored in those windows.</target>
        </trans-unit>
        <trans-unit id="31ecfd98c966c8902a42804edfef75d159a373f9" translate="yes" xml:space="preserve">
          <source>Selective Display</source>
          <target state="translated">選択的表示</target>
        </trans-unit>
        <trans-unit id="6f63fe8a0ec734445563a4f59a8eaba51d9a8e5a" translate="yes" xml:space="preserve">
          <source>Selective display does not directly affect editing commands. For example,</source>
          <target state="translated">選択的表示は、編集コマンドに直接影響を与えません。例えば</target>
        </trans-unit>
        <trans-unit id="c278acd9b7f80ec49ccac01c4bfb867396ef19c5" translate="yes" xml:space="preserve">
          <source>Self-Evaluating Forms</source>
          <target state="translated">自己評価フォーム</target>
        </trans-unit>
        <trans-unit id="86d964671e91cac8b46ebe695d71cd59e38bde90" translate="yes" xml:space="preserve">
          <source>Self-inserting characters are translated through this translation table before they are inserted. Search commands also translate their input through this table, so they can compare more reliably with what&amp;rsquo;s in the buffer.</source>
          <target state="translated">Self-inserting characters are translated through this translation table before they are inserted. Search commands also translate their input through this table, so they can compare more reliably with what&amp;rsquo;s in the buffer.</target>
        </trans-unit>
        <trans-unit id="a732cd2ef0d5fed9aa2caec06a287c6b564b1d20" translate="yes" xml:space="preserve">
          <source>Self-inserting characters, the ones that get inserted into a buffer when the user types them (see &lt;a href=&quot;commands-for-insertion#Commands-for-Insertion&quot;&gt;Commands for Insertion&lt;/a&gt;), normally take on the same properties as the preceding character. This is called &lt;em&gt;inheritance&lt;/em&gt; of properties.</source>
          <target state="translated">Self-inserting characters, the ones that get inserted into a buffer when the user types them (see &lt;a href=&quot;commands-for-insertion#Commands-for-Insertion&quot;&gt;Commands for Insertion&lt;/a&gt;), normally take on the same properties as the preceding character. This is called &lt;em&gt;inheritance&lt;/em&gt; of properties.</target>
        </trans-unit>
        <trans-unit id="b96a5c464613f24d7646121e7d9102c8a9234230" translate="yes" xml:space="preserve">
          <source>Self-insertion translates the input character through &lt;code&gt;translation-table-for-input&lt;/code&gt;. See &lt;a href=&quot;translation-of-characters#Translation-of-Characters&quot;&gt;Translation of Characters&lt;/a&gt;.</source>
          <target state="translated">Self-insertion translates the input character through &lt;code&gt;translation-table-for-input&lt;/code&gt; . See &lt;a href=&quot;translation-of-characters#Translation-of-Characters&quot;&gt;Translation of Characters&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="822a9ee64792cb6762a16320b701dc631f9eb524" translate="yes" xml:space="preserve">
          <source>Send the output to the file name specified, overwriting it if it already exists.</source>
          <target state="translated">指定したファイル名に出力を送信し、既に存在する場合は上書きします。</target>
        </trans-unit>
        <trans-unit id="4a3ee096da797e579c1469607259ca0984c096c6" translate="yes" xml:space="preserve">
          <source>Sending Input to Processes</source>
          <target state="translated">プロセスへの入力の送信</target>
        </trans-unit>
        <trans-unit id="025798ea2ac63c2247ac967f936ea440e48807f7" translate="yes" xml:space="preserve">
          <source>Sending Signals to Processes</source>
          <target state="translated">プロセスへのシグナル送信</target>
        </trans-unit>
        <trans-unit id="305b8c7d8dd760adc71ef2a109e1c3e91ca5d566" translate="yes" xml:space="preserve">
          <source>Sending input to an asynchronous subprocess.</source>
          <target state="translated">非同期サブプロセスに入力を送信します。</target>
        </trans-unit>
        <trans-unit id="3d7e520df1c6561eb0321bd3f938204883eb65fb" translate="yes" xml:space="preserve">
          <source>Sentinels run when process run-status changes.</source>
          <target state="translated">センチネルは、プロセスの実行状態が変化したときに実行されます。</target>
        </trans-unit>
        <trans-unit id="bb1cbe614e2482e4bbe28bf6b9cd269e1101537f" translate="yes" xml:space="preserve">
          <source>Sentinels: Detecting Process Status Changes</source>
          <target state="translated">センチネル。プロセスの状態変化の検出</target>
        </trans-unit>
        <trans-unit id="41731c7147c33780c09da41dfe563d86f41b597d" translate="yes" xml:space="preserve">
          <source>Separating windows visually.</source>
          <target state="translated">視覚的に窓を区切る。</target>
        </trans-unit>
        <trans-unit id="1c51890be0fdeaaef998bd697231eb6abe7f05b1" translate="yes" xml:space="preserve">
          <source>Separators used in sequences (such as &lt;code&gt;&quot;,&quot;&lt;/code&gt; and &lt;code&gt;&quot;;&quot;&lt;/code&gt; above) are best defined with BNF rules such as &lt;code&gt;(foo (foo &quot;separator&quot; foo) ...)&lt;/code&gt; which generate precedence conflicts which are then resolved by giving them an explicit &lt;code&gt;(assoc &quot;separator&quot;)&lt;/code&gt;.</source>
          <target state="translated">Separators used in sequences (such as &lt;code&gt;&quot;,&quot;&lt;/code&gt; and &lt;code&gt;&quot;;&quot;&lt;/code&gt; above) are best defined with BNF rules such as &lt;code&gt;(foo (foo &quot;separator&quot; foo) ...)&lt;/code&gt; which generate precedence conflicts which are then resolved by giving them an explicit &lt;code&gt;(assoc &quot;separator&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="657ae2f963a7ef2139ffd497ed0061bc894afa5c" translate="yes" xml:space="preserve">
          <source>Sequence Types</source>
          <target state="translated">シーケンスの種類</target>
        </trans-unit>
        <trans-unit id="fe8b9c3c37cb286d7cc9c4826fbe1b5fe52da019" translate="yes" xml:space="preserve">
          <source>Sequence and alternative</source>
          <target state="translated">シーケンスと代替</target>
        </trans-unit>
        <trans-unit id="5ac4ac4b0cebd260f572d92190a2ffcba70fb740" translate="yes" xml:space="preserve">
          <source>Sequence of actions Emacs performs at startup.</source>
          <target state="translated">起動時にEmacsが実行する一連のアクション。</target>
        </trans-unit>
        <trans-unit id="b5fb636023abb67d347041d398442118f79ea091" translate="yes" xml:space="preserve">
          <source>Sequences</source>
          <target state="translated">Sequences</target>
        </trans-unit>
        <trans-unit id="b3fe69304bf904dec8045dfe6fdf9519b0fb8156" translate="yes" xml:space="preserve">
          <source>Sequences Arrays Vectors</source>
          <target state="translated">シーケンス 配列 ベクトル</target>
        </trans-unit>
        <trans-unit id="d55a2abe3a8076c5d88e86d5c48dba06c7e17146" translate="yes" xml:space="preserve">
          <source>Sequences, Arrays, and Vectors</source>
          <target state="translated">シーケンス、配列、ベクトル</target>
        </trans-unit>
        <trans-unit id="4cc319cd193dd85832e275f1860302e7a49496e0" translate="yes" xml:space="preserve">
          <source>Sequencing</source>
          <target state="translated">Sequencing</target>
        </trans-unit>
        <trans-unit id="b93d56f56c1840ef4c394eac298b3d730ef00e85" translate="yes" xml:space="preserve">
          <source>Serial ports are available on GNU/Linux, Unix, and MS Windows systems.</source>
          <target state="translated">シリアルポートはGNU/Linux、Unix、MS Windowsシステムで利用可能です。</target>
        </trans-unit>
        <trans-unit id="e6e2d9084d6412e5422e252ec7b1bea911843c15" translate="yes" xml:space="preserve">
          <source>Session Management</source>
          <target state="translated">セッション管理</target>
        </trans-unit>
        <trans-unit id="e004947cf2be78b09277e2c5fea0bec914f034aa" translate="yes" xml:space="preserve">
          <source>Set &lt;var&gt;button&lt;/var&gt;&amp;rsquo;s &lt;var&gt;prop&lt;/var&gt; property to &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">Set &lt;var&gt;button&lt;/var&gt; &amp;rsquo;s &lt;var&gt;prop&lt;/var&gt; property to &lt;var&gt;val&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="ba717b437ea675d3c99794a6a88f87fbb7987cc4" translate="yes" xml:space="preserve">
          <source>Set a breakpoint at the stop point at or after point (&lt;code&gt;edebug-set-breakpoint&lt;/code&gt;). If you use a prefix argument, the breakpoint is temporary&amp;mdash;it turns off the first time it stops the program. An overlay with the &lt;code&gt;edebug-enabled-breakpoint&lt;/code&gt; or &lt;code&gt;edebug-disabled-breakpoint&lt;/code&gt; faces is put at the breakpoint.</source>
          <target state="translated">Set a breakpoint at the stop point at or after point ( &lt;code&gt;edebug-set-breakpoint&lt;/code&gt; ). If you use a prefix argument, the breakpoint is temporary&amp;mdash;it turns off the first time it stops the program. An overlay with the &lt;code&gt;edebug-enabled-breakpoint&lt;/code&gt; or &lt;code&gt;edebug-disabled-breakpoint&lt;/code&gt; faces is put at the breakpoint.</target>
        </trans-unit>
        <trans-unit id="19cb1521e7c9ba193d2500ca008206ec47839e30" translate="yes" xml:space="preserve">
          <source>Set a conditional breakpoint which stops the program only if evaluating &lt;var&gt;condition&lt;/var&gt; produces a non-&lt;code&gt;nil&lt;/code&gt; value (&lt;code&gt;edebug-set-conditional-breakpoint&lt;/code&gt;). With a prefix argument, the breakpoint is temporary.</source>
          <target state="translated">Set a conditional breakpoint which stops the program only if evaluating &lt;var&gt;condition&lt;/var&gt; produces a non- &lt;code&gt;nil&lt;/code&gt; value ( &lt;code&gt;edebug-set-conditional-breakpoint&lt;/code&gt; ). With a prefix argument, the breakpoint is temporary.</target>
        </trans-unit>
        <trans-unit id="c9f9635e429eec7a3b5df197f6523a6598b8c6d0" translate="yes" xml:space="preserve">
          <source>Set all the variables and do not query.</source>
          <target state="translated">すべての変数を設定して、クエリを行わないようにします。</target>
        </trans-unit>
        <trans-unit id="13e8fb846a8fb81d5c4df72d5921406e316c4946" translate="yes" xml:space="preserve">
          <source>Set conditional or unconditional breakpoints.</source>
          <target state="translated">条件付きまたは無条件のブレークポイントを設定します。</target>
        </trans-unit>
        <trans-unit id="3320c9616154b0cc19a1b7c09fb7d27402558297" translate="yes" xml:space="preserve">
          <source>Set only the safe variables and do not query.</source>
          <target state="translated">安全な変数のみを設定し、クエリを行わないようにします。</target>
        </trans-unit>
        <trans-unit id="26815226b14883011f32ba183df05436be3e3e4d" translate="yes" xml:space="preserve">
          <source>Set the &lt;var&gt;attribute&lt;/var&gt; of the node to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">Set the &lt;var&gt;attribute&lt;/var&gt; of the node to &lt;var&gt;value&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a7cd9c19536286df0de0abae6f7e47ca2a66c15f" translate="yes" xml:space="preserve">
          <source>Set the button-type &lt;var&gt;type&lt;/var&gt;&amp;rsquo;s &lt;var&gt;prop&lt;/var&gt; property to &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">Set the button-type &lt;var&gt;type&lt;/var&gt; &amp;rsquo;s &lt;var&gt;prop&lt;/var&gt; property to &lt;var&gt;val&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="24f6defe2d8623ad18f84a7a63b77ecc14e1bc1d" translate="yes" xml:space="preserve">
          <source>Set the font property &lt;var&gt;property&lt;/var&gt; in the font-spec &lt;var&gt;font-spec&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">Set the font property &lt;var&gt;property&lt;/var&gt; in the font-spec &lt;var&gt;font-spec&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5afa7b7a3f1af9e5c05f0ca90fa2ef7f74962cd3" translate="yes" xml:space="preserve">
          <source>Set the function&amp;rsquo;s &lt;code&gt;interactive-only&lt;/code&gt; property to &lt;var&gt;value&lt;/var&gt;. See &lt;a href=&quot;defining-commands#The-interactive_002donly-property&quot;&gt;The interactive-only property&lt;/a&gt;.</source>
          <target state="translated">Set the function&amp;rsquo;s &lt;code&gt;interactive-only&lt;/code&gt; property to &lt;var&gt;value&lt;/var&gt; . See &lt;a href=&quot;defining-commands#The-interactive_002donly-property&quot;&gt;The interactive-only property&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="45fbb38d0933bcce6aba90482d62f88de730bba7" translate="yes" xml:space="preserve">
          <source>Set the locking thread of &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;thread&lt;/var&gt;. &lt;var&gt;thread&lt;/var&gt; may be &lt;code&gt;nil&lt;/code&gt;, in which case the process is unlocked.</source>
          <target state="translated">Set the locking thread of &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;thread&lt;/var&gt; . &lt;var&gt;thread&lt;/var&gt; may be &lt;code&gt;nil&lt;/code&gt; , in which case the process is unlocked.</target>
        </trans-unit>
        <trans-unit id="18675bfab9c83faccc02f27422d27d81e121605f" translate="yes" xml:space="preserve">
          <source>Set the priority for packets sent on this connection to the integer &lt;var&gt;priority&lt;/var&gt;. The interpretation of this number is protocol specific; such as setting the TOS (type of service) field on IP packets sent on this connection. It may also have system dependent effects, such as selecting a specific output queue on the network interface.</source>
          <target state="translated">Set the priority for packets sent on this connection to the integer &lt;var&gt;priority&lt;/var&gt; . The interpretation of this number is protocol specific; such as setting the TOS (type of service) field on IP packets sent on this connection. It may also have system dependent effects, such as selecting a specific output queue on the network interface.</target>
        </trans-unit>
        <trans-unit id="df44459082f4eae84d739f5f097da6443a1bab3c" translate="yes" xml:space="preserve">
          <source>Set the property &lt;var&gt;prop&lt;/var&gt; of &lt;var&gt;abbrev&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">プロパティセット &lt;var&gt;prop&lt;/var&gt; の &lt;var&gt;abbrev&lt;/var&gt; 値に &lt;var&gt;val&lt;/var&gt; を。</target>
        </trans-unit>
        <trans-unit id="145369233f7d73084d55e8b884bc6a7fa6f2548d" translate="yes" xml:space="preserve">
          <source>Set the property &lt;var&gt;prop&lt;/var&gt; of abbrev table &lt;var&gt;table&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">略語テーブル &lt;var&gt;table&lt;/var&gt; プロパティ &lt;var&gt;prop&lt;/var&gt; を値 &lt;var&gt;val&lt;/var&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="8ccae5464c64741903caf78493a2e1cb4ea74608" translate="yes" xml:space="preserve">
          <source>Set the representation type of the current buffer. If &lt;var&gt;multibyte&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the buffer becomes multibyte. If &lt;var&gt;multibyte&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the buffer becomes unibyte.</source>
          <target state="translated">現在のバッファの表現タイプを設定します。場合は &lt;var&gt;multibyte&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; の、バッファがマルチバイトになります。場合は &lt;var&gt;multibyte&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 、バッファはユニバイトになります。</target>
        </trans-unit>
        <trans-unit id="095f49622b8ae4b6233b76f588bc7d817a209aaa" translate="yes" xml:space="preserve">
          <source>Set the safe variables, and query (once) about any unsafe variables.</source>
          <target state="translated">安全な変数を設定し、安全でない変数について(一度だけ)問い合わせます。</target>
        </trans-unit>
        <trans-unit id="d2a3e9e1786ed875a52f712c795d9226f392b518" translate="yes" xml:space="preserve">
          <source>Set the size of &lt;var&gt;ring&lt;/var&gt; to &lt;var&gt;size&lt;/var&gt;. If the new size is smaller, then the oldest items in the ring are discarded.</source>
          <target state="translated">&lt;var&gt;ring&lt;/var&gt; のサイズをサイズに設定し &lt;var&gt;size&lt;/var&gt; 。新しいサイズが小さい場合、リング内の最も古いアイテムは破棄されます。</target>
        </trans-unit>
        <trans-unit id="ef7b62e94b29a6f396604036bc117f9e427ccc8c" translate="yes" xml:space="preserve">
          <source>Set the variable&amp;rsquo;s &lt;code&gt;risky-local-variable&lt;/code&gt; property to &lt;var&gt;value&lt;/var&gt; (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;).</source>
          <target state="translated">変数の &lt;code&gt;risky-local-variable&lt;/code&gt; プロパティを &lt;var&gt;value&lt;/var&gt; に設定します（&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;ファイルローカル変数を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="f628b711f8f0cf51bafad953c5363bc0521ae47e" translate="yes" xml:space="preserve">
          <source>Set the variable&amp;rsquo;s &lt;code&gt;safe-local-variable&lt;/code&gt; property to &lt;var&gt;function&lt;/var&gt; (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;).</source>
          <target state="translated">変数の &lt;code&gt;safe-local-variable&lt;/code&gt; プロパティを &lt;var&gt;function&lt;/var&gt; に設定します（&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;ファイルローカル変数を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="27e97a79ee5734fcdfb5ffc1d7a6a04ab0c7282b" translate="yes" xml:space="preserve">
          <source>Set up a timer which runs the next time Emacs is idle for &lt;var&gt;secs&lt;/var&gt; seconds. The value of &lt;var&gt;secs&lt;/var&gt; may be a number or a value of the type returned by &lt;code&gt;current-idle-time&lt;/code&gt;.</source>
          <target state="translated">Emacsがアイドル状態になる次回実行されるタイマーの設定 &lt;var&gt;secs&lt;/var&gt; 秒。値 &lt;var&gt;secs&lt;/var&gt; 数値またはによって返される型の値とすることができる &lt;code&gt;current-idle-time&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="254e42ea541fb8e32298bbe15de4f4e1f56fb5c8" translate="yes" xml:space="preserve">
          <source>Setting Hooks</source>
          <target state="translated">フックの設定</target>
        </trans-unit>
        <trans-unit id="be343cc818d8d6d89ba3f94f61140014d4981bea" translate="yes" xml:space="preserve">
          <source>Setting Variable Values</source>
          <target state="translated">変数値の設定</target>
        </trans-unit>
        <trans-unit id="3dbb403c83c09c01d97396e5fa00c994ca2efff4" translate="yes" xml:space="preserve">
          <source>Setting a timer to call a function at a certain time.</source>
          <target state="translated">タイマーを設定して、ある時間に関数を呼び出すようにします。</target>
        </trans-unit>
        <trans-unit id="3c697599f08654551058803ac0c0bcec8165178e" translate="yes" xml:space="preserve">
          <source>Setting a timer to call a function when Emacs has been idle for a certain length of time.</source>
          <target state="translated">タイマーを設定して、Emacsが一定時間アイドル状態になったときに関数を呼び出すようにします。</target>
        </trans-unit>
        <trans-unit id="625e1866157ffc17f349eafc8b9f773c1a5b603d" translate="yes" xml:space="preserve">
          <source>Setting breakpoints to make the program stop.</source>
          <target state="translated">プログラムを停止させるためのブレークポイントの設定</target>
        </trans-unit>
        <trans-unit id="80a6fdb6741d007a2a46415eaa0a982eccb3e0ad" translate="yes" xml:space="preserve">
          <source>Setting the properties of a range of text.</source>
          <target state="translated">テキストの範囲のプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="1fbf28368f77cd04577718c4f073f816a264988e" translate="yes" xml:space="preserve">
          <source>Setting the window history to &lt;code&gt;nil&lt;/code&gt; ensures that a future call to &lt;code&gt;quit-window&lt;/code&gt; can delete the window altogether.</source>
          <target state="translated">ウィンドウ履歴を &lt;code&gt;nil&lt;/code&gt; に設定すると、今後 &lt;code&gt;quit-window&lt;/code&gt; を呼び出すと、ウィンドウが完全に削除されるようになります。</target>
        </trans-unit>
        <trans-unit id="53edc1c1c5b2b48f344338280bb457b62b1914ad" translate="yes" xml:space="preserve">
          <source>Setting these variables does not immediately affect the window. These variables are checked when a new buffer is displayed in the window. Thus, you can make changes take effect by calling &lt;code&gt;set-window-buffer&lt;/code&gt;. Do not use these variables to try to determine the current width of the left or right margin. Instead, use the function &lt;code&gt;window-margins&lt;/code&gt;.</source>
          <target state="translated">これらの変数を設定しても、ウィンドウにすぐに影響するわけではありません。これらの変数は、ウィンドウに新しいバッファが表示されたときにチェックされます。したがって、 &lt;code&gt;set-window-buffer&lt;/code&gt; を呼び出すことにより、変更を有効にすることができます。これらの変数を使用して、左マージンまたは右マージンの現在の幅を決定しようとしないでください。代わりに、関数 &lt;code&gt;window-margins&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="a4679c2f0d9bf6e915afb21ccc40a79d8c38d1b5" translate="yes" xml:space="preserve">
          <source>Setting this variable does not affect existing frames. Furthermore, functions that display a buffer in a separate frame may override the default parameters by supplying their own parameters.</source>
          <target state="translated">この変数を設定しても既存のフレームには影響しません。さらに、バッファを別フレームに表示する関数は、独自のパラメータを与えることでデフォルトのパラメータをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="97ece87aa616c467b22fec96cdf778d15cdcc608" translate="yes" xml:space="preserve">
          <source>Setting this variable makes it buffer-local in the current buffer.</source>
          <target state="translated">この変数を設定すると、現在のバッファ内でバッファローカルになります。</target>
        </trans-unit>
        <trans-unit id="bed08c3f49198db618fbd7b2cdfaa069202a9107" translate="yes" xml:space="preserve">
          <source>Setting this variable usually causes the next resize operation to pass the corresponding size hints to the window manager. This means that this variable should be set only in a user&amp;rsquo;s initial file; applications should never bind it temporarily.</source>
          <target state="translated">この変数を設定すると、通常、次のサイズ変更操作で対応するサイズのヒントがウィンドウマネージャーに渡されます。これは、この変数はユーザーの初期ファイルにのみ設定する必要があることを意味します。アプリケーションが一時的にバインドしないでください。</target>
        </trans-unit>
        <trans-unit id="757ad1cca7dfa2c7063987ee4c8d6cf3c1f7b2b1" translate="yes" xml:space="preserve">
          <source>Setting up a function to autoload.</source>
          <target state="translated">オートロードする機能を設定します。</target>
        </trans-unit>
        <trans-unit id="5f0fbdd562909ca26f807732ed9daeee70e170b9" translate="yes" xml:space="preserve">
          <source>Setting up frame layouts with side windows.</source>
          <target state="translated">サイドウィンドウを使ったフレームレイアウトの設定</target>
        </trans-unit>
        <trans-unit id="37d211a549ee6db6cd1b296a5cdb016c8481ef97" translate="yes" xml:space="preserve">
          <source>Setup SMIE navigation and indentation. &lt;var&gt;grammar&lt;/var&gt; is a grammar table generated by &lt;code&gt;smie-prec2-&amp;gt;grammar&lt;/code&gt;. &lt;var&gt;rules-function&lt;/var&gt; is a set of indentation rules for use on &lt;code&gt;smie-rules-function&lt;/code&gt;. &lt;var&gt;keywords&lt;/var&gt; are additional arguments, which can include the following keywords:</source>
          <target state="translated">SMIEナビゲーションとインデントを設定します。 &lt;var&gt;grammar&lt;/var&gt; は、 &lt;code&gt;smie-prec2-&amp;gt;grammar&lt;/code&gt; によって生成される文法テーブルです。 &lt;var&gt;rules-function&lt;/var&gt; は、 &lt;code&gt;smie-rules-function&lt;/code&gt; で使用するためのインデントルールのセットです。 &lt;var&gt;keywords&lt;/var&gt; は追加の引数であり、次のキーワードを含めることができます。</target>
        </trans-unit>
        <trans-unit id="a323a74f4694f38469fdbe87c72cd84be3d71fff" translate="yes" xml:space="preserve">
          <source>Several functions return information about processes.</source>
          <target state="translated">いくつかの関数は、プロセスに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="b03d3e4af7377f376092575d02eb3bdc433e34b9" translate="yes" xml:space="preserve">
          <source>Several functions work specifically with bool-vectors; aside from that, you manipulate them with same functions used for other kinds of arrays.</source>
          <target state="translated">いくつかの関数は bool-vector に特化して動作しますが,それ以外は他の種類の配列で使われているのと同じ関数を使って操作することができます.</target>
        </trans-unit>
        <trans-unit id="3e9f1836e08811cf240c2fdb215ed3b945b44d63" translate="yes" xml:space="preserve">
          <source>Several hooks are available for customizing the behavior of this construct; they are listed below.</source>
          <target state="translated">このコンストラクタの動作をカスタマイズするためのフックがいくつか用意されています。</target>
        </trans-unit>
        <trans-unit id="d5c6c311b143c75bcaf3650a56c0b404f34fe12c" translate="yes" xml:space="preserve">
          <source>Several keywords make sense in &lt;code&gt;make-hash-table&lt;/code&gt;, but the only two that you really need to know about are &lt;code&gt;:test&lt;/code&gt; and &lt;code&gt;:weakness&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make-hash-table&lt;/code&gt; ではいくつかのキーワードが意味をなしますが、実際に知っておく必要があるのは &lt;code&gt;:test&lt;/code&gt; と &lt;code&gt;:weakness&lt;/code&gt; の2つだけです。</target>
        </trans-unit>
        <trans-unit id="64ca05b7be3e9e152f0eceec4028fb729fdf7335" translate="yes" xml:space="preserve">
          <source>Several kinds of elements may appear in a keymap, after the symbol &lt;code&gt;keymap&lt;/code&gt; that begins it:</source>
          <target state="translated">&lt;code&gt;keymap&lt;/code&gt; を開始するシンボルキーマップの後に、いくつかの種類の要素がキーマップに表示される場合があります。</target>
        </trans-unit>
        <trans-unit id="26f07c4bf7297f1dbea8ab7e16bc331bdf62ba4a" translate="yes" xml:space="preserve">
          <source>Several of the filling functions have an argument &lt;var&gt;justify&lt;/var&gt;. If it is non-&lt;code&gt;nil&lt;/code&gt;, that requests some kind of justification. It can be &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, or &lt;code&gt;center&lt;/code&gt;, to request a specific style of justification. If it is &lt;code&gt;t&lt;/code&gt;, that means to use the current justification style for this part of the text (see &lt;code&gt;current-justification&lt;/code&gt;, below). Any other value is treated as &lt;code&gt;full&lt;/code&gt;.</source>
          <target state="translated">いくつかの充填関数には、 &lt;var&gt;justify&lt;/var&gt; する引数があります。それが &lt;code&gt;nil&lt;/code&gt; でない場合、それはある種の正当化を要求します。特定の正当化スタイルを要求するに &lt;code&gt;left&lt;/code&gt; 、左、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;full&lt;/code&gt; 、または &lt;code&gt;center&lt;/code&gt; にすることができます。 &lt;code&gt;t&lt;/code&gt; の場合、テキストのこの部分に現在の位置揃えスタイルを使用することを意味します（以下の「 &lt;code&gt;current-justification&lt;/code&gt; 」を参照）。その他の値はすべて &lt;code&gt;full&lt;/code&gt; として扱われます。</target>
        </trans-unit>
        <trans-unit id="6e86854bd5641bda75ae79956e2571d32a5bfc2e" translate="yes" xml:space="preserve">
          <source>Several of the functions for minibuffer input have an argument called &lt;var&gt;initial&lt;/var&gt;. This is a mostly-deprecated feature for specifying that the minibuffer should start out with certain text, instead of empty as usual.</source>
          <target state="translated">ミニバッファ入力の関数のいくつかには、 &lt;var&gt;initial&lt;/var&gt; と呼ばれる引数があります。これは、ミニバッファが通常のように空ではなく、特定のテキストで始まるように指定するための、ほとんど非推奨の機能です。</target>
        </trans-unit>
        <trans-unit id="0dad76a03e6165ba6f6368c81742fd348de9316e" translate="yes" xml:space="preserve">
          <source>Several of these functions use or return &lt;em&gt;rgb values&lt;/em&gt;, described in &lt;a href=&quot;color-names#Color-Names&quot;&gt;Color Names&lt;/a&gt;.</source>
          <target state="translated">これらの関数のいくつかは、&lt;a href=&quot;color-names#Color-Names&quot;&gt;カラー名&lt;/a&gt;で説明されている&lt;em&gt;rgb値を&lt;/em&gt;使用または返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0c70fc1859c87f6d0c5cc7e74db97a9a3c05bbf0" translate="yes" xml:space="preserve">
          <source>Several operating systems support watching of filesystems for changes of files. If configured properly, Emacs links a respective library like</source>
          <target state="translated">いくつかのオペレーティングシステムでは、ファイルが変更されていないかファイルシステムを監視する機能をサポートしています。適切に設定されていれば、Emacs は</target>
        </trans-unit>
        <trans-unit id="0ee34d7d31bd282c1a678a9c7bd58a149ecb395e" translate="yes" xml:space="preserve">
          <source>Several other data structures are associated with each buffer:</source>
          <target state="translated">各バッファには他にもいくつかのデータ構造が関連付けられています。</target>
        </trans-unit>
        <trans-unit id="f14ecb19ff0f72eabaa8066abf21bfb80658f1a4" translate="yes" xml:space="preserve">
          <source>Shell Arguments</source>
          <target state="translated">シェル引数</target>
        </trans-unit>
        <trans-unit id="ef49b4eb19062f5d74c5f8495260cfeae4f31e03" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;&amp;amp;rest form&lt;/code&gt;. See &lt;code&gt;&amp;amp;rest&lt;/code&gt; below. If your macro wraps its body of code with &lt;code&gt;lambda&lt;/code&gt; before it is evaluated, use &lt;code&gt;def-body&lt;/code&gt; instead. See &lt;code&gt;def-body&lt;/code&gt; below.</source>
          <target state="translated">&lt;code&gt;&amp;amp;rest form&lt;/code&gt; 略。以下の &lt;code&gt;&amp;amp;rest&lt;/code&gt; を参照してください。マクロが評価される前にコード本体を &lt;code&gt;lambda&lt;/code&gt; でラップする場合は、代わりに &lt;code&gt;def-body&lt;/code&gt; を使用してください。以下の &lt;code&gt;def-body&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="047c8ca63fec636816b4bbc1d74e3f89f9f23d0e" translate="yes" xml:space="preserve">
          <source>Should fontify the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;loudly&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, should display status messages while fontifying. Calls the function specified by &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;beg&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; の間の領域をフォント化する必要があります。 &lt;var&gt;loudly&lt;/var&gt; で &lt;code&gt;nil&lt;/code&gt; 以外の場合は、フォント化中にステータスメッセージを表示する必要があります。 &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt; で指定された関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="2f5af8842e2c918c16a2dd5f8aa91909a958b15f" translate="yes" xml:space="preserve">
          <source>Should remove fontification from the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. Calls the function specified by &lt;code&gt;font-lock-unfontify-region-function&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;beg&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; の間の領域からフォント化を削除する必要があります。 &lt;code&gt;font-lock-unfontify-region-function&lt;/code&gt; で指定された関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="bd2e281c470aa7ed03f5b5855c5036b01edd56ec" translate="yes" xml:space="preserve">
          <source>Show &lt;var&gt;sample&lt;/var&gt; in a special face specified by &lt;code&gt;:sample-face&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:sample-face&lt;/code&gt; で指定された特殊な面に &lt;var&gt;sample&lt;/var&gt; を表示します。</target>
        </trans-unit>
        <trans-unit id="7adaea88c810cf9f28ed01828e2e827903a17e74" translate="yes" xml:space="preserve">
          <source>Show a backtrace of the thread at point. This will show where in its code the thread had yielded or was blocked at the moment you pressed</source>
          <target state="translated">スレッドのバックトレースを表示します。を押した瞬間にスレッドが降伏したかブロックされたかをコードのどこにあるかを表示します。</target>
        </trans-unit>
        <trans-unit id="b0eba5770f4aec734295451c7ac3d6868d024f38" translate="yes" xml:space="preserve">
          <source>Show the active threads.</source>
          <target state="translated">アクティブなスレッドを表示します。</target>
        </trans-unit>
        <trans-unit id="537b7497791f0fdfbe9edbf8c46a19d1419906aa" translate="yes" xml:space="preserve">
          <source>Showing Images</source>
          <target state="translated">画像の表示</target>
        </trans-unit>
        <trans-unit id="eb19df13f7b941be7fcf997641cf4b2871da6eec" translate="yes" xml:space="preserve">
          <source>Showing how such nonlocal exits can be written.</source>
          <target state="translated">このような非局所的な出口の書き方を示す。</target>
        </trans-unit>
        <trans-unit id="2680369054ed3fd5ebc8683900c98c53b798fc04" translate="yes" xml:space="preserve">
          <source>Shut down transaction queue &lt;var&gt;queue&lt;/var&gt;, waiting for all pending transactions to complete, and then terminate the connection or child process.</source>
          <target state="translated">トランザクションキュー &lt;var&gt;queue&lt;/var&gt; シャットダウンし、保留中のすべてのトランザクションが完了するのを待ってから、接続または子プロセスを終了します。</target>
        </trans-unit>
        <trans-unit id="234d9a8a77154be86693ba05a4f109fe17615301" translate="yes" xml:space="preserve">
          <source>Shy groups are also called &lt;em&gt;non-capturing&lt;/em&gt; or &lt;em&gt;unnumbered groups&lt;/em&gt;.</source>
          <target state="translated">恥ずかしがり屋のグループは、&lt;em&gt;非キャプチャ&lt;/em&gt;&lt;em&gt;グループ&lt;/em&gt;または&lt;em&gt;番号なしグループ&lt;/em&gt;とも呼ばれ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="fbbfa6e29d3553d09e661447794fc8276cb1fb9b" translate="yes" xml:space="preserve">
          <source>Side Window Options and Functions</source>
          <target state="translated">サイドウィンドウのオプションと機能</target>
        </trans-unit>
        <trans-unit id="5e398d2cb440373a20f241a7bbfceaa59906ecd0" translate="yes" xml:space="preserve">
          <source>Side Windows</source>
          <target state="translated">サイドウィンドウ</target>
        </trans-unit>
        <trans-unit id="2010617910b4a75f256768b6d19ffc0a53228e7b" translate="yes" xml:space="preserve">
          <source>Side windows (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;) can be used for displaying specific buffers always in a window at the same position of a frame. This permits grouping buffers that do not compete for being shown at the same time on a frame and showing any such buffer in the same window without disrupting the display of other buffers.</source>
          <target state="translated">サイドウィンドウは、（参照&lt;a href=&quot;side-windows#Side-Windows&quot;&gt;側のWindowsを&lt;/a&gt;）フレームの同じ位置にウィンドウ内に常に特定のバッファを表示するために使用することができます。これにより、他のバッファの表示を中断することなく、フレームに同時に表示され、同じウィンドウにそのようなバッファを表示するために競合しないバッファをグループ化できます。</target>
        </trans-unit>
        <trans-unit id="7ca6523823e4aee4cffba7a68c80280559eb556a" translate="yes" xml:space="preserve">
          <source>Side windows are special windows positioned at any of the four sides of a frame&amp;rsquo;s root window (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;). In practice, this means that the area of the frame&amp;rsquo;s root window is subdivided into a main window and a number of side windows surrounding that main window. The main window is either a &amp;ldquo;normal&amp;rdquo; live window or specifies the area containing all the normal windows.</source>
          <target state="translated">サイドウィンドウは、フレームのルートウィンドウの4つの側面のいずれかに配置される特別なウィンドウです（ウィンドウ&lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;とフレームを&lt;/a&gt;参照）。実際には、これは、フレームのルートウィンドウの領域が、メインウィンドウとそのメインウィンドウを囲むいくつかのサイドウィンドウに分割されることを意味します。メインウィンドウは「通常の」ライブウィンドウであるか、すべての通常のウィンドウを含む領域を指定します。</target>
        </trans-unit>
        <trans-unit id="693343be5385e287482c62c22a50c6ecc19a7db8" translate="yes" xml:space="preserve">
          <source>Side windows can be used to create more complex frame layouts like those provided by integrated development environments (IDEs). In such layouts, the area of the main window is where the normal editing activities take place. Side windows are not conceived for editing in the usual sense. Rather, they are supposed to display information complementary to the current editing activity, like lists of files, tags or buffers, help information, search or grep results or shell output.</source>
          <target state="translated">サイドウィンドウは、統合開発環境(IDE)で提供されるような、より複雑なフレームレイアウトを作成するために使用することができます。このようなレイアウトでは、メインウィンドウの領域が通常の編集活動が行われる場所となります。サイドウィンドウは、通常の意味での編集のために考案されたものではありません。むしろ、ファイルのリスト、タグやバッファ、ヘルプ情報、検索結果やgrep結果、シェル出力など、現在の編集活動を補完する情報を表示することを想定しています。</target>
        </trans-unit>
        <trans-unit id="c3d8cf29b1c7655e79373ce8a1465cf72030dd62" translate="yes" xml:space="preserve">
          <source>Side-effecting code referencing &lt;var&gt;symbol&lt;/var&gt; is undefined. Avoid. For example, here are two similar functions. Both use &lt;code&gt;and&lt;/code&gt;, &lt;var&gt;symbol&lt;/var&gt; and &lt;code&gt;guard&lt;/code&gt;:</source>
          <target state="translated">&lt;var&gt;symbol&lt;/var&gt; を参照する副作用のあるコードは未定義です。避ける。たとえば、ここに2つの類似した関数があります。使用 &lt;code&gt;and&lt;/code&gt; 、 &lt;var&gt;symbol&lt;/var&gt; と &lt;code&gt;guard&lt;/code&gt; 両方：</target>
        </trans-unit>
        <trans-unit id="550c328b29576b3520a2683437dd4a2426f6241f" translate="yes" xml:space="preserve">
          <source>Signal a &lt;code&gt;file-already-exists&lt;/code&gt; error if &lt;var&gt;ok-if-already-exists&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;ok-if-already-exists&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;file-already-exists&lt;/code&gt; エラーを通知します。</target>
        </trans-unit>
        <trans-unit id="4a92cb160354f2253da07bdd31ec9240b2272b00" translate="yes" xml:space="preserve">
          <source>Signal a &lt;code&gt;search-failed&lt;/code&gt; error.</source>
          <target state="translated">シグナル &lt;code&gt;search-failed&lt;/code&gt; エラーを。</target>
        </trans-unit>
        <trans-unit id="6725b50a00e3c51c4f6fe54090062db0465cccca" translate="yes" xml:space="preserve">
          <source>Signal an error if the current buffer is read-only. Special.</source>
          <target state="translated">現在のバッファが読み取り専用の場合にエラーを通知します。特殊です。</target>
        </trans-unit>
        <trans-unit id="00350e673f14ea1bf770f5928ac712383bdd9286" translate="yes" xml:space="preserve">
          <source>Signal an error, formatting &lt;var&gt;args&lt;/var&gt; according to &lt;var&gt;format&lt;/var&gt;.</source>
          <target state="translated">エラーを通知し、フォーマットに従って &lt;var&gt;args&lt;/var&gt; を &lt;var&gt;format&lt;/var&gt; します。</target>
        </trans-unit>
        <trans-unit id="bfdfc13f09f2ad8933d37acf7848a9ce0bf136be" translate="yes" xml:space="preserve">
          <source>Signal the thread at point. After</source>
          <target state="translated">点でスレッドにシグナルを送る。後に</target>
        </trans-unit>
        <trans-unit id="c1d3c0d2dc466badb3153f1c538e8469d48ea37b" translate="yes" xml:space="preserve">
          <source>Signaled</source>
          <target state="translated">Signaled</target>
        </trans-unit>
        <trans-unit id="f4677bd5ccad3d56ae38717d7ff6a132e3af99dd" translate="yes" xml:space="preserve">
          <source>Signaled when encountering a premature end of the input text.</source>
          <target state="translated">入力テキストの早すぎる終了に遭遇した場合に通知される。</target>
        </trans-unit>
        <trans-unit id="7b6ddf68636ec2657191aae72cdde36ef7ca8be9" translate="yes" xml:space="preserve">
          <source>Signaled when encountering invalid JSON syntax.</source>
          <target state="translated">無効な JSON 構文に遭遇した場合に通知されます。</target>
        </trans-unit>
        <trans-unit id="530ee20f0ab17301792cb5145f1201fc9c1a023a" translate="yes" xml:space="preserve">
          <source>Signaled when encountering unexpected input after the first JSON object parsed.</source>
          <target state="translated">最初のJSONオブジェクトが解析された後に予期せぬ入力があった場合に通知されます。</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="36c39e4251a9050104c4eb500ba9007d30df0ed3" translate="yes" xml:space="preserve">
          <source>Similar to string quote characters, except that the syntactic properties of the characters between the delimiters are not suppressed. Only TeX mode uses a paired delimiter presently&amp;mdash;the &amp;lsquo;</source>
          <target state="translated">文字列引用符と同様ですが、区切り文字間の文字の構文プロパティが抑制されない点が異なります。現在、TeXモードのみがペアの区切り文字を使用しています。</target>
        </trans-unit>
        <trans-unit id="3c6b7e55b5739f51ded5d3fa91b040f1b9453c13" translate="yes" xml:space="preserve">
          <source>Similarly old &lt;code&gt;after&lt;/code&gt; advice could modify the returned value by changing &lt;code&gt;ad-return-value&lt;/code&gt;, whereas new &lt;code&gt;:after&lt;/code&gt; advice cannot, so when porting such old &lt;code&gt;after&lt;/code&gt; advice, you&amp;rsquo;ll need to turn it into new &lt;code&gt;:around&lt;/code&gt; or &lt;code&gt;:filter-return&lt;/code&gt; advice instead.</source>
          <target state="translated">同様に、古い &lt;code&gt;after&lt;/code&gt; アドバイスは &lt;code&gt;ad-return-value&lt;/code&gt; を変更することで戻り値を変更できますが、新しい &lt;code&gt;:after&lt;/code&gt; アドバイスは変更できないため、このような古い &lt;code&gt;after&lt;/code&gt; アドバイスを移植する場合は、代わりに新しい &lt;code&gt;:around&lt;/code&gt; または &lt;code&gt;:filter-return&lt;/code&gt; アドバイスに変換する必要があります。。</target>
        </trans-unit>
        <trans-unit id="570f7ec9a2e1a0e6ce72b7677c1ce53f3118b620" translate="yes" xml:space="preserve">
          <source>Similarly, do not write an idle timer function that sets up another idle timer (including the same idle timer) with &lt;var&gt;secs&lt;/var&gt; argument less than or equal to the current idleness time. Such a timer will run almost immediately, and continue running again and again, instead of waiting for the next time Emacs becomes idle. The correct approach is to reschedule with an appropriate increment of the current value of the idleness time, as described below.</source>
          <target state="translated">同様に、 &lt;var&gt;secs&lt;/var&gt; 引数が現在のアイドル時間以下である別のアイドルタイマー（同じアイドルタイマーを含む）を設定するアイドルタイマー関数を記述しないでください。このようなタイマーは、Emacsが次にアイドル状態になるのを待つのではなく、ほぼ即座に実行され、何度も実行を続けます。正しいアプローチは、以下に説明するように、アイドル時間の現在の値を適切に増分して再スケジュールすることです。</target>
        </trans-unit>
        <trans-unit id="59b654a5f60957493fe6130fb256c21bd55fd8ed" translate="yes" xml:space="preserve">
          <source>Similarly, if you want to trace the execution of the function named &lt;code&gt;display-buffer&lt;/code&gt;, you could use:</source>
          <target state="translated">同様に、 &lt;code&gt;display-buffer&lt;/code&gt; という名前の関数の実行をトレースする場合は、次を使用できます。</target>
        </trans-unit>
        <trans-unit id="00189ce6f88500461b957045cb1fbfacb6303344" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;code&gt;mirroring&lt;/code&gt; property is used to display the appropriate mirrored character in the reordered text. Lisp programs can affect the mirrored display by changing this property. Again, any such changes affect all of Emacs display.</source>
          <target state="translated">同様に、 &lt;code&gt;mirroring&lt;/code&gt; プロパティは、並べ替えられたテキストに適切なミラーリングされた文字を表示するために使用されます。Lispプログラムは、このプロパティを変更することにより、ミラーリングされたディスプレイに影響を与える可能性があります。繰り返しますが、そのような変更はすべてのEmacsディスプレイに影響します。</target>
        </trans-unit>
        <trans-unit id="1376f4664c5fed679e0c56df5423e84799c09d71" translate="yes" xml:space="preserve">
          <source>Similarly, the mutex must be held before notifying the condition. The typical, and best, approach is to acquire the mutex, make the changes associated with this condition, and then notify it:</source>
          <target state="translated">同様に、ミューテックスは条件を通知する前に保持しなければなりません。典型的で最良のアプローチは、ミューテックスを取得し、この状態に関連した変更を行い、それを通知することです。</target>
        </trans-unit>
        <trans-unit id="f320538e9f8c4bb0866fc13950029ccdcbbe2313" translate="yes" xml:space="preserve">
          <source>Similarly, the three-element list &lt;code&gt;(rose violet buttercup)&lt;/code&gt; is equivalent to &lt;code&gt;(rose . (violet . (buttercup)))&lt;/code&gt;. It looks like this:</source>
          <target state="translated">同様に、3要素リスト &lt;code&gt;(rose violet buttercup)&lt;/code&gt; は &lt;code&gt;(rose . (violet . (buttercup)))&lt;/code&gt; と同等です。次のようになります。</target>
        </trans-unit>
        <trans-unit id="7960a5fbe36f57680cdc2d50caa76a5950902175" translate="yes" xml:space="preserve">
          <source>Similarly, you can have alists with more values associated with each key, using variations of this trick:</source>
          <target state="translated">同様に、このトリックのバリエーションを使用して、各キーに関連付けられた値の多いリストを作成することができます。</target>
        </trans-unit>
        <trans-unit id="76faf73d39a8fbef3bf4e7a0e9e666c649c96449" translate="yes" xml:space="preserve">
          <source>Similarly, you should document the additions in the Emacs manual.</source>
          <target state="translated">同様に、Emacsのマニュアルに追加した内容を文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="b6e7e5db4fd90213a96db3efca237fd49a5f2076" translate="yes" xml:space="preserve">
          <source>Simple Match Data Access</source>
          <target state="translated">シンプルマッチデータアクセス</target>
        </trans-unit>
        <trans-unit id="de80c0f45593a6c934a366105caaa1f6d28cb4bc" translate="yes" xml:space="preserve">
          <source>Simple Menu Items</source>
          <target state="translated">シンプルなメニュー項目</target>
        </trans-unit>
        <trans-unit id="f51fc86367e0a52ca67b77bcba192b6e142f3c10" translate="yes" xml:space="preserve">
          <source>Simple Minded Indentation Engine</source>
          <target state="translated">シンプルマインドなインデントエンジン</target>
        </trans-unit>
        <trans-unit id="b7c4ee84c7494dc0b5a61967837078512ea0e072" translate="yes" xml:space="preserve">
          <source>Simple Packages</source>
          <target state="translated">シンプルなパッケージ</target>
        </trans-unit>
        <trans-unit id="27fadf337e8aabcf474835df19127d2b3d7a70f4" translate="yes" xml:space="preserve">
          <source>Simple Types</source>
          <target state="translated">シンプルなタイプ</target>
        </trans-unit>
        <trans-unit id="da6f6d802878cccd5d6588d599fdf710219e456d" translate="yes" xml:space="preserve">
          <source>Simple accessors:</source>
          <target state="translated">シンプルなアクセ。</target>
        </trans-unit>
        <trans-unit id="8760ec82a2bbd4126f64b59d3be93bcf69768b7d" translate="yes" xml:space="preserve">
          <source>Simple customization types: sexp, integer, etc.</source>
          <target state="translated">シンプルなカスタマイズタイプ:sexp、integerなど。</target>
        </trans-unit>
        <trans-unit id="82f21951d43bb4b1d165bd49144935c1fac9d423" translate="yes" xml:space="preserve">
          <source>Simply changing the buffer text or moving point does not update the value that &lt;code&gt;window-end&lt;/code&gt; returns. The value is updated only when Emacs redisplays and redisplay completes without being preempted.</source>
          <target state="translated">バッファテキストまたは移動ポイントを変更するだけでは、 &lt;code&gt;window-end&lt;/code&gt; が返す値は更新されません。値は、Emacsが再表示され、プリエンプションなしで再表示が完了した場合にのみ更新されます。</target>
        </trans-unit>
        <trans-unit id="3a0a6d9e52297b2db5931d353b457ea60c992ca2" translate="yes" xml:space="preserve">
          <source>Simply deferring all operations to the usual primitives does not work. For instance, if the file name handler applies to &lt;code&gt;file-exists-p&lt;/code&gt;, then it must handle &lt;code&gt;load&lt;/code&gt; itself, because the usual &lt;code&gt;load&lt;/code&gt; code won&amp;rsquo;t work properly in that case. However, if the handler uses the &lt;code&gt;operations&lt;/code&gt; property to say it doesn&amp;rsquo;t handle &lt;code&gt;file-exists-p&lt;/code&gt;, then it need not handle &lt;code&gt;load&lt;/code&gt; nontrivially.</source>
          <target state="translated">すべての操作を通常のプリミティブに延期するだけでは機能しません。たとえば、ファイル名ハンドラーが &lt;code&gt;file-exists-p&lt;/code&gt; に適用される場合、通常の &lt;code&gt;load&lt;/code&gt; コードが正しく機能しないため、 &lt;code&gt;load&lt;/code&gt; 自体を処理する必要があります。ただし、ハンドラーが &lt;code&gt;operations&lt;/code&gt; プロパティを使用して、 &lt;code&gt;file-exists-p&lt;/code&gt; を処理しないと言う場合は、 &lt;code&gt;load&lt;/code&gt; 簡単に処理する必要はありません。</target>
        </trans-unit>
        <trans-unit id="6f9d95c7b050687559b692ab8c1364b9fd64a0ed" translate="yes" xml:space="preserve">
          <source>Simply passing a buffer as input means the whole buffer should be used.</source>
          <target state="translated">単にバッファを入力として渡すだけでは、バッファ全体を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="13a5e2a68347c8bb25748498b1345cbfcbb263b9" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;buffer-list-update-hook&lt;/code&gt; is also run by functions that are not related to window management, it will usually make sense to save the value of the selected window somewhere and compare it with the value of &lt;code&gt;selected-window&lt;/code&gt; while running that hook. Also, to avoid false positives when using &lt;code&gt;buffer-list-update-hook&lt;/code&gt;, it is good practice that every &lt;code&gt;select-window&lt;/code&gt; call supposed to select a window only temporarily passes a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;norecord&lt;/var&gt; argument. If possible, the macro &lt;code&gt;with-selected-window&lt;/code&gt; (see below) should be used in such cases.</source>
          <target state="translated">以来 &lt;code&gt;buffer-list-update-hook&lt;/code&gt; また、ウィンドウ管理に関連していない機能によって実行され、それは通常、選択されたウィンドウのどこかの値を保存するために意味をなすだろうとの値と比較し &lt;code&gt;selected-window&lt;/code&gt; そのフックを実行中。使用した場合にも、偽陽性を避けるために &lt;code&gt;buffer-list-update-hook&lt;/code&gt; 、すべてのことをお勧めし &lt;code&gt;select-window&lt;/code&gt; のみ一時的に非渡す呼び出しがウィンドウを選択することになって &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;norecord&lt;/var&gt; 引数を。可能であれば、このような場合は、 &lt;code&gt;with-selected-window&lt;/code&gt; を含むマクロ（以下を参照）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="92ee60b63d11f218f9962208ad2d4380be74d519" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;dired&lt;/code&gt; buffers have no fixed names, we use a special function &lt;code&gt;dired-default-directory-on-left&lt;/code&gt; in order to display a lean directory buffer on the left side of the frame.</source>
          <target state="translated">以来 &lt;code&gt;dired&lt;/code&gt; バッファは何の固定名を持っていない、我々は特別な機能を使用して &lt;code&gt;dired-default-directory-on-left&lt;/code&gt; 枠の左側にあるリーンディレクトリバッファを表示するために。</target>
        </trans-unit>
        <trans-unit id="63ef26146411f76047b5cc3557affb4ccf181689" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;eval&lt;/code&gt; is a function, the argument expression that appears in a call to &lt;code&gt;eval&lt;/code&gt; is evaluated twice: once as preparation before &lt;code&gt;eval&lt;/code&gt; is called, and again by the &lt;code&gt;eval&lt;/code&gt; function itself. Here is an example:</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; は関数であるため、evalの呼び出しに表示される引数式は2回評価されます &lt;code&gt;eval&lt;/code&gt; 回は &lt;code&gt;eval&lt;/code&gt; が呼び出される前の準備として、もう1回は &lt;code&gt;eval&lt;/code&gt; 関数自体によって評価されます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="c93db3a967c5056373b116f539b216a4a8e6dbd7" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;format&lt;/code&gt; interprets &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; は 'を解釈するので</target>
        </trans-unit>
        <trans-unit id="7e22214d3e3c5ab4e19ad2988c9ed142fb2ffbd8" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;funcall&lt;/code&gt; is a function, all of its arguments, including &lt;var&gt;function&lt;/var&gt;, are evaluated before &lt;code&gt;funcall&lt;/code&gt; is called. This means that you can use any expression to obtain the function to be called. It also means that &lt;code&gt;funcall&lt;/code&gt; does not see the expressions you write for the &lt;var&gt;arguments&lt;/var&gt;, only their values. These values are &lt;em&gt;not&lt;/em&gt; evaluated a second time in the act of calling &lt;var&gt;function&lt;/var&gt;; the operation of &lt;code&gt;funcall&lt;/code&gt; is like the normal procedure for calling a function, once its arguments have already been evaluated.</source>
          <target state="translated">以来 &lt;code&gt;funcall&lt;/code&gt; のは関数であり、その引数を含め、すべての &lt;var&gt;function&lt;/var&gt; 前に、評価され &lt;code&gt;funcall&lt;/code&gt; のが呼ばれます。これは、任意の式を使用して、呼び出される関数を取得できることを意味します。また、 &lt;code&gt;funcall&lt;/code&gt; は、 &lt;var&gt;arguments&lt;/var&gt; に対して記述した式を認識せず、それらの値のみを認識します。これらの値は、 &lt;var&gt;function&lt;/var&gt; を呼び出す動作では2回評価され&lt;em&gt;ません&lt;/em&gt;。 &lt;code&gt;funcall&lt;/code&gt; の操作は、引数がすでに評価されていると、関数を呼び出すための通常の手順と同じです。</target>
        </trans-unit>
        <trans-unit id="fbcef7b265e1eba9db5292139c1a21015de6846d" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;rx&lt;/code&gt; regexps are just S-expressions, they can be formatted and commented as such.</source>
          <target state="translated">以来 &lt;code&gt;rx&lt;/code&gt; 正規表現は、単にS-式である、彼らはフォーマットされ、そのようにコメントすることができます。</target>
        </trans-unit>
        <trans-unit id="772563e1f9a2cbc89210977445f0f64123f4a087" translate="yes" xml:space="preserve">
          <source>Since all global names are in the same name space, all the global variables, constants, and functions that are part of the mode should have names that start with the major mode name (or with an abbreviation of it if the name is long). See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Coding-Conventions.html#Coding-Conventions&quot;&gt;Coding Conventions&lt;/a&gt;.</source>
          <target state="translated">すべてのグローバル名は同じ名前空間にあるため、モードの一部であるすべてのグローバル変数、定数、および関数には、メジャーモード名で始まる名前（または名前が長い場合はその省略形）を付ける必要があります。&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Coding-Conventions.html#Coding-Conventions&quot;&gt;コーディング規約を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f085ca3b122b134d34112518fd0521f05e5870e8" translate="yes" xml:space="preserve">
          <source>Since all these libraries emit different events on notified file changes, there is the Emacs library &lt;code&gt;filenotify&lt;/code&gt; which provides a unified interface. Lisp programs that want to receive file notifications should always use this library in preference to the native ones.</source>
          <target state="translated">これらのライブラリはすべて、通知されたファイルの変更時に異なるイベントを &lt;code&gt;filenotify&lt;/code&gt; するため、統一されたインターフェイスを提供するEmacsライブラリfilenotifyがあります。ファイル通知を受け取りたいLispプログラムは、常にネイティブライブラリよりもこのライブラリを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4e3c2fb4931447dc0ed15e555e8a5ec4487982d0" translate="yes" xml:space="preserve">
          <source>Since both return points have tags that match the &lt;code&gt;throw&lt;/code&gt;, it goes to the inner one, the one established in &lt;code&gt;catch2&lt;/code&gt;. Therefore, &lt;code&gt;catch2&lt;/code&gt; returns normally with value &lt;code&gt;yes&lt;/code&gt;, and this value is printed. Finally the second body form in the outer &lt;code&gt;catch&lt;/code&gt;, which is &lt;code&gt;'no&lt;/code&gt;, is evaluated and returned from the outer &lt;code&gt;catch&lt;/code&gt;.</source>
          <target state="translated">両方のリターンポイントには &lt;code&gt;throw&lt;/code&gt; に一致するタグがあるため、 &lt;code&gt;catch2&lt;/code&gt; で確立された内側のポイントに移動します。したがって、 &lt;code&gt;catch2&lt;/code&gt; は通常値 &lt;code&gt;yes&lt;/code&gt; で戻り、この値が出力されます。最後に、外側に第2の本体形状 &lt;code&gt;catch&lt;/code&gt; で、 &lt;code&gt;'no&lt;/code&gt; 、評価および外側から返される &lt;code&gt;catch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e166c3fed4e20535c2e63114156a588007834869" translate="yes" xml:space="preserve">
          <source>Since changing properties counts as modifying the buffer, it is not possible to remove a &lt;code&gt;read-only&lt;/code&gt; property unless you know the special trick: bind &lt;code&gt;inhibit-read-only&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value and then remove the property. See &lt;a href=&quot;read-only-buffers#Read-Only-Buffers&quot;&gt;Read Only Buffers&lt;/a&gt;.</source>
          <target state="translated">プロパティの変更はバッファの変更としてカウントされるため、特別なトリックを知らない限り、 &lt;code&gt;read-only&lt;/code&gt; プロパティを削除することはできません &lt;code&gt;inhibit-read-only&lt;/code&gt; を &lt;code&gt;nil&lt;/code&gt; 以外の値にバインドしてから、プロパティを削除します。&lt;a href=&quot;read-only-buffers#Read-Only-Buffers&quot;&gt;読み取り専用バッファを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ec7b3e492c123b2e1384acb2a2a30b166bbd7e3f" translate="yes" xml:space="preserve">
          <source>Since characters are really integers, the printed representation of a character is a decimal number. This is also a possible read syntax for a character, but writing characters that way in Lisp programs is not clear programming. You should &lt;em&gt;always&lt;/em&gt; use the special read syntax formats that Emacs Lisp provides for characters. These syntax formats start with a question mark.</source>
          <target state="translated">文字は実際には整数であるため、文字の印刷表現は10進数です。これも文字の読み取り構文の可能性がありますが、Lispプログラムでそのように文字を書くことは明確なプログラミングではありません。EmacsLispが文字に提供する特別な読み取り構文フォーマットを&lt;em&gt;常に&lt;/em&gt;使用する必要&lt;em&gt;があり&lt;/em&gt;ます。これらの構文形式は疑問符で始まります。</target>
        </trans-unit>
        <trans-unit id="13de05d3bb8aca0bc14c0beae9561ec8d1f04082" translate="yes" xml:space="preserve">
          <source>Since child frames can be arbitrarily nested, a frame can be both a child and a parent frame. Also, the relative roles of child and parent frame may be reversed at any time (though it&amp;rsquo;s usually a good idea to keep the size of a child frame sufficiently smaller than that of its parent). An error will be signaled for the attempt to make a frame an ancestor of itself.</source>
          <target state="translated">子フレームは任意にネストできるため、フレームは子フレームと親フレームの両方にすることができます。また、子フレームと親フレームの相対的な役割はいつでも逆にすることができます（ただし、通常、子フレームのサイズを親のサイズよりも十分に小さくすることをお勧めします）。フレームをそれ自体の祖先にしようとすると、エラーが通知されます。</target>
        </trans-unit>
        <trans-unit id="95e11f373971a6e38b4a599cf18ed84141525d37" translate="yes" xml:space="preserve">
          <source>Since custom types are implemented as widgets, the way to define a new customize type is to define a new widget. We are not going to describe the widget interface here in details, see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/widget/index.html#Top&quot;&gt;Introduction&lt;/a&gt; in</source>
          <target state="translated">カスタムタイプはウィジェットとして実装されているため、新しいカスタマイズタイプを定義する方法は、新しいウィジェットを定義することです。ここではウィジェットインターフェイスについて詳しく説明しません。の&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/widget/index.html#Top&quot;&gt;概要&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b9be2d58b08dba264f2d36e1b5f4a61bd71af337" translate="yes" xml:space="preserve">
          <source>Since each buffer has its own current syntax table, we should make that more precise: &lt;code&gt;with-syntax-table&lt;/code&gt; temporarily alters the current syntax table of whichever buffer is current at the time the macro execution starts. Other buffers are not affected.</source>
          <target state="translated">各バッファには独自の現在の構文テーブルがあるため、より正確にする必要があり &lt;code&gt;with-syntax-table&lt;/code&gt; 。with -syntax-tableは、マクロの実行開始時に現在のバッファの現在の構文テーブルを一時的に変更します。他のバッファは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="85e204be2f37edb7779f088258d4a821ac19e3b8" translate="yes" xml:space="preserve">
          <source>Since every module function must accept the pointer to the environment as its first argument, the call to &lt;code&gt;make_function&lt;/code&gt; could be made from any module function, but you will normally want to do that from the module initialization function, so that all the module functions are known to Emacs once the module is loaded.</source>
          <target state="translated">すべてのモジュール関数は最初の引数として環境へのポインターを受け入れる必要があるため、 &lt;code&gt;make_function&lt;/code&gt; の呼び出しは任意のモジュール関数から行うことができますが、通常はモジュール初期化関数から行う必要があります。これにより、すべてのモジュール関数が認識されます。モジュールがロードされたらEmacsに。</target>
        </trans-unit>
        <trans-unit id="4f333c71d6574f90e8e7b09e62db9d0e3fe94a7d" translate="yes" xml:space="preserve">
          <source>Since it is impossible to change the length of an existing string, it is an error if &lt;var&gt;obj&lt;/var&gt; doesn&amp;rsquo;t fit within &lt;var&gt;string&lt;/var&gt;&amp;rsquo;s actual length, or if any new character requires a different number of bytes from the character currently present at that point in &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="translated">既存の文字列の長さを変更することは不可能であるため、 &lt;var&gt;obj&lt;/var&gt; が &lt;var&gt;string&lt;/var&gt; の実際の長さに収まらない場合、または新しい文字がその時点で現在存在する文字とは異なるバイト数を必要とする場合はエラーになります。 &lt;var&gt;string&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f586dd4503bd64ff45ff1bc10739d047e841f5e" translate="yes" xml:space="preserve">
          <source>Since more than one overlay can specify a property value for the same character, Emacs lets you specify a priority value of each overlay. The priority value is used to decide which of the overlapping overlays will &amp;ldquo;win&amp;rdquo;.</source>
          <target state="translated">複数のオーバーレイで同じ文字のプロパティ値を指定できるため、Emacsでは各オーバーレイの優先度の値を指定できます。優先度の値は、重なり合うオーバーレイのどれが「勝つ」かを決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c0a8d969d3a6f5a17d19a4d1a498117b4045516c" translate="yes" xml:space="preserve">
          <source>Since not all characters have the same width, these functions let you check the width of a character. See &lt;a href=&quot;primitive-indent#Primitive-Indent&quot;&gt;Primitive Indent&lt;/a&gt;, and &lt;a href=&quot;screen-lines#Screen-Lines&quot;&gt;Screen Lines&lt;/a&gt;, for related functions.</source>
          <target state="translated">すべての文字の幅が同じというわけではないため、これらの関数を使用すると、文字の幅を確認できます。関連する機能については、&lt;a href=&quot;primitive-indent#Primitive-Indent&quot;&gt;プリミティブインデント&lt;/a&gt;および&lt;a href=&quot;screen-lines#Screen-Lines&quot;&gt;画面行を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f9d83b348a0c39f0900ce1497ea72608f5b3cfc2" translate="yes" xml:space="preserve">
          <source>Since strings are arrays, and therefore sequences as well, you can operate on them with the general array and sequence functions documented in &lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;Sequences Arrays Vectors&lt;/a&gt;. For example, you can access individual characters in a string using the function &lt;code&gt;aref&lt;/code&gt; (see &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;).</source>
          <target state="translated">文字列は配列であり、したがってシーケンスでもあるため、&lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;Sequences ArraysVectorsに&lt;/a&gt;記載されている一般的な配列およびシーケンス関数を使用して文字列を操作できます。たとえば、関数 &lt;code&gt;aref&lt;/code&gt; を使用して文字列内の個々の文字にアクセスできます（&lt;a href=&quot;array-functions#Array-Functions&quot;&gt;配列関数を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="4b885ecac6d7733e34eec9eb2eb8b53065ef6de1" translate="yes" xml:space="preserve">
          <source>Since text properties are considered part of the contents of the buffer (or string), and can affect how a buffer looks on the screen, any change in buffer text properties marks the buffer as modified. Buffer text property changes are undoable also (see &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;). Positions in a string start from 0, whereas positions in a buffer start from 1.</source>
          <target state="translated">テキストプロパティはバッファ（または文字列）の内容の一部と見なされ、バッファが画面上でどのように表示されるかに影響を与える可能性があるため、バッファテキストプロパティを変更すると、バッファが変更済みとしてマークされます。バッファテキストプロパティの変更も&lt;a href=&quot;undo#Undo&quot;&gt;元に戻す&lt;/a&gt;ことができます（元に戻すを参照）。文字列内の位置は0から始まりますが、バッファ内の位置は1から始まります。</target>
        </trans-unit>
        <trans-unit id="28cf986e190b849079413367cd73edc4cd79bb63" translate="yes" xml:space="preserve">
          <source>Since the definition is global, it is recommended to give &lt;var&gt;name&lt;/var&gt; a package prefix to avoid name clashes with definitions elsewhere, as is usual when naming non-local variables and functions.</source>
          <target state="translated">定義はグローバルなので、それを与えることをお勧めします &lt;var&gt;name&lt;/var&gt; 非ローカル変数や関数に名前を付けるときに通常のように、他の場所で定義して避け名の衝突にパッケージ接頭辞を。</target>
        </trans-unit>
        <trans-unit id="b3f7378c0533b45ea3979efdd50e4a843296ca21" translate="yes" xml:space="preserve">
          <source>Since the expansion is evaluated in the normal manner, it may contain calls to other macros. It may even be a call to the same macro, though this is unusual.</source>
          <target state="translated">展開は普通に評価されるので、他のマクロへの呼び出しが含まれている可能性があります。これは珍しいことですが、同じマクロへの呼び出しかもしれません。</target>
        </trans-unit>
        <trans-unit id="d8d5590000c54c57a9e753c1135b64075fed36b1" translate="yes" xml:space="preserve">
          <source>Since the last argument of &lt;code&gt;nconc&lt;/code&gt; is not itself modified, it is reasonable to use a constant list, such as &lt;code&gt;'(4 5)&lt;/code&gt;, as in the above example. For the same reason, the last argument need not be a list:</source>
          <target state="translated">&lt;code&gt;nconc&lt;/code&gt; の最後の引数自体は変更されないため、上記の例のように、 &lt;code&gt;'(4 5)&lt;/code&gt; などの定数リストを使用するのが妥当です。同じ理由で、最後の引数はリストである必要はありません。</target>
        </trans-unit>
        <trans-unit id="e2020888433fd9777649c7ecd8ff7671cd2ec816" translate="yes" xml:space="preserve">
          <source>Since the outer size of a frame (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;) is usually unavailable before a frame has been made visible, it is generally not advisable to use floating-point values when creating decorated frames. Floating-point values are more suited for ensuring that an (undecorated) child frame is positioned nicely within the area of its parent frame.</source>
          <target state="translated">フレームの外側のサイズ（&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;フレームジオメトリを&lt;/a&gt;参照）は通常、フレームが表示される前は使用できないため、装飾されたフレームを作成するときに浮動小数点値を使用することは一般にお勧めできません。浮動小数点値は、（装飾されていない）子フレームがその親フレームの領域内に適切に配置されるようにするのに適しています。</target>
        </trans-unit>
        <trans-unit id="91cdedef1610817a9e177cdc216f72f459be496a" translate="yes" xml:space="preserve">
          <source>Since the outer size of a frame is usually unavailable before a frame has been made visible, it is generally not advisable to use floating-point values when creating decorated frames. Floating-point values are more suited to ensure that a child frame always fits within the area of its parent frame as, for example, when customizing &lt;code&gt;display-buffer-alist&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) via &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt;.</source>
          <target state="translated">通常、フレームが表示される前にフレームの外側のサイズは使用できないため、装飾されたフレームを作成するときに浮動小数点値を使用することは一般にお勧めできません。浮動小数点値は、たとえば、 &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt; を介してdisplay-buffer- &lt;code&gt;display-buffer-alist&lt;/code&gt; （&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;ウィンドウの選択を&lt;/a&gt;参照）をカスタマイズする場合のように、子フレームが常に親フレームの領域内に収まるようにするのに適しています。ます。</target>
        </trans-unit>
        <trans-unit id="21fcbc26870093593373de8c390bd4f87bfe85e7" translate="yes" xml:space="preserve">
          <source>Since this function is called after every buffer change, it should be reasonably fast.</source>
          <target state="translated">この関数はバッファが変更されるたびに呼び出されるので、それなりに高速になるはずです。</target>
        </trans-unit>
        <trans-unit id="f887d5fc58716f9a324461a5392abbedbe13a42b" translate="yes" xml:space="preserve">
          <source>Since this function modifies &lt;var&gt;keymap&lt;/var&gt;, you would normally use it on a newly created keymap. Operating on an existing keymap that is used for some other purpose is likely to cause trouble; for example, suppressing &lt;code&gt;global-map&lt;/code&gt; would make it impossible to use most of Emacs.</source>
          <target state="translated">この関数は &lt;var&gt;keymap&lt;/var&gt; 変更するため、通常は新しく作成されたキーマップで使用します。他の目的で使用されている既存のキーマップを操作すると、問題が発生する可能性があります。たとえば、 &lt;code&gt;global-map&lt;/code&gt; 抑制をすると、ほとんどのEmacsを使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="0932d374cd011e2856ed8fa50ab52066b87ee433" translate="yes" xml:space="preserve">
          <source>Since this variable affects all regular expression search and match constructs, you should bind it temporarily for as small as possible a part of the code.</source>
          <target state="translated">この変数はすべての正規表現の検索とマッチの構文に影響を与えるので、コードのごく一部に一時的にバインドする必要があります。</target>
        </trans-unit>
        <trans-unit id="c736ac46894856875aa8261d878c173cb7d28089" translate="yes" xml:space="preserve">
          <source>Since timers can run within a Lisp program only when the program calls a primitive that can wait, &lt;code&gt;with-timeout&lt;/code&gt; cannot stop executing &lt;var&gt;body&lt;/var&gt; while it is in the midst of a computation&amp;mdash;only when it calls one of those primitives. So use &lt;code&gt;with-timeout&lt;/code&gt; only with a &lt;var&gt;body&lt;/var&gt; that waits for input, not one that does a long computation.</source>
          <target state="translated">タイマーは、プログラムが待機可能なプリミティブを呼び出す場合にのみLispプログラム内で実行できるため、 &lt;code&gt;with-timeout&lt;/code&gt; は、計算の最中に &lt;var&gt;body&lt;/var&gt; 実行を停止することはできません。これらのプリミティブの1つを呼び出す場合のみです。したがって、 &lt;code&gt;with-timeout&lt;/code&gt; は &lt;var&gt;body&lt;/var&gt; のみで使用してくださいは、長い計算ではなく、入力を待機で。</target>
        </trans-unit>
        <trans-unit id="b31e625df282dbd04c3d466612f0d5567888ba0e" translate="yes" xml:space="preserve">
          <source>Since watchpoints are attached to symbols, modification to the objects contained within variables (e.g., by a list modification function see &lt;a href=&quot;modifying-lists#Modifying-Lists&quot;&gt;Modifying Lists&lt;/a&gt;) is not caught by this mechanism.</source>
          <target state="translated">ウォッチポイントをシンボルに添付されているので、リストの変更機能により、変数（例えば、内部に含まれるオブジェクトへの変更は、参照&lt;a href=&quot;modifying-lists#Modifying-Lists&quot;&gt;の変更リストを&lt;/a&gt;）このメカニズムによってキャッチされていません。</target>
        </trans-unit>
        <trans-unit id="2c12150e2c9c52ded5b7dc3d5c315314ca7ff3a7" translate="yes" xml:space="preserve">
          <source>Since working with such a frame is not very practical, Emacs by default allows for more complex frame layouts controlled by the default values of the frame size and the &lt;code&gt;split-height-threshold&lt;/code&gt; and &lt;code&gt;split-width-threshold&lt;/code&gt; options. Displaying a buffer not yet shown on a frame then either splits the single window on that frame or (re-)uses one of its two windows.</source>
          <target state="translated">このようなフレームでの作業はあまり実用的ではないため、Emacsではデフォルトで、フレームサイズと &lt;code&gt;split-height-threshold&lt;/code&gt; および &lt;code&gt;split-width-threshold&lt;/code&gt; のデフォルト値によって制御されるより複雑なフレームレイアウトが可能です。オプション。フレームにまだ表示されていないバッファを表示すると、そのフレームで1つのウィンドウが分割されるか、2つのウィンドウの1つが（再）使用されます。</target>
        </trans-unit>
        <trans-unit id="9ad099019f1901d05bedff87325f0bb06d1d9699" translate="yes" xml:space="preserve">
          <source>Size Parameters</source>
          <target state="translated">サイズパラメータ</target>
        </trans-unit>
        <trans-unit id="b05d1ff137c9c21e0275987562486facedb229d6" translate="yes" xml:space="preserve">
          <source>Size in bytes of a vector of length 1, including its header.</source>
          <target state="translated">ヘッダを含む長さ1のベクトルのサイズをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="6867ffa6c1ab7504879063ed1d2b7fde815b9de4" translate="yes" xml:space="preserve">
          <source>Size of Displayed Text</source>
          <target state="translated">表示されるテキストのサイズ</target>
        </trans-unit>
        <trans-unit id="ff304a31bbb8ec3245293986ab11cd55ab5b63b6" translate="yes" xml:space="preserve">
          <source>Size of carryover in decoding.</source>
          <target state="translated">デコード時のキャリーオーバーの大きさ。</target>
        </trans-unit>
        <trans-unit id="906e72db3cc062a08f0e15d4b71a5aabea212c1e" translate="yes" xml:space="preserve">
          <source>Size of parts of the frame, and enabling or disabling some parts.</source>
          <target state="translated">枠のパーツの大きさ、一部のパーツの有効化・無効化。</target>
        </trans-unit>
        <trans-unit id="f9e355f9111e580dcc3d0ac0089a3edc7750e764" translate="yes" xml:space="preserve">
          <source>Skip &lt;var&gt;len&lt;/var&gt; bytes. In packing, this leaves them unchanged, which normally means they remain zero. In unpacking, this means they are ignored.</source>
          <target state="translated">&lt;var&gt;len&lt;/var&gt; バイトをスキップします。パッキングでは、これにより変更されません。つまり、通常はゼロのままです。開梱時に、これはそれらが無視されることを意味します。</target>
        </trans-unit>
        <trans-unit id="bcf1cadb62133499efb69b6b56f199c1c01e373b" translate="yes" xml:space="preserve">
          <source>Skip the next &amp;lsquo;</source>
          <target state="translated">次をスキップ '</target>
        </trans-unit>
        <trans-unit id="ce5ddee9d1900d669da72bc01df34df096b2dccf" translate="yes" xml:space="preserve">
          <source>Skip to the next multiple of &lt;var&gt;len&lt;/var&gt; bytes.</source>
          <target state="translated">&lt;var&gt;len&lt;/var&gt; バイトの次の倍数にスキップします。</target>
        </trans-unit>
        <trans-unit id="8e85762b796a34f7599c9ff78411a794a0f01cd5" translate="yes" xml:space="preserve">
          <source>Skipping Characters</source>
          <target state="translated">スキップ文字</target>
        </trans-unit>
        <trans-unit id="619ae6d4101eb18b9d246d530e688ac241038aa5" translate="yes" xml:space="preserve">
          <source>Skipping characters belonging to a certain set.</source>
          <target state="translated">特定のセットに属する文字をスキップします。</target>
        </trans-unit>
        <trans-unit id="44f24d3a905c86ee5b39bf6a31a53b09ba55d188" translate="yes" xml:space="preserve">
          <source>Snarf-documentation</source>
          <target state="translated">Snarf-documentation</target>
        </trans-unit>
        <trans-unit id="000b309b5cac296cb78a5b9247e0330cfc55d7f9" translate="yes" xml:space="preserve">
          <source>So far we have only observed the default behavior in an uncustomized Emacs session. To see how this behavior can be customized, let&amp;rsquo;s consider the option &lt;code&gt;display-buffer-base-action&lt;/code&gt;. It provides a very coarse customization which conceptually affects the display of &lt;em&gt;any&lt;/em&gt; buffer. It can be used to supplement the actions supplied by &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; by reordering them or by adding actions that are not present there but fit more closely the user&amp;rsquo;s editing practice. However, it can also be used to change the default behavior in a more profound way.</source>
          <target state="translated">これまでのところ、カスタマイズされていないEmacsセッションでのデフォルトの動作のみを観察しました。この動作をカスタマイズする方法を確認するために、オプション &lt;code&gt;display-buffer-base-action&lt;/code&gt; について考えてみましょう。これは概念的の表示に影響を及ぼす非常に粗いカスタマイズ提供する&lt;em&gt;任意の&lt;/em&gt;緩衝液。 &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; によって提供されるアクションを補足するために使用できますによってを並べ替えたり、そこには存在しないがユーザーの編集方法により密接に適合するアクションを追加したりすることができます。ただし、これを使用して、デフォルトの動作をより詳細に変更することもできます。</target>
        </trans-unit>
        <trans-unit id="4e1ab71036198509a9921a19397b107e66b58e74" translate="yes" xml:space="preserve">
          <source>So far, we have only shown how &lt;em&gt;users&lt;/em&gt; can customize the default behavior of &lt;code&gt;display-buffer&lt;/code&gt;. Let us now see how &lt;em&gt;applications&lt;/em&gt; can change the course of &lt;code&gt;display-buffer&lt;/code&gt;. The canonical way to do that is to use the &lt;var&gt;action&lt;/var&gt; argument of &lt;code&gt;display-buffer&lt;/code&gt; or a function that calls it, like, for example, &lt;code&gt;pop-to-buffer&lt;/code&gt; (see &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;).</source>
          <target state="translated">これまで、&lt;em&gt;ユーザー&lt;/em&gt;が &lt;code&gt;display-buffer&lt;/code&gt; のデフォルトの動作をカスタマイズする方法のみを示してきました。ここで、&lt;em&gt;アプリケーション&lt;/em&gt;が &lt;code&gt;display-buffer&lt;/code&gt; のコースをどのように変更できるかを見てみましょう。これを行うための標準的な方法は、 &lt;code&gt;display-buffer&lt;/code&gt; の &lt;var&gt;action&lt;/var&gt; 引数、またはそれを呼び出す関数（ &lt;code&gt;pop-to-buffer&lt;/code&gt; など）を使用することです（「&lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;SwitchingBuffers&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="307495ded4140eda26a5384157f34d909e939691" translate="yes" xml:space="preserve">
          <source>So the simplest &amp;ldquo;handling&amp;rdquo; of nonlocal exits in module functions is to do nothing special and let the rest of your code to run as if nothing happened. However, this can cause two classes of problems:</source>
          <target state="translated">したがって、モジュール関数での非ローカル出口の最も簡単な「処理」は、特別なことを何もせず、コードの残りの部分を何も起こらなかったかのように実行させることです。ただし、これにより2つのクラスの問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3221b675f2d8c4fb6b71c4ae629483eb1d1b91c2" translate="yes" xml:space="preserve">
          <source>Some Lisp objects should never change. For example, the Lisp expression &lt;code&gt;&quot;aaa&quot;&lt;/code&gt; yields a string, but you should not change its contents. And some objects cannot be changed; for example, although you can create a new number by calculating one, Lisp provides no operation to change the value of an existing number.</source>
          <target state="translated">一部のLispオブジェクトは決して変更されるべきではありません。たとえば、Lisp式 &lt;code&gt;&quot;aaa&quot;&lt;/code&gt; は文字列を生成しますが、その内容を変更しないでください。また、一部のオブジェクトは変更できません。たとえば、数値を計算して新しい数値を作成することはできますが、Lispには既存の数値の値を変更する操作はありません。</target>
        </trans-unit>
        <trans-unit id="ca36429517ec17c6a2e1460316f841107d5af28f" translate="yes" xml:space="preserve">
          <source>Some Lisp programs set the flag explicitly. For example, the function &lt;code&gt;set-visited-file-name&lt;/code&gt; sets the flag to &lt;code&gt;t&lt;/code&gt;, because the text does not match the newly-visited file, even if it is unchanged from the file formerly visited.</source>
          <target state="translated">一部のLispプログラムは、フラグを明示的に設定します。たとえば、関数 &lt;code&gt;set-visited-file-name&lt;/code&gt; はフラグを &lt;code&gt;t&lt;/code&gt; に設定します。これは、以前にアクセスしたファイルから変更されていない場合でも、テキストが新しくアクセスしたファイルと一致しないためです。</target>
        </trans-unit>
        <trans-unit id="f5266a9ec69bb526c31abd6b2f1a07f64cfe9494" translate="yes" xml:space="preserve">
          <source>Some Lisp programs therefore try to choose a window at the bottom of the frame, for example, in order to display the buffer in vicinity of the minibuffer window where the user is expected to answer a question related to the new window. For non-input related actions &lt;code&gt;display-buffer-below-selected&lt;/code&gt; might be preferable because the selected window usually already has the user&amp;rsquo;s attention.</source>
          <target state="translated">したがって、一部のLispプログラムは、たとえば、ユーザーが新しいウィンドウに関連する質問に答えることが期待されるミニバッファウィンドウの近くにバッファを表示するために、フレームの下部にあるウィンドウを選択しようとします。入力に関連しないアクションの &lt;code&gt;display-buffer-below-selected&lt;/code&gt; 、選択されたウィンドウは通常すでにユーザーの注意を引いているため、display-buffer-below-selectedが望ましい場合があります。</target>
        </trans-unit>
        <trans-unit id="74e4f08b65f5569a2bed97dd6529c638302a22db" translate="yes" xml:space="preserve">
          <source>Some Terms</source>
          <target state="translated">いくつかの用語</target>
        </trans-unit>
        <trans-unit id="79f226eb13f1c66ad3b6553d7e43501a21df74f5" translate="yes" xml:space="preserve">
          <source>Some X window managers are set up so that just moving the mouse into a window is enough to set the focus there. Usually, there is no need for a Lisp program to know about the focus change until some other kind of input arrives. Emacs generates a focus event only when the user actually types a keyboard key or presses a mouse button in the new frame; just moving the mouse between frames does not generate a focus event.</source>
          <target state="translated">Xのウィンドウマネージャの中には、マウスをウィンドウに移動させるだけでフォーカスを設定できるように設定されているものがあります。通常、Lisp プログラムがフォーカスの変更を知る必要はありませんが、他の種類の入力が来るまでは、フォーカスの変更を知る必要はありません。Emacs は、ユーザが実際にキーボードキーを入力したり、新しいフレームでマウスボタンを押したりした場合にのみフォーカスイベントを生成します。</target>
        </trans-unit>
        <trans-unit id="8701bed8708fb4bc16cb08e8f5235a559a1bf48c" translate="yes" xml:space="preserve">
          <source>Some additional useful information is available from a parser state using these functions:</source>
          <target state="translated">これらの関数を使用すると、パーサの状態からさらに便利な情報を得ることができます。</target>
        </trans-unit>
        <trans-unit id="77154e30fd2fc7529836a30f66f05ca9cd0be346" translate="yes" xml:space="preserve">
          <source>Some buffers, such as process buffers, can change even when no commands are executing. In these cases, &lt;code&gt;undo-boundary&lt;/code&gt; is normally called periodically by the timer in this variable. Setting this variable to non-&lt;code&gt;nil&lt;/code&gt; prevents this behavior.</source>
          <target state="translated">プロセスバッファなどの一部のバッファは、コマンドが実行されていない場合でも変更される可能性があります。このような場合、 &lt;code&gt;undo-boundary&lt;/code&gt; は通常、この変数のタイマーによって定期的に呼び出されます。この変数を &lt;code&gt;nil&lt;/code&gt; 以外に設定すると、この動作が防止されます。</target>
        </trans-unit>
        <trans-unit id="9aee7dc0c501e9cac1d5f95516c00eb40ef1d189" translate="yes" xml:space="preserve">
          <source>Some codepoints are left &lt;em&gt;unassigned&lt;/em&gt; by the</source>
          <target state="translated">一部のコードポイントは、によって&lt;em&gt;割り当てられない&lt;/em&gt;ままになって&lt;em&gt;い&lt;/em&gt;ます</target>
        </trans-unit>
        <trans-unit id="403131455d6b96efb1c77b93b5acb83f343d041f" translate="yes" xml:space="preserve">
          <source>Some commands leave the region active after execution in such a way that it interferes with selective undo of that command. To make &lt;code&gt;undo&lt;/code&gt; ignore the active region when invoked immediately after such a command, set the property &lt;code&gt;undo-inhibit-region&lt;/code&gt; of the command&amp;rsquo;s function symbol to a non-nil value. See &lt;a href=&quot;standard-properties#Standard-Properties&quot;&gt;Standard Properties&lt;/a&gt;.</source>
          <target state="translated">一部のコマンドは、そのコマンドの選択的な取り消しを妨げるような方法で、実行後に領域をアクティブのままにします。このようなコマンドの直後に呼び出されたときに &lt;code&gt;undo&lt;/code&gt; がアクティブ領域を無視するようにするには、コマンドの関数シンボルのプロパティ &lt;code&gt;undo-inhibit-region&lt;/code&gt; をnil以外の値に設定します。&lt;a href=&quot;standard-properties#Standard-Properties&quot;&gt;標準プロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8a18a800c283ef773eb1f49b8fc885d67cb65923" translate="yes" xml:space="preserve">
          <source>Some commands set the mark as a side-effect. Commands should do this only if it has a potential use to the user, and never for their own internal purposes. For example, the &lt;code&gt;replace-regexp&lt;/code&gt; command sets the mark to the value of point before doing any replacements, because this enables the user to move back there conveniently after the replace is finished.</source>
          <target state="translated">一部のコマンドは、マークを副作用として設定します。コマンドは、ユーザーが使用できる可能性がある場合にのみこれを実行する必要があり、自身の内部目的には使用しないでください。たとえば、 &lt;code&gt;replace-regexp&lt;/code&gt; コマンドは、置換を行う前にマークをポイントの値に設定します。これにより、ユーザーは、置換が終了した後、そこに簡単に戻ることができます。</target>
        </trans-unit>
        <trans-unit id="bd938b967783ba7f68f2487dee8207d2efd073a9" translate="yes" xml:space="preserve">
          <source>Some commands set this variable during their execution, as a flag for whatever command runs next. In particular, the functions for killing text set &lt;code&gt;this-command&lt;/code&gt; to &lt;code&gt;kill-region&lt;/code&gt; so that any kill commands immediately following will know to append the killed text to the previous kill.</source>
          <target state="translated">一部のコマンドは、次に実行されるコマンドのフラグとして、実行中にこの変数を設定します。特に、テキストを強制終了する関数は、 &lt;code&gt;this-command&lt;/code&gt; を &lt;code&gt;kill-region&lt;/code&gt; に設定して、直後のkillコマンドが、強制終了されたテキストを前のkillに追加することを認識できるようにします。</target>
        </trans-unit>
        <trans-unit id="746d51de9f5ceffb76a1c0a475dec8f59f15a3c8" translate="yes" xml:space="preserve">
          <source>Some convenience functions are provided to make working with iterators easier:</source>
          <target state="translated">イテレータの操作をより簡単にするために、いくつかの便利な関数が提供されています。</target>
        </trans-unit>
        <trans-unit id="62c5822f4550474071b65797573eb151beb46ba3" translate="yes" xml:space="preserve">
          <source>Some editors that support adding attributes to text in the buffer do so by letting the user specify intervals within the text, and adding the properties to the intervals. Those editors permit the user or the programmer to determine where individual intervals start and end. We deliberately provided a different sort of interface in Emacs Lisp to avoid certain paradoxical behavior associated with text modification.</source>
          <target state="translated">バッファ内のテキストに属性を追加することをサポートしているエディタの中には、ユーザがテキスト内の間隔を指定し、その間隔にプロパティを追加することで属性を追加することができるものがあります。これらのエディタでは、ユーザやプログラマが個々の間隔の開始位置と終了位置を決定することができます。テキストの変更に関連する逆説的な動作を避けるために、Emacs Lisp で意図的に異なる種類のインターフェイスを提供しました。</target>
        </trans-unit>
        <trans-unit id="79c3f7e89010e67e09a67704f80df4ad4eba33ec" translate="yes" xml:space="preserve">
          <source>Some examples describe modifications to the contents of a buffer, by showing the before and after versions of the text. These examples show the contents of the buffer in question between two lines of dashes containing the buffer name. In addition, &amp;lsquo;</source>
          <target state="translated">いくつかの例では、テキストの前後のバージョンを示すことにより、バッファーの内容の変更について説明しています。これらの例は、バッファー名を含む2行のダッシュの間にある問題のバッファーの内容を示しています。加えて、 '</target>
        </trans-unit>
        <trans-unit id="39de3254e8b8a6c1bb1dcf09e215913214388acb" translate="yes" xml:space="preserve">
          <source>Some examples signal errors. This normally displays an error message in the echo area. We show the error message on a line starting with &amp;lsquo;</source>
          <target state="translated">いくつかの例はエラーを示します。これは通常、エコー領域にエラーメッセージを表示します。'で始まる行にエラーメッセージを表示します</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">いくつかの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="7506e6ee3da054209a0fb13ae83cf54785c54dbe" translate="yes" xml:space="preserve">
          <source>Some file comparison commands use this function so that they can automatically compare a file with its most recent backup.</source>
          <target state="translated">いくつかのファイル比較コマンドでは、この機能を使用して、ファイルを最新のバックアップと自動的に比較することができます。</target>
        </trans-unit>
        <trans-unit id="b035d3c3376401bee651f4578fff32d980a4d464" translate="yes" xml:space="preserve">
          <source>Some file name handlers may not support &lt;code&gt;make-process&lt;/code&gt;. In such cases, this function does nothing and returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">一部のファイル名ハンドラーは、 &lt;code&gt;make-process&lt;/code&gt; をサポートしていない場合があります。このような場合、この関数は何もせず、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1649467dc62b6b14d5f17795dc0cf713c0b7891f" translate="yes" xml:space="preserve">
          <source>Some file name handlers may not support &lt;code&gt;start-file-process&lt;/code&gt; (for example the function &lt;code&gt;ange-ftp-hook-function&lt;/code&gt;). In such cases, this function does nothing and returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">一部のファイル名ハンドラーは、 &lt;code&gt;start-file-process&lt;/code&gt; をサポートしていない場合があります（たとえば、関数 &lt;code&gt;ange-ftp-hook-function&lt;/code&gt; ）。このような場合、この関数は何もせず、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0049acf03482228e429585cbfb5f828a9d909ae6" translate="yes" xml:space="preserve">
          <source>Some file name handlers may not support all combinations and forms of the arguments &lt;var&gt;infile&lt;/var&gt;, &lt;var&gt;buffer&lt;/var&gt;, and &lt;var&gt;display&lt;/var&gt;. For example, some file name handlers might behave as if &lt;var&gt;display&lt;/var&gt; were &lt;code&gt;nil&lt;/code&gt;, regardless of the value actually passed. As another example, some file name handlers might not support separating standard output and error output by way of the &lt;var&gt;buffer&lt;/var&gt; argument.</source>
          <target state="translated">一部のファイル名ハンドラーは、引数 &lt;var&gt;infile&lt;/var&gt; 、 &lt;var&gt;buffer&lt;/var&gt; 、および &lt;var&gt;display&lt;/var&gt; のすべての組み合わせと形式をサポートしていない場合があります。たとえば、一部のファイル名ハンドラーは、実際に渡された値に関係なく、 &lt;var&gt;display&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; であるかのように動作する場合があります。別の例として、一部のファイル名ハンドラーは、 &lt;var&gt;buffer&lt;/var&gt; 引数による標準出力とエラー出力の分離をサポートしていない場合があります。</target>
        </trans-unit>
        <trans-unit id="f27719afa575a8c632d10a31bd1ac119c957091c" translate="yes" xml:space="preserve">
          <source>Some file names are relative to a current directory.</source>
          <target state="translated">いくつかのファイル名は、カレントディレクトリからの相対的なものです。</target>
        </trans-unit>
        <trans-unit id="30eba5cb75908d92707da17924674751cc91ccc2" translate="yes" xml:space="preserve">
          <source>Some functions (notably &lt;code&gt;delete-window&lt;/code&gt;, &lt;code&gt;delete-other-windows&lt;/code&gt; and &lt;code&gt;split-window&lt;/code&gt;), may behave specially when the window specified by their &lt;var&gt;window&lt;/var&gt; argument has a parameter whose name is equal to the function&amp;rsquo;s name. You can override such special behavior by binding the following variable to a non-&lt;code&gt;nil&lt;/code&gt; value:</source>
          <target state="translated">一部の関数（特に &lt;code&gt;delete-window&lt;/code&gt; 、 &lt;code&gt;delete-other-windows&lt;/code&gt; 、 &lt;code&gt;split-window&lt;/code&gt; ）は、 &lt;var&gt;window&lt;/var&gt; 引数で指定されたウィンドウに、関数の名前と同じ名前のパラメーターがある場合に特別に動作する場合があります。次の変数を &lt;code&gt;nil&lt;/code&gt; 以外の値にバインドすることで、このような特別な動作をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="821351b8bc37763a05e2e9f535a20b160c6496e5" translate="yes" xml:space="preserve">
          <source>Some functions are user-visible &lt;em&gt;commands&lt;/em&gt;, which can be called interactively (usually by a key sequence). It is possible to invoke such a command exactly as though it was called interactively, by using the &lt;code&gt;call-interactively&lt;/code&gt; function. See &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;.</source>
          <target state="translated">一部の関数はユーザーに表示される&lt;em&gt;コマンド&lt;/em&gt;であり、インタラクティブに（通常はキーシーケンスによって）呼び出すことができます。このようなコマンドは、 &lt;code&gt;call-interactively&lt;/code&gt; 関数を使用することにより、対話的に呼び出されたかのように正確に呼び出すことができます。&lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;インタラクティブコールを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b07860a7f84c3c2a12b686e1aeff2769f46c6d5f" translate="yes" xml:space="preserve">
          <source>Some image files can contain more than one image. We say that there are multiple &amp;ldquo;frames&amp;rdquo; in the image. At present, Emacs supports multiple frames for GIF, TIFF, and certain ImageMagick formats such as DJVM.</source>
          <target state="translated">一部の画像ファイルには、複数の画像を含めることができます。画像には複数の「フレーム」があると言います。現在、EmacsはGIF、TIFF、およびDJVMなどの特定のImageMagick形式で複数のフレームをサポートしています。</target>
        </trans-unit>
        <trans-unit id="3595e9e6a4e9569c512c5c06cd87e7df2c7fb69d" translate="yes" xml:space="preserve">
          <source>Some images contain more than one frame.</source>
          <target state="translated">一部の画像には複数のフレームが含まれています。</target>
        </trans-unit>
        <trans-unit id="e60b9658c0c2605f01019352ebf449957e56d29f" translate="yes" xml:space="preserve">
          <source>Some kinds of character alternatives are not the best style even though they have a well-defined meaning in Emacs. They include:</source>
          <target state="translated">いくつかの種類の代替文字は、Emacsでは明確に定義された意味を持っていますが、最良のスタイルではありません。これには以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="5f0cac76faeb26baac31aa2b5b127966d275ffc8" translate="yes" xml:space="preserve">
          <source>Some kinds of display specifications specify something to display instead of the text that has the property. These are called &lt;em&gt;replacing&lt;/em&gt; display specifications. Emacs does not allow the user to interactively move point into the middle of buffer text that is replaced in this way.</source>
          <target state="translated">一部の種類の表示仕様では、プロパティを持つテキストの代わりに表示するものを指定します。これらは&lt;em&gt;、&lt;/em&gt;ディスプレイ仕様の&lt;em&gt;置き換え&lt;/em&gt;と呼ばれます。Emacsでは、この方法で置き換えられたバッファテキストの途中にポイントをインタラクティブに移動することはできません。</target>
        </trans-unit>
        <trans-unit id="e6ab74872daeb04ccca64045f737003d5dbf1311" translate="yes" xml:space="preserve">
          <source>Some language environments modify the case conversions of</source>
          <target state="translated">の大文字小文字変換を変更する言語環境もあります。</target>
        </trans-unit>
        <trans-unit id="ac807ee8d2379ebd13a77281f72a32da4cef6814" translate="yes" xml:space="preserve">
          <source>Some major modes customize &lt;code&gt;revert-buffer&lt;/code&gt; by making buffer-local bindings for these variables:</source>
          <target state="translated">一部の主要なモードは、これらの変数のバッファーローカルバインディングを作成することにより、 &lt;code&gt;revert-buffer&lt;/code&gt; をカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="ea8020af64cf16be2cd54fa92c83c5cfe0dbcb9a" translate="yes" xml:space="preserve">
          <source>Some major modes need to support embedded regions of text whose syntax belongs to a different major mode. Examples include &lt;em&gt;literate programming&lt;/em&gt; source files that combine documentation and snippets of source code, Yacc/Bison programs that include snippets of Python or JS code, etc. To correctly indent the embedded chunks, the primary mode needs to delegate the indentation to another mode&amp;rsquo;s indentation engine (e.g., call &lt;code&gt;js-indent-line&lt;/code&gt; for JS code or &lt;code&gt;python-indent-line&lt;/code&gt; for Python), while providing it with some context to guide the indentation. Major modes, for their part, should avoid calling &lt;code&gt;widen&lt;/code&gt; in their indentation code and obey &lt;code&gt;prog-first-column&lt;/code&gt;.</source>
          <target state="translated">一部のメジャーモードは、構文が別のメジャーモードに属するテキストの埋め込み領域をサポートする必要があります。例としては、ドキュメントとソースコードのスニペットを組み合わせた&lt;em&gt;文芸的プログラミング&lt;/em&gt;ソースファイル、PythonまたはJSコードのスニペットを含むYacc / Bisonプログラムなどがあります。埋め込まれたチャンクを正しくインデントするには、プライマリモードでインデントを別のモードのインデントエンジンに委任する必要があります。 （たとえば、JSコードの場合は &lt;code&gt;js-indent-line&lt;/code&gt; 、 &lt;code&gt;python-indent-line&lt;/code&gt; 場合はpython-indent-lineを呼び出します）、インデントをガイドするためのコンテキストを提供します。メジャーモードは、その一部として、インデントコードで &lt;code&gt;widen&lt;/code&gt; を呼び出すことを避け、 &lt;code&gt;prog-first-column&lt;/code&gt; に従います。</target>
        </trans-unit>
        <trans-unit id="21c105d635e1342bb3eda11282eef07a58bcc18c" translate="yes" xml:space="preserve">
          <source>Some major modes offer three different levels of fontification. You can define multiple levels by using a list of symbols for &lt;var&gt;keywords&lt;/var&gt; in &lt;code&gt;font-lock-defaults&lt;/code&gt;. Each symbol specifies one level of fontification; it is up to the user to choose one of these levels, normally by setting &lt;code&gt;font-lock-maximum-decoration&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Font-Lock.html#Font-Lock&quot;&gt;Font Lock&lt;/a&gt; in</source>
          <target state="translated">一部の主要なモードでは、3つの異なるレベルのフォント化が提供されます。あなたはのためのシンボルのリストを使用して、複数のレベルを定義することができます &lt;var&gt;keywords&lt;/var&gt; で &lt;code&gt;font-lock-defaults&lt;/code&gt; 。各記号は、1つのレベルのフォント化を指定します。通常、 &lt;code&gt;font-lock-maximum-decoration&lt;/code&gt; を設定することにより、これらのレベルの1つを選択するのはユーザーの責任です（の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Font-Lock.html#Font-Lock&quot;&gt;フォントロック&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="808993400021c891fd4d2de8ebf442fd98c93191" translate="yes" xml:space="preserve">
          <source>Some major modes such as &lt;code&gt;list-buffers&lt;/code&gt; and &lt;code&gt;occur&lt;/code&gt; construct the buffer text programmatically. The easiest way for them to support Font Lock mode is to specify the faces of text when they insert the text in the buffer.</source>
          <target state="translated">以下のようないくつかのメジャーモード &lt;code&gt;list-buffers&lt;/code&gt; とは、 &lt;code&gt;occur&lt;/code&gt; プログラムでバッファのテキストを構築します。フォントロックモードをサポートする最も簡単な方法は、テキストをバッファに挿入するときにテキストの面を指定することです。</target>
        </trans-unit>
        <trans-unit id="fb3dfe3d9e5bb3462ebf386ff6482aa43419e8f7" translate="yes" xml:space="preserve">
          <source>Some major modes, such as SES, call functions that are stored in user files. (See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/ses/index.html#Top&quot;&gt;(ses)Top&lt;/a&gt;, for more information on SES.) User files sometimes have poor pedigrees&amp;mdash;you can get a spreadsheet from someone you&amp;rsquo;ve just met, or you can get one through email from someone you&amp;rsquo;ve never met. So it is risky to call a function whose source code is stored in a user file until you have determined that it is safe.</source>
          <target state="translated">SESなどの一部の主要なモードは、ユーザーファイルに保存されている関数を呼び出します。（SESの詳細については、&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/ses/index.html#Top&quot;&gt;（ses）Topを&lt;/a&gt;参照してください。）ユーザーファイルの血統が悪い場合があります。会ったばかりの人からスプレッドシートを入手したり、会ったことのない人からメールでスプレッドシートを入手したりできます。そのため、安全であると判断するまで、ソースコードがユーザーファイルに保存されている関数を呼び出すのは危険です。</target>
        </trans-unit>
        <trans-unit id="74b9ecabaa09225167b2400d7fc5cffd14468340" translate="yes" xml:space="preserve">
          <source>Some miscellaneous Edebug commands are described here.</source>
          <target state="translated">ここでは、いくつかの雑多な Edebug コマンドについて説明します。</target>
        </trans-unit>
        <trans-unit id="b90ef76321f3efa1c603505619393d87cc01a727" translate="yes" xml:space="preserve">
          <source>Some modes give this variable a non-&lt;code&gt;nil&lt;/code&gt; buffer-local value in particular buffers.</source>
          <target state="translated">一部のモードでは、特定のバッファーでこの変数に &lt;code&gt;nil&lt;/code&gt; バッファーローカル値が与えられます。</target>
        </trans-unit>
        <trans-unit id="5f656b80e7314e4ae45ace545975e0adabdf6eab" translate="yes" xml:space="preserve">
          <source>Some modes provide specialized support you can use in additional highlighting patterns. See the variables &lt;code&gt;c-font-lock-extra-types&lt;/code&gt;, &lt;code&gt;c++-font-lock-extra-types&lt;/code&gt;, and &lt;code&gt;java-font-lock-extra-types&lt;/code&gt;, for example.</source>
          <target state="translated">一部のモードは、追加の強調表示パターンで使用できる特殊なサポートを提供します。たとえば、変数 &lt;code&gt;c-font-lock-extra-types&lt;/code&gt; 、 &lt;code&gt;c++-font-lock-extra-types&lt;/code&gt; 、および &lt;code&gt;java-font-lock-extra-types&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="2ca6528ff75cf4ebd0e3a965a0f935cd940d69e6" translate="yes" xml:space="preserve">
          <source>Some objects should not be modified.</source>
          <target state="translated">一部のオブジェクトは変更してはいけません。</target>
        </trans-unit>
        <trans-unit id="af094d8cf5fd06bfc167a995bf7262080fb1ff00" translate="yes" xml:space="preserve">
          <source>Some of the Emacs printing functions add quoting characters to the output when necessary so that it can be read properly. The quoting characters used are &amp;lsquo;</source>
          <target state="translated">一部のEmacs印刷機能は、正しく読み取れるように、必要に応じて引用文字を出力に追加します。使用される引用文字は '</target>
        </trans-unit>
        <trans-unit id="d96c8d910eff4e09132672f51050a8b5ccd15bec" translate="yes" xml:space="preserve">
          <source>Some of the basic faces defined in Emacs are listed below. In addition to these, you might want to make use of the Font Lock faces for syntactic highlighting, if highlighting is not already handled by Font Lock mode, or if some Font Lock faces are not in use. See &lt;a href=&quot;faces-for-font-lock#Faces-for-Font-Lock&quot;&gt;Faces for Font Lock&lt;/a&gt;.</source>
          <target state="translated">Emacsで定義されている基本的な顔のいくつかを以下に示します。これらに加えて、強調表示がフォントロックモードでまだ処理されていない場合、または一部のフォントロック面が使用されていない場合は、構文の強調表示にフォントロック面を使用することをお勧めします。見る&lt;a href=&quot;faces-for-font-lock#Faces-for-Font-Lock&quot;&gt;フォントロックの面を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="72343b809ebda32362307ac23f7f2063f452bc65" translate="yes" xml:space="preserve">
          <source>Some of the debugger commands operate on the current frame. If a frame starts with a star, that means that exiting that frame will call the debugger again. This is useful for examining the return value of a function.</source>
          <target state="translated">デバッガコマンドの中には、現在のフレームで動作するものがあります。フレームが star で始まる場合、そのフレームを終了するとデバッガが再び呼び出されることを意味します。これは、関数の戻り値を調べるのに便利です。</target>
        </trans-unit>
        <trans-unit id="804a6cf29ca115648ee7315d6d4a79d4af87b177" translate="yes" xml:space="preserve">
          <source>Some of the display specifications allow inclusion of Lisp forms, which are evaluated at display time. This could be unsafe in certain situations, e.g., when the display specification was generated by some external program/agent. Wrapping a display specification in a list that begins with the special symbol &lt;code&gt;disable-eval&lt;/code&gt;, as in &lt;code&gt;('disable-eval&amp;nbsp;&lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt;, will disable evaluation of any Lisp in &lt;var&gt;spec&lt;/var&gt;, while still supporting all the other display property features.</source>
          <target state="translated">一部の表示仕様では、表示時に評価されるLispフォームを含めることができます。これは、表示仕様が外部プログラム/エージェントによって生成された場合など、特定の状況では安全でない可能性があります。 &lt;code&gt;('disable-eval&amp;nbsp;&lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;spec&lt;/var&gt; ）のように、特別な記号 &lt;code&gt;disable-eval&lt;/code&gt; で始まるリストで表示仕様をラップする、他のすべての表示プロパティ機能をサポートしながら、 &lt;var&gt;spec&lt;/var&gt; 内のLispの評価が無効になります。</target>
        </trans-unit>
        <trans-unit id="613159ce43c45040036ae19ffa365f192550eea3" translate="yes" xml:space="preserve">
          <source>Some of the fields of &lt;code&gt;struct buffer&lt;/code&gt; are:</source>
          <target state="translated">のフィールドのいくつか &lt;code&gt;struct buffer&lt;/code&gt; は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e062efacd595110c1477cba3ceb9adc5fbfd9eaf" translate="yes" xml:space="preserve">
          <source>Some of the standard Emacs prefix keys use keymaps that are also found in Lisp variables:</source>
          <target state="translated">Emacs の標準的なプレフィックスキーの中には、Lisp 変数にも含まれるキーマップを使用しているものがあります。</target>
        </trans-unit>
        <trans-unit id="c7acb8bab7c32f011dfdacb72639310abaa0f2b0" translate="yes" xml:space="preserve">
          <source>Some of these attributes are meaningful only on certain kinds of displays. If your display cannot handle a certain attribute, the attribute is ignored.</source>
          <target state="translated">これらの属性の中には、特定の種類のディスプレイでのみ意味を持つものがあります。ディスプレイが特定の属性を扱えない場合、その属性は無視されます。</target>
        </trans-unit>
        <trans-unit id="589a873de585273e7a1c61ce328cb691679250e8" translate="yes" xml:space="preserve">
          <source>Some operating systems (those without &lt;code&gt;SIGTSTP&lt;/code&gt;, or MS-DOS) do not support suspension of jobs; on these systems, suspension actually creates a new shell temporarily as a subprocess of Emacs. Then you would exit the shell to return to Emacs.</source>
          <target state="translated">一部のオペレーティングシステム（ &lt;code&gt;SIGTSTP&lt;/code&gt; またはMS-DOSがない）は、ジョブの一時停止をサポートしていません。これらのシステムでは、サスペンションは実際にはEmacsのサブプロセスとして一時的に新しいシェルを作成します。次に、シェルを終了してEmacsに戻ります。</target>
        </trans-unit>
        <trans-unit id="4419ffb69d644ea6d729379e6a38f1070c7f218b" translate="yes" xml:space="preserve">
          <source>Some operating systems have limited space for buffered input in a pty. On these systems, Emacs sends an</source>
          <target state="translated">オペレーティングシステムの中には、ptyでバッファリングされた入力のためのスペースが限られているものがあります。このようなシステムでは、Emacs は</target>
        </trans-unit>
        <trans-unit id="e00f1e2abd8e2565248c544b6840b76cfd25d361" translate="yes" xml:space="preserve">
          <source>Some operations will not trigger a call of window change functions. These include showing another buffer in a minibuffer window or any change of a tooltip window.</source>
          <target state="translated">いくつかの操作は、ウィンドウ変更関数の呼び出しをトリガしません。これには、ミニバッファウィンドウに別のバッファを表示したり、ツールチップウィンドウを変更したりすることが含まれます。</target>
        </trans-unit>
        <trans-unit id="9ef5fe6774783caa8bb43ef767552f372c9af662" translate="yes" xml:space="preserve">
          <source>Some parameters are only meaningful for frames on certain kinds of display (see &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;). If &lt;var&gt;alist&lt;/var&gt; includes parameters that are not meaningful for the &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s display, this function will change its value in the frame&amp;rsquo;s parameter list, but will otherwise ignore it.</source>
          <target state="translated">一部のパラメーターは、特定の種類のディスプレイ上のフレームに対してのみ意味があります（&lt;a href=&quot;frames#Frames&quot;&gt;フレームを&lt;/a&gt;参照）。 &lt;var&gt;alist&lt;/var&gt; に &lt;var&gt;frame&lt;/var&gt; にとって意味のないパラメータが含まれている場合の表示に、この関数はフレームのパラメータリストの値を変更しますが、それ以外の場合は無視します。</target>
        </trans-unit>
        <trans-unit id="eb59c1c0e5fe25963e088513dfc30b8aa03a29f0" translate="yes" xml:space="preserve">
          <source>Some parts of Emacs require named faces (e.g., the functions documented in &lt;a href=&quot;attribute-functions#Attribute-Functions&quot;&gt;Attribute Functions&lt;/a&gt;). Unless otherwise stated, we will use the term &lt;em&gt;face&lt;/em&gt; to refer only to named faces.</source>
          <target state="translated">Emacsの一部には名前付きの面が必要です（たとえば、&lt;a href=&quot;attribute-functions#Attribute-Functions&quot;&gt;属性&lt;/a&gt;関数に記載されている関数）。特に明記されていない限り、この用語を使用します&lt;em&gt;&lt;/em&gt;名前付きの顔のみを指すために&lt;em&gt;顔&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9d9447f3aa8d4923b3219f3f78e83381064bcbe1" translate="yes" xml:space="preserve">
          <source>Some parts of Emacs, including some Dired commands, assume that backup file names end with &amp;lsquo;</source>
          <target state="translated">いくつかのDiredコマンドを含むEmacsのいくつかの部分は、バックアップファイル名が 'で終わると想定しています</target>
        </trans-unit>
        <trans-unit id="7e23447863e02fa432da55af33b11fc93a34f030" translate="yes" xml:space="preserve">
          <source>Some people think this use of the word &amp;ldquo;kill&amp;rdquo; is unfortunate, since it refers to operations that specifically &lt;em&gt;do not&lt;/em&gt; destroy the entities killed. This is in sharp contrast to ordinary life, in which death is permanent and killed entities do not come back to life. Therefore, other metaphors have been proposed. For example, the term &amp;ldquo;cut ring&amp;rdquo; makes sense to people who, in pre-computer days, used scissors and paste to cut up and rearrange manuscripts. However, it would be difficult to change the terminology now.</source>
          <target state="translated">「殺す」という言葉のこの使用は、特に&lt;em&gt;そうではない&lt;/em&gt;操作を指すため、不幸だと考える人&lt;em&gt;もいます。&lt;/em&gt;殺されたエンティティ破壊。これは、死が永続的であり、殺された実体が生き返らない通常の生活とはまったく対照的です。したがって、他の比喩が提案されています。たとえば、「カットリング」という用語は、コンピュータの前の時代に、はさみとペーストを使用して原稿を切り取り、再配置した人々にとって意味があります。しかし、今は用語を変えるのは難しいでしょう。</target>
        </trans-unit>
        <trans-unit id="900a0a1942564ec5fef2aa11d9bba5ae0ddbb4c8" translate="yes" xml:space="preserve">
          <source>Some primitives have multiple definitions, one per platform (e.g., &lt;code&gt;x-create-frame&lt;/code&gt;). In such cases, rather than writing the same documentation string in each definition, only one definition has the actual documentation. The others have placeholders beginning with &amp;lsquo;</source>
          <target state="translated">一部のプリミティブには、プラットフォームごとに1つずつ、複数の定義があります（ &lt;code&gt;x-create-frame&lt;/code&gt; など)）。このような場合、各定義に同じドキュメント文字列を書き込むのではなく、1つの定義だけが実際のドキュメントを持ちます。その他には、 'で始まるプレースホルダーがあります</target>
        </trans-unit>
        <trans-unit id="19ee3e594145c1e30e422f57b1e29f706042aa9d" translate="yes" xml:space="preserve">
          <source>Some programs need to write temporary files. Here is the usual way to construct a name for such a file:</source>
          <target state="translated">プログラムの中には、一時ファイルを書く必要があるものがあります。そのようなファイルの名前を構築するための通常の方法を以下に示します。</target>
        </trans-unit>
        <trans-unit id="34514367601827bdc54d8478877ceddd72dd975a" translate="yes" xml:space="preserve">
          <source>Some suitable predicates include &lt;code&gt;symbolp&lt;/code&gt;, &lt;code&gt;integerp&lt;/code&gt;, &lt;code&gt;stringp&lt;/code&gt;, &lt;code&gt;vectorp&lt;/code&gt;, and &lt;code&gt;atom&lt;/code&gt;.</source>
          <target state="translated">いくつかの適切な述語には、 &lt;code&gt;symbolp&lt;/code&gt; 、 &lt;code&gt;integerp&lt;/code&gt; 、 &lt;code&gt;stringp&lt;/code&gt; 、 &lt;code&gt;vectorp&lt;/code&gt; 、および &lt;code&gt;atom&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="2393e343d286e6ad787337a5712eb0f57c1d1eed" translate="yes" xml:space="preserve">
          <source>Some systems and display toolkits don&amp;rsquo;t really handle all of these separator types. If you use a type that isn&amp;rsquo;t supported, the menu displays a similar kind of separator that is supported.</source>
          <target state="translated">一部のシステムおよびディスプレイツールキットは、これらのセパレータタイプのすべてを実際に処理するわけではありません。サポートされていないタイプを使用する場合、メニューにはサポートされている同様の種類のセパレータが表示されます。</target>
        </trans-unit>
        <trans-unit id="f7e2559178f26c3c030e5e3e8239676524fe9a94" translate="yes" xml:space="preserve">
          <source>Some terminals support a different set of colors for foreground and background. If &lt;var&gt;background-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means you are asking whether &lt;var&gt;color&lt;/var&gt; can be used as a background; otherwise you are asking whether it can be used as a foreground.</source>
          <target state="translated">一部の端末は、前景と背景で異なる色のセットをサポートしています。 &lt;var&gt;background-p&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、 &lt;var&gt;color&lt;/var&gt; を背景として使用できるかどうかを尋ねていることを意味します。それ以外の場合は、フォアグラウンドとして使用できるかどうかを尋ねています。</target>
        </trans-unit>
        <trans-unit id="8691d2e5fc3b12ad9435f079b07816ec20b74321" translate="yes" xml:space="preserve">
          <source>Some type symbols do not use any arguments; those are called &lt;em&gt;simple types&lt;/em&gt;. For a simple type, if you do not use any keyword-value pairs, you can omit the parentheses around the type symbol. For example just &lt;code&gt;string&lt;/code&gt; as a customization type is equivalent to &lt;code&gt;(string)&lt;/code&gt;.</source>
          <target state="translated">一部のタイプシンボルは引数を使用しません。それらは&lt;em&gt;単純型&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。単純な型の場合、キーワードと値のペアを使用しない場合は、型記号の前後の括弧を省略できます。たとえば、カスタマイズタイプとしての &lt;code&gt;string&lt;/code&gt; だけが &lt;code&gt;(string)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="40868cb43ade466153908eeb08f731725514d1c2" translate="yes" xml:space="preserve">
          <source>Some variables are considered &lt;em&gt;risky&lt;/em&gt;. If a variable is risky, it is never entered automatically into &lt;code&gt;safe-local-variable-values&lt;/code&gt;; Emacs always queries before setting a risky variable, unless the user explicitly allows a value by customizing &lt;code&gt;safe-local-variable-values&lt;/code&gt; directly.</source>
          <target state="translated">一部の変数は&lt;em&gt;危険&lt;/em&gt;と見なされます。変数にリスクがある場合、 &lt;code&gt;safe-local-variable-values&lt;/code&gt; に自動的に入力されることはありません。ユーザーが &lt;code&gt;safe-local-variable-values&lt;/code&gt; を直接カスタマイズして値を明示的に許可しない限り、Emacsは常にリスクのある変数を設定する前にクエリを実行します。</target>
        </trans-unit>
        <trans-unit id="97ee2571778484dd55157b4ca16621ef68f6cf76" translate="yes" xml:space="preserve">
          <source>Some window managers ignore program-specified positions. If you want to be sure the position you specify is not ignored, specify a non-&lt;code&gt;nil&lt;/code&gt; value for the &lt;code&gt;user-position&lt;/code&gt; parameter as in the following example:</source>
          <target state="translated">一部のウィンドウマネージャーは、プログラムで指定された位置を無視します。指定した位置が無視されないようにする場合は、次の例のように、 &lt;code&gt;user-position&lt;/code&gt; パラメーターに &lt;code&gt;nil&lt;/code&gt; 以外の値を指定します。</target>
        </trans-unit>
        <trans-unit id="c963e456b560d984c389ee390934cb303b37082c" translate="yes" xml:space="preserve">
          <source>Some window managers may refuse to restack windows.</source>
          <target state="translated">ウィンドウマネージャによっては、ウィンドウの再起動を拒否する場合があります。</target>
        </trans-unit>
        <trans-unit id="c91bbd20cff61b2c2218cf0bb5a8812d7957dbed" translate="yes" xml:space="preserve">
          <source>Some window managers provide a command to delete a window. These work by sending a special message to the program that operates the window. When Emacs gets one of these commands, it generates a &lt;code&gt;delete-frame&lt;/code&gt; event, whose normal definition is a command that calls the function &lt;code&gt;delete-frame&lt;/code&gt;. See &lt;a href=&quot;misc-events#Misc-Events&quot;&gt;Misc Events&lt;/a&gt;.</source>
          <target state="translated">一部のウィンドウマネージャーは、ウィンドウを削除するコマンドを提供します。これらは、ウィンドウを操作するプログラムに特別なメッセージを送信することによって機能します。Emacsがこれらのコマンドの1つを取得すると、 &lt;code&gt;delete-frame&lt;/code&gt; イベントが生成されます。通常の定義は、関数 &lt;code&gt;delete-frame&lt;/code&gt; を呼び出すコマンドです。&lt;a href=&quot;misc-events#Misc-Events&quot;&gt;その他のイベントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="20e0969715ca6115570f93616685554412d37d54" translate="yes" xml:space="preserve">
          <source>Some window systems and window managers direct keyboard input to the window object that the mouse is in; others require explicit clicks or commands to &lt;em&gt;shift the focus&lt;/em&gt; to various window objects. Either way, Emacs automatically keeps track of which frames have focus. To explicitly switch to a different frame from a Lisp function, call &lt;code&gt;select-frame-set-input-focus&lt;/code&gt;.</source>
          <target state="translated">一部のウィンドウシステムおよびウィンドウマネージャーは、キーボード入力をマウスが置かれているウィンドウオブジェクトに向けます。その他の場合&lt;em&gt;、フォーカス&lt;/em&gt;をさまざまなウィンドウオブジェクトに&lt;em&gt;移動するには、&lt;/em&gt;明示的なクリックまたはコマンドが必要です。いずれにせよ、Emacsはどのフレームにフォーカスがあるかを自動的に追跡します。Lisp関数から別のフレームに明示的に切り替えるには、 &lt;code&gt;select-frame-set-input-focus&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b5e14bbae17680b3518ad4b0830626daeab5c5d2" translate="yes" xml:space="preserve">
          <source>Some window systems do not support the &lt;code&gt;alpha&lt;/code&gt; parameter for child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;).</source>
          <target state="translated">一部のウィンドウシステムではサポートしていない &lt;code&gt;alpha&lt;/code&gt; 子フレームのパラメータを（参照&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子フレームを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1fc5066c82e4ee002625956eaa06daa2f4de2912" translate="yes" xml:space="preserve">
          <source>Somehow identify the multiline construct right when it gets inserted into the buffer (or at any point after that but before font-lock tries to highlight it), and mark it with a &lt;code&gt;font-lock-multiline&lt;/code&gt; which will instruct font-lock not to start or end the scan in the middle of the construct.</source>
          <target state="translated">どういうわけか、マルチラインコンストラクトがバッファに挿入されたとき（またはその後の任意の時点で、font-lockがハイライトしようとする前）に識別し、 &lt;code&gt;font-lock-multiline&lt;/code&gt; を開始しないように指示するfont-lock-multilineでマークします。または、構成の途中でスキャンを終了します。</target>
        </trans-unit>
        <trans-unit id="f94b0680efbd4d644b170d8eb0a009598e28af95" translate="yes" xml:space="preserve">
          <source>Sometimes a command should display additional visual feedback (such as an informative message in the echo area) for interactive calls only. There are three ways to do this. The recommended way to test whether the function was called using &lt;code&gt;call-interactively&lt;/code&gt; is to give it an optional argument &lt;code&gt;print-message&lt;/code&gt; and use the &lt;code&gt;interactive&lt;/code&gt; spec to make it non-&lt;code&gt;nil&lt;/code&gt; in interactive calls. Here&amp;rsquo;s an example:</source>
          <target state="translated">コマンドは、対話型コールに対してのみ、追加の視覚的フィードバック（エコー領域の情報メッセージなど）を表示する必要がある場合があります。これを行うには3つの方法があります。関数が &lt;code&gt;call-interactively&lt;/code&gt; を使用して呼び出されたかどうかをテストするための推奨される方法は、オプションの引数 &lt;code&gt;print-message&lt;/code&gt; を指定し、 &lt;code&gt;interactive&lt;/code&gt; 仕様を使用してインタラクティブ呼び出しで非 &lt;code&gt;nil&lt;/code&gt; にすることです。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="f7a7ac2d96f2c0977f852083e81808bec21fb8fe" translate="yes" xml:space="preserve">
          <source>Sometimes a file will optionally use functions from an external package. If you prefix the filename in the &lt;code&gt;declare-function&lt;/code&gt; statement with &amp;lsquo;</source>
          <target state="translated">ファイルは、オプションで外部パッケージの関数を使用する場合があります。 &lt;code&gt;declare-function&lt;/code&gt; ステートメントのファイル名の前に「」を付けると</target>
        </trans-unit>
        <trans-unit id="c6e677132335d346ad63791f6594e2ae3f1843cc" translate="yes" xml:space="preserve">
          <source>Sometimes a problem with a function is due to a wrong setting of a variable. Setting up the debugger to trigger whenever the variable is changed is a quick way to find the origin of the setting.</source>
          <target state="translated">関数の問題は、変数の設定が間違っていることが原因で発生することがあります。変数が変更されたときにトリガーするようにデバッガを設定することは、設定の元を見つけるための手っ取り早い方法です。</target>
        </trans-unit>
        <trans-unit id="ecf2e871e2030f52f96078e134da44050a3ba4db" translate="yes" xml:space="preserve">
          <source>Sometimes broader classifications of events are useful. For example, you might want to ask whether an event involved the</source>
          <target state="translated">イベントのより広い分類が有用な場合もあります。例えば、あるイベントが</target>
        </trans-unit>
        <trans-unit id="33b8002200f41bc570e3b9181bd46b85f3ef6bad" translate="yes" xml:space="preserve">
          <source>Sometimes file names or their parts need to be compared as strings, in which case it&amp;rsquo;s important to know whether the underlying filesystem is case-insensitive. This function returns &lt;code&gt;t&lt;/code&gt; if file &lt;var&gt;filename&lt;/var&gt; is on a case-insensitive filesystem. It always returns &lt;code&gt;t&lt;/code&gt; on MS-DOS and MS-Windows. On Cygwin and macOS, filesystems may or may not be case-insensitive, and the function tries to determine case-sensitivity by a runtime test. If the test is inconclusive, the function returns &lt;code&gt;t&lt;/code&gt; on Cygwin and &lt;code&gt;nil&lt;/code&gt; on macOS.</source>
          <target state="translated">ファイル名またはその一部を文字列として比較する必要がある場合があります。その場合、基になるファイルシステムで大文字と小文字が区別されないかどうかを知ることが重要です。ファイル &lt;var&gt;filename&lt;/var&gt; が大文字と小文字を区別しないファイルシステム上にある場合、この関数は &lt;code&gt;t&lt;/code&gt; を返します。MS-DOSおよびMS-Windowsでは常に &lt;code&gt;t&lt;/code&gt; を返します。CygwinおよびmacOSでは、ファイルシステムで大文字と小文字が区別される場合とされない場合があり、関数はランタイムテストで大文字と小文字を区別しようとします。テストが決定的でない場合、関数はCygwinでは &lt;code&gt;t&lt;/code&gt; を返し、macOSでは &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d0bc29989a39b653c9b87df0491180ad60ba1d6c" translate="yes" xml:space="preserve">
          <source>Sometimes it is better to design an alist to store the associated value in the &lt;small&gt;CAR&lt;/small&gt; of the &lt;small&gt;CDR&lt;/small&gt; of the element. Here is an example of such an alist:</source>
          <target state="translated">要素の&lt;small&gt;CDR&lt;/small&gt;の&lt;small&gt;CAR&lt;/small&gt;に関連する値を格納するリストを設計する方がよい場合があります。このようなリストの例を次に示します。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="43d163a1c88b51052145c3ed47ea72fa5f5a68e5" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary to re-throw a signal caught by &lt;code&gt;condition-case&lt;/code&gt;, for some outer-level handler to catch. Here&amp;rsquo;s how to do that:</source>
          <target state="translated">一部の外部レベルのハンドラーがキャッチするために、 &lt;code&gt;condition-case&lt;/code&gt; によってキャッチされたシグナルを再スローする必要がある場合があります。これを行う方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="090f5f4226faa15d72aadee397ed50425f4cdc4b" translate="yes" xml:space="preserve">
          <source>Sometimes it is not possible or convenient to create an alist or an obarray containing all the intended possible completions ahead of time. In such a case, you can supply your own function to compute the completion of a given string. This is called &lt;em&gt;programmed completion&lt;/em&gt;. Emacs uses programmed completion when completing file names (see &lt;a href=&quot;file-name-completion#File-Name-Completion&quot;&gt;File Name Completion&lt;/a&gt;), among many other cases.</source>
          <target state="translated">意図されたすべての可能な補完を事前に含むリストまたはオブアレイを作成することが不可能または便利でない場合があります。このような場合、特定の文字列の補完を計算する独自の関数を提供できます。これは&lt;em&gt;プログラムされた完了&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。Emacsは、他の多くの場合の中でも、ファイル名を完了するときにプログラムされた完了を使用します（&lt;a href=&quot;file-name-completion#File-Name-Completion&quot;&gt;ファイル名の完了を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c489b46f1562f788c42049de988a32c2945c80c4" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to &lt;em&gt;track&lt;/em&gt; the mouse, which means to display something to indicate where the mouse is and move the indicator as the mouse moves. For efficient mouse tracking, you need a way to wait until the mouse actually moves.</source>
          <target state="translated">マウスを&lt;em&gt;追跡&lt;/em&gt;すると便利な場合があります。これは、マウスの位置を示す何かを表示し、マウスの移動に合わせてインジケーターを移動することを意味します。効率的なマウストラッキングを行うには、マウスが実際に動くまで待つ方法が必要です。</target>
        </trans-unit>
        <trans-unit id="56961584f755821a15808d8cf7fd02e2cd73bde6" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to allow users and Lisp programs alike to control how certain text is generated via custom format control strings. For example, a format string could control how to display someone&amp;rsquo;s forename, surname, and email address. Using the function &lt;code&gt;format&lt;/code&gt; described in the previous section, the format string could be something like &lt;code&gt;&quot;%s&amp;nbsp;%s&amp;nbsp;&amp;lt;%s&amp;gt;&quot;&lt;/code&gt;. This approach quickly becomes impractical, however, as it can be unclear which specification character corresponds to which piece of information.</source>
          <target state="translated">ユーザーとLispプログラムが同様に、カスタムフォーマットの制御文字列を介して特定のテキストを生成する方法を制御できるようにすると便利な場合があります。たとえば、フォーマット文字列は、誰かの姓、名、および電子メールアドレスを表示する方法を制御できます。前のセクションで説明した関数 &lt;code&gt;format&lt;/code&gt; を使用すると、フォーマット文字列は &lt;code&gt;&quot;%s&amp;nbsp;%s&amp;nbsp;&amp;lt;%s&amp;gt;&quot;&lt;/code&gt; ます。ただし、このアプローチは、どの仕様文字がどの情報に対応するかが不明確になる可能性があるため、すぐに実用的ではなくなります。</target>
        </trans-unit>
        <trans-unit id="65de83bbbd14f273741c5e9ffe07ef9e56ab287f" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to compare numbers with &lt;code&gt;eql&lt;/code&gt; or &lt;code&gt;equal&lt;/code&gt;, which treat two numbers as equal if they have the same data type (both integers, or both floating point) and the same value. By contrast, &lt;code&gt;=&lt;/code&gt; can treat an integer and a floating-point number as equal. See &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;.</source>
          <target state="translated">数値を &lt;code&gt;eql&lt;/code&gt; または &lt;code&gt;equal&lt;/code&gt; と比較すると、2つの数値が同じデータ型（両方の整数、または両方の浮動小数点）で同じ値の場合に等しいものとして扱われると便利な場合があります。対照的に、 &lt;code&gt;=&lt;/code&gt; は整数と浮動小数点数を等しいものとして扱うことができます。&lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;等価述語を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="29e9a5b542fa3fd92687c42189238058e1639a53" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to delay the evaluation of an expression, for example if you want to avoid performing a time-consuming calculation if it turns out that the result is not needed in the future of the program. The</source>
          <target state="translated">例えば、プログラムの将来的に結果が必要ないことが判明した場合に、時間のかかる計算を回避したい場合など、式の評価を遅らせることが有用な場合があります。このような場合には</target>
        </trans-unit>
        <trans-unit id="1cac5fdf3be2510cf10370dc28ef28ceb1df16fd" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to examine an existing buffer or string as multibyte when it was unibyte, or vice versa.</source>
          <target state="translated">既存のバッファや文字列がユニバイトだったときにマルチバイトとして調べたり、その逆の場合に便利なことがあります。</target>
        </trans-unit>
        <trans-unit id="303aa7a632a844138ffee65d496e59a566bc6c4b" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to find out which character set a particular character belongs to. One use for this is in determining which coding systems (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;) are capable of representing all of the text in question; another is to determine the font(s) for displaying that text.</source>
          <target state="translated">特定の文字がどの文字セットに属しているかを調べると便利な場合があります。このための1つの用途は、（参照符号れるシステム決定である&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;コーディングシステム&lt;/a&gt;）問題のすべてのテキストを表現することが可能です。もう1つは、そのテキストを表示するためのフォントを決定することです。</target>
        </trans-unit>
        <trans-unit id="16929ca97a6b572178fdcf80705aab6bc702f649" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to fix some of the function&amp;rsquo;s arguments at certain values, and leave the rest of arguments for when the function is actually called. The act of fixing some of the function&amp;rsquo;s arguments is called &lt;em&gt;partial application&lt;/em&gt; of the function&lt;a href=&quot;#FOOT11&quot; name=&quot;DOCF11&quot;&gt;&lt;sup&gt;11&lt;/sup&gt;&lt;/a&gt;. The result is a new function that accepts the rest of arguments and calls the original function with all the arguments combined.</source>
          <target state="translated">関数の引数の一部を特定の値に固定し、残りの引数を関数が実際に呼び出されるときのために残しておくと便利な場合があります。関数の引数の一部を修正する行為は、関数&lt;a href=&quot;#FOOT11&quot; name=&quot;DOCF11&quot;&gt;&lt;sup&gt;11の&lt;/sup&gt;&lt;/a&gt;&lt;em&gt;部分適用&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。その結果、残りの引数を受け入れ、すべての引数を組み合わせて元の関数を呼び出す新しい関数が作成されます。&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7327869e47811d21d60b976fd236f5a2c04e7deb" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to make menu items that use the same command but with different enable conditions. The best way to do this in Emacs now is with extended menu items; before that feature existed, it could be done by defining alias commands and using them in menu items. Here&amp;rsquo;s an example that makes two aliases for &lt;code&gt;read-only-mode&lt;/code&gt; and gives them different enable conditions:</source>
          <target state="translated">同じコマンドを使用するが、有効化条件が異なるメニュー項目を作成すると便利な場合があります。Emacsでこれを行う最良の方法は、拡張メニュー項目を使用することです。その機能が存在する前は、エイリアスコマンドを定義し、メニュー項目でそれらを使用することで実行できました。 &lt;code&gt;read-only-mode&lt;/code&gt; 用に2つのエイリアスを作成し、それらに異なる有効化条件を与える例を次に示します。</target>
        </trans-unit>
        <trans-unit id="7b2870280d8c494633696f615eef42912a87b4ae" translate="yes" xml:space="preserve">
          <source>Sometimes key sequences are represented as unibyte strings. When a unibyte string is a key sequence, string elements in the range 128 to 255 represent meta characters (which are large integers) rather than character codes in the range 128 to 255. Strings cannot hold characters that have the hyper, super or alt modifiers; they can hold</source>
          <target state="translated">キーシーケンスがユニバイト文字列として表現されることがあります。ユニバイト文字列がキーシーケンスである場合、128 から 255 の範囲の文字列要素は、128 から 255 の範囲の文字コードではなく、メタ文字 (大きな整数)を表します。文字列は、hyper、super、alt の修飾子を持つ文字を保持することはできません。</target>
        </trans-unit>
        <trans-unit id="168d5659574624113fee9e26d692c1e074302898" translate="yes" xml:space="preserve">
          <source>Sometimes several windows collectively and cooperatively display a buffer, for example, under the management of Follow Mode (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Follow-Mode.html#Follow-Mode&quot;&gt;(emacs)Follow Mode&lt;/a&gt;), where the windows together display a bigger portion of the buffer than one window could alone. It is often useful to consider such a &lt;em&gt;window group&lt;/em&gt; as a single entity. Several functions such as &lt;code&gt;window-group-start&lt;/code&gt; (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;) allow you to do this by supplying, as an argument, one of the windows as a stand in for the whole group.</source>
          <target state="translated">たとえば、フォローモード（&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Follow-Mode.html#Follow-Mode&quot;&gt;（emacs）フォローモードを&lt;/a&gt;参照）の管理下で、複数のウィンドウが集合的かつ協調的にバッファを表示することがあります。この場合、ウィンドウは1つのウィンドウだけよりもバッファの大部分を表示します。このような&lt;em&gt;ウィンドウグループ&lt;/em&gt;を単一のエンティティと見なすと便利なことがよくあり&lt;em&gt;ます&lt;/em&gt;。 &lt;code&gt;window-group-start&lt;/code&gt; （&lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;ウィンドウの開始と終了を&lt;/a&gt;参照）などのいくつかの関数を使用すると、グループ全体の代用としてウィンドウの1つを引数として指定することで、これを実行できます。</target>
        </trans-unit>
        <trans-unit id="2706feee5cfa5f6473ab14809e7e889158920d0e" translate="yes" xml:space="preserve">
          <source>Sometimes the system is unable to accept input for that process, because the input buffer is full. When this happens, the send functions wait a short while, accepting output from subprocesses, and then try again. This gives the subprocess a chance to read more of its pending input and make space in the buffer. It also allows filters (including the one currently running), sentinels and timers to run&amp;mdash;so take account of that in writing your code.</source>
          <target state="translated">入力バッファがいっぱいであるために、システムがそのプロセスの入力を受け入れることができない場合があります。これが発生すると、送信関数はサブプロセスからの出力を受け入れてしばらく待機してから、再試行します。これにより、サブプロセスは保留中の入力をさらに読み取り、バッファーにスペースを作成する機会が与えられます。また、フィルター（現在実行中のものを含む）、センチネル、タイマーを実行できるため、コードを作成する際にはそれらを考慮に入れてください。</target>
        </trans-unit>
        <trans-unit id="bfeee3112a01b02f9c80e9149d7fb594b20030a9" translate="yes" xml:space="preserve">
          <source>Sometimes there&amp;rsquo;s a need for modifying buffer in a way that doesn&amp;rsquo;t really change its text, like if only its text properties are changed. If your program needs to modify a buffer without triggering any hooks and features that react to buffer modifications, use the &lt;code&gt;with-silent-modifications&lt;/code&gt; macro.</source>
          <target state="translated">テキストのプロパティのみが変更される場合など、実際にはテキストが変更されない方法でバッファを変更する必要がある場合があります。プログラムが、バッファーの変更に反応するフックや機能をトリガーせずにバッファーを変更する必要がある場合は、 &lt;code&gt;with-silent-modifications&lt;/code&gt; マクロを使用します。</target>
        </trans-unit>
        <trans-unit id="e0013d100ab061bbb304f172931b69773b25428d" translate="yes" xml:space="preserve">
          <source>Sometimes there&amp;rsquo;s a need to move point in strict visual order, either to the left or to the right of its current screen position. Emacs provides a primitive to do that.</source>
          <target state="translated">現在の画面位置の左側または右側に、厳密な視覚的順序でポイントを移動する必要がある場合があります。Emacsはそれを行うためのプリミティブを提供します。</target>
        </trans-unit>
        <trans-unit id="6cc2dd4abd2d50197d5ba31135739fc7e5941171" translate="yes" xml:space="preserve">
          <source>Sometimes they describe possible elements in an alist:</source>
          <target state="translated">時には、リストの中の可能性のある要素を記述することもあります。</target>
        </trans-unit>
        <trans-unit id="746dc00c93101b07a5279b09e9320454a625869b" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to display a grave accent or apostrophe without translation, regardless of text quoting style. In a documentation string, you can do this with escapes. For example, in the documentation string</source>
          <target state="translated">テキストの引用スタイルに関係なく、時には重厚なアクセントやアポストロフィを翻訳せずに表示しなければならないことがあります。ドキュメント文字列では、エスケープを使ってこれを行うことができます。例えば、ドキュメントの文字列</target>
        </trans-unit>
        <trans-unit id="84555fbe17f99191e24b59b9af77a4193826a18a" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish the byte-compiler warnings to be reported using &lt;code&gt;error&lt;/code&gt;. If so, set &lt;code&gt;byte-compile-error-on-warn&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">場合によっては、 &lt;code&gt;error&lt;/code&gt; を使用してバイトコンパイラの警告を報告したいことがあります。その場合は、 &lt;code&gt;byte-compile-error-on-warn&lt;/code&gt; を &lt;code&gt;nil&lt;/code&gt; 以外の値に設定します。</target>
        </trans-unit>
        <trans-unit id="19bbe197a4e56922ab426df225c901d61f182c7e" translate="yes" xml:space="preserve">
          <source>Sometimes you want the random number sequence to be repeatable. For example, when debugging a program whose behavior depends on the random number sequence, it is helpful to get the same behavior in each program run. To make the sequence repeat, execute &lt;code&gt;(random &quot;&quot;)&lt;/code&gt;. This sets the seed to a constant value for your particular Emacs executable (though it may differ for other Emacs builds). You can use other strings to choose various seed values.</source>
          <target state="translated">乱数シーケンスを繰り返し可能にしたい場合があります。たとえば、動作が乱数シーケンスに依存するプログラムをデバッグする場合、各プログラムの実行で同じ動作を取得すると便利です。シーケンスを繰り返すには、 &lt;code&gt;(random &quot;&quot;)&lt;/code&gt; 実行します。これにより、特定のEmacs実行可能ファイルのシードが一定の値に設定されます（ただし、他のEmacsビルドでは異なる場合があります）。他の文字列を使用して、さまざまなシード値を選択できます。</target>
        </trans-unit>
        <trans-unit id="39765ab31b90f8b118214aacc0af4cfffae23239" translate="yes" xml:space="preserve">
          <source>Sometimes you want to make a keymap that inherits from more than one map. You can use the function &lt;code&gt;make-composed-keymap&lt;/code&gt; for this.</source>
          <target state="translated">複数のマップから継承するキーマップを作成したい場合があります。これには、関数 &lt;code&gt;make-composed-keymap&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="e9a7085f5c46445dd39399b51c963c2b34b313be" translate="yes" xml:space="preserve">
          <source>Sometimes, Emacs does not keep documentation strings in memory. There are two such circumstances. Firstly, to save memory, the documentation for preloaded functions and variables (including primitives) is kept in a file named</source>
          <target state="translated">Emacsがドキュメントの文字列をメモリに保持していないことがあります。そのような状況は2つあります。まず、メモリを節約するために、プリロードされた関数や変数(プリミティブを含む)のドキュメントは</target>
        </trans-unit>
        <trans-unit id="aaa83f7107b2f4d3c097e2d8cecc9059e67620f7" translate="yes" xml:space="preserve">
          <source>Sometimes, a Lisp program may need to preserve the exact visual appearance of the copied text at destination, and of the text that surrounds the copy. Lisp programs can use the following function to achieve that effect.</source>
          <target state="translated">Lisp プログラムでは、コピー先でコピーされたテキストとその周囲のテキストの外観を正確に保持する必要がある場合があります。Lispプログラムでは、以下の関数を使ってその効果を得ることができます。</target>
        </trans-unit>
        <trans-unit id="5e3ed70e843fcb6d735f48200daa1921e9f9e4d2" translate="yes" xml:space="preserve">
          <source>Sometimes, a function is only intended to be called interactively, never directly from Lisp. In that case, give the function a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;interactive-only&lt;/code&gt; property, either directly or via &lt;code&gt;declare&lt;/code&gt; (see &lt;a href=&quot;declare-form#Declare-Form&quot;&gt;Declare Form&lt;/a&gt;). This causes the byte compiler to warn if the command is called from Lisp. The output of &lt;code&gt;describe-function&lt;/code&gt; will include similar information. The value of the property can be: a string, which the byte-compiler will use directly in its warning (it should end with a period, and not start with a capital, e.g., &lt;code&gt;&quot;use (system-name) instead.&quot;&lt;/code&gt;); &lt;code&gt;t&lt;/code&gt;; any other symbol, which should be an alternative function to use in Lisp code.</source>
          <target state="translated">時々、関数はインタラクティブに呼び出されることだけを目的としており、Lispから直接呼び出されることはありません。その場合は、直接または &lt;code&gt;declare&lt;/code&gt; を介して、関数に &lt;code&gt;nil&lt;/code&gt; 以外の &lt;code&gt;interactive-only&lt;/code&gt; プロパティを指定します（&lt;a href=&quot;declare-form#Declare-Form&quot;&gt;フォームの宣言を&lt;/a&gt;参照）。これにより、コマンドがLispから呼び出された場合、バイトコンパイラは警告を発します。 &lt;code&gt;describe-function&lt;/code&gt; の出力には、同様の情報が含まれます。プロパティの値は次のようになります。バイトコンパイラが警告で直接使用する文字列（ピリオドで終了し、大文字で開始しないでください。たとえば、 &lt;code&gt;&quot;use (system-name) instead.&quot;&lt;/code&gt; ） ; &lt;code&gt;t&lt;/code&gt; ; Lispコードで使用する代替関数である必要があるその他の記号。</target>
        </trans-unit>
        <trans-unit id="6eea268fe3b73d8580f20b63ea1b3496fa966458" translate="yes" xml:space="preserve">
          <source>Sometimes, an Emacs Lisp program needs to specify a standard file name for a particular use&amp;mdash;typically, to hold configuration data specified by the current user. Usually, such files should be located in the directory specified by &lt;code&gt;user-emacs-directory&lt;/code&gt;, which is typically</source>
          <target state="translated">Emacs Lispプログラムは、特定の用途のために標準のファイル名を指定する必要がある場合があります。通常は、現在のユーザーが指定した構成データを保持します。通常、このようなファイルは、 &lt;code&gt;user-emacs-directory&lt;/code&gt; で指定されたディレクトリに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="8515bf691ca57496b08f861f52381f1f2faa7998" translate="yes" xml:space="preserve">
          <source>Sometimes, binding &lt;code&gt;frame-inhibit-implied-resize&lt;/code&gt; (see &lt;a href=&quot;implied-frame-resizing#Implied-Frame-Resizing&quot;&gt;Implied Frame Resizing&lt;/a&gt;) to a non-&lt;code&gt;nil&lt;/code&gt; value around calls to this function may fix the problem sketched here. Sometimes, however, exactly such binding may be hit by the problem.</source>
          <target state="translated">&lt;code&gt;frame-inhibit-implied-resize&lt;/code&gt; （&lt;a href=&quot;implied-frame-resizing#Implied-Frame-Resizing&quot;&gt;Implied Frame Resizingを&lt;/a&gt;参照）をこの関数の呼び出しの周りの &lt;code&gt;nil&lt;/code&gt; 以外の値にバインドすると、ここでスケッチした問題が修正される場合があります。ただし、場合によっては、まさにそのようなバインディングが問題に見舞われることがあります。</target>
        </trans-unit>
        <trans-unit id="233d0d66145e152c5f8710295de5cb5189e70898" translate="yes" xml:space="preserve">
          <source>Sometimes, however, it makes sense to not delete a parent window like &lt;var&gt;W4&lt;/var&gt;. In particular, a parent window should not be removed when it was used to preserve a combination embedded in a combination of the same type. Such embeddings make sense to assure that when you split a window and subsequently delete the new window, Emacs reestablishes the layout of the associated frame as it existed before the splitting.</source>
          <target state="translated">ただし、 &lt;var&gt;W4&lt;/var&gt; のような親ウィンドウを削除しないことが理にかなっている場合もあります。特に、同じタイプの組み合わせに埋め込まれた組み合わせを保持するために使用された場合は、親ウィンドウを削除しないでください。このような埋め込みは、ウィンドウを分割してから新しいウィンドウを削除したときに、Emacsが分割前に存在していた関連フレームのレイアウトを再確立することを保証するのに意味があります。</target>
        </trans-unit>
        <trans-unit id="86fd280cf44a42ae35b2c0b88a11245a762b11f7" translate="yes" xml:space="preserve">
          <source>Sometimes, it is necessary to create a temporary file on a remote host or a mounted directory. The following two functions support this.</source>
          <target state="translated">リモートホストやマウントされたディレクトリに一時ファイルを作成する必要がある場合があります。以下の2つの関数がこれをサポートしています。</target>
        </trans-unit>
        <trans-unit id="43178c8ee860771773d32210db546f46b1ae0e81" translate="yes" xml:space="preserve">
          <source>Sometimes, it is necessary to send a signal to a non-local asynchronous process. This is possible by writing an own &lt;code&gt;interrupt-process&lt;/code&gt; implementation. This function must be added then to &lt;code&gt;interrupt-process-functions&lt;/code&gt;.</source>
          <target state="translated">非ローカル非同期プロセスにシグナルを送信する必要がある場合があります。これは、独自の &lt;code&gt;interrupt-process&lt;/code&gt; 実装を作成することで可能になります。次に、この関数を &lt;code&gt;interrupt-process-functions&lt;/code&gt; に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="aa885816541d362faea54da5484e99ef36826184" translate="yes" xml:space="preserve">
          <source>Sometimes, it is not desired to expand file names. In such cases, the file name can be quoted to suppress the expansion, and to handle the file name literally. Quoting happens by prefixing the file name with &amp;lsquo;</source>
          <target state="translated">ファイル名を展開したくない場合があります。このような場合、ファイル名を引用符で囲んで展開を抑制し、ファイル名を文字通り処理することができます。引用は、ファイル名の前に「」を付けることで行われます。</target>
        </trans-unit>
        <trans-unit id="144861d58e21668db24c60b60ae0b7f66a23e4ad" translate="yes" xml:space="preserve">
          <source>Sometimes, mounted filesystems cannot be watched for file changes. This is not detected by this function, a non-&lt;code&gt;nil&lt;/code&gt; return value does not guarantee that changes on &lt;var&gt;file&lt;/var&gt; will be notified.</source>
          <target state="translated">マウントされたファイルシステムでファイルの変更を監視できない場合があります。これはこの関数では検出されません &lt;code&gt;nil&lt;/code&gt; 戻り値は、 &lt;var&gt;file&lt;/var&gt; 変更が通知されることを保証しません。</target>
        </trans-unit>
        <trans-unit id="12117e3007a358a3a8e9a5cfecf4d2872074fd81" translate="yes" xml:space="preserve">
          <source>Sometimes, the byte compiler produces warning and/or error messages (see &lt;a href=&quot;compiler-errors#Compiler-Errors&quot;&gt;Compiler Errors&lt;/a&gt;, for details). These messages are normally recorded in a buffer called</source>
          <target state="translated">バイトコンパイラが警告やエラーメッセージを生成することがあります（詳細については、&lt;a href=&quot;compiler-errors#Compiler-Errors&quot;&gt;コンパイラエラー&lt;/a&gt;を参照してください）。これらのメッセージは通常、と呼ばれるバッファに記録されます</target>
        </trans-unit>
        <trans-unit id="4b80f7230c2839855947235b89909795fb022a95" translate="yes" xml:space="preserve">
          <source>Sometimes, the selected window may not be suitable for displaying the buffer. This happens if the selected window is a minibuffer window, or if the selected window is strongly dedicated to its buffer (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;). In such cases, the command normally tries to display the buffer in some other window, by invoking &lt;code&gt;pop-to-buffer&lt;/code&gt; (see below).</source>
          <target state="translated">選択したウィンドウがバッファの表示に適していない場合があります。選択されたウィンドウがミニバッファ・ウィンドウである場合、または選択されたウィンドウが強く（参照そのバッファに専用されている場合に発生し&lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;、専用のWindowsを&lt;/a&gt;）。このような場合、コマンドは通常、 &lt;code&gt;pop-to-buffer&lt;/code&gt; を呼び出して、他のウィンドウにバッファーを表示しようとします（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="250f9544dc99f9d03600bc6d2f3b5bea969ab74b" translate="yes" xml:space="preserve">
          <source>Sometimes, those conflicts can be worked around by expressing the grammar slightly differently. For example, for Modula-2 it might seem natural to have a BNF grammar that looks like this:</source>
          <target state="translated">このような衝突は、文法の表現を少し変えることで回避できることもあります。例えば、Modula-2 の場合、BNF の文法を以下のようにするのは自然なことのように思えるかもしれません。</target>
        </trans-unit>
        <trans-unit id="fc0fc8144fe3278c5f8e6a1cbc205c8365df875a" translate="yes" xml:space="preserve">
          <source>Sometimes, when you call a functional, it is useful to supply a no-op function as the argument. Here are two different kinds of no-op function:</source>
          <target state="translated">関数を呼び出すときに、引数にno-op関数を与えると便利なことがあります。ここでは、2種類のno-op関数を紹介します。</target>
        </trans-unit>
        <trans-unit id="c7e40440b98723a0ae1f89d325688a47159a9cb5" translate="yes" xml:space="preserve">
          <source>Sometimes, you may wish to avoid showing a warning while a command is running, and only show it only after the end of the command. You can use the function &lt;code&gt;delay-warning&lt;/code&gt; for this.</source>
          <target state="translated">コマンドの実行中に警告を表示することを避け、コマンドの終了後にのみ警告を表示したい場合があります。これには、 &lt;code&gt;delay-warning&lt;/code&gt; 機能を使用できます。</target>
        </trans-unit>
        <trans-unit id="3d2d699ee992703b1201c41a6af64aada5e736ae" translate="yes" xml:space="preserve">
          <source>Sometimes, you need to prefer several coding systems for some operation, rather than fix a single one. Emacs lets you specify a priority order for using coding systems. This ordering affects the sorting of lists of coding systems returned by functions such as &lt;code&gt;find-coding-systems-region&lt;/code&gt; (see &lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;Lisp and Coding Systems&lt;/a&gt;).</source>
          <target state="translated">場合によっては、1つのコーディングシステムを修正するのではなく、いくつかの操作に複数のコーディングシステムを優先する必要があります。Emacsでは、コーディングシステムを使用するための優先順位を指定できます。この順序は、 &lt;code&gt;find-coding-systems-region&lt;/code&gt; などの関数によって返されるコーディングシステムのリストの並べ替えに影響します（&lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;Lispおよびコーディングシステムを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="44010839883c32c62f2131ead3a2b803c7433dfc" translate="yes" xml:space="preserve">
          <source>Somewhat odd, but predictable, behavior can occur for certain &amp;ldquo;non-greedy&amp;rdquo; values of &lt;var&gt;separators&lt;/var&gt; that can prefer empty matches over non-empty matches. Again, such values rarely occur in practice:</source>
          <target state="translated">空でない一致よりも空の一致を優先する可能性のある &lt;var&gt;separators&lt;/var&gt; 特定の「貪欲でない」値に対して、やや奇妙ですが予測可能な動作が発生する可能性があります。繰り返しますが、このような値は実際にはめったに発生しません。</target>
        </trans-unit>
        <trans-unit id="3710ef3c0b9c3741c3ba67223627a26f73ff42ae" translate="yes" xml:space="preserve">
          <source>Sorting Text</source>
          <target state="translated">テキストの並べ替え</target>
        </trans-unit>
        <trans-unit id="b91b07a615e7069de18e0ebe0a3e3eafa96e4c26" translate="yes" xml:space="preserve">
          <source>Sorting does not change the &lt;small&gt;CAR&lt;/small&gt;s of the cons cells in &lt;var&gt;sequence&lt;/var&gt;; the cons cell that originally contained the element &lt;code&gt;a&lt;/code&gt; in &lt;var&gt;sequence&lt;/var&gt; still has &lt;code&gt;a&lt;/code&gt; in its &lt;small&gt;CAR&lt;/small&gt; after sorting, but it now appears in a different position in the list due to the change of &lt;small&gt;CDR&lt;/small&gt;s. For example:</source>
          <target state="translated">並べ替えによって、consセルの&lt;small&gt;CAR&lt;/small&gt;が &lt;var&gt;sequence&lt;/var&gt; 変更されることはありません。もともと要素に含まコンス・セル &lt;code&gt;a&lt;/code&gt; における &lt;var&gt;sequence&lt;/var&gt; まだありその中に&lt;small&gt;CAR&lt;/small&gt;ソートした後に、それは今原因の変化にリスト内の別の位置に表示されます&lt;small&gt;CDR&lt;/small&gt;秒。例えば： &lt;code&gt;a&lt;/code&gt; &lt;small&gt;&lt;/small&gt;&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3de2581188f5762e7351d0086bad995b124067d3" translate="yes" xml:space="preserve">
          <source>Sound Output</source>
          <target state="translated">音声出力</target>
        </trans-unit>
        <trans-unit id="babf455465c04b1d92cb97c84f2eae8c4e14dd74" translate="yes" xml:space="preserve">
          <source>Source Breakpoints</source>
          <target state="translated">ソースブレークポイント</target>
        </trans-unit>
        <trans-unit id="1a964a06592c36a6561cd0e204714bdd6a869556" translate="yes" xml:space="preserve">
          <source>Source of the multi-monitor information as &lt;var&gt;string&lt;/var&gt;; e.g., &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;string&lt;/var&gt; としてのマルチモニター情報のソース; 例、 '</target>
        </trans-unit>
        <trans-unit id="5ece9dc113704e90785feb26c5975b25e6b34c0a" translate="yes" xml:space="preserve">
          <source>Special Characters in Regular Expressions</source>
          <target state="translated">正規表現の特殊文字</target>
        </trans-unit>
        <trans-unit id="38bec90f3ce6804049a6d4a37dafcb6af2d8b40d" translate="yes" xml:space="preserve">
          <source>Special Events</source>
          <target state="translated">特別イベント</target>
        </trans-unit>
        <trans-unit id="1128ef515d9da4f49ef641d981e6fbe4479bba93" translate="yes" xml:space="preserve">
          <source>Special Form</source>
          <target state="translated">特殊フォーム</target>
        </trans-unit>
        <trans-unit id="56eb985fa721b70fab80bdca77f4fbf8d4a435a1" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;and&lt;/strong&gt;&lt;em&gt;conditions&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;および&lt;/strong&gt;&lt;em&gt;条件&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e2e0e15d1b8e9520dbdc997140f531d10d55c9f" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;catch&lt;/strong&gt;&lt;em&gt;tag body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特殊形状：&lt;em&gt;タグ本体を&lt;/em&gt;&lt;strong&gt;キャッチ&lt;/strong&gt;&lt;em&gt;&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ff8c3a24cd1ded2d16041af7575f8f608dd2d430" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;cond&lt;/strong&gt;&lt;em&gt;clause&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別な形式：&lt;strong&gt;cond&lt;/strong&gt;&lt;em&gt;節&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7a9c8e13b6c9ca33cd471d78c77de021ea5d48f" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;condition-case&lt;/strong&gt;&lt;em&gt;var protected-form handlers&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;condition-case &lt;/strong&gt;&lt;em&gt;varprotected-formハンドラー&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7b259ee6d31aaaa899941e7b182d537fa62acf2" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;count-loop&lt;/strong&gt;&lt;em&gt;(var [from to [inc]]) body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特殊形式：&lt;strong&gt;count-loop &lt;/strong&gt;&lt;em&gt;（var [from to [inc]]）body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="947ec6b70e484dbe0986cbc019be035da9c396ef" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;defconst&lt;/strong&gt;&lt;em&gt;symbol value [doc-string]&lt;/em&gt;</source>
          <target state="translated">特殊形式：&lt;strong&gt;defconst&lt;/strong&gt;&lt;em&gt;シンボル値[doc-string]&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce5c3b766e918cb5744680fe8268097bd630b073" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;defvar&lt;/strong&gt;&lt;em&gt;symbol [value [doc-string]]&lt;/em&gt;</source>
          <target state="translated">特殊形式：&lt;strong&gt;defvar&lt;/strong&gt;&lt;em&gt;シンボル[値[doc-string]]&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d481c0eb7de0ce6e8680ce954a4bf00c749c2de" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;eval-and-compile&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別な形式：&lt;strong&gt;評価とコンパイルの&lt;/strong&gt;&lt;em&gt;本体&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c6ad1419ddacdc669318c1fa833b1ada1cf55870" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;eval-when-compile&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別な形式：&lt;strong&gt;eval-when-compilebody &lt;/strong&gt;&lt;em&gt;&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8764b8265cdbc64d6315f7a31080730ff2f4da6c" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;function&lt;/strong&gt;&lt;em&gt;function-object&lt;/em&gt;</source>
          <target state="translated">特殊形式：&lt;strong&gt;関数&lt;/strong&gt;&lt;em&gt;function-object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0b43403840ba175a4e5faa6c9a985f88136695a" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;if&lt;/strong&gt;&lt;em&gt;condition then-form else-forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;if&lt;/strong&gt;&lt;em&gt;条件then-formelse-forms&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="747d39ca515a7887dc23f8af23543bc9806431b7" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;interactive&lt;/strong&gt;&lt;em&gt;arg-descriptor&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;インタラクティブな&lt;/strong&gt;&lt;em&gt;引数記述子&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58d18be8c634eb0dbb5005e31984aca111e53bd0" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;let*&lt;/strong&gt;&lt;em&gt;(bindings&amp;hellip;) forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;let * &lt;/strong&gt;&lt;em&gt;（バインディング&amp;hellip;）フォーム&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea26ad3c9f8f7d3c1c2ffc426f79daeccd0c0bf4" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;let&lt;/strong&gt;&lt;em&gt;(bindings&amp;hellip;) forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特殊フォーム：&lt;strong&gt;LET &lt;/strong&gt;&lt;em&gt;（バインディング...）の形...&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="120c4ef89c484cb5d3be7685886e760248d99720" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;letrec&lt;/strong&gt;&lt;em&gt;(bindings&amp;hellip;) forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;letrec &lt;/strong&gt;&lt;em&gt;（バインディング&amp;hellip;）フォーム&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0edb2674ddd1f58dbeeb544e5e1155db9d7f69a9" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;or&lt;/strong&gt;&lt;em&gt;conditions&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;または&lt;/strong&gt;&lt;em&gt;条件&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ff3033b662f869d1902590e9243761c5304dbe60" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;prog1&lt;/strong&gt;&lt;em&gt;form1 forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;prog1form1&lt;/strong&gt;&lt;em&gt;フォーム&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="335b5e9a1202af749015a3864738464d313f29a2" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;prog2&lt;/strong&gt;&lt;em&gt;form1 form2 forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;prog2 form1form2&lt;/strong&gt;&lt;em&gt;フォーム&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a19345e482afae00b79f6319213843f22bed4e59" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;progn&lt;/strong&gt;&lt;em&gt;forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;progn&lt;/strong&gt;&lt;em&gt;フォーム&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="423b5ab3b6c437619c3593c4aee6ef296c74f09e" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;quote&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">特殊フォーム：&lt;strong&gt;見積もり&lt;/strong&gt;&lt;em&gt;オブジェクト&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03ed27df74cb3d68643db3c880c265191a05524c" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;save-current-buffer&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別な形式：&lt;strong&gt;save-current-bufferbody &lt;/strong&gt;&lt;em&gt;&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42f5e6eab188b8d7a091f5d6caaf007b18c15f64" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;save-excursion&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;保存エクスカーション&lt;/strong&gt;&lt;em&gt;本体&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="264171e16d6c07d68fee17a43cdd0485e1c46784" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;save-restriction&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;保存制限&lt;/strong&gt;&lt;em&gt;機関&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aeb5c33538b94a8af54e06064033b23360480609" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;setq-default&lt;/strong&gt;&lt;em&gt;[symbol form]&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特殊形式：&lt;strong&gt;setq-default &lt;/strong&gt;&lt;em&gt;[記号形式]&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d2117a2fe3dfcf673671a81b3671efcbe0a271f" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;setq&lt;/strong&gt;&lt;em&gt;[symbol form]&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特殊形式：&lt;strong&gt;setq &lt;/strong&gt;&lt;em&gt;[記号形式]&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="710c4c63cdbb60bfa6da03c856bd84f144df01db" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;unwind-protect&lt;/strong&gt;&lt;em&gt;body-form cleanup-forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;アンワインドプロテクト&lt;/strong&gt;&lt;em&gt;ボディフォームクリーンアップフォーム&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3098d58b88fd72b5e6f32b76f8543c72501c7b2c" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;while&lt;/strong&gt;&lt;em&gt;condition forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特殊フォーム：&lt;strong&gt;しばらく&lt;/strong&gt;&lt;em&gt;条件フォーム...&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7e1e24b8f0d65f442645be1a3281674f9983a9bf" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;with-no-warnings&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別なフォーム：&lt;strong&gt;警告なしの&lt;/strong&gt;&lt;em&gt;ボディ&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a750d282fc9e3c1c129e5132408d310347cc613" translate="yes" xml:space="preserve">
          <source>Special Form: &lt;strong&gt;with-suppressed-warnings&lt;/strong&gt;&lt;em&gt;warnings body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">特別な形式：&lt;strong&gt;抑制された警告&lt;/strong&gt;&lt;em&gt;警告本文&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7fe554793910d2696857a6478cf16662776f307c" translate="yes" xml:space="preserve">
          <source>Special Forms</source>
          <target state="translated">特殊フォーム</target>
        </trans-unit>
        <trans-unit id="32995a271f5671167b682c661e9857ed0cb21f26" translate="yes" xml:space="preserve">
          <source>Special Read Syntax</source>
          <target state="translated">特殊読取り構文</target>
        </trans-unit>
        <trans-unit id="e979448acfa68e3402928ac8074abbca65033811" translate="yes" xml:space="preserve">
          <source>Special characteristics of Emacs Lisp vectors.</source>
          <target state="translated">Emacs Lispベクターの特殊な特性。</target>
        </trans-unit>
        <trans-unit id="631ab6a0d80a2e5b10d946e67a144774e7fee36f" translate="yes" xml:space="preserve">
          <source>Special characters in regular expressions.</source>
          <target state="translated">正規表現の特殊文字。</target>
        </trans-unit>
        <trans-unit id="dfb7c500a610654a43ffa9986af5e559842ac85d" translate="yes" xml:space="preserve">
          <source>Special considerations for putting keyboard character events in a string.</source>
          <target state="translated">キーボード文字イベントを文字列に入れる際の特別な配慮。</target>
        </trans-unit>
        <trans-unit id="a65e26a0d9d19425102d97149c58a0de8c599b1f" translate="yes" xml:space="preserve">
          <source>Special events do not echo, they are never grouped into key sequences, and they never appear in the value of &lt;code&gt;last-command-event&lt;/code&gt; or &lt;code&gt;(this-command-keys)&lt;/code&gt;. They do not discard a numeric argument, they cannot be unread with &lt;code&gt;unread-command-events&lt;/code&gt;, they may not appear in a keyboard macro, and they are not recorded in a keyboard macro while you are defining one.</source>
          <target state="translated">特別なイベントはエコーせず、キーシーケンスにグループ化されることも、 &lt;code&gt;last-command-event&lt;/code&gt; または &lt;code&gt;(this-command-keys)&lt;/code&gt; の値に表示されることもありません。これらは数値引数を破棄せず、 &lt;code&gt;unread-command-events&lt;/code&gt; で未読にすることはできません。また、キーボードマクロに表示されない場合があり、キーボードマクロを定義している間は記録されません。</target>
        </trans-unit>
        <trans-unit id="35c9cade131986bafc15aeb44c11168e2d22c54a" translate="yes" xml:space="preserve">
          <source>Special events do, however, appear in &lt;code&gt;last-input-event&lt;/code&gt; immediately after they are read, and this is the way for the event&amp;rsquo;s definition to find the actual event.</source>
          <target state="translated">ただし、特別なイベントは、読み取られた直後に &lt;code&gt;last-input-event&lt;/code&gt; に表示されます。これは、イベントの定義が実際のイベントを見つけるための方法です。</target>
        </trans-unit>
        <trans-unit id="b41cf7d0adf5529b36ff0d5af40b33bd7255be1f" translate="yes" xml:space="preserve">
          <source>Special faces specifically for Font Lock.</source>
          <target state="translated">フォントロック専用の特殊な顔</target>
        </trans-unit>
        <trans-unit id="d4cbac2a25b292b49bb8fb8d81a6810d965938a6" translate="yes" xml:space="preserve">
          <source>Special features available through ImageMagick.</source>
          <target state="translated">ImageMagick を通じて利用できる特別な機能。</target>
        </trans-unit>
        <trans-unit id="d4ebd1d55cc3c6af2bbc3d77deaf52c5b64f58b1" translate="yes" xml:space="preserve">
          <source>Special features for XBM format.</source>
          <target state="translated">XBM形式の特集。</target>
        </trans-unit>
        <trans-unit id="49a48e6a7d96d610a394b51c270f5b0f0c2630fd" translate="yes" xml:space="preserve">
          <source>Special features for XPM format.</source>
          <target state="translated">XPMフォーマットの特集です。</target>
        </trans-unit>
        <trans-unit id="ce96421098986d1c3387833e8584216f952ced04" translate="yes" xml:space="preserve">
          <source>Special forms (see &lt;a href=&quot;special-forms#Special-Forms&quot;&gt;Special Forms&lt;/a&gt;) cannot be advised, however macros can be advised, in much the same way as functions. Of course, this will not affect code that has already been macro-expanded, so you need to make sure the advice is installed before the macro is expanded.</source>
          <target state="translated">特別なフォーム（&lt;a href=&quot;special-forms#Special-Forms&quot;&gt;特別なフォームを&lt;/a&gt;参照）はアドバイスできませんが、関数とほぼ同じ方法でマクロをアドバイスできます。もちろん、これはすでにマクロ展開されているコードには影響しないため、マクロを展開する前にアドバイスがインストールされていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="381bcea190328fdafd41de9d29813da335795c49" translate="yes" xml:space="preserve">
          <source>Special forms are idiosyncratic primitives, most of them extremely important.</source>
          <target state="translated">特殊な形態は特異なプリミティブであり、そのほとんどが極めて重要である。</target>
        </trans-unit>
        <trans-unit id="960ddd3ea67df4c0dd9fc8ab2db6662ae9b2cb58" translate="yes" xml:space="preserve">
          <source>Special handling for certain file names.</source>
          <target state="translated">特定のファイル名に対して特別な処理を行います。</target>
        </trans-unit>
        <trans-unit id="ae3db7d64326863f9a7f4cdcf1d1dab40cab252c" translate="yes" xml:space="preserve">
          <source>Special mode is a basic major mode for buffers containing text that is produced specially by Emacs, rather than directly from a file. Major modes derived from Special mode are given a &lt;code&gt;mode-class&lt;/code&gt; property of &lt;code&gt;special&lt;/code&gt; (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">特別モードは、ファイルから直接ではなく、Emacsによって特別に生成されたテキストを含むバッファーの基本的なメジャーモードです。特殊モード由来のメジャーモードでは、与えられた &lt;code&gt;mode-class&lt;/code&gt; のプロパティ &lt;code&gt;special&lt;/code&gt; （参照&lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;メジャーモードの表記を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a11ed3467ae734249d893ce27e9f9d8355d65572" translate="yes" xml:space="preserve">
          <source>Special mode sets the buffer to read-only. Its keymap defines several common bindings, including</source>
          <target state="translated">スペシャルモードでは、バッファを読み取り専用に設定します。そのキーマップは、以下のようないくつかの一般的なバインディングを定義しています。</target>
        </trans-unit>
        <trans-unit id="023740e0bfa228fee2e375771742c38f7ad27ac7" translate="yes" xml:space="preserve">
          <source>Special windows on a frame&amp;rsquo;s sides.</source>
          <target state="translated">フレームの側面にある特別な窓。</target>
        </trans-unit>
        <trans-unit id="fdc407e36762e77e19b2828c49fde87d21246a96" translate="yes" xml:space="preserve">
          <source>Specialized modes sometimes need to let the user access from the same buffer several vastly different types of text. For example, you may need to display a summary of the buffer text, in addition to letting the user access the text itself.</source>
          <target state="translated">特殊なモードでは、ユーザが同じバッファから複数の全く異なるタイプのテキストにアクセスできるようにする必要がある場合があります。例えば、ユーザがテキスト自体にアクセスできるようにするだけでなく、バッファのテキストの要約を表示する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="0ccf1fc488b26672b571c1080b97df2f45de5a0c" translate="yes" xml:space="preserve">
          <source>Specification Examples</source>
          <target state="translated">仕様例</target>
        </trans-unit>
        <trans-unit id="5eb9e3c30477a5fe434b68d862daeee8e474b44a" translate="yes" xml:space="preserve">
          <source>Specification List</source>
          <target state="translated">仕様一覧</target>
        </trans-unit>
        <trans-unit id="a5593f8de02c19653020dce1d12d690c799c5441" translate="yes" xml:space="preserve">
          <source>Specified Spaces</source>
          <target state="translated">特定空間</target>
        </trans-unit>
        <trans-unit id="c460382d47c60bbab80f4be53bc9235bdb3b3bc2" translate="yes" xml:space="preserve">
          <source>Specifies a general edge-detection algorithm. &lt;var&gt;matrix&lt;/var&gt; must be either a nine-element list or a nine-element vector of numbers. A pixel at position &lt;em&gt;x/y&lt;/em&gt; in the transformed image is computed from original pixels around that position. &lt;var&gt;matrix&lt;/var&gt; specifies, for each pixel in the neighborhood of &lt;em&gt;x/y&lt;/em&gt;, a factor with which that pixel will influence the transformed pixel; element &lt;em&gt;0&lt;/em&gt; specifies the factor for the pixel at &lt;em&gt;x-1/y-1&lt;/em&gt;, element &lt;em&gt;1&lt;/em&gt; the factor for the pixel at &lt;em&gt;x/y-1&lt;/em&gt; etc., as shown below:</source>
          <target state="translated">一般的なエッジ検出アルゴリズムを指定します。 &lt;var&gt;matrix&lt;/var&gt; は、9要素のリストまたは9要素の数値ベクトルのいずれかである必要があります。変換された画像の位置&lt;em&gt;x / yの&lt;/em&gt;ピクセルは、その位置の周りの元のピクセルから計算されます。 &lt;var&gt;matrix&lt;/var&gt; は、&lt;em&gt;x / yの&lt;/em&gt;近傍の各ピクセルについて、そのピクセルが変換されたピクセルに影響を与える要因を指定します。以下に示すように、要素&lt;em&gt;0&lt;/em&gt;は&lt;em&gt;x-1 / y-1&lt;/em&gt;のピクセルの係数を指定し、要素&lt;em&gt;1&lt;/em&gt;は&lt;em&gt;x / y-1の&lt;/em&gt;ピクセルの係数を指定します。</target>
        </trans-unit>
        <trans-unit id="c87cac3d707e8c047e07450d950a094d6195f82f" translate="yes" xml:space="preserve">
          <source>Specifies a rotation angle in degrees. Only multiples of 90 degrees are supported, unless the image type is &lt;code&gt;imagemagick&lt;/code&gt;. Positive values rotate clockwise, negative values counter-clockwise. Rotation is performed after scaling and cropping.</source>
          <target state="translated">回転角を度で指定します。画像タイプが &lt;code&gt;imagemagick&lt;/code&gt; でない限り、90度の倍数のみがサポートされます。正の値は時計回りに回転し、負の値は反時計回りに回転します。回転は、スケーリングとトリミングの後に実行されます。</target>
        </trans-unit>
        <trans-unit id="4aee6143bc2bd5feebcf2efeac77c99ee7e8f50f" translate="yes" xml:space="preserve">
          <source>Specifies that the space should be wide enough to reach &lt;var&gt;hpos&lt;/var&gt;. If &lt;var&gt;hpos&lt;/var&gt; is a number, it is measured in units of the normal character width. &lt;var&gt;hpos&lt;/var&gt; can also be a &lt;em&gt;pixel width&lt;/em&gt; specification (see &lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Pixel Specification&lt;/a&gt;).</source>
          <target state="translated">スペースが &lt;var&gt;hpos&lt;/var&gt; に到達するのに十分な幅である必要があることを指定します。 &lt;var&gt;hpos&lt;/var&gt; が数値の場合、通常の文字幅の単位で測定されます。 &lt;var&gt;hpos&lt;/var&gt; は、&lt;em&gt;ピクセル幅の&lt;/em&gt;仕様にすることもできます（&lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;ピクセル仕様を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="af65e1940b6f6f49864ab7c6f10471c95d20fc9d" translate="yes" xml:space="preserve">
          <source>Specifies that the width of the stretch should be computed from the first character in the group of consecutive characters that have the same &lt;code&gt;display&lt;/code&gt; property. The space width is the pixel width of that character, multiplied by &lt;var&gt;factor&lt;/var&gt;. (On text-mode terminals, the &amp;ldquo;pixel width&amp;rdquo; of a character is usually 1, but it could be more for TABs and double-width CJK characters.)</source>
          <target state="translated">ストレッチの幅は、同じ &lt;code&gt;display&lt;/code&gt; プロパティを持つ連続する文字のグループの最初の文字から計算する必要があることを指定します。スペース幅は、その文字のピクセル幅に &lt;var&gt;factor&lt;/var&gt; 掛けたものです。（テキストモード端末では、文字の「ピクセル幅」は通常1ですが、TABおよび倍幅CJK文字の場合はそれ以上になる可能性があります。）</target>
        </trans-unit>
        <trans-unit id="028ccf57e504846c4e6e25ccbd41fcfe42d107e2" translate="yes" xml:space="preserve">
          <source>Specifies the Laplace edge detection algorithm, which blurs out small differences in color while highlighting larger differences. People sometimes consider this useful for displaying the image for a disabled button.</source>
          <target state="translated">ラプラスエッジ検出アルゴリズムを指定します。これは、無効化されたボタンの画像を表示するのに便利だと思われることがあります。</target>
        </trans-unit>
        <trans-unit id="bc407ef25740da3fa1a0505290eb4ab5301771f9" translate="yes" xml:space="preserve">
          <source>Specifies the X, Y location on the screen that the notification should point to. Both arguments must be used together.</source>
          <target state="translated">通知が指すべき画面上の X、Y の位置を指定します。両方の引数を一緒に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e3af67db9a104a26ab8a8853f40e90fca504dbe8" translate="yes" xml:space="preserve">
          <source>Specifies the height of the space, multiplying the ordinary height of the text having this display specification by &lt;var&gt;factor&lt;/var&gt;.</source>
          <target state="translated">スペースの高さを指定し、この表示仕様を持つテキストの通常の高さに &lt;var&gt;factor&lt;/var&gt; を掛けます。</target>
        </trans-unit>
        <trans-unit id="f316d5722277c9d536971b86e6e3aa448757baae" translate="yes" xml:space="preserve">
          <source>Specifies the height of the space. If &lt;var&gt;height&lt;/var&gt; is a number, it specifies that the space height should be &lt;var&gt;height&lt;/var&gt; times the normal character height. The &lt;var&gt;height&lt;/var&gt; may also be a &lt;em&gt;pixel height&lt;/em&gt; specification (see &lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Pixel Specification&lt;/a&gt;).</source>
          <target state="translated">スペースの高さを指定します。 &lt;var&gt;height&lt;/var&gt; が数値の場合、スペースの高さは通常の文字の高さの高 &lt;var&gt;height&lt;/var&gt; 倍にする必要があることを指定します。 &lt;var&gt;height&lt;/var&gt; あってもよい&lt;em&gt;、画素高さ&lt;/em&gt;指定（参照&lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;ピクセル仕様&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4f6cc19ca5d7ff59d8bb0596de173853be4c4933" translate="yes" xml:space="preserve">
          <source>Specifies transforming the image so that it looks disabled.</source>
          <target state="translated">無効に見えるように画像を変換することを指定します。</target>
        </trans-unit>
        <trans-unit id="515bc75e814e1f2eb30e8f26c42e8ec559c31531" translate="yes" xml:space="preserve">
          <source>Specify &lt;var&gt;getfunction&lt;/var&gt; as the way to extract the value of this option. The function &lt;var&gt;getfunction&lt;/var&gt; should take one argument, a symbol, and should return whatever customize should use as the current value for that symbol (which need not be the symbol&amp;rsquo;s Lisp value). The default is &lt;code&gt;default-value&lt;/code&gt;.</source>
          <target state="translated">このオプションの値を抽出する方法として &lt;var&gt;getfunction&lt;/var&gt; を指定します。関数 &lt;var&gt;getfunction&lt;/var&gt; は、1つの引数、シンボルを取り、そのシンボルの現在の値として使用するカスタマイズを返す必要があります（シンボルのLisp値である必要はありません）。デフォルトは &lt;code&gt;default-value&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="62a10d9d01e077e02b74d3e10b9c44659bda6895" translate="yes" xml:space="preserve">
          <source>Specify &lt;var&gt;setfunction&lt;/var&gt; as the way to change the value of this option when using the Customize interface. The function &lt;var&gt;setfunction&lt;/var&gt; should take two arguments, a symbol (the option name) and the new value, and should do whatever is necessary to update the value properly for this option (which may not mean simply setting the option as a Lisp variable); preferably, though, it should not modify its value argument destructively. The default for &lt;var&gt;setfunction&lt;/var&gt; is &lt;code&gt;set-default&lt;/code&gt;.</source>
          <target state="translated">カスタマイズインターフェイスを使用するときにこのオプションの値を変更する方法として、 &lt;var&gt;setfunction&lt;/var&gt; を指定します。関数 &lt;var&gt;setfunction&lt;/var&gt; は、シンボル（オプション名）と新しい値の2つの引数を取り、このオプションの値を適切に更新するために必要なことをすべて実行する必要があります（これは単にオプションをLisp変数として設定することを意味しない場合があります）。ただし、値引数を破壊的に変更しないことが望ましいです。 &lt;var&gt;setfunction&lt;/var&gt; のデフォルトは &lt;code&gt;set-default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4684bb69d362aacee163a5fb8f8d05ded24f661e" translate="yes" xml:space="preserve">
          <source>Specify a &lt;code&gt;nil&lt;/code&gt; value for &lt;code&gt;byte-compile-dynamic-docstrings&lt;/code&gt; as a local variable in each of these files, and load them with either</source>
          <target state="translated">これらの各ファイルのローカル変数として &lt;code&gt;byte-compile-dynamic-docstrings&lt;/code&gt; に &lt;code&gt;nil&lt;/code&gt; 値を指定し、いずれかを使用してロードします。</target>
        </trans-unit>
        <trans-unit id="72cea31e957edd3ab4c1af7eab7a10a952b9fe15" translate="yes" xml:space="preserve">
          <source>Specify a validation function for input. &lt;var&gt;function&lt;/var&gt; takes a widget as an argument, and should return &lt;code&gt;nil&lt;/code&gt; if the widget&amp;rsquo;s current value is valid for the widget. Otherwise, it should return the widget containing the invalid data, and set that widget&amp;rsquo;s &lt;code&gt;:error&lt;/code&gt; property to a string explaining the error.</source>
          <target state="translated">入力の検証関数を指定します。 &lt;var&gt;function&lt;/var&gt; はウィジェットを引数として取り、ウィジェットの現在の値がウィジェットに対して有効である場合は &lt;code&gt;nil&lt;/code&gt; を返す必要があります。それ以外の場合は、無効なデータを含むウィジェットを返し、そのウィジェットの &lt;code&gt;:error&lt;/code&gt; プロパティをエラーを説明する文字列に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c1c2059990e1af97e24b8268f5484096a66daf30" translate="yes" xml:space="preserve">
          <source>Specify argument evaluation for macros and defining forms.</source>
          <target state="translated">マクロや定義フォームの引数評価を指定します。</target>
        </trans-unit>
        <trans-unit id="5e7f40363bb09ec4e654bbbc611da28c2b3b95ab" translate="yes" xml:space="preserve">
          <source>Specify how to decide whether a value matches the type. The corresponding value, &lt;var&gt;function&lt;/var&gt;, should be a function that accepts two arguments, a widget and a value; it should return non-&lt;code&gt;nil&lt;/code&gt; if the value is acceptable.</source>
          <target state="translated">値がタイプと一致するかどうかを判断する方法を指定します。対応する値 &lt;var&gt;function&lt;/var&gt; は、ウィジェットと値の2つの引数を受け入れる関数である必要があります。値が許容できる場合は、 &lt;code&gt;nil&lt;/code&gt; 以外を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="29749db886950b6f84d3bbe633d34cb766dfc8a5" translate="yes" xml:space="preserve">
          <source>Specify how to decide whether an inline value matches the type. The corresponding value, &lt;var&gt;function&lt;/var&gt;, should be a function that accepts two arguments, a widget and an inline value; it should return non-&lt;code&gt;nil&lt;/code&gt; if the value is acceptable. See &lt;a href=&quot;splicing-into-lists#Splicing-into-Lists&quot;&gt;Splicing into Lists&lt;/a&gt; for more information about inline values.</source>
          <target state="translated">インライン値がタイプと一致するかどうかを判断する方法を指定します。対応する値 &lt;var&gt;function&lt;/var&gt; は、ウィジェットとインライン値の2つの引数を受け入れる関数である必要があります。値が許容できる場合は、 &lt;code&gt;nil&lt;/code&gt; 以外を返す必要があります。インライン値の詳細については、「&lt;a href=&quot;splicing-into-lists#Splicing-into-Lists&quot;&gt;リスト&lt;/a&gt;へのスプライシング」を参照してください。</target>
        </trans-unit>
        <trans-unit id="9f950e1464906f248ea78bb47209464389968658" translate="yes" xml:space="preserve">
          <source>Specify the communication type. A value of &lt;code&gt;nil&lt;/code&gt; specifies a stream connection (the default); &lt;code&gt;datagram&lt;/code&gt; specifies a datagram connection; &lt;code&gt;seqpacket&lt;/code&gt; specifies a sequenced packet stream connection. Both connections and servers can be of these types.</source>
          <target state="translated">Specify the communication type. A value of &lt;code&gt;nil&lt;/code&gt; specifies a stream connection (the default); &lt;code&gt;datagram&lt;/code&gt; specifies a datagram connection; &lt;code&gt;seqpacket&lt;/code&gt; specifies a sequenced packet stream connection. Both connections and servers can be of these types.</target>
        </trans-unit>
        <trans-unit id="f948eb87ba5cab2cbdc8574577bbfd1abd4e9855" translate="yes" xml:space="preserve">
          <source>Specify the host to connect to. &lt;var&gt;host&lt;/var&gt; should be a host name or Internet address, as a string, or the symbol &lt;code&gt;local&lt;/code&gt; to specify the local host. If you specify &lt;var&gt;host&lt;/var&gt; for a server, it must specify a valid address for the local host, and only clients connecting to that address will be accepted. When using &lt;code&gt;local&lt;/code&gt;, by default IPv4 will be used, specify a &lt;var&gt;family&lt;/var&gt; of &lt;code&gt;ipv6&lt;/code&gt; to override this. To listen on all interfaces, specify an address of &amp;lsquo;</source>
          <target state="translated">Specify the host to connect to. &lt;var&gt;host&lt;/var&gt; should be a host name or Internet address, as a string, or the symbol &lt;code&gt;local&lt;/code&gt; to specify the local host. If you specify &lt;var&gt;host&lt;/var&gt; for a server, it must specify a valid address for the local host, and only clients connecting to that address will be accepted. When using &lt;code&gt;local&lt;/code&gt; , by default IPv4 will be used, specify a &lt;var&gt;family&lt;/var&gt; of &lt;code&gt;ipv6&lt;/code&gt; to override this. To listen on all interfaces, specify an address of &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="71f4f50c7f93910cc89225c4c491caa2d9bc573c" translate="yes" xml:space="preserve">
          <source>Specify the list of reasonable values for use in this option. The user is not restricted to using only these values, but they are offered as convenient alternatives.</source>
          <target state="translated">このオプシ ョ ンで使用するための妥当な値の リ ス ト を指定 し ます。ユーザーはこれらの値だけを使用することに制限されるわけではありませんが、便利な代替手段として提供されています。</target>
        </trans-unit>
        <trans-unit id="1c8f6097cb902bfa860acae4a5ae314d21f4e3ba" translate="yes" xml:space="preserve">
          <source>Specify which expressions of a call to macro &lt;var&gt;macro&lt;/var&gt; are forms to be evaluated. &lt;var&gt;specification&lt;/var&gt; should be the edebug specification. Neither argument is evaluated.</source>
          <target state="translated">Specify which expressions of a call to macro &lt;var&gt;macro&lt;/var&gt; are forms to be evaluated. &lt;var&gt;specification&lt;/var&gt; should be the edebug specification. Neither argument is evaluated.</target>
        </trans-unit>
        <trans-unit id="839ba84a40d64e8ee86f0dc4afe80b14db5ff9c8" translate="yes" xml:space="preserve">
          <source>Specifying 0 for &lt;var&gt;startpos&lt;/var&gt; is equivalent to just specifying the symbol &lt;var&gt;variable&lt;/var&gt;. &lt;code&gt;previous-history-element&lt;/code&gt; will display the most recent element of the history list in the minibuffer. If you specify a positive &lt;var&gt;startpos&lt;/var&gt;, the minibuffer history functions behave as if &lt;code&gt;(elt &lt;var&gt;variable&lt;/var&gt; (1- &lt;var&gt;startpos&lt;/var&gt;))&lt;/code&gt; were the history element currently shown in the minibuffer.</source>
          <target state="translated">Specifying 0 for &lt;var&gt;startpos&lt;/var&gt; is equivalent to just specifying the symbol &lt;var&gt;variable&lt;/var&gt; . &lt;code&gt;previous-history-element&lt;/code&gt; will display the most recent element of the history list in the minibuffer. If you specify a positive &lt;var&gt;startpos&lt;/var&gt; , the minibuffer history functions behave as if &lt;code&gt;(elt &lt;var&gt;variable&lt;/var&gt; (1- &lt;var&gt;startpos&lt;/var&gt;))&lt;/code&gt; were the history element currently shown in the minibuffer.</target>
        </trans-unit>
        <trans-unit id="4a168305fb5a7fea7f805b549b7e9c7ac3b81177" translate="yes" xml:space="preserve">
          <source>Specifying Indentation Rules</source>
          <target state="translated">インデントルールの指定</target>
        </trans-unit>
        <trans-unit id="2ea07f9d813370e214412a0edc7a7ff44f07f13f" translate="yes" xml:space="preserve">
          <source>Specifying a Coding System for One Operation</source>
          <target state="translated">1つの操作に対してコーディングシステムを指定する</target>
        </trans-unit>
        <trans-unit id="01c334f2ab0d89384a3278a2d18e54e6153350b8" translate="yes" xml:space="preserve">
          <source>Specifying abbreviations and their expansions.</source>
          <target state="translated">略語とその展開を指定します。</target>
        </trans-unit>
        <trans-unit id="c0451957a75eeeb14b63039eba8624b7f995ab67" translate="yes" xml:space="preserve">
          <source>Specifying and retrieving a frame&amp;rsquo;s size.</source>
          <target state="translated">Specifying and retrieving a frame&amp;rsquo;s size.</target>
        </trans-unit>
        <trans-unit id="b22fcdb3fe6e6cdc014c8f96611e784304f28244" translate="yes" xml:space="preserve">
          <source>Specifying bitmaps for fringe indicators.</source>
          <target state="translated">フリンジ指標のビットマップの指定</target>
        </trans-unit>
        <trans-unit id="f84c7f11200ac5c0418c43edf1cb878aa052d355" translate="yes" xml:space="preserve">
          <source>Specifying frame parameters when you make a frame.</source>
          <target state="translated">フレームを作成する際のフレームパラメータの指定</target>
        </trans-unit>
        <trans-unit id="42ed2fe425c4cd7ae9421beca3253c2cf2dfbb43" translate="yes" xml:space="preserve">
          <source>Specifying how a function should read arguments.</source>
          <target state="translated">関数が引数をどのように読み込むかを指定します。</target>
        </trans-unit>
        <trans-unit id="6c656164aee2c5b449bfb1da9e628d90fce2efb8" translate="yes" xml:space="preserve">
          <source>Specifying how to handle macro calls.</source>
          <target state="translated">マクロ呼び出しの処理方法を指定します。</target>
        </trans-unit>
        <trans-unit id="a692a455405264fc334b3280fc7199fdb32f1ac1" translate="yes" xml:space="preserve">
          <source>Specifying how to indent macro calls.</source>
          <target state="translated">マクロ呼び出しのインデント方法を指定します。</target>
        </trans-unit>
        <trans-unit id="18e73ab92ab44f0797c36968cd264fb052a334af" translate="yes" xml:space="preserve">
          <source>Specifying indentation rules.</source>
          <target state="translated">インデントルールの指定</target>
        </trans-unit>
        <trans-unit id="d9dc01e36fc9dce32a434fe4879c6b2f0e6a4295" translate="yes" xml:space="preserve">
          <source>Specifying initial contents for the minibuffer.</source>
          <target state="translated">ミニバッファの初期内容を指定します。</target>
        </trans-unit>
        <trans-unit id="11af694aaa0cea11df9a4fd771521dcbc06c83c2" translate="yes" xml:space="preserve">
          <source>Specifying non-paired conversion.</source>
          <target state="translated">不対変換を指定します。</target>
        </trans-unit>
        <trans-unit id="e5782b5d2a22438283b8c84281502024932a4eb9" translate="yes" xml:space="preserve">
          <source>Specifying space width or height in pixels.</source>
          <target state="translated">スペースの幅または高さをピクセル単位で指定します。</target>
        </trans-unit>
        <trans-unit id="9ba55e807f9e689d2b8d18c22d36c6d2210dbb37" translate="yes" xml:space="preserve">
          <source>Specifying the selected frame.</source>
          <target state="translated">選択したフレームを指定します。</target>
        </trans-unit>
        <trans-unit id="c1b2d99ec88d1f6334fb6be6a132518c33eb4d7a" translate="yes" xml:space="preserve">
          <source>Specifying the shape of the mouse pointer.</source>
          <target state="translated">マウスポインタの形状を指定します。</target>
        </trans-unit>
        <trans-unit id="70851b33272de02fb338ec00f837f669d97b2347" translate="yes" xml:space="preserve">
          <source>Specifying the type of a user option.</source>
          <target state="translated">ユーザーオプションの種類を指定します。</target>
        </trans-unit>
        <trans-unit id="937c6151201b1f5d82e508d785ec89136272a01c" translate="yes" xml:space="preserve">
          <source>Specifying where to put the window fringes.</source>
          <target state="translated">窓のフリンジを置く場所を指定します。</target>
        </trans-unit>
        <trans-unit id="eacf33dd1dbba2544054b45a37ebf5046e43f45a" translate="yes" xml:space="preserve">
          <source>Specifying your own bitmaps to use in the fringes.</source>
          <target state="translated">フリンジで使用する独自のビットマップを指定します。</target>
        </trans-unit>
        <trans-unit id="eb0818ecddaa0c25bcc4c00ff53114121e76b1b9" translate="yes" xml:space="preserve">
          <source>Splice elements into list with &lt;code&gt;:inline&lt;/code&gt;.</source>
          <target state="translated">Splice elements into list with &lt;code&gt;:inline&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e026ad9740bde9c2f9a9250b6d635ef962788b2" translate="yes" xml:space="preserve">
          <source>Splicing into Lists</source>
          <target state="translated">リストへのスプライシング</target>
        </trans-unit>
        <trans-unit id="c86997a85a2e4e6bcc0c8ab2f0c5a0e0738aef8d" translate="yes" xml:space="preserve">
          <source>Split &lt;var&gt;W2&lt;/var&gt; to make a new window &lt;var&gt;W4&lt;/var&gt; as follows.</source>
          <target state="translated">Split &lt;var&gt;W2&lt;/var&gt; to make a new window &lt;var&gt;W4&lt;/var&gt; as follows.</target>
        </trans-unit>
        <trans-unit id="afa39ae5c3cfb141a74b47ced7bf2abdd2a4f59e" translate="yes" xml:space="preserve">
          <source>Splitting Windows</source>
          <target state="translated">ウィンドウの分割</target>
        </trans-unit>
        <trans-unit id="d5fc72176bd573116a7799e8705f3628337f367a" translate="yes" xml:space="preserve">
          <source>Stack-allocated Objects</source>
          <target state="translated">スタック割り当てオブジェクト</target>
        </trans-unit>
        <trans-unit id="72240ab198d70cd61d42bbaa0e9d27acf25c7467" translate="yes" xml:space="preserve">
          <source>Standard Abbrev Tables</source>
          <target state="translated">標準略表</target>
        </trans-unit>
        <trans-unit id="50597f47ec4187895cbb88ab40860fe051b7836c" translate="yes" xml:space="preserve">
          <source>Standard Emacs commands offer completion for names of symbols, files, buffers, and processes; with the functions in this section, you can implement completion for other kinds of names.</source>
          <target state="translated">標準的な Emacs コマンドでは、シンボル、ファイル、バッファ、プロセスの名前の補完が可能ですが、このセクションで紹介する関数を使用することで、他の種類の名前の補完を実装することができます。</target>
        </trans-unit>
        <trans-unit id="d783ea66242ef3cd946c9f2034a8f4bebff05c83" translate="yes" xml:space="preserve">
          <source>Standard Errors</source>
          <target state="translated">標準誤差</target>
        </trans-unit>
        <trans-unit id="5424378597bf7906ef1f181e45e9504769c41d42" translate="yes" xml:space="preserve">
          <source>Standard File Names</source>
          <target state="translated">標準ファイル名</target>
        </trans-unit>
        <trans-unit id="a8edcc4f41ed8a8bc1a30b8f8e0cfa8dda2f651f" translate="yes" xml:space="preserve">
          <source>Standard Hooks</source>
          <target state="translated">標準フック</target>
        </trans-unit>
        <trans-unit id="65c1ad63d32ec215a53648580dd58e2d4e85c925" translate="yes" xml:space="preserve">
          <source>Standard Keymaps</source>
          <target state="translated">標準キーマップ</target>
        </trans-unit>
        <trans-unit id="eeaae79ae02d4fe7181ea9a557b4d2c0bfc551a4" translate="yes" xml:space="preserve">
          <source>Standard Mathematical Functions</source>
          <target state="translated">標準的な数学関数</target>
        </trans-unit>
        <trans-unit id="6facd0c91eede92c3ffa82dcd129f83fac6952fd" translate="yes" xml:space="preserve">
          <source>Standard Regular Expressions Used in Editing</source>
          <target state="translated">編集時に使用する標準正規表現</target>
        </trans-unit>
        <trans-unit id="9faf8f075d06d9bd7adecbbc7ecd6575f69756ff" translate="yes" xml:space="preserve">
          <source>Standard Symbol Properties</source>
          <target state="translated">標準シンボルのプロパティ</target>
        </trans-unit>
        <trans-unit id="03f876910deb2eb7852a5c86b84b4982b499a25b" translate="yes" xml:space="preserve">
          <source>Standard meanings of symbol properties.</source>
          <target state="translated">シンボルプロパティの標準的な意味</target>
        </trans-unit>
        <trans-unit id="279b44e04871995ca7f0773059d6da20c4382eb9" translate="yes" xml:space="preserve">
          <source>Standard unloading activities also undoes ELP profiling of functions in that library, unprovides any features provided by the library, and cancels timers held in variables defined by the library.</source>
          <target state="translated">標準的なアンロード活動はまた、そのライブラリ内の関数のELPプロファイリングを取り消し、ライブラリによって提供された機能の提供を取り消し、ライブラリによって定義された変数に保持されたタイマーをキャンセルします。</target>
        </trans-unit>
        <trans-unit id="c79ef33cf1d7aef191f658520f71ccea57173bec" translate="yes" xml:space="preserve">
          <source>Start a terminal-emulator for a serial port in a new buffer. &lt;var&gt;port&lt;/var&gt; is the name of the serial port to connect to. For example, this could be</source>
          <target state="translated">Start a terminal-emulator for a serial port in a new buffer. &lt;var&gt;port&lt;/var&gt; is the name of the serial port to connect to. For example, this could be</target>
        </trans-unit>
        <trans-unit id="2e02423f9397ae2a48b9a64dc88b1029bb0d1676" translate="yes" xml:space="preserve">
          <source>Start process in the stopped state if &lt;var&gt;bool&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. In the stopped state, a serial process does not accept incoming data, but you can send outgoing data. The stopped state is cleared by &lt;code&gt;continue-process&lt;/code&gt; and set by &lt;code&gt;stop-process&lt;/code&gt;.</source>
          <target state="translated">Start process in the stopped state if &lt;var&gt;bool&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; . In the stopped state, a serial process does not accept incoming data, but you can send outgoing data. The stopped state is cleared by &lt;code&gt;continue-process&lt;/code&gt; and set by &lt;code&gt;stop-process&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da55ea993fbfd653a1767c13a3a5738f04752ccc" translate="yes" xml:space="preserve">
          <source>Start with a plain connection, and if parameters &amp;lsquo;</source>
          <target state="translated">Start with a plain connection, and if parameters &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="8135bfaa4ff2b77fc82624f5c17de635d9f7976f" translate="yes" xml:space="preserve">
          <source>Starting Up Emacs</source>
          <target state="translated">Emacsの起動</target>
        </trans-unit>
        <trans-unit id="74062b33252335d40cb019315c4d7cb3781b2016" translate="yes" xml:space="preserve">
          <source>Starting at &lt;var&gt;file&lt;/var&gt;, go up the directory tree hierarchy looking for the first directory where &lt;var&gt;name&lt;/var&gt;, a string, exists, and return that directory. If &lt;var&gt;file&lt;/var&gt; is a file, its directory will serve as the starting point for the search; otherwise &lt;var&gt;file&lt;/var&gt; should be a directory from which to start. The function looks in the starting directory, then in its parent, then in its parent&amp;rsquo;s parent, etc., until it either finds a directory with &lt;var&gt;name&lt;/var&gt; or reaches the root directory of the filesystem without finding &lt;var&gt;name&lt;/var&gt; &amp;ndash; in the latter case the function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Starting at &lt;var&gt;file&lt;/var&gt; , go up the directory tree hierarchy looking for the first directory where &lt;var&gt;name&lt;/var&gt; , a string, exists, and return that directory. If &lt;var&gt;file&lt;/var&gt; is a file, its directory will serve as the starting point for the search; otherwise &lt;var&gt;file&lt;/var&gt; should be a directory from which to start. The function looks in the starting directory, then in its parent, then in its parent&amp;rsquo;s parent, etc., until it either finds a directory with &lt;var&gt;name&lt;/var&gt; or reaches the root directory of the filesystem without finding &lt;var&gt;name&lt;/var&gt; &amp;ndash; in the latter case the function returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c5931c52db0f7c9b56fa981421d875aea089f4a" translate="yes" xml:space="preserve">
          <source>Starting up an asynchronous subprocess.</source>
          <target state="translated">非同期サブプロセスの起動。</target>
        </trans-unit>
        <trans-unit id="bd4874061d65a5fe51703b703c5dc96a5366658b" translate="yes" xml:space="preserve">
          <source>Step into the function or macro called by the form after point (&lt;code&gt;edebug-step-in&lt;/code&gt;).</source>
          <target state="translated">Step into the function or macro called by the form after point ( &lt;code&gt;edebug-step-in&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7271070f43092cbdb3a2dc9d33cc6f38a4434b59" translate="yes" xml:space="preserve">
          <source>Step through evaluation, stopping before and after each expression.</source>
          <target state="translated">各式の前後に停止して、評価をステップスルーする。</target>
        </trans-unit>
        <trans-unit id="afb9c4219a9fca6d6695cb2f9fd74289983e822e" translate="yes" xml:space="preserve">
          <source>Step: stop at the next stop point encountered (&lt;code&gt;edebug-step-mode&lt;/code&gt;).</source>
          <target state="translated">Step: stop at the next stop point encountered ( &lt;code&gt;edebug-step-mode&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bf3db823911d97a04808ac8d71fb80673237f37f" translate="yes" xml:space="preserve">
          <source>Stickiness of Text Properties</source>
          <target state="translated">テキストプロパティの粘着性</target>
        </trans-unit>
        <trans-unit id="73a56401445bf48bbc580b621365416dd5662059" translate="yes" xml:space="preserve">
          <source>Stop when a specified condition is true (the global break event).</source>
          <target state="translated">指定された条件が真の場合(グローバルブレークイベント)に停止します。</target>
        </trans-unit>
        <trans-unit id="ee49906b307cd7d777db69d53725648eb42851a9" translate="yes" xml:space="preserve">
          <source>Stop when an error occurs.</source>
          <target state="translated">エラーが発生したら停止します。</target>
        </trans-unit>
        <trans-unit id="487685a4dbd79e7200d063c4be4f49604475cadc" translate="yes" xml:space="preserve">
          <source>Stop: don&amp;rsquo;t execute any more of the program, but wait for more Edebug commands (&lt;code&gt;edebug-stop&lt;/code&gt;).</source>
          <target state="translated">Stop: don&amp;rsquo;t execute any more of the program, but wait for more Edebug commands ( &lt;code&gt;edebug-stop&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="31f0273c76fb8be29e34541d1b84b455e0a57940" translate="yes" xml:space="preserve">
          <source>Stopping and debugging a program that doesn&amp;rsquo;t exit.</source>
          <target state="translated">Stopping and debugging a program that doesn&amp;rsquo;t exit.</target>
        </trans-unit>
        <trans-unit id="c2ee59e3c13e44a75eea6b735a0def36a7fbb9cf" translate="yes" xml:space="preserve">
          <source>Stopping, continuing or interrupting an asynchronous subprocess.</source>
          <target state="translated">非同期サブプロセスを停止、継続、または中断します。</target>
        </trans-unit>
        <trans-unit id="6e58999d67176d7d4be41cd3d7406dfa152c9698" translate="yes" xml:space="preserve">
          <source>Storing a new element into the copy does not affect the original &lt;var&gt;seqr&lt;/var&gt;, and vice versa. However, the elements of the copy are not copies; they are identical (&lt;code&gt;eq&lt;/code&gt;) to the elements of the original. Therefore, changes made within these elements, as found via the copy, are also visible in the original.</source>
          <target state="translated">Storing a new element into the copy does not affect the original &lt;var&gt;seqr&lt;/var&gt; , and vice versa. However, the elements of the copy are not copies; they are identical ( &lt;code&gt;eq&lt;/code&gt; ) to the elements of the original. Therefore, changes made within these elements, as found via the copy, are also visible in the original.</target>
        </trans-unit>
        <trans-unit id="acba2590adbad867e7ee32a30a64baa23a3ddda6" translate="yes" xml:space="preserve">
          <source>Storing new pieces into an existing list.</source>
          <target state="translated">既存のリストに新しいピースを格納します。</target>
        </trans-unit>
        <trans-unit id="f4ae959bbae79653cf7482860a25946d20203a39" translate="yes" xml:space="preserve">
          <source>Storing new values in variables.</source>
          <target state="translated">新しい値を変数に格納します。</target>
        </trans-unit>
        <trans-unit id="36b771ea78f36aaca88615f92f79a496fa5014ae" translate="yes" xml:space="preserve">
          <source>Stream Type</source>
          <target state="translated">流れの種類</target>
        </trans-unit>
        <trans-unit id="91053c026e89853b3b1fc9031a5540a7ba017708" translate="yes" xml:space="preserve">
          <source>Streams have no special printed representation or read syntax, and print as whatever primitive type they are.</source>
          <target state="translated">ストリームには特別な印刷表現や読み込み構文はなく、プリミティブ型として印刷されます。</target>
        </trans-unit>
        <trans-unit id="f108e8c4c424f1f568b49ce8bb536a0308984959" translate="yes" xml:space="preserve">
          <source>String Type</source>
          <target state="translated">文字列型</target>
        </trans-unit>
        <trans-unit id="cb59712335f80b3ad9d8b0d93ccf243b5c3a20f8" translate="yes" xml:space="preserve">
          <source>String and Character Basics</source>
          <target state="translated">文字列と文字の基本</target>
        </trans-unit>
        <trans-unit id="8fe42618d7b6cfa52c808fbe217b818fa40a6415" translate="yes" xml:space="preserve">
          <source>String of length &lt;var&gt;len&lt;/var&gt;.</source>
          <target state="translated">String of length &lt;var&gt;len&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7d603b9285c023b2f4395052cd47592c7d8ccbdc" translate="yes" xml:space="preserve">
          <source>String quotes: &amp;lsquo;</source>
          <target state="translated">String quotes: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="6abd0fa70f27d8c99f6685f793aa1f5d8b32f68c" translate="yes" xml:space="preserve">
          <source>String text properties (see &lt;a href=&quot;text-props-and-strings#Text-Props-and-Strings&quot;&gt;Text Props and Strings&lt;/a&gt;).</source>
          <target state="translated">String text properties (see &lt;a href=&quot;text-props-and-strings#Text-Props-and-Strings&quot;&gt;Text Props and Strings&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="0d74347fc75698be024347e47807ce08d6bc74cb" translate="yes" xml:space="preserve">
          <source>String, the basic object to represent a sequence of characters.</source>
          <target state="translated">文字列、文字列を表現するための基本的なオブジェクト。</target>
        </trans-unit>
        <trans-unit id="38234af461af7877a358d129bf9921b0686f9d7b" translate="yes" xml:space="preserve">
          <source>Strings and Characters</source>
          <target state="translated">文字列と文字</target>
        </trans-unit>
        <trans-unit id="a04879cafada11859b38ec71a34a65c779b124cf" translate="yes" xml:space="preserve">
          <source>Strings are printed in a way that shows the contents more clearly as text.</source>
          <target state="translated">文字列は、内容がテキストとしてよりわかりやすく表示されるように印刷されています。</target>
        </trans-unit>
        <trans-unit id="312a31ffe0a95b40adfad3ecca2362f2bcbf4737" translate="yes" xml:space="preserve">
          <source>Strings are useful for holding regular expressions. You can also match regular expressions against strings with &lt;code&gt;string-match&lt;/code&gt; (see &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;). The functions &lt;code&gt;match-string&lt;/code&gt; (see &lt;a href=&quot;simple-match-data#Simple-Match-Data&quot;&gt;Simple Match Data&lt;/a&gt;) and &lt;code&gt;replace-match&lt;/code&gt; (see &lt;a href=&quot;replacing-match#Replacing-Match&quot;&gt;Replacing Match&lt;/a&gt;) are useful for decomposing and modifying strings after matching regular expressions against them.</source>
          <target state="translated">Strings are useful for holding regular expressions. You can also match regular expressions against strings with &lt;code&gt;string-match&lt;/code&gt; (see &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;). The functions &lt;code&gt;match-string&lt;/code&gt; (see &lt;a href=&quot;simple-match-data#Simple-Match-Data&quot;&gt;Simple Match Data&lt;/a&gt;) and &lt;code&gt;replace-match&lt;/code&gt; (see &lt;a href=&quot;replacing-match#Replacing-Match&quot;&gt;Replacing Match&lt;/a&gt;) are useful for decomposing and modifying strings after matching regular expressions against them.</target>
        </trans-unit>
        <trans-unit id="adc7fc82d0441f5290d940cd2f39dfabb2bc48ca" translate="yes" xml:space="preserve">
          <source>Strings can hold text properties. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">Strings can hold text properties. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4eaa0362c84fce49db7e597e423a36c588e53c10" translate="yes" xml:space="preserve">
          <source>Strings cannot hold characters that have the hyper, super, or alt modifiers.</source>
          <target state="translated">ハイパー、スーパー、アルトの修飾を持つキャラクターを文字列で保持することはできません。</target>
        </trans-unit>
        <trans-unit id="93e954389aa2437836be9750f15e9989fcad0f41" translate="yes" xml:space="preserve">
          <source>Strings used as mode line constructs can use certain &lt;code&gt;%&lt;/code&gt;-constructs to substitute various kinds of data. The following is a list of the defined &lt;code&gt;%&lt;/code&gt;-constructs, and what they mean.</source>
          <target state="translated">Strings used as mode line constructs can use certain &lt;code&gt;%&lt;/code&gt; -constructs to substitute various kinds of data. The following is a list of the defined &lt;code&gt;%&lt;/code&gt; -constructs, and what they mean.</target>
        </trans-unit>
        <trans-unit id="b653bd81ca3912b224baeff0926b4e03095893ef" translate="yes" xml:space="preserve">
          <source>Strings with text properties.</source>
          <target state="translated">テキストのプロパティを持つ文字列。</target>
        </trans-unit>
        <trans-unit id="2cce0fb0a511beb01dea38408de31586ec24e3ac" translate="yes" xml:space="preserve">
          <source>Strings, and functions that work on them.</source>
          <target state="translated">文字列と、それに対応する関数。</target>
        </trans-unit>
        <trans-unit id="6a88e785478716116bb427043ee234db36f433e0" translate="yes" xml:space="preserve">
          <source>Structural patterns matching.</source>
          <target state="translated">構造パターンのマッチング。</target>
        </trans-unit>
        <trans-unit id="1d89e3a40a37f901d436745151d243ec2fe344eb" translate="yes" xml:space="preserve">
          <source>Subprocess input is normally encoded using a coding system before the subprocess receives it, much like text written into a file. You can use &lt;code&gt;set-process-coding-system&lt;/code&gt; to specify which coding system to use (see &lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;). Otherwise, the coding system comes from &lt;code&gt;coding-system-for-write&lt;/code&gt;, if that is non-&lt;code&gt;nil&lt;/code&gt;; or else from the defaulting mechanism (see &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;Default Coding Systems&lt;/a&gt;).</source>
          <target state="translated">Subprocess input is normally encoded using a coding system before the subprocess receives it, much like text written into a file. You can use &lt;code&gt;set-process-coding-system&lt;/code&gt; to specify which coding system to use (see &lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;). Otherwise, the coding system comes from &lt;code&gt;coding-system-for-write&lt;/code&gt; , if that is non- &lt;code&gt;nil&lt;/code&gt; ; or else from the defaulting mechanism (see &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;Default Coding Systems&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="7b080c9447a1ecf41b75077528dfec8eb853f0f9" translate="yes" xml:space="preserve">
          <source>Subroutines of Visiting</source>
          <target state="translated">訪問のサブルーチン</target>
        </trans-unit>
        <trans-unit id="093eff7403b55d58228ccc595fbcabc5c85608d7" translate="yes" xml:space="preserve">
          <source>Subroutines of the debugger, and global variables.</source>
          <target state="translated">デバッガのサブルーチン、グローバル変数。</target>
        </trans-unit>
        <trans-unit id="25e0b48656a6b164628b6c6b6d82df48078872d3" translate="yes" xml:space="preserve">
          <source>Subroutines used by Emacs help facilities.</source>
          <target state="translated">Emacsのヘルプ機能で使用されるサブルーチンです。</target>
        </trans-unit>
        <trans-unit id="67dd770dfb2f7ffde16df8bb49d2263954a8cf45" translate="yes" xml:space="preserve">
          <source>Subsequently, when the session manager restarts Emacs, it loads the session file automatically (see &lt;a href=&quot;loading#Loading&quot;&gt;Loading&lt;/a&gt;). This is performed by a function named &lt;code&gt;emacs-session-restore&lt;/code&gt;, which is called during startup. See &lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;Startup Summary&lt;/a&gt;.</source>
          <target state="translated">Subsequently, when the session manager restarts Emacs, it loads the session file automatically (see &lt;a href=&quot;loading#Loading&quot;&gt;Loading&lt;/a&gt;). This is performed by a function named &lt;code&gt;emacs-session-restore&lt;/code&gt; , which is called during startup. See &lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;Startup Summary&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a73c2ab3e4626d37cb5af186dd9f2e2601f31a0a" translate="yes" xml:space="preserve">
          <source>Substitute the item&amp;rsquo;s documentation string.</source>
          <target state="translated">Substitute the item&amp;rsquo;s documentation string.</target>
        </trans-unit>
        <trans-unit id="3ca7315f402b0309eb0c3a55ef4de7844f341637" translate="yes" xml:space="preserve">
          <source>Substitute the item&amp;rsquo;s value. How the value is represented depends on the kind of item, and (for variables) on the customization type.</source>
          <target state="translated">Substitute the item&amp;rsquo;s value. How the value is represented depends on the kind of item, and (for variables) on the customization type.</target>
        </trans-unit>
        <trans-unit id="007b30ab1586036ff160691f2ccfd70ad240895d" translate="yes" xml:space="preserve">
          <source>Substitute the tag here. You specify the tag with the &lt;code&gt;:tag&lt;/code&gt; keyword.</source>
          <target state="translated">Substitute the tag here. You specify the tag with the &lt;code&gt;:tag&lt;/code&gt; keyword.</target>
        </trans-unit>
        <trans-unit id="0e4fa6c66312836e51f8ea059b021e941801d463" translate="yes" xml:space="preserve">
          <source>Substituting Key Bindings in Documentation</source>
          <target state="translated">ドキュメントのキーバインドの代用</target>
        </trans-unit>
        <trans-unit id="abdc864d36ff8fc40c8546b4a8bc357cc605fc0f" translate="yes" xml:space="preserve">
          <source>Substituting current key bindings.</source>
          <target state="translated">現在のキーバインドを置換します。</target>
        </trans-unit>
        <trans-unit id="c1abe833a18689a680b16c7b259b625606a4e535" translate="yes" xml:space="preserve">
          <source>Substituting for a Character Code</source>
          <target state="translated">文字コードの置換</target>
        </trans-unit>
        <trans-unit id="b2eacbf17e876f3b3299eb6ed0ee358ba7866c3f" translate="yes" xml:space="preserve">
          <source>Substitution with &amp;lsquo;</source>
          <target state="translated">Substitution with &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5f025a7aa71e06047c91fc6b6f430170e62e7631" translate="yes" xml:space="preserve">
          <source>Subtracting 4 from -1 returns the negative integer -5. In binary, the decimal integer 4 is 100. Consequently, -5 looks like this:</source>
          <target state="translated">1 から 4 を引くと負の整数 -5 が得られます。 2 進数では、10 進数の 4 は 100 です。その結果、-5は次のようになります。</target>
        </trans-unit>
        <trans-unit id="b60ed248bac24498f595b73037a78877ce7bb18a" translate="yes" xml:space="preserve">
          <source>Such a &lt;code&gt;setf&lt;/code&gt; call is documented to return &lt;var&gt;value&lt;/var&gt;. This is no problem with, e.g., &lt;code&gt;car&lt;/code&gt; and &lt;code&gt;setcar&lt;/code&gt;, because &lt;code&gt;setcar&lt;/code&gt; returns the value that it set. If your &lt;var&gt;setter&lt;/var&gt; function does not return &lt;var&gt;value&lt;/var&gt;, use a non-&lt;code&gt;nil&lt;/code&gt; value for the &lt;var&gt;fix-return&lt;/var&gt; argument of &lt;code&gt;gv-define-simple-setter&lt;/code&gt;. This expands into something equivalent to</source>
          <target state="translated">Such a &lt;code&gt;setf&lt;/code&gt; call is documented to return &lt;var&gt;value&lt;/var&gt; . This is no problem with, e.g., &lt;code&gt;car&lt;/code&gt; and &lt;code&gt;setcar&lt;/code&gt; , because &lt;code&gt;setcar&lt;/code&gt; returns the value that it set. If your &lt;var&gt;setter&lt;/var&gt; function does not return &lt;var&gt;value&lt;/var&gt; , use a non- &lt;code&gt;nil&lt;/code&gt; value for the &lt;var&gt;fix-return&lt;/var&gt; argument of &lt;code&gt;gv-define-simple-setter&lt;/code&gt; . This expands into something equivalent to</target>
        </trans-unit>
        <trans-unit id="f8f63383c2f4d857013ba4e80a7ed237472ac989" translate="yes" xml:space="preserve">
          <source>Such a derived mode should use &lt;code&gt;define-derived-mode&lt;/code&gt; in the usual way, specifying &lt;code&gt;tabulated-list-mode&lt;/code&gt; as the second argument (see &lt;a href=&quot;derived-modes#Derived-Modes&quot;&gt;Derived Modes&lt;/a&gt;). The body of the &lt;code&gt;define-derived-mode&lt;/code&gt; form should specify the format of the tabulated data, by assigning values to the variables documented below; optionally, it can then call the function &lt;code&gt;tabulated-list-init-header&lt;/code&gt;, which will populate a header with the names of the columns.</source>
          <target state="translated">Such a derived mode should use &lt;code&gt;define-derived-mode&lt;/code&gt; in the usual way, specifying &lt;code&gt;tabulated-list-mode&lt;/code&gt; as the second argument (see &lt;a href=&quot;derived-modes#Derived-Modes&quot;&gt;Derived Modes&lt;/a&gt;). The body of the &lt;code&gt;define-derived-mode&lt;/code&gt; form should specify the format of the tabulated data, by assigning values to the variables documented below; optionally, it can then call the function &lt;code&gt;tabulated-list-init-header&lt;/code&gt; , which will populate a header with the names of the columns.</target>
        </trans-unit>
        <trans-unit id="b6df4c00806252d0a6d6afb58ce616ca3c7105b0" translate="yes" xml:space="preserve">
          <source>Such a token is expected to have an associative syntax and be closely tied to its syntactic parent. Typical examples are &lt;code&gt;&quot;,&quot;&lt;/code&gt; in lists of arguments (enclosed inside parentheses), or &lt;code&gt;&quot;;&quot;&lt;/code&gt; in sequences of instructions (enclosed in a &lt;code&gt;{...}&lt;/code&gt; or &lt;code&gt;begin...end&lt;/code&gt; block).</source>
          <target state="translated">Such a token is expected to have an associative syntax and be closely tied to its syntactic parent. Typical examples are &lt;code&gt;&quot;,&quot;&lt;/code&gt; in lists of arguments (enclosed inside parentheses), or &lt;code&gt;&quot;;&quot;&lt;/code&gt; in sequences of instructions (enclosed in a &lt;code&gt;{...}&lt;/code&gt; or &lt;code&gt;begin...end&lt;/code&gt; block).</target>
        </trans-unit>
        <trans-unit id="4140942d94a16976c754d818601c78652208ca0e" translate="yes" xml:space="preserve">
          <source>Summary: Sequence of Actions at Startup</source>
          <target state="translated">まとめ:スタートアップでの一連の行動</target>
        </trans-unit>
        <trans-unit id="08464d171e5fdd753bc5fb2c51634ef09a932c8e" translate="yes" xml:space="preserve">
          <source>Super-fast lookup tables.</source>
          <target state="translated">超高速ルックアップテーブル。</target>
        </trans-unit>
        <trans-unit id="05c7d1a2ae021142c75d72d53554c700ba31b094" translate="yes" xml:space="preserve">
          <source>Supplying functions to be run when text is changed.</source>
          <target state="translated">テキストが変更されたときに実行される関数を提供します。</target>
        </trans-unit>
        <trans-unit id="b6b3070fa58330bf1fdabab1211f527dffa367e9" translate="yes" xml:space="preserve">
          <source>Support functions for buffer display.</source>
          <target state="translated">バッファ表示のサポート機能。</target>
        </trans-unit>
        <trans-unit id="f4078c217273780eedae505847867aeab6c0b5a2" translate="yes" xml:space="preserve">
          <source>Supported image formats (and the required support libraries) include PBM and XBM (which do not depend on support libraries and are always available), XPM (&lt;code&gt;libXpm&lt;/code&gt;), GIF (&lt;code&gt;libgif&lt;/code&gt; or &lt;code&gt;libungif&lt;/code&gt;), JPEG (&lt;code&gt;libjpeg&lt;/code&gt;), TIFF (&lt;code&gt;libtiff&lt;/code&gt;), PNG (&lt;code&gt;libpng&lt;/code&gt;), and SVG (&lt;code&gt;librsvg&lt;/code&gt;).</source>
          <target state="translated">Supported image formats (and the required support libraries) include PBM and XBM (which do not depend on support libraries and are always available), XPM ( &lt;code&gt;libXpm&lt;/code&gt; ), GIF ( &lt;code&gt;libgif&lt;/code&gt; or &lt;code&gt;libungif&lt;/code&gt; ), JPEG ( &lt;code&gt;libjpeg&lt;/code&gt; ), TIFF ( &lt;code&gt;libtiff&lt;/code&gt; ), PNG ( &lt;code&gt;libpng&lt;/code&gt; ), and SVG ( &lt;code&gt;librsvg&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="04bb7e493ad9cbc8a10573a514fcacb2acaa12c5" translate="yes" xml:space="preserve">
          <source>Supported image formats.</source>
          <target state="translated">サポートされている画像フォーマット。</target>
        </trans-unit>
        <trans-unit id="e8997d9f3adf251389a6fbfcc32f8bb33cb4b85f" translate="yes" xml:space="preserve">
          <source>Supports body text.</source>
          <target state="translated">本文に対応しています。</target>
        </trans-unit>
        <trans-unit id="42b5543e20fb801faa0dbcdef65661291606f752" translate="yes" xml:space="preserve">
          <source>Supports display of exactly 1 frame of any given image array. This value is mutually exclusive with &lt;code&gt;:icon-multi&lt;/code&gt;.</source>
          <target state="translated">Supports display of exactly 1 frame of any given image array. This value is mutually exclusive with &lt;code&gt;:icon-multi&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ca0d2ae7e298231a07cee235b1817de8483e1c3" translate="yes" xml:space="preserve">
          <source>Supports markup in the body text.</source>
          <target state="translated">本文のマークアップをサポートします。</target>
        </trans-unit>
        <trans-unit id="b51d9c26e03bbfcbdc6367abc6918bc8e31a705d" translate="yes" xml:space="preserve">
          <source>Suppose an application wants to display</source>
          <target state="translated">アプリケーションが</target>
        </trans-unit>
        <trans-unit id="bcaf8bc0f48ac72f7484ebf07b7b56ba0df49250" translate="yes" xml:space="preserve">
          <source>Suppose now that, before evaluating the new form, you have made the selected window as small as possible, for example, by evaluating the form &lt;code&gt;(fit-window-to-buffer)&lt;/code&gt; in that window. In that case, &lt;code&gt;display-buffer&lt;/code&gt; would have failed to split the selected window and would have split the frame&amp;rsquo;s root window instead, effectively displaying</source>
          <target state="translated">ここで、新しいフォームを評価する前に、たとえば、その &lt;code&gt;(fit-window-to-buffer)&lt;/code&gt; フォーム（fit-window-to-buffer）を評価することにより、選択したウィンドウをできるだけ小さくしたとします。その場合、 &lt;code&gt;display-buffer&lt;/code&gt; は選択されたウィンドウの分割に失敗し、代わりにフレームのルートウィンドウを分割して、効果的に表示します。</target>
        </trans-unit>
        <trans-unit id="df559b92a7d2233e611ca09f4b9a811772b2f4c8" translate="yes" xml:space="preserve">
          <source>Suppose that you visit a file and make changes in its buffer, and meanwhile the file itself is changed on disk. At this point, saving the buffer would overwrite the changes in the file. Occasionally this may be what you want, but usually it would lose valuable information. Emacs therefore checks the file&amp;rsquo;s modification time using the functions described below before saving the file. (See &lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;File Attributes&lt;/a&gt;, for how to examine a file&amp;rsquo;s modification time.)</source>
          <target state="translated">ファイルにアクセスしてそのバッファを変更し、その間にファイル自体がディスク上で変更されたとします。この時点で、バッファを保存すると、ファイル内の変更が上書きされます。時折、これはあなたが望むものかもしれませんが、通常それは貴重な情報を失うでしょう。したがって、Emacsはファイルを保存する前に、以下に説明する関数を使用してファイルの変更時間をチェックします。（ファイルの変更時刻を調べる方法については、&lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;ファイル属性を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="219eb5ac71cca83cb58c14a2b0425a61a20f66fd" translate="yes" xml:space="preserve">
          <source>Suppose we attempt to fix this problem by coalescing the two intervals when the text is inserted. That works fine if the buffer originally was a single interval. But suppose instead that we have two adjacent intervals with the same properties, and we kill the text of one interval and yank it back. The same interval-coalescence feature that rescues the other case causes trouble in this one: after yanking, we have just one interval. Once again, editing does not preserve the distinction between one interval and two.</source>
          <target state="translated">テキストが挿入されたときに2つの間隔を合体させることでこの問題を解決しようとしたとしましょう。バッファが元々 1 つの間隔であれば問題なく動作します。しかし、同じプロパティを持つ 2 つの隣接する間隔があり、一方の間隔のテキストを削除して元に戻したとします。別のケースでは、同じ間隔の合体機能が問題を引き起こします。繰り返しになりますが、編集では1つの区間と2つの区間の区別は維持されません。</target>
        </trans-unit>
        <trans-unit id="af47e3ccfe9130dd6fcb9fc8114f35373a9a41be" translate="yes" xml:space="preserve">
          <source>Suppose we would like to define a Lisp construct to increment a variable value, much like the &lt;code&gt;++&lt;/code&gt; operator in C. We would like to write &lt;code&gt;(inc x)&lt;/code&gt; and have the effect of &lt;code&gt;(setq x (1+ x))&lt;/code&gt;. Here&amp;rsquo;s a macro definition that does the job:</source>
          <target state="translated">Cの &lt;code&gt;++&lt;/code&gt; 演算子のように、変数値をインクリメントするLisp構造を定義したいとします。 &lt;code&gt;(inc x)&lt;/code&gt; を記述し、 &lt;code&gt;(setq x (1+ x))&lt;/code&gt; の効果を持たせたいとします。これがその仕事をするマクロ定義です：</target>
        </trans-unit>
        <trans-unit id="26931a48564f94873900bd9220bea0cbb44b7764" translate="yes" xml:space="preserve">
          <source>Suppose you have the text &amp;lsquo;</source>
          <target state="translated">あなたがテキストを持っているとしましょう '</target>
        </trans-unit>
        <trans-unit id="9b270516053d0053aba4f69eadf03f5c450b89da" translate="yes" xml:space="preserve">
          <source>Suppose you take the buffer with just one interval and kill part of the text. The text remaining in the buffer is one interval, and the copy in the kill ring (and the undo list) becomes a separate interval. Then if you yank back the killed text, you get two intervals with the same properties. Thus, editing does not preserve the distinction between one interval and two.</source>
          <target state="translated">インターバルが1つだけのバッファを取り、テキストの一部をキルしたとします。バッファに残っているテキストは 1 つのインターバルになり、キルリング内のコピー(およびアンドゥリスト)は別のインターバルになります。そして、キルされたテキストを元に戻すと、同じプロパティを持つ2つのインターバルが得られます。このように、編集は 1 つの間隔と 2 つの間隔の区別を保持しません。</target>
        </trans-unit>
        <trans-unit id="a109b035fd9deb6e7df0a207b931c1581854bda8" translate="yes" xml:space="preserve">
          <source>Surviving power and media failures</source>
          <target state="translated">権力とメディアの失敗を生き抜く</target>
        </trans-unit>
        <trans-unit id="5bff6745b282307e07875a064490d9c4687f8835" translate="yes" xml:space="preserve">
          <source>Suspending Emacs</source>
          <target state="translated">Emacsのサスペンド</target>
        </trans-unit>
        <trans-unit id="08973290af86b405251120bf5a29b78c688529fc" translate="yes" xml:space="preserve">
          <source>Suspending works only on a terminal device from which the Emacs session was started. We call that device the &lt;em&gt;controlling terminal&lt;/em&gt; of the session. Suspending is not allowed if the controlling terminal is a graphical terminal. Suspending is usually not relevant in graphical environments, since you can simply switch to another application without doing anything special to Emacs.</source>
          <target state="translated">一時停止は、Emacsセッションが開始された端末デバイスでのみ機能します。そのデバイスをセッションの&lt;em&gt;制御端末&lt;/em&gt;と呼びます。制御端末がグラフィカル端末の場合、一時停止は許可されません。 Emacsに特別なことを何もせずに別のアプリケーションに切り替えることができるため、一時停止は通常、グラフィカル環境には関係ありません。</target>
        </trans-unit>
        <trans-unit id="32ee44a8262f0fae64d7177c1505204bc370319c" translate="yes" xml:space="preserve">
          <source>Swapping Text Between Two Buffers</source>
          <target state="translated">2 つのバッファ間のテキストのスワップ</target>
        </trans-unit>
        <trans-unit id="4a82b9c20c7aff7e3ee725f664f63e978d0cc1b3" translate="yes" xml:space="preserve">
          <source>Swapping text between two buffers.</source>
          <target state="translated">2つのバッファ間でテキストをスワップします。</target>
        </trans-unit>
        <trans-unit id="2a5ed02098c384c5cf06378259a39ba740888593" translate="yes" xml:space="preserve">
          <source>Swapping two portions of a buffer.</source>
          <target state="translated">バッファの2つの部分をスワップします。</target>
        </trans-unit>
        <trans-unit id="2b23aaf510c9fd8add454744ad9210224c42cc09" translate="yes" xml:space="preserve">
          <source>Switch &lt;var&gt;stream&lt;/var&gt; into binary or text I/O mode. If &lt;var&gt;mode&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, switch to binary mode, otherwise switch to text mode. The value of &lt;var&gt;stream&lt;/var&gt; can be one of &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, or &lt;code&gt;stderr&lt;/code&gt;. This function flushes any pending output data of &lt;var&gt;stream&lt;/var&gt; as a side effect, and returns the previous value of I/O mode for &lt;var&gt;stream&lt;/var&gt;. On POSIX hosts, it always returns a non-&lt;code&gt;nil&lt;/code&gt; value and does nothing except flushing pending output.</source>
          <target state="translated">スイッチの &lt;var&gt;stream&lt;/var&gt; バイナリまたはテキストI / Oモードに。 &lt;var&gt;mode&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、バイナリモードに切り替えます。それ以外の場合は、テキストモードに切り替えます。 &lt;var&gt;stream&lt;/var&gt; の値は、 &lt;code&gt;stdin&lt;/code&gt; 、 &lt;code&gt;stdout&lt;/code&gt; 、または &lt;code&gt;stderr&lt;/code&gt; のいずれかになります。この関数は、副作用として &lt;var&gt;stream&lt;/var&gt; 保留中の出力データをフラッシュし、ストリームのI / Oモードの以前の値を返し &lt;var&gt;stream&lt;/var&gt; 。POSIXホストでは、常に &lt;code&gt;nil&lt;/code&gt; 以外の値を返し、保留中の出力をフラッシュする以外は何もしません。</target>
        </trans-unit>
        <trans-unit id="f5b63f4c6d1c4a0f979dc1b0cbbbc282162114e7" translate="yes" xml:space="preserve">
          <source>Switch back to the source code buffer at the current stop point (&lt;code&gt;edebug-where&lt;/code&gt;).</source>
          <target state="translated">現在の停止ポイント（ &lt;code&gt;edebug-where&lt;/code&gt; ）でソースコードバッファに戻ります。</target>
        </trans-unit>
        <trans-unit id="f586660ad8d54cdb75535156a0f4b842ca132c55" translate="yes" xml:space="preserve">
          <source>Switch to the evaluation list buffer</source>
          <target state="translated">評価リストバッファに切り替える</target>
        </trans-unit>
        <trans-unit id="4f0d1ac6a5d7673289fabb4985e0dcb3d367c9e9" translate="yes" xml:space="preserve">
          <source>Switch to viewing the outside window configuration (&lt;code&gt;edebug-view-outside&lt;/code&gt;). Type</source>
          <target state="translated">外部ウィンドウ構成の表示に切り替えます（ &lt;code&gt;edebug-view-outside&lt;/code&gt; ）。タイプ</target>
        </trans-unit>
        <trans-unit id="ee08222dab072e2ba45c2d93ff5498dc94aa9d8c" translate="yes" xml:space="preserve">
          <source>Switching to a Buffer in a Window</source>
          <target state="translated">ウィンドウ内のバッファへの切り替え</target>
        </trans-unit>
        <trans-unit id="bfba63bf401b528b76ba63345eca345bc4c4a916" translate="yes" xml:space="preserve">
          <source>Symbol Components</source>
          <target state="translated">シンボルコンポーネント</target>
        </trans-unit>
        <trans-unit id="becbc5b150a14bf0d37ff1283d10752a85b77632" translate="yes" xml:space="preserve">
          <source>Symbol Forms</source>
          <target state="translated">シンボルフォーム</target>
        </trans-unit>
        <trans-unit id="85c733cfed2393c082c81f9b72f24cd68d3b4b75" translate="yes" xml:space="preserve">
          <source>Symbol Function Indirection</source>
          <target state="translated">シンボル機能 方向</target>
        </trans-unit>
        <trans-unit id="bb1d81a996278dfb44badfa347a592f8f2e99409" translate="yes" xml:space="preserve">
          <source>Symbol Properties</source>
          <target state="translated">シンボルのプロパティ</target>
        </trans-unit>
        <trans-unit id="4ab0d35e382f128b8ce0cc2aec957f7bbcc05b64" translate="yes" xml:space="preserve">
          <source>Symbol Type</source>
          <target state="translated">シンボルの種類</target>
        </trans-unit>
        <trans-unit id="7cd436f2065e9faa118202e9bec3302aac2eac0c" translate="yes" xml:space="preserve">
          <source>Symbol constituents: &amp;lsquo;</source>
          <target state="translated">記号構成要素： '</target>
        </trans-unit>
        <trans-unit id="9a5aaaaaada89b273110c8fa61f6062a5f48a149" translate="yes" xml:space="preserve">
          <source>Symbol indicating the type of process: &lt;code&gt;real&lt;/code&gt;, &lt;code&gt;network&lt;/code&gt;, &lt;code&gt;serial&lt;/code&gt;.</source>
          <target state="translated">プロセスのタイプを示す記号： &lt;code&gt;real&lt;/code&gt; 、 &lt;code&gt;network&lt;/code&gt; 、 &lt;code&gt;serial&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c64ee34f48f20a70545ff076095a22e58c3cc7c4" translate="yes" xml:space="preserve">
          <source>Symbol naming the major mode of this buffer, e.g., &lt;code&gt;lisp-mode&lt;/code&gt;.</source>
          <target state="translated">このバッファのメジャーモードに名前を付けるシンボル。例： &lt;code&gt;lisp-mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b25692bcd921e1b89def4ec4d805f79777909d1b" translate="yes" xml:space="preserve">
          <source>Symbol's chain of function indirections contains a loop</source>
          <target state="translated">シンボルの関数間接の連鎖にはループが含まれています。</target>
        </trans-unit>
        <trans-unit id="fbc050be35f0f5c2ba873db3d0f0115dc1f98083" translate="yes" xml:space="preserve">
          <source>Symbol's chain of variable indirections contains a loop</source>
          <target state="translated">シンボルの変数間接の連鎖にはループが含まれています。</target>
        </trans-unit>
        <trans-unit id="d3a30e40b8d6ba425ac86d47d16836dcbff02259" translate="yes" xml:space="preserve">
          <source>Symbol's function definition is void</source>
          <target state="translated">シンボルの関数定義は void</target>
        </trans-unit>
        <trans-unit id="470f057f97d94113254493aa56be6e21748f90c9" translate="yes" xml:space="preserve">
          <source>Symbol's value as variable is void</source>
          <target state="translated">シンボルの変数としての値は void</target>
        </trans-unit>
        <trans-unit id="7f50e4f3efa15fc4c958e89b9123d9e3075a04a8" translate="yes" xml:space="preserve">
          <source>Symbol, the unique-named entity commonly used as an identifier.</source>
          <target state="translated">シンボル、識別子として一般的に使用される一意の名前を持つ実体。</target>
        </trans-unit>
        <trans-unit id="ca337136fcbfb609d22bd9c944aa1bc1014b634a" translate="yes" xml:space="preserve">
          <source>Symbolic links are ordinarily followed wherever they appear. For example, to interpret the file name</source>
          <target state="translated">シンボリックリンクは通常、どこに現れてもそれに従います。例えば、ファイル名</target>
        </trans-unit>
        <trans-unit id="3781b4ea1ae4969c3f5f44015d1551029fb94853" translate="yes" xml:space="preserve">
          <source>Symbolic links to subdirectories are not followed by default, but if &lt;var&gt;follow-symlinks&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, they are followed.</source>
          <target state="translated">サブディレクトリへのシンボリックリンクはデフォルトではフォローされていませんが、 &lt;var&gt;follow-symlinks&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、フォローされます。</target>
        </trans-unit>
        <trans-unit id="22ad664e9eb98b75a73333b2b2395fc4b52e6fc9" translate="yes" xml:space="preserve">
          <source>Symbols</source>
          <target state="translated">Symbols</target>
        </trans-unit>
        <trans-unit id="253a36568b141d5436a9968a78875644e83ca0ed" translate="yes" xml:space="preserve">
          <source>Symbols are also allowed as arguments, in which case their print names are compared.</source>
          <target state="translated">記号も引数として使用できますが、その場合は印刷名を比較します。</target>
        </trans-unit>
        <trans-unit id="8ea13201df27e4d4e9cddf6d7c9946cee693eb3a" translate="yes" xml:space="preserve">
          <source>Symbols evaluate as variables.</source>
          <target state="translated">記号は変数として評価します。</target>
        </trans-unit>
        <trans-unit id="2d3e783cbacd15ebf4acb2ac664aa700b758f629" translate="yes" xml:space="preserve">
          <source>Symbols have names, values, function definitions and property lists.</source>
          <target state="translated">シンボルには名前、値、関数定義、プロパティリストがあります。</target>
        </trans-unit>
        <trans-unit id="2005a7cdc65f99cd1c81be057bafd19d16443047" translate="yes" xml:space="preserve">
          <source>Symbols represent names, uniquely.</source>
          <target state="translated">シンボルは名前を一意に表しています。</target>
        </trans-unit>
        <trans-unit id="9cf76066050b13afaf6a6ee2ee11b9e91b21d169" translate="yes" xml:space="preserve">
          <source>Symbols that lack values.</source>
          <target state="translated">価値観を欠いた記号。</target>
        </trans-unit>
        <trans-unit id="5228d3c63616eb47155239a34e8e4de5e26d17d6" translate="yes" xml:space="preserve">
          <source>Synchronous and asynchronous processes are explained in the following sections. Since the three functions are all called in a similar fashion, their common arguments are described here.</source>
          <target state="translated">同期処理と非同期処理については、以下のセクションで説明します。3つの関数はすべて似たような方法で呼び出されるので、ここでは共通の引数について説明します。</target>
        </trans-unit>
        <trans-unit id="18904873557fd40dba5c5b9fc88f48fe871bf6ff" translate="yes" xml:space="preserve">
          <source>Syntactic Font Lock</source>
          <target state="translated">構文フォントロック</target>
        </trans-unit>
        <trans-unit id="bbcd90388ee12409d01b117e198759bcd22bd762" translate="yes" xml:space="preserve">
          <source>Syntactic fontification uses a syntax table (see &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;) to find and highlight syntactically relevant text. If enabled, it runs prior to search-based fontification. The variable &lt;code&gt;font-lock-syntactic-face-function&lt;/code&gt;, documented below, determines which syntactic constructs to highlight. There are several variables that affect syntactic fontification; you should set them by means of &lt;code&gt;font-lock-defaults&lt;/code&gt; (see &lt;a href=&quot;font-lock-basics#Font-Lock-Basics&quot;&gt;Font Lock Basics&lt;/a&gt;).</source>
          <target state="translated">構文フォント表示化は、（参照構文テーブルを使用する&lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;構文テーブルを&lt;/a&gt;検索し、構文的に関連するテキストをハイライトします）。有効にすると、検索ベースのフォント化の前に実行されます。以下に説明する変数 &lt;code&gt;font-lock-syntactic-face-function&lt;/code&gt; は、強調表示する構文構造を決定します。構文のフォント化に影響を与えるいくつかの変数があります。 &lt;code&gt;font-lock-defaults&lt;/code&gt; を使用して設定する必要があります（「&lt;a href=&quot;font-lock-basics#Font-Lock-Basics&quot;&gt;フォントロックの基本&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="93fb6914261c7fea096ef56ee0bc0ee83807bbaa" translate="yes" xml:space="preserve">
          <source>Syntax Descriptors</source>
          <target state="translated">構文記述子</target>
        </trans-unit>
        <trans-unit id="c8ace64cb389fc03ac6b00c6a21c0cf0115f3976" translate="yes" xml:space="preserve">
          <source>Syntax Flags</source>
          <target state="translated">構文フラグ</target>
        </trans-unit>
        <trans-unit id="447b54e6de1c4303a108d0f6ff947b2836f77ba0" translate="yes" xml:space="preserve">
          <source>Syntax Properties</source>
          <target state="translated">構文プロパティ</target>
        </trans-unit>
        <trans-unit id="a149c5cd6e0b85694e66ae83a17367f6e4f00f2b" translate="yes" xml:space="preserve">
          <source>Syntax Table Concepts</source>
          <target state="translated">構文表の概念</target>
        </trans-unit>
        <trans-unit id="f342e58e142aca43d18943035e2f00a54ffc1141" translate="yes" xml:space="preserve">
          <source>Syntax Table Functions</source>
          <target state="translated">構文表関数</target>
        </trans-unit>
        <trans-unit id="45b8f6a0d80faeaa345e6ea9503e6338a8045917" translate="yes" xml:space="preserve">
          <source>Syntax Table Internals</source>
          <target state="translated">構文テーブル内部</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
