<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="4503518694cd70c179b89667db5fbfa45a4ca6ee" translate="yes" xml:space="preserve">
          <source>This function returns the value of property &lt;var&gt;prop&lt;/var&gt; recorded in &lt;var&gt;overlay&lt;/var&gt;, if any. If &lt;var&gt;overlay&lt;/var&gt; does not record any value for that property, but it does have a &lt;code&gt;category&lt;/code&gt; property which is a symbol, that symbol&amp;rsquo;s &lt;var&gt;prop&lt;/var&gt; property is used. Otherwise, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;overlay&lt;/var&gt; に記録されているプロパティ &lt;var&gt;prop&lt;/var&gt; の値を返します（存在する場合）。場合は &lt;var&gt;overlay&lt;/var&gt; そのプロパティのいずれかの値を記録しませんが、それは持っている &lt;code&gt;category&lt;/code&gt; シンボルであるプロパティを、そのシンボルの &lt;var&gt;prop&lt;/var&gt; プロパティが使用されています。それ以外の場合、値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9105c62b4a1d926ff38d1299ab93e35a2919fbef" translate="yes" xml:space="preserve">
          <source>This function returns the value of the &lt;var&gt;attribute&lt;/var&gt; attribute for &lt;var&gt;face&lt;/var&gt; on &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;frame&lt;/var&gt; 上の &lt;var&gt;face&lt;/var&gt; の &lt;var&gt;attribute&lt;/var&gt; 属性の値を返します。</target>
        </trans-unit>
        <trans-unit id="6f176e389d315b7a50953798859f34149626cfa9" translate="yes" xml:space="preserve">
          <source>This function returns the value of the &lt;var&gt;prop&lt;/var&gt; property of the character after position &lt;var&gt;pos&lt;/var&gt; in &lt;var&gt;object&lt;/var&gt; (a buffer or string). The argument &lt;var&gt;object&lt;/var&gt; is optional and defaults to the current buffer.</source>
          <target state="translated">この関数は、の値を返し &lt;var&gt;prop&lt;/var&gt; 位置の後に文字の性質を &lt;var&gt;pos&lt;/var&gt; における &lt;var&gt;object&lt;/var&gt; （バッファまたは列）。引数 &lt;var&gt;object&lt;/var&gt; はオプションであり、デフォルトで現在のバッファになります。</target>
        </trans-unit>
        <trans-unit id="075b90eab5894af9f4f9e464071663474ab35f5e" translate="yes" xml:space="preserve">
          <source>This function returns the value of the &lt;var&gt;propname&lt;/var&gt; property of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;process&lt;/var&gt; &lt;var&gt;propname&lt;/var&gt; プロパティの値を返します。</target>
        </trans-unit>
        <trans-unit id="efe0c4a40bdb5d84b5dbe72cf3d0a28c7f0953c3" translate="yes" xml:space="preserve">
          <source>This function returns the value of the environment variable &lt;var&gt;var&lt;/var&gt;, as a string. &lt;var&gt;var&lt;/var&gt; should be a string. If &lt;var&gt;var&lt;/var&gt; is undefined in the environment, &lt;code&gt;getenv&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. It returns &amp;lsquo;</source>
          <target state="translated">この関数は、環境変数 &lt;var&gt;var&lt;/var&gt; の値を文字列として返します。 &lt;var&gt;var&lt;/var&gt; は文字列である必要があります。 &lt;var&gt;var&lt;/var&gt; が環境で定義されていない場合、 &lt;code&gt;getenv&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。'を返します</target>
        </trans-unit>
        <trans-unit id="39c748e2e7e72fdd72180e9a6638188ec110add9" translate="yes" xml:space="preserve">
          <source>This function returns the value of the extra slot &lt;var&gt;slot&lt;/var&gt; of &lt;var&gt;display-table&lt;/var&gt;. The argument &lt;var&gt;slot&lt;/var&gt; may be a number from 0 to 5 inclusive, or a slot name (symbol). Valid symbols are &lt;code&gt;truncation&lt;/code&gt;, &lt;code&gt;wrap&lt;/code&gt;, &lt;code&gt;escape&lt;/code&gt;, &lt;code&gt;control&lt;/code&gt;, &lt;code&gt;selective-display&lt;/code&gt;, and &lt;code&gt;vertical-border&lt;/code&gt;.</source>
          <target state="translated">この関数は、余分なスロットの値を返す &lt;var&gt;slot&lt;/var&gt; の &lt;var&gt;display-table&lt;/var&gt; 。引数 &lt;var&gt;slot&lt;/var&gt; は、0から5までの数字、またはスロット名（記号）です。有効な記号は、 &lt;code&gt;truncation&lt;/code&gt; 、 &lt;code&gt;wrap&lt;/code&gt; 、 &lt;code&gt;escape&lt;/code&gt; 、 &lt;code&gt;control&lt;/code&gt; 、 &lt;code&gt;selective-display&lt;/code&gt; 、および &lt;code&gt;vertical-border&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8f18f61450a43d462a561ffc70c6e978f59599cd" translate="yes" xml:space="preserve">
          <source>This function returns the value of the font property &lt;var&gt;property&lt;/var&gt; for &lt;var&gt;font&lt;/var&gt;.</source>
          <target state="translated">この関数は、フォントプロパティの値を返す &lt;var&gt;property&lt;/var&gt; のための &lt;var&gt;font&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="807f10a670239e77b2b4ba9807ad2d2cce606160" translate="yes" xml:space="preserve">
          <source>This function returns the value of the parameter &lt;var&gt;parameter&lt;/var&gt; (a symbol) of &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it returns the selected frame&amp;rsquo;s parameter. If &lt;var&gt;frame&lt;/var&gt; has no setting for &lt;var&gt;parameter&lt;/var&gt;, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;frame&lt;/var&gt; パラメータ &lt;var&gt;parameter&lt;/var&gt; （シンボル）の値を返します。 &lt;var&gt;frame&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、選択されたフレームのパラメーターを返します。 &lt;var&gt;frame&lt;/var&gt; に &lt;var&gt;parameter&lt;/var&gt; の設定がない場合、この関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b26c2939bb42dd35ee0dd656bb0ea4d91ecf670d" translate="yes" xml:space="preserve">
          <source>This function returns the value of the parameter &lt;var&gt;parameter&lt;/var&gt; (a symbol) of &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;terminal&lt;/var&gt; has no setting for &lt;var&gt;parameter&lt;/var&gt;, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;terminal&lt;/var&gt; パラメータ &lt;var&gt;parameter&lt;/var&gt; （シンボル）の値を返します。 &lt;var&gt;terminal&lt;/var&gt; に &lt;var&gt;parameter&lt;/var&gt; の設定がない場合、この関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="187556a30a5cf4c0aa76a9f53b09b09697b19161" translate="yes" xml:space="preserve">
          <source>This function returns the value of the property named &lt;var&gt;property&lt;/var&gt; in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s property list. If there is no such property, it returns &lt;code&gt;nil&lt;/code&gt;. Thus, there is no distinction between a value of &lt;code&gt;nil&lt;/code&gt; and the absence of the property.</source>
          <target state="translated">この関数は、指定されたプロパティの値を返す &lt;var&gt;property&lt;/var&gt; で &lt;var&gt;symbol&lt;/var&gt; のプロパティリストを。そのようなプロパティがない場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。したがって、 &lt;code&gt;nil&lt;/code&gt; の値とプロパティがないことの間に区別はありません。</target>
        </trans-unit>
        <trans-unit id="259529c91d319fcd710ed729be8071776d0524ef" translate="yes" xml:space="preserve">
          <source>This function returns the value of the variable &lt;code&gt;sentence-end&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;. Otherwise it returns a default value based on the values of the variables &lt;code&gt;sentence-end-double-space&lt;/code&gt; (see &lt;a href=&quot;filling#Definition-of-sentence_002dend_002ddouble_002dspace&quot;&gt;Definition of sentence-end-double-space&lt;/a&gt;), &lt;code&gt;sentence-end-without-period&lt;/code&gt;, and &lt;code&gt;sentence-end-without-space&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、変数 &lt;code&gt;sentence-end&lt;/code&gt; の値を返します。それ以外の場合は、変数 &lt;code&gt;sentence-end-double-space&lt;/code&gt; （sentence-end-double-spaceの&lt;a href=&quot;filling#Definition-of-sentence_002dend_002ddouble_002dspace&quot;&gt;定義を&lt;/a&gt;参照）、 &lt;code&gt;sentence-end-without-period&lt;/code&gt; 、および &lt;code&gt;sentence-end-without-space&lt;/code&gt; の値に基づいてデフォルト値を返します。</target>
        </trans-unit>
        <trans-unit id="945d25c8c6599043456fe57ba30b826d73620568" translate="yes" xml:space="preserve">
          <source>This function returns the value referred to by the first slot of the cons cell &lt;var&gt;cons-cell&lt;/var&gt;. In other words, it returns the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;cons-cell&lt;/var&gt;.</source>
          <target state="translated">この関数は、consセル &lt;var&gt;cons-cell&lt;/var&gt; の最初のスロットによって参照される値を返します。つまり、 &lt;var&gt;cons-cell&lt;/var&gt; の&lt;small&gt;CAR&lt;/small&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="bdd9e3e659fc1a94f6e09bba836ad3d694cfda8a" translate="yes" xml:space="preserve">
          <source>This function returns the value referred to by the second slot of the cons cell &lt;var&gt;cons-cell&lt;/var&gt;. In other words, it returns the &lt;small&gt;CDR&lt;/small&gt; of &lt;var&gt;cons-cell&lt;/var&gt;.</source>
          <target state="translated">この関数は、consセル &lt;var&gt;cons-cell&lt;/var&gt; の2番目のスロットによって参照される値を返します。つまり、 &lt;var&gt;cons-cell&lt;/var&gt; の&lt;small&gt;CDR&lt;/small&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="4df1821298fd235648893b93d47d1974f41e5d9a" translate="yes" xml:space="preserve">
          <source>This function returns the value stored in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value cell. This is where the variable&amp;rsquo;s current (dynamic) value is stored. If the variable has no local binding, this is simply its global value. If the variable is void, a &lt;code&gt;void-variable&lt;/code&gt; error is signaled.</source>
          <target state="translated">この関数は、 &lt;var&gt;symbol&lt;/var&gt; の値セルに格納されている値を返します。これは、変数の現在の（動的）値が格納される場所です。変数にローカルバインディングがない場合、これは単にそのグローバル値です。変数がvoidの場合、 &lt;code&gt;void-variable&lt;/code&gt; エラーが通知されます。</target>
        </trans-unit>
        <trans-unit id="5e997d0377f2d644978d79629dc832ca0eb37117" translate="yes" xml:space="preserve">
          <source>This function returns the variable at the end of the chain of aliases of &lt;var&gt;variable&lt;/var&gt;. If &lt;var&gt;variable&lt;/var&gt; is not a symbol, or if &lt;var&gt;variable&lt;/var&gt; is not defined as an alias, the function returns &lt;var&gt;variable&lt;/var&gt;.</source>
          <target state="translated">この関数は、変数のエイリアスのチェーンの最後にある変数を返し &lt;var&gt;variable&lt;/var&gt; 。場合 &lt;var&gt;variable&lt;/var&gt; シンボルではない場合、または &lt;var&gt;variable&lt;/var&gt; エイリアスとして定義されていない場合、この関数は返す &lt;var&gt;variable&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="064749a45c343bd22332467a38b5ef53e503fd35" translate="yes" xml:space="preserve">
          <source>This function returns the vendor that provided the window system software (as a string). On GNU and Unix systems this really means whoever distributes the X server. On MS-Windows this is the vendor ID string of the Windows OS (Microsoft).</source>
          <target state="translated">この関数は、ウィンドウシステムソフトウェアを提供したベンダーを (文字列で)返します。GNU や Unix システムでは、これは X サーバを配布している人を意味します。MS-Windows では、これは Windows OS (Microsoft)のベンダ ID 文字列です。</target>
        </trans-unit>
        <trans-unit id="e075bebc78123dcd82e85e5a87586b5aa637a1e8" translate="yes" xml:space="preserve">
          <source>This function returns the visibility status of frame &lt;var&gt;frame&lt;/var&gt;. The value is &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; is visible, &lt;code&gt;nil&lt;/code&gt; if it is invisible, and &lt;code&gt;icon&lt;/code&gt; if it is iconified.</source>
          <target state="translated">この関数は、フレーム &lt;var&gt;frame&lt;/var&gt; 可視性ステータスを返します。値は、 &lt;var&gt;frame&lt;/var&gt; が表示されている場合は &lt;code&gt;t&lt;/code&gt; 、非表示の場合は &lt;code&gt;nil&lt;/code&gt; 、 &lt;code&gt;icon&lt;/code&gt; 化されている場合はiconです。</target>
        </trans-unit>
        <trans-unit id="2129c2bfd0bfc38492f31aab67eef0fa79465208" translate="yes" xml:space="preserve">
          <source>This function returns the visual class for the screen. The value is one of the symbols &lt;code&gt;static-gray&lt;/code&gt; (a limited, unchangeable number of grays), &lt;code&gt;gray-scale&lt;/code&gt; (a full range of grays), &lt;code&gt;static-color&lt;/code&gt; (a limited, unchangeable number of colors), &lt;code&gt;pseudo-color&lt;/code&gt; (a limited number of colors), &lt;code&gt;true-color&lt;/code&gt; (a full range of colors), and &lt;code&gt;direct-color&lt;/code&gt; (a full range of colors).</source>
          <target state="translated">この関数は、画面のビジュアルクラスを返します。値は、 &lt;code&gt;static-gray&lt;/code&gt; （制限された、変更できないグレーの数）、 &lt;code&gt;gray-scale&lt;/code&gt; （グレーの全範囲）、 &lt;code&gt;static-color&lt;/code&gt; （制限された、変更できない色の数）、 &lt;code&gt;pseudo-color&lt;/code&gt; （制限された）のいずれかのシンボルです。色数）、 &lt;code&gt;true-color&lt;/code&gt; （フルレンジのカラー）、 &lt;code&gt;direct-color&lt;/code&gt; （フルレンジのカラー）。</target>
        </trans-unit>
        <trans-unit id="7bf8fcbc9cc0d7cbbe960444ab1ba60cf298f72e" translate="yes" xml:space="preserve">
          <source>This function returns the width in columns of the character &lt;var&gt;char&lt;/var&gt;, if it were displayed in the current buffer (i.e., taking into account the buffer&amp;rsquo;s display table, if any; see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;). The width of a tab character is usually &lt;code&gt;tab-width&lt;/code&gt; (see &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;).</source>
          <target state="translated">この関数は、現在のバッファに表示されている場合、文字 &lt;var&gt;char&lt;/var&gt; の列の幅を返します（つまり、バッファの表示テーブルがある場合はそれを考慮します。「&lt;a href=&quot;display-tables#Display-Tables&quot;&gt;表示テーブル&lt;/a&gt;」を参照してください）。タブ文字の幅は通常、 &lt;code&gt;tab-width&lt;/code&gt; （&lt;a href=&quot;usual-display#Usual-Display&quot;&gt;通常の表示を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b179e9f08e5080729738b01a0f996158e17cd03e" translate="yes" xml:space="preserve">
          <source>This function returns the width in columns of the string &lt;var&gt;string&lt;/var&gt;, if it were displayed in the current buffer and the selected window.</source>
          <target state="translated">この関数は、現在のバッファと選択されたウィンドウに表示されている場合、文字 &lt;var&gt;string&lt;/var&gt; 列の列の幅を返します。</target>
        </trans-unit>
        <trans-unit id="1142d5ef359853a5707ca8cc82ffea17a21a4f67" translate="yes" xml:space="preserve">
          <source>This function returns the width in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s vertical scrollbar.</source>
          <target state="translated">この関数は、 &lt;var&gt;window&lt;/var&gt; の垂直スクロールバーの幅をピクセル単位で返します。</target>
        </trans-unit>
        <trans-unit id="2013a42f7bb928380dac0141954c409c7fa0072b" translate="yes" xml:space="preserve">
          <source>This function returns the width of the left and right margins of &lt;var&gt;window&lt;/var&gt; as a cons cell of the form &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;right&lt;/var&gt;)&lt;/code&gt;. If one of the two marginal areas does not exist, its width is returned as &lt;code&gt;nil&lt;/code&gt;; if neither of the two margins exist, the function returns &lt;code&gt;(nil)&lt;/code&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used.</source>
          <target state="translated">この関数の戻りの左右の余白の幅 &lt;var&gt;window&lt;/var&gt; 形式のコンス・セルとしては、 &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;right&lt;/var&gt;)&lt;/code&gt; 。2つの周辺領域のいずれかが存在しない場合、その幅は &lt;code&gt;nil&lt;/code&gt; として返されます。2つのマージンのどちらも存在しない場合、関数は &lt;code&gt;(nil)&lt;/code&gt; を返します。場合は &lt;var&gt;window&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; の、選択されたウィンドウが使用されています。</target>
        </trans-unit>
        <trans-unit id="d0907d637cfb28a01d5841278d9e6427c7acc3ea" translate="yes" xml:space="preserve">
          <source>This function returns the width of the screen in millimeters, or &lt;code&gt;nil&lt;/code&gt; if Emacs cannot get that information.</source>
          <target state="translated">この関数は、画面の幅をミリメートルで返します。Emacsがその情報を取得できない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3306e398def2a60c093691413e06937f50a33f5f" translate="yes" xml:space="preserve">
          <source>This function returns the width of the screen in pixels. On a character terminal, it gives the width in characters.</source>
          <target state="translated">この関数は、画面の幅をピクセル単位で返します。文字端末では、文字単位での幅を返します。</target>
        </trans-unit>
        <trans-unit id="0dd338d49309a6c82003ef50ca101781abcd92b8" translate="yes" xml:space="preserve">
          <source>This function returns the width of vertical scroll bars of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">この関数は、 &lt;var&gt;frame&lt;/var&gt; 垂直スクロールバーの幅をピクセル単位で返します。</target>
        </trans-unit>
        <trans-unit id="2a84448916a239459fa1a5f8802453916c5c7328" translate="yes" xml:space="preserve">
          <source>This function returns the width of window &lt;var&gt;window&lt;/var&gt; in pixels. &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one.</source>
          <target state="translated">この関数は、ウィンドウ &lt;var&gt;window&lt;/var&gt; の幅をピクセル単位で返します。 &lt;var&gt;window&lt;/var&gt; は有効なウィンドウである必要があり、デフォルトでは選択されたウィンドウになります。</target>
        </trans-unit>
        <trans-unit id="9de541ee6587ff17236cfe047c744b909aab7a17" translate="yes" xml:space="preserve">
          <source>This function returns the width used for displaying the line numbers in the selected window. If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is the symbol &lt;code&gt;columns&lt;/code&gt;, the return value is a float number of the frame&amp;rsquo;s canonical columns; if &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; or any other non-&lt;code&gt;nil&lt;/code&gt; value, the value is an integer and is measured in pixels. If &lt;var&gt;pixelwise&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the value is the integer number of columns of the font defined for the &lt;code&gt;line-number&lt;/code&gt; face, and doesn&amp;rsquo;t include the 2 columns used to pad the numbers on display. If line numbers are not displayed in the selected window, the value is zero regardless of the value of &lt;var&gt;pixelwise&lt;/var&gt;. Use &lt;code&gt;with-selected-window&lt;/code&gt; (see &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;Selecting Windows&lt;/a&gt;) if you need this information about another window.</source>
          <target state="translated">この関数は、選択したウィンドウに行番号を表示するために使用される幅を返します。オプションの引数が &lt;var&gt;pixelwise&lt;/var&gt; でシンボル &lt;code&gt;columns&lt;/code&gt; 場合、戻り値はフレームの正規列の浮動小数点数です。場合は &lt;var&gt;pixelwise&lt;/var&gt; ある &lt;code&gt;t&lt;/code&gt; または他の任意の非 &lt;code&gt;nil&lt;/code&gt; 値は、値が整数であり、ピクセル単位で測定されます。場合 &lt;var&gt;pixelwise&lt;/var&gt; 省略又はれる &lt;code&gt;nil&lt;/code&gt; 、値に対して定義されたフォントの列の整数であり、 &lt;code&gt;line-number&lt;/code&gt; 面、及びパッドにディスプレイ上の数字を使用する2つの列を含んでいません。選択したウィンドウに行番号が表示されない場合、 &lt;var&gt;pixelwise&lt;/var&gt; の値に関係なく、値はゼロです。。別のウィンドウに関するこの情報が必要な場合は &lt;code&gt;with-selected-window&lt;/code&gt; （「ウィンドウの&lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;選択&lt;/a&gt;」を参照）を使用してください。</target>
        </trans-unit>
        <trans-unit id="8b1470ff1170f7e314656753917758e7d8a18fb2" translate="yes" xml:space="preserve">
          <source>This function returns the width, in columns, of the body of window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window; otherwise it must be a live window.</source>
          <target state="translated">この関数は、ウィンドウ &lt;var&gt;window&lt;/var&gt; 本体の幅を列単位で返します。場合は &lt;var&gt;window&lt;/var&gt; 省略されるかされて &lt;code&gt;nil&lt;/code&gt; を、選択されたウィンドウがデフォルト。それ以外の場合は、ライブウィンドウである必要があります。</target>
        </trans-unit>
        <trans-unit id="21f66e4bfbae323395e78a8b0cf8256aab5cb5d0" translate="yes" xml:space="preserve">
          <source>This function returns the window of the currently active minibuffer, or &lt;code&gt;nil&lt;/code&gt; if there is no active minibuffer.</source>
          <target state="translated">この関数は、現在アクティブなミニバッファーのウィンドウを返します。アクティブなミニバッファーがない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a60231c1877eb302888f245f7b22383ebfcec0e9" translate="yes" xml:space="preserve">
          <source>This function returns the window on &lt;var&gt;frame&lt;/var&gt; that is selected within that frame. &lt;var&gt;frame&lt;/var&gt; should be a live frame; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">この関数は、上のウィンドウを返す &lt;var&gt;frame&lt;/var&gt; という枠内で選択されます。 &lt;var&gt;frame&lt;/var&gt; はライブフレームである必要があります。省略または &lt;code&gt;nil&lt;/code&gt; の場合、デフォルトで選択されたフレームになります。</target>
        </trans-unit>
        <trans-unit id="6a661210e2a61073e2823333889f5484457f844a" translate="yes" xml:space="preserve">
          <source>This function returns the window that was selected just before the minibuffer window was selected. If the selected window is not a minibuffer window, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、ミニバッファウィンドウが選択される直前に選択されたウィンドウを返します。選択したウィンドウがミニバッファウィンドウでない場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="94d12ad6c5c22c00edb73203d48adbcaadd7b708" translate="yes" xml:space="preserve">
          <source>This function returns the window with the largest area (height times width). The optional argument &lt;var&gt;all-frames&lt;/var&gt; specifies the windows to search, and has the same meaning as in &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">この関数は、最大の領域（高さ&amp;times;幅）のウィンドウを返します。オプションの引数 &lt;var&gt;all-frames&lt;/var&gt; は、検索するウィンドウを指定し、 &lt;code&gt;next-window&lt;/code&gt; と同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="9fbd3d7f0c06908cdb8522c47e7975e8ca260464" translate="yes" xml:space="preserve">
          <source>This function returns, as a string, the text matched in the last search or match operation. It returns the entire text if &lt;var&gt;count&lt;/var&gt; is zero, or just the portion corresponding to the &lt;var&gt;count&lt;/var&gt;th parenthetical subexpression, if &lt;var&gt;count&lt;/var&gt; is positive.</source>
          <target state="translated">この関数は、最後の検索または一致操作で一致したテキストを文字列として返します。 &lt;var&gt;count&lt;/var&gt; がゼロの場合はテキスト全体を返し、 &lt;var&gt;count&lt;/var&gt; が正の場合は &lt;var&gt;count&lt;/var&gt; 番目の括弧付き部分式に対応する部分のみを返します。</target>
        </trans-unit>
        <trans-unit id="7fd6d52adddbbd5d91f3887b835c21c14b2ea3d6" translate="yes" xml:space="preserve">
          <source>This function reverses the order of the elements of &lt;var&gt;sequence&lt;/var&gt;. Unlike &lt;code&gt;reverse&lt;/code&gt; the original &lt;var&gt;sequence&lt;/var&gt; may be modified.</source>
          <target state="translated">この関数は、 &lt;var&gt;sequence&lt;/var&gt; の要素の順序を逆にします。 &lt;code&gt;reverse&lt;/code&gt; とは異なり、元の &lt;var&gt;sequence&lt;/var&gt; が変更される場合があります。</target>
        </trans-unit>
        <trans-unit id="98315ee8a1b9e67ab0ab383791e14c62d8854661" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; to the nearest integral value, and returns that value as a floating-point number. Rounding a value equidistant between two integers returns the even integer.</source>
          <target state="translated">この関数は、 &lt;var&gt;float&lt;/var&gt; を最も近い整数値に丸め、その値を浮動小数点数として返します。2つの整数間で等距離の値を丸めると、偶数の整数が返されます。</target>
        </trans-unit>
        <trans-unit id="13aa397acbbaec84fbe490588b8ff633ff7ba12d" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; to the next higher integral value, and returns that value as a floating-point number.</source>
          <target state="translated">この関数は、 &lt;var&gt;float&lt;/var&gt; を次に高い整数値に丸め、その値を浮動小数点数として返します。</target>
        </trans-unit>
        <trans-unit id="429cf327bccffa5e35a7f4a691e24f83baaa5ff4" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; to the next lower integral value, and returns that value as a floating-point number.</source>
          <target state="translated">この関数は、 &lt;var&gt;float&lt;/var&gt; を次に低い整数値に丸め、その値を浮動小数点数として返します。</target>
        </trans-unit>
        <trans-unit id="f8d16e0c592b9fbe5194a5feb17be76e41734d46" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; towards zero to an integral value, and returns that value as a floating-point number.</source>
          <target state="translated">この関数は、 &lt;var&gt;float&lt;/var&gt; をゼロに向かって丸めて整数値にし、その値を浮動小数点数として返します。</target>
        </trans-unit>
        <trans-unit id="da140e5ea89fd629df1abd5959a8a330768dbfd8" translate="yes" xml:space="preserve">
          <source>This function runs &lt;code&gt;byte-compile-file&lt;/code&gt; on files specified on the command line. This function must be used only in a batch execution of Emacs, as it kills Emacs on completion. An error in one file does not prevent processing of subsequent files, but no output file will be generated for it, and the Emacs process will terminate with a nonzero status code.</source>
          <target state="translated">この関数は、コマンドラインで指定された &lt;code&gt;byte-compile-file&lt;/code&gt; に対してbyte-compile-fileを実行します。この関数は、完了時にEmacsを強制終了するため、Emacsのバッチ実行でのみ使用する必要があります。1つのファイルでエラーが発生しても、後続のファイルの処理は妨げられませんが、そのファイルの出力ファイルは生成されず、Emacsプロセスはゼロ以外のステータスコードで終了します。</target>
        </trans-unit>
        <trans-unit id="a317f0d5d49216f9538a8bf8585f2c937b1a000d" translate="yes" xml:space="preserve">
          <source>This function runs &lt;var&gt;program&lt;/var&gt;, waits for it to finish, and returns its output as a list of strings. Each string in the list holds a single line of text output by the program; the end-of-line characters are stripped from each line. The arguments beyond &lt;var&gt;program&lt;/var&gt;, &lt;var&gt;args&lt;/var&gt;, are strings that specify command-line arguments with which to run the program.</source>
          <target state="translated">この関数は &lt;var&gt;program&lt;/var&gt; 実行し、プログラムが終了するのを待ち、その出力を文字列のリストとして返します。リスト内の各文字列は、プログラムによって出力される1行のテキストを保持します。行末文字は各行から削除されます。超えた引数 &lt;var&gt;program&lt;/var&gt; 、 &lt;var&gt;args&lt;/var&gt; 、プログラムを実行すると、コマンドライン引数を指定する文字列です。</target>
        </trans-unit>
        <trans-unit id="9611efc90955cf251c81a500281c038ed1b75f2c" translate="yes" xml:space="preserve">
          <source>This function runs an abnormal hook by calling all the hook functions in &lt;var&gt;hook&lt;/var&gt;, passing each one the arguments &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">この機能は、内のすべてのフック関数を呼び出すことにより、異常なフックを実行します &lt;var&gt;hook&lt;/var&gt; 各1つの引数渡し、 &lt;var&gt;args&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="27586fd3faafbdf5c8bd48003a9e03e2e8021db8" translate="yes" xml:space="preserve">
          <source>This function runs an abnormal hook by calling each hook function in turn, stopping if one of them fails by returning &lt;code&gt;nil&lt;/code&gt;. Each hook function is passed the arguments &lt;var&gt;args&lt;/var&gt;. If this function stops because one of the hook functions fails, it returns &lt;code&gt;nil&lt;/code&gt;; otherwise it returns a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">この関数は、各フック関数を順番に呼び出して異常なフックを実行し、いずれかが失敗した場合は &lt;code&gt;nil&lt;/code&gt; を返すことで停止します。各フック関数には、引数 &lt;var&gt;args&lt;/var&gt; が渡されます。フック関数の1つが失敗したためにこの関数が停止した場合、 &lt;code&gt;nil&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;nil&lt;/code&gt; 以外の値を返します。</target>
        </trans-unit>
        <trans-unit id="5bfd164e131ce3c2cc13bf5d4f69f3f2445a2766" translate="yes" xml:space="preserve">
          <source>This function runs an abnormal hook by calling each hook function, stopping if one of them succeeds by returning a non-&lt;code&gt;nil&lt;/code&gt; value. Each hook function is passed the arguments &lt;var&gt;args&lt;/var&gt;. If this function stops because one of the hook functions returns a non-&lt;code&gt;nil&lt;/code&gt; value, it returns that value; otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、各フック関数を呼び出すことによって異常なフックを実行し、いずれかが成功した場合は &lt;code&gt;nil&lt;/code&gt; 以外の値を返すことによって停止します。各フック関数には、引数 &lt;var&gt;args&lt;/var&gt; が渡されます。フック関数の1つが &lt;code&gt;nil&lt;/code&gt; 以外の値を返すためにこの関数が停止した場合、その値を返します。それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6a41f556a3282d76137da7e42fb03282f0f616df" translate="yes" xml:space="preserve">
          <source>This function runs the hook &lt;code&gt;suspend-tty-functions&lt;/code&gt;, passing the terminal object as an argument to each function.</source>
          <target state="translated">この関数はフック &lt;code&gt;suspend-tty-functions&lt;/code&gt; を実行し、ターミナルオブジェクトを引数として各関数に渡します。</target>
        </trans-unit>
        <trans-unit id="e5e49602f0470609a81e7e9d4740ac18eee575a2" translate="yes" xml:space="preserve">
          <source>This function saves the contents of the current buffer in its visited file if the buffer has been modified since it was last visited or saved. Otherwise it does nothing.</source>
          <target state="translated">この関数は、バッファが最後に訪問または保存されてから変更された場合に、現在のバッファの内容を訪問先のファイルに保存します。それ以外の場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="598b8df0e195913316dc0f2166e5c95848549cf0" translate="yes" xml:space="preserve">
          <source>This function saves the stretch of text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; on the kill ring (including text properties), but does not delete the text from the buffer. However, if the optional argument &lt;var&gt;region&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function ignores &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, and saves the current region instead. It always returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、キルリングの &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間のテキストの範囲（テキストプロパティを含む）を保存しますが、バッファからテキストを削除しません。ただし、オプションの引数 &lt;var&gt;region&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、関数は &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 無視し、代わりに現在の領域を保存します。常に &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dcb854934d8368b0f9aa4e5fca3fe7ff45373e43" translate="yes" xml:space="preserve">
          <source>This function scans &lt;var&gt;string&lt;/var&gt; for the above special sequences and replaces them by what they stand for, returning the result as a string. This permits display of documentation that refers accurately to the user&amp;rsquo;s own customized key bindings.</source>
          <target state="translated">この関数は、 &lt;var&gt;string&lt;/var&gt; をスキャンして上記の特別なシーケンスを探し、それらをそれらが表すものに置き換えて、結果を文字列として返します。これにより、ユーザー自身がカスタマイズしたキーバインディングを正確に参照するドキュメントを表示できます。</target>
        </trans-unit>
        <trans-unit id="7d4207d36c030f700c82c397cf0bf32d1c7fae49" translate="yes" xml:space="preserve">
          <source>This function scans forward &lt;var&gt;count&lt;/var&gt; balanced parenthetical groupings from position &lt;var&gt;from&lt;/var&gt;. It returns the position where the scan stops. If &lt;var&gt;count&lt;/var&gt; is negative, the scan moves backwards.</source>
          <target state="translated">この関数は、からの位置 &lt;var&gt;from&lt;/var&gt; 順方向 &lt;var&gt;count&lt;/var&gt; バランスの取れた括弧内のグループをスキャンします。スキャンが停止した位置を返します。場合は &lt;var&gt;count&lt;/var&gt; 負の場合、スキャン移動の後方。</target>
        </trans-unit>
        <trans-unit id="a103b6e868b4eb82f7508c6562eaf551c0deb87c" translate="yes" xml:space="preserve">
          <source>This function scans forward &lt;var&gt;count&lt;/var&gt; sexps from position &lt;var&gt;from&lt;/var&gt;. It returns the position where the scan stops. If &lt;var&gt;count&lt;/var&gt; is negative, the scan moves backwards.</source>
          <target state="translated">この関数は、からの位置 &lt;var&gt;from&lt;/var&gt; 順方向 &lt;var&gt;count&lt;/var&gt; セックスをスキャンします。スキャンが停止した位置を返します。場合は &lt;var&gt;count&lt;/var&gt; 負の場合、スキャン移動の後方。</target>
        </trans-unit>
        <trans-unit id="279b055442c1cfbc5a74b09dba8744fa449ee180" translate="yes" xml:space="preserve">
          <source>This function scans the current buffer, calculating screen positions. It scans the buffer forward from position &lt;var&gt;from&lt;/var&gt;, assuming that is at screen coordinates &lt;var&gt;frompos&lt;/var&gt;, to position &lt;var&gt;to&lt;/var&gt; or coordinates &lt;var&gt;topos&lt;/var&gt;, whichever comes first. It returns the ending buffer position and screen coordinates.</source>
          <target state="translated">この関数は、現在のバッファをスキャンして、画面の位置を計算します。これは、の位置から順方向バッファをスキャン &lt;var&gt;from&lt;/var&gt; そのスクリーン座標であると仮定すると、 &lt;var&gt;frompos&lt;/var&gt; 位置まで &lt;var&gt;to&lt;/var&gt; 又は座標 &lt;var&gt;topos&lt;/var&gt; いずれか早い方。終了バッファ位置と画面座標を返します。</target>
        </trans-unit>
        <trans-unit id="10e3f9c3ca85e09b27b3959dcfd170bd9e5560f7" translate="yes" xml:space="preserve">
          <source>This function scrolls backward by &lt;var&gt;count&lt;/var&gt; lines in the selected window.</source>
          <target state="translated">この関数は、選択したウィンドウの &lt;var&gt;count&lt;/var&gt; 行だけ後方にスクロールします。</target>
        </trans-unit>
        <trans-unit id="6c3b4bf99587dfc832aefc4fc3af668df6edbf52" translate="yes" xml:space="preserve">
          <source>This function scrolls forward by &lt;var&gt;count&lt;/var&gt; lines in the selected window.</source>
          <target state="translated">この関数は、選択したウィンドウの &lt;var&gt;count&lt;/var&gt; 行だけ前方にスクロールします。</target>
        </trans-unit>
        <trans-unit id="cf8ed50ed32aa4b9aa839f68e03bfd91d6a12fe8" translate="yes" xml:space="preserve">
          <source>This function scrolls the selected window &lt;var&gt;count&lt;/var&gt; columns to the left (or to the right if &lt;var&gt;count&lt;/var&gt; is negative). The default for &lt;var&gt;count&lt;/var&gt; is the window width, minus 2.</source>
          <target state="translated">この関数は、選択したウィンドウ &lt;var&gt;count&lt;/var&gt; 列を左（または &lt;var&gt;count&lt;/var&gt; が負の場合は右）にスクロールします。 &lt;var&gt;count&lt;/var&gt; のデフォルトは、ウィンドウ幅から2を引いたものです。</target>
        </trans-unit>
        <trans-unit id="2158ced399977ac9880ac70d13283ef7fddc60a9" translate="yes" xml:space="preserve">
          <source>This function scrolls the selected window &lt;var&gt;count&lt;/var&gt; columns to the right (or to the left if &lt;var&gt;count&lt;/var&gt; is negative). The default for &lt;var&gt;count&lt;/var&gt; is the window width, minus 2. Aside from the direction of scrolling, this works just like &lt;code&gt;scroll-left&lt;/code&gt;.</source>
          <target state="translated">この関数は、選択したウィンドウ &lt;var&gt;count&lt;/var&gt; 列を右（または &lt;var&gt;count&lt;/var&gt; が負の場合は左）にスクロールします。 &lt;var&gt;count&lt;/var&gt; のデフォルトは、ウィンドウ幅から2を引いたものです。スクロールの方向を除けば、これは &lt;code&gt;scroll-left&lt;/code&gt; と同じように機能します。</target>
        </trans-unit>
        <trans-unit id="dc7d85440a05ce45ae2c4cb19651e110bda5d0f9" translate="yes" xml:space="preserve">
          <source>This function scrolls the text in another window downward &lt;var&gt;count&lt;/var&gt; lines. Negative values of &lt;var&gt;count&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt;, are handled as in &lt;code&gt;scroll-down&lt;/code&gt;. In other respects, it behaves the same way as &lt;code&gt;scroll-other-window&lt;/code&gt; does.</source>
          <target state="translated">この関数は、別のウィンドウでテキストをスクロール下向き &lt;var&gt;count&lt;/var&gt; ラインを。 &lt;var&gt;count&lt;/var&gt; の負の値、または &lt;code&gt;nil&lt;/code&gt; は、 &lt;code&gt;scroll-down&lt;/code&gt; 同様に処理されます。その他の点では、 &lt;code&gt;scroll-other-window&lt;/code&gt; と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="67e6b35f1c11b8ecd41d9f3faa3d46c904856584" translate="yes" xml:space="preserve">
          <source>This function scrolls the text in another window upward &lt;var&gt;count&lt;/var&gt; lines. Negative values of &lt;var&gt;count&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt;, are handled as in &lt;code&gt;scroll-up&lt;/code&gt;.</source>
          <target state="translated">この関数は、別のウィンドウのテキストを上向きにスクロールして行 &lt;var&gt;count&lt;/var&gt; ます。 &lt;var&gt;count&lt;/var&gt; の負の値、または &lt;code&gt;nil&lt;/code&gt; は、 &lt;code&gt;scroll-up&lt;/code&gt; 同様に処理されます。</target>
        </trans-unit>
        <trans-unit id="cd207780f03f7286b628f2fbe94da4d778ded320" translate="yes" xml:space="preserve">
          <source>This function scrolls the text in the selected window so that point is displayed at a specified vertical position within the window. It does not move point with respect to the text.</source>
          <target state="translated">この関数は、選択されているウィンドウ内のテキストを、ウィンドウ内の指定された垂直位置に点が表示されるようにスクロールします。テキストに対して点を移動させることはありません。</target>
        </trans-unit>
        <trans-unit id="8d80045b64d9461a2fe9b2780d43c9db12ed1f48" translate="yes" xml:space="preserve">
          <source>This function searches &lt;var&gt;alist&lt;/var&gt; for a match for &lt;var&gt;key&lt;/var&gt;. For each element of &lt;var&gt;alist&lt;/var&gt;, it compares the element (if it is an atom) or the element&amp;rsquo;s &lt;small&gt;CAR&lt;/small&gt; (if it is a cons) against &lt;var&gt;key&lt;/var&gt;, by calling &lt;var&gt;test&lt;/var&gt; with two arguments: the element or its &lt;small&gt;CAR&lt;/small&gt;, and &lt;var&gt;key&lt;/var&gt;. The arguments are passed in that order so that you can get useful results using &lt;code&gt;string-match&lt;/code&gt; with an alist that contains regular expressions (see &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;). If &lt;var&gt;test&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;equal&lt;/code&gt; is used for comparison.</source>
          <target state="translated">この関数は、 &lt;var&gt;alist&lt;/var&gt; で &lt;var&gt;key&lt;/var&gt; 一致するものを検索します。 &lt;var&gt;alist&lt;/var&gt; の各要素について、要素またはその&lt;small&gt;CAR&lt;/small&gt;と &lt;var&gt;key&lt;/var&gt; の2つの引数を指定して &lt;var&gt;test&lt;/var&gt; を呼び出すことにより、要素（アトムの場合）または要素の&lt;small&gt;CAR&lt;/small&gt;（consの場合）を &lt;var&gt;key&lt;/var&gt; と比較します。引数はこの順序で渡されるため、正規表現を含むリストとの &lt;code&gt;string-match&lt;/code&gt; を使用して有用な結果を得ることができます（&lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Searchを&lt;/a&gt;参照）。 &lt;var&gt;test&lt;/var&gt; が省略されているか、 &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;equal&lt;/code&gt; が比較に使用されます。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="86ef95c55274561c315ba8350ecf1307039e6865" translate="yes" xml:space="preserve">
          <source>This function searches backward from point for &lt;var&gt;string&lt;/var&gt;. It is like &lt;code&gt;search-forward&lt;/code&gt;, except that it searches backwards rather than forwards. Backward searches leave point at the beginning of the match.</source>
          <target state="translated">この関数は、ポイントから &lt;var&gt;string&lt;/var&gt; を逆方向に検索します。 &lt;code&gt;search-forward&lt;/code&gt; ではなく後方に検索することを除けば、search-forwardに似ています。後方検索は、試合の開始時にポイントを残します。</target>
        </trans-unit>
        <trans-unit id="2589ceacba5232bdcc8be99c7f33893e15161b15" translate="yes" xml:space="preserve">
          <source>This function searches backward from point for a word match to &lt;var&gt;string&lt;/var&gt;. This function is just like &lt;code&gt;word-search-forward&lt;/code&gt; except that it searches backward and normally leaves point at the beginning of the match.</source>
          <target state="translated">この関数は、 &lt;var&gt;string&lt;/var&gt; 一致する単語をポイントから逆方向に検索します。この関数は、後方に検索し、通常は一致の先頭にポイントを残すことを除いて、 &lt;code&gt;word-search-forward&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="15a62f00e0ffa8cad8901aa2d8bd87f075935f4a" translate="yes" xml:space="preserve">
          <source>This function searches backward in the current buffer for a string of text that is matched by the regular expression &lt;var&gt;regexp&lt;/var&gt;, leaving point at the beginning of the first text found.</source>
          <target state="translated">この関数は、現在のバッファーで正規表現 &lt;var&gt;regexp&lt;/var&gt; と一致するテキストの文字列を逆方向に検索し、最初に見つかったテキストの先頭にポイントを残します。</target>
        </trans-unit>
        <trans-unit id="fe406801dc8596f717b941d13936a5095afdff96" translate="yes" xml:space="preserve">
          <source>This function searches for a file whose name is &lt;var&gt;filename&lt;/var&gt; in a list of directories given by &lt;var&gt;path&lt;/var&gt;, trying the suffixes in &lt;var&gt;suffixes&lt;/var&gt;. If it finds such a file, it returns the file&amp;rsquo;s absolute file name (see &lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;Relative File Names&lt;/a&gt;); otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;path&lt;/var&gt; で指定されたディレクトリのリストで名前が &lt;var&gt;filename&lt;/var&gt; であるファイルを検索し、サフィックスのサフィックスを試し &lt;var&gt;suffixes&lt;/var&gt; 。そのようなファイルが見つかると、ファイルの絶対ファイル名を返します（&lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;相対ファイル名を&lt;/a&gt;参照）。それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4c0baa20ddc38b60f9dcb504c4990926f07c67d9" translate="yes" xml:space="preserve">
          <source>This function searches for the executable file of the named &lt;var&gt;program&lt;/var&gt; and returns the absolute file name of the executable, including its file-name extensions, if any. It returns &lt;code&gt;nil&lt;/code&gt; if the file is not found. The function searches in all the directories in &lt;code&gt;exec-path&lt;/code&gt;, and tries all the file-name extensions in &lt;code&gt;exec-suffixes&lt;/code&gt; (see &lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;Subprocess Creation&lt;/a&gt;).</source>
          <target state="translated">この関数は、指定された &lt;var&gt;program&lt;/var&gt; 実行可能ファイルを検索し、ファイル名拡張子を含む実行可能ファイルの絶対ファイル名を返します。ファイルが見つからない場合は &lt;code&gt;nil&lt;/code&gt; を返します。この関数は、 &lt;code&gt;exec-path&lt;/code&gt; 内のすべてのディレクトリを検索し、exec-suffixes内のすべてのファイル名拡張子を試行し &lt;code&gt;exec-suffixes&lt;/code&gt; （&lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;サブプロセスの作成を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="21e3a40a381cff1497414ae83056601f63bbb85c" translate="yes" xml:space="preserve">
          <source>This function searches forward from point for a word match for &lt;var&gt;string&lt;/var&gt;. If it finds a match, it sets point to the end of the match found, and returns the new value of point.</source>
          <target state="translated">この関数は、 &lt;var&gt;string&lt;/var&gt; 一致する単語をポイントから前方に検索します。一致するものが見つかると、見つかった一致の終わりにポイントを設定し、ポイントの新しい値を返します。</target>
        </trans-unit>
        <trans-unit id="86ff0ead1b6cedd956de2d5159fdc8de7f5802b1" translate="yes" xml:space="preserve">
          <source>This function searches forward from point for an exact match for &lt;var&gt;string&lt;/var&gt;. If successful, it sets point to the end of the occurrence found, and returns the new value of point. If no match is found, the value and side effects depend on &lt;var&gt;noerror&lt;/var&gt; (see below).</source>
          <target state="translated">この関数は、 &lt;var&gt;string&lt;/var&gt; 完全に一致するものをポイントから前方に検索します。成功すると、見つかったオカレンスの終わりにポイントを設定し、ポイントの新しい値を返します。一致するものが見つからない場合、値と副作用は &lt;var&gt;noerror&lt;/var&gt; に依存します（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="0f5ff776ab59c65f2d5955b64ad2456860e06c46" translate="yes" xml:space="preserve">
          <source>This function searches forward in the current buffer for a string of text that is matched by the regular expression &lt;var&gt;regexp&lt;/var&gt;. The function skips over any amount of text that is not matched by &lt;var&gt;regexp&lt;/var&gt;, and leaves point at the end of the first match found. It returns the new value of point.</source>
          <target state="translated">この関数は、現在のバッファーで、正規表現 &lt;var&gt;regexp&lt;/var&gt; と一致するテキストの文字列を前方に検索します。この関数は、 &lt;var&gt;regexp&lt;/var&gt; と一致しないテキストをスキップし、最初に見つかった一致の最後にポイントを残します。ポイントの新しい値を返します。</target>
        </trans-unit>
        <trans-unit id="5d9bf99d5cdf805630c56fd316b30678b5c2c7e3" translate="yes" xml:space="preserve">
          <source>This function selects &lt;var&gt;frame&lt;/var&gt;, raises it (should it happen to be obscured by other frames) and tries to give it the window system&amp;rsquo;s focus. On a text terminal, the next redisplay displays the new frame on the entire terminal screen. The optional argument &lt;var&gt;norecord&lt;/var&gt; has the same meaning as for &lt;code&gt;select-frame&lt;/code&gt; (see below). The return value of this function is not significant.</source>
          <target state="translated">この関数は、 &lt;var&gt;frame&lt;/var&gt; を選択して上げ（他のフレームによって隠されている場合）、ウィンドウシステムのフォーカスを与えようとします。テキスト端末では、次の再表示により、端末画面全体に新しいフレームが表示されます。オプションの引数 &lt;var&gt;norecord&lt;/var&gt; は、 &lt;code&gt;select-frame&lt;/code&gt; の場合と同じ意味です（以下を参照）。この関数の戻り値は重要ではありません。</target>
        </trans-unit>
        <trans-unit id="1b93cf30745c70d3b36cb3b5a0f92d3c8e43861a" translate="yes" xml:space="preserve">
          <source>This function selects a coding system for encoding specified text, asking the user to choose if necessary. Normally the specified text is the text in the current buffer between &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt;. If &lt;var&gt;from&lt;/var&gt; is a string, the string specifies the text to encode, and &lt;var&gt;to&lt;/var&gt; is ignored.</source>
          <target state="translated">この関数は、指定されたテキストをエンコードするためのコーディングシステムを選択し、必要に応じてユーザーに選択を求めます。通常、指定されたテキストは、 &lt;var&gt;from&lt;/var&gt; と &lt;var&gt;to&lt;/var&gt; の間の現在のバッファ内のテキストです。場合 &lt;var&gt;from&lt;/var&gt; 文字列で、文字列は、エンコード、およびテキストを指定する &lt;var&gt;to&lt;/var&gt; 無視されます。</target>
        </trans-unit>
        <trans-unit id="2ba4a9b3162c044926007835d1d4beeb3a4aa5dd" translate="yes" xml:space="preserve">
          <source>This function selects a field&amp;rsquo;s data from the nested alist &lt;var&gt;struct&lt;/var&gt;. Usually &lt;var&gt;struct&lt;/var&gt; was returned by &lt;code&gt;bindat-unpack&lt;/code&gt;. If &lt;var&gt;name&lt;/var&gt; corresponds to just one argument, that means to extract a top-level field value. Multiple &lt;var&gt;name&lt;/var&gt; arguments specify repeated lookup of sub-structures. An integer name acts as an array index.</source>
          <target state="translated">この関数は、ネストされたalist &lt;var&gt;struct&lt;/var&gt; からフィールドのデータを選択します。通常、 &lt;var&gt;struct&lt;/var&gt; は &lt;code&gt;bindat-unpack&lt;/code&gt; によって返されました。 &lt;var&gt;name&lt;/var&gt; が1つの引数にのみ対応する場合、それは最上位のフィールド値を抽出することを意味します。複数の &lt;var&gt;name&lt;/var&gt; 引数は、サブ構造の繰り返しルックアップを指定します。整数名は配列インデックスとして機能します。</target>
        </trans-unit>
        <trans-unit id="854faeed04dfb1786422e9a9d79df43884a5a6fc" translate="yes" xml:space="preserve">
          <source>This function selects a live window, one &lt;var&gt;count&lt;/var&gt; places from the selected window in the cyclic ordering of windows. If &lt;var&gt;count&lt;/var&gt; is a positive number, it skips &lt;var&gt;count&lt;/var&gt; windows forwards; if &lt;var&gt;count&lt;/var&gt; is negative, it skips -&lt;var&gt;count&lt;/var&gt; windows backwards; if &lt;var&gt;count&lt;/var&gt; is zero, that simply re-selects the selected window. When called interactively, &lt;var&gt;count&lt;/var&gt; is the numeric prefix argument.</source>
          <target state="translated">この関数は、ライブウィンドウを選択します。選択したウィンドウから、ウィンドウの循環順序で1つ &lt;var&gt;count&lt;/var&gt; ます。 &lt;var&gt;count&lt;/var&gt; が正の数の場合、 &lt;var&gt;count&lt;/var&gt; ウィンドウを前方にスキップします。 &lt;var&gt;count&lt;/var&gt; が負の場合、スキップします-ウィンドウを逆方向に &lt;var&gt;count&lt;/var&gt; ます。 &lt;var&gt;count&lt;/var&gt; がゼロの場合、選択したウィンドウを再選択するだけです。インタラクティブに呼び出される場合、 &lt;var&gt;count&lt;/var&gt; は数値のプレフィックス引数です。</target>
        </trans-unit>
        <trans-unit id="d87e4356db00e03d8be4110fd77b6382a7fb5f7b" translate="yes" xml:space="preserve">
          <source>This function selects and sets the major mode that is appropriate for the current buffer. It bases its decision (in order of precedence) on the &amp;lsquo;</source>
          <target state="translated">この関数は、現在のバッファに適したメジャーモードを選択および設定します。'に基づいて（優先順位に従って）決定します。</target>
        </trans-unit>
        <trans-unit id="ca8b6c7abd38e5ed34ff834123c348a7d34d20f0" translate="yes" xml:space="preserve">
          <source>This function selects frame &lt;var&gt;frame&lt;/var&gt;, temporarily disregarding the focus of the X server if any. The selection of &lt;var&gt;frame&lt;/var&gt; lasts until the next time the user does something to select a different frame, or until the next time this function is called. (If you are using a window system, the previously selected frame may be restored as the selected frame after return to the command loop, because it still may have the window system&amp;rsquo;s input focus.)</source>
          <target state="translated">この関数は、Xサーバーのフォーカスを一時的に無視して、フレーム &lt;var&gt;frame&lt;/var&gt; を選択します。 &lt;var&gt;frame&lt;/var&gt; の選択は、次にユーザーが別のフレームを選択するために何かを行うまで、または次にこの関数が呼び出されるまで続きます。（ウィンドウシステムを使用している場合、以前に選択されたフレームは、コマンドループに戻った後、ウィンドウシステムの入力フォーカスが残っている可能性があるため、選択されたフレームとして復元される場合があります。）</target>
        </trans-unit>
        <trans-unit id="e7051d9388a8372a7ca13c2c2aecd882b2584b86" translate="yes" xml:space="preserve">
          <source>This function sends &lt;var&gt;process&lt;/var&gt; the contents of &lt;var&gt;string&lt;/var&gt; as standard input. It returns &lt;code&gt;nil&lt;/code&gt;. For example, to make a Shell buffer list files:</source>
          <target state="translated">この関数は、 &lt;var&gt;string&lt;/var&gt; の内容を標準入力として &lt;var&gt;process&lt;/var&gt; 送信します。 &lt;code&gt;nil&lt;/code&gt; を返します。たとえば、シェルバッファリストファイルを作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="729e89000884992a96c8546849feddc47a86dd78" translate="yes" xml:space="preserve">
          <source>This function sends &lt;var&gt;string&lt;/var&gt; to &lt;var&gt;terminal&lt;/var&gt; without alteration. Control characters in &lt;var&gt;string&lt;/var&gt; have terminal-dependent effects. (If you need to display non-ASCII text on the terminal, encode it using one of the functions described in &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Explicit Encoding&lt;/a&gt;.) This function operates only on text terminals. &lt;var&gt;terminal&lt;/var&gt; may be a terminal object, a frame, or &lt;code&gt;nil&lt;/code&gt; for the selected frame&amp;rsquo;s terminal. In batch mode, &lt;var&gt;string&lt;/var&gt; is sent to &lt;code&gt;stdout&lt;/code&gt; when &lt;var&gt;terminal&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;string&lt;/var&gt; を変更せずに &lt;var&gt;terminal&lt;/var&gt; 送信します。 &lt;var&gt;string&lt;/var&gt; 内の制御文字には、端末に依存する効果があります。 （端末に非ASCIIテキストを表示する必要がある場合は、&lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;明示的エンコードで&lt;/a&gt;説明されている関数の1つを使用してエンコードします。）この関数は、テキスト端末でのみ動作します。 &lt;var&gt;terminal&lt;/var&gt; は、選択したフレームの端末の端末オブジェクト、フレーム、または &lt;code&gt;nil&lt;/code&gt; の場合があります。バッチモードでは、 &lt;var&gt;terminal&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;var&gt;string&lt;/var&gt; が &lt;code&gt;stdout&lt;/code&gt; に送信されます。</target>
        </trans-unit>
        <trans-unit id="931b025fd308ae043ad515b68ea59de28c73eb02" translate="yes" xml:space="preserve">
          <source>This function sends a notification to the desktop via D-Bus, consisting of the parameters specified by the &lt;var&gt;params&lt;/var&gt; arguments. These arguments should consist of alternating keyword and value pairs. The supported keywords and values are as follows:</source>
          <target state="translated">この関数は、 &lt;var&gt;params&lt;/var&gt; 引数で指定されたパラメーターで構成される通知をD-Bus経由でデスクトップに送信します。これらの引数は、キーワードと値のペアを交互に使用する必要があります。サポートされているキーワードと値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="3e7bc510b1d9657207dfba79f655692f0913950a" translate="yes" xml:space="preserve">
          <source>This function sends a signal to process &lt;var&gt;process&lt;/var&gt;. The argument &lt;var&gt;signal&lt;/var&gt; specifies which signal to send; it should be an integer, or a symbol whose name is a signal.</source>
          <target state="translated">この関数は、プロセス &lt;var&gt;process&lt;/var&gt; シグナルを送信します。引数 &lt;var&gt;signal&lt;/var&gt; は、送信するシグナルを指定します。整数、または名前がシグナルであるシンボルである必要があります。</target>
        </trans-unit>
        <trans-unit id="61f1dd6544deb530ab113d36a1201d765d7c9621" translate="yes" xml:space="preserve">
          <source>This function sends a transaction to queue &lt;var&gt;queue&lt;/var&gt;. Specifying the queue has the effect of specifying the subprocess to talk to.</source>
          <target state="translated">この関数は、トランザクションをキュー &lt;var&gt;queue&lt;/var&gt; 送信します。キューを指定すると、通信するサブプロセスを指定する効果があります。</target>
        </trans-unit>
        <trans-unit id="f9bfc477f6919c4dd54ed20f09c99e1bd4714c75" translate="yes" xml:space="preserve">
          <source>This function sends the signal &lt;code&gt;SIGQUIT&lt;/code&gt; to the process &lt;var&gt;process&lt;/var&gt;. This signal is the one sent by the quit character (usually</source>
          <target state="translated">この関数は、シグナル &lt;code&gt;SIGQUIT&lt;/code&gt; をプロセス &lt;var&gt;process&lt;/var&gt; 送信します。このシグナルは、終了文字によって送信されるシグナルです（通常は</target>
        </trans-unit>
        <trans-unit id="57abe80a4e9637c06fa334bde358806a416d5f6e" translate="yes" xml:space="preserve">
          <source>This function sends the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; as standard input to a process running &lt;var&gt;program&lt;/var&gt;. It deletes the text sent if &lt;var&gt;delete&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;; this is useful when &lt;var&gt;destination&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, to insert the output in the current buffer in place of the input.</source>
          <target state="translated">この関数は、 &lt;var&gt;program&lt;/var&gt; 実行しているプロセスへの標準入力として、テキストを &lt;var&gt;start&lt;/var&gt; から &lt;var&gt;end&lt;/var&gt; まで送信します。 &lt;var&gt;delete&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、送信されたテキストを削除します。これは、 &lt;var&gt;destination&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; の場合に、入力の代わりに出力を現在のバッファーに挿入するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="ba8174a686bdaa317578e096c8a85e26305df50e" translate="yes" xml:space="preserve">
          <source>This function sends the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; as standard input to an inferior shell running &lt;var&gt;command&lt;/var&gt;. This function is similar than &lt;code&gt;call-process-region&lt;/code&gt;, with process being a shell. The arguments &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt; and the return value are like in &lt;code&gt;call-process-region&lt;/code&gt;. Note that this function doesn&amp;rsquo;t accept additional arguments.</source>
          <target state="translated">この関数は、 &lt;var&gt;command&lt;/var&gt; 実行している下位シェルへの標準入力として、テキストを &lt;var&gt;start&lt;/var&gt; から &lt;var&gt;end&lt;/var&gt; まで送信します。この関数は &lt;code&gt;call-process-region&lt;/code&gt; に似ていますが、プロセスはシェルです。引数 &lt;code&gt;delete&lt;/code&gt; 、 &lt;code&gt;destination&lt;/code&gt; 、および戻り値は、 &lt;code&gt;call-process-region&lt;/code&gt; の場合と同様です。この関数は追加の引数を受け入れないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e6d631043267da531eafcdf87917aa51984043a7" translate="yes" xml:space="preserve">
          <source>This function sends the text in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; as standard input to &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; で定義された領域のテキストを、 &lt;var&gt;process&lt;/var&gt; への標準入力として送信します。</target>
        </trans-unit>
        <trans-unit id="c3ff652c9cefcc4cda0cdcd9ca276ae180e78c0b" translate="yes" xml:space="preserve">
          <source>This function separates the elements of &lt;var&gt;sequence&lt;/var&gt; into an alist whose keys are the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt;. Keys are compared using &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;sequence&lt;/var&gt; の要素をリストに分割します。リストのキーは、 &lt;var&gt;sequence&lt;/var&gt; 各要素に &lt;var&gt;function&lt;/var&gt; を適用した結果です。キーは &lt;code&gt;equal&lt;/code&gt; を使用して比較されます。</target>
        </trans-unit>
        <trans-unit id="198c107c1316ee16214b3b5bf1ad21a0282680bb" translate="yes" xml:space="preserve">
          <source>This function sets &lt;code&gt;enable-multibyte-characters&lt;/code&gt; to record which representation is in use. It also adjusts various data in the buffer (including overlays, text properties and markers) so that they cover the same text as they did before.</source>
          <target state="translated">この関数は、 &lt;code&gt;enable-multibyte-characters&lt;/code&gt; を設定して、使用されている表現を記録します。また、バッファ内のさまざまなデータ（オーバーレイ、テキストプロパティ、マーカーなど）を調整して、以前と同じテキストをカバーするようにします。</target>
        </trans-unit>
        <trans-unit id="38db8d5d0b14e5fcf34e7ad6d7eed9ccaf560ff5" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s window state change flag if &lt;var&gt;arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and resets it otherwise. &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">この関数は、 &lt;var&gt;arg&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は &lt;var&gt;frame&lt;/var&gt; のウィンドウ状態変更フラグを設定し、それ以外の場合はリセットします。 &lt;var&gt;frame&lt;/var&gt; はライブフレームである必要があり、デフォルトでは選択したフレームになります。</target>
        </trans-unit>
        <trans-unit id="185316fe3bdf798d473ccd31e762ce5375b8c920" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;property&lt;/var&gt; of &lt;var&gt;function&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. &lt;var&gt;function&lt;/var&gt; should be a symbol. This function is preferred to calling &lt;code&gt;put&lt;/code&gt; for setting properties of a function, because it will allow us some day to implement remapping of old properties to new ones.</source>
          <target state="translated">この関数は、 &lt;var&gt;function&lt;/var&gt; &lt;var&gt;property&lt;/var&gt; を &lt;var&gt;value&lt;/var&gt; 設定します。 &lt;var&gt;function&lt;/var&gt; はシンボルである必要があります。この関数は、関数のプロパティを設定するために &lt;code&gt;put&lt;/code&gt; を呼び出すよりも優先されます。これにより、いつか古いプロパティから新しいプロパティへの再マッピングを実装できるようになります。</target>
        </trans-unit>
        <trans-unit id="ae2697c8f107bbd3d1e782f909d8f40d74488d80" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s property list to &lt;var&gt;plist&lt;/var&gt;. Normally, &lt;var&gt;plist&lt;/var&gt; should be a well-formed property list, but this is not enforced. The return value is &lt;var&gt;plist&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;symbol&lt;/var&gt; のプロパティリストを &lt;var&gt;plist&lt;/var&gt; に設定します。通常、 &lt;var&gt;plist&lt;/var&gt; は整形式のプロパティリストである必要がありますが、これは強制されません。戻り値は &lt;var&gt;plist&lt;/var&gt; です。</target>
        </trans-unit>
        <trans-unit id="04c98837dcbee57bf0edcdd44b78b672d2aea93c" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s previous buffers to the value of &lt;var&gt;prev-buffers&lt;/var&gt;. The argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. The argument &lt;var&gt;prev-buffers&lt;/var&gt; should be a list of the same form as that returned by &lt;code&gt;window-prev-buffers&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;window&lt;/var&gt; の前のバッファを &lt;var&gt;prev-buffers&lt;/var&gt; の値に設定します。引数 &lt;var&gt;window&lt;/var&gt; はライブウィンドウである必要があり、デフォルトでは選択されたウィンドウになります。引数 &lt;var&gt;prev-buffers&lt;/var&gt; は、 &lt;code&gt;window-prev-buffers&lt;/code&gt; によって返されるものと同じ形式のリストである必要があります。</target>
        </trans-unit>
        <trans-unit id="96dc71440be002ad9dfdbcc602de3ea5e6a10b8b" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s value of &lt;var&gt;parameter&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt; and returns &lt;var&gt;value&lt;/var&gt;. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">この関数は、 &lt;var&gt;window&lt;/var&gt; の &lt;var&gt;parameter&lt;/var&gt; の値をvalueに設定し、 &lt;var&gt;value&lt;/var&gt; を返し &lt;var&gt;value&lt;/var&gt; 。 &lt;var&gt;window&lt;/var&gt; のデフォルトは、選択されたウィンドウです。</target>
        </trans-unit>
        <trans-unit id="95364a7df69f3c257f53ef31901ba13af2d26bbb" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s vertical scroll position to &lt;var&gt;lines&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used. The argument &lt;var&gt;lines&lt;/var&gt; should be zero or positive; if not, it is taken as zero.</source>
          <target state="translated">この関数は、 &lt;var&gt;window&lt;/var&gt; の垂直スクロール位置を &lt;var&gt;lines&lt;/var&gt; 設定します。場合は &lt;var&gt;window&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; の、選択されたウィンドウが使用されています。引数の &lt;var&gt;lines&lt;/var&gt; はゼロまたは正である必要があります。そうでない場合は、ゼロと見なされます。</target>
        </trans-unit>
        <trans-unit id="7b4a0fad7bd34a59f597431d205b7d12e946aa28" translate="yes" xml:space="preserve">
          <source>This function sets a window-system selection. It takes two arguments: a selection type &lt;var&gt;type&lt;/var&gt;, and the value to assign to it, &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="translated">この関数は、ウィンドウシステムの選択を設定します。選択タイプ &lt;var&gt;type&lt;/var&gt; と、それに割り当てる値 &lt;var&gt;data&lt;/var&gt; の2つの引数を取ります。</target>
        </trans-unit>
        <trans-unit id="a455f3607009635f3fcfc2b2aeb99bb7f4951fad" translate="yes" xml:space="preserve">
          <source>This function sets horizontal scrolling of &lt;var&gt;window&lt;/var&gt;. The value of &lt;var&gt;columns&lt;/var&gt; specifies the amount of scrolling, in terms of columns from the left margin (right margin in right-to-left paragraphs). The argument &lt;var&gt;columns&lt;/var&gt; should be zero or positive; if not, it is taken as zero. Fractional values of &lt;var&gt;columns&lt;/var&gt; are not supported at present.</source>
          <target state="translated">この関数は、 &lt;var&gt;window&lt;/var&gt; 水平スクロールを設定します。 &lt;var&gt;columns&lt;/var&gt; の値は、左マージン（右から左の段落の右マージン）からの列の観点から、スクロールの量を指定します。引数の &lt;var&gt;columns&lt;/var&gt; はゼロまたは正である必要があります。そうでない場合は、ゼロと見なされます。現在、 &lt;var&gt;columns&lt;/var&gt; 数値はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="2691fc741caac070bb7961b94fe98d08a049a90a" translate="yes" xml:space="preserve">
          <source>This function sets one or more attributes of &lt;var&gt;face&lt;/var&gt; for &lt;var&gt;frame&lt;/var&gt;. The attributes specifies in this way override the face spec(s) belonging to &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;frame&lt;/var&gt; の &lt;var&gt;face&lt;/var&gt; の1つ以上の属性を設定します。このようオーバーライドの属性の指定に属する顔スペック（S） &lt;var&gt;face&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d032676039653f52fabf726805867a29f18005e" translate="yes" xml:space="preserve">
          <source>This function sets or modifies a network option for network process &lt;var&gt;process&lt;/var&gt;. The accepted options and values are as for &lt;code&gt;make-network-process&lt;/code&gt;. If &lt;var&gt;no-error&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns &lt;code&gt;nil&lt;/code&gt; instead of signaling an error if &lt;var&gt;option&lt;/var&gt; is not a supported option. If the function successfully completes, it returns &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">この関数は、ネットワークプロセス &lt;var&gt;process&lt;/var&gt; ネットワークオプションを設定または変更します。受け入れられるオプションと値は、 &lt;code&gt;make-network-process&lt;/code&gt; の場合と同じです。場合は &lt;var&gt;no-error&lt;/var&gt; 非ではありません &lt;code&gt;nil&lt;/code&gt; のは、この関数の戻りは &lt;code&gt;nil&lt;/code&gt; を場合は、エラーを知らせるのではなく、 &lt;var&gt;option&lt;/var&gt; サポートされるオプションではありません。関数が正常に完了すると、 &lt;code&gt;t&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a09056770339ed6e3896bc0f8270829f5aed9093" translate="yes" xml:space="preserve">
          <source>This function sets point in the current buffer to the value &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">この関数は、現在のバッファ内のポイントを値の &lt;var&gt;position&lt;/var&gt; ます。</target>
        </trans-unit>
        <trans-unit id="24569c05a9e6a190b75a9b1cf25e78030e614d61" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;em&gt;combination limit&lt;/em&gt; of the window &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;limit&lt;/var&gt;. This value can be retrieved via the function &lt;code&gt;window-combination-limit&lt;/code&gt;. See below for its effects; note that it is only meaningful for internal windows. The &lt;code&gt;split-window&lt;/code&gt; function automatically calls this function, passing it &lt;code&gt;t&lt;/code&gt; as &lt;var&gt;limit&lt;/var&gt;, provided the value of the variable &lt;code&gt;window-combination-limit&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt; when it is called.</source>
          <target state="translated">この関数は、ウィンドウ &lt;var&gt;window&lt;/var&gt; &lt;em&gt;組み合わせ制限をlimit&lt;/em&gt;に設定し &lt;var&gt;limit&lt;/var&gt; 。この値は、関数 &lt;code&gt;window-combination-limit&lt;/code&gt; を介して取得できます。その効果については、以下を参照してください。これは内部ウィンドウでのみ意味があることに注意してください。 &lt;code&gt;split-window&lt;/code&gt; 関数は自動的に渡し、この関数を呼び出し &lt;code&gt;t&lt;/code&gt; として、 &lt;var&gt;limit&lt;/var&gt; 変数の値設け、 &lt;code&gt;window-combination-limit&lt;/code&gt; ある &lt;code&gt;t&lt;/code&gt; それが呼び出されたとき。</target>
        </trans-unit>
        <trans-unit id="9ad1968d81a7be405ee4e8faa839e8d7781a073e" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;em&gt;file mode&lt;/em&gt; (or &lt;em&gt;permissions&lt;/em&gt;) of &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;mode&lt;/var&gt;. This function follows symbolic links.</source>
          <target state="translated">この関数は、 &lt;var&gt;filename&lt;/var&gt; の&lt;em&gt;ファイルモード&lt;/em&gt;（または&lt;em&gt;パーミッション&lt;/em&gt;）を &lt;var&gt;mode&lt;/var&gt; に設定します。この関数はシンボリックリンクをたどります。</target>
        </trans-unit>
        <trans-unit id="894edf2814268e95297fea0090f5c3ee1a19e55b" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;var&gt;index&lt;/var&gt;th element of &lt;var&gt;array&lt;/var&gt; to be &lt;var&gt;object&lt;/var&gt;. It returns &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">この関数は、設定 &lt;var&gt;index&lt;/var&gt; の番目の要素 &lt;var&gt;array&lt;/var&gt; であるために &lt;var&gt;object&lt;/var&gt; 。 &lt;var&gt;object&lt;/var&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="3db3cbcd3a9c0df821c1baa1d992a14e6ae7e4ef" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;var&gt;prop&lt;/var&gt; property to &lt;var&gt;value&lt;/var&gt; for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">この関数は、文字列またはバッファ &lt;var&gt;object&lt;/var&gt; &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 間のテキストの &lt;var&gt;prop&lt;/var&gt; プロパティを &lt;var&gt;value&lt;/var&gt; 設定します。 &lt;var&gt;object&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、デフォルトで現在のバッファになります。</target>
        </trans-unit>
        <trans-unit id="e8747da81d65b47ec8dc236636dc6894a2448ef8" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;var&gt;propname&lt;/var&gt; property of &lt;var&gt;charset&lt;/var&gt; to the given &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;charset&lt;/var&gt; の &lt;var&gt;propname&lt;/var&gt; プロパティを指定された &lt;var&gt;value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dc9dbdede25628c36f5c5ffaba6b04adc24fa1c" translate="yes" xml:space="preserve">
          <source>This function sets the Access Control List for &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;acl&lt;/var&gt;. The &lt;var&gt;acl&lt;/var&gt; argument should have the same form returned by the function &lt;code&gt;file-acl&lt;/code&gt;. See &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;filename&lt;/var&gt; のアクセス制御リストを &lt;var&gt;acl&lt;/var&gt; に設定します。 &lt;var&gt;acl&lt;/var&gt; の引数は関数によって返された同じ形式なければならない &lt;code&gt;file-acl&lt;/code&gt; 。&lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;拡張属性を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d6dc2bb322377c867ec980ee6ae90e41feb0b758" translate="yes" xml:space="preserve">
          <source>This function sets the C pointer embedded in the &lt;code&gt;user-ptr&lt;/code&gt; object represented by &lt;var&gt;value&lt;/var&gt; to &lt;var&gt;ptr&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;value&lt;/var&gt; で表される &lt;code&gt;user-ptr&lt;/code&gt; オブジェクトに埋め込まれたCポインターを &lt;var&gt;ptr&lt;/var&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="c60c34f44a7a27ac4e9c2daa42a523e271c4415c" translate="yes" xml:space="preserve">
          <source>This function sets the Emacs-recognized extended file attributes for &lt;code&gt;filename&lt;/code&gt;. The second argument &lt;var&gt;attribute-alist&lt;/var&gt; should be an alist of the same form returned by &lt;code&gt;file-extended-attributes&lt;/code&gt;. The return value is &lt;code&gt;t&lt;/code&gt; if the attributes are successfully set, otherwise it is &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;filename&lt;/code&gt; Emacsで認識される拡張ファイル属性を設定します。2番目の引数 &lt;var&gt;attribute-alist&lt;/var&gt; は、 &lt;code&gt;file-extended-attributes&lt;/code&gt; によって返される同じ形式のリストである必要があります。属性が正常に設定された場合の戻り値は &lt;code&gt;t&lt;/code&gt; であり、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; です。&lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;拡張属性を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="76f5b2231c3bd0857bda4500395ec579d7002ebf" translate="yes" xml:space="preserve">
          <source>This function sets the SELinux security context for &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;context&lt;/var&gt;. The &lt;var&gt;context&lt;/var&gt; argument should be a list &lt;code&gt;(&lt;var&gt;user&lt;/var&gt; &lt;var&gt;role&lt;/var&gt; &lt;var&gt;type&lt;/var&gt; &lt;var&gt;range&lt;/var&gt;)&lt;/code&gt;, where each element is a string. See &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;filename&lt;/var&gt; のSELinuxセキュリティコンテキストをcontextに設定し &lt;var&gt;context&lt;/var&gt; 。 &lt;var&gt;context&lt;/var&gt; 引数がリストであるべきである &lt;code&gt;(&lt;var&gt;user&lt;/var&gt; &lt;var&gt;role&lt;/var&gt; &lt;var&gt;type&lt;/var&gt; &lt;var&gt;range&lt;/var&gt;)&lt;/code&gt; の各要素が文字列です。&lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;拡張属性を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="aa3771987747d26afa321f6b694b7946c3677e4e" translate="yes" xml:space="preserve">
          <source>This function sets the access and modification times of &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;time&lt;/var&gt;. The return value is &lt;code&gt;t&lt;/code&gt; if the times are successfully set, otherwise it is &lt;code&gt;nil&lt;/code&gt;. &lt;var&gt;time&lt;/var&gt; defaults to the current time and must be a time value (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">この関数は、 &lt;var&gt;filename&lt;/var&gt; のアクセス時間と変更時間を &lt;var&gt;time&lt;/var&gt; に設定します。時間が正常に設定された場合の戻り値は &lt;code&gt;t&lt;/code&gt; であり、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; です。 &lt;var&gt;time&lt;/var&gt; のデフォルトは現在の時刻であり、時刻の値である必要があります（&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;時刻を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="47f2d6313d96f9b0745cdb73f6a8c3da02eb9ed3" translate="yes" xml:space="preserve">
          <source>This function sets the accessible portion of the current buffer to include just the current page. An optional first argument &lt;var&gt;move-count&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to move forward or backward by &lt;var&gt;move-count&lt;/var&gt; pages and then narrow to one page. The variable &lt;code&gt;page-delimiter&lt;/code&gt; specifies where pages start and end (see &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Standard Regexps&lt;/a&gt;).</source>
          <target state="translated">この関数は、現在のバッファのアクセス可能な部分を設定して、現在のページのみを含めます。オプションの最初の引数の &lt;var&gt;move-count&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; の手段によって、前方または後方に移動する &lt;var&gt;move-count&lt;/var&gt; ページとその後、1ページに絞り込みます。変数 &lt;code&gt;page-delimiter&lt;/code&gt; は、ページの開始位置と終了位置を指定します（&lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;標準正規表現を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="2e612ca403bca38f0c1bdcfd957110e240fb5565" translate="yes" xml:space="preserve">
          <source>This function sets the accessible portion of the current buffer to start at &lt;var&gt;start&lt;/var&gt; and end at &lt;var&gt;end&lt;/var&gt;. Both arguments should be character positions.</source>
          <target state="translated">この関数は、現在のバッファのアクセス可能な部分を開始時に &lt;var&gt;start&lt;/var&gt; 、終了時に &lt;var&gt;end&lt;/var&gt; するように設定します。両方の引数は文字位置である必要があります。</target>
        </trans-unit>
        <trans-unit id="a380ca37b7eadc09d46bf7eca0da28b0c371828e" translate="yes" xml:space="preserve">
          <source>This function sets the base remapping of &lt;var&gt;face&lt;/var&gt; in the current buffer to &lt;var&gt;specs&lt;/var&gt;. If &lt;var&gt;specs&lt;/var&gt; is empty, the default base remapping is restored, similar to calling &lt;code&gt;face-remap-reset-base&lt;/code&gt; (see below); note that this is different from &lt;var&gt;specs&lt;/var&gt; containing a single value &lt;code&gt;nil&lt;/code&gt;, which has the opposite result (the global definition of &lt;var&gt;face&lt;/var&gt; is ignored).</source>
          <target state="translated">この関数は、現在のバッファ内の &lt;var&gt;face&lt;/var&gt; の基本的な再マッピングを &lt;var&gt;specs&lt;/var&gt; ます。 &lt;var&gt;specs&lt;/var&gt; が空の場合、 &lt;code&gt;face-remap-reset-base&lt;/code&gt; を呼び出すのと同様に、デフォルトのベース再マッピングが復元されます（以下を参照）。これは、逆の結果を持つ単一の値 &lt;code&gt;nil&lt;/code&gt; を含む &lt;var&gt;specs&lt;/var&gt; とは異なることに注意してください（ &lt;var&gt;face&lt;/var&gt; のグローバル定義は無視されます）。</target>
        </trans-unit>
        <trans-unit id="77e8b31efcdb8939a7766a5264d619fc95c0e96e" translate="yes" xml:space="preserve">
          <source>This function sets the base remapping of &lt;var&gt;face&lt;/var&gt; to its default value, which inherits from &lt;var&gt;face&lt;/var&gt;&amp;rsquo;s global definition.</source>
          <target state="translated">この関数は、再マッピングの基本設定 &lt;var&gt;face&lt;/var&gt; にそのデフォルト値、継承からの &lt;var&gt;face&lt;/var&gt; のグローバル定義を。</target>
        </trans-unit>
        <trans-unit id="ebb95607e6b50257ccae939ab2c8aa2da4f1c1b5" translate="yes" xml:space="preserve">
          <source>This function sets the binding for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;keymap&lt;/var&gt;. (If &lt;var&gt;key&lt;/var&gt; is more than one event long, the change is actually made in another keymap reached from &lt;var&gt;keymap&lt;/var&gt;.) The argument &lt;var&gt;binding&lt;/var&gt; can be any Lisp object, but only certain types are meaningful. (For a list of meaningful types, see &lt;a href=&quot;key-lookup#Key-Lookup&quot;&gt;Key Lookup&lt;/a&gt;.) The value returned by &lt;code&gt;define-key&lt;/code&gt; is &lt;var&gt;binding&lt;/var&gt;.</source>
          <target state="translated">この関数は、バインディング設定 &lt;var&gt;key&lt;/var&gt; で &lt;var&gt;keymap&lt;/var&gt; 。（場合 &lt;var&gt;key&lt;/var&gt; 複数のイベントの長さで、変化が実際に到達別のキーマップで構成されている &lt;var&gt;keymap&lt;/var&gt; 引数。） &lt;var&gt;binding&lt;/var&gt; 任意のLispオブジェクトをすることができるが、唯一の特定のタイプは有意義です。（意味のあるタイプのリストについては、&lt;a href=&quot;key-lookup#Key-Lookup&quot;&gt;キールックアップを&lt;/a&gt;参照してください。） &lt;code&gt;define-key&lt;/code&gt; によって返される値は &lt;var&gt;binding&lt;/var&gt; です。</target>
        </trans-unit>
        <trans-unit id="c5972870ac008dc5ea5e72291038289594f93470" translate="yes" xml:space="preserve">
          <source>This function sets the binding of &lt;var&gt;key&lt;/var&gt; in the current global map to &lt;var&gt;binding&lt;/var&gt;.</source>
          <target state="translated">この機能セットはの結合 &lt;var&gt;key&lt;/var&gt; に現在のグローバルマップで &lt;var&gt;binding&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6fac0dc347c58ef12731886abbe64fc8c1af622" translate="yes" xml:space="preserve">
          <source>This function sets the binding of &lt;var&gt;key&lt;/var&gt; in the current local keymap to &lt;var&gt;binding&lt;/var&gt;.</source>
          <target state="translated">この機能セットはの結合 &lt;var&gt;key&lt;/var&gt; に現在のローカルキーマップで &lt;var&gt;binding&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="47a09db14b556c9c785678dc6d2f2942700a3fef" translate="yes" xml:space="preserve">
          <source>This function sets the buffer associated with &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;buffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the process becomes associated with no buffer.</source>
          <target state="translated">この関数は、関連付けられたバッファ設定 &lt;var&gt;process&lt;/var&gt; する &lt;var&gt;buffer&lt;/var&gt; 。場合 &lt;var&gt;buffer&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 、プロセスがないバッファに関連なります。</target>
        </trans-unit>
        <trans-unit id="3d10326c95927a931f13440e7844bb6ed76c546a" translate="yes" xml:space="preserve">
          <source>This function sets the buffer major mode, and parses local variables (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;). It is called by &lt;code&gt;find-file-noselect&lt;/code&gt; and by the default revert function (see &lt;a href=&quot;reverting#Reverting&quot;&gt;Reverting&lt;/a&gt;).</source>
          <target state="translated">この関数は、バッファメジャーモードを設定し、ローカル変数を解析します（&lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;自動メジャーモードを&lt;/a&gt;参照）。これは、 &lt;code&gt;find-file-noselect&lt;/code&gt; およびデフォルトの復帰関数によって呼び出されます（&lt;a href=&quot;reverting#Reverting&quot;&gt;復帰を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b24eecc002950857672fd643cb572d1fec097a1e" translate="yes" xml:space="preserve">
          <source>This function sets the contents of register &lt;var&gt;reg&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. A register can be set to any value, but the other register functions expect only certain data types. The return value is &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">この関数は、レジスタ &lt;var&gt;reg&lt;/var&gt; の内容を &lt;var&gt;value&lt;/var&gt; 設定します。レジスタは任意の値に設定できますが、他のレジスタ関数は特定のデータ型のみを想定しています。戻り値は &lt;var&gt;value&lt;/var&gt; です。</target>
        </trans-unit>
        <trans-unit id="7d1db1c8636056dc9c8dcf7fd6b28bf2e658f3d9" translate="yes" xml:space="preserve">
          <source>This function sets the current buffer&amp;rsquo;s mark to &lt;var&gt;position&lt;/var&gt;, and pushes a copy of the previous mark onto &lt;code&gt;mark-ring&lt;/code&gt;. If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the value of point is used.</source>
          <target state="translated">この関数は、現在のバッファのマークを &lt;var&gt;position&lt;/var&gt; に設定し、前のマークのコピーを &lt;code&gt;mark-ring&lt;/code&gt; プッシュします。場合 &lt;var&gt;position&lt;/var&gt; である &lt;code&gt;nil&lt;/code&gt; 、次にポイントの値が使用されます。</target>
        </trans-unit>
        <trans-unit id="c9188f08d4d0de2dc3d968c34756665ced1f3af4" translate="yes" xml:space="preserve">
          <source>This function sets the debug-on-exit flag of the stack frame &lt;var&gt;level&lt;/var&gt; levels down the stack, giving it the value &lt;var&gt;flag&lt;/var&gt;. If &lt;var&gt;flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this will cause the debugger to be entered when that frame later exits. Even a nonlocal exit through that frame will enter the debugger.</source>
          <target state="translated">この関数は、スタックの終了時デバッグフラグをスタックのフレーム &lt;var&gt;level&lt;/var&gt; レベルに設定し、値 &lt;var&gt;flag&lt;/var&gt; を与えます。場合は &lt;var&gt;flag&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; で、これはそのフレームが後に出たとき、デバッガが入力されるようになります。そのフレームを通る非ローカル出口でさえ、デバッガーに入ります。</target>
        </trans-unit>
        <trans-unit id="308e7294f331e155466bb85e91f2747e3d32e79a" translate="yes" xml:space="preserve">
          <source>This function sets the default permissions for new files created by Emacs and its subprocesses. Every file created with Emacs initially has these permissions, or a subset of them (&lt;code&gt;write-region&lt;/code&gt; will not grant execute permissions even if the default file permissions allow execution). On GNU and other POSIX-like systems, the default permissions are given by the bitwise complement of the &amp;lsquo;</source>
          <target state="translated">この関数は、Emacsとそのサブプロセスによって作成された新しいファイルのデフォルトの権限を設定します。Emacsで作成されたすべてのファイルには、最初はこれらのアクセス許可またはそのサブセットがあります（デフォルトのファイルアクセス許可で実行が許可されている場合でも、 &lt;code&gt;write-region&lt;/code&gt; は実行アクセス許可を付与しません）。GNUおよびその他のPOSIXのようなシステムでは、デフォルトのパーミッションは 'のビット単位の補数によって与えられます。</target>
        </trans-unit>
        <trans-unit id="3b83873a5445a410d77405199b5187de63fcc6c7" translate="yes" xml:space="preserve">
          <source>This function sets the display table of &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;table&lt;/var&gt;. The argument &lt;var&gt;table&lt;/var&gt; should be either a display table or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;window&lt;/var&gt; の表示テーブルをテーブルに設定し &lt;var&gt;table&lt;/var&gt; 。引数 &lt;var&gt;table&lt;/var&gt; は、表示テーブルまたは &lt;code&gt;nil&lt;/code&gt; のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="4a7a7f2249d7d6cd2355d17a2251e2fb4f1f7098" translate="yes" xml:space="preserve">
          <source>This function sets the display-start position of &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;position&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer. It returns &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">この関数は、表示開始位置設定 &lt;var&gt;window&lt;/var&gt; に &lt;var&gt;position&lt;/var&gt; に &lt;var&gt;window&lt;/var&gt; のバッファ。 &lt;var&gt;position&lt;/var&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="97ae9459f8d5e9fb33d39a21b359887306326b23" translate="yes" xml:space="preserve">
          <source>This function sets the frame parameter &lt;var&gt;parm&lt;/var&gt; to the specified &lt;var&gt;value&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">この関数は、フレームパラメータ &lt;var&gt;parm&lt;/var&gt; を指定された &lt;var&gt;value&lt;/var&gt; 設定します。 &lt;var&gt;frame&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、デフォルトで選択されたフレームになります。</target>
        </trans-unit>
        <trans-unit id="c97ef40bf03d8f1aea1070300ccec8136c47b4db" translate="yes" xml:space="preserve">
          <source>This function sets the fringe widths of window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used.</source>
          <target state="translated">この関数は、ウィンドウ &lt;var&gt;window&lt;/var&gt; フリンジ幅を設定します。場合は &lt;var&gt;window&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; の、選択されたウィンドウが使用されています。</target>
        </trans-unit>
        <trans-unit id="83ecc4a6cd4aa994edd5a6447e7a78b8e6ff227f" translate="yes" xml:space="preserve">
          <source>This function sets the insertion type of marker &lt;var&gt;marker&lt;/var&gt; to &lt;var&gt;type&lt;/var&gt;. If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, &lt;var&gt;marker&lt;/var&gt; will advance when text is inserted at its position. If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;marker&lt;/var&gt; does not advance when text is inserted there.</source>
          <target state="translated">この関数は、マーカの挿入型セット &lt;var&gt;marker&lt;/var&gt; する &lt;var&gt;type&lt;/var&gt; 。場合は &lt;var&gt;type&lt;/var&gt; ある &lt;code&gt;t&lt;/code&gt; 、 &lt;var&gt;marker&lt;/var&gt; テキストがその位置に挿入されたときに進めていきます。場合は &lt;var&gt;type&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 、 &lt;var&gt;marker&lt;/var&gt; テキストがそこに挿入されたときに進みません。</target>
        </trans-unit>
        <trans-unit id="4a6f47655132ae6e464a121fb49b79ed0583df94" translate="yes" xml:space="preserve">
          <source>This function sets the major mode of &lt;var&gt;buffer&lt;/var&gt; to the default value of &lt;code&gt;major-mode&lt;/code&gt;; if that is &lt;code&gt;nil&lt;/code&gt;, it uses the current buffer&amp;rsquo;s major mode (if that is suitable). As an exception, if &lt;var&gt;buffer&lt;/var&gt;&amp;rsquo;s name is</source>
          <target state="translated">この関数は、 &lt;var&gt;buffer&lt;/var&gt; のメジャーモードをメジャーモードのデフォルト値に &lt;code&gt;major-mode&lt;/code&gt; 。それが &lt;code&gt;nil&lt;/code&gt; の場合、現在のバッファのメジャーモードを使用します（適切な場合）。例外として、 &lt;var&gt;buffer&lt;/var&gt; の名前が</target>
        </trans-unit>
        <trans-unit id="e71767525b2252ad6e9d8e738b9dc78da825e49e" translate="yes" xml:space="preserve">
          <source>This function sets the mark to &lt;var&gt;position&lt;/var&gt;, and activates the mark. The old value of the mark is &lt;em&gt;not&lt;/em&gt; pushed onto the mark ring.</source>
          <target state="translated">この関数は、マークを &lt;var&gt;position&lt;/var&gt; 設定し、マークをアクティブにします。マークの古い値はマークリングにプッシュされ&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="589fb91eb0f177f688c981a6a3fbede785b0fea5" translate="yes" xml:space="preserve">
          <source>This function sets the match data from the elements of &lt;var&gt;match-list&lt;/var&gt;, which should be a list that was the value of a previous call to &lt;code&gt;match-data&lt;/code&gt;. (More precisely, anything that has the same format will work.)</source>
          <target state="translated">この関数は、match &lt;var&gt;match-list&lt;/var&gt; 要素から一致データを設定し &lt;code&gt;match-data&lt;/code&gt; 。これは、match-dataへの前の呼び出しの値であるリストである必要があります。（より正確には、同じ形式のすべてが機能します。）</target>
        </trans-unit>
        <trans-unit id="97eaf47c7114898820304792ea697d536d3b0560" translate="yes" xml:space="preserve">
          <source>This function sets the mode for reading keyboard input. If &lt;var&gt;interrupt&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs uses input interrupts. If it is &lt;code&gt;nil&lt;/code&gt;, then it uses &lt;small&gt;CBREAK&lt;/small&gt; mode. The default setting is system-dependent. Some systems always use &lt;small&gt;CBREAK&lt;/small&gt; mode regardless of what is specified.</source>
          <target state="translated">この関数は、キーボード入力を読み取るためのモードを設定します。場合は &lt;var&gt;interrupt&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; の場合、Emacsは、入力割り込みを使用しています。 &lt;code&gt;nil&lt;/code&gt; の場合、&lt;small&gt;CBREAK&lt;/small&gt;モードを使用します。デフォルト設定はシステムに依存します。一部のシステムは、指定内容に関係なく、常に&lt;small&gt;CBREAK&lt;/small&gt;モードを使用します。</target>
        </trans-unit>
        <trans-unit id="71d84482e16ce0fca0f8b33b252a44e942e9320d" translate="yes" xml:space="preserve">
          <source>This function sets the next buffer list of &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;next-buffers&lt;/var&gt;. The &lt;var&gt;window&lt;/var&gt; argument should be a live window or &lt;code&gt;nil&lt;/code&gt; (meaning the selected window). The argument &lt;var&gt;next-buffers&lt;/var&gt; should be a list of buffers.</source>
          <target state="translated">この関数は、 &lt;var&gt;window&lt;/var&gt; 次のバッファリストを &lt;var&gt;next-buffers&lt;/var&gt; に設定します。 &lt;var&gt;window&lt;/var&gt; 引数は、ライブウィンドウまたはあるべき &lt;code&gt;nil&lt;/code&gt; （選択したウィンドウを意味します）。引数 &lt;var&gt;next-buffers&lt;/var&gt; は、バッファーのリストである必要があります。</target>
        </trans-unit>
        <trans-unit id="1e59169e890a9ecd1a2a2f870ffce961d6f3f694" translate="yes" xml:space="preserve">
          <source>This function sets the outer frame position of &lt;var&gt;frame&lt;/var&gt; to (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;). The latter arguments specify pixels and normally count from the origin at the position (0, 0) of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s display. For child frames, they count from the native position of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s parent frame.</source>
          <target state="translated">この関数は、外枠の位置設定 &lt;var&gt;frame&lt;/var&gt; （に &lt;var&gt;x&lt;/var&gt; 、 &lt;var&gt;y&lt;/var&gt; ）。後者の引数はピクセルを指定し、通常は &lt;var&gt;frame&lt;/var&gt; の表示位置（0、0）の原点から数えます。子フレームの場合、 &lt;var&gt;frame&lt;/var&gt; の親フレームのネイティブ位置からカウントされます。</target>
        </trans-unit>
        <trans-unit id="b853c72596a6f7e79f4e7715b920798e076661d4" translate="yes" xml:space="preserve">
          <source>This function sets the parameter &lt;var&gt;parameter&lt;/var&gt; of &lt;var&gt;terminal&lt;/var&gt; to the specified &lt;var&gt;value&lt;/var&gt;, and returns the previous value of that parameter.</source>
          <target state="translated">この関数は、 &lt;var&gt;terminal&lt;/var&gt; のパラメータ &lt;var&gt;parameter&lt;/var&gt; を指定された &lt;var&gt;value&lt;/var&gt; に設定し、そのパラメータの前の値を返します。</target>
        </trans-unit>
        <trans-unit id="9bc74143c0437eaedf4fc4df9dc051546f90821a" translate="yes" xml:space="preserve">
          <source>This function sets the parent of &lt;var&gt;char-table&lt;/var&gt; to &lt;var&gt;new-parent&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;char-table&lt;/var&gt; の &lt;var&gt;new-parent&lt;/var&gt; をnew-parentに設定します。</target>
        </trans-unit>
        <trans-unit id="2e167469cf19c5707d1af22ed0b80a70f576bbfa" translate="yes" xml:space="preserve">
          <source>This function sets the process plist of &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;plist&lt;/var&gt;.</source>
          <target state="translated">この関数は、プロセスのplistの設定 &lt;var&gt;process&lt;/var&gt; する &lt;var&gt;plist&lt;/var&gt; の。</target>
        </trans-unit>
        <trans-unit id="0d543e1a094238616d2188e17ad03134a1ee4411" translate="yes" xml:space="preserve">
          <source>This function sets the query flag of &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;flag&lt;/var&gt;. It returns &lt;var&gt;flag&lt;/var&gt;.</source>
          <target state="translated">この関数は、の照会フラグ設定 &lt;var&gt;process&lt;/var&gt; する &lt;var&gt;flag&lt;/var&gt; 。 &lt;var&gt;flag&lt;/var&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="916bd48de6eb7abd4ec728e71d1b6170590bf5d7" translate="yes" xml:space="preserve">
          <source>This function sets the size of the text area of &lt;var&gt;frame&lt;/var&gt;, measured in terms of the canonical height and width of a character on &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;).</source>
          <target state="translated">この関数は、テキスト領域のサイズ設定 &lt;var&gt;frame&lt;/var&gt; 上の文字の標準的な高さと幅の面で測定された、 &lt;var&gt;frame&lt;/var&gt; （参照&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;フレームのフォントを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f8094fee061f71bdabaf198f0b56d7fc77e912d2" translate="yes" xml:space="preserve">
          <source>This function sets the syntax entry for &lt;var&gt;char&lt;/var&gt; according to &lt;var&gt;syntax-descriptor&lt;/var&gt;. &lt;var&gt;char&lt;/var&gt; must be a character, or a cons cell of the form &lt;code&gt;(&lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt;)&lt;/code&gt;; in the latter case, the function sets the syntax entries for all characters in the range between &lt;var&gt;min&lt;/var&gt; and &lt;var&gt;max&lt;/var&gt;, inclusive.</source>
          <target state="translated">この関数は、 &lt;var&gt;syntax-descriptor&lt;/var&gt; に従って &lt;var&gt;char&lt;/var&gt; の構文エントリを設定します。 &lt;var&gt;char&lt;/var&gt; 文字、またはフォームのコンス・セルでなければならない &lt;code&gt;(&lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;min&lt;/var&gt; 。 &lt;var&gt;max&lt;/var&gt; ） ; 後者の場合、関数は &lt;var&gt;min&lt;/var&gt; から &lt;var&gt;max&lt;/var&gt; までの範囲のすべての文字の構文エントリを設定します。</target>
        </trans-unit>
        <trans-unit id="15cacc785cffbd6ba5dd6a505175b1909a53195b" translate="yes" xml:space="preserve">
          <source>This function sets the top-level default value of &lt;var&gt;symbol&lt;/var&gt; to the specified &lt;var&gt;value&lt;/var&gt;. This comes in handy when you want to set the global value of &lt;var&gt;symbol&lt;/var&gt; regardless of whether your code runs in the context of &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s let-binding.</source>
          <target state="translated">この関数は、 &lt;var&gt;symbol&lt;/var&gt; の最上位のデフォルト値を指定された &lt;var&gt;value&lt;/var&gt; 。これは、コードが &lt;var&gt;symbol&lt;/var&gt; のlet-bindingのコンテキストで実行されているかどうかに関係なく、 &lt;var&gt;symbol&lt;/var&gt; のグローバル値を設定する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="2ca1f232e220a0f426853c4e8ca3f00deec1c67d" translate="yes" xml:space="preserve">
          <source>This function sets the value in &lt;var&gt;char-table&lt;/var&gt; for a range of characters &lt;var&gt;range&lt;/var&gt;. Here are the possibilities for &lt;var&gt;range&lt;/var&gt;:</source>
          <target state="translated">この関数は、 &lt;var&gt;char-table&lt;/var&gt; の値を文字 &lt;var&gt;range&lt;/var&gt; ます。 &lt;var&gt;range&lt;/var&gt; の可能性は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="40312ec11bf1a1affa5e36677924516dec94a851" translate="yes" xml:space="preserve">
          <source>This function sets the value of property &lt;var&gt;prop&lt;/var&gt; recorded in &lt;var&gt;overlay&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. It returns &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;overlay&lt;/var&gt; に記録されたプロパティ &lt;var&gt;prop&lt;/var&gt; の値をvalueに設定し &lt;var&gt;value&lt;/var&gt; 。 &lt;var&gt;value&lt;/var&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="63a2e42444159d8b3af48388e6700473f7f5af7f" translate="yes" xml:space="preserve">
          <source>This function sets the value of the &lt;var&gt;propname&lt;/var&gt; property of &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;process&lt;/var&gt; の &lt;var&gt;propname&lt;/var&gt; プロパティの値をvalueに設定し &lt;var&gt;value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="b80e7d0b563deda386317e1e61de5bf86afc19e2" translate="yes" xml:space="preserve">
          <source>This function sets the variable &lt;var&gt;symbol&lt;/var&gt; by consing &lt;var&gt;element&lt;/var&gt; onto the old value, if &lt;var&gt;element&lt;/var&gt; is not already a member of that value. It returns the resulting list, whether updated or not. The value of &lt;var&gt;symbol&lt;/var&gt; had better be a list already before the call. &lt;code&gt;add-to-list&lt;/code&gt; uses &lt;var&gt;compare-fn&lt;/var&gt; to compare &lt;var&gt;element&lt;/var&gt; against existing list members; if &lt;var&gt;compare-fn&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it uses &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">この関数は、変数設定 &lt;var&gt;symbol&lt;/var&gt; コンスによって &lt;var&gt;element&lt;/var&gt; すれば、古い値に &lt;var&gt;element&lt;/var&gt; すでにその値のメンバーではありません。更新されているかどうかに関係なく、結果のリストを返します。 &lt;var&gt;symbol&lt;/var&gt; の値は、呼び出しの前にすでにリストになっている方がよいでしょう。 &lt;code&gt;add-to-list&lt;/code&gt; は、 &lt;var&gt;compare-fn&lt;/var&gt; を使用して、 &lt;var&gt;element&lt;/var&gt; を既存のリストメンバーと比較します。場合 &lt;var&gt;compare-fn&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 、それは使用しています &lt;code&gt;equal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4111ab980658cbdea5847db8ee945f965ead81a7" translate="yes" xml:space="preserve">
          <source>This function sets the variable &lt;var&gt;symbol&lt;/var&gt; by inserting &lt;var&gt;element&lt;/var&gt; into the old value, which must be a list, at the position specified by &lt;var&gt;order&lt;/var&gt;. If &lt;var&gt;element&lt;/var&gt; is already a member of the list, its position in the list is adjusted according to &lt;var&gt;order&lt;/var&gt;. Membership is tested using &lt;code&gt;eq&lt;/code&gt;. This function returns the resulting list, whether updated or not.</source>
          <target state="translated">この関数は、 &lt;var&gt;order&lt;/var&gt; で指定された位置で、リストである必要がある古い値に &lt;var&gt;element&lt;/var&gt; を挿入することにより、変数 &lt;var&gt;symbol&lt;/var&gt; 設定します。 &lt;var&gt;element&lt;/var&gt; がすでにリストのメンバーである場合、リスト内のその位置は &lt;var&gt;order&lt;/var&gt; に従って調整されます。メンバーシップは、 &lt;code&gt;eq&lt;/code&gt; を使用してテストされます。この関数は、更新されているかどうかに関係なく、結果のリストを返します。</target>
        </trans-unit>
        <trans-unit id="1a53708dabb9acb24f509efb0eba613cef1c0a47" translate="yes" xml:space="preserve">
          <source>This function sets the width and/or height and the types of scroll bars for window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used.</source>
          <target state="translated">この関数は、ウィンドウ &lt;var&gt;window&lt;/var&gt; の幅や高さ、スクロールバーの種類を設定します。場合は &lt;var&gt;window&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; の、選択されたウィンドウが使用されています。</target>
        </trans-unit>
        <trans-unit id="92962232edaa7371b2896baae28c32d4053ade9c" translate="yes" xml:space="preserve">
          <source>This function sets the width of the text area of &lt;var&gt;frame&lt;/var&gt;, measured in characters. The argument &lt;var&gt;pretend&lt;/var&gt; has the same meaning as in &lt;code&gt;set-frame-height&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;frame&lt;/var&gt; のテキスト領域の幅を文字単位で設定します。引数の &lt;var&gt;pretend&lt;/var&gt; は、 &lt;code&gt;set-frame-height&lt;/code&gt; の場合と同じ意味です。</target>
        </trans-unit>
        <trans-unit id="71924053f128c77b1c4f334e88dd7a53ba22b670" translate="yes" xml:space="preserve">
          <source>This function sets up a change group for buffer &lt;var&gt;buffer&lt;/var&gt;, which defaults to the current buffer. It returns a handle that represents the change group. You must use this handle to activate the change group and subsequently to finish it.</source>
          <target state="translated">この関数は、バッファ &lt;var&gt;buffer&lt;/var&gt; 変更グループを設定します。デフォルトでは現在のバッファになります。変更グループを表すハンドルを返します。このハンドルを使用して変更グループをアクティブにし、その後それを終了する必要があります。</target>
        </trans-unit>
        <trans-unit id="ec7709fbb0a1662486c5ae1309111b94eabfa9e8" translate="yes" xml:space="preserve">
          <source>This function should be called when the operation is finished. It prints the message of &lt;var&gt;reporter&lt;/var&gt; followed by word &amp;lsquo;</source>
          <target state="translated">この関数は、操作が終了したときに呼び出す必要があります。 &lt;var&gt;reporter&lt;/var&gt; のメッセージに続いて単語 'を出力します</target>
        </trans-unit>
        <trans-unit id="d53aa3744aa3f3c1b0f811b35d5fccb6542fef70" translate="yes" xml:space="preserve">
          <source>This function should fontify the current buffer&amp;rsquo;s accessible portion, by calling the function specified by &lt;code&gt;font-lock-fontify-buffer-function&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;font-lock-fontify-buffer-function&lt;/code&gt; で指定された関数を呼び出すことにより、現在のバッファーのアクセス可能な部分をフォント化する必要があります。</target>
        </trans-unit>
        <trans-unit id="13a46cffeee7400374d4e2293fe5e808000e973c" translate="yes" xml:space="preserve">
          <source>This function should make sure the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; has been fontified. The optional arguments &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; default to the beginning and the end of the buffer&amp;rsquo;s accessible portion. Calls the function specified by &lt;code&gt;font-lock-ensure-function&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;beg&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; の間の領域がフォント化されていることを確認する必要があります。オプションの引数 &lt;var&gt;beg&lt;/var&gt; および &lt;var&gt;end&lt;/var&gt; は、デフォルトでバッファのアクセス可能な部分の最初と最後になります。 &lt;code&gt;font-lock-ensure-function&lt;/code&gt; functionで指定された関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="71fa298bb06145061fe858cb2b0e31275d92bd6d" translate="yes" xml:space="preserve">
          <source>This function should mark the fontification of the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; as outdated. If not specified or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; default to the beginning and end of the buffer&amp;rsquo;s accessible portion. Calls the function specified by &lt;code&gt;font-lock-flush-function&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;beg&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; の間の領域のフォント化を古いものとしてマークする必要があります。指定されていないか &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; は、デフォルトでバッファのアクセス可能な部分の最初と最後になります。 &lt;code&gt;font-lock-flush-function&lt;/code&gt; functionで指定された関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="f237d11806f7f9c5598c61dcaea0921f6c3f435e" translate="yes" xml:space="preserve">
          <source>This function signals a &lt;code&gt;buffer-read-only&lt;/code&gt; error if the current buffer is read-only. If the text at &lt;var&gt;position&lt;/var&gt; (which defaults to point) has the &lt;code&gt;inhibit-read-only&lt;/code&gt; text property set, the error will not be raised.</source>
          <target state="translated">この関数は、現在のバッファーが読み取り専用の場合、バッファー読み取り &lt;code&gt;buffer-read-only&lt;/code&gt; エラーを通知します。 &lt;var&gt;position&lt;/var&gt; あるテキスト（デフォルトではpoint）に &lt;code&gt;inhibit-read-only&lt;/code&gt; テキストプロパティが設定されている場合、エラーは発生しません。</target>
        </trans-unit>
        <trans-unit id="e3a37433a9d0257f28b8924b7f8996c03854d3a7" translate="yes" xml:space="preserve">
          <source>This function signals a &lt;code&gt;cyclic-variable-indirection&lt;/code&gt; error if there is a loop in the chain of symbols.</source>
          <target state="translated">この関数は、シンボルのチェーンにループがある場合、 &lt;code&gt;cyclic-variable-indirection&lt;/code&gt; エラーを通知します。</target>
        </trans-unit>
        <trans-unit id="ad9ce45bdf623ffc5bdaf6d3320de31dd03d0be0" translate="yes" xml:space="preserve">
          <source>This function signals an error if the buffer is narrowed, since the narrowing might have occurred in the middle of multibyte character sequences.</source>
          <target state="translated">この関数は、マルチバイト文字列の途中でバッファが狭くなった場合にエラーを通知します。</target>
        </trans-unit>
        <trans-unit id="d657ed0fa038e4144b320e056dad2ce3b259dc83" translate="yes" xml:space="preserve">
          <source>This function signals an error named by &lt;var&gt;error-symbol&lt;/var&gt;. The argument &lt;var&gt;data&lt;/var&gt; is a list of additional Lisp objects relevant to the circumstances of the error.</source>
          <target state="translated">この関数は、 &lt;var&gt;error-symbol&lt;/var&gt; で指定されたエラーを通知します。引数 &lt;var&gt;data&lt;/var&gt; は、エラーの状況に関連する追加のLispオブジェクトのリストです。</target>
        </trans-unit>
        <trans-unit id="e0c30c758c92166bfc85d9d039660b87a5e6c2a2" translate="yes" xml:space="preserve">
          <source>This function signals an error with an error message constructed by applying &lt;code&gt;format-message&lt;/code&gt; (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;) to &lt;var&gt;format-string&lt;/var&gt; and &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">この機能は適用することによって構築エラーメッセージでエラーを通知する &lt;code&gt;format-message&lt;/code&gt; （参照&lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;の書式文字列を&lt;/a&gt;する） &lt;var&gt;format-string&lt;/var&gt; 及び &lt;var&gt;args&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="6899cd0dfcf69c4a2bf69551795704ea8a5ba97d" translate="yes" xml:space="preserve">
          <source>This function signals the &lt;code&gt;quit&lt;/code&gt; condition with &lt;code&gt;(signal 'quit
nil)&lt;/code&gt;. This is the same thing that quitting does. (See &lt;code&gt;signal&lt;/code&gt; in &lt;a href=&quot;errors#Errors&quot;&gt;Errors&lt;/a&gt;.)</source>
          <target state="translated">この関数は、 &lt;code&gt;(signal 'quit nil)&lt;/code&gt; &lt;code&gt;quit&lt;/code&gt; 条件を通知します。これは、やめるのと同じことです。（&lt;a href=&quot;errors#Errors&quot;&gt;エラーの&lt;/a&gt; &lt;code&gt;signal&lt;/code&gt; を参照してください。）</target>
        </trans-unit>
        <trans-unit id="0d36d627261dd4e408ddcaa87aa02fc3c3b72b06" translate="yes" xml:space="preserve">
          <source>This function signals the error represented by &lt;var&gt;error&lt;/var&gt; with the specified error data &lt;var&gt;data&lt;/var&gt;. The module function should return soon after calling this function. This function could be useful, e.g., for signaling errors from module functions to Emacs.</source>
          <target state="translated">この関数は、指定されたエラーデータ &lt;var&gt;data&lt;/var&gt; して、エラーで表される &lt;var&gt;error&lt;/var&gt; を通知します。モジュール関数は、この関数を呼び出した直後に戻るはずです。この関数は、たとえば、モジュール関数からEmacsにエラーを通知する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="90c974b13e8dc22f833e6a73ea6c119a044ea13e" translate="yes" xml:space="preserve">
          <source>This function simply evaluates the result of a call to &lt;code&gt;read-minibuffer&lt;/code&gt;:</source>
          <target state="translated">この関数は、 &lt;code&gt;read-minibuffer&lt;/code&gt; の呼び出しの結果を評価するだけです。</target>
        </trans-unit>
        <trans-unit id="410a97766eec8dfabbf86b07735dfd8852ca2d63" translate="yes" xml:space="preserve">
          <source>This function simply pauses for &lt;var&gt;seconds&lt;/var&gt; seconds without updating the display. It pays no attention to available input. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この機能は、表示を更新せずに &lt;var&gt;seconds&lt;/var&gt; 秒間一時停止するだけです。利用可能な入力には注意を払いません。 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="21d35e9fb086ce275086e8a2c555187abe136eb7" translate="yes" xml:space="preserve">
          <source>This function sorts &lt;var&gt;sequence&lt;/var&gt; stably. Note that this function doesn&amp;rsquo;t work for all sequences; it may be used only for lists and vectors. If &lt;var&gt;sequence&lt;/var&gt; is a list, it is modified destructively. This functions returns the sorted &lt;var&gt;sequence&lt;/var&gt; and compares elements using &lt;var&gt;predicate&lt;/var&gt;. A stable sort is one in which elements with equal sort keys maintain their relative order before and after the sort. Stability is important when successive sorts are used to order elements according to different criteria.</source>
          <target state="translated">この関数は、 &lt;var&gt;sequence&lt;/var&gt; 安定してソートします。この関数はすべてのシーケンスで機能するとは限らないことに注意してください。リストとベクターにのみ使用できます。 &lt;var&gt;sequence&lt;/var&gt; がリストの場合、破壊的に変更されます。この関数は、ソートされた &lt;var&gt;sequence&lt;/var&gt; を返し、 &lt;var&gt;predicate&lt;/var&gt; を使用して要素を比較します。安定ソートとは、ソートキーが等しい要素が、ソートの前後で相対的な順序を維持するソートです。連続した並べ替えを使用してさまざまな基準に従って要素を並べ替える場合、安定性は重要です。</target>
        </trans-unit>
        <trans-unit id="44856e67f52758758839924c38ca6145b82b817d" translate="yes" xml:space="preserve">
          <source>This function specifies &lt;var&gt;window&lt;/var&gt; as the minibuffer window to use. This affects where the minibuffer is displayed if you put text in it without invoking the usual minibuffer commands. It has no effect on the usual minibuffer input functions because they all start by choosing the minibuffer window according to the selected frame.</source>
          <target state="translated">この関数は、使用するミニバッファ &lt;var&gt;window&lt;/var&gt; としてウィンドウを指定します。これは、通常のミニバッファコマンドを呼び出さずにテキストを挿入した場合に、ミニバッファが表示される場所に影響します。選択したフレームに応じてミニバッファウィンドウを選択することから始まるため、通常のミニバッファ入力関数には影響しません。</target>
        </trans-unit>
        <trans-unit id="8e31c36fa02ac3fd5c62b796e8278fc255cccbc6" translate="yes" xml:space="preserve">
          <source>This function specifies a pair of corresponding letters, one upper case and one lower case.</source>
          <target state="translated">この関数は、大文字と小文字の対応する文字のペアを指定します。</target>
        </trans-unit>
        <trans-unit id="73628c0bed95c08645238d207277e9e5e467efeb" translate="yes" xml:space="preserve">
          <source>This function specifies the Custom theme &lt;var&gt;theme&lt;/var&gt;&amp;rsquo;s face settings. &lt;var&gt;theme&lt;/var&gt; should be a symbol. Each argument in &lt;var&gt;args&lt;/var&gt; should be a list of the form</source>
          <target state="translated">この関数は、カスタムテーマ &lt;var&gt;theme&lt;/var&gt; の顔の設定を指定します。 &lt;var&gt;theme&lt;/var&gt; はシンボルでなければなりません。 &lt;var&gt;args&lt;/var&gt; の各引数は、フォームのリストである必要があります</target>
        </trans-unit>
        <trans-unit id="9a0e030950f28c84f095f999ed67addf53b49aab" translate="yes" xml:space="preserve">
          <source>This function specifies the Custom theme &lt;var&gt;theme&lt;/var&gt;&amp;rsquo;s variable settings. &lt;var&gt;theme&lt;/var&gt; should be a symbol. Each argument in &lt;var&gt;args&lt;/var&gt; should be a list of the form</source>
          <target state="translated">この関数は、カスタムテーマ &lt;var&gt;theme&lt;/var&gt; の変数設定を指定します。 &lt;var&gt;theme&lt;/var&gt; はシンボルでなければなりません。 &lt;var&gt;args&lt;/var&gt; の各引数は、フォームのリストである必要があります</target>
        </trans-unit>
        <trans-unit id="99a9605590004bfb9983548f07f076c53b0abbde" translate="yes" xml:space="preserve">
          <source>This function specifies the argument list &lt;var&gt;signature&lt;/var&gt; as the correct way to call &lt;var&gt;function&lt;/var&gt;. This causes the Emacs byte compiler to issue a warning whenever it comes across an Emacs Lisp program that calls &lt;var&gt;function&lt;/var&gt; any other way (however, it will still allow the code to be byte compiled). &lt;var&gt;when&lt;/var&gt; should be a string indicating when the variable was first made obsolete (usually a version number string).</source>
          <target state="translated">この関数は、引数リストを指定する &lt;var&gt;signature&lt;/var&gt; コールする正しい方法として &lt;var&gt;function&lt;/var&gt; 。これにより、Emacsバイトコンパイラは、他の方法で &lt;var&gt;function&lt;/var&gt; を呼び出すEmacs Lispプログラムに遭遇するたびに警告を発行します（ただし、コードをバイトコンパイルすることはできます）。 &lt;var&gt;when&lt;/var&gt; は、変数が最初に廃止された時期を示す文字列（通常はバージョン番号の文字列）である必要があります。</target>
        </trans-unit>
        <trans-unit id="93cd0705cac9e3a4d568885d91fc33383cc0b676" translate="yes" xml:space="preserve">
          <source>This function specifies the coding systems to use for subsequent output from and input to &lt;var&gt;process&lt;/var&gt;. It will use &lt;var&gt;decoding-system&lt;/var&gt; to decode subprocess output, and &lt;var&gt;encoding-system&lt;/var&gt; to encode subprocess input.</source>
          <target state="translated">この関数は、 &lt;var&gt;process&lt;/var&gt; からの後続の出力およびプロセスへの入力に使用するコーディングシステムを指定します。デコード &lt;var&gt;decoding-system&lt;/var&gt; を使用してサブプロセス出力をデコードし、 &lt;var&gt;encoding-system&lt;/var&gt; を使用してサブプロセス入力をエンコードします。</target>
        </trans-unit>
        <trans-unit id="b7456411126ca29b870a96d1157b0c99cc3c87aa" translate="yes" xml:space="preserve">
          <source>This function specifies the margin widths for window &lt;var&gt;window&lt;/var&gt;, in character cell units. The argument &lt;var&gt;left&lt;/var&gt; controls the left margin, and &lt;var&gt;right&lt;/var&gt; controls the right margin (default &lt;code&gt;0&lt;/code&gt;).</source>
          <target state="translated">この関数は、ウィンドウ &lt;var&gt;window&lt;/var&gt; マージン幅を文字セル単位で指定します。引数には、 &lt;var&gt;left&lt;/var&gt; のコントロールに左マージン、および &lt;var&gt;right&lt;/var&gt; コントロール右マージン（デフォルト &lt;code&gt;0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cfd357ba5847ff197c38f2834ab0b28ca79194cf" translate="yes" xml:space="preserve">
          <source>This function splits &lt;var&gt;string&lt;/var&gt; into substrings at matches for the regular expression &lt;var&gt;separators&lt;/var&gt;, like &lt;code&gt;split-string&lt;/code&gt; does (see &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;); in addition, it removes quoting from the substrings. It then makes a list of the substrings and returns it.</source>
          <target state="translated">この関数は、 &lt;code&gt;split-string&lt;/code&gt; と同様に、正規表現の &lt;var&gt;separators&lt;/var&gt; 文字に一致する &lt;var&gt;string&lt;/var&gt; を部分文字列に分割します（文字列の&lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;作成を&lt;/a&gt;参照）。さらに、部分文字列から引用符を削除します。次に、部分文字列のリストを作成して返します。</target>
        </trans-unit>
        <trans-unit id="ca61723920bf62189efd5901f4cb0a7d58235aef" translate="yes" xml:space="preserve">
          <source>This function splits &lt;var&gt;string&lt;/var&gt; into substrings based on the regular expression &lt;var&gt;separators&lt;/var&gt; (see &lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;Regular Expressions&lt;/a&gt;). Each match for &lt;var&gt;separators&lt;/var&gt; defines a splitting point; the substrings between splitting points are made into a list, which is returned.</source>
          <target state="translated">この関数分割 &lt;var&gt;string&lt;/var&gt; の正規表現に基づいてストリングに &lt;var&gt;separators&lt;/var&gt; （参照&lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;正規表現&lt;/a&gt;）。 &lt;var&gt;separators&lt;/var&gt; 各一致は、分割ポイントを定義します。分割点間の部分文字列がリストになり、それが返されます。</target>
        </trans-unit>
        <trans-unit id="16184ac30d366ba7e0e7cd7b5d2786b3f8a7ee30" translate="yes" xml:space="preserve">
          <source>This function splits the selected window into two side-by-side windows, putting the selected window on the left. If &lt;var&gt;size&lt;/var&gt; is positive, the left window gets &lt;var&gt;size&lt;/var&gt; columns; if &lt;var&gt;size&lt;/var&gt; is negative, the right window gets -&lt;var&gt;size&lt;/var&gt; columns.</source>
          <target state="translated">この関数は、選択したウィンドウを2つのサイドバイサイドウィンドウに分割し、選択したウィンドウを左側に配置します。場合は &lt;var&gt;size&lt;/var&gt; 正で、左のウィンドウには、取得する &lt;var&gt;size&lt;/var&gt; 列を、場合 &lt;var&gt;size&lt;/var&gt; 負の場合、右側のウィンドウには、取得- &lt;var&gt;size&lt;/var&gt; 列。</target>
        </trans-unit>
        <trans-unit id="7f2f9d7a92cae81e5bf4e5ebb0339954e97c6f8a" translate="yes" xml:space="preserve">
          <source>This function splits the selected window into two windows, one above the other, leaving the upper window selected. If &lt;var&gt;size&lt;/var&gt; is positive, the upper window gets &lt;var&gt;size&lt;/var&gt; lines; if &lt;var&gt;size&lt;/var&gt; is negative, the lower window gets -&lt;var&gt;size&lt;/var&gt; lines.</source>
          <target state="translated">この関数は、選択したウィンドウを上下に2つのウィンドウに分割し、上のウィンドウを選択したままにします。場合は &lt;var&gt;size&lt;/var&gt; 正で、上のウィンドウには、取得する &lt;var&gt;size&lt;/var&gt; ラインを。場合 &lt;var&gt;size&lt;/var&gt; 負で、下のウィンドウが取得- &lt;var&gt;size&lt;/var&gt; ライン。</target>
        </trans-unit>
        <trans-unit id="70f860aae420608432f16a68f9507c030a6f2bf0" translate="yes" xml:space="preserve">
          <source>This function stops Emacs and returns control to the superior process. If and when the superior process resumes Emacs, &lt;code&gt;suspend-emacs&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; to its caller in Lisp.</source>
          <target state="translated">この関数はEmacsを停止し、制御を上位プロセスに戻します。上位のプロセスがEmacsを再開 &lt;code&gt;suspend-emacs&lt;/code&gt; 、suspend-emacsはLispの呼び出し元に &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="96dc57f0fe40c0037be35a60b8c3f97b80944403" translate="yes" xml:space="preserve">
          <source>This function stops the specified &lt;var&gt;process&lt;/var&gt;. If it is a real subprocess running a program, it sends the signal &lt;code&gt;SIGTSTP&lt;/code&gt; to that subprocess. If &lt;var&gt;process&lt;/var&gt; represents a network, serial, or pipe connection, this function inhibits handling of the incoming data from the connection; for a network server, this means not accepting new connections. Use &lt;code&gt;continue-process&lt;/code&gt; to resume normal execution.</source>
          <target state="translated">この関数は、指定された &lt;var&gt;process&lt;/var&gt; 停止します。プログラムを実行している実際のサブプロセスの場合は、シグナル &lt;code&gt;SIGTSTP&lt;/code&gt; をそのサブプロセスに送信します。 &lt;var&gt;process&lt;/var&gt; がネットワーク、シリアル、またはパイプ接続を表す場合、この関数は接続からの着信データの処理を禁止します。ネットワークサーバーの場合、これは新しい接続を受け入れないことを意味します。通常の実行を再開するに &lt;code&gt;continue-process&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="07f23b4a366f8c9c6b95d3ec402619dcc44bddd7" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;definition&lt;/var&gt; in the function cell of &lt;var&gt;symbol&lt;/var&gt;. The result is &lt;var&gt;definition&lt;/var&gt;. Normally &lt;var&gt;definition&lt;/var&gt; should be a function or the name of a function, but this is not checked. The argument &lt;var&gt;symbol&lt;/var&gt; is an ordinary evaluated argument.</source>
          <target state="translated">この関数は、 &lt;var&gt;symbol&lt;/var&gt; の関数セルに &lt;var&gt;definition&lt;/var&gt; を格納します。結果は &lt;var&gt;definition&lt;/var&gt; です。通常、 &lt;var&gt;definition&lt;/var&gt; は関数または関数の名前である必要がありますが、これはチェックされません。引数 &lt;var&gt;symbol&lt;/var&gt; は、通常の評価された引数です。</target>
        </trans-unit>
        <trans-unit id="bb7d1a47d2c4ec64baeb5315985767cadddc7ca6" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;object&lt;/var&gt; as the new &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;cons&lt;/var&gt;, replacing its previous &lt;small&gt;CAR&lt;/small&gt;. In other words, it changes the &lt;small&gt;CAR&lt;/small&gt; slot of &lt;var&gt;cons&lt;/var&gt; to refer to &lt;var&gt;object&lt;/var&gt;. It returns the value &lt;var&gt;object&lt;/var&gt;. For example:</source>
          <target state="translated">この関数は、 &lt;var&gt;object&lt;/var&gt; を &lt;var&gt;cons&lt;/var&gt; の新しい&lt;small&gt;CAR&lt;/small&gt;として格納し、以前の&lt;small&gt;CARを&lt;/small&gt;置き換えます。つまり、 &lt;var&gt;object&lt;/var&gt; を参照するように &lt;var&gt;cons&lt;/var&gt; の&lt;small&gt;CAR&lt;/small&gt;スロットを変更します。値 &lt;var&gt;object&lt;/var&gt; 返します。例えば：&lt;small&gt;&lt;/small&gt;&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c08fe7f266038cf14b62dbf539646605eef52c5e" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;object&lt;/var&gt; as the new &lt;small&gt;CDR&lt;/small&gt; of &lt;var&gt;cons&lt;/var&gt;, replacing its previous &lt;small&gt;CDR&lt;/small&gt;. In other words, it changes the &lt;small&gt;CDR&lt;/small&gt; slot of &lt;var&gt;cons&lt;/var&gt; to refer to &lt;var&gt;object&lt;/var&gt;. It returns the value &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;object&lt;/var&gt; を &lt;var&gt;cons&lt;/var&gt; の新しい&lt;small&gt;CDR&lt;/small&gt;として格納し、以前の&lt;small&gt;CDRを&lt;/small&gt;置き換えます。つまり、 &lt;var&gt;object&lt;/var&gt; を参照するように &lt;var&gt;cons&lt;/var&gt; の&lt;small&gt;CDR&lt;/small&gt;スロットを変更します。値 &lt;var&gt;object&lt;/var&gt; 返します。&lt;small&gt;&lt;/small&gt;&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3c261fa1fc4ae1def15df2f4a8286e2151bb80ee" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; as the value of the property &lt;var&gt;propname&lt;/var&gt; for the character &lt;var&gt;char&lt;/var&gt;.</source>
          <target state="translated">この関数は、文字 &lt;var&gt;char&lt;/var&gt; のプロパティ &lt;var&gt;propname&lt;/var&gt; の &lt;var&gt;value&lt;/var&gt; として値を格納します。</target>
        </trans-unit>
        <trans-unit id="971d2ea15f0da38a819fc0d1aee361e1166f61c0" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; in extra slot &lt;var&gt;n&lt;/var&gt; (zero based) of &lt;var&gt;char-table&lt;/var&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;char-table&lt;/var&gt; の追加のスロット &lt;var&gt;n&lt;/var&gt; （ゼロベース）に &lt;var&gt;value&lt;/var&gt; を格納します。</target>
        </trans-unit>
        <trans-unit id="a7541c462692c6515985e2f1d73946bc08fee15b" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; in the element of &lt;var&gt;vector&lt;/var&gt; whose index is &lt;var&gt;index&lt;/var&gt;. It raises the &lt;code&gt;args-out-of-range&lt;/code&gt; error condition if the value of &lt;var&gt;index&lt;/var&gt; is invalid.</source>
          <target state="translated">この関数は、インデックスが &lt;var&gt;index&lt;/var&gt; である &lt;var&gt;vector&lt;/var&gt; の要素に &lt;var&gt;value&lt;/var&gt; を格納します。 &lt;var&gt;index&lt;/var&gt; の値が無効な場合、 &lt;code&gt;args-out-of-range&lt;/code&gt; エラー条件が発生します。</target>
        </trans-unit>
        <trans-unit id="16c7659273a0207936277e69b6b955556bcae2c0" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; in the extra slot &lt;var&gt;slot&lt;/var&gt; of &lt;var&gt;display-table&lt;/var&gt;. The argument &lt;var&gt;slot&lt;/var&gt; may be a number from 0 to 5 inclusive, or a slot name (symbol). Valid symbols are &lt;code&gt;truncation&lt;/code&gt;, &lt;code&gt;wrap&lt;/code&gt;, &lt;code&gt;escape&lt;/code&gt;, &lt;code&gt;control&lt;/code&gt;, &lt;code&gt;selective-display&lt;/code&gt;, and &lt;code&gt;vertical-border&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;display-table&lt;/var&gt; の追加のスロット &lt;var&gt;slot&lt;/var&gt; に &lt;var&gt;value&lt;/var&gt; を格納します。引数 &lt;var&gt;slot&lt;/var&gt; は、0から5までの数字、またはスロット名（記号）です。有効な記号は、 &lt;code&gt;truncation&lt;/code&gt; 、 &lt;code&gt;wrap&lt;/code&gt; 、 &lt;code&gt;escape&lt;/code&gt; 、 &lt;code&gt;control&lt;/code&gt; 、 &lt;code&gt;selective-display&lt;/code&gt; 、および &lt;code&gt;vertical-border&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c5ed2f65a8b3cf694f27819b254331806e1a5012" translate="yes" xml:space="preserve">
          <source>This function stores the UTF-8 encoded text of a Lisp string specified by &lt;var&gt;arg&lt;/var&gt; in the array of &lt;code&gt;char&lt;/code&gt; pointed by &lt;var&gt;buf&lt;/var&gt;, which should have enough space to hold at least &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; bytes, including the terminating null byte. The argument &lt;var&gt;len&lt;/var&gt; must not be a &lt;code&gt;NULL&lt;/code&gt; pointer, and, when the function is called, it should point to a value that specifies the size of &lt;var&gt;buf&lt;/var&gt; in bytes.</source>
          <target state="translated">この関数は、 &lt;var&gt;arg&lt;/var&gt; で指定されたLisp文字列のUTF-8エンコードされたテキストを、 &lt;var&gt;buf&lt;/var&gt; が指す &lt;code&gt;char&lt;/code&gt; の配列に格納します。この配列には、終了ヌルバイトを含め、少なくとも &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; &lt;var&gt;len&lt;/var&gt; バイトを保持するのに十分なスペースが必要です。引数 &lt;var&gt;len&lt;/var&gt; は &lt;code&gt;NULL&lt;/code&gt; ポインターであってはならず、関数が呼び出されるときは、 &lt;var&gt;buf&lt;/var&gt; のサイズをバイト単位で指定する値を指している必要があります。</target>
        </trans-unit>
        <trans-unit id="630b27c76886d6fcb8ae10ea151ea4d623a738b0" translate="yes" xml:space="preserve">
          <source>This function supports two types of quoting: enclosing a whole string in double quotes &lt;code&gt;&quot;&amp;hellip;&quot;&lt;/code&gt;, and quoting individual characters with a backslash escape &amp;lsquo;</source>
          <target state="translated">この関数は、文字列全体を二重引用符 &lt;code&gt;&quot;&amp;hellip;&quot;&lt;/code&gt; で囲むことと、個々の文字を円記号で区切ることの2種類の引用符をサポートします。</target>
        </trans-unit>
        <trans-unit id="bd247bf82030471e5dd6bd55c689c446343681ad" translate="yes" xml:space="preserve">
          <source>This function swaps the text of the current buffer and that of its argument &lt;var&gt;buffer&lt;/var&gt;. It signals an error if one of the two buffers is an indirect buffer (see &lt;a href=&quot;indirect-buffers#Indirect-Buffers&quot;&gt;Indirect Buffers&lt;/a&gt;) or is a base buffer of an indirect buffer.</source>
          <target state="translated">この関数は、現在のバッファのテキストとその引数 &lt;var&gt;buffer&lt;/var&gt; のテキストを交換します。二つのバッファの一方が間接バッファ（参照である場合はエラーを通知&lt;a href=&quot;indirect-buffers#Indirect-Buffers&quot;&gt;間接バッファの&lt;/a&gt;）または間接バッファのベースバッファです。</target>
        </trans-unit>
        <trans-unit id="d0028e395451e0dca1cade0c01ef32a22585e56c" translate="yes" xml:space="preserve">
          <source>This function switches &lt;var&gt;image&lt;/var&gt; to frame number &lt;var&gt;n&lt;/var&gt;. It replaces a frame number outside the valid range with that of the end of the range, unless &lt;var&gt;nocheck&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;image&lt;/var&gt; does not contain a frame with the specified number, the image displays as a hollow box.</source>
          <target state="translated">この関数は、 &lt;var&gt;image&lt;/var&gt; をフレーム番号 &lt;var&gt;n&lt;/var&gt; に切り替えます。 &lt;var&gt;nocheck&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外でない限り、有効な範囲外のフレーム番号を範囲の終わりのフレーム番号に置き換えます。指定した番号のフレームが &lt;var&gt;image&lt;/var&gt; 含まれていない場合、画像は中空のボックスとして表示されます。</target>
        </trans-unit>
        <trans-unit id="d0c47be812e5da02bba74b2039d70c752c2a32d3" translate="yes" xml:space="preserve">
          <source>This function takes a &lt;code&gt;double&lt;/code&gt; argument &lt;var&gt;d&lt;/var&gt; and returns the corresponding Emacs floating-point value.</source>
          <target state="translated">この関数は &lt;code&gt;double&lt;/code&gt; 引数 &lt;var&gt;d&lt;/var&gt; を取り、対応するEmacs浮動小数点値を返します。</target>
        </trans-unit>
        <trans-unit id="cb7728f69cd5d214a8e62342e5ef40ef4c5f52c8" translate="yes" xml:space="preserve">
          <source>This function takes a &lt;em&gt;prec2&lt;/em&gt; grammar &lt;var&gt;table&lt;/var&gt; and returns an alist suitable for use in &lt;code&gt;smie-setup&lt;/code&gt;. The &lt;em&gt;prec2&lt;/em&gt;&lt;var&gt;table&lt;/var&gt; is itself meant to be built by one of the functions below.</source>
          <target state="translated">この関数は、&lt;em&gt;prec2&lt;/em&gt;文法 &lt;var&gt;table&lt;/var&gt; を &lt;code&gt;smie-setup&lt;/code&gt; 、smie-setupでの使用に適した&lt;em&gt;リスト&lt;/em&gt;を返します。&lt;em&gt;prec2&lt;/em&gt; &lt;var&gt;table&lt;/var&gt; 自身が下記の機能の一つで構築されることを意図しています。</target>
        </trans-unit>
        <trans-unit id="3ed16a739f28a4a598a044df30c6d9befd0525bf" translate="yes" xml:space="preserve">
          <source>This function takes a decoded time structure and adds &lt;var&gt;delta&lt;/var&gt; (also a decoded time structure) to it. Elements in &lt;var&gt;delta&lt;/var&gt; that are &lt;code&gt;nil&lt;/code&gt; are ignored.</source>
          <target state="translated">この関数は、デコードされた時間構造を取り、それに &lt;var&gt;delta&lt;/var&gt; （デコードされた時間構造も）を追加します。内の要素 &lt;var&gt;delta&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; が無視されます。</target>
        </trans-unit>
        <trans-unit id="83fe18443f123612b9dd2e6fae4f154156871d89" translate="yes" xml:space="preserve">
          <source>This function takes a search path string such as the value of the &lt;code&gt;PATH&lt;/code&gt; environment variable, and splits it at the separators, returning a list of directories. &lt;code&gt;nil&lt;/code&gt; in this list means the current directory. Although the function&amp;rsquo;s name says &amp;ldquo;colon&amp;rdquo;, it actually uses the value of &lt;code&gt;path-separator&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;PATH&lt;/code&gt; 環境変数の値などの検索パス文字列を受け取り、それを区切り文字で分割して、ディレクトリのリストを返します。このリストの &lt;code&gt;nil&lt;/code&gt; は、現在のディレクトリを意味します。関数の名前には「コロン」と書かれていますが、実際には &lt;code&gt;path-separator&lt;/code&gt; 値を使用しています。</target>
        </trans-unit>
        <trans-unit id="a874cce8e01bf2953b84c13ece649958fb7e4913" translate="yes" xml:space="preserve">
          <source>This function takes an integer argument &lt;var&gt;n&lt;/var&gt; and returns the corresponding &lt;code&gt;emacs_value&lt;/code&gt; object. It returns either a fixnum or a bignum depending on whether the value of &lt;var&gt;n&lt;/var&gt; is inside the limits set by &lt;code&gt;most-negative-fixnum&lt;/code&gt; and &lt;code&gt;most-positive-fixnum&lt;/code&gt; (see &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;Integer Basics&lt;/a&gt;).</source>
          <target state="translated">この関数は整数の引数 &lt;var&gt;n&lt;/var&gt; を取り、対応する &lt;code&gt;emacs_value&lt;/code&gt; オブジェクトを返します。 &lt;var&gt;n&lt;/var&gt; の値が、 &lt;code&gt;most-negative-fixnum&lt;/code&gt; および &lt;code&gt;most-positive-fixnum&lt;/code&gt; によって設定された制限内にあるかどうかに応じて、fixnumまたはbignumのいずれかを返します（&lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;整数の基本を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="a1f78b7b4226332d4d5703ed01188a6ffb4fa704" translate="yes" xml:space="preserve">
          <source>This function takes one or more normal hook variable names as arguments, and runs each hook in turn. Each argument should be a symbol that is a normal hook variable. These arguments are processed in the order specified.</source>
          <target state="translated">この関数は、1つ以上の通常のフック変数名を引数にとり、各フックを順番に実行します。各引数は、通常のフック変数であるシンボルでなければなりません。これらの引数は、指定された順序で処理されます。</target>
        </trans-unit>
        <trans-unit id="a7828711d6b475a4d56a3d656ef4a42d86a01a05" translate="yes" xml:space="preserve">
          <source>This function takes several &lt;em&gt;prec2&lt;/em&gt;&lt;var&gt;tables&lt;/var&gt; and merges them into a new &lt;em&gt;prec2&lt;/em&gt; table.</source>
          <target state="translated">この関数は、いくつかの&lt;em&gt;prec2&lt;/em&gt; &lt;var&gt;tables&lt;/var&gt; を&lt;em&gt;受け取り&lt;/em&gt;、それらを新しい&lt;em&gt;prec2&lt;/em&gt;テーブルに&lt;em&gt;マージし&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e6cbefd59af326e24706f814510f12ae067848a4" translate="yes" xml:space="preserve">
          <source>This function tells Font Lock mode to run the Lisp function &lt;var&gt;function&lt;/var&gt; any time it has to fontify or refontify part of the current buffer. It calls &lt;var&gt;function&lt;/var&gt; before calling the default fontification functions, and gives it two arguments, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, which specify the region to be fontified or refontified.</source>
          <target state="translated">この関数は、現在のバッファの一部をフォント化または再フォント化 &lt;var&gt;function&lt;/var&gt; 必要があるときはいつでも、Lisp関数関数を実行するようにフォントロックモードに指示します。これは、呼び出す &lt;var&gt;function&lt;/var&gt; デフォルトのフォント表示化機能を呼び出す前に、それに二つの引数を与え、 &lt;var&gt;start&lt;/var&gt; および &lt;var&gt;end&lt;/var&gt; フォント表示化またはrefontifiedされる領域を指定します。</target>
        </trans-unit>
        <trans-unit id="7c5a38df2971586fea43db654867a497e98cde6d" translate="yes" xml:space="preserve">
          <source>This function tests for the falsehood of &lt;var&gt;condition&lt;/var&gt;. It returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;condition&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise. The function &lt;code&gt;not&lt;/code&gt; is identical to &lt;code&gt;null&lt;/code&gt;, and we recommend using the name &lt;code&gt;null&lt;/code&gt; if you are testing for an empty list.</source>
          <target state="translated">この関数は、 &lt;var&gt;condition&lt;/var&gt; の虚偽をテストします。それは返す &lt;code&gt;t&lt;/code&gt; 場合は &lt;var&gt;condition&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 、そして &lt;code&gt;nil&lt;/code&gt; そう。関数 &lt;code&gt;not&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; と同じではありません。空のリストをテストする場合は、 &lt;code&gt;null&lt;/code&gt; という名前を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="9c0364e332c4d07d41dde3f53bb505600cde2ea1" translate="yes" xml:space="preserve">
          <source>This function tests to see whether &lt;var&gt;object&lt;/var&gt; is a member of &lt;var&gt;list&lt;/var&gt;. If it is, &lt;code&gt;memq&lt;/code&gt; returns a list starting with the first occurrence of &lt;var&gt;object&lt;/var&gt;. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;. The letter &amp;lsquo;</source>
          <target state="translated">この関数は、 &lt;var&gt;object&lt;/var&gt; が &lt;var&gt;list&lt;/var&gt; メンバーであるかどうかをテストします。そうである場合、 &lt;code&gt;memq&lt;/code&gt; は &lt;var&gt;object&lt;/var&gt; 最初の出現から始まるリストを返します。それ以外の場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。手紙 '</target>
        </trans-unit>
        <trans-unit id="b8f214400d5e4bd3fdd1e4b5595459f1e893fbef" translate="yes" xml:space="preserve">
          <source>This function tests whether &lt;var&gt;filename&lt;/var&gt; is a remote file. If &lt;var&gt;filename&lt;/var&gt; is local (not remote), the return value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; is indeed remote, the return value is a string that identifies the remote system.</source>
          <target state="translated">この関数は、 &lt;var&gt;filename&lt;/var&gt; がリモートファイルであるかどうかをテストします。場合は &lt;var&gt;filename&lt;/var&gt; （いないリモートの）ローカルで、戻り値は &lt;code&gt;nil&lt;/code&gt; 。場合は &lt;var&gt;filename&lt;/var&gt; リモート確かにある、戻り値は、リモート・システムを識別する文字列です。</target>
        </trans-unit>
        <trans-unit id="166b6295a4af8c329ff135a323923c73a4a9005a" translate="yes" xml:space="preserve">
          <source>This function tests whether all its arguments are numerically equal, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">この関数は、すべての引数が数値的に等しいかどうかをテストし、等しい場合は &lt;code&gt;t&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7ff8a88a68c6fbf38aec8250607ce1d92a938174" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is greater than or equal to the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">この関数は、各引数が次の引数以上であるかどうかをテストします。そうで &lt;code&gt;t&lt;/code&gt; 場合はtを返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="53d4414676443d823cea925b110cc4855e1f8b40" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is less than or equal to the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">この関数は、各引数が次の引数以下であるかどうかをテストします。そうで &lt;code&gt;t&lt;/code&gt; 場合はtを返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4b4bac363f682ea3eddf0da72721e4fe61accbdf" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is strictly greater than the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">この関数は、各引数が次の引数よりも厳密に大きいかどうかをテストします。そうで &lt;code&gt;t&lt;/code&gt; 場合はtを返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a6a062da58806d2a8fa5bb609fc972c58f9946f7" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is strictly less than the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">この関数は、各引数が次の引数よりも厳密に小さいかどうかをテストします。そうで &lt;code&gt;t&lt;/code&gt; 場合はtを返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="02adba9730538e774beb1a3df0c8231325254531" translate="yes" xml:space="preserve">
          <source>This function tests whether its arguments are numerically equal, and returns &lt;code&gt;t&lt;/code&gt; if they are not, and &lt;code&gt;nil&lt;/code&gt; if they are.</source>
          <target state="translated">この関数は、引数が数値的に等しいかどうかをテストし、等しくない場合は &lt;code&gt;t&lt;/code&gt; を返し、等しい場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b7cf4e5aa539a1ff43fac64027ef87896c817d69" translate="yes" xml:space="preserve">
          <source>This function tests whether the Lisp object represented by &lt;var&gt;val&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;; it returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; accordingly.</source>
          <target state="translated">この関数は、 &lt;var&gt;val&lt;/var&gt; で表されるLispオブジェクトが非 &lt;code&gt;nil&lt;/code&gt; であるかどうかをテストします。それに応じて &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3af851ea00a187c2d1d3760c74c4773a109204df" translate="yes" xml:space="preserve">
          <source>This function throws to the Lisp &lt;code&gt;catch&lt;/code&gt; symbol represented by &lt;var&gt;tag&lt;/var&gt;, passing it &lt;var&gt;value&lt;/var&gt; as the value to return. Your module function should in general return soon after calling this function. One use of this function is when you want to re-throw a non-local exit from one of the called</source>
          <target state="translated">この関数は、 &lt;var&gt;tag&lt;/var&gt; で表されるLisp &lt;code&gt;catch&lt;/code&gt; シンボルにスローし、返す &lt;var&gt;value&lt;/var&gt; として値を渡します。モジュール関数は通常、この関数を呼び出した直後に戻るはずです。この関数の使用法の1つは、呼び出されたものの1つから非ローカル出口を再スローする場合です。</target>
        </trans-unit>
        <trans-unit id="8521a4059027fdbc02f10dd9a2630501e9dfc2a0" translate="yes" xml:space="preserve">
          <source>This function tries immediately to redisplay. The optional argument &lt;var&gt;force&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, forces the redisplay to be performed, instead of being preempted if input is pending.</source>
          <target state="translated">この関数はすぐに再表示を試みます。オプションの引数 &lt;var&gt;force&lt;/var&gt; は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、入力が保留中の場合にプリエンプションされるのではなく、再表示を強制的に実行します。</target>
        </trans-unit>
        <trans-unit id="94eb72ee58d11703e96707e483ace3e221567d45" translate="yes" xml:space="preserve">
          <source>This function tries to determine a suitable coding system for &lt;var&gt;filename&lt;/var&gt;. It examines the buffer visiting the named file, using the variables documented above in sequence, until it finds a match for one of the rules specified by these variables. It then returns a cons cell of the form &lt;code&gt;(&lt;var&gt;coding&lt;/var&gt; . &lt;var&gt;source&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;coding&lt;/var&gt; is the coding system to use and &lt;var&gt;source&lt;/var&gt; is a symbol, one of &lt;code&gt;auto-coding-alist&lt;/code&gt;, &lt;code&gt;auto-coding-regexp-alist&lt;/code&gt;, &lt;code&gt;:coding&lt;/code&gt;, or &lt;code&gt;auto-coding-functions&lt;/code&gt;, indicating which one supplied the matching rule. The value &lt;code&gt;:coding&lt;/code&gt; means the coding system was specified by the &lt;code&gt;coding:&lt;/code&gt; tag in the file (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Specify-Coding.html#Specify-Coding&quot;&gt;coding tag&lt;/a&gt; in</source>
          <target state="translated">この関数は、 &lt;var&gt;filename&lt;/var&gt; 適したコーディングシステムを決定しようとします。上記の変数を順番に使用して、名前付きファイルにアクセスするバッファーを調べ、これらの変数で指定されたルールの1つに一致するものが見つかるまで調べます。次に、 &lt;code&gt;(&lt;var&gt;coding&lt;/var&gt; . &lt;var&gt;source&lt;/var&gt;)&lt;/code&gt; 形式のconsセルを返します。ここで、 &lt;var&gt;coding&lt;/var&gt; は使用するコーディングシステムであり、 &lt;var&gt;source&lt;/var&gt; はシンボルであり、 &lt;code&gt;auto-coding-alist&lt;/code&gt; 、 &lt;code&gt;auto-coding-regexp-alist&lt;/code&gt; 、 &lt;code&gt;:coding&lt;/code&gt; 、または &lt;code&gt;auto-coding-functions&lt;/code&gt; いずれかです。-coding-functions、どちらが一致ルールを提供したかを示します。値 &lt;code&gt;:coding&lt;/code&gt; コーディングシステムがファイル内の &lt;code&gt;coding:&lt;/code&gt; タグによって指定されたことを意味します（の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Specify-Coding.html#Specify-Coding&quot;&gt;コーディングタグ&lt;/a&gt;を参照）</target>
        </trans-unit>
        <trans-unit id="b7d3c21b956e5305b485992993d4fa8cb2c00b94" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; at a location specified by &lt;var&gt;alist&lt;/var&gt;. For this purpose, &lt;var&gt;alist&lt;/var&gt; should contain a &lt;code&gt;direction&lt;/code&gt; entry whose value is one of &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;above&lt;/code&gt; (or &lt;code&gt;up&lt;/code&gt;), &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;below&lt;/code&gt; (or &lt;code&gt;down&lt;/code&gt;). Other values are usually interpreted as &lt;code&gt;below&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;var&gt;alist&lt;/var&gt; で指定された場所に &lt;var&gt;buffer&lt;/var&gt; を表示しようとします。この目的のために、 &lt;var&gt;alist&lt;/var&gt; は、値が &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;above&lt;/code&gt; （または &lt;code&gt;up&lt;/code&gt; ）、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;below&lt;/code&gt; （または &lt;code&gt;down&lt;/code&gt; ）のいずれかである &lt;code&gt;direction&lt;/code&gt; エントリを含める必要があります。他の値は通常、 &lt;code&gt;below&lt;/code&gt; 解釈されます。</target>
        </trans-unit>
        <trans-unit id="16359c1241f769d5786f7e49ca6abe50fb64a7c7" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by choosing an existing window and displaying the buffer in that window. It can fail if all windows are dedicated to other buffers (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;).</source>
          <target state="translated">この関数は、既存のウィンドウを選択し、そのウィンドウにバッファーを表示することにより、 &lt;var&gt;buffer&lt;/var&gt; を表示しようとします。すべてのウィンドウは、他のバッファに専念していた場合、それは失敗する可能性があります（参照&lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;のWindows専用&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a1f5805eb9f122fd8d225a2f9de528405b30b983" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a frame that meets a predicate (by default any frame other than the selected frame).</source>
          <target state="translated">この関数は、述語を満たすフレーム（デフォルトでは、選択したフレーム以外のフレーム）を見つけることにより、 &lt;var&gt;buffer&lt;/var&gt; を表示しようとします。</target>
        </trans-unit>
        <trans-unit id="8412a8065d8a055dfcb7ac837ea6d70076c1c538" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a window that is already displaying it. Windows on the selected frame are preferred to windows on other frames.</source>
          <target state="translated">この関数は、すでに &lt;var&gt;buffer&lt;/var&gt; を表示しているウィンドウを見つけて、バッファを表示しようとします。選択したフレームのウィンドウは、他のフレームのウィンドウよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="2cc04374af94b0104430ba547edb5a026d1dfe8e" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a window that is displaying a buffer in a given mode.</source>
          <target state="translated">この関数は、指定されたモードでバッファーを表示しているウィンドウを見つけることにより、 &lt;var&gt;buffer&lt;/var&gt; を表示しようとします。</target>
        </trans-unit>
        <trans-unit id="3bc0e8fac57bf562dfac0c627b407c346c91a217" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by splitting the largest or least recently-used window (usually located on the selected frame). It actually performs the split by calling the function specified by &lt;code&gt;split-window-preferred-function&lt;/code&gt; (see &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;Choosing Window Options&lt;/a&gt;).</source>
          <target state="translated">この関数は、最大または最も最近使用されていないウィンドウ（通常は選択されたフレームにあります）を分割することにより、 &lt;var&gt;buffer&lt;/var&gt; を表示しようとします。実際には、split &lt;code&gt;split-window-preferred-function&lt;/code&gt; 指定された関数を呼び出すことによって分割を実行します（&lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;ウィンドウオプションの選択を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="db7c34f74cd84db5056e9e631f376a6e75f0bf4a" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) of the selected frame, either reusing an existing child frame or by making a new one. If &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;child-frame-parameters&lt;/code&gt; entry, the corresponding value is an alist of frame parameters to give the new frame. A &lt;code&gt;parent-frame&lt;/code&gt; parameter specifying the selected frame is provided by default. If the child frame should become the child of another frame, a corresponding entry must be added to &lt;var&gt;alist&lt;/var&gt;.</source>
          <target state="translated">この関数は、表示しようとする &lt;var&gt;buffer&lt;/var&gt; （参照子フレーム内の&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子フレームが&lt;/a&gt;選択されたフレームのうち）、いずれかの既存の子フレームを再利用するか、新しいものを作ることもできます。場合は &lt;var&gt;alist&lt;/var&gt; 非がある &lt;code&gt;nil&lt;/code&gt; の &lt;code&gt;child-frame-parameters&lt;/code&gt; エントリを、対応する値は、新しいフレームを与えるために、フレームパラメータの連想リストです。 &lt;code&gt;parent-frame&lt;/code&gt; 選択したフレームを指定するパラメータは、デフォルトで提供されています。子フレームが別のフレームの子になる必要がある場合は、対応するエントリを &lt;var&gt;alist&lt;/var&gt; に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="84b96441c8471492f51d49bb83e0ea12b7216510" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a new window that will be combined with an existing window to form an atomic window. If the existing window is already part of an atomic window, it adds the new window to that atomic window.</source>
          <target state="translated">この関数は、既存のウィンドウと組み合わせてアトミックウィンドウを形成する新しいウィンドウに &lt;var&gt;buffer&lt;/var&gt; を表示しようとします。既存のウィンドウがすでにアトミックウィンドウの一部である場合は、そのアトミックウィンドウに新しいウィンドウが追加されます。</target>
        </trans-unit>
        <trans-unit id="8196c0e752557162a072276196961441d0edc105" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window at the bottom of the selected frame.</source>
          <target state="translated">この関数は、選択したフレームの下部にあるウィンドウに &lt;var&gt;buffer&lt;/var&gt; を表示しようとします。</target>
        </trans-unit>
        <trans-unit id="6795d9ec8a53a35004568d02a0345bac27f98b4d" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window below the selected window. If there is a window below the selected one and that window already displays &lt;var&gt;buffer&lt;/var&gt;, it reuses that window.</source>
          <target state="translated">この関数は、選択したウィンドウの下のウィンドウに &lt;var&gt;buffer&lt;/var&gt; を表示しようとします。選択したウィンドウの下にウィンドウがあり、そのウィンドウにすでに &lt;var&gt;buffer&lt;/var&gt; 表示されている場合は、そのウィンドウを再利用します。</target>
        </trans-unit>
        <trans-unit id="2fc7cb5b157ca8e5fd7dd2f9a6bcf6651eab8e05" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window where it was displayed previously.</source>
          <target state="translated">この関数は、以前に表示されていたウィンドウに &lt;var&gt;buffer&lt;/var&gt; を表示しようとします。</target>
        </trans-unit>
        <trans-unit id="5a33527f3aebc46eaa9ca4905455ba32bccc9caa" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in the selected window. It fails if the selected window is a minibuffer window or is dedicated to another buffer (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;). It also fails if &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;inhibit-same-window&lt;/code&gt; entry.</source>
          <target state="translated">この関数は、選択したウィンドウに &lt;var&gt;buffer&lt;/var&gt; を表示しようとします。選択されたウィンドウがミニバッファ・ウィンドウで、または別のバッファ（参照に専用されている場合は失敗し&lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;、専用のWindowsを&lt;/a&gt;）。場合にも失敗した &lt;var&gt;alist&lt;/var&gt; 非がある &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;inhibit-same-window&lt;/code&gt; エントリを。</target>
        </trans-unit>
        <trans-unit id="0957da040de107e2b1b6c3ef5e08567a77ad9c26" translate="yes" xml:space="preserve">
          <source>This function tries to resize windows adjacent to the edge that is moved. If this is not possible for some reason (e.g., if that adjacent window is fixed-size), it may resize other windows.</source>
          <target state="translated">この関数は、移動されたエッジに隣接するウィンドウのサイズを変更しようとします。何らかの理由でこれができない場合(例えば、隣接するウィンドウが固定サイズの場合)、他のウィンドウのサイズを変更することがあります。</target>
        </trans-unit>
        <trans-unit id="a77658bc899a49ec26ec09bf59f8efb85c20c633" translate="yes" xml:space="preserve">
          <source>This function tries to return a relative name that is equivalent to &lt;var&gt;filename&lt;/var&gt;, assuming the result will be interpreted relative to &lt;var&gt;directory&lt;/var&gt; (an absolute directory name or directory file name). If &lt;var&gt;directory&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer&amp;rsquo;s default directory.</source>
          <target state="translated">この関数は、結果が &lt;var&gt;directory&lt;/var&gt; （絶対ディレクトリ名またはディレクトリファイル名）を基準にして解釈されると想定して、 &lt;var&gt;filename&lt;/var&gt; と同等の相対名を返そうとします。場合は &lt;var&gt;directory&lt;/var&gt; 省略されたりされ &lt;code&gt;nil&lt;/code&gt; のカレントバッファのデフォルトディレクトリに、デフォルト。</target>
        </trans-unit>
        <trans-unit id="f958e66d372ec015745e5022dd2f4c7f0dd09230" translate="yes" xml:space="preserve">
          <source>This function tries to split &lt;var&gt;window&lt;/var&gt; and return the newly created window. If &lt;var&gt;window&lt;/var&gt; cannot be split, it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">この関数は、 &lt;var&gt;window&lt;/var&gt; を分割して、新しく作成されたウィンドウを返そうとします。場合は &lt;var&gt;window&lt;/var&gt; 、分割することはできません、それは返す &lt;code&gt;nil&lt;/code&gt; を。場合は &lt;var&gt;window&lt;/var&gt; 省略されるかされ &lt;code&gt;nil&lt;/code&gt; の選択ウィンドウには、デフォルト。</target>
        </trans-unit>
        <trans-unit id="62277f2e85da796456a779d7b57a9626e62eade0" translate="yes" xml:space="preserve">
          <source>This function undefines all the abbrevs in &lt;var&gt;abbrev-table&lt;/var&gt;, leaving it empty.</source>
          <target state="translated">この関数は、 &lt;var&gt;abbrev-table&lt;/var&gt; 内のすべての略語の定義を解除し、空のままにします。</target>
        </trans-unit>
        <trans-unit id="ba452830bd8d706054923bd3e8875be107b08977" translate="yes" xml:space="preserve">
          <source>This function undoes the effect of &lt;code&gt;debug-on-entry&lt;/code&gt; on &lt;var&gt;function-name&lt;/var&gt;. When called interactively, it prompts for &lt;var&gt;function-name&lt;/var&gt; in the minibuffer. If &lt;var&gt;function-name&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it cancels break-on-entry for all functions. Calling &lt;code&gt;cancel-debug-on-entry&lt;/code&gt; does nothing to a function which is not currently set up to break on entry.</source>
          <target state="translated">この関数は、の効果取り消し &lt;code&gt;debug-on-entry&lt;/code&gt; に &lt;var&gt;function-name&lt;/var&gt; 。インタラクティブに呼び出されると、ミニバッファ内の &lt;var&gt;function-name&lt;/var&gt; 入力を求められます。場合は &lt;var&gt;function-name&lt;/var&gt; 省略されるかされて &lt;code&gt;nil&lt;/code&gt; の、それはブレーク・オン・エントリのすべての機能のためにキャンセルされます。 &lt;code&gt;cancel-debug-on-entry&lt;/code&gt; を呼び出しても、現在エントリ時にブレークするように設定されていない関数には何もしません。</target>
        </trans-unit>
        <trans-unit id="d15af1eab01cc544378c9d97e1a49ce36285a8f6" translate="yes" xml:space="preserve">
          <source>This function undoes the effect of &lt;code&gt;debug-on-variable-change&lt;/code&gt; on &lt;var&gt;variable&lt;/var&gt;. When called interactively, it prompts for &lt;var&gt;variable&lt;/var&gt; in the minibuffer. If &lt;var&gt;variable&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it cancels break-on-change for all variables. Calling &lt;code&gt;cancel-debug-on-variable-change&lt;/code&gt; does nothing to a variable which is not currently set up to break on change.</source>
          <target state="translated">この関数は、の効果取り消し &lt;code&gt;debug-on-variable-change&lt;/code&gt; に &lt;var&gt;variable&lt;/var&gt; 。インタラクティブに呼び出されると、ミニバッファ内の &lt;var&gt;variable&lt;/var&gt; 入力を求められます。 &lt;var&gt;variable&lt;/var&gt; が省略または &lt;code&gt;nil&lt;/code&gt; の場合、すべての変数の変更時のブレークがキャンセルされます。 &lt;code&gt;cancel-debug-on-variable-change&lt;/code&gt; を呼び出しても、変更時に中断するように現在設定されていない変数には何もしません。</target>
        </trans-unit>
        <trans-unit id="b9b040e232da8637c2a97347f045caa8ed4ce96d" translate="yes" xml:space="preserve">
          <source>This function unlocks the file being visited in the current buffer, if the buffer is modified. If the buffer is not modified, then the file should not be locked, so this function does nothing. It also does nothing if the current buffer is not visiting a file, or is not locked.</source>
          <target state="translated">この関数は、バッファが変更された場合、現在のバッファにアクセスしているファイルのロックを解除します。バッファが変更されていない場合、ファイルはロックされていないはずなので、この関数は何もしません。また、現在のバッファがファイルを訪問していない場合やロックされていない場合も何もしません。</target>
        </trans-unit>
        <trans-unit id="9cf5017363459e788210546e832bb7be24c1e148" translate="yes" xml:space="preserve">
          <source>This function unpacks data from the unibyte string or byte array &lt;code&gt;bindat-raw&lt;/code&gt; according to &lt;var&gt;spec&lt;/var&gt;. Normally, this starts unpacking at the beginning of the byte array, but if &lt;var&gt;bindat-idx&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a zero-based starting position to use instead.</source>
          <target state="translated">この関数は、 &lt;var&gt;spec&lt;/var&gt; に従って、ユニバイト文字列またはバイト配列 &lt;code&gt;bindat-raw&lt;/code&gt; からデータを解凍します。通常、これはバイト配列の先頭からアンパックを開始しますが、 &lt;var&gt;bindat-idx&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合は、代わりに使用するゼロベースの開始位置を指定します。</target>
        </trans-unit>
        <trans-unit id="db0871a0f9eae053d05fefe7a89eb225cb481f26" translate="yes" xml:space="preserve">
          <source>This function updates the buffer&amp;rsquo;s record of the last modification time of the visited file, to the value specified by &lt;var&gt;time&lt;/var&gt; if &lt;var&gt;time&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt;, and otherwise to the last modification time of the visited file.</source>
          <target state="translated">この関数は、で指定した値に、訪問したファイルの最終更新時刻のバッファのレコードを更新 &lt;var&gt;time&lt;/var&gt; あれば &lt;var&gt;time&lt;/var&gt; ない &lt;code&gt;nil&lt;/code&gt; 訪問したファイルの最終更新時刻に、それ以外の場合。</target>
        </trans-unit>
        <trans-unit id="b496643d69b6fb9f8d5a4ffc179c7accc7082abd" translate="yes" xml:space="preserve">
          <source>This function updates the cross reference data in the</source>
          <target state="translated">この関数は</target>
        </trans-unit>
        <trans-unit id="83252f52748782b59d699b18a2ad0d2736e606ce" translate="yes" xml:space="preserve">
          <source>This function used to be called &lt;code&gt;x-color-defined-p&lt;/code&gt;, and that name is still supported as an alias.</source>
          <target state="translated">この関数は、以前は &lt;code&gt;x-color-defined-p&lt;/code&gt; と呼ばれていましたが、その名前は引き続きエイリアスとしてサポートされています。</target>
        </trans-unit>
        <trans-unit id="c674e23234b420eea66e8cb46b0db0cfc9cda0ad" translate="yes" xml:space="preserve">
          <source>This function used to be called &lt;code&gt;x-color-values&lt;/code&gt;, and that name is still supported as an alias.</source>
          <target state="translated">この関数は、以前は &lt;code&gt;x-color-values&lt;/code&gt; と呼ばれていましたが、その名前は引き続きエイリアスとしてサポートされています。</target>
        </trans-unit>
        <trans-unit id="4f1164bde1bddbc301accaa26b8d796fa8f9f49f" translate="yes" xml:space="preserve">
          <source>This function used to be called &lt;code&gt;x-defined-colors&lt;/code&gt;, and that name is still supported as an alias.</source>
          <target state="translated">この関数は、以前は &lt;code&gt;x-defined-colors&lt;/code&gt; と呼ばれていましたが、その名前は引き続きエイリアスとしてサポートされています。</target>
        </trans-unit>
        <trans-unit id="357b8baff8633266c25e29586c524324d26327a3" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;completion-regexp-list&lt;/code&gt; in the same way that &lt;code&gt;try-completion&lt;/code&gt; does.</source>
          <target state="translated">この関数は、 &lt;code&gt;try-completion&lt;/code&gt; と同じ方法で &lt;code&gt;completion-regexp-list&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="2bc19944ff338237a3addd5825fd961ef80a9925" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;minibuffer-local-shell-command-map&lt;/code&gt; as the keymap for minibuffer input. The &lt;var&gt;history&lt;/var&gt; argument specifies the history list to use; if is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to &lt;code&gt;shell-command-history&lt;/code&gt; (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;shell-command-history&lt;/a&gt;). The optional argument &lt;var&gt;initial&lt;/var&gt; specifies the initial content of the minibuffer (see &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Initial Input&lt;/a&gt;). The rest of &lt;var&gt;args&lt;/var&gt;, if present, are used as the &lt;var&gt;default&lt;/var&gt; and &lt;var&gt;inherit-input-method&lt;/var&gt; arguments in &lt;code&gt;read-from-minibuffer&lt;/code&gt; (see &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Text from Minibuffer&lt;/a&gt;).</source>
          <target state="translated">この関数は、ミニバッファ入力のキー &lt;code&gt;minibuffer-local-shell-command-map&lt;/code&gt; としてminibuffer-local-shell-command-mapを使用します。 &lt;var&gt;history&lt;/var&gt; 引数は、使用する履歴リストを指定します。省略または &lt;code&gt;nil&lt;/code&gt; の場合、デフォルトで &lt;code&gt;shell-command-history&lt;/code&gt; になります（&lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;shell-command-historyを&lt;/a&gt;参照）。オプションの引数 &lt;var&gt;initial&lt;/var&gt; は、ミニバッファーの初期コンテンツを指定します（&lt;a href=&quot;initial-input#Initial-Input&quot;&gt;初期入力を&lt;/a&gt;参照）。残りの &lt;var&gt;args&lt;/var&gt; は、存在 &lt;var&gt;inherit-input-method&lt;/var&gt; 場合、 &lt;code&gt;read-from-minibuffer&lt;/code&gt; の &lt;var&gt;default&lt;/var&gt; およびinherit-input-method引数として使用されます（&lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Minibufferからのテキストを参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b5a6b376f87beee7f24ad9d483479685f39a4d98" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;read-key&lt;/code&gt; to read and return a single character. It ignores any input that is not a member of &lt;var&gt;chars&lt;/var&gt;, a list of accepted characters. Optionally, it will also ignore keyboard-quit events while it is waiting for valid input. If you bind &lt;code&gt;help-form&lt;/code&gt; (see &lt;a href=&quot;help-functions#Help-Functions&quot;&gt;Help Functions&lt;/a&gt;) to a non-&lt;code&gt;nil&lt;/code&gt; value while calling &lt;code&gt;read-char-choice&lt;/code&gt;, then pressing &lt;code&gt;help-char&lt;/code&gt; causes it to evaluate &lt;code&gt;help-form&lt;/code&gt; and display the result. It then continues to wait for a valid input character, or keyboard-quit.</source>
          <target state="translated">この関数は、 &lt;code&gt;read-key&lt;/code&gt; を使用して1文字を読み取り、返します。受け入れられる文字のリストである &lt;var&gt;chars&lt;/var&gt; のメンバーではない入力はすべて無視されます。オプションで、有効な入力を待機している間、キーボード終了イベントも無視します。 &lt;code&gt;read-char-choice&lt;/code&gt; の呼び出し中に &lt;code&gt;help-form&lt;/code&gt; （&lt;a href=&quot;help-functions#Help-Functions&quot;&gt;ヘルプ関数を&lt;/a&gt;参照）を &lt;code&gt;nil&lt;/code&gt; 以外の値にバインドすると、 &lt;code&gt;help-char&lt;/code&gt; を押すと、 &lt;code&gt;help-form&lt;/code&gt; が評価され、結果が表示されます。その後、有効な入力文字を待つか、キーボードを終了します。</target>
        </trans-unit>
        <trans-unit id="b1749d72cf03b7c1f511808903fa3ab3b06ad267" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;replace-match&lt;/code&gt; to do the replacement, and it passes the optional arguments &lt;var&gt;fixedcase&lt;/var&gt;, &lt;var&gt;literal&lt;/var&gt; and &lt;var&gt;subexp&lt;/var&gt; along to &lt;code&gt;replace-match&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;replace-match&lt;/code&gt; を使用して置換を行い、オプションの引数 &lt;var&gt;fixedcase&lt;/var&gt; 、 &lt;var&gt;literal&lt;/var&gt; 、および &lt;var&gt;subexp&lt;/var&gt; を &lt;code&gt;replace-match&lt;/code&gt; に渡します。</target>
        </trans-unit>
        <trans-unit id="aa17e8da855b187a35c221791374fd3be2279ca6" translate="yes" xml:space="preserve">
          <source>This function uses one of two functions to search for the next occurrence of &lt;var&gt;from-string&lt;/var&gt;. These functions are specified by the values of two variables: &lt;code&gt;replace-re-search-function&lt;/code&gt; and &lt;code&gt;replace-search-function&lt;/code&gt;. The former is called when the argument &lt;var&gt;regexp-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the latter when it is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、2つの関数のいずれかを使用して、次に出現する &lt;var&gt;from-string&lt;/var&gt; を検索します。これらの関数は、 &lt;code&gt;replace-re-search-function&lt;/code&gt; と &lt;code&gt;replace-search-function&lt;/code&gt; の2つの変数の値によって指定されます。前者は引数 &lt;var&gt;regexp-flag&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合に呼び出され、後者は &lt;code&gt;nil&lt;/code&gt; の場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="32fb46b1bff0b78843f14be0f794e31cefa0dec3" translate="yes" xml:space="preserve">
          <source>This function uses the C library function &lt;code&gt;strftime&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Formatting-Calendar-Time.html#Formatting-Calendar-Time&quot;&gt;Formatting Calendar Time&lt;/a&gt; in</source>
          <target state="translated">この関数は、Cライブラリ関数の使用 &lt;code&gt;strftime&lt;/code&gt; （参照&lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Formatting-Calendar-Time.html#Formatting-Calendar-Time&quot;&gt;カレンダーの時間をフォーマットする&lt;/a&gt;には</target>
        </trans-unit>
        <trans-unit id="07d8d6409993365bd35302a047f685e5bb577b8b" translate="yes" xml:space="preserve">
          <source>This function uses the minibuffer to read and return a single character. Optionally, it ignores any input that is not a member of &lt;var&gt;chars&lt;/var&gt;, a list of accepted characters. The &lt;var&gt;history&lt;/var&gt; argument specifies the history list symbol to use; if it is omitted or &lt;code&gt;nil&lt;/code&gt;, this function doesn&amp;rsquo;t use the history.</source>
          <target state="translated">この関数は、ミニバッファーを使用して1文字を読み取り、返します。オプションで、受け入れられる文字のリストである &lt;var&gt;chars&lt;/var&gt; のメンバーではない入力を無視します。 &lt;var&gt;history&lt;/var&gt; 引数は、使用する履歴リストの記号を指定します。省略または &lt;code&gt;nil&lt;/code&gt; の場合、この関数は履歴を使用しません。</target>
        </trans-unit>
        <trans-unit id="412674ef9e8f74b9c857d3838d7d370dc1e1e19c" translate="yes" xml:space="preserve">
          <source>This function warps the mouse like &lt;code&gt;set-mouse-position&lt;/code&gt; except that &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are in units of pixels rather than units of characters.</source>
          <target state="translated">この関数は、 &lt;var&gt;x&lt;/var&gt; と &lt;var&gt;y&lt;/var&gt; が文字の単位ではなくピクセルの単位であることを除いて、 &lt;code&gt;set-mouse-position&lt;/code&gt; のようにマウスをワープします。</target>
        </trans-unit>
        <trans-unit id="c8ee4b71d2d67c57c6a2540c373498cb26883da4" translate="yes" xml:space="preserve">
          <source>This function will normally skip directories, so if you want it to find directories, make sure the &lt;var&gt;predicate&lt;/var&gt; function returns &lt;code&gt;dir-ok&lt;/code&gt; for them. For example:</source>
          <target state="translated">この関数は通常、ディレクトリをスキップするため、ディレクトリを検索する場合は、 &lt;var&gt;predicate&lt;/var&gt; 関数が &lt;code&gt;dir-ok&lt;/code&gt; に対してdir-okを返すことを確認してください。例えば：</target>
        </trans-unit>
        <trans-unit id="59714ca8611c4a6a7e76698da9144596c934dfbf" translate="yes" xml:space="preserve">
          <source>This function will tell you whether a &lt;var&gt;process&lt;/var&gt;, which must not be a connection but a real subprocess, has given control of its terminal to a child process of its own. If this is true, the function returns the numeric ID of the foreground process group of &lt;var&gt;process&lt;/var&gt;; it returns &lt;code&gt;nil&lt;/code&gt; if Emacs can be certain that this is not so. The value is &lt;code&gt;t&lt;/code&gt; if Emacs cannot tell whether this is true. This function signals an error if &lt;var&gt;process&lt;/var&gt; is a network, serial, or pipe connection, or is the subprocess is not active.</source>
          <target state="translated">この関数は、接続ではなく実際のサブ &lt;var&gt;process&lt;/var&gt; である必要があるプロセスが、その端末の制御をそれ自体の子プロセスに与えているかどうかを示します。これがtrueの場合、関数はプロセスのフォアグラウンドプロセスグループの数値IDを返し &lt;var&gt;process&lt;/var&gt; 。Emacsがそうではないと確信できる場合は &lt;code&gt;nil&lt;/code&gt; を返します。Emacsがこれが本当かどうかわからない場合、値は &lt;code&gt;t&lt;/code&gt; です。この関数は、 &lt;var&gt;process&lt;/var&gt; がネットワーク、シリアル、またはパイプ接続である場合、またはサブプロセスがアクティブでない場合にエラーを通知します。</target>
        </trans-unit>
        <trans-unit id="927d5cb8c138b67a9e94c33cd010d79946a06b7a" translate="yes" xml:space="preserve">
          <source>This function will try to delete &lt;var&gt;window&lt;/var&gt; if and only if (1) the first element of its &lt;code&gt;quit-restore&lt;/code&gt; parameter is either &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;frame&lt;/code&gt;, (2) the window has no history of previously-displayed buffers and (3) the fourth element of the &lt;code&gt;quit-restore&lt;/code&gt; parameter specifies the buffer currently displayed in &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is part of an atomic window (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;), it will try to delete the root of that atomic window instead. In either case, it tries to avoid signaling an error when &lt;var&gt;window&lt;/var&gt; cannot be deleted.</source>
          <target state="translated">この関数は、（1） &lt;code&gt;quit-restore&lt;/code&gt; パラメーターの最初の要素が &lt;code&gt;window&lt;/code&gt; または &lt;code&gt;frame&lt;/code&gt; のいずれかであり、（2）ウィンドウに以前に表示されたバッファーの履歴がなく、（3）の4番目の要素である場合にのみ、 &lt;var&gt;window&lt;/var&gt; 削除を試みます。 &lt;code&gt;quit-restore&lt;/code&gt; パラメータは、現在に表示されているバッファを指定する &lt;var&gt;window&lt;/var&gt; 。 &lt;var&gt;window&lt;/var&gt; がアトミックウィンドウの一部である場合（&lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windowsを&lt;/a&gt;参照）、代わりにそのアトミックウィンドウのルートを削除しようとします。いずれの場合も、 &lt;var&gt;window&lt;/var&gt; を削除できないときにエラーの通知を回避しようとします。</target>
        </trans-unit>
        <trans-unit id="377e25bd4af565486ae27cd15a6ba6040034c3e2" translate="yes" xml:space="preserve">
          <source>This function works by adding and removing &lt;var&gt;keymap&lt;/var&gt; from the variable &lt;code&gt;overriding-terminal-local-map&lt;/code&gt;, which takes precedence over all other active keymaps (see &lt;a href=&quot;searching-keymaps#Searching-Keymaps&quot;&gt;Searching Keymaps&lt;/a&gt;).</source>
          <target state="translated">この関数は、変数overriding &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; に &lt;var&gt;keymap&lt;/var&gt; を追加および削除することで機能します。これは、他のすべてのアクティブなキーマップよりも優先されます（キーマップの&lt;a href=&quot;searching-keymaps#Searching-Keymaps&quot;&gt;検索を参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="046c68f4f8923b49584148b0455a8183b768181f" translate="yes" xml:space="preserve">
          <source>This function works by calling &lt;code&gt;call-process&lt;/code&gt;, so program output is decoded in the same way as for &lt;code&gt;call-process&lt;/code&gt;.</source>
          <target state="translated">この関数は &lt;code&gt;call-process&lt;/code&gt; を呼び出すことで機能するため、プログラム出力は &lt;code&gt;call-process&lt;/code&gt; の場合と同じ方法でデコードされます。</target>
        </trans-unit>
        <trans-unit id="11a9c6584081a09b4de9292967ee0b9074a875cd" translate="yes" xml:space="preserve">
          <source>This function works by calling the &lt;code&gt;read-from-minibuffer&lt;/code&gt; function:</source>
          <target state="translated">この関数は、 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 関数を呼び出すことで機能します。</target>
        </trans-unit>
        <trans-unit id="e144c825c6f2bacdf9f3d3d89e1cb3a4413ae936" translate="yes" xml:space="preserve">
          <source>This function works by walking the alist stored in &lt;code&gt;file-local-variables-alist&lt;/code&gt; and applying each local variable in turn. It calls &lt;code&gt;before-hack-local-variables-hook&lt;/code&gt; and &lt;code&gt;hack-local-variables-hook&lt;/code&gt; before and after applying the variables, respectively. It only calls the before-hook if the alist is non-&lt;code&gt;nil&lt;/code&gt;; it always calls the other hook. This function ignores a &amp;lsquo;</source>
          <target state="translated">この関数は、 &lt;code&gt;file-local-variables-alist&lt;/code&gt; に格納されているリストをウォークし、各ローカル変数を順番に適用することで機能します。 &lt;code&gt;hack-local-variables-hook&lt;/code&gt; を適用する前と後に、それぞれ &lt;code&gt;before-hack-local-variables-hook&lt;/code&gt; とhack-local-variables-hookを呼び出します。 alistが &lt;code&gt;nil&lt;/code&gt; 以外の場合にのみ、before-hookを呼び出します。常に他のフックを呼び出します。この関数は 'を無視します</target>
        </trans-unit>
        <trans-unit id="97e8d180f6870c8d1176eae52e480e7c456dcf24" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;assoc&lt;/code&gt;, except that &lt;var&gt;key&lt;/var&gt; must be a string or symbol, and comparison is done using &lt;code&gt;compare-strings&lt;/code&gt;. Symbols are converted to strings before testing. If &lt;var&gt;case-fold&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;key&lt;/var&gt; and the elements of &lt;var&gt;alist&lt;/var&gt; are converted to upper-case before comparison. Unlike &lt;code&gt;assoc&lt;/code&gt;, this function can also match elements of the alist that are strings or symbols rather than conses. In particular, &lt;var&gt;alist&lt;/var&gt; can be a list of strings or symbols rather than an actual alist. See &lt;a href=&quot;association-lists#Association-Lists&quot;&gt;Association Lists&lt;/a&gt;.</source>
          <target state="translated">この関数は &lt;code&gt;assoc&lt;/code&gt; と同じように機能し &lt;var&gt;key&lt;/var&gt; が、キーは文字列または記号である必要があり、比較は &lt;code&gt;compare-strings&lt;/code&gt; を使用して行われます。記号は、テスト前に文字列に変換されます。場合 &lt;var&gt;case-fold&lt;/var&gt; 非ある &lt;code&gt;nil&lt;/code&gt; 、 &lt;var&gt;key&lt;/var&gt; の要素 &lt;var&gt;alist&lt;/var&gt; 比較の前に大文字に変換されます。 &lt;code&gt;assoc&lt;/code&gt; とは異なり、この関数は、consesではなく文字列または記号であるalistの要素にも一致します。特に、 &lt;var&gt;alist&lt;/var&gt; 文字列や記号のリストではなく、実際の連想リストであることができます。&lt;a href=&quot;association-lists#Association-Lists&quot;&gt;アソシエーションリストを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c22c44c427f12fb995b62050100fa642c6dcfc58" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;funcall&lt;/code&gt; (see &lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;Calling Functions&lt;/a&gt;), but it makes the call look like an interactive invocation: a call to &lt;code&gt;called-interactively-p&lt;/code&gt; inside &lt;var&gt;function&lt;/var&gt; will return &lt;code&gt;t&lt;/code&gt;. If &lt;var&gt;function&lt;/var&gt; is not a command, it is called without signaling an error.</source>
          <target state="translated">この関数は &lt;code&gt;funcall&lt;/code&gt; のように機能しますが（&lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;関数の呼び出しを&lt;/a&gt;参照）、呼び出しはインタラクティブな呼び出しのように見えます。 &lt;var&gt;function&lt;/var&gt; 内の &lt;code&gt;called-interactively-p&lt;/code&gt; を呼び出すと &lt;code&gt;t&lt;/code&gt; が返されます。 &lt;var&gt;function&lt;/var&gt; がコマンドでない場合は、エラーを通知せずに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a92da63b837fc6e3dfb0506021d5ce7e67e43f9a" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;fundamental-mode&lt;/code&gt;, in that it kills all buffer-local variables, but it also records the major mode in effect, so that it could subsequently be restored. This function and &lt;code&gt;major-mode-restore&lt;/code&gt; (described next) are useful when you need to put a buffer under some specialized mode other than the one Emacs chooses for it automatically (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;), but would also like to be able to switch back to the original mode later.</source>
          <target state="translated">この関数は、すべてのバッファーローカル変数を強制終了するという点で &lt;code&gt;fundamental-mode&lt;/code&gt; ように機能しますが、有効なメジャーモードも記録するため、後で復元できます。この関数と &lt;code&gt;major-mode-restore&lt;/code&gt; （次に説明）は、Emacsが自動的に選択する&lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;モード&lt;/a&gt;（Auto Major Modeを参照）以外の特殊なモードでバッファーを配置する必要があるが、切り替えもできるようにしたい場合に便利です。後で元のモードに戻ります。</target>
        </trans-unit>
        <trans-unit id="9eaa9113d08e85a0341a522e2bd0ccc24f28f836" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;insert-file-contents&lt;/code&gt; except that it does not run &lt;code&gt;after-insert-file-functions&lt;/code&gt;, and does not do format decoding, character code conversion, automatic uncompression, and so on.</source>
          <target state="translated">この関数は、 &lt;code&gt;after-insert-file-functions&lt;/code&gt; を実行せず、フォーマットのデコード、文字コード変換、自動解凍などを実行しないことを除いて、 &lt;code&gt;insert-file-contents&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="a5fc3058747e77452887cefce371bd81bf71ed72" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;insert&lt;/code&gt;, except that it processes the text in &lt;var&gt;string&lt;/var&gt; according to the &lt;code&gt;yank-handler&lt;/code&gt; text property, as well as the variables &lt;code&gt;yank-handled-properties&lt;/code&gt; and &lt;code&gt;yank-excluded-properties&lt;/code&gt; (see below), before inserting the result into the current buffer.</source>
          <target state="translated">この関数は、結果をに挿入する前に、 &lt;code&gt;yank-handler&lt;/code&gt; textプロパティ、および変数 &lt;code&gt;yank-handled-properties&lt;/code&gt; と &lt;code&gt;yank-excluded-properties&lt;/code&gt; （以下を参照）に従って &lt;var&gt;string&lt;/var&gt; 内のテキストを処理することを除いて、 &lt;code&gt;insert&lt;/code&gt; と同様に機能します。現在のバッファ。</target>
        </trans-unit>
        <trans-unit id="0e98782712e5b5698ffe9fe3d962c1e8beaf60be" translate="yes" xml:space="preserve">
          <source>This function works only on the controlling terminal of the Emacs session; to relinquish control of other tty devices, use &lt;code&gt;suspend-tty&lt;/code&gt; (see below). If the Emacs session uses more than one terminal, you must delete the frames on all the other terminals before suspending Emacs, or this function signals an error. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">この関数は、Emacsセッションの制御端末でのみ機能します。他のttyデバイスの制御を放棄するには、 &lt;code&gt;suspend-tty&lt;/code&gt; を使用します（以下を参照）。Emacsセッションが複数の端末を使用している場合は、Emacsを一時停止する前に、他のすべての端末のフレームを削除する必要があります。そうしないと、この関数はエラーを通知します。&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;複数の端末を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5ff8ecf56302291134dca6ec8b90433cdb8868d3" translate="yes" xml:space="preserve">
          <source>This function works similar to &lt;code&gt;buffer-substring&lt;/code&gt; (see &lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;Buffer Contents&lt;/a&gt;), but it prepends and appends to the copied text bidi directional control characters necessary to preserve the visual appearance of the text when it is inserted at another place. Optional argument &lt;var&gt;no-properties&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means remove the text properties from the copy of the text.</source>
          <target state="translated">この関数は &lt;code&gt;buffer-substring&lt;/code&gt; （&lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;Buffer Contentsを&lt;/a&gt;参照）と同様に機能しますが、別の場所に挿入されたときにテキストの外観を維持するために必要な、コピーされたテキストの双方向制御文字を付加します。オプションの引数 &lt;var&gt;no-properties&lt;/var&gt; は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、テキストのコピーからテキストプロパティを削除することを意味します。</target>
        </trans-unit>
        <trans-unit id="b0834d836bf1dbadd83e82e2e3aac9edcaaaacb7" translate="yes" xml:space="preserve">
          <source>This function writes the current buffer into file &lt;var&gt;filename&lt;/var&gt;, makes the buffer visit that file, and marks it not modified. Then it renames the buffer based on &lt;var&gt;filename&lt;/var&gt;, appending a string like &amp;lsquo;</source>
          <target state="translated">この関数は、現在のバッファをファイル &lt;var&gt;filename&lt;/var&gt; に書き込み、バッファにそのファイルを訪問させ、変更されていないことをマークします。次に、 &lt;var&gt;filename&lt;/var&gt; に基づいてバッファの名前を変更し、'のような文字列を追加します</target>
        </trans-unit>
        <trans-unit id="67140601dd6e6976d3cc21284b7dc5ba62488ce6" translate="yes" xml:space="preserve">
          <source>This function writes the region delimited by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer into the file specified by &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">この関数は、現在のバッファの &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; で区切られた領域を、 &lt;var&gt;filename&lt;/var&gt; で指定されたファイルに書き込みます。</target>
        </trans-unit>
        <trans-unit id="5eec5a148847215f6daa983cdd6dbbad37e0abe1" translate="yes" xml:space="preserve">
          <source>This function, when called from within the lexical body of a primary or an &lt;code&gt;:around&lt;/code&gt; auxiliary method, returns non-&lt;code&gt;nil&lt;/code&gt; if there is a next method to call.</source>
          <target state="translated">この関数は、プライマリメソッドまたは &lt;code&gt;:around&lt;/code&gt; 補助メソッドの字句本体内から呼び出されると、次に呼び出すメソッドがある場合は &lt;code&gt;nil&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="ecaddbd52cc2f447f7f4d8fd2be4f6a3445c4a60" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, extracts the integer value of &lt;var&gt;arg&lt;/var&gt;. The value of &lt;var&gt;arg&lt;/var&gt; must be an integer (fixnum or bignum). If &lt;var&gt;sign&lt;/var&gt; is not &lt;code&gt;NULL&lt;/code&gt;, it stores the sign of &lt;var&gt;arg&lt;/var&gt; (-1, 0, or +1) into &lt;code&gt;*sign&lt;/code&gt;. The magnitude is stored into &lt;var&gt;magnitude&lt;/var&gt; as follows. If &lt;var&gt;count&lt;/var&gt; and &lt;var&gt;magnitude&lt;/var&gt; are both non-&lt;code&gt;NULL&lt;/code&gt;, then &lt;var&gt;magnitude&lt;/var&gt; must point to an array of at least &lt;code&gt;*count&lt;/code&gt;&lt;code&gt;unsigned long&lt;/code&gt; elements. If &lt;var&gt;magnitude&lt;/var&gt; is large enough to hold the magnitude of &lt;var&gt;arg&lt;/var&gt;, then this function writes the magnitude into the &lt;var&gt;magnitude&lt;/var&gt; array in little-endian form, stores the number of array elements written into &lt;code&gt;*count&lt;/code&gt;, and returns &lt;code&gt;true&lt;/code&gt;. If &lt;var&gt;magnitude&lt;/var&gt; is not large enough, it stores the required array size into &lt;code&gt;*count&lt;/code&gt;, signals an error, and returns &lt;code&gt;false&lt;/code&gt;. If &lt;var&gt;count&lt;/var&gt; is not &lt;code&gt;NULL&lt;/code&gt; and &lt;var&gt;magnitude&lt;/var&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the function stores the required array size into &lt;code&gt;*count&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">この関数は、Emacs 27以降で使用可能であり、 &lt;var&gt;arg&lt;/var&gt; の整数値を抽出します。 &lt;var&gt;arg&lt;/var&gt; の値は整数（fixnumまたはbignum）でなければなりません。 &lt;var&gt;sign&lt;/var&gt; が &lt;code&gt;NULL&lt;/code&gt; でない場合、 &lt;var&gt;arg&lt;/var&gt; の符号（-1、0、または+1）を &lt;code&gt;*sign&lt;/code&gt; に格納します。マグニチュードは、次のように &lt;var&gt;magnitude&lt;/var&gt; 格納されます。場合は &lt;var&gt;count&lt;/var&gt; と &lt;var&gt;magnitude&lt;/var&gt; 両方とも非ある &lt;code&gt;NULL&lt;/code&gt; 、その &lt;var&gt;magnitude&lt;/var&gt; 、少なくともの配列を指していなければならない &lt;code&gt;*count&lt;/code&gt; &lt;code&gt;unsigned long&lt;/code&gt; 型の要素を。場合 &lt;var&gt;magnitude&lt;/var&gt; の大きさを保持するために十分な大きさである &lt;var&gt;arg&lt;/var&gt; は、次に、この関数はマグニチュードをリトルエンディアン形式で &lt;var&gt;magnitude&lt;/var&gt; 配列に書き込み、 &lt;code&gt;*count&lt;/code&gt; に書き込まれた配列要素の数を格納し、 &lt;code&gt;true&lt;/code&gt; を返します。 &lt;var&gt;magnitude&lt;/var&gt; が十分に大きくない場合は、必要な配列サイズを &lt;code&gt;*count&lt;/code&gt; に格納し、エラーを通知して、 &lt;code&gt;false&lt;/code&gt; を返します。場合は &lt;var&gt;count&lt;/var&gt; ないが &lt;code&gt;NULL&lt;/code&gt; と &lt;var&gt;magnitude&lt;/var&gt; ある &lt;code&gt;NULL&lt;/code&gt; 、その後に機能を格納に必要な配列サイズ &lt;code&gt;*count&lt;/code&gt; とリターンが &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6faac83d6eccae013ba28dbc157a4bf098657401" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, interprets &lt;var&gt;time&lt;/var&gt; as an Emacs Lisp time value and returns the corresponding &lt;code&gt;struct timespec&lt;/code&gt;. See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. &lt;code&gt;struct timespec&lt;/code&gt; represents a timestamp with nanosecond precision. It has the following members:</source>
          <target state="translated">この関数はEmacs27以降で使用可能であり、 &lt;var&gt;time&lt;/var&gt; をEmacs Lisp時間値として解釈し、対応する &lt;code&gt;struct timespec&lt;/code&gt; を返します。&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;時刻を&lt;/a&gt;参照してください。 &lt;code&gt;struct timespec&lt;/code&gt; は、ナノ秒の精度でタイムスタンプを表します。次のメンバーがいます。</target>
        </trans-unit>
        <trans-unit id="d7a9ff9916af1c294cd4d519bbb6c454f3ed88da" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, takes a &lt;code&gt;struct
timespec&lt;/code&gt; argument &lt;var&gt;time&lt;/var&gt; and returns the corresponding Emacs timestamp as a pair &lt;code&gt;(&lt;var&gt;ticks&lt;/var&gt; . &lt;var&gt;hz&lt;/var&gt;)&lt;/code&gt;. See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. The return value represents exactly the same timestamp as &lt;var&gt;time&lt;/var&gt;: all input values are representable, and there is never a loss of precision. &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_sec&lt;/code&gt; and &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; can be arbitrary values. In particular, there&amp;rsquo;s no requirement that &lt;var&gt;time&lt;/var&gt; be normalized. This means that &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; can be negative or larger than 999,999,999.</source>
          <target state="translated">Emacsの27から利用可能であり、この関数は、かかる &lt;code&gt;struct timespec&lt;/code&gt; 引数 &lt;var&gt;time&lt;/var&gt; ペアとして対応するEmacsのタイムスタンプを返す &lt;code&gt;(&lt;var&gt;ticks&lt;/var&gt; . &lt;var&gt;hz&lt;/var&gt;)&lt;/code&gt; 。&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;時刻を&lt;/a&gt;参照してください。戻り値は、正確に同じタイムスタンプを表し &lt;var&gt;time&lt;/var&gt; ：すべての入力値が表現可能であり、精度の損失は決してありません。 &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_sec&lt;/code&gt; と &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; 任意の値とすることができます。特に、 &lt;var&gt;time&lt;/var&gt; を正規化する必要はありません。この手段 &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; 負または999,999,999よりも大きくすることができます。</target>
        </trans-unit>
        <trans-unit id="1847b4c01dca1eeacaab5140ef27e18f81cc6670" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, takes an arbitrary-sized integer argument and returns a corresponding &lt;code&gt;emacs_value&lt;/code&gt; object. The &lt;var&gt;sign&lt;/var&gt; argument gives the sign of the return value. If &lt;var&gt;sign&lt;/var&gt; is nonzero, then &lt;var&gt;magnitude&lt;/var&gt; must point to an array of at least &lt;var&gt;count&lt;/var&gt; elements specifying the little-endian magnitude of the return value.</source>
          <target state="translated">この関数は &lt;code&gt;emacs_value&lt;/code&gt; 以降で使用可能であり、任意のサイズの整数引数を取り、対応するemacs_valueオブジェクトを返します。 &lt;var&gt;sign&lt;/var&gt; 引数には、戻り値の符号を与えます。場合は &lt;var&gt;sign&lt;/var&gt; ゼロでない場合、 &lt;var&gt;magnitude&lt;/var&gt; 、少なくともの配列を指している必要があり &lt;var&gt;count&lt;/var&gt; 戻り値のリトルエンディアン大きさを指定する要素。</target>
        </trans-unit>
        <trans-unit id="a833cfd74bbb04febdde953baf2bd3532c6d904c" translate="yes" xml:space="preserve">
          <source>This functions returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s window state change flag is set and &lt;code&gt;nil&lt;/code&gt; otherwise. &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">この関数は、 &lt;var&gt;frame&lt;/var&gt; のウィンドウ状態変更フラグが設定されている場合は &lt;code&gt;t&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。 &lt;var&gt;frame&lt;/var&gt; はライブフレームである必要があり、デフォルトでは選択したフレームになります。</target>
        </trans-unit>
        <trans-unit id="f3c7971b829a0cecba2092251d8f11a20e415670" translate="yes" xml:space="preserve">
          <source>This functions returns an amount of total system memory and how much of it is free. On an unsupported system, the value may be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この関数は、システムメモリの合計量と空き容量を返します。サポートされていないシステムでは、値は &lt;code&gt;nil&lt;/code&gt; になる場合があります。</target>
        </trans-unit>
        <trans-unit id="4e42c67d4013b9ebcfd49ca97c2b842edf44a260" translate="yes" xml:space="preserve">
          <source>This functions returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;ancestor&lt;/var&gt; is an ancestor of &lt;var&gt;descendant&lt;/var&gt;. &lt;var&gt;ancestor&lt;/var&gt; is an ancestor of &lt;var&gt;descendant&lt;/var&gt; when it is either &lt;var&gt;descendant&lt;/var&gt;&amp;rsquo;s parent frame or it is an ancestor of &lt;var&gt;descendant&lt;/var&gt;&amp;rsquo;s parent frame. Both, &lt;var&gt;ancestor&lt;/var&gt; and &lt;var&gt;descendant&lt;/var&gt; must specify live frames.</source>
          <target state="translated">祖先が &lt;var&gt;descendant&lt;/var&gt; &lt;var&gt;ancestor&lt;/var&gt; である場合、この関数は非 &lt;code&gt;nil&lt;/code&gt; を返します。 &lt;var&gt;ancestor&lt;/var&gt; は、 &lt;var&gt;descendant&lt;/var&gt; の親フレームであるか、子孫の親フレームの祖先で &lt;var&gt;descendant&lt;/var&gt; 場合、 &lt;var&gt;descendant&lt;/var&gt; の祖先です。 &lt;var&gt;ancestor&lt;/var&gt; と &lt;var&gt;descendant&lt;/var&gt; 両方がライブフレームを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="be38eb1c4dd9326eba12e874ba843b68c6f73850" translate="yes" xml:space="preserve">
          <source>This functions returns the root of the atomic window &lt;var&gt;window&lt;/var&gt; is a part of. The specified &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is not part of an atomic window.</source>
          <target state="translated">この関数は、の一部であるアトミックウィンドウ &lt;var&gt;window&lt;/var&gt; ルートを返します。指定された &lt;var&gt;window&lt;/var&gt; は有効なウィンドウである必要があり、デフォルトでは選択されたウィンドウになります。 &lt;var&gt;window&lt;/var&gt; がアトミックウィンドウの一部でない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9c94511ce5c269e923a9cf9867c9eb2d7be8025b" translate="yes" xml:space="preserve">
          <source>This functions returns the use time of window &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">この関数は、ウィンドウ &lt;var&gt;window&lt;/var&gt; 使用時間を返します。 &lt;var&gt;window&lt;/var&gt; はライブウィンドウである必要があり、デフォルトでは選択したウィンドウになります。</target>
        </trans-unit>
        <trans-unit id="5e6e6d42bab460c31f6699b137ee982c58e94b4e" translate="yes" xml:space="preserve">
          <source>This gives a name to the advice, which &lt;code&gt;remove-function&lt;/code&gt; can use to identify which function to remove. Typically used when &lt;var&gt;function&lt;/var&gt; is an anonymous function.</source>
          <target state="translated">これにより、アドバイスに名前が付けられ、 &lt;code&gt;remove-function&lt;/code&gt; を使用して削除する関数を識別できます。通常、 &lt;var&gt;function&lt;/var&gt; が無名関数である場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="6eb3e727d20600ecf15f9bddabc9c7d3826bb7ed" translate="yes" xml:space="preserve">
          <source>This gives the module functions names so that Lisp code could call it by that name. We describe how to do this in &lt;a href=&quot;module-functions#Module-Functions&quot;&gt;Module Functions&lt;/a&gt; below.</source>
          <target state="translated">これにより、モジュール関数に名前が付けられ、Lispコードがその名前で呼び出すことができるようになります。これを行う方法については、以下の&lt;a href=&quot;module-functions#Module-Functions&quot;&gt;モジュール関数で&lt;/a&gt;説明します。</target>
        </trans-unit>
        <trans-unit id="362f5cec2c326a4848177c9c221e4f5d7042a16e" translate="yes" xml:space="preserve">
          <source>This has a locale-specific meaning. In the default locale (named &amp;lsquo;</source>
          <target state="translated">これには、ロケール固有の意味があります。デフォルトのロケール（名前は '</target>
        </trans-unit>
        <trans-unit id="92b35c7b2fffe5bacfb3bd63a586a08286df761c" translate="yes" xml:space="preserve">
          <source>This has all the same advantages as putting the initialization inside the &lt;code&gt;defvar&lt;/code&gt;, except that you must type</source>
          <target state="translated">これには、 &lt;code&gt;defvar&lt;/code&gt; する必要があることを除いて、初期化をdefvar内に配置するのと同じ利点があります。</target>
        </trans-unit>
        <trans-unit id="67f1db2792730aa31bf14981bf4c385fe7e347f1" translate="yes" xml:space="preserve">
          <source>This has the same value as &lt;code&gt;this-command&lt;/code&gt; except when command remapping occurs (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;). In that case, &lt;code&gt;this-command&lt;/code&gt; gives the command actually run (the result of remapping), and &lt;code&gt;this-original-command&lt;/code&gt; gives the command that was specified to run but remapped into another command.</source>
          <target state="translated">これは、同じ値を有し &lt;code&gt;this-command&lt;/code&gt; コマンド再マッピングは、（参照発生した場合を除き、&lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;再マッピングコマンド&lt;/a&gt;）。その場合、 &lt;code&gt;this-command&lt;/code&gt; は実際に実行されるコマンド（再マッピングの結果）を提供し、 &lt;code&gt;this-original-command&lt;/code&gt; は実行するように指定されたが別のコマンドに再マップされたコマンドを提供します。</target>
        </trans-unit>
        <trans-unit id="40c881199f24c02215c7d793a78040dbbb53e0c7" translate="yes" xml:space="preserve">
          <source>This history list is actually a special case of minibuffer history (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;), with one special twist: the elements are expressions rather than strings.</source>
          <target state="translated">この履歴リストは、実際にはミニバッファ履歴の特殊なケースです（ミニバッファ履歴を参照）&lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;。1&lt;/a&gt;つの特別な工夫があります。要素は文字列ではなく式です。</target>
        </trans-unit>
        <trans-unit id="8bcca11757ad5593baa86f3970bcb3a6003e7840" translate="yes" xml:space="preserve">
          <source>This holds the email address of the user who is using Emacs.</source>
          <target state="translated">Emacsを使用しているユーザーのメールアドレスを保持します。</target>
        </trans-unit>
        <trans-unit id="1d8bba7a7ee6a7b33a5138a9859c48441b52fdd9" translate="yes" xml:space="preserve">
          <source>This hook is also run when Emacs first enters the command loop (at which point &lt;code&gt;this-command&lt;/code&gt; and &lt;code&gt;last-command&lt;/code&gt; are both &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">このフックは、Emacsが最初にコマンドループに入ったときにも実行されます（ &lt;code&gt;this-command&lt;/code&gt; 時点で、this-commandと &lt;code&gt;last-command&lt;/code&gt; は両方とも &lt;code&gt;nil&lt;/code&gt; です）。</target>
        </trans-unit>
        <trans-unit id="abff04f1fc8b5a5670bcf5df4395d261f51d8643" translate="yes" xml:space="preserve">
          <source>This hook is run just before redisplay. It is called once in each window that is about to be redisplayed, with &lt;code&gt;current-buffer&lt;/code&gt; set to the buffer displayed in that window.</source>
          <target state="translated">このフックは、再表示の直前に実行されます。これは、再表示されようとしている各ウィンドウで1回呼び出され、 &lt;code&gt;current-buffer&lt;/code&gt; はそのウィンドウに表示されているバッファーに設定されます。</target>
        </trans-unit>
        <trans-unit id="c8d427de10ebc1d86ecdf97026f2ffdc370659b5" translate="yes" xml:space="preserve">
          <source>This hook is used for automatically assigning faces to text in the buffer. It is part of the implementation of Jit-Lock mode, used by Font-Lock.</source>
          <target state="translated">このフックは、バッファ内のテキストに面を自動的に割り当てるために使われます。これは、Font-Lock で使われる Jit-Lock モードの実装の一部です。</target>
        </trans-unit>
        <trans-unit id="0df53fd7768ddf8d6cf8226757bb41e09d4e965e" translate="yes" xml:space="preserve">
          <source>This hook specifies the functions that are run when an Emacs frame is moved (assigned a new position) by the window-system or window manager. The functions are run with one argument, the frame that moved. For a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;), the functions are run only when the position of the frame changes in relation to that of its parent frame.</source>
          <target state="translated">このフックは、ウィンドウシステムまたはウィンドウマネージャーによってEmacsフレームが移動された（新しい位置が割り当てられた）ときに実行される関数を指定します。関数は、移動したフレームという1つの引数で実行されます。子フレームについて（参照&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子フレームの&lt;/a&gt;フレームの位置は、親フレームのそれに関連して変化した場合にのみ、関数が実行されます）。</target>
        </trans-unit>
        <trans-unit id="bca2ecc6b29b81e4da85f93160adc2cd1266f9f4" translate="yes" xml:space="preserve">
          <source>This identifier string can include a host name and a user name, as well as characters designating the method used to access the remote system. For example, the remote identifier string for the filename &lt;code&gt;/sudo::/some/file&lt;/code&gt; is &lt;code&gt;/sudo:root@localhost:&lt;/code&gt;.</source>
          <target state="translated">この識別子文字列には、ホスト名とユーザー名のほか、リモートシステムへのアクセス方法を示す文字を含めることができます。たとえば、ファイル名 &lt;code&gt;/sudo::/some/file&lt;/code&gt; のリモート識別子文字列は &lt;code&gt;/sudo:root@localhost:&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5f3704ace63c19c6746f28269631768748065f91" translate="yes" xml:space="preserve">
          <source>This imaginary special form implements a loop that executes the &lt;var&gt;body&lt;/var&gt; forms and then increments the variable &lt;var&gt;var&lt;/var&gt; on each iteration. On the first iteration, the variable has the value &lt;var&gt;from&lt;/var&gt;; on subsequent iterations, it is incremented by one (or by &lt;var&gt;inc&lt;/var&gt; if that is given). The loop exits before executing &lt;var&gt;body&lt;/var&gt; if &lt;var&gt;var&lt;/var&gt; equals &lt;var&gt;to&lt;/var&gt;. Here is an example:</source>
          <target state="translated">この架空の特殊フォームは、 &lt;var&gt;body&lt;/var&gt; フォームを実行し、反復ごとに変数 &lt;var&gt;var&lt;/var&gt; をインクリメントするループを実装します。最初の反復では、変数の値 &lt;var&gt;from&lt;/var&gt; ;からです。後続の反復では、1ずつ（または、指定されている場合は &lt;var&gt;inc&lt;/var&gt; によって）インクリメントされます。ループが終了する実行する前に &lt;var&gt;body&lt;/var&gt; 場合 &lt;var&gt;var&lt;/var&gt; は等しい &lt;var&gt;to&lt;/var&gt; 。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="2030f1153563e9a57018bf6725c74d3f6a5c6eba" translate="yes" xml:space="preserve">
          <source>This insert a button with the label &lt;var&gt;label&lt;/var&gt; at point, and returns it.</source>
          <target state="translated">これにより、ラベル &lt;var&gt;label&lt;/var&gt; がポイントにあるボタンが挿入され、返されます。</target>
        </trans-unit>
        <trans-unit id="516ffb9f41d576630207d825fa1678bf965f0da0" translate="yes" xml:space="preserve">
          <source>This inserts &lt;var&gt;object&lt;/var&gt; into &lt;var&gt;ring&lt;/var&gt;, making it the newest element, and returns &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;object&lt;/var&gt; が &lt;var&gt;ring&lt;/var&gt; に挿入され、最新の要素になり、 &lt;var&gt;object&lt;/var&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="e206d808989125d625a9c34521abd5c21cd7b7b5" translate="yes" xml:space="preserve">
          <source>This inserts &lt;var&gt;object&lt;/var&gt; into &lt;var&gt;ring&lt;/var&gt;, treating it as the oldest element. The return value is not significant.</source>
          <target state="translated">これにより、 &lt;var&gt;object&lt;/var&gt; が &lt;var&gt;ring&lt;/var&gt; に挿入され、最も古い要素として扱われます。戻り値は重要ではありません。</target>
        </trans-unit>
        <trans-unit id="81e970d901aca4a8592ed45c5fbed74f40774f4d" translate="yes" xml:space="preserve">
          <source>This inserts a button with the label &lt;var&gt;label&lt;/var&gt; at point, using text properties.</source>
          <target state="translated">これにより、テキストプロパティを使用して、ラベル &lt;var&gt;label&lt;/var&gt; がポイントにあるボタンが挿入されます。</target>
        </trans-unit>
        <trans-unit id="956036dde35997f66fc9a54defc9c1de32e7d2c5" translate="yes" xml:space="preserve">
          <source>This is a &lt;em&gt;mouse position list&lt;/em&gt; specifying where the mouse click occurred; see below for details.</source>
          <target state="translated">これは、マウスクリックが発生した場所を指定する&lt;em&gt;マウス位置リスト&lt;/em&gt;です。詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="d582e5067abdfe817383421e2918b0b7eb2ff332" translate="yes" xml:space="preserve">
          <source>This is a C variable name to use for a structure that holds the data for the subr object that represents the function in Lisp. This structure conveys the Lisp symbol name to the initialization routine that will create the symbol and store the subr object as its definition. By convention, this name is always &lt;var&gt;fname&lt;/var&gt; with &amp;lsquo;</source>
          <target state="translated">これは、Lispの関数を表すsubrオブジェクトのデータを保持する構造体に使用するC変数名です。この構造体は、Lispシンボル名を初期化ルーチンに伝えます。初期化ルーチンは、シンボルを作成し、その定義としてsubrオブジェクトを格納します。慣例により、この名前は常に &lt;var&gt;fname&lt;/var&gt; であり、 '</target>
        </trans-unit>
        <trans-unit id="81c4de4d1166a983cacedc98d34cede6ff7b0201" translate="yes" xml:space="preserve">
          <source>This is a comment-end sequence for &amp;ldquo;a&amp;rdquo; style, because the newline character does not have the &amp;lsquo;</source>
          <target state="translated">改行文字には「」がないため、これは「a」スタイルのコメント終了シーケンスです。</target>
        </trans-unit>
        <trans-unit id="7dcf689ef6eb6551f81813bfd663406e5ae5909d" translate="yes" xml:space="preserve">
          <source>This is a comment-end sequence for &amp;ldquo;b&amp;rdquo; style because the first character, &amp;lsquo;</source>
          <target state="translated">これは「b」スタイルのコメント終了シーケンスです。最初の文字は '</target>
        </trans-unit>
        <trans-unit id="7ae79e218d6d77ea7782e63e93ac66c7a88be45f" translate="yes" xml:space="preserve">
          <source>This is a comment-start sequence for &amp;ldquo;a&amp;rdquo; style because the second character, &amp;lsquo;</source>
          <target state="translated">これは、「a」スタイルのコメント開始シーケンスです。これは、2番目の文字である '</target>
        </trans-unit>
        <trans-unit id="753d131ec0adef108b74b35fb4d5fc6c9faccf10" translate="yes" xml:space="preserve">
          <source>This is a comment-start sequence for &amp;ldquo;b&amp;rdquo; style because the second character, &amp;lsquo;</source>
          <target state="translated">これは「b」スタイルのコメント開始シーケンスです。2番目の文字である '</target>
        </trans-unit>
        <trans-unit id="59b9e7b3df7ee25f1623cf93ef398d724a34b0b3" translate="yes" xml:space="preserve">
          <source>This is a convenience command meant to be used when developing font locking for a mode, and should not be called from Lisp code. It recomputes all the relevant variables and then calls &lt;code&gt;font-lock-fontify-region&lt;/code&gt; on the entire buffer.</source>
          <target state="translated">これは、モードのフォントロックを開発するときに使用することを目的とした便利なコマンドであり、Lispコードから呼び出すべきではありません。関連するすべての変数を再計算してから、バッファー全体で &lt;code&gt;font-lock-fontify-region&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="052d58146383e43862a05d4d9186d400bf0eff60" translate="yes" xml:space="preserve">
          <source>This is a convenience macro that works the same way as &lt;code&gt;dotimes&lt;/code&gt; does, but also reports loop progress using the functions described above. It allows you to save some typing. The argument &lt;var&gt;reporter-or-message&lt;/var&gt; can be either a string or a progress reporter object.</source>
          <target state="translated">これは、 &lt;code&gt;dotimes&lt;/code&gt; と同じように機能する便利なマクロですが、上記の関数を使用してループの進行状況も報告します。それはあなたがいくつかのタイピングを節約することを可能にします。引数 &lt;var&gt;reporter-or-message&lt;/var&gt; は、文字列または進行状況レポーターオブジェクトのいずれかです。</target>
        </trans-unit>
        <trans-unit id="6c0af3a6130d49db496a7a6745b82e5740854f18" translate="yes" xml:space="preserve">
          <source>This is a generalized variable (see &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Generalized Variables&lt;/a&gt;) that can be used to change a value with &lt;code&gt;setf&lt;/code&gt;. When using it to set a value, optional argument &lt;var&gt;remove&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to remove &lt;var&gt;key&lt;/var&gt;&amp;rsquo;s association from &lt;var&gt;alist&lt;/var&gt; if the new value is &lt;code&gt;eql&lt;/code&gt; to &lt;var&gt;default&lt;/var&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;setf&lt;/code&gt; で値を変更するために使用できる&lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;一般&lt;/a&gt;化変数（一般化変数を参照）です。これを使用して値を設定する場合、オプションの引数 &lt;var&gt;remove&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; は、新しい値が &lt;var&gt;default&lt;/var&gt; &lt;code&gt;eql&lt;/code&gt; である場合に、 &lt;var&gt;key&lt;/var&gt; の関連付けを &lt;var&gt;alist&lt;/var&gt; から削除することを意味します。</target>
        </trans-unit>
        <trans-unit id="2b4191a6a518b773a7296edbd7c57a26cfe0fbad" translate="yes" xml:space="preserve">
          <source>This is a list of regular expressions. If a file has a name matching an element of this list, then it is not scanned for any form of file-local variable. For examples of why you might want to use this, see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;.</source>
          <target state="translated">これは正規表現のリストです。ファイルの名前がこのリストの要素と一致する場合、ファイルローカル変数の形式はスキャンされません。これを使用する理由の例については、&lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;自動メジャーモードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="12b4398140878f6bd68245bb21c80f306e3982a4" translate="yes" xml:space="preserve">
          <source>This is a list of regular expressions. The completion functions only consider a completion acceptable if it matches all regular expressions in this list, with &lt;code&gt;case-fold-search&lt;/code&gt; (see &lt;a href=&quot;searching-and-case#Searching-and-Case&quot;&gt;Searching and Case&lt;/a&gt;) bound to the value of &lt;code&gt;completion-ignore-case&lt;/code&gt;.</source>
          <target state="translated">これは正規表現のリストです。補完関数は、このリスト内のすべての正規表現に一致する場合にのみ、補完を受け入れ可能と見なします&lt;a href=&quot;searching-and-case#Searching-and-Case&quot;&gt;。case &lt;/a&gt; &lt;code&gt;case-fold-search&lt;/code&gt; （検索とケースを参照）は、 &lt;code&gt;completion-ignore-case&lt;/code&gt; の値にバインドされます。</target>
        </trans-unit>
        <trans-unit id="52283f1e1d151bc990dba736688a582b7e3b30da" translate="yes" xml:space="preserve">
          <source>This is a list of suffixes indicating (compiled or source) Emacs Lisp files. It should not include the empty string. &lt;code&gt;load&lt;/code&gt; uses these suffixes in order when it appends Lisp suffixes to the specified file name. The standard value is &lt;code&gt;(&quot;.elc&quot; &quot;.el&quot;)&lt;/code&gt; which produces the behavior described in the previous section.</source>
          <target state="translated">これは、（コンパイル済みまたはソースの）EmacsLispファイルを示すサフィックスのリストです。空の文字列を含めないでください。 &lt;code&gt;load&lt;/code&gt; は、指定されたファイル名にLispサフィックスを追加するときに、これらのサフィックスを順番に使用します。標準値は &lt;code&gt;(&quot;.elc&quot; &quot;.el&quot;)&lt;/code&gt; で、前のセクションで説明した動作を生成します。</target>
        </trans-unit>
        <trans-unit id="10f331544ab235b9d5c7159edf27649dd51a4f4b" translate="yes" xml:space="preserve">
          <source>This is a list of suffixes that indicate representations of the same file. This list should normally start with the empty string. When &lt;code&gt;load&lt;/code&gt; searches for a file it appends the suffixes in this list, in order, to the file name, before searching for another file.</source>
          <target state="translated">これは、同じファイルの表現を示すサフィックスのリストです。このリストは通常​​、空の文字列で始まる必要があります。 &lt;code&gt;load&lt;/code&gt; がファイルを検索するとき、別のファイルを検索する前に、このリストのサフィックスをファイル名に順番に追加します。</target>
        </trans-unit>
        <trans-unit id="3352c91ea05e211996fe137d8629ef46a503b4a7" translate="yes" xml:space="preserve">
          <source>This is a list of symbols whose values are abbrev tables. &lt;code&gt;define-abbrev-table&lt;/code&gt; adds the new abbrev table name to this list.</source>
          <target state="translated">これは、値が略語テーブルであるシンボルのリストです。 &lt;code&gt;define-abbrev-table&lt;/code&gt; は、新しい略語テーブル名をこのリストに追加します。</target>
        </trans-unit>
        <trans-unit id="baeb56bbdacec64127820fef3bed4ca6d82941bf" translate="yes" xml:space="preserve">
          <source>This is a no-brainer for people working with multiple frames&amp;mdash;the frame showing the buffer will automatically raise and get focus unless an &lt;code&gt;inhibit-switch-frame&lt;/code&gt; entry forbids it. For single frame users this task can be considerably more difficult. In particular, &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; and &lt;code&gt;display-buffer-use-some-window&lt;/code&gt; can become obtrusive in this regard. They split or use a seemingly arbitrary (often the largest or least recently used) window, distracting the user&amp;rsquo;s attention.</source>
          <target state="translated">これは、複数のフレームで作業する人にとっては簡単です。バッファを示すフレームは、inhibit &lt;code&gt;inhibit-switch-frame&lt;/code&gt; エントリで禁止されていない限り、自動的にレイズしてフォーカスを取得します。シングルフレームユーザーの場合、このタスクはかなり難しい場合があります。特に、 &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; と &lt;code&gt;display-buffer-use-some-window&lt;/code&gt; は、この点で邪魔になる可能性があります。それらは、一見任意の（多くの場合、最大または最も最近使用されていない）ウィンドウを分割または使用し、ユーザーの注意をそらします。</target>
        </trans-unit>
        <trans-unit id="38d85830663d07546ecb90e9b63ef75a9c042a1d" translate="yes" xml:space="preserve">
          <source>This is a normal hook run by &lt;code&gt;kill-buffer&lt;/code&gt; after asking all the questions it is going to ask, just before actually killing the buffer. The buffer to be killed is current when the hook functions run. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;. This variable is a permanent local, so its local binding is not cleared by changing major modes.</source>
          <target state="translated">これは、実際にバッファを強制終了する直前に、質問するすべての質問をした後、 &lt;code&gt;kill-buffer&lt;/code&gt; によって実行される通常のフックです。強制終了されるバッファは、フック関数の実行時に現在のものです。&lt;a href=&quot;hooks#Hooks&quot;&gt;フックを&lt;/a&gt;参照してください。この変数は永続的なローカルであるため、メジャーモードを変更してもローカルバインディングはクリアされません。</target>
        </trans-unit>
        <trans-unit id="805e61efe27710ed07f0182d61d7410acee4e80d" translate="yes" xml:space="preserve">
          <source>This is a normal hook run by &lt;code&gt;run-mode-hooks&lt;/code&gt;. It is run at the very end of every properly-written major mode command.</source>
          <target state="translated">これは、 &lt;code&gt;run-mode-hooks&lt;/code&gt; によって実行される通常のフックです。これは、適切に記述されたすべてのメジャーモードコマンドの最後に実行されます。</target>
        </trans-unit>
        <trans-unit id="07bbaab22f46b3b504640becfed9adca0563313c" translate="yes" xml:space="preserve">
          <source>This is a normal hook run by &lt;code&gt;run-mode-hooks&lt;/code&gt;. It is run before the mode hooks.</source>
          <target state="translated">これは、 &lt;code&gt;run-mode-hooks&lt;/code&gt; によって実行される通常のフックです。モードがフックする前に実行されます。</target>
        </trans-unit>
        <trans-unit id="6b2354afd15e7976df677686fe20cb5d7be48399" translate="yes" xml:space="preserve">
          <source>This is a normal hook run whenever the buffer list changes. Functions (implicitly) running this hook are &lt;code&gt;get-buffer-create&lt;/code&gt; (see &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;Creating Buffers&lt;/a&gt;), &lt;code&gt;rename-buffer&lt;/code&gt; (see &lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;Buffer Names&lt;/a&gt;), &lt;code&gt;kill-buffer&lt;/code&gt; (see &lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;Killing Buffers&lt;/a&gt;), &lt;code&gt;bury-buffer&lt;/code&gt; (see above) and &lt;code&gt;select-window&lt;/code&gt; (see &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;Selecting Windows&lt;/a&gt;).</source>
          <target state="translated">これは、バッファリストが変更されるたびに実行される通常のフックです。このフックを実行している機能は、（暗黙的に）している &lt;code&gt;get-buffer-create&lt;/code&gt; （参照&lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;バッファの作成&lt;/a&gt;）、 &lt;code&gt;rename-buffer&lt;/code&gt; （参照&lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;バッファの名前を&lt;/a&gt;、） &lt;code&gt;kill-buffer&lt;/code&gt; （参照&lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;バッファを殺し&lt;/a&gt;、） &lt;code&gt;bury-buffer&lt;/code&gt; （上記参照）と &lt;code&gt;select-window&lt;/code&gt; （SEE &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;Windowsの選択&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3d638ccc079fda6d21d216451af722b5fc46a550" translate="yes" xml:space="preserve">
          <source>This is a normal hook that is run at the end of garbage collection. Garbage collection is inhibited while the hook functions run, so be careful writing them.</source>
          <target state="translated">ガベージコレクションの最後に実行される通常のフックです。フック関数が実行されている間はガベージコレクションが阻害されるので、書き方には注意が必要です。</target>
        </trans-unit>
        <trans-unit id="a07c03922c741fbfe3e2813b9c6045e88aa95ee3" translate="yes" xml:space="preserve">
          <source>This is a normal hook that is run whenever the minibuffer is entered. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">これは、ミニバッファが入力されるたびに実行される通常のフックです。&lt;a href=&quot;hooks#Hooks&quot;&gt;フックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1c3cc4019228e95b32d148b948e444f0763f87c1" translate="yes" xml:space="preserve">
          <source>This is a normal hook that is run whenever the minibuffer is exited. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">これは、ミニバッファが終了するたびに実行される通常のフックです。&lt;a href=&quot;hooks#Hooks&quot;&gt;フックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="86360e71edc42f07ab6de3f34505df6c33bb2b99" translate="yes" xml:space="preserve">
          <source>This is a normal hook which is run by the Emacs command loop, after &lt;code&gt;post-command-hook&lt;/code&gt;, in order to process and display delayed warnings.</source>
          <target state="translated">これは、遅延警告を処理して表示するために、 &lt;code&gt;post-command-hook&lt;/code&gt; の後にEmacsコマンドループによって実行される通常のフックです。</target>
        </trans-unit>
        <trans-unit id="1950abbae5cc55f415241b94ad808d5c9cc564d2" translate="yes" xml:space="preserve">
          <source>This is a permanent local, so that changing the major mode does not lose its value. Major modes should not set this variable&amp;mdash;they should set &lt;code&gt;make-backup-files&lt;/code&gt; instead.</source>
          <target state="translated">これは永続的なローカルであるため、メジャーモードを変更してもその値は失われません。メジャーモードでは、この変数を設定しないでください。代わりに、 &lt;code&gt;make-backup-files&lt;/code&gt; を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1d07872408457fb9d736d9fcefd8f6157086ae55" translate="yes" xml:space="preserve">
          <source>This is a raw data image format that describes the width, height, rowstride, whether there is an alpha channel, bits per sample, channels and image data, respectively.</source>
          <target state="translated">幅、高さ、行幅、アルファチャンネルの有無、サンプルあたりのビット数、チャンネル数、画像データをそれぞれ記述した生データ画像フォーマットです。</target>
        </trans-unit>
        <trans-unit id="cec88e6c8ce0a5823382d342b71b9f3690ed5e70" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;function&lt;/code&gt;, see &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;Anonymous Functions&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;function&lt;/code&gt; ショートカットです。&lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;匿名関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5c6e177bfc518fea9ec21fce671ef3a5268eab29" translate="yes" xml:space="preserve">
          <source>This is a simple menu item with help string &lt;var&gt;help-string&lt;/var&gt;.</source>
          <target state="translated">これは、ヘルプ文字列 &lt;var&gt;help-string&lt;/var&gt; を使用した単純なメニュー項目です。</target>
        </trans-unit>
        <trans-unit id="539993eac73cc0e0326d0ae7545c5c54b5ee6d9c" translate="yes" xml:space="preserve">
          <source>This is a simplified interface to the &lt;code&gt;read-from-minibuffer&lt;/code&gt; function, and passes the value of the &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; keymap as the &lt;var&gt;keymap&lt;/var&gt; argument for that function. Since the keymap &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; does not rebind</source>
          <target state="translated">これは、 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 関数への簡略化されたインターフェイスであり、 &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; キーマップの値をその関数の &lt;var&gt;keymap&lt;/var&gt; 引数として渡します。キーマップ &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; は再バインドされないため</target>
        </trans-unit>
        <trans-unit id="c1acce88ca7be96b6566b025ae7b3ea29fbe6b0b" translate="yes" xml:space="preserve">
          <source>This is a simplified interface to the &lt;code&gt;read-from-minibuffer&lt;/code&gt; function:</source>
          <target state="translated">これは、 &lt;code&gt;read-from-minibuffer&lt;/code&gt; の読み取り機能への簡略化されたインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="af3f54f6a3480a921837c109f5e17463a352bc58" translate="yes" xml:space="preserve">
          <source>This is a sparse keymap that simply unbinds</source>
          <target state="translated">これはスパースキーマップで、単純に</target>
        </trans-unit>
        <trans-unit id="5f72af18d4c43a811889768a82ca4a11d87bac2b" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;, which results from problems handling a compressed file. See &lt;a href=&quot;how-programs-do-loading#How-Programs-Do-Loading&quot;&gt;How Programs Do Loading&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;file-error&lt;/code&gt; サブカテゴリであり、圧縮ファイルの処理の問題が原因で発生します。&lt;a href=&quot;how-programs-do-loading#How-Programs-Do-Loading&quot;&gt;プログラムの読み込み方法を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e9c215e0297777da007fdfe8487cbc205cb69db4" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;, which results from problems in accessing a remote file using ftp. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html#Remote-Files&quot;&gt;Remote Files&lt;/a&gt; in</source>
          <target state="translated">これは &lt;code&gt;file-error&lt;/code&gt; のサブカテゴリであり、ftpを使用してリモートファイルにアクセスする際の問題が原因で発生します。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html#Remote-Files&quot;&gt;リモートファイル&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="2d95a5005896f0fd6da23d493759199537edf7ff" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. It happens, when a file could not be watched for changes. See &lt;a href=&quot;file-notifications#File-Notifications&quot;&gt;File Notifications&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;file-error&lt;/code&gt; のサブカテゴリです。これは、ファイルの変更を監視できなかった場合に発生します。&lt;a href=&quot;file-notifications#File-Notifications&quot;&gt;ファイル通知を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d5c1feb94f04dd72015ac7e9f4bacc06c354aa43" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. It occurs when &lt;code&gt;copy-file&lt;/code&gt; tries and fails to set the last-modification time of the output file. See &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;file-error&lt;/code&gt; のサブカテゴリです。これは、 &lt;code&gt;copy-file&lt;/code&gt; が出力ファイルの最終変更時刻の設定を試みて失敗した場合に発生します。&lt;a href=&quot;changing-files#Changing-Files&quot;&gt;ファイルの変更を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="39c246be12e23ec2c493d51bd423c192eded0867" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. It occurs when an operation attempts to act on a file that is missing. See &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;file-error&lt;/code&gt; のサブカテゴリです。欠落しているファイルに対して操作が実行しようとしたときに発生します。&lt;a href=&quot;changing-files#Changing-Files&quot;&gt;ファイルの変更を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a84e7250547b416754bf38c85e032217e9a75452" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. See &lt;a href=&quot;file-locks#File-Locks&quot;&gt;File Locks&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;file-error&lt;/code&gt; のサブカテゴリです。&lt;a href=&quot;file-locks#File-Locks&quot;&gt;ファイルロックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="26cf074c2ccf51b91710093c90c3f7bf290979d3" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. See &lt;a href=&quot;modification-time#Modification-Time&quot;&gt;Modification Time&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;file-error&lt;/code&gt; のサブカテゴリです。&lt;a href=&quot;modification-time#Modification-Time&quot;&gt;変更時間を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cb45b797ef4ee3e1d99242c5fc795eca8c133b81" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. See &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;Writing to Files&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;file-error&lt;/code&gt; のサブカテゴリです。&lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;ファイルへの書き込みを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9812da0e30c44ae24bdbfe2f7b2ecf6d2d527668" translate="yes" xml:space="preserve">
          <source>This is a symbol that indicates which mouse button was used. It is one of the symbols &lt;code&gt;mouse-1&lt;/code&gt;, &lt;code&gt;mouse-2&lt;/code&gt;, &amp;hellip;, where the buttons are numbered left to right.</source>
          <target state="translated">これは、使用されたマウスボタンを示す記号です。これは、 &lt;code&gt;mouse-2&lt;/code&gt; &lt;code&gt;mouse-1&lt;/code&gt; 、マウス-2、&amp;hellip;の記号の1つであり、ボタンには左から右に番号が付けられています。</target>
        </trans-unit>
        <trans-unit id="e07aa19d85daa49cb21be82f3483df4602aa009f" translate="yes" xml:space="preserve">
          <source>This is a synonym for &amp;lsquo;</source>
          <target state="translated">これは 'の同義語です</target>
        </trans-unit>
        <trans-unit id="620906d35586347b4b396e9e011be9137f149b96" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;code&gt;ding&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;ding&lt;/code&gt; の同義語です。</target>
        </trans-unit>
        <trans-unit id="1199748624f884b6275d3b54f37b4f95836abf62" translate="yes" xml:space="preserve">
          <source>This is a variant of &lt;code&gt;if&lt;/code&gt; where there are no &lt;var&gt;else-forms&lt;/var&gt;, and possibly several &lt;var&gt;then-forms&lt;/var&gt;. In particular,</source>
          <target state="translated">これは、 &lt;var&gt;else-forms&lt;/var&gt; がなく、場合によってはいくつかの &lt;var&gt;then-forms&lt;/var&gt; がない &lt;code&gt;if&lt;/code&gt; の変形です。特に、</target>
        </trans-unit>
        <trans-unit id="3f02e69a78cba25101767a7e65d19970ee30a8c8" translate="yes" xml:space="preserve">
          <source>This is a variant of &lt;code&gt;if&lt;/code&gt; where there is no &lt;var&gt;then-form&lt;/var&gt;:</source>
          <target state="translated">これは、 &lt;var&gt;then-form&lt;/var&gt; がない &lt;code&gt;if&lt;/code&gt; 変形です：</target>
        </trans-unit>
        <trans-unit id="4145fac0510f8eb9ca2938306fb5319e1b852696" translate="yes" xml:space="preserve">
          <source>This is a version of &lt;code&gt;butlast&lt;/code&gt; that works by destructively modifying the &lt;code&gt;cdr&lt;/code&gt; of the appropriate element, rather than making a copy of the list.</source>
          <target state="translated">これは、リストのコピーを作成するのではなく、適切な要素の &lt;code&gt;cdr&lt;/code&gt; を破壊的に変更することによって機能する &lt;code&gt;butlast&lt;/code&gt; のバージョンです。</target>
        </trans-unit>
        <trans-unit id="403a7d1032c2d6f47e966bab0c435f14226e15c0" translate="yes" xml:space="preserve">
          <source>This is a wrapper for &lt;code&gt;completion-table-dynamic&lt;/code&gt; that saves the last argument-result pair. This means that multiple lookups with the same argument only need to call &lt;var&gt;function&lt;/var&gt; once. This can be useful when a slow operation is involved, such as calling an external process.</source>
          <target state="translated">これは、最後の引数と結果のペアを保存する &lt;code&gt;completion-table-dynamic&lt;/code&gt; のラッパーです。これは、同じ引数を持つ複数のルックアップが &lt;var&gt;function&lt;/var&gt; 1回呼び出すだけでよいことを意味します。これは、外部プロセスの呼び出しなど、遅い操作が含まれる場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="3ad9a8e226625c52c4ba5fceef61539d6720d143" translate="yes" xml:space="preserve">
          <source>This is allowed only immediately after a &lt;code&gt;yank&lt;/code&gt; or another &lt;code&gt;yank-pop&lt;/code&gt;. At such a time, the region contains text that was just inserted by yanking. &lt;code&gt;yank-pop&lt;/code&gt; deletes that text and inserts in its place a different piece of killed text. It does not add the deleted text to the kill ring, since it is already in the kill ring somewhere. It does however rotate the kill ring to place the newly yanked string at the front.</source>
          <target state="translated">これは、 &lt;code&gt;yank&lt;/code&gt; または別の &lt;code&gt;yank-pop&lt;/code&gt; 直後にのみ許可されます。このような場合、領域には、ヤンクによって挿入されたばかりのテキストが含まれます。 &lt;code&gt;yank-pop&lt;/code&gt; はそのテキストを削除し、その場所に別の強制終了されたテキストを挿入します。削除されたテキストはすでにキルリングのどこかにあるため、キルリングには追加されません。ただし、キルリングを回転させて、新しくヤンクしたストリングを前面に配置します。</target>
        </trans-unit>
        <trans-unit id="5891b52707f6e897eea5d5c669d27102b1004a4f" translate="yes" xml:space="preserve">
          <source>This is an Emacs face controlling how buttons of this type are displayed; by default this is the &lt;code&gt;button&lt;/code&gt; face.</source>
          <target state="translated">これは、このタイプのボタンの表示方法を制御するEmacsの面です。デフォルトでは、これは &lt;code&gt;button&lt;/code&gt; 面です。</target>
        </trans-unit>
        <trans-unit id="32b7ac28c78c48c0c1ceb24509c21a78cbe55429" translate="yes" xml:space="preserve">
          <source>This is an additional face which controls appearance during mouse-overs (merged with the usual button face); by default this is the usual Emacs &lt;code&gt;highlight&lt;/code&gt; face.</source>
          <target state="translated">これは、マウスオーバー時の外観を制御する追加の面です（通常のボタン面とマージされます）。デフォルトでは、これは通常のEmacsの &lt;code&gt;highlight&lt;/code&gt; 面です。</target>
        </trans-unit>
        <trans-unit id="5afa9b586ea9ca5fc144fe6d39eae28d297b8df8" translate="yes" xml:space="preserve">
          <source>This is an alist of dynamic libraries and external library files implementing them.</source>
          <target state="translated">動的ライブラリとそれを実装した外部ライブラリファイルの一覧です。</target>
        </trans-unit>
        <trans-unit id="3eff5816e0cdb3e6f0a4663c990d1b91e8101b13" translate="yes" xml:space="preserve">
          <source>This is an alist specifying default values of frame parameters for all Emacs frames&amp;mdash;the first frame, and subsequent frames. When using the X Window System, you can get the same results by means of X resources in many cases.</source>
          <target state="translated">これは、すべてのEmacsフレーム（最初のフレームと後続のフレーム）のフレームパラメーターのデフォルト値を指定するリストです。Xウィンドウシステムを使用する場合、多くの場合、Xリソースを使用して同じ結果を得ることができます。</target>
        </trans-unit>
        <trans-unit id="0a08ddd5a44ca86041fbb4541ee9d2d0a4d56813" translate="yes" xml:space="preserve">
          <source>This is an extensible undo item, which is undone by calling &lt;var&gt;funname&lt;/var&gt; with arguments &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">これは拡張可能な元に戻すアイテムであり、引数 &lt;var&gt;args&lt;/var&gt; を指定して &lt;var&gt;funname&lt;/var&gt; を呼び出すことで元に戻されます。</target>
        </trans-unit>
        <trans-unit id="3d5230b0361e691994e1df15fe93fd93c1b9b7df" translate="yes" xml:space="preserve">
          <source>This is an extensible undo item, which records a change limited to the range &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;, which increased the size of the buffer by &lt;var&gt;delta&lt;/var&gt; characters. It is undone by calling &lt;var&gt;funname&lt;/var&gt; with arguments &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">これは拡張可能な元に戻すアイテムであり、 &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; の範囲に限定された変更を記録します。これにより、バッファのサイズが &lt;var&gt;delta&lt;/var&gt; 文字だけ増加しました。引数 &lt;var&gt;args&lt;/var&gt; を指定して &lt;var&gt;funname&lt;/var&gt; を呼び出すと元に戻されます。</target>
        </trans-unit>
        <trans-unit id="05829727f91e304bdb97c9ea1edc3248d4a08474" translate="yes" xml:space="preserve">
          <source>This is an interactive specification, a string such as might be used as the argument of &lt;code&gt;interactive&lt;/code&gt; in a Lisp function (see &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;). In the case of &lt;code&gt;or&lt;/code&gt;, it is &lt;code&gt;0&lt;/code&gt; (a null pointer), indicating that &lt;code&gt;or&lt;/code&gt; cannot be called interactively. A value of &lt;code&gt;&quot;&quot;&lt;/code&gt; indicates a function that should receive no arguments when called interactively. If the value begins with a &amp;lsquo;</source>
          <target state="translated">これはインタラクティブな仕様であり、Lisp関数で &lt;code&gt;interactive&lt;/code&gt; の引数として使用される可能性のある文字列です（&lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;インタラクティブの使用を&lt;/a&gt;参照）。 &lt;code&gt;or&lt;/code&gt; の場合、それは &lt;code&gt;0&lt;/code&gt; （nullポインター）であり、 &lt;code&gt;or&lt;/code&gt; を対話的に呼び出すことができないことを示します。 &lt;code&gt;&quot;&quot;&lt;/code&gt; 値は、対話的に呼び出されたときに引数を受け取らない関数を示します。値が 'で始まる場合</target>
        </trans-unit>
        <trans-unit id="84fc6d55ee48e8d014d448e4863ba7e73c412c01" translate="yes" xml:space="preserve">
          <source>This is an unsigned integer type, used as the element type for the magnitude arrays for the big integer conversion functions. The type is guaranteed to have unique object representations, i.e., no padding bits.</source>
          <target state="translated">符号なし整数型であり,大整数変換関数のマグニチュード配列の要素型として使用されます.この型は,ユニークなオブジェクト表現,すなわちパディングビットがないことが保証されています.</target>
        </trans-unit>
        <trans-unit id="132dc00444b133cbc6f506c8039288020aaabf46" translate="yes" xml:space="preserve">
          <source>This is another convenience macro that works the same way as &lt;code&gt;dolist&lt;/code&gt; does, but also reports loop progress using the functions described above. As in &lt;code&gt;dotimes-with-progress-reporter&lt;/code&gt;, &lt;code&gt;reporter-or-message&lt;/code&gt; can be a progress reporter or a string. You can rewrite the previous example with this macro as follows:</source>
          <target state="translated">これは、 &lt;code&gt;dolist&lt;/code&gt; と同じように機能するが、上記の関数を使用してループの進行状況を報告するもう1つの便利なマクロです。 &lt;code&gt;dotimes-with-progress-reporter&lt;/code&gt; の場合と同様に、 &lt;code&gt;reporter-or-message&lt;/code&gt; は進行状況レポーターまたは文字列にすることができます。このマクロを使用して、前の例を次のように書き直すことができます。</target>
        </trans-unit>
        <trans-unit id="a8c60d4e1ad0cedd5e25dc2bfc92f663416bd656" translate="yes" xml:space="preserve">
          <source>This is another name for &lt;code&gt;set-marker&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;set-marker&lt;/code&gt; 別名です。</target>
        </trans-unit>
        <trans-unit id="10a3f71d2fd56ea0b16ec0616246367064ad9f0f" translate="yes" xml:space="preserve">
          <source>This is computed as &lt;code&gt;z&lt;/code&gt; minus the buffer position of the last glyph in the current matrix of the window. The value is only valid if &lt;code&gt;window_end_valid&lt;/code&gt; is non-zero.</source>
          <target state="translated">これは、 &lt;code&gt;z&lt;/code&gt; からウィンドウの現在のマトリックスの最後のグリフのバッファー位置を引いたものとして計算されます。この値は、 &lt;code&gt;window_end_valid&lt;/code&gt; がゼロ以外の場合にのみ有効です。</target>
        </trans-unit>
        <trans-unit id="60ac1fd13d843b0faaaa408330eda9f9fe2bb405" translate="yes" xml:space="preserve">
          <source>This is convenient, if the meaning of a double click somehow builds on the meaning of a single click&amp;mdash;which is recommended user interface design practice for double clicks.</source>
          <target state="translated">これは、ダブルクリックの意味がシングルクリックの意味に基づいている場合に便利です。これは、ダブルクリックのユーザーインターフェイス設計の推奨事項です。</target>
        </trans-unit>
        <trans-unit id="0e75165bd6c0c435e57a13f622ac0560e9f8aea5" translate="yes" xml:space="preserve">
          <source>This is equivalent to</source>
          <target state="translated">に相当します。</target>
        </trans-unit>
        <trans-unit id="d3b4193b38de49e89a5720e5f1b85c4bfb6ca94a" translate="yes" xml:space="preserve">
          <source>This is equivalent to specifying &lt;var&gt;init-value&lt;/var&gt; positionally.</source>
          <target state="translated">これは、 &lt;var&gt;init-value&lt;/var&gt; を位置的に指定することと同じです。</target>
        </trans-unit>
        <trans-unit id="d6ccd13378dfdbfee1da75331b690f9ccbb0ac31" translate="yes" xml:space="preserve">
          <source>This is equivalent to specifying &lt;var&gt;keymap&lt;/var&gt; positionally.</source>
          <target state="translated">これは、 &lt;var&gt;keymap&lt;/var&gt; 位置的に指定することと同じです。</target>
        </trans-unit>
        <trans-unit id="a4797cb24e0fd3906d4e5c7d3793c44e3acaa28d" translate="yes" xml:space="preserve">
          <source>This is equivalent to specifying &lt;var&gt;lighter&lt;/var&gt; positionally.</source>
          <target state="translated">これは、 &lt;var&gt;lighter&lt;/var&gt; 位置的に指定するのと同じです。</target>
        </trans-unit>
        <trans-unit id="37f2c35875bb838f1536318b6c281a2cbff98557" translate="yes" xml:space="preserve">
          <source>This is exactly the same as &lt;code&gt;run-at-time&lt;/code&gt; (so see that definition for an explanation of the parameters; &lt;var&gt;secs&lt;/var&gt; is passed as &lt;var&gt;time&lt;/var&gt; to that function), but is meant to be used when the delay is specified in seconds.</source>
          <target state="translated">これは &lt;code&gt;run-at-time&lt;/code&gt; とまったく同じです（パラメーターの説明についてはその定義を参照してください。 &lt;var&gt;secs&lt;/var&gt; はその関数に &lt;var&gt;time&lt;/var&gt; として渡されます）が、遅延が秒で指定されている場合に使用することを目的としています。</target>
        </trans-unit>
        <trans-unit id="7372acff1de024d834cbce8756247354158e8aeb" translate="yes" xml:space="preserve">
          <source>This is for the sake of filesystems that have the concept of a superroot above the root directory</source>
          <target state="translated">これは、ルートディレクトリの上にスーパールートという概念を持つファイルシステムのためのものです。</target>
        </trans-unit>
        <trans-unit id="fd9bc2079ac2a71c6fcb711d2240e058b0676b89" translate="yes" xml:space="preserve">
          <source>This is just like &lt;code&gt;forward-char&lt;/code&gt; except that it moves in the opposite direction.</source>
          <target state="translated">これは、反対方向に移動することを除いて、 &lt;code&gt;forward-char&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="53415e6c148d53c51f1f9c7d0c90a8c057c564fa" translate="yes" xml:space="preserve">
          <source>This is just like &lt;code&gt;text-property-search-backward&lt;/code&gt;, but searches backward instead. Point is placed at the beginning of the matched region instead of the end, though.</source>
          <target state="translated">これは &lt;code&gt;text-property-search-backward&lt;/code&gt; と同じですが、代わりに逆方向に検索します。ただし、ポイントは一致した領域の最後ではなく最初に配置されます。</target>
        </trans-unit>
        <trans-unit id="fa0e9b932e7b1979c715502e6765745bbb6b8fef" translate="yes" xml:space="preserve">
          <source>This is like &amp;lsquo;</source>
          <target state="translated">これは 'のようなものです</target>
        </trans-unit>
        <trans-unit id="99d08ba26d4c45172d07c3abbadf64c076ad5caf" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;buffer-substring&lt;/code&gt;, except that it does not copy text properties, just the characters themselves. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;buffer-substring&lt;/code&gt; に似ていますが、テキストプロパティをコピーせず、文字自体をコピーする点が異なります。&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;テキストのプロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e89667a9f313dde559c6df8e54fd3171dcc357d9" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;get-char-property&lt;/code&gt;, but gives extra information about the overlay that the property value comes from.</source>
          <target state="translated">これは &lt;code&gt;get-char-property&lt;/code&gt; に似ていますが、プロパティ値の取得元のオーバーレイに関する追加情報を提供します。</target>
        </trans-unit>
        <trans-unit id="436841bd131be24a48e32bd2750651d955f52ad5" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;get-file-buffer&lt;/code&gt;, except that it can return any buffer visiting the file &lt;em&gt;possibly under a different name&lt;/em&gt;. That is, the buffer&amp;rsquo;s &lt;code&gt;buffer-file-name&lt;/code&gt; does not need to match the expansion of &lt;var&gt;filename&lt;/var&gt; exactly, it only needs to refer to the same file. If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function of one argument, a buffer visiting &lt;var&gt;filename&lt;/var&gt;. The buffer is only considered a suitable return value if &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. If it can not find a suitable buffer to return, &lt;code&gt;find-buffer-visiting&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;get-file-buffer&lt;/code&gt; に似ています&lt;em&gt;が&lt;/em&gt;、ファイルにアクセスする任意のバッファーを、&lt;em&gt;おそらく別の名前で&lt;/em&gt;返すことができる&lt;em&gt;点が異なります&lt;/em&gt;。つまり、バッファの &lt;code&gt;buffer-file-name&lt;/code&gt; は、 &lt;var&gt;filename&lt;/var&gt; の展開と正確に一致する必要はなく、同じファイルを参照するだけで済みます。 &lt;var&gt;predicate&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、それは1つの引数、 &lt;var&gt;filename&lt;/var&gt; アクセスするバッファーの関数である必要があります。 &lt;var&gt;predicate&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外を返す場合にのみ、バッファーは適切な戻り値と見なされます。返すのに適したバッファが見つからない場合、 &lt;code&gt;find-buffer-visiting&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5dd79526444e25b1cfeecb5749e143d7022aa627" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;indent-rigidly&lt;/code&gt;, except that it doesn&amp;rsquo;t alter lines that start within strings or comments.</source>
          <target state="translated">これは、文字列またはコメント内で始まる行を変更しないことを除いて、 &lt;code&gt;indent-rigidly&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="85b11594dda9bd84d7f6be1416908f106502654b" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;insert-buffer-substring&lt;/code&gt; except that it does not copy any text properties.</source>
          <target state="translated">これは、テキストプロパティをコピーしないことを除いて、 &lt;code&gt;insert-buffer-substring&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="d43e97c14640b28935ae7739c8ef0412b5e02c36" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;looking-at&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">これは、正規表現のマッチングのためにPOSIX標準で指定されている完全なバックトラッキングを実行することを除けば、 &lt;code&gt;looking-at&lt;/code&gt; いるようなものです。</target>
        </trans-unit>
        <trans-unit id="e186261242e430a5d913b4e01eb3d971cdf7ebb9" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;minibuffer-contents&lt;/code&gt;, except that it does not copy text properties, just the characters themselves. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;minibuffer-contents&lt;/code&gt; に似ていますが、テキストプロパティをコピーせず、文字自体をコピーする点が異なります。&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;テキストのプロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f224c0b5f7594edd8638ef5f71fbf09196363387" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-char-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward, and returns the minimum buffer position if no change is found.</source>
          <target state="translated">これは &lt;code&gt;next-char-property-change&lt;/code&gt; に似ていますが、前方ではなく &lt;var&gt;pos&lt;/var&gt; からスキャンバックし、変更が見つからない場合は最小バッファー位置を返します。</target>
        </trans-unit>
        <trans-unit id="f1c3592da81c9007bdce681edaf24baa510fe25c" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-property-change&lt;/code&gt; except that it considers overlay properties as well as text properties, and if no change is found before the end of the buffer, it returns the maximum buffer position rather than &lt;code&gt;nil&lt;/code&gt; (in this sense, it resembles the corresponding overlay function &lt;code&gt;next-overlay-change&lt;/code&gt;, rather than &lt;code&gt;next-property-change&lt;/code&gt;). There is no &lt;var&gt;object&lt;/var&gt; operand because this function operates only on the current buffer. It returns the next address at which either kind of property changes.</source>
          <target state="translated">これは、テキストプロパティだけでなくオーバーレイプロパティも考慮することを除いて、 &lt;code&gt;next-property-change&lt;/code&gt; に似ています。バッファの終わりまでに変更が見つからない場合は、 &lt;code&gt;nil&lt;/code&gt; ではなく最大のバッファ位置を返します（この意味では、 &lt;code&gt;next-property-change&lt;/code&gt; ではなく、対応するオーバーレイ関数 &lt;code&gt;next-overlay-change&lt;/code&gt; -change）。この関数は現在のバッファでのみ動作するため、 &lt;var&gt;object&lt;/var&gt; オペランドはありません。いずれかの種類のプロパティが変更される次のアドレスを返します。</target>
        </trans-unit>
        <trans-unit id="b4191809c394b93b9faa1cf8d4f5fef2999f60c6" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward. If the value is non-&lt;code&gt;nil&lt;/code&gt;, it is a position less than or equal to &lt;var&gt;pos&lt;/var&gt;; it equals &lt;var&gt;pos&lt;/var&gt; only if &lt;var&gt;limit&lt;/var&gt; equals &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">これは次のようである &lt;code&gt;next-property-change&lt;/code&gt; が、スキャンからバック &lt;var&gt;pos&lt;/var&gt; の代わりに、前方に。値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、それは &lt;var&gt;pos&lt;/var&gt; 以下の位置です。それは等しい &lt;var&gt;pos&lt;/var&gt; 場合にのみ &lt;var&gt;limit&lt;/var&gt; 等しい &lt;var&gt;pos&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5f370c14e6de2e6853c08ddbeedfe2bc0465f9e" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-single-char-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward, and returns the minimum valid position in &lt;var&gt;object&lt;/var&gt; if no change is found.</source>
          <target state="translated">これは &lt;code&gt;next-single-char-property-change&lt;/code&gt; に似ていますが、前方ではなく &lt;var&gt;pos&lt;/var&gt; からスキャンバックし、変更が見つからない場合は &lt;var&gt;object&lt;/var&gt; 内の最小有効位置を返します。</target>
        </trans-unit>
        <trans-unit id="b4c5ddfdd4e88bfbfa1aac3a9acd9c4777aaec54" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-single-property-change&lt;/code&gt; except that it considers overlay properties as well as text properties, and if no change is found before the end of the &lt;var&gt;object&lt;/var&gt;, it returns the maximum valid position in &lt;var&gt;object&lt;/var&gt; rather than &lt;code&gt;nil&lt;/code&gt;. Unlike &lt;code&gt;next-char-property-change&lt;/code&gt;, this function &lt;em&gt;does&lt;/em&gt; have an &lt;var&gt;object&lt;/var&gt; operand; if &lt;var&gt;object&lt;/var&gt; is not a buffer, only text-properties are considered.</source>
          <target state="translated">これは &lt;code&gt;next-single-property-change&lt;/code&gt; に似ていますが、オーバーレイプロパティとテキストプロパティが考慮され、 &lt;var&gt;object&lt;/var&gt; の終わりまでに変更が見つからない &lt;var&gt;object&lt;/var&gt; は、 &lt;code&gt;nil&lt;/code&gt; ではなくオブジェクト内の最大有効位置が返されます。 &lt;code&gt;next-char-property-change&lt;/code&gt; とは異なり、この関数に&lt;em&gt;は&lt;/em&gt; &lt;var&gt;object&lt;/var&gt; オペランドがあります。 &lt;var&gt;object&lt;/var&gt; がバッファでない場合は、テキストプロパティのみが考慮されます。</target>
        </trans-unit>
        <trans-unit id="4848490c4632438743fbf401d88ff8f17f9445fd" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-single-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward. If the value is non-&lt;code&gt;nil&lt;/code&gt;, it is a position less than or equal to &lt;var&gt;pos&lt;/var&gt;; it equals &lt;var&gt;pos&lt;/var&gt; only if &lt;var&gt;limit&lt;/var&gt; equals &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">これは次のようである &lt;code&gt;next-single-property-change&lt;/code&gt; が、スキャンからバック &lt;var&gt;pos&lt;/var&gt; の代わりに、前方に。値が &lt;code&gt;nil&lt;/code&gt; 以外の場合、それは &lt;var&gt;pos&lt;/var&gt; 以下の位置です。それは等しい &lt;var&gt;pos&lt;/var&gt; 場合にのみ &lt;var&gt;limit&lt;/var&gt; 等しい &lt;var&gt;pos&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="94882ec2784795d03f894d91e81c50023b35a3dc" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;re-search-backward&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">これは、正規表現マッチングのためにPOSIX標準で指定された完全なバックトラッキングを実行することを除いて、 &lt;code&gt;re-search-backward&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="d0da2601bec1f3e5cfb9064ffc4ff54dce0cd7cd" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;re-search-forward&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">これは、正規表現の照合のためにPOSIX標準で指定されている完全なバックトラッキングを実行することを除けば、 &lt;code&gt;re-search-forward&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="c02381a39ed8dd68932c911385907b1c4d341426" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;read-key-sequence&lt;/code&gt; except that it always returns the key sequence as a vector, never as a string. See &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;Strings of Events&lt;/a&gt;.</source>
          <target state="translated">これは &lt;code&gt;read-key-sequence&lt;/code&gt; に似ていますが、キーシーケンスを文字列としてではなく、常にベクトルとして返す点が異なります。&lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;イベントの文字列を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="826e11f6eec5fc21c6a5ea503714d5ce5d3c21fe" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;string-match&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">これは、正規表現の照合のためにPOSIX標準で指定されている完全なバックトラッキングを実行することを除いて、 &lt;code&gt;string-match&lt;/code&gt; 似ています。</target>
        </trans-unit>
        <trans-unit id="df614ce1d552ba92bda6df3d63dc888585eb690c" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;thunk-let&lt;/code&gt; but any expression in &lt;var&gt;bindings&lt;/var&gt; is allowed to refer to preceding bindings in this &lt;code&gt;thunk-let*&lt;/code&gt; form. Using this macro requires &lt;code&gt;lexical-binding&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;thunk-let&lt;/code&gt; に似てい &lt;var&gt;bindings&lt;/var&gt; が、バインディング内の任意の式は、この &lt;code&gt;thunk-let*&lt;/code&gt; 形式の先行するバインディングを参照できます。このマクロを使用するには、 &lt;code&gt;lexical-binding&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="34b310c08760b47150542f4e5ed94706ea6c4d86" translate="yes" xml:space="preserve">
          <source>This is like the &lt;code&gt;:case-fixed&lt;/code&gt; abbrev property except that it applies to all abbrevs in the table.</source>
          <target state="translated">これは、テーブル内のすべての略語に適用されることを除いて、 &lt;code&gt;:case-fixed&lt;/code&gt; fixedabbrevプロパティに似ています。</target>
        </trans-unit>
        <trans-unit id="6a4f9ed34aa3b893ef5215e1e1e15733a8207f90" translate="yes" xml:space="preserve">
          <source>This is like the &lt;code&gt;:enable-function&lt;/code&gt; abbrev property except that it applies to all abbrevs in the table. It is used before even trying to find the abbrev before point, so it can dynamically modify the abbrev table.</source>
          <target state="translated">これは、テーブル内のすべての略語に適用されることを除いて、 &lt;code&gt;:enable-function&lt;/code&gt; 略語プロパティに似ています。ポイントの前に略語を見つけようとする前に使用されるため、略語テーブルを動的に変更できます。</target>
        </trans-unit>
        <trans-unit id="350c64c70e76e9e4caeaa13b4f3df2165981c1ed" translate="yes" xml:space="preserve">
          <source>This is meaningful only for certain types, currently including &lt;code&gt;hook&lt;/code&gt;, &lt;code&gt;plist&lt;/code&gt; and &lt;code&gt;alist&lt;/code&gt;. See the definition of the individual types for a description of how to use &lt;code&gt;:options&lt;/code&gt;.</source>
          <target state="translated">これは、現在 &lt;code&gt;hook&lt;/code&gt; 、 &lt;code&gt;plist&lt;/code&gt; 、 &lt;code&gt;alist&lt;/code&gt; を含む特定のタイプにのみ意味があります。 &lt;code&gt;:options&lt;/code&gt; の使用方法の説明については、個々のタイプの定義を参照してください。</target>
        </trans-unit>
        <trans-unit id="a393ffc69a5c4aa6e10ed375dafd00e3cfb03a0f" translate="yes" xml:space="preserve">
          <source>This is not a normal hook because the values of the functions are used, and in many cases only some of the functions are called.</source>
          <target state="translated">関数の値が使われていて、一部の関数しか呼ばれていない場合が多いので、普通のフックではありません。</target>
        </trans-unit>
        <trans-unit id="7fd0025b3700aa925387621e925fa3d3dde46b1f" translate="yes" xml:space="preserve">
          <source>This is not an exhaustive list, it only covers the more general hooks. For example, every major mode defines a hook named &amp;lsquo;</source>
          <target state="translated">これは完全なリストではなく、より一般的なフックのみをカバーしています。たとえば、すべてのメジャーモードは 'という名前のフックを定義します</target>
        </trans-unit>
        <trans-unit id="03250d5aa731772bdc8eea9fd068454a1d5a9bca" translate="yes" xml:space="preserve">
          <source>This is not completely equivalent because it can evaluate &lt;var&gt;arg1&lt;/var&gt; or &lt;var&gt;arg2&lt;/var&gt; twice. By contrast, &lt;code&gt;(or &lt;var&gt;arg1&lt;/var&gt; &lt;var&gt;arg2&lt;/var&gt;
&lt;var&gt;arg3&lt;/var&gt;)&lt;/code&gt; never evaluates any argument more than once.</source>
          <target state="translated">これは、 &lt;var&gt;arg1&lt;/var&gt; または &lt;var&gt;arg2&lt;/var&gt; を2回評価できるため、完全に同等ではありません。対照的に、 &lt;code&gt;(or &lt;var&gt;arg1&lt;/var&gt; &lt;var&gt;arg2&lt;/var&gt; &lt;var&gt;arg3&lt;/var&gt;)&lt;/code&gt; は引数を2回以上評価することはありません。</target>
        </trans-unit>
        <trans-unit id="acb411e478bcba8c1fe56867bc93cbc8df4d1dff" translate="yes" xml:space="preserve">
          <source>This is often good for code that&amp;rsquo;s only a fallback for compatibility with other versions of Emacs.</source>
          <target state="translated">これは、他のバージョンのEmacsとの互換性のフォールバックにすぎないコードに適していることがよくあります。</target>
        </trans-unit>
        <trans-unit id="a4426af0bd4d059601abc817c43755785ce0a999" translate="yes" xml:space="preserve">
          <source>This is represented either as a URI (&amp;lsquo;</source>
          <target state="translated">これは、URI（ '</target>
        </trans-unit>
        <trans-unit id="6867b54e10bb974c20025f3f660fe4bba4dfb022" translate="yes" xml:space="preserve">
          <source>This is set to 1 during redisplay when this window must be updated.</source>
          <target state="translated">このウィンドウを更新する必要がある場合の再表示時に1に設定されます。</target>
        </trans-unit>
        <trans-unit id="957f8c2bc553538244d6cc4314d095b9e689ad04" translate="yes" xml:space="preserve">
          <source>This is shown in the buffer created by</source>
          <target state="translated">で作成されたバッファに表示されています。</target>
        </trans-unit>
        <trans-unit id="c051f5d03fb2296f46c510780afd0bb6a7d86d61" translate="yes" xml:space="preserve">
          <source>This is shown when the package is listed in the Package Menu. It should occupy a single line, ideally in 36 characters or less.</source>
          <target state="translated">これはパッケージがパッケージメニューに表示されているときに表示されます。1行で、理想的には36文字以内でなければなりません。</target>
        </trans-unit>
        <trans-unit id="b4b2ba11f4c17a87d0a1efa4d7f9a5472fc9d061" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;action&lt;/code&gt;, and when present, will be used instead of &lt;code&gt;action&lt;/code&gt; for button invocations resulting from mouse-clicks (instead of the user hitting</source>
          <target state="translated">This is similar to &lt;code&gt;action&lt;/code&gt; , and when present, will be used instead of &lt;code&gt;action&lt;/code&gt; for button invocations resulting from mouse-clicks (instead of the user hitting</target>
        </trans-unit>
        <trans-unit id="788b0f74839888d01741f681ba25035dd4198883" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;choice&lt;/code&gt;, except that the choices are displayed using radio buttons rather than a menu. This has the advantage of displaying documentation for the choices when applicable and so is often a good choice for a choice between constant functions (&lt;code&gt;function-item&lt;/code&gt; customization types).</source>
          <target state="translated">This is similar to &lt;code&gt;choice&lt;/code&gt; , except that the choices are displayed using radio buttons rather than a menu. This has the advantage of displaying documentation for the choices when applicable and so is often a good choice for a choice between constant functions ( &lt;code&gt;function-item&lt;/code&gt; customization types).</target>
        </trans-unit>
        <trans-unit id="4e96069698032d138ba0c11ebf7490bdc28c28fe" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;directory-files&lt;/code&gt; in deciding which files to report on and how to report their names. However, instead of returning a list of file names, it returns for each file a list &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;attributes&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;attributes&lt;/var&gt; is what &lt;code&gt;file-attributes&lt;/code&gt; returns for that file. The optional argument &lt;var&gt;id-format&lt;/var&gt; has the same meaning as the corresponding argument to &lt;code&gt;file-attributes&lt;/code&gt; (see &lt;a href=&quot;file-attributes#Definition-of-file_002dattributes&quot;&gt;Definition of file-attributes&lt;/a&gt;).</source>
          <target state="translated">This is similar to &lt;code&gt;directory-files&lt;/code&gt; in deciding which files to report on and how to report their names. However, instead of returning a list of file names, it returns for each file a list &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;attributes&lt;/var&gt;)&lt;/code&gt; , where &lt;var&gt;attributes&lt;/var&gt; is what &lt;code&gt;file-attributes&lt;/code&gt; returns for that file. The optional argument &lt;var&gt;id-format&lt;/var&gt; has the same meaning as the corresponding argument to &lt;code&gt;file-attributes&lt;/code&gt; (see &lt;a href=&quot;file-attributes#Definition-of-file_002dattributes&quot;&gt;Definition of file-attributes&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="d147532a259703926ad8424d25ebde544378f018" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;eval-region&lt;/code&gt;, but the arguments provide different optional features. &lt;code&gt;eval-buffer&lt;/code&gt; operates on the entire accessible portion of buffer &lt;var&gt;buffer-or-name&lt;/var&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Narrowing.html#Narrowing&quot;&gt;Narrowing&lt;/a&gt; in</source>
          <target state="translated">This is similar to &lt;code&gt;eval-region&lt;/code&gt; , but the arguments provide different optional features. &lt;code&gt;eval-buffer&lt;/code&gt; operates on the entire accessible portion of buffer &lt;var&gt;buffer-or-name&lt;/var&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Narrowing.html#Narrowing&quot;&gt;Narrowing&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="3ab36335de4d2ca642eb7a73a27cf1fea0cf908b" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;ewoc-refresh&lt;/code&gt;, except that only &lt;var&gt;nodes&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt; are updated instead of the entire set.</source>
          <target state="translated">This is similar to &lt;code&gt;ewoc-refresh&lt;/code&gt; , except that only &lt;var&gt;nodes&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt; are updated instead of the entire set.</target>
        </trans-unit>
        <trans-unit id="071624cc7a405f83147f7238cb97c9e536d1d4bc" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;force_start&lt;/code&gt;, but the next redisplay will only obey it if point stays visible.</source>
          <target state="translated">This is similar to &lt;code&gt;force_start&lt;/code&gt; , but the next redisplay will only obey it if point stays visible.</target>
        </trans-unit>
        <trans-unit id="0c0d72d7db7aa28768d39fb84f4daa9541f10b3d" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;let&lt;/code&gt; (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;): it sets up local variables as specified by &lt;var&gt;bindings&lt;/var&gt;, and then evaluates &lt;var&gt;body&lt;/var&gt; with those bindings in effect. Each element of &lt;var&gt;bindings&lt;/var&gt; should be either a symbol or a list of the form &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;&lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt;; the result is to evaluate &lt;var&gt;expr&lt;/var&gt; and bind &lt;var&gt;var&lt;/var&gt; to the result. The tail of &lt;var&gt;bindings&lt;/var&gt; can be either &lt;code&gt;nil&lt;/code&gt; or a symbol which should hold a list of arguments, in which case each argument is evaluated, and the symbol is bound to the resulting list.</source>
          <target state="translated">This is similar to &lt;code&gt;let&lt;/code&gt; (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;): it sets up local variables as specified by &lt;var&gt;bindings&lt;/var&gt; , and then evaluates &lt;var&gt;body&lt;/var&gt; with those bindings in effect. Each element of &lt;var&gt;bindings&lt;/var&gt; should be either a symbol or a list of the form &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;&lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt; ; the result is to evaluate &lt;var&gt;expr&lt;/var&gt; and bind &lt;var&gt;var&lt;/var&gt; to the result. The tail of &lt;var&gt;bindings&lt;/var&gt; can be either &lt;code&gt;nil&lt;/code&gt; or a symbol which should hold a list of arguments, in which case each argument is evaluated, and the symbol is bound to the resulting list.</target>
        </trans-unit>
        <trans-unit id="6972e5c3397c18efdbdfe782c91288421ed8ea0e" translate="yes" xml:space="preserve">
          <source>This is successful when there are no more arguments to match at the current argument list level; otherwise it fails. See sublist specifications and the backquote example.</source>
          <target state="translated">これは、現在の引数リストレベルでマッチする引数がこれ以上ない場合に成功します;それ以外の場合は失敗します。サブリストの仕様とバッククォートの例を参照してください。</target>
        </trans-unit>
        <trans-unit id="5164ae1e3cbd498c426b475c98a20978f02fa306" translate="yes" xml:space="preserve">
          <source>This is the</source>
          <target state="translated">これは</target>
        </trans-unit>
        <trans-unit id="2180873b27de165f770563ca634195e2da011072" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;abbrev-symbol&lt;/code&gt; of the most recent abbrev expanded. This information is left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Expanding-Abbrevs.html#Expanding-Abbrevs&quot;&gt;Expanding Abbrevs&lt;/a&gt; in</source>
          <target state="translated">This is the &lt;code&gt;abbrev-symbol&lt;/code&gt; of the most recent abbrev expanded. This information is left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Expanding-Abbrevs.html#Expanding-Abbrevs&quot;&gt;Expanding Abbrevs&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="ee8f78616eff16279484642ce7f3f5e546449369" translate="yes" xml:space="preserve">
          <source>This is the C function name for this function. This is the name that is used in C code for calling the function. The name is, by convention, &amp;lsquo;</source>
          <target state="translated">This is the C function name for this function. This is the name that is used in C code for calling the function. The name is, by convention, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="0e7631d5794c9ec12c76756418cbc63e4165f7ba" translate="yes" xml:space="preserve">
          <source>This is the abbrev table for mode-independent abbrevs. The abbrevs defined in it apply to all buffers. Each buffer may also have a local abbrev table, whose abbrev definitions take precedence over those in the global table.</source>
          <target state="translated">これは、モードに依存しない略語のための略語テーブルです。ここで定義された略語はすべてのバッファに適用されます。各バッファはローカルの略語テーブルを持つことができ、その略語の定義はグローバルテーブルの略語よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="3c523709cb7c5024477bee4729413d33dfff3e89" translate="yes" xml:space="preserve">
          <source>This is the basic function for evaluating an expression. It evaluates &lt;var&gt;form&lt;/var&gt; in the current environment, and returns the result. The type of the &lt;var&gt;form&lt;/var&gt; object determines how it is evaluated. See &lt;a href=&quot;forms#Forms&quot;&gt;Forms&lt;/a&gt;.</source>
          <target state="translated">This is the basic function for evaluating an expression. It evaluates &lt;var&gt;form&lt;/var&gt; in the current environment, and returns the result. The type of the &lt;var&gt;form&lt;/var&gt; object determines how it is evaluated. See &lt;a href=&quot;forms#Forms&quot;&gt;Forms&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bd01e94d17ab080a99e8638997693afb17244e31" translate="yes" xml:space="preserve">
          <source>This is the basic function for undoing elements of an undo list. It undoes the first &lt;var&gt;count&lt;/var&gt; elements of &lt;var&gt;list&lt;/var&gt;, returning the rest of &lt;var&gt;list&lt;/var&gt;.</source>
          <target state="translated">This is the basic function for undoing elements of an undo list. It undoes the first &lt;var&gt;count&lt;/var&gt; elements of &lt;var&gt;list&lt;/var&gt; , returning the rest of &lt;var&gt;list&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5edc23af104076b999a3160ccb924d02cdc49953" translate="yes" xml:space="preserve">
          <source>This is the command bound to</source>
          <target state="translated">にバインドされているコマンドです。</target>
        </trans-unit>
        <trans-unit id="1a1f4f970d0839d66261280186ed2bffd09be10b" translate="yes" xml:space="preserve">
          <source>This is the default file name for reading and saving abbrevs. By default, Emacs will look for</source>
          <target state="translated">これは、略語を読み取って保存するためのデフォルトのファイル名です。デフォルトでは、Emacs は</target>
        </trans-unit>
        <trans-unit id="3ac1c0a010df315e398404dba2b20fde641ad886" translate="yes" xml:space="preserve">
          <source>This is the default local keymap for reading from the minibuffer. By default, it makes the following bindings:</source>
          <target state="translated">これは、ミニバッファから読み込むためのデフォルトのローカルキーマップです。デフォルトでは、以下のようなバインディングを行います。</target>
        </trans-unit>
        <trans-unit id="d401506332b2e0b6c73cafdead87e20857817be0" translate="yes" xml:space="preserve">
          <source>This is the default translation table for decoding. If a coding systems specifies its own translation tables, the table that is the value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, is applied after them.</source>
          <target state="translated">This is the default translation table for decoding. If a coding systems specifies its own translation tables, the table that is the value of this variable, if non- &lt;code&gt;nil&lt;/code&gt; , is applied after them.</target>
        </trans-unit>
        <trans-unit id="0391cdc8080687f7d9e25d7cee6807f2974b303f" translate="yes" xml:space="preserve">
          <source>This is the default translation table for encoding. If a coding systems specifies its own translation tables, the table that is the value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, is applied after them.</source>
          <target state="translated">This is the default translation table for encoding. If a coding systems specifies its own translation tables, the table that is the value of this variable, if non- &lt;code&gt;nil&lt;/code&gt; , is applied after them.</target>
        </trans-unit>
        <trans-unit id="8ff7696e0b2dcaaf5d9a83aa5bfff3d3338f56fd" translate="yes" xml:space="preserve">
          <source>This is the documentation string. It uses C comment syntax rather than C string syntax because comment syntax requires nothing special to include multiple lines. The &amp;lsquo;</source>
          <target state="translated">This is the documentation string. It uses C comment syntax rather than C string syntax because comment syntax requires nothing special to include multiple lines. The &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ba1bc11285ca3ad6a244d1d3f63cb12bd61035a6" translate="yes" xml:space="preserve">
          <source>This is the exact expansion text of the most recent abbrev expanded, after case conversion (if any). Its value is &lt;code&gt;nil&lt;/code&gt; if the abbrev has already been unexpanded. This contains information left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command.</source>
          <target state="translated">This is the exact expansion text of the most recent abbrev expanded, after case conversion (if any). Its value is &lt;code&gt;nil&lt;/code&gt; if the abbrev has already been unexpanded. This contains information left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command.</target>
        </trans-unit>
        <trans-unit id="060ce1d372419ec3a7177fd85251e7258d7b9130" translate="yes" xml:space="preserve">
          <source>This is the exponential function; it returns &lt;em&gt;e&lt;/em&gt; to the power &lt;var&gt;arg&lt;/var&gt;.</source>
          <target state="translated">This is the exponential function; it returns &lt;em&gt;e&lt;/em&gt; to the power &lt;var&gt;arg&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="1c5a3373b574b2d101802192b77f8998ef8a201d" translate="yes" xml:space="preserve">
          <source>This is the face used for drawing the first pixel of a divider that is at least three pixels wide. To obtain a solid appearance, set this to the same value used for the &lt;code&gt;window-divider&lt;/code&gt; face.</source>
          <target state="translated">This is the face used for drawing the first pixel of a divider that is at least three pixels wide. To obtain a solid appearance, set this to the same value used for the &lt;code&gt;window-divider&lt;/code&gt; face.</target>
        </trans-unit>
        <trans-unit id="e6082d13ab0522b6c4da76ffdd8e94b61f2396f8" translate="yes" xml:space="preserve">
          <source>This is the face used for drawing the last pixel of a divider that is at least three pixels wide. To obtain a solid appearance, set this to the same value used for the &lt;code&gt;window-divider&lt;/code&gt; face.</source>
          <target state="translated">This is the face used for drawing the last pixel of a divider that is at least three pixels wide. To obtain a solid appearance, set this to the same value used for the &lt;code&gt;window-divider&lt;/code&gt; face.</target>
        </trans-unit>
        <trans-unit id="5ca86d81de089f241f9bce6155e404c269ae806a" translate="yes" xml:space="preserve">
          <source>This is the last time that the window was selected. The function &lt;code&gt;get-lru-window&lt;/code&gt; uses this field.</source>
          <target state="translated">This is the last time that the window was selected. The function &lt;code&gt;get-lru-window&lt;/code&gt; uses this field.</target>
        </trans-unit>
        <trans-unit id="79177d72d10fb21d4c423cd713d0ac76ece2bd48" translate="yes" xml:space="preserve">
          <source>This is the last window that was selected with this buffer in it, or &lt;code&gt;nil&lt;/code&gt; if that window no longer displays this buffer.</source>
          <target state="translated">This is the last window that was selected with this buffer in it, or &lt;code&gt;nil&lt;/code&gt; if that window no longer displays this buffer.</target>
        </trans-unit>
        <trans-unit id="dacccea37445b400ef6fd93c9b5449cdb37bfe67" translate="yes" xml:space="preserve">
          <source>This is the local abbrev table used in Fundamental mode; in other words, it is the local abbrev table in all buffers in Fundamental mode.</source>
          <target state="translated">これは、ファンダメンタルモードで使用されるローカルアブルブテーブルであり、言い換えれば、ファンダメンタルモードのすべてのバッファにおけるローカルアブルブテーブルである。</target>
        </trans-unit>
        <trans-unit id="18aea94860a7a9d49b1d6a68460bba6401f70214" translate="yes" xml:space="preserve">
          <source>This is the local abbrev table used in Lisp mode. It is the parent of the local abbrev table used in Emacs Lisp mode. See &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev Table Properties&lt;/a&gt;.</source>
          <target state="translated">This is the local abbrev table used in Lisp mode. It is the parent of the local abbrev table used in Emacs Lisp mode. See &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev Table Properties&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1a3ef773d17842f24c2eff807ced040674cdf64e" translate="yes" xml:space="preserve">
          <source>This is the local abbrev table used in Text mode.</source>
          <target state="translated">これは、テキストモードで使用されるローカル省略形テーブルです。</target>
        </trans-unit>
        <trans-unit id="861277d86f49449eac7c9131ef2a7a22729ce720" translate="yes" xml:space="preserve">
          <source>This is the location of the most recent abbrev expanded. This contains information left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command.</source>
          <target state="translated">This is the location of the most recent abbrev expanded. This contains information left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command.</target>
        </trans-unit>
        <trans-unit id="f395743344cd27fb23721228430ca1ee2862497e" translate="yes" xml:space="preserve">
          <source>This is the major mode command for Fundamental mode. Unlike other mode commands, it does &lt;em&gt;not&lt;/em&gt; run any mode hooks (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;), since you are not supposed to customize this mode.</source>
          <target state="translated">This is the major mode command for Fundamental mode. Unlike other mode commands, it does &lt;em&gt;not&lt;/em&gt; run any mode hooks (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;), since you are not supposed to customize this mode.</target>
        </trans-unit>
        <trans-unit id="ace17aa35f7381424427bf2537be21491ab6b400" translate="yes" xml:space="preserve">
          <source>This is the major mode used in inactive minibuffers. It uses keymap &lt;code&gt;minibuffer-inactive-mode-map&lt;/code&gt;. This can be useful if the minibuffer is in a separate frame. See &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;.</source>
          <target state="translated">This is the major mode used in inactive minibuffers. It uses keymap &lt;code&gt;minibuffer-inactive-mode-map&lt;/code&gt; . This can be useful if the minibuffer is in a separate frame. See &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="eabab2989ca075fa64bea21443c12a9e426416af" translate="yes" xml:space="preserve">
          <source>This is the maximum number of arguments that the function accepts, if there is a fixed maximum. Alternatively, it can be &lt;code&gt;UNEVALLED&lt;/code&gt;, indicating a special form that receives unevaluated arguments, or &lt;code&gt;MANY&lt;/code&gt;, indicating an unlimited number of evaluated arguments (the equivalent of &lt;code&gt;&amp;amp;rest&lt;/code&gt;). Both &lt;code&gt;UNEVALLED&lt;/code&gt; and &lt;code&gt;MANY&lt;/code&gt; are macros. If &lt;var&gt;max&lt;/var&gt; is a number, it must be more than &lt;var&gt;min&lt;/var&gt; but less than 8.</source>
          <target state="translated">This is the maximum number of arguments that the function accepts, if there is a fixed maximum. Alternatively, it can be &lt;code&gt;UNEVALLED&lt;/code&gt; , indicating a special form that receives unevaluated arguments, or &lt;code&gt;MANY&lt;/code&gt; , indicating an unlimited number of evaluated arguments (the equivalent of &lt;code&gt;&amp;amp;rest&lt;/code&gt; ). Both &lt;code&gt;UNEVALLED&lt;/code&gt; and &lt;code&gt;MANY&lt;/code&gt; are macros. If &lt;var&gt;max&lt;/var&gt; is a number, it must be more than &lt;var&gt;min&lt;/var&gt; but less than 8.</target>
        </trans-unit>
        <trans-unit id="b7f77ff184987e29e59b6b15235c322c6e149e19" translate="yes" xml:space="preserve">
          <source>This is the mechanism, how Tramp implements &lt;code&gt;interrupt-process&lt;/code&gt;.</source>
          <target state="translated">This is the mechanism, how Tramp implements &lt;code&gt;interrupt-process&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8093786592590fe333b219fb1554b9d18e418bc0" translate="yes" xml:space="preserve">
          <source>This is the minimum number of arguments that the function requires. The function &lt;code&gt;or&lt;/code&gt; allows a minimum of zero arguments.</source>
          <target state="translated">This is the minimum number of arguments that the function requires. The function &lt;code&gt;or&lt;/code&gt; allows a minimum of zero arguments.</target>
        </trans-unit>
        <trans-unit id="48b2a8f0369bc6389e8c8f8198f68b775a51fb22" translate="yes" xml:space="preserve">
          <source>This is the mode command for Auto Save mode, a buffer-local minor mode. When Auto Save mode is enabled, auto-saving is enabled in the buffer. The calling convention is the same as for other minor mode commands (see &lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;Minor Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">This is the mode command for Auto Save mode, a buffer-local minor mode. When Auto Save mode is enabled, auto-saving is enabled in the buffer. The calling convention is the same as for other minor mode commands (see &lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;Minor Mode Conventions&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="376f985e3ccb8e362301736a9bde6295a248f015" translate="yes" xml:space="preserve">
          <source>This is the mode command for Read Only minor mode, a buffer-local minor mode. When the mode is enabled, &lt;code&gt;buffer-read-only&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; in the buffer; when disabled, &lt;code&gt;buffer-read-only&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; in the buffer. The calling convention is the same as for other minor mode commands (see &lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;Minor Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">This is the mode command for Read Only minor mode, a buffer-local minor mode. When the mode is enabled, &lt;code&gt;buffer-read-only&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; in the buffer; when disabled, &lt;code&gt;buffer-read-only&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; in the buffer. The calling convention is the same as for other minor mode commands (see &lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;Minor Mode Conventions&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="ff2d57755388ba15a040fc3ff8136317bff9ef17" translate="yes" xml:space="preserve">
          <source>This is the most general composite type construct. The value may be any Lisp object that satisfies one of &lt;var&gt;criteria&lt;/var&gt;. &lt;var&gt;criteria&lt;/var&gt; should be a list, and each element should be one of these possibilities:</source>
          <target state="translated">This is the most general composite type construct. The value may be any Lisp object that satisfies one of &lt;var&gt;criteria&lt;/var&gt; . &lt;var&gt;criteria&lt;/var&gt; should be a list, and each element should be one of these possibilities:</target>
        </trans-unit>
        <trans-unit id="7d928ba7225b20194a4e742b5686cbeb4d8e8cd8" translate="yes" xml:space="preserve">
          <source>This is the name of the Lisp symbol to define as the function name; in the example above, it is &lt;code&gt;or&lt;/code&gt;.</source>
          <target state="translated">This is the name of the Lisp symbol to define as the function name; in the example above, it is &lt;code&gt;or&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7ce4a96dcfbbf417a5515c79558a45d727d8b69" translate="yes" xml:space="preserve">
          <source>This is the name of the serial port. On Unix and GNU systems, this is a file name such as</source>
          <target state="translated">これはシリアルポートの名前です。Unix と GNU システムでは、これは</target>
        </trans-unit>
        <trans-unit id="6195a15a6a8376e9066802943fcbe1887a28b33c" translate="yes" xml:space="preserve">
          <source>This is the number of columns that the display in the window is scrolled horizontally to the left. Normally, this is 0. When only the current line is hscrolled, this describes how much the current line is scrolled.</source>
          <target state="translated">これは、ウィンドウ内の表示を左に水平にスクロールしたときの列数を表します。現在の行だけがhscrolledされている場合、現在の行がどの程度スクロールされているかを記述します。</target>
        </trans-unit>
        <trans-unit id="ccb362e8890c8dc7c6b4dd90e2d5c7affca9cdad" translate="yes" xml:space="preserve">
          <source>This is the number of rapid repeated presses so far of the same mouse button. See &lt;a href=&quot;repeat-events#Repeat-Events&quot;&gt;Repeat Events&lt;/a&gt;.</source>
          <target state="translated">This is the number of rapid repeated presses so far of the same mouse button. See &lt;a href=&quot;repeat-events#Repeat-Events&quot;&gt;Repeat Events&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="152c6c5ff46b2d57f3702b8643ad5b3fd0fa9cff" translate="yes" xml:space="preserve">
          <source>This is the only valid way to change the endpoints of an overlay. Do not try modifying the markers in the overlay by hand, as that fails to update other vital data structures and can cause some overlays to be lost.</source>
          <target state="translated">これはオーバーレイのエンドポイントを変更する唯一の有効な方法です。オーバーレイのマーカーを手で変更しようとすると、他の重要なデータ構造の更新に失敗し、オーバーレイの一部が失われる可能性があるからです。</target>
        </trans-unit>
        <trans-unit id="9e818853e17046ec822acccf394ea56b21547df0" translate="yes" xml:space="preserve">
          <source>This is the regular expression describing line-beginnings that separate pages. The default value is &lt;code&gt;&quot;^\014&quot;&lt;/code&gt; (i.e., &lt;code&gt;&quot;^^L&quot;&lt;/code&gt; or &lt;code&gt;&quot;^\C-l&quot;&lt;/code&gt;); this matches a line that starts with a formfeed character.</source>
          <target state="translated">This is the regular expression describing line-beginnings that separate pages. The default value is &lt;code&gt;&quot;^\014&quot;&lt;/code&gt; (i.e., &lt;code&gt;&quot;^^L&quot;&lt;/code&gt; or &lt;code&gt;&quot;^\C-l&quot;&lt;/code&gt; ); this matches a line that starts with a formfeed character.</target>
        </trans-unit>
        <trans-unit id="ef9dc4f2029c4c23dfd2d883356ad4a5524a9429" translate="yes" xml:space="preserve">
          <source>This is the regular expression for recognizing the beginning of a line that separates paragraphs. (If you change this, you may have to change &lt;code&gt;paragraph-start&lt;/code&gt; also.) The default value is &lt;code&gt;&quot;[&amp;nbsp;\t\f]*$&quot;&lt;/code&gt;, which matches a line that consists entirely of spaces, tabs, and form feeds (after its left margin).</source>
          <target state="translated">This is the regular expression for recognizing the beginning of a line that separates paragraphs. (If you change this, you may have to change &lt;code&gt;paragraph-start&lt;/code&gt; also.) The default value is &lt;code&gt;&quot;[&amp;nbsp;\t\f]*$&quot;&lt;/code&gt; , which matches a line that consists entirely of spaces, tabs, and form feeds (after its left margin).</target>
        </trans-unit>
        <trans-unit id="14169eccf058eb3e9106c91e3eeed00bce347148" translate="yes" xml:space="preserve">
          <source>This is the regular expression for recognizing the beginning of a line that starts &lt;em&gt;or&lt;/em&gt; separates paragraphs. The default value is &lt;code&gt;&quot;\f\\|[&amp;nbsp;\t]*$&quot;&lt;/code&gt;, which matches a line containing only whitespace or starting with a form feed (after its left margin).</source>
          <target state="translated">This is the regular expression for recognizing the beginning of a line that starts &lt;em&gt;or&lt;/em&gt; separates paragraphs. The default value is &lt;code&gt;&quot;\f\\|[&amp;nbsp;\t]*$&quot;&lt;/code&gt; , which matches a line containing only whitespace or starting with a form feed (after its left margin).</target>
        </trans-unit>
        <trans-unit id="a0c0d898779738c507e70e28b25f015c92b6136b" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(car (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">This is the same as &lt;code&gt;(car (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dec8ab013682df56cb72d3cee81ea3421bcd721" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(car (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; or &lt;code&gt;(nth 1 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">This is the same as &lt;code&gt;(car (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; or &lt;code&gt;(nth 1 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07d411bf2c660ed51c61291f8b6a7b659aada3ec" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(cdr (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">This is the same as &lt;code&gt;(cdr (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="292187d529ba7d31de0638670f15fe461485ab91" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(cdr (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; or &lt;code&gt;(nthcdr 2 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">This is the same as &lt;code&gt;(cdr (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; or &lt;code&gt;(nthcdr 2 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e19ce93bf7b37edfba316c893cc348f7dd03583" translate="yes" xml:space="preserve">
          <source>This is the same as no property&amp;mdash;use the standard indentation pattern.</source>
          <target state="translated">This is the same as no property&amp;mdash;use the standard indentation pattern.</target>
        </trans-unit>
        <trans-unit id="a15feebe30b7e3e45adb8ff4c691e329282143e8" translate="yes" xml:space="preserve">
          <source>This is the soft limit for the acceptable size of an undo list. The change group at which this size is exceeded is the last one kept.</source>
          <target state="translated">これは、元に戻すリストの許容可能なサイズのソフトリミットです。このサイズを超えた変更グループは最後に保持されます。</target>
        </trans-unit>
        <trans-unit id="9a671f80aca89266fae2db990311441d4c4c6b1a" translate="yes" xml:space="preserve">
          <source>This is the symbol &lt;code&gt;vertical-scroll-bar&lt;/code&gt;.</source>
          <target state="translated">This is the symbol &lt;code&gt;vertical-scroll-bar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1fbd7fb3c9f8101ea1faa6a62faecfce025a2e8" translate="yes" xml:space="preserve">
          <source>This is the upper limit for the acceptable size of an undo list. The change group at which this size is exceeded is discarded itself (along with all older change groups). There is one exception: the very latest change group is only discarded if it exceeds &lt;code&gt;undo-outer-limit&lt;/code&gt;.</source>
          <target state="translated">This is the upper limit for the acceptable size of an undo list. The change group at which this size is exceeded is discarded itself (along with all older change groups). There is one exception: the very latest change group is only discarded if it exceeds &lt;code&gt;undo-outer-limit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4cc5a81c5b084984ed088f83e7f2697063f32d8" translate="yes" xml:space="preserve">
          <source>This is the value of point in the current buffer when this window is selected; when it is not selected, it retains its previous value.</source>
          <target state="translated">これは、このウィンドウが選択されているときの現在のバッファ内のポイントの値であり、選択されていないときは以前の値を保持します。</target>
        </trans-unit>
        <trans-unit id="423417762f6aa3330cc365bfd528db72f28df157" translate="yes" xml:space="preserve">
          <source>This is used for convenience and equals to &lt;code&gt;sizeof (char)&lt;/code&gt;.</source>
          <target state="translated">This is used for convenience and equals to &lt;code&gt;sizeof (char)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee31970b5f1fdac89c5f778fb86c8e1080cd6ff9" translate="yes" xml:space="preserve">
          <source>This is used when defining a function or macro which itself will be used to define entities like functions, macros, or variables. It indicates that the &lt;var&gt;n&lt;/var&gt;th argument, if any, should be considered as a documentation string.</source>
          <target state="translated">This is used when defining a function or macro which itself will be used to define entities like functions, macros, or variables. It indicates that the &lt;var&gt;n&lt;/var&gt; th argument, if any, should be considered as a documentation string.</target>
        </trans-unit>
        <trans-unit id="b514ab09a266bb6df1bfbc536f26517e4414fb02" translate="yes" xml:space="preserve">
          <source>This is useful for creating private files, for example.</source>
          <target state="translated">プライベートファイルの作成などに便利です。</target>
        </trans-unit>
        <trans-unit id="866343c2b8bfe95e45965d000cb118b1f57008a3" translate="yes" xml:space="preserve">
          <source>This is useful for customizable options that are defined before their value could be computed correctly. For example, during startup Emacs calls this function for some user options that were defined in pre-loaded Emacs Lisp files, but whose initial values depend on information available only at run-time.</source>
          <target state="translated">これは、カスタマイズ可能なオプションの値が正しく計算される前に定義されている場合に便利です。例えば、Emacs の起動時に、Emacs Lisp ファイルにプリロードされているが、初期値がランタイム時にしか得られない情報に依存しているユーザーオプションの一部に対して、Emacs はこの関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b3e760a5e89ad084376779f2141e7164f8a35204" translate="yes" xml:space="preserve">
          <source>This is useful for running a subprocess; every subprocess must have a non-magic directory to serve as its current directory, and this function is a good way to come up with one.</source>
          <target state="translated">これはサブプロセスを実行するのに便利です。 すべてのサブプロセスはカレントディレクトリとして機能する非マジックディレクトリを持たなければなりません。</target>
        </trans-unit>
        <trans-unit id="728aef88857a9046971c33c2a6d4cedfa41537de" translate="yes" xml:space="preserve">
          <source>This is useful mainly if you expect to change the file, and you want Emacs sessions that have already loaded it to keep working when the file changes.</source>
          <target state="translated">これは主に、ファイルを変更することが予想される場合に便利で、ファイルが変更されたときに、すでにファイルをロードしたEmacsセッションが動作し続けるようにしたい場合に便利です。</target>
        </trans-unit>
        <trans-unit id="f5fd3494988d166f15654252d52829ff89a4ff31" translate="yes" xml:space="preserve">
          <source>This is useful not only for indenting regions of unindented text, but also for indenting regions of formatted code. For example, if &lt;var&gt;count&lt;/var&gt; is 3, this command adds 3 columns of indentation to every line that begins in the specified region.</source>
          <target state="translated">This is useful not only for indenting regions of unindented text, but also for indenting regions of formatted code. For example, if &lt;var&gt;count&lt;/var&gt; is 3, this command adds 3 columns of indentation to every line that begins in the specified region.</target>
        </trans-unit>
        <trans-unit id="e023a8e76b368c9ee76c884e2055089af92b66a6" translate="yes" xml:space="preserve">
          <source>This is valid for macros only. When stepping through the macro with Edebug, use &lt;var&gt;edebug-form-spec&lt;/var&gt;. See &lt;a href=&quot;instrumenting-macro-calls#Instrumenting-Macro-Calls&quot;&gt;Instrumenting Macro Calls&lt;/a&gt;.</source>
          <target state="translated">This is valid for macros only. When stepping through the macro with Edebug, use &lt;var&gt;edebug-form-spec&lt;/var&gt; . See &lt;a href=&quot;instrumenting-macro-calls#Instrumenting-Macro-Calls&quot;&gt;Instrumenting Macro Calls&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b80b6274750aae65ca38e0dd4e8b9fe8f5e0f865" translate="yes" xml:space="preserve">
          <source>This keymap is used by &lt;code&gt;read-shell-command&lt;/code&gt; for completing command and file names that are part of a shell command. It uses &lt;code&gt;minibuffer-local-map&lt;/code&gt; as its parent keymap, and binds</source>
          <target state="translated">This keymap is used by &lt;code&gt;read-shell-command&lt;/code&gt; for completing command and file names that are part of a shell command. It uses &lt;code&gt;minibuffer-local-map&lt;/code&gt; as its parent keymap, and binds</target>
        </trans-unit>
        <trans-unit id="88249230dfa1461ddb1420acb36091ec3f70b0f6" translate="yes" xml:space="preserve">
          <source>This keymap should be stored permanently in a global variable named &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-map&lt;/code&gt;. Normally the library that defines the mode sets this variable.</source>
          <target state="translated">This keymap should be stored permanently in a global variable named &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-map&lt;/code&gt; . Normally the library that defines the mode sets this variable.</target>
        </trans-unit>
        <trans-unit id="4680fcd405dac3250ebef10c358794f36382d314" translate="yes" xml:space="preserve">
          <source>This keyword specifies that the item was first introduced in &lt;var&gt;package&lt;/var&gt; version &lt;var&gt;version&lt;/var&gt;, or that its meaning or default value was changed in that version. This keyword takes priority over &lt;code&gt;:version&lt;/code&gt;.</source>
          <target state="translated">This keyword specifies that the item was first introduced in &lt;var&gt;package&lt;/var&gt; version &lt;var&gt;version&lt;/var&gt; , or that its meaning or default value was changed in that version. This keyword takes priority over &lt;code&gt;:version&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06717c0c1628edbad88aa49559c6e4c2c1c2190c" translate="yes" xml:space="preserve">
          <source>This keyword specifies that the item was first introduced in Emacs version &lt;var&gt;version&lt;/var&gt;, or that its default value was changed in that version. The value &lt;var&gt;version&lt;/var&gt; must be a string.</source>
          <target state="translated">This keyword specifies that the item was first introduced in Emacs version &lt;var&gt;version&lt;/var&gt; , or that its default value was changed in that version. The value &lt;var&gt;version&lt;/var&gt; must be a string.</target>
        </trans-unit>
        <trans-unit id="33843d9b6330214735b425409f4f8af78ec03941" translate="yes" xml:space="preserve">
          <source>This kind of display specification is an image descriptor (see &lt;a href=&quot;image-descriptors#Image-Descriptors&quot;&gt;Image Descriptors&lt;/a&gt;). When used as a display specification, it means to display the image instead of the text that has the display specification.</source>
          <target state="translated">This kind of display specification is an image descriptor (see &lt;a href=&quot;image-descriptors#Image-Descriptors&quot;&gt;Image Descriptors&lt;/a&gt;). When used as a display specification, it means to display the image instead of the text that has the display specification.</target>
        </trans-unit>
        <trans-unit id="7faaa9ffec418842a1ea32cff679d797acd62bdf" translate="yes" xml:space="preserve">
          <source>This kind of display specification raises or lowers the text it applies to, relative to the baseline of the line. It is mainly meant to support display of subscripts and superscripts.</source>
          <target state="translated">この種の表示指定は、適用されるテキストを、行のベースラインに対して相対的に上げたり下げたりする。これは主に下付き文字や上付き文字の表示をサポートすることを目的としています。</target>
        </trans-unit>
        <trans-unit id="86f8bcb12625f70473593a24e87217ea7d15f84c" translate="yes" xml:space="preserve">
          <source>This kind of element enables undo limited to a region to determine whether the element pertains to that region.</source>
          <target state="translated">この種の要素は、ある領域に限定された要素を元に戻すことができ、その要素がその領域に属するかどうかを判断することができます。</target>
        </trans-unit>
        <trans-unit id="0198e4d62031d63b971fe601bbcb5036427c502d" translate="yes" xml:space="preserve">
          <source>This kind of element indicates how to delete text that was inserted. Upon insertion, the text occupied the range &lt;var&gt;beg&lt;/var&gt;&amp;ndash;&lt;var&gt;end&lt;/var&gt; in the buffer.</source>
          <target state="translated">This kind of element indicates how to delete text that was inserted. Upon insertion, the text occupied the range &lt;var&gt;beg&lt;/var&gt; &amp;ndash; &lt;var&gt;end&lt;/var&gt; in the buffer.</target>
        </trans-unit>
        <trans-unit id="2031537916062292c8d162859f7c94066f2bd7be" translate="yes" xml:space="preserve">
          <source>This kind of element indicates how to reinsert text that was deleted. The deleted text itself is the string &lt;var&gt;text&lt;/var&gt;. The place to reinsert it is &lt;code&gt;(abs &lt;var&gt;position&lt;/var&gt;)&lt;/code&gt;. If &lt;var&gt;position&lt;/var&gt; is positive, point was at the beginning of the deleted text, otherwise it was at the end. Zero or more (&lt;var&gt;marker&lt;/var&gt; . &lt;var&gt;adjustment&lt;/var&gt;) elements follow immediately after this element.</source>
          <target state="translated">This kind of element indicates how to reinsert text that was deleted. The deleted text itself is the string &lt;var&gt;text&lt;/var&gt; . The place to reinsert it is &lt;code&gt;(abs &lt;var&gt;position&lt;/var&gt;)&lt;/code&gt; . If &lt;var&gt;position&lt;/var&gt; is positive, point was at the beginning of the deleted text, otherwise it was at the end. Zero or more ( &lt;var&gt;marker&lt;/var&gt; . &lt;var&gt;adjustment&lt;/var&gt; ) elements follow immediately after this element.</target>
        </trans-unit>
        <trans-unit id="6a92ac9457f3eba6f70af9b4039c809a618422d3" translate="yes" xml:space="preserve">
          <source>This kind of element indicates that an unmodified buffer became modified. A &lt;var&gt;time-flag&lt;/var&gt; that is a non-integer Lisp timestamp represents the visited file&amp;rsquo;s modification time as of when it was previously visited or saved, using the same format as &lt;code&gt;current-time&lt;/code&gt;; see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. A &lt;var&gt;time-flag&lt;/var&gt; of 0 means the buffer does not correspond to any file; -1 means the visited file previously did not exist. &lt;code&gt;primitive-undo&lt;/code&gt; uses these values to determine whether to mark the buffer as unmodified once again; it does so only if the file&amp;rsquo;s status matches that of &lt;var&gt;time-flag&lt;/var&gt;.</source>
          <target state="translated">This kind of element indicates that an unmodified buffer became modified. A &lt;var&gt;time-flag&lt;/var&gt; that is a non-integer Lisp timestamp represents the visited file&amp;rsquo;s modification time as of when it was previously visited or saved, using the same format as &lt;code&gt;current-time&lt;/code&gt; ; see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. A &lt;var&gt;time-flag&lt;/var&gt; of 0 means the buffer does not correspond to any file; -1 means the visited file previously did not exist. &lt;code&gt;primitive-undo&lt;/code&gt; uses these values to determine whether to mark the buffer as unmodified once again; it does so only if the file&amp;rsquo;s status matches that of &lt;var&gt;time-flag&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6026d55330e076e1b5e8302cb8cc0503f89740ae" translate="yes" xml:space="preserve">
          <source>This kind of element is similar to a char-table: the element whose index is &lt;var&gt;c&lt;/var&gt; is the binding for the character &lt;var&gt;c&lt;/var&gt;. Since the range of characters that can be bound this way is limited by the vector size, and vector creation allocates space for all character codes from 0 up, this format should not be used except for creating menu keymaps (see &lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;Menu Keymaps&lt;/a&gt;), where the bindings themselves don&amp;rsquo;t matter.</source>
          <target state="translated">This kind of element is similar to a char-table: the element whose index is &lt;var&gt;c&lt;/var&gt; is the binding for the character &lt;var&gt;c&lt;/var&gt; . Since the range of characters that can be bound this way is limited by the vector size, and vector creation allocates space for all character codes from 0 up, this format should not be used except for creating menu keymaps (see &lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;Menu Keymaps&lt;/a&gt;), where the bindings themselves don&amp;rsquo;t matter.</target>
        </trans-unit>
        <trans-unit id="670442b4a298391446965e2e0895cc456c3f0e10" translate="yes" xml:space="preserve">
          <source>This kind of element records a change in a text property. Here&amp;rsquo;s how you might undo the change:</source>
          <target state="translated">This kind of element records a change in a text property. Here&amp;rsquo;s how you might undo the change:</target>
        </trans-unit>
        <trans-unit id="7a313669cfb4c507d72ba3c18fb6c15e01e8a702" translate="yes" xml:space="preserve">
          <source>This kind of element records a previous value of point; undoing this element moves point to &lt;var&gt;position&lt;/var&gt;. Ordinary cursor motion does not make any sort of undo record, but deletion operations use these entries to record where point was before the command.</source>
          <target state="translated">This kind of element records a previous value of point; undoing this element moves point to &lt;var&gt;position&lt;/var&gt; . Ordinary cursor motion does not make any sort of undo record, but deletion operations use these entries to record where point was before the command.</target>
        </trans-unit>
        <trans-unit id="74aca0d37d9ae71f2d1cc20e0acfc59942c4d78e" translate="yes" xml:space="preserve">
          <source>This kind of element records the fact that the marker &lt;var&gt;marker&lt;/var&gt; was relocated due to deletion of surrounding text, and that it moved &lt;var&gt;adjustment&lt;/var&gt; character positions. If the marker&amp;rsquo;s location is consistent with the (&lt;var&gt;text&lt;/var&gt; . &lt;var&gt;position&lt;/var&gt;) element preceding it in the undo list, then undoing this element moves &lt;var&gt;marker&lt;/var&gt; - &lt;var&gt;adjustment&lt;/var&gt; characters.</source>
          <target state="translated">This kind of element records the fact that the marker &lt;var&gt;marker&lt;/var&gt; was relocated due to deletion of surrounding text, and that it moved &lt;var&gt;adjustment&lt;/var&gt; character positions. If the marker&amp;rsquo;s location is consistent with the ( &lt;var&gt;text&lt;/var&gt; . &lt;var&gt;position&lt;/var&gt; ) element preceding it in the undo list, then undoing this element moves &lt;var&gt;marker&lt;/var&gt; - &lt;var&gt;adjustment&lt;/var&gt; characters.</target>
        </trans-unit>
        <trans-unit id="3cb3be606e59ed5b9c0a50d64b8e0f0ec983558d" translate="yes" xml:space="preserve">
          <source>This kind of event indicates that the user deiconified &lt;var&gt;frame&lt;/var&gt; using the window manager. Its standard definition is &lt;code&gt;ignore&lt;/code&gt;; since the frame has already been made visible, Emacs has no work to do.</source>
          <target state="translated">This kind of event indicates that the user deiconified &lt;var&gt;frame&lt;/var&gt; using the window manager. Its standard definition is &lt;code&gt;ignore&lt;/code&gt; ; since the frame has already been made visible, Emacs has no work to do.</target>
        </trans-unit>
        <trans-unit id="b0389f029b5476e406f25371cd11ca9df6cb583e" translate="yes" xml:space="preserve">
          <source>This kind of event indicates that the user gave the window manager a command to delete a particular window, which happens to be an Emacs frame.</source>
          <target state="translated">この種のイベントは、ユーザがウィンドウマネージャに特定のウィンドウを削除するコマンドを与えたことを示します。</target>
        </trans-unit>
        <trans-unit id="7952efff4e739b3c0fa91b6b94148a84a46261a0" translate="yes" xml:space="preserve">
          <source>This kind of event indicates that the user iconified &lt;var&gt;frame&lt;/var&gt; using the window manager. Its standard definition is &lt;code&gt;ignore&lt;/code&gt;; since the frame has already been iconified, Emacs has no work to do. The purpose of this event type is so that you can keep track of such events if you want to.</source>
          <target state="translated">This kind of event indicates that the user iconified &lt;var&gt;frame&lt;/var&gt; using the window manager. Its standard definition is &lt;code&gt;ignore&lt;/code&gt; ; since the frame has already been iconified, Emacs has no work to do. The purpose of this event type is so that you can keep track of such events if you want to.</target>
        </trans-unit>
        <trans-unit id="cd97f54fd15bd9de60fe7a8f9b207a534d4fa1e6" translate="yes" xml:space="preserve">
          <source>This kind of event is generated on MS-Windows when the input language has changed. This typically means that the keyboard keys will send to Emacs characters from a different language. The generated event has this form:</source>
          <target state="translated">この種のイベントは、入力言語が変更されたときにMS-Windows上で発生します。これは通常、キーボードキーが異なる言語の文字をEmacsに送ることを意味します。生成されるイベントはこのような形式になっています。</target>
        </trans-unit>
        <trans-unit id="ab75f1664758616d85499184fa4d2d74ea113655" translate="yes" xml:space="preserve">
          <source>This kind of event is generated only on some kinds of systems. On some systems, &lt;code&gt;mouse-4&lt;/code&gt; and &lt;code&gt;mouse-5&lt;/code&gt; are used instead. For portable code, use the variables &lt;code&gt;mouse-wheel-up-event&lt;/code&gt; and &lt;code&gt;mouse-wheel-down-event&lt;/code&gt; defined in</source>
          <target state="translated">This kind of event is generated only on some kinds of systems. On some systems, &lt;code&gt;mouse-4&lt;/code&gt; and &lt;code&gt;mouse-5&lt;/code&gt; are used instead. For portable code, use the variables &lt;code&gt;mouse-wheel-up-event&lt;/code&gt; and &lt;code&gt;mouse-wheel-down-event&lt;/code&gt; defined in</target>
        </trans-unit>
        <trans-unit id="b769a495f9f3470b8b57a9af6ad31527bc09db20" translate="yes" xml:space="preserve">
          <source>This kind of event is generated when a group of files is selected in an application outside of Emacs, and then dragged and dropped onto an Emacs frame.</source>
          <target state="translated">このようなイベントは、Emacs以外のアプリケーションでファイル群を選択し、Emacsのフレームにドラッグ&amp;ドロップしたときに発生します。</target>
        </trans-unit>
        <trans-unit id="0a898ee417796d3b1ed596e28a0f7497567803e8" translate="yes" xml:space="preserve">
          <source>This kind of event is generated when a mouse pointer moves onto a portion of buffer text which has a &lt;code&gt;help-echo&lt;/code&gt; text property. The generated event has this form:</source>
          <target state="translated">This kind of event is generated when a mouse pointer moves onto a portion of buffer text which has a &lt;code&gt;help-echo&lt;/code&gt; text property. The generated event has this form:</target>
        </trans-unit>
        <trans-unit id="762fa25cd888c23ec4fd2eb17c0edbbe84de587e" translate="yes" xml:space="preserve">
          <source>This kind of event is generated, at present, only on some kinds of systems.</source>
          <target state="translated">このようなイベントが発生するのは、現在のところ、ある種のシステムのみです。</target>
        </trans-unit>
        <trans-unit id="152b0ea6afc5e3668f3d8fd8ad4c72aca4a2bd59" translate="yes" xml:space="preserve">
          <source>This kind of input is used by commands such as &lt;code&gt;describe-key&lt;/code&gt; and &lt;code&gt;global-set-key&lt;/code&gt;.</source>
          <target state="translated">This kind of input is used by commands such as &lt;code&gt;describe-key&lt;/code&gt; and &lt;code&gt;global-set-key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8cd7e1bad968c38ed996dde43c44175da0393db" translate="yes" xml:space="preserve">
          <source>This last application is not a consequence of the idea of a parenthetical grouping; it is a separate feature that was assigned as a second meaning to the same &amp;lsquo;</source>
          <target state="translated">This last application is not a consequence of the idea of a parenthetical grouping; it is a separate feature that was assigned as a second meaning to the same &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="945eebdaa1b234786ebd37b08ded017f1f541ffc" translate="yes" xml:space="preserve">
          <source>This last example shows that while the precedence order of action functions is fixed, as described in &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;, an action alist entry specified by a display action ranked lower in that order can affect the execution of a higher ranked display action.</source>
          <target state="translated">This last example shows that while the precedence order of action functions is fixed, as described in &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;, an action alist entry specified by a display action ranked lower in that order can affect the execution of a higher ranked display action.</target>
        </trans-unit>
        <trans-unit id="d08e2fc4d861b226b6fd5475d079f142eba7c3bc" translate="yes" xml:space="preserve">
          <source>This limit, with the associated error when it is exceeded, is one way Emacs Lisp avoids infinite recursion on an ill-defined function. If you increase the value of &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; too much, such code can cause stack overflow instead. On some systems, this overflow can be handled. In that case, normal Lisp evaluation is interrupted and control is transferred back to the top level command loop (&lt;code&gt;top-level&lt;/code&gt;). Note that there is no way to enter Emacs Lisp debugger in this situation. See &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;.</source>
          <target state="translated">This limit, with the associated error when it is exceeded, is one way Emacs Lisp avoids infinite recursion on an ill-defined function. If you increase the value of &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; too much, such code can cause stack overflow instead. On some systems, this overflow can be handled. In that case, normal Lisp evaluation is interrupted and control is transferred back to the top level command loop ( &lt;code&gt;top-level&lt;/code&gt; ). Note that there is no way to enter Emacs Lisp debugger in this situation. See &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bcc8007c7808126b523ec31d5e48b3565a52f3b5" translate="yes" xml:space="preserve">
          <source>This limit, with the associated error when it is exceeded, is one way that Lisp avoids infinite recursion on an ill-defined function. &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; provides another limit on depth of nesting. See &lt;a href=&quot;eval#Definition-of-max_002dlisp_002deval_002ddepth&quot;&gt;Eval&lt;/a&gt;.</source>
          <target state="translated">This limit, with the associated error when it is exceeded, is one way that Lisp avoids infinite recursion on an ill-defined function. &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; provides another limit on depth of nesting. See &lt;a href=&quot;eval#Definition-of-max_002dlisp_002deval_002ddepth&quot;&gt;Eval&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4d78e690f62161bc69da4b0989efd209c5bdb08c" translate="yes" xml:space="preserve">
          <source>This list contains one format definition for each defined file format. Each format definition is a list of this form:</source>
          <target state="translated">このリストには、定義されたファイル形式ごとに1つの形式定義が含まれています。各フォーマット定義は、この形式のリストです。</target>
        </trans-unit>
        <trans-unit id="df354d8c21824cc6e8ce1f7f3d36ad96df9240d1" translate="yes" xml:space="preserve">
          <source>This list defines the meaning and severity order of the warning severity levels. Each element defines one severity level, and they are arranged in order of decreasing severity.</source>
          <target state="translated">このリストは、警告の厳しさレベルの意味と厳しさの順序を定義する。各要素は1つの厳しさレベルを定義しており、厳しさの低い順に並べられている。</target>
        </trans-unit>
        <trans-unit id="3e2500a44049d519ddab4c6e86d75accf0d1a9e7" translate="yes" xml:space="preserve">
          <source>This list specifies which warning types should not be displayed immediately for the user. Each element of the list should be a list of symbols. If its elements match the first elements in a warning type, then that warning is not displayed immediately.</source>
          <target state="translated">このリストは,ユーザに対してどの警告タイプを直ちに表示してはならないかを指定する。リストの各要素はシンボルのリストでなければなりません。その要素が警告タイプの最初の要素と一致する場合、その警告は直ちに表示されません。</target>
        </trans-unit>
        <trans-unit id="2a489bb904f4efa05b56db344d7277e660987478" translate="yes" xml:space="preserve">
          <source>This list specifies which warning types should not be logged in the warnings buffer. Each element of the list should be a list of symbols. If it matches the first few elements in a warning type, then that warning is not logged.</source>
          <target state="translated">このリストは、どの警告タイプが警告バッファに記録されてはならないかを指定します。リストの各要素はシンボルのリストでなければなりません。警告タイプの最初のいくつかの要素と一致する場合、その警告はログに記録されません。</target>
        </trans-unit>
        <trans-unit id="1ad164428461f53ec9c5402b74b2aab4081066a7" translate="yes" xml:space="preserve">
          <source>This macro adds the quotation prefix &amp;lsquo;</source>
          <target state="translated">This macro adds the quotation prefix &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="7dd4c963005c973585b291aa5d7643be1547b0bc" translate="yes" xml:space="preserve">
          <source>This macro allows for more complex &lt;code&gt;setf&lt;/code&gt; expansions than the previous form. You may need to use this form, for example, if there is no simple setter function to call, or if there is one but it requires different arguments to the place form.</source>
          <target state="translated">This macro allows for more complex &lt;code&gt;setf&lt;/code&gt; expansions than the previous form. You may need to use this form, for example, if there is no simple setter function to call, or if there is one but it requires different arguments to the place form.</target>
        </trans-unit>
        <trans-unit id="758f1ec089d15ebe80a8c17241dfb12b51b48fa5" translate="yes" xml:space="preserve">
          <source>This macro arranges to evaluate &lt;var&gt;body&lt;/var&gt; at the end of loading the file &lt;var&gt;library&lt;/var&gt;, each time &lt;var&gt;library&lt;/var&gt; is loaded. If &lt;var&gt;library&lt;/var&gt; is already loaded, it evaluates &lt;var&gt;body&lt;/var&gt; right away.</source>
          <target state="translated">This macro arranges to evaluate &lt;var&gt;body&lt;/var&gt; at the end of loading the file &lt;var&gt;library&lt;/var&gt; , each time &lt;var&gt;library&lt;/var&gt; is loaded. If &lt;var&gt;library&lt;/var&gt; is already loaded, it evaluates &lt;var&gt;body&lt;/var&gt; right away.</target>
        </trans-unit>
        <trans-unit id="c57467ea7cad180121107de2e88fb6ef9897e91e" translate="yes" xml:space="preserve">
          <source>This macro binds the variables defined in &lt;var&gt;var-sequence&lt;/var&gt; to the values that are the corresponding elements of &lt;var&gt;val-sequence&lt;/var&gt;. This is known as &lt;em&gt;destructuring binding&lt;/em&gt;. The elements of &lt;var&gt;var-sequence&lt;/var&gt; can themselves include sequences, allowing for nested destructuring.</source>
          <target state="translated">This macro binds the variables defined in &lt;var&gt;var-sequence&lt;/var&gt; to the values that are the corresponding elements of &lt;var&gt;val-sequence&lt;/var&gt; . This is known as &lt;em&gt;destructuring binding&lt;/em&gt;. The elements of &lt;var&gt;var-sequence&lt;/var&gt; can themselves include sequences, allowing for nested destructuring.</target>
        </trans-unit>
        <trans-unit id="6f711b665c2a8ce453cb2ebda16137c0492020c9" translate="yes" xml:space="preserve">
          <source>This macro changes neither the ordering of recently selected windows nor the buffer list.</source>
          <target state="translated">このマクロは、最近選択されたウィンドウの順序もバッファリストも変更しません。</target>
        </trans-unit>
        <trans-unit id="336ca36b3e60f284ef8f4d857ab0f0bc6028697b" translate="yes" xml:space="preserve">
          <source>This macro creates a new list whose &lt;small&gt;CAR&lt;/small&gt; is &lt;var&gt;element&lt;/var&gt; and whose &lt;small&gt;CDR&lt;/small&gt; is the list specified by &lt;var&gt;listname&lt;/var&gt;, and saves that list in &lt;var&gt;listname&lt;/var&gt;. In the simplest case, &lt;var&gt;listname&lt;/var&gt; is an unquoted symbol naming a list, and this macro is equivalent to &lt;code&gt;(setq&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;&amp;nbsp;(cons&amp;nbsp;&lt;var&gt;element&lt;/var&gt;&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">This macro creates a new list whose &lt;small&gt;CAR&lt;/small&gt; is &lt;var&gt;element&lt;/var&gt; and whose &lt;small&gt;CDR&lt;/small&gt; is the list specified by &lt;var&gt;listname&lt;/var&gt; , and saves that list in &lt;var&gt;listname&lt;/var&gt; . In the simplest case, &lt;var&gt;listname&lt;/var&gt; is an unquoted symbol naming a list, and this macro is equivalent to &lt;code&gt;(setq&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;&amp;nbsp;(cons&amp;nbsp;&lt;var&gt;element&lt;/var&gt;&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40bbfc75de3d0eb2da70ce732701a0dd875cf1fc" translate="yes" xml:space="preserve">
          <source>This macro declares &lt;var&gt;face&lt;/var&gt; as a named face whose default face spec is given by &lt;var&gt;spec&lt;/var&gt;. You should not quote the symbol &lt;var&gt;face&lt;/var&gt;, and it should not end in &amp;lsquo;</source>
          <target state="translated">このマクロは宣言し &lt;var&gt;face&lt;/var&gt; 、デフォルトの顔仕様で与えられるという名前の顔として &lt;var&gt;spec&lt;/var&gt; 。記号の &lt;var&gt;face&lt;/var&gt; 引用したり、 'で終わらせたりしないでください。</target>
        </trans-unit>
        <trans-unit id="9f34b7009b683930f8acb38d1a8798313c8a8307" translate="yes" xml:space="preserve">
          <source>This macro declares &lt;var&gt;option&lt;/var&gt; as a user option (i.e., a customizable variable). You should not quote &lt;var&gt;option&lt;/var&gt;.</source>
          <target state="translated">このマクロは、 &lt;var&gt;option&lt;/var&gt; をユーザーオプション（つまり、カスタマイズ可能な変数）として宣言します。 &lt;var&gt;option&lt;/var&gt; 引用しないでください。</target>
        </trans-unit>
        <trans-unit id="2dfe746bac95bbefea5c1811fe5a6eda9b910ee0" translate="yes" xml:space="preserve">
          <source>This macro declares &lt;var&gt;theme&lt;/var&gt; (a symbol) as the name of a Custom theme. The optional argument &lt;var&gt;doc&lt;/var&gt; should be a string describing the theme; this is the description shown when the user invokes the &lt;code&gt;describe-theme&lt;/code&gt; command or types</source>
          <target state="translated">このマクロは、カスタムテーマの名前として &lt;var&gt;theme&lt;/var&gt; （シンボル）を宣言します。オプションの引数 &lt;var&gt;doc&lt;/var&gt; は、テーマを説明する文字列である必要があります。これは、ユーザーが &lt;code&gt;describe-theme&lt;/code&gt; コマンドまたはタイプを呼び出したときに表示される説明です。</target>
        </trans-unit>
        <trans-unit id="4518c52ab2f4211c21f7c20ef2c1d6d61487464c" translate="yes" xml:space="preserve">
          <source>This macro declares that the theme named &lt;var&gt;theme&lt;/var&gt; has been fully specified.</source>
          <target state="translated">このマクロは、themeという名前の &lt;var&gt;theme&lt;/var&gt; が完全に指定されていることを宣言します。</target>
        </trans-unit>
        <trans-unit id="e51efd2a81640a3eaa23b7ac36af0f12627a503f" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;code&gt;obsolete-face&lt;/code&gt; as an alias for &lt;var&gt;current-face&lt;/var&gt;, and also marks it as obsolete, indicating that it may be removed in future. &lt;var&gt;when&lt;/var&gt; should be a string indicating when &lt;code&gt;obsolete-face&lt;/code&gt; was made obsolete (usually a version number string).</source>
          <target state="translated">このマクロは、 &lt;code&gt;obsolete-face&lt;/code&gt; を &lt;var&gt;current-face&lt;/var&gt; のエイリアスとして定義し、また、obsoleteとしてマークして、将来削除される可能性があることを示します。 &lt;var&gt;when&lt;/var&gt; は、 &lt;code&gt;obsolete-face&lt;/code&gt; がいつ廃止されたかを示す文字列（通常はバージョン番号の文字列）である必要があります。</target>
        </trans-unit>
        <trans-unit id="af478a0091278edd21c33f699593f63d6a3b16e9" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;var&gt;symbol&lt;/var&gt; as an image name. The arguments &lt;var&gt;specs&lt;/var&gt; is a list which specifies how to display the image. The third argument, &lt;var&gt;doc&lt;/var&gt;, is an optional documentation string.</source>
          <target state="translated">このマクロは、 &lt;var&gt;symbol&lt;/var&gt; を画像名として定義します。引数の &lt;var&gt;specs&lt;/var&gt; は、画像の表示方法を指定するリストです。3番目の引数 &lt;var&gt;doc&lt;/var&gt; は、オプションのドキュメント文字列です。</target>
        </trans-unit>
        <trans-unit id="7eca1fac075588092c93c9ef94fd2185bba6a5ed" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;var&gt;variable&lt;/var&gt; as a variable with initial value &lt;var&gt;value&lt;/var&gt; and &lt;var&gt;docstring&lt;/var&gt;, and marks it as automatically buffer-local. It is equivalent to calling &lt;code&gt;defvar&lt;/code&gt; followed by &lt;code&gt;make-variable-buffer-local&lt;/code&gt;. &lt;var&gt;variable&lt;/var&gt; should be an unquoted symbol.</source>
          <target state="translated">このマクロは、変数を初期 &lt;var&gt;value&lt;/var&gt; と &lt;var&gt;docstring&lt;/var&gt; を持つ &lt;var&gt;variable&lt;/var&gt; として定義し、自動的にバッファーローカルとしてマークします。これは、 &lt;code&gt;defvar&lt;/code&gt; を呼び出してから &lt;code&gt;make-variable-buffer-local&lt;/code&gt; を呼び出すのと同じです。 &lt;var&gt;variable&lt;/var&gt; は引用符で囲まれていない記号である必要があります。</target>
        </trans-unit>
        <trans-unit id="d064b45275a2c98f8eb0eefcc1a0a5b56ffc1c2e" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;var&gt;variant&lt;/var&gt; as a major mode command, using &lt;var&gt;name&lt;/var&gt; as the string form of the mode name. &lt;var&gt;variant&lt;/var&gt; and &lt;var&gt;parent&lt;/var&gt; should be unquoted symbols.</source>
          <target state="translated">このマクロは、モード名の文字列形式として &lt;var&gt;name&lt;/var&gt; を使用して、 &lt;var&gt;variant&lt;/var&gt; をメジャーモードコマンドとして定義します。 &lt;var&gt;variant&lt;/var&gt; と &lt;var&gt;parent&lt;/var&gt; は引用符で囲まれていない記号である必要があります。</target>
        </trans-unit>
        <trans-unit id="e880807d5cb4a8f957d3faabeec3ce262fd66e92" translate="yes" xml:space="preserve">
          <source>This macro defines a generic function with the specified &lt;var&gt;name&lt;/var&gt; and &lt;var&gt;arguments&lt;/var&gt;. If &lt;var&gt;body&lt;/var&gt; is present, it provides the default implementation. If &lt;var&gt;documentation&lt;/var&gt; is present (it should always be), it specifies the documentation string for the generic function, in the form &lt;code&gt;(:documentation &lt;var&gt;docstring&lt;/var&gt;)&lt;/code&gt;. The optional &lt;var&gt;options-and-methods&lt;/var&gt; can be one of the following forms:</source>
          <target state="translated">このマクロは、指定された &lt;var&gt;name&lt;/var&gt; と &lt;var&gt;arguments&lt;/var&gt; 持つジェネリック関数を定義します。 &lt;var&gt;body&lt;/var&gt; が存在する場合、デフォルトの実装を提供します。 &lt;var&gt;documentation&lt;/var&gt; が存在する場合（常に存在する必要があります）、ジェネリック関数のドキュメント文字列を &lt;code&gt;(:documentation &lt;var&gt;docstring&lt;/var&gt;)&lt;/code&gt; の形式で指定します。オプションの &lt;var&gt;options-and-methods&lt;/var&gt; は、次のいずれかの形式になります。</target>
        </trans-unit>
        <trans-unit id="a1581bdfea49b7d91c21dea9fde0735a6274156d" translate="yes" xml:space="preserve">
          <source>This macro defines a generic mode command named &lt;var&gt;mode&lt;/var&gt; (a symbol, not quoted). The optional argument &lt;var&gt;docstring&lt;/var&gt; is the documentation for the mode command. If you do not supply it, &lt;code&gt;define-generic-mode&lt;/code&gt; generates one by default.</source>
          <target state="translated">このマクロは、 &lt;var&gt;mode&lt;/var&gt; （引用符ではなく記号）という名前の汎用モードコマンドを定義します。オプションの引数 &lt;var&gt;docstring&lt;/var&gt; は、modeコマンドのドキュメントです。指定しない場合、 &lt;code&gt;define-generic-mode&lt;/code&gt; はデフォルトで生成します。</target>
        </trans-unit>
        <trans-unit id="fc780370bfdcea66201ad2e2e48a85cad452cdef" translate="yes" xml:space="preserve">
          <source>This macro defines a help command named &lt;var&gt;fname&lt;/var&gt; that acts like a prefix key that shows a list of the subcommands it offers.</source>
          <target state="translated">このマクロは、提供するサブコマンドのリストを表示するプレフィックスキーのように機能する &lt;var&gt;fname&lt;/var&gt; という名前のヘルプコマンドを定義します。</target>
        </trans-unit>
        <trans-unit id="ccb93ffc23f150e9bd4d87e556589184b1606d91" translate="yes" xml:space="preserve">
          <source>This macro defines a new minor mode whose name is &lt;var&gt;mode&lt;/var&gt; (a symbol). It defines a command named &lt;var&gt;mode&lt;/var&gt; to toggle the minor mode, with &lt;var&gt;doc&lt;/var&gt; as its documentation string.</source>
          <target state="translated">このマクロは、名前が &lt;var&gt;mode&lt;/var&gt; （シンボル）である新しいマイナーモードを定義します。ドキュメント文字列として &lt;var&gt;doc&lt;/var&gt; を使用して、マイナー &lt;var&gt;mode&lt;/var&gt; を切り替えるmodeという名前のコマンドを定義します。</target>
        </trans-unit>
        <trans-unit id="b5d66b480e164cdf0b5c545618b56e07bcfa1492" translate="yes" xml:space="preserve">
          <source>This macro defines a particular implementation for the generic function called &lt;var&gt;name&lt;/var&gt;. The implementation code is given by &lt;var&gt;body&lt;/var&gt;. If present, &lt;var&gt;docstring&lt;/var&gt; is the documentation string for the method. The &lt;var&gt;arguments&lt;/var&gt; list, which must be identical in all the methods that implement a generic function, and must match the argument list of that function, provides argument specializers of the form &lt;code&gt;(&lt;var&gt;arg&lt;/var&gt; &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;arg&lt;/var&gt; is the argument name as specified in the &lt;code&gt;cl-defgeneric&lt;/code&gt; call, and &lt;var&gt;spec&lt;/var&gt; is one of the following specializer forms:</source>
          <target state="translated">このマクロは、 &lt;var&gt;name&lt;/var&gt; と呼ばれる汎用関数の特定の実装を定義します。実装コードは &lt;var&gt;body&lt;/var&gt; で指定されます。存在する場合、 &lt;var&gt;docstring&lt;/var&gt; はメソッドのドキュメント文字列です。 &lt;var&gt;arguments&lt;/var&gt; 一般的な機能を実装し、その関数の引数リストと一致している必要があり、すべての方法で同一でなければならないリストは、フォームの引数specializers提供 &lt;code&gt;(&lt;var&gt;arg&lt;/var&gt; &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;arg&lt;/var&gt; がで指定されるように引数名で &lt;code&gt;cl-defgeneric&lt;/code&gt; 呼び出し、および &lt;var&gt;spec&lt;/var&gt; は、次のスペシャライザー形式の1つです。</target>
        </trans-unit>
        <trans-unit id="1bf762513226f9e0d0c76fe0ab01e192966cff40" translate="yes" xml:space="preserve">
          <source>This macro defines a piece of advice and adds it to the function named &lt;var&gt;symbol&lt;/var&gt;. The advice is an anonymous function if &lt;var&gt;name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or a function named &lt;code&gt;symbol@name&lt;/code&gt;. See &lt;code&gt;advice-add&lt;/code&gt; for explanation of other arguments.</source>
          <target state="translated">このマクロはアドバイスの一部を定義し、それを &lt;var&gt;symbol&lt;/var&gt; という名前の関数に追加します。 &lt;var&gt;name&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、アドバイスは無名関数または &lt;code&gt;symbol@name&lt;/code&gt; 関数です。他の引数の説明については、 &lt;code&gt;advice-add&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="df2969a08f4547b130e03b348f89af4cba3fe3fe" translate="yes" xml:space="preserve">
          <source>This macro defines a pop-up menu and/or menu bar submenu, whose contents are given by &lt;var&gt;menu&lt;/var&gt;.</source>
          <target state="translated">このマクロは、ポップアップメニューやメニューバーサブメニューを定義し &lt;var&gt;menu&lt;/var&gt; 。その内容はmenuによって指定されます。</target>
        </trans-unit>
        <trans-unit id="bd6879d6f7772948c4277202d4a6fc769b411940" translate="yes" xml:space="preserve">
          <source>This macro defines an inline function. Its syntax is exactly the same as &lt;code&gt;defun&lt;/code&gt; (see &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;Defining Functions&lt;/a&gt;).</source>
          <target state="translated">このマクロはインライン関数を定義します。その構文は &lt;code&gt;defun&lt;/code&gt; とまったく同じです（&lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;関数の定義を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="0ddeba2369fd28d40fefa3dde64629d58a6b1f8a" translate="yes" xml:space="preserve">
          <source>This macro does not call &lt;code&gt;temp-buffer-show-function&lt;/code&gt;. Rather, it passes the &lt;var&gt;action&lt;/var&gt; argument to &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) in order to display the buffer.</source>
          <target state="translated">このマクロは &lt;code&gt;temp-buffer-show-function&lt;/code&gt; を呼び出しません。むしろ、 &lt;code&gt;display-buffer&lt;/code&gt; を表示するために、 &lt;var&gt;action&lt;/var&gt; 引数をdisplay-buffer（&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;ウィンドウの選択を&lt;/a&gt;参照）に渡します。</target>
        </trans-unit>
        <trans-unit id="d8b213d179e92ff57cb3f968b254741602508713" translate="yes" xml:space="preserve">
          <source>This macro does not save or restore anything about the sizes, arrangement or contents of windows; therefore, if &lt;var&gt;forms&lt;/var&gt; change them, the change persists. If the previously selected window of some frame is no longer live at the time of exit from &lt;var&gt;forms&lt;/var&gt;, that frame&amp;rsquo;s selected window is left alone. If the previously selected window is no longer live, then whatever window is selected at the end of &lt;var&gt;forms&lt;/var&gt; remains selected. The current buffer is restored if and only if it is still live when exiting &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">このマクロは、ウィンドウのサイズ、配置、または内容について何も保存または復元しません。したがって、 &lt;var&gt;forms&lt;/var&gt; 変更しても、変更は持続します。以前に選択したフレームのウィンドウが &lt;var&gt;forms&lt;/var&gt; の終了時に表示されなくなった場合、そのフレームで選択したウィンドウはそのままになります。以前に選択したウィンドウが表示されなくなった場合、 &lt;var&gt;forms&lt;/var&gt; の最後で選択したウィンドウはすべて選択されたままになります。現在のバッファは、 &lt;var&gt;forms&lt;/var&gt; 終了するときにまだ有効である場合にのみ復元されます。</target>
        </trans-unit>
        <trans-unit id="ae86586511d482808422d2e50c0a731fbe37e34b" translate="yes" xml:space="preserve">
          <source>This macro enables you to easily define &lt;code&gt;setf&lt;/code&gt; methods for simple cases. &lt;var&gt;name&lt;/var&gt; is the name of a function, macro, or special form. You can use this macro whenever &lt;var&gt;name&lt;/var&gt; has a directly corresponding &lt;var&gt;setter&lt;/var&gt; function that updates it, e.g., &lt;code&gt;(gv-define-simple-setter car setcar)&lt;/code&gt;.</source>
          <target state="translated">このマクロを使用すると、単純なケースの &lt;code&gt;setf&lt;/code&gt; メソッドを簡単に定義できます。 &lt;var&gt;name&lt;/var&gt; は、関数、マクロ、または特殊形式の名前です。このマクロは、 &lt;var&gt;name&lt;/var&gt; に直接対応する &lt;var&gt;setter&lt;/var&gt; 関数があり、それを更新する場合はいつでも使用できます &lt;code&gt;(gv-define-simple-setter car setcar)&lt;/code&gt; 例：（gv-define-simple-setter car setcar））。</target>
        </trans-unit>
        <trans-unit id="1fb902944dc65c2f932044169c8fcd9b76aaa264" translate="yes" xml:space="preserve">
          <source>This macro evaluates &lt;var&gt;body&lt;/var&gt; like &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; (see &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Temporary Displays&lt;/a&gt;), inserting any output produced by its forms into a buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt;, which can be a buffer or the name of a buffer. (Frequently, &lt;var&gt;buffer-or-name&lt;/var&gt; is the value returned by the function &lt;code&gt;help-buffer&lt;/code&gt;.) This macro puts the specified buffer into Help mode and displays a message telling the user how to quit and scroll the help window. It selects the help window if the current value of the user option &lt;code&gt;help-window-select&lt;/code&gt; has been set accordingly. It returns the last value in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">このマクロは、 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; （&lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;一時表示を&lt;/a&gt;参照）のように &lt;var&gt;body&lt;/var&gt; 評価し、そのフォームによって生成された出力を、 &lt;var&gt;buffer-or-name&lt;/var&gt; で指定されたバッファー（バッファーまたはバッファーの名前）に挿入します。 （多くの場合、 &lt;var&gt;buffer-or-name&lt;/var&gt; は関数 &lt;code&gt;help-buffer&lt;/code&gt; によって返される値です。）このマクロは、指定されたバッファーをヘルプモードにし、ヘルプウィンドウを終了してスクロールする方法をユーザーに通知するメッセージを表示します。ユーザーオプション &lt;code&gt;help-window-select&lt;/code&gt; の現在の値が適切に設定されている場合は、ヘルプウィンドウを選択します。 &lt;var&gt;body&lt;/var&gt; の最後の値を返します。</target>
        </trans-unit>
        <trans-unit id="6f61480d39d1ecb235b2cc0fd2383304353fc547" translate="yes" xml:space="preserve">
          <source>This macro evaluates &lt;var&gt;form&lt;/var&gt; and stores it in &lt;var&gt;place&lt;/var&gt;, which must be a valid generalized variable form. If there are several &lt;var&gt;place&lt;/var&gt; and &lt;var&gt;form&lt;/var&gt; pairs, the assignments are done sequentially just as with &lt;code&gt;setq&lt;/code&gt;. &lt;code&gt;setf&lt;/code&gt; returns the value of the last &lt;var&gt;form&lt;/var&gt;.</source>
          <target state="translated">このマクロは &lt;var&gt;form&lt;/var&gt; を評価し、その &lt;var&gt;place&lt;/var&gt; に格納します。これは、有効な一般化変数フォームである必要があります。 &lt;var&gt;place&lt;/var&gt; と &lt;var&gt;form&lt;/var&gt; ペアが複数ある場合、割り当ては &lt;code&gt;setq&lt;/code&gt; の場合と同様に順番に行われます。 &lt;code&gt;setf&lt;/code&gt; は、最後の &lt;var&gt;form&lt;/var&gt; 値を返します。</target>
        </trans-unit>
        <trans-unit id="7abb8da61962a11ab49639b003be6d8bb328d07a" translate="yes" xml:space="preserve">
          <source>This macro evaluates the &lt;var&gt;body&lt;/var&gt; forms with the default permissions for new files temporarily set to &lt;var&gt;modes&lt;/var&gt; (whose value is as for &lt;code&gt;set-file-modes&lt;/code&gt; above). When finished, it restores the original default file permissions, and returns the value of the last form in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">このマクロは、一時的に &lt;var&gt;modes&lt;/var&gt; 設定された新しいファイルのデフォルトのアクセス許可で &lt;var&gt;body&lt;/var&gt; フォームを評価します（その値は上記の &lt;code&gt;set-file-modes&lt;/code&gt; と同じです）。終了すると、元のデフォルトのファイル権限を復元し、 &lt;var&gt;body&lt;/var&gt; 最後のフォームの値を返します。</target>
        </trans-unit>
        <trans-unit id="b129de8793865baa627dc72e801c91e5f70bb260" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt; after arranging for the specified &lt;var&gt;function&lt;/var&gt; to be called via &lt;code&gt;minibuffer-setup-hook&lt;/code&gt;. By default, &lt;var&gt;function&lt;/var&gt; is called before the other functions in the &lt;code&gt;minibuffer-setup-hook&lt;/code&gt; list, but if &lt;var&gt;function&lt;/var&gt; is of the form &lt;code&gt;(:append&amp;nbsp;&lt;var&gt;func&lt;/var&gt;)&lt;/code&gt;, &lt;var&gt;func&lt;/var&gt; will be called &lt;em&gt;after&lt;/em&gt; the other hook functions.</source>
          <target state="translated">このマクロは、 &lt;code&gt;minibuffer-setup-hook&lt;/code&gt; を介して指定された &lt;var&gt;function&lt;/var&gt; が呼び出されるように調整した後、 &lt;var&gt;body&lt;/var&gt; を実行します。デフォルトでは、 &lt;var&gt;function&lt;/var&gt; で他の関数の前に呼び出される &lt;code&gt;minibuffer-setup-hook&lt;/code&gt; リストが、場合 &lt;var&gt;function&lt;/var&gt; 形式です &lt;code&gt;(:append&amp;nbsp;&lt;var&gt;func&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;func&lt;/var&gt; ）、 &lt;var&gt;func&lt;/var&gt; が呼び出されます&lt;em&gt;後&lt;/em&gt;、他のフック関数。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="27e32e2f6b35805b4a22fbfa454e0d6c350e2f0c" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt; forms in sequence, but allows quitting, at least locally, within &lt;var&gt;body&lt;/var&gt; even if &lt;code&gt;inhibit-quit&lt;/code&gt; was non-&lt;code&gt;nil&lt;/code&gt; outside this construct. It returns the value of the last form in &lt;var&gt;body&lt;/var&gt;, unless exited by quitting, in which case it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このマクロは &lt;var&gt;body&lt;/var&gt; フォームを順番に実行しますが、 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;inhibit-quit&lt;/code&gt; がこのコンストラクトの外部でゼロでない場合でも、少なくともローカルで &lt;var&gt;body&lt;/var&gt; 内で終了できます。終了して終了しない限り、 &lt;var&gt;body&lt;/var&gt; の最後のフォームの値を返します。終了した場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4079406b3a31f1f7d3beeb0e88719167b46392b2" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt; using &lt;var&gt;table&lt;/var&gt; as the current syntax table. It returns the value of the last form in &lt;var&gt;body&lt;/var&gt;, after restoring the old current syntax table.</source>
          <target state="translated">このマクロは、現在の構文テーブルとして &lt;var&gt;table&lt;/var&gt; を使用して &lt;var&gt;body&lt;/var&gt; を実行します。古い現在の構文テーブルを復元した後、 &lt;var&gt;body&lt;/var&gt; の最後のフォームの値を返します。</target>
        </trans-unit>
        <trans-unit id="a87f12335539ef121c88feeedfb11d453188e0d7" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, but tells all &lt;code&gt;run-mode-hooks&lt;/code&gt; calls during the execution of &lt;var&gt;body&lt;/var&gt; to delay running their hooks. The hooks will actually run during the next call to &lt;code&gt;run-mode-hooks&lt;/code&gt; after the end of the &lt;code&gt;delay-mode-hooks&lt;/code&gt; construct.</source>
          <target state="translated">このマクロは &lt;var&gt;body&lt;/var&gt; を実行しますが、 &lt;var&gt;body&lt;/var&gt; の実行中にすべての &lt;code&gt;run-mode-hooks&lt;/code&gt; 呼び出しに、フックの実行を遅らせるように指示します。フックは、 &lt;code&gt;delay-mode-hooks&lt;/code&gt; 構造の終了後、 &lt;code&gt;run-mode-hooks&lt;/code&gt; への次の呼び出し中に実際に実行されます。</target>
        </trans-unit>
        <trans-unit id="3be2fcb384655deb63d77c707b73dc06109fc91b" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, like &lt;code&gt;progn&lt;/code&gt; does (see &lt;a href=&quot;sequencing#Sequencing&quot;&gt;progn&lt;/a&gt;), with &lt;var&gt;coding-systems&lt;/var&gt; at the front of the priority list for coding systems. &lt;var&gt;coding-systems&lt;/var&gt; should be a list of coding systems to prefer during execution of &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">このマクロを実行する &lt;var&gt;body&lt;/var&gt; 同様に、 &lt;code&gt;progn&lt;/code&gt; ない（参照&lt;a href=&quot;sequencing#Sequencing&quot;&gt;のprogn&lt;/a&gt;で） &lt;var&gt;coding-systems&lt;/var&gt; コーディングシステムの優先リストの先頭に。 &lt;var&gt;coding-systems&lt;/var&gt; は、 &lt;var&gt;body&lt;/var&gt; の実行中に優先するコーディングシステムのリストである必要があります。</target>
        </trans-unit>
        <trans-unit id="7ae966482029b97e67b7005a2ce5f7d6b14afae5" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, saving and restoring the match data around it. The return value is the value of the last form in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">このマクロは &lt;var&gt;body&lt;/var&gt; を実行し、その周囲の一致データを保存および復元します。戻り値は、 &lt;var&gt;body&lt;/var&gt; の最後のフォームの値です。</target>
        </trans-unit>
        <trans-unit id="f640cea389a3967eacb832ab28e86e3a59cb68ee" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, with generation of mouse motion events enabled. Typically, &lt;var&gt;body&lt;/var&gt; would use &lt;code&gt;read-event&lt;/code&gt; to read the motion events and modify the display accordingly. See &lt;a href=&quot;motion-events#Motion-Events&quot;&gt;Motion Events&lt;/a&gt;, for the format of mouse motion events.</source>
          <target state="translated">このマクロは、マウスモーションイベントの生成を有効にして、 &lt;var&gt;body&lt;/var&gt; を実行します。通常、 &lt;var&gt;body&lt;/var&gt; は &lt;code&gt;read-event&lt;/code&gt; を使用してモーションイベントを読み取り、それに応じて表示を変更します。マウスモーションイベントの形式については、&lt;a href=&quot;motion-events#Motion-Events&quot;&gt;モーションイベントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8745bde0573038b4f2bad95e7448ff5307d09cbc" translate="yes" xml:space="preserve">
          <source>This macro executes the &lt;var&gt;body&lt;/var&gt; forms with &lt;code&gt;standard-output&lt;/code&gt; set up to feed output into a string. Then it returns that string.</source>
          <target state="translated">このマクロは、出力を文字列にフィードするように設定された &lt;code&gt;standard-output&lt;/code&gt; &lt;var&gt;body&lt;/var&gt; フォームを実行します。次に、その文字列を返します。</target>
        </trans-unit>
        <trans-unit id="ac571b79dcf83497cdc095b4b88a5f08d1b0feda" translate="yes" xml:space="preserve">
          <source>This macro expands the form &lt;code&gt;(setf (&lt;var&gt;name&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;) &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; by first binding the &lt;code&gt;setf&lt;/code&gt; argument forms &lt;code&gt;(&lt;var&gt;value&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; according to &lt;var&gt;arglist&lt;/var&gt;, and then executing &lt;var&gt;body&lt;/var&gt;. &lt;var&gt;body&lt;/var&gt; should return a Lisp form that does the assignment, and finally returns the value that was set. An example of using this macro is:</source>
          <target state="translated">このマクロは、最初に &lt;var&gt;arglist&lt;/var&gt; に従って &lt;code&gt;setf&lt;/code&gt; 引数フォーム &lt;code&gt;(&lt;var&gt;value&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; &lt;var&gt;value&lt;/var&gt; &lt;var&gt;args&lt;/var&gt; &amp;hellip;）をバインドし、次に &lt;var&gt;body&lt;/var&gt; を実行することによって、フォーム &lt;code&gt;(setf (&lt;var&gt;name&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;) &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; します。 &lt;var&gt;body&lt;/var&gt; は、割り当てを行うLispフォームを返し、最後に設定された値を返す必要があります。このマクロの使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d7975753990e004132a21e45f607c6a80990bd7b" translate="yes" xml:space="preserve">
          <source>This macro expands to a constant expression specifying the maximum possible value for an &lt;code&gt;emacs_limb_t&lt;/code&gt; object. The expression is suitable for use in &lt;code&gt;#if&lt;/code&gt;.</source>
          <target state="translated">このマクロは、 &lt;code&gt;emacs_limb_t&lt;/code&gt; オブジェクトの可能な最大値を指定する定数式に展開されます。この式は、 &lt;code&gt;#if&lt;/code&gt; での使用に適しています。</target>
        </trans-unit>
        <trans-unit id="e60951e2d0ea406aacfcfbca8044c42e0c4d8865" translate="yes" xml:space="preserve">
          <source>This macro expands, if appropriate, into a call to &lt;code&gt;set-buffer-multibyte&lt;/code&gt; that will be executed when the compiled program is actually run.</source>
          <target state="translated">このマクロは、必要に応じて、コンパイルされたプログラムが実際に実行されるときに実行される &lt;code&gt;set-buffer-multibyte&lt;/code&gt; の呼び出しに展開されます。</target>
        </trans-unit>
        <trans-unit id="dfcf74ca1d7f576cf6dad74cd20210b20966a147" translate="yes" xml:space="preserve">
          <source>This macro ignores its arguments and evaluates to &lt;code&gt;nil&lt;/code&gt;; it has no run-time effect. However, when a &lt;code&gt;declare&lt;/code&gt; form occurs in the &lt;var&gt;declare&lt;/var&gt; argument of a &lt;code&gt;defun&lt;/code&gt; or &lt;code&gt;defsubst&lt;/code&gt; function definition (see &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;Defining Functions&lt;/a&gt;) or a &lt;code&gt;defmacro&lt;/code&gt; macro definition (see &lt;a href=&quot;defining-macros#Defining-Macros&quot;&gt;Defining Macros&lt;/a&gt;), it appends the properties specified by &lt;var&gt;specs&lt;/var&gt; to the function or macro. This work is specially performed by &lt;code&gt;defun&lt;/code&gt;, &lt;code&gt;defsubst&lt;/code&gt;, and &lt;code&gt;defmacro&lt;/code&gt;.</source>
          <target state="translated">このマクロは引数を無視し、 &lt;code&gt;nil&lt;/code&gt; と評価されます。実行時の影響はありません。しかし、 &lt;code&gt;declare&lt;/code&gt; 形式はで発生する &lt;var&gt;declare&lt;/var&gt; の引数 &lt;code&gt;defun&lt;/code&gt; または &lt;code&gt;defsubst&lt;/code&gt; （参照関数定義&lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;関数の定義&lt;/a&gt;）または &lt;code&gt;defmacro&lt;/code&gt; マクロ定義は、（参照&lt;a href=&quot;defining-macros#Defining-Macros&quot;&gt;定義マクロ&lt;/a&gt;）、それによって指定されたプロパティ付加 &lt;var&gt;specs&lt;/var&gt; 関数またはマクロにします。この作業は、 &lt;code&gt;defun&lt;/code&gt; 、 &lt;code&gt;defsubst&lt;/code&gt; 、および &lt;code&gt;defmacro&lt;/code&gt; によって特別に実行されます。</target>
        </trans-unit>
        <trans-unit id="fde95a9f8f52ccfb477529a522c6da3d80c48947" translate="yes" xml:space="preserve">
          <source>This macro is analogous to &lt;code&gt;let&lt;/code&gt; but creates &amp;ldquo;lazy&amp;rdquo; variable bindings. Any binding has the form &lt;code&gt;(&lt;var&gt;symbol&lt;/var&gt;&amp;nbsp;&lt;var&gt;value-form&lt;/var&gt;)&lt;/code&gt;. Unlike &lt;code&gt;let&lt;/code&gt;, the evaluation of any &lt;var&gt;value-form&lt;/var&gt; is deferred until the binding of the according &lt;var&gt;symbol&lt;/var&gt; is used for the first time when evaluating the &lt;var&gt;forms&lt;/var&gt;. Any &lt;var&gt;value-form&lt;/var&gt; is evaluated at most once. Using this macro requires &lt;code&gt;lexical-binding&lt;/code&gt;.</source>
          <target state="translated">このマクロは &lt;code&gt;let&lt;/code&gt; に似ていますが、「遅延」変数バインディングを作成します。すべてのバインディングの形式は &lt;code&gt;(&lt;var&gt;symbol&lt;/var&gt;&amp;nbsp;&lt;var&gt;value-form&lt;/var&gt;)&lt;/code&gt; です。 &lt;code&gt;let&lt;/code&gt; とは異なり、 &lt;var&gt;value-form&lt;/var&gt; 評価は、 &lt;var&gt;forms&lt;/var&gt; 評価時に対応する &lt;var&gt;symbol&lt;/var&gt; バインディングが初めて使用されるまで延期されます。すべての &lt;var&gt;value-form&lt;/var&gt; は最大で1回評価されます。このマクロを使用するには、 &lt;code&gt;lexical-binding&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="240dcb5abf7ca46c0582e74a1ff5a3636c413914" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;dolist&lt;/code&gt; (see &lt;a href=&quot;iteration#Iteration&quot;&gt;dolist&lt;/a&gt;), except that &lt;var&gt;sequence&lt;/var&gt; can be a list, vector or string. This is primarily useful for side-effects.</source>
          <target state="translated">このマクロは次のようである &lt;code&gt;dolist&lt;/code&gt; （参照&lt;a href=&quot;iteration#Iteration&quot;&gt;dolist&lt;/a&gt;ことを除いて、） &lt;var&gt;sequence&lt;/var&gt; 、リスト、ベクトルまたは文字列を指定できます。これは主に副作用に役立ちます。</target>
        </trans-unit>
        <trans-unit id="0b40c16c0c4b7a44ed78164f4e17c79e9f8efc88" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;ignore-errors&lt;/code&gt;, but will only ignore the specific error condition specified.</source>
          <target state="translated">このマクロは &lt;code&gt;ignore-errors&lt;/code&gt; に似ていますが、指定された特定のエラー条件のみを無視します。</target>
        </trans-unit>
        <trans-unit id="adc365839652648d99b231687a1c47add543bb61" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;save-excursion&lt;/code&gt;, but also saves and restores the mark location and &lt;code&gt;mark-active&lt;/code&gt;. This macro does what &lt;code&gt;save-excursion&lt;/code&gt; did before Emacs 25.1.</source>
          <target state="translated">このマクロは &lt;code&gt;save-excursion&lt;/code&gt; に似ていますが、マークの場所と &lt;code&gt;mark-active&lt;/code&gt; 保存および復元します。このマクロは、Emacs25.1より前に &lt;code&gt;save-excursion&lt;/code&gt; が行ったことを実行します。</target>
        </trans-unit>
        <trans-unit id="9c8d159bb45571cc00a640c67ecde9318447b2a3" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;with-current-buffer-window&lt;/code&gt; but unlike that displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt;&lt;em&gt;before&lt;/em&gt; running &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">このマクロは &lt;code&gt;with-current-buffer-window&lt;/code&gt; に似ていますが、 &lt;var&gt;body&lt;/var&gt; を実行する&lt;em&gt;前に&lt;/em&gt; &lt;var&gt;buffer-or-name&lt;/var&gt; で指定されたバッファーを表示します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9c606e79e4f7d9aac9955c81c88d2abfd952ab5" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;with-temp-buffer-window&lt;/code&gt; but unlike that makes the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; current for running &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">このマクロは &lt;code&gt;with-temp-buffer-window&lt;/code&gt; に似ていますが、それとは異なり、 &lt;var&gt;buffer-or-name&lt;/var&gt; で指定されたバッファーが実行中の &lt;var&gt;body&lt;/var&gt; に対して現在のものになります。</target>
        </trans-unit>
        <trans-unit id="6038dcc9b2f50c57eda40b8b7d329c70ed7fdd8b" translate="yes" xml:space="preserve">
          <source>This macro is like a milder version of &lt;code&gt;ignore-errors&lt;/code&gt;. Rather than suppressing errors altogether, it converts them into messages. It uses the string &lt;var&gt;format&lt;/var&gt; to format the message. &lt;var&gt;format&lt;/var&gt; should contain a single &amp;lsquo;</source>
          <target state="translated">このマクロは、 &lt;code&gt;ignore-errors&lt;/code&gt; より穏やかなバージョンのようなものです。エラーを完全に抑制するのではなく、エラーをメッセージに変換します。文字列 &lt;var&gt;format&lt;/var&gt; を使用してメッセージをフォーマットします。 &lt;var&gt;format&lt;/var&gt; は単一の 'を含める必要があります</target>
        </trans-unit>
        <trans-unit id="1089adde9cb8e7b3d276f051078a571a9f5f568a" translate="yes" xml:space="preserve">
          <source>This macro is mainly useful in functions that can be called from timers, process filters, process sentinels, &lt;code&gt;pre-command-hook&lt;/code&gt;, &lt;code&gt;post-command-hook&lt;/code&gt;, and other places where &lt;code&gt;inhibit-quit&lt;/code&gt; is normally bound to &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">このマクロは主に、タイマー、プロセスフィルター、プロセスセンチネル、 &lt;code&gt;pre-command-hook&lt;/code&gt; 、 &lt;code&gt;post-command-hook&lt;/code&gt; 、および通常は &lt;code&gt;inhibit-quit&lt;/code&gt; が &lt;code&gt;t&lt;/code&gt; にバインドされているその他の場所から呼び出すことができる関数で役立ちます。</target>
        </trans-unit>
        <trans-unit id="e51efa738bfd57738b122e9bf0d44a2c76376e14" translate="yes" xml:space="preserve">
          <source>This macro is similar to &lt;code&gt;rx-let&lt;/code&gt;, except that the &lt;var&gt;bindings&lt;/var&gt; argument is evaluated (and thus needs to be quoted if it is a list literal), and the definitions are substituted at run time, which is required for &lt;code&gt;rx-to-string&lt;/code&gt; to work. Example:</source>
          <target state="translated">このマクロは次のようにある &lt;code&gt;rx-let&lt;/code&gt; ていることを除いて、 &lt;var&gt;bindings&lt;/var&gt; 引数が評価され（したがって、それは、リストリテラルがある場合は引用符で囲む必要があります）、および定義が要求される実行時間、で置換されている &lt;code&gt;rx-to-string&lt;/code&gt; に作業。例：</target>
        </trans-unit>
        <trans-unit id="872ab3045f15ef8d0982acc9508a187db02ee5b8" translate="yes" xml:space="preserve">
          <source>This macro is similar to &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt;. Like that construct, it executes &lt;var&gt;body&lt;/var&gt; while arranging to insert any output it prints into the buffer named &lt;var&gt;buffer-or-name&lt;/var&gt; and displays that buffer in some window. Unlike &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt;, however, it does not automatically switch that buffer to Help mode.</source>
          <target state="translated">このマクロは、 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; に似ています。その構成と同様に、出力を &lt;var&gt;buffer-or-name&lt;/var&gt; という名前のバッファーに挿入するように調整しながら &lt;var&gt;body&lt;/var&gt; を実行し、そのバッファーをウィンドウに表示します。ただし、 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; とは異なり、そのバッファをヘルプモードに自動的に切り替えることはありません。</target>
        </trans-unit>
        <trans-unit id="502593387f4dd3152d313e067601e6d922f59e20" translate="yes" xml:space="preserve">
          <source>This macro is the handy way to add the advice &lt;var&gt;function&lt;/var&gt; to the function stored in &lt;var&gt;place&lt;/var&gt; (see &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Generalized Variables&lt;/a&gt;).</source>
          <target state="translated">このマクロは、 &lt;var&gt;place&lt;/var&gt; 保存されている関数にアドバイス &lt;var&gt;function&lt;/var&gt; を追加するための便利な方法です（&lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;一般化変数を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="898ca937f667c623cfe6374eeb5823fc4a782653" translate="yes" xml:space="preserve">
          <source>This macro is the simplest and safest way to evaluate forms while holding a mutex. It acquires &lt;var&gt;mutex&lt;/var&gt;, invokes &lt;var&gt;body&lt;/var&gt;, and then releases &lt;var&gt;mutex&lt;/var&gt;. It returns the result of &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">このマクロは、ミューテックスを保持しながらフォームを評価するための最も簡単で安全な方法です。これは、取得 &lt;var&gt;mutex&lt;/var&gt; 、呼び出し &lt;var&gt;body&lt;/var&gt; 、その後、解放 &lt;var&gt;mutex&lt;/var&gt; 。 &lt;var&gt;body&lt;/var&gt; の結果を返します。</target>
        </trans-unit>
        <trans-unit id="c57d845f68f572ad0dc1d29a18d8a2eefbb811b0" translate="yes" xml:space="preserve">
          <source>This macro is used in the command &lt;code&gt;help-for-help&lt;/code&gt; which is the binding of</source>
          <target state="translated">このマクロは、のバインディングである &lt;code&gt;help-for-help&lt;/code&gt; コマンドで使用されます。</target>
        </trans-unit>
        <trans-unit id="874301f3bae1355172b9f78c913283a4f918e535" translate="yes" xml:space="preserve">
          <source>This macro is useful when a function makes a possibly large number of repetitive changes to the buffer, and the change hooks would otherwise take a long time to run, were they to be run for each individual buffer modification. Emacs itself uses this macro, for example, in the commands &lt;code&gt;comment-region&lt;/code&gt; and &lt;code&gt;uncomment-region&lt;/code&gt;.</source>
          <target state="translated">このマクロは、関数がバッファーに何度も繰り返し変更を加える可能性がある場合に役立ちます。変更フックは、個々のバッファーの変更ごとに実行されると、実行に時間がかかります。Emacs自体は、たとえば、コマンド &lt;code&gt;comment-region&lt;/code&gt; および &lt;code&gt;uncomment-region&lt;/code&gt; でこのマクロを使用します。</target>
        </trans-unit>
        <trans-unit id="ab579982465b6c0abfa804fafecbc12d00aafa32" translate="yes" xml:space="preserve">
          <source>This macro marks the variable &lt;var&gt;obsolete-name&lt;/var&gt; as obsolete and also makes it an alias for the variable &lt;var&gt;current-name&lt;/var&gt;. It is equivalent to the following:</source>
          <target state="translated">このマクロは、変数 &lt;var&gt;obsolete-name&lt;/var&gt; を廃止としてマークし、変数 &lt;var&gt;current-name&lt;/var&gt; のエイリアスにします。これは、次と同等です。</target>
        </trans-unit>
        <trans-unit id="c10b428bbf4c831a02afbd670c89c65a2bf0ac8a" translate="yes" xml:space="preserve">
          <source>This macro provides a convenient way to examine the &lt;small&gt;CAR&lt;/small&gt; of a list, and take it off the list, all at once. It operates on the list stored in &lt;var&gt;listname&lt;/var&gt;. It removes the first element from the list, saves the &lt;small&gt;CDR&lt;/small&gt; into &lt;var&gt;listname&lt;/var&gt;, then returns the removed element.</source>
          <target state="translated">このマクロは、リストの&lt;small&gt;CAR&lt;/small&gt;を調べて、リストから一度に&lt;small&gt;削除&lt;/small&gt;するための便利な方法を提供します。 &lt;var&gt;listname&lt;/var&gt; に格納されているリストを操作します。リストから最初の要素を削除し、&lt;small&gt;CDR&lt;/small&gt;を &lt;var&gt;listname&lt;/var&gt; に保存してから、削除された要素を返します。</target>
        </trans-unit>
        <trans-unit id="5ce1c46667c8342bd53b8c8d00223a597902d3a7" translate="yes" xml:space="preserve">
          <source>This macro provides a way to initialize the variable &lt;var&gt;var&lt;/var&gt; as a collection for completion in a lazy way, not computing its actual contents until they are first needed. You use this macro to produce a value that you store in &lt;var&gt;var&lt;/var&gt;. The actual computation of the proper value is done the first time you do completion using &lt;var&gt;var&lt;/var&gt;. It is done by calling &lt;var&gt;fun&lt;/var&gt; with no arguments. The value &lt;var&gt;fun&lt;/var&gt; returns becomes the permanent value of &lt;var&gt;var&lt;/var&gt;.</source>
          <target state="translated">このマクロは、変数 &lt;var&gt;var&lt;/var&gt; をコレクションとして初期化して、最初に必要になるまで実際の内容を計算せずに、怠惰な方法で完了する方法を提供します。このマクロを使用して、 &lt;var&gt;var&lt;/var&gt; に格納する値を生成します。適切な値の実際の計算は、 &lt;var&gt;var&lt;/var&gt; を使用して最初に完了を行うときに行われます。これは、引数なしで &lt;var&gt;fun&lt;/var&gt; を呼び出すことによって行われます。値の &lt;var&gt;fun&lt;/var&gt; リターンの恒久的な値になり &lt;var&gt;var&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab58e2ead360b8247d087db896d63e6217aa1f18" translate="yes" xml:space="preserve">
          <source>This macro records the selected frame, as well as the selected window of each frame, executes &lt;var&gt;forms&lt;/var&gt; in sequence, then restores the earlier selected frame and windows. It also saves and restores the current buffer. It returns the value of the last form in &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">このマクロは、選択されたフレームと各フレームの選択されたウィンドウを記録し、 &lt;var&gt;forms&lt;/var&gt; を順番に実行してから、以前に選択されたフレームとウィンドウを復元します。また、現在のバッファを保存および復元します。それはの最後のフォームの値を返す &lt;var&gt;forms&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="987da63b6119b2ab29ca07d3632561ba48057dc6" translate="yes" xml:space="preserve">
          <source>This macro records the window configuration of the selected frame, executes &lt;var&gt;forms&lt;/var&gt; in sequence, then restores the earlier window configuration. The return value is the value of the final form in &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">このマクロは、選択したフレームのウィンドウ構成を記録し、 &lt;var&gt;forms&lt;/var&gt; を順番に実行してから、以前のウィンドウ構成を復元します。戻り値は、で最終形態の値である &lt;var&gt;forms&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="20fd0804b7873bc25fc74435b03ebaf4d380e109" translate="yes" xml:space="preserve">
          <source>This macro removes &lt;var&gt;function&lt;/var&gt; from the function stored in &lt;var&gt;place&lt;/var&gt;. This only works if &lt;var&gt;function&lt;/var&gt; was added to &lt;var&gt;place&lt;/var&gt; using &lt;code&gt;add-function&lt;/code&gt;.</source>
          <target state="translated">このマクロは、 &lt;var&gt;place&lt;/var&gt; 保存されている &lt;var&gt;function&lt;/var&gt; から関数を削除します。これは、 &lt;code&gt;add-function&lt;/code&gt; を使用して &lt;var&gt;function&lt;/var&gt; が &lt;var&gt;place&lt;/var&gt; に追加された場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="942af90fbe13d4c3f86fa73a97ddc4ba8207ba72" translate="yes" xml:space="preserve">
          <source>This macro removes the quotation prefix &amp;lsquo;</source>
          <target state="translated">このマクロは引用符の接頭辞を削除します '</target>
        </trans-unit>
        <trans-unit id="8e9efbf46d1cb164cf2735c755c967a131313218" translate="yes" xml:space="preserve">
          <source>This macro requests additional trace information around the execution of the &lt;var&gt;body&lt;/var&gt; forms. The argument &lt;var&gt;string&lt;/var&gt; specifies text to put in the trace buffer, after the &amp;lsquo;</source>
          <target state="translated">このマクロは、 &lt;var&gt;body&lt;/var&gt; フォームの実行に関する追加のトレース情報を要求します。引数 &lt;var&gt;string&lt;/var&gt; は、トレースバッファに入れるテキストを 'の後に指定します</target>
        </trans-unit>
        <trans-unit id="2419fc1905805628d557d71d598f621c48e6c92c" translate="yes" xml:space="preserve">
          <source>This macro returns an anonymous function with argument list &lt;var&gt;args&lt;/var&gt;, documentation string &lt;var&gt;doc&lt;/var&gt; (if any), interactive spec &lt;var&gt;interactive&lt;/var&gt; (if any), and body forms given by &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">このマクロは、引数リスト &lt;var&gt;args&lt;/var&gt; 、ドキュメント文字列 &lt;var&gt;doc&lt;/var&gt; （存在する場合）、インタラクティブ仕様 &lt;var&gt;interactive&lt;/var&gt; （存在する場合）、およびbodyで指定された &lt;var&gt;body&lt;/var&gt; フォームを持つ無名関数を返します。</target>
        </trans-unit>
        <trans-unit id="26b9ff57a359c8313aaa645fe66cf2eb57e004e7" translate="yes" xml:space="preserve">
          <source>This macro returns non-&lt;code&gt;nil&lt;/code&gt;, when &lt;var&gt;name&lt;/var&gt; is quoted with the prefix &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; が接頭辞 'で引用されている場合、このマクロは非 &lt;code&gt;nil&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="9cd61259063df009ae5712eff83e0b3891fd958e" translate="yes" xml:space="preserve">
          <source>This macro selects &lt;var&gt;window&lt;/var&gt;, executes &lt;var&gt;forms&lt;/var&gt; in sequence, then restores the previously selected window and current buffer. The ordering of recently selected windows and the buffer list remain unchanged unless you deliberately change them within &lt;var&gt;forms&lt;/var&gt;; for example, by calling &lt;code&gt;select-window&lt;/code&gt; with argument &lt;var&gt;norecord&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt;. Hence, this macro is the preferred way to temporarily work with &lt;var&gt;window&lt;/var&gt; as the selected window without needlessly running &lt;code&gt;buffer-list-update-hook&lt;/code&gt;.</source>
          <target state="translated">このマクロは &lt;var&gt;window&lt;/var&gt; を選択し、 &lt;var&gt;forms&lt;/var&gt; を順番に実行してから、以前に選択したウィンドウと現在のバッファを復元します。 &lt;var&gt;forms&lt;/var&gt; 内で意図的に変更しない限り、最近選択したウィンドウとバッファリストの順序は変更されません。例えば、呼び出すことにより、 &lt;code&gt;select-window&lt;/code&gt; 引数と &lt;var&gt;norecord&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 。したがって、このマクロは、 &lt;code&gt;buffer-list-update-hook&lt;/code&gt; を不必要に実行せずに、選択した &lt;var&gt;window&lt;/var&gt; としてウィンドウを一時的に操作するための推奨される方法です。</target>
        </trans-unit>
        <trans-unit id="693f5bba499a97927946aee22ad2ce605cde26d4" translate="yes" xml:space="preserve">
          <source>This macro translates a call of the form</source>
          <target state="translated">このマクロは</target>
        </trans-unit>
        <trans-unit id="afcfd0f6f554ea88595caf452762d1743094941c" translate="yes" xml:space="preserve">
          <source>This macro uses the normal hooks &lt;code&gt;temp-buffer-window-setup-hook&lt;/code&gt; and &lt;code&gt;temp-buffer-window-show-hook&lt;/code&gt; in place of the analogous hooks run by &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt;.</source>
          <target state="translated">このマクロは、 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; によって実行される類似のフックの代わりに、通常のフック &lt;code&gt;temp-buffer-window-setup-hook&lt;/code&gt; および &lt;code&gt;temp-buffer-window-show-hook&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="064759caf85aa25c2df19fde3cf3ab10e1777e01" translate="yes" xml:space="preserve">
          <source>This macro works by setting a timer to run after &lt;var&gt;seconds&lt;/var&gt; seconds. If &lt;var&gt;body&lt;/var&gt; finishes before that time, it cancels the timer. If the timer actually runs, it terminates execution of &lt;var&gt;body&lt;/var&gt;, then executes &lt;var&gt;timeout-forms&lt;/var&gt;.</source>
          <target state="translated">このマクロは、 &lt;var&gt;seconds&lt;/var&gt; 秒後に実行するようにタイマーを設定することによって機能します。場合は &lt;var&gt;body&lt;/var&gt; その時間の前に終了し、それがタイマーをキャンセルします。タイマーが実際に実行されると、 &lt;var&gt;body&lt;/var&gt; の実行が終了し、 &lt;var&gt;timeout-forms&lt;/var&gt; が実行されます。</target>
        </trans-unit>
        <trans-unit id="3892f820e9a17dbaa7cc95cfd9869c0bb731d0ee" translate="yes" xml:space="preserve">
          <source>This makes &lt;var&gt;string&lt;/var&gt; a unibyte string and clears its contents to zeros. It may also change &lt;var&gt;string&lt;/var&gt;&amp;rsquo;s length.</source>
          <target state="translated">これにより、 &lt;var&gt;string&lt;/var&gt; 1バイトの文字列になり、その内容がゼロにクリアされます。 &lt;var&gt;string&lt;/var&gt; の長さも変わる可能性があります。</target>
        </trans-unit>
        <trans-unit id="5e2725b5bd51cadb99ca0430032fd2f4aa193e7c" translate="yes" xml:space="preserve">
          <source>This makes a button from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; in the current buffer, and returns it.</source>
          <target state="translated">これにより、現在のバッファで &lt;var&gt;beg&lt;/var&gt; から &lt;var&gt;end&lt;/var&gt; ボタンが作成され、返されます。</target>
        </trans-unit>
        <trans-unit id="178b6f8f62a6a518fa32a1bdbc0465a4aa9f1180" translate="yes" xml:space="preserve">
          <source>This makes a button from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; in the current buffer, using text properties.</source>
          <target state="translated">これにより、テキストプロパティを使用して、現在のバッファで &lt;var&gt;beg&lt;/var&gt; から &lt;var&gt;end&lt;/var&gt; ボタンが作成されます。</target>
        </trans-unit>
        <trans-unit id="5651846c659c680234340318e7dc35101e13768c" translate="yes" xml:space="preserve">
          <source>This makes a list whose second element is the list itself. Here&amp;rsquo;s how you can see that it really works:</source>
          <target state="translated">これにより、2番目の要素がリスト自体であるリストが作成されます。これが実際に機能することを確認する方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0408162eef9330f20a098ee431f7e3ac39f5d957" translate="yes" xml:space="preserve">
          <source>This makes the symbol &lt;code&gt;module-func&lt;/code&gt; known to Emacs by calling &lt;code&gt;env-&amp;gt;intern&lt;/code&gt;, then invokes &lt;code&gt;defalias&lt;/code&gt; from Emacs to bind the function to that symbol. Note that it is possible to use &lt;code&gt;fset&lt;/code&gt; instead of &lt;code&gt;defalias&lt;/code&gt;; the differences are described in &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;defalias&lt;/a&gt;.</source>
          <target state="translated">これにより、 &lt;code&gt;defalias&lt;/code&gt; &lt;code&gt;env-&amp;gt;intern&lt;/code&gt; 呼び出してシンボル &lt;code&gt;module-func&lt;/code&gt; をEmacsに認識させ、次にEmacsからdefaliasを呼び出して、関数をそのシンボルにバインドします。 &lt;code&gt;fset&lt;/code&gt; 代わりに &lt;code&gt;defalias&lt;/code&gt; を使用できることに注意してください。違いは&lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;defaliasで&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="838829e28dbb8585aa17882aa090c569e767909f" translate="yes" xml:space="preserve">
          <source>This manual has gone through numerous drafts. It is nearly complete but not flawless. There are a few topics that are not covered, either because we consider them secondary (such as most of the individual modes) or because they are yet to be written. Because we are not able to deal with them completely, we have left out several parts intentionally.</source>
          <target state="translated">このマニュアルは何度も下書きをしてきました。ほぼ完成していますが、完璧ではありません。いくつかのトピックについては、私たちがそれを二次的なものと考えているためか、あるいはまだ書かれていないために、カバーされていないものがあります。私たちはそれらを完全に扱うことができないので、意図的にいくつかの部分を省いています。</target>
        </trans-unit>
        <trans-unit id="936a07e8905fb23f7ca42e3e3a559bacae6b739d" translate="yes" xml:space="preserve">
          <source>This manual was originally written by Robert Krawitz, Bil Lewis, Dan LaLiberte, Richard M. Stallman and Chris Welty, the volunteers of the GNU manual group, in an effort extending over several years. Robert J. Chassell helped to review and edit the manual, with the support of the Defense Advanced Research Projects Agency, ARPA Order 6082, arranged by Warren A. Hunt, Jr. of Computational Logic, Inc. Additional sections have since been written by Miles Bader, Lars Brinkhoff, Chong Yidong, Kenichi Handa, Lute Kamstra, Juri Linkov, Glenn Morris, Thien-Thi Nguyen, Dan Nicolaescu, Martin Rudalics, Kim F. Storm, Luc Teirlinck, and Eli Zaretskii, and others.</source>
          <target state="translated">このマニュアルはもともと、Robert Krawitz、Bil Lewis、Dan LaLiberte、Richard M.Stallman、Chris Welty、GNUマニュアルグループの有志によって、数年にわたる努力の末に書かれました。Robert J.Chassellは、国防総省高等研究計画局のARPA命令6082の支援を受け、計算論理社のWarren A.Hunt,Jr.の手配により、マニュアルのレビューと編集を手伝いました。その後、Miles Bader、Lars Brinkhoff、Chong Yidong、半田健一、Lute Kamstra、Juri Linkov、Glenn Morris、Thien-Thi Nguyen、Dan Nicolaescu、Martin Rudalics、Kim F.Storm、Luc Teirlinck、Eli Zaretskiiなどが追加セクションを執筆しています。</target>
        </trans-unit>
        <trans-unit id="0ba70434d315a0d715393f13ea4aaff0d3bf4583" translate="yes" xml:space="preserve">
          <source>This matches &amp;lsquo;</source>
          <target state="translated">これは一致します '</target>
        </trans-unit>
        <trans-unit id="c46f49a56c7bf9f506bb49f94594440cbde72778" translate="yes" xml:space="preserve">
          <source>This matches a lambda list&amp;mdash;the argument list of a lambda expression.</source>
          <target state="translated">これは、ラムダリスト（ラムダ式の引数リスト）と一致します。</target>
        </trans-unit>
        <trans-unit id="52e79e8c6bec8d676fcd7f3a8075520d1530185f" translate="yes" xml:space="preserve">
          <source>This matches any</source>
          <target state="translated">これは任意の</target>
        </trans-unit>
        <trans-unit id="2e852b2f8e5a993e44ad62b3fb9595b6e1163b55" translate="yes" xml:space="preserve">
          <source>This matches any character that has whitespace syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">これは、空白構文を持つすべての文字に一致します（&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;構文クラス表を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="316120a480b1bb306d8dbc88c4f4275dae109009" translate="yes" xml:space="preserve">
          <source>This matches any character that has word syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">これは、単語構文を持つすべての文字に一致します（&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;構文クラス表を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="ca176ae8d8f18411fc057bf55270a1faea9b10fa" translate="yes" xml:space="preserve">
          <source>This matches any character whose code is in the range 0&amp;ndash;31.</source>
          <target state="translated">これは、コードが0〜31の範囲にあるすべての文字に一致します。</target>
        </trans-unit>
        <trans-unit id="3f883f8024251058915976b3937efaf03a1e481e" translate="yes" xml:space="preserve">
          <source>This matches any letter or digit. For multibyte characters, it matches characters whose Unicode &amp;lsquo;</source>
          <target state="translated">これは任意の文字または数字と一致します。マルチバイト文字の場合、Unicode 'の文字と一致します。</target>
        </trans-unit>
        <trans-unit id="1385fab752bcd45ac517e44ad8fbc4c35fb6064c" translate="yes" xml:space="preserve">
          <source>This matches any letter. For multibyte characters, it matches characters whose Unicode &amp;lsquo;</source>
          <target state="translated">これはどの文字にも一致します。マルチバイト文字の場合、Unicode 'の文字と一致します。</target>
        </trans-unit>
        <trans-unit id="14a7a5d964c03d3026f6e2829a00347d764fdf41" translate="yes" xml:space="preserve">
          <source>This matches any lower-case letter, as determined by the current case table (see &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;). If &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this also matches any upper-case letter.</source>
          <target state="translated">これは、任意の小文字と一致し、現在のケーステーブルによって決定されるように（参照&lt;a href=&quot;case-tables#Case-Tables&quot;&gt;ケーステーブル&lt;/a&gt;）。場合 &lt;code&gt;case-fold-search&lt;/code&gt; 非で &lt;code&gt;nil&lt;/code&gt; の、これはまた、任意の大文字と一致します。</target>
        </trans-unit>
        <trans-unit id="c3df37610dad534b18b780c61d1f193b1376f968" translate="yes" xml:space="preserve">
          <source>This matches any multibyte character (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;).</source>
          <target state="translated">これは、任意のマルチバイト文字に一致します（&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;テキスト表現を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="180d6f1f6fc758b03b399a24a591e25561158664" translate="yes" xml:space="preserve">
          <source>This matches any non-</source>
          <target state="translated">これは、任意の非</target>
        </trans-unit>
        <trans-unit id="7ee7c620c06b045fadb810117b84c21104619363" translate="yes" xml:space="preserve">
          <source>This matches any printing character&amp;mdash;either whitespace, or a graphic character matched by &amp;lsquo;</source>
          <target state="translated">これは、空白、または 'と一致するグラフィック文字のいずれかの印刷文字と一致します</target>
        </trans-unit>
        <trans-unit id="6880ce3e7aa6cea71ff5c3336291254d0e10f5c1" translate="yes" xml:space="preserve">
          <source>This matches any punctuation character. (At present, for multibyte characters, it matches anything that has non-word syntax.)</source>
          <target state="translated">これは、任意の句読点文字にマッチします。(現在のところ、マルチバイト文字の場合は、単語以外の構文を持つものにマッチします)。</target>
        </trans-unit>
        <trans-unit id="c10e0e88a037e8963b3f03135b0914b802e5a530" translate="yes" xml:space="preserve">
          <source>This matches any unibyte character (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;).</source>
          <target state="translated">これは、任意のユニバイト文字に一致します（&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;テキスト表現を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="79fea95b9a80da155639878b00fbb1df62448d0d" translate="yes" xml:space="preserve">
          <source>This matches any upper-case letter, as determined by the current case table (see &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;). If &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this also matches any lower-case letter.</source>
          <target state="translated">これは、任意の大文字と一致し、現在のケーステーブルによって決定されるように（参照&lt;a href=&quot;case-tables#Case-Tables&quot;&gt;ケーステーブル&lt;/a&gt;）。場合 &lt;code&gt;case-fold-search&lt;/code&gt; 非で &lt;code&gt;nil&lt;/code&gt; の、これはまた、任意の小文字に一致します。</target>
        </trans-unit>
        <trans-unit id="437945e5b8a6162ae935b450bc0acae72307707b" translate="yes" xml:space="preserve">
          <source>This matches graphic characters&amp;mdash;everything except whitespace,</source>
          <target state="translated">これはグラフィック文字と一致します&amp;mdash;空白以外のすべて、</target>
        </trans-unit>
        <trans-unit id="43814bc77c4368fa9c2f3682191fb2810d888916" translate="yes" xml:space="preserve">
          <source>This matches horizontal whitespace, as defined by Annex C of the Unicode Technical Standard #18. In particular, it matches spaces, tabs, and other characters whose Unicode &amp;lsquo;</source>
          <target state="translated">これは、Unicode Technical Standard＃18のAnnexCで定義されている水平方向の空白と一致します。特に、Unicode 'のスペース、タブ、およびその他の文字に一致します。</target>
        </trans-unit>
        <trans-unit id="3d4d3406a6b16fae009d3964eb81351e9fd3c382" translate="yes" xml:space="preserve">
          <source>This matches the hexadecimal digits: &amp;lsquo;</source>
          <target state="translated">これは16進数と一致します： '</target>
        </trans-unit>
        <trans-unit id="e7f9f6ac537d2eb761590b38000c721a4f3bc69d" translate="yes" xml:space="preserve">
          <source>This matches values such as &lt;code&gt;(baz)&lt;/code&gt;, &lt;code&gt;(baz foo)&lt;/code&gt;, &lt;code&gt;(baz bar)&lt;/code&gt; and &lt;code&gt;(baz foo bar)&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;(baz)&lt;/code&gt; 、 &lt;code&gt;(baz foo)&lt;/code&gt; 、 &lt;code&gt;(baz bar)&lt;/code&gt; 、 &lt;code&gt;(baz foo bar)&lt;/code&gt; などの値と一致します。</target>
        </trans-unit>
        <trans-unit id="c152df7cdf2a432680992178732eee215ebba867" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;display-buffer&lt;/code&gt; makes a new parent window when it splits a window and is passed a &lt;code&gt;window-height&lt;/code&gt; or &lt;code&gt;window-width&lt;/code&gt; entry in the &lt;var&gt;alist&lt;/var&gt; argument (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;). Otherwise, window splitting behaves as for a value of &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;display-buffer&lt;/code&gt; がウィンドウを分割し、 &lt;var&gt;alist&lt;/var&gt; 引数で &lt;code&gt;window-height&lt;/code&gt; または &lt;code&gt;window-width&lt;/code&gt; エントリが渡されると、新しい親ウィンドウを作成することを意味します（&lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;バッファ表示アクション関数を&lt;/a&gt;参照）。それ以外の場合、ウィンドウ分割は &lt;code&gt;nil&lt;/code&gt; の値と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="a39978cf9a358cc964ad492e4a59a24d0e55ba44" translate="yes" xml:space="preserve">
          <source>This means that a frame whose focus is redirected to itself is treated differently from a frame whose focus is not redirected. &lt;code&gt;select-frame&lt;/code&gt; affects the former but not the latter.</source>
          <target state="translated">これは、フォーカスがそれ自体にリダイレクトされるフレームは、フォーカスがリダイレクトされないフレームとは異なる方法で処理されることを意味します。 &lt;code&gt;select-frame&lt;/code&gt; は前者に影響しますが、後者には影響しません。</target>
        </trans-unit>
        <trans-unit id="3f2afd96003a7534243f6ef3a6c70f84953b139c" translate="yes" xml:space="preserve">
          <source>This means that if &lt;var&gt;window&lt;/var&gt; is not deleted, its buffer is moved to the end of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s list of previous buffers, so it&amp;rsquo;s less likely that a future invocation of &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; will switch to it. Also, it moves the buffer to the end of the frame&amp;rsquo;s buffer list.</source>
          <target state="translated">これは、 &lt;var&gt;window&lt;/var&gt; が削除されていない場合、そのバッファが &lt;var&gt;window&lt;/var&gt; の前のバッファのリストの最後に移動されることを意味します。そのため、 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; の将来の呼び出しがそれに切り替わる可能性は低くなります。また、バッファをフレームのバッファリストの最後に移動します。</target>
        </trans-unit>
        <trans-unit id="5b907046048fbd095bef74db32285a45463e5a54" translate="yes" xml:space="preserve">
          <source>This means that if &lt;var&gt;window&lt;/var&gt; is not deleted, its buffer is removed from &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s list of previous buffers. Also, it moves the buffer to the end of the frame&amp;rsquo;s buffer list. This value provides the most reliable remedy to not have &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; switch to this buffer again without killing the buffer.</source>
          <target state="translated">これは、 &lt;var&gt;window&lt;/var&gt; が削除されていない場合、そのバッファが &lt;var&gt;window&lt;/var&gt; の以前のバッファのリストから削除されることを意味します。また、バッファをフレームのバッファリストの最後に移動します。この値は、 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; せずに、このバッファへのスイッチから前のバッファへの切り替えを再度行わないための最も信頼できる救済策を提供します。</target>
        </trans-unit>
        <trans-unit id="d300a849b8bb86290b9bbd4abca8fa07cc020b65" translate="yes" xml:space="preserve">
          <source>This means that in order to move the mouse pointer to the position of point in the selected window, it&amp;rsquo;s sufficient to write:</source>
          <target state="translated">これは、選択したウィンドウ内のポイントの位置にマウスポインタを移動するには、次のように書くだけで十分であることを意味します。</target>
        </trans-unit>
        <trans-unit id="092387ab37ec254568f359f9586d6303660f6148" translate="yes" xml:space="preserve">
          <source>This means that splitting a window always creates a new parent window. Thus, if the value of this variable is at all times &lt;code&gt;t&lt;/code&gt;, then at all times every window tree is a binary tree (a tree where each window except the root window has exactly one sibling).</source>
          <target state="translated">これは、ウィンドウを分割すると常に新しい親ウィンドウが作成されることを意味します。したがって、この変数の値が常に &lt;code&gt;t&lt;/code&gt; である場合、すべてのウィンドウツリーは常にバイナリツリー（ルートウィンドウを除く各ウィンドウに兄弟が1つだけあるツリー）になります。</target>
        </trans-unit>
        <trans-unit id="c45ee702dfaf599f3e1c29e75b01eae3cb365655" translate="yes" xml:space="preserve">
          <source>This means that the basic groups of functions that alter the window structure treat an atomic window like a live one, thus preserving the internal structure of the atomic window.</source>
          <target state="translated">つまり、ウィンドウ構造を変更する関数の基本的なグループは、アトミックウィンドウをライブウィンドウのように扱い、アトミックウィンドウの内部構造を保持します。</target>
        </trans-unit>
        <trans-unit id="1a37188790b9c83fd2de8bfc5e5c0b691a7187b4" translate="yes" xml:space="preserve">
          <source>This means that the new live window is allowed to share the existing parent window, if one exists, provided the split occurs in the same direction as the existing window combination (otherwise, a new internal window is created anyway).</source>
          <target state="translated">これは、分割が既存のウィンドウの組み合わせと同じ方向に行われることを条件に、既存の親ウィンドウが存在する場合には、新しいライブウィンドウを共有することを許可することを意味します(そうでない場合には、新しい内部ウィンドウが作成されます)。</target>
        </trans-unit>
        <trans-unit id="b2203e9c7795f45a3a1af151be5f65dc7be6f190" translate="yes" xml:space="preserve">
          <source>This means that the parameter is saved unconditionally by both &lt;code&gt;current-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-get&lt;/code&gt;. This value should not be used for parameters whose values do not have a read syntax. Otherwise, invoking &lt;code&gt;window-state-put&lt;/code&gt; in another session may fail with an &lt;code&gt;invalid-read-syntax&lt;/code&gt; error.</source>
          <target state="translated">これは、パラメータが &lt;code&gt;current-window-configuration&lt;/code&gt; と &lt;code&gt;window-state-get&lt;/code&gt; の両方によって無条件に保存されることを意味します。この値は、値に読み取り構文がないパラメーターには使用しないでください。そうしないと、別のセッションで &lt;code&gt;window-state-put&lt;/code&gt; を呼び出すと、 &lt;code&gt;invalid-read-syntax&lt;/code&gt; エラーで失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a02cc2f333ea94096516c648dfdf278fc95f2cf0" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) splits a window it always makes a new parent window. Otherwise, window splitting behaves as for &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;display-buffer&lt;/code&gt; （「&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;ウィンドウの選択」を&lt;/a&gt;参照）がウィンドウを分割すると、常に新しい親ウィンドウが作成されることを意味します。それ以外の場合、ウィンドウ分割は &lt;code&gt;nil&lt;/code&gt; と同様に動作します。</target>
        </trans-unit>
        <trans-unit id="09304a977990e2e05b2f4bbfcb9fcfbd14544f18" translate="yes" xml:space="preserve">
          <source>This means that you can make sure that the garbage collector will not run during a certain portion of a Lisp program by calling the garbage collector explicitly just before it (provided that portion of the program does not use so much space as to force a second garbage collection).</source>
          <target state="translated">これは、直前に明示的にガベージコレクタを呼び出すことで、Lisp プログラムの特定の部分でガベージコレクタが実行されないようにすることができることを意味します (プログラムのその部分が 2 番目のガベージコレクションを強制するほど多くのスペースを使用していないことが条件です)。</target>
        </trans-unit>
        <trans-unit id="ac3f7637f4e9e2e46013206eca24ad296b80682f" translate="yes" xml:space="preserve">
          <source>This means that, while &lt;code&gt;input-decode-map&lt;/code&gt; and &lt;code&gt;key-translation-map&lt;/code&gt; apply regardless of whether the original key sequence would have a binding, the presence of such a binding can still prevent translation from taking place. For example, let us return to our VT100 example above and add a binding for</source>
          <target state="translated">つまり、 &lt;code&gt;input-decode-map&lt;/code&gt; と &lt;code&gt;key-translation-map&lt;/code&gt; は、元のキーシーケンスにバインディングがあるかどうかに関係なく適用されますが、そのようなバインディングが存在すると、変換が行われない可能性があります。たとえば、上記のVT100の例に戻り、のバインディングを追加しましょう。</target>
        </trans-unit>
        <trans-unit id="8a16b5c7314a1c5f6279d547d1290a0dad1cba49" translate="yes" xml:space="preserve">
          <source>This means to kill &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer.</source>
          <target state="translated">これは、 &lt;var&gt;window&lt;/var&gt; のバッファを強制終了することを意味します。</target>
        </trans-unit>
        <trans-unit id="996beee1789ab59f84adf4b81fe1a5cafea594ce" translate="yes" xml:space="preserve">
          <source>This means to not deal with the buffer in any particular way. As a consequence, if &lt;var&gt;window&lt;/var&gt; is not deleted, invoking &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; will usually show the buffer again.</source>
          <target state="translated">これは、特定の方法でバッファを処理しないことを意味します。結果として、 &lt;var&gt;window&lt;/var&gt; が削除されていない場合、 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; を呼び出すと、通常、バッファーが再び表示されます。</target>
        </trans-unit>
        <trans-unit id="08d6fdd594fe3e215d317c018bba3b98caca83d6" translate="yes" xml:space="preserve">
          <source>This means to use a font that is &lt;var&gt;n&lt;/var&gt; steps larger. A &lt;em&gt;step&lt;/em&gt; is defined by the set of available fonts&amp;mdash;specifically, those that match what was otherwise specified for this text, in all attributes except height. Each size for which a suitable font is available counts as another step. &lt;var&gt;n&lt;/var&gt; should be an integer.</source>
          <target state="translated">これは、 &lt;var&gt;n&lt;/var&gt; ステップ大きいフォントを使用することを意味します。&lt;em&gt;ステップは、&lt;/em&gt;利用可能なフォント、具体的には、それ以外の場合は高さを除くすべての属性では、このテキストに指定されていたものと一致したもののセットによって定義されます。適切なフォントが利用可能な各サイズは、別のステップとしてカウントされます。 &lt;var&gt;n&lt;/var&gt; は整数である必要があります。</target>
        </trans-unit>
        <trans-unit id="4c5f0dec3d5185fd28e5174bfd57e5414e93d908" translate="yes" xml:space="preserve">
          <source>This means to use a font that is &lt;var&gt;n&lt;/var&gt; steps smaller.</source>
          <target state="translated">これは、 &lt;var&gt;n&lt;/var&gt; ステップ小さいフォントを使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="8e16ea0deda4b9d4b78d5b962617a18009e97536" translate="yes" xml:space="preserve">
          <source>This mechanism works invisibly, and Lisp code should never be affected by the gap&amp;rsquo;s current location, but these functions are available for getting information about the gap status.</source>
          <target state="translated">このメカニズムは目に見えない形で機能し、Lispコードはギャップの現在の場所の影響を受けることはありませんが、これらの関数はギャップのステータスに関する情報を取得するために使用できます。</target>
        </trans-unit>
        <trans-unit id="201defb8c308b9edefca0d7ec6b5172a1aff31d7" translate="yes" xml:space="preserve">
          <source>This method causes &lt;code&gt;temacs&lt;/code&gt; to dump out an executable program, called</source>
          <target state="translated">このメソッドにより、 &lt;code&gt;temacs&lt;/code&gt; は呼び出された実行可能プログラムをダンプします。</target>
        </trans-unit>
        <trans-unit id="c30b8e29d79cd89a73047ae48d6333627d393d98" translate="yes" xml:space="preserve">
          <source>This method has several benefits. First, if the user quits while loading the file, the variable is either still uninitialized or initialized properly, never in-between. If it is still uninitialized, reloading the file will initialize it properly. Second, reloading the file once the variable is initialized will not alter it; that is important if the user has run hooks to alter part of the contents (such as, to rebind keys). Third, evaluating the &lt;code&gt;defvar&lt;/code&gt; form with</source>
          <target state="translated">この方法にはいくつかの利点があります。まず、ユーザーがファイルのロード中に終了した場合、変数はまだ初期化されていないか、適切に初期化されており、その間にはありません。それでも初期化されていない場合は、ファイルをリロードすると正しく初期化されます。次に、変数が初期化された後でファイルをリロードしても、ファイルは変更されません。これは、ユーザーがフックを実行してコンテンツの一部を変更した場合（キーの再バインドなど）に重要です。第三に、 &lt;code&gt;defvar&lt;/code&gt; フォームを</target>
        </trans-unit>
        <trans-unit id="e581c11712cc79e666659ff354300fee9e44599b" translate="yes" xml:space="preserve">
          <source>This minor mode mainly serves as a wrapper for &lt;code&gt;buffer-read-only&lt;/code&gt;; unlike most minor modes, there is no separate &lt;code&gt;read-only-mode&lt;/code&gt; variable. Even when Read Only mode is disabled, characters with non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;read-only&lt;/code&gt; text properties remain read-only. To temporarily ignore all read-only states, bind &lt;code&gt;inhibit-read-only&lt;/code&gt;, as described above.</source>
          <target state="translated">このマイナーモードは、主に &lt;code&gt;buffer-read-only&lt;/code&gt; ラッパーとして機能します。ほとんどのマイナーモードとは異なり、個別の &lt;code&gt;read-only-mode&lt;/code&gt; 変数はありません。読み取り専用モードが無効になっている場合でも、非付き文字 &lt;code&gt;nil&lt;/code&gt; は &lt;code&gt;read-only&lt;/code&gt; テキストプロパティは読み取り専用のまま。すべての読み取り専用状態を一時的に無視するには、上記のように、 &lt;code&gt;inhibit-read-only&lt;/code&gt; をバインドします。</target>
        </trans-unit>
        <trans-unit id="e8faa9a939da70b6b89f73a193ac2b0b0e839517" translate="yes" xml:space="preserve">
          <source>This moves forward one line and continues moving by lines until it reaches an empty line. It is peculiar in that the &lt;code&gt;while&lt;/code&gt; has no body, just the end test (which also does the real work of moving point).</source>
          <target state="translated">これは1行進み、空の行に達するまで行ごとに移動し続けます。 &lt;code&gt;while&lt;/code&gt; にはボディがなく、終了テストだけが行われるという点で独特です（これはポイントの移動の実際の作業も行います）。</target>
        </trans-unit>
        <trans-unit id="e368693096f133bc6b460050bac1789c9cb09435" translate="yes" xml:space="preserve">
          <source>This moves point to the start of &lt;var&gt;node&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt;.</source>
          <target state="translated">これにより、ポイントが &lt;var&gt;ewoc&lt;/var&gt; の &lt;var&gt;node&lt;/var&gt; の先頭に移動します。</target>
        </trans-unit>
        <trans-unit id="f71107569dfacd57223d7d8a484d87ab7260c477" translate="yes" xml:space="preserve">
          <source>This normal hook is run by &lt;code&gt;kill-emacs&lt;/code&gt;, before it kills Emacs.</source>
          <target state="translated">この通常のフックは、Emacsを強制終了する前に、 &lt;code&gt;kill-emacs&lt;/code&gt; によって実行されます。</target>
        </trans-unit>
        <trans-unit id="0baf2d709c443a0bd2878c6da3e14cf0b6c35221" translate="yes" xml:space="preserve">
          <source>This normal hook is run by &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; after displaying the temporary buffer. When the hook runs, the temporary buffer is current, and the window it was displayed in is selected.</source>
          <target state="translated">この通常のフックは、一時バッファーを表示した後、 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; によって実行されます。フックが実行されると、一時バッファーが最新になり、フックが表示されていたウィンドウが選択されます。</target>
        </trans-unit>
        <trans-unit id="c58f69d92308146819276289bdeca727eb29ffe7" translate="yes" xml:space="preserve">
          <source>This normal hook is run by &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; before evaluating &lt;var&gt;body&lt;/var&gt;. When the hook runs, the temporary buffer is current. This hook is normally set up with a function to put the buffer in Help mode.</source>
          <target state="translated">この通常のフックは、 &lt;var&gt;body&lt;/var&gt; を評価 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 前にwith-output-to-temp-bufferによって実行されます。フックが実行されると、一時バッファーは最新になります。このフックは通常、バッファをヘルプモードにする関数で設定されます。</target>
        </trans-unit>
        <trans-unit id="73efc4d58d9742177491042c2f37b4c4f2e11365" translate="yes" xml:space="preserve">
          <source>This normal hook is run by redisplay to update the menu bar contents, before redisplaying the menu bar. You can use it to update menus whose contents should vary. Since this hook is run frequently, we advise you to ensure that the functions it calls do not take much time in the usual case.</source>
          <target state="translated">この通常フックは、メニューバーを再表示する前に、メニューバーの内容を更新するためにredisplayによって実行されます。内容が異なるはずのメニューを更新するために使うことができます。このフックは頻繁に実行されるので、通常の場合は呼び出す関数にあまり時間がかからないようにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="26a7490816dcb1bd9b7d01397918b75b12401532" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the default &lt;code&gt;revert-buffer-function&lt;/code&gt; after inserting the modified contents. A custom &lt;code&gt;revert-buffer-function&lt;/code&gt; may or may not run this hook.</source>
          <target state="translated">この通常のフックは、変更されたコンテンツを挿入した後、デフォルトの &lt;code&gt;revert-buffer-function&lt;/code&gt; によって実行されます。カスタムの &lt;code&gt;revert-buffer-function&lt;/code&gt; は、このフックを実行する場合と実行しない場合があります。</target>
        </trans-unit>
        <trans-unit id="9fabcf4d3195170ffc3de0cdddbda38a1b760045" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the default &lt;code&gt;revert-buffer-function&lt;/code&gt; before inserting the modified contents. A custom &lt;code&gt;revert-buffer-function&lt;/code&gt; may or may not run this hook.</source>
          <target state="translated">この通常のフックは、変更されたコンテンツを挿入する前に、デフォルトの &lt;code&gt;revert-buffer-function&lt;/code&gt; によって実行されます。カスタムの &lt;code&gt;revert-buffer-function&lt;/code&gt; は、このフックを実行する場合と実行しない場合があります。</target>
        </trans-unit>
        <trans-unit id="3db8aa6bc4943b6665387d18c5b883d2efed1404" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the editor command loop after it executes each command (including commands terminated prematurely by quitting or by errors). At that time, &lt;code&gt;this-command&lt;/code&gt; refers to the command that just ran, and &lt;code&gt;last-command&lt;/code&gt; refers to the command before that.</source>
          <target state="translated">この通常のフックは、各コマンド（終了またはエラーによって途中で終了したコマンドを含む）を実行した後、エディターコマンドループによって実行されます。そのとき、 &lt;code&gt;this-command&lt;/code&gt; は実行したばかりの &lt;code&gt;last-command&lt;/code&gt; 指し、last-commandはその前のコマンドを指します。</target>
        </trans-unit>
        <trans-unit id="b7503df730af207114347e84693a81974cf2339e" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the editor command loop before it executes each command. At that time, &lt;code&gt;this-command&lt;/code&gt; contains the command that is about to run, and &lt;code&gt;last-command&lt;/code&gt; describes the previous command. See &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;.</source>
          <target state="translated">この通常のフックは、各コマンドを実行する前にエディターコマンドループによって実行されます。そのとき、 &lt;code&gt;this-command&lt;/code&gt; には実行しようとしているコマンドが含まれ、 &lt;code&gt;last-command&lt;/code&gt; には前のコマンドが記述されています。&lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;コマンドループ情報を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a9ae2b0c68f9fc2606cdf633f67755c853f95b0c" translate="yes" xml:space="preserve">
          <source>This normal hook is run prior to reverting a Tabulated List buffer. A derived mode can add a function to this hook to recompute &lt;code&gt;tabulated-list-entries&lt;/code&gt;.</source>
          <target state="translated">この通常のフックは、表形式リストのバッファーを元に戻す前に実行されます。派生モードでは、このフックに関数を追加して、 &lt;code&gt;tabulated-list-entries&lt;/code&gt; を再計算できます。</target>
        </trans-unit>
        <trans-unit id="75bf909bef25e666a4076c50b2d0595881bdfecd" translate="yes" xml:space="preserve">
          <source>This normal hook is run when a keyboard macro terminates, regardless of what caused it to terminate (reaching the macro end or an error which ended the macro prematurely).</source>
          <target state="translated">この通常のフックは、キーボードマクロが終了したときに、終了原因(マクロの終了に到達した、またはマクロが早々に終了したエラー)に関わらず実行されます。</target>
        </trans-unit>
        <trans-unit id="b110726c237d2745ddc2a7c6988fbcf1289c469c" translate="yes" xml:space="preserve">
          <source>This normal hook is run whenever an auto-save is about to happen.</source>
          <target state="translated">この通常のフックは、自動保存が行われようとしているときに実行されます。</target>
        </trans-unit>
        <trans-unit id="7cd1f9c30f5785cc4189b3e73fba5bc203487c6c" translate="yes" xml:space="preserve">
          <source>This normal hook is run whenever the echo area is cleared&amp;mdash;either by &lt;code&gt;(message nil)&lt;/code&gt; or for any other reason.</source>
          <target state="translated">この通常のフックは、 &lt;code&gt;(message nil)&lt;/code&gt; またはその他の理由でエコー領域がクリアされるたびに実行されます。</target>
        </trans-unit>
        <trans-unit id="753a4beb363049d4d513ba83bd3eb542cce1981b" translate="yes" xml:space="preserve">
          <source>This normal hook is run, once, just after handling the command line arguments. In batch mode, Emacs does not run this hook.</source>
          <target state="translated">この通常のフックは、コマンドライン引数を処理した直後に一度だけ実行されます。バッチモードでは、Emacsはこのフックを実行しません。</target>
        </trans-unit>
        <trans-unit id="f4cc994b7c49e616c9e0a1d1fd9e6a0930276d7a" translate="yes" xml:space="preserve">
          <source>This normal hook is run, once, just after loading all the init files (</source>
          <target state="translated">この通常のフックは、すべての init ファイル (</target>
        </trans-unit>
        <trans-unit id="c6ae3813d360f8d587d430f4af6518d7db096b6f" translate="yes" xml:space="preserve">
          <source>This normal hook is run, once, just before loading all the init files (</source>
          <target state="translated">この通常のフックは、すべての init ファイルを読み込む直前に一度だけ実行されます (</target>
        </trans-unit>
        <trans-unit id="d59da32b6a9dcbf1c10d142ee024736429ffe715" translate="yes" xml:space="preserve">
          <source>This normal hook is very similar to &lt;code&gt;emacs-startup-hook&lt;/code&gt;. The only difference is that it runs slightly later, after setting of the frame parameters. See &lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;window-setup-hook&lt;/a&gt;.</source>
          <target state="translated">この通常のフックは &lt;code&gt;emacs-startup-hook&lt;/code&gt; hookと非常によく似ています。唯一の違いは、フレームパラメータの設定後、少し遅れて実行されることです。&lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;window-setup-hookを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="36a8c991ce775c04d048c66fed1cda172bbf6546" translate="yes" xml:space="preserve">
          <source>This normal hook runs after a buffer has been saved in its visited file.</source>
          <target state="translated">この通常のフックは、訪問したファイルにバッファが保存された後に実行されます。</target>
        </trans-unit>
        <trans-unit id="9d8b4e8365aebd12ddafe74eb3fdaad8c5f9d1b0" translate="yes" xml:space="preserve">
          <source>This normal hook runs before a buffer is saved in its visited file, regardless of whether that is done normally or by one of the hooks described above. For instance, the</source>
          <target state="translated">この通常のフックは、バッファが訪問したファイルに保存される前に実行されます。例えば</target>
        </trans-unit>
        <trans-unit id="51a181a3ec9bee7a303e436d073e58bbf25c3260" translate="yes" xml:space="preserve">
          <source>This obsolete variable is a wrapper hook, whose members should be functions that accept four arguments: &lt;var&gt;fun&lt;/var&gt;, &lt;var&gt;start&lt;/var&gt;, &lt;var&gt;end&lt;/var&gt;, and &lt;var&gt;delete&lt;/var&gt;. &lt;var&gt;fun&lt;/var&gt; is a function that takes three arguments (&lt;var&gt;start&lt;/var&gt;, &lt;var&gt;end&lt;/var&gt;, and &lt;var&gt;delete&lt;/var&gt;), and returns a string. In both cases, the &lt;var&gt;start&lt;/var&gt;, &lt;var&gt;end&lt;/var&gt;, and &lt;var&gt;delete&lt;/var&gt; arguments are the same as those of &lt;code&gt;filter-buffer-substring&lt;/code&gt;.</source>
          <target state="translated">この廃止された変数はラッパーフックであり、そのメンバーは、 &lt;var&gt;fun&lt;/var&gt; 、 &lt;var&gt;start&lt;/var&gt; 、 &lt;var&gt;end&lt;/var&gt; 、および &lt;var&gt;delete&lt;/var&gt; の4つの引数を受け入れる関数である必要があります。 &lt;var&gt;fun&lt;/var&gt; は、3つの引数（ &lt;var&gt;start&lt;/var&gt; 、 &lt;var&gt;end&lt;/var&gt; 、 &lt;var&gt;delete&lt;/var&gt; ）を取り、文字列を返す関数です。どちらの場合も、 &lt;var&gt;start&lt;/var&gt; 、 &lt;var&gt;end&lt;/var&gt; 、および &lt;var&gt;delete&lt;/var&gt; 引数は、 &lt;code&gt;filter-buffer-substring&lt;/code&gt; の引数と同じです。</target>
        </trans-unit>
        <trans-unit id="dead3931c339dc6fa12fd52dd9c6c2de9e54205c" translate="yes" xml:space="preserve">
          <source>This once was the usual way to copy a list, before the function &lt;code&gt;copy-sequence&lt;/code&gt; was invented. See &lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;Sequences Arrays Vectors&lt;/a&gt;.</source>
          <target state="translated">これは、関数 &lt;code&gt;copy-sequence&lt;/code&gt; が発明される前は、リストをコピーする通常の方法でした。&lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;シーケンス配列ベクトルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7ce3d6db3e78067603018173c2dffb158427b0a1" translate="yes" xml:space="preserve">
          <source>This option affects all scroll commands that have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;scroll-command&lt;/code&gt; symbol property.</source>
          <target state="translated">このオプションは、 &lt;code&gt;nil&lt;/code&gt; 以外の &lt;code&gt;scroll-command&lt;/code&gt; シンボルプロパティを持つすべてのスクロールコマンドに影響します。</target>
        </trans-unit>
        <trans-unit id="bf5c5fa9ccfcc09a86ef723f4dcb8912650960d3" translate="yes" xml:space="preserve">
          <source>This option can be used to specify margins around frames to be fit by &lt;code&gt;fit-frame-to-buffer&lt;/code&gt;. Such margins can be useful to avoid, for example, that the resized frame overlaps the taskbar or parts of its parent frame.</source>
          <target state="translated">このオプションを使用して、 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; でフィットするフレームの周囲のマージンを指定できます。このようなマージンは、たとえば、サイズ変更されたフレームがタスクバーまたはその親フレームの一部と重なることを回避するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="d76f5ca2631dbc037c76c48a63e6140c6d86529c" translate="yes" xml:space="preserve">
          <source>This option does not affect non-interactive calls of &lt;code&gt;switch-to-buffer&lt;/code&gt;.</source>
          <target state="translated">このオプションは、 &lt;code&gt;switch-to-buffer&lt;/code&gt; の非対話型呼び出しには影響しません。</target>
        </trans-unit>
        <trans-unit id="16d83acf464974bb4f070de60579326fe9ad6d12" translate="yes" xml:space="preserve">
          <source>This option informs Emacs whether and how the window manager transfers focus when you move the mouse pointer into a frame. It can have three meaningful values:</source>
          <target state="translated">このオプションは、マウスポインタをフレーム内に移動させたときに、ウィンドウマネージャがフォーカスを転送するかどうか、どのように転送するかを Emacs に通知します。このオプションには3つの意味のある値を指定することができます。</target>
        </trans-unit>
        <trans-unit id="b173cc7d82799b8c4c9c7af5fa5f4a535f336fae" translate="yes" xml:space="preserve">
          <source>This option is mainly intended for debugging. Garbage collection is inhibited while the question is asked, which means that Emacs might leak memory if the user waits too long before answering the question.</source>
          <target state="translated">このオプションは主にデバッグ用です。質問されている間はゴミの収集が禁止されます。つまり、質問に答える前にユーザがあまりにも長い間待っていると Emacs がメモリをリークする可能性があります。</target>
        </trans-unit>
        <trans-unit id="0037da3a90bd2feee25788d0d4e95600fb5ae1ce" translate="yes" xml:space="preserve">
          <source>This option is provided for backward compatibility only. Note, that when &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; calls the function specified by &lt;code&gt;pop-up-frame-function&lt;/code&gt;, it prepends the value of all &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; action alist entries to &lt;code&gt;pop-up-frame-alist&lt;/code&gt; so that the values specified by the action alist entry effectively override any corresponding values of &lt;code&gt;pop-up-frame-alist&lt;/code&gt;.</source>
          <target state="translated">このオプションは、下位互換性のためにのみ提供されています。 &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; が &lt;code&gt;pop-up-frame-function&lt;/code&gt; で指定された関数を呼び出すと、すべての &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; アクションリストエントリの値が &lt;code&gt;pop-up-frame-alist&lt;/code&gt; に追加されることに注意してください。そのため、action alistエントリで指定された値は、 &lt;code&gt;pop-up-frame-alist&lt;/code&gt; の対応する値を効果的にオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="9e379278631b4765a5fd528ea637b79bdf3155f7" translate="yes" xml:space="preserve">
          <source>This option is used in &lt;code&gt;mode-line-position&lt;/code&gt;. Its value specifies both the buffer percentage to display (one of &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;&quot;%o&quot;&lt;/code&gt;, &lt;code&gt;&quot;%p&quot;&lt;/code&gt;, &lt;code&gt;&quot;%P&quot;&lt;/code&gt; or &lt;code&gt;&quot;%q&quot;&lt;/code&gt;, see &lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;%-Constructs&lt;/a&gt;) and a width to space-fill or truncate to. You are recommended to set this option with the &lt;code&gt;customize-variable&lt;/code&gt; facility.</source>
          <target state="translated">このオプションは、 &lt;code&gt;mode-line-position&lt;/code&gt; で使用されます。その値は、表示するバッファーのパーセンテージ（ &lt;code&gt;nil&lt;/code&gt; 、 &lt;code&gt;&quot;%o&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;%p&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;%P&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;%q&quot;&lt;/code&gt; のいずれか。％ - &lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;Constructsを&lt;/a&gt;参照）と、スペースを埋めるまたは切り捨てる幅の両方を指定します。このオプションは、 &lt;code&gt;customize-variable&lt;/code&gt; 機能を使用して設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a8358b294367da2180f0277c0a18cd993a73cfe6" translate="yes" xml:space="preserve">
          <source>This option is useful on platforms that have problems with curved quotes. You can customize it freely according to your personal preference.</source>
          <target state="translated">このオプションは、湾曲した引用符に問題があるプラットフォームで便利です。個人の好みに合わせて自由にカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="a411ded73feeaae0425ccb08272069ef03900c86" translate="yes" xml:space="preserve">
          <source>This option lets you customize indentation on a per-mode basis. It is an alist with elements of the form &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;rules&lt;/var&gt;)&lt;/code&gt;. For the precise form of rules, see the variable&amp;rsquo;s documentation; but you may find it easier to use the command &lt;code&gt;smie-config-guess&lt;/code&gt;.</source>
          <target state="translated">このオプションを使用すると、モードごとにインデントをカスタマイズできます。これは、形式 &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;rules&lt;/var&gt;)&lt;/code&gt; 要素を持つリストです。ルールの正確な形式については、変数のドキュメントを参照してください。ただし、コマンド &lt;code&gt;smie-config-guess&lt;/code&gt; を使用する方が簡単な場合があります。</target>
        </trans-unit>
        <trans-unit id="6e7a38f77aeea47ef5d040cf78350591308ca5be" translate="yes" xml:space="preserve">
          <source>This option provides a maximum height for resizing minibuffer windows automatically. A floating-point number specifies a fraction of the frame&amp;rsquo;s height; an integer specifies the maximum number of lines. The default value is 0.25.</source>
          <target state="translated">このオプションは、ミニバッファウィンドウのサイズを自動的に変更するための最大の高さを提供します。浮動小数点数は、フレームの高さの一部を指定します。整数は最大行数を指定します。デフォルト値は0.25です。</target>
        </trans-unit>
        <trans-unit id="8fe1a9afc8a03d9ff94fcb0299265cb0a1c2f9ee" translate="yes" xml:space="preserve">
          <source>This option specifies how &lt;code&gt;backward-delete-char-untabify&lt;/code&gt; should deal with whitespace. Possible values include &lt;code&gt;untabify&lt;/code&gt;, the default, meaning convert a tab to many spaces and delete one; &lt;code&gt;hungry&lt;/code&gt;, meaning delete all tabs and spaces before point with one command; &lt;code&gt;all&lt;/code&gt; meaning delete all tabs, spaces and newlines before point, and &lt;code&gt;nil&lt;/code&gt;, meaning do nothing special for whitespace characters.</source>
          <target state="translated">このオプションは、 &lt;code&gt;backward-delete-char-untabify&lt;/code&gt; が空白を処理する方法を指定します。可能な値には、デフォルトの &lt;code&gt;untabify&lt;/code&gt; が含まれます。これは、タブを多くのスペースに変換して1つ削除することを意味します。 &lt;code&gt;hungry&lt;/code&gt; 、つまり1つのコマンドでポイントする前のすべてのタブとスペースを削除します。 &lt;code&gt;all&lt;/code&gt; 意味は、ポイントの前のすべてのタブ、スペース、および改行を削除し、 &lt;code&gt;nil&lt;/code&gt; は、空白文字に対して特別なことを何もしないことを意味します。</target>
        </trans-unit>
        <trans-unit id="7d48f2ba33a1fc5f4d6084da918c77858dbe03e4" translate="yes" xml:space="preserve">
          <source>This option specifies how many seconds to wait between execution steps in trace mode or continue mode. The default is 1 second.</source>
          <target state="translated">このオプションは、トレースモードまたはコンティニューモードでの実行ステップ間の待ち時間を何秒にするかを指定します。デフォルトは1秒です。</target>
        </trans-unit>
        <trans-unit id="ef38927aca8e6621415e3f21404c9dfd6e465910" translate="yes" xml:space="preserve">
          <source>This option specifies size boundaries for &lt;code&gt;fit-frame-to-buffer&lt;/code&gt;. It specifies the total maximum and minimum lines and maximum and minimum columns of the root window of any frame that shall be fit to its buffer. If any of these values is non-&lt;code&gt;nil&lt;/code&gt;, it overrides the corresponding argument of &lt;code&gt;fit-frame-to-buffer&lt;/code&gt;.</source>
          <target state="translated">このオプションは、 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; のサイズ境界を指定します。バッファに収まるフレームのルートウィンドウの最大行と最小行の合計と最大列と最小列を指定します。これらの値のいずれかが &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; の対応する引数をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="0a398ebe6b398d579cfefbf13eeb12898c5de010" translate="yes" xml:space="preserve">
          <source>This option specifies the maximum height (in lines) of a window displaying a temporary buffer when &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; is enabled. It can also be a function to be called to choose the height for such a buffer. It gets one argument, the buffer, and should return a positive integer. At the time the function is called, the window to be resized is selected.</source>
          <target state="translated">このオプションは、 &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; が有効になっているときに一時バッファーを表示するウィンドウの最大高さ（行単位）を指定します。このようなバッファの高さを選択するために呼び出す関数にすることもできます。1つの引数であるバッファを取得し、正の整数を返す必要があります。関数が呼び出されると、サイズを変更するウィンドウが選択されます。</target>
        </trans-unit>
        <trans-unit id="2689c8ebebdcc3bf380aa454d50991f1cae09ef3" translate="yes" xml:space="preserve">
          <source>This option specifies the maximum number of side windows on each side of a frame. The value is a list of four elements specifying the number of side window slots on (in this order) the left, top, right and bottom of each frame. If an element is a number, it means to display at most that many windows on the corresponding side. If an element is &lt;code&gt;nil&lt;/code&gt;, it means there&amp;rsquo;s no bound on the number of slots on that side.</source>
          <target state="translated">このオプションは、フレームの両側にあるサイドウィンドウの最大数を指定します。値は、各フレームの左、上、右、下のサイドウィンドウスロットの数を（この順序で）指定する4つの要素のリストです。要素が数字の場合、対応する側に最大でその数のウィンドウを表示することを意味します。要素が &lt;code&gt;nil&lt;/code&gt; の場合、その側のスロット数に制限がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="518a1b8715e666885718e10e9bbb38bd757f5335" translate="yes" xml:space="preserve">
          <source>This option specifies the maximum width of a window (in columns) displaying a temporary buffer when &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; is enabled. It can also be a function to be called to choose the width for such a buffer. It gets one argument, the buffer, and should return a positive integer. At the time the function is called, the window to be resized is selected.</source>
          <target state="translated">このオプションは、 &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; が有効になっている場合に一時バッファーを表示するウィンドウの最大幅（列単位）を指定します。このようなバッファの幅を選択するために呼び出す関数にすることもできます。1つの引数であるバッファを取得し、正の整数を返す必要があります。関数が呼び出されると、サイズを変更するウィンドウが選択されます。</target>
        </trans-unit>
        <trans-unit id="b0fc46dfe9e419b3d58f1af045c2293b20891851" translate="yes" xml:space="preserve">
          <source>This option specifies the minimum total height, in lines, of any window. Its value has to accommodate at least one text line as well as a mode and header line, a horizontal scroll bar and a bottom divider, if present.</source>
          <target state="translated">このオプションは、ウィンドウの総高さの最小値を行単位で指定します。この値は、少なくとも 1 行のテキスト行と、モード行、ヘッダ行、水平スクロールバー、下の仕切りがある場合はそれに対応していなければならない。</target>
        </trans-unit>
        <trans-unit id="d79bb3e94cfb84949f915995f8f6099465cdf86e" translate="yes" xml:space="preserve">
          <source>This option specifies the minimum total width, in columns, of any window. Its value has to accommodate two text columns as well as margins, fringes, a scroll bar and a right divider, if present.</source>
          <target state="translated">このオプシ ョ ンは、 ウ ィ ン ド ウの全幅の最小値を、 列単位で指定 し ます。この値は、2つのテキスト列のほか、余白、フリンジ、スクロールバー、右の仕切りがある場合はそれに対応しなければなりません。</target>
        </trans-unit>
        <trans-unit id="7faa7f8ecf58b148dd60015874e826d645801901" translate="yes" xml:space="preserve">
          <source>This option specifies the size of the scroll margin&amp;mdash;a minimum number of lines between point and the top or bottom of a window. Whenever point gets within this many lines of the top or bottom of the window, redisplay scrolls the text automatically (if possible) to move point out of the margin, closer to the center of the window.</source>
          <target state="translated">このオプションは、スクロールマージンのサイズ（ポイントとウィンドウの上部または下部の間の最小行数）を指定します。ポイントがウィンドウの上部または下部のこの多くの行内に入ると、再表示によってテキストが自動的にスクロールされ（可能な場合）、ポイントがマージンからウィンドウの中心に近づくように移動します。</target>
        </trans-unit>
        <trans-unit id="fcfa0eafad34f75a4200b32331fbb07597c951b8" translate="yes" xml:space="preserve">
          <source>This option specifies whether minibuffer windows are resized automatically. The default value is &lt;code&gt;grow-only&lt;/code&gt;, which means that a minibuffer window by default expands automatically to accommodate the text it displays and shrinks back to one line as soon as the minibuffer gets empty. If the value is &lt;code&gt;t&lt;/code&gt;, Emacs will always try to fit the height of a minibuffer window to the text it displays (with a minimum of one line). If the value is &lt;code&gt;nil&lt;/code&gt;, a minibuffer window never changes size automatically. In that case the window resizing commands (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;) can be used to adjust its height.</source>
          <target state="translated">このオプションは、ミニバッファウィンドウのサイズを自動的に変更するかどうかを指定します。デフォルト値は &lt;code&gt;grow-only&lt;/code&gt; です。これは、ミニバッファーウィンドウがデフォルトで自動的に拡大して表示されるテキストに対応し、ミニバッファーが空になるとすぐに1行に縮小することを意味します。値が &lt;code&gt;t&lt;/code&gt; の場合、Emacsは常にミニバッファーウィンドウの高さを表示するテキストに合わせようとします（最低1行）。値が &lt;code&gt;nil&lt;/code&gt; の場合、ミニバッファーウィンドウのサイズが自動的に変更されることはありません。その場合、ウィンドウサイズの変更コマンドが（参照&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;ウィンドウのサイズ変更を&lt;/a&gt;）その高さを調整するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="ab21c497415b9203a78b72235917a548ee8789a1" translate="yes" xml:space="preserve">
          <source>This option specifies whether top/bottom side windows should appear in reverse order. When this is &lt;code&gt;nil&lt;/code&gt;, side windows on the top and bottom of a frame are always drawn from left to right with increasing slot values. When this is &lt;code&gt;t&lt;/code&gt;, the drawing order is reversed and side windows on the top and bottom of a frame are drawn from right to left with increasing slot values.</source>
          <target state="translated">このオプションは、上部/下部のサイドウィンドウを逆の順序で表示するかどうかを指定します。これが &lt;code&gt;nil&lt;/code&gt; 場合、フレームの上部と下部のサイドウィンドウは、スロット値の増加に伴って常に左から右に描画されます。これが &lt;code&gt;t&lt;/code&gt; の場合、描画順序が逆になり、フレームの上部と下部のサイドウィンドウが、スロット値の増加に伴って右から左に描画されます。</target>
        </trans-unit>
        <trans-unit id="7e243199acfe508d45a5f7708f9306930cfd4f7e" translate="yes" xml:space="preserve">
          <source>This option tells Emacs how to proceed when it is asked to iconify a child frame. If it is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;iconify-frame&lt;/code&gt; will do nothing when invoked on a child frame. If it is &lt;code&gt;iconify-top-level&lt;/code&gt;, Emacs will try to iconify the top-level frame that is the ancestor of this child frame instead. If it is &lt;code&gt;make-invisible&lt;/code&gt;, Emacs will try to make this child frame invisible instead of iconifying it.</source>
          <target state="translated">このオプションは、子フレームをアイコン化するように求められたときに続行する方法をEmacsに指示します。 &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;iconify-frame&lt;/code&gt; は子フレームで呼び出されても何もしません。それがある場合は &lt;code&gt;iconify-top-level&lt;/code&gt; 、Emacsは代わりにこの子フレームの祖先であるトップレベルのフレームをアイコン化しようとします。 &lt;code&gt;make-invisible&lt;/code&gt; の場合、Emacsはこの子フレームをアイコン化する代わりに非表示にしようとします。</target>
        </trans-unit>
        <trans-unit id="b91fe0561bb18f03cb7dd3350041b29023cfad30" translate="yes" xml:space="preserve">
          <source>This option, if non-&lt;code&gt;nil&lt;/code&gt;, allows &lt;code&gt;switch-to-buffer&lt;/code&gt; to proceed when called interactively and the selected window is strongly dedicated to its buffer.</source>
          <target state="translated">このオプションが &lt;code&gt;nil&lt;/code&gt; でない場合、インタラクティブに呼び出されたときに &lt;code&gt;switch-to-buffer&lt;/code&gt; への切り替えを続行でき、選択したウィンドウはそのバッファ専用になります。</target>
        </trans-unit>
        <trans-unit id="9e973d14ccef7d3d65e0649b81a644dd1137cce9" translate="yes" xml:space="preserve">
          <source>This optional keyword specifies a single Lisp form to evaluate as the final act of the mode function, after the mode hooks have been run. It should not be quoted. Since the form might be evaluated after the mode function has terminated, it should not access any element of the mode function&amp;rsquo;s local state. An &lt;code&gt;:after-hook&lt;/code&gt; form is useful for setting up aspects of the mode which depend on the user&amp;rsquo;s settings, which in turn may have been changed in a mode hook.</source>
          <target state="translated">このオプションのキーワードは、モードフックが実行された後、モード関数の最後の動作として評価する単一のLispフォームを指定します。引用しないでください。フォームはモード関数の終了後に評価される可能性があるため、モード関数のローカル状態の要素にアクセスしないでください。 &lt;code&gt;:after-hook&lt;/code&gt; の形は、順番にモードフックに変更されている可能性があり、ユーザーの設定、依存モードの側面を設定する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="616387e9652c464e7d0287d8be1c9709ca9a1767" translate="yes" xml:space="preserve">
          <source>This overwrites the default &lt;var&gt;base-spec&lt;/var&gt;, which inherits the global face definition, so it is up to the caller to add such inheritance if so desired.</source>
          <target state="translated">これにより、グローバルフェース定義を継承するデフォルトの &lt;var&gt;base-spec&lt;/var&gt; が上書きされるため、必要に応じてそのような継承を追加するのは呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="2c4dc62a8a3a43e3e0eaef58b3528a6e18f739da" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;delete-other-windows&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</source>
          <target state="translated">このパラメーターは、 &lt;code&gt;delete-other-windows&lt;/code&gt; の実行に影響します（&lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Windowsの削除を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="2a4efd9541357acbf3c43c226c8f3987d945364d" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;delete-window&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</source>
          <target state="translated">このパラメーターは、 &lt;code&gt;delete-window&lt;/code&gt; の実行に影響します（&lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Windowsの削除を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="bd8f7ec30406c313972f18b1d09bf9a9f9d54784" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;other-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</source>
          <target state="translated">このパラメーターは、 &lt;code&gt;other-window&lt;/code&gt; の実行に影響します（&lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Orderingを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="cc6801035b43919034dd11c0e815cccb70b6fbd1" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;split-window&lt;/code&gt; (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;).</source>
          <target state="translated">このパラメータは、の実行に影響 &lt;code&gt;split-window&lt;/code&gt; （参照&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;ウィンドウの分割&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="88ade6028e119b8df99d838f95f477147afc2c5a" translate="yes" xml:space="preserve">
          <source>This parameter allows to override the value of the option &lt;code&gt;fit-frame-to-buffer-margins&lt;/code&gt; when fitting this frame to the buffer of its root window with &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</source>
          <target state="translated">このパラメーターを使用すると、このフレームをルートウィンドウのバッファーに &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; でフィットするときに、オプション &lt;code&gt;fit-frame-to-buffer-margins&lt;/code&gt; の値をオーバーライドできます（ウィンドウの&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;サイズ変更を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c4bd7fce2467e11911b0874c7b90e56b035cf6fb" translate="yes" xml:space="preserve">
          <source>This parameter allows to override the value of the option &lt;code&gt;fit-frame-to-buffer-sizes&lt;/code&gt; when fitting this frame to the buffer of its root window with &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</source>
          <target state="translated">このパラメーターを使用すると、このフレームをルートウィンドウのバッファーに &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; でフィットするときに、オプション &lt;code&gt;fit-frame-to-buffer-sizes&lt;/code&gt; の値をオーバーライドできます（ウィンドウの&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;サイズ変更を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c21c193bfbb68b93b62637ef90d1f2d20f1c2550" translate="yes" xml:space="preserve">
          <source>This parameter describes the range of possible colors that can be used in this frame. Its value is &lt;code&gt;color&lt;/code&gt;, &lt;code&gt;grayscale&lt;/code&gt; or &lt;code&gt;mono&lt;/code&gt;.</source>
          <target state="translated">このパラメータは、このフレームで使用できる色の範囲を示します。その値は、 &lt;code&gt;color&lt;/code&gt; 、 &lt;code&gt;grayscale&lt;/code&gt; または &lt;code&gt;mono&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="97b1d210e1cd42fdd941ba1e33e2869d415ab72e" translate="yes" xml:space="preserve">
          <source>This parameter is currently meaningful for child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) only. If it is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs will try to keep the frame&amp;rsquo;s size (width and height) ratios (see &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;) as well as its left and right position ratios (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;) unaltered whenever its parent frame is resized.</source>
          <target state="translated">このパラメータは、（参照子フレームのため、現在意味のある&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子フレームの&lt;/a&gt;場合のみ）。それが非であれば &lt;code&gt;nil&lt;/code&gt; の場合、Emacsは、フレームのサイズ（幅と高さ）の比率（参照維持しようとする&lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;サイズ・パラメータを&lt;/a&gt;（参照）だけでなく、その左右の位置比率を&lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;位置パラメータを&lt;/a&gt;、親フレームのサイズが変更されるたびに変更されていません）。</target>
        </trans-unit>
        <trans-unit id="04ba41bff9a2d8316aa977a084c6c8d4d506d306" translate="yes" xml:space="preserve">
          <source>This parameter is either &lt;code&gt;dark&lt;/code&gt; or &lt;code&gt;light&lt;/code&gt;, according to whether the background color is a light one or a dark one.</source>
          <target state="translated">このパラメータは、背景色が明るい色か &lt;code&gt;dark&lt;/code&gt; 色かに応じて、暗い色または &lt;code&gt;light&lt;/code&gt; 色のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="bd1a2b12c68b609de177b3c151a1def942c648d9" translate="yes" xml:space="preserve">
          <source>This parameter is installed by the buffer display functions (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) and consulted by &lt;code&gt;quit-restore-window&lt;/code&gt; (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;). It is a list of four elements, see the description of &lt;code&gt;quit-restore-window&lt;/code&gt; in &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt; for details.</source>
          <target state="translated">このパラメーターは、バッファー表示関数（「&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;ウィンドウの選択」を&lt;/a&gt;参照）によってインストールされ、 &lt;code&gt;quit-restore-window&lt;/code&gt; （「ウィンドウの&lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;終了&lt;/a&gt;」を参照）によって参照されます。これは、4つの要素のリストである、の説明を参照 &lt;code&gt;quit-restore-window&lt;/code&gt; で&lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;辞職Windowsの&lt;/a&gt;詳細については、を。</target>
        </trans-unit>
        <trans-unit id="485f27bfbde0345cca6052e79624581796703498" translate="yes" xml:space="preserve">
          <source>This parameter is used internally for implementing atomic windows, see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;.</source>
          <target state="translated">このパラメータは、アトミックウィンドウを実装するために内部的に使用され&lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;ます&lt;/a&gt;。アトミックウィンドウを参照してください。</target>
        </trans-unit>
        <trans-unit id="5407f7bc49e45028fc2c8784f40634d0185010ae" translate="yes" xml:space="preserve">
          <source>This parameter marks the window as not deletable by &lt;code&gt;delete-other-windows&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</source>
          <target state="translated">このパラメーターは、ウィンドウを &lt;code&gt;delete-other-windows&lt;/code&gt; で削除できないものとしてマークします（ウィンドウの&lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;削除を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c388a7c37f8c092efed8313ef334c889b57c063c" translate="yes" xml:space="preserve">
          <source>This parameter marks the window as not selectable by &lt;code&gt;other-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</source>
          <target state="translated">このパラメータは、ウィンドウを &lt;code&gt;other-window&lt;/code&gt; 選択できないものとしてマークします（&lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;循環ウィンドウの順序付けを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="f6514b7fc5f20bb9d55d77d4a1001fc16e996382" translate="yes" xml:space="preserve">
          <source>This parameter overrides the terminal&amp;rsquo;s color support as given by the system&amp;rsquo;s terminal capabilities database in that this parameter&amp;rsquo;s value specifies the color mode to use on a text terminal. The value can be either a symbol or a number. A number specifies the number of colors to use (and, indirectly, what commands to issue to produce each color). For example, &lt;code&gt;(tty-color-mode . 8)&lt;/code&gt; specifies use of the ANSI escape sequences for 8 standard text colors. A value of -1 turns off color support.</source>
          <target state="translated">このパラメーターの値は、テキスト端末で使用するカラーモードを指定するという点で、システムの端末機能データベースによって提供される端末のカラーサポートをオーバーライドします。値は、記号または数値のいずれかです。数値は、使用する色の数（および間接的に、各色を生成するために発行するコマンド）を指定します。たとえば、 &lt;code&gt;(tty-color-mode . 8)&lt;/code&gt; は、8つの標準テキストカラーにANSIエスケープシーケンスを使用することを指定します。 -1の値は、カラーサポートをオフにします。</target>
        </trans-unit>
        <trans-unit id="bd8509745ba6765cbc1907061264796d7663c212" translate="yes" xml:space="preserve">
          <source>This parameter replaces the value of the buffer-local variable &lt;code&gt;header-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a header line for this window. Display and contents of the header line on other windows showing this buffer are not affected.</source>
          <target state="translated">このパラメーターは、このウィンドウが表示されるたびに、このウィンドウのバッファーのbuffer-local変数 &lt;code&gt;header-line-format&lt;/code&gt; （&lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basicsを&lt;/a&gt;参照）の値を置き換えます。記号 &lt;code&gt;none&lt;/code&gt; は、このウィンドウのヘッダー行の表示を抑制することを意味します。このバッファを表示している他のウィンドウのヘッダー行の表示と内容は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="2ec699ec9c8e7519372ba47de1ea0fe4ba54710b" translate="yes" xml:space="preserve">
          <source>This parameter replaces the value of the buffer-local variable &lt;code&gt;mode-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a mode line for this window. Display and contents of the mode line on other windows showing this buffer are not affected.</source>
          <target state="translated">このパラメーターは、このウィンドウが表示されるたびに、このウィンドウのバッファーのバッファーローカル変数 &lt;code&gt;mode-line-format&lt;/code&gt; （&lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;モードラインの基本を&lt;/a&gt;参照）の値を置き換えます。記号 &lt;code&gt;none&lt;/code&gt; は、このウィンドウのモード行の表示を抑制することを意味します。このバッファを表示している他のウィンドウのモード行の表示と内容は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="ea07d88807fca81810b36713d8feafdd8c4cb0f5" translate="yes" xml:space="preserve">
          <source>This parameter replaces the value of the buffer-local variable &lt;code&gt;tab-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a tab line for this window. Display and contents of the tab line on other windows showing this buffer are not affected.</source>
          <target state="translated">このパラメーターは、このウィンドウが表示されるたびに、このウィンドウのバッファーのバッファーローカル変数 &lt;code&gt;tab-line-format&lt;/code&gt; （&lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;モードラインの基本を&lt;/a&gt;参照）の値を置き換えます。記号 &lt;code&gt;none&lt;/code&gt; は、このウィンドウのタブ行の表示を抑制することを意味します。このバッファを表示している他のウィンドウのタブ行の表示と内容は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="41c00b41d6d137508c8d8ab39ab98ef1c2585357" translate="yes" xml:space="preserve">
          <source>This parameter specifies a buffer, a direction where &lt;code&gt;nil&lt;/code&gt; means vertical and &lt;code&gt;t&lt;/code&gt; horizontal, and a size in pixels. If this window displays the specified buffer and its size in the indicated direction equals the size specified by this parameter, then Emacs will try to preserve the size of this window in the indicated direction. This parameter is installed and updated by the function &lt;code&gt;window-preserve-size&lt;/code&gt; (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;).</source>
          <target state="translated">このパラメーターは、バッファー、 &lt;code&gt;nil&lt;/code&gt; が垂直および &lt;code&gt;t&lt;/code&gt; 水平を意味する方向、およびピクセル単位のサイズを指定します。このウィンドウに指定されたバッファが表示され、指定された方向のサイズがこのパラメータで指定されたサイズと等しい場合、Emacsはこのウィンドウのサイズを指定された方向に保持しようとします。このパラメーターは、関数 &lt;code&gt;window-preserve-size&lt;/code&gt; によってインストールおよび更新されます（&lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;ウィンドウサイズの&lt;/a&gt;保持を参照）。</target>
        </trans-unit>
        <trans-unit id="4852787081058fd92ee5a74912af6016072c67fe" translate="yes" xml:space="preserve">
          <source>This parameter specifies a relative position of the frame&amp;rsquo;s window-system window in the stacking (Z-) order of the frame&amp;rsquo;s display.</source>
          <target state="translated">このパラメーターは、フレームの表示のスタック（Z-）順序でのフレームのウィンドウシステムウィンドウの相対位置を指定します。</target>
        </trans-unit>
        <trans-unit id="60b30bc5fd34f7ee39bf385de781a443f02c1a56" translate="yes" xml:space="preserve">
          <source>This parameter specifies the desired fullscreen state of the frame after invoking the &lt;code&gt;toggle-frame-fullscreen&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;Frame Commands&lt;/a&gt; in</source>
          <target state="translated">このパラメーターは、 &lt;code&gt;toggle-frame-fullscreen&lt;/code&gt; コマンドを呼び出した後のフレームの望ましいフルスクリーン状態を指定します（の「&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;フレームコマンド」&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="13db171be7a96dd431263ef790763257e7812873" translate="yes" xml:space="preserve">
          <source>This parameter specifies the height of the frame. It works just like &lt;code&gt;width&lt;/code&gt;, except vertically instead of horizontally.</source>
          <target state="translated">このパラメーターは、フレームの高さを指定します。水平方向ではなく垂直方向を除いて、 &lt;code&gt;width&lt;/code&gt; と同じように機能します。</target>
        </trans-unit>
        <trans-unit id="220ad6679b282431f44117a1a4f2876c1d9b616b" translate="yes" xml:space="preserve">
          <source>This parameter specifies the minimum native height (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;) of the frame, in characters. Normally, the functions that establish a frame&amp;rsquo;s initial size or resize a frame make sure that all the frame&amp;rsquo;s windows, horizontal scroll bars and dividers, mode and header lines, the echo area and the internal menu and tool bar can be displayed. This parameter, if non-&lt;code&gt;nil&lt;/code&gt; allows to make a frame smaller than that with the consequence that any components that do not fit will be clipped by the window manager.</source>
          <target state="translated">このパラメータは、&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;フレームの&lt;/a&gt;最小ネイティブ高さ（フレームジオメトリを参照）を文字で指定します。通常、フレームの初期サイズを設定したり、フレームのサイズを変更したりする機能により、すべてのフレームのウィンドウ、水平スクロールバーと仕切り、モードとヘッダー行、エコー領域、内部メニューとツールバーが表示されます。このパラメーターは、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、フレームをフレームよりも小さくすることができ、その結果、適合しないコンポーネントはウィンドウマネージャーによってクリップされます。</target>
        </trans-unit>
        <trans-unit id="500401d99a4f98be993f7474e83ddea78b4bf383" translate="yes" xml:space="preserve">
          <source>This parameter specifies the minimum native width (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;) of the frame, in characters. Normally, the functions that establish a frame&amp;rsquo;s initial width or resize a frame horizontally make sure that all the frame&amp;rsquo;s windows, vertical scroll bars, fringes, margins and vertical dividers can be displayed. This parameter, if non-&lt;code&gt;nil&lt;/code&gt; allows to make a frame narrower than that with the consequence that any components that do not fit will be clipped by the window manager.</source>
          <target state="translated">このパラメーターは、&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;フレームの&lt;/a&gt;最小ネイティブ幅（フレームジオメトリを参照）を文字数で指定します。通常、フレームの初期幅を設定したり、フレームのサイズを水平方向に変更したりする機能により、フレームのすべてのウィンドウ、垂直スクロールバー、フリンジ、マージン、および垂直仕切りが表示されます。このパラメーターは、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、フレームをそれよりも狭くすることができ、その結果、適合しないコンポーネントはウィンドウマネージャーによってクリップされます。</target>
        </trans-unit>
        <trans-unit id="16827b14a99ac4bd190dd9494af238eb8c88ecc3" translate="yes" xml:space="preserve">
          <source>This parameter specifies the opacity of the frame, on graphical displays that support variable opacity. It should be an integer between 0 and 100, where 0 means completely transparent and 100 means completely opaque. It can also have a &lt;code&gt;nil&lt;/code&gt; value, which tells Emacs not to set the frame opacity (leaving it to the window manager).</source>
          <target state="translated">このパラメーターは、可変の不透明度をサポートするグラフィックディスプレイで、フレームの不透明度を指定します。0〜100の整数である必要があります。ここで、0は完全に透明を意味し、100は完全に不透明を意味します。また、フレームの不透明度を設定しないように（ウィンドウマネージャーに任せて）Emacsに指示する &lt;code&gt;nil&lt;/code&gt; 値を持つこともできます。</target>
        </trans-unit>
        <trans-unit id="dc3c010df2704242bd62337c6c4e53615d7539d7" translate="yes" xml:space="preserve">
          <source>This parameter specifies the width of the frame. It can be specified as in the following ways:</source>
          <target state="translated">このパラメータはフレームの幅を指定します。以下のように指定することができます。</target>
        </trans-unit>
        <trans-unit id="1813e6bc72a721928d2e936309adfea83df18dd3" translate="yes" xml:space="preserve">
          <source>This parameter specifies the window that this one has been cloned from. It is installed by &lt;code&gt;window-state-get&lt;/code&gt; (see &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;).</source>
          <target state="translated">このパラメーターは、これが複製されたウィンドウを指定します。これは &lt;code&gt;window-state-get&lt;/code&gt; によってインストールされます（&lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;ウィンドウ構成を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="a4ae7f76a8aa426d1a2e65e02eeabd44a78f7d1d" translate="yes" xml:space="preserve">
          <source>This parameter specifies whether to maximize the frame&amp;rsquo;s width, height or both. Its value can be &lt;code&gt;fullwidth&lt;/code&gt;, &lt;code&gt;fullheight&lt;/code&gt;, &lt;code&gt;fullboth&lt;/code&gt;, or &lt;code&gt;maximized&lt;/code&gt;. A &lt;em&gt;fullwidth&lt;/em&gt; frame is as wide as possible, a &lt;em&gt;fullheight&lt;/em&gt; frame is as tall as possible, and a &lt;em&gt;fullboth&lt;/em&gt; frame is both as wide and as tall as possible. A &lt;em&gt;maximized&lt;/em&gt; frame is like a &amp;ldquo;fullboth&amp;rdquo; frame, except that it usually keeps its title bar and the buttons for resizing and closing the frame. Also, maximized frames typically avoid hiding any task bar or panels displayed on the desktop. A &amp;ldquo;fullboth&amp;rdquo; frame, on the other hand, usually omits the title bar and occupies the entire available screen space.</source>
          <target state="translated">このパラメーターは、フレームの幅、高さ、またはその両方を最大化するかどうかを指定します。その値は、 &lt;code&gt;fullwidth&lt;/code&gt; 、 &lt;code&gt;fullheight&lt;/code&gt; 、 &lt;code&gt;fullboth&lt;/code&gt; 、または &lt;code&gt;maximized&lt;/code&gt; ことができます。&lt;em&gt;全角&lt;/em&gt;フレームはできるだけ広いあり、&lt;em&gt;fullheight&lt;/em&gt;フレームはできるだけ背が高い、そして&lt;em&gt;fullbothの&lt;/em&gt;フレームが広いようにできるだけトールの両方です。Aが&lt;em&gt;最大化&lt;/em&gt;フレームは「フル両方」のフレームに似ていますが、通常、タイトルバーと、フレームのサイズを変更したり閉じたりするためのボタンが保持されている点が異なります。また、最大化されたフレームは通常、デスクトップに表示されているタスクバーやパネルを非表示にしないようにします。一方、「両方」のフレームは通常、タイトルバーを省略し、使用可能な画面スペース全体を占めます。</target>
        </trans-unit>
        <trans-unit id="b10d0af1350bf93c04231e48aba6ae152932aaab" translate="yes" xml:space="preserve">
          <source>This parameter takes effect when the frame is created. If specified as &lt;code&gt;nil&lt;/code&gt;, Emacs will try to set it to the minibuffer window of &lt;code&gt;default-minibuffer-frame&lt;/code&gt; (see &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;). For an existing frame, this parameter can be used exclusively to specify another minibuffer window. It is not allowed to change it from a minibuffer window to &lt;code&gt;t&lt;/code&gt; and vice-versa, or from &lt;code&gt;t&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;. If the parameter specifies a minibuffer window already, setting it to &lt;code&gt;nil&lt;/code&gt; has no effect.</source>
          <target state="translated">このパラメータは、フレームが作成されたときに有効になります。 &lt;code&gt;nil&lt;/code&gt; として指定された場合、Emacsはそれを &lt;code&gt;default-minibuffer-frame&lt;/code&gt; のミニ&lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;バッファー&lt;/a&gt;ウィンドウに設定しようとします（ミニバッファーとフレームを参照）。既存のフレームの場合、このパラメーターは、別のミニバッファーウィンドウを指定するためにのみ使用できます。ミニバッファウィンドウから &lt;code&gt;t&lt;/code&gt; に、またはその逆に、または &lt;code&gt;t&lt;/code&gt; から &lt;code&gt;nil&lt;/code&gt; に変更することはできません。パラメータがすでにミニバッファウィンドウを指定している場合、それを &lt;code&gt;nil&lt;/code&gt; に設定しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="56b3a07615de410a1b6fd8e5fd08c25e5c1592b4" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Emacs version 25.1 to support applications that use large margins to center buffer text within a window and should be used, with due care, exclusively by those applications. It might be replaced by an improved solution in future versions of Emacs.</source>
          <target state="translated">このパラメータは、大きなマージンを使ってウィンドウ内のテキストバッファを中央に配置するアプリケーションをサポートするために Emacs バージョン 25.1 で導入されました。Emacs の将来のバージョンでは、このパラメータは改良されたソリューションに置き換えられるかもしれません。</target>
        </trans-unit>
        <trans-unit id="fba2e2a45f18cc9ffd9a266943bf1427c2983e79" translate="yes" xml:space="preserve">
          <source>This predicate (whose name comes from the phrase &amp;ldquo;natural number&amp;rdquo;) tests to see whether its argument is a nonnegative integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. 0 is considered non-negative.</source>
          <target state="translated">この述語（名前は「自然数」という句に由来します）は、引数が非負の整数であるかどうかをテストし、そうでない場合は &lt;code&gt;t&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。0は非負と見なされます。</target>
        </trans-unit>
        <trans-unit id="083a57f120b4debea450b8a7f3fd187085477c9e" translate="yes" xml:space="preserve">
          <source>This predicate function does what &lt;code&gt;string-match&lt;/code&gt; does, but it avoids modifying the match data.</source>
          <target state="translated">この述語関数は &lt;code&gt;string-match&lt;/code&gt; が行うことを実行しますが、一致データの変更を回避します。</target>
        </trans-unit>
        <trans-unit id="975fd9a6c95dbfb2260b5cd3bc2a1d38647b0145" translate="yes" xml:space="preserve">
          <source>This predicate function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;object&lt;/code&gt; is a timer.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がタイマーの場合、この述語関数は非 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c3272cdf7a150380c9807fbff4d704899004de96" translate="yes" xml:space="preserve">
          <source>This predicate function returns non-&lt;code&gt;nil&lt;/code&gt; if the mouse pointer displayed on &lt;var&gt;frame&lt;/var&gt; is visible; otherwise it returns &lt;code&gt;nil&lt;/code&gt;. &lt;var&gt;frame&lt;/var&gt; omitted or &lt;code&gt;nil&lt;/code&gt; means the selected frame. This is useful when &lt;code&gt;make-pointer-invisible&lt;/code&gt; is set to &lt;code&gt;t&lt;/code&gt;: it allows you to know if the pointer has been hidden. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Avoidance.html#Mouse-Avoidance&quot;&gt;Mouse Avoidance&lt;/a&gt; in</source>
          <target state="translated">この述語関数は、 &lt;var&gt;frame&lt;/var&gt; 表示されているマウスポインタが表示されている場合、 &lt;code&gt;nil&lt;/code&gt; 以外を返します。それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。 &lt;var&gt;frame&lt;/var&gt; 省略または &lt;code&gt;nil&lt;/code&gt; は、選択されたフレームを意味します。これは、 &lt;code&gt;make-pointer-invisible&lt;/code&gt; が &lt;code&gt;t&lt;/code&gt; に設定されている場合に役立ちます。これにより、ポインターが非表示になっているかどうかを知ることができます。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Avoidance.html#Mouse-Avoidance&quot;&gt;マウス回避&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="b7cb8638f40c2ebb4006a81e5d23a398f6d9a6ba" translate="yes" xml:space="preserve">
          <source>This predicate function works like &lt;code&gt;looking-at&lt;/code&gt;, but without updating the match data.</source>
          <target state="translated">この述語関数は、 &lt;code&gt;looking-at&lt;/code&gt; ように機能しますが、一致データを更新しません。</target>
        </trans-unit>
        <trans-unit id="c34cbf123174b83ec291ccd467b7b6256fea9713" translate="yes" xml:space="preserve">
          <source>This predicate returns &lt;code&gt;t&lt;/code&gt; if its floating-point argument is a NaN, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">この述語は、浮動小数点引数がNaNの場合は &lt;code&gt;t&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0991978cdd6e9b0d75671e2a04242a041730f9c0" translate="yes" xml:space="preserve">
          <source>This predicate returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is a frame, and &lt;code&gt;nil&lt;/code&gt; otherwise. For a frame, the value indicates which kind of display the frame uses:</source>
          <target state="translated">この述語は、 &lt;var&gt;object&lt;/var&gt; がフレームの場合は &lt;code&gt;nil&lt;/code&gt; 以外の値を返し、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。フレームの場合、値はフレームが使用するディスプレイの種類を示します。</target>
        </trans-unit>
        <trans-unit id="85090501de9da9f291cf5d05c9059f78e364b791" translate="yes" xml:space="preserve">
          <source>This predicate returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is a terminal that is live (i.e., not deleted), and &lt;code&gt;nil&lt;/code&gt; otherwise. For live terminals, the return value indicates what kind of frames are displayed on that terminal; the list of possible values is the same as for &lt;code&gt;framep&lt;/code&gt; above.</source>
          <target state="translated">この述語は、非返す &lt;code&gt;nil&lt;/code&gt; 場合、値を &lt;var&gt;object&lt;/var&gt; 生きているの端末（すなわち、削除されていない）、とある &lt;code&gt;nil&lt;/code&gt; でそう。ライブ端末の場合、戻り値はその端末に表示されるフレームの種類を示します。可能な値のリストは、上記の &lt;code&gt;framep&lt;/code&gt; の場合と同じです。</target>
        </trans-unit>
        <trans-unit id="d9bdba95a4f5cf68ca65087e39da58a56f8bf3e1" translate="yes" xml:space="preserve">
          <source>This predicate returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a valid case table.</source>
          <target state="translated">この述語は、非返し &lt;code&gt;nil&lt;/code&gt; を場合 &lt;var&gt;object&lt;/var&gt; 有効な場合のテーブルです。</target>
        </trans-unit>
        <trans-unit id="7ae94733e1d2813ba78d314bee6a03223350d3e6" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a large integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. Unlike small integers, large integers can be &lt;code&gt;=&lt;/code&gt; or &lt;code&gt;eql&lt;/code&gt; even if they are not &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">この述語は、引数が大きな整数であるかどうかをテストし、大きい場合は &lt;code&gt;t&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。小さい整数とは異なり、大きい整数は &lt;code&gt;eq&lt;/code&gt; でなくても &lt;code&gt;=&lt;/code&gt; または &lt;code&gt;eql&lt;/code&gt; にすることができます。</target>
        </trans-unit>
        <trans-unit id="df6be79cd38e82ff9d7aa739bb616d881052dda6" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a macro, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">この述語は、引数がマクロであるかどうかをテストし、マクロで &lt;code&gt;t&lt;/code&gt; 場合はtを返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2e6ccc250cf7f27c5f8a814295bb7bc70bea5bf7" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a number (either integer or floating point), and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">この述語は、引数が数値（整数または浮動小数点）であるかどうかをテストし、そうである場合は &lt;code&gt;t&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d36d6cbe9b4ffbc373b0ff581f77a7b4b0b0935f" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a small integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. Small integers can be compared with &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">この述語は、引数が小整数であるかどうかをテストし、小さい場合は &lt;code&gt;t&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。小さな整数と比較することができる &lt;code&gt;eq&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="875aca54c98227124ec4e47efb7bb7fe7187c801" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a special form, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">この述語は、その引数が特殊な形式であるかどうかをテストし、特殊な形式の場合は &lt;code&gt;t&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b0de1c35b3d732b0e53e8ab7ca4c0ce2316934f9" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is an integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">この述語は、引数が整数であるかどうかをテストし、整数で &lt;code&gt;t&lt;/code&gt; 場合はtを返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a8c027dd49f25a17849b4d7dd4317de706a4199a" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is floating point and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">この述語は、引数が浮動小数点であるかどうかをテストし、浮動小数点の場合は &lt;code&gt;t&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9272c9e1efdebef53407afb0f474969eb591636a" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is zero, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. The argument must be a number.</source>
          <target state="translated">この述語は、引数がゼロかどうかをテストし、 &lt;code&gt;nil&lt;/code&gt; 場合は &lt;code&gt;t&lt;/code&gt; を返し、そうでない場合はnilを返します。引数は数値でなければなりません。</target>
        </trans-unit>
        <trans-unit id="c51e0987531445179cbfcfdcf7213070d7cfd77c" translate="yes" xml:space="preserve">
          <source>This property activates various features that change the way text is displayed. For example, it can make text appear taller or shorter, higher or lower, wider or narrow, or replaced with an image. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、テキストの表示方法を変更するさまざまな機能をアクティブにします。たとえば、テキストを高くしたり短くしたり、高くしたり低くしたり、広くしたり狭くしたり、画像に置き換えたりすることができます。&lt;a href=&quot;display-property#Display-Property&quot;&gt;表示プロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d3477c9c8be33921d208326a3410a1a7e6d7ea2d" translate="yes" xml:space="preserve">
          <source>This property activates various features that change the way text is displayed. For example, it can make text appear taller or shorter, higher or lower, wider or narrower, or replaced with an image. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、テキストの表示方法を変更するさまざまな機能をアクティブにします。たとえば、テキストを高くしたり短くしたり、高くしたり低くしたり、広くしたり狭くしたり、画像に置き換えたりすることができます。&lt;a href=&quot;display-property#Display-Property&quot;&gt;表示プロパティを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9c929b443b54b5e414ee61f71f93112e679c76e8" translate="yes" xml:space="preserve">
          <source>This property controls the appearance of the text (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;). The value of the property can be the following:</source>
          <target state="translated">このプロパティは、テキストの外観を制御します（&lt;a href=&quot;faces#Faces&quot;&gt;Facesを&lt;/a&gt;参照）。プロパティの値は次のようになります。</target>
        </trans-unit>
        <trans-unit id="c2d0f0229ae518416429a0156978b4e4bcfd36ca" translate="yes" xml:space="preserve">
          <source>This property counts the number of times the abbrev has been expanded. If not explicitly set, it is initialized to 0 by &lt;code&gt;define-abbrev&lt;/code&gt;.</source>
          <target state="translated">このプロパティは、略語が展開された回数をカウントします。明示的に設定されていない場合は、 &lt;code&gt;define-abbrev&lt;/code&gt; によって0に初期化されます。</target>
        </trans-unit>
        <trans-unit id="26ccd3469a95d8c74efa36977201cf82aa7ae80d" translate="yes" xml:space="preserve">
          <source>This property holds a counter incremented each time a new abbrev is added to the table.</source>
          <target state="translated">このプロパティは、テーブルに新しい略語が追加されるたびにインクリメントされるカウンタを保持します。</target>
        </trans-unit>
        <trans-unit id="75f0fe2db504e09636b38095072fe2193000513e" translate="yes" xml:space="preserve">
          <source>This property holds a list of tables from which to inherit other abbrevs.</source>
          <target state="translated">このプロパティは、他の略語を継承するテーブルのリストを保持します。</target>
        </trans-unit>
        <trans-unit id="a9a30015f883285db73ea9d4d7efbf8906c78ce5" translate="yes" xml:space="preserve">
          <source>This property is used instead of &lt;code&gt;face&lt;/code&gt; when the mouse is on or near the character. For this purpose, &amp;ldquo;near&amp;rdquo; means that all text between the character and where the mouse is have the same &lt;code&gt;mouse-face&lt;/code&gt; property value.</source>
          <target state="translated">このプロパティは、マウスがキャラクターの上または近くにあるときに、 &lt;code&gt;face&lt;/code&gt; 代わりに使用されます。この目的のために、「近い」とは、文字とマウスがある場所の間のすべてのテキストが同じ &lt;code&gt;mouse-face&lt;/code&gt; プロパティ値を持つことを意味します。</target>
        </trans-unit>
        <trans-unit id="f8d26fcf101ce57ae35fa5f66db3d8f1dd7f79b8" translate="yes" xml:space="preserve">
          <source>This property is used instead of &lt;code&gt;face&lt;/code&gt; when the mouse is within the range of the overlay. However, Emacs ignores all face attributes from this property that alter the text size (e.g., &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt;, and &lt;code&gt;:slant&lt;/code&gt;). Those attributes are always the same as in the unhighlighted text.</source>
          <target state="translated">このプロパティは、マウスがオーバーレイの範囲内にあるときに &lt;code&gt;face&lt;/code&gt; 代わりに使用されます。ただし、Emacsは、テキストサイズを変更するこのプロパティのすべての顔属性（例 &lt;code&gt;:height&lt;/code&gt; 、 &lt;code&gt;:weight&lt;/code&gt; 、および &lt;code&gt;:slant&lt;/code&gt; ）を無視します。これらの属性は、強調表示されていないテキストと常に同じです。</target>
        </trans-unit>
        <trans-unit id="dce37fb61fbd51bb4f6a980899fd7011d0682f35" translate="yes" xml:space="preserve">
          <source>This property list associates &lt;code&gt;pine&lt;/code&gt; with &lt;code&gt;cones&lt;/code&gt;, &lt;code&gt;numbers&lt;/code&gt; with &lt;code&gt;(1 2 3)&lt;/code&gt;, and &lt;code&gt;color&lt;/code&gt; with &lt;code&gt;&quot;blue&quot;&lt;/code&gt;. The property names and values can be any Lisp objects, but the names are usually symbols (as they are in this example).</source>
          <target state="translated">このプロパティリストは、 &lt;code&gt;pine&lt;/code&gt; を &lt;code&gt;cones&lt;/code&gt; 、 &lt;code&gt;numbers&lt;/code&gt; を &lt;code&gt;(1 2 3)&lt;/code&gt; に、 &lt;code&gt;color&lt;/code&gt; を &lt;code&gt;&quot;blue&quot;&lt;/code&gt; 関連付けます。プロパティの名前と値は任意のLispオブジェクトにすることができますが、名前は通常シンボルです（この例のように）。</target>
        </trans-unit>
        <trans-unit id="88cf656c745cc043e16b90433b2e4752ad16ceb3" translate="yes" xml:space="preserve">
          <source>This property provides a way to compute the menu item dynamically. The property value &lt;var&gt;filter-fn&lt;/var&gt; should be a function of one argument; when it is called, its argument will be &lt;var&gt;real-binding&lt;/var&gt;. The function should return the binding to use instead.</source>
          <target state="translated">このプロパティは、メニュー項目を動的に計算する方法を提供します。プロパティ値 &lt;var&gt;filter-fn&lt;/var&gt; は、1つの引数の関数である必要があります。呼び出されると、その引数は &lt;var&gt;real-binding&lt;/var&gt; ます。関数は、代わりに使用するバインディングを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="46b7a8e42c2f354bec6dab05317844063bb34d06" translate="yes" xml:space="preserve">
          <source>This property provides a way to define radio buttons and toggle buttons. The &lt;small&gt;CAR&lt;/small&gt;, &lt;var&gt;type&lt;/var&gt;, says which: it should be &lt;code&gt;:toggle&lt;/code&gt; or &lt;code&gt;:radio&lt;/code&gt;. The &lt;small&gt;CDR&lt;/small&gt;, &lt;var&gt;selected&lt;/var&gt;, should be a form; the result of evaluating it says whether this button is currently selected.</source>
          <target state="translated">このプロパティは、ラジオボタンとトグルボタンを定義する方法を提供します。&lt;small&gt;CARは&lt;/small&gt;、 &lt;var&gt;type&lt;/var&gt; 、それは次のようになります、これは言う &lt;code&gt;:toggle&lt;/code&gt; か &lt;code&gt;:radio&lt;/code&gt; 。&lt;small&gt;CDRは&lt;/small&gt;、 &lt;var&gt;selected&lt;/var&gt; 、形態であるべきです。評価の結果、このボタンが現在選択されているかどうかがわかります。</target>
        </trans-unit>
        <trans-unit id="5c039cc9e1ce7ea1e1f753eae18d311864902e76" translate="yes" xml:space="preserve">
          <source>This property says whether the text is ready for display. If &lt;code&gt;nil&lt;/code&gt;, Emacs&amp;rsquo;s redisplay routine calls the functions in &lt;code&gt;fontification-functions&lt;/code&gt; (see &lt;a href=&quot;auto-faces#Auto-Faces&quot;&gt;Auto Faces&lt;/a&gt;) to prepare this part of the buffer before it is displayed. It is used internally by the just-in-time font locking code.</source>
          <target state="translated">このプロパティは、テキストを表示する準備ができているかどうかを示します。 &lt;code&gt;nil&lt;/code&gt; の場合、Emacsの再表示ルーチンは &lt;code&gt;fontification-functions&lt;/code&gt; （&lt;a href=&quot;auto-faces#Auto-Faces&quot;&gt;Auto Facesを&lt;/a&gt;参照）の関数を呼び出して、表示される前にバッファーのこの部分を準備します。これは、ジャストインタイムのフォントロックコードによって内部的に使用されます。</target>
        </trans-unit>
        <trans-unit id="e41f6cf9480ecee9a630942d6c931b6041ac5def" translate="yes" xml:space="preserve">
          <source>This property specifies a display spec to prepend to each continuation line at display-time. See &lt;a href=&quot;truncation#Truncation&quot;&gt;Truncation&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、表示時に各継続行の前に追加する表示仕様を指定します。&lt;a href=&quot;truncation#Truncation&quot;&gt;切り捨てを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9e5b1b0f4f375b3c40e6a0fb938ae855cf4466bc" translate="yes" xml:space="preserve">
          <source>This property specifies a display spec to prepend to each non-continuation line at display-time. See &lt;a href=&quot;truncation#Truncation&quot;&gt;Truncation&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、表示時に各非継続行の前に追加する表示仕様を指定します。&lt;a href=&quot;truncation#Truncation&quot;&gt;切り捨てを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="319a7e9cfddcea8ca06fbb8d6a7298c8d54e9c87" translate="yes" xml:space="preserve">
          <source>This property specifies a value for the &lt;code&gt;face&lt;/code&gt; property that Font Lock mode should apply to the underlying text. It is one of the fontification methods used by Font Lock mode, and is useful for special modes that implement their own highlighting. See &lt;a href=&quot;precalculated-fontification#Precalculated-Fontification&quot;&gt;Precalculated Fontification&lt;/a&gt;. When Font Lock mode is disabled, &lt;code&gt;font-lock-face&lt;/code&gt; has no effect.</source>
          <target state="translated">このプロパティは、フォントロックモードが基になるテキストに適用する必要がある &lt;code&gt;face&lt;/code&gt; プロパティの値を指定します。これは、フォントロックモードで使用されるフォント化方法の1つであり、独自の強調表示を実装する特別なモードで役立ちます。&lt;a href=&quot;precalculated-fontification#Precalculated-Fontification&quot;&gt;事前計算されたフォント化を&lt;/a&gt;参照してください。フォントロックモードが無効になっている場合、 &lt;code&gt;font-lock-face&lt;/code&gt; は効果がありません。</target>
        </trans-unit>
        <trans-unit id="066470928867b322b764e30f2cfb5f731df9751c" translate="yes" xml:space="preserve">
          <source>This property specifies an extra left margin for filling this part of the text.</source>
          <target state="translated">このプロパティは、テキストのこの部分を埋めるための余分な左マージンを指定する。</target>
        </trans-unit>
        <trans-unit id="4560e12e07587ef9a98a362cfe089438cdead139" translate="yes" xml:space="preserve">
          <source>This property specifies an extra right margin for filling this part of the text.</source>
          <target state="translated">このプロパティは、テキストのこの部分を埋めるための余分な右マージンを指定する。</target>
        </trans-unit>
        <trans-unit id="b0fb91642f6d350e77e1b6d7a9f207e326502091" translate="yes" xml:space="preserve">
          <source>This property specifies that &lt;var&gt;string&lt;/var&gt; is the string to display as the keyboard equivalent for this menu item. You can use the &amp;lsquo;</source>
          <target state="translated">このプロパティは、stringがこのメニュー項目に相当するキーボードとして表示する文字 &lt;var&gt;string&lt;/var&gt; であることを指定します。'を使用できます</target>
        </trans-unit>
        <trans-unit id="947b8a604b5f02e33ab66249b17e2cc68f23f437" translate="yes" xml:space="preserve">
          <source>This property specifies the style of justification for filling this part of the text.</source>
          <target state="translated">このプロパティは、テキストのこの部分を埋めるための正当化のスタイルを指定する。</target>
        </trans-unit>
        <trans-unit id="408ee042972bd5e487a5441e49dca7c8524b81af" translate="yes" xml:space="preserve">
          <source>This property specifies which key sequence to display as keyboard equivalent. Before Emacs displays &lt;var&gt;key-sequence&lt;/var&gt; in the menu, it verifies that &lt;var&gt;key-sequence&lt;/var&gt; is really equivalent to this menu item, so it only has an effect if you specify a correct key sequence. Specifying &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;key-sequence&lt;/var&gt; is equivalent to the &lt;code&gt;:key-sequence&lt;/code&gt; attribute being absent.</source>
          <target state="translated">このプロパティは、キーボードと同等のものとして表示するキーシーケンスを指定します。Emacsがメニューに &lt;var&gt;key-sequence&lt;/var&gt; を表示する前に、 &lt;var&gt;key-sequence&lt;/var&gt; がこのメニュー項目と本当に同等であることを確認するため、正しいキーシーケンスを指定した場合にのみ効果があります。 &lt;var&gt;key-sequence&lt;/var&gt; に &lt;code&gt;nil&lt;/code&gt; を指定することは、 &lt;code&gt;:key-sequence&lt;/code&gt; 属性がないことと同じです。</target>
        </trans-unit>
        <trans-unit id="0c6e3b1e15429e92390803b7d2c89e1a1a17ced3" translate="yes" xml:space="preserve">
          <source>This property tells incremental search how to make an invisible overlay visible, permanently, if the final match overlaps it. See &lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;Invisible Text&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、最終的な一致が重なっている場合に、非表示のオーバーレイを永続的に表示する方法をインクリメンタルサーチに指示します。&lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;InvisibleTextを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ee0adec20553cd3733d41294342ce226b98fce90" translate="yes" xml:space="preserve">
          <source>This property tells incremental search how to make an invisible overlay visible, temporarily, during the search. See &lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;Invisible Text&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、検索中に非表示のオーバーレイを一時的に表示する方法をインクリメンタル検索に指示します。&lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;InvisibleTextを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="941f2f9aa0981f31c10bd01f541a1c4ff07ba32a" translate="yes" xml:space="preserve">
          <source>This property value specifies the preferred key binding, when showing documentation, for the named function. See &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;.</source>
          <target state="translated">このプロパティ値は、ドキュメントを表示するときに、名前付き関数の優先キーバインディングを指定します。&lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;ドキュメントのキーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f12f6f4471f7bf40f3d10d34706aad2568066452" translate="yes" xml:space="preserve">
          <source>This property works like &lt;code&gt;keymap&lt;/code&gt; except that it specifies a keymap to use &lt;em&gt;instead of&lt;/em&gt; the buffer&amp;rsquo;s local map. For most purposes (perhaps all purposes), it is better to use the &lt;code&gt;keymap&lt;/code&gt; property.</source>
          <target state="translated">このプロパティは、同じように動作し &lt;code&gt;keymap&lt;/code&gt; 、それが使用するキーマップを指定することを除いて&lt;em&gt;代わりに&lt;/em&gt;バッファのローカルマップ。ほとんどの目的（おそらくすべての目的）では、 &lt;code&gt;keymap&lt;/code&gt; プロパティを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8038d88cf2b7af9745ca5759eec1c75551d60028" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value determines the priority of the overlay. If you want to specify a priority value, use either &lt;code&gt;nil&lt;/code&gt; (or zero), or a positive integer. Any other value has undefined behavior.</source>
          <target state="translated">このプロパティの値は、オーバーレイの優先度を決定します。優先度の値を指定する場合は、 &lt;code&gt;nil&lt;/code&gt; （またはゼロ）または正の整数を使用します。その他の値の動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="d8263b3cc2b75bb93edef1e1b2526768c8c3168b" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a list of functions to be called before and after inserting text right at the beginning of the overlay. The calling conventions are the same as for the &lt;code&gt;modification-hooks&lt;/code&gt; functions.</source>
          <target state="translated">このプロパティの値は、オーバーレイの先頭にテキストを挿入する前後に呼び出される関数のリストです。呼び出し規約は、 &lt;code&gt;modification-hooks&lt;/code&gt; 関数の場合と同じです。</target>
        </trans-unit>
        <trans-unit id="56741a519a731d9740cceebca5333924ea138fd8" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a list of functions to be called before and after inserting text right at the end of the overlay. The calling conventions are the same as for the &lt;code&gt;modification-hooks&lt;/code&gt; functions.</source>
          <target state="translated">このプロパティの値は、オーバーレイの最後にテキストを挿入する前後に呼び出される関数のリストです。呼び出し規約は、 &lt;code&gt;modification-hooks&lt;/code&gt; 関数の場合と同じです。</target>
        </trans-unit>
        <trans-unit id="27865c20e8f49f56c94074bbe90cba6c46543ebf" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a list of functions to be called if any character within the overlay is changed or if text is inserted strictly within the overlay.</source>
          <target state="translated">このプロパティの値は、オーバーレイ内の文字が変更された場合、またはテキストがオーバーレイ内に厳密に挿入された場合に呼び出される関数のリストです。</target>
        </trans-unit>
        <trans-unit id="0cfeea5194bb36721262145ee6f4de77c36e25c5" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a string to add to the display at the beginning of the overlay. The string does not appear in the buffer in any sense&amp;mdash;only on the screen.</source>
          <target state="translated">このプロパティの値は、オーバーレイの最初に表示に追加する文字列です。文字列は、どのような意味でもバッファには表示されず、画面にのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="3207cdeae20e8ef35aa044ca30d684ad9f36d36b" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a string to add to the display at the end of the overlay. The string does not appear in the buffer in any sense&amp;mdash;only on the screen.</source>
          <target state="translated">このプロパティの値は、オーバーレイの最後に表示に追加する文字列です。文字列は、どのような意味でもバッファには表示されず、画面にのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="6da911c299714acdfed8889a1653a73a467fdb2c" translate="yes" xml:space="preserve">
          <source>This regular expression contains four parts in succession and can be deciphered as follows:</source>
          <target state="translated">この正規表現は、連続して4つの部分を含み、以下のように解読することができます。</target>
        </trans-unit>
        <trans-unit id="b0f82443a5d9f2bfa2fd7c397d643a48a6003cf9" translate="yes" xml:space="preserve">
          <source>This removes only images that were put into &lt;var&gt;buffer&lt;/var&gt; the way &lt;code&gt;put-image&lt;/code&gt; does it, not images that were inserted with &lt;code&gt;insert-image&lt;/code&gt; or in other ways.</source>
          <target state="translated">これにより、 &lt;code&gt;put-image&lt;/code&gt; と同じ方法で &lt;var&gt;buffer&lt;/var&gt; に入れられた画像のみが削除され、 &lt;code&gt;insert-image&lt;/code&gt; またはその他の方法で挿入された画像は削除されません。</target>
        </trans-unit>
        <trans-unit id="05984eb823fb3287757b3d43c54bdca6f0f899c4" translate="yes" xml:space="preserve">
          <source>This removes the element &lt;var&gt;element&lt;/var&gt; from &lt;code&gt;buffer-invisibility-spec&lt;/code&gt;. This does nothing if &lt;var&gt;element&lt;/var&gt; is not in the list.</source>
          <target state="translated">これにより、要素 &lt;var&gt;element&lt;/var&gt; が &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; から削除されます。 &lt;var&gt;element&lt;/var&gt; がリストにない場合、これは何もしません。</target>
        </trans-unit>
        <trans-unit id="09049b7883acb5c8f9aedb6fbc9b34cc69720da3" translate="yes" xml:space="preserve">
          <source>This replaces the default variable &lt;var&gt;mode&lt;/var&gt;, used to store the state of the mode. If you specify this, the &lt;var&gt;mode&lt;/var&gt; variable is not defined, and any &lt;var&gt;init-value&lt;/var&gt; argument is unused. &lt;var&gt;place&lt;/var&gt; can be a different named variable (which you must define yourself), or anything that can be used with the &lt;code&gt;setf&lt;/code&gt; function (see &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Generalized Variables&lt;/a&gt;). &lt;var&gt;place&lt;/var&gt; can also be a cons &lt;code&gt;(&lt;var&gt;get&lt;/var&gt; . &lt;var&gt;set&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;get&lt;/var&gt; is an expression that returns the current state, and &lt;var&gt;set&lt;/var&gt; is a function of one argument (a state) that sets it.</source>
          <target state="translated">これは、 &lt;var&gt;mode&lt;/var&gt; の状態を格納するために使用されるデフォルトの変数モードを置き換えます。これを指定すると、 &lt;var&gt;mode&lt;/var&gt; 変数は定義されず、 &lt;var&gt;init-value&lt;/var&gt; 引数は使用されません。 &lt;var&gt;place&lt;/var&gt; は、別の名前付き変数（自分で定義する必要があります）、または &lt;code&gt;setf&lt;/code&gt; 関数で使用できるものであれば何でもかまいません（&lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;一般化変数を&lt;/a&gt;参照）。 &lt;var&gt;place&lt;/var&gt; も短所であることができる &lt;code&gt;(&lt;var&gt;get&lt;/var&gt; . &lt;var&gt;set&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;get&lt;/var&gt; 現在の状態を返す式であり、 &lt;var&gt;set&lt;/var&gt; セットそのこと一つの引数（状態）の関数です。</target>
        </trans-unit>
        <trans-unit id="2015f79f8a897ef9eec56c5f2889f1fd17b12d51" translate="yes" xml:space="preserve">
          <source>This represents a file to visit and a position in it; jumping to this value visits file &lt;var&gt;filename&lt;/var&gt; and goes to buffer position &lt;var&gt;position&lt;/var&gt;. Restoring this type of position asks the user for confirmation first.</source>
          <target state="translated">これは、訪問するファイルとその中の位置を表します。この値にジャンプすると、ファイル &lt;var&gt;filename&lt;/var&gt; にアクセスし、バッファ位置の &lt;var&gt;position&lt;/var&gt; ます。このタイプの位置を復元すると、最初にユーザーに確認を求めます。</target>
        </trans-unit>
        <trans-unit id="6e311e23ab12fc0f5ff77cf2c9dd596c8e6e5898" translate="yes" xml:space="preserve">
          <source>This represents a file to visit; jumping to this value visits file &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">これは、アクセスするファイルを表します。この値にジャンプすると、ファイル &lt;var&gt;filename&lt;/var&gt; にアクセスします。</target>
        </trans-unit>
        <trans-unit id="a41393dc89c086ec33aa75ec86f0b399f61aa5c0" translate="yes" xml:space="preserve">
          <source>This represents a frame configuration to restore, and a position to jump to in the current buffer.</source>
          <target state="translated">これは、復元するフレーム構成と、現在のバッファ内でジャンプする位置を表します。</target>
        </trans-unit>
        <trans-unit id="26e426a26b1412c44b93ace1b6b3fcab4875fc28" translate="yes" xml:space="preserve">
          <source>This represents a window configuration to restore in one frame, and a position to jump to in the current buffer.</source>
          <target state="translated">これは、1フレームで復元するウィンドウの設定と、現在のバッファ内でジャンプする位置を表しています。</target>
        </trans-unit>
        <trans-unit id="da81931882d07d70809d38c360b246cdb2dd7253" translate="yes" xml:space="preserve">
          <source>This results in the &lt;code&gt;lisp-indent-function&lt;/code&gt; property being set on the macro name.</source>
          <target state="translated">これにより、マクロ名に &lt;code&gt;lisp-indent-function&lt;/code&gt; プロパティが設定されます。</target>
        </trans-unit>
        <trans-unit id="37aa442144924bd9453ae9ecc7153598bb70f218" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;charcode&lt;/var&gt; is a valid character, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">これは、 &lt;var&gt;charcode&lt;/var&gt; が有効な文字である場合は &lt;code&gt;t&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a3b912b3bf43b1998f3778c748f8e7993ae43646" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;color&lt;/var&gt; is a shade of gray, as defined on &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s display. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the question applies to the selected frame. If &lt;var&gt;color&lt;/var&gt; is not a valid color name, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;var&gt;frame&lt;/var&gt; のディスプレイで定義されているように、 &lt;var&gt;color&lt;/var&gt; が灰色の陰影である場合に &lt;code&gt;t&lt;/code&gt; を返します。場合は &lt;var&gt;frame&lt;/var&gt; 省略されるかされて &lt;code&gt;nil&lt;/code&gt; の、質問には、選択したフレームに適用されます。 &lt;var&gt;color&lt;/var&gt; が有効な色名でない場合、この関数は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5ce1b95c5cf80fb93a3c901f405cc5d55ad4c92f" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; can really display the color &lt;var&gt;color&lt;/var&gt; (or at least something close to it). If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the question applies to the selected frame.</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; が実際に色の &lt;var&gt;color&lt;/var&gt; （または少なくともそれに近いもの）を表示できる場合、これは &lt;code&gt;t&lt;/code&gt; を返します。場合は &lt;var&gt;frame&lt;/var&gt; 省略されるかされて &lt;code&gt;nil&lt;/code&gt; の、質問には、選択したフレームに適用されます。</target>
        </trans-unit>
        <trans-unit id="0868a58613e40d068044d92b2fcbe0318c821d31" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a bool-vector, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">これは、 &lt;var&gt;object&lt;/var&gt; がブールベクトルの場合は &lt;code&gt;t&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0c839e2aa1a81e65848892fbef5edab950e41345" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a ring, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">これは、 &lt;var&gt;object&lt;/var&gt; がリングの場合は &lt;code&gt;t&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4381c449d15b921805dbbd14f45e8923f0831d98" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a valid bitmap specification, suitable for use with &lt;code&gt;:stipple&lt;/code&gt; (see above). It returns &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">これは、 &lt;var&gt;object&lt;/var&gt; が有効なビットマップ仕様であり、 &lt;code&gt;:stipple&lt;/code&gt; での使用に適している場合に &lt;code&gt;t&lt;/code&gt; を返します（上記を参照）。それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7cf4b639cca363b302dd23f893bca560d01cd331" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;ring&lt;/var&gt; is empty, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">これは、 &lt;var&gt;ring&lt;/var&gt; が空の場合は &lt;code&gt;t&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="93817d8e919378ef8c20ba57745cdf9326d1c731" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;t1&lt;/var&gt; and &lt;var&gt;t2&lt;/var&gt; are equal time values. The result is &lt;code&gt;nil&lt;/code&gt; if either argument is a NaN.</source>
          <target state="translated">&lt;var&gt;t1&lt;/var&gt; と &lt;var&gt;t2&lt;/var&gt; が等しい時間値の場合、これは &lt;code&gt;t&lt;/code&gt; を返します。いずれかの引数がNaNの場合、結果は &lt;code&gt;nil&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="5edc74eb24a3425cda6dd10a21109bb768d1efdb" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;variable&lt;/var&gt; either has a buffer-local value in buffer &lt;var&gt;buffer&lt;/var&gt;, or is automatically buffer-local. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;buffer&lt;/var&gt; defaults to the current buffer.</source>
          <target state="translated">これは、 &lt;var&gt;variable&lt;/var&gt; がバッファ &lt;var&gt;buffer&lt;/var&gt; にバッファローカル値を持っているか、自動的にバッファローカルである場合に &lt;code&gt;t&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。省略または &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;var&gt;buffer&lt;/var&gt; デフォルトで現在のバッファになります。</target>
        </trans-unit>
        <trans-unit id="e86cfc93101aae6a4a6d9773191c1862b7d898d4" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;variable&lt;/var&gt; is buffer-local in buffer &lt;var&gt;buffer&lt;/var&gt; (which defaults to the current buffer); otherwise, &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;variable&lt;/var&gt; がバッファ &lt;var&gt;buffer&lt;/var&gt; （デフォルトでは現在のバッファ）でバッファローカルの場合、これは &lt;code&gt;t&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96866d4aec251ac68263fe50d85d77f85a84a7be" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if the faces &lt;var&gt;face1&lt;/var&gt; and &lt;var&gt;face2&lt;/var&gt; have the same attributes for display.</source>
          <target state="translated">面 &lt;var&gt;face1&lt;/var&gt; と &lt;var&gt;face2&lt;/var&gt; の表示属性が同じである場合、これは &lt;code&gt;t&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d5224ca5851b00f960a5d63196e913a15a3c578a" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if time value &lt;var&gt;t1&lt;/var&gt; is less than time value &lt;var&gt;t2&lt;/var&gt;. The result is &lt;code&gt;nil&lt;/code&gt; if either argument is a NaN.</source>
          <target state="translated">時間値 &lt;var&gt;t1&lt;/var&gt; が時間値 &lt;var&gt;t2&lt;/var&gt; より小さい場合、これは &lt;code&gt;t&lt;/code&gt; を返します。いずれかの引数がNaNの場合、結果は &lt;code&gt;nil&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="ff8f0193f83cccc9ccc816f2dd5208de39cd29c1" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt; converted to floating point. If &lt;var&gt;number&lt;/var&gt; is already floating point, &lt;code&gt;float&lt;/code&gt; returns it unchanged.</source>
          <target state="translated">これは、浮動小数点に変換された &lt;var&gt;number&lt;/var&gt; 返します。 &lt;var&gt;number&lt;/var&gt; がすでに浮動小数点である場合、 &lt;code&gt;float&lt;/code&gt; はそれを変更せずに返します。</target>
        </trans-unit>
        <trans-unit id="f0d7fc8515dadfd4753d2f97902ec306a70efc45" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding downward (towards negative infinity).</source>
          <target state="translated">これは &lt;var&gt;number&lt;/var&gt; 返し、下向きに（負の無限大に向かって）丸めることによって整数に変換されます。</target>
        </trans-unit>
        <trans-unit id="9c11d272f5c65c378bcf9409cfcb71769bf2ae18" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding towards the nearest integer. Rounding a value equidistant between two integers returns the even integer.</source>
          <target state="translated">これは &lt;var&gt;number&lt;/var&gt; 返し、最も近い整数に丸めることによって整数に変換されます。2つの整数間で等距離の値を丸めると、偶数の整数が返されます。</target>
        </trans-unit>
        <trans-unit id="e51762dba4a28b5f779343d3d77db63b0d1b518d" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding towards zero.</source>
          <target state="translated">これは &lt;var&gt;number&lt;/var&gt; 返し、ゼロに向かって丸めることによって整数に変換されます。</target>
        </trans-unit>
        <trans-unit id="e5d4a48f691122ae7d772af433c63d6b5c91b607" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding upward (towards positive infinity).</source>
          <target state="translated">これは &lt;var&gt;number&lt;/var&gt; 返し、上向きに（正の無限大に向かって）丸めることによって整数に変換されます。</target>
        </trans-unit>
        <trans-unit id="01f9e7cc335a6ab502fc49af5808a89e82fec2c9" translate="yes" xml:space="preserve">
          <source>This returns a cons cell &lt;code&gt;(&lt;var&gt;header&lt;/var&gt; . &lt;var&gt;footer&lt;/var&gt;)&lt;/code&gt; made from &lt;var&gt;ewoc&lt;/var&gt;&amp;rsquo;s header and footer.</source>
          <target state="translated">これにより、 &lt;var&gt;ewoc&lt;/var&gt; のヘッダーとフッターから作成されたconsセル &lt;code&gt;(&lt;var&gt;header&lt;/var&gt; . &lt;var&gt;footer&lt;/var&gt;)&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="875e8657e61f397cced1836bbd86218971239aaa" translate="yes" xml:space="preserve">
          <source>This returns a copy of the property list of &lt;var&gt;overlay&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;overlay&lt;/var&gt; のプロパティリストのコピーが返されます。</target>
        </trans-unit>
        <trans-unit id="d2dfe75954a08588ee6aad547b96e70c9c8e4f55" translate="yes" xml:space="preserve">
          <source>This returns a list of numbers that count the number of objects created in this Emacs session. Each of these counters increments for a certain kind of object. See the documentation string for details.</source>
          <target state="translated">これは、このEmacsセッションで作成されたオブジェクトの数をカウントする数値のリストを返します。これらのカウンタはそれぞれ、特定の種類のオブジェクトに対してインクリメントします。詳細はドキュメントの文字列を参照してください。</target>
        </trans-unit>
        <trans-unit id="34776a3e64916dcadab81611ff9cb8a4bf02d987" translate="yes" xml:space="preserve">
          <source>This returns a list of the objects in &lt;var&gt;ring&lt;/var&gt;, in order, newest first.</source>
          <target state="translated">これにより、 &lt;var&gt;ring&lt;/var&gt; 内のオブジェクトのリストが、新しいものから順に返されます。</target>
        </trans-unit>
        <trans-unit id="1ab43147f4b9862f2aa75a726f9a6d8e463c64c5" translate="yes" xml:space="preserve">
          <source>This returns a new ring capable of holding &lt;var&gt;size&lt;/var&gt; objects. &lt;var&gt;size&lt;/var&gt; should be an integer.</source>
          <target state="translated">これにより、 &lt;var&gt;size&lt;/var&gt; オブジェクトを保持できる新しいリングが返されます。 &lt;var&gt;size&lt;/var&gt; は整数である必要があります。</target>
        </trans-unit>
        <trans-unit id="3c3fcee6583b9eac5dbc4f56e3dde99738094d49" translate="yes" xml:space="preserve">
          <source>This returns a new ring which is a copy of &lt;var&gt;ring&lt;/var&gt;. The new ring contains the same (&lt;code&gt;eq&lt;/code&gt;) objects as &lt;var&gt;ring&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;ring&lt;/var&gt; のコピーである新しいringが返されます。新しいリングは同じ（含まれている &lt;code&gt;eq&lt;/code&gt; など）のオブジェクト &lt;var&gt;ring&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="65c036754d1c25427b168d7cfe14e5946ace79df" translate="yes" xml:space="preserve">
          <source>This returns a string containing the characters &lt;var&gt;characters&lt;/var&gt;.</source>
          <target state="translated">これは、文字の入った文字列を返す &lt;var&gt;characters&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="71fe748e7f3eccf5e0946dd6c3d2ca6c89894819" translate="yes" xml:space="preserve">
          <source>This returns an Emacs function created from the C function &lt;var&gt;func&lt;/var&gt;, whose signature is as described for &lt;code&gt;module_func&lt;/code&gt; above (assumed here to be &lt;code&gt;typedef&lt;/code&gt;&amp;rsquo;ed as &lt;code&gt;subr&lt;/code&gt;). The arguments &lt;var&gt;min_arity&lt;/var&gt; and &lt;var&gt;max_arity&lt;/var&gt; specify the minimum and maximum number of arguments that &lt;var&gt;func&lt;/var&gt; can accept. The &lt;var&gt;max_arity&lt;/var&gt; argument can have the special value &lt;code&gt;emacs_variadic_function&lt;/code&gt;, which makes the function accept an unlimited number of arguments, like the &lt;code&gt;&amp;amp;rest&lt;/code&gt; keyword in Lisp (see &lt;a href=&quot;argument-list#Argument-List&quot;&gt;Argument List&lt;/a&gt;).</source>
          <target state="translated">これは、C関数 &lt;var&gt;func&lt;/var&gt; から作成されたEmacs関数を返します。そのシグネチャは、上記の &lt;code&gt;module_func&lt;/code&gt; で説明したとおりです（ここでは、 &lt;code&gt;subr&lt;/code&gt; として &lt;code&gt;typedef&lt;/code&gt; されていると想定しています）。引数 &lt;var&gt;min_arity&lt;/var&gt; および &lt;var&gt;max_arity&lt;/var&gt; は、 &lt;var&gt;func&lt;/var&gt; が受け入れることができる引数の最小数と最大数を指定します。 &lt;var&gt;max_arity&lt;/var&gt; の引数には、特別な値持つことができます &lt;code&gt;emacs_variadic_function&lt;/code&gt; 機能は次のように、引数の数に制限を受け入れるなり、 &lt;code&gt;&amp;amp;rest&lt;/code&gt; （参照Lispでキーワードを&lt;a href=&quot;argument-list#Argument-List&quot;&gt;引数リストを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="eb3c5059729c336a838c733be57db4f22559a1c8" translate="yes" xml:space="preserve">
          <source>This returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;plist&lt;/var&gt; contains the given &lt;var&gt;property&lt;/var&gt;. Unlike &lt;code&gt;plist-get&lt;/code&gt;, this allows you to distinguish between a missing property and a property with the value &lt;code&gt;nil&lt;/code&gt;. The value is actually the tail of &lt;var&gt;plist&lt;/var&gt; whose &lt;code&gt;car&lt;/code&gt; is &lt;var&gt;property&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;plist&lt;/var&gt; に指定された &lt;var&gt;property&lt;/var&gt; が含まれている場合、これは非 &lt;code&gt;nil&lt;/code&gt; を返します。 &lt;code&gt;plist-get&lt;/code&gt; とは異なり、これにより、欠落しているプロパティと値が &lt;code&gt;nil&lt;/code&gt; のプロパティを区別できます。値は、実際には、 &lt;code&gt;car&lt;/code&gt; が &lt;var&gt;property&lt;/var&gt; である &lt;var&gt;plist&lt;/var&gt; のテールです。</target>
        </trans-unit>
        <trans-unit id="7a90e16286f3932a9285396931964137921b9664" translate="yes" xml:space="preserve">
          <source>This returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;table&lt;/var&gt; is a hash table object.</source>
          <target state="translated">&lt;var&gt;table&lt;/var&gt; がハッシュテーブルオブジェクトの場合、これは非 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3c249527629f267214e5f4beaf93b8d756af18d0" translate="yes" xml:space="preserve">
          <source>This returns non-&lt;code&gt;nil&lt;/code&gt; if the face &lt;var&gt;face&lt;/var&gt; displays differently from the default face.</source>
          <target state="translated">面の &lt;var&gt;face&lt;/var&gt; がデフォルトの面と異なって表示される場合、これは非 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5629e5b680a27cdb23ea681c6f881e46eb7bb56e" translate="yes" xml:space="preserve">
          <source>This returns the &lt;var&gt;test&lt;/var&gt; value that was given when &lt;var&gt;table&lt;/var&gt; was created, to specify how to hash and compare keys. See &lt;code&gt;make-hash-table&lt;/code&gt; (see &lt;a href=&quot;creating-hash#Creating-Hash&quot;&gt;Creating Hash&lt;/a&gt;).</source>
          <target state="translated">これは、 &lt;var&gt;table&lt;/var&gt; 作成時に指定された &lt;var&gt;test&lt;/var&gt; 値を返し、キーをハッシュおよび比較する方法を指定します。参照してください &lt;code&gt;make-hash-table&lt;/code&gt; （参照&lt;a href=&quot;creating-hash#Creating-Hash&quot;&gt;ハッシュを作成します&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="948a541c5e80832dd928ff0eefae22ea67d67224" translate="yes" xml:space="preserve">
          <source>This returns the buffer where &lt;var&gt;ewoc&lt;/var&gt; maintains its text.</source>
          <target state="translated">これにより、 &lt;var&gt;ewoc&lt;/var&gt; がテキストを保持するバッファが返されます。</target>
        </trans-unit>
        <trans-unit id="b092859812c67464305558a0b0aabc8e7e01ea4f" translate="yes" xml:space="preserve">
          <source>This returns the current nominal size of &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;table&lt;/var&gt; 現在の公称サイズが返されます。</target>
        </trans-unit>
        <trans-unit id="c182f48a42a48a0a68382bf348910d68bdd3c053" translate="yes" xml:space="preserve">
          <source>This returns the day number within the year corresponding to &lt;var&gt;time-value&lt;/var&gt;, assuming the default time zone. The operating system limits the range of time and zone values.</source>
          <target state="translated">これは、デフォルトのタイムゾーンを想定して、 &lt;var&gt;time-value&lt;/var&gt; に対応する年内の日番号を返します。オペレーティングシステムは、時間とゾーンの値の範囲を制限します。</target>
        </trans-unit>
        <trans-unit id="463decc3d5accbbb9fdafa3bab2497b85927aff3" translate="yes" xml:space="preserve">
          <source>This returns the ending position of &lt;var&gt;event&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;event&lt;/var&gt; の終了位置が返されます。</target>
        </trans-unit>
        <trans-unit id="4fe847f75aeb7d71dc6eee13922e14782e4a5e09" translate="yes" xml:space="preserve">
          <source>This returns the list of active keymaps that would be used by the command loop in the current circumstances to look up a key sequence. Normally it ignores &lt;code&gt;overriding-local-map&lt;/code&gt; and &lt;code&gt;overriding-terminal-local-map&lt;/code&gt;, but if &lt;var&gt;olp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then it pays attention to them. &lt;var&gt;position&lt;/var&gt; can optionally be either an event position as returned by &lt;code&gt;event-start&lt;/code&gt; or a buffer position, and may change the keymaps as described for &lt;code&gt;key-binding&lt;/code&gt;.</source>
          <target state="translated">これにより、現在の状況でコマンドループがキーシーケンスを検索するために使用するアクティブなキーマップのリストが返されます。通常、それは無視 &lt;code&gt;overriding-local-map&lt;/code&gt; し、 &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; が、場合 &lt;var&gt;olp&lt;/var&gt; 非で &lt;code&gt;nil&lt;/code&gt; を、それは彼らに注意を払っています。 &lt;var&gt;position&lt;/var&gt; は、オプションで、 &lt;code&gt;event-start&lt;/code&gt; によって返されるイベント位置またはバッファー位置のいずれかであり、 &lt;code&gt;key-binding&lt;/code&gt; 説明されているようにキーマップを変更できます。</target>
        </trans-unit>
        <trans-unit id="a331e4a8856270a8b8d7626f94c5661a9ce28807" translate="yes" xml:space="preserve">
          <source>This returns the maximum capacity of the &lt;var&gt;ring&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;ring&lt;/var&gt; 最大容量が返されます。</target>
        </trans-unit>
        <trans-unit id="c4fc9fd0b9ec71660e9f92070e585e203e7e5de2" translate="yes" xml:space="preserve">
          <source>This returns the node in &lt;var&gt;ewoc&lt;/var&gt; found at zero-based index &lt;var&gt;n&lt;/var&gt;. A negative &lt;var&gt;n&lt;/var&gt; means count from the end. &lt;code&gt;ewoc-nth&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;n&lt;/var&gt; is out of range.</source>
          <target state="translated">これは、ゼロベースのインデックス &lt;var&gt;n&lt;/var&gt; で見つかった &lt;var&gt;ewoc&lt;/var&gt; のノードを返します。負の &lt;var&gt;n&lt;/var&gt; は、最後から数えることを意味します。 &lt;var&gt;n&lt;/var&gt; が範囲外の場合、 &lt;code&gt;ewoc-nth&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7e7a3da817b8e3a470765907355d6d350d1839da" translate="yes" xml:space="preserve">
          <source>This returns the number of objects that &lt;var&gt;ring&lt;/var&gt; currently contains. The value will never exceed that returned by &lt;code&gt;ring-size&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;var&gt;ring&lt;/var&gt; 現在含まれているオブジェクトの数を返します。値は、 &lt;code&gt;ring-size&lt;/code&gt; によって返される値を超えることはありません。</target>
        </trans-unit>
        <trans-unit id="dd47362369e96dc2315d2331cfd8a022e182eb49" translate="yes" xml:space="preserve">
          <source>This returns the object in &lt;var&gt;ring&lt;/var&gt; found at index &lt;var&gt;index&lt;/var&gt;. &lt;var&gt;index&lt;/var&gt; may be negative or greater than the ring length. If &lt;var&gt;ring&lt;/var&gt; is empty, &lt;code&gt;ring-ref&lt;/code&gt; signals an error.</source>
          <target state="translated">これにより、インデックス &lt;var&gt;index&lt;/var&gt; 見つかった &lt;var&gt;ring&lt;/var&gt; 内のオブジェクトが返されます。 &lt;var&gt;index&lt;/var&gt; は負の場合もあれば、リングの長さよりも大きい場合もあります。 &lt;var&gt;ring&lt;/var&gt; が空の場合、 &lt;code&gt;ring-ref&lt;/code&gt; はエラーを通知します。</target>
        </trans-unit>
        <trans-unit id="1cadd800bec673dff8f3880281742d609319ad1a" translate="yes" xml:space="preserve">
          <source>This returns the object in the function cell of &lt;var&gt;symbol&lt;/var&gt;. It does not check that the returned object is a legitimate function.</source>
          <target state="translated">これにより、 &lt;var&gt;symbol&lt;/var&gt; の関数セルにオブジェクトが返されます。返されたオブジェクトが正当な関数であるかどうかはチェックされません。</target>
        </trans-unit>
        <trans-unit id="b623b4fc462df87e734be3cd1b41ffc061a3ffb2" translate="yes" xml:space="preserve">
          <source>This returns the parent keymap of &lt;var&gt;keymap&lt;/var&gt;. If &lt;var&gt;keymap&lt;/var&gt; has no parent, &lt;code&gt;keymap-parent&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;keymap&lt;/var&gt; の親キーマップが返されます。 &lt;var&gt;keymap&lt;/var&gt; に親がない場合、 &lt;code&gt;keymap-parent&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f63e4bcd0b52bd6e4af0e6223f745f38357e3c5d" translate="yes" xml:space="preserve">
          <source>This returns the query flag of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;process&lt;/var&gt; のクエリフラグが返されます。</target>
        </trans-unit>
        <trans-unit id="c534efd2a0b3fc9e8d278f2977804f08e175cb60" translate="yes" xml:space="preserve">
          <source>This returns the rehash size of &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;table&lt;/var&gt; の再ハッシュサイズが返されます。</target>
        </trans-unit>
        <trans-unit id="4bfb3a5eb062d29cdc825f788c9a91b5fe96bc03" translate="yes" xml:space="preserve">
          <source>This returns the rehash threshold of &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;table&lt;/var&gt; の再ハッシュしきい値が返されます。</target>
        </trans-unit>
        <trans-unit id="53c9242b0ac9332f65b31c12052ac39dd627993e" translate="yes" xml:space="preserve">
          <source>This returns the square root of &lt;var&gt;arg&lt;/var&gt;. If &lt;var&gt;arg&lt;/var&gt; is finite and less than zero, &lt;code&gt;sqrt&lt;/code&gt; returns a NaN.</source>
          <target state="translated">これは、 &lt;var&gt;arg&lt;/var&gt; の平方根を返します。場合 &lt;var&gt;arg&lt;/var&gt; が有限でゼロ未満で、 &lt;code&gt;sqrt&lt;/code&gt; NaNを返します。</target>
        </trans-unit>
        <trans-unit id="74fca6aa74c9b0151073019f84401084c8b675fc" translate="yes" xml:space="preserve">
          <source>This returns the standard case table.</source>
          <target state="translated">標準ケーステーブルを返します。</target>
        </trans-unit>
        <trans-unit id="6fef992f2f7f68cd981b77499b5f90098175b79e" translate="yes" xml:space="preserve">
          <source>This returns the start position of &lt;var&gt;node&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;node&lt;/var&gt; の開始位置が返されます。</target>
        </trans-unit>
        <trans-unit id="e39dbdd0ceb66840ace5fbcfbb2be6ad8b917f75" translate="yes" xml:space="preserve">
          <source>This returns the starting position of &lt;var&gt;event&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;event&lt;/var&gt; の開始位置が返されます。</target>
        </trans-unit>
        <trans-unit id="9f04e322ee80c2dcb64c9abf54e9c39edb40b5a8" translate="yes" xml:space="preserve">
          <source>This returns the sum of two time values, using the same conversion rules as &lt;code&gt;time-subtract&lt;/code&gt;. One argument should represent a time difference rather than a point in time, as a time value that is often just a single number of elapsed seconds. Here is how to add a number of seconds to a time value:</source>
          <target state="translated">これは、 &lt;code&gt;time-subtract&lt;/code&gt; と同じ変換ルールを使用して、2つの時間値の合計を返します。1つの引数は、多くの場合、経過秒数が1つだけの時間値として、特定の時点ではなく時間差を表す必要があります。時間値に秒数を追加する方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="352062e69b75de0569ad21f6c3d66388bc6a6013" translate="yes" xml:space="preserve">
          <source>This returns the time difference &lt;var&gt;t1&lt;/var&gt; - &lt;var&gt;t2&lt;/var&gt; between two time values, as a Lisp time value. The result is exact and its clock resolution is no worse than the worse of its two arguments&amp;rsquo; resolutions. The result is floating-point only if it is infinite or a NaN. If you need the difference in units of elapsed seconds, you can convert it with &lt;code&gt;time-convert&lt;/code&gt; or &lt;code&gt;float-time&lt;/code&gt;. See &lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;Time Conversion&lt;/a&gt;.</source>
          <target state="translated">これにより、2つの時間値間の時間差 &lt;var&gt;t1&lt;/var&gt; - &lt;var&gt;t2&lt;/var&gt; がLisp時間値として返されます。結果は正確であり、そのクロック分解能は、2つの引数の分解能の悪い方よりも悪くはありません。結果は、無限またはNaNの場合にのみ浮動小数点になります。経過秒単位の差が必要な場合は、 &lt;code&gt;time-convert&lt;/code&gt; または &lt;code&gt;float-time&lt;/code&gt; を使用して変換できます。&lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;時間変換を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0075db4b2bc852afc323a3227f9d65b375602309" translate="yes" xml:space="preserve">
          <source>This returns the value of the &lt;code&gt;justification&lt;/code&gt; text property at point, or the variable &lt;code&gt;default-justification&lt;/code&gt; if there is no such text property. However, it returns &lt;code&gt;nil&lt;/code&gt; rather than &lt;code&gt;none&lt;/code&gt; to mean &amp;ldquo;don&amp;rsquo;t justify&amp;rdquo;.</source>
          <target state="translated">これは、の値を返す &lt;code&gt;justification&lt;/code&gt; 点でのtextプロパティを、または変数 &lt;code&gt;default-justification&lt;/code&gt; はそのようなテキストプロパティが存在しない場合。ただし、「正当化しない」という意味では、 &lt;code&gt;none&lt;/code&gt; ではなく &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ab6a14cacac282454ab76339669d0b9cccbe739e" translate="yes" xml:space="preserve">
          <source>This returns the value of the &lt;var&gt;property&lt;/var&gt; property stored in the property list &lt;var&gt;plist&lt;/var&gt;. It accepts a malformed &lt;var&gt;plist&lt;/var&gt; argument. If &lt;var&gt;property&lt;/var&gt; is not found in the &lt;var&gt;plist&lt;/var&gt;, it returns &lt;code&gt;nil&lt;/code&gt;. For example,</source>
          <target state="translated">これは、プロパティリスト &lt;var&gt;plist&lt;/var&gt; に格納されている &lt;var&gt;property&lt;/var&gt; プロパティの値を返します。不正な形式の &lt;var&gt;plist&lt;/var&gt; 引数を受け入れます。 &lt;var&gt;property&lt;/var&gt; が &lt;var&gt;plist&lt;/var&gt; に見つからない場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。例えば、</target>
        </trans-unit>
        <trans-unit id="1ba933afc263d6d34f28a95c674057b51925c84a" translate="yes" xml:space="preserve">
          <source>This returns the value specified in &lt;var&gt;char-table&lt;/var&gt; for a range of characters &lt;var&gt;range&lt;/var&gt;. Here are the possibilities for &lt;var&gt;range&lt;/var&gt;:</source>
          <target state="translated">この戻り値は、で指定された &lt;var&gt;char-table&lt;/var&gt; 文字の範囲に対して &lt;var&gt;range&lt;/var&gt; 。 &lt;var&gt;range&lt;/var&gt; の可能性は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ea9e5a8aa8bc095203d3523c6532bc04fa6c436c" translate="yes" xml:space="preserve">
          <source>This rule also applies to carriage return (character code 13), if that character appears in the buffer. But carriage returns usually do not appear in buffer text; they are eliminated as part of end-of-line conversion (see &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;Coding System Basics&lt;/a&gt;).</source>
          <target state="translated">この規則は、キャリッジリターン（文字コード13）がバッファーにある場合、その文字にも適用されます。ただし、キャリッジリターンは通常、バッファテキストには表示されません。これらは、行末変換の一部として削除されます（&lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;コーディングシステムの基本を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="87d7d27eb0f1ccf7ed91e2ad7708b90110efb461" translate="yes" xml:space="preserve">
          <source>This runs &lt;code&gt;window-scroll-functions&lt;/code&gt;, followed by &lt;code&gt;window-configuration-change-hook&lt;/code&gt;. See &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;.</source>
          <target state="translated">これにより、 &lt;code&gt;window-scroll-functions&lt;/code&gt; が実行され、続いて &lt;code&gt;window-configuration-change-hook&lt;/code&gt; が実行されます。&lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;ウィンドウフックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9de5c37aceb2f9334cb7face8e382ba6e1e682c1" translate="yes" xml:space="preserve">
          <source>This says that &lt;code&gt;shell-mode&lt;/code&gt; is defined in</source>
          <target state="translated">これは、 &lt;code&gt;shell-mode&lt;/code&gt; がで定義されていることを示しています</target>
        </trans-unit>
        <trans-unit id="e6088724bb93f951c4eb6c7ed08477b700f19a1d" translate="yes" xml:space="preserve">
          <source>This says to load the image from file &lt;var&gt;file&lt;/var&gt;. If &lt;var&gt;file&lt;/var&gt; is not an absolute file name, it is expanded relative to the</source>
          <target state="translated">これは、ファイル &lt;var&gt;file&lt;/var&gt; から画像をロードすることを意味します。 &lt;var&gt;file&lt;/var&gt; が絶対ファイル名でない場合は、</target>
        </trans-unit>
        <trans-unit id="136b0d51fa7856677cf7da4c7bdb2a0a2ce50013" translate="yes" xml:space="preserve">
          <source>This section describes additional variables that a major mode can set by means of &lt;var&gt;other-vars&lt;/var&gt; in &lt;code&gt;font-lock-defaults&lt;/code&gt; (see &lt;a href=&quot;font-lock-basics#Font-Lock-Basics&quot;&gt;Font Lock Basics&lt;/a&gt;).</source>
          <target state="translated">このセクションでは、メジャーモードが &lt;code&gt;font-lock-defaults&lt;/code&gt; の &lt;var&gt;other-vars&lt;/var&gt; を使用して設定できる追加の変数について説明します（「&lt;a href=&quot;font-lock-basics#Font-Lock-Basics&quot;&gt;フォントロックの基本&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="c97ca81df1d4e4851cc25d5aec68a427c578eb8d" translate="yes" xml:space="preserve">
          <source>This section describes all the simple customization types. For several of these customization types, the customization widget provides inline completion with</source>
          <target state="translated">このセクションでは、すべてのシンプルなカスタマイズタイプについて説明します。これらのカスタマイズタイプのいくつかでは、カスタマイズウィジェットは</target>
        </trans-unit>
        <trans-unit id="5757862d6dd39ad2e4194259236662bc74bd9d6e" translate="yes" xml:space="preserve">
          <source>This section describes alternative search functions which perform the full backtracking specified by the POSIX standard for regular expression matching. They continue backtracking until they have tried all possibilities and found all matches, so they can report the longest match, as required by POSIX. This is much slower, so use these functions only when you really need the longest match.</source>
          <target state="translated">このセクションでは、正規表現マッチングのためにPOSIX標準で指定された完全なバックトラックを実行する代替検索関数について説明します。これらの関数は、すべての可能性を試してすべてのマッチを見つけるまでバックトラッキングを続け、POSIXで要求されるように最長のマッチを報告することができます。これは非常に遅いので、これらの関数は最長のマッチが本当に必要な場合にのみ使用します。</target>
        </trans-unit>
        <trans-unit id="93dc64212efd2722e65d07586262634c4e25e3ac" translate="yes" xml:space="preserve">
          <source>This section describes commands that indent all the lines in the region. They return unpredictable values.</source>
          <target state="translated">ここでは、領域内のすべての行をインデントするコマンドについて説明します。これらのコマンドは予測不可能な値を返します。</target>
        </trans-unit>
        <trans-unit id="2836810fdb20390b10f1c0ccfec312382f01b6f4" translate="yes" xml:space="preserve">
          <source>This section describes constructs that are often used together with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;cond&lt;/code&gt; to express complicated conditions. The constructs &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; can also be used individually as kinds of multiple conditional constructs.</source>
          <target state="translated">このセクションでは、複雑な条件を表現するために &lt;code&gt;if&lt;/code&gt; および &lt;code&gt;cond&lt;/code&gt; と一緒に使用されることが多い構造について説明します。構築物 &lt;code&gt;and&lt;/code&gt; 及び &lt;code&gt;or&lt;/code&gt; 、複数の条件付き構築物の種類として個別に使用することができます。</target>
        </trans-unit>
        <trans-unit id="2939de5f07655fb6039ef8dda64c5825f7b065a1" translate="yes" xml:space="preserve">
          <source>This section describes convenient functions for accessing the data in a mouse button or motion event. Keyboard event data can be accessed using the same functions, but data elements that aren&amp;rsquo;t applicable to keyboard events are zero or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このセクションでは、マウスボタンまたはモーションイベントでデータにアクセスするための便利な機能について説明します。キーボードイベントデータには同じ関数を使用してアクセスできますが、キーボードイベントに適用できないデータ要素はゼロまたは &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="607a7b0b48aab5be8e32f53128987e928331b4c0" translate="yes" xml:space="preserve">
          <source>This section describes facilities for asking the user more complex questions or several similar questions.</source>
          <target state="translated">ここでは、より複雑な質問や、いくつかの類似した質問をユーザーに質問するための設備について説明します。</target>
        </trans-unit>
        <trans-unit id="79ddc32d7e3c06a192c262ce01223ee6d9001053" translate="yes" xml:space="preserve">
          <source>This section describes functions and variables for recording or manipulating terminal input. See &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;, for related functions.</source>
          <target state="translated">このセクションでは、端末入力を記録または操作するための関数と変数について説明します。関連する機能については、&lt;a href=&quot;display#Display&quot;&gt;ディスプレイを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2d5a3c334236891680f1d194252d09fa33b318e0" translate="yes" xml:space="preserve">
          <source>This section describes functions and variables used internally by the debugger.</source>
          <target state="translated">ここでは、デバッガが内部で使用する関数や変数について説明します。</target>
        </trans-unit>
        <trans-unit id="cef4dede957fdb3aabc4a03f1c4e3b6e01c9fb30" translate="yes" xml:space="preserve">
          <source>This section describes functions for converting between characters, strings and integers. &lt;code&gt;format&lt;/code&gt; (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;) and &lt;code&gt;prin1-to-string&lt;/code&gt; (see &lt;a href=&quot;output-functions#Output-Functions&quot;&gt;Output Functions&lt;/a&gt;) can also convert Lisp objects into strings. &lt;code&gt;read-from-string&lt;/code&gt; (see &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;) can convert a string representation of a Lisp object into an object. The functions &lt;code&gt;string-to-multibyte&lt;/code&gt; and &lt;code&gt;string-to-unibyte&lt;/code&gt; convert the text representation of a string (see &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;).</source>
          <target state="translated">このセクションでは、文字、文字列、整数を変換するための関数について説明します。 &lt;code&gt;format&lt;/code&gt; （ &lt;code&gt;prin1-to-string&lt;/code&gt; &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;フォーマットを&lt;/a&gt;参照）およびprin1-to-string（&lt;a href=&quot;output-functions#Output-Functions&quot;&gt;出力関数を&lt;/a&gt;参照）は、Lispオブジェクトを文字列に変換することもできます。 &lt;code&gt;read-from-string&lt;/code&gt; （&lt;a href=&quot;input-functions#Input-Functions&quot;&gt;入力関数を&lt;/a&gt;参照）は、Lispオブジェクトの文字列表現をオブジェクトに変換できます。関数 &lt;code&gt;string-to-multibyte&lt;/code&gt; および &lt;code&gt;string-to-unibyte&lt;/code&gt; は、文字列のテキスト表現を変換します（表現の&lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;変換を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="35cbe2c2fb4ed671dbe4014681b6b2d86a7db664" translate="yes" xml:space="preserve">
          <source>This section describes functions for creating a new window by &lt;em&gt;splitting&lt;/em&gt; an existing one. Note that some windows are special in the sense that these functions may fail to split them as described here. Examples of such windows are side windows (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;) and atomic windows (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;).</source>
          <target state="translated">このセクションでは、既存のウィンドウを&lt;em&gt;分割し&lt;/em&gt;て新しいウィンドウを作成するための関数について説明します。ここで説明するように、これらの関数がウィンドウを分割できない可能性があるという意味で、一部のウィンドウは特別であることに注意してください。そのような窓の例としては、側窓（参照される&lt;a href=&quot;side-windows#Side-Windows&quot;&gt;側のWindowsを&lt;/a&gt;）と原子の窓（参照&lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;アトミックWindowsの場合&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="47818cf56fc4f7e8903a6ce34c77610b7b955042" translate="yes" xml:space="preserve">
          <source>This section describes functions for directly accessing and modifying the attributes of a named face.</source>
          <target state="translated">ここでは、名前付き顔の属性に直接アクセスして変更するための関数について説明します。</target>
        </trans-unit>
        <trans-unit id="141033a3273f41ed06dd6b3e27f17379eac30a59" translate="yes" xml:space="preserve">
          <source>This section describes functions for moving across characters that have certain syntax classes.</source>
          <target state="translated">ここでは、特定の構文クラスを持つ文字をまたいで移動するための関数について説明します。</target>
        </trans-unit>
        <trans-unit id="06f7a77fcec2e0268be02cf39a4935cae6c8e26e" translate="yes" xml:space="preserve">
          <source>This section describes functions for parsing and scanning balanced expressions. We will refer to such expressions as &lt;em&gt;sexps&lt;/em&gt;, following the terminology of Lisp, even though these functions can act on languages other than Lisp. Basically, a sexp is either a balanced parenthetical grouping, a string, or a symbol (i.e., a sequence of characters whose syntax is either word constituent or symbol constituent). However, characters in the expression prefix syntax class (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;) are treated as part of the sexp if they appear next to it.</source>
          <target state="translated">このセクションでは、バランスの取れた式を解析およびスキャンするための関数について説明します。これらの関数はLisp以外の言語でも機能しますが、Lispの用語に従って、&lt;em&gt;sexps&lt;/em&gt;などの表現を参照します。基本的に、sexpは、バランスの取れた括弧で囲まれたグループ、文字列、または記号（つまり、構文が単語構成要素または記号構成要素のいずれかである文字のシーケンス）のいずれかです。ただし、式プレフィックス構文クラス（&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;構文クラス表を&lt;/a&gt;参照）の文字は、その横に表示されている場合、sexpの一部として扱われます。</target>
        </trans-unit>
        <trans-unit id="57d33f2538dacfd6efddb8fce2fddea46960a01f" translate="yes" xml:space="preserve">
          <source>This section describes functions for reading Lisp objects with the minibuffer.</source>
          <target state="translated">ここでは、ミニバッファを使ってLispオブジェクトを読み込むための関数について説明します。</target>
        </trans-unit>
        <trans-unit id="b42b78d5eec9408bd106c897f6c7b50efeb38b04" translate="yes" xml:space="preserve">
          <source>This section describes functions for resizing a window without changing the size of its frame. Because live windows do not overlap, these functions are meaningful only on frames that contain two or more windows: resizing a window also changes the size of a neighboring window. If there is just one window on a frame, its size cannot be changed except by resizing the frame (see &lt;a href=&quot;frame-size#Frame-Size&quot;&gt;Frame Size&lt;/a&gt;).</source>
          <target state="translated">このセクションでは、フレームのサイズを変更せずにウィンドウのサイズを変更するための関数について説明します。ライブウィンドウはオーバーラップしないため、これらの関数は2つ以上のウィンドウを含むフレームでのみ意味があります。ウィンドウのサイズを変更すると、隣接するウィンドウのサイズも変更されます。フレームにウィンドウが1つしかない場合は、フレームのサイズを変更する以外にサイズを変更することはできません（&lt;a href=&quot;frame-size#Frame-Size&quot;&gt;フレームサイズを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c7eb332ef0c83ed8145dea770111e02c1fc7db05" translate="yes" xml:space="preserve">
          <source>This section describes functions that accept any kind of sequence.</source>
          <target state="translated">ここでは、任意の種類のシーケンスを受け付ける関数について説明します。</target>
        </trans-unit>
        <trans-unit id="f9af78a410b908ce8ce944214cddbcacca84c3b5" translate="yes" xml:space="preserve">
          <source>This section describes functions that allow a Lisp program to convert any portion of the text in the buffer into a string.</source>
          <target state="translated">ここでは、Lispプログラムがバッファ内のテキストの任意の部分を文字列に変換するための関数について説明します。</target>
        </trans-unit>
        <trans-unit id="985654ce26f2910ad902a31cfac301e6b2b4cda1" translate="yes" xml:space="preserve">
          <source>This section describes functions that report positions of and within a window. Most of these functions report positions relative to an origin at the native position of the window&amp;rsquo;s frame (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;). Some functions report positions relative to the origin of the display of the window&amp;rsquo;s frame. In any case, the origin has the coordinates (0, 0) and X and Y coordinates increase rightward and downward respectively.</source>
          <target state="translated">このセクションでは、ウィンドウ内およびウィンドウ内の位置をレポートする関数について説明します。これらの関数のほとんどは、ウィンドウのフレームのネイティブ位置での原点を基準にした位置を報告します（&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;フレームジオメトリを&lt;/a&gt;参照）。一部の関数は、ウィンドウのフレームの表示の原点を基準にした位置を報告します。いずれの場合も、原点の座標は（0、0）で、X座標とY座標はそれぞれ右方向と下方向に増加します。</target>
        </trans-unit>
        <trans-unit id="43de4fdfa66a4fc976e043188f0db1074fb72a6b" translate="yes" xml:space="preserve">
          <source>This section describes functions to read and change the parameter values of a terminal. They all accept as their argument either a terminal or a frame; the latter means use that frame&amp;rsquo;s terminal. An argument of &lt;code&gt;nil&lt;/code&gt; means the selected frame&amp;rsquo;s terminal.</source>
          <target state="translated">このセクションでは、端末のパラメータ値を読み取って変更する関数について説明します。それらはすべて、引数として端末またはフレームのいずれかを受け入れます。後者は、そのフレームの端子を使用することを意味します。 &lt;code&gt;nil&lt;/code&gt; の引数は、選択されたフレームの端末を意味します。</target>
        </trans-unit>
        <trans-unit id="d830681066b97fc59528b1103233882bc7f7f540" translate="yes" xml:space="preserve">
          <source>This section describes functions used to ask the user a yes-or-no question. The function &lt;code&gt;y-or-n-p&lt;/code&gt; can be answered with a single character; it is useful for questions where an inadvertent wrong answer will not have serious consequences. &lt;code&gt;yes-or-no-p&lt;/code&gt; is suitable for more momentous questions, since it requires three or four characters to answer.</source>
          <target state="translated">このセクションでは、ユーザーに「はい」または「いいえ」の質問をするために使用される関数について説明します。関数 &lt;code&gt;y-or-n-p&lt;/code&gt; は、1文字で答えることができます。これは、不注意による間違った答えが深刻な結果をもたらさない質問に役立ちます。 &lt;code&gt;yes-or-no-p&lt;/code&gt; は、答えるのに3文字または4文字を必要とするため、より重大な質問に適しています。</target>
        </trans-unit>
        <trans-unit id="eb39a938eae6ae2876ea62342933b25512356802" translate="yes" xml:space="preserve">
          <source>This section describes functions used to scan all the current keymaps for the sake of printing help information.</source>
          <target state="translated">ここでは、ヘルプ情報を印刷するために、現在のキーマップをすべてスキャンするために使用する機能について説明します。</target>
        </trans-unit>
        <trans-unit id="9afe702fe12b669b1b195f12f0598f5be106c8e5" translate="yes" xml:space="preserve">
          <source>This section describes high-level functions for switching to a specified buffer in some window. In general, &amp;ldquo;switching to a buffer&amp;rdquo; means to (1) show the buffer in some window, (2) make that window the selected window (and its frame the selected frame), and (3) make the buffer the current buffer.</source>
          <target state="translated">このセクションでは、一部のウィンドウで指定されたバッファに切り替えるための高レベルの関数について説明します。一般に、「バッファへの切り替え」とは、（1）あるウィンドウにバッファを表示し、（2）そのウィンドウを選択したウィンドウ（およびそのフレームを選択したフレーム）にし、（3）バッファを現在のバッファにすることを意味します。</target>
        </trans-unit>
        <trans-unit id="6ec332a9dc15d948615fa251bfa0a29716242a29" translate="yes" xml:space="preserve">
          <source>This section describes higher-level commands for deleting text, commands intended primarily for the user but useful also in Lisp programs.</source>
          <target state="translated">このセクションでは、テキストを削除するための上位レベルのコマンド、主にユーザ向けのコマンドですが、Lisp プログラムでも有用なコマンドについて説明します。</target>
        </trans-unit>
        <trans-unit id="8ac4fa32fe571f6948a8178f90f4bb7fc08258e2" translate="yes" xml:space="preserve">
          <source>This section describes higher-level commands for inserting text, commands intended primarily for the user but useful also in Lisp programs.</source>
          <target state="translated">このセクションでは、テキストを挿入するための上位レベルのコマンド、主にユーザを対象としたコマンドを説明しますが、Lisp プログラムでも有用です。</target>
        </trans-unit>
        <trans-unit id="4e4c785134d9f7da88d1b434b45ae65e4efca867" translate="yes" xml:space="preserve">
          <source>This section describes higher-level commands for yanking, which are intended primarily for the user but useful also in Lisp programs. Both &lt;code&gt;yank&lt;/code&gt; and &lt;code&gt;yank-pop&lt;/code&gt; honor the &lt;code&gt;yank-excluded-properties&lt;/code&gt; variable and &lt;code&gt;yank-handler&lt;/code&gt; text property (see &lt;a href=&quot;yanking#Yanking&quot;&gt;Yanking&lt;/a&gt;).</source>
          <target state="translated">このセクションでは、ヤンク用の高レベルのコマンドについて説明します。これらのコマンドは、主にユーザーを対象としていますが、Lispプログラムでも役立ちます。 &lt;code&gt;yank&lt;/code&gt; と &lt;code&gt;yank-pop&lt;/code&gt; はどちらも、 &lt;code&gt;yank-excluded-properties&lt;/code&gt; 変数と &lt;code&gt;yank-handler&lt;/code&gt; テキストプロパティを&lt;a href=&quot;yanking#Yanking&quot;&gt;尊重し&lt;/a&gt;ます（Yankingを参照）。</target>
        </trans-unit>
        <trans-unit id="0244187d4fb46d383ef8949507c568b3fd5eea49" translate="yes" xml:space="preserve">
          <source>This section describes how Lisp programs can take action after a window has been scrolled or other window modifications occurred. We first consider the case where a window shows a different part of its buffer.</source>
          <target state="translated">ここでは、ウィンドウがスクロールされたり、その他のウィンドウの変更が発生した後に、Lisp プログラムがどのようなアクションを取ることができるのかを説明します。まず、ウィンドウがバッファの異なる部分を表示している場合を考えます。</target>
        </trans-unit>
        <trans-unit id="e042e288acb20b51a94bf664d993271c1f22c403" translate="yes" xml:space="preserve">
          <source>This section describes how characters are actually displayed by Emacs. Typically, a character is displayed as a &lt;em&gt;glyph&lt;/em&gt; (a graphical symbol which occupies one character position on the screen), whose appearance corresponds to the character itself. For example, the character &amp;lsquo;</source>
          <target state="translated">このセクションでは、Emacsが実際に文字を表示する方法について説明します。通常、文字は&lt;em&gt;グリフ&lt;/em&gt;（画面上の1つの文字位置を占めるグラフィックシンボル）として表示され、その外観は文字自体に対応します。たとえば、文字 '</target>
        </trans-unit>
        <trans-unit id="f97182452a5c5bafb05df99573bec827f80e1eb1" translate="yes" xml:space="preserve">
          <source>This section describes how to change the position of an existing marker. When you do this, be sure you know whether the marker is used outside of your program, and, if so, what effects will result from moving it&amp;mdash;otherwise, confusing things may happen in other parts of Emacs.</source>
          <target state="translated">このセクションでは、既存のマーカーの位置を変更する方法について説明します。これを行うときは、マーカーがプログラムの外部で使用されているかどうか、使用されている場合は、マーカーを移動するとどのような影響が生じるかを確認してください。そうしないと、Emacsの他の部分で混乱が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="724d41af9e73d940223262ab6060a0e9edeed8ab" translate="yes" xml:space="preserve">
          <source>This section describes how to control the contents of the mode line and header line. We include it in this chapter because much of the information displayed in the mode line relates to the enabled major and minor modes.</source>
          <target state="translated">ここでは、モード行とヘッダ行の内容を制御する方法を説明します。この章では、モード行に表示される情報の多くが、有効なメジャーモードとマイナーモードに関連してい るため、この章ではこの内容を説明します。</target>
        </trans-unit>
        <trans-unit id="fa59843e7588f790eb908bfe744bb4959c5b641f" translate="yes" xml:space="preserve">
          <source>This section describes how to create and manipulate abbrev tables.</source>
          <target state="translated">ここでは、省略形テーブルの作成と操作方法について説明します。</target>
        </trans-unit>
        <trans-unit id="0deb6b47df17ceb642f9f9ef7e0cee0ba90849e4" translate="yes" xml:space="preserve">
          <source>This section describes how to define new forms that &lt;code&gt;setf&lt;/code&gt; can operate on.</source>
          <target state="translated">このセクションでは、 &lt;code&gt;setf&lt;/code&gt; が操作できる新しいフォームを定義する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="5130c4e9532836c110b2ee9852e4b59bdeac3db0" translate="yes" xml:space="preserve">
          <source>This section describes how to distinguish various kinds of files, such as directories, symbolic links, and ordinary files.</source>
          <target state="translated">ここでは、ディレクトリ、シンボリックリンク、通常のファイルなど、様々な種類のファイルを区別する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="c8d97a2246f8dcd1a3f21c002a35a9f6eab51d97" translate="yes" xml:space="preserve">
          <source>This section describes how to enable and disable undo information for a given buffer. It also explains how the undo list is truncated automatically so it doesn&amp;rsquo;t get too big.</source>
          <target state="translated">このセクションでは、特定のバッファーの元に戻す情報を有効または無効にする方法について説明します。また、元に戻すリストが大きくなりすぎないように自動的に切り捨てられる方法についても説明します。</target>
        </trans-unit>
        <trans-unit id="3a3b0a73264d1667956883717ec0d0e370cc4520" translate="yes" xml:space="preserve">
          <source>This section describes how to make Emacs ring the bell (or blink the screen) to attract the user&amp;rsquo;s attention. Be conservative about how often you do this; frequent bells can become irritating. Also be careful not to use just beeping when signaling an error is more appropriate (see &lt;a href=&quot;errors#Errors&quot;&gt;Errors&lt;/a&gt;).</source>
          <target state="translated">このセクションでは、Emacsにベルを鳴らして（または画面を点滅させて）ユーザーの注意を引く方法について説明します。これを行う頻度については慎重に行ってください。頻繁なベルはイライラする可能性があります。また、エラーの通知がより適切な場合は、ビープ音だけを使用しないように注意してください（&lt;a href=&quot;errors#Errors&quot;&gt;エラーを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d2c3552281b567522a1e00f11b308775f58e423f" translate="yes" xml:space="preserve">
          <source>This section describes how to pack and unpack arrays of bytes, usually for binary network protocols. These functions convert byte arrays to alists, and vice versa. The byte array can be represented as a unibyte string or as a vector of integers, while the alist associates symbols either with fixed-size objects or with recursive sub-alists. To use the functions referred to in this section, load the &lt;code&gt;bindat&lt;/code&gt; library.</source>
          <target state="translated">このセクションでは、通常はバイナリネットワークプロトコルの場合に、バイトの配列をパックおよびアンパックする方法について説明します。これらの関数は、バイト配列をリストに、またはその逆に変換します。バイト配列は、ユニバイト文字列または整数のベクトルとして表すことができますが、アリストは、シンボルを固定サイズのオブジェクトまたは再帰的なサブアリストに関連付けます。このセクションで参照されている関数を使用するには、 &lt;code&gt;bindat&lt;/code&gt; ライブラリをロードします。</target>
        </trans-unit>
        <trans-unit id="bfe27e074a15789c4e33522757c8995e465b0cef" translate="yes" xml:space="preserve">
          <source>This section describes how to peek ahead at events without using them up, how to check for pending input, and how to discard pending input. See also the function &lt;code&gt;read-passwd&lt;/code&gt; (see &lt;a href=&quot;reading-a-password#Reading-a-Password&quot;&gt;Reading a Password&lt;/a&gt;).</source>
          <target state="translated">このセクションでは、イベントを使い切ることなく先読みする方法、保留中の入力を確認する方法、および保留中の入力を破棄する方法について説明します。関数 &lt;code&gt;read-passwd&lt;/code&gt; も参照してください（&lt;a href=&quot;reading-a-password#Reading-a-Password&quot;&gt;パスワードの読み取りを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="150d31cc898a87275de4dfed3e78035a72b41855" translate="yes" xml:space="preserve">
          <source>This section describes how to write the &lt;code&gt;interactive&lt;/code&gt; form that makes a Lisp function an interactively-callable command, and how to examine a command&amp;rsquo;s &lt;code&gt;interactive&lt;/code&gt; form.</source>
          <target state="translated">このセクションでは、Lisp関数をインタラクティブに呼び出し可能なコマンドにする &lt;code&gt;interactive&lt;/code&gt; フォームを作成する方法と、コマンドの &lt;code&gt;interactive&lt;/code&gt; フォームを調べる方法について説明します。</target>
        </trans-unit>
        <trans-unit id="1218dff17b77ab7b4b54536daebee4816069f53b" translate="yes" xml:space="preserve">
          <source>This section describes low-level functions for examining and setting the contents of windows. See &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;, for higher-level functions for displaying a specific buffer in a window.</source>
          <target state="translated">このセクションでは、ウィンドウの内容を調べて設定するための低レベルの関数について説明します。ウィンドウに特定のバッファを表示するための高レベルの関数については、「&lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;バッファの切り替え&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="2b24a3c10ef1ebe7b7d767138f5d1aba660799e7" translate="yes" xml:space="preserve">
          <source>This section describes low-level subroutines for completing a file name. For higher level functions, see &lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;Reading File Names&lt;/a&gt;.</source>
          <target state="translated">このセクションでは、ファイル名を完成させるための低レベルのサブルーチンについて説明します。高レベルの関数については、&lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;ファイル名の読み取りを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9d66065bf9aca24a2d19e5005f325822b8c7f678" translate="yes" xml:space="preserve">
          <source>This section describes lower-level functions Emacs uses to find or create a window for displaying a specified buffer. The common workhorse of these functions is &lt;code&gt;display-buffer&lt;/code&gt; which eventually handles all incoming requests for buffer display (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;).</source>
          <target state="translated">このセクションでは、Emacsが指定されたバッファーを表示するためのウィンドウを検索または作成するために使用する低レベルの関数について説明します。これらの関数の一般的な主力は、最終的にバッファー表示のすべての着信要求を処理する &lt;code&gt;display-buffer&lt;/code&gt; です（&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;ウィンドウの選択を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="cce6b6a6c3c83928852ccf09cb10c900d8680af9" translate="yes" xml:space="preserve">
          <source>This section describes simple point-motion functions that operate based on parsing expressions.</source>
          <target state="translated">ここでは、式の解析に基づいて動作する簡単なポイントモーション関数について説明します。</target>
        </trans-unit>
        <trans-unit id="387317e8a0a757eb7b94002eefc169e50440251d" translate="yes" xml:space="preserve">
          <source>This section describes some commands meant for use in the minibuffer.</source>
          <target state="translated">このセクションでは、ミニバッファで使用するためのいくつかのコマンドについて説明します。</target>
        </trans-unit>
        <trans-unit id="00e4b81b2956553bfa3ccde5e2d44cc3f7878d4e" translate="yes" xml:space="preserve">
          <source>This section describes some convenient interactive interfaces for changing key bindings. They work by calling &lt;code&gt;define-key&lt;/code&gt;.</source>
          <target state="translated">このセクションでは、キーバインディングを変更するための便利なインタラクティブインターフェイスについて説明します。それらは &lt;code&gt;define-key&lt;/code&gt; を呼び出すことによって機能します。</target>
        </trans-unit>
        <trans-unit id="47bad1cd798afdfe34fb8983742532e84dbfd4f4" translate="yes" xml:space="preserve">
          <source>This section describes some of the functions and variables for querying and using X resources, or their equivalent on your operating system. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;X Resources&lt;/a&gt; in</source>
          <target state="translated">このセクションでは、Xリソース、またはオペレーティングシステムでの同等のものをクエリして使用するための関数と変数について説明します。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;Xリソース&lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="e8f463133552be76f9660f5367852dbd00a58249" translate="yes" xml:space="preserve">
          <source>This section describes some variables that hold regular expressions used for certain purposes in editing:</source>
          <target state="translated">ここでは、編集時に使用する正規表現を保持するいくつかの変数について説明します。</target>
        </trans-unit>
        <trans-unit id="f7d186c866c28a5e49c16d8f602fe882757c3d19" translate="yes" xml:space="preserve">
          <source>This section describes the Emacs module</source>
          <target state="translated">このセクションでは、Emacs モジュールについて説明します。</target>
        </trans-unit>
        <trans-unit id="3b61f2b467eac767a29db433892f50ef3a87d728" translate="yes" xml:space="preserve">
          <source>This section describes the Lisp functions and variables that pertain to reading.</source>
          <target state="translated">ここでは、読み込みに関係するLisp関数と変数について説明します。</target>
        </trans-unit>
        <trans-unit id="57153f0cacaafd0f58f6f0f7cc9ee983fd95bfdb" translate="yes" xml:space="preserve">
          <source>This section describes the Lisp functions for printing Lisp objects&amp;mdash;converting objects into their printed representation.</source>
          <target state="translated">このセクションでは、Lispオブジェクトを印刷するためのLisp関数、つまりオブジェクトを印刷表現に変換する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="c00e2ae6dff436e62ada923a09680d42ee5cf78d" translate="yes" xml:space="preserve">
          <source>This section describes the basic interface for reading from the minibuffer with completion.</source>
          <target state="translated">ここでは、ミニバッファからの読み込みを完了させた状態で行うための基本的なインターフェースについて説明します。</target>
        </trans-unit>
        <trans-unit id="0c6319d42a6efafee3901e82d96aa39cb80ae4ef" translate="yes" xml:space="preserve">
          <source>This section describes the functions for accessing and storing associations in a hash table. In general, any Lisp object can be used as a hash key, unless the comparison method imposes limits. Any Lisp object can also be used as the value.</source>
          <target state="translated">ここでは、ハッシュテーブルに関連付けをアクセスして格納するための関数について説明します。一般的に、比較方法に制限がない限り、任意のLispオブジェクトをハッシュキーとして使用することができます。また、任意のLispオブジェクトを値として使用することもできます。</target>
        </trans-unit>
        <trans-unit id="9ba6b7689a29c354d422d2b9766be0a645aba40c" translate="yes" xml:space="preserve">
          <source>This section describes the functions for accessing the components of a marker object.</source>
          <target state="translated">マーカーオブジェクトの構成要素にアクセスするための機能について説明します。</target>
        </trans-unit>
        <trans-unit id="e7585c7802cf5f671245e39bc0a21968c91eb8ff" translate="yes" xml:space="preserve">
          <source>This section describes the functions for getting detailed information about a file, including the owner and group numbers, the number of names, the inode number, the size, and the times of access and modification.</source>
          <target state="translated">ここでは、ファイルの所有者やグループ番号、名前の数、inode番号、サイズ、アクセスや変更の時間など、ファイルの詳細な情報を取得するための機能について説明します。</target>
        </trans-unit>
        <trans-unit id="e0f5401eb4de70698ee08f0c9741c5ab0b1e12a0" translate="yes" xml:space="preserve">
          <source>This section describes the functions for retrieving various types of information about files (or directories or symbolic links), such as whether a file is readable or writable, and its size. These functions all take arguments which are file names. Except where noted, these arguments need to specify existing files, or an error is signaled.</source>
          <target state="translated">この節では、ファイル(またはディレクトリやシンボリックリンク)に関する様々なタイプの情報を取得するための関数について説明します。これらの関数はすべてファイル名である引数をとります。指定した場合を除いて、これらの引数は既存のファイルを指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="c10c26d607ccec55c2e5f7140ee66c4e54bc9885" translate="yes" xml:space="preserve">
          <source>This section describes the functions normally used to visit files. For historical reasons, these functions have names starting with &amp;lsquo;</source>
          <target state="translated">このセクションでは、ファイルにアクセスするために通常使用される機能について説明します。歴史的な理由から、これらの関数の名前は 'で始まります</target>
        </trans-unit>
        <trans-unit id="48c3a78a041a9e814520021863360bcfa75470b6" translate="yes" xml:space="preserve">
          <source>This section describes the functions to create, delete and move overlays, and to examine their contents. Overlay changes are not recorded in the buffer&amp;rsquo;s undo list, since the overlays are not part of the buffer&amp;rsquo;s contents.</source>
          <target state="translated">このセクションでは、オーバーレイを作成、削除、移動し、その内容を調べるための機能について説明します。オーバーレイはバッファの内容の一部ではないため、オーバーレイの変更はバッファの元に戻すリストに記録されません。</target>
        </trans-unit>
        <trans-unit id="812370f1b7b93b3d0db054508fcfed78371f1938" translate="yes" xml:space="preserve">
          <source>This section describes the higher-level convenience functions for reading certain sorts of names with completion.</source>
          <target state="translated">ここでは、特定の種類の名前を補完して読み取るための上位の便利な関数について説明します。</target>
        </trans-unit>
        <trans-unit id="75088aebc2a98d56641066d8d18014147f81e6ae" translate="yes" xml:space="preserve">
          <source>This section describes the keymaps, commands and user options used in the minibuffer to do completion.</source>
          <target state="translated">ここでは、補完を行うためにミニバッファで使用されるキーマップ、コマンド、ユーザーオプションについて説明します。</target>
        </trans-unit>
        <trans-unit id="37356dcd063b0ed07b1b0b5d582d678d288fb6fd" translate="yes" xml:space="preserve">
          <source>This section describes the mechanism by which Emacs shows a matching open parenthesis when the user inserts a close parenthesis.</source>
          <target state="translated">このセクションでは、ユーザが閉じた括弧を挿入したときに、Emacs が一致する開いた括弧を表示する仕組みについて説明します。</target>
        </trans-unit>
        <trans-unit id="40c660a7c361a8150a37bd3ff80cca078ea350f0" translate="yes" xml:space="preserve">
          <source>This section describes the primitive functions used to count and insert indentation. The functions in the following sections use these primitives. See &lt;a href=&quot;size-of-displayed-text#Size-of-Displayed-Text&quot;&gt;Size of Displayed Text&lt;/a&gt;, for related functions.</source>
          <target state="translated">このセクションでは、インデントをカウントして挿入するために使用されるプリミティブ関数について説明します。次のセクションの関数は、これらのプリミティブを使用します。関連する機能について&lt;a href=&quot;size-of-displayed-text#Size-of-Displayed-Text&quot;&gt;は、表示されるテキストのサイズを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="de6d56383c6730b1286c874377ff16084425dd0d" translate="yes" xml:space="preserve">
          <source>This section describes the standard functions for displaying messages in the echo area.</source>
          <target state="translated">エコー領域にメッセージを表示するための標準機能について説明します。</target>
        </trans-unit>
        <trans-unit id="285a66b80e772ca86f72f7b2368906f74deb731b" translate="yes" xml:space="preserve">
          <source>This section describes the two primitives for creating buffers. &lt;code&gt;get-buffer-create&lt;/code&gt; creates a buffer if it finds no existing buffer with the specified name; &lt;code&gt;generate-new-buffer&lt;/code&gt; always creates a new buffer and gives it a unique name.</source>
          <target state="translated">このセクションでは、バッファを作成するための2つのプリミティブについて説明します。 &lt;code&gt;get-buffer-create&lt;/code&gt; は、指定された名前の既存のバッファーが見つからない場合にバッファーを作成します。 &lt;code&gt;generate-new-buffer&lt;/code&gt; は常に新しいバッファーを作成し、それに一意の名前を付けます。</target>
        </trans-unit>
        <trans-unit id="0789513534d147c3f5d4c93a12b51253baf58490" translate="yes" xml:space="preserve">
          <source>This section describes the window parameters that can be used to associate additional information with windows.</source>
          <target state="translated">ここでは、追加情報をウィンドウに関連付けるために使用できるウィンドウパラメータについて説明します。</target>
        </trans-unit>
        <trans-unit id="8c31a7430b6a18b9a95ff129d9d711314130c97f" translate="yes" xml:space="preserve">
          <source>This section describes two commands that indent the current line based on the contents of previous lines.</source>
          <target state="translated">ここでは、前の行の内容に基づいて現在の行をインデントする2つのコマンドについて説明します。</target>
        </trans-unit>
        <trans-unit id="4c855fc414099b3af430915906080cdcfbec4adb" translate="yes" xml:space="preserve">
          <source>This section describes variables incorporated by the standard value of &lt;code&gt;mode-line-format&lt;/code&gt; into the text of the mode line. There is nothing inherently special about these variables; any other variables could have the same effects on the mode line if the value of &lt;code&gt;mode-line-format&lt;/code&gt; is changed to use them. However, various parts of Emacs set these variables on the understanding that they will control parts of the mode line; therefore, practically speaking, it is essential for the mode line to use them. Also see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Optional-Mode-Line.html#Optional-Mode-Line&quot;&gt;Optional Mode Line&lt;/a&gt; in</source>
          <target state="translated">このセクションでは、 &lt;code&gt;mode-line-format&lt;/code&gt; の標準値によってモード行のテキストに組み込まれる変数について説明します。これらの変数について本質的に特別なことは何もありません。 &lt;code&gt;mode-line-format&lt;/code&gt; の値がそれらを使用するように変更された場合、他の変数はモードラインに同じ影響を与える可能性があります。ただし、Emacsのさまざまな部分は、モードラインの一部を制御することを理解した上でこれらの変数を設定します。したがって、実際には、モードラインでそれらを使用することが不可欠です。参照してください&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Optional-Mode-Line.html#Optional-Mode-Line&quot;&gt;オプションのモード行の&lt;/a&gt;中で</target>
        </trans-unit>
        <trans-unit id="64ed9022a196b8909f39a1b1327583441fa14d2e" translate="yes" xml:space="preserve">
          <source>This section describes variables that specify the default coding system for certain files or when running certain subprograms, and the function that I/O operations use to access them.</source>
          <target state="translated">ここでは、特定のファイルや特定のサブプログラムを実行する際のデフォルトのコーディングシステムを指定する変数と、それにアクセスするためにI/O操作が使用する関数について説明します。</target>
        </trans-unit>
        <trans-unit id="46de66764c4cc059a12eb0309664143c34388a7a" translate="yes" xml:space="preserve">
          <source>This section describes what Emacs does when it is started, and how you can customize these actions.</source>
          <target state="translated">このセクションでは、Emacsが起動したときに何をするのか、また、これらのアクションをカスタマイズする方法について説明します。</target>
        </trans-unit>
        <trans-unit id="903047fb180ad2c618ff526c82c10722d15a2387" translate="yes" xml:space="preserve">
          <source>This section explains how to determine the current time and time zone.</source>
          <target state="translated">ここでは、現在の時間帯と時間帯の決め方について説明します。</target>
        </trans-unit>
        <trans-unit id="5a3df5ede6e0c1467262e624d345d71f7c0d0ff4" translate="yes" xml:space="preserve">
          <source>This section explains how to search for a file in a list of directories (a &lt;em&gt;path&lt;/em&gt;), or for an executable file in the standard list of executable file directories.</source>
          <target state="translated">このセクションでは、ディレクトリのリスト（&lt;em&gt;パス&lt;/em&gt;）でファイルを検索する方法、または実行可能ファイルディレクトリの標準リストで実行可能ファイルを検索する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="8e4623a46744ca037324529de282cc3752690ceb" translate="yes" xml:space="preserve">
          <source>This section explains how to use the match data to find out what was matched by the last search or match operation, if it succeeded.</source>
          <target state="translated">ここでは、前回の検索やマッチ操作で何がマッチしたのか、成功した場合はマッチデータを使って調べる方法を説明します。</target>
        </trans-unit>
        <trans-unit id="2d4bfabf48ae37fe06981f061c05255124ae8a0f" translate="yes" xml:space="preserve">
          <source>This section explains the mechanism for user-specified tab stops and the mechanisms that use and set them. The name &amp;ldquo;tab stops&amp;rdquo; is used because the feature is similar to that of the tab stops on a typewriter. The feature works by inserting an appropriate number of spaces and tab characters to reach the next tab stop column; it does not affect the display of tab characters in the buffer (see &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;). Note that the</source>
          <target state="translated">このセクションでは、ユーザー指定のタブストップのメカニズムと、それらを使用および設定するメカニズムについて説明します。タイプライターのタブストップと機能が似ているため、「タブストップ」という名前が使用されています。この機能は、適切な数のスペースとタブ文字を挿入して、次のタブストップ列に到達することで機能します。バッファ内のタブ文字の表示には影響しません（&lt;a href=&quot;usual-display#Usual-Display&quot;&gt;通常の表示を&lt;/a&gt;参照）。に注意してください</target>
        </trans-unit>
        <trans-unit id="7656dde734144a6f98b51ff38b0cc35f415fa7dc" translate="yes" xml:space="preserve">
          <source>This section explains the notational conventions that are used in this manual. You may want to skip this section and refer back to it later.</source>
          <target state="translated">本項では、本マニュアルで使用されている表記法について説明します。このセクションは読み飛ばして、後で参照してください。</target>
        </trans-unit>
        <trans-unit id="595a2fe62cf2d2c2a6763fbb1f5b0609ab732357" translate="yes" xml:space="preserve">
          <source>This section explains the steps involved in building the Emacs executable. You don&amp;rsquo;t have to know this material to build and install Emacs, since the makefiles do all these things automatically. This information is pertinent to Emacs developers.</source>
          <target state="translated">このセクションでは、Emacs実行可能ファイルのビルドに関連する手順について説明します。makefileはこれらすべてのことを自動的に行うので、Emacsをビルドしてインストールするためにこの資料を知る必要はありません。この情報はEmacs開発者に関係があります。</target>
        </trans-unit>
        <trans-unit id="cc6551c37ad72024ef368cf4f395f00c33e26ffb" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:extend&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;extend&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;face&lt;/var&gt; の &lt;code&gt;:extend&lt;/code&gt; 属性がextendに設定され &lt;var&gt;extend&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8130e3c260f42143e05830c8c2d04a003020396" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:inverse-video&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;inverse-video-p&lt;/var&gt;.</source>
          <target state="translated">これは、設定し &lt;code&gt;:inverse-video&lt;/code&gt; の属性 &lt;var&gt;face&lt;/var&gt; に &lt;var&gt;inverse-video-p&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab58c5ba739ca3b78ee8a04908dd595bbe8cd577" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:slant&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;normal&lt;/var&gt; if &lt;var&gt;italic-p&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and to &lt;var&gt;italic&lt;/var&gt; otherwise.</source>
          <target state="translated">このセット &lt;code&gt;:slant&lt;/code&gt; の属性 &lt;var&gt;face&lt;/var&gt; に対して &lt;var&gt;normal&lt;/var&gt; 場合 &lt;var&gt;italic-p&lt;/var&gt; で &lt;code&gt;nil&lt;/code&gt; とする &lt;var&gt;italic&lt;/var&gt; さもなければ。</target>
        </trans-unit>
        <trans-unit id="aae429b5a51966b6940b72ca36d3c8e55baa9215" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:stipple&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;pattern&lt;/var&gt;.</source>
          <target state="translated">これにより、 &lt;var&gt;face&lt;/var&gt; の &lt;code&gt;:stipple&lt;/code&gt; 属性が &lt;var&gt;pattern&lt;/var&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="dc51e75c68faa56f689729fe626d755b66ac4aa7" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:underline&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;underline&lt;/var&gt;.</source>
          <target state="translated">これが設定されます &lt;code&gt;:underline&lt;/code&gt; の属性 &lt;var&gt;face&lt;/var&gt; に &lt;var&gt;underline&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc3dd036b1f402f5fde0a7cbdfd4a1cf7d832477" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:weight&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;normal&lt;/var&gt; if &lt;var&gt;bold-p&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and to &lt;var&gt;bold&lt;/var&gt; otherwise.</source>
          <target state="translated">このセット &lt;code&gt;:weight&lt;/code&gt; の属性 &lt;var&gt;face&lt;/var&gt; に &lt;var&gt;normal&lt;/var&gt; 場合は &lt;var&gt;bold-p&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 、とに &lt;var&gt;bold&lt;/var&gt; そう。</target>
        </trans-unit>
        <trans-unit id="a90b31704ed0556eac3260ae834080377e2cf271" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;left-margin&lt;/code&gt; property on the text from &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; to the value &lt;var&gt;margin&lt;/var&gt;. If Auto Fill mode is enabled, this command also refills the region to fit the new margin.</source>
          <target state="translated">これにより、テキストの &lt;code&gt;left-margin&lt;/code&gt; プロパティが &lt;var&gt;from&lt;/var&gt; から &lt;var&gt;to&lt;/var&gt; までの値 &lt;var&gt;margin&lt;/var&gt; に設定されます。自動塗りつぶしモードが有効になっている場合、このコマンドは新しいマージンに合うように領域を塗り替えます。</target>
        </trans-unit>
        <trans-unit id="d1ee0ea030d6b5e60fbecf46e23b88fa2c2a9600" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;right-margin&lt;/code&gt; property on the text from &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; to the value &lt;var&gt;margin&lt;/var&gt;. If Auto Fill mode is enabled, this command also refills the region to fit the new margin.</source>
          <target state="translated">これにより、テキストの &lt;code&gt;right-margin&lt;/code&gt; プロパティが &lt;var&gt;from&lt;/var&gt; から &lt;var&gt;to&lt;/var&gt; までの値 &lt;var&gt;margin&lt;/var&gt; に設定されます。自動塗りつぶしモードが有効になっている場合、このコマンドは新しいマージンに合うように領域を塗り替えます。</target>
        </trans-unit>
        <trans-unit id="f73862b238b47e68dd753897ce88766db86396f4" translate="yes" xml:space="preserve">
          <source>This sets the current buffer&amp;rsquo;s case table to &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">これにより、現在のバッファのケーステーブルが &lt;var&gt;table&lt;/var&gt; 設定されます。</target>
        </trans-unit>
        <trans-unit id="80548e91ba60b7200de2595a22b9c550cdcd3d22" translate="yes" xml:space="preserve">
          <source>This sets the data encapsulated by &lt;var&gt;node&lt;/var&gt; to &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="translated">これはセットによってカプセル化されたデータ &lt;var&gt;node&lt;/var&gt; に &lt;var&gt;data&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c88140b2b937c3f191e83a4184a47abc4068cb6d" translate="yes" xml:space="preserve">
          <source>This sets the default font to &lt;var&gt;font&lt;/var&gt;. When called interactively, it prompts for the name of a font, and uses that font on the selected frame. When called from Lisp, &lt;var&gt;font&lt;/var&gt; should be a font name (a string), a font object, font entity, or a font spec.</source>
          <target state="translated">これにより、デフォルトのフォントが &lt;var&gt;font&lt;/var&gt; に設定されます。インタラクティブに呼び出されると、フォントの名前の入力を求められ、選択したフレームでそのフォントが使用されます。Lispから呼び出される場合、 &lt;var&gt;font&lt;/var&gt; はフォント名（文字列）、フォントオブジェクト、フォントエンティティ、またはフォント仕様である必要があります。</target>
        </trans-unit>
        <trans-unit id="9d634cf9fbe27ab76656fdf6f42e627e63c40c88" translate="yes" xml:space="preserve">
          <source>This sets the face for the fringe bitmap &lt;var&gt;bitmap&lt;/var&gt; to &lt;var&gt;face&lt;/var&gt;. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it selects the &lt;code&gt;fringe&lt;/code&gt; face. The bitmap&amp;rsquo;s face controls the color to draw it in.</source>
          <target state="translated">これは、フリンジビットマップのための顔設定し &lt;var&gt;bitmap&lt;/var&gt; に &lt;var&gt;face&lt;/var&gt; 。 &lt;var&gt;face&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 場合、 &lt;code&gt;fringe&lt;/code&gt; 面を選択します。ビットマップの面は、ビットマップを描画するための色を制御します。</target>
        </trans-unit>
        <trans-unit id="1c5a72da0843442603e016c15b83b60edada19c7" translate="yes" xml:space="preserve">
          <source>This sets the header and footer of &lt;var&gt;ewoc&lt;/var&gt; to the strings &lt;var&gt;header&lt;/var&gt; and &lt;var&gt;footer&lt;/var&gt;, respectively.</source>
          <target state="translated">これにより、 &lt;var&gt;ewoc&lt;/var&gt; の &lt;var&gt;header&lt;/var&gt; と &lt;var&gt;footer&lt;/var&gt; がそれぞれ文字列のヘッダーとフッターに設定されます。</target>
        </trans-unit>
        <trans-unit id="04391319040686e843d56c5f21cecccf5cd326eb" translate="yes" xml:space="preserve">
          <source>This sets the parent keymap of &lt;var&gt;keymap&lt;/var&gt; to &lt;var&gt;parent&lt;/var&gt;, and returns &lt;var&gt;parent&lt;/var&gt;. If &lt;var&gt;parent&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function gives &lt;var&gt;keymap&lt;/var&gt; no parent at all.</source>
          <target state="translated">これはの親キーマップ設定 &lt;var&gt;keymap&lt;/var&gt; の &lt;var&gt;parent&lt;/var&gt; 、およびリターンの &lt;var&gt;parent&lt;/var&gt; 。 &lt;var&gt;parent&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、この関数は &lt;var&gt;keymap&lt;/var&gt; 親をまったく与えません。</target>
        </trans-unit>
        <trans-unit id="5fd1d959bf3eee4035314d15ad7dcc57aa8e0c7c" translate="yes" xml:space="preserve">
          <source>This sets up a timer that calls the function &lt;var&gt;function&lt;/var&gt; with arguments &lt;var&gt;args&lt;/var&gt; at time &lt;var&gt;time&lt;/var&gt;. If &lt;var&gt;repeat&lt;/var&gt; is a number (integer or floating point), the timer is scheduled to run again every &lt;var&gt;repeat&lt;/var&gt; seconds after &lt;var&gt;time&lt;/var&gt;. If &lt;var&gt;repeat&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the timer runs only once.</source>
          <target state="translated">これは、関数呼び出し、タイマー設定 &lt;var&gt;function&lt;/var&gt; 引数付き &lt;var&gt;args&lt;/var&gt; 時間で &lt;var&gt;time&lt;/var&gt; 。場合は &lt;var&gt;repeat&lt;/var&gt; 数（整数または浮動小数点）で、タイマは再び、すべて実行するようにスケジュールされる &lt;var&gt;repeat&lt;/var&gt; た後秒 &lt;var&gt;time&lt;/var&gt; 。場合は &lt;var&gt;repeat&lt;/var&gt; ある &lt;code&gt;nil&lt;/code&gt; 、タイマーは1回だけ実行されます。</target>
        </trans-unit>
        <trans-unit id="0d746b10f65277e46c48ffc8379f07a74da098ed" translate="yes" xml:space="preserve">
          <source>This setting will cause &lt;code&gt;display-buffer&lt;/code&gt; to first try to find a window showing the buffer on a visible or iconified frame and, if no such frame exists, pop up a new frame. You can observe this behavior on a graphical system by typing</source>
          <target state="translated">この設定により、 &lt;code&gt;display-buffer&lt;/code&gt; は最初に、表示またはアイコン化されたフレームでバッファーを表示しているウィンドウを見つけようとし、そのようなフレームが存在しない場合は、新しいフレームをポップアップします。次のように入力すると、グラフィカルシステムでこの動作を確認できます。</target>
        </trans-unit>
        <trans-unit id="e4c48ab26b54a2b63a4fc53550334fbca5ebfb47" translate="yes" xml:space="preserve">
          <source>This should be a number, where values higher than 1 means to increase the size, and lower means to decrease the size, by multiplying both the width and height. For instance, a value of 0.25 will make the image a quarter size of what it originally was. If the scaling makes the image larger than specified by &lt;code&gt;:max-width&lt;/code&gt; or &lt;code&gt;:max-height&lt;/code&gt;, the resulting size will not exceed those two values. If both &lt;code&gt;:scale&lt;/code&gt; and &lt;code&gt;:height&lt;/code&gt;/&lt;code&gt;:width&lt;/code&gt; are specified, the height/width will be adjusted by the specified scaling factor.</source>
          <target state="translated">これは数値である必要があります。1より大きい値はサイズを大きくすることを意味し、小さい値は幅と高さの両方を乗算してサイズを小さくすることを意味します。たとえば、値が0.25の場合、画像は元のサイズの1/4サイズになります。スケーリングによって画像が &lt;code&gt;:max-width&lt;/code&gt; または &lt;code&gt;:max-height&lt;/code&gt; で指定されたサイズよりも大きくなる場合、結果のサイズはこれら2つの値を超えません。両方の場合 &lt;code&gt;:scale&lt;/code&gt; および &lt;code&gt;:height&lt;/code&gt; / &lt;code&gt;:width&lt;/code&gt; 指定され、高さ/幅は、指定されたスケーリングファクタによって調整されます。</target>
        </trans-unit>
        <trans-unit id="ca351ac6c1fcb484569ed8051d8b192cce01a187" translate="yes" xml:space="preserve">
          <source>This shows the symmetry of the lowest-level operations; reading and writing handle things in opposite order. The rest of this section describes the two facilities surrounding the three variables named above, as well as some related functions. &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;, for details on character encoding and decoding.</source>
          <target state="translated">これは、最下位レベルの操作の対称性を示しています。読み取りと書き込みは逆の順序で処理します。このセクションの残りの部分では、上記の3つの変数を取り巻く2つの機能と、いくつかの関連する関数について説明します。文字エンコードとデコードの詳細については、&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;コーディングシステム&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e3159399b391899969ef053a921d0c0eddf8f82" translate="yes" xml:space="preserve">
          <source>This simple expression is placed in a separate function to make it easy to redefine for customization.</source>
          <target state="translated">このシンプルな式は別の関数に配置され、カスタマイズのための再定義が簡単にできるようになっています。</target>
        </trans-unit>
        <trans-unit id="584276a26501f4379ac07846055e032002721c0a" translate="yes" xml:space="preserve">
          <source>This situation is best understood in the context of converting text properties during &lt;code&gt;write-region&lt;/code&gt;. For example, the character at position 42 in a buffer is &amp;lsquo;</source>
          <target state="translated">この状況は、 &lt;code&gt;write-region&lt;/code&gt; 中にテキストプロパティを変換するコンテキストで最もよく理解されます。たとえば、バッファ内の位置42の文字は 'です。</target>
        </trans-unit>
        <trans-unit id="64982cd3f5798a3266f75f2afef44d0de9678e82" translate="yes" xml:space="preserve">
          <source>This sort of element specifies several &lt;var&gt;highlighter&lt;/var&gt; lists for a single &lt;var&gt;matcher&lt;/var&gt;. A &lt;var&gt;highlighter&lt;/var&gt; list can be of the type &lt;var&gt;subexp-highlighter&lt;/var&gt; or &lt;var&gt;anchored-highlighter&lt;/var&gt; as described above.</source>
          <target state="translated">この種の要素は、単一の &lt;var&gt;matcher&lt;/var&gt; に対して複数の &lt;var&gt;highlighter&lt;/var&gt; リストを指定します。 &lt;var&gt;highlighter&lt;/var&gt; リストは、タイプのものであってもよい &lt;var&gt;subexp-highlighter&lt;/var&gt; または &lt;var&gt;anchored-highlighter&lt;/var&gt; 上記のように。</target>
        </trans-unit>
        <trans-unit id="ce9211df654da30cc4c774e536fa2f8e48ebc6b3" translate="yes" xml:space="preserve">
          <source>This special form declares that a function is a command, and that it may therefore be called interactively (via</source>
          <target state="translated">この特別な形式は、関数がコマンドであることを宣言し、それゆえに対話的に呼び出される可能性があることを宣言します。</target>
        </trans-unit>
        <trans-unit id="28dd7b27677277ba15ffcea1d4402a691396d24f" translate="yes" xml:space="preserve">
          <source>This special form defines &lt;var&gt;symbol&lt;/var&gt; as a value and initializes it. It informs a person reading your code that &lt;var&gt;symbol&lt;/var&gt; has a standard global value, established here, that should not be changed by the user or by other programs. Note that &lt;var&gt;symbol&lt;/var&gt; is not evaluated; the symbol to be defined must appear explicitly in the &lt;code&gt;defconst&lt;/code&gt;.</source>
          <target state="translated">この特殊な形式は、 &lt;var&gt;symbol&lt;/var&gt; を値として定義し、それを初期化します。これは、コードを読んでいる人に、 &lt;var&gt;symbol&lt;/var&gt; がここで確立された標準のグローバル値を持っていることを通知します。これは、ユーザーや他のプログラムによって変更されるべきではありません。 &lt;var&gt;symbol&lt;/var&gt; は評価されないことに注意してください。定義するシンボルは、 &lt;code&gt;defconst&lt;/code&gt; に明示的に表示する必要があります。</target>
        </trans-unit>
        <trans-unit id="44c5c12c983baac190e9ec9f02642c715903a677" translate="yes" xml:space="preserve">
          <source>This special form defines &lt;var&gt;symbol&lt;/var&gt; as a variable. Note that &lt;var&gt;symbol&lt;/var&gt; is not evaluated; the symbol to be defined should appear explicitly in the &lt;code&gt;defvar&lt;/code&gt; form. The variable is marked as &lt;em&gt;special&lt;/em&gt;, meaning that it should always be dynamically bound (see &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;).</source>
          <target state="translated">この特殊な形式は、 &lt;var&gt;symbol&lt;/var&gt; を変数として定義します。 &lt;var&gt;symbol&lt;/var&gt; は評価されないことに注意してください。定義するシンボルは、 &lt;code&gt;defvar&lt;/code&gt; 形式で明示的に表示する必要があります。変数は&lt;em&gt;特別なもの&lt;/em&gt;としてマークされています。つまり、常に動的にバインドする必要があります（&lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;変数のスコープを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="aef7bf0c67cbe574cae7cb7cced475c660e0388d" translate="yes" xml:space="preserve">
          <source>This special form establishes the error handlers &lt;var&gt;handlers&lt;/var&gt; around the execution of &lt;var&gt;protected-form&lt;/var&gt;. If &lt;var&gt;protected-form&lt;/var&gt; executes without error, the value it returns becomes the value of the &lt;code&gt;condition-case&lt;/code&gt; form; in this case, the &lt;code&gt;condition-case&lt;/code&gt; has no effect. The &lt;code&gt;condition-case&lt;/code&gt; form makes a difference when an error occurs during &lt;var&gt;protected-form&lt;/var&gt;.</source>
          <target state="translated">この特別なフォームは、 &lt;var&gt;protected-form&lt;/var&gt; の実行に関するエラーハンドラー &lt;var&gt;handlers&lt;/var&gt; 確立します。場合 &lt;var&gt;protected-form&lt;/var&gt; エラーなしで実行される、それは戻り値の値となる &lt;code&gt;condition-case&lt;/code&gt; 形態を、この場合、 &lt;code&gt;condition-case&lt;/code&gt; は効果がありません。 &lt;code&gt;condition-case&lt;/code&gt; エラーが中に発生した場合、フォームは、違いを &lt;var&gt;protected-form&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b82c5527174a8c879580e2c4c03d52282e1cc4d" translate="yes" xml:space="preserve">
          <source>This special form evaluates &lt;var&gt;form1&lt;/var&gt; and all of the &lt;var&gt;forms&lt;/var&gt;, in textual order, returning the result of &lt;var&gt;form1&lt;/var&gt;.</source>
          <target state="translated">このスペシャルフォームは、評価 &lt;var&gt;form1&lt;/var&gt; のすべて &lt;var&gt;forms&lt;/var&gt; した結果返す、テキストのために、 &lt;var&gt;form1&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="264a11e6a2d63044cc3557eb49b8c98b48f173e4" translate="yes" xml:space="preserve">
          <source>This special form evaluates &lt;var&gt;form1&lt;/var&gt;, &lt;var&gt;form2&lt;/var&gt;, and all of the following &lt;var&gt;forms&lt;/var&gt;, in textual order, returning the result of &lt;var&gt;form2&lt;/var&gt;.</source>
          <target state="translated">このスペシャルフォーム評価する &lt;var&gt;form1&lt;/var&gt; 、 &lt;var&gt;form2&lt;/var&gt; し、次のすべて &lt;var&gt;forms&lt;/var&gt; の結果を返すテキストのために、 &lt;var&gt;form2&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb99abb8e0181d4d27838d8be018a6b83c5d7d2e" translate="yes" xml:space="preserve">
          <source>This special form evaluates all of the &lt;var&gt;forms&lt;/var&gt;, in textual order, returning the result of the final form.</source>
          <target state="translated">この特別なフォームは、すべての &lt;var&gt;forms&lt;/var&gt; をテキスト順に評価し、最終的なフォームの結果を返します。</target>
        </trans-unit>
        <trans-unit id="d0978706853a1b24de3d942777b01b642f856ba1" translate="yes" xml:space="preserve">
          <source>This special form gives each &lt;var&gt;symbol&lt;/var&gt; a new default value, which is the result of evaluating the corresponding &lt;var&gt;form&lt;/var&gt;. It does not evaluate &lt;var&gt;symbol&lt;/var&gt;, but does evaluate &lt;var&gt;form&lt;/var&gt;. The value of the &lt;code&gt;setq-default&lt;/code&gt; form is the value of the last &lt;var&gt;form&lt;/var&gt;.</source>
          <target state="translated">この特別な形式は、対応する &lt;var&gt;form&lt;/var&gt; を評価した結果である新しいデフォルト値を各 &lt;var&gt;symbol&lt;/var&gt; 与えます。 &lt;var&gt;symbol&lt;/var&gt; は評価しませんが、 &lt;var&gt;form&lt;/var&gt; は評価します。値 &lt;code&gt;setq-default&lt;/code&gt; 形式は、最後の値である &lt;var&gt;form&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c676779da66f5ffe35440dff400bd9502ca2be7" translate="yes" xml:space="preserve">
          <source>This special form is like &lt;code&gt;let*&lt;/code&gt;, but all the variables are bound before any of the local values are computed. The values are then assigned to the locally bound variables. This is only useful when lexical binding is in effect, and you want to create closures that refer to bindings that would otherwise not yet be in effect when using &lt;code&gt;let*&lt;/code&gt;.</source>
          <target state="translated">この特殊な形式は &lt;code&gt;let*&lt;/code&gt; に似ていますが、ローカル値が計算される前にすべての変数がバインドされます。次に、値はローカルにバインドされた変数に割り当てられます。これは、字句バインディングが有効であり、 &lt;code&gt;let*&lt;/code&gt; を使用したときにまだ有効になっていないバインディングを参照するクロージャーを作成する場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="a6a29db6dbf25f40b7c3f2e5454d38aa2ec66ed8" translate="yes" xml:space="preserve">
          <source>This special form is like &lt;code&gt;let&lt;/code&gt;, but it binds each variable right after computing its local value, before computing the local value for the next variable. Therefore, an expression in &lt;var&gt;bindings&lt;/var&gt; can refer to the preceding symbols bound in this &lt;code&gt;let*&lt;/code&gt; form. Compare the following example with the example above for &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">この特殊な形式は &lt;code&gt;let&lt;/code&gt; に似ていますが、ローカル値を計算した直後、次の変数のローカル値を計算する前に、各変数をバインドします。したがって、 &lt;var&gt;bindings&lt;/var&gt; 内の式は、この &lt;code&gt;let*&lt;/code&gt; 形式でバインドされた先行するシンボルを参照できます。次の例を上記の &lt;code&gt;let&lt;/code&gt; の例と比較してください。</target>
        </trans-unit>
        <trans-unit id="16ed39c262cfc01a3b86e18e6247c39ca8fc1d45" translate="yes" xml:space="preserve">
          <source>This special form is the most common method of changing a variable&amp;rsquo;s value. Each &lt;var&gt;symbol&lt;/var&gt; is given a new value, which is the result of evaluating the corresponding &lt;var&gt;form&lt;/var&gt;. The current binding of the symbol is changed.</source>
          <target state="translated">この特殊な形式は、変数の値を変更する最も一般的な方法です。各 &lt;var&gt;symbol&lt;/var&gt; は、対応する &lt;var&gt;form&lt;/var&gt; を評価した結果である新しい値が与えられます。シンボルの現在のバインディングが変更されます。</target>
        </trans-unit>
        <trans-unit id="a33e53aa9f331f7cfc924713142588561b38eb8c" translate="yes" xml:space="preserve">
          <source>This special form returns &lt;var&gt;function-object&lt;/var&gt; without evaluating it. In this, it is similar to &lt;code&gt;quote&lt;/code&gt; (see &lt;a href=&quot;quoting#Quoting&quot;&gt;Quoting&lt;/a&gt;). But unlike &lt;code&gt;quote&lt;/code&gt;, it also serves as a note to the Emacs evaluator and byte-compiler that &lt;var&gt;function-object&lt;/var&gt; is intended to be used as a function. Assuming &lt;var&gt;function-object&lt;/var&gt; is a valid lambda expression, this has two effects:</source>
          <target state="translated">この特殊な形式は、 &lt;var&gt;function-object&lt;/var&gt; を評価せずに返します。これでは、 &lt;code&gt;quote&lt;/code&gt; に似ています（&lt;a href=&quot;quoting#Quoting&quot;&gt;Quotingを&lt;/a&gt;参照）。しかし、 &lt;code&gt;quote&lt;/code&gt; とは異なり、 &lt;var&gt;function-object&lt;/var&gt; は関数として使用されることを意図しているというEmacsエバリュエーターとバイトコンパイラーへのメモとしても機能します。 &lt;var&gt;function-object&lt;/var&gt; が有効なラムダ式であるとすると、これには2つの効果があります。</target>
        </trans-unit>
        <trans-unit id="91207eb1ac837c15393b1238eabb01fa5a18c2de" translate="yes" xml:space="preserve">
          <source>This special form returns &lt;var&gt;object&lt;/var&gt;, without evaluating it. The returned value might be shared and should not be modified. See &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Self-Evaluating Forms&lt;/a&gt;.</source>
          <target state="translated">この特殊なフォームは、 &lt;var&gt;object&lt;/var&gt; を評価せずに返します。戻り値は共有される可能性があるため、変更しないでください。&lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;自己評価フォームを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e263baabd2d21b25cf9933e4bfe225bb216dcf20" translate="yes" xml:space="preserve">
          <source>This special form saves the current bounds of the accessible portion, evaluates the &lt;var&gt;body&lt;/var&gt; forms, and finally restores the saved bounds, thus restoring the same state of narrowing (or absence thereof) formerly in effect. The state of narrowing is restored even in the event of an abnormal exit via &lt;code&gt;throw&lt;/code&gt; or error (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;). Therefore, this construct is a clean way to narrow a buffer temporarily.</source>
          <target state="translated">この特別なフォームは、アクセス可能な部分の現在の境界を保存し、 &lt;var&gt;body&lt;/var&gt; フォームを評価し、最後に保存された境界を復元します。これにより、以前に有効だった同じナローイング（またはその欠如）の状態が復元されます。 &lt;code&gt;throw&lt;/code&gt; またはエラーによる異常な終了が発生した場合でも、ナローイングの状態が復元されます（&lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;非ローカル&lt;/a&gt;終了を参照）。したがって、この構成は、バッファーを一時的に絞り込むためのクリーンな方法です。</target>
        </trans-unit>
        <trans-unit id="5cc6973e4a1690df87e779d2a83831c124d6fe90" translate="yes" xml:space="preserve">
          <source>This special form saves the identity of the current buffer and the value of point in it, evaluates &lt;var&gt;body&lt;/var&gt;, and finally restores the buffer and its saved value of point. Both saved values are restored even in case of an abnormal exit via &lt;code&gt;throw&lt;/code&gt; or error (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;).</source>
          <target state="translated">この特殊な形式は、現在のバッファーのIDとその中のポイントの値を保存し、 &lt;var&gt;body&lt;/var&gt; 評価し、最後にバッファーとその保存されたポイントの値を復元します。 &lt;code&gt;throw&lt;/code&gt; またはエラーによる異常な終了の場合でも、保存された両方の値が復元されます（&lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;非ローカル&lt;/a&gt;終了を参照）。</target>
        </trans-unit>
        <trans-unit id="cd6c4fcda7a2089f2d7f8d8eff82a403a84ab6ae" translate="yes" xml:space="preserve">
          <source>This special form sets up local bindings for a certain set of variables, as specified by &lt;var&gt;bindings&lt;/var&gt;, and then evaluates all of the &lt;var&gt;forms&lt;/var&gt; in textual order. Its return value is the value of the last form in &lt;var&gt;forms&lt;/var&gt;. The local bindings set up by &lt;code&gt;let&lt;/code&gt; will be in effect only within the body of &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">この特別なフォームは、 &lt;var&gt;bindings&lt;/var&gt; で指定されているように、特定の変数セットのローカルバインディングを設定し、すべての &lt;var&gt;forms&lt;/var&gt; をテキスト順に評価します。その戻り値はの最後のフォームの値である &lt;var&gt;forms&lt;/var&gt; 。 &lt;code&gt;let&lt;/code&gt; によって設定されたローカルバインディングは、 &lt;var&gt;forms&lt;/var&gt; の本体内でのみ有効になります。</target>
        </trans-unit>
        <trans-unit id="8ba16b0c0709545a810b20f23771ee985821abb5" translate="yes" xml:space="preserve">
          <source>This special property records a list of functions that react to cursor motion. Each function in the list is called, just before redisplay, with 3 arguments: the affected window, the previous known position of the cursor, and one of the symbols &lt;code&gt;entered&lt;/code&gt; or &lt;code&gt;left&lt;/code&gt;, depending on whether the cursor is entering the text that has this property or leaving it. The functions are called only when the minor mode &lt;code&gt;cursor-sensor-mode&lt;/code&gt; is turned on.</source>
          <target state="translated">この特別なプロパティは、カーソルの動きに反応する関数のリストを記録します。リスト内の各関数は、再表示の直前に3つの引数で呼び出されます。影響を受けるウィンドウ、カーソルの以前の既知の位置、およびカーソルがこのプロパティを持つテキストを入力しているかどうかに応じて、 &lt;code&gt;entered&lt;/code&gt; または &lt;code&gt;left&lt;/code&gt; の記号の1つです。またはそれを残します。これらの関数は、マイナーモードの &lt;code&gt;cursor-sensor-mode&lt;/code&gt; がオンになっている場合にのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="97d8e4b9e4535b8ad3a6ea6a3461c5a524fe91be" translate="yes" xml:space="preserve">
          <source>This specializer requires the argument be &lt;code&gt;eql&lt;/code&gt; to the given &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">この &lt;code&gt;eql&lt;/code&gt; は、引数が指定された &lt;var&gt;object&lt;/var&gt; eqlである必要があります。</target>
        </trans-unit>
        <trans-unit id="8e463a055dfec13e57cff30b0d309557a0007f63" translate="yes" xml:space="preserve">
          <source>This specializer requires the argument to be of the given &lt;var&gt;type&lt;/var&gt;, one of the types from the type hierarchy described below.</source>
          <target state="translated">このスペシャライザーでは、引数が指定された &lt;var&gt;type&lt;/var&gt; である必要があります。これは、以下で説明するタイプ階層のタイプの1つです。</target>
        </trans-unit>
        <trans-unit id="c82c41eac63a3e2908a3e1f1922a6ead4ab20220" translate="yes" xml:space="preserve">
          <source>This specification together with &lt;code&gt;image&lt;/code&gt; specifies a &lt;em&gt;slice&lt;/em&gt; (a partial area) of the image to display. The elements &lt;var&gt;y&lt;/var&gt; and &lt;var&gt;x&lt;/var&gt; specify the top left corner of the slice, within the image; &lt;var&gt;width&lt;/var&gt; and &lt;var&gt;height&lt;/var&gt; specify the width and height of the slice. Integers are numbers of pixels. A floating-point number in the range 0.0&amp;ndash;1.0 stands for that fraction of the width or height of the entire image.</source>
          <target state="translated">この仕様は、 &lt;code&gt;image&lt;/code&gt; とともに、表示する画像の&lt;em&gt;スライス&lt;/em&gt;（部分領域）を指定します。要素 &lt;var&gt;y&lt;/var&gt; と &lt;var&gt;x&lt;/var&gt; は、画像内のスライスの左上隅を指定します。 &lt;var&gt;width&lt;/var&gt; と &lt;var&gt;height&lt;/var&gt; は、スライスの幅と高さを指定します。整数はピクセル数です。0.0〜1.0の範囲の浮動小数点数は、画像全体の幅または高さのその部分を表します。</target>
        </trans-unit>
        <trans-unit id="603bee7cf5faa4b185cf146adf2053aaf175fade" translate="yes" xml:space="preserve">
          <source>This specifies &lt;code&gt;display-buffer-alist&lt;/code&gt; entries (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) for buffers with fixed names. In particular, it asks for showing</source>
          <target state="translated">これは、固定名のバッファーの &lt;code&gt;display-buffer-alist&lt;/code&gt; エントリー（「&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;ウィンドウの選択」を&lt;/a&gt;参照）を指定します。特に、見せてほしい</target>
        </trans-unit>
        <trans-unit id="08c2b1fdcea51a014ac8acf0cd667967e92d4c87" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;code&gt;completion-boundaries&lt;/code&gt; operation. The function should return &lt;code&gt;(boundaries &lt;var&gt;start&lt;/var&gt; . &lt;var&gt;end&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;start&lt;/var&gt; is the position of the beginning boundary in the specified string, and &lt;var&gt;end&lt;/var&gt; is the position of the end boundary in &lt;var&gt;suffix&lt;/var&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;completion-boundaries&lt;/code&gt; 操作を指定します。この関数は返す必要があります &lt;code&gt;(boundaries &lt;var&gt;start&lt;/var&gt; . &lt;var&gt;end&lt;/var&gt;)&lt;/code&gt; 場所、 &lt;var&gt;start&lt;/var&gt; 指定された文字列で始まる境界の位置であり、そして &lt;var&gt;end&lt;/var&gt; 終了境界での位置である &lt;var&gt;suffix&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="008094b58d31ed22d08e10e2f1857317a76409ef" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;code&gt;test-completion&lt;/code&gt; operation. The function should return &lt;code&gt;t&lt;/code&gt; if the specified string is an exact match for some completion alternative; &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">これは、 &lt;code&gt;test-completion&lt;/code&gt; 操作を指定します。指定された文字列が何らかの補完の選択肢と完全に一致する場合、関数は &lt;code&gt;t&lt;/code&gt; を返す必要があります。それ以外の場合は &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc4b46d1ccd6ed412576e73946e870435c93aabe" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;code&gt;try-completion&lt;/code&gt; operation. The function should return &lt;code&gt;nil&lt;/code&gt; if there are no matches; it should return &lt;code&gt;t&lt;/code&gt; if the specified string is a unique and exact match; and it should return the longest common prefix substring of all matches otherwise.</source>
          <target state="translated">これは、 &lt;code&gt;try-completion&lt;/code&gt; 操作を指定します。一致するものがない場合、関数は &lt;code&gt;nil&lt;/code&gt; を返す必要があります。指定された文字列が一意で完全に一致する場合は、 &lt;code&gt;t&lt;/code&gt; を返す必要があります。それ以外の場合は、すべての一致の中で最も長い共通プレフィックス部分文字列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="ce6c2cebbed4f94eb1f2b1e4c5cc7e35ad712e34" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;em&gt;default key binding&lt;/em&gt;; any event not bound by other elements of the keymap is given &lt;var&gt;binding&lt;/var&gt; as its binding. Default bindings allow a keymap to bind all possible event types without having to enumerate all of them. A keymap that has a default binding completely masks any lower-precedence keymap, except for events explicitly bound to &lt;code&gt;nil&lt;/code&gt; (see below).</source>
          <target state="translated">これは、&lt;em&gt;デフォルトのキーバインディングを&lt;/em&gt;指定し&lt;em&gt;ます&lt;/em&gt;。キーマップの他の要素によってバインドされていないイベントには、そのバインディングとして &lt;var&gt;binding&lt;/var&gt; が与えられます。デフォルトのバインディングにより、キーマップはすべての可能なイベントタイプをすべて列挙しなくてもバインドできます。デフォルトのバインディングを持つキーマップは、明示的に &lt;code&gt;nil&lt;/code&gt; にバインドされたイベントを除いて、優先順位の低いキーマップを完全にマスクします（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="b1591cb7fa920771f20d99fc9c87c33dd446a04e" translate="yes" xml:space="preserve">
          <source>This specifies a binding which is also a simple menu item that displays as &lt;var&gt;item-name&lt;/var&gt; in the menu. See &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;Simple Menu Items&lt;/a&gt;.</source>
          <target state="translated">これは、メニューに &lt;var&gt;item-name&lt;/var&gt; として表示される単純なメニュー項目でもあるバインディングを指定します。&lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;シンプルなメニュー項目を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cbdb2a8248313643bdd6bdff1df0b66eda0349c3" translate="yes" xml:space="preserve">
          <source>This specifies a binding which is also an extended menu item. This allows use of other features. See &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;Extended Menu Items&lt;/a&gt;.</source>
          <target state="translated">これは、拡張メニュー項目でもあるバインディングを指定します。これにより、他の機能を使用できます。&lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;拡張メニュー項目を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c7c26887681428ea3c0030e96ac728026adffd5a" translate="yes" xml:space="preserve">
          <source>This specifies a buffer or a string as described above, but an optional range can be specified with &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">これは、上記のようにバッファまたは文字列を指定しますが、オプションの範囲は &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; で指定できます。</target>
        </trans-unit>
        <trans-unit id="8754fe872cbff2346f1a6701ecb39512d99130a4" translate="yes" xml:space="preserve">
          <source>This specifies a conversion algorithm that should be applied to the image before it is displayed; the value, &lt;var&gt;algorithm&lt;/var&gt;, specifies which algorithm.</source>
          <target state="translated">これは、画像が表示される前に画像に適用する必要がある変換アルゴリズムを指定します。値 &lt;var&gt;algorithm&lt;/var&gt; は、どのアルゴリズムを指定します。</target>
        </trans-unit>
        <trans-unit id="ec2378a6a4e4f5f35a38fa225e37a4f493c8e458" translate="yes" xml:space="preserve">
          <source>This specifies a delay in seconds after which auto-selection triggers. The window under the mouse pointer is selected after the mouse has remained in it for the entire duration of the delay.</source>
          <target state="translated">自動選択が開始されるまでの遅延時間を秒単位で指定します。マウスポインタの下にあるウィンドウは、遅延時間の間ずっとマウスがその中に留まっていると選択されます。</target>
        </trans-unit>
        <trans-unit id="420eaeb6676c9efeacc1606fc52cb8a3ad89406f" translate="yes" xml:space="preserve">
          <source>This specifies a hint for how many associations you plan to store in the hash table. If you know the approximate number, you can make things a little more efficient by specifying it this way. If you specify too small a size, the hash table will grow automatically when necessary, but doing that takes some extra time.</source>
          <target state="translated">これは、ハッシュテーブルに格納する予定の連想の数のヒントを指定します。大体の数がわかっているのであれば、このように指定することで少し効率的になります。あまりにも小さいサイズを指定すると、必要に応じてハッシュテーブルは自動的に大きくなりますが、それを行うには少し余分な時間がかかります。</target>
        </trans-unit>
        <trans-unit id="0d542d82ff452e212946b1ada7c8919996460c66" translate="yes" xml:space="preserve">
          <source>This specifies a request for information about the state of the current completion. The return value should have the form &lt;code&gt;(metadata . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;alist&lt;/var&gt; is an alist whose elements are described below.</source>
          <target state="translated">これは、現在の完了の状態に関する情報の要求を指定します。戻り値の形式は &lt;code&gt;(metadata . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; である必要があります。ここで、 &lt;var&gt;alist&lt;/var&gt; は、要素を以下に説明するalistです。</target>
        </trans-unit>
        <trans-unit id="d4d061f49a452c6a4cb447e2e21da5d60c7677ca" translate="yes" xml:space="preserve">
          <source>This specifies a specific pointer shape when the mouse pointer is over this text or image. See &lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;Pointer Shape&lt;/a&gt;, for possible pointer shapes.</source>
          <target state="translated">これは、マウスポインタがこのテキストまたは画像の上にあるときの特定のポインタの形状を指定します。可能なポインタ形状については、&lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;ポインタ形状を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="43834e1e2123ce5d60aa2e3d2145d5b8d214e4ad" translate="yes" xml:space="preserve">
          <source>This specifies an &lt;code&gt;all-completions&lt;/code&gt; operation. The function should return a list of all possible completions of the specified string.</source>
          <target state="translated">これは、 &lt;code&gt;all-completions&lt;/code&gt; 操作を指定します。関数は、指定された文字列のすべての可能な補完のリストを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="4e4bc6c301646426b8d2d7bade697a36650e543a" translate="yes" xml:space="preserve">
          <source>This specifies how loud to play the sound. It should be a number in the range of 0 to 1. The default is to use whatever volume has been specified before.</source>
          <target state="translated">サウンドを再生する音量を指定します。0から1の範囲の数値を指定します。 デフォルトでは、以前に指定した音量を使用します。</target>
        </trans-unit>
        <trans-unit id="636a06ca0cbd154e22bd2aed442fa25383c8080c" translate="yes" xml:space="preserve">
          <source>This specifies how many pixels to add as an extra margin around the image. The value, &lt;var&gt;margin&lt;/var&gt;, must be a non-negative number, or a pair &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; of such numbers. If it is a pair, &lt;var&gt;x&lt;/var&gt; specifies how many pixels to add horizontally, and &lt;var&gt;y&lt;/var&gt; specifies how many pixels to add vertically. If &lt;code&gt;:margin&lt;/code&gt; is not specified, the default is zero.</source>
          <target state="translated">これは、画像の周囲に追加のマージンとして追加するピクセル数を指定します。値は、 &lt;var&gt;margin&lt;/var&gt; 、非負数、または対でなければならない &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 、このような数値の。ペアの場合、 &lt;var&gt;x&lt;/var&gt; は水平方向に追加するピクセル数を指定し、 &lt;var&gt;y&lt;/var&gt; は垂直方向に追加するピクセル数を指定します。 &lt;code&gt;:margin&lt;/code&gt; が指定されていない場合、デフォルトはゼロです。</target>
        </trans-unit>
        <trans-unit id="ac7dbfa3b693d7da04a20deacef5e42a4f5dd096" translate="yes" xml:space="preserve">
          <source>This specifies how to order the advice, should several pieces of advice be present. By default, the depth is 0. A depth of 100 indicates that this piece of advice should be kept as deep as possible, whereas a depth of -100 indicates that it should stay as the outermost piece. When two pieces of advice specify the same depth, the most recently added one will be outermost.</source>
          <target state="translated">これは、複数のアドバイスが存在する場合のアドバイスの順序を指定します。デフォルトでは、深さは 0 に設定されています。 深さが 100 に設定されている場合、このアドバイスは可能な限り深さを保つ必要があり、 -100 に設定されている場合は一番外側のアドバイスになることを示します。2つのアドバイスが同じ深さを指定した場合、最近追加されたものが最深部になります。</target>
        </trans-unit>
        <trans-unit id="80eab38c19033a28010b8322a79585bc2263eed4" translate="yes" xml:space="preserve">
          <source>This specifies one binding, for events of type &lt;var&gt;type&lt;/var&gt;. Each ordinary binding applies to events of a particular &lt;em&gt;event type&lt;/em&gt;, which is always a character or a symbol. See &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;. In this kind of binding, &lt;var&gt;binding&lt;/var&gt; is a command.</source>
          <target state="translated">これは、タイプ &lt;var&gt;type&lt;/var&gt; のイベントに対して1つのバインディングを指定します。通常の各バインディングは、常に文字または記号である特定の&lt;em&gt;イベントタイプの&lt;/em&gt;イベントに適用されます。&lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;イベントの分類を&lt;/a&gt;参照してください。この種のバインディングでは、 &lt;var&gt;binding&lt;/var&gt; はコマンドです。</target>
        </trans-unit>
        <trans-unit id="3b09d5a5fd5d8456fe425afcc9a7b5eddd4a5049" translate="yes" xml:space="preserve">
          <source>This specifies the amount of the image&amp;rsquo;s height to use for its ascent&amp;mdash;that is, the part above the baseline. The value, &lt;var&gt;ascent&lt;/var&gt;, must be a number in the range 0 to 100, or the symbol &lt;code&gt;center&lt;/code&gt;.</source>
          <target state="translated">これは、画像の上昇に使用する画像の高さの量、つまりベースラインより上の部分を指定します。値 &lt;var&gt;ascent&lt;/var&gt; は、0〜100の範囲の数値、または記号の &lt;code&gt;center&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="16ee6a4b9a9e9e0999d2f53b7f0854dcff245228" translate="yes" xml:space="preserve">
          <source>This specifies the criterion for when the hash table is full (so it should be made larger). The value, &lt;var&gt;threshold&lt;/var&gt;, should be a positive floating-point number, no greater than 1. The hash table is full whenever the actual number of entries exceeds the nominal size multiplied by an approximation to this value. The default for &lt;var&gt;threshold&lt;/var&gt; is 0.8125.</source>
          <target state="translated">これは、ハッシュテーブルがいっぱいになるときの基準を指定します（したがって、ハッシュテーブルを大きくする必要があります）。値 &lt;var&gt;threshold&lt;/var&gt; は、1以下の正の浮動小数点数である必要があります。実際のエントリ数が公称サイズにこの値の近似値を掛けた値を超えると、ハッシュテーブルはいっぱいになります。 &lt;var&gt;threshold&lt;/var&gt; のデフォルトは0.8125です。</target>
        </trans-unit>
        <trans-unit id="80e656fda6f3abfec4b701bcf321f0a84418d9fd" translate="yes" xml:space="preserve">
          <source>This specifies the file containing the sound to play. If the file name is not absolute, it is expanded against the directory &lt;code&gt;data-directory&lt;/code&gt;.</source>
          <target state="translated">再生するサウンドを含むファイルを指定します。ファイル名が絶対名でない場合は、ディレクトリ &lt;code&gt;data-directory&lt;/code&gt; に対して展開されます。</target>
        </trans-unit>
        <trans-unit id="e0e00dec6d1703f97c6b4cb314ea0b91b9b5c3f9" translate="yes" xml:space="preserve">
          <source>This specifies the method of key lookup for this hash table. The default is &lt;code&gt;eql&lt;/code&gt;; &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;equal&lt;/code&gt; are other alternatives:</source>
          <target state="translated">これは、このハッシュテーブルのキールックアップの方法を指定します。デフォルトは &lt;code&gt;eql&lt;/code&gt; です。 &lt;code&gt;eq&lt;/code&gt; と &lt;code&gt;equal&lt;/code&gt; は他の選択肢です：</target>
        </trans-unit>
        <trans-unit id="02f66248031d6c07808e4997b2b86d55abbdd724" translate="yes" xml:space="preserve">
          <source>This specifies the name of the desktop filename representing the calling program, like &amp;lsquo;</source>
          <target state="translated">これは、 'のように、呼び出し側プログラムを表すデスクトップファイル名の名前を指定します。</target>
        </trans-unit>
        <trans-unit id="4b2119186627a5ff369dc726d7edc0ee7f5e9ce4" translate="yes" xml:space="preserve">
          <source>This specifies the pointer shape when the mouse pointer is over this image. See &lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;Pointer Shape&lt;/a&gt;, for available pointer shapes.</source>
          <target state="translated">これは、マウスポインタがこの画像上にあるときのポインタの形状を指定します。使用可能なポインタ形状については、&lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;ポインタ形状を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2e46c3d1f2e901a34a06d424a73afc21b9b3e211" translate="yes" xml:space="preserve">
          <source>This specifies the position of the left frame edge relative to the left edge of its display or parent frame. The integer &lt;var&gt;pos&lt;/var&gt; may be positive or negative; a negative value specifies a position outside the screen or parent frame or on a monitor other than the primary one (for multi-monitor displays).</source>
          <target state="translated">これは、ディスプレイまたは親フレームの左端に対する左フレームの端の位置を指定します。整数 &lt;var&gt;pos&lt;/var&gt; は正または負の場合があります。負の値は、画面または親フレームの外側、またはプライマリ以外のモニター上の位置を指定します（マルチモニターディスプレイの場合）。</target>
        </trans-unit>
        <trans-unit id="957429b50e3085c529b603ab0ba338f67841d193" translate="yes" xml:space="preserve">
          <source>This specifies the position of the right frame edge relative to the right edge of the display or parent frame. The integer &lt;var&gt;pos&lt;/var&gt; may be positive or negative; a negative value specifies a position outside the screen or parent frame or on a monitor other than the primary one (for multi-monitor displays).</source>
          <target state="translated">これは、ディスプレイまたは親フレームの右端に対する右フレームの端の位置を指定します。整数 &lt;var&gt;pos&lt;/var&gt; は正または負の場合があります。負の値は、画面または親フレームの外側、またはプライマリ以外のモニター上の位置を指定します（マルチモニターディスプレイの場合）。</target>
        </trans-unit>
        <trans-unit id="4907b0f80b9cc6eaa461804718a3518fa0e9a301" translate="yes" xml:space="preserve">
          <source>This specifies the raw image data. Each image descriptor must have either &lt;code&gt;:data&lt;/code&gt; or &lt;code&gt;:file&lt;/code&gt;, but not both.</source>
          <target state="translated">これは、生の画像データを指定します。各画像記述子には、 &lt;code&gt;:data&lt;/code&gt; または &lt;code&gt;:file&lt;/code&gt; のいずれかが必要ですが、両方は必要ありません。</target>
        </trans-unit>
        <trans-unit id="1d7b6dbb2d56faacdaa4ae079c64a9dab06fd918" translate="yes" xml:space="preserve">
          <source>This specifies the sound to play without need to refer to a file. The value, &lt;var&gt;data&lt;/var&gt;, should be a string containing the same bytes as a sound file. We recommend using a unibyte string.</source>
          <target state="translated">これは、ファイルを参照せずに再生するサウンドを指定します。値 &lt;var&gt;data&lt;/var&gt; は、サウンドファイルと同じバイトを含む文字列である必要があります。ユニバイト文字列の使用をお勧めします。</target>
        </trans-unit>
        <trans-unit id="cfff7690d010381cc8efe398693dc495791b7cbb" translate="yes" xml:space="preserve">
          <source>This specifies the system device on which to play the sound, as a string. The default device is system-dependent.</source>
          <target state="translated">サウンドを再生するシステムデバイスを文字列で指定します。デフォルトのデバイスはシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="12405c5a16df3c4cdd1ee941936ed75b73ff085f" translate="yes" xml:space="preserve">
          <source>This stands for &amp;lsquo;</source>
          <target state="translated">これは 'の略です</target>
        </trans-unit>
        <trans-unit id="5a953af8aa164ab5f8d58298d2321db2ec0308df" translate="yes" xml:space="preserve">
          <source>This stands for a newline.</source>
          <target state="translated">これは改行の略です。</target>
        </trans-unit>
        <trans-unit id="9b0016aa8b716c6af855126075823f4252e7ec78" translate="yes" xml:space="preserve">
          <source>This stands for a single &amp;lsquo;</source>
          <target state="translated">これは単一の 'を表します</target>
        </trans-unit>
        <trans-unit id="0e917109cff73a7b823395ab21db7224d5f7916a" translate="yes" xml:space="preserve">
          <source>This stands for a tab character.</source>
          <target state="translated">タブ文字の略です。</target>
        </trans-unit>
        <trans-unit id="3a7a2d671e051c239370ec053c15f604bdabbddc" translate="yes" xml:space="preserve">
          <source>This stands for itself (for compatibility with &lt;code&gt;replace-regexp&lt;/code&gt; and related commands; see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Regexp-Replace.html#Regexp-Replace&quot;&gt;Regexp Replace&lt;/a&gt; in</source>
          <target state="translated">これは、との互換性のために（自身の略で &lt;code&gt;replace-regexp&lt;/code&gt; と関連するコマンド;参照&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Regexp-Replace.html#Regexp-Replace&quot;&gt;regexpは置き換え&lt;/a&gt;で</target>
        </trans-unit>
        <trans-unit id="3387e4f79d8cd590967097ff5b127243b7b1ed8f" translate="yes" xml:space="preserve">
          <source>This stands for the ISO 8601 date format, which is like &amp;lsquo;</source>
          <target state="translated">これは、ISO8601の日付形式を表します。</target>
        </trans-unit>
        <trans-unit id="edd29e424029ff0854d7cfa739b245a5eec7b500" translate="yes" xml:space="preserve">
          <source>This stands for the abbreviated name of the day of week.</source>
          <target state="translated">曜日の略称です。</target>
        </trans-unit>
        <trans-unit id="bc9222c1841aeb4cbf336678d516197d20ceac01" translate="yes" xml:space="preserve">
          <source>This stands for the abbreviated name of the month.</source>
          <target state="translated">月の略称のことです。</target>
        </trans-unit>
        <trans-unit id="8b449135807d1a7f8bad8de5a1ec22c38595cd1d" translate="yes" xml:space="preserve">
          <source>This stands for the calendar quarter (1&amp;ndash;4).</source>
          <target state="translated">これは、暦四半期（1〜4）を表します。</target>
        </trans-unit>
        <trans-unit id="3dd560747b9d649e7854d9c75acc46622ee0a66a" translate="yes" xml:space="preserve">
          <source>This stands for the century, that is, the year divided by 100, truncated toward zero. The default field width is 2.</source>
          <target state="translated">これは世紀、つまり年を100で割ったものを0に切り捨てたものです。デフォルトのフィールド幅は2です。</target>
        </trans-unit>
        <trans-unit id="ae227701e35d35c1d29a843a26717ba68366fc3a" translate="yes" xml:space="preserve">
          <source>This stands for the day of month, blank-padded.</source>
          <target state="translated">これは、空白の月の日を表しています。</target>
        </trans-unit>
        <trans-unit id="49b285e0dbd8927bb3605f6adff88ee0e560d820" translate="yes" xml:space="preserve">
          <source>This stands for the day of month, zero-padded.</source>
          <target state="translated">これは、月の日、ゼロパッドの略です。</target>
        </trans-unit>
        <trans-unit id="064771e0212f52eaf6bb077d5c89e012dbbf7e9a" translate="yes" xml:space="preserve">
          <source>This stands for the day of the year (001&amp;ndash;366).</source>
          <target state="translated">これは、その年の日（001〜366）を表します。</target>
        </trans-unit>
        <trans-unit id="3def3d214ee2f920b6f973c46db794c165bad230" translate="yes" xml:space="preserve">
          <source>This stands for the entire text being replaced.</source>
          <target state="translated">これは、テキスト全体が置き換えられていることを表します。</target>
        </trans-unit>
        <trans-unit id="97a3f005bc528071dc94bda474d65907b2f15eb6" translate="yes" xml:space="preserve">
          <source>This stands for the full name of the day of week.</source>
          <target state="translated">これは、曜日のフルネームの略です。</target>
        </trans-unit>
        <trans-unit id="5ad4f46ba0d97d78d7b8729757ef4ae745b1d4bd" translate="yes" xml:space="preserve">
          <source>This stands for the full name of the month.</source>
          <target state="translated">これは月のフルネームの略です。</target>
        </trans-unit>
        <trans-unit id="968fede9c0f20efacabdfce884cba8aed4ae107c" translate="yes" xml:space="preserve">
          <source>This stands for the hour (0&amp;ndash;23), blank padded.</source>
          <target state="translated">これは時間（0〜23）を表し、空白が埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="ea6d60d5b7ddf9d7445311728c02de86ae7c5e80" translate="yes" xml:space="preserve">
          <source>This stands for the hour (00&amp;ndash;23).</source>
          <target state="translated">これは時間（00〜23）を表します。</target>
        </trans-unit>
        <trans-unit id="5e456b0ab7b5e4d1a8c3aaef0985bd7177d01aa9" translate="yes" xml:space="preserve">
          <source>This stands for the hour (01&amp;ndash;12).</source>
          <target state="translated">これは時間（01&amp;ndash;12）を表します。</target>
        </trans-unit>
        <trans-unit id="704f5f4a59d6eecbbc9520f49b5d500586687258" translate="yes" xml:space="preserve">
          <source>This stands for the hour (1&amp;ndash;12), blank padded.</source>
          <target state="translated">これは時間（1〜12）を表し、空白が埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="d9c549197fb5ee38e6fe7635c9fe0a9cd461efcc" translate="yes" xml:space="preserve">
          <source>This stands for the integer number of seconds since the epoch.</source>
          <target state="translated">これはエポックからの秒数を整数で表しています。</target>
        </trans-unit>
        <trans-unit id="5088832e60d39beb8ff508ab8c2650dbec32f8aa" translate="yes" xml:space="preserve">
          <source>This stands for the minute (00&amp;ndash;59).</source>
          <target state="translated">これは分（00〜59）を表します。</target>
        </trans-unit>
        <trans-unit id="39797223f5511ac56dcc1624ce5474a859de6052" translate="yes" xml:space="preserve">
          <source>This stands for the month (01&amp;ndash;12).</source>
          <target state="translated">これは月（01&amp;ndash;12）を表します。</target>
        </trans-unit>
        <trans-unit id="04dfcba9a2dd5c7e09acacd439a11e31c0e060ed" translate="yes" xml:space="preserve">
          <source>This stands for the nanoseconds (000000000&amp;ndash;999999999). To ask for fewer digits, use &amp;lsquo;</source>
          <target state="translated">これはナノ秒（000000000〜999999999）を表します。より少ない桁数を要求するには、 'を使用します</target>
        </trans-unit>
        <trans-unit id="3db94f8a20bfee370c172a8d80873aac1a581572" translate="yes" xml:space="preserve">
          <source>This stands for the numeric day of week (0&amp;ndash;6). Sunday is day 0.</source>
          <target state="translated">これは、数値の曜日（0〜6）を表します。日曜日は0日目です。</target>
        </trans-unit>
        <trans-unit id="177650152cc80e4212fa464ec5e952c230ed4210" translate="yes" xml:space="preserve">
          <source>This stands for the numeric day of week (1&amp;ndash;7). Monday is day 1.</source>
          <target state="translated">これは、数値の曜日（1〜7）を表します。月曜日は1日目です。</target>
        </trans-unit>
        <trans-unit id="c083941f6ca04d443d5cb2cafb5019b62a031e61" translate="yes" xml:space="preserve">
          <source>This stands for the second (00&amp;ndash;59, or 00&amp;ndash;60 on platforms that support leap seconds).</source>
          <target state="translated">これは秒を表します（うるう秒をサポートするプラットフォームでは00〜59、または00〜60）。</target>
        </trans-unit>
        <trans-unit id="0c4c0c2b67f5e5924f94befd6929b445660d9af1" translate="yes" xml:space="preserve">
          <source>This stands for the text that matched the &lt;var&gt;n&lt;/var&gt;th subexpression in the original regexp. Subexpressions are those expressions grouped inside &amp;lsquo;</source>
          <target state="translated">これは、元の正規表現の &lt;var&gt;n&lt;/var&gt; 番目の部分式に一致するテキストを表します。部分式は、 '内にグループ化された式です。</target>
        </trans-unit>
        <trans-unit id="c18f82e02830c17a25eb0725b6975c2c63575303" translate="yes" xml:space="preserve">
          <source>This stands for the time zone abbreviation (e.g., &amp;lsquo;</source>
          <target state="translated">これは、タイムゾーンの省略形を表します（例： '</target>
        </trans-unit>
        <trans-unit id="fbb40385db73e63604136e8b321108475638c373" translate="yes" xml:space="preserve">
          <source>This stands for the time zone numerical offset. The &amp;lsquo;</source>
          <target state="translated">これは、タイムゾーンの数値オフセットを表します。'</target>
        </trans-unit>
        <trans-unit id="5b19d340158d0c3da63219de4486245a577e2083" translate="yes" xml:space="preserve">
          <source>This stands for the week of the year (01&amp;ndash;52), assuming that weeks start on Monday.</source>
          <target state="translated">これは、週が月曜日に始まると仮定すると、その年の週（01&amp;ndash;52）を表します。</target>
        </trans-unit>
        <trans-unit id="dfce6f25ec1e050917792e0e39e9c33fb54d05e1" translate="yes" xml:space="preserve">
          <source>This stands for the week of the year (01&amp;ndash;52), assuming that weeks start on Sunday.</source>
          <target state="translated">これは、週が日曜日に始まると仮定すると、その年の週（01&amp;ndash;52）を表します。</target>
        </trans-unit>
        <trans-unit id="b8029306811fc4956c9103561527aa3510617784" translate="yes" xml:space="preserve">
          <source>This stands for the week of the year according to ISO 8601.</source>
          <target state="translated">これは、ISO 8601に準拠した1年の1週間を表しています。</target>
        </trans-unit>
        <trans-unit id="90f60c021a9289d1ed10fd708c351cdcc2c3e640" translate="yes" xml:space="preserve">
          <source>This stands for the year corresponding to the ISO week within the century.</source>
          <target state="translated">世紀内のISO週間に対応する年を表しています。</target>
        </trans-unit>
        <trans-unit id="734051b8f4d85dc4b7973e61ba1e5de2940277d3" translate="yes" xml:space="preserve">
          <source>This stands for the year corresponding to the ISO week.</source>
          <target state="translated">これは、ISO週に相当する年を表しています。</target>
        </trans-unit>
        <trans-unit id="a481e48ac8618a686937c594d2ec24c50c7933f5" translate="yes" xml:space="preserve">
          <source>This stands for the year with century.</source>
          <target state="translated">これは世紀のある年のことを表しています。</target>
        </trans-unit>
        <trans-unit id="c52be8e987612c175ad50ad027d72af938ebf6fd" translate="yes" xml:space="preserve">
          <source>This stands for the year without century (00&amp;ndash;99).</source>
          <target state="translated">これは、世紀のない年（00〜99）を表します。</target>
        </trans-unit>
        <trans-unit id="c0a812dcbe35e574bb3ff47b98fb24acf995d335" translate="yes" xml:space="preserve">
          <source>This state of affairs might occur after</source>
          <target state="translated">この状態が発生する可能性があるのは</target>
        </trans-unit>
        <trans-unit id="e50845c7ef4403d40df2b32bcbb76644f015f186" translate="yes" xml:space="preserve">
          <source>This stores &lt;var&gt;value&lt;/var&gt; as the value of the &lt;var&gt;property&lt;/var&gt; property in the property list &lt;var&gt;plist&lt;/var&gt;. It may modify &lt;var&gt;plist&lt;/var&gt; destructively, or it may construct a new list structure without altering the old. The function returns the modified property list, so you can store that back in the place where you got &lt;var&gt;plist&lt;/var&gt;. For example,</source>
          <target state="translated">これにより、値がプロパティリスト &lt;var&gt;plist&lt;/var&gt; の &lt;var&gt;property&lt;/var&gt; プロパティの &lt;var&gt;value&lt;/var&gt; として格納されます。それは変更する可能性 &lt;var&gt;plist&lt;/var&gt; 破壊的、またはそれは、古いを変更することなく、新たなリスト構造を構築することができます。この関数は変更されたプロパティリストを返すので、 &lt;var&gt;plist&lt;/var&gt; を取得した場所にそれを保存できます。例えば、</target>
        </trans-unit>
        <trans-unit id="f3388ba5c690beee5edfd9f9d5bdd75d7848169a" translate="yes" xml:space="preserve">
          <source>This string will be inserted in the buffer to represent the value corresponding to the type. The following &amp;lsquo;</source>
          <target state="translated">この文字列は、タイプに対応する値を表すためにバッファに挿入されます。以下 '</target>
        </trans-unit>
        <trans-unit id="c5a4d7c65fc7ec810b86841ea2eaacf36a447f37" translate="yes" xml:space="preserve">
          <source>This subsection describes &lt;em&gt;backquote-style patterns&lt;/em&gt;, a set of builtin patterns that eases structural matching. For background, see &lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;Pattern-Matching Conditional&lt;/a&gt;.</source>
          <target state="translated">このサブセクションでは、構造のマッチングを容易にする組み込みパターンのセットである&lt;em&gt;バッククォートスタイルのパターン&lt;/em&gt;について説明します。背景については、&lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;パターンマッチング条件付きを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="154429dc78dfad816a4ac29212ae25a5e888cd76" translate="yes" xml:space="preserve">
          <source>This subsection describes a few convenience functions provided by the module</source>
          <target state="translated">このサブセクションでは、モジュールが提供するいくつかの便利な機能について説明します。</target>
        </trans-unit>
        <trans-unit id="86b5aca2b6065ce4c3a174a66d3a2bbe1b407627" translate="yes" xml:space="preserve">
          <source>This swaps the foreground and background colors of face &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">これにより、顔の前景色と背景色が &lt;var&gt;face&lt;/var&gt; ます。</target>
        </trans-unit>
        <trans-unit id="3f649cbd02b8cfad82bd467b806fc29a75e8a69a" translate="yes" xml:space="preserve">
          <source>This symbol also serves as the event type of the event. Key bindings describe events by their types; thus, if there is a key binding for &lt;code&gt;mouse-1&lt;/code&gt;, that binding would apply to all events whose &lt;var&gt;event-type&lt;/var&gt; is &lt;code&gt;mouse-1&lt;/code&gt;.</source>
          <target state="translated">この記号は、イベントのイベントタイプとしても機能します。キーバインディングは、イベントをタイプ別に記述します。したがって、 &lt;code&gt;mouse-1&lt;/code&gt; のキーバインディングがある場合、そのバインディングは、 &lt;var&gt;event-type&lt;/var&gt; が &lt;code&gt;mouse-1&lt;/code&gt; であるすべてのイベントに適用されます。</target>
        </trans-unit>
        <trans-unit id="e9217dccc658d2b4111ac58407c42c117df57d7a" translate="yes" xml:space="preserve">
          <source>This symbol is not a function; its function definition cell holds the keymap known as &lt;code&gt;help-map&lt;/code&gt;. It is defined in</source>
          <target state="translated">この記号は関数ではありません。その関数定義セルは、 &lt;code&gt;help-map&lt;/code&gt; マップと呼ばれるキーマップを保持します。それはで定義されています</target>
        </trans-unit>
        <trans-unit id="673f6e4af0c96f767d81720847bed4fb616b129e" translate="yes" xml:space="preserve">
          <source>This syntax class can be designated by either &amp;lsquo;&amp;rsquo; or &amp;lsquo;</source>
          <target state="translated">この構文クラスは、 ''または 'のいずれかで指定できます。</target>
        </trans-unit>
        <trans-unit id="ef814764713d6b4efc3e07483964d8fd17bda004" translate="yes" xml:space="preserve">
          <source>This syntax class does not specify a particular syntax. It says to look in the standard syntax table to find the syntax of this character.</source>
          <target state="translated">この構文クラスは特定の構文を指定していません。この文字の構文を見つけるには、標準構文表を見てくださいと書かれています。</target>
        </trans-unit>
        <trans-unit id="fe0fd84ab9486a7e5129fc03483d021c695e5e96" translate="yes" xml:space="preserve">
          <source>This syntax class is primarily meant for use with the &lt;code&gt;syntax-table&lt;/code&gt; text property (see &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;Syntax Properties&lt;/a&gt;). You can mark any range of characters as forming a comment, by giving the first and last characters of the range &lt;code&gt;syntax-table&lt;/code&gt; properties identifying them as generic comment delimiters.</source>
          <target state="translated">この構文クラスは、主に &lt;code&gt;syntax-table&lt;/code&gt; テキストプロパティで使用することを目的としています（&lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;構文プロパティを&lt;/a&gt;参照）。範囲 &lt;code&gt;syntax-table&lt;/code&gt; プロパティの最初と最後の文字を一般的なコメント区切り文字として識別することにより、任意の範囲の文字をコメントの形成としてマークできます。</target>
        </trans-unit>
        <trans-unit id="cb55ccc90a19d9543bebe0f564333ab2f4125de1" translate="yes" xml:space="preserve">
          <source>This syntax class is primarily meant for use with the &lt;code&gt;syntax-table&lt;/code&gt; text property (see &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;Syntax Properties&lt;/a&gt;). You can mark any range of characters as forming a string constant, by giving the first and last characters of the range &lt;code&gt;syntax-table&lt;/code&gt; properties identifying them as generic string delimiters.</source>
          <target state="translated">この構文クラスは、主に &lt;code&gt;syntax-table&lt;/code&gt; テキストプロパティで使用することを目的としています（&lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;構文プロパティを&lt;/a&gt;参照）。範囲 &lt;code&gt;syntax-table&lt;/code&gt; プロパティの最初と最後の文字を一般的な文字列区切り文字として識別することにより、任意の範囲の文字を文字列定数を形成するものとしてマークできます。</target>
        </trans-unit>
        <trans-unit id="58f07cd6c95c32700a7e121f78af542732c60dcf" translate="yes" xml:space="preserve">
          <source>This tells Emacs that new buffers created while the current buffer is in Funny mode should not be put in Funny mode, even though the default value of &lt;code&gt;major-mode&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. By default, the value of &lt;code&gt;nil&lt;/code&gt; for &lt;code&gt;major-mode&lt;/code&gt; means to use the current buffer&amp;rsquo;s major mode when creating new buffers (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;), but with such &lt;code&gt;special&lt;/code&gt; modes, Fundamental mode is used instead. Modes such as Dired, Rmail, and Buffer List use this feature.</source>
          <target state="translated">これは、 &lt;code&gt;major-mode&lt;/code&gt; デフォルト値が &lt;code&gt;nil&lt;/code&gt; であっても、現在のバッファーがファニーモードの間に作成された新しいバッファーをファニーモードにしないようにEmacsに通知します。デフォルトでは、 &lt;code&gt;major-mode&lt;/code&gt; &lt;code&gt;nil&lt;/code&gt; の値は、新しいバッファーを作成するときに現在のバッファーのメジャーモードを使用することを意味します（&lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;自動メジャーモードを&lt;/a&gt;参照）が、このよう &lt;code&gt;special&lt;/code&gt; モードでは、代わりに基本モードが使用されます。 Dired、Rmail、BufferListなどのモードはこの機能を使用します。</target>
        </trans-unit>
        <trans-unit id="bde260e27250cfd753a3c4b7e603c2a76b516f62" translate="yes" xml:space="preserve">
          <source>This tells on which side the tool bar on &lt;var&gt;frame&lt;/var&gt; is and can be one of &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;bottom&lt;/code&gt;. The only toolkit that currently supports a value other than &lt;code&gt;top&lt;/code&gt; is GTK+.</source>
          <target state="translated">これにより、 &lt;var&gt;frame&lt;/var&gt; のツールバーがどちら側にあるかが &lt;code&gt;left&lt;/code&gt; 、左、 &lt;code&gt;top&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; または &lt;code&gt;bottom&lt;/code&gt; いずれかになります。現在 &lt;code&gt;top&lt;/code&gt; 以外の値をサポートしている唯一のツールキットはGTK +です。</target>
        </trans-unit>
        <trans-unit id="32b8cf45acd383d2dbdafc81124a283377a4b40a" translate="yes" xml:space="preserve">
          <source>This terminal-local variable is the translate table for keyboard characters. It lets you reshuffle the keys on the keyboard without changing any command bindings. Its value is normally a char-table, or else &lt;code&gt;nil&lt;/code&gt;. (It can also be a string or vector, but this is considered obsolete.)</source>
          <target state="translated">このターミナルローカル変数は、キーボード文字の変換テーブルです。コマンドのバインドを変更せずに、キーボードのキーを再シャッフルできます。その値は通常、char-table、または &lt;code&gt;nil&lt;/code&gt; です。（文字列またはベクトルにすることもできますが、これは廃止されたと見なされます。）</target>
        </trans-unit>
        <trans-unit id="6c1f17a39e214c3fc1899b7de28e5d36f79d9112" translate="yes" xml:space="preserve">
          <source>This terminal-local variable tells Lisp programs what window system Emacs is using for displaying the frame. The possible values are</source>
          <target state="translated">このターミナルローカル変数は、Emacsがフレームを表示するためにどのウィンドウシステムを使用しているかをLispプログラムに伝えます。可能な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="fd7cffc1adb6bc8407cfad443279f6431bbea02f" translate="yes" xml:space="preserve">
          <source>This text property is used to display a sequence of characters as a single glyph composed from components. But the value of the property itself is completely internal to Emacs and should not be manipulated directly by, for instance, &lt;code&gt;put-text-property&lt;/code&gt;.</source>
          <target state="translated">このテキストプロパティは、文字のシーケンスをコンポーネントで構成される単一のグリフとして表示するために使用されます。ただし、プロパティ自体の値は完全にEmacsの内部にあるため、たとえば &lt;code&gt;put-text-property&lt;/code&gt; によって直接操作しないでください。</target>
        </trans-unit>
        <trans-unit id="f8c4748eb4bcc830914ab5965b177f8a79c96393" translate="yes" xml:space="preserve">
          <source>This text property tells where to display temporary messages in an active minibuffer. Specifically, the first character of the minibuffer text which has this property will have the temporary message displayed before it. The default is to display temporary messages at the end of the minibuffer text. This text property is used by the function that is the default value of &lt;code&gt;set-message-function&lt;/code&gt; (see &lt;a href=&quot;displaying-messages#Displaying-Messages&quot;&gt;Displaying Messages&lt;/a&gt;).</source>
          <target state="translated">このテキストプロパティは、アクティブなミニバッファのどこに一時メッセージを表示するかを示します。具体的には、このプロパティを持つミニバッファテキストの最初の文字の前に一時的なメッセージが表示されます。デフォルトでは、ミニバッファテキストの最後に一時的なメッセージが表示されます。このテキストプロパティは、 &lt;code&gt;set-message-function&lt;/code&gt; のデフォルト値である関数によって使用されます（&lt;a href=&quot;displaying-messages#Displaying-Messages&quot;&gt;メッセージの表示を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="80d3f28d900c71c4a56a870fd0dd86a495abb863" translate="yes" xml:space="preserve">
          <source>This translation of one event into two happens only for characters, not for other kinds of input events. Thus,</source>
          <target state="translated">この1つのイベントの2つへの変換は文字に対してのみ行われ、他の種類の入力イベントに対しては行われません。したがって、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="4042fd2a7bbc1fbf60ab85450aadd81afe2c53ef" translate="yes" xml:space="preserve">
          <source>This user option provides a convenient way to set &lt;code&gt;glyphless-char-display&lt;/code&gt; for groups of similar characters. Do not set its value directly from Lisp code; the value takes effect only via a custom &lt;code&gt;:set&lt;/code&gt; function (see &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;), which updates &lt;code&gt;glyphless-char-display&lt;/code&gt;.</source>
          <target state="translated">このユーザーオプションは、類似した文字のグループに &lt;code&gt;glyphless-char-display&lt;/code&gt; を設定する便利な方法を提供します。Lispコードから直接値を設定しないでください。この値は、 &lt;code&gt;glyphless-char-display&lt;/code&gt; を更新するカスタム &lt;code&gt;:set&lt;/code&gt; 関数（&lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;変数の定義を&lt;/a&gt;参照）を介してのみ有効になります。</target>
        </trans-unit>
        <trans-unit id="9c43441b638e24d3c31e405be655f435a0b96c1e" translate="yes" xml:space="preserve">
          <source>This user option specifies the minimum severity level that should be logged in the warnings buffer. The default is &lt;code&gt;:warning&lt;/code&gt;, which means to log all warnings except &lt;code&gt;:debug&lt;/code&gt; warnings.</source>
          <target state="translated">このユーザーオプションは、警告バッファーに記録する必要がある最小の重大度レベルを指定します。デフォルトは &lt;code&gt;:warning&lt;/code&gt; です。これは、 &lt;code&gt;:debug&lt;/code&gt; 警告を除くすべての警告をログに記録することを意味します。</target>
        </trans-unit>
        <trans-unit id="e64c878b26925434e6a40e0303b5fb803eb4cc51" translate="yes" xml:space="preserve">
          <source>This user option specifies the minimum severity level that should be shown immediately to the user. The default is &lt;code&gt;:warning&lt;/code&gt;, which means to immediately display all warnings except &lt;code&gt;:debug&lt;/code&gt; warnings.</source>
          <target state="translated">このユーザーオプションは、ユーザーにすぐに表示する必要がある最小の重大度レベルを指定します。デフォルトは &lt;code&gt;:warning&lt;/code&gt; です。これは、 &lt;code&gt;:debug&lt;/code&gt; 警告を除くすべての警告をすぐに表示することを意味します。</target>
        </trans-unit>
        <trans-unit id="b5b9b2cc09e34e60fa27afe3f2f9df4ee68dc6f1" translate="yes" xml:space="preserve">
          <source>This value is currently unused.</source>
          <target state="translated">この値は現在使用されていません。</target>
        </trans-unit>
        <trans-unit id="d0808294a46fd7a89020048de1c201288dc7edcf" translate="yes" xml:space="preserve">
          <source>This value means the parameter is saved neither by &lt;code&gt;window-state-get&lt;/code&gt; nor by &lt;code&gt;current-window-configuration&lt;/code&gt;.</source>
          <target state="translated">この値は、パラメータが &lt;code&gt;window-state-get&lt;/code&gt; によっても &lt;code&gt;current-window-configuration&lt;/code&gt; によっても保存されないことを意味します。</target>
        </trans-unit>
        <trans-unit id="4bfc68b6ab18e3fede182d98877be70af1835e06" translate="yes" xml:space="preserve">
          <source>This value specifies that the parameter is saved by &lt;code&gt;current-window-configuration&lt;/code&gt; and (provided its &lt;var&gt;writable&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;) by &lt;code&gt;window-state-get&lt;/code&gt;.</source>
          <target state="translated">この値は、パラメーターが &lt;code&gt;current-window-configuration&lt;/code&gt; によって保存され、（ &lt;var&gt;writable&lt;/var&gt; 引数が &lt;code&gt;nil&lt;/code&gt; の場合） &lt;code&gt;window-state-get&lt;/code&gt; によって保存されることを指定します。</target>
        </trans-unit>
        <trans-unit id="396365e7ff81be1272c7622f94ceb6bdf3a10927" translate="yes" xml:space="preserve">
          <source>This variable (if non-&lt;code&gt;nil&lt;/code&gt;) specifies a file for recording the names of all the auto-save files. Each time Emacs does auto-saving, it writes two lines into this file for each buffer that has auto-saving enabled. The first line gives the name of the visited file (it&amp;rsquo;s empty if the buffer has none), and the second gives the name of the auto-save file.</source>
          <target state="translated">この変数（ &lt;code&gt;nil&lt;/code&gt; 以外の場合）は、すべての自動保存ファイルの名前を記録するためのファイルを指定します。Emacsは自動保存を行うたびに、自動保存が有効になっているバッファーごとにこのファイルに2行を書き込みます。最初の行は訪問したファイルの名前を示し（バッファに何もない場合は空です）、2番目の行は自動保存ファイルの名前を示します。</target>
        </trans-unit>
        <trans-unit id="8af93758c6ea4b3157635acdea90f48aa7e3a4b4" translate="yes" xml:space="preserve">
          <source>This variable affects the behavior of &lt;code&gt;forward-word&lt;/code&gt; and &lt;code&gt;backward-word&lt;/code&gt;, and everything that uses them. If it is non-&lt;code&gt;nil&lt;/code&gt;, then characters in the escape and character-quote syntax classes count as part of words. Otherwise, they do not.</source>
          <target state="translated">この変数は、 &lt;code&gt;forward-word&lt;/code&gt; と &lt;code&gt;backward-word&lt;/code&gt; ワードワードの動作、およびそれらを使用するすべてのものに影響します。 &lt;code&gt;nil&lt;/code&gt; 以外の場合、escapeおよびcharacter-quote構文クラスの文字は単語の一部としてカウントされます。そうでなければ、彼らはしません。</target>
        </trans-unit>
        <trans-unit id="fc51974be5abb325d7e9dd33a53d17599959c4e2" translate="yes" xml:space="preserve">
          <source>This variable affects the behavior of &lt;code&gt;forward-word&lt;/code&gt; and &lt;code&gt;backward-word&lt;/code&gt;, and everything that uses them. Its value is a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) of functions to search for word boundaries. If a character has a non-&lt;code&gt;nil&lt;/code&gt; entry in this table, then when a word starts or ends with that character, the corresponding function will be called with 2 arguments: &lt;var&gt;pos&lt;/var&gt; and &lt;var&gt;limit&lt;/var&gt;. The function should return the position of the other word boundary. Specifically, if &lt;var&gt;pos&lt;/var&gt; is smaller than &lt;var&gt;limit&lt;/var&gt;, then &lt;var&gt;pos&lt;/var&gt; is at the beginning of a word, and the function should return the position after the last character of the word; otherwise, &lt;var&gt;pos&lt;/var&gt; is at the last character of a word, and the function should return the position of that word&amp;rsquo;s first character.</source>
          <target state="translated">この変数は、 &lt;code&gt;forward-word&lt;/code&gt; と &lt;code&gt;backward-word&lt;/code&gt; ワードワードの動作、およびそれらを使用するすべてのものに影響します。その値は、単語の境界を検索する関数のchar-table（&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tablesを&lt;/a&gt;参照）です。文字のこのテーブルに &lt;code&gt;nil&lt;/code&gt; 以外のエントリがある場合、単語がその文字で開始または終了すると、対応する関数が &lt;var&gt;pos&lt;/var&gt; と &lt;var&gt;limit&lt;/var&gt; の2つの引数で呼び出されます。関数は、他の単語の境界の位置を返す必要があります。場合は具体的には、 &lt;var&gt;pos&lt;/var&gt; がより小さくなる &lt;var&gt;limit&lt;/var&gt; 、そして &lt;var&gt;pos&lt;/var&gt; が単語の先頭にあり、機能は単語の最後の文字の後に位置を返す必要があります。さもないと、 &lt;var&gt;pos&lt;/var&gt; は単語の最後の文字にあり、関数はその単語の最初の文字の位置を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="b6a24ba7e7a7fe338c696f697deb90284730b3b9" translate="yes" xml:space="preserve">
          <source>This variable affects the print functions &lt;code&gt;prin1&lt;/code&gt; and &lt;code&gt;print&lt;/code&gt; that print with quoting. It does not affect &lt;code&gt;princ&lt;/code&gt;. Here is an example using &lt;code&gt;prin1&lt;/code&gt;:</source>
          <target state="translated">この変数は、印刷関数 &lt;code&gt;prin1&lt;/code&gt; に影響し、その印刷を引用符で囲んで &lt;code&gt;print&lt;/code&gt; します。 &lt;code&gt;princ&lt;/code&gt; には影響しません。これは &lt;code&gt;prin1&lt;/code&gt; を使用した例です：</target>
        </trans-unit>
        <trans-unit id="6afefb9044b50bb998d4fab4b655e075f7420cab" translate="yes" xml:space="preserve">
          <source>This variable allow setting which special events &lt;code&gt;while-no-input&lt;/code&gt; should ignore. It is a list of event symbols (see &lt;a href=&quot;event-examples#Event-Examples&quot;&gt;Event Examples&lt;/a&gt;).</source>
          <target state="translated">この変数を使用すると &lt;code&gt;while-no-input&lt;/code&gt; が無視する特別なイベントを設定できます。これはイベントシンボルのリストです（&lt;a href=&quot;event-examples#Event-Examples&quot;&gt;イベントの例を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="7b537327c14ead258a3541adaa1376e0ca95e3ea" translate="yes" xml:space="preserve">
          <source>This variable allows major modes to override the key bindings for particular minor modes. The elements of this alist look like the elements of &lt;code&gt;minor-mode-map-alist&lt;/code&gt;: &lt;code&gt;(&lt;var&gt;variable&lt;/var&gt;
. &lt;var&gt;keymap&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">この変数を使用すると、メジャーモードで特定のマイナーモードのキーバインディングをオーバーライドできます。要素のように、この連想リストの外観の要素 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; ： &lt;code&gt;(&lt;var&gt;variable&lt;/var&gt; . &lt;var&gt;keymap&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="530af1cea5e9f2c8bddfe1ad4730aec6c3806310" translate="yes" xml:space="preserve">
          <source>This variable allows the user to specify the dimensions of graphical displays returned by &lt;code&gt;display-mm-height&lt;/code&gt; and &lt;code&gt;display-mm-width&lt;/code&gt; in case the system provides incorrect values.</source>
          <target state="translated">この変数を使用すると、システムが誤った値を提供した場合に、 &lt;code&gt;display-mm-height&lt;/code&gt; および &lt;code&gt;display-mm-width&lt;/code&gt; によって返されるグラフィック表示の寸法を指定できます。</target>
        </trans-unit>
        <trans-unit id="638c9ca74c10e3a9ffe0efaa9db9b416b31d0f88" translate="yes" xml:space="preserve">
          <source>This variable alters the action of &lt;code&gt;fill-individual-paragraphs&lt;/code&gt; as described above.</source>
          <target state="translated">この変数は、上記のように、 &lt;code&gt;fill-individual-paragraphs&lt;/code&gt; のアクションを変更します。</target>
        </trans-unit>
        <trans-unit id="3b607c668560c735b23877aee893242dff7ec052" translate="yes" xml:space="preserve">
          <source>This variable automatically becomes buffer-local when set.</source>
          <target state="translated">この変数が設定されると、自動的にバッファローカルになります。</target>
        </trans-unit>
        <trans-unit id="cc32379074d162cca56e22d0efa11b26935e4821" translate="yes" xml:space="preserve">
          <source>This variable can be buffer-local.</source>
          <target state="translated">この変数はバッファローカルにすることができます。</target>
        </trans-unit>
        <trans-unit id="79db4611e6e1a7f4ff38923fb56fd4fa3c0112fa" translate="yes" xml:space="preserve">
          <source>This variable can be used to customize the behavior of the</source>
          <target state="translated">の動作をカスタマイズするためにこの変数を使用することができます。</target>
        </trans-unit>
        <trans-unit id="6a51d16aca34c2aebf4460ccbddbca97f87926c2" translate="yes" xml:space="preserve">
          <source>This variable contains a list of type symbols for image formats which are potentially supported in the current configuration.</source>
          <target state="translated">この変数には、現在の設定でサポートされている可能性のある画像フォーマットのタイプシンボルのリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="c036ffaeed03edc809a86a2cee550de0fdd25651" translate="yes" xml:space="preserve">
          <source>This variable contains a regexp that is guaranteed not to match any string at all. It is particularly useful as default value for variables that may be set to a pattern that actually matches something.</source>
          <target state="translated">この変数には、いかなる文字列にもマッチしないことが保証された正規表現が含まれています。これは、実際に何かにマッチするパターンに設定されている可能性のある変数のデフォルト値として特に有用です。</target>
        </trans-unit>
        <trans-unit id="83869bf511c19ccf200615448ea094eb8264fd05" translate="yes" xml:space="preserve">
          <source>This variable contains an association list of file name patterns (regular expressions) and corresponding major mode commands. Usually, the file name patterns test for suffixes, such as &amp;lsquo;</source>
          <target state="translated">この変数には、ファイル名パターン（正規表現）と対応するメジャーモードコマンドの関連付けリストが含まれています。通常、ファイル名パターンは、 'などのサフィックスをテストします</target>
        </trans-unit>
        <trans-unit id="e804e8c8b587ca36a6d3e32c7a05dc988aeb0175" translate="yes" xml:space="preserve">
          <source>This variable contains the default global keymap that maps Emacs keyboard input to commands. The global keymap is normally this keymap. The default global keymap is a full keymap that binds &lt;code&gt;self-insert-command&lt;/code&gt; to all of the printing characters.</source>
          <target state="translated">この変数には、Emacsのキーボード入力をコマンドにマップするデフォルトのグローバルキーマップが含まれています。グローバルキーマップは通常、このキーマップです。デフォルトのグローバルキーマップは、 &lt;code&gt;self-insert-command&lt;/code&gt; をすべての印刷文字にバインドする完全なキーマップです。</target>
        </trans-unit>
        <trans-unit id="e4be09f34ec123990f2c0246a3f4862a2359ec9f" translate="yes" xml:space="preserve">
          <source>This variable contains the string or vector that defines the keyboard macro that is currently executing. It is &lt;code&gt;nil&lt;/code&gt; if no macro is currently executing. A command can test this variable so as to behave differently when run from an executing macro. Do not set this variable yourself.</source>
          <target state="translated">この変数には、現在実行中のキーボードマクロを定義する文字列またはベクトルが含まれます。現在実行中のマクロがない場合は &lt;code&gt;nil&lt;/code&gt; です。コマンドは、実行中のマクロから実行したときに異なる動作をするように、この変数をテストできます。この変数を自分で設定しないでください。</target>
        </trans-unit>
        <trans-unit id="7e6d774a84f545c518048f0a484c668d776d9a21" translate="yes" xml:space="preserve">
          <source>This variable contains the total number of garbage collections done so far in this Emacs session.</source>
          <target state="translated">この変数には、このEmacsセッションでこれまでに行われたガベージコレクションの総数が含まれます。</target>
        </trans-unit>
        <trans-unit id="59f6be89e0adfe21082faa223671481442a9e882" translate="yes" xml:space="preserve">
          <source>This variable contains the total number of seconds of elapsed time during garbage collection so far in this Emacs session, as a floating-point number.</source>
          <target state="translated">この変数には、このEmacsセッションにおけるこれまでのガベージコレクション中の経過時間の合計秒数が浮動小数点数として格納されます。</target>
        </trans-unit>
        <trans-unit id="50d408442d8079d9f6115134b3b5c66138abfe92" translate="yes" xml:space="preserve">
          <source>This variable controls automatic deletion of processes that have terminated (due to calling &lt;code&gt;exit&lt;/code&gt; or to a signal). If it is &lt;code&gt;nil&lt;/code&gt;, then they continue to exist until the user runs &lt;code&gt;list-processes&lt;/code&gt;. Otherwise, they are deleted immediately after they exit.</source>
          <target state="translated">この変数は、（ &lt;code&gt;exit&lt;/code&gt; の呼び出しまたはシグナルのために）終了したプロセスの自動削除を制御します。 &lt;code&gt;nil&lt;/code&gt; の場合、ユーザーが &lt;code&gt;list-processes&lt;/code&gt; を実行するまで存在し続けます。それ以外の場合は、終了後すぐに削除されます。</target>
        </trans-unit>
        <trans-unit id="9f1368d3656eb83cf1871e0b34b8f8be4582bf2e" translate="yes" xml:space="preserve">
          <source>This variable controls how &lt;code&gt;recenter-top-bottom&lt;/code&gt; behaves when called with no argument. The default value is &lt;code&gt;(middle top
bottom)&lt;/code&gt;, which means that successive calls of &lt;code&gt;recenter-top-bottom&lt;/code&gt; with no argument cycle between placing point at the middle, top, and bottom of the window.</source>
          <target state="translated">この変数は、引数なしで呼び出されたときの &lt;code&gt;recenter-top-bottom&lt;/code&gt; の動作を制御します。デフォルト値は &lt;code&gt;(middle top bottom)&lt;/code&gt; 。これは、ウィンドウの中央、上部、下部にポイントを配置する間に引数サイクルがない、 &lt;code&gt;recenter-top-bottom&lt;/code&gt; の連続呼び出しを意味します。</target>
        </trans-unit>
        <trans-unit id="dd2f55287cae06926037fbae5d83d066c0d39908" translate="yes" xml:space="preserve">
          <source>This variable controls how scrolling is done automatically when point moves off the screen (or into the scroll margin). If the value is a positive integer &lt;var&gt;n&lt;/var&gt;, then redisplay scrolls the text up to &lt;var&gt;n&lt;/var&gt; lines in either direction, if that will bring point back into proper view. This behavior is called &lt;em&gt;conservative scrolling&lt;/em&gt;. Otherwise, scrolling happens in the usual way, under the control of other variables such as &lt;code&gt;scroll-up-aggressively&lt;/code&gt; and &lt;code&gt;scroll-down-aggressively&lt;/code&gt;.</source>
          <target state="translated">この変数は、ポイントが画面から離れる（またはスクロールマージンに移動する）ときにスクロールが自動的に行われる方法を制御します。値が正の整数 &lt;var&gt;n&lt;/var&gt; の場合、redisplayはテキストをいずれかの方向に最大 &lt;var&gt;n&lt;/var&gt; 行までスクロールします。これにより、ポイントが適切なビューに戻ります。この動作は、&lt;em&gt;保守的なスクロール&lt;/em&gt;と呼ばれます。それ以外の場合、スクロールは通常の方法で、 &lt;code&gt;scroll-up-aggressively&lt;/code&gt; や &lt;code&gt;scroll-down-aggressively&lt;/code&gt; などの他の変数の制御下で行われます。</target>
        </trans-unit>
        <trans-unit id="366a8ab116129b00f2c6cd35a8a114c7dc0c97b9" translate="yes" xml:space="preserve">
          <source>This variable controls line truncation in &lt;em&gt;partial-width&lt;/em&gt; windows. A partial-width window is one that does not occupy the entire frame width (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;). If the value is &lt;code&gt;nil&lt;/code&gt;, line truncation is determined by the variable &lt;code&gt;truncate-lines&lt;/code&gt; (see above). If the value is an integer &lt;var&gt;n&lt;/var&gt;, lines are truncated if the partial-width window has fewer than &lt;var&gt;n&lt;/var&gt; columns, regardless of the value of &lt;code&gt;truncate-lines&lt;/code&gt;; if the partial-width window has &lt;var&gt;n&lt;/var&gt; or more columns, line truncation is determined by &lt;code&gt;truncate-lines&lt;/code&gt;. For any other non-&lt;code&gt;nil&lt;/code&gt; value, lines are truncated in every partial-width window, regardless of the value of &lt;code&gt;truncate-lines&lt;/code&gt;.</source>
          <target state="translated">この変数は、&lt;em&gt;部分幅&lt;/em&gt;ウィンドウでの行の切り捨てを制御します。部分幅ウィンドウは、フレーム幅全体を占めないウィンドウです（ウィンドウの&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;分割を&lt;/a&gt;参照）。値が &lt;code&gt;nil&lt;/code&gt; の場合、行の切り捨ては変数 &lt;code&gt;truncate-lines&lt;/code&gt; によって決定されます（上記を参照）。値が整数である場合 &lt;var&gt;n&lt;/var&gt; 部分幅ウィンドウはより少ないがある場合、行は切り捨てられ &lt;var&gt;n&lt;/var&gt; の値に関係なく、列 &lt;code&gt;truncate-lines&lt;/code&gt; 。部分幅ウィンドウに &lt;var&gt;n&lt;/var&gt; 個以上の列がある場合、行の切り捨ては &lt;code&gt;truncate-lines&lt;/code&gt; によって決定されます。その他の &lt;code&gt;nil&lt;/code&gt; 以外の場合値、行は、切り捨て行の値に関係なく、すべての部分幅ウィンドウで &lt;code&gt;truncate-lines&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec8d4a2a0c45b38bcb6700c9a2108cb5ab4130dd" translate="yes" xml:space="preserve">
          <source>This variable controls printing of &amp;lsquo;charset&amp;rsquo; text property on printing a string. The value should be &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, or &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">この変数は、文字列の印刷時の「charset」テキストプロパティの印刷を制御します。値は &lt;code&gt;nil&lt;/code&gt; 、 &lt;code&gt;t&lt;/code&gt; 、または &lt;code&gt;default&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="ddab823b28c28e86db35ce74b222db2e26efcedb" translate="yes" xml:space="preserve">
          <source>This variable controls processing of &amp;lsquo;</source>
          <target state="translated">この変数は 'の処理を制御します</target>
        </trans-unit>
        <trans-unit id="54c6f7b5b68437535cb932d55639d9d12f77049e" translate="yes" xml:space="preserve">
          <source>This variable controls the display of the startup echo area message. You can suppress the startup echo area message by adding text with this form to your init file:</source>
          <target state="translated">この変数は、起動時のエコーエリアメッセージの表示を制御します。init ファイルにこの形式のテキストを追加することで、起動時のエコーエリアメッセージを抑制することができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
