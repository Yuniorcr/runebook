<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="e89b83ea45b8211c6a3d739f6bcfdf5e0cd6f31e" translate="yes" xml:space="preserve">
          <source>Characters used to quote the following character so that it loses its normal syntactic meaning. This differs from an escape character in that only the character immediately following is ever affected.</source>
          <target state="translated">後続の文字を引用するために使用される文字で、通常の構文上の意味を失う。これはエスケープ文字とは異なり、直後の文字だけが影響を受ける。</target>
        </trans-unit>
        <trans-unit id="5229f8ca7b5787266007ffe5eba509ce0205199f" translate="yes" xml:space="preserve">
          <source>Checking Whether to Stop</source>
          <target state="translated">停止するかどうかの確認</target>
        </trans-unit>
        <trans-unit id="1a02b865af27fd48cef26220daaa2a67ec3dc750" translate="yes" xml:space="preserve">
          <source>Checks a watch specified by its &lt;var&gt;descriptor&lt;/var&gt; for validity. &lt;var&gt;descriptor&lt;/var&gt; should be an object returned by &lt;code&gt;file-notify-add-watch&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;descriptor&lt;/var&gt; で指定されたウォッチの有効性をチェックします。 &lt;var&gt;descriptor&lt;/var&gt; は、 &lt;code&gt;file-notify-add-watch&lt;/code&gt; によって返されるオブジェクトである必要があります。</target>
        </trans-unit>
        <trans-unit id="83179d5bd01bda75c335784db8234cd8ca386bda" translate="yes" xml:space="preserve">
          <source>Checksum/Hash</source>
          <target state="translated">Checksum/Hash</target>
        </trans-unit>
        <trans-unit id="679834cba93998f32ac18bdd82e858f68d5374ba" translate="yes" xml:space="preserve">
          <source>Child Frames</source>
          <target state="translated">子供のフレーム</target>
        </trans-unit>
        <trans-unit id="651d8f98e31cc326b908e8831624a12b619cdefd" translate="yes" xml:space="preserve">
          <source>Child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) can be used to display a buffer within the screen estate of the selected frame without disrupting that frame&amp;rsquo;s window configuration and without the overhead associated with full-fledged frames as inflicted by &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt;.</source>
          <target state="translated">子フレームは、（参照&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子フレームを&lt;/a&gt;することによって負わされるように）そのフレームのウィンドウ構成を中断することなく、かつ本格的なフレームに関連するオーバーヘッドなしに選択されたフレームの画面不動産内のバッファを表示するために使用することができる &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fd4ad5ffb3ee017cfd6baa0c4df549c330ffadb" translate="yes" xml:space="preserve">
          <source>Child frames are objects halfway between windows (see &lt;a href=&quot;windows#Windows&quot;&gt;Windows&lt;/a&gt;) and &amp;ldquo;normal&amp;rdquo; frames. Like windows, they are attached to an owning frame. Unlike windows, they may overlap each other&amp;mdash;changing the size or position of one child frame does not change the size or position of any of its sibling child frames.</source>
          <target state="translated">子フレームは、ウィンドウ（&lt;a href=&quot;windows#Windows&quot;&gt;Windowsを&lt;/a&gt;参照）と「通常の」フレームの中間にあるオブジェクトです。窓のように、それらは所有するフレームに取り付けられています。ウィンドウとは異なり、ウィンドウは互いにオーバーラップする場合があります。1つの子フレームのサイズまたは位置を変更しても、その兄弟の子フレームのサイズまたは位置は変更されません。</target>
        </trans-unit>
        <trans-unit id="54b1528f3b5e11f2897c9ba2b7e6b0d9a1b9f5ca" translate="yes" xml:space="preserve">
          <source>Choosing a Window for Displaying a Buffer</source>
          <target state="translated">バッファを表示するウィンドウの選択</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="73bcb4439511ca3316880511069b81c7b6b61a69" translate="yes" xml:space="preserve">
          <source>Classification of List Forms</source>
          <target state="translated">リストフォームの分類</target>
        </trans-unit>
        <trans-unit id="54c91eee8b88cd7a1da84e4494811ae5be0bed92" translate="yes" xml:space="preserve">
          <source>Classifying Events</source>
          <target state="translated">イベントの分類</target>
        </trans-unit>
        <trans-unit id="f5391928fc04cf37d3f22d32b219810c4273845a" translate="yes" xml:space="preserve">
          <source>Cleaning Up from Nonlocal Exits</source>
          <target state="translated">非ローカル出口からの片付け</target>
        </trans-unit>
        <trans-unit id="fc468d2ca020e6dff65c4251ad7d8bf45c408ae4" translate="yes" xml:space="preserve">
          <source>Clearing the screen and redrawing everything on it.</source>
          <target state="translated">画面をクリアして、その上にあるものを全て描き直す。</target>
        </trans-unit>
        <trans-unit id="7db198a937ac58d5e998c1fdbce3834a5ff9eca3" translate="yes" xml:space="preserve">
          <source>Click Events</source>
          <target state="translated">クリックしてイベント</target>
        </trans-unit>
        <trans-unit id="da6e383b5d1b1b1956e1584a3ad86559a36d616a" translate="yes" xml:space="preserve">
          <source>Click and drag events happen when the user releases a mouse button. They cannot happen earlier, because there is no way to distinguish a click from a drag until the button is released.</source>
          <target state="translated">クリックイベントとドラッグイベントは、ユーザーがマウスボタンを離したときに発生します。ボタンが離されるまでクリックとドラッグを区別する方法がないため、それ以前に発生することはできません。</target>
        </trans-unit>
        <trans-unit id="27f90a33cf05473b8ded38f28ac8d8396e58fe83" translate="yes" xml:space="preserve">
          <source>Close parenthesis characters: &amp;lsquo;</source>
          <target state="translated">括弧文字を閉じる： '</target>
        </trans-unit>
        <trans-unit id="16b1546bfaf51b2730baa3cec8823ad69c6d520a" translate="yes" xml:space="preserve">
          <source>Closures</source>
          <target state="translated">Closures</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="dee7438ecaee98dd605c8e5aa6a72193cc4f6922" translate="yes" xml:space="preserve">
          <source>Code Characters for interactive</source>
          <target state="translated">対話型のコード文字</target>
        </trans-unit>
        <trans-unit id="6470cde5fd75e1703752e56115e4bcddaf9cceb0" translate="yes" xml:space="preserve">
          <source>Code compiled with older versions of &lt;code&gt;cl-defstruct&lt;/code&gt; that doesn&amp;rsquo;t use records may run into problems when used in a new Emacs. To alleviate this, Emacs detects when an old &lt;code&gt;cl-defstruct&lt;/code&gt; is used, and enables a mode in which &lt;code&gt;type-of&lt;/code&gt; handles old struct objects as if they were records.</source>
          <target state="translated">レコードを使用しない古いバージョンの &lt;code&gt;cl-defstruct&lt;/code&gt; でコンパイルされたコードは、新しいEmacsで使用すると問題が発生する可能性があります。これを軽減するために、Emacsは古い &lt;code&gt;cl-defstruct&lt;/code&gt; が使用されたことを検出し、 &lt;code&gt;type-of&lt;/code&gt; が古いstructオブジェクトをレコードであるかのように処理するモードを有効にします。</target>
        </trans-unit>
        <trans-unit id="33fdada377e49ae37a3c31b87e114946ed169d2a" translate="yes" xml:space="preserve">
          <source>Code injection</source>
          <target state="translated">コードインジェクション</target>
        </trans-unit>
        <trans-unit id="18b0235e9afe1feaca30156e4892efc6ab26d7a5" translate="yes" xml:space="preserve">
          <source>Code to be evaluated when you compile.</source>
          <target state="translated">コンパイル時に評価されるコード。</target>
        </trans-unit>
        <trans-unit id="b6c3d03f3f13def89e9159e5bc9746d725a8a258" translate="yes" xml:space="preserve">
          <source>Coding Systems</source>
          <target state="translated">コーディングシステム</target>
        </trans-unit>
        <trans-unit id="09fbb89da0a4960ed091b8c56b1f02bba432c584" translate="yes" xml:space="preserve">
          <source>Coding Systems in Lisp</source>
          <target state="translated">Lispのコーディングシステム</target>
        </trans-unit>
        <trans-unit id="c9be43da075c215c8f83d1e681a4d817e7eaa607" translate="yes" xml:space="preserve">
          <source>Coding conventions for keymaps, etc.</source>
          <target state="translated">キーマップなどのコーディング規約</target>
        </trans-unit>
        <trans-unit id="39471b1fef4c84d820ea6e5a4212dd283a64a8c9" translate="yes" xml:space="preserve">
          <source>Coding systems</source>
          <target state="translated">コーディングシステム</target>
        </trans-unit>
        <trans-unit id="5fd08d03f752629350fef2d6b1fdacbc33659d81" translate="yes" xml:space="preserve">
          <source>Coding systems are conversions for saving files.</source>
          <target state="translated">コーディングシステムとは、ファイルを保存するための変換です。</target>
        </trans-unit>
        <trans-unit id="01b50d07b72e325efee7f2a5bf6c853960632b54" translate="yes" xml:space="preserve">
          <source>Coding-system for decoding the input from this process.</source>
          <target state="translated">このプロセスからの入力をデコードするための符号化システム。</target>
        </trans-unit>
        <trans-unit id="a85178ce8930e46ab4657390593e7e60d87d4c95" translate="yes" xml:space="preserve">
          <source>Coding-system for encoding the output to this process.</source>
          <target state="translated">このプロセスへの出力を符号化するための符号化システム。</target>
        </trans-unit>
        <trans-unit id="a24395fcf1b0bc32a7dfba3425426c6b7828a95f" translate="yes" xml:space="preserve">
          <source>Collapse the top-level Lisp form at point back to a single line.</source>
          <target state="translated">ポイントバックでのトップレベルのLispフォームを1行に折りたたむ。</target>
        </trans-unit>
        <trans-unit id="432d3e9ca89096f9c70a9bb73faa021692ce5813" translate="yes" xml:space="preserve">
          <source>Collecting output from an asynchronous subprocess.</source>
          <target state="translated">非同期サブプロセスからの出力を収集します。</target>
        </trans-unit>
        <trans-unit id="ebfb64e7412f7f27872aa6cf171f3913c339ce10" translate="yes" xml:space="preserve">
          <source>Color Names</source>
          <target state="translated">色名</target>
        </trans-unit>
        <trans-unit id="e3927d2c55cb26e4ebd8ce79eb7711e317d6fd30" translate="yes" xml:space="preserve">
          <source>Column number computations ignore the width of the window and the amount of horizontal scrolling. Consequently, a column value can be arbitrarily high. The first (or leftmost) column is numbered 0. They also ignore overlays and text properties, aside from invisibility.</source>
          <target state="translated">列数の計算は、ウィンドウの幅と水平スクロールの量を無視します。その結果、列の値は任意に高くなる可能性があります。最初の(または左端の)列には 0 が付けられます。 また、不可視性は別として、オーバーレイやテキストのプロパティも無視されます。</target>
        </trans-unit>
        <trans-unit id="3ea2ad512de5225992b14118d265ae7f9784a448" translate="yes" xml:space="preserve">
          <source>Combined with &lt;code&gt;set-mouse-absolute-pixel-position&lt;/code&gt;, this function can be used to move the mouse pointer to an arbitrary buffer position visible in some window:</source>
          <target state="translated">&lt;code&gt;set-mouse-absolute-pixel-position&lt;/code&gt; と組み合わせると、この関数を使用して、マウスポインタをウィンドウに表示されている任意のバッファ位置に移動できます。</target>
        </trans-unit>
        <trans-unit id="89e2914b178bf01f3b67e7bc4822bc007c826709" translate="yes" xml:space="preserve">
          <source>Combining the above steps, code that arranges for a C function &lt;code&gt;module_func&lt;/code&gt; to be callable as &lt;code&gt;module-func&lt;/code&gt; from Lisp will look like this, as part of the module initialization function:</source>
          <target state="translated">上記の手順を組み合わせると、C関数 &lt;code&gt;module_func&lt;/code&gt; をLispから &lt;code&gt;module-func&lt;/code&gt; として呼び出すことができるように調整するコードは、モジュール初期化関数の一部として次のようになります。</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="c540a913da6c7b24f00fa572431089391b33ba91" translate="yes" xml:space="preserve">
          <source>Command History</source>
          <target state="translated">コマンド履歴</target>
        </trans-unit>
        <trans-unit id="fd286e9f4701c5ae71cd777de6993c25d3f1eb67" translate="yes" xml:space="preserve">
          <source>Command Loop</source>
          <target state="translated">コマンドループ</target>
        </trans-unit>
        <trans-unit id="981f6c22cf8efdfc346eaed94e8c7f5cae58d8cc" translate="yes" xml:space="preserve">
          <source>Command Loop Overview</source>
          <target state="translated">コマンドループの概要</target>
        </trans-unit>
        <trans-unit id="3f3d24c09abbcec88e17c87c6854f2e4e285971d" translate="yes" xml:space="preserve">
          <source>Command string to query the host capabilities.</source>
          <target state="translated">ホストの機能を問い合わせるためのコマンド文字列。</target>
        </trans-unit>
        <trans-unit id="8dbfe3bf892eb128f5e004de24fe67ebda0dba0d" translate="yes" xml:space="preserve">
          <source>Command, macro, and special form descriptions have the same format, but the word &amp;lsquo;</source>
          <target state="translated">コマンド、マクロ、および特殊形式の説明は同じ形式ですが、単語 '</target>
        </trans-unit>
        <trans-unit id="bbfab97586e9e9754ecbaa71f3ee5cde157ac426" translate="yes" xml:space="preserve">
          <source>Command-Line Arguments</source>
          <target state="translated">コマンドライン引数</target>
        </trans-unit>
        <trans-unit id="59bc0e224c7e7e59056390feeaa654b6497e479a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;Helper-describe-bindings&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;Helper-describe-bindings&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02947e9cdbd2a788e40e92f3a39930efc038d654" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;Helper-help&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;ヘルパー-ヘルプ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f07969fc71bb922ddb78e99f2fb2f9dbf3bdee4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;abbrev-prefix-mark&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;abbrev-prefix-mark &lt;/strong&gt;&lt;em&gt;＆optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="16ae22e65e25d198b02e780000faaa640d81c403" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;abort-recursive-edit&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;abort-recursive-edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b64d5ee66c7a9bdfab9fafa524bbca02b5d9e0a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;add-name-to-file&lt;/strong&gt;&lt;em&gt;oldname newname &amp;amp;optional ok-if-already-exists&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;add-name-to-file &lt;/strong&gt;&lt;em&gt;oldname newname＆optional ok-if-already-exists&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2efdc1e04ae9bbfc8a5c5f77eb57393e6ba6c8a6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;append-to-file&lt;/strong&gt;&lt;em&gt;start end filename&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;ファイルに追加&lt;/strong&gt;&lt;em&gt;開始終了ファイル名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="444ee64e2cb86d4270389235ef9409b07d16db26" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;apropos&lt;/strong&gt;&lt;em&gt;pattern &amp;amp;optional do-all&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;適切な&lt;/strong&gt;&lt;em&gt;パターンとオプションのすべて&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3b13d866c34d7b2f40773b63466dff5c114c357" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;auto-save-mode&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;auto-save-mode &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98fda1dd64b95b361397324a49ef122a6fe4ec5e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;back-to-indentation&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;インデントに戻る&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5696804adbeb171e5e31ca9c4a46dad3af1ff4c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-button&lt;/strong&gt;&lt;em&gt;n &amp;amp;optional wrap display-message&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;戻るボタン&lt;/strong&gt;&lt;em&gt;n＆オプションの折り返し表示メッセージ&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7a9e2790a02fe4be912584770427851eb0c58fc9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-char&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;backward-char &lt;/strong&gt;&lt;em&gt;＆optional count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c4cd64a338a5515395a75f0997b22711d93b7c9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-delete-char-untabify&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional killp&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;backward-delete-char-untabify &lt;/strong&gt;&lt;em&gt;count＆optional killp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9b13005ec6a01d44552deb6087c47a03e742c8c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;backward-list &lt;/strong&gt;&lt;em&gt;＆optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4235d509f16b7475f2a35b4cd2e9f364b6395b2" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-sexp&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;backward-sexp &lt;/strong&gt;&lt;em&gt;＆optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd32744e5f47d652a012d23a6a5209212394c585" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-to-indentation&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;インデントに戻る&lt;/strong&gt;&lt;em&gt;＆オプションの引数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a826d20711b66f57cfb32a5c13243f2dc9d0c20e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-up-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg escape-strings no-syntax-crossing&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;backward-up-list &lt;/strong&gt;&lt;em&gt;＆optional arg escape-strings no-syntax-crossing&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd40da246e79640098fa204a6e526d41f51e3aa6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-word&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;backward-word &lt;/strong&gt;&lt;em&gt;＆optional count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2529cf99c47bd4f37db6757e1795094cc76a7016" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;balance-windows-area&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;balance-windows-area&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79d52d3178e06275261a84929e7b4211eb529d91" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;balance-windows&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window-or-frame&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;balance-windows &lt;/strong&gt;&lt;em&gt;＆optionalwindow-or-frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="686fae0f4b94961eb0689ba6c7e6962213cf4744" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;base64-decode-region&lt;/strong&gt;&lt;em&gt;beg end &amp;amp;optional base64url&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;base64-decode-region &lt;/strong&gt;&lt;em&gt;beg end＆optional base64url&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a821641a4a0f39aad5a202c8a22ae7316d0c383" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;base64-encode-region&lt;/strong&gt;&lt;em&gt;beg end &amp;amp;optional no-line-break&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;base64-encode-region &lt;/strong&gt;&lt;em&gt;beg end＆optional no-line-break&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5deed6bd00dfa73cad1194893a2dab5c283012e6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;base64url-encode-region&lt;/strong&gt;&lt;em&gt;beg end &amp;amp;optional no-pad&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;base64url-encode-region &lt;/strong&gt;&lt;em&gt;beg end＆optional no-pad&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e84b211208acb865a5546ff8abade8848b61de2" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;beginning-of-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional n&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;バッファの開始&lt;/strong&gt;&lt;em&gt;＆オプションn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd0dc7d516948caff6ff6c5577817f07d679609a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;beginning-of-defun&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;begin-of-defun &lt;/strong&gt;&lt;em&gt;＆optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee3a0cd20e0a26aeccf613b3c8d5cba8fc5296c8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;beginning-of-line&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;行頭&lt;/strong&gt;&lt;em&gt;とオプションのカウント&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8929c859fa86eb521234e1544261d86f664e84b5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;blink-matching-open&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;blink-matching-open&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec6265ad897022edcb9ad57cfc84936b56d9c03f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;buffer-disable-undo&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;buffer-disable-undo &lt;/strong&gt;&lt;em&gt;＆optionalbuffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="007cd9631bbb8465ff005d8df6e1d75eed331b06" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;buffer-enable-undo&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;buffer-enable-undo &lt;/strong&gt;&lt;em&gt;＆optionalbuffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a9f1425f3195bb90d82387a172f3935a7bc8ee5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;bury-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;bury-buffer &lt;/strong&gt;&lt;em&gt;＆optionalbuffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="18d41d965abd41ab91d23510dfb3d55dba2cea85" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;byte-compile-file&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional load&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;byte-compile-file &lt;/strong&gt;&lt;em&gt;filename＆optional load&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="803a259953f07768c90a958a12192e08209c1de8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;byte-recompile-directory&lt;/strong&gt;&lt;em&gt;directory &amp;amp;optional flag force&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;byte-recompile-directory &lt;/strong&gt;&lt;em&gt;directory＆optional flag force&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3b8340a584ae43edbe2cc3be252527a88e34e0d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;cancel-debug-on-entry&lt;/strong&gt;&lt;em&gt;&amp;amp;optional function-name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;cancel-debug-on-entry &lt;/strong&gt;&lt;em&gt;＆optional function-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="518730f23d22b0566fcfb9ef79408df20aa31eb7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;cancel-debug-on-variable-change&lt;/strong&gt;&lt;em&gt;&amp;amp;optional variable&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;cancel-debug-on-variable-change &lt;/strong&gt;&lt;em&gt;＆optional variable&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a84191d7e9c9413e8e2ff61685afdf2fbb47c539" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;capitalize-region&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;capitalize-region &lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28cca831889ad779b17e2bc1fa1b190fb83f5de0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;capitalize-word&lt;/strong&gt;&lt;em&gt;count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;大文字の単語&lt;/strong&gt;&lt;em&gt;数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d958a5ed4e4eee053c9387f1f89f0a389c0d6811" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;clone-indirect-buffer&lt;/strong&gt;&lt;em&gt;newname display-flag &amp;amp;optional norecord&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;clone-indirect-buffer &lt;/strong&gt;&lt;em&gt;newname display-flag＆optional norecord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81891a3e8ea7806000ede5731e7faba008a6bac9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;closepath&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;closepath&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9600bac0b950404c0923f7c2b93d80670ba8a2a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;compile-defun&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;compile-defun &lt;/strong&gt;&lt;em&gt;＆optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f63db58fb0ffa6ee7f256da91d1589656e6c7b97" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;copy-directory&lt;/strong&gt;&lt;em&gt;dirname newname &amp;amp;optional keep-time parents copy-contents&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;copy-directory &lt;/strong&gt;&lt;em&gt;dirname newname＆optional keep-time Parents copy-contents&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4d74f32426cc9f14311f20eff393517d0afab6d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;copy-file&lt;/strong&gt;&lt;em&gt;oldname newname &amp;amp;optional ok-if-already-exists time preserve-uid-gid preserve-extended-attributes&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;copy-file &lt;/strong&gt;&lt;em&gt;oldname newname＆optional ok-if-already-exists timepreserve-uid-gidpreserve-extended-attributes&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e848e946acd685526011028ba6dc37e80c9df39" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;copy-region-as-kill&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional region&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;copy-region-as-kill &lt;/strong&gt;&lt;em&gt;start end＆optional region&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aee190b0c6a011197cfacfa5dddca9e82b45d97a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;count-words&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;count-words &lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c92a2fea03b1c245964fbce8979c86f73488e79e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;curveto&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;curveto&lt;/strong&gt;&lt;em&gt;座標セット&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="922df3d3ddd2841a70c4146d8c090a753906afc3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;debug-on-entry&lt;/strong&gt;&lt;em&gt;function-name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;debug-on-entry &lt;/strong&gt;&lt;em&gt;function-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4863b75a64143403b9c6d8c5ea1467a4cf64aae5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;debug-on-variable-change&lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;debug-on-variable-change&lt;/strong&gt;&lt;em&gt;変数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbe4e5e24d2aa2f23b0a3b3e7a587806cb171098" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;debug&lt;/strong&gt;&lt;em&gt;&amp;amp;rest debugger-args&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;debug &lt;/strong&gt;&lt;em&gt;＆restdebugger-args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f9c2b6759e4509b7728d12193ccfdb8bc122ed35" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;decode-coding-region&lt;/strong&gt;&lt;em&gt;start end coding-system &amp;amp;optional destination&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;decode-coding-region &lt;/strong&gt;&lt;em&gt;start endcoding-system＆optional destination&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2756a122fc8cb6cfee9185b8d444d35e0b5b2fc8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-backward-char&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional killp&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-backward-char &lt;/strong&gt;&lt;em&gt;count＆optional killp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a9aeed952a3ba56790e714b9928f29943f95bbe7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-blank-lines&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-blank-lines&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="62c34c4923e17b7d0e5e1bec7ca9a8f8358a55c4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-char&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional killp&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-char &lt;/strong&gt;&lt;em&gt;count＆optional killp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="691f01e3fa0f4b6b47907082997fcf406d6386d9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-directory&lt;/strong&gt;&lt;em&gt;dirname &amp;amp;optional recursive trash&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-directory &lt;/strong&gt;&lt;em&gt;dirname＆optional recursive trash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45f93b85cde38b0a7cc615ef7cfe749e52bbfa10" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-file&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional trash&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;ファイル&lt;/strong&gt;&lt;em&gt;名の&lt;/em&gt;&lt;strong&gt;削除&lt;/strong&gt;&lt;em&gt;とオプションのゴミ箱&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a3fceb3f3c0e98f92e3fd4202a59cb3eb8dd624" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame force&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-frame &lt;/strong&gt;&lt;em&gt;＆optional frame force&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86ececc0777481e40660a2ff725bdcda17aa725f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-horizontal-space&lt;/strong&gt;&lt;em&gt;&amp;amp;optional backward-only&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-horizo​​ntal-space &lt;/strong&gt;&lt;em&gt;＆optionalbackward-only&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="656387dd155811d6e98405811ddd88b637cf21d6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-indentation&lt;/strong&gt;&lt;em&gt;&amp;amp;optional join-following-p beg end&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-indentation &lt;/strong&gt;&lt;em&gt;＆optional join-following-p beg end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="698a3aaf6b4c8adf75662a04e6a7c5d0be250682" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-minibuffer-contents&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-minibuffer-contents&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f8d6f35dde4b84863e3f1877dd018b4e8bcbcba0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-other-frames&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-other-frames &lt;/strong&gt;&lt;em&gt;＆optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e2a8ece1dd524c2478b7b4f1767035dd2f73a456" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-other-windows&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-other-windows &lt;/strong&gt;&lt;em&gt;＆optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1d80f5fc2f0bf8867b4549863fc440dda2d6699" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-region&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-region &lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c52d0a0cb1c4d3e5116f8c0b7d347424dea77d41" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-trailing-whitespace&lt;/strong&gt;&lt;em&gt;&amp;amp;optional start end&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-trailing-whitespace &lt;/strong&gt;&lt;em&gt;＆optional start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="549a3d4828134516d0bf60010bcfe475973d893a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-window &lt;/strong&gt;&lt;em&gt;＆optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab76dec031d048675ba017ea3ea777d14c1f726a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-windows-on&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name frame&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;delete-windows-on &lt;/strong&gt;&lt;em&gt;＆optional buffer-or-name frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3fdb84a5c86a34182acfc86473256621e5173cf5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-bindings&lt;/strong&gt;&lt;em&gt;&amp;amp;optional prefix buffer-or-name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;describe-bindings &lt;/strong&gt;&lt;em&gt;＆optional prefix buffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eac291ce203288be6eb9f6a92d853493f0c0e3c8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-buffer-case-table&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;describe-buffer-case-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b2831cfd8813191e73cd78995ca8ca2c694ee09" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-categories&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;describe-categories &lt;/strong&gt;&lt;em&gt;＆optionalbuffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d033724b174f562b0324fc20868921e01c4a2045" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-current-display-table&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;describe-current-display-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="336c4bbd9c280813d533bc3dd8b8838799f1bcea" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-mode&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;describe-mode &lt;/strong&gt;&lt;em&gt;＆optional buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a442b1e3d6410066f99d90c1fd68f33f064ac1ae" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-prefix-bindings&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;describe-prefix-bindings&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e2e2eaf639122189e404c98a0c113086e31cf87" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-syntax&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;describe-構文&lt;/strong&gt;&lt;em&gt;とオプションのバッファ&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a29a4c440dea09a3db7b1f2f95796cff0a414da4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;digit-argument&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;digit-argument &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81a8ab84fead6d5a35f538f69ddd1b0302e5a06c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;disable-command&lt;/strong&gt;&lt;em&gt;command&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;disable-command&lt;/strong&gt;&lt;em&gt;コマンド&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06de647f35ac4ae305d187b9185d78f8a714554d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;disable-theme&lt;/strong&gt;&lt;em&gt;theme&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;disable-theme &lt;/strong&gt;&lt;em&gt;theme&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="26931dbc9579eecf14dbe8dd7175172e939bbb53" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;disassemble&lt;/strong&gt;&lt;em&gt;object &amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;em&gt;オブジェクトとオプションのバッファまたは名前を&lt;/em&gt;&lt;strong&gt;分解し&lt;/strong&gt;&lt;em&gt;ます&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c258e71e44175155cd46fe7ebe7441067916e47" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;display-buffer&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional action frame&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;display-buffer &lt;/strong&gt;&lt;em&gt;buffer-or-name＆optional action frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6c4afa013c978edae68d1a4e7144699522dbddb" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;do-auto-save&lt;/strong&gt;&lt;em&gt;&amp;amp;optional no-message current-only&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;do-auto-save &lt;/strong&gt;&lt;em&gt;＆optional no-messagecurrent-only&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d019dcfc74c5246c50871a7f9ea70aa04c8bb096" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;down-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;ダウンリスト&lt;/strong&gt;&lt;em&gt;＆オプションの引数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46caaef87b1928f17de0c5d83ece3d622dd29a2f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;downcase-region&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;downcase-region &lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f2ed36185c4514de8b8a135be7bbc75a3c5e142" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;downcase-word&lt;/strong&gt;&lt;em&gt;count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;小文字-単語&lt;/strong&gt;&lt;em&gt;数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="547f5a4b5ff359929b595e9f28b3da5f2c4ed1b1" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;edebug-display-freq-count&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;edebug-display-freq-count&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24ab3882e83bdbc401485f8a5f96e49b2b6a7a9d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;edebug-set-initial-mode&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;edebug-set-initial-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4e67ad5f5bff63b162bba1f9dfd00d51dae1562" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;elliptical-arc&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;楕円弧&lt;/strong&gt;&lt;em&gt;座標セット&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cabb3019c3ea4ca9d57ccd698958feb6a93de274" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;emacs-init-time&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;emacs-init-time&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="58541ffbf3952425a5ade30559e989570a2b4d1f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;emacs-uptime&lt;/strong&gt;&lt;em&gt;&amp;amp;optional format&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;emacs-uptime &lt;/strong&gt;&lt;em&gt;＆optional format&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c3fb7f171f9110d44b59ba2ad7587b9bc102b7c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;emacs-version&lt;/strong&gt;&lt;em&gt;&amp;amp;optional here&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;emacs-version &lt;/strong&gt;&lt;em&gt;＆optional here&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b140e2d789bf4ba1bf77c76fcee6a89e9f628655" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;enable-command&lt;/strong&gt;&lt;em&gt;command&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;enable-command&lt;/strong&gt;&lt;em&gt;コマンド&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="57a546f18ba9a39723c06bbc9343368c68b2ab14" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;enable-theme&lt;/strong&gt;&lt;em&gt;theme&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;enable-theme&lt;/strong&gt;&lt;em&gt;テーマ&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7cefa7e9a66ea8211e8d79234b5e8d10c91641f6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;encode-coding-region&lt;/strong&gt;&lt;em&gt;start end coding-system &amp;amp;optional destination&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;encode-coding-region &lt;/strong&gt;&lt;em&gt;start endcoding-system＆optional destination&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5558e507573728623a38b84cf073899bec05d473" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;end-of-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional n&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;バッファの終わり&lt;/strong&gt;&lt;em&gt;＆オプションn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cfb3cd165fcc03777b037258d057b1c95e6f54e0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;end-of-defun&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;end-of-defun &lt;/strong&gt;&lt;em&gt;＆optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="affc2da175fb6b2ce6cd24c2100689ba30580f3a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;end-of-line&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;行末&lt;/strong&gt;&lt;em&gt;とオプションのカウント&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="311b6bddea93a0c2ef32275dcad433191db0e2c6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;erase-buffer&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;erase-buffer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8507804a7df314eff4fab5265c05f0aa89c2e9d8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;eval-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name stream filename unibyte print&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;eval-buffer &lt;/strong&gt;&lt;em&gt;＆optional buffer-or-name stream filename unibyte print&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8a8ea8f53d14afa1a1416f0a8190e8b9a72eaae2" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;eval-region&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional stream read-function&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;eval-region &lt;/strong&gt;&lt;em&gt;start end＆optional streamread-function&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7e63fcff3071920b098a1ec1938c9a6c0f18e2e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;execute-extended-command&lt;/strong&gt;&lt;em&gt;prefix-argument&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;execute-extended-command &lt;/strong&gt;&lt;em&gt;prefix-argument&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c10136cd2348184f37a28f58788ac74070e8ee8b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;exit-minibuffer&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;exit-minibuffer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14ce7837436f33568662d572c1424f45c34ad565" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;exit-recursive-edit&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;exit-recursive-edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a44dd6987a1ffba7aa55dc8e00995c7bf0f6851" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;expand-abbrev&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;expand-abbrev&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d7efe99ce5558874e7885b19e171f4ccd1773f8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fill-individual-paragraphs&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional justify citation-regexp&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;fill-individual-paragraphs &lt;/strong&gt;&lt;em&gt;start end＆optional justify citation-regexp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="68f8b04bf4a87f26b77e1d3968b4e76c33ade7bd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fill-paragraph&lt;/strong&gt;&lt;em&gt;&amp;amp;optional justify region&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;fill-paragraph &lt;/strong&gt;&lt;em&gt;＆optional justify region&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab43b90e94a5eacc656ea508bfe428a707981482" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fill-region-as-paragraph&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional justify nosqueeze squeeze-after&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;fill-region-as-paragraph &lt;/strong&gt;&lt;em&gt;start end＆optional justify nosqueezesqueeze-after&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ce218dfd77e733846a751ec2bf76e6496a4fb62" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fill-region&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional justify nosqueeze to-eop&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;fill-region &lt;/strong&gt;&lt;em&gt;start end＆optional justify nosqueezeto-eop&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="434503cd260d6caf1783e81862bf7d7f958488b2" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;find-file-literally&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;find-file-literally &lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14bae761c2ce9c1a3851b74464415e97b17653ab" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;find-file-other-window&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional wildcards&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;find-file-other-window &lt;/strong&gt;&lt;em&gt;filename＆optional wildcards&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d14c0ebad95fa0a47437a551648265c9d061f748" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;find-file-read-only&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional wildcards&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;find-file-read-only &lt;/strong&gt;&lt;em&gt;filename＆optional wildcards&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69b8e9e849fba2d10d533610173431469994f8c7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;find-file&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional wildcards&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;ファイル&lt;/strong&gt;&lt;em&gt;名の&lt;/em&gt;&lt;strong&gt;検索&lt;/strong&gt;&lt;em&gt;とオプションのワイルドカード&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="518b952f143fd81d1f28ef013315ad4b62bdd33c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fit-frame-to-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame max-height min-height max-width min-width only&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;fit-frame-to-buffer &lt;/strong&gt;&lt;em&gt;＆optional frame max-height min-height max-width min-width only&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7f8405a86f9c611b5ab93931c6e30c1825512fb" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fit-window-to-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window max-height min-height max-width min-width preserve-size&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;fit-window-to-buffer &lt;/strong&gt;&lt;em&gt;＆optional window max-height min-height max-width min-widthpreserve-size&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f95dcb269e6ce80fcb7b09dcae7b7e0f6699bc37" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fixup-whitespace&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;fixup-空白&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e131e6aa4792af96b8b47f0b787ae4f77fe31002" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;format-find-file&lt;/strong&gt;&lt;em&gt;file format&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;format-find-file &lt;/strong&gt;&lt;em&gt;file format&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d701179e67643c161c33eb711d33ea7935b176b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;format-insert-file&lt;/strong&gt;&lt;em&gt;file format &amp;amp;optional beg end&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;format-insert-file &lt;/strong&gt;&lt;em&gt;file format＆optional beg end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="711b38bfe6c4319d48b9a18fc30275f30df997e0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;format-write-file&lt;/strong&gt;&lt;em&gt;file format &amp;amp;optional confirm&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;format-write-file &lt;/strong&gt;&lt;em&gt;file format＆optionalconfirm&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="33efdff38220ef39e744f81152bc08b28e716bfb" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-button&lt;/strong&gt;&lt;em&gt;n &amp;amp;optional wrap display-message no-error&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;進むボタン&lt;/strong&gt;&lt;em&gt;n＆オプションの折り返し表示-メッセージエラーなし&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2014b76c37bc1fe83082bc4f55d88e9d81b473d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-char&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;forward-char &lt;/strong&gt;&lt;em&gt;＆optional count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a8227b7963bdd3e086fda44e0acb9ffc5a41d03" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-line&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;フォワードライン&lt;/strong&gt;&lt;em&gt;＆オプションカウント&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0f8a26fb43b647c16417b5303e3f4062ce465f7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;forward-list &lt;/strong&gt;&lt;em&gt;＆optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0037e9c22b9632b0ca04b8d1041b7e512038fd2b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-sexp&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;forward-sexp &lt;/strong&gt;&lt;em&gt;＆optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66680ad0ead308cbc5de61a61947e92c0c37480e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-to-indentation&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;forward-to-indentation &lt;/strong&gt;&lt;em&gt;＆optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7bec9ec6d36d1f1e580fd123f73cf8c5c74421e3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-word&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;フォワードワード&lt;/strong&gt;&lt;em&gt;＆オプションカウント&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b8364d43b28915c9aaee538c0e9c397067ed8ca" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fundamental-mode&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;基本モード&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="135aceda589a7c28e8dc596bd3d2d52009ad05e3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;garbage-collect&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;ガベージコレクション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9d187e4a90283b895d6eafb68e76b9ea4cdf80c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;getenv&lt;/strong&gt;&lt;em&gt;var &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;getenv &lt;/strong&gt;&lt;em&gt;var＆optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="33e55fe619dc268c2fdd48a00c02ecb5011d3dd4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;global-set-key&lt;/strong&gt;&lt;em&gt;key binding&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;global-set-key &lt;/strong&gt;&lt;em&gt;key binding&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b8c01b4e1a3225ffc294eaf4947f415a25abd03" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;global-unset-key&lt;/strong&gt;&lt;em&gt;key&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;global-unset-key &lt;/strong&gt;&lt;em&gt;key&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d425ab0b8cce6194c6f5b89db301531080023dc" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;goto-char&lt;/strong&gt;&lt;em&gt;position&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;goto-char&lt;/strong&gt;&lt;em&gt;位置&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3243d2c8b4e732a6798da7f7b67c28d6a5e8f8a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;goto-history-element&lt;/strong&gt;&lt;em&gt;nabs&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;goto-history-element &lt;/strong&gt;&lt;em&gt;nabs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5d834632457aacbe6d67cc5373d0406ff46bd8f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;gui-set-selection&lt;/strong&gt;&lt;em&gt;type data&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;gui-set-selection &lt;/strong&gt;&lt;em&gt;type data&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f9f71a68f0ae3f417936f4352b4c97c9f532b3d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;handle-focus-in&lt;/strong&gt;&lt;em&gt;event&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;handle-focus-in&lt;/strong&gt;&lt;em&gt;イベント&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dcf5ba9ab88d788cd9ccd08083274712148f2d33" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;handle-switch-frame&lt;/strong&gt;&lt;em&gt;frame&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;handle-switch-frame &lt;/strong&gt;&lt;em&gt;frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd7c8fc606e350a862c82219a85c9fcc1e734aac" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;horizontal-lineto&lt;/strong&gt;&lt;em&gt;x-coordinates&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;horizo​​ntal-lineto &lt;/strong&gt;&lt;em&gt;x-coordinates&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0bca4d375084c490d38732649901037af18600c4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;iconify-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;iconify-frame &lt;/strong&gt;&lt;em&gt;＆optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28376f6d4d14d4ba95f6cd0ef14d519469faa819" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;imenu-add-to-menubar&lt;/strong&gt;&lt;em&gt;name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;imenu-add-to-menubar &lt;/strong&gt;&lt;em&gt;name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="83d85e704073a680a9ab40860b3fb4e35d736c5b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-according-to-mode&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;インデント-モードに応じて&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c246ad642a506335ea203b08a4add72f01f6dca0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-code-rigidly&lt;/strong&gt;&lt;em&gt;start end columns &amp;amp;optional nochange-regexp&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;indent- &lt;/strong&gt;&lt;em&gt;code-&lt;/em&gt;&lt;strong&gt;厳密に&lt;/strong&gt;&lt;em&gt;開始終了列＆オプションのnochange-regexp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="270e3f43020e9bd9e93667655679dcc6f2f9fe1a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-for-tab-command&lt;/strong&gt;&lt;em&gt;&amp;amp;optional rigid&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;indent-for-tab-command &lt;/strong&gt;&lt;em&gt;＆optionalrigid&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="176c4e43ff80664444fd466c019171b4694d2e74" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-region&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional to-column&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;indent-region &lt;/strong&gt;&lt;em&gt;start end＆optionalto-column&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3998d8394b9540580f612fe25fb7c64ca60d8620" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-relative-first-indent-point&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;indent-relative-first-indent-point&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e772c9806c8ce05ec3da6ba4d032df8b1df85953" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-relative&lt;/strong&gt;&lt;em&gt;&amp;amp;optional unindented-ok&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;indent-relative &lt;/strong&gt;&lt;em&gt;＆optional unindented-ok&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b412adbd584000dac1a0bbd5689936f4fd539ccd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-rigidly&lt;/strong&gt;&lt;em&gt;start end count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;インデント-&lt;/strong&gt;&lt;em&gt;終了カウントを&lt;/em&gt;&lt;strong&gt;厳密に&lt;/strong&gt;&lt;em&gt;開始します&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c8e4d649047379c5e17f55c86d9cc6706a77396a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-to&lt;/strong&gt;&lt;em&gt;column &amp;amp;optional minimum&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;インデント-&lt;/strong&gt;&lt;em&gt;列とオプションの最小値&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a71481f19a91b478a7aff6890d9357e5abad35c0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;insert-buffer&lt;/strong&gt;&lt;em&gt;from-buffer-or-name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;insert-bufferfrom &lt;/strong&gt;&lt;em&gt;-buffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b8815e94521d52fd77a29d3fda24dcf8285b17f8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;insert-char&lt;/strong&gt;&lt;em&gt;character &amp;amp;optional count inherit&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;挿入&lt;/strong&gt;&lt;em&gt;文字とオプションのカウント継承&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e0abbf19abc072a6b7b56407403dfb3335e38cc" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;insert-register&lt;/strong&gt;&lt;em&gt;reg &amp;amp;optional beforep&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;insert-register &lt;/strong&gt;&lt;em&gt;reg＆optional beforep&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e79b06800ecaca9051978dbfe7dab6c1ffeefd95" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;invert-face&lt;/strong&gt;&lt;em&gt;face &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;反転&lt;/strong&gt;&lt;em&gt;面とオプションのフレーム&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84b0549cc40b42a2b15cd0cc95fad9c69f7c892d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;just-one-space&lt;/strong&gt;&lt;em&gt;&amp;amp;optional n&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;ジャストワンスペース&lt;/strong&gt;&lt;em&gt;＆オプションn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8aab092a162541dd2a9606d54cfd8c2450be8b36" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;justify-current-line&lt;/strong&gt;&lt;em&gt;&amp;amp;optional how eop nosqueeze&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;justify-current-line &lt;/strong&gt;&lt;em&gt;＆optional how eop nosqueeze&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9fb476cea6da1e9d1098cc4d6c7b16673e9ad0bf" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;keyboard-quit&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;キーボード終了&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a435d92658abec77f53a10b92fb9dcfed65ae6d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;kill-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;kill-buffer &lt;/strong&gt;&lt;em&gt;＆optionalbuffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="003da45d20aee1fe9532383f88b7a68e585e86c6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;kill-emacs&lt;/strong&gt;&lt;em&gt;&amp;amp;optional exit-data&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;kill-emacs &lt;/strong&gt;&lt;em&gt;＆optional exit-data&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="407c7e175dd49c63417e8b8c7397848b158b56e5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;kill-local-variable&lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;kill-local-variable&lt;/strong&gt;&lt;em&gt;変数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="845138c1a1f687d73d2dba1b16c82e5d6b0dee55" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;kill-region&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional region&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;kill-region &lt;/strong&gt;&lt;em&gt;start end＆optional region&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e21f7f25793d2f5ca420e1502b941a4589e7050a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;lineto&lt;/strong&gt;&lt;em&gt;points&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;lineto &lt;/strong&gt;&lt;em&gt;points&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ca6885773c7d98728104aee98c243a122bf90a6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;list-charset-chars&lt;/strong&gt;&lt;em&gt;charset&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;list-charset-chars &lt;/strong&gt;&lt;em&gt;charset&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="55b2c51859f6e32fbb9ed38f8d57d0a6cebd5881" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;list-load-path-shadows&lt;/strong&gt;&lt;em&gt;&amp;amp;optional stringp&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;list-load-path-shadows &lt;/strong&gt;&lt;em&gt;＆optional stringp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="35950266cb0a951b746684628f7a7e78a4209727" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;list-processes&lt;/strong&gt;&lt;em&gt;&amp;amp;optional query-only buffer&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;list-processes &lt;/strong&gt;&lt;em&gt;＆optional query-only buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11ef8f8a469800b67f120785941b41ba290c31ac" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;load-file&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;load-file &lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7af6470f785f84f9c97a9317219a0728d1ad1a50" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;load-library&lt;/strong&gt;&lt;em&gt;library&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;ロードライブラリ&lt;/strong&gt;&lt;em&gt;ライブラリ&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="013c40fb40b23fc8c45f3faf70dcda1430877894" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;load-theme&lt;/strong&gt;&lt;em&gt;theme &amp;amp;optional no-confirm no-enable&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;load-theme &lt;/strong&gt;&lt;em&gt;theme＆optional no-confirm no-enable&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac160e12e0ed8e1587e6190b966f539227605142" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;local-set-key&lt;/strong&gt;&lt;em&gt;key binding&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;local-set-key&lt;/strong&gt;&lt;em&gt;キーバインディング&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="89649055e1c984642257be864cafca2874c483b7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;local-unset-key&lt;/strong&gt;&lt;em&gt;key&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;local-unset-key &lt;/strong&gt;&lt;em&gt;key&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7be867a95825683de61435921e7202786ad6eb55" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;locate-library&lt;/strong&gt;&lt;em&gt;library &amp;amp;optional nosuffix path interactive-call&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;locate-library&lt;/strong&gt;&lt;em&gt;ライブラリとオプションのnosuffix pathInteractive-call&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08037e8341deaa6f71d7210c061cf49b6c682a39" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;lower-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;下部フレーム&lt;/strong&gt;&lt;em&gt;とオプションフレーム&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84ba2f2b19a73a4d24d6d71bc57d767c69ca6bbe" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-directory&lt;/strong&gt;&lt;em&gt;dirname &amp;amp;optional parents&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;make-directory &lt;/strong&gt;&lt;em&gt;dirname＆optionalparents&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5431e989d4d25206363accc61bf35ed9587b4d77" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-empty-file&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional parents&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;make-empty-file &lt;/strong&gt;&lt;em&gt;filename＆optionalparents&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c6d7ba5a8f3796e9f2a54c0d24f19bbd274714f9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-frame-invisible&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame force&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;make-frame-invisible &lt;/strong&gt;&lt;em&gt;＆optional frame force&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb99d3fb40c563f58915bd80fef630df1d70c0dd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-frame-on-display&lt;/strong&gt;&lt;em&gt;display &amp;amp;optional parameters&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;make-frame-on-display &lt;/strong&gt;&lt;em&gt;display＆optionalparameters&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5bfca4bc3079dffd13fca42de356d69dc865d29c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-frame-on-monitor&lt;/strong&gt;&lt;em&gt;monitor &amp;amp;optional display parameters&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;make-frame-on-monitor&lt;/strong&gt;&lt;em&gt;モニターとオプションの表示パラメーター&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6b559a010673d902e44d6c6af31a4ded7444ee8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-frame-visible&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;make-frame-visible &lt;/strong&gt;&lt;em&gt;＆optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ce9c3687a670fdb34d0bc46d50ed28079683e4f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional parameters&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;make-frame &lt;/strong&gt;&lt;em&gt;＆optionalparameters&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cad230c5fa9a3a7dd4a62094589957160d65dd9f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-indirect-buffer&lt;/strong&gt;&lt;em&gt;base-buffer name &amp;amp;optional clone&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;make-indirect-buffer &lt;/strong&gt;&lt;em&gt;base-buffer name＆optional clone&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae05b085c0569831165199ec9aa9c5fde7df1f5d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-local-variable&lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;make-local-variable&lt;/strong&gt;&lt;em&gt;変数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="033747c1752579ab5ac79bb175041d5dfc750db9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-symbolic-link&lt;/strong&gt;&lt;em&gt;target linkname &amp;amp;optional ok-if-already-exists&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;make-symbolic-link &lt;/strong&gt;&lt;em&gt;target linkname＆optional ok-if-already-exists&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0d2dc0a8369a06f77f3fc047cd2cd561194a19f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-variable-buffer-local&lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;make-variable-buffer-local &lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0747495bc61c5c5e7609fcd9400132392a461229" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;maximize-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;maximize-window &lt;/strong&gt;&lt;em&gt;＆optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62192a7aabcc06f8e06b95087fc0f9b31d4ae0b1" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minibuffer-complete-and-exit&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;minibuffer-complete-and-exit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="608122c10a17b5fb4a5dfa634426856ba9a38d99" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minibuffer-complete-word&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;minibuffer-complete-word&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2300325c2f35af5ba5040d68e46ca3914dcead0a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minibuffer-complete&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;minibuffer-complete&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35457412f265029bc4450a06997c61b1e90e4279" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minibuffer-completion-help&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;minibuffer-completion-help&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80f7dcfe74a74563bdbf01c08bf0e4ed66aa50aa" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minibuffer-inactive-mode&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;minibuffer-inactive-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea0a208312c6a812b9877c5482ecf002c10b1145" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minimize-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;minimize-window &lt;/strong&gt;&lt;em&gt;＆optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a04c5beb4c30420f2ee48c9701675fc7cae8833f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;modify-syntax-entry&lt;/strong&gt;&lt;em&gt;char syntax-descriptor &amp;amp;optional table&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;modify-syntax-entry &lt;/strong&gt;&lt;em&gt;char Syntax-descriptor＆optional table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14767c417881034bb42a7a88700922aaacf19227" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;move-to-column&lt;/strong&gt;&lt;em&gt;column &amp;amp;optional force&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;列に移動&lt;/strong&gt;&lt;em&gt;列とオプションの力&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bdf6c05afa3de8f0ee2b3798432eb42eb930bd9f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;move-to-left-margin&lt;/strong&gt;&lt;em&gt;&amp;amp;optional n force&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;move-to-left-margin &lt;/strong&gt;&lt;em&gt;＆optional n force&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37977269d224e0a44d6af18b87ecc84ab76e12a4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;move-to-window-line&lt;/strong&gt;&lt;em&gt;count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;ウィンドウ行への移動&lt;/strong&gt;&lt;em&gt;カウント&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0743135a7d1617a7eb47c1caee68689789b2191d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;moveto&lt;/strong&gt;&lt;em&gt;points&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;moveto &lt;/strong&gt;&lt;em&gt;points&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11bde94aad75b99ef2f61c901c05a0e9a37aa02d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;narrow-to-page&lt;/strong&gt;&lt;em&gt;&amp;amp;optional move-count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;ページに絞り込む&lt;/strong&gt;&lt;em&gt;＆オプションの移動数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea57559d6b3f53eeacebd9b28862cf0d143b0d07" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;narrow-to-region&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;ナロートゥリージョン&lt;/strong&gt;&lt;em&gt;開始終了&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7b86fb8b873de48205f3acb26db2a8d54ea50dd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;negative-argument&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;negative-argument &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ac29756d604e4f2b405639a717f03dc4ee0b680" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;newline-and-indent&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;改行とインデント&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ac7ce7c6f53066b18c805477f90a7c7771ecaae" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;newline&lt;/strong&gt;&lt;em&gt;&amp;amp;optional number-of-newlines interactive&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;改行&lt;/strong&gt;&lt;em&gt;とオプションの&lt;/em&gt;&lt;strong&gt;改行&lt;/strong&gt;&lt;em&gt;数インタラクティブ&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01a84cf716a0ecc4ee2e43bcd3661816eca63631" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;next-complete-history-element&lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;next-complete-history-element &lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c09d36f1961233a215a7095161026051f746207" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;next-history-element&lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;next-history-element &lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ddf13c65b799aa7f4f157c951cd0584a7e3c8e0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;next-matching-history-element&lt;/strong&gt;&lt;em&gt;pattern n&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;next-matching-history-element &lt;/strong&gt;&lt;em&gt;pattern n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5160e0482b8ccd3e0148335c82247d6b5b7a7a84" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;normal-mode&lt;/strong&gt;&lt;em&gt;&amp;amp;optional find-file&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;通常モード&lt;/strong&gt;&lt;em&gt;とオプションの検索ファイル&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="538c336e406ef98faaa2c1d7e5f196aeb01a1631" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;not-modified&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;変更されていない&lt;/strong&gt;&lt;em&gt;＆オプションの引数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ff77288095b01f32a9f054a3a8d866967ddfc5fa" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;open-dribble-file&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;open-dribble-fileファイル&lt;/strong&gt;&lt;em&gt;名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2cdb754aa18c8a1ef26a91efce8b7b800ec522a1" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;open-termscript&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;open-termscript&lt;/strong&gt;&lt;em&gt;ファイル名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec4897db34aca6ed970591552341737ebe4a5ffb" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;other-window&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional all-frames&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;other-window &lt;/strong&gt;&lt;em&gt;count＆optionalall-frames&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f38ac22323bc41502c239e76a7faef10b354741" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;package-initialize&lt;/strong&gt;&lt;em&gt;&amp;amp;optional no-activate&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;package-initialize &lt;/strong&gt;&lt;em&gt;＆optional no-activate&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00a39a71d7924fe5a7ed3b4e07812b8d12cbd590" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;play-sound-file&lt;/strong&gt;&lt;em&gt;file &amp;amp;optional volume device&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;play-sound-file &lt;/strong&gt;&lt;em&gt;file＆optional volume device&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce84cf4c19993ae58f93047680f36f7acc5a623c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;pop-to-buffer&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional action norecord&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;pop-to-buffer &lt;/strong&gt;&lt;em&gt;buffer-or-name＆optional action norecord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2731d47faaeb80da67df382baac6fbe574393ae" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;posix-search-backward&lt;/strong&gt;&lt;em&gt;regexp &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;posix-search-backward &lt;/strong&gt;&lt;em&gt;regexp＆optional limit noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c42f6c7f8b9f92ef8e7fefa083ccdb2efafbed6d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;posix-search-forward&lt;/strong&gt;&lt;em&gt;regexp &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;posix-search-forward &lt;/strong&gt;&lt;em&gt;regexp＆optional limit noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b240ab9cedf57ed3edc8c6e3afbe8b0074796aec" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;previous-complete-history-element&lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;previous-complete-history-element &lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f93724e093845c7199046be7deab55e1c094b13d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;previous-history-element&lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;previous-history-element &lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ba4a10bda5511d61f2c2c1d782ce16a6e5b363f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;previous-matching-history-element&lt;/strong&gt;&lt;em&gt;pattern n&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;previous-matching-history-element &lt;/strong&gt;&lt;em&gt;pattern n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee76e7f8b92c4aebdcbd9eabef7e70e06432f582" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;prog-mode&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;prog-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff71199cac5c2e86d312db76b154347d7dbb801f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;push-button&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos use-mouse-action&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;プッシュボタン&lt;/strong&gt;&lt;em&gt;＆オプションの位置使用-マウス-アクション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0364648b0fb1183b2e4a88084380dd8f2eb4adf0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;quadratic-bezier-curveto&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;quadratic-bezier-curveto&lt;/strong&gt;&lt;em&gt;座標セット&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3b557efeb3692c1427f167c060ccf92b90648f32" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;quit-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional kill window&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;quit-window &lt;/strong&gt;&lt;em&gt;＆optional kill window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d9e9cd6afcaea9275dd62ff0d547dc8cf0ddff5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;raise-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;raise-frame &lt;/strong&gt;&lt;em&gt;＆optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f6a55ebbf0177dc6e3b663a77d46b71aae5e4a3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;re-search-backward&lt;/strong&gt;&lt;em&gt;regexp &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;re-search-backward &lt;/strong&gt;&lt;em&gt;regexp＆optional limit noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8de86ec77e151f287ee7942d391760c998d8a1b0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;re-search-forward&lt;/strong&gt;&lt;em&gt;regexp &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;re-search-forward &lt;/strong&gt;&lt;em&gt;regexp＆optional limit noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49ccaba964cf21d08a0458002cf4c9ca6ceb24cc" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;read-color&lt;/strong&gt;&lt;em&gt;&amp;amp;optional prompt convert allow-empty display&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;read-color &lt;/strong&gt;&lt;em&gt;＆optional prompt convert allow-empty display&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b63d2c778dfc516db8cff3466b3e437cc9cabb8b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;read-kbd-macro&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional need-vector&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;read-kbd-macro &lt;/strong&gt;&lt;em&gt;string＆optional need-vector&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96d265224313b2fe182805423bf1f5e746e6e1e6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;read-only-mode&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;読み取り専用モード&lt;/strong&gt;&lt;em&gt;＆オプションの引数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae242dc30acc185143331dfc7df514f67285944e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;recenter-top-bottom&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;recenter-top-bottom &lt;/strong&gt;&lt;em&gt;＆optional count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63cdf706727f67c1e2ced427c41d5ec35b21e513" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;recenter&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count redisplay&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;最近の&lt;/strong&gt;&lt;em&gt;＆オプションのカウントの再表示&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c4b64676dee07518bbaaae2a863f65b9e0d7f1b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;recursive-edit&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;再帰編集&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="362b09cc848e97c6ebd95319c7d1324eeac05041" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;redraw-display&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;redraw-display&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d348d0988e31ef85a6873d98086548588b3f290f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;reindent-then-newline-and-indent&lt;/strong&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;reindent-then-newline-and-indent&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="823d0c06b5a8746d01e6ba36d73405b6395a1db8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;rename-buffer&lt;/strong&gt;&lt;em&gt;newname &amp;amp;optional unique&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;rename-buffer &lt;/strong&gt;&lt;em&gt;newname＆optional unique&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29e7cd7cd61396569cd697c06b7b7f0f185759cf" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;rename-file&lt;/strong&gt;&lt;em&gt;filename newname &amp;amp;optional ok-if-already-exists&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;rename-file &lt;/strong&gt;&lt;em&gt;filename newname＆optionalok-if-already-exists&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="af1f7f47139ff49f53a7031b2c1b1a009e1377e5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;replace-buffer-contents&lt;/strong&gt;&lt;em&gt;source &amp;amp;optional max-secs max-costs&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;replace-buffer-contents &lt;/strong&gt;&lt;em&gt;source＆optional max-secs max-costs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1dc0ea97a8662e58385a0b9d79aa14fbbba446e3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;replace-buffer-in-windows&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;replace-buffer-in-windows &lt;/strong&gt;&lt;em&gt;＆optionalbuffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b7f9b72d3a788372daceca6d28f445d512461aad" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;revert-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional ignore-auto noconfirm preserve-modes&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;revert-buffer &lt;/strong&gt;&lt;em&gt;＆optional ignore-auto noconfirmpreserve-modes&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6dbc4f20cca6675c743e04dbf2f98f61950f6c09" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;run-at-time&lt;/strong&gt;&lt;em&gt;time repeat function &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;実行時&lt;/strong&gt;&lt;em&gt;時間繰り返し関数＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e4839e255e61e7b30082978e392bcbc1bcfdd7e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;run-with-idle-timer&lt;/strong&gt;&lt;em&gt;secs repeat function &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;run-with-idle-timer &lt;/strong&gt;&lt;em&gt;secs repeat function＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b6ba8dd5a28321007102d9360d43d6996aefab3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;run-with-timer&lt;/strong&gt;&lt;em&gt;secs repeat function &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;run-with-timer &lt;/strong&gt;&lt;em&gt;secs repeat function＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9c97bffa146d85a721bf28173e60a6491b5a586" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;save-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional backup-option&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;save-buffer &lt;/strong&gt;&lt;em&gt;＆optional backup-option&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b874f9732706d8771345cad8c4eed60f15b3ecc" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;save-some-buffers&lt;/strong&gt;&lt;em&gt;&amp;amp;optional save-silently-p pred&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;save-some-buffers &lt;/strong&gt;&lt;em&gt;＆optional save-silently-p pred&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6212d7a5e69483d84ca727bad2e30597d79fdad8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-down-command&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;スクロールダウン-コマンド&lt;/strong&gt;&lt;em&gt;＆オプションのカウント&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07117908279d50b8ff1a028bb5b99560e33c6fdc" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-down&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;スクロールダウン&lt;/strong&gt;&lt;em&gt;＆オプションカウント&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="512ffac92bb639175b8bfbe916d2dedcb91bffcd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-left&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count set-minimum&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;スクロール-左&lt;/strong&gt;&lt;em&gt;＆オプションのカウントセット-最小&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe88ecbc3963eb2a0a3efb458d672da391b073a5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-other-window-down&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;scroll-other-window-down &lt;/strong&gt;&lt;em&gt;＆optional count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="18aee2240bbe724b0edc0eff32808d4dda50a1e0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-other-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;scroll-other-window &lt;/strong&gt;&lt;em&gt;＆optional count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cae32dcb7bd7eb35b3f3bf558ad4ea17c673a2f6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-right&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count set-minimum&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;スクロール-右&lt;/strong&gt;&lt;em&gt;＆オプションのカウントセット-最小&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e28799aeed74ded405162b73ed44eb6a1bca66df" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-up-command&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;スクロールアップコマンド&lt;/strong&gt;&lt;em&gt;＆オプションのカウント&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="451ae45bf9f55ce6b82d269978547f9a35bc4f1a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-up&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;スクロールアップ&lt;/strong&gt;&lt;em&gt;＆オプションカウント&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d86502a5927be536b8619923e729d4554b3f6eb0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;search-backward&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;search-backward &lt;/strong&gt;&lt;em&gt;string＆optional limit noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="154c7d209104d734bba5e1180fceaa5d92ea3d51" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;search-forward&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;search-forward &lt;/strong&gt;&lt;em&gt;string＆optional limit noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29aaf03253f934e28dc2d0a8789fa7da4e215c4d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;select-frame&lt;/strong&gt;&lt;em&gt;frame &amp;amp;optional norecord&lt;/em&gt;</source>
          <target state="translated">コマンド：&lt;strong&gt;select-frame &lt;/strong&gt;&lt;em&gt;frame＆optional norecord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47c35f339881445a0a6a83a9d68d5f85df971325" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;self-insert-and-exit&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;self-insert-and-exit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0cab8342a53269b33f617cf5e4a194f1a1942cb9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;self-insert-command&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional char&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;self-insert-command&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional char&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f9f2ef023d88e483cbb9610483c16382a0ac150" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;serial-term&lt;/strong&gt;&lt;em&gt;port speed &amp;amp;optional line-mode&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;serial-term&lt;/strong&gt;&lt;em&gt;port speed &amp;amp;optional line-mode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62bef2cf4b8e12edf1acf830e96e279265d8d77f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-background&lt;/strong&gt;&lt;em&gt;face color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-face-background&lt;/strong&gt;&lt;em&gt;face color &amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f26ba6ae88e450ec267ed9974a365ca313fa468" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-extend&lt;/strong&gt;&lt;em&gt;face extend &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-face-extend&lt;/strong&gt;&lt;em&gt;face extend &amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9730f6865af3c4084db75cf6af1b0a6fb08b5dd0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-font&lt;/strong&gt;&lt;em&gt;face font &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-face-font&lt;/strong&gt;&lt;em&gt;face font &amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24e1d2ff5f996a203183b37c520be2a2161b6b75" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-foreground&lt;/strong&gt;&lt;em&gt;face color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-face-foreground&lt;/strong&gt;&lt;em&gt;face color &amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f47e6c07400f2ae122715b4ecd7f68157b45235d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-inverse-video&lt;/strong&gt;&lt;em&gt;face inverse-video-p &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-face-inverse-video&lt;/strong&gt;&lt;em&gt;face inverse-video-p &amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9f9cb4b2d494cbdc8b50300013fd5467c128f6f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-stipple&lt;/strong&gt;&lt;em&gt;face pattern &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-face-stipple&lt;/strong&gt;&lt;em&gt;face pattern &amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0956a2ffe74d2315678d0707f073ce6d6f93609" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-underline&lt;/strong&gt;&lt;em&gt;face underline &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-face-underline&lt;/strong&gt;&lt;em&gt;face underline &amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="75b9619594ae5be5342ce78dc28c5ea7dac583be" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-file-modes&lt;/strong&gt;&lt;em&gt;filename mode&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-file-modes&lt;/strong&gt;&lt;em&gt;filename mode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47bfb647cfee439e1167b83df31de3663752d8fa" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-frame-font&lt;/strong&gt;&lt;em&gt;font &amp;amp;optional keep-size frames&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-frame-font&lt;/strong&gt;&lt;em&gt;font &amp;amp;optional keep-size frames&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1a94128ae515637665d96ff7e6c3f8575151a78" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-input-method&lt;/strong&gt;&lt;em&gt;input-method&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-input-method&lt;/strong&gt;&lt;em&gt;input-method&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cbbd9d6d3f19c307fbf02650c3e4fb2aa36c4404" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-keyboard-coding-system&lt;/strong&gt;&lt;em&gt;coding-system &amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-keyboard-coding-system&lt;/strong&gt;&lt;em&gt;coding-system &amp;amp;optional terminal&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04793e6263350afe373aac47960e6644ef58fe06" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-left-margin&lt;/strong&gt;&lt;em&gt;from to margin&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-left-margin&lt;/strong&gt;&lt;em&gt;from to margin&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59116db1ba9fc61105cf4a47c9377d67766bb1e7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-right-margin&lt;/strong&gt;&lt;em&gt;from to margin&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-right-margin&lt;/strong&gt;&lt;em&gt;from to margin&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1fc62a90864d1aa1ce647ef1b5e155ab2bb4706" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-terminal-coding-system&lt;/strong&gt;&lt;em&gt;coding-system &amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-terminal-coding-system&lt;/strong&gt;&lt;em&gt;coding-system &amp;amp;optional terminal&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b009fb39670e2033bd04a9216c334d787f12135" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-visited-file-name&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional no-query along-with-file&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;set-visited-file-name&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional no-query along-with-file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c19f02fbc3a721ab8b8650296ac58584dced96be" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;setenv&lt;/strong&gt;&lt;em&gt;variable &amp;amp;optional value substitute&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;setenv&lt;/strong&gt;&lt;em&gt;variable &amp;amp;optional value substitute&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce60abd012aee31e7bdf0b76bf611939061830d7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;shrink-window-if-larger-than-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;shrink-window-if-larger-than-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fccdb8e7fc0c114282fae1d0aaf1b35f8ab1a42e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;signal-process&lt;/strong&gt;&lt;em&gt;process signal&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;signal-process&lt;/strong&gt;&lt;em&gt;process signal&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc22011168f29a5ab2bb6cca83f32fe687d4da69" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-close-block&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;smie-close-block&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ccd8dc48c1978c14b01919c5b614c276c2d5b587" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-config-guess&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;smie-config-guess&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f4471bd799bde7f4afbb8c796bfe8c7b96c20a5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-config-save&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;smie-config-save&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d700709f8f0078f6ed146efeecb5f440e3d74a9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-config-set-indent&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;smie-config-set-indent&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="475e993b0e02616bc6fd86b1705e2f94fdbab593" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-config-show-indent&lt;/strong&gt;&lt;em&gt;&amp;amp;optional move&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;smie-config-show-indent&lt;/strong&gt;&lt;em&gt;&amp;amp;optional move&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b278fdef4d3f37466a977ba4af1ab4e234f5b24" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-down-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;smie-down-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7555f737ca70be74cc76eda47fa81219383fcf7f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smooth-curveto&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;smooth-curveto&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="779c12119dedaaa2da16f05eece6a700adf28984" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smooth-quadratic-bezier-curveto&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;smooth-quadratic-bezier-curveto&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f70c93aee92d2207c92a1dc25377574b427244fb" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-columns&lt;/strong&gt;&lt;em&gt;reverse &amp;amp;optional beg end&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;sort-columns&lt;/strong&gt;&lt;em&gt;reverse &amp;amp;optional beg end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="377eb09513621ee4d23cd8a9da831da8ac107c75" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-fields&lt;/strong&gt;&lt;em&gt;field start end&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;sort-fields&lt;/strong&gt;&lt;em&gt;field start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46d1af22f4206fa46924b5b53e1364edccaf57f3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-lines&lt;/strong&gt;&lt;em&gt;reverse start end&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;sort-lines&lt;/strong&gt;&lt;em&gt;reverse start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="242df0b378bb9ee567df1aeb723299fa153cb36e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-numeric-fields&lt;/strong&gt;&lt;em&gt;field start end&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;sort-numeric-fields&lt;/strong&gt;&lt;em&gt;field start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ff1aae7c33abba55cb47f8aa4d8067779076872" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-pages&lt;/strong&gt;&lt;em&gt;reverse start end&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;sort-pages&lt;/strong&gt;&lt;em&gt;reverse start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f0472a6a86b9c8dcc68ac5aa4e2bb765898fe7d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-paragraphs&lt;/strong&gt;&lt;em&gt;reverse start end&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;sort-paragraphs&lt;/strong&gt;&lt;em&gt;reverse start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1311a5f007f500a9ea58e17429e1f66852bd14e0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-regexp-fields&lt;/strong&gt;&lt;em&gt;reverse record-regexp key-regexp start end&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;sort-regexp-fields&lt;/strong&gt;&lt;em&gt;reverse record-regexp key-regexp start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad03bb65a05eabcb0d6653b898004963e8ed8545" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;special-mode&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;special-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf136062ef6f844ede6b82ae566e06c70a119f1d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;split-window-below&lt;/strong&gt;&lt;em&gt;&amp;amp;optional size&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;split-window-below&lt;/strong&gt;&lt;em&gt;&amp;amp;optional size&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ade63c72a1928918bf401f1182749f8620ca1963" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;split-window-right&lt;/strong&gt;&lt;em&gt;&amp;amp;optional size&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;split-window-right&lt;/strong&gt;&lt;em&gt;&amp;amp;optional size&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec3e04c813567e49c8b9ef6b143486e65241c1d0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;suspend-emacs&lt;/strong&gt;&lt;em&gt;&amp;amp;optional string&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;suspend-emacs&lt;/strong&gt;&lt;em&gt;&amp;amp;optional string&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c37193681c7005dbab43dc4c6c76948005e9c01" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;suspend-frame&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;suspend-frame&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bdf2e93cb024513bae68ce3a48406fb2ad9bbc5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;switch-to-buffer-other-frame&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional norecord&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;switch-to-buffer-other-frame&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional norecord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a97ad1d6a70583f4d99b86e84b1f54292395d69" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;switch-to-buffer-other-window&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional norecord&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;switch-to-buffer-other-window&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional norecord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d69e17078397fe8559b9982432aee469c7aa78f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;switch-to-buffer&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional norecord force-same-window&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;switch-to-buffer&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional norecord force-same-window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9233fef6d280cea05ba0400911544955229e156f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;switch-to-next-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;switch-to-next-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9dbdcb41856087f9a5fff9b0a642c35ce37e54e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;switch-to-prev-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window bury-or-kill&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;switch-to-prev-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window bury-or-kill&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="13e0adbc9352633271be0e1d8dc72bc116896dad" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;tab-to-tab-stop&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;tab-to-tab-stop&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fec88d25579fda4506d663aec061b7f5e7914dc9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;text-mode&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;text-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e84a897eed953c0472e151fbafa97fd79aff603" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;top-level&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;top-level&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a01ee799a181534920554b84d761b9864e34f0e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;translate-region&lt;/strong&gt;&lt;em&gt;start end table&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;translate-region&lt;/strong&gt;&lt;em&gt;start end table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5cf6aad4c0136da8a3209702c68006a7af1cf52" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;unbury-buffer&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;unbury-buffer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1dfb29942ba870348d8a858657011edda847ff6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;undefined&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;undefined&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c02b871891f5202d1658111d85e523bef58313cd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;universal-argument&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;universal-argument&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9046f886462ea307d72a27b9506b7cb51d33fe67" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;unload-feature&lt;/strong&gt;&lt;em&gt;feature &amp;amp;optional force&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;unload-feature&lt;/strong&gt;&lt;em&gt;feature &amp;amp;optional force&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb119272401adfb7405c0b13c51e7e17162b494a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;up-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg escape-strings no-syntax-crossing&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;up-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg escape-strings no-syntax-crossing&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84bb7b0848bffe8df3f5f7b103c5c4a7ce906fc9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;upcase-region&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;upcase-region&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cce479ce21039984fa588f8b6c53cae8e87d1338" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;upcase-word&lt;/strong&gt;&lt;em&gt;count&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;upcase-word&lt;/strong&gt;&lt;em&gt;count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f6e02b53162a9a2053521b4469093be5aea51eae" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;vertical-lineto&lt;/strong&gt;&lt;em&gt;y-coordinates&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;vertical-lineto&lt;/strong&gt;&lt;em&gt;y-coordinates&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41b8bd53ca7ac9cb3acf4a71759213f64fb4f234" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;view-register&lt;/strong&gt;&lt;em&gt;reg&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;view-register&lt;/strong&gt;&lt;em&gt;reg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0cb734bf7a8eebc34cca2bf8347fddbf95df83a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;widen&lt;/strong&gt;</source>
          <target state="translated">Command: &lt;strong&gt;widen&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b3d537ed51d03685067b22f98bde6ef903ae776" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;window-swap-states&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window-1 window-2 size&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;window-swap-states&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window-1 window-2 size&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d20e00ae0fb347be721d7d5cef077eb88735aad" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;window-toggle-side-windows&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;window-toggle-side-windows&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3040d743406b7a5e008e1ce60bb68ad12784ddb6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;word-search-backward-lax&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;word-search-backward-lax&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b3900669704f539822d0e5bca435963b458bef3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;word-search-backward&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;word-search-backward&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="212401e7497fe805acd13f546d23cce43cd81346" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;word-search-forward-lax&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;word-search-forward-lax&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f49891793b2f2391e0a8cd721ab62d2d19601f16" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;word-search-forward&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;word-search-forward&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="902a26f7f9264c9bd7495594d3ed992624563358" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;write-abbrev-file&lt;/strong&gt;&lt;em&gt;&amp;amp;optional filename&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;write-abbrev-file&lt;/strong&gt;&lt;em&gt;&amp;amp;optional filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a011038d7c5c0edd900c38db4105703d56cf493b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;write-file&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional confirm&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;write-file&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional confirm&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4348b73f93da98e05a96206dd636ff2cca7b946f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;write-region&lt;/strong&gt;&lt;em&gt;start end filename &amp;amp;optional append visit lockname mustbenew&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;write-region&lt;/strong&gt;&lt;em&gt;start end filename &amp;amp;optional append visit lockname mustbenew&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e7bb63154322046db2d6c8bf0d587ecf5fa861f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;yank-pop&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;yank-pop&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd0e2f297045190c083a7dbabfd542df399742f6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;yank&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">Command: &lt;strong&gt;yank&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d6c89886295465020232d1acaee34896917e2d48" translate="yes" xml:space="preserve">
          <source>Commands for Binding Keys</source>
          <target state="translated">バインディングキーのコマンド</target>
        </trans-unit>
        <trans-unit id="0cbf8177d019311814ddd90200b02a5bcb662d61" translate="yes" xml:space="preserve">
          <source>Commands for saving buffers are unaffected by narrowing; they save the entire buffer regardless of any narrowing.</source>
          <target state="translated">バッファを保存するためのコマンドは、絞り込みの影響を受けず、絞り込みに関係なくバッファ全体を保存します。</target>
        </trans-unit>
        <trans-unit id="9b53d7ba90187ba5afa5b3fc94a8bec040fda196" translate="yes" xml:space="preserve">
          <source>Commands include strings and vectors (which are treated as keyboard macros), lambda expressions that contain a top-level &lt;code&gt;interactive&lt;/code&gt; form (see &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;), byte-code function objects made from such lambda expressions, autoload objects that are declared as interactive (non-&lt;code&gt;nil&lt;/code&gt; fourth argument to &lt;code&gt;autoload&lt;/code&gt;), and some primitive functions. Also, a symbol is considered a command if it has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;interactive-form&lt;/code&gt; property, or if its function definition satisfies &lt;code&gt;commandp&lt;/code&gt;.</source>
          <target state="translated">Commands include strings and vectors (which are treated as keyboard macros), lambda expressions that contain a top-level &lt;code&gt;interactive&lt;/code&gt; form (see &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;), byte-code function objects made from such lambda expressions, autoload objects that are declared as interactive (non- &lt;code&gt;nil&lt;/code&gt; fourth argument to &lt;code&gt;autoload&lt;/code&gt; ), and some primitive functions. Also, a symbol is considered a command if it has a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;interactive-form&lt;/code&gt; property, or if its function definition satisfies &lt;code&gt;commandp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="024c023476f141141c18039299f7002a9d975f87" translate="yes" xml:space="preserve">
          <source>Commands like</source>
          <target state="translated">のようなコマンド</target>
        </trans-unit>
        <trans-unit id="2698ee43719d058ff86e4e467effa767a2780841" translate="yes" xml:space="preserve">
          <source>Commands that access the kill ring.</source>
          <target state="translated">キルリングにアクセスするコマンド。</target>
        </trans-unit>
        <trans-unit id="a2da0179656617c5d32ee30ae8d074056f2e5ef1" translate="yes" xml:space="preserve">
          <source>Commands that change the size of windows (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;), or split them (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;), obey the variables &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt;, which specify the smallest allowable window height and width. They also obey the variable &lt;code&gt;window-size-fixed&lt;/code&gt;, with which a window can be &lt;em&gt;fixed&lt;/em&gt; in size (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;).</source>
          <target state="translated">Commands that change the size of windows (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;), or split them (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;), obey the variables &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt; , which specify the smallest allowable window height and width. They also obey the variable &lt;code&gt;window-size-fixed&lt;/code&gt; , with which a window can be &lt;em&gt;fixed&lt;/em&gt; in size (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="7bb156744a59e3c469068fb585b92c9377439401" translate="yes" xml:space="preserve">
          <source>Commands that loop, searching and replacing.</source>
          <target state="translated">ループ、検索、置換を行うコマンドです。</target>
        </trans-unit>
        <trans-unit id="39077cc4f9f99b5c009431fe125e0565694482e6" translate="yes" xml:space="preserve">
          <source>Commands to jump to a specified place.</source>
          <target state="translated">指定した場所にジャンプするコマンド。</target>
        </trans-unit>
        <trans-unit id="345f1ca0cbcdfaee1b6ff2d3384695a16b7d1b92" translate="yes" xml:space="preserve">
          <source>Commands used as key bindings in minibuffers.</source>
          <target state="translated">ミニバッファのキーバインドとして使用されるコマンド。</target>
        </trans-unit>
        <trans-unit id="49ad61ca7e49f2fa83f48be5f56322f11ecd0882" translate="yes" xml:space="preserve">
          <source>Commands used while in the debugger.</source>
          <target state="translated">デバッガで使用されるコマンド。</target>
        </trans-unit>
        <trans-unit id="023a3dfd3298d8324fedd31fa2da0f1be7a3a965" translate="yes" xml:space="preserve">
          <source>Comment enders: &amp;lsquo;</source>
          <target state="translated">Comment enders: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="de24c55c45660f7d870e708e7bc1702d5c011feb" translate="yes" xml:space="preserve">
          <source>Comment starters: &amp;lsquo;</source>
          <target state="translated">Comment starters: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="8c19c716bf03668fed602c51e64d7688dc85038a" translate="yes" xml:space="preserve">
          <source>Comments and their formatting conventions.</source>
          <target state="translated">コメントとその書式規則。</target>
        </trans-unit>
        <trans-unit id="b7b7635ea31b9ba2bccbee5c3a14f43d910f31c9" translate="yes" xml:space="preserve">
          <source>Comments can appear at certain points in the middle of an object&amp;rsquo;s read sequence without affecting the result of reading it.</source>
          <target state="translated">Comments can appear at certain points in the middle of an object&amp;rsquo;s read sequence without affecting the result of reading it.</target>
        </trans-unit>
        <trans-unit id="b5529843e9bc457c0f3ae38cf3504131047fe2f0" translate="yes" xml:space="preserve">
          <source>Common Item Keywords</source>
          <target state="translated">共通項目キーワード</target>
        </trans-unit>
        <trans-unit id="88c69ce37e402739dba1a7b40279b7ab85f6120f" translate="yes" xml:space="preserve">
          <source>Common Lisp Extensions</source>
          <target state="translated">一般的な Lisp 拡張機能</target>
        </trans-unit>
        <trans-unit id="d4db0bbf7184136260c24be2c67969fdcc69cc61" translate="yes" xml:space="preserve">
          <source>Common Lisp Extensions for GNU Emacs Lisp</source>
          <target state="translated">GNU Emacs Lispのための共通Lisp拡張機能</target>
        </trans-unit>
        <trans-unit id="eb539ba663e0f404bb4048e484420d85554a1137" translate="yes" xml:space="preserve">
          <source>Common Problems Using Macros</source>
          <target state="translated">マクロを使用した一般的な問題</target>
        </trans-unit>
        <trans-unit id="856564e2ae364f148ccd23f2ceb539fcf6216d2f" translate="yes" xml:space="preserve">
          <source>Common keyword arguments for all kinds of customization declarations.</source>
          <target state="translated">あらゆる種類のカスタマイズ宣言に共通のキーワード引数。</target>
        </trans-unit>
        <trans-unit id="6b49ee40a782a8c9b806d0ab21e62f1980769cc0" translate="yes" xml:space="preserve">
          <source>Communicating values and objects between Emacs and your module functions.</source>
          <target state="translated">Emacs とモジュール関数の間で値とオブジェクトを通信します。</target>
        </trans-unit>
        <trans-unit id="e342143365a2622326f837accd2c41b08cc3c0b5" translate="yes" xml:space="preserve">
          <source>Communicating with Serial Ports</source>
          <target state="translated">シリアルポートとの通信</target>
        </trans-unit>
        <trans-unit id="89949c3848891d6567f959ece5f2ad672202fa7b" translate="yes" xml:space="preserve">
          <source>Communicating with serial ports.</source>
          <target state="translated">シリアルポートと通信します。</target>
        </trans-unit>
        <trans-unit id="6778e86a8d6b05b7867fb8b5cc87fc85fa62d6e2" translate="yes" xml:space="preserve">
          <source>Communicating with the window manager.</source>
          <target state="translated">窓口担当者とのやりとり。</target>
        </trans-unit>
        <trans-unit id="b0f18071ab967d2204c3e0d26f86eaf816b8d617" translate="yes" xml:space="preserve">
          <source>Compare these examples with the examples of &lt;code&gt;apply&lt;/code&gt;.</source>
          <target state="translated">Compare these examples with the examples of &lt;code&gt;apply&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="405b13d07114472db679f8ec5457ac60130a82a6" translate="yes" xml:space="preserve">
          <source>Compare this with &lt;code&gt;memq&lt;/code&gt;:</source>
          <target state="translated">Compare this with &lt;code&gt;memq&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1b019b87d23c47d7c66ff2fd4031438ec631bd79" translate="yes" xml:space="preserve">
          <source>Comparing Text</source>
          <target state="translated">テキストの比較</target>
        </trans-unit>
        <trans-unit id="95982814f72e19fec0fd3b99109dfb5b63e1257f" translate="yes" xml:space="preserve">
          <source>Comparing characters or strings.</source>
          <target state="translated">文字や文字列を比較すること。</target>
        </trans-unit>
        <trans-unit id="c66617dc8d66f35540478eb6bee035ffa120c56d" translate="yes" xml:space="preserve">
          <source>Comparing circular lists may therefore cause deep recursion that leads to an error, and this may result in counterintuitive behavior such as &lt;code&gt;(equal a b)&lt;/code&gt; returning &lt;code&gt;t&lt;/code&gt; whereas &lt;code&gt;(equal b a)&lt;/code&gt; signals an error.</source>
          <target state="translated">Comparing circular lists may therefore cause deep recursion that leads to an error, and this may result in counterintuitive behavior such as &lt;code&gt;(equal a b)&lt;/code&gt; returning &lt;code&gt;t&lt;/code&gt; whereas &lt;code&gt;(equal b a)&lt;/code&gt; signals an error.</target>
        </trans-unit>
        <trans-unit id="6a7ee30eb676cbc735cd894cf2bf34f00abcb038" translate="yes" xml:space="preserve">
          <source>Comparing substrings of buffers.</source>
          <target state="translated">バッファの部分文字列を比較します。</target>
        </trans-unit>
        <trans-unit id="273b9ed97d01e07afecfb1e9a9132920e64fd651" translate="yes" xml:space="preserve">
          <source>Comparison of Characters and Strings</source>
          <target state="translated">文字と文字列の比較</target>
        </trans-unit>
        <trans-unit id="6a63910b738b1e2e2df184363f826f6b9f540a0f" translate="yes" xml:space="preserve">
          <source>Comparison of Numbers</source>
          <target state="translated">数字の比較</target>
        </trans-unit>
        <trans-unit id="9342f700a3e55d278469c203b5eb7cf66f6afde3" translate="yes" xml:space="preserve">
          <source>Comparison of strings is case-sensitive, but does not take account of text properties&amp;mdash;it compares only the characters in the strings. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;. Use &lt;code&gt;equal-including-properties&lt;/code&gt; to also compare text properties. For technical reasons, a unibyte string and a multibyte string are &lt;code&gt;equal&lt;/code&gt; if and only if they contain the same sequence of character codes and all these codes are in the range 0 through 127 (</source>
          <target state="translated">文字列の比較では大文字と小文字が区別されますが、テキストのプロパティは考慮されません。文字列内の文字のみが比較されます。&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;テキストのプロパティを&lt;/a&gt;参照してください。 &lt;code&gt;equal-including-properties&lt;/code&gt; を使用して、テキストのプロパティも比較します。技術的な理由から、ユニバイト文字列とマルチバイト文字列は、同じ文字コードのシーケンスが含まれ、これらのコードがすべて0〜127の範囲にある場合にのみ &lt;code&gt;equal&lt;/code&gt; なります（</target>
        </trans-unit>
        <trans-unit id="8b6d532998965364c360bdfe468305e9182a9ec8" translate="yes" xml:space="preserve">
          <source>Comparison of the advantages of property lists and association lists.</source>
          <target state="translated">物件リストと協会リストのメリットを比較してみました。</target>
        </trans-unit>
        <trans-unit id="93a99950a9ea500265e66f392a7bd6add454368b" translate="yes" xml:space="preserve">
          <source>Compatibility for cl-defstruct.</source>
          <target state="translated">cl-defstructとの互換性。</target>
        </trans-unit>
        <trans-unit id="83fe64ebb2a4f8e1967420eac322068373238d0d" translate="yes" xml:space="preserve">
          <source>Compatibility verification</source>
          <target state="translated">互換性の検証</target>
        </trans-unit>
        <trans-unit id="f53d3632ba8f6a9c0a14db8153bd8b40eb346b2c" translate="yes" xml:space="preserve">
          <source>Compilation makes programs run faster.</source>
          <target state="translated">コンパイルはプログラムの実行を高速化します。</target>
        </trans-unit>
        <trans-unit id="c307f23a350ff3cbf11f39a7884970127ba45b6d" translate="yes" xml:space="preserve">
          <source>Compilation of the C source files in the</source>
          <target state="translated">でのCソースファイルのコンパイル</target>
        </trans-unit>
        <trans-unit id="db25c66100f5283d989daf1e06008dca3edfb13b" translate="yes" xml:space="preserve">
          <source>Compilation works by reading the input file one form at a time. If it is a definition of a function or macro, the compiled function or macro definition is written out. Other forms are batched together, then each batch is compiled, and written so that its compiled code will be executed when the file is read. All comments are discarded when the input file is read.</source>
          <target state="translated">コンパイルは、入力ファイルを一度に一形式ずつ読み込むことで動作します。それが関数やマクロの定義であれば、コンパイルされた関数やマクロの定義が書き出されます。他のフォームはまとめてバッチ化され、各バッチがコンパイルされ、ファイルが読み込まれたときにそのコンパイルされたコードが実行されるように書き出されます。コメントは入力ファイルの読み込み時に全て破棄されます。</target>
        </trans-unit>
        <trans-unit id="03a28ca8c3d9613144507cbc2e784d7d08f72e10" translate="yes" xml:space="preserve">
          <source>Compiler Errors</source>
          <target state="translated">コンパイラエラー</target>
        </trans-unit>
        <trans-unit id="1b7e00c7011424058eea93745b20337bafc3389e" translate="yes" xml:space="preserve">
          <source>Completing text in ordinary buffers.</source>
          <target state="translated">通常のバッファでテキストを補完する</target>
        </trans-unit>
        <trans-unit id="2ff255684a2277f806fcebf3fe338ed27857f350" translate="yes" xml:space="preserve">
          <source>Completion</source>
          <target state="translated">Completion</target>
        </trans-unit>
        <trans-unit id="c662019ea8458f5db9a4275818bc22d53c6c775b" translate="yes" xml:space="preserve">
          <source>Completion Variables</source>
          <target state="translated">完成度の高い変数</target>
        </trans-unit>
        <trans-unit id="4b30ae54975d46c38aec0ba1d66f9ec137982b21" translate="yes" xml:space="preserve">
          <source>Completion and the Minibuffer</source>
          <target state="translated">完成とミニバッファ</target>
        </trans-unit>
        <trans-unit id="8952388475de8de6e1a8979a85ec9e3a52e099f8" translate="yes" xml:space="preserve">
          <source>Completion in Ordinary Buffers</source>
          <target state="translated">通常のバッファでの完成</target>
        </trans-unit>
        <trans-unit id="1e145aadd17b8a0bb15c1d5fc789830f0e4539ed" translate="yes" xml:space="preserve">
          <source>Complex Regexp Example</source>
          <target state="translated">複雑な正規表現の例</target>
        </trans-unit>
        <trans-unit id="288afe81a28ad9bb9ef9e984ab8791ca1882c4a8" translate="yes" xml:space="preserve">
          <source>Complex commands executed while in Edebug are added to the variable &lt;code&gt;command-history&lt;/code&gt;. In rare cases this can alter execution.</source>
          <target state="translated">Edebugで実行された複雑なコマンドは、変数 &lt;code&gt;command-history&lt;/code&gt; に追加されます。まれに、これにより実行が変更される場合があります。</target>
        </trans-unit>
        <trans-unit id="0f9560ff7537f4f98f996f644e7427df60b57022" translate="yes" xml:space="preserve">
          <source>Components of a Lambda Expression</source>
          <target state="translated">ラムダ式の構成要素</target>
        </trans-unit>
        <trans-unit id="17b085bb7e9b4109140dcbfdb4a52b59de6c7e37" translate="yes" xml:space="preserve">
          <source>Components of a buffer structure.</source>
          <target state="translated">バッファ構造の構成要素。</target>
        </trans-unit>
        <trans-unit id="409a6573f232221348fe42e50813686f2e2ccf57" translate="yes" xml:space="preserve">
          <source>Components of a process structure.</source>
          <target state="translated">プロセス構造の構成要素。</target>
        </trans-unit>
        <trans-unit id="d706733e74c4ae29f2e5abed0387937671d83fb7" translate="yes" xml:space="preserve">
          <source>Components of a window structure.</source>
          <target state="translated">ウィンドウ構造の構成要素。</target>
        </trans-unit>
        <trans-unit id="7bf0ab10fb9860e23b1ca89e4313be7fafb258f7" translate="yes" xml:space="preserve">
          <source>Composite Types</source>
          <target state="translated">コンポジットタイプ</target>
        </trans-unit>
        <trans-unit id="f2963d89c4ddfb428f89d7016d1bf88d0f623928" translate="yes" xml:space="preserve">
          <source>Compound objects with programmer-defined types.</source>
          <target state="translated">プログラマ定義の型を持つ複合オブジェクト。</target>
        </trans-unit>
        <trans-unit id="04e9702574a684045c6c20e0f591b8ac274b9519" translate="yes" xml:space="preserve">
          <source>Computing cryptographic hashes.</source>
          <target state="translated">暗号ハッシュの計算</target>
        </trans-unit>
        <trans-unit id="640d00e2c89256296340b25d596bc910b6ea0565" translate="yes" xml:space="preserve">
          <source>Computing horizontal positions, and using them.</source>
          <target state="translated">水平方向の位置を計算し、それを利用する。</target>
        </trans-unit>
        <trans-unit id="b5bbf2947b37a26298d485ba138646e6e81b133b" translate="yes" xml:space="preserve">
          <source>Computing text properties in a lazy fashion only when text is examined.</source>
          <target state="translated">テキストを調べたときだけ、テキストのプロパティをダラダラと計算します。</target>
        </trans-unit>
        <trans-unit id="e2831f1e1f61e6b2cfe6a8e5cc3a90f246816679" translate="yes" xml:space="preserve">
          <source>Conceptually, the &lt;code&gt;pcase&lt;/code&gt; macro borrows the first-arg focus of &lt;code&gt;cl-case&lt;/code&gt; and the clause-processing flow of &lt;code&gt;cond&lt;/code&gt;, replacing &lt;var&gt;condition&lt;/var&gt; with a generalization of the equality test which is a variant of &lt;em&gt;pattern matching&lt;/em&gt;, and adding facilities so that you can concisely express a clause&amp;rsquo;s predicate, and arrange to share let-bindings between a clause&amp;rsquo;s predicate and &lt;var&gt;body-forms&lt;/var&gt;.</source>
          <target state="translated">概念的には、 &lt;code&gt;pcase&lt;/code&gt; マクロは &lt;code&gt;cl-case&lt;/code&gt; のfirst-argフォーカスと &lt;code&gt;cond&lt;/code&gt; の句処理フローを借用し、 &lt;var&gt;condition&lt;/var&gt; を&lt;em&gt;パターンマッチングの&lt;/em&gt;変形である等価性テストの一般化に置き換え、簡潔に表現できるように機能を追加します。節の述語、および節の述語と &lt;var&gt;body-forms&lt;/var&gt; の間でlet-bindingsを共有するように調整します。</target>
        </trans-unit>
        <trans-unit id="bbb590f36e663f85f3e05c9dc5742a389a34ae6c" translate="yes" xml:space="preserve">
          <source>Concurrency in Emacs Lisp.</source>
          <target state="translated">Emacs Lispでの並行処理。</target>
        </trans-unit>
        <trans-unit id="0308bf1a2bfd99ab8973493a5442fa885afbd54a" translate="yes" xml:space="preserve">
          <source>Condition Variable Type</source>
          <target state="translated">条件変数型</target>
        </trans-unit>
        <trans-unit id="e904aa2c86dbf4af02712a78cd2ea4e268b322de" translate="yes" xml:space="preserve">
          <source>Condition Variables</source>
          <target state="translated">条件変数</target>
        </trans-unit>
        <trans-unit id="1a24131d1910898ac9915abf5eaa57783b24cd48" translate="yes" xml:space="preserve">
          <source>Condition variable for thread synchronization.</source>
          <target state="translated">スレッド同期の条件変数。</target>
        </trans-unit>
        <trans-unit id="f01f46142f2cc3c48d541b3fdf404a5e4e6808c0" translate="yes" xml:space="preserve">
          <source>Condition variable objects have no read syntax. They print in hash notation, giving the name of the condition variable (if it has been given a name) or its address in core:</source>
          <target state="translated">条件変数オブジェクトは読み込み構文を持ちません。これらのオブジェクトはハッシュ表記で表示され、条件変数の名前(名前が与えられている場合)またはそのアドレスをコアで指定します。</target>
        </trans-unit>
        <trans-unit id="dac84f5497b6df8e9bde6a4b55df0ba3ab46e192" translate="yes" xml:space="preserve">
          <source>Conditional control structures choose among alternatives. Emacs Lisp has five conditional forms: &lt;code&gt;if&lt;/code&gt;, which is much the same as in other languages; &lt;code&gt;when&lt;/code&gt; and &lt;code&gt;unless&lt;/code&gt;, which are variants of &lt;code&gt;if&lt;/code&gt;; &lt;code&gt;cond&lt;/code&gt;, which is a generalized case statement; and &lt;code&gt;pcase&lt;/code&gt;, which is a generalization of &lt;code&gt;cond&lt;/code&gt; (see &lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;Pattern-Matching Conditional&lt;/a&gt;).</source>
          <target state="translated">条件付き制御構造は、選択肢の中から選択します。Emacs Lispには5つの条件付き形式があります &lt;code&gt;if&lt;/code&gt; 、これは他の言語とほとんど同じです。 &lt;code&gt;if&lt;/code&gt; の変形である &lt;code&gt;when&lt;/code&gt; と &lt;code&gt;unless&lt;/code&gt; ; &lt;code&gt;cond&lt;/code&gt; 、これは一般化されたcaseステートメントです。そして、 &lt;code&gt;cond&lt;/code&gt; の一般化である &lt;code&gt;pcase&lt;/code&gt; （&lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;パターンマッチング条件付きを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d6a56385d0729f6ff4bf27671cc845cb6f2cfde5" translate="yes" xml:space="preserve">
          <source>Conditionals</source>
          <target state="translated">Conditionals</target>
        </trans-unit>
        <trans-unit id="ec4237f259bdb0c52ebceead5fa341f7b45521ac" translate="yes" xml:space="preserve">
          <source>Conditionals, loops, nonlocal exits.</source>
          <target state="translated">条件式、ループ、非局所的な出口。</target>
        </trans-unit>
        <trans-unit id="e3df3a4349b8c21c3316d2662479738b113784c2" translate="yes" xml:space="preserve">
          <source>Conditions for copying and changing GNU Emacs.</source>
          <target state="translated">GNU Emacsをコピーして変更する条件</target>
        </trans-unit>
        <trans-unit id="c0e07a9d32061f3729e59a3a542a372ae3d11e7e" translate="yes" xml:space="preserve">
          <source>Connection Local Variables</source>
          <target state="translated">接続ローカル変数</target>
        </trans-unit>
        <trans-unit id="6271f2a864dc4c9ed30a0925fd37185cfb55d1b6" translate="yes" xml:space="preserve">
          <source>Connection-local variables provide a general mechanism for different variable settings in buffers with a remote connection. They are bound and set depending on the remote connection a buffer is dedicated to.</source>
          <target state="translated">接続ローカル変数は、リモート接続を持つバッファ内の異なる変数設定のための一般的なメカニズムを提供します。これらの変数は、バッファが専用に使用されているリモート接続に応じてバインドされ、設定されます。</target>
        </trans-unit>
        <trans-unit id="32cbdb9adf84d9e743d888aadd5c918d7c8b7ee3" translate="yes" xml:space="preserve">
          <source>Cons Cell and List Types</source>
          <target state="translated">欠点セルとリストタイプ</target>
        </trans-unit>
        <trans-unit id="6f308a7e36eda1a6771fb5462339703571e0812a" translate="yes" xml:space="preserve">
          <source>Cons cell, an object used to construct lists.</source>
          <target state="translated">リストを構築するために使用されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4dc542b5e89c8aa17a0b193bacf7d21566802126" translate="yes" xml:space="preserve">
          <source>Cons cells, and lists (which are made from cons cells).</source>
          <target state="translated">コンスセル、リスト(コンスセルから作られたもの)。</target>
        </trans-unit>
        <trans-unit id="53d6b8dc405508eaf77b606b7bd6c9295464d078" translate="yes" xml:space="preserve">
          <source>Consecutive characters with the same &lt;code&gt;field&lt;/code&gt; property constitute a &lt;em&gt;field&lt;/em&gt;. Some motion functions including &lt;code&gt;forward-word&lt;/code&gt; and &lt;code&gt;beginning-of-line&lt;/code&gt; stop moving at a field boundary. See &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;.</source>
          <target state="translated">同じ &lt;code&gt;field&lt;/code&gt; プロパティを持つ連続する文字は、フィールドを構成し&lt;em&gt;ます&lt;/em&gt;。 &lt;code&gt;forward-word&lt;/code&gt; や &lt;code&gt;beginning-of-line&lt;/code&gt; などの一部のモーション関数は、フィールド境界で移動を停止します。&lt;a href=&quot;fields#Fields&quot;&gt;フィールドを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="91f2705305df6818ef3212941c300f43e16c0207" translate="yes" xml:space="preserve">
          <source>Consider a scenario starting with two live windows &lt;var&gt;W2&lt;/var&gt; and &lt;var&gt;W3&lt;/var&gt; and their parent &lt;var&gt;W1&lt;/var&gt;.</source>
          <target state="translated">2つのライブウィンドウ &lt;var&gt;W2&lt;/var&gt; と &lt;var&gt;W3&lt;/var&gt; およびそれらの親 &lt;var&gt;W1&lt;/var&gt; で始まるシナリオを考えてみます。</target>
        </trans-unit>
        <trans-unit id="a18834e4c1af3ac8fea8eacff9981fe260c76a91" translate="yes" xml:space="preserve">
          <source>Consider all frames.</source>
          <target state="translated">すべてのフレームを考慮してください。</target>
        </trans-unit>
        <trans-unit id="ed7f37e7554953ae02c1b81fae5627a14e01dafc" translate="yes" xml:space="preserve">
          <source>Consider all visible frames.</source>
          <target state="translated">すべての見えるフレームを考慮してください。</target>
        </trans-unit>
        <trans-unit id="0b96dbfab92a855bebe04f3516ee05d5bae0623d" translate="yes" xml:space="preserve">
          <source>Consider all visible or iconified frames.</source>
          <target state="translated">すべての可視化されたフレーム、またはアイコン化されたフレームを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="9cb3dcfbff2725168727a0057a419e0d33be43c9" translate="yes" xml:space="preserve">
          <source>Consider only the frames using that particular window as their minibuffer.</source>
          <target state="translated">その特定のウィンドウをミニバッファとして使用しているフレームのみを考慮します。</target>
        </trans-unit>
        <trans-unit id="38159e8244fa8b3ea8e914d127a3d2635b36466b" translate="yes" xml:space="preserve">
          <source>Consider reusing a window that already shows the buffer</source>
          <target state="translated">すでにバッファを表示しているウィンドウを再利用することを検討してください。</target>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">次のような例を考えてみてください。</target>
        </trans-unit>
        <trans-unit id="a0138afecb0349d0e9d821d9e96e1789673d7bc7" translate="yes" xml:space="preserve">
          <source>Consider the following form:</source>
          <target state="translated">次のような形を考えてみてください。</target>
        </trans-unit>
        <trans-unit id="f91123e128a0ad8647bd4197eb387b7f955c5db0" translate="yes" xml:space="preserve">
          <source>Constant: &lt;strong&gt;dir-locals-file&lt;/strong&gt;</source>
          <target state="translated">定数：&lt;strong&gt;dir-locals-file&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f0b0c040e67429d7937324d1f295b463bb4cd82" translate="yes" xml:space="preserve">
          <source>Constant: &lt;strong&gt;display-buffer-fallback-action&lt;/strong&gt;</source>
          <target state="translated">定数：&lt;strong&gt;display-buffer-fallback-action&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f8fd389c1ea35644816d07621a7f7d33a93bbf6" translate="yes" xml:space="preserve">
          <source>Constructs for Combining Conditions</source>
          <target state="translated">条件を組み合わせるための構築物</target>
        </trans-unit>
        <trans-unit id="488bead113fba1530f4bdc3a65718abc100b5435" translate="yes" xml:space="preserve">
          <source>Constructs in rx regexps</source>
          <target state="translated">rx 正規表現のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="dcd26a91ccaa1390fa72e482ee3fcb173da5534b" translate="yes" xml:space="preserve">
          <source>Constructs in the Mode Line</source>
          <target state="translated">モードラインのコンストラクト</target>
        </trans-unit>
        <trans-unit id="95c753ad87dce261bfb26be17a5d19b6445e59a5" translate="yes" xml:space="preserve">
          <source>Constructs valid in rx forms.</source>
          <target state="translated">rx フォームで有効なコンストラクト。</target>
        </trans-unit>
        <trans-unit id="45dda95a8a895acaa082d4568625c2b2229adc6d" translate="yes" xml:space="preserve">
          <source>Consult the source file</source>
          <target state="translated">ソースファイルを参照</target>
        </trans-unit>
        <trans-unit id="ffe4bd03d1a9b826c2949410fe04f67bd3703796" translate="yes" xml:space="preserve">
          <source>Contents of Directories</source>
          <target state="translated">ディレクトリの内容</target>
        </trans-unit>
        <trans-unit id="61fff9ca74cb63cd0ee0dbec527015ffa34af070" translate="yes" xml:space="preserve">
          <source>Continue execution, but enter the debugger the next time any Lisp function is called. This allows you to step through the subexpressions of an expression, seeing what values the subexpressions compute, and what else they do.</source>
          <target state="translated">実行を続けますが、次にLisp関数が呼び出されたときはデバッガに入ります。これにより、式の副式をステップスルーして、副式がどのような値を計算しているのか、他に何をしているのかを見ることができます。</target>
        </trans-unit>
        <trans-unit id="d69d5dd87a25594fb3576b0bad9d587d69a6b5a4" translate="yes" xml:space="preserve">
          <source>Continue: pause one second at each breakpoint, and then continue (&lt;code&gt;edebug-continue-mode&lt;/code&gt;).</source>
          <target state="translated">続行：各ブレークポイントで1秒間一時停止してから、続行します（ &lt;code&gt;edebug-continue-mode&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="aa2d6c89a63b55f635a6f3209d09b093ff6f0556" translate="yes" xml:space="preserve">
          <source>Contrast this function with &lt;code&gt;buffer-substring&lt;/code&gt; (see &lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;Buffer Contents&lt;/a&gt;), which returns a string containing a portion of the text in the current buffer. The beginning of a string is at index 0, but the beginning of a buffer is at index 1.</source>
          <target state="translated">この関数を、現在のバッファー内のテキストの一部を含む文字列を返す &lt;code&gt;buffer-substring&lt;/code&gt; （「&lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;BufferContents&lt;/a&gt;」を参照）と比較してください。文字列の先頭はインデックス0にありますが、バッファの先頭はインデックス1にあります。</target>
        </trans-unit>
        <trans-unit id="49551177d73377982310b6a218929215d8146939" translate="yes" xml:space="preserve">
          <source>Control Structures</source>
          <target state="translated">制御構造</target>
        </trans-unit>
        <trans-unit id="924d2ed382c4c53d0f69ac054827f4513077f47f" translate="yes" xml:space="preserve">
          <source>Control characters can be represented using yet another read syntax. This consists of a question mark followed by a backslash, caret, and the corresponding non-control character, in either upper or lower case. For example, both &amp;lsquo;</source>
          <target state="translated">制御文字は、さらに別の読み取り構文を使用して表すことができます。これは、疑問符とそれに続くバックスラッシュ、キャレット、および対応する非制御文字（大文字または小文字）で構成されます。たとえば、両方 '</target>
        </trans-unit>
        <trans-unit id="f74284a69aad3b3a5d8f4027059afac05653bad3" translate="yes" xml:space="preserve">
          <source>Control over the garbage collector via &lt;code&gt;gc-cons-threshold&lt;/code&gt; and &lt;code&gt;gc-cons-percentage&lt;/code&gt; is only approximate. Although Emacs checks for threshold exhaustion regularly, for efficiency reasons it does not do so immediately after every change to the heap or to &lt;code&gt;gc-cons-threshold&lt;/code&gt; or &lt;code&gt;gc-cons-percentage&lt;/code&gt;, so exhausting the threshold does not immediately trigger garbage collection. Also, for efficiency in threshold calculations Emacs approximates the heap size, which counts the bytes used by currently-accessible objects in the heap.</source>
          <target state="translated">&lt;code&gt;gc-cons-threshold&lt;/code&gt; および &lt;code&gt;gc-cons-percentage&lt;/code&gt; を介したガベージコレクターの制御は概算です。Emacsはしきい値の枯渇を定期的にチェックしますが、効率上の理由から、ヒープまたは &lt;code&gt;gc-cons-threshold&lt;/code&gt; または &lt;code&gt;gc-cons-percentage&lt;/code&gt; を変更するたびにすぐにチェックするわけではないため、しきい値を使い果たしてもすぐにガベージコレクションはトリガーされません。また、しきい値計算を効率化するために、Emacsはヒープサイズを概算します。これは、ヒープ内の現在アクセス可能なオブジェクトによって使用されるバイトをカウントします。</target>
        </trans-unit>
        <trans-unit id="51a5660859ba3abd6ee50652d76f51626dbeda37" translate="yes" xml:space="preserve">
          <source>Control-?</source>
          <target state="translated">Control-?</target>
        </trans-unit>
        <trans-unit id="a928bf5944d990a73e01c2a9c46d6b813a9da870" translate="yes" xml:space="preserve">
          <source>Control-Character Syntax</source>
          <target state="translated">制御文字構文</target>
        </trans-unit>
        <trans-unit id="77dd55f6961c048be4d9b751dba76e78f4b78946" translate="yes" xml:space="preserve">
          <source>Controlling and recording terminal output.</source>
          <target state="translated">端子出力を制御して記録します。</target>
        </trans-unit>
        <trans-unit id="df80da38626c73dcd2fc3da688ac3bdfaea15e62" translate="yes" xml:space="preserve">
          <source>Controlling expansion; expansion subroutines.</source>
          <target state="translated">展開の制御、展開サブルーチン。</target>
        </trans-unit>
        <trans-unit id="d34aa18cbf6a7a63430bb1c86a6be161b5055c63" translate="yes" xml:space="preserve">
          <source>Controlling frame size, position, font, etc.</source>
          <target state="translated">フレームサイズ、位置、フォントなどの制御</target>
        </trans-unit>
        <trans-unit id="c569645c1abce1208ce172bc38a08a90ca3fc79e" translate="yes" xml:space="preserve">
          <source>Controlling how backups and auto-save files are made.</source>
          <target state="translated">バックアップと自動保存ファイルの作成方法を制御します。</target>
        </trans-unit>
        <trans-unit id="c45476ac159b7503880ae8c1c361226f931128b4" translate="yes" xml:space="preserve">
          <source>Controlling scroll bars.</source>
          <target state="translated">スクロールバーの制御</target>
        </trans-unit>
        <trans-unit id="fd1d5488a535d755032a9351c64ea83e91227c14" translate="yes" xml:space="preserve">
          <source>Controlling the Active Keymaps</source>
          <target state="translated">アクティブなキーマップの制御</target>
        </trans-unit>
        <trans-unit id="ec30bb9dfc9153a75fe431da3c119c33e9d68f49" translate="yes" xml:space="preserve">
          <source>Controlling the cursor appearance.</source>
          <target state="translated">カーソルの外観を制御します。</target>
        </trans-unit>
        <trans-unit id="59f0d0ec6f80826d9cf4911ade02e2a9e0cdcbb0" translate="yes" xml:space="preserve">
          <source>Controlling the default choices.</source>
          <target state="translated">デフォルトの選択肢を制御します。</target>
        </trans-unit>
        <trans-unit id="307712c4ad63fe120cd8b931f02a7a363de9a1cf" translate="yes" xml:space="preserve">
          <source>Controlling the echo area.</source>
          <target state="translated">エコー領域を制御します。</target>
        </trans-unit>
        <trans-unit id="d645de8f844b199d2c01dc646ad8a798f357d0bb" translate="yes" xml:space="preserve">
          <source>Controlling the height of lines.</source>
          <target state="translated">線の高さを制御します。</target>
        </trans-unit>
        <trans-unit id="a41d2e67da9b04bb9f13efd1bd65a2797266a367" translate="yes" xml:space="preserve">
          <source>Controlling visibility with &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; is especially useful in a program to display the list of entries in a database. It permits the implementation of convenient filtering commands to view just a part of the entries in the database. Setting this variable is very fast, much faster than scanning all the text in the buffer looking for properties to change.</source>
          <target state="translated">&lt;code&gt;buffer-invisibility-spec&lt;/code&gt; を使用して可視性を制御することは、データベース内のエントリのリストを表示するプログラムで特に役立ちます。これにより、便利なフィルタリングコマンドを実装して、データベース内のエントリの一部のみを表示できます。この変数の設定は非常に高速で、変更するプロパティを探すためにバッファ内のすべてのテキストをスキャンするよりもはるかに高速です。</target>
        </trans-unit>
        <trans-unit id="1e6169e424d1c227ade5dd8fd4bae60a65d3dc64" translate="yes" xml:space="preserve">
          <source>Controlling whether to use multibyte characters.</source>
          <target state="translated">マルチバイト文字を使用するかどうかを制御します。</target>
        </trans-unit>
        <trans-unit id="41d9b8a8c185480bfd8dc8a0945d46e6e57a9221" translate="yes" xml:space="preserve">
          <source>Controlling which region gets refontified after a buffer change.</source>
          <target state="translated">バッファ変更後にどの領域をリフォントするかを制御します。</target>
        </trans-unit>
        <trans-unit id="29dfd2de929a124566ac189d7ec4e22dc91ab245" translate="yes" xml:space="preserve">
          <source>Controlling window fringes.</source>
          <target state="translated">窓のフリンジを制御する。</target>
        </trans-unit>
        <trans-unit id="c466c2f7e8f5d9f3ec2ea66bb91e6eaf343b3ec1" translate="yes" xml:space="preserve">
          <source>Convenient special cases of completion (reading buffer names, variable names, etc.).</source>
          <target state="translated">補完の便利な特殊ケース(バッファ名や変数名の読み込みなど)。</target>
        </trans-unit>
        <trans-unit id="2ef62e3b35ca60e53cfc4e279e31f0f36898e8a5" translate="yes" xml:space="preserve">
          <source>Convenient ways to define an image for later use.</source>
          <target state="translated">後で使用するために画像を定義する便利な方法。</target>
        </trans-unit>
        <trans-unit id="0bf7285054ee7661778b8a7284eaea504418ae73" translate="yes" xml:space="preserve">
          <source>Convenient ways to display an image once it is defined.</source>
          <target state="translated">一度定義した画像を表示する便利な方法</target>
        </trans-unit>
        <trans-unit id="61856b8c17a4ff32006fe4b7dcc6f96f253b2120" translate="yes" xml:space="preserve">
          <source>Conventions</source>
          <target state="translated">Conventions</target>
        </trans-unit>
        <trans-unit id="7bc6fe2a7d08aa9e4c9a522ac0824dfc3b75ad2f" translate="yes" xml:space="preserve">
          <source>Conventions for Writing Minor Modes</source>
          <target state="translated">マイナーモードの書き方の規約</target>
        </trans-unit>
        <trans-unit id="3deb94933a9a171984a0cda13ccda169584422dd" translate="yes" xml:space="preserve">
          <source>Conversion Between Lisp and Module Values</source>
          <target state="translated">Lispとモジュール値の変換</target>
        </trans-unit>
        <trans-unit id="7b6dda7c75495bb4fd913fe9cda86fcd2f093d3f" translate="yes" xml:space="preserve">
          <source>Conversion from byte arrays to nested alists is also known as &lt;em&gt;deserializing&lt;/em&gt; or &lt;em&gt;unpacking&lt;/em&gt;, while going in the opposite direction is also known as &lt;em&gt;serializing&lt;/em&gt; or &lt;em&gt;packing&lt;/em&gt;.</source>
          <target state="translated">バイト配列からネストされたリストへの変換は、&lt;em&gt;逆シリアル化&lt;/em&gt;または&lt;em&gt;アンパック&lt;/em&gt;とも呼ばれ、反対方向への&lt;em&gt;変換&lt;/em&gt;は、&lt;em&gt;シリアル&lt;/em&gt;&lt;em&gt;化&lt;/em&gt;または&lt;em&gt;パッキング&lt;/em&gt;とも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="02b1b45f9d975a92faeb4f148eccff062e636bba" translate="yes" xml:space="preserve">
          <source>Conversion of Characters and Strings</source>
          <target state="translated">文字と文字列の変換</target>
        </trans-unit>
        <trans-unit id="a7c081d9514285553713aaf0f3604e600eb2d9de" translate="yes" xml:space="preserve">
          <source>Conversion of tabs to spaces happens only if &lt;var&gt;count&lt;/var&gt; is positive. If it is negative, exactly -&lt;var&gt;count&lt;/var&gt; characters after point are deleted.</source>
          <target state="translated">タブからスペースへの変換は、 &lt;var&gt;count&lt;/var&gt; が正の場合にのみ発生します。負の場合は、正確に-ポイントが削除された後の文字数を &lt;var&gt;count&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="05b05c33a74179f0f175207e819e7a3e68c0bbf4" translate="yes" xml:space="preserve">
          <source>Conversion starts with one representation and produces another representation. When there is only one conversion to do, there is no conflict about what to start with. However, when there are multiple conversions involved, conflict may arise when two conversions need to start with the same data.</source>
          <target state="translated">変換は、一つの表現から始まり、別の表現を生成する。行うべき変換が1つしかないとき,何から始めるかについての競合はありません。しかし,複数の変換が関与している場合,2つの変換が同じデータから開始する必要があるとき,競合が生じることがあります。</target>
        </trans-unit>
        <trans-unit id="96405b08f6874f5dac1e34f5aa43e87067b82684" translate="yes" xml:space="preserve">
          <source>Conversion to and from various file formats.</source>
          <target state="translated">様々なファイル形式への変換。</target>
        </trans-unit>
        <trans-unit id="337acaaa689021b4ee7a9d42ef3e943196cef220" translate="yes" xml:space="preserve">
          <source>Conversion to or from base 64 encoding.</source>
          <target state="translated">ベース64エンコーディングへの変換、またはベース64エンコーディングからの変換。</target>
        </trans-unit>
        <trans-unit id="35d70b7c19413e4896d7b3762df5948231ef619e" translate="yes" xml:space="preserve">
          <source>Convert the Internet address vector &lt;var&gt;ip&lt;/var&gt; to a string in the usual dotted notation.</source>
          <target state="translated">インターネットアドレスベクトル &lt;var&gt;ip&lt;/var&gt; を通常のドット表記の文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="d4778c6f6fbd78060d18e640b0577ff1f19e9085" translate="yes" xml:space="preserve">
          <source>Converting Lisp objects to text and back.</source>
          <target state="translated">Lispオブジェクトをテキストとバックに変換します。</target>
        </trans-unit>
        <trans-unit id="fc8fdc9fa5a83cea24c50aab5e3362950a9bfc97" translate="yes" xml:space="preserve">
          <source>Converting Text Representations</source>
          <target state="translated">テキスト表現の変換</target>
        </trans-unit>
        <trans-unit id="90f6e1b3c6da0822ea0b9914a612e30d83c96069" translate="yes" xml:space="preserve">
          <source>Converting among timestamp forms.</source>
          <target state="translated">タイムスタンプ形式間での変換</target>
        </trans-unit>
        <trans-unit id="26ac13ddb29d0dd1caa237a75b4438e366e1517b" translate="yes" xml:space="preserve">
          <source>Converting an Emacs Lisp program to lexical binding is easy. First, add a file-local variable setting of &lt;code&gt;lexical-binding&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; in the header line of the Emacs Lisp source file (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;). Second, check that every variable in the program which needs to be dynamically bound has a variable definition, so that it is not inadvertently bound lexically.</source>
          <target state="translated">EmacsLispプログラムを字句バインディングに変換するのは簡単です。まず、ファイルのローカル変数設定の追加 &lt;code&gt;lexical-binding&lt;/code&gt; に &lt;code&gt;t&lt;/code&gt; （参照Emacs Lispのソースファイルのヘッダ行に&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;ファイルのローカル変数&lt;/a&gt;）。次に、動的にバインドする必要のあるプログラム内のすべての変数に変数定義があることを確認して、誤って字句的にバインドされないようにします。</target>
        </trans-unit>
        <trans-unit id="fc10701f0526602d946fa10a00b4c09978a6ead0" translate="yes" xml:space="preserve">
          <source>Converting coordinates to windows.</source>
          <target state="translated">座標をウィンドウに変換します。</target>
        </trans-unit>
        <trans-unit id="524c596225982bf2828d086c696ecb11e47c4298" translate="yes" xml:space="preserve">
          <source>Converting float to integer and vice versa.</source>
          <target state="translated">浮動小数点から整数への変換やその逆も可能です。</target>
        </trans-unit>
        <trans-unit id="0bb4b95e1bc29b98a83290af4288e9f72e2a0e04" translate="yes" xml:space="preserve">
          <source>Converting multibyte text to unibyte converts all</source>
          <target state="translated">マルチバイトテキストをユニバイトに変換すると、すべての</target>
        </trans-unit>
        <trans-unit id="fa2156a499b76291b1a27ac1a43926bb4f82cfd4" translate="yes" xml:space="preserve">
          <source>Converting relative file names to absolute ones.</source>
          <target state="translated">相対ファイル名を絶対ファイル名に変換します。</target>
        </trans-unit>
        <trans-unit id="7c2dc98411dbd3091c4b50f256b466e1b535f24d" translate="yes" xml:space="preserve">
          <source>Converting timestamps to text and vice versa.</source>
          <target state="translated">タイムスタンプをテキストに変換したり、その逆もできます。</target>
        </trans-unit>
        <trans-unit id="7afe6e99a534eb8a522692395adedc0d96df056c" translate="yes" xml:space="preserve">
          <source>Converting to and from characters and strings.</source>
          <target state="translated">文字や文字列への変換</target>
        </trans-unit>
        <trans-unit id="b968665d75903a1148fa2d697573cd91bbcaaeef" translate="yes" xml:space="preserve">
          <source>Converting unibyte text to multibyte text leaves</source>
          <target state="translated">ユニバイトテキストをマルチバイトテキストに変換すると</target>
        </trans-unit>
        <trans-unit id="472c8d106551794420807834d8b6cfbdc8233275" translate="yes" xml:space="preserve">
          <source>Converting unibyte to multibyte and vice versa.</source>
          <target state="translated">ユニバイトをマルチバイトに変換したり、その逆も可能です。</target>
        </trans-unit>
        <trans-unit id="3a07f3577430864cee004b96ff66a0168d3c55ca" translate="yes" xml:space="preserve">
          <source>Coordinates and Windows</source>
          <target state="translated">コーディネートとWindows</target>
        </trans-unit>
        <trans-unit id="eeebb6a0149995df68dcbd9a928f37aa757c3a3f" translate="yes" xml:space="preserve">
          <source>Coordinates by default are absolute. To use coordinates relative to the last position, or &amp;ndash; initially &amp;ndash; to the origin, set the attribute &lt;var&gt;:relative&lt;/var&gt; to &lt;code&gt;t&lt;/code&gt;. This attribute can be specified for the function or for individual commands. If specified for the function, then all commands use relative coordinates by default. To make an individual command use absolute coordinates, set &lt;var&gt;:relative&lt;/var&gt; to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">デフォルトの座標は絶対です。最後の位置、または最初は原点を基準にした座標を使用するには、属性 &lt;var&gt;:relative&lt;/var&gt; を &lt;code&gt;t&lt;/code&gt; に設定します。この属性は、関数または個々のコマンドに指定できます。関数に指定されている場合、すべてのコマンドはデフォルトで相対座標を使用します。個々のコマンドで絶対座標を使用するには、 &lt;var&gt;:relative&lt;/var&gt; を &lt;code&gt;nil&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="8da3db9270db343a7b0a696a8877ef2f7be01b76" translate="yes" xml:space="preserve">
          <source>Copying text between strings and buffers preserves the properties along with the characters; this includes such diverse functions as &lt;code&gt;substring&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt;, and &lt;code&gt;buffer-substring&lt;/code&gt;.</source>
          <target state="translated">文字列とバッファの間でテキストをコピーすると、文字とともにプロパティが保持されます。これには、 &lt;code&gt;substring&lt;/code&gt; 、 &lt;code&gt;insert&lt;/code&gt; 、 &lt;code&gt;buffer-substring&lt;/code&gt; などのさまざまな関数が含まれます。</target>
        </trans-unit>
        <trans-unit id="9b2ceb26d4b98a07244f3a0d316e0e282c56e18b" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1990-1996, 1998-2019 Free Software Foundation, Inc.</source>
          <target state="translated">Copyright&amp;copy;1990-1996、1998-2019 Free Software Foundation、Inc。</target>
        </trans-unit>
        <trans-unit id="2102df6b141a640305fd55a5e765b5f702fb72eb" translate="yes" xml:space="preserve">
          <source>Corrections were supplied by Drew Adams, Juanma Barranquero, Karl Berry, Jim Blandy, Bard Bloom, Stephane Boucher, David Boyes, Alan Carroll, Richard Davis, Lawrence R. Dodd, Peter Doornbosch, David A. Duff, Chris Eich, Beverly Erlebacher, David Eckelkamp, Ralf Fassel, Eirik Fuller, Stephen Gildea, Bob Glickstein, Eric Hanchrow, Jesper Harder, George Hartzell, Nathan Hess, Masayuki Ida, Dan Jacobson, Jak Kirman, Bob Knighten, Frederick M. Korz, Joe Lammens, Glenn M. Lewis, K. Richard Magill, Brian Marick, Roland McGrath, Stefan Monnier, Skip Montanaro, John Gardiner Myers, Thomas A. Peterson, Francesco Potort&amp;igrave;, Friedrich Pukelsheim, Arnold D. Robbins, Raul Rockwell, Jason Rumney, Per Starb&amp;auml;ck, Shinichirou Sugou, Kimmo Suominen, Edward Tharp, Bill Trost, Rickard Westman, Jean White, Eduard Wiebe, Matthew Wilding, Carl Witty, Dale Worley, Rusty Wright, and David D. Zuhn.</source>
          <target state="translated">訂正は、Drew Adams、Juanma Barranquero、Karl Berry、Jim Blandy、Bard Bloom、Stephane Boucher、David Boyes、Alan Carroll、Richard Davis、Lawrence R. Dodd、Peter Doornbosch、David A. Duff、Chris Eich、Beverly Erlebacher、 David Eckelkamp、Ralf Fassel、Eirik Fuller、Stephen Gildea、Bob Glickstein、Eric Hanchrow、Jesper Harder、George Hartzell、Nathan Hess、Masayuki Ida、Dan Jacobson、Jak Kirman、Bob Knighten、Frederick M. Korz、Joe Lammens、Glenn M.ルイス、K。リチャードマギル、ブライアンマリック、ローランドマクグラス、ステファンモニエ、スキップモンタナロ、ジョンガーディナーマイヤーズ、トーマスA.ピーターソン、フランチェスコポトルティ、フリードリッヒプケルスハイム、アーノルドD.ロビンズ、ラウルロックウェル、ジェイソンラムニー、パースターバック、新一郎菅生、Kimmo Suominen、Edward Tharp、Bill Trost、Rickard Westman、Jean White、Eduard Wiebe、Matthew Wilding、Carl Witty、Dale Worley、Rusty Wright、DavidD.Zuhn。</target>
        </trans-unit>
        <trans-unit id="b9ba1710f3c11a1b452cc804f42def7b223ae6f5" translate="yes" xml:space="preserve">
          <source>Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">対応する文字列正規表現： '</target>
        </trans-unit>
        <trans-unit id="7c41d18405d41a7b0640633e526c2946d40de878" translate="yes" xml:space="preserve">
          <source>Corresponds to Unicode language- and context-independent special lower-casing rules. The value of this property is a string (which may be empty). For example mapping for U+0130 &lt;small&gt;LATIN CAPITAL LETTER I WITH DOT ABOVE&lt;/small&gt; the value is &lt;code&gt;&quot;i\u0307&quot;&lt;/code&gt; (i.e. 2-character string consisting of &lt;small&gt;LATIN SMALL LETTER I&lt;/small&gt; followed by U+0307 &lt;small&gt;COMBINING DOT ABOVE&lt;/small&gt;). For characters with no special mapping, the value is &lt;code&gt;nil&lt;/code&gt; which means &lt;code&gt;lowercase&lt;/code&gt; property needs to be consulted instead.</source>
          <target state="translated">Unicodeの言語およびコンテキストに依存しない特別な小文字のルールに対応します。このプロパティの値は文字列です（空の場合があります）。たとえば、U + 0130 &lt;small&gt;LATIN CAPITAL LETTER I WITH DOT ABOVE&lt;/small&gt;のマッピングでは、値は &lt;code&gt;&quot;i\u0307&quot;&lt;/code&gt; （つまり、&lt;small&gt;LATIN SMALL &lt;/small&gt;&lt;small&gt;LETTERIの&lt;/small&gt;後にU + 0307 &lt;small&gt;COMBINING DOT ABOVEが&lt;/small&gt;続く2文字の文字列）。特別なマッピングがない文字の場合、値は &lt;code&gt;nil&lt;/code&gt; です。これは、代わりに &lt;code&gt;lowercase&lt;/code&gt; プロパティを参照する必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="b5a54d91ef13bd529c42abafa0fb7ea35f71c990" translate="yes" xml:space="preserve">
          <source>Corresponds to Unicode language- and context-independent special upper-casing rules. The value of this property is a string (which may be empty). For example mapping for U+00DF &lt;small&gt;LATIN SMALL LETTER SHARP S&lt;/small&gt; is &lt;code&gt;&quot;SS&quot;&lt;/code&gt;. For characters with no special mapping, the value is &lt;code&gt;nil&lt;/code&gt; which means &lt;code&gt;uppercase&lt;/code&gt; property needs to be consulted instead.</source>
          <target state="translated">Unicodeの言語およびコンテキストに依存しない特別な大文字の規則に対応します。このプロパティの値は文字列です（空の場合があります）。たとえば、U + 00DF &lt;small&gt;LATIN SMALL LETTER&lt;/small&gt; SHARPSのマッピングは &lt;code&gt;&quot;SS&quot;&lt;/code&gt; です。特別なマッピングがない文字の場合、値は &lt;code&gt;nil&lt;/code&gt; です。これは、代わりに &lt;code&gt;uppercase&lt;/code&gt; プロパティを参照する必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="a7d1cb521db4f75e84a16e684adca4b2af98b75c" translate="yes" xml:space="preserve">
          <source>Corresponds to Unicode unconditional special title-casing rules. The value of this property is a string (which may be empty). For example mapping for U+FB01 &lt;small&gt;LATIN SMALL LIGATURE FI&lt;/small&gt; the value is &lt;code&gt;&quot;Fi&quot;&lt;/code&gt;. For characters with no special mapping, the value is &lt;code&gt;nil&lt;/code&gt; which means &lt;code&gt;titlecase&lt;/code&gt; property needs to be consulted instead.</source>
          <target state="translated">Unicodeの無条件の特別なタイトル大文字小文字の規則に対応します。このプロパティの値は文字列です（空の場合があります）。たとえば、U + FB01 &lt;small&gt;LATIN SMALL LIGATURE FI&lt;/small&gt;のマッピングでは、値は &lt;code&gt;&quot;Fi&quot;&lt;/code&gt; です。特別なマッピングのない文字の場合、値は &lt;code&gt;nil&lt;/code&gt; です。これは、 &lt;code&gt;titlecase&lt;/code&gt; プロパティを参照する必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="75b750f2e6da0a3d2a6bc519797c592d18d71dd5" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;Canonical_Combining_Class&lt;/code&gt; Unicode property. The value is an integer. For unassigned codepoints, the value is zero.</source>
          <target state="translated">&lt;code&gt;Canonical_Combining_Class&lt;/code&gt; Unicodeプロパティに対応します。値は整数です。割り当てられていないコードポイントの場合、値はゼロです。</target>
        </trans-unit>
        <trans-unit id="cc9225abecb16fcfbfafe41d62a9a6271ff1bc4f" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;General_Category&lt;/code&gt; Unicode property. The value is a symbol whose name is a 2-letter abbreviation of the character&amp;rsquo;s classification. For unassigned codepoints, the value is &lt;code&gt;Cn&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;General_Category&lt;/code&gt; Unicodeプロパティに対応します。値は、名前が文字の分類の2文字の省略形である記号です。割り当てられていないコードポイントの場合、値は &lt;code&gt;Cn&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="be06e073e66fd593a9849a78ad735893ade8cc11" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;Name&lt;/code&gt; Unicode property. The value is a string consisting of upper-case Latin letters A to Z, digits, spaces, and hyphen &amp;lsquo;</source>
          <target state="translated">該当する &lt;code&gt;Name&lt;/code&gt; のUnicodeプロパティ。値は、大文字のラテン文字AからZ、数字、スペース、およびハイフンで構成される文字列です。</target>
        </trans-unit>
        <trans-unit id="2f8fd32ceb9fd632a2ceb9d4c0c0c63306d38349" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Bidi_Class&lt;/code&gt; property. The value is a symbol whose name is the Unicode &lt;em&gt;directional type&lt;/em&gt; of the character. Emacs uses this property when it reorders bidirectional text for display (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;). For unassigned codepoints, the value depends on the code blocks to which the codepoint belongs: most unassigned codepoints get the value of &lt;code&gt;L&lt;/code&gt; (strong L), but some get values of &lt;code&gt;AL&lt;/code&gt; (Arabic letter) or &lt;code&gt;R&lt;/code&gt; (strong R).</source>
          <target state="translated">&lt;code&gt;Bidi_Class&lt;/code&gt; プロパティに対応します。値は、名前が文字のUnicode&lt;em&gt;方向タイプ&lt;/em&gt;であるシンボルです。Emacsは、表示用に双方向テキストを並べ替えるときにこのプロパティを使用します（&lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;双方向表示を&lt;/a&gt;参照）。割り当てられていないコードポイントの場合、値はコードポイントが属するコードブロックによって異なります。割り当てられていないコードポイントのほとんどは &lt;code&gt;L&lt;/code&gt; （強いL）の値を取得しますが、 &lt;code&gt;AL&lt;/code&gt; （アラビア文字）または &lt;code&gt;R&lt;/code&gt; （強いR）の値を取得するものもあります。</target>
        </trans-unit>
        <trans-unit id="829beecebbebcce9941e38c929f1a7cad7264cdc" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Bidi_Mirrored&lt;/code&gt; property. The value of this property is a symbol, either &lt;code&gt;Y&lt;/code&gt; or &lt;code&gt;N&lt;/code&gt;. For unassigned codepoints, the value is &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Bidi_Mirrored&lt;/code&gt; プロパティに対応します。このプロパティの値は、 &lt;code&gt;Y&lt;/code&gt; または &lt;code&gt;N&lt;/code&gt; のいずれかのシンボルです。割り当てられていないコードポイントの場合、値は &lt;code&gt;N&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f9e759e1b98f990f210ac6bb9f5d912b4d1caa6c" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Bidi_Mirroring_Glyph&lt;/code&gt; property. The value of this property is a character whose glyph represents the mirror image of the character&amp;rsquo;s glyph, or &lt;code&gt;nil&lt;/code&gt; if there&amp;rsquo;s no defined mirroring glyph. All the characters whose &lt;code&gt;mirrored&lt;/code&gt; property is &lt;code&gt;N&lt;/code&gt; have &lt;code&gt;nil&lt;/code&gt; as their &lt;code&gt;mirroring&lt;/code&gt; property; however, some characters whose &lt;code&gt;mirrored&lt;/code&gt; property is &lt;code&gt;Y&lt;/code&gt; also have &lt;code&gt;nil&lt;/code&gt; for &lt;code&gt;mirroring&lt;/code&gt;, because no appropriate characters exist with mirrored glyphs. Emacs uses this property to display mirror images of characters when appropriate (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;). For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Bidi_Mirroring_Glyph&lt;/code&gt; プロパティに対応します。このプロパティの値は、そのグリフがキャラクターのグリフの鏡像を表すキャラクターです。定義されたミラーリンググリフがない場合は &lt;code&gt;nil&lt;/code&gt; です。そのすべての文字 &lt;code&gt;mirrored&lt;/code&gt; プロパティさ &lt;code&gt;N&lt;/code&gt; が持って &lt;code&gt;nil&lt;/code&gt; をそのよう &lt;code&gt;mirroring&lt;/code&gt; プロパティ。ただし、 &lt;code&gt;mirroring&lt;/code&gt; されたグリフには適切な文字が存在しないため、ミラーリング &lt;code&gt;mirrored&lt;/code&gt; プロパティが &lt;code&gt;Y&lt;/code&gt; である一部の文字もミラーリングに &lt;code&gt;nil&lt;/code&gt; を持っています。 Emacsはこのプロパティを使用して、必要に応じて文字の鏡像を表示します（&lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;双方向表示を&lt;/a&gt;参照））。割り当てられていないコードポイントの場合、値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="265879e7606999c4fecc98ef35dfec9da486c9b5" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Bidi_Paired_Bracket&lt;/code&gt; property. The value of this property is the codepoint of a character&amp;rsquo;s &lt;em&gt;paired bracket&lt;/em&gt;, or &lt;code&gt;nil&lt;/code&gt; if the character is not a bracket character. This establishes a mapping between characters that are treated as bracket pairs by the Unicode Bidirectional Algorithm; Emacs uses this property when it decides how to reorder for display parentheses, braces, and other similar characters (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Bidi_Paired_Bracket&lt;/code&gt; プロパティに対応します。このプロパティの値は、文字のコードポイントのある&lt;em&gt;ペアブラケット&lt;/em&gt;、または &lt;code&gt;nil&lt;/code&gt; の文字がブラケット文字でない場合。これにより、Unicode双方向アルゴリズムによってブラケットペアとして扱われる文字間のマッピングが確立されます。Emacsは、表示括弧、中括弧、およびその他の同様の文字の並べ替え方法を決定するときにこのプロパティを使用します（&lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;双方向表示を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c3dff4e6b8526fbe88330dd801a8d89bd2b4ba08" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Bidi_Paired_Bracket_Type&lt;/code&gt; property. For characters whose &lt;code&gt;paired-bracket&lt;/code&gt; property is non-&lt;code&gt;nil&lt;/code&gt;, the value of this property is a symbol, either &lt;code&gt;o&lt;/code&gt; (for opening bracket characters) or &lt;code&gt;c&lt;/code&gt; (for closing bracket characters). For characters whose &lt;code&gt;paired-bracket&lt;/code&gt; property is &lt;code&gt;nil&lt;/code&gt;, the value is the symbol &lt;code&gt;n&lt;/code&gt; (None). Like &lt;code&gt;paired-bracket&lt;/code&gt;, this property is used for bidirectional display.</source>
          <target state="translated">&lt;code&gt;Bidi_Paired_Bracket_Type&lt;/code&gt; プロパティに対応します。 &lt;code&gt;paired-bracket&lt;/code&gt; プロパティが &lt;code&gt;nil&lt;/code&gt; 以外の文字の場合、このプロパティの値は、 &lt;code&gt;o&lt;/code&gt; （ブラケット文字を開く場合）または &lt;code&gt;c&lt;/code&gt; （ブラケット文字を閉じる場合）のいずれかの記号です。 &lt;code&gt;paired-bracket&lt;/code&gt; プロパティが &lt;code&gt;nil&lt;/code&gt; の文字の場合、値は記号 &lt;code&gt;n&lt;/code&gt; （なし）です。 &lt;code&gt;paired-bracket&lt;/code&gt; と同様に、このプロパティは双方向表示に使用されます。</target>
        </trans-unit>
        <trans-unit id="777c7ab0edc9827c3f8a4183f60c38cbbfacd58b" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;ISO_Comment&lt;/code&gt; property. The value is either a string or &lt;code&gt;nil&lt;/code&gt;. For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ISO_Comment&lt;/code&gt; プロパティに対応します。値は文字列または &lt;code&gt;nil&lt;/code&gt; のいずれかです。割り当てられていないコードポイントの場合、値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a3cc8f9ccb4adcab4253ea6d0f97742c0adc37f7" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Numeric_Value&lt;/code&gt; property for characters whose &lt;code&gt;Numeric_Type&lt;/code&gt; is &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;Numeric_Type&lt;/code&gt; が 'である文字の &lt;code&gt;Numeric_Value&lt;/code&gt; プロパティに対応します</target>
        </trans-unit>
        <trans-unit id="76392a8c382a428eaff015e5935c52cac0bc1279" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Simple_Lowercase_Mapping&lt;/code&gt; property. The value of this property is a single character. For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;, which means the character itself.</source>
          <target state="translated">&lt;code&gt;Simple_Lowercase_Mapping&lt;/code&gt; プロパティに対応します。このプロパティの値は1文字です。割り当てられていないコードポイントの場合、値は &lt;code&gt;nil&lt;/code&gt; です。これは、文字自体を意味します。</target>
        </trans-unit>
        <trans-unit id="d7eb6f31edfe7cd2d32bf7fefe78f5da2dca8cda" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Simple_Titlecase_Mapping&lt;/code&gt; property. &lt;em&gt;Title case&lt;/em&gt; is a special form of a character used when the first character of a word needs to be capitalized. The value of this property is a single character. For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;, which means the character itself.</source>
          <target state="translated">&lt;code&gt;Simple_Titlecase_Mapping&lt;/code&gt; プロパティに対応します。&lt;em&gt;タイトルケース&lt;/em&gt;は、単語の最初の文字を大文字にする必要がある場合に使用される特殊な形式の文字です。このプロパティの値は1文字です。割り当てられていないコードポイントの場合、値は &lt;code&gt;nil&lt;/code&gt; です。これは、文字自体を意味します。</target>
        </trans-unit>
        <trans-unit id="3ad30905593adfe4f3ea16b516868dc1926bf342" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Simple_Uppercase_Mapping&lt;/code&gt; property. The value of this property is a single character. For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;, which means the character itself.</source>
          <target state="translated">&lt;code&gt;Simple_Uppercase_Mapping&lt;/code&gt; プロパティに対応します。このプロパティの値は1文字です。割り当てられていないコードポイントの場合、値は &lt;code&gt;nil&lt;/code&gt; です。これは、文字自体を意味します。</target>
        </trans-unit>
        <trans-unit id="2ef3e02019fafe84f9e1ab7effc843e021ce4c50" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Unicode_1_Name&lt;/code&gt; property. The value is a string. For unassigned codepoints, and characters that have no value for this property, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Unicode_1_Name&lt;/code&gt; プロパティに対応します。値は文字列です。割り当てられていないコードポイント、およびこのプロパティに値がない文字の場合、値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="57cebd554d2452b091a6834063266c57dda3987c" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode properties &lt;code&gt;Decomposition_Type&lt;/code&gt; and &lt;code&gt;Decomposition_Value&lt;/code&gt;. The value is a list, whose first element may be a symbol representing a compatibility formatting tag, such as &lt;code&gt;small&lt;/code&gt;&lt;a href=&quot;#FOOT18&quot; name=&quot;DOCF18&quot;&gt;&lt;sup&gt;18&lt;/sup&gt;&lt;/a&gt;; the other elements are characters that give the compatibility decomposition sequence of this character. For characters that don&amp;rsquo;t have decomposition sequences, and for unassigned codepoints, the value is a list with a single member, the character itself.</source>
          <target state="translated">Unicodeプロパティ &lt;code&gt;Decomposition_Type&lt;/code&gt; および &lt;code&gt;Decomposition_Value&lt;/code&gt; に対応します。値は、次のような最初の要素タグをフォーマット互換性を表す記号とすることができるリスト、である &lt;code&gt;small&lt;/code&gt; &lt;a href=&quot;#FOOT18&quot; name=&quot;DOCF18&quot;&gt;&lt;sup&gt;18&lt;/sup&gt;&lt;/a&gt;。他の要素は、この文字の互換性分解シーケンスを与える文字です。分解シーケンスを持たない文字の場合、および割り当てられていないコードポイントの場合、値は単一のメンバー、つまり文字自体を含むリストです。</target>
        </trans-unit>
        <trans-unit id="a9f3afecd5b11773110d68344dc0b656b9a38866" translate="yes" xml:space="preserve">
          <source>Counting Columns</source>
          <target state="translated">カウンティングコラム</target>
        </trans-unit>
        <trans-unit id="30106347ab7dfc885850c282c1789d99c22c045f" translate="yes" xml:space="preserve">
          <source>Coverage Testing</source>
          <target state="translated">カバレッジテスト</target>
        </trans-unit>
        <trans-unit id="2c8cafce14580e467bd97b418d2ec4ab69ebe1a9" translate="yes" xml:space="preserve">
          <source>Coverage testing makes execution slower, so it is only done if &lt;code&gt;edebug-test-coverage&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. Frequency counting is performed for all executions of an instrumented function, even if the execution mode is Go-nonstop, and regardless of whether coverage testing is enabled.</source>
          <target state="translated">カバレッジテストは実行を遅くするため、 &lt;code&gt;edebug-test-coverage&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合にのみ実行されます。頻度カウントは、実行モードがGo-nonstopの場合でも、カバレッジテストが有効になっているかどうかに関係なく、インストルメントされた関数のすべての実行に対して実行されます。</target>
        </trans-unit>
        <trans-unit id="034a0e42e1d096ac2c6d69f81959f24e55f87812" translate="yes" xml:space="preserve">
          <source>Coverage testing works by comparing the result of each expression with the previous result; each form in the program is considered covered if it has returned two different values since you began testing coverage in the current Emacs session. Thus, to do coverage testing on your program, execute it under various conditions and note whether it behaves correctly; Edebug will tell you when you have tried enough different conditions that each form has returned two different values.</source>
          <target state="translated">カバレッジテストは、各式の結果を前回の結果と比較することで動作します。現在の Emacs セッションでカバレッジテストを開始してから、プログラムの各フォームが 2 つの異なる値を返した場合、カバレッジテストが行われていると見なされます。したがって、プログラムのカバレッジテストを行うには、様々な条件でプログラムを実行し、それが正しく動作するかどうかを記録します。</target>
        </trans-unit>
        <trans-unit id="69aec66a0de409221ab641593c97f6a684d5c6bc" translate="yes" xml:space="preserve">
          <source>Create a gradient in &lt;var&gt;svg&lt;/var&gt; with identifier &lt;var&gt;id&lt;/var&gt;. &lt;var&gt;type&lt;/var&gt; specifies the gradient type, and can be either &lt;code&gt;linear&lt;/code&gt; or &lt;code&gt;radial&lt;/code&gt;. &lt;var&gt;stops&lt;/var&gt; is a list of percentage/color pairs.</source>
          <target state="translated">識別子 &lt;var&gt;id&lt;/var&gt; して &lt;var&gt;svg&lt;/var&gt; にグラデーションを作成します。 &lt;var&gt;type&lt;/var&gt; はグラデーションタイプを指定し、 &lt;code&gt;linear&lt;/code&gt; または &lt;code&gt;radial&lt;/code&gt; いずれかになります。 &lt;var&gt;stops&lt;/var&gt; は、パーセンテージ/色のペアのリストです。</target>
        </trans-unit>
        <trans-unit id="5b3f8ac5dd9211371315437c84fb1a43601b5ae9" translate="yes" xml:space="preserve">
          <source>Create a new mutex and return it. If &lt;var&gt;name&lt;/var&gt; is specified, it is a name given to the mutex. It must be a string. The name is for debugging purposes only; it has no meaning to Emacs.</source>
          <target state="translated">新しいミューテックスを作成して返します。場合は &lt;var&gt;name&lt;/var&gt; 指定され、それがミューテックスに与えられた名前です。文字列である必要があります。この名前はデバッグのみを目的としています。Emacsには意味がありません。</target>
        </trans-unit>
        <trans-unit id="46201199d56ab2049e0ee8de7d14fc9d19354561" translate="yes" xml:space="preserve">
          <source>Create a new thread of execution which invokes &lt;var&gt;function&lt;/var&gt;. When &lt;var&gt;function&lt;/var&gt; returns, the thread exits.</source>
          <target state="translated">&lt;var&gt;function&lt;/var&gt; を呼び出す新しい実行スレッドを作成します。ときに &lt;var&gt;function&lt;/var&gt; が戻ると、スレッドが終了します。</target>
        </trans-unit>
        <trans-unit id="ad3bb5246587053fa90c947af204d33db68119c2" translate="yes" xml:space="preserve">
          <source>Create a new, empty SVG image with the specified dimensions. &lt;var&gt;args&lt;/var&gt; is an argument plist with you can specify following:</source>
          <target state="translated">指定したサイズで新しい空のSVG画像を作成します。 &lt;var&gt;args&lt;/var&gt; は、以下を指定できる引数plistです。</target>
        </trans-unit>
        <trans-unit id="24a2a63f8a6c630e8a0de0f5b291f213111d7c3b" translate="yes" xml:space="preserve">
          <source>Creates a binding for each symbol used as keys the association list &lt;var&gt;alist&lt;/var&gt;, prefixed with dot. This can be useful when accessing several items in the same association list, and it&amp;rsquo;s best understood through a simple example:</source>
          <target state="translated">作成アソシエーションリストキーとして使用される各シンボルに対して結合 &lt;var&gt;alist&lt;/var&gt; ドット接頭辞。これは、同じ関連付けリスト内の複数のアイテムにアクセスする場合に役立ちます。簡単な例で最もよく理解できます。</target>
        </trans-unit>
        <trans-unit id="277eb1ddc0fba89d0c324aebb3ac22130fc9997c" translate="yes" xml:space="preserve">
          <source>Creating Buffers</source>
          <target state="translated">バッファの作成</target>
        </trans-unit>
        <trans-unit id="2c02b38e7e9de104210c9e49f0084a391aafb956" translate="yes" xml:space="preserve">
          <source>Creating Frames</source>
          <target state="translated">フレームの作成</target>
        </trans-unit>
        <trans-unit id="71f7ccb3cbb500f4be782df338ec0c314ad93f9a" translate="yes" xml:space="preserve">
          <source>Creating Hash Tables</source>
          <target state="translated">ハッシュテーブルの作成</target>
        </trans-unit>
        <trans-unit id="5f26462b023172db036944232b432ae67ca6892d" translate="yes" xml:space="preserve">
          <source>Creating Keymaps</source>
          <target state="translated">キーマップの作成</target>
        </trans-unit>
        <trans-unit id="8fd8132f6aff1f7027d01bbe93746f358b6fdcad" translate="yes" xml:space="preserve">
          <source>Creating Strings</source>
          <target state="translated">文字列の作成</target>
        </trans-unit>
        <trans-unit id="3839e146cd7dafa372f25e37666c9e45bfc07b82" translate="yes" xml:space="preserve">
          <source>Creating a Synchronous Process</source>
          <target state="translated">同期プロセスの作成</target>
        </trans-unit>
        <trans-unit id="a9fa8de13d47a14f5dc8a9fef6d945c160509ca7" translate="yes" xml:space="preserve">
          <source>Creating a buffer adds it to the end of the buffer list, and killing a buffer removes it from that list. A buffer moves to the front of this list whenever it is chosen for display in a window (see &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;) or a window displaying it is selected (see &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;Selecting Windows&lt;/a&gt;). A buffer moves to the end of the list when it is buried (see &lt;code&gt;bury-buffer&lt;/code&gt;, below). There are no functions available to the Lisp programmer which directly manipulate the buffer list.</source>
          <target state="translated">バッファを作成するとバッファリストの最後に追加され、バッファを強制終了するとそのリストから削除されます。このリストの前にバッファに移動し、それが画面に表示するために選択されたときに（参照&lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;バッファを切り替え&lt;/a&gt;）、または、それが選択されて表示するウィンドウ（参照&lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;ウィンドウの選択&lt;/a&gt;）。バッファは、埋め込まれるとリストの最後に移動します（以下の &lt;code&gt;bury-buffer&lt;/code&gt; を参照）。バッファリストを直接操作するLispプログラマが利用できる関数はありません。</target>
        </trans-unit>
        <trans-unit id="ed4603473f232f5f8cf861f4be491eb219aee848" translate="yes" xml:space="preserve">
          <source>Creating a new window.</source>
          <target state="translated">新しいウィンドウを作成します。</target>
        </trans-unit>
        <trans-unit id="4027485962223b6cb73023a2d88288b803b7c5e0" translate="yes" xml:space="preserve">
          <source>Creating additional frames.</source>
          <target state="translated">追加フレームの作成。</target>
        </trans-unit>
        <trans-unit id="8b8559726ac2573cc58414ea6c305b7f55cf3674" translate="yes" xml:space="preserve">
          <source>Creating an Asynchronous Process</source>
          <target state="translated">非同期プロセスの作成</target>
        </trans-unit>
        <trans-unit id="1261a76603fc4a1361d91e79e06d6c4d50e5de64" translate="yes" xml:space="preserve">
          <source>Creating an uninterned symbol is useful in generating Lisp code, because an uninterned symbol used as a variable in the code you generate cannot clash with any variables used in other Lisp programs.</source>
          <target state="translated">なぜなら、生成したコードで変数として使用されている非内部シンボルは、他のLispプログラムで使用されている変数と衝突することがないからです。</target>
        </trans-unit>
        <trans-unit id="95339642e495f7c716396730a9ad5979d9c94e02" translate="yes" xml:space="preserve">
          <source>Creating and Deleting Buffer-Local Bindings</source>
          <target state="translated">バッファローカルバインディングの作成と削除</target>
        </trans-unit>
        <trans-unit id="61dee4e18a3da5d3f2a2a3f71fc5e9d08abf3d49" translate="yes" xml:space="preserve">
          <source>Creating and Deleting Directories.</source>
          <target state="translated">ディレクトリの作成と削除</target>
        </trans-unit>
        <trans-unit id="0e56e94b432c828ea0f1a0f952f774f5a2a27039" translate="yes" xml:space="preserve">
          <source>Creating and Interning Symbols</source>
          <target state="translated">シンボルの作成とインターナル</target>
        </trans-unit>
        <trans-unit id="3366c9f14a827ad13843519d3bf31fb320ef81e6" translate="yes" xml:space="preserve">
          <source>Creating and Maintaining Package Archives</source>
          <target state="translated">パッケージアーカイブの作成と管理</target>
        </trans-unit>
        <trans-unit id="bb1b28716d46535ac7cb7d52c53eab6d6a672af0" translate="yes" xml:space="preserve">
          <source>Creating and destroying buffer-local bindings.</source>
          <target state="translated">バッファローカルバインディングの作成と破棄。</target>
        </trans-unit>
        <trans-unit id="fca2d290720fc36b3104b9c835cc4158000f397c" translate="yes" xml:space="preserve">
          <source>Creating and manipulating SVG images.</source>
          <target state="translated">SVG画像の作成と操作。</target>
        </trans-unit>
        <trans-unit id="5580b9bfda3f8709ae48d10484f73a6ff460c7ae" translate="yes" xml:space="preserve">
          <source>Creating and moving overlays.</source>
          <target state="translated">オーバーレイの作成と移動。</target>
        </trans-unit>
        <trans-unit id="a23b9312ab8ea1c200f01c35b1671f6b2e52abfb" translate="yes" xml:space="preserve">
          <source>Creating and using buffer objects.</source>
          <target state="translated">バッファオブジェクトの作成と使用</target>
        </trans-unit>
        <trans-unit id="ad3fe03db6db3953a7f03ba026dd0ac7834de8ad" translate="yes" xml:space="preserve">
          <source>Creating and working with abbrev tables.</source>
          <target state="translated">省略表の作成と作業。</target>
        </trans-unit>
        <trans-unit id="209381f6a863041e32e402014141fbb4b32628db" translate="yes" xml:space="preserve">
          <source>Creating list structure.</source>
          <target state="translated">リスト構造の作成。</target>
        </trans-unit>
        <trans-unit id="e9f7e6299daa93dee268e83f922c93f2fb95343e" translate="yes" xml:space="preserve">
          <source>Creating, Copying and Deleting Directories</source>
          <target state="translated">ディレクトリの作成、コピー、削除</target>
        </trans-unit>
        <trans-unit id="de7c5e51a86d1848649313c0fb579dd4cadcdf2a" translate="yes" xml:space="preserve">
          <source>Cropping is performed after scaling but before rotation.</source>
          <target state="translated">クロップはスケーリングの後に行われますが、回転の前に行われます。</target>
        </trans-unit>
        <trans-unit id="aa967da7b29ee7cb01b2dd9632adc2e81550d83d" translate="yes" xml:space="preserve">
          <source>Cross-references to specific Lisp primitives that have a special bearing on how functions work.</source>
          <target state="translated">関数がどのように動作するかに特別な関係を持つ特定のLispプリミティブへの相互参照。</target>
        </trans-unit>
        <trans-unit id="48968706e2b7937bd1eca5739cd23bd395e0bc4d" translate="yes" xml:space="preserve">
          <source>Cryptographic algorithms imported from GnuTLS.</source>
          <target state="translated">GnuTLSからインポートされた暗号アルゴリズム。</target>
        </trans-unit>
        <trans-unit id="c4cf579bb0e875b6a35dbb3791620653e8523bf7" translate="yes" xml:space="preserve">
          <source>Current index (within &lt;code&gt;bindat-raw&lt;/code&gt;) for unpacking or packing.</source>
          <target state="translated">開梱または梱包の現在のインデックス（ &lt;code&gt;bindat-raw&lt;/code&gt; 内）。</target>
        </trans-unit>
        <trans-unit id="3fe8e41f672d13705e32f9f2c1cb9a4c7c7f59d2" translate="yes" xml:space="preserve">
          <source>Currently this function always returns &lt;code&gt;nil&lt;/code&gt; on platforms other than MS-DOS, MS-Windows, Cygwin, and macOS. It does not detect case-insensitivity of mounted filesystems, such as Samba shares or NFS-mounted Windows volumes. On remote hosts, it assumes &lt;code&gt;t&lt;/code&gt; for the &amp;lsquo;</source>
          <target state="translated">現在、この関数は、MS-DOS、MS-Windows、Cygwin、およびmacOS以外のプラットフォームでは常に &lt;code&gt;nil&lt;/code&gt; を返します。Samba共有やNFSマウントされたWindowsボリュームなど、マウントされたファイルシステムの大文字と小文字を区別しないものは検出されません。リモートホストでは、 'に &lt;code&gt;t&lt;/code&gt; を想定しています。</target>
        </trans-unit>
        <trans-unit id="2a42d0e8ab77f37df230d1db17d31d8a1a52f967" translate="yes" xml:space="preserve">
          <source>Currently, all overlays take priority over text properties.</source>
          <target state="translated">現在、すべてのオーバーレイはテキストプロパティよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="dafc9de4ff7c070680e5b6e3bdaa9d265ab232ff" translate="yes" xml:space="preserve">
          <source>Currently, an Emacs Lisp closure object is represented by a list with the symbol &lt;code&gt;closure&lt;/code&gt; as the first element, a list representing the lexical environment as the second element, and the argument list and body forms as the remaining elements:</source>
          <target state="translated">現在、Emacs Lispクロージャオブジェクトは、最初の要素としてシンボル &lt;code&gt;closure&lt;/code&gt; 、2番目の要素として字句環境を表すリスト、残りの要素として引数リストと本体フォームを含むリストで表されます。</target>
        </trans-unit>
        <trans-unit id="cfbfcc573ee50e99e6dc9569b7be94b2909815b0" translate="yes" xml:space="preserve">
          <source>Currently, cons cells and strings can be allocated this way. This is implemented by C macros like &lt;code&gt;AUTO_CONS&lt;/code&gt; and &lt;code&gt;AUTO_STRING&lt;/code&gt; that define a named &lt;code&gt;Lisp_Object&lt;/code&gt; with block lifetime. These objects are not freed by the garbage collector; instead, they have automatic storage duration, i.e., they are allocated like local variables and are automatically freed at the end of execution of the C block that defined the object.</source>
          <target state="translated">現在、consセルと文字列はこの方法で割り当てることができます。これは、ブロックの有効期間を持つ名前 &lt;code&gt;Lisp_Object&lt;/code&gt; &lt;code&gt;AUTO_STRING&lt;/code&gt; を定義する &lt;code&gt;AUTO_CONS&lt;/code&gt; やAUTO_STRINGなどのCマクロによって実装されます。これらのオブジェクトは、ガベージコレクタによって解放されません。代わりに、自動保存期間があります。つまり、ローカル変数のように割り当てられ、オブジェクトを定義したCブロックの実行の最後に自動的に解放されます。</target>
        </trans-unit>
        <trans-unit id="3f843ff0b7c19358930979776eba2414b01ba368" translate="yes" xml:space="preserve">
          <source>Currently, thread switching will occur upon explicit request via &lt;code&gt;thread-yield&lt;/code&gt;, when waiting for keyboard input or for process output from asynchronous processes (e.g., during &lt;code&gt;accept-process-output&lt;/code&gt;), or during blocking operations relating to threads, such as mutex locking or &lt;code&gt;thread-join&lt;/code&gt;.</source>
          <target state="translated">現在、スレッドの切り替えは、thread &lt;code&gt;thread-yield&lt;/code&gt; を介した明示的な要求、キーボード入力または非同期プロセスからのプロセス出力の待機中（たとえば、 &lt;code&gt;accept-process-output&lt;/code&gt; 中）、またはミューテックスロックや &lt;code&gt;thread-join&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10d1c3df2fdc30bcf7106e9ff17d7a241172fdd0" translate="yes" xml:space="preserve">
          <source>Cursor Parameters</source>
          <target state="translated">カーソルパラメータ</target>
        </trans-unit>
        <trans-unit id="74deebbf11289efb48b26fdd227d5107697b03d7" translate="yes" xml:space="preserve">
          <source>Cursor arrow keys</source>
          <target state="translated">カーソルの矢印キー</target>
        </trans-unit>
        <trans-unit id="ed739cecfa0ebac41f34cb65b5e03769e7e4f689" translate="yes" xml:space="preserve">
          <source>Custom Format Strings</source>
          <target state="translated">カスタムフォーマット文字列</target>
        </trans-unit>
        <trans-unit id="e2446e02511ff322c94ba4520cc8e483f718f149" translate="yes" xml:space="preserve">
          <source>Custom Themes</source>
          <target state="translated">カスタムテーマ</target>
        </trans-unit>
        <trans-unit id="013dd3b33912fdf447dd50a19f3d1b829ec97c8b" translate="yes" xml:space="preserve">
          <source>Custom filter functions normally should use this marker in the same fashion. For an example of a filter function that uses &lt;code&gt;process-mark&lt;/code&gt;, see &lt;a href=&quot;filter-functions#Process-Filter-Example&quot;&gt;Process Filter Example&lt;/a&gt;.</source>
          <target state="translated">カスタムフィルター関数は通常、このマーカーを同じ方法で使用する必要があります。 &lt;code&gt;process-mark&lt;/code&gt; を使用するフィルター関数の例については、「&lt;a href=&quot;filter-functions#Process-Filter-Example&quot;&gt;プロセスフィルターの例&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="2d606c1a05fa86dad7f436ef50b7540789e88645" translate="yes" xml:space="preserve">
          <source>Custom group name to use in all generated &lt;code&gt;defcustom&lt;/code&gt; forms. Defaults to &lt;var&gt;mode&lt;/var&gt; without the possible trailing &amp;lsquo;</source>
          <target state="translated">生成されたすべての &lt;code&gt;defcustom&lt;/code&gt; フォームで使用するカスタムグループ名。デフォルトは、末尾がない &lt;var&gt;mode&lt;/var&gt; になります '</target>
        </trans-unit>
        <trans-unit id="55ad8d7e45af15be996aefbc85f6dd2f3fb1b75f" translate="yes" xml:space="preserve">
          <source>Custom printing prints this as &amp;lsquo;</source>
          <target state="translated">カスタム印刷はこれを 'として印刷します</target>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="bcc93eb9f29c14f18642692d3a4974d916477d3a" translate="yes" xml:space="preserve">
          <source>Customization Settings</source>
          <target state="translated">カスタマイズ設定</target>
        </trans-unit>
        <trans-unit id="04d44e90a5bfe15756c24a537c089f9b151e4253" translate="yes" xml:space="preserve">
          <source>Customization Types</source>
          <target state="translated">カスタマイズの種類</target>
        </trans-unit>
        <trans-unit id="66d09a049d3cd2402a0a63a3a5ae832789a40747" translate="yes" xml:space="preserve">
          <source>Customization items include customizable variables, which are defined with the &lt;code&gt;defcustom&lt;/code&gt; macro; customizable faces, which are defined with &lt;code&gt;defface&lt;/code&gt; (described separately in &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;); and &lt;em&gt;customization groups&lt;/em&gt;, defined with &lt;code&gt;defgroup&lt;/code&gt;, which act as containers for groups of related customization items.</source>
          <target state="translated">カスタマイズ項目には、 &lt;code&gt;defcustom&lt;/code&gt; マクロで定義されるカスタマイズ可能な変数が含まれます。で定義されているカスタマイズ可能な面、 &lt;code&gt;defface&lt;/code&gt; （に分けて説明&lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;顔の定義&lt;/a&gt;）。そして&lt;em&gt;カスタマイズグループ&lt;/em&gt;で定義され、 &lt;code&gt;defgroup&lt;/code&gt; 関連カスタマイズアイテムのグループのコンテナとして作用します。</target>
        </trans-unit>
        <trans-unit id="f158f616fc590fd5497d3370520813208f2e8cbb" translate="yes" xml:space="preserve">
          <source>Customization of printing.</source>
          <target state="translated">印刷のカスタマイズ。</target>
        </trans-unit>
        <trans-unit id="0273fbaa3f3273cec74c3c580d117dfcc15babaa" translate="yes" xml:space="preserve">
          <source>Customize indentation for different modes.</source>
          <target state="translated">さまざまなモードに合わせてインデントをカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="9133757b897bf4b85b7c0204f975f328f274f50f" translate="yes" xml:space="preserve">
          <source>Customizing Emacs startup processing.</source>
          <target state="translated">Emacsの起動処理をカスタマイズする</target>
        </trans-unit>
        <trans-unit id="e6e84e8d84de12cd99fa06937e9f09f8732419b1" translate="yes" xml:space="preserve">
          <source>Customizing Fringe Bitmaps</source>
          <target state="translated">フリンジ・ビットマップのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="3b8ff8e11e4fb1da766a852b99e97a70cd969f4b" translate="yes" xml:space="preserve">
          <source>Customizing Indentation</source>
          <target state="translated">インデントのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="8fe6c6e2a1eaec91a8a78c53785092508b54fd02" translate="yes" xml:space="preserve">
          <source>Customizing Search-Based Fontification</source>
          <target state="translated">検索ベースのフォント化をカスタマイズする</target>
        </trans-unit>
        <trans-unit id="c7625c5baf95752cd15eace670b96b0ef771c100" translate="yes" xml:space="preserve">
          <source>Customizing case conversion.</source>
          <target state="translated">ケース変換をカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="6167e1b2404393ec51f13b5e1cb943d05aaab259" translate="yes" xml:space="preserve">
          <source>Customizing indentation.</source>
          <target state="translated">インデントのカスタマイズ。</target>
        </trans-unit>
        <trans-unit id="b9b16757037fdf9726a988523e66d3419c81b9d8" translate="yes" xml:space="preserve">
          <source>Customizing search-based fontification.</source>
          <target state="translated">検索ベースのフォントのカスタマイズ。</target>
        </trans-unit>
        <trans-unit id="1e002765cb015d2040010276c67c92983535e2a7" translate="yes" xml:space="preserve">
          <source>Customizing the following option can be useful to tweak the behavior of &lt;code&gt;iconify-frame&lt;/code&gt; for child frames.</source>
          <target state="translated">次のオプションをカスタマイズすると、子フレームの &lt;code&gt;iconify-frame&lt;/code&gt; の動作を微調整するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="181cbd72ff07e869968695fdb944b543d5980f2c" translate="yes" xml:space="preserve">
          <source>Customizing the text that appears in the mode line.</source>
          <target state="translated">モードラインに表示されるテキストをカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="8d6c2f5daf19aa75f4e1b8ab69eacea59e924210" translate="yes" xml:space="preserve">
          <source>Cyclic Ordering of Windows</source>
          <target state="translated">Windowsの周期的な順序付け</target>
        </trans-unit>
        <trans-unit id="252a1026126dfb1fc5ecfb78a023c2c36117f67a" translate="yes" xml:space="preserve">
          <source>Cygwin, a POSIX layer on top of MS-Windows.</source>
          <target state="translated">Cygwin、MS-Windowsの上にあるPOSIXレイヤー。</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="4315dde2202a2604da2011e0d8a8b8e62ec6d78b" translate="yes" xml:space="preserve">
          <source>D-Bus error</source>
          <target state="translated">ディーバスエラー</target>
        </trans-unit>
        <trans-unit id="a9918c5ba1ee56f6347be64641450486f504c362" translate="yes" xml:space="preserve">
          <source>D-Bus integration in Emacs</source>
          <target state="translated">Emacs での D-Bus の統合</target>
        </trans-unit>
        <trans-unit id="4d017cb3dcf43d965d38a31c9ad97cefabc893fb" translate="yes" xml:space="preserve">
          <source>DEL</source>
          <target state="translated">DEL</target>
        </trans-unit>
        <trans-unit id="76931684f59ea532389570ad4583cbadad055aaf" translate="yes" xml:space="preserve">
          <source>DELDEL b RET</source>
          <target state="translated">DELDEL b RET</target>
        </trans-unit>
        <trans-unit id="92ed52dada39fb200ab2f2c36819ace9cc664813" translate="yes" xml:space="preserve">
          <source>DOC</source>
          <target state="translated">DOC</target>
        </trans-unit>
        <trans-unit id="61f6f421ef32670498c220ee8ee339df076a5ad9" translate="yes" xml:space="preserve">
          <source>DOM</source>
          <target state="translated">DOM</target>
        </trans-unit>
        <trans-unit id="30e504c829201f1e519376dfee2e0e399c82484c" translate="yes" xml:space="preserve">
          <source>DOWN</source>
          <target state="translated">DOWN</target>
        </trans-unit>
        <trans-unit id="4d48a05bb7b3bc05df54390709bac5516139342d" translate="yes" xml:space="preserve">
          <source>DRINK</source>
          <target state="translated">DRINK</target>
        </trans-unit>
        <trans-unit id="f0ca804396bbe9796461f738a0814988aa612f98" translate="yes" xml:space="preserve">
          <source>Darwin (macOS).</source>
          <target state="translated">ダーウィン(macOS)。</target>
        </trans-unit>
        <trans-unit id="1bf4f17f9700c1701af42f2e56868d9f6d09c4f8" translate="yes" xml:space="preserve">
          <source>Dashes sufficient to fill the remainder of the mode line.</source>
          <target state="translated">モード行の残りを埋めるのに十分なダッシュ。</target>
        </trans-unit>
        <trans-unit id="631198ff3ac261c2cbb21a5af8ea00d2496f294b" translate="yes" xml:space="preserve">
          <source>Data formats of buffers, windows, processes.</source>
          <target state="translated">バッファ、ウィンドウ、プロセスのデータフォーマット。</target>
        </trans-unit>
        <trans-unit id="50ae936aba35b46eaaa718954e267e219aeecaaf" translate="yes" xml:space="preserve">
          <source>Data that Edebug saves and restores.</source>
          <target state="translated">Edebugが保存・復元するデータ。</target>
        </trans-unit>
        <trans-unit id="4997e39a9624907d99a90da6a24d2384e58d08fd" translate="yes" xml:space="preserve">
          <source>Data types of objects in Emacs Lisp.</source>
          <target state="translated">Emacs Lispのオブジェクトのデータ型。</target>
        </trans-unit>
        <trans-unit id="b85bab2408f6dca03671a2bf847cad8603236cb1" translate="yes" xml:space="preserve">
          <source>Datagrams</source>
          <target state="translated">Datagrams</target>
        </trans-unit>
        <trans-unit id="2f0b899096c90841c481c3a5e4eb71228fb95299" translate="yes" xml:space="preserve">
          <source>Dealing With Compressed Data</source>
          <target state="translated">圧縮データへの対応</target>
        </trans-unit>
        <trans-unit id="9222d46ca1ead7a04a17a4901e8924b2e6389ad3" translate="yes" xml:space="preserve">
          <source>Dealing with compressed data.</source>
          <target state="translated">圧縮されたデータを扱う。</target>
        </trans-unit>
        <trans-unit id="4333709c02ad553298735787840db205447e4bf6" translate="yes" xml:space="preserve">
          <source>Debugger Commands</source>
          <target state="translated">デバッガコマンド</target>
        </trans-unit>
        <trans-unit id="c0a64f60f8166abad9109622cff56916eca00125" translate="yes" xml:space="preserve">
          <source>Debugger entered--Lisp error:</source>
          <target state="translated">デバッガに入りました。</target>
        </trans-unit>
        <trans-unit id="a9b76db0ab64fbc8945fc04a9db739acb3ce1d01" translate="yes" xml:space="preserve">
          <source>Debugger entered--beginning evaluation of function call form:</source>
          <target state="translated">デバッガに入りました--関数呼び出しフォームの評価を開始します。</target>
        </trans-unit>
        <trans-unit id="f073d56cad54541e4a8aa748d9077195459160e8" translate="yes" xml:space="preserve">
          <source>Debugger entered--entering a function:</source>
          <target state="translated">デバッガに入りました。</target>
        </trans-unit>
        <trans-unit id="bf5499780dc32f465a89033befb659618c7d1067" translate="yes" xml:space="preserve">
          <source>Debugger entered--returning value:</source>
          <target state="translated">デバッガに入りました。</target>
        </trans-unit>
        <trans-unit id="54f3a1482d8cc5b74544c48b6b83cbf61622d549" translate="yes" xml:space="preserve">
          <source>Debugger mode is derived from Backtrace mode, which is also used to show backtraces by Edebug and ERT. (see &lt;a href=&quot;edebug#Edebug&quot;&gt;Edebug&lt;/a&gt;, and &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/ert/index.html#Top&quot;&gt;the ERT manual&lt;/a&gt; in</source>
          <target state="translated">デバッガモードは、バックトレースモードから派生します。バックトレースモードは、EdebugおよびERTによるバックトレースの表示にも使用されます。（&lt;a href=&quot;edebug#Edebug&quot;&gt;Edebug&lt;/a&gt;、および&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/ert/index.html#Top&quot;&gt;のERTマニュアル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="9363ad24df1c66d66891ca4fe683ed560a885b51" translate="yes" xml:space="preserve">
          <source>Debugging Infinite Loops</source>
          <target state="translated">無限ループのデバッグ</target>
        </trans-unit>
        <trans-unit id="6a98ee1bca9b4b0eed13ef2f2fa4088a504a99c8" translate="yes" xml:space="preserve">
          <source>Debugging Invalid Lisp Syntax</source>
          <target state="translated">無効な Lisp 構文のデバッグ</target>
        </trans-unit>
        <trans-unit id="726e1aaf22c1b68abbd6517f07544530bcb01765" translate="yes" xml:space="preserve">
          <source>Debugging Lisp Programs</source>
          <target state="translated">Lisp プログラムのデバッグ</target>
        </trans-unit>
        <trans-unit id="bfe30e1515e21c7d814c61937ff5dad81efd561e" translate="yes" xml:space="preserve">
          <source>Deciding what is the right indentation is controlled in Emacs by &lt;code&gt;indent-line-function&lt;/code&gt; (see &lt;a href=&quot;mode_002dspecific-indent#Mode_002dSpecific-Indent&quot;&gt;Mode-Specific Indent&lt;/a&gt;). For some modes, the &lt;em&gt;right&lt;/em&gt; indentation cannot be known reliably, typically because indentation is significant so several indentations are valid but with different meanings. In that case, the mode should set &lt;code&gt;electric-indent-inhibit&lt;/code&gt; to make sure the line is not constantly re-indented against the user&amp;rsquo;s wishes.</source>
          <target state="translated">正しいインデントの決定は、Emacsでは &lt;code&gt;indent-line-function&lt;/code&gt; によって制御されます（&lt;a href=&quot;mode_002dspecific-indent#Mode_002dSpecific-Indent&quot;&gt;モード固有のインデントを&lt;/a&gt;参照）。一部のモードでは、&lt;em&gt;正しい&lt;/em&gt;インデントを確実に知ることができません。通常、インデントが重要であるため、いくつかのインデントは有効ですが、意味が異なります。その場合、モードは、ユーザーの希望に反して回線が常に再インデントされないように、 &lt;code&gt;electric-indent-inhibit&lt;/code&gt; を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="e4c3a2d0cc24a4535ef91791064ffe989cbd382a" translate="yes" xml:space="preserve">
          <source>Decimal</source>
          <target state="translated">Decimal</target>
        </trans-unit>
        <trans-unit id="616d764d5561637afed958f56d1bfbce22fd65c5" translate="yes" xml:space="preserve">
          <source>Declare &lt;var&gt;expander&lt;/var&gt; to be the function to handle calls to the macro (or function) as a generalized variable, similarly to &lt;code&gt;gv-define-expander&lt;/code&gt;. &lt;var&gt;expander&lt;/var&gt; can be a symbol or it can be of the form &lt;code&gt;(lambda
(&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; in which case that function will additionally have access to the macro (or function)&amp;rsquo;s arguments.</source>
          <target state="translated">&lt;code&gt;gv-define-expander&lt;/code&gt; と同様に、 &lt;var&gt;expander&lt;/var&gt; をマクロ（または関数）への呼び出しを一般化された変数として処理する関数として宣言します。 &lt;var&gt;expander&lt;/var&gt; はシンボルにすることも、 &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;arg&lt;/var&gt; ） &lt;var&gt;body&lt;/var&gt; ）の形式にすることもできます。その場合、その関数はさらにマクロ（または関数）の引数にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="6c64b4ea540b1501e4fff4ccf3280eeb2512b3e5" translate="yes" xml:space="preserve">
          <source>Declare &lt;var&gt;group&lt;/var&gt; as a customization group containing &lt;var&gt;members&lt;/var&gt;. Do not quote the symbol &lt;var&gt;group&lt;/var&gt;. The argument &lt;var&gt;doc&lt;/var&gt; specifies the documentation string for the group.</source>
          <target state="translated">&lt;var&gt;members&lt;/var&gt; を含むカスタマイズ &lt;var&gt;group&lt;/var&gt; としてグループを宣言します。記号 &lt;var&gt;group&lt;/var&gt; 引用しないでください。引数 &lt;var&gt;doc&lt;/var&gt; は、グループのドキュメント文字列を指定します。</target>
        </trans-unit>
        <trans-unit id="93dc0980891df2b822f1fd96127880a3e5a2554a" translate="yes" xml:space="preserve">
          <source>Declare &lt;var&gt;setter&lt;/var&gt; to be the function to handle calls to the macro (or function) as a generalized variable. &lt;var&gt;setter&lt;/var&gt; can be a symbol in which case it will be passed to &lt;code&gt;gv-define-simple-setter&lt;/code&gt;, or it can be of the form &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; in which case that function will additionally have access to the macro (or function)&amp;rsquo;s arguments and it will be passed to &lt;code&gt;gv-define-setter&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;setter&lt;/var&gt; を、マクロ（または関数）への呼び出しを一般化変数として処理する関数として宣言します。 &lt;var&gt;setter&lt;/var&gt; はシンボルにすることができ、その場合は &lt;code&gt;gv-define-simple-setter&lt;/code&gt; に渡されます。または、 &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; の形式にすることもできます。その場合、その関数はさらにマクロ（または関数）にアクセスできます。 ）の引数とそれは &lt;code&gt;gv-define-setter&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="3e8682b3ce4252f53e13c377b15222e1d2639ce4" translate="yes" xml:space="preserve">
          <source>Declares that the function does not examine any values except its arguments, and has no effects except the return value. This corresponds to &lt;code&gt;__attribute__&amp;nbsp;((__const__))&lt;/code&gt; attribute of GCC.</source>
          <target state="translated">関数が引数以外の値を調べず、戻り値以外の効果がないことを宣言します。これは、GCCの &lt;code&gt;__attribute__&amp;nbsp;((__const__))&lt;/code&gt; 属性に対応します。</target>
        </trans-unit>
        <trans-unit id="b336e92bf3460862343639ef63e8754dc39821fa" translate="yes" xml:space="preserve">
          <source>Declares the C function as one that never returns. This corresponds to the C11 keyword &lt;code&gt;_Noreturn&lt;/code&gt; and to &lt;code&gt;__attribute__&amp;nbsp;((__noreturn__))&lt;/code&gt; attribute of GCC (see &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt; in</source>
          <target state="translated">C関数を決して戻らない関数として宣言します。これは、GCCのC11キーワード &lt;code&gt;_Noreturn&lt;/code&gt; および &lt;code&gt;__attribute__&amp;nbsp;((__noreturn__))&lt;/code&gt; 属性に対応します（の&lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html#Function-Attributes&quot;&gt;関数属性&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="4b609e829b1f39ffc7abb135201be1d26a824a42" translate="yes" xml:space="preserve">
          <source>Declaring Functions Obsolete</source>
          <target state="translated">関数の廃止宣言</target>
        </trans-unit>
        <trans-unit id="a375d846fc99b76d44be77afcfaff8bf8fd721a2" translate="yes" xml:space="preserve">
          <source>Declaring functions obsolete.</source>
          <target state="translated">機能の廃止を宣言します。</target>
        </trans-unit>
        <trans-unit id="fd886d70ed04c5c9788bb139145ee56af83bb0fe" translate="yes" xml:space="preserve">
          <source>Declaring user options.</source>
          <target state="translated">ユーザーオプションの宣言</target>
        </trans-unit>
        <trans-unit id="4d455d362355b88934a8cb03f2e247e4d1f10901" translate="yes" xml:space="preserve">
          <source>Decoding Process Output</source>
          <target state="translated">復号化プロセス出力</target>
        </trans-unit>
        <trans-unit id="b2b02f50b54ccd59dc2cf7dfe6610c6847df18aa" translate="yes" xml:space="preserve">
          <source>Decomposing and expanding file names.</source>
          <target state="translated">ファイル名を分解して展開します。</target>
        </trans-unit>
        <trans-unit id="e2e79c379d627abc7011d97113a7c147d232dd53" translate="yes" xml:space="preserve">
          <source>Decrease the image size (&lt;code&gt;image-increase-size&lt;/code&gt;). A prefix value of &amp;lsquo;</source>
          <target state="translated">画像サイズを小さくします（ &lt;code&gt;image-increase-size&lt;/code&gt; ）。'のプレフィックス値</target>
        </trans-unit>
        <trans-unit id="1cd4322e0025edba9da289684f149b4c88fb0346" translate="yes" xml:space="preserve">
          <source>Dedicated Windows</source>
          <target state="translated">専用Windows</target>
        </trans-unit>
        <trans-unit id="5a483a6aba48b5541acb455b768e2987adbced73" translate="yes" xml:space="preserve">
          <source>Default Coding Systems</source>
          <target state="translated">デフォルトのコーディングシステム</target>
        </trans-unit>
        <trans-unit id="e3eebbc3d88852fe95fdf7f8a075da219b54f51a" translate="yes" xml:space="preserve">
          <source>Deferred JSONRPC requests</source>
          <target state="translated">遅延JSONRPCリクエスト</target>
        </trans-unit>
        <trans-unit id="cc7ec807d125f40ab7dbc746bf04f29da7b789cd" translate="yes" xml:space="preserve">
          <source>Deferred and Lazy Evaluation</source>
          <target state="translated">繰り延べと怠惰な評価</target>
        </trans-unit>
        <trans-unit id="2cd8ae6b3014d472223013f1bed99c90d62f589c" translate="yes" xml:space="preserve">
          <source>Deferred and lazy evaluation of forms.</source>
          <target state="translated">帳票の評価を先延ばしにして、怠惰な評価をする。</target>
        </trans-unit>
        <trans-unit id="92d4c684ce53e874b5d2de26c404f0fab45054c3" translate="yes" xml:space="preserve">
          <source>Deferring a warning until the end of a command.</source>
          <target state="translated">警告をコマンドの最後まで延期します。</target>
        </trans-unit>
        <trans-unit id="f26ce47f3889f4005fbb26c94472b19840db383f" translate="yes" xml:space="preserve">
          <source>Define &lt;var&gt;name&lt;/var&gt; globally in all subsequent calls to &lt;code&gt;rx&lt;/code&gt; and &lt;code&gt;rx-to-string&lt;/code&gt;. If &lt;var&gt;arglist&lt;/var&gt; is absent, then &lt;var&gt;name&lt;/var&gt; is defined as a plain symbol to be replaced with &lt;var&gt;rx-form&lt;/var&gt;. Example:</source>
          <target state="translated">&lt;code&gt;rx&lt;/code&gt; および &lt;code&gt;rx-to-string&lt;/code&gt; への後続のすべての呼び出しで &lt;var&gt;name&lt;/var&gt; グローバルに定義します。場合 &lt;var&gt;arglist&lt;/var&gt; 存在しない場合、 &lt;var&gt;name&lt;/var&gt; 普通の記号を用いて交換するように定義される &lt;var&gt;rx-form&lt;/var&gt; 。例：</target>
        </trans-unit>
        <trans-unit id="6fad15fa907f8937eb3d4b5845880363fd13b197" translate="yes" xml:space="preserve">
          <source>Define a binding in &lt;var&gt;map&lt;/var&gt; for &lt;var&gt;key&lt;/var&gt;, with value &lt;var&gt;binding&lt;/var&gt;, just like &lt;code&gt;define-key&lt;/code&gt;, but position the binding in &lt;var&gt;map&lt;/var&gt; after the binding for the event &lt;var&gt;after&lt;/var&gt;. The argument &lt;var&gt;key&lt;/var&gt; should be of length one&amp;mdash;a vector or string with just one element. But &lt;var&gt;after&lt;/var&gt; should be a single event type&amp;mdash;a symbol or a character, not a sequence. The new binding goes after the binding for &lt;var&gt;after&lt;/var&gt;. If &lt;var&gt;after&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; or is omitted, then the new binding goes last, at the end of the keymap. However, new bindings are added before any inherited keymap.</source>
          <target state="translated">結合定義 &lt;var&gt;map&lt;/var&gt; 用 &lt;var&gt;key&lt;/var&gt; 値はで、 &lt;var&gt;binding&lt;/var&gt; と同じように、 &lt;code&gt;define-key&lt;/code&gt; が、位置がに結合 &lt;var&gt;map&lt;/var&gt; イベントのために結合した後 &lt;var&gt;after&lt;/var&gt; 。引数 &lt;var&gt;key&lt;/var&gt; の長さは1、つまり要素が1つだけのベクトルまたは文字列である必要があります。ただし、 &lt;var&gt;after&lt;/var&gt; は単一のイベントタイプ（シーケンスではなくシンボルまたは文字）である必要があります。新しいバインディングは、afterのバインディングの &lt;var&gt;after&lt;/var&gt; ます。場合は &lt;var&gt;after&lt;/var&gt; ある &lt;code&gt;t&lt;/code&gt; または省略され、その後、新しいバインディングはキーマップの最後に、最後になります。ただし、継承されたキーマップの前に新しいバインディングが追加されます。</target>
        </trans-unit>
        <trans-unit id="4b1d82600c3cc9aee41275ec0422f841061671f0" translate="yes" xml:space="preserve">
          <source>Define a button type called &lt;var&gt;name&lt;/var&gt; (a symbol). The remaining arguments form a sequence of &lt;var&gt;property value&lt;/var&gt; pairs, specifying default property values for buttons with this type (a button&amp;rsquo;s type may be set by giving it a &lt;code&gt;type&lt;/code&gt; property when creating the button, using the &lt;code&gt;:type&lt;/code&gt; keyword argument).</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; （シンボル）と呼ばれるボタンタイプを定義します。残りの引数は、 &lt;var&gt;property value&lt;/var&gt; ペアのシーケンスを形成し、このタイプのボタンのデフォルトのプロパティ値を指定します（ボタンのタイプは、ボタンの作成時に &lt;code&gt;:type&lt;/code&gt; キーワード引数を使用して &lt;code&gt;type&lt;/code&gt; プロパティを指定することで設定できます）。</target>
        </trans-unit>
        <trans-unit id="40167d6bc75d81da324841a63bc228382c899eda" translate="yes" xml:space="preserve">
          <source>Define a command, called the &lt;em&gt;mode command&lt;/em&gt;, whose name is the same as the mode variable. Its job is to set the value of the mode variable, plus anything else that needs to be done to actually enable or disable the mode&amp;rsquo;s features.</source>
          <target state="translated">&lt;em&gt;modeコマンド&lt;/em&gt;と呼ばれるコマンドを定義します。その名前はmode変数と同じです。その仕事は、モード変数の値に加えて、モードの機能を実際に有効または無効にするために実行する必要のあるその他すべての値を設定することです。</target>
        </trans-unit>
        <trans-unit id="5b3911ba258c45d951eb09ce327d6327600f97cd" translate="yes" xml:space="preserve">
          <source>Define a function &lt;var&gt;name&lt;/var&gt; by providing code that does its inlining, as a compiler macro. The function will accept the argument list &lt;var&gt;args&lt;/var&gt; and will have the specified &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">コンパイラマクロとして、インライン化を行うコードを提供することにより、関数 &lt;var&gt;name&lt;/var&gt; 定義します。この関数は引数リスト &lt;var&gt;args&lt;/var&gt; を受け入れ、指定された &lt;var&gt;body&lt;/var&gt; を持ちます。</target>
        </trans-unit>
        <trans-unit id="06f0c3b54279790f6e4e6152945d1960f89d6232" translate="yes" xml:space="preserve">
          <source>Define a major mode command whose name ends in &amp;lsquo;</source>
          <target state="translated">名前が 'で終わるメジャーモードコマンドを定義します</target>
        </trans-unit>
        <trans-unit id="e16a251b7cb568a2f64599e49c10e2623b9cdf87" translate="yes" xml:space="preserve">
          <source>Define a new kind of pattern for &lt;code&gt;pcase&lt;/code&gt;, to be invoked as &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;&lt;var&gt;actual-args&lt;/var&gt;)&lt;/code&gt;. The &lt;code&gt;pcase&lt;/code&gt; macro expands this into a function call that evaluates &lt;var&gt;body&lt;/var&gt;, whose job it is to rewrite the invoked pattern into some other pattern, in an environment where &lt;var&gt;args&lt;/var&gt; are bound to &lt;var&gt;actual-args&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;&lt;var&gt;actual-args&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;name&lt;/var&gt; &lt;var&gt;actual-args&lt;/var&gt; ）として呼び出される &lt;code&gt;pcase&lt;/code&gt; の新しい種類のパターンを定義します。 &lt;code&gt;pcase&lt;/code&gt; のマクロは、評価関数呼び出しにこれを展開 &lt;var&gt;body&lt;/var&gt; ジョブそれは環境で、他のいくつかのパターンに呼び出されたパターンを書き換えることで、 &lt;var&gt;args&lt;/var&gt; にバインドされている &lt;var&gt;actual-args&lt;/var&gt; 。&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="c7a3a63ede7ee673b32fdb44c5efdf420fddea4b" translate="yes" xml:space="preserve">
          <source>Define a variable whose name ends in &amp;lsquo;</source>
          <target state="translated">名前が 'で終わる変数を定義します</target>
        </trans-unit>
        <trans-unit id="01ca4f537e5b6fb350a73139e92b5826fbc1da1d" translate="yes" xml:space="preserve">
          <source>Define new kinds of patterns.</source>
          <target state="translated">新しい種類のパターンを定義します。</target>
        </trans-unit>
        <trans-unit id="1574d39ddc8e97a226a1d8cb06e78fe895d7df3d" translate="yes" xml:space="preserve">
          <source>Define the new command &lt;var&gt;command&lt;/var&gt;, a symbol.</source>
          <target state="translated">新しいコマンド &lt;var&gt;command&lt;/var&gt; 、シンボルを定義します。</target>
        </trans-unit>
        <trans-unit id="d947a410a3371bc8d9bcbdae25bcb129e5f909f2" translate="yes" xml:space="preserve">
          <source>Defining Abbrevs</source>
          <target state="translated">略語の定義</target>
        </trans-unit>
        <trans-unit id="fb0f647aaf1c6151a3d8cc3a0531968f69b015f7" translate="yes" xml:space="preserve">
          <source>Defining Clickable Text</source>
          <target state="translated">クリック可能なテキストの定義</target>
        </trans-unit>
        <trans-unit id="0661364f5b88cee9a3e7cd671d05954e0b7e065d" translate="yes" xml:space="preserve">
          <source>Defining Commands</source>
          <target state="translated">コマンドの定義</target>
        </trans-unit>
        <trans-unit id="7c35f8d83deab0145be4d48cda7ab6061b2c0234" translate="yes" xml:space="preserve">
          <source>Defining Customization Groups</source>
          <target state="translated">カスタマイズグループの定義</target>
        </trans-unit>
        <trans-unit id="232e9aae78dd4b2f5ac2885b864565c9a87aaf08" translate="yes" xml:space="preserve">
          <source>Defining Customization Variables</source>
          <target state="translated">カスタマイズ変数の定義</target>
        </trans-unit>
        <trans-unit id="eeaff52266db8975b3467e8a2a23c862ea813694" translate="yes" xml:space="preserve">
          <source>Defining Derived Modes</source>
          <target state="translated">派生モードの定義</target>
        </trans-unit>
        <trans-unit id="7bff63f6c40a05f614743732fca3a8cd3f3ec60a" translate="yes" xml:space="preserve">
          <source>Defining Faces</source>
          <target state="translated">顔の定義</target>
        </trans-unit>
        <trans-unit id="292f60f275382399afa74120ffd27ed50a5e4820" translate="yes" xml:space="preserve">
          <source>Defining Functions</source>
          <target state="translated">機能の定義</target>
        </trans-unit>
        <trans-unit id="bc0e5190c63d7638fea7ab22527e8a9bcd6b61d6" translate="yes" xml:space="preserve">
          <source>Defining Global Variables</source>
          <target state="translated">グローバル変数の定義</target>
        </trans-unit>
        <trans-unit id="03b551717b801c85b3f4c6202703e2b7a5f1f132" translate="yes" xml:space="preserve">
          <source>Defining Hash Comparisons</source>
          <target state="translated">ハッシュ比較の定義</target>
        </trans-unit>
        <trans-unit id="000c827897d0c5b6e4b0eef1c26dfd57794fc942" translate="yes" xml:space="preserve">
          <source>Defining Images</source>
          <target state="translated">画像の定義</target>
        </trans-unit>
        <trans-unit id="c2a9a9049467f076ecc786d8c892846d3e4bdabb" translate="yes" xml:space="preserve">
          <source>Defining Macros</source>
          <target state="translated">マクロの定義</target>
        </trans-unit>
        <trans-unit id="e5bf67f2d84551bb8f01ded936cad84409218c3c" translate="yes" xml:space="preserve">
          <source>Defining Menus</source>
          <target state="translated">メニューの定義</target>
        </trans-unit>
        <trans-unit id="59a219c45d072199c8cf96321b2e41f7b334385b" translate="yes" xml:space="preserve">
          <source>Defining Minor Modes</source>
          <target state="translated">マイナーモードの定義</target>
        </trans-unit>
        <trans-unit id="b15f26fbaadf18dcb334990b69565e7609240b4c" translate="yes" xml:space="preserve">
          <source>Defining New Types</source>
          <target state="translated">新しいタイプの定義</target>
        </trans-unit>
        <trans-unit id="0f7b06b40ef169c929f2853c1200f8f3430628ef" translate="yes" xml:space="preserve">
          <source>Defining Symbols</source>
          <target state="translated">シンボルの定義</target>
        </trans-unit>
        <trans-unit id="2f418b59c5b1b8f56416efc3410b0257fca96303" translate="yes" xml:space="preserve">
          <source>Defining Tokens</source>
          <target state="translated">トークンの定義</target>
        </trans-unit>
        <trans-unit id="3abc8dcee838071e573dcb4a9454e62238167b14" translate="yes" xml:space="preserve">
          <source>Defining a key with a keymap as its definition.</source>
          <target state="translated">キーマップを定義としてキーを定義します。</target>
        </trans-unit>
        <trans-unit id="0901120335c1f000be7be9cecb5d0a1f67da5d4a" translate="yes" xml:space="preserve">
          <source>Defining a menu as a keymap.</source>
          <target state="translated">メニューをキーマップとして定義します。</target>
        </trans-unit>
        <trans-unit id="26d8feb75af6af38c5e291bf31271aaede12f926" translate="yes" xml:space="preserve">
          <source>Defining a new major mode based on another major mode.</source>
          <target state="translated">別のメジャーモードに基づいて新しいメジャーモードを定義します。</target>
        </trans-unit>
        <trans-unit id="abdd847a979898a997ef153e5a841805a67b7bb3" translate="yes" xml:space="preserve">
          <source>Defining a simple major mode that supports comment syntax and Font Lock mode.</source>
          <target state="translated">コメント構文とフォントロックモードをサポートするシンプルなメジャーモードを定義します。</target>
        </trans-unit>
        <trans-unit id="1e83a8d776e89dbaa702f43a2a87e0bcbcc39b77" translate="yes" xml:space="preserve">
          <source>Defining and Using Fields</source>
          <target state="translated">フィールドの定義と使用</target>
        </trans-unit>
        <trans-unit id="2c3ae13ba1844e079bcb228d7b919681c8fae1ae" translate="yes" xml:space="preserve">
          <source>Defining colors for text terminals.</source>
          <target state="translated">テキスト端末の色を定義します。</target>
        </trans-unit>
        <trans-unit id="73bb06852e2bf62b0d26902251c5dac71e5909b8" translate="yes" xml:space="preserve">
          <source>Defining common properties for classes of buttons.</source>
          <target state="translated">ボタンのクラスに共通のプロパティを定義します。</target>
        </trans-unit>
        <trans-unit id="73d463c28d160c1407c4e5c8e8ef936cb007fee1" translate="yes" xml:space="preserve">
          <source>Defining functions is only half the battle. Functions don&amp;rsquo;t do anything until you &lt;em&gt;call&lt;/em&gt; them, i.e., tell them to run. Calling a function is also known as &lt;em&gt;invocation&lt;/em&gt;.</source>
          <target state="translated">関数の定義は、戦いの半分にすぎません。関数は、&lt;em&gt;呼び出す&lt;/em&gt;まで、つまり実行するように指示するまで、何もしません。関数の&lt;em&gt;呼び出し&lt;/em&gt;は、&lt;em&gt;呼び出し&lt;/em&gt;とも呼ばれ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="317d7bd642eb54915fafa1af942eb40ec6668e2f" translate="yes" xml:space="preserve">
          <source>Defining major and minor modes.</source>
          <target state="translated">メジャーモードとマイナーモードの定義</target>
        </trans-unit>
        <trans-unit id="ff9e6e8dd045f31bfac0b50386d6eacde1449ac5" translate="yes" xml:space="preserve">
          <source>Defining major modes.</source>
          <target state="translated">主要なモードの定義</target>
        </trans-unit>
        <trans-unit id="32c208be973e8ee73a4d6c479be6f77dbbea7599" translate="yes" xml:space="preserve">
          <source>Defining minor modes.</source>
          <target state="translated">マイナーモードの定義</target>
        </trans-unit>
        <trans-unit id="053f76a94a47848425eceba36ae62313c8e1893a" translate="yes" xml:space="preserve">
          <source>Defining new &lt;code&gt;setf&lt;/code&gt; forms.</source>
          <target state="translated">新しい &lt;code&gt;setf&lt;/code&gt; フォームの定義。</target>
        </trans-unit>
        <trans-unit id="8bb8263cb8ca1234c412facf2dd284a3ddfe6b94" translate="yes" xml:space="preserve">
          <source>Defining new comparison methods.</source>
          <target state="translated">新しい比較方法を定義します。</target>
        </trans-unit>
        <trans-unit id="6d124bbc995169c620bc969c66d38fb19b27dc20" translate="yes" xml:space="preserve">
          <source>Defining new rx forms</source>
          <target state="translated">新しい rx フォームの定義</target>
        </trans-unit>
        <trans-unit id="240c94f74ab9403d09f880074823add14683f43f" translate="yes" xml:space="preserve">
          <source>Defining new setf forms</source>
          <target state="translated">新しい setf フォームの定義</target>
        </trans-unit>
        <trans-unit id="e74b5b45842a0eaf14e722af5da9ce5867a48e56" translate="yes" xml:space="preserve">
          <source>Defining the C function is not enough to make a Lisp primitive available; you must also create the Lisp symbol for the primitive and store a suitable subr object in its function cell. The code looks like this:</source>
          <target state="translated">C関数を定義するだけではLispプリミティブを利用できるようにはなりません。プリミティブ用のLispシンボルを作成し、その関数セルに適切なsubrオブジェクトを格納する必要があります。コードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="42a5940f21524c5d855701d113ae535587f2a106" translate="yes" xml:space="preserve">
          <source>Defining the Grammar of a Language</source>
          <target state="translated">言語の文法を定義する</target>
        </trans-unit>
        <trans-unit id="06b1845ee9ca1e4314da4b6aa865902c7731874a" translate="yes" xml:space="preserve">
          <source>Defining the bindings from keys to commands.</source>
          <target state="translated">キーからコマンドへのバインディングを定義します。</target>
        </trans-unit>
        <trans-unit id="f9bc3c657d25c81feff59acde906446fdef4d273" translate="yes" xml:space="preserve">
          <source>Defining the grammar of a language.</source>
          <target state="translated">言語の文法を定義する。</target>
        </trans-unit>
        <trans-unit id="42549b967cdc3393d086adbccdc54df809c825f7" translate="yes" xml:space="preserve">
          <source>Defining tokens.</source>
          <target state="translated">トークンの定義。</target>
        </trans-unit>
        <trans-unit id="ef3448568dd44c9a23e447d204244b2e72e70d35" translate="yes" xml:space="preserve">
          <source>Definitions are only ever expanded in calls to &lt;code&gt;rx&lt;/code&gt; or &lt;code&gt;rx-to-string&lt;/code&gt;, not merely by their presence in definition macros. This means that the order of definitions doesn&amp;rsquo;t matter, even when they refer to each other, and that syntax errors only show up when they are used, not when they are defined.</source>
          <target state="translated">定義は、定義マクロに存在するだけでなく、 &lt;code&gt;rx&lt;/code&gt; または &lt;code&gt;rx-to-string&lt;/code&gt; の呼び出しでのみ拡張されます。つまり、定義の順序は、相互に参照している場合でも重要ではなく、構文エラーは、定義されているときではなく、使用されているときにのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="af5436e69b505fd2783852e4aefc09a338f20d4b" translate="yes" xml:space="preserve">
          <source>Definitions cannot refer to themselves recursively, directly or indirectly. If you find yourself needing this, you want a parser, not a regular expression.</source>
          <target state="translated">定義は、直接または間接的に再帰的に自分自身を参照することはできません。これが必要な場合は、正規表現ではなくパーサが必要になります。</target>
        </trans-unit>
        <trans-unit id="1468ec6f048a54dbe9848cc6b4971f03da666f36" translate="yes" xml:space="preserve">
          <source>Definitions for function or function-like objects:</source>
          <target state="translated">機能または機能に類似したオブジェクトの定義。</target>
        </trans-unit>
        <trans-unit id="39ff38f9a26ba412c27b7fa09a0ae2e4b1c285c3" translate="yes" xml:space="preserve">
          <source>Definitions for major or minor modes:</source>
          <target state="translated">メジャーモード、マイナーモードの定義</target>
        </trans-unit>
        <trans-unit id="8539590274bfed06ceaa124d0697f7c508ef6b3d" translate="yes" xml:space="preserve">
          <source>Delayed Warnings</source>
          <target state="translated">遅延警告</target>
        </trans-unit>
        <trans-unit id="33506acc2b6e3057377ee7ce9aa2112679ab203e" translate="yes" xml:space="preserve">
          <source>Delete the evaluation list group that point is in (&lt;code&gt;edebug-delete-eval-item&lt;/code&gt;).</source>
          <target state="translated">ポイントが含まれる評価リストグループを &lt;code&gt;edebug-delete-eval-item&lt;/code&gt; します（edebug-delete-eval-item）。</target>
        </trans-unit>
        <trans-unit id="2c209d5ef4d9d2316618eb4350c4aaeaf66d3855" translate="yes" xml:space="preserve">
          <source>Delete the text being considered, then enter a recursive edit to replace it.</source>
          <target state="translated">検討中のテキストを削除してから、再帰的な編集を入力して置き換えます。</target>
        </trans-unit>
        <trans-unit id="328ae7db6f0cdc1f73590ba17d06208643351e45" translate="yes" xml:space="preserve">
          <source>Delete trailing whitespace in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; で定義された領域の末尾の空白を削除します。</target>
        </trans-unit>
        <trans-unit id="b301b11eca946d28ce0a0e1c3965ac29e3909864" translate="yes" xml:space="preserve">
          <source>Deleting &lt;var&gt;W4&lt;/var&gt; will now give its entire space to &lt;var&gt;W2&lt;/var&gt;, including the space earlier stolen from &lt;var&gt;W3&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;W4&lt;/var&gt; を削除すると、以前に &lt;var&gt;W3&lt;/var&gt; から盗まれたスペースを含め、そのスペース全体が &lt;var&gt;W2&lt;/var&gt; に割り当てられます。</target>
        </trans-unit>
        <trans-unit id="78a7f9b3c271968026af0d83330e2d766542b71f" translate="yes" xml:space="preserve">
          <source>Deleting &lt;var&gt;W5&lt;/var&gt; in this configuration normally causes the deletion of &lt;var&gt;W3&lt;/var&gt; and &lt;var&gt;W4&lt;/var&gt;. The remaining live windows &lt;var&gt;W2&lt;/var&gt;, &lt;var&gt;W6&lt;/var&gt; and &lt;var&gt;W7&lt;/var&gt; are recombined to form a new horizontal combination with parent &lt;var&gt;W1&lt;/var&gt;.</source>
          <target state="translated">この構成で &lt;var&gt;W5&lt;/var&gt; を削除すると、通常、 &lt;var&gt;W3&lt;/var&gt; と &lt;var&gt;W4&lt;/var&gt; が削除されます。残りのライブウィンドウ &lt;var&gt;W2&lt;/var&gt; 、 &lt;var&gt;W6&lt;/var&gt; 、および &lt;var&gt;W7&lt;/var&gt; は再結合され、親 &lt;var&gt;W1&lt;/var&gt; との新しい水平方向の組み合わせを形成します。</target>
        </trans-unit>
        <trans-unit id="c8eccf74b5945265cce74f8809394c77a0d31816" translate="yes" xml:space="preserve">
          <source>Deleting Frames</source>
          <target state="translated">フレームの削除</target>
        </trans-unit>
        <trans-unit id="99dcf64770c9acd686156d3b51eeda7dde2d6fd1" translate="yes" xml:space="preserve">
          <source>Deleting Processes</source>
          <target state="translated">削除プロセス</target>
        </trans-unit>
        <trans-unit id="5feae627d15073e8528a3710a456813ffe57f315" translate="yes" xml:space="preserve">
          <source>Deleting Text</source>
          <target state="translated">テキストの削除</target>
        </trans-unit>
        <trans-unit id="1f3a4086749ac4842b2c9324dbd9ad8aafdb0f44" translate="yes" xml:space="preserve">
          <source>Deleting Windows</source>
          <target state="translated">Windowsの削除</target>
        </trans-unit>
        <trans-unit id="a9028f6761bbea4bdc8df0b6147be4b6f7a80b11" translate="yes" xml:space="preserve">
          <source>Deleting any of the live windows &lt;var&gt;W2&lt;/var&gt;, &lt;var&gt;W3&lt;/var&gt; or &lt;var&gt;W4&lt;/var&gt; will distribute its space proportionally among the two remaining live windows.</source>
          <target state="translated">ライブウィンドウ &lt;var&gt;W2&lt;/var&gt; 、 &lt;var&gt;W3&lt;/var&gt; 、または &lt;var&gt;W4&lt;/var&gt; のいずれかを削除すると、残りの2つのライブウィンドウに比例してスペースが分散されます。</target>
        </trans-unit>
        <trans-unit id="f83b450eb4436635bf01fc73e0760925d5090f53" translate="yes" xml:space="preserve">
          <source>Deleting text around a marker&amp;rsquo;s position leaves the marker between the characters immediately before and after the deleted text. Inserting text at the position of a marker normally leaves the marker either in front of or after the new text, depending on the marker&amp;rsquo;s &lt;em&gt;insertion type&lt;/em&gt; (see &lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;Marker Insertion Types&lt;/a&gt;)&amp;mdash;unless the insertion is done with &lt;code&gt;insert-before-markers&lt;/code&gt; (see &lt;a href=&quot;insertion#Insertion&quot;&gt;Insertion&lt;/a&gt;).</source>
          <target state="translated">マーカーの位置の周りのテキストを削除すると、削除されたテキストの直前と直後の文字の間にマーカーが残ります。マーカーの位置にテキストを挿入すると、通常はマーカーのに応じて、目の前にするか、新しいテキストの後にいずれかのマーカーを残し&lt;em&gt;挿入型&lt;/em&gt;（参照&lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;マーカー挿入タイプ&lt;/a&gt;）-unless挿入はで行われ &lt;code&gt;insert-before-markers&lt;/code&gt; （参照&lt;a href=&quot;insertion#Insertion&quot;&gt;挿入&lt;/a&gt;） 。</target>
        </trans-unit>
        <trans-unit id="ec6ad6e40114c37a9cc3eb2b4970c4e1ca689728" translate="yes" xml:space="preserve">
          <source>Deletion means removing part of the text in a buffer, without saving it in the kill ring (see &lt;a href=&quot;the-kill-ring#The-Kill-Ring&quot;&gt;The Kill Ring&lt;/a&gt;). Deleted text can&amp;rsquo;t be yanked, but can be reinserted using the undo mechanism (see &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;). Some deletion functions do save text in the kill ring in some special cases.</source>
          <target state="translated">削除は、（参照キルリングにそれを保存せずに、バッファ内のテキストの一部を除去することを意味&lt;a href=&quot;the-kill-ring#The-Kill-Ring&quot;&gt;キルリング&lt;/a&gt;）。削除されたテキストはヤンクできませんが、元に戻すメカニズムを使用して再挿入できます（「&lt;a href=&quot;undo#Undo&quot;&gt;元に戻す&lt;/a&gt;」を参照）。一部の削除機能は、特別な場合にキルリングにテキストを保存します。</target>
        </trans-unit>
        <trans-unit id="d3b86785daadf87cba63ca84f94340f90c737f61" translate="yes" xml:space="preserve">
          <source>Denotes a slot at the specified side where to locate the window. A value of zero means to preferably position the window in the middle of the specified side. A negative value means to use a slot preceding (that is, above or on the left of) the middle slot. A positive value means to use a slot following (that is, below or on the right of) the middle slot. Hence, all windows on a specific side are ordered by their &lt;code&gt;slot&lt;/code&gt; value. If unspecified, the window is located in the middle of the specified side.</source>
          <target state="translated">ウィンドウを配置する指定された側のスロットを示します。ゼロの値は、ウィンドウを指定された側の中央に配置することが望ましいことを意味します。負の値は、中央のスロットの前（つまり、上または左）のスロットを使用することを意味します。正の値は、中央のスロットに続く（つまり、下または右にある）スロットを使用することを意味します。したがって、特定の側のすべてのウィンドウは、 &lt;code&gt;slot&lt;/code&gt; 値の順に並べられます。指定しない場合、ウィンドウは指定した側の中央に配置されます。</target>
        </trans-unit>
        <trans-unit id="fea14be7ae615af9a8c515c8681c4d2bbaccfb4d" translate="yes" xml:space="preserve">
          <source>Denotes the side of the frame where the window shall be located. Valid values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt;. If unspecified, the window is located at the bottom of the frame.</source>
          <target state="translated">ウィンドウを配置するフレームの側面を示します。有効な値は、 &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;top&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;bottom&lt;/code&gt; です。指定しない場合、ウィンドウはフレームの下部にあります。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="bedd6011ba9ecc5156948ffb0990ae535f37d142" translate="yes" xml:space="preserve">
          <source>Depending on &lt;var&gt;operation&lt;/var&gt;, this function looks up the target in &lt;code&gt;file-coding-system-alist&lt;/code&gt;, &lt;code&gt;process-coding-system-alist&lt;/code&gt;, or &lt;code&gt;network-coding-system-alist&lt;/code&gt;. If the target is found in the alist, &lt;code&gt;find-operation-coding-system&lt;/code&gt; returns its association in the alist; otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;operation&lt;/var&gt; に応じて、この関数は &lt;code&gt;file-coding-system-alist&lt;/code&gt; 、 &lt;code&gt;process-coding-system-alist&lt;/code&gt; 、または &lt;code&gt;network-coding-system-alist&lt;/code&gt; でターゲットを検索します。ターゲットがリストで見つかった場合、 &lt;code&gt;find-operation-coding-system&lt;/code&gt; はその関連付けをリストで返します。それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="06bc8bb4606ec5215c88b84e064499d7145434d9" translate="yes" xml:space="preserve">
          <source>Depending on the capabilities of Emacs, how asynchronous &lt;code&gt;:nowait&lt;/code&gt; is may vary. The three elements that may (or may not) be done asynchronously are domain name resolution, socket setup, and (for TLS connections) TLS negotiation.</source>
          <target state="translated">Emacsの機能に応じて、非同期 &lt;code&gt;:nowait&lt;/code&gt; の程度は異なる場合があります。非同期で実行できる（または実行できない）3つの要素は、ドメイン名の解決、ソケットのセットアップ、および（TLS接続の場合）TLSネゴシエーションです。</target>
        </trans-unit>
        <trans-unit id="dc188ba509d11146070cddaf5c2e2c230695ec89" translate="yes" xml:space="preserve">
          <source>Depending on the implementation of the file name handler, it might not be possible to apply &lt;code&gt;process-filter&lt;/code&gt; or &lt;code&gt;process-sentinel&lt;/code&gt; to the resulting process object. See &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;, and &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt;.</source>
          <target state="translated">ファイル名ハンドラーの実装によっては、結果のプロセスオブジェクトに &lt;code&gt;process-filter&lt;/code&gt; または &lt;code&gt;process-sentinel&lt;/code&gt; を適用できない場合があります。&lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;フィルタ関数&lt;/a&gt;、および&lt;a href=&quot;sentinels#Sentinels&quot;&gt;センチネルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f9a60ac53d061f9d8873dd95c1dfb41d008557b5" translate="yes" xml:space="preserve">
          <source>Depending on the implementation of the file name handler, it might not be possible to apply &lt;var&gt;filter&lt;/var&gt; or &lt;var&gt;sentinel&lt;/var&gt; to the resulting process object. The &lt;code&gt;:stderr&lt;/code&gt; argument cannot be a pipe process, file name handlers do not support pipe processes for this. A buffer as &lt;code&gt;:stderr&lt;/code&gt; argument is accepted, its contents is shown without the use of pipe processes. See &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;, &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt;, and &lt;a href=&quot;accepting-output#Accepting-Output&quot;&gt;Accepting Output&lt;/a&gt;.</source>
          <target state="translated">ファイル名ハンドラーの実装によっては、結果のプロセスオブジェクトに &lt;var&gt;filter&lt;/var&gt; または &lt;var&gt;sentinel&lt;/var&gt; を適用できない場合があります。 &lt;code&gt;:stderr&lt;/code&gt; の引数は、ファイル名のハンドラは、このために、パイプのプロセスをサポートしていない、パイププロセスにすることはできません。 &lt;code&gt;:stderr&lt;/code&gt; 引数としてのバッファーが受け入れられ、その内容はパイププロセスを使用せずに表示されます。&lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;フィルタ関数&lt;/a&gt;、&lt;a href=&quot;sentinels#Sentinels&quot;&gt;センチネル&lt;/a&gt;、および&lt;a href=&quot;accepting-output#Accepting-Output&quot;&gt;出力の受け入れを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c59a6955f565a3bf05ff68cbeedaae22c1315ff7" translate="yes" xml:space="preserve">
          <source>Depending on the user&amp;rsquo;s answer, the function may return normally, in which case the modification of the buffer proceeds, or it may signal a &lt;code&gt;file-supersession&lt;/code&gt; error with data &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt;)&lt;/code&gt;, in which case the proposed buffer modification is not allowed.</source>
          <target state="translated">ユーザーの回答に応じて、関数は正常に戻る場合があります。その場合、バッファーの変更が続行されます。または、データ &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;filename&lt;/var&gt; ）で &lt;code&gt;file-supersession&lt;/code&gt; エラーが発生する場合があります。この場合、提案されたバッファーの変更は許可されません。</target>
        </trans-unit>
        <trans-unit id="d9dd9b99607a185bc516282a5ab52c5a2808cc3d" translate="yes" xml:space="preserve">
          <source>Depending on window system, focus events may also be delivered repeatedly and with different focus states before settling to the expected values. Code relying on focus notifications should &amp;ldquo;debounce&amp;rdquo; any user-visible updates arising from focus changes, perhaps by deferring work until redisplay.</source>
          <target state="translated">ウィンドウシステムによっては、フォーカスイベントが繰り返し配信され、異なるフォーカス状態で配信されてから、期待値に落ち着く場合があります。フォーカス通知に依存するコードは、おそらく再表示まで作業を延期することにより、フォーカスの変更から生じるユーザーに表示される更新を「デバウンス」する必要があります。</target>
        </trans-unit>
        <trans-unit id="a6808e3217dc97b0ba5040237e8ab6c099e5256e" translate="yes" xml:space="preserve">
          <source>Describing Characters for Help Messages</source>
          <target state="translated">ヘルプメッセージの文字説明</target>
        </trans-unit>
        <trans-unit id="4ddb61c77e85503a63a72ff2293050c34ad0997e" translate="yes" xml:space="preserve">
          <source>Describing Data Layout</source>
          <target state="translated">データレイアウトの説明</target>
        </trans-unit>
        <trans-unit id="60e01e591c18093a3c8d91387277c0c70e93a365" translate="yes" xml:space="preserve">
          <source>Describing classes of strings.</source>
          <target state="translated">文字列のクラスを記述します。</target>
        </trans-unit>
        <trans-unit id="44d30a9f5dc29b06003908a2feda5a3c5f492bd7" translate="yes" xml:space="preserve">
          <source>Describing data layout.</source>
          <target state="translated">データのレイアウトを記述します。</target>
        </trans-unit>
        <trans-unit id="393d501a404e0e6cf95a77ba1b9ca7830370cc20" translate="yes" xml:space="preserve">
          <source>Designating a buffer as current so that primitives will access its contents.</source>
          <target state="translated">プリミティブがその内容にアクセスできるように、バッファをカレントに指定します。</target>
        </trans-unit>
        <trans-unit id="1208aaeff328a0683eea78ee9e0b6d189bbff9de" translate="yes" xml:space="preserve">
          <source>Desktop Notifications</source>
          <target state="translated">デスクトップの通知</target>
        </trans-unit>
        <trans-unit id="d6ab5674456bfee9fd0204086f26f1c7198f5cfb" translate="yes" xml:space="preserve">
          <source>Desktop Save Mode</source>
          <target state="translated">デスクトップ保存モード</target>
        </trans-unit>
        <trans-unit id="e52c618207f4fecb07a945f42f84c9b36064658d" translate="yes" xml:space="preserve">
          <source>Desktop notifications.</source>
          <target state="translated">デスクトップの通知。</target>
        </trans-unit>
        <trans-unit id="7aa28956b5ee17c204043e25c45408ee2a030c9d" translate="yes" xml:space="preserve">
          <source>Despite the distinction between files and buffers, people often refer to a file when they mean a buffer and vice-versa. Indeed, we say, &amp;ldquo;I am editing a file&amp;rdquo;, rather than, &amp;ldquo;I am editing a buffer that I will soon save as a file of the same name&amp;rdquo;. Humans do not usually need to make the distinction explicit. When dealing with a computer program, however, it is good to keep the distinction in mind.</source>
          <target state="translated">ファイルとバッファの違いにもかかわらず、人々はしばしば、バッファを意味するときにファイルを参照し、その逆も同様です。実際、「同じ名前のファイルとしてすぐに保存するバッファを編集しています」ではなく、「ファイルを編集しています」と言います。人間は通常、区別を明確にする必要はありません。ただし、コンピュータプログラムを扱うときは、その違いに注意することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="331bdd291900a9bf32d3e5b6523da562bcb078b2" translate="yes" xml:space="preserve">
          <source>Destructuring with pcase Patterns</source>
          <target state="translated">pcaseパターンを用いた構造化</target>
        </trans-unit>
        <trans-unit id="6e1b5ae06788e9890654031efec0e7d2f10bd2c7" translate="yes" xml:space="preserve">
          <source>Details about the suffixes that &lt;code&gt;load&lt;/code&gt; tries.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; 試行するサフィックスに関する詳細。</target>
        </trans-unit>
        <trans-unit id="39b4f808ccf9d054848685c364375487284211dc" translate="yes" xml:space="preserve">
          <source>Details and special features of argument lists.</source>
          <target state="translated">引数リストの詳細と特徴。</target>
        </trans-unit>
        <trans-unit id="a40e064ad4da784ab7635e2de415069d78ab768c" translate="yes" xml:space="preserve">
          <source>Details of using synchronous subprocesses.</source>
          <target state="translated">同期サブプロセスの使用方法の詳細</target>
        </trans-unit>
        <trans-unit id="e9e6287247b7bdf22492d62d095489ef544826d9" translate="yes" xml:space="preserve">
          <source>Details on reading the init file.</source>
          <target state="translated">initファイルの読み込みの詳細。</target>
        </trans-unit>
        <trans-unit id="e64bbd92b717d415a4fc10f79e726fc2127580ec" translate="yes" xml:space="preserve">
          <source>Determining the features of a terminal.</source>
          <target state="translated">端末の特徴を見極める</target>
        </trans-unit>
        <trans-unit id="00de309eba87afb5119600cc73a7d17d72130c38" translate="yes" xml:space="preserve">
          <source>Determining the syntactic state of a position.</source>
          <target state="translated">ポジションの構文状態を決定する。</target>
        </trans-unit>
        <trans-unit id="5901cd4e0f6865c55bbd5e5fd5853a9e728645ef" translate="yes" xml:space="preserve">
          <source>Determining whether a Function is Safe to Call</source>
          <target state="translated">関数を呼び出しても安全かどうかの判断</target>
        </trans-unit>
        <trans-unit id="810769ec7821b1ca0280e66813916a14fdbdbb7e" translate="yes" xml:space="preserve">
          <source>Determining whether a function is safe to call.</source>
          <target state="translated">関数を呼び出しても安全かどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="36fec1d6bd6fafea17fbcb6651b0ceab1bee1dd9" translate="yes" xml:space="preserve">
          <source>Determining whether the visited file was changed behind Emacs&amp;rsquo;s back.</source>
          <target state="translated">訪問したファイルがEmacsの背後で変更されたかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="f3e6638d8983368cd66eb98c8285025ea28eef00" translate="yes" xml:space="preserve">
          <source>Determining which network features work on the machine you are using.</source>
          <target state="translated">使用しているマシン上で動作するネットワーク機能を決定します。</target>
        </trans-unit>
        <trans-unit id="9df5b59ac2daac4a68cc51ccfe1bd15991c0b2e8" translate="yes" xml:space="preserve">
          <source>Dialog Boxes</source>
          <target state="translated">ダイアログボックス</target>
        </trans-unit>
        <trans-unit id="0687da02c9edb60aabcae43b40d506a20188fdfe" translate="yes" xml:space="preserve">
          <source>Dialog boxes always appear in the center of a frame; the argument &lt;var&gt;position&lt;/var&gt; specifies which frame. The possible values are as in &lt;code&gt;x-popup-menu&lt;/code&gt;, but the precise coordinates or the individual window don&amp;rsquo;t matter; only the frame matters.</source>
          <target state="translated">ダイアログボックスは常にフレームの中央に表示されます。引数の &lt;var&gt;position&lt;/var&gt; は、どのフレームを指定します。可能な値は &lt;code&gt;x-popup-menu&lt;/code&gt; の場合と同じですが、正確な座標や個々のウィンドウは重要ではありません。フレームだけが重要です。</target>
        </trans-unit>
        <trans-unit id="2f093cef7e8a405c5d998976c2b2e9c4c90b4a43" translate="yes" xml:space="preserve">
          <source>Digit</source>
          <target state="translated">Digit</target>
        </trans-unit>
        <trans-unit id="b0305cf73b048a3eb5e04fc6f33d59b344e2d16c" translate="yes" xml:space="preserve">
          <source>Directories are files, so &lt;code&gt;file-exists-p&lt;/code&gt; can return &lt;code&gt;t&lt;/code&gt; when given a directory. However, because &lt;code&gt;file-exists-p&lt;/code&gt; follows symbolic links, it returns &lt;code&gt;t&lt;/code&gt; for a symbolic link name only if the target file exists.</source>
          <target state="translated">ディレクトリはファイルであるため、 &lt;code&gt;file-exists-p&lt;/code&gt; は、ディレクトリを指定すると &lt;code&gt;t&lt;/code&gt; を返すことができます。ただし、 &lt;code&gt;file-exists-p&lt;/code&gt; はシンボリックリンクをたどるため、ターゲットファイルが存在する場合にのみシンボリックリンク名に対して &lt;code&gt;t&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e2c53dd675781bb78457d15755ac4b2a4638e8ff" translate="yes" xml:space="preserve">
          <source>Directory Local Variables</source>
          <target state="translated">ディレクトリローカル変数</target>
        </trans-unit>
        <trans-unit id="426a9b6d2466a4f29b89b28233d69fac41fb21a2" translate="yes" xml:space="preserve">
          <source>Directory Names</source>
          <target state="translated">ディレクトリ名</target>
        </trans-unit>
        <trans-unit id="2c84295511e3d4860f4bce3fecbb7461e64b72a8" translate="yes" xml:space="preserve">
          <source>Disabling Commands</source>
          <target state="translated">無効化コマンド</target>
        </trans-unit>
        <trans-unit id="dcccdac068d8a62f9b3c978d24578c5580db3597" translate="yes" xml:space="preserve">
          <source>Disabling Multibyte Characters</source>
          <target state="translated">マルチバイト文字を無効にする</target>
        </trans-unit>
        <trans-unit id="b63aea91e73ae4b743ae07d1c313e661a92893d2" translate="yes" xml:space="preserve">
          <source>Disallows switching and signals an error as in non-interactive use.</source>
          <target state="translated">非インタラクティブ使用時と同様に、スイッチングを無効にし、エラーを通知します。</target>
        </trans-unit>
        <trans-unit id="2b2e65d75308fb0c58764ba66e1aed8954bac31c" translate="yes" xml:space="preserve">
          <source>Disassembled Byte-Code</source>
          <target state="translated">分解バイトコード</target>
        </trans-unit>
        <trans-unit id="90b38775d5adaa24835b7c16777fe848a1a4cbe4" translate="yes" xml:space="preserve">
          <source>Disassembling byte-code; how to read byte-code.</source>
          <target state="translated">バイトコードの分解、バイトコードの読み方。</target>
        </trans-unit>
        <trans-unit id="1e9fd62605dba6fed0e7fb9746cb62c8494027ae" translate="yes" xml:space="preserve">
          <source>Discard the output, and return &lt;code&gt;nil&lt;/code&gt; immediately without waiting for the subprocess to finish.</source>
          <target state="translated">出力を破棄し、サブプロセスが終了するのを待たずにすぐに &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="992a43465e9392fd9e0d446a198942cf52368d8a" translate="yes" xml:space="preserve">
          <source>Discard the output.</source>
          <target state="translated">出力を破棄します。</target>
        </trans-unit>
        <trans-unit id="574ff9b0c49cdeb5f5508548ae0cab44fecee038" translate="yes" xml:space="preserve">
          <source>Display</source>
          <target state="translated">Display</target>
        </trans-unit>
        <trans-unit id="81976d6d3677b8f815c544607fbb8e0be199d26a" translate="yes" xml:space="preserve">
          <source>Display &lt;var&gt;icon&lt;/var&gt; in the system tray. If &lt;var&gt;icon&lt;/var&gt; is a string, it should specify a file name from which to load the icon; the specified file should be a</source>
          <target state="translated">システムトレイに &lt;var&gt;icon&lt;/var&gt; を表示します。場合は &lt;var&gt;icon&lt;/var&gt; 文字列である、それはアイコンをロードするファイル名を指定する必要があります。指定されたファイルは</target>
        </trans-unit>
        <trans-unit id="bb21fc4e6315641e302dd1e85e80c62c87e27dc4" translate="yes" xml:space="preserve">
          <source>Display &lt;var&gt;string&lt;/var&gt; instead of the text that has this property.</source>
          <target state="translated">このプロパティを持つテキストの代わりに &lt;var&gt;string&lt;/var&gt; を表示します。</target>
        </trans-unit>
        <trans-unit id="06c7259195a5cfcfc7309d074ff05f0942b78c06" translate="yes" xml:space="preserve">
          <source>Display Feature Testing</source>
          <target state="translated">表示機能のテスト</target>
        </trans-unit>
        <trans-unit id="f8ebb335c55c27c5cb02b66785d8fc6c2200a42e" translate="yes" xml:space="preserve">
          <source>Display Specs That Replace The Text</source>
          <target state="translated">テキストを置き換える表示仕様</target>
        </trans-unit>
        <trans-unit id="4b23ea0399bf455fd7f5eb176880b1c4396487ef" translate="yes" xml:space="preserve">
          <source>Display Tables</source>
          <target state="translated">表を表示する</target>
        </trans-unit>
        <trans-unit id="c041e540a063c612bf30d300064b216e9911d3d2" translate="yes" xml:space="preserve">
          <source>Display a backtrace, excluding Edebug&amp;rsquo;s own functions for clarity (&lt;code&gt;edebug-backtrace&lt;/code&gt;).</source>
          <target state="translated">わかりやすくするためにEdebug自体の関数を除いて、バックトレースを表示します（ &lt;code&gt;edebug-backtrace&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cf3970add366bcb040ee5da0cb743c24387355b8" translate="yes" xml:space="preserve">
          <source>Display a backtrace, omitting Edebug&amp;rsquo;s own frames.</source>
          <target state="translated">Edebug自身のフレームを省略して、バックトレースを表示します。</target>
        </trans-unit>
        <trans-unit id="80eaf252351452404cceb9c3512de080d3ec4022" translate="yes" xml:space="preserve">
          <source>Display a box containing that string. The string should contain at most 6</source>
          <target state="translated">その文字列を含むボックスを表示します。文字列には最大6つの</target>
        </trans-unit>
        <trans-unit id="f9a0de3d9806ce236d06a171a16fa2c799573f82" translate="yes" xml:space="preserve">
          <source>Display a box containing the Unicode codepoint of the character, in hexadecimal notation.</source>
          <target state="translated">キ ャ ラ ク タ の Unicode コ ー ド ポ イ ン ト を含む枠を、 16 進表記で表示 し ます。</target>
        </trans-unit>
        <trans-unit id="421baf3300af3c04fcc7fde9988e106db63a3756" translate="yes" xml:space="preserve">
          <source>Display a filled box. (This is the default.)</source>
          <target state="translated">塗りつぶしたボックスを表示します。(これがデフォルトです)。</target>
        </trans-unit>
        <trans-unit id="c1bae4bf40eb3abaf0da005765bab148a23ee3d3" translate="yes" xml:space="preserve">
          <source>Display a hollow box.</source>
          <target state="translated">ホーローボックスを表示します。</target>
        </trans-unit>
        <trans-unit id="63fc9198730ee5ced3bfd519ecb3823b1c64a2b0" translate="yes" xml:space="preserve">
          <source>Display a horizontal bar &lt;var&gt;height&lt;/var&gt; pixels high.</source>
          <target state="translated">&lt;var&gt;height&lt;/var&gt; ピクセルの高さの水平バーの高さを表示します。</target>
        </trans-unit>
        <trans-unit id="c0b1db6a491723ac650cce6cdac2683566bea301" translate="yes" xml:space="preserve">
          <source>Display a horizontal bar.</source>
          <target state="translated">横棒を表示します。</target>
        </trans-unit>
        <trans-unit id="d49f4d013bc386c399cd430b0133f59dbc543678" translate="yes" xml:space="preserve">
          <source>Display a list of functions that will invoke the debugger when called. This is a list of functions that are set to break on entry by means of &lt;code&gt;debug-on-entry&lt;/code&gt;.</source>
          <target state="translated">呼び出されたときにデバッガーを呼び出す関数のリストを表示します。これは、 &lt;code&gt;debug-on-entry&lt;/code&gt; を使用してエントリ時に中断するように設定されている関数のリストです。</target>
        </trans-unit>
        <trans-unit id="70ab8c7f2c8802cb8a11f7f88c5f9d002f5bfe01" translate="yes" xml:space="preserve">
          <source>Display a literal &amp;lsquo;</source>
          <target state="translated">リテラルを表示する '</target>
        </trans-unit>
        <trans-unit id="13c81c276414bb62766057cb0952e6a0156a6de5" translate="yes" xml:space="preserve">
          <source>Display a thin space, 1-pixel wide on graphical displays, or 1-character wide on text terminals.</source>
          <target state="translated">薄いスペースを表示し、グラフィカルディスプレイでは1ピクセル幅、テキスト端末では1文字幅を表示します。</target>
        </trans-unit>
        <trans-unit id="d389be1988fbcf8b9e82962c470d62ff9d8d1054" translate="yes" xml:space="preserve">
          <source>Display a vertical bar &lt;var&gt;width&lt;/var&gt; pixels wide between characters.</source>
          <target state="translated">文字間でピクセル &lt;var&gt;width&lt;/var&gt; 垂直バー幅を表示します。</target>
        </trans-unit>
        <trans-unit id="da3a7e5ec42d7735a91ac0b8ca7e0eda22bfdb7d" translate="yes" xml:space="preserve">
          <source>Display a vertical bar between characters.</source>
          <target state="translated">文字と文字の間に縦棒を表示します。</target>
        </trans-unit>
        <trans-unit id="6784b24563815961a55f4b75c27f8f4f0b03237a" translate="yes" xml:space="preserve">
          <source>Display an empty box.</source>
          <target state="translated">空のボックスを表示します。</target>
        </trans-unit>
        <trans-unit id="e84a974ad0b3695b2210f348f78aab26f82c3ed7" translate="yes" xml:space="preserve">
          <source>Display expression results and evaluate expressions as if outside of Edebug.</source>
          <target state="translated">式の結果を表示し、あたかもEdebugの外にいるかのように式を評価します。</target>
        </trans-unit>
        <trans-unit id="191827dd8029a9d776f9248bc6aa52887421b5af" translate="yes" xml:space="preserve">
          <source>Display of an arrow to indicate position.</source>
          <target state="translated">位置を示す矢印の表示</target>
        </trans-unit>
        <trans-unit id="378deda6e314e626dc3325c6542de919a5fb97b7" translate="yes" xml:space="preserve">
          <source>Display of bidirectional scripts, such as Arabic and Farsi.</source>
          <target state="translated">アラビア語やペルシャ語などの双方向性のスクリプトを表示します。</target>
        </trans-unit>
        <trans-unit id="ba8254baa2a06e0921938bfddb5892e4e2922fc5" translate="yes" xml:space="preserve">
          <source>Display some help, then ask again.</source>
          <target state="translated">ヘルプを表示して、もう一度聞いてみてください。</target>
        </trans-unit>
        <trans-unit id="44497e1875e699b4d8eb5c7bf819bdfb142b969b" translate="yes" xml:space="preserve">
          <source>Display specs that replace the text.</source>
          <target state="translated">テキストを置き換えるスペックを表示します。</target>
        </trans-unit>
        <trans-unit id="b61003725ba577c7cc8e7675c491a9fcc12b1c21" translate="yes" xml:space="preserve">
          <source>Display tables (see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</source>
          <target state="translated">テーブルを&lt;a href=&quot;display-tables#Display-Tables&quot;&gt;表示し&lt;/a&gt;ます（テーブルの表示を参照）。</target>
        </trans-unit>
        <trans-unit id="7252342da48e710925e4d98b3fe5efaf560909af" translate="yes" xml:space="preserve">
          <source>Display the angle icons and arrows in the left fringe.</source>
          <target state="translated">左フリンジに角度のアイコンと矢印を表示します。</target>
        </trans-unit>
        <trans-unit id="3fde49393afde3594d470777246e6a5c155d7ee6" translate="yes" xml:space="preserve">
          <source>Display the angle icons and arrows in the right fringe.</source>
          <target state="translated">右のフリンジに角度のアイコンと矢印を表示します。</target>
        </trans-unit>
        <trans-unit id="f0042d66c4311f4eec1e6ac6c0d0c3f0b167a987" translate="yes" xml:space="preserve">
          <source>Display the angle icons in the left fringe and don&amp;rsquo;t display the arrows.</source>
          <target state="translated">左フリンジに角度アイコンを表示し、矢印は表示しません。</target>
        </trans-unit>
        <trans-unit id="4477d164c0a9a3bb5b547ae6fe60c063979d3489" translate="yes" xml:space="preserve">
          <source>Display the character in the usual way.</source>
          <target state="translated">通常の方法で文字を表示します。</target>
        </trans-unit>
        <trans-unit id="2bf33014805f5983925be163210b73090cf0f207" translate="yes" xml:space="preserve">
          <source>Display the help message for Edebug (&lt;code&gt;edebug-help&lt;/code&gt;).</source>
          <target state="translated">Edebugのヘルプメッセージを表示します（ &lt;code&gt;edebug-help&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="20780bc7d38845f05463f82c4075ff1905bc9bf0" translate="yes" xml:space="preserve">
          <source>Display the specified glyph code instead.</source>
          <target state="translated">指定したグリフコードを代わりに表示します。</target>
        </trans-unit>
        <trans-unit id="d681a90c083eac19dc61c728241c99e9fb3f3235" translate="yes" xml:space="preserve">
          <source>Display the text &lt;var&gt;button&lt;/var&gt; marked as a button. The &lt;code&gt;:action&lt;/code&gt; attribute specifies what the button will do if the user invokes it; its value is a function which takes two arguments&amp;mdash;the widget which the button appears in, and the event.</source>
          <target state="translated">&lt;var&gt;button&lt;/var&gt; としてマークされたテキストボタンを表示します。 &lt;code&gt;:action&lt;/code&gt; ユーザーがそれを呼び出した場合、ボタンは何をするか属性指定します。その値は、ボタンが表示されるウィジェットとイベントの2つの引数を取る関数です。</target>
        </trans-unit>
        <trans-unit id="5b954471724c68567e89f11b0099d61ecf6a99c4" translate="yes" xml:space="preserve">
          <source>Display this glyph by sending the specified string to the terminal.</source>
          <target state="translated">指定された文字列を端末に送信することで、このグリフを表示する。</target>
        </trans-unit>
        <trans-unit id="24be2c8620ecfdcb9b0fd471d40947e188d9dc51" translate="yes" xml:space="preserve">
          <source>Display this glyph literally.</source>
          <target state="translated">このグリフを文字通り表示します。</target>
        </trans-unit>
        <trans-unit id="fea5f0565f7f797b9005e9d138263b73ab3829a0" translate="yes" xml:space="preserve">
          <source>Display with &lt;var&gt;graphical&lt;/var&gt; on graphical displays, and with &lt;var&gt;text&lt;/var&gt; on text terminals. Both &lt;var&gt;graphical&lt;/var&gt; and &lt;var&gt;text&lt;/var&gt; must be one of the display methods described above.</source>
          <target state="translated">&lt;var&gt;graphical&lt;/var&gt; ディスプレイではグラフィックで表示し、テキスト端末ではテキストで &lt;var&gt;text&lt;/var&gt; します。 &lt;var&gt;graphical&lt;/var&gt; と &lt;var&gt;text&lt;/var&gt; 両方が、上記の表示方法の1つである必要があります。</target>
        </trans-unit>
        <trans-unit id="618af68e847b05850ad14d5397680a98adf78ce3" translate="yes" xml:space="preserve">
          <source>Displaying Buffers in Side Windows</source>
          <target state="translated">サイドウィンドウにバッファを表示する</target>
        </trans-unit>
        <trans-unit id="d1600c42c4eb0f76394268c18eef97dec832cf2b" translate="yes" xml:space="preserve">
          <source>Displaying Faces</source>
          <target state="translated">顔の表示</target>
        </trans-unit>
        <trans-unit id="7b1334b22ec9e0d8c7cba40d6730d6b0e815df86" translate="yes" xml:space="preserve">
          <source>Displaying Messages in the Echo Area</source>
          <target state="translated">エコーエリアにメッセージを表示する</target>
        </trans-unit>
        <trans-unit id="67c36a37f843e665d1276f456d6877a2fd593360" translate="yes" xml:space="preserve">
          <source>Displaying a Buffer in a Suitable Window</source>
          <target state="translated">バッファを適切なウィンドウに表示する</target>
        </trans-unit>
        <trans-unit id="434d9ea4002d3d972f5539bf323be65b2685e162" translate="yes" xml:space="preserve">
          <source>Displaying a box to ask yes or no.</source>
          <target state="translated">イエスかノーかを尋ねるためのボックスを表示します。</target>
        </trans-unit>
        <trans-unit id="10c7c45826793acd46c045e931912a7c1864364f" translate="yes" xml:space="preserve">
          <source>Displaying a buffer in a suitable window.</source>
          <target state="translated">適当なウィンドウにバッファを表示します。</target>
        </trans-unit>
        <trans-unit id="a37daaf6d4f46253134c64944fcd6f393053a501" translate="yes" xml:space="preserve">
          <source>Displaying a menu for the user to select from.</source>
          <target state="translated">ユーザーが選択できるメニューを表示します。</target>
        </trans-unit>
        <trans-unit id="71abbc1f9c4d06843e29188c3da79172ab1b6c57" translate="yes" xml:space="preserve">
          <source>Displaying an image; adjusting the height, spacing, and other properties of text.</source>
          <target state="translated">画像を表示したり、テキストの高さや間隔などのプロパティを調整したりすることができます。</target>
        </trans-unit>
        <trans-unit id="f0bacadfbee90f312fe142827bf5d96a476640cd" translate="yes" xml:space="preserve">
          <source>Displaying cursors in the right fringe.</source>
          <target state="translated">右のフリンジにカーソルを表示します。</target>
        </trans-unit>
        <trans-unit id="c1c42fa19459fc2384d8cd8487b3fd07b2c3ef6b" translate="yes" xml:space="preserve">
          <source>Displaying images in Emacs buffers.</source>
          <target state="translated">Emacsのバッファに画像を表示する</target>
        </trans-unit>
        <trans-unit id="06d1773f36b9cb6d9242979bd3192bd0e0940f37" translate="yes" xml:space="preserve">
          <source>Displaying in the Margins</source>
          <target state="translated">余白での表示</target>
        </trans-unit>
        <trans-unit id="e4df838dd20a50826a4380b30a00a45486a89912" translate="yes" xml:space="preserve">
          <source>Displaying indicator icons in the window fringes.</source>
          <target state="translated">ウィンドウのフリンジにインジケーターアイコンを表示します。</target>
        </trans-unit>
        <trans-unit id="c46ff06fda3da50f5945685fc35881b8046b8bbf" translate="yes" xml:space="preserve">
          <source>Displaying messages at the bottom of the screen.</source>
          <target state="translated">画面下部にメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="c61a533f834e81b81144741488edb351c4b59dcb" translate="yes" xml:space="preserve">
          <source>Displaying native widgets in Emacs buffers.</source>
          <target state="translated">Emacs バッファにネイティブウィジェットを表示する</target>
        </trans-unit>
        <trans-unit id="d4bcb92d9051207e05eab3f4ef68fc9592f0837f" translate="yes" xml:space="preserve">
          <source>Displaying on several different devices.</source>
          <target state="translated">複数の異なるデバイスでの表示</target>
        </trans-unit>
        <trans-unit id="d0a918c947546c08aa9a141cea5cc904a4cd838c" translate="yes" xml:space="preserve">
          <source>Displaying one space with a specified width.</source>
          <target state="translated">1つのスペースを指定した幅で表示します。</target>
        </trans-unit>
        <trans-unit id="c00f3dd89d830f0c197a9af05d57c679befeed71" translate="yes" xml:space="preserve">
          <source>Displaying text or images to the side of the main text.</source>
          <target state="translated">本文の横にテキストや画像を表示します。</target>
        </trans-unit>
        <trans-unit id="889086fb020a91decec214af763c6371b2b40b76" translate="yes" xml:space="preserve">
          <source>Displaying warning messages for the user.</source>
          <target state="translated">ユーザーへの警告メッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="08708fb6139494af1f8eae88fb02aa680ac0bbbb" translate="yes" xml:space="preserve">
          <source>Displays that go away automatically.</source>
          <target state="translated">自動的に消えていく表示。</target>
        </trans-unit>
        <trans-unit id="62fc1dcc0dcd09f2e883c44b44308f40130d7908" translate="yes" xml:space="preserve">
          <source>Distinguish Interactive Calls</source>
          <target state="translated">インタラクティブ通話を区別する</target>
        </trans-unit>
        <trans-unit id="9dc78fcea75ac6a294f1849abb64d1181eadc426" translate="yes" xml:space="preserve">
          <source>Distinguish the name and kind of system.</source>
          <target state="translated">システムの名前と種類を区別する。</target>
        </trans-unit>
        <trans-unit id="6533ea8690381322c5b1b97f75f21692cf282471" translate="yes" xml:space="preserve">
          <source>Distinguishing Kinds of Files</source>
          <target state="translated">ファイルの種類の区別</target>
        </trans-unit>
        <trans-unit id="2cb93d16c36551db9a1f1534947289af69a0bb1c" translate="yes" xml:space="preserve">
          <source>Dividers can be dragged with the mouse and are therefore useful for adjusting the sizes of adjacent windows with the mouse. They also serve to visually set apart adjacent windows when no scroll bars or mode lines are present. The following three faces allow the customization of the appearance of dividers:</source>
          <target state="translated">分割器はマウスでドラッグすることができるので、マウスで隣接するウィンドウのサイズを調整するのに便利です。また、スクロールバーやモードラインがないときに、隣り合うウィンドウを視覚的に区切るのにも役立ちます。次の3つの面では、ディバイダの外観をカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="ad4e1c7dbe4bdbab1cd854c2bc81ac366e2fd865" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; use &lt;code&gt;undecided&lt;/code&gt; for &lt;var&gt;coding-system&lt;/var&gt; when encoding text, since that may lead to unexpected results. Instead, use &lt;code&gt;select-safe-coding-system&lt;/code&gt; (see &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;select-safe-coding-system&lt;/a&gt;) to suggest a suitable encoding, if there&amp;rsquo;s no obvious pertinent value for &lt;var&gt;coding-system&lt;/var&gt;.</source>
          <target state="translated">テキストをエンコードするときは、 &lt;var&gt;coding-system&lt;/var&gt; に &lt;code&gt;undecided&lt;/code&gt; を使用し&lt;em&gt;ないで&lt;/em&gt;ください。予期しない結果が生じる可能性があります。代わりに、&lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;コーディングシステムに&lt;/a&gt;明確な適切な値がない場合は、 &lt;code&gt;select-safe-coding-system&lt;/code&gt; （select-safe-coding-systemを参照）を使用して適切なエンコーディングを提案し &lt;var&gt;coding-system&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="de7db9469e6fcb3df0bf71de137cf9509a4f001a" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; use &lt;code&gt;window-system&lt;/code&gt; and &lt;code&gt;initial-window-system&lt;/code&gt; as predicates or boolean flag variables, if you want to write code that works differently on text terminals and graphic displays. That is because &lt;code&gt;window-system&lt;/code&gt; is not a good indicator of Emacs capabilities on a given display type. Instead, use &lt;code&gt;display-graphic-p&lt;/code&gt; or any of the other &lt;code&gt;display-*-p&lt;/code&gt; predicates described in &lt;a href=&quot;display-feature-testing#Display-Feature-Testing&quot;&gt;Display Feature Testing&lt;/a&gt;.</source>
          <target state="translated">テキスト端末とグラフィックディスプレイで異なる動作をするコードを記述したい場合は、 &lt;code&gt;window-system&lt;/code&gt; と &lt;code&gt;initial-window-system&lt;/code&gt; を述語またはブールフラグ変数として使用し&lt;em&gt;ないで&lt;/em&gt;ください。これは、 &lt;code&gt;window-system&lt;/code&gt; が特定の表示タイプでのEmacs機能の適切な指標ではないためです。代わりに、 &lt;code&gt;display-graphic-p&lt;/code&gt; または&lt;a href=&quot;display-feature-testing#Display-Feature-Testing&quot;&gt;Display&lt;/a&gt; FeatureTestingで説明されている他の &lt;code&gt;display-*-p&lt;/code&gt; 述語のいずれかを使用してください。</target>
        </trans-unit>
        <trans-unit id="233fe85b908a3966e038cfd1f6207c31a852e6bd" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; use these functions to make a buffer temporarily current just so a Lisp program can access or modify it. They have side-effects, such as changing window histories (see &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;), which will surprise the user if used that way. If you want to make a buffer current to modify it in Lisp, use &lt;code&gt;with-current-buffer&lt;/code&gt;, &lt;code&gt;save-current-buffer&lt;/code&gt;, or &lt;code&gt;set-buffer&lt;/code&gt;. See &lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;Current Buffer&lt;/a&gt;.</source>
          <target state="translated">Lispプログラムがバッファにアクセスまたは変更できるようにするためだけに、これらの関数を使用してバッファを一時的に最新のものにし&lt;em&gt;ないで&lt;/em&gt;ください。彼らは、このようなウィンドウ履歴の変更などの副作用、（参照持つ&lt;a href=&quot;window-history#Window-History&quot;&gt;ウィンドウの歴史を&lt;/a&gt;そのように使用した場合、ユーザーを驚かせるでしょう）。Lispでバッファを現在の状態に変更して変更する場合は、 &lt;code&gt;with-current-buffer&lt;/code&gt; 、 &lt;code&gt;save-current-buffer&lt;/code&gt; 、または &lt;code&gt;set-buffer&lt;/code&gt; を使用します。&lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;現在のバッファを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="38fc2968457ef75487f5bc222ebaa2b81e23705c" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; use this function to compare file names for equality, as filesystems generally don&amp;rsquo;t honor linguistic equivalence of strings that collation implements.</source>
          <target state="translated">ファイルシステムは通常、照合が実装する文字列の言語的同等性を尊重し&lt;em&gt;ない&lt;/em&gt;ため、この関数を使用してファイル名が等しいかどうかを比較し&lt;em&gt;ないで&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="28fd18c2acbdc2fd4f133cf31b66d79e6e87da38" translate="yes" xml:space="preserve">
          <source>Do not add an autoload comment unless it is really necessary. Autoloading code means it is always globally visible. Once an item is autoloaded, there is no compatible way to transition back to it not being autoloaded (after people become accustomed to being able to use it without an explicit load).</source>
          <target state="translated">本当に必要な場合を除き、オートロードコメントを追加しないでください。オートロードされたコードは常にグローバルに表示されます。一度オートロードされたアイテムは、オートロードされていない状態に戻す互換性のある方法はありません (人々が明示的にロードしなくても使用できるように慣れてしまった後)。</target>
        </trans-unit>
        <trans-unit id="2e8a8223e2ebfb4c1c978ae7798b361f94435264" translate="yes" xml:space="preserve">
          <source>Do not assume that signed integer arithmetic wraps around on overflow. This is no longer true of Emacs porting targets: signed integer overflow has undefined behavior in practice, and can dump core or even cause earlier or later code to behave illogically. Unsigned overflow does wrap around reliably, modulo a power of two.</source>
          <target state="translated">符号付き整数演算がオーバーフロー時にラップすると想定しないでください。符号付き整数オーバーフローは実際には動作が未定義で、コアをダンプしたり、それ以前のコードやそれ以降のコードが非論理的な動作をする原因になることがあります。符号付き整数オーバーフローは実際には動作が不定で、コアをダンプしたり、それ以前のコードやそれ以降のコードを非論理的に動作させたりする可能性があります。</target>
        </trans-unit>
        <trans-unit id="df08ea961eba96b4703510d94d0caf12ed0cfe99" translate="yes" xml:space="preserve">
          <source>Do not confuse evaluation with command key interpretation. The editor command loop translates keyboard input into a command (an interactively callable function) using the active keymaps, and then uses &lt;code&gt;call-interactively&lt;/code&gt; to execute that command. Executing the command usually involves evaluation, if the command is written in Lisp; however, this step is not considered a part of command key interpretation. See &lt;a href=&quot;command-loop#Command-Loop&quot;&gt;Command Loop&lt;/a&gt;.</source>
          <target state="translated">評価とコマンドキーの解釈を混同しないでください。エディタのコマンドループは、アクティブなキーマップを使用してキーボード入力をコマンド（インタラクティブに呼び出し可能な関数）に変換し、 &lt;code&gt;call-interactively&lt;/code&gt; を使用してそのコマンドを実行します。コマンドがLispで書かれている場合、コマンドの実行には通常、評価が含まれます。ただし、この手順はコマンドキーの解釈の一部とは見なされません。&lt;a href=&quot;command-loop#Command-Loop&quot;&gt;コマンドループを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f960f784b0378b1b2968b70ff446ffc187486372" translate="yes" xml:space="preserve">
          <source>Do not display a splash screen.</source>
          <target state="translated">スプラッシュ画面を表示しないでください。</target>
        </trans-unit>
        <trans-unit id="e214470f906dbb222eca782a10acf99ae0c14a92" translate="yes" xml:space="preserve">
          <source>Do not include any</source>
          <target state="translated">を含まないようにしてください。</target>
        </trans-unit>
        <trans-unit id="899be68a4bd888b45bba6dfa338a09cfcad9fd43" translate="yes" xml:space="preserve">
          <source>Do not include any file named</source>
          <target state="translated">という名前のファイルを含めないでください。</target>
        </trans-unit>
        <trans-unit id="5e18950e85e5243977283ed6bf32212cb5049fd8" translate="yes" xml:space="preserve">
          <source>Do not initialize any display; just start a server. (A &amp;ldquo;background&amp;rdquo; daemon automatically runs in the background.)</source>
          <target state="translated">表示を初期化しないでください。サーバーを起動するだけです。（「バックグラウンド」デーモンは自動的にバックグラウンドで実行されます。）</target>
        </trans-unit>
        <trans-unit id="353066bea6254b066e985958ab8f2a1927efac85" translate="yes" xml:space="preserve">
          <source>Do not load either the init file, or the</source>
          <target state="translated">initファイルや</target>
        </trans-unit>
        <trans-unit id="f111403f756ee69a1f603ab8b93d6d91f9ca7c4e" translate="yes" xml:space="preserve">
          <source>Do not load the</source>
          <target state="translated">をロードしないでください。</target>
        </trans-unit>
        <trans-unit id="79a269c4ff2f9b02abbe1bfaea2ba8e8fe52b67e" translate="yes" xml:space="preserve">
          <source>Do not make numbered backups.</source>
          <target state="translated">番号付きのバックアップはしないでください。</target>
        </trans-unit>
        <trans-unit id="8333f4318fa47fe7570f638ec0bf702637984ca4" translate="yes" xml:space="preserve">
          <source>Do not rely on the return value of this function.</source>
          <target state="translated">この関数の戻り値に依存しないでください。</target>
        </trans-unit>
        <trans-unit id="564d9ba928017991b47c37a09c97a86042ca1dde" translate="yes" xml:space="preserve">
          <source>Do not rely on using &lt;code&gt;set-buffer&lt;/code&gt; to change the current buffer back, because that won&amp;rsquo;t do the job if a quit happens while the wrong buffer is current. For instance, in the previous example, it would have been wrong to do this:</source>
          <target state="translated">間違ったバッファが現在存在しているときに終了が発生した場合、 &lt;code&gt;set-buffer&lt;/code&gt; を使用して現在のバッファを元に戻すことに依存しないでください。たとえば、前の例では、これを行うのは間違っていたでしょう。</target>
        </trans-unit>
        <trans-unit id="e8694f14fe6085f1a0940403263577dcc48d28e8" translate="yes" xml:space="preserve">
          <source>Do not set this variable in the init file of a new user, or in a way that affects more than one user, as that would prevent new users from receiving information about copyleft and basic Emacs usage.</source>
          <target state="translated">新しいユーザのinitファイルにこの変数を設定したり、複数のユーザに影響を与えるような方法でこの変数を設定しないでください。</target>
        </trans-unit>
        <trans-unit id="a6986cdc41a6855298866206f6bc9feaf3a8bf15" translate="yes" xml:space="preserve">
          <source>Do not take action for this question&amp;mdash;in other words, &amp;ldquo;no&amp;rdquo;.</source>
          <target state="translated">この質問に対してアクションを実行しないでください。つまり、「いいえ」です。</target>
        </trans-unit>
        <trans-unit id="de2febfa3c3a94aee2602f7bdba301145781eead" translate="yes" xml:space="preserve">
          <source>Do not try substituting your own definition of &lt;code&gt;self-insert-command&lt;/code&gt; for the standard one. The editor command loop handles this function specially.</source>
          <target state="translated">独自の &lt;code&gt;self-insert-command&lt;/code&gt; 定義を標準の定義に置き換えようとしないでください。エディタコマンドループは、この関数を特別に処理します。</target>
        </trans-unit>
        <trans-unit id="968419346d77d1d7263a2d71365343884217cf6e" translate="yes" xml:space="preserve">
          <source>Do not use this feature if you want to deprecate the calling convention and favor the one you advertise by the above specification. Instead, use the &lt;code&gt;advertised-calling-convention&lt;/code&gt; declaration (see &lt;a href=&quot;declare-form#Declare-Form&quot;&gt;Declare Form&lt;/a&gt;) or &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; (see &lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;Obsolete Functions&lt;/a&gt;), because these two will cause the byte compiler emit a warning message when it compiles Lisp programs which use the deprecated calling convention.</source>
          <target state="translated">呼び出し規約を廃止し、上記の仕様でアドバタイズする規約を優先する場合は、この機能を使用しないでください。代わりに、 &lt;code&gt;advertised-calling-convention&lt;/code&gt; 宣言（&lt;a href=&quot;declare-form#Declare-Form&quot;&gt;Declare Formを&lt;/a&gt;参照）または &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; （&lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;廃止された関数を&lt;/a&gt;参照）を使用してください。これら2つにより、非推奨を使用するLispプログラムをコンパイルするときにバイトコンパイラが警告メッセージを出力するためです。呼び出し規約。</target>
        </trans-unit>
        <trans-unit id="60912253d929b405611bb4392c3ff58e690b51f9" translate="yes" xml:space="preserve">
          <source>Do not use this function when &lt;var&gt;symbol&lt;/var&gt; refers to a lexical variable.</source>
          <target state="translated">&lt;var&gt;symbol&lt;/var&gt; が字句変数を参照している場合は、この関数を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="73b395364dbc1c5e16423699afae417ede5f4983" translate="yes" xml:space="preserve">
          <source>Do not write an &lt;code&gt;interactive&lt;/code&gt; spec in the definition; &lt;code&gt;define-derived-mode&lt;/code&gt; does that automatically.</source>
          <target state="translated">定義に &lt;code&gt;interactive&lt;/code&gt; 仕様を記述しないでください。 &lt;code&gt;define-derived-mode&lt;/code&gt; はそれを自動的に行います。</target>
        </trans-unit>
        <trans-unit id="8848a365d884ff7da783abf7b8547724681f6af6" translate="yes" xml:space="preserve">
          <source>Do not write an idle timer function containing a loop which does a certain amount of processing each time around, and exits when &lt;code&gt;(input-pending-p)&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. This approach seems very natural but has two problems:</source>
          <target state="translated">毎回一定量の処理を行い、 &lt;code&gt;(input-pending-p)&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外のときに終了するループを含むアイドルタイマー関数を記述しないでください。このアプローチは非常に自然に見えますが、2つの問題があります。</target>
        </trans-unit>
        <trans-unit id="ecc1f12a5d5fc23f4a355fb24545320c8e3faf93" translate="yes" xml:space="preserve">
          <source>Do nothing and return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">何もせずに &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0fe179966cdf99fd145baab1e3cb6283cb78952b" translate="yes" xml:space="preserve">
          <source>Do take the action being considered&amp;mdash;in other words, &amp;ldquo;yes&amp;rdquo;.</source>
          <target state="translated">検討中の行動、つまり「はい」を実行してください。</target>
        </trans-unit>
        <trans-unit id="c16faaa225dcafeaef3dfc125d73ae423bdd28a8" translate="yes" xml:space="preserve">
          <source>Do the work in the expansion, not in the macro.</source>
          <target state="translated">マクロではなく、エキスパンションで仕事をしましょう。</target>
        </trans-unit>
        <trans-unit id="326027f70bf51bce3001c234d43eb5ac5438b99d" translate="yes" xml:space="preserve">
          <source>Document Object Model</source>
          <target state="translated">ドキュメントオブジェクトモデル</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="16f4a9e55f34c4d58fb0062a86313f87e2869310" translate="yes" xml:space="preserve">
          <source>Documentation Basics</source>
          <target state="translated">ドキュメンテーションの基本</target>
        </trans-unit>
        <trans-unit id="aa7ad8f8b8acaa1d720733bcf9ea66f81693f3ac" translate="yes" xml:space="preserve">
          <source>Documentation Strings and Compilation</source>
          <target state="translated">ドキュメントの文字列とコンパイル</target>
        </trans-unit>
        <trans-unit id="2202abdde612c0f1e3b85911661648863494b572" translate="yes" xml:space="preserve">
          <source>Documentation Strings of Functions</source>
          <target state="translated">ドキュメント 関数の文字列</target>
        </trans-unit>
        <trans-unit id="e00e04541fd52506ed471e4a08e3e91b486eb0d1" translate="yes" xml:space="preserve">
          <source>Documentation strings can contain special &lt;em&gt;key substitution sequences&lt;/em&gt;, referring to key bindings which are looked up only when the user views the documentation. This allows the help commands to display the correct keys even if a user rearranges the default key bindings. See &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;.</source>
          <target state="translated">ドキュメント文字列には、ユーザーがドキュメントを表示したときにのみ検索されるキーバインディングを参照する、特別な&lt;em&gt;キー置換シーケンスを&lt;/em&gt;含めることができます。これにより、ユーザーがデフォルトのキーバインディングを再配置した場合でも、ヘルプコマンドで正しいキーを表示できます。&lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;ドキュメントのキーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="321ed5bb074c2e5f7e8f7c850470287c3ff944f6" translate="yes" xml:space="preserve">
          <source>Doing the unpacking and packing.</source>
          <target state="translated">荷解きと荷造りをすること。</target>
        </trans-unit>
        <trans-unit id="4705b5bfe5049cec50beab7a2d0425febd06b20f" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t autoload a user option just so that a user can set it.</source>
          <target state="translated">ユーザーが設定できるようにするためだけに、ユーザーオプションを自動ロードしないでください。</target>
        </trans-unit>
        <trans-unit id="26c5736246d86f0c4f54f6c7e6941770ceff1a20" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t display a cursor.</source>
          <target state="translated">カーソルを表示しないでください。</target>
        </trans-unit>
        <trans-unit id="1a1da393bb24789b8e9323cce07f89f23e04c2db" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t display any of these fringe icons.</source>
          <target state="translated">これらのフリンジアイコンは表示しないでください。</target>
        </trans-unit>
        <trans-unit id="f3949fa329f9a33a321f2ce2d34398cea7feea8c" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t display the character.</source>
          <target state="translated">キャラクターを表示しないでください。</target>
        </trans-unit>
        <trans-unit id="6d5a07409d3617859b93028cf71987f644db427b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t draw a box.</source>
          <target state="translated">箱を描かないでください。</target>
        </trans-unit>
        <trans-unit id="f85901d8ebc3fb6397aa8cb40e097529408d9e4a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t enter the debugger when the current frame is exited. This cancels a</source>
          <target state="translated">現在のフレームが終了するときは、デバッガーに入らないでください。これはキャンセルします</target>
        </trans-unit>
        <trans-unit id="2f0eaa1b48bf688804d628fd8fce75d64b49fe1a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t evaluate the macro arguments too many times. Don&amp;rsquo;t hide the user&amp;rsquo;s variables.</source>
          <target state="translated">マクロ引数を何度も評価しないでください。ユーザーの変数を非表示にしないでください。</target>
        </trans-unit>
        <trans-unit id="31b646a672019b0c4af4c0b7f4c1856b94bee872" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t evaluate them; put them in the expansion.</source>
          <target state="translated">それらを評価しないでください。それらを拡張に入れます。</target>
        </trans-unit>
        <trans-unit id="e1828f6d8c73bb91bc991f489215eb6cd85762ce" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t set any variables.</source>
          <target state="translated">変数を設定しないでください。</target>
        </trans-unit>
        <trans-unit id="38f9a54be0de8b49258207992a0946a1289c706a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try concatenating a slash by hand, as in</source>
          <target state="translated">のように、スラッシュを手で連結しようとしないでください</target>
        </trans-unit>
        <trans-unit id="b5e3187b1d52b50f6dbf3d965c086b56ff0703fe" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t underline.</source>
          <target state="translated">下線を付けないでください。</target>
        </trans-unit>
        <trans-unit id="f6300044f6ffbcf976164b47e57e2db1b5073d5d" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use both &lt;code&gt;:height&lt;/code&gt; and &lt;code&gt;:relative-height&lt;/code&gt; together.</source>
          <target state="translated">&lt;code&gt;:height&lt;/code&gt; と &lt;code&gt;:relative-height&lt;/code&gt; の両方を一緒に使用しないでください。</target>
        </trans-unit>
        <trans-unit id="ad430b7229cfa9b750fe8038c38ff80cb008dc53" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use this function in programs, since it prints a message in the echo area; use &lt;code&gt;set-buffer-modified-p&lt;/code&gt; (above) instead.</source>
          <target state="translated">この関数はエコー領域にメッセージを出力するため、プログラムでは使用しないでください。使用 &lt;code&gt;set-buffer-modified-p&lt;/code&gt; （上）の代わり。</target>
        </trans-unit>
        <trans-unit id="cc7db9c5dfabcab9035d404eaaa9481ee3407c1f" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use this function to check whether there is &lt;em&gt;no&lt;/em&gt; window in &lt;var&gt;direction&lt;/var&gt;. Calling &lt;code&gt;window-at-side-p&lt;/code&gt; described above is a much more efficient way to do that.</source>
          <target state="translated">この関数を使用して、 &lt;var&gt;direction&lt;/var&gt; ウィンドウが&lt;em&gt;ない&lt;/em&gt;かどうかを確認しないでください。上記の &lt;code&gt;window-at-side-p&lt;/code&gt; を呼び出すことは、それを行うためのはるかに効率的な方法です。</target>
        </trans-unit>
        <trans-unit id="a48e83c50db44f43204ee0643f746402918672df" translate="yes" xml:space="preserve">
          <source>Dotted Pair Notation</source>
          <target state="translated">ドットペアひょうきほう</target>
        </trans-unit>
        <trans-unit id="293dc3c8d0dbe616ddc284ca6435d89b71caeb67" translate="yes" xml:space="preserve">
          <source>Double and triple click (or drag, or down).</source>
          <target state="translated">ダブルクリック、トリプルクリック(またはドラッグ、下方向)。</target>
        </trans-unit>
        <trans-unit id="84382f3edb5e487df1ec05164b26f0e6a7feb2e4" translate="yes" xml:space="preserve">
          <source>Dozens of Lisp implementations have been built over the years, each with its own idiosyncrasies. Many of them were inspired by Maclisp, which was written in the 1960s at MIT&amp;rsquo;s Project MAC. Eventually the implementers of the descendants of Maclisp came together and developed a standard for Lisp systems, called Common Lisp. In the meantime, Gerry Sussman and Guy Steele at MIT developed a simplified but very powerful dialect of Lisp, called Scheme.</source>
          <target state="translated">何十ものLisp実装が何年にもわたって構築されており、それぞれに独自の特異性があります。それらの多くは、1960年代にMITのProjectMACで作成されたMaclispに触発されました。最終的に、Maclispの子孫の実装者が集まり、CommonLispと呼ばれるLispシステムの標準を開発しました。その間に、MITのGerrySussmanとGuySteeleは、Schemeと呼ばれるLispの単純化された非常に強力な方言を開発しました。</target>
        </trans-unit>
        <trans-unit id="aec85e07254e33572c8e500ff1fdafce3c6331d3" translate="yes" xml:space="preserve">
          <source>Drag Events</source>
          <target state="translated">ドラッグイベント</target>
        </trans-unit>
        <trans-unit id="c0ea9dbe7ad5c10534189f39f164e8c765c4d655" translate="yes" xml:space="preserve">
          <source>Drag and Drop</source>
          <target state="translated">ドラッグ&amp;ドロップ</target>
        </trans-unit>
        <trans-unit id="d59e660c0102692bbdf50415e3070a2122e31ad1" translate="yes" xml:space="preserve">
          <source>Draw a box with lines of width 1, in color &lt;var&gt;color&lt;/var&gt;.</source>
          <target state="translated">幅1の線で色 &lt;var&gt;color&lt;/var&gt; ボックスを描画します。</target>
        </trans-unit>
        <trans-unit id="2977a14b36f4f73976adce10afe1d0abe18d8852" translate="yes" xml:space="preserve">
          <source>Draw a box with lines of width 1, in the foreground color.</source>
          <target state="translated">幅1の線でボックスを描画します。</target>
        </trans-unit>
        <trans-unit id="fa87fe236b7b4a06cff97b01c6203ec74d5702b9" translate="yes" xml:space="preserve">
          <source>Draw a horizontal line from the current point to the first element in &lt;var&gt;x-coordinates&lt;/var&gt;. Specifying multiple coordinates is possible, although usually this doesn&amp;rsquo;t make sense.</source>
          <target state="translated">現在のポイントから &lt;var&gt;x-coordinates&lt;/var&gt; 最初の要素まで水平線を引きます。複数の座標を指定することは可能ですが、通常これは意味がありません。</target>
        </trans-unit>
        <trans-unit id="fc96b5ad985774d64b653e36cdab50823307cf58" translate="yes" xml:space="preserve">
          <source>Draw a line from the current point to the first element in &lt;var&gt;points&lt;/var&gt;, a list of X/Y position pairs. If more than one point is specified, draw a polyline.</source>
          <target state="translated">最初の要素に現在の点から線を引く &lt;var&gt;points&lt;/var&gt; 、X / Y位置のペアのリスト。複数の点を指定する場合は、ポリラインを描画します。</target>
        </trans-unit>
        <trans-unit id="8f19cba7d8259572e26e84b5303e9f9c55b3cbc4" translate="yes" xml:space="preserve">
          <source>Draw vertical lines.</source>
          <target state="translated">垂直線を引く。</target>
        </trans-unit>
        <trans-unit id="8c8cb95ea0721106cfd07aa2040778dfd5b9815e" translate="yes" xml:space="preserve">
          <source>Drawing Lists as Box Diagrams</source>
          <target state="translated">ボックス図としてのリストの描画</target>
        </trans-unit>
        <trans-unit id="d356c0bc1d2b6c148f709aa3bfd04ac3facca290" translate="yes" xml:space="preserve">
          <source>Drawing a horizontal line through a menu.</source>
          <target state="translated">メニューを介して水平線を描画します。</target>
        </trans-unit>
        <trans-unit id="e3aff30d699314de92ad6b8497c8dbae5b4c0f0c" translate="yes" xml:space="preserve">
          <source>Drawing pictures of lists.</source>
          <target state="translated">リストの絵を描く。</target>
        </trans-unit>
        <trans-unit id="0922ad7bde79830b3446a49a9f96bc185eb8ce22" translate="yes" xml:space="preserve">
          <source>Dropping (see &lt;a href=&quot;drag-and-drop#Drag-and-Drop&quot;&gt;Drag and Drop&lt;/a&gt;) on child frames is not guaranteed to work on all window-systems. Some will drop the object on the parent frame or on some ancestor instead.</source>
          <target state="translated">子フレームへのドロップ（&lt;a href=&quot;drag-and-drop#Drag-and-Drop&quot;&gt;ドラッグアンドドロップを&lt;/a&gt;参照）は、すべてのウィンドウシステムで機能することが保証されているわけではありません。代わりに、オブジェクトを親フレームまたは一部の祖先にドロップするものもあります。</target>
        </trans-unit>
        <trans-unit id="0d96e0007e7a77f7cd3933f5aef11df2f10c72d1" translate="yes" xml:space="preserve">
          <source>Dumping Emacs uses a special value of &lt;code&gt;load-path&lt;/code&gt;. If you use a</source>
          <target state="translated">Emacsのダンプは &lt;code&gt;load-path&lt;/code&gt; の特別な値を使用します。を使用する場合</target>
        </trans-unit>
        <trans-unit id="95fa8648a285817054eb4fea3aef35dede41872f" translate="yes" xml:space="preserve">
          <source>During completion for the commands &lt;code&gt;describe-variable&lt;/code&gt; and &lt;code&gt;describe-function&lt;/code&gt;, Emacs will try to load files which may contain definitions matching the prefix being completed. The variable &lt;code&gt;definition-prefixes&lt;/code&gt; holds a hashtable which maps a prefix to the corresponding list of files to load for it. Entries to this mapping are added by calls to &lt;code&gt;register-definition-prefixes&lt;/code&gt; which are generated by &lt;code&gt;update-file-autoloads&lt;/code&gt; (see &lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;). Files which don&amp;rsquo;t contain any definitions worth loading (test files, for examples), should set &lt;code&gt;autoload-compute-prefixes&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; as a file-local variable.</source>
          <target state="translated">コマンド &lt;code&gt;describe-variable&lt;/code&gt; および &lt;code&gt;describe-function&lt;/code&gt; の完了中に、Emacsは完了しているプレフィックスに一致する定義を含む可能性のあるファイルをロードしようとします。変数 &lt;code&gt;definition-prefixes&lt;/code&gt; は、プレフィックスをロードするファイルの対応するリストにマップするハッシュテーブルを保持します。このマッピングへのエントリは、 &lt;code&gt;update-file-autoloads&lt;/code&gt; によって生成される &lt;code&gt;register-definition-prefixes&lt;/code&gt; の呼び出しによって追加されます（&lt;a href=&quot;autoload#Autoload&quot;&gt;Autoloadを&lt;/a&gt;参照）。ロードする価値のある定義が含まれていないファイル（たとえば、テストファイル）では、 &lt;code&gt;autoload-compute-prefixes&lt;/code&gt; をファイルローカル変数として &lt;code&gt;nil&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="86c088d03b10c53d3f0537037e709113573ae6fe" translate="yes" xml:space="preserve">
          <source>During decoding, the translation table&amp;rsquo;s translations are applied to the characters that result from ordinary decoding. If a coding system has the property &lt;code&gt;:decode-translation-table&lt;/code&gt;, that specifies the translation table to use, or a list of translation tables to apply in sequence. (This is a property of the coding system, as returned by &lt;code&gt;coding-system-get&lt;/code&gt;, not a property of the symbol that is the coding system&amp;rsquo;s name. See &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;Basic Concepts of Coding Systems&lt;/a&gt;.) Finally, if &lt;code&gt;standard-translation-table-for-decode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the resulting characters are translated by that table.</source>
          <target state="translated">デコード中、変換テーブルの変換は、通常のデコードの結果の文字に適用されます。コーディングシステムにプロパティ &lt;code&gt;:decode-translation-table&lt;/code&gt; がある場合、これは使用する変換テーブル、または順番に適用する変換テーブルのリストを指定します。 （これは、 &lt;code&gt;coding-system-get&lt;/code&gt; によって返されるコーディングシステムのプロパティであり、コーディングシステムの名前であるシンボルのプロパティではありません。コーディングシステムの&lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;基本概念を&lt;/a&gt;参照してください。）最後に、if &lt;code&gt;standard-translation-table-for-decode&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; 以外であり、結果の文字はそのテーブルによって変換されます。</target>
        </trans-unit>
        <trans-unit id="1e2d6913f37cab64feb54fd1decfc9d9cf80a826" translate="yes" xml:space="preserve">
          <source>During encoding, the translation table&amp;rsquo;s translations are applied to the characters in the buffer, and the result of translation is actually encoded. If a coding system has property &lt;code&gt;:encode-translation-table&lt;/code&gt;, that specifies the translation table to use, or a list of translation tables to apply in sequence. In addition, if the variable &lt;code&gt;standard-translation-table-for-encode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the translation table to use for translating the result.</source>
          <target state="translated">エンコード中に、変換テーブルの変換がバッファ内の文字に適用され、変換の結果が実際にエンコードされます。コーディングシステムにプロパティ &lt;code&gt;:encode-translation-table&lt;/code&gt; がある場合、これは使用する変換テーブル、または順番に適用する変換テーブルのリストを指定します。さらに、変数 &lt;code&gt;standard-translation-table-for-encode&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、結果の変換に使用する変換テーブルを指定します。</target>
        </trans-unit>
        <trans-unit id="a60e2707304846a25ff125d19667ad97d4b8f7cf" translate="yes" xml:space="preserve">
          <source>During the search, such overlays are made temporarily visible by temporarily modifying their invisible and intangible properties. If you want this to be done differently for a certain overlay, give it an &lt;code&gt;isearch-open-invisible-temporary&lt;/code&gt; property which is a function. The function is called with two arguments: the first is the overlay, and the second is &lt;code&gt;nil&lt;/code&gt; to make the overlay visible, or &lt;code&gt;t&lt;/code&gt; to make it invisible again.</source>
          <target state="translated">検索中、このようなオーバーレイは、非表示および無形のプロパティを一時的に変更することにより、一時的に表示されます。特定のオーバーレイに対してこれを異なる方法で実行する場合は、関数である &lt;code&gt;isearch-open-invisible-temporary&lt;/code&gt; プロパティを指定します。関数は2つの引数で呼び出されます。1つ目はオーバーレイで、2つ目はオーバーレイを表示するための &lt;code&gt;nil&lt;/code&gt; 、またはオーバーレイを再び非表示にするための &lt;code&gt;t&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="46041d7b3a149a23812e4e933506aabb4a9ab2f4" translate="yes" xml:space="preserve">
          <source>Dynamic Binding</source>
          <target state="translated">ダイナミックバインディング</target>
        </trans-unit>
        <trans-unit id="128a473aba996b2af1d499c3022127709683f3bd" translate="yes" xml:space="preserve">
          <source>Dynamic Loading of Individual Functions</source>
          <target state="translated">個々の関数の動的ロード</target>
        </trans-unit>
        <trans-unit id="cc9263394df1557dab9048b7bcdb4148d36bb71b" translate="yes" xml:space="preserve">
          <source>Dynamic binding is implemented in Emacs Lisp in a simple way. Each symbol has a value cell, which specifies its current dynamic value (or absence of value). See &lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;Symbol Components&lt;/a&gt;. When a symbol is given a dynamic local binding, Emacs records the contents of the value cell (or absence thereof) in a stack, and stores the new local value in the value cell. When the binding construct finishes executing, Emacs pops the old value off the stack, and puts it in the value cell.</source>
          <target state="translated">動的バインディングは、EmacsLispに簡単な方法で実装されています。各シンボルには、現在の動的値（または値がないこと）を指定する値セルがあります。&lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;シンボルコンポーネントを&lt;/a&gt;参照してください。シンボルに動的ローカルバインディングが与えられると、Emacsは値セルの内容（またはその欠如）をスタックに記録し、新しいローカル値を値セルに格納します。バインディングコンストラクトの実行が終了すると、Emacsは古い値をスタックからポップし、値セルに配置します。</target>
        </trans-unit>
        <trans-unit id="9ae7c0f42cd07828f1bf590c8d23d55e60e3fd2c" translate="yes" xml:space="preserve">
          <source>Dynamic bindings have dynamic scope and extent, as shown by the following example:</source>
          <target state="translated">動的バインディングは、次の例に示すように、動的なスコープとエクステントを持っています。</target>
        </trans-unit>
        <trans-unit id="6a2d23ac0a1a60ebb1567eb0b607f430e882ea62" translate="yes" xml:space="preserve">
          <source>Dynamic inclusion</source>
          <target state="translated">ダイナミックインクルージョン</target>
        </trans-unit>
        <trans-unit id="85dace7cbccb6288ac9c34034ace72c0ba1992e6" translate="yes" xml:space="preserve">
          <source>Dynamic loading of documentation strings from byte-compiled files is determined, at compile time, for each byte-compiled file. It can be disabled via the option &lt;code&gt;byte-compile-dynamic-docstrings&lt;/code&gt;.</source>
          <target state="translated">バイトコンパイルされたファイルからのドキュメント文字列の動的ロードは、コンパイル時に、バイトコンパイルされたファイルごとに決定されます。オプション &lt;code&gt;byte-compile-dynamic-docstrings&lt;/code&gt; を使用して無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="cddf8eda8cba15edd9de2d208896a5bbd1beb8e2" translate="yes" xml:space="preserve">
          <source>Dynamic loading of documentation strings.</source>
          <target state="translated">ドキュメント文字列の動的読み込み。</target>
        </trans-unit>
        <trans-unit id="2d6fdaf9ca04871afe2d95ccf757891e17b11eb5" translate="yes" xml:space="preserve">
          <source>Dynamic loading of individual functions.</source>
          <target state="translated">個々の機能を動的にロードします。</target>
        </trans-unit>
        <trans-unit id="75cad57a98400009355757c7d7d7bcdbea9e4c71" translate="yes" xml:space="preserve">
          <source>Dynamically Loaded Libraries</source>
          <target state="translated">動的にロードされたライブラリ</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="12ef1e2dc47a1a341b42f2ca521c6666dbea7d5a" translate="yes" xml:space="preserve">
          <source>EAT</source>
          <target state="translated">EAT</target>
        </trans-unit>
        <trans-unit id="816d1cf7923a918e5ec217f7d33d310e255ecaff" translate="yes" xml:space="preserve">
          <source>EIEIO</source>
          <target state="translated">EIEIO</target>
        </trans-unit>
        <trans-unit id="35252c2233b1689952b37966f3d98ef79579b119" translate="yes" xml:space="preserve">
          <source>EMACS_LIMB_MAX</source>
          <target state="translated">EMACS_LIMB_MAX</target>
        </trans-unit>
        <trans-unit id="cda4aab5bcbd0ed38717196ad5a3684cd59490a3" translate="yes" xml:space="preserve">
          <source>EOF</source>
          <target state="translated">EOF</target>
        </trans-unit>
        <trans-unit id="d1fc7fa24d222f6128354dd046b978be46a5cd49" translate="yes" xml:space="preserve">
          <source>ERT: Emacs Lisp Regression Testing</source>
          <target state="translated">ERT:Emacs Lisp回帰テスト</target>
        </trans-unit>
        <trans-unit id="042b890a506cb1f86b057af9f2065c60f0543326" translate="yes" xml:space="preserve">
          <source>ESC</source>
          <target state="translated">ESC</target>
        </trans-unit>
        <trans-unit id="02ca6798be3680f2fe46f378f7bd1739974388a2" translate="yes" xml:space="preserve">
          <source>ESC O</source>
          <target state="translated">エスケープオー</target>
        </trans-unit>
        <trans-unit id="185d2e2d796a6ed477b87b5299821b76c9453398" translate="yes" xml:space="preserve">
          <source>ESC O P</source>
          <target state="translated">ESC O P</target>
        </trans-unit>
        <trans-unit id="efea0065f1cd59fe153098de1076d7ad99a795c6" translate="yes" xml:space="preserve">
          <source>ESC [</source>
          <target state="translated">ESC [......</target>
        </trans-unit>
        <trans-unit id="7c8614de8fb44c996aec575dd8405fad70b3c112" translate="yes" xml:space="preserve">
          <source>ESC a</source>
          <target state="translated">エスケープア</target>
        </trans-unit>
        <trans-unit id="11daa9e0c6c68f082faf8d6db21ec8f42d4afa0c" translate="yes" xml:space="preserve">
          <source>ESC b</source>
          <target state="translated">エスシービー</target>
        </trans-unit>
        <trans-unit id="adf9a7197eabefbcbc072a3d07809c0f776d2cb6" translate="yes" xml:space="preserve">
          <source>ESCESC</source>
          <target state="translated">ESCESC</target>
        </trans-unit>
        <trans-unit id="2b8d8e576670837bf59ee1e2936925a3bbca393c" translate="yes" xml:space="preserve">
          <source>ESCF1</source>
          <target state="translated">ESCF1</target>
        </trans-unit>
        <trans-unit id="15a145a0865fc87452b6849492a43aa1f081119e" translate="yes" xml:space="preserve">
          <source>ESCend</source>
          <target state="translated">ESCend</target>
        </trans-unit>
        <trans-unit id="e56d6e9c1a313add08aaf693766cfaa8dbb47041" translate="yes" xml:space="preserve">
          <source>EST</source>
          <target state="translated">EST</target>
        </trans-unit>
        <trans-unit id="effa508f014d094d733f5635009cbe6601d52a75" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;bitmap&lt;/var&gt; should be a symbol specifying the fringe bitmap to be displayed for that logical cursor type. See &lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;Fringe Bitmaps&lt;/a&gt;.</source>
          <target state="translated">各 &lt;var&gt;bitmap&lt;/var&gt; は、その論理カーソルタイプに対して表示されるフリンジビットマップを指定するシンボルである必要があります。&lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;フリンジビットマップを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="266e2dc31b4b84e4b89de45f40ae556c79fb08c2" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;bitmaps&lt;/var&gt; value may be a list of symbols &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;
&lt;var&gt;right&lt;/var&gt; [&lt;var&gt;left1&lt;/var&gt; &lt;var&gt;right1&lt;/var&gt;])&lt;/code&gt;. The &lt;var&gt;left&lt;/var&gt; and &lt;var&gt;right&lt;/var&gt; symbols specify the bitmaps shown in the left and/or right fringe, for the specific indicator. &lt;var&gt;left1&lt;/var&gt; and &lt;var&gt;right1&lt;/var&gt; are specific to the &lt;code&gt;bottom&lt;/code&gt; and &lt;code&gt;top-bottom&lt;/code&gt; indicators, and are used to indicate that the last text line has no final newline. Alternatively, &lt;var&gt;bitmaps&lt;/var&gt; may be a single symbol which is used in both left and right fringes.</source>
          <target state="translated">各 &lt;var&gt;bitmaps&lt;/var&gt; 値は、シンボルのリスト &lt;code&gt;(&lt;var&gt;left&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; [&lt;var&gt;left1&lt;/var&gt; &lt;var&gt;right1&lt;/var&gt;])&lt;/code&gt; ます。 &lt;var&gt;left&lt;/var&gt; と &lt;var&gt;right&lt;/var&gt; 記号は、特定の指標のために、左および/または右縁に示すビットマップを指定します。 &lt;var&gt;left1&lt;/var&gt; と &lt;var&gt;right1&lt;/var&gt; は、 &lt;code&gt;bottom&lt;/code&gt; と &lt;code&gt;top-bottom&lt;/code&gt; インジケーターに固有であり、最後のテキスト行に最後の改行がないことを示すために使用されます。あるいは、 &lt;var&gt;bitmaps&lt;/var&gt; は、左右のフリンジの両方で使用される単一のシンボルである場合があります。</target>
        </trans-unit>
        <trans-unit id="166174c1e575a285ef181abdaa07134f0e9f5c5f" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;cursor-type&lt;/var&gt; should be one of &lt;code&gt;box&lt;/code&gt;, &lt;code&gt;hollow&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt;, &lt;code&gt;hbar&lt;/code&gt;, or &lt;code&gt;hollow-small&lt;/code&gt;. The first four have the same meanings as in the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter (see &lt;a href=&quot;cursor-parameters#Cursor-Parameters&quot;&gt;Cursor Parameters&lt;/a&gt;). The &lt;code&gt;hollow-small&lt;/code&gt; type is used instead of &lt;code&gt;hollow&lt;/code&gt; when the normal &lt;code&gt;hollow-rectangle&lt;/code&gt; bitmap is too tall to fit on a specific display line.</source>
          <target state="translated">各 &lt;var&gt;cursor-type&lt;/var&gt; は、 &lt;code&gt;box&lt;/code&gt; 、 &lt;code&gt;hollow&lt;/code&gt; 、 &lt;code&gt;bar&lt;/code&gt; 、 &lt;code&gt;hbar&lt;/code&gt; 、または &lt;code&gt;hollow-small&lt;/code&gt; のいずれかである必要があります。最初の4つは、 &lt;code&gt;cursor-type&lt;/code&gt; フレームパラメータと同じ意味です（&lt;a href=&quot;cursor-parameters#Cursor-Parameters&quot;&gt;カーソルパラメータを&lt;/a&gt;参照）。 &lt;code&gt;hollow-small&lt;/code&gt; 型が代わりに使用される &lt;code&gt;hollow&lt;/code&gt; 通常とき &lt;code&gt;hollow-rectangle&lt;/code&gt; ビットマップは、特定の表示ラインに収まらないほど背が高いです。</target>
        </trans-unit>
        <trans-unit id="6cb043c5d2a35e5e89877851f720861156b38447" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;indicator&lt;/var&gt; should be one of the following symbols:</source>
          <target state="translated">各 &lt;var&gt;indicator&lt;/var&gt; は、次の記号のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="214ed5e3cc5ef10a56ac63989e2bed399edecb13" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;item&lt;/var&gt; should be a cons cell, &lt;code&gt;(&lt;var&gt;line&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;line&lt;/var&gt; is a string and &lt;var&gt;value&lt;/var&gt; is the value to return if that &lt;var&gt;line&lt;/var&gt; is chosen. Unlike in a menu keymap, a &lt;code&gt;nil&lt;/code&gt;&lt;var&gt;value&lt;/var&gt; does not make the menu item non-selectable. Alternatively, each &lt;var&gt;item&lt;/var&gt; can be a string rather than a cons cell; this makes a non-selectable menu item.</source>
          <target state="translated">各 &lt;var&gt;item&lt;/var&gt; コンスセル、でなければならない &lt;code&gt;(&lt;var&gt;line&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;line&lt;/var&gt; 文字列であり、 &lt;var&gt;value&lt;/var&gt; その場合に返す値である &lt;var&gt;line&lt;/var&gt; 選択されます。メニューキーマップとは異なり、 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;value&lt;/var&gt; はメニュー項目を選択不能にすることはありません。または、各 &lt;var&gt;item&lt;/var&gt; をconsセルではなく文字列にすることもできます。これにより、メニュー項目が選択できなくなります。</target>
        </trans-unit>
        <trans-unit id="c14a95be6848d8cce2e11a5b8c2bade65e785bb6" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;pattern&lt;/var&gt; has to be a &lt;em&gt;pcase pattern&lt;/em&gt;, which can use either one of the core patterns defined below, or one of the patterns defined via &lt;code&gt;pcase-defmacro&lt;/code&gt; (see &lt;a href=&quot;extending-pcase#Extending-pcase&quot;&gt;Extending pcase&lt;/a&gt;).</source>
          <target state="translated">各 &lt;var&gt;pattern&lt;/var&gt; は&lt;em&gt;pcaseパターン&lt;/em&gt;である必要があり、以下で定義されているコアパターンの1つ、または &lt;code&gt;pcase-defmacro&lt;/code&gt; を介して定義されているパターンの1つを使用できます（&lt;a href=&quot;extending-pcase#Extending-pcase&quot;&gt;pcaseの拡張を参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e88d2cad4124f0d2b0ffdde305341b3395b3a5c5" translate="yes" xml:space="preserve">
          <source>Each Emacs Lisp package should have one main customization group which contains all the options, faces and other groups in the package. If the package has a small number of options and faces, use just one group and put everything in it. When there are more than twenty or so options and faces, then you should structure them into subgroups, and put the subgroups under the package&amp;rsquo;s main customization group. It is OK to put some of the options and faces in the package&amp;rsquo;s main group alongside the subgroups.</source>
          <target state="translated">各EmacsLispパッケージには、パッケージ内のすべてのオプション、面、およびその他のグループを含む1つのメインカスタマイズグループが必要です。パッケージにオプションと面の数が少ない場合は、1つのグループだけを使用して、すべてをその中に入れます。 20を超えるオプションと面がある場合は、それらをサブグループに構造化し、サブグループをパッケージのメインのカスタマイズグループの下に配置する必要があります。一部のオプションと面をサブグループと一緒にパッケージのメイングループに配置しても問題ありません。</target>
        </trans-unit>
        <trans-unit id="5f6033aab130af56e580c9dd562b7a59876a864f" translate="yes" xml:space="preserve">
          <source>Each Emacs window (aside from minibuffer windows) typically has a mode line at the bottom, which displays status information about the buffer displayed in the window. The mode line contains information about the buffer, such as its name, associated file, depth of recursive editing, and major and minor modes. A window can also have a &lt;em&gt;header line&lt;/em&gt;, which is much like the mode line but appears at the top of the window.</source>
          <target state="translated">各Emacsウィンドウ（ミニバッファーウィンドウを除く）には通常、下部にモードラインがあり、ウィンドウに表示されているバッファーに関するステータス情報が表示されます。モード行には、名前、関連ファイル、再帰編集の深さ、メジャーモードとマイナーモードなど、バッファーに関する情報が含まれています。ウィンドウには&lt;em&gt;ヘッダー行を&lt;/em&gt;含めることもできます。これはモード行によく似ていますが、ウィンドウの上部に表示されます。</target>
        </trans-unit>
        <trans-unit id="8c6317ebe0f6d8aa4fb2bae37cd27d1bb0f9123b" translate="yes" xml:space="preserve">
          <source>Each alist element corresponds to one archive, and should have the form &lt;code&gt;(&lt;var&gt;id&lt;/var&gt; . &lt;var&gt;location&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;id&lt;/var&gt; is the name of the archive (a string) and &lt;var&gt;location&lt;/var&gt; is its &lt;em&gt;base location&lt;/em&gt; (a string).</source>
          <target state="translated">各連想リスト要素は、1つのアーカイブに対応し、フォームなければならない &lt;code&gt;(&lt;var&gt;id&lt;/var&gt; . &lt;var&gt;location&lt;/var&gt;)&lt;/code&gt; 、 &lt;var&gt;id&lt;/var&gt; アーカイブ（列）の名前であり、 &lt;var&gt;location&lt;/var&gt; そのある&lt;em&gt;拠点&lt;/em&gt;（文字列）。</target>
        </trans-unit>
        <trans-unit id="d4f07dd626ea5ff28aeefdca103d4e94ee03a16e" translate="yes" xml:space="preserve">
          <source>Each argument in &lt;var&gt;specs&lt;/var&gt; has the form of a property list, and each one should specify at least the &lt;code&gt;:type&lt;/code&gt; property and either the &lt;code&gt;:file&lt;/code&gt; or the &lt;code&gt;:data&lt;/code&gt; property. The value of &lt;code&gt;:type&lt;/code&gt; should be a symbol specifying the image type, the value of &lt;code&gt;:file&lt;/code&gt; is the file to load the image from, and the value of &lt;code&gt;:data&lt;/code&gt; is a string containing the actual image data. Here is an example:</source>
          <target state="translated">&lt;var&gt;specs&lt;/var&gt; 各引数はプロパティリストの形式であり、それぞれが少なくとも &lt;code&gt;:type&lt;/code&gt; プロパティと、 &lt;code&gt;:file&lt;/code&gt; または &lt;code&gt;:data&lt;/code&gt; プロパティのいずれかを指定する必要があります。 &lt;code&gt;:type&lt;/code&gt; の値は画像タイプを指定するシンボルである必要があり、 &lt;code&gt;:file&lt;/code&gt; の値は画像をロードするファイルであり、 &lt;code&gt;:data&lt;/code&gt; の値は実際の画像データを含む文字列です。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="bdf9173b5972e775fde1cf136d947eea39e89247" translate="yes" xml:space="preserve">
          <source>Each buffer has a &lt;em&gt;category table&lt;/em&gt; which records which categories are defined and also which characters belong to each category. Each category table defines its own categories, but normally these are initialized by copying from the standard categories table, so that the standard categories are available in all modes.</source>
          <target state="translated">各バッファには、定義されているカテゴリと各カテゴリに属する​​文字を記録する&lt;em&gt;カテゴリテーブルが&lt;/em&gt;あります。各カテゴリテーブルは独自のカテゴリを定義しますが、通常、これらは標準カテゴリテーブルからコピーすることによって初期化されるため、標準カテゴリはすべてのモードで使用できます。</target>
        </trans-unit>
        <trans-unit id="f89748f49f4b8c3d5fd63441bd60cca9df74bf96" translate="yes" xml:space="preserve">
          <source>Each buffer has a local keymap to override the standard (global) bindings. A minor mode can also override them.</source>
          <target state="translated">各バッファは、標準(グローバル)バインディングをオーバーライドするためのローカルキーマップを持っています。マイナーモードでも、それらをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="5e447b10eb6df01c4e3d0c2a4e80be30c76bc73d" translate="yes" xml:space="preserve">
          <source>Each buffer has a special marker, which is designated &lt;em&gt;the mark&lt;/em&gt;. When a buffer is newly created, this marker exists but does not point anywhere; this means that the mark doesn&amp;rsquo;t exist in that buffer yet. Subsequent commands can set the mark.</source>
          <target state="translated">各バッファには&lt;em&gt;、マーク&lt;/em&gt;と呼ばれる特別なマーカーがあります。バッファが新しく作成されると、このマーカーは存在しますが、どこも指していません。これは、マークがそのバッファにまだ存在しないことを意味します。後続のコマンドでマークを設定できます。</target>
        </trans-unit>
        <trans-unit id="46855e8bf9790b10ba3d7f48ea7bf1808928b7c0" translate="yes" xml:space="preserve">
          <source>Each buffer has a unique name, which is a string. Many of the functions that work on buffers accept either a buffer or a buffer name as an argument. Any argument called &lt;var&gt;buffer-or-name&lt;/var&gt; is of this sort, and an error is signaled if it is neither a string nor a buffer. Any argument called &lt;var&gt;buffer&lt;/var&gt; must be an actual buffer object, not a name.</source>
          <target state="translated">各バッファには、文字列である一意の名前があります。バッファーで機能する関数の多くは、引数としてバッファーまたはバッファー名のいずれかを受け入れます。 &lt;var&gt;buffer-or-name&lt;/var&gt; と呼ばれる引数はすべてこの種のものであり、文字列でもバッファでもない場合はエラーが通知されます。 &lt;var&gt;buffer&lt;/var&gt; と呼ばれる引数は、名前ではなく実際のバッファーオブジェクトである必要があります。</target>
        </trans-unit>
        <trans-unit id="182be56e3b3a51020ca83602b9fc5c377b1a7b76" translate="yes" xml:space="preserve">
          <source>Each buffer has its own major mode, and each major mode has its own idea of the syntax class of various characters. For example, in Lisp mode, the character &amp;lsquo;</source>
          <target state="translated">各バッファには独自のメジャーモードがあり、各メジャーモードにはさまざまな文字の構文クラスに関する独自の考え方があります。たとえば、Lispモードでは、文字 '</target>
        </trans-unit>
        <trans-unit id="29b5c253a0d151a49ff410c88e774910588ae346" translate="yes" xml:space="preserve">
          <source>Each buffer has its own value of point, which is independent of the value of point in other buffers. Each window also has a value of point, which is independent of the value of point in other windows on the same buffer. This is why point can have different values in various windows that display the same buffer. When a buffer appears in only one window, the buffer&amp;rsquo;s point and the window&amp;rsquo;s point normally have the same value, so the distinction is rarely important. See &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;, for more details.</source>
          <target state="translated">各バッファには独自のポイント値があり、他のバッファのポイント値とは無関係です。各ウィンドウにはポイントの値もあります。これは、同じバッファー上の他のウィンドウのポイントの値とは無関係です。これが、同じバッファを表示するさまざまなウィンドウでポイントが異なる値を持つ可能性がある理由です。バッファが1つのウィンドウにのみ表示される場合、通常、バッファのポイントとウィンドウのポイントの値は同じであるため、区別が重要になることはめったにありません。詳細については、&lt;a href=&quot;window-point#Window-Point&quot;&gt;ウィンドウポイントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6088d83a1bfb5707a7c8e330babd382857dc6487" translate="yes" xml:space="preserve">
          <source>Each button has an associated list of properties defining its appearance and behavior, and other arbitrary properties may be used for application specific purposes. The following properties have special meaning to the Button package:</source>
          <target state="translated">各ボタンは、その外観と動作を定義するプロパティの関連リストを持ち、その他の任意のプロパティはアプリケーション固有の目的のために使用することができます。以下のプロパティは Button パッケージにとって特別な意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="47c281267996ad33cafe0a510c7bbab86fa4c24e" translate="yes" xml:space="preserve">
          <source>Each category has a name, which is an</source>
          <target state="translated">各カテゴリには名前があり、これは</target>
        </trans-unit>
        <trans-unit id="ad267f6e9c1b7d73c51055d7770ece8131529a7b" translate="yes" xml:space="preserve">
          <source>Each char-table has a &lt;em&gt;subtype&lt;/em&gt;, a symbol, which serves two purposes:</source>
          <target state="translated">各char-tableには、2つの目的を果たすシンボルである&lt;em&gt;サブタイプ&lt;/em&gt;があります。</target>
        </trans-unit>
        <trans-unit id="6c5be0e6844b629ad423f23ba34a8811a71af497" translate="yes" xml:space="preserve">
          <source>Each character position in a buffer or a string can have a &lt;em&gt;text property list&lt;/em&gt;, much like the property list of a symbol (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;). The properties belong to a particular character at a particular place, such as, the letter &amp;lsquo;</source>
          <target state="translated">バッファまたは文字列内の各文字位置には、シンボルのプロパティリストと同様に、&lt;em&gt;テキストプロパティリストを&lt;/em&gt;含めることができます（&lt;a href=&quot;property-lists#Property-Lists&quot;&gt;プロパティリストを&lt;/a&gt;参照）。プロパティは、文字 'など、特定の場所の特定の文字に属します。</target>
        </trans-unit>
        <trans-unit id="094f0066f73625c09e48be172c8999a5532948d8" translate="yes" xml:space="preserve">
          <source>Each child window can be either a live window, or an internal window (which in turn would have its own child windows). Therefore, each internal window can be thought of as occupying a certain rectangular &lt;em&gt;screen area&lt;/em&gt;&amp;mdash;the union of the areas occupied by the live windows that are ultimately descended from it.</source>
          <target state="translated">各子ウィンドウは、ライブウィンドウまたは内部ウィンドウ（独自の子ウィンドウを持つ）のいずれかになります。したがって、各内部ウィンドウは、特定の長方形の&lt;em&gt;画面領域&lt;/em&gt;を占めると考えることができます。これは、最終的にはそこから派生するライブウィンドウが占める領域の結合です。</target>
        </trans-unit>
        <trans-unit id="7dd2617202e2f0d88eeeb7eafc129bd79afb41b1" translate="yes" xml:space="preserve">
          <source>Each clause in &lt;var&gt;clauses&lt;/var&gt; has the form: &lt;code&gt;(&lt;var&gt;pattern&lt;/var&gt;&amp;nbsp;&lt;var&gt;body-forms&lt;/var&gt;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">各句 &lt;var&gt;clauses&lt;/var&gt; ：フォームがある &lt;code&gt;(&lt;var&gt;pattern&lt;/var&gt;&amp;nbsp;&lt;var&gt;body-forms&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="371b2398ceeeec78348a8871921a9ebac3ed6fc6" translate="yes" xml:space="preserve">
          <source>Each element has the form &lt;code&gt;(&lt;var&gt;level&lt;/var&gt; &lt;var&gt;string&lt;/var&gt;
&lt;var&gt;function&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;level&lt;/var&gt; is the severity level it defines. &lt;var&gt;string&lt;/var&gt; specifies the textual description of this level. &lt;var&gt;string&lt;/var&gt; should use &amp;lsquo;</source>
          <target state="translated">各要素の形式は &lt;code&gt;(&lt;var&gt;level&lt;/var&gt; &lt;var&gt;string&lt;/var&gt; &lt;var&gt;function&lt;/var&gt;)&lt;/code&gt; 。ここで、 &lt;var&gt;level&lt;/var&gt; はそれが定義する重大度レベルです。 &lt;var&gt;string&lt;/var&gt; は、このレベルのテキストによる説明を指定します。 &lt;var&gt;string&lt;/var&gt; は 'を使用する必要があります</target>
        </trans-unit>
        <trans-unit id="54bf49af3c895879d230d0733b0f756348a366f5" translate="yes" xml:space="preserve">
          <source>Each element has the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;number&lt;/var&gt; . &lt;var&gt;rgb&lt;/var&gt;)&lt;/code&gt; or &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;number&lt;/var&gt;)&lt;/code&gt;. Here, &lt;var&gt;name&lt;/var&gt; is the color name, &lt;var&gt;number&lt;/var&gt; is the number used to specify it to the terminal. If present, &lt;var&gt;rgb&lt;/var&gt; is a list of three color values (for red, green, and blue) that says what the color actually looks like.</source>
          <target state="translated">各要素は、フォーム有する &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;number&lt;/var&gt; . &lt;var&gt;rgb&lt;/var&gt;)&lt;/code&gt; 又は &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;number&lt;/var&gt;)&lt;/code&gt; 。ここで、 &lt;var&gt;name&lt;/var&gt; は色名、 &lt;var&gt;number&lt;/var&gt; は端末に指定するための番号です。存在する場合、 &lt;var&gt;rgb&lt;/var&gt; は、色が実際にどのように見えるかを示す3つの色値（赤、緑、および青）のリストです。</target>
        </trans-unit>
        <trans-unit id="83b7a769b44739d88eeb24f5b3657bafc5d91c99" translate="yes" xml:space="preserve">
          <source>Each element in &lt;var&gt;specs&lt;/var&gt; should have the form &lt;code&gt;(&lt;var&gt;property&lt;/var&gt;
&lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt;, which should not be quoted. These have the following effects:</source>
          <target state="translated">&lt;var&gt;specs&lt;/var&gt; 各要素は、引用符で囲まない形式 &lt;code&gt;(&lt;var&gt;property&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; である必要があります。これらには次の効果があります。</target>
        </trans-unit>
        <trans-unit id="247a7be0573252e630ce78d92b936b8015dbca23" translate="yes" xml:space="preserve">
          <source>Each element in the list is a vector of the following form:</source>
          <target state="translated">リストの各要素は、以下の形式のベクトルです。</target>
        </trans-unit>
        <trans-unit id="418f4b46b873574b39cf124bac88f49c2bdd301c" translate="yes" xml:space="preserve">
          <source>Each element in this alist describes one loaded library (including libraries that are preloaded at startup). It is a list whose &lt;small&gt;CAR&lt;/small&gt; is the absolute file name of the library (a string). The rest of the list elements have these forms:</source>
          <target state="translated">このリストの各要素は、ロードされた1つのライブラリ（起動時にプリロードされたライブラリを含む）を記述します。これは、&lt;small&gt;CAR&lt;/small&gt;がライブラリの絶対ファイル名（文字列）であるリストです。残りのリスト要素の形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="344226d58792cbe08f0ee32eb082be5d6582a4c7" translate="yes" xml:space="preserve">
          <source>Each element is a list of the form &lt;code&gt;(&lt;var&gt;library&lt;/var&gt;&amp;nbsp;&lt;var&gt;files&lt;/var&gt;&amp;hellip;)&lt;/code&gt;, where the &lt;code&gt;car&lt;/code&gt; is a symbol representing a supported external library, and the rest are strings giving alternate filenames for that library.</source>
          <target state="translated">各要素はフォーム &lt;code&gt;(&lt;var&gt;library&lt;/var&gt;&amp;nbsp;&lt;var&gt;files&lt;/var&gt;&amp;hellip;)&lt;/code&gt; リストです。ここで、 &lt;code&gt;car&lt;/code&gt; はサポートされている外部ライブラリを表すシンボルであり、残りはそのライブラリの代替ファイル名を示す文字列です。</target>
        </trans-unit>
        <trans-unit id="d29fd04fcb13d090c757322a936c0e741e2812c4" translate="yes" xml:space="preserve">
          <source>Each element of &lt;code&gt;font-lock-keywords&lt;/code&gt; should have one of these forms:</source>
          <target state="translated">&lt;code&gt;font-lock-keywords&lt;/code&gt; の各要素は、次のいずれかの形式である必要があります。</target>
        </trans-unit>
        <trans-unit id="038d0ef67cc096bc0eba55db2cb42db8573d10bb" translate="yes" xml:space="preserve">
          <source>Each element of &lt;code&gt;font-lock-keywords&lt;/code&gt; specifies how to find certain cases of text, and how to highlight those cases. Font Lock mode processes the elements of &lt;code&gt;font-lock-keywords&lt;/code&gt; one by one, and for each element, it finds and handles all matches. Ordinarily, once part of the text has been fontified already, this cannot be overridden by a subsequent match in the same text; but you can specify different behavior using the &lt;var&gt;override&lt;/var&gt; element of a &lt;var&gt;subexp-highlighter&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;font-lock-keywords&lt;/code&gt; の各要素は、テキストの特定のケースを見つける方法と、それらのケースを強調表示する方法を指定します。フォントロックモードは、 &lt;code&gt;font-lock-keywords&lt;/code&gt; の要素を1つずつ処理し、要素ごとにすべての一致を検索して処理します。通常、テキストの一部がすでにフォント化されていると、同じテキスト内の後続の一致によってこれを上書きすることはできません。ただし、 &lt;var&gt;subexp-highlighter&lt;/var&gt; の &lt;var&gt;override&lt;/var&gt; 要素を使用して異なる動作を指定できます。</target>
        </trans-unit>
        <trans-unit id="c3ecb50f451b69d67c29a1f841163c9a51b4dd1c" translate="yes" xml:space="preserve">
          <source>Each element of &lt;var&gt;bindings&lt;/var&gt; is on the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;[&lt;var&gt;arglist&lt;/var&gt;]&amp;nbsp;&lt;var&gt;rx-form&lt;/var&gt;)&lt;/code&gt;, where the parts have the same meaning as in &lt;code&gt;rx-define&lt;/code&gt; above. Example:</source>
          <target state="translated">&lt;var&gt;bindings&lt;/var&gt; 各要素はフォーム &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;[&lt;var&gt;arglist&lt;/var&gt;]&amp;nbsp;&lt;var&gt;rx-form&lt;/var&gt;)&lt;/code&gt; にあり、パーツは上記の &lt;code&gt;rx-define&lt;/code&gt; と同じ意味を持ちます。例：</target>
        </trans-unit>
        <trans-unit id="f5841ba6e4abfd446a51aa58c6afc36d45a9a72a" translate="yes" xml:space="preserve">
          <source>Each element of the list specifies a criterion for invisibility; if a character&amp;rsquo;s &lt;code&gt;invisible&lt;/code&gt; property fits any one of these criteria, the character is invisible. The list can have two kinds of elements:</source>
          <target state="translated">リストの各要素は、不可視性の基準を指定します。文字の場合は &lt;code&gt;invisible&lt;/code&gt; 財産は、これらの基準のいずれかに適合し、文字が見えません。リストには2種類の要素を含めることができます。</target>
        </trans-unit>
        <trans-unit id="0aa0938815ccffdc049f9d52f230709c273f88f4" translate="yes" xml:space="preserve">
          <source>Each entry has a key which represents the algorithm, followed by a plist with internal details about the algorithm. The plist will have &lt;code&gt;:type gnutls-digest-algorithm&lt;/code&gt; and also will have the key &lt;code&gt;:digest-algorithm-length 64&lt;/code&gt; to indicate the size, in bytes, of the resulting digest.</source>
          <target state="translated">各エントリには、アルゴリズムを表すキーと、それに続くアルゴリズムに関する内部詳細を含むplistがあります。plistには &lt;code&gt;:type gnutls-digest-algorithm&lt;/code&gt; があり、結果のダイジェストのサイズをバイト単位で示すキー &lt;code&gt;:digest-algorithm-length 64&lt;/code&gt; length64もあります。</target>
        </trans-unit>
        <trans-unit id="3ed4bcab3f06461a767acaa6c6d4cbcad9ab18be" translate="yes" xml:space="preserve">
          <source>Each entry has a key which represents the algorithm, followed by a plist with internal details about the algorithm. The plist will have &lt;code&gt;:type gnutls-mac-algorithm&lt;/code&gt; and also will have the keys &lt;code&gt;:mac-algorithm-length&lt;/code&gt;&lt;code&gt;:mac-algorithm-keysize&lt;/code&gt;&lt;code&gt;:mac-algorithm-noncesize&lt;/code&gt; to indicate the size, in bytes, of the resulting hash, the key, and the nonce respectively.</source>
          <target state="translated">各エントリには、アルゴリズムを表すキーがあり、その後にアルゴリズムに関する内部詳細を含むplistが続きます。 PLISTがあります &lt;code&gt;:type gnutls-mac-algorithm&lt;/code&gt; また、キーがあります &lt;code&gt;:mac-algorithm-length&lt;/code&gt; &lt;code&gt;:mac-algorithm-keysize&lt;/code&gt; &lt;code&gt;:mac-algorithm-noncesize&lt;/code&gt; 、得られたハッシュのサイズをバイト数で示すためのキーを、およびナンス。</target>
        </trans-unit>
        <trans-unit id="572fe639f46c1ca7545e98f17128a184fffc8b14" translate="yes" xml:space="preserve">
          <source>Each entry has a key which represents the cipher, followed by a plist with internal details about the algorithm. The plist will have &lt;code&gt;:type gnutls-symmetric-cipher&lt;/code&gt; and also will have the keys &lt;code&gt;:cipher-aead-capable&lt;/code&gt; set to &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt; to indicate AEAD capability; and &lt;code&gt;:cipher-tagsize&lt;/code&gt;&lt;code&gt;:cipher-blocksize&lt;/code&gt;&lt;code&gt;:cipher-keysize&lt;/code&gt;&lt;code&gt;:cipher-ivsize&lt;/code&gt; to indicate the size, in bytes, of the tag, block size of the resulting data, the key, and the IV respectively.</source>
          <target state="translated">各エントリには、暗号を表すキーと、それに続くアルゴリズムに関する内部詳細を含むplistがあります。 plistには &lt;code&gt;:type gnutls-symmetric-cipher&lt;/code&gt; があり、キー &lt;code&gt;:cipher-aead-capable&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; または &lt;code&gt;t&lt;/code&gt; に設定されてAEAD機能を示します。および &lt;code&gt;:cipher-tagsize&lt;/code&gt; &lt;code&gt;:cipher-blocksize&lt;/code&gt; &lt;code&gt;:cipher-keysize&lt;/code&gt; &lt;code&gt;:cipher-ivsize&lt;/code&gt; は、タグのサイズ（バイト単位）、結果のデータのブロックサイズ、キー、およびIVをそれぞれ示します。</target>
        </trans-unit>
        <trans-unit id="140b1e2bb3c49c9a73870b27a628d0d3e834d04c" translate="yes" xml:space="preserve">
          <source>Each entry in a syntax table is a &lt;em&gt;raw syntax descriptor&lt;/em&gt;: a cons cell of the form &lt;code&gt;(&lt;var&gt;syntax-code&lt;/var&gt;
. &lt;var&gt;matching-char&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;syntax-code&lt;/var&gt; is an integer which encodes the syntax class and syntax flags, according to the table below. &lt;var&gt;matching-char&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a matching character (similar to the second character in a syntax descriptor).</source>
          <target state="translated">構文テーブルの各エントリは、&lt;em&gt;生の構文記述&lt;/em&gt;形式のコンス・セル： &lt;code&gt;(&lt;var&gt;syntax-code&lt;/var&gt; . &lt;var&gt;matching-char&lt;/var&gt;)&lt;/code&gt; 。 &lt;var&gt;syntax-code&lt;/var&gt; は、次の表に従って、構文クラスと構文フラグをエンコードする整数です。 &lt;var&gt;matching-char&lt;/var&gt; は、 &lt;code&gt;nil&lt;/code&gt; 以外の場合、一致する文字を指定します（構文記述子の2番目の文字と同様）。</target>
        </trans-unit>
        <trans-unit id="84f28a2ca7dd11c2dd1dfb04bd78cce2b5a041ed" translate="yes" xml:space="preserve">
          <source>Each entry to Edebug redisplays the evaluation list by inserting each expression in the buffer, followed by its current value. It also inserts comment lines so that each expression becomes its own group. Thus, if you type</source>
          <target state="translated">Edebugへの各エントリは、各式をバッファに挿入して評価リストを再表示し、その後に現在の値を表示します。また、各式がそれ自身のグループになるようにコメント行を挿入します。したがって、以下のように</target>
        </trans-unit>
        <trans-unit id="f985f0876ac047e6c61bfea4d59bcf2b7ec1d86f" translate="yes" xml:space="preserve">
          <source>Each error symbol has a set of parent error conditions that is a list of symbols. Normally this list includes the error symbol itself and the symbol &lt;code&gt;error&lt;/code&gt;. Occasionally it includes additional symbols, which are intermediate classifications, narrower than &lt;code&gt;error&lt;/code&gt; but broader than a single error symbol. For example, all the errors in accessing files have the condition &lt;code&gt;file-error&lt;/code&gt;. If we do not say here that a certain error symbol has additional error conditions, that means it has none.</source>
          <target state="translated">各エラーシンボルには、シンボルのリストである親エラー条件のセットがあります。通常、このリストにはエラーシンボル自体とシンボル &lt;code&gt;error&lt;/code&gt; 含まれます。場合によっては、中間分類である追加のシンボルが含まれ、 &lt;code&gt;error&lt;/code&gt; よりは狭いが、単一のエラーシンボルよりは広い。たとえば、ファイルにアクセスする際のすべてのエラーの条件は &lt;code&gt;file-error&lt;/code&gt; です。ここで、特定のエラーシンボルに追加のエラー条件があると言わない場合、それはそれがないことを意味します。</target>
        </trans-unit>
        <trans-unit id="2f812eca72faa91575c25ffa918dec0300f40d65" translate="yes" xml:space="preserve">
          <source>Each error that occurs has an &lt;em&gt;error symbol&lt;/em&gt; that describes what kind of error it is, and which describes also a list of condition names (see &lt;a href=&quot;error-symbols#Error-Symbols&quot;&gt;Error Symbols&lt;/a&gt;). Emacs searches all the active &lt;code&gt;condition-case&lt;/code&gt; forms for a handler that specifies one or more of these condition names; the innermost matching &lt;code&gt;condition-case&lt;/code&gt; handles the error. Within this &lt;code&gt;condition-case&lt;/code&gt;, the first applicable handler handles the error.</source>
          <target state="translated">発生する各エラーには、&lt;em&gt;エラーの&lt;/em&gt;種類を説明し、条件名のリストも説明する&lt;a href=&quot;error-symbols#Error-Symbols&quot;&gt;エラー記号があり&lt;/a&gt;ます（エラー記号を参照）。Emacsは、すべてのアクティブな &lt;code&gt;condition-case&lt;/code&gt; フォームで、これらの条件名の1つ以上を指定するハンドラーを検索します。最も内側の一致 &lt;code&gt;condition-case&lt;/code&gt; がエラーを処理します。この &lt;code&gt;condition-case&lt;/code&gt; 、最初に適用可能なハンドラーがエラーを処理します。</target>
        </trans-unit>
        <trans-unit id="d76d4607d130cc67c59a005f79c0bffee88d5a52" translate="yes" xml:space="preserve">
          <source>Each face that the mode defines should, if possible, inherit from an existing Emacs face. See &lt;a href=&quot;basic-faces#Basic-Faces&quot;&gt;Basic Faces&lt;/a&gt;, and &lt;a href=&quot;faces-for-font-lock#Faces-for-Font-Lock&quot;&gt;Faces for Font Lock&lt;/a&gt;.</source>
          <target state="translated">モードが定義する各面は、可能であれば、既存のEmacs面から継承する必要があります。&lt;a href=&quot;basic-faces#Basic-Faces&quot;&gt;基本面&lt;/a&gt;、および&lt;a href=&quot;faces-for-font-lock#Faces-for-Font-Lock&quot;&gt;フォントロックの面を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="77bea3dd3402c1db33ec9bf61e4a8fa3b5763282" translate="yes" xml:space="preserve">
          <source>Each frame has a &lt;em&gt;default font&lt;/em&gt; which specifies the default character size for that frame. This size is meant when retrieving or changing the size of a frame in terms of columns or lines (see &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;). It is also used when resizing (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;) or splitting (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;) windows.</source>
          <target state="translated">各フレームには、そのフレームのデフォルトの文字サイズを指定する&lt;em&gt;デフォルトのフォントが&lt;/em&gt;あります。このサイズは、列または行の観点からフレームのサイズを取得または変更する場合に使用されます（&lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;サイズパラメータを&lt;/a&gt;参照）。また、&lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;ウィンドウのサイズ&lt;/a&gt;変更（ウィンドウサイズを参照）または分割（ウィンドウの&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;分割を&lt;/a&gt;参照）するときにも使用されます。</target>
        </trans-unit>
        <trans-unit id="7c9aafef1930137c16544e0b68e7ffda8cd345ce" translate="yes" xml:space="preserve">
          <source>Each function in this hook should accept two arguments, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. It should return either a cons cell of two adjusted buffer positions, &lt;code&gt;(&lt;var&gt;new-start&lt;/var&gt; . &lt;var&gt;new-end&lt;/var&gt;)&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt; if no adjustment is necessary. The hook functions are run in turn, repeatedly, until they all return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このフックの各関数は、 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; の2つの引数を受け入れる必要があります。これは、いずれかの位置バッファ調整両者のコンス・セル、返すべき &lt;code&gt;(&lt;var&gt;new-start&lt;/var&gt; . &lt;var&gt;new-end&lt;/var&gt;)&lt;/code&gt; 、または &lt;code&gt;nil&lt;/code&gt; 何ら調整が必要ない場合。フック関数は、すべて &lt;code&gt;nil&lt;/code&gt; が返されるまで、順番に繰り返し実行されます。</target>
        </trans-unit>
        <trans-unit id="588edfd671f1f617aeb5cd122aff89277339bb27" translate="yes" xml:space="preserve">
          <source>Each function in this list is called by &lt;code&gt;insert-file-contents&lt;/code&gt; with one argument, the number of characters inserted, and with point at the beginning of the inserted text. Each function should leave point unchanged, and return the new character count describing the inserted text as modified by the function.</source>
          <target state="translated">このリストの各関数は、1つの引数、挿入された文字数、および挿入されたテキストの先頭をポイントとして、 &lt;code&gt;insert-file-contents&lt;/code&gt; によって呼び出されます。各関数はポイントを変更せずに、挿入されたテキストを関数によって変更されたものとして説明する新しい文字数を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="c83a4399a6c923e3d08fae198138a2f98174a32a" translate="yes" xml:space="preserve">
          <source>Each function in this list should be written to look at text in the current buffer, but should not modify it in any way. The buffer will contain the text of parts of the file. Each function should take one argument, &lt;var&gt;size&lt;/var&gt;, which tells it how many characters to look at, starting from point. If the function succeeds in determining a coding system for the file, it should return that coding system. Otherwise, it should return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">このリストの各関数は、現在のバッファー内のテキストを確認するように作成する必要がありますが、いかなる方法でも変更しないでください。バッファには、ファイルの一部のテキストが含まれます。各関数は、1つの引数 &lt;var&gt;size&lt;/var&gt; をとる必要があります。これは、ポイントから開始して、見る文字数を示します。関数がファイルのコーディングシステムの決定に成功した場合、そのコーディングシステムを返す必要があります。それ以外の場合は、 &lt;code&gt;nil&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="235d91ba92896bbd0339cbc80d0f7ff64497f384" translate="yes" xml:space="preserve">
          <source>Each image descriptor has the form &lt;code&gt;(image . &lt;var&gt;props&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;props&lt;/var&gt; is a property list of alternating keyword symbols and values, including at least the pair &lt;code&gt;:type &lt;var&gt;type&lt;/var&gt;&lt;/code&gt; that specifies the image type.</source>
          <target state="translated">各画像記述子の形式は &lt;code&gt;(image . &lt;var&gt;props&lt;/var&gt;)&lt;/code&gt; ここで、 &lt;var&gt;props&lt;/var&gt; は、少なくとも画像タイプを指定するペア &lt;code&gt;:type &lt;var&gt;type&lt;/var&gt;&lt;/code&gt; を含む、交互のキーワードシンボルと値のプロパティリストです。</target>
        </trans-unit>
        <trans-unit id="97238b9b58affb7b3a1c2c1dbbd291a0ab78d2b2" translate="yes" xml:space="preserve">
          <source>Each input method has a name, which is currently a string; in the future, symbols may also be usable as input method names.</source>
          <target state="translated">各入力メソッドには名前があり、現在は文字列です。将来的にはシンボルも入力メソッド名として使用できるようになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="b68855ebc1a78ae55b334c95707422ad2286e75c" translate="yes" xml:space="preserve">
          <source>Each internal window always has at least two child windows. If this number falls to one as a result of window deletion, Emacs automatically deletes the internal window, and its sole remaining child window takes its place in the window tree.</source>
          <target state="translated">各内部ウィンドウには、常に少なくとも 2 つの子ウィンドウがあります。ウィンドウ削除の結果、この数が 1 つになると、Emacs は自動的に内部ウィンドウを削除し、残りの唯一の子ウィンドウがウィンドウツリーのその場所になります。</target>
        </trans-unit>
        <trans-unit id="58ef8e2ad206534a200d2fd255565c1384f0cd21" translate="yes" xml:space="preserve">
          <source>Each keymap is a list whose &lt;small&gt;CAR&lt;/small&gt; is the symbol &lt;code&gt;keymap&lt;/code&gt;. The remaining elements of the list define the key bindings of the keymap. A symbol whose function definition is a keymap is also a keymap. Use the function &lt;code&gt;keymapp&lt;/code&gt; (see below) to test whether an object is a keymap.</source>
          <target state="translated">各キーマップは、&lt;small&gt;CAR&lt;/small&gt;がシンボル &lt;code&gt;keymap&lt;/code&gt; マップであるリストです。リストの残りの要素は、キーマップのキーバインディングを定義します。関数定義がキーマップであるシンボルもキーマップです。関数 &lt;code&gt;keymapp&lt;/code&gt; （以下を参照）を使用して、オブジェクトがキーマップであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="71b9a641e07d2f8e576dc2b9135e5863bf5b6da9" translate="yes" xml:space="preserve">
          <source>Each line of the backtrace represents one function call. The line shows the function followed by a list of the values of the function&amp;rsquo;s arguments if they are all known; if they are still being computed, the line consists of a list containing the function and its unevaluated arguments. Long lists or deeply nested structures may be elided.</source>
          <target state="translated">バックトレースの各行は、1つの関数呼び出しを表します。この行には、関数の後に、関数の引数の値がすべてわかっている場合はその値のリストが表示されます。それらがまだ計算されている場合、行は関数とその未評価の引数を含むリストで構成されます。長いリストや深くネストされた構造は省略できます。</target>
        </trans-unit>
        <trans-unit id="c9ae24340a44ae06d86da670e58a13c44fd88c1b" translate="yes" xml:space="preserve">
          <source>Each list element following &lt;code&gt;&amp;amp;or&lt;/code&gt; is a single alternative. To group two or more list elements as a single alternative, enclose them in &lt;code&gt;[&amp;hellip;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;or&lt;/code&gt; に続く各リスト要素は単一の選択肢です。2つ以上のリスト要素を単一の選択肢としてグループ化するには、それらを &lt;code&gt;[&amp;hellip;]&lt;/code&gt; で囲みます。</target>
        </trans-unit>
        <trans-unit id="a583ef6a10db82e632751712c5ea65db221cd7e6" translate="yes" xml:space="preserve">
          <source>Each list element has the form &lt;code&gt;(&lt;var&gt;buffer&lt;/var&gt; &lt;var&gt;window-start&lt;/var&gt;
&lt;var&gt;window-pos&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;buffer&lt;/var&gt; is a buffer previously shown in the window, &lt;var&gt;window-start&lt;/var&gt; is the window start position (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;) when that buffer was last shown, and &lt;var&gt;window-pos&lt;/var&gt; is the point position (see &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;) when that buffer was last shown in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">各リスト要素の形式は &lt;code&gt;(&lt;var&gt;buffer&lt;/var&gt; &lt;var&gt;window-start&lt;/var&gt; &lt;var&gt;window-pos&lt;/var&gt;)&lt;/code&gt; 。ここで、 &lt;var&gt;buffer&lt;/var&gt; は以前にウィンドウに &lt;var&gt;window-start&lt;/var&gt; されたバッファー、window-startはそのバッファーが最後に表示されたときのウィンドウの開始位置（&lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;ウィンドウの開始と終了を&lt;/a&gt;参照）、および &lt;var&gt;window-pos&lt;/var&gt; は、そのバッファが &lt;var&gt;window&lt;/var&gt; に最後に表示されたときの&lt;a href=&quot;window-point#Window-Point&quot;&gt;ポイント&lt;/a&gt;位置（ウィンドウポイントを参照）です。</target>
        </trans-unit>
        <trans-unit id="5f7c2055e3e8554ed9ad1590b417507d7bd08daf" translate="yes" xml:space="preserve">
          <source>Each local binding has a certain &lt;em&gt;scope&lt;/em&gt; and &lt;em&gt;extent&lt;/em&gt;. &lt;em&gt;Scope&lt;/em&gt; refers to &lt;em&gt;where&lt;/em&gt; in the textual source code the binding can be accessed. &lt;em&gt;Extent&lt;/em&gt; refers to &lt;em&gt;when&lt;/em&gt;, as the program is executing, the binding exists.</source>
          <target state="translated">各ローカルバインディングには、特定の&lt;em&gt;スコープ&lt;/em&gt;と&lt;em&gt;エクステントがあり&lt;/em&gt;ます。&lt;em&gt;スコープ&lt;/em&gt;とは、テキストソースコードの&lt;em&gt;どこ&lt;/em&gt;からバインディングにアクセスできるかを指します。&lt;em&gt;エクステント&lt;/em&gt;とは、プログラムの実行中にバインディングが存在する&lt;em&gt;場合を&lt;/em&gt;指します。</target>
        </trans-unit>
        <trans-unit id="86aba8266c0d25b83d7502075b116356d65aa6a2" translate="yes" xml:space="preserve">
          <source>Each major mode should have a normal &lt;em&gt;mode hook&lt;/em&gt; named &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-hook&lt;/code&gt;. The very last thing the major mode command should do is to call &lt;code&gt;run-mode-hooks&lt;/code&gt;. This runs the normal hook &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt;, the mode hook, the function &lt;code&gt;hack-local-variables&lt;/code&gt; (when the buffer is visiting a file), and then the normal hook &lt;code&gt;after-change-major-mode-hook&lt;/code&gt;. See &lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Mode Hooks&lt;/a&gt;.</source>
          <target state="translated">各メジャーモードには、 &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-hook&lt;/code&gt; - &lt;em&gt;mode &lt;/em&gt;-hookという名前の通常&lt;em&gt;モードフック&lt;/em&gt;が必要です。メジャーモードコマンドが実行する必要がある最後のことは、 &lt;code&gt;run-mode-hooks&lt;/code&gt; を呼び出すことです。これにより、通常のフック &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt; 、モードフック、関数 &lt;code&gt;hack-local-variables&lt;/code&gt; （バッファーがファイルにアクセスしている場合）、そして通常のフック &lt;code&gt;after-change-major-mode-hook&lt;/code&gt; 。&lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;モードフックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="287323fb95433b6dbd622d9ec00f0ea2aff3f057" translate="yes" xml:space="preserve">
          <source>Each match for this element creates an index item, and when the index item is selected by the user, it calls &lt;var&gt;function&lt;/var&gt; with arguments consisting of the item name, the buffer position, and &lt;var&gt;arguments&lt;/var&gt;.</source>
          <target state="translated">この要素が一致するたびにインデックスアイテムが作成され、ユーザーがインデックスアイテムを選択すると、アイテム名、バッファ位置、引数で構成される引数を使用して &lt;var&gt;function&lt;/var&gt; が呼び出され &lt;var&gt;arguments&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e22ba30379343332318e195f64357d09a59ae9e" translate="yes" xml:space="preserve">
          <source>Each minor mode can have its own keymap, which is active when the mode is enabled. To set up a keymap for a minor mode, add an element to the alist &lt;code&gt;minor-mode-map-alist&lt;/code&gt;. See &lt;a href=&quot;controlling-active-maps#Definition-of-minor_002dmode_002dmap_002dalist&quot;&gt;Definition of minor-mode-map-alist&lt;/a&gt;.</source>
          <target state="translated">各マイナーモードは、モードが有効になっているときにアクティブになる独自のキーマップを持つことができます。マイナーモードのキーマップを設定するには、alistminor &lt;code&gt;minor-mode-map-alist&lt;/code&gt; 要素を追加します。&lt;a href=&quot;controlling-active-maps#Definition-of-minor_002dmode_002dmap_002dalist&quot;&gt;minor-mode-map-alistの定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d528e8c9b29d9bee51e02521c92a873e3dea5cb8" translate="yes" xml:space="preserve">
          <source>Each mode can define alternative levels so that the user can select more or less.</source>
          <target state="translated">各モードは、ユーザーが多かれ少なかれ選択できるように、代替レベルを定義することができます。</target>
        </trans-unit>
        <trans-unit id="4eef0b9d650277ed1c085296e6911d448ba1318f" translate="yes" xml:space="preserve">
          <source>Each non-</source>
          <target state="translated">各非</target>
        </trans-unit>
        <trans-unit id="d922d78c2410876672ed17d819419fb4a2331ea9" translate="yes" xml:space="preserve">
          <source>Each of the &lt;var&gt;bindings&lt;/var&gt; is either (i) a symbol, in which case that symbol is locally bound to &lt;code&gt;nil&lt;/code&gt;; or (ii) a list of the form &lt;code&gt;(&lt;var&gt;symbol&lt;/var&gt; &lt;var&gt;value-form&lt;/var&gt;)&lt;/code&gt;, in which case &lt;var&gt;symbol&lt;/var&gt; is locally bound to the result of evaluating &lt;var&gt;value-form&lt;/var&gt;. If &lt;var&gt;value-form&lt;/var&gt; is omitted, &lt;code&gt;nil&lt;/code&gt; is used.</source>
          <target state="translated">各 &lt;var&gt;bindings&lt;/var&gt; は次のいずれかです。（i）シンボル。この場合、そのシンボルはローカルで &lt;code&gt;nil&lt;/code&gt; にバインドされます。または（ii）フォームのリスト &lt;code&gt;(&lt;var&gt;symbol&lt;/var&gt; &lt;var&gt;value-form&lt;/var&gt;)&lt;/code&gt; 。この場合、 &lt;var&gt;symbol&lt;/var&gt; は &lt;var&gt;value-form&lt;/var&gt; の評価結果にローカルにバインドされます。場合 &lt;var&gt;value-form&lt;/var&gt; 省略され、 &lt;code&gt;nil&lt;/code&gt; が使用されています。</target>
        </trans-unit>
        <trans-unit id="782fca7b50440dc1aaec7c6460896c933ad7a194" translate="yes" xml:space="preserve">
          <source>Each of the &lt;var&gt;handlers&lt;/var&gt; is a list of the form &lt;code&gt;(&lt;var&gt;conditions&lt;/var&gt;
&lt;var&gt;body&lt;/var&gt;&amp;hellip;)&lt;/code&gt;. Here &lt;var&gt;conditions&lt;/var&gt; is an error condition name to be handled, or a list of condition names (which can include &lt;code&gt;debug&lt;/code&gt; to allow the debugger to run before the handler). A condition name of &lt;code&gt;t&lt;/code&gt; matches any condition. &lt;var&gt;body&lt;/var&gt; is one or more Lisp expressions to be executed when this handler handles an error. Here are examples of handlers:</source>
          <target state="translated">各 &lt;var&gt;handlers&lt;/var&gt; は、フォームのリストです &lt;code&gt;(&lt;var&gt;conditions&lt;/var&gt; &lt;var&gt;body&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 。ここでの &lt;var&gt;conditions&lt;/var&gt; は、処理されるエラー条件名、または条件名のリストです（これには、デバッガーをハンドラーの前に実行できるようにするための &lt;code&gt;debug&lt;/code&gt; を含めることができます）。 &lt;code&gt;t&lt;/code&gt; の条件名は、どの条件にも一致します。 &lt;var&gt;body&lt;/var&gt; は、このハンドラーがエラーを処理するときに実行される1つ以上のLisp式です。ハンドラーの例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a47cbfe89c8be0c83074ab2820d5cb0e5b9b19da" translate="yes" xml:space="preserve">
          <source>Each of the different Lisp modes has a slightly different keymap. For example, Lisp mode binds</source>
          <target state="translated">異なるLispモードはそれぞれ、わずかに異なるキーマップを持っています。例えば、Lisp モードは</target>
        </trans-unit>
        <trans-unit id="fa7a9bc42e8e4ddded7690e1cf1607e4f6fa3c66" translate="yes" xml:space="preserve">
          <source>Each of the following elements in the specification list is an alternative. One of the alternatives must match, or the &lt;code&gt;&amp;amp;or&lt;/code&gt; specification fails.</source>
          <target state="translated">仕様リストの次の各要素は代替手段です。選択肢の1つが一致する必要があります。一致しない場合、 &lt;code&gt;&amp;amp;or&lt;/code&gt; 仕様は失敗します。</target>
        </trans-unit>
        <trans-unit id="f8367e0ae94dbffb5e444377e5e6c187c66fa397" translate="yes" xml:space="preserve">
          <source>Each of the following elements is matched as alternatives as if by using &lt;code&gt;&amp;amp;or&lt;/code&gt;, but if any of them match, the specification fails. If none of them match, nothing is matched, but the &lt;code&gt;&amp;amp;not&lt;/code&gt; specification succeeds.</source>
          <target state="translated">以下の各要素は、 &lt;code&gt;&amp;amp;or&lt;/code&gt; を使用するかのように代替として一致しますが、いずれかが一致する場合、仕様は失敗します。それらのどれも一致しない場合、何も一致し &lt;code&gt;&amp;amp;not&lt;/code&gt; が、＆not指定は成功します。</target>
        </trans-unit>
        <trans-unit id="977b6c1d424e5a35915d6c7be59d9d10d724e091" translate="yes" xml:space="preserve">
          <source>Each of the signal-sending functions takes two optional arguments: &lt;var&gt;process&lt;/var&gt; and &lt;var&gt;current-group&lt;/var&gt;.</source>
          <target state="translated">シグナル送信関数はそれぞれ、 &lt;var&gt;process&lt;/var&gt; と &lt;var&gt;current-group&lt;/var&gt; の2つのオプションの引数を取ります。</target>
        </trans-unit>
        <trans-unit id="efd9953c58b5618fd12636f78f4637746045da22" translate="yes" xml:space="preserve">
          <source>Each of the subprocess-creating functions has a &lt;var&gt;buffer-or-name&lt;/var&gt; argument that specifies where the output from the program will go. It should be a buffer or a buffer name; if it is a buffer name, that will create the buffer if it does not already exist. It can also be &lt;code&gt;nil&lt;/code&gt;, which says to discard the output, unless a custom filter function handles it. (See &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;, and &lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;Read and Print&lt;/a&gt;.) Normally, you should avoid having multiple processes send output to the same buffer because their output would be intermixed randomly. For synchronous processes, you can send the output to a file instead of a buffer (and the corresponding argument is therefore more appropriately called &lt;var&gt;destination&lt;/var&gt;). By default, both standard output and standard error streams go to the same destination, but all the 3 primitives allow optionally to direct the standard error stream to a different destination.</source>
          <target state="translated">各サブプロセス作成関数には、プログラムからの出力の行き先を指定する &lt;var&gt;buffer-or-name&lt;/var&gt; 引数があります。バッファーまたはバッファー名である必要があります。バッファ名の場合、まだ存在しない場合はバッファが作成されます。また、カスタムフィルター関数が出力を処理しない限り、出力を破棄することを示す &lt;code&gt;nil&lt;/code&gt; にすることもできます。 （&lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;フィルター関数&lt;/a&gt;、および&lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;読み取りと印刷を&lt;/a&gt;参照してください。）通常、出力はランダムに混合されるため、複数のプロセスが同じバッファーに出力を送信することは避けてください。同期プロセスの場合、出力をバッファの代わりにファイルに送信できます（したがって、対応する引数はより適切に &lt;var&gt;destination&lt;/var&gt; と呼ばれます）。デフォルトでは、標準出力ストリームと標準エラーストリームの両方が同じ宛先に送信されますが、3つのプリミティブすべてで、オプションで標準エラーストリームを別の宛先に送信できます。</target>
        </trans-unit>
        <trans-unit id="4dd40e95c6a835360b6b7f11c588fa5e8a597930" translate="yes" xml:space="preserve">
          <source>Each of these image formats is associated with an &lt;em&gt;image type symbol&lt;/em&gt;. The symbols for the above formats are, respectively, &lt;code&gt;pbm&lt;/code&gt;, &lt;code&gt;xbm&lt;/code&gt;, &lt;code&gt;xpm&lt;/code&gt;, &lt;code&gt;gif&lt;/code&gt;, &lt;code&gt;jpeg&lt;/code&gt;, &lt;code&gt;tiff&lt;/code&gt;, &lt;code&gt;png&lt;/code&gt;, and &lt;code&gt;svg&lt;/code&gt;.</source>
          <target state="translated">これらの各画像形式は、&lt;em&gt;画像タイプ記号に&lt;/em&gt;関連付けられてい&lt;em&gt;ます&lt;/em&gt;。上記の形式の記号は、それぞれ &lt;code&gt;pbm&lt;/code&gt; 、 &lt;code&gt;xbm&lt;/code&gt; 、 &lt;code&gt;xpm&lt;/code&gt; 、 &lt;code&gt;gif&lt;/code&gt; 、 &lt;code&gt;jpeg&lt;/code&gt; 、 &lt;code&gt;tiff&lt;/code&gt; 、 &lt;code&gt;png&lt;/code&gt; 、および &lt;code&gt;svg&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6bd36effaf14bf0fb0e87e0425e8ad6f14ffb592" translate="yes" xml:space="preserve">
          <source>Each of these symbols is both a face name, and a variable whose default value is the symbol itself. Thus, the default value of &lt;code&gt;font-lock-comment-face&lt;/code&gt; is &lt;code&gt;font-lock-comment-face&lt;/code&gt;.</source>
          <target state="translated">これらの各シンボルは、面名であると同時に、デフォルト値がシンボル自体である変数でもあります。したがって、 &lt;code&gt;font-lock-comment-face&lt;/code&gt; のデフォルト値は &lt;code&gt;font-lock-comment-face&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="291666f153c17f5fcc090bf2ddada2e48a1cde39" translate="yes" xml:space="preserve">
          <source>Each package (whether simple or multi-file) has certain &lt;em&gt;attributes&lt;/em&gt;:</source>
          <target state="translated">各パッケージ（単純またはマルチファイル）には、特定の&lt;em&gt;属性があります&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e4e32c346825be260782068946efb49f224cbe75" translate="yes" xml:space="preserve">
          <source>Each paragraph of bidirectional text has a &lt;em&gt;base direction&lt;/em&gt;, either right-to-left or left-to-right. Left-to-right paragraphs are displayed beginning at the left margin of the window, and are truncated or continued when the text reaches the right margin. Right-to-left paragraphs are displayed beginning at the right margin, and are continued or truncated at the left margin.</source>
          <target state="translated">双方向テキストの各段落には、右から左または左から右のいずれかの&lt;em&gt;基本方向が&lt;/em&gt;あります。左から右への段落はウィンドウの左マージンから表示され、テキストが右マージンに達すると切り捨てられるか継続されます。右から左への段落は右マージンから表示され、左マージンで継続または切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="cde848f49ba018cc29964e215c495a8c27d89694" translate="yes" xml:space="preserve">
          <source>Each primitive type has a corresponding Lisp function that checks whether an object is a member of that type.</source>
          <target state="translated">各プリミティブ型には対応する Lisp 関数があり、オブジェクトがその型のメンバであるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="23f6b5abc1ef17571fdf5c06f953e5d8690ca2f7" translate="yes" xml:space="preserve">
          <source>Each property has a name and a value. Both of these can be any Lisp object, but the name is normally a symbol. Typically each property name symbol is used for a particular purpose; for instance, the text property &lt;code&gt;face&lt;/code&gt; specifies the faces for displaying the character (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;). The usual way to access the property list is to specify a name and ask what value corresponds to it.</source>
          <target state="translated">各プロパティには名前と値があります。これらは両方とも任意のLispオブジェクトにすることができますが、名前は通常シンボルです。通常、各プロパティ名の記号は特定の目的で使用されます。たとえば、textプロパティ &lt;code&gt;face&lt;/code&gt; は、文字を表示するための面を指定し&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;ます&lt;/a&gt;（特殊プロパティを参照）。プロパティリストにアクセスする通常の方法は、名前を指定して、それに対応する値を尋ねることです。</target>
        </trans-unit>
        <trans-unit id="1c1fea8ac4dca56f1c610d54d8aaf271e1962df6" translate="yes" xml:space="preserve">
          <source>Each signal has a standard effect on the subprocess. Most signals kill the subprocess, but some stop (or resume) execution instead. Most signals can optionally be handled by programs; if the program handles the signal, then we can say nothing in general about its effects.</source>
          <target state="translated">それぞれのシグナルは、サブプロセスに標準的な影響を与えます。ほとんどのシグナルはサブプロセスを終了させますが、代わりに実行を停止(または再開)するものもあります。ほとんどのシグナルは、オプションでプログラムによって処理することができます。プログラムがシグナルを処理する場合、その効果については一般的に何も言うことはできません。</target>
        </trans-unit>
        <trans-unit id="c047bfaf3c4495ab37b9bd7458af73d1c3930d11" translate="yes" xml:space="preserve">
          <source>Each special form has its own rules for which arguments are evaluated and which are used without evaluation. Whether a particular argument is evaluated may depend on the results of evaluating other arguments.</source>
          <target state="translated">それぞれの特別な形式には、どの引数が評価され、どの引数が評価されずに使用されるかについての独自のルールがあります。特定の引数が評価されるかどうかは、他の引数を評価した結果に依存します。</target>
        </trans-unit>
        <trans-unit id="72dd71100c38a66ebf0fcfa852239a90749b52f5" translate="yes" xml:space="preserve">
          <source>Each specification in &lt;var&gt;specs&lt;/var&gt; is a property list with contents depending on image type. All specifications must at least contain the properties &lt;code&gt;:type &lt;var&gt;type&lt;/var&gt;&lt;/code&gt; and either &lt;code&gt;:file&amp;nbsp;&lt;var&gt;file&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;:data&amp;nbsp;&lt;var&gt;data&lt;/var&gt;&lt;/code&gt;, where &lt;var&gt;type&lt;/var&gt; is a symbol specifying the image type, e.g., &lt;code&gt;xbm&lt;/code&gt;, &lt;var&gt;file&lt;/var&gt; is the file to load the image from, and &lt;var&gt;data&lt;/var&gt; is a string containing the actual image data. The first specification in the list whose &lt;var&gt;type&lt;/var&gt; is supported, and &lt;var&gt;file&lt;/var&gt; exists, is used to construct the image specification to be returned. If no specification is satisfied, &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">各仕様 &lt;var&gt;specs&lt;/var&gt; 画像の種類に応じて内容のプロパティリストです。すべての仕様は、少なくともプロパティ含まれている必要があります &lt;code&gt;:type &lt;var&gt;type&lt;/var&gt;&lt;/code&gt; のいずれか &lt;code&gt;:file&amp;nbsp;&lt;var&gt;file&lt;/var&gt;&lt;/code&gt; または &lt;code&gt;:data&amp;nbsp;&lt;var&gt;data&lt;/var&gt;&lt;/code&gt; 、 &lt;var&gt;type&lt;/var&gt; 画像の種類を指定するシンボルであり、例えば、 &lt;code&gt;xbm&lt;/code&gt; 、 &lt;var&gt;file&lt;/var&gt; から画像をロードするためのファイルで、 &lt;var&gt;data&lt;/var&gt; 文字列であります実際の画像データが含まれています。 &lt;var&gt;type&lt;/var&gt; がサポートされ、 &lt;var&gt;file&lt;/var&gt; が存在するリストの最初の仕様は、返されるイメージ仕様を作成するために使用されます。仕様が満たされない場合、 &lt;code&gt;nil&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="dbf7a48962876ca66372154f2f1def78d7d85188" translate="yes" xml:space="preserve">
          <source>Each symbol has a property list for recording miscellaneous information.</source>
          <target state="translated">各シンボルには、雑多な情報を記録するためのプロパティリストがあります。</target>
        </trans-unit>
        <trans-unit id="52fbede7ba5a23a939caafe5e9932ca45c34d031" translate="yes" xml:space="preserve">
          <source>Each symbol has four components (or &amp;ldquo;cells&amp;rdquo;), each of which references another object:</source>
          <target state="translated">各シンボルには4つのコンポーネント（または「セル」）があり、それぞれが別のオブジェクトを参照しています。</target>
        </trans-unit>
        <trans-unit id="be67417f8b53a64af086e681886ca9f4c3c8fb8d" translate="yes" xml:space="preserve">
          <source>Each symbol&amp;rsquo;s properties and property values are stored in the symbol&amp;rsquo;s property list cell (see &lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;Symbol Components&lt;/a&gt;), in the form of a property list (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;).</source>
          <target state="translated">各シンボルのプロパティとプロパティ値は、プロパティリスト（&lt;a href=&quot;property-lists#Property-Lists&quot;&gt;プロパティリストを&lt;/a&gt;参照）の形式で、シンボルのプロパティリストセル（&lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;シンボルコンポーネントを&lt;/a&gt;参照）に保存されます。</target>
        </trans-unit>
        <trans-unit id="82a1accf94b0791d1a997333410db664204fd93c" translate="yes" xml:space="preserve">
          <source>Each syntax class is designated by a mnemonic character, which serves as the name of the class when you need to specify a class. Usually, this designator character is one that is often assigned that class; however, its meaning as a designator is unvarying and independent of what syntax that character currently has. Thus, &amp;lsquo;</source>
          <target state="translated">各構文クラスはニーモニック文字で指定されます。ニーモニック文字は、クラスを指定する必要がある場合にクラスの名前として機能します。通常、この指定文字は、そのクラスに割り当てられることが多い文字です。ただし、指定子としてのその意味は不変であり、その文字が現在どの構文を持っているかとは無関係です。したがって、 '</target>
        </trans-unit>
        <trans-unit id="20c83e6b7e66f23e9b34223f18b5c3c8faeecf1b" translate="yes" xml:space="preserve">
          <source>Each terminal has a list of associated parameters. These &lt;em&gt;terminal parameters&lt;/em&gt; are mostly a convenient way of storage for terminal-local variables, but some terminal parameters have a special meaning.</source>
          <target state="translated">各端末には、関連するパラメータのリストがあります。これらの&lt;em&gt;端末パラメータ&lt;/em&gt;は、ほとんどの場合、端末ローカル変数を格納するための便利な方法ですが、一部の端末パラメータには特別な意味があります。</target>
        </trans-unit>
        <trans-unit id="3a95c9cc702f0dae817aad9ce2f5bcddea359025" translate="yes" xml:space="preserve">
          <source>Each terminal type can have its own Lisp library that Emacs loads when run on that type of terminal. The library&amp;rsquo;s name is constructed by concatenating the value of the variable &lt;code&gt;term-file-prefix&lt;/code&gt; and the terminal type (specified by the environment variable &lt;code&gt;TERM&lt;/code&gt;). Normally, &lt;code&gt;term-file-prefix&lt;/code&gt; has the value &lt;code&gt;&quot;term/&quot;&lt;/code&gt;; changing this is not recommended. If there is an entry matching &lt;code&gt;TERM&lt;/code&gt; in the &lt;code&gt;term-file-aliases&lt;/code&gt; association list, Emacs uses the associated value in place of &lt;code&gt;TERM&lt;/code&gt;. Emacs finds the file in the normal manner, by searching the &lt;code&gt;load-path&lt;/code&gt; directories, and trying the &amp;lsquo;</source>
          <target state="translated">各端末タイプは、そのタイプの端末で実行されたときにEmacsがロードする独自のLispライブラリを持つことができます。ライブラリーの名前は、変数 &lt;code&gt;term-file-prefix&lt;/code&gt; の値と端末タイプ（環境変数 &lt;code&gt;TERM&lt;/code&gt; で指定）を連結することによって作成されます。通常、 &lt;code&gt;term-file-prefix&lt;/code&gt; の値は &lt;code&gt;&quot;term/&quot;&lt;/code&gt; です。これを変更することはお勧めしません。 &lt;code&gt;term-file-aliases&lt;/code&gt; 関連リストに &lt;code&gt;TERM&lt;/code&gt; に一致するエントリがある場合、Emacsは &lt;code&gt;TERM&lt;/code&gt; の代わりに関連する値を使用します。 Emacsは、 &lt;code&gt;load-path&lt;/code&gt; ディレクトリを検索し、 'を試行することにより、通常の方法でファイルを検索します。</target>
        </trans-unit>
        <trans-unit id="abf9852196e45b8ddf01ffeb0a06d4b366da14b5" translate="yes" xml:space="preserve">
          <source>Each time a generic function is called, it builds the &lt;em&gt;effective method&lt;/em&gt; which will handle this invocation by combining the applicable methods defined for the function. The process of finding the applicable methods and producing the effective method is called &lt;em&gt;dispatch&lt;/em&gt;. The applicable methods are those all of whose specializers are compatible with the actual arguments of the call. Since all of the arguments must be compatible with the specializers, they all determine whether a method is applicable. Methods that explicitly specialize more than one argument are called &lt;em&gt;multiple-dispatch methods&lt;/em&gt;.</source>
          <target state="translated">ジェネリック関数が呼び出されるたびに、関数に定義された適切なメソッドを組み合わせることにより、この呼び出しを処理する&lt;em&gt;効果的なメソッド&lt;/em&gt;が構築されます。該当する方法を見つけて効果的な方法を生み出すプロセスを&lt;em&gt;ディスパッチ&lt;/em&gt;と呼びます。適用可能なメソッドは、すべてのスペシャライザーが呼び出しの実際の引数と互換性があるメソッドです。すべての引数はスペシャライザーと互換性がある必要があるため、メソッドが適用可能かどうかはすべて引数によって決まります。&lt;em&gt;複数の&lt;/em&gt;引数を明示的に特殊化するメソッドは、&lt;em&gt;多重ディスパッチメソッド&lt;/em&gt;と呼ば&lt;em&gt;れます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="47a0fbac78b3eea53dfbeb6288c7d952fd355c24" translate="yes" xml:space="preserve">
          <source>Each time a question is asked, the user may enter</source>
          <target state="translated">質問されるたびに、ユーザーは</target>
        </trans-unit>
        <trans-unit id="aad2a9d470474da5d8494a55e6808054f9e31862" translate="yes" xml:space="preserve">
          <source>Each time you use</source>
          <target state="translated">を使うたびに</target>
        </trans-unit>
        <trans-unit id="ef5f67cf376cd71cde435468e95d944f3c241104" translate="yes" xml:space="preserve">
          <source>Each variable on this list can have properties &lt;code&gt;overlay-arrow-string&lt;/code&gt; and &lt;code&gt;overlay-arrow-bitmap&lt;/code&gt; that specify an overlay arrow string (for text terminals) or fringe bitmap (for graphical terminals) to display at the corresponding overlay arrow position. If either property is not set, the default &lt;code&gt;overlay-arrow-string&lt;/code&gt; or &lt;code&gt;overlay-arrow&lt;/code&gt; fringe indicator is used.</source>
          <target state="translated">このリストの各変数は、対応するオーバーレイ矢印位置に表示するオーバーレイ矢印文字列（テキスト端末の場合）またはフリンジビットマップ（グラフィカル端末の場合）を指定するプロパティ &lt;code&gt;overlay-arrow-string&lt;/code&gt; および &lt;code&gt;overlay-arrow-bitmap&lt;/code&gt; を持つことができます。いずれかのプロパティが設定されていない場合、デフォルトの &lt;code&gt;overlay-arrow-string&lt;/code&gt; または &lt;code&gt;overlay-arrow&lt;/code&gt; フリンジインジケーターが使用されます。</target>
        </trans-unit>
        <trans-unit id="4ef6f686fb9bcdcb38b76a946d731d5b21776b57" translate="yes" xml:space="preserve">
          <source>Each warning has a &lt;em&gt;warning type&lt;/em&gt; to classify it. The type is a list of symbols. The first symbol should be the custom group that you use for the program&amp;rsquo;s user options. For example, byte compiler warnings use the warning type &lt;code&gt;(bytecomp)&lt;/code&gt;. You can also subcategorize the warnings, if you wish, by using more symbols in the list.</source>
          <target state="translated">各警告には、それを分類するための&lt;em&gt;警告タイプ&lt;/em&gt;があります。タイプはシンボルのリストです。最初の記号は、プログラムのユーザーオプションに使用するカスタムグループである必要があります。たとえば、バイトコンパイラの警告は、警告タイプ &lt;code&gt;(bytecomp)&lt;/code&gt; を使用します。必要に応じて、リスト内のより多くの記号を使用して、警告をサブカテゴリ化することもできます。</target>
        </trans-unit>
        <trans-unit id="c7b05419563012fae186137d3649c98f1f79fa29" translate="yes" xml:space="preserve">
          <source>Each window belongs to exactly one frame (see &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;).</source>
          <target state="translated">各ウィンドウは正確に1つのフレームに属します（&lt;a href=&quot;frames#Frames&quot;&gt;フレームを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="3dbb592ccdc83f880aa1c33595a352f03e950a3c" translate="yes" xml:space="preserve">
          <source>Each window can specify a display table, and so can each buffer. The window&amp;rsquo;s display table, if there is one, takes precedence over the buffer&amp;rsquo;s display table. If neither exists, Emacs tries to use the standard display table; if that is &lt;code&gt;nil&lt;/code&gt;, Emacs uses the usual character display conventions (see &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;).</source>
          <target state="translated">各ウィンドウは表示テーブルを指定でき、各バッファも指定できます。ウィンドウの表示テーブルがある場合は、バッファの表示テーブルよりも優先されます。どちらも存在しない場合、Emacsは標準の表示テーブルを使用しようとします。それが &lt;code&gt;nil&lt;/code&gt; の場合、Emacsは通常の文字表示規則を使用します（&lt;a href=&quot;usual-display#Usual-Display&quot;&gt;通常の表示を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="377bae922cb141c720011b4887600679610fc2e2" translate="yes" xml:space="preserve">
          <source>Each window displays the contents of a buffer.</source>
          <target state="translated">各ウィンドウにはバッファの内容が表示されます。</target>
        </trans-unit>
        <trans-unit id="36e2e629a25c4f98d548b38fe566963d0bf5edbb" translate="yes" xml:space="preserve">
          <source>Each window has its own location of point.</source>
          <target state="translated">各ウィンドウにはそれぞれポイントの位置があります。</target>
        </trans-unit>
        <trans-unit id="471c73409475e7e93e86c9bda3823fa89d907def" translate="yes" xml:space="preserve">
          <source>Each window has its own value of point (see &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;), independent of the value of point in other windows displaying the same buffer. This makes it useful to have multiple windows showing one buffer.</source>
          <target state="translated">各ウィンドウには、同じバッファを表示している他のウィンドウの&lt;a href=&quot;point#Point&quot;&gt;ポイントの&lt;/a&gt;値とは関係なく、独自のポイントの値があります（ポイントを参照）。これにより、1つのバッファを表示する複数のウィンドウがあると便利です。</target>
        </trans-unit>
        <trans-unit id="21af55b760406410c2ff15a1789fb087e13f691d" translate="yes" xml:space="preserve">
          <source>Each window maintains a marker used to keep track of a buffer position that specifies where in the buffer display should start. This position is called the &lt;em&gt;display-start&lt;/em&gt; position of the window (or just the &lt;em&gt;start&lt;/em&gt;). The character after this position is the one that appears at the upper left corner of the window. It is usually, but not inevitably, at the beginning of a text line.</source>
          <target state="translated">各ウィンドウは、バッファ表示を開始する場所を指定するバッファ位置を追跡するために使用されるマーカーを維持します。この位置は、ウィンドウの&lt;em&gt;表示開始&lt;/em&gt;位置（または単に&lt;em&gt;開始&lt;/em&gt;）と呼ばれます。この位置の後の文字は、ウィンドウの左上隅に表示される文字です。これは通常、必然的ではありませんが、テキスト行の先頭にあります。</target>
        </trans-unit>
        <trans-unit id="fce687f2b757b30204db6be7e540c24d557b9814" translate="yes" xml:space="preserve">
          <source>Each window remembers in a list the buffers it has previously displayed, and the order in which these buffers were removed from it. This history is used, for example, by &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;), and when quitting windows (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;). The list is automatically maintained by Emacs, but you can use the following functions to explicitly inspect or alter it:</source>
          <target state="translated">各ウィンドウは、以前に表示したバッファと、これらのバッファがウィンドウから削除された順序をリストに記憶しています。この履歴は、たとえば、 &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; （「&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;バッファとWindows&lt;/a&gt;」を参照）や、ウィンドウを&lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;終了する&lt;/a&gt;とき（「ウィンドウの終了」を参照）に使用されます。リストはEmacsによって自動的に維持されますが、次の関数を使用して明示的に検査または変更できます。</target>
        </trans-unit>
        <trans-unit id="8aecaaf814d79e70608c06de7e5e42031379d48e" translate="yes" xml:space="preserve">
          <source>Each window remembers the buffers displayed in it.</source>
          <target state="translated">各ウィンドウは、その中に表示されているバッファを記憶しています。</target>
        </trans-unit>
        <trans-unit id="6813d6d7a333036a4e7f2011729ff7b5325fc05c" translate="yes" xml:space="preserve">
          <source>Eager macro-expansion skipped due to cycle&amp;hellip;</source>
          <target state="translated">サイクルのために熱心なマクロ拡張がスキップされました&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="c7819a9a17cb6e9b801c22d26ce09956afd86797" translate="yes" xml:space="preserve">
          <source>Easier construction of list structure.</source>
          <target state="translated">リスト構造の構築が容易になりました。</target>
        </trans-unit>
        <trans-unit id="62982c50a7c0a185c8095d28e3fa75a7344df943" translate="yes" xml:space="preserve">
          <source>Easy Menu</source>
          <target state="translated">簡単メニュー</target>
        </trans-unit>
        <trans-unit id="e669883509d7784c6369e20b9c8e23e7a2ae19ce" translate="yes" xml:space="preserve">
          <source>Echo Area Customization</source>
          <target state="translated">エコーエリアのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="e3ef941690c36ee5499f59f47789430e59decd21" translate="yes" xml:space="preserve">
          <source>Echo area messages are logged for the user.</source>
          <target state="translated">エコーエリアのメッセージがユーザーのためにログに記録されます。</target>
        </trans-unit>
        <trans-unit id="d0d356e2906e1462d5588304b1489624265299d3" translate="yes" xml:space="preserve">
          <source>Edebug</source>
          <target state="translated">Edebug</target>
        </trans-unit>
        <trans-unit id="de72542989794bf4f9b5288408d18fa3b9d956e8" translate="yes" xml:space="preserve">
          <source>Edebug Breakpoints</source>
          <target state="translated">Edebugのブレークポイント</target>
        </trans-unit>
        <trans-unit id="b8aee5a6d2c322bc3ab9fb40d52ca9936fbddd0c" translate="yes" xml:space="preserve">
          <source>Edebug Display Update</source>
          <target state="translated">Edebug表示の更新</target>
        </trans-unit>
        <trans-unit id="bc18eb808760456413933f510d2a752bd1e8d6ab" translate="yes" xml:space="preserve">
          <source>Edebug Execution Modes</source>
          <target state="translated">Edebug 実行モード</target>
        </trans-unit>
        <trans-unit id="db5fcd0b8950d84b987ca870e92762ff16aec921" translate="yes" xml:space="preserve">
          <source>Edebug Options</source>
          <target state="translated">Edebug オプション</target>
        </trans-unit>
        <trans-unit id="ff142d85d91b23e86bff42fd24362bcde946851e" translate="yes" xml:space="preserve">
          <source>Edebug Recursive Edit</source>
          <target state="translated">Edebug 再帰的編集</target>
        </trans-unit>
        <trans-unit id="fa24aa898a4d87754b34d172971d0b2fd796309e" translate="yes" xml:space="preserve">
          <source>Edebug Views</source>
          <target state="translated">Edebug ビュー</target>
        </trans-unit>
        <trans-unit id="aaaaaf87ac09329f2cde58c88e53a15cfbfc4fd2" translate="yes" xml:space="preserve">
          <source>Edebug also has a coverage testing feature (see &lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;Coverage Testing&lt;/a&gt;). These features partly duplicate each other, and it would be cleaner to combine them.</source>
          <target state="translated">Edebugには、カバレッジテスト機能もあります（&lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;カバレッジテストを&lt;/a&gt;参照）。これらの機能は部分的に相互に複製されており、それらを組み合わせるとよりクリーンになります。</target>
        </trans-unit>
        <trans-unit id="5994b668cd44159515a3e4ba54f24512ebee8719" translate="yes" xml:space="preserve">
          <source>Edebug always stops or pauses at a breakpoint, except when the Edebug mode is Go-nonstop. In that mode, it ignores breakpoints entirely.</source>
          <target state="translated">Edebug は、Edebug モードが Go-nonstop の場合を除き、常にブレークポイントで停止または一時停止します。このモードでは、ブレークポイントは完全に無視されます。</target>
        </trans-unit>
        <trans-unit id="8ac07564c784bdf322cd2d256e04366eca19af10" translate="yes" xml:space="preserve">
          <source>Edebug and Macros</source>
          <target state="translated">Edebug とマクロ</target>
        </trans-unit>
        <trans-unit id="2334c070b2d93786e0f9d4e0e6ef1389b7e33bc2" translate="yes" xml:space="preserve">
          <source>Edebug binds &lt;code&gt;debug-on-error&lt;/code&gt; to this value, if &lt;code&gt;debug-on-error&lt;/code&gt; was previously &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;Trapping Errors&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;debug-on-error&lt;/code&gt; が以前に &lt;code&gt;nil&lt;/code&gt; であった場合、Edebugは &lt;code&gt;debug-on-error&lt;/code&gt; をこの値にバインドします。&lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;トラップエラーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f770030db08cea088bd08663ed881e1cd0f21f55" translate="yes" xml:space="preserve">
          <source>Edebug binds &lt;code&gt;debug-on-quit&lt;/code&gt; to this value, if &lt;code&gt;debug-on-quit&lt;/code&gt; was previously &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;Trapping Errors&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;debug-on-quit&lt;/code&gt; が以前に &lt;code&gt;nil&lt;/code&gt; であった場合、Edebugは &lt;code&gt;debug-on-quit&lt;/code&gt; をこの値にバインドします。&lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;トラップエラーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="581bbe1c7b1bf43b35887b695cec303d8cc475a0" translate="yes" xml:space="preserve">
          <source>Edebug can record an execution trace, storing it in a buffer named</source>
          <target state="translated">Edebug は実行トレースを記録し、それを</target>
        </trans-unit>
        <trans-unit id="20366c58a50ec9fdef7674ad425cec8c20ee076b" translate="yes" xml:space="preserve">
          <source>Edebug cannot save and restore the value of &lt;code&gt;unread-command-events&lt;/code&gt;. Entering Edebug while this variable has a nontrivial value can interfere with execution of the program you are debugging.</source>
          <target state="translated">Edebugは、 &lt;code&gt;unread-command-events&lt;/code&gt; の値を保存および復元できません。この変数の値が重要なときにEdebugを入力すると、デバッグしているプログラムの実行が妨げられる可能性があります。</target>
        </trans-unit>
        <trans-unit id="16918456881c20d67309bd633563ae947d9b3b7b" translate="yes" xml:space="preserve">
          <source>Edebug is a source-level debugger for Emacs Lisp programs, with which you can:</source>
          <target state="translated">Edebug は Emacs Lisp プログラムのソースレベルデバッガです。</target>
        </trans-unit>
        <trans-unit id="789c782ce1bff1de5d155e3b1f0f895fb82a5514" translate="yes" xml:space="preserve">
          <source>Edebug knows how to instrument all the standard special forms, &lt;code&gt;interactive&lt;/code&gt; forms with an expression argument, anonymous lambda expressions, and other defining forms. However, Edebug cannot determine on its own what a user-defined macro will do with the arguments of a macro call, so you must provide that information using Edebug specifications; for details, see &lt;a href=&quot;edebug-and-macros#Edebug-and-Macros&quot;&gt;Edebug and Macros&lt;/a&gt;.</source>
          <target state="translated">Edebugは、すべての標準の特殊フォーム、式引数を使用した &lt;code&gt;interactive&lt;/code&gt; フォーム、無名ラムダ式、およびその他の定義フォームをインストルメント化する方法を知っています。ただし、Edebugは、ユーザー定義マクロがマクロ呼び出しの引数をどのように処理するかを独自に決定できないため、Edebug仕様を使用してその情報を提供する必要があります。詳細については、&lt;a href=&quot;edebug-and-macros#Edebug-and-Macros&quot;&gt;Edebugとマクロを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1207a8c1131590d2c1fba8e8a08045f9810e7ded" translate="yes" xml:space="preserve">
          <source>Edebug provides rudimentary coverage testing and display of execution frequency.</source>
          <target state="translated">Edebugは、初歩的なカバレッジテストと実行頻度の表示を提供します。</target>
        </trans-unit>
        <trans-unit id="36c74f738d92fd5a51f36c24f8a45083919a4383" translate="yes" xml:space="preserve">
          <source>Edebug specifications provide the power of regular expression matching, plus some context-free grammar constructs: the matching of sublists with balanced parentheses, recursive processing of forms, and recursion via indirect specifications.</source>
          <target state="translated">Edebug仕様は、正規表現のマッチング機能に加えて、バランスの取れた括弧を持つサブリストのマッチング、フォームの再帰的処理、間接仕様による再帰など、文脈にとらわれない文法構造を提供しています。</target>
        </trans-unit>
        <trans-unit id="f06b5c4b7654995d8c103e8f7c041be09dabee12" translate="yes" xml:space="preserve">
          <source>Edebug supports evaluation of expressions containing references to lexically bound symbols created by the following constructs in</source>
          <target state="translated">Edebugは、次のような構文で作成された語彙的にバインドされたシンボルへの参照を含む式の評価をサポートしています。</target>
        </trans-unit>
        <trans-unit id="92e9b4ffd97bcf6f208e24140d67894084ea0be2" translate="yes" xml:space="preserve">
          <source>Edebug supports several execution modes for running the program you are debugging. We call these alternatives &lt;em&gt;Edebug execution modes&lt;/em&gt;; do not confuse them with major or minor modes. The current Edebug execution mode determines how far Edebug continues execution before stopping&amp;mdash;whether it stops at each stop point, or continues to the next breakpoint, for example&amp;mdash;and how much Edebug displays the progress of the evaluation before it stops.</source>
          <target state="translated">Edebugは、デバッグしているプログラムを実行するためのいくつかの実行モードをサポートしています。これらの選択肢を&lt;em&gt;Edebug実行モード&lt;/em&gt;と呼び&lt;em&gt;ます&lt;/em&gt;。それらをメジャーモードまたはマイナーモードと混同しないでください。現在のEdebug実行モードは、Edebugが停止する前に実行を継続する距離（たとえば、各停止ポイントで停止するか、次のブレークポイントまで継続するか）と、停止する前に評価の進行状況を表示するEdebugの量を決定します。</target>
        </trans-unit>
        <trans-unit id="f7233d448eb4726f6f80864ae5edc50a6ac1b407" translate="yes" xml:space="preserve">
          <source>Edebug tries to be transparent to the program you are debugging, but it does not succeed completely. Edebug also tries to be transparent when you evaluate expressions with</source>
          <target state="translated">Edebug はデバッグしているプログラムに対して透過的であることを試みますが、完全には成功しません。Edebug は、式を</target>
        </trans-unit>
        <trans-unit id="33534c2c4e6a92bffabc52624dabaee51456428a" translate="yes" xml:space="preserve">
          <source>Edebug uses the following specifications for &lt;code&gt;defun&lt;/code&gt; and the associated argument list and &lt;code&gt;interactive&lt;/code&gt; specifications. It is necessary to handle interactive forms specially since an expression argument is actually evaluated outside of the function body. (The specification for &lt;code&gt;defmacro&lt;/code&gt; is very similar to that for &lt;code&gt;defun&lt;/code&gt;, but allows for the &lt;code&gt;declare&lt;/code&gt; statement.)</source>
          <target state="translated">Edebugは、 &lt;code&gt;defun&lt;/code&gt; に次の仕様と、関連する引数リストおよび &lt;code&gt;interactive&lt;/code&gt; 仕様を使用します。式の引数は実際には関数本体の外部で評価されるため、対話型フォームを特別に処理する必要があります。（ &lt;code&gt;defmacro&lt;/code&gt; の仕様は &lt;code&gt;defun&lt;/code&gt; の仕様と非常に似ていますが、 &lt;code&gt;declare&lt;/code&gt; ステートメントを使用できます。）</target>
        </trans-unit>
        <trans-unit id="28e944e5aaec320c912fa03faba41f7a60142004" translate="yes" xml:space="preserve">
          <source>Edebug&amp;rsquo;s behavior may also be changed on a per-definition basis by adding an entry to this alist, with a key of your choice and three functions. Then set the &lt;code&gt;edebug-behavior&lt;/code&gt; symbol property of an instrumented definition to the key of the new entry, and Edebug will call the new functions in place of its own for that definition.</source>
          <target state="translated">Edebugの動作は、選択したキーと3つの関数を使用して、このリストにエントリを追加することにより、定義ごとに変更することもできます。次に、インストルメント化された定義の &lt;code&gt;edebug-behavior&lt;/code&gt; symbolプロパティを新しいエントリのキーに設定すると、Edebugはその定義の独自の関数の代わりに新しい関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="2f53d1947915ed6dc821d423e99aa65ab03bb93d" translate="yes" xml:space="preserve">
          <source>Edebug&amp;rsquo;s step mode stops execution when the next stop point is reached. There are three other ways to stop Edebug execution once it has started: breakpoints, the global break condition, and source breakpoints.</source>
          <target state="translated">Edebugのステップモードは、次の停止点に達すると実行を停止します。Edebugの実行が開始されたら、それを停止する方法は他に3つあります。ブレークポイント、グローバルブレーク条件、およびソースブレークポイントです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
