<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="03e85f9d7f00ac8f062c08dcfe544b25b136aa87" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-configuration-type#Window-Configuration-Type&quot;&gt;Window Configuration Type&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-configuration-type#Window-Configuration-Type&quot;&gt;ウィンドウ構成タイプ&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="415f0c380ab740163438bbdcba65517c91c2576c" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;ウィンドウ構成&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3d1cc7b88cc02e9315e205428f84326456ea25d9" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;ウィンドウディバイダー&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="9b1446db81b6364c2cc0c5ae5e92fdf9fbfb73dd" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-frame-parameters#Window-Frame-Parameters&quot;&gt;Window Frame Parameters&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-frame-parameters#Window-Frame-Parameters&quot;&gt;ウィンドウフレームパラメータ&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a8595a9e926350370374660e1b9a9baeaf338a60" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-history#Window-History&quot;&gt;ウィンドウ履歴&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="aee484a2f7b2dcc907f762bfb626ee965d79683b" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;ウィンドウフック&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="035044a74dfcb10b57719505e339ebf10b145e19" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-internals#Window-Internals&quot;&gt;Window Internals&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-internals#Window-Internals&quot;&gt;ウィンドウ内部&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3231677fbbd081c52db1b183b0369e55315306c2" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;ウィンドウパラメータ&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="5de91ae547eb79705c20d7fc8dbcea5bc617d941" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-point#Window-Point&quot;&gt;ウィンドウポイント&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="df2ecf3e4327185030ed843e85fcc5ac760b8ff8" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;ウィンドウサイズ&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d4c0b226a4b0cf5ecae75c94e441cec8bac8312c" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;ウィンドウの開始と終了&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a3bcf74cb8631439798f437a3719a635dc1b6a88" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;ウィンドウシステムの選択&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="38b649f0f3c778e3365887a78412ed278dc8f66d" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-systems#Window-Systems&quot;&gt;Window Systems&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-systems#Window-Systems&quot;&gt;ウィンドウシステム&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d139b9b7a33a4f26c13bcb55d7116a8fd870b9c0" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-type#Window-Type&quot;&gt;Window Type&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-type#Window-Type&quot;&gt;ウィンドウタイプ&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d7215df0f0d5daa2052ffc45a9c19ca32448218f" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;ウィンドウとフレーム&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="6a541b7f9cf08683be6ba3c638fee3f6b55d67c8" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;word-motion#Word-Motion&quot;&gt;Word Motion&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;word-motion#Word-Motion&quot;&gt;ワードモーション&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="20db2177e8708a8c4efd6bf2ff98d659507bb2cf" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;writing-dynamic-modules#Writing-Dynamic-Modules&quot;&gt;Writing Dynamic Modules&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;writing-dynamic-modules#Writing-Dynamic-Modules&quot;&gt;動的モジュールの作成&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="0365e184296f633c0945a188a35131957a796b48" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;writing-emacs-primitives#Writing-Emacs-Primitives&quot;&gt;Writing Emacs Primitives&lt;/a&gt;:</source>
          <target state="translated">&amp;bull; &lt;a href=&quot;writing-emacs-primitives#Writing-Emacs-Primitives&quot;&gt;Emacsプリミティブの作成&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f4dfdf0243e804bfa357a22a8c338f342299dc19" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;Writing to Files&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;ファイルへの書き込み&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c4869eedd1dc14ad148d4e53064bab697fb01b28" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;wrong-time#Wrong-Time&quot;&gt;Wrong Time&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;wrong-time#Wrong-Time&quot;&gt;間違った時間&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c2310446889bb8837b301ca8fffd1c8af688f89d" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;x11-keysyms#X11-Keysyms&quot;&gt;X11 Keysyms&lt;/a&gt;:</source>
          <target state="translated">&amp;bull; &lt;a href=&quot;x11-keysyms#X11-Keysyms&quot;&gt;X11Keysyms&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="2fd0ce640e2df2ddbdf1b394eda2dc53d8811175" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;xbm-images#XBM-Images&quot;&gt;XBM Images&lt;/a&gt;:</source>
          <target state="translated">&amp;bull; &lt;a href=&quot;xbm-images#XBM-Images&quot;&gt;XBM画像&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3cc064a3897f57d821e331d20ddf7926d9479ad5" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;xpm-images#XPM-Images&quot;&gt;XPM Images&lt;/a&gt;:</source>
          <target state="translated">&amp;bull; &lt;a href=&quot;xpm-images#XPM-Images&quot;&gt;XPM画像&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="49f72c265914e127a26244b2bc873fd01ef3e9f0" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;xwidgets#Xwidgets&quot;&gt;Xwidgets&lt;/a&gt;:</source>
          <target state="translated">&amp;bull; &lt;a href=&quot;xwidgets#Xwidgets&quot;&gt;Xwidgets&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="8c7aff3b3a9e8690377f4e1f9c215a5d60ef2406" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;yank-commands#Yank-Commands&quot;&gt;Yank Commands&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;yank-commands#Yank-Commands&quot;&gt;ヤンクコマンド&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="7ca0e7e82572c7be034a3e59c1039d65db790256" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;yanking#Yanking&quot;&gt;Yanking&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;yanking#Yanking&quot;&gt;ヤンキング&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="b1f05b7b3f8572f87a606a97bdc9d421c2751bdd" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;Yes-or-No Queries&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;はい-または-いいえクエリ&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="bfd190aabb29247e4b592c851a5990857551a7f6" translate="yes" xml:space="preserve">
          <source>&amp;equiv;</source>
          <target state="translated">&amp;equiv;</target>
        </trans-unit>
        <trans-unit id="03c7b3d3b9655eace132158a150dcd952feb9a0a" translate="yes" xml:space="preserve">
          <source>&amp;gt;</source>
          <target state="translated">&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bd855de81a8ada57c0160e9ec0d49f1815670c8a" translate="yes" xml:space="preserve">
          <source>&amp;gt;=</source>
          <target state="translated">&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="839e4a2006b278a93c4dc0f1936567078302c3f3" translate="yes" xml:space="preserve">
          <source>&amp;hellip;</source>
          <target state="translated">&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="55e0002737af0ebaff88beadf86bf66d5ade273a" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-command</source>
          <target state="translated">&amp;hellip;-command</target>
        </trans-unit>
        <trans-unit id="3c4b9d72a275526c8b7b65a59b830bcc8b221710" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-flag</source>
          <target state="translated">&amp;hellip;-flag</target>
        </trans-unit>
        <trans-unit id="73e253c7c43a104566debe1924c0a38d10781d17" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-form</source>
          <target state="translated">&amp;hellip;-form</target>
        </trans-unit>
        <trans-unit id="827baec0d2afbf5d362d3203ad9baab0792bb2ae" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-forms</source>
          <target state="translated">&amp;hellip;-forms</target>
        </trans-unit>
        <trans-unit id="0bf50ce0ae3dae3320e59fdef40dd7d9d1fbf73e" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-function</source>
          <target state="translated">&amp;hellip;-function</target>
        </trans-unit>
        <trans-unit id="617af4b329c4b250c119e44be92f9c1e7ed9ad55" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-functions</source>
          <target state="translated">&amp;hellip;-functions</target>
        </trans-unit>
        <trans-unit id="0a608ad9d5b0cb7c4e592e3d47fd2eddc4b796d3" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-hook</source>
          <target state="translated">&amp;hellip;-hook</target>
        </trans-unit>
        <trans-unit id="d497c3b280241d987af300ddadaef84a9b105f0d" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-internal</source>
          <target state="translated">&amp;hellip;-internal</target>
        </trans-unit>
        <trans-unit id="b6114d8d12c565a43a055c465f54018819d42cd3" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-predicate</source>
          <target state="translated">&amp;hellip;-predicate</target>
        </trans-unit>
        <trans-unit id="7538c6474b8983106ec5a3411d34b25ae7f828ac" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-program</source>
          <target state="translated">&amp;hellip;-program</target>
        </trans-unit>
        <trans-unit id="fd8f4ea47c3e0fd23213fa644c5d65fb2c367ecc" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-switches</source>
          <target state="translated">&amp;hellip;-switches</target>
        </trans-unit>
        <trans-unit id="127c5c3c33d794f8577ee09de43e9a365775bf69" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Asking the question&amp;rdquo; means printing &lt;var&gt;prompt&lt;/var&gt; in the minibuffer, followed by the string &amp;lsquo;</source>
          <target state="translated">「質問する」とは、ミニバッファに &lt;var&gt;prompt&lt;/var&gt; を出力し、その後に文字列 'を出力することを意味します。</target>
        </trans-unit>
        <trans-unit id="66c5d69663443cd5315c3b45e21666c3e98dced0" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Moving one word&amp;rdquo; means moving until point crosses a word-constituent character, which indicates the beginning of a word, and then continue moving until the word ends. By default, characters that begin and end words, known as &lt;em&gt;word boundaries&lt;/em&gt;, are defined by the current buffer&amp;rsquo;s syntax table (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;), but modes can override that by setting up a suitable &lt;code&gt;find-word-boundary-function-table&lt;/code&gt;, described below. Characters that belong to different scripts (as defined by &lt;code&gt;char-script-table&lt;/code&gt;), also define a word boundary (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;). In any case, this function cannot move point past the boundary of the accessible portion of the buffer, or across a field boundary (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;). The most common case of a field boundary is the end of the prompt in the minibuffer.</source>
          <target state="translated">「1つの単語を移動する」とは、ポイントが単語の始まりを示す単語構成文字と交差するまで移動し、その後、単語が終了するまで移動し続けることを意味します。デフォルトでは、&lt;em&gt;単語の境界&lt;/em&gt;と呼ばれる&lt;em&gt;単語の&lt;/em&gt;開始文字と終了文字は、現在のバッファの構文テーブル（&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;構文クラステーブルを&lt;/a&gt;参照）によって定義されますが、モードでは、適切な &lt;code&gt;find-word-boundary-function-table&lt;/code&gt; を設定することでそれをオーバーライドできます。以下で説明します。 （ &lt;code&gt;char-script-table&lt;/code&gt; で定義されている）異なるスクリプトに属する文字は、単語の境界も定義します（&lt;a href=&quot;character-properties#Character-Properties&quot;&gt;文字のプロパティを&lt;/a&gt;参照）。いずれの場合も、この関数は、バッファのアクセス可能な部分の境界を越えて、またはフィールドの境界を越えてポイントを移動することはできません（&lt;a href=&quot;fields#Fields&quot;&gt;フィールドを&lt;/a&gt;参照）。）。フィールド境界の最も一般的なケースは、ミニバッファーのプロンプトの終わりです。</target>
        </trans-unit>
        <trans-unit id="1567ebc6b7de65d05c7c7ee9ebc5ed0678a1df45" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Potentially&amp;rdquo; means that Emacs knows about the image types, not necessarily that they can be used (for example, they could depend on unavailable dynamic libraries). To know which image types are really available, use &lt;code&gt;image-type-available-p&lt;/code&gt;.</source>
          <target state="translated">「潜在的に」とは、Emacsが画像タイプを知っていることを意味しますが、必ずしもそれらを使用できるとは限りません（たとえば、利用できないダイナミックライブラリに依存する可能性があります）。実際に使用できる画像タイプを確認するには、 &lt;code&gt;image-type-available-p&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="20e5ab259ecbce12a1a5405dc13f1146c0c2aac9" translate="yes" xml:space="preserve">
          <source>&amp;lowast;</source>
          <target state="translated">&amp;lowast;</target>
        </trans-unit>
        <trans-unit id="900fd13b4e78138fa5c8437d4820c6cb910a7517" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;</source>
          <target state="translated">&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="dbe46c56ae1db5f504494850ad1b2873c0b57fc2" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;foo</source>
          <target state="translated">&amp;lsquo;foo</target>
        </trans-unit>
        <trans-unit id="b9847042aa1dbbcd2aa72f59cb3a8740e0312660" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;like this&amp;rsquo;</source>
          <target state="translated">'このような'</target>
        </trans-unit>
        <trans-unit id="5d2c1a80d8c17e5a143aee09c29a86838f18ab02" translate="yes" xml:space="preserve">
          <source>&amp;lt;</source>
          <target state="translated">&amp;lt;</target>
        </trans-unit>
        <trans-unit id="e3b9f11fca4507aafd71385bac17a306be3f77a9" translate="yes" xml:space="preserve">
          <source>&amp;lt;&amp;hellip;&amp;gt;</source>
          <target state="translated">&amp;lt;&amp;hellip;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="037fc9a552493e786bcd7aed89b2148f48d87642" translate="yes" xml:space="preserve">
          <source>&amp;lt;&lt;var&gt;a&lt;/var&gt;.&lt;var&gt;b&lt;/var&gt;.&lt;var&gt;c&lt;/var&gt;.&lt;var&gt;d&lt;/var&gt;:&lt;var&gt;p&lt;/var&gt;&amp;gt;</source>
          <target state="translated">&amp;lt;&lt;var&gt;a&lt;/var&gt;.&lt;var&gt;b&lt;/var&gt;.&lt;var&gt;c&lt;/var&gt;.&lt;var&gt;d&lt;/var&gt;:&lt;var&gt;p&lt;/var&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5b3395a82316d36df5276272d419f8e788574abe" translate="yes" xml:space="preserve">
          <source>&amp;lt;&lt;var&gt;n&lt;/var&gt;&amp;gt;</source>
          <target state="translated">&amp;lt;&lt;var&gt;n&lt;/var&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="31c40125b3296ddaed4f32be58c0e7076909e006" translate="yes" xml:space="preserve">
          <source>&amp;lt;&lt;var&gt;nnn&lt;/var&gt;&amp;gt;</source>
          <target state="translated">&amp;lt;&lt;var&gt;nnn&lt;/var&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="dab86dd68ddaa4a7434b78f1b7a70c9ae75568fb" translate="yes" xml:space="preserve">
          <source>&amp;lt;=</source>
          <target state="translated">&amp;lt;=</target>
        </trans-unit>
        <trans-unit id="1dad44b0bd95ca9b08a1589ba3500d158e72224e" translate="yes" xml:space="preserve">
          <source>&amp;lt;file name&amp;gt;</source>
          <target state="translated">&amp;lt;ファイル名&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1ec6c3128c94109cafe2815d651f5fd02f53c59c" translate="yes" xml:space="preserve">
          <source>&amp;lt;file name&amp;gt;.sig</source>
          <target state="translated">&amp;lt;ファイル名&amp;gt; .sig</target>
        </trans-unit>
        <trans-unit id="1db4b0bab71d1e71e08cab39b56283befad95546" translate="yes" xml:space="preserve">
          <source>&amp;lt;package name&amp;gt;-readme.txt</source>
          <target state="translated">&amp;lt;パッケージ名&amp;gt; -readme.txt</target>
        </trans-unit>
        <trans-unit id="a30aebfc404b1b2536c6298ba67c2466b8744524" translate="yes" xml:space="preserve">
          <source>&amp;lt;stdalign.h&amp;gt;</source>
          <target state="translated">&amp;lt;stdalign.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="154fae0e3298f7750f432093b9d49314208fb5ce" translate="yes" xml:space="preserve">
          <source>&amp;mdash;they don&amp;rsquo;t correspond to any character. The Unicode Standard defines default values of properties for such codepoints; they are mentioned below for each property.</source>
          <target state="translated">&amp;mdash;どの文字にも対応していません。Unicode標準は、そのようなコードポイントのプロパティのデフォルト値を定義しています。それらは各プロパティについて以下に記載されています。</target>
        </trans-unit>
        <trans-unit id="ecdbd96f5533c54585e2516c1c1c53f748158ebf" translate="yes" xml:space="preserve">
          <source>&amp;rArr;</source>
          <target state="translated">&amp;rArr;</target>
        </trans-unit>
        <trans-unit id="4466f5ea01bad40a521f3168b5b7a9dbde092776" translate="yes" xml:space="preserve">
          <source>&amp;rarr;</source>
          <target state="translated">&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="05c2d1fbe28d7fb9be1b5d7de9b1b069520d7548" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;</source>
          <target state="translated">&amp;rsquo;</target>
        </trans-unit>
        <trans-unit id="66ad1843713658733d26a95ba12ff1d29e6b3c14" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; &amp;ldquo;variable&amp;rdquo; in a file local variables list.</source>
          <target state="translated">'ファイルローカル変数リストの「変数」。</target>
        </trans-unit>
        <trans-unit id="3171ec0701159b9ad5dc63d0acc338c76201d8ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; &amp;ldquo;variable&amp;rdquo; is also a potential loophole, so Emacs normally asks for confirmation before handling it.</source>
          <target state="translated">'「変数」も潜在的な抜け穴であるため、Emacsは通常それを処理する前に確認を求めます。</target>
        </trans-unit>
        <trans-unit id="48e2cf8821bdbc9f249ef6255eae02692f5ee494" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (&lt;code&gt;&quot;[^\\]&quot;&lt;/code&gt; for Lisp string syntax), which matches any single character except a backslash.</source>
          <target state="translated">'（Lisp文字列構文の場合は &lt;code&gt;&quot;[^\\]&quot;&lt;/code&gt; ）。これは、円記号を除く任意の1文字に一致します。</target>
        </trans-unit>
        <trans-unit id="bc49ba903e8cc761548ddd0913ce0a4d016a47c8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (&lt;code&gt;file-attribute-modes&lt;/code&gt;).</source>
          <target state="translated">'（ &lt;code&gt;file-attribute-modes&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2cd09c029dab28a24c9a88c5a89d99dacfad70ba" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (Period)</source>
          <target state="translated">' （限目）</target>
        </trans-unit>
        <trans-unit id="288acbc250d2d18a015a2c7a7b6b97af117f87e7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (a display table can specify a glyph to use instead of &amp;lsquo;</source>
          <target state="translated">'（表示テーブルは'の代わりに使用するグリフを指定できます</target>
        </trans-unit>
        <trans-unit id="9f4885d9ce3dea00cedc414f1eea97e16907f58c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (and the stronger &amp;lsquo;</source>
          <target state="translated">'（そしてより強い'</target>
        </trans-unit>
        <trans-unit id="424ce5e4e502233e49d39362b7cfd5a04e24505d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (backslash and space) to terminate the escape sequence. For example, &amp;lsquo;</source>
          <target state="translated">'（バックスラッシュとスペース）エスケープシーケンスを終了します。例えば、 '</target>
        </trans-unit>
        <trans-unit id="ddf7430c97a29b56b3c63d1b97e02c5d64942c11" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (character code 97) is displayed as &amp;lsquo;</source>
          <target state="translated">'（文字コード97）は'として表示されます</target>
        </trans-unit>
        <trans-unit id="56225b914e269e1db6e63220042d5540b1c01bb6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (dot)</source>
          <target state="translated">'（ドット）</target>
        </trans-unit>
        <trans-unit id="dc10e063e86587ced80b5215820c7ffbe013611f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (followed by optional whitespace), the function adds &amp;lsquo;</source>
          <target state="translated">'（オプションの空白が続く）、関数は'を追加します</target>
        </trans-unit>
        <trans-unit id="0d4e55fab12776ec3c9a5643f78a6661dd645f09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (for example)</source>
          <target state="translated">' （例えば）</target>
        </trans-unit>
        <trans-unit id="92aacff825801e7ae6bec7e730e1a1fc77cbaef4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (greedy), &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; (greedy), &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="1621f3a530776619e57b5653280dad30fef22ffe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (i.e., punctuation, matching character slot unused, first character of a comment-starter, second character of a comment-ender).</source>
          <target state="translated">&amp;rsquo; (i.e., punctuation, matching character slot unused, first character of a comment-starter, second character of a comment-ender).</target>
        </trans-unit>
        <trans-unit id="7c6a5dd054a873ec7b16702bab22994904a58cc1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (military time), and &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; (military time), and &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="847cbf5bbf966944190e93304905b7e214c0ce53" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (non-greedy)</source>
          <target state="translated">&amp;rsquo; (non-greedy)</target>
        </trans-unit>
        <trans-unit id="5c8a458003477aaefe01135843752ad1f7c2d68d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (non-greedy).</source>
          <target state="translated">&amp;rsquo; (non-greedy).</target>
        </trans-unit>
        <trans-unit id="83fef044ca64bc0b3fd93201094e4a6ceb7ee9c6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (only reversed, since we used &lt;code&gt;push&lt;/code&gt;).</source>
          <target state="translated">&amp;rsquo; (only reversed, since we used &lt;code&gt;push&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b42cabd0ba9f80f9f6393ad0cfa5a1d565fa9de0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (or &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; (or &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="db11053e80e8d51b1a16cd20784b66d8c7bebaec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (or the deprecated suffix &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; (or the deprecated suffix &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="179141f3b217afa5caf2cbe9cb72f61495cb022f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (possibly extended with a compression suffix) or the shared-library extension, unless it contains an explicit directory name.</source>
          <target state="translated">&amp;rsquo; (possibly extended with a compression suffix) or the shared-library extension, unless it contains an explicit directory name.</target>
        </trans-unit>
        <trans-unit id="cedc92290ba28727ece08300f92b93b6998f9846" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see &lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;%-Constructs&lt;/a&gt;). This is normally the case when Emacs is not using a window system, and can only display one frame at a time. See &lt;a href=&quot;frame-titles#Frame-Titles&quot;&gt;Frame Titles&lt;/a&gt;.</source>
          <target state="translated">&amp;rsquo; (see &lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;%-Constructs&lt;/a&gt;). This is normally the case when Emacs is not using a window system, and can only display one frame at a time. See &lt;a href=&quot;frame-titles#Frame-Titles&quot;&gt;Frame Titles&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="546e34ab3684645ce16762b570bd0a0e649dafc8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see &lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;), which is used to quote only part of a list, while computing and substituting other parts.</source>
          <target state="translated">&amp;rsquo; (see &lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;), which is used to quote only part of a list, while computing and substituting other parts.</target>
        </trans-unit>
        <trans-unit id="9fbb45a85255e42f61f4cce80f1a312cceff4e02" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;). For example, if the old name is</source>
          <target state="translated">&amp;rsquo; (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;). For example, if the old name is</target>
        </trans-unit>
        <trans-unit id="ad1d2453cfa79fbd3af52afeedda9b0479725f1e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see &lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;abbreviate-file-name&lt;/a&gt;), and a relative one does not. On MS-DOS and MS-Windows, an absolute file name starts with a slash or a backslash, or with a drive specification &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; (see &lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;abbreviate-file-name&lt;/a&gt;), and a relative one does not. On MS-DOS and MS-Windows, an absolute file name starts with a slash or a backslash, or with a drive specification &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="535e1778ed9d3fb5bf3f42153705104bd441380c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see &lt;a href=&quot;symbol-type#Symbol-Type&quot;&gt;Symbol Type&lt;/a&gt;).</source>
          <target state="translated">&amp;rsquo; (see &lt;a href=&quot;symbol-type#Symbol-Type&quot;&gt;Symbol Type&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="6c99bee4c76c8e5b26a68129b299f68fbe8506ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see below).</source>
          <target state="translated">&amp;rsquo; (see below).</target>
        </trans-unit>
        <trans-unit id="8b480c3a6e43dfa7f7c1e6046d6a2e4aae5e3a38" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (subexpressions in sequence).</source>
          <target state="translated">&amp;rsquo; (subexpressions in sequence).</target>
        </trans-unit>
        <trans-unit id="a9ae002965caf5a2f42e6f4f0dcee1c57b06b8c8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (such as &lt;code&gt;&amp;amp;optional&lt;/code&gt;).</source>
          <target state="translated">&amp;rsquo; (such as &lt;code&gt;&amp;amp;optional&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5ae840ed1977e265e201f3ea7d08f075e5d901c2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (that would be redundant). The argument &lt;var&gt;doc&lt;/var&gt; is a documentation string for the face. The additional &lt;var&gt;keyword&lt;/var&gt; arguments have the same meanings as in &lt;code&gt;defgroup&lt;/code&gt; and &lt;code&gt;defcustom&lt;/code&gt; (see &lt;a href=&quot;common-keywords#Common-Keywords&quot;&gt;Common Keywords&lt;/a&gt;).</source>
          <target state="translated">&amp;rsquo; (that would be redundant). The argument &lt;var&gt;doc&lt;/var&gt; is a documentation string for the face. The additional &lt;var&gt;keyword&lt;/var&gt; arguments have the same meanings as in &lt;code&gt;defgroup&lt;/code&gt; and &lt;code&gt;defcustom&lt;/code&gt; (see &lt;a href=&quot;common-keywords#Common-Keywords&quot;&gt;Common Keywords&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="b943e68b8fcb2232f2e0ea92aae8ea61b5b42b5b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (the word &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; (the word &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="0221e7f7c55b6b8a61383b6edf2f93ea57d26b5a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (these are called &lt;em&gt;keywords&lt;/em&gt;). These symbols cannot be rebound, nor can their values be changed. Any attempt to set or bind &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt; signals a &lt;code&gt;setting-constant&lt;/code&gt; error. The same is true for a keyword (a symbol whose name starts with &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; (these are called &lt;em&gt;keywords&lt;/em&gt;). These symbols cannot be rebound, nor can their values be changed. Any attempt to set or bind &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt; signals a &lt;code&gt;setting-constant&lt;/code&gt; error. The same is true for a keyword (a symbol whose name starts with &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="290d894abaae2e415e32f7054e6a59e878c19f1e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (this is often appropriate when matching programming-language keywords and the like).</source>
          <target state="translated">&amp;rsquo; (this is often appropriate when matching programming-language keywords and the like).</target>
        </trans-unit>
        <trans-unit id="b20258646d0bd3b406ad77bc7723b9e7ec54a293" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (those are called &lt;em&gt;keywords&lt;/em&gt;). See &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;.</source>
          <target state="translated">&amp;rsquo; (those are called &lt;em&gt;keywords&lt;/em&gt;). See &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="eb7795af977e42373a97fa91d7601ee73dbaf0a6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (used for quoting), the comma, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; (used for quoting), the comma, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="25364199edfbec43d6442378787413448f50e0df" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (used in macros), and &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; (used in macros), and &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="797fabb6a14a2e06f4d7985bdee5190608a35c3c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (used in the read syntax for certain data types).</source>
          <target state="translated">&amp;rsquo; (used in the read syntax for certain data types).</target>
        </trans-unit>
        <trans-unit id="edd7f4ad761c0b15b7abf82671297e2807e2c6c5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (where &lt;var&gt;instance&lt;/var&gt; is the name under which Emacs was invoked), and using &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; (where &lt;var&gt;instance&lt;/var&gt; is the name under which Emacs was invoked), and using &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5e8b0d99abaef87512ad30463468a83a8a9e9c25" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (which matches any single character that is not a square bracket), followed by a literal &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; (which matches any single character that is not a square bracket), followed by a literal &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="fe39fcd45acb9045ff9e60d33cc20b7f54fe86d7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; Unicode property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;bidi-class&lt;/a&gt;).</source>
          <target state="translated">&amp;rsquo; Unicode property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;bidi-class&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="009f5242e52568463c63af2fbe544fa87b009eb5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; according to this predicate, even if &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; according to this predicate, even if &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="4f669d3296b9ae2cac8803b672613c7b646986ef" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; act as modifiers when used after any flags and field widths in a &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; act as modifiers when used after any flags and field widths in a &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="15c4f2d76a47bfd27b17bbed855750fddff39fb8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; after an expression, or on the last character of a variable. To simplify the display, a count is not shown if it is equal to the count of an earlier expression on the same line.</source>
          <target state="translated">&amp;rsquo; after an expression, or on the last character of a variable. To simplify the display, a count is not shown if it is equal to the count of an earlier expression on the same line.</target>
        </trans-unit>
        <trans-unit id="e18aab417098460640546845fe4f0de89b0e1986" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; against the string &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; against the string &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="577353a774e02e377313cbd5258fc758732bdfa8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; also has special meaning in the read syntax of Lisp strings (see &lt;a href=&quot;string-type#String-Type&quot;&gt;String Type&lt;/a&gt;), and must be quoted with &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; also has special meaning in the read syntax of Lisp strings (see &lt;a href=&quot;string-type#String-Type&quot;&gt;String Type&lt;/a&gt;), and must be quoted with &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5744380a421a4193659eaa88125a285008f66d5e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; also matches upper-case letters.</source>
          <target state="translated">&amp;rsquo; also matches upper-case letters.</target>
        </trans-unit>
        <trans-unit id="81f44daab7ad651ae48091994c30fd8577937762" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; also self-evaluates in the same way; likewise, its value ordinarily cannot be changed. See &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;.</source>
          <target state="translated">&amp;rsquo; also self-evaluates in the same way; likewise, its value ordinarily cannot be changed. See &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fc31ced975aa379697fb0851a7d736c665e468a7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; alternative that wasn&amp;rsquo;t used or a repetition that repeated zero times.</source>
          <target state="translated">&amp;rsquo; alternative that wasn&amp;rsquo;t used or a repetition that repeated zero times.</target>
        </trans-unit>
        <trans-unit id="c1a74ffb0dc4dc7e4c743a8920b27f5524948f77" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; alternatives for other operations. Thus, the regular expression &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; alternatives for other operations. Thus, the regular expression &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="1b2cbbbf4e466dbeed4b392c50613382ceec151c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; always applies to the &lt;em&gt;smallest&lt;/em&gt; possible preceding expression. Thus, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; always applies to the &lt;em&gt;smallest&lt;/em&gt; possible preceding expression. Thus, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="492195ee73c10e6ff600cddd309e3309bbf18930" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; always fails to match, and &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; always fails to match, and &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="db984dac3ea4c40350c99f39817ec3464d6adf1d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and &amp;lsquo;</source>
          <target state="translated">「と」</target>
        </trans-unit>
        <trans-unit id="508503a9e2a05cfc1a6ff5daaaf46331d0447994" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and (after subtracting 6) the &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and (after subtracting 6) the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="327a4fbd6d63f9a637e1b43664518f89a4c9ad3b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and any field number, you can put certain &lt;em&gt;flag characters&lt;/em&gt;.</source>
          <target state="translated">&amp;rsquo; and any field number, you can put certain &lt;em&gt;flag characters&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="b9aab084e2297ff3e467ec0192310693b03e868c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and balancing &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and balancing &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="0da286f89f5103c076755e052918a78dd35af032" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and convert the result to an absolute name using &lt;code&gt;expand-file-name&lt;/code&gt; (see &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;). This function converts absolute file names to relative names:</source>
          <target state="translated">&amp;rsquo; and convert the result to an absolute name using &lt;code&gt;expand-file-name&lt;/code&gt; (see &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;). This function converts absolute file names to relative names:</target>
        </trans-unit>
        <trans-unit id="baa616ebd8df11244e914c0a299b17750d209788" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and ending with an alphabetic letter such as &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and ending with an alphabetic letter such as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="79175cb0ff520e44fb8e6a542a984c3a0eceeee7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and ends with &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and ends with &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="c2fcf8b620f3fdf5b52d2b37a68369b92fe7521f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and formfeeds are printed as &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and formfeeds are printed as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="bd2fbaf99b92497ff77fe9085f15c33bfebe50c9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and if &lt;var&gt;user&lt;/var&gt; is a valid login name, it expands to &lt;var&gt;user&lt;/var&gt;&amp;rsquo;s home directory. If you do not want this expansion for a relative &lt;var&gt;filename&lt;/var&gt; that might begin with a literal &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and if &lt;var&gt;user&lt;/var&gt; is a valid login name, it expands to &lt;var&gt;user&lt;/var&gt; &amp;rsquo;s home directory. If you do not want this expansion for a relative &lt;var&gt;filename&lt;/var&gt; that might begin with a literal &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ddbe212092a3850a6592ebfd9def86080b3cc6a6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and is terminated by &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and is terminated by &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="90485833f1091e44ff644a3bd643f887a7ed7491" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and no other string. (It does &lt;em&gt;not&lt;/em&gt; match the string &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and no other string. (It does &lt;em&gt;not&lt;/em&gt; match the string &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="3f1a1ce48abc8bd6dcd260b86ac4ee2fcb976110" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and nothing else. &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and nothing else. &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="021529858e53a43870675359b472a92ddc6d8040" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and repetition constructs, but they continue this only until they find &lt;em&gt;some&lt;/em&gt; match. Then they succeed and report the first match found.</source>
          <target state="translated">&amp;rsquo; and repetition constructs, but they continue this only until they find &lt;em&gt;some&lt;/em&gt; match. Then they succeed and report the first match found.</target>
        </trans-unit>
        <trans-unit id="7af7761459cf1ff05cd2ae488989fd2c8f6d9bfc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo; and return &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d3237545fe9ec84fc3498a7ecd7047d9e3ce90e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and set &lt;var&gt;key-regexp&lt;/var&gt; to &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and set &lt;var&gt;key-regexp&lt;/var&gt; to &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="99e18431d36f8701544ec32fc691661acde42b69" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and that it does not use a value. For example, &lt;code&gt;(format &quot;%% %d&quot; 30)&lt;/code&gt; returns &lt;code&gt;&quot;% 30&quot;&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo; and that it does not use a value. For example, &lt;code&gt;(format &quot;%% %d&quot; 30)&lt;/code&gt; returns &lt;code&gt;&quot;% 30&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa11802d92e8c341644e83302e57832f8ff69486" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and the &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="7fedb197efda3051edb4aab2a2779281afab7a08" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and the newline).</source>
          <target state="translated">&amp;rsquo; and the newline).</target>
        </trans-unit>
        <trans-unit id="43e0fda5cf1f0baa6dd47d16a1cf435b967ee6c6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and the newline). The function skips all letters and spaces, but not newlines.</source>
          <target state="translated">&amp;rsquo; and the newline). The function skips all letters and spaces, but not newlines.</target>
        </trans-unit>
        <trans-unit id="247f1aa738740a7dd22ec6d782476124ec59835a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and then &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and then &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="c0f9c9b1704fc28364e58d29c4d471c435cba2ff" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and there is no</source>
          <target state="translated">&amp;rsquo; and there is no</target>
        </trans-unit>
        <trans-unit id="b951d99e0dfb67a30a002cf5928920d3032ade5c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and there is only &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and there is only &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ae4d9be3cce71811fc61c530e4bf942939a13c96" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and to &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and to &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="4527582eca518ba12b5c935b4134aac1268ac714" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and truncating to three characters after the &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; and truncating to three characters after the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="89f26838e683b3b65b002ddddf5fd6ebcd8e2c7e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appear in the echo area during loading unless &lt;var&gt;nomessage&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo; appear in the echo area during loading unless &lt;var&gt;nomessage&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c56dec29890ea600e9b5aa180c92ec30bb2bd73" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appearing as a name component, call &lt;code&gt;file-truename&lt;/code&gt; without prior direct or indirect calls to &lt;code&gt;expand-file-name&lt;/code&gt;. Otherwise, the file name component immediately preceding &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; appearing as a name component, call &lt;code&gt;file-truename&lt;/code&gt; without prior direct or indirect calls to &lt;code&gt;expand-file-name&lt;/code&gt; . Otherwise, the file name component immediately preceding &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ebc0bde22a1ebb5515ba33e674f9363fd1fcbee2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appearing as name components. This results in a sort of canonical name for the file. A file does not always have a unique truename; the number of distinct truenames a file has is equal to the number of hard links to the file. However, truenames are useful because they eliminate symbolic links as a cause of name variation.</source>
          <target state="translated">&amp;rsquo; appearing as name components. This results in a sort of canonical name for the file. A file does not always have a unique truename; the number of distinct truenames a file has is equal to the number of hard links to the file. However, truenames are useful because they eliminate symbolic links as a cause of name variation.</target>
        </trans-unit>
        <trans-unit id="3e8ec1766e925a3b991fa020e1194ff01608836c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appears at the beginning of the string, and if the command was invoked through &lt;em&gt;shift-translation&lt;/em&gt;, set the mark and activate the region temporarily, or extend an already active region, before the command is run. If the command was invoked without shift-translation, and the region is temporarily active, deactivate the region before the command is run. Shift-translation is controlled on the user level by &lt;code&gt;shift-select-mode&lt;/code&gt;; see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Shift-Selection.html#Shift-Selection&quot;&gt;Shift Selection&lt;/a&gt; in</source>
          <target state="translated">&amp;rsquo; appears at the beginning of the string, and if the command was invoked through &lt;em&gt;shift-translation&lt;/em&gt;, set the mark and activate the region temporarily, or extend an already active region, before the command is run. If the command was invoked without shift-translation, and the region is temporarily active, deactivate the region before the command is run. Shift-translation is controlled on the user level by &lt;code&gt;shift-select-mode&lt;/code&gt; ; see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Shift-Selection.html#Shift-Selection&quot;&gt;Shift Selection&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="b65a8cf6478558a372a3d356f3fcfc07aa18da09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appears at the beginning of the string, and if the key sequence used to invoke the command includes any mouse events, then the window associated with the first of those events is selected before the command is run.</source>
          <target state="translated">&amp;rsquo; appears at the beginning of the string, and if the key sequence used to invoke the command includes any mouse events, then the window associated with the first of those events is selected before the command is run.</target>
        </trans-unit>
        <trans-unit id="1ce319931b4caa56e5a4283b1cd7191423d41c4e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appears at the beginning of the string, then an error is signaled if the buffer is read-only.</source>
          <target state="translated">&amp;rsquo; appears at the beginning of the string, then an error is signaled if the buffer is read-only.</target>
        </trans-unit>
        <trans-unit id="8f50c6189461d2b2f5ede79f600d6b45dcb65e56" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appears immediately after another &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; appears immediately after another &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="a593561295c25cec0686925c263d54b149086755" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appears in &lt;var&gt;replacement&lt;/var&gt;, then it must be part of one of the following sequences:</source>
          <target state="translated">&amp;rsquo; appears in &lt;var&gt;replacement&lt;/var&gt; , then it must be part of one of the following sequences:</target>
        </trans-unit>
        <trans-unit id="1a6ae001aefa2d13ada5377db62c3de347f7a3db" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appended. If such a file exists, it is loaded. If there is no file by that name, then &lt;code&gt;load&lt;/code&gt; looks for a file named</source>
          <target state="translated">&amp;rsquo; appended. If such a file exists, it is loaded. If there is no file by that name, then &lt;code&gt;load&lt;/code&gt; looks for a file named</target>
        </trans-unit>
        <trans-unit id="118ad287732c3ec7c4882a00216cdc28e2d8db4d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; applies to the largest possible surrounding expressions. Only a surrounding &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; applies to the largest possible surrounding expressions. Only a surrounding &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="f202db6fbdbbdb468fd12f93e1537d7259dba9f6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are also considered risky.</source>
          <target state="translated">&amp;rsquo; are also considered risky.</target>
        </trans-unit>
        <trans-unit id="e2115cc6fa452250ecedb1acb5c1518b982ef761" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are comments. You want to use Text mode abbrevs for those lines. The regular local abbrev table, &lt;code&gt;foo-mode-abbrev-table&lt;/code&gt; is appropriate for all other lines. See &lt;a href=&quot;standard-abbrev-tables#Standard-Abbrev-Tables&quot;&gt;Standard Abbrev Tables&lt;/a&gt;, for the definitions of &lt;code&gt;local-abbrev-table&lt;/code&gt; and &lt;code&gt;text-mode-abbrev-table&lt;/code&gt;. See &lt;a href=&quot;advising-functions#Advising-Functions&quot;&gt;Advising Functions&lt;/a&gt;, for details of &lt;code&gt;add-function&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo; are comments. You want to use Text mode abbrevs for those lines. The regular local abbrev table, &lt;code&gt;foo-mode-abbrev-table&lt;/code&gt; is appropriate for all other lines. See &lt;a href=&quot;standard-abbrev-tables#Standard-Abbrev-Tables&quot;&gt;Standard Abbrev Tables&lt;/a&gt;, for the definitions of &lt;code&gt;local-abbrev-table&lt;/code&gt; and &lt;code&gt;text-mode-abbrev-table&lt;/code&gt; . See &lt;a href=&quot;advising-functions#Advising-Functions&quot;&gt;Advising Functions&lt;/a&gt;, for details of &lt;code&gt;add-function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c8fb015d740c91579b7ded517e78763c6d721a9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are described by a single line.</source>
          <target state="translated">&amp;rsquo; are described by a single line.</target>
        </trans-unit>
        <trans-unit id="604ce82486dd944d232102dac03151482f50b413" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are five ways of writing a floating-point number whose value is 1500. They are all equivalent.</source>
          <target state="translated">&amp;rsquo; are five ways of writing a floating-point number whose value is 1500. They are all equivalent.</target>
        </trans-unit>
        <trans-unit id="8227e2fa50c66aded206d8f8cf46d294d39a9906" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are five ways of writing a floating-point number whose value is 1500. They are all equivalent. Like Common Lisp, Emacs Lisp requires at least one digit after any decimal point in a floating-point number; &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; are five ways of writing a floating-point number whose value is 1500. They are all equivalent. Like Common Lisp, Emacs Lisp requires at least one digit after any decimal point in a floating-point number; &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="8123359dddfa5c001f5a58773cb06a1c1eaa8390" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are identical: they stand for the same object, the symbol &lt;code&gt;nil&lt;/code&gt;. The different ways of writing the symbol are intended entirely for human readers. After the Lisp reader has read either &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; are identical: they stand for the same object, the symbol &lt;code&gt;nil&lt;/code&gt; . The different ways of writing the symbol are intended entirely for human readers. After the Lisp reader has read either &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="f54e5b2c44249d3d8785b7a822c24a0f536e589f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are included, and &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; are included, and &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="6fd60d3ccea9c46fd6f16e5edda306eb18ee673c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are less often used but also require no special punctuation. Any other characters may be included in a symbol&amp;rsquo;s name by escaping them with a backslash. In contrast to its use in strings, however, a backslash in the name of a symbol simply quotes the single character that follows the backslash. For example, in a string, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; are less often used but also require no special punctuation. Any other characters may be included in a symbol&amp;rsquo;s name by escaping them with a backslash. In contrast to its use in strings, however, a backslash in the name of a symbol simply quotes the single character that follows the backslash. For example, in a string, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d4b853ee2c7f99c4e62509082a7dd1643fbbdeaa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are not affected by &lt;code&gt;search-spaces-regexp&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo; are not affected by &lt;code&gt;search-spaces-regexp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bc32668d784ad2f2ae6fd14726948f56aabfb3f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are not special there).</source>
          <target state="translated">&amp;rsquo; are not special there).</target>
        </trans-unit>
        <trans-unit id="69bc91c5318fbf77227c1ef2adeddbb6da909565" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are not used without a check, typically at configuration time, and the Emacs build procedure provides a substitute implementation if necessary. Some C11 features, such as anonymous structures and unions, are too difficult to emulate, so they are avoided entirely.</source>
          <target state="translated">&amp;rsquo; are not used without a check, typically at configuration time, and the Emacs build procedure provides a substitute implementation if necessary. Some C11 features, such as anonymous structures and unions, are too difficult to emulate, so they are avoided entirely.</target>
        </trans-unit>
        <trans-unit id="3ac949cb5261b5173f6488d28e70930719ea262d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are present, the &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; are present, the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="1af52a5f700a05d4b905a61acaf355b40c2419f5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are related by case-conversion, they should have the same canonical equivalent character (which should be either &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; are related by case-conversion, they should have the same canonical equivalent character (which should be either &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="7d86d133258798e410e1e77697ab8bd7adf5b529" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are simplified to their canonical form:</source>
          <target state="translated">&amp;rsquo; are simplified to their canonical form:</target>
        </trans-unit>
        <trans-unit id="aca1f53c80c56da79bef0ccc4d2b59e57a45f1c3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are supplied, try to upgrade to an encrypted connection via</source>
          <target state="translated">&amp;rsquo; are supplied, try to upgrade to an encrypted connection via</target>
        </trans-unit>
        <trans-unit id="b77499b49fe35e7e37442358274ccb42cec2ca70" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are treated as hexadecimal.</source>
          <target state="translated">&amp;rsquo; are treated as hexadecimal.</target>
        </trans-unit>
        <trans-unit id="93e2cdf6227923b44c1d22b7763dce83038e110f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are used to describe comment delimiters. The digit flags are used for comment delimiters made up of 2 characters. They indicate that a character can &lt;em&gt;also&lt;/em&gt; be part of a comment sequence, in addition to the syntactic properties associated with its character class. The flags are independent of the class and each other for the sake of characters such as &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; are used to describe comment delimiters. The digit flags are used for comment delimiters made up of 2 characters. They indicate that a character can &lt;em&gt;also&lt;/em&gt; be part of a comment sequence, in addition to the syntactic properties associated with its character class. The flags are independent of the class and each other for the sake of characters such as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5257b174575eff29e85a5aacd2c432f8e3f7001c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are used to qualify the corresponding comment delimiter.</source>
          <target state="translated">&amp;rsquo; are used to qualify the corresponding comment delimiter.</target>
        </trans-unit>
        <trans-unit id="321dd44a8abe77dbfe2b3e98ca9aa0d3221453ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are usually &lt;em&gt;abnormal hooks&lt;/em&gt; (some old code may also use the deprecated &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; are usually &lt;em&gt;abnormal hooks&lt;/em&gt; (some old code may also use the deprecated &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="c383756bbc973cca9d09cfd350fc1b4ba148ee37" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are valid read syntax for the character</source>
          <target state="translated">&amp;rsquo; are valid read syntax for the character</target>
        </trans-unit>
        <trans-unit id="0aae17f19e8930715b75ae5218e2f6cc638e46b3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; argument prevents &lt;code&gt;temacs&lt;/code&gt; from trying to initialize any of its data on the terminal, so that the tables of terminal information are empty in the dumped Emacs.) This method is also known as &lt;em&gt;unexec&lt;/em&gt;, because it produces a program file from a running process, and thus is in some sense the opposite of executing a program to start a process. Although this method was the way that Emacs traditionally saved its state, it is now deprecated.</source>
          <target state="translated">&amp;rsquo; argument prevents &lt;code&gt;temacs&lt;/code&gt; from trying to initialize any of its data on the terminal, so that the tables of terminal information are empty in the dumped Emacs.) This method is also known as &lt;em&gt;unexec&lt;/em&gt;, because it produces a program file from a running process, and thus is in some sense the opposite of executing a program to start a process. Although this method was the way that Emacs traditionally saved its state, it is now deprecated.</target>
        </trans-unit>
        <trans-unit id="27924b7f8f3659c402eb0d72e17c1a332adfc0a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; argument to get the up-event that was discarded (if any) after &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; argument to get the up-event that was discarded (if any) after &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="0c92ce7a76dcb5d065edf08b4093c02368db0781" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as a designator character always stands for escape character syntax, regardless of whether the &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; as a designator character always stands for escape character syntax, regardless of whether the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="b77e04ef4b66e5fd50844e90f33f697f49586411" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as a line of text at the top of the buffer.</source>
          <target state="translated">&amp;rsquo; as a line of text at the top of the buffer.</target>
        </trans-unit>
        <trans-unit id="c9e70687ee5c8e3a1744e1cbce62c7f6661bce3c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as a prompt. (It would be better to take the prompt from the events used to invoke &lt;code&gt;execute-extended-command&lt;/code&gt;, but that is painful to implement.) A description of the value of the prefix argument, if any, also becomes part of the prompt.</source>
          <target state="translated">&amp;rsquo; as a prompt. (It would be better to take the prompt from the events used to invoke &lt;code&gt;execute-extended-command&lt;/code&gt; , but that is painful to implement.) A description of the value of the prefix argument, if any, also becomes part of the prompt.</target>
        </trans-unit>
        <trans-unit id="1f228695dc603516a34530149b4e5121c738ff11" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as a separate word.</source>
          <target state="translated">&amp;rsquo; as a separate word.</target>
        </trans-unit>
        <trans-unit id="e6120cd8b2fbac7c542717f87c17c3bffd3dc683" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as a separate word. &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; as a separate word. &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d3a2591a458e355ad7fec90cff33b85c44761259" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as directory separators.</source>
          <target state="translated">&amp;rsquo; as directory separators.</target>
        </trans-unit>
        <trans-unit id="71198f20e0c8c1dc076c446098f0c5767070c5ea" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as keywords.</source>
          <target state="translated">'をキーワードとして。</target>
        </trans-unit>
        <trans-unit id="482e5fb76e9043d0c0eb0660b0477ed7a6947f37" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as ordinary since there is no preceding expression on which the &amp;lsquo;</source>
          <target state="translated">'先行する式がないため、通常どおり'</target>
        </trans-unit>
        <trans-unit id="343d43642dcf2e6ab419a2a1c0b2e0ea3ffe3eb0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as the class.</source>
          <target state="translated">'クラスとして。</target>
        </trans-unit>
        <trans-unit id="2f57b66c871499626d93936a95531675f4dcf975" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as the coding system with which to visit or save a file. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Coding.html#Text-Coding&quot;&gt;Specifying a Coding System for File Text&lt;/a&gt; in</source>
          <target state="translated">'ファイルにアクセスまたは保存するためのコーディングシステムとして。参照&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Coding.html#Text-Coding&quot;&gt;ファイルのテキストのためのコーディングシステムを指定する&lt;/a&gt;には</target>
        </trans-unit>
        <trans-unit id="c6cfdf2d8ed3977b4c868f2f791e857b0b6e8347" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as the current buffer. We assume that buffer &amp;lsquo;</source>
          <target state="translated">'現在のバッファとして。バッファ '</target>
        </trans-unit>
        <trans-unit id="6c0a00b3d88593f9b381a92f96ebce2e8fafb03b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as the first character in the symbol name will be bound. Finding the keys is done with &lt;code&gt;assq&lt;/code&gt;, and the &lt;code&gt;cdr&lt;/code&gt; of the return value of this &lt;code&gt;assq&lt;/code&gt; is assigned as the value for the binding.</source>
          <target state="translated">シンボル名の最初の文字として 'がバインドされます。キーを見つけることがで行われ &lt;code&gt;assq&lt;/code&gt; に、そして &lt;code&gt;cdr&lt;/code&gt; これの戻り値の &lt;code&gt;assq&lt;/code&gt; には、バインディングの値として割り当てられます。</target>
        </trans-unit>
        <trans-unit id="99d29cbd60f85684a1962658b99cbda3ff670b02" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as the top line in the buffer.</source>
          <target state="translated">'バッファの一番上の行として。</target>
        </trans-unit>
        <trans-unit id="59e883f998af40fe432b0b4f3d4bb76892bb0b41" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; assumes none of the environment variables have &amp;lsquo;</source>
          <target state="translated">'環境変数に'がないことを前提としています</target>
        </trans-unit>
        <trans-unit id="6712fe290fb96f31da4fd0ec2fbb6cbf65b166e0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the beginning of an item string is omitted when the menu label is displayed, and has no other effect.</source>
          <target state="translated">項目文字列の先頭の 'は、メニューラベルが表示されるときに省略され、他の効果はありません。</target>
        </trans-unit>
        <trans-unit id="353a606510a25c4189f802b036bb8fda207fc65b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the beginning of the name to force interpretation as a symbol.) The characters &amp;lsquo;</source>
          <target state="translated">'名前の先頭に記号としての解釈を強制します。）文字'</target>
        </trans-unit>
        <trans-unit id="e3b2fe16e7144766bb792a8cf8ac0eb4dc5fca99" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the beginning of this sentence or the first &amp;lsquo;</source>
          <target state="translated">'この文の最初または最初の'</target>
        </trans-unit>
        <trans-unit id="7a458b3a56d4dcac32516e5c242dcb242d303290" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the beginning.&lt;a href=&quot;#FOOT1&quot; name=&quot;DOCF1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">'最初に。&lt;a href=&quot;#FOOT1&quot; name=&quot;DOCF1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c1cdbaa61f053e162f772264854db40e29721f3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the end indicates that the immediately preceding regular expression (a character alternative, in this case) may be repeated zero or more times.</source>
          <target state="translated">最後の 'は、直前の正規表現（この場合は代替文字）が0回以上繰り返される可能性があることを示します。</target>
        </trans-unit>
        <trans-unit id="780e1d53f801411d133606df2fd44863e2d71323" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the end of a line that is followed by hidden text. This example is a continuation of the previous one.</source>
          <target state="translated">'非表示のテキストが続く行の終わり。この例は、前の例の続きです。</target>
        </trans-unit>
        <trans-unit id="0073273586ba687ce65b600b551e2e1f332744fc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the proper place, and type</source>
          <target state="translated">'適切な場所に入力し、</target>
        </trans-unit>
        <trans-unit id="48098c5c7a51a970226595b17cba205eec0f996b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; before an expression or the &amp;lsquo;</source>
          <target state="translated">'式の前または'</target>
        </trans-unit>
        <trans-unit id="f8cb1492f53723c854828b1c829c4fa8d0bb950b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; before making a plain connection, then this parameter could be something like &amp;lsquo;</source>
          <target state="translated">'プレーン接続を行う前に、このパラメータは'のようになります。</target>
        </trans-unit>
        <trans-unit id="737b81b601c125186fac023ceb8348fa67c55c6c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; before nonnegative year numbers with more than four digits, &amp;lsquo;</source>
          <target state="translated">'4桁を超える非負の年番号の前'</target>
        </trans-unit>
        <trans-unit id="c8d3aaa26e8b8eafff86d4458dd0e1c515ab8601" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; before the opening &amp;lsquo;</source>
          <target state="translated">「オープニング前」</target>
        </trans-unit>
        <trans-unit id="b6ade00eb0d6f65cccb39ce2d6bc2fbddbad69dc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; begins a &lt;em&gt;complemented character alternative&lt;/em&gt;. This matches any character except the ones specified. Thus, &amp;lsquo;</source>
          <target state="translated">'&lt;em&gt;補完された文字の代替を&lt;/em&gt;開始します。これは、指定された文字以外のすべての文字に一致します。したがって、 '</target>
        </trans-unit>
        <trans-unit id="5f6d78a45e40f35f67dc486da793536076533846" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; begins a comment, but in C mode, it terminates a statement. To support these variations, the syntax table is local to each buffer. Typically, each major mode has its own syntax table, which it installs in all buffers that use that mode. For example, the variable &lt;code&gt;emacs-lisp-mode-syntax-table&lt;/code&gt; holds the syntax table used by Emacs Lisp mode, and &lt;code&gt;c-mode-syntax-table&lt;/code&gt; holds the syntax table used by C mode. Changing a major mode&amp;rsquo;s syntax table alters the syntax in all of that mode&amp;rsquo;s buffers, as well as in any buffers subsequently put in that mode. Occasionally, several similar modes share one syntax table. See &lt;a href=&quot;example-major-modes#Example-Major-Modes&quot;&gt;Example Major Modes&lt;/a&gt;, for an example of how to set up a syntax table.</source>
          <target state="translated">'はコメントを開始しますが、Cモードではステートメントを終了します。これらのバリエーションをサポートするために、構文テーブルは各バッファーに対してローカルです。通常、各メジャーモードには独自の構文テーブルがあり、そのモードを使用するすべてのバッファーにインストールされます。たとえば、変数 &lt;code&gt;emacs-lisp-mode-syntax-table&lt;/code&gt; は、Emacs Lispモードで使用される構文テーブルを保持し、 &lt;code&gt;c-mode-syntax-table&lt;/code&gt; は、Cモードで使用される構文テーブルを保持します。メジャーモードの構文テーブルを変更すると、そのモードのすべてのバッファー、およびその後そのモードに配置されるすべてのバッファーの構文が変更されます。時折、いくつかの同様のモードが1つの構文テーブルを共有します。構文テーブルの設定方法の例については、&lt;a href=&quot;example-major-modes#Example-Major-Modes&quot;&gt;メジャーモードの例を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b61cdb240ed3c5cfc81e4da1e936257039b9db2e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; belongs to this class in both C and Lisp. (In C, it is used thus only inside strings, but it turns out to cause no trouble to treat it this way throughout C code.)</source>
          <target state="translated">'はCとLispの両方でこのクラスに属します。（Cでは、このように文字列内でのみ使用されますが、Cコード全体でこのように扱うのに問題はありません。）</target>
        </trans-unit>
        <trans-unit id="2cb37013e936ae00401d8a005e184151a40fb56d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; between them. Thus, &amp;lsquo;</source>
          <target state="translated">' それらの間の。したがって、 '</target>
        </trans-unit>
        <trans-unit id="972edce46d63dafc165883e8b37f3bf2676a3b79" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; buffer.</source>
          <target state="translated">'バッファ。</target>
        </trans-unit>
        <trans-unit id="5d1887a3953c81c38d3a397b9d4b433d4f6ffebc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; but is slightly greater than 1/10.</source>
          <target state="translated">'しかし、1/10よりわずかに大きい。</target>
        </trans-unit>
        <trans-unit id="4afc4a6f88775dfaccd67a8428a1256c20778acc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; but matches only at the end of a line (or the end of the accessible portion of the buffer). Thus, &amp;lsquo;</source>
          <target state="translated">'ただし、行の終わり（またはバッファのアクセス可能な部分の終わり）でのみ一致します。したがって、 '</target>
        </trans-unit>
        <trans-unit id="c814a4c2425281503dfa29b94a443bba238f5a74" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; but no other string.</source>
          <target state="translated">'しかし、他の文字列はありません。</target>
        </trans-unit>
        <trans-unit id="c1511ed758c2eab8b05923945a7ed1e3922b8559" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; but no user named &amp;lsquo;</source>
          <target state="translated">'しかし、'という名前のユーザーはいない</target>
        </trans-unit>
        <trans-unit id="010d722d4e4566fc05d8582626d2d0e11b8e91b5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; but not the string &amp;lsquo;</source>
          <target state="translated">'文字列ではなく'</target>
        </trans-unit>
        <trans-unit id="60db1f54efc74f259de4d769d48e0d019f180dcb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; buttons for adding more elements or removing elements.</source>
          <target state="translated">'要素を追加または削除するためのボタン。</target>
        </trans-unit>
        <trans-unit id="fca2a1b46f232f9b263b618d7a16d86a37e50a0c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; buttons is cleared.</source>
          <target state="translated">'ボタンがクリアされます。</target>
        </trans-unit>
        <trans-unit id="d048c0f4f80c1d2d5eaa292a2276f3b2d23b084e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; buttons. Most commands that use the</source>
          <target state="translated">'ボタン。を使用するほとんどのコマンド</target>
        </trans-unit>
        <trans-unit id="d76ee2e57deb5720c6464869da82b3bea0294404" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; by itself at the end of a character alternative. For example, although &amp;lsquo;</source>
          <target state="translated">'代替文字の最後にそれ自体。たとえば、 '</target>
        </trans-unit>
        <trans-unit id="f9988145bb5f1e29df0129c5e08106e390392663" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can act. It is poor practice to depend on this behavior; quote the special character anyway, regardless of where it appears.</source>
          <target state="translated">'行動することができます。この振る舞いに依存するのは悪い習慣です。表示される場所に関係なく、とにかく特殊文字を引用します。</target>
        </trans-unit>
        <trans-unit id="d4939f22243b4fb108fb32a219337f3eed051521" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can appear at the beginning of a character alternative or as the upper bound of a range, it is better style to put &amp;lsquo;</source>
          <target state="translated">'文字の選択肢の先頭に表示することも、範囲の上限として表示することもできます。'を配置する方が適切です。</target>
        </trans-unit>
        <trans-unit id="d91691910c0c30a32a4c97de099f465dd248f0cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be completed.</source>
          <target state="translated">'完了できます。</target>
        </trans-unit>
        <trans-unit id="d7c1e2b7f4841b767a31da4e4ec3c7e6f3721d13" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be continued onto the next line by escaping the newline with &amp;lsquo;</source>
          <target state="translated">'で改行をエスケープすることにより、次の行に続けることができます'</target>
        </trans-unit>
        <trans-unit id="ef746faddb8f48a09d0cd9875993ed45ed085a9f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be mixed with numbered specifications.</source>
          <target state="translated">'番号付きの仕様と組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="dc59af0338238089f989c756a132b0538980195a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be omitted). The compiler takes for granted that that file really defines the function, and does not check.</source>
          <target state="translated">'は省略できます）。コンパイラは、そのファイルが実際に関数を定義していることを当然のことと見なし、チェックしません。</target>
        </trans-unit>
        <trans-unit id="89b580c6344418bebc098740011755267715a04f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be preceded by one, two, or three colons; if plain &amp;lsquo;</source>
          <target state="translated">'の前に1つ、2つ、または3つのコロンを付けることができます。プレーンの場合 '</target>
        </trans-unit>
        <trans-unit id="eadcaf72286f019a9fcf57aadfb2f5255a12188b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be specified as below:</source>
          <target state="translated">'は次のように指定できます。</target>
        </trans-unit>
        <trans-unit id="4bc91ac4dbf2b590de83064bdf5c79f4494f314e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be used only at the beginning of the regular expression, or after &amp;lsquo;</source>
          <target state="translated">'正規表現の先頭、または'の後にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="72ba700a6cf4dad4ec38460b710154d3ca6e18f5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be used only at the end of the regular expression, or before &amp;lsquo;</source>
          <target state="translated">'は正規表現の最後、または'の前でのみ使用できます</target>
        </trans-unit>
        <trans-unit id="ad5af02beeebc6a4653d0da6dab1c4b8df4ed06d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can match the null string in infinitely many ways, so it causes an infinite loop. To avoid these problems, check nested repetitions carefully, to make sure that they do not cause combinatorial explosions in backtracking.</source>
          <target state="translated">'はnull文字列と無限に多くの方法で一致する可能性があるため、無限ループが発生します。これらの問題を回避するには、ネストされた繰り返しを注意深くチェックして、バックトラックで組み合わせ爆発を引き起こさないことを確認します。</target>
        </trans-unit>
        <trans-unit id="455b913b743153f5e8c30c8d141c496e9cfc1685" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can mishandle NaNs and can lose precision and type, and &amp;lsquo;</source>
          <target state="translated">'NaNを誤って処理し、精度とタイプを失う可能性があります。'</target>
        </trans-unit>
        <trans-unit id="8a590f2b9d7745d2f9521604847d0781d0bbf420" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can mishandle negative integers. See &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;.</source>
          <target state="translated">'は負の整数を誤って処理する可能性があります。&lt;a href=&quot;input-functions#Input-Functions&quot;&gt;入力関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dafb38d98964d8f67b5057847b1c243511764692" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; cannot match &amp;lsquo;</source>
          <target state="translated">「一致できません」</target>
        </trans-unit>
        <trans-unit id="24b3b7306c0cd587a7c17f71e1f8ca7616db5156" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; causes Emacs to run noninteractively. In this mode, Emacs does not read commands from the terminal, it does not alter the terminal modes, and it does not expect to be outputting to an erasable screen. The idea is that you specify Lisp programs to run; when they are finished, Emacs should exit. The way to specify the programs to run is with &amp;lsquo;</source>
          <target state="translated">'はEmacsを非対話的に実行させます。このモードでは、Emacsは端末からコマンドを読み取らず、端末モードを変更せず、消去可能な画面に出力することを期待していません。アイデアは、実行するLispプログラムを指定することです。それらが終了すると、Emacsは終了するはずです。実行するプログラムを指定する方法は、次のとおりです。</target>
        </trans-unit>
        <trans-unit id="76b611104dc9e6a6b8de4a319204b9d340b562be" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; causes any padding inserted by the width, if specified, to be inserted on the right rather than the left. If both &amp;lsquo;</source>
          <target state="translated">'は、幅で挿入されたパディングが指定されている場合、左側ではなく右側に挿入されます。両方の場合 '</target>
        </trans-unit>
        <trans-unit id="207c9f1b3f981c23ba6e4ca996ef94f40ced1f45" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character actually has that syntax in the current syntax table. See &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;, for a list of syntax classes and their designator characters.</source>
          <target state="translated">'文字は、実際には現在の構文テーブルにその構文があります。構文クラスとその指定文字のリストについては、&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;構文クラス表を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5d7d35e4b75771eb910f211279940f259093b193" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character in its &lt;code&gt;interactive&lt;/code&gt; spec is invoked, before the command itself is executed (see &lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;^&lt;/a&gt;).</source>
          <target state="translated">' &lt;code&gt;interactive&lt;/code&gt; 仕様の文字は、コマンド自体が実行される前に呼び出されます（&lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;^を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="8d2ab82eb70d18c112a661590b728d62d6f980a7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character is &amp;lsquo;</source>
          <target state="translated">'文字は'</target>
        </trans-unit>
        <trans-unit id="4cbfa92faa4afd47786f51bdf876bf4b3ffe1326" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character matches any single character. Case is ignored when matching font names.</source>
          <target state="translated">'文字は任意の1文字に一致します。フォント名を照合する場合、大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="eab23ce77ddb610a093d1b53633e4af4ca504166" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character matches any substring, and the &amp;lsquo;</source>
          <target state="translated">'文字は任意の部分文字列に一致し、'</target>
        </trans-unit>
        <trans-unit id="b95555c0a4b80b53f4d749ed29753037a6b53629" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character used in the printed representations of objects with no read representation, has nothing to do with hash tables. See &lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;Printed Representation&lt;/a&gt;.)</source>
          <target state="translated">'読み取り表現のないオブジェクトの印刷表現で使用される文字は、ハッシュテーブルとは関係ありません。&lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;印刷表現を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="6427feb738743c5d2257b422949e6f0dfe5c01ad" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character with a dash &amp;lsquo;</source>
          <target state="translated">'ダッシュ付きの文字'</target>
        </trans-unit>
        <trans-unit id="cc32b0657736c97a1a39ad818518e451327ca725" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character. If some of the modifiers cannot be reflected in the character code, &lt;code&gt;read-char&lt;/code&gt; leaves the unresolved modifier bits set in the returned event. For example, if the user types</source>
          <target state="translated">' キャラクター。一部の修飾子を文字コードに反映できない場合、 &lt;code&gt;read-char&lt;/code&gt; は、返されたイベントに未解決の修飾子ビットを設定したままにします。たとえば、ユーザーが次のように入力した場合</target>
        </trans-unit>
        <trans-unit id="5f8c49c96c5b6c9e7ff31ba5210f25cc0e4247a2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character. The function includes in the prompt the possible responses in &lt;var&gt;answers&lt;/var&gt; by appending them to the end of &lt;var&gt;question&lt;/var&gt;. The possible responses are provided in &lt;var&gt;answers&lt;/var&gt; as an alist whose elements are of the following form:</source>
          <target state="translated">' キャラクター。この関数は、 &lt;var&gt;question&lt;/var&gt; の最後に &lt;var&gt;answers&lt;/var&gt; を追加することにより、回答に可能な回答をプロンプトに含めます。可能な回答は、要素が次の形式のリストとして &lt;var&gt;answers&lt;/var&gt; 提供されます。</target>
        </trans-unit>
        <trans-unit id="bfdc527d56ed43c7ac622de888f18baa6f25871b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters (see &lt;a href=&quot;comments#Comments&quot;&gt;Comments&lt;/a&gt;).</source>
          <target state="translated">'文字（&lt;a href=&quot;comments#Comments&quot;&gt;コメントを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="837caec4da69ae65c61891a264b40fdd7f4f7387" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters (see &lt;a href=&quot;comments#Comments&quot;&gt;Comments&lt;/a&gt;). This is used in byte-compiled files, and is not meant to be used in Emacs Lisp source files.</source>
          <target state="translated">'文字（&lt;a href=&quot;comments#Comments&quot;&gt;コメントを&lt;/a&gt;参照）。これはバイトコンパイルされたファイルで使用され、EmacsLispソースファイルで使用されることを意図したものではありません。</target>
        </trans-unit>
        <trans-unit id="40a0cb8e1b406ec642b8e7a63eb41b2bb9acb3c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters appear where necessary before special characters.</source>
          <target state="translated">'文字は、必要に応じて特殊文字の前に表示されます。</target>
        </trans-unit>
        <trans-unit id="f12b4e42180838700555599784714962b0dbdf2e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters as format specifications, you should &lt;em&gt;never&lt;/em&gt; pass an arbitrary string as the first argument. This is particularly true when the string is generated by some Lisp code. Unless the string is &lt;em&gt;known&lt;/em&gt; to never include any &amp;lsquo;</source>
          <target state="translated">'フォーマット仕様としての文字。最初の引数として任意の文字列を渡してはなり&lt;em&gt;ません&lt;/em&gt;。これは、文字列がLispコードによって生成される場合に特に当てはまります。文字列に'が含まれないことが&lt;em&gt;わかっている場合&lt;/em&gt;を除きます</target>
        </trans-unit>
        <trans-unit id="527f296119faf3a6b276660de1062ac41ae355c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters as having punctuation syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;), and binds</source>
          <target state="translated">'句読点構文を持つ文字（&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;構文クラス表を&lt;/a&gt;参照）、およびバインド</target>
        </trans-unit>
        <trans-unit id="678d283e76dd55b4dcd84ec12555c174517f1ed7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters instead of spaces.</source>
          <target state="translated">'スペースの代わりに文字。</target>
        </trans-unit>
        <trans-unit id="5363fd93483cac5baf805bf1b0a735aa4a85da46" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters instead of spaces. This flag is ignored for non-numerical specification characters like &amp;lsquo;</source>
          <target state="translated">'スペースの代わりに文字。'のような数値以外の指定文字の場合、このフラグは無視されます。</target>
        </trans-unit>
        <trans-unit id="3d0a8d23f16cf0032596eb27847468987afba806" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters or &amp;lsquo;</source>
          <target state="translated">'文字または'</target>
        </trans-unit>
        <trans-unit id="b3594111ba0ecafb65048987063d85f660226b2b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters that enclose the class name are part of the name, so a regular expression using these classes needs one more pair of brackets. For example, a regular expression matching a sequence of one or more letters and digits would be &amp;lsquo;</source>
          <target state="translated">'クラス名を囲む文字は名前の一部であるため、これらのクラスを使用する正規表現には、もう1組の角かっこが必要です。たとえば、1つ以上の文字と数字のシーケンスに一致する正規表現は次のようになります。</target>
        </trans-unit>
        <trans-unit id="89c233272a8554bd40f4eaed30a08449832250ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters to prevent subsequent incorrect results.</source>
          <target state="translated">'文字は、その後の誤った結果を防ぎます。</target>
        </trans-unit>
        <trans-unit id="c8435efd5724e3e1e478a29b41315286c61ca4d0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters, and &amp;lsquo;</source>
          <target state="translated">'文字、および'</target>
        </trans-unit>
        <trans-unit id="192c42d97615bb98ad0e034a255a8a3d003d2e48" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters, and symbols appear without &amp;lsquo;</source>
          <target state="translated">'文字、および記号は'なしで表示されます</target>
        </trans-unit>
        <trans-unit id="f5160feb1befbb5792410becb607fc37171d9f89" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters, pass &lt;code&gt;&quot;%s&quot;&lt;/code&gt;, described below, as the first argument, and the string as the second, like this:</source>
          <target state="translated">'文字は、次のように、最初の引数として以下で説明する &lt;code&gt;&quot;%s&quot;&lt;/code&gt; を渡し、2番目の引数として文字列を渡します。</target>
        </trans-unit>
        <trans-unit id="8b77cee5b6563a4de6ac77cb077be15ddbbf2a2f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters.</source>
          <target state="translated">'文字。</target>
        </trans-unit>
        <trans-unit id="6e99b143b986c613902ac390529d3cb29755b49b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters. For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">'文字。割り当てられていないコードポイントの場合、値は &lt;code&gt;nil&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b40c78d379d0db9711301cce01ce3f243b30c572" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; code character.</source>
          <target state="translated">'コード文字。</target>
        </trans-unit>
        <trans-unit id="c308006ab1d703e2247a3d0f277a432605ac1076" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; command-line options were specified.</source>
          <target state="translated">'コマンドラインオプションが指定されました。</target>
        </trans-unit>
        <trans-unit id="2a165fa4001872456de7d47871c6e5514134638c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; commands sent through the connection. The value of &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;speed&lt;/var&gt; is valid only for connections that were already opened by a previous call to &lt;code&gt;make-serial-process&lt;/code&gt; or &lt;code&gt;serial-term&lt;/code&gt;.</source>
          <target state="translated">'接続を介して送信されるコマンド。値が &lt;code&gt;nil&lt;/code&gt; のための &lt;var&gt;speed&lt;/var&gt; 、すでに前回の呼び出しによって開かれた接続のために有効である &lt;code&gt;make-serial-process&lt;/code&gt; または &lt;code&gt;serial-term&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9233cb0afed24a43fd899b6e0b1b057332405b8b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; component can remain in the output:</source>
          <target state="translated">'コンポーネントは出力に残すことができます：</target>
        </trans-unit>
        <trans-unit id="9a04d2d2adbf5c45326202275c2c5de900e7f03d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; concluded.</source>
          <target state="translated">'結論。</target>
        </trans-unit>
        <trans-unit id="72f930f55bbfcba394f4e628c19456940ece7497" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; connection.</source>
          <target state="translated">'接続。</target>
        </trans-unit>
        <trans-unit id="82873e05db414d218046b8f3fabdfd5ec660bf4e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; consists of the complemented character alternative &amp;lsquo;</source>
          <target state="translated">'補完された文字の選択肢で構成されています'</target>
        </trans-unit>
        <trans-unit id="ad9154a17e0aac5b0527d1980e86b585508ffac8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct because, in practice, there was usually no conflict between the two meanings. But occasionally there is a conflict, and that led to the introduction of shy groups.</source>
          <target state="translated">'実際には、通常、2つの意味の間に矛盾はなかったためです。しかし、時には対立があり、それが恥ずかしがり屋のグループの導入につながりました。</target>
        </trans-unit>
        <trans-unit id="f1a985d4f574bce864bf4368958c345fc3542699" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct by matching, immediately, as many repetitions as can be found. Then it continues with the rest of the pattern. If that fails, backtracking occurs, discarding some of the matches of the &amp;lsquo;</source>
          <target state="translated">'見つけられる限り多くの繰り返しを即座に照合することによって構築します。次に、残りのパターンを続行します。それが失敗した場合、バックトラックが発生し、 'の一致の一部が破棄されます</target>
        </trans-unit>
        <trans-unit id="77b90b1c32d51efe9034181e56be40c7d764287b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct matches more than once (which can happen, for instance, if it is followed by &amp;lsquo;</source>
          <target state="translated">'コンストラクトは複数回一致します（たとえば、その後に'が続く場合に発生する可能性があります</target>
        </trans-unit>
        <trans-unit id="1130d990613770867e04d17ced8ba136908af9d7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct never matches anything. To use an artificial example, &amp;lsquo;</source>
          <target state="translated">'構成は何にも一致しません。人工的な例を使用するには、 '</target>
        </trans-unit>
        <trans-unit id="a65899090d45e166a19990779e47f027497cad1e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct substitutes the value of &lt;code&gt;global-mode-string&lt;/code&gt;, but that is obsolete, since the variable is included in the mode line from &lt;code&gt;mode-line-format&lt;/code&gt;.</source>
          <target state="translated">'構文は &lt;code&gt;global-mode-string&lt;/code&gt; の値を置き換えますが、変数が &lt;code&gt;mode-line-format&lt;/code&gt; からmode lineに含まれているため、これは廃止されました。</target>
        </trans-unit>
        <trans-unit id="d97b7cd37c9edcb2fdc6ef4a28b8f6b3f404085c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct, which skips the next &lt;var&gt;count&lt;/var&gt; characters, is useful for program-generated comments containing binary data. The Emacs Lisp byte compiler uses this in its output files (see &lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;Byte Compilation&lt;/a&gt;). It isn&amp;rsquo;t meant for source files, however.</source>
          <target state="translated">'次の &lt;var&gt;count&lt;/var&gt; 文字をスキップする構文は、バイナリデータを含むプログラム生成のコメントに役立ちます。Emacs Lispバイトコンパイラはこれを出力ファイルで使用します（&lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;バイトコンパイルを&lt;/a&gt;参照）。ただし、ソースファイル用ではありません。</target>
        </trans-unit>
        <trans-unit id="b6dd7466daba9cbfc241101eb12abc4b21df91fe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct, which stands for the name of this file, as a string. Do not use these constructs in Lisp source files; they are not designed to be clear to humans reading the file.</source>
          <target state="translated">'このファイルの名前を表す構文を文字列として。Lispソースファイルではこれらの構造を使用しないでください。それらは、ファイルを読んでいる人間にとって明確になるようには設計されていません。</target>
        </trans-unit>
        <trans-unit id="aff70e1236c7ada1af36786575e284eaf597b37e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct: treat the second line as the start of a &lt;em&gt;body&lt;/em&gt;.</source>
          <target state="translated">'構成：2行目を&lt;em&gt;本体の&lt;/em&gt;開始として扱います。</target>
        </trans-unit>
        <trans-unit id="9bc24c1488111b71a66865851fdd440f53f7c76e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; constructs are ignored. See &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;.</source>
          <target state="translated">'構成は無視されます。&lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;モードラインデータを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a7751ea682d8bcb703696dda872236e4589659a3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; constructs.</source>
          <target state="translated">'構成します。</target>
        </trans-unit>
        <trans-unit id="9641d30bfb8ed5dfe23b1da562e24e1092613789" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; control whether and where to find the init file; &amp;lsquo;</source>
          <target state="translated">'initファイルを見つけるかどうかと場所を制御します。'</target>
        </trans-unit>
        <trans-unit id="b333f4a31359342f6a1dac4bb5c7235a9d2113e9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; could take hours before it ultimately fails. Emacs must try each way of grouping the &amp;lsquo;</source>
          <target state="translated">'最終的に失敗するまでに数時間かかる場合があります。Emacsは 'をグループ化する各方法を試す必要があります</target>
        </trans-unit>
        <trans-unit id="f4a28ad8c59d2e0e562deb102a7172f79a609879" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; delimiters that begin and end the comment are not part of the documentation string.</source>
          <target state="translated">'コメントを開始および終了する区切り文字は、ドキュメント文字列の一部ではありません。</target>
        </trans-unit>
        <trans-unit id="ea07e7509a6000c25d8f6e4fae8f6b2803df6863" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; documentation construct in &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="translated">' &lt;var&gt;string&lt;/var&gt; のドキュメント構成。</target>
        </trans-unit>
        <trans-unit id="9db7d23aae3572437b132d34cab720a8a185a1b6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; does match &amp;lsquo;</source>
          <target state="translated">'は一致します'</target>
        </trans-unit>
        <trans-unit id="fdab41e7787c350c9d0dc86425878107b2d3cdcd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; does not match the word &amp;lsquo;</source>
          <target state="translated">'単語と一致しません'</target>
        </trans-unit>
        <trans-unit id="997e5bfd11bbfc477d39ab873e3fa3ba7d25ca7d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; does not terminate it, and &amp;lsquo;</source>
          <target state="translated">'はそれを終了しません、そして'</target>
        </trans-unit>
        <trans-unit id="93a5f5eb3bd4107973a92c79a57cdd775276cb72" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; does not understand (e.g., &lt;code&gt;defstruct&lt;/code&gt; and some other macros). In such cases, you can pass a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;fileonly&lt;/var&gt; argument to &lt;code&gt;declare-function&lt;/code&gt;, meaning to only check that the file exists, not that it actually defines the function. Note that to do this without having to specify an argument list, you should set the &lt;var&gt;arglist&lt;/var&gt; argument to &lt;code&gt;t&lt;/code&gt; (because &lt;code&gt;nil&lt;/code&gt; means an empty argument list, as opposed to an unspecified one).</source>
          <target state="translated">'は理解していません（たとえば、 &lt;code&gt;defstruct&lt;/code&gt; やその他のマクロ）。このような場合、非 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;fileonly&lt;/var&gt; 引数を &lt;code&gt;declare-function&lt;/code&gt; に渡すことができます。これは、ファイルが実際に関数を定義しているのではなく、ファイルが存在することだけを確認することを意味します。引数リストを指定せずにこれを行うには、 &lt;var&gt;arglist&lt;/var&gt; 引数を &lt;code&gt;t&lt;/code&gt; に設定する必要があることに注意してください（ &lt;code&gt;nil&lt;/code&gt; は、指定されていない引数リストではなく、空の引数リストを意味するため）。</target>
        </trans-unit>
        <trans-unit id="1b9bc7e59c2e45dbc08353a2483132fd02e19d3f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; does, then evaluates the form so that its value becomes the argument for the command. Prompt.</source>
          <target state="translated">'は、フォームを評価して、その値がコマンドの引数になるようにします。促す。</target>
        </trans-unit>
        <trans-unit id="909cae0d38b302e8668f6698aefe2a9dcc1c7b5a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; doesn&amp;rsquo;t count as the beginning of an extension. Thus,</source>
          <target state="translated">'は拡張の始まりとしてカウントされません。したがって、</target>
        </trans-unit>
        <trans-unit id="0db4416a8673938e603ab36217df8a0d2209df2f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; doesn&amp;rsquo;t disable format conversion, uncompression, or auto mode selection.</source>
          <target state="translated">'は、フォーマット変換、解凍、または自動モード選択を無効にしません。</target>
        </trans-unit>
        <trans-unit id="12b2ba3c75fa9584ca4f234db436788267dc9f92" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; element if it specifies the same major mode as the buffer already has.</source>
          <target state="translated">'バッファがすでに持っているのと同じメジャーモードを指定する場合は要素。</target>
        </trans-unit>
        <trans-unit id="b054b9af9236f71de3bcab289f661de15c94bf91" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; enclose a character class inside a character alternative. Any other character appearing in a regular expression is ordinary, unless a &amp;lsquo;</source>
          <target state="translated">'文字クラスを代替文字で囲みます。正規表現に現れる他の文字は、 'がない限り普通です。</target>
        </trans-unit>
        <trans-unit id="c2e78890a6d1dbc2f1a90b1473ea8c9b114a0a84" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; ensures that the padding consists of &amp;lsquo;</source>
          <target state="translated">'パディングが'で構成されていることを確認します</target>
        </trans-unit>
        <trans-unit id="74fb6864bd031031751cf27bd56ba31e75a1e957" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; error.</source>
          <target state="translated">'エラー。</target>
        </trans-unit>
        <trans-unit id="d79c837aeca9436531b94abe66c85b592e0b79cd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; escapes are available for use in &lt;var&gt;format-string&lt;/var&gt;:</source>
          <target state="translated">'エスケープは &lt;var&gt;format-string&lt;/var&gt; で使用できます：</target>
        </trans-unit>
        <trans-unit id="5e07daa0b60881f422be295054af8483799c5fba" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; except it suppresses trailing instances of &amp;lsquo;</source>
          <target state="translated">'の末尾のインスタンスを抑制することを除いて'</target>
        </trans-unit>
        <trans-unit id="c3bf72f24683499cc0354e1a7b1f90c0e56c4cd7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; except that any flags or field width override the &amp;lsquo;</source>
          <target state="translated">'フラグまたはフィールド幅が'をオーバーライドすることを除いて</target>
        </trans-unit>
        <trans-unit id="5f789cc15c6232b4beb16ea7eb5040df570d2de5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; except that it must match the preceding expression at least once. So, for example, &amp;lsquo;</source>
          <target state="translated">'ただし、前の式と少なくとも1回は一致する必要があります。したがって、たとえば、 '</target>
        </trans-unit>
        <trans-unit id="5d70b13ab69d055c698b6d9a6582962f7b12f786" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; except that it must match the preceding expression either once or not at all. For example, &amp;lsquo;</source>
          <target state="translated">'ただし、前の式と1回一致するか、まったく一致しない必要があります。例えば、 '</target>
        </trans-unit>
        <trans-unit id="7ea0e985f8692da016bc06581645fc5450d21c49" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; exist,</source>
          <target state="translated">'存在する、</target>
        </trans-unit>
        <trans-unit id="411dbb5a7c6a157726268ed410217c1ccfe169cb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file exists but is older than the &amp;lsquo;</source>
          <target state="translated">'ファイルは存在しますが、'より古いです</target>
        </trans-unit>
        <trans-unit id="7f78afef1c163d989cbebb27aeba2a51eb3250d5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file has no corresponding &amp;lsquo;</source>
          <target state="translated">'ファイルに対応するものがありません'</target>
        </trans-unit>
        <trans-unit id="2a56cbe17c274c7dd4bb6069c35c351dd32123c7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file in &lt;var&gt;directory&lt;/var&gt; (or its subdirectories) that needs recompilation. A file needs recompilation if a &amp;lsquo;</source>
          <target state="translated">'内のファイル &lt;var&gt;directory&lt;/var&gt; 再コンパイルを必要とする（またはそのサブディレクトリ）。'の場合、ファイルを再コンパイルする必要があります</target>
        </trans-unit>
        <trans-unit id="2893a28e9a2c55183be2d847ee71c4d47a376215" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file that has a &amp;lsquo;</source>
          <target state="translated">'を含むファイル</target>
        </trans-unit>
        <trans-unit id="d8f680b8150f3e898bacbbfd48e4bcb172c4215f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file, &lt;var&gt;flag&lt;/var&gt; says what to do. If it is &lt;code&gt;nil&lt;/code&gt;, this command ignores these files. If &lt;var&gt;flag&lt;/var&gt; is 0, it compiles them. If it is neither &lt;code&gt;nil&lt;/code&gt; nor 0, it asks the user whether to compile each such file, and asks about each subdirectory as well.</source>
          <target state="translated">'ファイル、 &lt;var&gt;flag&lt;/var&gt; は何をすべきかを示します。 &lt;code&gt;nil&lt;/code&gt; の場合、このコマンドはこれらのファイルを無視します。 &lt;var&gt;flag&lt;/var&gt; が0の場合、それらをコンパイルします。 &lt;code&gt;nil&lt;/code&gt; でも0でもない場合は、そのような各ファイルをコンパイルするかどうかをユーザーに尋ね、各サブディレクトリについても尋ねます。</target>
        </trans-unit>
        <trans-unit id="895d361cd57fc37a743eedf2d554328ef1dd5123" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file.</source>
          <target state="translated">'ファイル。</target>
        </trans-unit>
        <trans-unit id="7831bf4bdd2bd1f4e71d3e196a6b39a30d0dc440" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; first tries to match all three &amp;lsquo;</source>
          <target state="translated">'最初に3つすべてを一致させようとします'</target>
        </trans-unit>
        <trans-unit id="1697cc772413722bdc27a3ad366fdbcb64bffe22" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; flag is ignored.</source>
          <target state="translated">'フラグは無視されます。</target>
        </trans-unit>
        <trans-unit id="1d8fbf3b5c916f184a6cdcf7b45e953787590d69" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; flag means include a decimal point even if the precision is zero. For &amp;lsquo;</source>
          <target state="translated">'フラグは、精度がゼロの場合でも小数点を含めることを意味します。ために '</target>
        </trans-unit>
        <trans-unit id="82fa6105b0d3d2eaebf9189a99338f1934c58d7e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; flag, but still pad with &lt;em&gt;spaces&lt;/em&gt;.</source>
          <target state="translated">'フラグですが、&lt;em&gt;スペース&lt;/em&gt;で&lt;em&gt;埋めます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c852f11eae5935f1bcb1f3459b9eee069da434c3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; flag.</source>
          <target state="translated">' 国旗。</target>
        </trans-unit>
        <trans-unit id="193bf12078a65ec07299222414a99b757d0b6613" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by &lt;var&gt;digit&lt;/var&gt; to match that same text, whatever it may have been.</source>
          <target state="translated">'その後に &lt;var&gt;digit&lt;/var&gt; が続き、同じテキストに一致します。</target>
        </trans-unit>
        <trans-unit id="99962e41a63929f88d327c0456939247075c140a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a &amp;lsquo;</source>
          <target state="translated">'に続いて'</target>
        </trans-unit>
        <trans-unit id="933f77cc5da23246b4c5c9ddc6c36fdb72c395d3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a dash has a different meaning&amp;mdash;it applies the Super modifier to the following character.) Thus,</source>
          <target state="translated">'の後にダッシュが続くのは別の意味です。次の文字にスーパー修飾子が適用されます。）したがって、</target>
        </trans-unit>
        <trans-unit id="4cf2af5099109983e79da0f5e0da269d9e4312f4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a digit, and &amp;lsquo;</source>
          <target state="translated">'の後に数字が続き、'</target>
        </trans-unit>
        <trans-unit id="b9861cd6de235e766911a9aaeaa0ea0e380ee76d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a digit-string. For the floating-point specifications (&amp;lsquo;</source>
          <target state="translated">'の後に数字列が続きます。浮動小数点仕様の場合（ '</target>
        </trans-unit>
        <trans-unit id="1ea514747282026e0a7688e1271c181f87262988" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a list beginning with &amp;lsquo;</source>
          <target state="translated">'の後に'で始まるリストが続く</target>
        </trans-unit>
        <trans-unit id="e0b8bd63c817eed7054b47e3cb897d5228d4d890" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a list specifying the contents. The first list element must be the record type. The following elements are the record slots.</source>
          <target state="translated">'の後に内容を指定するリストが続きます。最初のリスト要素はレコードタイプである必要があります。次の要素はレコードスロットです。</target>
        </trans-unit>
        <trans-unit id="0c1e9b580901b9ff44337b3256cb9906a877c4c5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a list specifying the hash table properties and contents. See &lt;a href=&quot;creating-hash#Creating-Hash&quot;&gt;Creating Hash&lt;/a&gt;. (Hash notation, the initial &amp;lsquo;</source>
          <target state="translated">'の後に、ハッシュテーブルのプロパティと内容を指定するリストが続きます。&lt;a href=&quot;creating-hash#Creating-Hash&quot;&gt;ハッシュの作成を&lt;/a&gt;参照してください。（ハッシュ表記、最初の '</target>
        </trans-unit>
        <trans-unit id="3ed59adcb971c42f2a76b4ce556a14b700f94e5a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a radix indication followed by one or more digits. The radix indications are &amp;lsquo;</source>
          <target state="translated">'の後に基数表示が続き、その後に1つ以上の数字が続きます。基数の表示は '</target>
        </trans-unit>
        <trans-unit id="811f2f9c62e859afa231c9f79f89db150ce6304b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by any character matches only that character. However, there are several exceptions: certain sequences starting with &amp;lsquo;</source>
          <target state="translated">'の後に任意の文字が続くと、その文字のみに一致します。ただし、いくつかの例外があります。 'で始まる特定のシーケンス</target>
        </trans-unit>
        <trans-unit id="088c203eb35ca9aadbd9148cf4bf4106f863347e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by the error signaled and any arguments to &lt;code&gt;signal&lt;/code&gt;. For example,</source>
          <target state="translated">'にエラーシグナリングと引数が続く &lt;code&gt;signal&lt;/code&gt; 。例えば、</target>
        </trans-unit>
        <trans-unit id="b981a61cebc1e081a6c95b0693e28c52860c1273" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by the length. The string constant that follows actually specifies the contents of the bool-vector as a bitmap&amp;mdash;each character in the string contains 8 bits, which specify the next 8 elements of the bool-vector (1 stands for &lt;code&gt;t&lt;/code&gt;, and 0 for &lt;code&gt;nil&lt;/code&gt;). The least significant bits of the character correspond to the lowest indices in the bool-vector.</source>
          <target state="translated">'の後に長さが続きます。次の文字列定数は、実際にはbool-vectorの内容をビットマップとして指定します。文字列の各文字には8ビットが含まれ、bool-vectorの次の8要素を指定します（1は &lt;code&gt;t&lt;/code&gt; を表し、0は &lt;code&gt;nil&lt;/code&gt; を表します）。文字の最下位ビットは、boolベクトルの最下位インデックスに対応します。</target>
        </trans-unit>
        <trans-unit id="fafefae50d27e1f617734532d66d7e932fab07e6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; following the count for an expression says that the expression has returned the same value each time it was evaluated. In other words, it is not yet covered for coverage testing purposes.</source>
          <target state="translated">式のカウントに続く 'は、式が評価されるたびに同じ値を返したことを示します。つまり、カバレッジテストの目的ではまだカバーされていません。</target>
        </trans-unit>
        <trans-unit id="1486728da01c2819f9b6ac3a49b5bb7f13382c8e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for 10^3, &amp;lsquo;</source>
          <target state="translated">'10 ^ 3の場合、 '</target>
        </trans-unit>
        <trans-unit id="3901fc2ce26fe6333201c45410ebfc9e9bff240a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for 10^6, &amp;lsquo;</source>
          <target state="translated">'10 ^ 6の場合、 '</target>
        </trans-unit>
        <trans-unit id="cac864cc22483f5d59a8a19927f5561b988e98fa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for 10^9, etc., to abbreviate.</source>
          <target state="translated">'10 ^ 9などを省略します。</target>
        </trans-unit>
        <trans-unit id="0a5860940c90037a2ed69ee1f0af2ea5bd907f06" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for China Standard Time or for U.S. Central Standard Time. Both elements can change when daylight saving time begins or ends; if the user has specified a time zone that does not use a seasonal time adjustment, then the value is constant through time.</source>
          <target state="translated">'中国標準時または米国中部標準時の場合。両方の要素は、夏時間が開始または終了するときに変更できます。ユーザーが季節的な時間調整を使用しないタイムゾーンを指定した場合、値は時間を通じて一定です。</target>
        </trans-unit>
        <trans-unit id="80f38e0f3906303dd24b0b875402610b98c50cb5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for Chinese characters or &amp;lsquo;</source>
          <target state="translated">'漢字の場合または'</target>
        </trans-unit>
        <trans-unit id="6e8c1dce9b851d36224021538b5f5fee75a0408b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for Greek characters in the standard category table. You can see the list of all the currently defined categories with</source>
          <target state="translated">'標準カテゴリテーブルのギリシャ文字の場合。現在定義されているすべてのカテゴリのリストを</target>
        </trans-unit>
        <trans-unit id="6e041979ac74a06fdb1eaadd94ee81c56d8f2cf4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for IPv4 or &amp;lsquo;</source>
          <target state="translated">'IPv4の場合または'</target>
        </trans-unit>
        <trans-unit id="321ef4db2c026856480ec662f82e980d6dc82f3b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for IPv6. Note that on some operating systems, listening on &amp;lsquo;</source>
          <target state="translated">'IPv6の場合。一部のオペレーティングシステムでは、 'をリッスンしていることに注意してください</target>
        </trans-unit>
        <trans-unit id="d646f0f981cc6db3325106373d0d570e045084f7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for a backslash as part of the string, &amp;lsquo;</source>
          <target state="translated">'文字列の一部としての円記号の場合、'</target>
        </trans-unit>
        <trans-unit id="05e037827ff70125202b76a9a083bc21a50bf1c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for a newline.</source>
          <target state="translated">'改行の場合。</target>
        </trans-unit>
        <trans-unit id="d35abf5f1a74c960e117e6dc6c3295473cb470dd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for a tab and &amp;lsquo;</source>
          <target state="translated">'タブの場合と'</target>
        </trans-unit>
        <trans-unit id="53b8d0aa796623a1e8241598e559a57eab24c34d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for all characters belonging to the charset &lt;code&gt;japanese-jisx0208&lt;/code&gt;.</source>
          <target state="translated">'文字セット &lt;code&gt;japanese-jisx0208&lt;/code&gt; 属するすべての文字。</target>
        </trans-unit>
        <trans-unit id="35cd8deed70890b3a92a2c467fc4c42106853448" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for binary, &amp;lsquo;</source>
          <target state="translated">'バイナリの場合、'</target>
        </trans-unit>
        <trans-unit id="d80656a68e9a7e551114aba972aaac0859ab3fc6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for both of them).</source>
          <target state="translated">'両方の場合）。</target>
        </trans-unit>
        <trans-unit id="19ca0d9a992f2a162ea1d3d89c1a1a8ba5b89e47" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for both of them, or &amp;lsquo;</source>
          <target state="translated">'両方の場合、または'</target>
        </trans-unit>
        <trans-unit id="009693825eda04b200da2f91720554f601000505" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for each character in the password. If you want to apply another character to hide the password, let-bind the variable &lt;code&gt;read-hide-char&lt;/code&gt; with that character.</source>
          <target state="translated">'パスワードの各文字。別の文字を適用してパスワードを非表示にする場合は、変数 &lt;code&gt;read-hide-char&lt;/code&gt; をその文字にバインドします。</target>
        </trans-unit>
        <trans-unit id="8840ff155eea7ab40fd21c42ea7509914c5c847e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for each editing level. See &lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;Recursive Editing&lt;/a&gt;.</source>
          <target state="translated">'各編集レベル。&lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;再帰編集を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e98da4a337d562323295d1a4e5e06c1c620b829f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for each recursive editing level (not counting minibuffer levels).</source>
          <target state="translated">'各再帰編集レベル（ミニバッファーレベルはカウントされません）。</target>
        </trans-unit>
        <trans-unit id="9cae2135ebed9dbcd12eef399c084d13fed85bd1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for hex, and &amp;lsquo;</source>
          <target state="translated">'16進数の場合、および '</target>
        </trans-unit>
        <trans-unit id="1a8805b2fa97d48da8c1689619862668dc593204" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for microseconds, etc. Any excess digits are discarded, without rounding.</source>
          <target state="translated">'マイクロ秒など。余分な数字は丸めずに破棄されます。</target>
        </trans-unit>
        <trans-unit id="1edb3d27c2e6e44c86fd1c2da036eab21663a02c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for milliseconds, &amp;lsquo;</source>
          <target state="translated">'ミリ秒の場合、'</target>
        </trans-unit>
        <trans-unit id="ded285b327e56736571a899aa2af9702b74c4af5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for modifiers alt, control, hyper, meta, shift and super, just as you would with function keys.</source>
          <target state="translated">'ファンクションキーの場合と同じように、修飾子alt、control、hyper、meta、shift、superの場合。</target>
        </trans-unit>
        <trans-unit id="4182b5058dd7fbe7a229a5e7a0aa8a7bba04f114" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for mouse events and for special system events (see &lt;a href=&quot;misc-events#Misc-Events&quot;&gt;Misc Events&lt;/a&gt;). The event list that the command receives depends on the event. See &lt;a href=&quot;input-events#Input-Events&quot;&gt;Input Events&lt;/a&gt;, which describes the forms of the list for each event in the corresponding subsections.</source>
          <target state="translated">'マウスイベントおよび特別なシステムイベントの場合（&lt;a href=&quot;misc-events#Misc-Events&quot;&gt;その他のイベントを&lt;/a&gt;参照）。コマンドが受信するイベントリストは、イベントによって異なります。対応するサブセクションの各イベントのリストの形式について説明している「&lt;a href=&quot;input-events#Input-Events&quot;&gt;入力イベント&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="affb635e884a4589b67a1fc2252356a0272271f5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for octal, &amp;lsquo;</source>
          <target state="translated">'8進数の場合、'</target>
        </trans-unit>
        <trans-unit id="55b855790ebed904cd030227cdae00e541884e51" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for open parenthesis, etc. To represent whitespace syntax, use either &amp;lsquo;</source>
          <target state="translated">'開き括弧などの場合。空白の構文を表すには、'</target>
        </trans-unit>
        <trans-unit id="3ae97f975ff9362176c6a04682d3aa3e286f7f89" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for radix &lt;var&gt;radix&lt;/var&gt;. Thus, &amp;lsquo;</source>
          <target state="translated">'基数 &lt;var&gt;radix&lt;/var&gt; 。したがって、 '</target>
        </trans-unit>
        <trans-unit id="94b3860e4730313415af41e4a5c7b4b29de35a41" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for the character</source>
          <target state="translated">'キャラクターの場合</target>
        </trans-unit>
        <trans-unit id="1c8218ac75fcbc53721e8844832eefc248cbad01" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for the host name and &amp;lsquo;</source>
          <target state="translated">'ホスト名および'</target>
        </trans-unit>
        <trans-unit id="8bc6e6286c28c56fb3b2df13cf606d6a11c85818" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for the port number. For instance, if you want to first ssh to &amp;lsquo;</source>
          <target state="translated">'ポート番号。たとえば、最初にsshを実行したい場合は '</target>
        </trans-unit>
        <trans-unit id="5de8b32e69b7232791cb6d4eb5a68bb6f1d582a5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for the sake of uniqueness. It inserts the directory listing at the end of the buffer &amp;lsquo;</source>
          <target state="translated">'独自性のために。バッファの最後にディレクトリリストを挿入します '</target>
        </trans-unit>
        <trans-unit id="d63480dc6bb71c67a26d0d9f70c13dba57f2c94d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for the user&amp;rsquo;s home directory if the argument names a file in the home directory or one of its subdirectories. If the home directory is a root directory, it is not replaced with &amp;lsquo;</source>
          <target state="translated">'引数がホームディレクトリまたはそのサブディレクトリの1つにあるファイルを指定する場合、ユーザーのホームディレクトリ。ホームディレクトリがルートディレクトリの場合、「」に置き換えられません。</target>
        </trans-unit>
        <trans-unit id="181dda12681a51970663a81c801f04c54a36cd64" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for whitespace, &amp;lsquo;</source>
          <target state="translated">'空白の場合、'</target>
        </trans-unit>
        <trans-unit id="bb72a19aea5241ef20990a3881e953dbc16a5a9d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for word constituent, &amp;lsquo;</source>
          <target state="translated">'単語構成要素の場合、'</target>
        </trans-unit>
        <trans-unit id="78c5ea124cdbecabbac70cb3c050c81390007fcd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; from the beginning of the whole regular expression. The first subexpression is numbered 1, the second 2, and so on. Only regular expressions can have subexpressions&amp;mdash;after a simple string search, the only information available is about the entire match.</source>
          <target state="translated">'正規表現全体の最初から。最初の部分式には1、2番目は2というように番号が付けられます。正規表現のみが部分式を持つことができます。単純な文字列検索の後、利用できる情報は一致全体に関するものだけです。</target>
        </trans-unit>
        <trans-unit id="d8c733ced233ebc0113b22ea5047d592f041c51b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; from the file &lt;var&gt;name&lt;/var&gt;, if any. If &lt;var&gt;name&lt;/var&gt; is a remote file name, the local part of &lt;var&gt;name&lt;/var&gt; is unquoted.</source>
          <target state="translated">'ファイル &lt;var&gt;name&lt;/var&gt; から（もしあれば）。場合は &lt;var&gt;name&lt;/var&gt; リモートファイル名で、地元の一部 &lt;var&gt;name&lt;/var&gt; 引用符で囲まれていないです。</target>
        </trans-unit>
        <trans-unit id="9ba9a9dfee15f9465bcf87f02ebcc2563e86f7b8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; from the menu of alternatives, that specifies the value &lt;code&gt;foo&lt;/code&gt;; but any other value (not &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;foo&lt;/code&gt;) displays as &amp;lsquo;</source>
          <target state="translated">'選択肢のメニューから、値 &lt;code&gt;foo&lt;/code&gt; を指定します; ただし、その他の値（ &lt;code&gt;t&lt;/code&gt; 、 &lt;code&gt;nil&lt;/code&gt; 、 &lt;code&gt;foo&lt;/code&gt; 以外）は「」と表示されます。</target>
        </trans-unit>
        <trans-unit id="94d0cc601c9b9c5fbc75f786a652d311b324bbe1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; functions also perform a kind of searching. See &lt;a href=&quot;skipping-characters#Skipping-Characters&quot;&gt;Skipping Characters&lt;/a&gt;. To search for changes in character properties, see &lt;a href=&quot;property-search#Property-Search&quot;&gt;Property Search&lt;/a&gt;.</source>
          <target state="translated">'関数も一種の検索を実行します。&lt;a href=&quot;skipping-characters#Skipping-Characters&quot;&gt;文字のスキップを&lt;/a&gt;参照してください。文字プロパティの変更を検索するには、&lt;a href=&quot;property-search#Property-Search&quot;&gt;プロパティ検索を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="759eed83f203c73ed8da9860fc1c5e0e315e20b1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; gets an element from an array and &amp;lsquo;</source>
          <target state="translated">'配列から要素を取得し、'</target>
        </trans-unit>
        <trans-unit id="241f64b7c00229861d9fa6be7dd86b923560f23c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; gets events that are lists, so you can look at the data in the lists. See &lt;a href=&quot;input-events#Input-Events&quot;&gt;Input Events&lt;/a&gt;. No I/O.</source>
          <target state="translated">'はリストであるイベントを取得するため、リスト内のデータを確認できます。&lt;a href=&quot;input-events#Input-Events&quot;&gt;入力イベントを&lt;/a&gt;参照してください。I / Oなし。</target>
        </trans-unit>
        <trans-unit id="75cd84a4b517cc2929ced2a8a99f8183186c8a23" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; gives the name to an object, and &amp;lsquo;</source>
          <target state="translated">'オブジェクトに名前を付け、'</target>
        </trans-unit>
        <trans-unit id="4abf6e9baec4567ee8f3dd1c65afbef436758430" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; grouping can limit the grouping power of &amp;lsquo;</source>
          <target state="translated">'グループ化は'のグループ化力を制限する可能性があります</target>
        </trans-unit>
        <trans-unit id="5a00b89adc9a936084d8a6b8ab8fc10ef3346c99" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; has a repeating &amp;lsquo;</source>
          <target state="translated">'繰り返しがあります'</target>
        </trans-unit>
        <trans-unit id="2ab3233ccc723599017bf80bb6e1d2ca2c6fa2e2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; has been expanded, an absolute file name starts with a &amp;lsquo;</source>
          <target state="translated">'が展開され、絶対ファイル名は'で始まります</target>
        </trans-unit>
        <trans-unit id="bb5d59ab940c1bda7977be493314b22f5efcc3c5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; has only 3 letters, and needs 4 blank spaces as padding. In the second case, the string &lt;code&gt;&quot;specification&quot;&lt;/code&gt; is 13 letters wide but is not truncated.</source>
          <target state="translated">'は3文字のみで、パディングとして4つの空白スペースが必要です。2番目のケースでは、文字列 &lt;code&gt;&quot;specification&quot;&lt;/code&gt; は13文字の幅ですが、切り捨てられません。</target>
        </trans-unit>
        <trans-unit id="1762ee0a19d45a6820c4873b556be4137c275ff7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; have single functions as their values.</source>
          <target state="translated">'には、値として単一の関数があります。</target>
        </trans-unit>
        <trans-unit id="7affe7d0f4c0f033844df2552228e7fd4ff94778" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header otherwise. One or the other &lt;em&gt;must&lt;/em&gt; be present. Here, the version number is 1.3.</source>
          <target state="translated">'それ以外の場合はヘッダー。どちらかが存在する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。ここで、バージョン番号は1.3です。</target>
        </trans-unit>
        <trans-unit id="a58029aa61658192d0cdfd63809853776f451a7f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header should contain at least one standard keyword from the &lt;code&gt;finder-known-keywords&lt;/code&gt; list.</source>
          <target state="translated">'ヘッダーには、 &lt;code&gt;finder-known-keywords&lt;/code&gt; リストの標準キーワードが少なくとも1つ含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="0e320c35533c66c358c9b86e27a217173c1dfd10" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header, if it exists, or from the &amp;lsquo;</source>
          <target state="translated">'ヘッダー（存在する場合）、または'から</target>
        </trans-unit>
        <trans-unit id="3d369fc0fdf731ed52fb6959d57c0a0d952df17f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header, that is used as the package dependencies. In the above example, the package depends on the &amp;lsquo;</source>
          <target state="translated">'ヘッダー。パッケージの依存関係として使用されます。上記の例では、パッケージは 'に依存します</target>
        </trans-unit>
        <trans-unit id="b34bd223f7ffee06e883d4ad26ee72148bd44ab1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header, you could say something like this:</source>
          <target state="translated">'ヘッダー、次のように言うことができます：</target>
        </trans-unit>
        <trans-unit id="d3eb7135c81465e42e0e6964178e729a3ea2dbc1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header. If the header is omitted, the package has no dependencies.</source>
          <target state="translated">'ヘッダー。ヘッダーが省略されている場合、パッケージには依存関係がありません。</target>
        </trans-unit>
        <trans-unit id="0d5b97c7499cdeaa166e55f86ab4a7071db81a94" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; headers are optional, but recommended. The command &lt;code&gt;describe-package&lt;/code&gt; uses these to add links to its output. The &amp;lsquo;</source>
          <target state="translated">'ヘッダーはオプションですが、推奨されます。コマンド &lt;code&gt;describe-package&lt;/code&gt; は、これらを使用して出力にリンクを追加します。'</target>
        </trans-unit>
        <trans-unit id="ee5b8e23e96768b41389a18b696ee6bed3b3f247" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; identifies an additional prefix character for Lisp syntax. These characters are treated as whitespace when they appear between expressions. When they appear within an expression, they are handled according to their usual syntax classes.</source>
          <target state="translated">'はLisp構文の追加のプレフィックス文字を識別します。これらの文字は、式の間に表示される場合は空白として扱われます。それらが式内に現れる場合、それらは通常の構文クラスに従って処理されます。</target>
        </trans-unit>
        <trans-unit id="1dd01fd8efeeb1dfa66bcf844b972ca4314d55ad" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; identifies the comment that follows as the documentation string. The &amp;lsquo;</source>
          <target state="translated">'は、後に続くコメントをドキュメント文字列として識別します。'</target>
        </trans-unit>
        <trans-unit id="4256c3372e5c57227785d60062bb1a4e2c4e15f0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if &lt;var&gt;command&lt;/var&gt; has no key bindings.</source>
          <target state="translated">' &lt;var&gt;command&lt;/var&gt; にキーバインディングがない場合。</target>
        </trans-unit>
        <trans-unit id="e59317c9f6a520dde792764a342abf7151e8fbdd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if &lt;var&gt;var&lt;/var&gt; is set but null. Within Emacs, a list of environment variables and their values is kept in the variable &lt;code&gt;process-environment&lt;/code&gt;.</source>
          <target state="translated">' &lt;var&gt;var&lt;/var&gt; が設定されているがnullの場合。Emacs内では、環境変数とその値のリストが変数 &lt;code&gt;process-environment&lt;/code&gt; に保持されます。</target>
        </trans-unit>
        <trans-unit id="6ec1629fd8c7e965080a56a46c805486b76cd446" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if necessary to make a unique buffer name. It does most of this work by calling &lt;code&gt;set-visited-file-name&lt;/code&gt; (see &lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Buffer File Name&lt;/a&gt;) and &lt;code&gt;save-buffer&lt;/code&gt;.</source>
          <target state="translated">'必要に応じて、一意のバッファ名を作成します。 &lt;code&gt;set-visited-file-name&lt;/code&gt; （&lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;バッファファイル名を&lt;/a&gt;参照）と &lt;code&gt;save-buffer&lt;/code&gt; を呼び出すことにより、この作業のほとんどを実行します。</target>
        </trans-unit>
        <trans-unit id="79b0b5675df6a50bbeedcfcde2516a9d0cd43e74" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is modified (see &lt;code&gt;buffer-modified-p&lt;/code&gt;);  &amp;lsquo;</source>
          <target state="translated">'バッファが変更された場合（ &lt;code&gt;buffer-modified-p&lt;/code&gt; を参照）。'</target>
        </trans-unit>
        <trans-unit id="59558dcbc38e0e426e0c960512e5d5cdec2cbc2e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is modified, &amp;lsquo;</source>
          <target state="translated">'バッファが変更された場合、'</target>
        </trans-unit>
        <trans-unit id="9b1677e2a907296c716dc0e2c36256e00f8c1d1d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is modified, and &amp;lsquo;</source>
          <target state="translated">'バッファが変更された場合、および'</target>
        </trans-unit>
        <trans-unit id="e7c804b269f5f5f125b78d52c1b0369493d9a483" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is not modified, &amp;lsquo;</source>
          <target state="translated">'バッファが変更されていない場合、'</target>
        </trans-unit>
        <trans-unit id="ae5d1df7f7054f3a6a3f9f6499e29b8c1f8760b3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is read only (see &lt;code&gt;buffer-read-only&lt;/code&gt;);  &amp;lsquo;</source>
          <target state="translated">'バッファが読み取り専用の場合（ &lt;code&gt;buffer-read-only&lt;/code&gt; を参照）。'</target>
        </trans-unit>
        <trans-unit id="e2d982c59c38a551fb85897fb01120c6a8f69fbf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is read only and modified.</source>
          <target state="translated">'バッファが読み取り専用で変更されている場合。</target>
        </trans-unit>
        <trans-unit id="a81693d1f271f71cc189595c7f46680a539aec5f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is read only, and &amp;lsquo;</source>
          <target state="translated">'バッファが読み取り専用の場合、および'</target>
        </trans-unit>
        <trans-unit id="bf8838899bcb7e9c7ec59dd3765b31422c62089e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the limits are exceeded. For instance, a system may not support years before 1970, or years before 1901, or years far in the future. You can convert a time value into a human-readable string using &lt;code&gt;format-time-string&lt;/code&gt;, into a Lisp timestamp using &lt;code&gt;time-convert&lt;/code&gt;, and into other forms using &lt;code&gt;decode-time&lt;/code&gt; and &lt;code&gt;float-time&lt;/code&gt;. These functions are described in the following sections.</source>
          <target state="translated">'制限を超えた場合。たとえば、システムは1970年より前の年、1901年より前の年、またははるか先の年をサポートしない場合があります。時間値は、 &lt;code&gt;format-time-string&lt;/code&gt; stringを使用して人間が読める文字列に &lt;code&gt;time-convert&lt;/code&gt; 、time-convertを使用してLispタイムスタンプに変換したり、 &lt;code&gt;decode-time&lt;/code&gt; と &lt;code&gt;float-time&lt;/code&gt; を使用して他の形式に変換したりできます。これらの機能については、次のセクションで説明します。</target>
        </trans-unit>
        <trans-unit id="0436e30863c4be505ddf5661cdbee00e637b7884" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the top of the buffer is visible on screen; or &amp;lsquo;</source>
          <target state="translated">'バッファの上部が画面に表示されている場合。または '</target>
        </trans-unit>
        <trans-unit id="106534ed8655eef82955613d5d977f5e46468ea3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &amp;lsquo;</source>
          <target state="translated">「中」</target>
        </trans-unit>
        <trans-unit id="41a34d600cecbce780ae09d2d9d5b238eaaff77e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;code&gt;delq&lt;/code&gt; says that it uses &lt;code&gt;eq&lt;/code&gt; to compare &lt;var&gt;object&lt;/var&gt; against the elements of the list, like &lt;code&gt;memq&lt;/code&gt; and &lt;code&gt;remq&lt;/code&gt;.</source>
          <target state="translated">'in &lt;code&gt;delq&lt;/code&gt; は、 &lt;code&gt;eq&lt;/code&gt; を使用して &lt;var&gt;object&lt;/var&gt; を &lt;code&gt;memq&lt;/code&gt; や &lt;code&gt;remq&lt;/code&gt; などのリストの要素と比較することを示しています。</target>
        </trans-unit>
        <trans-unit id="b7b3949f12ecba9c07c2c9835ba455572ebe00f0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;code&gt;memq&lt;/code&gt; says that it uses &lt;code&gt;eq&lt;/code&gt; to compare &lt;var&gt;object&lt;/var&gt; against the elements of the list. For example:</source>
          <target state="translated">&lt;code&gt;memq&lt;/code&gt; の'は、 &lt;code&gt;eq&lt;/code&gt; を使用して &lt;var&gt;object&lt;/var&gt; をリストの要素と比較することを示しています。例えば：</target>
        </trans-unit>
        <trans-unit id="dce56f39131f43304d8d4e64e4498be4bb376510" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;code&gt;remq&lt;/code&gt; says that it uses &lt;code&gt;eq&lt;/code&gt; to compare &lt;var&gt;object&lt;/var&gt; against the elements of &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;remq&lt;/code&gt; の'は、 &lt;code&gt;eq&lt;/code&gt; を使用して &lt;var&gt;object&lt;/var&gt; を &lt;code&gt;list&lt;/code&gt; の要素と比較することを示しています。</target>
        </trans-unit>
        <trans-unit id="aa892e13a7a3b394e5bd41c08119b43b35f892bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;code&gt;setq&lt;/code&gt; stands for &amp;ldquo;quoted&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;setq&lt;/code&gt; の'は「引用符で囲まれた」を表します。</target>
        </trans-unit>
        <trans-unit id="d482e05a433731e35ea00bf0116eb2815bc43a74" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;var&gt;relfile&lt;/var&gt;, which may not be what you want. See &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;.</source>
          <target state="translated">' &lt;var&gt;relfile&lt;/var&gt; で、これはあなたが望むものではないかもしれません。&lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;ファイル名の拡張を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="be39c9e788e1ad854c6e65a4e58e88089179d38a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;var&gt;string&lt;/var&gt;, the &lt;code&gt;format&lt;/code&gt; function replaces it with the printed representation of one of the values to be formatted (one of the arguments &lt;var&gt;objects&lt;/var&gt;). For example:</source>
          <target state="translated">' &lt;var&gt;string&lt;/var&gt; 場合、 &lt;code&gt;format&lt;/code&gt; 関数は、フォーマットされる値の1つ（引数 &lt;var&gt;objects&lt;/var&gt; 1つ）の出力表現に置き換えます。例えば：</target>
        </trans-unit>
        <trans-unit id="3120b4ec60cd39291616a064887d45baf06a7676" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;var&gt;template&lt;/var&gt; are left verbatim in the output, including their text properties, if any.</source>
          <target state="translated">&lt;var&gt;template&lt;/var&gt; 'は、テキストプロパティがある場合はそれも含めて、出力にそのまま残されます。</target>
        </trans-unit>
        <trans-unit id="8395fb9bd867b010aeca60648a6116fa9c1ac662" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in C mode is &lt;code&gt;&quot;. 23&quot;&lt;/code&gt; (i.e., punctuation, matching character slot unused, second character of a comment-starter, first character of a comment-ender), and the entry for &amp;lsquo;</source>
          <target state="translated">'Cモードの'は &lt;code&gt;&quot;. 23&quot;&lt;/code&gt; 。23 &quot;（つまり、句読点、一致する文字スロットは未使用、コメントスターターの2番目の文字、コメントエンダーの最初の文字）、および 'のエントリ</target>
        </trans-unit>
        <trans-unit id="96877e8a95ea66a2f70283e09f73c14a7b332dde" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in C mode, which is a punctuation character, &lt;em&gt;and&lt;/em&gt; the second character of a start-of-comment sequence (&amp;lsquo;</source>
          <target state="translated">'句読文字であるCモード、&lt;em&gt;および&lt;/em&gt;コメント開始シーケンスの2番目の文字（'</target>
        </trans-unit>
        <trans-unit id="10b1fc07d718ba1c3cd1323556d76c338815b758" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in C.</source>
          <target state="translated">'Cで。</target>
        </trans-unit>
        <trans-unit id="54e366fef475e999fa969928eac46cc851cb7bfd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in C. On most terminals, this inherits from &lt;code&gt;font-lock-comment-face&lt;/code&gt;.</source>
          <target state="translated">'Cで。ほとんどの端末では、これは &lt;code&gt;font-lock-comment-face&lt;/code&gt; から継承します。</target>
        </trans-unit>
        <trans-unit id="cf1e13c280fec7c0035ff972e0ea089c49ef63e7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in Emacs Lisp and &amp;lsquo;</source>
          <target state="translated">'EmacsLispおよび'</target>
        </trans-unit>
        <trans-unit id="30a218e19a3ac3b9fbca88cf208696c98ca316a9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in Lisp mode, which may be part of a symbol name even though they are not part of English words. In standard C, the only non-word-constituent character that is valid in symbols is underscore (&amp;lsquo;</source>
          <target state="translated">'Lispモードでは、英語の単語の一部ではなくても、記号名の一部である可能性があります。標準Cでは、記号で有効な単語を構成しない文字はアンダースコア（ '</target>
        </trans-unit>
        <trans-unit id="a6b6aaededb5d44e7a8d3f68eddb81943b29e41d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a backquote construct (see &lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;).</source>
          <target state="translated">' &lt;a href=&quot;backquote#Backquote&quot;&gt;backquote&lt;/a&gt;コンストラクト（Backquoteを参照）。</target>
        </trans-unit>
        <trans-unit id="a5c5c839667f302a312b337c21e02842e11993ac" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a character alternative, put it at the beginning. To include &amp;lsquo;</source>
          <target state="translated">'代替文字で、先頭に置きます。含める '</target>
        </trans-unit>
        <trans-unit id="e4a064f9ca258335857d1e76bb92f76686f42dd3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a header-line aligns with the first text column in the text area. When the window displays line numbers, the text is considered to start where the space used for line-number display ends.</source>
          <target state="translated">ヘッダー行の 'は、テキスト領域の最初のテキスト列と整列します。ウィンドウに行番号が表示されると、テキストは行番号の表示に使用されたスペースが終了するところから始まると見なされます。</target>
        </trans-unit>
        <trans-unit id="63b3af5e98c6ffa3681dc4e53d33267bfb1a4410" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a local variables section. With that designator, the file will unconditionally be interpreted as unibyte. This can matter when making keybindings to non-</source>
          <target state="translated">'ローカル変数セクション。その指定子を使用すると、ファイルは無条件にユニバイトとして解釈されます。これは、非キーバインディングを作成するときに問題になる可能性があります</target>
        </trans-unit>
        <trans-unit id="000aea18a9f4ec7189ee32179201b4108d4dcb8c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a regular expression except that &amp;lsquo;</source>
          <target state="translated">'を除く正規表​​現で'</target>
        </trans-unit>
        <trans-unit id="fdc52ba1b684eff507174903c31b434b386efd69" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a string constant (even for an</source>
          <target state="translated">'文字列定数内（</target>
        </trans-unit>
        <trans-unit id="9923585923d132e6364cb87c6ed0c8b7e0fae773" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a string constant is just like backslash-newline; it does not contribute any character to the string, but it does terminate any preceding hex escape.</source>
          <target state="translated">文字列定数の 'は、バックスラッシュ-改行のようなものです。文字列に文字を与えることはありませんが、先行する16進エスケープを終了します。</target>
        </trans-unit>
        <trans-unit id="781e22f88236cc89d399a0e6a5e40405404dd765" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a string in which &lt;code&gt;%&lt;/code&gt;-constructs are allowed.</source>
          <target state="translated">' &lt;code&gt;%&lt;/code&gt; -構文が許可されている文字列内。</target>
        </trans-unit>
        <trans-unit id="88cdb29bc95a87d14f7586c2f038419392234437" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a string, it produces a code in the range of 128 to 255&amp;mdash;the same code that you get if you modify the corresponding keyboard event to put it in the string. Thus, meta events in strings work consistently regardless of how they get into the strings.</source>
          <target state="translated">'文字列では、128〜255の範囲のコードが生成されます。これは、対応するキーボードイベントを変更して文字列に入れる場合に得られるコードと同じです。したがって、文字列内のメタイベントは、文字列への入り方に関係なく一貫して機能します。</target>
        </trans-unit>
        <trans-unit id="633c06c24432b0e1d1f8972736b3aaf23b3d249d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in addition to appending a tilde:</source>
          <target state="translated">'チルダを追加することに加えて：</target>
        </trans-unit>
        <trans-unit id="0fce0e475e4eecf18ed954c1cadb6dc9f0b03e9b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in an environment variable&amp;rsquo;s value could lead to repeated substitution. Therefore, programs that call this function and put the output where it will be passed to this function need to double all &amp;lsquo;</source>
          <target state="translated">'環境変数の値で、置換が繰り返される可能性があります。したがって、この関数を呼び出して、この関数に渡される出力を配置するプログラムは、すべてを2倍にする必要があります。</target>
        </trans-unit>
        <trans-unit id="65b60e5a6d8d5083ccc674d3996a6956b4d197ce" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in between form an expression that matches anything that either &lt;var&gt;a&lt;/var&gt; or &lt;var&gt;b&lt;/var&gt; matches.</source>
          <target state="translated">'間に、 &lt;var&gt;a&lt;/var&gt; または &lt;var&gt;b&lt;/var&gt; のいずれかが一致するものすべてに一致する式を形成します。</target>
        </trans-unit>
        <trans-unit id="a4de30b56b6f51498e43147def4c55566ec5523a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in evaluating an expression indicates an excess of open parentheses (or square brackets). The reader detects this imbalance at the end of the file, but it cannot figure out where the close parenthesis should have been. Likewise, &amp;lsquo;</source>
          <target state="translated">式の評価における 'は、開き括弧（または角括弧）が過剰であることを示します。リーダーはファイルの最後でこの不均衡を検出しますが、閉じ括弧がどこにあるべきかを理解できません。同様に、 '</target>
        </trans-unit>
        <trans-unit id="8570aa62a2b423ece43aa13c01252cba5f6d63ac" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in its name). &lt;code&gt;kill-region&lt;/code&gt; puts the newly killed text in a new element at the beginning of the kill ring or adds it to the most recent element. It determines automatically (using &lt;code&gt;last-command&lt;/code&gt;) whether the previous command was a kill command, and if so appends the killed text to the most recent entry.</source>
          <target state="translated">その名前の '）。 &lt;code&gt;kill-region&lt;/code&gt; は、新しくキルされたテキストをキルリングの先頭の新しい要素に配置するか、最新の要素に追加します。前のコマンドがkillコマンドであったかどうかを（ &lt;code&gt;last-command&lt;/code&gt; を使用して）自動的に判別し、そうである場合は、killされたテキストを最新のエントリに追加します。</target>
        </trans-unit>
        <trans-unit id="bcb1c1068c57cbae64a0c3fdf1a988c4af1b3100" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in string constants to stand for meta characters, especially in arguments to &lt;code&gt;define-key&lt;/code&gt; and similar functions, and key sequences and sequences of events were always represented as strings.</source>
          <target state="translated">'メタ文字を表す文字列定数、特に &lt;code&gt;define-key&lt;/code&gt; および同様の関数の引数、およびキーシーケンスとイベントのシーケンスは常に文字列として表されていました。</target>
        </trans-unit>
        <trans-unit id="9a954e64a6c0cffdbdd4ae3c65e713b9f9adfe1a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in string constants, there are special rules for including certain meta characters in a string. Here are the rules for interpreting a string as a sequence of input characters:</source>
          <target state="translated">'文字列定数には、文字列に特定のメタ文字を含めるための特別な規則があります。文字列を入力文字のシーケンスとして解釈するためのルールは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e2c21b82a61031ebbbf3185aac79cfc4e7ed7896" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in that space occupied by various window manager features (docks, taskbars, etc.) may be excluded from the work area. Whether or not such features actually subtract from the work area depends on the platform and environment. Again, if the monitor is not the primary monitor, some of the coordinates might be negative.</source>
          <target state="translated">'さまざまなウィンドウマネージャー機能（ドック、タスクバーなど）が占めるスペースでは、作業領域から除外できます。そのような機能が実際に作業領域から差し引かれるかどうかは、プラットフォームと環境によって異なります。この場合も、モニターがプライマリモニターでない場合、一部の座標が負になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="9eb500f756053662de9b20453bd565bec9ca27ab" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in that value.</source>
          <target state="translated">'その値で。</target>
        </trans-unit>
        <trans-unit id="4d7ed95dc2af6610e884d149eac9c321a14787f6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the &amp;lsquo;</source>
          <target state="translated">' の中に '</target>
        </trans-unit>
        <trans-unit id="875e6fee9e7416544b87ec0e71c21e45c35e4c81" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the &lt;var&gt;family&lt;/var&gt; field, and the font specification for Chinese GB2312 characters has a wild card &amp;lsquo;</source>
          <target state="translated">' &lt;var&gt;family&lt;/var&gt; フィールドにあり、中国語のGB2312文字のフォント仕様にワイルドカードがあります'</target>
        </trans-unit>
        <trans-unit id="c049a5f401761144d793506a11286c21b240ac88" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the &lt;var&gt;family&lt;/var&gt; field.</source>
          <target state="translated">' &lt;var&gt;family&lt;/var&gt; 分野で。</target>
        </trans-unit>
        <trans-unit id="1f583a565e54581e92772e796ec1e3303899058c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the &lt;var&gt;family&lt;/var&gt; field. In such a case, &amp;lsquo;</source>
          <target state="translated">' &lt;var&gt;family&lt;/var&gt; 分野で。このような場合には、 '</target>
        </trans-unit>
        <trans-unit id="92e2f67cfc55143c378fceeac767eda593b9a8fd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the Customize interface, that takes effect by writing a &lt;code&gt;custom-set-variables&lt;/code&gt; and/or a &lt;code&gt;custom-set-faces&lt;/code&gt; form into the custom file, to be evaluated the next time Emacs starts.</source>
          <target state="translated">'Customizeインターフェースで、 &lt;code&gt;custom-set-variables&lt;/code&gt; および/または &lt;code&gt;custom-set-faces&lt;/code&gt; フォームをカスタムファイルに書き込むことで有効になり、次にEmacsが起動したときに評価されます。</target>
        </trans-unit>
        <trans-unit id="890670bd8b8fd3511ac171718660ae68f43b304a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the current buffer; then in this example the two substrings are &amp;lsquo;</source>
          <target state="translated">'現在のバッファ内; この例では、2つの部分文字列は 'です。</target>
        </trans-unit>
        <trans-unit id="6aaaded0659dc4987cfc62546014aedfd3521fa4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the customization buffer and enters the built-in Info reader on &lt;var&gt;info-node&lt;/var&gt;.</source>
          <target state="translated">'カスタマイズバッファにあり、 &lt;var&gt;info-node&lt;/var&gt; の組み込み情報リーダーに入ります。</target>
        </trans-unit>
        <trans-unit id="24aa140a46f4f8b190ae78f6283e65c992763b30" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the drawing above) is the &lt;em&gt;outer position&lt;/em&gt; of the frame. The outer position of a graphical frame is also referred to as &amp;ldquo;the position&amp;rdquo; of the frame because it usually remains unchanged on its display whenever the frame is resized or its layout is changed.</source>
          <target state="translated">上の図の「」は、フレームの&lt;em&gt;外側の位置&lt;/em&gt;です。グラフィックフレームの外側の位置は、フレームのサイズが変更されたりレイアウトが変更されたりしても、通常はディスプレイ上で変更されないため、フレームの「位置」とも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="7a9c78fd3c4f8ee5170a3e77857ff850e7c94ad3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the echo area while auto-saving is going on. However, if &lt;var&gt;no-message&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the message is inhibited.</source>
          <target state="translated">'自動保存が行われている間、エコー領域で。ただし、 &lt;var&gt;no-message&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、メッセージは禁止されます。</target>
        </trans-unit>
        <trans-unit id="779fcc1d08cb136df482480d84404fab1f227168" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the echo area, and leaves the buffer empty.</source>
          <target state="translated">'エコー領域にあり、バッファを空のままにします。</target>
        </trans-unit>
        <trans-unit id="0cadb9230d10e904e9c59b9fa15240b6970ab233" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the echo area, and then the user types</source>
          <target state="translated">'エコー領域に入力し、ユーザーが入力します</target>
        </trans-unit>
        <trans-unit id="20050135fca43c50e92d5a4a603d60392c30f0b1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the echo area.</source>
          <target state="translated">'エコー領域。</target>
        </trans-unit>
        <trans-unit id="6f8a0e97bd73e97d68482747c215e7097a17b633" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the echo area. This message is inhibited if &lt;var&gt;visit&lt;/var&gt; is neither &lt;code&gt;t&lt;/code&gt; nor &lt;code&gt;nil&lt;/code&gt; nor a string, or if Emacs is operating in batch mode (see &lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;Batch Mode&lt;/a&gt;). This feature is useful for programs that use files for internal purposes, files that the user does not need to know about.</source>
          <target state="translated">'エコー領域。 &lt;var&gt;visit&lt;/var&gt; が &lt;code&gt;t&lt;/code&gt; でも &lt;code&gt;nil&lt;/code&gt; でも文字列でもない場合、またはEmacsがバッチモードで動作している場合、このメッセージは禁止されます（&lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;バッチモードを&lt;/a&gt;参照）。この機能は、内部目的でファイルを使用するプログラム、つまりユーザーが知る必要のないファイルに役立ちます。</target>
        </trans-unit>
        <trans-unit id="ec6e0dfd97f45989b91af7c060ad8cc76b148143" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the first line. For the second invocation, point is directly after the &amp;lsquo;</source>
          <target state="translated">'最初の行。2回目の呼び出しでは、ポイントは 'の直後にあります</target>
        </trans-unit>
        <trans-unit id="6c3393830908f0af8f8a601ddc5f3460cef27348" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the fourth example is escaped to prevent it from being read as a number. This is not necessary in the sixth example because the rest of the name makes it invalid as a number.</source>
          <target state="translated">4番目の例の 'は、数値として読み取られないようにエスケープされています。6番目の例では、名前の残りの部分によって数値として無効になるため、これは必要ありません。</target>
        </trans-unit>
        <trans-unit id="d394b0a95c541c0bf6cc9ca00426ba739ea28ea8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the last name component (minus any version/backup part).</source>
          <target state="translated">'姓コンポーネント（バージョン/バックアップ部分を除く）。</target>
        </trans-unit>
        <trans-unit id="573dbd62c28cd8421d8c6736cd9bfecb9e9aaabd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the menu bar) to assign faces explicitly to text in the buffer.</source>
          <target state="translated">'メニューバーの'）バッファ内のテキストに顔を明示的に割り当てます。</target>
        </trans-unit>
        <trans-unit id="f8f4119429ab8897e6024ce418e246bf8a3b9711" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the replacement text.</source>
          <target state="translated">置換テキストの '。</target>
        </trans-unit>
        <trans-unit id="b95087c7540f674dec674912214aa598e3f0982a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the rightmost column of the window indicates truncation; a &amp;lsquo;</source>
          <target state="translated">ウィンドウの右端の列の 'は切り捨てを示します。a '</target>
        </trans-unit>
        <trans-unit id="69e629e42a15deb89ecd3181145dfc0f61de27dc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the same example.</source>
          <target state="translated">'同じ例で。</target>
        </trans-unit>
        <trans-unit id="23df226aad9e2159b9baea01f6a8030391de378e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the same way that &lt;code&gt;expand-file-name&lt;/code&gt; does.</source>
          <target state="translated">' &lt;code&gt;expand-file-name&lt;/code&gt; と同じ方法で。</target>
        </trans-unit>
        <trans-unit id="4525b8ef193e0515ed18873ff6e02ce9778b2321" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the top line of the buffer, followed by the value being returned.</source>
          <target state="translated">バッファの一番上の行に 'があり、その後に値が返されます。</target>
        </trans-unit>
        <trans-unit id="fa133d21380bf052a80feaae40c1452184cc9cd9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the two last examples is the backup part, not an extension.</source>
          <target state="translated">最後の2つの例の 'はバックアップ部分であり、拡張機能ではありません。</target>
        </trans-unit>
        <trans-unit id="6b82746a34c52ab40e2e73173473586efe078c01" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the usage part of the documentation string is replaced with the function&amp;rsquo;s name when the various help functions (see &lt;a href=&quot;help-functions#Help-Functions&quot;&gt;Help Functions&lt;/a&gt;) display it.</source>
          <target state="translated">ドキュメント文字列の使用法部分の 'は、さまざまなヘルプ関数（&lt;a href=&quot;help-functions#Help-Functions&quot;&gt;ヘルプ関数を&lt;/a&gt;参照）が表示するときに関数の名前に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="1082fc2aa19dfc05fb05e5d747af24e5f166f9c1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the word &amp;lsquo;</source>
          <target state="translated">'一言で'</target>
        </trans-unit>
        <trans-unit id="5612419bec63cc46e369a1a1f90e7cba39a4a1e0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in their interactive form. See &lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;Code Characters for interactive&lt;/a&gt;.) Its value controls whether &lt;code&gt;read-file-name&lt;/code&gt; starts by placing the name of the default directory in the minibuffer, plus the initial file name, if any. If the value of this variable is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;read-file-name&lt;/code&gt; does not place any initial input in the minibuffer (unless you specify initial input with the &lt;var&gt;initial&lt;/var&gt; argument). In that case, the default directory is still used for completion of relative file names, but is not displayed.</source>
          <target state="translated">'インタラクティブな形式で。&lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;対話型のコード文字を&lt;/a&gt;参照してください。）その値は、デフォルトディレクトリの名前と初期ファイル名（存在する場合）を配置することによって &lt;code&gt;read-file-name&lt;/code&gt; を開始するかどうかを制御します。この変数の値が &lt;code&gt;nil&lt;/code&gt; の場合、 &lt;code&gt;read-file-name&lt;/code&gt; は初期入力をミニバッファーに配置しません（ &lt;var&gt;initial&lt;/var&gt; 引数で初期入力を指定しない限り）。その場合、デフォルトのディレクトリは引き続き相対ファイル名の補完に使用されますが、表示されません。</target>
        </trans-unit>
        <trans-unit id="68b819b1a9ff341e382541d611e734e023101810" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in their name. By contrast, the functions whose names start with &amp;lsquo;</source>
          <target state="translated">'彼らの名前で。対照的に、名前が 'で始まる関数</target>
        </trans-unit>
        <trans-unit id="2e78b30d4488553192a4145e92e06f213b2e97f2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in their name. See &lt;a href=&quot;shell-arguments#Shell-Arguments&quot;&gt;Shell Arguments&lt;/a&gt;. Typically it is safer to use &lt;code&gt;call-process&lt;/code&gt; than a subshell. See &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Synchronous Processes&lt;/a&gt;. And it is safer yet to use builtin Emacs functions; for example, use &lt;code&gt;(rename-file &quot;&lt;var&gt;a&lt;/var&gt;&quot; &quot;&lt;var&gt;b&lt;/var&gt;&quot; t)&lt;/code&gt; instead of invoking &lt;code&gt;mv&lt;/code&gt;. See &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;.</source>
          <target state="translated">'彼らの名前で。&lt;a href=&quot;shell-arguments#Shell-Arguments&quot;&gt;シェル引数を&lt;/a&gt;参照してください。通常、サブシェルよりも &lt;code&gt;call-process&lt;/code&gt; を使用する方が安全です。&lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;同期プロセスを&lt;/a&gt;参照してください。そして、組み込みのEmacs関数を使用する方が安全です。たとえば、 &lt;code&gt;mv&lt;/code&gt; を呼び出す代わりに &lt;code&gt;(rename-file &quot;&lt;var&gt;a&lt;/var&gt;&quot; &quot;&lt;var&gt;b&lt;/var&gt;&quot; t)&lt;/code&gt; 使用します。&lt;a href=&quot;changing-files#Changing-Files&quot;&gt;ファイルの変更を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="367624ba958ecc1e496e3325f2ef81bdd9077b12" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; indicates a recursive reference to the object at level 0 of the current print operation:</source>
          <target state="translated">'は、現在の印刷操作のレベル0にあるオブジェクトへの再帰参照を示します。</target>
        </trans-unit>
        <trans-unit id="88294f45104cb11a2b93f29f3f82449bdacecf66" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; indicates an excess close parenthesis or missing open parenthesis, but does not say where the missing parenthesis belongs. How, then, to find what to change?</source>
          <target state="translated">'は、閉じ括弧が多すぎるか、開い括弧が欠落していることを示しますが、欠落している括弧がどこに属するかは示しません。では、何を変更するかをどのように見つけるのでしょうか。</target>
        </trans-unit>
        <trans-unit id="d736202b8f2b75b4460c680fff30b26a5571488f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; indicates the location of point. (The symbol for point, of course, is not part of the text in the buffer; it indicates the place &lt;em&gt;between&lt;/em&gt; two characters where point is currently located.)</source>
          <target state="translated">'はポイントの位置を示します。（もちろん、ポイントの記号はバッファー内のテキストの一部ではありません。それは、&lt;em&gt;その間&lt;/em&gt;の場所&lt;em&gt;を&lt;/em&gt;示します。&lt;em&gt;&lt;/em&gt;。ポイントが現在配置さ2つの文字の。）</target>
        </trans-unit>
        <trans-unit id="24c421060921b8f941dce6836aa30c7664f4011a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; inserts a plus sign before a nonnegative number, so that it always has a sign. A space character as flag inserts a space before a nonnegative number. (Otherwise, nonnegative numbers start with the first digit.) These flags are useful for ensuring that nonnegative and negative numbers use the same number of columns. They are ignored except for &amp;lsquo;</source>
          <target state="translated">'非負の数の前にプラス記号を挿入するため、常に記号が付きます。フラグとしてのスペース文字は、非負の数の前にスペースを挿入します。（それ以外の場合、非負の数は最初の桁から始まります。）これらのフラグは、非負の数と負の数が同じ数の列を使用することを保証するのに役立ちます。'を除いて無視されます</target>
        </trans-unit>
        <trans-unit id="9b395a7db58c1258511c5db2d975502ef2239245" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; inside of the argument to backquote indicates a value that isn&amp;rsquo;t constant. The Emacs Lisp evaluator evaluates the argument of &amp;lsquo;</source>
          <target state="translated">バッククォートの引数内の 'は、定数ではない値を示します。EmacsLispエバリュエーターは 'の引数を評価します</target>
        </trans-unit>
        <trans-unit id="8abd10c5b240d14b3bd5a19999e341072b313fb5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; instead of &amp;lsquo;</source>
          <target state="translated">' の代わりに '</target>
        </trans-unit>
        <trans-unit id="23e62232a9d64c14a3585fb36c95dd44a5de08c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; instead of just &amp;lsquo;</source>
          <target state="translated">'だけでなく'</target>
        </trans-unit>
        <trans-unit id="11828cb4eae1753964f547bb6f462463a3f3d411" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; instead of recursively printing an object already being printed. For example, here &amp;lsquo;</source>
          <target state="translated">'すでに印刷されているオブジェクトを再帰的に印刷する代わりに。たとえば、ここで '</target>
        </trans-unit>
        <trans-unit id="b995f785171e05d8995e3b9330e838342bc906d9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; interactive code. See &lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;Interactive Codes&lt;/a&gt;.</source>
          <target state="translated">'インタラクティブコード。&lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;インタラクティブコードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b29c2922e274a1bf7cc8be9ddfd1b748426dc69b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; into &amp;lsquo;</source>
          <target state="translated">'から'</target>
        </trans-unit>
        <trans-unit id="87a01f2ca3b92480a893548913dc7d98fb06ca2f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; into the output, &amp;lsquo;</source>
          <target state="translated">'出力に、'</target>
        </trans-unit>
        <trans-unit id="54aef35cad2173f4257f6e80be17e645ad3612db" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; into the output, and &amp;lsquo;</source>
          <target state="translated">'出力に、および'</target>
        </trans-unit>
        <trans-unit id="522cc75da24e9fc36f72fbd6d68222d1bcec1164" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; into the output.</source>
          <target state="translated">'出力に。</target>
        </trans-unit>
        <trans-unit id="d498237e7bee8417df15f236f1f36e946e350154" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is &amp;ldquo;smaller&amp;rdquo; than &amp;lsquo;</source>
          <target state="translated">'は'より「小さい」</target>
        </trans-unit>
        <trans-unit id="c3abfb5164bc6aa4b0dba97ce731128dfcbe740f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is &amp;lsquo;</source>
          <target state="translated">'は'</target>
        </trans-unit>
        <trans-unit id="f9227b981f8759c6d908d6226483bdc01a160f85" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is -1. Therefore, &amp;lsquo;</source>
          <target state="translated">'は-1です。したがって、 '</target>
        </trans-unit>
        <trans-unit id="22cb852484a3ed66695238ba951873923061092a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is -2, and the index for &amp;lsquo;</source>
          <target state="translated">'は-2であり、'のインデックスは</target>
        </trans-unit>
        <trans-unit id="afafc17f4e8511135316787d9bc6d90b6b415ec9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is -3, the index for &amp;lsquo;</source>
          <target state="translated">'は-3、'のインデックス</target>
        </trans-unit>
        <trans-unit id="5aed518e8ee5ff66868ca615b458032e89d85c32" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is 0, the index for &amp;lsquo;</source>
          <target state="translated">'は0、'のインデックス</target>
        </trans-unit>
        <trans-unit id="d4bc39cde35f2fe72d99798cb119b3dfb16011c2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is 1, and the index for &amp;lsquo;</source>
          <target state="translated">'は1で、'のインデックス</target>
        </trans-unit>
        <trans-unit id="9d7bb5c754520f82cfebb07c61b47169a3f8390e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is 111 and &amp;lsquo;</source>
          <target state="translated">'は111で'</target>
        </trans-unit>
        <trans-unit id="1d46dcde0c0c367dfc483fbdef9ca01871631aa6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is 2. The index 3&amp;mdash;which is the fourth character in the string&amp;mdash;marks the character position up to which the substring is copied. Thus, &amp;lsquo;</source>
          <target state="translated">'は2です。文字列の4番目の文字であるインデックス3は、部分文字列がコピーされるまでの文字位置を示します。したがって、 '</target>
        </trans-unit>
        <trans-unit id="fee81936e9b4e784f3998fd21bf9035c5c231de5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt;.</source>
          <target state="translated">'は &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c51e3412d1ac85d8ac2da432e25cfca565f71702" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is &lt;code&gt;(4 . 41)&lt;/code&gt;. 41 is the character code for &amp;lsquo;</source>
          <target state="translated">'は &lt;code&gt;(4 . 41)&lt;/code&gt; です。41は 'の文字コードです</target>
        </trans-unit>
        <trans-unit id="340e9aea173250d8bbaac8d8950c8d67b37217a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is a &amp;lsquo;</source>
          <target state="translated">「は」</target>
        </trans-unit>
        <trans-unit id="4003421de780ed5cf94ed14a5bf5a874db903d41" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is a regular expression that matches only &amp;lsquo;</source>
          <target state="translated">'は'のみに一致する正規表現です</target>
        </trans-unit>
        <trans-unit id="509a63376f144b7a6e92661a781212600bbaac83" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is a regular expression that matches the string &amp;lsquo;</source>
          <target state="translated">'は文字列に一致する正規表現です'</target>
        </trans-unit>
        <trans-unit id="7828f1964252a0521c88e38fb5aae45d05815d42" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is a symbolic link to the directory &amp;lsquo;</source>
          <target state="translated">'はディレクトリへのシンボリックリンクです'</target>
        </trans-unit>
        <trans-unit id="20aa9ce58b89f15f45a9da4743ba1387fb24a4ac" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is allowed at deeper levels of the list structure also. For example:</source>
          <target state="translated">'は、リスト構造のより深いレベルでも許可されます。例えば：</target>
        </trans-unit>
        <trans-unit id="ea48d3738466fd96ce9a82c87ce5af72c7fde947" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is allowed in &amp;lsquo;</source>
          <target state="translated">'は'で許可されています</target>
        </trans-unit>
        <trans-unit id="28157f1210768cf6701a9a08d484ec5bd6ef2a85" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is also considered a match. This applies to regular expressions, too; thus, &amp;lsquo;</source>
          <target state="translated">'も一致と見なされます。これは正規表現にも当てはまります。したがって、 '</target>
        </trans-unit>
        <trans-unit id="70bf3c006e3498f442f4164a8c0736b03ac1310d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is an integer, not a floating-point number.</source>
          <target state="translated">'は整数であり、浮動小数点数ではありません。</target>
        </trans-unit>
        <trans-unit id="ca8c7dd05989a0d8ef4097877e318ce1baa808c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is automatically considered risky. The variables &amp;lsquo;</source>
          <target state="translated">'は自動的に危険と見なされます。変数 '</target>
        </trans-unit>
        <trans-unit id="384b12997849ddd3ef116107c32e44d9791b5c43" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is better style; and although &amp;lsquo;</source>
          <target state="translated">'より良いスタイルです。そして、しかし '</target>
        </trans-unit>
        <trans-unit id="403acf9c457e7e0cc17f003ab2903e884329cc57" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is clearer.</source>
          <target state="translated">'はより明確です。</target>
        </trans-unit>
        <trans-unit id="fe30c8b7ead8959fa45e2186fd53dfc98a043722" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is concerned.</source>
          <target state="translated">'が懸念されます。</target>
        </trans-unit>
        <trans-unit id="4d0c497cc63611d5b00b4dac15067a50a645008e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is copied from the string &lt;code&gt;&quot;abcdefg&quot;&lt;/code&gt;.</source>
          <target state="translated">'は文字列 &lt;code&gt;&quot;abcdefg&quot;&lt;/code&gt; からコピーされます。</target>
        </trans-unit>
        <trans-unit id="24f1863bc3936529f9683e1e25f85e1ae9310969" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is created immediately). Meanwhile, the second process is started, and given the name &amp;lsquo;</source>
          <target state="translated">'はすぐに作成されます）。その間、2番目のプロセスが開始され、名前が付けられます '</target>
        </trans-unit>
        <trans-unit id="7c1ccc5216dc84830669c3b2d17b1cdeb8788995" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is current.</source>
          <target state="translated">'は現在です。</target>
        </trans-unit>
        <trans-unit id="ac3d70f8d50d9b6eb912afd8db54a938ffe2aaf8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is equivalent to &amp;lsquo;</source>
          <target state="translated">'は'と同等</target>
        </trans-unit>
        <trans-unit id="cdb19e9bf915276245fb627b15038b23fcb9992a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is equivalent to &lt;code&gt;?&amp;agrave;&lt;/code&gt; and denotes the Unicode character U+00E0. To simplify entering multi-line strings, you can replace spaces in the names by non-empty sequences of whitespace (e.g., newlines).</source>
          <target state="translated">'は &lt;code&gt;?&amp;agrave;&lt;/code&gt; と同等であり、Unicode文字U + 00E0を示します。複数行の文字列の入力を簡単にするために、名前のスペースを空でない空白のシーケンス（改行など）に置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="c91b4d9cf9922fa27ac0e821e4aaa5dccaf7616b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is excluded.</source>
          <target state="translated">'は除外されます。</target>
        </trans-unit>
        <trans-unit id="673ad73d493b4ae1de178f3d95626e78c764a0df" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is expanded and leading &amp;lsquo;</source>
          <target state="translated">'拡張され、先頭に立つ'</target>
        </trans-unit>
        <trans-unit id="1635b83ddf50e2684993c62531ba1cd247dc2444" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is harmless in modes where a left margin is never used.</source>
          <target state="translated">'は、左マージンが使用されないモードでは無害です。</target>
        </trans-unit>
        <trans-unit id="78e70be81437f4427a741141e32f9d92807f040b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is initially empty.</source>
          <target state="translated">'は最初は空です。</target>
        </trans-unit>
        <trans-unit id="3acd035b095bf19cc37871791ae65b5751b1f038" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is invalid, and so is a string that ends with a single &amp;lsquo;</source>
          <target state="translated">'は無効であり、単一の'で終わる文字列も無効です。</target>
        </trans-unit>
        <trans-unit id="c078afcb3175cdadeb27ef90d4e61fa02ea5c902" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is less clear than &amp;lsquo;</source>
          <target state="translated">'は'よりも明確ではありません</target>
        </trans-unit>
        <trans-unit id="11e7f66493115de70de64c528dee537a25618e0e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is lexicographically &amp;ldquo;smaller&amp;rdquo; than &amp;lsquo;</source>
          <target state="translated">'は辞書式順序で'よりも「小さい」</target>
        </trans-unit>
        <trans-unit id="dc2b806f54031baf39689ed0fdb1624c237e75d5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is like &amp;lsquo;</source>
          <target state="translated">' のようなものです '</target>
        </trans-unit>
        <trans-unit id="2976bd162925c0c6508f9e52b6d51fadd7087073" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is likewise ignored.</source>
          <target state="translated">'も同様に無視されます。</target>
        </trans-unit>
        <trans-unit id="3a77004409a526f3e97f88af5049ea6a36fa42ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is lower case.) No I/O.</source>
          <target state="translated">'は小文字です。）I / Oはありません。</target>
        </trans-unit>
        <trans-unit id="3d2f7c65f3f197291568bd8a06bc92d57a325f97" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is matched by three of the alist &lt;small&gt;CAR&lt;/small&gt;s. All of the matches begin with the characters &amp;lsquo;</source>
          <target state="translated">'は、3つのリスト&lt;small&gt;CAR&lt;/small&gt;と一致します。すべての試合は文字で始まります '</target>
        </trans-unit>
        <trans-unit id="ed1fe997acb6c25303091be10f599559c9e45d4c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is meant for use in character constants; in string constants, just write the space.</source>
          <target state="translated">'は文字定数で使用するためのものです。文字列定数では、スペースを書き込むだけです。</target>
        </trans-unit>
        <trans-unit id="1e9bba80763798a209de71c33406ed8a7d7ff3e6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is more explicit.</source>
          <target state="translated">'はより明確です。</target>
        </trans-unit>
        <trans-unit id="ce58dc4440ef3cb2f6299ef60ab067e76c8ec7fe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is no longer special (except when it starts a character class) but &amp;lsquo;</source>
          <target state="translated">'はもはや特別ではありません（文字クラスを開始する場合を除く）が、'</target>
        </trans-unit>
        <trans-unit id="d1f56972790db062d353f5280c4b34a0f1be3627" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not a special character, so it is ordinary, and therefore &amp;lsquo;</source>
          <target state="translated">'は特殊文字ではないため、通常の文字であるため、'</target>
        </trans-unit>
        <trans-unit id="68d67adf289837793c6ac754d1c95e2a9dcc4193" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not added.</source>
          <target state="translated">'は追加されません。</target>
        </trans-unit>
        <trans-unit id="400c3166dd89591584668dbbff23a26c47e063cf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not echoed after Emacs is suspended. But it is read and executed by the shell.</source>
          <target state="translated">'Emacsが一時停止された後はエコーされません。ただし、シェルによって読み取られて実行されます。</target>
        </trans-unit>
        <trans-unit id="c6bab50331ccfc798cea5da23c3b8e816c5a3834" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not special here.</source>
          <target state="translated">'ここでは特別ではありません。</target>
        </trans-unit>
        <trans-unit id="35e1e7b5bf62a78fbcdc18ffdb27dc6dfa97b47f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not special in a character alternative unless it is the first character. The character following the &amp;lsquo;</source>
          <target state="translated">'は、最初の文字でない限り、代替文字では特別ではありません。'に続く文字</target>
        </trans-unit>
        <trans-unit id="ccd125a4eae3d8fb215d3df9880605b5cac90126" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not special inside a character alternative, it can never remove the special meaning of &amp;lsquo;</source>
          <target state="translated">'は文字の選択肢の中で特別ではありません、それは'の特別な意味を取り除くことはできません</target>
        </trans-unit>
        <trans-unit id="6e11ba8f1f3d3db27dfee06a53b2061de369d64a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not used in Emacs Lisp, but it is used in Common Lisp. C also has two string quote characters: double-quote for strings, and apostrophe (&amp;lsquo;</source>
          <target state="translated">'はEmacsLispでは使用されませんが、CommonLispでは使用されます。Cには、文字列の二重引用符とアポストロフィ（ '</target>
        </trans-unit>
        <trans-unit id="d56c4664c80faa71d8e547bbf91f33b00c9f00d6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is often unreadable. Here are some examples:</source>
          <target state="translated">'はしばしば読めません。ここではいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="fe2e6244334d6ea28ad9785816295b1804b21c55" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is replaced by &amp;lsquo;</source>
          <target state="translated">'は'に置き換えられます</target>
        </trans-unit>
        <trans-unit id="820b4d2a0fa09ab5b9be3ac83016605de5371286" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is replaced with &amp;lsquo;</source>
          <target state="translated">'は'に置き換えられます</target>
        </trans-unit>
        <trans-unit id="0de23168336b0d854a9ce59ec29ca35b274f50c0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is required if the function has an unlimited number of arguments.</source>
          <target state="translated">関数に無制限の数の引数がある場合は、 'が必要です。</target>
        </trans-unit>
        <trans-unit id="fa601f4dda239c8ba0ae662f0b8a4391031c4829" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is special again and a &amp;lsquo;</source>
          <target state="translated">'再び特別であり、'</target>
        </trans-unit>
        <trans-unit id="62f0edf75cac5828cd5189b444d2aff43f84d729" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is special and &amp;lsquo;</source>
          <target state="translated">'は特別で'</target>
        </trans-unit>
        <trans-unit id="162634062d9897d086922bf0c348d77c91b58ad7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is special if it ends a character alternative (see later). The character &amp;lsquo;</source>
          <target state="translated">'は、代替文字を終了する場合に特別です（後述）。キャラクター '</target>
        </trans-unit>
        <trans-unit id="fc5b65309f24c5c423eca62a2fbab5a5dd75989f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is special inside a character alternative. A &amp;lsquo;</source>
          <target state="translated">'は文字の選択肢の中で特別です。A '</target>
        </trans-unit>
        <trans-unit id="9726f58a2bb5d76a5a2f5535ea3673b5ea0fe33d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is special, unless it immediately follows the special &amp;lsquo;</source>
          <target state="translated">'特別な'の直後にない限り、特別な '</target>
        </trans-unit>
        <trans-unit id="d36c3633c48d2a34efe2bdd33512e3b2bb1f34fe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is stripped in the &lt;var&gt;target&lt;/var&gt; string.</source>
          <target state="translated">'は &lt;var&gt;target&lt;/var&gt; 文字列で削除されます。</target>
        </trans-unit>
        <trans-unit id="e326a91217033ddbee42978ba9a517c9eb17fddd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the character</source>
          <target state="translated">'は文字です</target>
        </trans-unit>
        <trans-unit id="0a7c5cd1edc965030be238b8b00b178a8034ebea" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the character with code 0.</source>
          <target state="translated">'はコード0の文字です。</target>
        </trans-unit>
        <trans-unit id="aeea9bc324309416a4c99e0f2aa4b44f2b188365" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the only URI schema supported right now) or a name in a freedesktop.org-compliant icon theme from &amp;lsquo;</source>
          <target state="translated">'は現在サポートされている唯一のURIスキーマです）またはfreedesktop.org準拠のアイコンテーマの名前'</target>
        </trans-unit>
        <trans-unit id="bb2feefbfc5a9910ebf6d5e0ffc3433ce6f5741b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the pane label. If Emacs is compiled without X toolkit support, or if a menu is displayed on a text terminal, menu panes are not used; in that case, a &amp;lsquo;</source>
          <target state="translated">'はペインラベルです。EmacsがXツールキットのサポートなしでコンパイルされている場合、またはメニューがテキスト端末に表示されている場合、メニューペインは使用されません。その場合、 '</target>
        </trans-unit>
        <trans-unit id="d3b1cea2bacb110c8bc8ecd7512fa7ac32efe0d0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the prefix to substitute an environment variable value. If the input contains &amp;lsquo;</source>
          <target state="translated">'は、環境変数値を置き換える接頭辞です。入力に ​​'が含まれている場合</target>
        </trans-unit>
        <trans-unit id="f6ccf36e110259a6e435bc7978e6e023e90267b6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the printed representation for an interned symbol whose name is an empty string. Furthermore, &amp;lsquo;</source>
          <target state="translated">'は、名前が空の文字列であるインターンシンボルの印刷表現です。さらに、 '</target>
        </trans-unit>
        <trans-unit id="c8ade1fd4c331ae90bfc52343cd1757de912522f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the printed representation for an uninterned symbol whose name is &lt;var&gt;foo&lt;/var&gt;. (Normally, the Lisp reader interns all symbols; see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;.)</source>
          <target state="translated">'は、名前が &lt;var&gt;foo&lt;/var&gt; である非インターンシンボルの印刷表現です。（通常、Lispリーダーはすべてのシンボルをインターンします。シンボルの&lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;作成を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="1dce214ab935a6830c957397896ba237de24f480" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the read syntax for a cons cell whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;a&lt;/code&gt; and whose &lt;small&gt;CDR&lt;/small&gt; is the number 5.</source>
          <target state="translated">'は、&lt;small&gt;CAR&lt;/small&gt;が &lt;code&gt;a&lt;/code&gt; で、&lt;small&gt;CDR&lt;/small&gt;が数値5のconsセルの読み取り構文です。</target>
        </trans-unit>
        <trans-unit id="038644cfaa5082c5fa364bd04d3985485c2b7faf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the same as &amp;lsquo;</source>
          <target state="translated">'は'と同じです</target>
        </trans-unit>
        <trans-unit id="1a397343cee3bfb008ec608d273846414790ac94" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the starting list count:</source>
          <target state="translated">'は開始リスト数です：</target>
        </trans-unit>
        <trans-unit id="d5cd8a3202ea3c887411631ef500ec8b50f51d20" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the way to write the open-paren character. Likewise, if the character is &amp;lsquo;</source>
          <target state="translated">'はオープンパレン文字を書く方法です。同様に、文字が 'の場合</target>
        </trans-unit>
        <trans-unit id="b0979bd6bdd62223dddf46955754eb8fe9ca3eb5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is too short). Both of those begin with the string &amp;lsquo;</source>
          <target state="translated">'が短すぎます）。どちらも文字列 'で始まります</target>
        </trans-unit>
        <trans-unit id="53d81175c31b046b38f7885d4998dbb79fbc198d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is treated as if it were first (in other words, &amp;lsquo;</source>
          <target state="translated">'は最初のように扱われます（つまり、'</target>
        </trans-unit>
        <trans-unit id="58fa3ca9aa94def726e00cd4ff0e36b67483b1a2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is treated specially. If a &amp;lsquo;</source>
          <target state="translated">'は特別に扱われます。もし '</target>
        </trans-unit>
        <trans-unit id="704a0f3c068b5c3a85050dff83aa92bde306cb6d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is undefined and can&amp;rsquo;t match anything. But it can match &amp;lsquo;</source>
          <target state="translated">'は未定義であり、何にも一致しません。しかし、それは一致することができます '</target>
        </trans-unit>
        <trans-unit id="6e47eef5e6bc570277d8ee62fa0f58044c94f8c7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is upper case.) No I/O.</source>
          <target state="translated">'は大文字です。）I / Oはありません。</target>
        </trans-unit>
        <trans-unit id="91bdfbf6e3875a125cbbff4469a5b86023d44be0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is used to avoid confusing the Emacs motion commands.) The calling convention specified in this way appears in help messages in place of the one derived from the actual arguments of the function.</source>
          <target state="translated">'は、Emacsモーションコマンドの混乱を避けるために使用されます。）このように指定された呼び出し規約は、関数の実際の引数から派生したものの代わりにヘルプメッセージに表示されます。</target>
        </trans-unit>
        <trans-unit id="d8472adda6ff2888c022896cdc8b521126ba16d7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is used. See &lt;a href=&quot;signaling-errors#Definition-of-signal&quot;&gt;Definition of signal&lt;/a&gt;.</source>
          <target state="translated">' 使用されている。&lt;a href=&quot;signaling-errors#Definition-of-signal&quot;&gt;信号の定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4dc29ef87002bedee6c562b5bb672a803452cd8d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is valid, &amp;lsquo;</source>
          <target state="translated">'は有効です、'</target>
        </trans-unit>
        <trans-unit id="19762136dce095273e2593b20f62d4f63c67dff0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is written as &amp;lsquo;</source>
          <target state="translated">'は'と書かれています</target>
        </trans-unit>
        <trans-unit id="d41e1906c39cf7321f4937eee3fa6f85de7777fd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; it may be reformatted, with undesirable results. Instead, use &lt;code&gt;(error &quot;%s&quot;
&lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">'再フォーマットされ、望ましくない結果が生じる可能性があります。代わりに、 &lt;code&gt;(error &quot;%s&quot; &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; 使用してください 。</target>
        </trans-unit>
        <trans-unit id="0919b1e26b967ff72695ecb3db57c721bfa75172" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; it may be reformatted, with undesirable results. Instead, use &lt;code&gt;(message
&quot;%s&quot; &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">'再フォーマットされ、望ましくない結果が生じる可能性があります。代わりに、 &lt;code&gt;(message &quot;%s&quot; &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6ae20b3327fe4e5b898dd2f6da72c551ea6ba01" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; itself are also copied, but those of the object take priority.</source>
          <target state="translated">'自体もコピーされますが、オブジェクトのものが優先されます。</target>
        </trans-unit>
        <trans-unit id="de348be0975f54cd51aa2128c3d28f73b56fdbca" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; itself does not appear in the echo area.</source>
          <target state="translated">'自体はエコー領域に表示されません。</target>
        </trans-unit>
        <trans-unit id="175912a67450457c4afbb9711c8565c5da711e0c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; labels and &amp;lsquo;</source>
          <target state="translated">'ラベルと'</target>
        </trans-unit>
        <trans-unit id="feb1eb8c6393e8c73095f64490e9be2ae7a57a63" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; left to match, so this try fails. The next alternative is for &amp;lsquo;</source>
          <target state="translated">'一致するように残されているため、この試行は失敗します。次の選択肢は '</target>
        </trans-unit>
        <trans-unit id="f60e08a87eb663632e1df3d9999e2e94eb4d16f9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; level is normally the same as level 1. It is used when &lt;code&gt;font-lock-maximum-decoration&lt;/code&gt; has a &lt;code&gt;nil&lt;/code&gt; value. See &lt;a href=&quot;levels-of-font-lock#Levels-of-Font-Lock&quot;&gt;Levels of Font Lock&lt;/a&gt;.</source>
          <target state="translated">'レベルは通常レベル1と同じ &lt;code&gt;font-lock-maximum-decoration&lt;/code&gt; 値が &lt;code&gt;nil&lt;/code&gt; の場合に使用されます。&lt;a href=&quot;levels-of-font-lock#Levels-of-Font-Lock&quot;&gt;フォントロックのレベルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9af53348df52711604fb932fdfa9669adff33030" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; level of fontification, the next symbol level 1 fontification, the next level 2, and so on. The &amp;lsquo;</source>
          <target state="translated">'フォント化のレベル、次のシンボルレベル1のフォント化、次のレベル2など。'</target>
        </trans-unit>
        <trans-unit id="ad8a19c6c8a22a5cce4a4214827648d7b3981847" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; like one of type &amp;lsquo;</source>
          <target state="translated">'タイプの1つのように'</target>
        </trans-unit>
        <trans-unit id="2113b65d4db46fb7e318576b43874765d9c43ba3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line (using &lt;code&gt;interpreter-mode-alist&lt;/code&gt;), on the text at the beginning of the buffer (using &lt;code&gt;magic-mode-alist&lt;/code&gt;), and finally on the visited file name (using &lt;code&gt;auto-mode-alist&lt;/code&gt;). See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Choosing-Modes.html#Choosing-Modes&quot;&gt;How Major Modes are Chosen&lt;/a&gt; in</source>
          <target state="translated">'行（ &lt;code&gt;interpreter-mode-alist&lt;/code&gt; を使用）、バッファの先頭のテキスト（ &lt;code&gt;magic-mode-alist&lt;/code&gt; を使用）、最後にアクセスしたファイル名（ &lt;code&gt;auto-mode-alist&lt;/code&gt; を使用）。&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Choosing-Modes.html#Choosing-Modes&quot;&gt;メジャーモードがどのように選択さ&lt;/a&gt;れるかを参照してください</target>
        </trans-unit>
        <trans-unit id="4c150d15183d3ee27616803eb8424e0fa3f5737c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line or at the end of the file. The variable &lt;code&gt;enable-local-variables&lt;/code&gt; controls whether to do so. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;Local Variables in Files&lt;/a&gt; in</source>
          <target state="translated">'行またはファイルの終わり。変数 &lt;code&gt;enable-local-variables&lt;/code&gt; は、そうするかどうかを制御します。の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;ファイル&lt;/a&gt;内のローカル変数を参照してください</target>
        </trans-unit>
        <trans-unit id="a915c013be926df2da690c878ccecf9a00409577" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line or the local variables list are ignored, and the other settings are applied. If &lt;var&gt;handle-mode&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, all the file local variables are set.</source>
          <target state="translated">'行またはローカル変数リストは無視され、他の設定が適用されます。 &lt;var&gt;handle-mode&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、すべてのファイルローカル変数が設定されます。</target>
        </trans-unit>
        <trans-unit id="3b5631d4200df156b834d7dda77e88e1432e8c0e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line or the local variables list specifies one, and &lt;code&gt;nil&lt;/code&gt; otherwise. It does not set the mode or any other file-local variable. If &lt;var&gt;handle-mode&lt;/var&gt; has any value other than &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt;, any settings of &amp;lsquo;</source>
          <target state="translated">'行またはローカル変数リストは1つを指定し、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を指定します。モードやその他のファイルローカル変数は設定されません。場合は &lt;var&gt;handle-mode&lt;/var&gt; 以外の値がある &lt;code&gt;nil&lt;/code&gt; または &lt;code&gt;t&lt;/code&gt; 、のいずれかの設定を&quot;</target>
        </trans-unit>
        <trans-unit id="54bd1877bfbfc23f5641b80f273522907ec89aee" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line, as well as the leading comment characters in the commentary itself.)</source>
          <target state="translated">'行、および解説自体の先頭のコメント文字。）</target>
        </trans-unit>
        <trans-unit id="178854747c9bbea35d551e55f65ebd1b5c62acdc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line, on any &amp;lsquo;</source>
          <target state="translated">'行、任意の'</target>
        </trans-unit>
        <trans-unit id="f884e0629d08d6e32dc896c3303314c964b876b1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line, or near the end of the file, for any mode tag.</source>
          <target state="translated">'行、またはファイルの終わり近く。任意のモードタグ。</target>
        </trans-unit>
        <trans-unit id="d3c71d3e9e102729c5fc3200b585e93328d92365" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line. &lt;code&gt;set-auto-mode&lt;/code&gt; does that, also taking &lt;code&gt;enable-local-variables&lt;/code&gt; into account (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;).</source>
          <target state="translated">'行。 &lt;code&gt;set-auto-mode&lt;/code&gt; は、 &lt;code&gt;enable-local-variables&lt;/code&gt; も考慮に入れてそれを行います（&lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Modeを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="7bff6caee8800706ab06b3524fcade0ecd5d9566" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line. Its value is an alist with elements of the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;mode&lt;/var&gt;)&lt;/code&gt;; this says to use mode &lt;var&gt;mode&lt;/var&gt; if the file specifies an interpreter which matches &lt;code&gt;\\`&lt;var&gt;regexp&lt;/var&gt;\\'&lt;/code&gt;. For example, one of the default elements is &lt;code&gt;(&quot;python[0-9.]*&quot; . python-mode)&lt;/code&gt;.</source>
          <target state="translated">'行。その値は、フォームの要素を持つ連想リストである &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;mode&lt;/var&gt;)&lt;/code&gt; 。これは、ファイルが &lt;code&gt;\\`&lt;var&gt;regexp&lt;/var&gt;\\'&lt;/code&gt; &lt;var&gt;regexp&lt;/var&gt; \\ 'に一致するインタープリターを指定している場合にモード &lt;var&gt;mode&lt;/var&gt; を使用することを示しています。たとえば、デフォルトの要素の1つは &lt;code&gt;(&quot;python[0-9.]*&quot; . python-mode)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3a5f1041e487981b5f9b52ce255eb5c43674ec4b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; lines or local variables lists in files being visited. A value of &lt;code&gt;t&lt;/code&gt; means process them unconditionally; &lt;code&gt;nil&lt;/code&gt; means ignore them; anything else means ask the user what to do for each file. The default value is &lt;code&gt;maybe&lt;/code&gt;.</source>
          <target state="translated">'アクセスされているファイルの行またはローカル変数リスト。 &lt;code&gt;t&lt;/code&gt; の値は、それらを無条件に処理することを意味します。 &lt;code&gt;nil&lt;/code&gt; はそれらを無視することを意味します。それ以外の場合は、各ファイルに対して何をするかをユーザーに尋ねることを意味します。デフォルト値は &lt;code&gt;maybe&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d1ec4d6e13800d9da30c82c79878494a1a0ff9a9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; literally.</source>
          <target state="translated">'文字通り。</target>
        </trans-unit>
        <trans-unit id="74f008ef8e139675465fca72d719680179644473" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; literally. There are no characters with special meaning, unlike in string regexps.</source>
          <target state="translated">'文字通り。文字列正規表現とは異なり、特別な意味を持つ文字はありません。</target>
        </trans-unit>
        <trans-unit id="e08b22bed0f02d1fab86b95ea089ae164e77d65f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; local variable in the &amp;lsquo;</source>
          <target state="translated">'ローカル変数'</target>
        </trans-unit>
        <trans-unit id="83ea15dd1533d02a07b921ba06eec4898c23d595" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; local variable near the end of a file, on the &amp;lsquo;</source>
          <target state="translated">'ファイルの終わり近くのローカル変数'</target>
        </trans-unit>
        <trans-unit id="fd4733940f675dc6a79b838fd161a249bbd64060" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches &amp;lsquo;</source>
          <target state="translated">'一致'</target>
        </trans-unit>
        <trans-unit id="b264329fc0c545c4c70d0f1f5af6be983d8e3e92" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches a &amp;lsquo;</source>
          <target state="translated">'は'に一致します</target>
        </trans-unit>
        <trans-unit id="a8552c44486f126ade2449f530358c7c19e1ec53" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches a string of one &amp;lsquo;</source>
          <target state="translated">'1つの文字列に一致します'</target>
        </trans-unit>
        <trans-unit id="17e7b84599d394be5ee6471f89264954e8628df5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches all characters &lt;em&gt;except&lt;/em&gt; ASCII letters and digits.</source>
          <target state="translated">'はASCII文字と数字&lt;em&gt;を除く&lt;/em&gt;すべての文字に一致します。</target>
        </trans-unit>
        <trans-unit id="294aa4be8d0ff8c89288ef0e319e2caa0ef19ad8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches all three of these special characters. You cannot use &amp;lsquo;</source>
          <target state="translated">'は、これら3つの特殊文字すべてに一致します。使用できません '</target>
        </trans-unit>
        <trans-unit id="c1389f7346bfb348d0bb9c06adffe885e3ec29f7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches all three strings.</source>
          <target state="translated">'は3つの文字列すべてに一致します。</target>
        </trans-unit>
        <trans-unit id="f1f0d1deae19f58febbb1d537f0b52e0162536a7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any</source>
          <target state="translated">'は任意に一致します</target>
        </trans-unit>
        <trans-unit id="0c53d2ade6e13283c99679316175bbf7459a8ccf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any character, including newline. However, a reversed range should always be from the letter &amp;lsquo;</source>
          <target state="translated">'は、改行を含むすべての文字に一致します。ただし、逆の範囲は常に文字 'からである必要があります</target>
        </trans-unit>
        <trans-unit id="9ddfdc0fe6523ac99a79fd09a3045cb9e9b9c2bf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any digit, as well as &amp;lsquo;</source>
          <target state="translated">'は任意の数字に一致し、'</target>
        </trans-unit>
        <trans-unit id="2c293d27bb4c97a9bcc525ed1eb05e3efaea1cbe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any lower-case</source>
          <target state="translated">'はすべて小文字に一致します</target>
        </trans-unit>
        <trans-unit id="96654b579a952f7d53fba4f4bd32b0aedf530bdd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any newline-free string that is composed of two identical halves. The &amp;lsquo;</source>
          <target state="translated">'は、2つの同一の半分で構成される改行のない文字列に一致します。'</target>
        </trans-unit>
        <trans-unit id="ac1a32efde596fdd486ffb81b7783ad10b2b5ba6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any non-</source>
          <target state="translated">'は、</target>
        </trans-unit>
        <trans-unit id="b0b3d00af5b0c16a25908fcf7d2de55c0ba06961" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any number of &amp;lsquo;</source>
          <target state="translated">'は任意の数に一致します'</target>
        </trans-unit>
        <trans-unit id="0637debf36412f536b11fc3ca78671e8915b0e9a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any occurrence of &amp;lsquo;</source>
          <target state="translated">'は'の任意の出現に一致します</target>
        </trans-unit>
        <trans-unit id="6eb7fe231bb7871032ddc960c23bf7423a1f7675" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any string composed of just &amp;lsquo;</source>
          <target state="translated">'は、'だけで構成される任意の文字列に一致します</target>
        </trans-unit>
        <trans-unit id="43c98413b4eee7806522468b3ac46c96c7e1a216" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the beginning of the buffer (or string) only if a symbol-constituent character follows.</source>
          <target state="translated">'は、シンボル構成文字が続く場合にのみ、バッファー（または文字列）の先頭で一致します。</target>
        </trans-unit>
        <trans-unit id="05c3a2fc74da4a597e4793ebff454c4a4eef7688" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the beginning of the buffer (or string) only if a word-constituent character follows.</source>
          <target state="translated">'は、単語構成文字が後に続く場合にのみ、バッファー（または文字列）の先頭で一致します。</target>
        </trans-unit>
        <trans-unit id="c4d641489ad2d1c4292618d0cad2a5025905d98f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the beginning of the string or after a newline character.</source>
          <target state="translated">'文字列の先頭または改行文字の後に一致します。</target>
        </trans-unit>
        <trans-unit id="b1477b3a9226dfe1efe3022ff36d644ef3762a13" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the beginning or end of the buffer (or string) regardless of what text appears next to it.</source>
          <target state="translated">'バッファ（または文字列）の横に表示されるテキストに関係なく、バッファ（または文字列）の最初または最後で一致します。</target>
        </trans-unit>
        <trans-unit id="daec0aa6e852548c762064870cca1e235e071884" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the end of the buffer (or string) only if the contents end with a symbol-constituent character.</source>
          <target state="translated">'内容が記号構成文字で終わる場合にのみ、バッファー（または文字列）の終わりで一致します。</target>
        </trans-unit>
        <trans-unit id="125b9068b1a8ea37d93c2695fbdd7149d8fae615" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the end of the buffer (or string) only if the contents end with a word-constituent character.</source>
          <target state="translated">'内容が単語構成文字で終わる場合にのみ、バッファ（または文字列）の終わりで一致します。</target>
        </trans-unit>
        <trans-unit id="07a214ad78b8eac47137312d416eab542c3c39c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the end of the string or before a newline character.</source>
          <target state="translated">'文字列の最後または改行文字の前に一致します。</target>
        </trans-unit>
        <trans-unit id="0ead1717225ccad2a526bcb251b8b3db8eac4cf2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches either &amp;lsquo;</source>
          <target state="translated">'どちらかに一致する'</target>
        </trans-unit>
        <trans-unit id="6e141fd122b27cf46985e62468b73e7795dd6404" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches either one &amp;lsquo;</source>
          <target state="translated">'どちらかに一致する'</target>
        </trans-unit>
        <trans-unit id="acaba64446380add50c125375f2756d49a1db29a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches only ASCII letters, even outside the C or POSIX locale.</source>
          <target state="translated">'は、CまたはPOSIXロケールの外でも、ASCII文字にのみ一致します。</target>
        </trans-unit>
        <trans-unit id="b8f009c35f1db00d09ad3dbd87f368e865307525" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches string such as &amp;lsquo;</source>
          <target state="translated">'は'などの文字列に一致します</target>
        </trans-unit>
        <trans-unit id="5b517d364aa6e997733965346f12e796b3972264" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches the empty string, but only at the beginning of a line in the text being matched (or the beginning of the accessible portion of the buffer). Otherwise it fails to match anything. Thus, &amp;lsquo;</source>
          <target state="translated">'は空の文字列と一致しますが、一致するテキストの行の先頭（またはバッファのアクセス可能な部分の先頭）でのみ一致します。それ以外の場合は、何にも一致しません。したがって、 '</target>
        </trans-unit>
        <trans-unit id="edbf5fb2bde6df6b209cc67502eacbccb247d31d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches the first half, which may be anything, but the &amp;lsquo;</source>
          <target state="translated">'は前半に一致しますが、これは何でもかまいませんが、'</target>
        </trans-unit>
        <trans-unit id="1e17b3c51402b2cef4651bd936e4059170abca14" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches the string &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; matches the string &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="6e0dadb6b2846d03cc6bc0a7f4c75c87c53f3321" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches the strings &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; matches the strings &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5e95d23076884d4c5b49982a66ce30bb3d482492" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches the whole string; but the regular expression &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; matches the whole string; but the regular expression &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="718db940cd7b0671976f68f3a0e662573b99a08f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; may be absent.</source>
          <target state="translated">&amp;rsquo; may be absent.</target>
        </trans-unit>
        <trans-unit id="86b51b1492ca1577d3b9cdc1913f801542474d5b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; meaning Universal Time.</source>
          <target state="translated">&amp;rsquo; meaning Universal Time.</target>
        </trans-unit>
        <trans-unit id="44d64f62f81ef6965ee911104b948f23f5e2a021" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means &lt;var&gt;c&lt;/var&gt; is the second character of such a sequence.</source>
          <target state="translated">&amp;rsquo; means &lt;var&gt;c&lt;/var&gt; is the second character of such a sequence.</target>
        </trans-unit>
        <trans-unit id="34b1ab210febc7526e23a4f3326455b54b986ffa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means &lt;var&gt;c&lt;/var&gt; is the start of a two-character comment-end sequence.</source>
          <target state="translated">&amp;rsquo; means &lt;var&gt;c&lt;/var&gt; is the start of a two-character comment-end sequence.</target>
        </trans-unit>
        <trans-unit id="7acbb8ff84ed65dc805339e6bf730ff98a6e2848" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means &lt;var&gt;c&lt;/var&gt; is the start of a two-character comment-start sequence.</source>
          <target state="translated">&amp;rsquo; means &lt;var&gt;c&lt;/var&gt; is the start of a two-character comment-start sequence.</target>
        </trans-unit>
        <trans-unit id="a7dfd59e1f2ed42738d2fab363719f884a91a44e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means that &lt;var&gt;c&lt;/var&gt; as a comment delimiter belongs to the alternative &amp;ldquo;b&amp;rdquo; comment style. For a two-character comment starter, this flag is only significant on the second char, and for a 2-character comment ender it is only significant on the first char.</source>
          <target state="translated">&amp;rsquo; means that &lt;var&gt;c&lt;/var&gt; as a comment delimiter belongs to the alternative &amp;ldquo;b&amp;rdquo; comment style. For a two-character comment starter, this flag is only significant on the second char, and for a 2-character comment ender it is only significant on the first char.</target>
        </trans-unit>
        <trans-unit id="86ab2b219dbbca9b3e02f4641a558ba0434ca241" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means that &lt;var&gt;c&lt;/var&gt; as a comment delimiter belongs to the alternative &amp;ldquo;c&amp;rdquo; comment style. For a two-character comment delimiter, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; means that &lt;var&gt;c&lt;/var&gt; as a comment delimiter belongs to the alternative &amp;ldquo;c&amp;rdquo; comment style. For a two-character comment delimiter, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="215e954c8804b0f1297a992964c3e1bd522d2762" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means that &lt;var&gt;optional-arg&lt;/var&gt; is optional and &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; means that &lt;var&gt;optional-arg&lt;/var&gt; is optional and &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d4d236a29df33a2ddffd1a28d970d131eb4255dc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means that the following character is a control character and &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; means that the following character is a control character and &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="4f1afbf791bd451277513b2e3e3d6381dfa2149d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means that the following character is a meta character. Thus, the string &lt;code&gt;&quot;\M-x&quot;&lt;/code&gt; is read as containing a single</source>
          <target state="translated">&amp;rsquo; means that the following character is a meta character. Thus, the string &lt;code&gt;&quot;\M-x&quot;&lt;/code&gt; is read as containing a single</target>
        </trans-unit>
        <trans-unit id="c2d5024e1b645dbf6fa17efa834cb71ebd6a3696" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means to decrease the size by 40%. The default is 20%.</source>
          <target state="translated">&amp;rsquo; means to decrease the size by 40%. The default is 20%.</target>
        </trans-unit>
        <trans-unit id="48bfde35c330137d92341faead16d982b4480466" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means to increase the size by 40%. The default is 20%.</source>
          <target state="translated">&amp;rsquo; means to increase the size by 40%. The default is 20%.</target>
        </trans-unit>
        <trans-unit id="fbe2428f1b1960fbdcd62020a852b09469ae49a5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means to pad this with zeros to 3 positions, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; means to pad this with zeros to 3 positions, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="8ba4edc322a51e49d1ae0fc74bcef52906aa171a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means to use the current locale&amp;rsquo;s alternative representation of numbers, instead of the ordinary decimal digits. This is allowed with most letters, all the ones that output numbers.</source>
          <target state="translated">&amp;rsquo; means to use the current locale&amp;rsquo;s alternative representation of numbers, instead of the ordinary decimal digits. This is allowed with most letters, all the ones that output numbers.</target>
        </trans-unit>
        <trans-unit id="ca84a1083a7441d555e1efe80deba59009304d6e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu (under &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; menu (under &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ee9e3ecbcef3d6b6885b1747234e0d35b512b954" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu bar item. The main reason to suppress a global menu bar item is to regain space for mode-specific items.</source>
          <target state="translated">&amp;rsquo; menu bar item. The main reason to suppress a global menu bar item is to regain space for mode-specific items.</target>
        </trans-unit>
        <trans-unit id="347829944a3f24d8e08b958220e651146a155942" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu bar item:</source>
          <target state="translated">&amp;rsquo; menu bar item:</target>
        </trans-unit>
        <trans-unit id="ae6791e92fc256978f6f0f36c748b35aabab6c14" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu in the menu bar, and it uses the extended menu item format (see &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;Extended Menu Items&lt;/a&gt;). First we create the keymap, and give it a name:</source>
          <target state="translated">&amp;rsquo; menu in the menu bar, and it uses the extended menu item format (see &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;Extended Menu Items&lt;/a&gt;). First we create the keymap, and give it a name:</target>
        </trans-unit>
        <trans-unit id="b49a75bc61bfa620cf82e0167cae826b87881c0d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu item normally appears at the end of the menu bar, following local menu items.</source>
          <target state="translated">&amp;rsquo; menu item normally appears at the end of the menu bar, following local menu items.</target>
        </trans-unit>
        <trans-unit id="78b41d2a04230429de9527fac941033146511cc7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu of Shell mode, after the item &lt;code&gt;break&lt;/code&gt;:</source>
          <target state="translated">&amp;rsquo; menu of Shell mode, after the item &lt;code&gt;break&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f161b19f209158a0672caf11e5d5a7e3104e1d2d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; merely quotes the letter &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; merely quotes the letter &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="bb187ab38f8c46760fecdabfabe14322af8e158f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; message is displayed unless &lt;var&gt;nomsg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo; message is displayed unless &lt;var&gt;nomsg&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="010ea9c58dd482491fbcdbaabf85cd811851b7ce" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; method. For all other connection methods, runtime tests are performed.</source>
          <target state="translated">&amp;rsquo; method. For all other connection methods, runtime tests are performed.</target>
        </trans-unit>
        <trans-unit id="d350f1a2716f7a8f9b2e5f19ec69f8f40d5cd2a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; more than once in a single command&amp;rsquo;s interactive specification. If the key sequence that invoked the command has &lt;var&gt;n&lt;/var&gt; events that are lists, the &lt;var&gt;n&lt;/var&gt;th &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; more than once in a single command&amp;rsquo;s interactive specification. If the key sequence that invoked the command has &lt;var&gt;n&lt;/var&gt; events that are lists, the &lt;var&gt;n&lt;/var&gt; th &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="0cb689ebaee5a5b4252a1ee92c3308b32d6d2c45" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; must be a place where an additional form can be evaluated and its value ignored. (If the value of &lt;code&gt;(debug)&lt;/code&gt; isn&amp;rsquo;t ignored, it will alter the execution of the program!) The most common suitable places are inside a &lt;code&gt;progn&lt;/code&gt; or an implicit &lt;code&gt;progn&lt;/code&gt; (see &lt;a href=&quot;sequencing#Sequencing&quot;&gt;Sequencing&lt;/a&gt;).</source>
          <target state="translated">&amp;rsquo; must be a place where an additional form can be evaluated and its value ignored. (If the value of &lt;code&gt;(debug)&lt;/code&gt; isn&amp;rsquo;t ignored, it will alter the execution of the program!) The most common suitable places are inside a &lt;code&gt;progn&lt;/code&gt; or an implicit &lt;code&gt;progn&lt;/code&gt; (see &lt;a href=&quot;sequencing#Sequencing&quot;&gt;Sequencing&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="d03c3f207325be73f1eecd6c52e5512446794f55" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; must be doubled when written in a string in Emacs Lisp.</source>
          <target state="translated">&amp;rsquo; must be doubled when written in a string in Emacs Lisp.</target>
        </trans-unit>
        <trans-unit id="01229be91d4fc10e776acdd80860c098341c2bb7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; never uses the prefix argument. Prompt.</source>
          <target state="translated">&amp;rsquo; never uses the prefix argument. Prompt.</target>
        </trans-unit>
        <trans-unit id="4f70b9c7058bd4fd58315f6b441a0708a4bf9218" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; nor flag &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; nor flag &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="b26981e2f0b12cfa1593262e15794c6489dfed68" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; normally do not save text for yanking (though they can still be undone); these are deletion functions.</source>
          <target state="translated">&amp;rsquo; normally do not save text for yanking (though they can still be undone); these are deletion functions.</target>
        </trans-unit>
        <trans-unit id="b9d849e5afe353f3961ad3e41c33a21421a153b3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; normally pads to two positions.</source>
          <target state="translated">&amp;rsquo; normally pads to two positions.</target>
        </trans-unit>
        <trans-unit id="544040af7d71cc17795062d8e1ce670211367a51" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; not.</source>
          <target state="translated">&amp;rsquo; not.</target>
        </trans-unit>
        <trans-unit id="dbcb8505b5498ef978265695320ec6dda3077dba" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; not. This lasts until the first unquoted &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; not. This lasts until the first unquoted &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="12de9bd14b449570330f1c1e02ef7fd233b084e7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; notation labels the structure that follows it with the label &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; notation labels the structure that follows it with the label &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ffaf2beb40eda6b07d55cffcca1164795755324c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; notation references the previously labeled structure. This notation is used for any shared elements of lists or vectors.</source>
          <target state="translated">&amp;rsquo; notation references the previously labeled structure. This notation is used for any shared elements of lists or vectors.</target>
        </trans-unit>
        <trans-unit id="2d64795183cac722cd88955ee6835ff5abd7458c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; notation.)</source>
          <target state="translated">&amp;rsquo; notation.)</target>
        </trans-unit>
        <trans-unit id="5a926f8ae24946423b6898217dcf427d14e0d88e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; occur after case conversion, if any. Therefore, the strings they substitute are never case-converted.</source>
          <target state="translated">&amp;rsquo; occur after case conversion, if any. Therefore, the strings they substitute are never case-converted.</target>
        </trans-unit>
        <trans-unit id="66a9b72c7961d6e41cdd7c9d8fac6eed1e19b0d4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; of &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; of &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="095416c1d9816555112d6686a892effbe74654e8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on GNU and other POSIX-like systems; MS-Windows and MS-DOS recognize both the forward slash and the backslash &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; on GNU and other POSIX-like systems; MS-Windows and MS-DOS recognize both the forward slash and the backslash &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="f4b9057e3e330be2a7337b5f850f02f6e35c82ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on GNU/Linux, that supports complex text layout for scripts which need that. The value must be a list of the form</source>
          <target state="translated">&amp;rsquo; on GNU/Linux, that supports complex text layout for scripts which need that. The value must be a list of the form</target>
        </trans-unit>
        <trans-unit id="42694ac85c225404d7a9ec6b4bfec2f8da6028bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on a comment delimiter character specifies that this kind of comment can be nested. Inside such a comment, only comments of the same style will be recognized. For a two-character comment delimiter, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; on a comment delimiter character specifies that this kind of comment can be nested. Inside such a comment, only comments of the same style will be recognized. For a two-character comment delimiter, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="32f268519034a92dbfa88dc7a1eb3c296b87292d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on either character makes it nestable.</source>
          <target state="translated">&amp;rsquo; on either character makes it nestable.</target>
        </trans-unit>
        <trans-unit id="bf672452a6d47e5e5cdc2f4acf39618af46d821d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on either character makes it of style &amp;ldquo;c&amp;rdquo;.</source>
          <target state="translated">&amp;rsquo; on either character makes it of style &amp;ldquo;c&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="61c1b1841845a83d5eac8567f4c796d3035086b9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on the rightmost column indicates a line that wraps. (The display table can specify alternate characters to use for this; see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</source>
          <target state="translated">&amp;rsquo; on the rightmost column indicates a line that wraps. (The display table can specify alternate characters to use for this; see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="70d0175dbbe8a38bd90d58db87d6226f35ecf565" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; only for a modified read-only buffer. See &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Buffer Modification&lt;/a&gt;.</source>
          <target state="translated">&amp;rsquo; only for a modified read-only buffer. See &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Buffer Modification&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9133b2a75178d009fb279829df6fe382596d0bb4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html#Initial-Options&quot;&gt;Initial Options&lt;/a&gt; in</source>
          <target state="translated">&amp;rsquo; option (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html#Initial-Options&quot;&gt;Initial Options&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="89ca5e0b8c7096366d5103ea6883183f29175d01" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option is just passed on to &lt;code&gt;insert-directory-program&lt;/code&gt;, as any other option.</source>
          <target state="translated">&amp;rsquo; option is just passed on to &lt;code&gt;insert-directory-program&lt;/code&gt; , as any other option.</target>
        </trans-unit>
        <trans-unit id="b121cd4ff8c953305afc28dc9d4962972bbbb685" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option to &lt;code&gt;ls&lt;/code&gt; says to describe a directory itself as a file, rather than showing its contents.)</source>
          <target state="translated">&amp;rsquo; option to &lt;code&gt;ls&lt;/code&gt; says to describe a directory itself as a file, rather than showing its contents.)</target>
        </trans-unit>
        <trans-unit id="3798b7e6993c4a7e2c48540ad518ce083c518fd1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option was specified, Emacs looks for the init file in that user&amp;rsquo;s home directory instead.</source>
          <target state="translated">&amp;rsquo; option was specified, Emacs looks for the init file in that user&amp;rsquo;s home directory instead.</target>
        </trans-unit>
        <trans-unit id="54d8d5b8e371c1ed89423f41206be0fef01c7f01" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option was used, then Lisp packages should not load any customization files or user profile.</source>
          <target state="translated">&amp;rsquo; option was used, then Lisp packages should not load any customization files or user profile.</target>
        </trans-unit>
        <trans-unit id="e7b4dbca616b2ed8cc7b52cc556e65b50922d1f1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option).</source>
          <target state="translated">&amp;rsquo; option).</target>
        </trans-unit>
        <trans-unit id="5629dd57aa9a6a7ddef712fe4371ffda6cea9154" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option, &lt;code&gt;insert-directory&lt;/code&gt; treats it specially, for the sake of dired. However, the normally equivalent short &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; option, &lt;code&gt;insert-directory&lt;/code&gt; treats it specially, for the sake of dired. However, the normally equivalent short &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d75c38e2074e4830f8d154559133298f83048f9a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option.</source>
          <target state="translated">'オプション。</target>
        </trans-unit>
        <trans-unit id="c6a093c07146df74d608747c3cf75985ec62f50d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or</source>
          <target state="translated">&amp;rsquo; or</target>
        </trans-unit>
        <trans-unit id="c051371f8937469bcb7c2e99a74ceea414f863fe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or &amp;lsquo;</source>
          <target state="translated">「または」</target>
        </trans-unit>
        <trans-unit id="077a92dddff7b2f1f571d9884a039cf2b16f1116" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or a &amp;lsquo;</source>
          <target state="translated">'または'</target>
        </trans-unit>
        <trans-unit id="04335302a8671fd65edefddab6ed803acfdbcfc6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or a final &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; or a final &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="29dd0197099105c3c4c1966f445b14f264d1858f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or a space character. See &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;, for a list of syntax codes and the characters that stand for them.</source>
          <target state="translated">&amp;rsquo; or a space character. See &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;, for a list of syntax codes and the characters that stand for them.</target>
        </trans-unit>
        <trans-unit id="486480c795cd7bd1531aa6d8b0313fb062590858" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or an integer string like &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; or an integer string like &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="8f19bb5422524ce5947f4298520b65422af6a1e1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or more at the end of a line.</source>
          <target state="translated">&amp;rsquo; or more at the end of a line.</target>
        </trans-unit>
        <trans-unit id="fca6c61bc6bc00460cdbc335374d3be5ab17409e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or one &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; or one &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="6668e68f2e880c9d326e3c1dc1d53e55c2e7859b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or period. However, the ending character of one range should not be the starting point of another one; for example, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; or period. However, the ending character of one range should not be the starting point of another one; for example, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="216fefe74ac0145ce416f525763d39e28c2d2d79" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or that &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; or that &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="70f133a0836fde45b20e98860e7efb8a2086b367" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; otherwise.</source>
          <target state="translated">&amp;rsquo; otherwise.</target>
        </trans-unit>
        <trans-unit id="46cf0e824efb593198d3d2f785d219abeb52044b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; otherwise. See &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Buffer Modification&lt;/a&gt;.</source>
          <target state="translated">&amp;rsquo; otherwise. See &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Buffer Modification&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b76791b82d6bd10cfe71a0297807810c4f6fe396" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; otherwise. This differs from &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; otherwise. This differs from &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="652193fe95f48ffd669ff421b5bcacbccbdfdead" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; package, version 1.0 or higher. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Library-Headers.html#Library-Headers&quot;&gt;Library Headers&lt;/a&gt;, for a description of the &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; package, version 1.0 or higher. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Library-Headers.html#Library-Headers&quot;&gt;Library Headers&lt;/a&gt;, for a description of the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="8b34e15406aa977d406034ff41682e3b170553cd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pads with blanks, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; pads with blanks, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="bf731df80c868747aafe439e86a43b5185fc2a82" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pads with zeros and also puts &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; pads with zeros and also puts &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d6d07d69825434df6d52c014d63ac5a457fe2519" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pads with zeros, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; pads with zeros, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="b4cba6e5d1e8e0928608effa2ba12ebf8b6edc50" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pads with zeros, because that is how &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; pads with zeros, because that is how &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="60c55b5c91fb20216ff33d8b40ba243abc5f98b2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; parenthesis grouping in &lt;var&gt;record-regexp&lt;/var&gt; is the sort key.</source>
          <target state="translated">&amp;rsquo; parenthesis grouping in &lt;var&gt;record-regexp&lt;/var&gt; is the sort key.</target>
        </trans-unit>
        <trans-unit id="8a2c2f24b1e5b7329e56dfc1f9b2e7fdc9de9b3e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pattern. For these reasons, both these file extensions are members of the list &lt;code&gt;inhibit-local-variables-regexps&lt;/code&gt;. Add patterns to this list to prevent Emacs searching them for local variables of any kind (not just mode specifiers).</source>
          <target state="translated">&amp;rsquo; pattern. For these reasons, both these file extensions are members of the list &lt;code&gt;inhibit-local-variables-regexps&lt;/code&gt; . Add patterns to this list to prevent Emacs searching them for local variables of any kind (not just mode specifiers).</target>
        </trans-unit>
        <trans-unit id="bf5d2e5e4c3a3bd0bcf027a317606663fa3e716d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; precedes it.</source>
          <target state="translated">&amp;rsquo; precedes it.</target>
        </trans-unit>
        <trans-unit id="555dac212b7e50742fe2a952c64d60bd4156c199" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prefix follows modifier key prefixes such as &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; prefix follows modifier key prefixes such as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="f24cb7ff797afc905a543ea276971f42fd7adbc9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prefix follows the modifier key prefixes such as &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; prefix follows the modifier key prefixes such as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="4866cbc96ea0e6d9c21fb354b1cc9d7a10dd6c84" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prepended to the Lisp name, with all dashes (&amp;lsquo;</source>
          <target state="translated">&amp;rsquo; prepended to the Lisp name, with all dashes (&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="583ff272b7d9f789e634e3c3c6ba53e1f3aaa169" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prompts the user with &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; prompts the user with &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ee01bf272a276165afb1530b7bc5a39914739352" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;) indicates they are alphabetic characters.</source>
          <target state="translated">&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;) indicates they are alphabetic characters.</target>
        </trans-unit>
        <trans-unit id="65af1bfe6bbdccc9d21b00819c583907c5184825" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;) indicates they are alphabetic or decimal number characters.</source>
          <target state="translated">&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;) indicates they are alphabetic or decimal number characters.</target>
        </trans-unit>
        <trans-unit id="9578be96f22bde7c099791d5feffbd5d0286d5ff" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;) indicates they are spacing separators.</source>
          <target state="translated">&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;) indicates they are spacing separators.</target>
        </trans-unit>
        <trans-unit id="aab0d89acaf5ad3d62f30e71825d5fefe77ba942" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;).</source>
          <target state="translated">&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="3227d3d1e3024f21c3d02dfb3126771139114ba4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;evaporate property&lt;/a&gt;).</source>
          <target state="translated">&amp;rsquo; property (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;evaporate property&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="8440551b1ce2ea9070450f0e1556aed2e7aa03cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property indicates that they are alphabetic or decimal digits.</source>
          <target state="translated">&amp;rsquo; property indicates that they are alphabetic or decimal digits.</target>
        </trans-unit>
        <trans-unit id="7213e6f0e55fe9470a91c7799238e0faeb9850f9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property indicates that they are alphabetic.</source>
          <target state="translated">&amp;rsquo; property indicates that they are alphabetic.</target>
        </trans-unit>
        <trans-unit id="5b1bd23c8716aedc52634bf794989e8732ef6dfa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property indicates that they are spacing separators.</source>
          <target state="translated">&amp;rsquo; property indicates that they are spacing separators.</target>
        </trans-unit>
        <trans-unit id="09958adfd8af3eaf45bb2204cd25c0cd49ebd43c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property.</source>
          <target state="translated">&amp;rsquo; property.</target>
        </trans-unit>
        <trans-unit id="22a4877a02dff396a4f394d6c7cbbf5fe4e2c686" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; provides &lt;code&gt;nil&lt;/code&gt; as the argument value. Completion, Existing, Prompt.</source>
          <target state="translated">&amp;rsquo; provides &lt;code&gt;nil&lt;/code&gt; as the argument value. Completion, Existing, Prompt.</target>
        </trans-unit>
        <trans-unit id="675b174675a996a3325cff1b6009854b4e597596" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; provides &lt;code&gt;nil&lt;/code&gt; as the argument. No I/O.</source>
          <target state="translated">&amp;rsquo; provides &lt;code&gt;nil&lt;/code&gt; as the argument. No I/O.</target>
        </trans-unit>
        <trans-unit id="cc7e306e95fa301a4044617f1e30f8a666a9fa0b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; provides the &lt;var&gt;n&lt;/var&gt;th such event. Events that are not lists, such as function keys and</source>
          <target state="translated">&amp;rsquo; provides the &lt;var&gt;n&lt;/var&gt; th such event. Events that are not lists, such as function keys and</target>
        </trans-unit>
        <trans-unit id="939a3e012feafd7b061e44dffb23a49156875ab9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; puts &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; puts &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e70b56a75170ba739a4982997114487b15016a31" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; quotes &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; quotes &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="f74638a9490f724fd9478fa8a39d5bca3de30eab" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; quotes special characters, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; quotes special characters, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5e247fbdbc23a0ada1c57fcf515c0d7157cc5953" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; quotes.</source>
          <target state="translated">&amp;rsquo; quotes.</target>
        </trans-unit>
        <trans-unit id="defa7344a1649b93a1b43c1af97fa03cea56040a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; rather than &amp;lsquo;</source>
          <target state="translated">' のではなく '</target>
        </trans-unit>
        <trans-unit id="0e63d19d5c13d20747308773afdd581cbda8ab5b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; rather than the likely-intended four characters.</source>
          <target state="translated">&amp;rsquo; rather than the likely-intended four characters.</target>
        </trans-unit>
        <trans-unit id="c199ce06a9106f79e10b3c857e8ba62ecb8782c8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; read a down-event. If no up-event has been discarded, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; read a down-event. If no up-event has been discarded, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="c8bc9fee9ccde74836c91ff7040568b6f22901ff" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reader macro (but not when interpreting) is closer to what &lt;code&gt;eval-when-compile&lt;/code&gt; does.</source>
          <target state="translated">&amp;rsquo; reader macro (but not when interpreting) is closer to what &lt;code&gt;eval-when-compile&lt;/code&gt; does.</target>
        </trans-unit>
        <trans-unit id="b77bea9c0f34fc08da63988fd47f42ffbbf54f12" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reads &lt;var&gt;integer&lt;/var&gt; in binary, and &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; reads &lt;var&gt;integer&lt;/var&gt; in binary, and &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="4a977382ce35c3c33cdc854b9bddc945b825b35c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reads &lt;var&gt;integer&lt;/var&gt; in radix &lt;var&gt;radix&lt;/var&gt;. Allowed values of &lt;var&gt;radix&lt;/var&gt; run from 2 to 36, and allowed digits are the first &lt;var&gt;radix&lt;/var&gt; characters taken from &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; reads &lt;var&gt;integer&lt;/var&gt; in radix &lt;var&gt;radix&lt;/var&gt; . Allowed values of &lt;var&gt;radix&lt;/var&gt; run from 2 to 36, and allowed digits are the first &lt;var&gt;radix&lt;/var&gt; characters taken from &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="189124fc2a4c9be730f7347dbfe98fca6d3ba4bd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reads a key sequence that ends with a down-event, it also reads and discards the following up-event. You can get access to that up-event with the &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; reads a key sequence that ends with a down-event, it also reads and discards the following up-event. You can get access to that up-event with the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="f518ec2f9ee04bce047dc1cea910142445c78e78" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reads as &amp;lsquo;</source>
          <target state="translated">&amp;rsquo; reads as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="571a2c67a40c68b8fa8e0a799d32129450f39fe3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; references. Don&amp;rsquo;t set this variable with &lt;code&gt;setq&lt;/code&gt;; you should only bind it temporarily to &lt;code&gt;t&lt;/code&gt; with &lt;code&gt;let&lt;/code&gt;. When you do that, you should also bind &lt;code&gt;print-number-table&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">'参照。この変数を &lt;code&gt;setq&lt;/code&gt; で設定しないでください。あなただけに、一時的にそれをバインドする必要があります &lt;code&gt;t&lt;/code&gt; で &lt;code&gt;let&lt;/code&gt; 。その場合は、 &lt;code&gt;print-number-table&lt;/code&gt; も &lt;code&gt;nil&lt;/code&gt; にバインドする必要があります。</target>
        </trans-unit>
        <trans-unit id="3e421379dbf061654d9083253ed737bd50a79bb9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; replaced with &amp;lsquo;</source>
          <target state="translated">' 交換された '</target>
        </trans-unit>
        <trans-unit id="581d3d96609cdb849f61aaa8bdd7e71319166e96" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represent the same integer, and &amp;lsquo;</source>
          <target state="translated">'は同じ整数を表し、'</target>
        </trans-unit>
        <trans-unit id="41ee2da6c26ebcde2f624144aac95aca73d5c7e0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represent the same list. Reading will accept any of the alternatives, but printing must choose one of them.</source>
          <target state="translated">'は同じリストを表します。読書はどの選択肢も受け入れますが、印刷はそれらの1つを選択する必要があります。</target>
        </trans-unit>
        <trans-unit id="9106dfbfae17116b90a82bc2ffe1f7b3626dbedd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represented as a binary number (&amp;lsquo;</source>
          <target state="translated">'2進数として表される（'</target>
        </trans-unit>
        <trans-unit id="a54412dad20c8eb983993f1770db22c76c6b2f9c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represented as a hexadecimal number (&amp;lsquo;</source>
          <target state="translated">'16進数で表されます（ '</target>
        </trans-unit>
        <trans-unit id="58f28672130d4604ca4fedb13890488cb1472d2c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represented as an octal number (&amp;lsquo;</source>
          <target state="translated">'8進数として表されます（'</target>
        </trans-unit>
        <trans-unit id="f8a45278993bdb03350144cd8a95644067202eba" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents</source>
          <target state="translated">'は</target>
        </trans-unit>
        <trans-unit id="2a12c9ddbda29611054438962fb9864cf85a92cf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents a tab character; in the name of a symbol, however, &amp;lsquo;</source>
          <target state="translated">'はタブ文字を表します。しかし、シンボルの名において、 '</target>
        </trans-unit>
        <trans-unit id="594d4097cb43505af332eaeb9b897109bdfb958f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents one character, &amp;lsquo;</source>
          <target state="translated">'は1文字を表します'</target>
        </trans-unit>
        <trans-unit id="c0eec8e912e03fd7d1194f437a47e875d21ea955" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents that object, so when reading back the object, they will be the same object instead of copies (see &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;).</source>
          <target state="translated">'はそのオブジェクトを表すため、オブジェクトを読み戻すと、コピーではなく同じオブジェクトになります（&lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;循環オブジェクトを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="e28015aab9920bad92ad95464421d2431c3ffa09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents the shifted-control-o character.</source>
          <target state="translated">'はshifted-control-o文字を表します。</target>
        </trans-unit>
        <trans-unit id="98fa870529761a5797fca87309df19496a6314e7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents the space character.) Numerically, the bit values are 2**22 for alt, 2**23 for super and 2**24 for hyper.</source>
          <target state="translated">'はスペース文字を表します。）数値的には、ビット値はaltの場合は2 ** 22、superの場合は2 ** 23、hyperの場合は2 ** 24です。</target>
        </trans-unit>
        <trans-unit id="f2b9e4bcb93f349f09b6112ed1913d20e28cdf70" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; respectively. See &lt;a href=&quot;low_002dlevel-font#Low_002dLevel-Font&quot;&gt;Low-Level Font&lt;/a&gt;, for a description of these Lisp objects.</source>
          <target state="translated">'それぞれ。これらのLispオブジェクトの説明については、&lt;a href=&quot;low_002dlevel-font#Low_002dLevel-Font&quot;&gt;低レベルフォントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="139bb6039497390060931971fb52f4d5d99e56a9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; resumes from where searching for &amp;lsquo;</source>
          <target state="translated">'検索を再開します'</target>
        </trans-unit>
        <trans-unit id="35b99da3d9cfe3ed3226ae2162f70fe8692616b3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reverses the case of letters.</source>
          <target state="translated">'は文字の大文字と小文字を逆にします。</target>
        </trans-unit>
        <trans-unit id="738eb4e4969146ffb255e77193e934b252299a48" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; says to load &lt;var&gt;user&lt;/var&gt;&amp;rsquo;s init file instead of yours. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Entering-Emacs.html#Entering-Emacs&quot;&gt;Entering Emacs&lt;/a&gt; in</source>
          <target state="translated">'は、 &lt;var&gt;user&lt;/var&gt; のinitファイルではなくユーザーのinitファイルをロードするように指示します。参照&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Entering-Emacs.html#Entering-Emacs&quot;&gt;のEmacsを入力する&lt;/a&gt;には</target>
        </trans-unit>
        <trans-unit id="9987f29e007db9fdc1b7639ff00f84b41c956487" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; section).</source>
          <target state="translated">' セクション）。</target>
        </trans-unit>
        <trans-unit id="d034ee4d5f76fa35c04ad0797ce07d721729e100" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; section, this section is used as the long description. (When displaying the description, Emacs omits the &amp;lsquo;</source>
          <target state="translated">'セクションでは、このセクションは長い説明として使用されます。（説明を表示するとき、Emacsは 'を省略します</target>
        </trans-unit>
        <trans-unit id="57ce281b19d067a18ad410e01ede9a3b1bbecd64" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; sequences in this documentation string.</source>
          <target state="translated">'このドキュメント文字列のシーケンス。</target>
        </trans-unit>
        <trans-unit id="6001034cee4b297f5ebbd4b211bbfc0fdbba7415" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; set, the resulting style is called the &amp;ldquo;a&amp;rdquo; style.</source>
          <target state="translated">'セットでは、結果のスタイルは「a」スタイルと呼ばれます。</target>
        </trans-unit>
        <trans-unit id="67ee16f83b6c06a1206352bba3c7e19bf51f5d81" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; sets the command&amp;rsquo;s first argument to the raw command prefix (see &lt;a href=&quot;prefix-command-arguments#Prefix-Command-Arguments&quot;&gt;Prefix Command Arguments&lt;/a&gt;). &amp;lsquo;</source>
          <target state="translated">'コマンドの最初の引数を生のコマンドプレフィックスに設定します（&lt;a href=&quot;prefix-command-arguments#Prefix-Command-Arguments&quot;&gt;プレフィックスコマンド引数を&lt;/a&gt;参照）。'</target>
        </trans-unit>
        <trans-unit id="ea2863c19bd454eafef2c5bc946ecf70f86a21e5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; should be avoided, because it matches only &amp;lsquo;</source>
          <target state="translated">'のみ一致するため、避ける必要があります'</target>
        </trans-unit>
        <trans-unit id="3827805c5d1a506b821841f322eb5008d3c42e9d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; should be avoided.</source>
          <target state="translated">'は避けるべきです。</target>
        </trans-unit>
        <trans-unit id="24ba4712baa1131e4bccb1d7757e1a3504265a67" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; shows only the first three characters of the representation for &lt;var&gt;object&lt;/var&gt;. For other specification characters, the effect of precision is what the local library functions of the &lt;code&gt;printf&lt;/code&gt; family produce.</source>
          <target state="translated">'は、 &lt;var&gt;object&lt;/var&gt; の表現の最初の3文字のみを示します。他の仕様文字の場合、精度の影響は、 &lt;code&gt;printf&lt;/code&gt; ファミリのローカルライブラリ関数が生成するものです。</target>
        </trans-unit>
        <trans-unit id="c076e4e6569b3aec9ea266ec18a7fc1d27b1f442" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; signals an error.</source>
          <target state="translated">'はエラーを示します。</target>
        </trans-unit>
        <trans-unit id="2884f7083c56548b3db993d1b0c9ee925bd712bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; signature, such as shell and Perl scripts, are also considered executable. Directories are also reported as executable, for compatibility with POSIX. These conventions are also followed by &lt;code&gt;file-attributes&lt;/code&gt; (see &lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;File Attributes&lt;/a&gt;).</source>
          <target state="translated">'シェルスクリプトやPerlスクリプトなどの署名も実行可能と見なされます。ディレクトリは、POSIXとの互換性のために、実行可能ファイルとしても報告されます。これらの規則の後には、 &lt;code&gt;file-attributes&lt;/code&gt; も続きます（&lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;ファイル属性を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="a2b8a099ac457cff258c6e72d0ee549d2b566f0e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; so as not to include that information.</source>
          <target state="translated">'その情報を含まないように。</target>
        </trans-unit>
        <trans-unit id="8c8fbbd75341e06aed8d5217cd074fab01a897ad" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; so it stands for &amp;lsquo;</source>
          <target state="translated">'だからそれは'の略です</target>
        </trans-unit>
        <trans-unit id="2c5d75f45cd314d6763c0bc12950592a1ae9ced7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specification to find the beginning and end of the region. This lets other Lisp programs specify the bounds explicitly as arguments. See &lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;Interactive Codes&lt;/a&gt;.</source>
          <target state="translated">'領域の開始と終了を見つけるための仕様。これにより、他のLispプログラムが引数として境界を明示的に指定できるようになります。&lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;インタラクティブコードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="185e72d81ab6bd4ea26f5a3134de293461aaa7e4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specification. This provides the values of point and the mark as arguments to the command in an interactive call, but permits other Lisp programs to specify arguments explicitly. See &lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;Interactive Codes&lt;/a&gt;.</source>
          <target state="translated">'仕様。これは、対話型呼び出しのコマンドへの引数としてpointとmarkの値を提供しますが、他のLispプログラムが引数を明示的に指定することを許可します。&lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;インタラクティブコードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6f5b544c09298590202fffaac0179d8938ff9386" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies a minimum width of 7. In the first case, the string inserted in place of &amp;lsquo;</source>
          <target state="translated">'は最小幅7を指定します。最初のケースでは、'の代わりに文字列が挿入されます</target>
        </trans-unit>
        <trans-unit id="ca6a05604f0ed32c74f1a98ed8f0366e8f0b91af" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies an alternate form which depends on the format in use. For &amp;lsquo;</source>
          <target state="translated">'は、使用されている形式に応じた代替形式を指定します。ために '</target>
        </trans-unit>
        <trans-unit id="d14ff4aadb33190a94d29881f65b7d831cdbcf42" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies the number of seconds since the minute; &amp;lsquo;</source>
          <target state="translated">'分からの秒数を指定します。'</target>
        </trans-unit>
        <trans-unit id="d8a4d1e6de51592dd8e34402ca4d960cbe1659a9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies the rules used in New York from 1987 through 2006. All systems support the string &amp;lsquo;</source>
          <target state="translated">'1987年から2006年までニューヨークで使用されたルールを指定します。すべてのシステムは文字列をサポートします'</target>
        </trans-unit>
        <trans-unit id="e699d88171d6267c5b0089f4841a6b51fc558fc6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies the time zone and daylight saving time history for locations near New York City. GNU and most other systems support POSIX-style &lt;code&gt;TZ&lt;/code&gt; strings, e.g., &amp;lsquo;</source>
          <target state="translated">'は、ニューヨーク市の近くの場所のタイムゾーンと夏時間の履歴を指定します。GNUおよび他のほとんどのシステムは、POSIXスタイルの &lt;code&gt;TZ&lt;/code&gt; 文字列をサポートしています。</target>
        </trans-unit>
        <trans-unit id="abdf6e560f8267c9de5c98e074ed1a17cd945921" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies using the current locale&amp;rsquo;s alternative version of the date and time. In a Japanese locale, for example, &lt;code&gt;%Ex&lt;/code&gt; might yield a date format based on the Japanese Emperors&amp;rsquo; reigns. &amp;lsquo;</source>
          <target state="translated">'は、現在のロケールの代替バージョンの日付と時刻を使用することを指定します。たとえば、日本のロケールでは、 &lt;code&gt;%Ex&lt;/code&gt; は日本の天皇の治世に基づいた日付形式を生成する場合があります。'</target>
        </trans-unit>
        <trans-unit id="2f01962b8d7bbe4ceafc2ee0619b352f30ef0293" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies which font to use (in this fontset) for one particular character set. Here, &lt;var&gt;charset&lt;/var&gt; is the name of a character set, and &lt;var&gt;font&lt;/var&gt; is the font to use for that character set. You can use this construct any number of times in the specification string.</source>
          <target state="translated">'1つの特定の文字セットに（このフォントセットで）使用するフォントを指定します。ここで、 &lt;var&gt;charset&lt;/var&gt; は文字セットの名前であり、 &lt;var&gt;font&lt;/var&gt; はその文字セットに使用するフォントです。この構成は、仕様文字列で何度でも使用できます。</target>
        </trans-unit>
        <trans-unit id="1af57b36daf9bbab85c1d6aab7801303a450080f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for</source>
          <target state="translated">' を意味する</target>
        </trans-unit>
        <trans-unit id="3f77b91c30a3d55044b432a8c79262b81f7739ab" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for &amp;lsquo;</source>
          <target state="translated">' を意味する '</target>
        </trans-unit>
        <trans-unit id="aea904a13ad436cab74e64ef36423b6bb4333f05" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for a conceptually infinite number of bits that match the leading bit; here, an infinite number of 0 bits. Later examples also use this &amp;lsquo;</source>
          <target state="translated">'は、先頭のビットと一致する概念的に無限のビット数を表します。ここでは、0ビットの無限の数。後の例でもこれを使用します '</target>
        </trans-unit>
        <trans-unit id="825661551b2e305f4ffdc7d01bd8311514b87650" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for a double-quote as part of the string, &amp;lsquo;</source>
          <target state="translated">'は、文字列の一部としての二重引用符を表します。'</target>
        </trans-unit>
        <trans-unit id="6f8b26b062bc292a142a487deb1620bd2c1f6161" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for ten to the second power, and that is multiplied by 1.5. Integer computations are exact. Floating-point computations often involve rounding errors, as the numbers have a fixed amount of precision.</source>
          <target state="translated">'は10の2乗を表し、これに1.5を掛けます。整数の計算は正確です。数値の精度は固定されているため、浮動小数点の計算には丸め誤差が含まれることがよくあります。</target>
        </trans-unit>
        <trans-unit id="4c8be83bc7ae968ee470f6f8e9ab11446043043e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for zero or more arguments. Parentheses are used when several arguments are grouped into additional levels of list structure. Here is an example:</source>
          <target state="translated">'は0個以上の引数を表します。括弧は、複数の引数がリスト構造の追加レベルにグループ化される場合に使用されます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="da9f88006c6df540dd1a6562f684dfae668efc9c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; starts at the end of the match of &amp;lsquo;</source>
          <target state="translated">'の試合の終わりから始まります'</target>
        </trans-unit>
        <trans-unit id="d6620f72bde4b8b25b567ca2e6ffa29802d75882" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stores an element using the same notation. Just as certain forms like &lt;code&gt;a[i]&lt;/code&gt; can be lvalues in C, there is a set of forms that can be generalized variables in Lisp.</source>
          <target state="translated">'は同じ表記を使用して要素を格納します。 &lt;code&gt;a[i]&lt;/code&gt; ような特定の形式がCの左辺値であるのと同じように、 Lispでは一般化された変数であることができる一連の形式があります。</target>
        </trans-unit>
        <trans-unit id="10616b00dee4482423205affc9cea7e2449a8649" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; strings.</source>
          <target state="translated">'文字列。</target>
        </trans-unit>
        <trans-unit id="c767884f3b3c2e80626a67b9e4ac8c1a8bd274d9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; submenu in the &amp;lsquo;</source>
          <target state="translated">'のサブメニュー</target>
        </trans-unit>
        <trans-unit id="7aae75d7a79bc4f5d6c7ee9b67e2d47846ad522e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; substituted with matched groups. Arguments &lt;var&gt;replacement&lt;/var&gt; and optional &lt;var&gt;fixedcase&lt;/var&gt;, &lt;var&gt;literal&lt;/var&gt;, &lt;var&gt;string&lt;/var&gt; and &lt;var&gt;subexp&lt;/var&gt; have the same meaning as for &lt;code&gt;replace-match&lt;/code&gt;.</source>
          <target state="translated">'一致したグループに置き換えられます。引数 &lt;var&gt;replacement&lt;/var&gt; およびオプションの &lt;var&gt;fixedcase&lt;/var&gt; 、 &lt;var&gt;literal&lt;/var&gt; 、 &lt;var&gt;string&lt;/var&gt; 、および &lt;var&gt;subexp&lt;/var&gt; は、 &lt;code&gt;replace-match&lt;/code&gt; の場合と同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="e377fa383770537551bd15905f48f76948f4376c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffix (possibly extended with a compression suffix); a file whose name is just &lt;var&gt;feature&lt;/var&gt; won&amp;rsquo;t be used. (The variable &lt;code&gt;load-suffixes&lt;/code&gt; specifies the exact required Lisp suffixes.)</source>
          <target state="translated">'接尾辞（圧縮接尾辞で拡張される可能性があります）; 名前が &lt;var&gt;feature&lt;/var&gt; だけのファイルは使用されません。（変数 &lt;code&gt;load-suffixes&lt;/code&gt; は、正確に必要なLispサフィックスを指定します。）</target>
        </trans-unit>
        <trans-unit id="5542b28100fb1bd974efbd2103fb7a44549e78cf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffix into &amp;lsquo;</source>
          <target state="translated">'接尾辞'</target>
        </trans-unit>
        <trans-unit id="52cf1f7aca1ff2cb18e711edc49f8c0a95403130" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffix); their values are lists of functions, but these functions are called in a special way (they are passed arguments, or their return values are used). The variables whose names end in &amp;lsquo;</source>
          <target state="translated">'接尾辞）; それらの値は関数のリストですが、これらの関数は特別な方法で呼び出されます（引数が渡されるか、戻り値が使用されます）。名前が 'で終わる変数</target>
        </trans-unit>
        <trans-unit id="baf547531142ea77731fd1217c0f1617242cc6aa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffixes.</source>
          <target state="translated">'接尾辞。</target>
        </trans-unit>
        <trans-unit id="3124057609a582cbce668ec29e871b4886b5276e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suppresses padding, &amp;lsquo;</source>
          <target state="translated">'パディングを抑制します'</target>
        </trans-unit>
        <trans-unit id="855e9c1c70059d951cc7892e4af983c19abfff53" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; switches.</source>
          <target state="translated">'スイッチ。</target>
        </trans-unit>
        <trans-unit id="4335f7f0e6d447601bb197b80cf04c8b8888422f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; symbol at the left-hand side, you can expand that line by typing</source>
          <target state="translated">左側の '記号、入力してその行を展開できます</target>
        </trans-unit>
        <trans-unit id="f71864dc8d7b4b37b99a868bb8e1cd5beabe2c8e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; syntax (see &lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;). For example:</source>
          <target state="translated">'構文（&lt;a href=&quot;backquote#Backquote&quot;&gt;Backquoteを&lt;/a&gt;参照）。例えば：</target>
        </trans-unit>
        <trans-unit id="3b2a710c0e29aad75e0fe571dc2015731a81a334" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; syntax to indicate a meta character in a string constant, this sets the 2**7 bit of the character in the string. If the string is used in &lt;code&gt;define-key&lt;/code&gt; or &lt;code&gt;lookup-key&lt;/code&gt;, this numeric code is translated into the equivalent meta character. See &lt;a href=&quot;character-type#Character-Type&quot;&gt;Character Type&lt;/a&gt;.</source>
          <target state="translated">'文字列定数のメタ文字を示す構文。これにより、文字列の文字の2 ** 7ビットが設定されます。文字列が &lt;code&gt;define-key&lt;/code&gt; または &lt;code&gt;lookup-key&lt;/code&gt; で使用されている場合、この数値コードは同等のメタ文字に変換されます。&lt;a href=&quot;character-type#Character-Type&quot;&gt;文字タイプを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="20f3c6c6648bb2f7a7e5540e6e6b2aac635dbed3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; syntax, those facilities won&amp;rsquo;t work.</source>
          <target state="translated">'構文、これらの機能は機能しません。</target>
        </trans-unit>
        <trans-unit id="be8cd956e8c29618e37ab8bfa10aae893837d975" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; syntax. Which one you use does not affect the meaning of the program, but may guide the understanding of people who read it.</source>
          <target state="translated">'構文。どちらを使用しても、プログラムの意味には影響しませんが、それを読む人々の理解を導く可能性があります。</target>
        </trans-unit>
        <trans-unit id="69b8dd310b55861377ef473df7392627ef5b37a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; syntax; for control characters in keyboard input, we prefer the &amp;lsquo;</source>
          <target state="translated">'構文; キーボード入力の制御文字については、 'を優先します</target>
        </trans-unit>
        <trans-unit id="6cebde34e2931b31c5f57d7af4eb126076cc68d3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; tag, that takes precedence, so these functions won&amp;rsquo;t be called.</source>
          <target state="translated">'タグが優先されるため、これらの関数は呼び出されません。</target>
        </trans-unit>
        <trans-unit id="388ef96582d73bb736bc0d52d1b9a2f1f82c8529" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; takes precedence.</source>
          <target state="translated">'が優先されます。</target>
        </trans-unit>
        <trans-unit id="3234ffb0227d98aa048b09db21db8ed2aefe72ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; tells the caller that the need for reverting was not checked, but that reverting the buffer is fast. It also tells Auto Revert not to print any revert messages, even if &lt;code&gt;auto-revert-verbose&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. This is important, as getting revert messages every &lt;code&gt;auto-revert-interval&lt;/code&gt; seconds can be very annoying. The information provided by this return value could also be useful if the function is consulted for purposes other than auto-reverting.</source>
          <target state="translated">'は、元に戻す必要性がチェックされていないが、バッファーの元に戻すのは高速であることを呼び出し元に通知します。また、 &lt;code&gt;auto-revert-verbose&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合でも、自動復帰に復帰メッセージを出力しないように指示します。 &lt;code&gt;auto-revert-interval&lt;/code&gt; 秒ごとに復帰メッセージを取得することは非常に煩わしい場合があるため、これは重要です。この戻り値によって提供される情報は、関数が自動復帰以外の目的で参照される場合にも役立つ可能性があります。</target>
        </trans-unit>
        <trans-unit id="5691494359351e39ed1bc769dfe74447927acd73" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that both enters and leaves math mode.</source>
          <target state="translated">'数学モードに出入りします。</target>
        </trans-unit>
        <trans-unit id="7c5cec56a5b6c687837f17a0e57312cb0b36ba11" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that does not end a character class. This ends the character alternative and restores the ordinary syntax of regular expressions; an unquoted &amp;lsquo;</source>
          <target state="translated">'文字クラスを終了しません。これにより、代替文字が終了し、正規表現の通常の構文が復元されます。引用されていない '</target>
        </trans-unit>
        <trans-unit id="fe51f828d89f2d247ca20c5d6e2b0fe99b906d20" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that follows must match the same exact text.</source>
          <target state="translated">次の 'は、まったく同じテキストと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="837bb1fdb2a24fcc41831348725c360328dbd844" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that have special meanings. Here is a table of the special &amp;lsquo;</source>
          <target state="translated">'特別な意味を持っています。これが特別な 'の表です</target>
        </trans-unit>
        <trans-unit id="c011ffe01c008db1b3d7dc11d5fad3dc83ff4c69" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that means that Edebug knows where the source code for the frame is located. Use</source>
          <target state="translated">'これは、Edebugがフレームのソースコードがどこにあるかを知っていることを意味します。使用する</target>
        </trans-unit>
        <trans-unit id="f399fd594ee66f69a12794262be03a799245ea09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that occur in regular expressions close a character alternative and hence are special. However, occasionally a regular expression may try to match a complex pattern of literal &amp;lsquo;</source>
          <target state="translated">正規表現で発生する 'は、代替文字を閉じるため、特別です。ただし、正規表現がリテラルの複雑なパターンに一致しようとする場合があります。</target>
        </trans-unit>
        <trans-unit id="c2676b494a123f7d6467edf89f6a074a41ab7631" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that occurs at the beginning of a line.</source>
          <target state="translated">'行の先頭に発生します。</target>
        </trans-unit>
        <trans-unit id="67cc82810089a3be070e25d1410ab25b938616c7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that permits the whole expression to match is &amp;lsquo;</source>
          <target state="translated">'式全体を一致させることができるのは'</target>
        </trans-unit>
        <trans-unit id="337e44f09ec175d2367672df8828082114e29cc9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that specifies the port number directly. For a server, it can also be &lt;code&gt;t&lt;/code&gt;, which means to let the system select an unused port number.</source>
          <target state="translated">'ポート番号を直接指定します。サーバーの場合は、 &lt;code&gt;t&lt;/code&gt; にすることもできます。これは、システムに未使用のポート番号を選択させることを意味します。</target>
        </trans-unit>
        <trans-unit id="08c8266e34135bf02587d248d177daa67776570f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that translates to a port number, or an integer like &amp;lsquo;</source>
          <target state="translated">'これはポート番号、または'のような整数に変換されます</target>
        </trans-unit>
        <trans-unit id="ef6fed6549190b0d965e5cf7e0fced517211eb29" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; through &amp;lsquo;</source>
          <target state="translated">' 使って '</target>
        </trans-unit>
        <trans-unit id="1c96ef5db986721c2692b006a74b2645ab6ec4d7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to &amp;lsquo;</source>
          <target state="translated">「から」</target>
        </trans-unit>
        <trans-unit id="1fbaa1a5cbd7b06a7b60e28d1fdaaf59254290d0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">'を &lt;var&gt;filename&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="de0e73f2fecb5ec00dbb007a2ec1001afbb0f085" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to a directory file name that does not already end in &amp;lsquo;</source>
          <target state="translated">'で終わっていないディレクトリファイル名に'</target>
        </trans-unit>
        <trans-unit id="4bec36c0a01539d8a5d522ca50f75807d6c3923e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to anchor the match. Most often, the paragraph commands do check for a match only at the beginning of a line, which means that &amp;lsquo;</source>
          <target state="translated">'マッチを固定します。ほとんどの場合、段落コマンドは行の先頭でのみ一致をチェックします。つまり、 '</target>
        </trans-unit>
        <trans-unit id="f72731b36931105de36d122a933c076791842b8a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to avoid confusing the Emacs commands for editing Lisp code. You should also add a backslash before Unicode characters which resemble the previously mentioned</source>
          <target state="translated">'Lispコードを編集するためのEmacsコマンドの混乱を避けるため。また、前述のUnicode文字の前に円記号を追加する必要があります</target>
        </trans-unit>
        <trans-unit id="40c4b4aef798faaf4f947f07b14993886fb2e25b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to distinguish them from the ordinary help functions.</source>
          <target state="translated">'通常のヘルプ機能と区別するため。</target>
        </trans-unit>
        <trans-unit id="7eaa456bedf68b61633834ea5ceefa0c4840dc3a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to encourage this. You can also add a backslash before whitespace characters such as space, tab, newline and formfeed. However, it is cleaner to use one of the easily readable escape sequences, such as &amp;lsquo;</source>
          <target state="translated">'これを奨励する。スペース、タブ、改行、フォームフィードなどの空白文字の前に円記号を追加することもできます。ただし、次のような読みやすいエスケープシーケンスの1つを使用する方がクリーンです。</target>
        </trans-unit>
        <trans-unit id="93f39c19a746daa977773d444b10785c672cf535" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to enter the name of an existing buffer, which becomes the second and final argument.</source>
          <target state="translated">'既存のバッファの名前を入力します。これが2番目の最後の引数になります。</target>
        </trans-unit>
        <trans-unit id="a6e12e91adde194f55011fdcf2dc72ee6a35c47e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to escape these three characters, since &amp;lsquo;</source>
          <target state="translated">'これらの3文字をエスケープするには'</target>
        </trans-unit>
        <trans-unit id="b651cce6a3b11d6713eb94a727d12bd1305455e3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to get an unused name. See also &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;Creating Buffers&lt;/a&gt;. Note that the</source>
          <target state="translated">'未使用の名前を取得します。&lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;バッファの作成&lt;/a&gt;も参照してください。に注意してください</target>
        </trans-unit>
        <trans-unit id="8125279c0c70dec6fc2b0e478eb7ec098bebf5bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to get the regular expression &amp;lsquo;</source>
          <target state="translated">'正規表現を取得するには'</target>
        </trans-unit>
        <trans-unit id="4c1df7f2ef4455bd74521b1af25dddfd066ca67b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to include previous argument values (starting with the first argument) in the prompt. This is done using &lt;code&gt;format-message&lt;/code&gt; (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;). For example, here is how you could read the name of an existing buffer followed by a new name to give to that buffer:</source>
          <target state="translated">'前の引数値（最初の引数から始まる）をプロンプトに含めます。これは、 &lt;code&gt;format-message&lt;/code&gt; を使用して行われます（&lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;文字列のフォーマットを&lt;/a&gt;参照）。たとえば、既存のバッファの名前に続いて新しい名前を読み取り、そのバッファに付ける方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4af85a06e77851340c307acd78a79eb01b528a8c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to make it clear that it is not a typo; for example, &amp;lsquo;</source>
          <target state="translated">'それがタイプミスではないことを明確にするため。例えば、 '</target>
        </trans-unit>
        <trans-unit id="59fb4405e0f561119860d5e00c181a940f01bf69" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to match only two &amp;lsquo;</source>
          <target state="translated">'2つだけ一致する'</target>
        </trans-unit>
        <trans-unit id="e40f63628ea31a783fe25d944b57bf3718fbacb7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to modify aspects of the substitution.</source>
          <target state="translated">'置換の側面を変更します。</target>
        </trans-unit>
        <trans-unit id="6e0eebe6473304691cfb867291815ac3013a8336" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to operate on. Thus, &amp;lsquo;</source>
          <target state="translated">'を操作します。したがって、 '</target>
        </trans-unit>
        <trans-unit id="c32c3a2723d46d49b1de22357d2f9ace29500719" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to pad with spaces to 3 positions. Plain &amp;lsquo;</source>
          <target state="translated">'3つの位置にスペースを埋めます。プレーン '</target>
        </trans-unit>
        <trans-unit id="8598fe93064166e0f6cc3efffb703454ce679443" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to prevent clashes. This will not work correctly if your filesystem truncates the resulting name.</source>
          <target state="translated">'衝突を防ぐため。ファイルシステムが結果の名前を切り捨てると、これは正しく機能しません。</target>
        </trans-unit>
        <trans-unit id="9c41d9b8e20a792f5937641bd2c555083bb51341" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to produce an explicitly numbered group.</source>
          <target state="translated">'明示的に番号が付けられたグループを生成します。</target>
        </trans-unit>
        <trans-unit id="748064e670ffd3fda5cab1334f574838f25880f6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to quote a single &amp;lsquo;</source>
          <target state="translated">'単一を引用する'</target>
        </trans-unit>
        <trans-unit id="47abbf881886d322f2b2e6e009f1ad7add21153a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to quote it: &amp;lsquo;</source>
          <target state="translated">'それを引用するには：'</target>
        </trans-unit>
        <trans-unit id="92532dc29b7a5e551acbaba0808d199c1662ec8e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to refer to the text matched by the corresponding grouping constructs.</source>
          <target state="translated">'対応するグループ化構造と一致するテキストを参照します。</target>
        </trans-unit>
        <trans-unit id="edb4c75a0470775b9fa6017925232194e232eae1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to saving a non-file buffer is asked to specify the file name to use. The &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; function passes the value &lt;code&gt;t&lt;/code&gt; for &lt;var&gt;pred&lt;/var&gt;.</source>
          <target state="translated">'非ファイルバッファを保存するには、使用するファイル名を指定するように求められます。 &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; 関数は値渡し &lt;code&gt;t&lt;/code&gt; するために &lt;var&gt;pred&lt;/var&gt; は。</target>
        </trans-unit>
        <trans-unit id="b6ac871afe1ce9ee251485fdc6ba803f72d43e1a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to specify a minimum field width. If the width is less, the field is padded to that width. Purely numeric constructs (&amp;lsquo;</source>
          <target state="translated">'最小フィールド幅を指定します。幅が小さい場合、フィールドはその幅にパディングされます。純粋に数値の構成（ '</target>
        </trans-unit>
        <trans-unit id="31461638d6c8c2557f66615f99e8f5796623cfdd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to specify where to put the warning type information, or it can omit the &amp;lsquo;</source>
          <target state="translated">'警告タイプ情報を配置する場所を指定するか、'を省略できます</target>
        </trans-unit>
        <trans-unit id="f8bfa332b465ff832eb6522c0f3fcc1ac5d58f56" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the end of &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">' &lt;var&gt;filename&lt;/var&gt; の末尾まで。</target>
        </trans-unit>
        <trans-unit id="84649512eefc30142a6bbc461a623ad5259aa9cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the end, preceded by the default return value (see below), if that is non-empty.</source>
          <target state="translated">'最後まで、空でない場合は、デフォルトの戻り値（以下を参照）が前に付きます。</target>
        </trans-unit>
        <trans-unit id="e36951caa38e41c242015bf2138390a3b3030d4a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the file &lt;var&gt;name&lt;/var&gt;. For a local file &lt;var&gt;name&lt;/var&gt;, it prefixes &lt;var&gt;name&lt;/var&gt; with &amp;lsquo;</source>
          <target state="translated">'をファイル &lt;var&gt;name&lt;/var&gt; 。ローカルファイル &lt;var&gt;name&lt;/var&gt; 場合、 &lt;var&gt;name&lt;/var&gt; に 'を付けます</target>
        </trans-unit>
        <trans-unit id="cb56bc23bddad0560016cd43fff26d2ffcb417bd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the letter &amp;lsquo;</source>
          <target state="translated">' 手紙に '</target>
        </trans-unit>
        <trans-unit id="28d938f667314e25fca28b963a1dd7fa5a300e21" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the specified name &lt;var&gt;library&lt;/var&gt;.</source>
          <target state="translated">'指定された名前 &lt;var&gt;library&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="288fc71fcd2c329917ae1ff5f20fc3c78b805433" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; together with octal character codes (see below), with &amp;lsquo;</source>
          <target state="translated">'8進文字コード（以下を参照）とともに、'</target>
        </trans-unit>
        <trans-unit id="2a92c7cbdd555f69e74be17eeef83d74de911c1c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; treats &amp;lsquo;</source>
          <target state="translated">'御馳走'</target>
        </trans-unit>
        <trans-unit id="892789607539307a6b91299d73faafa844d8eea8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; until the first non-zero conversion is encountered. For example, the default format used by &lt;code&gt;emacs-uptime&lt;/code&gt; (see &lt;a href=&quot;processor-run-time#Processor-Run-Time&quot;&gt;emacs-uptime&lt;/a&gt;) &lt;code&gt;&quot;%Y,&amp;nbsp;%D,&amp;nbsp;%H,&amp;nbsp;%M,&amp;nbsp;%z%S&quot;&lt;/code&gt; means that the number of seconds will always be produced, but years, days, hours, and minutes will only be shown if they are non-zero.</source>
          <target state="translated">'最初のゼロ以外の変換が検出されるまで。たとえばが使用する、デフォルトのフォーマット &lt;code&gt;emacs-uptime&lt;/code&gt; （参照&lt;a href=&quot;processor-run-time#Processor-Run-Time&quot;&gt;のemacs-稼働時間&lt;/a&gt;） &lt;code&gt;&quot;%Y,&amp;nbsp;%D,&amp;nbsp;%H,&amp;nbsp;%M,&amp;nbsp;%z%S&quot;&lt;/code&gt; の秒数が常に生成されることを意味するが、年、日、時間、および分は、ゼロ以外の場合にのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="caf424476f05096caec27a29e6b75a7510c8e7b8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; upper-cases letters, and &amp;lsquo;</source>
          <target state="translated">'大文字、および'</target>
        </trans-unit>
        <trans-unit id="3499a75561c9dbbbf470451e5237774be453e7e8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; uses lower case and &amp;lsquo;</source>
          <target state="translated">'は小文字を使用し、'</target>
        </trans-unit>
        <trans-unit id="a71b8c8eacb0826e27acaa32053f7fa084b05c61" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; uses upper case. The object can also be a floating-point number that is formatted as an integer, dropping any fraction.</source>
          <target state="translated">'は大文字を使用します。オブジェクトは、整数としてフォーマットされた浮動小数点数でもかまいません。</target>
        </trans-unit>
        <trans-unit id="edb0309decdb07ea141eca5bd8b5910537ff71f8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; value, i.e. each bit that is set in the argument &lt;var&gt;mode&lt;/var&gt; will be &lt;em&gt;reset&lt;/em&gt; in the default permissions with which Emacs creates files.</source>
          <target state="translated">'の値、すなわち、引数に設定されている各ビット &lt;var&gt;mode&lt;/var&gt; なります&lt;em&gt;リセット&lt;/em&gt;Emacsはファイルを作成すると、デフォルトのアクセス権に。</target>
        </trans-unit>
        <trans-unit id="d09097c0b1cf7352c121757e581ab340874001bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; was specified.</source>
          <target state="translated">'が指定されました。</target>
        </trans-unit>
        <trans-unit id="49b9b7fd1318f4016f7d800be5d14329716ce91f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; we get:</source>
          <target state="translated">' 我々が得る：</target>
        </trans-unit>
        <trans-unit id="826cdde19c9f960f07fda6ae214d32a1b07dd661" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; were specified.</source>
          <target state="translated">'が指定されました。</target>
        </trans-unit>
        <trans-unit id="b08d3c8483cc6a2908f98080f2f42824623cda2b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; were specified. If the &amp;lsquo;</source>
          <target state="translated">'が指定されました。'の場合</target>
        </trans-unit>
        <trans-unit id="632ed7026a65788ccf78496b8792b6d68d69387e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; when applied to the string &amp;lsquo;</source>
          <target state="translated">'文字列に適用された場合'</target>
        </trans-unit>
        <trans-unit id="222184bd234de4196da4c66e656f0a7213ab5c45" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; when narrowing is in effect; nothing otherwise (see &lt;code&gt;narrow-to-region&lt;/code&gt; in &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;).</source>
          <target state="translated">'ナローイングが有効な場合。それ以外の場合は何もありません（参照 &lt;code&gt;narrow-to-region&lt;/code&gt; に&lt;a href=&quot;narrowing#Narrowing&quot;&gt;ナローイング&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3ead0c568213ef43431254c72c501e4d335b20ae" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; where &lt;var&gt;user&lt;/var&gt; is a valid login name. In the following examples, assume that there is a user named &amp;lsquo;</source>
          <target state="translated">'ここで、 &lt;var&gt;user&lt;/var&gt; は有効なログイン名です。次の例では、 'という名前のユーザーがいると想定します。</target>
        </trans-unit>
        <trans-unit id="411ebaab07ec42088e3a16e0f9cb019f484e1f00" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; which have</source>
          <target state="translated">'持っている</target>
        </trans-unit>
        <trans-unit id="b3a019a9c5ba51b255e4a07f4be0a8ff5ad210bd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; will also listen on IPv4, so attempting to then listen separately on IPv4 will result in &lt;code&gt;EADDRINUSE&lt;/code&gt; errors (&amp;lsquo;</source>
          <target state="translated">'はIPv4でもリッスンするため、IPv4で個別にリッスンしようとすると、 &lt;code&gt;EADDRINUSE&lt;/code&gt; エラーが発生します（'</target>
        </trans-unit>
        <trans-unit id="534e96c935f83edc99aefe8d22534f29e7bef3d2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; will be simplified away before &lt;code&gt;file-truename&lt;/code&gt; is called. To eliminate the need for a call to &lt;code&gt;expand-file-name&lt;/code&gt;, &lt;code&gt;file-truename&lt;/code&gt; handles &amp;lsquo;</source>
          <target state="translated">' &lt;code&gt;file-truename&lt;/code&gt; が呼び出される前に簡略化されます。 &lt;code&gt;file-truename&lt;/code&gt; &lt;code&gt;expand-file-name&lt;/code&gt; 呼び出す必要をなくすために、file-truenameは 'を処理します</target>
        </trans-unit>
        <trans-unit id="4f42be525ef96b592b1822c827c9d6af0d95f0f4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with a number; shorter numbers will be padded with blanks. An optional period before the width requests zero-padding instead. For example, &lt;code&gt;&quot;%.3Y&quot;&lt;/code&gt; might produce &lt;code&gt;&quot;004 years&quot;&lt;/code&gt;.</source>
          <target state="translated">'番号付き; 短い数字は空白で埋められます。代わりに、幅がゼロパディングを要求する前のオプションの期間。たとえば、 &lt;code&gt;&quot;%.3Y&quot;&lt;/code&gt; は &lt;code&gt;&quot;004 years&quot;&lt;/code&gt; 生成する場合があります。</target>
        </trans-unit>
        <trans-unit id="ead5863ef381c47f30d418577fffd5673a55ef39" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with a text property &lt;code&gt;foo&lt;/code&gt;. If the conversion for &lt;code&gt;foo&lt;/code&gt; is done by inserting into the buffer, say, &amp;lsquo;</source>
          <target state="translated">'テキストプロパティ &lt;code&gt;foo&lt;/code&gt; 。 &lt;code&gt;foo&lt;/code&gt; の変換がバッファに挿入することによって行われる場合、たとえば、 '</target>
        </trans-unit>
        <trans-unit id="2642272e9601bcc2acf6db8f56895469727cc48e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with a value that names one character set. For the</source>
          <target state="translated">'1つの文字セットに名前を付ける値。のために</target>
        </trans-unit>
        <trans-unit id="1b29111d2ea0a17133c6447720aca7202698a4d6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with another &amp;lsquo;</source>
          <target state="translated">' 他のと '</target>
        </trans-unit>
        <trans-unit id="623fa15e1c8dc82973d518026b6a1aca0a2e0e4a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with grave accent. &amp;lsquo;</source>
          <target state="translated">アクサングラーブ付き。'</target>
        </trans-unit>
        <trans-unit id="f7f26767532c48864c68ffa5e07cb54fd5842dbe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with no following &amp;lsquo;</source>
          <target state="translated">'フォローなし'</target>
        </trans-unit>
        <trans-unit id="6ab5d53ef2ad7f0a13b455a2a948c27bd5de99f2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with the Meta modifier bit set. This value is not a valid character code: it fails the &lt;code&gt;characterp&lt;/code&gt; test (see &lt;a href=&quot;character-codes#Character-Codes&quot;&gt;Character Codes&lt;/a&gt;). Use &lt;code&gt;event-basic-type&lt;/code&gt; (see &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;) to recover the character code with the modifier bits removed; use &lt;code&gt;event-modifiers&lt;/code&gt; to test for modifiers in the character event returned by &lt;code&gt;read-char&lt;/code&gt;.</source>
          <target state="translated">'メタ修飾子ビットが設定されています。この値は、有効な文字コードではありません：それは失敗し &lt;code&gt;characterp&lt;/code&gt; のテストを（参照&lt;a href=&quot;character-codes#Character-Codes&quot;&gt;文字コード&lt;/a&gt;）。使用 &lt;code&gt;event-basic-type&lt;/code&gt; （参照&lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;イベントの分類&lt;/a&gt;）を除去する修飾子ビットの文字コードを回復します。 &lt;code&gt;event-modifiers&lt;/code&gt; を使用して、 &lt;code&gt;read-char&lt;/code&gt; によって返される文字イベントの修飾子をテストします。</target>
        </trans-unit>
        <trans-unit id="9a887615c2a4bc089c26d55bcdbb3774a77d9f21" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with the appropriate directory.</source>
          <target state="translated">'適切なディレクトリで。</target>
        </trans-unit>
        <trans-unit id="7445b32446b1369fc752b6c22b2ed9f445d4bb62" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; won&amp;rsquo;t work properly, and &amp;lsquo;</source>
          <target state="translated">'は正しく機能しません、そして'</target>
        </trans-unit>
        <trans-unit id="abd5493f4e151e7f73b49fe5e6804e43c8776b47" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; would be incorrect. However, a &amp;lsquo;</source>
          <target state="translated">'は正しくありません。ただし、 '</target>
        </trans-unit>
        <trans-unit id="595625c67d7ff58c27a327004a426d86e80ec20c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; would be superfluous. When there is a nonzero left margin, they accept matches that start after the left margin. In that case, a &amp;lsquo;</source>
          <target state="translated">'は不要です。ゼロ以外の左マージンがある場合、左マージンの後に開始する一致を受け入れます。その場合、 '</target>
        </trans-unit>
        <trans-unit id="65fa6eb071e53450b57c4e58474fdeb9a32bf2b8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; would match &amp;lsquo;</source>
          <target state="translated">'一致します'</target>
        </trans-unit>
        <trans-unit id="ae1831d468602fdf7493ace2e8e08b0b07fde15d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;&amp;mdash;does not become part of the string; i.e., the Lisp reader ignores an escaped newline while reading a string. An escaped space &amp;lsquo;</source>
          <target state="translated">'&amp;mdash;文字列の一部にはなりません。つまり、Lispリーダーは、文字列の読み取り中にエスケープされた改行を無視します。エスケープされたスペース '</target>
        </trans-unit>
        <trans-unit id="30e316448df02cbb38e390f7434fc8adb6e950f8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;&amp;mdash;if the same character occurs in two different places, the two occurrences in general have different properties.</source>
          <target state="translated">'&amp;mdash;同じ文字が2つの異なる場所で出現する場合、2つの出現は一般に異なるプロパティを持ちます。</target>
        </trans-unit>
        <trans-unit id="6b385e8b04b9c5da3e5aa19e043d4cfe69f446a1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;&amp;mdash;this is how to include a literal &amp;lsquo;</source>
          <target state="translated">'&amp;mdash;これはリテラルを含める方法です'</target>
        </trans-unit>
        <trans-unit id="9e94b8c01d259c248dbbf9ee6c460cb05e81e039" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;&amp;ndash;&amp;lsquo;</source>
          <target state="translated">&amp;rsquo;&amp;ndash;&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e1628d96a320a1d73e33067769e59198bf606849" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) and octal escape sequences (&amp;lsquo;</source>
          <target state="translated">'）および8進数のエスケープシーケンス（'</target>
        </trans-unit>
        <trans-unit id="2ada1bfe0d1c55b5a14f5e36e865a508e5ad99b9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) and vertical bar (&amp;lsquo;</source>
          <target state="translated">'）および垂直バー（'</target>
        </trans-unit>
        <trans-unit id="cf7faa6c926c99c331f466fc7b4b1f1d2704a06d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) appear in the initial text. See &lt;a href=&quot;output-functions#Output-Functions&quot;&gt;Output Functions&lt;/a&gt;.</source>
          <target state="translated">'）最初のテキストに表示されます。&lt;a href=&quot;output-functions#Output-Functions&quot;&gt;出力関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2800e5bb9addb48d806259a356ab0b37f0e70aac" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) are classified as parenthesis characters.</source>
          <target state="translated">'）は括弧文字として分類されます。</target>
        </trans-unit>
        <trans-unit id="78f9cd2346b7b1ce84f10f6fd3a54ef3e0d424cf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) are displayed literally.</source>
          <target state="translated">'）は文字通り表示されます。</target>
        </trans-unit>
        <trans-unit id="931214108d5e53d40be3e5d25484a201dc23a13d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) are not allowed.</source>
          <target state="translated">'）は許可されていません。</target>
        </trans-unit>
        <trans-unit id="2c8e411a8187dfcd8b71e94b6a457693ecbef587" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) are padded by inserting spaces to the left, and others are padded by inserting spaces to the right.</source>
          <target state="translated">'）は左側にスペースを挿入してパディングされ、その他は右側にスペースを挿入してパディングされます。</target>
        </trans-unit>
        <trans-unit id="1af826b0f40b6e66bce5f2a9e3434acf5f668219" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) construct.</source>
          <target state="translated">'）構築します。</target>
        </trans-unit>
        <trans-unit id="e01512635ee43516d8a9a6f84df5ac449ae9a89b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) followed by a Lisp object (in read syntax) expands to a list whose first element is &lt;code&gt;quote&lt;/code&gt;, and whose second element is the object. Thus, the read syntax &lt;code&gt;'x&lt;/code&gt; is an abbreviation for &lt;code&gt;(quote x)&lt;/code&gt;.</source>
          <target state="translated">'）の後にLispオブジェクト（読み取り構文）が続くと、最初の要素が &lt;code&gt;quote&lt;/code&gt; であり、2番目の要素がオブジェクトであるリストに展開されます。したがって、読み取り構文 &lt;code&gt;'x&lt;/code&gt; は &lt;code&gt;(quote x)&lt;/code&gt; の省略形です。</target>
        </trans-unit>
        <trans-unit id="81c18dfbc171088b2b6ef88343851dc479e755be" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) for character constants.</source>
          <target state="translated">'）文字定数の場合。</target>
        </trans-unit>
        <trans-unit id="cecad4099033a0ad51cd07d2347dbbb6c0ce9e76" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) giving details of the problem, but it still loads the file, just leaving the macro unexpanded for now. You may wish to restructure your code so that this does not happen. Loading a compiled file does not cause macroexpansion, because this should already have happened during compilation. See &lt;a href=&quot;compiling-macros#Compiling-Macros&quot;&gt;Compiling Macros&lt;/a&gt;.</source>
          <target state="translated">'）問題の詳細を示しますが、それでもファイルをロードし、今のところマクロを展開しないままにします。これが起こらないようにコードを再構築することをお勧めします。コンパイルされたファイルをロードしても、マクロ展開は発生しません。これは、コンパイル中にすでに発生しているはずだからです。&lt;a href=&quot;compiling-macros#Compiling-Macros&quot;&gt;マクロのコンパイルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="02920b936c56fa09eafc2216e90457438e7d80d3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) in string constants. &lt;strong&gt;But beware:&lt;/strong&gt; If a string constant contains hexadecimal or octal escape sequences, and these escape sequences all specify unibyte characters (i.e., less than 256), and there are no other literal non-</source>
          <target state="translated">'）文字列定数。&lt;strong&gt;ただし、注意してください。&lt;/strong&gt;文字列定数に16進数または8進数のエスケープシーケンスが含まれ、これらのエスケープシーケンスがすべてユニバイト文字（つまり、256未満）を指定し、他のリテラル以外のエスケープシーケンスがない場合</target>
        </trans-unit>
        <trans-unit id="987b209fdd9adaebcb5b4a5b49ff6f61599ef78d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) in the Lisp name changed to underscores. Thus, to call this function from C code, call &lt;code&gt;For&lt;/code&gt;.</source>
          <target state="translated">'）Lisp名のアンダースコアに変更されました。したがって、Cコードからこの関数を呼び出すには、 &lt;code&gt;For&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="75d850c0c734aa54116da42de8824fc37d47a4f3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) is a possible auto-save file name. The argument &lt;var&gt;filename&lt;/var&gt; should not contain a directory part.</source>
          <target state="translated">'）は可能な自動保存ファイル名です。引数 &lt;var&gt;filename&lt;/var&gt; には、ディレクトリ部分を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="97b718479f7fd7010058e75501f9fa1c3631cc0e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) is called a &lt;em&gt;keyword symbol&lt;/em&gt;. These symbols automatically act as constants, and are normally used only by comparing an unknown symbol with a few specific alternatives. See &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;.</source>
          <target state="translated">'）は&lt;em&gt;キーワードシンボル&lt;/em&gt;と呼ばれます。これらの記号は自動的に定数として機能し、通常、未知の記号をいくつかの特定の選択肢と比較することによってのみ使用されます。&lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;定数変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c2b25303342f57c6c6903103e99e6483a2f0a9a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) or Sun Audio format (&amp;lsquo;</source>
          <target state="translated">'）またはSun Audio形式（'</target>
        </trans-unit>
        <trans-unit id="a83f19522fffcb3424e00f18f018e94dea0f1964" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) precede the number and its exponent. For example, &amp;lsquo;</source>
          <target state="translated">'）数値とその指数の前に置きます。例えば、 '</target>
        </trans-unit>
        <trans-unit id="5ee82abd247c66071157e10ad5962c65fc2b9921" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) prepended and appended to it. This function does not look at the variable &lt;code&gt;auto-save-visited-file-name&lt;/code&gt; (described below); callers of this function should check that variable first.</source>
          <target state="translated">'）先頭に追加されます。この関数は、変数 &lt;code&gt;auto-save-visited-file-name&lt;/code&gt; （以下で説明）を調べません。この関数の呼び出し元は、最初にその変数を確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="5f36439a1c90c1192fe619d7430e206cee219956" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) says not to load an init file, while &amp;lsquo;</source>
          <target state="translated">'）initファイルをロードしないように指示します。</target>
        </trans-unit>
        <trans-unit id="7906464c78490eb7dbe4bd8093d5cc632a6472fd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) starts a comment and a newline or formfeed ends one.</source>
          <target state="translated">'）コメントを開始し、改行またはフォームフィードでコメントを終了します。</target>
        </trans-unit>
        <trans-unit id="c380a929b0fbfed7b21f8789cf9ae5ca36d9d257" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) starts a comment if it is not within a string or character constant. The comment continues to the end of line. The Lisp reader discards comments; they do not become part of the Lisp objects which represent the program within the Lisp system.</source>
          <target state="translated">'）文字列または文字定数内にない場合、コメントを開始します。コメントは行末まで続きます。Lispリーダーはコメントを破棄します。それらは、Lispシステム内のプログラムを表すLispオブジェクトの一部にはなりません。</target>
        </trans-unit>
        <trans-unit id="09c9c375c40df32852a4f0b042c06198acffb6a1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) syntax class, i.e., their syntax is inherited from the parent table (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">'）構文クラス、つまり、それらの構文は親テーブルから継承されます（&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;構文クラステーブルを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="a1a860c4f51fc8563b1f5c3aa5bd30c702e9a489" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), &lt;em&gt;and&lt;/em&gt; the first character of an end-of-comment sequence (&amp;lsquo;</source>
          <target state="translated">'）、&lt;em&gt;および&lt;/em&gt;コメント終了シーケンスの最初の文字（'</target>
        </trans-unit>
        <trans-unit id="12a83d6043ae77e6e82f05af392f54c31c8ab6c8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), Emacs loads neither your personal init file nor the default init file.</source>
          <target state="translated">'）、Emacsは個人のinitファイルもデフォルトのinitファイルもロードしません。</target>
        </trans-unit>
        <trans-unit id="2712fe912516b58ce3ff3a54d553d11f2d5445df" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), and it introduces additional special constructs.</source>
          <target state="translated">'）、そしてそれは追加の特別な構造を導入します。</target>
        </trans-unit>
        <trans-unit id="696d805df02402823ccdf3dbec1f088c9ba9e7cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), and the beginning of the match for the first subexpression is at the 13th character (&amp;lsquo;</source>
          <target state="translated">'）、および最初の部分式の一致の開始は13番目の文字（'</target>
        </trans-unit>
        <trans-unit id="20f9978ffd20367da06832b5ae6815a656dd5e8b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), but the details of punctuation and spacing are ignored (searching for &amp;lsquo;</source>
          <target state="translated">'）、ただし句読点と間隔の詳細は無視されます（'を検索</target>
        </trans-unit>
        <trans-unit id="2ad724ed78c0e49fcedc4d8192e444887bed5945" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), if it is interned in the standard obarray, except that setting such a symbol to itself is not an error.</source>
          <target state="translated">'）、そのようなシンボルをそれ自体に設定することはエラーではないことを除いて、それが標準のobarrayにインターンされている場合。</target>
        </trans-unit>
        <trans-unit id="f4cf90ef77d63a806d05ebfb8c742c0bf1f612a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), it is equivalent to &amp;lsquo;</source>
          <target state="translated">'）、それは'と同等です</target>
        </trans-unit>
        <trans-unit id="0ab41b38ca3d0aedf8f77be90d90ea12636c2a97" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), only the last match is recorded.</source>
          <target state="translated">'）、最後の一致のみが記録されます。</target>
        </trans-unit>
        <trans-unit id="3914d7be43e2aee9e83e3f25009f8e3873162599" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), or that greatly changes the meaning of other text, like &amp;lsquo;</source>
          <target state="translated">'）、または'のように他のテキストの意味を大きく変える</target>
        </trans-unit>
        <trans-unit id="b8e60e2943d58c82fbc8007f162c814565dc4f7f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), plus those listed in &lt;code&gt;unload-feature-special-hooks&lt;/code&gt;, as well as &lt;code&gt;auto-mode-alist&lt;/code&gt;. This is to prevent Emacs from ceasing to function because important hooks refer to functions that are no longer defined.</source>
          <target state="translated">'）に加えて、 &lt;code&gt;unload-feature-special-hooks&lt;/code&gt; 、および &lt;code&gt;auto-mode-alist&lt;/code&gt; にリストされているもの。これは、重要なフックが定義されなくなった関数を参照するため、Emacsが機能しなくなるのを防ぐためです。</target>
        </trans-unit>
        <trans-unit id="c39c40dc54d95f8b4b6097b9b9a4cb0c4e740d4a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), the precision specifies how many digits following the decimal point to show; if zero, the decimal-point itself is also omitted. For &amp;lsquo;</source>
          <target state="translated">'）、精度は、表示する小数点以下の桁数を指定します。ゼロの場合、小数点自体も省略されます。ために '</target>
        </trans-unit>
        <trans-unit id="b1384fe0c31b5149aeb485dfa12fc6e40b1ee80a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;).</source>
          <target state="translated">&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="8bbc3578566c634244844e6b969bb2dcb2e59fb9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). &amp;lsquo;</source>
          <target state="translated">'）。'</target>
        </trans-unit>
        <trans-unit id="af979cb0d0cd64b722f99465069129a2fe26eb1c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). &lt;code&gt;cat&lt;/code&gt; copies its standard input into its standard output. Since the argument &lt;var&gt;destination&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this output is inserted in the current buffer.</source>
          <target state="translated">'）。 &lt;code&gt;cat&lt;/code&gt; は、標準入力を標準出力にコピーします。引数の &lt;var&gt;destination&lt;/var&gt; は &lt;code&gt;t&lt;/code&gt; であるため、この出力は現在のバッファーに挿入されます。</target>
        </trans-unit>
        <trans-unit id="c68dc4ae0e6d986a71bfd6c3643e5ebbf09caa5c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). But if &lt;var&gt;missing-ok&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;load&lt;/code&gt; just returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">'）。ただし、 &lt;var&gt;missing-ok&lt;/var&gt; が &lt;code&gt;nil&lt;/code&gt; 以外の場合、 &lt;code&gt;load&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返すだけです。</target>
        </trans-unit>
        <trans-unit id="2df7b5be0531fd3efcf2cb272072aa67c6d72f64" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). Each release of a package should be accompanied by an increase in the version number so that it will be recognized as an upgrade by users querying the package archive.</source>
          <target state="translated">'）。パッケージのリリースごとにバージョン番号を増やして、パッケージアーカイブを照会するユーザーがアップグレードとして認識できるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="166adf5b7c951505c700cfe06cfcbe8dc77781d7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). On graphical terminals, Emacs by default uses curved arrows in the fringes to indicate continuation, so the display table has no effect, unless you disable the fringes.</source>
          <target state="translated">'）。グラフィカル端末では、Emacsはデフォルトでフリンジの曲線矢印を使用して継続を示しているため、フリンジを無効にしない限り、表示テーブルは効果がありません。</target>
        </trans-unit>
        <trans-unit id="cd3fbf018437e03b91c00df93322bbfedd9db447" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). See &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;.</source>
          <target state="translated">'）。&lt;a href=&quot;display-tables#Display-Tables&quot;&gt;表示テーブルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a8b5aa9d187a754060e77c13a362bd9254fff14a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). See &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;. On graphical terminals, Emacs by default uses arrows in the fringes to indicate truncation, so the display table has no effect, unless you disable the fringes (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fringes.html#Fringes&quot;&gt;Window Fringes&lt;/a&gt; in</source>
          <target state="translated">'）。&lt;a href=&quot;glyphs#Glyphs&quot;&gt;グリフを&lt;/a&gt;参照してください。グラフィカル端末では、Emacsはデフォルトでフリンジの矢印を使用して切り捨てを示しているため、フリンジを無効にしない限り、表示テーブルは効果がありません（の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fringes.html#Fringes&quot;&gt;ウィンドウフリンジ&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="b4be67c5b758ddc02a3f5b61b51d03830715efde" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). See &lt;a href=&quot;motion-and-syntax#Motion-and-Syntax&quot;&gt;Motion and Syntax&lt;/a&gt;.</source>
          <target state="translated">'）。&lt;a href=&quot;motion-and-syntax#Motion-and-Syntax&quot;&gt;モーションと構文を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d08c021839e737438272feaca72be14f215533bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). See &lt;a href=&quot;selective-display#Selective-Display&quot;&gt;Selective Display&lt;/a&gt;.</source>
          <target state="translated">'）。&lt;a href=&quot;selective-display#Selective-Display&quot;&gt;選択的表示を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="75fb6e2a921debc251db3b6545a4b259d2b1c0e8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). See &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;. This currently has effect only on text terminals; on graphical terminals, if vertical scroll bars are supported and in use, a scroll bar separates the two windows, and if there are no vertical scroll bars and no dividers (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;), Emacs uses a thin line to indicate the border.</source>
          <target state="translated">'）。&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Windowsの分割を&lt;/a&gt;参照してください。これは現在、テキスト端末にのみ影響します。グラフィカル端末では、垂直スクロールバーがサポートされて使用されている場合、スクロールバーが2つのウィンドウを分離し、垂直スクロールバーと仕切りがない場合（&lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;ウィンドウ&lt;/a&gt;の仕切りを参照）、Emacsは細い線を使用して境界を示します。</target>
        </trans-unit>
        <trans-unit id="6a5f2f12c8721402eaa23c5ff209cbfc17f6b805" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). The flags &amp;lsquo;</source>
          <target state="translated">'）。フラグ '</target>
        </trans-unit>
        <trans-unit id="77355f92ca528b086526811e4049b496417dee45" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). This can interfere with code that requires ordinary</source>
          <target state="translated">'）。これは、通常を必要とするコードに干渉する可能性があります</target>
        </trans-unit>
        <trans-unit id="71c1842324fb68dbb3b18a8929f8297c9e75db86" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). This is usually also the symbol prefix used in the program (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Coding-Conventions.html#Coding-Conventions&quot;&gt;Coding Conventions&lt;/a&gt;).</source>
          <target state="translated">'）。これは通常、プログラムで使用される記号プレフィックスでもあります（&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Coding-Conventions.html#Coding-Conventions&quot;&gt;コーディング規約を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="5ccb7c25efe30fe61d3171bc5a486229d7216da1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;); a space specifies that there is no matching character. Then come characters specifying additional syntax properties (see &lt;a href=&quot;syntax-flags#Syntax-Flags&quot;&gt;Syntax Flags&lt;/a&gt;).</source>
          <target state="translated">'）; スペースは、一致する文字がないことを指定します。次に、追加の構文プロパティを指定する文字が表示されます（&lt;a href=&quot;syntax-flags#Syntax-Flags&quot;&gt;構文フラグを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="244db31c10b5706b3c258bf53be68945f3f34895" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;); e.g., the</source>
          <target state="translated">'）; 例：</target>
        </trans-unit>
        <trans-unit id="d9b93a89ea96064978297ef1411940f8df5fe34b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;,</source>
          <target state="translated">&amp;rsquo;,</target>
        </trans-unit>
        <trans-unit id="5539094fa0b03be2ecf5d76b2f76c3ceb8adb603" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, &amp;lsquo;</source>
          <target state="translated">「、」</target>
        </trans-unit>
        <trans-unit id="df3e9f4ba8549a3d06de0749585f0e61d7ccf284" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, &lt;code&gt;nil&lt;/code&gt; if the user types &amp;lsquo;</source>
          <target state="translated">'、ユーザーが入力した場合は &lt;code&gt;nil&lt;/code&gt; '</target>
        </trans-unit>
        <trans-unit id="27acaac084b979f3b1b97668327c9bc00d6cf94f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, &lt;code&gt;read-event&lt;/code&gt; does not display any message to indicate it is waiting for input; instead, it prompts by echoing: it displays descriptions of the events that led to or were read by the current command. See &lt;a href=&quot;the-echo-area#The-Echo-Area&quot;&gt;The Echo Area&lt;/a&gt;.</source>
          <target state="translated">'、 &lt;code&gt;read-event&lt;/code&gt; は、入力を待機していることを示すメッセージを表示しません。代わりに、エコーによってプロンプトが表示されます。現在のコマンドにつながった、または現在のコマンドによって読み取られたイベントの説明が表示されます。&lt;a href=&quot;the-echo-area#The-Echo-Area&quot;&gt;エコーエリアを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="23b792ae62caef6b854c659a112519dd81079931" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, Lisp syntax requires you to quote each &amp;lsquo;</source>
          <target state="translated">'、Lisp構文ではそれぞれを引用する必要があります'</target>
        </trans-unit>
        <trans-unit id="b4a59f9e4b8f8dbbb0e60397aaedd8e3ed369857" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, a descriptive string (typically the type name followed by the name of the object), and a closing &amp;lsquo;</source>
          <target state="translated">'、説明文字列（通常、タイプ名の後にオブジェクトの名前が続く）、および終了'</target>
        </trans-unit>
        <trans-unit id="2a9f3a0f3fc8dbfd78260be83e1a0118520974b9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, a meta character turns into a string starting with &amp;lsquo;</source>
          <target state="translated">'、メタ文字は'で始まる文字列に変わります</target>
        </trans-unit>
        <trans-unit id="097e5ed2eff306899394e192af415539f6c697b1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, add to &lt;code&gt;initial-frame-alist&lt;/code&gt;; the others add to &lt;code&gt;default-frame-alist&lt;/code&gt;. see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Invocation.html#Emacs-Invocation&quot;&gt;Command Line Arguments for Emacs Invocation&lt;/a&gt; in</source>
          <target state="translated">'、 &lt;code&gt;initial-frame-alist&lt;/code&gt; に追加; その他は &lt;code&gt;default-frame-alist&lt;/code&gt; に追加します。参照&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Invocation.html#Emacs-Invocation&quot;&gt;Emacsの起動のためのコマンドライン引数を&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="0ba94342316333b349754d7726774e8ca376b951" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, after which we are in a character alternative; &amp;lsquo;</source>
          <target state="translated">'、その後、文字の代替になります。'</target>
        </trans-unit>
        <trans-unit id="b4c2b924dddb74784fdc00cbc01bb9d353155e30" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and &amp;lsquo;</source>
          <target state="translated">「および」</target>
        </trans-unit>
        <trans-unit id="7507c3107d93398f1a3a42efd8facb7f4eefb5bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and &lt;code&gt;^&lt;/code&gt; together; the order does not matter. Actual reading of arguments is controlled by the rest of the prompt string (starting with the first character that is not &amp;lsquo;</source>
          <target state="translated">'、および &lt;code&gt;^&lt;/code&gt; 一緒に; 順序は関係ありません。引数の実際の読み取りは、プロンプト文字列の残りの部分（ 'ではない最初の文字で始まる）によって制御されます。</target>
        </trans-unit>
        <trans-unit id="4600a372b88397972a67a000d46a8d5d0d5b556f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and all of them begin with the word &amp;lsquo;</source>
          <target state="translated">'、そしてそれらのすべては単語'で始まります</target>
        </trans-unit>
        <trans-unit id="c464e6c66edda8293effb3ee2951104596116a54" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and exists for compatibility, so that you could pass it to functions that expect a display name.</source>
          <target state="translated">'、および互換性のために存在するため、表示名を期待する関数に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="f7e6a0f2ddcdbb0932b97022122ad3be50874d2b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and if both flags are used, &amp;lsquo;</source>
          <target state="translated">'、および両方のフラグが使用されている場合、'</target>
        </trans-unit>
        <trans-unit id="3f48614723a7e93ea40757016784be77dd496780" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and it cannot be changed. Minibuffers are displayed only in special windows used only for minibuffers; these windows always appear at the bottom of a frame. (Sometimes frames have no minibuffer window, and sometimes a special kind of frame contains nothing but a minibuffer window; see &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;.)</source>
          <target state="translated">'、および変更することはできません。ミニバッファは、ミニバッファ専用の特別なウィンドウにのみ表示されます。これらのウィンドウは常にフレームの下部に表示されます。（フレームにミニ&lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;バッファー&lt;/a&gt;ウィンドウがない場合もあれば、特別な種類のフレームにミニバッファーウィンドウしか含まれていない場合もあります。ミニバッファーとフレームを参照してください。）</target>
        </trans-unit>
        <trans-unit id="5083f0a9380e592d4d3feb9b9eff708af9c2f377" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and it makes no difference if there are trailing spaces in the preceding line.</source>
          <target state="translated">'であり、前の行に末尾のスペースがある場合でも違いはありません。</target>
        </trans-unit>
        <trans-unit id="5e8c4b2f52bb7a282a1eab0f72359c044de4182a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and likewise for each set of equivalent characters.)</source>
          <target state="translated">'、および同様に同等の文字の各セットに対して。）</target>
        </trans-unit>
        <trans-unit id="b07014d84e3e4b2451b512c382577e06fef80aea" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and nothing else. &amp;lsquo;</source>
          <target state="translated">'、 何もありません。'</target>
        </trans-unit>
        <trans-unit id="e59d6865633c50fce2fae557747a34250af5da84" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and puts the value in the list structure:</source>
          <target state="translated">'、そしてリスト構造に値を置きます：</target>
        </trans-unit>
        <trans-unit id="5f5edae4aa262f2bc5176fcfb06ee918cbf5ce15" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and reading that text produces a list (but not the same list) with elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">'、そしてそのテキストを読むと、要素 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; を持つリスト（同じリストではない）が生成されます。</target>
        </trans-unit>
        <trans-unit id="399c4fe374d27da23ed459e3f0b74183918742fc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and reading that text returns the symbol &lt;code&gt;foo&lt;/code&gt;. Printing a list whose elements are &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; produces the text &amp;lsquo;</source>
          <target state="translated">'、そしてそのテキストを読むと記号 &lt;code&gt;foo&lt;/code&gt; が返されます。要素が &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; であるリストを印刷すると、テキスト 'が生成されます。</target>
        </trans-unit>
        <trans-unit id="162c4fa7cd580fb02ea9b7ec21a851a124045518" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and repeats the request.</source>
          <target state="translated">'、および要求を繰り返します。</target>
        </trans-unit>
        <trans-unit id="21e26494476ef1b6fb7e594c6bd540333f1a5ef7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and searching for subsequent instances of &amp;lsquo;</source>
          <target state="translated">'、および'の後続のインスタンスの検索</target>
        </trans-unit>
        <trans-unit id="361c5abac6e6f661cfe4930a08d506bfa694cec7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and so on). For making key bindings with &lt;code&gt;define-key&lt;/code&gt;, you can use lists such as &lt;code&gt;(control hyper ?x)&lt;/code&gt; to specify the characters (see &lt;a href=&quot;changing-key-bindings#Changing-Key-Bindings&quot;&gt;Changing Key Bindings&lt;/a&gt;). The function &lt;code&gt;event-convert-list&lt;/code&gt; converts such a list into an event type (see &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;).</source>
          <target state="translated">'、 等々）。 &lt;code&gt;define-key&lt;/code&gt; を使用してキーバインディングを作成するには、 &lt;code&gt;(control hyper ?x)&lt;/code&gt; などのリストを使用して文字を指定できます（&lt;a href=&quot;changing-key-bindings#Changing-Key-Bindings&quot;&gt;キーバインディングの変更を&lt;/a&gt;参照）。関数 &lt;code&gt;event-convert-list&lt;/code&gt; は、そのようなリストをイベントタイプに変換します（&lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;イベントの分類を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="609fd798d1c7d9d0fb0f69d017ef98b2923d946f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and so on.</source>
          <target state="translated">'、 等々。</target>
        </trans-unit>
        <trans-unit id="60588d4161391aeb0b298e91356209936039bdf9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and space, tab, etc., appear as &amp;lsquo;</source>
          <target state="translated">'、およびスペース、タブなどは'として表示されます</target>
        </trans-unit>
        <trans-unit id="ba27f2dc083575807a9e85e1ed54fe7135c4dc45" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the &amp;lsquo;</source>
          <target state="translated">'、 そしてその '</target>
        </trans-unit>
        <trans-unit id="96f154f55463581317f08eea3fb8ece521806d67" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the class is &amp;lsquo;</source>
          <target state="translated">'、およびクラスは'</target>
        </trans-unit>
        <trans-unit id="d2934060178bab17730e6827836cad89feebedb4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the constructs &amp;lsquo;</source>
          <target state="translated">'、および構成'</target>
        </trans-unit>
        <trans-unit id="b46d0e4b793605bbcac0948eee13618b319d26f7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the hexadecimal character code. Thus, &amp;lsquo;</source>
          <target state="translated">'、および16進文字コード。したがって、 '</target>
        </trans-unit>
        <trans-unit id="840b77e202945e4e26604678ce01e934d3fd90b0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the others are digit characters representing the character code in octal. (A display table can specify a glyph to use instead of &amp;lsquo;</source>
          <target state="translated">'、およびその他は、8進数で文字コードを表す数字です。（表示テーブルでは、 'の代わりに使用するグリフを指定できます</target>
        </trans-unit>
        <trans-unit id="5c978fbc7c65257c70271e3e92fca193c622a393" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the second is &amp;lsquo;</source>
          <target state="translated">'、そして2番目は'</target>
        </trans-unit>
        <trans-unit id="e468f3e68cca32638e6fb4d51f350ded372d26d2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and then provides assistance in finding out what the key bindings are, and what the mode is intended for. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">'、次に、キーバインディングが何であるか、およびモードが何を目的としているかを見つけるのに役立ちます。 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5c4de5bb8974d13b31c30bf5f6ffb705f73c4f51" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and then types</source>
          <target state="translated">'、次にタイプ</target>
        </trans-unit>
        <trans-unit id="2d18e8834f14830b4930260bc33e5f18af73b427" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and to format just nonnegative integers you can also use &amp;lsquo;</source>
          <target state="translated">'、および非負の整数のみをフォーマットするには、'も使用できます。</target>
        </trans-unit>
        <trans-unit id="259481542e2ccfb8e2e8bed8c7792c4b1741ba41" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and you should add a backslash before any of the characters &amp;lsquo;</source>
          <target state="translated">'、および文字の前に円記号を追加する必要があります'</target>
        </trans-unit>
        <trans-unit id="d84d4b31b0a62a2e0f01a16d5313bb486905f729" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, any edits previously made in the buffer are lost.</source>
          <target state="translated">'、以前にバッファで行われた編集はすべて失われます。</target>
        </trans-unit>
        <trans-unit id="3862e086cc3fbd5e98336c0827d406317d7d8075" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, applied to that same string, matches just &amp;lsquo;</source>
          <target state="translated">'、同じ文字列に適用され、'に一致します</target>
        </trans-unit>
        <trans-unit id="2ded37fdb7807cd0b2a20bd5c7f09731bf81070a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, are interpreted as usual in &lt;code&gt;exec-path&lt;/code&gt;, but environment variable substitutions (&amp;lsquo;</source>
          <target state="translated">'、 &lt;code&gt;exec-path&lt;/code&gt; では通常どおりに解釈されますが、環境変数の置換（'</target>
        </trans-unit>
        <trans-unit id="3e4d4715755215a66d86ca37f92ade06fae4b47f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, are not hardwired, and are specified by the keymap &lt;code&gt;query-replace-map&lt;/code&gt; (see &lt;a href=&quot;search-and-replace#Search-and-Replace&quot;&gt;Search and Replace&lt;/a&gt;). In particular, if the user enters the special responses &lt;code&gt;recenter&lt;/code&gt;, &lt;code&gt;scroll-up&lt;/code&gt;, &lt;code&gt;scroll-down&lt;/code&gt;, &lt;code&gt;scroll-other-window&lt;/code&gt;, or &lt;code&gt;scroll-other-window-down&lt;/code&gt; (respectively bound to</source>
          <target state="translated">'はハードワイヤードではなく、キーマップ &lt;code&gt;query-replace-map&lt;/code&gt; によって指定されます（&lt;a href=&quot;search-and-replace#Search-and-Replace&quot;&gt;検索と置換を&lt;/a&gt;参照）。特に、ユーザーが特別な応答を &lt;code&gt;recenter&lt;/code&gt; 入力した場合、 &lt;code&gt;scroll-up&lt;/code&gt; 、 &lt;code&gt;scroll-down&lt;/code&gt; 、 &lt;code&gt;scroll-other-window&lt;/code&gt; 、または &lt;code&gt;scroll-other-window-down&lt;/code&gt; （それぞれにバインドされます）</target>
        </trans-unit>
        <trans-unit id="9dd84280385d00bd2b1ee68b082b112bdc0fd428" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, as appropriate.</source>
          <target state="translated">'、 適切に。</target>
        </trans-unit>
        <trans-unit id="dd6a2805f2f963b0be3ba8b33bfea7dbaf2bae7a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, as well as non-</source>
          <target state="translated">'、および非</target>
        </trans-unit>
        <trans-unit id="cf71817d582852c22bf34174bab7285f97e98138" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, because the first alternative matches &amp;lsquo;</source>
          <target state="translated">'、最初の選択肢が一致するため'</target>
        </trans-unit>
        <trans-unit id="a5eeb7e27e20f7c95143b3f5f98bd9accad35990" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, because this does not make the result shorter on many systems.</source>
          <target state="translated">'、これは多くのシステムで結果を短くしないためです。</target>
        </trans-unit>
        <trans-unit id="e7319ec80359dd64367acbbf52a52abc5b0ac7ac" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, before the first process finishes. Then it finishes, and a message to that effect is inserted in the buffer. Much later, the first process finishes, and another message is inserted in the buffer for it.</source>
          <target state="translated">'、最初のプロセスが終了する前。その後、終了し、その旨のメッセージがバッファに挿入されます。ずっと後に、最初のプロセスが終了し、別のメッセージがそのバッファに挿入されます。</target>
        </trans-unit>
        <trans-unit id="62687524905fd3217ebef6a7f3a08f508131933b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but does not match &amp;lsquo;</source>
          <target state="translated">'、しかし一致しない'</target>
        </trans-unit>
        <trans-unit id="c52ad5539e65fef0eeef4cf635e079ab241e2ec1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but doesn&amp;rsquo;t trigger the debugger, like &amp;lsquo;</source>
          <target state="translated">'ですが、'のようにデバッガーをトリガーしません</target>
        </trans-unit>
        <trans-unit id="5f09cbf589014435dbb7b986c44c06fb63bbac75" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but if the documentation string is more than one line, add a button to control whether to show all of it or just the first line.</source>
          <target state="translated">'ただし、ドキュメント文字列が複数行の場合は、すべてを表示するか、最初の行だけを表示するかを制御するボタンを追加します。</target>
        </trans-unit>
        <trans-unit id="7ceba937bfc9a96b6a099111312d4ae79763a04d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but including the end-of-line format.</source>
          <target state="translated">'が、行末形式を含みます。</target>
        </trans-unit>
        <trans-unit id="859b879cb4a6f1a71cb6973d20358a673fa9d9ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but it does match a &lt;em&gt;part&lt;/em&gt; of that string.) Likewise, &amp;lsquo;</source>
          <target state="translated">'ですが、その文字列の&lt;em&gt;一部&lt;/em&gt;と一致します。）同様に、'</target>
        </trans-unit>
        <trans-unit id="e7b9f80d7801c176927afa59dcd8c02d42b70f17" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but not in all, so no more than &amp;lsquo;</source>
          <target state="translated">'、しかし全部ではないので、'</target>
        </trans-unit>
        <trans-unit id="0142711131c20a9b6c8bfc476c54fc1f255841b5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but the size is printed in a more readable way by using &amp;lsquo;</source>
          <target state="translated">'が、サイズは'を使用してより読みやすい方法で印刷されます</target>
        </trans-unit>
        <trans-unit id="87d19d6b140356263751c838f6a12d58195bff82" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but this need not be the case. An ordinary element of the alist looks like &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; .  &lt;var&gt;mode-function&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">'、しかしこれはそうである必要はありません。連想リストの通常の要素は次のようになります &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;mode-function&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bc318f345b18ef1218daf8d3548ccfa3e2fe847" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but used when bootstrapping Emacs with the &lt;code&gt;unexec&lt;/code&gt; method.</source>
          <target state="translated">'が、 &lt;code&gt;unexec&lt;/code&gt; メソッドでEmacsをブートストラップするときに使用されます。</target>
        </trans-unit>
        <trans-unit id="dda3dbfad9ce80bdcd98c7d7577e074881ef817a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but used while &lt;em&gt;bootstrapping&lt;/em&gt; Emacs, when no previous Emacs binary and no</source>
          <target state="translated">」しかしながら使用&lt;em&gt;ブートストラップ&lt;/em&gt;Emacsに、以前のEmacsのバイナリとノーを</target>
        </trans-unit>
        <trans-unit id="6edf9c6e42cb1b8af0583036aa2a27ff0ea91717" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, calling &lt;code&gt;replace-match&lt;/code&gt; with 1 as &lt;var&gt;subexp&lt;/var&gt; means to replace just the text that matched &amp;lsquo;</source>
          <target state="translated">'、 &lt;var&gt;subexp&lt;/var&gt; として &lt;code&gt;replace-match&lt;/code&gt; を1と呼ぶと、一致したテキストだけを置き換えることを意味します'</target>
        </trans-unit>
        <trans-unit id="4c61544a2ca1c94566789e3f17496259ce0ca65d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, contains &lt;code&gt;control&lt;/code&gt;, even though reading such an event via &lt;code&gt;read-char&lt;/code&gt; will return the value 1 with the control modifier bit removed.</source>
          <target state="translated">'、は &lt;code&gt;control&lt;/code&gt; 含みますが、 &lt;code&gt;read-char&lt;/code&gt; を介してそのようなイベントを読み取ると、制御修飾子ビットが削除された値1が返されます。</target>
        </trans-unit>
        <trans-unit id="26718c8e3e230761411b4e6694bd329645c493d6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, does not have the &amp;lsquo;</source>
          <target state="translated">'、'がありません</target>
        </trans-unit>
        <trans-unit id="7f3284e26aa04e7ac21bbc46bc429686b975f1ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, e.g. use &amp;lsquo;</source>
          <target state="translated">'、例えば使用'</target>
        </trans-unit>
        <trans-unit id="33d5eb9b39c7958f64baa156603face69d362adc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, e.g., &lt;code&gt;bury-buffer-internal&lt;/code&gt;. Emacs code contributed before 2018 may follow other internal-use naming conventions, which are being phased out.</source>
          <target state="translated">'、例えば、 &lt;code&gt;bury-buffer-internal&lt;/code&gt; 。2018年より前に提供されたEmacsコードは、段階的に廃止されている他の内部使用の命名規則に従う可能性があります。</target>
        </trans-unit>
        <trans-unit id="5899fa884bf6a23ef37e4ff79b3a5d5a62adf694" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc.</source>
          <target state="translated">'など</target>
        </trans-unit>
        <trans-unit id="4b72eac989215486a1a51108725f3a7d0efc53ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc. A function key symbol appears inside angle brackets &amp;lsquo;</source>
          <target state="translated">'など。ファンクションキー記号は山括弧内に表示されます'</target>
        </trans-unit>
        <trans-unit id="5b75f27279a8328cc1ea5e9c24e09f83535108b7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc.) are not recognized; use &lt;code&gt;substitute-in-file-name&lt;/code&gt; to perform them (see &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;). &lt;code&gt;nil&lt;/code&gt; in this list refers to &lt;code&gt;default-directory&lt;/code&gt;.</source>
          <target state="translated">'など）は認識されません。使用 &lt;code&gt;substitute-in-file-name&lt;/code&gt; （参照、それらを実行するために&lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;、ファイル名の展開を&lt;/a&gt;）。このリストの &lt;code&gt;nil&lt;/code&gt; は、 &lt;code&gt;default-directory&lt;/code&gt; を指します。</target>
        </trans-unit>
        <trans-unit id="7813427aade80c1314ac6927d6793b1321a0a1e9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc.) has been modified most recently.</source>
          <target state="translated">'など）は最近変更されました。</target>
        </trans-unit>
        <trans-unit id="a44d89b0939008a6b5d0726a80bd725ce696b317" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc.) to be unique.</source>
          <target state="translated">'など）ユニークにする。</target>
        </trans-unit>
        <trans-unit id="3471a058ca997cbc925d62756d5891f72374258b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc., are allowed; use</source>
          <target state="translated">'などが許可されます。使用する</target>
        </trans-unit>
        <trans-unit id="b0eff0a73f03d758217829a28766d07feef2eaf1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc., with any number (zero or more) of &amp;lsquo;</source>
          <target state="translated">'など、任意の数（0個以上）の'</target>
        </trans-unit>
        <trans-unit id="72aa9b4cba8dc77e0788decce34009e8d7ff4e3f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, even in comments, and another to fontify the words &amp;lsquo;</source>
          <target state="translated">'、コメントでも、単語をフォント化するための別の'</target>
        </trans-unit>
        <trans-unit id="6cadb9c9597504f595d438bea28b6197fcf2461a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, except that it suppresses, for the last input event in the key sequence, the conversions that are normally used (when necessary) to convert an undefined key into a defined one.</source>
          <target state="translated">'ただし、キーシーケンスの最後の入力イベントで、未定義のキーを定義済みのキーに変換するために（必要な場合に）通常使用される変換を抑制します。</target>
        </trans-unit>
        <trans-unit id="b559bdf2c4948c3101eba4777f23ae665f33d458" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, followed by a literal dollar sign &amp;lsquo;</source>
          <target state="translated">'、その後に文字通りのドル記号'</target>
        </trans-unit>
        <trans-unit id="a670724dd2089632f9f5dfa64baf70a0beaec53d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, followed by the function name and argument values. A function exit record consists of &amp;lsquo;</source>
          <target state="translated">'の後に、関数名と引数の値が続きます。関数出口レコードは、 'で構成されます。</target>
        </trans-unit>
        <trans-unit id="71e626d7e00f88fbc99772a03efd0bbd3f2d6bdc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, followed by the function name and result of the function.</source>
          <target state="translated">'の後に、関数名と関数の結果が続きます。</target>
        </trans-unit>
        <trans-unit id="ef1dbf1340b0ad5e609277891c75820552596dc1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, followed by the original error message.</source>
          <target state="translated">'の後に、元のエラーメッセージが続きます。</target>
        </trans-unit>
        <trans-unit id="7cbc2be0f94402568f184a400397666ec97e5f28" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, has the &amp;lsquo;</source>
          <target state="translated">'、'があります</target>
        </trans-unit>
        <trans-unit id="a90beacfb62e7aff19d5941f65c4681b9680491f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, hyperlinks, or images. Special HTML characters must be encoded, as &amp;lsquo;</source>
          <target state="translated">'、ハイパーリンク、または画像。'のように、特別なHTML文字をエンコードする必要があります</target>
        </trans-unit>
        <trans-unit id="8ff967d1e85ab5b812b2b0a3d0719cd5dec1c057" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, if it is necessary to ensure that a postfix operator appended to it will apply to the whole expression.</source>
          <target state="translated">'、それに追加された接尾辞演算子が式全体に適用されることを確認する必要がある場合。</target>
        </trans-unit>
        <trans-unit id="42e580d8888181b0569cb8f8f481c65766ed18f5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, if necessary to ensure that a postfix operator appended to it will apply to the whole expression.</source>
          <target state="translated">'、必要に応じて、それに追加された接尾辞演算子が式全体に適用されるようにします。</target>
        </trans-unit>
        <trans-unit id="9fd91eff8d33cb0a712338a9b0255efc6b408b19" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, in which the first three characters have a &lt;code&gt;face&lt;/code&gt; property with value &lt;code&gt;bold&lt;/code&gt;, and the last three have a &lt;code&gt;face&lt;/code&gt; property with value &lt;code&gt;italic&lt;/code&gt;. (The fourth character has no text properties, so its property list is &lt;code&gt;nil&lt;/code&gt;. It is not actually necessary to mention ranges with &lt;code&gt;nil&lt;/code&gt; as the property list, since any characters not mentioned in any range will default to having no properties.)</source>
          <target state="translated">'、最初の3文字には値が &lt;code&gt;bold&lt;/code&gt; &lt;code&gt;face&lt;/code&gt; プロパティがあり、最後の3文字には値が &lt;code&gt;italic&lt;/code&gt; &lt;code&gt;face&lt;/code&gt; プロパティがあります。（4番目の文字にはテキストプロパティがないため、そのプロパティリストは &lt;code&gt;nil&lt;/code&gt; です。どの範囲にも記載されていない文字はデフォルトでプロパティがないため、プロパティリストとして &lt;code&gt;nil&lt;/code&gt; を使用して範囲を指定する必要はありません。）</target>
        </trans-unit>
        <trans-unit id="fd62f65ccd385e61ef3117c8c0554dba8febc645" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, instead of an actual whitespace character such as a tab or a space. (If you do write backslash followed by a space, you should write an extra space after the character constant to separate it from the following text.)</source>
          <target state="translated">'、タブやスペースなどの実際の空白文字の代わりに。（バックスラッシュの後にスペースを書き込む場合は、文字定数の後にスペースを追加して、次のテキストと区別する必要があります。）</target>
        </trans-unit>
        <trans-unit id="8ea7e8bd5804f3451344697353520850d00e1e77" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, interned in the standard obarray, and returns &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">'、標準のobarrayにインターンされ、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a8112eb688b9a06c9b61586ff27364c1c6d1efd3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, irrespective of where that text goes. The value returned by evaluating the form follows on a separate line with &amp;lsquo;</source>
          <target state="translated">'、そのテキストがどこに行くかに関係なく。フォームの評価によって返される値は、別の行に 'が続きます。</target>
        </trans-unit>
        <trans-unit id="557a6be7e9046670afa396beb457e3eb865089c0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, is a prefix key whose definition is the sparse keymap &lt;code&gt;(keymap (83 . center-paragraph)
(115 . foo))&lt;/code&gt;.</source>
          <target state="translated">'は、定義がスパースキーマップ &lt;code&gt;(keymap (83 . center-paragraph) (115 . foo))&lt;/code&gt; であるプレフィックスキーです。</target>
        </trans-unit>
        <trans-unit id="9c8930179e5be49afb68b72ce3dc35efd148fa1b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it adds &amp;lsquo;</source>
          <target state="translated">'、それは'を追加します</target>
        </trans-unit>
        <trans-unit id="854289abca9f8e32f3c539d916a84aba1820a429" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it always includes a decimal point, and also forces any trailing zeros after the decimal point to be left in place where they would otherwise be removed.</source>
          <target state="translated">'、常に小数点が含まれ、小数点の後の後続ゼロは、他の方法では削除される場所に強制的に残されます。</target>
        </trans-unit>
        <trans-unit id="209a2bdfe4cef518986af06a47970f2f9571e9e1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it ensures that the result begins with a &amp;lsquo;</source>
          <target state="translated">'、結果が'で始まることを保証します</target>
        </trans-unit>
        <trans-unit id="1cfc47c32f0b164cd7e9624c6d6b7ca0369854bc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it expands to your home directory, which is typically specified by the value of the &lt;code&gt;HOME&lt;/code&gt; environment variable (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/General-Variables.html#General-Variables&quot;&gt;General Variables&lt;/a&gt; in</source>
          <target state="translated">'、ホームディレクトリに展開されます。ホームディレクトリは通常、 &lt;code&gt;HOME&lt;/code&gt; 環境変数の値で指定されます（の&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/General-Variables.html#General-Variables&quot;&gt;一般変数&lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="f8eb5aeea81c17bc738eba82be2498ff2ad544ae" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it is treated as an HTTP(S) URL, and packages are downloaded from this archive via HTTP(S) (as is the case for the default GNU archive).</source>
          <target state="translated">'、HTTP（S）URLとして扱われ、パッケージはHTTP（S）を介してこのアーカイブからダウンロードされます（デフォルトのGNUアーカイブの場合と同様）。</target>
        </trans-unit>
        <trans-unit id="f19355987aea63506d06dbaef16efeea45edcce9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it prefixes nonzero results with &amp;lsquo;</source>
          <target state="translated">'、ゼロ以外の結果の前に'を付けます</target>
        </trans-unit>
        <trans-unit id="ddb0c1584f2dd17d31e5dace7a41d6aef83b9d85" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it responds by displaying these prompts, with a brief pause between them:</source>
          <target state="translated">'、これらのプロンプトを表示することで応答し、それらの間に短い一時停止があります。</target>
        </trans-unit>
        <trans-unit id="a44e87f688870f275f8756f192b14ddd8822ef3f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it signals a directory. The elements which do &lt;em&gt;not&lt;/em&gt; end in a slash will never match a directory; thus, the above value will not filter out a directory named</source>
          <target state="translated">'、ディレクトリを通知します。スラッシュで終わら&lt;em&gt;ない&lt;/em&gt;要素は、ディレクトリと一致することはありませ&lt;em&gt;ん&lt;/em&gt;。したがって、上記の値は、という名前のディレクトリを除外しません</target>
        </trans-unit>
        <trans-unit id="ec16eb7b0c1cb9c8607690b91d25398c8caf393a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, just as in the &lt;code&gt;lambda&lt;/code&gt; case. It also marks the stack frame for that function so that it will invoke the debugger when exited.</source>
          <target state="translated">'、 &lt;code&gt;lambda&lt;/code&gt; 場合と同じです。また、その関数のスタックフレームにマークを付けて、終了時にデバッガーを呼び出すようにします。</target>
        </trans-unit>
        <trans-unit id="83092682c6a59fa344aca66d9ba9aaa7e1ccd9f8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, just like &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">'、 &lt;code&gt;foo&lt;/code&gt; のように。</target>
        </trans-unit>
        <trans-unit id="d203181767dc37e11a2f6d26507baf1fdd7187cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, just like the &lt;code&gt;DISPLAY&lt;/code&gt; environment variable. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;, for more details about display names.</source>
          <target state="translated">'、 &lt;code&gt;DISPLAY&lt;/code&gt; 環境変数と同じです。表示名の詳細については、&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;複数の端末を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a266aeed89e5fa57fed340244a45960f77e7691f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, not &amp;lsquo;</source>
          <target state="translated">'ではなく'</target>
        </trans-unit>
        <trans-unit id="baff3f4810431dfaf416e663468b15734a511eee" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, not a repeating &amp;lsquo;</source>
          <target state="translated">'、繰り返しではない'</target>
        </trans-unit>
        <trans-unit id="12808fdbb4df64a0d98e5d152321dc1940847ee6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, on a line by itself, just before the real definition of the function in its autoloadable source file. The command</source>
          <target state="translated">'、自動ロード可能なソースファイルでの関数の実際の定義の直前の1行。コマンド</target>
        </trans-unit>
        <trans-unit id="4dccfe9d8e373780189a9d807e3e807e20ad8ef7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, on some operating systems). Here is an example of how to set &lt;code&gt;EMACSLOADPATH&lt;/code&gt; variable (from a &lt;code&gt;sh&lt;/code&gt;-style shell):</source>
          <target state="translated">'、一部のオペレーティングシステム）。 &lt;code&gt;EMACSLOADPATH&lt;/code&gt; 変数を（ &lt;code&gt;sh&lt;/code&gt; スタイルのシェルから）設定する方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="f307dbc595c36b91f1275e80e0395cbaf3c6504c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or &amp;lsquo;</source>
          <target state="translated">'または'</target>
        </trans-unit>
        <trans-unit id="29deaee94adb830817c01ea0a980e084a12109ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or as &amp;lsquo;</source>
          <target state="translated">'、または'として</target>
        </trans-unit>
        <trans-unit id="9fe2680d738987448bf60b3b2a0b793a2e0f2ca5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or is &amp;lsquo;</source>
          <target state="translated">'、または'</target>
        </trans-unit>
        <trans-unit id="4b66dabd0d4854d0d4dcae65bf54578dba111bef" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or might contain shell metacharacters like &amp;lsquo;</source>
          <target state="translated">'、または'のようなシェルメタ文字が含まれている可能性があります</target>
        </trans-unit>
        <trans-unit id="bca920cdc554383444bb3b6111e0a125ab56934e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or with any other syntax for a character. Thus, you can write</source>
          <target state="translated">'、または文字の他の構文を使用します。したがって、あなたは書くことができます</target>
        </trans-unit>
        <trans-unit id="fd629104c213567c8b9b59cea5c4ac24d9e33891" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, otherwise it is &amp;lsquo;</source>
          <target state="translated">'、それ以外の場合は'</target>
        </trans-unit>
        <trans-unit id="932f9ad086811ac69de73094d20fdfc55cd1613d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, put it anywhere but at the beginning. To include &amp;lsquo;</source>
          <target state="translated">'、最初以外の場所に置きます。含める '</target>
        </trans-unit>
        <trans-unit id="ac95d1c364a19e6fb93d67835c657da7c1f099a3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, put it at the end. Thus, &amp;lsquo;</source>
          <target state="translated">'、最後に置きます。したがって、 '</target>
        </trans-unit>
        <trans-unit id="eb1825d9bb4f80cd4b0eddca59742dda79ee843c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, respectively.</source>
          <target state="translated">'、それぞれ。</target>
        </trans-unit>
        <trans-unit id="ece817085c311045c341994b91039d3691810f09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, respectively. (&amp;lsquo;</source>
          <target state="translated">'、それぞれ。（ '</target>
        </trans-unit>
        <trans-unit id="7caf85ba2ce09d88ab0f5bef4bba21a8182b427c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, respectively. Commands are simply functions that may be called interactively; macros process their arguments differently from functions (the arguments are not evaluated), but are presented the same way.</source>
          <target state="translated">'、それぞれ。コマンドは、対話的に呼び出すことができる単なる関数です。マクロは関数とは異なる方法で引数を処理しますが（引数は評価されません）、同じ方法で表示されます。</target>
        </trans-unit>
        <trans-unit id="b55241cd025410601c89de1a217371d0596cf8fb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, say,</source>
          <target state="translated">'、 いう、</target>
        </trans-unit>
        <trans-unit id="3b8962283218f8939e13b86964ef267e637c6084" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, so if you specify a code point higher than that, Emacs signals an error.</source>
          <target state="translated">'したがって、それより高いコードポイントを指定すると、Emacsはエラーを通知します。</target>
        </trans-unit>
        <trans-unit id="7631bcd28615461a5ac383b81747b98e37b04894" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, so that is the result. In the second example, there is only one possible match, and it is exact, so the return value is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">'、それが結果です。2番目の例では、一致する可能性のあるものは1つだけであり、正確であるため、戻り値は &lt;code&gt;t&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="35656c1f675569c7fc5da83ac95612bcdbd042ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, so that name is the value.</source>
          <target state="translated">'、その名前が値です。</target>
        </trans-unit>
        <trans-unit id="7d924ec8513fd883b0d6beb8f2e9a44a4ff32cf8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, so there can be up to 8 different comment styles, each one named by the set of its flags. Each comment delimiter has a style and only matches comment delimiters of the same style. Thus if a comment starts with the comment-start sequence of style &amp;ldquo;bn&amp;rdquo;, it will extend until the next matching comment-end sequence of style &amp;ldquo;bn&amp;rdquo;. When the set of flags has neither flag &amp;lsquo;</source>
          <target state="translated">'したがって、最大8つの異なるコメントスタイルがあり、それぞれがフラグのセットによって名前が付けられます。各コメント区切り文字にはスタイルがあり、同じスタイルのコメント区切り文字にのみ一致します。したがって、コメントがスタイル「bn」のコメント開始シーケンスで始まる場合、スタイル「bn」の次の一致するコメント終了シーケンスまで拡張されます。フラグのセットにフラグがない場合 '</target>
        </trans-unit>
        <trans-unit id="d696b5a7c5b206ec83795d9be662c3758e1de7d8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, that &amp;lsquo;</source>
          <target state="translated">'、 それ '</target>
        </trans-unit>
        <trans-unit id="866e14327fe9e8c1b6ba4037e3a8483924e20e54" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, that indicates it is probably an &lt;em&gt;abnormal hook&lt;/em&gt;. That means the hook functions are called with arguments, or their return values are used in some way. The hook&amp;rsquo;s documentation says how the functions are called. You can use &lt;code&gt;add-hook&lt;/code&gt; to add a function to an abnormal hook, but you must write the function to follow the hook&amp;rsquo;s calling convention. By convention, abnormal hook names end in &amp;lsquo;</source>
          <target state="translated">'、それはおそらく&lt;em&gt;異常なフック&lt;/em&gt;であることを示しています。つまり、フック関数が引数を使用して呼び出されるか、それらの戻り値が何らかの方法で使用されます。フックのドキュメントには、関数の呼び出し方法が記載されています。 &lt;code&gt;add-hook&lt;/code&gt; を使用して異常なフックに関数を追加できますが、フックの呼び出し規約に従うように関数を作成する必要があります。慣例により、異常なフック名は 'で終わります</target>
        </trans-unit>
        <trans-unit id="853a694e67280628e5b76a9284a39d5522f57fd1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, that is converted to &amp;lsquo;</source>
          <target state="translated">'、それは'に変換されます</target>
        </trans-unit>
        <trans-unit id="e8d7fa8ce9d022e453d0adeb216bada67b751fb8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, that tells you it is normal. We try to make all hooks normal, as much as possible, so that you can use them in a uniform way.</source>
          <target state="translated">'、それはそれが正常であることを示しています。すべてのフックを可能な限り正常に保ち、均一に使用できるようにしています。</target>
        </trans-unit>
        <trans-unit id="e2eb2a6258c791792b7bf3dda00569c106401394" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the &amp;lsquo;</source>
          <target state="translated">'、'</target>
        </trans-unit>
        <trans-unit id="62e55f6f017857e9057f15f60589334a4b5a8c6e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the function discards everything before it (up through the immediately preceding &amp;lsquo;</source>
          <target state="translated">'、関数はその前のすべてを破棄します（直前まで'</target>
        </trans-unit>
        <trans-unit id="85d87d3c3517809647aa4617f6597bc82cb23f09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the function is intended for internal use and the first part names the file defining the function. For example, a function named &lt;code&gt;vc-git--rev-parse&lt;/code&gt; is an internal function defined in</source>
          <target state="translated">'、関数は内部使用を目的としており、最初の部分は関数を定義するファイルに名前を付けます。たとえば、 &lt;code&gt;vc-git--rev-parse&lt;/code&gt; という名前の関数は、で定義されている内部関数です。</target>
        </trans-unit>
        <trans-unit id="3a7d0a305d524183e3f69a672129983d7d75d0c5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the precision specifies how many significant digits to show (significant digits are the first digit before the decimal point and all the digits after it). If the precision of %g is zero or unspecified, it is treated as 1. For &amp;lsquo;</source>
          <target state="translated">'、精度は、表示する有効桁数を指定します（有効桁は、小数点の前の最初の桁とその後のすべての桁です）。％gの精度がゼロまたは指定されていない場合、1として扱われます。</target>
        </trans-unit>
        <trans-unit id="decb2e4702d70d45ef3b95a6bd64411a38df276e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the precision truncates the string to the given width, so &amp;lsquo;</source>
          <target state="translated">'、精度は文字列を指定された幅に切り捨てるので、'</target>
        </trans-unit>
        <trans-unit id="2cb17eb545b962e04c970c0ebfa55bffa9715562" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the rest of the line is treated as the argument list for documentation purposes. This way, you can use different argument names in the documentation string from the ones used in the C code. &amp;lsquo;</source>
          <target state="translated">'、行の残りの部分は、文書化の目的で引数リストとして扱われます。このようにして、Cコードで使用されているものとは異なる引数名をドキュメント文字列で使用できます。'</target>
        </trans-unit>
        <trans-unit id="9189b2404d248d7a2ad6625ed4367651c520966b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the return value will be &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, the return value will be &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="aea06e406ebe66d4bfe0190ee8c59dce5e33f240" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the string is evaluated as a Lisp form. For example:</source>
          <target state="translated">&amp;rsquo;, the string is evaluated as a Lisp form. For example:</target>
        </trans-unit>
        <trans-unit id="ec5acb6796d089d53f0bd9f5fb99b7120e3b9a49" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, then &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, then &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="073ff7bbc11ef3c90dbe7af4086e720077d0e7d6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, then it will be checked if it is found, otherwise skipped without error.</source>
          <target state="translated">&amp;rsquo;, then it will be checked if it is found, otherwise skipped without error.</target>
        </trans-unit>
        <trans-unit id="9c73c5b2b3d990a4a1b53b499086d9e1166ecff2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, then its value is just a single function, not a list of functions. &lt;code&gt;add-hook&lt;/code&gt; cannot be used to modify such a &lt;em&gt;single function hook&lt;/em&gt;, and you have to use &lt;code&gt;add-function&lt;/code&gt; instead (see &lt;a href=&quot;advising-functions#Advising-Functions&quot;&gt;Advising Functions&lt;/a&gt;).</source>
          <target state="translated">&amp;rsquo;, then its value is just a single function, not a list of functions. &lt;code&gt;add-hook&lt;/code&gt; cannot be used to modify such a &lt;em&gt;single function hook&lt;/em&gt;, and you have to use &lt;code&gt;add-function&lt;/code&gt; instead (see &lt;a href=&quot;advising-functions#Advising-Functions&quot;&gt;Advising Functions&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="a3347ecb11e71dfb31d9a228f924667affdd799e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, then that changes the character at position 42 from &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, then that changes the character at position 42 from &amp;lsquo;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
