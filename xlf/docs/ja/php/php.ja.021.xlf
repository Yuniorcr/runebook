<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="e3b6bd3c9e6c5b7d3bd6b7181391df6b85f10ea0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;pathinfo()&lt;/strong&gt; example showing difference between null and no extension&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 nullと拡張子なしの違いを示す&lt;strong&gt;pathinfo（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3cec94ecf5913e632303a65ba609fa7111993a4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;popen()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;popen（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55540ce62127bb4647c96d5fd75274c98db7bcb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;preg_replace_callback()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;preg_replace_callback（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14be2f60d8139886f141684c7e31a3ed48345418" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;rawurlencode()&lt;/strong&gt; example 2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;rawurlencode（）の&lt;/strong&gt;例2&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba3a6b33e749ddd1578a1333639a4c505cab3a6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;realpath()&lt;/strong&gt; on Windows&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 Windowsでの&lt;strong&gt;realpath（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6debe4112303bc9170b883ecc7d2fa388d1daec6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;sapi_windows_vt100_support()&lt;/strong&gt; changing state&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;sapi_windows_vt100_support（）による&lt;/strong&gt;状態の変更&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15f2711fca1daf5ddd320e3d65d4df19cc9808a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;session_gc()&lt;/strong&gt; example for user accessible script&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 ユーザーがアクセスできるスクリプトの&lt;strong&gt;session_gc（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="283476423c36be9be9cd0ac3fbf4b64b233a034b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;setcookie()&lt;/strong&gt; delete example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;setcookie（）の&lt;/strong&gt;削除例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cff50bf7a1c794333d4d3307002861433c5aa677" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;setlocale()&lt;/strong&gt; Examples for Windows&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 Windowsでの&lt;strong&gt;setlocale（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b5ba5ccc11f45f6e73409cf513569b6182750ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;socket_create_pair()&lt;/strong&gt; IPC example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;socket_create_pair（）&lt;/strong&gt; IPCの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="543005b9b2e7ffaa4537f59e8be0d35d9b0ed8c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;sort()&lt;/strong&gt; example using case-insensitive natural ordering&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2大/小文字を区別しない自然順序付けを使用した&lt;strong&gt;sort（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48b98a0d46ca5aaeedf9afbafeaef910219280ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;spl_autoload_register()&lt;/strong&gt; example where the class is not loaded&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 クラスがロードされていない&lt;strong&gt;spl_autoload_register（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f721875f59915eb0a9d711adc0e6643f75b1198" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;split()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;split（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66b27a99b85c4e747c4a395ef12328de6c299d73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;sscanf()&lt;/strong&gt; - using optional parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;sscanf（）&lt;/strong&gt; -オプションのパラメーターの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3049640d8c477cb4717696d978e6887d1e84376e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;strtok()&lt;/strong&gt; behavior on empty part found&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 空の部分での&lt;strong&gt;strtok（）の&lt;/strong&gt;動作が見つかりました&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8fdb5452f4a76fa52e438d5a86e574271cf0567" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;strtr()&lt;/strong&gt; example with two arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 2 つの引数を持つ&lt;strong&gt;strtr（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1f04baa1273a7ee302ef77b2981b198f2fe9a80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;template()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;template（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49fa70048eef916ccd98b572178fdd6854e48dc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;token_get_all()&lt;/strong&gt; incorrect usage example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;token_get_all（）の&lt;/strong&gt;誤った使用例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28a7452ef1309638790393bb4f1cf292d6abbce6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;touch()&lt;/strong&gt; using the &lt;code&gt;time&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;code&gt;time&lt;/code&gt; パラメータを使用した&lt;strong&gt;touch（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="310ab8e5798febbc0952e8f289282d08e89b8426" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;ucwords()&lt;/strong&gt; example with custom delimiter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 カスタム区切り文字を使用した&lt;strong&gt;ucwords（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ec5ebb42d288c866902d5ccc91b7091b875fd78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;unpack()&lt;/strong&gt; example with a repeater&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 リピーターを&lt;strong&gt;使用したunpack（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c706763cb8bd260c6263443a65eec7ec2ab7d25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;urlencode()&lt;/strong&gt; and &lt;a href=&quot;function.htmlentities&quot;&gt;htmlentities()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;urlencode（）&lt;/strong&gt;および&lt;a href=&quot;function.htmlentities&quot;&gt;htmlentities（）の&lt;/a&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29dffc0e74e4f7348349e5fc6e01925bddb93cbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;usort()&lt;/strong&gt; example using multi-dimensional array &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 多次元配列を使用した&lt;strong&gt;usort（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f622b9b7b0affd90c4013a287a6e18bae6df13eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;strong&gt;wordwrap()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;wordwrap（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="365cd5318510f94a8fcde3156371de1089514e36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 &lt;var&gt;page2.php&lt;/var&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;var&gt;page2.php&lt;/var&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7070dced9ad8ef936616b84f59e2d27cfc1b6dfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;Phar::buildFromIterator()&lt;/strong&gt; with other iterators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;Phar :: buildFromIterator（）&lt;/strong&gt;と他のイテレーター&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0651511af854b3eea1f7271d3c29bbf7acfcff1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;Phar::interceptFileFuncs()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;Phar :: interceptFileFuncs（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f07aa564ccb587895c08d2a2fc2ba210602cfe4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;PharData::buildFromIterator()&lt;/strong&gt; with other iterators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;PharData :: buildFromIterator（）&lt;/strong&gt;と他のイテレーター&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="331cb531faa951fb86bc3d2b02c3c810051717bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;ctype_digit()&lt;/strong&gt; example comparing strings with integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 文字列と整数を比較する&lt;strong&gt;ctype_digit（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="244599b1b9296ee3228f408cb260e9d2a33bd8b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;geoip_db_get_all_info()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;geoip_db_get_all_info（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f9d963b838b765c436c4c1fca89eca5217a22cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;geoip_region_name_by_code()&lt;/strong&gt; example using FIPS codes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 FIPSコードを使用した&lt;strong&gt;geoip_region_name_by_code（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29f8341c40edea91ed2c68f7dad10cd0904e067f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;geoip_time_zone_by_country_and_region()&lt;/strong&gt; example using FIPS codes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 FIPSコードを使用した&lt;strong&gt;geoip_time_zone_by_country_and_region（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="041d9150b9d35c20bfaf8a8f6f37628421627b02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;json_encode()&lt;/strong&gt; example showing some options in use &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 使用中のオプションを示す&lt;strong&gt;json_encode（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03f1976cac81df40f497b56517e4a041502894fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A &lt;strong&gt;parse_url()&lt;/strong&gt; example with missing scheme&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 スキームがない&lt;strong&gt;parse_url（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="626869d11c97f3c7bca384abc7e4b74bb08908ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A few OS related constant examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例＃2 OS関連の定数の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c28840af191fe5b3aac02c53d7684c37accf4021" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 A namespace prefix example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2名前空間接頭辞の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8c863bcaae81e8d6ab457c8622a23af5be84296" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 AES Authenticated Encryption example for PHP 5.6+&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 PHP 5.6+のAES認証暗号化の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea76dcdcde18ceb886b495493dcc9f6bdad5e47e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 ALTERNATE_HANDLING rules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 ALTERNATE_HANDLINGルール&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="95f161bcf97136aa876151b1f94fe6fa8f9be921" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Abstract class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2抽象クラスの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54526ee37f70573ed634145053637358205e55a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Access member of freshly cloned object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2新たにクローンされたオブジェクトのメンバーにアクセスする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad029a986f47d8efe71aeb69bff8b75444d00d57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Accessing data from a simple POST HTML form&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2単純なPOST HTMLフォームからのデータへのアクセス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e22a44b2fcd8e52e78a6995ae7e703dc680f9bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Accessing global classes outside a namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2名前空間外のグローバルクラスへのアクセス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="137183d58e09104a525e3c8d49378bed1ece2247" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Accessing invalid object properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2無効なオブジェクトプロパティへのアクセス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e722ce69f6d2f47c9ced1f4b7dcc1aeb7b2568f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Accessing parental variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2親変数へのアクセス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b8d6381fd435e2a5492c82436a4786bf8ae9e63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Add file to a directory inside an archive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2アーカイブ内のディレクトリにファイルを追加する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af0c53dec4a4cea65b5e7a6548b6ee648e68c3e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Adding to the include path&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2インクルードパスへの追加&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94919cd75332099c9a6d352e59be5cf68708c828" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Alternative to &lt;strong&gt;imagedashedline()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;imagedashedline（）の&lt;/strong&gt;代替&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd4a7de7fe70acf39cc38ed65e16635f3b2a97d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 An example use of &lt;strong&gt;list()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;list（）の&lt;/strong&gt;使用例&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12eea08c00a3a905a1568665ff1dd12af6ddef66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Anonymous function variable assignment example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2匿名関数の変数割り当ての例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c290606cb5016aea68ab33a4e4b8e6c29d0ea7c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Argument swapping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2引数の交換&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4cb4cd539a51166195f5b5f994337a9ac7ea443" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Autoload other example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2他の例をオートロードする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d34994b2da5be039e0bc06510cf0e7a5a405fde7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Automatic index with &lt;strong&gt;array()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;array（）を使用&lt;/strong&gt;した自動インデックス&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb0ea93578c5d2fb8ea43794baac3945df479d42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Avoiding lost session by &lt;strong&gt;session_regenerate_id()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;session_regenerate_id（）&lt;/strong&gt;によって失われたセッションを回避する&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5b6a1fbb9bb49d13b44f16b517036bfaa4f9797" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Basic submission of two tasks with passing application context&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2アプリケーションコンテキストを渡すことによる2つのタスクの基本的な送信&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c65112bafae5d4dea32417ea5ecda5e17528080" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Beware when adding or subtracting months&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2月を加算または減算するときは注意してください&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="878f2c3773bbf5b8225f1171425443cb5bb9e1a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Binary &lt;strong&gt;fread()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2バイナリの&lt;strong&gt;fread（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5fac49a370dfe8cdad7d028d84387d5abd2e19d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Bitwise XOR operations on strings&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2文字列に対するビットごとのXOR演算&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a5bec294dd48ba60713121541788f14236d36c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Caching directives&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2キャッシュディレクティブ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d592ed59038e05bd6b7ab8d6c18227eb48830f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Calculate pre PHP-5.4 tiger hashes with PHP-5.4 and higher&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 PHP-5.4以前でPHP-5.4以前の虎のハッシュを計算する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bea140a5bde61802d16607644c679c503293d949" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Callback basic examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2コールバックの基本的な例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b78168d388a8c2d4787568b5f317bfe4ae8d68c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Callback example using a Closure &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2クロージャーを使用したコールバックの例 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9996add4d683695e46e3c667d05cf28c3dc555f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Checking for failure&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2失敗のチェック&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60dbb8e4d5059d6b549f4943e25691735e9931ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Checking for the existence of a stream wrapper&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2ストリームラッパーの存在を確認する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47e2d2e4339f971f6558e38a3534cbee13812a8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Committing a DDL transaction&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 DDLトランザクションをコミットする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad0bf5afd5d97efb5cfd80cf86d04e42f2aa3042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Conditional functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2条件付き関数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e5de38cdc5c6ecab9200b7b3d59d5e749030ed3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Connect by specifying a user name and password.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2ユーザー名とパスワードを指定して接続します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0405b3fda038a87dd42edf58fc476baef4419da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Connect to UNIX domain socket which presumably is served by a server, read response from the server and output it to the console&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2おそらくサーバーによって提供されているUNIXドメインソケットに接続し、サーバーからの応答を読み取ってコンソールに出力します&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad06465266642c9d0593ff6439649070aa72a507" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Constructors in namespaced classes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2名前空間クラスのコンストラクタ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f04c080ce2cde6a4ce015276f86701629f9d414" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Contents of users.txt&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 users.txtの内容&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d2aaa0ebaa791811434bd4c5bb8ce1edae3b65b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Convert an image from a zip entry&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 zipエントリから画像を変換する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e59d41a57e93ebe6337f1a338d8e10d744c9b7ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Converting a PNG image to GIF using &lt;strong&gt;imagegif()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;imagegif（）&lt;/strong&gt;を使用してPNG画像をGIFに変換する&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6cc9aec7f4c39d40bc7811b9ad2c46834c22a52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Correlate &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;Imagick :: morphology（）を関連付ける&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e966608799ed543593400624802691e674865857" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Counting rows returned by a SELECT statement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 SELECTステートメントによって返された行をカウントする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2b5c094ec31da3c9db8f015eafc63bd1ec0afce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Create a PDO instance via URI invocation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 URI呼び出しを介してPDOインスタンスを作成する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab2392f7551189537d23a6777e52c8d7deb25845" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Create a SimpleXMLElement object from a URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 URLからSimpleXMLElementオブジェクトを作成する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2d4b66f1601e28fbaba9086d78b7e82cfaa9f84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Create a gradient from the polynomial (4x^2 - 4x + 1) &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2多項式から勾配を作成する（4x ^ 2-4x + 1） &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de46aad9bf80e222b6a45c471d4ca59a6aafb015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Create an archive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2アーカイブを作成する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f4beea510eb43c9de013b849b411ee5f0c4a5c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Creating a self-signed ECC certificate in PHP 7.1+&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 PHP 7.1以降での自己署名ECC証明書の作成&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c42ff0bede6cf2d52a71d62c523d4ce26bacf9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Creating an uneraseable output buffer in a way compatible with both PHP 5.3 and 5.4&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 PHP 5.3と5.4の両方と互換性のある方法で消去できない出力バッファーを作成する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="021d2a627a3b9be1ac8f9e88ba9ae7007c996f2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Custom session save handler using objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2オブジェクトを使用したカスタムセッション保存ハンドラー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5587b9b1032aa5592c8b00a088c5d1650fbf7745" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 DatePeriod example with &lt;strong&gt;&lt;code&gt;DatePeriod::EXCLUDE_START_DATE&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 DatePeriod &lt;strong&gt; &lt;code&gt;DatePeriod::EXCLUDE_START_DATE&lt;/code&gt; &lt;/strong&gt;を&lt;strong&gt;使用した&lt;/strong&gt; DatePeriodの例&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1503114bce2faa88cd88fbda2ac8e48351246fd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Declaring a single namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2単一の名前空間の宣言&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ca69910e447188078db89a28ef6c18d2a386a8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Declaring multiple namespaces, bracketed syntax&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2複数の名前空間の宣言、括弧で囲まれた構文&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c37dfdbbec2011c4cb4558961c74c0135a39953" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Defining Constants using the &lt;em&gt;const&lt;/em&gt; keyword&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;em&gt;const&lt;/em&gt;キーワードを使用した定数の定義&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2bc372e1a9109ab4ebbfb0f09655e881700da7e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Disabling &lt;code&gt;details&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;code&gt;details&lt;/code&gt; 無効にする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53917daf1e16a9308220c4baedf794e7e17cfb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Display full permissions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2完全な権限を表示する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e78e5d817cc56d849275f0f52103eef7db226d3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Displaying an IP address&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 IPアドレスの表示&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9d45cbb29833c414b14714e832482d5933fa118" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Dummy_action.php&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 Dummy_action.php&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="809aadcb62b4076c341448960589e97a6cfd91e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Dynamically accessing namespaced elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2名前空間要素に動的にアクセスする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51a08df36c87886ce5ee1bd4fa172a18ec59a587" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Efficiently handling tasks with &lt;a href=&quot;class.splqueue&quot;&gt;SplQueue&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;a href=&quot;class.splqueue&quot;&gt;SplQueueで&lt;/a&gt;効率的にタスクを処理する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f2446ed2997a9fb8eaf3a8a96bd9c8fe9168a80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Escaping characters in &lt;strong&gt;date()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;date（）での&lt;/strong&gt;文字のエスケープ&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0093926b5e737c0536db3bbae303751104602885" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Examining the individual bytes of a UTF-8 string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 UTF-8文字列の個々のバイトを調べる&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="beea79954e71e3cbdcdeb59bf94cd3093c1d3efc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Example of connecting securely to LDAP server.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 LDAPサーバーに安全に接続する例。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc08c197b49238bf076a968772d6b2c9007b1737" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Example of using a nowdoc to initialize a property&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 nowdocを使用してプロパティを初期化する例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a756bedae8cb0a2c56f89eaf2a125a2c0106d7b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Example showing useless detect orders&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2役に立たない検出順序を示す例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d5df10d61ca2b2cdea49956e8e1c8be3f2fe380" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Examples of potential &lt;strong&gt;str_replace()&lt;/strong&gt; gotchas&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;電位の例2例&lt;strong&gt;str_replace（）&lt;/strong&gt;落とし穴&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b2c4f882fd53b4c27d86d05c225a6d7717621df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Execute a prepared statement with an array of insert values (named parameters)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2挿入値の配列（名前付きパラメーター）を使用して準備済みステートメントを実行する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ad6e17265b772c83b3fc80bb7213d1c6e148c5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Execute a prepared statement with question mark placeholders&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2疑問符のプレースホルダーを使用して準備済みステートメントを実行する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="735ad7a2f2d0d8aa5f3ae43b8e3a42807f00e7e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Exporting classes since PHP 5.1.0&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 PHP 5.1.0以降のクラスのエクスポート&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1542d99f05beb29598a9fbaef544f652bab0e947" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Extendable Interfaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2拡張可能なインターフェース&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fc9c21abb17d1222fe8566af8803eaf4dd6c8d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Extending the Exception class (PHP 5.3.0+)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2例外クラスの拡張（PHP 5.3.0+）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bbb647ababfea26d5292721a32ed659502c8de08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Extract two entries&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 2つのエントリを抽出する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89dffcaa515eaa72286b7067703a4b04b8a406ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Fetching all values of a single column from a result set&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2結果セットから単一の列のすべての値を取得する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="925e97950f10221ce385370eb66aafa7bf476cc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Fetching rows with a scrollable cursor&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2スクロール可能なカーソルで行をフェッチする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c035129f9f3a9c8297cec1494ca0998fbe85e18c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Filtered &lt;strong&gt;get_resources()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2フィルタリングされた&lt;strong&gt;get_resources（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b850460a363637ddcefabd3c69eb5a46e96d5c80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Filtering results from &lt;strong&gt;ReflectionClass::getMethods()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;ReflectionClass :: getMethods（）&lt;/strong&gt;からの結果のフィルタリング&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ecc0f5b216eb26800d38799b276c8d79bb90201" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Final class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2最終クラスの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27695ea9573558d18a0cc28bc58b8d2a1141ffb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Find matching HTML tags (greedy)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2一致するHTMLタグを検索する（貪欲）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73ecf8ea729814e46b1ad895c08480924e6bf756" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Find the word &quot;web&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2「web」という単語を見つける&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e73ef0608198ba299541c53fae735e41d6096b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Flips the image horizontally&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2画像を水平方向に反転する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0315eee96fba56ff031a080ac2b51e1ff719ce19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Further &lt;strong&gt;DateTime::add()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2さらなる&lt;strong&gt;DateTime :: add（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f896b0a5cf2ed67ec029c5c830dd085f7a04314" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Further &lt;strong&gt;DateTime::sub()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2さらなる&lt;strong&gt;DateTime :: sub（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f630a22ec362b1556b6a886f43175bf8cf939b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Gaussian blur&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2ガウスぼかし&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a8cb3cb63a019c027f9c8306deb7d14452c9a04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Generate a DH public/private keypair in php&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 phpでDH公開/秘密鍵ペアを生成する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="425da20982ba41b8bdfacf38ff56db3fadf73250" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Generating valid HTML markup using the &lt;code&gt;is_xhtml&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;code&gt;is_xhtml&lt;/code&gt; パラメータを使用して有効なHTMLマークアップを生成する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="859fb18830c5c893f927716411cf4bf52ca28809" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Get the column of last names from a recordset, indexed by the &quot;id&quot; column &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2「id」列でインデックス付けされたレコードセットから姓の列を取得する &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c0f356dec433d4d7cd8d4b7fe14446fe92e6c68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Getting the abbreviation of a timezone&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2タイムゾーンの省略形を取得する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d39c726f43dd114a5acdc0abc89222afc88a07b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Getting value from private and protected properties using &lt;a href=&quot;class.reflectionproperty&quot;&gt;ReflectionProperty&lt;/a&gt; class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;a href=&quot;class.reflectionproperty&quot;&gt;ReflectionProperty&lt;/a&gt;クラスを使用してプライベートプロパティと保護プロパティから値を取得する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="602069d48062128f3f05200ed7dbd3b4f5ded6d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Human-readable RGB values using &lt;a href=&quot;function.imagecolorsforindex&quot;&gt;imagecolorsforindex()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;a href=&quot;function.imagecolorsforindex&quot;&gt;imagecolorsforindex（）&lt;/a&gt;を使用した人間が読めるRGB値&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3457768a7f9ce228d2c6a7e59977f684e379bf83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 ISO 8601:1988 week number example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 ISO 8601：1988週番号の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d719213ee702dc87cc181834520e796958f8f61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Including within functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2関数内に含める&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8169e7ae23892755bcb665a7262bd9ef6743e29d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Incrementally writing a BLOB&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 BLOBをインクリメンタルに書き込む&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a96b7fc3c7dacd9a529edc8b06377fb700914254" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Integer overflow on a 32-bit system&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 32ビットシステムでの整数オーバーフロー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7157e1d2d65ccac6c1fbd38ab8f72700deb6bce3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Intricacies of &lt;strong&gt;DateTime::__construct()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;DateTime :: __ construct（）の&lt;/strong&gt;複雑さ&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="82b0361d5c115f6981e5bde1c221450d6ae28a55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Intricacies of &lt;strong&gt;DateTime::createFromFormat()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;DateTime :: createFromFormat（）の複雑さ&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70947be546fdb5ebc1820989905d64bb0edc0c10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Italicizing a word within some text&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2テキスト内の単語をイタリック体にする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17a287fa74d822e4be368c5c4cb844f47a65d611" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Iterable parameter default value example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2反復可能パラメーターのデフォルト値の例 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e14e80582d4b9c1ccefcfe661a75c74530efcb83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Iterating AppendIterator with the AppendIterator API&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 AppendIterator APIでAppendIteratorを繰り返す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63a9132548ce767f6225c90ea6cfcfaf64dc2586" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 LDAP pagination&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 LDAPページネーション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3483ab981e6826547e08c0a3fb111d79abf51bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 List all entries in the current directory and strip out &lt;em&gt;.&lt;/em&gt; and &lt;em&gt;..&lt;/em&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2現在のディレクトリのすべてのエントリをリストし、削除し&lt;em&gt;ます。&lt;/em&gt;と&lt;em&gt;..&lt;/em&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd8bb1c4b794bee4806826fc8bfc99ae507d0c67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Logging values in access.log&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 access.logに値を記録する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc0c8ac6bac05c8a01bf211225a6360ba27e311f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Making a general processing function with &lt;strong&gt;create_function()&lt;/strong&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;create_function（）を使用&lt;/strong&gt;して一般的な処理関数を作成する&lt;strong&gt;&lt;/strong&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40c14ae9174d8f0173f330cc4a21385df88492b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Method Declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2メソッドの宣言&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8bd52e8fa7ab9dc819f34783d06df48e6905d96d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Multiple property declarations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2複数のプロパティ宣言&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf9dff2d24f98a993329fee9f793f6ba1cb1b314" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Nested acquire/release example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2ネストされた取得/解放の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d901e24d6f827582a97c6100a8bdb0963b4aceff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Nested children&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2ネストされた子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79550d7047414ef4d87695f39d7fc4d836714b8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 No sunrise&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2日の出なし&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16062eeaf302e6e1ef429ea73c8afcb2f48ca07a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 No sunset&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2日没なし&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="157415443d89adc77c9ef9a908b8da224d7a122e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 OO example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 OOの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d5b270b853b42db383cbb8bafb8713bfa25a922" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Object Iteration implementing Iterator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 Iteratorを実装するオブジェクト反復&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08bfaad5ecdbde51d35788acfab29bcb127d517c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Our own implementation of &lt;strong&gt;curl_setopt_array()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;curl_setopt_array（）の&lt;/strong&gt;独自の実装&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b71abe0306444cf1e8175ff18a54e00197b1db2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Overflow behavior&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2オーバーフローの動作&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52dd34600d70267b977f851f0083232aaa8fd523" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Overloading methods via the &lt;a href=&quot;language.oop5.overloading#object.call&quot;&gt;__call()&lt;/a&gt; and &lt;a href=&quot;language.oop5.overloading#object.callstatic&quot;&gt;__callStatic()&lt;/a&gt; methods &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;a href=&quot;language.oop5.overloading#object.call&quot;&gt;__call（）&lt;/a&gt;および&lt;a href=&quot;language.oop5.overloading#object.callstatic&quot;&gt;__callStatic（）&lt;/a&gt;メソッドによるメソッドのオーバーロード&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="304c9948cf86a47708af90b837c33612ea41ac82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 PHP Opening and Closing Tags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 PHPの開始タグと終了タグ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a54591e27f76b85f1b16747911f0f07eed5dc3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Passing function parameters by reference&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2関数パラメーターを参照で渡す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0018c0bf4ae956eaaac6b314da27e695a690c131" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Passing text containing an unescaped &amp;amp; as &lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2エスケープされていない＆を含むテキストを &lt;code&gt;value&lt;/code&gt; として渡す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8db1e0d6119068e78cfc49ba85b1d1bd2f33c088" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Periodic timer. Tick every 10.5 seconds starting at now&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2定期タイマー。今から10.5秒ごとにチェック&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="83816ef9c109f0a3f01780fd5cbc1b0058788e83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Polar night&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2極夜&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53dfe7fddc1a00d715f6b43f6e4620e39467c7d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Precedence Order Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2優先順位の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4280a6f10bb82e3d7d08a35e374c411e45c83c60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Prepare an SQL statement with question mark parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2疑問符パラメーターを含むSQLステートメントを準備する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74c5f017d2b2e91ad77ae3a94034544fa9b7c436" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Prints the core developers and the documentation group&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2コア開発者とドキュメントグループを出力します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16d0a0cc549cfe0136aeddc9f03675807e6620da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Procedural style&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2手続き型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7bf9b04143d29ff5c65fa909afee6e967da0a483" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 QuickHash IntHash file format&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 QuickHash IntHashファイル形式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef38c71a1c731ab53d4f4a295cb3242f7a45ca18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 QuickHash IntString file format&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 QuickHash IntStringファイル形式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bed5af284c470688d432ec31af34b00b4d8c3fbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Quoting a dangerous string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2危険な文字列を引用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57210ff96350f669933f3c07fbfb64bd8f70f882" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Recursive &lt;strong&gt;count()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2再帰的な&lt;strong&gt;count（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3cb0a351d5ee9e1698e52433f9be7b2a33a7db28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Recursive callback basic example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2再帰的コールバックの基本的な例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c14bfe408759dd6d2b34fd6f155ccf2994f9b29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Referencing global variables inside functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2関数内でのグローバル変数の参照&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="423602cfc29738176199f9a4ad69bc6dbacf007e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Register localnamespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2ローカルネームスペースを登録する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb395c39eb864ad196918a02ec9b7bd4f383dbd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Registering a generic filter class to match multiple filter names.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2複数のフィルター名に一致する汎用フィルタークラスを登録します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c76ee03751212b35779c78259b5da5e8279f0917" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Rename a user&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2ユーザーの名前を変更する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed882621a3bc3463f88daf1e124ed6ec83af7381" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Resampling an image proportionally&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2画像を比例的にリサンプリングする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="92c9326647e80ef8b0e018077567bd9f51d93cf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Resuming a download with &lt;strong&gt;ftp_nb_get()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;ftp_nb_get（）&lt;/strong&gt;を使用してダウンロードを&lt;strong&gt;再開する&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9c45c938d84a2275bbf21276d32b8e62acaacf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Resuming an upload with &lt;strong&gt;ftp_nb_put()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;ftp_nb_put（）を&lt;/strong&gt;使用してアップロードを&lt;strong&gt;再開する&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5da80782a1018d6f451fe0aa833c45aa6a363ea9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Retrieving a numeric array.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2数値配列を取得する。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9e417af79b10b868fc233eb51ae65c53211e8af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Retrieving elements as custom class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2カスタムクラスとして要素を取得する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3957a83754118bf6229bde6c29c7b6061e6a5354" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Returning an array to get multiple values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2複数の値を取得するために配列を返す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="186f307af9204cfbd4aec27f32a4cfaeb7864fb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Rewrite rule for Apache&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 Apacheの書き換えルール&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24152d9656b0cd648283dcde65b2c432f6b13049" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 SOAP's standard method for error reporting is exceptions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2エラー報告のためのSOAPの標準メソッドは例外です&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9df0e92e1f3dfd5979296e6a654a6adbffdc0d72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 SPARSECOLORMETHOD_BILINEAR &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 SPARSECOLORMETHOD_BILINEAR &lt;strong&gt;Imagick :: sparseColorImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="504a75adc0ac20b9aa0b074f040261c30ca9c5cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Same as the previous example but with &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; and the zip stream wrapper&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2前の例と同じですが、&lt;a href=&quot;function.fopen&quot;&gt;fopen（）&lt;/a&gt;とzipストリームラッパーを使用します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="701995235d979607e52a22ee49494a76e089cce2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Saving a GD image&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 GD画像の保存&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d1f5206689ab8ddcaa3203f90b849b0d9ecb4f0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Saving a GD2 image&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 GD2画像の保存&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c00e6cc98b442f336bf7eaa83532c12e8e31422" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Saving a JPEG image to a file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 JPEG画像をファイルに保存する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa342c1d6f71595608e3891ea8f6a04e66ea2738" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Saving an XBM file with a different foreground color&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2異なる前景色でXBMファイルを保存する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59ccd306c1152b6305032696ce17adf793d42337" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Saving the WBMP image&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 WBMP画像の保存&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63c156602503b6de1e4df59d07703973a90baa88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Searching with offsets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2オフセットを使用した検索&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1983e59482b3905badcedb568180e6bf9ef7c2fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Searching within the include_path&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 include_path内での検索&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d7e7a7605fe954ad252088d79925c9ecf7ab6ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Sending mail with extra headers.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2ヘッダーを追加してメールを送信する。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15d1c7e5ca8c0384c1c4345f093ef15c0526d703" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Set Multiple Headers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2複数のヘッダーを設定する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a2f340888ba7ee44dc6837aeebf386a328cbf1ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Set server controls&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2サーバーコントロールの設定&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5498ddec9334ddfe9fa58e142069c394f88d5d2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Simple &lt;strong&gt;array_merge()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2単純な&lt;strong&gt;array_merge（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42404e51cabafdac84c8bedd876e36a34b2cad0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Simple example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2簡単な例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b23cf18b288a88bec2147ca476e66127c91fffdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Simple progressbar for commandline download client&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2コマンドラインダウンロードクライアントのシンプルなプログレスバー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="baeb7877730c4878d38aa88302dff03a00ee4390" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Some examples of the &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; pseudo-variable&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; 疑似変数のいくつかの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84309eed169013d0df530af168624e5292923df5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Some examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2いくつかの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a729ec52a258660f8ba5938686c3aae20c2f7649" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Sorting multi-dimensional array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2多次元配列のソート&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="451c9138528f23072109459d89a8eba54960b7fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Splitting a string into component characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2文字列をコンポーネント文字に分割する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb9d719d51dc1fc915643b48b580f9938af6022b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static &lt;strong&gt;method_exists()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2静的な&lt;strong&gt;method_exists（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd4c0cabeafe8d0f542e5336ebd2ce73322256d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static data example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2静的データの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2de53b07387726cf06ddd6901376baf56da9797" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static invocation of &lt;em&gt;loadXML&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;em&gt;loadXMLの&lt;/em&gt;静的呼び出し&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a47aac00b88908b4e0d7cdf84ae477e3000c2ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Static property example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2静的プロパティの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6256b041ce301a6cf5c94d97493c56622684cd9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Submitting a job and retrieving incremental status&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2ジョブを送信し、増分ステータスを取得する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d02d771149bb0c7ce91d22303bd4a88bbc5f579" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Testing if a string is found or not&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2文字列が見つかったかどうかのテスト&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d51042459b70a161c5bbf7899039c2711d3c89f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Ticks usage example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2ティックの使用例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3644e158170d5b1b60a157187b4fe8b6f9326fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Timing script execution in PHP 5&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 PHP 5でのタイミングスクリプトの実行&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e77d7baf822875e44b0424e1beddc78a7a83dd3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Transcription of standard array comparison&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2標準配列比較の転写&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9327794c5b1fed243036cfe5881095258fd6d25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Traversing an array with &lt;strong&gt;each()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;each（）で&lt;/strong&gt;配列をトラバースする&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1c0dc3575bea967b5e4b4b8a8f21a66cd4c4ee4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Trimming array values with &lt;strong&gt;trim()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;trim（）&lt;/strong&gt;による配列値のトリミング&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="902b282ab339d912c4679965457c7a56b0c79a20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Type Casting and Overwriting example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2型のキャストと上書きの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aaa11459fb6a397335dac4940eb8bf054e35d63a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Undefined order of evaluation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2未定義の評価順序&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d69d65a46938249ccfc81754e71da6c2652879e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Understanding &lt;strong&gt;socket_select()&lt;/strong&gt;'s result&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;socket_select（）&lt;/strong&gt;の結果を理解する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93148079f4123610f5c39893c4249d558a6e2f49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Unsetting all previously set headers.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2以前に設定されたすべてのヘッダーの設定を解除します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74e454402f71ffdac4cb82c7bc1e1218e5bd8b23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Uploading file (deprecated as of PHP 5.5.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2ファイルのアップロード（PHP 5.5.0以降では非推奨）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d8e1fe8c2008947fc5df217a9c4e8926aa45d40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Usage of &lt;strong&gt;&lt;code&gt;ENT_IGNORE&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt; &lt;code&gt;ENT_IGNORE&lt;/code&gt; の&lt;/strong&gt;使用法&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84176739e1d29d1eb458972842719d59dcbe2dad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Usage on built-in functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2組み込み関数の使用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cc29d8ef7c1d622df445d38ea58d839e7305101" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using !==&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2！==の使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff4b5bfe70afbc7789bc16729020c30da0ed9929" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;em&gt;(unset)&lt;/em&gt; casting&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;em&gt;（未設定）&lt;/em&gt;キャストの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1fcfc635f5badb80430c84c6a6fb9c14c92a026f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;em&gt;instanceof&lt;/em&gt; with inherited classes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 継承されたクラスでの&lt;em&gt;instanceofの&lt;/em&gt;使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69007b4432bd8b7293cdc3b795f73d9900b68a60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;crypt()&lt;/strong&gt; with htpasswd&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 htpasswdで&lt;strong&gt;crypt（）&lt;/strong&gt;を使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8fa279e0032527795b812cffecd0a90bd93963e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;dns_get_record()&lt;/strong&gt; and DNS_ANY&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;dns_get_record（）&lt;/strong&gt;およびDNS_ANYの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad79ac4c88c50fbb7cda288b4bcae3a5295d8e90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;get_class()&lt;/strong&gt; in superclass&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 スーパークラスで&lt;strong&gt;get_class（）&lt;/strong&gt;を使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="345f94e3657875f397267298bb90b19b7d2729b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;http_response_code()&lt;/strong&gt; in a CLI environment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 CLI環境での&lt;strong&gt;http_response_code（）の&lt;/strong&gt;使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ac4f67261ac346675ca629d6539b6853c7e128c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;imagefontheight()&lt;/strong&gt; together with &lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;使用＃2例&lt;strong&gt;imagefontheightを（）&lt;/strong&gt;と共に&lt;a href=&quot;function.imageloadfont&quot;&gt;（imageloadfont）&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b78a6a14987755f64814bb399f5b74e24a2074fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;imagefontwidth()&lt;/strong&gt; together with &lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;使用＃2例&lt;strong&gt;imagefontwidthを（）&lt;/strong&gt;と共に&lt;a href=&quot;function.imageloadfont&quot;&gt;（imageloadfont）&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e686be8a574b0fb0801de551e6eec9ae67a2a7e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;mcrypt_module_open()&lt;/strong&gt; in encryption&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 暗号化での&lt;strong&gt;mcrypt_module_open（）の&lt;/strong&gt;使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bda1cde595c07e5b0450ad7bbc4ded5756e46b1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;pg_query()&lt;/strong&gt; with multiple statements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 複数のステートメントで&lt;strong&gt;pg_query（）&lt;/strong&gt;を使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f2dc28973c810415313bda79b64aaa4e375a437" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;stat()&lt;/strong&gt; information together with &lt;a href=&quot;function.touch&quot;&gt;touch()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;a href=&quot;function.touch&quot;&gt;touch（）&lt;/a&gt;とともに&lt;strong&gt;stat（）&lt;/strong&gt;情報を使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3fc02c107e43ddf920916f97c8dd5630c46dad7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;stripslashes()&lt;/strong&gt; on an array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 配列での&lt;strong&gt;stripslashes（）の&lt;/strong&gt;使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d9cff7abd4cdae0c4dfcc5f870e28297ad07e9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;strong&gt;substr_replace()&lt;/strong&gt; to replace multiple strings at once &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;substr_replace（）&lt;/strong&gt;を使用して複数の文字列を一度に置き換える&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd190544c33e6af9bb9a50b7c3cf5c95382de643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; instead of global&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 グローバルの代わりに &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.globals&quot;&gt;$GLOBALS&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; を使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4a75edda3ef0a49ade6ac8ba70b838576971796b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using LDAP Bind Anonymously&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2匿名でのLDAPバインドの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24b4b23b1056a3d94e6eb380dc3e129ad2d61391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using UDP connection&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 UDP接続の使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0a905d70d389093fe78dbe1a69b3917452ba43e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using UDP server sockets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 UDPサーバーソケットの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80d654478ecee76c1bf841ecaf1952c346ae39f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using a custom handler to print a description&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2カスタムハンドラーを使用して説明を印刷する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15b16481e840bc9e2148203db95a7242a8be13e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using a negative &lt;code&gt;length&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2負の &lt;code&gt;length&lt;/code&gt; 使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a33775bd22f66de9c992090b8eb224fb59115df0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using asXML() on &lt;a href=&quot;simplexmlelement.xpath&quot;&gt;SimpleXMLElement::xpath()&lt;/a&gt; results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;a href=&quot;simplexmlelement.xpath&quot;&gt;SimpleXMLElement :: xpath（）の&lt;/a&gt;結果でasXML（）を使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="500813cfe07a6c2cc7bc2f23ba649ed7e9ae5466" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2フラグの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="551038818a0608137b25a67e8429e1cf68d859d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using indexed arrays with &lt;strong&gt;preg_replace()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;preg_replace（）での&lt;/strong&gt;インデックス付き配列の使用&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="341ceec5d8ae3f198d92011520c0a22957a59454" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2名前空間の使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b8de23263a03eed16ac00efcae2f36b693e4ecd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using the &lt;code&gt;phonemes&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;code&gt;phonemes&lt;/code&gt; パラメータの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3c3b4cf3ab97b6fcde3c3409b90d876246ee1ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Using the &lt;em&gt;instanceof&lt;/em&gt; operator in PHP 5&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 PHP 5での&lt;em&gt;instanceof&lt;/em&gt;演算子の使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aefec6e82618fbbeb28bee9a50531a9783801ab0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Valid example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2有効な例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad362691e3ed13f55eb297074b63784f26b9f979" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Values exceeding ranges are added to their parent values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2範囲を超える値が親の値に追加される&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f6b806bdee1c5da34277b67bb05a25d417023e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Variable method example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2可変メソッドの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2af625a37fb0e7678f17c56a9d401f5748e86c46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Volatile use-case&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2揮発性のユースケース&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="82a8e7d6d85e47586319945f40f678630644e3d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 What &lt;strong&gt;get_meta_tags()&lt;/strong&gt; returns&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 &lt;strong&gt;get_meta_tags（）&lt;/strong&gt;が返すもの&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da5d0ce99d26d7f19d68ab8fd687f46468caf015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Working with multiple namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2複数の名前空間での作業&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7b2a5feda4b9aa72b486e5f64b49e99b1145629" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Working with variables in a sandbox&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2サンドボックスでの変数の操作&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="234ebf738c2ed609c97d1a67618f4ff7bb09e00f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 Yielding a key/value pair&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2キーと値のペアを生成する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57467c036fe4f21f530641b52ecab72fc93e13f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 __NAMESPACE__ example, global code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 __NAMESPACE__の例、グローバルコード&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d4be666eb3cf4da0d216ddfc76ca0165efcbdcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 global functions/constants fallback inside a namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2名前空間内のグローバル関数/定数フォールバック&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="847b3bb3baa4edaae59df109bde37af99c629417" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 importing/aliasing with the use operator, multiple use statements combined&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 use演算子を使用したインポート/エイリアス、複数のuseステートメントの組み合わせ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6db0046f8a6636a36e17c5981e573bda0113ff4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 moldb.xml - small database of molecular information&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 moldb.xml-分子情報の小さなデータベース&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad31b102f673c91fe89be534ca3e51cb95bd2072" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 plugin Dummy.php (under &lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt;/plugins)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2プラグインDummy.php（&lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt; / pluginsの下）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e14009a8a3cbf792c3dd9acfc9246a140ba53f46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 private method example: private methods may only be executed by the Threaded object during execution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2プライベートメソッドの例：プライベートメソッドは、実行中にスレッドオブジェクトによってのみ実行できます。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bacbf719a854b7507c2f6da50a65e3c1c6b00b64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #2 unserialize_callback_func example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例2 unserialize_callback_funcの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cb07e20d9553f11119cefda4e90b2179dfaa8ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #20 The 'BottomHat' method, also known as 'Black TopHat' is the pixels that a Closing of the shape adds to the image. That is the the pixels that were used to fill in the 'holes', 'gaps', and 'bridges'. &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例20「BottomHat」メソッドは、「Black TopHat」とも呼ばれ、形状を閉じると画像に追加されるピクセルです。これは、「穴」、「ギャップ」、および「ブリッジ」を埋めるために使用されたピクセルです。&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e95eb940ffd117c73daa47b94c9d4cfa7817b196" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #21 Hit and Miss &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例21 &lt;strong&gt;Imagick :: morphology（）の&lt;/strong&gt;ヒットとミス&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ac7ae1c62520c1d04daf19f18edd02e81282512" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #22 Thinning &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例22 &lt;strong&gt;Imagick :: morphology（）の&lt;/strong&gt;間引き&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a22cbfe9ebf2ad95b476894cc43c21dd136cd73d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #23 Thicken &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例23 &lt;strong&gt;Imagick :: morphology（）を&lt;/strong&gt;厚くする&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="155ecfcad7f24023902b7bbc8c8c54a81b9dcbce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #24 Thick to generate a convex hull &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例24凸包&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;を生成するためのThick&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c9cb7a91203135a72b8f1f8893cedf3311f12ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #25 Iterative morphology &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例25反復形態&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e157ec63266858610500dacedbed914aef5cdffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #26 Helper functon to get an image silhouette &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例26画像のシルエットを取得するためのヘルパー関数&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e07e825b4848b9b3ef86bfc721f394708a4ab9c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 1-based index with &lt;strong&gt;array()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;array（）を使用&lt;/strong&gt;した1ベースのインデックス&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49abf949ac4a08c9d590e8dbe6379289d232567c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt; and &lt;a href=&quot;datetime.diff&quot;&gt;DateTime::diff()&lt;/a&gt; with the %a and %d modifiers &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 ％aおよび％d修飾子を使用した&lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt;および&lt;a href=&quot;datetime.diff&quot;&gt;DateTime :: diff（）&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f758f22c661cff43fa3e3a98813ce0ba82f843f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;code&gt;limit&lt;/code&gt; parameter examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;code&gt;limit&lt;/code&gt; パラメーターの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e21674e07d70fdede407b96e2369f786012e1307" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;code&gt;mode&lt;/code&gt; with &lt;code&gt;precision&lt;/code&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;code&gt;precision&lt;/code&gt; 例を伴う &lt;code&gt;mode&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43888bab51715ec4ef49d2b28b488e3ac1119570" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;em&gt;+&lt;/em&gt;, &lt;em&gt;-&lt;/em&gt; and &lt;em&gt;.&lt;/em&gt; have the same precedence&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例＃3 &lt;em&gt;+&lt;/em&gt;、&lt;em&gt;-&lt;/em&gt;および&lt;em&gt;。&lt;/em&gt;同じ優先順位を持っています&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85479f9eace90744c9fd85bba74c99634fad0438" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;em&gt;include&lt;/em&gt; through HTTP&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 HTTPを介した&lt;em&gt;インクルード&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="87df528bcc718bbcec2ce3fdd1079b89d4b49b44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;em&gt;static::&lt;/em&gt; usage in a non-static context&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;em&gt;static ::&lt;/em&gt;非静的コンテキストでの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f905f1e28b250aae0ffdd5f234b4d6a67c0b17e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;&lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt;&lt;/strong&gt; example for Memcached v3&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 Memcached v3の&lt;strong&gt; &lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt; &lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34d07086ddadba230eaa90c0f91edb164106d799" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;DOMXPath::registerPHPFunctions()&lt;/strong&gt; with &lt;em&gt;php:function&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;DOMXPath :: registerPHPFunctions（）&lt;/strong&gt;と&lt;em&gt;php：function&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2166b224bb4535d52f98ea4f132f0efa56c64714" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Imagick::setOption()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;Imagick :: setOption（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6086496fa1983a7c5e3d5b75c52a4ce62edec04d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;JsonSerializable::jsonSerialize()&lt;/strong&gt; example returning an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;a href=&quot;language.types.integer&quot;&gt;整数を&lt;/a&gt;返す&lt;strong&gt;JsonSerializable :: jsonSerialize（）の&lt;/strong&gt;例 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75756c97d56a3a8304c96bd2291c521e006a2f43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;QuickHashIntHash::loadFromFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;QuickHashIntHash :: loadFromFile（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12ea292f7e003c45b3541b95d02e68a87c28f645" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;QuickHashIntStringHash::loadFromFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;QuickHashIntStringHash :: loadFromFile（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="580ae9a081e542da89d9a13f4fa03e145514602b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;QuickHashStringIntHash::loadFromFile()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;QuickHashStringIntHash :: loadFromFile（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c9cb347eef4b52200204ba608d7d4c83c39f958" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Application::__construct()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;Yaf_Application :: __ construct（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1216d9bfa061b36897b05af33b9ba44985b4200b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Route_Map()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;Yaf_Route_Map（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce2abb482551ddda99aa93ca4b0d6be33ec4027e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Route_Regex and named capture ground(as of 2.3.0)()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;Yaf_Route_Regexと名前付きキャプチャグラウンド（2.3.0以降）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32a78472c697ae03be57b2e2a7da9cdc1deb9ab9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;Yaf_Route_Rewrite(as of 2.3.0)()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;Yaf_Route_Rewrite（2.3.0以降）（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f5e96dcb8cf8b7ab57c06e883a7719a76aaf098" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_filter()&lt;/strong&gt; with &lt;code&gt;flag&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;code&gt;flag&lt;/code&gt; 付きの&lt;strong&gt;array_filter（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f08b272b9c9d03fb809a532668e611e0b85d3c7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_map()&lt;/strong&gt; - using more arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;array_map（）&lt;/strong&gt; -より多くの配列を使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eff7b3ff851c636d3e5de96abf009b92e9831944" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_merge()&lt;/strong&gt; with non-array types&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 非配列型の&lt;strong&gt;array_merge（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ffb9dfc4c7141ad201d9b09fc892e8a0075a88d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;array_slice()&lt;/strong&gt; and array with mixed keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;array_slice（）&lt;/strong&gt;と混合キーの配列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c4df6702cb9c10bc70f86fa3da76a25d4c67ca1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;call_user_func()&lt;/strong&gt; using namespace name&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 名前空間名を使用した&lt;strong&gt;call_user_func（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d758b837a2edb96c71d5a794fa02f35696df179b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;date()&lt;/strong&gt; and &lt;a href=&quot;function.mktime&quot;&gt;mktime()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;date（）&lt;/strong&gt;および&lt;a href=&quot;function.mktime&quot;&gt;mktime（）の&lt;/a&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03cf9ebbf75dc5b1b8b6d4298a11263277de23eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;func_get_arg()&lt;/strong&gt; example of byref and byval arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;func_get_arg（）&lt;/strong&gt; byrefおよびbyval引数の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04806c900e3cc446a7df47d8b0db8e9e1c7aae1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;func_get_args()&lt;/strong&gt; example of byref and byval arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;byc&lt;/strong&gt;とbyvalの引数の&lt;strong&gt;func_get_args（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65a3f14282f5726cc9a35c64432eaab4370b1f67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;getopt()&lt;/strong&gt; example: Passing multiple options as one&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;getopt（）の&lt;/strong&gt;例：複数のオプションを1つとして渡す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4d41f03fb5be79b9cb49e40475f590ef78c642e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;gmp_setbit()&lt;/strong&gt; example - clearing a bit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;gmp_setbit（）の&lt;/strong&gt;例-ビットをクリアする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba5260e29a94071ad8a22c41cfdb26136c9f2bdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;http_build_query()&lt;/strong&gt; with complex arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 複雑な配列を使用した&lt;strong&gt;http_build_query（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bb0ea6e9dae057bb9ca2b195ed907e41eb99953" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;imagefilter()&lt;/strong&gt; colorize example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;imagefilter（）&lt;/strong&gt; colorizeの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e16f5aba029ca0dff1f7763d59ac60262c27468" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;in_array()&lt;/strong&gt; with an array as needle&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 配列を針として使用する&lt;strong&gt;in_array（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5f069b29a07c8e1f9b57b5f47be1b120e2bbbec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;iterator_count()&lt;/strong&gt; in &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; loops&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例＃3 &lt;strong&gt;iterator_count（）&lt;/strong&gt;内&lt;a href=&quot;control-structures.foreach&quot;&gt;のforeach&lt;/a&gt;ループ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba9d024f009647a4c6ce411ea9322721018d157b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;microtime()&lt;/strong&gt; and &lt;em&gt;REQUEST_TIME_FLOAT&lt;/em&gt; (as of PHP 5.4.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;microtime（）&lt;/strong&gt;および&lt;em&gt;REQUEST_TIME_FLOAT&lt;/em&gt;（PHP 5.4.0以降）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02a29a697db9355db219c5d197449929dd160dd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;parse_ini_file()&lt;/strong&gt; parsing a php.ini file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 php.iniファイルを解析する&lt;strong&gt;parse_ini_file（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="167f49be933e355b371f5a67f936d5e402afd7b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;password_hash()&lt;/strong&gt; example setting salt manually&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;password_hash（）の&lt;/strong&gt;例で手動でソルトを設定する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56da65809632cb933e8c7ec70b01d560054e1219" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;pathinfo()&lt;/strong&gt; example for a dot-file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 ドットファイルの&lt;strong&gt;pathinfo（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="201aa4299cc8f631a26114f6f6a485aaa17f7c09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;preg_replace_callback()&lt;/strong&gt; using recursive structure to handle encapsulated BB code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 カプセル化されたBBコードを処理するために再帰的な構造を使用する&lt;strong&gt;preg_replace_callback（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="938586c75c08de6bb9da79c7826536ff30122f2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;setcookie()&lt;/strong&gt; and arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;setcookie（）&lt;/strong&gt;と配列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b80e08942a23a6632ed9f3378b530f0ed713441a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;socket_select()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;socket_select（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71d06c9f52e4deba78c5f0b5e88eaa38e56f8634" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;strtr()&lt;/strong&gt; behavior comparison&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;strtr（）の&lt;/strong&gt;動作比較&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7b28a1901396b31f6d5083e62beae4670b93f81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;token_get_all()&lt;/strong&gt; on a class using a reserved word example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 予約語の例を使用したクラスでの&lt;strong&gt;token_get_all（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee07bf591ffbd09b41c61d47043c7438764072a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;unpack()&lt;/strong&gt; example with unnamed keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 名前のないキーを&lt;strong&gt;使用したunpack（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c844aae6d4b5a8a3a0f2a587a3e12fabc68a619" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;usort()&lt;/strong&gt; example using a member function of an object &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 オブジェクトのメンバー関数を使用した&lt;strong&gt;usort（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6bbe4ed2067654a53ae841429923672d663b7890" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 &lt;strong&gt;wordwrap()&lt;/strong&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;wordwrap（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4bbcec31eba25603f15294088095b780aa3e2699" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 A &lt;a href=&quot;class.mysqli-result&quot;&gt;mysqli_result&lt;/a&gt; example comparing &lt;a href=&quot;class.iterator&quot;&gt;iterator&lt;/a&gt; usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;a href=&quot;class.iterator&quot;&gt;イテレータの&lt;/a&gt;使用法を比較する&lt;a href=&quot;class.mysqli-result&quot;&gt;mysqli_resultの&lt;/a&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd4ee329ded5b74740fdfdb83eeec9a4383909a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Accessing internal classes in namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3名前空間の内部クラスへのアクセス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb97860bfa3e1a5f534bd61d972ca878751a8e6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Add two e-mail addresses to a user&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3ユーザーに2つの電子メールアドレスを追加する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e41419b2faaa798bbc1470def8db15e364ffa039" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Alternate Precedence Order Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3代替優先順位の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16f479eb045e0755514e9c90d510cc6ba1d442f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Argument swapping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3引数の交換&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e297c0391f420b6a39435d12ca99840080d70bed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Assigning a default value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3デフォルト値の割り当て&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef7068f2d8d6e12fa0a548acf5ca11d246006164" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Autoloading with exception handling for 5.3.0+&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 5.3.0以降の例外処理を伴うオートロード&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f6d0ef7d67494ecc6c808995127a55b48c265fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Basic &lt;strong&gt;substr()&lt;/strong&gt; usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3基本的な&lt;strong&gt;substr（）の&lt;/strong&gt;使用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00d83db1b8e4a783433b23b56d9d34560d774fa5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Beware when adding months&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3月を追加するときは注意してください&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d605c2189b61186ea270b3230cefdcd04a59d2a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Beware when subtracting months&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3月を減算するときは注意してください&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45ccc7e4cc01b737fe2dfc5adeae992ed5ea80e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Bit shifting on integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3整数のビットシフト&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf7a11c529d9afd9ab8dacdd6fc383bb6a204b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Building a UTF-8 string from individual bytes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3個々のバイトからのUTF-8文字列の構築&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7eba5ff2fa2f65aec3bc663a518c88ec97235390" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 CASE_FIRST rules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 CASE_FIRSTルール&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4404cd93669a08c876362fc0df0f4c23df08eaff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Call a stored procedure with an INOUT parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 INOUTパラメータを使用してストアドプロシージャを呼び出す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="829a65e1c47cf49c6cb04b614aecbd9c68fc3a84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Calling a parent's method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3親のメソッドを呼び出す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="288b629feb280b513353df7396191bf21f05418c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Calling sandbox functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3サンドボックス関数の呼び出し&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7b4e6f6b24404f37a89ec5cae375e8acba8e027" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Connect on a specifed port.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3指定したポートに接続します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8af398acf8e707bef81dd5941f3576fe56296fca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Constant Declaration as of PHP 7.1.0&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 PHP 7.1.0以降の定数宣言&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="804ae5fb683555736cd125b97bc95274d58ea7e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Construction order&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3構築順序&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17ac020251cf4538fc7a1a14394123b723a15217" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Create a PDO instance using an alias&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3エイリアスを使用してPDOインスタンスを作成する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5dbfad8563dc381d9b706dc38820a5c4cf73ca4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Create a complex gradient from the polynomial (4x^2 - 4x^2 + 1) modulated by a sinusoidal gradient &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3正弦波勾配で変調された多項式（4x ^ 2-4x ^ 2 + 1）から複雑な勾配を作成する &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3b55ffcbd5975fd78236b0ffcbaf7ce52bb7a8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Creating an instance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3インスタンスの作成&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30997402c1ed14cd0a5c9257412f4408f7dea2f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Cross platform compatible example using the &lt;em&gt;%e&lt;/em&gt; modifier&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;em&gt;％e&lt;/em&gt;修飾子を使用したクロスプラットフォーム互換の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b582b8a1dec8c2f9b37525594f994bb71aff598" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Declaring an encoding for the script.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3スクリプトのエンコーディングを宣言します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f918b1a7c1ad3a7fcc082df152f2d54043e198cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Declaring multiple namespaces and unnamespaced code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3複数の名前空間と名前空間のないコードの宣言&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="601eb69e63e04a9235c4dc7a53d3f6346e6a309d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Destructor Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3デストラクタの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a3afa206af5246388b14e2f8aba086fd5f1c6df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Erode &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 Erode &lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45c54df1726ee27db42a84da4a865bc953769209" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Example demonstrating superglobals and scope&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3スーパーグローバルとスコープを示す例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2ca5048ba4a58fbdbc841251188e73ab4d0c064" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Example with &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; argument&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;引数を使用した例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="011819bcdeda73b6b67928c38ad83507349ab40b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Execute a prepared statement with an array of insert values (placeholders)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3挿入値の配列（プレースホルダー）を使用して準備済みステートメントを実行する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54383a095d8bc473fafcbf882c6e78e185095cfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Expectations without a custom exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3カスタム例外のない期待&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0311cdb873809f3733ae6d92166ef44a8efacc15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Finding the month a week is in&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3週のある月を見つける&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4db24ceff742acf2ecb4982263ee32011ae4e79d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Format string with literal characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3リテラル文字を含むフォーマット文字列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed81a63c023fd3b6c15dcc61c880476f4f42df1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Functions within functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3関数内の関数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23f822db0145da57b25017eeb9df088367f1c6f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Get the column of usernames from the public &quot;username&quot; property of an object &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3オブジェクトのパブリック「username」プロパティからユーザー名の列を取得する &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="118f50c75324615bfeb203fb9b3cbe0eb4f88379" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Getting the domain name out of a URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 URLからドメイン名を取得する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b81888c0630cb4fa31beb5c9176648bed2fb0df3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Grouping all values by a single column&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3すべての値を単一の列でグループ化する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b72e3a73c6f4e875e88d7c5bf36242bca4d3275" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Heredoc string quoting example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3ヒアドキュメントの文字列引用の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91184091b1a2a1ab0184ffb7f2367a75d397c191" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Hourly watcher&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3時間ごとのウォッチャー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b035e927dd40373a39b9da2ba2bd9ecb6c93cf8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Importing and dynamic names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3インポートと動的な名前&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea4db4c95fadf882bc74a320ce2764d83b2466f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Inheriting variables from the parent scope&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3親スコープからの変数の継承&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a83ddb50bc01cbdce4eadd5affaa7a486496cd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Integer overflow on a 64-bit system&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 64ビットシステムでの整数オーバーフロー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b81880694fe3bcdbf26abd0857aeb03341f69ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Iterable return type example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3反復可能な戻り値型の例 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="612db78ed02d3ca1e02bfe32175032d7c9440fd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 JSON_NUMERIC_CHECK option example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 JSON_NUMERIC_CHECKオプションの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff929528457db9fc71afb0cd44c901c450b3fa43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Last day of a month&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3月の最終日&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb8bc1c062a8351c7c6c36529d880f680be8680a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Load class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3ロードクラスの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0da699e8d87dfee84ffcbe992108f726daf3a29b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Midnight sun&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3真夜中の太陽&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ccf5733ef8dec54152e08897d7858ec438f71ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Mixed &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; and &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;と&lt;a href=&quot;language.types.string&quot;&gt;文字列の&lt;/a&gt;混合キー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7f264eff463aaff92745669d376a3ae08929d79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Multiple interface inheritance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3複数のインターフェースの継承&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="553c92929898fb77736f52b6047604507e602891" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Namespaced ::class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3名前空間付き::クラスの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f23c6d14bd8be6de8a132c4aae3beb5680a4953c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Object Iteration implementing IteratorAggregate&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 IteratorAggregateを実装するオブジェクト反復&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68737ef7441753381be375536407e02d76b021b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Old methods of accessing user input&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3ユーザー入力にアクセスする古い方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7920612ad10165b40aa9e65b9e4896329111545d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Outputting the image at 75% quality to the browser&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3ブラウザーに75％の品質で画像を出力する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04506f73fd70d4425ff983aaf3088b46dafe54ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Outputting the image with a different foreground&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3異なるフォアグラウンドで画像を出力する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22fd54d8fd7282f2906d0bd523b7ae27f44dd05b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Overriding the cookie lifetime&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 Cookieの有効期間を上書きする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="deac3e59729a63bf5906ef03fe2942eea5c41f03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Printing all the credits&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3すべてのクレジットを印刷する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fd8596cea450b06eefc1d8cbc5fc5daf22edfc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Quoting a complex string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3複雑な文字列を引用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f45b20a5f15bc01f3144e13d041e7a4fa3b8944" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Reading a section of a file&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3ファイルのセクションを読み取る&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e5574650f084b48c9640c0555afa1fddc7d07c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 References and foreach statement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3参照とforeachステートメント&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3aabd27efc21fa45612c1666831980448e38023" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Remote &lt;strong&gt;fread()&lt;/strong&gt; examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3リモートの&lt;strong&gt;fread（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb8053e094d2af75bbcc00380fd1256d5dff8db2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Replace URLs with links&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 URLをリンクに置き換える&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70069ddc16a971c7fd4d0aa795dacce40ab142cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Replacing several values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3複数の値を置き換える&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7909c60e1312e82af22eff749d7862e0a3e7d531" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Resuming a download at position 100 to a new file with &lt;strong&gt;ftp_nb_get()&lt;/strong&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;ftp_nb_get（）を&lt;/strong&gt;使用して、位置100から新しいファイルへのダウンロードを&lt;strong&gt;再開する&lt;/strong&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2e8f11399b6329edb979a31fd543e3284d8f7d80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Retrieving owner document&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3オーナードキュメントの取得&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d69ca07f317605b2ca0212c0790dd15471005708" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Returning a reference from a function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3関数から参照を返す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="051852cabb2d9b723b2e7a4f1d0e9bc57ab9885e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Rewrite rule for Lighttpd&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 Lighttpdの書き換えルール&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e5ccbd2a9c90a32f372f5383299a6233761ef16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 SPARSECOLORMETHOD_SPEPARDS &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 SPARSECOLORMETHOD_SPEPARDS &lt;strong&gt;Imagick :: sparseColorImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fc10e07823b3a540f0a85d7cd838db93f716e29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Sending mail with extra headers as &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3追加のヘッダーを&lt;a href=&quot;language.types.array&quot;&gt;配列&lt;/a&gt;としてメールを送信する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="563c7e61df80dc207e2b3c10dab9ac3066fe1d6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Shutdown functions and destructors run regardless&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3シャットダウン関数とデストラクタは関係なく実行されます&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd808ce65e7c507e56ce5d040d610db666bb764f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Sorting database results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3データベースの結果の並べ替え&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11a0f51d908feb7a62f4f078e9e6d9af7345afb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Splitting a string into matches and their offsets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3文字列を一致とそのオフセットに分割する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86d605b1d8c763fb917261512023d565c723cc6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Stream wrapper and image, can be used with the xml function as well&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3ストリームラッパーと画像、xml関数でも使用できます&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1629d9a96eeef27394c4bece7537068283bdd9b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 This will not work&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3これは機能しません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a0be896c1775eae2a6b139fc99d465ce833ad471" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Throwing an Exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3例外を投げる&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="09da7de0bce77106a3e83846d08f5e4322818d68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Use of default parameters in functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3関数でのデフォルトパラメータの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec8818d82f96c6709ad78a2d5be231a9835317a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;a href=&quot;language.oop5.magic#object.invoke&quot;&gt;__invoke()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;a href=&quot;language.oop5.magic#object.invoke&quot;&gt;__invoke（）の&lt;/a&gt;使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20ec0536f3ac3ed5c4f2fbd899377ab82703c340" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; (since PHP 5.1.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state（）の&lt;/a&gt;使用（PHP 5.1.0以降）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12296fcc7de70167e6e86a3aeab20c850fa67240" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;em&gt;instanceof&lt;/em&gt; to check if object is &lt;em&gt;not&lt;/em&gt; an instanceof a class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;em&gt;instanceof&lt;/em&gt;を使用して、オブジェクトがクラスのインスタンスでは&lt;em&gt;ない&lt;/em&gt;かどうかを確認する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6babc6ff6c62e0edcb768d093b86d90ec50eef5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;strong&gt;crypt()&lt;/strong&gt; with different hash types&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 異なるハッシュタイプでの&lt;strong&gt;crypt（）の&lt;/strong&gt;使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26784abf134b4037d1631574a60157686f7be4a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using &lt;strong&gt;get_class()&lt;/strong&gt; with namespaced classes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 名前空間クラスでの&lt;strong&gt;get_class（）の&lt;/strong&gt;使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a61b81f8f3b3696ec4690f9441b4c07cce68f4ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using a non &quot;string&quot; needle&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3「文字列」以外の針の使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b6696cc557473b2ed3fec270b861578c1cfaade6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using an offset&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3オフセットの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b3af34e7c4646acae0ffa4b84056438316beffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using anonymous functions as callback functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3匿名関数をコールバック関数として使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49c98dcaf6ac2d7ffc1a4132480975642f4f9c26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using lambda function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3ラムダ関数の使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a67cd57cbb13d61de67eca0ab0e5d547ff4849d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using named subpattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3名前付きサブパターンの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c999e6d62a7c5b655dd5fdb61f95c3d41c1cfd0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Using nested &lt;strong&gt;list()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3ネストした&lt;strong&gt;list（）の&lt;/strong&gt;使用&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d43afd42e1e6ef8cc4e5a3c4126412058f1fbc24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Variable method example with static properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3静的プロパティを持つ変数メソッドの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d1b944209b7cad95521aaf648632a2e79b562c6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Various newline separators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3さまざまな改行セパレータ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15f4f540d65eb3a6a73c534f021bc463a26af3bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 With &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;オブジェクト&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="237b0596f2a79ef84e19663488bff721597bb837" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 Yielding &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;s&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;の生成&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="faf2ddd9fbfce66427a2a8fc0181e4af4f2a7830" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 common mistakes using &lt;strong&gt;json_decode()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 &lt;strong&gt;json_decode（）&lt;/strong&gt;を使用した一般的な間違い&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56eaa8e5d3d1bce13dfefe73febecfce1fda6906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 getimagesize (URL)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 getimagesize（URL）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b853698d3d80da91c71397f756d6b165e54ea13b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 parsemoldb.php - parses moldb.xml into an array of molecular objects &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3 parsemoldb.php-moldb.xmlを解析して分子オブジェクトの配列に変換します &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa01169aecf99dc2f16d8ff354de7a2516df7d5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #3 using __NAMESPACE__ for dynamic name construction&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例3動的な名前の構築に__NAMESPACE__を使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fca5d63d5b143b5f0a91b0e513eedc42b984c718" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;code&gt;depth&lt;/code&gt; errors&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;code&gt;depth&lt;/code&gt; エラー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6b38ebdd8114c776e200cd834255c5b2ed665bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;&lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt;&lt;/strong&gt; example for Memcached v1 and v2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;strong&gt; &lt;code&gt;Memcached::GET_PRESERVE_ORDER&lt;/code&gt; &lt;/strong&gt; v1およびv2の&lt;strong&gt;Memcached :: GET_PRESERVE_ORDERの&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c04c4569a4ba78100ae39add99c4b80bf338d629" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;JsonSerializable::jsonSerialize()&lt;/strong&gt; example returning a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;a href=&quot;language.types.string&quot;&gt;文字列を&lt;/a&gt;返す&lt;strong&gt;JsonSerializable :: jsonSerialize（）の&lt;/strong&gt;例 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c77f43db153e76bdd5db8a6a493ceb3f5fbe301" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;Yaf_Route_Regex()&lt;/strong&gt;example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;strong&gt;Yaf_Route_Regex（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0dfd711134c3be0c017d46c54d7e19a197b088b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;date()&lt;/strong&gt; Formatting&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;strong&gt;date（）の&lt;/strong&gt;フォーマット&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e55e7feae87019883368a869799bd3e6dbc022be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;getopt()&lt;/strong&gt; example: Using &lt;code&gt;optind&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;strong&gt;getopt（）の&lt;/strong&gt;例： &lt;code&gt;optind&lt;/code&gt; の使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac2b4057b0f47e8da7e7686ace7eb949556afcd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;imagefilter()&lt;/strong&gt; negate example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;strong&gt;imagefilter（）&lt;/strong&gt;否定の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="883961d61d54fdbc0ab1a2582c9c7c90ca29dcc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;password_hash()&lt;/strong&gt; example finding a good cost&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 良いコストを見つける&lt;strong&gt;password_hash（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d126c5c8b1d41f46b78535595688640fb59b864" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;substr()&lt;/strong&gt; casting behaviour&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;strong&gt;substr（）&lt;/strong&gt;キャスト動作&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="213ca1375e11917cb695e203c99e3a32e6ad9478" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 &lt;strong&gt;usort()&lt;/strong&gt; example using a &lt;a href=&quot;functions.anonymous&quot;&gt;closure&lt;/a&gt; to sort a multi-dimensional array &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;a href=&quot;functions.anonymous&quot;&gt;クロージャ&lt;/a&gt;を使用して多次元配列をソートする&lt;strong&gt;usort（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c645eb24b12b038b153e369ae293b8ef1c23ce8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Accessing an array inside double quotes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4二重引用符内の配列へのアクセス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="694d17515a14931d5db0b953e54da4198229283d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Accessing internal classes, functions or constants in namespaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4名前空間の内部クラス、関数、または定数へのアクセス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df7e1ec90553a3f270355a0d7fda9e5280e41fe1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Accessing private members of the same object type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4同じオブジェクトタイプのプライベートメンバーへのアクセス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f62e8a5deb5ed7f43feb6eda7a1a75e38872a3bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Argument swapping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4引数の交換&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84f058c3095baefef0f974eda22e1818b9e6c7d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Autoloading with exception handling for 5.3.0+ - Missing custom exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 5.3.0以降の例外処理を伴うオートロード-カスタム例外がありません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="264a949538d40b3f8a29e6dff98d0a55fcf7c515" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Basic return type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4基本的な戻り値の型宣言&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5a0e8993260c2e66a78f49c6add127c85a8733f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 CASE_LEVEL rules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 CASE_LEVELルール&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86446c4476f75e71d7b409db85fa6e4fc491bd9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Case insensitive sorting&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4大文字と小文字を区別しないソート&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60678a5c21f6b0396584d870b646b61b9f005059" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Change a user's password&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4ユーザーのパスワードを変更する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c2a9c3e00cc695634ef07fdc21a39c5a791f086" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Closures and scoping&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4クロージャーとスコープ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa781d50dc30aca38c13a9efa917e69832c0e103" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Comparing return value of include&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4インクルードの戻り値の比較&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49e6cfeebd42c026c838a36ba8537e093bf1f17e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Complex callables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4複雑な呼び出し可能オブジェクト&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7cffa40d8a9343e13b3e4b30a0d362042855d012" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Constant expression example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4定数式の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0587ba2dcb18a21a6c903913181eab3561f92eb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Creating an array of arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4配列の配列を作成する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="743189b554d53f72082d8120fbcb98af64f8b82b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Declaring multiple namespaces and unnamespaced code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4複数の名前空間と名前空間のないコードの宣言&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="767842190432fd576c3bcc8f2854e38323191ae4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Display all known and unknown formats.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4既知および未知のすべての形式を表示します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88cb509e54a76512d5c387f3382140f2d8cd08b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Erode Intensity &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4侵食強度&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38e7c1ea2093623f509a1ffbe892e3142367e920" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Example demonstrating need for static variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4静的変数の必要性を示す例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37b67ed23400c2ad043e1c074c6d54144782e24f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Exception handling with a &lt;em&gt;finally&lt;/em&gt; block&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;em&gt;finally&lt;/em&gt;ブロックを使用した例外処理&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fc7837a5071001d184d93e1ba31ce349c680fc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Execute a prepared statement with question mark placeholders&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4疑問符のプレースホルダーを使用して準備済みステートメントを実行する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57735942fb252f0515f58cb940ccf26dca7c47eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Expectations with a custom exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4カスタム例外がある期待&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84c9c8b11e7d4ab1fe64c38051a2b74eba1d24af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Forwarding and non-forwarding calls&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4通話の転送と非転送&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7347ee04ce7dcc0505fbff16eca574e4a3b18db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Get the column of names from the private &quot;name&quot; property of an object using the magic &lt;strong&gt;__get()&lt;/strong&gt; method. &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4マジック&lt;strong&gt;__get（）&lt;/strong&gt;メソッドを使用して、オブジェクトのプライベート「name」プロパティから名前の列を取得します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5057839f9690873aa7405b4925ceca43d8652fa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Heredoc in arguments example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4引数の例のヒアドキュメント&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2aa279029fca0809730abb705151c071783560f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Importing and fully qualified names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4インポートおよび完全修飾名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a8fbbce2e7460bb113c1a78469b7ae2eca7e86f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Indexed arrays without key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4キーのないインデックス付き配列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b32ab5fba2e67951fd90a2628b563ccc65b822e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Instantiating a class for each result&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4結果ごとにクラスをインスタンス化する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6042b662c9cb328667860e31b5ab5fd65ce51538" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Interfaces with constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4定数を持つインターフェース&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd6d4034a67830f27ae6e7bba646b082520d2773" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Iterable generator return type example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4反復可能なジェネレータの戻り値の型の例 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4293bd08eb57cf8c1545da8b2ad21e5e30c2e4d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Load namespace class example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4名前空間クラスのロードの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f51e147b76505c15193de490563db8f209b9cdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 More complex form variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4より複雑なフォーム変数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="986d8af14696a64da46cee6fd66877a7076e3077" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Multiple Traits Usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4複数のトレイトの使用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d44ff4b44d53dd3eaba88d5a827d3e34a08ec0b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Non-obvious Ternary Behaviour&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4自明ではない3値動作&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb744c41dfd4a35f8cc19b7b4b4dfb70457efde7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Object Assignment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4オブジェクトの割り当て&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e772949384e937349096068474c82b55059ebbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Passing arguments to sandbox functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4サンドボックス関数に引数を渡す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b22babc9acd44aa461b3cc3b24c1159a694225b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Passing values by reference&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4参照によって値を渡す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb883d9916d2896f54720cfb1dc11021e8a4c912" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Reading the session and closing it&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4セッションを読んで閉じる&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a6476fab04f3477995d1fac11cd33435f5b71fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Recursive functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4再帰関数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb500b82ef31846a41cd39190f110a2d64922ee7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Rewrite rule for Nginx&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 Nginxの書き換えルール&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2addc5131e251d8bbaea590aa9154d3aa750deed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 SPARSECOLORMETHOD_VORONOI &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 SPARSECOLORMETHOD_VORONOI &lt;strong&gt;Imagick :: sparseColorImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8320fa2159c6ffe9a7ebd3ea1dcb217e76ab38a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Sending mail with an additional command line parameter.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4追加のコマンドラインパラメータを使用してメールを送信する。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae257df7c88291531ba1031da2718ea44ab18259" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Sequential versus non-sequential array example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4順次配列と非順次配列の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bd50189ef67a5fbb4a41d2565c498622dc55e1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Strip whitespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4空白を取り除く&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb43741bcd127f23a78943691d0a90bb2b38b56b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; (since PHP 5.1.0)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state（）の&lt;/a&gt;使用（PHP 5.1.0以降）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7db6c371d02e04612029b36466c193cf6ff1e2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;em&gt;instanceof&lt;/em&gt; with interfaces&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 インターフェースでの&lt;em&gt;instanceofの&lt;/em&gt;使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53180981dd8a4f9ef57f9784e8b8a92af945421f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;strong&gt;http_build_query()&lt;/strong&gt; with an object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 オブジェクトでの&lt;strong&gt;http_build_query（）の&lt;/strong&gt;使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2596a72873c658f3c650ed7ba8a4d309c782c8e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using &lt;strong&gt;list()&lt;/strong&gt; with array indices&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 配列のインデックスでの&lt;strong&gt;list（）の&lt;/strong&gt;使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97069ed7cb0793a5d4e9778b7692da0932f61b36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using a class method with &lt;strong&gt;call_user_func()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 &lt;strong&gt;call_user_func（）での&lt;/strong&gt;クラスメソッドの使用&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d2c61db89e16c43f6461d88e654457e7ab8b8d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using named subpattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4名前付きサブパターンの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5853605d575c94e2c9e719a507e106b8a0e03a02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using non-scalar types as default values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4非スカラー型をデフォルト値として使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f70d8d1638d547149e61f3a91841243ee5bcc2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Using stream contexts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4ストリームコンテキストの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56580b505ad2e70a6f313b0bf14d218eac10fd2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 Yielding values by reference&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4参照による値の生成&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e23c4c24d9ea8de0631211941e957492905260b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 getimagesize() returning IPTC&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4 getimagesize（）がIPTCを返す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d34be0de0d742688d70d2368e54763273439746f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #4 the namespace operator, inside a namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例4名前空間内の名前空間演算子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3acc67e46d71015019b0577f6df284d1b278f738" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;a href=&quot;class.yaf-route-static&quot;&gt;Yaf_Route_Static&lt;/a&gt;(default route)example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;a href=&quot;class.yaf-route-static&quot;&gt;Yaf_Route_Static&lt;/a&gt;（デフォルトルート）例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6831aec55adf69e6c8bc89b7069cc8da2e83eba0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;em&gt;include&lt;/em&gt; and the &lt;a href=&quot;function.return&quot;&gt;return&lt;/a&gt; statement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;em&gt;include&lt;/em&gt;と&lt;a href=&quot;function.return&quot;&gt;return&lt;/a&gt;ステートメント&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76be70222be580ecc5bed343f16dfb79f8af756c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;&lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt;&lt;/strong&gt; option example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;strong&gt; &lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt; &lt;/strong&gt;オプションの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="521a27d607b3ce5f61886f8685897b57e56e7e03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;array_map()&lt;/strong&gt; - with string keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;strong&gt;array_map（）&lt;/strong&gt; -文字列キーを使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="226010a76bc30b2c4e04cd5ba3c5326f7cb4ae81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;imagefilter()&lt;/strong&gt; pixelate example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;strong&gt;imagefilter（）pixelateの&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="257295346ed4ee26ca3cc048d437fa74990ebd4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;json_decode()&lt;/strong&gt; of large integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;strong&gt;長&lt;/strong&gt;整数の&lt;strong&gt;json_decode（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="610e572ef6a884cfdb0a54e8730ad7d30400c391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;list()&lt;/strong&gt; and order of index definitions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;strong&gt;list（）&lt;/strong&gt;とインデックス定義の順序&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17925b7c0697b51b876814c9ba3ee2f0dd14ea7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;password_hash()&lt;/strong&gt; example using Argon2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 Argon2を使用した&lt;strong&gt;password_hash（）の&lt;/strong&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03d8eb38d26a9787089cbc5139f4aea646332015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 &lt;strong&gt;yield from&lt;/strong&gt; with &lt;a href=&quot;function.iterator-to-array&quot;&gt;iterator_to_array()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;a href=&quot;function.iterator-to-array&quot;&gt;iterator_to_array（）を使用&lt;/a&gt;した&lt;strong&gt;収量&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="995e266994f5f115f7c1b5bfd21d36aa0bb14a8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 A &lt;a href=&quot;function.setcookie&quot;&gt;setcookie()&lt;/a&gt; example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;a href=&quot;function.setcookie&quot;&gt;setcookie（）の&lt;/a&gt;例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81b40e435082e45924d728383d3b0f198cc1a290" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Assigning a default value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5デフォルト値の割り当て&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3bc8f694eb0881f293be8b77f6c7bd949a69b1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Automatic binding of &lt;em&gt;$this&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;em&gt;$ thisの&lt;/em&gt;自動バインディング&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8409eb28492c1ca25f8610c475b4050c164e84ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Calling a function for each result&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5結果ごとに関数を呼び出す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86d6daad04c588d3fae011cbb58852ae0757aa69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Change a user's password (Active Directory)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5ユーザーのパスワードを変更する（Active Directory）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab0629a99968d83fe753fb21a0f7e15353d0e912" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Class constant visibility modifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5クラス定数の可視性修飾子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd0994cd322141256e1c1918e6be42ef0eacdc78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Conflict Resolution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5競合の解決&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f2a98740c8c9c46857330e8217811ce26eb32a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Creating new objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5新しいオブジェクトの作成&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d71c831d950d4d6a7f929627c634e80def4a788e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Dilate &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;strong&gt;Imagick :: morphology（）の&lt;/strong&gt;拡張&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24b447119355d5d5b1c9355954bab71edf7b7214" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Example use of static variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5静的変数の使用例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad3c61394e2032c9e62c89d65b25d56da365f7ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Execute a prepared statement using array for IN clause&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 IN句の配列を使用して準備済みステートメントを実行する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10446a7daf7b6ab1a5be489d16ea5192184a5f8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Fully Qualified names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5完全修飾名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="949847cae36debeb583547f36317c04616575dff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Illegal importing rule&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5不正なインポートルール&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ebafaa223f72f8c64c56660f447b5faea223cb36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Incorrect usage of default function arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5デフォルトの関数引数の誤った使用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7f570a9c2d016ceaaa80035881940889abf0935" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Iterable type variance example &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5反復可能な型分散の例 &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e7a068c90f9fc977333d80f98e2e641b4802391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Keys not on all elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5すべての要素にあるわけではないキー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01ef1df8168b73858e5425e442e5d6b0c6326027" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 MVC class loading example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 MVCクラスのロードの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85931308f3bc8a6a7b638e1e5ba883c920d6640c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Nested Exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5ネストされた例外&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="984634c5501a9b717db8b2f1c1641d7ff3d51c3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 SPARSECOLORMETHOD_BARYCENTRIC &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 SPARSECOLORMETHOD_BARYCENTRIC &lt;strong&gt;Imagick :: sparseColorImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f770cd6b38ffd6dcb5af5ce17a3538fca645e142" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Sending HTML email&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 HTMLメールの送信&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27812c82a3ad767161062594c9393ffd44eab971" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Specifying padding character&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5パディング文字の指定&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85b0d003e846595425c648e22a6f9f28351b316d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Strict mode in action&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5厳格モードの動作&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b71ce744eec24a6effd63b6b40ff42629f6fa396" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using &lt;a href=&quot;language.oop5.magic#object.debuginfo&quot;&gt;__debugInfo()&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;a href=&quot;language.oop5.magic#object.debuginfo&quot;&gt;__debugInfo（）の&lt;/a&gt;使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="844b26d06cc5920d8a580992e0a7155195fb55a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using &lt;em&gt;instanceof&lt;/em&gt; with other variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;em&gt;instanceof&lt;/em&gt;を他の変数とともに使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d015425c842ee54dd5cf1f0d29df710229e5ff6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using Heredoc to initialize static values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5ヒアドキュメントを使用して静的な値を初期化する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e71ee85bedf4647b6c7f3c0660f8c25d9f633e63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using lambda function with &lt;strong&gt;call_user_func()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;strong&gt;call_user_func（）で&lt;/strong&gt;ラムダ関数を使用する&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4e23d36a78ca578fdf95e2b777067b79c1ed6e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 Using the &lt;code&gt;count&lt;/code&gt; parameter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5 &lt;code&gt;count&lt;/code&gt; パラメータの使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a56b435ddd7e97a4d5cd63c03752dd6c71a74fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #5 the namespace operator, in global code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例5グローバルコードでの名前空間演算子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0e565b16d760c1a1be40ec22bb2d62fe01033af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 &lt;strong&gt;list()&lt;/strong&gt; with keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6 &lt;strong&gt;list（）&lt;/strong&gt;とキー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0e4994906ba0465b1f1c4bed47b4ef422d5ac7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Access member of newly created object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6新しく作成されたオブジェクトのメンバーにアクセスする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5265b3e6ed2b223318bc2084cb772e391fccdde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Accessing array elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6配列要素へのアクセス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb2d15aa94c36863c9636fe97c7ee06036e4de2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Attempting to use &lt;em&gt;$this&lt;/em&gt; inside a static anonymous function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6 静的無名関数内で&lt;em&gt;$ this&lt;/em&gt;を使用しようとする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e42cc25b3641832cfbb65df4cf4271f7f4a206f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Basic use of &lt;strong&gt;yield from&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6 &lt;strong&gt;収量の&lt;/strong&gt;基本的な使用法&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ccddc32cdb80b7be849ad2c49f3d388eb23bf599" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Changing Method Visibility&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6メソッドの可視性の変更&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4e93ae301856c5634b41832b349059419561d31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Correct usage of default function arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6デフォルトの関数引数の正しい使用法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e28ef338073d175f81ae333969b6b48da0fce611" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Dilate intensity &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6輝度の&lt;strong&gt;拡張Imagick :: morphology（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f98a5c805ce0b33a10965ca936e1256b3cc3e600" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 MVC class distinctions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6 MVCクラスの違い&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb2c57094b2bba6f09a02699472bb42abdf89bd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Multi catch exception handling&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6マルチキャッチ例外処理&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46e29f7cc8dd7ee682928053a0220a8e99bf8784" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Nesting null coalescing operator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6 nullの合体演算子のネスト&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c52b520b5a5d21b2a874c9bc653a7b7d22d919d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Position specifier with other specifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6位置指定子と他の指定子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec5a6188482d2efc49c5299551a8ef57f20d2ab9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Qualified names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6修飾名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9615c92ec4c7255a094632bd693395c010e7ca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Returning an object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6オブジェクトを返す&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2db1400a6033cfc52d55fcdd69a7f7e1a092c69b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Static variables with recursive functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6再帰関数を持つ静的変数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79927a81ee16dcc05e98ee2925f5eebf3bb669bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using &lt;em&gt;instanceof&lt;/em&gt; to test other variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6 &lt;em&gt;instanceof&lt;/em&gt;を使用して他の変数をテストする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc515c5815e245a05ce31de6cba359671ec8d80e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using double quotes in Heredoc&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6ヒアドキュメントでの二重引用符の使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab06e8dc3bb60fbbe074366ecb31bfa817da38c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 Using output buffering to include a PHP file into a string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6出力バッファリングを使用してPHPファイルを文字列に含める&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c21a36872ca8d40a449daa1766d2b444c61579e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #6 createGradientImage is used by other examples. &lt;strong&gt;Imagick::sparseColorImage()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例6 createGradientImageは他の例で使用されています。&lt;strong&gt;Imagick :: sparseColorImage（）&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9ad6aea31ed180961c5cb2cd38b1a9825846666" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt;: various examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7 &lt;a href=&quot;function.printf&quot;&gt;printf（）&lt;/a&gt;：さまざまな例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd1491a44507e731530d7d6059692eb92fb6c08c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 &lt;strong&gt;yield from&lt;/strong&gt; and return values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7 &lt;strong&gt;収量&lt;/strong&gt;と戻り値&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99394c085583adca22543b9054947dfa8bd2156a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Array dereferencing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7配列の逆参照&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90445a97aa1955beb151d99438016809636a5064" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Attempting to bind an object to a static anonymous function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7オブジェクトを静的無名関数にバインドしようとする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="090159e08cbfb9988687a3a6673713eeb567c92d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Avoiding classname lookups and fatal errors with &lt;em&gt;instanceof&lt;/em&gt; in PHP 5.0&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7 PHP 5.0の&lt;em&gt;instanceof&lt;/em&gt;でクラス名の検索と致命的なエラーを回避する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="403c542e6ada7ec22a714b24f03a73d7b68cd7b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Basic class type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7基本的なクラス型宣言&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aebda1f57216ef4eec626f284b5bb29214fb7c6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Declaring static variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7静的変数の宣言&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f2d1df63a6268db7f0bad3631f6204275fed46a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Distance with Chebyshev kernel &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7チェビシェフカーネル&lt;strong&gt;Imagick :: morphology（）を使用した&lt;/strong&gt;距離&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53f8fae0b9dbe0c9c4aaba7040ab9f5c8a852327" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 MVC loading example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7 MVCロードの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00b6a779069ca46956997dd9b5386500cb8e4081" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Nowdoc string quoting example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7 Nowdoc文字列引用の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8468235df9dcc1eff2414026090532e5b23f412" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Property access vs. method call&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7プロパティへのアクセスとメソッドの呼び出し&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d95757040a1e1150f36bae445c2f60462728b0be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Traits Composed from Traits&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7特性から構成される特性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e7b29e21f0e1ea7fc1b11bf269892f90e4ae5b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #7 Unqualified class names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例7修飾されていないクラス名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5515b84edc59fecfb4212c95b00dd19d0b2f6258" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt;: string specifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例8 &lt;a href=&quot;function.printf&quot;&gt;printf（）&lt;/a&gt;：文字列指定子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34bd705f5a5f5d8b8c8e549afbb5dda55f3df715" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Basic interface type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例8基本的なインターフェース型宣言&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c7a37bf108c8f9af20c9f9d187eec5ab0acbe35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Calling an anonymous function stored in a property&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例8プロパティに保存されている無名関数の呼び出し&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79182a32c0bce69a0ce59569625c283089cd847f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Distance with Manhattan kernel &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例8マンハッタンカーネル&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;との距離&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5855ce424e9422b1f2819acd2f23e44bd335d6cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Express Requirements by Abstract Methods&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例8抽象メソッドによる要件の明示&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9cfb8a07bd2306236c1857a1019fbce8c95edd95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Static data example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例8静的データの例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a24fba9290c7f14ebb68e0b13b934cf33c37f5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Unqualified function or constant names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例8修飾されていない関数または定数名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a50cc80720e13918d640a63e104bd60906eabac6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #8 Using array()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例8 array（）の使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afcc6b4ad2ba1da1226628b2c9d27c56e8597556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 &lt;strong&gt;sprintf()&lt;/strong&gt;: zero-padded integers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例9 &lt;strong&gt;sprintf（）&lt;/strong&gt;：ゼロ詰め整数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f0b1f85a420944d026810d6c7a61ed5031d0081" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Collection&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例9コレクション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4211ccf8af0e61ba89b69bd408d3e42d4d6a08ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Dangers of using namespaced names inside a double-quoted string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例9二重引用符で囲まれた文字列内で名前空間のある名前を使用する危険性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6a51501f1c78aa43469389c6f9ac8ee3724e0e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Distance with ocatagonal kernel &lt;strong&gt;Imagick::morphology()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例9八角形カーネル&lt;strong&gt;Imagick :: morphology（）&lt;/strong&gt;を使用した距離&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed7213ecea93113c76cab84258ac62fd14e3c4de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Nullable type declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例9 null可能型宣言&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ec84fcf7958245ea932f8e33b3a245a804142c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Simple Class Inheritance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例9単純なクラスの継承&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7e557fdcd81c4b47fff7a1da928cad0dab4e97b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Simple syntax example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例9簡単な構文の例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="edc3e5200eaf9dd5c6b166574e8f7fd03555fbef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example #9 Static Variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例9静的変数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ea0b19bcbb6f9ede718d873e272f8daf1ba19a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exception&lt;/strong&gt; is the base class for all Exceptions in PHP 5, and the base class for all user exceptions in PHP 7.</source>
          <target state="translated">&lt;strong&gt;Exception&lt;/strong&gt;は、PHP 5ではすべての例外の基本クラスであり、PHP 7ではすべてのユーザー例外の基本クラスです。</target>
        </trans-unit>
        <trans-unit id="074052f1b11c47ef8e47dd6b3d480afa2c8e3a8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exception&lt;/strong&gt;implements&lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;例外&lt;/strong&gt;は&lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="155669af023af4d3cc9cb683b6f5f12d97482b41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FilesystemIterator&lt;/strong&gt;extends&lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;implements &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;FilesystemIteratorは&lt;/strong&gt;延び&lt;a href=&quot;class.directoryiterator&quot;&gt;のDirectoryIterator&lt;/a&gt;実装&lt;a href=&quot;class.seekableiterator&quot;&gt;のSeekableIteratorを&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="cdb06c463f0b3b379522777b911659b70d1ae7b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FilterIterator::next()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;FilterIterator::next()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ffc37d7c4c67a04b62d8eddd8dc145e3e7e9f1e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Flag values for msg_receive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;msg_receiveのフラグ値&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb6b27376c897c93ca34ef6983c56f013ef7da89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Font file format&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;フォントファイルフォーマット&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9209ce4d4c2ff032fcad9856308fac5dee95ca35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full &lt;strong&gt;ob_get_status()&lt;/strong&gt; results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;ob_get_status（）の&lt;/strong&gt;完全な結果&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f205a702d05a13d9db682eb9ee34aeae7a1b8e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GMP&lt;/strong&gt;implements &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;GMP&lt;/strong&gt;は&lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2dfdda9f2f26bb785e1cf5acdbfbb667e449ea73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanClient&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanClient&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="cdb33891580a267ced868c6c2ee34f852fcc4cda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanException&lt;/strong&gt;は&lt;a href=&quot;class.exception&quot;&gt;例外を&lt;/a&gt;拡張します {</target>
        </trans-unit>
        <trans-unit id="517f2617ef9de7d145991ab7b7c845e4771168b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanJob&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanJob&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="6bb1178f49fc6343e9890b859ee3ace41577837f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanTask&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanTask&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="54f6ec39d5a22b3853f36f85c77ed88e58f1eb8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GearmanWorker&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GearmanWorker&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="15df518f2dfb6ba6c76960853c08a385ce5f3624" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generator&lt;/strong&gt; objects are returned from &lt;a href=&quot;https://secure.php.net/manual/en/language.generators.php&quot;&gt;generators&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;ジェネレータ&lt;/strong&gt;オブジェクトから返される&lt;a href=&quot;https://secure.php.net/manual/en/language.generators.php&quot;&gt;発電機&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c861016f30528079ecde02c3de71e2253f4323a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generator&lt;/strong&gt; objects cannot be instantiated via &lt;a href=&quot;language.oop5.basic#language.oop5.basic.new&quot;&gt;new&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;ジェネレーター&lt;/strong&gt;オブジェクトは&lt;a href=&quot;language.oop5.basic#language.oop5.basic.new&quot;&gt;new&lt;/a&gt;を介してインスタンス化できません。</target>
        </trans-unit>
        <trans-unit id="de2e67f561886b0f7669c582ae6a57e7e178b228" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ジェネレーター&lt;/strong&gt;は&lt;a href=&quot;class.iterator&quot;&gt;イテレーターを&lt;/a&gt;実装します{</target>
        </trans-unit>
        <trans-unit id="045a2f72332d73007ff5e2dfed83199aa6e9792d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GlobIterator&lt;/strong&gt;extends&lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator&lt;/a&gt;implements &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;GlobIteratorは&lt;/strong&gt;延び&lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator&lt;/a&gt;器具&lt;a href=&quot;class.seekableiterator&quot;&gt;のSeekableIterator&lt;/a&gt;、&lt;a href=&quot;class.countable&quot;&gt;可算を&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="84e2d5ec32dc4c4cc6c6f47164d7fe485aec50b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Gmagick&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Gmagick&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b4b2c79b313138c65e50a096b297cc3a154328b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GmagickDraw&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GmagickDraw&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="14e5f24aef87434a62d06278ba85633f49a77bfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GmagickPixel&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;GmagickPixel&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="943111d3f54d409d1300f0283cdf5065f1b37275" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HashContext&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;HashContext&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="e7e8224490730b998781aa7179599d6bb5424985" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Highlighting options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;強調表示オプション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="636da423c5d7f0a4c4b5e54218f45b657006e172" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Imagetype Constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;画像タイプ定数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="288b92ac47cf2adbeb07368f1c8ca8668eb9f62f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Imagick::setResolution()&lt;/strong&gt; must be called before loading or creating an image.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;画像をロードまたは作成する前に、&lt;strong&gt;Imagick :: setResolution（）を呼び出す&lt;/strong&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="873cb38b04a4738ea3c6f610d83bbf931d64bfdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Imagick&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Imagick&lt;/strong&gt;は&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d276d5787e737cef49bee07348d73da54ce878b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickDraw&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickDraw&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="928db3cc3d702a3f6c6169f5c53b3de190b0bf66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickKernel&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickKernel&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="df5b2cc17ddf5780bdb88d3e2e4e2922bebbc00c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickPixel&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickPixel&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="d76584fcd098276242c8ea96ef9f79a64d001adf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ImagickPixelIterator&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ImagickPixelIterator&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4ee5512c4fa24de1458aebddbfc0b168699f266a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Increment/decrement Operators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;インクリメント/デクリメント演算子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28225585302f759fa89e3f9ff3ea2390d61167d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;InfiniteIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;InfiniteIterator&lt;/strong&gt;は、&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt;が&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="0410699deeb126b300516366c901258df1960596" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Internal option letters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;内部オプション文字&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7bb76b68d3abcd73f6356076cda916675c0af57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlBreakIterator&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlBreakIterator&lt;/strong&gt;は&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="86d80dff3e9d7ccdcf801bacef261dace0f7318b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlCalendar&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlCalendar&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="f0ecd5d4d54dfc992bf2e7f1c7ca43d0a0e0f74a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlCodePointBreakIterator&lt;/strong&gt;extends&lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlCodePointBreakIterator&lt;/strong&gt; extends &lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt; implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="264ab4f2aab50dbd2ff9828d415202f7549e1ae7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlDateFormatter&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlDateFormatter&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="82d1ac3b1654ea499dece3565ce3b9259d80ce37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlException&lt;/strong&gt;は&lt;a href=&quot;class.exception&quot;&gt;例外&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="04ead559cbc117a4132280e1d25284667d6007d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlGregorianCalendar&lt;/strong&gt;extends&lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlGregorianCalendar&lt;/strong&gt;は&lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="4543aedf00f06eccb9baff5f51ae83d1df9c452e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlIterator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlIterator&lt;/strong&gt;は&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d9182241f8e98f2c648dd214af2c4c997050a124" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlPartsIterator&lt;/strong&gt;extends&lt;a href=&quot;class.intliterator&quot;&gt;IntlIterator&lt;/a&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlPartsIterator&lt;/strong&gt; extends &lt;a href=&quot;class.intliterator&quot;&gt;IntlIterator&lt;/a&gt; implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="5d2cb2ee647e65ecdf85da022023c56f724538aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlRuleBasedBreakIterator&lt;/strong&gt;extends&lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlRuleBasedBreakIterator&lt;/strong&gt; extends &lt;a href=&quot;class.intlbreakiterator&quot;&gt;IntlBreakIterator&lt;/a&gt; implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="1bc9f9cd084e7a50d26d319b3c1bda899d6ccc8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IntlTimeZone&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;IntlTimeZone&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="e07ad0983a5305528572d092f59764daa20d5116" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;InvalidArgumentException&lt;/strong&gt;extends&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;InvalidArgumentException&lt;/strong&gt;は&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="4bde7189e2003f31609f50a4266210576d89f9be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Iterator&lt;/strong&gt;extends&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;イテレータ&lt;/strong&gt;は&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="ed47866cc44690b1d2626d173d29915ffaee3980" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IteratorAggregate&lt;/strong&gt;extends&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IteratorAggregate&lt;/strong&gt;は&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2a135087bbf4e9225031d3af7aff017a436ae575" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IteratorIterator&lt;/strong&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;IteratorIterator&lt;/strong&gt;は&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="cdad00ebe62d3dfa08521a41b2230a0628710a87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSON error codes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JSONエラーコード&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e240ee797ed7ca4f096fc2c0c76d372b7194f874" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JsonSerializable&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;JsonSerializable&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="7c66397042069afb75e7e36521641ffc2f671b75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Judy&lt;/strong&gt;implements &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Judy&lt;/strong&gt;は&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;、&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b0476eeefd1ed88636b06aadae8ce7df5e307641" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Key elements of the returned associative array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;返される連想配列の主要な要素&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b84385fcb02705ee02202cabc8d8ff66e870ebd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Known errors that point to &lt;strong&gt;main()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;main（）&lt;/strong&gt;を指す既知のエラー&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43dfe536a5714631d59e59169b3495db46ee1658" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LONGVARBINARY handling&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;LONGVARBINARYの処理&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1b8eac3e23e1dc5502ce7b32e7a4113ba750399" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LengthException&lt;/strong&gt;extends&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;LengthException&lt;/strong&gt;は&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="45536f9531348b0322ccd5ccc2e37486c21cfe5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LimitIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;LimitIteratorは&lt;/strong&gt;延び&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt;実装&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="c0d3f3e572c8d3c2a8781caa5671f4849d06863a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;List of possible limits returned&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;返される可能性のある制限のリスト&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7206c8725d19cd1f3979008fc0672939aede3e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Locale&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ロケール&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4b99ff2fc25071ff2ede90da3a9146a51920a253" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LogicException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;LogicException&lt;/strong&gt;は&lt;a href=&quot;class.exception&quot;&gt;例外&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="240824b16d094a97c00269c3f31353b4da023b8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Logical Operators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;論理演算子&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="763f7df9acb231b880b15b0f769fea9bf70b5561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Lua&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ルア&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b7a858251b1fe131e7c6d586c422eff439744651" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LuaClosure&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;LuaClosure&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="2e59d6a27db549a4ea2b8085164731acf543c4ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mailbox properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;メールボックスのプロパティ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86e6108738973b6ccb7d1abb97adcf3a566db3df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Match modes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;マッチモード&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d184751a113de21c637db849e8da265feb8bf351" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::add()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, but the operation fails if the &lt;code&gt;key&lt;/code&gt; already exists on the server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: add（）&lt;/strong&gt;は&lt;a href=&quot;memcached.set&quot;&gt;Memcached :: set（）&lt;/a&gt;に似ていますが、 &lt;code&gt;key&lt;/code&gt; がサーバーにすでに存在する場合、操作は失敗します。</target>
        </trans-unit>
        <trans-unit id="42d6af1f3bab5f4e54b3b1247eabd9a80fbdff2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::addByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.add&quot;&gt;Memcached::add()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: addByKey（）&lt;/strong&gt;は、機能的に&lt;a href=&quot;memcached.add&quot;&gt;Memcached :: add（）&lt;/a&gt;と同等ですが、自由形式の &lt;code&gt;server_key&lt;/code&gt; を使用して &lt;code&gt;key&lt;/code&gt; を特定のサーバーにマップできる点が異なります。これは、特定のサーバーに関連するキーをまとめて保持する必要がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="7e6994cb7e36be4d5840744fe569d1b834705673" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::addServer()&lt;/strong&gt; adds the specified server to the server pool. No connection is established to the server at this time, but if you are using consistent key distribution option (via &lt;strong&gt;&lt;code&gt;Memcached::DISTRIBUTION_CONSISTENT&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;Memcached::OPT_LIBKETAMA_COMPATIBLE&lt;/code&gt;&lt;/strong&gt;), some of the internal data structures will have to be updated. Thus, if you need to add multiple servers, it is better to use &lt;a href=&quot;memcached.addservers&quot;&gt;Memcached::addServers()&lt;/a&gt; as the update then happens only once.</source>
          <target state="translated">&lt;strong&gt;Memcached :: addServer（）&lt;/strong&gt;は、指定されたサーバーをサーバープールに追加します。現在、サーバーへの接続は確立されていませんが、一貫したキー配布オプションを使用している場合（&lt;strong&gt; &lt;code&gt;Memcached::DISTRIBUTION_CONSISTENT&lt;/code&gt; &lt;/strong&gt;または&lt;strong&gt; &lt;code&gt;Memcached::OPT_LIBKETAMA_COMPATIBLE&lt;/code&gt; &lt;/strong&gt;）、一部の内部データ構造を更新する必要があります。したがって、複数のサーバーを追加する必要がある場合は、更新が1回だけ行われるため、&lt;a href=&quot;memcached.addservers&quot;&gt;Memcached :: addServers（）&lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0396d56c46871de589937b68228131be7078d0b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::addServers()&lt;/strong&gt; adds &lt;code&gt;servers&lt;/code&gt; to the server pool. Each entry in &lt;code&gt;servers&lt;/code&gt; is supposed to be an array containing hostname, port, and, optionally, weight of the server. No connection is established to the servers at this time.</source>
          <target state="translated">&lt;strong&gt;Memcached :: addServers（）&lt;/strong&gt;は、 &lt;code&gt;servers&lt;/code&gt; をサーバープールに追加します。 &lt;code&gt;servers&lt;/code&gt; 各エントリは、ホスト名、ポート、およびオプションでサーバーの重みを含む配列であると想定されています。現在、サーバーへの接続は確立されていません。</target>
        </trans-unit>
        <trans-unit id="44004bda011a5148264cff66531d872e84dba2fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::append()&lt;/strong&gt; appends the given &lt;code&gt;value&lt;/code&gt; string to the value of an existing item. The reason that &lt;code&gt;value&lt;/code&gt; is forced to be a string is that appending mixed types is not well-defined.</source>
          <target state="translated">&lt;strong&gt;Memcached :: append（）&lt;/strong&gt;は、指定された &lt;code&gt;value&lt;/code&gt; 文字列を既存のアイテムの値に追加します。 &lt;code&gt;value&lt;/code&gt; が文字列に強制される理由は、混合型の追加が明確に定義されていないためです。</target>
        </trans-unit>
        <trans-unit id="807f6adedf615d7dd83e761a3064419ed391ae44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::appendByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.append&quot;&gt;Memcached::append()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: appendByKey（）&lt;/strong&gt;は機能的に&lt;a href=&quot;memcached.append&quot;&gt;Memcached :: append（）&lt;/a&gt;と同等ですが、自由形式の &lt;code&gt;server_key&lt;/code&gt; を使用して &lt;code&gt;key&lt;/code&gt; を特定のサーバーにマッピングできる点が異なります。</target>
        </trans-unit>
        <trans-unit id="cb91a045c1f600e9365cb7d66db74011c780ad0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::cas()&lt;/strong&gt; performs a &quot;check and set&quot; operation, so that the item will be stored only if no other client has updated it since it was last fetched by this client. The check is done via the &lt;code&gt;cas_token&lt;/code&gt; parameter which is a unique 64-bit value assigned to the existing item by memcache. See the documentation for &lt;strong&gt;Memcached::get*()&lt;/strong&gt; methods for how to obtain this token. Note that the token is represented as a double due to the limitations of PHP's integer space.</source>
          <target state="translated">&lt;strong&gt;Memcached :: cas（）&lt;/strong&gt;は「チェックおよび設定」操作を実行するため、このクライアントが最後にフェッチしてから他のクライアントがアイテムを更新していない場合にのみアイテムが保存されます。チェックは、memcacheによって既存のアイテムに割り当てられた一意の64ビット値である &lt;code&gt;cas_token&lt;/code&gt; パラメータを介して行われます。このトークンを取得する方法については、&lt;strong&gt;Memcached :: get *（）&lt;/strong&gt;メソッドのドキュメントを参照してください。 PHPの整数スペースの制限により、トークンはdoubleとして表されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9512c4c172c3f9e57a5f8170994dba6265ab1d4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::casByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.cas&quot;&gt;Memcached::cas()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: casByKey（）&lt;/strong&gt;は機能的に&lt;a href=&quot;memcached.cas&quot;&gt;Memcached :: cas（）&lt;/a&gt;と同等ですが、自由形式の &lt;code&gt;server_key&lt;/code&gt; を使用して &lt;code&gt;key&lt;/code&gt; を特定のサーバーにマップすることができます。これは、特定のサーバーに関連するキーをまとめて保持する必要がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="5980debd160c4d456f91c3d5138710f2af668179" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::decrement()&lt;/strong&gt; decrements a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. If the operation would decrease the value below 0, the new value will be 0. &lt;strong&gt;Memcached::decrement()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: decrement（）は&lt;/strong&gt;、数値アイテムの値を指定された &lt;code&gt;offset&lt;/code&gt; 分デクリメントします。アイテムの値が数値でない場合、エラーが発生します。操作によって値が0未満に減少すると、新しい値は0になります。キーが存在しない場合、&lt;strong&gt;Memcached :: decrement（）&lt;/strong&gt;は項目を &lt;code&gt;initial_value&lt;/code&gt; パラメーターに設定します。</target>
        </trans-unit>
        <trans-unit id="07adef0227b3f3fa98510c982447e5968f8ab4b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::decrementByKey()&lt;/strong&gt; decrements a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. If the operation would decrease the value below 0, the new value will be 0. &lt;strong&gt;Memcached::decrementByKey()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: decrementByKey（）は&lt;/strong&gt;、数値アイテムの値を指定された &lt;code&gt;offset&lt;/code&gt; 分デクリメントします。アイテムの値が数値でない場合、エラーが発生します。操作によって値が0未満に減少する場合、新しい値は0になります。キーが存在しない場合、&lt;strong&gt;Memcached :: decrementByKey（）&lt;/strong&gt;はアイテムを &lt;code&gt;initial_value&lt;/code&gt; パラメーターに設定します。</target>
        </trans-unit>
        <trans-unit id="66c41426fbd8918858dbe60647ec9f9959e408f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::delete()&lt;/strong&gt; deletes the &lt;code&gt;key&lt;/code&gt; from the server. The &lt;code&gt;time&lt;/code&gt; parameter is the amount of time in seconds (or Unix time until which) the client wishes the server to refuse &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; commands for this key. For this amount of time, the item is put into a delete queue, which means that it won't possible to retrieve it by the &lt;em&gt;get&lt;/em&gt; command, but &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; command with this key will also fail (the &lt;em&gt;set&lt;/em&gt; command will succeed, however). After the time passes, the item is finally deleted from server memory. The parameter &lt;code&gt;time&lt;/code&gt; defaults to 0 (which means that the item will be deleted immediately and further storage commands with this key will succeed).</source>
          <target state="translated">&lt;strong&gt;Memcached :: delete（）&lt;/strong&gt;はサーバーから &lt;code&gt;key&lt;/code&gt; を削除します。 &lt;code&gt;time&lt;/code&gt; パラメータは、クライアントが拒否するようにサーバーを希望する（これまで、またはUnix時間）秒単位の時間の量で&lt;em&gt;加える&lt;/em&gt;と&lt;em&gt;置き換える&lt;/em&gt;このキーのコマンドを。この時間の間、アイテムは削除キューに入れられます。つまり、&lt;em&gt;get&lt;/em&gt;コマンドでアイテムを取得することはできませんが、このキーを使用した&lt;em&gt;add&lt;/em&gt;および&lt;em&gt;replace&lt;/em&gt;コマンドは失敗します（&lt;em&gt;set&lt;/em&gt;コマンドは成功しますが、 ）。時間が経過すると、アイテムは最終的にサーバーのメモリから削除されます。パラメータ &lt;code&gt;time&lt;/code&gt; デフォルトは0です（つまり、アイテムはすぐに削除され、このキーを使用した以降のストレージコマンドは成功します）。</target>
        </trans-unit>
        <trans-unit id="08a41a3b238ec5c02be1d88977d2515d8dc2602e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::deleteByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.delete&quot;&gt;Memcached::delete()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: deleteByKey（）&lt;/strong&gt;は機能的に&lt;a href=&quot;memcached.delete&quot;&gt;Memcached :: delete（）&lt;/a&gt;と同等ですが、自由形式の &lt;code&gt;server_key&lt;/code&gt; を使用して &lt;code&gt;key&lt;/code&gt; を特定のサーバーにマッピングできる点が異なります。</target>
        </trans-unit>
        <trans-unit id="1e65c5453200d81c7447d14919b0481ffd918494" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::deleteMulti()&lt;/strong&gt; deletes the array of &lt;code&gt;keys&lt;/code&gt; from the server. The &lt;code&gt;time&lt;/code&gt; parameter is the amount of time in seconds (or Unix time until which) the client wishes the server to refuse &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; commands for these keys. For this amount of time, the item is put into a delete queue, which means that it won't be possible to retrieve it by the &lt;em&gt;get&lt;/em&gt; command, but &lt;em&gt;add&lt;/em&gt; and &lt;em&gt;replace&lt;/em&gt; command with these keys will also fail (the &lt;em&gt;set&lt;/em&gt; command will succeed, however). After the time passes, the item is finally deleted from server memory. The parameter &lt;code&gt;time&lt;/code&gt; defaults to 0 (which means that the item will be deleted immediately and further storage commands with these keys will succeed).</source>
          <target state="translated">&lt;strong&gt;Memcached :: deleteMulti（）&lt;/strong&gt;は、サーバーから &lt;code&gt;keys&lt;/code&gt; の配列を削除します。 &lt;code&gt;time&lt;/code&gt; パラメータは、クライアントが拒否するようにサーバーを希望する（これまで、またはUnix時間）秒単位の時間の量で&lt;em&gt;加える&lt;/em&gt;と&lt;em&gt;置き換える&lt;/em&gt;これらのキーのためのコマンドを。この時間の間、アイテムは削除キューに入れられます。つまり、&lt;em&gt;get&lt;/em&gt;コマンドでアイテムを取得することはできませんが、これらのキーを使用した&lt;em&gt;add&lt;/em&gt;および&lt;em&gt;replace&lt;/em&gt;コマンドは失敗します（&lt;em&gt;set&lt;/em&gt;コマンドは成功しますが、しかしながら）。時間が経過すると、アイテムは最終的にサーバーのメモリから削除されます。パラメータ &lt;code&gt;time&lt;/code&gt; デフォルトは0です（つまり、アイテムはすぐに削除され、これらのキーを使用した以降のストレージコマンドは成功します）。</target>
        </trans-unit>
        <trans-unit id="be46b99cb8671d669f4b231c7ce72548544f6382" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::deleteMultiByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.deletemulti&quot;&gt;Memcached::deleteMulti()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;keys&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;memcachedの:: deleteMultiByKeyは（）&lt;/strong&gt;と機能的に同等である&lt;a href=&quot;memcached.deletemulti&quot;&gt;のMemcached :: deleteMulti（）&lt;/a&gt;フリーフォームことを除いて、 &lt;code&gt;server_key&lt;/code&gt; をマッピングするために使用することができる &lt;code&gt;keys&lt;/code&gt; 特定のサーバに。</target>
        </trans-unit>
        <trans-unit id="fddbbec7cfddae4d996f4e4cf9c4c864234e204c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::fetch()&lt;/strong&gt; retrieves the next result from the last request.</source>
          <target state="translated">&lt;strong&gt;Memcached :: fetch（）&lt;/strong&gt;は、最後のリクエストから次の結果を取得します。</target>
        </trans-unit>
        <trans-unit id="27a7ff1f95c302e06bf48018735fa36c286abb97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::fetchAll()&lt;/strong&gt; retrieves all the remaining results from the last request.</source>
          <target state="translated">&lt;strong&gt;Memcached :: fetchAll（）&lt;/strong&gt;は、最後のリクエストから残りのすべての結果を取得します。</target>
        </trans-unit>
        <trans-unit id="6879f9e4d7dd9e0358e6b5e0618e645a4260cf9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::flush()&lt;/strong&gt; invalidates all existing cache items immediately (by default) or after the &lt;code&gt;delay&lt;/code&gt; specified. After invalidation none of the items will be returned in response to a retrieval command (unless it's stored again under the same key after &lt;strong&gt;Memcached::flush()&lt;/strong&gt; has invalidated the items). The flush does not actually free all the memory taken up by the existing items; that will happen gradually as new items are stored.</source>
          <target state="translated">&lt;strong&gt;Memcached :: flush（）は&lt;/strong&gt;、既存のすべてのキャッシュアイテムをすぐに（デフォルトで）、または指定された &lt;code&gt;delay&lt;/code&gt; 後に無効にします。無効化後、取得コマンドに応答してアイテムは返されません（ただし、&lt;strong&gt;Memcached :: flush（）&lt;/strong&gt;がアイテムを無効化した後、同じキーの下に再度格納されている場合を除く）。フラッシュは、既存のアイテムによって使用されているすべてのメモリを実際には解放しません。新しいアイテムが保存されると、それは徐々に起こります。</target>
        </trans-unit>
        <trans-unit id="c89f7156c52ee5d3ef7c5b59e23a78beba830b85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::get()&lt;/strong&gt; returns the item that was previously stored under the &lt;code&gt;key&lt;/code&gt;. If the item is found and the &lt;code&gt;flags&lt;/code&gt; is given &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt;, it will also return the CAS token value for the item. See &lt;a href=&quot;memcached.cas&quot;&gt;Memcached::cas()&lt;/a&gt; for how to use CAS tokens. &lt;a href=&quot;https://secure.php.net/manual/en/memcached.callbacks.php&quot;&gt;Read-through caching callback&lt;/a&gt; may be specified via &lt;code&gt;cache_cb&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;Memcached :: get（）&lt;/strong&gt;は、 &lt;code&gt;key&lt;/code&gt; 下に以前に保存されたアイテムを返します。アイテムが見つかり、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt; &lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt; &lt;/strong&gt;が指定されている場合、アイテムのCASトークン値も返されます。CASトークンの使用方法については、&lt;a href=&quot;memcached.cas&quot;&gt;Memcached :: cas（）&lt;/a&gt;を参照してください。&lt;a href=&quot;https://secure.php.net/manual/en/memcached.callbacks.php&quot;&gt;リードスルーキャッシュコールバック&lt;/a&gt;は、 &lt;code&gt;cache_cb&lt;/code&gt; パラメータを介して指定できます。</target>
        </trans-unit>
        <trans-unit id="9213d480760b5377462f1ff500a10200cb02d7e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getAllKeys()&lt;/strong&gt; queries each memcache server and retrieves an array of all keys stored on them at that point in time. This is not an atomic operation, so it isn't a truly consistent snapshot of the keys at point in time. As memcache doesn't guarantee to return all keys you also cannot assume that all keys have been returned.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getAllKeys（）は、&lt;/strong&gt;各memcacheサーバーにクエリを実行し、その時点でサーバーに格納されているすべてのキーの配列を取得します。これはアトミック操作ではないため、ある時点でのキーの完全に一貫したスナップショットではありません。memcacheはすべてのキーを返すことを保証しないため、すべてのキーが返されたと想定することもできません。</target>
        </trans-unit>
        <trans-unit id="58a1e0c4b5ac2a60e0946bd3a97dbcdc5fba12e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.get&quot;&gt;Memcached::get()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getByKey（）&lt;/strong&gt;は機能的には&lt;a href=&quot;memcached.get&quot;&gt;Memcached :: get（）&lt;/a&gt;と同等ですが、自由形式の &lt;code&gt;server_key&lt;/code&gt; を使用して &lt;code&gt;key&lt;/code&gt; を特定のサーバーにマップできる点が異なります。</target>
        </trans-unit>
        <trans-unit id="1212ad36dc3e6bebe95c7480fe6d848258a363ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getDelayed()&lt;/strong&gt; issues a request to memcache for multiple items the keys of which are specified in the &lt;code&gt;keys&lt;/code&gt; array. The method does not wait for response and returns right away. When you are ready to collect the items, call either &lt;a href=&quot;memcached.fetch&quot;&gt;Memcached::fetch()&lt;/a&gt; or &lt;a href=&quot;memcached.fetchall&quot;&gt;Memcached::fetchAll()&lt;/a&gt;. If &lt;code&gt;with_cas&lt;/code&gt; is true, the CAS token values will also be requested.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getDelayed（）&lt;/strong&gt;は、 &lt;code&gt;keys&lt;/code&gt; 配列でキーが指定されている複数のアイテムをmemcacheにリクエストします。メソッドは応答を待たずにすぐに戻ります。アイテムを収集する準備ができたら、&lt;a href=&quot;memcached.fetch&quot;&gt;Memcached :: fetch（）&lt;/a&gt;または&lt;a href=&quot;memcached.fetchall&quot;&gt;Memcached :: fetchAll（）を&lt;/a&gt;呼び出します。場合 &lt;code&gt;with_cas&lt;/code&gt; が真である、CASトークン値も要求されます。</target>
        </trans-unit>
        <trans-unit id="c505ccc443f88f3b6c591c99b28d961e2e3ff751" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getDelayedByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.getdelayed&quot;&gt;Memcached::getDelayed()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;keys&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;memcachedの:: getDelayedByKeyは（）&lt;/strong&gt;と機能的に同等である&lt;a href=&quot;memcached.getdelayed&quot;&gt;のMemcached :: getDelayed（） &lt;/a&gt;、フリーフォームことを除い &lt;code&gt;server_key&lt;/code&gt; をマッピングするために使用することができる &lt;code&gt;keys&lt;/code&gt; 特定のサーバに。</target>
        </trans-unit>
        <trans-unit id="01e7d15f8826cd9fdeae49598315962659df727d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getMulti()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.get&quot;&gt;Memcached::get()&lt;/a&gt;, but instead of a single key item, it retrieves multiple items the keys of which are specified in the &lt;code&gt;keys&lt;/code&gt; array.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getMulti（）&lt;/strong&gt;は&lt;a href=&quot;memcached.get&quot;&gt;Memcached :: get（）&lt;/a&gt;に似ていますが、単一のキーアイテムの代わりに、 &lt;code&gt;keys&lt;/code&gt; 配列でキーが指定されている複数のアイテムを取得します。</target>
        </trans-unit>
        <trans-unit id="df3adf0d3ea5de9786eb06bb3427044f0e4bded8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getMultiByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.getmulti&quot;&gt;Memcached::getMulti()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;keys&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getMultiByKey（）&lt;/strong&gt;は、機能的に&lt;a href=&quot;memcached.getmulti&quot;&gt;Memcached :: getMulti（）&lt;/a&gt;と同等ですが、自由形式の &lt;code&gt;server_key&lt;/code&gt; を使用して &lt;code&gt;keys&lt;/code&gt; を特定のサーバーにマップできる点が異なります。</target>
        </trans-unit>
        <trans-unit id="40b24476d57c18e234198c85b4497dca0f35b1d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getOption()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Memcached::getOption()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dab7f9eaad5612ba67fd2daab249dde562a79f8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getResultCode()&lt;/strong&gt; returns one of the &lt;strong&gt;&lt;code&gt;Memcached::RES_*&lt;/code&gt;&lt;/strong&gt; constants that is the result of the last executed Memcached method.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getResultCode（）&lt;/strong&gt;は、最後に実行されたMemcachedメソッドの結果である&lt;strong&gt; &lt;code&gt;Memcached::RES_*&lt;/code&gt; &lt;/strong&gt;定数の1つを返します。</target>
        </trans-unit>
        <trans-unit id="7c5dc8362db8aa55f80601eb9b3e908626c29037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getResultMessage()&lt;/strong&gt; returns a string that describes the result code of the last executed Memcached method.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getResultMessage（）&lt;/strong&gt;は、最後に実行されたMemcachedメソッドの結果コードを説明する文字列を返します。</target>
        </trans-unit>
        <trans-unit id="576294e5171249c81dab1ddc161381473c704c0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getServerByKey()&lt;/strong&gt; returns the server that would be selected by a particular &lt;code&gt;server_key&lt;/code&gt; in all the &lt;strong&gt;Memcached::*ByKey()&lt;/strong&gt; operations.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getServerByKey（）&lt;/strong&gt;は、すべての&lt;strong&gt;Memcached :: * ByKey（）&lt;/strong&gt;操作で特定の &lt;code&gt;server_key&lt;/code&gt; によって選択されるサーバーを返します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc34f0f60a78f7d3824ac28de9641704ce69dda0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getServerList()&lt;/strong&gt; returns the list of all servers that are in its server pool.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getServerList（）&lt;/strong&gt;は、サーバープールにあるすべてのサーバーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="6ead3517e0a9dfc90353fe45b9b466ad93a0aac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getStats()&lt;/strong&gt; returns an array containing the state of all available memcache servers. See &lt;a href=&quot;http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt&quot;&gt;&amp;raquo; memcache protocol&lt;/a&gt; specification for details on these statistics.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getStats（）&lt;/strong&gt;は、使用可能なすべてのmemcacheサーバーの状態を含む配列を返します。参照してください&lt;a href=&quot;http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt&quot;&gt;&amp;raquo;memcacheのプロトコル&lt;/a&gt;これらの統計の詳細については、仕様を。</target>
        </trans-unit>
        <trans-unit id="a36fc787ab1b3a77ee7340ee043c300b43d89508" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::getVersion()&lt;/strong&gt; returns an array containing the version info for all available memcache servers.</source>
          <target state="translated">&lt;strong&gt;Memcached :: getVersion（）&lt;/strong&gt;は、使用可能なすべてのmemcacheサーバーのバージョン情報を含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="a1c96a3778779c829d08152af6fcde8a5f30284f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::increment()&lt;/strong&gt; increments a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. &lt;strong&gt;Memcached::increment()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: increment（）は&lt;/strong&gt;、数値アイテムの値を指定された &lt;code&gt;offset&lt;/code&gt; 増分します。アイテムの値が数値でない場合、エラーが発生します。&lt;strong&gt;Memcached :: increment（）&lt;/strong&gt;は、キーが存在しない場合、アイテムを &lt;code&gt;initial_value&lt;/code&gt; パラメータに設定します。</target>
        </trans-unit>
        <trans-unit id="1366853d0e56b36d3ac6de3099d6aece46140740" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::incrementByKey()&lt;/strong&gt; increments a numeric item's value by the specified &lt;code&gt;offset&lt;/code&gt;. If the item's value is not numeric, an error will result. &lt;strong&gt;Memcached::incrementByKey()&lt;/strong&gt; will set the item to the &lt;code&gt;initial_value&lt;/code&gt; parameter if the key doesn't exist.</source>
          <target state="translated">&lt;strong&gt;Memcached :: incrementByKey（）は&lt;/strong&gt;、数値アイテムの値を指定された &lt;code&gt;offset&lt;/code&gt; インクリメントします。アイテムの値が数値でない場合、エラーが発生します。&lt;strong&gt;Memcached :: incrementByKey（）&lt;/strong&gt;は、キーが存在しない場合、アイテムを &lt;code&gt;initial_value&lt;/code&gt; パラメータに設定します。</target>
        </trans-unit>
        <trans-unit id="3058f991f9cc35c4da2795b79573c534b225fae5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::isPersistent()&lt;/strong&gt; checks if the connections to the memcache servers are persistent connections.</source>
          <target state="translated">&lt;strong&gt;Memcached :: isPersistent（）&lt;/strong&gt;は、memcacheサーバーへの接続が永続的な接続であるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="b0fe0d569dc55675de29aa793c37eddb70bde75f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::isPristine()&lt;/strong&gt; checks if the Memcache instance was recently created.</source>
          <target state="translated">&lt;strong&gt;Memcached :: isPristine（）&lt;/strong&gt;は、Memcacheインスタンスが最近作成されたかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="d16018aa873bef41fe11ec66fdc90ca29a7431d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::prepend()&lt;/strong&gt; prepends the given &lt;code&gt;value&lt;/code&gt; string to the value of an existing item. The reason that &lt;code&gt;value&lt;/code&gt; is forced to be a string is that prepending mixed types is not well-defined.</source>
          <target state="translated">&lt;strong&gt;Memcached :: prepend（）&lt;/strong&gt;は、既存のアイテムの値の前に、指定された &lt;code&gt;value&lt;/code&gt; 文字列を付加します。 &lt;code&gt;value&lt;/code&gt; が文字列になることを強制される理由は、混合型の先頭に追加することが明確に定義されていないためです。</target>
        </trans-unit>
        <trans-unit id="9530cd4a78b06c289349dc876789e5d0d9426bb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::prependByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.prepend&quot;&gt;Memcached::prepend()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: prependByKey（）&lt;/strong&gt;は、機能的に&lt;a href=&quot;memcached.prepend&quot;&gt;Memcached :: prepend（）&lt;/a&gt;と同等ですが、自由形式の &lt;code&gt;server_key&lt;/code&gt; を使用して &lt;code&gt;key&lt;/code&gt; を特定のサーバーにマッピングできる点が異なります。</target>
        </trans-unit>
        <trans-unit id="72d02060bbca223f2913c37a087c7d8b8ee4f9fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::quit()&lt;/strong&gt; closes any open connections to the memcache servers.</source>
          <target state="translated">&lt;strong&gt;Memcached :: quit（）&lt;/strong&gt;は、memcacheサーバーへの開いている接続をすべて閉じます。</target>
        </trans-unit>
        <trans-unit id="5a55b7410bda0516d00be95943919b6c961f870f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::replace()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, but the operation fails if the &lt;code&gt;key&lt;/code&gt; does not exist on the server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: replace（）&lt;/strong&gt;は&lt;a href=&quot;memcached.set&quot;&gt;Memcached :: set（）&lt;/a&gt;に似てい &lt;code&gt;key&lt;/code&gt; が、キーがサーバーに存在しない場合、操作は失敗します。</target>
        </trans-unit>
        <trans-unit id="6b4f950969017b79e68feaf502336a56b4279410" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::replaceByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.replace&quot;&gt;Memcached::replace()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: replaceByKey（）&lt;/strong&gt;は、機能的に&lt;a href=&quot;memcached.replace&quot;&gt;Memcached :: replace（）&lt;/a&gt;と同等ですが、自由形式の &lt;code&gt;server_key&lt;/code&gt; を使用して &lt;code&gt;key&lt;/code&gt; を特定のサーバーにマップできる点が異なります。これは、特定のサーバーに関連するキーをまとめて保持する必要がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="ad6bc0f97a1e8242e1e37310eec6f4eb57c7b810" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::resetserverlist()&lt;/strong&gt; removes all memcache servers from the known server list, reseting it back to empty.</source>
          <target state="translated">&lt;strong&gt;Memcached :: resetserverlist（）&lt;/strong&gt;は、既知のサーバーリストからすべてのmemcacheサーバーを削除し、空にリセットします。</target>
        </trans-unit>
        <trans-unit id="a687e427e867677f04a34e5cf298d38701c9e52e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::set()&lt;/strong&gt; stores the &lt;code&gt;value&lt;/code&gt; on a memcache server under the specified &lt;code&gt;key&lt;/code&gt;. The &lt;code&gt;expiration&lt;/code&gt; parameter can be used to control when the value is considered expired.</source>
          <target state="translated">&lt;strong&gt;Memcached :: set（）&lt;/strong&gt;は、指定された &lt;code&gt;key&lt;/code&gt; 下のmemcacheサーバーに &lt;code&gt;value&lt;/code&gt; を格納します。 &lt;code&gt;expiration&lt;/code&gt; 値が期限切れになったと考えられている時にパラメータを制御するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="49928c1f6673fd1db21d0bf2d1ef3658d6dfd87d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setByKey（）&lt;/strong&gt;は機能的に&lt;a href=&quot;memcached.set&quot;&gt;Memcached :: set（）&lt;/a&gt;と同等ですが、自由形式の &lt;code&gt;server_key&lt;/code&gt; を使用して &lt;code&gt;key&lt;/code&gt; を特定のサーバーにマッピングできる点が異なります。これは、特定のサーバーに関連するキーをまとめて保持する必要がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="c5820ffcc6bc0f83a140f27382436e5868eeb070" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setMulti()&lt;/strong&gt; is similar to &lt;a href=&quot;memcached.set&quot;&gt;Memcached::set()&lt;/a&gt;, but instead of a single key/value item, it works on multiple items specified in &lt;code&gt;items&lt;/code&gt;. The &lt;code&gt;expiration&lt;/code&gt; time applies to all the items at once.</source>
          <target state="translated">&lt;strong&gt;memcachedの:: setMultiは（）&lt;/strong&gt;に類似している&lt;a href=&quot;memcached.set&quot;&gt;:: Memcachedのセットを（） &lt;/a&gt;、その代わりに単一のキー/値のアイテムの、その中で指定された複数の項目上で動作する &lt;code&gt;items&lt;/code&gt; 。 &lt;code&gt;expiration&lt;/code&gt; 時間は、一度にすべてのアイテムに適用されます。</target>
        </trans-unit>
        <trans-unit id="78644c077456ed3c1998ed8a5dd906a4c8adcbe3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setMultiByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.setmulti&quot;&gt;Memcached::setMulti()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the keys from &lt;code&gt;items&lt;/code&gt; to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setMultiByKey（）&lt;/strong&gt;は、機能的に&lt;a href=&quot;memcached.setmulti&quot;&gt;Memcached :: setMulti（）&lt;/a&gt;と同等ですが、自由形式の &lt;code&gt;server_key&lt;/code&gt; を使用して、 &lt;code&gt;items&lt;/code&gt; から特定のサーバーにキーをマップできます。これは、特定のサーバーに関連するキーをまとめて保持する必要がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="bfda47237e51eef128c9354336d3ea9482c671e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setOptions()&lt;/strong&gt; is a variation of the &lt;a href=&quot;memcached.setoption&quot;&gt;Memcached::setOption()&lt;/a&gt; that takes an array of options to be set.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setOptions（）&lt;/strong&gt;は、設定するオプションの配列を取る&lt;a href=&quot;memcached.setoption&quot;&gt;Memcached :: setOption（）の&lt;/a&gt;バリエーションです。</target>
        </trans-unit>
        <trans-unit id="5982f15a0cb62c35f849b7926d2cd61eea8e7018" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::setSaslAuthData()&lt;/strong&gt; sets the username and password that should be used for SASL authentication with the memcache servers.</source>
          <target state="translated">&lt;strong&gt;Memcached :: setSaslAuthData（）&lt;/strong&gt;は、memcacheサーバーでのSASL認証に使用するユーザー名とパスワードを設定します。</target>
        </trans-unit>
        <trans-unit id="5c446948992f0108e7b4ce9674e9293c793a33bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::touch()&lt;/strong&gt; sets a new expiration value on the given key.</source>
          <target state="translated">&lt;strong&gt;Memcached :: touch（）&lt;/strong&gt;は、指定されたキーに新しい有効期限値を設定します。</target>
        </trans-unit>
        <trans-unit id="3e3da15f65f312ad297628b4bd3f3f9f7044469e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached::touchByKey()&lt;/strong&gt; is functionally equivalent to &lt;a href=&quot;memcached.touch&quot;&gt;Memcached::touch()&lt;/a&gt;, except that the free-form &lt;code&gt;server_key&lt;/code&gt; can be used to map the &lt;code&gt;key&lt;/code&gt; to a specific server.</source>
          <target state="translated">&lt;strong&gt;Memcached :: touchByKey（）&lt;/strong&gt;は、機能的に&lt;a href=&quot;memcached.touch&quot;&gt;Memcached :: touch（）&lt;/a&gt;と同等ですが、自由形式の &lt;code&gt;server_key&lt;/code&gt; を使用して &lt;code&gt;key&lt;/code&gt; を特定のサーバーにマッピングできる点が異なります。</target>
        </trans-unit>
        <trans-unit id="f29a7dc657ced59fb7bf5bdc2e1f38e90220c387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Memcached&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Memcached&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="842d89a94976a7b80fcaefd4eb22f4e2efc86004" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MemcachedException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;MemcachedException&lt;/strong&gt;は&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="1b1a8897182c533606118847682ccda4f3641b6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MessageFormatter&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;MessageFormatter&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4b9a61bc499f0f898f0e851ea1c5c72cdbc7e891" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Meta-characters inside square brackets (&lt;em&gt;character classes&lt;/em&gt;)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;大括弧内のメタ文字（&lt;em&gt;文字クラス&lt;/em&gt;）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5687e72bd7da329d1cf791d7c376686946713238" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Meta-characters outside square brackets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;大括弧の外側のメタ文字&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4705a4d1291e9e38a5d56c9aaa41a245324572fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MultipleIterator&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;MultipleIterator&lt;/strong&gt;は&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="11b6eb754fb062e5be7f74c4cb7b233a35f89db5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mutex&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Mutex&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="8334ebd91fc42c35d0d65c29bcb6fb9259899bd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Namespace name definitions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;名前空間名の定義&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13bdb00acf2d9089281f1436e1ef0caba4fd0c02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NoRewindIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;NoRewindIterator&lt;/strong&gt;は&lt;a href=&quot;class.iteratoriterator&quot;&gt;IteratorIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="50f93d03d7cdfd1450d9a43e321737f010334fc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Normalizer&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ノーマライザ&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="abd92687b99044b4eddf773d671c4667439b4622" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Note&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="8a99a99bbf8a401ebe0371c05923988f7d8c8dcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  %G and %V, which are based on ISO 8601:1988 week numbers can give unexpected (albeit correct) results if the numbering system is not thoroughly understood. See %V examples in this manual page.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：％Gと％Vは、ISO 8601：1988の週番号に基づいており、番号付けシステムを完全に理解していない場合、予期しない（正しいとはいえ）結果が得られる可能性があります。このマニュアルページの％Vの例を参照してください。</target>
        </trans-unit>
        <trans-unit id="9df533484a3c49877011aa8248968f349ccdbc8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  All signals will be delivered after the script wakes up.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：すべてのシグナルは、スクリプトが起動した後に配信されます。</target>
        </trans-unit>
        <trans-unit id="cdbdaee639ed243bf081704dd79909d13aa17818" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Although &lt;code&gt;connection&lt;/code&gt; can be omitted, it is not recommended, since it can be the cause of hard to find bugs in scripts.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;code&gt;connection&lt;/code&gt; は省略できますが、スクリプト内のバグを見つけるのが困難になる可能性があるため、お勧めしません。</target>
        </trans-unit>
        <trans-unit id="f9425c627f6a59329bd29f0760f52fe6aede88be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Although this function was added to PHP in PHP 7.0, a &lt;a href=&quot;https://github.com/paragonie/random_compat&quot;&gt;&amp;raquo; userland implementation&lt;/a&gt; is available for PHP 5.2 to 5.6, inclusive.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数はPHP 7.0でPHPに追加されましたが、&lt;a href=&quot;https://github.com/paragonie/random_compat&quot;&gt;&amp;raquo;ユーザーランド実装&lt;/a&gt;はPHP 5.2〜5.6で利用できます。</target>
        </trans-unit>
        <trans-unit id="aaf8e987b0f47e3ebc0fcd702aa7eef090b84ba9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Any other character sets are not recognized. The default encoding will be used instead and a warning will be emitted.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：その他の文字セットは認識されません。代わりにデフォルトのエンコーディングが使用され、警告が発行されます。</target>
        </trans-unit>
        <trans-unit id="8b854e6fd0899e415be091f22b5124716f53392e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 4.3.2, PATH_TRANSLATED is no longer set implicitly under the Apache 2</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：PHP 4.3.2以降、Apache 2でPATH_TRANSLATEDが暗黙的に設定されることはなくなりました。</target>
        </trans-unit>
        <trans-unit id="8d6dcbf7599abb2a6b88cd94c629a9dc2b4dd3a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 5, arguments that are passed by reference may have a default value.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：PHP 5以降、参照によって渡される引数にはデフォルト値が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="84c950e93e388b90697f0a23f47a1ffc8b350a79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.0.0, there are no particular restrictions regarding the length of a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; on 64-bit builds. On 32-bit builds and in earlier versions, a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; can be as large as up to 2GB (2147483647 bytes maximum)</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：PHP 7.0.0以降、64ビットビルドでの&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;の長さに関する特別な制限はありません。32ビットのビルドと以前のバージョンでは、&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;は最大2GB（最大2147483647バイト）まで可能です</target>
        </trans-unit>
        <trans-unit id="b4161f788e91717ceee93dbcc8cf6a8e14194bae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.1.0, applying the empty index operator on a string throws a fatal error. Formerly, the string was silently converted to an array.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：PHP 7.1.0以降、文字列に空のインデックス演算子を適用すると、致命的なエラーがスローされます。以前は、文字列は黙って配列に変換されていました。</target>
        </trans-unit>
        <trans-unit id="e174b1a5cf2a3a2eec1ee6fbc1f1055801933c14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.1.0, applying the empty index operator on an empty string throws a fatal error. Formerly, the empty string was silently converted to an array.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：PHP 7.1.0以降、空の文字列に空のインデックス演算子を適用すると、致命的なエラーがスローされます。以前は、空の文字列は黙って配列に変換されていました。</target>
        </trans-unit>
        <trans-unit id="ef3cec1e236d6d1c72e492b98ce212726d2438a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As of PHP 7.1.0, negative string offsets are also supported. These specify the offset from the end of the string. Formerly, negative offsets emitted &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; for reading (yielding an empty string) and &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; for writing (leaving the string untouched).</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：PHP 7.1.0以降、負の文字列オフセットもサポートされています。これらは文字列の末尾からのオフセットを指定します。以前は、負のオフセットにより、読み取り（空の文字列を生成）の場合は&lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt;が、書き込み（文字列はそのまま）の場合は&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;が&lt;strong&gt;発行&lt;/strong&gt;されていました。</target>
        </trans-unit>
        <trans-unit id="76e3d07996193b55c6942c9fd3d57dcaadd62382" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  As specified in RFC 2045, lines may not be longer than 76 characters in the &lt;code&gt;filename&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：RFC 2045で指定されているように、 &lt;code&gt;filename&lt;/code&gt; パラメーターの行は76文字以下にする必要があります。</target>
        </trans-unit>
        <trans-unit id="8cd534163f01b942b38eb38f874f397be1a4163d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Because PHP's integer type is signed and many platforms use 32bit integers, some filesystem functions may return unexpected results for files which are larger than 2GB.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：PHPの整数型は符号付きで、多くのプラットフォームは32ビット整数を使用するため、一部のファイルシステム関数は、2GBより大きいファイルに対して予期しない結果を返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="519b4af55587609ec05410a3f68942a33668fe0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Calling the constructor of class Exception from a subclass ignores the default arguments, if the properties $code and $message are already set.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：プロパティ$ codeおよび$ messageがすでに設定されている場合、サブクラスからクラスExceptionのコンストラクターを呼び出すと、デフォルトの引数は無視されます。</target>
        </trans-unit>
        <trans-unit id="26f867664cca3f992729ade47f721b3fb16bc4f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Calling this function will implicitly start output buffering if it is not active already.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数を呼び出すと、まだアクティブになっていない場合、出力バッファリングが暗黙的に開始されます。</target>
        </trans-unit>
        <trans-unit id="28a1c9a29275da7f34a9ba62d138877574cc857e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Constants and (global) variables are in a different namespace. This implies that for example &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; and &lt;var&gt;&lt;var&gt;$TRUE&lt;/var&gt;&lt;/var&gt; are generally different.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：定数と（グローバル）変数は別の名前空間にあります。これは、たとえば、&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;と &lt;var&gt;&lt;var&gt;$TRUE&lt;/var&gt;&lt;/var&gt; は一般的に異なることを意味します。</target>
        </trans-unit>
        <trans-unit id="96534583ca1843c1c564fede96c4756edc3861d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Default for &lt;em&gt;longreadlen&lt;/em&gt; is &lt;em&gt;4096&lt;/em&gt; and &lt;code&gt;mode&lt;/code&gt; defaults to &lt;em&gt;ODBC_BINMODE_RETURN&lt;/em&gt;. Handling of binary long columns is also affected by &lt;a href=&quot;function.odbc-longreadlen&quot;&gt;odbc_longreadlen()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;em&gt;longreadlenの&lt;/em&gt;デフォルトは&lt;em&gt;4096で&lt;/em&gt;、 &lt;code&gt;mode&lt;/code&gt; デフォルトは&lt;em&gt;ODBC_BINMODE_RETURN&lt;/em&gt;です。バイナリの長い列の処理も&lt;a href=&quot;function.odbc-longreadlen&quot;&gt;odbc_longreadlen（）の&lt;/a&gt;影響を受けます。</target>
        </trans-unit>
        <trans-unit id="7bde091da2aa97931158eaa5e39dcecf7c5809f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Ensure you pass arguments in the correct order when comparing similar arrays with more keys. The new array should be the first in the list.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：類似した配列をより多くのキーと比較する場合は、引数を正しい順序で渡してください。新しい配列がリストの最初になるはずです。</target>
        </trans-unit>
        <trans-unit id="627063aa15f9a893658af192a7da7719c07dc97e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Explicitly passing &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; as the &lt;code&gt;object&lt;/code&gt; is no longer allowed as of PHP 7.2.0.  The parameter is still optional and calling &lt;strong&gt;get_class()&lt;/strong&gt; without a parameter from inside a class will work, but passing &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; now emits an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; notice.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：PHP 7.2.0以降、 &lt;code&gt;object&lt;/code&gt; が明示的に&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;を渡すことが許可されなくなりました。パラメータは、まだオプションと呼んでいる&lt;strong&gt;get_class（）&lt;/strong&gt;クラスがうまくいくの内側からパラメータなしに、しかし渡す&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; は&lt;/strong&gt;今発する&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; の&lt;/strong&gt;通知を。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a914afb2a98a28aa9970f23e8eeba78e5333b47c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  For Windows only: This function requires PHP to run in an elevated mode or with the UAC disabled.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：Windowsのみ：この関数を使用するには、管理者特権モードで、またはUACを無効にしてPHPを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="eae4507513fb6abea1cd63d5b560256b0dd1e161" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  For our purposes here, a letter is a-z, A-Z, and the ASCII characters from 127 through 255 (0x7f-0xff).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：ここでの目的のために、文字はa〜z、A〜Z、および127〜255のASCII文字（0x7f-0xff）です。</target>
        </trans-unit>
        <trans-unit id="0b0cfa419db2640017089a8dacedeab505831c97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  For our purposes here, a letter is a-z, A-Z, and the bytes from 127 through 255 (&lt;em&gt;0x7f-0xff&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：ここでの目的のために、文字は&lt;em&gt;a〜z、A〜Z&lt;/em&gt;、および&lt;em&gt;127〜255&lt;/em&gt;バイト（&lt;em&gt;0x7f-0xff&lt;/em&gt;）です。</target>
        </trans-unit>
        <trans-unit id="938ef482da492e5967e823313df11f38326d338b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Function names are case-insensitive, though it is usually good form to call functions as they appear in their declaration.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：関数名は大文字と小文字を区別しませんが、通常、関数は宣言にあるとおりに呼び出すのが適切です。</target>
        </trans-unit>
        <trans-unit id="424851aefac924176cc665837d7c89ff53b169a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  GIF images consist of one or more frames, where each frame may only occupy part of the image. The size of the image which is reported by &lt;strong&gt;getimagesize()&lt;/strong&gt; is the overall size (read from the logical screen descriptor).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：GIF画像は1つ以上のフレームで構成され、各フレームは画像の一部のみを占める場合があります。&lt;strong&gt;getimagesize（）&lt;/strong&gt;によって報告されるイメージのサイズは、全体的なサイズです（論理画面記述子から読み取られます）。</target>
        </trans-unit>
        <trans-unit id="9cf9f15545dad08dfa48ffd62ded92ebc872a89d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe mode&lt;/a&gt; is enabled the uid of the script is added to the &lt;em&gt;realm&lt;/em&gt; part of the &lt;em&gt;WWW-Authenticate&lt;/em&gt; header if you set this header (used for HTTP Authentication).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;セーフモード&lt;/a&gt;が有効になっている場合、このヘッダーを設定すると（HTTP認証に使用されます）、スクリプトのuidが&lt;em&gt;WWW-Authenticate&lt;/em&gt;ヘッダーの&lt;em&gt;レルム&lt;/em&gt;部分に追加されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d30812500cc5e074bc66065cfa5562c83fee0b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If &lt;code&gt;replacement&lt;/code&gt; is not an array, it will be &lt;a href=&quot;language.types.array#language.types.array.casting&quot;&gt;typecast&lt;/a&gt; to one (i.e. &lt;code&gt;(array) $replacement&lt;/code&gt;). This may result in unexpected behavior when using an object or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;replacement&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;code&gt;replacement&lt;/code&gt; が配列でない場合は、1 に&lt;a href=&quot;language.types.array#language.types.array.casting&quot;&gt;型キャストさ&lt;/a&gt;れます（つまり、 &lt;code&gt;(array) $replacement&lt;/code&gt; ）。オブジェクトまたは&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;replacement&lt;/code&gt; を使用すると、予期しない動作が発生する可能性があり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e8a2263f75d02bc2a4742606ab53c0e681f07745" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If PHP cannot create a file in the specified &lt;code&gt;dir&lt;/code&gt; parameter, it falls back on the system default. On NTFS this also happens if the specified &lt;code&gt;dir&lt;/code&gt; contains more than 65534 files.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：PHPが指定された &lt;code&gt;dir&lt;/code&gt; パラメーターでファイルを作成できない場合、システムのデフォルトにフォールバックします。NTFSでは、これは、指定された &lt;code&gt;dir&lt;/code&gt; に65534を超えるファイルが含まれている場合にも発生します。</target>
        </trans-unit>
        <trans-unit id="12d634e5fd5a6de5d97b8425eb9302832cb06d16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If no parameter is supplied, then the parentheses must be omitted and &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; will be returned. Calling &lt;em&gt;return&lt;/em&gt; with parentheses but with no arguments will result in a parse error.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：パラメーターを指定しない場合は、括弧を省略しなければならず、&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;が返されます。かっこを使用して&lt;em&gt;return&lt;/em&gt;を呼び出し、引数を指定しないと、解析エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="c9d8ca213a92557601780543427f31f7948f8732" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If the parameters given to a function are not what it expects, such as passing an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; where a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; is expected, the return value of the function is undefined. In this case it will likely return &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; but this is just a convention, and cannot be relied upon.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;が期待される場所に&lt;a href=&quot;language.types.array&quot;&gt;配列&lt;/a&gt;を渡すなど、関数に指定されたパラメーターが期待どおりでない場合、関数の戻り値は未定義です。この場合、&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; を&lt;/strong&gt;返す可能性があり&lt;strong&gt;ます&lt;/strong&gt;が、これは単なる規則であり、信頼することはできません。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f199fa72e43cb8f479d043b05adf62182a84a55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If you try to return a reference from a function with the syntax: &lt;em&gt;return ($this-&amp;gt;value);&lt;/em&gt; this will &lt;em&gt;not&lt;/em&gt; work as you are attempting to return the result of an &lt;em&gt;expression&lt;/em&gt;, and not a variable, by reference. You can only return variables by reference from a function - nothing else. Since PHP 5.1.0, an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; error is issued if the code tries to return a dynamic expression or a result of the &lt;em&gt;new&lt;/em&gt; operator.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：次の構文で関数から参照を返そうとすると、次のようになります&lt;em&gt;。return（$ this-&amp;gt; value）; &lt;/em&gt;変数ではなく&lt;em&gt;式&lt;/em&gt;の結果を参照で返そうとしているため、これは機能し&lt;em&gt;ません&lt;/em&gt;。関数からの参照によってのみ変数を返すことができます-他には何もありません。PHP 5.1.0以降、コードが動的な式または&lt;em&gt;新しい&lt;/em&gt;演算子の結果を返そうとすると、&lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt;エラーが発行されます。&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b570a02716f11bbb8b5334c0f36931854e7b6cc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  If you use &lt;strong&gt;array_push()&lt;/strong&gt; to add one element to the array, it's better to use &lt;em&gt;$array[] = &lt;/em&gt; because in that way there is no overhead of calling a function.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;array_push（）&lt;/strong&gt;を使用して配列に要素を1つ追加する場合は、&lt;em&gt;$ array [] =&lt;/em&gt;を使用することをお勧めします。この方法では、関数を呼び出すオーバーヘッドがないためです。</target>
        </trans-unit>
        <trans-unit id="be3827f80e1372d8e13c6404d0a5a73aeda2250e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  In PHP the &lt;a href=&quot;control-structures.switch&quot;&gt;switch&lt;/a&gt; statement is considered a looping structure for the purposes of &lt;em&gt;continue&lt;/em&gt;. &lt;em&gt;continue&lt;/em&gt; behaves like &lt;em&gt;break&lt;/em&gt; (when no arguments are passed). If a &lt;em&gt;switch&lt;/em&gt; is inside a loop, &lt;em&gt;continue 2&lt;/em&gt; will continue with the next iteration of the outer loop.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：PHPでは、&lt;a href=&quot;control-structures.switch&quot;&gt;switch&lt;/a&gt;ステートメントは&lt;em&gt;続行を&lt;/em&gt;目的としたループ構造と見なされます。&lt;em&gt;continue&lt;/em&gt;は&lt;em&gt;breakの&lt;/em&gt;ように動作します（引数が渡されない場合）。&lt;em&gt;スイッチ&lt;/em&gt;がループの内側にある場合、&lt;em&gt;continue 2&lt;/em&gt;は外側のループの次の反復を続行します。</target>
        </trans-unit>
        <trans-unit id="f93375ad91efa29329330f2de9b92312eaba1cd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  It is not possible to change the size of a BLOB by writing to the stream. Instead, an UPDATE statement has to be executed, possibly using SQLite's zeroblob() function to set the desired BLOB size.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：ストリームに書き込んでBLOBのサイズを変更することはできません。代わりに、UPDATEステートメントを実行する必要があります。SQLiteのzeroblob（）関数を使用して、必要なBLOBサイズを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="0da47e37eb9fa596b2cee38a6d45a7865a9622e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  It is possible to use &lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args()&lt;/a&gt;, &lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg()&lt;/a&gt;, and &lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args()&lt;/a&gt; from within a closure.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args（）&lt;/a&gt;、&lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg（）&lt;/a&gt;、および&lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args（）&lt;/a&gt;は、クロージャー内から使用できます。</target>
        </trans-unit>
        <trans-unit id="385c48432a2c641733a7972a38311f68405436b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Like most PHP sorting functions, &lt;strong&gt;sort()&lt;/strong&gt; uses an implementation of &lt;a href=&quot;http://en.wikipedia.org/wiki/Quicksort&quot;&gt;&amp;raquo; Quicksort&lt;/a&gt;. The pivot is chosen in the middle of the partition resulting in an optimal time for already sorted arrays. This is however an implementation detail you shouldn't rely on.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：ほとんどのPHPソート関数と同様に、&lt;strong&gt;sort（）&lt;/strong&gt;は&lt;a href=&quot;http://en.wikipedia.org/wiki/Quicksort&quot;&gt;&amp;raquo;Quicksortの&lt;/a&gt;実装を使用します。ピボットはパーティションの中央で選択されるため、すでにソートされた配列に最適な時間が得られます。ただし、これは信頼すべきではない実装の詳細です。</target>
        </trans-unit>
        <trans-unit id="7d7333b7e93a4b0512ab740634f6e9c9c4ede8b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Most systems require root access to create a server socket on a port below 1024.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：ほとんどのシステムでは、1024未満のポートにサーバーソケットを作成するためにrootアクセスが必要です。</target>
        </trans-unit>
        <trans-unit id="e4823ba0a0acd478115a85d8a398451f14ef7e2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Namespace names are case-insensitive.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：ネームスペース名では大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="2c53be9a639af90b44281e4dc2a9df0b0631e0cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Not all databases will allow transactions to operate on DDL statements: some will generate errors, whereas others (including MySQL) will automatically commit the transaction after the first DDL statement has been encountered.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：すべてのデータベースでトランザクションがDDLステートメントを操作できるわけではありません。エラーを生成するデータベースもあれば、最初のDDLステートメントが検出された後（MySQLを含む）他のデータベースがトランザクションを自動的にコミットするものもあります。</target>
        </trans-unit>
        <trans-unit id="b13b4e90376a82c5a033d4ad0a1c0f027cdf0fde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;em&gt;array_push(&amp;amp;collector(), 'foo');&lt;/em&gt; will &lt;em&gt;not&lt;/em&gt; work, it results in a fatal error.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;em&gt;array_push（＆collector（）、 'foo'）; &lt;/em&gt;機能し&lt;em&gt;ません&lt;/em&gt;。致命的なエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="870a5197ed9b6e66d1395b987f843d32a944f766" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;em&gt;elseif&lt;/em&gt; and &lt;em&gt;else if&lt;/em&gt; will only be considered exactly the same when using curly brackets as in the above example. When using a colon to define your &lt;em&gt;if&lt;/em&gt;/&lt;em&gt;elseif&lt;/em&gt; conditions, you must not separate &lt;em&gt;else if&lt;/em&gt; into two words, or PHP will fail with a parse error.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：上記の例のように中括弧を使用する&lt;em&gt;場合&lt;/em&gt;、&lt;em&gt;elseif&lt;/em&gt;と&lt;em&gt;else if&lt;/em&gt;はまったく同じと見なされることに注意してください。コロンを使用して&lt;em&gt;if&lt;/em&gt; / &lt;em&gt;elseif&lt;/em&gt;条件を定義する&lt;em&gt;場合&lt;/em&gt;、&lt;em&gt;else if&lt;/em&gt;を2つの単語に分離しないでください。分離すると、PHPが解析エラーで失敗します。</target>
        </trans-unit>
        <trans-unit id="36df32eedbbf3a8df37decfb5923a272fdec0c63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;strong&gt;&lt;code&gt;MCRYPT_DEV_RANDOM&lt;/code&gt;&lt;/strong&gt; may block until more entropy is available.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt; &lt;code&gt;MCRYPT_DEV_RANDOM&lt;/code&gt; &lt;/strong&gt;は、より多くのエントロピーが利用可能になるまでブロックする場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5c9f16f4675a44061cc3bb7f962546399b30b005" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that &lt;strong&gt;array_unique()&lt;/strong&gt; is not intended to work on multi dimensional arrays.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;array_unique（）&lt;/strong&gt;は多次元配列での動作を意図したものではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="9cef18ec2cc21d2fccf51af6ae70764e4799088c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that JPC and JP2 are capable of having components with different bit depths. In this case, the value for &quot;bits&quot; is the highest bit depth encountered. Also, JP2 files may contain &lt;em&gt;multiple JPEG 2000 codestreams&lt;/em&gt;. In this case, &lt;strong&gt;getimagesize()&lt;/strong&gt; returns the values for the first codestream it encounters in the root of the file.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：JPCとJP2は異なるビット深度のコンポーネントを持つことができることに注意してください。この場合、「ビット」の値は、遭遇した最高のビット深度です。また、JP2ファイルには&lt;em&gt;複数のJPEG 2000コードストリーム&lt;/em&gt;が含まれている場合があります。この場合、&lt;strong&gt;getimagesize（）&lt;/strong&gt;は、ファイルのルートで最初に検出されたコードストリームの値を返します。</target>
        </trans-unit>
        <trans-unit id="53efdd43ff7083d06961a630f816163a6c34ee38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that all &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt;s that have been retrieved by executing this statement will be invalidated when the statement is closed.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：このステートメントを実行することによって取得されたすべての&lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt;は、ステートメントが閉じられるときに無効になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="83b9eb4ea7d6d5e7b699cbbb3445f00a67371607" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that other bitwise operations, for instance &lt;em&gt;~&lt;/em&gt; will not work as expected. In other words, it is not possible to retrieve all non-static methods, for example.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：他のビット演算、たとえば&lt;em&gt;〜&lt;/em&gt;は期待どおりに機能しないことに注意してください。つまり、たとえば、すべての非静的メソッドを取得することはできません。</target>
        </trans-unit>
        <trans-unit id="2b63c65562f43d2c25d5577b5fefd6f1631c3108" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that since &lt;em&gt;return&lt;/em&gt; is a language construct and not a function, the parentheses surrounding its argument are not required and their use is discouraged.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;em&gt;return&lt;/em&gt;は関数ではなく言語構造であるため、引数を囲む括弧は不要であり、使用はお勧めしません。</target>
        </trans-unit>
        <trans-unit id="4851f38a58339568e1f7e6fc3a12f739e6495b5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that unlike some other languages, the &lt;a href=&quot;control-structures.continue&quot;&gt;continue&lt;/a&gt; statement applies to &lt;em&gt;switch&lt;/em&gt; and acts similar to &lt;em&gt;break&lt;/em&gt;. If you have a &lt;em&gt;switch&lt;/em&gt; inside a loop and wish to continue to the next iteration of the outer loop, use &lt;em&gt;continue 2&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：他の一部の言語とは異なり、&lt;a href=&quot;control-structures.continue&quot;&gt;continue&lt;/a&gt;ステートメントは&lt;em&gt;switchに&lt;/em&gt;適用され、&lt;em&gt;break&lt;/em&gt;と同様に機能します。あなたが持っている場合は&lt;em&gt;スイッチ&lt;/em&gt;のループの内側をし、外側のループの処理を続行したい、使用することは、&lt;em&gt;2を継続します&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="62351a19a88e26b35b6cf4e26a9151c7a1a960ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Note that when using ISAPI with IIS, the value will be &lt;em&gt;off&lt;/em&gt; if the request was not made through the HTTPS protocol.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：IISでISAPIを使用&lt;em&gt;する&lt;/em&gt;場合、要求がHTTPSプロトコルを介して行われなかった場合、値は&lt;em&gt;オフに&lt;/em&gt;なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="68686c64e3775af0ca5ecaeb2cd42c2e058bbcb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  On some platforms (such as Windows), &lt;a href=&quot;function.getrandmax&quot;&gt;getrandmax()&lt;/a&gt; is only 32767. If you require a range larger than 32767, specifying &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; will allow you to create a range larger than this, or consider using &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：一部のプラットフォーム（Windowsなど）では、&lt;a href=&quot;function.getrandmax&quot;&gt;getrandmax（）&lt;/a&gt;は32767のみです。32767より大きい範囲が必要な場合、 &lt;code&gt;min&lt;/code&gt; および &lt;code&gt;max&lt;/code&gt; を指定すると、これより大きい範囲を作成できるようになるか、代わりに&lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand（）の&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="bda3d3fca5cdf8a8010a9e8d8767ef14e4b006f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Optional values do not accept &lt;em&gt;&quot; &quot;&lt;/em&gt; (space) as a separator.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：オプションの値は、区切り文字として&lt;em&gt;&quot;&quot;&lt;/em&gt;（スペース）を受け入れません。</target>
        </trans-unit>
        <trans-unit id="bc5eb9e23401fe018ec0d4bf097231fe666490ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  PHP doesn't handle strings like &lt;em&gt;&quot;12,300.2&quot;&lt;/em&gt; correctly by default. See &lt;a href=&quot;language.types.string#language.types.string.conversion&quot;&gt;converting from strings&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：PHPはデフォルトで&lt;em&gt;&quot;12,300.2&quot;の&lt;/em&gt;ような文字列を正しく処理しません。&lt;a href=&quot;language.types.string#language.types.string.conversion&quot;&gt;文字列からの変換を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="705dd944bc90edee50813b34a51a590e8077589a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Parent constructors are not called implicitly if the child class defines a constructor. In order to run a parent constructor, a call to &lt;strong&gt;parent::__construct()&lt;/strong&gt; within the child constructor is required. If the child does not define a constructor then it may be inherited from the parent class just like a normal class method (if it was not declared as private).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：子クラスがコンストラクターを定義している場合、親コンストラクターは暗黙的に呼び出されません。親コンストラクターを実行するには、子コンストラクター内で&lt;strong&gt;parent :: __ construct（）を&lt;/strong&gt;呼び出す必要があります。子がコンストラクターを定義していない場合は、通常のクラスメソッドと同じように親クラスから継承されます（プライベートとして宣言されていない場合）。</target>
        </trans-unit>
        <trans-unit id="be5cc5f0a792daae0653fca58d97f8a60dd8e061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Persistent connections have no effect if PHP is used as a CGI program.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：PHPがCGIプログラムとして使用されている場合、永続的な接続は効果がありません。</target>
        </trans-unit>
        <trans-unit id="77eb663821d7bd4d7753f5653da06be447878e5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Persistent database links are an exception to this rule. They are &lt;em&gt;not&lt;/em&gt; destroyed by the garbage collector. See the &lt;a href=&quot;https://secure.php.net/manual/en/features.persistent-connections.php&quot;&gt;persistent connections&lt;/a&gt; section for more information.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：永続的なデータベースリンクは、このルールの例外です。彼らはされ&lt;em&gt;ていない&lt;/em&gt;ガベージコレクタによって破壊されました。詳細については、&lt;a href=&quot;https://secure.php.net/manual/en/features.persistent-connections.php&quot;&gt;永続的な接続の&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="6bcd3ea0f07da65c21065051e68c64fb2fc8ff57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please consult the &lt;a href=&quot;https://secure.php.net/manual/en/stream.constants.php&quot;&gt;Streams constant list&lt;/a&gt; for further details on each constant.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：各定数の詳細については、&lt;a href=&quot;https://secure.php.net/manual/en/stream.constants.php&quot;&gt;Streams定数リスト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="69c0936fae2f7cf27ca29ae45188b69bbdd2d884" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that the null coalescing operator is an expression, and that it doesn't evaluate to a variable, but to the result of an expression. This is important to know if you want to return a variable by reference. The statement &lt;em&gt;return $foo ?? $bar;&lt;/em&gt; in a return-by-reference function will therefore not work and a warning is issued.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：nullの合体演算子は式であり、変数としてではなく式の結果として評価されることに注意してください。参照によって変数を返すかどうかを知ることは重要です。ステートメントは&lt;em&gt;$ foo&lt;/em&gt;を&lt;em&gt;返しますか？&lt;/em&gt;&lt;em&gt;$ bar; &lt;/em&gt;したがって、参照による戻り関数では機能せず、警告が発行されます。</target>
        </trans-unit>
        <trans-unit id="3db6fbd49c9f7f282a515c82ce5ca7771329f40b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that the ternary operator is an expression, and that it doesn't evaluate to a variable, but to the result of an expression. This is important to know if you want to return a variable by reference. The statement &lt;em&gt;return $var == 42 ? $a : $b;&lt;/em&gt; in a return-by-reference function will therefore not work and a warning is issued.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：三項演算子は式であり、変数としてではなく式の結果として評価されることに注意してください。参照によって変数を返すかどうかを知ることは重要です。ステートメントは&lt;em&gt;$ var == 42？$ a：$ b; &lt;/em&gt;したがって、参照による戻り関数では機能せず、警告が発行されます。</target>
        </trans-unit>
        <trans-unit id="13e29677bdd24a6d6adfeb9b4603a45bc995a1f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using &lt;em&gt;array_udiff($array1[0], $array2[0], &quot;data_compare_func&quot;);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、n次元配列の1つの次元のみをチェックすることに注意してください。もちろん、&lt;em&gt;array_udiff（$ array1 [0]、$ array2 [0]、 &quot;data_compare_func&quot;）;&lt;/em&gt;を使用して、より深い次元をチェックでき&lt;em&gt;ます。&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b94c42aefa0dc187a1cd220b1b25b6edf1b2976a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;em&gt;array_udiff_assoc($array1[0], $array2[0], &quot;some_comparison_func&quot;);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、n次元配列の1つの次元のみをチェックすることに注意してください。もちろん、たとえば、&lt;em&gt;array_udiff_assoc（$ array1 [0]、$ array2 [0]、 &quot;some_comparison_func&quot;）;&lt;/em&gt;を使用して、より深い次元をチェックでき&lt;em&gt;ます。&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="11045c1b895ac4a54c844bd69e1ceccb27d71602" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Please note that this function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;em&gt;array_udiff_uassoc($array1[0], $array2[0], &quot;data_compare_func&quot;, &quot;key_compare_func&quot;);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、n次元配列の1つの次元のみをチェックすることに注意してください。もちろん、たとえば、&lt;em&gt;array_udiff_uassoc（$ array1 [0]、$ array2 [0]、 &quot;data_compare_func&quot;、 &quot;key_compare_func&quot;）;&lt;/em&gt;を使用して、より深い次元をチェックでき&lt;em&gt;ます。&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1d7da17275215c2db7985dc27afa620e4a323b07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Prior to PHP 5.4.0, &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; contained the same initial information, but was not a &lt;a href=&quot;language.variables.superglobals&quot;&gt;superglobal&lt;/a&gt;. (Note that &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; and &lt;var&gt;&lt;var&gt;$_SERVER&lt;/var&gt;&lt;/var&gt; were different variables and that PHP handled them as such.)</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：PHP 5.4.0より前のバージョンでは、 &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; には同じ初期情報が含まれていましたが、&lt;a href=&quot;language.variables.superglobals&quot;&gt;スーパーグローバルで&lt;/a&gt;はありませんでした。（ &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt; と &lt;var&gt;&lt;var&gt;$_SERVER&lt;/var&gt;&lt;/var&gt; は異なる変数であり、PHPはそれらをそのように処理したことに注意してください。）</target>
        </trans-unit>
        <trans-unit id="0ed779e8909975161121e44ec5a3f79b015f8e90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Properties cannot be declared final, only classes and methods may be declared as final.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：プロパティをfinalとして宣言することはできません。finalとして宣言できるのはクラスとメソッドのみです。</target>
        </trans-unit>
        <trans-unit id="0ebe75f6bb25bcb471ab22cf3ce8d75f68de5a2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Recursive function/method calls with over 100-200 recursion levels can smash the stack and cause a termination of the current script. Especially, infinite recursion is considered a programming error.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：再帰レベルが100〜200を超える再帰的な関数/メソッド呼び出しは、スタックを破壊し、現在のスクリプトを終了させる可能性があります。特に、無限再帰はプログラミングエラーと見なされます。</target>
        </trans-unit>
        <trans-unit id="694ab7d50c7e6ccbb3a09fd6823b6a2150a80408" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Setting &lt;code&gt;new_cache_expire&lt;/code&gt; is of value only, if &lt;em&gt;session.cache_limiter&lt;/em&gt; is set to a value &lt;em&gt;different&lt;/em&gt; from &lt;em&gt;nocache&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：設定 &lt;code&gt;new_cache_expire&lt;/code&gt; があれば、唯一の価値がある&lt;em&gt;session.cache_limiterによりが&lt;/em&gt;値に設定されている&lt;em&gt;異なる&lt;/em&gt;から&lt;em&gt;NOCACHE&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="53761471548a74868f00e6d53ef46953c4dc67b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Stream data is read from resources (both local and remote) in chunks, with any unconsumed data kept in internal buffers. When a new filter is appended to a stream, data in the internal buffers is processed through the new filter at that time. This differs from the behavior of &lt;a href=&quot;function.stream-filter-prepend&quot;&gt;stream_filter_prepend()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：ストリームデータは、リソース（ローカルとリモートの両方）からチャンクで読み取られ、未使用のデータは内部バッファーに保持されます。新しいフィルターがストリームに追加されると、内部バッファー内のデータはその時点で新しいフィルターを介して処理されます。これは、&lt;a href=&quot;function.stream-filter-prepend&quot;&gt;stream_filter_prepend（）の&lt;/a&gt;動作とは異なります。</target>
        </trans-unit>
        <trans-unit id="7adb115ef5028ea31f24803997913d9a712c050f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Stream data is read from resources (both local and remote) in chunks, with any unconsumed data kept in internal buffers. When a new filter is prepended to a stream, data in the internal buffers, which has already been processed through other filters will &lt;em&gt;not&lt;/em&gt; be reprocessed through the new filter at that time. This differs from the behavior of &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：ストリームデータは、リソース（ローカルとリモートの両方）からチャンクで読み取られ、未使用のデータは内部バッファーに保持されます。新しいフィルターがストリームの前に追加されると、他のフィルターを介して既に処理されている内部バッファーのデータは、その時点で新しいフィルターを介して再処理され&lt;em&gt;ません&lt;/em&gt;。これは、&lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append（）の&lt;/a&gt;動作とは異なります。</target>
        </trans-unit>
        <trans-unit id="6c19aef782d35fb01a5645fc8ffbd12f7bf57d3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;code&gt;encoding&lt;/code&gt; parameter was moved from the third position to the fourth in PHP 5.2.0. For backward compatibility, &lt;code&gt;encoding&lt;/code&gt; can be specified as the third parameter, but doing so is deprecated and will be removed in the future.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：PHP 5.2.0では、 &lt;code&gt;encoding&lt;/code&gt; パラメータが3番目の位置から4番目の位置に移動されました。後方互換性のために、3番目のパラメーターとして &lt;code&gt;encoding&lt;/code&gt; を指定できますが、そうすることは非推奨であり、将来削除される予定です。</target>
        </trans-unit>
        <trans-unit id="db0510aa23a37d03f0c1cbbf3b91c576c4438335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;strong&gt;&lt;code&gt;GLOB_BRACE&lt;/code&gt;&lt;/strong&gt; flag is not available on some non GNU systems, like Solaris.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt; &lt;code&gt;GLOB_BRACE&lt;/code&gt; &lt;/strong&gt;フラグは、Solarisなどの一部の非GNUシステムでは使用できません。</target>
        </trans-unit>
        <trans-unit id="cba581f28bd754ab7f12363a75851ed96d225119" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;strong&gt;ssh2_auth_agent()&lt;/strong&gt; function will only be available when the ssh2 extension is compiled with libssh &amp;gt;= 1.2.3.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;ssh2_auth_agent（）&lt;/strong&gt;関数は、ssh2拡張がlibssh&amp;gt; = 1.2.3でコンパイルされている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="a61d4f1f4d106376c5c2d2c8552b36b63c5ea6c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The &lt;var&gt;php.ini&lt;/var&gt; setting mysqli.reconnect is ignored by the mysqlnd driver, so automatic reconnection is never attempted.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;var&gt;php.ini&lt;/var&gt; 設定mysqli.reconnectはmysqlndドライバーによって無視されるため、自動再接続は試行されません。</target>
        </trans-unit>
        <trans-unit id="ba3c74489a6f3e3ad088fecdbe3a4e82d8dc3b1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The @-operator works only on &lt;a href=&quot;language.expressions&quot;&gt;expressions&lt;/a&gt;. A simple rule of thumb is: if you can take the value of something, you can prepend the @ operator to it. For instance, you can prepend it to variables, function and &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt; calls, constants, and so forth. You cannot prepend it to function or class definitions, or conditional structures such as &lt;em&gt;if&lt;/em&gt; and &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;, and so forth.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：@演算子は&lt;a href=&quot;language.expressions&quot;&gt;式で&lt;/a&gt;のみ機能します。単純な経験則は、何かの値を取得できる場合は、@演算子を付加することができます。たとえば、変数や関数の前に追加して&lt;a href=&quot;function.include&quot;&gt;、&lt;/a&gt;呼び出しや定数などを含めることができます。関数やクラスの定義、または&lt;em&gt;if&lt;/em&gt;や&lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;などの条件付き構造の前に追加することはできません。</target>
        </trans-unit>
        <trans-unit id="05adb63c273cb33db47425c7a9422e413c728301" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The PHP 4 method of declaring a variable with the &lt;em&gt;var&lt;/em&gt; keyword is still supported for compatibility reasons (as a synonym for the public keyword). In PHP 5 before 5.1.3, its usage would generate an &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; warning.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;em&gt;var&lt;/em&gt;キーワードを使用して変数を宣言するPHP 4の方法は、互換性の理由から（publicキーワードの同義語として）サポートされています。5.1.3より前のPHP 5では、その使用により&lt;strong&gt; &lt;code&gt;E_STRICT&lt;/code&gt; &lt;/strong&gt;警告が生成されました。</target>
        </trans-unit>
        <trans-unit id="797b736ee96a69067001662797f841a9673eb0ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The beginning of an array is indistinguishable from a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; element. To make the distinction, check that the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; of the &lt;strong&gt;prev()&lt;/strong&gt; element is not &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：配列の先頭は、&lt;a href=&quot;language.types.boolean&quot;&gt;ブール&lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;要素と区別できません。区別するには、&lt;strong&gt;prev（）&lt;/strong&gt;要素の&lt;a href=&quot;function.key&quot;&gt;key（）&lt;/a&gt;が&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;でないことを確認してください。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72c11aedb6682845dffefbe596a49bda695eeed2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The behavior of the parameter &lt;code&gt;bestfit&lt;/code&gt; changed in Imagick 3.0.0. Before this version given dimensions 400x400 an image of dimensions 200x150 would be left untouched. In Imagick 3.0.0 and later the image would be scaled up to size 400x300 as this is the &quot;best fit&quot; for the given dimensions. If &lt;code&gt;bestfit&lt;/code&gt; parameter is used both width and height must be given.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：パラメータ &lt;code&gt;bestfit&lt;/code&gt; の動作はImagick 3.0.0で変更されました。このバージョンの前は、寸法が400x400の場合、寸法が200x150の画像は変更されません。Imagick 3.0.0以降では、指定された寸法に「最適」であるため、画像は400x300のサイズに拡大されます。 &lt;code&gt;bestfit&lt;/code&gt; パラメータを使用する場合は、幅と高さの両方を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c7a0a181f8b9b9163024948509db90e001cf3889" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The end of an array and the result of calling &lt;strong&gt;current()&lt;/strong&gt; on an empty array are indistinguishable from a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; element. To properly traverse an array which may contain &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; elements, see the &lt;strong&gt;foreach()&lt;/strong&gt; function.  To still use &lt;strong&gt;current()&lt;/strong&gt; and properly check if the value is really an element of the array, the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; of the &lt;strong&gt;current()&lt;/strong&gt; element should be checked to be strictly different from &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：配列の終わりと空の配列で&lt;strong&gt;current（）&lt;/strong&gt;を呼び出した結果は、&lt;a href=&quot;language.types.boolean&quot;&gt;ブール&lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;要素と区別できません。&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;要素を含む可能性のある配列を正しく走査するには、&lt;strong&gt;foreach（）&lt;/strong&gt;関数を参照してください。&lt;strong&gt;current（）&lt;/strong&gt;を引き続き使用して、値が実際に配列の要素であるかどうかを適切に確認するには、&lt;strong&gt;current（）&lt;/strong&gt;要素の&lt;a href=&quot;function.key&quot;&gt;key（）&lt;/a&gt;が&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;と厳密に異なることを確認する必要があり&lt;strong&gt;ます&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7452d0225e19d430990169f01cd94f5a95f95c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The end of an array is indistinguishable from a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; element. To properly traverse an array which may contain &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; elements, see the &lt;strong&gt;foreach()&lt;/strong&gt; function.  To still use &lt;strong&gt;next()&lt;/strong&gt; and properly check if the end of the array has been reached, verify that the &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：配列の末尾は、&lt;a href=&quot;language.types.boolean&quot;&gt;ブール値の&lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;要素と区別できません。&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;要素を含む可能性のある配列を適切にトラバースするには、&lt;strong&gt;foreach（）&lt;/strong&gt;関数を参照してください。&lt;strong&gt;next（）&lt;/strong&gt;を引き続き使用し、配列の最後に到達したかどうかを適切に確認するには、&lt;a href=&quot;function.key&quot;&gt;key（）&lt;/a&gt;が&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;であることを確認し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="15db7245bfd6b0f65aee8d5976e9e2e8196b3d36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The first argument &lt;var&gt;&lt;var&gt;$argv[0]&lt;/var&gt;&lt;/var&gt; is always the name that was used to run the script.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：最初の引数 &lt;var&gt;&lt;var&gt;$argv[0]&lt;/var&gt;&lt;/var&gt; は、常にスクリプトの実行に使用された名前です。</target>
        </trans-unit>
        <trans-unit id="c2303f023282b25ab083c3482bf47e0e2af21b3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The function must return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; in order to continue iterating over the &lt;code&gt;iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;： &lt;code&gt;iterator&lt;/code&gt; 反復を続行するには、関数が&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="322744b30302faddb91c571cc5849a82c0856652" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The increment/decrement operators only affect numbers and strings. Arrays, objects and resources are not affected. Decrementing &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; values has no effect too, but incrementing them results in &lt;em&gt;1&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：インクリメント/デクリメント演算子は数値と文字列にのみ影響します。配列、オブジェクト、リソースは影響を受けません。&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;値をデクリメントしても効果はありませんが、それらをインクリメントすると&lt;em&gt;1になり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3f259d59021d56bcc068b13a1d6561cbb5aa43b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The information about icons are retrieved from the icon with the highest bitrate.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：アイコンに関する情報は、ビットレートが最も高いアイコンから取得されます。</target>
        </trans-unit>
        <trans-unit id="f2cc2aeda8619daf8f16a52ab8f3fcbd28a9cacd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The order of elements with identical priority is &lt;em&gt;undefined&lt;/em&gt;. It may differ from the order in which they have been inserted.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：優先順位が同じ要素の順序は&lt;em&gt;定義されていません&lt;/em&gt;。挿入された順序とは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="ebdbe6afb65aaa13f7e20882af52c2b9177ae76d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The return value for an empty array is indistinguishable from the return value in case of an array which has a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; first element. To properly check the value of the first element of an array which may contain &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; elements, first check the &lt;a href=&quot;function.count&quot;&gt;count()&lt;/a&gt; of the array, or check that &lt;a href=&quot;function.key&quot;&gt;key()&lt;/a&gt; is not &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, after calling &lt;strong&gt;reset()&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：空の配列の戻り値は、&lt;a href=&quot;language.types.boolean&quot;&gt;ブールの&lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; の&lt;/strong&gt;最初の要素を持つ配列の場合、戻り値と区別できません。&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;要素を含む可能性のある配列の最初の要素の値を適切にチェックするには、最初に配列の&lt;a href=&quot;function.count&quot;&gt;count（）&lt;/a&gt;を確認するか、または&lt;strong&gt;reset（）を&lt;/strong&gt;呼び出した後、&lt;a href=&quot;function.key&quot;&gt;key（）&lt;/a&gt;が&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;でないことを確認します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5511fc29bad4ece699359df6aa515af2719e6146" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  The script's filename is always passed as an argument to the script, therefore the minimum value of &lt;var&gt;&lt;var&gt;$argc&lt;/var&gt;&lt;/var&gt; is &lt;em&gt;1&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：スクリプトのファイル名は常に引数としてスクリプトに渡されるため、 &lt;var&gt;&lt;var&gt;$argc&lt;/var&gt;&lt;/var&gt; 最小値は&lt;em&gt;1&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="f9235f1073dec62446b1b549e4a75de43fe4d4a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There are reserved words which must not be used as keys for ini files. These include: &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt;, &lt;em&gt;true&lt;/em&gt;, &lt;em&gt;false&lt;/em&gt;, &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;none&lt;/em&gt;. Values &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt; and &lt;em&gt;false&lt;/em&gt; result in &lt;em&gt;&quot;&quot;&lt;/em&gt;, and values &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt; and &lt;em&gt;true&lt;/em&gt; result in &lt;em&gt;&quot;1&quot;&lt;/em&gt;, unless &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt; mode is used (as of PHP 5.6.1). Characters &lt;em&gt;?{}|&amp;amp;~!()^&quot;&lt;/em&gt; must not be used anywhere in the key and have a special meaning in the value.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：iniファイルのキーとして使用してはならない予約語があります。これらには、&lt;em&gt;null&lt;/em&gt;、&lt;em&gt;yes&lt;/em&gt;、&lt;em&gt;no&lt;/em&gt;、&lt;em&gt;true&lt;/em&gt;、&lt;em&gt;false&lt;/em&gt;、&lt;em&gt;on&lt;/em&gt;、&lt;em&gt;off&lt;/em&gt;、&lt;em&gt;noneが含まれ&lt;/em&gt;ます。値が&lt;em&gt;nullで&lt;/em&gt;、&lt;em&gt;オフ&lt;/em&gt;、&lt;em&gt;なし&lt;/em&gt;と&lt;em&gt;偽&lt;/em&gt;で結果&lt;em&gt;「」&lt;/em&gt;、および値&lt;em&gt;で&lt;/em&gt;、&lt;em&gt;はい&lt;/em&gt;と&lt;em&gt;真&lt;/em&gt;で結果&lt;em&gt;「1」&lt;/em&gt;、しない限り、&lt;strong&gt; &lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt; の&lt;/strong&gt;モードが（PHP 5.6.1のように）使用されています。文字&lt;em&gt;？{} |＆〜！（）^ &quot;&lt;/em&gt; キーのどこでも使用してはならず、値に特別な意味があります。</target>
        </trans-unit>
        <trans-unit id="68ce4c01eeacb9d0a7b15639a5fc5874855c67bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There are reserved words which must not be used as keys for ini files. These include: &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt;, &lt;em&gt;true&lt;/em&gt;, &lt;em&gt;false&lt;/em&gt;, &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;none&lt;/em&gt;. Values &lt;em&gt;null&lt;/em&gt;, &lt;em&gt;off&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt; and &lt;em&gt;false&lt;/em&gt; result in &lt;em&gt;&quot;&quot;&lt;/em&gt;, and values &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;yes&lt;/em&gt; and &lt;em&gt;true&lt;/em&gt; result in &lt;em&gt;&quot;1&quot;&lt;/em&gt;, unless &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt; mode is used. Characters &lt;em&gt;?{}|&amp;amp;~![()^&quot;&lt;/em&gt; must not be used anywhere in the key and have a special meaning in the value.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：iniファイルのキーとして使用してはならない予約語があります。これらには、&lt;em&gt;null&lt;/em&gt;、&lt;em&gt;yes&lt;/em&gt;、&lt;em&gt;no&lt;/em&gt;、&lt;em&gt;true&lt;/em&gt;、&lt;em&gt;false&lt;/em&gt;、&lt;em&gt;on&lt;/em&gt;、&lt;em&gt;off&lt;/em&gt;、&lt;em&gt;noneが含まれ&lt;/em&gt;ます。値が&lt;em&gt;nullで&lt;/em&gt;、&lt;em&gt;オフ&lt;/em&gt;、&lt;em&gt;なし&lt;/em&gt;と&lt;em&gt;偽&lt;/em&gt;で結果&lt;em&gt;「」&lt;/em&gt;、および値&lt;em&gt;で&lt;/em&gt;、&lt;em&gt;はい&lt;/em&gt;と&lt;em&gt;真&lt;/em&gt;で結果&lt;em&gt;「1」&lt;/em&gt;、しない限り、&lt;strong&gt; &lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt; の&lt;/strong&gt;モードが使用されています。文字&lt;em&gt;？{} |＆〜！[（）^ &quot;&lt;/em&gt; キーのどこでも使用してはならず、値に特別な意味があります。</target>
        </trans-unit>
        <trans-unit id="09f158abad43ad2f1180aac88554afc262d603b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There is no decrypt function, since &lt;strong&gt;crypt()&lt;/strong&gt; uses a one-way algorithm.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;crypt（）&lt;/strong&gt;は一方向アルゴリズムを使用するため、復号化関数はありません。</target>
        </trans-unit>
        <trans-unit id="b14586a935cc6f95f977cf49ccb2eff457062906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  There is no reference sign on a function call - only on function definitions. Function definitions alone are enough to correctly pass the argument by reference. As of PHP 5.3.0, you will get a warning saying that &quot;call-time pass-by-reference&quot; is deprecated when you use &amp;amp; in &lt;em&gt;foo(&amp;amp;$a);&lt;/em&gt;. And as of PHP 5.4.0, call-time pass-by-reference was removed, so using it will raise a fatal error.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：関数呼び出しには参照記号がなく、関数定義にのみあります。関数定義だけで、参照によって引数を正しく渡すのに十分です。PHP 5.3.0以降では、&lt;em&gt;foo（＆$ a）;で＆&lt;/em&gt;を使用すると、「call-time pass-by-reference」は非推奨であるという警告が表示されます&lt;em&gt;。&lt;/em&gt;。PHP 5.4.0以降、呼び出し時の参照渡しが削除されたため、これを使用すると致命的なエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="162b17373ec79e11adcc7f9f8189c49119424bb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This checks the current node, not the entire document.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：これにより、ドキュメント全体ではなく、現在のノードがチェックされます。</target>
        </trans-unit>
        <trans-unit id="d24de6799f8d49feef323c75f4cd70637edb3b4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This does not mean to &lt;em&gt;always&lt;/em&gt; quote the key. Do not quote keys which are &lt;a href=&quot;language.constants&quot;&gt;constants&lt;/a&gt; or &lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;variables&lt;/a&gt;, as this will prevent PHP from interpreting them.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：これは、&lt;em&gt;常に&lt;/em&gt;キーを引用することを意味するものではありません。&lt;a href=&quot;language.constants&quot;&gt;定数&lt;/a&gt;または&lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;変数&lt;/a&gt;であるキーを引用符で囲まないでください。これにより、PHP がキーを解釈できなくなります。</target>
        </trans-unit>
        <trans-unit id="d7538a5249f4cb09e5a0782ceb1f4693aa5c3e6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This format is not compatible with ISO-8601, but is left this way for backward compatibility reasons. Use &lt;strong&gt;&lt;code&gt;DateTime::ATOM&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;DATE_ATOM&lt;/code&gt;&lt;/strong&gt; for compatibility with ISO-8601 instead.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この形式はISO-8601と互換性がありませんが、下位互換性の理由からこのままになっています。代わりに、ISO-8601との互換性のために&lt;strong&gt; &lt;code&gt;DateTime::ATOM&lt;/code&gt; &lt;/strong&gt;または&lt;strong&gt; &lt;code&gt;DATE_ATOM&lt;/code&gt; &lt;/strong&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="3123a11a4f68ecfb64e3ecc819f2f08878026bd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function does &lt;em&gt;not&lt;/em&gt; open a connection. It checks whether the given parameters are plausible and can be used to open a connection as soon as one is needed.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は接続を開きませ&lt;em&gt;ん&lt;/em&gt;。指定されたパラメータが妥当であるかどうかをチェックし、必要に応じてすぐに接続を開くために使用できます。</target>
        </trans-unit>
        <trans-unit id="85d91568fc1bcd1472d151acd63555d4f778b97a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function exists when compiled with DBMaker, IBM DB2 or UnixODBC support.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、DBMaster、IBM DB2、またはUnixODBCサポートを使用してコンパイルした場合に存在します。</target>
        </trans-unit>
        <trans-unit id="644eb1afabe7efc3061063ab30e6e8d2bc59ec52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function is only available with Zend Engine 2 (PHP &amp;gt;= 5.0.0).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数はZend Engine 2（PHP&amp;gt; = 5.0.0）でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="beccaa590a96a59db1a663b37d10711704b52838" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function is similar to &lt;a href=&quot;function.ob-end-flush&quot;&gt;ob_end_flush()&lt;/a&gt;, except that this function also returns the buffer as a string.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：この関数は&lt;a href=&quot;function.ob-end-flush&quot;&gt;ob_end_flush（）に&lt;/a&gt;似ていますが、この関数はバッファを文字列としても返す点が異なります。</target>
        </trans-unit>
        <trans-unit id="c2e68509685046a6d20b541b442887cf98b838f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function is similar to &lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush()&lt;/a&gt;, except that &lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush()&lt;/a&gt; returns the buffer as a string.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：この関数は&lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush（）に&lt;/a&gt;似ていますが、&lt;a href=&quot;function.ob-get-flush&quot;&gt;ob_get_flush（）&lt;/a&gt;はバッファを文字列として返す点が異なります。</target>
        </trans-unit>
        <trans-unit id="b7d2f676b8b5b4d7a5612a0d41d2cbfd2243c4b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function isn't available on some systems (e.g. old Sun OS).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この機能は、一部のシステム（古いSun OSなど）では使用できません。</target>
        </trans-unit>
        <trans-unit id="3653abc4878c639f8325e01b39301d0a68f7c3a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function only checks one dimension of a n-dimensional array. Of course you can check deeper dimensions by using, for example, &lt;em&gt;array_diff_assoc($array1[0], $array2[0]);&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、n次元配列の1つの次元のみをチェックします。もちろん、たとえば、&lt;em&gt;array_diff_assoc（$ array1 [0]、$ array2 [0]）;&lt;/em&gt;を使用して、より深い次元をチェックでき&lt;em&gt;ます。&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6e1a1f98f0f2ff03551021585d437e30329aa16f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function requires ICU version &amp;ge; 52.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この機能にはICUバージョン&amp;ge;52が必要です。</target>
        </trans-unit>
        <trans-unit id="121694e1e21eace6dcadd5cc54238c7ed869c233" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This function returns a copy of the passed arguments only, and does not account for default (non-passed) arguments.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、渡された引数のコピーのみを返し、デフォルトの（渡されなかった）引数は考慮しません。</target>
        </trans-unit>
        <trans-unit id="da9ceb2ecac7005ea12d39a71d6ea3e1ad30e960" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This option is only used when &lt;code&gt;what&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;DateTimeZone::PER_COUNTRY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：このオプションは、 &lt;code&gt;what&lt;/code&gt; が&lt;strong&gt; &lt;code&gt;DateTimeZone::PER_COUNTRY&lt;/code&gt; &lt;/strong&gt;設定されている場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="157e9157d41b3f424295cecc0d6b5bb17ba35e9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This parameter is case-insensitive.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：このパラメーターは大文字小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="27fd8e39a2b20c5953200afead4bcbe3fd858c84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This parameter only applies when not making asynchronous connection attempts.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：このパラメーターは、非同期接続を試行しない場合にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="51c5dc82036ce59170b3b7ec874a7f7801584627" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  This variable is not available when &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-argc-argv&quot;&gt;register_argc_argv&lt;/a&gt; is disabled.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-argc-argv&quot;&gt;register_argc_argv&lt;/a&gt;が無効になっている場合、この変数は使用できません。</target>
        </trans-unit>
        <trans-unit id="3ab79ce262efeb9f7078f4ddfff9f82f14037f29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  To check the type and value of an &lt;a href=&quot;language.expressions&quot;&gt;expression&lt;/a&gt;, use the &lt;a href=&quot;function.var-dump&quot;&gt;var_dump()&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：のタイプと値を確認するには&lt;a href=&quot;language.expressions&quot;&gt;式を&lt;/a&gt;使用して、&lt;a href=&quot;function.var-dump&quot;&gt;のvar_dump（）&lt;/a&gt;関数を。</target>
        </trans-unit>
        <trans-unit id="349f12f0a9978d89cf6c3c08574810acbd90995d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  To reiterate, inside a double-quoted &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, it's valid to not surround array indexes with quotes so &lt;em&gt;&quot;$foo[bar]&quot;&lt;/em&gt; is valid. See the above examples for details on why as well as the section on &lt;a href=&quot;language.types.string#language.types.string.parsing&quot;&gt;variable parsing in strings&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：繰り返しますが、二重引用符で囲まれた&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;内では、配列インデックスを引用符で囲まないことが有効であるため、&lt;em&gt;「$ foo [bar]」&lt;/em&gt;が有効です。理由の詳細と&lt;a href=&quot;language.types.string#language.types.string.parsing&quot;&gt;、文字列内の変数の解析&lt;/a&gt;に関するセクションについては、上記の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="8e4f8270fe3df65acb6c25f69a2a4055a8bcf022" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  To remove a set of stored constants (without clearing the entire cache), an empty array may be passed as the &lt;code&gt;constants&lt;/code&gt; parameter, effectively clearing the stored value(s).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：保存された定数のセットを（キャッシュ全体をクリアせずに）削除するには、 &lt;code&gt;constants&lt;/code&gt; パラメーターとして空の配列を渡して、保存された値を効果的にクリアできます。</target>
        </trans-unit>
        <trans-unit id="f5d7b9040667d3bf1f2f6c3456fbb4c445a399cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Two elements are considered equal if and only if &lt;em&gt;(string) $elem1 === (string) $elem2&lt;/em&gt; i.e. when the string representation is the same, the first element will be used.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：2つの要素は、&lt;em&gt;（文字列）$ elem1 ===（文字列）$ elem2の&lt;/em&gt;場合にのみ等しいと見なされます。つまり、文字列表現が同じ場合、最初の要素が使用されます。</target>
        </trans-unit>
        <trans-unit id="84577bf1f5b13952e52ff60e46d20a8b198cba5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Two elements are considered equal if and only if &lt;em&gt;(string) $elem1 === (string) $elem2&lt;/em&gt;. In words: when the string representation is the same.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;em&gt;（string）$ elem1 ===（string）$ elem2の&lt;/em&gt;場合に限り、2つの要素は等しいと&lt;em&gt;見なされ&lt;/em&gt;ます。つまり、文字列表現が同じ場合。</target>
        </trans-unit>
        <trans-unit id="e2f63a6045dd4914f29ab6abfb1100badd24599a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Under Apache 2, you must set &lt;em&gt;UseCanonicalName = On&lt;/em&gt; and &lt;em&gt;ServerName&lt;/em&gt;. Otherwise, this value reflects the hostname supplied by the client, which can be spoofed. It is not safe to rely on this value in security-dependent contexts.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：Apache 2では、&lt;em&gt;UseCanonicalName = On&lt;/em&gt;および&lt;em&gt;ServerNameを&lt;/em&gt;設定する必要があります。それ以外の場合、この値はクライアントによって提供されるホスト名を反映します。これはなりすましの可能性があります。セキュリティに依存するコンテキストでこの値に依存するのは安全ではありません。</target>
        </trans-unit>
        <trans-unit id="51cce9de520418f96a7faa7962c018914bd9493d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Under the Apache 2, you must set &lt;em&gt;UseCanonicalName = On&lt;/em&gt;, as well as &lt;em&gt;UseCanonicalPhysicalPort = On&lt;/em&gt; in order to get the physical (real) port, otherwise, this value can be spoofed and it may or may not return the physical port value. It is not safe to rely on this value in security-dependent contexts.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：Apache 2の下では、あなたが設定しなければなりません&lt;em&gt;UseCanonicalNameの=には&lt;/em&gt;、だけでなく、&lt;em&gt;UseCanonicalPhysicalPort =オンを&lt;/em&gt;、物理的な（実際の）ポートを取得するために、そうでない場合は、この値を詐称することができ、それがまたは物理ポートの値を返さない場合があります。セキュリティに依存するコンテキストでこの値に依存するのは安全ではありません。</target>
        </trans-unit>
        <trans-unit id="60c103e7586d1d3eb647abe1be1df359966e3353" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apc_add()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：PHPの他の多くのメカニズムとは異なり、&lt;strong&gt;apc_add（）&lt;/strong&gt;を使用して保存された変数は、リクエスト間で保持されます（値がキャッシュから削除されるまで）。</target>
        </trans-unit>
        <trans-unit id="9ec604f2b540cec9ecc78ebc50c74a1efa7b688a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apc_store()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：PHPの他の多くのメカニズムとは異なり、&lt;strong&gt;apc_store（）&lt;/strong&gt;を使用して保存された変数は、リクエスト間で保持されます（値がキャッシュから削除されるまで）。</target>
        </trans-unit>
        <trans-unit id="a6d45e75ec5e51a22e184fed3d4c357cea8982c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apcu_add()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：PHPの他の多くのメカニズムとは異なり、&lt;strong&gt;apcu_add（）&lt;/strong&gt;を使用して保存された変数は、リクエスト間で（値がキャッシュから削除されるまで&lt;strong&gt;）&lt;/strong&gt;持続します。</target>
        </trans-unit>
        <trans-unit id="210b896114853955160a24b5014d1d4b60f84cf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike many other mechanisms in PHP, variables stored using &lt;strong&gt;apcu_store()&lt;/strong&gt; will persist between requests (until the value is removed from the cache).</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：PHPの他の多くのメカニズムとは異なり、&lt;strong&gt;apcu_store（）&lt;/strong&gt;を使用して格納された変数は、リクエスト間で（値がキャッシュから削除されるまで&lt;strong&gt;）&lt;/strong&gt;持続します。</target>
        </trans-unit>
        <trans-unit id="e137587f723afcb027d350b9a8e7aa5a37be09ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike parameter passing, here you have to use &lt;em&gt;&amp;amp;&lt;/em&gt; in both places - to indicate that you want to return by reference, not a copy, and to indicate that reference binding, rather than usual assignment, should be done for &lt;var&gt;&lt;var&gt;$myValue&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：パラメータの受け渡しとは異なり、ここでは両方で&lt;em&gt;＆&lt;/em&gt;を使用する必要があります。コピーではなく参照で返すことを示し、通常の割り当てではなく参照バインディングを &lt;var&gt;&lt;var&gt;$myValue&lt;/var&gt;&lt;/var&gt; に対して行う必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="7c9eaef74298666c3c1fc2930a7a1e2b7ecf558f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Unlike the &lt;a href=&quot;language.types.string#language.types.string.syntax.double&quot;&gt;double-quoted&lt;/a&gt; and &lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;heredoc&lt;/a&gt; syntaxes, &lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;variables&lt;/a&gt; and escape sequences for special characters will &lt;em&gt;not&lt;/em&gt; be expanded when they occur in single quoted &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;s.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;a href=&quot;language.types.string#language.types.string.syntax.double&quot;&gt;二重引用符&lt;/a&gt;や&lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;ヒアドキュメントの&lt;/a&gt;構文とは異なり、特殊文字の&lt;a href=&quot;https://secure.php.net/manual/en/language.variables.php&quot;&gt;変数&lt;/a&gt;やエスケープシーケンスは、一重引用符で囲まれた&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;に出現しても展開され&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="85cd43120120e975cead46cf8780d0bc2dc72938" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Updates to supported algorithms by this function (or changes to the default one) must follow the following rules:</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数でサポートされているアルゴリズムの更新（またはデフォルトのアルゴリズムへの変更）は、次のルールに従う必要があります。</target>
        </trans-unit>
        <trans-unit id="46338c5286b032f31dd116d6d9b54c14b3cd74bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Usually an &lt;code&gt;enclosure&lt;/code&gt; character is escaped inside a field by doubling it; however, the &lt;code&gt;escape&lt;/code&gt; character can be used as an alternative. So for the default parameter values &lt;em&gt;&quot;&quot;&lt;/em&gt; and &lt;em&gt;\&quot;&lt;/em&gt; have the same meaning. Other than allowing to escape the &lt;code&gt;enclosure&lt;/code&gt; character the &lt;code&gt;escape&lt;/code&gt; character has no special meaning; it isn't even meant to escape itself.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：通常、 &lt;code&gt;enclosure&lt;/code&gt; 文字はフィールドを2倍にすることでフィールド内でエスケープされます。ただし、代わりに &lt;code&gt;escape&lt;/code&gt; 文字を使用できます。したがって、デフォルトのパラメータ値&lt;em&gt;&quot;&quot;&lt;/em&gt;と&lt;em&gt;\ &quot;の&lt;/em&gt;意味は同じです。 &lt;code&gt;enclosure&lt;/code&gt; 文字をエスケープできることを除いて、 &lt;code&gt;escape&lt;/code&gt; 文字には特別な意味はなく、それ自体をエスケープすることも意図されていません。</target>
        </trans-unit>
        <trans-unit id="aeb150e6967633217011e3e87dc20fc4222c836e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Usually an &lt;code&gt;enclosure&lt;/code&gt; character is escpaped inside a field by doubling it; however, the &lt;code&gt;escape&lt;/code&gt; character can be used as an alternative. So for the default parameter values &lt;em&gt;&quot;&quot;&lt;/em&gt; and &lt;em&gt;\&quot;&lt;/em&gt; have the same meaning. Other than allowing to escape the &lt;code&gt;enclosure&lt;/code&gt; character the &lt;code&gt;escape&lt;/code&gt; character has no special meaning; it isn't even meant to escape itself.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：通常、 &lt;code&gt;enclosure&lt;/code&gt; 文字は、フィールド内で2倍にすることでエスケープされます。ただし、代わりに &lt;code&gt;escape&lt;/code&gt; 文字を使用できます。したがって、デフォルトのパラメータ値&lt;em&gt;&quot;&quot;&lt;/em&gt;と&lt;em&gt;\ &quot;の&lt;/em&gt;意味は同じです。 &lt;code&gt;enclosure&lt;/code&gt; 文字をエスケープできることを除いて、 &lt;code&gt;escape&lt;/code&gt; 文字には特別な意味はなく、それ自体をエスケープすることも意図されていません。</target>
        </trans-unit>
        <trans-unit id="006c1f8aff28f84c934be3eee74b6a002d23d2fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When a filter is added for read and write, two instances of the filter are created. &lt;strong&gt;stream_filter_append()&lt;/strong&gt; must be called twice with &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt; to get both filter resources.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：読み取りおよび書き込み用にフィルターを追加すると、フィルターの2つのインスタンスが作成されます。&lt;strong&gt;stream_filter_append（）&lt;/strong&gt;は、両方のフィルターリソースを取得するために、&lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt;および&lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; で&lt;/strong&gt; 2回&lt;strong&gt;呼び出す&lt;/strong&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="354cb586e7b09df5e0042f844fedcd8b9685a0fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When a filter is added for read and write, two instances of the filter are created. &lt;strong&gt;stream_filter_prepend()&lt;/strong&gt; must be called twice with &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt; to get both filter resources.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：読み取りおよび書き込み用にフィルターを追加すると、フィルターの2つのインスタンスが作成されます。&lt;strong&gt;stream_filter_prepend（）&lt;/strong&gt;は、両方のフィルターリソースを取得するために、&lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt;および&lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; で&lt;/strong&gt; 2回&lt;strong&gt;呼び出す&lt;/strong&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="0b24d8ca444de639d1b16f60839b6f1cb024557c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When control enters &lt;strong&gt;apcu_entry()&lt;/strong&gt; the lock for the cache is acquired exclusively, it is released when control leaves &lt;strong&gt;apcu_entry()&lt;/strong&gt;: In effect, this turns the body of &lt;code&gt;generator&lt;/code&gt; into a critical section, disallowing two processes from executing the same code paths concurrently. In addition, it prohibits the concurrent execution of any other APCu functions, since they will acquire the same lock.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：制御が&lt;strong&gt;apcu_entry（）に&lt;/strong&gt;入ると、キャッシュのロックが排他的に取得され、制御が&lt;strong&gt;apcu_entry（）を&lt;/strong&gt;離れると解放されます。これにより、 &lt;code&gt;generator&lt;/code&gt; の本体がクリティカルセクションになり、2つのプロセスが同じコードパスを実行できなくなります。同時に。さらに、同じロックを取得するため、他のAPCu関数の同時実行を禁止します。</target>
        </trans-unit>
        <trans-unit id="88d2445f0289e71e37aa26452ecb6265aef73f0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When exporting an object, &lt;a href=&quot;function.var-export&quot;&gt;var_export()&lt;/a&gt; does not check whether &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; is implemented by the object's class, so re-importing such objects will fail, if __set_state() is not implemented. Particularly, this affects some internal classes.  It is the responsibility of the programmer to verify that only objects will be re-imported, whose class implements __set_state().</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：オブジェクトをエクスポートするとき、&lt;a href=&quot;function.var-export&quot;&gt;var_export（）&lt;/a&gt;は&lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state（）&lt;/a&gt;がオブジェクトのクラスによって実装されているかどうかをチェックしないため、__ set_state（）が実装されていない場合、そのようなオブジェクトの再インポートは失敗します。特に、これは一部の内部クラスに影響します。__set_state（）を実装するクラスのオブジェクトのみが再インポートされることを確認するのはプログラマの責任です。</target>
        </trans-unit>
        <trans-unit id="aea16fd4f246cfa35f0ce6c4a79db4612284d4db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  When using session cookies, specifying an &lt;code&gt;id&lt;/code&gt; for &lt;strong&gt;session_id()&lt;/strong&gt; will always send a new cookie when &lt;a href=&quot;function.session-start&quot;&gt;session_start()&lt;/a&gt; is called, regardless if the current session id is identical to the one being set.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：セッションCookieを使用する場合、現在のセッションIDが設定されているものと同じであるかどうかに関係なく、&lt;strong&gt;session_id（）に&lt;/strong&gt; &lt;code&gt;id&lt;/code&gt; を指定すると、&lt;a href=&quot;function.session-start&quot;&gt;session_start（）&lt;/a&gt;が呼び出されたときに常に新しいCookieが送信されます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3814f7d0c42f398dd5ad62a4de4d3087d9b2206d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Windows users should note that this function will only work if the system you run PHP from is Windows Vista/Windows Server 2008 or newer. Windows versions prior to that do not support symbolic links.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：この機能は、PHPを実行するシステムがWindows Vista / Windows Server 2008以降の場合にのみ機能することに注意してください。それより前のWindowsバージョンは、シンボリックリンクをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="42d3c4b8d8eafb3adb26a4b41a5c42d0f867a50e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Windows uses only the first three characters of prefix.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：Windowsでは、プレフィックスの最初の3文字のみを使用します。</target>
        </trans-unit>
        <trans-unit id="70cb72fa9e98c518aa57a2fc762e7256eaafb94c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  You do not have to call &lt;strong&gt;session_destroy()&lt;/strong&gt; from usual code. Cleanup $_SESSION array rather than destroying session data.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：通常のコードから&lt;strong&gt;session_destroy（）&lt;/strong&gt;を呼び出す必要はありません。セッションデータを破棄するのではなく、$ _ SESSION配列をクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="cc8eb1868c8f1e22d38a8bf2672532a06831439d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  You need to have a valid &lt;var&gt;openssl.cnf&lt;/var&gt; installed for this function to operate correctly. See the notes under &lt;a href=&quot;https://secure.php.net/manual/en/openssl.installation.php&quot;&gt;the installation section&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数が正しく動作するには、有効な &lt;var&gt;openssl.cnf&lt;/var&gt; がインストールされている必要があります。詳細については&lt;a href=&quot;https://secure.php.net/manual/en/openssl.installation.php&quot;&gt;、インストールセクションの&lt;/a&gt;メモを参照してください。</target>
        </trans-unit>
        <trans-unit id="e6be85082d7e6e7510bfa0eac83e5607bf7e68e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  You shouldn't use this value in a script.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：スクリプトではこの値を使用しないで&lt;strong&gt;ください&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2f6c59defed72fea10bb71a34a97445ba21f63b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:  Your web server must be configured to create this variable. For example in Apache you'll need &lt;em&gt;HostnameLookups On&lt;/em&gt; inside &lt;var&gt;httpd.conf&lt;/var&gt; for it to exist. See also &lt;a href=&quot;function.gethostbyaddr&quot;&gt;gethostbyaddr()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この変数を作成するようにWebサーバーを構成する必要があります。たとえば、Apache では、 &lt;var&gt;httpd.conf&lt;/var&gt; 内に&lt;em&gt;HostnameLookups On&lt;/em&gt;が存在する必要があります。&lt;a href=&quot;function.gethostbyaddr&quot;&gt;gethostbyaddr（）&lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="9fa6c8c48eb03f1deba42a351f5d20efb1da917d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&quot;language.types.string&quot;&gt;String&lt;/a&gt;s may also be accessed using braces, as in &lt;var&gt;&lt;var&gt;$str{42}&lt;/var&gt;&lt;/var&gt;, for the same purpose.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;a href=&quot;language.types.string&quot;&gt;文字列に&lt;/a&gt;も、同じ目的で &lt;var&gt;&lt;var&gt;$str{42}&lt;/var&gt;&lt;/var&gt; ように中括弧を使用してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="7628e4476bd3a18300d2f99059170835957f09b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;em&gt;$this&lt;/em&gt; is a special variable that can't be assigned.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;em&gt;$ this&lt;/em&gt;は、割り当てることができない特殊な変数です。</target>
        </trans-unit>
        <trans-unit id="05faad22d804718cb5d8635f6afd75b0afadfc4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;&lt;code&gt;IMG_WEIGHTED4&lt;/code&gt;&lt;/strong&gt; is not yet supported.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt; &lt;code&gt;IMG_WEIGHTED4&lt;/code&gt; &lt;/strong&gt;はまだサポートされていません。</target>
        </trans-unit>
        <trans-unit id="418063ef8abc097796c896bbab3832b92ab50883" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Alpha not returned&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;アルファは返されません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be9a029addfd651d86353c7136778ff3189545af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;An alternative approach&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;代替アプローチ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64b11f6aa96cb9177af0b317979c7b9116f365c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Availability&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;可用性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfaf83f81f4b7da784c62949af0b2feba7f6bb05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Beware the &lt;em&gt;refcount&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;&lt;em&gt;refcountに&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;注意して&lt;em&gt;ください&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a9513fec8a88ca35417e3ce1ba75a293830a136" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Crypt and MAC method &quot;&lt;em&gt;none&lt;/em&gt;&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;暗号化とMAC方式「&lt;em&gt;なし&lt;/em&gt;」&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6093230ed97d778649dcebd948d7732d75b60ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Dealing with register_globals&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;register_globalsの扱い&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d327797e5a7860c274ce2618c9dad9075cfa522" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Deprecated&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：非&lt;strong&gt;推奨&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61605163321953ad2a814cdf12c6b9c0bf240c32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;File should be opened for writing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;書き込み用にファイルを開く必要があります&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a453a593498b25decc218d3b49846acbb99abf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Gotcha&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;strong&gt;ゴッチャ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="071acc5bba3c575b7232d119f7baf051423621c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Possible gotcha: removing middle characters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;考えられる問題：中間の文字の削除&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d967176c556c574cbff6cf0f10bb58fca6a4bbd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Requirement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;要件&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="589c50552401508244c0ab4a0cae5b71278c6230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Unix Only:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;Unixのみ：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c636f127af4f1b8d36075331566c72c6272d4b43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Variable availability&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;変数の可用性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c90be4958683e3742e908cf5427ca457d38d0322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Variable variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;変数変数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98b50541d57a3429f047fcae45034062c5cb0773" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;When querying boolean values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;ブール値をクエリする場合&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca9d6973b04dbf58e536788eeaf42108e87299c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;When querying memory size values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;メモリサイズの値をクエリする場合&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa986b3cd7e4480e0de394228923ed1f4892613b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;When using custom (user) filters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;カスタム（ユーザー）フィルターを使用する場合&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14f48930d40a3873d1cdadb8ec5883abf7dadca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Why this function may not exist&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;この関数が存在しない理由&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad09537d40c1470f6064c5ee22eb8ac9d0b0bb52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;Windows only&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;Windowsのみ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c937b170c6820e8edcac109a0ebda1de78dec32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;apc_cache_info()&lt;/strong&gt; will raise a warning if it is unable to retrieve APC cache data. This typically occurs when APC is not enabled.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;apc_cache_info（）&lt;/strong&gt;は、APCキャッシュデータを取得できない場合に警告を表示します。これは通常、APCが有効になっていないときに発生します。</target>
        </trans-unit>
        <trans-unit id="934ec6b7fb8f4011a731a64de1e8aa353525c338" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;apcu_cache_info()&lt;/strong&gt; will raise a warning if it is unable to retrieve APC cache data. This typically occurs when APC is not enabled.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;apcu_cache_info（）&lt;/strong&gt;は、APCキャッシュデータを取得できない場合に警告を発します。これは通常、APCが有効になっていないときに発生します。</target>
        </trans-unit>
        <trans-unit id="50352f4be22dac68abd361636698bad8f3d28d61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;array_push()&lt;/strong&gt; will raise a warning if the first argument is not an array. This differs from the &lt;em&gt;$var[]&lt;/em&gt; behaviour where a new array is created.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：最初の引数が配列でない場合、&lt;strong&gt;array_push（）&lt;/strong&gt;は警告を発します。これは、新しい配列が作成される&lt;em&gt;$ var []の&lt;/em&gt;動作とは異なります。</target>
        </trans-unit>
        <trans-unit id="574880b873b6e1c81b0f6e63071a33fbd438125e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;convert_uudecode()&lt;/strong&gt; neither accepts the &lt;em&gt;begin&lt;/em&gt; nor the &lt;em&gt;end&lt;/em&gt; line, which are part of uuencoded &lt;em&gt;files&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;convert_uudecode（）&lt;/strong&gt;は、uuencodeされた&lt;em&gt;ファイルの&lt;/em&gt;一部である、&lt;em&gt;開始&lt;/em&gt;行も&lt;em&gt;終了&lt;/em&gt;行も受け入れません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d03842dc75aeda24f40c6ecd9e5013bda34a5b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;convert_uuencode()&lt;/strong&gt; neither produces the &lt;em&gt;begin&lt;/em&gt; nor the &lt;em&gt;end&lt;/em&gt; line, which are part of uuencoded &lt;em&gt;files&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;convert_uuencode（）&lt;/strong&gt;は、uuencodeされた&lt;em&gt;ファイルの&lt;/em&gt;一部である、&lt;em&gt;開始&lt;/em&gt;行も&lt;em&gt;終了&lt;/em&gt;行も生成しません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f45072db5404f1296b71cc2224b80d0a87b69d37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;imagexbm()&lt;/strong&gt; doesn't apply any padding, so the image width has to be a multiple of 8. This restriction does no longer apply as of PHP 5.6.24 and 7.0.9, respectively.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;imagexbm（）&lt;/strong&gt;はパディングを適用しないため、画像の幅は8の倍数にする必要があります。この制限は、PHP 5.6.24および7.0.9以降では適用されなくなりました。</target>
        </trans-unit>
        <trans-unit id="20b94dc758ab8fb0ec786ab2f0ca8e74c0b8ef60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;register_globals: important note&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;register_globals：重要な注意&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42fb3aa3b82aaf1863a0e88cfcce5237f5b36c21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;socket_getsockname()&lt;/strong&gt; should not be used with &lt;strong&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/strong&gt; sockets created with &lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect()&lt;/a&gt;. Only sockets created with &lt;a href=&quot;function.socket-accept&quot;&gt;socket_accept()&lt;/a&gt; or a primary server socket following a call to &lt;a href=&quot;function.socket-bind&quot;&gt;socket_bind()&lt;/a&gt; will return meaningful values.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;socket_getsockname（）&lt;/strong&gt;は、&lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect（）で&lt;/a&gt;作成された&lt;strong&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/strong&gt;ソケットでは使用しないでください。&lt;a href=&quot;function.socket-accept&quot;&gt;socket_accept（）で&lt;/a&gt;作成されたソケット、または&lt;a href=&quot;function.socket-bind&quot;&gt;socket_bind（）の&lt;/a&gt;呼び出し後にプライマリサーバーソケットのみが意味のある値を返します。</target>
        </trans-unit>
        <trans-unit id="5f4260bd163e602f065c7f4027f264aa488cf254" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;unserialize_callback_func directive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt;unserialize_callback_funcディレクティブ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7eb853d7607e9c08b5d0921af9b66199bd98b521" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: An exception is raised even when the &lt;strong&gt;&lt;code&gt;PDO::ATTR_ERRMODE&lt;/code&gt;&lt;/strong&gt; attribute is not &lt;strong&gt;&lt;code&gt;PDO::ERRMODE_EXCEPTION&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;strong&gt; &lt;code&gt;PDO::ATTR_ERRMODE&lt;/code&gt; &lt;/strong&gt;属性が&lt;strong&gt; &lt;code&gt;PDO::ERRMODE_EXCEPTION&lt;/code&gt; &lt;/strong&gt;ない場合でも、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="cbc4048f611a3132ca9d347a26ccba8fb0cb97d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: As of PHP 7.1.0, &lt;strong&gt;rand()&lt;/strong&gt; uses the same random number generator as &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand()&lt;/a&gt;. To preserve backwards compatibility &lt;strong&gt;rand()&lt;/strong&gt; allows &lt;code&gt;max&lt;/code&gt; to be smaller than &lt;code&gt;min&lt;/code&gt; as opposed to returning &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; as &lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：PHP 7.1.0以降、&lt;strong&gt;rand（）&lt;/strong&gt;は&lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand（）&lt;/a&gt;と同じ乱数ジェネレータを使用します。後方互換性を維持するために、&lt;strong&gt;rand（）&lt;/strong&gt;では、&lt;a href=&quot;function.mt-rand&quot;&gt;mt_rand（）&lt;/a&gt;として&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;を返すのではなく、 &lt;code&gt;max&lt;/code&gt; を &lt;code&gt;min&lt;/code&gt; より小さくすることができ&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ad19dd84d8b3b98f3c1d71fea2a050d6bf1e64cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: As of PHP 7.1.0, &lt;strong&gt;srand()&lt;/strong&gt; has been made an alias of &lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：PHP 7.1.0以降、&lt;strong&gt;srand（）&lt;/strong&gt;は&lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand（）の&lt;/a&gt;エイリアスになりました。</target>
        </trans-unit>
        <trans-unit id="75059576602ab1168c47374d6b9fe9b656cee4d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Because this is a language construct and not a function, it cannot be called using &lt;a href=&quot;functions.variable-functions&quot;&gt;variable functions&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：これは言語構造であり、関数ではないため、&lt;a href=&quot;functions.variable-functions&quot;&gt;変数関数&lt;/a&gt;を使用して呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="2fd0de65f8fd451e5c0d00a4fb49d69d34fe98ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: By default, only userspace functions may be removed, renamed, or modified. In order to override internal functions, you must enable the &lt;em&gt;runkit.internal_override&lt;/em&gt; setting in &lt;var&gt;php.ini&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：デフォルトでは、ユーザースペース機能のみが削除、名前変更、または変更できます。内部関数をオーバーライドするには、 &lt;var&gt;php.ini&lt;/var&gt; の&lt;em&gt;runkit.internal_override&lt;/em&gt;設定を有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="badb8b27e25d44573dd0a5f1cb9420c91795df35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Context support was added with PHP 5.0.0. For a description of &lt;em&gt;contexts&lt;/em&gt;, refer to &lt;a href=&quot;https://secure.php.net/manual/en/book.stream.php&quot;&gt;Streams&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：コンテキストサポートは、PHP 5.0.0で追加されました。&lt;em&gt;コンテキストの&lt;/em&gt;説明については、&lt;a href=&quot;https://secure.php.net/manual/en/book.stream.php&quot;&gt;ストリームを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="272fc45e23be4259517f454c376185b0442bfb55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Field names returned by this function are &lt;em&gt;case-sensitive&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数によって返されるフィールド名では、&lt;em&gt;大文字と小文字が区別され&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="46dcefa5ab921ba26bf2d7b75863d1ad5213d4c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For maximum portability, it is recommended to always use forward slashes (&lt;em&gt;/&lt;/em&gt;) as directory separator in ZIP filenames.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：移植性を最大にするために、ZIPファイル名のディレクトリ区切り文字として常にスラッシュ（&lt;em&gt;/&lt;/em&gt;）を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7e26d28b7649640cf1deee152450b5042c4c5f20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If PHP is not properly recognizing the line endings when reading files either on or created by a Macintosh computer, enabling the &lt;a href=&quot;https://secure.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings&quot;&gt;auto_detect_line_endings&lt;/a&gt; run-time configuration option may help resolve the problem.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：Macintoshコンピューターでファイルを読み取るか、Macintoshコンピューターで作成したファイルを読み取るときに、PHPが行末を正しく認識しない場合、&lt;a href=&quot;https://secure.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings&quot;&gt;auto_detect_line_endings&lt;/a&gt;ランタイム構成オプションを有効にすると、問題の解決に役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="e40d5ae990c4dfd1943c6e73eb36fd3f3872566f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Instead of a function name, an array containing an object reference and a method name can also be supplied.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：関数名の代わりに、オブジェクト参照とメソッド名を含む配列も提供できます。</target>
        </trans-unit>
        <trans-unit id="2c1489fb70a636f364207ad07b8262ad5d867b9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Sandbox support (required for &lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint()&lt;/a&gt;, &lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file()&lt;/a&gt;, and the &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; class) is only available as of PHP 5.1.0 or specially patched versions of PHP 5.0, and requires that thread safety be enabled. See the &lt;var&gt;README&lt;/var&gt; file included in the runkit package for more information.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：サンドボックスのサポート（&lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint（）&lt;/a&gt;、&lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file（）&lt;/a&gt;、および&lt;strong&gt;Runkit_Sandbox&lt;/strong&gt;クラスに必要）は、PHP 5.1.0以降またはPHP 5.0の特別にパッチされたバージョンでのみ利用可能であり、スレッドセーフティを有効にする必要があります。詳細については、runkitパッケージに含まれている &lt;var&gt;README&lt;/var&gt; ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="2ad7763aed41b08823438f7da93b7e60e75038c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Sandbox support (required for &lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint()&lt;/a&gt;, &lt;strong&gt;runkit_lint_file()&lt;/strong&gt;, and the &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; class) is only available as of PHP 5.1.0 or specially patched versions of PHP 5.0, and requires that thread safety be enabled. See the &lt;var&gt;README&lt;/var&gt; file included in the runkit package for more information.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：サンドボックスのサポート（&lt;a href=&quot;function.runkit-lint&quot;&gt;runkit_lint（）&lt;/a&gt;、&lt;strong&gt;runkit_lint_file（）&lt;/strong&gt;、および&lt;strong&gt;Runkit_Sandbox&lt;/strong&gt;クラスに必要）は、PHP 5.1.0以降またはPHP 5.0の特別にパッチされたバージョンでのみ利用可能であり、スレッドセーフティを有効にする必要があります。詳細については、runkitパッケージに含まれている &lt;var&gt;README&lt;/var&gt; ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="94e356406f33c2ab758209e8d6f2b5df9c04d6e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Sandbox support (required for &lt;strong&gt;runkit_lint()&lt;/strong&gt;, &lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file()&lt;/a&gt;, and the &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; class) is only available as of PHP 5.1.0 or specially patched versions of PHP 5.0, and requires that thread safety be enabled. See the &lt;var&gt;README&lt;/var&gt; file included in the runkit package for more information.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：サンドボックスのサポート（&lt;strong&gt;runkit_lint（）&lt;/strong&gt;、&lt;a href=&quot;function.runkit-lint-file&quot;&gt;runkit_lint_file（）&lt;/a&gt;、および&lt;strong&gt;Runkit_Sandbox&lt;/strong&gt;クラスに必要）は、PHP 5.1.0以降またはPHP 5.0の特別にパッチされたバージョンでのみ利用可能であり、スレッドセーフティを有効にする必要があります。詳細については、runkitパッケージに含まれている &lt;var&gt;README&lt;/var&gt; ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="b698051f55033ed973cd69795f29dc1f24dd7203" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: SimpleXML has made a rule of adding iterative properties to most methods. They cannot be viewed using &lt;a href=&quot;function.var-dump&quot;&gt;var_dump()&lt;/a&gt; or anything else which can examine objects.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：SimpleXMLは、ほとんどのメソッドに反復プロパティを追加するルールを作成しています。&lt;a href=&quot;function.var-dump&quot;&gt;var_dump（）&lt;/a&gt;など、オブジェクトを検査できるものを使用して表示することはできません。</target>
        </trans-unit>
        <trans-unit id="164dc5f19d59b9eef9c306475386cba9b2be9ce0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The optional parameters &lt;code&gt;config&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; were added in Tidy 2.0.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：オプションのパラメーター &lt;code&gt;config&lt;/code&gt; および &lt;code&gt;encoding&lt;/code&gt; はTidy 2.0で追加されました。</target>
        </trans-unit>
        <trans-unit id="860a1e857b8fa76d110933a8a9c0d4481125c6ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The public key subsystem is used for managing public keys on a server to which the client is &lt;em&gt;already&lt;/em&gt; authenticated. To authenticate to a remote system using public key authentication, use the &lt;a href=&quot;function.ssh2-auth-pubkey-file&quot;&gt;ssh2_auth_pubkey_file()&lt;/a&gt; function instead.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：公開鍵サブシステムは、クライアントが&lt;em&gt;すでに&lt;/em&gt;認証されているサーバーで公開鍵を管理するために使用されます。公開鍵認証を使用してリモートシステムを認証するには、代わりに&lt;a href=&quot;function.ssh2-auth-pubkey-file&quot;&gt;ssh2_auth_pubkey_file（）&lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="69d62c83bf9b5244445cd5f7f09cec892b3edd5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The results of this function are cached. See &lt;a href=&quot;function.clearstatcache&quot;&gt;clearstatcache()&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数の結果はキャッシュされます。詳細については、&lt;a href=&quot;function.clearstatcache&quot;&gt;clearstatcache（）&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="389c050290733e15ad81fd88ed65abd902071568" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: There is no need to seed the random number generator with &lt;a href=&quot;function.srand&quot;&gt;srand()&lt;/a&gt; or &lt;strong&gt;mt_srand()&lt;/strong&gt; as this is done automatically.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：乱数ジェネレーターに&lt;a href=&quot;function.srand&quot;&gt;srand（）&lt;/a&gt;または&lt;strong&gt;mt_srand（）&lt;/strong&gt;をシードする必要はありません。これは自動的に行われるためです。</target>
        </trans-unit>
        <trans-unit id="529b6a53a248d797ed53145da8ae5a0239b9175e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: There is no need to seed the random number generator with &lt;strong&gt;srand()&lt;/strong&gt; or &lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand()&lt;/a&gt; as this is done automatically.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：乱数ジェネレーターに&lt;strong&gt;srand（）&lt;/strong&gt;または&lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand（）&lt;/a&gt;をシードする必要はありません。これは自動的に行われるためです。</target>
        </trans-unit>
        <trans-unit id="a6fa999edd8b8e28353b4f1278b8f60258d58b94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function assigns new keys to the elements in &lt;code&gt;array&lt;/code&gt;. It will remove any existing keys that may have been assigned, rather than just reordering the keys.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、 &lt;code&gt;array&lt;/code&gt; の要素に新しいキーを割り当てます。キーを並べ替えるだけでなく、割り当てられている可能性のある既存のキーを削除します。</target>
        </trans-unit>
        <trans-unit id="d9f7c958550345d430d968287a1a3c61ffcd5c29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function cannot be used to manipulate the currently running (or chained) method.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数を使用して、現在実行中（または連鎖）のメソッドを操作することはできません。</target>
        </trans-unit>
        <trans-unit id="655366598929afc2948ef36672228068ff12c909" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is binary-safe.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数はバイナリセーフです。</target>
        </trans-unit>
        <trans-unit id="fdb7976c2598c8945a4bba37c6b00acc62301ed3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is disabled when PHP is running in &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：PHPが&lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;セーフモード&lt;/a&gt;で実行されている場合、この関数は無効になります。</target>
        </trans-unit>
        <trans-unit id="5bd10b388b196fba7a0b4777270974ff360515c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is not implemented on Windows platforms.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、Windowsプラットフォームでは実装されていません。</target>
        </trans-unit>
        <trans-unit id="285bf29d68ff107c608e4223134bd346ed31f2da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is only available if PHP is compiled using &lt;strong&gt;--with-t1lib[=DIR]&lt;/strong&gt; .</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、PHPが&lt;strong&gt;--with-t1lib [= DIR]&lt;/strong&gt;を使用してコンパイルされている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="7eb4d481f1dd1a1155e2ec42f1071bc3fd3be504" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is only available if PHP is compiled with freetype support (&lt;strong&gt;--with-freetype-dir=DIR&lt;/strong&gt; )</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、PHPがfreetypeサポート（&lt;strong&gt;--with-freetype-dir = DIR&lt;/strong&gt;）でコンパイルされている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="dab6f6c38f2823352aa5c63fb2f3edad83423d2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is only available in Tidy 1.0. It became obsolete in Tidy 2.0, and thus has been removed.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数はTidy 1.0でのみ使用できます。Tidy 2.0で廃止されたため、削除されました。</target>
        </trans-unit>
        <trans-unit id="846002a2578055d8e385c041759017663836d501" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function sets NULL fields to the PHP &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; value.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、NULLフィールドをPHPの&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;値に設定します。</target>
        </trans-unit>
        <trans-unit id="9b96eff5a824e80a89d24222e22b2106dd1d9320" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function will &lt;a href=&quot;function.reset&quot;&gt;reset()&lt;/a&gt; the &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; pointer of the input array after use.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、使用後に入力配列の&lt;a href=&quot;language.types.array&quot;&gt;配列&lt;/a&gt;ポインターを&lt;a href=&quot;function.reset&quot;&gt;reset（）&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="084f1e23b80a3fcc84bb85d080eb80d22bd902cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function will not work on &lt;a href=&quot;https://secure.php.net/manual/en/features.remote-files.php&quot;&gt;remote files&lt;/a&gt; as the file to be examined must be accessible via the server's filesystem.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：検査するファイルはサーバーのファイルシステムからアクセスできる必要があるため、この関数は&lt;a href=&quot;https://secure.php.net/manual/en/features.remote-files.php&quot;&gt;リモートファイルで&lt;/a&gt;は機能しません。</target>
        </trans-unit>
        <trans-unit id="8fde253738fe67e2536deee34ab7d55eb3c7463e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt; is enabled, PHP checks whether the directory in which the script is operating has the same UID (owner) as the script that is being executed.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;セーフモード&lt;/a&gt;が有効になっている場合、PHPは、スクリプトが動作しているディレクトリに、実行中のスクリプトと同じUID（所有者）があるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="8a8cb34d708811824ccf908817adfc21f7bec711" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt; is enabled, PHP checks whether the files or directories being operated upon have the same UID (owner) as the script that is being executed.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;セーフモード&lt;/a&gt;が有効になっている場合、PHPは、操作対象のファイルまたはディレクトリが、実行中のスクリプトと同じUID（所有者）であるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="a040558fbd9d743712177ba8be4a06234d9980f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When &lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;safe mode&lt;/a&gt; is enabled, you can only execute files within the &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-exec-dir&quot;&gt;safe_mode_exec_dir&lt;/a&gt;. For practical reasons, it is currently not allowed to have &lt;em&gt;..&lt;/em&gt; components in the path to the executable.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：&lt;a href=&quot;https://secure.php.net/manual/en/features.safe-mode.php&quot;&gt;セーフモード&lt;/a&gt;が有効な場合、実行できるのは&lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode-exec-dir&quot;&gt;safe_mode_exec_dir&lt;/a&gt;内のファイルのみです。実用上の理由により、現在、実行可能ファイルへのパスに&lt;em&gt;..&lt;/em&gt;コンポーネントを&lt;em&gt;含める&lt;/em&gt;ことは許可されていません。</target>
        </trans-unit>
        <trans-unit id="a35cd07326e6008972bda70e99e1f3bc6c7b82ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When specifying a numerical IPv6 address (e.g. &lt;em&gt;fe80::1&lt;/em&gt;), you must enclose the IP in square brackets&amp;mdash;for example, &lt;em&gt;tcp://[fe80::1]:80&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：数値のIPv6アドレス（例：&lt;em&gt;fe80 :: 1&lt;/em&gt;）を指定する場合は、IPを角括弧で囲む必要があります（例&lt;em&gt;：tcp：// [fe80 :: 1]：80）&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6f089aff5e0a56b0251f0e5ac5234a9579c55347" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NumberFormatter&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;NumberFormatter&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="cc1542c7ab271518b6f75a138c28bdd02cc6d813" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OAuth&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;OAuth&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b8511204d7facba5dec085632ab328d2dac8a9d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OAuthException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OAuthException&lt;/strong&gt;は&lt;a href=&quot;class.exception&quot;&gt;例外&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="81f5f3e400e2488761810bd4e8c4d0a171f49001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OAuthProvider&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;OAuthProvider&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="ea1d9f29198708d26930ed1601683104888bc03d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Object attributes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;オブジェクト属性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6275428f7841419ad55d5fa80dabb3d65d2abd33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Object properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;オブジェクトのプロパティ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9259315dd82f4a4c4495648dc1aea296a4820c50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Operator Precedence&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;演算子の優先順位&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8b69902bd56f178414816545f495ef706c7ce91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Optional flags for names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;名前のオプションのフラグ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1efb156693ad5f21691f5e2f320fbacaba3844e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other keys in associative arrays dependant on 'type'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;'type'に依存する連想配列の他のキー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0de6f5087043455b8dd92589de5ba265672b014e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OutOfBoundsException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OutOfBoundsException&lt;/strong&gt;は&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b3b589b9e47a0049588fa3b30cff02f747bbe915" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OutOfRangeException&lt;/strong&gt;extends&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OutOfRangeException&lt;/strong&gt;は&lt;a href=&quot;class.logicexception&quot;&gt;LogicException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="0c0f0cc64ea9e44c0afdc39c9676484f01dc1551" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OuterIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OuterIterator&lt;/strong&gt;は&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="12a45d4a8fab415da4871ae564536ff6fd080c3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OverflowException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;OverflowException&lt;/strong&gt;は&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeExceptionを&lt;/a&gt;拡張します{</target>
        </trans-unit>
        <trans-unit id="7f58b6181570e2973bf5a4a9ad01381f8094f0e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::__construct()&lt;/strong&gt; throws a &lt;a href=&quot;class.pdoexception&quot;&gt;PDOException&lt;/a&gt; if the attempt to connect to the requested database fails.</source>
          <target state="translated">&lt;strong&gt;PDO :: __ construct（）&lt;/strong&gt;は、要求されたデータベースへの接続が失敗した場合に&lt;a href=&quot;class.pdoexception&quot;&gt;PDOExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="73d552c0ef17f312251a8a1407807fe5d1c44808" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::errorCode()&lt;/strong&gt; only retrieves error codes for operations performed directly on the database handle. If you create a PDOStatement object through &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt; or &lt;a href=&quot;pdo.query&quot;&gt;PDO::query()&lt;/a&gt; and invoke an error on the statement handle, &lt;strong&gt;PDO::errorCode()&lt;/strong&gt; will not reflect that error. You must call &lt;a href=&quot;pdostatement.errorcode&quot;&gt;PDOStatement::errorCode()&lt;/a&gt; to return the error code for an operation performed on a particular statement handle.</source>
          <target state="translated">&lt;strong&gt;PDO :: errorCode（）&lt;/strong&gt;は、データベースハンドルで直接実行された操作のエラーコードのみを取得します。&lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare（）&lt;/a&gt;または&lt;a href=&quot;pdo.query&quot;&gt;PDO :: query（）&lt;/a&gt;を使用してPDOStatementオブジェクトを作成し、ステートメントハンドルでエラーを呼び出した場合、&lt;strong&gt;PDO :: errorCode（）&lt;/strong&gt;はそのエラーを反映しません。特定のステートメントハンドルで実行された操作のエラーコードを返すには、&lt;a href=&quot;pdostatement.errorcode&quot;&gt;PDOStatement :: errorCode（）&lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="865f9329d1518a1eeebf1c948bac6e9eefb22bbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::errorInfo()&lt;/strong&gt; only retrieves error information for operations performed directly on the database handle. If you create a PDOStatement object through &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt; or &lt;a href=&quot;pdo.query&quot;&gt;PDO::query()&lt;/a&gt; and invoke an error on the statement handle, &lt;strong&gt;PDO::errorInfo()&lt;/strong&gt; will not reflect the error from the statement handle. You must call &lt;a href=&quot;pdostatement.errorinfo&quot;&gt;PDOStatement::errorInfo()&lt;/a&gt; to return the error information for an operation performed on a particular statement handle.</source>
          <target state="translated">&lt;strong&gt;PDO :: errorInfo（）&lt;/strong&gt;は、データベースハンドルで直接実行された操作のエラー情報のみを取得します。&lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare（）&lt;/a&gt;または&lt;a href=&quot;pdo.query&quot;&gt;PDO :: query（）&lt;/a&gt;を使用してPDOStatementオブジェクトを作成し、ステートメントハンドルでエラーを呼び出した場合、&lt;strong&gt;PDO :: errorInfo（）&lt;/strong&gt;はステートメントハンドルからのエラーを反映しません。特定のステートメントハンドルで実行された操作のエラー情報を返すには、&lt;a href=&quot;pdostatement.errorinfo&quot;&gt;PDOStatement :: errorInfo（）&lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2a6a19228946dd61f54222e08a2c4532016584a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::errorInfo()&lt;/strong&gt; returns an array of error information about the last operation performed by this database handle. The array consists of the following fields:</source>
          <target state="translated">&lt;strong&gt;PDO :: errorInfo（）&lt;/strong&gt;は、このデータベースハンドルによって実行された最後の操作に関するエラー情報の配列を返します。配列は次のフィールドで構成されています。</target>
        </trans-unit>
        <trans-unit id="b91bb380b4f6044675bb0868c70a1dd0177e3c8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::exec()&lt;/strong&gt; does not return results from a SELECT statement. For a SELECT statement that you only need to issue once during your program, consider issuing &lt;a href=&quot;pdo.query&quot;&gt;PDO::query()&lt;/a&gt;. For a statement that you need to issue multiple times, prepare a PDOStatement object with &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt; and issue the statement with &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement::execute()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;PDO :: exec（）&lt;/strong&gt;はSELECTステートメントからの結果を返しません。プログラム中に一度だけ発行する必要があるSELECTステートメントの場合、&lt;a href=&quot;pdo.query&quot;&gt;PDO :: query（）の&lt;/a&gt;発行を検討してください。あなたは、複数回の発行でPDOStatementオブジェクトを準備する必要があることを声明については&lt;a href=&quot;pdo.prepare&quot;&gt;PDO ::（準備）&lt;/a&gt;として文を発行&lt;a href=&quot;pdostatement.execute&quot;&gt;するPDOStatement ::実行（） &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0bbb69274b5335238a46ebea6c5043d74339225" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::exec()&lt;/strong&gt; executes an SQL statement in a single function call, returning the number of rows affected by the statement.</source>
          <target state="translated">&lt;strong&gt;PDO :: exec（）&lt;/strong&gt;は、単一の関数呼び出しでSQLステートメントを実行し、ステートメントの影響を受ける行数を返します。</target>
        </trans-unit>
        <trans-unit id="416bc9754a848bc23e74d8382b6dea2ddd2e4e4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::exec()&lt;/strong&gt; returns the number of rows that were modified or deleted by the SQL statement you issued. If no rows were affected, &lt;strong&gt;PDO::exec()&lt;/strong&gt; returns &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;PDO :: exec（）&lt;/strong&gt;は、発行したSQLステートメントによって変更または削除された行数を返します。影響を受ける行がない場合、&lt;strong&gt;PDO :: exec（）&lt;/strong&gt;は&lt;em&gt;0を&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0c27c9096715053371552c3ea024ab0513697ab0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::getAvailableDrivers()&lt;/strong&gt; returns an array of PDO driver names. If no drivers are available, it returns an empty array.</source>
          <target state="translated">&lt;strong&gt;PDO :: getAvailableDrivers（）&lt;/strong&gt;は、PDOドライバー名の配列を返します。利用可能なドライバーがない場合は、空の配列を返します。</target>
        </trans-unit>
        <trans-unit id="d0c4ec98a28b05222600e3460da0ec587f4fcd2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::query()&lt;/strong&gt; executes an SQL statement in a single function call, returning the result set (if any) returned by the statement as a PDOStatement object.</source>
          <target state="translated">&lt;strong&gt;PDO :: query（）&lt;/strong&gt;はSQLステートメントを単一の関数呼び出しで実行し、ステートメントによって返された結果セット（ある場合）をPDOStatementオブジェクトとして返します。</target>
        </trans-unit>
        <trans-unit id="7b76845a750a55118904066be9bb0937d157be4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::query()&lt;/strong&gt; returns a PDOStatement object, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">&lt;strong&gt;PDO :: query（）&lt;/strong&gt;はPDOStatementオブジェクトを返します。失敗した&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="71f531c07594bb4080008ddd0638e45db89105db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO::quote()&lt;/strong&gt; places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver.</source>
          <target state="translated">&lt;strong&gt;PDO :: quote（）&lt;/strong&gt;は、（必要に応じて）入力文字列を引用符で囲み、基になるドライバーに適した引用スタイルを使用して、入力文字列内の特殊文字をエスケープします。</target>
        </trans-unit>
        <trans-unit id="b31f40e7c6e1fe8b3ccb6c4e05cf9936ef0b938c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDO&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;PDO&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="96a116e9a19e2cdc9a11e75c7f066e8abcbfc81b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PDOException&lt;/strong&gt;は&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="21bf0360283db6fab6a93edf5963815c75212749" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::bindColumn()&lt;/strong&gt; arranges to have a particular variable bound to a given column in the result-set from a query. Each call to &lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement::fetch()&lt;/a&gt; or &lt;a href=&quot;pdostatement.fetchall&quot;&gt;PDOStatement::fetchAll()&lt;/a&gt; will update all the variables that are bound to columns.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: bindColumn（）&lt;/strong&gt;は、特定の変数をクエリからの結果セットの特定の列にバインドするように&lt;strong&gt;調整&lt;/strong&gt;します。&lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement :: fetch（）&lt;/a&gt;または&lt;a href=&quot;pdostatement.fetchall&quot;&gt;PDOStatement :: fetchAll（）&lt;/a&gt;を呼び出すたびに、列にバインドされているすべての変数が更新されます。</target>
        </trans-unit>
        <trans-unit id="6777e0cf26e4118de2241636d825635ef06531dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::closeCursor()&lt;/strong&gt; frees up the connection to the server so that other SQL statements may be issued, but leaves the statement in a state that enables it to be executed again.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: closeCursor（）&lt;/strong&gt;はサーバーへの接続を解放して、他のSQLステートメントを発行できるようにしますが、ステートメントは再度実行できる状態のままにします。</target>
        </trans-unit>
        <trans-unit id="f0ef53563eac5c5c568d6bb02b67ed0ac083315c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::closeCursor()&lt;/strong&gt; is implemented either as an optional driver specific method (allowing for maximum efficiency), or as the generic PDO fallback if no driver specific function is installed. The PDO generic fallback is semantically the same as writing the following code in your PHP script:</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: closeCursor（）&lt;/strong&gt;は、オプションのドライバー固有のメソッド（最大の効率を可能にする）として、またはドライバー固有の関数がインストールされていない場合は汎用PDOフォールバックとして実装されます。PDO汎用フォールバックは、セマンティック上、PHPスクリプトで次のコードを記述するのと同じです。</target>
        </trans-unit>
        <trans-unit id="6f7a62139292ba248797ba6c9827154b37a0db64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::debugDumpParams()&lt;/strong&gt; now returns the SQL sent to the database, including the full, raw query (including the replaced placeholders with their bounded values). Note, that this will only be available if emulated prepared statements are turned on.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: debugDumpParams（）&lt;/strong&gt;は、データベースに送信されたSQLを、完全な生のクエリ（置換されたプレースホルダーとその境界値を含む）を含めて返すようになりました。これは、エミュレートされた準備済みステートメントがオンになっている場合にのみ使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="28a3b39647c0eaadea87c0f01bd03feb36f04f84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::errorInfo()&lt;/strong&gt; returns an array of error information about the last operation performed by this statement handle. The array consists of the following fields:</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: errorInfo（）&lt;/strong&gt;は、このステートメントハンドルによって実行された最後の操作に関するエラー情報の配列を返します。配列は次のフィールドで構成されています。</target>
        </trans-unit>
        <trans-unit id="5a4f3267abd5be0902bdf7c9db83031081bfcb62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchAll()&lt;/strong&gt; returns an array containing all of the remaining rows in the result set. The array represents each row as either an array of column values or an object with properties corresponding to each column name. An empty array is returned if there are zero results to fetch, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: fetchAll（）&lt;/strong&gt;は、結果セットの残りのすべての行を含む配列を返します。配列は、各行を列値の配列または各列名に対応するプロパティを持つオブジェクトとして表します。フェッチする結果がゼロの場合は空の配列が返され、失敗した&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;が返され&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2e5c5903b169caac8a309e9349514a7f49d52396" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchColumn()&lt;/strong&gt; returns a single column from the next row of a result set or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if there are no more rows.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: fetchColumn（）&lt;/strong&gt;は、結果セットの次の行から単一の列を返します。行がもうない場合は&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; を&lt;/strong&gt;返します。</target>
        </trans-unit>
        <trans-unit id="09df340f69976cd524986f140f3e4eea0e772449" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::fetchColumn()&lt;/strong&gt; should not be used to retrieve boolean columns, as it is impossible to distinguish a value of &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; from there being no more rows to retrieve. Use &lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement::fetch()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;PDOStatementに:: fetchColumnは（）&lt;/strong&gt;の価値を区別することは不可能であるとして、ブール型の列を取得するために使用すべきではありません&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; を&lt;/strong&gt;取得するために、これ以上の行がそこにいるから。代わりに&lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement :: fetch（）を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="faab7fc3dae186014a8bacdfc654dd45e83ac614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::rowCount()&lt;/strong&gt; returns the number of rows affected by a DELETE, INSERT, or UPDATE statement.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: rowCount（）&lt;/strong&gt;は、DELETE、INSERT、またはUPDATEステートメントの影響を受ける行数を返します。</target>
        </trans-unit>
        <trans-unit id="1c5c5547261ae80005c7805c2b042368a9338d26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement::rowCount()&lt;/strong&gt; returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement executed by the corresponding &lt;em&gt;PDOStatement&lt;/em&gt; object.</source>
          <target state="translated">&lt;strong&gt;PDOStatement :: rowCount（）&lt;/strong&gt;は、対応する&lt;em&gt;PDOStatement&lt;/em&gt;オブジェクトによって実行された最後のDELETE、INSERT、またはUPDATEステートメントによって影響を受けた行数を返します。</target>
        </trans-unit>
        <trans-unit id="9bb433b047c8837c03b06c4a17f6f5da29fbd9bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PDOStatement&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PDOStatement&lt;/strong&gt;は&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b2c63ad96fa2ae6d1da10478633a27a6c9f826c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParentIterator&lt;/strong&gt;extends&lt;a href=&quot;class.recursivefilteriterator&quot;&gt;RecursiveFilterIterator&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt;, &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ParentIteratorは&lt;/strong&gt;延び&lt;a href=&quot;class.recursivefilteriterator&quot;&gt;RecursiveFilterIterator&lt;/a&gt;実装&lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt;、&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIteratorを&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="6c2f84b98f8ab6aef9903a4ec0218cc5c6395f78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParseError&lt;/strong&gt; is thrown when an error occurs while parsing PHP code, such as when &lt;a href=&quot;function.eval&quot;&gt;eval()&lt;/a&gt; is called.</source>
          <target state="translated">&lt;strong&gt;ParseError&lt;/strong&gt;は、&lt;a href=&quot;function.eval&quot;&gt;eval（）&lt;/a&gt;が呼び出されたときなど、PHPコードの解析中にエラーが発生したときにスローされます。</target>
        </trans-unit>
        <trans-unit id="984811e13e3ff77ec707b34154fd5be1a7c39c39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ParseError&lt;/strong&gt;extends&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ParseError&lt;/strong&gt;は&lt;a href=&quot;class.error&quot;&gt;エラー&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b83c09b300cb6abc24593f639ae7710046b6c9a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performed translations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;実行された翻訳&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88fd9aa291f3d71b18417e9448806b565d53a043" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::buildFromDirectory()&lt;/strong&gt; returns an associative array mapping internal path of file to the full path of the file on the filesystem.</source>
          <target state="translated">&lt;strong&gt;Phar :: buildFromDirectory（）&lt;/strong&gt;は、ファイルの内部パスをファイルシステム上のファイルの完全パスにマッピングする連想配列を返します。</target>
        </trans-unit>
        <trans-unit id="4ed38a11c580ff6e9cad7676b91e0bab6099e19c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::buildFromIterator()&lt;/strong&gt; returns an associative array mapping internal path of file to the full path of the file on the filesystem.</source>
          <target state="translated">&lt;strong&gt;Phar :: buildFromIterator（）&lt;/strong&gt;は、ファイルの内部パスをファイルシステム上のファイルの完全パスにマッピングする連想配列を返します。</target>
        </trans-unit>
        <trans-unit id="11886c94a842cff52e1f2871b0db08a070d7e64d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::mungServer()&lt;/strong&gt; should only be called within the stub of a phar archive.</source>
          <target state="translated">&lt;strong&gt;Phar :: mungServer（）&lt;/strong&gt;は、pharアーカイブのスタブ内でのみ&lt;strong&gt;呼び出す&lt;/strong&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="1f39c24e4743b9775774eead2dffc8b48c169cb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::setMetadata()&lt;/strong&gt; should be used to store customized data that describes something about the phar archive as a complete entity. &lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo::setMetadata()&lt;/a&gt; should be used for file-specific meta-data. Meta-data can slow down the performance of loading a phar archive if the data is large.</source>
          <target state="translated">&lt;strong&gt;Phar :: setMetadata（）&lt;/strong&gt;は、完全なエンティティとしてのpharアーカイブについての何かを説明するカスタマイズされたデータを格納するために使用されるべきです。&lt;a href=&quot;pharfileinfo.setmetadata&quot;&gt;PharFileInfo :: setMetadata（）&lt;/a&gt;は、ファイル固有のメタデータに使用する必要があります。メタデータは、データが大きい場合、pharアーカイブのロードのパフォーマンスを低下させる可能性があります。</target>
        </trans-unit>
        <trans-unit id="5f50bf0fdbf16ceb6f4f565704f557d1f6e2ad03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::stopBuffering()&lt;/strong&gt; is used in conjunction with the &lt;a href=&quot;phar.startbuffering&quot;&gt;Phar::startBuffering()&lt;/a&gt; method. &lt;a href=&quot;phar.startbuffering&quot;&gt;Phar::startBuffering()&lt;/a&gt; can provide a significant performance boost when creating or modifying a Phar archive with a large number of files. Ordinarily, every time a file within a Phar archive is created or modified in any way, the entire Phar archive will be recreated with the changes. In this way, the archive will be up-to-date with the activity performed on it.</source>
          <target state="translated">&lt;strong&gt;Phar :: stopBuffering（）&lt;/strong&gt;は、&lt;a href=&quot;phar.startbuffering&quot;&gt;Phar :: startBuffering（）&lt;/a&gt;メソッドと組み合わせて使用​​されます。&lt;a href=&quot;phar.startbuffering&quot;&gt;Phar :: startBuffering（）&lt;/a&gt;は、多数のファイルを含むPharアーカイブを作成または変更するときに、パフォーマンスを大幅に向上させることができます。通常、Pharアーカイブ内のファイルが何らかの方法で作成または変更されるたびに、Pharアーカイブ全体が変更されて再作成されます。このようにして、アーカイブは最新の状態で実行されます。</target>
        </trans-unit>
        <trans-unit id="8626347328b102d756f7272e62c6858c85815ac4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar::webPhar()&lt;/strong&gt; should only be called from the stub of a phar archive (see &lt;a href=&quot;https://secure.php.net/manual/en/phar.fileformat.stub.php&quot;&gt;here&lt;/a&gt; for more information on what a stub is).</source>
          <target state="translated">&lt;strong&gt;Phar :: webPhar（）&lt;/strong&gt;は、pharアーカイブのスタブからのみ&lt;strong&gt;呼び出す&lt;/strong&gt;必要があります（スタブの詳細については、&lt;a href=&quot;https://secure.php.net/manual/en/phar.fileformat.stub.php&quot;&gt;こちら&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="99aa271e60ceeafbd8b39f29f36bc3f707fdb4e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Phar&lt;/strong&gt;extends&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt;implements &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Pharは&lt;/strong&gt;延び&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt;実装&lt;a href=&quot;class.countable&quot;&gt;可算&lt;/a&gt;、&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccessのを&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b2eca0b90f888088aacc6f500f70b2f0dcafc61e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharData::buildFromIterator()&lt;/strong&gt; returns an associative array mapping internal path of file to the full path of the file on the filesystem.</source>
          <target state="translated">&lt;strong&gt;PharData :: buildFromIterator（）&lt;/strong&gt;は、ファイルの内部パスをファイルシステム上のファイルの完全パスにマッピングする連想配列を返します。</target>
        </trans-unit>
        <trans-unit id="34ce7ec56d6863dbefb276883a2861cfed11ab8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharData&lt;/strong&gt;extends&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PharData&lt;/strong&gt;は&lt;a href=&quot;class.recursivedirectoryiterator&quot;&gt;RecursiveDirectoryIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e4db26b8795b82bd79098c722b178030b90ccbff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PharException&lt;/strong&gt;は&lt;a href=&quot;class.exception&quot;&gt;例外を&lt;/a&gt;拡張します {</target>
        </trans-unit>
        <trans-unit id="16351115d719178cb19c4944c35b565a3ec5f9d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharFileInfo::chmod()&lt;/strong&gt; allows setting of the executable file permissions bit, as well as read-only bits. Writeable bits are ignored, and set at runtime based on the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed if the file is within a &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; archive. Files within &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt; archives do not have this restriction.</source>
          <target state="translated">&lt;strong&gt;PharFileInfo :: chmod（）を&lt;/strong&gt;使用すると、実行可能ファイルの権限ビットと読み取り専用ビットを設定できます。書き込み可能なビットは無視され、&lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI変数に基づいて実行時に設定されます。pharの内容を変更するすべての機能と同様に、ファイルが&lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt;アーカイブ内にある場合に成功するには、&lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI変数をオフにする必要があります。&lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt;アーカイブ内のファイルには、この制限はありません。</target>
        </trans-unit>
        <trans-unit id="0587446888e9d7ba08a6596f6fd251fe26533063" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharFileInfo::setMetadata()&lt;/strong&gt; should only be used to store customized data in a file that cannot be represented with existing information stored with a file. Meta-data can significantly slow down the performance of loading a phar archive if the data is large, or if there are many files containing meta-data. It is important to note that file permissions are natively supported inside a phar; it is possible to set them with the &lt;a href=&quot;pharfileinfo.chmod&quot;&gt;PharFileInfo::chmod()&lt;/a&gt; method. As with all functionality that modifies the contents of a phar, the &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI variable must be off in order to succeed if the file is within a &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; archive. Files within &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt; archives do not have this restriction.</source>
          <target state="translated">&lt;strong&gt;PharFileInfo :: setMetadata（）&lt;/strong&gt;は、ファイルに保存されている既存の情報では表現できないカスタマイズされたデータをファイルに保存する場合にのみ使用してください。メタデータは、データが大きい場合、またはメタデータを含むファイルが多数ある場合に、pharアーカイブのロードのパフォーマンスを大幅に低下させる可能性があります。ファイルの権限は、phar内でネイティブにサポートされていることに注意することが重要です。&lt;a href=&quot;pharfileinfo.chmod&quot;&gt;PharFileInfo :: chmod（）&lt;/a&gt;メソッドでそれらを設定することが可能です。 pharの内容を変更するすべての機能と同様に、ファイルが&lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt;アーカイブ内にある場合に成功するには、&lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; INI変数をオフにする必要があります。&lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt;アーカイブ内のファイルには、この制限はありません。</target>
        </trans-unit>
        <trans-unit id="82dff2a5c3c912120dc914fbd1fad38f29a36cba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PharFileInfo&lt;/strong&gt;extends&lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;PharFileInfo&lt;/strong&gt;は&lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="95cb8b657a52ee881ecab1a912cd5ad0bf65f6aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pool&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;プール&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="1f9bfc410a628b5915c09911418538a35e491db1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible array indexes for &lt;code&gt;extrainfo&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;extrainfo&lt;/code&gt; の可能な配列インデックス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9e01da745f97efe5f2685acd60533e84fa4d943" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible mysqli_info return values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可能なmysqli_infoの戻り値&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1aa3c7307277e0ef8da52f85bab0b497d8e9d279" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible returned elements from &lt;strong&gt;debug_backtrace()&lt;/strong&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;strong&gt;debug_backtrace（）&lt;/strong&gt;から返される可能性のある要素&lt;strong&gt;&lt;/strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fef39b7082d68e897e306faf261a473c57997f12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible values for &lt;code&gt;flags&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;flags&lt;/code&gt; 可能な値&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80c96e8c4a8ab2f9d1bca0ccccbf1ce44bc5472e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible values for &lt;code&gt;options&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;options&lt;/code&gt; 可能な値&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25f1af6ef958a99a18bcf54d3a7686a80b219df7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可能な値&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c849376db2301b1a4608918320e745b665e02e31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pre-defined &lt;strong&gt;phpcredits()&lt;/strong&gt; flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;定義済みの&lt;strong&gt;phpcredits（）&lt;/strong&gt;フラグ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d46d762e62c0b1f70f9b34f6d3cda73e7c9d4239" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Primary body type (value may vary with used library, use of constants is recommended)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;プライマリボディタイプ（値は使用するライブラリによって異なる場合があります。定数の使用をお勧めします）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ceddad784fb454fcd5fb8bf7193ebc7ef941707e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Publickey elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;公開鍵要素&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7721b9e02795e6a6c420ff3fd1534849aa81b93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Query Options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;クエリオプション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afddf49b6bca7f7eed3fa3f27337e7eba9cc10dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashIntHash&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashIntHash&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4f08cb326e5fd0b03c7049f527e9e3403fc544dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashIntSet&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashIntSet&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="7d0fd502c46675a2b91237e4bdb8db960cb8ae3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashIntStringHash&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashIntStringHash&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="a76c70be36e5483e00d06927a09de0f7ac814400" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;QuickHashStringIntHash&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;QuickHashStringIntHash&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="da774940f4e156df4d3c1d5444e7bc6e0db55492" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Range of inputs on 32-bit machines&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;32ビットマシンでの入力の範囲&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="258bb9649decc0dac891ebe41cc67f367d2c0be3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Range of inputs on 64-bit machines&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;64ビットマシンでの入力の範囲&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8f32cb26cfa2c9f3105adbbc672a56cb86a7351" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RangeException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RangeException&lt;/strong&gt;は&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeExceptionを&lt;/a&gt;拡張します{</target>
        </trans-unit>
        <trans-unit id="01a5cc12fdbd42df64389efb32e51337a9a093ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ranking modes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ランキングモード&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e600c4ac429e9406e0b9be00cbcadec906e5fa2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveArrayIterator&lt;/strong&gt;extends&lt;a href=&quot;class.arrayiterator&quot;&gt;ArrayIterator&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveArrayIterator&lt;/strong&gt;は、&lt;a href=&quot;class.arrayiterator&quot;&gt;ArrayIterator&lt;/a&gt;が&lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="06da191e7da4c2d6232df68d01a5d3b601669626" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveCachingIterator&lt;/strong&gt;extends&lt;a href=&quot;class.cachingiterator&quot;&gt;CachingIterator&lt;/a&gt;implements &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt;, &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveCachingIterator&lt;/strong&gt;は、&lt;a href=&quot;class.cachingiterator&quot;&gt;CachingIterator&lt;/a&gt;が&lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;、&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;、&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt;、&lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="f45b547f37e7d6080032ab3a07e7f213d6f3bf82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveCallbackFilterIterator&lt;/strong&gt;extends&lt;a href=&quot;class.callbackfilteriterator&quot;&gt;CallbackFilterIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt;, &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveCallbackFilterIterator&lt;/strong&gt;は、&lt;a href=&quot;class.callbackfilteriterator&quot;&gt;CallbackFilterIterator&lt;/a&gt;が&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt;、&lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="585cc63e5d1a1e8fb30638acc1c15340d2557d64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveDirectoryIterator&lt;/strong&gt;extends&lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator&lt;/a&gt;implements &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt;, &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveDirectoryIteratorは&lt;/strong&gt;延び&lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator&lt;/a&gt;器具&lt;a href=&quot;class.seekableiterator&quot;&gt;のSeekableIterator&lt;/a&gt;、&lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIteratorを&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="cd92e7fa92649552951cc21aa6ea79e207427172" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveIterator&lt;/strong&gt;は&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="cbcae2569614b7e0964a4e4ed3c459e3e2937998" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveIteratorIterator&lt;/strong&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveIteratorIterator&lt;/strong&gt;は&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="48375fbe2bb49fb900057026e8a6ad1821ca62c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveRegexIterator&lt;/strong&gt;extends&lt;a href=&quot;class.regexiterator&quot;&gt;RegexIterator&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveRegexIterator&lt;/strong&gt;は、&lt;a href=&quot;class.regexiterator&quot;&gt;RegexIterator&lt;/a&gt;が&lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="66569a8c05af935fee645cf61216575b0ab9efb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveTreeIterator&lt;/strong&gt;extends&lt;a href=&quot;class.recursiveiteratoriterator&quot;&gt;RecursiveIteratorIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveTreeIterator&lt;/strong&gt;は、&lt;a href=&quot;class.recursiveiteratoriterator&quot;&gt;RecursiveIteratorIterator&lt;/a&gt;が&lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="c0e4f77639cf18bce83671f44438468c72ef3dfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflection::__toString()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reflection::__toString()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d82721090361585f82caca47b02bef69905e8b2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflection&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;リフレクション&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="43d2bf67a93fe091ab6840aebd7270832b6a6be3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClass::clone()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionClass::clone()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c55837d2d8bc97577b0ebbf3c736630021f9e17a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClass::getVersion()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionClass::getVersion()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a3d4a238ad571b21db3af5795ab1aa4504892de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClass&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionClass&lt;/strong&gt;は&lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d3873ec6d73578eff74e7b932e5121ca59859fda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClassConstant&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionClassConstant&lt;/strong&gt;は&lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="a8eb2ebaa0e12f349db17de22c3ebccc09085fae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionException&lt;/strong&gt;は&lt;a href=&quot;class.exception&quot;&gt;例外&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="25ef2b43c1fe1d571b4a166104d6de72acf06896" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionExtension&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionExtension&lt;/strong&gt;は&lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="c1878269df163882391c8ceb287c52c0fa030e0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionFunction&lt;/strong&gt;extends&lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionFunctionは&lt;/strong&gt;延び&lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt;実装&lt;a href=&quot;class.reflector&quot;&gt;リフレクタ&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="a64174c2d041816d0a8fbf4437c35706e0ee94b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionFunctionAbstract&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionFunctionAbstract&lt;/strong&gt;は&lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="f24cba651bffa9bdbd92555d2a46952fd2bed7cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionGenerator&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionGenerator&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="2a975494919dcabaf1e3e3bb695e1792b961b65d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionMethod&lt;/strong&gt;extends&lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionMethodは&lt;/strong&gt;延び&lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt;実装&lt;a href=&quot;class.reflector&quot;&gt;リフレクタ&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d7b39b9c208168d09fd25dbe7457274a63e7b4ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionNamedType&lt;/strong&gt;extends&lt;a href=&quot;class.reflectiontype&quot;&gt;ReflectionType&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionNamedType&lt;/strong&gt;は&lt;a href=&quot;class.reflectiontype&quot;&gt;ReflectionType&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e3d9989e6c0319f428385cc1bfa9b681eea4da13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionObject&lt;/strong&gt;extends&lt;a href=&quot;class.reflectionclass&quot;&gt;ReflectionClass&lt;/a&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionObjectは&lt;/strong&gt;延び&lt;a href=&quot;class.reflectionclass&quot;&gt;ReflectionClass&lt;/a&gt;実装&lt;a href=&quot;class.reflector&quot;&gt;リフレクタ&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="40f5e30daff5929b34ef662f9562e29438d2b1e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionParameter::getValue()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionParameter::getValue()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc9f7badea44c89671c0c31e2bd9fd614920aa32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionParameter::toString()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionParameter::toString()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="809ff8b001c144692a2e34cea1b1a3b9fa30637b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionParameter&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionParameter&lt;/strong&gt;は&lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="0d4d04ba5c24e0e9300f9a5faa6bf5a1c917b0a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionProperty::toString()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionProperty::toString()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="052fe39dd65e144a596aa99d5b77177e05b35781" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionProperty&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionProperty&lt;/strong&gt;は&lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="176714a272640b72a398d3f5da20b0cd9df1162b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionType&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionType&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="5c851f6ceac7a68e4019b01c57a76123ecb1bce1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionZendExtension&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionZendExtension&lt;/strong&gt;は&lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="57ba0ca5438183a8962deba65b977e269ca31a9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflector&lt;/strong&gt; is an interface implemented by all exportable Reflection classes.</source>
          <target state="translated">&lt;strong&gt;Reflector&lt;/strong&gt;は、エクスポート可能なすべてのReflectionクラスによって実装されるインターフェースです。</target>
        </trans-unit>
        <trans-unit id="8a933acf554f2d72faa1e15c7b82dac22e62880b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflector&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;リフレクター&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="bac8dfb2598462fdb690f023c5332e247c8861e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regex options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;正規表現オプション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="075a39cae56c82081ef8b31e5642a17ef58e3bd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regex syntax modes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;正規表現構文モード&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="965553d24d8e1308fd55c7435dbc41b78d523465" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RegexIterator&lt;/strong&gt;extends&lt;a href=&quot;class.filteriterator&quot;&gt;FilterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RegexIterator&lt;/strong&gt;は&lt;a href=&quot;class.filteriterator&quot;&gt;FilterIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="90bb6954891b7145b2eede9fd6a504fbc961bffc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ResourceBundle&lt;/strong&gt; supports direct access to the data through array access pattern and iteration via &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;, as well as access via class methods. The result will be PHP value for simple resources and &lt;strong&gt;ResourceBundle&lt;/strong&gt; object for complex ones. All resources are read-only.</source>
          <target state="translated">&lt;strong&gt;ResourceBundle&lt;/strong&gt;は、配列アクセスパターンと&lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;を介した反復によるデータへの直接アクセス、およびクラスメソッドを介したアクセスをサポートしています。結果は、単純なリソースのPHP値と複雑な&lt;strong&gt;リソースのResourceBundle&lt;/strong&gt;オブジェクトになります。すべてのリソースは読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="47c25251b662b0c1d02994948de87cfae8e4ba40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ResourceBundle&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ResourceBundle&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="61ae4e47ab3811d582574a67ea41c5b772fb1b5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Result set structure&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;結果セットの構造&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f219364ef4ce4fa3cfa6f9d995a4133926e2531a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return Values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;戻り値&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d01fbd28371d58757cf75323dd759acc585145bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return value and parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;戻り値とパラメーター&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb0333b1c94f23528700a9b20399bb0db7aec8a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returned Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;返される配列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ffc10fa7e10d99e01b850bc1bfdeabeff798f441" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returned values Constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;戻り値定数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ddcdb48dc36224e822df34c134652d467b7d28e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RuntimeException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RuntimeException&lt;/strong&gt;は&lt;a href=&quot;class.exception&quot;&gt;例外を&lt;/a&gt;拡張します {</target>
        </trans-unit>
        <trans-unit id="6b1a36076aed9011536887d0013820d83d484baf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQLite3&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SQLite3&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="10c2b18c25e6d24ea1049708f52afdab8e849d10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQLite3Result&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SQLite3Result&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="abafb085e8eed65605dcef8de8eb4b5a358e5230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQLite3Stmt&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SQLite3Stmt&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="29381b86f70a8de7fae2b9384dd7d469323c21f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sandbox Settings / Status Indicators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;サンドボックス設定/ステータスインジケーター&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31763a47a704bfaffbb3c94f1be7bd32754c8f08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SeekableIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SeekableIterator&lt;/strong&gt; extends &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2ec44d6a3f1457d7eeec3326e505f741af05be87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Serializable&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;シリアライズ可能&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="0708f8b69af5ef076bb45e73bd71d5448e649199" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandler&lt;/strong&gt; is a special class that can be used to expose the current internal PHP session save handler by inheritance. There are seven methods which wrap the seven internal session save handler callbacks (&lt;code&gt;open&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;destroy&lt;/code&gt;, &lt;code&gt;gc&lt;/code&gt; and &lt;code&gt;create_sid&lt;/code&gt;). By default, this class will wrap whatever internal save handler is set as defined by the &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.save-handler&quot;&gt;session.save_handler&lt;/a&gt; configuration directive which is usually &lt;code&gt;files&lt;/code&gt; by default. Other internal session save handlers are provided by PHP extensions such as SQLite (as &lt;code&gt;sqlite&lt;/code&gt;), Memcache (as &lt;code&gt;memcache&lt;/code&gt;), and Memcached (as &lt;code&gt;memcached&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;SessionHandler&lt;/strong&gt;は、継承によって現在の内部PHPセッション保存ハンドラーを公開するために使用できる特別なクラスです。 7つの内部セッション保存ハンドラーコールバックをラップする7つのメソッドがあります（ &lt;code&gt;open&lt;/code&gt; 、 &lt;code&gt;close&lt;/code&gt; 、 &lt;code&gt;read&lt;/code&gt; 、 &lt;code&gt;write&lt;/code&gt; 、 &lt;code&gt;destroy&lt;/code&gt; 、 &lt;code&gt;gc&lt;/code&gt; および &lt;code&gt;create_sid&lt;/code&gt; ）。デフォルトでは、このクラスは、通常デフォルトで &lt;code&gt;files&lt;/code&gt; ある&lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.save-handler&quot;&gt;session.save_handler&lt;/a&gt;構成ディレクティブで定義されているように設定されている内部保存ハンドラーをラップします。その他の内部セッション保存ハンドラーは、SQLite（ &lt;code&gt;sqlite&lt;/code&gt; として）、Memcache（ &lt;code&gt;memcache&lt;/code&gt; として）などのPHP拡張機能によって提供されます）、およびMemcached（ &lt;code&gt;memcached&lt;/code&gt; として）。</target>
        </trans-unit>
        <trans-unit id="5019c3eed4b7c1b46ad0020eb3c4f86209ef2d49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandler&lt;/strong&gt;implements &lt;a href=&quot;class.sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt;, &lt;a href=&quot;class.sessionidinterface&quot;&gt;SessionIdInterface&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionHandler&lt;/strong&gt;は&lt;a href=&quot;class.sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt;、&lt;a href=&quot;class.sessionidinterface&quot;&gt;SessionIdInterface&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="665fc826d3351884d354ba855ad5aeb8411dd133" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; is an &lt;a href=&quot;language.oop5.interfaces&quot;&gt;interface&lt;/a&gt; which defines a prototype for creating a custom session handler. In order to pass a custom session handler to &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler()&lt;/a&gt; using its &lt;em&gt;OOP&lt;/em&gt; invocation, the class must implement this interface.</source>
          <target state="translated">&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt;は、カスタムセッションハンドラーを作成するためのプロトタイプを定義する&lt;a href=&quot;language.oop5.interfaces&quot;&gt;インターフェース&lt;/a&gt;です。&lt;em&gt;OOP&lt;/em&gt;呼び出しを使用してカスタムセッションハンドラーを&lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler（）&lt;/a&gt;に渡すには、クラスでこのインターフェイスを実装する必要があります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7056a532b308b807c92bff3c89b4a0e3544ce643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="a9fc2868b6a3a4e18f0c1188da4247ee8a90ea51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionIdInterface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionIdInterface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="c282cbbafccadb6736feb4218d55f1b197a58578" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionUpdateTimestampHandlerInterface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionUpdateTimestampHandlerInterface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="0741e1a575908f0fa3aeb48eff6794de5ca6c03a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simple &lt;strong&gt;ob_get_status()&lt;/strong&gt; results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;単純な&lt;strong&gt;ob_get_status（）の&lt;/strong&gt;結果&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cad0d922221265f92760a86ae9568f7dafd8a82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SimpleXMLElement::children()&lt;/strong&gt; returns a node object no matter if the current node has children or not. Use &lt;a href=&quot;function.count&quot;&gt;count()&lt;/a&gt; on the return value to see if there are any children. As of PHP 5.3.0, &lt;a href=&quot;simplexmlelement.count&quot;&gt;SimpleXMLElement::count()&lt;/a&gt; may be used instead.</source>
          <target state="translated">&lt;strong&gt;SimpleXMLElement :: children（）&lt;/strong&gt;は、現在のノードに子があるかどうかに関係なく、ノードオブジェクトを返します。戻り値に対して&lt;a href=&quot;function.count&quot;&gt;count（）&lt;/a&gt;を使用して、子があるかどうかを確認します。PHP 5.3.0以降では、代わりに&lt;a href=&quot;simplexmlelement.count&quot;&gt;SimpleXMLElement :: count（）&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="1fc8ad43ea6d353deb31cb5bb229298fb7cc8fc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SimpleXMLElement&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SimpleXMLElement&lt;/strong&gt;は&lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="bcc29a6af76becf02e95513d573ec9aea059a79e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SimpleXMLIterator&lt;/strong&gt;extends&lt;a href=&quot;class.simplexmlelement&quot;&gt;SimpleXMLElement&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SimpleXMLIterator&lt;/strong&gt;は、&lt;a href=&quot;class.simplexmlelement&quot;&gt;SimpleXMLElement&lt;/a&gt;が&lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIteratorを&lt;/a&gt;実装し、&lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="58b3f29ecf6b9205d5e4e556842dada2ff85cacb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single-character quantifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;単一文字の数量詞&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2af544415f7eb4fd4a496b6b23a4141a129c1024" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapClient::SoapClient()&lt;/strong&gt; will generate an &lt;strong&gt;&lt;code&gt;E_ERROR&lt;/code&gt;&lt;/strong&gt; error if the &lt;em&gt;location&lt;/em&gt; and &lt;em&gt;uri&lt;/em&gt; options aren't provided in non-WSDL mode.</source>
          <target state="translated">&lt;strong&gt;SoapClient :: SoapClient（）&lt;/strong&gt;は、&lt;em&gt;場所&lt;/em&gt;と&lt;em&gt;URI&lt;/em&gt;オプションが非WSDLモードで提供されていない場合、&lt;strong&gt; &lt;code&gt;E_ERROR&lt;/code&gt; &lt;/strong&gt;エラーを生成します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="131e6c8ce484605a42eb67ea53b5e2f3da7abf55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapClient&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapClient&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="832648a98fa7a554a2812033f50f954b0ec3bcc6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapFault&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapFault&lt;/strong&gt;は&lt;a href=&quot;class.exception&quot;&gt;例外&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="76938bbbc520d048a0a9a1fee5b688296f990ca6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapHeader&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapHeader&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="fcbefa39489bf10815767fda00561abd207e39d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapParam&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapParam&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="d0e629e7e65f84e58d346349fb1b36031af7581a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapServer&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapServer&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="98b400390e128fb4db37474c59a5cd7bdfb9ca74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapVar&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapVar&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="639f7f510d07b4e5ce708b711f2f26e296be62b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrClientException&lt;/strong&gt;extends&lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrClientException&lt;/strong&gt;は&lt;strong&gt;SolrExceptionを&lt;/strong&gt;拡張し&lt;a href=&quot;class.solrexception&quot;&gt;ます&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d103bbae6aa34d83f75a69e4a5d66c5f6c296014" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrCollapseFunction&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrCollapseFunction&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="1a6f4ae01c0f54103983c8d48543160651ec0e12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrDisMaxQuery::addBigramPhraseFields()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SolrDisMaxQuery::addBigramPhraseFields()&lt;/strong&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
