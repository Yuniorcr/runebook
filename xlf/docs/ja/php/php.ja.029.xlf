<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="193293450c1df8b662c13455f01982af0f921eac" translate="yes" xml:space="preserve">
          <source>Arrays &amp;rarr;</source>
          <target state="translated">配列&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="f00420780a347a050214138188b8ca7ead6eea3b" translate="yes" xml:space="preserve">
          <source>Arrays and objects &lt;em&gt;can not&lt;/em&gt; be used as keys. Doing so will result in a warning: &lt;code&gt;Illegal offset type&lt;/code&gt;.</source>
          <target state="translated">配列とオブジェクトをキーとして使用する&lt;em&gt;ことはできません&lt;/em&gt;。これを行うと、警告が表示されます： &lt;code&gt;Illegal offset type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ad00633798cdf2e2cbfa0dfdb987ebc78b3e41a" translate="yes" xml:space="preserve">
          <source>Arrays and objects are considered equal to zero when calculating the sum.</source>
          <target state="translated">配列とオブジェクトは、合計を計算する際にゼロに等しいとみなされます。</target>
        </trans-unit>
        <trans-unit id="b41538388a5699198e53fbe61e636209c9310357" translate="yes" xml:space="preserve">
          <source>Arrays are always converted to the string&lt;code&gt;&quot;Array&quot;&lt;/code&gt;; because of this, &lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt; and &lt;a href=&quot;function.print&quot;&gt;print&lt;/a&gt; can not by themselves show the contents of an array. To view a single element, use a construction such as &lt;code&gt;echo $arr['foo']&lt;/code&gt;. See below for tips on viewing the entire contents.</source>
          <target state="translated">配列は常に文字列 &lt;code&gt;&quot;Array&quot;&lt;/code&gt; 変換されます。このため、&lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt;と&lt;a href=&quot;function.print&quot;&gt;print&lt;/a&gt;だけでは配列の内容を表示できません。単一の要素を表示するには、 &lt;code&gt;echo $arr['foo']&lt;/code&gt; などの構造を使用します。コンテンツ全体を表示するためのヒントについては、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="13e2026f318ea92a46e4716d9d829d51fb90894b" translate="yes" xml:space="preserve">
          <source>Arrays are ordered. The order can be changed using various sorting functions. See the &lt;a href=&quot;https://www.php.net/manual/en/ref.array.php&quot;&gt;array functions&lt;/a&gt; section for more information. The &lt;a href=&quot;function.count&quot;&gt;count()&lt;/a&gt; function can be used to count the number of items in an array.</source>
          <target state="translated">配列は順序付けられています。順序は、さまざまな並べ替え機能を使用して変更できます。詳細については、&lt;a href=&quot;https://www.php.net/manual/en/ref.array.php&quot;&gt;配列関数の&lt;/a&gt;セクションを参照してください。&lt;a href=&quot;function.count&quot;&gt;カウント（）&lt;/a&gt;関数は、配列内のアイテムの数をカウントするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="89cd641ffc804098360d49d8509075b45e50fc0f" translate="yes" xml:space="preserve">
          <source>Arrays from which elements will be extracted.</source>
          <target state="translated">要素が抽出される配列。</target>
        </trans-unit>
        <trans-unit id="5057d717f0d84d04c53c3d4cdae5816a06db5536" translate="yes" xml:space="preserve">
          <source>Arrays from which elements will be extracted. Values from later arrays overwrite the previous values.</source>
          <target state="translated">要素が抽出される配列。後の配列の値が前の値を上書きします。</target>
        </trans-unit>
        <trans-unit id="55bc132b702eaa2256102ddc24a55abead907b7d" translate="yes" xml:space="preserve">
          <source>Arrays to compare against</source>
          <target state="translated">比較する配列</target>
        </trans-unit>
        <trans-unit id="c6faa24200bc188d42f6a5d0f647bb10d85a214c" translate="yes" xml:space="preserve">
          <source>Arrays to compare against.</source>
          <target state="translated">比較対象となる配列。</target>
        </trans-unit>
        <trans-unit id="579bc3541992b64849299430d9d86330a9e26b96" translate="yes" xml:space="preserve">
          <source>Arrays to compare keys against.</source>
          <target state="translated">キーを比較するための配列。</target>
        </trans-unit>
        <trans-unit id="52b8aa1cf8a7ffa9053bf6d496efe60777e28db2" translate="yes" xml:space="preserve">
          <source>Arrays to compare values against.</source>
          <target state="translated">値を比較するための配列。</target>
        </trans-unit>
        <trans-unit id="a1a14c0392b304f27cfa491b41ab00cc269ad8f3" translate="yes" xml:space="preserve">
          <source>Arrays, which are valid callables, are allowed as variable functions.</source>
          <target state="translated">有効な呼び出し可能な配列は、変数関数として許可されています。</target>
        </trans-unit>
        <trans-unit id="2eff12655bfd37e8aba34fc4ce9e8a7b43bbf939" translate="yes" xml:space="preserve">
          <source>Arrow Functions</source>
          <target state="translated">矢印関数</target>
        </trans-unit>
        <trans-unit id="423ac3d3e3325638dce913070553cd91225885d8" translate="yes" xml:space="preserve">
          <source>Arrow functions became available.</source>
          <target state="translated">矢印機能が使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="15c1c727f07d4b5800dfaa05a20f49f7e5e868bd" translate="yes" xml:space="preserve">
          <source>Arrow functions have the basic form &lt;code&gt;fn (argument_list) =&amp;gt; expr&lt;/code&gt;.</source>
          <target state="translated">矢印関数の基本形式は &lt;code&gt;fn (argument_list) =&amp;gt; expr&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3dd68cac3427fa43d636faae6f7b1b6832521d41" translate="yes" xml:space="preserve">
          <source>Arrow functions support the same features as &lt;a href=&quot;functions.anonymous&quot;&gt;anonymous functions&lt;/a&gt;, except that using variables from the parent scope is always automatic.</source>
          <target state="translated">矢印関数は、親スコープの変数の使用が常に自動である点を除いて、&lt;a href=&quot;functions.anonymous&quot;&gt;無名関数&lt;/a&gt;と同じ機能をサポートします。</target>
        </trans-unit>
        <trans-unit id="0f0f0bbc27f2016ee36a8deeb81909e53f788c7d" translate="yes" xml:space="preserve">
          <source>Arrow functions use by-value variable binding. This is roughly equivalent to performing a &lt;code&gt;use($x)&lt;/code&gt; for every variable &lt;var&gt;$x&lt;/var&gt; used inside the arrow function. A by-value binding means that it is not possible to modify any values from the outer scope. &lt;a href=&quot;functions.anonymous&quot;&gt;Anonymous functions&lt;/a&gt; can be used instead for by-ref bindings.</source>
          <target state="translated">矢印関数は、値による変数バインディングを使用します。これは、arrow関数内で使用されるすべての変数 &lt;var&gt;$x&lt;/var&gt; に対して &lt;code&gt;use($x)&lt;/code&gt; を実行することとほぼ同じです。値によるバインディングとは、外部スコープの値を変更できないことを意味します。代わりに、&lt;a href=&quot;functions.anonymous&quot;&gt;匿名関数&lt;/a&gt;を参照によるバインディングに使用できます。</target>
        </trans-unit>
        <trans-unit id="58e1c39a720b711debf39fd65a92466cb8edb6b7" translate="yes" xml:space="preserve">
          <source>Arrow functions were introduced in PHP 7.4 as a more concise syntax for &lt;a href=&quot;functions.anonymous&quot;&gt;anonymous functions&lt;/a&gt;.</source>
          <target state="translated">矢印関数は、&lt;a href=&quot;functions.anonymous&quot;&gt;無名関数の&lt;/a&gt;より簡潔な構文としてPHP7.4で導入されました。</target>
        </trans-unit>
        <trans-unit id="a7a76a0bc63a506f3f30aeabd35d81974d23b4d0" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; variables hold special handles to opened files, database connections, image canvas areas and the like, converting to a &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; makes no sense.</source>
          <target state="translated">&lt;a href=&quot;language.types.resource&quot;&gt;リソース&lt;/a&gt;変数がへの変換、開いたファイル、データベース接続、イメージキャンバスエリアのように特殊なハンドルを保持する&lt;a href=&quot;language.types.resource&quot;&gt;リソースは&lt;/a&gt;意味がありません。</target>
        </trans-unit>
        <trans-unit id="3e2e5c40b7f5a78b78e478764cc2bf05ef960df0" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;switch&lt;/code&gt; statements, &lt;code&gt;match&lt;/code&gt; expressions are executed match arm by match arm. In the beginning, no code is executed. The conditional expressions are only evaluated if all previous conditional expressions failed to match the subject expression. Only the return expression corresponding to the matching conditional expression will be evaluated. For example:</source>
          <target state="translated">&lt;code&gt;switch&lt;/code&gt; ステートメントとして、 &lt;code&gt;match&lt;/code&gt; 式はmatcharmごとに実行されます。最初は、コードは実行されません。条件式は、以前のすべての条件式がサブジェクト式と一致しなかった場合にのみ評価されます。一致する条件式に対応する戻り式のみが評価されます。例えば：</target>
        </trans-unit>
        <trans-unit id="85c1729d182d1c489eb4b282de8851b224b74e14" translate="yes" xml:space="preserve">
          <source>As &lt;em&gt;foreach&lt;/em&gt; relies on the internal array pointer in PHP 5, changing it within the loop may lead to unexpected behavior.</source>
          <target state="translated">&lt;em&gt;foreachのは&lt;/em&gt; PHP 5における内部配列ポインタに依存して、ループ内でそれを変更すると、予期しない動作につながる可能性があります。</target>
        </trans-unit>
        <trans-unit id="dac40081b6f6d0c37864e800eb6c8af39788cacf" translate="yes" xml:space="preserve">
          <source>As &lt;strong&gt;idate()&lt;/strong&gt; always returns an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; and as they can't start with a &quot;0&quot;, &lt;strong&gt;idate()&lt;/strong&gt; may return fewer digits than you would expect. See the example below.</source>
          <target state="translated">通り&lt;strong&gt;）（IDATE&lt;/strong&gt;常に返す&lt;a href=&quot;language.types.integer&quot;&gt;整数を&lt;/a&gt;、彼らが「0」で始めることはできませんとして、&lt;strong&gt;IDATE（）は、&lt;/strong&gt;あなたが期待するよりも少ない桁数を返すことがあります。以下の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="7f1a1056f29309de1520eece2e20724347726c67" translate="yes" xml:space="preserve">
          <source>As &lt;strong&gt;idate()&lt;/strong&gt; always returns an int and as they can't start with a &quot;0&quot;, &lt;strong&gt;idate()&lt;/strong&gt; may return fewer digits than you would expect. See the example below.</source>
          <target state="translated">通り&lt;strong&gt;）（IDATE&lt;/strong&gt;常にintを返し、彼らが「0」で始めることはできませんとして、&lt;strong&gt;IDATE（）は、&lt;/strong&gt;あなたが期待するよりも少ない桁数を返すことがあります。以下の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="6ba22553d46d69c51ddeb2fc19c181ce8e3ac1bf" translate="yes" xml:space="preserve">
          <source>As &lt;strong&gt;mysqli_fetch_all()&lt;/strong&gt; returns all the rows as an array in a single step, it may consume more memory than some similar functions such as &lt;a href=&quot;mysqli-result.fetch-array&quot;&gt;mysqli_fetch_array()&lt;/a&gt;, which only returns one row at a time from the result set. Further, if you need to iterate over the result set, you will need a looping construct that will further impact performance. For these reasons &lt;strong&gt;mysqli_fetch_all()&lt;/strong&gt; should only be used in those situations where the fetched result set will be sent to another layer for processing.</source>
          <target state="translated">&lt;strong&gt;）（mysqli_fetch_all&lt;/strong&gt;単一ステップで配列としてすべての行を返し、それは以下のようないくつかの同様の機能よりも多くのメモリを消費することができる&lt;a href=&quot;mysqli-result.fetch-array&quot;&gt;）（mysqli_fetch_array&lt;/a&gt;のみの結果セットから一度に1つの行を返します。さらに、結果セットを反復処理する必要がある場合は、パフォーマンスにさらに影響を与えるループ構造が必要になります。これらの理由により、&lt;strong&gt;mysqli_fetch_all（）&lt;/strong&gt;は、フェッチされた結果セットが別のレイヤーに送信されて処理される状況でのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="a329194c41a784ee23cce6ffe84a20f82ccf70cb" translate="yes" xml:space="preserve">
          <source>As PHP's &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; type is signed, but &lt;strong&gt;dechex()&lt;/strong&gt; deals with unsigned integers, negative integers will be treated as though they were unsigned.</source>
          <target state="translated">PHPの&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;型は符号付きですが、&lt;strong&gt;dechex（）&lt;/strong&gt;は符号なし整数を処理するため、負の整数は符号なし整数として扱われます。</target>
        </trans-unit>
        <trans-unit id="64ff3af4159387d35fb708c65aede0db3ce40b9e" translate="yes" xml:space="preserve">
          <source>As PHP's int type is signed, but &lt;strong&gt;dechex()&lt;/strong&gt; deals with unsigned integers, negative integers will be treated as though they were unsigned.</source>
          <target state="translated">PHPのint型は符号付きですが、&lt;strong&gt;dechex（）&lt;/strong&gt;は符号なし整数を処理するため、負の整数は符号なしであるかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="9cfdc220eeee6308b5488a46fa0a15985f80dc66" translate="yes" xml:space="preserve">
          <source>As a convenient shorthand, if any option settings are required at the start of a non-capturing subpattern, the option letters may appear between the &quot;?&quot; and the &quot;:&quot;. Thus the two patterns</source>
          <target state="translated">便利な速記法として、非捕捉サブパターンの開始時にオプション設定が必要な場合、オプション文字は「? したがって、2つのパターン</target>
        </trans-unit>
        <trans-unit id="b89a3a1cb6343c744409528bb467fc498774f2d6" translate="yes" xml:space="preserve">
          <source>As a side effect, setting a zero mousemask in &lt;code&gt;newmask&lt;/code&gt; turns off the mouse pointer. Setting a non zero value turns mouse pointer on.</source>
          <target state="translated">副作用として、newmaskにゼロのマウス &lt;code&gt;newmask&lt;/code&gt; 設定すると、マウスポインタがオフになります。ゼロ以外の値を設定すると、マウスポインタがオンになります。</target>
        </trans-unit>
        <trans-unit id="0cd34297c16fff75e89c24c4ecee1f8b7f43579b" translate="yes" xml:space="preserve">
          <source>As a side effect, the rows property of the query-result object is incremented for each successful call to &lt;strong&gt;dbx_fetch_row()&lt;/strong&gt;.</source>
          <target state="translated">副作用として、クエリ結果オブジェクトのrowsプロパティは、&lt;strong&gt;dbx_fetch_row（）の&lt;/strong&gt;呼び出しが成功するたびにインクリメントされます。</target>
        </trans-unit>
        <trans-unit id="31d14c00ec2dac16a1d11f5861a0625269766c42" translate="yes" xml:space="preserve">
          <source>As a workaround, you can use the &lt;a href=&quot;function.easter-days&quot;&gt;easter_days()&lt;/a&gt; with &lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt; to calculate the start of Easter in your PHP time zone as follows:</source>
          <target state="translated">回避策として、&lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt;および&lt;a href=&quot;class.dateinterval&quot;&gt;DateInterval&lt;/a&gt;を指定した&lt;a href=&quot;function.easter-days&quot;&gt;easter_days（）&lt;/a&gt;を使用して、PHPタイムゾーンでのイースターの開始を次のように計算できます。</target>
        </trans-unit>
        <trans-unit id="cbcf5f57b082c563c8169d696d8f5848ffc9e4db" translate="yes" xml:space="preserve">
          <source>As all the keys in the above example are cast to &lt;code&gt;1&lt;/code&gt;, the value will be overwritten on every new element and the last assigned value &lt;code&gt;&quot;d&quot;&lt;/code&gt; is the only one left over.</source>
          <target state="translated">上記の例のすべてのキーは &lt;code&gt;1&lt;/code&gt; にキャストされているため、値は新しい要素ごとに上書きされ、最後に割り当てられた値 &lt;code&gt;&quot;d&quot;&lt;/code&gt; だけが残ります。</target>
        </trans-unit>
        <trans-unit id="edd217b6172eabc149f1fbb6a011cb601bbb9bf5" translate="yes" xml:space="preserve">
          <source>As all the keys in the above example are cast to &lt;em&gt;1&lt;/em&gt;, the value will be overwritten on every new element and the last assigned value &lt;em&gt;&quot;d&quot;&lt;/em&gt; is the only one left over.</source>
          <target state="translated">上記の例のすべてのキーは&lt;em&gt;1&lt;/em&gt;にキャストされるため、値はすべての新しい要素で上書きされ、最後に割り当てられた値&lt;em&gt;&quot;d&quot;&lt;/em&gt;だけが残ります。</target>
        </trans-unit>
        <trans-unit id="595fa836d8df5490ae5ad8e10e25b77f55ab8c03" translate="yes" xml:space="preserve">
          <source>As an alternative, we can implement an &lt;code&gt;xrange()&lt;/code&gt; generator, which will only ever need enough memory to create an &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; object and track the current state of the generator internally, which turns out to be less than 1 kilobyte.</source>
          <target state="translated">別の方法として、 &lt;code&gt;xrange()&lt;/code&gt; ジェネレーターを実装できます。これは、&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;オブジェクトを作成し、ジェネレーターの現在の状態を内部で追跡するのに十分なメモリのみを必要とします。これは1キロバイト未満であることがわかります。</target>
        </trans-unit>
        <trans-unit id="c57603349e8c574b28d490ac3f381f26a3c4e1ed" translate="yes" xml:space="preserve">
          <source>As an alternative, we can implement an &lt;em&gt;xrange()&lt;/em&gt; generator, which will only ever need enough memory to create an &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; object and track the current state of the generator internally, which turns out to be less than 1 kilobyte.</source>
          <target state="translated">別の方法として、&lt;em&gt;xrange（）&lt;/em&gt;ジェネレーターを実装することもできます。これは、&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;オブジェクトを作成し、ジェネレーターの現在の状態を内部で追跡するのに十分なメモリしか必要としないため、1キロバイト未満であることが&lt;em&gt;わかり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="bbb553a6aa677aae90c4626ea4608c977481f3f9" translate="yes" xml:space="preserve">
          <source>As an exception, if the value is a string and both int and float are part of the union, the preferred type is determined by the existing &amp;ldquo;numeric string&amp;rdquo; semantics. For example, for &lt;code&gt;&quot;42&quot;&lt;/code&gt;int is chosen, while for &lt;code&gt;&quot;42.0&quot;&lt;/code&gt;float is chosen.</source>
          <target state="translated">例外として、値が文字列であり、intとfloatの両方が和集合の一部である場合、優先される型は既存の「数値文字列」セマンティクスによって決定されます。たとえば、 &lt;code&gt;&quot;42&quot;&lt;/code&gt; intが選択され、 &lt;code&gt;&quot;42.0&quot;&lt;/code&gt; floatが選択されます。</target>
        </trans-unit>
        <trans-unit id="bc93b8a1f064a5aa50fd940f766f071daf8a690a" translate="yes" xml:space="preserve">
          <source>As an interesting note, &lt;strong&gt;Phar::buildFromIterator()&lt;/strong&gt; can also be used to copy the contents of an existing phar archive, as the Phar object descends from &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;:</source>
          <target state="translated">興味深いことに、Pharオブジェクトは&lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;から&lt;strong&gt;派生しているため&lt;/strong&gt;、&lt;strong&gt;Phar :: buildFromIterator（）&lt;/strong&gt;を使用して既存のpharアーカイブの内容をコピーすることもできます。</target>
        </trans-unit>
        <trans-unit id="e0eba7c1d87450eb2809e9bbf1f767e34c2f8ca7" translate="yes" xml:space="preserve">
          <source>As an interesting note, &lt;strong&gt;PharData::buildFromIterator()&lt;/strong&gt; can also be used to copy the contents of an existing phar, tar or zip archive, as the PharData object descends from &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;興味深いことに&lt;/strong&gt;、PharDataオブジェクトは&lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt;から派生しているため、&lt;strong&gt;PharData :: buildFromIterator（）&lt;/strong&gt;を使用して、既存のphar、tar、またはzipアーカイブの内容をコピーすることもできます。</target>
        </trans-unit>
        <trans-unit id="6cce3fb996ac5a9b6f760245a81d8df33b4c0f95" translate="yes" xml:space="preserve">
          <source>As certain types have undefined behavior when converting to int, this is also the case when converting to float.</source>
          <target state="translated">特定の型では int への変換時に未定義の動作をするため、float への変換時にも同様の動作をします。</target>
        </trans-unit>
        <trans-unit id="bbbb919a712027a68824ee47b6981465ddff276e" translate="yes" xml:space="preserve">
          <source>As described in &lt;a href=&quot;language.expressions&quot;&gt;the section about expressions&lt;/a&gt;, expression is evaluated to its Boolean value. If expression evaluates to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, PHP will execute statement, and if it evaluates to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; - it'll ignore it. More information about what values evaluate to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; can be found in the &lt;a href=&quot;language.types.boolean#language.types.boolean.casting&quot;&gt;'Converting to boolean'&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;language.expressions&quot;&gt;式に関するセクションで&lt;/a&gt;説明したように、式はブール値に評価されます。式が&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;と評価された場合、PHPはステートメントを実行し、&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;と評価された&lt;strong&gt;場合、&lt;/strong&gt;無視します。どの値が&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; と&lt;/strong&gt;評価されるかの詳細については、&lt;a href=&quot;language.types.boolean#language.types.boolean.casting&quot;&gt;「ブール値への変換」&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="b81bf47dd2ed92b61ca9dbcb727ac6a9defbf4f0" translate="yes" xml:space="preserve">
          <source>As described in &lt;a href=&quot;language.expressions&quot;&gt;the section about expressions&lt;/a&gt;, expression is evaluated to its Boolean value. If expression evaluates to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, PHP will execute statement, and if it evaluates to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; - it'll ignore it. More information about what values evaluate to &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; can be found in the &lt;a href=&quot;language.types.boolean#language.types.boolean.casting&quot;&gt;'Converting to boolean'&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;language.expressions&quot;&gt;式に関するセクションで&lt;/a&gt;説明したように、式はブール値に評価されます。式が&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;と評価された&lt;strong&gt;場合&lt;/strong&gt;、PHPはステートメントを実行し、&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;と評価された場合、それを無視します。どの値が&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; と&lt;/strong&gt;評価されるかについての詳細は、&lt;a href=&quot;language.types.boolean#language.types.boolean.casting&quot;&gt;「ブール値への変換」&lt;/a&gt;セクションにあります。</target>
        </trans-unit>
        <trans-unit id="475811bb89d882eb446b58ba5bd203f575023148" translate="yes" xml:space="preserve">
          <source>As directives are handled as the file is being compiled, only literals may be given as directive values. Variables and constants cannot be used. To illustrate:</source>
          <target state="translated">ディレクティブはファイルのコンパイル時に処理されるため、ディレクティブの値にはリテラルのみを与えることができます。変数や定数は使用できません。説明するために</target>
        </trans-unit>
        <trans-unit id="1eb89e8e040b5bb331c4e0461ce8490e82979a5d" translate="yes" xml:space="preserve">
          <source>As in &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; (&lt;code&gt;rb&lt;/code&gt; or &lt;code&gt;wb&lt;/code&gt;) but can also include a compression level (&lt;code&gt;wb9&lt;/code&gt;) or a strategy: &lt;code&gt;f&lt;/code&gt; for filtered data as in &lt;code&gt;wb6f&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt; for &lt;code&gt;Huffman only compression&lt;/code&gt; as in &lt;code&gt;wb1h&lt;/code&gt;. (See the description of &lt;code&gt;deflateInit2&lt;/code&gt; in &lt;var&gt;zlib.h&lt;/var&gt; for more information about the strategy parameter.)</source>
          <target state="translated">以下のよう&lt;a href=&quot;function.fopen&quot;&gt;にfopen（） &lt;/a&gt;（ &lt;code&gt;rb&lt;/code&gt; または &lt;code&gt;wb&lt;/code&gt; ）だけでなく、圧縮レベル（含めることができる &lt;code&gt;wb9&lt;/code&gt; ）または戦略を： &lt;code&gt;f&lt;/code&gt; のようにフィルタリングされたデータのための &lt;code&gt;wb6f&lt;/code&gt; 、 &lt;code&gt;h&lt;/code&gt; のために &lt;code&gt;Huffman only compression&lt;/code&gt; のよう &lt;code&gt;wb1h&lt;/code&gt; 。（戦略パラメーターの詳細については、 &lt;var&gt;zlib.h&lt;/var&gt; の &lt;code&gt;deflateInit2&lt;/code&gt; の説明を参照してください。）</target>
        </trans-unit>
        <trans-unit id="7918dc9dd63c2441abdf44b439adfde1a71f1249" translate="yes" xml:space="preserve">
          <source>As in &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; (&lt;em&gt;rb&lt;/em&gt; or &lt;em&gt;wb&lt;/em&gt;) but can also include a compression level (&lt;em&gt;wb9&lt;/em&gt;) or a strategy: &lt;em&gt;f&lt;/em&gt; for filtered data as in &lt;em&gt;wb6f&lt;/em&gt;, &lt;em&gt;h&lt;/em&gt; for &lt;em&gt;Huffman only compression&lt;/em&gt; as in &lt;em&gt;wb1h&lt;/em&gt;. (See the description of &lt;em&gt;deflateInit2&lt;/em&gt; in &lt;var&gt;zlib.h&lt;/var&gt; for more information about the strategy parameter.)</source>
          <target state="translated">以下のよう&lt;a href=&quot;function.fopen&quot;&gt;にfopen（） &lt;/a&gt;（&lt;em&gt;RB&lt;/em&gt;または&lt;em&gt;WB&lt;/em&gt;）だけでなく、圧縮レベル（含めることができる&lt;em&gt;WB9&lt;/em&gt;）または戦略を：&lt;em&gt;F&lt;/em&gt;のようにフィルタリングされたデータのための&lt;em&gt;wb6f&lt;/em&gt;、&lt;em&gt;時間&lt;/em&gt;のために&lt;em&gt;ハフマンのみの圧縮&lt;/em&gt;のよう&lt;em&gt;wb1h&lt;/em&gt;。（戦略パラメーターの詳細については、 &lt;var&gt;zlib.h&lt;/var&gt; の&lt;em&gt;deflateInit2&lt;/em&gt;の説明を参照してください。）</target>
        </trans-unit>
        <trans-unit id="abccff45e8d574adf61eef7c1a55c7f58112ba36" translate="yes" xml:space="preserve">
          <source>As in C or Perl, PHP requires instructions to be terminated with a semicolon at the end of each statement. The closing tag of a block of PHP code automatically implies a semicolon; you do not need to have a semicolon terminating the last line of a PHP block. The closing tag for the block will include the immediately trailing newline if one is present.</source>
          <target state="translated">CやPerlと同様に、PHPでも各文の最後にセミコロンで終了させる必要があります。PHP コードのブロックの終了タグは自動的にセミコロンを意味します。PHP ブロックの最後の行で終わるセミコロンは必要ありません。</target>
        </trans-unit>
        <trans-unit id="8210401696a99cbb69717b67cd62e21f6f720e4d" translate="yes" xml:space="preserve">
          <source>As in Perl, you can access a value from the array inside double quotes. However, with PHP you'll need to enclose your array between curly braces.</source>
          <target state="translated">Perl と同様に、二重引用符で囲まれた配列から値にアクセスすることができます。しかし、PHP の場合は中括弧で配列を囲む必要があります。</target>
        </trans-unit>
        <trans-unit id="184bcfca2614d971cd5434f53ddb2344c626b04d" translate="yes" xml:space="preserve">
          <source>As in single quoted &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;s, escaping any other character will result in the backslash being printed too. Before PHP 5.1.1, the backslash in &lt;em&gt;\{$var}&lt;/em&gt; had not been printed.</source>
          <target state="translated">一重引用符で囲まれた&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;の場合と同様に、他の文字をエスケープすると、バックスラッシュも出力されます。PHP 5.1.1より前は、&lt;em&gt;\ {$ var}の&lt;/em&gt;バックスラッシュは出力されませんでした。</target>
        </trans-unit>
        <trans-unit id="5a14b560de7a6409320c3ce58dda6da96958b707" translate="yes" xml:space="preserve">
          <source>As in single quoted strings, escaping any other character will result in the backslash being printed too.</source>
          <target state="translated">シングルクォートされた文字列と同様に、他の文字をエスケープするとバックスラッシュも表示されます。</target>
        </trans-unit>
        <trans-unit id="5a164916607c474c07cbc1fbf5ba221c5d02b37c" translate="yes" xml:space="preserve">
          <source>As mentioned above, if no key is specified, the maximum of the existing &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; indices is taken, and the new key will be that maximum value plus 1 (but at least 0). If no &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; indices exist yet, the key will be &lt;em&gt;0&lt;/em&gt; (zero).</source>
          <target state="translated">上記のように、キーが指定されていない場合、既存の&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;インデックスの最大値が取得され、新しいキーはその最大値に1を加えたものになります（ただし、少なくとも0）。ない場合は&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;インデックスがまだ存在しない、キーになります&lt;em&gt;0&lt;/em&gt;（ゼロ）。</target>
        </trans-unit>
        <trans-unit id="a4a0bcb960c8cbd4784c5001494b738b9ef8bd0f" translate="yes" xml:space="preserve">
          <source>As mentioned above, if no key is specified, the maximum of the existing int indices is taken, and the new key will be that maximum value plus 1 (but at least 0). If no int indices exist yet, the key will be &lt;code&gt;0&lt;/code&gt; (zero).</source>
          <target state="translated">上記のように、キーが指定されていない場合、既存のintインデックスの最大値が取得され、新しいキーはその最大値に1を加えたものになります（ただし、少なくとも0）。intインデックスがまだ存在しない場合、キーは &lt;code&gt;0&lt;/code&gt; （ゼロ）になります。</target>
        </trans-unit>
        <trans-unit id="6561019725782dd28ce950a75f522adf7edc7281" translate="yes" xml:space="preserve">
          <source>As noted above, providing the &lt;code&gt;salt&lt;/code&gt; option in PHP 7.0 will generate a deprecation warning. Support for providing a salt manually may be removed in a future PHP release.</source>
          <target state="translated">上記のように、PHP 7.0で &lt;code&gt;salt&lt;/code&gt; オプションを提供すると、非推奨の警告が生成されます。ソルトを手動で提供するためのサポートは、将来のPHPリリースで削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="6bef17ca160a3a89abf839641cafed8bb7fc8f65" translate="yes" xml:space="preserve">
          <source>As noted above, providing the &lt;em&gt;salt&lt;/em&gt; option in PHP 7.0 will generate a deprecation warning. Support for providing a salt manually may be removed in a future PHP release.</source>
          <target state="translated">上記のように、PHP 7.0で&lt;em&gt;salt&lt;/em&gt;オプションを指定すると、非推奨の警告が生成されます。ソルトを手動で提供するためのサポートは、将来のPHPリリースで削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="8c93fb6d874371f16c4727c9906678321cf65a70" translate="yes" xml:space="preserve">
          <source>As noted in the return value section, &lt;strong&gt;imagecropauto()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; when there is either nothing to crop or the whole image would be cropped. In this example we have an image resource &lt;em&gt;$im&lt;/em&gt; which should be automatically cropped only if there is something to crop; otherwise we want to proceed with the original image.</source>
          <target state="translated">戻り値のセクションで&lt;strong&gt;説明&lt;/strong&gt;したように、トリミングするものが何もないか、画像全体がトリミングされる&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt;imagecropauto（）&lt;/strong&gt;は&lt;strong&gt;FALSEを&lt;/strong&gt;返し&lt;strong&gt;ます&lt;/strong&gt;。この例では、トリミングするものがある場合にのみ自動的にトリミングされる画像リソース&lt;em&gt;$ im&lt;/em&gt;があります。それ以外の場合は、元の画像から続行します。</target>
        </trans-unit>
        <trans-unit id="983dd0d5a076ad882c298b7c4c1fb40be7a1d67a" translate="yes" xml:space="preserve">
          <source>As noted in the return value section, &lt;strong&gt;imagecropauto()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the whole image was cropped. In this example we have an image resource &lt;code&gt;$im&lt;/code&gt; which should be automatically cropped only if there is something to crop; otherwise we want to proceed with the original image.</source>
          <target state="translated">戻り値のセクションに記載されているように、画像全体がトリミングされた場合、&lt;strong&gt;imagecropauto（）&lt;/strong&gt;は&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; を&lt;/strong&gt;返します。この例では、画像リソース &lt;code&gt;$im&lt;/code&gt; があり、トリミングするものがある場合にのみ自動的にトリミングされます。それ以外の場合は、元の画像を続行します。</target>
        </trans-unit>
        <trans-unit id="b6275fc264a1e0a8ee4cbc66eae91bf2657c19d1" translate="yes" xml:space="preserve">
          <source>As noted in the warning above, testing floating point values for equality is problematic, due to the way that they are represented internally. However, there are ways to make comparisons of floating point values that work around these limitations.</source>
          <target state="translated">上の警告でも述べたように、浮動小数点値が内部的に表現されているため、浮動小数点値をテストして等しくなるかどうかを確認することは問題があります。しかし、これらの制限を回避して浮動小数点値の比較を行う方法があります。</target>
        </trans-unit>
        <trans-unit id="e29d39183e604b4bf069f513ed246605448b887e" translate="yes" xml:space="preserve">
          <source>As of 2.1.18, Yaf supports Controllers autoloading for user script side, (which means the autoloading triggered by user php script, eg: access a controller static property in Bootstrap or Plugins), but autoloader only try to locate controller class script under the default module folder, which is &quot;APPLICATION_PATH/controllers/&quot;.</source>
          <target state="translated">2.1.18のように、Yafはユーザースクリプト側のためのコントローラのオートローディングをサポートしています(つまり、ユーザーphpスクリプトによってトリガーされたオートローディングを意味します:例えば、BootstrapやPluginsでコントローラの静的プロパティにアクセスします)が、オートローダはデフォルトのモジュールフォルダの下でコントローラクラスのスクリプトを見つけようとするだけで、それは &quot;APPLICATION_PATH/controllers/&quot;です。</target>
        </trans-unit>
        <trans-unit id="24552d8823ec63b9bab018d470ca04d73dff53f9" translate="yes" xml:space="preserve">
          <source>As of 5.3.6, this parameter is a bitmask for the following options:</source>
          <target state="translated">5.3.6では、このパラメータは以下のオプションのビットマスクです。</target>
        </trans-unit>
        <trans-unit id="21b818dc4bea94795009785fa6bcbcde0cd78c98" translate="yes" xml:space="preserve">
          <source>As of 5.4.0, this parameter can be used to limit the number of stack frames printed. By default (&lt;code&gt;limit&lt;/code&gt;=&lt;code&gt;0&lt;/code&gt;) it prints all stack frames.</source>
          <target state="translated">5.4.0以降、このパラメーターを使用して、印刷されるスタックフレームの数を制限できます。デフォルト（ &lt;code&gt;limit&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt; ）では、すべてのスタックフレームが出力されます。</target>
        </trans-unit>
        <trans-unit id="081e8953c3a26c0e080b4a432d563ad51dbbded2" translate="yes" xml:space="preserve">
          <source>As of 5.4.0, this parameter can be used to limit the number of stack frames printed. By default (&lt;code&gt;limit&lt;/code&gt;=&lt;em&gt;0&lt;/em&gt;) it prints all stack frames.</source>
          <target state="translated">5.4.0以降、このパラメーターを使用して、印刷されるスタックフレームの数を制限できます。デフォルトでは（ &lt;code&gt;limit&lt;/code&gt; = &lt;em&gt;0&lt;/em&gt;）すべてのスタックフレームを印刷します。</target>
        </trans-unit>
        <trans-unit id="a01da91269daf039fd62ebf445f687e98dea5a22" translate="yes" xml:space="preserve">
          <source>As of 5.4.0, this parameter can be used to limit the number of stack frames returned. By default (&lt;code&gt;limit&lt;/code&gt;=&lt;code&gt;0&lt;/code&gt;) it returns all stack frames.</source>
          <target state="translated">5.4.0以降、このパラメーターを使用して、返されるスタックフレームの数を制限できます。デフォルト（ &lt;code&gt;limit&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt; ）では、すべてのスタックフレームが返されます。</target>
        </trans-unit>
        <trans-unit id="bad7737fe568225d87cc0b9ef3dd31538063f58f" translate="yes" xml:space="preserve">
          <source>As of 5.4.0, this parameter can be used to limit the number of stack frames returned. By default (&lt;code&gt;limit&lt;/code&gt;=&lt;em&gt;0&lt;/em&gt;) it returns all stack frames.</source>
          <target state="translated">5.4.0以降、このパラメーターを使用して、返されるスタックフレームの数を制限できます。デフォルトでは（ &lt;code&gt;limit&lt;/code&gt; = &lt;em&gt;0&lt;/em&gt;）すべてのスタックフレームを返します。</target>
        </trans-unit>
        <trans-unit id="f05ae8a0bdf3a2ef79f7209205108f44894fdd16" translate="yes" xml:space="preserve">
          <source>As of PHP 4.2.0, the default value for the PHP directive &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals&lt;/a&gt; is &lt;em&gt; off&lt;/em&gt;. The PHP community discourages developers from relying on this directive, and encourages the use of other means, such as the &lt;a href=&quot;language.variables.predefined&quot;&gt;superglobals&lt;/a&gt;.</source>
          <target state="translated">PHP 4.2.0以降、PHPディレクティブ&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globalsの&lt;/a&gt;デフォルト値は&lt;em&gt;off&lt;/em&gt;です。PHPコミュニティは、開発者がこのディレクティブに依存することを阻止し、&lt;a href=&quot;language.variables.predefined&quot;&gt;スーパーグローバル&lt;/a&gt;などの他の手段の使用を奨励しています。</target>
        </trans-unit>
        <trans-unit id="7d889d7689db60c5b3868c075388938d2c8f4da8" translate="yes" xml:space="preserve">
          <source>As of PHP 4.2.0, the default value for the PHP directive &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals&lt;/a&gt; is &lt;em&gt; off&lt;/em&gt;. The PHP community discourages developers from relying on this directive, and encourages the use of other means, such as the &lt;a href=&quot;language.variables.predefined&quot;&gt;superglobals&lt;/a&gt;.</source>
          <target state="translated">PHP 4.2.0以降、PHPディレクティブ&lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globalsの&lt;/a&gt;デフォルト値は&lt;em&gt;オフになってい&lt;/em&gt;ます。PHPコミュニティは、開発者がこのディレクティブに依存することを思いとどまらせ、&lt;a href=&quot;language.variables.predefined&quot;&gt;スーパーグローバル&lt;/a&gt;などの他の手段の使用を奨励しています。</target>
        </trans-unit>
        <trans-unit id="79e465e4ed0d2059b0e1307ef564f62032ee3bbd" translate="yes" xml:space="preserve">
          <source>As of PHP 4.3, the function more properly reflects the functionality as dictated by the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2087&quot;&gt;&amp;raquo; RFC2087&lt;/a&gt;. The array return value has changed to support an unlimited number of returned resources (i.e. messages, or sub-folders) with each named resource receiving an individual array key. Each key value then contains an another array with the usage and limit values within it.</source>
          <target state="translated">PHP 4.3以降、この関数は&lt;a href=&quot;http://www.faqs.org/rfcs/rfc2087&quot;&gt;&amp;raquo;RFC2087で&lt;/a&gt;規定されている機能をより適切に反映します。配列の戻り値は、返されるリソース（メッセージ、またはサブフォルダー）を無制限にサポートするように変更され、それぞれの名前付きリソースが個別の配列キーを受け取ります。各キー値には、その中の使用量と制限値を含む別の配列が含まれます。</target>
        </trans-unit>
        <trans-unit id="1d822efe8922c89f4edf85a1a1e66078924ce401" translate="yes" xml:space="preserve">
          <source>As of PHP 4.3, this function can (potentially) work on any kind of stream. In PHP 4.3, socket based streams are still the only kind supported in the PHP core, although streams from other extensions may support this function.</source>
          <target state="translated">PHP 4.3 では、この関数は (潜在的に)あらゆる種類のストリームで動作するようになっています。PHP 4.3 では、PHP コアでサポートされているのはソケットベースのストリームのみです。</target>
        </trans-unit>
        <trans-unit id="840671db15da31d7df79e5308804e01d19196172" translate="yes" xml:space="preserve">
          <source>As of PHP 4.3.0 PCNTL uses ticks as the signal handle callback mechanism, which is much faster than the previous mechanism. This change follows the same semantics as using &quot;&lt;a href=&quot;control-structures.declare#control-structures.declare.ticks&quot;&gt;user ticks&lt;/a&gt;&quot;. You must use the &lt;a href=&quot;control-structures.declare&quot;&gt;declare()&lt;/a&gt; statement to specify the locations in your program where callbacks are allowed to occur for the signal handler to function properly (as used in the example below).</source>
          <target state="translated">PHP 4.3.0以降、PCNTLはシグナルハンドルコールバックメカニズムとしてティックを使用します。これは、以前のメカニズムよりもはるかに高速です。この変更は、「&lt;a href=&quot;control-structures.declare#control-structures.declare.ticks&quot;&gt;ユーザーティック&lt;/a&gt;」を使用する場合と同じセマンティクスに従います。シグナルハンドラーが正しく機能するためにコールバックが発生することが許可されるプログラム内の場所を指定するには、&lt;a href=&quot;control-structures.declare&quot;&gt;declare（）&lt;/a&gt;ステートメントを使用する必要があります（以下の例で使用されています）。</target>
        </trans-unit>
        <trans-unit id="0a50c086dbffc34aece747c1558ff6fbc7db8dc8" translate="yes" xml:space="preserve">
          <source>As of PHP 4.3.2, the default mode is set to binary for all platforms that distinguish between binary and text mode. If you are having problems with your scripts after upgrading, try using the &lt;em&gt;'t'&lt;/em&gt; flag as a workaround until you have made your script more portable as mentioned before</source>
          <target state="translated">PHP 4.3.2以降、バイナリモードとテキストモードを区別するすべてのプラットフォームで、デフォルトモードはバイナリに設定されています。アップグレード後にスクリプトに問題がある場合は、前述のようにスクリプトの移植性を高めるまで、&lt;em&gt;「t」&lt;/em&gt;フラグを回避策として使用してみてください</target>
        </trans-unit>
        <trans-unit id="40ade42d774614d4eb0a2435572f706ad4db14f3" translate="yes" xml:space="preserve">
          <source>As of PHP 4.3.3, calling &lt;strong&gt;session_start()&lt;/strong&gt; after the session was previously started will result in an error of level &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt;. Also, the second session start will simply be ignored.</source>
          <target state="translated">PHP 4.3.3 以降、セッションが以前に開始された後に&lt;strong&gt;session_start（）を&lt;/strong&gt;呼び出すと、レベル&lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; の&lt;/strong&gt;エラーが発生します。また、2番目のセッション開始は単に無視されます。</target>
        </trans-unit>
        <trans-unit id="d7901957c594c3124119f4d316068132e0274aba" translate="yes" xml:space="preserve">
          <source>As of PHP 5 the &lt;strong&gt;&lt;code&gt;FILE_USE_INCLUDE_PATH&lt;/code&gt;&lt;/strong&gt; constant can be used to trigger &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include path&lt;/a&gt; search. This is not possible if &lt;a href=&quot;functions.arguments#functions.arguments.type-declaration.strict&quot;&gt;strict typing&lt;/a&gt; is enabled, since &lt;strong&gt;&lt;code&gt;FILE_USE_INCLUDE_PATH&lt;/code&gt;&lt;/strong&gt; is an &lt;a href=&quot;language.types.integer&quot;&gt;int&lt;/a&gt;. Use &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; instead.</source>
          <target state="translated">PHP 5以降、&lt;strong&gt; &lt;code&gt;FILE_USE_INCLUDE_PATH&lt;/code&gt; &lt;/strong&gt;定数を使用して&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;、インクルードパス&lt;/a&gt;検索をトリガーできます。&lt;strong&gt; &lt;code&gt;FILE_USE_INCLUDE_PATH&lt;/code&gt; &lt;/strong&gt;は&lt;a href=&quot;language.types.integer&quot;&gt;int&lt;/a&gt;であるため、&lt;a href=&quot;functions.arguments#functions.arguments.type-declaration.strict&quot;&gt;厳密な型指定&lt;/a&gt;が有効になっている場合、これは不可能です。代わりに&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;を使用してください。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aefce2090a72e792838f6a8f085d00d52440ad89" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0 &lt;strong&gt;rmdir()&lt;/strong&gt; can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; for a listing of which wrappers support &lt;strong&gt;rmdir()&lt;/strong&gt;.</source>
          <target state="translated">PHP 5.0.0以降、&lt;strong&gt;rmdir（）&lt;/strong&gt;は&lt;em&gt;一部の&lt;/em&gt; URLラッパーでも使用できます。&lt;strong&gt;rmdir（）を&lt;/strong&gt;サポートするラッパーのリストについては、&lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;サポートさ&lt;/a&gt;れているプロトコルとラッパーを参照してください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f02eb1a45fcab1663e398e7ed79b8cb7b72ba50a" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0 &lt;strong&gt;unlink()&lt;/strong&gt; can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; for a listing of which wrappers support &lt;strong&gt;unlink()&lt;/strong&gt;.</source>
          <target state="translated">PHP 5.0.0以降、&lt;em&gt;いくつかの&lt;/em&gt; URLラッパーで&lt;strong&gt;unlink（）&lt;/strong&gt;を使用することもできます。&lt;strong&gt;unlink（）を&lt;/strong&gt;サポートするラッパーのリストについては、&lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;サポートされるプロトコルとラッパー&lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="124b4486c22976bf2bc15240279b5ba4fa7c64b1" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0, this function can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; to determine which wrappers support &lt;a href=&quot;function.stat&quot;&gt;stat()&lt;/a&gt; family of functionality.</source>
          <target state="translated">PHP 5.0.0以降、この関数は&lt;em&gt;一部の&lt;/em&gt; URLラッパーでも使用できます。&lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;サポートさ&lt;/a&gt;れているプロトコルとラッパーを参照して、&lt;a href=&quot;function.stat&quot;&gt;stat（）&lt;/a&gt;ファミリーの機能をサポートするラッパーを判別してください。</target>
        </trans-unit>
        <trans-unit id="61beeea658ecd8a92b1d2c092b3fedf43d4363a9" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0, this function can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; to determine which wrappers support &lt;strong&gt;stat()&lt;/strong&gt; family of functionality.</source>
          <target state="translated">PHP 5.0.0以降、この関数は&lt;em&gt;一部の&lt;/em&gt; URLラッパーでも使用できます。&lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;サポートさ&lt;/a&gt;れているプロトコルとラッパーを参照して、&lt;strong&gt;stat（）&lt;/strong&gt;ファミリーの機能をサポートするラッパーを判別してください。</target>
        </trans-unit>
        <trans-unit id="301b2c3d3a2d700300750bbacfdb650493f1a9ad" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0, this function can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://www.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; to determine which wrappers support &lt;a href=&quot;function.stat&quot;&gt;stat()&lt;/a&gt; family of functionality.</source>
          <target state="translated">PHP 5.0.0以降、この関数は&lt;em&gt;一部の&lt;/em&gt;URLラッパーでも使用できます。&lt;a href=&quot;https://www.php.net/manual/en/wrappers.php&quot;&gt;サポートさ&lt;/a&gt;れているプロトコルとラッパーを参照して、&lt;a href=&quot;function.stat&quot;&gt;stat（）&lt;/a&gt;ファミリーの機能をサポートするラッパーを確認してください。</target>
        </trans-unit>
        <trans-unit id="f0528dba942888fcd2d3890541584802f549e544" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.0, this function can also be used with &lt;em&gt;some&lt;/em&gt; URL wrappers. Refer to &lt;a href=&quot;https://www.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt; to determine which wrappers support &lt;strong&gt;stat()&lt;/strong&gt; family of functionality.</source>
          <target state="translated">PHP 5.0.0以降、この関数は&lt;em&gt;一部の&lt;/em&gt;URLラッパーでも使用できます。&lt;a href=&quot;https://www.php.net/manual/en/wrappers.php&quot;&gt;サポートさ&lt;/a&gt;れているプロトコルとラッパーを参照して、&lt;strong&gt;stat（）&lt;/strong&gt;ファミリーの機能をサポートするラッパーを確認してください。</target>
        </trans-unit>
        <trans-unit id="4b7ee0d8527a62a137d689ebd6fcc7cdbec9d4f9" translate="yes" xml:space="preserve">
          <source>As of PHP 5.0.5 the &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; handlers are called after object destruction and therefore cannot use objects or throw exceptions. Exceptions are not able to be caught since will not be caught nor will any exception trace be displayed and the execution will just cease unexpectedly. The object destructors can however use sessions.</source>
          <target state="translated">PHP 5.0.5以降、 &lt;code&gt;write&lt;/code&gt; および &lt;code&gt;close&lt;/code&gt; ハンドラーはオブジェクトの破棄後に呼び出されるため、オブジェクトを使用したり、例外をスローしたりすることはできません。例外はキャッチされず、例外トレースも表示されず、実行が予期せず停止するため、例外をキャッチできません。ただし、オブジェクトデストラクタはセッションを使用できます。</target>
        </trans-unit>
        <trans-unit id="b0091037d7f24bc8775f63a798e4dee95a018bcb" translate="yes" xml:space="preserve">
          <source>As of PHP 5.1, when called with no arguments, &lt;strong&gt;mktime()&lt;/strong&gt; throws an &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; notice: use the &lt;a href=&quot;function.time&quot;&gt;time()&lt;/a&gt; function instead.</source>
          <target state="translated">PHP 5.1以降、引数なしで呼び出されると、&lt;strong&gt;mktime（）&lt;/strong&gt;は&lt;strong&gt; &lt;code&gt;E_STRICT&lt;/code&gt; &lt;/strong&gt;通知をスローします。代わりに&lt;a href=&quot;function.time&quot;&gt;time（）&lt;/a&gt;関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="f8da4e76ca5591a6da32a57bdf917de2b0577c0a" translate="yes" xml:space="preserve">
          <source>As of PHP 5.1.0, the &lt;code&gt;is_dst&lt;/code&gt; parameter became deprecated. As a result, the new timezone handling features should be used instead.</source>
          <target state="translated">PHP 5.1.0以降、 &lt;code&gt;is_dst&lt;/code&gt; パラメータは非推奨になりました。そのため、代わりに新しいタイムゾーン処理機能を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9f474f9baf2d28a7a995310426eed34463203c18" translate="yes" xml:space="preserve">
          <source>As of PHP 5.1.0, this parameter became deprecated. As a result, the new timezone handling features should be used instead.</source>
          <target state="translated">PHP 5.1.0 以降、このパラメータは非推奨となりました。その結果、代わりに新しいタイムゾーン処理機能を使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="e332fbae2769114b5a71aca3507377b20d3953ca" translate="yes" xml:space="preserve">
          <source>As of PHP 5.2.2, DateTime objects can be compared using &lt;a href=&quot;language.operators.comparison&quot;&gt;comparison operators&lt;/a&gt;.</source>
          <target state="translated">PHP 5.2.2以降、DateTimeオブジェクトは&lt;a href=&quot;language.operators.comparison&quot;&gt;比較演算子&lt;/a&gt;を使用して比較できます。</target>
        </trans-unit>
        <trans-unit id="94a0417d3b915dc270372ef41eca2004318420c1" translate="yes" xml:space="preserve">
          <source>As of PHP 5.2.2, the &lt;code&gt;\g&lt;/code&gt; escape sequence can be used for absolute and relative referencing of subpatterns. This escape sequence must be followed by an unsigned number or a negative number, optionally enclosed in braces. The sequences &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\g1&lt;/code&gt; and &lt;code&gt;\g{1}&lt;/code&gt; are synonymous with one another. The use of this pattern with an unsigned number can help remove the ambiguity inherent when using digits following a backslash. The sequence helps to distinguish back references from octal characters and also makes it easier to have a back reference followed by a literal number, e.g. &lt;code&gt;\g{2}1&lt;/code&gt;.</source>
          <target state="translated">PHP 5.2.2以降、 &lt;code&gt;\g&lt;/code&gt; エスケープシーケンスは、サブパターンの絶対参照と相対参照に使用できます。このエスケープシーケンスの後には、符号なしの数値または負の数値を続ける必要があり、オプションで中括弧で囲む必要があります。シーケンス &lt;code&gt;\1&lt;/code&gt; 、 &lt;code&gt;\g1&lt;/code&gt; 、および &lt;code&gt;\g{1}&lt;/code&gt; は互いに同義です。符号なしの数値でこのパターンを使用すると、円記号の後に数字を使用するときに固有のあいまいさを取り除くのに役立ちます。このシーケンスは、後方参照と8進文字を区別するのに役立ち、後方参照の後にリテラル番号（ &lt;code&gt;\g{2}1&lt;/code&gt; など）を付けるのも簡単になります。</target>
        </trans-unit>
        <trans-unit id="7f6927b22cebdab49f32ab774fdc574e68bd66f8" translate="yes" xml:space="preserve">
          <source>As of PHP 5.2.2, the &lt;em&gt;\g&lt;/em&gt; escape sequence can be used for absolute and relative referencing of subpatterns. This escape sequence must be followed by an unsigned number or a negative number, optionally enclosed in braces. The sequences &lt;em&gt;\1&lt;/em&gt;, &lt;em&gt;\g1&lt;/em&gt; and &lt;em&gt;\g{1}&lt;/em&gt; are synonymous with one another. The use of this pattern with an unsigned number can help remove the ambiguity inherent when using digits following a backslash. The sequence helps to distinguish back references from octal characters and also makes it easier to have a back reference followed by a literal number, e.g. &lt;em&gt;\g{2}1&lt;/em&gt;.</source>
          <target state="translated">PHP 5.2.2以降、&lt;em&gt;\ g&lt;/em&gt;エスケープシーケンスはサブパターンの絶対および相対参照に使用できます。このエスケープシーケンスの後には、符号なし数値または負の数値が続き、オプションで中括弧で囲む必要があります。シーケンス&lt;em&gt;\ 1&lt;/em&gt;、&lt;em&gt;\ g1&lt;/em&gt;および&lt;em&gt;\ g {1}&lt;/em&gt;は互いに同義です。符号なしの番号でこのパターンを使用すると、バックスラッシュに続く数字を使用するときに固有のあいまいさを取り除くのに役立ちます。シーケンスは、8進文字から後方参照を区別するのに役立ち、また、&lt;em&gt;\ g {2} 1の&lt;/em&gt;ように、後方参照の後にリテラル番号が続くのを容易にします。</target>
        </trans-unit>
        <trans-unit id="d55765abfb1a56a617946bda420a51743ef16173" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3, you can use namespace:</source>
          <target state="translated">PHP 5.3では、名前空間を使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="19b6208aaa156db8f487e462a8a9e304ea9bfc3c" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0 &lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;heredocs&lt;/a&gt; and &lt;a href=&quot;language.types.string#language.types.string.syntax.nowdoc&quot;&gt;nowdocs&lt;/a&gt; can be used in any static data context, including property declarations.</source>
          <target state="translated">PHP 5.3.0以降、&lt;a href=&quot;language.types.string#language.types.string.syntax.heredoc&quot;&gt;ヒアドキュメント&lt;/a&gt;と&lt;a href=&quot;language.types.string#language.types.string.syntax.nowdoc&quot;&gt;ナウ&lt;/a&gt;ドキュメントは、プロパティ宣言を含む、あらゆる静的データコンテキストで使用できます。</target>
        </trans-unit>
        <trans-unit id="d6c47ba60c2cce3305a12fffae2989112bf45fd7" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0 &lt;strong&gt;is_callable()&lt;/strong&gt; reports constructors as not being callable. This affects PHP 5 style constructors (&lt;code&gt;__construct&lt;/code&gt;) as well as PHP 4 style constructors (i.e. methods with the same name as the class). Formerly, both cases have been considered callable.</source>
          <target state="translated">PHP 5.3.0&lt;strong&gt;以降、is_callable（）&lt;/strong&gt;はコンストラクターを呼び出し可能ではないと報告します。これは、PHP 5スタイルのコンストラクター（ &lt;code&gt;__construct&lt;/code&gt; ）とPHP 4スタイルのコンストラクター（つまり、クラスと同じ名前のメソッド）に影響します。以前は、どちらの場合も呼び出し可能と見なされていました。</target>
        </trans-unit>
        <trans-unit id="ef63a30124d6e567cf6d960e37a521d6e352701e" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0 &lt;strong&gt;is_callable()&lt;/strong&gt; reports constructors as not being callable. This affects PHP 5 style constructors (&lt;em&gt;__construct&lt;/em&gt;) as well as PHP 4 style constructors (i.e. methods with the same name as the class). Formerly, both cases have been considered callable.</source>
          <target state="translated">PHP 5.3.0 &lt;strong&gt;以降、is_callable（）&lt;/strong&gt;はコンストラクターを呼び出し不可能として報告します。これは、PHP 5スタイルコンストラクター（&lt;em&gt;__construct&lt;/em&gt;）とPHP 4スタイルコンストラクター（つまり、クラスと同じ名前のメソッド）に影響します。以前は、どちらの場合も呼び出し可能と見なされていました。</target>
        </trans-unit>
        <trans-unit id="b67c51c103ce02935aa5aab6138f1b34b75476a1" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, PHP contains its own implementation and will use that if the system lacks of support for one or more of the algorithms.</source>
          <target state="translated">PHP 5.3.0 の時点では、PHP には独自の実装が含まれており、 システムが一つ以上のアルゴリズムをサポートしていない場合はそれを使用します。</target>
        </trans-unit>
        <trans-unit id="8b1fb5baa2232f148102351b5f93cb0460c26a38" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, PHP implements a feature called late static bindings which can be used to reference the called class in a context of static inheritance.</source>
          <target state="translated">PHP 5.3.0では、PHPは後期静的バインディングと呼ばれる機能を実装しています。 これを使用すると、静的継承のコンテキストで呼び出されたクラスを参照することができます。</target>
        </trans-unit>
        <trans-unit id="a57506e5710eb87ab54ed8b2012fc8e6a64dd9d1" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, it's possible to initialize static variables and class properties/constants using the Heredoc syntax:</source>
          <target state="translated">PHP 5.3.0 では、静的変数やクラスのプロパティ/定数を初期化するには Heredoc 構文を使用することができます。</target>
        </trans-unit>
        <trans-unit id="d94df57127dbd4616107228bb7cec19a5637ca69" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, it's possible to reference the class using a variable. The variable's value can not be a keyword (e.g. &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;parent&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt;).</source>
          <target state="translated">PHP 5.3.0以降、変数を使用してクラスを参照することが可能です。変数の値をキーワードにすることはできません（例： &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;parent&lt;/code&gt; 、 &lt;code&gt;static&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1c57eb6d1d307a255b452aeb3ea1faf3cf2d1d25" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, it's possible to reference the class using a variable. The variable's value can not be a keyword (e.g. &lt;em&gt;self&lt;/em&gt;, &lt;em&gt;parent&lt;/em&gt; and &lt;em&gt;static&lt;/em&gt;).</source>
          <target state="translated">PHP 5.3.0以降では、変数を使用してクラスを参照することが可能です。変数の値をキーワードにすることはできません（例：&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;parent&lt;/em&gt;、&lt;em&gt;static&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="ab7d540e92498cc87c90bf7e75a4a77bff64b590" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, it's possible to reference the class using a variable. The variable's value cannot be a keyword (e.g. &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;parent&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt;).</source>
          <target state="translated">PHP 5.3.0以降、変数を使用してクラスを参照することが可能です。変数の値をキーワードにすることはできません（例： &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;parent&lt;/code&gt; 、 &lt;code&gt;static&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ffb0a56728129d02496487110c7834d79222df94" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, it's possible to reference the class using a variable. The variable's value cannot be a keyword (e.g. &lt;em&gt;self&lt;/em&gt;, &lt;em&gt;parent&lt;/em&gt; and &lt;em&gt;static&lt;/em&gt;).</source>
          <target state="translated">PHP 5.3.0以降では、変数を使用してクラスを参照することが可能です。変数の値をキーワードにすることはできません（例：&lt;em&gt;self&lt;/em&gt;、&lt;em&gt;parent&lt;/em&gt;、&lt;em&gt;static&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="b8eba9058ff366c755ec40becbd8d32a9eff1d42" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.0, the &lt;a href=&quot;function.stream-context-set-default&quot;&gt;stream_context_set_default()&lt;/a&gt; function can be used to set the default context.</source>
          <target state="translated">PHP 5.3.0以降、&lt;a href=&quot;function.stream-context-set-default&quot;&gt;stream_context_set_default（）&lt;/a&gt;関数を使用してデフォルトのコンテキストを設定できます。</target>
        </trans-unit>
        <trans-unit id="0ca921d3c6e166c0e5e8485a01445601316977ed" translate="yes" xml:space="preserve">
          <source>As of PHP 5.3.3, methods with the same name as the last element of a namespaced class name will no longer be treated as constructor. This change doesn't affect non-namespaced classes.</source>
          <target state="translated">PHP 5.3.3 以降、名前空間クラス名の最後の要素と同じ名前のメソッドはコンストラクタとして扱われなくなりました。この変更は、名前空間を持たないクラスには影響しません。</target>
        </trans-unit>
        <trans-unit id="16353e1741de0d770526b2f6e2156698676bfb7b" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4 it is possible to array dereference the result of a function or method call directly. Before it was only possible using a temporary variable.</source>
          <target state="translated">PHP 5.4 では、関数やメソッドの呼び出しの結果を直接配列で参照することができます。以前は一時変数を使用してのみ可能でした。</target>
        </trans-unit>
        <trans-unit id="16e5ce48354a4cb7f9a7ba4a4712757a23ed39b3" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4 string offsets have to either be integers or integer-like strings, otherwise a warning will be thrown. Previously an offset like &lt;em&gt;&quot;foo&quot;&lt;/em&gt; was silently cast to &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="translated">PHP 5.4以降、文字列オフセットは整数または整数のような文字列である必要があります。そうでない場合、警告がスローされます。以前は、&lt;em&gt;「foo」の&lt;/em&gt;ようなオフセットは暗黙的に&lt;em&gt;0に&lt;/em&gt;キャストされていました。</target>
        </trans-unit>
        <trans-unit id="541634dacd00c4e938bd254a89cafceb54f8428c" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4 you can also use the short array syntax, which replaces &lt;em&gt;array()&lt;/em&gt; with &lt;em&gt;[]&lt;/em&gt;.</source>
          <target state="translated">PHP 5.4以降では、&lt;em&gt;array（）&lt;/em&gt;を&lt;em&gt;[]に&lt;/em&gt;置き換える短い配列構文を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="c994f86e2ae672aaa744f7f067a273171c7e2384" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4, anonymous functions may be declared statically. This prevents them from having the current class automatically bound to them. Objects may also not be bound to them at runtime.</source>
          <target state="translated">PHP 5.4 では、匿名関数は静的に宣言することができます。これにより、現在のクラスに自動的にバインドされることを防ぐことができます。また、実行時にオブジェクトがバインドされないようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="5c783f25c7b0195db057bae4831097f7ad7307de" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0 you can use &lt;a href=&quot;function.session-register-shutdown&quot;&gt;session_register_shutdown()&lt;/a&gt; or simply use the 'register shutdown' flag when invoking &lt;strong&gt;session_set_save_handler()&lt;/strong&gt; using the OOP method and passing an instance that implements &lt;a href=&quot;class.sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt;.</source>
          <target state="translated">PHP 5.4.0の時点で、あなたは使用することができます&lt;a href=&quot;function.session-register-shutdown&quot;&gt;session_register_shutdown（）を&lt;/a&gt;呼び出すときに、「シャットダウンを登録」フラグを使用するだけか&lt;strong&gt;）（session_set_save_handlerを&lt;/strong&gt; OOPメソッドを使用して実装するインスタンスを渡し&lt;a href=&quot;class.sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bfda654d2932bdba653025ba75ff5ddb932e86f7" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0, PHP implements a method of code reuse called Traits.</source>
          <target state="translated">PHP 5.4.0 以降、PHP は Traits と呼ばれるコード再利用のメソッドを実装しています。</target>
        </trans-unit>
        <trans-unit id="ab1323d6a52cf1ac851cdb4cfa299f07ef8d0d9b" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0, the above example will raise an &lt;strong&gt;&lt;code&gt;E_COMPILE_ERROR&lt;/code&gt;&lt;/strong&gt; error.</source>
          <target state="translated">PHP 5.4.0以降、上記の例では&lt;strong&gt; &lt;code&gt;E_COMPILE_ERROR&lt;/code&gt; &lt;/strong&gt;エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="dd49df14903497da36a3e1e7acda76285b479f84" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0, there are only two ways to access data from your HTML forms. Currently available methods are listed below:</source>
          <target state="translated">PHP 5.4.0 の時点では、HTML フォームからデータにアクセスする方法は 2 つしかありません。現在利用可能な方法を以下に示します。</target>
        </trans-unit>
        <trans-unit id="06f2378b28ab30a7ac14047fdb81381db0645ebd" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0, when declared in the context of a class, the current class is automatically bound to it, making &lt;em&gt;$this&lt;/em&gt; available inside of the function's scope. If this automatic binding of the current class is not wanted, then &lt;a href=&quot;functions.anonymous#functions.anonymous-functions.static&quot;&gt;static anonymous functions&lt;/a&gt; may be used instead.</source>
          <target state="translated">PHP 5.4.0以降では、クラスのコンテキストで宣言すると、現在のクラスが自動的にバインドされ、関数のスコープ内で&lt;em&gt;$ thisを&lt;/em&gt;使用できるようになります。現在のクラスのこの自動バインディングが&lt;a href=&quot;functions.anonymous#functions.anonymous-functions.static&quot;&gt;不要な&lt;/a&gt;場合は、代わりに静的無名関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="a5b6e990cf80bf5656664b86b0b310249d507a4f" translate="yes" xml:space="preserve">
          <source>As of PHP 5.4.0, you can call any &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; stored in a variable.</source>
          <target state="translated">PHP 5.4.0以降では、変数に格納された&lt;a href=&quot;language.types.callable&quot;&gt;呼び出し可能オブジェクト&lt;/a&gt;を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="2c65f0171fbe37680a819ab7081d4b37f401c5c2" translate="yes" xml:space="preserve">
          <source>As of PHP 5.5 it is possible to array dereference an array literal.</source>
          <target state="translated">PHP 5.5 では、配列リテラルを配列で参照することができます。</target>
        </trans-unit>
        <trans-unit id="a0b0239c547411a3290b77e54506393cb82592d8" translate="yes" xml:space="preserve">
          <source>As of PHP 5.5.0 &lt;strong&gt;&lt;code&gt;E_DEPRECATED&lt;/code&gt;&lt;/strong&gt; level error is emitted when passing in the &quot;\e&quot; modifier. As of PHP 7.0.0 &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; is emitted in this case and &quot;\e&quot; modifier has no effect.</source>
          <target state="translated">PHP 5.5.0以降、「\ e」修飾子を渡すと、&lt;strong&gt; &lt;code&gt;E_DEPRECATED&lt;/code&gt; &lt;/strong&gt;レベルのエラーが発生します。PHP 7.0.0以降、この場合&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;が&lt;strong&gt;発行&lt;/strong&gt;され、「\ e」修飾子は効果がありません。</target>
        </trans-unit>
        <trans-unit id="f748740e88e63cb05442b68aa68028018ecfa480" translate="yes" xml:space="preserve">
          <source>As of PHP 5.5.0 &lt;strong&gt;&lt;code&gt;E_DEPRECATED&lt;/code&gt;&lt;/strong&gt; level error is emitted when passing in the &quot;\e&quot; modifier. As of PHP 7.0.0 using the &quot;\e&quot; modifier is an error; an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; is emitted in this case.</source>
          <target state="translated">PHP 5.5.0以降、「\ e」修飾子を渡すと、&lt;strong&gt; &lt;code&gt;E_DEPRECATED&lt;/code&gt; &lt;/strong&gt;レベルのエラーが発生します。 PHP 7.0.0以降、「\ e」修飾子の使用はエラーです。この場合、&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;が&lt;strong&gt;発行&lt;/strong&gt;されます。</target>
        </trans-unit>
        <trans-unit id="798a855a87611c84dc34ec79c862db17b09b2850" translate="yes" xml:space="preserve">
          <source>As of PHP 5.6 aliasing or importing function and constant names is allowed.</source>
          <target state="translated">PHP 5.6 では、関数名や定数名のエイリアスやインポートが許可されています。</target>
        </trans-unit>
        <trans-unit id="69fd6d5f913007b7394f76ac60bde2910f383fb2" translate="yes" xml:space="preserve">
          <source>As of PHP 5.6.0, &lt;strong&gt;hash_algos()&lt;/strong&gt; will return the following list of algorithm names.</source>
          <target state="translated">PHP 5.6.0以降、&lt;strong&gt;hash_algos（）&lt;/strong&gt;は次のアルゴリズム名のリストを返します。</target>
        </trans-unit>
        <trans-unit id="bbc505d0e5c1c7fe1dec59bad3f45a96c278040f" translate="yes" xml:space="preserve">
          <source>As of PHP 5.6.1 can also be specified as &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt;. In this mode boolean, null and integer types are preserved when possible. String values &lt;code&gt;&quot;true&quot;&lt;/code&gt;, &lt;code&gt;&quot;on&quot;&lt;/code&gt; and &lt;code&gt;&quot;yes&quot;&lt;/code&gt; are converted to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;. &lt;code&gt;&quot;false&quot;&lt;/code&gt;, &lt;code&gt;&quot;off&quot;&lt;/code&gt;, &lt;code&gt;&quot;no&quot;&lt;/code&gt; and &lt;code&gt;&quot;none&quot;&lt;/code&gt; are considered &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. &lt;code&gt;&quot;null&quot;&lt;/code&gt; is converted to &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; in typed mode. Also, all numeric strings are converted to integer type if it is possible.</source>
          <target state="translated">PHP 5.6.1以降は、&lt;strong&gt; &lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt; &lt;/strong&gt;として指定することもできます。このモードでは、ブール型、null型、および整数型が可能な場合は保持されます。文字列値 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;on&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;yes&quot;&lt;/code&gt; は&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; に&lt;/strong&gt;変換され&lt;strong&gt;ます&lt;/strong&gt;。 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;off&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;no&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;none&quot;&lt;/code&gt; は&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;と見なされ&lt;strong&gt;ます&lt;/strong&gt;。 &lt;code&gt;&quot;null&quot;&lt;/code&gt; は、型付きモードで&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;に変換されます。また、可能であれば、すべての数値文字列は整数型に変換されます。</target>
        </trans-unit>
        <trans-unit id="d9f6b91536dc03c2993c2c03f45ea8e99f6272ba" translate="yes" xml:space="preserve">
          <source>As of PHP 5.6.1 can also be specified as &lt;strong&gt;&lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt;&lt;/strong&gt;. In this mode boolean, null and integer types are preserved when possible. String values &lt;em&gt;&quot;true&quot;&lt;/em&gt;, &lt;em&gt;&quot;on&quot;&lt;/em&gt; and &lt;em&gt;&quot;yes&quot;&lt;/em&gt; are converted to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;. &lt;em&gt;&quot;false&quot;&lt;/em&gt;, &lt;em&gt;&quot;off&quot;&lt;/em&gt;, &lt;em&gt;&quot;no&quot;&lt;/em&gt; and &lt;em&gt;&quot;none&quot;&lt;/em&gt; are considered &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. &lt;em&gt;&quot;null&quot;&lt;/em&gt; is converted to &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; in typed mode. Also, all numeric strings are converted to integer type if it is possible.</source>
          <target state="translated">PHP 5.6.1以降では、&lt;strong&gt; &lt;code&gt;INI_SCANNER_TYPED&lt;/code&gt; &lt;/strong&gt;として指定することもできます。このモードのブール値では、可能な場合、null型と整数型が保持されます。文字列値&lt;em&gt;「true」&lt;/em&gt;、&lt;em&gt;「on」&lt;/em&gt;、&lt;em&gt;「yes」&lt;/em&gt;は&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; に&lt;/strong&gt;変換されます。&lt;em&gt;「false」&lt;/em&gt;、&lt;em&gt;「off」&lt;/em&gt;、&lt;em&gt;「no」&lt;/em&gt;、&lt;em&gt;「none」&lt;/em&gt;は&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;と見なされ&lt;strong&gt;ます&lt;/strong&gt;。&lt;em&gt;「null」&lt;/em&gt;は型付きモードでは&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;に変換されます。また、可能であれば、すべての数値文字列は整数型に変換されます。</target>
        </trans-unit>
        <trans-unit id="887baab7c5975bcc279d6f2f848a537be5821efc" translate="yes" xml:space="preserve">
          <source>As of PHP 7.0.0, instead of being undefined and platform-dependent, NaN and Infinity will always be zero when cast to &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="translated">PHP 7.0.0以降、未定義でプラットフォームに依存する代わりに、NaNとInfinityは&lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;にキャストされると常にゼロになります。</target>
        </trans-unit>
        <trans-unit id="aaafb0aff3999730a16606dba61f4197c101e945" translate="yes" xml:space="preserve">
          <source>As of PHP 7.0.7, if &lt;code&gt;type&lt;/code&gt; is omitted, it is automatically detected from the type of the &lt;code&gt;param&lt;/code&gt;: &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; and &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; are treated as &lt;strong&gt;&lt;code&gt;SQLITE3_INTEGER&lt;/code&gt;&lt;/strong&gt;, &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; as &lt;strong&gt;&lt;code&gt;SQLITE3_FLOAT&lt;/code&gt;&lt;/strong&gt;, &lt;a href=&quot;language.types.null&quot;&gt;null&lt;/a&gt; as &lt;strong&gt;&lt;code&gt;SQLITE3_NULL&lt;/code&gt;&lt;/strong&gt; and all others as &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;. Formerly, if &lt;code&gt;type&lt;/code&gt; has been omitted, it has defaulted to &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">PHP 7.0.7以降、 &lt;code&gt;type&lt;/code&gt; が省略された場合、タイプは &lt;code&gt;param&lt;/code&gt; のタイプから自動的に検出されます。&lt;a href=&quot;language.types.boolean&quot;&gt;ブール値&lt;/a&gt;と&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;は&lt;strong&gt; &lt;code&gt;SQLITE3_INTEGER&lt;/code&gt; &lt;/strong&gt;として、&lt;a href=&quot;language.types.float&quot;&gt;フロート&lt;/a&gt;は&lt;strong&gt; &lt;code&gt;SQLITE3_FLOAT&lt;/code&gt; &lt;/strong&gt;として、&lt;a href=&quot;language.types.null&quot;&gt;ヌル&lt;/a&gt;は&lt;strong&gt; &lt;code&gt;SQLITE3_NULL&lt;/code&gt; &lt;/strong&gt;として、その他はすべて&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; &lt;/strong&gt;として&lt;strong&gt;処理され&lt;/strong&gt;ます。以前は、 &lt;code&gt;type&lt;/code&gt; が省略されている場合、デフォルトで&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; に&lt;/strong&gt;設定されてい&lt;strong&gt;ました&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="0715950994d9f4d6235b9d38b3060df94ad07917" translate="yes" xml:space="preserve">
          <source>As of PHP 7.0.7, if &lt;code&gt;type&lt;/code&gt; is omitted, it is automatically detected from the type of the &lt;code&gt;param&lt;/code&gt;: bool and int are treated as &lt;strong&gt;&lt;code&gt;SQLITE3_INTEGER&lt;/code&gt;&lt;/strong&gt;, float as &lt;strong&gt;&lt;code&gt;SQLITE3_FLOAT&lt;/code&gt;&lt;/strong&gt;, null as &lt;strong&gt;&lt;code&gt;SQLITE3_NULL&lt;/code&gt;&lt;/strong&gt; and all others as &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;. Formerly, if &lt;code&gt;type&lt;/code&gt; has been omitted, it has defaulted to &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">場合PHP 7.0.7のように、 &lt;code&gt;type&lt;/code&gt; 省略され、自動的に型から検出された &lt;code&gt;param&lt;/code&gt; ：BOOLとINTのように扱われる&lt;strong&gt; &lt;code&gt;SQLITE3_INTEGER&lt;/code&gt; &lt;/strong&gt;などフロート&lt;strong&gt; &lt;code&gt;SQLITE3_FLOAT&lt;/code&gt; &lt;/strong&gt;としてヌル&lt;strong&gt; &lt;code&gt;SQLITE3_NULL&lt;/code&gt; &lt;/strong&gt;ととして他のすべて&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; &lt;/strong&gt;。以前は、 &lt;code&gt;type&lt;/code&gt; が省略されていた場合、デフォルトで&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; に&lt;/strong&gt;設定されてい&lt;strong&gt;ました&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="aeeeb4400e0062f0b2ab5553131420418f165180" translate="yes" xml:space="preserve">
          <source>As of PHP 7.0.7, if &lt;code&gt;type&lt;/code&gt; is omitted, it is automatically detected from the type of the &lt;code&gt;value&lt;/code&gt;: &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; and &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; are treated as &lt;strong&gt;&lt;code&gt;SQLITE3_INTEGER&lt;/code&gt;&lt;/strong&gt;, &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; as &lt;strong&gt;&lt;code&gt;SQLITE3_FLOAT&lt;/code&gt;&lt;/strong&gt;, &lt;a href=&quot;language.types.null&quot;&gt;null&lt;/a&gt; as &lt;strong&gt;&lt;code&gt;SQLITE3_NULL&lt;/code&gt;&lt;/strong&gt; and all others as &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;. Formerly, if &lt;code&gt;type&lt;/code&gt; has been omitted, it has defaulted to &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">場合PHP 7.0.7のように、 &lt;code&gt;type&lt;/code&gt; 省略され、自動的に型から検出された &lt;code&gt;value&lt;/code&gt; ：&lt;a href=&quot;language.types.boolean&quot;&gt;ブール値&lt;/a&gt;と&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;として扱われ&lt;strong&gt; &lt;code&gt;SQLITE3_INTEGER&lt;/code&gt; &lt;/strong&gt;、&lt;a href=&quot;language.types.float&quot;&gt;フロート&lt;/a&gt;として&lt;strong&gt; &lt;code&gt;SQLITE3_FLOAT&lt;/code&gt; &lt;/strong&gt;、&lt;a href=&quot;language.types.null&quot;&gt;ヌル&lt;/a&gt;として&lt;strong&gt; &lt;code&gt;SQLITE3_NULL&lt;/code&gt; &lt;/strong&gt;ととして他のすべて&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; &lt;/strong&gt;。以前は、 &lt;code&gt;type&lt;/code&gt; が省略されている場合、デフォルトで&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; に&lt;/strong&gt;設定されてい&lt;strong&gt;ました&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="8cfa486c5b1f7ae18a9e02c564dd1a19b68d6328" translate="yes" xml:space="preserve">
          <source>As of PHP 7.0.7, if &lt;code&gt;type&lt;/code&gt; is omitted, it is automatically detected from the type of the &lt;code&gt;value&lt;/code&gt;: bool and int are treated as &lt;strong&gt;&lt;code&gt;SQLITE3_INTEGER&lt;/code&gt;&lt;/strong&gt;, float as &lt;strong&gt;&lt;code&gt;SQLITE3_FLOAT&lt;/code&gt;&lt;/strong&gt;, null as &lt;strong&gt;&lt;code&gt;SQLITE3_NULL&lt;/code&gt;&lt;/strong&gt; and all others as &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;. Formerly, if &lt;code&gt;type&lt;/code&gt; has been omitted, it has defaulted to &lt;strong&gt;&lt;code&gt;SQLITE3_TEXT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">場合PHP 7.0.7のように、 &lt;code&gt;type&lt;/code&gt; 省略され、自動的に型から検出された &lt;code&gt;value&lt;/code&gt; ：BOOLとINTのように扱われる&lt;strong&gt; &lt;code&gt;SQLITE3_INTEGER&lt;/code&gt; &lt;/strong&gt;などフロート&lt;strong&gt; &lt;code&gt;SQLITE3_FLOAT&lt;/code&gt; &lt;/strong&gt;としてヌル&lt;strong&gt; &lt;code&gt;SQLITE3_NULL&lt;/code&gt; &lt;/strong&gt;ととして他のすべて&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; &lt;/strong&gt;。以前は、 &lt;code&gt;type&lt;/code&gt; が省略されていた場合、デフォルトで&lt;strong&gt; &lt;code&gt;SQLITE3_TEXT&lt;/code&gt; に&lt;/strong&gt;設定されてい&lt;strong&gt;ました&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="81f1b6f15e17d13dd9e4e747c5f9559c59c974c4" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0 &lt;strong&gt;list()&lt;/strong&gt; can now also contain explicit keys, which can be given as arbitrary expressions. Mixing of integer and string keys is allowed; however, elements with and without keys cannot be mixed.</source>
          <target state="translated">PHP 7.1.0以降、&lt;strong&gt;list（）に&lt;/strong&gt;明示的なキーを含めることができるようになりました。これは任意の式として指定できます。整数キーと文字列キーを混在させることができます。ただし、キーのある要素とない要素を混在させることはできません。</target>
        </trans-unit>
        <trans-unit id="a747609abff8033992cef605ae86fd06e5662ea3" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0 also &lt;em&gt;negative&lt;/em&gt; numeric indices are supported.</source>
          <target state="translated">PHP 7.1.0以降、&lt;em&gt;負の&lt;/em&gt;数値インデックスもサポートされています。</target>
        </trans-unit>
        <trans-unit id="b19a69d8b2c9058fe6b94d0647396e35770e667e" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0 the handler callback is given a second argument containing the siginfo of the specific signal. This data is only supplied if the operating system has the siginfo_t structure. If the OS does not implement siginfo_t NULL is supplied.</source>
          <target state="translated">PHP 7.1.0 以降、ハンドラのコールバックには、特定のシグナルの siginfo を含む第二引数が与えられます。このデータが与えられるのは、オペレーティングシステムが siginfo_t 構造体を持っている場合のみです。OS が siginfo_t を実装していない場合は NULL が与えられます。</target>
        </trans-unit>
        <trans-unit id="2363c454819bb59e0eca7cead1e20e1b3a8160e7" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0 the handler callback is given a second argument containing the signinfo of the specific signal. This data is only supplied if the operating system has the signinfo_t structure. If the OS does not implement siginfo_t NULL is supplied.</source>
          <target state="translated">PHP 7.1.0 以降、ハンドラのコールバックには、特定のシグナルの signinfo を含む第二引数が与えられます。このデータが与えられるのは、オペレーティングシステムが signinfo_t 構造体を持っている場合のみです。OS が siginfo_t を実装していない場合は NULL が与えられます。</target>
        </trans-unit>
        <trans-unit id="9170972ab631c37aceacf99fef313baf4d779c71" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0 visibility modifiers are allowed for class constants.</source>
          <target state="translated">PHP 7.1.0 では、クラス定数に対して可視性修飾子を使用することができます。</target>
        </trans-unit>
        <trans-unit id="c8b6dddbeb6482a2ae0681aa17c8f342fc2d41a1" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, &lt;a href=&quot;reflectiontype.tostring&quot;&gt;ReflectionType::__toString()&lt;/a&gt; is deprecated, and &lt;strong&gt;ReflectionParameter::getType()&lt;/strong&gt;&lt;em&gt;may&lt;/em&gt; return an instance of &lt;a href=&quot;class.reflectionnamedtype&quot;&gt;ReflectionNamedType&lt;/a&gt;. To get the name of the parameter type, &lt;strong&gt;ReflectionNamedType()&lt;/strong&gt; is available in this case.</source>
          <target state="translated">PHP 7.1.0の時点では、&lt;a href=&quot;reflectiontype.tostring&quot;&gt;反射型:: __のtoString（）&lt;/a&gt;推奨されません、と&lt;strong&gt;ReflectionParameter ::のgetType（）&lt;/strong&gt;&lt;em&gt;も&lt;/em&gt;のインスタンスを返す&lt;a href=&quot;class.reflectionnamedtype&quot;&gt;ReflectionNamedTypeを&lt;/a&gt;。この場合、パラメータータイプの名前を取得するために、&lt;strong&gt;ReflectionNamedType（）&lt;/strong&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="64cd3d7158fee301d490dbd1b458f7b08bdff5f8" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, a &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;code&gt;catch&lt;/code&gt;&lt;/a&gt; block may specify multiple exceptions using the pipe (&lt;code&gt;|&lt;/code&gt;) character. This is useful for when different exceptions from different class hierarchies are handled the same.</source>
          <target state="translated">PHP 7.1.0以降、&lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt; &lt;code&gt;catch&lt;/code&gt; &lt;/a&gt;ブロックはパイプ（ &lt;code&gt;|&lt;/code&gt; ）文字を使用して複数の例外を指定できます。これは、異なるクラス階層からの異なる例外が同じように処理される場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="21e7c4c0539910ef6f5e86ea549de7108ba838c6" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, an &lt;a href=&quot;class.argumentcounterror&quot;&gt;ArgumentCountError&lt;/a&gt; will be thrown if the &lt;code&gt;callback&lt;/code&gt; function requires more than 2 parameters (the value and key of the array member). Previously, if the &lt;code&gt;callback&lt;/code&gt; function required more than 2 parameters, an error of level &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.constants.php&quot;&gt;E_WARNING&lt;/a&gt; would be generated each time &lt;strong&gt;array_walk()&lt;/strong&gt; calls &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">PHP 7.1.0以降、 &lt;code&gt;callback&lt;/code&gt; 関数が3つ以上のパラメーター（配列メンバーの値とキー）を必要とする場合、&lt;a href=&quot;class.argumentcounterror&quot;&gt;ArgumentCountError&lt;/a&gt;がスローされます。以前は、 &lt;code&gt;callback&lt;/code&gt; 関数が3つ以上のパラメーターを必要とする場合、&lt;strong&gt;array_walk（）&lt;/strong&gt;が &lt;code&gt;callback&lt;/code&gt; を呼び出すたびにレベル&lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.constants.php&quot;&gt;E_WARNINGの&lt;/a&gt;エラーが生成されました。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01a856c0bfa72ded594359d4ad0cc1ee616fd1b4" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, an &lt;a href=&quot;class.argumentcounterror&quot;&gt;ArgumentCountError&lt;/a&gt; will be thrown if the &lt;code&gt;callback&lt;/code&gt; function requires more than 2 parameters (the value and key of the array member). Previously, if the &lt;code&gt;callback&lt;/code&gt; function required more than 2 parameters, an error of level &lt;a href=&quot;https://www.php.net/manual/en/errorfunc.constants.php&quot;&gt;E_WARNING&lt;/a&gt; would be generated each time &lt;strong&gt;array_walk()&lt;/strong&gt; calls &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">PHP 7.1.0以降、 &lt;code&gt;callback&lt;/code&gt; 関数が3つ以上のパラメーター（配列メンバーの値とキー）を必要とする場合、&lt;a href=&quot;class.argumentcounterror&quot;&gt;ArgumentCountError&lt;/a&gt;がスローされます。以前は、 &lt;code&gt;callback&lt;/code&gt; 関数に3つ以上のパラメーターが必要な場合、&lt;strong&gt;array_walk（）&lt;/strong&gt;が &lt;code&gt;callback&lt;/code&gt; 呼び出すたびにレベル&lt;a href=&quot;https://www.php.net/manual/en/errorfunc.constants.php&quot;&gt;E_WARNINGの&lt;/a&gt;エラーが生成されてい&lt;strong&gt;ました&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15bc802ed2f33fc795190ec8dd007c60efb12bc7" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, class constants may be defined as public, private, or protected. Constants declared without any explicit visibility keyword are defined as public.</source>
          <target state="translated">PHP 7.1.0 以降、クラス定数は public、private、protected のいずれかで定義することができます。明示的な可視化キーワードなしで宣言された定数は public として定義されます。</target>
        </trans-unit>
        <trans-unit id="617df5634222c9efd5c90d2ea721e19cc1180d0d" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, return statements without an argument trigger &lt;strong&gt;&lt;code&gt;E_COMPILE_ERROR&lt;/code&gt;&lt;/strong&gt;, unless the return type is void, in which case return statements with an argument trigger that error.</source>
          <target state="translated">PHP &lt;strong&gt; &lt;code&gt;E_COMPILE_ERROR&lt;/code&gt; &lt;/strong&gt;、引数のないreturnステートメントは&lt;strong&gt;E_COMPILE_ERRORを&lt;/strong&gt;トリガーします。ただし、戻り値の型がvoidの場合は、引数のあるreturnステートメントがそのエラーをトリガーします。</target>
        </trans-unit>
        <trans-unit id="f66f5e1d601123df526d76b10a570f7018e13716" translate="yes" xml:space="preserve">
          <source>As of PHP 7.1.0, type declarations can be marked nullable by prefixing the type name with a question mark (&lt;code&gt;?&lt;/code&gt;). This signifies that the value can be of the specified type or &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">PHP 7.1.0以降、型名の前に疑問符（ &lt;code&gt;?&lt;/code&gt; ）を付けることで、型宣言をnull許容としてマークできます。これは、値が指定されたタイプまたは&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;である可能性があることを意味し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="8bc74e830ec2e361e9cdccd2992e00e0bc691b8d" translate="yes" xml:space="preserve">
          <source>As of PHP 7.2.0 and libzip 1.2.0 the password is used to decompress the archive, and is also the default password for &lt;a href=&quot;ziparchive.setencryptionname&quot;&gt;ZipArchive::setEncryptionName()&lt;/a&gt; and &lt;a href=&quot;ziparchive.setencryptionindex&quot;&gt;ZipArchive::setEncryptionIndex()&lt;/a&gt;. Formerly, this function only set the password to be used to decompress the archive; it did not turn a non-password-protected &lt;a href=&quot;class.ziparchive&quot;&gt;ZipArchive&lt;/a&gt; into a password-protected &lt;a href=&quot;class.ziparchive&quot;&gt;ZipArchive&lt;/a&gt;.</source>
          <target state="translated">PHP 7.2.0およびlibzip 1.2.0以降、パスワードはアーカイブの解凍に使用され、&lt;a href=&quot;ziparchive.setencryptionname&quot;&gt;ZipArchive :: setEncryptionName（）&lt;/a&gt;および&lt;a href=&quot;ziparchive.setencryptionindex&quot;&gt;ZipArchive :: setEncryptionIndex（）&lt;/a&gt;のデフォルトパスワードでもあります。以前は、この関数はアーカイブの解凍に使用されるパスワードのみを設定していました。パスワードで保護されていない&lt;a href=&quot;class.ziparchive&quot;&gt;ZipArchive&lt;/a&gt;をパスワードで保護されたZipArchiveに変換しません&lt;a href=&quot;class.ziparchive&quot;&gt;でした&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="546b3dfb997ec5c5c53d06ead8983e6ddb1b28bc" translate="yes" xml:space="preserve">
          <source>As of PHP 7.2.0, instead of the missspelled &lt;strong&gt;RefectionClass::isIterateable()&lt;/strong&gt;, &lt;a href=&quot;reflectionclass.isiterable&quot;&gt;ReflectionClass::isIterable()&lt;/a&gt; should be preferred.</source>
          <target state="translated">PHP 7.2.0以降、スペルミスのある&lt;strong&gt;RefectionClass :: isIterateable（）の&lt;/strong&gt;代わりに、&lt;a href=&quot;reflectionclass.isiterable&quot;&gt;ReflectionClass :: isIterable（）&lt;/a&gt;を優先する必要があります。</target>
        </trans-unit>
        <trans-unit id="c8e7dcb77a9ba18e20479c954aa10c2ded5e1022" translate="yes" xml:space="preserve">
          <source>As of PHP 7.3.0, constants are allowed on the left-hand-side of the &lt;code&gt;instanceof&lt;/code&gt; operator.</source>
          <target state="translated">PHP 7.3.0以降、 &lt;code&gt;instanceof&lt;/code&gt; 演算子の左側で定数を使用できます。</target>
        </trans-unit>
        <trans-unit id="6148c000851dbe4ced1ace61c79418f4dfcc0558" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, &lt;code&gt;cmd&lt;/code&gt; may be passed as array of command parameters. In this case the process will be opened directly (without going through a shell) and PHP will take care of any necessary argument escaping.</source>
          <target state="translated">PHP 7.4.0以降、 &lt;code&gt;cmd&lt;/code&gt; はコマンドパラメータの配列として渡すことができます。この場合、プロセスは（シェルを経由せずに）直接開かれ、PHPが必要な引数のエスケープを処理します。</target>
        </trans-unit>
        <trans-unit id="a7554d98d1ff4a7148b6a7c44fb3f2b4fd609fe9" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, &lt;strong&gt;hash_algos()&lt;/strong&gt; will return the following list of algorithm names.</source>
          <target state="translated">PHP 7.4.0以降、&lt;strong&gt;hash_algos（）&lt;/strong&gt;は次のアルゴリズム名のリストを返します。</target>
        </trans-unit>
        <trans-unit id="03ffbbe08d5c82eafa123387083474549b923574" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, &lt;strong&gt;uopz_extends()&lt;/strong&gt; throws a &lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt;, if &lt;a href=&quot;https://www.php.net/manual/en/book.opcache.php&quot;&gt;OPcache&lt;/a&gt; is enabled, and the class entry of either &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;parent&lt;/code&gt; (if it is a trait) is immutable.</source>
          <target state="translated">PHP 7.4.0のように、&lt;strong&gt;uopz_extends（）は&lt;/strong&gt;スロー&lt;a href=&quot;class.runtimeexception&quot;&gt;のRuntimeExceptionの&lt;/a&gt;場合、&lt;a href=&quot;https://www.php.net/manual/en/book.opcache.php&quot;&gt;OPcacheが&lt;/a&gt;イネーブルされ、いずれかのクラスエントリ &lt;code&gt;class&lt;/code&gt; または &lt;code&gt;parent&lt;/code&gt; （それが形質である場合）、不変です。</target>
        </trans-unit>
        <trans-unit id="31c718c0bf64583a952d4d451ca9eea5f23a8aae" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, &lt;strong&gt;uopz_implements()&lt;/strong&gt; throws a &lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt;, if &lt;a href=&quot;https://www.php.net/manual/en/book.opcache.php&quot;&gt;OPcache&lt;/a&gt; is enabled, and the class entry of &lt;code&gt;class&lt;/code&gt; is immutable.</source>
          <target state="translated">PHP 7.4.0のように、&lt;strong&gt;uopz_implements（）は&lt;/strong&gt;スロー&lt;a href=&quot;class.runtimeexception&quot;&gt;のRuntimeExceptionの&lt;/a&gt;場合、&lt;a href=&quot;https://www.php.net/manual/en/book.opcache.php&quot;&gt;OPcacheが&lt;/a&gt;有効になっている、とのクラスエントリ &lt;code&gt;class&lt;/code&gt; 不変です。</target>
        </trans-unit>
        <trans-unit id="7edaa2cb684482882f4c88eda1b44b8cb1cb13bf" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, if the parameter &lt;code&gt;flags&lt;/code&gt; is passed, &lt;strong&gt;uopz_flags()&lt;/strong&gt; throws a &lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt;, if &lt;a href=&quot;https://www.php.net/manual/en/book.opcache.php&quot;&gt;OPcache&lt;/a&gt; is enabled, and the class entry of &lt;code&gt;class&lt;/code&gt; or the function entry of &lt;code&gt;function&lt;/code&gt; is immutable.</source>
          <target state="translated">PHP 7.4.0のような、パラメータの場合 &lt;code&gt;flags&lt;/code&gt; 渡され、&lt;strong&gt;uopz_flags（）&lt;/strong&gt;スロー&lt;a href=&quot;class.runtimeexception&quot;&gt;のRuntimeExceptionの&lt;/a&gt;場合、&lt;a href=&quot;https://www.php.net/manual/en/book.opcache.php&quot;&gt;OPcacheが&lt;/a&gt;有効になっている、とのクラスエントリ &lt;code&gt;class&lt;/code&gt; または関数のエントリ &lt;code&gt;function&lt;/code&gt; 不変です。</target>
        </trans-unit>
        <trans-unit id="d2b68c931a44245ef08dc943901821e20d7d7cf4" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, integer literals may contain underscores (&lt;code&gt;_&lt;/code&gt;) between digits, for better readability of literals. These underscores are removed by PHP's scanner.</source>
          <target state="translated">PHP 7.4.0以降、リテラルの可読性を高めるために、整数リテラルには数字の間にアンダースコア（ &lt;code&gt;_&lt;/code&gt; ）を含めることができます。これらのアンダースコアは、PHPのスキャナーによって削除されます。</target>
        </trans-unit>
        <trans-unit id="81d3e7a5fa7bbea104920de8ba162652498effd7" translate="yes" xml:space="preserve">
          <source>As of PHP 7.4.0, property definitions can include a type declaration.</source>
          <target state="translated">PHP 7.4.0 では、プロパティの定義に型宣言を含めることができます。</target>
        </trans-unit>
        <trans-unit id="33ed61fae6c2e9e608312e2539f198e5604727fa" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, constructor parameters may also be promoted to correspond to an object property. It is very common for constructor parameters to be assigned to a property in the constructor but otherwise not operated upon. Constructor promotion provides a short-hand for that use case. The example above could be rewritten as the following.</source>
          <target state="translated">PHP 8.0.0.0 以降では、コンストラクタのパラメータをオブジェクトのプロパティに対応させることもできます。コンストラクタのパラメータがコンストラクタのプロパティに代入されていても、 それ以外の場合は操作されないということはよくあることです。コンストラクタの昇格は、このような場合に便利です。上の例は次のように書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="e9ad75d8123e9cf25c94b08fedeb0d79879b8ccc" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, passing mandatory arguments after optional arguments is deprecated. This can generally be resolved by dropping the default value. One exception to this rule are arguments of the form &lt;code&gt;Type $param = null&lt;/code&gt;, where the &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; default makes the type implicitly nullable. This usage remains allowed, though it is recommended to use an explicit nullable type instead.</source>
          <target state="translated">PHP 8.0.0以降、オプションの引数の後に必須の引数を渡すことは非推奨です。これは通常、デフォルト値を削除することで解決できます。この規則の1つの例外は、 &lt;code&gt;Type $param = null&lt;/code&gt; 形式の引数です。ここで、&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; の&lt;/strong&gt;デフォルトは、型を暗黙的にnull可能にします。代わりに明示的なnull許容型を使用することをお勧めしますが、この使用法は引き続き許可されます。</target>
        </trans-unit>
        <trans-unit id="fafa4c802547b70f8c6838875cb2492ff304fcff" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, properties and methods may also be accessed with the &quot;nullsafe&quot; operator instead: &lt;code&gt;?-&amp;gt;&lt;/code&gt;. The nullsafe operator works the same as property or method access as above, except that if the object being dereferenced is &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; then &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; will be returned rather than an exception thrown. If the dereference is part of a chain, the rest of the chain is skipped.</source>
          <target state="translated">PHP 8.0.0以降、プロパティとメソッドには、代わりに「nullsafe」演算子を使用してアクセスすることもできます： &lt;code&gt;?-&amp;gt;&lt;/code&gt; 。nullsafeオペレータは、上記のようにプロパティまたはメソッドのアクセスと同様に動作し、オブジェクトが参照解除される場合があることを除いて&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;次いで&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; が&lt;/strong&gt;返されるのではなく、例外がスローされます。間接参照がチェーンの一部である場合、チェーンの残りの部分はスキップされます。</target>
        </trans-unit>
        <trans-unit id="d2bee18fc4ca963c04d5fef712f1c005d09311b2" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the &lt;a href=&quot;language.exceptions&quot;&gt;&lt;code&gt;throw&lt;/code&gt;&lt;/a&gt; keyword is an expression and may be used in any expression context. In prior versions it was a statement and was required to be on its own line.</source>
          <target state="translated">PHP 8.0.0以降、&lt;a href=&quot;language.exceptions&quot;&gt; &lt;code&gt;throw&lt;/code&gt; &lt;/a&gt;キーワードは式であり、任意の式のコンテキストで使用できます。以前のバージョンでは、それはステートメントであり、独自の行にある必要がありました。</target>
        </trans-unit>
        <trans-unit id="8c30dfc58b6904aecd90060912ac83c42d40c01c" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the &lt;code&gt;::class&lt;/code&gt; constant may also be used on objects. This resolution happens at runtime, not compile time. Its effect is the same as calling &lt;a href=&quot;function.get-class&quot;&gt;get_class()&lt;/a&gt; on the object.</source>
          <target state="translated">PHP 8.0.0以降、 &lt;code&gt;::class&lt;/code&gt; 定数はオブジェクトでも使用できます。この解決は、コンパイル時ではなく、実行時に行われます。その効果は、オブジェクトで&lt;a href=&quot;function.get-class&quot;&gt;get_class（）&lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="8e5520b9930bb3aecf9d86672e00b61c1730be14" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the decimal point character is always &lt;code&gt;.&lt;/code&gt;. Prior to PHP 8.0.0, the decimal point character is defined in the script's locale (category LC_NUMERIC). See the &lt;a href=&quot;function.setlocale&quot;&gt;setlocale()&lt;/a&gt; function.</source>
          <target state="translated">PHP 8.0.0以降、小数点文字は常に &lt;code&gt;.&lt;/code&gt; 。PHP 8.0.0より前では、小数点文字はスクリプトのロケール（カテゴリLC_NUMERIC）で定義されていました。&lt;a href=&quot;function.setlocale&quot;&gt;setlocale（）&lt;/a&gt;関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="5e8b123409d1ac3780860367621285ba2fb0537e" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the list of function arguments may include a trailing comma, which will be ignored. That is particularly useful in cases where the list of arguments is long or contains long variable names, making it convenient to list arguments vertically.</source>
          <target state="translated">PHP 8.0.0.0 以降、関数の引数のリストには末尾のカンマを含めることができますが、 これは無視されます。これは、引数のリストが長い場合や長い変数名を含む場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="0704705387fe1cea610b771799ac34657e291cc6" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the list of scope-inherited variables may include a trailing comma, which will be ignored.</source>
          <target state="translated">PHP 8.0.0.0 では、スコープを継承した変数のリストに最後のカンマが含まれている場合がありますが、 これは無視されます。</target>
        </trans-unit>
        <trans-unit id="c2e7e5f4f614668d947390ecde8a9a68306f863e" translate="yes" xml:space="preserve">
          <source>As of PHP 8.0.0, the variable name for a caught exception is optional. If not specified, the &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;code&gt;catch&lt;/code&gt;&lt;/a&gt; block will still execute but will not have access to the thrown object.</source>
          <target state="translated">PHP 8.0.0以降、キャッチされた例外の変数名はオプションです。指定しない場合、&lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt; &lt;code&gt;catch&lt;/code&gt; &lt;/a&gt;ブロックは実行されますが、スローされたオブジェクトにアクセスできません。</target>
        </trans-unit>
        <trans-unit id="3948194ef111259d26b75e671bf4d92931e78074" translate="yes" xml:space="preserve">
          <source>As of runkit version 0.5, certain Sandbox settings may be modified on the fly using ArrayAccess syntax. Some settings, such as &lt;code&gt;active&lt;/code&gt; are read-only and meant to provide status information. Other settings, such as &lt;code&gt;output_handler&lt;/code&gt; may be set and read much like a normal array offset. Future settings may be write-only, however no such settings currently exist.</source>
          <target state="translated">runkitバージョン0.5以降、特定のサンドボックス設定は、ArrayAccess構文を使用してその場で変更できます。 &lt;code&gt;active&lt;/code&gt; などの一部の設定は読み取り専用であり、ステータス情報を提供するためのものです。 &lt;code&gt;output_handler&lt;/code&gt; などの他の設定を設定して、通常の配列オフセットのように読み取ることができます。将来の設定は書き込み専用になる可能性がありますが、そのような設定は現在存在しません。</target>
        </trans-unit>
        <trans-unit id="4dac5c6f1b3f2ed33d3286d94dbd3028aaced85f" translate="yes" xml:space="preserve">
          <source>As of runkit version 0.5, this function is deprecated and is scheduled to be removed from the package prior to a 1.0 release. The output handler for a given Runkit_Sandbox instance may be read/set using the array offset syntax shown on the &lt;a href=&quot;runkit.sandbox&quot;&gt;Runkit_Sandbox&lt;/a&gt; class definition page.</source>
          <target state="translated">runkitバージョン0.5以降、この関数は非推奨になり、1.0リリースの前にパッケージから削除される予定です。特定のRunkit_Sandboxインスタンスの出力ハンドラーは、&lt;a href=&quot;runkit.sandbox&quot;&gt;Runkit_Sandbox&lt;/a&gt;クラス定義ページに示されている配列オフセット構文を使用して読み取り/設定できます。</target>
        </trans-unit>
        <trans-unit id="6273caad8bda209240ab6a6688d05ad17c916bce" translate="yes" xml:space="preserve">
          <source>As of uopz 6.0.0 mocking static members is no longer supported.</source>
          <target state="translated">uopz 6.0.0 以降、静的メンバのモックはサポートされなくなりました。</target>
        </trans-unit>
        <trans-unit id="905848ff7b7b529895e5932161e2c6f0ee979d86" translate="yes" xml:space="preserve">
          <source>As of version 2.0.0, the returned string is encoded in Unicode/UTF-8.</source>
          <target state="translated">バージョン2.0.0.0では、返される文字列はUnicode/UTF-8でエンコードされています。</target>
        </trans-unit>
        <trans-unit id="15ba0c2f4a1cb79aa6bb4cfe8bff81e4bdfd3ef8" translate="yes" xml:space="preserve">
          <source>As opposed to defining constants using &lt;a href=&quot;function.define&quot;&gt;define()&lt;/a&gt;, constants defined using the &lt;code&gt;const&lt;/code&gt; keyword must be declared at the top-level scope because they are defined at compile-time. This means that they cannot be declared inside functions, loops, &lt;code&gt;if&lt;/code&gt; statements or &lt;code&gt;try&lt;/code&gt;/ &lt;code&gt;catch&lt;/code&gt; blocks.</source>
          <target state="translated">&lt;a href=&quot;function.define&quot;&gt;define（）&lt;/a&gt;を使用して定数を定義するのとは対照的に、 &lt;code&gt;const&lt;/code&gt; キーワードを使用して定義された定数は、コンパイル時に定義されるため、最上位スコープで宣言する必要があります。これは、関数、ループ、 &lt;code&gt;if&lt;/code&gt; ステートメントまたは &lt;code&gt;try&lt;/code&gt; / &lt;code&gt;catch&lt;/code&gt; ブロック内で宣言できないことを意味します。</target>
        </trans-unit>
        <trans-unit id="aab4c3b32edc0f937f690e5786fc76e8c0769cf4" translate="yes" xml:space="preserve">
          <source>As opposed to defining constants using &lt;a href=&quot;function.define&quot;&gt;define()&lt;/a&gt;, constants defined using the &lt;em&gt;const&lt;/em&gt; keyword must be declared at the top-level scope because they are defined at compile-time. This means that they cannot be declared inside functions, loops, &lt;em&gt;if&lt;/em&gt; statements or &lt;em&gt;try&lt;/em&gt;/ &lt;em&gt;catch&lt;/em&gt; blocks.</source>
          <target state="translated">&lt;a href=&quot;function.define&quot;&gt;define（）&lt;/a&gt;を使用して定数を定義するのではなく、&lt;em&gt;const&lt;/em&gt;キーワードを使用して定義された定数は、コンパイル時に定義されるため、トップレベルのスコープで宣言する必要があります。つまり、それらは関数、ループ、&lt;em&gt;if&lt;/em&gt;ステートメント、または&lt;em&gt;try&lt;/em&gt; / &lt;em&gt;catch&lt;/em&gt;ブロック内では宣言できません。</target>
        </trans-unit>
        <trans-unit id="2cf624740dcc1c4e7125ef6b46cfa17cfaaeecce" translate="yes" xml:space="preserve">
          <source>As opposed with &lt;a href=&quot;function.isset&quot;&gt;isset()&lt;/a&gt;, &lt;strong&gt;property_exists()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; even if the property has the value &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;a href=&quot;function.isset&quot;&gt;isset（）&lt;/a&gt;とは異なり、&lt;strong&gt;property_exists（）&lt;/strong&gt;は、プロパティの値が&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; で&lt;/strong&gt;あっても&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; を&lt;/strong&gt;返し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="da0366ef9b52ddf9bb7702b216238e42b73f4a3f" translate="yes" xml:space="preserve">
          <source>As opposed with &lt;a href=&quot;function.isset&quot;&gt;isset()&lt;/a&gt;, &lt;strong&gt;property_exists()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; even if the property has the value &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;a href=&quot;function.isset&quot;&gt;isset（）&lt;/a&gt;とは対照的に、&lt;strong&gt;property_exists（）&lt;/strong&gt;は、プロパティの値が&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; で&lt;/strong&gt;あっても&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; を&lt;/strong&gt;返し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="68e6a5f8b13f60e57ca3fbc99449b399d6c67a7c" translate="yes" xml:space="preserve">
          <source>As passed : 'bar'</source>
          <target state="translated">渡したもの:'bar'</target>
        </trans-unit>
        <trans-unit id="88b401fa34e68d9588f800a42732b1321b69de15" translate="yes" xml:space="preserve">
          <source>As passed : array (</source>
          <target state="translated">渡されたもの:配列 (</target>
        </trans-unit>
        <trans-unit id="fdffef060ffc75cb1fc4c96e368245c52f0f8cb9" translate="yes" xml:space="preserve">
          <source>As resource variables hold special handles to opened files, database connections, image canvas areas and the like, converting to a resource makes no sense.</source>
          <target state="translated">リソース変数は、開いているファイルやデータベース接続、画像キャンバス領域などの特別なハンドルを保持しているので、リソースに変換しても意味がありません。</target>
        </trans-unit>
        <trans-unit id="d36bc794ced7d836b26bfe57dce4bc07ff7014b0" translate="yes" xml:space="preserve">
          <source>As said before, references are not pointers. That means, the following construct won't do what you expect:</source>
          <target state="translated">前述したように、参照はポインタではありません。つまり、次のような構成では期待しているようなことはできないということです。</target>
        </trans-unit>
        <trans-unit id="9e99c084b8fc557ffd276652c6d810938b44f6c4" translate="yes" xml:space="preserve">
          <source>As short tags can be disabled it is recommened to only use the normal tags (&lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;?= ?&amp;gt;&lt;/code&gt;) to maximise compatibility.</source>
          <target state="translated">短いタグは無効にできるため、互換性を最大化するために、通常のタグ（ &lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; および &lt;code&gt;&amp;lt;?= ?&amp;gt;&lt;/code&gt; ）のみを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="866ec8e345a04576ee58fe7aee87c2e9340d6cb0" translate="yes" xml:space="preserve">
          <source>As stated above, directly converting an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;, &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;, or &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; to a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; does not provide any useful information about the value beyond its type. See the functions &lt;a href=&quot;function.print-r&quot;&gt;print_r()&lt;/a&gt; and &lt;a href=&quot;function.var-dump&quot;&gt;var_dump()&lt;/a&gt; for more effective means of inspecting the contents of these types.</source>
          <target state="translated">上で述べたように、&lt;a href=&quot;language.types.array&quot;&gt;配列&lt;/a&gt;、&lt;a href=&quot;language.types.object&quot;&gt;オブジェクト&lt;/a&gt;、または&lt;a href=&quot;language.types.resource&quot;&gt;リソース&lt;/a&gt;を&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;に直接変換しても、その型以外の値に関する有用な情報は得られません。これらのタイプの内容を検査するより効果的な方法については、関数&lt;a href=&quot;function.print-r&quot;&gt;print_r（）&lt;/a&gt;および&lt;a href=&quot;function.var-dump&quot;&gt;var_dump（）&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="66ae88aa45772ef88167669ba9ca9597cf9643ed" translate="yes" xml:space="preserve">
          <source>As stated above, directly converting an array, object, or resource to a string does not provide any useful information about the value beyond its type. See the functions &lt;a href=&quot;function.print-r&quot;&gt;print_r()&lt;/a&gt; and &lt;a href=&quot;function.var-dump&quot;&gt;var_dump()&lt;/a&gt; for more effective means of inspecting the contents of these types.</source>
          <target state="translated">上記のように、配列、オブジェクト、またはリソースを文字列に直接変換しても、その型以外の値に関する有用な情報は提供されません。これらのタイプの内容を検査するより効果的な方法については、関数&lt;a href=&quot;function.print-r&quot;&gt;print_r（）&lt;/a&gt;および&lt;a href=&quot;function.var-dump&quot;&gt;var_dump（）&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f3fa54061d765a8d50b1f625e6e4feb283591be6" translate="yes" xml:space="preserve">
          <source>As stated in the &lt;a href=&quot;language.types.array#language.types.array.syntax&quot;&gt;syntax&lt;/a&gt; section, what's inside the square brackets ('&lt;code&gt;[&lt;/code&gt;' and '&lt;code&gt;]&lt;/code&gt;') must be an expression. This means that code like this works:</source>
          <target state="translated">&lt;a href=&quot;language.types.array#language.types.array.syntax&quot;&gt;構文の&lt;/a&gt;セクションで述べたように、角括弧（ ' &lt;code&gt;[&lt;/code&gt; 'および ' &lt;code&gt;]&lt;/code&gt; '）の中にあるものは式でなければなりません。これは、次のようなコードが機能することを意味します。</target>
        </trans-unit>
        <trans-unit id="51c890e85bbe55fce7631655cdd007cd2d8fe7d4" translate="yes" xml:space="preserve">
          <source>As stated in the &lt;a href=&quot;language.types.array#language.types.array.syntax&quot;&gt;syntax&lt;/a&gt; section, what's inside the square brackets ('&lt;em&gt;[&lt;/em&gt;' and '&lt;em&gt;]&lt;/em&gt;') must be an expression. This means that code like this works:</source>
          <target state="translated">&lt;a href=&quot;language.types.array#language.types.array.syntax&quot;&gt;構文&lt;/a&gt;セクションで述べたように、大括弧（ ' &lt;em&gt;[&lt;/em&gt; 'および ' &lt;em&gt;]&lt;/em&gt; '）の内側は式でなければなりません。これは、このようなコードが機能することを意味します：</target>
        </trans-unit>
        <trans-unit id="ee9be0916a120e589a6dce4a923276454bdd1fc3" translate="yes" xml:space="preserve">
          <source>As string with additional headers to be set on the mail</source>
          <target state="translated">メールに設定するヘッダを追加した文字列</target>
        </trans-unit>
        <trans-unit id="3598917b5524bc543d4d45f16a46747202edb6f3" translate="yes" xml:space="preserve">
          <source>As such, the &lt;code&gt;to&lt;/code&gt; parameter should not be an address in the form of &quot;Something &amp;lt;someone@example.com&amp;gt;&quot;. The mail command may not parse this properly while talking with the MTA.</source>
          <target state="translated">そのため、 &lt;code&gt;to&lt;/code&gt; パラメータは「Something &amp;lt;someone@example.com&amp;gt;」の形式のアドレスであってはなりません。mailコマンドは、MTAとの通信中にこれを適切に解析しない場合があります。</target>
        </trans-unit>
        <trans-unit id="d4490deed3b27f1c0f76738d1bc2f521678b19d6" translate="yes" xml:space="preserve">
          <source>As the &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; hierarchy does not inherit from &lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt;, code that uses &lt;code&gt;catch (Exception $e) { ... }&lt;/code&gt; blocks to handle uncaught exceptions in PHP 5 will find that these &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt;s are not caught by these blocks. Either a &lt;code&gt;catch (Error $e) { ... }&lt;/code&gt; block or a &lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler()&lt;/a&gt; handler is required.</source>
          <target state="translated">以下のよう&lt;a href=&quot;class.error&quot;&gt;にエラー&lt;/a&gt;階層は継承しない&lt;a href=&quot;class.exception&quot;&gt;例外&lt;/a&gt;、コードのusesという &lt;code&gt;catch (Exception $e) { ... }&lt;/code&gt; PHP 5でキャッチされない例外を処理するブロックは、これらのことがわかります&lt;a href=&quot;class.error&quot;&gt;エラー&lt;/a&gt; sはこれらのブロックでキャッチされていません。どちらの &lt;code&gt;catch (Error $e) { ... }&lt;/code&gt; ブロックまたは&lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler（）&lt;/a&gt;ハンドラが必要です。</target>
        </trans-unit>
        <trans-unit id="6f19b71f6bba421efc0e6fed5450118b9a9b332b" translate="yes" xml:space="preserve">
          <source>As the output is dependent upon the underlying C library, some conversion specifiers are not supported. On Windows, supplying unknown conversion specifiers will result in 5 &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; messages and return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. On other operating systems you may not get any &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; messages and the output may contain the conversion specifiers unconverted.</source>
          <target state="translated">出力は基礎となるCライブラリに依存しているため、一部の変換指定子はサポートされていません。Windowsでは、不明な変換指定子を指定すると、5つの&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;メッセージが生成され、&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; が&lt;/strong&gt;返され&lt;strong&gt;ます&lt;/strong&gt;。他のオペレーティングシステムでは、&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;メッセージが表示されず、出力には変換されていない変換指定子が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="0b7728ac392e27a6ec16407cad65f59393037c11" translate="yes" xml:space="preserve">
          <source>As the output is dependent upon the underlying C library, some conversion specifiers are not supported. On Windows, supplying unknown conversion specifiers will result in 5 &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; messages and return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. On other operating systems you may not get any &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; messages and the output may contain the conversion specifiers unconverted.</source>
          <target state="translated">出力は基礎となるCライブラリに依存しているため、一部の変換指定子はサポートされていません。Windowsでは、不明な変換指定子を指定すると、5つの&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;メッセージが表示され、&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; が&lt;/strong&gt;返され&lt;strong&gt;ます&lt;/strong&gt;。他のオペレーティングシステムでは、&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt;メッセージが表示されず、出力に変換されていない変換指定子が含まれている場合があります。</target>
        </trans-unit>
        <trans-unit id="5211e7ddc4fb7afc70f404daab7ad413a61bd18a" translate="yes" xml:space="preserve">
          <source>As the output shows, the &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; iterated through all of the &lt;a href=&quot;language.oop5.visibility&quot;&gt;visible&lt;/a&gt; properties that could be accessed.</source>
          <target state="translated">出力が示すように、&lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;はアクセス&lt;a href=&quot;language.oop5.visibility&quot;&gt;可能&lt;/a&gt;なすべての可視プロパティを繰り返し処理しました。</target>
        </trans-unit>
        <trans-unit id="f412b7a75502678a68735a08873cbf389a6fa82b" translate="yes" xml:space="preserve">
          <source>As the value is interpreted as boolean by the Net-SNMP library, it can only be &quot;0&quot; or &quot;1&quot;.</source>
          <target state="translated">Net-SNMP ライブラリでは、値はブール値として解釈されるため、&quot;0 &quot;か &quot;1 &quot;しか指定できません。</target>
        </trans-unit>
        <trans-unit id="4f496c49fc48ac58a6465818165fdbe954dad476" translate="yes" xml:space="preserve">
          <source>As this function sorts the returned values on the client side it is possible that you might not get the expected results in case you reach the &lt;code&gt;sizelimit&lt;/code&gt; either of the server or defined within &lt;a href=&quot;function.ldap-search&quot;&gt;ldap_search()&lt;/a&gt;.</source>
          <target state="translated">この関数はクライアント側で戻り値をソートするため、サーバーの &lt;code&gt;sizelimit&lt;/code&gt; 到達した場合、または&lt;a href=&quot;function.ldap-search&quot;&gt;ldap_search（）&lt;/a&gt;内で定義されたサイズ制限に達した場合に、予期した結果が得られない可能性があります。</target>
        </trans-unit>
        <trans-unit id="79e56cfe26f27e39615c5352d949b56d66f872da" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;function.curl-setopt&quot;&gt;curl_setopt()&lt;/a&gt;, passing an array to &lt;strong&gt;&lt;code&gt;CURLOPT_POST&lt;/code&gt;&lt;/strong&gt; will encode the data as &lt;em&gt;multipart/form-data&lt;/em&gt;, while passing a URL-encoded string will encode the data as &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;function.curl-setopt&quot;&gt;curl_setopt（）&lt;/a&gt;と同様に、配列を&lt;strong&gt; &lt;code&gt;CURLOPT_POST&lt;/code&gt; に&lt;/strong&gt;渡すとデータが&lt;em&gt;multipart / form-&lt;/em&gt; dataとしてエンコードされ、URLエンコードされた文字列を渡すとデータが&lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt;としてエンコードされ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cc55f6e97269627133dcc739258204017fbf58d5" translate="yes" xml:space="preserve">
          <source>As with all classes that implement the &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; interface, &lt;strong&gt;Phar::offsetGet()&lt;/strong&gt; is automatically called when using the &lt;code&gt;[]&lt;/code&gt; angle bracket operator.</source>
          <target state="translated">&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;インターフェイスを実装するすべてのクラスと同様に、 &lt;code&gt;[]&lt;/code&gt; 山かっこ演算子を使用すると、&lt;strong&gt;Phar :: offsetGet（）&lt;/strong&gt;が自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d13997fcfe7c0f1efd14eb10e7943dcc0d2d7873" translate="yes" xml:space="preserve">
          <source>As with all classes that implement the &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; interface, &lt;strong&gt;Phar::offsetGet()&lt;/strong&gt; is automatically called when using the &lt;em&gt;[]&lt;/em&gt; angle bracket operator.</source>
          <target state="translated">&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;インターフェースを実装するすべてのクラスと同様に、&lt;strong&gt;Phar :: offsetGet（）&lt;/strong&gt;は、&lt;em&gt;[]&lt;/em&gt;山括弧演算子を使用すると自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="09bcbb027939832d5da0536111efbc1d21929fb2" translate="yes" xml:space="preserve">
          <source>As with all internal PHP functions as of 5.3.0, &lt;strong&gt;array_search()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if invalid parameters are passed to it.</source>
          <target state="translated">5.3.0以降のすべての内部PHP関数と同様に、無効なパラメーターが渡された場合、&lt;strong&gt;array_search（）&lt;/strong&gt;は&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; を&lt;/strong&gt;返し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2754f5cb2efc68df43ef21e96df9aed0e29a677f" translate="yes" xml:space="preserve">
          <source>As with anything that outputs its result directly to the browser, the &lt;a href=&quot;https://secure.php.net/manual/en/book.outcontrol.php&quot;&gt;output-control functions&lt;/a&gt; can be used to capture the output of this function, and save it in a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; (for example).</source>
          <target state="translated">結果を直接ブラウザに出力するものと同様に、&lt;a href=&quot;https://secure.php.net/manual/en/book.outcontrol.php&quot;&gt;出力制御関数&lt;/a&gt;を使用して、この関数の出力をキャプチャし、それを&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;（たとえば）に保存できます。</target>
        </trans-unit>
        <trans-unit id="316bfd4c5d87580680695c011a13623e000b28e1" translate="yes" xml:space="preserve">
          <source>As with anything that outputs its result directly to the browser, the &lt;a href=&quot;https://www.php.net/manual/en/book.outcontrol.php&quot;&gt;output-control functions&lt;/a&gt; can be used to capture the output of this function, and save it in a string (for example).</source>
          <target state="translated">結果をブラウザに直接出力するものと同様に、&lt;a href=&quot;https://www.php.net/manual/en/book.outcontrol.php&quot;&gt;output-control関数&lt;/a&gt;を使用して、この関数の出力をキャプチャし、文字列に保存できます（たとえば）。</target>
        </trans-unit>
        <trans-unit id="99c65dbe723797529b74d1acb4318b090416a5cc" translate="yes" xml:space="preserve">
          <source>As with normal exceptions, these &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; exceptions will bubble up until they reach the first matching &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;code&gt;catch&lt;/code&gt;&lt;/a&gt; block. If there are no matching blocks, then any default exception handler installed with &lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler()&lt;/a&gt; will be called, and if there is no default exception handler, then the exception will be converted to a fatal error and will be handled like a traditional error.</source>
          <target state="translated">通常の例外と同様に、これらの&lt;a href=&quot;class.error&quot;&gt;エラー&lt;/a&gt;例外は、最初に一致する&lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt; &lt;code&gt;catch&lt;/code&gt; &lt;/a&gt;ブロックに到達するまでバブルアップします。一致するブロックがない場合は、&lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler（）&lt;/a&gt;とともにインストールされたデフォルトの例外ハンドラーが呼び出されます。デフォルトの例外ハンドラーがない場合、例外は致命的なエラーに変換され、従来のエラーと同様に処理されます。</target>
        </trans-unit>
        <trans-unit id="afdc770b27552bdbfc1d5e96ff256244e5c1c631" translate="yes" xml:space="preserve">
          <source>As with normal exceptions, these &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; exceptions will bubble up until they reach the first matching &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt; block. If there are no matching blocks, then any default exception handler installed with &lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler()&lt;/a&gt; will be called, and if there is no default exception handler, then the exception will be converted to a fatal error and will be handled like a traditional error.</source>
          <target state="translated">通常の例外と同様に、これらの&lt;a href=&quot;class.error&quot;&gt;エラー&lt;/a&gt;例外は、最初に一致する&lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt;ブロックに到達するまで発生します。一致するブロックがない場合、&lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler（）で&lt;/a&gt;インストールされたデフォルトの例外ハンドラーが呼び出され、デフォルトの例外ハンドラーがない場合、例外は致命的なエラーに変換され、従来のエラーと同様に処理されます。</target>
        </trans-unit>
        <trans-unit id="b550c3ac1e42f23a262b44df4347d67db42bae49" translate="yes" xml:space="preserve">
          <source>As with the simple value yields shown earlier, yielding a key/value pair in an expression context requires the yield statement to be parenthesised:</source>
          <target state="translated">先に示した単純な値の収率と同様に、式のコンテキストでキーと値のペアを収率するには、収率文を括弧で括る必要があります。</target>
        </trans-unit>
        <trans-unit id="49f22e6a92ee439bc6f3bee91d46cfb6a8a092ca" translate="yes" xml:space="preserve">
          <source>As with timers, the callback is guaranteed to be invoked only when the point in time where it is supposed to trigger has passed. If multiple timers become ready during the same loop iteration then the ones with earlier time-out values are invoked before ones with later time-out values (but this is no longer true when a callback calls &lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt; recursively).</source>
          <target state="translated">タイマーと同様に、コールバックは、トリガーされるはずの時点が経過したときにのみ呼び出されることが保証されています。同じループ反復中に複数のタイマーの準備ができると、タイムアウト値が早いタイマーが呼び出されてから、タイムアウト値が&lt;a href=&quot;evloop.run&quot;&gt;遅れるタイマー&lt;/a&gt;が呼び出されます（ただし、コールバックがEvLoop :: run（）を再帰的に呼び出す場合、これは当てはまりません）。</target>
        </trans-unit>
        <trans-unit id="c6cd4b7b452f95dbbe652ec34b19efcbb0ba0441" translate="yes" xml:space="preserve">
          <source>As you can see the last value &lt;code&gt;&quot;d&quot;&lt;/code&gt; was assigned the key &lt;code&gt;7&lt;/code&gt;. This is because the largest integer key before that was &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">ご覧のとおり、最後の値 &lt;code&gt;&quot;d&quot;&lt;/code&gt; にはキー &lt;code&gt;7&lt;/code&gt; が割り当てられています。これは、それ以前の最大の整数キーが &lt;code&gt;6&lt;/code&gt; であったためです。</target>
        </trans-unit>
        <trans-unit id="a55e180254feddc7051291fa44fffe5250c7f193" translate="yes" xml:space="preserve">
          <source>As you can see the last value &lt;em&gt;&quot;d&quot;&lt;/em&gt; was assigned the key &lt;em&gt;7&lt;/em&gt;. This is because the largest integer key before that was &lt;em&gt;6&lt;/em&gt;.</source>
          <target state="translated">ご覧のとおり、最後の値&lt;em&gt;&quot;d&quot;&lt;/em&gt;にはキー&lt;em&gt;7&lt;/em&gt;が割り当てられています。これは、それ以前の最大の整数キーが&lt;em&gt;6だったため&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="a173e725607d0f98c78ebac0b31138d8d136aa84" translate="yes" xml:space="preserve">
          <source>Asia</source>
          <target state="translated">Asia</target>
        </trans-unit>
        <trans-unit id="8a2e1326cdf7280fae9246438545acb80c113182" translate="yes" xml:space="preserve">
          <source>Asia time zones.</source>
          <target state="translated">アジアのタイムゾーン。</target>
        </trans-unit>
        <trans-unit id="4b486b14ba35128f7d93a1ababac7427a61b35c0" translate="yes" xml:space="preserve">
          <source>Ask the multi handle if there are any messages or information from the individual transfers. Messages may include information such as an error code from the transfer or just the fact that a transfer is completed.</source>
          <target state="translated">個々の転送からのメッセージや情報があるかどうかをマルチハンドルに尋ねてください。メッセージには、転送のエラーコードや転送が完了したという事実などの情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="ae40253ef527434fa7ad991157d295b5459561ae" translate="yes" xml:space="preserve">
          <source>Assemble a url.</source>
          <target state="translated">urlを組み立てる。</target>
        </trans-unit>
        <trans-unit id="8beae02d3fb5c0677ad1bcbaf1643e335192928b" translate="yes" xml:space="preserve">
          <source>Assertion subpatterns are not capturing subpatterns, and may not be repeated, because it makes no sense to assert the same thing several times. If any kind of assertion contains capturing subpatterns within it, these are counted for the purposes of numbering the capturing subpatterns in the whole pattern. However, substring capturing is carried out only for positive assertions, because it does not make sense for negative assertions.</source>
          <target state="translated">アサーション・サブパターンはキャプチャ・サブパターンではなく、同じことを何度もアサーションするのは意味がないので、繰り返してはいけません。どのような種類のアサーションでも、その中に捕捉サブパターンが含まれている場合、これらはパターン全体の中の捕捉サブパターンに番号を付ける目的でカウントされます。しかし、部分文字列の捕捉は正のアサーションに対してのみ行われ、負のアサーションに対しては意味をなさないからです。</target>
        </trans-unit>
        <trans-unit id="e3292c12a856a02722a46d87471ff4e6faefa104" translate="yes" xml:space="preserve">
          <source>AssertionError</source>
          <target state="translated">AssertionError</target>
        </trans-unit>
        <trans-unit id="5061cebcb33e24b0b2cbfc16366a8edfa6d92c7e" translate="yes" xml:space="preserve">
          <source>AssertionError &amp;rarr;</source>
          <target state="translated">AssertionError&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="d20104ab8cafeb2e9adc34db570adec53186f0a5" translate="yes" xml:space="preserve">
          <source>Assertions &amp;rarr;</source>
          <target state="translated">アサーション&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2665d21edb771214fc5df1f479e5a109d9f2d6d8" translate="yes" xml:space="preserve">
          <source>Assertions can be nested in any combination. For example, &lt;code&gt;(?&amp;lt;=(?&amp;lt;!foo)bar)baz&lt;/code&gt; matches an occurrence of &quot;baz&quot; that is preceded by &quot;bar&quot; which in turn is not preceded by &quot;foo&quot;, while &lt;code&gt;(?&amp;lt;=\d{3}...(?&amp;lt;!999))foo&lt;/code&gt; is another pattern which matches &quot;foo&quot; preceded by three digits and any three characters that are not &quot;999&quot;.</source>
          <target state="translated">アサーションは任意の組み合わせでネストできます。たとえば、 &lt;code&gt;(?&amp;lt;=(?&amp;lt;!foo)bar)baz&lt;/code&gt; は、「bar」が前にある「baz」のオカレンスに一致しますが、「foo」は前にありませんが、 &lt;code&gt;(?&amp;lt;=\d{3}...(?&amp;lt;!999))foo&lt;/code&gt; は、「foo」の前に3桁の数字があり、「999」以外の3文字が一致する別のパターンです。</target>
        </trans-unit>
        <trans-unit id="6cca3af175147a1e2ced06a09dcdbcfa5589c1e7" translate="yes" xml:space="preserve">
          <source>Assertions can be nested in any combination. For example, &lt;em&gt;(?&amp;lt;=(?&amp;lt;!foo)bar)baz&lt;/em&gt; matches an occurrence of &quot;baz&quot; that is preceded by &quot;bar&quot; which in turn is not preceded by &quot;foo&quot;, while &lt;em&gt;(?&amp;lt;=\d{3}...(?&amp;lt;!999))foo&lt;/em&gt; is another pattern which matches &quot;foo&quot; preceded by three digits and any three characters that are not &quot;999&quot;.</source>
          <target state="translated">アサーションは任意の組み合わせでネストできます。例えば、&lt;em&gt;（？&amp;lt;=（？&amp;lt;！FOO）バー）バズは&lt;/em&gt;「バー」しながら順番に、「FOO」が先行されないが先行する「バズ」の発生と一致する&lt;em&gt;（？&amp;lt;= \ D {3 } ...（？&amp;lt;！999））foo&lt;/em&gt;は、「foo」と一致する別のパターンであり、先頭に3桁の数字と「999」ではない3つの文字が続きます。</target>
        </trans-unit>
        <trans-unit id="b804f4a6ab5e2c167fd317138b99dc6366096e68" translate="yes" xml:space="preserve">
          <source>Assertions count towards the maximum of 200 parenthesized subpatterns.</source>
          <target state="translated">アサーションは、最大200個の括弧付きサブパターンに向かってカウントされます。</target>
        </trans-unit>
        <trans-unit id="2b9a809e908781ed11ffadd5bebf5f3a87ba4cad" translate="yes" xml:space="preserve">
          <source>Assertions should be used as a debugging feature only. You may use them for sanity-checks that test for conditions that should always be &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; and that indicate some programming errors if not or to check for the presence of certain features like extension functions or certain system limits and features.</source>
          <target state="translated">アサーションはデバッグ機能としてのみ使用してください。これらは常に&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; で&lt;/strong&gt;ある必要がある条件をテストし、そうでない場合はプログラミングエラーを示すサニティチェックに使用したり、拡張機能や特定のシステム制限や機能などの特定の機能の存在を確認したりできます。</target>
        </trans-unit>
        <trans-unit id="cedf40ce0766e7e4c36ab6e4ddbfc8bb8b249505" translate="yes" xml:space="preserve">
          <source>Assertions should be used as a debugging feature only. You may use them for sanity-checks that test for conditions that should always be &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; and that indicate some programming errors if not or to check for the presence of certain features like extension functions or certain system limits and features.</source>
          <target state="translated">アサーションは、デバッグ機能としてのみ使用する必要があります。これらは、常に&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;ある必要があり、&lt;strong&gt;そう&lt;/strong&gt;でない場合はプログラミングエラーを示す条件をテストする健全性チェック、または拡張機能や特定のシステム制限や機能などの特定の機能の存在をチェックするために使用できます。</target>
        </trans-unit>
        <trans-unit id="6248b428b39b066def39b2e5939bf5a11c38888b" translate="yes" xml:space="preserve">
          <source>Assertions should not be used for normal runtime operations like input parameter checks. As a rule of thumb your code should always be able to work correctly if assertion checking is not activated.</source>
          <target state="translated">アサーションは、入力パラメータのチェックなどの通常の実行時操作には使用しないでください。経験則として、アサーションチェックが有効になっていない場合、コードは常に正しく動作するはずです。</target>
        </trans-unit>
        <trans-unit id="d67a13ffa859bea51d61bead619ff75b205f57e3" translate="yes" xml:space="preserve">
          <source>Assigan values to View engine, then the value can access directly by name in template.</source>
          <target state="translated">値をビューエンジンに割り当て、テンプレート内の名前で直接アクセスできるようにします。</target>
        </trans-unit>
        <trans-unit id="43a5914cb54169a132f368602d585b3591a64c2e" translate="yes" xml:space="preserve">
          <source>Assign By Reference</source>
          <target state="translated">リファレンスによる割り当て</target>
        </trans-unit>
        <trans-unit id="2e1338237507c7388e7d9e6ec98854728b4ccadc" translate="yes" xml:space="preserve">
          <source>Assign a priority to a bufferevent</source>
          <target state="translated">buffereventに優先度を割り当てる</target>
        </trans-unit>
        <trans-unit id="2933b45c5b7d8813f7e25ba4ee811087ef92cdfc" translate="yes" xml:space="preserve">
          <source>Assign a priority to the &lt;code&gt;bevent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bevent&lt;/code&gt; に優先度を割り当てます。</target>
        </trans-unit>
        <trans-unit id="fba89c9ce1d594bf39c58422b4377b05d2075aea" translate="yes" xml:space="preserve">
          <source>Assign a priority to the &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 優先度を割り当てます。</target>
        </trans-unit>
        <trans-unit id="9f295ce28f9cbc17aea0f0a8a47be7aea940db86" translate="yes" xml:space="preserve">
          <source>Assign the specified &lt;code&gt;bevent&lt;/code&gt; to the &lt;code&gt;event_base&lt;/code&gt;.</source>
          <target state="translated">指定された割り当て &lt;code&gt;bevent&lt;/code&gt; に &lt;code&gt;event_base&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="fa1903eca18ae92e9ccec9552cb537e97ef0bb80" translate="yes" xml:space="preserve">
          <source>Assigning another value to &lt;code&gt;handle&lt;/code&gt; argument in subsequent code will release the lock.</source>
          <target state="translated">後続のコードで引数を &lt;code&gt;handle&lt;/code&gt; 別の値を割り当てると、ロックが解除されます。</target>
        </trans-unit>
        <trans-unit id="7bec00ae67953bf63f8b1b3f8ddf8f9255f79d82" translate="yes" xml:space="preserve">
          <source>Assignment Operators</source>
          <target state="translated">代入演算子</target>
        </trans-unit>
        <trans-unit id="cb6d2508064b7f34a684c58cc5638ae8ef631ba2" translate="yes" xml:space="preserve">
          <source>Assignment Operators &amp;rarr;</source>
          <target state="translated">代入演算子&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c6606fee6331c4bf43802ca0b5860b36d427bd3a" translate="yes" xml:space="preserve">
          <source>Assignment by Reference</source>
          <target state="translated">参考資料による課題</target>
        </trans-unit>
        <trans-unit id="18074dc5203632c6d67fd9f3e446f952068f75b1" translate="yes" xml:space="preserve">
          <source>Assignment by reference is also supported, using the &quot;$var = &amp;amp;$othervar;&quot; syntax. Assignment by reference means that both variables end up pointing at the same data, and nothing is copied anywhere.</source>
          <target state="translated">&quot;$ var =＆$ othervar;&quot;を使用した参照による割り当てもサポートされています。構文。参照による割り当てとは、両方の変数が同じデータを指すことになり、何もコピーされないことを意味します。</target>
        </trans-unit>
        <trans-unit id="1a4d1e9b1f92e8358f67ebe0d07dd9be86ee5dd8" translate="yes" xml:space="preserve">
          <source>Assigns a value to the specified offset.</source>
          <target state="translated">指定したオフセットに値を代入します。</target>
        </trans-unit>
        <trans-unit id="3bd14e94cfa66f2a989979afbdcb1b1617634303" translate="yes" xml:space="preserve">
          <source>Assigns read, write and event(status) callbacks.</source>
          <target state="translated">読み取り、書き込み、イベント(ステータス)のコールバックを割り当てます。</target>
        </trans-unit>
        <trans-unit id="339cd85eb93aa3433fd2f5c1ca2ce016c9c0e06a" translate="yes" xml:space="preserve">
          <source>Assigns the worker an identifier.</source>
          <target state="translated">ワーカーに識別子を割り当てます。</target>
        </trans-unit>
        <trans-unit id="4a3c6a876faf9eebf78adc58f7f63329fdbe70f6" translate="yes" xml:space="preserve">
          <source>Assocates the previous image in an image list with the Imagick object.</source>
          <target state="translated">画像リストの前の画像を Imagick オブジェクトと関連付けます。</target>
        </trans-unit>
        <trans-unit id="eaedce342dbac2ea574b1f9507f683f16a32aa67" translate="yes" xml:space="preserve">
          <source>Associate data to an &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; in the storage.</source>
          <target state="translated">ストレージ内の&lt;a href=&quot;language.types.object&quot;&gt;オブジェクト&lt;/a&gt;にデータを関連付けます。</target>
        </trans-unit>
        <trans-unit id="5982fa849bf2cafc44322092b0078cb397953ec9" translate="yes" xml:space="preserve">
          <source>Associate data to an object in the storage.</source>
          <target state="translated">ストレージ内のオブジェクトにデータを関連付けます。</target>
        </trans-unit>
        <trans-unit id="30eddbbad08eee6756fcfd86ff9fbd66fe153bac" translate="yes" xml:space="preserve">
          <source>Associated event base</source>
          <target state="translated">関連イベントベース</target>
        </trans-unit>
        <trans-unit id="fa576c78e63e88239909b14c7528b5a4310d6406" translate="yes" xml:space="preserve">
          <source>Associated event base.</source>
          <target state="translated">関連するイベントベース。</target>
        </trans-unit>
        <trans-unit id="374444a94f64db04ab46e6f36b35b3af9d56122b" translate="yes" xml:space="preserve">
          <source>Associates a &lt;code&gt;key&lt;/code&gt; with a &lt;code&gt;value&lt;/code&gt;, overwriting a previous association if one exists.</source>
          <target state="translated">関連付け &lt;code&gt;key&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; 1が存在する場合は、以前の関連付けを上書きし、。</target>
        </trans-unit>
        <trans-unit id="e0d9f64c47ea42d90f316abd2a595de0ef60e1b2" translate="yes" xml:space="preserve">
          <source>Associates a named clipping path with the image. Only the areas drawn on by the clipping path will be modified as long as it remains in effect.</source>
          <target state="translated">名前付きのクリッピングパスを画像に関連付けます。クリッピングパスが有効である限り、クリッピングパスによって描かれた領域のみが変更されます。</target>
        </trans-unit>
        <trans-unit id="344ee9b67fa905db38fe4ff6485782100f3dda78" translate="yes" xml:space="preserve">
          <source>Associates all key-value &lt;code&gt;pairs&lt;/code&gt; of a &lt;a href=&quot;class.traversable&quot;&gt;traversable&lt;/a&gt; object or &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;class.traversable&quot;&gt;通過可能な&lt;/a&gt;オブジェクトまたは&lt;a href=&quot;language.types.array&quot;&gt;配列の&lt;/a&gt;すべてのキーと値の &lt;code&gt;pairs&lt;/code&gt; を関連付けます。</target>
        </trans-unit>
        <trans-unit id="c27968137562231414a29a11ba2a58c1c537d4b8" translate="yes" xml:space="preserve">
          <source>Associates all key-value &lt;code&gt;pairs&lt;/code&gt; of a &lt;a href=&quot;class.traversable&quot;&gt;traversable&lt;/a&gt; object or array.</source>
          <target state="translated">&lt;a href=&quot;class.traversable&quot;&gt;トラバース可能な&lt;/a&gt;オブジェクトまたは配列のすべてのキーと値の &lt;code&gt;pairs&lt;/code&gt; を関連付けます。</target>
        </trans-unit>
        <trans-unit id="b99ca8450f7a962b387d42777891f64550857030" translate="yes" xml:space="preserve">
          <source>Associates an artifact with the image. The difference between image properties and image artifacts is that properties are public and artifacts are private. This method is available if Imagick has been compiled against ImageMagick version 6.5.7 or newer.</source>
          <target state="translated">アーティファクトを画像に関連付けます。画像のプロパティと画像のアーティファクトの違いは、 プロパティがパブリックでアーティファクトがプライベートという点です。このメソッドは、Imagick を ImageMagick バージョン 6.5.7 以降でコンパイルした場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="4c9828549a33b72870b3c7b81b5502607e0f1dca" translate="yes" xml:space="preserve">
          <source>Associates data, or info, with the object currently pointed to by the iterator.</source>
          <target state="translated">データや情報を、イテレータが現在指し示しているオブジェクトに関連付けます。</target>
        </trans-unit>
        <trans-unit id="166b16292091fbc46d27cd1c99cbf6c9d27e47c3" translate="yes" xml:space="preserve">
          <source>Associates one or more options with the wand.</source>
          <target state="translated">1つ以上のオプションをワンドに関連付けます。</target>
        </trans-unit>
        <trans-unit id="45c5cfcba913a3dd1dff2e72bee92bc76fc85d35" translate="yes" xml:space="preserve">
          <source>Associates the &lt;code&gt;event_base&lt;/code&gt; with the &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">関連付け &lt;code&gt;event_base&lt;/code&gt; で &lt;code&gt;event&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="495b52a9efbff1015cd0c7a51d193f78a706cb1c" translate="yes" xml:space="preserve">
          <source>Associates the next image in the image list with an Gmagick object.</source>
          <target state="translated">画像リストの次の画像をGmagickオブジェクトに関連付けます。</target>
        </trans-unit>
        <trans-unit id="cd78f087801c46f3ef7808c1f0a3ca56b6b6cab2" translate="yes" xml:space="preserve">
          <source>Associates the next image in the image list with an Imagick object.</source>
          <target state="translated">画像一覧の次の画像を Imagick オブジェクトに関連付けます。</target>
        </trans-unit>
        <trans-unit id="887488be6bb33503047c83872f6ebef7678fc9ff" translate="yes" xml:space="preserve">
          <source>Associates the previous image in an image list with the Gmagick object.</source>
          <target state="translated">画像リストの前の画像をGmagickオブジェクトに関連付けます。</target>
        </trans-unit>
        <trans-unit id="ec6fc08eb4fabb771ce1793202ffe50363709890" translate="yes" xml:space="preserve">
          <source>Associating</source>
          <target state="translated">Associating</target>
        </trans-unit>
        <trans-unit id="b7d696bef2889daa816d6df6678040a467b6cfa9" translate="yes" xml:space="preserve">
          <source>Associative</source>
          <target state="translated">Associative</target>
        </trans-unit>
        <trans-unit id="e3e16c3f4f1b987fe2bc37e17653560d1b7cbb2f" translate="yes" xml:space="preserve">
          <source>Associative (&lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;) keys will be maintained, but numeric keys will be re-indexed.</source>
          <target state="translated">連想（&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;）キーは維持されますが、数値キーは再インデックスされます。</target>
        </trans-unit>
        <trans-unit id="e500df54eff494ed54306d4c433ff5ddbd8e9fe7" translate="yes" xml:space="preserve">
          <source>Associative (string) keys will be maintained, but numeric keys will be re-indexed.</source>
          <target state="translated">連想(文字列)キーは維持されますが、数値キーは再インデックス化されます。</target>
        </trans-unit>
        <trans-unit id="20cdb4a455dea5441e25389d055f579e80c22873" translate="yes" xml:space="preserve">
          <source>Associative &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; containing the keyword-value pairs for this locale</source>
          <target state="translated">このロケールのキーワードと値のペアを含む連想&lt;a href=&quot;language.types.array&quot;&gt;配列&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e755f1688a5fe496e11b0913d50e3a697ffb2674" translate="yes" xml:space="preserve">
          <source>Associative array containing crypt, compression, and message authentication code (MAC) method preferences for messages sent from client to server.</source>
          <target state="translated">クライアントからサーバに送信されるメッセージの暗号化、圧縮、およびメッセージ認証コード (MAC)メソッドの設定を含む連想配列。</target>
        </trans-unit>
        <trans-unit id="b265115ee2ba17f5807f52bbca9567f7118017c9" translate="yes" xml:space="preserve">
          <source>Associative array containing crypt, compression, and message authentication code (MAC) method preferences for messages sent from server to client.</source>
          <target state="translated">サーバからクライアントに送信されるメッセージの暗号化、圧縮、およびメッセージ認証コード (MAC)メソッドの設定を含む連想配列。</target>
        </trans-unit>
        <trans-unit id="2ddce46b2b7d7aed75776330ed00fe1af7197903" translate="yes" xml:space="preserve">
          <source>Associative array containing document IDs as keys and array of attribute values as values.</source>
          <target state="translated">ドキュメントIDをキー、属性値を値とする連想配列。</target>
        </trans-unit>
        <trans-unit id="148c8e290f2052c1b2381009a719ae7c8309d7cf" translate="yes" xml:space="preserve">
          <source>Associative array containing the additional headers (example: receipt).</source>
          <target state="translated">追加のヘッダを含む連想配列 (例:レシート)。</target>
        </trans-unit>
        <trans-unit id="a53c4ed2676fd3d3853b8583d1b231383b0e3424" translate="yes" xml:space="preserve">
          <source>Associative array containing the keyword-value pairs for this locale</source>
          <target state="translated">このロケールのキーワードと値のペアを含む連想配列</target>
        </trans-unit>
        <trans-unit id="fc95132016e760428f3a1f558f79777edc1bff03" translate="yes" xml:space="preserve">
          <source>Associative array of SSL context options One of &lt;a href=&quot;class.eventsslcontext#eventsslcontext.constants&quot;&gt; &lt;code&gt;EventSslContext::OPT_*&lt;/code&gt; constants&lt;/a&gt; .</source>
          <target state="translated">SSLコンテキストオプションの連想配列&lt;a href=&quot;class.eventsslcontext#eventsslcontext.constants&quot;&gt; &lt;code&gt;EventSslContext::OPT_*&lt;/code&gt; &lt;/a&gt;定数の1つ。</target>
        </trans-unit>
        <trans-unit id="650a04b079dc614141cde117feb62b02307a8641" translate="yes" xml:space="preserve">
          <source>Associative array of SSL context options One of &lt;a href=&quot;class.eventsslcontext#eventsslcontext.constants&quot;&gt; &lt;em&gt;EventSslContext::OPT_*&lt;/em&gt; constants&lt;/a&gt; .</source>
          <target state="translated">SSLコンテキストオプションの連想配列&lt;a href=&quot;class.eventsslcontext#eventsslcontext.constants&quot;&gt;&lt;em&gt;EventSslContext :: OPT_ *&lt;/em&gt;&lt;/a&gt;定数の 1つ。 &lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3f253a48cf86eda7f4ab77f2ba7e62ec82c0a82" translate="yes" xml:space="preserve">
          <source>Associative array of additional highlighting options (see below).</source>
          <target state="translated">追加の強調表示オプシ ョ ンの連想配列 (下記参照)。</target>
        </trans-unit>
        <trans-unit id="8a2ffbb0c59b84e0d345c3705bc9e017d0e6c2cd" translate="yes" xml:space="preserve">
          <source>Associative array of attributes to assign to this public key. Refer to ietf-secsh-publickey-subsystem for a list of supported attributes. To mark an attribute as mandatory, precede its name with an asterisk. If the server is unable to support an attribute marked mandatory, it will abort the add process.</source>
          <target state="translated">この公開鍵に割り当てる属性の連想配列。サポートされている属性のリストについては、ietf-secsh-publickey-subsystem を参照してください。属性を必須属性としてマークするには、その名前の前にアスタリスクを付けます。必須とマークされた属性をサポートできない場合、サーバは追加処理を中止します。</target>
        </trans-unit>
        <trans-unit id="2e3ff038cf5ca18f5bf45f764c86d882bd1de42e" translate="yes" xml:space="preserve">
          <source>Associative array of field names and field weights.</source>
          <target state="translated">フィールド名とフィールド重みの連想配列。</target>
        </trans-unit>
        <trans-unit id="c58a1a78fb5e3f222d43b50c329c56ab186c11b4" translate="yes" xml:space="preserve">
          <source>Associative array of keys and values.</source>
          <target state="translated">キーと値の連想配列。</target>
        </trans-unit>
        <trans-unit id="e0b06b05ea2c77e138a5cff31e48bbf6a2347485" translate="yes" xml:space="preserve">
          <source>Associative array of options or bitwise disjunction of flags. If filter accepts options, flags can be provided in &quot;flags&quot; field of array.</source>
          <target state="translated">オプションの連想配列、あるいはフラグのビット単位の論理和。フィルタがオプションを受け付ける場合は、配列の &quot;flags&quot; フィールドにフラグを指定します。</target>
        </trans-unit>
        <trans-unit id="16e1732c8b48fc6127882d97d3439bf7f0caff1b" translate="yes" xml:space="preserve">
          <source>Associative array of options or bitwise disjunction of flags. If filter accepts options, flags can be provided in &quot;flags&quot; field of array. For the &quot;callback&quot; filter, &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; type should be passed. The callback must accept one argument, the value to be filtered, and return the value after filtering/sanitizing it.</source>
          <target state="translated">オプションの連想配列またはフラグのビット単位の分離。フィルターがオプションを受け入れる場合、フラグを配列の「フラグ」フィールドに指定できます。「コールバック」フィルターの場合、&lt;a href=&quot;language.types.callable&quot;&gt;呼び出し可能な&lt;/a&gt;タイプを渡す必要があります。コールバックは1つの引数、つまりフィルタリングされる値を受け入れ、フィルタリング/サニタイズ後に値を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="d20b5a26a1cdf631954b50a5206246dff93d9c8a" translate="yes" xml:space="preserve">
          <source>Associativity</source>
          <target state="translated">Associativity</target>
        </trans-unit>
        <trans-unit id="b920a434538bc9c1f45fd5e9671af66304e4a95e" translate="yes" xml:space="preserve">
          <source>Assuming &quot;bjori&quot; executes this script</source>
          <target state="translated">bjori &quot;がこのスクリプトを実行すると仮定すると</target>
        </trans-unit>
        <trans-unit id="b3811c12641c636db22fe6b8471784ec31a29a74" translate="yes" xml:space="preserve">
          <source>Assuming that this phar is at &lt;code&gt;/path/to/myphar.phar&lt;/code&gt; and it contains &lt;code&gt;file.php&lt;/code&gt; and &lt;code&gt;file2.txt&lt;/code&gt;, if &lt;code&gt;file.php&lt;/code&gt; contains this code:</source>
          <target state="translated">このPharにはであると仮定すると、 &lt;code&gt;/path/to/myphar.phar&lt;/code&gt; とそれに含まれる &lt;code&gt;file.php&lt;/code&gt; と &lt;code&gt;file2.txt&lt;/code&gt; すれば、 &lt;code&gt;file.php&lt;/code&gt; はこのコードが含まれています。</target>
        </trans-unit>
        <trans-unit id="c00588eae0cc6fb3d1d0b4cd8ff91f43b81ce043" translate="yes" xml:space="preserve">
          <source>Assuming that this phar is at &lt;em&gt;/path/to/myphar.phar&lt;/em&gt; and it contains &lt;em&gt;file.php&lt;/em&gt; and &lt;em&gt;file2.txt&lt;/em&gt;, if &lt;em&gt;file.php&lt;/em&gt; contains this code:</source>
          <target state="translated">このPharにはであると仮定すると、&lt;em&gt;もし/path/to/myphar.phar&lt;/em&gt;とそれに含まれる&lt;em&gt;file.php&lt;/em&gt;と&lt;em&gt;FILE2.TXTを&lt;/em&gt;すれば、&lt;em&gt;file.phpは&lt;/em&gt;このコードが含まれています。</target>
        </trans-unit>
        <trans-unit id="18888678f2309c4c00a32f371aaf24204fe393d2" translate="yes" xml:space="preserve">
          <source>Assuming the &quot;name&quot; cookie has been set earlier</source>
          <target state="translated">名前」クッキーが先に設定されていると仮定して</target>
        </trans-unit>
        <trans-unit id="2e5e916c1d8fb07d81eac28d296e94c6f730b013" translate="yes" xml:space="preserve">
          <source>Assuming the following local name space is registered:</source>
          <target state="translated">以下のローカルネームスペースが登録されていると仮定します。</target>
        </trans-unit>
        <trans-unit id="6c8f1e97f337dba0abeee2b93c0488862d4f95b9" translate="yes" xml:space="preserve">
          <source>Assuming the following local name space registerd:</source>
          <target state="translated">以下のようなローカルネームスペースが登録されていると仮定します。</target>
        </trans-unit>
        <trans-unit id="34bb5f9941efaed9812f24864dd87283b044a047" translate="yes" xml:space="preserve">
          <source>Assuming the user POSTed name=Hannes</source>
          <target state="translated">ユーザーがPOSTed name=Hannesを仮定すると</target>
        </trans-unit>
        <trans-unit id="c40c7a8bf1954b166116c004c46267ad4140054c" translate="yes" xml:space="preserve">
          <source>Assuming the user entered http://example.com/?name=Hannes</source>
          <target state="translated">ユーザーが http://example.com/?name=Hannes と入力したと仮定すると</target>
        </trans-unit>
        <trans-unit id="143edc5274f5627d36f1b6a13b28edd1b19bb717" translate="yes" xml:space="preserve">
          <source>Assuming there are no argument errors, returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; iif the calendars are equivalent except possibly for their set time.</source>
          <target state="translated">引数エラーがないと仮定して、設定された時間を除いてカレンダーが同等である場合に&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; を&lt;/strong&gt;返します。</target>
        </trans-unit>
        <trans-unit id="fa6ae2bf9ed71d5ad8762d8a0cc336cd2cd0238d" translate="yes" xml:space="preserve">
          <source>Assuming there are no argument errors, returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; iif the field is set.</source>
          <target state="translated">引数エラーがないと仮定して、フィールドが設定されている場合は&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; を&lt;/strong&gt;返します。</target>
        </trans-unit>
        <trans-unit id="8fc608916dff45bca83d94f839194c7173cfbbbb" translate="yes" xml:space="preserve">
          <source>Assuming there are no argument errors, returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the calendars are equivalent except possibly for their set time.</source>
          <target state="translated">引数エラーがないと仮定すると、カレンダーが設定された時刻を除いて同等で&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;場合は&lt;strong&gt;trueを&lt;/strong&gt;返し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="dfd5ae38e5bfad5d123fc9ea590472854511287c" translate="yes" xml:space="preserve">
          <source>Assuming there are no argument errors, returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the field is set.</source>
          <target state="translated">引数エラーがないと仮定すると、フィールドが設定されている場合は&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; を&lt;/strong&gt;返し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e6d2c550c3e756043f358b2da04f22716bbd32b9" translate="yes" xml:space="preserve">
          <source>Assuming you're familiar with the concept of functions (if you're not, take a look at the chapter about &lt;a href=&quot;https://secure.php.net/manual/en/language.functions.php&quot;&gt;functions&lt;/a&gt;), you'd assume that typing &lt;em&gt;$c = foo()&lt;/em&gt; is essentially just like writing &lt;em&gt;$c = 5&lt;/em&gt;, and you're right. Functions are expressions with the value of their return value. Since &lt;em&gt;foo()&lt;/em&gt; returns 5, the value of the expression '&lt;em&gt;foo()&lt;/em&gt;' is 5. Usually functions don't just return a static value but compute something.</source>
          <target state="translated">あなたが関数の概念（あなたがいないのであれば、程度の章を見て取るに精通していると仮定すると、&lt;a href=&quot;https://secure.php.net/manual/en/language.functions.php&quot;&gt;関数を&lt;/a&gt;）、あなたはタイピングと仮定したい&lt;em&gt;$ C = fooが（） &lt;/em&gt;、本質的にちょうど書きたいです&lt;em&gt;$ C = 5を&lt;/em&gt;、そしてあなたが正しい。関数は、戻り値の値を持つ式です。&lt;em&gt;foo（）&lt;/em&gt;は5を返すため、式 ' &lt;em&gt;foo（）&lt;/em&gt; 'の値は5です。通常、関数は静的な値を返すだけでなく、何かを計算します。</target>
        </trans-unit>
        <trans-unit id="48022988893d88e86d38b0cc4327eed58f2ab939" translate="yes" xml:space="preserve">
          <source>Assuming you're familiar with the concept of functions (if you're not, take a look at the chapter about &lt;a href=&quot;https://www.php.net/manual/en/language.functions.php&quot;&gt;functions&lt;/a&gt;), you'd assume that typing &lt;code&gt;$c = foo()&lt;/code&gt; is essentially just like writing &lt;code&gt;$c = 5&lt;/code&gt;, and you're right. Functions are expressions with the value of their return value. Since &lt;code&gt;foo()&lt;/code&gt; returns 5, the value of the expression '&lt;code&gt;foo()&lt;/code&gt;' is 5. Usually functions don't just return a static value but compute something.</source>
          <target state="translated">あなたが関数の概念（あなたがいないのであれば、程度の章を見て取るに精通していると仮定すると、&lt;a href=&quot;https://www.php.net/manual/en/language.functions.php&quot;&gt;関数を&lt;/a&gt;）、あなたはタイピングと仮定したい &lt;code&gt;$c = foo()&lt;/code&gt; 、本質的にちょうど書きたいです &lt;code&gt;$c = 5&lt;/code&gt; 、そしてあなたが正しい。関数は、戻り値の値を持つ式です。 &lt;code&gt;foo()&lt;/code&gt; は5を返すため、式 ' &lt;code&gt;foo()&lt;/code&gt; 'の値は5です。通常、関数は静的な値を返すだけでなく、何かを計算します。</target>
        </trans-unit>
        <trans-unit id="eafacaa14b2ffe9b23cc2937d25f083e9b900145" translate="yes" xml:space="preserve">
          <source>Astronomical twilight: the point at which the sun ends being the source of any illumination.</source>
          <target state="translated">天文黄昏:太陽が任意の照明の源であることを終了する時点でポイント。</target>
        </trans-unit>
        <trans-unit id="d70c0a8e973643d84fd0d9f54cf17f31c06ff136" translate="yes" xml:space="preserve">
          <source>Astronomical twilight: the point at which the sun starts being the source of any illumination.</source>
          <target state="translated">天体の黄昏:太陽が任意の照明の源であることを開始する時点でのポイント。</target>
        </trans-unit>
        <trans-unit id="2b77dd5a9f3c934defb277cc8f53da1e9c229158" translate="yes" xml:space="preserve">
          <source>At most 15 events allowed.</source>
          <target state="translated">最大で15のイベントが許可されています。</target>
        </trans-unit>
        <trans-unit id="a1cdb6629b8e3aa90f9cb20e8b187744ef8e2ee8" translate="yes" xml:space="preserve">
          <source>At some point in the future, the PHP team might want to add another constant or keyword, or a constant in other code may interfere. For example, it is already wrong to use the words &lt;code&gt;empty&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; this way, since they are &lt;a href=&quot;https://www.php.net/manual/en/reserved.php&quot;&gt;reserved keywords&lt;/a&gt;.</source>
          <target state="translated">将来のある時点で、PHPチームは別の定数またはキーワードを追加したいと思うかもしれません。あるいは、他のコードの定数が干渉するかもしれません。たとえば、 &lt;code&gt;empty&lt;/code&gt; の単語と &lt;code&gt;default&lt;/code&gt; の単語をこのように使用することは、&lt;a href=&quot;https://www.php.net/manual/en/reserved.php&quot;&gt;予約&lt;/a&gt;語であるため、すでに間違っています。</target>
        </trans-unit>
        <trans-unit id="436f3de5697e06e31d116f566ae7c286e1137b7f" translate="yes" xml:space="preserve">
          <source>At some point in the future, the PHP team might want to add another constant or keyword, or a constant in other code may interfere. For example, it is already wrong to use the words &lt;em&gt;empty&lt;/em&gt; and &lt;em&gt;default&lt;/em&gt; this way, since they are &lt;a href=&quot;https://secure.php.net/manual/en/reserved.php&quot;&gt;reserved keywords&lt;/a&gt;.</source>
          <target state="translated">将来のある時点で、PHPチームが別の定数またはキーワードを追加したい場合や、他のコードの定数が干渉する可能性があります。例えば、言葉を使用することがすでに間違って&lt;em&gt;空に&lt;/em&gt;し、&lt;em&gt;デフォルト&lt;/em&gt;それらがされているので、このように&lt;a href=&quot;https://secure.php.net/manual/en/reserved.php&quot;&gt;キーワードを予約します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de0f6e04ec514294fb5b12d0191c48a49e66efd8" translate="yes" xml:space="preserve">
          <source>At startup, PHP tries to enable the VT100 feature of the &lt;strong&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/strong&gt;/&lt;strong&gt;&lt;code&gt;STDERR&lt;/code&gt;&lt;/strong&gt; streams. By the way, if those streams are redirected to a file, the VT100 features may not be enabled.</source>
          <target state="translated">起動時に、PHPは&lt;strong&gt; &lt;code&gt;STDOUT&lt;/code&gt; &lt;/strong&gt; / &lt;strong&gt; &lt;code&gt;STDERR&lt;/code&gt; &lt;/strong&gt;ストリームのVT100機能を有効にしようとします。ちなみに、これらのストリームがファイルにリダイレクトされると、VT100機能が有効にならない場合があります。</target>
        </trans-unit>
        <trans-unit id="e107debea9e38ad0a9777b105f6b753e662e2604" translate="yes" xml:space="preserve">
          <source>At the end of each iteration, &lt;var&gt;&lt;var&gt;expr3&lt;/var&gt;&lt;/var&gt; is evaluated (executed).</source>
          <target state="translated">各反復の最後に、 &lt;var&gt;&lt;var&gt;expr3&lt;/var&gt;&lt;/var&gt; が評価（実行）されます。</target>
        </trans-unit>
        <trans-unit id="4189ab6e5a64019d9e910e38457caef233807003" translate="yes" xml:space="preserve">
          <source>At the end of each iteration, &lt;var&gt;expr3&lt;/var&gt; is evaluated (executed).</source>
          <target state="translated">各反復の終わりに、 &lt;var&gt;expr3&lt;/var&gt; が評価（実行）されます。</target>
        </trans-unit>
        <trans-unit id="3968ce1f85f1f8f4f75ea65a472ebf23b1a48b9b" translate="yes" xml:space="preserve">
          <source>At this point two variables have been defined and stored in the PHP symbol tree: &lt;var&gt;$a&lt;/var&gt; with contents &quot;hello&quot; and &lt;var&gt;$hello&lt;/var&gt; with contents &quot;world&quot;. Therefore, this statement:</source>
          <target state="translated">この時点で、2つの変数が定義されてPHPシンボルツリーに格納されています。コンテンツが「hello」の &lt;var&gt;$a&lt;/var&gt; とコンテンツが「world」の &lt;var&gt;$hello&lt;/var&gt; です。したがって、このステートメント：</target>
        </trans-unit>
        <trans-unit id="fcf4ce4d9e00a712abc2d80ed1d23c53a1934f5d" translate="yes" xml:space="preserve">
          <source>At this point two variables have been defined and stored in the PHP symbol tree: &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; with contents &quot;hello&quot; and &lt;var&gt;&lt;var&gt;$hello&lt;/var&gt;&lt;/var&gt; with contents &quot;world&quot;. Therefore, this statement:</source>
          <target state="translated">この時点で、2つの変数が定義され、PHPシンボルツリーに格納されています。内容が「hello」の &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; および内容が「world」の &lt;var&gt;&lt;var&gt;$hello&lt;/var&gt;&lt;/var&gt; です。したがって、このステートメント：</target>
        </trans-unit>
        <trans-unit id="eb648377546894695caa0334a15bff88450b083d" translate="yes" xml:space="preserve">
          <source>At this point, you can go about using &lt;code&gt;$xml-&amp;gt;body&lt;/code&gt; and such.</source>
          <target state="translated">この時点で、 &lt;code&gt;$xml-&amp;gt;body&lt;/code&gt; などを使用することができます。</target>
        </trans-unit>
        <trans-unit id="1a0a98e41a7026b17541d839d02b80c39fa7fce4" translate="yes" xml:space="preserve">
          <source>At this point, you can go about using &lt;code&gt;$xml-&amp;gt;title&lt;/code&gt; and any other elements.</source>
          <target state="translated">この時点で、 &lt;code&gt;$xml-&amp;gt;title&lt;/code&gt; およびその他の要素を使用することができます。</target>
        </trans-unit>
        <trans-unit id="9f288826e428603628ebffc048a34b71b5b766ea" translate="yes" xml:space="preserve">
          <source>At this point, you can go about using &lt;em&gt;$xml-&amp;gt;body&lt;/em&gt; and such.</source>
          <target state="translated">この時点で、&lt;em&gt;$ xml-&amp;gt; body&lt;/em&gt;などを使用できます。</target>
        </trans-unit>
        <trans-unit id="72458d0c7cd7205f3f43497e70e935e1b28b1964" translate="yes" xml:space="preserve">
          <source>At this point, you can go about using &lt;em&gt;$xml-&amp;gt;title&lt;/em&gt; and any other elements.</source>
          <target state="translated">この時点で、&lt;em&gt;$ xml-&amp;gt; title&lt;/em&gt;およびその他の要素を使用できます。</target>
        </trans-unit>
        <trans-unit id="70b23ebbacd174b20469189cfd436dab3063e959" translate="yes" xml:space="preserve">
          <source>Atlantic time zones.</source>
          <target state="translated">大西洋の時間帯。</target>
        </trans-unit>
        <trans-unit id="813d6410e499ccb0aa4a815f4f1783c27fa97cf5" translate="yes" xml:space="preserve">
          <source>Atom (example: 2005-08-15T15:52:01+00:00)</source>
          <target state="translated">アトム(例:2005-08-15T15:52:01+00:00</target>
        </trans-unit>
        <trans-unit id="b490cfdfc99a22abc8d8266e7b1c52f163d48d75" translate="yes" xml:space="preserve">
          <source>Atomically attempts to find &lt;code&gt;key&lt;/code&gt; in the cache, if it cannot be found &lt;code&gt;generator&lt;/code&gt; is called, passing &lt;code&gt;key&lt;/code&gt; as the only argument. The return value of the call is then cached with the optionally specified &lt;code&gt;ttl&lt;/code&gt;, and returned.</source>
          <target state="translated">キャッシュ内で &lt;code&gt;key&lt;/code&gt; 原子的に検索しようとします。見つからない場合は、 &lt;code&gt;generator&lt;/code&gt; が呼び出され、唯一の引数として &lt;code&gt;key&lt;/code&gt; を渡します。次に、呼び出しの戻り値は、オプションで指定された &lt;code&gt;ttl&lt;/code&gt; でキャッシュされ、返されます。</target>
        </trans-unit>
        <trans-unit id="0935213897cecd3d9fe9e54f3f000267c60c6aec" translate="yes" xml:space="preserve">
          <source>Attach another kernel to this kernel to allow them to both be applied in a single morphology or filter function. Returns the new combined kernel.</source>
          <target state="translated">このカーネルに別のカーネルを追加して、両方を単一のモーフォロジーやフィルタ関数で適用できるようにします。新しい結合されたカーネルを返します。</target>
        </trans-unit>
        <trans-unit id="7f6a5d76a4882bf743bb7be9cf0bd2457f1c0c3a" translate="yes" xml:space="preserve">
          <source>Attaches a binary attribute to the current RADIUS request.</source>
          <target state="translated">現在のRADIUSリクエストにバイナリ属性を付加します。</target>
        </trans-unit>
        <trans-unit id="790bad3fcb60c117fcf70dbeadaea4bcc7420057" translate="yes" xml:space="preserve">
          <source>Attaches a string attribute to the current RADIUS request. In general, &lt;a href=&quot;function.radius-put-attr&quot;&gt;radius_put_attr()&lt;/a&gt; is a more useful function for attaching string attributes, as it is binary safe.</source>
          <target state="translated">文字列属性を現在のRADIUS要求に添付します。一般に、&lt;a href=&quot;function.radius-put-attr&quot;&gt;radius_put_attr（）&lt;/a&gt;はバイナリセーフであるため、文字列属性をアタッチするためのより便利な関数です。</target>
        </trans-unit>
        <trans-unit id="2a40c7ba2625e3f2a19d31a71bc46aceb05dbc04" translate="yes" xml:space="preserve">
          <source>Attaches a vendor specific binary attribute to the current RADIUS request.</source>
          <target state="translated">ベンダー固有のバイナリ属性を現在の RADIUS 要求にアタッチします。</target>
        </trans-unit>
        <trans-unit id="fea22759eeebd87b5d055f6c390b85db917344a5" translate="yes" xml:space="preserve">
          <source>Attaches a vendor specific integer attribute to the current RADIUS request.</source>
          <target state="translated">ベンダー固有の整数属性を現在の RADIUS 要求にアタッチします。</target>
        </trans-unit>
        <trans-unit id="1b2ee8386bbc0f3be6dddb7409ca68096f188d1e" translate="yes" xml:space="preserve">
          <source>Attaches a vendor specific string attribute to the current RADIUS request. In general, &lt;a href=&quot;function.radius-put-vendor-attr&quot;&gt;radius_put_vendor_attr()&lt;/a&gt; is a more useful function for attaching string attributes, as it is binary safe.</source>
          <target state="translated">ベンダー固有の文字列属性を現在のRADIUS要求に添付します。一般に、&lt;a href=&quot;function.radius-put-vendor-attr&quot;&gt;radius_put_vendor_attr（）&lt;/a&gt;はバイナリセーフであるため、文字列属性をアタッチするためのより便利な関数です。</target>
        </trans-unit>
        <trans-unit id="4fbfe2b6c124f064fd233e4e07a0de4eb050dbff" translate="yes" xml:space="preserve">
          <source>Attaches an &lt;a href=&quot;class.splobserver&quot;&gt;SplObserver&lt;/a&gt; so that it can be notified of updates.</source>
          <target state="translated">&lt;a href=&quot;class.splobserver&quot;&gt;SplObserverを&lt;/a&gt;アタッチして、更新を通知できるようにします。</target>
        </trans-unit>
        <trans-unit id="3b624559a37fd920b2c0822e1b386016f86442e6" translate="yes" xml:space="preserve">
          <source>Attaches an IP address attribute to the current RADIUS request.</source>
          <target state="translated">現在のRADIUSリクエストにIPアドレス属性をアタッチします。</target>
        </trans-unit>
        <trans-unit id="875d907c370167469d13f4859ce04152c2d8e478" translate="yes" xml:space="preserve">
          <source>Attaches an IP address vendor specific attribute to the current RADIUS request.</source>
          <target state="translated">現在のRADIUSリクエストにIPアドレスのベンダー固有の属性を追加します。</target>
        </trans-unit>
        <trans-unit id="0a9c092f98b256916bc9c0cfb09274a2385b9147" translate="yes" xml:space="preserve">
          <source>Attaches an integer attribute to the current RADIUS request.</source>
          <target state="translated">現在のRADIUSリクエストに整数属性を追加します。</target>
        </trans-unit>
        <trans-unit id="4ccfd832dc7bf5ee4b07d422f485b82b5de484b3" translate="yes" xml:space="preserve">
          <source>Attaches iterator information.</source>
          <target state="translated">イテレータ情報をアタッチします。</target>
        </trans-unit>
        <trans-unit id="2e8e3c76bf0d46aba99b78dd650c0961aa92530d" translate="yes" xml:space="preserve">
          <source>Attempt &quot;none&quot; authentication which usually will (and should) fail. As part of the failure, this function will return an array of accepted authentication methods.</source>
          <target state="translated">none&quot; 認証を試みますが、これは通常失敗します (そして失敗しなければなりません)。失敗の一部として、この関数は受け入れ可能な認証方法の配列を返します。</target>
        </trans-unit>
        <trans-unit id="2b3366f904fdf161fe00c948c307896183f4d4ed" translate="yes" xml:space="preserve">
          <source>Attempt to create ephemeral node on a local session.</source>
          <target state="translated">ローカルセッション上にエフェメラルノードを作成しようとしました。</target>
        </trans-unit>
        <trans-unit id="af67642cea8ae5b622274c593f3624d8e7ebcc53" translate="yes" xml:space="preserve">
          <source>Attempt to lock the Mutex for the caller without blocking if the Mutex is owned (locked) by another Thread.</source>
          <target state="translated">Mutexが他のスレッドに所有されている(ロックされている)場合、ブロックせずに発呼側のMutexをロックしようとする。</target>
        </trans-unit>
        <trans-unit id="84dc0d21b125883b387d6feb938ff6d32c2d4bbe" translate="yes" xml:space="preserve">
          <source>Attempt to lock the Mutex for the caller.</source>
          <target state="translated">発信者のミューテックスをロックしようとします。</target>
        </trans-unit>
        <trans-unit id="d15c2b37a1ebb3d4bae95ccc4fcd3a0e642ae597" translate="yes" xml:space="preserve">
          <source>Attempt to resize destination to fit distorted source</source>
          <target state="translated">歪んだソースに合わせて宛先のサイズを変更しようとする</target>
        </trans-unit>
        <trans-unit id="edb304d70a6f6e80283372f12a4a77f66d8ba7c1" translate="yes" xml:space="preserve">
          <source>Attempting to access an array key which has not been defined is the same as accessing any other undefined variable: an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt;-level error message will be issued, and the result will be &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">定義されていない配列キーにアクセスしようとすることは、他の未定義の変数にアクセスすることと同じです&lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt;レベルのエラーメッセージが発行され、結果は&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;になり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5a05246f27fd63b2454f7b76b2124b25edda1ff5" translate="yes" xml:space="preserve">
          <source>Attempting to access an array key which has not been defined is the same as accessing any other undefined variable: an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt;-level error message will be issued, and the result will be &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">定義されていない配列キーにアクセスしようとすることは、他の未定義の変数にアクセスすることと同じです&lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt;レベルのエラーメッセージが発行され、結果は&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;になり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5ebe2946da0893474c14cd019b774d198d5bddda" translate="yes" xml:space="preserve">
          <source>Attempting to throw an exception from a destructor (called in the time of script termination) causes a fatal error.</source>
          <target state="translated">(スクリプト終了時に呼び出される)デストラクタから例外を投げようとすると、致命的なエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="c6d980e12bfc515a10f012b05210198a13995f27" translate="yes" xml:space="preserve">
          <source>Attempting to use a combination of the string and width specifiers with character sets that require more than one byte per character may result in unexpected results</source>
          <target state="translated">文字列指定子と幅指定子の組み合わせを、1文字につき1バイト以上必要な文字セットで使おうとすると、予期しない結果になることがあります。</target>
        </trans-unit>
        <trans-unit id="52bb7be9f9dc86d586b31f436b3a20b38b5e0bf0" translate="yes" xml:space="preserve">
          <source>Attempting to use a position specifier greater than &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt; will result in &lt;strong&gt;sprintf()&lt;/strong&gt; generating warnings.</source>
          <target state="translated">より位置指定子大きい使用しよう&lt;strong&gt; &lt;code&gt;PHP_INT_MAX&lt;/code&gt; こと&lt;/strong&gt;になります&lt;strong&gt;）（sprintfの&lt;/strong&gt;警告を生成します。</target>
        </trans-unit>
        <trans-unit id="ad60f0b93ad2394c3b513c383829e8586f796d11" translate="yes" xml:space="preserve">
          <source>Attempts to change the group of the file &lt;code&gt;filename&lt;/code&gt; to &lt;code&gt;group&lt;/code&gt;.</source>
          <target state="translated">ファイルのグループ変更しようとする &lt;code&gt;filename&lt;/code&gt; する &lt;code&gt;group&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="152a9d5ff1225e2dba36d59e297dd1664693dbd4" translate="yes" xml:space="preserve">
          <source>Attempts to change the group of the symlink &lt;code&gt;filename&lt;/code&gt; to &lt;code&gt;group&lt;/code&gt;.</source>
          <target state="translated">シンボリックリンクのグループ変更しようとする &lt;code&gt;filename&lt;/code&gt; する &lt;code&gt;group&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb41c3804834b890b9b26d2c67b0a0c73fabb207" translate="yes" xml:space="preserve">
          <source>Attempts to change the mode of the specified file to that given in &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">指定されたファイルのモードをmodeで指定されたものに変更しようとし &lt;code&gt;mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e93accf04479ace620d6feeb3749fa71221d36b0" translate="yes" xml:space="preserve">
          <source>Attempts to change the owner of the file &lt;code&gt;filename&lt;/code&gt; to user &lt;code&gt;user&lt;/code&gt;. Only the superuser may change the owner of a file.</source>
          <target state="translated">ファイル &lt;code&gt;filename&lt;/code&gt; の所有者をユーザー &lt;code&gt;user&lt;/code&gt; に変更しようとします。スーパーユーザーだけがファイルの所有者を変更できます。</target>
        </trans-unit>
        <trans-unit id="24a1ab7fbdbd5fba4a02eb24d26892808dd9f64e" translate="yes" xml:space="preserve">
          <source>Attempts to change the owner of the symlink &lt;code&gt;filename&lt;/code&gt; to user &lt;code&gt;user&lt;/code&gt;.</source>
          <target state="translated">シンボリックリンクの &lt;code&gt;filename&lt;/code&gt; 所有者をユーザー &lt;code&gt;user&lt;/code&gt; に変更しようとします。</target>
        </trans-unit>
        <trans-unit id="f819255c5f838392963857bbacf32523411f6d6d" translate="yes" xml:space="preserve">
          <source>Attempts to create the directory specified by pathname.</source>
          <target state="translated">パス名で指定されたディレクトリの作成を試みます。</target>
        </trans-unit>
        <trans-unit id="f39f01c25e72aa10e4728220d12a186e6acebff7" translate="yes" xml:space="preserve">
          <source>Attempts to determine the capabilities of the user's browser, by looking up the browser's information in the &lt;var&gt;browscap.ini&lt;/var&gt; file.</source>
          <target state="translated">&lt;var&gt;browscap.ini&lt;/var&gt; ファイルでブラウザーの情報を検索して、ユーザーのブラウザーの機能を判別しようとします。</target>
        </trans-unit>
        <trans-unit id="6611434b90ad0e910db83dbe66f2a24d7ab1b0f9" translate="yes" xml:space="preserve">
          <source>Attempts to load an SQLite extension library.</source>
          <target state="translated">SQLite 拡張ライブラリをロードしようとします。</target>
        </trans-unit>
        <trans-unit id="26d72c53acfcb2208a85f21e6b0f83f8559c3690" translate="yes" xml:space="preserve">
          <source>Attempts to perform a reconfiguration operation when reconfiguration feature is disabled.</source>
          <target state="translated">再構成機能が無効な場合、再構成操作を試みます。</target>
        </trans-unit>
        <trans-unit id="3cf6cb2ca0c64aad243585b3bc95d1f57dc93a95" translate="yes" xml:space="preserve">
          <source>Attempts to remove the directory named by &lt;code&gt;dirname&lt;/code&gt;. The directory must be empty, and the relevant permissions must permit this. A &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; level error will be generated on failure.</source>
          <target state="translated">&lt;code&gt;dirname&lt;/code&gt; で指定されたディレクトリの削除を試みます。ディレクトリは空である必要があり、関連する権限はこれを許可する必要があります。&lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; の&lt;/strong&gt;レベルのエラーが失敗した場合に生成されます。</target>
        </trans-unit>
        <trans-unit id="32b65ab8b687cf4f256c4f2313be53b7062442e6" translate="yes" xml:space="preserve">
          <source>Attempts to rename &lt;code&gt;oldname&lt;/code&gt; to &lt;code&gt;newname&lt;/code&gt;, moving it between directories if necessary. If renaming a file and &lt;code&gt;newname&lt;/code&gt; exists, it will be overwritten. If renaming a directory and &lt;code&gt;newname&lt;/code&gt; exists, this function will emit a warning.</source>
          <target state="translated">&lt;code&gt;oldname&lt;/code&gt; の名前を &lt;code&gt;newname&lt;/code&gt; に変更し、必要に応じてディレクトリ間を移動します。ファイルの名前を変更し、 &lt;code&gt;newname&lt;/code&gt; 名前が存在する場合は、上書きされます。ディレクトリの名前を変更して &lt;code&gt;newname&lt;/code&gt; が存在する場合、この関数は警告を発します。</target>
        </trans-unit>
        <trans-unit id="a370a9db8bfd27e7498aa38b20e2c61176befed6" translate="yes" xml:space="preserve">
          <source>Attempts to set the access and modification times of the file named in the &lt;code&gt;filename&lt;/code&gt; parameter to the value given in &lt;code&gt;time&lt;/code&gt;. Note that the access time is always modified, regardless of the number of parameters.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; パラメータで指定されたファイルのアクセス時刻と変更時刻を、 &lt;code&gt;time&lt;/code&gt; で指定された値に設定しようとします。パラメータの数に関係なく、アクセス時間は常に変更されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ab5d56cbc1918ca9cc127007073f195ba495aae3" translate="yes" xml:space="preserve">
          <source>Attempts to unlock the Mutex for the caller, optionally destroying the Mutex handle. The calling thread should own the Mutex at the time of the call.</source>
          <target state="translated">呼び出し元のMutexのロック解除を試み、オプションでMutexハンドルを破棄します。呼び出し元のスレッドは、呼び出し時にMutexを所有している必要があります。</target>
        </trans-unit>
        <trans-unit id="cf3c5f7af63e40195cf9f1d07d9fcef3b59c3156" translate="yes" xml:space="preserve">
          <source>Attempts to use &lt;strong&gt;&lt;code&gt;IMG_CROP_TRANSPARENT&lt;/code&gt;&lt;/strong&gt; and if it fails it falls back to &lt;strong&gt;&lt;code&gt;IMG_CROP_SIDES&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;IMG_CROP_TRANSPARENT&lt;/code&gt; の&lt;/strong&gt;使用を試み、失敗した場合は&lt;strong&gt;IMG_CROP_SIDES&lt;/strong&gt;にフォールバックし&lt;strong&gt; &lt;code&gt;IMG_CROP_SIDES&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="b45f10d5d87c1919696ccf26d9d82988ae154f1e" translate="yes" xml:space="preserve">
          <source>Attribute names and their arguments are resolved to a class and the arguments are passed to its constructor, when an instance of the attribute is requested through the Reflection API. As such a class should be introduced for each attribute.</source>
          <target state="translated">属性名とその引数はクラスに解決され、Reflection API を通じて属性のインスタンスが要求されると、その引数はそのコンストラクタに渡されます。このように、各属性に対してクラスを導入する必要があります。</target>
        </trans-unit>
        <trans-unit id="b57a0d8e805c7057a2b772a838f522edba13e4d2" translate="yes" xml:space="preserve">
          <source>Attribute node</source>
          <target state="translated">属性ノード</target>
        </trans-unit>
        <trans-unit id="9e6ee50064162c5da001c6a27a80e9b23826dd3e" translate="yes" xml:space="preserve">
          <source>Attribute specifier - one of the &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformatattribute&quot;&gt; numeric attribute&lt;/a&gt; constants.</source>
          <target state="translated">属性指定子- &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformatattribute&quot;&gt;数値属性&lt;/a&gt;定数の1つ。</target>
        </trans-unit>
        <trans-unit id="2abd977715e56fda330ce05c89f96bca23422008" translate="yes" xml:space="preserve">
          <source>Attribute specifier - one of the &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt; text attribute&lt;/a&gt; constants.</source>
          <target state="translated">属性指定子- &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt;テキスト属性&lt;/a&gt;定数の1つ。</target>
        </trans-unit>
        <trans-unit id="d90294694005f04e4c81b25f5482566ead146965" translate="yes" xml:space="preserve">
          <source>Attribute specifier - one of the &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt;text attribute&lt;/a&gt; constants.</source>
          <target state="translated">属性指定子- &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt;テキスト属性&lt;/a&gt;定数の1つ。</target>
        </trans-unit>
        <trans-unit id="d792e04beb0e19d1717948e7d9e3863fd9ab1e8f" translate="yes" xml:space="preserve">
          <source>Attribute syntax</source>
          <target state="translated">属性の構文</target>
        </trans-unit>
        <trans-unit id="2b9037d6c7ae81e4ddae316b5e746b6a6e5e1ef8" translate="yes" xml:space="preserve">
          <source>Attribute to get value for.</source>
          <target state="translated">値を取得する属性。</target>
        </trans-unit>
        <trans-unit id="fd2ca195d49a4957fe0ce6f33a5dfb912fb16cba" translate="yes" xml:space="preserve">
          <source>Attribute value, or &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">属性値、またはエラー時に&lt;a href=&quot;language.types.boolean&quot;&gt;ブール値&lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6875187034bdeba3d469a3e7d77c31f3544d9bc9" translate="yes" xml:space="preserve">
          <source>Attribute value, or bool&lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">属性値、またはブール値&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;のエラーに。</target>
        </trans-unit>
        <trans-unit id="45ab686a26a9c623c53a098d31d25c06b4808f79" translate="yes" xml:space="preserve">
          <source>Attribute value.</source>
          <target state="translated">属性値。</target>
        </trans-unit>
        <trans-unit id="1dfca9318870e4107f87a42b70e4f03066cf7d03" translate="yes" xml:space="preserve">
          <source>Attribute.</source>
          <target state="translated">Attribute.</target>
        </trans-unit>
        <trans-unit id="96d93a73f3388de95dffd84d555443d16a9ef60a" translate="yes" xml:space="preserve">
          <source>Attributes allow to add structured, machine-readable metadata information on declarations in code: Classes, methods, functions, parameters, properties and class constants can be the target of an attribute. The metadata defined by attributes can then be inspected at runtime using the &lt;a href=&quot;https://www.php.net/manual/en/book.reflection.php&quot;&gt;Reflection APIs&lt;/a&gt;. Attributes could therefore be thought of as a configuration language embedded directly into code.</source>
          <target state="translated">属性を使用すると、コード内の宣言に構造化された機械可読メタデータ情報を追加できます。クラス、メソッド、関数、パラメーター、プロパティ、およびクラス定数を属性のターゲットにすることができます。属性によって定義されたメタデータは、&lt;a href=&quot;https://www.php.net/manual/en/book.reflection.php&quot;&gt;ReflectionAPI&lt;/a&gt;を使用して実行時に検査できます。したがって、属性は、コードに直接埋め込まれた構成言語と考えることができます。</target>
        </trans-unit>
        <trans-unit id="28a9383711930923ce3358cc4301ac1ab8dfd614" translate="yes" xml:space="preserve">
          <source>Attributes assigned to this publickey. The most common attribute, and the only one supported by publickey version 1 servers, is &lt;code&gt;comment&lt;/code&gt;, which may be any freeform string.</source>
          <target state="translated">この公開鍵に割り当てられた属性。最も一般的な属性であり、公開鍵バージョン1サーバーでサポートされている唯一の属性は &lt;code&gt;comment&lt;/code&gt; 。これは任意の自由形式の文字列です。</target>
        </trans-unit>
        <trans-unit id="53408828b63036e05d2307f9c2a4b15d7a641d1c" translate="yes" xml:space="preserve">
          <source>Attributes assigned to this publickey. The most common attribute, and the only one supported by publickey version 1 servers, is &lt;em&gt;comment&lt;/em&gt;, which may be any freeform string.</source>
          <target state="translated">この公開鍵に割り当てられた属性。最も一般的な属性であり、公開鍵バージョン1サーバーでサポートされている属性は、&lt;em&gt;コメントです&lt;/em&gt;。これは任意の自由形式の文字列にすることができます。</target>
        </trans-unit>
        <trans-unit id="a1468695eb36590aef2bbbb09f47f28b3fc94778" translate="yes" xml:space="preserve">
          <source>Attributes overview</source>
          <target state="translated">属性の概要</target>
        </trans-unit>
        <trans-unit id="661291f26ceb7cd9be8cf50ab842fcb76ab53846" translate="yes" xml:space="preserve">
          <source>Attributes placed on a promoted constructor argument will be replicated to both the property and argument.</source>
          <target state="translated">昇格したコンストラクタの引数に配置された属性は、プロパティと引数の両方に複製されます。</target>
        </trans-unit>
        <trans-unit id="6496e2aaf3f769a2151a819d4be2eceb0f832796" translate="yes" xml:space="preserve">
          <source>Australia time zones.</source>
          <target state="translated">オーストラリアのタイムゾーン。</target>
        </trans-unit>
        <trans-unit id="4819dcf5400ce23c8f897e9ae80d954608b53e2e" translate="yes" xml:space="preserve">
          <source>Authenticate over SSH using a plain password. Since version 0.12 this function also supports keyboard_interactive method.</source>
          <target state="translated">プレーンなパスワードを使ってSSHで認証します。バージョン 0.12 以降、この関数は keyboard_interactive メソッドもサポートしています。</target>
        </trans-unit>
        <trans-unit id="0f9da85b2d1f3eba9fdbb17f23bcb35509f2d685" translate="yes" xml:space="preserve">
          <source>Authenticate over SSH using the ssh agent</source>
          <target state="translated">ssh エージェントを使って SSH で認証する</target>
        </trans-unit>
        <trans-unit id="c5e6ee8978ac7f68446a6614351e61f073f3631d" translate="yes" xml:space="preserve">
          <source>Authenticate using a public hostkey read from a file.</source>
          <target state="translated">ファイルから読み込んだ公開ホストキーを使用して認証します。</target>
        </trans-unit>
        <trans-unit id="58888fc66b5a7001c65d2845e13f71c17d1cce57" translate="yes" xml:space="preserve">
          <source>Authenticate using a public key read from a file.</source>
          <target state="translated">ファイルから読み込んだ公開鍵を使って認証します。</target>
        </trans-unit>
        <trans-unit id="88e24d80458830c08e93af4a54884da689b16f7c" translate="yes" xml:space="preserve">
          <source>Authentication constants</source>
          <target state="translated">認証定数</target>
        </trans-unit>
        <trans-unit id="126d5ccc325ecfbd8ea9a48b0aa87eaf06482c36" translate="yes" xml:space="preserve">
          <source>Authorization session handle, this parameter does not have any citation in the core OAuth 1.0 specification but may be implemented by large providers. &lt;a href=&quot;http://oauth.pbwiki.com/ScalableOAuth/&quot;&gt;&amp;raquo; See ScalableOAuth&lt;/a&gt; for more information.</source>
          <target state="translated">承認セッションハンドル。このパラメーターにはコアOAuth 1.0仕様での引用はありませんが、大規模なプロバイダーによって実装される場合があります。&lt;a href=&quot;http://oauth.pbwiki.com/ScalableOAuth/&quot;&gt;&amp;raquo;詳細については、ScalableOAuth&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3ac9ec42893f6088008e71f9db80456485d08762" translate="yes" xml:space="preserve">
          <source>Autoloading Classes</source>
          <target state="translated">オートロードクラス</target>
        </trans-unit>
        <trans-unit id="f0b983767078f35119d8414efb46ac46e52d2dd8" translate="yes" xml:space="preserve">
          <source>Autoloading Classes &amp;rarr;</source>
          <target state="translated">クラスの自動読み込み&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="00e9a0dd7333291b5d6984d075fcc312de17f038" translate="yes" xml:space="preserve">
          <source>Autoloading is not available if using PHP in CLI &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.php&quot;&gt;interactive mode&lt;/a&gt;.</source>
          <target state="translated">PHPをCLI &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.php&quot;&gt;インタラクティブモード&lt;/a&gt;で使用している場合、オートロードは利用できません。</target>
        </trans-unit>
        <trans-unit id="b9a9b4cfc8f3a4ca9c06be14098bf920181b987a" translate="yes" xml:space="preserve">
          <source>Autoloading is not available if using PHP in CLI &lt;a href=&quot;https://www.php.net/manual/en/features.commandline.php&quot;&gt;interactive mode&lt;/a&gt;.</source>
          <target state="translated">CLI&lt;a href=&quot;https://www.php.net/manual/en/features.commandline.php&quot;&gt;インタラクティブモードで&lt;/a&gt;PHPを使用している場合、自動ロードは使用できません。</target>
        </trans-unit>
        <trans-unit id="b8c4d362dde3aacd21a07e3030b9507f68c20847" translate="yes" xml:space="preserve">
          <source>Automatically allocate locks for the bufferevent, so that it&amp;rsquo;s safe to use from multiple threads.</source>
          <target state="translated">複数のスレッドから安全に使用できるように、バッファイベントのロックを自動的に割り当てます。</target>
        </trans-unit>
        <trans-unit id="1e0aed2aaa54bde76bd1465afdd3f3836fc4eae9" translate="yes" xml:space="preserve">
          <source>Automatically crops an image according to the given &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;mode&lt;/code&gt; に従って画像を自動的にトリミングします。</target>
        </trans-unit>
        <trans-unit id="eea250442b01a58d1ed57279d935f1e0745e2f85" translate="yes" xml:space="preserve">
          <source>Automatically frees allocated memory when its size drops low enough.</source>
          <target state="translated">割り当てられたメモリのサイズが十分に小さくなると、自動的に解放されます。</target>
        </trans-unit>
        <trans-unit id="681b5b5ae10b994e61d9fc53cf8a95498ff0df39" translate="yes" xml:space="preserve">
          <source>Availability</source>
          <target state="translated">Availability</target>
        </trans-unit>
        <trans-unit id="ebb6b9b304614f27d62bc464d00a2c0d30dda8f5" translate="yes" xml:space="preserve">
          <source>Available as of 7.3.0 and curl &amp;gt;= 7.55.0.</source>
          <target state="translated">7.3.0以降で利用可能で、curl&amp;gt; = 7.55.0です。</target>
        </trans-unit>
        <trans-unit id="b5c8858f9115f373d5785ff4ceb6d48140552f29" translate="yes" xml:space="preserve">
          <source>Available as of PHP 5.5.0 if built against libcurl &amp;gt;= 7.16.2.</source>
          <target state="translated">libcurl&amp;gt; = 7.16.2に対してビルドされた場合、PHP5.5.0以降で使用できます。</target>
        </trans-unit>
        <trans-unit id="c597d5d58978e8e50c86fc26467774713df048e5" translate="yes" xml:space="preserve">
          <source>Available as of PHP 7.3.0 if built against libcurl &amp;gt;= 7.51.0.</source>
          <target state="translated">libcurl&amp;gt; = 7.51.0に対してビルドされた場合、PHP7.3.0以降で使用できます。</target>
        </trans-unit>
        <trans-unit id="f3dcff928876718a4afb1b4eee78e7e28bcebe0e" translate="yes" xml:space="preserve">
          <source>Available as of ZooKeeper 3.5.0</source>
          <target state="translated">ZooKeeper 3.5.0 より利用可能</target>
        </trans-unit>
        <trans-unit id="55c5a78ba49f84f67dc7f17e9b623eb20d315c70" translate="yes" xml:space="preserve">
          <source>Available only with &lt;a href=&quot;https://secure.php.net/manual/en/book.mysqlnd.php&quot;&gt;mysqlnd&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://secure.php.net/manual/en/book.mysqlnd.php&quot;&gt;mysqlndで&lt;/a&gt;のみ使用できます。</target>
        </trans-unit>
        <trans-unit id="201056075170d0c54b80b1f66cbad2c8144aca9c" translate="yes" xml:space="preserve">
          <source>Available only with &lt;a href=&quot;https://www.php.net/manual/en/book.mysqlnd.php&quot;&gt;mysqlnd&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/book.mysqlnd.php&quot;&gt;mysqlndで&lt;/a&gt;のみ使用できます。</target>
        </trans-unit>
        <trans-unit id="a6ae51c3678ef18644df124a6fe333a95f37deb1" translate="yes" xml:space="preserve">
          <source>Available since</source>
          <target state="translated">以降で利用可能</target>
        </trans-unit>
        <trans-unit id="edabfc74fecd629a6896ad9b5980c82614ebe5e5" translate="yes" xml:space="preserve">
          <source>Available since &lt;code&gt;libevent 2.1.0-alpha&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;libevent 2.1.0-alpha&lt;/code&gt; 以降で使用可能です。</target>
        </trans-unit>
        <trans-unit id="3b42ed6c2fef212d2d6b2a775a1b777e155c4f3d" translate="yes" xml:space="preserve">
          <source>Available since &lt;em&gt;libevent 2.1.0-alpha&lt;/em&gt; .</source>
          <target state="translated">&lt;em&gt;libevent 2.1.0-alpha&lt;/em&gt;以降で使用可能です。</target>
        </trans-unit>
        <trans-unit id="07fd7abc482f90de334d7d03349b7f67dae289eb" translate="yes" xml:space="preserve">
          <source>Available since PHP 5.1.3. The &lt;strong&gt;&lt;code&gt;CURLINFO_&lt;/code&gt;&lt;/strong&gt; prefix is intentional.</source>
          <target state="translated">PHP 5.1.3以降で使用可能です。&lt;strong&gt; &lt;code&gt;CURLINFO_&lt;/code&gt; の&lt;/strong&gt;プレフィックスは意図的なものです。</target>
        </trans-unit>
        <trans-unit id="0cf030a1cebb13fd4cc4af484a74a155ec6d32ae" translate="yes" xml:space="preserve">
          <source>Available since PHP 5.2.1 for versions compiled with libcurl 7.11.2 or greater.</source>
          <target state="translated">PHP 5.2.1 以降、libcurl 7.11.2 以降でコンパイルされたバージョンで利用可能。</target>
        </trans-unit>
        <trans-unit id="134288d01a523305aa86fd8747fcdf76f0f2b3d2" translate="yes" xml:space="preserve">
          <source>Available since PHP 5.5.0 and cURL 7.14.1.</source>
          <target state="translated">PHP 5.5.5.0 および cURL 7.14.1 以降で利用可能。</target>
        </trans-unit>
        <trans-unit id="fea5e1fe9b1b9d9de773fae69c65998c670d939d" translate="yes" xml:space="preserve">
          <source>Available since PHP 7.3.0 and cURL 7.53.0</source>
          <target state="translated">PHP 7.3.0 および cURL 7.53.0 以降で利用可能</target>
        </trans-unit>
        <trans-unit id="87f9db900e6c4598b7412d31cb8321ce16c1d18a" translate="yes" xml:space="preserve">
          <source>Available since PHP 7.3.0 and libcurl &amp;gt;= cURL 7.52.0.</source>
          <target state="translated">PHP7.3.0およびlibcurl&amp;gt; = cURL7.52.0以降で使用できます。</target>
        </trans-unit>
        <trans-unit id="a312547940e8d824e901adb3efed404b29e62e45" translate="yes" xml:space="preserve">
          <source>Available since PHP 7.3.0 and libcurl &amp;gt;= cURL 7.52.0. Available if built TLS enabled.</source>
          <target state="translated">PHP7.3.0およびlibcurl&amp;gt; = cURL7.52.0以降で使用できます。ビルドされたTLSが有効になっている場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="29074bf711db2cbcd64a3f16f764b61d48939390" translate="yes" xml:space="preserve">
          <source>Available since PHP 7.3.0 and libcurl &amp;gt;= cURL 7.61.0. Available when built with OpenSSL &amp;gt;= 1.1.1.</source>
          <target state="translated">PHP7.3.0およびlibcurl&amp;gt; = cURL7.61.0以降で使用できます。OpenSSL&amp;gt; = 1.1.1でビルドした場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="8d18aa650413626ce7805738008c36b9189b6bc8" translate="yes" xml:space="preserve">
          <source>Available since PHP 7.3.15 and 7.4.3, respectively, if built against libcurl &amp;gt;= 7.64.0</source>
          <target state="translated">libcurl&amp;gt; = 7.64.0に対してビルドされた場合、PHP7.3.15および7.4.3以降でそれぞれ使用可能</target>
        </trans-unit>
        <trans-unit id="d63a3694d32f240f8cd11874f949cfc782eb976f" translate="yes" xml:space="preserve">
          <source>Available with ImageMagick library version 6.2.9 and higher.</source>
          <target state="translated">ImageMagick ライブラリのバージョン 6.2.9 以降で利用可能。</target>
        </trans-unit>
        <trans-unit id="fbba7c2c42739d6c380fb1fcf68913813c87ac63" translate="yes" xml:space="preserve">
          <source>Average a set of images.</source>
          <target state="translated">画像のセットを平均化します。</target>
        </trans-unit>
        <trans-unit id="cd0a1d206e4f93831dda20f5c96ef7e58caab5d5" translate="yes" xml:space="preserve">
          <source>Avoid relative paths</source>
          <target state="translated">相対パスを避ける</target>
        </trans-unit>
        <trans-unit id="60b23abf98e1576ad82a3cbc5fe67c83dbbac137" translate="yes" xml:space="preserve">
          <source>Avoid using this function in multithreaded webservers. It is better to change the file permissions with &lt;a href=&quot;function.chmod&quot;&gt;chmod()&lt;/a&gt; after creating the file. Using &lt;strong&gt;umask()&lt;/strong&gt; can lead to unexpected behavior of concurrently running scripts and the webserver itself because they all use the same umask.</source>
          <target state="translated">マルチスレッドのWebサーバーでは、この関数を使用しないでください。ファイルを作成した後、&lt;a href=&quot;function.chmod&quot;&gt;chmod（）で&lt;/a&gt;ファイルのアクセス権を変更することをお勧めします。&lt;strong&gt;umask（）&lt;/strong&gt;を使用すると、同時に実行されているスクリプトとWebサーバー自体がすべて同じumaskを使用するため、予期しない動作が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="d081bd0b11d67f678410509c1195f92ded687366" translate="yes" xml:space="preserve">
          <source>BASE64</source>
          <target state="translated">BASE64</target>
        </trans-unit>
        <trans-unit id="e1e106769129d490628d379adc9944dc1a97899f" translate="yes" xml:space="preserve">
          <source>BCC &quot;string&quot; - match messages with &quot;string&quot; in the Bcc: field</source>
          <target state="translated">BCC &quot;string&quot;-Bcc:フィールドの &quot;string&quot; を持つメッセージにマッチします。</target>
        </trans-unit>
        <trans-unit id="296c881b22081ac7fc1bd5ac34a0f2b351238547" translate="yes" xml:space="preserve">
          <source>BCMath Arbitrary Precision Mathematics Functions</source>
          <target state="translated">BCMath 任意精度数学関数</target>
        </trans-unit>
        <trans-unit id="a2596acf467ed24508271b8a69c5449a174f62e8" translate="yes" xml:space="preserve">
          <source>BEFORE &quot;date&quot; - match messages with Date: before &quot;date&quot;</source>
          <target state="translated">BEFORE &quot;date&quot;-メッセージを Date:before &quot;date&quot; でマッチさせます。</target>
        </trans-unit>
        <trans-unit id="5c3a9f9732226b9483ecf34b0abef0b5a0ab3fe1" translate="yes" xml:space="preserve">
          <source>BIG-5</source>
          <target state="translated">BIG-5</target>
        </trans-unit>
        <trans-unit id="f2aaac94f4a3acf6f39c58f2090ab106f3d4930f" translate="yes" xml:space="preserve">
          <source>BIG5</source>
          <target state="translated">BIG5</target>
        </trans-unit>
        <trans-unit id="7c5be79e324f6dc6bfc3c27f72ec6b392480af62" translate="yes" xml:space="preserve">
          <source>BIG5-HKSCS</source>
          <target state="translated">BIG5-HKSCS</target>
        </trans-unit>
        <trans-unit id="d77e6195246d944913a35b6749e14763ebd6e709" translate="yes" xml:space="preserve">
          <source>BITS</source>
          <target state="translated">BITS</target>
        </trans-unit>
        <trans-unit id="16f0507cbdeb26d5c7e89f17638599a9a849bfc9" translate="yes" xml:space="preserve">
          <source>BLENC will return the redistributable key that must be saved into key_file: the path of key_file is specified at runtime with the option blenc.key_file</source>
          <target state="translated">BLENC は key_file に保存しなければならない再配布可能な鍵を返します:key_file のパスは実行時に blenc.key_file オプションで指定します。</target>
        </trans-unit>
        <trans-unit id="8306a543f91f1fd548cb382031a57ef6cd3bdffb" translate="yes" xml:space="preserve">
          <source>BMP</source>
          <target state="translated">BMP</target>
        </trans-unit>
        <trans-unit id="4dd60f86ebc6b695624d88ab45938de2c53f3378" translate="yes" xml:space="preserve">
          <source>BODY &quot;string&quot; - match messages with &quot;string&quot; in the body of the message</source>
          <target state="translated">BODY &quot;string&quot;-メッセージの本文にある &quot;string &quot;を持つメッセージにマッチします。</target>
        </trans-unit>
        <trans-unit id="2ba208c7a57215fe25a2dc8edeb1eed6d80c323c" translate="yes" xml:space="preserve">
          <source>Back references</source>
          <target state="translated">バックリファレンス</target>
        </trans-unit>
        <trans-unit id="bdaf8c85240d0c5e1f06e716f861619cd56fe644" translate="yes" xml:space="preserve">
          <source>Back references &amp;rarr;</source>
          <target state="translated">後方参照&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="1afb1f946a30607dc2b8851d97ee44e5bb3cc164" translate="yes" xml:space="preserve">
          <source>Back references to the named subpatterns can be achieved by &lt;code&gt;(?P=name)&lt;/code&gt; or, since PHP 5.2.2, also by &lt;code&gt;\k&amp;lt;name&amp;gt;&lt;/code&gt; or &lt;code&gt;\k'name'&lt;/code&gt;. Additionally PHP 5.2.4 added support for &lt;code&gt;\k{name}&lt;/code&gt; and &lt;code&gt;\g{name}&lt;/code&gt;, and PHP 5.2.7 for &lt;code&gt;\g&amp;lt;name&amp;gt;&lt;/code&gt; and &lt;code&gt;\g'name'&lt;/code&gt;.</source>
          <target state="translated">名前付きサブパターンへの逆参照は、 &lt;code&gt;(?P=name)&lt;/code&gt; によって、またはPHP 5.2.2以降、 &lt;code&gt;\k&amp;lt;name&amp;gt;&lt;/code&gt; または &lt;code&gt;\k'name'&lt;/code&gt; によっても実現できます。さらに、 &lt;code&gt;\g'name'&lt;/code&gt; &lt;code&gt;\k{name}&lt;/code&gt; と &lt;code&gt;\g{name}&lt;/code&gt; サポートが追加され、PHP5.2.7では &lt;code&gt;\g&amp;lt;name&amp;gt;&lt;/code&gt; と\ g'name 'のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="551beddb795532e5a92ad3cdcefa22095436b45e" translate="yes" xml:space="preserve">
          <source>Back references to the named subpatterns can be achieved by &lt;em&gt;(?P=name)&lt;/em&gt; or, since PHP 5.2.2, also by &lt;em&gt;\k&amp;lt;name&amp;gt;&lt;/em&gt; or &lt;em&gt;\k'name'&lt;/em&gt;. Additionally PHP 5.2.4 added support for &lt;em&gt;\k{name}&lt;/em&gt; and &lt;em&gt;\g{name}&lt;/em&gt;, and PHP 5.2.7 for &lt;em&gt;\g&amp;lt;name&amp;gt;&lt;/em&gt; and &lt;em&gt;\g'name'&lt;/em&gt;.</source>
          <target state="translated">名前付きサブパターンへの後方参照は、&lt;em&gt;（？P = name）&lt;/em&gt;によって、またはPHP 5.2.2以降、&lt;em&gt;\ k &amp;lt;name&amp;gt;&lt;/em&gt;または&lt;em&gt;\ k'name '&lt;/em&gt;によっても実現できます。さらに、PHP 5.2.4は&lt;em&gt;\ k {name}&lt;/em&gt;および&lt;em&gt;\ g {name}の&lt;/em&gt;サポートを追加し、PHP 5.2.7は&lt;em&gt;\ g &amp;lt;name&amp;gt;&lt;/em&gt;および&lt;em&gt;\ g'name 'の&lt;/em&gt;サポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="a9347d8d598c4cb2d8566155d72f7c4d2046ce40" translate="yes" xml:space="preserve">
          <source>Back up one byte</source>
          <target state="translated">1バイトをバックアップ</target>
        </trans-unit>
        <trans-unit id="875175e5d5500187d86d4f1da049a869af2b2fd2" translate="yes" xml:space="preserve">
          <source>Backend flags</source>
          <target state="translated">バックエンドフラグ</target>
        </trans-unit>
        <trans-unit id="a2827dbf3ea8db45fd7cdaef9b5df9187fed640b" translate="yes" xml:space="preserve">
          <source>Backend flags:</source>
          <target state="translated">バックエンドフラグ。</target>
        </trans-unit>
        <trans-unit id="cc69ac47064617c722487bee67731f7f28e953fd" translate="yes" xml:space="preserve">
          <source>Backup a function at runtime, to be restored on shutdown</source>
          <target state="translated">実行時に関数をバックアップし、シャットダウン時に復元します。</target>
        </trans-unit>
        <trans-unit id="e74510e6bfcd1b9aa9d70798e995080c6b829007" translate="yes" xml:space="preserve">
          <source>BadFunctionCallException (class)</source>
          <target state="translated">BadFunctionCallException</target>
        </trans-unit>
        <trans-unit id="e90c44bcb213a22384f05256f109c3d680db2f1d" translate="yes" xml:space="preserve">
          <source>BadMethodCallException &amp;rarr;</source>
          <target state="translated">BadMethodCallException&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="28eda76447b813f1cd57954f1da801c624b08267" translate="yes" xml:space="preserve">
          <source>BadMethodCallException (class)</source>
          <target state="translated">BadMethodCallException</target>
        </trans-unit>
        <trans-unit id="273a15e99059abbcd1bcf640600a53e8689827b3" translate="yes" xml:space="preserve">
          <source>Base (class)</source>
          <target state="translated">ベース(クラス)</target>
        </trans-unit>
        <trans-unit id="5e1dd37fe1120c581c8dff3394eb62eaadf9e9f2" translate="yes" xml:space="preserve">
          <source>Base URL of repository.</source>
          <target state="translated">リポジトリのベースURL。</target>
        </trans-unit>
        <trans-unit id="fcce35c1ed2a50cfdb267c3ecf8c4fbc81890d0f" translate="yes" xml:space="preserve">
          <source>Base name of item in repository.</source>
          <target state="translated">リポジトリ内のアイテムのベース名。</target>
        </trans-unit>
        <trans-unit id="895c330ff6166a7f13701f8d9b78f313787269c8" translate="yes" xml:space="preserve">
          <source>Base64</source>
          <target state="translated">Base64</target>
        </trans-unit>
        <trans-unit id="5a0d8a28fa755a5d7beb92cd2e604e489367d043" translate="yes" xml:space="preserve">
          <source>Base64-encoded data takes about 33% more space than the original data.</source>
          <target state="translated">Base64エンコードされたデータは、元のデータよりも約33%多くのスペースを必要とします。</target>
        </trans-unit>
        <trans-unit id="6dff0ab3670b8ed7dc2fbe6895ebbf63d5a51884" translate="yes" xml:space="preserve">
          <source>Base::__construct</source>
          <target state="translated">Base::__construct</target>
        </trans-unit>
        <trans-unit id="f667add283072c6592f2fe16315e52024273d1fe" translate="yes" xml:space="preserve">
          <source>Base::dispatch</source>
          <target state="translated">Base::dispatch</target>
        </trans-unit>
        <trans-unit id="0a0a3ca2a31205fe51e1ef7b7e643f47ef70a348" translate="yes" xml:space="preserve">
          <source>Base::exit</source>
          <target state="translated">Base::exit</target>
        </trans-unit>
        <trans-unit id="cbd023cb71312498ad371d7e90825f85428a1de7" translate="yes" xml:space="preserve">
          <source>Base::free</source>
          <target state="translated">Base::free</target>
        </trans-unit>
        <trans-unit id="08134d401d298e86bc5d916bdc4ac9616f91eaa9" translate="yes" xml:space="preserve">
          <source>Base::getFeatures</source>
          <target state="translated">Base::getFeatures</target>
        </trans-unit>
        <trans-unit id="21319f80c4fb160851e587d7914fc820fc0d3cae" translate="yes" xml:space="preserve">
          <source>Base::getMethod</source>
          <target state="translated">Base::getMethod</target>
        </trans-unit>
        <trans-unit id="85750375ece2b77256aa0f550276f2c814127db7" translate="yes" xml:space="preserve">
          <source>Base::getTimeOfDayCached</source>
          <target state="translated">Base::getTimeOfDayCached</target>
        </trans-unit>
        <trans-unit id="7ac1e9e9cc6e8232367ef3f6862b52f16603b2a2" translate="yes" xml:space="preserve">
          <source>Base::gotExit</source>
          <target state="translated">Base::gotExit</target>
        </trans-unit>
        <trans-unit id="93b66af7cda409543432fb82db28433754607b05" translate="yes" xml:space="preserve">
          <source>Base::gotStop</source>
          <target state="translated">Base::gotStop</target>
        </trans-unit>
        <trans-unit id="05647dabf8966585ca9a82d1f1cba924e2a5e9cd" translate="yes" xml:space="preserve">
          <source>Base::loop</source>
          <target state="translated">Base::loop</target>
        </trans-unit>
        <trans-unit id="3cae474b96182ad2ab60986840ecd230fd694c98" translate="yes" xml:space="preserve">
          <source>Base::priorityInit</source>
          <target state="translated">Base::priorityInit</target>
        </trans-unit>
        <trans-unit id="0f8589b274d0435f596866753e68f956fc81ed4c" translate="yes" xml:space="preserve">
          <source>Base::reInit</source>
          <target state="translated">Base::reInit</target>
        </trans-unit>
        <trans-unit id="d10b9ea28f1f6ae4b91587cedc5fb075301821d6" translate="yes" xml:space="preserve">
          <source>Base::stop</source>
          <target state="translated">Base::stop</target>
        </trans-unit>
        <trans-unit id="bcf768d4c33d8fd693efe7af7489ca6e9887ccfc" translate="yes" xml:space="preserve">
          <source>Basic SimpleXML usage</source>
          <target state="translated">基本的なSimpleXMLの使い方</target>
        </trans-unit>
        <trans-unit id="b0a399fd07c417a99624193e2a0c0dc3f2a11d31" translate="yes" xml:space="preserve">
          <source>Basic class definitions begin with the keyword &lt;code&gt;class&lt;/code&gt;, followed by a class name, followed by a pair of curly braces which enclose the definitions of the properties and methods belonging to the class.</source>
          <target state="translated">基本的なクラス定義は、キーワード &lt;code&gt;class&lt;/code&gt; で始まり、クラス名、クラスに属するプロパティとメソッドの定義を囲む中括弧のペアが続きます。</target>
        </trans-unit>
        <trans-unit id="d6fe4bdc5ad8be76b6a3ed3beb2156dddec7661c" translate="yes" xml:space="preserve">
          <source>Basic class definitions begin with the keyword &lt;em&gt;class&lt;/em&gt;, followed by a class name, followed by a pair of curly braces which enclose the definitions of the properties and methods belonging to the class.</source>
          <target state="translated">基本的なクラス定義は、キーワード&lt;em&gt;class&lt;/em&gt;で始まり、その後にクラス名が続き、その後に、クラスに属するプロパティとメソッドの定義を囲む中括弧のペアが続きます。</target>
        </trans-unit>
        <trans-unit id="0e026311ce3258038a04fbbcfba23d9314d86cc3" translate="yes" xml:space="preserve">
          <source>Basic usage example</source>
          <target state="translated">基本的な使用例</target>
        </trans-unit>
        <trans-unit id="2b21b330c6c75359b011dfb4f587aaa281e8b660" translate="yes" xml:space="preserve">
          <source>Basic usage example.</source>
          <target state="translated">基本的な使用例。</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="3b1d0932e690050294720df747abd11ac3bab048" translate="yes" xml:space="preserve">
          <source>Basics &amp;rarr;</source>
          <target state="translated">基本&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e2fc66c4a563efb1afeaad5db6089bc8a639c940" translate="yes" xml:space="preserve">
          <source>Be aware that some socket implementations need to be handled very carefully. A few basic rules:</source>
          <target state="translated">いくつかのソケット実装は非常に慎重に扱う必要があることに注意してください。いくつかの基本的なルールを紹介します。</target>
        </trans-unit>
        <trans-unit id="0e653b4f1962c8efed3ff3a9eca5e7e481020823" translate="yes" xml:space="preserve">
          <source>Be careful about variables that may match HTML entities. Things like &amp;amp;amp, &amp;amp;copy and &amp;amp;pound are parsed by the browser and the actual entity is used instead of the desired variable name. This is an obvious hassle that the W3C has been telling people about for years. The reference is here: &lt;a href=&quot;http://www.w3.org/TR/html4/appendix/notes.html#h-B.2.2&quot;&gt;&amp;raquo; http://www.w3.org/TR/html4/appendix/notes.html#h-B.2.2&lt;/a&gt;.</source>
          <target state="translated">HTMLエンティティと一致する可能性のある変数に注意してください。＆amp、＆copy、＆poundなどはブラウザによって解析され、目的の変数名の代わりに実際のエンティティが使用されます。これは、W3Cが長年にわたって人々に伝えてきた明らかな手間です。リファレンスはここにあります：&lt;a href=&quot;http://www.w3.org/TR/html4/appendix/notes.html#h-B.2.2&quot;&gt;&amp;raquo;http://www.w3.org/TR/html4/appendix/notes.html#hB.2.2&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9290897f65ff6898d28c654d5fc076368ef9ade7" translate="yes" xml:space="preserve">
          <source>Be careful if you choose to escape characters 0, a, b, f, n, r, t and v. They will be converted to \0, \a, \b, \f, \n, \r, \t and \v, all of which are predefined escape sequences in C. Many of these sequences are also defined in other C-derived languages, including PHP, meaning that you may not get the desired result if you use the output of &lt;strong&gt;addcslashes()&lt;/strong&gt; to generate code in those languages with these characters defined in &lt;code&gt;characters&lt;/code&gt;.</source>
          <target state="translated">文字0、a、b、f、n、r、t、vをエスケープする場合は注意してください。これらは、\ 0、\ a、\ b、\ f、\ n、\ r、\ tおよびに変換されます。 \ v、これらはすべてCで事前定義されたエスケープシーケンスです。これらのシーケンスの多くは、PHPを含む他のC派生言語でも定義されています。つまり、&lt;strong&gt;addcslashes（）の&lt;/strong&gt;出力を使用して生成すると、目的の結果が得られない場合があります。で定義されたこれらの文字と、それらの言語のコード &lt;code&gt;characters&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae7528b981e33be5c015d406b1a692b7da734594" translate="yes" xml:space="preserve">
          <source>Be careful if you choose to escape characters 0, a, b, f, n, r, t and v. They will be converted to \0, \a, \b, \f, \n, \r, \t and \v, all of which are predefined escape sequences in C. Many of these sequences are also defined in other C-derived languages, including PHP, meaning that you may not get the desired result if you use the output of &lt;strong&gt;addcslashes()&lt;/strong&gt; to generate code in those languages with these characters defined in &lt;code&gt;charlist&lt;/code&gt;.</source>
          <target state="translated">文字0、a、b、f、n、r、t、vをエスケープする場合は注意してください。これらの文字は\ 0、\ a、\ b、\ f、\ n、\ r、\ tおよび\ v、これらはすべてCで事前定義されたエスケープシーケンスです。これらのシーケンスの多くは、PHPを含む他のC派生言語でも定義されています。つまり、&lt;strong&gt;addcslashes（）の&lt;/strong&gt;出力を使用して生成すると、望ましい結果が得られない場合があります。これらの文字を &lt;code&gt;charlist&lt;/code&gt; で定義したこれらの言語のコード。</target>
        </trans-unit>
        <trans-unit id="3053108a510ba1b77afd958defe49cd56024489f" translate="yes" xml:space="preserve">
          <source>Be careful when passing arguments with mixed types values because &lt;strong&gt;max()&lt;/strong&gt; can produce unpredictable results.</source>
          <target state="translated">&lt;strong&gt;max（）&lt;/strong&gt;が予期しない結果を生成する可能性があるため、混合タイプの値で引数を渡すときは注意してください。</target>
        </trans-unit>
        <trans-unit id="3976d394fd8fd11aa1cc2a0da243feed43adac69" translate="yes" xml:space="preserve">
          <source>Be careful when passing arguments with mixed types values because &lt;strong&gt;min()&lt;/strong&gt; can produce unpredictable results.</source>
          <target state="translated">&lt;strong&gt;min（）&lt;/strong&gt;が予期しない結果を生成する可能性があるため、混合タイプの値で引数を渡すときは注意してください。</target>
        </trans-unit>
        <trans-unit id="20d2fe14eb608e72a7d9b541b2e2beea951bfe9b" translate="yes" xml:space="preserve">
          <source>Be careful when sorting arrays with mixed types values because &lt;strong&gt;sort()&lt;/strong&gt; can produce unexpected results, if &lt;code&gt;flags&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;SORT_REGULAR&lt;/code&gt;&lt;/strong&gt;,</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; が&lt;strong&gt; &lt;code&gt;SORT_REGULAR&lt;/code&gt; の&lt;/strong&gt;場合、&lt;strong&gt;sort（）&lt;/strong&gt;は予期しない結果を生成する可能性があるため、混合型の値を持つ配列をソートするときは注意してください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8f215b8c73243b357ec431c2af438b63393fc49" translate="yes" xml:space="preserve">
          <source>Be careful when sorting arrays with mixed types values because &lt;strong&gt;sort()&lt;/strong&gt; can produce unpredictable results.</source>
          <target state="translated">&lt;strong&gt;sort（）&lt;/strong&gt;は予測できない結果を生成する可能性があるため、混合タイプの値を含む配列をソートするときは注意してください。</target>
        </trans-unit>
        <trans-unit id="c50239c15e50e1fe1f80c40107413ed269d4e593" translate="yes" xml:space="preserve">
          <source>Be careful when using array syntax. Scalar keys will be coerced to integers by the engine. For example, &lt;code&gt;$map[&quot;1&quot;]&lt;/code&gt; will attempt to access &lt;code&gt;int(1)&lt;/code&gt;, while &lt;code&gt;$map-&amp;gt;get(&quot;1&quot;)&lt;/code&gt; will correctly look up the string key.</source>
          <target state="translated">配列構文を使用するときは注意してください。スカラーキーは、エンジンによって整数に強制変換されます。たとえば、 &lt;code&gt;$map[&quot;1&quot;]&lt;/code&gt; は &lt;code&gt;int(1)&lt;/code&gt; にアクセスしようとしますが、 &lt;code&gt;$map-&amp;gt;get(&quot;1&quot;)&lt;/code&gt; は文字列キーを正しく検索します。</target>
        </trans-unit>
        <trans-unit id="02f8db2a41ecfb2ce014807a46b6be164c87a1d7" translate="yes" xml:space="preserve">
          <source>Be sure to read the &lt;a href=&quot;language.namespaces.faq#language.namespaces.faq.quote&quot;&gt;note about escaping namespace names in strings&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;language.namespaces.faq#language.namespaces.faq.quote&quot;&gt;文字列内の名前空間名のエスケープに関する注意を&lt;/a&gt;必ずお読みください。</target>
        </trans-unit>
        <trans-unit id="0f73e65a8bd14c4ae82401114cd01f6b4d588082" translate="yes" xml:space="preserve">
          <source>Be sure to use the &lt;code&gt;===&lt;/code&gt; operator when checking for an error. Since the &lt;strong&gt;socket_select()&lt;/strong&gt; may return 0 the comparison with &lt;code&gt;==&lt;/code&gt; would evaluate to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">エラーをチェックするときは、必ず &lt;code&gt;===&lt;/code&gt; 演算子を使用してください。以来&lt;strong&gt;はsocket_select（）は&lt;/strong&gt;0を返すことがとの比較 &lt;code&gt;==&lt;/code&gt; は、と評価されてしまうからです&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="a10e007cfe3240b101be871225d66ac38016335d" translate="yes" xml:space="preserve">
          <source>Be sure to use the &lt;code&gt;===&lt;/code&gt; operator when checking for an error. Since the &lt;strong&gt;stream_select()&lt;/strong&gt; may return 0 the comparison with &lt;code&gt;==&lt;/code&gt; would evaluate to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">エラーをチェックするときは、必ず &lt;code&gt;===&lt;/code&gt; 演算子を使用してください。以来&lt;strong&gt;てstream_select（）は&lt;/strong&gt;0を返すことがとの比較 &lt;code&gt;==&lt;/code&gt; は、と評価されてしまうからです&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="4078f231d0fd900e9af9c2e6b297b6fe68fed58b" translate="yes" xml:space="preserve">
          <source>Be sure to use the &lt;em&gt;===&lt;/em&gt; operator when checking for an error. Since the &lt;strong&gt;socket_select()&lt;/strong&gt; may return 0 the comparison with &lt;em&gt;==&lt;/em&gt; would evaluate to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">エラーを確認するときは、必ず&lt;em&gt;===&lt;/em&gt;演算子を使用してください。以来&lt;strong&gt;はsocket_select（）は&lt;/strong&gt; 0を返すことがとの比較&lt;em&gt;==は、&lt;/em&gt;と評価されます&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="c6d6284dc32d581c16d5f36f187c53b33c102ccb" translate="yes" xml:space="preserve">
          <source>Be sure to use the &lt;em&gt;===&lt;/em&gt; operator when checking for an error. Since the &lt;strong&gt;stream_select()&lt;/strong&gt; may return 0 the comparison with &lt;em&gt;==&lt;/em&gt; would evaluate to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">エラーを確認するときは、必ず&lt;em&gt;===&lt;/em&gt;演算子を使用してください。以来&lt;strong&gt;てstream_select（）は&lt;/strong&gt; 0を返すことがとの比較&lt;em&gt;==は、&lt;/em&gt;と評価されます&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="ce6cdaf0cfdb1d5593b2fa773636195b753ad3ae" translate="yes" xml:space="preserve">
          <source>Became available when using Apache 1, or the PHP Apache 2 &lt;em&gt;filter&lt;/em&gt; API. Before this time, it was only available when using the Apache 2 &lt;em&gt;handler&lt;/em&gt; API.</source>
          <target state="translated">Apache 1、またはPHP Apache 2 &lt;em&gt;フィルター&lt;/em&gt; API を使用するときに使用可能になりました。これまでは、Apache 2 &lt;em&gt;ハンドラー&lt;/em&gt; API を使用する場合にのみ利用可能でした。</target>
        </trans-unit>
        <trans-unit id="027cb4ebb31964647b892890a464e9f71c4d523f" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params()&lt;/a&gt; return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the query fails, you must use &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result()&lt;/a&gt; to get the result handle.</source>
          <target state="translated">ので&lt;a href=&quot;function.pg-query&quot;&gt;pg_query（）&lt;/a&gt;と&lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params（）&lt;/a&gt;の戻り&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;クエリが失敗した場合、あなたが使用する必要があります&lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query（）&lt;/a&gt;と&lt;a href=&quot;function.pg-get-result&quot;&gt;はpg_get_result（）&lt;/a&gt;結果のハンドルを取得します。</target>
        </trans-unit>
        <trans-unit id="03859900018a100854ac0e9cb0fff0f2fce28b16" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params()&lt;/a&gt; return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the query fails, you must use &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result()&lt;/a&gt; to get the result handle.</source>
          <target state="translated">ので&lt;a href=&quot;function.pg-query&quot;&gt;pg_query（）&lt;/a&gt;と&lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params（）&lt;/a&gt;の戻り&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;クエリが失敗した場合、あなたが使用する必要があります&lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query（）&lt;/a&gt;と&lt;a href=&quot;function.pg-get-result&quot;&gt;はpg_get_result（）&lt;/a&gt;結果のハンドルを取得します。</target>
        </trans-unit>
        <trans-unit id="8d8e9f9d5727aacc38922ff70b788e4d436605a3" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt; returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the query fails, you must use &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result()&lt;/a&gt; to get the result handle.</source>
          <target state="translated">ので&lt;a href=&quot;function.pg-query&quot;&gt;pg_query（）&lt;/a&gt;返します&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; は&lt;/strong&gt;、クエリが失敗した場合、あなたが使用する必要があります&lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query（）&lt;/a&gt;と&lt;a href=&quot;function.pg-get-result&quot;&gt;はpg_get_result（）&lt;/a&gt;結果のハンドルを取得します。</target>
        </trans-unit>
        <trans-unit id="28f44ed3453d6e0d80377f266fb12a72bf2bba76" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt; returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the query fails, you must use &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result()&lt;/a&gt; to get the result handle.</source>
          <target state="translated">ので&lt;a href=&quot;function.pg-query&quot;&gt;pg_query（）が&lt;/a&gt;返す&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;クエリが失敗した場合、あなたが使用する必要があります&lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query（）&lt;/a&gt;と&lt;a href=&quot;function.pg-get-result&quot;&gt;はpg_get_result（）&lt;/a&gt;結果のハンドルを取得します。</target>
        </trans-unit>
        <trans-unit id="c5120dccb79efabf5d3147b0b200e55fbd248b15" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;language.variables.variable&quot;&gt;variable variables&lt;/a&gt; may not be used with PHP's &lt;a href=&quot;language.variables.superglobals&quot;&gt;Superglobal arrays&lt;/a&gt; within functions, the Superglobal arrays may not be passed into &lt;strong&gt;compact()&lt;/strong&gt;.</source>
          <target state="translated">&lt;a href=&quot;language.variables.variable&quot;&gt;変数変数&lt;/a&gt;は関数内のPHPの&lt;a href=&quot;language.variables.superglobals&quot;&gt;スーパーグローバル配列&lt;/a&gt;では使用できないため、スーパーグローバル配列を&lt;strong&gt;compact（）に&lt;/strong&gt;渡すことはできません。</target>
        </trans-unit>
        <trans-unit id="707b3d9b37306e44b47f730a6b5cc39586c0ad1f" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;include&lt;/code&gt; is a special language construct, parentheses are not needed around its argument. Take care when comparing return value.</source>
          <target state="translated">ので &lt;code&gt;include&lt;/code&gt; 特殊な言語構造で、引数の前後に括弧は不要です。戻り値を比較するときは注意してください。</target>
        </trans-unit>
        <trans-unit id="43c0679fcf1d6bf845895686d83b7db80dc57e53" translate="yes" xml:space="preserve">
          <source>Because &lt;em&gt;include&lt;/em&gt; is a special language construct, parentheses are not needed around its argument. Take care when comparing return value.</source>
          <target state="translated">&lt;em&gt;include&lt;/em&gt;は特別な言語構造なので&lt;em&gt;、&lt;/em&gt;引数の前後に括弧は必要ありません。戻り値を比較するときは注意してください。</target>
        </trans-unit>
        <trans-unit id="6e9a18aac7f0175716b5c6f7f505c54e2978d687" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;&lt;code&gt;NAN&lt;/code&gt;&lt;/strong&gt; represents any number of different values, &lt;strong&gt;&lt;code&gt;NAN&lt;/code&gt;&lt;/strong&gt; should not be compared to other values, including itself, and instead should be checked for using &lt;a href=&quot;function.is-nan&quot;&gt;is_nan()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;NAN&lt;/code&gt; &lt;/strong&gt;は任意の数の異なる値を表すので、&lt;strong&gt; &lt;code&gt;NAN&lt;/code&gt; &lt;/strong&gt;はそれ自体を含む他の値と比較してはならず、代わりに&lt;a href=&quot;function.is-nan&quot;&gt;is_nan（）&lt;/a&gt;を使用してチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="742f63224d1d9d85f5fabbd407cd1910cf9bf7d1" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;flock()&lt;/strong&gt; requires a file pointer, you may have to use a special lock file to protect access to a file that you intend to truncate by opening it in write mode (with a &quot;w&quot; or &quot;w+&quot; argument to &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;).</source>
          <target state="translated">ので&lt;strong&gt;群れ（）は&lt;/strong&gt;、ファイルポインタを必要とし、あなたが（に「w」および「w +」引数を指定して書き込みモードで開くことで切り捨てるつもりというファイルにプロテクトのアクセスに特別なロックファイルを使用する必要があります&lt;a href=&quot;function.fopen&quot;&gt;）のfopen（&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ffe83cce56f87d2269de20db1e518c1cbde72dee" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;str_ireplace()&lt;/strong&gt; replaces left to right, it might replace a previously inserted value when doing multiple replacements. Example #2 in the &lt;a href=&quot;function.str-replace&quot;&gt;str_replace()&lt;/a&gt; documentation demonstrates how this may affect you in practice.</source>
          <target state="translated">ので&lt;strong&gt;str_ireplace（）&lt;/strong&gt;置き換えが左から右へ、複数の置換を行う場合、それは以前に挿入された値を置き換える可能性があります。&lt;a href=&quot;function.str-replace&quot;&gt;str_replace（）&lt;/a&gt;ドキュメントの例2は、これが実際にどのように影響するかを示しています。</target>
        </trans-unit>
        <trans-unit id="601d4991fce2daf08791e8b557ade7c881872cf9" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;str_replace()&lt;/strong&gt; replaces left to right, it might replace a previously inserted value when doing multiple replacements. See also the examples in this document.</source>
          <target state="translated">ので&lt;strong&gt;str_replace（）&lt;/strong&gt;置き換えが左から右へ、複数の置換を行う場合、それは以前に挿入された値を置き換える可能性があります。このドキュメントの例も参照してください。</target>
        </trans-unit>
        <trans-unit id="a52be145bfc844459a274ff8346f997d63677d3b" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;strip_tags()&lt;/strong&gt; does not actually validate the HTML, partial or broken tags can result in the removal of more text/data than expected.</source>
          <target state="translated">&lt;strong&gt;strip_tags（）&lt;/strong&gt;は実際にはHTMLを検証しないため、部分的なタグまたは壊れたタグにより、予想よりも多くのテキスト/データが削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="89ea17c60834c6ec5f4416ee8e82c2a0cafe4caf" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;trim()&lt;/strong&gt; trims characters from the beginning and end of a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, it may be confusing when characters are (or are not) removed from the middle. &lt;em&gt;trim('abc', 'bad')&lt;/em&gt; removes both 'a' and 'b' because it trims 'a' thus moving 'b' to the beginning to also be trimmed. So, this is why it &quot;works&quot; whereas &lt;em&gt;trim('abc', 'b')&lt;/em&gt; seemingly does not.</source>
          <target state="translated">ので&lt;strong&gt;トリム（）は&lt;/strong&gt;最初と最後の文字から切り詰め&lt;a href=&quot;language.types.string&quot;&gt;た文字列を&lt;/a&gt;文字がある（またはではありません）途中から取り出したときに、それが混乱を招くことがあります。&lt;em&gt;trim（ 'abc'、 'bad'）&lt;/em&gt;は、 'a'と 'b'の両方を削除します。これは、 'a'をトリムし、 'b'を最初に移動して、トリムも行うためです。したがって、これが「機能する」理由ですが、&lt;em&gt;trim（ 'abc'、 'b'）&lt;/em&gt;は機能しないようです。</target>
        </trans-unit>
        <trans-unit id="f7b5d6c96b08553c3eba3ad98a596321ec78d1e5" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;trim()&lt;/strong&gt; trims characters from the beginning and end of a string, it may be confusing when characters are (or are not) removed from the middle. &lt;code&gt;trim('abc', 'bad')&lt;/code&gt; removes both 'a' and 'b' because it trims 'a' thus moving 'b' to the beginning to also be trimmed. So, this is why it &quot;works&quot; whereas &lt;code&gt;trim('abc', 'b')&lt;/code&gt; seemingly does not.</source>
          <target state="translated">&lt;strong&gt;trim（）&lt;/strong&gt;は文字列の最初と最後から文字を&lt;strong&gt;トリミングする&lt;/strong&gt;ため、文字が中央から削除されている（または削除されていない）場合は混乱する可能性があります。 &lt;code&gt;trim('abc', 'bad')&lt;/code&gt; は、 'a'をトリミングし、 'b'を先頭に移動してトリミングするため、 'a'と 'b'の両方を削除します。したがって、これが「機能する」理由ですが、 &lt;code&gt;trim('abc', 'b')&lt;/code&gt; は機能しないようです。</target>
        </trans-unit>
        <trans-unit id="3ff6c8dcd728af9b42a4513d2b2ed01403471f4d" translate="yes" xml:space="preserve">
          <source>Because PHP determines the types of variables and converts them (generally) as needed, it is not always obvious what type a given variable is at any one time. PHP includes several functions which find out what type a variable is, such as: &lt;a href=&quot;function.gettype&quot;&gt;gettype()&lt;/a&gt;, &lt;a href=&quot;function.is-array&quot;&gt;is_array()&lt;/a&gt;, &lt;a href=&quot;function.is-float&quot;&gt;is_float()&lt;/a&gt;, &lt;a href=&quot;function.is-int&quot;&gt;is_int()&lt;/a&gt;, &lt;a href=&quot;function.is-object&quot;&gt;is_object()&lt;/a&gt;, and &lt;a href=&quot;function.is-string&quot;&gt;is_string()&lt;/a&gt;. See also the chapter on &lt;a href=&quot;https://secure.php.net/manual/en/language.types.php&quot;&gt;Types&lt;/a&gt;.</source>
          <target state="translated">PHPは変数のタイプを決定し、必要に応じてそれらを（通常は）変換するため、特定の変数が常にどのタイプであるかが常に明らかであるとは限りません。PHPには、変数のタイプを調べる関数がいくつか含まれています。たとえば、&lt;a href=&quot;function.gettype&quot;&gt;gettype（）&lt;/a&gt;、&lt;a href=&quot;function.is-array&quot;&gt;is_array（）&lt;/a&gt;、&lt;a href=&quot;function.is-float&quot;&gt;is_float（）&lt;/a&gt;、&lt;a href=&quot;function.is-int&quot;&gt;is_int（）&lt;/a&gt;、&lt;a href=&quot;function.is-object&quot;&gt;is_object（）&lt;/a&gt;、&lt;a href=&quot;function.is-string&quot;&gt;is_string（）など&lt;/a&gt;です。&lt;a href=&quot;https://secure.php.net/manual/en/language.types.php&quot;&gt;タイプ&lt;/a&gt;の章も参照してください。</target>
        </trans-unit>
        <trans-unit id="c5987147ace0cafd701c270c70f42960bda92561" translate="yes" xml:space="preserve">
          <source>Because PHP determines the types of variables and converts them (generally) as needed, it is not always obvious what type a given variable is at any one time. PHP includes several functions which find out what type a variable is, such as: &lt;a href=&quot;function.gettype&quot;&gt;gettype()&lt;/a&gt;, &lt;a href=&quot;function.is-array&quot;&gt;is_array()&lt;/a&gt;, &lt;a href=&quot;function.is-float&quot;&gt;is_float()&lt;/a&gt;, &lt;a href=&quot;function.is-int&quot;&gt;is_int()&lt;/a&gt;, &lt;a href=&quot;function.is-object&quot;&gt;is_object()&lt;/a&gt;, and &lt;a href=&quot;function.is-string&quot;&gt;is_string()&lt;/a&gt;. See also the chapter on &lt;a href=&quot;https://www.php.net/manual/en/language.types.php&quot;&gt;Types&lt;/a&gt;.</source>
          <target state="translated">PHPは変数のタイプを判別し、必要に応じて（一般的に）それらを変換するため、特定の変数が一度にどのタイプであるかが常に明確であるとは限りません。PHPのような変数を入力さ何かを見つけるいくつかの機能が含ま：&lt;a href=&quot;function.gettype&quot;&gt;GETTYPEを（） &lt;/a&gt;、&lt;a href=&quot;function.is-array&quot;&gt;IS_ARRAY（） &lt;/a&gt;、&lt;a href=&quot;function.is-float&quot;&gt;is_float（） &lt;/a&gt;、&lt;a href=&quot;function.is-int&quot;&gt;is_int（） &lt;/a&gt;、&lt;a href=&quot;function.is-object&quot;&gt;is_object（）、&lt;/a&gt;及び&lt;a href=&quot;function.is-string&quot;&gt;（）をIS_STRING&lt;/a&gt;。&lt;a href=&quot;https://www.php.net/manual/en/language.types.php&quot;&gt;タイプ&lt;/a&gt;の章も参照してください。</target>
        </trans-unit>
        <trans-unit id="5b92cda521a70c5a78c5cea8c208937866a5d133" translate="yes" xml:space="preserve">
          <source>Because PHP's &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; type is signed, and many IP addresses will result in negative integers on 32-bit architectures, you need to use the &quot;%u&quot; formatter of &lt;a href=&quot;function.sprintf&quot;&gt;sprintf()&lt;/a&gt; or &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt; to get the string representation of the unsigned IP address.</source>
          <target state="translated">PHPの&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;型は署名されており、32ビットアーキテクチャでは多くのIPアドレスが負の整数になるため、&lt;a href=&quot;function.sprintf&quot;&gt;sprintf（）&lt;/a&gt;または&lt;a href=&quot;function.printf&quot;&gt;printf（）&lt;/a&gt;の「％u」フォーマッタを使用して、署名されていないIPアドレスの文字列表現を取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="d34c12a4956aee19b30d8eb0b61cf6742eab1f3c" translate="yes" xml:space="preserve">
          <source>Because PHP's int type is signed, and many IP addresses will result in negative integers on 32-bit architectures, you need to use the &quot;%u&quot; formatter of &lt;a href=&quot;function.sprintf&quot;&gt;sprintf()&lt;/a&gt; or &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt; to get the string representation of the unsigned IP address.</source>
          <target state="translated">PHPのint型は符号付きであり、多くのIPアドレスは32ビットアーキテクチャで負の整数になるため、符号なしIPアドレスの文字列表現を取得するには、&lt;a href=&quot;function.sprintf&quot;&gt;sprintf（）&lt;/a&gt;または&lt;a href=&quot;function.printf&quot;&gt;printf（）&lt;/a&gt;の「％u」フォーマッタを使用する必要があります。 。</target>
        </trans-unit>
        <trans-unit id="f9b14713cb8d30151df19327a73df314083c44f3" translate="yes" xml:space="preserve">
          <source>Because PHP's integer type is signed many crc32 checksums will result in negative integers on 32bit platforms. On 64bit installations all &lt;strong&gt;crc32()&lt;/strong&gt; results will be positive integers though.</source>
          <target state="translated">PHPの整数型は署名されているため、32ビットプラットフォームでは、多くのcrc32チェックサムが負の整数になります。64ビットのインストールでは、すべての&lt;strong&gt;crc32（）の&lt;/strong&gt;結果は正の整数になります。</target>
        </trans-unit>
        <trans-unit id="c894ceefd472b3bba662f5376d811990b775c61d" translate="yes" xml:space="preserve">
          <source>Because assigning an array to another variable resets the original array's pointer, our example above would cause an endless loop had we assigned &lt;var&gt;$fruit&lt;/var&gt; to another variable inside the loop.</source>
          <target state="translated">配列を別の変数に割り当てると元の配列のポインターがリセットされるため、上記の例では、ループ内の別の変数に &lt;var&gt;$fruit&lt;/var&gt; を割り当てた場合に無限ループが発生します。</target>
        </trans-unit>
        <trans-unit id="b35f550177e1513f2591c2057c0eaa8c209ae060" translate="yes" xml:space="preserve">
          <source>Because assigning an array to another variable resets the original array's pointer, our example above would cause an endless loop had we assigned &lt;var&gt;&lt;var&gt;$fruit&lt;/var&gt;&lt;/var&gt; to another variable inside the loop.</source>
          <target state="translated">配列を別の変数に割り当てると元の配列のポインターがリセットされるため、上記の例ではループ内の別の変数に &lt;var&gt;&lt;var&gt;$fruit&lt;/var&gt;&lt;/var&gt; を割り当てた場合、無限ループが発生します。</target>
        </trans-unit>
        <trans-unit id="42fbfd636633285fa330d6691aa389758b00d9e3" translate="yes" xml:space="preserve">
          <source>Because every system is setup differently, &lt;strong&gt;phpinfo()&lt;/strong&gt; is commonly used to check &lt;a href=&quot;https://secure.php.net/manual/en/configuration.php&quot;&gt;configuration settings&lt;/a&gt; and for available &lt;a href=&quot;language.variables.predefined&quot;&gt;predefined variables&lt;/a&gt; on a given system.</source>
          <target state="translated">システムごとに設定が異なるため、&lt;strong&gt;phpinfo（）&lt;/strong&gt;は一般に、&lt;a href=&quot;https://secure.php.net/manual/en/configuration.php&quot;&gt;構成設定&lt;/a&gt;をチェックしたり、特定のシステムで利用可能な&lt;a href=&quot;language.variables.predefined&quot;&gt;事前定義された変数&lt;/a&gt;を確認したりするために使用されます。</target>
        </trans-unit>
        <trans-unit id="0b96f85154747acf3dfbaab879c6fe4e498b16ad" translate="yes" xml:space="preserve">
          <source>Because every system is setup differently, &lt;strong&gt;phpinfo()&lt;/strong&gt; is commonly used to check &lt;a href=&quot;https://www.php.net/manual/en/configuration.php&quot;&gt;configuration settings&lt;/a&gt; and for available &lt;a href=&quot;language.variables.predefined&quot;&gt;predefined variables&lt;/a&gt; on a given system.</source>
          <target state="translated">システムごとにセットアップが異なるため、&lt;strong&gt;phpinfo（）&lt;/strong&gt;は通常、&lt;a href=&quot;https://www.php.net/manual/en/configuration.php&quot;&gt;構成設定&lt;/a&gt;を確認したり、特定のシステムで使用可能な&lt;a href=&quot;language.variables.predefined&quot;&gt;事前定義された変数&lt;/a&gt;を確認したりするために使用されます。</target>
        </trans-unit>
        <trans-unit id="217f649fbba901b97556d64564224606c0cc7d37" translate="yes" xml:space="preserve">
          <source>Because of eccentricities in the performance of libresolv between platforms, &lt;strong&gt;&lt;code&gt;DNS_ANY&lt;/code&gt;&lt;/strong&gt; will not always return every record, the slower &lt;strong&gt;&lt;code&gt;DNS_ALL&lt;/code&gt;&lt;/strong&gt; will collect all records more reliably.</source>
          <target state="translated">プラットフォーム間のlibresolvのパフォーマンスの偏りのため、&lt;strong&gt; &lt;code&gt;DNS_ANY&lt;/code&gt; &lt;/strong&gt;は常にすべてのレコードを返すわけではなく、遅い&lt;strong&gt; &lt;code&gt;DNS_ALL&lt;/code&gt; &lt;/strong&gt;はすべてのレコードをより確実に収集します。</target>
        </trans-unit>
        <trans-unit id="911305148cc73c28fbb531f6591a7ddb6eed0b55" translate="yes" xml:space="preserve">
          <source>Because of the way &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;s are represented internally, you should not test two &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;s for equality.</source>
          <target state="translated">&lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;の内部表現方法のため、2つの&lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;が等しいかどうかをテストしないでください。</target>
        </trans-unit>
        <trans-unit id="5e48c1f44233ae24e06e0af7996ba647ac6d3350" translate="yes" xml:space="preserve">
          <source>Because of the way floats are represented internally, you should not test two floats for equality.</source>
          <target state="translated">フロートは内部的に表現されているため、2つのフロートが等しいかどうかをテストすべきではありません。</target>
        </trans-unit>
        <trans-unit id="8e2140f28ef482edb6906f2ffa9ab21aba29bce8" translate="yes" xml:space="preserve">
          <source>Because setting a cookie with a value of &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; will try to delete the cookie, you should not use boolean values. Instead, use &lt;em&gt;0&lt;/em&gt; for &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; and &lt;em&gt;1&lt;/em&gt; for &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; の&lt;/strong&gt;値でCookieを設定すると、Cookieが削除さ&lt;strong&gt;れよ&lt;/strong&gt;うとするため、ブール値を使用しないでください。代わりに、使用して&lt;em&gt;0に&lt;/em&gt;するために&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;と&lt;em&gt;1&lt;/em&gt;のために&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a1a8311163adfab33d0c4f1d4491af809fca3e1c" translate="yes" xml:space="preserve">
          <source>Because setting a cookie with a value of &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; will try to delete the cookie, you should not use boolean values. Instead, use &lt;em&gt;0&lt;/em&gt; for &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; and &lt;em&gt;1&lt;/em&gt; for &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; の&lt;/strong&gt;値でCookieを設定すると、Cookieが削除されようとするため、ブール値を使用しないでください。代わりに、使用して&lt;em&gt;0に&lt;/em&gt;するために&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;と&lt;em&gt;1&lt;/em&gt;のために&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="26b678259551b67f88992e9b46c5014cab0d739b" translate="yes" xml:space="preserve">
          <source>Because static methods are callable without an instance of the object created, the pseudo-variable &lt;var&gt;$this&lt;/var&gt; is not available inside the method declared as static.</source>
          <target state="translated">静的メソッドは、オブジェクトのインスタンスが作成されていなくても呼び出すことができるため、静的として宣言されたメソッド内では疑似変数 &lt;var&gt;$this&lt;/var&gt; を使用できません。</target>
        </trans-unit>
        <trans-unit id="2a8e48a3bfc93a9a70219fcffda2fc4f64c90a93" translate="yes" xml:space="preserve">
          <source>Because static methods are callable without an instance of the object created, the pseudo-variable &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; is not available inside the method declared as static.</source>
          <target state="translated">静的メソッドは作成されたオブジェクトのインスタンスがなくても呼び出すことができるため、疑似変数 &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; は静的として宣言されたメソッド内では使用できません。</target>
        </trans-unit>
        <trans-unit id="e82ceeddeebe2487481ffc2480c9013ef5873411" translate="yes" xml:space="preserve">
          <source>Because the &lt;strong&gt;SessionHandler&lt;/strong&gt; wraps the current internal save handler methods, the above example of encryption can be applied to any internal save handler without having to know the internals of the handlers.</source>
          <target state="translated">&lt;strong&gt;SessionHandler&lt;/strong&gt;は現在の内部保存ハンドラーメソッドをラップするため、上記の暗号化の例は、ハンドラーの内部を知らなくても、任意の内部保存ハンドラーに適用できます。</target>
        </trans-unit>
        <trans-unit id="e213c6bd57cae2bea79f07fe13195bbebd479202" translate="yes" xml:space="preserve">
          <source>Because the effects may vary depending on the ODBC driver, use of this function in scripts to be made publicly available is strongly discouraged. Also, some ODBC options are not available to this function because they must be set before the connection is established or the query is prepared. However, if on a particular job it can make PHP work so your boss doesn't tell you to use a commercial product, that's all that really matters.</source>
          <target state="translated">ODBCドライバによって影響が異なる場合があるため、公開するスクリプトでこの関数を使用することは強くお勧めしません。また、ODBCのオプションの中には、接続が確立される前やクエリが準備される前に設定しなければならないものがあるため、この関数を利用できないものもあります。しかし、特定の仕事でPHPを動作させることができ、 上司から商用製品を使うように言われないのであれば、それだけで十分です。</target>
        </trans-unit>
        <trans-unit id="37904d2e4f8679067efe067a14482bc70d2b1533" translate="yes" xml:space="preserve">
          <source>Because the value of an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; can be anything, it can also be another &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;. This enables the creation of recursive and multi-dimensional &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;language.types.array&quot;&gt;配列&lt;/a&gt;の値は何でもかまいませんので、別の&lt;a href=&quot;language.types.array&quot;&gt;配列に&lt;/a&gt;することもできます。これにより、再帰的な多次元&lt;a href=&quot;language.types.array&quot;&gt;配列&lt;/a&gt;の作成が可能になります。</target>
        </trans-unit>
        <trans-unit id="c9f630d1c2c9ce7b045e5d9758d1f87744817e23" translate="yes" xml:space="preserve">
          <source>Because the value of an array can be anything, it can also be another array. This enables the creation of recursive and multi-dimensional arrays.</source>
          <target state="translated">配列の値は何でもいいので、別の配列にすることもできます。これにより、再帰配列や多次元配列の作成が可能になります。</target>
        </trans-unit>
        <trans-unit id="7600e311083b907d09d32fc5aa79f89e788419fc" translate="yes" xml:space="preserve">
          <source>Because there are so many methods, here is a handy list of methods, somewhat reduced to their general purpose:</source>
          <target state="translated">非常に多くの方法があるので、ここでは、彼らの一般的な目的にやや縮小された方法の便利なリストです。</target>
        </trans-unit>
        <trans-unit id="44f1dbda51e44db8cdd5ab6b41daf995d5fdd0ae" translate="yes" xml:space="preserve">
          <source>Because this function depends on the current scope to determine parameter details, it cannot be used as a function parameter in versions prior to 5.3.0. If this value must be passed, the results should be assigned to a variable, and that variable should be passed.</source>
          <target state="translated">この関数は、パラメータの詳細を決定するために現在のスコープに依存するため、5.3.0以前のバージョンでは関数パラメータとして使用できません。この値を渡さなければならない場合は、結果を変数に代入し、その変数を渡さなければなりません。</target>
        </trans-unit>
        <trans-unit id="61b1f70c4aee7fe9b93217818cc16d2125d2548a" translate="yes" xml:space="preserve">
          <source>Because this method uses the modulus operation, numbers which are not positive integers may give unexpected results.</source>
          <target state="translated">この方法はモジュラス演算を使用しているため、正の整数ではない数値は予想外の結果が出ることがあります。</target>
        </trans-unit>
        <trans-unit id="4fc01d72c49409313e152894c7abb5f87c011025" translate="yes" xml:space="preserve">
          <source>Because variables in PHP can't have dots and spaces in their names, those are converted to underscores. Same applies to naming of respective key names in case of using this function with &lt;code&gt;result&lt;/code&gt; parameter.</source>
          <target state="translated">PHPの変数では、名前にドットとスペースを含めることができないため、それらはアンダースコアに変換されます。この関数を &lt;code&gt;result&lt;/code&gt; パラメーターと共に使用する場合のそれぞれのキー名の命名にも同じことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="ca01b1c09bf5d855a028d6e0ee64dc156b0d9e7a" translate="yes" xml:space="preserve">
          <source>Before 5.3.6, the only values recognized are &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, which are the same as setting or not setting the &lt;strong&gt;&lt;code&gt;DEBUG_BACKTRACE_PROVIDE_OBJECT&lt;/code&gt;&lt;/strong&gt; option respectively.</source>
          <target state="translated">5.3.6より前では、認識される値は&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;または&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;のみであり、それぞれ&lt;strong&gt; &lt;code&gt;DEBUG_BACKTRACE_PROVIDE_OBJECT&lt;/code&gt; &lt;/strong&gt;オプションを設定するか設定しないかと同じです。</target>
        </trans-unit>
        <trans-unit id="ddcbfe56823d07f45b8421377b8cd0994e95989f" translate="yes" xml:space="preserve">
          <source>Before 5.3.6, the only values recognized are &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;, which are the same as setting or not setting the &lt;strong&gt;&lt;code&gt;DEBUG_BACKTRACE_PROVIDE_OBJECT&lt;/code&gt;&lt;/strong&gt; option respectively.</source>
          <target state="translated">5.3.6より前では、認識される値は&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;または&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;のみであり、それぞれ&lt;strong&gt; &lt;code&gt;DEBUG_BACKTRACE_PROVIDE_OBJECT&lt;/code&gt; &lt;/strong&gt;オプションを設定するか設定しないかと同じです。</target>
        </trans-unit>
        <trans-unit id="3e5d80f3812d2931324bb9f0c6f55b47963a5319" translate="yes" xml:space="preserve">
          <source>Before PHP 5.1.0, negative timestamps were not supported under any known version of Windows and some other systems as well. Therefore the range of valid years was limited to 1970 through 2038.</source>
          <target state="translated">PHP 5.1.0以前のバージョンでは、既知のWindowsやその他のシステムでは負のタイムスタンプはサポートされていませんでした。そのため、有効な年の範囲は1970年から2038年までに制限されていました。</target>
        </trans-unit>
        <trans-unit id="f17ced3ef8abb6d18ca80a5e343e53522756984c" translate="yes" xml:space="preserve">
          <source>Before PHP 5.1.0, this function returned &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; when &lt;code&gt;text&lt;/code&gt; was an empty string.</source>
          <target state="translated">PHP 5.1.0より前は、 &lt;code&gt;text&lt;/code&gt; が空の文字列の場合、この関数は&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; を&lt;/strong&gt;返しました。</target>
        </trans-unit>
        <trans-unit id="ffe6e051f6ef47bce95796f19518997c457552b4" translate="yes" xml:space="preserve">
          <source>Before PHP 5.3.4, on Windows, &lt;strong&gt;sleep()&lt;/strong&gt; always returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; when sleep has occurred, regardless of whether the sleep was interrupted or not.</source>
          <target state="translated">PHP 5.3.4より前のWindowsでは、スリープが中断されたかどうかに関係なく、スリープが発生すると、&lt;strong&gt;sleep（）は&lt;/strong&gt;常に&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;を返し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="b1bfed4a6b9231dcc874a27d99a85c9060365b4c" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4, referenced variables in &lt;code&gt;param_arr&lt;/code&gt; are passed to the function by reference, regardless of whether the function expects the respective parameter to be passed by reference. This form of call-time pass by reference does not emit a deprecation notice, but it is nonetheless deprecated, and has been removed in PHP 5.4. Furthermore, this does not apply to internal functions, for which the function signature is honored. Passing by value when the function expects a parameter by reference results in a warning and having &lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func()&lt;/a&gt; return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; (there is, however, an exception for passed values with reference count = 1, such as in literals, as these can be turned into references without ill effects &amp;mdash; but also without writes to that value having any effect &amp;mdash;; do not rely in this behavior, though, as the reference count is an implementation detail and the soundness of this behavior is questionable).</source>
          <target state="translated">PHP 5.4より前の &lt;code&gt;param_arr&lt;/code&gt; は、param_arrで参照される変数は、関数がそれぞれのパラメーターが参照によって渡されることを期待しているかどうかに関係なく、参照によって関数に渡されます。この形式の参照による呼び出し時の受け渡しは廃止の通知を発行しませんが、それでも廃止予定であり、PHP 5.4で削除されました。さらに、これは関数シグネチャが受け入れられる内部関数には適用されません。関数が参照によるパラメーターを予期しているときに値を渡すと警告が発生し、&lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func（）&lt;/a&gt;が&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; を&lt;/strong&gt;返す&lt;strong&gt;&lt;/strong&gt; （ただし、リテラルなどの参照カウント= 1の渡された値には例外があり、これらは悪影響を与えることなく参照に変換できますが、その値への書き込みも影響を与えないため、これに依存しないでください。ただし、参照カウントは実装の詳細であり、この動作の健全性は疑わしいため）。</target>
        </trans-unit>
        <trans-unit id="c7ca3590d747837c0bf014c5da509a83d0228191" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4, referenced variables in &lt;code&gt;param_arr&lt;/code&gt; are passed to the function by reference, regardless of whether the function expects the respective parameter to be passed by reference. This form of call-time pass by reference does not emit a deprecation notice, but it is nonetheless deprecated, and has been removed in PHP 5.4. Furthermore, this does not apply to internal functions, for which the function signature is honored. Passing by value when the function expects a parameter by reference results in a warning and having &lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func()&lt;/a&gt; return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; (there is, however, an exception for passed values with reference count = 1, such as in literals, as these can be turned into references without ill effects &amp;mdash; but also without writes to that value having any effect &amp;mdash;; do not rely in this behavior, though, as the reference count is an implementation detail and the soundness of this behavior is questionable).</source>
          <target state="translated">PHP 5.4より前では、 &lt;code&gt;param_arr&lt;/code&gt; 内の参照変数は、関数がそれぞれのパラメーターが参照によって渡されることを期待しているかどうかに関係なく、参照によって関数に渡されます。この形式の参照による呼び出し時間パスは非推奨通知を発行しませんが、それでも非推奨であり、PHP5.4で削除されました。さらに、これは、関数のシグネチャが尊重される内部関数には適用されません。関数が参照によってパラメーターを予期しているときに値を渡すと、警告が表示され、&lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func（）&lt;/a&gt;が&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; を&lt;/strong&gt;返し&lt;strong&gt;ます。&lt;/strong&gt; （ただし、リテラルなど、参照カウント= 1の渡された値には例外があります。これらは、悪影響を与えることなく参照に変換できますが、その値への書き込みが影響を与えることもありません。これに依存しないでください。ただし、参照カウントは実装の詳細であり、この動作の健全性には疑問があるため、動作。</target>
        </trans-unit>
        <trans-unit id="510fd6e833a9aac4303574941451c687288f37c7" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4.20/5.5.4 instead of &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; you will receive -99999 upon accessing the property.</source>
          <target state="translated">PHP 5.4.20 / 5.5.4より前のバージョンでは、&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;ではなく、プロパティにアクセスすると-99999が返されます。</target>
        </trans-unit>
        <trans-unit id="bdd369a7a408a9db765b644cddba5043413d0c93" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4.20/5.5.4 instead of &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; you will receive -99999 upon accessing the property.</source>
          <target state="translated">PHP 5.4.20 / 5.5.4より前では、&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;ではなくプロパティにアクセスすると-99999を受け取ります。</target>
        </trans-unit>
        <trans-unit id="be43398b62b0b32337b176ab32227c952f58c12f" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4.42 and 5.5.27, repectively, &lt;code&gt;additional_headers&lt;/code&gt; did not have mail header injection protection. Therefore, users must make sure specified headers are safe and contains headers only. i.e. Never start mail body by putting multiple newlines.</source>
          <target state="translated">PHP 5.4.42および5.5.27以前は、それぞれ、 &lt;code&gt;additional_headers&lt;/code&gt; にメールヘッダーインジェクション保護がありませんでした。したがって、ユーザーは指定したヘッダーが安全であり、ヘッダーのみが含まれていることを確認する必要があります。つまり、複数の改行を入れてメール本文を開始しないでください。</target>
        </trans-unit>
        <trans-unit id="e59c4ecdbb1feedbbc002bb207c9d11b29754678" translate="yes" xml:space="preserve">
          <source>Before PHP 5.5.0, referencing &lt;em&gt;$value&lt;/em&gt; is only possible if the iterated array can be referenced (i.e. if it is a variable). The following code works only as of PHP 5.5.0:</source>
          <target state="translated">PHP 5.5.0以前では、&lt;em&gt;$ valueの&lt;/em&gt;参照は、反復配列を参照できる場合（つまり、変数である場合）にのみ可能です。次のコードは、PHP 5.5.0以降でのみ機能します。</target>
        </trans-unit>
        <trans-unit id="92600367e7e9130bdb17942278729aa77c98aed0" translate="yes" xml:space="preserve">
          <source>Before PHP 5.5.0, this function is only available if PHP is compiled with the bundled version of the GD library.</source>
          <target state="translated">PHP 5.5.5.0 より前のバージョンでは、この関数は PHP がバンドルされたバージョンの GD ライブラリでコンパイルされている場合にのみ使用可能です。</target>
        </trans-unit>
        <trans-unit id="815c0b744ffd33bbff0ec709407ba2c3b802fa94" translate="yes" xml:space="preserve">
          <source>Before PHP 5.6 neither functions nor constants can be imported via the &lt;em&gt;use&lt;/em&gt; statement.</source>
          <target state="translated">PHP 5.6より前のバージョンでは、&lt;em&gt;use&lt;/em&gt;ステートメントを&lt;em&gt;使用して&lt;/em&gt;関数や定数をインポートすることはできません。</target>
        </trans-unit>
        <trans-unit id="66a06e73e512895f01253fc9f996f1a9949eb62c" translate="yes" xml:space="preserve">
          <source>Before PHP 5.6 the only elements that are affected by &lt;em&gt;use&lt;/em&gt; statements are namespaces and class names. In order to shorten a long constant or function, import its containing namespace.</source>
          <target state="translated">PHP 5.6以前は、&lt;em&gt;use&lt;/em&gt;ステートメントの影響を受ける要素は名前空間とクラス名だけです。長い定数または関数を短くするには、その名前空間をインポートします。</target>
        </trans-unit>
        <trans-unit id="e6126181ebef6a388513462befc67a17421cb707" translate="yes" xml:space="preserve">
          <source>Before PHP 7, &lt;strong&gt;Exception&lt;/strong&gt; did not implement the &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; interface.</source>
          <target state="translated">PHP 7以前は、&lt;strong&gt;Exception&lt;/strong&gt;は&lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt;インターフェースを実装していませんでした。</target>
        </trans-unit>
        <trans-unit id="0866e3f7b1f82f98ecefa82f900e0d52a4660c42" translate="yes" xml:space="preserve">
          <source>Before PHP 7.0.0, &lt;strong&gt;ftp_ssl_connect()&lt;/strong&gt; was only available if both the ftp module and the &lt;a href=&quot;https://www.php.net/manual/en/ref.openssl.php&quot;&gt;OpenSSL&lt;/a&gt; support have been built statically into php; this means that on Windows this function had been undefined in the official PHP builds. To have this function available on Windows, it had been necessary to compile own PHP binaries.</source>
          <target state="translated">PHP 7.0.0より前は、&lt;strong&gt;ftp_ssl_connect（）&lt;/strong&gt;は、ftpモジュールと&lt;a href=&quot;https://www.php.net/manual/en/ref.openssl.php&quot;&gt;OpenSSL&lt;/a&gt;サポートの両方が静的にphpに組み込まれている場合にのみ使用可能でした。これは、Windowsでは、この関数が公式のPHPビルドで定義されていなかったことを意味します。この関数をWindowsで使用できるようにするには、独自のPHPバイナリをコンパイルする必要がありました。</target>
        </trans-unit>
        <trans-unit id="4921bd6888421cc59367b27d1350f2e32009145e" translate="yes" xml:space="preserve">
          <source>Before PHP 7.1.0, &lt;strong&gt;list()&lt;/strong&gt; only worked on numerical arrays and assumes the numerical indices start at 0.</source>
          <target state="translated">PHP 7.1.0より前のバージョンでは、&lt;strong&gt;list（）&lt;/strong&gt;は数値配列でのみ機能し、数値インデックスは0から始まると想定していました。</target>
        </trans-unit>
        <trans-unit id="6c386aa444d2af85b7f3ddf09660ebdb15e7ce89" translate="yes" xml:space="preserve">
          <source>Before PHP 7.1.0, rewrite vars set by &lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;output_add_rewrite_var()&lt;/a&gt; use the same Session module trans sid output buffer. Since PHP 7.1.0, dedicated output buffer is used and &lt;strong&gt;output_reset_rewrite_vars()&lt;/strong&gt; only removes rewrite vars defined by &lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;output_add_rewrite_var()&lt;/a&gt;.</source>
          <target state="translated">PHP &lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;7.1.0&lt;/a&gt;より前のバージョンでは、output_add_rewrite_var（）によって設定された変数を書き換え、同じセッションモジュールのトランスSID出力バッファを使用します。PHP 7.1.0以降、専用の出力バッファーが使用され、&lt;strong&gt;output_reset_rewrite_vars（）&lt;/strong&gt;は&lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;output_add_rewrite_var（）&lt;/a&gt;によって定義された書き換え変数のみを削除します。</target>
        </trans-unit>
        <trans-unit id="630bdb3ba2cc6dc0b0bd50ec241d00529ccb0fb8" translate="yes" xml:space="preserve">
          <source>Before PHP 7.1.0, rewrite vars set by &lt;strong&gt;output_add_rewrite_var()&lt;/strong&gt; use the same Session module trans sid output buffer. Since PHP 7.1.0, dedicated output buffer is used, &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt; url_rewriter.tags&lt;/a&gt; is used solely for output functions, &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;url_rewriter.hosts&lt;/a&gt; is added.</source>
          <target state="translated">PHP &lt;strong&gt;7.1.0&lt;/strong&gt;より前の&lt;strong&gt;バージョンでは&lt;/strong&gt;、&lt;strong&gt;output_add_rewrite_var（）&lt;/strong&gt;によって設定された変数を書き換え、同じセッションモジュールのトランス&lt;strong&gt;SID&lt;/strong&gt;出力バッファを使用します。PHP &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;7.1.0&lt;/a&gt;以降、専用の出力バッファーが使用され、url_rewriter.tagsは出力関数専用に使用され、&lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;url_rewriter.hosts&lt;/a&gt;が追加されます。</target>
        </trans-unit>
        <trans-unit id="cf4465e3e9543bb1838d86a142da5d1cbf2fbefd" translate="yes" xml:space="preserve">
          <source>Before PHP 7.1.0, rewrite vars set by &lt;strong&gt;output_add_rewrite_var()&lt;/strong&gt; use the same Session module trans sid output buffer. Since PHP 7.1.0, dedicated output buffer is used, &lt;a href=&quot;https://www.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt; url_rewriter.tags&lt;/a&gt; is used solely for output functions, &lt;a href=&quot;https://www.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;url_rewriter.hosts&lt;/a&gt; is added.</source>
          <target state="translated">PHP &lt;strong&gt;7.1.0&lt;/strong&gt;より前では、&lt;strong&gt;output_add_rewrite_var（）&lt;/strong&gt;によって設定された書き換え変数は同じSessionモジュールの&lt;strong&gt;transsid&lt;/strong&gt;出力バッファーを使用します。 PHP &lt;a href=&quot;https://www.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;7.1.0&lt;/a&gt;以降、専用の出力バッファーが使用され、url_rewriter.tagsは出力関数にのみ使用され、&lt;a href=&quot;https://www.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;url_rewriter.hosts&lt;/a&gt;が追加されます。</target>
        </trans-unit>
        <trans-unit id="c01d465c5c2fbfadc4ae15aaf091cc68adaa4450" translate="yes" xml:space="preserve">
          <source>Before PHP 7.2.0 the only means to get a list of supported hash algorithms has been to call &lt;a href=&quot;function.hash-algos&quot;&gt;hash_algos()&lt;/a&gt; which also returns hash algorithms that are not suitable for &lt;a href=&quot;function.hash-hmac&quot;&gt;hash_hmac()&lt;/a&gt;.</source>
          <target state="translated">PHP 7.2.0より前の&lt;a href=&quot;function.hash-algos&quot;&gt;バージョンで&lt;/a&gt;は、サポートされているハッシュアルゴリズムのリストを取得する唯一の方法は、hash_almacs（）を呼び出すことでした。これは、&lt;a href=&quot;function.hash-hmac&quot;&gt;hash_hmac（）に&lt;/a&gt;適さないハッシュアルゴリズムも返します。</target>
        </trans-unit>
        <trans-unit id="6c6817a10818266d972624c04b1851d48cb6b012" translate="yes" xml:space="preserve">
          <source>Before PHP 7.2.14 and 7.3.0, respectively, &lt;a href=&quot;sqlite3stmt.reset&quot;&gt;SQLite3Stmt::reset()&lt;/a&gt; must be called after the first call to &lt;a href=&quot;sqlite3stmt.execute&quot;&gt;SQLite3Stmt::execute()&lt;/a&gt; if the bound value should be properly updated on following calls to &lt;a href=&quot;sqlite3stmt.execute&quot;&gt;SQLite3Stmt::execute()&lt;/a&gt;. If &lt;a href=&quot;sqlite3stmt.reset&quot;&gt;SQLite3Stmt::reset()&lt;/a&gt; is not called, the bound value will not change, even if the value assigned to the variable passed to &lt;strong&gt;SQLite3Stmt::bindParam()&lt;/strong&gt; has changed, or &lt;strong&gt;SQLite3Stmt::bindParam()&lt;/strong&gt; has been called again.</source>
          <target state="translated">PHP 7.2.14前と7.3.0、それぞれ、&lt;a href=&quot;sqlite3stmt.reset&quot;&gt;SQLite3Stmt ::リセット（）&lt;/a&gt;への最初の呼び出し後に呼び出されなければならない&lt;a href=&quot;sqlite3stmt.execute&quot;&gt;SQLite3Stmt ::実行（）&lt;/a&gt;バインドされた値が適切に呼び出し、次に更新すべきかどう&lt;a href=&quot;sqlite3stmt.execute&quot;&gt;SQLite3Stmtを::実行（）&lt;/a&gt;。場合&lt;a href=&quot;sqlite3stmt.reset&quot;&gt;SQLite3Stmt ::リセット（）が&lt;/a&gt;呼び出されない、バインドされた値が変数に割り当てられた値が渡さ場合でも、変更されません&lt;strong&gt;SQLite3Stmt :: bindParam（）&lt;/strong&gt;変更されている、または&lt;strong&gt;SQLite3Stmt :: bindParam（）&lt;/strong&gt;を再び呼び出されています。</target>
        </trans-unit>
        <trans-unit id="459d4ca7882f60dd0df48f13f53904fc22594c6e" translate="yes" xml:space="preserve">
          <source>Before PHP 7.2.14 and 7.3.0, respectively, once the statement has been executed, &lt;a href=&quot;sqlite3stmt.reset&quot;&gt;SQLite3Stmt::reset()&lt;/a&gt; needs to be called to be able to change the value of bound parameters.</source>
          <target state="translated">PHP 7.2.14および7.3.0より前では、ステートメントが実行され&lt;a href=&quot;sqlite3stmt.reset&quot;&gt;たら&lt;/a&gt;、バインドされたパラメーターの値を変更できるようにSQLite3Stmt :: reset（）を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="3d9caf436270651a87ebf4561be6925341a4bc2c" translate="yes" xml:space="preserve">
          <source>Before PHP 7.3, any strings that are not set will silently be skipped.</source>
          <target state="translated">PHP 7.3 より前のバージョンでは、設定されていない文字列は静かにスキップされます。</target>
        </trans-unit>
        <trans-unit id="29eb1713f56cee95f0551e5b9c435a58142b4fd8" translate="yes" xml:space="preserve">
          <source>Before PHP 7.3.0 &lt;strong&gt;bcmul()&lt;/strong&gt; may return a result with fewer digits after the decimal point than the &lt;code&gt;scale&lt;/code&gt; parameter would indicate. This only occurs when the result doesn't require all of the precision allowed by the &lt;code&gt;scale&lt;/code&gt;. For example:</source>
          <target state="translated">PHP 7.3.0より前のバージョンでは、&lt;strong&gt;bcmul（）&lt;/strong&gt;は小数点以下の桁数が &lt;code&gt;scale&lt;/code&gt; パラメータが示すよりも少ない結果を返す場合があります。これは、 &lt;code&gt;scale&lt;/code&gt; 許可されているすべての精度が結果に必要ない場合にのみ発生します。例えば：</target>
        </trans-unit>
        <trans-unit id="a2ab771fbab9ca5a9adda658971433f699554dab" translate="yes" xml:space="preserve">
          <source>Before PHP 7.3.0 &lt;strong&gt;bcpow()&lt;/strong&gt; may return a result with fewer digits after the decimal point than the &lt;code&gt;scale&lt;/code&gt; parameter would indicate. This only occurs when the result doesn't require all of the precision allowed by the &lt;code&gt;scale&lt;/code&gt;. For example:</source>
          <target state="translated">PHP 7.3.0より前のバージョンでは、&lt;strong&gt;bcpow（）&lt;/strong&gt;は小数点以下の桁数が &lt;code&gt;scale&lt;/code&gt; パラメータが示すよりも少ない結果を返す場合があります。これは、 &lt;code&gt;scale&lt;/code&gt; 許可されているすべての精度が結果に必要ない場合にのみ発生します。例えば：</target>
        </trans-unit>
        <trans-unit id="c32ee470457a0e760bfbeaf8f3481d8b3464da7f" translate="yes" xml:space="preserve">
          <source>Before discussing the use of namespaces, it is important to understand how PHP knows which namespaced element your code is requesting. A simple analogy can be made between PHP namespaces and a filesystem. There are three ways to access a file in a file system:</source>
          <target state="translated">名前空間の使用法について説明する前に、あなたのコードがどの名前空間要素を要求しているのかを PHP がどのようにして知っているのかを理解しておくことが重要です。PHP の名前空間とファイルシステムを簡単に例えることができます。ファイルシステム内のファイルにアクセスするには、3つの方法があります。</target>
        </trans-unit>
        <trans-unit id="a92ef98c6ec8a3256c62567e91107d8bffb5ea2d" translate="yes" xml:space="preserve">
          <source>Before issuing any Radius requests, the library must be made aware of the servers it can contact. The easiest way to configure the library is to call &lt;strong&gt;radius_config()&lt;/strong&gt;. &lt;strong&gt;radius_config()&lt;/strong&gt; causes the library to read a configuration file whose format is described in &lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=radius.conf&quot;&gt;&amp;raquo; radius.conf&lt;/a&gt;.</source>
          <target state="translated">Radiusリクエストを発行する前に、ライブラリは接続できるサーバーを認識している必要があります。ライブラリを構成する最も簡単な方法は、&lt;strong&gt;radius_config（）&lt;/strong&gt;を呼び出すこと&lt;strong&gt;です&lt;/strong&gt;。&lt;strong&gt;radius_config（）を使用する&lt;/strong&gt;と、ライブラリは、&lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=radius.conf&quot;&gt;&amp;raquo;radius.confで&lt;/a&gt;説明されている形式の構成ファイルを読み取ります。</target>
        </trans-unit>
        <trans-unit id="000db2515e4fd764dd52a845e6cc8dba17f269cf" translate="yes" xml:space="preserve">
          <source>Before this version values of some magic constants were always lowercased. All of them are case-sensitive now (contain names as they were declared).</source>
          <target state="translated">このバージョン以前は、いくつかのマジック定数の値は常に小文字になっていました。現在はすべて大文字と小文字が区別されています (宣言された通りの名前が含まれています)。</target>
        </trans-unit>
        <trans-unit id="73641e4b29ba69dadae706aa698b22be9a3639e1" translate="yes" xml:space="preserve">
          <source>Before v3.0 a second argument &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; was in use. It was filled with the CAS token values for the found items. The &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; parameter was removed in v3.0 of the extension. It was replaced with a new flag &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt; that needs is to be used as the value for &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">v3.0より前の &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; は、2番目の引数＆cas_tokensが使用されていました。見つかったアイテムのCASトークン値が入力されました。 &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; パラメータは、拡張のV3.0で削除されました。 &lt;code&gt;flags&lt;/code&gt; の値として使用する必要がある新しいフラグ&lt;strong&gt; &lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt; &lt;/strong&gt;に置き換えられました。</target>
        </trans-unit>
        <trans-unit id="f5758180c140fa745756a5d79fd33e34fc099239" translate="yes" xml:space="preserve">
          <source>Begin checking for events and calling callbacks &lt;em&gt;for the default loop&lt;/em&gt; . Returns when a callback calls &lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher::keepalive()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;), in which case the return value will be &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. The return value can generally be interpreted as &lt;em&gt;if &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, there is more work left to do&lt;/em&gt; .</source>
          <target state="translated">イベントのチェックと&lt;em&gt;デフォルトループの&lt;/em&gt;コールバックの呼び出し&lt;em&gt;を開始します&lt;/em&gt;。コールバックが&lt;a href=&quot;ev.stop&quot;&gt;Ev :: stop（）&lt;/a&gt;メソッドを呼び出すか、フラグがゼロ以外の場合（この場合、戻り値はtrue）、またはループを参照するアクティブなウォッチャーが存在しない場合（&lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher :: keepalive（）&lt;/a&gt;が&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;）、その場合、戻り値は&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;になり&lt;strong&gt;ます&lt;/strong&gt;。戻り値は、一般に&lt;em&gt;、&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; の&lt;/strong&gt;&lt;/em&gt;ように解釈でき、実行する&lt;em&gt;作業が&lt;/em&gt;&lt;em&gt;まだ&lt;/em&gt;&lt;em&gt;残っています&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c480ab119635ac22ae465611ccdd8175ab52dcab" translate="yes" xml:space="preserve">
          <source>Begin checking for events and calling callbacks &lt;em&gt;for the default loop&lt;/em&gt; . Returns when a callback calls &lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher::keepalive()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;), in which case the return value will be &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. The return value can generally be interpreted as &lt;em&gt;if &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, there is more work left to do&lt;/em&gt; .</source>
          <target state="translated">イベントのチェックと&lt;em&gt;デフォルトループの&lt;/em&gt;コールバックの呼び出し&lt;em&gt;を開始します&lt;/em&gt;。コールバックが&lt;a href=&quot;ev.stop&quot;&gt;Ev :: stop（）&lt;/a&gt;メソッドを呼び出すか、フラグがゼロ以外の場合（この場合、戻り値はtrue）、またはループを参照するアクティブなウォッチャーがない場合（&lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher :: keepalive（）&lt;/a&gt;は&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;）に戻り&lt;strong&gt;ます&lt;/strong&gt;。この場合、戻り値は&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;になり&lt;strong&gt;ます&lt;/strong&gt;。戻り値は通常&lt;em&gt;、&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;であるかの&lt;/em&gt;ように解釈でき&lt;em&gt;、やるべきことが&lt;/em&gt;&lt;em&gt;まだ&lt;/em&gt;&lt;em&gt;残っています&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4d5355699cf9574c92e98c8827deb60f45030e5e" translate="yes" xml:space="preserve">
          <source>Begin checking for events and calling callbacks for the current event loop. Returns when a callback calls &lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher::keepalive()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;), in which case the return value will be &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. The return value can generally be interpreted as &lt;em&gt;if &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, there is more work left to do&lt;/em&gt; .</source>
          <target state="translated">イベントの確認と現在のイベントループのコールバックの呼び出しを開始します。コールバックが&lt;a href=&quot;ev.stop&quot;&gt;Ev :: stop（）&lt;/a&gt;メソッドを呼び出すか、フラグがゼロ以外の場合（この場合、戻り値はtrue）、またはループを参照するアクティブなウォッチャーが存在しない場合（&lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher :: keepalive（）&lt;/a&gt;が&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;）、その場合、戻り値は&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;になり&lt;strong&gt;ます&lt;/strong&gt;。通常、戻り値は&lt;em&gt;&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; の&lt;/strong&gt;&lt;/em&gt;ように解釈でき、実行する&lt;em&gt;作業が&lt;/em&gt;&lt;em&gt;まだ残っています&lt;strong&gt;&lt;/strong&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="70a0c916907f9dda30b0a921c3448e7d30fa9f09" translate="yes" xml:space="preserve">
          <source>Begin checking for events and calling callbacks for the current event loop. Returns when a callback calls &lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher::keepalive()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;), in which case the return value will be &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. The return value can generally be interpreted as &lt;em&gt;if &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, there is more work left to do&lt;/em&gt; .</source>
          <target state="translated">イベントのチェックを開始し、現在のイベントループのコールバックを呼び出します。コールバックが&lt;a href=&quot;ev.stop&quot;&gt;Ev :: stop（）&lt;/a&gt;メソッドを呼び出すか、フラグがゼロ以外の場合（この場合、戻り値はtrue）、またはループを参照するアクティブなウォッチャーがない場合（&lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher :: keepalive（）&lt;/a&gt;は&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;）に戻り&lt;strong&gt;ます&lt;/strong&gt;。この場合、戻り値は&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;になり&lt;strong&gt;ます&lt;/strong&gt;。戻り値は通常&lt;em&gt;、&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;であるかの&lt;/em&gt;ように解釈でき&lt;em&gt;、やるべきことが&lt;/em&gt;&lt;em&gt;まだ&lt;/em&gt;&lt;em&gt;残っています&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ef37487401623216b3faa1a1ad35e466240b2f6c" translate="yes" xml:space="preserve">
          <source>Begin logging changes made to the SDO_DataObject.</source>
          <target state="translated">SDO_DataObject に加えられた変更のロギングを開始します。</target>
        </trans-unit>
        <trans-unit id="36506190c2135ae8c2b4ea546bfa2116942eadf4" translate="yes" xml:space="preserve">
          <source>Begin timestamp.</source>
          <target state="translated">開始タイムスタンプ。</target>
        </trans-unit>
        <trans-unit id="a337686d6aadc69dfa901830e6cad592f469fbdf" translate="yes" xml:space="preserve">
          <source>Begining from PHP 5.4.0 four additional constants available:</source>
          <target state="translated">PHP 5.4.0 以降では、4 つの定数が追加されました。</target>
        </trans-unit>
        <trans-unit id="8cf0b865ce0821948992d3642584fcb7e901151e" translate="yes" xml:space="preserve">
          <source>Begins a transaction.</source>
          <target state="translated">取引を開始します。</target>
        </trans-unit>
        <trans-unit id="b49640a6a748f0c175fc20884ad162b23dcd53b7" translate="yes" xml:space="preserve">
          <source>Begins a transaction. Requires the InnoDB engine (it is enabled by default). For additional details about how MySQL transactions work, see &lt;a href=&quot;http://dev.mysql.com/doc/mysql/en/commit.html&quot;&gt;&amp;raquo; http://dev.mysql.com/doc/mysql/en/commit.html&lt;/a&gt;.</source>
          <target state="translated">トランザクションを開始します。InnoDBエンジンが必要です（デフォルトで有効になっています）。MySQLトランザクションの動作の詳細については、&lt;a href=&quot;http://dev.mysql.com/doc/mysql/en/commit.html&quot;&gt;&amp;raquo;http://dev.mysql.com/doc/mysql/en/commit.htmlを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="02a9520cb229a3e806630a863ce3214ff40756e3" translate="yes" xml:space="preserve">
          <source>Behaves as &lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer::addBuffer()&lt;/a&gt; , except that it moves data to the front of the buffer.</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer :: addBuffer（）&lt;/a&gt;として動作しますが、データをバッファーの前に移動します。</target>
        </trans-unit>
        <trans-unit id="c4f566c4d7e2c407ddb3e3f84d6b251c7a0b35ab" translate="yes" xml:space="preserve">
          <source>Behaves as &lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer::read()&lt;/a&gt; , except that it does not copy the data: it just removes it from the front of the buffer.</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer :: read（）&lt;/a&gt;として動作しますが、データをコピーしない点​​が異なります。バッファーの前面から削除するだけです。</target>
        </trans-unit>
        <trans-unit id="7159080e86b86a14d2c3911c77707da6fa4fddb4" translate="yes" xml:space="preserve">
          <source>Behaves just like &lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer::read()&lt;/a&gt; , but does not drain any data from the buffer. I.e. it copies the first &lt;code&gt;max_bytes&lt;/code&gt; bytes from the front of the buffer into &lt;code&gt;data&lt;/code&gt; . If there are fewer than &lt;code&gt;max_bytes&lt;/code&gt; bytes available, the function copies all the bytes there are.</source>
          <target state="translated">&lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer :: read（）&lt;/a&gt;と同じように動作しますが、バッファからデータを排出しません。 &lt;code&gt;max_bytes&lt;/code&gt; 、最初のmax_bytesバイトをバッファの先頭からdataにコピーし &lt;code&gt;data&lt;/code&gt; 。使用可能なバイト数が &lt;code&gt;max_bytes&lt;/code&gt; 未満の場合、関数はそこにあるすべてのバイトをコピーします。</target>
        </trans-unit>
        <trans-unit id="26f2456afbfcb0cca11ac1bb8f13fb701750b72c" translate="yes" xml:space="preserve">
          <source>Behaves the same as &lt;a href=&quot;function.strftime&quot;&gt;strftime()&lt;/a&gt; except that the time returned is Greenwich Mean Time (GMT). For example, when run in Eastern Standard Time (GMT -0500), the first line below prints &quot;Dec 31 1998 20:00:00&quot;, while the second prints &quot;Jan 01 1999 01:00:00&quot;.</source>
          <target state="translated">返される時間がグリニッジ標準時（GMT）であることを除いて、&lt;a href=&quot;function.strftime&quot;&gt;strftime（）&lt;/a&gt;と同じように動作します。たとえば、東部標準時（GMT -0500）で実行すると、下の最初の行は &quot;Dec 31 1998 20:00:00&quot;と出力され、2番目の行は &quot;Jan 01 1999 01:00:00&quot;と出力されます。</target>
        </trans-unit>
        <trans-unit id="2f769df838bb1a22223045a6651a1f02027dfa65" translate="yes" xml:space="preserve">
          <source>Behavior prior to PHP 8.0.0</source>
          <target state="translated">PHP 8.0.0以前の動作</target>
        </trans-unit>
        <trans-unit id="39770a2cae289dc3b9c8ac2a96c2f99cd086511a" translate="yes" xml:space="preserve">
          <source>Below is an example that illustrates the internal structure of the arrays being generated by the function. We use a simple &lt;code&gt;note&lt;/code&gt; tag embedded inside a &lt;code&gt;para&lt;/code&gt; tag, and then we parse this and print out the structures generated:</source>
          <target state="translated">以下は、関数によって生成される配列の内部構造を示す例です。 &lt;code&gt;para&lt;/code&gt; タグ内に埋め込まれた単純な &lt;code&gt;note&lt;/code&gt; を使用し、これを解析して、生成された構造を出力します。</target>
        </trans-unit>
        <trans-unit id="f7d7e94e88ff40615fc8af92c1f6c7dfe2cbed2a" translate="yes" xml:space="preserve">
          <source>Below is an example that illustrates the internal structure of the arrays being generated by the function. We use a simple &lt;em&gt;note&lt;/em&gt; tag embedded inside a &lt;em&gt;para&lt;/em&gt; tag, and then we parse this and print out the structures generated:</source>
          <target state="translated">以下は、関数によって生成される配列の内部構造を示す例です。&lt;em&gt;para&lt;/em&gt;タグ内に埋め込まれた単純な&lt;em&gt;ノート&lt;/em&gt;タグを使用し、これを解析して、生成された構造を出力します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e4627504e2611879fb6411719ba154382da2522b" translate="yes" xml:space="preserve">
          <source>Below normal priority</source>
          <target state="translated">通常の優先順位以下</target>
        </trans-unit>
        <trans-unit id="df2316b26bcbffdbb3fa5e4602bb678d04f7a96d" translate="yes" xml:space="preserve">
          <source>Besides the methods listed here, this class also has an &lt;code&gt;__invoke&lt;/code&gt; method. This is for consistency with other classes that implement &lt;a href=&quot;language.oop5.magic#language.oop5.magic.invoke&quot;&gt;calling magic&lt;/a&gt;, as this method is not used for calling the function.</source>
          <target state="translated">ここにリストされているメソッドに加えて、このクラスには &lt;code&gt;__invoke&lt;/code&gt; メソッドもあります。このメソッドは関数の呼び出しには使用されないため、これは&lt;a href=&quot;language.oop5.magic#language.oop5.magic.invoke&quot;&gt;呼び出しマジック&lt;/a&gt;を実装する他のクラスとの一貫性を保つためです。</target>
        </trans-unit>
        <trans-unit id="414dc71e6c63f0887b0ec9b16099170828799d75" translate="yes" xml:space="preserve">
          <source>Besides the methods listed here, this class also has an &lt;em&gt;__invoke&lt;/em&gt; method. This is for consistency with other classes that implement &lt;a href=&quot;language.oop5.magic#language.oop5.magic.invoke&quot;&gt;calling magic&lt;/a&gt;, as this method is not used for calling the function.</source>
          <target state="translated">ここにリストされているメソッドの他に、このクラスには&lt;em&gt;__invoke&lt;/em&gt;メソッドもあります。このメソッドは関数の呼び出しには使用されないため、これは&lt;a href=&quot;language.oop5.magic#language.oop5.magic.invoke&quot;&gt;magicの呼び出し&lt;/a&gt;を実装する他のクラスとの整合性を保つためです。</target>
        </trans-unit>
        <trans-unit id="266602dbca3cc5570aa4616fb8035912be0f8cc9" translate="yes" xml:space="preserve">
          <source>Beware of patterns that contain nested indefinite repeats. These can take a long time to run when applied to a string that does not match. Consider the pattern fragment &lt;code&gt;(a+)*&lt;/code&gt;</source>
          <target state="translated">ネストされた不定の繰り返しを含むパターンに注意してください。一致しない文字列に適用すると、実行に時間がかかる場合があります。パターンフラグメント &lt;code&gt;(a+)*&lt;/code&gt; 検討してください</target>
        </trans-unit>
        <trans-unit id="41821313c26ad3752532088e0a30b10127e31cba" translate="yes" xml:space="preserve">
          <source>Beware of patterns that contain nested indefinite repeats. These can take a long time to run when applied to a string that does not match. Consider the pattern fragment &lt;em&gt;(a+)*&lt;/em&gt;</source>
          <target state="translated">ネストされた無限の繰り返しを含むパターンに注意してください。一致しない文字列に適用すると、実行に時間がかかる場合があります。パターンの断片&lt;em&gt;（a +）*を&lt;/em&gt;考え&lt;em&gt;ます。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a7d116573e9636192a34f0e5848882a5a8729a1" translate="yes" xml:space="preserve">
          <source>Beyond the above advice, note that you can also hook into the serialization and unserialization events on an object using the &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt; and &lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup()&lt;/a&gt; methods. Using &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt; also allows you to only serialize a subset of the object's properties.</source>
          <target state="translated">上記のアドバイスの他に、&lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__ sleep（）&lt;/a&gt;および&lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup（）&lt;/a&gt;メソッドを使用して、オブジェクトのシリアル化イベントと非シリアル化イベントにフックすることもできます。使用&lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleepを（）&lt;/a&gt;もあなただけのオブジェクトのプロパティのサブセットをシリアル化することができます。</target>
        </trans-unit>
        <trans-unit id="2514d12d8068c8b402b7adac2bc9b12b1d380d7d" translate="yes" xml:space="preserve">
          <source>Big5 with Hong Kong extensions, Traditional Chinese.</source>
          <target state="translated">香港の延長線上にあるBIG5、繁体字中国語。</target>
        </trans-unit>
        <trans-unit id="66639f7d455dd71faa9147f5d69e5ce885d8bebd" translate="yes" xml:space="preserve">
          <source>Binary</source>
          <target state="translated">Binary</target>
        </trans-unit>
        <trans-unit id="7205f20354da7736920d9b84a6e30124b9e24a96" translate="yes" xml:space="preserve">
          <source>Binary &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; literals are available since PHP 5.4.0.</source>
          <target state="translated">2進&lt;a href=&quot;language.types.integer&quot;&gt;整数&lt;/a&gt;リテラルは、PHP 5.4.0以降で使用できます。</target>
        </trans-unit>
        <trans-unit id="a1954bfbe4523cd5011686c373b6e17de91f0855" translate="yes" xml:space="preserve">
          <source>Binary safe case-insensitive string comparison.</source>
          <target state="translated">バイナリセーフで大文字小文字を区別しない文字列比較。</target>
        </trans-unit>
        <trans-unit id="29829bc8db48714274cb2e445a2c46ff09faeb1f" translate="yes" xml:space="preserve">
          <source>Binary string representation of &lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; バイナリ文字列表現</target>
        </trans-unit>
        <trans-unit id="9b175735ed3073daec491aedf910138426164a01" translate="yes" xml:space="preserve">
          <source>Bind variables for the parameter markers in the SQL statement that was passed to &lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli_prepare()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli_prepare（）&lt;/a&gt;に渡されたSQLステートメントのパラメーターマーカーの変数をバインドします。</target>
        </trans-unit>
        <trans-unit id="c7c97cd0d229f7ba63e5e98a2c456af2b6d4539e" translate="yes" xml:space="preserve">
          <source>Binding columns in the result set to PHP variables is an effective way to make the data contained in each row immediately available to your application. The following example demonstrates how PDO allows you to bind and retrieve columns with a variety of options and with intelligent defaults.</source>
          <target state="translated">結果セットのカラムを PHP 変数にバインドすることは、 各行に含まれるデータをアプリケーションですぐに利用できるようにするための効果的な方法です。次の例では、PDO を使用してさまざまなオプションとインテリジェントなデフォルト値を指定して カラムをバインドしたり取得したりする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="45fc3f5d66badbb2ea7467997f8da6369c2d2e23" translate="yes" xml:space="preserve">
          <source>Binding more values than specified is not possible; if more keys exist in &lt;code&gt;input_parameters&lt;/code&gt; than in the SQL specified in the &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt;, then the statement will fail and an error is emitted.</source>
          <target state="translated">指定よりも多くの値をバインドすることはできません。&lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare（）&lt;/a&gt;で指定されたSQLよりも &lt;code&gt;input_parameters&lt;/code&gt; に多くのキーが存在する場合、ステートメントは失敗し、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="9a5ae95af964abb301b00f502dd17c440aff2801" translate="yes" xml:space="preserve">
          <source>Binds a PHP variable to a corresponding named or question mark placeholder in the SQL statement that was used to prepare the statement. Unlike &lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement::bindValue()&lt;/a&gt;, the variable is bound as a reference and will only be evaluated at the time that &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement::execute()&lt;/a&gt; is called.</source>
          <target state="translated">ステートメントの準備に使用されたSQLステートメント内の対応する名前付きまたは疑問符のプレースホルダーにPHP変数をバインドします。&lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement :: bindValue（）&lt;/a&gt;とは異なり、変数は参照としてバインドされ、&lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement :: execute（）&lt;/a&gt;が呼び出されたときにのみ評価されます。</target>
        </trans-unit>
        <trans-unit id="0fd90a10de3a02c1d4a7651f87c90316aa4b42e3" translate="yes" xml:space="preserve">
          <source>Binds a parameter to a statement variable.</source>
          <target state="translated">パラメータをステートメント変数にバインドします。</target>
        </trans-unit>
        <trans-unit id="b8b38586af1ee4b44e9fe60bfd74805629a2a4ee" translate="yes" xml:space="preserve">
          <source>Binds a value to a corresponding named or question mark placeholder in the SQL statement that was used to prepare the statement.</source>
          <target state="translated">文の準備に使用された SQL 文内の対応する名前付きプレースホルダまたはクエスチョン・マーク・プレースホルダに値をバインドします。</target>
        </trans-unit>
        <trans-unit id="dd6741172297eaebe838098922865a7902259c0d" translate="yes" xml:space="preserve">
          <source>Binds an HTTP server on the specified address and port.</source>
          <target state="translated">指定したアドレスとポートにHTTPサーバをバインドします。</target>
        </trans-unit>
        <trans-unit id="342502ffa532fb522624f8b96afa245a3ac904fb" translate="yes" xml:space="preserve">
          <source>Binds columns in the result set to variables.</source>
          <target state="translated">結果セットの列を変数にバインドします。</target>
        </trans-unit>
        <trans-unit id="83a7a3ad889ad4da86f116b68b23fbdf206ef95f" translate="yes" xml:space="preserve">
          <source>Binds per-field weights by name.</source>
          <target state="translated">フィールドごとの重みを名前でバインドします。</target>
        </trans-unit>
        <trans-unit id="b024d4c8d01cc81c2e9665796e520eb890bc6f55" translate="yes" xml:space="preserve">
          <source>Binds the name given in &lt;code&gt;address&lt;/code&gt; to the socket described by &lt;code&gt;socket&lt;/code&gt;. This has to be done before a connection is be established using &lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect()&lt;/a&gt; or &lt;a href=&quot;function.socket-listen&quot;&gt;socket_listen()&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; で指定された名前を、socketで記述された &lt;code&gt;socket&lt;/code&gt; バインドします。これは、&lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect（）&lt;/a&gt;または&lt;a href=&quot;function.socket-listen&quot;&gt;socket_listen（）&lt;/a&gt;を使用して接続を確立する前に行う必要があります。</target>
        </trans-unit>
        <trans-unit id="5b7f20bf936b6e7d18605e3f30eb6d0e139a907c" translate="yes" xml:space="preserve">
          <source>Binds the value of a parameter to a statement variable.</source>
          <target state="translated">パラメータの値をステートメント変数にバインドします。</target>
        </trans-unit>
        <trans-unit id="9780b9e1c12559abd6016ff564b7223f035300cd" translate="yes" xml:space="preserve">
          <source>Binds to the LDAP directory with specified RDN and password.</source>
          <target state="translated">指定したRDNとパスワードでLDAPディレクトリにバインドします。</target>
        </trans-unit>
        <trans-unit id="0c29311da50b8a4caffc8ba9800f66ca2e373b7b" translate="yes" xml:space="preserve">
          <source>Bit mask of &lt;code&gt;EventListener::OPT_*&lt;/code&gt; constants. See &lt;a href=&quot;class.eventlistener#eventlistener.constants&quot;&gt;EventListener constants&lt;/a&gt; .</source>
          <target state="translated">&lt;code&gt;EventListener::OPT_*&lt;/code&gt; 定数のビットマスク。&lt;a href=&quot;class.eventlistener#eventlistener.constants&quot;&gt;EventListener定数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="376f4955d4928d0c1c325d76a4122ffa20cc994d" translate="yes" xml:space="preserve">
          <source>Bit mask of &lt;em&gt;EventListener::OPT_*&lt;/em&gt; constants. See &lt;a href=&quot;class.eventlistener#eventlistener.constants&quot;&gt;EventListener constants&lt;/a&gt; .</source>
          <target state="translated">&lt;em&gt;EventListener :: OPT_ *&lt;/em&gt;定数のビットマスク。&lt;a href=&quot;class.eventlistener#eventlistener.constants&quot;&gt;EventListener定数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a2b84e580259b4bb3421a5aa5860694ab700746f" translate="yes" xml:space="preserve">
          <source>Bit mask of the flags to set. See &lt;a href=&quot;class.splfileobject#splfileobject.constants&quot;&gt;SplFileObject constants&lt;/a&gt; for the available flags.</source>
          <target state="translated">設定するフラグのビットマスク。使用可能なフラグについては、&lt;a href=&quot;class.splfileobject#splfileobject.constants&quot;&gt;SplFileObject定数&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2bf86ff4d0c973ecae90926c21de45322c20ac6a" translate="yes" xml:space="preserve">
          <source>Bit mask of watcher &lt;a href=&quot;class.ev#ev.constants.watcher-revents&quot;&gt;received events&lt;/a&gt; .</source>
          <target state="translated">ウォッチャーが&lt;a href=&quot;class.ev#ev.constants.watcher-revents&quot;&gt;受け取ったイベントの&lt;/a&gt;ビットマスク。</target>
        </trans-unit>
        <trans-unit id="465ce1a345e8a92de5920141ab5cfb869f2d1bbb" translate="yes" xml:space="preserve">
          <source>Bit masks of (received) events:</source>
          <target state="translated">(受信した)イベントのビットマスク。</target>
        </trans-unit>
        <trans-unit id="d04a675c5c6294079f55e51c9996bd70e53ada14" translate="yes" xml:space="preserve">
          <source>Bit shifting in PHP is arithmetic. Bits shifted off either end are discarded. Left shifts have zeros shifted in on the right while the sign bit is shifted out on the left, meaning the sign of an operand is not preserved. Right shifts have copies of the sign bit shifted in on the left, meaning the sign of an operand is preserved.</source>
          <target state="translated">PHPにおけるビットシフトは算術です。どちらかの端からずれたビットは破棄されます。左シフトでは、ゼロは右にシフトインし、符号ビットは左にシフトアウトします。右シフトは、符号ビットのコピーが左にシフトインしていて、オペランドの符号が保存されます。</target>
        </trans-unit>
        <trans-unit id="f9d42c1a721445d35b81eb7fb1bd7864c79a202b" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is group executable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">グループ実行可能ファイルであるUNIXエントリを表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="58d27b10b4264b8b03a303979411593d2fa5d57f" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is group readable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">グループ読み取り可能なUNIXエントリを表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="b66830bc799f07f31eb97f4505270cb622b9062e" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is group writable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">グループ書き込み可能なUNIXエントリを表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="10cf25a411aef052e61b0771392e2519a04235f0" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is owner executable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">所有者が実行可能なUNIXエントリを表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="6259f69aaad7a7e75eefc08d784c270d4ea1d208" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is owner readable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">所有者が読み取り可能なUNIXエントリを表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="40574488f972933e966fcdebf3f72c2f0f95893d" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is owner writable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">所有者が書き込み可能なUNIXエントリを表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="ac00e643a77863b0855a3f9bafa72019227714fa" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is world executable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">世界で実行可能なUNIXエントリを表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="d1ed27516a3b5128e53685b024b934390b3e763f" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is world readable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">世界中で読み取り可能なUNIXエントリを表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="c8b0ea885b4bbd7afe3beb9dd8856e8809e0b2f1" translate="yes" xml:space="preserve">
          <source>Bit that represents a UNIX entry that is world writable. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">世界的に書き込み可能なUNIXエントリを表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="f4a8a1897332a620cb84dce58cc8bce607390020" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a compressed attribute (NTFS only). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">圧縮された属性を持つWindowsエントリを表すビット（NTFSのみ）。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="454567895edbe8b9f1a8fbc4f97fae8ea9090c22" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a device attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">デバイス属性を持つWindowsエントリを表すビット。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="63def2253d8f4e98c87266d317817028401f71a6" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a directory attribute (entry is a directory). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows. See also &lt;a href=&quot;rarentry.isdirectory&quot;&gt;RarEntry::isDirectory()&lt;/a&gt;, which also works with entries that were not added in WinRAR.</source>
          <target state="translated">ディレクトリ属性を持つWindowsエントリを表すビット（エントリはディレクトリです）。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。&lt;a href=&quot;rarentry.isdirectory&quot;&gt;RarEntry :: isDirectory（）&lt;/a&gt;も参照してください。これは、WinRARで追加されなかったエントリでも機能します。</target>
        </trans-unit>
        <trans-unit id="ec38d099b1be0da18310f5c2c6526bc005b668b9" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a hidden attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">非表示の属性を持つWindowsエントリを表すビット。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="a53ec1b9e7bb7d9e556b0c76556b91d4df9a6519" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a normal file attribute (entry is NOT a directory). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows. See also &lt;a href=&quot;rarentry.isdirectory&quot;&gt;RarEntry::isDirectory()&lt;/a&gt;, which also works with entries that were not added in WinRAR.</source>
          <target state="translated">通常のファイル属性を持つWindowsエントリを表すビット（エントリはディレクトリではありません）。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。&lt;a href=&quot;rarentry.isdirectory&quot;&gt;RarEntry :: isDirectory（）&lt;/a&gt;も参照してください。これは、WinRARで追加されなかったエントリでも機能します。</target>
        </trans-unit>
        <trans-unit id="eb494fa3dddb97e0b0615ad04a7ac9f6d2fa4b81" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a not content indexed attribute (entry is to be indexed). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">コンテンツのインデックスが作成されていない属性を持つWindowsエントリを表すビット（エントリはインデックスに登録されます）。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="83105e7c523a21f6922d9c8853ae10089bccea1b" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a read-only attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">読み取り専用属性を持つWindowsエントリを表すビット。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="80702f5884e7f918a1c72cd962477537d8a73e79" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a reparse point attribute (entry is an NTFS reparse point, e.g. a directory junction or a mount file system). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">再解析ポイント属性を持つWindowsエントリを表すビット（エントリはNTFS再解析ポイントです（ディレクトリジャンクションやマウントファイルシステムなど）。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="d9855ada1b6e58dfa4f5a5d07557bd28df020ccd" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a sparse file attribute (file is an NTFS sparse file). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">スパースファイル属性を持つWindowsエントリを表すビット（ファイルはNTFSスパースファイルです）。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="0b87594d2aba1f83209d8e657b8be4a50b43d4cc" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a system attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">システム属性を持つWindowsエントリを表すビット。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="802e5cfe52131b57545735eafc89c8e41dba9962" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a temporary attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">一時属性を持つWindowsエントリを表すビット。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="278c51db32230d64618dc2102e3fbb9c0a1a2c35" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with a virtual attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">仮想属性を持つWindowsエントリを表すビット。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="b06ed82e4309e7f4132077f34534eeb2f13e2d04" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with an archive attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">アーカイブ属性を持つWindowsエントリを表すビット。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="8e5c4db83a16afce8050ed78403e841f5df87f89" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with an encrypted attribute (NTFS only). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">暗号化された属性を持つWindowsエントリを表すビット（NTFSのみ）。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="01170e70407ce0867e87184f49fb99c486c3ff21" translate="yes" xml:space="preserve">
          <source>Bit that represents a Windows entry with an offline attribute (entry is offline and not accessible). To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is Microsoft Windows.</source>
          <target state="translated">オフライン属性を持つWindowsエントリを表すビット（エントリはオフラインでアクセスできません）。ホストOSがMicrosoftWindowsであるエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="f81a03a63d27793be9f205909a16911708020d7c" translate="yes" xml:space="preserve">
          <source>Bit that represents the UNIX setgid attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">UNIXのsetgid属性を表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="bc0df842b30ae6b69d1c8ee406e84d4dc3e1f5e4" translate="yes" xml:space="preserve">
          <source>Bit that represents the UNIX setuid attribute. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">UNIXのsetuid属性を表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="1bb5e6dca7a225910854ae80cee0fcfaa930ed91" translate="yes" xml:space="preserve">
          <source>Bit that represents the UNIX sticky bit. To be used with &lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry::getAttr()&lt;/a&gt; on entries whose host OS is UNIX.</source>
          <target state="translated">UNIXスティッキービットを表すビット。ホストOSがUNIXのエントリで&lt;a href=&quot;rarentry.getattr&quot;&gt;RarEntry :: getAttr（）&lt;/a&gt;とともに使用されます。</target>
        </trans-unit>
        <trans-unit id="53a5d7a0ecaf6e070861a98456610f923f5f72e1" translate="yes" xml:space="preserve">
          <source>Bitfield of the modifiers to get.</source>
          <target state="translated">取得する修飾子のビットフィールド。</target>
        </trans-unit>
        <trans-unit id="54e80b111826390ced088b34a3b01e27f1e9ae9a" translate="yes" xml:space="preserve">
          <source>Bitmask consisting of &lt;strong&gt;&lt;code&gt;JSON_FORCE_OBJECT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_QUOT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_TAG&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_AMP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_APOS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_INVALID_UTF8_IGNORE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_INVALID_UTF8_SUBSTITUTE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_NUMERIC_CHECK&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PARTIAL_OUTPUT_ON_ERROR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PRETTY_PRINT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_LINE_TERMINATORS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_UNICODE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_THROW_ON_ERROR&lt;/code&gt;&lt;/strong&gt;. The behaviour of these constants is described on the &lt;a href=&quot;https://www.php.net/manual/en/json.constants.php&quot;&gt;JSON constants&lt;/a&gt; page.</source>
          <target state="translated">なるビットマスク&lt;strong&gt; &lt;code&gt;JSON_FORCE_OBJECT&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_HEX_QUOT&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_HEX_TAG&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_HEX_AMP&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_HEX_APOS&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_INVALID_UTF8_IGNORE&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_INVALID_UTF8_SUBSTITUTE&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_NUMERIC_CHECK&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_PARTIAL_OUTPUT_ON_ERROR&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_PRETTY_PRINT&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_UNESCAPED_LINE_TERMINATORS&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_UNESCAPED_UNICODE&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_THROW_ON_ERROR&lt;/code&gt; &lt;/strong&gt;。これらの定数の動作は、&lt;a href=&quot;https://www.php.net/manual/en/json.constants.php&quot;&gt;JSON定数の&lt;/a&gt;ページで説明されています。</target>
        </trans-unit>
        <trans-unit id="8d5bbd3678c09548204d1d8fa27df4d3a635aea0" translate="yes" xml:space="preserve">
          <source>Bitmask consisting of &lt;strong&gt;&lt;code&gt;JSON_HEX_QUOT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_TAG&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_AMP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_APOS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_NUMERIC_CHECK&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PRETTY_PRINT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_FORCE_OBJECT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_UNICODE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PARTIAL_OUTPUT_ON_ERROR&lt;/code&gt;&lt;/strong&gt;. The behaviour of these constants is described on the &lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;JSON constants&lt;/a&gt; page.</source>
          <target state="translated">なるビットマスク&lt;strong&gt; &lt;code&gt;JSON_HEX_QUOT&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_HEX_TAG&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_HEX_AMP&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_HEX_APOS&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_NUMERIC_CHECK&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_PRETTY_PRINT&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_FORCE_OBJECT&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_UNESCAPED_UNICODE&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_PARTIAL_OUTPUT_ON_ERROR&lt;/code&gt; &lt;/strong&gt;。これらの定数の動作については、&lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;JSON定数の&lt;/a&gt;ページで説明しています。</target>
        </trans-unit>
        <trans-unit id="d65751b8d3b34f9ddea06c2c52a371976692e320" translate="yes" xml:space="preserve">
          <source>Bitmask consisting of &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_GUESS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_UTF_8&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_CP437&lt;/code&gt;&lt;/strong&gt;. The behaviour of these constants is described on the &lt;a href=&quot;https://www.php.net/manual/en/zip.constants.php&quot;&gt;ZIP constants&lt;/a&gt; page.</source>
          <target state="translated">ZipArchive &lt;strong&gt; &lt;code&gt;ZipArchive::FL_ENC_GUESS&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;ZipArchive::FL_ENC_UTF_8&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;ZipArchive::FL_ENC_CP437&lt;/code&gt; &lt;/strong&gt;。これらの定数の動作は、&lt;a href=&quot;https://www.php.net/manual/en/zip.constants.php&quot;&gt;ZIP定数の&lt;/a&gt;ページで説明されています。</target>
        </trans-unit>
        <trans-unit id="97610679f6d15a90d39ac21b00281e473872723c" translate="yes" xml:space="preserve">
          <source>Bitmask consisting of &lt;strong&gt;&lt;code&gt;ZipArchive::FL_OVERWRITE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_GUESS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_UTF_8&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZipArchive::FL_ENC_CP437&lt;/code&gt;&lt;/strong&gt;. The behaviour of these constants is described on the &lt;a href=&quot;https://www.php.net/manual/en/zip.constants.php&quot;&gt;ZIP constants&lt;/a&gt; page.</source>
          <target state="translated">ZipArchive &lt;strong&gt; &lt;code&gt;ZipArchive::FL_OVERWRITE&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;ZipArchive::FL_ENC_GUESS&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;ZipArchive::FL_ENC_UTF_8&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;ZipArchive::FL_ENC_CP437&lt;/code&gt; &lt;/strong&gt;。これらの定数の動作は、&lt;a href=&quot;https://www.php.net/manual/en/zip.constants.php&quot;&gt;ZIP定数の&lt;/a&gt;ページで説明されています。</target>
        </trans-unit>
        <trans-unit id="c0f6fa82d9aa08f28480f20ed3a0b94768c86762" translate="yes" xml:space="preserve">
          <source>Bitmask field which may be set to any combination of connection flags. Currently the select of connection flags is limited to &lt;strong&gt;&lt;code&gt;STREAM_CLIENT_CONNECT&lt;/code&gt;&lt;/strong&gt; (default), &lt;strong&gt;&lt;code&gt;STREAM_CLIENT_ASYNC_CONNECT&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STREAM_CLIENT_PERSISTENT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">接続フラグの任意の組み合わせに設定できるビットマスクフィールド。現在、接続フラグの選択は&lt;strong&gt; &lt;code&gt;STREAM_CLIENT_CONNECT&lt;/code&gt; &lt;/strong&gt;（デフォルト）、&lt;strong&gt; &lt;code&gt;STREAM_CLIENT_ASYNC_CONNECT&lt;/code&gt; &lt;/strong&gt;および&lt;strong&gt; &lt;code&gt;STREAM_CLIENT_PERSISTENT&lt;/code&gt; に&lt;/strong&gt;制限されています。</target>
        </trans-unit>
        <trans-unit id="e9108091c6a4997c04b64d8f9229515c2c8b4a44" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;a href=&quot;https://www.php.net/manual/en/outcontrol.constants.php&quot;&gt;&lt;strong&gt;&lt;code&gt;PHP_OUTPUT_HANDLER_*&lt;/code&gt;&lt;/strong&gt; constants&lt;/a&gt;.</source>
          <target state="translated">PHP_OUTPUT_HANDLER_ &lt;a href=&quot;https://www.php.net/manual/en/outcontrol.constants.php&quot;&gt;&lt;strong&gt; &lt;code&gt;PHP_OUTPUT_HANDLER_*&lt;/code&gt; &lt;/strong&gt;定数&lt;/a&gt;の&lt;strong&gt;ビットマスク&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6f5e68cb9e77eab0d45d44c1122fa9cc7541dee9" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;CURLPROTO_*&lt;/code&gt;&lt;/strong&gt; values. If used, this bitmask limits what protocols libcurl may use in a transfer that it follows to in a redirect when &lt;strong&gt;&lt;code&gt;CURLOPT_FOLLOWLOCATION&lt;/code&gt;&lt;/strong&gt; is enabled. This allows you to limit specific transfers to only be allowed to use a subset of protocols in redirections. By default libcurl will allow all protocols except for FILE and SCP. This is a difference compared to pre-7.19.4 versions which unconditionally would follow to all protocols supported. See also &lt;strong&gt;&lt;code&gt;CURLOPT_PROTOCOLS&lt;/code&gt;&lt;/strong&gt; for protocol constant values.</source>
          <target state="translated">CURLPROTO_ &lt;strong&gt; &lt;code&gt;CURLPROTO_*&lt;/code&gt; &lt;/strong&gt;値の&lt;strong&gt;ビットマスク&lt;/strong&gt;。使用する場合、このビットマスクは、&lt;strong&gt; &lt;code&gt;CURLOPT_FOLLOWLOCATION&lt;/code&gt; &lt;/strong&gt;が有効な場合に、リダイレクトでlibcurlがリダイレクトに&lt;strong&gt;使用&lt;/strong&gt;するプロトコルを制限します。これにより、特定の転送をリダイレクトでプロトコルのサブセットの使用のみを許可するように制限できます。デフォルトでは、libcurlはFILEとSCPを除くすべてのプロトコルを許可します。これは、サポートされているすべてのプロトコルに無条件に従う7.19.4より前のバージョンとの違いです。プロトコル定数値については、&lt;strong&gt; &lt;code&gt;CURLOPT_PROTOCOLS&lt;/code&gt; &lt;/strong&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="e3e85a97faf368f1ec6dd750d4dafdcd5161da54" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;CURLPROTO_*&lt;/code&gt;&lt;/strong&gt; values. If used, this bitmask limits what protocols libcurl may use in the transfer. This allows you to have a libcurl built to support a wide range of protocols but still limit specific transfers to only be allowed to use a subset of them. By default libcurl will accept all protocols it supports. See also &lt;strong&gt;&lt;code&gt;CURLOPT_REDIR_PROTOCOLS&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">CURLPROTO_ &lt;strong&gt; &lt;code&gt;CURLPROTO_*&lt;/code&gt; &lt;/strong&gt;値の&lt;strong&gt;ビットマスク&lt;/strong&gt;。このビットマスクを使用すると、libcurlが転送に使用できるプロトコルが制限されます。これにより、幅広いプロトコルをサポートするようにlibcurlを構築することができますが、特定の転送をそれらのサブセットの使用のみを許可するように制限することもできます。デフォルトでは、libcurlはサポートするすべてのプロトコルを受け入れます。&lt;strong&gt; &lt;code&gt;CURLOPT_REDIR_PROTOCOLS&lt;/code&gt; &lt;/strong&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="cb0f55235110490c705393491bc2143c003a3bf8" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;Event::READ&lt;/code&gt;&lt;/strong&gt; , &lt;strong&gt;&lt;code&gt;Event::WRITE&lt;/code&gt;&lt;/strong&gt; , or both.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;Event::READ&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;Event::WRITE&lt;/code&gt; &lt;/strong&gt;、またはその両方のビットマスク。</target>
        </trans-unit>
        <trans-unit id="b449b94f868e3ea2bc5740fe230b6d510187457d" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;JSON_BIGINT_AS_STRING&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_INVALID_UTF8_IGNORE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_INVALID_UTF8_SUBSTITUTE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_OBJECT_AS_ARRAY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_THROW_ON_ERROR&lt;/code&gt;&lt;/strong&gt;. The behaviour of these constants is described on the &lt;a href=&quot;https://www.php.net/manual/en/json.constants.php&quot;&gt;JSON constants&lt;/a&gt; page.</source>
          <target state="translated">ビットマスク&lt;strong&gt; &lt;code&gt;JSON_BIGINT_AS_STRING&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_INVALID_UTF8_IGNORE&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_INVALID_UTF8_SUBSTITUTE&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_OBJECT_AS_ARRAY&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;JSON_THROW_ON_ERROR&lt;/code&gt; &lt;/strong&gt;。これらの定数の動作は、&lt;a href=&quot;https://www.php.net/manual/en/json.constants.php&quot;&gt;JSON定数の&lt;/a&gt;ページで説明されています。</target>
        </trans-unit>
        <trans-unit id="bfed8cddc7f30e823296e3aa0d5ba8b34778b2fa" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;PHP_OUTPUT_HANDLER_*&lt;/code&gt;&lt;/strong&gt; constants.</source>
          <target state="translated">PHP_OUTPUT_HANDLER_ &lt;strong&gt; &lt;code&gt;PHP_OUTPUT_HANDLER_*&lt;/code&gt; &lt;/strong&gt;定数の&lt;strong&gt;ビットマスク&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d41be63640dd140c5997c3f35ebafa787271f37f" translate="yes" xml:space="preserve">
          <source>Bitmask of JSON decode options. Currently there are two supported options. The first is &lt;strong&gt;&lt;code&gt;JSON_BIGINT_AS_STRING&lt;/code&gt;&lt;/strong&gt; that allows casting big integers to string instead of floats which is the default. The second option is &lt;strong&gt;&lt;code&gt;JSON_OBJECT_AS_ARRAY&lt;/code&gt;&lt;/strong&gt; that has the same effect as setting &lt;code&gt;assoc&lt;/code&gt; to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">JSONデコードオプションのビットマスク。現在、2つのサポートされているオプションがあります。1つ目は、&lt;strong&gt; &lt;code&gt;JSON_BIGINT_AS_STRING&lt;/code&gt; &lt;/strong&gt;です。これにより、デフォルトの浮動小数点数ではなく、大きな整数を文字列にキャストできます。2番目のオプションは&lt;strong&gt; &lt;code&gt;JSON_OBJECT_AS_ARRAY&lt;/code&gt; &lt;/strong&gt;で、 &lt;code&gt;assoc&lt;/code&gt; を&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; に&lt;/strong&gt;設定するのと同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="bcde88a827a312a8146d4870b13dba0f0fe03980" translate="yes" xml:space="preserve">
          <source>Bitmask of flags.</source>
          <target state="translated">フラグのビットマスク。</target>
        </trans-unit>
        <trans-unit id="f60afe861741a59dda520e80a55b24fc65d49a4b" translate="yes" xml:space="preserve">
          <source>Bitmask of required features. See &lt;a href=&quot;class.eventconfig#eventconfig.constants&quot;&gt; &lt;code&gt;EventConfig::FEATURE_*&lt;/code&gt; constants&lt;/a&gt;</source>
          <target state="translated">必要な機能のビットマスク。&lt;a href=&quot;class.eventconfig#eventconfig.constants&quot;&gt; &lt;code&gt;EventConfig::FEATURE_*&lt;/code&gt; &lt;/a&gt;定数を参照してください</target>
        </trans-unit>
        <trans-unit id="e72a5ec76976e9ec665f70875a442b9317f423b4" translate="yes" xml:space="preserve">
          <source>Bitmask of required features. See &lt;a href=&quot;class.eventconfig#eventconfig.constants&quot;&gt; &lt;em&gt;EventConfig::FEATURE_*&lt;/em&gt; constants&lt;/a&gt;</source>
          <target state="translated">必要な機能のビットマスク。&lt;a href=&quot;class.eventconfig#eventconfig.constants&quot;&gt;&lt;em&gt;EventConfig :: FEATURE_ *&lt;/em&gt;&lt;/a&gt;定数を参照してください &lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8bfd9f1474b921bceb8ee4a42fc8b5850a4a2f43" translate="yes" xml:space="preserve">
          <source>Bitmask of the flags to set.</source>
          <target state="translated">設定するフラグのビットマスク。</target>
        </trans-unit>
        <trans-unit id="2061d9d51452c0e4a7afdee747a574e988225c9f" translate="yes" xml:space="preserve">
          <source>Bits that are set in &lt;var&gt;$a&lt;/var&gt; are not set, and vice versa.</source>
          <target state="translated">&lt;var&gt;$a&lt;/var&gt; 設定されているビットは設定されておらず、その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="7d956dc0f2d8b00018a4206c456ad781ece35703" translate="yes" xml:space="preserve">
          <source>Bits that are set in &lt;var&gt;$a&lt;/var&gt; or &lt;var&gt;$b&lt;/var&gt; but not both are set.</source>
          <target state="translated">&lt;var&gt;$a&lt;/var&gt; または &lt;var&gt;$b&lt;/var&gt; 設定されているが、両方ではないビットが設定されます。</target>
        </trans-unit>
        <trans-unit id="2d1d989a1902c2b90386c0ff0bffb941fc5df9c9" translate="yes" xml:space="preserve">
          <source>Bits that are set in &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; are not set, and vice versa.</source>
          <target state="translated">&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 設定されているビットは設定されず、その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="2ca4636e90f871d56d49278846817d4b25798edf" translate="yes" xml:space="preserve">
          <source>Bits that are set in &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; or &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; but not both are set.</source>
          <target state="translated">&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; または &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; 設定されているが両方では設定されていないビット。</target>
        </trans-unit>
        <trans-unit id="7b6db3342274daf14ccbaf8efac1bf8bad1a0781" translate="yes" xml:space="preserve">
          <source>Bits that are set in both &lt;var&gt;$a&lt;/var&gt; and &lt;var&gt;$b&lt;/var&gt; are set.</source>
          <target state="translated">両方で設定されたビット &lt;var&gt;$a&lt;/var&gt; と &lt;var&gt;$b&lt;/var&gt; 設定されています。</target>
        </trans-unit>
        <trans-unit id="e8d94b3afb117f66a82b2f4134e85ccd6584028b" translate="yes" xml:space="preserve">
          <source>Bits that are set in both &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; and &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; are set.</source>
          <target state="translated">両方で設定されたビット &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; と &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; 設定されています。</target>
        </trans-unit>
        <trans-unit id="e9d6845ae0f540efe8643293925269b45c45c9e6" translate="yes" xml:space="preserve">
          <source>Bits that are set in either &lt;var&gt;$a&lt;/var&gt; or &lt;var&gt;$b&lt;/var&gt; are set.</source>
          <target state="translated">いずれかに設定されているビット &lt;var&gt;$a&lt;/var&gt; または &lt;var&gt;$b&lt;/var&gt; 設定されています。</target>
        </trans-unit>
        <trans-unit id="2b0ea6e7bed56101b1bf22d52f268c2159eb010a" translate="yes" xml:space="preserve">
          <source>Bits that are set in either &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; or &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; are set.</source>
          <target state="translated">いずれかに設定されているビット &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; または &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; 設定されています。</target>
        </trans-unit>
        <trans-unit id="55bcce66fdecceeb947a789cd32be9b93c7eca65" translate="yes" xml:space="preserve">
          <source>Bitwise And</source>
          <target state="translated">ビットワイズと</target>
        </trans-unit>
        <trans-unit id="7383ea9e5126e57fa3493be6ac21bff8595a9216" translate="yes" xml:space="preserve">
          <source>Bitwise Assignment Operators</source>
          <target state="translated">ビットごとの割り当て演算子</target>
        </trans-unit>
        <trans-unit id="9c2405ca81fd65c0322042b11819b72aaf432508" translate="yes" xml:space="preserve">
          <source>Bitwise OR of the &lt;a href=&quot;https://secure.php.net/manual/en/runkit.constants.php&quot;&gt;&lt;em&gt;RUNKIT_IMPORT_*&lt;/em&gt; family of constants&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://secure.php.net/manual/en/runkit.constants.php&quot;&gt;定数の&lt;/a&gt;&lt;em&gt;RUNKIT_IMPORT_ *&lt;/em&gt;ファミリのビット単位OR 。</target>
        </trans-unit>
        <trans-unit id="7154f3fdbd86469a2392e501023db20eed80da0d" translate="yes" xml:space="preserve">
          <source>Bitwise OR of the &lt;a href=&quot;https://www.php.net/manual/en/runkit7.constants.php&quot;&gt;&lt;code&gt;RUNKIT7_IMPORT_*&lt;/code&gt; family of constants&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/runkit7.constants.php&quot;&gt;定数の&lt;/a&gt; &lt;code&gt;RUNKIT7_IMPORT_*&lt;/code&gt; ファミリーのビットごとのOR 。</target>
        </trans-unit>
        <trans-unit id="f06f824cef5caab026aebdaccc85d665d4b620db" translate="yes" xml:space="preserve">
          <source>Bitwise Operators</source>
          <target state="translated">ビット演算子</target>
        </trans-unit>
        <trans-unit id="2e1e72417f6d1d5bb871a3d9c377c1ced9cb59b2" translate="yes" xml:space="preserve">
          <source>Bitwise Operators &amp;rarr;</source>
          <target state="translated">ビット演算子&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5b0861023775ab83f9aeb2c2b3492420398fae85" translate="yes" xml:space="preserve">
          <source>Bitwise Or</source>
          <target state="translated">ビット単位または</target>
        </trans-unit>
        <trans-unit id="21005996604dd00a0b014e060d1228d4a285646b" translate="yes" xml:space="preserve">
          <source>Bitwise Xor</source>
          <target state="translated">ビットごとのXor</target>
        </trans-unit>
        <trans-unit id="e7a6974fecf3c787a78bec79ec9eb88cfe0205c2" translate="yes" xml:space="preserve">
          <source>Bitwise operators allow evaluation and manipulation of specific bits within an integer.</source>
          <target state="translated">ビット演算子は、整数内の特定のビットの評価と操作を可能にします。</target>
        </trans-unit>
        <trans-unit id="f5e2ee6051b4bf4131d3f97441f880feec7b4508" translate="yes" xml:space="preserve">
          <source>Blends the fill color with each pixel in the image.</source>
          <target state="translated">塗りつぶしの色を画像内の各ピクセルでブレンドします。</target>
        </trans-unit>
        <trans-unit id="46e1d39d7877c858ec188aa048154587a129261f" translate="yes" xml:space="preserve">
          <source>Block at most one(wait, but don't loop)</source>
          <target state="translated">最大1つのブロック(待つが、ループしない)</target>
        </trans-unit>
        <trans-unit id="85974dcd29326f335ee93a23f79e37a99a005713" translate="yes" xml:space="preserve">
          <source>Block of binary audio data in the &lt;code&gt;format&lt;/code&gt; and &lt;code&gt;freq&lt;/code&gt; specified.</source>
          <target state="translated">指定された &lt;code&gt;format&lt;/code&gt; と &lt;code&gt;freq&lt;/code&gt; のバイナリオーディオデータのブロック。</target>
        </trans-unit>
        <trans-unit id="5500713d4da12f5a4da15115ea222c32cfb07c62" translate="yes" xml:space="preserve">
          <source>Block the process for the given number of seconds.</source>
          <target state="translated">指定された秒数だけプロセスをブロックします。</target>
        </trans-unit>
        <trans-unit id="4a637713db8ef9042d5487dc4abb649d9a9da695" translate="yes" xml:space="preserve">
          <source>Block until a new searcher is opened and registered as the main query searcher, making the changes visible.</source>
          <target state="translated">新しいサーチャーが開かれ、メインクエリのサーチャーとして登録されるまでブロックし、変更内容を可視化します。</target>
        </trans-unit>
        <trans-unit id="03e4760f8e9a9baa4718c848933cf1784961831b" translate="yes" xml:space="preserve">
          <source>Block until at least &lt;code&gt;len&lt;/code&gt; are received. However, if a signal is caught or the remote host disconnects, the function may return less data.</source>
          <target state="translated">少なくとも &lt;code&gt;len&lt;/code&gt; が受信されるまでブロックします。ただし、シグナルがキャッチされた場合、またはリモートホストが切断された場合、関数が返すデータは少なくなります。</target>
        </trans-unit>
        <trans-unit id="2ecb643710e2492ef5bb16f408ad6e1bed65b5ac" translate="yes" xml:space="preserve">
          <source>Blocks packets arriving from a specific source to a specific multicast group, which must have been previously joined. (added in PHP 5.4)</source>
          <target state="translated">特定の送信元から特定のマルチキャストグループに到着するパケットをブロックします。(PHP 5.4 で追加)</target>
        </trans-unit>
        <trans-unit id="7f8382ec47eb8c09ed09a4bb72874a406c393c0f" translate="yes" xml:space="preserve">
          <source>Blocks until there is activity on any of the curl_multi connections.</source>
          <target state="translated">curl_multi 接続のいずれかでアクティビティが発生するまでブロックします。</target>
        </trans-unit>
        <trans-unit id="3aa08fdaf2db1541666fbf7ffbc49f8713d92894" translate="yes" xml:space="preserve">
          <source>Blur an image, then display to the browser.</source>
          <target state="translated">画像をぼかしてブラウザに表示します。</target>
        </trans-unit>
        <trans-unit id="79688542adfa2ae35ecdb7fac4e0b9776a6bf449" translate="yes" xml:space="preserve">
          <source>Blur radius</source>
          <target state="translated">ぼかし半径</target>
        </trans-unit>
        <trans-unit id="d7807285d454c5eef5d53a68b62068df2fce7f59" translate="yes" xml:space="preserve">
          <source>Blurs an image. We convolve the image with a Gaussian operator of the given radius and standard deviation (sigma). For reasonable results, the radius should be larger than sigma. Use a radius of 0 and selects a suitable radius for you.</source>
          <target state="translated">画像をぼかします。与えられた半径と標準偏差 (シグマ)のガウス演算子で画像を畳み込みます。合理的な結果を得るためには、半径はシグマよりも大きくなければなりません。半径を0にして、自分に適した半径を選択します。</target>
        </trans-unit>
        <trans-unit id="89a17bc86bdbf48525c60a44aba28803628ee7e4" translate="yes" xml:space="preserve">
          <source>Body transfer encoding</source>
          <target state="translated">ボディトランスファーエンコーディング</target>
        </trans-unit>
        <trans-unit id="5c6ec93fb49ff02d92cff3563fb57223953172fe" translate="yes" xml:space="preserve">
          <source>Bool flag</source>
          <target state="translated">ブールフラグ</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="e6f8781dbbf397762ef84d1e6d1e4300fdba1702" translate="yes" xml:space="preserve">
          <source>Boolean flag to disable recursive committing of directories in the &lt;code&gt;targets&lt;/code&gt; array. Default is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;targets&lt;/code&gt; 配列内のディレクトリの再帰的コミットを無効にするブールフラグ。デフォルトは&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="51c77143d08e2f6b40337a45e9eb20a6acfd5a2c" translate="yes" xml:space="preserve">
          <source>Boolean is returned as &quot;t&quot; or &quot;f&quot;. All other types, including arrays are returned as strings formatted in the same default PostgreSQL manner that you would see in the &lt;strong&gt;psql&lt;/strong&gt; program. Database &lt;code&gt;NULL&lt;/code&gt; values are returned as &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">ブール値は「t」または「f」として返されます。配列を含む他のすべてのタイプは、&lt;strong&gt;psql&lt;/strong&gt;プログラムで表示されるのと同じデフォルトのPostgreSQLの方法でフォーマットされた文字列として返されます。データベースの &lt;code&gt;NULL&lt;/code&gt; 値は&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;として返され&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="eba5b1e2218c2218573b77c1bccefe60fabea2bc" translate="yes" xml:space="preserve">
          <source>Boolean is returned as &quot;t&quot; or &quot;f&quot;. All other types, including arrays are returned as strings formatted in the same default PostgreSQL manner that you would see in the &lt;strong&gt;psql&lt;/strong&gt; program. Database &lt;em&gt;NULL&lt;/em&gt; values are returned as &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">ブール値は「t」または「f」として返されます。配列を含む他のすべてのタイプは、&lt;strong&gt;psql&lt;/strong&gt;プログラムで表示されるのと同じデフォルトのPostgreSQLの方法でフォーマットされた文字列として返されます。データベースの&lt;em&gt;NULL&lt;/em&gt;値は&lt;em&gt;NULL&lt;/em&gt;として返され&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2df7e7998734b5f2011629e9bdacd772d76c47ef" translate="yes" xml:space="preserve">
          <source>Boolean value to set the XML declaration.</source>
          <target state="translated">XML宣言を設定するためのブール値です。</target>
        </trans-unit>
        <trans-unit id="0786cdff946e6084c50bb7df6cacd8ed965599fa" translate="yes" xml:space="preserve">
          <source>Booleans</source>
          <target state="translated">Booleans</target>
        </trans-unit>
        <trans-unit id="5168c0e8edad4a7175363d16e1be9abd28a846cb" translate="yes" xml:space="preserve">
          <source>Booleans &amp;rarr;</source>
          <target state="translated">ブール&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ea3cdd8a41310d163cc1e6c36d42fb14776a29f7" translate="yes" xml:space="preserve">
          <source>Bools are cast to ints, too, i.e. the key &lt;code&gt;true&lt;/code&gt; will actually be stored under &lt;code&gt;1&lt;/code&gt; and the key &lt;code&gt;false&lt;/code&gt; under &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Boolsもintにキャストされます。つまり、キー &lt;code&gt;true&lt;/code&gt; は実際には &lt;code&gt;1&lt;/code&gt; の下に格納され、キー &lt;code&gt;false&lt;/code&gt; は &lt;code&gt;0&lt;/code&gt; の下に格納されます。</target>
        </trans-unit>
        <trans-unit id="e4acaedf5d7eec7fd32e95d56c72311b17a769d5" translate="yes" xml:space="preserve">
          <source>Boost value. Boosts documents with matching terms.</source>
          <target state="translated">値をブーストします。一致する用語を持つ文書をブーストします。</target>
        </trans-unit>
        <trans-unit id="4495e57609a130e143b82486b3480915a1f64062" translate="yes" xml:space="preserve">
          <source>Bootstrap is a mechanism used to do some initial config before a Application run.</source>
          <target state="translated">Bootstrapは、アプリケーションを実行する前に初期設定を行うために使用される仕組みです。</target>
        </trans-unit>
        <trans-unit id="7893c77d507bcbbf77975ce0f6b30a2f2cf373c0" translate="yes" xml:space="preserve">
          <source>Bootstrap is a mechanism used to do some intial config before a Application run.</source>
          <target state="translated">Bootstrapは、アプリケーションを実行する前に初期設定を行うために使用される仕組みです。</target>
        </trans-unit>
        <trans-unit id="f208ff04980c91ad5d5b79edf01f26e5a704e573" translate="yes" xml:space="preserve">
          <source>Border height</source>
          <target state="translated">境界線の高さ</target>
        </trans-unit>
        <trans-unit id="eccc4059e13fc7e1fce985c7deaab3ca407191f9" translate="yes" xml:space="preserve">
          <source>Border width</source>
          <target state="translated">枠の幅</target>
        </trans-unit>
        <trans-unit id="14f10d51bc18c29e2c307fe416bb95c845e0dd11" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;functions.arguments#functions.variable-arg-list&quot;&gt;variable number of arguments&lt;/a&gt; and &lt;a href=&quot;functions.arguments#functions.arguments.default&quot;&gt;default arguments&lt;/a&gt; are supported in functions. See also the function references for &lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args()&lt;/a&gt;, &lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg()&lt;/a&gt;, and &lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args()&lt;/a&gt; for more information.</source>
          <target state="translated">両方の&lt;a href=&quot;functions.arguments#functions.variable-arg-list&quot;&gt;可変数の引数&lt;/a&gt;と&lt;a href=&quot;functions.arguments#functions.arguments.default&quot;&gt;デフォルトの引数は&lt;/a&gt;関数でサポートされています。詳細については、&lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args（）&lt;/a&gt;、&lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg（）&lt;/a&gt;、および&lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args（）&lt;/a&gt;の関数リファレンスも参照してください。</target>
        </trans-unit>
        <trans-unit id="52086faa34380c792cff47e63c67d87596c31b76" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;dest&lt;/code&gt; may now be URLs if the &quot;fopen wrappers&quot; have been enabled. See &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; for more details.</source>
          <target state="translated">「fopenラッパー」が有効になっている場合、 &lt;code&gt;source&lt;/code&gt; と &lt;code&gt;dest&lt;/code&gt; の両方がURLになる可能性があります。詳細については、&lt;a href=&quot;function.fopen&quot;&gt;fopen（）&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="047dda88cece1a79c34d2017973e651282fc5a1d" translate="yes" xml:space="preserve">
          <source>Both &lt;strong&gt;&lt;code&gt;SORT_STRING&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;SORT_REGULAR&lt;/code&gt;&lt;/strong&gt; are case sensitive, strings starting with a capital letter will come before strings starting with a lowercase letter.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;SORT_STRING&lt;/code&gt; &lt;/strong&gt;と&lt;strong&gt; &lt;code&gt;SORT_REGULAR&lt;/code&gt; &lt;/strong&gt;はどちらも&lt;strong&gt;大文字&lt;/strong&gt;と小文字を区別します。大文字で始まる文字列は、小文字で始まる文字列の前に来ます。</target>
        </trans-unit>
        <trans-unit id="d3f3a2e38de7790ec52c36cda52c18b7f37571c9" translate="yes" xml:space="preserve">
          <source>Both anonymous functions and arrow functions are implemented using the &lt;a href=&quot;class.closure&quot;&gt;Closure&lt;/a&gt; class.</source>
          <target state="translated">匿名関数と矢印関数はどちらも、&lt;a href=&quot;class.closure&quot;&gt;Closure&lt;/a&gt;クラスを使用して実装されます。</target>
        </trans-unit>
        <trans-unit id="17b793a11772af76deea9e8818870f1ad6635eda" translate="yes" xml:space="preserve">
          <source>Both arguments must be of the same length to be compared successfully. When arguments of differing length are supplied, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is returned immediately and the length of the known string may be leaked in case of a timing attack.</source>
          <target state="translated">正常に比較するには、両方の引数の長さが同じでなければなりません。異なる長さの引数を指定すると、すぐに&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;が返され、タイミング攻撃の場合に既知の文字列の長さがリークする可能性があります。</target>
        </trans-unit>
        <trans-unit id="9ee4be43cd002f744e5a1f386b10b1f667508ecf" translate="yes" xml:space="preserve">
          <source>Both arguments must be of the same length to be compared successfully. When arguments of differing length are supplied, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; is returned immediately and the length of the known string may be leaked in case of a timing attack.</source>
          <target state="translated">正常に比較するには、両方の引数が同じ長さである必要があります。異なる長さの引数が指定された場合、&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;がすぐに返され、タイミング攻撃の場合に既知の文字列の長さがリークされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="4eddc7b1c83f812352aad9d5db43cf15c249b776" translate="yes" xml:space="preserve">
          <source>Both files (&lt;code&gt;file&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt;) will be loaded into memory so ensure that your memory_limit is set high enough.</source>
          <target state="translated">両方のファイル（ &lt;code&gt;file&lt;/code&gt; と &lt;code&gt;patch&lt;/code&gt; ）がメモリにロードされるため、memory_limitが十分に高く設定されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="f6881d618af44a1a08c12647b0827f958ac15a08" translate="yes" xml:space="preserve">
          <source>Both files will be loaded into memory so ensure that your memory_limit is set high enough.</source>
          <target state="translated">両方のファイルがメモリにロードされるので、memory_limitが十分に高く設定されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="148b9c2ac363448df45861325bd9c87ddd9905ed" translate="yes" xml:space="preserve">
          <source>Both operands and the result for the &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; operators are always treated as integers.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; および &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 演算子のオペランドと結果は、常に整数として扱われます。</target>
        </trans-unit>
        <trans-unit id="465a2fb93ebf06813e906fb6b9f0a200e7691d08" translate="yes" xml:space="preserve">
          <source>Both operands and the result for the &lt;em&gt;&amp;lt;&amp;lt;&lt;/em&gt; and &lt;em&gt;&amp;gt;&amp;gt;&lt;/em&gt; operators are always treated as integers.</source>
          <target state="translated">オペランドと、&lt;em&gt;&amp;lt;&amp;lt;&lt;/em&gt;および&lt;em&gt;&amp;gt;&amp;gt;&lt;/em&gt;演算子の結果は、常に整数として扱われます。</target>
        </trans-unit>
        <trans-unit id="d3c42a84d70c069c05916c29fb515d7e9d5a8f71" translate="yes" xml:space="preserve">
          <source>Both square brackets and curly braces can be used interchangeably for accessing array elements (e.g. &lt;code&gt;$array[42]&lt;/code&gt; and &lt;code&gt;$array{42}&lt;/code&gt; will both do the same thing in the example above).</source>
          <target state="translated">角かっこと中括弧はどちらも、配列要素にアクセスするために交換可能に使用できます（たとえば、 &lt;code&gt;$array[42]&lt;/code&gt; と &lt;code&gt;$array{42}&lt;/code&gt; は、上記の例ではどちらも同じことを行います）。</target>
        </trans-unit>
        <trans-unit id="8d172067189f7539a928ee45cf7ac67f8bf26054" translate="yes" xml:space="preserve">
          <source>Both square brackets and curly braces can be used interchangeably for accessing array elements (e.g. &lt;em&gt;$array[42]&lt;/em&gt; and &lt;em&gt;$array{42}&lt;/em&gt; will both do the same thing in the example above).</source>
          <target state="translated">角括弧と中括弧はどちらも、配列要素にアクセスするために同じ意味で使用できます（たとえば、&lt;em&gt;$ array [42]&lt;/em&gt;と&lt;em&gt;$ array {42}&lt;/em&gt;は、上の例ではどちらも同じことを行います）。</target>
        </trans-unit>
        <trans-unit id="9ce58430f155187346fbef38f31e900533074c41" translate="yes" xml:space="preserve">
          <source>Bottom left corner</source>
          <target state="translated">左下隅</target>
        </trans-unit>
        <trans-unit id="cc7ed5d75aa0cc857e2d6f17cd59eb136c61f13f" translate="yes" xml:space="preserve">
          <source>Bottom right corner</source>
          <target state="translated">右下のコーナー</target>
        </trans-unit>
        <trans-unit id="1cde617e452bcf70453ceb228fbdfd8ae820962a" translate="yes" xml:space="preserve">
          <source>Bottom right x coordinate.</source>
          <target state="translated">右下のX座標。</target>
        </trans-unit>
        <trans-unit id="f57d57586cefac38eb286dc1f19e78c5cc329053" translate="yes" xml:space="preserve">
          <source>Bottom right y coordinate.</source>
          <target state="translated">右下のY座標。</target>
        </trans-unit>
        <trans-unit id="327cb3f57887d974b9e84e7ad6cd3f1cb560b545" translate="yes" xml:space="preserve">
          <source>Bracket style delimiters do not need to be escaped when they are used as meta characters within the pattern, but as with other delimiters they must be escaped when they are used as literal characters.</source>
          <target state="translated">ブラケットスタイルのデリミタは、パターン内でメタキャラクタとして使用する場合はエスケープする必要はありませんが、他のデリミタと同様に、リテラルキャラクタとして使用する場合はエスケープする必要があります。</target>
        </trans-unit>
        <trans-unit id="18b4dce48094c7dd485e28f03e6b95be5421ef4e" translate="yes" xml:space="preserve">
          <source>Breaks this node into two nodes at the specified &lt;code&gt;offset&lt;/code&gt;, keeping both in the tree as siblings.</source>
          <target state="translated">このノードを指定された &lt;code&gt;offset&lt;/code&gt; で2つのノードに分割し、両方を兄弟としてツリーに保持します。</target>
        </trans-unit>
        <trans-unit id="e8b19c1c9e8e112a2863254cb6122a231d27444d" translate="yes" xml:space="preserve">
          <source>Broadcast to all Threads blocking on a call to &lt;a href=&quot;cond.wait&quot;&gt;Cond::wait()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cond.wait&quot;&gt;Cond :: wait（）の&lt;/a&gt;呼び出しでブロックされているすべてのスレッドにブロードキャストします。</target>
        </trans-unit>
        <trans-unit id="4fe2b2d795f3f2f777c42a2cf0b7926852276d30" translate="yes" xml:space="preserve">
          <source>Buffer (class)</source>
          <target state="translated">バッファ(クラス)</target>
        </trans-unit>
        <trans-unit id="4e629f4bce0e11cebfc66d3ee51c9da3272876a9" translate="yes" xml:space="preserve">
          <source>Buffer::__construct</source>
          <target state="translated">Buffer::__construct</target>
        </trans-unit>
        <trans-unit id="b8a432d4b3074b504525ed57c1bbb7c3adf831ac" translate="yes" xml:space="preserve">
          <source>Buffer::add</source>
          <target state="translated">Buffer::add</target>
        </trans-unit>
        <trans-unit id="fb88467614c3b6c171e82d4529eadd21f9bfb672" translate="yes" xml:space="preserve">
          <source>Buffer::addBuffer</source>
          <target state="translated">Buffer::addBuffer</target>
        </trans-unit>
        <trans-unit id="b9874c412003c7050572e7c9374da6a7edf5e000" translate="yes" xml:space="preserve">
          <source>Buffer::appendFrom</source>
          <target state="translated">Buffer::appendFrom</target>
        </trans-unit>
        <trans-unit id="39f401378e1124847461455ed3e3ff2945ab235b" translate="yes" xml:space="preserve">
          <source>Buffer::copyout</source>
          <target state="translated">Buffer::copyout</target>
        </trans-unit>
        <trans-unit id="ce74dbc09caffe5e978f225c7eec69a3e278ebd0" translate="yes" xml:space="preserve">
          <source>Buffer::drain</source>
          <target state="translated">Buffer::drain</target>
        </trans-unit>
        <trans-unit id="84a1ae103ad93980bda63cc8beb01d6476d653d5" translate="yes" xml:space="preserve">
          <source>Buffer::enableLocking</source>
          <target state="translated">Buffer::enableLocking</target>
        </trans-unit>
        <trans-unit id="902d3649bd383026d3f4934940e00981dd0e2a1f" translate="yes" xml:space="preserve">
          <source>Buffer::expand</source>
          <target state="translated">Buffer::expand</target>
        </trans-unit>
        <trans-unit id="fef38a0fe25cda33f51bfc01aa9b27ed06078fc9" translate="yes" xml:space="preserve">
          <source>Buffer::freeze</source>
          <target state="translated">Buffer::freeze</target>
        </trans-unit>
        <trans-unit id="01d12ac127c1b9e5838d07d8af3d1cc1fc49a344" translate="yes" xml:space="preserve">
          <source>Buffer::lock</source>
          <target state="translated">Buffer::lock</target>
        </trans-unit>
        <trans-unit id="1201a7fc7af48631c51b8ef869a7386a1d20ad4f" translate="yes" xml:space="preserve">
          <source>Buffer::prepend</source>
          <target state="translated">Buffer::prepend</target>
        </trans-unit>
        <trans-unit id="f1b6411719b2406d8706c150f1dcceed1b54ac63" translate="yes" xml:space="preserve">
          <source>Buffer::prependBuffer</source>
          <target state="translated">Buffer::prependBuffer</target>
        </trans-unit>
        <trans-unit id="10f43cf704916736a171ed955fc1c78928aba766" translate="yes" xml:space="preserve">
          <source>Buffer::pullup</source>
          <target state="translated">Buffer::pullup</target>
        </trans-unit>
        <trans-unit id="d2aea6a1264bce311f27bf8d72948db3608b28e7" translate="yes" xml:space="preserve">
          <source>Buffer::read</source>
          <target state="translated">Buffer::read</target>
        </trans-unit>
        <trans-unit id="12d7997ec44348192f9e1838f175acb5c50db847" translate="yes" xml:space="preserve">
          <source>Buffer::readFrom</source>
          <target state="translated">Buffer::readFrom</target>
        </trans-unit>
        <trans-unit id="2b982aaa6731d373b7cdc7c5466218121d29cd26" translate="yes" xml:space="preserve">
          <source>Buffer::readLine</source>
          <target state="translated">Buffer::readLine</target>
        </trans-unit>
        <trans-unit id="60508826b1f7ab07646bf8452d2d6790ef1bc267" translate="yes" xml:space="preserve">
          <source>Buffer::search</source>
          <target state="translated">Buffer::search</target>
        </trans-unit>
        <trans-unit id="8885d0a558826a03adebf74e988faf7275e0bdf4" translate="yes" xml:space="preserve">
          <source>Buffer::searchEol</source>
          <target state="translated">Buffer::searchEol</target>
        </trans-unit>
        <trans-unit id="b49c61ae608de70ab0a5f80c0b79f1683600c83f" translate="yes" xml:space="preserve">
          <source>Buffer::substr</source>
          <target state="translated">Buffer::substr</target>
        </trans-unit>
        <trans-unit id="8a4f7fd079314a696c3312d2ba167ab5c14cb2dc" translate="yes" xml:space="preserve">
          <source>Buffer::unfreeze</source>
          <target state="translated">Buffer::unfreeze</target>
        </trans-unit>
        <trans-unit id="3dbfa27b637ca0150a1c8f0d3b1a504c3ac1d07e" translate="yes" xml:space="preserve">
          <source>Buffer::unlock</source>
          <target state="translated">Buffer::unlock</target>
        </trans-unit>
        <trans-unit id="7e03b1a932d08a910e8a90352c02e22f9b6010c2" translate="yes" xml:space="preserve">
          <source>Buffer::write</source>
          <target state="translated">Buffer::write</target>
        </trans-unit>
        <trans-unit id="dfaab1edd9241718ee8f86ec3b9f76096a2b7ebc" translate="yes" xml:space="preserve">
          <source>BufferEvent (class)</source>
          <target state="translated">バッファイベント</target>
        </trans-unit>
        <trans-unit id="53e076b45488eb25900080acdb1757f38b1ff7cd" translate="yes" xml:space="preserve">
          <source>BufferEvent::__construct</source>
          <target state="translated">BufferEvent::__construct</target>
        </trans-unit>
        <trans-unit id="54af84cc4011fbf2d46babe64e21c93a437fbe2a" translate="yes" xml:space="preserve">
          <source>BufferEvent::close</source>
          <target state="translated">BufferEvent::close</target>
        </trans-unit>
        <trans-unit id="7d407a064f7a4665aae1684c15ba79c51867216b" translate="yes" xml:space="preserve">
          <source>BufferEvent::connect</source>
          <target state="translated">BufferEvent::connect</target>
        </trans-unit>
        <trans-unit id="5cb6a96aac6f89c6bf33348ff81588e68887f40f" translate="yes" xml:space="preserve">
          <source>BufferEvent::connectHost</source>
          <target state="translated">BufferEvent::connectHost</target>
        </trans-unit>
        <trans-unit id="16227608923cc8dfe380bf1ddf147512f6d811ec" translate="yes" xml:space="preserve">
          <source>BufferEvent::createPair</source>
          <target state="translated">BufferEvent::createPair</target>
        </trans-unit>
        <trans-unit id="5ca9d530aefbf817a4ae6563eb3fa8cef3e73323" translate="yes" xml:space="preserve">
          <source>BufferEvent::disable</source>
          <target state="translated">BufferEvent::disable</target>
        </trans-unit>
        <trans-unit id="f98e763f5d195315ef66aee008e7cd650adfced1" translate="yes" xml:space="preserve">
          <source>BufferEvent::enable</source>
          <target state="translated">BufferEvent::enable</target>
        </trans-unit>
        <trans-unit id="100df7856667d55b0c6abd565420ccb44f8c125b" translate="yes" xml:space="preserve">
          <source>BufferEvent::free</source>
          <target state="translated">BufferEvent::free</target>
        </trans-unit>
        <trans-unit id="33965ad0318c5983cf5c38e6552eb42b7244162e" translate="yes" xml:space="preserve">
          <source>BufferEvent::getDnsErrorString</source>
          <target state="translated">BufferEvent::getDnsErrorString</target>
        </trans-unit>
        <trans-unit id="6d5eeb33c2048b25979a8a9e478194e98614cbff" translate="yes" xml:space="preserve">
          <source>BufferEvent::getEnabled</source>
          <target state="translated">BufferEvent::getEnabled</target>
        </trans-unit>
        <trans-unit id="9292e7e6cc9b811fc12d327d8a796ed2b99d67bf" translate="yes" xml:space="preserve">
          <source>BufferEvent::getInput</source>
          <target state="translated">BufferEvent::getInput</target>
        </trans-unit>
        <trans-unit id="0da43abff752b597420e7359e635d8f29e48e15b" translate="yes" xml:space="preserve">
          <source>BufferEvent::getOutput</source>
          <target state="translated">BufferEvent::getOutput</target>
        </trans-unit>
        <trans-unit id="e58d005c61dc1219c4acbea1ea7ced0b68d29366" translate="yes" xml:space="preserve">
          <source>BufferEvent::read</source>
          <target state="translated">BufferEvent::read</target>
        </trans-unit>
        <trans-unit id="11e2f4a028be69e15e59e643aee343012d7e1e2f" translate="yes" xml:space="preserve">
          <source>BufferEvent::readBuffer</source>
          <target state="translated">BufferEvent::readBuffer</target>
        </trans-unit>
        <trans-unit id="e6fcd7e4c71c388d071f6f2dfab40263f4d97349" translate="yes" xml:space="preserve">
          <source>BufferEvent::setCallbacks</source>
          <target state="translated">BufferEvent::setCallbacks</target>
        </trans-unit>
        <trans-unit id="0484a0ca930acf73425206bac1cedbf4c6da95dc" translate="yes" xml:space="preserve">
          <source>BufferEvent::setPriority</source>
          <target state="translated">BufferEvent::setPriority</target>
        </trans-unit>
        <trans-unit id="15d0e69bf341960381fdeab4c9d3dfda6a8aa9da" translate="yes" xml:space="preserve">
          <source>BufferEvent::setTimeouts</source>
          <target state="translated">BufferEvent::setTimeouts</target>
        </trans-unit>
        <trans-unit id="ba99e4555eb960cc1bde3ca3c3caca96c375decd" translate="yes" xml:space="preserve">
          <source>BufferEvent::setWatermark</source>
          <target state="translated">BufferEvent::setWatermark</target>
        </trans-unit>
        <trans-unit id="8becd9ef0f5ab43ef96b71eedbb8d91112636002" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslError</source>
          <target state="translated">BufferEvent::sslError</target>
        </trans-unit>
        <trans-unit id="568597fdc5d51f1f98c4c26fd10a991fbfce4366" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslFilter</source>
          <target state="translated">BufferEvent::sslFilter</target>
        </trans-unit>
        <trans-unit id="6aac5a90db7214dbcdefa4cfeae50c4e2fbf3e5c" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetCipherInfo</source>
          <target state="translated">BufferEvent::sslGetCipherInfo</target>
        </trans-unit>
        <trans-unit id="12e8d84fe2113b2678169b95791eeb37bcc22242" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetCipherName</source>
          <target state="translated">BufferEvent::sslGetCipherName</target>
        </trans-unit>
        <trans-unit id="6538cbfa54bc5652c3e4557b1923a4238c54d073" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetCipherVersion</source>
          <target state="translated">BufferEvent::sslGetCipherVersion</target>
        </trans-unit>
        <trans-unit id="88df75a1bad0d915db02197ec4b85d6d45c79da5" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetProtocol</source>
          <target state="translated">BufferEvent::sslGetProtocol</target>
        </trans-unit>
        <trans-unit id="52b9926185b61608086bbccb4057d10122f62e05" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslRenegotiate</source>
          <target state="translated">BufferEvent::sslRenegotiate</target>
        </trans-unit>
        <trans-unit id="9331183dec857b364e8fa33fa923f049cb00f5e6" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslSocket</source>
          <target state="translated">BufferEvent::sslSocket</target>
        </trans-unit>
        <trans-unit id="56703e0253a6626f3db31e049d09ca0e080e7457" translate="yes" xml:space="preserve">
          <source>BufferEvent::write</source>
          <target state="translated">BufferEvent::write</target>
        </trans-unit>
        <trans-unit id="ad838193ac6d141aebfb4886ff07fa04650ab632" translate="yes" xml:space="preserve">
          <source>BufferEvent::writeBuffer</source>
          <target state="translated">BufferEvent::writeBuffer</target>
        </trans-unit>
        <trans-unit id="5766313f4616285d7424c4a400bed4ad3bedfc86" translate="yes" xml:space="preserve">
          <source>Build a new SVMModel. Models will usually be created from the SVM::train function, but then saved models may be restored directly.</source>
          <target state="translated">新しいSVMMモデルを構築します。モデルは通常、SVM::train関数から作成されますが、保存されたモデルは直接復元することができます。</target>
        </trans-unit>
        <trans-unit id="d49f3175dcd17eeccbee03f32b7c9a134f811104" translate="yes" xml:space="preserve">
          <source>Built-in classes can define its own comparison, different classes are uncomparable, same class see &lt;a href=&quot;language.oop5.object-comparison&quot;&gt;Object Comparison&lt;/a&gt;</source>
          <target state="translated">組み込みクラスは独自の比較を定義できます。異なるクラスは比較できません。同じクラスは&lt;a href=&quot;language.oop5.object-comparison&quot;&gt;オブジェクト比較を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="4204fec258be60d235a79a85844bedd99808c0f1" translate="yes" xml:space="preserve">
          <source>But perhaps the most common use for of lambda-style (anonymous) functions is to create callback functions, for example when using &lt;a href=&quot;function.array-walk&quot;&gt;array_walk()&lt;/a&gt; or &lt;a href=&quot;function.usort&quot;&gt;usort()&lt;/a&gt;</source>
          <target state="translated">しかし、おそらく&lt;a href=&quot;function.array-walk&quot;&gt;array_walk（）&lt;/a&gt;または&lt;a href=&quot;function.usort&quot;&gt;usort（）を&lt;/a&gt;使用する場合など、ラムダスタイル（匿名）関数の最も一般的な用途は、コールバック関数を作成することです。</target>
        </trans-unit>
        <trans-unit id="42d82d64135c7c7eed0f8b3f9d575221a5a1108b" translate="yes" xml:space="preserve">
          <source>But there do is some usage need such feature, like unit testing. thus Yaf can be built with --enable-yaf-debug, which will allow Yaf read the value user set via script.</source>
          <target state="translated">しかし、ユニットテストのように、このような機能を必要とする使い方もあります。</target>
        </trans-unit>
        <trans-unit id="9c10a84ef665e2b028403dac66b7cda84d80803b" translate="yes" xml:space="preserve">
          <source>But this is not, and will result in a parse error in PHP 5:</source>
          <target state="translated">しかし、これはそうではなく、PHP 5ではパースエラーになります。</target>
        </trans-unit>
        <trans-unit id="4b52e24a2aba6fbc262ff4522c88ea5f7aec6bb9" translate="yes" xml:space="preserve">
          <source>But what happens if &lt;var&gt;$kitty&lt;/var&gt; tries to &lt;var&gt;eat&lt;/var&gt; the &lt;var&gt;$banana&lt;/var&gt;?</source>
          <target state="translated">しかし、 &lt;var&gt;$kitty&lt;/var&gt; が &lt;var&gt;$banana&lt;/var&gt; を &lt;var&gt;eat&lt;/var&gt; うとするとどうなりますか？</target>
        </trans-unit>
        <trans-unit id="c62f81e4da8b5c73825197e5c2450619314c8618" translate="yes" xml:space="preserve">
          <source>By contrast to &lt;a href=&quot;function.strtolower&quot;&gt;strtolower()&lt;/a&gt;, 'alphabetic' is determined by the Unicode character properties. Thus the behaviour of this function is not affected by locale settings and it can convert any characters that have 'alphabetic' property, such as A-umlaut (&amp;Auml;).</source>
          <target state="translated">&lt;a href=&quot;function.strtolower&quot;&gt;strtolower（）&lt;/a&gt;とは対照的に、「アルファベット」はUnicode文字プロパティによって決定されます。したがって、この関数の動作はロケール設定の影響を受けず、Aウムラウト（&amp;Auml;）などの「アルファベット」プロパティを持つすべての文字を変換できます。</target>
        </trans-unit>
        <trans-unit id="d675aa298427a255b86c1c1b913eeb917f6d4be4" translate="yes" xml:space="preserve">
          <source>By contrast to &lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper()&lt;/a&gt;, 'alphabetic' is determined by the Unicode character properties. Thus the behaviour of this function is not affected by locale settings and it can convert any characters that have 'alphabetic' property, such as a-umlaut (&amp;auml;).</source>
          <target state="translated">&lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper（）&lt;/a&gt;とは対照的に、「アルファベット順」はUnicode文字プロパティによって決定されます。したがって、この関数の動作はロケール設定の影響を受けず、a-umlaut（&amp;auml;）などの「アルファベット」プロパティを持つすべての文字を変換できます。</target>
        </trans-unit>
        <trans-unit id="d28fdae93cfe8c9acab3238f946a85b87a64740b" translate="yes" xml:space="preserve">
          <source>By contrast to the standard case folding functions such as &lt;a href=&quot;function.strtolower&quot;&gt;strtolower()&lt;/a&gt; and &lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper()&lt;/a&gt;, case folding is performed on the basis of the Unicode character properties. Thus the behaviour of this function is not affected by locale settings and it can convert any characters that have 'alphabetic' property, such as A-umlaut (&amp;Auml;).</source>
          <target state="translated">&lt;a href=&quot;function.strtolower&quot;&gt;strtolower（）&lt;/a&gt;や&lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper（）&lt;/a&gt;などの標準の大文字小文字変換関数とは対照的に、大文字小文字変換はUnicode文字プロパティに基づいて実行されます。したがって、この関数の動作はロケール設定の影響を受けず、Aウムラウト（&amp;Auml;）などの「アルファベット」プロパティを持つすべての文字を変換できます。</target>
        </trans-unit>
        <trans-unit id="f5fdbd907ae04f30134c3818d09eab1507d27c6d" translate="yes" xml:space="preserve">
          <source>By default &lt;strong&gt;pg_delete()&lt;/strong&gt; passes raw values. Values must be escaped or PGSQL_DML_ESCAPE option must be specified. PGSQL_DML_ESCAPE quotes and escapes parameters/identifiers. Therefore, table/column names became case sensitive.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;pg_delete（）&lt;/strong&gt;は生の値を渡します。値をエスケープするか、PGSQL_DML_ESCAPEオプションを指定する必要があります。PGSQL_DML_ESCAPEは、パラメータ/識別子を引用してエスケープします。したがって、テーブル/列名では大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="aec1ecc4d28526e4112181ea59f145e7feb24bdb" translate="yes" xml:space="preserve">
          <source>By default &lt;strong&gt;pg_insert()&lt;/strong&gt; passes raw values. Values must be escaped or PGSQL_DML_ESCAPE option must be specified. PGSQL_DML_ESCAPE quotes and escapes parameters/identifiers. Therefore, table/column names became case sensitive.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;pg_insert（）&lt;/strong&gt;は生の値を渡します。値をエスケープするか、PGSQL_DML_ESCAPEオプションを指定する必要があります。PGSQL_DML_ESCAPEは、パラメータ/識別子を引用してエスケープします。したがって、テーブル/列名では大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="8ce7008598835333ee193547fc5a29bc8db13749" translate="yes" xml:space="preserve">
          <source>By default &lt;strong&gt;pg_select()&lt;/strong&gt; passes raw values. Values must be escaped or PGSQL_DML_ESCAPE option must be specified. PGSQL_DML_ESCAPE quotes and escapes parameters/identifiers. Therefore, table/column names became case sensitive.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;pg_select（）&lt;/strong&gt;は生の値を渡します。値をエスケープするか、PGSQL_DML_ESCAPEオプションを指定する必要があります。PGSQL_DML_ESCAPEは、パラメータ/識別子を引用してエスケープします。したがって、テーブル/列名では大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="0fc03cf4e3849210dea678c6c42031eed5c32d27" translate="yes" xml:space="preserve">
          <source>By default &lt;strong&gt;pg_update()&lt;/strong&gt; passes raw values. Values must be escaped or PGSQL_DML_ESCAPE option must be specified. PGSQL_DML_ESCAPE quotes and escapes parameters/identifiers. Therefore, table/column names became case sensitive.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;pg_update（）&lt;/strong&gt;は生の値を渡します。値をエスケープするか、PGSQL_DML_ESCAPEオプションを指定する必要があります。PGSQL_DML_ESCAPEは、パラメータ/識別子を引用してエスケープします。したがって、テーブル/列名では大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="f04b5f931d27087eb2765c54b98dae10ca9ea3bd" translate="yes" xml:space="preserve">
          <source>By default Libevent turns underlying file descriptors, or sockets, to non-blocking mode. This flag tells Libevent to leave them in blocking mode.</source>
          <target state="translated">デフォルトでは、Libevent は、基礎となるファイルディスクリプタ(ソケット)をノンブロッキングモードにする。このフラグは、Libevent がそれらをブロッキングモードのままにすることを指示する。</target>
        </trans-unit>
        <trans-unit id="b2e72178624c9ca39858e1c67daba59e002cec13" translate="yes" xml:space="preserve">
          <source>By default all events are scheduled with the same priority (&lt;code&gt;npriorities&lt;/code&gt;/2). Using &lt;strong&gt;event_base_priority_init()&lt;/strong&gt; you can change the number of event priority levels and then set a desired priority for each event.</source>
          <target state="translated">デフォルトでは、すべてのイベントは同じ優先度（ &lt;code&gt;npriorities&lt;/code&gt; / 2）でスケジュールされます。&lt;strong&gt;event_base_priority_init（）&lt;/strong&gt;を使用して、イベントの優先度レベルの数を変更し、各イベントに必要な優先度を設定できます。</target>
        </trans-unit>
        <trans-unit id="26de7b5324d20794622ce77df60d00ae0df480de" translate="yes" xml:space="preserve">
          <source>By default an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; is returned. If &lt;code&gt;return_float&lt;/code&gt; is set, then a &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; is returned.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;language.types.array&quot;&gt;配列&lt;/a&gt;が返されます。 &lt;code&gt;return_float&lt;/code&gt; が設定されている場合、&lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="6f284289077d3d0e9df7007aa50926edec53abed" translate="yes" xml:space="preserve">
          <source>By default an array is returned. If &lt;code&gt;returnFloat&lt;/code&gt; is set, then a float is returned.</source>
          <target state="translated">デフォルトでは、配列が返されます。 &lt;code&gt;returnFloat&lt;/code&gt; が設定されている場合、floatが返されます。</target>
        </trans-unit>
        <trans-unit id="b1c08ddf3479640dbed77fcd9d3a9c49149d80a2" translate="yes" xml:space="preserve">
          <source>By default an attribute can only be used once per declaration. If the attribute should be repeatable on declarations it must be specified as part of the bitmask to the &lt;code&gt;#[Attribute]&lt;/code&gt; declaration.</source>
          <target state="translated">デフォルトでは、属性は宣言ごとに1回だけ使用できます。属性を宣言で繰り返し可能にする必要がある場合は、 &lt;code&gt;#[Attribute]&lt;/code&gt; 宣言のビットマスクの一部として指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="94399ce384a712cdc79f9622329246ba486b05d4" translate="yes" xml:space="preserve">
          <source>By default full OID notation is used for keys in output array. If set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; subtree prefix will be removed from keys leaving only suffix of object_id.</source>
          <target state="translated">デフォルトでは、完全なOID表記が出力配列のキーに使用されます。&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; に&lt;/strong&gt;設定すると、サブツリープレフィックスがキーから削除され、object_idのサフィックスのみが残ります。</target>
        </trans-unit>
        <trans-unit id="1daefe7a11c77b758344272257b9986471de07d4" translate="yes" xml:space="preserve">
          <source>By default it checks all include paths to contain filenames built up by the lowercase class name appended by the filename extensions .inc and .php.</source>
          <target state="translated">デフォルトでは、すべてのインクルードパスにファイル名拡張子.incと.phpが付加された小文字のクラス名で構築されたファイル名が含まれているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="4cad97d4772a513a14119703844006573ad0fce8" translate="yes" xml:space="preserve">
          <source>By default on some platforms, once a listener socket is closed, no other socket can bind to the same port until a while has passed. Setting this option makes Libevent mark the socket as reusable, so that once it is closed, another socket can be opened to listen on the same port.</source>
          <target state="translated">一部のプラットフォームではデフォルトでは、一度リスナーソケットを閉じると、しばらく時間が経過するまで他のソケットが同じポートにバインドできなくなります。このオプションを設定すると、Libevent はそのソケットを再利用可能なものとしてマークし、一度閉じたソケットを別のソケットに開いて同じポートでリスナーすることができるようになります。</target>
        </trans-unit>
        <trans-unit id="550dc8ff894807a5e0db5a9bf093b0144810af9f" translate="yes" xml:space="preserve">
          <source>By default target must match a particular pixel color exactly. However, in many cases two colors may differ by a small amount. The fuzz member of image defines how much tolerance is acceptable to consider two colors as the same. This parameter represents the variation on the quantum range.</source>
          <target state="translated">デフォルトではターゲットは特定のピクセルの色と正確に一致しなければなりません。しかし多くの場合、2つの色がわずかに異なることがあります。image の fuzz メンバは、2 つの色を同じ色とみなすための許容範囲を定義します。このパラメータは量子範囲の変化を表します。</target>
        </trans-unit>
        <trans-unit id="9b19d1383ea2ae74b773ac098a07b778efa0af21" translate="yes" xml:space="preserve">
          <source>By default the Memcached instances are destroyed at the end of the request. To create an instance that persists between requests, use &lt;code&gt;persistent_id&lt;/code&gt; to specify a unique ID for the instance. All instances created with the same &lt;code&gt;persistent_id&lt;/code&gt; will share the same connection.</source>
          <target state="translated">デフォルトでは、Memcachedインスタンスはリクエストの最後に破棄されます。リクエスト間で持続するインスタンスを作成するには、 &lt;code&gt;persistent_id&lt;/code&gt; を使用してインスタンスの一意のIDを指定します。同じ &lt;code&gt;persistent_id&lt;/code&gt; で作成されたすべてのインスタンスは、同じ接続を共有します。</target>
        </trans-unit>
        <trans-unit id="c4e78f1c74468051f2c950ff7b49efb3de5c8cf9" translate="yes" xml:space="preserve">
          <source>By default the UCD</source>
          <target state="translated">デフォルトでは、UCD</target>
        </trans-unit>
        <trans-unit id="1222d4e4aafb65f5393a6ee1633532ea3bac5f86" translate="yes" xml:space="preserve">
          <source>By default the tables name that field belongs to is returned but if &lt;code&gt;oid_only&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, then the oid will instead be returned.</source>
          <target state="translated">デフォルトでは、フィールドが属するテーブル名が返されますが、 &lt;code&gt;oid_only&lt;/code&gt; が&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;に設定されている場合は、代わりにoidが返されます。</target>
        </trans-unit>
        <trans-unit id="e36ee2505451c912e8f5aabbab8cf2d7422de348" translate="yes" xml:space="preserve">
          <source>By default the tables name that field belongs to is returned but if &lt;code&gt;oid_only&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, then the oid will instead be returned.</source>
          <target state="translated">デフォルトでは、フィールドが属するテーブル名が返されますが、 &lt;code&gt;oid_only&lt;/code&gt; が&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;に設定されている&lt;strong&gt;場合は&lt;/strong&gt;、代わりにoidが返されます。</target>
        </trans-unit>
        <trans-unit id="fbf96e667bb289f2d21af357c9716906979dcd35" translate="yes" xml:space="preserve">
          <source>By default this includes the following methods: &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; , &lt;code&gt;HEAD&lt;/code&gt; , &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; . See &lt;code&gt;EventHttpRequest::CMD_*&lt;/code&gt; constants.</source>
          <target state="translated">デフォルトでは、これには次のメソッドが含まれます： &lt;code&gt;GET&lt;/code&gt; 、 &lt;code&gt;POST&lt;/code&gt; 、 &lt;code&gt;HEAD&lt;/code&gt; 、 &lt;code&gt;PUT&lt;/code&gt; 、 &lt;code&gt;DELETE&lt;/code&gt; 。 &lt;code&gt;EventHttpRequest::CMD_*&lt;/code&gt; 定数を参照してください。</target>
        </trans-unit>
        <trans-unit id="0b2f59a620e268d62cce13da491cf0ddd8a126a2" translate="yes" xml:space="preserve">
          <source>By default this includes the following methods: &lt;em&gt;GET&lt;/em&gt; , &lt;em&gt;POST&lt;/em&gt; , &lt;em&gt;HEAD&lt;/em&gt; , &lt;em&gt;PUT&lt;/em&gt; , &lt;em&gt;DELETE&lt;/em&gt; . See &lt;em&gt;EventHttpRequest::CMD_*&lt;/em&gt; constants.</source>
          <target state="translated">デフォルトでは、次のメソッドが含まれます：&lt;em&gt;GET&lt;/em&gt;、&lt;em&gt;POST&lt;/em&gt;、&lt;em&gt;HEAD&lt;/em&gt;、&lt;em&gt;PUT&lt;/em&gt;、&lt;em&gt;DELETE&lt;/em&gt;。&lt;em&gt;EventHttpRequest :: CMD_ *&lt;/em&gt;定数を参照してください。</target>
        </trans-unit>
        <trans-unit id="9ef9d726147a43c53d2c594ed6ae4f7f61730985" translate="yes" xml:space="preserve">
          <source>By default uopz disables the exit opcode, so &lt;a href=&quot;function.exit&quot;&gt;exit()&lt;/a&gt; calls are practically ignored. &lt;strong&gt;uopz_allow_exit()&lt;/strong&gt; allows to control this behavior.</source>
          <target state="translated">デフォルトでは、uopzは終了オペコードを無効にするため、&lt;a href=&quot;function.exit&quot;&gt;exit（）&lt;/a&gt;呼び出しは実質的に無視されます。&lt;strong&gt;uopz_allow_exit（）を&lt;/strong&gt;使用すると、この動作を制御できます。</target>
        </trans-unit>
        <trans-unit id="169b6cce2bc13e3f8648d9d4b2f1c45882e22cc1" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;data_is_url&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. Use &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; to specify that &lt;code&gt;data&lt;/code&gt; is a path or URL to an XML document instead of &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; data.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;data_is_url&lt;/code&gt; は&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;です。 &lt;code&gt;data&lt;/code&gt; が&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;データの代わりにXMLドキュメントへのパスまたはURLであることを指定するには、&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="be69659dc286765b08069654a0e97ea65c60bc70" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;data_is_url&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. Use &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; to specify that &lt;code&gt;data&lt;/code&gt; is a path or URL to an XML document instead of string data.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;data_is_url&lt;/code&gt; は&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;です。&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;を使用して、 &lt;code&gt;data&lt;/code&gt; が文字列データではなくXMLドキュメントへのパスまたはURLであることを指定します。</target>
        </trans-unit>
        <trans-unit id="b3d4ddcbaf6d2438f5a65fe421703c2af85ab111" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;&lt;code&gt;PHP_QUERY_RFC1738&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt; &lt;code&gt;PHP_QUERY_RFC1738&lt;/code&gt; &lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="37c4ab97d3e4e3626921a7113fd72058b457da88" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STDERR&lt;/code&gt;&lt;/strong&gt; have the VT100 feature enabled.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt; &lt;code&gt;STDOUT&lt;/code&gt; &lt;/strong&gt;と&lt;strong&gt; &lt;code&gt;STDERR&lt;/code&gt; &lt;/strong&gt;ではVT100機能が有効になっています。</target>
        </trans-unit>
        <trans-unit id="b95d6bc6291745ead5afe09978038d77f2800daf" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;Yaf_Loader&lt;/strong&gt; assume all library (class defined script) store in the &lt;a href=&quot;https://secure.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;global library directory&lt;/a&gt;, which is defined in the php.ini(yaf.library).</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;Yaf_Loader&lt;/strong&gt;は、php.ini（yaf.library）で定義されている&lt;a href=&quot;https://secure.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;グローバルライブラリディレクトリ&lt;/a&gt;にすべてのライブラリ（クラス定義スクリプト）ストアを想定しています。</target>
        </trans-unit>
        <trans-unit id="724711b1eaa6cca674096ef53901e7ac767527ba" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;Yaf_Loader&lt;/strong&gt; assume all library (class defined script) store in the &lt;a href=&quot;https://www.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;global library directory&lt;/a&gt;, which is defined in the php.ini(yaf.library).</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;Yaf_Loader&lt;/strong&gt;は、すべてのライブラリ（クラス定義スクリプト）がphp.ini（yaf.library）で定義されている&lt;a href=&quot;https://www.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;グローバルライブラリディレクトリに&lt;/a&gt;格納されていると想定しています。</target>
        </trans-unit>
        <trans-unit id="12c0cc42a4af9bc911ba463c4d6f7b135fd07906" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;dns_get_record()&lt;/strong&gt; will search for any resource records associated with &lt;code&gt;hostname&lt;/code&gt;. To limit the query, specify the optional &lt;code&gt;type&lt;/code&gt; parameter. May be any one of the following: &lt;strong&gt;&lt;code&gt;DNS_A&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_CNAME&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_HINFO&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_CAA&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_MX&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_NS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_PTR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_SOA&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_TXT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_AAAA&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_SRV&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_NAPTR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_A6&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_ALL&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;DNS_ANY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;dns_get_record（）&lt;/strong&gt;は、 &lt;code&gt;hostname&lt;/code&gt; に関連付けられているリソースレコードを検索します。クエリを制限するには、オプションの &lt;code&gt;type&lt;/code&gt; パラメータを指定します。 ：以下のいずれであってもよい&lt;strong&gt; &lt;code&gt;DNS_A&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_CNAME&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_HINFO&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_CAA&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_MX&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_NS&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_PTR&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_SOA&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_TXT&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_AAAA&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_SRV&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_NAPTR&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_A6&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;DNS_ALL&lt;/code&gt; &lt;/strong&gt;または&lt;strong&gt; &lt;code&gt;DNS_ANY&lt;/code&gt; &lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d45026123fdb97b1d69e56ca3ec14c4406135a00" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;microtime()&lt;/strong&gt; returns a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; in the form &quot;msec sec&quot;, where &lt;em&gt;sec&lt;/em&gt; is the number of seconds since the Unix epoch (0:00:00 January 1,1970 GMT), and &lt;em&gt;msec&lt;/em&gt; measures microseconds that have elapsed since &lt;em&gt;sec&lt;/em&gt; and is also expressed in seconds.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;微小時間（）が&lt;/strong&gt;返す&lt;a href=&quot;language.types.string&quot;&gt;文字列を&lt;/a&gt;フォーム「ミリ秒」、に&lt;em&gt;秒を&lt;/em&gt; Unixエポック（夜12時00分00秒1月1,1970 GMT）からの秒数であり、&lt;em&gt;ミリ秒&lt;/em&gt;から経過した対策のマイクロ&lt;em&gt;秒&lt;/em&gt;また、秒単位で表されます。</target>
        </trans-unit>
        <trans-unit id="cdaa80beb93c76e12c6b8c1fce3589106e43d9b2" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;microtime()&lt;/strong&gt; returns a string in the form &quot;msec sec&quot;, where &lt;code&gt;sec&lt;/code&gt; is the number of seconds since the Unix epoch (0:00:00 January 1,1970 GMT), and &lt;code&gt;msec&lt;/code&gt; measures microseconds that have elapsed since &lt;code&gt;sec&lt;/code&gt; and is also expressed in seconds.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;microtime（）&lt;/strong&gt;は「&lt;strong&gt;msecsec&lt;/strong&gt;」の形式で文字列を返します。ここで、 &lt;code&gt;sec&lt;/code&gt; はUnixエポック（0:00:00 1970年1月1日GMT）からの秒数であり、 &lt;code&gt;msec&lt;/code&gt; は &lt;code&gt;sec&lt;/code&gt; から経過したマイクロ秒を測定します。また、秒単位で表されます。</target>
        </trans-unit>
        <trans-unit id="1d62244b8ee003c572b59e276aac94da7d3d70d4" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;querySingle()&lt;/strong&gt; returns the value of the first column returned by the query. If &lt;code&gt;entire_row&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, then it returns an array of the entire first row.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;querySingle（）&lt;/strong&gt;はクエリによって返された最初の列の値を返します。 &lt;code&gt;entire_row&lt;/code&gt; が&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; の&lt;/strong&gt;場合、最初の行全体の配列を返します。</target>
        </trans-unit>
        <trans-unit id="686b1efa05460f9030df0905f73a6d443d3e57d5" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;querySingle()&lt;/strong&gt; returns the value of the first column returned by the query. If &lt;code&gt;entire_row&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, then it returns an array of the entire first row.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;querySingle（）&lt;/strong&gt;はクエリによって返された最初の列の値を返します。場合 &lt;code&gt;entire_row&lt;/code&gt; がある&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; &lt;/strong&gt;、それは全体の最初の行の配列を返します。</target>
        </trans-unit>
        <trans-unit id="21b1a6d92d22396734fa5884ce36c955b2a1f68e" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;stream_filter_append()&lt;/strong&gt; will attach the filter to the &lt;code&gt;read filter chain&lt;/code&gt; if the file was opened for reading (i.e. File Mode: &lt;code&gt;r&lt;/code&gt;, and/or &lt;code&gt;+&lt;/code&gt;). The filter will also be attached to the &lt;code&gt;write filter chain&lt;/code&gt; if the file was opened for writing (i.e. File Mode: &lt;code&gt;w&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and/or &lt;code&gt;+&lt;/code&gt;). &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt;, and/or &lt;strong&gt;&lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt;&lt;/strong&gt; can also be passed to the &lt;code&gt;read_write&lt;/code&gt; parameter to override this behavior.</source>
          <target state="translated">デフォルトでは、ファイルが読み取り用に開かれている場合（つまり、ファイルモード： &lt;code&gt;r&lt;/code&gt; 、および/または &lt;code&gt;+&lt;/code&gt; ）、&lt;strong&gt;stream_filter_append（）&lt;/strong&gt;はフィルターを &lt;code&gt;read filter chain&lt;/code&gt; アタッチします。ファイルが書き込み用に開かれた場合（つまり、ファイルモード： &lt;code&gt;w&lt;/code&gt; 、 &lt;code&gt;a&lt;/code&gt; 、および/または &lt;code&gt;+&lt;/code&gt; ）、 &lt;code&gt;write filter chain&lt;/code&gt; は書き込みフィルターチェーンにもアタッチされます。&lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt;、および/または&lt;strong&gt; &lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt; &lt;/strong&gt;を &lt;code&gt;read_write&lt;/code&gt; パラメーターに渡して、この動作をオーバーライドすることもできます。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39f012ccf27bcf6ac35d4b701eda654a6ee0d247" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;stream_filter_append()&lt;/strong&gt; will attach the filter to the &lt;em&gt;read filter chain&lt;/em&gt; if the file was opened for reading (i.e. File Mode: &lt;em&gt;r&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). The filter will also be attached to the &lt;em&gt;write filter chain&lt;/em&gt; if the file was opened for writing (i.e. File Mode: &lt;em&gt;w&lt;/em&gt;, &lt;em&gt;a&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt;, and/or &lt;strong&gt;&lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt;&lt;/strong&gt; can also be passed to the &lt;code&gt;read_write&lt;/code&gt; parameter to override this behavior.</source>
          <target state="translated">デフォルトでは、ファイルが読み取り用に開かれている場合（つまり、ファイルモード：&lt;em&gt;r&lt;/em&gt;や&lt;em&gt;+&lt;/em&gt;）、&lt;strong&gt;stream_filter_append（）&lt;/strong&gt;はフィルターを&lt;em&gt;読み取りフィルターチェーンに&lt;/em&gt;アタッチします。ファイルが書き込み用に開かれた場合（つまり、ファイルモード：&lt;em&gt;w&lt;/em&gt;、&lt;em&gt;a&lt;/em&gt;、&lt;em&gt;+&lt;/em&gt;）、&lt;em&gt;フィルター&lt;/em&gt;は&lt;em&gt;書き込みフィルターチェーンに&lt;/em&gt;もアタッチされます。&lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt;、および/または&lt;strong&gt; &lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt; &lt;/strong&gt;を &lt;code&gt;read_write&lt;/code&gt; パラメータに渡して、この動作をオーバーライドすることもできます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45ccb6b0f84978b7fede84b099edfec2121f7f07" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;stream_filter_prepend()&lt;/strong&gt; will attach the filter to the &lt;code&gt;read filter chain&lt;/code&gt; if the file was opened for reading (i.e. File Mode: &lt;code&gt;r&lt;/code&gt;, and/or &lt;code&gt;+&lt;/code&gt;). The filter will also be attached to the &lt;code&gt;write filter chain&lt;/code&gt; if the file was opened for writing (i.e. File Mode: &lt;code&gt;w&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and/or &lt;code&gt;+&lt;/code&gt;). &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt;, and/or &lt;strong&gt;&lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt;&lt;/strong&gt; can also be passed to the &lt;code&gt;read_write&lt;/code&gt; parameter to override this behavior. See &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append()&lt;/a&gt; for an example of using this parameter.</source>
          <target state="translated">デフォルトでは、ファイルが読み取り用に開かれている場合（つまり、ファイルモード： &lt;code&gt;r&lt;/code&gt; 、および/または &lt;code&gt;+&lt;/code&gt; ）、&lt;strong&gt;stream_filter_prepend（）&lt;/strong&gt;はフィルターを &lt;code&gt;read filter chain&lt;/code&gt; アタッチします。ファイルが書き込み用に開かれた場合（つまり、ファイルモード： &lt;code&gt;w&lt;/code&gt; 、 &lt;code&gt;a&lt;/code&gt; 、および/または &lt;code&gt;+&lt;/code&gt; ）、 &lt;code&gt;write filter chain&lt;/code&gt; は書き込みフィルターチェーンにもアタッチされます。&lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt;、および/または&lt;strong&gt; &lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt; &lt;/strong&gt;を &lt;code&gt;read_write&lt;/code&gt; パラメーターに渡して、この動作をオーバーライドすることもできます。このパラメーターの使用例については、&lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append（）&lt;/a&gt;を参照してください。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c54c916e8dc9476ea8374319aae895028e037969" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;stream_filter_prepend()&lt;/strong&gt; will attach the filter to the &lt;em&gt;read filter chain&lt;/em&gt; if the file was opened for reading (i.e. File Mode: &lt;em&gt;r&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). The filter will also be attached to the &lt;em&gt;write filter chain&lt;/em&gt; if the file was opened for writing (i.e. File Mode: &lt;em&gt;w&lt;/em&gt;, &lt;em&gt;a&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt;, and/or &lt;strong&gt;&lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt;&lt;/strong&gt; can also be passed to the &lt;code&gt;read_write&lt;/code&gt; parameter to override this behavior. See &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append()&lt;/a&gt; for an example of using this parameter.</source>
          <target state="translated">デフォルトでは、ファイルが読み取り用に開かれている場合（つまり、ファイルモード：&lt;em&gt;r&lt;/em&gt;や&lt;em&gt;+&lt;/em&gt;）、&lt;strong&gt;stream_filter_prepend（）&lt;/strong&gt;はフィルターを&lt;em&gt;読み取りフィルターチェーンに&lt;/em&gt;アタッチします。ファイルが書き込み用に開かれた場合（つまり、ファイルモード：&lt;em&gt;w&lt;/em&gt;、&lt;em&gt;a&lt;/em&gt;、&lt;em&gt;+&lt;/em&gt;）、&lt;em&gt;フィルター&lt;/em&gt;は&lt;em&gt;書き込みフィルターチェーンに&lt;/em&gt;もアタッチされます。&lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt;、および/または&lt;strong&gt; &lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt; &lt;/strong&gt;を &lt;code&gt;read_write&lt;/code&gt; パラメータに渡して、この動作をオーバーライドすることもできます。このパラメーターの使用例については、&lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append（）&lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c01028885d1d09d492aa19806ee37a7f661109e" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;version_compare()&lt;/strong&gt; returns &lt;code&gt;-1&lt;/code&gt; if the first version is lower than the second, &lt;code&gt;0&lt;/code&gt; if they are equal, and &lt;code&gt;1&lt;/code&gt; if the second is lower.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;version_compare（）&lt;/strong&gt;戻り &lt;code&gt;-1&lt;/code&gt; 、最初のバージョンは、第二のより低い場合 &lt;code&gt;0&lt;/code&gt; それらが等しい場合、および &lt;code&gt;1&lt;/code&gt; 秒が低い場合。</target>
        </trans-unit>
        <trans-unit id="67d2a45dc61ddf638922ba03b999977682dc2971" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;version_compare()&lt;/strong&gt; returns &lt;em&gt;-1&lt;/em&gt; if the first version is lower than the second, &lt;em&gt;0&lt;/em&gt; if they are equal, and &lt;em&gt;1&lt;/em&gt; if the second is lower.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;version_compare（）&lt;/strong&gt;戻り&lt;em&gt;-1&lt;/em&gt;、最初のバージョンは、第二のより低い場合&lt;em&gt;0&lt;/em&gt;それらが等しい場合、および&lt;em&gt;1&lt;/em&gt;秒が低い場合。</target>
        </trans-unit>
        <trans-unit id="27460a8095a98ca40ced156b1791796b14c59245" translate="yes" xml:space="preserve">
          <source>By default, PCRE treats the subject string as consisting of a single &quot;line&quot; of characters (even if it actually contains several newlines). The &quot;start of line&quot; metacharacter (^) matches only at the start of the string, while the &quot;end of line&quot; metacharacter ($) matches only at the end of the string, or before a terminating newline (unless &lt;em&gt;D&lt;/em&gt; modifier is set). This is the same as Perl.  When this modifier is set, the &quot;start of line&quot; and &quot;end of line&quot; constructs match immediately following or immediately before any newline in the subject string, respectively, as well as at the very start and end. This is equivalent to Perl's /m modifier. If there are no &quot;\n&quot; characters in a subject string, or no occurrences of ^ or $ in a pattern, setting this modifier has no effect.</source>
          <target state="translated">デフォルトでは、PCREは対象の文字列を単一の「行」の文字で構成されているものとして扱います（実際に複数の改行が含まれている場合でも）。 「行の先頭」のメタ文字（^）は文字列の先頭でのみ一致し、「行の終わり」のメタ文字（$）は文字列の末尾または終了改行の前でのみ一致します（&lt;em&gt;D&lt;/em&gt;修飾子が設定されていない場合））。これはPerlと同じです。この修飾子が設定されている場合、「行の始まり」と「行の終わり」の構成は、それぞれ件名の文字列の改行の直後または直前と、最初と最後に一致します。これは、Perlの/ m修飾子と同等です。件名の文字列に「\ n」文字が含まれていない場合、またはパターンに^または$が含まれていない場合、この修飾子を設定しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="876bdd67ceb4caa39c53bb02652742dc6db10c7f" translate="yes" xml:space="preserve">
          <source>By default, PHP will coerce values of the wrong type into the expected scalar type declaration if possible. For example, a function that is given an int for a parameter that expects a string will get a variable of type string.</source>
          <target state="translated">デフォルトでは、PHP は可能であれば間違った型の値をスカラ型宣言に強制します。たとえば、文字列を期待するパラメータに int を指定した関数は string 型の変数を取得します。</target>
        </trans-unit>
        <trans-unit id="3d0196c5a2bb6cf278769248a1a2d040c7e89ffe" translate="yes" xml:space="preserve">
          <source>By default, PHP will coerce values of the wrong type into the expected scalar type if possible. For example, a function that is given an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; for a parameter that expects a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; will get a variable of type &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、可能な場合、PHPは間違った型の値を予期されたスカラー型に強制変換します。例えば、与えられた関数&lt;a href=&quot;language.types.integer&quot;&gt;整数を&lt;/a&gt;期待パラメータの&lt;a href=&quot;language.types.string&quot;&gt;文字列が&lt;/a&gt;型の可変取得する&lt;a href=&quot;language.types.string&quot;&gt;文字列&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b17d452802e1da8437b76a937ab04a4b3cd415f6" translate="yes" xml:space="preserve">
          <source>By default, a whitespace character is any character that the C library function isspace() recognizes, though it is possible to compile PCRE with alternative character type tables. Normally isspace() matches space, formfeed, newline, carriage return, horizontal tab, and vertical tab. Perl 5 no longer includes vertical tab in its set of whitespace characters. The \v escape that was in the Perl documentation for a long time was never in fact recognized. However, the character itself was treated as whitespace at least up to 5.002. In 5.004 and 5.005 it does not match \s.</source>
          <target state="translated">デフォルトでは、空白文字は C ライブラリ関数 isspace()が認識する任意の文字ですが、PCRE を別の文字型テーブルでコンパイルすることも可能です。通常、isspace()はスペース、フォームフィード、改行、キャリッジリターン、水平タブ、垂直タブにマッチします。Perl 5 では、空白文字のセットに垂直タブが含まれなくなりました。長い間Perlのドキュメントにあった\vエスケープは、実際には認識されませんでした。しかし、この文字自体は、少なくとも 5.002 までは空白文字として扱われていました。5.004 と 5.005 では †s とは一致しません。</target>
        </trans-unit>
        <trans-unit id="60428d9473190a6b74698ee79dd88db0cbef4e7c" translate="yes" xml:space="preserve">
          <source>By default, all of the superglobals are available but there are directives that affect this availability. For further information, refer to the documentation for &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.variables-order&quot;&gt;variables_order&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、すべてのスーパーグローバルを使用できますが、この可用性に影響を与えるディレクティブがあります。詳細については、&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.variables-order&quot;&gt;variables_order&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="bcdf0010dff9cb7e1a63daad8eb451745742e6b6" translate="yes" xml:space="preserve">
          <source>By default, all of the superglobals are available but there are directives that affect this availability. For further information, refer to the documentation for &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.variables-order&quot;&gt;variables_order&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、すべてのスーパーグローバルが使用可能ですが、この使用可能性に影響を与えるディレクティブがあります。詳細については、&lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.variables-order&quot;&gt;variables_order&lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ebc9b50aa43ff8d8fd03f2219bf2b47983e6e3b1" translate="yes" xml:space="preserve">
          <source>By default, auto-commit is on for a connection. Disabling auto-commit is equivalent with starting a transaction.</source>
          <target state="translated">デフォルトでは、接続に対して自動コミットがオンになっています。自動コミットを無効にすることは、トランザクションを開始することと同じです。</target>
        </trans-unit>
        <trans-unit id="5706e160755895eb76a2ad3360399b5df2f770c1" translate="yes" xml:space="preserve">
          <source>By default, function arguments are passed by value (so that if the value of the argument within the function is changed, it does not get changed outside of the function). To allow a function to modify its arguments, they must be passed by reference.</source>
          <target state="translated">デフォルトでは、関数の引数は値で渡されます(関数内の引数の値が変更されても、関数の外では変更されません)。関数がその引数を変更できるようにするには、引数は参照で渡されなければなりません。</target>
        </trans-unit>
        <trans-unit id="f95bbeb6560da109d08aafe4961c4f7959810269" translate="yes" xml:space="preserve">
          <source>By default, the &lt;strong&gt;sqlsrv_connect()&lt;/strong&gt; uses connection pooling to improve connection performance. To turn off connection pooling (i.e. force a new connection on each call), set the &quot;ConnectionPooling&quot; option in the $connectionOptions array to 0 (or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;). For more information, see &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc644930.aspx&quot;&gt;&amp;raquo; SQLSRV Connection Pooling&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;sqlsrv_connect（）&lt;/strong&gt;は接続プールを使用して接続パフォーマンスを向上させます。接続プールをオフにするには（つまり、呼び出しごとに新しい接続を強制します）、$ connectionOptions配列の &quot;ConnectionPooling&quot;オプションを0（または&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;）に設定します。詳細については、&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc644930.aspx&quot;&gt;&amp;raquo;SQLSRV接続プーリングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cf19e72c8805a6435532cd6c5a1e0f4b3b57861e" translate="yes" xml:space="preserve">
          <source>By default, the &lt;strong&gt;sqlsrv_connect()&lt;/strong&gt; uses connection pooling to improve connection performance. To turn off connection pooling (i.e. force a new connection on each call), set the &quot;ConnectionPooling&quot; option in the $connectionOptions array to 0 (or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;). For more information, see &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc644930.aspx&quot;&gt;&amp;raquo; SQLSRV Connection Pooling&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、&lt;strong&gt;sqlsrv_connect（）&lt;/strong&gt;は接続プールを使用して接続パフォーマンスを向上させます。接続プールをオフにするには（つまり、呼び出しごとに新しい接続を強制する）、$ connectionOptions配列の「ConnectionPooling」オプションを0（または&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; &lt;/strong&gt;）に設定します。詳細については、&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc644930.aspx&quot;&gt;&amp;raquo;SQLSRV接続プールを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a2bc8dcb50483cc519aa7c644f72ab40d9514b77" translate="yes" xml:space="preserve">
          <source>By default, the extension is &lt;code&gt;.phar.gz&lt;/code&gt; or &lt;code&gt;.phar.bz2&lt;/code&gt; for compressing phar archives, and &lt;code&gt;.phar.tar.gz&lt;/code&gt; or &lt;code&gt;.phar.tar.bz2&lt;/code&gt; for compressing tar archives. For decompressing, the default file extensions are &lt;code&gt;.phar&lt;/code&gt; and &lt;code&gt;.phar.tar&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、拡張子がある &lt;code&gt;.phar.gz&lt;/code&gt; または &lt;code&gt;.phar.bz2&lt;/code&gt; Pharアーカイブを圧縮するための、および &lt;code&gt;.phar.tar.gz&lt;/code&gt; または &lt;code&gt;.phar.tar.bz2&lt;/code&gt; tarアーカイブを圧縮します。解凍の場合、デフォルトのファイル拡張子は &lt;code&gt;.phar&lt;/code&gt; と &lt;code&gt;.phar.tar&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3120c937d15492d5b638f1e9c37b0ca284c92060" translate="yes" xml:space="preserve">
          <source>By default, the extension is &lt;code&gt;.tar.gz&lt;/code&gt; or &lt;code&gt;.tar.bz2&lt;/code&gt; for compressing a tar, and &lt;code&gt;.tar&lt;/code&gt; for decompressing.</source>
          <target state="translated">デフォルトでは、拡張子はtarを圧縮する場合は &lt;code&gt;.tar.gz&lt;/code&gt; または &lt;code&gt;.tar.bz2&lt;/code&gt; で、解凍する場合は &lt;code&gt;.tar&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8c436d820c4d07e4e4452f070f12bfae1a0cf0c8" translate="yes" xml:space="preserve">
          <source>By default, the extension is &lt;em&gt;.phar.gz&lt;/em&gt; or &lt;em&gt;.phar.bz2&lt;/em&gt; for compressing phar archives, and &lt;em&gt;.phar.tar.gz&lt;/em&gt; or &lt;em&gt;.phar.tar.bz2&lt;/em&gt; for compressing tar archives. For decompressing, the default file extensions are &lt;em&gt;.phar&lt;/em&gt; and &lt;em&gt;.phar.tar&lt;/em&gt;.</source>
          <target state="translated">デフォルトでは、拡張子がある&lt;em&gt;.phar.gz&lt;/em&gt;または&lt;em&gt;.phar.bz2&lt;/em&gt; Pharアーカイブを圧縮するための、および&lt;em&gt;.phar.tar.gz&lt;/em&gt;または&lt;em&gt;.phar.tar.bz2&lt;/em&gt; tarアーカイブを圧縮します。解凍の場合、デフォルトのファイル拡張子は&lt;em&gt;.phar&lt;/em&gt;および&lt;em&gt;.phar.tar&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="881e27504748548a3b143275ba26c9d9daa94112" translate="yes" xml:space="preserve">
          <source>By default, the extension is &lt;em&gt;.tar.gz&lt;/em&gt; or &lt;em&gt;.tar.bz2&lt;/em&gt; for compressing a tar, and &lt;em&gt;.tar&lt;/em&gt; for decompressing.</source>
          <target state="translated">デフォルトでは、拡張子はtarを圧縮する場合は&lt;em&gt;.tar.gz&lt;/em&gt;または&lt;em&gt;.tar.bz2&lt;/em&gt;、解凍する場合は&lt;em&gt;.tar&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="6b71aefaed5480e51b7dfdceea36664939e9a0f7" translate="yes" xml:space="preserve">
          <source>By default, the information in your system &lt;code&gt;openssl.conf&lt;/code&gt; is used to initialize the request; you can specify a configuration file section by setting the &lt;code&gt;config_section_section&lt;/code&gt; key of &lt;code&gt;configargs&lt;/code&gt;. You can also specify an alternative openssl configuration file by setting the value of the &lt;code&gt;config&lt;/code&gt; key to the path of the file you want to use. The following keys, if present in &lt;code&gt;configargs&lt;/code&gt; behave as their equivalents in the &lt;code&gt;openssl.conf&lt;/code&gt;, as listed in the table below.</source>
          <target state="translated">デフォルトでは、システム &lt;code&gt;openssl.conf&lt;/code&gt; の情報がリクエストの初期化に使用されます。あなたは、設定することで、設定ファイルのセクションを指定することができ &lt;code&gt;config_section_section&lt;/code&gt; ののキー &lt;code&gt;configargs&lt;/code&gt; を。 &lt;code&gt;config&lt;/code&gt; キーの値を使用するファイルのパスに設定することにより、代替のopenssl構成ファイルを指定することもできます。次のキーは、 &lt;code&gt;configargs&lt;/code&gt; に存在する場合、以下の表にリストされているように、 &lt;code&gt;openssl.conf&lt;/code&gt; で同等のものとして動作します。</target>
        </trans-unit>
        <trans-unit id="354acb239ec7de9885c76eadccf52a476dd4c0a7" translate="yes" xml:space="preserve">
          <source>By default, the information in your system &lt;em&gt;openssl.conf&lt;/em&gt; is used to initialize the request; you can specify a configuration file section by setting the &lt;em&gt;config_section_section&lt;/em&gt; key of &lt;code&gt;configargs&lt;/code&gt;. You can also specify an alternative openssl configuration file by setting the value of the &lt;em&gt;config&lt;/em&gt; key to the path of the file you want to use. The following keys, if present in &lt;code&gt;configargs&lt;/code&gt; behave as their equivalents in the &lt;em&gt;openssl.conf&lt;/em&gt;, as listed in the table below.</source>
          <target state="translated">デフォルトでは、システムの&lt;em&gt;openssl.conf&lt;/em&gt;内の情報が要求の初期化に使用されます。あなたは、設定することで、設定ファイルのセクションを指定することができ&lt;em&gt;config_section_sectionの&lt;/em&gt;のキー &lt;code&gt;configargs&lt;/code&gt; を。&lt;em&gt;config&lt;/em&gt;キーの値を使用するファイルのパスに設定することで、代替のopenssl構成ファイルを指定することもできます。中に存在する場合、次のキー、 &lt;code&gt;configargs&lt;/code&gt; がでそれらの等価物として挙動&lt;em&gt;openssl.conf&lt;/em&gt;次の表に示すように、。</target>
        </trans-unit>
        <trans-unit id="817b2e65046e6bc7f1333c35a5ff28549b7dfde7" translate="yes" xml:space="preserve">
          <source>By default, the quantifiers are &quot;greedy&quot;, that is, they match as much as possible (up to the maximum number of permitted times), without causing the rest of the pattern to fail. The classic example of where this gives problems is in trying to match comments in C programs. These appear between the sequences /* and */ and within the sequence, individual * and / characters may appear. An attempt to match C comments by applying the pattern &lt;code&gt;/\*.*\*/&lt;/code&gt; to the string &lt;code&gt;/* first comment */  not comment  /* second comment */&lt;/code&gt; fails, because it matches the entire string due to the greediness of the .* item.</source>
          <target state="translated">デフォルトでは、数量詞は「貪欲」です。つまり、パターンの残りの部分が失敗することなく、可能な限り（許可された最大回数まで）一致します。これが問題を引き起こす典型的な例は、Cプログラムのコメントを一致させようとすることです。これらはシーケンス/ *と* /の間に表示され、シーケンス内では個々の*文字と/文字が表示される場合があります。パターン &lt;code&gt;/\*.*\*/&lt;/code&gt; を文字列に適用してCコメントを照合しようとすると、 &lt;code&gt;/* first comment */ not comment /* second comment */&lt;/code&gt; が失敗します。これは、の貪欲さのために文字列全体と一致するためです。 *アイテム。</target>
        </trans-unit>
        <trans-unit id="3fed13d9e89961b09ef3a861c5c5a9dd4ef9847f" translate="yes" xml:space="preserve">
          <source>By default, the quantifiers are &quot;greedy&quot;, that is, they match as much as possible (up to the maximum number of permitted times), without causing the rest of the pattern to fail. The classic example of where this gives problems is in trying to match comments in C programs. These appear between the sequences /* and */ and within the sequence, individual * and / characters may appear. An attempt to match C comments by applying the pattern &lt;em&gt;/\*.*\*/&lt;/em&gt; to the string &lt;em&gt;/* first comment */ not comment /* second comment */&lt;/em&gt; fails, because it matches the entire string due to the greediness of the .* item.</source>
          <target state="translated">デフォルトでは、量指定子は「貪欲」です。つまり、量の一致は（許可される最大回数まで）可能であり、残りのパターンは失敗しません。これが問題となる典型的な例は、Cプログラムのコメントを一致させることです。これらはシーケンス/ *と* /の間に表示され、シーケンス内には個々の*および/文字が表示される場合があります。パターン&lt;em&gt;/\*.*\*/&lt;/em&gt;を文字列&lt;em&gt;/ *最初のコメント* /コメントなし/ * 2番目のコメント* /に&lt;/em&gt;適用してCコメントを一致させる試みは、。の貪欲さが原因で文字列全体と一致するため失敗します。 *アイテム。</target>
        </trans-unit>
        <trans-unit id="7c1c89eb87f69044ed0749a01a118ed08d6e2ec8" translate="yes" xml:space="preserve">
          <source>By default, the serialization method used is internal to PHP, and is not the same as &lt;a href=&quot;function.serialize&quot;&gt;serialize()&lt;/a&gt;. The serialization method can be set using &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、使用されるシリアル化メソッドはPHPの内部で使用され、&lt;a href=&quot;function.serialize&quot;&gt;serialize（）&lt;/a&gt;とは異なります。シリアル化メソッドは、&lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="6de6de86d566147825dcbfdbcdd7e0a39b9ad1d9" translate="yes" xml:space="preserve">
          <source>By default, the serialization method used is internal to PHP, and is not the same as &lt;a href=&quot;function.serialize&quot;&gt;serialize()&lt;/a&gt;. The serialization method can be set using &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、使用されるシリアル化メソッドはPHPの内部であり、&lt;a href=&quot;function.serialize&quot;&gt;serialize（）&lt;/a&gt;と同じではありません。シリアル化方法は、&lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="7dfd35a1f6edd6c08fafb99b66a7d899094c50fd" translate="yes" xml:space="preserve">
          <source>By default, the sorted order is alphabetical in ascending order. If the optional &lt;code&gt;sorting_order&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;SCANDIR_SORT_DESCENDING&lt;/code&gt;&lt;/strong&gt;, then the sort order is alphabetical in descending order. If it is set to &lt;strong&gt;&lt;code&gt;SCANDIR_SORT_NONE&lt;/code&gt;&lt;/strong&gt; then the result is unsorted.</source>
          <target state="translated">デフォルトでは、ソート順は昇順のアルファベット順です。オプションの場合 &lt;code&gt;sorting_order&lt;/code&gt; に設定されている&lt;strong&gt; &lt;code&gt;SCANDIR_SORT_DESCENDING&lt;/code&gt; &lt;/strong&gt;、その後、ソート順が降順でアルファベット順です。&lt;strong&gt; &lt;code&gt;SCANDIR_SORT_NONE&lt;/code&gt; に&lt;/strong&gt;設定されて&lt;strong&gt;いる&lt;/strong&gt;場合、結果はソートされ&lt;strong&gt;ません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="123d816dfad7d78e08a342e2a0afd439f947f987" translate="yes" xml:space="preserve">
          <source>By default, the unserialization method used is internal to PHP, and is not the same as &lt;a href=&quot;function.unserialize&quot;&gt;unserialize()&lt;/a&gt;. The serialization method can be set using &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、使用される非シリアル化メソッドはPHPの内部にあり、&lt;a href=&quot;function.unserialize&quot;&gt;unserialize（）&lt;/a&gt;と同じではありません。シリアル化メソッドは、&lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="2fbc4f5b331621b98bc07776a1ef7c5b36927edb" translate="yes" xml:space="preserve">
          <source>By default, the unserialization method used is internal to PHP, and is not the same as &lt;a href=&quot;function.unserialize&quot;&gt;unserialize()&lt;/a&gt;. The serialization method can be set using &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、使用されるunserializationメソッドはPHPの内部であり、&lt;a href=&quot;function.unserialize&quot;&gt;unserialize（）&lt;/a&gt;と同じではありません。シリアル化方法は、&lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="fbeb0b0e5ff899dd882bb10c5dbd61f5cf78d14c" translate="yes" xml:space="preserve">
          <source>By default, this value is &lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt; . &quot;/library&quot;, you can change this either in the application.ini(application.library) or call to &lt;a href=&quot;yaf-loader.setlibrarypath&quot;&gt;Yaf_Loader::setLibraryPath()&lt;/a&gt;</source>
          <target state="translated">デフォルトでは、この値は&lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directoryです&lt;/a&gt;。&quot;/ library&quot;、これはapplication.ini（application.library）で変更するか、&lt;a href=&quot;yaf-loader.setlibrarypath&quot;&gt;Yaf_Loader :: setLibraryPath（）を&lt;/a&gt;呼び出すことができます</target>
        </trans-unit>
        <trans-unit id="d75f1f84cdc335d588f0e286c90391dc991e8af4" translate="yes" xml:space="preserve">
          <source>By default, this value is &lt;a href=&quot;https://www.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt; . &quot;/library&quot;, you can change this either in the application.ini(application.library) or call to &lt;a href=&quot;yaf-loader.setlibrarypath&quot;&gt;Yaf_Loader::setLibraryPath()&lt;/a&gt;</source>
          <target state="translated">デフォルトでは、この値は&lt;a href=&quot;https://www.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directoryです&lt;/a&gt;。「/ library」、これはapplication.ini（application.library）で変更するか、&lt;a href=&quot;yaf-loader.setlibrarypath&quot;&gt;Yaf_Loader :: setLibraryPath（）を&lt;/a&gt;呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="3e9d09812a7b4d1a752b6afb6cd5db416898af22" translate="yes" xml:space="preserve">
          <source>By default, variables are always assigned by value. That is to say, when you assign an expression to a variable, the entire value of the original expression is copied into the destination variable. This means, for instance, that after assigning one variable's value to another, changing one of those variables will have no effect on the other. For more information on this kind of assignment, see the chapter on &lt;a href=&quot;language.expressions&quot;&gt;Expressions&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、変数は常に値によって割り当てられます。つまり、式を変数に割り当てると、元の式の値全体が宛先変数にコピーされます。これは、たとえば、ある変数の値を別の変数に割り当てた後、それらの変数の1つを変更しても、他の変数には影響がないことを意味します。この種の割り当ての詳細については、「&lt;a href=&quot;language.expressions&quot;&gt;式&lt;/a&gt;」の章を参照してください。</target>
        </trans-unit>
        <trans-unit id="97159a7367ef9a7bbe42f04079cc94f3f0b86322" translate="yes" xml:space="preserve">
          <source>By default, warnings generated on a call to any SQLSRV function are treated as errors. This means that if a warning occurs on a call to a SQLSRV function, the function returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. However, warnings that correspond to SQLSTATE values 01000, 01001, 01003, and 01S02 are never treated as errors. For information about changing this behavior, see &lt;a href=&quot;function.sqlsrv-configure&quot;&gt;sqlsrv_configure()&lt;/a&gt; and the WarningsReturnAsErrors setting.</source>
          <target state="translated">デフォルトでは、SQLSRV関数の呼び出しで生成された警告はエラーとして扱われます。つまり、SQLSRV関数の呼び出しで警告が発生した&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;、関数は&lt;strong&gt;FALSEを&lt;/strong&gt;返し&lt;strong&gt;ます&lt;/strong&gt;。ただし、SQLSTATE値01000、01001、01003、01S02に対応する警告がエラーとして処理されることはありません。この動作の変更については、&lt;a href=&quot;function.sqlsrv-configure&quot;&gt;sqlsrv_configure（）&lt;/a&gt;およびWarningsReturnAsErrors設定を参照してください。</target>
        </trans-unit>
        <trans-unit id="676d6276bc3cebea151341688575c29def8fcc0c" translate="yes" xml:space="preserve">
          <source>By default, warnings generated on a call to any SQLSRV function are treated as errors. This means that if a warning occurs on a call to a SQLSRV function, the function returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;. However, warnings that correspond to SQLSTATE values 01000, 01001, 01003, and 01S02 are never treated as errors. For information about changing this behavior, see &lt;a href=&quot;function.sqlsrv-configure&quot;&gt;sqlsrv_configure()&lt;/a&gt; and the WarningsReturnAsErrors setting.</source>
          <target state="translated">デフォルトでは、SQLSRV関数の呼び出しで生成された警告はエラーとして扱われます。これは、SQLSRV関数の呼び出しで警告が発生した場合、関数が&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; を&lt;/strong&gt;返すことを意味し&lt;strong&gt;ます&lt;/strong&gt;。ただし、SQLSTATE値01000、01001、01003、および01S02に対応する警告がエラーとして扱われることはありません。この動作の変更については、&lt;a href=&quot;function.sqlsrv-configure&quot;&gt;sqlsrv_configure（）&lt;/a&gt;およびWarningsReturnAsErrors設定を参照してください。</target>
        </trans-unit>
        <trans-unit id="cca2fe8efb6e186bd40a2b4885864223bcaa295a" translate="yes" xml:space="preserve">
          <source>By default, when the bufferevent is set up to be threadsafe, the buffer event&amp;rsquo;s locks are held whenever the any user-provided callback is invoked. Setting this option makes Libevent release the buffer event&amp;rsquo;s lock when it&amp;rsquo;s invoking the callbacks.</source>
          <target state="translated">デフォルトでは、buffereventがスレッドセーフになるように設定されている場合、ユーザー提供のコールバックが呼び出されるたびにbufferイベントのロックが保持されます。このオプションを設定すると、コールバックが呼び出されたときにLibeventがバッファーイベントのロックを解放します。</target>
        </trans-unit>
        <trans-unit id="f2e0a8f8ce40d8f751ee7d7daa87096df9c88c36" translate="yes" xml:space="preserve">
          <source>By invoking the methods provided by the NumberFormatter class, you can format numbers, currencies, and percentages according to the specified or default locale. NumberFormatter is locale-sensitive so you need to create a new NumberFormatter for each locale. NumberFormatter methods format primitive-type numbers, such as double and output the number as a locale-specific string.</source>
          <target state="translated">NumberFormatter クラスが提供するメソッドを使用すると、指定したロケールやデフォルトのロケールに応じて数値や通貨、パーセントなどの書式設定を行うことができます。NumberFormatter はロケールに依存するので、ロケールごとに新しい NumberFormatter を作成する必要があります。NumberFormatter のメソッドは、double のようなプリミティブ型の数値をフォーマットし、 ロケール固有の文字列として出力します。</target>
        </trans-unit>
        <trans-unit id="cdd0c7a7cfcd59853bd9e5de00c7b05ca28ae352" translate="yes" xml:space="preserve">
          <source>By ksorting patterns and replacements, we should get what we wanted.</source>
          <target state="translated">パターンや入れ替えをkソートすることで、欲しいものを手に入れることができるはずです。</target>
        </trans-unit>
        <trans-unit id="95250d23e3b3aec7999ef0ae89717ec66f784ed1" translate="yes" xml:space="preserve">
          <source>By passing a reference as third argument, &lt;strong&gt;similar_text()&lt;/strong&gt; will calculate the similarity in percent, by dividing the result of &lt;strong&gt;similar_text()&lt;/strong&gt; by the average of the lengths of the given strings times &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">参照を3番目の引数として渡すことにより、&lt;strong&gt;similar_text（）&lt;/strong&gt;は、&lt;strong&gt;similar_text（）&lt;/strong&gt;の結果を、指定された文字列の長さの平均に &lt;code&gt;100&lt;/code&gt; を&lt;strong&gt;掛けた&lt;/strong&gt;もので割ることにより、類似性をパーセントで計算します。</target>
        </trans-unit>
        <trans-unit id="d3b1c2413fa3e0180121d5801a0397dc4f8b86c4" translate="yes" xml:space="preserve">
          <source>By passing a reference as third argument, &lt;strong&gt;similar_text()&lt;/strong&gt; will calculate the similarity in percent, by dividing the result of &lt;strong&gt;similar_text()&lt;/strong&gt; by the average of the lengths of the given strings times &lt;em&gt;100&lt;/em&gt;.</source>
          <target state="translated">参照を3番目の引数として渡すことにより、&lt;strong&gt;similar_text（）&lt;/strong&gt;は、&lt;strong&gt;similar_text（）&lt;/strong&gt;の結果を、指定された文字列の長さの平均に&lt;em&gt;100&lt;/em&gt;を&lt;strong&gt;掛けた&lt;/strong&gt;もので割ることにより、パーセントで類似度を計算します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f4c5bd9ef8fb63dc461a8baa1333de65e2c5d6a3" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;process_sections&lt;/code&gt; parameter to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, you get a multidimensional array, with the section names and settings included. The default for &lt;code&gt;process_sections&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;process_sections&lt;/code&gt; パラメータを&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; に&lt;/strong&gt;設定すると、セクション名と設定が含まれた多次元配列が得られます。 &lt;code&gt;process_sections&lt;/code&gt; のデフォルトは&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; です&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0f5f846857ad9a10670c98b17f377993a1c2d1a" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;process_sections&lt;/code&gt; parameter to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, you get a multidimensional array, with the section names and settings included. The default for &lt;code&gt;process_sections&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;process_sections&lt;/code&gt; パラメーターを&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; に&lt;/strong&gt;設定すると、セクション名と設定が含まれた多次元配列が得られます。 &lt;code&gt;process_sections&lt;/code&gt; のデフォルトは&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; です&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4588ef4c228d3c47deef3a8abad7c36006ed05e" translate="yes" xml:space="preserve">
          <source>By the way, if a stream is redirected, the VT100 feature will not be enabled:</source>
          <target state="translated">ちなみに、ストリームがリダイレクトされるとVT100の機能は有効になりません。</target>
        </trans-unit>
        <trans-unit id="c6dffbde0c88d676502311483d714de59be39193" translate="yes" xml:space="preserve">
          <source>By using the &lt;strong&gt;&lt;code&gt;MYSQLI_ASSOC&lt;/code&gt;&lt;/strong&gt; constant this function will behave identically to the &lt;a href=&quot;mysqli-result.fetch-assoc&quot;&gt;mysqli_fetch_assoc()&lt;/a&gt;, while &lt;strong&gt;&lt;code&gt;MYSQLI_NUM&lt;/code&gt;&lt;/strong&gt; will behave identically to the &lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_fetch_row()&lt;/a&gt; function. The final option &lt;strong&gt;&lt;code&gt;MYSQLI_BOTH&lt;/code&gt;&lt;/strong&gt; will create a single array with the attributes of both.</source>
          <target state="translated">使用して&lt;strong&gt; &lt;code&gt;MYSQLI_ASSOC&lt;/code&gt; の&lt;/strong&gt;定数をこの関数は同一に動作します&lt;a href=&quot;mysqli-result.fetch-assoc&quot;&gt;）（mysqli_fetch_assoc&lt;/a&gt;ながら、&lt;strong&gt; &lt;code&gt;MYSQLI_NUM&lt;/code&gt; は&lt;/strong&gt;同一に動作します&lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_fetch_row（）&lt;/a&gt;関数。最後のオプション&lt;strong&gt; &lt;code&gt;MYSQLI_BOTH&lt;/code&gt; &lt;/strong&gt;は、両方の属性を持つ単一の配列を作成します。</target>
        </trans-unit>
        <trans-unit id="7a55430aa0b32e8cc27151634b18595c30329ca1" translate="yes" xml:space="preserve">
          <source>Bypass routing, use direct interface.</source>
          <target state="translated">ルーティングをバイパスして、ダイレクトインターフェースを使用します。</target>
        </trans-unit>
        <trans-unit id="bd54fbc5c8f77eb130d2eae8194a1dc534e440db" translate="yes" xml:space="preserve">
          <source>Byte 0 of $str has value 240</source>
          <target state="translated">str のバイト 0 の値は 240 です。</target>
        </trans-unit>
        <trans-unit id="da11d3d90bf91771d1b63049b2c58c7ca00b1733" translate="yes" xml:space="preserve">
          <source>Byte 1 of $str has value 159</source>
          <target state="translated">str のバイト 1 の値は 159 です。</target>
        </trans-unit>
        <trans-unit id="bda09c9d53f983fb7cd80a5a69a71b7aec623e22" translate="yes" xml:space="preserve">
          <source>Byte 2 of $str has value 144</source>
          <target state="translated">str のバイト 2 の値は 144 です。</target>
        </trans-unit>
        <trans-unit id="a3214bca431fab1d4994adf74b8714baf1b73957" translate="yes" xml:space="preserve">
          <source>Byte 3 of $str has value 152</source>
          <target state="translated">str のバイト 3 の値は 152 です。</target>
        </trans-unit>
        <trans-unit id="f7b73a0fcfac4f07b981313e9814cffe00d453af" translate="yes" xml:space="preserve">
          <source>Byte position of the data start can be determined by the &lt;strong&gt;&lt;code&gt;__COMPILER_HALT_OFFSET__&lt;/code&gt;&lt;/strong&gt; constant which is defined only if there is a &lt;strong&gt;__halt_compiler()&lt;/strong&gt; presented in the file.</source>
          <target state="translated">データ開始のバイト位置は、ファイルに&lt;strong&gt;__halt_compiler（）&lt;/strong&gt;が存在する場合にのみ定義される&lt;strong&gt; &lt;code&gt;__COMPILER_HALT_OFFSET__&lt;/code&gt; &lt;/strong&gt;定数によって決定できます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="e26bbff46c39164d1523db69d78abdd87d6a20d8" translate="yes" xml:space="preserve">
          <source>C data type</source>
          <target state="translated">Cデータ型</target>
        </trans-unit>
        <trans-unit id="15ae5b0651101bb95bb711349c1d9aa89053ef3d" translate="yes" xml:space="preserve">
          <source>C=U &quot;China&quot; &amp;lt; &quot;china&quot; &amp;lt; &quot;Denmark&quot; &amp;lt; &quot;denmark&quot;</source>
          <target state="translated">C = U &quot;中国&quot; &amp;lt;&quot;中国&quot; &amp;lt;&quot;デンマーク&quot; &amp;lt;&quot;デンマーク&quot;</target>
        </trans-unit>
        <trans-unit id="5ec0b0fa6c797bae61453a7c41a6ceea1ef8d192" translate="yes" xml:space="preserve">
          <source>C=X or C=L &quot;china&quot; &amp;lt; &quot;China&quot; &amp;lt; &quot;denmark&quot; &amp;lt; &quot;Denmark&quot;</source>
          <target state="translated">C = XまたはC = L &quot;中国&quot; &amp;lt;&quot;中国&quot; &amp;lt;&quot;デンマーク&quot; &amp;lt;&quot;デンマーク&quot;</target>
        </trans-unit>
        <trans-unit id="09acbb7d1da8aa3daff4c1ec8076713606974c64" translate="yes" xml:space="preserve">
          <source>CA</source>
          <target state="translated">CA</target>
        </trans-unit>
        <trans-unit id="3deed788c8f1989da9a741179035e844c08a5380" translate="yes" xml:space="preserve">
          <source>CARDINALITY</source>
          <target state="translated">CARDINALITY</target>
        </trans-unit>
        <trans-unit id="4f018a87205caa741d195a0b69d3d55cd5c878a3" translate="yes" xml:space="preserve">
          <source>CASE_SENSITIVE</source>
          <target state="translated">CASE_SENSITIVE</target>
        </trans-unit>
        <trans-unit id="6f241490635bc4573269cad619298161d0dc3417" translate="yes" xml:space="preserve">
          <source>CC &quot;string&quot; - match messages with &quot;string&quot; in the Cc: field</source>
          <target state="translated">CC &quot;string&quot;-メッセージを Cc:フィールドの &quot;string&quot; にマッチさせます。</target>
        </trans-unit>
        <trans-unit id="473de9c20200b441d8e9ff3291cbe3ac40cf848d" translate="yes" xml:space="preserve">
          <source>CDATA node</source>
          <target state="translated">CDATAノード</target>
        </trans-unit>
        <trans-unit id="ef51a56a228c22c4d9eedb0635e47a3b4105a503" translate="yes" xml:space="preserve">
          <source>CDF</source>
          <target state="translated">CDF</target>
        </trans-unit>
        <trans-unit id="422f720e7d72716b7017e69268406be073cfc7c1" translate="yes" xml:space="preserve">
          <source>CGI</source>
          <target state="translated">CGI</target>
        </trans-unit>
        <trans-unit id="ae864c87730cd7628c03fc5248bfe290589af6c7" translate="yes" xml:space="preserve">
          <source>COLLATION</source>
          <target state="translated">COLLATION</target>
        </trans-unit>
        <trans-unit id="62f94c337a62422091eec8af220557bc9d2a0f7d" translate="yes" xml:space="preserve">
          <source>COLUMN_NAME</source>
          <target state="translated">COLUMN_NAME</target>
        </trans-unit>
        <trans-unit id="85bf293fa7977bf9a2fceb81d5ff23d16a3d8535" translate="yes" xml:space="preserve">
          <source>COLUMN_TYPE</source>
          <target state="translated">COLUMN_TYPE</target>
        </trans-unit>
        <trans-unit id="b1a13fadf51ef7eece7dea40c4b6e6e8042822d2" translate="yes" xml:space="preserve">
          <source>COMMENT</source>
          <target state="translated">COMMENT</target>
        </trans-unit>
        <trans-unit id="c52b56dab38211c04eda3b5b35db68636802626a" translate="yes" xml:space="preserve">
          <source>COMPUTED</source>
          <target state="translated">COMPUTED</target>
        </trans-unit>
        <trans-unit id="e2a19a8833b7f0a8aff34f17de8769715bcd1497" translate="yes" xml:space="preserve">
          <source>CONNECT method(command)</source>
          <target state="translated">コネクトメソッド(コマンド)</target>
        </trans-unit>
        <trans-unit id="59809cd2f8cfc6eb5b75df42ac5f352194035f76" translate="yes" xml:space="preserve">
          <source>CREATE_PARAMS</source>
          <target state="translated">CREATE_PARAMS</target>
        </trans-unit>
        <trans-unit id="e9930779c5261c7ed2145635a1a6903e209530cc" translate="yes" xml:space="preserve">
          <source>CREDITS_ALL</source>
          <target state="translated">CREDITS_ALL</target>
        </trans-unit>
        <trans-unit id="3a4e2a592e757a94e0cd16ee926be58e79597d40" translate="yes" xml:space="preserve">
          <source>CREDITS_DOCS</source>
          <target state="translated">CREDITS_DOCS</target>
        </trans-unit>
        <trans-unit id="1386334ecc1c3a3bc278c4f28789336cc6b5c918" translate="yes" xml:space="preserve">
          <source>CREDITS_FULLPAGE</source>
          <target state="translated">CREDITS_FULLPAGE</target>
        </trans-unit>
        <trans-unit id="81f4c06c5c7a9bd5e1c29570c4f90a58b2ecf8bb" translate="yes" xml:space="preserve">
          <source>CREDITS_GENERAL</source>
          <target state="translated">CREDITS_GENERAL</target>
        </trans-unit>
        <trans-unit id="621324d2a5d85f404e4783a442a8dcb5a84935cc" translate="yes" xml:space="preserve">
          <source>CREDITS_GROUP</source>
          <target state="translated">CREDITS_GROUP</target>
        </trans-unit>
        <trans-unit id="d9dccca18efe5e92dbe43a6adb9cfb9bac53ab0a" translate="yes" xml:space="preserve">
          <source>CREDITS_MODULES</source>
          <target state="translated">CREDITS_MODULES</target>
        </trans-unit>
        <trans-unit id="74fc6685733696fb8d40efa2246d72f22d6c23b5" translate="yes" xml:space="preserve">
          <source>CREDITS_SAPI</source>
          <target state="translated">CREDITS_SAPI</target>
        </trans-unit>
        <trans-unit id="735ffe35e5c4accf5861ee1426147bc32137a32a" translate="yes" xml:space="preserve">
          <source>CSPRNG</source>
          <target state="translated">CSPRNG</target>
        </trans-unit>
        <trans-unit id="3281188351b89c8e2db28d6da7af4992d415de90" translate="yes" xml:space="preserve">
          <source>CSV</source>
          <target state="translated">CSV</target>
        </trans-unit>
        <trans-unit id="f059787bf5f61c5d938038dd4915a554f79a962e" translate="yes" xml:space="preserve">
          <source>CURLFile &amp;rarr;</source>
          <target state="translated">CURLFile&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ba333b17e24817f8dc282c25fd53e4c848498108" translate="yes" xml:space="preserve">
          <source>CURLFile (class)</source>
          <target state="translated">CURLFile</target>
        </trans-unit>
        <trans-unit id="98a27a13bcde4e03d98cc9c221637f3b27c2ead1" translate="yes" xml:space="preserve">
          <source>CURLFile is not serializable.</source>
          <target state="translated">CURLFileはシリアライズできません。</target>
        </trans-unit>
        <trans-unit id="45f8b70b47294599f142975f164f5d77fee0e235" translate="yes" xml:space="preserve">
          <source>CURLFile::__construct</source>
          <target state="translated">CURLFile::__construct</target>
        </trans-unit>
        <trans-unit id="7648519a3583c3aaeb8d53e8c4600831cad30760" translate="yes" xml:space="preserve">
          <source>CURLFile::__construct &amp;rarr;</source>
          <target state="translated">CURLFile :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a2dfa7ccfde471c4b670e833f4ef676008cf24e1" translate="yes" xml:space="preserve">
          <source>CURLFile::__construct -- curl_file_create &amp;mdash; Create a CURLFile object</source>
          <target state="translated">CURLFile :: __ construct-curl_file_create &amp;mdash; CURLFileオブジェクトを作成する</target>
        </trans-unit>
        <trans-unit id="bc673b31f02d1c11e6ba8e60b0c24ff90f743084" translate="yes" xml:space="preserve">
          <source>CURLFile::__wakeup</source>
          <target state="translated">CURLFile::__wakeup</target>
        </trans-unit>
        <trans-unit id="24f5902f9be51285ca851d02216786d6af7e9c66" translate="yes" xml:space="preserve">
          <source>CURLFile::__wakeup &amp;mdash; Unserialization handler</source>
          <target state="translated">CURLFile :: __ wakeup &amp;mdash;シリアル化解除ハンドラ</target>
        </trans-unit>
        <trans-unit id="ca6363cbeb575d1b5d1a9601e5a4ab67de496ca2" translate="yes" xml:space="preserve">
          <source>CURLFile::__wakeup &amp;rarr;</source>
          <target state="translated">CURLFile :: __ wakeup&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5834c4975c8b77a6734fba0d91363173b616deeb" translate="yes" xml:space="preserve">
          <source>CURLFile::getFilename</source>
          <target state="translated">CURLFile::getFilename</target>
        </trans-unit>
        <trans-unit id="1c012bec63cb31257fe51fb1341c6be1ac888e5a" translate="yes" xml:space="preserve">
          <source>CURLFile::getFilename &amp;mdash; Get file name</source>
          <target state="translated">CURLFile :: getFilename &amp;mdash;ファイル名を取得する</target>
        </trans-unit>
        <trans-unit id="1c4e385a2a0f9531c81c192c522aa8bf83d98e6e" translate="yes" xml:space="preserve">
          <source>CURLFile::getFilename &amp;rarr;</source>
          <target state="translated">CURLFile :: getFilename&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2919558990f9c00c38c7f47a298ea632e3a649ff" translate="yes" xml:space="preserve">
          <source>CURLFile::getMimeType</source>
          <target state="translated">CURLFile::getMimeType</target>
        </trans-unit>
        <trans-unit id="28b88c2147a1e6369077102aac847d8753bc51b4" translate="yes" xml:space="preserve">
          <source>CURLFile::getMimeType &amp;mdash; Get MIME type</source>
          <target state="translated">CURLFile :: getMimeType &amp;mdash; MIMEタイプを取得する</target>
        </trans-unit>
        <trans-unit id="d0dbaf5ceda39320684079b630dcbde4f9bf2ec9" translate="yes" xml:space="preserve">
          <source>CURLFile::getMimeType &amp;rarr;</source>
          <target state="translated">CURLFile :: getMimeType&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="350a81f16168aa37a7d855462e10b9995b5ec9bf" translate="yes" xml:space="preserve">
          <source>CURLFile::getPostFilename</source>
          <target state="translated">CURLFile::getPostFilename</target>
        </trans-unit>
        <trans-unit id="ba14cf21da1e09d01461decd08fb10a1ac885f33" translate="yes" xml:space="preserve">
          <source>CURLFile::getPostFilename &amp;mdash; Get file name for POST</source>
          <target state="translated">CURLFile :: getPostFilename &amp;mdash; POSTのファイル名を取得する</target>
        </trans-unit>
        <trans-unit id="2d7570efb5ad07af510e08082adfd00cbe5d3d36" translate="yes" xml:space="preserve">
          <source>CURLFile::getPostFilename &amp;rarr;</source>
          <target state="translated">CURLFile :: getPostFilename&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5518317e24c89dca581026ede6d146c2acc26e0a" translate="yes" xml:space="preserve">
          <source>CURLFile::setMimeType</source>
          <target state="translated">CURLFile::setMimeType</target>
        </trans-unit>
        <trans-unit id="fdccd06d60447c7cad016475ed639f9984f667ff" translate="yes" xml:space="preserve">
          <source>CURLFile::setMimeType &amp;mdash; Set MIME type</source>
          <target state="translated">CURLFile :: setMimeType &amp;mdash; MIMEタイプを設定する</target>
        </trans-unit>
        <trans-unit id="a1db1938986d6d7d26bda0e618de75eee4787de4" translate="yes" xml:space="preserve">
          <source>CURLFile::setMimeType &amp;rarr;</source>
          <target state="translated">CURLFile :: setMimeType&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="be27b5ccf337148d32ff14ae81560e54868a7bc5" translate="yes" xml:space="preserve">
          <source>CURLFile::setPostFilename</source>
          <target state="translated">CURLFile::setPostFilename</target>
        </trans-unit>
        <trans-unit id="1ef9fa380ccb2db402986abba5705ea8dc78d460" translate="yes" xml:space="preserve">
          <source>CURLFile::setPostFilename &amp;mdash; Set file name for POST</source>
          <target state="translated">CURLFile :: setPostFilename &amp;mdash; POSTのファイル名を設定する</target>
        </trans-unit>
        <trans-unit id="c9eb35b9da1fdde489c80e719d095dd753024487" translate="yes" xml:space="preserve">
          <source>CURLFile::setPostFilename &amp;rarr;</source>
          <target state="translated">CURLFile :: setPostFilename&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="024c3a9dd02f230fb337ab36b557c3ab0df9b816" translate="yes" xml:space="preserve">
          <source>Cable/DSL</source>
          <target state="translated">Cable/DSL</target>
        </trans-unit>
        <trans-unit id="094fade00937a6db88ef6a3d1262541c78a4a7a7" translate="yes" xml:space="preserve">
          <source>Cache a variable in the data store.</source>
          <target state="translated">データストア内の変数をキャッシュします。</target>
        </trans-unit>
        <trans-unit id="6e81ac9735274dc624a6be14ccdb734d19d5896f" translate="yes" xml:space="preserve">
          <source>Cache all read data.</source>
          <target state="translated">すべての読み取りデータをキャッシュします。</target>
        </trans-unit>
        <trans-unit id="756a4331e0795831ea8db0b1acbb3501fed8f24b" translate="yes" xml:space="preserve">
          <source>Caches a variable in the data store, only if it's not already stored.</source>
          <target state="translated">データストア内の変数を、まだ格納されていない場合にのみキャッシュします。</target>
        </trans-unit>
        <trans-unit id="ade4cff91053886046f1e38f076854af746d6d12" translate="yes" xml:space="preserve">
          <source>CachingIterator &amp;rarr;</source>
          <target state="translated">CachingIterator&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="0c450dcc84dc1899daebe92289b4b8ecea25e863" translate="yes" xml:space="preserve">
          <source>CachingIterator (class)</source>
          <target state="translated">CachingIterator (クラス)</target>
        </trans-unit>
        <trans-unit id="4c03a28afa389d23f894a55c96c1eac67951fda4" translate="yes" xml:space="preserve">
          <source>CachingIterator::__construct</source>
          <target state="translated">CachingIterator::__construct</target>
        </trans-unit>
        <trans-unit id="54b895c6da33cbd0eab4e6e581949877ae5ecfe5" translate="yes" xml:space="preserve">
          <source>CachingIterator::__construct &amp;mdash; Construct a new CachingIterator object for the iterator</source>
          <target state="translated">CachingIterator :: __ construct &amp;mdash;イテレータの新しいCachingIteratorオブジェクトを構築する</target>
        </trans-unit>
        <trans-unit id="46606028e14313549f1919dfa48806232a1e56a4" translate="yes" xml:space="preserve">
          <source>CachingIterator::__construct &amp;rarr;</source>
          <target state="translated">CachingIterator :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7482c273358c3f0b74a24ed11af28fe264b8cbd2" translate="yes" xml:space="preserve">
          <source>CachingIterator::__toString</source>
          <target state="translated">CachingIterator::__toString</target>
        </trans-unit>
        <trans-unit id="0ed25c23c89913b8f228d6c34d2c8a3882dc7aa9" translate="yes" xml:space="preserve">
          <source>CachingIterator::__toString &amp;mdash; Return the string representation of the current element</source>
          <target state="translated">CachingIterator :: __ toString &amp;mdash;現在の要素の文字列表現を返す</target>
        </trans-unit>
        <trans-unit id="83b7c57c14a396f8237dc8f018872026778ef348" translate="yes" xml:space="preserve">
          <source>CachingIterator::__toString &amp;rarr;</source>
          <target state="translated">CachingIterator :: __ toString&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a72bcfa6550e2d5f3e60710c74500b2447f8d734" translate="yes" xml:space="preserve">
          <source>CachingIterator::count</source>
          <target state="translated">CachingIterator::count</target>
        </trans-unit>
        <trans-unit id="a25625120ca421cc5e64fbbb0e422b5298449771" translate="yes" xml:space="preserve">
          <source>CachingIterator::count &amp;mdash; The number of elements in the iterator</source>
          <target state="translated">CachingIterator :: count &amp;mdash;イテレータの要素数</target>
        </trans-unit>
        <trans-unit id="424cca5987f69a31b0753c203cbb35bc47bc6ce3" translate="yes" xml:space="preserve">
          <source>CachingIterator::count &amp;rarr;</source>
          <target state="translated">CachingIterator :: count&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c04f8b8b53de277cee638a8ed4f034c584a124b9" translate="yes" xml:space="preserve">
          <source>CachingIterator::current</source>
          <target state="translated">CachingIterator::current</target>
        </trans-unit>
        <trans-unit id="8593b286f7c43376f34a8869b3febd3beee5ed82" translate="yes" xml:space="preserve">
          <source>CachingIterator::current &amp;mdash; Return the current element</source>
          <target state="translated">CachingIterator :: current &amp;mdash;現在の要素を返す</target>
        </trans-unit>
        <trans-unit id="6d0af1c7e01de2eb9afe887ed3e36f6fb166ee54" translate="yes" xml:space="preserve">
          <source>CachingIterator::current &amp;rarr;</source>
          <target state="translated">CachingIterator :: current&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="9de255da15aa10118599464659996f2304ce899b" translate="yes" xml:space="preserve">
          <source>CachingIterator::getCache</source>
          <target state="translated">CachingIterator::getCache</target>
        </trans-unit>
        <trans-unit id="ca6b3b35a52fa1c88d4942a426a05f1dbf77479b" translate="yes" xml:space="preserve">
          <source>CachingIterator::getCache &amp;mdash; Retrieve the contents of the cache</source>
          <target state="translated">CachingIterator :: getCache &amp;mdash;キャッシュの内容を取得する</target>
        </trans-unit>
        <trans-unit id="a80e5c61897ca7885315591591591b8946cb0eb8" translate="yes" xml:space="preserve">
          <source>CachingIterator::getCache &amp;rarr;</source>
          <target state="translated">CachingIterator :: getCache&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3f099c987a5ae944dc561b873e5afdcfd8da3235" translate="yes" xml:space="preserve">
          <source>CachingIterator::getFlags</source>
          <target state="translated">CachingIterator::getFlags</target>
        </trans-unit>
        <trans-unit id="cdc40414f58ed6cab7c9e24539fccb92f48a0b5c" translate="yes" xml:space="preserve">
          <source>CachingIterator::getFlags &amp;mdash; Get flags used</source>
          <target state="translated">CachingIterator :: getFlags &amp;mdash;使用されているフラグを取得する</target>
        </trans-unit>
        <trans-unit id="bc0fe41f8107a26a6e4713d6e42228bdc7714be0" translate="yes" xml:space="preserve">
          <source>CachingIterator::getFlags &amp;rarr;</source>
          <target state="translated">CachingIterator :: getFlags&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="0ca46144947eb32387d7b8ab9bd6839b5ce1a2ae" translate="yes" xml:space="preserve">
          <source>CachingIterator::getInnerIterator</source>
          <target state="translated">CachingIterator::getInnerIterator</target>
        </trans-unit>
        <trans-unit id="db7ee3f9e8cd244f8e7adbe4b4ae8957a05873ec" translate="yes" xml:space="preserve">
          <source>CachingIterator::getInnerIterator &amp;mdash; Returns the inner iterator</source>
          <target state="translated">CachingIterator :: getInnerIterator &amp;mdash;内部のイテレータを返す</target>
        </trans-unit>
        <trans-unit id="b63a3c716527ad1f625d19921d79d4f981c30931" translate="yes" xml:space="preserve">
          <source>CachingIterator::getInnerIterator &amp;rarr;</source>
          <target state="translated">CachingIterator :: getInnerIterator&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e4b3c0711367162e599449cecc002c653d69d9ee" translate="yes" xml:space="preserve">
          <source>CachingIterator::hasNext</source>
          <target state="translated">CachingIterator::hasNext</target>
        </trans-unit>
        <trans-unit id="9146f4c72051e8e3834d9bd667317844888b6670" translate="yes" xml:space="preserve">
          <source>CachingIterator::hasNext &amp;mdash; Check whether the inner iterator has a valid next element</source>
          <target state="translated">CachingIterator :: hasNext &amp;mdash;内部イテレーターに有効な次の要素があるかどうかを確認する</target>
        </trans-unit>
        <trans-unit id="348097748ff3cb7df74b30bc4b8e0ed22e959493" translate="yes" xml:space="preserve">
          <source>CachingIterator::hasNext &amp;rarr;</source>
          <target state="translated">CachingIterator :: hasNext&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="beae405e63804d62ddc6a59cf41bbc71bdbf3ab8" translate="yes" xml:space="preserve">
          <source>CachingIterator::key</source>
          <target state="translated">CachingIterator::key</target>
        </trans-unit>
        <trans-unit id="18e04c9e028770a1bf156a1ad8fe2df7d55c079c" translate="yes" xml:space="preserve">
          <source>CachingIterator::key &amp;mdash; Return the key for the current element</source>
          <target state="translated">CachingIterator :: key &amp;mdash;現在の要素のキーを返す</target>
        </trans-unit>
        <trans-unit id="11a88afac7c27656013b0790e676cb3c5fd58b88" translate="yes" xml:space="preserve">
          <source>CachingIterator::key &amp;rarr;</source>
          <target state="translated">CachingIterator :: key&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="8aa20aeab4cf0c7c36fb6e2e1ee4c1288022fb03" translate="yes" xml:space="preserve">
          <source>CachingIterator::next</source>
          <target state="translated">CachingIterator::next</target>
        </trans-unit>
        <trans-unit id="3ec6c78b6877d5c6d6069f4fcff8dece1bfee4d6" translate="yes" xml:space="preserve">
          <source>CachingIterator::next &amp;mdash; Move the iterator forward</source>
          <target state="translated">CachingIterator :: next &amp;mdash;イテレータを前に移動する</target>
        </trans-unit>
        <trans-unit id="dd4a7d2fa0688e7639e58dddb7094e7f693b1bd1" translate="yes" xml:space="preserve">
          <source>CachingIterator::next &amp;rarr;</source>
          <target state="translated">CachingIterator :: next&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ac72926db1ab75eee508beea0574f51cc4049787" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetExists</source>
          <target state="translated">CachingIterator::offsetExists</target>
        </trans-unit>
        <trans-unit id="28ae4bc65bb94f03100c0eb19aaeaceaca6d534f" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetExists &amp;mdash; The offsetExists purpose</source>
          <target state="translated">CachingIterator :: offsetExists &amp;mdash; offsetExistsの目的</target>
        </trans-unit>
        <trans-unit id="202673d2b18c6b3d160c85622b1d9b652d82f12c" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetExists &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetExists&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="8a9166ceadfc350ef1d9910bc204decd92ca59ba" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetGet</source>
          <target state="translated">CachingIterator::offsetGet</target>
        </trans-unit>
        <trans-unit id="bbbc1bac237df6ad02acf6d768bce7a59d0cd0b0" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetGet &amp;mdash; The offsetGet purpose</source>
          <target state="translated">CachingIterator :: offsetGet &amp;mdash; offsetGetの目的</target>
        </trans-unit>
        <trans-unit id="9aeb1ce3fdc5bf8c3beef468c4727b22cfbecfb9" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetGet &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetGet&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a1a8ff282adf4520ee604a4cef79cbeeb63cadea" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetSet</source>
          <target state="translated">CachingIterator::offsetSet</target>
        </trans-unit>
        <trans-unit id="cb418b4c230c251a2c41a393a7856c0311a792d1" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetSet &amp;mdash; The offsetSet purpose</source>
          <target state="translated">CachingIterator :: offsetSet &amp;mdash;オフセットセットの目的</target>
        </trans-unit>
        <trans-unit id="1d7d37075e389ffbf810a339874e63165ee7dc21" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetSet &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetSet&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6a18219fb5ab967834c2c936d17d24c0ea26e2c6" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetUnset</source>
          <target state="translated">CachingIterator::offsetUnset</target>
        </trans-unit>
        <trans-unit id="ecee3a60c9fddcdcd46b191e82a947cce8840f7d" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetUnset &amp;mdash; The offsetUnset purpose</source>
          <target state="translated">CachingIterator :: offsetUnset &amp;mdash; offsetUnsetの目的</target>
        </trans-unit>
        <trans-unit id="4da9d939630f8cda503738ecc71c5cca8d5f0eba" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetUnset &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetUnset&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c2bf6117007a07cf1f8196af8d5fc2ea6bd3b6d7" translate="yes" xml:space="preserve">
          <source>CachingIterator::rewind</source>
          <target state="translated">CachingIterator::rewind</target>
        </trans-unit>
        <trans-unit id="b13a1549c8371550d73dd43a53c47936d1faf576" translate="yes" xml:space="preserve">
          <source>CachingIterator::rewind &amp;mdash; Rewind the iterator</source>
          <target state="translated">CachingIterator :: rewind &amp;mdash;イテレータを巻き戻す</target>
        </trans-unit>
        <trans-unit id="041603b7968c012dd6729b6521fcef164984efa8" translate="yes" xml:space="preserve">
          <source>CachingIterator::rewind &amp;rarr;</source>
          <target state="translated">CachingIterator :: rewind&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2741074e370ee687d88cc2f84543ff82198104d4" translate="yes" xml:space="preserve">
          <source>CachingIterator::setFlags</source>
          <target state="translated">CachingIterator::setFlags</target>
        </trans-unit>
        <trans-unit id="a5bd8823b43992ff719e677caad57c07382ca6ae" translate="yes" xml:space="preserve">
          <source>CachingIterator::setFlags &amp;mdash; The setFlags purpose</source>
          <target state="translated">CachingIterator :: setFlags &amp;mdash; setFlagsの目的</target>
        </trans-unit>
        <trans-unit id="d96e6f59acf937afad2a364a98b6102eacf81a37" translate="yes" xml:space="preserve">
          <source>CachingIterator::setFlags &amp;rarr;</source>
          <target state="translated">CachingIterator :: setFlags&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5eb3606d4f1d77a7228181bddab51ca07bb5dcbc" translate="yes" xml:space="preserve">
          <source>CachingIterator::valid</source>
          <target state="translated">CachingIterator::valid</target>
        </trans-unit>
        <trans-unit id="b49a1af3d785721d1ae98bd022812f9a1676e6a0" translate="yes" xml:space="preserve">
          <source>CachingIterator::valid &amp;mdash; Check whether the current element is valid</source>
          <target state="translated">CachingIterator :: valid &amp;mdash;現在の要素が有効かどうかを確認する</target>
        </trans-unit>
        <trans-unit id="63b8be066133330e7b39d4f4b78be68cc722f1c0" translate="yes" xml:space="preserve">
          <source>CachingIterator::valid &amp;rarr;</source>
          <target state="translated">CachingIterator :: valid&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2a96aae34ffee9c858e43e9820bbbdb9242a459b" translate="yes" xml:space="preserve">
          <source>Calculate (&lt;code&gt;base&lt;/code&gt; raised into power &lt;code&gt;exp&lt;/code&gt;) modulo &lt;code&gt;mod&lt;/code&gt;. If &lt;code&gt;exp&lt;/code&gt; is negative, result is undefined.</source>
          <target state="translated">modulo &lt;code&gt;mod&lt;/code&gt; を計算します（ &lt;code&gt;base&lt;/code&gt; を累乗して &lt;code&gt;exp&lt;/code&gt; にします）。 &lt;code&gt;exp&lt;/code&gt; が負の場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="3823662bb467ab4756d3fef7cc54123ea7a8eb67" translate="yes" xml:space="preserve">
          <source>Calculate (&lt;code&gt;num&lt;/code&gt; raised into power &lt;code&gt;exponent&lt;/code&gt;) modulo &lt;code&gt;modulus&lt;/code&gt;. If &lt;code&gt;exponent&lt;/code&gt; is negative, result is undefined.</source>
          <target state="translated">計算（ &lt;code&gt;num&lt;/code&gt; パワーに上昇 &lt;code&gt;exponent&lt;/code&gt; ）モジュロ &lt;code&gt;modulus&lt;/code&gt; 。 &lt;code&gt;exponent&lt;/code&gt; が負の場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="0121f09ee5aa3588fdce09c70caac46d18a71d52" translate="yes" xml:space="preserve">
          <source>Calculate greatest common divisor of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. The result is always positive even if either of, or both, input operands are negative.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; の最大公約数を計算します。入力オペランドのいずれか、または両方が負であっても、結果は常に正です。</target>
        </trans-unit>
        <trans-unit id="70e0a43da71418036b0296438d378d60a0dc2015" translate="yes" xml:space="preserve">
          <source>Calculate greatest common divisor of &lt;code&gt;num1&lt;/code&gt; and &lt;code&gt;num2&lt;/code&gt;. The result is always positive even if either of, or both, input operands are negative.</source>
          <target state="translated">&lt;code&gt;num1&lt;/code&gt; と &lt;code&gt;num2&lt;/code&gt; の最大公約数を計算します。入力オペランドのいずれかまたは両方が負の場合でも、結果は常に正になります。</target>
        </trans-unit>
        <trans-unit id="d65eeff0d7d17d82607ded2ffb4137f5a209f766" translate="yes" xml:space="preserve">
          <source>Calculate the square root of a number, with remainder.</source>
          <target state="translated">数の平方根を計算します。</target>
        </trans-unit>
        <trans-unit id="f38c48d5b30cf18c75bd6fc53a9541b99b7ba6a1" translate="yes" xml:space="preserve">
          <source>Calculated length of the hypotenuse</source>
          <target state="translated">視床下部の計算された長さ</target>
        </trans-unit>
        <trans-unit id="c2ee997a35893717f636eb096178d5408603704b" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;n&lt;/code&gt; modulo &lt;code&gt;d&lt;/code&gt;. The result is always non-negative, the sign of &lt;code&gt;d&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; を法として &lt;code&gt;d&lt;/code&gt; を計算します。結果は常に負ではなく、 &lt;code&gt;d&lt;/code&gt; の符号は無視されます。</target>
        </trans-unit>
        <trans-unit id="f9b8800aea998f87cd81361f23b86a98039a0d57" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;num1&lt;/code&gt; modulo &lt;code&gt;num2&lt;/code&gt;. The result is always non-negative, the sign of &lt;code&gt;num2&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;num2&lt;/code&gt; を法として &lt;code&gt;num1&lt;/code&gt; を計算します。結果は常に非負であり、 &lt;code&gt;num2&lt;/code&gt; の符号は無視されます。</target>
        </trans-unit>
        <trans-unit id="8c88d1bdecaef4e258f2d327403282db2616adc0" translate="yes" xml:space="preserve">
          <source>Calculates bitwise AND of two GMP numbers.</source>
          <target state="translated">2つのGMP数のビット単位のANDを計算します。</target>
        </trans-unit>
        <trans-unit id="90b63546ff87a6bc6e2dd01a4ca8a89658e7d1d3" translate="yes" xml:space="preserve">
          <source>Calculates bitwise exclusive OR (XOR) of two GMP numbers.</source>
          <target state="translated">2つのGMP数のビット排他的OR(XOR)を計算します。</target>
        </trans-unit>
        <trans-unit id="19c679c69deef614118add607774bf8b333da5f4" translate="yes" xml:space="preserve">
          <source>Calculates bitwise inclusive OR of two GMP numbers.</source>
          <target state="translated">2つのGMP数のビット単位の包括的なORを計算します。</target>
        </trans-unit>
        <trans-unit id="f8208a1e1beda3e9a9e1e53f49d281592ba484ad" translate="yes" xml:space="preserve">
          <source>Calculates factorial (&lt;code&gt;num!&lt;/code&gt;) of &lt;code&gt;num&lt;/code&gt;.</source>
          <target state="translated">計算し階乗（ &lt;code&gt;num!&lt;/code&gt; ）の &lt;code&gt;num&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19c507230dd9728f567273a9bcdb7c28aa68120b" translate="yes" xml:space="preserve">
          <source>Calculates factorial (&lt;em&gt;a!&lt;/em&gt;) of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;aの&lt;/em&gt;階乗（&lt;em&gt;a！&lt;/em&gt;）を計算 &lt;code&gt;a&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="21632c64e96e33f44d8078463f1df561257b9cfa" translate="yes" xml:space="preserve">
          <source>Calculates g, s, and t, such that &lt;code&gt;a*s + b*t = g =
   gcd(a,b)&lt;/code&gt;, where gcd is the greatest common divisor. Returns an array with respective elements g, s and t.</source>
          <target state="translated">&lt;code&gt;a*s + b*t = g = gcd(a,b)&lt;/code&gt; となるように、g、s、およびtを計算します。ここで、gcdは最大公約数です。それぞれの要素g、s、tを持つ配列を返します。</target>
        </trans-unit>
        <trans-unit id="224bd35cbfa7883264c4dbd1f570d8d36b0a5205" translate="yes" xml:space="preserve">
          <source>Calculates g, s, and t, such that &lt;em&gt;a*s + b*t = g = gcd(a,b)&lt;/em&gt;, where gcd is the greatest common divisor. Returns an array with respective elements g, s and t.</source>
          <target state="translated">&lt;em&gt;a * s + b * t = g = gcd（a、b）&lt;/em&gt;となるようにg、s、tを計算します。ここで、gcdは最大公約数です。それぞれの要素g、s、tを含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="65aee4c203d130d849e3a92c9444e4cb21feb0bd" translate="yes" xml:space="preserve">
          <source>Calculates remainder of the integer division of &lt;code&gt;n&lt;/code&gt; by &lt;code&gt;d&lt;/code&gt;. The remainder has the sign of the &lt;code&gt;n&lt;/code&gt; argument, if not zero.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; の &lt;code&gt;d&lt;/code&gt; による整数除算の剰余を計算します。残りは、ゼロでない場合、 &lt;code&gt;n&lt;/code&gt; 引数の符号を持ちます。</target>
        </trans-unit>
        <trans-unit id="e3d1982a191f5bd18d94ed3a0c70c0641447b501" translate="yes" xml:space="preserve">
          <source>Calculates remainder of the integer division of &lt;code&gt;num1&lt;/code&gt; by &lt;code&gt;num2&lt;/code&gt;. The remainder has the sign of the &lt;code&gt;num1&lt;/code&gt; argument, if not zero.</source>
          <target state="translated">&lt;code&gt;num1&lt;/code&gt; を &lt;code&gt;num2&lt;/code&gt; で除算した整数の余りを計算します。剰余は、ゼロでない場合でも、 &lt;code&gt;num1&lt;/code&gt; 引数の符号を持ちます。</target>
        </trans-unit>
        <trans-unit id="2070431392608e59984c516f311538d1000f345f" translate="yes" xml:space="preserve">
          <source>Calculates square root of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">の平方根を計算 &lt;code&gt;a&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="e7f445f261b999a07f804440819b2e294dede51d" translate="yes" xml:space="preserve">
          <source>Calculates square root of &lt;code&gt;num&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;num&lt;/code&gt; の平方根を計算します。</target>
        </trans-unit>
        <trans-unit id="efb7fa366cb845fb81c79935f0bb754f606944bb" translate="yes" xml:space="preserve">
          <source>Calculates the MD5 hash of &lt;code&gt;str&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo; RSA Data Security, Inc. MD5 Message-Digest Algorithm&lt;/a&gt;, and returns that hash.</source>
          <target state="translated">&lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo;RSA Data Security、Inc.のMD5メッセージダイジェストアルゴリズム&lt;/a&gt;を使用して &lt;code&gt;str&lt;/code&gt; のMD5ハッシュを計算し、そのハッシュを返します。</target>
        </trans-unit>
        <trans-unit id="36bf99a8155c35ed8fa071e4a5e631763e385f87" translate="yes" xml:space="preserve">
          <source>Calculates the MD5 hash of &lt;code&gt;string&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo; RSA Data Security, Inc. MD5 Message-Digest Algorithm&lt;/a&gt;, and returns that hash.</source>
          <target state="translated">&lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo;RSAData Security、Inc。のMD5メッセージダイジェストアルゴリズム&lt;/a&gt;を使用して &lt;code&gt;string&lt;/code&gt; のMD5ハッシュを計算し、そのハッシュを返します。</target>
        </trans-unit>
        <trans-unit id="bcaad6c8b6f422457f2f13f26e0bc3796bd81d9f" translate="yes" xml:space="preserve">
          <source>Calculates the MD5 hash of the file specified by the &lt;code&gt;filename&lt;/code&gt; parameter using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo; RSA Data Security, Inc. MD5 Message-Digest Algorithm&lt;/a&gt;, and returns that hash. The hash is a 32-character hexadecimal number.</source>
          <target state="translated">&lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo;RSA Data Security、Inc.のMD5 Message-Digest Algorithm&lt;/a&gt;を使用して、 &lt;code&gt;filename&lt;/code&gt; パラメータで指定されたファイルのMD5ハッシュを計算し、そのハッシュを返します。ハッシュは32文字の16進数です。</target>
        </trans-unit>
        <trans-unit id="b8d93b01939f9c5b9ac29b45c8a0e2fa4d79f829" translate="yes" xml:space="preserve">
          <source>Calculates the binomial coefficient C(n, k).</source>
          <target state="translated">二項係数C(n,k)を計算します。</target>
        </trans-unit>
        <trans-unit id="3fad9e60170ec155ad8b1aad267bd014ed118742" translate="yes" xml:space="preserve">
          <source>Calculates the group access list for the user specified in name.</source>
          <target state="translated">名前で指定したユーザのグループアクセスリストを計算します。</target>
        </trans-unit>
        <trans-unit id="248c1b7749d59f6849eb239a04b207e5c9aade74" translate="yes" xml:space="preserve">
          <source>Calculates the match score between &lt;code&gt;signature1&lt;/code&gt; and &lt;code&gt;signature2&lt;/code&gt; using &lt;a href=&quot;http://dfrws.org/2006/proceedings/12-Kornblum.pdf&quot;&gt;&amp;raquo; context-triggered piecewise hashing&lt;/a&gt;, and returns the match score.</source>
          <target state="translated">&lt;a href=&quot;http://dfrws.org/2006/proceedings/12-Kornblum.pdf&quot;&gt;&amp;raquo;コンテキストトリガー区分的ハッシュ&lt;/a&gt;を使用して &lt;code&gt;signature1&lt;/code&gt; と &lt;code&gt;signature2&lt;/code&gt; の間の一致スコアを計算し、一致スコアを返します。</target>
        </trans-unit>
        <trans-unit id="1b4e6e830f430c608eae7cb8ac2f1ccc0fd8df8a" translate="yes" xml:space="preserve">
          <source>Calculates the metaphone key of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; のmetaphoneキーを計算します。</target>
        </trans-unit>
        <trans-unit id="f4d9ad18cbfb490c2992055e35e669e5a426be64" translate="yes" xml:space="preserve">
          <source>Calculates the metaphone key of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; のメタフォンキーを計算します。</target>
        </trans-unit>
        <trans-unit id="dbe4722499e48135a44a6bb73c5e213c129dae88" translate="yes" xml:space="preserve">
          <source>Calculates the sha1 hash of &lt;code&gt;str&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo; US Secure Hash Algorithm 1&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo;US Secure Hash Algorithm 1&lt;/a&gt;を使用して、 &lt;code&gt;str&lt;/code&gt; のsha1ハッシュを計算します。</target>
        </trans-unit>
        <trans-unit id="c81a8c72e839dbe875b444efef6df4537006d744" translate="yes" xml:space="preserve">
          <source>Calculates the sha1 hash of &lt;code&gt;string&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo; US Secure Hash Algorithm 1&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo;USSecure Hash Algorithm1&lt;/a&gt;を使用して &lt;code&gt;string&lt;/code&gt; のsha1ハッシュを計算します。</target>
        </trans-unit>
        <trans-unit id="59f511b31b012d361a57546110bb8d3df1c1bb67" translate="yes" xml:space="preserve">
          <source>Calculates the sha1 hash of the file specified by &lt;code&gt;filename&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo; US Secure Hash Algorithm 1&lt;/a&gt;, and returns that hash. The hash is a 40-character hexadecimal number.</source>
          <target state="translated">&lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo;US Secure Hash Algorithm 1&lt;/a&gt;を使用して、 &lt;code&gt;filename&lt;/code&gt; で指定されたファイルのsha1ハッシュを計算し、そのハッシュを返します。ハッシュは40文字の16進数です。</target>
        </trans-unit>
        <trans-unit id="8f9aa200ef1d155967ff69bff6235ddcbe24268e" translate="yes" xml:space="preserve">
          <source>Calculates the size of the buffer that should be allocated for receiving the ancillary data.</source>
          <target state="translated">アンシラリデータを受信するために割り当てるべきバッファのサイズを計算します。</target>
        </trans-unit>
        <trans-unit id="10ca3884756801a74e779f35cfe95e75fa1bbc93" translate="yes" xml:space="preserve">
          <source>Calculates the soundex key of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; のsoundexキーを計算します。</target>
        </trans-unit>
        <trans-unit id="52cd6d6e657c2cd20074388fcebe970e84cbd5a5" translate="yes" xml:space="preserve">
          <source>Calculates the soundex key of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; のsoundexキーを計算します。</target>
        </trans-unit>
        <trans-unit id="3cab2f47fd48281b927e788eb426c57cf95c43ac" translate="yes" xml:space="preserve">
          <source>Calendar field encompassing the information in &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_HOUR_OF_DAY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MINUTE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_SECOND&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MILLISECOND&lt;/code&gt;&lt;/strong&gt;. Range is from the &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;24 * 3600 * 1000 - 1&lt;/code&gt;. It is not the amount of milliseconds elapsed in the day since on DST transitions it will have discontinuities analog to those of the wall time.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_HOUR_OF_DAY&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_MINUTE&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_SECOND&lt;/code&gt; &lt;/strong&gt;、および&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_MILLISECOND&lt;/code&gt; &lt;/strong&gt;の情報を含むカレンダーフィールド。レンジからである &lt;code&gt;0&lt;/code&gt; に &lt;code&gt;24 * 3600 * 1000 - 1&lt;/code&gt; 。DST遷移では、壁の時間と同様の不連続性があるため、1日に経過したミリ秒数ではありません。</target>
        </trans-unit>
        <trans-unit id="570eba77e2e18176ceeb006b2466cc9ed17fbb38" translate="yes" xml:space="preserve">
          <source>Calendar field encompassing the information in &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_HOUR_OF_DAY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MINUTE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_SECOND&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MILLISECOND&lt;/code&gt;&lt;/strong&gt;. Range is from the &lt;em&gt;0&lt;/em&gt; to &lt;em&gt;24 * 3600 * 1000 - 1&lt;/em&gt;. It is not the amount of milliseconds ellapsed in the day since on DST transitions it will have discontinuities analog to those of the wall time.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_HOUR_OF_DAY&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_MINUTE&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_SECOND&lt;/code&gt; &lt;/strong&gt;および&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_MILLISECOND&lt;/code&gt; &lt;/strong&gt;の情報を含むカレンダーフィールド。レンジからである&lt;em&gt;0&lt;/em&gt;に&lt;em&gt;* 1000年24 * 3600から1&lt;/em&gt;。DSTの遷移では、ウォールタイムと同様の不連続性が生じるため、1日の経過時間はミリ秒ではありません。</target>
        </trans-unit>
        <trans-unit id="0d5ff4f9281120abd5ddb3a728f48d047e1f7453" translate="yes" xml:space="preserve">
          <source>Calendar field for a modified Julian day number. It is different from a conventional Julian day number in that its transitions occur at local zone midnight rather than at noon UTC. It uniquely identifies a date.</source>
          <target state="translated">修正されたユリウス日番号のカレンダーフィールド。これは、従来のユリウス日番号とは異なり、その遷移がUTCの正午ではなく、ローカルゾーンの真夜中に起こるという点で異なる。これは日付を一意に識別します。</target>
        </trans-unit>
        <trans-unit id="31b7766d54700007b4b4687ffd43bf589a6d1b44" translate="yes" xml:space="preserve">
          <source>Calendar field for a year number representation that is continuous across eras. For the Gregorian calendar, the value of this field matches that of &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_YEAR&lt;/code&gt;&lt;/strong&gt; for AD years; a BC year &lt;code&gt;y&lt;/code&gt; is represented by &lt;code&gt;-y +
       1&lt;/code&gt;.</source>
          <target state="translated">時代を超えて連続する年番号表現のカレンダーフィールド。グレゴリオ暦の場合、このフィールドの値はAD年の&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_YEAR&lt;/code&gt; &lt;/strong&gt;の値と一致します。紀元前の &lt;code&gt;y&lt;/code&gt; 年は &lt;code&gt;-y + 1&lt;/code&gt; 表されます。</target>
        </trans-unit>
        <trans-unit id="06000850680e9205c5a4671bddf395a32950ed56" translate="yes" xml:space="preserve">
          <source>Calendar field for a year number representation that is continuous across eras. For the Gregorian calendar, the value of this field matches that of &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_YEAR&lt;/code&gt;&lt;/strong&gt; for AD years; a BC year &lt;em&gt;y&lt;/em&gt; is represented by &lt;em&gt;-y + 1&lt;/em&gt;.</source>
          <target state="translated">時代を超えて継続する年数表現のカレンダーフィールド。グレゴリオ暦の場合、このフィールドの値はAD年の&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_YEAR&lt;/code&gt; &lt;/strong&gt;の値と一致します。紀元前&lt;em&gt;y&lt;/em&gt;年は&lt;em&gt;-y + 1で&lt;/em&gt;表されます。</target>
        </trans-unit>
        <trans-unit id="44732e1997214a3741d6b6d7fff47d4b0212cde4" translate="yes" xml:space="preserve">
          <source>Calendar field for the day of the month. The same as &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_DAY_OF_MONTH&lt;/code&gt;&lt;/strong&gt;, which has a clearer name.</source>
          <target state="translated">日付のカレンダーフィールド。より明確な名前を持つ&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_DAY_OF_MONTH&lt;/code&gt; &lt;/strong&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="da4d107d3614c6728bc600665e5185c709f80937" translate="yes" xml:space="preserve">
          <source>Calendar field for the day of the week. Its values start with &lt;code&gt;1&lt;/code&gt; (Sunday, see &lt;a href=&quot;class.intlcalendar#intlcalendar.constants.dow-sunday&quot;&gt;&lt;strong&gt;&lt;code&gt;IntlCalendar::DOW_SUNDAY&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; and subsequent constants) and the last valid value is 7 (Saturday).</source>
          <target state="translated">曜日のカレンダーフィールド。その値は &lt;code&gt;1&lt;/code&gt; （日曜日、&lt;a href=&quot;class.intlcalendar#intlcalendar.constants.dow-sunday&quot;&gt;&lt;strong&gt; &lt;code&gt;IntlCalendar::DOW_SUNDAY&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;以降の定数を参照）で&lt;strong&gt;始まり&lt;/strong&gt;、最後の有効な値は7（土曜日）です。</target>
        </trans-unit>
        <trans-unit id="95d6b28417024538d8958cce7e3a875ade822a19" translate="yes" xml:space="preserve">
          <source>Calendar field for the day of the week. Its values start with &lt;em&gt;1&lt;/em&gt; (Sunday, see &lt;a href=&quot;class.intlcalendar#intlcalendar.constants.dow-sunday&quot;&gt;&lt;strong&gt;&lt;code&gt;IntlCalendar::DOW_SUNDAY&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; and subsequent constants) and the last valid value is 7 (Saturday).</source>
          <target state="translated">曜日のカレンダーフィールド。その値は&lt;em&gt;1&lt;/em&gt;（日曜日、&lt;a href=&quot;class.intlcalendar#intlcalendar.constants.dow-sunday&quot;&gt;&lt;strong&gt; &lt;code&gt;IntlCalendar::DOW_SUNDAY&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;および後続の定数を参照）で&lt;strong&gt;始まり&lt;/strong&gt;、最後の有効な値は7（土曜日）です。</target>
        </trans-unit>
        <trans-unit id="d7504097f3ae2ffad453e10b354a32fc3da790b5" translate="yes" xml:space="preserve">
          <source>Calendar field for the day of the year. For the Gregorian calendar, starts with &lt;strong&gt;&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt; and ends with &lt;strong&gt;&lt;code&gt;365&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;366&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">年間のカレンダーフィールド。グレゴリオ暦の場合、&lt;strong&gt; &lt;code&gt;1&lt;/code&gt; &lt;/strong&gt;で始まり、&lt;strong&gt; &lt;code&gt;365&lt;/code&gt; &lt;/strong&gt;または&lt;strong&gt; &lt;code&gt;366&lt;/code&gt; で&lt;/strong&gt;終わります。</target>
        </trans-unit>
        <trans-unit id="44295e750e18c99c2dc9a2dc198acdfb114d4a0f" translate="yes" xml:space="preserve">
          <source>Calendar field for the daylight saving time offset of the calendarʼs timezone, in milliseconds, if active for calendarʼs time.</source>
          <target state="translated">カレンダーフィールドには、カレンダーのタイムゾーンのサマータイムオフセットをミリ秒単位で表示します。</target>
        </trans-unit>
        <trans-unit id="2b403a7d5d4417b2a32e410f893e264826227506" translate="yes" xml:space="preserve">
          <source>Calendar field for the full (24h) hour of the day. Valid values are &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;23&lt;/code&gt;.</source>
          <target state="translated">1日の全時間（24時間）のカレンダーフィールド。有効な値は &lt;code&gt;0&lt;/code&gt; に &lt;code&gt;23&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a184ce5d6e36c07bf278481f0b46b49d3089db5f" translate="yes" xml:space="preserve">
          <source>Calendar field for the full (24h) hour of the day. Valid values are &lt;em&gt;0&lt;/em&gt; to &lt;em&gt;23&lt;/em&gt;.</source>
          <target state="translated">1日全体（24時間）のカレンダーフィールド。有効な値は&lt;em&gt;0&lt;/em&gt;に&lt;em&gt;23&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c8139dfe2e2c712ab642d3cb24d09a696c26344c" translate="yes" xml:space="preserve">
          <source>Calendar field for the hour, without specifying whether itʼs in the morning or in the afternoon. Valid values are &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;11&lt;/code&gt;.</source>
          <target state="translated">時間のカレンダーフィールド。午前か午後かを指定しません。有効な値は &lt;code&gt;0&lt;/code&gt; に &lt;code&gt;11&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ee745e06b093410965bce3e79f049a223d2c49d" translate="yes" xml:space="preserve">
          <source>Calendar field for the hour, without specifying whether itʼs in the morning or in the afternoon. Valid values are &lt;em&gt;0&lt;/em&gt; to &lt;em&gt;11&lt;/em&gt;.</source>
          <target state="translated">時間のカレンダーフィールド。午前か午後かを指定しません。有効な値は&lt;em&gt;0&lt;/em&gt;に&lt;em&gt;11&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="db8e1ae8f154aaf286f9e2a713501f98dd5e09f2" translate="yes" xml:space="preserve">
          <source>Calendar field for the localized day of the week. This is a value between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; being used for the day of the week that matches the value returned by &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;IntlCalendar::getFirstDayOfWeek()&lt;/a&gt;.</source>
          <target state="translated">ローカライズされた曜日のカレンダーフィールド。これは &lt;code&gt;1&lt;/code&gt; から &lt;code&gt;7&lt;/code&gt; までの値であり、 &lt;code&gt;1&lt;/code&gt; は&lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;IntlCalendar :: getFirstDayOfWeek（）&lt;/a&gt;によって返される値と一致する曜日に使用されます。</target>
        </trans-unit>
        <trans-unit id="8f5bc689756f035161dd7fdd75a72978a00a68a2" translate="yes" xml:space="preserve">
          <source>Calendar field for the localized day of the week. This is a value betwen &lt;em&gt;1&lt;/em&gt; and &lt;em&gt;7&lt;/em&gt;, &lt;em&gt;1&lt;/em&gt; being used for the day of the week that matches the value returned by &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;IntlCalendar::getFirstDayOfWeek()&lt;/a&gt;.</source>
          <target state="translated">ローカライズされた曜日のカレンダーフィールド。これは&lt;em&gt;1&lt;/em&gt;と&lt;em&gt;7の間の&lt;/em&gt;値で、&lt;em&gt;1&lt;/em&gt;は&lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;IntlCalendar :: getFirstDayOfWeek（）&lt;/a&gt;によって返される値と一致する曜日に使用されます。</target>
        </trans-unit>
        <trans-unit id="0d87ed1cc3ca4d66bd317fdc9e8ae2a56c533de0" translate="yes" xml:space="preserve">
          <source>Calendar field for the minutes component of the time.</source>
          <target state="translated">時間の分単位のカレンダーフィールド。</target>
        </trans-unit>
        <trans-unit id="1646b0757bf6b58bf3804382c2238b86f4ba7700" translate="yes" xml:space="preserve">
          <source>Calendar field for the month. The month sequence is zero-based, so January (here used to signify the first month of the calendar; this may be called another name, such as Muharram in the Islamic calendar) is represented by &lt;code&gt;0&lt;/code&gt;, February by &lt;code&gt;1&lt;/code&gt;, &amp;hellip;, December by &lt;code&gt;11&lt;/code&gt; and, for calendars that have it, the 13th or leap month by &lt;code&gt;12&lt;/code&gt;.</source>
          <target state="translated">その月のカレンダーフィールド。月の順序はゼロベースであるため、1月（ここではカレンダーの最初の月を表すために使用されます。これはイスラム暦のムハッラムなどの別名と呼ばれることもあります）は &lt;code&gt;0&lt;/code&gt; 、2月は &lt;code&gt;1&lt;/code&gt; 、&amp;hellip;、12月は &lt;code&gt;11&lt;/code&gt; と、それがあるカレンダーの場合は、13か月目または &lt;code&gt;12&lt;/code&gt; 月のうるう月。</target>
        </trans-unit>
        <trans-unit id="7c3a43a7df1bb0ad9eca3c40657b4435e79d743e" translate="yes" xml:space="preserve">
          <source>Calendar field for the month. The month sequence is zero-based, so Janurary (here used to signify the first month of the calendar; this may be called another name, such as Muharram in the Islamic calendar) is represented by &lt;em&gt;0&lt;/em&gt;, February by &lt;em&gt;1&lt;/em&gt;, &amp;hellip;, December by &lt;em&gt;11&lt;/em&gt; and, for calendars that have it, the 13th or leap month by &lt;em&gt;12&lt;/em&gt;.</source>
          <target state="translated">月のカレンダーフィールド。月のシーケンスはゼロベースであるため、Janurary（ここではカレンダーの最初の月を表すために使用されます。これはイスラム暦のMuharramなどの別の名前と呼ばれる場合があります）は&lt;em&gt;0&lt;/em&gt;、2月&lt;em&gt;1&lt;/em&gt;、&amp;hellip;、12月&lt;em&gt;11&lt;/em&gt;と、それを含むカレンダーの場合、&lt;em&gt;12&lt;/em&gt;月までの13番目またはうるう月。</target>
        </trans-unit>
        <trans-unit id="9c85f2eedb5532c16006977d07db2ebb58dcaedf" translate="yes" xml:space="preserve">
          <source>Calendar field for the number of the week of the month. This depends on which day of the week is &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;deemed to start the week&lt;/a&gt; and the &lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;minimal number of days in a week&lt;/a&gt;.</source>
          <target state="translated">月の週番号のカレンダーフィールド。これは、週の&lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;開始と見なされる曜日&lt;/a&gt;と、週の&lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;最小日数&lt;/a&gt;によって異なります。</target>
        </trans-unit>
        <trans-unit id="a4b3a869d12956d59cff6d417db1d5f7d8ddeb0e" translate="yes" xml:space="preserve">
          <source>Calendar field for the number of the week of the year. This depends on which day of the week is &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;deemed to start the week&lt;/a&gt; and the &lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;minimal number of days in a week&lt;/a&gt;.</source>
          <target state="translated">年の週番号のカレンダーフィールド。これは、週の&lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;開始と見なされる曜日&lt;/a&gt;と、週の&lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;最小日数&lt;/a&gt;によって異なります。</target>
        </trans-unit>
        <trans-unit id="0008b38dd850bae0f4039cbf13614b9d3838624e" translate="yes" xml:space="preserve">
          <source>Calendar field for the seconds component of the time.</source>
          <target state="translated">時間の秒数を表すカレンダーフィールド。</target>
        </trans-unit>
        <trans-unit id="3608679394ab46a8f8566704359e65f98d095aa5" translate="yes" xml:space="preserve">
          <source>Calendar field for the year. This is not unique across eras. If the calendar type has more than one era, generally the minimum value for this field will be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">その年のカレンダーフィールド。これは時代を超えてユニークではありません。カレンダータイプに複数の時代がある場合、通常、このフィールドの最小値は &lt;code&gt;1&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="93a4670e4ced3130c11585e9e3be7653cc918186" translate="yes" xml:space="preserve">
          <source>Calendar field for the year. This is not unique across eras. If the calendar type has more than one era, generally the minimum value for this field will be &lt;em&gt;1&lt;/em&gt;.</source>
          <target state="translated">年のカレンダーフィールド。これは時代全体で一意ではありません。カレンダータイプに複数の時代がある場合、通常、このフィールドの最小値は&lt;em&gt;1&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="40eae8d3829eac2aa73d8c5ae136b3b4bd6857f7" translate="yes" xml:space="preserve">
          <source>Calendar field indicating the raw offset of the timezone, in milliseconds. The raw offset is the timezone offset, excluding any offset due to daylight saving time.</source>
          <target state="translated">タイムゾーンの生のオフセットをミリ秒単位で示すカレンダーフィールド。生のオフセットは、サマータイムによるオフセットを除いたタイムゾーンのオフセットです。</target>
        </trans-unit>
        <trans-unit id="e160b3acb0e4aec23e333bf965de69508c3a35f1" translate="yes" xml:space="preserve">
          <source>Calendar field indicating whether a time is before noon (value &lt;code&gt;0&lt;/code&gt;, AM) or after (&lt;code&gt;1&lt;/code&gt;). Midnight is AM, noon is PM.</source>
          <target state="translated">時刻が正午より前（値 &lt;code&gt;0&lt;/code&gt; 、AM）か後（ &lt;code&gt;1&lt;/code&gt; ）かを示すカレンダーフィールド。真夜中は午前、正午は午後です。</target>
        </trans-unit>
        <trans-unit id="2d6ed0c7c4e48b9fd32fb5769aec92dd9a4ceb7e" translate="yes" xml:space="preserve">
          <source>Calendar field indicating whether a time is before noon (value &lt;em&gt;0&lt;/em&gt;, AM) or after (&lt;em&gt;1&lt;/em&gt;). Midnight is AM, noon is PM.</source>
          <target state="translated">時刻が正午より前（値&lt;em&gt;0&lt;/em&gt;、AM）か後（&lt;em&gt;1&lt;/em&gt;）かを示すカレンダーフィールド。真夜中は午前、正午は午後です。</target>
        </trans-unit>
        <trans-unit id="4aa449ba9392a795fae02c249fa5248c42db5bd9" translate="yes" xml:space="preserve">
          <source>Calendar field numerically representing an era, for instance &lt;code&gt;1&lt;/code&gt; for AD and &lt;code&gt;0&lt;/code&gt; for BC in the Gregorian/Julian calendars and &lt;code&gt;235&lt;/code&gt; for the Heisei (平成) era in the Japanese calendar. Not all calendars have more than one era.</source>
          <target state="translated">時代を数値で表すカレンダーフィールド。たとえば、グレゴリオ暦/ユリウス暦ではADの場合は &lt;code&gt;1&lt;/code&gt; 、BCの場合は &lt;code&gt;0&lt;/code&gt; 、日本の暦では平成（追）時代の場合は &lt;code&gt;235&lt;/code&gt; です。すべてのカレンダーに複数の時代があるわけではありません。</target>
        </trans-unit>
        <trans-unit id="c979229348e55fb3d2c54ab4fb921f9a80cbbc70" translate="yes" xml:space="preserve">
          <source>Calendar field numerically representing an era, for instance &lt;em&gt;1&lt;/em&gt; for AD and &lt;em&gt;0&lt;/em&gt; for BC in the Gregorian/Julian calendars and &lt;em&gt;235&lt;/em&gt; for the Heisei (平成) era in the Japanese calendar. Not all calendars have more than one era.</source>
          <target state="translated">年代を数値で表すカレンダーフィールド。たとえば、グレゴリオ暦/ユリウス暦ではADは&lt;em&gt;1&lt;/em&gt;、紀元前は&lt;em&gt;0&lt;/em&gt;であり、日本の暦では平成（平成）年代は&lt;em&gt;235&lt;/em&gt;です。すべてのカレンダーに複数の時代があるわけではありません。</target>
        </trans-unit>
        <trans-unit id="e5455ca8de2e38aae8df557e72e90f3d68727b6c" translate="yes" xml:space="preserve">
          <source>Calendar field representing the year for &lt;a href=&quot;class.intlcalendar#intlcalendar.constants.field-week-of-year&quot;&gt;week of year&lt;/a&gt; purposes.</source>
          <target state="translated">&lt;a href=&quot;class.intlcalendar#intlcalendar.constants.field-week-of-year&quot;&gt;年の&lt;/a&gt;目的で週を表すカレンダーフィールド。</target>
        </trans-unit>
        <trans-unit id="cf27dadeb22d8efee1fc0c42b4327599635f7770" translate="yes" xml:space="preserve">
          <source>Calendar field the milliseconds component of the time.</source>
          <target state="translated">カレンダーフィールド 時間のミリ秒成分。</target>
        </trans-unit>
        <trans-unit id="a223c286278d7af11156eb8eb21036ed5462d7e8" translate="yes" xml:space="preserve">
          <source>Calendar field whose value is &lt;code&gt;1&lt;/code&gt; for indicating a leap month and &lt;code&gt;0&lt;/code&gt; otherwise.</source>
          <target state="translated">うるう月を示す値が &lt;code&gt;1&lt;/code&gt; で、それ以外の場合は &lt;code&gt;0&lt;/code&gt; のカレンダーフィールド。</target>
        </trans-unit>
        <trans-unit id="0c455bb32880debeed90b87c6a2f9792eaab6fdd" translate="yes" xml:space="preserve">
          <source>Calendar field whose value is &lt;em&gt;1&lt;/em&gt; for indicating a leap month and &lt;em&gt;0&lt;/em&gt; otherwise.</source>
          <target state="translated">うるう月を示す値が&lt;em&gt;1&lt;/em&gt;で、それ以外の場合は&lt;em&gt;0&lt;/em&gt;であるカレンダーフィールド。</target>
        </trans-unit>
        <trans-unit id="3d16cd5b15caf37ef62a191a5f2b32b2d8bf6830" translate="yes" xml:space="preserve">
          <source>Calendar information is returned as an array containing the elements &lt;code&gt;calname&lt;/code&gt;, &lt;code&gt;calsymbol&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;abbrevmonth&lt;/code&gt; and &lt;code&gt;maxdaysinmonth&lt;/code&gt;. The names of the different calendars which can be used as &lt;code&gt;calendar&lt;/code&gt; are as follows:</source>
          <target state="translated">カレンダー情報は、要素 &lt;code&gt;calname&lt;/code&gt; 、 &lt;code&gt;calsymbol&lt;/code&gt; 、 &lt;code&gt;month&lt;/code&gt; 、 &lt;code&gt;abbrevmonth&lt;/code&gt; 、および &lt;code&gt;maxdaysinmonth&lt;/code&gt; を含む配列として返されます。 &lt;code&gt;calendar&lt;/code&gt; として使用できるさまざまなカレンダーの名前は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6519d7ad99915185629eae1aa267f8a1d25f0a56" translate="yes" xml:space="preserve">
          <source>Calendar information is returned as an array containing the elements &lt;em&gt;calname&lt;/em&gt;, &lt;em&gt;calsymbol&lt;/em&gt;, &lt;em&gt;month&lt;/em&gt;, &lt;em&gt;abbrevmonth&lt;/em&gt; and &lt;em&gt;maxdaysinmonth&lt;/em&gt;. The names of the different calendars which can be used as &lt;code&gt;calendar&lt;/code&gt; are as follows:</source>
          <target state="translated">カレンダー情報は、エレメント&lt;em&gt;calname&lt;/em&gt;、&lt;em&gt;calsymbol&lt;/em&gt;、&lt;em&gt;month&lt;/em&gt;、&lt;em&gt;abbrevmonth&lt;/em&gt;、および&lt;em&gt;maxdaysinmonth&lt;/em&gt;を含む配列として返されます。 &lt;code&gt;calendar&lt;/code&gt; として使用できる異なるカレンダーの名前は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="fc86c9ccbc724dc67d7c40490c95dab7ff68758f" translate="yes" xml:space="preserve">
          <source>Calendar to convert from, one of &lt;strong&gt;&lt;code&gt;CAL_GREGORIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JULIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JEWISH&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;CAL_FRENCH&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">変換元のカレンダー、&lt;strong&gt; &lt;code&gt;CAL_GREGORIAN&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;CAL_JULIAN&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;CAL_JEWISH&lt;/code&gt; &lt;/strong&gt;または&lt;strong&gt; &lt;code&gt;CAL_FRENCH&lt;/code&gt; の&lt;/strong&gt;&lt;strong&gt;いずれ&lt;/strong&gt;か。</target>
        </trans-unit>
        <trans-unit id="94fbfe8c5ddada193f1846967fbb469cf3ba77f8" translate="yes" xml:space="preserve">
          <source>Calendar to convert to</source>
          <target state="translated">に変換するカレンダー</target>
        </trans-unit>
        <trans-unit id="b15e1ed07dc2888cca159f2320334bb546383513" translate="yes" xml:space="preserve">
          <source>Calendar to return information for. If no calendar is specified information about all calendars is returned.</source>
          <target state="translated">情報を返すカレンダー。カレンダーが指定されていない場合は、すべてのカレンダーに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="e7ac200fcd124fbfbc6b6efe4ac5596fc60fb6e2" translate="yes" xml:space="preserve">
          <source>Calendar to use for calculation</source>
          <target state="translated">計算に使用するカレンダー</target>
        </trans-unit>
        <trans-unit id="9c32b5e8f76e88392937c2058ae77dfc2e81a119" translate="yes" xml:space="preserve">
          <source>Calendar to use for formatting or parsing. The default value is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, which corresponds to &lt;strong&gt;&lt;code&gt;IntlDateFormatter::GREGORIAN&lt;/code&gt;&lt;/strong&gt;. This can either be one of the &lt;a href=&quot;class.intldateformatter#intl.intldateformatter-constants.calendartypes&quot;&gt;IntlDateFormatter calendar constants&lt;/a&gt; or an &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;. Any &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object passed will be clone; it will not be changed by the &lt;a href=&quot;class.intldateformatter&quot;&gt;IntlDateFormatter&lt;/a&gt;. This will determine the calendar type used (gregorian, islamic, persian, etc.) and, if &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; is given for the &lt;code&gt;timezone&lt;/code&gt; parameter, also the timezone used.</source>
          <target state="translated">フォーマットまたは解析に使用するカレンダー。デフォルト値は&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; で&lt;/strong&gt;、これは&lt;strong&gt; &lt;code&gt;IntlDateFormatter::GREGORIAN&lt;/code&gt; &lt;/strong&gt;対応し&lt;strong&gt;ます&lt;/strong&gt;。これは、&lt;a href=&quot;class.intldateformatter#intl.intldateformatter-constants.calendartypes&quot;&gt;IntlDateFormatterカレンダー定数の&lt;/a&gt;いずれか、またはIntlCalendarのいずれか&lt;a href=&quot;class.intlcalendar&quot;&gt;です&lt;/a&gt;。渡された&lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;オブジェクトはすべて複製されます。&lt;a href=&quot;class.intldateformatter&quot;&gt;IntlDateFormatter&lt;/a&gt;によって変更されることはありません。これにより、使用されるカレンダーのタイプ（グレゴリオ、イスラム、ペルシア語など）が決定され、 &lt;code&gt;timezone&lt;/code&gt; パラメーターに&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;が指定されている場合は、使用されるタイムゾーンも決定されます。</target>
        </trans-unit>
        <trans-unit id="c6d6f573e9315e0c78da0763552596720256a94c" translate="yes" xml:space="preserve">
          <source>Calendar to use for formatting or parsing. The default value is &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;, which corresponds to &lt;strong&gt;&lt;code&gt;IntlDateFormatter::GREGORIAN&lt;/code&gt;&lt;/strong&gt;. This can either be one of the &lt;a href=&quot;class.intldateformatter#intl.intldateformatter-constants.calendartypes&quot;&gt;IntlDateFormatter calendar constants&lt;/a&gt; or an &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;. Any &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object passed will be clone; it will not be changed by the &lt;a href=&quot;class.intldateformatter&quot;&gt;IntlDateFormatter&lt;/a&gt;. This will determine the calendar type used (gregorian, islamic, persian, etc.) and, if &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; is given for the &lt;code&gt;timezone&lt;/code&gt; parameter, also the timezone used.</source>
          <target state="translated">フォーマットまたは解析に使用するカレンダー。デフォルト値は&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; で&lt;/strong&gt;、これは&lt;strong&gt; &lt;code&gt;IntlDateFormatter::GREGORIAN&lt;/code&gt; &lt;/strong&gt;対応します。これは、&lt;a href=&quot;class.intldateformatter#intl.intldateformatter-constants.calendartypes&quot;&gt;IntlDateFormatterカレンダー定数&lt;/a&gt;またはIntlCalendarのいずれか&lt;a href=&quot;class.intlcalendar&quot;&gt;です&lt;/a&gt;。渡された&lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;オブジェクトはすべてクローンになります。&lt;a href=&quot;class.intldateformatter&quot;&gt;IntlDateFormatter&lt;/a&gt;によって変更されることはありません。これにより、使用されるカレンダーの種類（グレゴリオ暦、イスラム暦、ペルシア暦など）が決まり、 &lt;code&gt;timezone&lt;/code&gt; パラメーターに&lt;strong&gt; &lt;code&gt;null&lt;/code&gt; &lt;/strong&gt;が指定されている場合は、使用されるタイムゾーンも決まります。</target>
        </trans-unit>
        <trans-unit id="e2301af79daf9f3781f11285d3174ad37e300db4" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;intlcalendar.createinstance&quot;&gt;IntlCalendar::createInstance()&lt;/a&gt; instead.</source>
          <target state="translated">代わりに&lt;a href=&quot;intlcalendar.createinstance&quot;&gt;IntlCalendar :: createInstance（）を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="b37dde5019d3cfbc7597a108ea7babc95e554bb0" translate="yes" xml:space="preserve">
          <source>Call the callback when a status change for process ID &lt;code&gt;pid&lt;/code&gt; (or any &lt;em&gt;PID&lt;/em&gt; if &lt;code&gt;pid&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt; ) has been received(a status change happens when the process terminates or is killed, or, when &lt;code&gt;trace&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, additionally when it is stopped or continued). In other words, when the process receives a &lt;strong&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/strong&gt; , &lt;em&gt;Ev&lt;/em&gt; will fetch the outstanding exit/wait status for all changed/zombie children and call the callback.</source>
          <target state="translated">プロセスID &lt;code&gt;pid&lt;/code&gt; （または &lt;code&gt;pid&lt;/code&gt; が&lt;strong&gt; &lt;code&gt;0&lt;/code&gt; の&lt;/strong&gt;場合は任意の&lt;em&gt;PID&lt;/em&gt;）のステータス変更が受信されたときにコールバックを呼び出します（ステータス変更は、プロセスが終了または強制終了された場合、または &lt;code&gt;trace&lt;/code&gt; が&lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; の&lt;/strong&gt;場合、さらに停止または継続された場合に発生します。 ）。言い換えると、プロセスが&lt;strong&gt; &lt;code&gt;SIGCHLD&lt;/code&gt; &lt;/strong&gt;を受信すると、&lt;em&gt;Ev&lt;/em&gt;はすべての変更済み/ゾンビ子の未解決の終了/待機ステータスをフェッチし、コールバックを呼び出します。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e68a6bea9bf1e1bdd2c2dedd6f49b2800417c5a" translate="yes" xml:space="preserve">
          <source>Call the callback when a status change for process ID &lt;code&gt;pid&lt;/code&gt; (or any &lt;em&gt;PID&lt;/em&gt; if &lt;code&gt;pid&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt; ) has been received(a status change happens when the process terminates or is killed, or, when &lt;code&gt;trace&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, additionally when it is stopped or continued). In other words, when the process receives a &lt;strong&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/strong&gt; , &lt;em&gt;Ev&lt;/em&gt; will fetch the outstanding exit/wait status for all changed/zombie children and call the callback.</source>
          <target state="translated">プロセス &lt;code&gt;pid&lt;/code&gt; （または &lt;code&gt;pid&lt;/code&gt; が&lt;strong&gt; &lt;code&gt;0&lt;/code&gt; の&lt;/strong&gt;場合は任意の&lt;em&gt;PID&lt;/em&gt;）のステータス変更が受信されたときにコールバックを呼び出します（ステータス変更は、プロセスが終了または強制終了されたとき、または &lt;code&gt;trace&lt;/code&gt; が&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; の場合&lt;/strong&gt;、さらに停止または継続されたときに発生します）。言い換えると、プロセスが&lt;strong&gt; &lt;code&gt;SIGCHLD&lt;/code&gt; &lt;/strong&gt;を受信すると、&lt;em&gt;Ev&lt;/em&gt;はすべての変更された/ゾンビの子の未処理の終了/待機ステータスをフェッチし、コールバックを呼び出します。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb2315c9ee18707da1c14381c39436e1fa9c790b" translate="yes" xml:space="preserve">
          <source>Call to return a result set from a prepared statement query.</source>
          <target state="translated">準備されたステートメントクエリから結果セットを返すための呼び出し。</target>
        </trans-unit>
        <trans-unit id="3b804aa45afb3ed4ebdd50d9fa370f22fd50f207" translate="yes" xml:space="preserve">
          <source>Callable to be invoked. The callable doesn't receive any arguments and its return value is ignored.</source>
          <target state="translated">呼び出されるコールアブル。callable は引数を受け取らず、その戻り値は無視されます。</target>
        </trans-unit>
        <trans-unit id="42fb639b7313463881ed7d9bae34cc709237f03b" translate="yes" xml:space="preserve">
          <source>Callback</source>
          <target state="translated">Callback</target>
        </trans-unit>
        <trans-unit id="b824af8eb6988ef29ab1a71cca4be1aeadaa8874" translate="yes" xml:space="preserve">
          <source>Callback function called for each row of the result set. Your PHP function should accumulate the result and store it in the aggregation context.</source>
          <target state="translated">結果セットの各行に対してコールバック関数が呼び出されます。PHP の関数は、結果を蓄積して集約コンテキストに保存しなければなりません。</target>
        </trans-unit>
        <trans-unit id="5213073cc2b18043297c4d9333404b525da6bcf9" translate="yes" xml:space="preserve">
          <source>Callback function for &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; to repair the buffer.</source>
          <target state="translated">バッファを修復するための&lt;a href=&quot;function.ob-start&quot;&gt;ob_start（）の&lt;/a&gt;コールバック関数。</target>
        </trans-unit>
        <trans-unit id="d096662a2456d54c9b2752b8810cbfd91c724c56" translate="yes" xml:space="preserve">
          <source>Callback function to aggregate the &quot;stepped&quot; data from each row. Once all the rows have been processed, this function will be called and it should then take the data from the aggregation context and return the result. This callback function should return a type understood by SQLite (i.e. &lt;a href=&quot;language.types.intro&quot;&gt;scalar type&lt;/a&gt;).</source>
          <target state="translated">各行からの「ステップ」データを集約するコールバック関数。すべての行が処理されると、この関数が呼び出され、集計コンテキストからデータを取得して結果を返す必要があります。このコールバック関数は、SQLiteが理解できる型（つまり、&lt;a href=&quot;language.types.intro&quot;&gt;スカラー型&lt;/a&gt;）を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="983334d400d4482f2d75d45f2d631665e88f9ba0" translate="yes" xml:space="preserve">
          <source>Callback function to be called when the matching event occurs.</source>
          <target state="translated">マッチングイベントが発生したときに呼び出されるコールバック関数。</target>
        </trans-unit>
        <trans-unit id="f17e030ca3f3cdf0960c0aa313109b2d7926e63b" translate="yes" xml:space="preserve">
          <source>Callback function to run for each element in each array.</source>
          <target state="translated">各配列の各要素に対して実行するコールバック関数。</target>
        </trans-unit>
        <trans-unit id="e398d4b72208aaafdc3b8dcec40d1a2daac6467e" translate="yes" xml:space="preserve">
          <source>Callback to call on failed assertions</source>
          <target state="translated">失敗したアサーションのコールバック</target>
        </trans-unit>
        <trans-unit id="0fb58e60206430b52eda835054d7481c5b3c1212" translate="yes" xml:space="preserve">
          <source>Callback to invoke where the descriptor is ready for writing, or &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt; if no callback is desired.</source>
          <target state="translated">記述子が書き込み可能な状態で呼び出すコールバック。コールバックが不要な場合は&lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a5265a2844fad70a205f6b3c18dabc2ae947c45e" translate="yes" xml:space="preserve">
          <source>Callback to invoke where there is an error on the descriptor, cannot be &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt;.</source>
          <target state="translated">記述上の誤りがある場合に呼び出すコールバック、することはできません&lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8485a461f9109d6e52d6a5ffae59a72a75054945" translate="yes" xml:space="preserve">
          <source>Callback to invoke where there is data to read, or &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt; if no callback is desired.</source>
          <target state="translated">読み取るデータがある場所を呼び出すコールバック。コールバックが不要な場合は&lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b46c7345be1e8cbff4b0b8fb788d597af9bf9f8" translate="yes" xml:space="preserve">
          <source>Callback which is called when connection is closed. Should match the following prototype:</source>
          <target state="translated">接続が閉じられたときに呼び出されるコールバック。以下のプロトタイプと一致している必要があります。</target>
        </trans-unit>
        <trans-unit id="f76df01ea2ecca152b3684e0fb295fd59be8d4d3" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator &amp;rarr;</source>
          <target state="translated">CallbackFilterIterator&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="58ac6ec5eaa24c99a3bdcb46725a867792041e8b" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator (class)</source>
          <target state="translated">コールバックフィルタイテレータ</target>
        </trans-unit>
        <trans-unit id="e2249cecc3e54caca5103f70c55445aa4b285423" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator Examples</source>
          <target state="translated">CallbackFilterIterator の例</target>
        </trans-unit>
        <trans-unit id="98aa958a877b81f7dc2867c005fb11d771d86713" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::__construct</source>
          <target state="translated">CallbackFilterIterator::__construct</target>
        </trans-unit>
        <trans-unit id="0deeb83c751d0fa0e888f212c23bce0702f51296" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::__construct &amp;mdash; Create a filtered iterator from another iterator</source>
          <target state="translated">CallbackFilterIterator :: __ construct &amp;mdash;別のイテレーターからフィルターされたイテレーターを作成する</target>
        </trans-unit>
        <trans-unit id="959a759f1cbada714f1c4611f0a8e76e9053feab" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::__construct &amp;rarr;</source>
          <target state="translated">CallbackFilterIterator :: __ construct&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e428fbf7fd2f38b9779f1162de4a382e41775553" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::accept</source>
          <target state="translated">CallbackFilterIterator::accept</target>
        </trans-unit>
        <trans-unit id="83cb194fd1202a762b0a54bc490a28389031adf4" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::accept &amp;mdash; Calls the callback with the current value, the current key and the inner iterator as arguments</source>
          <target state="translated">CallbackFilterIterator :: accept &amp;mdash;現在の値、現在のキー、内部イテレータを引数としてコールバックを呼び出す</target>
        </trans-unit>
        <trans-unit id="5cdbc7f8e0fb48caca8039adc84f7776e87c22a6" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::accept &amp;rarr;</source>
          <target state="translated">CallbackFilterIterator :: accept&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="82b65bf38b7df906188061acd9e0db1c91639fdc" translate="yes" xml:space="preserve">
          <source>Callbacks / Callables</source>
          <target state="translated">コールバック/呼び出し可能ファイル</target>
        </trans-unit>
        <trans-unit id="680afe89b82421dcb038b4c6844f93c9a9003485" translate="yes" xml:space="preserve">
          <source>Callbacks / Callables &amp;rarr;</source>
          <target state="translated">コールバック/呼び出し可能オブジェクト&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b707d5e60c2dc41b46cee4a8a06ef03bd2614f62" translate="yes" xml:space="preserve">
          <source>Callbacks can be denoted by &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; type hint as of PHP 5.4. This documentation used &lt;a href=&quot;language.pseudo-types#language.types.callback&quot;&gt;callback&lt;/a&gt; type information for the same purpose.</source>
          <target state="translated">コールバックは、PHP 5.4以降、&lt;a href=&quot;language.types.callable&quot;&gt;呼び出し可能な&lt;/a&gt;型ヒントで表すことができます。このドキュメントでは、同じ目的で&lt;a href=&quot;language.pseudo-types#language.types.callback&quot;&gt;コールバック&lt;/a&gt;タイプ情報を使用しました。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
