<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="groovy">
    <body>
      <group id="groovy">
        <trans-unit id="252e30802b89e5200195c0c046bce0ff5e4a0f8c" translate="yes" xml:space="preserve">
          <source>Perform the query. Must set statement field so that the main (&lt;a href=&quot;#execute()&quot;&gt;execute()&lt;/a&gt;) method can clean up. This is the method that encloses the variant part of the code.</source>
          <target state="translated">クエリを実行します。main（&lt;a href=&quot;#execute()&quot;&gt;execute（）&lt;/a&gt;）メソッドがクリーンアップできるようにステートメントフィールドを設定する必要があります。これは、コードのバリアント部分を囲むメソッドです。</target>
        </trans-unit>
        <trans-unit id="37f762ad0e8aaa7aa923e3788f36d7a21cec9f30" translate="yes" xml:space="preserve">
          <source>Performance-wise, it would be better to reimplement the taglib, but this makes it easier to reuse existing code.</source>
          <target state="translated">パフォーマンス的には、taglibを再実装した方が良いでしょうが、既存のコードの再利用が容易になります。</target>
        </trans-unit>
        <trans-unit id="92ee2a591e763616bbb3c0785de1f56741eafd5a" translate="yes" xml:space="preserve">
          <source>Performs a division modulus operation.</source>
          <target state="translated">除算モジュラス演算を実行します。</target>
        </trans-unit>
        <trans-unit id="8a2a52e2bbf57d91eba4ed93c0b956655f3b3bee" translate="yes" xml:space="preserve">
          <source>Performs a division modulus operation. Called by the '%' operator.</source>
          <target state="translated">除算モジュラス演算を実行します。演算子 '%' によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="de240238b4ad3892cfab002cc31ac26052ee5cf3" translate="yes" xml:space="preserve">
          <source>Performs a stored procedure call with the given embedded parameters.</source>
          <target state="translated">指定された埋め込みパラメータを使用してストアド・プロシージャの呼び出しを実行します。</target>
        </trans-unit>
        <trans-unit id="182e71c87d65f1a78e68cbe6307954ac5fd35954" translate="yes" xml:space="preserve">
          <source>Performs a stored procedure call with the given parameters, calling the closure once with all result objects, and also returning a list of lists with the rows of the ResultSet(s).</source>
          <target state="translated">与えられたパラメータでストアドプロシージャを呼び出し、すべての結果オブジェクトでクロージャを一度だけ呼び出し、結果セット(複数可)の行を含むリストのリストを返します。</target>
        </trans-unit>
        <trans-unit id="e9893b3a435479559bc724dad8f8086f46df365b" translate="yes" xml:space="preserve">
          <source>Performs a stored procedure call with the given parameters, calling the closure once with all result objects, and also returning the rows of the ResultSet(s) (if processResultSets is set to Sql.FIRST_RESULT_SET, Sql.ALL_RESULT_SETS)</source>
          <target state="translated">与えられたパラメータでストアド・プロシージャを呼び出し、すべての結果オブジェクトで一度クロージャを呼び出し、結果セットの行を返します(processResultSetsがSql.FIRST_RESULT_SET,Sql.ALL_RESULT_SETSに設定されている場合)。</target>
        </trans-unit>
        <trans-unit id="edd0cb4ede8fe3d8315374152fea18e9744a7388" translate="yes" xml:space="preserve">
          <source>Performs a stored procedure call with the given parameters, calling the closure once with all result objects, and also returning the rows of the ResultSet.</source>
          <target state="translated">与えられたパラメータでストアドプロシージャの呼び出しを実行し、すべての結果オブジェクトでクロージャを一度だけ呼び出し、ResultSetの行を返します。</target>
        </trans-unit>
        <trans-unit id="43bf9ed346d6a78e36e2796a3a803122851647a0" translate="yes" xml:space="preserve">
          <source>Performs a stored procedure call with the given parameters, calling the closure once with all result objects.</source>
          <target state="translated">与えられたパラメータを使用してストアド・プロシージャを呼び出し、すべての結果オブジェクトでクロージャを一度だけ呼び出して実行します。</target>
        </trans-unit>
        <trans-unit id="436134d3daf449c1bdc5996ba21bd3f7ebe005e0" translate="yes" xml:space="preserve">
          <source>Performs a stored procedure call with the given parameters.</source>
          <target state="translated">指定されたパラメータを使用してストアド・プロシージャの呼び出しを実行します。</target>
        </trans-unit>
        <trans-unit id="3030818e21e3c378ea91e412e1ea8dcf18167fad" translate="yes" xml:space="preserve">
          <source>Performs a stored procedure call with the given parameters. The closure is called once with all the out parameters.</source>
          <target state="translated">与えられたパラメータでストアドプロシージャの呼び出しを実行します。クロージャは、すべての out パラメータを使用して一度だけ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0f6c37108f496b972beecc7d6691108d47a244c8" translate="yes" xml:space="preserve">
          <source>Performs a stored procedure call.</source>
          <target state="translated">ストアド・プロシージャの呼び出しを実行します。</target>
        </trans-unit>
        <trans-unit id="ab542755a4073d745bd6cea7841617323593682e" translate="yes" xml:space="preserve">
          <source>Performs consistency and validity checks that the grammar can't check for, and resolves classes</source>
          <target state="translated">文法ではチェックできない整合性や妥当性のチェックを行い、クラスを解決する</target>
        </trans-unit>
        <trans-unit id="c2099e303a05b4c742871b8b96b17f02c390471a" translate="yes" xml:space="preserve">
          <source>Performs the String source to &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/List.html&quot;&gt;List&lt;/a&gt; of &lt;a href=&quot;../astnode&quot;&gt;ASTNode&lt;/a&gt;.</source>
          <target state="translated">実行する際に、文字列のソース&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/List.html&quot;&gt;リスト&lt;/a&gt;の&lt;a href=&quot;../astnode&quot;&gt;ASTノード&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1e9c3e6f45f56bdd1e71856d92e8d1a5b5b2c919" translate="yes" xml:space="preserve">
          <source>Performs the String source to &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/List.html&quot;&gt;List&lt;/a&gt; of statement &lt;a href=&quot;../astnode&quot;&gt;ASTNode&lt;/a&gt;.</source>
          <target state="translated">ステートメント&lt;a href=&quot;../astnode&quot;&gt;ASTNodeの&lt;/a&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/List.html&quot;&gt;リスト&lt;/a&gt;への文字列ソースを実行します。</target>
        </trans-unit>
        <trans-unit id="9b4fb7e3e4434f2b45083c93b63703286c59e09e" translate="yes" xml:space="preserve">
          <source>Performs the closure (containing batch operations specific to an associated prepared statement) within a batch using a given batch size.</source>
          <target state="translated">指定されたバッチ サイズを使用して、バッチ内のクロージャー(関連する準備された文に固有のバッチ操作を含む)を実行します。</target>
        </trans-unit>
        <trans-unit id="1d1a50c976043cc1fa5bae3461437196c5d736f5" translate="yes" xml:space="preserve">
          <source>Performs the closure (containing batch operations specific to an associated prepared statement) within a batch.</source>
          <target state="translated">バッチ内のクロージャー(関連する準備されたステートメントに固有のバッチ操作を含む)を実行します。</target>
        </trans-unit>
        <trans-unit id="320777cca2372bcce7904f9ff31a8d530681321b" translate="yes" xml:space="preserve">
          <source>Performs the closure (containing batch operations specific to an associated prepared statement) within a batch. Uses a batch size of zero, i.e. no automatic partitioning of batches.</source>
          <target state="translated">バッチ内でクロージャ(関連する準備されたステートメントに固有のバッチ操作を含む)を実行します。バッチサイズはゼロを使用します。つまり、バッチの自動分割は行いません。</target>
        </trans-unit>
        <trans-unit id="1b35ebd4d6309080a52661b697b6c70105854b79" translate="yes" xml:space="preserve">
          <source>Performs the closure (containing batch operations) within a batch using a given batch size.</source>
          <target state="translated">指定されたバッチサイズを使用して、バッチ内のクロージャー(バッチ操作を含む)を実行します。</target>
        </trans-unit>
        <trans-unit id="a0c750ac748ca9f515c2fe96acaba703d41c8253" translate="yes" xml:space="preserve">
          <source>Performs the closure (containing batch operations) within a batch.</source>
          <target state="translated">バッチ内のクロージャー(バッチ操作を含む)を実行します。</target>
        </trans-unit>
        <trans-unit id="2176d19130c660f70e9ef41aa9d45df7b336aaeb" translate="yes" xml:space="preserve">
          <source>Performs the closure (containing batch operations) within a batch. For example:</source>
          <target state="translated">バッチ内のクロージャー(バッチ操作を含む)を実行します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="9dfc32c641a4d407450ebea031747f96bfecac2d" translate="yes" xml:space="preserve">
          <source>Performs the closure (containing batch operations) within a batch. Uses a batch size of zero, i.e. no automatic partitioning of batches.</source>
          <target state="translated">バッチ内のクロージャー(バッチ操作を含む)を実行します。バッチサイズはゼロを使用します。</target>
        </trans-unit>
        <trans-unit id="f7914c5803520245eab3ed6ca803e7173e576e06" translate="yes" xml:space="preserve">
          <source>Performs the closure within a transaction using a cached connection.</source>
          <target state="translated">キャッシュされた接続を使用して、トランザクション内のクロージャーを実行します。</target>
        </trans-unit>
        <trans-unit id="d4fa65f908a4da2b4cde764da07668db40c73091" translate="yes" xml:space="preserve">
          <source>Performs the closure within a transaction using a cached connection. If the closure takes a single argument, it will be called with the connection, otherwise it will be called with no arguments.</source>
          <target state="translated">キャッシュされた接続を使用して、トランザクション内でクロージャを実行します。クロージャが単一の引数を取る場合は、接続を使用して呼び出され、そうでない場合は引数なしで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9ab0fc30e79d7d8d5f5835dfb9fd5ae2f77a11bf" translate="yes" xml:space="preserve">
          <source>Performs the conversion from script to TreeNode.</source>
          <target state="translated">スクリプトからTreeNodeへの変換を行います。</target>
        </trans-unit>
        <trans-unit id="05011fcbdadf8da59d3ec8f13a6d4cc5561623bc" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return a &quot;page&quot; of rows from the result set.</source>
          <target state="translated">与えられたSQLクエリを実行し、結果セットから行の &quot;ページ &quot;を返します。</target>
        </trans-unit>
        <trans-unit id="668767188f3e687f8b61afb0dc58d3ac8748217c" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return a &quot;page&quot; of rows from the result set. A page is defined as starting at a 1-based offset, and containing a maximum number of rows.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットから行の「ページ」を返します。ページは、1ベースのオフセットから始まり、最大数の行を含むものとして定義されます。</target>
        </trans-unit>
        <trans-unit id="2c857b7dd8307dd00472fe464c1c5e9e72f02f9f" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return a &quot;page&quot; of rows from the result set. A page is defined as starting at a 1-based offset, and containing a maximum number of rows. In addition, the &lt;code&gt;metaClosure&lt;/code&gt; will be called once passing in the &lt;code&gt;ResultSetMetaData&lt;/code&gt; as argument.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットから行の「ページ」を返します。ページは、1ベースのオフセットで始まり、最大行数を含むものとして定義されます。さらに、 &lt;code&gt;metaClosure&lt;/code&gt; は、 &lt;code&gt;ResultSetMetaData&lt;/code&gt; を引数として渡すと呼び出されます。</target>
        </trans-unit>
        <trans-unit id="63be29ac44d9a8881e8db62a103f61c1c68722b6" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return a &quot;page&quot; of rows from the result set. A page is defined as starting at a 1-based offset, and containing a maximum number of rows. In addition, the &lt;code&gt;metaClosure&lt;/code&gt; will be called once passing in the &lt;code&gt;ResultSetMetaData&lt;/code&gt; as argument. The query may contain GString expressions.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットから行の「ページ」を返します。ページは、1ベースのオフセットで始まり、最大行数を含むものとして定義されます。さらに、 &lt;code&gt;metaClosure&lt;/code&gt; は、 &lt;code&gt;ResultSetMetaData&lt;/code&gt; を引数として渡すと呼び出されます。クエリにはGString式が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="33d24d11530f34e0cb97a9f2215fc678e5c2df28" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return a &quot;page&quot; of rows from the result set. A page is defined as starting at a 1-based offset, and containing a maximum number of rows. In addition, the &lt;code&gt;metaClosure&lt;/code&gt; will be called once passing in the &lt;code&gt;ResultSetMetaData&lt;/code&gt; as argument. The query may contain placeholder question marks which match the given list of parameters.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットから行の「ページ」を返します。ページは、1ベースのオフセットで始まり、最大行数を含むものとして定義されます。さらに、 &lt;code&gt;metaClosure&lt;/code&gt; は、 &lt;code&gt;ResultSetMetaData&lt;/code&gt; を引数として渡すと呼び出されます。クエリには、指定されたパラメータのリストに一致するプレースホルダーの疑問符が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="997e6953848b253f2d0b9221b224b9bf3f9657c3" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return a &quot;page&quot; of rows from the result set. A page is defined as starting at a 1-based offset, and containing a maximum number of rows. The query may contain GString expressions.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットから行の「ページ」を返します。ページは、1ベースのオフセットから始まり、最大数の行を含むものとして定義されます。クエリは、GString 式を含むことができます。</target>
        </trans-unit>
        <trans-unit id="c734146e2eb7f63e34f8b25cceb1d443e72446d7" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return a &quot;page&quot; of rows from the result set. A page is defined as starting at a 1-based offset, and containing a maximum number of rows. The query may contain placeholder question marks which match the given list of parameters.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットから行の「ページ」を返します。ページとは、1ベースのオフセットから始まり、最大数の行を含むものとして定義されます。クエリには、指定されたパラメータのリストにマッチするプレースホルダクエスチョンマークを含めることができます。</target>
        </trans-unit>
        <trans-unit id="7ac91884f09762f3e3b73a2c47c10b1f2781d983" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return the first row of the result set.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットの最初の行を返します。</target>
        </trans-unit>
        <trans-unit id="5fe8ed30cf08ca116ca1a7ef6126062ed9b37475" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return the first row of the result set. The query may contain GString expressions.</source>
          <target state="translated">指定された SQL クエリを実行し、結果セットの最初の行を返します。クエリには GString 式が含まれている場合があります。</target>
        </trans-unit>
        <trans-unit id="65622559ef6d284e70f60fedb42fe73360eb55db" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return the first row of the result set. The query may contain placeholder question marks which match the given list of parameters.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットの最初の行を返します。クエリには、指定されたパラメータのリストにマッチするプレースホルダクエスチョンマークが含まれている場合があります。</target>
        </trans-unit>
        <trans-unit id="f025092f33d8eba579e52afa6567f309d9920489" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return the rows of the result set.</source>
          <target state="translated">与えられたSQLクエリを実行し、結果セットの行を返します。</target>
        </trans-unit>
        <trans-unit id="8fc3cf370c7d0ce61a3b362530934f7e6f9a6e9e" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return the rows of the result set. In addition, the &lt;code&gt;metaClosure&lt;/code&gt; will be called once passing in the &lt;code&gt;ResultSetMetaData&lt;/code&gt; as argument.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットの行を返します。さらに、 &lt;code&gt;metaClosure&lt;/code&gt; は、 &lt;code&gt;ResultSetMetaData&lt;/code&gt; を引数として渡すと呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5eba604c1f978fc12f242633b971da331af94838" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return the rows of the result set. In addition, the &lt;code&gt;metaClosure&lt;/code&gt; will be called once passing in the &lt;code&gt;ResultSetMetaData&lt;/code&gt; as argument. The query may contain GString expressions.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットの行を返します。さらに、 &lt;code&gt;metaClosure&lt;/code&gt; は、 &lt;code&gt;ResultSetMetaData&lt;/code&gt; を引数として渡すと呼び出されます。クエリにはGString式が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="65c351a1d09539cb0bb27b302a62891966581470" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return the rows of the result set. In addition, the &lt;code&gt;metaClosure&lt;/code&gt; will be called once passing in the &lt;code&gt;ResultSetMetaData&lt;/code&gt; as argument. The query may contain placeholder question marks which match the given list of parameters.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットの行を返します。さらに、 &lt;code&gt;metaClosure&lt;/code&gt; は、 &lt;code&gt;ResultSetMetaData&lt;/code&gt; を引数として渡すと呼び出されます。クエリには、指定されたパラメータのリストに一致するプレースホルダーの疑問符が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="2d467ff7527c2dc7968c098ca984e1134e86ccea" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return the rows of the result set. The query may contain GString expressions.</source>
          <target state="translated">指定された SQL クエリを実行し、結果セットの行を返します。クエリには GString 式が含まれている場合があります。</target>
        </trans-unit>
        <trans-unit id="08bcda1db7e9ccfff2a0908f6558f5d19882b28d" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query and return the rows of the result set. The query may contain placeholder question marks which match the given list of parameters.</source>
          <target state="translated">指定されたSQLクエリを実行し、結果セットの行を返します。クエリには、指定されたパラメータのリストにマッチするプレースホルダクエスチョンマークが含まれている場合があります。</target>
        </trans-unit>
        <trans-unit id="74afd0e8221391035889202b13be166c3a184c77" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given &lt;code&gt;closure&lt;/code&gt; with each row of the result set starting at the provided &lt;code&gt;offset&lt;/code&gt;, and including up to &lt;code&gt;maxRows&lt;/code&gt; number of rows.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; で開始し、最大 &lt;code&gt;maxRows&lt;/code&gt; の行数を含む結果セットの各行を使用して、指定された &lt;code&gt;closure&lt;/code&gt; を呼び出す指定されたSQLクエリを実行します。</target>
        </trans-unit>
        <trans-unit id="35cb63ac7b97b87ba22dbac6ac5b33aa6a8277dc" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given &lt;code&gt;closure&lt;/code&gt; with each row of the result set starting at the provided &lt;code&gt;offset&lt;/code&gt;, and including up to &lt;code&gt;maxRows&lt;/code&gt; number of rows. The row will be a &lt;code&gt;GroovyResultSet&lt;/code&gt; which is a &lt;code&gt;ResultSet&lt;/code&gt; that supports accessing the fields using property style notation and ordinal index values.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; で開始し、最大 &lt;code&gt;maxRows&lt;/code&gt; の行数を含む結果セットの各行を使用して、指定された &lt;code&gt;closure&lt;/code&gt; を呼び出す指定されたSQLクエリを実行します。行は &lt;code&gt;GroovyResultSet&lt;/code&gt; になります。これは、プロパティスタイル表記と序数インデックス値を使用したフィールドへのアクセスをサポートする &lt;code&gt;ResultSet&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bf416f300b3d59c21ef4ca2717779644a0167f60" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given &lt;code&gt;closure&lt;/code&gt; with each row of the result set starting at the provided &lt;code&gt;offset&lt;/code&gt;, and including up to &lt;code&gt;maxRows&lt;/code&gt; number of rows. The row will be a &lt;code&gt;GroovyResultSet&lt;/code&gt; which is a &lt;code&gt;ResultSet&lt;/code&gt; that supports accessing the fields using property style notation and ordinal index values. In addition, the &lt;code&gt;metaClosure&lt;/code&gt; will be called once passing in the &lt;code&gt;ResultSetMetaData&lt;/code&gt; as argument. The query may contain GString expressions.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; で開始し、最大 &lt;code&gt;maxRows&lt;/code&gt; の行数を含む結果セットの各行を使用して、指定された &lt;code&gt;closure&lt;/code&gt; を呼び出す指定されたSQLクエリを実行します。行は &lt;code&gt;GroovyResultSet&lt;/code&gt; になります。これは、プロパティスタイル表記と序数インデックス値を使用したフィールドへのアクセスをサポートする &lt;code&gt;ResultSet&lt;/code&gt; です。さらに、 &lt;code&gt;metaClosure&lt;/code&gt; は、 &lt;code&gt;ResultSetMetaData&lt;/code&gt; を引数として渡すと呼び出されます。クエリにはGString式が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="7b293588f2557ff643f6ce8de389fdf8caa3b64a" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given &lt;code&gt;closure&lt;/code&gt; with each row of the result set starting at the provided &lt;code&gt;offset&lt;/code&gt;, and including up to &lt;code&gt;maxRows&lt;/code&gt; number of rows. The row will be a &lt;code&gt;GroovyResultSet&lt;/code&gt; which is a &lt;code&gt;ResultSet&lt;/code&gt; that supports accessing the fields using property style notation and ordinal index values. The query may contain GString expressions.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; で開始し、最大 &lt;code&gt;maxRows&lt;/code&gt; の行数を含む結果セットの各行を使用して、指定された &lt;code&gt;closure&lt;/code&gt; を呼び出す指定されたSQLクエリを実行します。行は &lt;code&gt;GroovyResultSet&lt;/code&gt; になります。これは、プロパティスタイル表記と序数インデックス値を使用したフィールドへのアクセスをサポートする &lt;code&gt;ResultSet&lt;/code&gt; です。クエリにはGString式が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="fecb68252b53e860d8e9252c02638437bb33dffa" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given &lt;code&gt;closure&lt;/code&gt; with each row of the result set starting at the provided &lt;code&gt;offset&lt;/code&gt;, and including up to &lt;code&gt;maxRows&lt;/code&gt; number of rows. The row will be a &lt;code&gt;GroovyResultSet&lt;/code&gt; which is a &lt;code&gt;ResultSet&lt;/code&gt; that supports accessing the fields using property style notation and ordinal index values. The query may contain placeholder question marks which match the given list of parameters.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; で開始し、最大 &lt;code&gt;maxRows&lt;/code&gt; の行数を含む結果セットの各行を使用して、指定された &lt;code&gt;closure&lt;/code&gt; を呼び出す指定されたSQLクエリを実行します。行は &lt;code&gt;GroovyResultSet&lt;/code&gt; になります。これは、プロパティスタイル表記と序数インデックス値を使用したフィールドへのアクセスをサポートする &lt;code&gt;ResultSet&lt;/code&gt; です。クエリには、指定されたパラメータのリストに一致するプレースホルダーの疑問符が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="bb6c77b7f98f45011b86eb486b914511f296b319" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given &lt;code&gt;rowClosure&lt;/code&gt; with each row of the result set starting at the provided &lt;code&gt;offset&lt;/code&gt;, and including up to &lt;code&gt;maxRows&lt;/code&gt; number of rows.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; で開始し、最大 &lt;code&gt;maxRows&lt;/code&gt; の行数を含む結果セットの各行を &lt;code&gt;rowClosure&lt;/code&gt; して、指定されたrowClosureを呼び出す指定されたSQLクエリを実行します。</target>
        </trans-unit>
        <trans-unit id="c2b6be27b43016033571b466e1c940f1b2578ba8" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given &lt;code&gt;rowClosure&lt;/code&gt; with each row of the result set starting at the provided &lt;code&gt;offset&lt;/code&gt;, and including up to &lt;code&gt;maxRows&lt;/code&gt; number of rows. The row will be a &lt;code&gt;GroovyResultSet&lt;/code&gt; which is a &lt;code&gt;ResultSet&lt;/code&gt; that supports accessing the fields using property style notation and ordinal index values.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; で開始し、最大 &lt;code&gt;maxRows&lt;/code&gt; の行数を含む結果セットの各行を &lt;code&gt;rowClosure&lt;/code&gt; して、指定されたrowClosureを呼び出す指定されたSQLクエリを実行します。行は &lt;code&gt;GroovyResultSet&lt;/code&gt; になります。これは、プロパティスタイル表記と序数インデックス値を使用したフィールドへのアクセスをサポートする &lt;code&gt;ResultSet&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2c5ef6364c912abfe9fab1c70f4812c98323bc9c" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given &lt;code&gt;rowClosure&lt;/code&gt; with each row of the result set.</source>
          <target state="translated">結果セットの各行で指定された &lt;code&gt;rowClosure&lt;/code&gt; を呼び出して、指定されたSQLクエリを実行します。</target>
        </trans-unit>
        <trans-unit id="b41b9eea1f039fab3997756be6806948028baa2f" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given &lt;code&gt;rowClosure&lt;/code&gt; with each row of the result set. The row will be a &lt;code&gt;GroovyResultSet&lt;/code&gt; which is a &lt;code&gt;ResultSet&lt;/code&gt; that supports accessing the fields using property style notation and ordinal index values. In addition, the &lt;code&gt;metaClosure&lt;/code&gt; will be called once passing in the &lt;code&gt;ResultSetMetaData&lt;/code&gt; as argument.</source>
          <target state="translated">結果セットの各行で指定された &lt;code&gt;rowClosure&lt;/code&gt; を呼び出して、指定されたSQLクエリを実行します。行は &lt;code&gt;GroovyResultSet&lt;/code&gt; になります。これは、プロパティスタイル表記と序数インデックス値を使用したフィールドへのアクセスをサポートする &lt;code&gt;ResultSet&lt;/code&gt; です。さらに、 &lt;code&gt;metaClosure&lt;/code&gt; は、 &lt;code&gt;ResultSetMetaData&lt;/code&gt; を引数として渡すと呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8af58143353937438c5f3902b47ef82c9bb6a67e" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given Closure with each row of the result set.</source>
          <target state="translated">結果セットの各行で、指定されたクロージャーを呼び出す指定されたSQLクエリを実行します。</target>
        </trans-unit>
        <trans-unit id="cb325f56587cfa42e7b473a1f65c20c05f12ea48" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given Closure with each row of the result set. The row will be a &lt;code&gt;GroovyResultSet&lt;/code&gt; which is a &lt;code&gt;ResultSet&lt;/code&gt; that supports accessing the fields using property style notation and ordinal index values.</source>
          <target state="translated">結果セットの各行で指定されたクロージャーを呼び出す指定されたSQLクエリを実行します。行は &lt;code&gt;GroovyResultSet&lt;/code&gt; になります。これは、プロパティスタイル表記と序数インデックス値を使用したフィールドへのアクセスをサポートする &lt;code&gt;ResultSet&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6008c1d5b1076be005be3861cc395bc8e9d34c4c" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given Closure with each row of the result set. The row will be a &lt;code&gt;GroovyResultSet&lt;/code&gt; which is a &lt;code&gt;ResultSet&lt;/code&gt; that supports accessing the fields using property style notation and ordinal index values. In addition, the &lt;code&gt;metaClosure&lt;/code&gt; will be called once passing in the &lt;code&gt;ResultSetMetaData&lt;/code&gt; as argument. The query may contain placeholder question marks which match the given list of parameters.</source>
          <target state="translated">結果セットの各行で指定されたクロージャーを呼び出す指定されたSQLクエリを実行します。行は &lt;code&gt;GroovyResultSet&lt;/code&gt; になります。これは、プロパティスタイル表記と序数インデックス値を使用したフィールドへのアクセスをサポートする &lt;code&gt;ResultSet&lt;/code&gt; です。さらに、 &lt;code&gt;metaClosure&lt;/code&gt; は、 &lt;code&gt;ResultSetMetaData&lt;/code&gt; を引数として渡すと呼び出されます。クエリには、指定されたパラメータのリストに一致するプレースホルダーの疑問符が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="f73eedcbd8c616f1d896b9913301f2c014569873" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given Closure with each row of the result set. The row will be a &lt;code&gt;GroovyResultSet&lt;/code&gt; which is a &lt;code&gt;ResultSet&lt;/code&gt; that supports accessing the fields using property style notation and ordinal index values. The query may contain GString expressions.</source>
          <target state="translated">結果セットの各行で指定されたクロージャーを呼び出す指定されたSQLクエリを実行します。行は &lt;code&gt;GroovyResultSet&lt;/code&gt; になります。これは、プロパティスタイル表記と序数インデックス値を使用したフィールドへのアクセスをサポートする &lt;code&gt;ResultSet&lt;/code&gt; です。クエリにはGString式が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="450be91aa3097b75877d3ae926f26a1296359942" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query calling the given Closure with each row of the result set. The row will be a &lt;code&gt;GroovyResultSet&lt;/code&gt; which is a &lt;code&gt;ResultSet&lt;/code&gt; that supports accessing the fields using property style notation and ordinal index values. The query may contain placeholder question marks which match the given list of parameters.</source>
          <target state="translated">結果セットの各行で指定されたクロージャーを呼び出す指定されたSQLクエリを実行します。行は &lt;code&gt;GroovyResultSet&lt;/code&gt; になります。これは、プロパティスタイル表記と序数インデックス値を使用したフィールドへのアクセスをサポートする &lt;code&gt;ResultSet&lt;/code&gt; です。クエリには、指定されたパラメータのリストに一致するプレースホルダーの疑問符が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="97d63be361c6eedc3817b1f0968405114e81c9cf" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query, which should return a single &lt;code&gt;ResultSet&lt;/code&gt; object.</source>
          <target state="translated">指定されたSQLクエリを実行します。これにより、単一の &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="2e4f4ca68a4a68b6333e8f8158f523ceb508fcee" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query, which should return a single &lt;code&gt;ResultSet&lt;/code&gt; object. The given closure is called with the &lt;code&gt;ResultSet&lt;/code&gt; as its argument.</source>
          <target state="translated">指定されたSQLクエリを実行します。これにより、単一の &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトが返されます。指定されたクロージャは、 &lt;code&gt;ResultSet&lt;/code&gt; を引数として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2ef73aa2300e3a5246ace7e0f8a567d2ac7a1b7a" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query, which should return a single &lt;code&gt;ResultSet&lt;/code&gt; object. The given closure is called with the &lt;code&gt;ResultSet&lt;/code&gt; as its argument. The query may contain GString expressions.</source>
          <target state="translated">指定されたSQLクエリを実行します。これにより、単一の &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトが返されます。指定されたクロージャは、 &lt;code&gt;ResultSet&lt;/code&gt; を引数として呼び出されます。クエリにはGString式が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="088827e1b3d86d93a1a2be5c8c636cd22a61ef20" translate="yes" xml:space="preserve">
          <source>Performs the given SQL query, which should return a single &lt;code&gt;ResultSet&lt;/code&gt; object. The given closure is called with the &lt;code&gt;ResultSet&lt;/code&gt; as its argument. The query may contain placeholder question marks which match the given list of parameters.</source>
          <target state="translated">指定されたSQLクエリを実行します。これにより、単一の &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトが返されます。指定されたクロージャは、 &lt;code&gt;ResultSet&lt;/code&gt; を引数として呼び出されます。クエリには、指定されたパラメータのリストに一致するプレースホルダーの疑問符が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="99a921b2682df37dad7b2775d0cc742576578a32" translate="yes" xml:space="preserve">
          <source>Performs the same function as the version of inject that takes an initial value, but uses the head of the Collection as the initial value, and iterates over the tail.</source>
          <target state="translated">初期値を取りますが、コレクションの先頭を初期値として使用し、末尾を反復処理するバージョンの inject と同じ関数を実行します。</target>
        </trans-unit>
        <trans-unit id="c5266ad9fb9d27751d5c0ca6a02de4138b286d17" translate="yes" xml:space="preserve">
          <source>Performs various checks on code inside methods and constructors including checking for valid field, variables names etc. that would otherwise lead to invalid code.</source>
          <target state="translated">メソッドやコンストラクタ内のコードに対して、無効なコードにつながる有効なフィールドや変数名などをチェックするなど、さまざまなチェックを実行します。</target>
        </trans-unit>
        <trans-unit id="5fbf18ce192e85fc0a3297bb2789831dfce20cde" translate="yes" xml:space="preserve">
          <source>Perhaps some explanation is required here. The methods and properties of Student and Worker are added to CollegeStudent. Worker is added last, so for overlapping methods, its methods will be used, e.g. when calling &lt;code&gt;schedule&lt;/code&gt;, it will be the schedule property (getSchedule method) from Worker that is used. The schedule property from Student will be shadowed but the &lt;code&gt;mixedIn&lt;/code&gt; notation allows us to get to that too if we need as the last two lines show.</source>
          <target state="translated">おそらくここでいくつかの説明が必要です。 StudentとWorkerのメソッドとプロパティがCollegeStudentに追加されました。ワーカーは最後に追加されるため、重複するメソッドの場合、そのメソッドが使用されます。たとえば、 &lt;code&gt;schedule&lt;/code&gt; を呼び出す場合、使用されるのはWorkerのscheduleプロパティ（getScheduleメソッド）になります。 Studentのscheduleプロパティはシャドウされますが、 &lt;code&gt;mixedIn&lt;/code&gt; 表記を使用すると、最後の2行に示すように、必要に応じてそれを取得することもできます。</target>
        </trans-unit>
        <trans-unit id="bdf2276d09543039ec8d20a8f7f659efc5c798cd" translate="yes" xml:space="preserve">
          <source>Period.between</source>
          <target state="translated">Period.between</target>
        </trans-unit>
        <trans-unit id="c66d7b4fcd77138d28da862f06935d2eaeec4090" translate="yes" xml:space="preserve">
          <source>Permission required to explicitly specify a codebase for a groovy script whose codebase cannot be determined. Typically this permission is only required by clients that want to associate a code source with a script which is a String or an InputStream.</source>
          <target state="translated">コードベースが決定できない groovy スクリプトのコードベースを明示的に指定するために必要なパーミッションです。通常、このパーミッションが必要とされるのは、コードソースを String や InputStream のスクリプトに関連付けたいクライアントのみです。</target>
        </trans-unit>
        <trans-unit id="8c41ae88467fe5bbad09fcd488662b25c3ec5333" translate="yes" xml:space="preserve">
          <source>Person</source>
          <target state="translated">Person</target>
        </trans-unit>
        <trans-unit id="6f785b4329d662bc20d7816d1fb3fe44b26fc2ec" translate="yes" xml:space="preserve">
          <source>Pete Gieser</source>
          <target state="translated">ピート・ギーザー</target>
        </trans-unit>
        <trans-unit id="72aaf506625b2be4eb906a4b374133f718b6ac86" translate="yes" xml:space="preserve">
          <source>PhaseOperation</source>
          <target state="translated">PhaseOperation</target>
        </trans-unit>
        <trans-unit id="94ae21a6f9c14530ea3aae31e661c9f14d3fc17e" translate="yes" xml:space="preserve">
          <source>Phil Steitz</source>
          <target state="translated">フィル・スタイツ</target>
        </trans-unit>
        <trans-unit id="b2d856db44aee5b92610913ee5e48f7a3d75ae2e" translate="yes" xml:space="preserve">
          <source>Picocli equivalent</source>
          <target state="translated">ピコクリ相当</target>
        </trans-unit>
        <trans-unit id="9995e2944cd63a0278a49a2fef59cbdd9e1b01a1" translate="yes" xml:space="preserve">
          <source>Pipe an InputStream into an OutputStream for efficient stream copying.</source>
          <target state="translated">効率的なストリームコピーのために、InputStreamをOutputStreamにパイプします。</target>
        </trans-unit>
        <trans-unit id="a084a8f54cf3877f698b19835341864895e80036" translate="yes" xml:space="preserve">
          <source>Placeholder for an empty expression. Empty expressions are used in closures lists like (;). During class generation empty expressions should be ignored or replaced with a null value.</source>
          <target state="translated">空の式のプレースホルダ。空の式は、(;)のようなクロージャリストで使用されます。クラス生成時には、空の式は無視されるか、NULL 値で置き換えられなければなりません。</target>
        </trans-unit>
        <trans-unit id="a558bf32dbf8a7c030eba7ac6ca792282071fcf2" translate="yes" xml:space="preserve">
          <source>Plain ordinary object call site meta class - cached method - cached</source>
          <target state="translated">平凡な普通のオブジェクト呼び出しサイトのメタクラス-キャッシュされたメソッド-キャッシュされた</target>
        </trans-unit>
        <trans-unit id="2715648177402d10c50a8bf8396bca6c471821be" translate="yes" xml:space="preserve">
          <source>Pops a binary expression from the binary expression stack.</source>
          <target state="translated">バイナリ式スタックからバイナリ式をポップします。</target>
        </trans-unit>
        <trans-unit id="d3c9ae623b51dcf90e97a7383bce7699bd9f53c1" translate="yes" xml:space="preserve">
          <source>Pops a class from the enclosing classes stack.</source>
          <target state="translated">囲まれたクラススタックからクラスをポップします。</target>
        </trans-unit>
        <trans-unit id="fc989e1a1229026ab29a4379993fdcf8e05d96f8" translate="yes" xml:space="preserve">
          <source>Pops a closure expression from the closure expression stack.</source>
          <target state="translated">クロージャ式スタックからクロージャ式をポップします。</target>
        </trans-unit>
        <trans-unit id="3e4e33157b3543bc1c6e643fcb61e6204bd3a665" translate="yes" xml:space="preserve">
          <source>Pops a method call from the enclosing method call stack.</source>
          <target state="translated">囲まれたメソッドコールスタックからメソッドコールをポップします。</target>
        </trans-unit>
        <trans-unit id="64add6642007d00e773d388033c4b49bbbb6ea4d" translate="yes" xml:space="preserve">
          <source>Pops a method from the enclosing methods stack.</source>
          <target state="translated">囲まれたメソッドスタックからメソッドをポップします。</target>
        </trans-unit>
        <trans-unit id="9cdc57283c97edb969a57257d65bd6d0dbf2b342" translate="yes" xml:space="preserve">
          <source>Pops a switch statement from the enclosing switch statements stack.</source>
          <target state="translated">囲まれたスイッチステートメントスタックからスイッチステートメントをポップします。</target>
        </trans-unit>
        <trans-unit id="42ff40902fe4e4be9a677b5a34ff566094b81f7f" translate="yes" xml:space="preserve">
          <source>Possible syntax:</source>
          <target state="translated">可能な構文です。</target>
        </trans-unit>
        <trans-unit id="5b80f5121d2d76047c52efdad780a168a87b4cd1" translate="yes" xml:space="preserve">
          <source>PostCompletionFactory</source>
          <target state="translated">PostCompletionFactory</target>
        </trans-unit>
        <trans-unit id="bb5824a56b9a528b9a8b7de20000e054087c012c" translate="yes" xml:space="preserve">
          <source>Power of a BigDecimal to an integer certain exponent.</source>
          <target state="translated">BigDecimalの累乗を整数のある指数に変換します。</target>
        </trans-unit>
        <trans-unit id="dba3f270cca75cefdc77d6f9817d98255b316ac1" translate="yes" xml:space="preserve">
          <source>Power of a BigDecimal to an integer certain exponent. If the exponent is positive, call the BigDecimal.pow(int) method to maintain precision. Called by the '**' operator.</source>
          <target state="translated">BigDecimal の指数を整数にしたときの累乗。指数が正の場合は、精度を維持するために BigDecimal.pow(int)メソッドをコールします。演算子 '**' によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1b139e1319834b86e2002175fac2b234128077ad" translate="yes" xml:space="preserve">
          <source>Power of a BigInteger to a BigInteger certain exponent.</source>
          <target state="translated">BigIntegerの力をBigIntegerのある指数に。</target>
        </trans-unit>
        <trans-unit id="fca66f5dd0a84aaecff27c6af149de0edc99daa6" translate="yes" xml:space="preserve">
          <source>Power of a BigInteger to a BigInteger certain exponent. Called by the '**' operator.</source>
          <target state="translated">BigInteger のある指数に対する BigInteger の累乗。演算子 '**' によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0752bcd159d040f57e3c2c16012f7b66c6d62e9e" translate="yes" xml:space="preserve">
          <source>Power of a BigInteger to an integer certain exponent.</source>
          <target state="translated">整数の指数に対するBigIntegerの力。</target>
        </trans-unit>
        <trans-unit id="117f82c1bd0f767a964066989428c4f7f2addecd" translate="yes" xml:space="preserve">
          <source>Power of a BigInteger to an integer certain exponent. If the exponent is positive, call the BigInteger.pow(int) method to maintain precision. Called by the '**' operator.</source>
          <target state="translated">整数の指数に対するBigIntegerの累乗。指数が正の場合は、精度を維持するために BigInteger.pow(int)メソッドを呼び出します。演算子 '**' によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5ccdd59eecbb506ecf14b2801a5ffc59d362d625" translate="yes" xml:space="preserve">
          <source>Power of a Number to a certain exponent.</source>
          <target state="translated">ある指数への数の力。</target>
        </trans-unit>
        <trans-unit id="04c176d960bef3288a141c25b66de7494a7cbc29" translate="yes" xml:space="preserve">
          <source>Power of a Number to a certain exponent. Called by the '**' operator.</source>
          <target state="translated">ある指数までの数の累乗。演算子 '**' によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8be1934ab41cbb05063a8b9a991946ce212aa15b" translate="yes" xml:space="preserve">
          <source>Power of a long to an integer certain exponent.</source>
          <target state="translated">整数のある指数までの長さの力。</target>
        </trans-unit>
        <trans-unit id="f0e3268ca6c9ec0b2f6ccd011ca1cd82a060bae7" translate="yes" xml:space="preserve">
          <source>Power of a long to an integer certain exponent. If the exponent is positive, convert to a BigInteger and call BigInteger.pow(int) method to maintain precision. Called by the '**' operator.</source>
          <target state="translated">ある指数の整数に対する長さの累乗。指数が正の場合は、BigIntegerに変換してBigInteger.pow(int)メソッドを呼び出して精度を維持します。演算子 '**' によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="294bf258616a2d918bf0ecf4572e51dc23d5d092" translate="yes" xml:space="preserve">
          <source>Power of an integer to an integer certain exponent.</source>
          <target state="translated">整数のある指数への整数の力。</target>
        </trans-unit>
        <trans-unit id="75dc5fc64804e00a0e2b1216c942b134acd91f8e" translate="yes" xml:space="preserve">
          <source>Power of an integer to an integer certain exponent. If the exponent is positive, convert to a BigInteger and call BigInteger.pow(int) method to maintain precision. Called by the '**' operator.</source>
          <target state="translated">ある整数の指数に対する整数の累乗。指数が正の場合は、BigInteger に変換して BigInteger.pow(int)メソッドを呼び出して精度を維持します。演算子 '**' によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="13867747ce710d8b133d6dcc2492082e75812360" translate="yes" xml:space="preserve">
          <source>Prefer using methods taking a Reader rather than an InputStream to avoid wrong encoding issues.</source>
          <target state="translated">間違ったエンコーディングの問題を避けるために、InputStreamではなくReaderを取るメソッドを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="32ced911277caa5a7b528f8af3f5e41921ce946f" translate="yes" xml:space="preserve">
          <source>Prefer using methods taking a Reader rather than an InputStream to avoid wrong encoding issues. Use &lt;a href=&quot;#parseClass(java.io.Reader,%20java.lang.String)&quot;&gt;parseClass&lt;/a&gt; instead</source>
          <target state="translated">誤ったエンコーディングの問題を回避するために、InputStreamではなくReaderを使用するメソッドを使用することをお勧めします。代わりに&lt;a href=&quot;#parseClass(java.io.Reader,%20java.lang.String)&quot;&gt;parseClass&lt;/a&gt;を使用してください</target>
        </trans-unit>
        <trans-unit id="222497146a0bc2d5f10b1f03e23fe32131d0c4ad" translate="yes" xml:space="preserve">
          <source>Preferred error output writer.</source>
          <target state="translated">優先されるエラー出力ライター。</target>
        </trans-unit>
        <trans-unit id="92dff3d30f90ad54808b20992a5289ec22c8a31f" translate="yes" xml:space="preserve">
          <source>Preferred input reader.</source>
          <target state="translated">優先される入力リーダー。</target>
        </trans-unit>
        <trans-unit id="3b4ef3bd2595b0b60795399f5cbb4d2bfec577d8" translate="yes" xml:space="preserve">
          <source>Preferred output writer.</source>
          <target state="translated">アウトプットライターを希望します。</target>
        </trans-unit>
        <trans-unit id="90eceb016c51a762f15c7287008c113f6f37296c" translate="yes" xml:space="preserve">
          <source>Prefix</source>
          <target state="translated">Prefix</target>
        </trans-unit>
        <trans-unit id="9913ac39485e3443eab55731730ab5c8585f63d6" translate="yes" xml:space="preserve">
          <source>PreparedStatement</source>
          <target state="translated">PreparedStatement</target>
        </trans-unit>
        <trans-unit id="4a4c5a7048f31b314b59b2fe555493a66f3c633b" translate="yes" xml:space="preserve">
          <source>Prepends an item to the start of the List.</source>
          <target state="translated">リストの先頭に項目を前置します。</target>
        </trans-unit>
        <trans-unit id="f28f0bad09d9c1a98ba019f3dd1cdbc32ad6dc06" translate="yes" xml:space="preserve">
          <source>Pretty print a JSON payload.</source>
          <target state="translated">JSONペイロードをきれいに印刷します。</target>
        </trans-unit>
        <trans-unit id="e63fa617917c0e4b14ae8084fa4c02c08143f07a" translate="yes" xml:space="preserve">
          <source>Pretty-prints and formats the JSON payload.</source>
          <target state="translated">JSONペイロードをプリティープリントし、フォーマットします。</target>
        </trans-unit>
        <trans-unit id="1bffb23200b111529ac1157bf4ba13d0e4883940" translate="yes" xml:space="preserve">
          <source>Primary ClassNodes:</source>
          <target state="translated">プライマリクラスノード。</target>
        </trans-unit>
        <trans-unit id="aebb08ad2c277c432e5dff8b35ede66cdb3f21ec" translate="yes" xml:space="preserve">
          <source>Primary entry point for compiling from the command line (using the groovyc script).</source>
          <target state="translated">(groovyc スクリプトを使って)コマンドラインからコンパイルするための主要なエントリポイント。</target>
        </trans-unit>
        <trans-unit id="ee6f959665ad6aeaa6b12a09ca190e45a6cca5e0" translate="yes" xml:space="preserve">
          <source>Print a linebreak to the standard output stream.</source>
          <target state="translated">標準出力ストリームへの改行を印刷します。</target>
        </trans-unit>
        <trans-unit id="893dcf40b9fb8917668291f120716777f67e9399" translate="yes" xml:space="preserve">
          <source>Print a linebreak to the standard output stream. This method delegates to the owner to execute the method.</source>
          <target state="translated">標準出力ストリームに改行を印刷します。このメソッドは、オーナーにメソッドの実行を委譲します。</target>
        </trans-unit>
        <trans-unit id="b373f7be082f883135d6e586967d2562a3b40dad" translate="yes" xml:space="preserve">
          <source>Print a value (followed by a newline) to the standard output stream.</source>
          <target state="translated">標準出力ストリームに値(後に改行)を出力します。</target>
        </trans-unit>
        <trans-unit id="88a78551611aa29267fa91cbaf16759785140c14" translate="yes" xml:space="preserve">
          <source>Print a value (followed by a newline) to the standard output stream. This method delegates to the owner to execute the method.</source>
          <target state="translated">標準出力ストリームに値 (改行が続く)を出力します。このメソッドは、所有者にメソッドの実行を委譲します。</target>
        </trans-unit>
        <trans-unit id="964abdf7f4d50658ddc2046150269f92b6b7825b" translate="yes" xml:space="preserve">
          <source>Print a value formatted Groovy style (followed by a newline) to self if it is a Writer, otherwise to the standard output stream.</source>
          <target state="translated">ライターの場合はGroovyスタイル(後に改行)でフォーマットされた値をselfに、そうでない場合は標準出力ストリームに出力します。</target>
        </trans-unit>
        <trans-unit id="22321e6cc6bbfc5fe7c569feea1634a245158bbc" translate="yes" xml:space="preserve">
          <source>Print a value formatted Groovy style (followed by a newline) to the print stream.</source>
          <target state="translated">Groovy スタイル(後に改行)をフォーマットした値を印刷ストリームに印刷します。</target>
        </trans-unit>
        <trans-unit id="f97c7faa732c0a4d70612b8cbe8f56f7d733edfc" translate="yes" xml:space="preserve">
          <source>Print a value formatted Groovy style (followed by a newline) to the print writer.</source>
          <target state="translated">Groovy スタイルでフォーマットされた値(後に改行)を印刷ライタに印刷します。</target>
        </trans-unit>
        <trans-unit id="3029e26dc39485a0f76824c3836115012311abad" translate="yes" xml:space="preserve">
          <source>Print a value formatted Groovy style to self if it is a Writer, otherwise to the standard output stream.</source>
          <target state="translated">Groovyスタイルをフォーマットした値を、ライターの場合は自己に、そうでない場合は標準出力ストリームに出力します。</target>
        </trans-unit>
        <trans-unit id="26ad3a35cf4ad075f5ceaaf35ac7ab627b92e77b" translate="yes" xml:space="preserve">
          <source>Print a value formatted Groovy style to the print stream.</source>
          <target state="translated">Groovyスタイルをフォーマットした値を印刷ストリームに印刷します。</target>
        </trans-unit>
        <trans-unit id="00791e2ed7fa3a6ff0e7092f3cc2662f1569f870" translate="yes" xml:space="preserve">
          <source>Print a value formatted Groovy style to the print writer.</source>
          <target state="translated">Groovyスタイルをフォーマットした値を印刷ライターに印刷します。</target>
        </trans-unit>
        <trans-unit id="ecaaf0f5a4cec1384fb66bfcfc3132c5ac945f31" translate="yes" xml:space="preserve">
          <source>Print a value to the standard output stream.</source>
          <target state="translated">標準出力ストリームに値を印刷します。</target>
        </trans-unit>
        <trans-unit id="99bbf839006307a783cf825007a5635830d45a0b" translate="yes" xml:space="preserve">
          <source>Print a value to the standard output stream. This method delegates to the owner to execute the method.</source>
          <target state="translated">標準出力ストリームに値を印刷します。このメソッドは、オーナーにメソッドの実行を委譲します。</target>
        </trans-unit>
        <trans-unit id="cf52bff2bdeace8a09a701f6d764ab38cd7554fe" translate="yes" xml:space="preserve">
          <source>Print data in the body of the current tag.</source>
          <target state="translated">現在のタグの本文にデータを印刷します。</target>
        </trans-unit>
        <trans-unit id="480daff2c9ffe6291e5eaeacbe9f709dc4066bb7" translate="yes" xml:space="preserve">
          <source>Print data in the body of the current tag. Does not escape XML entities. For example: &lt;code&gt;mkp.yieldUnescaped('I am &amp;lt;i&amp;gt;happy&amp;lt;/i&amp;gt;!')&lt;/code&gt;.</source>
          <target state="translated">現在のタグの本文にデータを出力します。XMLエンティティをエスケープしません。例： &lt;code&gt;mkp.yieldUnescaped('I am &amp;lt;i&amp;gt;happy&amp;lt;/i&amp;gt;!')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03a78fc8173e2d6b103245dfb37967be65124b6b" translate="yes" xml:space="preserve">
          <source>Print the usage message with writer (default: System.out) and formatter (default: HelpFormatter)</source>
          <target state="translated">ライタ(デフォルト:System.out)とフォーマッタ(デフォルト:HelpFormatter)で使用法メッセージを印刷する</target>
        </trans-unit>
        <trans-unit id="25d2e171d5a1a4bb078875da14609a583e4b5793" translate="yes" xml:space="preserve">
          <source>Print to a console in interactive format.</source>
          <target state="translated">対話形式でコンソールに印刷します。</target>
        </trans-unit>
        <trans-unit id="8de1f53e06e81e229fb45d4dc0c8d675fb15d640" translate="yes" xml:space="preserve">
          <source>PrintStream.PrintStream</source>
          <target state="translated">PrintStream.PrintStream</target>
        </trans-unit>
        <trans-unit id="f74e9c10de4b99a338bc9dbe9a98d2c530116168" translate="yes" xml:space="preserve">
          <source>Printf 0 or more values to the standard output stream using a format string.</source>
          <target state="translated">0個以上の値をフォーマット文字列を用いて標準出力ストリームに出力します。</target>
        </trans-unit>
        <trans-unit id="3a23421f6097b25f45dfed4e19a62eb890a9ddbf" translate="yes" xml:space="preserve">
          <source>Printf 0 or more values to the standard output stream using a format string. This method delegates to the owner to execute the method.</source>
          <target state="translated">フォーマット文字列を使用して、0個以上の値を標準出力ストリームにプリントします。このメソッドは、所有者にメソッドの実行を委譲します。</target>
        </trans-unit>
        <trans-unit id="d3d86e7bfcaeb0e8a0924b656a6120e0e554d04e" translate="yes" xml:space="preserve">
          <source>Printf a value to the standard output stream using a format string.</source>
          <target state="translated">フォーマット文字列を使用して標準出力ストリームに値を印刷します。</target>
        </trans-unit>
        <trans-unit id="b1d03ae05242b7340a870b7fc2e01a84e1c62624" translate="yes" xml:space="preserve">
          <source>Printf a value to the standard output stream using a format string. This method delegates to the owner to execute the method.</source>
          <target state="translated">フォーマット文字列を使用して、標準出力ストリームに値をプリントします。このメソッドは、オーナーにメソッドの実行を委譲します。</target>
        </trans-unit>
        <trans-unit id="db696926ab1e232a6c93cb3b8b3d8b303314cafc" translate="yes" xml:space="preserve">
          <source>Printf to the standard output stream.</source>
          <target state="translated">標準出力ストリームに印刷します。</target>
        </trans-unit>
        <trans-unit id="d936e93bacfec29642d81f8f05658bf42b54cc84" translate="yes" xml:space="preserve">
          <source>Prints a &lt;code&gt;groovy.util.Node&lt;/code&gt; (as used with &lt;code&gt;XmlParser&lt;/code&gt;) including all children in XML format. Typical usage:</source>
          <target state="translated">印刷 &lt;code&gt;groovy.util.Node&lt;/code&gt; （で使用されるように &lt;code&gt;XmlParser&lt;/code&gt; XML形式でのすべての子供を含む）を。典型的な使用法：</target>
        </trans-unit>
        <trans-unit id="2960512dc2096a6e8fafd44aef24c20b0c500936" translate="yes" xml:space="preserve">
          <source>Prints a character.</source>
          <target state="translated">文字を印刷します。</target>
        </trans-unit>
        <trans-unit id="414f3bcbdccb1109b8775dec557902f0c705a06f" translate="yes" xml:space="preserve">
          <source>Prints a formatted string using the specified format string and argument.</source>
          <target state="translated">指定された書式文字列と引数を使用して、書式付き文字列を出力します。</target>
        </trans-unit>
        <trans-unit id="b485191b829e1b9fa7563230500ea5c44bd282f3" translate="yes" xml:space="preserve">
          <source>Prints a formatted string using the specified format string and arguments.</source>
          <target state="translated">指定されたフォーマット文字列と引数を使用してフォーマットされた文字列を表示します。</target>
        </trans-unit>
        <trans-unit id="9ee3a78cc363a6cfec20979ef2d6c9cb135f3c66" translate="yes" xml:space="preserve">
          <source>Prints a line to the underlying &lt;code&gt;PrintStream&lt;/code&gt;</source>
          <target state="translated">基になる &lt;code&gt;PrintStream&lt;/code&gt; に行を出力します</target>
        </trans-unit>
        <trans-unit id="4ae1de48bb47a0f0951f9045f05ca22c1b156d1b" translate="yes" xml:space="preserve">
          <source>Prints a newline to the current 'out' variable which should be a PrintWriter or at least have a println() method defined on it.</source>
          <target state="translated">現在の 'out' 変数に改行をプリントします。</target>
        </trans-unit>
        <trans-unit id="f4731942b4c94cbd5df8f51f66e7b25255157ddb" translate="yes" xml:space="preserve">
          <source>Prints a newline to the current 'out' variable which should be a PrintWriter or at least have a println() method defined on it. If there is no 'out' property then print to standard out.</source>
          <target state="translated">現在の 'out' 変数は PrintWriter であるか、少なくともその変数に println()メソッドが定義されている必要があります。out' プロパティがない場合は、標準の out に出力します。</target>
        </trans-unit>
        <trans-unit id="c6bc4ed707a44c451a2421fa4f71af931578656e" translate="yes" xml:space="preserve">
          <source>Prints a string followed by an end of line character.</source>
          <target state="translated">行末の文字が続く文字列を表示します。</target>
        </trans-unit>
        <trans-unit id="dff698577d6bc2d203071a97515fea3f73885491" translate="yes" xml:space="preserve">
          <source>Prints a string.</source>
          <target state="translated">文字列を印刷します。</target>
        </trans-unit>
        <trans-unit id="eb3d74559a520fb087ffcd6389401aae7c15626d" translate="yes" xml:space="preserve">
          <source>Prints an end-of-line character (if enabled via addNewLines property).</source>
          <target state="translated">行末の文字を印刷します(addNewLines プロパティで有効になっている場合)。</target>
        </trans-unit>
        <trans-unit id="ca42b0f2ec01f7c5763ec47276de21283a56acc4" translate="yes" xml:space="preserve">
          <source>Prints an end-of-line character (if enabled via addNewLines property). Defaults to outputting a single '\n' character but by using a custom Writer, e.g. PlatformLineWriter, you can get platform-specific end-of-line characters.</source>
          <target state="translated">行末の文字を出力します(addNewLinesプロパティで有効になっている場合)。デフォルトでは単一の '\n' 文字を出力しますが、PlatformLineWriter などのカスタムライターを使用することで、プラットフォーム固有の行末文字を取得することができます。</target>
        </trans-unit>
        <trans-unit id="0c6ac63e9dba0305d304b155c77970d1f7118f9f" translate="yes" xml:space="preserve">
          <source>Prints an object Groovy style followed by a newline.</source>
          <target state="translated">Groovyスタイルの後に改行を加えたオブジェクトを印刷します。</target>
        </trans-unit>
        <trans-unit id="0e4d49d29140b324fa47caa08aaeacc48b42f504" translate="yes" xml:space="preserve">
          <source>Prints an object Groovy style.</source>
          <target state="translated">Groovyスタイルのオブジェクトを印刷します。</target>
        </trans-unit>
        <trans-unit id="5db0210a7b89dfd1fedc3fe5cecb49de225ca501" translate="yes" xml:space="preserve">
          <source>Prints data in the body of the current tag, escaping XML entities.</source>
          <target state="translated">XMLエンティティをエスケープして、現在のタグの本文にデータを出力します。</target>
        </trans-unit>
        <trans-unit id="8985b9e6efdd362c784c5cf38ad4d1b1bff3d917" translate="yes" xml:space="preserve">
          <source>Prints data in the body of the current tag, escaping XML entities. For example: &lt;code&gt;mkp.yield('5 &amp;lt; 7')&lt;/code&gt;</source>
          <target state="translated">XMLエンティティをエスケープして、現在のタグの本文にデータを出力します。例： &lt;code&gt;mkp.yield('5 &amp;lt; 7')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d4e2f5d82098ee3fa59c69417475350c9fdf45e7" translate="yes" xml:space="preserve">
          <source>Prints even numbers 0 through 8.</source>
          <target state="translated">0 から 8 までの偶数を印刷します。</target>
        </trans-unit>
        <trans-unit id="fa69cb9b52c84cc202d1c58539d748d89c3365c3" translate="yes" xml:space="preserve">
          <source>Prints markup to System.out</source>
          <target state="translated">マークアップをSystem.outに印刷します。</target>
        </trans-unit>
        <trans-unit id="2b43b06151aa628b85de0fb06322e31f92aeeb42" translate="yes" xml:space="preserve">
          <source>Prints numbers 0 to 10</source>
          <target state="translated">0 から 10 までの数字を印刷します。</target>
        </trans-unit>
        <trans-unit id="58d5c7f31aa43b53de535a052092d6f27f6e3622" translate="yes" xml:space="preserve">
          <source>Prints numbers 0.1, 1.1, 2.1... to 9.1</source>
          <target state="translated">0.1、1.1、2.1...から9.1までの数字を印刷します。</target>
        </trans-unit>
        <trans-unit id="182cd20e7054611a724122246d0079de42d8f94b" translate="yes" xml:space="preserve">
          <source>Prints numbers 10.5, 9.5 ... to 0.5.</source>
          <target state="translated">10.5、9.5 ...から 0.5 までの数字を印刷します。</target>
        </trans-unit>
        <trans-unit id="28a9223e1289f3471fec8e08a16b21ede8e74fd6" translate="yes" xml:space="preserve">
          <source>Prints the current indent level.</source>
          <target state="translated">現在のインデントレベルを印刷します。</target>
        </trans-unit>
        <trans-unit id="e0ada9c73613d073e506c9608cf7e804ad2c7fe7" translate="yes" xml:space="preserve">
          <source>Prints the numbers 0 through 9.</source>
          <target state="translated">0 から 9 までの数字を印刷します。</target>
        </trans-unit>
        <trans-unit id="f75d8c70be3db6ac81ee812639d5cdbca3b90f57" translate="yes" xml:space="preserve">
          <source>Prints the usage help message for CompilationOptions to stderr.</source>
          <target state="translated">CompilationOptionsの使用法のヘルプメッセージをstderrに出力します。</target>
        </trans-unit>
        <trans-unit id="3f4dc5924c870bbd6555310f458bf5671efb1ce7" translate="yes" xml:space="preserve">
          <source>Prints the usage help message for the CompilationOptions to the specified PrintWriter.</source>
          <target state="translated">CompilationOptionsの使用法のヘルプ・メッセージを指定したPrintWriterに出力します。</target>
        </trans-unit>
        <trans-unit id="3acd8316739b77a56586f4a2b4b9a300348d3321" translate="yes" xml:space="preserve">
          <source>Prints the usage message with the specified &lt;a href=&quot;#header&quot;&gt;header&lt;/a&gt;, &lt;a href=&quot;#footer&quot;&gt;footer&lt;/a&gt; and &lt;a href=&quot;#width&quot;&gt;width&lt;/a&gt; to the specified &lt;a href=&quot;#writer&quot;&gt;writer&lt;/a&gt; (default: System.out).</source>
          <target state="translated">指定された&lt;a href=&quot;#header&quot;&gt;ヘッダー&lt;/a&gt;、&lt;a href=&quot;#footer&quot;&gt;フッター&lt;/a&gt;、および&lt;a href=&quot;#width&quot;&gt;幅&lt;/a&gt;を使用して、使用法メッセージを指定された&lt;a href=&quot;#writer&quot;&gt;ライター&lt;/a&gt;（デフォルト：System.out）に出力します。</target>
        </trans-unit>
        <trans-unit id="1a6ad935c5823361dd22fdbb8be9845ddc5616e8" translate="yes" xml:space="preserve">
          <source>Prints the value and a newline to the current 'out' variable which should be a PrintWriter or at least have a println() method defined on it.</source>
          <target state="translated">現在の 'out' 変数に値と改行をプリントします。</target>
        </trans-unit>
        <trans-unit id="e1b65381fe297d2f1385254a8398b3a7ed05ba4f" translate="yes" xml:space="preserve">
          <source>Prints the value and a newline to the current 'out' variable which should be a PrintWriter or at least have a println() method defined on it. If there is no 'out' property then print to standard out.</source>
          <target state="translated">現在の 'out' 変数は PrintWriter であるか、少なくとも println()メソッドが定義されている必要があります。out' プロパティがない場合は、標準の out に出力します。</target>
        </trans-unit>
        <trans-unit id="73cadb95025c1b5b7fa92494f83a4e99140b8d38" translate="yes" xml:space="preserve">
          <source>Prints the value to the current 'out' variable which should be a PrintWriter or at least have a print() method defined on it.</source>
          <target state="translated">現在の 'out' 変数に値をプリントします。</target>
        </trans-unit>
        <trans-unit id="8bd7a0116d787cb0e21a02e89d7f8ed7d1abf097" translate="yes" xml:space="preserve">
          <source>Prints the value to the current 'out' variable which should be a PrintWriter or at least have a print() method defined on it. If there is no 'out' property then print to standard out.</source>
          <target state="translated">現在の 'out' 変数は PrintWriter であるか、少なくとも print()メソッドが定義されている必要があります。out' プロパティがない場合は、標準の out に出力します。</target>
        </trans-unit>
        <trans-unit id="50997c884878ff52ecbe37cf7e070ba62950e016" translate="yes" xml:space="preserve">
          <source>Prints version information to stderr.</source>
          <target state="translated">バージョン情報を標準エラーに出力します。</target>
        </trans-unit>
        <trans-unit id="96aaca1c16d4917b3954995084eb643bc78d9dcd" translate="yes" xml:space="preserve">
          <source>Prints version information to the specified PrintWriter.</source>
          <target state="translated">指定したPrintWriterにバージョン情報を印刷します。</target>
        </trans-unit>
        <trans-unit id="871b6cc5231dddfd4f3944e08a79a50269059dd2" translate="yes" xml:space="preserve">
          <source>Probably many unrecognized edge cases.</source>
          <target state="translated">おそらく、認識されていないエッジケースが多いのではないでしょうか。</target>
        </trans-unit>
        <trans-unit id="f1fa71986e81357ad35e73d786627915b1ebd3b9" translate="yes" xml:space="preserve">
          <source>Process Groovydoc templates.</source>
          <target state="translated">Groovydocのテンプレートを処理します。</target>
        </trans-unit>
        <trans-unit id="fd883a4220b139795042bbdb685b59aa77565632" translate="yes" xml:space="preserve">
          <source>Process each regex group matched substring of the given string.</source>
          <target state="translated">与えられた文字列の正規表現グループにマッチした部分文字列を処理する。</target>
        </trans-unit>
        <trans-unit id="5b7249e017061acff2f139687edb09c4f843a2f6" translate="yes" xml:space="preserve">
          <source>Process each regex group matched substring of the given string. If the closure parameter takes one argument, an array with all match groups is passed to it. If the closure takes as many arguments as there are match groups, then each parameter will be one match group.</source>
          <target state="translated">与えられた文字列の各正規表現グループにマッチした部分文字列を処理します。クロージャのパラメータが一つの引数を取る場合は、すべてのマッチグループを含む配列が渡されます。もしクロージャがマッチグループの数だけ引数を取る場合は、 それぞれのパラメータは一つのマッチグループとなります。</target>
        </trans-unit>
        <trans-unit id="af140d8ef51c4ce49a2a82566ce1ca94aed82f8e" translate="yes" xml:space="preserve">
          <source>Processes each descendant file in this directory and any sub-directories.</source>
          <target state="translated">このディレクトリとサブディレクトリの各子孫ファイルを処理します。</target>
        </trans-unit>
        <trans-unit id="be601be4ce0ea0bfd46d7f13b6ec3e784ed8dd55" translate="yes" xml:space="preserve">
          <source>Processes each descendant file in this directory and any sub-directories. Convenience method for &lt;a href=&quot;#traverse(java.io.File,%20java.util.Map,%20groovy.lang.Closure)&quot;&gt;traverse(java.io.File, java.util.Map, groovy.lang.Closure)&lt;/a&gt; when no options to alter the traversal behavior are required.</source>
          <target state="translated">このディレクトリとサブディレクトリ内の各子孫ファイルを処理します。トラバーサルの動作を変更するオプションが必要ない場合の&lt;a href=&quot;#traverse(java.io.File,%20java.util.Map,%20groovy.lang.Closure)&quot;&gt;トラバース（java.io.File、java.util.Map、groovy.lang.Closure）の&lt;/a&gt;便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="024e31cce0f094357d0dfe9bc618202104009c04" translate="yes" xml:space="preserve">
          <source>Processes each descendant file in this directory and any sub-directories. Convenience method for &lt;a href=&quot;#traverse(java.nio.file.Path,%20java.util.Map,%20groovy.lang.Closure)&quot;&gt;traverse(Path, java.util.Map, groovy.lang.Closure)&lt;/a&gt; when no options to alter the traversal behavior are required.</source>
          <target state="translated">このディレクトリとサブディレクトリ内の各子孫ファイルを処理します。トラバーサル動作を変更するオプションが必要ない場合の&lt;a href=&quot;#traverse(java.nio.file.Path,%20java.util.Map,%20groovy.lang.Closure)&quot;&gt;トラバース（Path、java.util.Map、groovy.lang.Closure）の&lt;/a&gt;便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="d224568b93efa9a9f4e3d5394a98653f9765767e" translate="yes" xml:space="preserve">
          <source>Processes each descendant file in this directory and any sub-directories. Processing consists of calling &lt;code&gt;closure&lt;/code&gt; passing it the current file (which may be a normal file or subdirectory) and then if a subdirectory was encountered, recursively processing the subdirectory.</source>
          <target state="translated">このディレクトリとサブディレクトリ内の各子孫ファイルを処理します。処理は、 &lt;code&gt;closure&lt;/code&gt; を呼び出して現在のファイル（通常のファイルまたはサブディレクトリの場合があります）を渡し、サブディレクトリが検出された場合は、サブディレクトリを再帰的に処理することで構成されます。</target>
        </trans-unit>
        <trans-unit id="78ec56e137a414705472b65f5db0d91e83a80534" translate="yes" xml:space="preserve">
          <source>Processes each descendant file in this directory and any sub-directories. Processing consists of potentially calling &lt;code&gt;closure&lt;/code&gt; passing it the current file (which may be a normal file or subdirectory) and then if a subdirectory was encountered, recursively processing the subdirectory.</source>
          <target state="translated">このディレクトリとサブディレクトリ内の各子孫ファイルを処理します。処理は、潜在的に &lt;code&gt;closure&lt;/code&gt; を呼び出して現在のファイル（通常のファイルまたはサブディレクトリ）を渡し、サブディレクトリが検出された場合は、サブディレクトリを再帰的に処理することで構成されます。</target>
        </trans-unit>
        <trans-unit id="0462095d2e73a33a88a5a86c3b4669345ef6d957" translate="yes" xml:space="preserve">
          <source>Processes each descendant file in this directory and any sub-directories. Processing consists of potentially calling &lt;code&gt;closure&lt;/code&gt; passing it the current file (which may be a normal file or subdirectory) and then if a subdirectory was encountered, recursively processing the subdirectory. Whether the closure is called is determined by whether the file was a normal file or subdirectory and the value of fileType.</source>
          <target state="translated">このディレクトリとサブディレクトリ内の各子孫ファイルを処理します。処理は、潜在的に &lt;code&gt;closure&lt;/code&gt; を呼び出して現在のファイル（通常のファイルまたはサブディレクトリ）を渡し、サブディレクトリが検出された場合は、サブディレクトリを再帰的に処理することで構成されます。クロージャが呼び出されるかどうかは、ファイルが通常のファイルであるかサブディレクトリであるか、およびfileTypeの値によって決まります。</target>
        </trans-unit>
        <trans-unit id="3194ea87389c5dcc5aa64211e53c571ce37d1207" translate="yes" xml:space="preserve">
          <source>Processes each regex group matched substring of the given CharSequence.</source>
          <target state="translated">与えられたCharSequenceの各正規表現グループにマッチした部分文字列を処理します。</target>
        </trans-unit>
        <trans-unit id="0a763b3e581518fc4999bfd26a49d85ef12c263c" translate="yes" xml:space="preserve">
          <source>Processes each regex group matched substring of the given CharSequence. If the closure parameter takes one argument, an array with all match groups is passed to it. If the closure takes as many arguments as there are match groups, then each parameter will be one match group.</source>
          <target state="translated">与えられた CharSequence の部分文字列にマッチした各正規表現グループを処理します。クロージャのパラメータが一つの引数を取る場合は、 すべてのマッチグループを含む配列が渡されます。クロージャがマッチグループの数だけ引数を取る場合は、 それぞれのパラメータが一つのマッチグループとなります。</target>
        </trans-unit>
        <trans-unit id="b33bab69e6a43d09c8dd71af50e8526e6a2de9d2" translate="yes" xml:space="preserve">
          <source>Processes each regex group matched substring of the given pattern.</source>
          <target state="translated">与えられたパターンの部分文字列にマッチした各正規表現グループを処理します。</target>
        </trans-unit>
        <trans-unit id="3a50bd1fe2eef4be16ec81be8f928a8476bd59bb" translate="yes" xml:space="preserve">
          <source>Processes each regex group matched substring of the given pattern. If the closure parameter takes one argument, an array with all match groups is passed to it. If the closure takes as many arguments as there are match groups, then each parameter will be one match group.</source>
          <target state="translated">与えられたパターンの各正規表現グループにマッチした部分文字列を処理します。クロージャパラメータが一つの引数を取る場合は、すべてのマッチグループを含む配列が渡されます。クロージャがマッチグループの数だけ引数を取る場合は、 それぞれのパラメータは一つのマッチグループとなります。</target>
        </trans-unit>
        <trans-unit id="d9e881dcf81dfda9885bf01b7b2a5fcd499b18f3" translate="yes" xml:space="preserve">
          <source>Processes template source files substituting variables and expressions into placeholders in a template source text to produce the desired output using a closure based approach. This engine has equivalent functionality to the &lt;a href=&quot;simpletemplateengine&quot;&gt;SimpleTemplateEngine&lt;/a&gt; but creates the template using writable closures making it more scalable for large templates.</source>
          <target state="translated">変数と式をテンプレートソーステキストのプレースホルダーに置き換えてテンプレートソースファイルを処理し、クロージャベースのアプローチを使用して目的の出力を生成します。このエンジンは&lt;a href=&quot;simpletemplateengine&quot;&gt;SimpleTemplateEngine&lt;/a&gt;と同等の機能を備えていますが、書き込み可能なクロージャーを使用してテンプレートを作成するため、大きなテンプレートに対してよりスケーラブルになります。</target>
        </trans-unit>
        <trans-unit id="d4a1a711005ad9677e05be4503f9769975922c21" translate="yes" xml:space="preserve">
          <source>Processes template source files substituting variables and expressions into placeholders in a template source text to produce the desired output using a streaming approach. This engine has equivalent functionality to the &lt;a href=&quot;simpletemplateengine&quot;&gt;SimpleTemplateEngine&lt;/a&gt; but creates the template using writable closures making it potentially more scalable for large templates or in streaming scenarios.</source>
          <target state="translated">変数と式をテンプレートソーステキストのプレースホルダーに置き換えてテンプレートソースファイルを処理し、ストリーミングアプローチを使用して目的の出力を生成します。このエンジンは&lt;a href=&quot;simpletemplateengine&quot;&gt;SimpleTemplateEngine&lt;/a&gt;と同等の機能を備えていますが、書き込み可能なクロージャを使用してテンプレートを作成するため、大きなテンプレートやストリーミングシナリオでよりスケーラブルになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="939d75a160b802ed40c699a73b3cb60bc6ab4f4b" translate="yes" xml:space="preserve">
          <source>Processes template source files substituting variables and expressions into placeholders in a template source text to produce the desired output.</source>
          <target state="translated">テンプレート・ソース・ファイルを処理して、変数や式をテンプレート・ソース・テキストのプレースホルダに置換し、目的の出力を生成します。</target>
        </trans-unit>
        <trans-unit id="150dc63701915560c3b1419ee5d63db94a0a9f33" translate="yes" xml:space="preserve">
          <source>Processor used for computing custom logic or the list of annotations, or both.</source>
          <target state="translated">カスタム ロジックまたは注釈のリストの計算に使用されるプロセッサ、またはその両方。</target>
        </trans-unit>
        <trans-unit id="11ad434cc25c923a4f32cc534eecb477bffbb396" translate="yes" xml:space="preserve">
          <source>Processor used for computing custom logic or the list of annotations, or both. The default is org.codehaus.groovy.transform.AnnotationCollectorTransform. Custom processors need to extend that class.</source>
          <target state="translated">カスタム・ロジックまたはアノテーションのリスト、またはその両方を計算するために使用されるプロセッサ。デフォルトは org.codehaus.groovy.transform.AnnotationCollectorTransform です。カスタム プロセッサは、そのクラスを拡張する必要があります。</target>
        </trans-unit>
        <trans-unit id="39bebd53e38a31e10d4e5367f86c6ba80f8825bf" translate="yes" xml:space="preserve">
          <source>Produce a Writable object which writes the Base64 URL and Filename Safe encoding of the byte array.</source>
          <target state="translated">バイト配列のBase64 URLとFilename Safeエンコーディングを書き込む書き込み可能なオブジェクトを生成します。</target>
        </trans-unit>
        <trans-unit id="699deed9def34330589ba5914e3e6e5dc4e35243" translate="yes" xml:space="preserve">
          <source>Produce a Writable object which writes the Base64 URL and Filename Safe encoding of the byte array. Calling toString() on the result returns the encoding as a String. For more information on Base64 URL and Filename Safe encoding see &lt;code&gt;RFC 4648 - Section 5
 Base 64 Encoding with URL and Filename Safe Alphabet&lt;/code&gt;.</source>
          <target state="translated">バイト配列のBase64URLとファイル名セーフエンコーディングを書き込む書き込み可能なオブジェクトを生成します。結果に対してtoString（）を呼び出すと、エンコーディングが文字列として返されます。Base64 URLおよびファイル名セーフエンコーディングの詳細については、 &lt;code&gt;RFC 4648 - Section 5 Base 64 Encoding with URL and Filename Safe Alphabet&lt;/code&gt; したBase64エンコーディングを参照してください。</target>
        </trans-unit>
        <trans-unit id="1b0eaf555faab9e78e98b03226575ce8077291c0" translate="yes" xml:space="preserve">
          <source>Produce a Writable object which writes the Base64 encoding of the byte array.</source>
          <target state="translated">バイト配列のBase64エンコーディングを書き込むWritableオブジェクトを生成します。</target>
        </trans-unit>
        <trans-unit id="c6b49e3e4868617bb3132a2c847a27ecccc4402e" translate="yes" xml:space="preserve">
          <source>Produce a Writable object which writes the Base64 encoding of the byte array. Calling toString() on the result returns the encoding as a String. For more information on Base64 encoding and chunking see &lt;code&gt;RFC 4648&lt;/code&gt;.</source>
          <target state="translated">バイト配列のBase64エンコーディングを書き込むWritableオブジェクトを生成します。結果に対してtoString（）を呼び出すと、エンコーディングが文字列として返されます。参照のエンコードとチャンクBase64での詳細については、 &lt;code&gt;RFC 4648&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="8d694a8f38337609acfa28f7cb408eb6d68d5469" translate="yes" xml:space="preserve">
          <source>Produce a comment in the output.</source>
          <target state="translated">出力にコメントを生成します。</target>
        </trans-unit>
        <trans-unit id="e6b483c79332487b0d5c5bd58e65a131e7177f5e" translate="yes" xml:space="preserve">
          <source>Produce an XML declaration in the output.</source>
          <target state="translated">出力にXML宣言を生成します。</target>
        </trans-unit>
        <trans-unit id="756e981f1db1bc15f7d3d47d74fd5dc9011ca91b" translate="yes" xml:space="preserve">
          <source>Produce an XML declaration in the output. For example:</source>
          <target state="translated">出力にXML宣言を生成します。例えば</target>
        </trans-unit>
        <trans-unit id="2f21c67a4a7aefb77f8dc40a1dc269cf57fbd35e" translate="yes" xml:space="preserve">
          <source>Produce an XML processing instruction in the output.</source>
          <target state="translated">出力にXML処理命令を生成します。</target>
        </trans-unit>
        <trans-unit id="031ef1705c6f0dab82fb9faa1138b92d55b9f66a" translate="yes" xml:space="preserve">
          <source>Produce an XML processing instruction in the output. For example:</source>
          <target state="translated">出力にXML処理命令を生成します。例えば</target>
        </trans-unit>
        <trans-unit id="572dee60f4fdfe68ad59e49f13a9ea25a1114643" translate="yes" xml:space="preserve">
          <source>Produces a Writable that writes the hex encoding of the Byte[].</source>
          <target state="translated">Byte[]の16進数エンコーディングを書き込むWriteableを生成します。</target>
        </trans-unit>
        <trans-unit id="33c896606c4f140878ca124b21c4746bad914623" translate="yes" xml:space="preserve">
          <source>Produces a Writable that writes the hex encoding of the Byte[]. Calling toString() on this Writable returns the hex encoding as a String. The hex encoding includes two characters for each byte and all letters are lower case.</source>
          <target state="translated">Byte[]の16進数エンコーディングを書き込むWritableを生成します。この Writable で toString()を呼び出すと、16 進エンコーディングが String として返されます。16 進エンコーディングには、各バイトに 2 文字が含まれ、すべての文字は小文字になります。</target>
        </trans-unit>
        <trans-unit id="9aa16f674f2bc6bef216157f51f6655709bbed49" translate="yes" xml:space="preserve">
          <source>Produces a Writable that writes the hex encoding of the byte[].</source>
          <target state="translated">byte[]の16進数エンコーディングを書き込むWritableを生成します。</target>
        </trans-unit>
        <trans-unit id="cc5207eab5353de75cf55d889f437d337b24b71c" translate="yes" xml:space="preserve">
          <source>Produces a Writable that writes the hex encoding of the byte[]. Calling toString() on this Writable returns the hex encoding as a String. The hex encoding includes two characters for each byte and all letters are lower case.</source>
          <target state="translated">byte[]の16進数エンコーディングを書き込むWritableを生成します。この Writable で toString()を呼び出すと、16 進エンコーディングが String として返されます。16 進エンコーディングには、各バイトに 2 文字が含まれ、すべての文字は小文字になります。</target>
        </trans-unit>
        <trans-unit id="edd0c0ae0594bb26a4fe705e55d67fb9a96b5b7a" translate="yes" xml:space="preserve">
          <source>Projects each item from a source Iterable to a collection and concatenates (flattens) the resulting collections into a single list.</source>
          <target state="translated">ソース Iterable から各アイテムをコレクションに投影し、結果として得られたコレクションを連結(平坦化)して 1 つのリストにします。</target>
        </trans-unit>
        <trans-unit id="32997c1f5a03c419e13620751a9b7b43790ef5b5" translate="yes" xml:space="preserve">
          <source>Projects each item from a source array to a collection and concatenates (flattens) the resulting collections into a single list.</source>
          <target state="translated">ソース配列の各項目をコレクションに投影し、結果のコレクションを連結(平坦化)して 1 つのリストにします。</target>
        </trans-unit>
        <trans-unit id="6fde84162a7e3d16bf889bbda96b7644e4ed282b" translate="yes" xml:space="preserve">
          <source>Projects each item from a source collection to a result collection and concatenates (flattens) the resulting collections adding them into the &lt;code&gt;collector&lt;/code&gt;.</source>
          <target state="translated">ソースコレクションから結果コレクションに各アイテムを投影し、結果のコレクションを連結（フラット化）して、 &lt;code&gt;collector&lt;/code&gt; 追加します。</target>
        </trans-unit>
        <trans-unit id="cb59915f3e117abfca3ecde2403e60b42c180731" translate="yes" xml:space="preserve">
          <source>Projects each item from a source iterator to a collection and concatenates (flattens) the resulting collections into a single list.</source>
          <target state="translated">元のイテレータから各項目をコレクションに投影し、結果のコレクションを連結(平坦化)して 1 つのリストにします。</target>
        </trans-unit>
        <trans-unit id="1c65ad80e177bbd6d59c4d218b715a0bd57d8f17" translate="yes" xml:space="preserve">
          <source>Projects each item from a source map to a result collection and concatenates (flattens) the resulting collections adding them into a collection.</source>
          <target state="translated">ソース マップの各アイテムを結果コレクションに投影し、結果のコレクションを連結 (平坦化)してコレクションに追加します。</target>
        </trans-unit>
        <trans-unit id="f8acaac1d73508093ad63d3455c693314127a122" translate="yes" xml:space="preserve">
          <source>Projects each item from a source map to a result collection and concatenates (flattens) the resulting collections adding them into the &lt;code&gt;collector&lt;/code&gt;.</source>
          <target state="translated">各アイテムをソースマップから結果コレクションに投影し、結果のコレクションを連結（フラット化）して、 &lt;code&gt;collector&lt;/code&gt; 追加します。</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="1ee6acdb0b53faeffb18e315c16b1ffbc1df4ae3" translate="yes" xml:space="preserve">
          <source>Properties Summary</source>
          <target state="translated">物件概要</target>
        </trans-unit>
        <trans-unit id="5373799be8a4301c9ac2c8ea26eaf730b1da04ee" translate="yes" xml:space="preserve">
          <source>Properties automatically have private, final backing fields with getters. Attempts to update the property will result in a &lt;code&gt;ReadOnlyPropertyException&lt;/code&gt;.</source>
          <target state="translated">プロパティには、ゲッター付きのプライベートな最終バッキングフィールドが自動的にあります。プロパティを更新しようとすると、 &lt;code&gt;ReadOnlyPropertyException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="27d8e26853ddf64029b6ce427a74aa4f241ce28d" translate="yes" xml:space="preserve">
          <source>Properties must be of an immutable type or a type with a strategy for handling non-immutable characteristics. Specifically, the type must be one of the primitive or wrapper types, Strings, enums, other &lt;code&gt;@Immutable&lt;/code&gt; classes or known immutables (e.g. java.awt.Color, java.net.URI, java.util.UUID). Also handled are Cloneable classes, collections, maps and arrays, other &quot;effectively immutable&quot; classes with special handling (e.g. java.util.Date), and usages of java.util.Optional where the contained type is immutable (e.g. Optional&amp;lt;String&amp;gt;).</source>
          <target state="translated">プロパティは、不変の型か、不変でない特性を処理するための戦略を持つ型である必要があります。具体的には、型はプリミティブ型またはラッパー型、文字 &lt;code&gt;@Immutable&lt;/code&gt; 、列挙型、その他の@Immutableクラス、または既知の不変（java.awt.Color、java.net.URI、java.util.UUIDなど）のいずれかである必要があります。また、クローン可能なクラス、コレクション、マップ、配列、特別な処理を行うその他の「実質的に不変の」クラス（java.util.Dateなど）、および含まれる型が不変である場合のjava.util.Optionalの使用法（Optional &amp;lt;String&amp;gt;など）も処理されます。 ）。</target>
        </trans-unit>
        <trans-unit id="9ae33a7d0ecb82cae8f04aafab20bf90425b7b8c" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">Property</target>
        </trans-unit>
        <trans-unit id="50d404cb05846432ba1075c1e57115b7200b9ea2" translate="yes" xml:space="preserve">
          <source>Property Detail</source>
          <target state="translated">物件詳細</target>
        </trans-unit>
        <trans-unit id="20ce5c3d1d0c70e4d1f670e6abfe8e87539af388" translate="yes" xml:space="preserve">
          <source>Property Key</source>
          <target state="translated">プロパティキー</target>
        </trans-unit>
        <trans-unit id="ac1840c0e3aa3358ac60bd2fb59e80b6c55c94e7" translate="yes" xml:space="preserve">
          <source>Property accessor methods</source>
          <target state="translated">プロパティアクセサメソッド</target>
        </trans-unit>
        <trans-unit id="d48c6e57a691f38530fdbd9b0c5a51af2a1581b7" translate="yes" xml:space="preserve">
          <source>Property expressions - referencing constants</source>
          <target state="translated">プロパティ式-定数の参照</target>
        </trans-unit>
        <trans-unit id="6567a77850b870dba91c6d3b1b0c6ee806b06a97" translate="yes" xml:space="preserve">
          <source>Property invocations done on 'this' reference are transformed so that the invocations at runtime are done on the additional parameter 'self'</source>
          <target state="translated">this' 参照上で行われたプロパティ呼び出しは、実行時の呼び出しが追加パラメータ 'self' 上で行われるように変換されます。</target>
        </trans-unit>
        <trans-unit id="0c155bf28b36e836c3deee2f9ecc00866db9fd17" translate="yes" xml:space="preserve">
          <source>Property names to exclude in the comparison algorithm.</source>
          <target state="translated">比較アルゴリズムで除外するプロパティ名。</target>
        </trans-unit>
        <trans-unit id="462b5f4594b718c6d2bb4662ee3557a20e4cd5f2" translate="yes" xml:space="preserve">
          <source>Property names to exclude in the comparison algorithm. Must not be used if 'includes' is used.</source>
          <target state="translated">比較アルゴリズムで除外するプロパティ名。includes' が使用されている場合は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="e2347abc07028eb6156e811989b6c80c0b9471b6" translate="yes" xml:space="preserve">
          <source>Property names to include in the comparison algorithm.</source>
          <target state="translated">比較アルゴリズムに含めるプロパティ名。</target>
        </trans-unit>
        <trans-unit id="ea671715dbe36a26d8040efcca115670280c5dfb" translate="yes" xml:space="preserve">
          <source>Property names to include in the comparison algorithm. Must not be used if 'excludes' is used. The default value is a special marker value indicating that no includes are defined; all properties are included if 'includes' remains undefined and 'excludes' is explicitly or implicitly an empty list.</source>
          <target state="translated">比較アルゴリズムに含めるプロパティ名。excludes' が使用されている場合は使用してはいけません。デフォルト値は、includeが定義されていないことを示す特別なマーカー値です。</target>
        </trans-unit>
        <trans-unit id="45df815f7f6bae3927fc82895e607a880a9370dd" translate="yes" xml:space="preserve">
          <source>Property that may be called from within your builder closure to access helper methods, namely &lt;a href=&quot;markupbuilderhelper#yield(java.lang.String)&quot;&gt;MarkupBuilderHelper.yield&lt;/a&gt;, &lt;a href=&quot;markupbuilderhelper#yieldUnescaped(java.lang.String)&quot;&gt;MarkupBuilderHelper.yieldUnescaped&lt;/a&gt;, &lt;a href=&quot;markupbuilderhelper#pi(java.util.Map)&quot;&gt;MarkupBuilderHelper.pi&lt;/a&gt;, &lt;a href=&quot;markupbuilderhelper#xmlDeclaration(java.util.Map)&quot;&gt;MarkupBuilderHelper.xmlDeclaration&lt;/a&gt; and &lt;a href=&quot;markupbuilderhelper#comment(java.lang.String)&quot;&gt;MarkupBuilderHelper.comment&lt;/a&gt;.</source>
          <target state="translated">ヘルパーメソッドにアクセスするためにビルダークロージャ内から呼び出される可能性のあるプロパティ、つまり&lt;a href=&quot;markupbuilderhelper#yield(java.lang.String)&quot;&gt;MarkupBuilderHelper.yield&lt;/a&gt;、&lt;a href=&quot;markupbuilderhelper#yieldUnescaped(java.lang.String)&quot;&gt;MarkupBuilderHelper.yieldUnescaped&lt;/a&gt;、&lt;a href=&quot;markupbuilderhelper#pi(java.util.Map)&quot;&gt;MarkupBuilderHelper.pi&lt;/a&gt;、&lt;a href=&quot;markupbuilderhelper#xmlDeclaration(java.util.Map)&quot;&gt;MarkupBuilderHelper.xmlDeclaration&lt;/a&gt;、&lt;a href=&quot;markupbuilderhelper#comment(java.lang.String)&quot;&gt;MarkupBuilderHelper.comment&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56ffa5840fc10178f448f13cc821e9661f297428" translate="yes" xml:space="preserve">
          <source>PropertyAccessInterceptor</source>
          <target state="translated">PropertyAccessInterceptor</target>
        </trans-unit>
        <trans-unit id="875dca3904905e0e7a0aead9527281f2ed9b215b" translate="yes" xml:space="preserve">
          <source>PropertyAccessor</source>
          <target state="translated">PropertyAccessor</target>
        </trans-unit>
        <trans-unit id="f1fed196a237eb015a9be005d83d3c2ccec002c7" translate="yes" xml:space="preserve">
          <source>PropertyChangeListener</source>
          <target state="translated">PropertyChangeListener</target>
        </trans-unit>
        <trans-unit id="decb30d9005e0161f86c8f409ef1649b575191b0" translate="yes" xml:space="preserve">
          <source>PropertyOptions</source>
          <target state="translated">PropertyOptions</target>
        </trans-unit>
        <trans-unit id="4c271a21f05aca0960722945c1c6c3fc642a2902" translate="yes" xml:space="preserve">
          <source>PropertyReader</source>
          <target state="translated">PropertyReader</target>
        </trans-unit>
        <trans-unit id="5e5af6bb7edda27ddcb04cfefe39699f5e9fd999" translate="yes" xml:space="preserve">
          <source>PropertyWriter</source>
          <target state="translated">PropertyWriter</target>
        </trans-unit>
        <trans-unit id="42119a8bb4772663d00b1e43543332007a10fa33" translate="yes" xml:space="preserve">
          <source>ProtectionStorage</source>
          <target state="translated">ProtectionStorage</target>
        </trans-unit>
        <trans-unit id="7b25bbe62cfab205b7c4f6182cd52b6fb01fa6de" translate="yes" xml:space="preserve">
          <source>Provide a dynamic method invocation method which can be overloaded in classes to implement dynamic proxies easily.</source>
          <target state="translated">動的プロキシを簡単に実装できるように、クラスでオーバーロードできる動的メソッド呼び出しメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="2b4bca2b412b635d6837c9d0c3de8c32f0ebc1d0" translate="yes" xml:space="preserve">
          <source>Provide an implementation that is as close as practical to the Java 1.5 BigDecimal math model which implements precision based floating point decimal math (ANSI X3.274-1996 and ANSI X3.274-1996/AM 1-2000 (section 7.4).</source>
          <target state="translated">精度ベースの浮動小数点数計算を実装したJava 1.5 BigDecimal数学モデル(ANSI X3.274-1996およびANSI X3.274-1996/AM 1-2000(7.4項))にできるだけ近い実装を提供します。</target>
        </trans-unit>
        <trans-unit id="5df8925d8f1e8bc27c39a2b1929a511490767c59" translate="yes" xml:space="preserve">
          <source>Provide friendly error messages when parsing errors occurred.</source>
          <target state="translated">解析エラーが発生したときにフレンドリーなエラーメッセージを提供します。</target>
        </trans-unit>
        <trans-unit id="8dd5e6a2c487ade50d9d201f9ff76e3a2dc0dd14" translate="yes" xml:space="preserve">
          <source>Provide similar functionality to JDK9 &lt;code&gt;or&lt;/code&gt; on JDK8.</source>
          <target state="translated">JDK9 &lt;code&gt;or&lt;/code&gt; JDK8と同様の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="feca65e2aac51dd2d52f9cd329e3a72f2f379aa1" translate="yes" xml:space="preserve">
          <source>Provide the created value</source>
          <target state="translated">創造された価値を提供する</target>
        </trans-unit>
        <trans-unit id="f209ca2caa249ba5249eef2d1decaa096b983e5c" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;ButtonGroup&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ButtonGroup&lt;/code&gt; に標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="7b9c6c7436b04f8440c860ec47c37702db8c22e2" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;Container&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Container&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="b51c625ccdb6e7c9c9f9b72a99bbf4c08d87ecb9" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="a844e476787dddea177fc26cb9bcb9ae41b47395" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="fdd17bb8eb8b0c8c846d339091db7d38d33b2881" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="380c2a6ddd57a9d30fe565f1d074a8fa3d014633" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;Iterator&lt;/code&gt;. The iterator will become exhausted of elements after determining the size value.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。サイズ値を決定した後、イテレータは要素を使い果たします。</target>
        </trans-unit>
        <trans-unit id="14a083117e55259d1de80a1b95d076355b9c254d" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;JComboBox&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JComboBox&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="301d477b0f84ef30ae5f760086d9c36c948051b4" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;JMenu&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMenu&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="11ced4c8f5b6b665508d8a7a10fe5fa1ab3fda09" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;JMenuBar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMenuBar&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="c3de2e80809f6180263bd8352f7d41227b6ba38f" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;JTabbedPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTabbedPane&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="8fb2ae5ae907bf8302f06ee78ca70bb18122edb0" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;ListModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListModel&lt;/code&gt; に標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="31b0f1760c8fdaf7bd286ab4305f3be8b36cb948" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;Path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; に標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="3339952506410d1636fd6cbada9a38888bc241de" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;TableColumnModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TableColumnModel&lt;/code&gt; に標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="78af61bca8019504eef95e614944c7542f0b4695" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;TableModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TableModel&lt;/code&gt; に標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="97c9cd2f03f5b3acdf785f3f11cf996b4ef269a6" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;TreeNode&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TreeNode&lt;/code&gt; に標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="a262a789ad41099fdd8d4428818ac7d3a88b9842" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;TreePath&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TreePath&lt;/code&gt; に標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="7298acdb1373d7ff3879b5e734ad2cf046cc2393" translate="yes" xml:space="preserve">
          <source>Provide the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for an array.</source>
          <target state="translated">配列に標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="1780c44d9535c27b8f0ea797db5777db8c3f253a" translate="yes" xml:space="preserve">
          <source>Provides Groovy with functionality similar to the unix tr command which translates a string replacing characters from a source set with characters from a replacement set.</source>
          <target state="translated">ソースセットからの文字を置換セットからの文字で置き換える文字列を変換する unix tr コマンドに似た機能を Groovy に提供します。</target>
        </trans-unit>
        <trans-unit id="fbfec89afe64b7371b380fbc1b21ca7e584f6d5e" translate="yes" xml:space="preserve">
          <source>Provides a builder to assist the processing of command line arguments. Two styles are supported: dynamic api style (declarative method calls provide a mini DSL for describing options) and annotation style (annotations on an interface or class describe options).</source>
          <target state="translated">コマンドライン引数の処理を支援するビルダーを提供します。2 つのスタイルがサポートされています:動的 api スタイル (宣言的なメソッド呼び出しはオプションを記述するためのミニ DSL を提供します)と注釈スタイル (インターフェイスやクラス上の注釈はオプションを記述します)。</target>
        </trans-unit>
        <trans-unit id="13980ca3c1baa1d081b23fd322e500d412625506" translate="yes" xml:space="preserve">
          <source>Provides a collection of all the nodes in the tree using a breadth-first preorder traversal.</source>
          <target state="translated">巾優先のプレオーダートラバーサルを使用して、ツリー内のすべてのノードのコレクションを提供します。</target>
        </trans-unit>
        <trans-unit id="a80d94121ed915fafc9f480598146ab04cf1202e" translate="yes" xml:space="preserve">
          <source>Provides a collection of all the nodes in the tree using a breadth-first traversal.</source>
          <target state="translated">ツリー内のすべてのノードのコレクションを、幅優先探索を使用して提供します。</target>
        </trans-unit>
        <trans-unit id="f4ccb89e0d93a67860a273e18816513cd4401ec2" translate="yes" xml:space="preserve">
          <source>Provides a collection of all the nodes in the tree using a depth-first preorder traversal.</source>
          <target state="translated">深さ優先の前置探索を使用して、ツリー内のすべてのノードのコレクションを提供します。</target>
        </trans-unit>
        <trans-unit id="9392714047c1c5c8e4587f945541167ec1df0c16" translate="yes" xml:space="preserve">
          <source>Provides a collection of all the nodes in the tree using a depth-first traversal.</source>
          <target state="translated">深さ優先探索を使用して、ツリー内のすべてのノードのコレクションを提供します。</target>
        </trans-unit>
        <trans-unit id="4073d8320a372e45fb5f42114a6c1c29d486bdc6" translate="yes" xml:space="preserve">
          <source>Provides a collection of all the nodes in the tree using a depth-first traversal. A boolean 'preorder' options is supported.</source>
          <target state="translated">深さ優先探索を使用して、ツリー内のすべてのノードのコレクションを提供します。ブール値の 'preorder' オプションがサポートされています。</target>
        </trans-unit>
        <trans-unit id="a8b240dbce26c74e77f833f3ae83361040f075e0" translate="yes" xml:space="preserve">
          <source>Provides a convenient shorthand for accessing a Scripting Engine with name &lt;code&gt;languageShortName&lt;/code&gt; using a newly created &lt;code&gt;ScriptEngineManager&lt;/code&gt; instance.</source>
          <target state="translated">新しく作成された &lt;code&gt;ScriptEngineManager&lt;/code&gt; インスタンスを使用して、 &lt;code&gt;languageShortName&lt;/code&gt; という名前のスクリプトエンジンにアクセスするための便利な省略形を提供します。</target>
        </trans-unit>
        <trans-unit id="a6d1aaa693eb4fe54b818c847939a447645d6199" translate="yes" xml:space="preserve">
          <source>Provides a hook for derived classes to be able to configure JDBC statements.</source>
          <target state="translated">JDBC 文を設定できるように派生クラスにフックを提供します。</target>
        </trans-unit>
        <trans-unit id="a1eb6a91b6763dd299772018511d8d28c449beb2" translate="yes" xml:space="preserve">
          <source>Provides a hook for derived classes to be able to configure JDBC statements. Default behavior is to call a previously saved closure, if any, using the statement as a parameter.</source>
          <target state="translated">派生クラスが JDBC 文を構成できるようにするためのフックを提供します。デフォルトの動作は、以前に保存されたクロージャがあれば、そのステートメントをパラメータとして使用して呼び出すことです。</target>
        </trans-unit>
        <trans-unit id="52485bed59784bba741944d5b1d6093798907701" translate="yes" xml:space="preserve">
          <source>Provides a hook for type casting of the given object to the required type</source>
          <target state="translated">与えられたオブジェクトを必要な型にキャストするためのフックを提供します。</target>
        </trans-unit>
        <trans-unit id="c5c8ead682ff99fd0e1879599294b4aa5249360a" translate="yes" xml:space="preserve">
          <source>Provides a hook for type coercion of the given object to the required type</source>
          <target state="translated">与えられたオブジェクトを必要な型に強制するためのフックを提供します。</target>
        </trans-unit>
        <trans-unit id="c54fa9fc5a14cc01a51ee0f9b827167c4b8decdf" translate="yes" xml:space="preserve">
          <source>Provides a mechanism for mixing in methods into a class.</source>
          <target state="translated">クラスにメソッドを組み込むためのメカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="d004e5aec2eecd41e0bd04ffbf04858472a272ee" translate="yes" xml:space="preserve">
          <source>Provides a method that compares two comparables using Groovy's default number aware comparator.</source>
          <target state="translated">Groovyのデフォルトの数値認識コンパレータを使用して2つの比較対象を比較するメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="2ffecb2e420da119d0b559464b1ba6256da50770" translate="yes" xml:space="preserve">
          <source>Provides a method to perform custom 'dynamic' type conversion to the given class using the &lt;code&gt;as&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 演算子を使用して、指定されたクラスへのカスタムの「動的」型変換を実行するメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="b185da95fea77cd95e3e0b4a3f4810f01de6d9a6" translate="yes" xml:space="preserve">
          <source>Provides a nicely formatted string of the method definition.</source>
          <target state="translated">メソッド定義のきれいにフォーマットされた文字列を提供します。</target>
        </trans-unit>
        <trans-unit id="c965c1b21deb0efd31acf6d789ae2d4095bb1726" translate="yes" xml:space="preserve">
          <source>Provides a nicely formatted string of the method definition. For simplicity, generic types on some of the elements are not displayed.</source>
          <target state="translated">メソッド定義のきれいにフォーマットされた文字列を提供します。簡単にするために、いくつかの要素の一般的な型は表示されません。</target>
        </trans-unit>
        <trans-unit id="5f77eac632a0e03081e64f25df1a12666f929972" translate="yes" xml:space="preserve">
          <source>Provides a very, very basic logging API.</source>
          <target state="translated">非常に基本的なロギング API を提供します。</target>
        </trans-unit>
        <trans-unit id="ba98104c3b6c07f442b4f1d3e52f695d71e996dd" translate="yes" xml:space="preserve">
          <source>Provides a way to transform expressions</source>
          <target state="translated">式を変換する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="774be9020b740d5ae5e27ff71b67e05f8b10ca45" translate="yes" xml:space="preserve">
          <source>Provides an Iterator over all the nodes of this GPathResult using a breadth-first traversal.</source>
          <target state="translated">この GPathResult のすべてのノードに対して、幅優先探索を使用して Iterator を提供します。</target>
        </trans-unit>
        <trans-unit id="20de54e0543ae35eb46d3d99c23868e48e4f2d49" translate="yes" xml:space="preserve">
          <source>Provides an Iterator over all the nodes of this GPathResult using a depth-first traversal.</source>
          <target state="translated">深さ優先探索を使用して、この GPathResult の全ノードを対象とした Iterator を提供します。</target>
        </trans-unit>
        <trans-unit id="22768ce02623a9c26798aef5d6159265a039c317" translate="yes" xml:space="preserve">
          <source>Provides an anchor for a single source unit (usually a script file) as it passes through the compiler system.</source>
          <target state="translated">コンパイラ システムを通過する際に、単一のソース ユニット (通常はスクリプト ファイル)のアンカーを提供します。</target>
        </trans-unit>
        <trans-unit id="74dc0dc91616825ca01d5fb1d246e3e20b202388" translate="yes" xml:space="preserve">
          <source>Provides an easy way to append multiple Map.Entry values to a Map.</source>
          <target state="translated">複数の Map.Entry 値を Map に追加する簡単な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="b95872f37e51aba45cc98b77218f9c530cfb045e" translate="yes" xml:space="preserve">
          <source>Provides an implementation of contains() like &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html#contains(Object)&quot;&gt;Collection.contains&lt;/a&gt; to make CharSequences more polymorphic.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html#contains(Object)&quot;&gt;Collection.containsの&lt;/a&gt;ようなcontains（）の実装を提供して、CharSequencesをより多形にします。</target>
        </trans-unit>
        <trans-unit id="b63fbe985e305e55d3dded271cfee0dbb8e1495c" translate="yes" xml:space="preserve">
          <source>Provides as alternative to reflection using bytecode generation.</source>
          <target state="translated">バイトコード生成を使用したリフレクションの代替として提供します。</target>
        </trans-unit>
        <trans-unit id="4146118a7fb77eaa519e2382fa9e21ca45e8c68c" translate="yes" xml:space="preserve">
          <source>Provides lookup of attributes by key.</source>
          <target state="translated">キーによる属性の検索を提供します。</target>
        </trans-unit>
        <trans-unit id="882198da1f74c8d22c28cae37c1504f4e92dc1c9" translate="yes" xml:space="preserve">
          <source>Provides lookup of elements by QName.</source>
          <target state="translated">QNameによる要素の検索を提供します。</target>
        </trans-unit>
        <trans-unit id="cc755084098fee524367e067e47a0c79d01420a8" translate="yes" xml:space="preserve">
          <source>Provides lookup of elements by non-namespaced name</source>
          <target state="translated">名前空間のない名前による要素の検索を提供します。</target>
        </trans-unit>
        <trans-unit id="c545f0e54dab6c604a6bedfb0160d8ce51a72834" translate="yes" xml:space="preserve">
          <source>Provides lookup of elements by non-namespaced name.</source>
          <target state="translated">名前空間のない名前による要素の検索を提供します。</target>
        </trans-unit>
        <trans-unit id="e1542d909dfa9830e3fd468bbce194e152b8df89" translate="yes" xml:space="preserve">
          <source>Provides services for reporting compilation errors to the user. Primary entry point is &lt;code&gt;write()&lt;/code&gt;.</source>
          <target state="translated">コンパイルエラーをユーザーに報告するためのサービスを提供します。プライマリエントリポイントは &lt;code&gt;write()&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f6cb08879ec902d7609779893091c7659604b95c" translate="yes" xml:space="preserve">
          <source>Provides simple command aliasing.</source>
          <target state="translated">シンプルなコマンドエイリアスを提供します。</target>
        </trans-unit>
        <trans-unit id="4b21fdc83279e71250f76aa99d1fd386ee861d15" translate="yes" xml:space="preserve">
          <source>Provides support for the Groovy Shell (aka.</source>
          <target state="translated">Groovy Shell(別名)のサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="1ec11c681e175165fc42f0c1fc7ba0a1ae8bb250" translate="yes" xml:space="preserve">
          <source>Provides the command instance with the registry, for aliasing support.</source>
          <target state="translated">エイリアシングのサポートのために、レジストリと共にコマンドインスタンスを提供します。</target>
        </trans-unit>
        <trans-unit id="1e5b80aa93c2c541072cbd984cf3cdf393334bbe" translate="yes" xml:space="preserve">
          <source>Provides the interface required for command extensions.</source>
          <target state="translated">コマンド拡張に必要なインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="5bb0cf9817df6d03927050160133b62bb6b37b1f" translate="yes" xml:space="preserve">
          <source>Provides the source text for an assertion statement and translates coordinates in the original source text to coordinates relative to the assertion's (normalized) source text.</source>
          <target state="translated">アサーション文のソース・テキストを提供し、元のソース・テキストの座標をアサーションの (正規化された)ソース・テキストに対する相対座標に変換します。</target>
        </trans-unit>
        <trans-unit id="1bc2768aab610b0eb66d89bb03adfb5d79388519" translate="yes" xml:space="preserve">
          <source>Provides the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;CharSequence&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CharSequence&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="779c8688dc0dd7681acaf53541dea20f5f63cb78" translate="yes" xml:space="preserve">
          <source>Provides the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;Matcher&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Matcher&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="fb65f6441f6da27ff4de4a002ba4e7fdba1c7375" translate="yes" xml:space="preserve">
          <source>Provides the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="a92cae25a2b2ea575c954a9cd5fbd08cee906ad2" translate="yes" xml:space="preserve">
          <source>Provides the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringBuffer&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="612ccca8eb914f6ad69bc92ccfc5689771e72a93" translate="yes" xml:space="preserve">
          <source>Provides the standard Groovy &lt;code&gt;size()&lt;/code&gt; method for &lt;code&gt;StringBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringBuilder&lt;/code&gt; の標準のGroovysize &lt;code&gt;size()&lt;/code&gt; メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="4a07762caa1f081e10f17939a7173be95a03f968" translate="yes" xml:space="preserve">
          <source>Proxy builders are useful for changing the building context, thus enabling mix &amp;amp; match builders.</source>
          <target state="translated">プロキシビルダーは、ビルドコンテキストを変更するのに役立ちます。これにより、ミックスアンドマッチビルダーが可能になります。</target>
        </trans-unit>
        <trans-unit id="a470cc3e6b65442f82e12d85b983734d8ea04117" translate="yes" xml:space="preserve">
          <source>Purple Technology</source>
          <target state="translated">パープルテクノロジー</target>
        </trans-unit>
        <trans-unit id="b91ba2d1318a6260c71d32fae6060d1ea2c17dcf" translate="yes" xml:space="preserve">
          <source>Push parenLevel here and reset whenever inside '{x}'.</source>
          <target state="translated">ここでparenLevelを押して、'{x}'内に入るたびにリセットする。</target>
        </trans-unit>
        <trans-unit id="6e2028977df7aa9e412123248e68dee8ebd6bbf1" translate="yes" xml:space="preserve">
          <source>Pushes a binary expression into the binary expression stack.</source>
          <target state="translated">バイナリ式をバイナリ式スタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="6180e517744890bbaacebc1bc3fead7ec9732dda" translate="yes" xml:space="preserve">
          <source>Pushes a class into the classes stack.</source>
          <target state="translated">クラスをクラススタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="843ed9dc8bc1158a002f82ddcd3c49be1af7e1d5" translate="yes" xml:space="preserve">
          <source>Pushes a closure expression into the closure expression stack.</source>
          <target state="translated">クロージャ式をクロージャ式スタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="e9a6e604d2b8d2cc68c73e11c366d82ee144d25c" translate="yes" xml:space="preserve">
          <source>Pushes a method call into the method call stack.</source>
          <target state="translated">メソッドコールをメソッドコールスタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="490c9dfd4fdc02613485ddc623d7f439cd133e54" translate="yes" xml:space="preserve">
          <source>Pushes a method into the method stack.</source>
          <target state="translated">メソッドをメソッドスタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="a87428a9beee1c183967d564daea88d578efec01" translate="yes" xml:space="preserve">
          <source>Pushes a new context on the stack.</source>
          <target state="translated">スタック上に新しいコンテキストをプッシュします。</target>
        </trans-unit>
        <trans-unit id="58bf4b4f98ac13e928aeaef3eb42f9610feda870" translate="yes" xml:space="preserve">
          <source>Pushes a switch statement into the switch statement stack.</source>
          <target state="translated">スイッチ文をスイッチ文スタックにプッシュします。</target>
        </trans-unit>
        <trans-unit id="e6bc186f9fe561a8ed551932312afaa53b320f54" translate="yes" xml:space="preserve">
          <source>QName corresponding to the given String</source>
          <target state="translated">与えられた文字列に対応するQName</target>
        </trans-unit>
        <trans-unit id="9a1befe7ea73afbc8a1eba4a59fc3503706855bd" translate="yes" xml:space="preserve">
          <source>Query the &quot;assert&quot; keyword state</source>
          <target state="translated">キーワード &quot;assert&quot; の状態を問い合わせます。</target>
        </trans-unit>
        <trans-unit id="95081c30291d5411d562587da383a323c7ad5ce1" translate="yes" xml:space="preserve">
          <source>Query the &quot;enum&quot; keyword state</source>
          <target state="translated">キーワード &quot;enum&quot; の状態を問い合わせます。</target>
        </trans-unit>
        <trans-unit id="709b5ec3fbb5e12736df33b02c4f29bf82fc1a75" translate="yes" xml:space="preserve">
          <source>RHS instance field. should move most of the code in the BytecodeHelper</source>
          <target state="translated">RHS インスタンスフィールドを使用している場合は、バイトコードヘルパーのコードの大部分を移動しなければなりません。</target>
        </trans-unit>
        <trans-unit id="f3395e31d62a03140bcf2cc9a3088a07aa4fab58" translate="yes" xml:space="preserve">
          <source>Randomly reorders the elements of the specified array using the specified random instance as the source of randomness.</source>
          <target state="translated">指定されたランダムインスタンスを元に、指定された配列の要素をランダムに並べ替えます。</target>
        </trans-unit>
        <trans-unit id="5f97f8a3dd653ed5ff6e1bebc7d3de96bbde6691" translate="yes" xml:space="preserve">
          <source>Randomly reorders the elements of the specified array.</source>
          <target state="translated">指定された配列の要素をランダムに並べ替えます。</target>
        </trans-unit>
        <trans-unit id="c1dd98486f4d41fb59c5c6cafcb78e21646fd1e8" translate="yes" xml:space="preserve">
          <source>Randomly reorders the elements of the specified list using the specified random instance as the source of randomness.</source>
          <target state="translated">指定されたランダムインスタンスを元に、指定されたリストの要素をランダムに並べ替えます。</target>
        </trans-unit>
        <trans-unit id="b3d59ead4782885c11fb3611d9b2608da787b90e" translate="yes" xml:space="preserve">
          <source>Randomly reorders the elements of the specified list.</source>
          <target state="translated">指定されたリストの要素をランダムに並べ替えます。</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="b99ceec3326c4183e332eab544418e17a785f09d" translate="yes" xml:space="preserve">
          <source>Raw error output stream.</source>
          <target state="translated">生のエラー出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="c36356389deed3d88e454ac87a2ed4c5b7eb782f" translate="yes" xml:space="preserve">
          <source>Raw input stream.</source>
          <target state="translated">生の入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="597f855ba1c8eb9042afef14a3c52ae286d181a4" translate="yes" xml:space="preserve">
          <source>Raw output stream.</source>
          <target state="translated">生の出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="3e2328757ae1c800d4e10ae414e17971850a69f5" translate="yes" xml:space="preserve">
          <source>Read a single character.</source>
          <target state="translated">一文字を読む。</target>
        </trans-unit>
        <trans-unit id="7480f3d6ce6ff15abfadbbb26d79e7ab947222e5" translate="yes" xml:space="preserve">
          <source>Read a single, whole line from the given Reader.</source>
          <target state="translated">与えられたリーダーの中から、一行を丸ごと読む。</target>
        </trans-unit>
        <trans-unit id="714bde10b4f22c7d62a6737ba396fa79ea18cda5" translate="yes" xml:space="preserve">
          <source>Read a single, whole line from the given Reader. This method is designed for use with Readers that support the &lt;code&gt;mark()&lt;/code&gt; operation like BufferReader. It has a fallback behavior for Readers that don't support mark() but the behavior doesn't correctly detect multi-character line termination (e.g. carriage return followed by linefeed). We recommend for Readers that don't support mark() you consider using one of the following methods instead: eachLine, readLines, or iterator.</source>
          <target state="translated">指定されたリーダーから1行全体を読み取ります。このメソッドは、BufferReaderのような &lt;code&gt;mark()&lt;/code&gt; 操作をサポートするリーダーで使用するために設計されています。mark（）をサポートしないリーダーのフォールバック動作がありますが、この動作は複数文字の行の終了を正しく検出しません（たとえば、キャリッジリターンとそれに続く改行）。mark（）をサポートしていないリーダーには、代わりに、eachLine、readLines、またはiteratorのいずれかのメソッドの使用を検討することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8bc0f798b58f6535b927f93ea275b8efcd9a1bc6" translate="yes" xml:space="preserve">
          <source>Read in lines and execute them.</source>
          <target state="translated">行で読み込んで実行します。</target>
        </trans-unit>
        <trans-unit id="34ed566a584258bde48ca4683e3764d84763a71b" translate="yes" xml:space="preserve">
          <source>Read the content of the BufferedReader and return it as a String.</source>
          <target state="translated">BufferedReaderの内容を読み込み、Stringとして返します。</target>
        </trans-unit>
        <trans-unit id="5b54fb1e0bf4b73e8800016c32e564d1f926ae43" translate="yes" xml:space="preserve">
          <source>Read the content of the BufferedReader and return it as a String. The BufferedReader is closed afterwards.</source>
          <target state="translated">BufferedReaderの内容を読み込み、Stringとして返します。BufferedReaderはその後閉じられます。</target>
        </trans-unit>
        <trans-unit id="c472ad801ede91099c04fd066f7e1f1bf730743f" translate="yes" xml:space="preserve">
          <source>Read the content of the File and returns it as a String.</source>
          <target state="translated">ファイルの内容を読み込み、文字列として返します。</target>
        </trans-unit>
        <trans-unit id="1d5eb2c44f02df89580120a6b64c6d368cb7ca31" translate="yes" xml:space="preserve">
          <source>Read the content of the File and returns it as a byte[].</source>
          <target state="translated">ファイルの内容を読み込み、byte[]として返します。</target>
        </trans-unit>
        <trans-unit id="3ae79bf17c99cc95bfb554034f7ca4c19a6231f3" translate="yes" xml:space="preserve">
          <source>Read the content of the File using the specified encoding and return it as a String.</source>
          <target state="translated">指定したエンコーディングでファイルの内容を読み込み、文字列として返します。</target>
        </trans-unit>
        <trans-unit id="90e484ca962748f48b1d7cb66a7dcccc5cccebbd" translate="yes" xml:space="preserve">
          <source>Read the content of the Path and returns it as a String.</source>
          <target state="translated">パスの内容を読み込み、文字列として返します。</target>
        </trans-unit>
        <trans-unit id="3ff786aa474ed75808d507ee43e4ef26cc0440f7" translate="yes" xml:space="preserve">
          <source>Read the content of the Path and returns it as a byte[].</source>
          <target state="translated">Pathの内容を読み込み、byte[]として返します。</target>
        </trans-unit>
        <trans-unit id="5d3be8bd4440273a054e175b782869ba8589dd64" translate="yes" xml:space="preserve">
          <source>Read the content of the Path using the specified encoding and return it as a String.</source>
          <target state="translated">指定したエンコーディングを使用してPathの内容を読み込み、文字列として返します。</target>
        </trans-unit>
        <trans-unit id="5fc55013a14225e5c3330d83d5e3dfbd677e1246" translate="yes" xml:space="preserve">
          <source>Read the content of the Reader and return it as a String.</source>
          <target state="translated">Readerの内容を読み込んで、文字列として返します。</target>
        </trans-unit>
        <trans-unit id="aaa4d16d20e76cbad655e0f46db7539ff4c0fabb" translate="yes" xml:space="preserve">
          <source>Read the content of the Reader and return it as a String. The reader is closed before this method returns.</source>
          <target state="translated">リーダーの内容を読み込んで、それを文字列として返します。このメソッドが戻る前にリーダーは閉じられます。</target>
        </trans-unit>
        <trans-unit id="35abaa004a0ab72dc6d3d41058844fd0c40eb7a1" translate="yes" xml:space="preserve">
          <source>Read the content of this InputStream and return it as a String.</source>
          <target state="translated">このInputStreamの内容を読み込み、Stringとして返します。</target>
        </trans-unit>
        <trans-unit id="6471244248bd85597d8353b9309b85fa4c526bdb" translate="yes" xml:space="preserve">
          <source>Read the content of this InputStream and return it as a String. The stream is closed before this method returns.</source>
          <target state="translated">このInputStreamの内容を読み込み、Stringとして返します。このメソッドが戻る前にストリームは閉じられます。</target>
        </trans-unit>
        <trans-unit id="5502eb0c28043ac19ed178e149b5e312b3889d19" translate="yes" xml:space="preserve">
          <source>Read the content of this InputStream and return it as a byte[].</source>
          <target state="translated">このInputStreamの内容を読み込み、byte[]として返す。</target>
        </trans-unit>
        <trans-unit id="0748ff7ec2cb4219fbcdd013a8af7c2eac7f53d7" translate="yes" xml:space="preserve">
          <source>Read the content of this InputStream and return it as a byte[]. The stream is closed before this method returns.</source>
          <target state="translated">このInputStreamの内容を読み込み、byte[]として返します。このメソッドが戻る前にストリームは閉じられます。</target>
        </trans-unit>
        <trans-unit id="c6b2bda7f2452b5fc8632ddcdc3db7b846791cee" translate="yes" xml:space="preserve">
          <source>Read the content of this InputStream using specified charset and return it as a String.</source>
          <target state="translated">指定された文字セットを用いてInputStreamの内容を読み込み、Stringとして返します。</target>
        </trans-unit>
        <trans-unit id="035d61f75bc9941f42c7e67c7766f45feebab9c7" translate="yes" xml:space="preserve">
          <source>Read the content of this InputStream using specified charset and return it as a String. The stream is closed before this method returns.</source>
          <target state="translated">指定されたcharsetを使用してInputStreamの内容を読み込み、Stringとして返します。このメソッドが戻る前にストリームは閉じられます。</target>
        </trans-unit>
        <trans-unit id="ef0d7c1eed42e7350e4f4e758c861d19618f60a1" translate="yes" xml:space="preserve">
          <source>Read the content of this URL and returns it as a String.</source>
          <target state="translated">このURLの内容を読み込み、文字列として返します。</target>
        </trans-unit>
        <trans-unit id="b7f7e0bf920dee75489f9ed869bb72e3c32bfe8b" translate="yes" xml:space="preserve">
          <source>Read the content of this URL and returns it as a String. The default connection parameters can be modified by adding keys to the</source>
          <target state="translated">この URL の内容を読み込み、文字列として返します。デフォルトの接続パラメータは、キーを</target>
        </trans-unit>
        <trans-unit id="d8e97b556f8bcb8b72500ea698c5c86e67b172b6" translate="yes" xml:space="preserve">
          <source>Read the content of this URL and returns it as a byte[].</source>
          <target state="translated">このURLの内容を読み込み、byte[]として返します。</target>
        </trans-unit>
        <trans-unit id="a32496a9c0f78e1d110ed55a43bd9361895082ca" translate="yes" xml:space="preserve">
          <source>Read the content of this URL and returns it as a byte[]. The default connection parameters can be modified by adding keys to the</source>
          <target state="translated">このURLの内容を読み込み、byte[]として返します。にキーを追加することで、デフォルトの接続パラメータを変更することができます。</target>
        </trans-unit>
        <trans-unit id="ddc9360b0cb446f70200dbadb7483d03a79e2c08" translate="yes" xml:space="preserve">
          <source>Read the data from this URL and return it as a String.</source>
          <target state="translated">このURLからデータを読み込み、文字列として返します。</target>
        </trans-unit>
        <trans-unit id="7d8a92fa4f92cbe3942cb2a1714b003e2490eff6" translate="yes" xml:space="preserve">
          <source>Read the data from this URL and return it as a String. The connection stream is closed before this method returns.</source>
          <target state="translated">この URL からデータを読み込み、String として返します。このメソッドが戻る前に接続ストリームは閉じられます。</target>
        </trans-unit>
        <trans-unit id="78c697af0a16fc752d9833104c92c9caa3bba346" translate="yes" xml:space="preserve">
          <source>Read the sepcified number of characters into the array.</source>
          <target state="translated">セプシファイドされた文字数を配列に読み込みます。</target>
        </trans-unit>
        <trans-unit id="c4d714e065a4986363bd02009c0bbd8bc8621e44" translate="yes" xml:space="preserve">
          <source>Read the text of the output stream of the Process.</source>
          <target state="translated">プロセスの出力ストリームのテキストを読み込みます。</target>
        </trans-unit>
        <trans-unit id="d7559a425ed53b9b28f2760db240c1a7565a549a" translate="yes" xml:space="preserve">
          <source>Read the text of the output stream of the Process. Closes all the streams associated with the process after retrieving the text.</source>
          <target state="translated">プロセスの出力ストリームのテキストを読み込みます。テキストを取得した後、プロセスに関連付けられたすべてのストリームを閉じます。</target>
        </trans-unit>
        <trans-unit id="088f87a0098f34183d7f12c963653919c7131973" translate="yes" xml:space="preserve">
          <source>Reader.close</source>
          <target state="translated">Reader.close</target>
        </trans-unit>
        <trans-unit id="f4c8eeb7b80751078f5e7601e6bfd8382fa2c59d" translate="yes" xml:space="preserve">
          <source>Reader.read</source>
          <target state="translated">Reader.read</target>
        </trans-unit>
        <trans-unit id="3b536020ad286efc94f3e178579dae430ef426ec" translate="yes" xml:space="preserve">
          <source>ReaderSource</source>
          <target state="translated">ReaderSource</target>
        </trans-unit>
        <trans-unit id="60aab1966fa1b632f7a5476c2e7cc61b28e8ded6" translate="yes" xml:space="preserve">
          <source>Reads a line of text.</source>
          <target state="translated">テキストの行を読み込みます。</target>
        </trans-unit>
        <trans-unit id="1592d677500d47a7496fbf7cf7c24e60a0f64626" translate="yes" xml:space="preserve">
          <source>Reads a line of text. A line is considered to be terminated by any one of a line feed ('\n'), a carriage return ('\r'), or a carriage return followed immediately by a linefeed.</source>
          <target state="translated">Reads a line of text.A line is considered to terminated by any one of a line feed ('\n'),a carriage return ('\r')or a carriage return followed immediately by a linefeed.</target>
        </trans-unit>
        <trans-unit id="be98f9575aa50d7551713d0c240099e5595bc6eb" translate="yes" xml:space="preserve">
          <source>Reads a number from the character source.</source>
          <target state="translated">文字ソースから数字を読み込みます。</target>
        </trans-unit>
        <trans-unit id="81cd1fcb11855732eca76438c65592a41c1ba70c" translate="yes" xml:space="preserve">
          <source>Reads a single character.</source>
          <target state="translated">1文字を読み込みます。</target>
        </trans-unit>
        <trans-unit id="df6af16986cd8c20719824f50efd8254439a9375" translate="yes" xml:space="preserve">
          <source>Reads characters from the underlying reader.</source>
          <target state="translated">下敷きの文字を読む。</target>
        </trans-unit>
        <trans-unit id="991154adc4be58376b9cf8cbd14ab4ca0c43e42b" translate="yes" xml:space="preserve">
          <source>Reads characters into a portion of an array.</source>
          <target state="translated">配列の一部に文字を読み込みます。</target>
        </trans-unit>
        <trans-unit id="f22c885349c21a726c3598c02582ef8d6e01de3d" translate="yes" xml:space="preserve">
          <source>Reads characters into an array.</source>
          <target state="translated">文字を配列に読み込みます。</target>
        </trans-unit>
        <trans-unit id="d838d05652e7b0fdd19d8793251b5c8eadd4525c" translate="yes" xml:space="preserve">
          <source>Reads characters into an array. This method will block until some input is available, an I/O error occurs, or the end of the stream is reached.</source>
          <target state="translated">文字を配列に読み込みます。このメソッドは、いくつかの入力が利用可能になるか、I/O エラーが発生するか、ストリームの終了に達するまでブロックします。</target>
        </trans-unit>
        <trans-unit id="579077e18da2c946b67df001ffcf69de7b12ac03" translate="yes" xml:space="preserve">
          <source>Reads the InputStream from this URL, passing a byte[] and a number of bytes to the given closure.</source>
          <target state="translated">このURLからInputStreamを読み込み、与えられたクロージャにbyte[]とバイト数を渡します。</target>
        </trans-unit>
        <trans-unit id="ef037127cd4f6cc5cd05097df41fb3fa52af3489" translate="yes" xml:space="preserve">
          <source>Reads the InputStream from this URL, passing a byte[] and a number of bytes to the given closure. The URL stream will be closed before this method returns.</source>
          <target state="translated">このURLからInputStreamを読み込み、与えられたクロージャにbyte[]とバイト数を渡します。このメソッドが戻る前に URL ストリームは閉じられます。</target>
        </trans-unit>
        <trans-unit id="8597f1a9999e0fc76a5b27d46ea63bd936e4c484" translate="yes" xml:space="preserve">
          <source>Reads the InputStream from this URL, passing each byte to the given closure.</source>
          <target state="translated">このURLからInputStreamを読み込み、各バイトを与えられたクロージャに渡します。</target>
        </trans-unit>
        <trans-unit id="01e2c67ca551ddd863ead1f28234e70ebbae23ca" translate="yes" xml:space="preserve">
          <source>Reads the InputStream from this URL, passing each byte to the given closure. The URL stream will be closed before this method returns.</source>
          <target state="translated">この URL から InputStream を読み込み、各バイトを与えられたクロージャに渡します。URL ストリームは、このメソッドが戻る前に閉じられます。</target>
        </trans-unit>
        <trans-unit id="0a1832c849d04fdc6f6f056f8617ad55c5b53feb" translate="yes" xml:space="preserve">
          <source>Reads the URL contents into a list, with one element for each line.</source>
          <target state="translated">URL の内容を、1 行に 1 つの要素を持つリストに読み込みます。</target>
        </trans-unit>
        <trans-unit id="535b058c22d00d578a87eb1048aa59a3eb0b9202" translate="yes" xml:space="preserve">
          <source>Reads the content of the file into a byte array.</source>
          <target state="translated">ファイルの内容をバイト配列に読み込みます。</target>
        </trans-unit>
        <trans-unit id="21bedcd1585fa407b7cd1e5a1c60803a5cdd1b35" translate="yes" xml:space="preserve">
          <source>Reads the file into a list of Strings, with one item for each line.</source>
          <target state="translated">ファイルを、各行に1つの項目を持つ文字列のリストに読み込みます。</target>
        </trans-unit>
        <trans-unit id="bf70b1d200024fbb4139d5fadc9b00a3946724a4" translate="yes" xml:space="preserve">
          <source>Reads the reader into a list of Strings, with one entry for each line.</source>
          <target state="translated">各行に1つのエントリを持つ文字列のリストに読者を読み込みます。</target>
        </trans-unit>
        <trans-unit id="43586c586fbba96e0b9847f28d2e225f237c8eea" translate="yes" xml:space="preserve">
          <source>Reads the reader into a list of Strings, with one entry for each line. The reader is closed before this method returns.</source>
          <target state="translated">各行に1つのエントリを持つStringsのリストにリーダを読み込みます。このメソッドが戻る前にリーダは閉じられます。</target>
        </trans-unit>
        <trans-unit id="8122482c381fa6d30a2a62e0c3ac1f18ee6fa226" translate="yes" xml:space="preserve">
          <source>Reads the stream into a list, with one element for each line.</source>
          <target state="translated">各行に1つの要素を持つリストにストリームを読み込みます。</target>
        </trans-unit>
        <trans-unit id="ca5375ceeeafc83f0bd63bc1e566cb189d9945ae" translate="yes" xml:space="preserve">
          <source>Realizes an unsharp equal for the class.</source>
          <target state="translated">クラスのアンシャープイコールを実現します。</target>
        </trans-unit>
        <trans-unit id="4264f094e48df75a983e76d735e142b408920ad3" translate="yes" xml:space="preserve">
          <source>Realizes an unsharp equal for the class. In general we return true if the provided arguments are the same. But we will also return true if our argument class is a wrapper for the parameter class. For example the parameter is an int and the argument class is a wrapper.</source>
          <target state="translated">クラスのアンシャープイコールを実現します。一般的に、提供された引数が同じであれば真を返します。しかし、引数クラスがパラメータクラスのラッパーである場合も真を返します。例えば、パラメータがintであり、引数クラスがラッパーである場合です。</target>
        </trans-unit>
        <trans-unit id="026db9fde771b6cf5b0a6f349a6f8f3a2e2ef8c4" translate="yes" xml:space="preserve">
          <source>Realizes the follow shortcuts:</source>
          <target state="translated">フォローのショートカットを実現</target>
        </trans-unit>
        <trans-unit id="8bacf5c8f8e9d43cc002989de42a0e45c8864fbb" translate="yes" xml:space="preserve">
          <source>Reassigned final variables/parameters</source>
          <target state="translated">最終的な変数/パラメータの再割り当て</target>
        </trans-unit>
        <trans-unit id="be8c585563b375219a25f3cf9d6c4e18269cc0a3" translate="yes" xml:space="preserve">
          <source>Reconfigures the ProcessingUnit.</source>
          <target state="translated">ProcessingUnit を再設定します。</target>
        </trans-unit>
        <trans-unit id="02b0b83d62c288c238e7eefcaeba080608aec69d" translate="yes" xml:space="preserve">
          <source>Record the index and token type of the current token while emitting tokens.</source>
          <target state="translated">トークンを放出しながら、現在のトークンのインデックスとトークンタイプを記録します。</target>
        </trans-unit>
        <trans-unit id="03e3f27a2186d283ce4a06545e710f2a9d7a2a3c" translate="yes" xml:space="preserve">
          <source>Records declared and referenced variabes for a given scope. Helps determine variable sharing across closure and method boundaries.</source>
          <target state="translated">指定されたスコープの宣言された変数と参照された変数を記録します。クロージャとメソッドの境界での変数の共有を決定するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="4137fa8b9e0e6f6d351e5276039c9cf504e711e0" translate="yes" xml:space="preserve">
          <source>Records values produced during evaluation of an assertion statement's truth expression.</source>
          <target state="translated">アサーション文の真理表現の評価中に生成された値を記録します。</target>
        </trans-unit>
        <trans-unit id="dd2dde2210013ab8ac9b71b8ac9ebaa9a1d30c0a" translate="yes" xml:space="preserve">
          <source>Recreate src.</source>
          <target state="translated">srcを再作成します。</target>
        </trans-unit>
        <trans-unit id="264608b77bdda5bcb43cb007fde5d801dfa9d2fd" translate="yes" xml:space="preserve">
          <source>Recursive delegation to your own class is not allowed</source>
          <target state="translated">自分のクラスへの再帰的な委任は許可されていません。</target>
        </trans-unit>
        <trans-unit id="c3fbf423e9b55676c7ef292a852b8d2f27fb365d" translate="yes" xml:space="preserve">
          <source>Recursively iterates through this Iterable transforming each non-Collection value into a new value using the &lt;code&gt;transform&lt;/code&gt; closure.</source>
          <target state="translated">このIterableを再帰的に繰り返し、 &lt;code&gt;transform&lt;/code&gt; クロージャを使用して、コレクション以外の各値を新しい値に変換します。</target>
        </trans-unit>
        <trans-unit id="75e2ac1c65c43f0bbdbbe071e3b54a621344f11e" translate="yes" xml:space="preserve">
          <source>Recursively iterates through this Iterable transforming each non-Collection value into a new value using the &lt;code&gt;transform&lt;/code&gt; closure. Returns a potentially nested collection of transformed values.</source>
          <target state="translated">このIterableを再帰的に繰り返し、 &lt;code&gt;transform&lt;/code&gt; クロージャを使用して、コレクション以外の各値を新しい値に変換します。変換された値の潜在的にネストされたコレクションを返します。</target>
        </trans-unit>
        <trans-unit id="d63dc0e3f76ee8418fad3ef0d7728e04b0b83ca0" translate="yes" xml:space="preserve">
          <source>Recursively iterates through this Iterable transforming each non-Collection value into a new value using the closure as a transformer.</source>
          <target state="translated">この反復可能な反復処理を再帰的に行い、クロージャを変換器として使用して、Collection 以外の各値を新しい値に変換します。</target>
        </trans-unit>
        <trans-unit id="88a778b841990c6338906b4be2604840bd42e3ba" translate="yes" xml:space="preserve">
          <source>Recursively iterates through this Iterable transforming each non-Collection value into a new value using the closure as a transformer. Returns a potentially nested list of transformed values.</source>
          <target state="translated">このイテレータブルを再帰的に反復処理し、クロージャをトランスフォーマとして使用して、Collection 以外の各値を新しい値に変換します。変換された値の入れ子になる可能性のあるリストを返します。</target>
        </trans-unit>
        <trans-unit id="b7142136c6d94fef281fe8b72373544b02805a5e" translate="yes" xml:space="preserve">
          <source>Recursively iterates through this collection transforming each non-Collection value into a new value using the closure as a transformer.</source>
          <target state="translated">このコレクションを再帰的に反復処理し、クロージャをトランスフォーマとして使用して、コレクション以外の各値を新しい値に変換します。</target>
        </trans-unit>
        <trans-unit id="25dad7fd63ab4b6d846388b767f8bc553d6f09f2" translate="yes" xml:space="preserve">
          <source>Recursively iterates through this collection transforming each non-Collection value into a new value using the closure as a transformer. Returns a potentially nested list of transformed values.</source>
          <target state="translated">こ の コ レ ク シ ョ ン を再帰的に反復処理 し て、 コ レ ク シ ョ ン以外の各値を、 クロージャを変換器 と し て使用 し て新 し い値に変換 し ます。変換された値の入れ子になる可能性のあるリストを返します。</target>
        </trans-unit>
        <trans-unit id="0fc1919e74d871c69902214b4a6ec3640282174e" translate="yes" xml:space="preserve">
          <source>Recursively processes each descendant subdirectory in this directory.</source>
          <target state="translated">このディレクトリ内の各子孫サブディレクトリを再帰的に処理します。</target>
        </trans-unit>
        <trans-unit id="330e5914cb308316759b76263861b65190a2dc92" translate="yes" xml:space="preserve">
          <source>Recursively processes each descendant subdirectory in this directory. Processing consists of calling &lt;code&gt;closure&lt;/code&gt; passing it the current subdirectory and then recursively processing that subdirectory. Regular files are ignored during traversal.</source>
          <target state="translated">このディレクトリ内の各子孫サブディレクトリを再帰的に処理します。処理は、 &lt;code&gt;closure&lt;/code&gt; を呼び出して現在のサブディレクトリを渡し、そのサブディレクトリを再帰的に処理することで構成されます。通常のファイルはトラバーサル中に無視されます。</target>
        </trans-unit>
        <trans-unit id="799b496b24786e439b05d5adeb9e91ac48180b89" translate="yes" xml:space="preserve">
          <source>Reduction</source>
          <target state="translated">Reduction</target>
        </trans-unit>
        <trans-unit id="deac27cd31dfa1221a92e0efe1e670db005d1266" translate="yes" xml:space="preserve">
          <source>Reference JLS &quot;14.20.3. try-with-resources&quot;(https://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html)</source>
          <target state="translated">参考 JLS &quot;14.20.3.try-with-resources&quot;(https://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html)</target>
        </trans-unit>
        <trans-unit id="a9d6e2e6a21ef8da26a71d722624d63b2f01e1ab" translate="yes" xml:space="preserve">
          <source>Reference to the Runtime Registry to be used by the Groovy run-time system to find classes capable of running scripts</source>
          <target state="translated">Groovy ランタイム システムがスクリプトを実行できるクラスを見つけるために使用するランタイム レジストリへの参照</target>
        </trans-unit>
        <trans-unit id="75e80fd852e759cdd988e14930679b0c92995a93" translate="yes" xml:space="preserve">
          <source>ReferenceResolver</source>
          <target state="translated">ReferenceResolver</target>
        </trans-unit>
        <trans-unit id="57cdbb75f50cc32fd0fc60c7b65b9c108f5534af" translate="yes" xml:space="preserve">
          <source>Reflection API to find the method corresponding to the default implementation of a trait, given a bridge method.</source>
          <target state="translated">ブリッジメソッドを指定して、形質のデフォルト実装に対応するメソッドを見つけるReflection API。</target>
        </trans-unit>
        <trans-unit id="e23b5470065b6eae90929977d771904245e63ae0" translate="yes" xml:space="preserve">
          <source>Reflection API to indicate whether some method is a bridge method to the default implementation of a trait.</source>
          <target state="translated">あるメソッドが形質のデフォルト実装へのブリッジメソッドであるかどうかを示すReflection API。</target>
        </trans-unit>
        <trans-unit id="3db36c4606cd0601b88a8dee34ae41459c49c76d" translate="yes" xml:space="preserve">
          <source>Reflector</source>
          <target state="translated">Reflector</target>
        </trans-unit>
        <trans-unit id="2d15b87f21b9c64268de4940a4fbdbe87a544a36" translate="yes" xml:space="preserve">
          <source>Reflector creation helper. This class is used to define the Reflector classes. For each ClassLoader such a loader will be created by MetaClass. Special about this loader is, that it knows the classes form the Groovy Runtime. The Reflector class is resolved in different ways: During the definition of a class Reflector will resolve to the Reflector class of the runtime, even if there is another Reflector class in the parent loader. After the new class is defined Reflector will resolve like other Groovy classes. This loader is able to resolve all Groovy classes even if the parent does not know them, but the parent serves first (Reflector during a class definition is different).</source>
          <target state="translated">リフレクタ作成ヘルパー。リフレクタクラスを定義するためのクラスです。各ClassLoaderに対して、このようなローダーがMetaClassによって作成されます。このローダーの特別な点は、Groovyランタイムのクラスを知っていることです。Reflectorクラスは、さまざまな方法で解決されます。クラスの定義中に、親ローダに別のReflectorクラスがあっても、ReflectorはランタイムのReflectorクラスに解決されます。新しいクラスが定義されると、Reflector は他の Groovy クラスと同様に解決されます。このローダーは、親が知らなくても、親が先にサービスを提供している場合でも、すべてのGroovyクラスを解決することができます(クラス定義中のReflectorは異なります)。</target>
        </trans-unit>
        <trans-unit id="b81d9a62cf2086805c3c1cd3684860405b445eb2" translate="yes" xml:space="preserve">
          <source>Registers Command classes from an XML file like:</source>
          <target state="translated">などのXMLファイルからコマンドクラスを登録します。</target>
        </trans-unit>
        <trans-unit id="0160e8d93eb80e2d0e1df4d0d0f0591c078c82a1" translate="yes" xml:space="preserve">
          <source>Registers a closure that will be called when the specified type or subtype is serialized.</source>
          <target state="translated">指定されたタイプまたはサブタイプがシリアライズされたときに呼び出されるクロージャを登録します。</target>
        </trans-unit>
        <trans-unit id="aa6bc2e85eaa5060e08ecdfc12dda4254d8a9340" translate="yes" xml:space="preserve">
          <source>Registers a converter that will be called when a type it handles is encountered.</source>
          <target state="translated">扱う型に遭遇したときに呼び出されるコンバータを登録します。</target>
        </trans-unit>
        <trans-unit id="120aaa46460ec401a888d519d22be2ded6f6ba3c" translate="yes" xml:space="preserve">
          <source>Registers a factory for a JavaBean.</source>
          <target state="translated">JavaBeanのファクトリーを登録します。</target>
        </trans-unit>
        <trans-unit id="dd2e2b5deff55b797ed5393c2dba429db5a997bf" translate="yes" xml:space="preserve">
          <source>Registers a factory for a node name.</source>
          <target state="translated">ノード名のファクトリを登録します。</target>
        </trans-unit>
        <trans-unit id="c702feb54dc26f9620f6f890c1bbdeea8460e3f0" translate="yes" xml:space="preserve">
          <source>Registers a modified ExpandoMetaClass with the creation handle</source>
          <target state="translated">修正されたExpandoMetaClassを作成ハンドルで登録します。</target>
        </trans-unit>
        <trans-unit id="0672f1aed878d82da40771bca5461366fdcba414" translate="yes" xml:space="preserve">
          <source>Registers a new MetaClass in the registry to customize the type</source>
          <target state="translated">新しいMetaClassをレジストリに登録し、タイプをカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="98bc0916e721b26db6fb41b4830f82c175c76cfa" translate="yes" xml:space="preserve">
          <source>Registers a new bean property</source>
          <target state="translated">新しいBeanプロパティを登録します。</target>
        </trans-unit>
        <trans-unit id="c0ea5e59705d97fcdd80ee9d3b8e6579d9d9bb6a" translate="yes" xml:space="preserve">
          <source>Registers a new instance method for the given method name and closure on this MetaClass</source>
          <target state="translated">指定されたメソッド名とクロージャの新しいインスタンス・メソッドをこのMetaClassに登録します。</target>
        </trans-unit>
        <trans-unit id="9237954be5c3d000dd9cc2e749bbe2addba3ffbf" translate="yes" xml:space="preserve">
          <source>Registers a new static method for the given method name and closure on this MetaClass</source>
          <target state="translated">指定されたメソッド名とクロージャのための新しいスタティック・メソッドをこのMetaClassに登録します。</target>
        </trans-unit>
        <trans-unit id="812fac033fa956000e4ef375f7d208bba9d4d081" translate="yes" xml:space="preserve">
          <source>Registers a runner with the specified key.</source>
          <target state="translated">指定されたキーでランナーを登録します。</target>
        </trans-unit>
        <trans-unit id="21a6167e3383e1e18d5db5c4b1dbae21b5d37efe" translate="yes" xml:space="preserve">
          <source>Registers listeners for operation calls (i.e. method, getter, and setter calls) when invoked on this bean from the MBeanServer.</source>
          <target state="translated">MBeanServerからこのBean上で呼び出されたときの操作呼び出し(メソッド、ゲッター、セッター呼び出し)のためのリスナーを登録します。</target>
        </trans-unit>
        <trans-unit id="cb58d6ab5a93917b98542cba6cbd1cb33d89037f" translate="yes" xml:space="preserve">
          <source>Registers listeners for operation calls (i.e. method, getter, and setter calls) when invoked on this bean from the MBeanServer. Descriptor should contain a map with layout &lt;code&gt;item -&amp;gt; [Map[methodListener:[target:&quot;&quot;, tpe:&quot;&quot;, callback:&amp;amp;Closure], ... ,]]&lt;/code&gt;</source>
          <target state="translated">MBeanServerからこのBeanで呼び出されたときに、操作呼び出し（つまり、メソッド、ゲッター、およびセッターの呼び出し）のリスナーを登録します。記述子には、レイアウト &lt;code&gt;item -&amp;gt; [Map[methodListener:[target:&quot;&quot;, tpe:&quot;&quot;, callback:&amp;amp;Closure], ... ,]]&lt;/code&gt; を含むマップが含まれている必要があります-&amp;gt; [Map [methodListener：[target： &quot;&quot;、tpe： &quot;&quot;、callback：＆Closure]、...、]]</target>
        </trans-unit>
        <trans-unit id="00b38d38bf6c3c8011ec9620dcd916018f353ff5" translate="yes" xml:space="preserve">
          <source>Registry of services that implement the &lt;a href=&quot;groovyrunner&quot;&gt;GroovyRunner&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;groovyrunner&quot;&gt;GroovyRunner&lt;/a&gt;インターフェースを実装するサービスのレジストリ。</target>
        </trans-unit>
        <trans-unit id="6bee5be0d464bbd8e98b9390f5aa9cce6ccd30bf" translate="yes" xml:space="preserve">
          <source>Rehashes the contents of this map into a new table with a larger capacity.</source>
          <target state="translated">このマップの内容を、より大きな容量の新しいテーブルに再構築します。</target>
        </trans-unit>
        <trans-unit id="224ec44814bb364585df9a80ccacb62db93fbfd5" translate="yes" xml:space="preserve">
          <source>Rehashes the contents of this map into a new table with a larger capacity. This method is called automatically when the number of keys in this map exceeds its capacity and load factor.</source>
          <target state="translated">このマップの内容を、より大きな容量の新しいテーブルに再ハッシュします。このメソッドは、このマップのキーの数がその容量と負荷率を超えた場合に自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="34664c8922d91947accfa528870f67321f19c725" translate="yes" xml:space="preserve">
          <source>Related Property Getter</source>
          <target state="translated">関連物件ゲッター</target>
        </trans-unit>
        <trans-unit id="d711534f2d2ad06be91e5dc33f442f5e3096f34a" translate="yes" xml:space="preserve">
          <source>Relative path to file.</source>
          <target state="translated">ファイルへの相対パス。</target>
        </trans-unit>
        <trans-unit id="696e20fc774658e7739d305cfc2e164d9a02ec4b" translate="yes" xml:space="preserve">
          <source>Remove a string from the document, and then parse it if the parser has been set.</source>
          <target state="translated">ドキュメントから文字列を削除し、パーサが設定されていればそれを解析します。</target>
        </trans-unit>
        <trans-unit id="e2b58d4c5eaa45d6d8f0e799a4fa4c49a1a7049c" translate="yes" xml:space="preserve">
          <source>Remove all apparently groovy-internal trace entries from the exception instance</source>
          <target state="translated">例外インスタンスから、明らかにグルーヴィーな内部トレースエントリをすべて削除します。</target>
        </trans-unit>
        <trans-unit id="9234df0cb2410cd123c191c31dbbce1a01f7022b" translate="yes" xml:space="preserve">
          <source>Remove all duplicates from a given Collection using Groovy's default number-aware comparator.</source>
          <target state="translated">Groovyのデフォルトの番号認識コンパレータを使用して、指定されたコレクションからすべての重複を削除します。</target>
        </trans-unit>
        <trans-unit id="9b0284647188249006e8d6e833bd85e59b5179a9" translate="yes" xml:space="preserve">
          <source>Remove all duplicates from a given Collection using Groovy's default number-aware comparator. If mutate is true, it works by modifying the original object (and also returning it). If mutate is false, a new collection is returned leaving the original unchanged.</source>
          <target state="translated">Groovyのデフォルトの数値認識コンパレータを使用して、与えられたコレクションからすべての重複を削除します。mutateがtrueの場合、元のオブジェクトを変更することで動作します(それを返すこともできます)。mutateがfalseの場合、元のオブジェクトを変更せずに新しいコレクションが返されます。</target>
        </trans-unit>
        <trans-unit id="71807d378d6e527e4710f79b3aa49a446bab0a3c" translate="yes" xml:space="preserve">
          <source>Remove all duplicates from a given Collection.</source>
          <target state="translated">指定されたコレクションからすべての重複を削除します。</target>
        </trans-unit>
        <trans-unit id="cd27bdc9d39f1fe463764a0b8ff8fcf5daee664e" translate="yes" xml:space="preserve">
          <source>Remove all duplicates from a given Collection. If mutate is true, it works on the original object (and also returns it). If mutate is false, a new collection is returned. The order of members in the Collection are compared by the given Comparator. For each duplicate, the first member which is returned by the given Collection's iterator is retained, but all other ones are removed. The given Collection's original order is preserved.</source>
          <target state="translated">与えられたコレクションからすべての重複を削除します。mutateが真の場合は、元のオブジェクトに対して動作します(また、元のオブジェクトを返します)。mutate が false の場合は、新しいコレクションが返されます。コレクション内のメンバの順序は、与えられた Comparator によって比較されます。それぞれの重複に対して、与えられたコレクションのイテレータによって返される最初のメンバは保持されますが、それ以外のすべてのメンバは削除されます。与えられたコレクションの元の順序は保持されます。</target>
        </trans-unit>
        <trans-unit id="c2f35a821d542a0febd7edc296af1d2e7c99539f" translate="yes" xml:space="preserve">
          <source>Remove all duplicates from a given Collection. Works on the original object (and also returns it). The order of members in the Collection are compared by the given Comparator. For each duplicate, the first member which is returned by the given Collection's iterator is retained, but all other ones are removed. The given Collection's original order is preserved.</source>
          <target state="translated">指定されたコレクションからすべての重複を削除します。元のオブジェクトに対して動作します(また、元のオブジェクトを返します)。コレクション内のメンバの順番は、与えられた Comparator によって比較されます。各重複に対して、与えられたコレクションのイテレータによって返された最初のメンバは保持されますが、それ以外のメンバはすべて削除されます。与えられたコレクションの元の順序は保持されます。</target>
        </trans-unit>
        <trans-unit id="d862d521f38c1c5f6de33517a49ae352cf925dfa" translate="yes" xml:space="preserve">
          <source>Remove all duplicates from a given List using Groovy's default number-aware comparator.</source>
          <target state="translated">Groovyのデフォルトの番号認識コンパレータを使用して、指定されたリストからすべての重複を削除します。</target>
        </trans-unit>
        <trans-unit id="93d256b963c991b2d789928bc6c9f0ef4962f7fb" translate="yes" xml:space="preserve">
          <source>Remove all duplicates from a given List using Groovy's default number-aware comparator. If mutate is true, it works by modifying the original object (and also returning it). If mutate is false, a new collection is returned leaving the original unchanged.</source>
          <target state="translated">Groovyのデフォルトの数値認識コンパレータを使用して、与えられたリストからすべての重複を削除します。mutateがtrueの場合、元のオブジェクトを変更することで動作します(それを返すこともできます)。mutateがfalseの場合、元のオブジェクトを変更せずに新しいコレクションが返されます。</target>
        </trans-unit>
        <trans-unit id="e3f413481d56551153ce14e4f1cde3c940e2096a" translate="yes" xml:space="preserve">
          <source>Remove all duplicates from a given List.</source>
          <target state="translated">与えられたリストからすべての重複を削除します。</target>
        </trans-unit>
        <trans-unit id="c6d3eafdf47dcf70cecb2f4fa2f4bff37c407ac8" translate="yes" xml:space="preserve">
          <source>Remove all duplicates from a given List. If mutate is true, it works on the original object (and also returns it). If mutate is false, a new List is returned. The order of members in the List are compared by the given Comparator. For each duplicate, the first member which is returned by the given List's iterator is retained, but all other ones are removed. The given List's original order is preserved.</source>
          <target state="translated">与えられたリストからすべての重複を削除します。mutateが真の場合、元のオブジェクトに対して動作します(また、元のオブジェクトを返します)。mutateがFalseの場合、新しいリストが返されます。リスト内のメンバの順番は、指定されたコンパレータによって比較されます。各重複に対して、与えられたリストのイテレータによって返される最初のメンバは保持されますが、それ以外のメンバはすべて削除されます。与えられたリストの元の順序は保持されます。</target>
        </trans-unit>
        <trans-unit id="3bfe165bbea94ff56d9a289d641899a2baec9f5f" translate="yes" xml:space="preserve">
          <source>Remove all duplicates from a given List. Works on the original object (and also returns it). The order of members in the List are compared by the given Comparator. For each duplicate, the first member which is returned by the given List's iterator is retained, but all other ones are removed. The given List's original order is preserved.</source>
          <target state="translated">与えられたリストから重複したものをすべて削除します。元のオブジェクトに対して動作します(また、元のオブジェクトを返します)。リスト内のメンバの順番は、与えられた Comparator によって比較されます。各重複に対して、与えられたリストのイテレータによって返された最初のメンバは保持されますが、それ以外のメンバはすべて削除されます。与えられたリストの元の順序は保持されます。</target>
        </trans-unit>
        <trans-unit id="b2d907b2ab3c26606abb2cdf016057f90a09ec89" translate="yes" xml:space="preserve">
          <source>Remove all entries holding SoftReferences to gc-evicted objects.</source>
          <target state="translated">gc-evicted オブジェクトの SoftReferences を保持しているすべてのエントリを削除します。</target>
        </trans-unit>
        <trans-unit id="ff228e062253057b5e547b36b590548d828e5bfb" translate="yes" xml:space="preserve">
          <source>Remove amount elements from the operand stack, without using pop.</source>
          <target state="translated">popを使用せずに、オペランドスタックから量の要素を削除します。</target>
        </trans-unit>
        <trans-unit id="56cf7b94dc0483ac69b7e515f7b5d9712bfdf4a1" translate="yes" xml:space="preserve">
          <source>Remove amount elements from the operand stack, without using pop. For example after a method invocation</source>
          <target state="translated">popを使用せずに、オペランドスタックから量の要素を削除します。例えば、メソッド呼び出しの後に</target>
        </trans-unit>
        <trans-unit id="5882431d97260f68d4195c37953af84df7c9a389" translate="yes" xml:space="preserve">
          <source>Remove listeners, believing that our bould flags are accurate and it removes only as declared.</source>
          <target state="translated">リスナーを削除し、私たちのボルドフラグが正確であると信じて、それは宣言されたようにのみ削除します。</target>
        </trans-unit>
        <trans-unit id="cdc8bc738e48588f3e6f21180758b170f06fb757" translate="yes" xml:space="preserve">
          <source>Remove the cached value by the key</source>
          <target state="translated">キーでキャッシュされた値を削除する</target>
        </trans-unit>
        <trans-unit id="98525397881f35c4e09eed7c050ad76e1a9e3080" translate="yes" xml:space="preserve">
          <source>Remove the most recently added instance of the attribute delegate.</source>
          <target state="translated">最近追加された属性デリゲートのインスタンスを削除します。</target>
        </trans-unit>
        <trans-unit id="67e4a8b1b78c677f47a8f5c992b3396cc07f6407" translate="yes" xml:space="preserve">
          <source>Remove the most recently added instance of the nodeCompletion delegate.</source>
          <target state="translated">最近追加された nodeCompletion デリゲートのインスタンスを削除します。</target>
        </trans-unit>
        <trans-unit id="1ac1019185d51c4d8fefd0552467fc75293b88c8" translate="yes" xml:space="preserve">
          <source>Remove the most recently added instance of the postInstantiate delegate.</source>
          <target state="translated">postInstantiate デリゲートの最も最近追加されたインスタンスを削除します。</target>
        </trans-unit>
        <trans-unit id="17613be6816e8c9c1a9e40b33155102a739b493e" translate="yes" xml:space="preserve">
          <source>Remove the most recently added instance of the preInstantiate delegate.</source>
          <target state="translated">最近追加された preInstantiate デリゲートのインスタンスを削除します。</target>
        </trans-unit>
        <trans-unit id="dd477a72b803d9a415e3f3b266b23187e7df7604" translate="yes" xml:space="preserve">
          <source>Removes a &lt;code&gt;ClassInfo&lt;/code&gt; from the cache.</source>
          <target state="translated">&lt;code&gt;ClassInfo&lt;/code&gt; をキャッシュから削除します。</target>
        </trans-unit>
        <trans-unit id="94568b2ef0064c3bd990d5c2d12b5114b63c7213" translate="yes" xml:space="preserve">
          <source>Removes a &lt;code&gt;ClassInfo&lt;/code&gt; from the cache. This is useful in cases where the Class is parsed from a script, such as when using GroovyClassLoader#parseClass, and is executed for its result but the Class is not retained or cached. Removing the &lt;code&gt;ClassInfo&lt;/code&gt; associated with the Class will make the Class and its ClassLoader eligible for garbage collection sooner that it would otherwise.</source>
          <target state="translated">&lt;code&gt;ClassInfo&lt;/code&gt; をキャッシュから削除します。これは、GroovyClassLoader＃parseClassを使用する場合など、クラスがスクリプトから解析され、その結果に対して実行されるが、クラスが保持またはキャッシュされない場合に役立ちます。クラスに関連付けられている &lt;code&gt;ClassInfo&lt;/code&gt; を削除すると、クラスとそのClassLoaderがガベージコレクションの対象になります。</target>
        </trans-unit>
        <trans-unit id="a7cfc2ef455ef3ae9e6c85e251e3fca86fa61882" translate="yes" xml:space="preserve">
          <source>Removes a PropertyChangeListener from the listener list.</source>
          <target state="translated">PropertyChangeListener をリスナー リストから削除します。</target>
        </trans-unit>
        <trans-unit id="4698cd392caf51e5083897f71986b3d3f5106b1b" translate="yes" xml:space="preserve">
          <source>Removes a cached MetaClass from the registry</source>
          <target state="translated">キャッシュされたMetaClassをレジストリから削除します。</target>
        </trans-unit>
        <trans-unit id="00947abe3bb269548439da598ef0498188c38333" translate="yes" xml:space="preserve">
          <source>Removes a child of the current node.</source>
          <target state="translated">現在のノードの子を削除します。</target>
        </trans-unit>
        <trans-unit id="c8fb11f6a9e99149d559eb0d6e10783d2989c08c" translate="yes" xml:space="preserve">
          <source>Removes a column definition from the table</source>
          <target state="translated">テーブルから列の定義を削除します。</target>
        </trans-unit>
        <trans-unit id="cb1c4c6386213ad08b7b3157d88286a475cdafd7" translate="yes" xml:space="preserve">
          <source>Removes a constant meta class listener.</source>
          <target state="translated">定数のメタクラス・リスナーを削除します。</target>
        </trans-unit>
        <trans-unit id="aa76caf0b48156e8ffcd7e31915c6a2203a99122" translate="yes" xml:space="preserve">
          <source>Removes a meta class change listener for constant meta classes</source>
          <target state="translated">定数メタクラスのメタクラス変更リスナーを削除します。</target>
        </trans-unit>
        <trans-unit id="3e16d6d9d177c55b5aab58677d2330c449e1d2e8" translate="yes" xml:space="preserve">
          <source>Removes a node from the &lt;code&gt;Reduction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Reduction&lt;/code&gt; からノードを削除します。</target>
        </trans-unit>
        <trans-unit id="1d0bf70359328b6a0f69d56b03991d389e5e4b02" translate="yes" xml:space="preserve">
          <source>Removes a node from the &lt;code&gt;Reduction&lt;/code&gt;. You cannot remove the root node (index 0).</source>
          <target state="translated">&lt;code&gt;Reduction&lt;/code&gt; からノードを削除します。ルートノード（インデックス0）を削除することはできません。</target>
        </trans-unit>
        <trans-unit id="c38ad1458a5ab5c16bd3791326bd5f774eeefe02" translate="yes" xml:space="preserve">
          <source>Removes a node meta data entry.</source>
          <target state="translated">ノードのメタデータエントリを削除します。</target>
        </trans-unit>
        <trans-unit id="6a8e21adf4a9bd8bc4f7fee12517b9a4d1814f8a" translate="yes" xml:space="preserve">
          <source>Removes a part of a CharSequence by replacing the first occurrence of target within self with empty string and returns the result.</source>
          <target state="translated">self内で最初に出現したtargetを空の文字列に置き換えることで、CharSequenceの一部を削除し、その結果を返します。</target>
        </trans-unit>
        <trans-unit id="f5d746938b033da784017a53b8decbca39d00c3b" translate="yes" xml:space="preserve">
          <source>Removes a part of a CharSequence.</source>
          <target state="translated">CharSequence の一部を削除します。</target>
        </trans-unit>
        <trans-unit id="597306a358ed4d1989fb7ee91f9d28eb30185b18" translate="yes" xml:space="preserve">
          <source>Removes a part of a CharSequence. This replaces the first occurrence of the pattern within self with empty string and returns the result.</source>
          <target state="translated">CharSequenceの一部を削除します。これは、self内のパターンの最初の出現を空の文字列に置き換え、結果を返します。</target>
        </trans-unit>
        <trans-unit id="06c1ad4442e7a34823fc1a788eab1b9623fcf2ce" translate="yes" xml:space="preserve">
          <source>Removes a registered runner from the registry.</source>
          <target state="translated">レジストリから登録されたランナーを削除します。</target>
        </trans-unit>
        <trans-unit id="d4b3ed4fff4191bd6f88ff01816243cf8a2aaf4b" translate="yes" xml:space="preserve">
          <source>Removes all children nodes from the DefaultMutableTreeNode.</source>
          <target state="translated">DefaultMutableTreeNode からすべての子ノードを削除します。</target>
        </trans-unit>
        <trans-unit id="f9686240666fdd5f60d606b4c4b2dae8ba1d22d0" translate="yes" xml:space="preserve">
          <source>Removes all classes from the class cache.</source>
          <target state="translated">クラスキャッシュからすべてのクラスを削除します。</target>
        </trans-unit>
        <trans-unit id="36f1e5e1d64b5ff91573d5f75f24a533fc2de806" translate="yes" xml:space="preserve">
          <source>Removes all components from the Container.</source>
          <target state="translated">コンテナからすべてのコンポーネントを削除します。</target>
        </trans-unit>
        <trans-unit id="27f5674453e7f894faf870deb85527675ab23d1a" translate="yes" xml:space="preserve">
          <source>Removes all elements from the DefaultListModel.</source>
          <target state="translated">DefaultListModel からすべての要素を削除します。</target>
        </trans-unit>
        <trans-unit id="60afcff33b75d8e3c7f8c670a4795ec52d019822" translate="yes" xml:space="preserve">
          <source>Removes all elements from the JTabbedPane.</source>
          <target state="translated">JTabbedPaneからすべての要素を削除します。</target>
        </trans-unit>
        <trans-unit id="7db37e128954aa67ca5f249e6877a6c0440242f2" translate="yes" xml:space="preserve">
          <source>Removes all items from the JComboBox.</source>
          <target state="translated">JComboBoxからすべてのアイテムを削除します。</target>
        </trans-unit>
        <trans-unit id="2ad3fed741e3031da17e0b9c1b1bee7c64f8e76a" translate="yes" xml:space="preserve">
          <source>Removes all items from the model.</source>
          <target state="translated">モデルからすべてのアイテムを削除します。</target>
        </trans-unit>
        <trans-unit id="41dcf2d910ad2c1e34f916eba01440e71ebfda7a" translate="yes" xml:space="preserve">
          <source>Removes all mappings from this map.</source>
          <target state="translated">このマップからすべてのマッピングを削除します。</target>
        </trans-unit>
        <trans-unit id="1c8f2a6916324dbc90ee8481d51407d03078635c" translate="yes" xml:space="preserve">
          <source>Removes the assignment portion of a given token.</source>
          <target state="translated">指定されたトークンの代入部分を削除します。</target>
        </trans-unit>
        <trans-unit id="c88d760ddecbf4a84f8788d4d6856a1208ab65a8" translate="yes" xml:space="preserve">
          <source>Removes the assignment portion of a given token. If the given token is not an operator with assignment, the given token is returned.</source>
          <target state="translated">与えられたトークンの代入部分を削除します。与えられたトークンが代入演算子でない場合、与えられたトークンが返されます。</target>
        </trans-unit>
        <trans-unit id="c5b7975bbdfb8da7c47e461fbc90814723420a1c" translate="yes" xml:space="preserve">
          <source>Removes the initial item from the List.</source>
          <target state="translated">最初の項目をリストから削除します。</target>
        </trans-unit>
        <trans-unit id="f40c285771b09e0b338eb208c08e4d71db591753" translate="yes" xml:space="preserve">
          <source>Removes the key (and its corresponding value) from this table.</source>
          <target state="translated">このテーブルからキー (および対応する値)を削除します。</target>
        </trans-unit>
        <trans-unit id="9f84f3e17ef6afb66664b59b532a62423397dee8" translate="yes" xml:space="preserve">
          <source>Removes the key (and its corresponding value) from this table. This method does nothing if the key is not in the table.</source>
          <target state="translated">このテーブルからキー (およびそれに対応する値)を削除します。このメソッドは、キーがテーブルにない場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="7670f7e4b004a6f607ebe896e05540e2c637776a" translate="yes" xml:space="preserve">
          <source>Removes the last context from the stack.</source>
          <target state="translated">スタックから最後のコンテキストを削除します。</target>
        </trans-unit>
        <trans-unit id="34c3896a387076cd39d935a4e6395199e97d311d" translate="yes" xml:space="preserve">
          <source>Removes the last item from the List.</source>
          <target state="translated">リストから最後の項目を削除します。</target>
        </trans-unit>
        <trans-unit id="edaeaa943e0e73b9842f314411a15b5c733b0b00" translate="yes" xml:space="preserve">
          <source>Renames a file.</source>
          <target state="translated">ファイル名を変更します。</target>
        </trans-unit>
        <trans-unit id="4fbdd44432d397e535e55217858edc8d1224f222" translate="yes" xml:space="preserve">
          <source>Renames the file.</source>
          <target state="translated">ファイル名を変更します。</target>
        </trans-unit>
        <trans-unit id="a6b2ab5af4fa474474f42ffeeb9d445c75143a10" translate="yes" xml:space="preserve">
          <source>Renames the file. It's a shortcut for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/File.html#renameTo(File)&quot;&gt;File.renameTo&lt;/a&gt;</source>
          <target state="translated">ファイルの名前を変更します。&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/File.html#renameTo(File)&quot;&gt;File.renameToの&lt;/a&gt;ショートカットです</target>
        </trans-unit>
        <trans-unit id="ed5e87ec4fa02c17820386a8a8f54ffbb4d81349" translate="yes" xml:space="preserve">
          <source>Renders an XML declaration header.</source>
          <target state="translated">XML 宣言ヘッダをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="ff972e73ff612793ac02fedc55c7b7cf8c5fff36" translate="yes" xml:space="preserve">
          <source>Renders an XML declaration header. If the declaration encoding is set in the &lt;a href=&quot;templateconfiguration#getDeclarationEncoding()&quot;&gt;template configuration&lt;/a&gt;, then the encoding is rendered into the declaration.</source>
          <target state="translated">XML宣言ヘッダーをレンダリングします。&lt;a href=&quot;templateconfiguration#getDeclarationEncoding()&quot;&gt;テンプレート構成&lt;/a&gt;で宣言エンコーディングが設定されている場合、エンコーディングは宣言にレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="e2bdbd224f64c63b582293f090ddff4620730659" translate="yes" xml:space="preserve">
          <source>Renders an embedded template as a fragment.</source>
          <target state="translated">埋め込まれたテンプレートをフラグメントとしてレンダリングします。</target>
        </trans-unit>
        <trans-unit id="23d62810396864464c62a50fa8a199df7742dabb" translate="yes" xml:space="preserve">
          <source>Renders an embedded template as a fragment. Fragments are cached in a template, meaning that if you use the same fragment in a template, it will only be compiled once, but once &lt;b&gt;per template instance&lt;/b&gt;. This is less performant than using &lt;a href=&quot;#layout(java.util.Map,%20java.lang.String)&quot;&gt;layout(java.util.Map, String)&lt;/a&gt;.</source>
          <target state="translated">埋め込まれたテンプレートをフラグメントとしてレンダリングします。フラグメントはテンプレートにキャッシュされます。つまり、テンプレートで同じフラグメントを使用すると、コンパイルは1回だけですが、&lt;b&gt;テンプレートインスタンスごとに1&lt;/b&gt;回だけコンパイルされ&lt;b&gt;ます&lt;/b&gt;。これは&lt;a href=&quot;#layout(java.util.Map,%20java.lang.String)&quot;&gt;、layout（java.util.Map、String）&lt;/a&gt;を使用するよりもパフォーマンスが低くなります。</target>
        </trans-unit>
        <trans-unit id="031c4ee9a3a3c34238e6e31a2673feac5b013aea" translate="yes" xml:space="preserve">
          <source>Renders processing instructions. The supplied map contains all elements to be rendered as processing instructions. The key is the name of the element, the value is either a map of attributes, or an object to be rendered directly. For example:</source>
          <target state="translated">処理命令をレンダリングします。与えられたマップには、処理命令としてレンダリングされるすべての要素が含まれています。キーは要素の名前で、値は属性のマップ、または直接レンダリングされるオブジェクトのいずれかです。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="1d5fb623a6f23183cd72172e1fccc92664064c2d" translate="yes" xml:space="preserve">
          <source>Renders the object provided as parameter using its &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString()&quot;&gt;Object.toString&lt;/a&gt; method, The contents is rendered after being escaped for XML, enforcing valid XML output.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString()&quot;&gt;Object.toString&lt;/a&gt;メソッドを使用してパラメーターとして提供されたオブジェクトをレンダリングします。コンテンツはXML用にエスケープされた後にレンダリングされ、有効なXML出力が適用されます。</target>
        </trans-unit>
        <trans-unit id="3a1597ee91603ca3a23c276738f127a7b31dbc0c" translate="yes" xml:space="preserve">
          <source>Renders the object provided as parameter using its &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString()&quot;&gt;Object.toString&lt;/a&gt; method, The contents is rendered as is, unescaped.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString()&quot;&gt;Object.toString&lt;/a&gt;メソッドを使用して、パラメーターとして提供されたオブジェクトをレンダリングします。コンテンツはそのままレンダリングされ、エスケープされません。</target>
        </trans-unit>
        <trans-unit id="bb994a3d7009d6fdbae4fc2f0e4477148a2be7ac" translate="yes" xml:space="preserve">
          <source>Renders the object provided as parameter using its &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString()&quot;&gt;Object.toString&lt;/a&gt; method, The contents is rendered as is, unescaped. This means that depending on what the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString()&quot;&gt;Object.toString&lt;/a&gt; method call returns, you might create invalid markup.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString()&quot;&gt;Object.toString&lt;/a&gt;メソッドを使用して、パラメーターとして提供されたオブジェクトをレンダリングします。コンテンツはそのままレンダリングされ、エスケープされません。これは、&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString()&quot;&gt;Object.toString&lt;/a&gt;メソッド呼び出しが返すものによっては、無効なマークアップを作成する可能性があることを意味します。</target>
        </trans-unit>
        <trans-unit id="8a093ac5bc3b6ab3cb9184de6747930e923d3712" translate="yes" xml:space="preserve">
          <source>Renders the supplied object using its &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString&quot;&gt;Object.toString&lt;/a&gt; method inside a comment markup block (&amp;lt;!</source>
          <target state="translated">コメントマークアップブロック内の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString&quot;&gt;Object.toString&lt;/a&gt;メソッドを使用して、指定されたオブジェクトをレンダリングします（&amp;lt;！</target>
        </trans-unit>
        <trans-unit id="e01084212413071ff74b47d43f521f0ff395412c" translate="yes" xml:space="preserve">
          <source>Renders the supplied object using its &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString&quot;&gt;Object.toString&lt;/a&gt; method inside a comment markup block (&amp;lt;!-- ... --&amp;gt;). The object is rendered as is, unescaped.</source>
          <target state="translated">コメントマークアップブロック（&amp;lt;！&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString&quot;&gt;-...-&lt;/a&gt; &amp;gt;）内でObject.toStringメソッドを使用して、指定されたオブジェクトをレンダリングします。オブジェクトはそのままレンダリングされ、エスケープされません。</target>
        </trans-unit>
        <trans-unit id="24c44aa5f62ad8e141c1767fb912d6754fd0a3ad" translate="yes" xml:space="preserve">
          <source>Repeats a CharSequence a certain number of times.</source>
          <target state="translated">CharSequenceを一定回数繰り返します。</target>
        </trans-unit>
        <trans-unit id="4446a23de338b1b1bd8838a27b902c0957f388c0" translate="yes" xml:space="preserve">
          <source>Replace a string in the document, and then parse it if the parser has been set.</source>
          <target state="translated">ドキュメント内の文字列を置換し、パーサが設定されている場合はその文字列を解析します。</target>
        </trans-unit>
        <trans-unit id="2ea6be253741b96d4ffc8e6bef6fd9a572473330" translate="yes" xml:space="preserve">
          <source>Replace all access to variables and args by new variables. The variable names to replace as well as their replacement name and type have to be configured in nameAndTypeMapping before calling replaceIn(). The VariableReplacedListener can be set if clients want to react to variable replacement.</source>
          <target state="translated">変数と引数へのすべてのアクセスを新しい変数で置き換えます。置換する変数名とその置換名と型は、replaceIn()を呼び出す前に nameAndTypeMapping で設定しなければなりません。クライアントが変数の置換に反応したい場合は、VariableReplacedListener を設定することができます。</target>
        </trans-unit>
        <trans-unit id="68207a1c80ff1e8476fa3c7eaf3cb08a62174513" translate="yes" xml:space="preserve">
          <source>Replace unicode escape and other control characters with real characters</source>
          <target state="translated">ユニコードエスケープやその他の制御文字を実際の文字に置き換える</target>
        </trans-unit>
        <trans-unit id="571215e10c8e2da86f8f59d3857456fe1ba7a3ad" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of a String within another String.</source>
          <target state="translated">別の文字列内の文字列をすべて置き換えます。</target>
        </trans-unit>
        <trans-unit id="574085e3b35ded5eca4ce9c98bb6daaa81d278a2" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of a captured group by the result of a closure call on that text.</source>
          <target state="translated">キャプチャされたグループのすべての出現を、そのテキストのクロージャコールの結果で置き換えます。</target>
        </trans-unit>
        <trans-unit id="7ec3b190dae652129223d9e5b7b4f9b646192c2a" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of a captured group by the result of calling a closure on that text.</source>
          <target state="translated">キャプチャされたグループのすべての出現を、そのテキストのクロージャを呼び出した結果で置き換えます。</target>
        </trans-unit>
        <trans-unit id="b2a281d5be9fa2c896ec5b5923bd03079a363053" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of replacement CharSequences (supplied via a map) within a provided CharSequence with control over the internally created StringBuilder's capacity.</source>
          <target state="translated">提供された CharSequence 内で発生した(マップを介して提供された)置換用 CharSequence のすべてを、内部で作成された StringBuilder の容量を制御して置き換えます。</target>
        </trans-unit>
        <trans-unit id="d638a7642b4931af4ad4d7c842d9ef3d4e81ae0f" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of replacement CharSequences (supplied via a map) within a provided CharSequence with control over the internally created StringBuilder's capacity. This method uses a StringBuilder internally. Java auto-expands a StringBuilder's capacity if needed. In rare circumstances, the overhead involved with repeatedly expanding the StringBuilder may become significant. If you have measured the performance of your application and found this to be a significant bottleneck, use this variant to have complete control over the internally created StringBuilder's capacity.</source>
          <target state="translated">このメソッドは、内部的に作成された StringBuilder の容量を制御しながら、指定された CharSequence 内で発生するすべての置換 CharSequence (マップを介して提供される)を置換します。このメソッドは、内部的に StringBuilder を使用します。Java は、必要に応じて StringBuilder の容量を自動的に拡張します。まれな状況では、StringBuilder を繰り返し拡張することによるオーバーヘッドが大きくなることがあります。アプリケーションのパフォーマンスを測定した結果、これが重要なボトルネックであることが判明した場合は、このバリアントを使用して、内部で作成された StringBuilder の容量を完全に制御することができます。</target>
        </trans-unit>
        <trans-unit id="2cfaf66dd2f2941959d5bfe25e5c22232b7de862" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of replacement CharSequences (supplied via a map) within a provided CharSequence.</source>
          <target state="translated">指定された CharSequence の中にある(マップを介して提供された)置換用 CharSequence のすべての出現を置換します。</target>
        </trans-unit>
        <trans-unit id="2187c7bfaf859694c54e8e018bc17c741f95ab48" translate="yes" xml:space="preserve">
          <source>Replaces all substrings of a CharSequence that match the given compiled regular expression with the given replacement.</source>
          <target state="translated">コンパイルされた正規表現にマッチするCharSequenceのすべての部分文字列を、指定された置換文字列で置き換えます。</target>
        </trans-unit>
        <trans-unit id="313cde29ddd551d3772ccbdf2fbcf99665a33ad9" translate="yes" xml:space="preserve">
          <source>Replaces angle brackets inside a tag.</source>
          <target state="translated">タグ内のアングルブラケットを交換します。</target>
        </trans-unit>
        <trans-unit id="257bcfe399eb88a5a6616b47fb2b6acfe14117ca" translate="yes" xml:space="preserve">
          <source>Replaces each substring of this CharSequence that matches the given regular expression with the given replacement.</source>
          <target state="translated">与えられた正規表現にマッチするこの CharSequence の各部分文字列を、与えられた置換文字列で置き換えます。</target>
        </trans-unit>
        <trans-unit id="cc78c471d5292defb1a28db1ba2e5ef0145bee7d" translate="yes" xml:space="preserve">
          <source>Replaces sequences of whitespaces with tabs using tabStops of size 8.</source>
          <target state="translated">サイズ 8 の tabStops を使用して、空白のシーケンスをタブで置き換えます。</target>
        </trans-unit>
        <trans-unit id="8e32d336498dcdfab145cc471d246dd78bee8017" translate="yes" xml:space="preserve">
          <source>Replaces sequences of whitespaces with tabs within a line.</source>
          <target state="translated">行内の空白の列をタブで置き換えます。</target>
        </trans-unit>
        <trans-unit id="c9ccf5683034b75ec0fa86babc77462ff75d3766" translate="yes" xml:space="preserve">
          <source>Replaces sequences of whitespaces with tabs.</source>
          <target state="translated">空白のシーケンスをタブに置き換えます。</target>
        </trans-unit>
        <trans-unit id="90892c62f0ca6267efa50cc228df9882ee715cdd" translate="yes" xml:space="preserve">
          <source>Replaces the MetaClass of this GPathResult.</source>
          <target state="translated">このGPathResultのMetaClassを置き換えます。</target>
        </trans-unit>
        <trans-unit id="9a1e152f666828808ef48d212e362cee944a71d0" translate="yes" xml:space="preserve">
          <source>Replaces the current body of this Node with the passed object.</source>
          <target state="translated">このノードの現在のボディを、渡されたオブジェクトに置き換えます。</target>
        </trans-unit>
        <trans-unit id="3ab7ffdbdf2626c89d9e11fbbf1140823c56e0ce" translate="yes" xml:space="preserve">
          <source>Replaces the current node with nodes defined using builder-style notation via a Closure.</source>
          <target state="translated">現在のノードを、クロージャを介してビルダースタイルの記法で定義されたノードで置き換えます。</target>
        </trans-unit>
        <trans-unit id="3c275ff3b7dc2ddd2b8cc2ebd99df4d21d08259f" translate="yes" xml:space="preserve">
          <source>Replaces the current node with the supplied node.</source>
          <target state="translated">現在のノードを指定されたノードに置き換えます。</target>
        </trans-unit>
        <trans-unit id="12c441a7f5257536e712362668cc565c90cc195d" translate="yes" xml:space="preserve">
          <source>Replaces the first occurrence of a captured group by the result of a closure call on that text.</source>
          <target state="translated">キャプチャされたグループの最初の出現を、そのテキストのクロージャ呼び出しの結果で置き換えます。</target>
        </trans-unit>
        <trans-unit id="f1b64a7909ae2f10518d7e859b75525b135a98d6" translate="yes" xml:space="preserve">
          <source>Replaces the first substring of a CharSequence that matches the given compiled regular expression with the given replacement.</source>
          <target state="translated">コンパイルされた正規表現にマッチするCharSequenceの最初の部分文字列を、与えられた置換文字列で置き換えます。</target>
        </trans-unit>
        <trans-unit id="1aefe20076cd9a9c87edf03d160d53089c1f8bbe" translate="yes" xml:space="preserve">
          <source>Replaces the first substring of this CharSequence that matches the given regular expression with the given replacement.</source>
          <target state="translated">与えられた正規表現にマッチするこの CharSequence の最初の部分文字列を、与えられた置換文字列で置き換えます。</target>
        </trans-unit>
        <trans-unit id="4d7913c88b04be5e75eede89687760365cfcfc1b" translate="yes" xml:space="preserve">
          <source>Replaces the specified property of this GPathResult with a new value.</source>
          <target state="translated">この GPathResult の指定されたプロパティを新しい値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="6b60d8d2e551caa7247b6354343e0bf526b2449b" translate="yes" xml:space="preserve">
          <source>Replaces the types in the callSiteType parameter if more specific types given through the arguments.</source>
          <target state="translated">引数で指定された特定の型がある場合は、 callSiteType パラメータの型を置き換えます。</target>
        </trans-unit>
        <trans-unit id="edbdf4bb85cb8ab84e514570e47c39213ab64fa9" translate="yes" xml:space="preserve">
          <source>Replaces the types in the callSiteType parameter if more specific types given through the arguments. This is in general the case, unless the argument is null.</source>
          <target state="translated">引数を通してより特定の型が与えられた場合、callSiteTypeパラメータの型を置き換えます。これは、引数がnullでない限り、一般的にはこのようになります。</target>
        </trans-unit>
        <trans-unit id="a47e58dda579ce9e7215149ed38221d34a22d88c" translate="yes" xml:space="preserve">
          <source>Replying on the ConcurrentHashMap thread-safe iteration implementation the method will remove all entries holding SoftReferences to gc-evicted objects.</source>
          <target state="translated">ConcurrentHashMapのスレッドセーフな反復実装に応答して、このメソッドはgc-evictedオブジェクトのSoftReferencesを保持しているすべてのエントリを削除します。</target>
        </trans-unit>
        <trans-unit id="4b1223146c5fa420d29e27cee0b3d1dbcc8ee0c7" translate="yes" xml:space="preserve">
          <source>Reports an error back to the source unit.</source>
          <target state="translated">エラーをソース・ユニットに報告します。</target>
        </trans-unit>
        <trans-unit id="4df1e289ad71cbc5fb1b43928b3c3c90ddc13450" translate="yes" xml:space="preserve">
          <source>Represents GenericsType name TODO In order to distinguish GenericsType with same name(See GROOVY-8409), we should add a property to keep the declaring class.</source>
          <target state="translated">GenericsTypeの名前を表す TODO 同名のGenericsTypeを区別するために(GROOVY-8409参照)、宣言クラスを保持するためのプロパティを追加する。</target>
        </trans-unit>
        <trans-unit id="5ae85083c62664850da3b4aa06c93fef62d44c36" translate="yes" xml:space="preserve">
          <source>Represents GenericsType name TODO In order to distinguish GenericsType with same name(See GROOVY-8409), we should add a property to keep the declaring class. fixing GROOVY-8409 steps: 1) change the signature of constructor GenericsTypeName to `GenericsTypeName(String name, ClassNode declaringClass)` 2) try to fix all compilation errors(if `GenericsType` has declaringClass property, the step would be a bit easy to fix...) 3) run all tests to see whether the change breaks anything 4) if all tests pass, congratulations! but if some tests are broken, try to debug and find why... We should find a way to set declaring class for `GenericsType` first, it can be completed at the resolving phase.</source>
          <target state="translated">GenericsTypeの名前を表す TODO 同名のGenericsTypeを区別するために(GROOVY-8409参照)、宣言クラスを保持するプロパティを追加する必要がある。1)コンストラクタGenericsTypeNameのシグネチャを `GenericsTypeName(String name,ClassNode declaringClass)` に変更する 2)すべてのコンパイルエラーを修正する(`GenericsType` が declaringClass プロパティを持っていれば、このステップは少し簡単に修正できるだろう)。3)すべてのテストを実行して、その変更が何かを壊すかどうかを確認する 4)すべてのテストがパスすれば、おめでとうございます!しかし、いくつかのテストが壊れている場合は、デバッグしてその理由を見つけてください...最初に `GenericsType` の宣言クラスを設定する方法を見つけるべきで、それは解決の段階で完了することができます。</target>
        </trans-unit>
        <trans-unit id="eb0690f677f7f8b008ef72021b07582a41538a57" translate="yes" xml:space="preserve">
          <source>Represents Groovydoc Holder</source>
          <target state="translated">Groovydocホルダーを表す</target>
        </trans-unit>
        <trans-unit id="4fbc3822c408e664611f72dfc83710e8fcf6f87a" translate="yes" xml:space="preserve">
          <source>Represents a HTML style table layout</source>
          <target state="translated">HTMLスタイルのテーブルレイアウトを表します。</target>
        </trans-unit>
        <trans-unit id="af49ca7dbe984dfc88bb34bb524ffbfffe2be747" translate="yes" xml:space="preserve">
          <source>Represents a Java source file in file to compile</source>
          <target state="translated">コンパイルするためのJavaソースファイルをファイルで表す</target>
        </trans-unit>
        <trans-unit id="b90b2ac3d974d40aaf01a0319e8f8244cdb1521e" translate="yes" xml:space="preserve">
          <source>Represents a Java source file in memory to compile</source>
          <target state="translated">コンパイルするためのJavaソースファイルをメモリ上で表現します。</target>
        </trans-unit>
        <trans-unit id="6742603118cc61663579b0d7514b4a32857e53b4" translate="yes" xml:space="preserve">
          <source>Represents a Method on a Java object a little like &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Method.html&quot;&gt;Method&lt;/a&gt; except without using reflection to invoke the method</source>
          <target state="translated">方法は、少しのようなJavaオブジェクトに表す&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Method.html&quot;&gt;方法&lt;/a&gt;メソッドを呼び出すためにリフレクションを使用しない以外は</target>
        </trans-unit>
        <trans-unit id="43e653011742e6e624ca67a4672d8edd38c28f84" translate="yes" xml:space="preserve">
          <source>Represents a String expression which contains embedded values inside it such as &quot;hello there ${user} how are you&quot; which is expanded lazily</source>
          <target state="translated">&quot;hello there ${user}how are you &quot;のような値が埋め込まれた文字列式を表現します。</target>
        </trans-unit>
        <trans-unit id="14a7804155c881d8debb5c7ce5e1c1d1ffd9a16c" translate="yes" xml:space="preserve">
          <source>Represents a String which contains embedded values such as &quot;hello there ${user} how are you?&quot; which can be evaluated lazily. Advanced users can iterate over the text and values to perform special processing, such as for performing SQL operations, the values can be substituted for ? and the actual value objects can be bound to a JDBC statement.</source>
          <target state="translated">&quot;hello there ${user}how are you? &quot;のような値が埋め込まれた文字列を表します。上級者は、テキストと値を反復処理して特殊な処理を行うことができます。例えば、SQL操作を行う際には、値を?</target>
        </trans-unit>
        <trans-unit id="37a86a5f5603740f426304f1d498e7407f45caa9" translate="yes" xml:space="preserve">
          <source>Represents a YAML parser</source>
          <target state="translated">YAML パーサーを表します。</target>
        </trans-unit>
        <trans-unit id="d1acdf0b32caa0fcd390775d80bd45730f4d8d7e" translate="yes" xml:space="preserve">
          <source>Represents a base class for expressions which evaluate as an object</source>
          <target state="translated">オブジェクトとして評価する式の基底クラスを表します。</target>
        </trans-unit>
        <trans-unit id="25123e7256a716abfb376474d941d622c73960d1" translate="yes" xml:space="preserve">
          <source>Represents a boolean expression</source>
          <target state="translated">ブール値式を表します。</target>
        </trans-unit>
        <trans-unit id="4f1dedb95b7b399349960c17c5b7ee280e5a3691" translate="yes" xml:space="preserve">
          <source>Represents a break statement in a switch or loop statement</source>
          <target state="translated">スイッチ文やループ文の中のブレーク文を表します。</target>
        </trans-unit>
        <trans-unit id="a6201e4c74022032041154c6d319d3e845371f65" translate="yes" xml:space="preserve">
          <source>Represents a cacheable call site, which can reduce the cost of resolving methods</source>
          <target state="translated">キャッシュ可能なコールサイトを表し、メソッドの解決コストを削減することができます。</target>
        </trans-unit>
        <trans-unit id="8bf392679189491ec85cab6c4e32ee4a75155a5c" translate="yes" xml:space="preserve">
          <source>Represents a case statement in a switch statement</source>
          <target state="translated">switch文のcase文を表現します。</target>
        </trans-unit>
        <trans-unit id="b4824b97707226f1cdf23a6c05ccb98b2d04a3cb" translate="yes" xml:space="preserve">
          <source>Represents a catch (Exception var) { } statement</source>
          <target state="translated">catch (Exception var){}文を表します。</target>
        </trans-unit>
        <trans-unit id="ee5b3873b19a896dcdfcc3c223239ad62419f1cd" translate="yes" xml:space="preserve">
          <source>Represents a cell in a table layout.</source>
          <target state="translated">テーブルレイアウトのセルを表します。</target>
        </trans-unit>
        <trans-unit id="6d72776b5b596fbf4bbdf7bcef44a73e273699d2" translate="yes" xml:space="preserve">
          <source>Represents a class in the AST.</source>
          <target state="translated">ASTのクラスを表します。</target>
        </trans-unit>
        <trans-unit id="c2cde560e94987e67245bb672c8abac5f7ba53ce" translate="yes" xml:space="preserve">
          <source>Represents a class not in the codebase being processed.</source>
          <target state="translated">処理されるコードベースにないクラスを表します。</target>
        </trans-unit>
        <trans-unit id="39a156664725c0961807340822d896cedff48944" translate="yes" xml:space="preserve">
          <source>Represents a closure expression such as</source>
          <target state="translated">のようなクロージャ式を表します。</target>
        </trans-unit>
        <trans-unit id="1c2d2364555eaf79fb6b367fa6e47014073bd6db" translate="yes" xml:space="preserve">
          <source>Represents a column using a ValueModel to extract the value.</source>
          <target state="translated">ValueModelを使用して値を抽出するカラムを表します。</target>
        </trans-unit>
        <trans-unit id="a6de4e4a370d438beba6eaa1f53e02954c765cf8" translate="yes" xml:space="preserve">
          <source>Represents a constant expression such as null, true, false.</source>
          <target state="translated">null、true、falseなどの定数式を表します。</target>
        </trans-unit>
        <trans-unit id="39e7758a97b1b39409396bc107ce8300b91dcea4" translate="yes" xml:space="preserve">
          <source>Represents a constructor declaration</source>
          <target state="translated">コンストラクタ宣言を表します。</target>
        </trans-unit>
        <trans-unit id="1170118c64d57942de3e8f9739448b2b0ff0afe8" translate="yes" xml:space="preserve">
          <source>Represents a continue statement in a loop statement</source>
          <target state="translated">ループ文の中のcontinue文を表します。</target>
        </trans-unit>
        <trans-unit id="7b9c205683c0ae97bbb3410cc365bf62c7e6b99b" translate="yes" xml:space="preserve">
          <source>Represents a do { ... } while (condition) loop in Groovy</source>
          <target state="translated">Groovy の do{...Groovyのwhile (条件)ループを表現しています。</target>
        </trans-unit>
        <trans-unit id="7d58d9fcfa99110764e039150fcc0b918c6f1159" translate="yes" xml:space="preserve">
          <source>Represents a dynamically expandable bean.</source>
          <target state="translated">動的に拡張可能なBeanを表します。</target>
        </trans-unit>
        <trans-unit id="7cf0ef6b047181e861af7a4003ac646a68d1e201" translate="yes" xml:space="preserve">
          <source>Represents a eviction strategy for the cache with limited size</source>
          <target state="translated">サイズが制限されたキャッシュの退避戦略を表します。</target>
        </trans-unit>
        <trans-unit id="c5a2953609761a89503c4de43dda04015b5ebf19" translate="yes" xml:space="preserve">
          <source>Represents a field (member variable)</source>
          <target state="translated">フィールド(メンバ変数)を表します。</target>
        </trans-unit>
        <trans-unit id="65210efced0d683b8273c0612f588e9270e25cc9" translate="yes" xml:space="preserve">
          <source>Represents a field access such as the expression &quot;this.foo&quot;.</source>
          <target state="translated">式 &quot;this.foo &quot;のようなフィールドアクセスを表します。</target>
        </trans-unit>
        <trans-unit id="6b5fa689324e23c8af1bafdd8361e80cf859a389" translate="yes" xml:space="preserve">
          <source>Represents a groovy shell capable of running arbitrary groovy scripts</source>
          <target state="translated">任意のgroovyスクリプトを実行できるgroovyシェルを表します。</target>
        </trans-unit>
        <trans-unit id="0f67109dccbc799ebe35653976abc4b45817d395" translate="yes" xml:space="preserve">
          <source>Represents a lambda expression such as one of these:</source>
          <target state="translated">などのラムダ式を表します。</target>
        </trans-unit>
        <trans-unit id="0cccbb178d17dd0f74f59e3c8c1b657af2cb5202" translate="yes" xml:space="preserve">
          <source>Represents a link pair (href, packages). The packages are comma separated.</source>
          <target state="translated">リンクペア(href,packages)を表します。パッケージはカンマで区切られています。</target>
        </trans-unit>
        <trans-unit id="ef4bee9dcd0616d8e9a99eb4161f3386d962891b" translate="yes" xml:space="preserve">
          <source>Represents a list expression [1, 2, 3] which creates a mutable List</source>
          <target state="translated">変形可能なリストを作成するリスト式 [1,2,3]を表します。</target>
        </trans-unit>
        <trans-unit id="2eb4d5a8d19f8c0c02da0f96a923f7b9a080e69b" translate="yes" xml:space="preserve">
          <source>Represents a list of 0 typed Object.</source>
          <target state="translated">0型のObjectのリストを表します。</target>
        </trans-unit>
        <trans-unit id="4ab42c65497a974d545d68d71cdbcd0c6b836d6f" translate="yes" xml:space="preserve">
          <source>Represents a list of 1 typed Object.</source>
          <target state="translated">1つの型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="a3d34d7d4bfc15fb1e1063fdd5d829bfb1057308" translate="yes" xml:space="preserve">
          <source>Represents a list of 10 typed Objects.</source>
          <target state="translated">10個の型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="39f404873ed0be04ba5c02aa7b34d889eb7aa3eb" translate="yes" xml:space="preserve">
          <source>Represents a list of 12 typed Objects.</source>
          <target state="translated">12個の型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="3adcd45f4beabcaaddb508e06525c41f5207ba19" translate="yes" xml:space="preserve">
          <source>Represents a list of 13 typed Objects.</source>
          <target state="translated">型付けされた13個のオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="3600a30bca5cfe21796f38c042aa97a8aa5bcbb5" translate="yes" xml:space="preserve">
          <source>Represents a list of 14 typed Objects.</source>
          <target state="translated">14個の型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="ab6f73a042d2ad87528c81e0cb733a5c28b09e1d" translate="yes" xml:space="preserve">
          <source>Represents a list of 15 typed Objects.</source>
          <target state="translated">15個の型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="2755da8a45223fb0d633d451fe11e6e93f3885c6" translate="yes" xml:space="preserve">
          <source>Represents a list of 16 typed Objects.</source>
          <target state="translated">16個の型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="60e02fecef3f27928971f97936b2f2a4639f7ef2" translate="yes" xml:space="preserve">
          <source>Represents a list of 2 typed Objects.</source>
          <target state="translated">2つの型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="6527c5d3418a26e4218e06638f9fe6d00d520fc9" translate="yes" xml:space="preserve">
          <source>Represents a list of 3 typed Objects.</source>
          <target state="translated">3つの型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="85c4c1e2301c5cf4906c9e9d8d5121a663a48781" translate="yes" xml:space="preserve">
          <source>Represents a list of 4 typed Objects.</source>
          <target state="translated">4つの型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="2a4693b0e8cf9de4e917822ea4bd8d324ce3ced2" translate="yes" xml:space="preserve">
          <source>Represents a list of 5 typed Objects.</source>
          <target state="translated">5つの型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="aacd37b7f0833a559879c2b68dd2146df6da276d" translate="yes" xml:space="preserve">
          <source>Represents a list of 6 typed Objects.</source>
          <target state="translated">6つの型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="f3d6f82feed5e5bd7efd1def9991d4b4dac62afd" translate="yes" xml:space="preserve">
          <source>Represents a list of 7 typed Objects.</source>
          <target state="translated">7つの型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="01a247a519d40694ac699f21079e0b383afc7b9a" translate="yes" xml:space="preserve">
          <source>Represents a list of 8 typed Objects.</source>
          <target state="translated">8つの型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="8cdc395a246dc4cdadfeace13bbb809c64d3efb7" translate="yes" xml:space="preserve">
          <source>Represents a list of 9 typed Objects.</source>
          <target state="translated">9つの型付きオブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="88098536ddaf2c6993a498d8db68a7ed3aaf3530" translate="yes" xml:space="preserve">
          <source>Represents a list of Integer objects starting at a specified &lt;code&gt;from&lt;/code&gt; value up (or down) to and potentially including a given &lt;code&gt;to&lt;/code&gt; value.</source>
          <target state="translated">整数のリストを指定で始まるオブジェクトを表す &lt;code&gt;from&lt;/code&gt; 与えられるなどして、潜在的に価値アップ（又はダウン） &lt;code&gt;to&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="2c230171b00a55268aac766f2c28886d4e983a4b" translate="yes" xml:space="preserve">
          <source>Represents a list of Objects.</source>
          <target state="translated">オブジェクトのリストを表します。</target>
        </trans-unit>
        <trans-unit id="1b35db0368e432a2199feeb18f941538cd829c5e" translate="yes" xml:space="preserve">
          <source>Represents a local variable name, the simplest form of expression. e.g. &quot;foo&quot;.</source>
          <target state="translated">ローカル変数名を表し、最も単純な表現形式です。</target>
        </trans-unit>
        <trans-unit id="e541754c71f90c9c77df1f658cb23aae72b229f0" translate="yes" xml:space="preserve">
          <source>Represents a map expression [1 : 2, &quot;a&quot; : &quot;b&quot;, x : y] which creates a mutable Map</source>
          <target state="translated">変形可能なMapを作成するマップ式[1:2,&quot;a&quot;:&quot;b&quot;,x:y]を表します。</target>
        </trans-unit>
        <trans-unit id="20247aa1201cb16a83d1ba78b624fabe459c9025" translate="yes" xml:space="preserve">
          <source>Represents a memoize cache with its essential methods</source>
          <target state="translated">memoizeキャッシュとその必須メソッドを表します。</target>
        </trans-unit>
        <trans-unit id="992f8d82bf636fc7955b48c4a14f8efd67e33487" translate="yes" xml:space="preserve">
          <source>Represents a method declaration.</source>
          <target state="translated">メソッド宣言を表します。</target>
        </trans-unit>
        <trans-unit id="93fb3f1251373c51c8ba610a74219980d7d92c5a" translate="yes" xml:space="preserve">
          <source>Represents a method on an object using a closure which can be invoked at any time</source>
          <target state="translated">いつでも呼び出すことができるクロージャを使用したオブジェクト上のメソッドを表します。</target>
        </trans-unit>
        <trans-unit id="792a4491691b0415b63a4ab74105d210e798da48" translate="yes" xml:space="preserve">
          <source>Represents a method pointer on an object such as &lt;code&gt;foo.&amp;amp;bar&lt;/code&gt; which means find the method pointer for the &lt;code&gt;bar&lt;/code&gt; method on the &lt;code&gt;foo&lt;/code&gt; instance. This is equivalent to: &lt;code&gt;
 foo.metaClass.getMethodPointer(foo, &quot;bar&quot;)
 &lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;foo.&amp;amp;bar&lt;/code&gt; などのオブジェクトのメソッドポインターを表します。これは、 &lt;code&gt;foo&lt;/code&gt; インスタンスの &lt;code&gt;bar&lt;/code&gt; メソッドのメソッドポインターを見つけることを意味します。これは次と同等です： &lt;code&gt; foo.metaClass.getMethodPointer(foo, &quot;bar&quot;) &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b263f09656b938c8437faaf3860e5d7bc9bdbe81" translate="yes" xml:space="preserve">
          <source>Represents a method reference or a constructor reference, e.g. System.out::println OR Objects::requireNonNull OR Integer::new OR int[]::new</source>
          <target state="translated">メソッド参照またはコンストラクタ参照を表します。</target>
        </trans-unit>
        <trans-unit id="11f825ecc58bf3c29abd69589aa487dfee3f9b04" translate="yes" xml:space="preserve">
          <source>Represents a mixin which can be applied to any ClassNode to implement mixins</source>
          <target state="translated">ミキシンを実装するために任意のClassNodeに適用できるミキシンを表します。</target>
        </trans-unit>
        <trans-unit id="190c72d6530c4079bd22466b24ecd4dfbb0e24cf" translate="yes" xml:space="preserve">
          <source>Represents a model of a value</source>
          <target state="translated">値のモデルを表します。</target>
        </trans-unit>
        <trans-unit id="0cfa0509ded0505c5b97abb0ab0cccc1d6fb2da6" translate="yes" xml:space="preserve">
          <source>Represents a modifier</source>
          <target state="translated">修飾子を表します。</target>
        </trans-unit>
        <trans-unit id="d8dded5b78f4fe0adaa3a767ae1e4c7b3c5db639" translate="yes" xml:space="preserve">
          <source>Represents a module, which consists typically of a class declaration but could include some imports, some statements and multiple classes intermixed with statements like scripts in Python or Ruby</source>
          <target state="translated">モジュールを表します。通常はクラス宣言で構成されますが、いくつかのインポートやステートメント、PythonやRubyのスクリプトのようなステートメントが混ざった複数のクラスを含むことができます。</target>
        </trans-unit>
        <trans-unit id="35df951f6ec4d47592ee13b1d38215d7d7756e1d" translate="yes" xml:space="preserve">
          <source>Represents a nested value model such as a PropertyModel or a ClosureModel</source>
          <target state="translated">PropertyModel や ClosureModel のような入れ子になった値モデルを表します。</target>
        </trans-unit>
        <trans-unit id="148f2f7c7ae3eb8d9affa95ad0dfcb0ed8cb0bca" translate="yes" xml:space="preserve">
          <source>Represents a node.</source>
          <target state="translated">ノードを表します。</target>
        </trans-unit>
        <trans-unit id="d75514f40ccfa0cefcf9578f3a5bba774a1b972a" translate="yes" xml:space="preserve">
          <source>Represents a number of field models which can be ValueModel, PropertyModel, TableModel, TreeModel or nested FormModel instances</source>
          <target state="translated">ValueModel、PropertyModel、TableModel、TreeModel、またはネストされた FormModel インスタンスであることができる多数のフィールドモデルを表します。</target>
        </trans-unit>
        <trans-unit id="5d6ba4ffd6f4c4c3d2152842dc089d151096ae01" translate="yes" xml:space="preserve">
          <source>Represents a package in the AST.</source>
          <target state="translated">ASTのパッケージを表します。</target>
        </trans-unit>
        <trans-unit id="a0aa9192a0f4c62c363ecb465bfc557d1881aa9a" translate="yes" xml:space="preserve">
          <source>Represents a parameter on a constructor or method call. The type name is optional - it defaults to java.lang.Object if unknown.</source>
          <target state="translated">コンストラクタやメソッド呼び出しのパラメータを表します。型名はオプションで、不明な場合は java.lang.Object がデフォルトとなります。</target>
        </trans-unit>
        <trans-unit id="7359c30bebf0f168be57b48beeb99cc792c83a53" translate="yes" xml:space="preserve">
          <source>Represents a postfix expression like foo++ or bar++</source>
          <target state="translated">foo++や bar++のような postfix 式を表します。</target>
        </trans-unit>
        <trans-unit id="bb894a99d275bc03f9f47b951e7704657b0a4b58" translate="yes" xml:space="preserve">
          <source>Represents a prefix expression like ++foo or --bar</source>
          <target state="translated">++foo や --bar のような接頭辞式を表します。</target>
        </trans-unit>
        <trans-unit id="7e1f4dd93d330fdd9a12749d464859f19b50ace3" translate="yes" xml:space="preserve">
          <source>Represents a property (member variable, a getter and setter)</source>
          <target state="translated">プロパティ(メンバ変数、ゲッター、セッター)を表します。</target>
        </trans-unit>
        <trans-unit id="125658757289acbe29360665f2769ec212ae6174" translate="yes" xml:space="preserve">
          <source>Represents a property access such as the expression &quot;foo.bar&quot;.</source>
          <target state="translated">式 &quot;foo.bar &quot;のようなプロパティアクセスを表します。</target>
        </trans-unit>
        <trans-unit id="906b737b251bb2d47908020978389d8d7543fd43" translate="yes" xml:space="preserve">
          <source>Represents a property in an Expando object</source>
          <target state="translated">Expando オブジェクトのプロパティを表します。</target>
        </trans-unit>
        <trans-unit id="912505a40ccd25689f539e533055147331cd57a4" translate="yes" xml:space="preserve">
          <source>Represents a property of a value as a model.</source>
          <target state="translated">値のプロパティをモデルとして表現します。</target>
        </trans-unit>
        <trans-unit id="e9a5cecb64709b81e83cdfa5cceb34a2b56e5c60" translate="yes" xml:space="preserve">
          <source>Represents a property on a bean which may have a getter and/or a setter</source>
          <target state="translated">ゲッターやセッターを持つBeanのプロパティを表します。</target>
        </trans-unit>
        <trans-unit id="00513816442cfe084200504b0564f1a431bcebe8" translate="yes" xml:space="preserve">
          <source>Represents a provider used to create value</source>
          <target state="translated">値を作成するために使用されるプロバイダを表します。</target>
        </trans-unit>
        <trans-unit id="a0cd7182c95fcfd546c02b810ac66fcbd50ec7b2" translate="yes" xml:space="preserve">
          <source>Represents a range expression such as for iterating. E.g.:</source>
          <target state="translated">反復処理などの範囲表現を表します。例えば</target>
        </trans-unit>
        <trans-unit id="720c77111bbdfb85c05dd4e8b9bad246a6f4e92d" translate="yes" xml:space="preserve">
          <source>Represents a reference to a value</source>
          <target state="translated">値への参照を表します。</target>
        </trans-unit>
        <trans-unit id="2e4101e07693f1be8e1896510d54facbc5984949" translate="yes" xml:space="preserve">
          <source>Represents a reference to a variable in a script</source>
          <target state="translated">スクリプト内の変数への参照を表します。</target>
        </trans-unit>
        <trans-unit id="eb9a18d928150f4085f10f50168088a81ae4c670" translate="yes" xml:space="preserve">
          <source>Represents a resolved type as a placeholder.</source>
          <target state="translated">解決された型をプレースホルダとして表します。</target>
        </trans-unit>
        <trans-unit id="3ce850e7991b4d424a95c8dbbe184678b03505d1" translate="yes" xml:space="preserve">
          <source>Represents a row in a table layout</source>
          <target state="translated">テーブルレイアウトの行を表します。</target>
        </trans-unit>
        <trans-unit id="9e0970b78632d02b2505b707aeba561cdaa6b213" translate="yes" xml:space="preserve">
          <source>Represents a sequence of one or more objects of a given type. The type can be omitted in which case any type of object can be added.</source>
          <target state="translated">指定された型の1つ以上のオブジェクトのシーケンスを表す。型は省略することができ、その場合は任意の型のオブジェクトを追加することができます。</target>
        </trans-unit>
        <trans-unit id="2eb7e5f702f8439dcd458aad7336dfe64c6f26e2" translate="yes" xml:space="preserve">
          <source>Represents a sequence of zero or more objects of a given type. The type can be omitted in which case any type of object can be added.</source>
          <target state="translated">指定された型の0個以上のオブジェクトのシーケンスを表します。型は省略することができ、その場合は任意の型のオブジェクトを追加することができます。</target>
        </trans-unit>
        <trans-unit id="ece48245ce290a1da0fb98316e1f53d9f9484810" translate="yes" xml:space="preserve">
          <source>Represents a short ternary expression x ?: y, which is equal to</source>
          <target state="translated">と等しい短い三項式 x ?</target>
        </trans-unit>
        <trans-unit id="9f1adee7f4775eab47b6ac8a54a5c92e39c62f1a" translate="yes" xml:space="preserve">
          <source>Represents a simple key-value cache, which is NOT thread safe and backed by a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;Map&lt;/a&gt; instance</source>
          <target state="translated">単純なKey-Valueキャッシュを表します。これはスレッドセーフではなく、&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;Map&lt;/a&gt;インスタンスによってサポートされています。</target>
        </trans-unit>
        <trans-unit id="76de31becbcb4894eaf870e4c04cf7e08b42a5c2" translate="yes" xml:space="preserve">
          <source>Represents a simple key-value cache, which is thread safe and backed by a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;Map&lt;/a&gt; instance</source>
          <target state="translated">単純なKey-Valueキャッシュを表します。これはスレッドセーフであり、&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;Map&lt;/a&gt;インスタンスによってサポートされています。</target>
        </trans-unit>
        <trans-unit id="81b24e286f83046d54bba4cfb1c9099abdea044b" translate="yes" xml:space="preserve">
          <source>Represents a simple key-value cache, which is thread safe and backed by a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;Map&lt;/a&gt; instance. StampedCommonCache has better performance than &lt;a href=&quot;concurrentcommoncache&quot;&gt;ConcurrentCommonCache&lt;/a&gt;, but it is not reentrant, in other words, &lt;b&gt;it may cause deadlock&lt;/b&gt; if &lt;a href=&quot;#getAndPut(java.lang.Object,%20org.codehaus.groovy.runtime.memoize.MemoizeCache.ValueProvider)&quot;&gt;getAndPut(Object, MemoizeCache.ValueProvider)&lt;/a&gt; or &lt;a href=&quot;#getAndPut(java.lang.Object,%20org.codehaus.groovy.runtime.memoize.MemoizeCache.ValueProvider,%20boolean)&quot;&gt;getAndPut(Object, MemoizeCache.ValueProvider, boolean)&lt;/a&gt; is called recursively: readlock -&amp;gt; upgrade to writelock -&amp;gt; readlock (fails to get and waits forever)</source>
          <target state="translated">単純なKey-Valueキャッシュを表します。これはスレッドセーフであり、&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;Map&lt;/a&gt;インスタンスによってサポートされています。StampedCommonCacheがより優れた性能がある&lt;a href=&quot;concurrentcommoncache&quot;&gt;ConcurrentCommonCacheを&lt;/a&gt;、それはリエントラントではありません、他の言葉で、&lt;b&gt;それはデッドロックが発生することがある&lt;/b&gt;場合&lt;a href=&quot;#getAndPut(java.lang.Object,%20org.codehaus.groovy.runtime.memoize.MemoizeCache.ValueProvider)&quot;&gt;getAndPut（オブジェクト、MemoizeCache.ValueProvider）&lt;/a&gt;または&lt;a href=&quot;#getAndPut(java.lang.Object,%20org.codehaus.groovy.runtime.memoize.MemoizeCache.ValueProvider,%20boolean)&quot;&gt;getAndPut（オブジェクト、MemoizeCache.ValueProvider、ブール値）を&lt;/a&gt;へのアップグレード&amp;gt; - readlock：再帰的に呼ばれていますwritelock-&amp;gt; readlock（取得に失敗し、永久に待機します）</target>
        </trans-unit>
        <trans-unit id="1fcb976940b82ff834e60391cd1b4ec47a6528af" translate="yes" xml:space="preserve">
          <source>Represents a spread expression *x in the list expression [1, *x, 2].</source>
          <target state="translated">リスト式[1,*x,2]の中のスプレッド式*xを表します。</target>
        </trans-unit>
        <trans-unit id="091c3b62cda0bb1315632a995402cd53bec929f2" translate="yes" xml:space="preserve">
          <source>Represents a spread map expression *:m in the map expression [1, *:m, 2, &quot;c&quot;:100] or in the method invoke expression func(1, *:m, 2, &quot;c&quot;:100).</source>
          <target state="translated">マップ式[1,*:m,2,&quot;c&quot;:100]またはメソッド呼び出し式func(1,*:m,2,&quot;c&quot;:100)の中のスプレッドマップ式*:mを表します。</target>
        </trans-unit>
        <trans-unit id="2103b8c0e7932880d82989e6209152d17fd63946" translate="yes" xml:space="preserve">
          <source>Represents a standard for loop in Groovy</source>
          <target state="translated">Groovyの標準的なループを表します。</target>
        </trans-unit>
        <trans-unit id="ffc2d1505038d75a86daba6921cdc157425ffeef" translate="yes" xml:space="preserve">
          <source>Represents a switch (object) { case value: ... case [1, 2, 3]: ... default: ... } statement in Groovy.</source>
          <target state="translated">Groovyのスイッチ(オブジェクト){case value:...case [1,2,3]:...default:...}文を表します。Groovyのスイッチ(オブジェクト){case value:...case [1,2,3]:...default:...</target>
        </trans-unit>
        <trans-unit id="7112ebdd6cdbba015b9edb1daec6e21efd648505" translate="yes" xml:space="preserve">
          <source>Represents a synchronized statement</source>
          <target state="translated">同期化された文を表します。</target>
        </trans-unit>
        <trans-unit id="1c19031191ba78b9b3b8759c69715fab449ddeb1" translate="yes" xml:space="preserve">
          <source>Represents a syntax error of groovy program</source>
          <target state="translated">groovy プログラムの構文エラーを表します。</target>
        </trans-unit>
        <trans-unit id="4537fb8e3687b99692b10cb96f478997585733ab" translate="yes" xml:space="preserve">
          <source>Represents a ternary expression (booleanExpression) ? expression : expression</source>
          <target state="translated">三項式(booleanExpression)を表現します。</target>
        </trans-unit>
        <trans-unit id="29fe88d5714b1e8b3955c91a3a73842e1a4e09b7" translate="yes" xml:space="preserve">
          <source>Represents a throw statement</source>
          <target state="translated">throw文を表します。</target>
        </trans-unit>
        <trans-unit id="2198585b54ff893000a2b01ada5328d4e934d9b2" translate="yes" xml:space="preserve">
          <source>Represents a try { ... } catch () finally {} statement in Groovy</source>
          <target state="translated">try{...Groovyでは、Catch ()finally {}ステートメントを表現しています。</target>
        </trans-unit>
        <trans-unit id="5f477381e4fcf5969fb166365da291898781bb8b" translate="yes" xml:space="preserve">
          <source>Represents a typecast expression.</source>
          <target state="translated">タイプキャスト式を表します。</target>
        </trans-unit>
        <trans-unit id="d95f0420fac528e18152ff70ca924841f7dcb625" translate="yes" xml:space="preserve">
          <source>Represents a value model using a closure to extract the value from some source model and an optional write closure for updating the value.</source>
          <target state="translated">あるソースモデルから値を抽出するためのクロージャと、値を更新するためのオプションの書き込みクロージャを使用した値モデルを表します。</target>
        </trans-unit>
        <trans-unit id="e975765cf94cc0f87ecc0eeabea7ce6506de7a11" translate="yes" xml:space="preserve">
          <source>Represents a while (condition) { ... } loop in Groovy</source>
          <target state="translated">Groovy の while (condition){...ループを表現しています。</target>
        </trans-unit>
        <trans-unit id="55a4d12b25b44e4cdfec37d53dae8adbc46a9842" translate="yes" xml:space="preserve">
          <source>Represents access to a Java/Groovy class in an expression, such as when invoking a static method or accessing a static type</source>
          <target state="translated">静的メソッドの呼び出しや静的型へのアクセスなど、式の中でJava/Groovyクラスへのアクセスを表します。</target>
        </trans-unit>
        <trans-unit id="bdeebdc6b2af68bc3e952320a88a111fc93a76c5" translate="yes" xml:space="preserve">
          <source>Represents an annotation &quot;constant&quot; that may appear in annotation attributes (mainly used as a marker).</source>
          <target state="translated">注釈属性に現れる可能性のある注釈「定数」を表します(主にマーカーとして使用されます)。</target>
        </trans-unit>
        <trans-unit id="a535031de5c2f20dc5eb7033d17b2b77d58d84cf" translate="yes" xml:space="preserve">
          <source>Represents an annotation which can be attached to interfaces, classes, methods, fields, parameters, and other places.</source>
          <target state="translated">インターフェース、クラス、メソッド、フィールド、パラメータなどに付けることができるアノテーションを表します。</target>
        </trans-unit>
        <trans-unit id="d75c33b50dc9bdc00f5fc3240cb58a6666dd0f4d" translate="yes" xml:space="preserve">
          <source>Represents an arbitrary tree node which can be used for structured metadata or any arbitrary XML-like tree. A node can have a name, a value and an optional Map of attributes. Typically the name is a String and a value is either a String or a List of other Nodes, though the types are extensible to provide a flexible structure, e.g. you could use a QName as the name which includes a namespace URI and a local name. Or a JMX ObjectName etc. So this class can represent metadata like &lt;code&gt;{foo a=1 b=&quot;abc&quot;}&lt;/code&gt; or nested metadata like &lt;code&gt;{foo a=1 b=&quot;123&quot; { bar x=12 text=&quot;hello&quot; }}&lt;/code&gt;</source>
          <target state="translated">構造化メタデータまたは任意のXMLのようなツリーに使用できる任意のツリーノードを表します。ノードには、名前、値、およびオプションの属性マップを含めることができます。通常、名前は文字列であり、値は文字列または他のノードのリストのいずれかですが、タイプは柔軟な構造を提供するために拡張可能です。たとえば、名前空間URIとローカル名を含む名前としてQNameを使用できます。または、JMX ObjectNameなど。したがって、このクラスは、 &lt;code&gt;{foo a=1 b=&quot;abc&quot;}&lt;/code&gt; のようなメタデータまたは &lt;code&gt;{foo a=1 b=&quot;123&quot; { bar x=12 text=&quot;hello&quot; }}&lt;/code&gt; ようなネストされたメタデータを表すことができます。</target>
        </trans-unit>
        <trans-unit id="eca2bd40fded900551d806fd72ec9ca6547774be" translate="yes" xml:space="preserve">
          <source>Represents an array object construction. One of:</source>
          <target state="translated">配列オブジェクトの構築を表します。の一つです。</target>
        </trans-unit>
        <trans-unit id="107500e5e2f4a548f1bb7fb2a7e66418a43ab9d5" translate="yes" xml:space="preserve">
          <source>Represents an assert statement. E.g.: &lt;code&gt;
 assert i != 0 : &quot;should never be zero&quot;;
 &lt;/code&gt;</source>
          <target state="translated">アサートステートメントを表します。例： &lt;code&gt; assert i != 0 : &quot;should never be zero&quot;; &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96b6145a4992941eca63f47f0e5e4e3fb879fca7" translate="yes" xml:space="preserve">
          <source>Represents an attribute access (accessing the field of a class) such as the expression &quot;foo.@bar&quot;.</source>
          <target state="translated">foo.@barという式のような属性アクセス(クラスのフィールドへのアクセス)を表します。</target>
        </trans-unit>
        <trans-unit id="6c130966737ffd5e1dcae3505c21951f5011c56b" translate="yes" xml:space="preserve">
          <source>Represents an entry inside a map expression such as 1 : 2.</source>
          <target state="translated">1:2 のようなマップ式の中のエントリを表します。</target>
        </trans-unit>
        <trans-unit id="468061922b3822e91b0f6661d2607792dc8d8e81" translate="yes" xml:space="preserve">
          <source>Represents an evictable memoize cache with its essential methods</source>
          <target state="translated">evictable memoizeキャッシュとその本質的なメソッドを表現します。</target>
        </trans-unit>
        <trans-unit id="dd788bbe4329a0d54fd9bb5d190cae07311c55db" translate="yes" xml:space="preserve">
          <source>Represents an extent of objects</source>
          <target state="translated">オブジェクトのエクステントを表します。</target>
        </trans-unit>
        <trans-unit id="18d5db9cf0010572dcf17163216461f4b7168dbc" translate="yes" xml:space="preserve">
          <source>Represents an extent of objects. It's primarily used by methods of Groovy's &lt;a href=&quot;sql&quot;&gt;Sql&lt;/a&gt; class to return &lt;code&gt;ResultSet&lt;/code&gt; data in map form; allowing access to the result of a SQL query by the name of the column, or by the column number.</source>
          <target state="translated">オブジェクトの範囲を表します。これは主に、Groovyの&lt;a href=&quot;sql&quot;&gt;Sql&lt;/a&gt;クラスのメソッドによって使用され、 &lt;code&gt;ResultSet&lt;/code&gt; データをマップ形式で返します。列の名前または列番号によってSQLクエリの結果にアクセスできるようにします。</target>
        </trans-unit>
        <trans-unit id="0c227938bca5ac540d8b8b1c6d547553a8ea3197" translate="yes" xml:space="preserve">
          <source>Represents an if (condition) { ... } else { ... } statement in Groovy</source>
          <target state="translated">if (条件){...else{...文を表現しています。</target>
        </trans-unit>
        <trans-unit id="670e2116791d86e6b5dee15da7e3ad7938244835" translate="yes" xml:space="preserve">
          <source>Represents an immutable list of Numbers from a value to a value with a particular step size. In general, it isn't recommended using a NumberRange as a key to a map. The range 0..3 is deemed to be equal to 0.0..3.0 but they have different hashCode values, so storing a value using one of these ranges couldn't be retrieved using the other.</source>
          <target state="translated">特定のステップサイズを持つ値から値までのNumbersの不変リストを表します。一般的に、マップのキーとしてNumberRangeを使用することは推奨されません。0.3の範囲は0.0.0.3.0と同じとみなされますが、ハッシュコードの値が異なるため、どちらかの範囲を使って値を格納しても、もう一方の範囲を使って検索することはできません。</target>
        </trans-unit>
        <trans-unit id="8cb17d5edb095253c5431a6171499f8829dadae4" translate="yes" xml:space="preserve">
          <source>Represents an import statement.</source>
          <target state="translated">インポート文を表します。</target>
        </trans-unit>
        <trans-unit id="fb13862071ea096cb63f2ceca7fa763168f87833" translate="yes" xml:space="preserve">
          <source>Represents an inclusive list of objects from a value to a value using comparators.</source>
          <target state="translated">コンパレータを使用して、値から値までのオブジェクトの包括的なリストを表します。</target>
        </trans-unit>
        <trans-unit id="4138fd24c53a0f4a77e3d1785bc98e66df201d5a" translate="yes" xml:space="preserve">
          <source>Represents an inner class declaration</source>
          <target state="translated">内部クラス宣言を表します。</target>
        </trans-unit>
        <trans-unit id="ef93255dca35fe512561dda9e0fb63a71996d32f" translate="yes" xml:space="preserve">
          <source>Represents an inner class defined as helper for an interface</source>
          <target state="translated">インタフェースのヘルパーとして定義された内部クラスを表します。</target>
        </trans-unit>
        <trans-unit id="89cc58b2f7e2cd2583011556c8fcdaecdc82da27" translate="yes" xml:space="preserve">
          <source>Represents an object which is capable of writing itself to a text stream in a more efficient format than just creating a toString() representation of itself. This mechanism is particularly useful for templates and such like.</source>
          <target state="translated">自分自身を単に toString()で表現するよりも効率的な形式でテキストストリームに書き込むことができるオブジェクトを表します。この仕組みは特にテンプレートなどに便利です。</target>
        </trans-unit>
        <trans-unit id="13afbf52b28f94fff9d0a6a3b6e8f1b8c9d509f1" translate="yes" xml:space="preserve">
          <source>Represents any closure object in Groovy.</source>
          <target state="translated">Groovyの任意のクロージャオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="633a778bbb54d64c99ca3e53caec8da203890dce" translate="yes" xml:space="preserve">
          <source>Represents both normal files and directories</source>
          <target state="translated">通常のファイルとディレクトリの両方を表します。</target>
        </trans-unit>
        <trans-unit id="27df5ab0e7b976a1bf83459c92011481676f9f9c" translate="yes" xml:space="preserve">
          <source>Represents compile time variable metadata while compiling a method.</source>
          <target state="translated">メソッドをコンパイルする際のコンパイル時の変数のメタデータを表します。</target>
        </trans-unit>
        <trans-unit id="14d8d2640f3c2e1afe5eb2392c3b7c95f8ac55bc" translate="yes" xml:space="preserve">
          <source>Represents concurrent cache holding SoftReference instance as value</source>
          <target state="translated">SoftReferenceインスタンスを値として保持しているコンカレントキャッシュを表します。</target>
        </trans-unit>
        <trans-unit id="bdfe641140f4aecb3557d033bb167ff9420a478d" translate="yes" xml:space="preserve">
          <source>Represents constraints in AST pattern matching.</source>
          <target state="translated">ASTパターンマッチングにおける制約を表します。</target>
        </trans-unit>
        <trans-unit id="37db2f10e63ed4e59f85cfd0c2d15fd975b9a8a6" translate="yes" xml:space="preserve">
          <source>Represents directories</source>
          <target state="translated">ディレクトリを表します。</target>
        </trans-unit>
        <trans-unit id="43d4545bb8fed128f511b6a1b08fd837f507b043" translate="yes" xml:space="preserve">
          <source>Represents error occurred during finding classes</source>
          <target state="translated">クラスの検索中に発生したエラーを表します</target>
        </trans-unit>
        <trans-unit id="de53112696c5608dd9bbde04ece22b0f601a2852" translate="yes" xml:space="preserve">
          <source>Represents functional interface writer which contains some common methods to complete generating bytecode</source>
          <target state="translated">バイトコードの生成を完了するための一般的なメソッドを含む関数型インタフェースライタを表します.</target>
        </trans-unit>
        <trans-unit id="920bdeb5417c93dd46d87ef8286d8249a32f86a6" translate="yes" xml:space="preserve">
          <source>Represents groovydoc</source>
          <target state="translated">groovydocを表します。</target>
        </trans-unit>
        <trans-unit id="253ac8318154c3afa3a02580a8a6750fb31aaf46" translate="yes" xml:space="preserve">
          <source>Represents highlighter to highlight matched parentheses, brackets and curly braces when caret touching them</source>
          <target state="translated">マッチした括弧、括弧、中括弧をキャレットでタッチしたときにハイライトするためのハイライターを表します。</target>
        </trans-unit>
        <trans-unit id="f169280bd4ea4401cef6be0b96e089bde669c7a4" translate="yes" xml:space="preserve">
          <source>Represents method nodes which are used by the static type checker to virtually add methods coming from &lt;a href=&quot;../../runtime/defaultgroovymethods&quot;&gt;DGM-like&lt;/a&gt; methods.</source>
          <target state="translated">静的型チェッカーが&lt;a href=&quot;../../runtime/defaultgroovymethods&quot;&gt;DGMのような&lt;/a&gt;メソッドからのメソッドを仮想的に追加するために使用するメソッドノードを表します。</target>
        </trans-unit>
        <trans-unit id="a4f5017fb104c73b5656f39b550f0e638493d839" translate="yes" xml:space="preserve">
          <source>Represents multiple other exceptions</source>
          <target state="translated">他の複数の例外を表します。</target>
        </trans-unit>
        <trans-unit id="fd56e9f7a20028f9f2aa65fdfc49fda51e052ce3" translate="yes" xml:space="preserve">
          <source>Represents normal files</source>
          <target state="translated">通常のファイルを表す</target>
        </trans-unit>
        <trans-unit id="7b82a314d1b7809f26284ae576c8d7747ffec936" translate="yes" xml:space="preserve">
          <source>Represents one or more arguments being passed into a method</source>
          <target state="translated">メソッドに渡される1つ以上の引数を表します。</target>
        </trans-unit>
        <trans-unit id="b6cb5ac941d2934fc9f057bb29d95fb447355cec" translate="yes" xml:space="preserve">
          <source>Represents one or more arguments being passed into a method by name</source>
          <target state="translated">メソッドに渡される1つ以上の引数を名前で表します。</target>
        </trans-unit>
        <trans-unit id="2f599fcaca3e2f254ff3d0b3834bdab6ee871f49" translate="yes" xml:space="preserve">
          <source>Represents one or more local variables. Typically it is a single local variable declared by name with an expression like &quot;def foo&quot; or with type &quot;String foo&quot;. However, the multiple assignment feature allows you to create two or more variables using an expression like: &lt;code&gt;def (x, y) = [1, 2]&lt;/code&gt;.</source>
          <target state="translated">1つ以上のローカル変数を表します。通常、これは「deffoo」のような式または「Stringfoo」型の名前で宣言された単一のローカル変数です。ただし、複数割り当て機能を使用すると &lt;code&gt;def (x, y) = [1, 2]&lt;/code&gt; ような式を使用して2つ以上の変数を作成できます。</target>
        </trans-unit>
        <trans-unit id="1396a305117ca73d62e878bb8248dab4260b47eb" translate="yes" xml:space="preserve">
          <source>Represents particular files of interest.</source>
          <target state="translated">興味のある特定のファイルを表します。</target>
        </trans-unit>
        <trans-unit id="a61bab2d99e50c6bc606ecc05c2160ca8c7d7c84" translate="yes" xml:space="preserve">
          <source>Represents runtime exception occurred when parsing or building YAML</source>
          <target state="translated">YAMLの解析または構築時に発生した実行時例外を表します。</target>
        </trans-unit>
        <trans-unit id="de58bac72c0305571f3da169e742b3c417daaee3" translate="yes" xml:space="preserve">
          <source>Represents some custom bytecode generation by the compiler.</source>
          <target state="translated">コンパイラによるカスタムバイトコード生成を表します。</target>
        </trans-unit>
        <trans-unit id="9cf99877f7fc334cd3eaf4ef18fb66fe294b56d2" translate="yes" xml:space="preserve">
          <source>Represents special return values for the 'preDir', 'postDir' and 'visit'/supplied Closures used with &lt;a href=&quot;../../org/codehaus/groovy/runtime/resourcegroovymethods#traverse(java.io.File,%20java.util.Map,%20groovy.lang.Closure)&quot;&gt;ResourceGroovyMethods.traverse&lt;/a&gt; and related methods to control subsequent traversal behavior.</source>
          <target state="translated">&lt;a href=&quot;../../org/codehaus/groovy/runtime/resourcegroovymethods#traverse(java.io.File,%20java.util.Map,%20groovy.lang.Closure)&quot;&gt;ResourceGroovyMethods.traverse&lt;/a&gt;および関連するメソッドで使用される「preDir」、「postDir」、および「visit」/提供されたクロージャーの特別な戻り値を表し、後続のトラバーサル動作を制御します。</target>
        </trans-unit>
        <trans-unit id="6bdf483e63da736e05f0758bf72d3b4d62a18cb8" translate="yes" xml:space="preserve">
          <source>Represents the action to deal with the cache</source>
          <target state="translated">キャッシュを処理するアクションを表します。</target>
        </trans-unit>
        <trans-unit id="3f283f37ecc547f39b5d9907608d94d459d45008" translate="yes" xml:space="preserve">
          <source>Represents the anonymous inner class for an enum constant This subtype is needed so that EnumVisitor can differentiate between the scenarios when a InnerClassNode represents anonymous inner class for an enu constant and when it represents an enum class defined inside another class</source>
          <target state="translated">このサブタイプは、EnumVisitor が InnerClassNode が enu 定数の匿名の内部クラスを表す場合と、別のクラスで定義された enum クラスを表す場合を区別できるようにするために必要なものです。</target>
        </trans-unit>
        <trans-unit id="dd1b9986e20b972b7279ba2149be4011c2af14ed" translate="yes" xml:space="preserve">
          <source>Represents the context of an enclosing closure.</source>
          <target state="translated">囲み込みクロージャのコンテキストを表します。</target>
        </trans-unit>
        <trans-unit id="1cfee4b16e2bdc098e59a2c082037195d8adc95f" translate="yes" xml:space="preserve">
          <source>Represents the context of an enclosing closure. An enclosing closure wraps a closure expression and the list of return types found in the closure body.</source>
          <target state="translated">囲み込みクロージャのコンテキストを表します。囲み込みクロージャは、クロージャ式とクロージャ本体に含まれる戻り値の型のリストをラップします。</target>
        </trans-unit>
        <trans-unit id="1c16ce07dcde407908af36120b5805f238d23df7" translate="yes" xml:space="preserve">
          <source>Represents the entire contents of a compilation step which consists of one or more &lt;a href=&quot;modulenode&quot;&gt;ModuleNode&lt;/a&gt; instances. There's one instance of this that's shared by all modules and classes compiled during a single invocation of the compiler.</source>
          <target state="translated">1つ以上の&lt;a href=&quot;modulenode&quot;&gt;ModuleNode&lt;/a&gt;インスタンスで構成されるコンパイルステップの内容全体を表します。コンパイラーの1回の呼び出し中にコンパイルされたすべてのモジュールとクラスによって共有されるこのインスタンスが1つあります。</target>
        </trans-unit>
        <trans-unit id="42e63a8b1e22a120925fb9914b483dd7a207b517" translate="yes" xml:space="preserve">
          <source>Represents the length property of an array</source>
          <target state="translated">配列の length プロパティを表します。</target>
        </trans-unit>
        <trans-unit id="419b9c80679953b760d2363f7e5a7f8e63a8c092" translate="yes" xml:space="preserve">
          <source>Represents the variable bindings of a script which can be altered from outside the script object or created outside of a script and passed into it.</source>
          <target state="translated">スクリプトオブジェクトの外部から変更したり、スクリプトの外部で作成してスクリプトに渡すことができるスクリプトの変数バインディングを表します。</target>
        </trans-unit>
        <trans-unit id="e5e6c8b9281211812fb873b6c4da5962c67842ab" translate="yes" xml:space="preserve">
          <source>Represents two expressions and an operation</source>
          <target state="translated">2つの式と操作を表す</target>
        </trans-unit>
        <trans-unit id="d01e4e299677f7c0f015a568c9330b92124b2e17" translate="yes" xml:space="preserve">
          <source>Represents unescaped JSON</source>
          <target state="translated">エスケープされていないJSONを表します。</target>
        </trans-unit>
        <trans-unit id="1f35cea1444314c57f3482515ed54e9174151a17" translate="yes" xml:space="preserve">
          <source>Required Element Summary</source>
          <target state="translated">必須要素の概要</target>
        </trans-unit>
        <trans-unit id="c0d94bfb4a6e5e941a5f042aa679abdcb14cc0b6" translate="yes" xml:space="preserve">
          <source>Reserved internal variable names (see &quot;Methods&quot; below)</source>
          <target state="translated">予約済みの内部変数名 (下記の「メソッド」を参照)</target>
        </trans-unit>
        <trans-unit id="d9187bf05b8c435dc50c30c68e60c7446c86da7c" translate="yes" xml:space="preserve">
          <source>Reset the reader to the last marked position (or the beginning if mark has not been called).</source>
          <target state="translated">リーダを最後にマークされた位置(マークが呼ばれていない場合は先頭)にリセットします。</target>
        </trans-unit>
        <trans-unit id="76d93331953078328e4d373d1898e377dac71e6c" translate="yes" xml:space="preserve">
          <source>Resets all the benchmark data on this object.</source>
          <target state="translated">このオブジェクトのすべてのベンチマークデータをリセットします。</target>
        </trans-unit>
        <trans-unit id="5aa6279a950f792f8ddc33928b418b5b52e15a50" translate="yes" xml:space="preserve">
          <source>Resets the stream to the most recent mark.</source>
          <target state="translated">ストリームを最新のマークにリセットします。</target>
        </trans-unit>
        <trans-unit id="ab73e134acfd189b49969adee2598365128380e8" translate="yes" xml:space="preserve">
          <source>Resolve the type of an expression.</source>
          <target state="translated">式の型を解決します。</target>
        </trans-unit>
        <trans-unit id="19331584bca559869cf1a19feb3042f48fabcdc4" translate="yes" xml:space="preserve">
          <source>Resolve the type of an expression. Depending on the implementations, the returned type may be the declared type or an inferred type.</source>
          <target state="translated">式の型を解決します。実装によっては、返される型は宣言された型か推論された型のどちらかになります。</target>
        </trans-unit>
        <trans-unit id="3d812164c02b09bcd56d81d0e30e496c7a2d7e13" translate="yes" xml:space="preserve">
          <source>Resolvers must implement this method in order to resolve a template, given a template path.</source>
          <target state="translated">リゾルバは、テンプレートパスを与えられたテンプレートを解決するために、このメソッドを実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="17b856deb29ab1f52f3fbabf87de652102507819" translate="yes" xml:space="preserve">
          <source>Resolvers must implement this method in order to resolve a template, given a template path. They must return a valid URL or an IOException.</source>
          <target state="translated">リゾルバは、テンプレートパスを与えられたテンプレートを解決するために、このメソッドを実装しなければなりません。有効なURLかIOExceptionを返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="d2a7de9b60c84ea658d2599393008ffac8fddd77" translate="yes" xml:space="preserve">
          <source>Resolves entities against using the supplied URL as the base for relative URLs</source>
          <target state="translated">指定された URL を相対 URL のベースとして使用することに反対するエンティティを解決します。</target>
        </trans-unit>
        <trans-unit id="acde07defd68a71a7a8011a2a92b1693dad794ec" translate="yes" xml:space="preserve">
          <source>Resolves the name of a class to a SourceUnit or ClassNode.</source>
          <target state="translated">クラスの名前を SourceUnit または ClassNode に解決します。</target>
        </trans-unit>
        <trans-unit id="8280c8f7f0d2b517b91386cf873da2a8a0ce009b" translate="yes" xml:space="preserve">
          <source>Resolves the name of a class to a SourceUnit or ClassNode. If no class or source is found this method returns null. A lookup is done by first asking the cache if there is an entry for the class already available to then call &lt;a href=&quot;#findClassNode(java.lang.String,%20org.codehaus.groovy.control.CompilationUnit)&quot;&gt;findClassNode(String, CompilationUnit)&lt;/a&gt;. The result of that method call will be cached if a ClassNode is found. If a SourceUnit is found, this method will not be asked later on again for that class, because ResolveVisitor will first ask the CompilationUnit for classes in the compilation queue and it will find the class for that SourceUnit there then. method return a ClassNode instead of a SourceUnit, the res</source>
          <target state="translated">クラスの名前をSourceUnitまたはClassNodeに解決します。クラスまたはソースが見つからない場合、このメソッドはnullを返します。ルックアップは、最初にキャッシュに、&lt;a href=&quot;#findClassNode(java.lang.String,%20org.codehaus.groovy.control.CompilationUnit)&quot;&gt;findClassNode（String、CompilationUnit）を&lt;/a&gt;呼び出すためにすでに使用可能なクラスのエントリがあるかどうかを尋ねることによって行われます。ClassNodeが見つかった場合、そのメソッド呼び出しの結果はキャッシュされます。SourceUnitが見つかった場合、ResolveVisitorは最初にCompilationUnitにコンパイルキュー内のクラスを要求し、そこでそのSourceUnitのクラスを見つけるため、このメソッドは後でそのクラスを要求されません。メソッドは、SourceUnitの代わりにClassNodeを返します。</target>
        </trans-unit>
        <trans-unit id="47cd121a0dd810c0f82672866d720ddbc5d32cc1" translate="yes" xml:space="preserve">
          <source>Resource handling is performed automatically where appropriate.</source>
          <target state="translated">リソースの処理は、必要に応じて自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="a52e6c4ce18fcdac82164327744cb4424f92bb8c" translate="yes" xml:space="preserve">
          <source>Resource name mangling (pattern replacement)</source>
          <target state="translated">リソース名のマングリング(パターン置換</target>
        </trans-unit>
        <trans-unit id="eb12bf671b88178cc769433ebbb336acb85a3153" translate="yes" xml:space="preserve">
          <source>ResourceBundle.getBundle</source>
          <target state="translated">ResourceBundle.getBundle</target>
        </trans-unit>
        <trans-unit id="d4bd002c9740a63e70b69a9decd716be20b0128d" translate="yes" xml:space="preserve">
          <source>ResourceConnector</source>
          <target state="translated">ResourceConnector</target>
        </trans-unit>
        <trans-unit id="82e172a772f67698ab10b943d132a702328dd015" translate="yes" xml:space="preserve">
          <source>ResourceException</source>
          <target state="translated">ResourceException</target>
        </trans-unit>
        <trans-unit id="0a7927838af763ffe28cc72f5b2ebe1084c88d0c" translate="yes" xml:space="preserve">
          <source>ResourceException if there is a problem accessing the script</source>
          <target state="translated">スクリプトへのアクセスに問題がある場合のResourceException</target>
        </trans-unit>
        <trans-unit id="667671fa4f9416f0d786043650742c5782e4e5d7" translate="yes" xml:space="preserve">
          <source>ResourceManager</source>
          <target state="translated">ResourceManager</target>
        </trans-unit>
        <trans-unit id="672246dd9a20eaa9376f3aff46e15518afc56aa5" translate="yes" xml:space="preserve">
          <source>Restores the state of the current builder to the same state as an older build.</source>
          <target state="translated">現在のビルダーの状態を古いビルドと同じ状態に戻す。</target>
        </trans-unit>
        <trans-unit id="cb08184ca72d5e4db0e0602296e10cf5546deb3c" translate="yes" xml:space="preserve">
          <source>Restores the state of the current builder to the same state as an older build. Caution, this will destroy rather than merge the current build context if there is any,</source>
          <target state="translated">現在のビルダの状態を、古いビルドと同じ状態に戻します。注意してください。これは、現在のビルドコンテキストがある場合には、マージではなく破棄します。</target>
        </trans-unit>
        <trans-unit id="e03e5ddabefea1fdf92004e74b851fa8bfe96ddd" translate="yes" xml:space="preserve">
          <source>ResultSet</source>
          <target state="translated">ResultSet</target>
        </trans-unit>
        <trans-unit id="d02cdfb20e328c3ea6710d56ad0f42215e998899" translate="yes" xml:space="preserve">
          <source>ResultSet from an executeQuery method.</source>
          <target state="translated">executeQueryメソッドからのResultSet。</target>
        </trans-unit>
        <trans-unit id="a52e6f7fb77efe8e23be3092e73906d541a35321" translate="yes" xml:space="preserve">
          <source>ResultSet from executing a query</source>
          <target state="translated">クエリを実行した結果セット</target>
        </trans-unit>
        <trans-unit id="64f9a63370922e04122ec3cb888a9954da3655d7" translate="yes" xml:space="preserve">
          <source>ResultSet#getObject(java.lang.String)</source>
          <target state="translated">ResultSet#getObject(java.lang.String)</target>
        </trans-unit>
        <trans-unit id="4b7600959d878a6dec6f3c01f2095bd158ad3ab2" translate="yes" xml:space="preserve">
          <source>ResultSet#updateObject(java.lang.String, java.lang.Object)</source>
          <target state="translated">ResultSet#updateObject(java.lang.String,java.lang.Object)</target>
        </trans-unit>
        <trans-unit id="4b16caaa6047d5cb595e57b663a591cbe8c30913" translate="yes" xml:space="preserve">
          <source>ResultSet.getObject</source>
          <target state="translated">ResultSet.getObject</target>
        </trans-unit>
        <trans-unit id="2d7b576855f8bb1366815f0f46af0c03adf86b96" translate="yes" xml:space="preserve">
          <source>ResultSet.insertRow</source>
          <target state="translated">ResultSet.insertRow</target>
        </trans-unit>
        <trans-unit id="00af8aac764834f4bc2442ad907cada1deed5b17" translate="yes" xml:space="preserve">
          <source>ResultSet.moveToInsertRow</source>
          <target state="translated">ResultSet.moveToInsertRow</target>
        </trans-unit>
        <trans-unit id="c681aab1fc9a41c934b16ba5dff6ae16e69ee634" translate="yes" xml:space="preserve">
          <source>Retrieve a URLConnection to a script referenced by name.</source>
          <target state="translated">名前で参照されるスクリプトへの URLConnection を取得します。</target>
        </trans-unit>
        <trans-unit id="07e116d6d103030350a86136e18a2295df5e5f95" translate="yes" xml:space="preserve">
          <source>Retrieve the column upon which the error occurred.</source>
          <target state="translated">エラーが発生した列を取得します。</target>
        </trans-unit>
        <trans-unit id="537eb6789d5514b5baf1357775d3108dc0ed84f6" translate="yes" xml:space="preserve">
          <source>Retrieve the default charset of the system.</source>
          <target state="translated">システムのデフォルトの文字セットを取得します。</target>
        </trans-unit>
        <trans-unit id="5cace76f88056d03a2b6d756343aadcca2377bff" translate="yes" xml:space="preserve">
          <source>Retrieve the line upon which the error occurred.</source>
          <target state="translated">エラーが発生した行を取得します。</target>
        </trans-unit>
        <trans-unit id="6260640463dcdd983657a669a4fb6fc0a00847d2" translate="yes" xml:space="preserve">
          <source>Retrieve the value of the property by its (case-insensitive) name.</source>
          <target state="translated">プロパティの値を、その (大文字小文字を区別しない)名前で取得します。</target>
        </trans-unit>
        <trans-unit id="4dc6b6eebaca9490cbe224391046cfa8fd1f98c2" translate="yes" xml:space="preserve">
          <source>Retrieve the value of the property by its index.</source>
          <target state="translated">プロパティの値をインデックスで取得します。</target>
        </trans-unit>
        <trans-unit id="0f06280dc41b8a1cd5032f3412785852a09e599c" translate="yes" xml:space="preserve">
          <source>Retrieve the value of the property by its index. A negative index will count backwards from the last column.</source>
          <target state="translated">プロパティの値をインデックスで取得します。負のインデックスは、最後の列から逆算されます。</target>
        </trans-unit>
        <trans-unit id="b095773f5521af8412822a68d1b41d90aae50565" translate="yes" xml:space="preserve">
          <source>Retrieves a Boolean System property, or returns false if:</source>
          <target state="translated">ブール型システム・プロパティを取得します。</target>
        </trans-unit>
        <trans-unit id="e6c51cfdbe4bbf958994fa4750a21bb270c903e6" translate="yes" xml:space="preserve">
          <source>Retrieves a System property, or null if:</source>
          <target state="translated">システム・プロパティを取得します。</target>
        </trans-unit>
        <trans-unit id="da8e58fdf0fe91faf7f328f9c2aafb14bae3ecd7" translate="yes" xml:space="preserve">
          <source>Retrieves a System property, or returns some default value if:</source>
          <target state="translated">システム・プロパティを取得します。</target>
        </trans-unit>
        <trans-unit id="43c838b781572a7134cf89b8eaa280f47e526e1f" translate="yes" xml:space="preserve">
          <source>Retrieves a list of MetaMethods held by the class.</source>
          <target state="translated">クラスが保持するMetaMethodのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="58d6d682facc0ab9abecc332530de0bf1ed2f86b" translate="yes" xml:space="preserve">
          <source>Retrieves a list of MetaMethods held by the class. This list does not include MetaMethods added by groovy.lang.ExpandoMetaClass.</source>
          <target state="translated">クラスが保持するMetaMethodのリストを取得します。このリストにはgroovy.lang.ExpandoMetaClassによって追加されたMetaMethodは含まれていません。</target>
        </trans-unit>
        <trans-unit id="bfe0e4039b52810253d9955896e840dbcd77595b" translate="yes" xml:space="preserve">
          <source>Retrieves a list of MetaMethods held by this class.</source>
          <target state="translated">このクラスが保持するMetaMethodのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="c7c9f72e44e970ca18c10e6d6aac8a9ff4854d57" translate="yes" xml:space="preserve">
          <source>Retrieves a list of MetaMethods held by this class. This list includes MetaMethods added by groovy.lang.ExpandoMetaClass.</source>
          <target state="translated">このクラスが保持するMetaMethodのリストを取得します。このリストには、groovy.lang.ExpandoMetaClassによって追加されたMetaMethodが含まれています。</target>
        </trans-unit>
        <trans-unit id="9a40e8c4e7ad00570a94eace9c392b3c6cc1ceee" translate="yes" xml:space="preserve">
          <source>Retrieves a list of MetaProperty instances that the MetaClass has</source>
          <target state="translated">MetaClassが持っているMetaPropertyインスタンスのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="77a9f2b99d004e54980a89dff98592b47a0beca3" translate="yes" xml:space="preserve">
          <source>Retrieves a property of an instance of the class returned by the getTheClass() method.</source>
          <target state="translated">getTheClass()メソッドによって返されたクラスのインスタンスのプロパティを取得します。</target>
        </trans-unit>
        <trans-unit id="ab0f6a57144bf469753409d45a19a4ce8997ec75" translate="yes" xml:space="preserve">
          <source>Retrieves a property on the given receiver for the specified arguments. The sender is the class that is requesting the property from the object. The MetaClass will attempt to establish the method to invoke based on the name and arguments provided.</source>
          <target state="translated">指定された引数に対して、指定されたレシーバ上のプロパティを取得します。送信者は、オブジェクトからプロパティを要求しているクラスです。メタクラスは、提供された名前と引数に基づいて呼び出すメソッドを確立しようとします。</target>
        </trans-unit>
        <trans-unit id="2117ddc71dafe850b90df60fdbed60155f465276" translate="yes" xml:space="preserve">
          <source>Retrieves a property value.</source>
          <target state="translated">プロパティ値を取得します。</target>
        </trans-unit>
        <trans-unit id="fa9c0cd5b04b8bfb714e26c9936b7ff4d6321f8a" translate="yes" xml:space="preserve">
          <source>Retrieves a static MetaMethod for the given name and argument values, using the types of the arguments to establish the chosen MetaMethod</source>
          <target state="translated">指定された名前と引数の値に対して静的なMetaMethodを取得します。</target>
        </trans-unit>
        <trans-unit id="6c244f8d422b1d4e32146d6a73ec92e96990a3d2" translate="yes" xml:space="preserve">
          <source>Retrieves all the available &lt;code&gt;Charset&lt;/code&gt;s on the platform, among which the default &lt;code&gt;charset&lt;/code&gt;.</source>
          <target state="translated">利用可能なすべての取り出し &lt;code&gt;Charset&lt;/code&gt; のプラットフォーム上で、間のデフォルトの &lt;code&gt;charset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29c28495cfcb5d7eea5cacf4b1abb7f7de00a82f" translate="yes" xml:space="preserve">
          <source>Retrieves an Integer System property</source>
          <target state="translated">整数系プロパティを取得します。</target>
        </trans-unit>
        <trans-unit id="8cf429872fcfd4f79801e626222e1715a5df77e3" translate="yes" xml:space="preserve">
          <source>Retrieves an Long System property</source>
          <target state="translated">Long System プロパティを取得します。</target>
        </trans-unit>
        <trans-unit id="3bb5f9387dea7bc8b31921bb4ba732730a18e233" translate="yes" xml:space="preserve">
          <source>Retrieves an attribute of an instance of the class returned by the getTheClass() method.</source>
          <target state="translated">getTheClass()メソッドによって返されたクラスのインスタンスの属性を取得します。</target>
        </trans-unit>
        <trans-unit id="dcd350cbcde1b1867d8bfba882eb4cb08393aab8" translate="yes" xml:space="preserve">
          <source>Retrieves an instance MetaMethod for the given name and argument values, using the types of the argument values to establish the chosen MetaMethod</source>
          <target state="translated">指定された名前と引数値のインスタンスMetaMethodを取得し、引数値の型を使用して選択されたMetaMethodを確立します。</target>
        </trans-unit>
        <trans-unit id="028624d10b9c097eba7fc9e5e30694a67bf45052" translate="yes" xml:space="preserve">
          <source>Retrieves that Java Class that the attached Meta behaviours apply to</source>
          <target state="translated">メタビヘイビアが適用されるJavaクラスを取得します。</target>
        </trans-unit>
        <trans-unit id="873f550345ca1c7006f4f5b009adf6ac376b938f" translate="yes" xml:space="preserve">
          <source>Retrieves the MetaClassCreationHandle that is responsible for constructing MetaClass instances</source>
          <target state="translated">MetaClass インスタンスの構築を担当する MetaClassCreationHandle を取得します。</target>
        </trans-unit>
        <trans-unit id="7a83ba2f1f125f8d73296202872af05eea285718" translate="yes" xml:space="preserve">
          <source>Retrieves the closure that is invoked by this MetaMethod</source>
          <target state="translated">このMetaMethodによって呼び出されたクロージャを取得します。</target>
        </trans-unit>
        <trans-unit id="3f68584356f621e5b26832483b8643cbed9ac955" translate="yes" xml:space="preserve">
          <source>Retrieves the compiler bytecode compatibility level.</source>
          <target state="translated">コンパイラのバイトコード互換性レベルを取得します。</target>
        </trans-unit>
        <trans-unit id="14cfef9420cc2d8daca6ba1781e21f5876c451cc" translate="yes" xml:space="preserve">
          <source>Retrieves the compiler bytecode compatibility level. Defaults to the minimum officially supported bytecode version for any particular Groovy version.</source>
          <target state="translated">コンパイラのバイトコード互換性レベルを取得します。デフォルトは、特定のGroovyバージョンで公式にサポートされているバイトコードの最小バージョンです。</target>
        </trans-unit>
        <trans-unit id="a32b8f55ff79a4bdc2fa4cebedfce5994834ccdb" translate="yes" xml:space="preserve">
          <source>Retrieves the default Charset</source>
          <target state="translated">デフォルトの Charset を取得します。</target>
        </trans-unit>
        <trans-unit id="029bd22946a5f8e4ccd6ebb0b405ee453d94b677" translate="yes" xml:space="preserve">
          <source>Retrieves the default TimeZone for a date by using the default Locale settings.</source>
          <target state="translated">既定のロケール設定を使用して、日付の既定のタイムゾーンを取得します。</target>
        </trans-unit>
        <trans-unit id="e247ef8e9e71910a1030832383e110f19244d933" translate="yes" xml:space="preserve">
          <source>Retrieves the default TimeZone for a date by using the default Locale settings. Recommended that you use &lt;code&gt;TimeZone.getDefault()&lt;/code&gt; instead.</source>
          <target state="translated">デフォルトのロケール設定を使用して、日付のデフォルトのタイムゾーンを取得します。代わりに &lt;code&gt;TimeZone.getDefault()&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="91a2c7a54b5f12aed5dd94bfd0d3bce4bd8aa9d8" translate="yes" xml:space="preserve">
          <source>Retrieves the initial value of the ThreadBound property</source>
          <target state="translated">ThreadBoundプロパティの初期値を取得します。</target>
        </trans-unit>
        <trans-unit id="59710f11fea21d3ac4188c7d308bdeef61d34486" translate="yes" xml:space="preserve">
          <source>Retrieves the list of &lt;a href=&quot;../../../../groovy/lang/metaproperty&quot;&gt;MetaProperty&lt;/a&gt; objects for 'self' and wraps it in a list of &lt;a href=&quot;../../../../groovy/lang/propertyvalue&quot;&gt;PropertyValue&lt;/a&gt; objects that additionally provide the value for each property of 'self'.</source>
          <target state="translated">'self'の&lt;a href=&quot;../../../../groovy/lang/metaproperty&quot;&gt;MetaProperty&lt;/a&gt;オブジェクトのリストを取得し、それを 'self'の各プロパティの値を追加で提供する&lt;a href=&quot;../../../../groovy/lang/propertyvalue&quot;&gt;PropertyValue&lt;/a&gt;オブジェクトのリストにラップします。</target>
        </trans-unit>
        <trans-unit id="5e49238fbbb6c0173df0dcd2e0ffff1d6f2acebf" translate="yes" xml:space="preserve">
          <source>Retrieves the maximum weighted capacity of the map.</source>
          <target state="translated">マップの最大加重容量を取得します。</target>
        </trans-unit>
        <trans-unit id="7e768b09e1a283b82559711121ba61b834958e4e" translate="yes" xml:space="preserve">
          <source>Retrieves the value of an attribute (field).</source>
          <target state="translated">属性(フィールド)の値を取得します。</target>
        </trans-unit>
        <trans-unit id="fc85058cce7f3e79b8962b8f05541a08cc22ac2f" translate="yes" xml:space="preserve">
          <source>Retrieves the value of an attribute (field). This method is to support the Groovy runtime and not for general client API usage.</source>
          <target state="translated">属性(フィールド)の値を取得します。このメソッドはGroovyランタイムをサポートするためのものであり、一般的なクライアントAPIの使用のためのものではありません。</target>
        </trans-unit>
        <trans-unit id="88f2b3f5a0eff8fce83b5ded45c3cac6f39abfd9" translate="yes" xml:space="preserve">
          <source>Return Type</source>
          <target state="translated">リターンタイプ</target>
        </trans-unit>
        <trans-unit id="3e9cb5766b232cf592c701034f534f98681939aa" translate="yes" xml:space="preserve">
          <source>Return a CharSequence with lines (separated by LF, CR/LF, or CR) terminated by the platform specific line separator.</source>
          <target state="translated">プラットフォーム固有のラインセパレータで終端されたライン(LF、CR/LF、またはCRで区切られたライン)を持つCharSequenceを返します。</target>
        </trans-unit>
        <trans-unit id="a8d9bd939d39e832f9ff41bea146dea717d49b5f" translate="yes" xml:space="preserve">
          <source>Return a Duration representing the DST difference (if any) between two dates.</source>
          <target state="translated">2つの日付間のDSTの差(ある場合)を表すDurationを返します。</target>
        </trans-unit>
        <trans-unit id="d106a7b87a9a491f8e70418a6eb38feeba7f4a2d" translate="yes" xml:space="preserve">
          <source>Return a Duration representing the DST difference (if any) between two dates. i.e. if one date is before the DST changeover, and the other date is after, the resulting duration will represent the DST offset.</source>
          <target state="translated">2つの日付間のDST差を表すDurationを返します(もしあれば)。</target>
        </trans-unit>
        <trans-unit id="ee4ca98ed57629ba14a136f182200e41fca12247" translate="yes" xml:space="preserve">
          <source>Return a String representation of the underlying character sequence.</source>
          <target state="translated">その下にある文字列の文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="6b8a4f2e3b70838d3838854b40aa5af28442fc23" translate="yes" xml:space="preserve">
          <source>Return a collection of values.</source>
          <target state="translated">値のコレクションを返します。</target>
        </trans-unit>
        <trans-unit id="4f5c6beceb463886c99cdf2f117cca344ec8db66" translate="yes" xml:space="preserve">
          <source>Return a copy of the expression calling the transformer on any nested expressions</source>
          <target state="translated">入れ子になった式でトランスフォーマを呼び出す式のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="ed8f8181d431ba4f16f96a77030571abef109ebb" translate="yes" xml:space="preserve">
          <source>Return a descriptor of this method based on the return type and parameters of this method.</source>
          <target state="translated">このメソッドの戻り値の型とパラメータに基づいて、このメソッドの記述子を返します。</target>
        </trans-unit>
        <trans-unit id="b8fc4750d9f3b36715f38bbb64c8d2bbdfd8d68a" translate="yes" xml:space="preserve">
          <source>Return a java.sql.Timestamp given a java.util.Date.</source>
          <target state="translated">java.util.Dateを指定したjava.sql.Timestampを返します。</target>
        </trans-unit>
        <trans-unit id="e7662f340a17eb5e00b1a668d849f06cfa96e995" translate="yes" xml:space="preserve">
          <source>Return a lazy-implemented filtered view of this DataSet.</source>
          <target state="translated">このデータセットの遅延実装されたフィルタリングされたビューを返します。</target>
        </trans-unit>
        <trans-unit id="96f256907c59e631c6839b4423b025f605f3d312" translate="yes" xml:space="preserve">
          <source>Return a lazy-implemented re-ordered view of this DataSet.</source>
          <target state="translated">このデータセットの遅延実装された再順序付けされたビューを返します。</target>
        </trans-unit>
        <trans-unit id="c3835a4997afada08f6485ca4368a987e29e0b1d" translate="yes" xml:space="preserve">
          <source>Return a lazy-implemented reverse-ordered view of this DataSet.</source>
          <target state="translated">このデータセットの遅延実装された逆順ビューを返します。</target>
        </trans-unit>
        <trans-unit id="456b7c1ea52c071218c664a7d9d6967f61d8dad6" translate="yes" xml:space="preserve">
          <source>Return a name given the namespaceURI, localName and qName.</source>
          <target state="translated">namespaceURI、localName、qName を指定した名前を返します。</target>
        </trans-unit>
        <trans-unit id="138a4d2f81dc126ee8477084bb9896e44fa1435c" translate="yes" xml:space="preserve">
          <source>Return a pretty String version of the Element.</source>
          <target state="translated">要素のきれいな文字列版を返します。</target>
        </trans-unit>
        <trans-unit id="933293d1ca9a9a847cde84c0543b89868ddd98fb" translate="yes" xml:space="preserve">
          <source>Return a pretty String version of the Node.</source>
          <target state="translated">ノードのきれいな文字列バージョンを返します。</target>
        </trans-unit>
        <trans-unit id="5c89f5c18328da2204a219eea4a620b19d141558" translate="yes" xml:space="preserve">
          <source>Return a pretty String version of the XML content produced by the Writable.</source>
          <target state="translated">Writableによって生成されたXMLコンテンツのきれいな文字列バージョンを返します。</target>
        </trans-unit>
        <trans-unit id="609a40c9acd6ebcf01fbe011e5e0a23154bb0f17" translate="yes" xml:space="preserve">
          <source>Return a pretty version of the GPathResult.</source>
          <target state="translated">GPathResultのきれいなバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="770b7ce416c4d512b19731dc8898c91e0dad4e1b" translate="yes" xml:space="preserve">
          <source>Return a pretty version of the XML content contained in the given String.</source>
          <target state="translated">与えられた文字列に含まれる XML コンテンツのきれいなバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="ade8bbaa0a6f2b8bfc6bf22f1409791db8600683" translate="yes" xml:space="preserve">
          <source>Return a string representation of the 'day' portion of this date according to the locale-specific &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html#SHORT&quot;&gt;DateFormat.SHORT&lt;/a&gt; default format. For an &quot;en_UK&quot; system locale, this would be &lt;code&gt;dd/MM/yy&lt;/code&gt;.</source>
          <target state="translated">ロケール固有の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html#SHORT&quot;&gt;DateFormat.SHORT&lt;/a&gt;デフォルト形式に従って、この日付の「日」部分の文字列表現を返します。「en_UK」システムロケールの場合、これは &lt;code&gt;dd/MM/yy&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b6ab6a8b089ba23daad396bf0aa6967735da4eb5" translate="yes" xml:space="preserve">
          <source>Return a string representation of the date and time time portion of this Date instance, according to the locale-specific format used by &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html&quot;&gt;DateFormat&lt;/a&gt;. This method uses the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html#SHORT&quot;&gt;DateFormat.SHORT&lt;/a&gt; preset for the day portion and &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html#MEDIUM&quot;&gt;DateFormat.MEDIUM&lt;/a&gt; for the time portion of the output string.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html&quot;&gt;DateFormatで&lt;/a&gt;使用されるロケール固有の形式に従って、このDateインスタンスの日時部分の文字列表現を返します。このメソッドは、出力文字列の日の部分に&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html#SHORT&quot;&gt;DateFormat.SHORT&lt;/a&gt;プリセットを使用し、時間の部分に&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html#MEDIUM&quot;&gt;DateFormat.MEDIUM&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="d58ff39545bcf34fe59252ce5bfc3de580ec2f9b" translate="yes" xml:space="preserve">
          <source>Return a string representation of the time portion of this date according to the locale-specific &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html#MEDIUM&quot;&gt;DateFormat.MEDIUM&lt;/a&gt; default format. For an &quot;en_UK&quot; system locale, this would be &lt;code&gt;HH:MM:ss&lt;/code&gt;.</source>
          <target state="translated">ロケール固有の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html#MEDIUM&quot;&gt;DateFormat.MEDIUM&lt;/a&gt;デフォルト形式に従って、この日付の時間部分の文字列表現を返します。「en_UK」システムロケールの場合、これは &lt;code&gt;HH:MM:ss&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="3b15839a363883204720171b52b8bd47d7dfa586" translate="yes" xml:space="preserve">
          <source>Return an Iterator given a ResultSetMetaData.</source>
          <target state="translated">ResultSetMetaDataを指定したイテレータを返します。</target>
        </trans-unit>
        <trans-unit id="d4abe04d19caea965f6111b9176f59777ecf8ae3" translate="yes" xml:space="preserve">
          <source>Return an Iterator given a ResultSetMetaData. Enables Groovy collection method syntactic sugar on ResultSetMetaData.</source>
          <target state="translated">ResultSetMetaData を与えられた Iterator を返します。ResultSetMetaData上でGroovyコレクションメソッドのシンタックスシュガーを有効にします。</target>
        </trans-unit>
        <trans-unit id="361474f1d850f8e62a58c813427778e529cbfba3" translate="yes" xml:space="preserve">
          <source>Return an end user readable representation of the underlying MBean</source>
          <target state="translated">基盤となるMBeanのエンドユーザーが読める表現を返します。</target>
        </trans-unit>
        <trans-unit id="2045b9aabddcd570b185e8e3f895b97a29037295" translate="yes" xml:space="preserve">
          <source>Return an existing method if one exists or else create a new method and mark it as &lt;code&gt;@Generated&lt;/code&gt;.</source>
          <target state="translated">既存のメソッドが存在する場合はそれを返すか、新しいメソッドを作成して &lt;code&gt;@Generated&lt;/code&gt; としてマークします。</target>
        </trans-unit>
        <trans-unit id="381ba2ccec54b5e9336a1de0396e95e782b68a39" translate="yes" xml:space="preserve">
          <source>Return expression , which contains instanceOf (without not) Return null, if not found</source>
          <target state="translated">instanceOfを含む式を返します(notなし)見つからなかった場合はnullを返します</target>
        </trans-unit>
        <trans-unit id="52d25f13d10aaebb234e141562ae58b1709d1d2e" translate="yes" xml:space="preserve">
          <source>Return size w/o hydrating the map.</source>
          <target state="translated">マップを水和せずにサイズを返す。</target>
        </trans-unit>
        <trans-unit id="7fe4ade0a7639e9a4a4dcea1667e979e786fe004" translate="yes" xml:space="preserve">
          <source>Return the (potentially inherited) field of the classnode.</source>
          <target state="translated">classnodeの(継承される可能性のある)フィールドを返します。</target>
        </trans-unit>
        <trans-unit id="6b86fd4edeb46c305579ff2ea5a56d98f1c96b8c" translate="yes" xml:space="preserve">
          <source>Return the buffer's current value as a string.</source>
          <target state="translated">バッファの現在の値を文字列として返します。</target>
        </trans-unit>
        <trans-unit id="af1206241ce2e359931c8be9f4f91e38dda08970" translate="yes" xml:space="preserve">
          <source>Return the first statement from the constructor code if it is a call to super or this, otherwise null.</source>
          <target state="translated">それが super または this の呼び出しであればコンストラクタコードの最初のステートメントを返し、そうでなければ null を返します。</target>
        </trans-unit>
        <trans-unit id="0b2b7f11bb51ade7cdbbb9342a84855b6a8fb8c6" translate="yes" xml:space="preserve">
          <source>Return the method node's descriptor including its name and parameter types without generics.</source>
          <target state="translated">ジェネリックを使用せずに、名前とパラメータの型を含むメソッドノードの記述子を返します。</target>
        </trans-unit>
        <trans-unit id="da74184af2b6fad78c59585d2f70c506bdea566b" translate="yes" xml:space="preserve">
          <source>Return the method node's descriptor which includes its return type, name and parameter types without generics.</source>
          <target state="translated">返り値の型、名前、およびパラメータの型を含むメソッドノードの記述子を返します。</target>
        </trans-unit>
        <trans-unit id="30322b12b4f91dab410484a165321cdccd6b9fcd" translate="yes" xml:space="preserve">
          <source>Return the name of the property</source>
          <target state="translated">プロパティの名前を返します。</target>
        </trans-unit>
        <trans-unit id="a95c7a2e31c5d423df4d8412ad5043bf0105c365" translate="yes" xml:space="preserve">
          <source>Return the next element to be returned by next() without consuming it.</source>
          <target state="translated">next()で返される次の要素を消費せずに返します。</target>
        </trans-unit>
        <trans-unit id="645b52ba8bcbe058c09278de84fc827af1f8eca2" translate="yes" xml:space="preserve">
          <source>Return the size of the map.</source>
          <target state="translated">マップのサイズを返します。</target>
        </trans-unit>
        <trans-unit id="bbf401fedc0834cdedd5506e64ca1b5cee10b5f7" translate="yes" xml:space="preserve">
          <source>Return the size of the map. Use the map if it has already been created.</source>
          <target state="translated">マップのサイズを返します。マップが既に作成されている場合は、そのマップを使用します。</target>
        </trans-unit>
        <trans-unit id="f1b375d67b600c0aee4793bcfa27a9ef53e67ee0" translate="yes" xml:space="preserve">
          <source>Return the value represented by this token (ie. a number, a string, a boolean or null).</source>
          <target state="translated">このトークンによって表現される値を返します (例:数値、文字列、ブール値、null)。</target>
        </trans-unit>
        <trans-unit id="24f7e816cdd75d3a72fb747ee5e3ca70af4aa2b5" translate="yes" xml:space="preserve">
          <source>Return the value represented by this token (ie. a number, a string, a boolean or null). For numbers, BigDecimal is returned for decimals and Integer, Long or BigInteger for integral numbers.</source>
          <target state="translated">このトークンによって表現される値 (すなわち、数値、文字列、ブール値、または null)を返します。数値の場合、小数の場合は BigDecimal、整数の場合は Integer、Long、または BigInteger が返されます。</target>
        </trans-unit>
        <trans-unit id="d79182e343a85f8060074cb97b203c4011526973" translate="yes" xml:space="preserve">
          <source>Return true if we have a static accessor</source>
          <target state="translated">静的アクセサがある場合は true を返します。</target>
        </trans-unit>
        <trans-unit id="f92ecb119da4f94bb51cdbe3f81aecfccb861bf9" translate="yes" xml:space="preserve">
          <source>Return whether the MetaClass has been modified or not</source>
          <target state="translated">MetaClassが変更されたかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="7de062d7ab789ceb0515f111adb1b8882f71b0ba" translate="yes" xml:space="preserve">
          <source>Return whether the class represented by this metaclass instance is an instance of the GroovyObject class</source>
          <target state="translated">このメタクラスのインスタンスで表されるクラスが GroovyObject クラスのインスタンスであるかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="5d611f874390b0bfb841f5ad8ba0636070f241bc" translate="yes" xml:space="preserve">
          <source>Returned AST is [INDEX_OP, indexee, ELIST].</source>
          <target state="translated">返されるASTは[INDEX_OP,indexee,ELIST]です。</target>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="4401228bd64af433799a7bad821a03f0f4dcd7b8" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;../../runtime/nullobject#getNullObject()&quot;&gt;NullObject.getNullObject&lt;/a&gt; if the receiver (args[0]) is null.</source>
          <target state="translated">レシーバー（args [0]）がnullの場合、&lt;a href=&quot;../../runtime/nullobject#getNullObject()&quot;&gt;NullObject.getNullObjectを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="81b514c5680a86def7c734372b9f1c48baef1863" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;../../runtime/nullobject#getNullObject()&quot;&gt;NullObject.getNullObject&lt;/a&gt; if the receiver (args[0]) is null. If it is not null, the recevier itself is returned.</source>
          <target state="translated">レシーバー（args [0]）がnullの場合、&lt;a href=&quot;../../runtime/nullobject#getNullObject()&quot;&gt;NullObject.getNullObjectを&lt;/a&gt;返します。nullでない場合は、受信者自体が返されます。</target>
        </trans-unit>
        <trans-unit id="999004caddb2b4379e8f40daf4cb4eb0fd0d7f77" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#toString()&quot;&gt;StringBuilder.toString&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html#toString()&quot;&gt;StringBuilder.toStringを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="3086d983f407d141773c522d0f5defee16a27022" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="881c9bbf375f16471cfd1a551cca76891a1a92c4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="795dce6be0b215a5a2e390b2b1bcff6f6a5d44bb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="3640338c808dd40ffe9950efff37b0cdfc81cb40" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a runner was registered with the specified key.</source>
          <target state="translated">指定されたキーでランナーが登録されている場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b165f9015c5d4952c3083a6fc6ad0d0fdf023a9a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if attribute values are output with double quotes; &lt;code&gt;false&lt;/code&gt; if single quotes are used.</source>
          <target state="translated">属性値が二重引用符で出力されている場合は &lt;code&gt;true&lt;/code&gt; を返します。一重引用符が使用されている場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6bb336c948c6c5d66f47e360c705f745c815191" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if attribute values are output with double quotes; &lt;code&gt;false&lt;/code&gt; if single quotes are used. By default, single quotes are used.</source>
          <target state="translated">属性値が二重引用符で出力されている場合は &lt;code&gt;true&lt;/code&gt; を返します。一重引用符が使用されている場合は &lt;code&gt;false&lt;/code&gt; 。デフォルトでは、一重引用符が使用されます。</target>
        </trans-unit>
        <trans-unit id="5020a6437050eb2fc2bcae420e47901982ea1d51" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if registry contains the given runner instance.</source>
          <target state="translated">レジストリに指定されたランナーインスタンスが含まれている場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="561db7ae8dbcf31f47a4db8a40f5070f53ddee01" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the DayOfWeek is a weekday.</source>
          <target state="translated">DayOfWeekが平日で &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="3268fc1fa6c6f41818c36e191a3ce1b650e4da3b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the intersection of two iterables is empty.</source>
          <target state="translated">2つの反復可能オブジェクトの交点が空の場合に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="886acb40624aaadb9882cada35b8f4b55aebf021" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the registry contains no runners, else &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">レジストリにランナーが含まれていない場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d6788e5b18660740eb77c6a3603f7132ced4cfed" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if this converter can handle conversions of the given type.</source>
          <target state="translated">このコンバーターが指定されたタイプの変換を処理できる場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6bc870a36875053ba5d72f6bac96f926132def9d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if this day of the week is a weekend day (Saturday or Sunday).</source>
          <target state="translated">この曜日が週末（土曜日または日曜日）の場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e529ce35f91a53132d400d0e81186573816da92e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if this queue contains no elements.</source>
          <target state="translated">このキューに要素が含まれていない場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5bcdb50e763c8dcf03fb2b06272c955b160381cb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if this runner is able to run the given class.</source>
          <target state="translated">このランナーが指定されたクラスを実行できる場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="155e75cb2337735ba60da5a84713866c83006193" translate="yes" xml:space="preserve">
          <source>Returns a &quot;page&quot; of the rows from the table a DataSet represents.</source>
          <target state="translated">データセットが表すテーブルの行の「ページ」を返します。</target>
        </trans-unit>
        <trans-unit id="02d7d3968ad0fd6d16a4e34f24da8ff8423828dc" translate="yes" xml:space="preserve">
          <source>Returns a &quot;page&quot; of the rows from the table a DataSet represents. A page is defined as starting at a 1-based offset, and containing a maximum number of rows.</source>
          <target state="translated">データセットが表すテーブルの行の「ページ」を返します。ページは、1ベースのオフセットから始まり、最大数の行を含むものとして定義されます。</target>
        </trans-unit>
        <trans-unit id="3304bebcff9bd0ce0294e4eb59b15ee41a4bd24e" translate="yes" xml:space="preserve">
          <source>Returns a (possibly empty) list of all occurrences of a regular expression (in Pattern format) found within a CharSequence.</source>
          <target state="translated">CharSequence 内で見つかった正規表現 (パターン形式)のすべての出現のリスト (空の可能性もあります)を返します。</target>
        </trans-unit>
        <trans-unit id="4821ca37c4669a6ed67317bfd8e376fcd0e10b04" translate="yes" xml:space="preserve">
          <source>Returns a (possibly empty) list of all occurrences of a regular expression (provided as a CharSequence) found within a CharSequence.</source>
          <target state="translated">CharSequence 内で見つかった (CharSequence として提供されている)正規表現のすべての出現のリスト (空の可能性もあります)を返します。</target>
        </trans-unit>
        <trans-unit id="1ff5ffcadb9feab35c59be15d53901e0f90cbf12" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;../lang/writable&quot;&gt;Writable&lt;/a&gt; object, which may be used to render the markup directly to a String, or send the output to a stream.</source>
          <target state="translated">マークアップを文字列に直接レンダリングしたり、出力をストリームに送信したりするために使用できる&lt;a href=&quot;../lang/writable&quot;&gt;Writable&lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="4c43b56dd9a942d334e81a739d66a61709dc1b04" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt;Duration&lt;/a&gt; or &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; between this (inclusive) and the &lt;code&gt;other&lt;/code&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/temporal/Temporal.html&quot;&gt;Temporal&lt;/a&gt; (exclusive).</source>
          <target state="translated">これ（包括的）と &lt;code&gt;other&lt;/code&gt; &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/temporal/Temporal.html&quot;&gt;時間的&lt;/a&gt;（排他的）の間の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt;期間&lt;/a&gt;または&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;期間を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="f243c62b3cf378ccb501e8ae6649832f180e02da" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt;Duration&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds longer than this duration.</source>
          <target state="translated">返し&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt;期間&lt;/a&gt;である &lt;code&gt;seconds&lt;/code&gt; 長いこの期間より秒。</target>
        </trans-unit>
        <trans-unit id="c328683efd5e54837a7ebbf1ff2b71ccba77c41a" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt;Duration&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds shorter that this duration.</source>
          <target state="translated">この期間よりも &lt;code&gt;seconds&lt;/code&gt; 秒短い&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt;期間&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="5803e594a04ac677adc2e2dbe5690caaad8d1811" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt;Duration&lt;/a&gt; that is one second longer than this duration.</source>
          <target state="translated">この期間より1秒長い&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt;期間&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="d53a0d05d3243779f7782207477e5579fcc87901" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt;Duration&lt;/a&gt; that is one second shorter than this duration.</source>
          <target state="translated">この期間より1秒短い&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt;期間&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="06a252526605db9053e5b74a8d0a00376fd10308" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; of this month/day and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;Year&lt;/a&gt;.</source>
          <target state="translated">今月/日の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt;と指定された&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;年を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="f8d1fff491e11eb7ac6dab473195873952f822bb" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; of this month/day and the provided year.</source>
          <target state="translated">今月/日と指定された年の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="b86a2d6989eaf6c044431485a0cd7904f2fe424a" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; of this year on the given &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/MonthDay.html&quot;&gt;MonthDay&lt;/a&gt;.</source>
          <target state="translated">返し&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LOCALDATE&lt;/a&gt;与えられた上で、今年の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/MonthDay.html&quot;&gt;MONTHDAYを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c323ffededf7ad07bfdd4bc39519546e448154e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; of this year/month and the given day of the month.</source>
          <target state="translated">この年/月の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt;とその月の指定された日を返します。</target>
        </trans-unit>
        <trans-unit id="93dbbc66b2cf8eff200c90b859bdbb536d5b3bf0" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; one day after this date.</source>
          <target state="translated">この日付の1日後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDateを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="d53e03a8ed45a151887bcee8ad6c9b051969d81d" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; one day before this date.</source>
          <target state="translated">この日付の1日前に&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDateを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="f1f11f3c799b0076f9dd84ebb7c309592222128f" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; that is &lt;code&gt;days&lt;/code&gt; days after this date.</source>
          <target state="translated">この日付から &lt;code&gt;days&lt;/code&gt; 日後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="41e39c8d478e95b6f244c0c01dad9a55066684f5" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; that is &lt;code&gt;days&lt;/code&gt; days before this date.</source>
          <target state="translated">この日付の &lt;code&gt;days&lt;/code&gt; 日前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="7748b05ca44f130efacde21a8e3b718087029986" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt; from this date and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt;.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;のLocalDateTime&lt;/a&gt;この日から、提供&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;にLocalTime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="014b45e2b4c9b2ee741c009b2cb2daa42eab7727" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt; of this time and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt;.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;のLocalDateTime&lt;/a&gt;今回の、提供&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LOCALDATE&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da00f59cece9dfda8ece6d1a3738a6cb45dadfea" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds after this date/time.</source>
          <target state="translated">この日付/時刻から &lt;code&gt;seconds&lt;/code&gt; 秒後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="5d9127e4f574d5b414a2e1828595012c2f83bb3c" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds before this date/time.</source>
          <target state="translated">この日付/時刻の &lt;code&gt;seconds&lt;/code&gt; 秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="6f76ba6df6f575e7a33264c13928e3c5f07ee066" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt; that is one second after this date/time.</source>
          <target state="translated">この日付/時刻の1秒後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="6a4fb8c287713e9bea7f935c5137ef516467f910" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt; that is one second before this date/time.</source>
          <target state="translated">この日付/時刻の1秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="2b450fee56dd75282caa399abef02b2dc44ddd6b" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt; with the time portion cleared.</source>
          <target state="translated">時間部分がクリアされた&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="a7429632aaf941049d787a9a43907de3c6a4551a" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds after this time.</source>
          <target state="translated">この時間の &lt;code&gt;seconds&lt;/code&gt; 秒後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="9d692904665237488f05d942baaab57557ee373f" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds before this time.</source>
          <target state="translated">この時刻の &lt;code&gt;seconds&lt;/code&gt; 秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="cc7c8c8e6fe8a4f517f2a1528ff0869dd361cd79" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt; that is one second after this time.</source>
          <target state="translated">この時間の1秒後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="f837651eb9d812992824ad76dae783193d270842" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt; that is one second before this time.</source>
          <target state="translated">この時刻の1秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="b2e883812317cbcaadab774f2874233fca897a16" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt; from this date and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt;.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt;この日から、提供&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fcb280966dd974cc10e6cdb44099f3389c49cf6a" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt; of this date/time and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html&quot;&gt;ZoneId&lt;/a&gt;.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt;この日付/時刻のと提供&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html&quot;&gt;するzoneid&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3916139b59085dbec6eb9dfd130311f724fbd14f" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; between the first day of this year (inclusive) and the first day of the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;Year&lt;/a&gt; (exclusive).</source>
          <target state="translated">今年の初日（包括的）から指定された&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;年の&lt;/a&gt;初日（排他的）までの&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;期間を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="4e654a57a6450be3432551fd778c4a4cc4073e81" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; equivalent to the time between this date (inclusive) and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; (exclusive).</source>
          <target state="translated">この日付（包括的）と指定された&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt;（排他的）の間の時間に相当する&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;期間を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="19acf96ce2caf351fb1540a4701c25d3835fe838" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; of time between the first day of this year/month (inclusive) and the given &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt; (exclusive).</source>
          <target state="translated">今年/月の初日（包括的）から指定された&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt;（排他的）までの&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;期間&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="83b2f54f26bac76b5df32cbbd342d2476f2ae5df" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; that is &lt;code&gt;days&lt;/code&gt; days longer than this period.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;の期間&lt;/a&gt;である &lt;code&gt;days&lt;/code&gt; 日長く、この期間より。</target>
        </trans-unit>
        <trans-unit id="0185f06fe5d7e5cdbf7efd7a2209a2ea892035d3" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; that is &lt;code&gt;days&lt;/code&gt; days longer than this period. No normalization is performed.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;の期間&lt;/a&gt;である &lt;code&gt;days&lt;/code&gt; 日長く、この期間より。正規化は実行されません。</target>
        </trans-unit>
        <trans-unit id="02022243f0c24c417dfeca312d6aa62c11eb5621" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; that is &lt;code&gt;days&lt;/code&gt; days shorter than this period.</source>
          <target state="translated">返し&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;期間&lt;/a&gt;である &lt;code&gt;days&lt;/code&gt; この期間より短い日。</target>
        </trans-unit>
        <trans-unit id="75914a444e2f4ef2c06a360aeaf7a7630bc73cd9" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; that is &lt;code&gt;days&lt;/code&gt; days shorter than this period. No normalization is performed.</source>
          <target state="translated">返し&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;期間&lt;/a&gt;である &lt;code&gt;days&lt;/code&gt; この期間より短い日。正規化は実行されません。</target>
        </trans-unit>
        <trans-unit id="20e0d0411afd5d337224c84c1f4858460cd83947" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; that is one day longer than this period.</source>
          <target state="translated">この期間より1日長い&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;期間&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="f5f5ea84fefe64f38638205489bfeff3b3fc5fc9" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; that is one day longer than this period. No normalization is performed.</source>
          <target state="translated">この期間より1日長い&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;期間&lt;/a&gt;を返します。正規化は実行されません。</target>
        </trans-unit>
        <trans-unit id="e2d8f8d930444c871a734fa02a174417cd89dce0" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; that is one day shorter than this period.</source>
          <target state="translated">この期間より1日短い&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;期間&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="d1200362893e46610fede677092f0225ce4cfbe5" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;Period&lt;/a&gt; that is one day shorter than this period. No normalization is performed.</source>
          <target state="translated">この期間より1日短い&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Period.html&quot;&gt;期間&lt;/a&gt;を返します。正規化は実行されません。</target>
        </trans-unit>
        <trans-unit id="e132f8003b8043cae1062b944740b0103ca5c914" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;Year&lt;/a&gt; after this year.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;今年の&lt;/a&gt;1年後を返します。</target>
        </trans-unit>
        <trans-unit id="c25e7461d6f5dd03ec1e24cf6591396b8ee6ec8d" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;Year&lt;/a&gt; before this year.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;今年の&lt;/a&gt;1年前に戻ります。</target>
        </trans-unit>
        <trans-unit id="f43fbf976f7369367a18d29f3cd59bb3972263d6" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;Year&lt;/a&gt; that is &lt;code&gt;years&lt;/code&gt; years after this year.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;今年&lt;/a&gt;から &lt;code&gt;years&lt;/code&gt; 年後の年を返します。</target>
        </trans-unit>
        <trans-unit id="d32e276292cf421610986a94a01c09f79c568e80" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;Year&lt;/a&gt; that is &lt;code&gt;years&lt;/code&gt; years before this year.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Year.html&quot;&gt;今年の&lt;/a&gt; &lt;code&gt;years&lt;/code&gt; 年も前の年を返します。</target>
        </trans-unit>
        <trans-unit id="1122aee5d3849f0466231c92789f8195df45a3e4" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt; of this year and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Month.html&quot;&gt;Month&lt;/a&gt;.</source>
          <target state="translated">今年の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt;と指定された&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Month.html&quot;&gt;Monthを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="066ce947c94e5c563fa74edf018b346ad6420ae0" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt; that is &lt;code&gt;months&lt;/code&gt; months after this year/month.</source>
          <target state="translated">この年/月から &lt;code&gt;months&lt;/code&gt; か月後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="f0121c130b35b74d62c798d4e6aac5001e1f4043" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt; that is &lt;code&gt;months&lt;/code&gt; months before this year/month.</source>
          <target state="translated">今年/月の &lt;code&gt;months&lt;/code&gt; か月前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="d34f6577c38457a1a2b10ac0851b3727daa0ed0e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt; that is the month after this year/month.</source>
          <target state="translated">この年/月の翌月である&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="b19fbd612e16dc0e6b69e19cf88937f02f39a592" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt; that is the month before this year/month.</source>
          <target state="translated">この年/月の前の月である&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/YearMonth.html&quot;&gt;YearMonth&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="635eb77797bff3100da132c8e8f10bd914154159" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt; for this zone as of now.</source>
          <target state="translated">現在、このゾーンの&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="33220dc57e0728f4af0c61b181a09dbb6debca3c" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt; for this zone as of the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;Instant&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;インスタントの&lt;/a&gt;時点で、このゾーンの&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="012ba907838e7281b6960de0f21f72173d053d96" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt; of this zone and the given &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt;このゾーンの、与えられた&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;のLocalDateTime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="245a3b9602c99c0fd611ea6c1e541c08ac85a601" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds after this date/time.</source>
          <target state="translated">この日付/時刻から &lt;code&gt;seconds&lt;/code&gt; 秒後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="4f1fb50fb140a89fda4775c7eaf4de98b3690285" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds before this date/time.</source>
          <target state="translated">この日付/時刻の &lt;code&gt;seconds&lt;/code&gt; 秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="a321c27b5eb99282065c1c24c926e60f821b5276" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt; that is one second after this date/time.</source>
          <target state="translated">この日付/時刻の1秒後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="7f6474f0d1628928b72e0bf8a41b1078c11e55da" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt; that is one second before this date/time.</source>
          <target state="translated">この日付/時刻の1秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="9addf36004e1b3095f06bb57df6675d7ed141549" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html&quot;&gt;TimeZone&lt;/a&gt; equivalent to this zone.</source>
          <target state="translated">このゾーンに相当する&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html&quot;&gt;TimeZoneを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="5a174289d667bb2ffa64ff945cd8bf632d6c7109" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;BufferedIterator&lt;/code&gt; that allows examining the next element without consuming it.</source>
          <target state="translated">次の要素を消費せずに調べることができる &lt;code&gt;BufferedIterator&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="fd3837ae986177e37e3c61fdfa71d12ec523d6df" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;ClassNode&lt;/code&gt; representing an array of the type represented by this.</source>
          <target state="translated">&lt;code&gt;ClassNode&lt;/code&gt; 表される型の配列を表すClassNodeを返します。</target>
        </trans-unit>
        <trans-unit id="7e56847e00af518a18ac503139155804a76a70a2" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;List&lt;/code&gt; of the nodes children.</source>
          <target state="translated">ノードの子の &lt;code&gt;List&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2699e305f4b6d2ca7db513ac5846ea88827d20df" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Map&lt;/code&gt; of the attributes of the node or an empty &lt;code&gt;Map&lt;/code&gt; if the node does not have any attributes.</source>
          <target state="translated">ノードの属性の &lt;code&gt;Map&lt;/code&gt; を返します。ノードに属性がない場合は空の &lt;code&gt;Map&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="71e2e05bdf95d37a9b837e11289b3dc93948d445" translate="yes" xml:space="preserve">
          <source>Returns a Collection containing the items from the Iterable but with duplicates removed using the natural ordering of the items to determine uniqueness.</source>
          <target state="translated">Iterable の項目を含むコレクションを返しますが、重複は取り除かれています。</target>
        </trans-unit>
        <trans-unit id="a3a2e59afe4cd8231c93bf2a0af8bd37d218394e" translate="yes" xml:space="preserve">
          <source>Returns a Collection containing the items from the Iterable but with duplicates removed.</source>
          <target state="translated">イテレータブルの項目を含むコレクションを、重複を取り除いた状態で返します。</target>
        </trans-unit>
        <trans-unit id="76b0b9e4109497116d6044ed7e6b996a2d75953b" translate="yes" xml:space="preserve">
          <source>Returns a Collection containing the items from the Iterable but with duplicates removed. The items in the Iterable are compared by the given Closure condition. For each duplicate, the first member which is returned from the Iterable is retained, but all other ones are removed.</source>
          <target state="translated">重複を除去した反復可能な項目を含むコレクションを返します。反復可能な項目は、指定されたClosure条件で比較されます。それぞれの重複に対して、反復可能から返された最初のメンバーは保持されますが、それ以外のメンバーはすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="a4204c7000d5e51dbea60f0adc2bff03ef66e216" translate="yes" xml:space="preserve">
          <source>Returns a Collection containing the items from the Iterable but with duplicates removed. The items in the Iterable are compared by the given Comparator. For each duplicate, the first member which is returned from the Iterable is retained, but all other ones are removed.</source>
          <target state="translated">イテレータブル内の項目を含むコレクションを返しますが、重複は取り除かれています。イテレータブル内の項目は、指定されたコンパレータによって比較されます。重複がある場合、反復可能ファイルから返された最初のメンバは保持されますが、それ以外のメンバはすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="a96b9540792f226d806334c249c42cabfdf93ebe" translate="yes" xml:space="preserve">
          <source>Returns a Collection containing the longest prefix of the elements from this Iterable where each element passed to the given closure evaluates to true.</source>
          <target state="translated">指定したクロージャに渡された各要素の評価値が true になるような、この反復可能要素の中で最も長い接頭辞を含むコレクションを返します。</target>
        </trans-unit>
        <trans-unit id="6f2d741c1f08613401330011edc9d59eeb5ac618" translate="yes" xml:space="preserve">
          <source>Returns a Data URI (RFC 2397) containing the literal value of this source string.</source>
          <target state="translated">このソース文字列のリテラル値を含むデータ URI (RFC 2397)を返します。</target>
        </trans-unit>
        <trans-unit id="b799909d72aec79039196410040c0436f921dc43" translate="yes" xml:space="preserve">
          <source>Returns a Future asynchronously returning a transformed result.</source>
          <target state="translated">非同期的に変換された結果を返すFutureを返します。</target>
        </trans-unit>
        <trans-unit id="24cff238df34210c9d0efd7949637950bc48a5a4" translate="yes" xml:space="preserve">
          <source>Returns a GroovyRowResult given a ResultSet.</source>
          <target state="translated">ResultSetに指定されたGroovyRowResultを返します。</target>
        </trans-unit>
        <trans-unit id="c40b72025ce1f541c6cf009c0663b0c912fc0705" translate="yes" xml:space="preserve">
          <source>Returns a List containing the items from the List but with duplicates removed using the natural ordering of the items to determine uniqueness.</source>
          <target state="translated">リストの項目を含むリストを返しますが、重複は取り除かれています。</target>
        </trans-unit>
        <trans-unit id="e87979c7ed35f40041348ecadccae498af2dbee5" translate="yes" xml:space="preserve">
          <source>Returns a List containing the items from the List but with duplicates removed.</source>
          <target state="translated">リストの項目を含むリストを返しますが、重複は取り除かれています。</target>
        </trans-unit>
        <trans-unit id="b5789e6eeef0edccc31fcf507d7ed9f859406d57" translate="yes" xml:space="preserve">
          <source>Returns a List containing the items from the List but with duplicates removed. The items in the List are compared by the given Closure condition. For each duplicate, the first member which is returned from the Iterable is retained, but all other ones are removed.</source>
          <target state="translated">リストの項目を含むリストを、重複を除去した状態で返します。リスト内の項目は、指定されたクロージャ条件によって比較されます。それぞれの重複に対して、反復処理可能から返された最初のメンバーは保持されますが、それ以外のメンバーはすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="b6218c354173f4decc7668df1752eb5aa755fa82" translate="yes" xml:space="preserve">
          <source>Returns a List containing the items from the List but with duplicates removed. The items in the List are compared by the given Comparator. For each duplicate, the first member which is returned from the List is retained, but all other ones are removed.</source>
          <target state="translated">リストの項目を含むリストを返しますが、重複は取り除かれています。リスト内の項目は、指定されたコンパレータによって比較されます。それぞれの重複に対して、リストから返された最初のメンバーは保持されますが、それ以外のメンバーはすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="4a01e83c25ee678b0879653a9b5e058f420f3d0e" translate="yes" xml:space="preserve">
          <source>Returns a List of all of the rows from the table a DataSet represents.</source>
          <target state="translated">データセットが表すテーブルの全行のリストを返します。</target>
        </trans-unit>
        <trans-unit id="c93032242303c4cf2eb55db9b6ad8d12742db511" translate="yes" xml:space="preserve">
          <source>Returns a MBean operation info for getter operation specified by the MetaProperty.</source>
          <target state="translated">MetaPropertyで指定したゲッター操作のMBean操作情報を返します。</target>
        </trans-unit>
        <trans-unit id="1663cb06f5e56c5a7c1a7d15a973cbf1a035cc2b" translate="yes" xml:space="preserve">
          <source>Returns a MBean operation info for getter operation specified by the MetaProperty. Since no meta map is provided, this method will generate all default descriptor values to describe the operation.</source>
          <target state="translated">MetaProperty で指定したゲッター操作の MBean 操作情報を返します。メタマップが提供されていないため、このメソッドは操作を記述するためのすべてのデフォルトのディスクリプタ値を生成します。</target>
        </trans-unit>
        <trans-unit id="dad3eb52c83e853c7d55bea1ceb73cac0352c8b1" translate="yes" xml:space="preserve">
          <source>Returns a MBean operation info for setter operation specified by the MetaProperty.</source>
          <target state="translated">MetaPropertyで指定したセッター操作のMBean操作情報を返します。</target>
        </trans-unit>
        <trans-unit id="c7f1f54e9ed0db396733315c81ad4f350feefa8e" translate="yes" xml:space="preserve">
          <source>Returns a MBean operation info for setter operation specified by the MetaProperty. Since no meta data is provided, this method will generate all default descriptor values to describe operation.</source>
          <target state="translated">MetaProperty で指定したセッター操作の MBean 操作情報を返します。メタデータは提供されないので、このメソッドは操作を記述するためのすべてのデフォルトのディスクリプタ値を生成します。</target>
        </trans-unit>
        <trans-unit id="560c6a1128063a3b074237fecd9f6c389f4056bb" translate="yes" xml:space="preserve">
          <source>Returns a MetaProperty for the given name or null if it doesn't exist</source>
          <target state="translated">指定した名前のメタプロパティを返します。</target>
        </trans-unit>
        <trans-unit id="e8f106fe8fff263f2645a61778839f4c25544736" translate="yes" xml:space="preserve">
          <source>Returns a Path</source>
          <target state="translated">パスを返します。</target>
        </trans-unit>
        <trans-unit id="f684b1e929142f6284064bffeaa26f4d54821c2f" translate="yes" xml:space="preserve">
          <source>Returns a QName holding the value of the specified String.</source>
          <target state="translated">指定した文字列の値を保持するQNameを返します。</target>
        </trans-unit>
        <trans-unit id="f3a2cccff3c66fc517ed17b1f15c35df80988c74" translate="yes" xml:space="preserve">
          <source>Returns a String representation of this class by calling &lt;code&gt;getMessage()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getMessage()&lt;/code&gt; を呼び出して、このクラスの文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="cc92506a59e16004db77e04fc31785d79e5f3f48" translate="yes" xml:space="preserve">
          <source>Returns a String version of the delegate.</source>
          <target state="translated">文字列版のデリゲートを返します。</target>
        </trans-unit>
        <trans-unit id="c3d4d441aa382b9a6c1344fc905ffda8256d90d6" translate="yes" xml:space="preserve">
          <source>Returns a String with linefeeds and carriage returns normalized to linefeeds.</source>
          <target state="translated">改行とキャリッジリターンを改行に正規化した文字列を返します。</target>
        </trans-unit>
        <trans-unit id="088ac0ae53ddee839540d5d4365022f4f77b6227" translate="yes" xml:space="preserve">
          <source>Returns a URI for the URL of this source.</source>
          <target state="translated">このソースのURLのURIを返します。</target>
        </trans-unit>
        <trans-unit id="3c01ffc8e48b7f081e12d4d3035ace818a0acde5" translate="yes" xml:space="preserve">
          <source>Returns a URI for the file of this source.</source>
          <target state="translated">このソースのファイルのURIを返します。</target>
        </trans-unit>
        <trans-unit id="56fe546945af394c133396094960c68df842a9b6" translate="yes" xml:space="preserve">
          <source>Returns a URI for this source.</source>
          <target state="translated">このソースのURIを返します。</target>
        </trans-unit>
        <trans-unit id="33f6de7c028bcc365d777fac8485b4996c4e437f" translate="yes" xml:space="preserve">
          <source>Returns a callable object for the given method name on the object.</source>
          <target state="translated">オブジェクト上で指定されたメソッド名に対して呼び出し可能なオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="94de5489d7a00af89ae968eeb2aa53568d759f60" translate="yes" xml:space="preserve">
          <source>Returns a callable object for the given method name on the object. The object acts like a Closure in that it can be called, like a closure and passed around - though really its a method pointer, not a closure per se.</source>
          <target state="translated">オブジェクト上で指定したメソッド名に対して呼び出し可能なオブジェクトを返します。このオブジェクトは、クロージャのように呼び出して渡すことができるという点で、クロージャのように動作します-実際にはメソッドポインタであってクロージャではありませんが。</target>
        </trans-unit>
        <trans-unit id="843b56f6ea0a7c8e4815ac42b2283cd69dea2185" translate="yes" xml:space="preserve">
          <source>Returns a collection of all registered runners.</source>
          <target state="translated">登録されているすべてのランナーのコレクションを返します。</target>
        </trans-unit>
        <trans-unit id="29fd6eae3595a104442404b07fd6c736dabd495f" translate="yes" xml:space="preserve">
          <source>Returns a collection of all registered runners. This is a snapshot of the registry and any subsequent registry changes will not be reflected in the collection.</source>
          <target state="translated">登録されているすべてのランナーのコレクションを返します。これはレジストリのスナップショットであり、その後のレジストリの変更はコレクションには反映されません。</target>
        </trans-unit>
        <trans-unit id="40564aa5c79027986d2f81e77cadd209057bf4a0" translate="yes" xml:space="preserve">
          <source>Returns a collection view of the mappings contained in this map.</source>
          <target state="translated">このマップに含まれるマッピングのコレクションビューを返します。</target>
        </trans-unit>
        <trans-unit id="cca7afcd31882a14e7fcced76fb9a8602324c43d" translate="yes" xml:space="preserve">
          <source>Returns a collection view of the mappings contained in this map. Each element in the returned collection is a</source>
          <target state="translated">このマップに含まれるマッピングのコレクションビューを返します。返されるコレクションの各要素は</target>
        </trans-unit>
        <trans-unit id="8325e56442cfdeced2f80b244d13f79046d2374c" translate="yes" xml:space="preserve">
          <source>Returns a collection view of the values contained in this map.</source>
          <target state="translated">このマップに含まれる値のコレクションビューを返します。</target>
        </trans-unit>
        <trans-unit id="8a48c8d564429526c5c0e5c62f2e5800b80b49f4" translate="yes" xml:space="preserve">
          <source>Returns a collection view of the values contained in this map. The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. The collection supports element removal, which removes the corresponding mapping from this map, via the</source>
          <target state="translated">このマップに含まれる値のコレクションビューを返します。コレクションはマップによってバックアップされているため、マップへの変更はコレクションに反映され、その逆も同様です。コレクションは要素の削除をサポートしています。</target>
        </trans-unit>
        <trans-unit id="3d53deca28eade370d894ced1500467a58aec293" translate="yes" xml:space="preserve">
          <source>Returns a copy of a string in which all EOLs are \n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a0eacf790bb551e1a0e00aa674dd80b18f7b06" translate="yes" xml:space="preserve">
          <source>Returns a copy of this Token.</source>
          <target state="translated">このトークンのコピーを返します。</target>
        </trans-unit>
        <trans-unit id="51a12965669c8b63c75065cafa3fa361579f9220" translate="yes" xml:space="preserve">
          <source>Returns a copy of this closure for which the delegate, owner and thisObject are replaced with the supplied parameters.</source>
          <target state="translated">このクロージャのコピーを返します。</target>
        </trans-unit>
        <trans-unit id="86d6da5ebe8061170258389c54aed7e360c82337" translate="yes" xml:space="preserve">
          <source>Returns a copy of this closure for which the delegate, owner and thisObject are replaced with the supplied parameters. Use this when you want to rehydrate a closure which has been made serializable thanks to the &lt;a href=&quot;#dehydrate()&quot;&gt;dehydrate()&lt;/a&gt; method.</source>
          <target state="translated">デリゲート、所有者、およびthisObjectが指定されたパラメーターに置き換えられたこのクロージャーのコピーを返します。これは、&lt;a href=&quot;#dehydrate()&quot;&gt;dehydrate（）&lt;/a&gt;メソッドのおかげでシリアル化可能になったクロージャーを再水和する場合に使用します。</target>
        </trans-unit>
        <trans-unit id="5f8445e7d5923bb97b6ec8f0c86782dabc7bc21f" translate="yes" xml:space="preserve">
          <source>Returns a copy of this closure where the &quot;owner&quot;, &quot;delegate&quot; and &quot;thisObject&quot; fields are null, allowing proper serialization when one of them is not serializable.</source>
          <target state="translated">owner&quot;、&quot;delegate&quot; および &quot;thisObject&quot; フィールドのいずれかが null であるクロージャのコピーを返します。</target>
        </trans-unit>
        <trans-unit id="4af26a84205aa3bbb95dfed062febe7a7c7e6c6f" translate="yes" xml:space="preserve">
          <source>Returns a description of the node.</source>
          <target state="translated">ノードの説明を返します。</target>
        </trans-unit>
        <trans-unit id="889cb99e0f57455dd3cbfb709c3cc1471739d3ca" translate="yes" xml:space="preserve">
          <source>Returns a description of the specified phase.</source>
          <target state="translated">指定したフェーズの説明を返します。</target>
        </trans-unit>
        <trans-unit id="3026946ee1a3f2ec6f725ded253d36d26fac975d" translate="yes" xml:space="preserve">
          <source>Returns a formatted string using the specified format string and arguments.</source>
          <target state="translated">指定したフォーマット文字列と引数を使用してフォーマットされた文字列を返します。</target>
        </trans-unit>
        <trans-unit id="6014ee1e5eeb6b5034469344903cb01d161bbf86" translate="yes" xml:space="preserve">
          <source>Returns a fully-realized ModelMBeanInfo object from info gathered from the associated meta map.</source>
          <target state="translated">関連するメタマップから収集した情報から、完全に実現されたModelMBeanInfoオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="b30e989425c11c38228a394e72f6b6b924298414" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt; in the GMT time zone, truncated to milliseconds.</source>
          <target state="translated">ミリ秒に切り捨てられた、GMTタイムゾーンのほぼ同等の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;カレンダーを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="624570d95c766c1032c6cd741be1b20b7c53e802" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;Date&lt;/a&gt; according the number of milliseconds since the epoch, adjusted into the system default time zone.</source>
          <target state="translated">システムのデフォルトのタイムゾーンに調整された、エポックからのミリ秒数に応じて、ほぼ同等の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;日付を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="3ee1de14a61f6933927b5ee0d476dbfe27981794" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html&quot;&gt;TimeZone&lt;/a&gt;.</source>
          <target state="translated">一般的に同等の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html&quot;&gt;TimeZoneを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="c5ec92fd8244775b985cd847fa65ffb1521ff919" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html&quot;&gt;TimeZone&lt;/a&gt;. The offset will be truncated to minutes.</source>
          <target state="translated">一般的に同等の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html&quot;&gt;TimeZoneを&lt;/a&gt;返します。オフセットは分に切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="a733841e44edbd585ff66c733dbd075215631e0f" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;カレンダーの&lt;/a&gt;一般的に同等のインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="31ff5adb20531d6e35e6060349296430c9fc46a6" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt;. The date value of the returned calendar is now, the time value is truncated to milliseconds, and the time zone is based on the offset of this time.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;カレンダーの&lt;/a&gt;一般的に同等のインスタンスを返します。返されるカレンダーの日付値は現在、時間値はミリ秒に切り捨てられ、タイムゾーンはこの時間のオフセットに基づいています。</target>
        </trans-unit>
        <trans-unit id="0c0f15ae14daf0802dfd674667630dcbeafd4dd3" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt;. The day-month-year value of the returned calendar is today, the time is truncated to milliseconds, and the time zone is the current system default.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;カレンダーの&lt;/a&gt;一般的に同等のインスタンスを返します。返されるカレンダーの日-月-年の値は今日であり、時刻はミリ秒に切り捨てられ、タイムゾーンは現在のシステムのデフォルトです。</target>
        </trans-unit>
        <trans-unit id="a854032ddc14c4563d922f16a653d0a359d8080e" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt;. The time value of the returned calendar is truncated to milliseconds and the time zone is based on the offset of this date/time.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;カレンダーの&lt;/a&gt;一般的に同等のインスタンスを返します。返されるカレンダーの時間値はミリ秒に切り捨てられ、タイムゾーンはこの日付/時刻のオフセットに基づいています。</target>
        </trans-unit>
        <trans-unit id="5c9b8d717526230195e8f520d3cf5057e6bbf6b7" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt;. The time value of the returned calendar is truncated to milliseconds and the time zone is determined by the zone of this date/time.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;カレンダーの&lt;/a&gt;一般的に同等のインスタンスを返します。返されるカレンダーの時間値はミリ秒に切り捨てられ、タイムゾーンはこの日付/時刻のゾーンによって決定されます。</target>
        </trans-unit>
        <trans-unit id="8786889f541ed1a82cd0e2f193a74fcd6aab4ec4" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt;. The time value of the returned calendar is truncated to milliseconds and the time zone is the current system default.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;カレンダーの&lt;/a&gt;一般的に同等のインスタンスを返します。返されるカレンダーの時間値はミリ秒に切り捨てられ、タイムゾーンは現在のシステムのデフォルトです。</target>
        </trans-unit>
        <trans-unit id="415b3631712a691e3aeebb9df7589d518ed2a852" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;Date&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;日付の&lt;/a&gt;一般的に同等のインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="419e603a6f106376dce2b2d861f6b53e7d6d0863" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;Date&lt;/a&gt;. The day-month-year value of the returned date is today and the time is truncated to milliseconds.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;日付の&lt;/a&gt;一般的に同等のインスタンスを返します。返される日付の日-月-年の値は今日であり、時刻はミリ秒に切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="1bd6820af44652156c59a766b4e5ddeebda5ffc3" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;Date&lt;/a&gt;. The time value of the returned date is truncated to milliseconds and will be adjusted to the current system default time zone.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;日付の&lt;/a&gt;一般的に同等のインスタンスを返します。返された日付の時間値はミリ秒に切り捨てられ、現在のシステムのデフォルトのタイムゾーンに調整されます。</target>
        </trans-unit>
        <trans-unit id="72341bac2071c927ff743a15e6f1839700d40daa" translate="yes" xml:space="preserve">
          <source>Returns a generally equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;Date&lt;/a&gt;. The time value of the returned date is truncated to milliseconds.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;日付の&lt;/a&gt;一般的に同等のインスタンスを返します。返された日付の時間値はミリ秒に切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="179bf4c4f90b36c8cf9e3608c023da89dbe658dd" translate="yes" xml:space="preserve">
          <source>Returns a handle with bound receiver to invokeSpecial the given method.</source>
          <target state="translated">指定したメソッドを invokeSpecial で呼び出すためのレシーバをバインドしたハンドルを返します。</target>
        </trans-unit>
        <trans-unit id="f62540bf2dfc2893d0b938fb0c49844f6ad5f8ef" translate="yes" xml:space="preserve">
          <source>Returns a handle with bound receiver to invokeSpecial the given method. This method will require at least Java 7, but since the source has to compile on older Java versions as well it is not marked to return a MethodHandle and uses Object instead</source>
          <target state="translated">指定されたメソッドを invokeSpecial に呼び出すためのレシーバがバインドされたハンドルを返します。このメソッドは少なくとも Java 7 以上が必要ですが、ソースは古い Java バージョンでもコンパイルする必要があるため、MethodHandle を返すようにマークされておらず、代わりに Object を使用します。</target>
        </trans-unit>
        <trans-unit id="7a7d68649a7be354e1251b8f482baf0e0cadc58c" translate="yes" xml:space="preserve">
          <source>Returns a hash code value for the delegate.</source>
          <target state="translated">デリゲートのハッシュコードの値を返します。</target>
        </trans-unit>
        <trans-unit id="ef2dc7ef7be3ab959009c5f4c48e1c9046a835ad" translate="yes" xml:space="preserve">
          <source>Returns a hash code value for this QName object.</source>
          <target state="translated">このQNameオブジェクトのハッシュコードの値を返します。</target>
        </trans-unit>
        <trans-unit id="93a753207806abcadaad34bfb792f2676c0c79c4" translate="yes" xml:space="preserve">
          <source>Returns a hash code value for this QName object. The hash code is based on both the localPart and namespaceURI parts of the QName. This method satisfies the general contract of the &lt;code&gt;Object.hashCode&lt;/code&gt; method.</source>
          <target state="translated">このQNameオブジェクトのハッシュコード値を返します。ハッシュコードは、QNameのlocalPartとnamespaceURIの両方の部分に基づいています。このメソッドは、 &lt;code&gt;Object.hashCode&lt;/code&gt; メソッドの一般的なコントラクトを満たします。</target>
        </trans-unit>
        <trans-unit id="8010cd74eb58d9388c334672edc99893cc76473b" translate="yes" xml:space="preserve">
          <source>Returns a line from the source, or null, if unavailable.</source>
          <target state="translated">ソースからの行を返します。</target>
        </trans-unit>
        <trans-unit id="124b5717e7daf984e4073c96536fb5dfce1ef197" translate="yes" xml:space="preserve">
          <source>Returns a line from the source, or null, if unavailable. If you supply a Janitor, resources will be cached.</source>
          <target state="translated">ソースからの行を返します。管理人を指定した場合、リソースはキャッシュされます。</target>
        </trans-unit>
        <trans-unit id="b25d4f978cec2320234d7dd7759b671aea216165" translate="yes" xml:space="preserve">
          <source>Returns a list containing all values from this queue in the sequence they were added.</source>
          <target state="translated">このキューのすべての値を、それらが追加された順に含むリストを返します。</target>
        </trans-unit>
        <trans-unit id="5347bcdcde5154bf24e319a858b4855ee21e50f4" translate="yes" xml:space="preserve">
          <source>Returns a list of AnnotationNodes for the value attribute of the given AnnotationNode.</source>
          <target state="translated">指定されたアノテーションノードの値属性に対するアノテーションノードのリストを返します。</target>
        </trans-unit>
        <trans-unit id="c801545e7ae0f53b83f87a912db588f5461fa2ec" translate="yes" xml:space="preserve">
          <source>Returns a list of GroovyRowResult objects from the dataset</source>
          <target state="translated">データセットからGroovyRowResultオブジェクトのリストを返します。</target>
        </trans-unit>
        <trans-unit id="a65de4ff1d3cad8e6a0d545eeb69501ef850771c" translate="yes" xml:space="preserve">
          <source>Returns a list of MetaBeanProperty instances added to this ExpandoMetaClass</source>
          <target state="translated">このExpandoMetaClassに追加されたMetaBeanPropertyインスタンスのリストを返します。</target>
        </trans-unit>
        <trans-unit id="8d41767c973802731452c5849b8a62f88cf164b6" translate="yes" xml:space="preserve">
          <source>Returns a list of expando MetaMethod instances added to this ExpandoMetaClass</source>
          <target state="translated">このExpandoMetaClassに追加されたExpando MetaMethodインスタンスのリストを返します。</target>
        </trans-unit>
        <trans-unit id="03bcf1ebdb3f1845ec23590efdee3d1e5238453b" translate="yes" xml:space="preserve">
          <source>Returns a list of the children of this Node.</source>
          <target state="translated">このノードの子のリストを返します。</target>
        </trans-unit>
        <trans-unit id="f72b68495e49ae56603e2818590ebb680effa45e" translate="yes" xml:space="preserve">
          <source>Returns a map containing all attributes of the Node of this NodeChild.</source>
          <target state="translated">このNodeChildのノードのすべての属性を含むマップを返します。</target>
        </trans-unit>
        <trans-unit id="7e649fdd9964142f6c6a005cba163362b504a8ab" translate="yes" xml:space="preserve">
          <source>Returns a map of the attributes of this Node.</source>
          <target state="translated">このノードの属性のマップを返します。</target>
        </trans-unit>
        <trans-unit id="c9ef64982d130a7dc779deab2e37ad15f578d492" translate="yes" xml:space="preserve">
          <source>Returns a meta map of constructors from given object.</source>
          <target state="translated">指定したオブジェクトのコンストラクタのメタマップを返します。</target>
        </trans-unit>
        <trans-unit id="79f4cfc4e22b2ce28b4026419f5b379142c9034d" translate="yes" xml:space="preserve">
          <source>Returns a meta map of operations from given object.</source>
          <target state="translated">与えられたオブジェクトの操作のメタマップを返します。</target>
        </trans-unit>
        <trans-unit id="fa19ca0ee797db2e8771b3c07359cfbbb9e7ca16" translate="yes" xml:space="preserve">
          <source>Returns a method descriptor for the given &lt;a href=&quot;../../ast/methodnode&quot;&gt;MethodNode&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;../../ast/methodnode&quot;&gt;MethodNodeの&lt;/a&gt;メソッド記述子を返します。</target>
        </trans-unit>
        <trans-unit id="a580772de4bbe2ea5b778c505021bf9da68d15ef" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Map&lt;/code&gt; containing all entries from &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt;, giving precedence to &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">戻り値新しい &lt;code&gt;Map&lt;/code&gt; からすべてのエントリを含む &lt;code&gt;left&lt;/code&gt; と &lt;code&gt;right&lt;/code&gt; 、優先の &lt;code&gt;right&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6811f17240a48be3d9c83d41c561a9aeab77c3b6" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Map&lt;/code&gt; containing all entries from &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt;, giving precedence to &lt;code&gt;right&lt;/code&gt;. Any keys appearing in both Maps will appear in the resultant map with values from the &lt;code&gt;right&lt;/code&gt; operand. If the &lt;code&gt;left&lt;/code&gt; map is one of TreeMap, LinkedHashMap, Hashtable or Properties, the returned Map will preserve that type, otherwise a HashMap will be returned.</source>
          <target state="translated">戻り値新しい &lt;code&gt;Map&lt;/code&gt; からすべてのエントリを含む &lt;code&gt;left&lt;/code&gt; と &lt;code&gt;right&lt;/code&gt; 、優先の &lt;code&gt;right&lt;/code&gt; 。両方のマップに表示されるキーはすべて、 &lt;code&gt;right&lt;/code&gt; オペランドの値とともに結果のマップに表示されます。場合は &lt;code&gt;left&lt;/code&gt; マップはTreeMapの、のLinkedHashMap、ハッシュテーブルまたはプロパティの一つであり、返されるマップは、そうでない場合はHashMapが返され、その型が保持されます。</target>
        </trans-unit>
        <trans-unit id="6088e4e9f1639c96b0fe3a50347bfde2d91f9e14" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Map&lt;/code&gt; containing all entries from &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;entries&lt;/code&gt;, giving precedence to &lt;code&gt;entries&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; と &lt;code&gt;entries&lt;/code&gt; からのすべてのエントリを含む新しい &lt;code&gt;Map&lt;/code&gt; を返し、エントリを優先し &lt;code&gt;entries&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12089e6425bea2d003833911bf698e3730fd9b5e" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Map&lt;/code&gt; containing all entries from &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;entries&lt;/code&gt;, giving precedence to &lt;code&gt;entries&lt;/code&gt;. Any keys appearing in both Maps will appear in the resultant map with values from the &lt;code&gt;entries&lt;/code&gt; operand. If &lt;code&gt;self&lt;/code&gt; map is one of TreeMap, LinkedHashMap, Hashtable or Properties, the returned Map will preserve that type, otherwise a HashMap will be returned.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; と &lt;code&gt;entries&lt;/code&gt; からのすべてのエントリを含む新しい &lt;code&gt;Map&lt;/code&gt; を返し、エントリを優先し &lt;code&gt;entries&lt;/code&gt; 。両方のマップに表示されるすべてのキーは、 &lt;code&gt;entries&lt;/code&gt; オペランドの値とともに結果のマップに表示されます。場合は &lt;code&gt;self&lt;/code&gt; マップはTreeMapの、のLinkedHashMap、ハッシュテーブルまたはプロパティの一つであり、返されるマップは、そうでない場合はHashMapが返され、その型が保持されます。</target>
        </trans-unit>
        <trans-unit id="a95ef38000834cc5311a599cb97c0a9da59e9154" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;SpreadMap&lt;/code&gt; from this map.</source>
          <target state="translated">このマップから新しい &lt;code&gt;SpreadMap&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d23ed0a39c572a020dd255e9972b0e0fe6b623c4" translate="yes" xml:space="preserve">
          <source>Returns a new Array containing the items from the original Array but with duplicates removed using the natural ordering of the items in the array.</source>
          <target state="translated">元の配列の項目を含む新しい配列を返しますが、 配列内の項目の自然な順序を用いて重複を取り除いたものを返します。</target>
        </trans-unit>
        <trans-unit id="e35dc2c9d37c7278672a5dac065182f2fd65569f" translate="yes" xml:space="preserve">
          <source>Returns a new Array containing the items from the original Array but with duplicates removed with the supplied comparator determining which items are unique.</source>
          <target state="translated">元の配列の項目を含む新しい配列を返しますが、重複は取り除かれており、 どの項目が一意であるかは与えられた比較器で判断されます。</target>
        </trans-unit>
        <trans-unit id="fbbe600c4822a88d3606485d5d552a60ddbb372c" translate="yes" xml:space="preserve">
          <source>Returns a new Reader on the underlying source object.</source>
          <target state="translated">基底にあるソースオブジェクト上の新しいReaderを返します。</target>
        </trans-unit>
        <trans-unit id="0c9cfbd18b3791909453287ce3594ce62f7362ca" translate="yes" xml:space="preserve">
          <source>Returns a new Reader on the underlying source object. Returns null if the source can't be reopened.</source>
          <target state="translated">ソースオブジェクト上の新しいReaderを返します。ソースを再オープンできない場合は null を返します。</target>
        </trans-unit>
        <trans-unit id="ea4fcd065d03a0de98ceaa3756ebb10b1ca04807" translate="yes" xml:space="preserve">
          <source>Returns a new String which is the same as the original except the first letter will be lowercase except for some special cases as per JavaBean handling.</source>
          <target state="translated">JavaBeanの処理に従ったいくつかの特殊なケースを除き、最初の文字が小文字になることを除いて、元の文字列と同じ新しい文字列を返します。</target>
        </trans-unit>
        <trans-unit id="d1553cd1e5f8ef07b7976d07779a7e5089c8219d" translate="yes" xml:space="preserve">
          <source>Returns a new String which is the same as the original except the first letter will be lowercase except for some special cases as per JavaBean handling. In particular, if the first two letters are both uppercase, e.g. URL, then no change of case occurs. Originally inspired by the method with the same name in java.lang.Introspector. See also: https://stackoverflow.com/questions/4052840/most-efficient-way-to-make-the-first-character-of-a-string-lower-case/4052914</source>
          <target state="translated">JavaBeanの処理に従ったいくつかの特殊なケースを除いて、最初の文字が小文字になることを除いて、元の文字列と同じ新しい文字列を返します。特に、最初の2文字が両方とも大文字の場合、例えばURLのように、大文字小文字の変更は発生しません。元々は、java.lang.Introspectorの同名のメソッドにインスパイアされています。https://stackoverflow.com/questions/4052840/most-efficient-way-to-make-the-first-character-of-a-string-lower-case/4052914 も参照してください。</target>
        </trans-unit>
        <trans-unit id="5342d4a53bc903661785585481ecc6557cd70e64" translate="yes" xml:space="preserve">
          <source>Returns a new map containing the first &lt;code&gt;num&lt;/code&gt; elements from the head of this map.</source>
          <target state="translated">このマップの先頭から最初の &lt;code&gt;num&lt;/code&gt; 要素を含む新しいマップを返します。</target>
        </trans-unit>
        <trans-unit id="f13cf742991bb4b100a6c2280ae3762d7ba6e7e4" translate="yes" xml:space="preserve">
          <source>Returns a new map containing the first &lt;code&gt;num&lt;/code&gt; elements from the head of this map. If the map instance does not have ordered keys, then this function could return a random &lt;code&gt;num&lt;/code&gt; entries. Groovy by default uses LinkedHashMap, so this shouldn't be an issue in the main.</source>
          <target state="translated">このマップの先頭から最初の &lt;code&gt;num&lt;/code&gt; 要素を含む新しいマップを返します。マップインスタンスに順序付けされたキーがない場合、この関数はランダムな &lt;code&gt;num&lt;/code&gt; エントリを返す可能性があります。GroovyはデフォルトでLinkedHashMapを使用するため、これはメインでは問題になりません。</target>
        </trans-unit>
        <trans-unit id="7d9585553d538541c9b50fe75ad9861e49ffd492" translate="yes" xml:space="preserve">
          <source>Returns a new path element that can be configured.</source>
          <target state="translated">設定可能な新しいパス要素を返します。</target>
        </trans-unit>
        <trans-unit id="21669794cce966c5b38f44383b58b4429964b7a5" translate="yes" xml:space="preserve">
          <source>Returns a new path element that can be configured. Gets called for instance by Ant when it encounters a nested &amp;lt;classpath&amp;gt; element.</source>
          <target state="translated">構成可能な新しいパス要素を返します。ネストされた&amp;lt;classpath&amp;gt;要素に遭遇すると、たとえばAntによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c177d09d1d38030b9b9018fcdcc8736bfb5fac6e" translate="yes" xml:space="preserve">
          <source>Returns a normal variable.</source>
          <target state="translated">通常の変数を返します。</target>
        </trans-unit>
        <trans-unit id="6e1a0917bca799ed0634e65811e66f3e4b4ba63a" translate="yes" xml:space="preserve">
          <source>Returns a property name equivalent for the given setter name or null if it is not a getter</source>
          <target state="translated">与えられたセッター名に相当するプロパティ名を返します。</target>
        </trans-unit>
        <trans-unit id="5f5fec74f19a65d0a93d636583ddf2c123574f22" translate="yes" xml:space="preserve">
          <source>Returns a reference to the one and only registry instance.</source>
          <target state="translated">唯一のレジストリインスタンスへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="84c3c25f335b77e1fda377cc0ca0976d5f35986e" translate="yes" xml:space="preserve">
          <source>Returns a sampling of the source at the specified line and column, or null if it is unavailable.</source>
          <target state="translated">指定した行と列のソースのサンプリングを返します。</target>
        </trans-unit>
        <trans-unit id="fe710c62a9949ddecc5157da661948f4c817375d" translate="yes" xml:space="preserve">
          <source>Returns a sequential &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt; containing a single element.</source>
          <target state="translated">単一の要素を含むシーケンシャル&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="64f0b280eab0770b5c4c72279891d10895ab320b" translate="yes" xml:space="preserve">
          <source>Returns a sequential &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt; with the specified array as its source.</source>
          <target state="translated">指定された配列をソースとして持つシーケンシャル&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="7bb380be5f59bd8a3138f5fdd2aea0e3c3883ecb" translate="yes" xml:space="preserve">
          <source>Returns a sequential &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt; with the specified element(s) as its source.</source>
          <target state="translated">指定された要素をソースとして持つシーケンシャル&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="87945f5595dba0543abe231199212e807aa26cdc" translate="yes" xml:space="preserve">
          <source>Returns a set of entries for registered runners.</source>
          <target state="translated">登録されているランナーのエントリーのセットを返します。</target>
        </trans-unit>
        <trans-unit id="b0cba946006f281724b68f6e1e8585428ce0bac0" translate="yes" xml:space="preserve">
          <source>Returns a set of entries for registered runners. This is a snapshot of the registry and any subsequent registry changes will not be reflected in the set.</source>
          <target state="translated">登録されたランナーのエントリのセットを返します。これはレジストリのスナップショットであり、その後のレジストリの変更はセットには反映されません。</target>
        </trans-unit>
        <trans-unit id="65e61a7be0b62a8baadf6c6288afee502c046899" translate="yes" xml:space="preserve">
          <source>Returns a set view of the keys contained in this map.</source>
          <target state="translated">このマップに含まれるキーのセットビューを返します。</target>
        </trans-unit>
        <trans-unit id="50497ad8b131bfc53cf7f231dbf600178836721b" translate="yes" xml:space="preserve">
          <source>Returns a set view of the keys contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from this map, via the</source>
          <target state="translated">このマップに含まれるキーのセットビューを返します。セットはマップによってバックアップされているため、マップへの変更はセットに反映され、その逆も同様です。セットは要素の削除をサポートしています。</target>
        </trans-unit>
        <trans-unit id="170304c7a8831fe8ffc0dbeb321c0c42a9b64d0b" translate="yes" xml:space="preserve">
          <source>Returns a shallow copy of this</source>
          <target state="translated">の浅いコピーを返します。</target>
        </trans-unit>
        <trans-unit id="bbef0aefdb5d73acbe4bef6cb95f43df122f88ab" translate="yes" xml:space="preserve">
          <source>Returns a shallow copy of this ConfigObject, keys and configuration entries are not cloned.</source>
          <target state="translated">この ConfigObject の浅いコピーを返します。</target>
        </trans-unit>
        <trans-unit id="d93b91d118dfce1d1a7a223779cbb6ea01f9059b" translate="yes" xml:space="preserve">
          <source>Returns a sorted version of the given array using the supplied comparator to determine the resulting order.</source>
          <target state="translated">与えられた比較器を用いて、結果の順序を決定するために指定された配列の並べ替え版を返します。</target>
        </trans-unit>
        <trans-unit id="55b21f4823793fd0321ac63368b16cde21a456bb" translate="yes" xml:space="preserve">
          <source>Returns a sorted version of the given array using the supplied comparator.</source>
          <target state="translated">指定された比較器を用いて、指定された配列のソートされたバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="7f76cb4b9e8ce248c90cc61f0387168a2fbecc32" translate="yes" xml:space="preserve">
          <source>Returns a string containing the text of the children of this Node.</source>
          <target state="translated">このノードの子のテキストを含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="d81f187d27d39a1b679a070082f6760a7cab8d56" translate="yes" xml:space="preserve">
          <source>Returns a string detailing possible solutions to a missing constructor if no good solutions can be found a empty string is returned.</source>
          <target state="translated">コンストラクタが見つからない場合の解決策の詳細を文字列で返します。</target>
        </trans-unit>
        <trans-unit id="d753f3a657084259770bac3eb0f661967d4ac2a8" translate="yes" xml:space="preserve">
          <source>Returns a string detailing possible solutions to a missing field or property if no good solutions can be found a empty string is returned.</source>
          <target state="translated">見つからないフィールドやプロパティに対する解決策の詳細を文字列で返します。</target>
        </trans-unit>
        <trans-unit id="d770439347db34f5be1169a0ab2468e9ae05dbb6" translate="yes" xml:space="preserve">
          <source>Returns a string detailing possible solutions to a missing method if no good solutions can be found a empty string is returned.</source>
          <target state="translated">見つからないメソッドに対する解決策の詳細を文字列で返します。</target>
        </trans-unit>
        <trans-unit id="42737acf40b9897704aa4a4847611c8e28cae095" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this QName</source>
          <target state="translated">この QName の文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="0cb25eb7de367fef6015b31dd7b7e8dad8366d57" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this method</source>
          <target state="translated">このメソッドの文字列表現を返します</target>
        </trans-unit>
        <trans-unit id="7066c0d884719c448ea15ad25481fa91f265dd52" translate="yes" xml:space="preserve">
          <source>Returns a suffix of this Iterable where elements are dropped from the front while the given closure evaluates to true.</source>
          <target state="translated">このイテレータブルのサフィックスを返します。</target>
        </trans-unit>
        <trans-unit id="2b7844ea32baeb27e387fb611251af26cded0f30" translate="yes" xml:space="preserve">
          <source>Returns a suffix of this List where elements are dropped from the front while the given Closure evaluates to true.</source>
          <target state="translated">このリストの接尾辞を返し、与えられたClosureがtrueと評価されている間に要素が前面から削除されます。</target>
        </trans-unit>
        <trans-unit id="d339efdcb5fc917731c5813c21c9472621e9401c" translate="yes" xml:space="preserve">
          <source>Returns a suffix of this List where elements are dropped from the front while the given Closure evaluates to true. Similar to &lt;a href=&quot;#dropWhile(java.lang.Iterable,%20groovy.lang.Closure)&quot;&gt;dropWhile(Iterable, groovy.lang.Closure)&lt;/a&gt; except that it attempts to preserve the type of the original list.</source>
          <target state="translated">指定されたクロージャーがtrueと評価されている間に要素が前面から削除される、このリストのサフィックスを返します。&lt;a href=&quot;#dropWhile(java.lang.Iterable,%20groovy.lang.Closure)&quot;&gt;dropWhile（Iterable、groovy.lang.Closure）&lt;/a&gt;と似ていますが、元のリストのタイプを保持しようとする点が異なります。</target>
        </trans-unit>
        <trans-unit id="d1404f0cf2d129cc20ea2e1fec6c5dca05fc9a1d" translate="yes" xml:space="preserve">
          <source>Returns a suffix of this SortedSet where elements are dropped from the front while the given Closure evaluates to true.</source>
          <target state="translated">このSortedSetのサフィックスを返し、与えられたClosureがtrueと評価されている間に要素が前面から削除されます。</target>
        </trans-unit>
        <trans-unit id="d1a9e3e02f585dc7447eb80d1a6ffba375d7570d" translate="yes" xml:space="preserve">
          <source>Returns a suffix of this SortedSet where elements are dropped from the front while the given Closure evaluates to true. Similar to &lt;a href=&quot;#dropWhile(java.lang.Iterable,%20groovy.lang.Closure)&quot;&gt;dropWhile(Iterable, groovy.lang.Closure)&lt;/a&gt; except that it attempts to preserve the type of the original SortedSet.</source>
          <target state="translated">指定されたクロージャーがtrueと評価されている間に要素が前面から削除される、このSortedSetのサフィックスを返します。&lt;a href=&quot;#dropWhile(java.lang.Iterable,%20groovy.lang.Closure)&quot;&gt;dropWhile（Iterable、groovy.lang.Closure）&lt;/a&gt;と似ていますが、元のSortedSetのタイプを保持しようとする点が異なります。</target>
        </trans-unit>
        <trans-unit id="23932adec9ca295db37d9303a328ccfef2a3d719" translate="yes" xml:space="preserve">
          <source>Returns a super class or interface for a given class depending on a given target.</source>
          <target state="translated">指定したターゲットに応じて、指定したクラスのスーパークラスまたはインターフェイスを返します。</target>
        </trans-unit>
        <trans-unit id="d03be663dd7936da94513e437da1a969ae9c8d17" translate="yes" xml:space="preserve">
          <source>Returns a super class or interface for a given class depending on a given target. If the target is no super class or interface, then null will be returned. For a non-primitive array type, returns an array of the componentType's super class or interface if the target is also an array.</source>
          <target state="translated">与えられたターゲットに応じて、与えられたクラスのスーパークラスまたはインターフェイスを返します。ターゲットがスーパークラスまたはインターフェイスでない場合は、null を返します。プリミティブではない配列型の場合、ターゲットが配列でもある場合は、componentTypeのスーパークラスまたはインターフェイスの配列を返します。</target>
        </trans-unit>
        <trans-unit id="fc9a32112ac1ce2d52e5326a76c4326be212b894" translate="yes" xml:space="preserve">
          <source>Returns a unmodifiable snapshot &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Set.html&quot;&gt;Set&lt;/a&gt; view of the keys contained in this map.</source>
          <target state="translated">このマップに含まれるキーの変更不可能なスナップショット&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Set.html&quot;&gt;セット&lt;/a&gt;ビューを返します。</target>
        </trans-unit>
        <trans-unit id="99b63cbf8c43a48e270cb3fe1bfdcdad21153f0a" translate="yes" xml:space="preserve">
          <source>Returns a unmodifiable snapshot &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Set.html&quot;&gt;Set&lt;/a&gt; view of the keys contained in this map. The set's iterator returns the keys whose order of iteration is the ascending order in which its entries are considered eligible for retention, from the least-likely to be retained to the most-likely.</source>
          <target state="translated">このマップに含まれるキーの変更不可能なスナップショット&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Set.html&quot;&gt;セット&lt;/a&gt;ビューを返します。セットのイテレータは、反復の順序が、エントリが保持の対象と見なされる昇順であるキーを、保持される可能性が最も低いものから最も可能性が高いものへと返します。</target>
        </trans-unit>
        <trans-unit id="9b11a227088261eab695abf8661b59990306e195" translate="yes" xml:space="preserve">
          <source>Returns a view of a portion of this list.</source>
          <target state="translated">このリストの一部のビューを返します。</target>
        </trans-unit>
        <trans-unit id="b6d788f88d5da734e262473c37f3d97de981aaac" translate="yes" xml:space="preserve">
          <source>Returns a view of a portion of this list. This method returns a list with the same lazy list settings as the original list.</source>
          <target state="translated">このリストの一部のビューを返します。このメソッドは、元のリストと同じ遅延リスト設定のリストを返します。</target>
        </trans-unit>
        <trans-unit id="2cb09ed2dbdcc87fbffdb5e23bc58914c3a5ecb7" translate="yes" xml:space="preserve">
          <source>Returns a wrapped type if, and only if, the provided class node is a primitive type.</source>
          <target state="translated">指定されたクラスノードがプリミティブ型である場合にのみ、ラップされた型を返します。</target>
        </trans-unit>
        <trans-unit id="a4fc580f70bb8bceb9b2fa52ea419f054d176fa2" translate="yes" xml:space="preserve">
          <source>Returns a wrapped type if, and only if, the provided class node is a primitive type. This method differs from ClassHelper#getWrapper(org.codehaus.groovy.ast.ClassNode) as it will return the same instance if the provided type is not a generic type.</source>
          <target state="translated">提供されたクラスノードがプリミティブ型である場合にのみ、ラップされた型を返します。このメソッドは ClassHelper#getWrapper(org.codehaus.groovy.ast.ClassNode)とは異なり、提供された型が汎用型でない場合に同じインスタンスを返すことになります。</target>
        </trans-unit>
        <trans-unit id="a58bcdec2d230658b6cd2aba0d75259ea7e9f45b" translate="yes" xml:space="preserve">
          <source>Returns all Groovy classes loaded by this class loader.</source>
          <target state="translated">このクラスローダーによってロードされたすべての Groovy クラスを返します。</target>
        </trans-unit>
        <trans-unit id="2b7697dcc5d212da0ae0d1c32b6a069c9432b7f6" translate="yes" xml:space="preserve">
          <source>Returns all package names found at URL; accepts jar files and folders.</source>
          <target state="translated">URL で見つかったすべてのパッケージ名を返します。</target>
        </trans-unit>
        <trans-unit id="c1acafdbdcbaf5653bd723de236e4f5076112b95" translate="yes" xml:space="preserve">
          <source>Returns all packagenames found at URL, accepts jar files and folders</source>
          <target state="translated">URL で見つかったすべてのパッケージ名を返します。</target>
        </trans-unit>
        <trans-unit id="5b7b24784e757f147c1fe692c7b443bfbe789ab7" translate="yes" xml:space="preserve">
          <source>Returns all packagenames found at URL, accepts jar files and folders @return</source>
          <target state="translated">URL で見つかったすべてのパッケージ名を返します。</target>
        </trans-unit>
        <trans-unit id="b49d30540723feda6b4311f0b64cae13e79159ad" translate="yes" xml:space="preserve">
          <source>Returns all registered class change listener for constant meta classes.</source>
          <target state="translated">定数メタクラス用に登録されている全てのクラス変更リスナーを返します。</target>
        </trans-unit>
        <trans-unit id="ff7e6539a2384cd48d402123b453ad830919d2f6" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;Instant&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds after this instant.</source>
          <target state="translated">このインスタントの &lt;code&gt;seconds&lt;/code&gt; 秒後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;インスタント&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="f16939f6374f9c4dba0d552bb6895eb008072f2e" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;Instant&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds before this instant.</source>
          <target state="translated">このインスタントの &lt;code&gt;seconds&lt;/code&gt; 秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;インスタント&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="99557af446513dc3c69d1e13dcbb49851a9a5d74" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;Instant&lt;/a&gt; that is one second after this instant.</source>
          <target state="translated">このインスタントの1秒後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;インスタント&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="dcc1c5095adab8bca0d886d3ffd280ccde8342af" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;Instant&lt;/a&gt; that one second before this instant.</source>
          <target state="translated">このインスタントの1秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;インスタント&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="58ec7072d791eb2eeead54dfc499a22e7fc58ece" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt; of this date/time and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt;この日付/時刻のと提供&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17dd127a4703eb414c387356f82e9ac32ddb9a1e" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt; of this offset and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt;本のオフセットおよび提供&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;のLocalDateTime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1724facd60b7a2dcb291f4d06c524b7c1de81179" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt; of this offset and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;LocalTime&lt;/a&gt;.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt;本のオフセットおよび提供&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html&quot;&gt;にLocalTime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f5ff54c540f7cceb9e6d6cec6b2765993e161ba2" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt; of this time and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt;.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt;今回の、提供&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LOCALDATE&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="232e64c1596d52e2f24bda99af13a5ac747f3fa5" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt; one second after this date/time.</source>
          <target state="translated">この日付/時刻の1秒後に&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTimeを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="13dd7b1a922fd73e384f1f3aa639a9b72769110b" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt; one second before this date/time.</source>
          <target state="translated">この日付/時刻の1秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTimeを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="7a8329be9c6d743ef13df0e567b5ff34b5ae759c" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds after this date/time.</source>
          <target state="translated">この日付/時刻から &lt;code&gt;seconds&lt;/code&gt; 秒後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="ddcce23623290876f433397b41dd1008b9ee0799" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds before this date/time.</source>
          <target state="translated">この日付/時刻の &lt;code&gt;seconds&lt;/code&gt; 秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="74a0eda64f32596020f86abd36e4509d96fe0e62" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt; with the time portion cleared.</source>
          <target state="translated">時間部分がクリアされた&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html&quot;&gt;OffsetDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="36ebf955324c0624628d9297b6a44d51fb79dfee" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt; of this time and the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;.</source>
          <target state="translated">戻り値&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt;今回の、提供&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c5206164965f94b14a92eca7e4ce0abe17b08a3" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds after this time.</source>
          <target state="translated">この時間の &lt;code&gt;seconds&lt;/code&gt; 秒後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="7eb319ae4c7531805ebe614607d6940f61e667e2" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt; that is &lt;code&gt;seconds&lt;/code&gt; seconds before this time.</source>
          <target state="translated">この時間の &lt;code&gt;seconds&lt;/code&gt; 秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="752bc3d78a9d1425864736cebef7130835733bb3" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt; that is one second after this time.</source>
          <target state="translated">この時間の1秒後の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="05b6a625843b947d6da530477eca3196960b8c7f" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt; that is one second before this time.</source>
          <target state="translated">この時間の1秒前の&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/OffsetTime.html&quot;&gt;OffsetTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="1b5548493fd12e5b30e1e9bc2237971506e9f01b" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt; with the time portion cleared.</source>
          <target state="translated">時間部分がクリアされた&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="93f39511940c0f7df656a3dd819620e20edbd28a" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses each match.</source>
          <target state="translated">各一致をトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="66e33136321b7113a6bf7f400550547674bae322" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the ButtonGroup one AbstractButton at a time.</source>
          <target state="translated">ButtonGroupを一度に1つのAbstractButtonをトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="50e31afd85810aaf79f8dad3a06792450b671572" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the ComboBox one item at a time.</source>
          <target state="translated">一度に1つのアイテムをComboBoxをトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="5a4f50d501fc7f3afd6b04438536156c59c9eecb" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the Container one Component at a time.</source>
          <target state="translated">コンテナを一度に1つのコンポーネントでトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="91a3c926bd4cdde4c4fce6c9179ab1fdce918a2d" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the DefaultListModel one element at a time.</source>
          <target state="translated">DefaultListModelを一度に1要素ずつトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="bfd4d12bede19ce62f4e44cea7ef4aa37d3b468c" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the DefaultTableModel one item at a time.</source>
          <target state="translated">DefaultTableModelを一度に1項目ずつトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="5665fb8dcabf693155e6c021662ffb11ed81404f" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the JMenu one component at a time.</source>
          <target state="translated">JMenuを一度に1つのコンポーネントでトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="183a24132b7faf7d29d93f3c1118fb6e0e9a88c3" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the JMenuBar one menu at a time.</source>
          <target state="translated">JMenuBarを一度に1つのメニューをトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="4979f92fca11800240a1d5831d83bea3c12c77bd" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the JPopupMenu one MenuElement at a time.</source>
          <target state="translated">JPopupMenuを一度に1つのMenuElementでトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="24b0cbe82276b6a9e613115e1138a745ff781451" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the JTabbedPane one Component tab at a time.</source>
          <target state="translated">JTabbedPaneを一度に1つのコンポーネントタブをトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="8fa213dd6285612a3b48839a7e3c4b359d5e13f2" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the ListModel one element at a time.</source>
          <target state="translated">ListModelを一度に1要素ずつトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="52286ad03fd7074ac3b7e000c37476083dc6d3d6" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the MutableComboBoxModel one item at a time.</source>
          <target state="translated">MutableComboBoxModelを一度に1項目ずつトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="e88f2cbb504c2d3dcff32e5ca8f347daedb5bf6c" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the TableColumnModel one TableColumn at a time.</source>
          <target state="translated">TableColumnModelを一度に1つのTableColumnをトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="9a3f6666d50fd591dd59daec73ffebf100499bbd" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the TableModel one row at a time.</source>
          <target state="translated">TableModelを一度に1行ずつトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="5706c5e8c48895ab091c6c4777460ac174422cb6" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the TreeNode one node at a time.</source>
          <target state="translated">TreeNodeを一度に1ノードずつトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="bbb6892e4ab263581e3d11ea02a811055b784cd9" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;Iterator&lt;/a&gt; which traverses the TreePath one path at a time.</source>
          <target state="translated">TreePathを一度に1つのパスでトラバースする&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html&quot;&gt;イテレータ&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="4e226570469d9f1c3bf4a95634805b9838fc0f77" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;Iterator&lt;/code&gt; of the children of the node.</source>
          <target state="translated">ノードの子の &lt;code&gt;Iterator&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7531e69ceec9c5e356a994f38ce36a52a95a454b" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;Object&lt;/code&gt; representing the name of the node.</source>
          <target state="translated">ノードの名前を表す &lt;code&gt;Object&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b611da207bd852507cc59684b3f7a7bf357f0e2d" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;Object&lt;/code&gt; representing the value of the node.</source>
          <target state="translated">ノードの値を表す &lt;code&gt;Object&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="884184c2efd46916e495edcd3fb1c72d68d8967d" translate="yes" xml:space="preserve">
          <source>Returns an Iterator containing all of the items from this iterator except the last one.</source>
          <target state="translated">このイテレータから最後の項目を除くすべての項目を含むイテレータを返します。</target>
        </trans-unit>
        <trans-unit id="eb57de53e6c45942878974f75991c7ab3029714d" translate="yes" xml:space="preserve">
          <source>Returns an MBeanServerConnection instance.</source>
          <target state="translated">MBeanServerConnection のインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="50166713efbcde690538bfd5d446001721918fb4" translate="yes" xml:space="preserve">
          <source>Returns an MBeanServerConnection instance. It searches for declared MBeanServers from the MBeanServerFactory. If none is found, the default Platform MBeanServer is returned.</source>
          <target state="translated">MBeanServerConnection のインスタンスを返します。MBeanServerFactory から宣言された MBeanServer を検索します。見つからない場合は、デフォルトの Platform MBeanServer が返されます。</target>
        </trans-unit>
        <trans-unit id="fd6436af8b43d109dc6616ef6808767d7046b8ee" translate="yes" xml:space="preserve">
          <source>Returns an array containing all values from this queue in the sequence they were added.</source>
          <target state="translated">このキューのすべての値を、追加された順に含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="dc92f2d0aa3841dd5a6ecd61199d548cd5b0b49a" translate="yes" xml:space="preserve">
          <source>Returns an array containing the elements of the stream.</source>
          <target state="translated">ストリームの要素を含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="9140a2979537d9b8342702d7322689c75f862fc4" translate="yes" xml:space="preserve">
          <source>Returns an array of non null elements from the source array.</source>
          <target state="translated">元の配列から null ではない要素の配列を返します。</target>
        </trans-unit>
        <trans-unit id="413022a9b4ce52c11f5fdf58bcebdf9122ccd497" translate="yes" xml:space="preserve">
          <source>Returns an empty &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;Iterator&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="ad79e0cde95dbdae573ae7845c987a4dc80e753a" translate="yes" xml:space="preserve">
          <source>Returns an empty &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;String&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="7849598b2d890b185431330d40d22f315a753d3e" translate="yes" xml:space="preserve">
          <source>Returns an empty iterator.</source>
          <target state="translated">空のイテレータを返します。</target>
        </trans-unit>
        <trans-unit id="04dc51ecc5755b0dfdd9ea9f5b3cfa6a8687e3f8" translate="yes" xml:space="preserve">
          <source>Returns an empty sequential &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt;.</source>
          <target state="translated">空のシーケンシャル&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;ストリームを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="dce1e7f5dd6e885ef5787d03cc080d9333b2aae6" translate="yes" xml:space="preserve">
          <source>Returns an enumeration of the keys in this table.</source>
          <target state="translated">このテーブルのキーの一覧を返します。</target>
        </trans-unit>
        <trans-unit id="0d734602b0784f7456cb78eb8f882e6446b3939f" translate="yes" xml:space="preserve">
          <source>Returns an enumeration of the values in this table.</source>
          <target state="translated">このテーブルの値の列挙を返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
