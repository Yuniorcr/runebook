<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="markdown">
    <body>
      <group id="markdown">
        <trans-unit id="c0d5b90cc83dc08acb244d43500b12b7f63b99dc" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2004 John Gruber</source>
          <target state="translated">&amp;copy;2004 John Gruber</target>
        </trans-unit>
        <trans-unit id="6538d536cc11dbeb2500ecc0967a29d51a9eab42" translate="yes" xml:space="preserve">
          <source>(This sort of entity-encoding trick will indeed fool many, if not most, address-harvesting bots, but it definitely won&amp;rsquo;t fool all of them. It&amp;rsquo;s better than nothing, but an address published in this way will probably eventually start receiving spam.)</source>
          <target state="translated">（この種のエンティティエンコーディングトリックは、実際には、ほとんどではないにしても、多くのアドレス収集ボットをだましますが、すべてのボットをだますことはありません。スパム。）</target>
        </trans-unit>
        <trans-unit id="1668500f818740d5cc41f28746baca569bed3527" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; There is a known bug in Markdown.pl 1.0.1 which prevents single quotes from being used to delimit link titles.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Markdown.pl 1.0.1には既知のバグがあり、単一引用符を使用してリンクタイトルを区切ることができません。</target>
        </trans-unit>
        <trans-unit id="7bba9b42af79fce907856693563f94cd3e187925" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This document is itself written using Markdown; you can &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax.text&quot;&gt;see the source for it by adding &amp;lsquo;.text&amp;rsquo; to the URL&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このドキュメント自体はMarkdownを使用して作成されています。&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax.text&quot;&gt;URLに「.text」を追加すると、ソース&lt;/a&gt;が表示されます。</target>
        </trans-unit>
        <trans-unit id="dab2d878de2b749cbba5c452c1e746dd665ff86d" translate="yes" xml:space="preserve">
          <source>A code block continues until it reaches a line that is not indented (or the end of the article).</source>
          <target state="translated">コードブロックは、それがインデントされていない行(または記事の終わり)に到達するまで続きます。</target>
        </trans-unit>
        <trans-unit id="a8a2f9a975783a99dcd74f5d247d344d135a813d" translate="yes" xml:space="preserve">
          <source>A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line &amp;mdash; a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.</source>
          <target state="translated">段落は、1行以上の空白行で区切られた、1行以上の連続したテキスト行です。（空白行とは、空白行のように見える任意の行です。空白またはタブのみを含む行は空白と見なされます。）通常の段落は、空白またはタブでインデントされるべきではありません。</target>
        </trans-unit>
        <trans-unit id="b83edd0dd60631a3004907a34b5d734adaf7c5a4" translate="yes" xml:space="preserve">
          <source>Admittedly, it&amp;rsquo;s fairly difficult to devise a &amp;ldquo;natural&amp;rdquo; syntax for placing images into a plain text document format.</source>
          <target state="translated">確かに、画像をプレーンテキストドキュメント形式に配置するための「自然な」構文を考案することはかなり困難です。</target>
        </trans-unit>
        <trans-unit id="460fca52cfe85bf46815e348701129e5059e9673" translate="yes" xml:space="preserve">
          <source>Ampersands in particular are bedeviling for web writers. If you want to write about &amp;lsquo;AT&amp;amp;T&amp;rsquo;, you need to write &amp;lsquo;&lt;code&gt;AT&amp;amp;amp;T&lt;/code&gt;&amp;rsquo;. You even need to escape ampersands within URLs. Thus, if you want to link to:</source>
          <target state="translated">特にアンパサンドはWebライターにとっては厄介です。「AT＆T」について書きたい場合は、「 &lt;code&gt;AT&amp;amp;amp;T&lt;/code&gt; 」と書く必要があります。URL内のアンパサンドをエスケープする必要さえあります。したがって、あなたがリンクしたい場合：</target>
        </trans-unit>
        <trans-unit id="bcaf13e65aa0d07002352e53e4e69175af63e015" translate="yes" xml:space="preserve">
          <source>An exclamation mark: &lt;code&gt;!&lt;/code&gt;;</source>
          <target state="translated">感嘆符： &lt;code&gt;!&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="41b777d8562201938e9c8b6f1a3ca39f151d5d58" translate="yes" xml:space="preserve">
          <source>And then define the link:</source>
          <target state="translated">そして、リンクを定義します。</target>
        </trans-unit>
        <trans-unit id="910103c3c1a61e6bf4be2687b7d279456a3e65d9" translate="yes" xml:space="preserve">
          <source>Any decent text editor should make email-style quoting easy. For example, with BBEdit, you can make a selection and choose Increase Quote Level from the Text menu.</source>
          <target state="translated">まともなテキストエディタであれば、電子メール形式の引用を簡単に行うことができます。例えば、BBEditでは、選択してテキストメニューから「引用レベルを上げる」を選択することができます。</target>
        </trans-unit>
        <trans-unit id="907a126cd626c00db7850c74135aea6cdc048e4e" translate="yes" xml:space="preserve">
          <source>Any number of underlining &lt;code&gt;=&lt;/code&gt;&amp;rsquo;s or &lt;code&gt;-&lt;/code&gt;&amp;rsquo;s will work.</source>
          <target state="translated">下線 &lt;code&gt;=&lt;/code&gt; や &lt;code&gt;-&lt;/code&gt; はいくつでも機能します。</target>
        </trans-unit>
        <trans-unit id="582e1316036c44e3c34ae36794a7ac45d71dd890" translate="yes" xml:space="preserve">
          <source>As of this writing, Markdown has no syntax for specifying the dimensions of an image; if this is important to you, you can simply use regular HTML &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">この記事の執筆時点では、Markdownには画像のサイズを指定する構文はありません。これが重要な場合は、通常のHTML &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; タグを使用できます。</target>
        </trans-unit>
        <trans-unit id="f99a3adde446a05f41d11f20311358cf298ee1c5" translate="yes" xml:space="preserve">
          <source>Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</source>
          <target state="translated">Atx スタイルのヘッダは、ヘッダレベル 1-6 に対応する 1-6 のハッシュ文字を行頭に使用します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="db7647dc14a933dc8c125c371bee6a271e91de83" translate="yes" xml:space="preserve">
          <source>Automatic Escaping for Special Characters</source>
          <target state="translated">特殊文字の自動エスケープ</target>
        </trans-unit>
        <trans-unit id="3a608c3b98ddf00f7d2bdc0085e7a8a58db112ec" translate="yes" xml:space="preserve">
          <source>Automatic Links</source>
          <target state="translated">自動リンク</target>
        </trans-unit>
        <trans-unit id="00711dee7200b1a0216f60c0fb2a32c293192334" translate="yes" xml:space="preserve">
          <source>Automatic links for email addresses work similarly, except that Markdown will also perform a bit of randomized decimal and hex entity-encoding to help obscure your address from address-harvesting spambots. For example, Markdown will turn this:</source>
          <target state="translated">電子メールアドレスの自動リンクは、Markdownはまた、アドレス-収穫スパボットからアドレスを不明瞭にするのを助けるためにランダム化された10進数と16進数のエンティティ-エンコーディングのビットを実行することを除いて、同様に動作します。例えば、Markdownはこれを有効にします。</target>
        </trans-unit>
        <trans-unit id="7eddf2e692bbe2944055253e903e03f92dc85c03" translate="yes" xml:space="preserve">
          <source>Backslash Escapes</source>
          <target state="translated">バックスラッシュエスケープ</target>
        </trans-unit>
        <trans-unit id="5f8e5b4f9c274df0abdd9e9685df46b7de1986f5" translate="yes" xml:space="preserve">
          <source>Because link names may contain spaces, this shortcut even works for multiple words in the link text:</source>
          <target state="translated">リンク名にはスペースが含まれている場合があるため、このショートカットはリンクテキスト内の複数の単語に対しても機能します。</target>
        </trans-unit>
        <trans-unit id="8ac6960d99f504b227c089027d841f4e9c385375" translate="yes" xml:space="preserve">
          <source>Block Elements</source>
          <target state="translated">ブロック要素</target>
        </trans-unit>
        <trans-unit id="1831c9c6e6c7258f58fb4df7b34ef7042b997c4b" translate="yes" xml:space="preserve">
          <source>Blockquotes</source>
          <target state="translated">Blockquotes</target>
        </trans-unit>
        <trans-unit id="c4f09e32e1ee918297614eec376d27b756717aea" translate="yes" xml:space="preserve">
          <source>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of &lt;code&gt;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; のレベルをさらに追加することで、ブロッククォートをネストすることができます（つまり、ブロッククォート内のブロッククォート）。</target>
        </trans-unit>
        <trans-unit id="fe05706f5db76d1384e16051c3f2dfb6047c2653" translate="yes" xml:space="preserve">
          <source>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:</source>
          <target state="translated">ブロッククオートは、ヘッダー、リスト、およびコードブロックを含む他のMarkdown要素を含むことができます。</target>
        </trans-unit>
        <trans-unit id="3078387e628a5a46fcd71ea9dabe1e269c044232" translate="yes" xml:space="preserve">
          <source>Both of the above examples will produce the following HTML output:</source>
          <target state="translated">上記の両方の例では、以下のようなHTML出力が得られます。</target>
        </trans-unit>
        <trans-unit id="32dc439098e3b562ea8db4788aee9f85217464de" translate="yes" xml:space="preserve">
          <source>But if you surround an &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt; with spaces, it&amp;rsquo;ll be treated as a literal asterisk or underscore.</source>
          <target state="translated">ただし、 &lt;code&gt;*&lt;/code&gt; または &lt;code&gt;_&lt;/code&gt; をスペースで囲むと、リテラルのアスタリスクまたはアンダースコアとして扱われます。</target>
        </trans-unit>
        <trans-unit id="28e27698660cdd2870cc2a6e4e8d078772b21912" translate="yes" xml:space="preserve">
          <source>But if you want to be lazy, you don&amp;rsquo;t have to:</source>
          <target state="translated">しかし、怠惰になりたい場合は、次のことを行う必要はありません。</target>
        </trans-unit>
        <trans-unit id="77916c1fd878688710112f6d8e4819cc4f1c7e81" translate="yes" xml:space="preserve">
          <source>But this:</source>
          <target state="translated">でもこれは</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="9d591ca7c10ad619dc6206d37ac2017aefefbb31" translate="yes" xml:space="preserve">
          <source>Code Blocks</source>
          <target state="translated">コードブロック</target>
        </trans-unit>
        <trans-unit id="0bbeff6580b571e553481c3cd433d3f2a397b451" translate="yes" xml:space="preserve">
          <source>Emphasis</source>
          <target state="translated">Emphasis</target>
        </trans-unit>
        <trans-unit id="a115d2f6c7be0cb214552b4e52b1b9985dd00f9d" translate="yes" xml:space="preserve">
          <source>Emphasis can be used in the middle of a word:</source>
          <target state="translated">強調は単語の途中で使うことができます。</target>
        </trans-unit>
        <trans-unit id="ba59131a6a69a3624bc3f20ad3f38a2df0e64f95" translate="yes" xml:space="preserve">
          <source>For any markup that is not covered by Markdown&amp;rsquo;s syntax, you simply use HTML itself. There&amp;rsquo;s no need to preface it or delimit it to indicate that you&amp;rsquo;re switching from Markdown to HTML; you just use the tags.</source>
          <target state="translated">Markdownの構文でカバーされていないマークアップについては、単にHTML自体を使用します。MarkdownからHTMLに切り替えることを示すために、前置きしたり、区切る必要はありません。タグを使用するだけです。</target>
        </trans-unit>
        <trans-unit id="a277c9aa42ac9722f9552716b8a68b0534863d73" translate="yes" xml:space="preserve">
          <source>For comparison, here is the same paragraph written using Markdown&amp;rsquo;s inline link style:</source>
          <target state="translated">比較のため、Markdownのインラインリンクスタイルを使用して記述された同じ段落を次に示します。</target>
        </trans-unit>
        <trans-unit id="2612d924dc512976df7c57175e3cc7544c14301a" translate="yes" xml:space="preserve">
          <source>For example, to add an HTML table to a Markdown article:</source>
          <target state="translated">例えば、Markdown記事にHTMLテーブルを追加する場合。</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="eb45b26189b0aaa6cdcfe9282988851e44809035" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of reference links in action:</source>
          <target state="translated">実際の参照リンクの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="33488d4b3cbb5ba16b0673469e60db7094fb670e" translate="yes" xml:space="preserve">
          <source>Horizontal Rules</source>
          <target state="translated">水平方向のルール</target>
        </trans-unit>
        <trans-unit id="210d42d55cc816e45443d039271690ba4a7db679" translate="yes" xml:space="preserve">
          <source>However, inside Markdown code spans and blocks, angle brackets and ampersands are &lt;em&gt;always&lt;/em&gt; encoded automatically. This makes it easy to use Markdown to write about HTML code. (As opposed to raw HTML, which is a terrible format for writing about HTML syntax, because every single &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; in your example code needs to be escaped.)</source>
          <target state="translated">ただし、Markdownコードのスパンとブロック内では、山かっことアンパサンドは&lt;em&gt;常に&lt;/em&gt;自動的にエンコードされます。これにより、Markdownを使用してHTMLコードについて簡単に記述できます。（例のコード内のすべての &lt;code&gt;&amp;lt;&lt;/code&gt; および &lt;code&gt;&amp;amp;&lt;/code&gt; はエスケープする必要があるため、HTML構文について記述するためのひどい形式である生のHTMLとは対照的です。）</target>
        </trans-unit>
        <trans-unit id="d1139a240c747a110079a4ee5414a8841a1ebf0e" translate="yes" xml:space="preserve">
          <source>If list items are separated by blank lines, Markdown will wrap the items in &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags in the HTML output. For example, this input:</source>
          <target state="translated">リストアイテムが空白行で区切られている場合、MarkdownはHTML出力の &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; タグでアイテムをラップします。たとえば、次の入力：</target>
        </trans-unit>
        <trans-unit id="c44e2839a274487a94a93ee344ff68dc573e5bdf" translate="yes" xml:space="preserve">
          <source>If you do use lazy list numbering, however, you should still start the list with the number 1. At some point in the future, Markdown may support starting ordered lists at an arbitrary number.</source>
          <target state="translated">遅延リストのナンバリングを使用する場合、番号1でリストを開始する必要があります。将来のある時点で、Markdownは任意の番号で順序付きリストを開始することをサポートするかもしれません。</target>
        </trans-unit>
        <trans-unit id="e520bcbe59f22175710bd3119bb35d86c91fac28" translate="yes" xml:space="preserve">
          <source>If you instead wrote the list in Markdown like this:</source>
          <target state="translated">代わりにこのようにMarkdownでリストを書いたとします。</target>
        </trans-unit>
        <trans-unit id="b75fd32916c339f46bfc2c425730bf6a28150f02" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re referring to a local resource on the same server, you can use relative paths:</source>
          <target state="translated">同じサーバー上のローカルリソースを参照している場合は、相対パスを使用できます。</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="080f0bf22f0a2322f9937a9fc359284e25158627" translate="yes" xml:space="preserve">
          <source>In HTML, there are two characters that demand special treatment: &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt;. Left angle brackets are used to start tags; ampersands are used to denote HTML entities. If you want to use them as literal characters, you must escape them as entities, e.g. &lt;code&gt;&amp;amp;lt;&lt;/code&gt;, and &lt;code&gt;&amp;amp;amp;&lt;/code&gt;.</source>
          <target state="translated">HTMLには、特別な扱いを必要とする2つの文字、 &lt;code&gt;&amp;lt;&lt;/code&gt; と &lt;code&gt;&amp;amp;&lt;/code&gt; があります。左山括弧はタグの開始に使用されます。アンパサンドは、HTMLエンティティを示すために使用されます。それらをリテラル文字として使用したい場合は、エンティティとしてエスケープする必要があります（例： &lt;code&gt;&amp;amp;lt;&lt;/code&gt; 、および &lt;code&gt;&amp;amp;amp;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11ccd80c421a7aab03c958e188ba1498f5e1a126" translate="yes" xml:space="preserve">
          <source>In both styles, the link text is delimited by [square brackets].</source>
          <target state="translated">どちらのスタイルでも、リンクテキストは[角括弧]で区切られています。</target>
        </trans-unit>
        <trans-unit id="fdc48c4ace77dc596756f4396d174ebbb8ccea0d" translate="yes" xml:space="preserve">
          <source>In other words, a &lt;em&gt;number-period-space&lt;/em&gt; sequence at the beginning of a line. To avoid this, you can backslash-escape the period:</source>
          <target state="translated">つまり、行の先頭にある&lt;em&gt;数字とピリオドのスペースの&lt;/em&gt;シーケンスです。これを回避するには、ピリオドをバックスラッシュでエスケープします。</target>
        </trans-unit>
        <trans-unit id="0632cbe6a983b23f7fbe099f40c4ed3e9c6009e6" translate="yes" xml:space="preserve">
          <source>Inline HTML</source>
          <target state="translated">インラインHTML</target>
        </trans-unit>
        <trans-unit id="b49aebceb055ce0c9b6174493255ad5e7b2e8255" translate="yes" xml:space="preserve">
          <source>Inline image syntax looks like this:</source>
          <target state="translated">インライン画像の構文は次のようになります。</target>
        </trans-unit>
        <trans-unit id="5fa2563526b0013d75316ab13145366e130ac560" translate="yes" xml:space="preserve">
          <source>It looks nice if you indent every line of the subsequent paragraphs, but here again, Markdown will allow you to be lazy:</source>
          <target state="translated">後続の段落のすべての行をインデントするときれいに見えますが、ここでもMarkdownはあなたが怠け者になることを許します。</target>
        </trans-unit>
        <trans-unit id="11832fc4172b5493052a8c250b5b1fd48bc4d6ae" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:</source>
          <target state="translated">リストをマークするために使用する実際の数値は、Markdownが生成するHTML出力に影響を与えないことに注意することが重要です。上記のリストから生成されるHTMLマークダウンは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="92b81f374f6e75541149851605694877df0ac180" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s worth noting that it&amp;rsquo;s possible to trigger an ordered list by accident, by writing something like this:</source>
          <target state="translated">次のようなものを書くことにより、偶然に順序付きリストをトリガーすることが可能であることは注目に値します：</target>
        </trans-unit>
        <trans-unit id="cc5b2a062f05dd148b4ef24c76639416ebcc59f3" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD License.</source>
          <target state="translated">BSDライセンスの下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="7f4751628c92cfc0bdffa4d18ab109de8e7fd877" translate="yes" xml:space="preserve">
          <source>Link definition names may consist of letters, numbers, spaces, and punctuation &amp;mdash; but they are &lt;em&gt;not&lt;/em&gt; case sensitive. E.g. these two links:</source>
          <target state="translated">リンク定義名は、文字、数字、スペース、および句読点で構成されます&amp;mdash;ただし、大文字と小文字は区別され&lt;em&gt;ません&lt;/em&gt;。たとえば、次の2つのリンク：</target>
        </trans-unit>
        <trans-unit id="72e494f0ad7b543fd20ebbb060434bd35901eee2" translate="yes" xml:space="preserve">
          <source>Link definitions are only used for creating links during Markdown processing, and are stripped from your document in the HTML output.</source>
          <target state="translated">リンク定義はMarkdown処理中にリンクを作成するためにのみ使用され、HTML出力でドキュメントから削除されます。</target>
        </trans-unit>
        <trans-unit id="65fa0097bbbaa77ae11d487cd7e4142ad21d9089" translate="yes" xml:space="preserve">
          <source>Link definitions can be placed anywhere in your Markdown document. I tend to put them immediately after each paragraph in which they&amp;rsquo;re used, but if you want, you can put them all at the end of your document, sort of like footnotes.</source>
          <target state="translated">リンク定義は、Markdownドキュメントのどこにでも配置できます。私はそれらが使用される各段落の直後にそれらを置く傾向がありますが、もし望むなら、一種の脚注のように、それらをあなたの文書の最後に置くことができます。</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="ec2c6a243773c447d3de60b9fe63005515144562" translate="yes" xml:space="preserve">
          <source>List items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab:</source>
          <target state="translated">リスト項目は複数の段落で構成することができます。リスト項目の後続の各段落は、4つのスペースまたは1つのタブでインデントされなければなりません。</target>
        </trans-unit>
        <trans-unit id="8d67895fd9d80a8276bb790706790a15bcaf3de8" translate="yes" xml:space="preserve">
          <source>List markers typically start at the left margin, but may be indented by up to three spaces. List markers must be followed by one or more spaces or a tab.</source>
          <target state="translated">リストマーカーは通常、左マージンから始まりますが、最大3つのスペースでインデントすることができます。リストマーカーの後には、1つ以上のスペースまたはタブを付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="23e67fceae0d77dd571dd25695fc0499faf1bb77" translate="yes" xml:space="preserve">
          <source>Markdown</source>
          <target state="translated">Markdown</target>
        </trans-unit>
        <trans-unit id="e12b8fd54e9a2919e402beac83049b8e23f93519" translate="yes" xml:space="preserve">
          <source>Markdown allows you to be lazy and only put the &lt;code&gt;&amp;gt;&lt;/code&gt; before the first line of a hard-wrapped paragraph:</source>
          <target state="translated">Markdownを使用すると、遅延することができ、ハードラップされた段落の最初の行の前に &lt;code&gt;&amp;gt;&lt;/code&gt; のみを置くことができます。</target>
        </trans-unit>
        <trans-unit id="1734a1d3c691a33de88e6ed7a43711785fa0a248" translate="yes" xml:space="preserve">
          <source>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown&amp;rsquo;s formatting syntax. For example, if you wanted to surround a word with literal asterisks (instead of an HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag), you can use backslashes before the asterisks, like this:</source>
          <target state="translated">Markdownを使用すると、バックスラッシュエスケープを使用して、Markdownのフォーマット構文で特別な意味を持つリテラル文字を生成できます。たとえば、（HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; タグの代わりに）リテラルアスタリスクで単語を囲む場合、次のようにアスタリスクの前にバックスラッシュを使用できます。</target>
        </trans-unit>
        <trans-unit id="3f6dc1d09583546690eb994697c48c03d0046b5e" translate="yes" xml:space="preserve">
          <source>Markdown allows you to use these characters naturally, taking care of all the necessary escaping for you. If you use an ampersand as part of an HTML entity, it remains unchanged; otherwise it will be translated into &lt;code&gt;&amp;amp;amp;&lt;/code&gt;.</source>
          <target state="translated">Markdownを使用すると、これらの文字を自然に使用して、必要なすべてのエスケープを処理できます。アンパサンドをHTMLエンティティの一部として使用する場合、アンパサンドは変更されません。それ以外の場合は、 &lt;code&gt;&amp;amp;amp;&lt;/code&gt; に変換されます。。</target>
        </trans-unit>
        <trans-unit id="d9f84c007e4ce5c357d0f84c3957252d0cc74c66" translate="yes" xml:space="preserve">
          <source>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</source>
          <target state="translated">Markdownは可能な限り読みやすく、書きやすいように意図されています。</target>
        </trans-unit>
        <trans-unit id="9cf9305d131ca65a78890b71a9ea304ca5116ed5" translate="yes" xml:space="preserve">
          <source>Markdown is not a replacement for HTML, or even close to it. Its syntax is very small, corresponding only to a very small subset of HTML tags. The idea is &lt;em&gt;not&lt;/em&gt; to create a syntax that makes it easier to insert HTML tags. In my opinion, HTML tags are already easy to insert. The idea for Markdown is to make it easy to read, write, and edit prose. HTML is a &lt;em&gt;publishing&lt;/em&gt; format; Markdown is a &lt;em&gt;writing&lt;/em&gt; format. Thus, Markdown&amp;rsquo;s formatting syntax only addresses issues that can be conveyed in plain text.</source>
          <target state="translated">MarkdownはHTMLに置き換わるものではありません。その構文は非常に小さく、HTMLタグの非常に小さなサブセットにのみ対応しています。アイデアは、HTMLタグを挿入しやすくする構文を作成することではあり&lt;em&gt;ません&lt;/em&gt;。私の意見では、HTMLタグはすでに挿入するのが簡単です。 Markdownのアイデアは、散文を読み、書き、編集しやすくすることです。 HTMLは&lt;em&gt;公開&lt;/em&gt;形式です。 Markdownは&lt;em&gt;書き込み&lt;/em&gt;フォーマットです。したがって、Markdownのフォーマット構文は、プレーンテキストで伝達できる問題のみを扱います。</target>
        </trans-unit>
        <trans-unit id="3caa8d1bf863b824dc12742b5873a5e893005386" translate="yes" xml:space="preserve">
          <source>Markdown provides backslash escapes for the following characters:</source>
          <target state="translated">Markdownは以下の文字にバックスラッシュエスケープを提供します。</target>
        </trans-unit>
        <trans-unit id="5a1c0e0cc29a7c6673c43d00c125c56345094940" translate="yes" xml:space="preserve">
          <source>Markdown supports a shortcut style for creating &amp;ldquo;automatic&amp;rdquo; links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</source>
          <target state="translated">Markdownは、URLおよび電子メールアドレスの「自動」リンクを作成するためのショートカットスタイルをサポートしています。URLまたは電子メールアドレスを山かっこで囲むだけです。つまり、URLまたは電子メールアドレスの実際のテキストを表示し、それをクリック可能なリンクにしたい場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="2d72a50b494d4c854c7f1a823289218083dcdfe5" translate="yes" xml:space="preserve">
          <source>Markdown supports ordered (numbered) and unordered (bulleted) lists.</source>
          <target state="translated">Markdownは順序付き(番号付き)と順序なし(箇条書き)のリストをサポートしています。</target>
        </trans-unit>
        <trans-unit id="f11174e516b39f10632812ec05b8564952938601" translate="yes" xml:space="preserve">
          <source>Markdown supports two style of links: &lt;em&gt;inline&lt;/em&gt; and &lt;em&gt;reference&lt;/em&gt;.</source>
          <target state="translated">Markdownは、&lt;em&gt;インライン&lt;/em&gt;と&lt;em&gt;参照の&lt;/em&gt; 2つのスタイルのリンクをサポートしてい&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2183b015c0f3e61939e0166f08c13e399f626c21" translate="yes" xml:space="preserve">
          <source>Markdown supports two styles of headers, &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt; and &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt;.</source>
          <target state="translated">Markdownは、&lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt;と&lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atxの&lt;/a&gt; 2つのスタイルのヘッダーをサポートしています。</target>
        </trans-unit>
        <trans-unit id="739cfd72329e888251033923cdcbc244ee6c0ab2" translate="yes" xml:space="preserve">
          <source>Markdown treats asterisks (&lt;code&gt;*&lt;/code&gt;) and underscores (&lt;code&gt;_&lt;/code&gt;) as indicators of emphasis. Text wrapped with one &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt; will be wrapped with an HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag; double &lt;code&gt;*&lt;/code&gt;&amp;rsquo;s or &lt;code&gt;_&lt;/code&gt;&amp;rsquo;s will be wrapped with an HTML &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag. E.g., this input:</source>
          <target state="translated">マークダウンは、アスタリスク（ &lt;code&gt;*&lt;/code&gt; ）とアンダースコア（ &lt;code&gt;_&lt;/code&gt; ）を強調のインジケータとして扱います。1で包まれたテキスト &lt;code&gt;*&lt;/code&gt; または &lt;code&gt;_&lt;/code&gt; は HTMLでラップされます &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; タグ。double &lt;code&gt;*&lt;/code&gt; または &lt;code&gt;_&lt;/code&gt; は、HTML &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; タグでラップされます。たとえば、この入力：</target>
        </trans-unit>
        <trans-unit id="109cafaee6f5ae526456328e6a9cc0bd95104652" translate="yes" xml:space="preserve">
          <source>Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: &lt;em&gt;inline&lt;/em&gt; and &lt;em&gt;reference&lt;/em&gt;.</source>
          <target state="translated">Markdownは、リンクの構文に似た画像構文を使用して、&lt;em&gt;インライン&lt;/em&gt;と&lt;em&gt;参照の&lt;/em&gt; 2つのスタイルを可能にし&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="47c88c4082fe1a7bfe78ca8dc4b42bb8cb482d9d" translate="yes" xml:space="preserve">
          <source>Markdown uses email-style &lt;code&gt;&amp;gt;&lt;/code&gt; characters for blockquoting. If you&amp;rsquo;re familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a &lt;code&gt;&amp;gt;&lt;/code&gt; before every line:</source>
          <target state="translated">Markdownは、ブロック引用に電子メールスタイルの &lt;code&gt;&amp;gt;&lt;/code&gt; 文字を使用します。メールメッセージのテキストの一部を引用することに慣れている場合は、Markdownでブロック引用を作成する方法を知っています。テキストをハードラップし、すべての行の前に &lt;code&gt;&amp;gt;&lt;/code&gt; を付けると最適です。</target>
        </trans-unit>
        <trans-unit id="73ea7a6e5368fe855c7d7d5d589b809544fb68e0" translate="yes" xml:space="preserve">
          <source>Markdown will generate:</source>
          <target state="translated">Markdownが生成します。</target>
        </trans-unit>
        <trans-unit id="d3693e344e48b5e3510f30880f28e0579e9dc898" translate="yes" xml:space="preserve">
          <source>Markdown will translate it to:</source>
          <target state="translated">Markdownが翻訳してくれます。</target>
        </trans-unit>
        <trans-unit id="956aaeb0a1e940a4eb0012b00e3cbf46c9ffc27d" translate="yes" xml:space="preserve">
          <source>Markdown will turn this into:</source>
          <target state="translated">Markdownでこれに変わります。</target>
        </trans-unit>
        <trans-unit id="3f51ce3e5b69ca05c2e4ea0ac0dee16417759485" translate="yes" xml:space="preserve">
          <source>Markdown&amp;rsquo;s syntax is intended for one purpose: to be used as a format for &lt;em&gt;writing&lt;/em&gt; for the web.</source>
          <target state="translated">Markdownの構文は、Web 用の&lt;em&gt;記述&lt;/em&gt;形式として使用することを目的としています。</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="540ed7819e3db742046278c5887b21ef9b6263a3" translate="yes" xml:space="preserve">
          <source>Note that Markdown formatting syntax is not processed within block-level HTML tags. E.g., you can&amp;rsquo;t use Markdown-style &lt;code&gt;*emphasis*&lt;/code&gt; inside an HTML block.</source>
          <target state="translated">Markdownフォーマット構文は、ブロックレベルのHTMLタグ内では処理されないことに注意してください。たとえば、HTMLブロック内でMarkdownスタイルの &lt;code&gt;*emphasis*&lt;/code&gt; 使用することはできません。</target>
        </trans-unit>
        <trans-unit id="4baee9739eb4b2099b8367549c2c99420b0f5465" translate="yes" xml:space="preserve">
          <source>One level of indentation &amp;mdash; 4 spaces or 1 tab &amp;mdash; is removed from each line of the code block. For example, this:</source>
          <target state="translated">1レベルのインデント（4つのスペースまたは1つのタブ）がコードブロックの各行から削除されます。たとえば、これ：</target>
        </trans-unit>
        <trans-unit id="9c466b4dba415c271d16384485593c218e0be40e" translate="yes" xml:space="preserve">
          <source>Optionally, you may &amp;ldquo;close&amp;rdquo; atx-style headers. This is purely cosmetic &amp;mdash; you can use this if you think it looks better. The closing hashes don&amp;rsquo;t even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :</source>
          <target state="translated">オプションで、atxスタイルのヘッダーを「閉じる」ことができます。これは純粋に表面的なものです。見た目が良いと思われる場合に使用できます。終了ハッシュは、ヘッダーを開くために使用されるハッシュの数と一致する必要さえありません。（開始ハッシュの数によってヘッダーレベルが決まります。）：</target>
        </trans-unit>
        <trans-unit id="429f881166ab401a34e0dcfd463bce9725c202a0" translate="yes" xml:space="preserve">
          <source>Ordered lists use numbers followed by periods:</source>
          <target state="translated">順序付きリストでは、数字とピリオドの後にピリオドを使用します。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="785069bd6fde247fc331c1a7b64613cad3303de9" translate="yes" xml:space="preserve">
          <source>Paragraphs and Line Breaks</source>
          <target state="translated">段落と改行</target>
        </trans-unit>
        <trans-unit id="496e9438ab65557e3360c256d99d6d71460da8a3" translate="yes" xml:space="preserve">
          <source>Philosophy</source>
          <target state="translated">Philosophy</target>
        </trans-unit>
        <trans-unit id="63bed2e2fd41ce8a350d398bdeaaefaafd0b5b21" translate="yes" xml:space="preserve">
          <source>Pre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the lines of a code block are interpreted literally. Markdown wraps a code block in both &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">事前にフォーマットされたコードブロックは、プログラミングまたはマークアップのソースコードの記述に使用されます。通常の段落を形成するのではなく、コードブロックの行は文字どおりに解釈されます。Markdownは、 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; タグと&amp;lt;code&amp;gt;タグの両方でコードブロックをラップします。</target>
        </trans-unit>
        <trans-unit id="9dc6a97873ba8f7fa69ccc466981976b38979df8" translate="yes" xml:space="preserve">
          <source>Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it&amp;rsquo;s been marked up with tags or formatting instructions. While Markdown&amp;rsquo;s syntax has been influenced by several existing text-to-HTML filters &amp;mdash; including &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt;, &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt;, &lt;a href=&quot;http://textism.com/tools/textile/&quot;&gt;Textile&lt;/a&gt;, &lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt;, &lt;a href=&quot;http://www.triptico.com/software/grutatxt.html&quot;&gt;Grutatext&lt;/a&gt;, and &lt;a href=&quot;http://ettext.taint.org/doc/&quot;&gt;EtText&lt;/a&gt; &amp;mdash; the single biggest source of inspiration for Markdown&amp;rsquo;s syntax is the format of plain text email.</source>
          <target state="translated">ただし、読みやすさは何よりも重要視されます。マークダウン形式のドキュメントは、タグやフォーマットの指示でマークアップされているように見せることなく、そのままテキスト形式で公開できる必要があります。Markdownの構文は、&lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt;、&lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt;、&lt;a href=&quot;http://textism.com/tools/textile/&quot;&gt;Textile&lt;/a&gt;、&lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt;、&lt;a href=&quot;http://www.triptico.com/software/grutatxt.html&quot;&gt;Grutatext&lt;/a&gt;、および&lt;a href=&quot;http://ettext.taint.org/doc/&quot;&gt;EtText&lt;/a&gt;など、既存のテキストからHTMLへのフィルターの影響を受けていますが、Markdownの構文のインスピレーションの最大の単一のソースは、プレーンテキストメールの形式です。</target>
        </trans-unit>
        <trans-unit id="4afbe0b0955d5463e4e2d856e179f16399a0e868" translate="yes" xml:space="preserve">
          <source>Reference-style image syntax looks like this:</source>
          <target state="translated">リファレンススタイルの画像構文は、次のようになります。</target>
        </trans-unit>
        <trans-unit id="422b835df5cb239a162359ee6a9a219b7161367d" translate="yes" xml:space="preserve">
          <source>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</source>
          <target state="translated">参照スタイルのリンクでは、2つ目の角括弧を使用しており、その中にリンクを識別するために選択したラベルを配置しています。</target>
        </trans-unit>
        <trans-unit id="20fbc7a879c7a7be33ab1f567dbf0049bf537562" translate="yes" xml:space="preserve">
          <source>Regular Markdown syntax is not processed within code blocks. E.g., asterisks are just literal asterisks within a code block. This means it&amp;rsquo;s also easy to use Markdown to write about Markdown&amp;rsquo;s own syntax.</source>
          <target state="translated">通常のMarkdown構文は、コードブロック内では処理されません。たとえば、アスタリスクは、コードブロック内の単なるアスタリスクです。つまり、Markdownを使用してMarkdownの独自の構文を記述するのも簡単です。</target>
        </trans-unit>
        <trans-unit id="ee90ced7f7e1f2056d6c10143291e05385bbb61a" translate="yes" xml:space="preserve">
          <source>Setext-style headers are &amp;ldquo;underlined&amp;rdquo; using equal signs (for first-level headers) and dashes (for second-level headers). For example:</source>
          <target state="translated">Setextスタイルのヘッダーは、等号（第1レベルのヘッダーの場合）とダッシュ（第2レベルのヘッダーの場合）を使用して「下線」が付けられます。例えば：</target>
        </trans-unit>
        <trans-unit id="fbcbd97e84e3e120d3c4f8a3a9e65a03d95d4aba" translate="yes" xml:space="preserve">
          <source>Similarly, because Markdown supports &lt;a href=&quot;#html&quot;&gt;inline HTML&lt;/a&gt;, if you use angle brackets as delimiters for HTML tags, Markdown will treat them as such. But if you write:</source>
          <target state="translated">同様に、Markdownは&lt;a href=&quot;#html&quot;&gt;インラインHTMLを&lt;/a&gt;サポートしているため、HTMLタグの区切り文字として山括弧を使用すると、Markdownはそれらをそのように扱います。しかし、あなたが書く場合：</target>
        </trans-unit>
        <trans-unit id="6cf632536056435e3d3e911d767519b939704724" translate="yes" xml:space="preserve">
          <source>So, if you want to include a copyright symbol in your article, you can write:</source>
          <target state="translated">なので、記事の中に著作権マークを入れたい場合には書きます。</target>
        </trans-unit>
        <trans-unit id="abf5bcbf5e5665c6e156e84cc849c4ef4dfac536" translate="yes" xml:space="preserve">
          <source>Span Elements</source>
          <target state="translated">スパン要素</target>
        </trans-unit>
        <trans-unit id="e9b860ff75a2e946e63f82bed2f657d3000aea22" translate="yes" xml:space="preserve">
          <source>Span-level HTML tags &amp;mdash; e.g. &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; &amp;mdash; can be used anywhere in a Markdown paragraph, list item, or header. If you want, you can even use HTML tags instead of Markdown formatting; e.g. if you&amp;rsquo;d prefer to use HTML &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags instead of Markdown&amp;rsquo;s link or image syntax, go right ahead.</source>
          <target state="translated">スパンレベルのHTMLタグ（例： &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; )は、Markdown段落、リストアイテム、またはヘッダーのどこでも使用できます。必要に応じて、Markdownフォーマットの代わりにHTMLタグを使用することもできます。たとえば、Markdownのリンクや画像構文の代わりにHTMLの &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; または &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; タグを使用したい場合は、先に進んでください。</target>
        </trans-unit>
        <trans-unit id="2c0a203fbf1955da31d924696d4cd269a5cb3056" translate="yes" xml:space="preserve">
          <source>Square brackets containing the link identifier (optionally indented from the left margin using up to three spaces);</source>
          <target state="translated">リンク識別子を含む角括弧 (オプションで左マージンから最大 3 スペースでインデント)。</target>
        </trans-unit>
        <trans-unit id="11e8a09abfceb997eddb8423e1781ebd95db28e7" translate="yes" xml:space="preserve">
          <source>That is:</source>
          <target state="translated">それは</target>
        </trans-unit>
        <trans-unit id="a89b046d626104f9b781fb7eb34b2998c9d46ce4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;implicit link name&lt;/em&gt; shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets &amp;mdash; e.g., to link the word &amp;ldquo;Google&amp;rdquo; to the google.com web site, you could simply write:</source>
          <target state="translated">&lt;em&gt;暗黙的なリンク名の&lt;/em&gt;ショートカットを使用すると、リンクテキスト自体が名前として使用されている場合には、リンクの名前を省略することができます。角括弧の空のセットを使用するだけです。たとえば、「Google」という単語をgoogle.com Webサイトにリンクするには、次のように書くだけです。</target>
        </trans-unit>
        <trans-unit id="ddd86d95d7c2a50ec3a5899fbccd01ee555a94c1" translate="yes" xml:space="preserve">
          <source>The backtick delimiters surrounding a code span may include spaces &amp;mdash; one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:</source>
          <target state="translated">コードスパンを囲むバックティック区切り文字には、スペースが含まれる場合があります。1つは開始後、1つは終了前です。これにより、コードスパンの先頭または末尾にリテラルバックティック文字を配置できます。</target>
        </trans-unit>
        <trans-unit id="a25c1c64959c5df35f2194e9661c372cf05505da" translate="yes" xml:space="preserve">
          <source>The following three link definitions are equivalent:</source>
          <target state="translated">以下の3つのリンク定義がそれに相当します。</target>
        </trans-unit>
        <trans-unit id="ad008fb6ff3f95e20172c473d13e9612def5397d" translate="yes" xml:space="preserve">
          <source>The implication of the &amp;ldquo;one or more consecutive lines of text&amp;rdquo; rule is that Markdown supports &amp;ldquo;hard-wrapped&amp;rdquo; text paragraphs. This differs significantly from most other text-to-HTML formatters (including Movable Type&amp;rsquo;s &amp;ldquo;Convert Line Breaks&amp;rdquo; option) which translate every line break character in a paragraph into a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">「1つ以上の連続したテキスト行」ルールの意味は、Markdownが「ハードラップされた」テキスト段落をサポートすることです。これは、段落内のすべての改行文字を &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; タグに変換する他のほとんどのテキストからHTMLへのフォーマッター（Movable Typeの「Convert Line Breaks」オプションを含む）とは大きく異なります。</target>
        </trans-unit>
        <trans-unit id="6125db63a9ede38a629c4c310fa6c3c9ef34c5f6" translate="yes" xml:space="preserve">
          <source>The link URL may, optionally, be surrounded by angle brackets:</source>
          <target state="translated">リンクURLは、オプションで角括弧で囲まれていてもよい。</target>
        </trans-unit>
        <trans-unit id="696b88d54d46942a32cc63cb4ba938dd6c935866" translate="yes" xml:space="preserve">
          <source>The only restrictions are that block-level HTML elements &amp;mdash; e.g. &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, etc. &amp;mdash; must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags around HTML block-level tags.</source>
          <target state="translated">唯一の制限は、ブロックレベルのHTML要素（例： &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; など）は、空白行、およびブロックの開始タグと終了タグによって周囲のコンテンツから分離する必要があることです。タブやスペースでインデントしないでください。 Markdownは、HTMLブロックレベルのタグの周囲に（不要な） &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; タグを追加しないように十分にスマートです。</target>
        </trans-unit>
        <trans-unit id="9abdc0d6490a38b1a77abed653610fc87d0fd8ad" translate="yes" xml:space="preserve">
          <source>The point of reference-style links is not that they&amp;rsquo;re easier to write. The point is that with reference-style links, your document source is vastly more readable. Compare the above examples: using reference-style links, the paragraph itself is only 81 characters long; with inline-style links, it&amp;rsquo;s 176 characters; and as raw HTML, it&amp;rsquo;s 234 characters. In the raw HTML, there&amp;rsquo;s more markup than there is text.</source>
          <target state="translated">参照スタイルのリンクの要点は、記述しやすいということではありません。要点は、参照スタイルのリンクを使用すると、ドキュメントソースが大幅に読みやすくなることです。上記の例を比較します。参照スタイルのリンクを使用すると、段落自体の長さが81文字だけになります。インラインスタイルのリンクでは、176文字です。そして生のHTMLとして、それは234文字です。生のHTMLでは、テキストよりもマークアップが多くなります。</target>
        </trans-unit>
        <trans-unit id="d7fdbca9e8e9ea917a83c9e40644c6afa5265f43" translate="yes" xml:space="preserve">
          <source>Then, anywhere in the document, you define your link label like this, on a line by itself:</source>
          <target state="translated">そして、ドキュメント内の任意の場所で、リンクラベルを次のように定義します。</target>
        </trans-unit>
        <trans-unit id="af974e363edf0f5134e48a7a8cf2f8708119807a" translate="yes" xml:space="preserve">
          <source>To create an inline link, use a set of regular parentheses immediately after the link text&amp;rsquo;s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an &lt;em&gt;optional&lt;/em&gt; title for the link, surrounded in quotes. For example:</source>
          <target state="translated">インラインリンクを作成するには、リンクテキストの右角かっこの直後に一連の通常のかっこを使用します。括弧内に、リンクをポイントするURL を、引用符で囲まれたリンクの&lt;em&gt;オプションの&lt;/em&gt;タイトルとともに配置します。例えば：</target>
        </trans-unit>
        <trans-unit id="c317653ea87843d2941407ecbd587dfe617de2e9" translate="yes" xml:space="preserve">
          <source>To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:</source>
          <target state="translated">コード スパン内にリテラルのバックティック文字を含めるには、複数のバックティックを開閉デリミタとして使用することができます。</target>
        </trans-unit>
        <trans-unit id="78db9fec9bb64edc346fd3229e5056435ebbda9b" translate="yes" xml:space="preserve">
          <source>To indicate a span of code, wrap it with backtick quotes (&lt;code&gt;`&lt;/code&gt;). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</source>
          <target state="translated">コードのスパンを示すには、バッククォート引用符（ &lt;code&gt;`&lt;/code&gt; ）で囲みます。事前にフォーマットされたコードブロックとは異なり、コードスパンは通常の段落内のコードを示します。例えば：</target>
        </trans-unit>
        <trans-unit id="1129c4fc38eb2add8558fd30931f69a828d8d5a9" translate="yes" xml:space="preserve">
          <source>To make lists look nice, you can wrap items with hanging indents:</source>
          <target state="translated">リストを素敵に見せるためには、吊り下げ式の凹みでアイテムをラッピングしてみてはいかがでしょうか。</target>
        </trans-unit>
        <trans-unit id="64393ec3c89de453098d4291beaa9f15263b912c" translate="yes" xml:space="preserve">
          <source>To produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. For example, given this input:</source>
          <target state="translated">Markdownでコードブロックを作成するには、ブロックの各行を少なくとも4スペースまたは1タブでインデントします。例えば、この入力が与えられているとします。</target>
        </trans-unit>
        <trans-unit id="b638787262478de1e0b32efb27eedc4c068b7b0e" translate="yes" xml:space="preserve">
          <source>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</source>
          <target state="translated">リテラルのアスタリスクやアンダースコアを強調の区切り文字として使用する場合は、バックスラッシュでエスケープすることができます。</target>
        </trans-unit>
        <trans-unit id="4600a74cdae1b2acf818a8c64c3d0fcac002945b" translate="yes" xml:space="preserve">
          <source>To put a blockquote within a list item, the blockquote&amp;rsquo;s &lt;code&gt;&amp;gt;&lt;/code&gt; delimiters need to be indented:</source>
          <target state="translated">リストアイテム内にブロッククォートを配置するには、ブロッククォートの &lt;code&gt;&amp;gt;&lt;/code&gt; 区切り文字をインデントする必要があります。</target>
        </trans-unit>
        <trans-unit id="ad4c9c3c9140148a2cfbb5e5b2ac17186c81c7f6" translate="yes" xml:space="preserve">
          <source>To put a code block within a list item, the code block needs to be indented &lt;em&gt;twice&lt;/em&gt; &amp;mdash; 8 spaces or two tabs:</source>
          <target state="translated">コードブロックをリストアイテム内に配置するには、コードブロックを&lt;em&gt;2回&lt;/em&gt;インデントする必要があります&amp;mdash; 8つのスペースまたは2つのタブ：</target>
        </trans-unit>
        <trans-unit id="a8210f71a9fc6ea563ec2acb672d3f127cea6a7e" translate="yes" xml:space="preserve">
          <source>To this end, Markdown&amp;rsquo;s syntax is comprised entirely of punctuation characters, which punctuation characters have been carefully chosen so as to look like what they mean. E.g., asterisks around a word actually look like *emphasis*. Markdown lists look like, well, lists. Even blockquotes look like quoted passages of text, assuming you&amp;rsquo;ve ever used email.</source>
          <target state="translated">このため、Markdownの構文は、すべて句読文字で構成されています。句読文字は、意味がわかるように慎重に選択されています。たとえば、単語の周りのアスタリスクは実際には*強調*のように見えます。マークダウンリストは、まあ、リストのように見えます。あなたが今までに電子メールを使用したことがあると仮定すると、ブロック引用でさえテキストの引用された一節のように見えます。</target>
        </trans-unit>
        <trans-unit id="482545e20c9b658bd5c0422841a52f96fd55a71c" translate="yes" xml:space="preserve">
          <source>Unlike block-level HTML tags, Markdown syntax &lt;em&gt;is&lt;/em&gt; processed within span-level tags.</source>
          <target state="translated">ブロックレベルのHTMLタグとは異なり、Markdown構文&lt;em&gt;は&lt;/em&gt;スパンレベルのタグ内&lt;em&gt;で&lt;/em&gt;処理されます。</target>
        </trans-unit>
        <trans-unit id="8629a43527178d06f33827ae98aeefe87595c470" translate="yes" xml:space="preserve">
          <source>Unordered lists use asterisks, pluses, and hyphens &amp;mdash; interchangably &amp;mdash; as list markers:</source>
          <target state="translated">順序付けられていないリストでは、リストマーカーとしてアスタリスク、プラス記号、ハイフンを（交換可能に）使用します。</target>
        </trans-unit>
        <trans-unit id="d6790749931892e153421be5ae64496b3d2ae4c2" translate="yes" xml:space="preserve">
          <source>Using the implicit link name shortcut, you could instead write:</source>
          <target state="translated">暗黙のリンク名ショートカットを使って、代わりに書くことができます。</target>
        </trans-unit>
        <trans-unit id="12dccb24dcbb30916556854946eaa0e9d1ea8896" translate="yes" xml:space="preserve">
          <source>When you &lt;em&gt;do&lt;/em&gt; want to insert a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; break tag using Markdown, you end a line with two or more spaces, then type return.</source>
          <target state="translated">Markdownを使用して &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; ブレークタグを挿入する場合&lt;em&gt;は&lt;/em&gt;、行を2つ以上のスペースで終了し、returnと入力します。</target>
        </trans-unit>
        <trans-unit id="cf79f7a1280e5c70ed6ce7f00d9c83f2283b42d4" translate="yes" xml:space="preserve">
          <source>Where &amp;ldquo;id&amp;rdquo; is the name of a defined image reference. Image references are defined using syntax identical to link references:</source>
          <target state="translated">ここで、「id」は定義された画像参照の名前です。画像参照は、リンク参照と同じ構文を使用して定義されます。</target>
        </trans-unit>
        <trans-unit id="8af1dddd6c2192a020edaa51d45191a8693034d0" translate="yes" xml:space="preserve">
          <source>Will produce:</source>
          <target state="translated">生産します。</target>
        </trans-unit>
        <trans-unit id="0109e186e9708f53237ceda58c2c319ac0c86b4e" translate="yes" xml:space="preserve">
          <source>With Markdown&amp;rsquo;s reference-style links, a source document much more closely resembles the final output, as rendered in a browser. By allowing you to move the markup-related metadata out of the paragraph, you can add links without interrupting the narrative flow of your prose.</source>
          <target state="translated">Markdownの参照スタイルのリンクを使用すると、ソースドキュメントは、ブラウザーでレンダリングされた最終出力に非常によく似ています。マークアップ関連のメタデータを段落の外に移動できるようにすることで、散文の物語の流れを妨げることなくリンクを追加できます。</target>
        </trans-unit>
        <trans-unit id="2e07aa11873ab8a78c67abad383a1f46bb80ff39" translate="yes" xml:space="preserve">
          <source>With a code span, ampersands and angle brackets are encoded as HTML entities automatically, which makes it easy to include example HTML tags. Markdown will turn this:</source>
          <target state="translated">コードスパンでは、アンパサンドと角括弧は自動的にHTMLエンティティとしてエンコードされ、HTMLタグの例を簡単に含めることができます。Markdownはこれを回します。</target>
        </trans-unit>
        <trans-unit id="30fa99acb63412ed6fe7830a97c835516b278b04" translate="yes" xml:space="preserve">
          <source>Within a code block, ampersands (&lt;code&gt;&amp;amp;&lt;/code&gt;) and angle brackets (&lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown &amp;mdash; just paste it and indent it, and Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this:</source>
          <target state="translated">コードブロック内では、アンパサンド（ &lt;code&gt;&amp;amp;&lt;/code&gt; ）および山かっこ（ &lt;code&gt;&amp;lt;&lt;/code&gt; および &lt;code&gt;&amp;gt;&lt;/code&gt; ）が自動的にHTMLエンティティに変換されます。これにより、Markdownを使用してサンプルHTMLソースコードを非常に簡単に含めることができます。単に貼り付けてインデントするだけで、Markdownはアンパサンドと山かっこをエンコードする手間を処理します。たとえば、これ：</target>
        </trans-unit>
        <trans-unit id="1917b1121856ba6448d997e21f0da88c17960d7b" translate="yes" xml:space="preserve">
          <source>Yes, this takes a tad more effort to create a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;, but a simplistic &amp;ldquo;every line break is a &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;&amp;rdquo; rule wouldn&amp;rsquo;t work for Markdown. Markdown&amp;rsquo;s email-style &lt;a href=&quot;#blockquote&quot;&gt;blockquoting&lt;/a&gt; and multi-paragraph &lt;a href=&quot;#list&quot;&gt;list items&lt;/a&gt; work best &amp;mdash; and look better &amp;mdash; when you format them with hard breaks.</source>
          <target state="translated">はい、これは &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; を作成するために少し手間がかかりますが、単純化された「すべての改行は &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 」というルールはMarkdownには機能しません。Markdownの電子メールスタイルの&lt;a href=&quot;#blockquote&quot;&gt;ブロッククォーティング&lt;/a&gt;と複数段落の&lt;a href=&quot;#list&quot;&gt;リストアイテムは&lt;/a&gt;、ハードブレークを使用してフォーマットすると、最適に機能し、見栄えもよくなります。</target>
        </trans-unit>
        <trans-unit id="db9008b860529587429158d862f44ec88aae7b8b" translate="yes" xml:space="preserve">
          <source>You can optionally use a space to separate the sets of brackets:</source>
          <target state="translated">括弧のセットを区切るためにスペースを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="adc8e4edceaac4f90d42e74810f4d0762808bd31" translate="yes" xml:space="preserve">
          <source>You can produce a horizontal rule tag (&lt;code&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt;) by placing three or more hyphens, asterisks, or underscores on a line by themselves. If you wish, you may use spaces between the hyphens or asterisks. Each of the following lines will produce a horizontal rule:</source>
          <target state="translated">3つ以上のハイフン、アスタリスク、またはアンダースコアを単独で行に配置することにより、水平方向のルールタグ（ &lt;code&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt; ）を作成できます。必要に応じて、ハイフンまたはアスタリスクの間にスペースを使用できます。次の各行は、水平方向の罫線を生成します。</target>
        </trans-unit>
        <trans-unit id="1b56d127649dcd1b69201318ebba33e36600494e" translate="yes" xml:space="preserve">
          <source>You can put the title attribute on the next line and use extra spaces or tabs for padding, which tends to look better with longer URLs:</source>
          <target state="translated">次の行にtitle属性を付けて、余分なスペースやタブを使ってパディングすることができますが、長いURLの方が見栄えが良い傾向にあります。</target>
        </trans-unit>
        <trans-unit id="328b956e40eb12ec24c6f2c3809db3a23e5de1e9" translate="yes" xml:space="preserve">
          <source>You can use whichever style you prefer; the lone restriction is that the same character must be used to open and close an emphasis span.</source>
          <target state="translated">好みのスタイルを使用することができますが、唯一の制限は、強調スパンの開閉には同じ文字を使用しなければならないということです。</target>
        </trans-unit>
        <trans-unit id="a37df7bee592eed386f6ca51fdfc387e3d9d9a32" translate="yes" xml:space="preserve">
          <source>You can write this:</source>
          <target state="translated">これを書けばいいのです。</target>
        </trans-unit>
        <trans-unit id="eb6597079c9c41dae265173a57ce1842ad3f2fba" translate="yes" xml:space="preserve">
          <source>and Markdown will leave it alone. But if you write:</source>
          <target state="translated">と書いておけば、Markdownは放っておいてくれます。でも書いてしまうと</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="e92e297a095229e3f96eb7b8a2c0f594650ed356" translate="yes" xml:space="preserve">
          <source>are equivalent.</source>
          <target state="translated">は等価です。</target>
        </trans-unit>
        <trans-unit id="f3307e5c2184356d282b7d4251634b3517eccc85" translate="yes" xml:space="preserve">
          <source>followed by a colon;</source>
          <target state="translated">の後にコロンが続きます。</target>
        </trans-unit>
        <trans-unit id="c8ad18cca3b55d330f961d3dd8ffa637236f14a0" translate="yes" xml:space="preserve">
          <source>followed by a set of parentheses, containing the URL or path to the image, and an optional &lt;code&gt;title&lt;/code&gt; attribute enclosed in double or single quotes.</source>
          <target state="translated">続いて、画像へのURLまたはパスを含む括弧のセット、および二重引用符または単一引用符で囲まれたオプションの &lt;code&gt;title&lt;/code&gt; 属性が続きます。</target>
        </trans-unit>
        <trans-unit id="9a97980dac77e35eef281c5447c26fb57c4157d1" translate="yes" xml:space="preserve">
          <source>followed by a set of square brackets, containing the &lt;code&gt;alt&lt;/code&gt; attribute text for the image;</source>
          <target state="translated">角括弧のセットが続き、画像の &lt;code&gt;alt&lt;/code&gt; 属性テキストが含まれます。</target>
        </trans-unit>
        <trans-unit id="47fd4359932de7c33251ad03b112d728fa146087" translate="yes" xml:space="preserve">
          <source>followed by one or more spaces (or tabs);</source>
          <target state="translated">の後に1つ以上のスペース(またはタブ)が続きます。</target>
        </trans-unit>
        <trans-unit id="977743aca6d254406555e2948b617fb3895ac215" translate="yes" xml:space="preserve">
          <source>followed by the URL for the link;</source>
          <target state="translated">の後にリンク先のURLを記入してください。</target>
        </trans-unit>
        <trans-unit id="50c36b78b17cd1e22d05283f105e72d71a278203" translate="yes" xml:space="preserve">
          <source>in your anchor tag &lt;code&gt;href&lt;/code&gt; attribute. Needless to say, this is easy to forget, and is probably the single most common source of HTML validation errors in otherwise well-marked-up web sites.</source>
          <target state="translated">アンカータグの &lt;code&gt;href&lt;/code&gt; 属性内。言うまでもありませんが、これは忘れがちであり、マークアップされたWebサイトでHTML検証エラーが発生する最も一般的な原因の1つです。</target>
        </trans-unit>
        <trans-unit id="00cc35fd55c9ce998c5df2c6ff4968db559d06e7" translate="yes" xml:space="preserve">
          <source>into something like this:</source>
          <target state="translated">このようなものに</target>
        </trans-unit>
        <trans-unit id="ae629e0254b0e6298a4ef8e35d54e657dba140ad" translate="yes" xml:space="preserve">
          <source>into:</source>
          <target state="translated">into:</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">に相当します。</target>
        </trans-unit>
        <trans-unit id="22b4fc3f2cd7f9b88323f9da8412f225e2c5c784" translate="yes" xml:space="preserve">
          <source>optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses.</source>
          <target state="translated">オプションで、リンクのタイトル属性を二重引用符または一重引用符で囲むか、または括弧で囲みます。</target>
        </trans-unit>
        <trans-unit id="7006b26f9c8f8d3e063ffcd613fdb2355cbc1ab6" translate="yes" xml:space="preserve">
          <source>or even:</source>
          <target state="translated">とかでもいい。</target>
        </trans-unit>
        <trans-unit id="2765637872d6c7f4a1ea927f391035ddbc1954b7" translate="yes" xml:space="preserve">
          <source>to produce:</source>
          <target state="translated">を生産します。</target>
        </trans-unit>
        <trans-unit id="8222bfd957b88f4f77050f917921bd92a15156fa" translate="yes" xml:space="preserve">
          <source>which will produce this:</source>
          <target state="translated">これを生成します。</target>
        </trans-unit>
        <trans-unit id="15908a3dfe43f847b449b8cfa7f9f514cb0db711" translate="yes" xml:space="preserve">
          <source>which will render in a browser as a clickable link to &amp;ldquo;address@example.com&amp;rdquo;.</source>
          <target state="translated">これにより、「address@example.com」へのクリック可能なリンクとしてブラウザに表示されます。</target>
        </trans-unit>
        <trans-unit id="332bb1c16e74014aa5e914635dddb04cc07228ad" translate="yes" xml:space="preserve">
          <source>will produce:</source>
          <target state="translated">が出てきます。</target>
        </trans-unit>
        <trans-unit id="b89333c0fd6b74aa751244d1f7ee6c372b91dfda" translate="yes" xml:space="preserve">
          <source>will turn into:</source>
          <target state="translated">になってしまいます。</target>
        </trans-unit>
        <trans-unit id="591e43b7df9af4655762cc3bd4d0fe1af4b2f8da" translate="yes" xml:space="preserve">
          <source>you need to encode the URL as:</source>
          <target state="translated">のようにURLをエンコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="77a2bd9e35edf579adb0bcbd56c24e3c58003db2" translate="yes" xml:space="preserve">
          <source>you&amp;rsquo;d get the exact same HTML output. The point is, if you want to, you can use ordinal numbers in your ordered Markdown lists, so that the numbers in your source match the numbers in your published HTML. But if you want to be lazy, you don&amp;rsquo;t have to.</source>
          <target state="translated">まったく同じHTML出力が得られます。重要なのは、必要に応じて、順序付けされたマークダウンリストで序数を使用して、ソースの数値が公開されたHTMLの数値と一致するようにすることです。しかし、怠惰になりたいのなら、そうする必要はありません。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
